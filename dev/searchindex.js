Search.setIndex({"docnames": ["citing", "contributing/build-docs", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/dev-setup", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/make-a-contribution", "explanation/active-deprecations", "explanation/gotchas", "explanation/index", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/custom-functions", "guides/index", "guides/solving/index", "guides/solving/solve-equation-algebraically", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/four_bar_linkage_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/joints", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers"], "filenames": ["citing.md", "contributing/build-docs.rst", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/dev-setup.rst", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.rst", "contributing/make-a-contribution.rst", "explanation/active-deprecations.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/custom-functions.md", "guides/index.rst", "guides/solving/index.md", "guides/solving/solve-equation-algebraically.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/four_bar_linkage_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/joints.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst"], "titles": ["Citing SymPy", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Docstring Style Guide", "Contributing", "Making a Contribution", "List of active deprecations", "Gotchas and Pitfalls", "Explanations", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Writing Custom Functions", "How-to Guides", "Solve Equations", "Solve an equation algebraically", "Welcome to SymPy\u2019s documentation!", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joints Framework (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "A four bar linkage", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Joints Framework in Physics/Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 17, 18, 21, 23, 24, 27, 28, 31, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 64, 74, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 99, 101, 102, 104, 106, 108, 109, 127, 128, 131, 141, 145, 158, 167, 169, 173, 179, 182, 184, 186, 188, 189, 191, 193, 194, 195, 197, 198, 205, 206, 208, 211, 214, 215, 216, 217, 218, 219, 222, 223, 227, 229, 230, 233, 234, 236, 237, 243, 244, 246, 247, 249, 251, 252, 263, 264, 266, 267, 269, 270, 273, 274, 275], "public": [0, 6, 33, 51, 52, 73, 188, 189, 191, 192, 196, 211, 214, 218, 232, 243], "us": [0, 1, 2, 4, 5, 6, 8, 11, 13, 15, 16, 17, 18, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 131, 132, 133, 136, 137, 139, 141, 143, 144, 145, 148, 150, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 248, 249, 251, 252, 254, 255, 260, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275], "meurer": 0, "A": [0, 3, 4, 6, 7, 10, 11, 13, 15, 16, 17, 18, 21, 22, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 97, 99, 101, 105, 106, 107, 108, 109, 110, 111, 114, 115, 118, 119, 124, 126, 129, 130, 131, 132, 133, 136, 138, 141, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 243, 244, 246, 247, 248, 249, 251, 252, 259, 265, 267, 269, 270, 274], "smith": [0, 10, 88, 187], "cp": [0, 43, 92, 186], "paprocki": 0, "m": [0, 1, 10, 11, 14, 16, 18, 25, 29, 33, 34, 39, 40, 42, 43, 47, 50, 51, 52, 53, 54, 56, 59, 61, 63, 67, 68, 76, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 101, 103, 104, 106, 108, 109, 110, 111, 113, 114, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 140, 147, 161, 162, 165, 167, 169, 179, 183, 185, 186, 187, 189, 191, 192, 193, 194, 198, 199, 200, 201, 203, 204, 205, 206, 208, 210, 211, 214, 216, 217, 218, 219, 220, 223, 224, 230, 231, 233, 236, 238, 243, 245, 247, 251, 252, 264, 270, 273, 274, 275], "\u010dert\u00edk": 0, "o": [0, 6, 11, 14, 16, 24, 32, 33, 42, 43, 49, 51, 52, 57, 59, 61, 62, 64, 65, 67, 73, 76, 91, 95, 106, 109, 111, 113, 114, 126, 127, 128, 129, 131, 132, 154, 164, 175, 177, 179, 181, 191, 192, 194, 195, 198, 200, 205, 208, 214, 218, 223, 236, 245, 248, 264], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 217], "ivanov": 0, "s": [0, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 90, 91, 92, 93, 94, 95, 99, 101, 103, 105, 106, 108, 111, 114, 116, 120, 124, 129, 131, 135, 136, 137, 143, 144, 146, 148, 150, 151, 154, 158, 159, 161, 162, 164, 167, 169, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 224, 229, 230, 231, 232, 233, 234, 236, 237, 239, 243, 244, 248, 249, 250, 251, 254, 262, 263, 264, 266, 267, 268, 269, 270, 274, 275], "moor": [0, 84, 87], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 4, 6, 7, 10, 11, 17, 18, 25, 28, 29, 31, 33, 34, 35, 42, 43, 44, 45, 47, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 78, 80, 81, 82, 83, 84, 87, 91, 92, 93, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 119, 126, 127, 128, 129, 131, 132, 136, 138, 144, 148, 160, 162, 164, 166, 167, 169, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 201, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 224, 227, 229, 232, 236, 237, 243, 245, 247, 251, 263, 264, 268, 269, 270, 273, 274, 275], "vig": 0, "granger": [0, 150], "BE": 0, "muller": 0, "rp": [0, 67, 136], "bonazzi": 0, "f": [0, 1, 6, 10, 11, 14, 18, 21, 31, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 69, 74, 75, 76, 78, 80, 82, 84, 87, 91, 92, 93, 95, 99, 108, 109, 113, 119, 124, 126, 127, 131, 133, 137, 138, 149, 150, 153, 162, 164, 167, 174, 178, 179, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 197, 198, 200, 201, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 233, 236, 237, 239, 248, 249, 252, 263, 264, 269, 273, 274, 275], "gupta": [0, 217], "h": [0, 11, 14, 31, 32, 33, 34, 35, 42, 47, 50, 51, 52, 56, 59, 73, 76, 78, 82, 83, 87, 88, 93, 101, 111, 129, 133, 136, 148, 150, 153, 158, 162, 169, 183, 184, 185, 186, 187, 191, 192, 193, 194, 197, 198, 206, 210, 214, 216, 217, 218, 219, 224, 231, 252, 264, 273], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 150], "mj": 0, "terrel": 0, "ar": [0, 1, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 136, 137, 138, 139, 141, 143, 145, 148, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 251, 253, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 21, 24, 25, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 73, 74, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 93, 94, 95, 97, 101, 102, 103, 104, 106, 109, 111, 114, 116, 121, 122, 123, 127, 128, 129, 131, 133, 136, 137, 139, 147, 148, 153, 154, 159, 161, 162, 164, 169, 170, 173, 174, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 229, 230, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 263, 269, 274], "kulal": 0, "cimrman": 0, "r": [0, 1, 6, 7, 10, 11, 14, 16, 18, 25, 32, 33, 34, 35, 42, 43, 51, 52, 53, 55, 56, 57, 64, 65, 67, 69, 73, 74, 76, 78, 87, 91, 93, 95, 101, 103, 106, 109, 110, 111, 113, 114, 116, 118, 121, 122, 123, 128, 129, 130, 131, 132, 133, 136, 160, 161, 164, 165, 167, 174, 175, 177, 179, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 205, 206, 208, 210, 211, 214, 216, 217, 218, 224, 229, 231, 233, 243, 245, 247, 248, 249, 252, 274], "scopatz": 0, "2017": [0, 183], "symbol": [0, 3, 6, 7, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 41, 43, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 81, 82, 84, 87, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 129, 131, 133, 136, 137, 138, 139, 141, 143, 144, 146, 148, 150, 152, 153, 156, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 230, 236, 237, 243, 244, 245, 247, 248, 249, 252, 254, 259, 263, 264, 267, 269, 270, 273, 274, 275], "comput": [0, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 20, 21, 23, 25, 31, 33, 34, 35, 38, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 66, 70, 73, 74, 75, 77, 78, 80, 82, 84, 87, 88, 90, 91, 93, 95, 99, 101, 105, 108, 109, 110, 113, 114, 116, 117, 121, 124, 131, 148, 149, 150, 158, 163, 164, 166, 168, 169, 173, 175, 179, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 203, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 220, 230, 233, 236, 237, 243, 244, 245, 246, 247, 248, 249, 251, 254, 259, 263, 264, 266, 267, 270, 274], "python": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 20, 21, 22, 23, 26, 27, 28, 31, 43, 51, 52, 55, 57, 63, 79, 81, 82, 84, 87, 91, 92, 93, 94, 105, 114, 131, 174, 184, 185, 186, 188, 189, 195, 197, 198, 206, 210, 214, 217, 219, 229, 230, 231, 232, 233, 236, 237, 239, 243, 255, 266, 267, 268, 269, 270, 272, 273, 274], "peerj": 0, "scienc": [0, 43, 76, 87, 130, 131, 185, 192, 208, 264], "3": [0, 4, 5, 7, 11, 12, 14, 16, 17, 18, 20, 21, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 107, 111, 113, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 131, 132, 133, 135, 137, 141, 143, 144, 145, 149, 153, 158, 159, 161, 163, 164, 167, 170, 171, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 216, 217, 218, 219, 220, 223, 224, 225, 229, 230, 232, 233, 234, 236, 237, 239, 241, 243, 244, 245, 246, 247, 249, 251, 252, 259, 263, 264, 266, 268, 269, 270, 273, 274, 275], "e103": 0, "http": [0, 1, 3, 4, 5, 6, 7, 10, 16, 18, 23, 25, 27, 28, 29, 31, 32, 33, 35, 39, 40, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 67, 68, 69, 73, 76, 78, 79, 80, 81, 82, 84, 87, 91, 94, 99, 101, 103, 104, 133, 135, 136, 137, 139, 140, 141, 145, 146, 147, 150, 152, 153, 162, 164, 174, 176, 178, 180, 183, 192, 194, 197, 198, 201, 203, 205, 206, 207, 210, 211, 214, 217, 218, 230, 231, 232, 234, 236, 237, 239, 243, 244, 248, 250, 252, 270, 273], "doi": [0, 6, 31, 43, 87, 192, 207, 210, 218], "org": [0, 3, 6, 7, 11, 16, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 99, 101, 103, 104, 133, 135, 136, 137, 139, 140, 141, 145, 146, 147, 150, 152, 153, 162, 164, 174, 176, 178, 180, 192, 194, 198, 201, 205, 206, 207, 211, 214, 217, 218, 230, 231, 232, 234, 236, 243, 244, 248, 250, 252, 270, 273], "10": [0, 3, 6, 11, 12, 18, 23, 25, 31, 33, 40, 42, 43, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 67, 68, 76, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 96, 97, 99, 101, 102, 107, 111, 114, 116, 125, 131, 133, 137, 148, 158, 159, 170, 174, 175, 176, 177, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 201, 204, 205, 206, 207, 210, 211, 214, 217, 218, 219, 228, 229, 234, 236, 237, 239, 243, 245, 263, 270, 274], "7717": 0, "cs": [0, 91, 191, 192, 193, 198, 218], "103": [0, 42], "bibtex": 0, "entri": [0, 10, 29, 34, 41, 43, 49, 52, 63, 76, 80, 82, 83, 84, 86, 90, 109, 114, 116, 129, 136, 187, 191, 193, 194, 208, 218, 237], "latex": [0, 1, 3, 6, 18, 23, 59, 79, 173, 174, 178, 182, 184, 189, 198, 261, 268, 269], "user": [0, 1, 3, 4, 5, 6, 7, 10, 13, 15, 16, 18, 32, 33, 34, 42, 43, 50, 51, 52, 53, 59, 63, 76, 80, 84, 87, 93, 94, 95, 99, 101, 105, 114, 124, 127, 129, 132, 152, 153, 162, 168, 169, 173, 174, 177, 181, 185, 188, 191, 193, 195, 196, 197, 198, 199, 207, 210, 212, 216, 217, 218, 227, 230, 231, 233, 234, 237, 243, 246, 247, 252, 263, 266, 267, 269, 270, 271], "articl": [0, 51, 52, 84, 87, 190, 192, 193, 198, 243, 268], "titl": [0, 6, 7, 184], "author": [0, 6, 91, 150, 193, 259], "aaron": 0, "christoph": [0, 243], "p": [0, 1, 10, 11, 14, 16, 17, 18, 25, 27, 28, 29, 33, 34, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 82, 84, 87, 91, 93, 94, 95, 97, 101, 102, 106, 108, 109, 110, 111, 113, 114, 118, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 143, 162, 164, 169, 175, 177, 179, 181, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 198, 200, 201, 205, 206, 208, 210, 211, 214, 216, 217, 218, 219, 223, 224, 236, 243, 245, 246, 247, 248, 249, 251, 270, 274], "mateusz": 0, "v": [0, 1, 5, 11, 21, 25, 33, 41, 47, 50, 51, 52, 53, 54, 55, 65, 76, 80, 82, 87, 91, 95, 106, 107, 108, 111, 116, 128, 129, 131, 132, 136, 137, 149, 164, 169, 174, 176, 177, 179, 181, 182, 184, 188, 191, 192, 193, 194, 198, 208, 210, 211, 214, 216, 218, 229, 236, 243, 245, 246, 247, 248, 249, 251], "c": [0, 1, 3, 11, 14, 16, 18, 24, 25, 31, 32, 35, 36, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 93, 94, 95, 97, 101, 103, 105, 107, 108, 109, 114, 119, 121, 122, 123, 127, 128, 129, 131, 133, 137, 143, 144, 145, 148, 150, 153, 158, 161, 163, 164, 169, 174, 177, 181, 182, 183, 184, 186, 187, 188, 189, 191, 193, 194, 195, 197, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 223, 224, 230, 231, 233, 236, 239, 240, 243, 244, 245, 246, 247, 248, 249, 252, 255, 261, 264, 266, 273, 274, 275], "ert": 0, "k": [0, 7, 11, 16, 18, 25, 31, 32, 33, 34, 35, 37, 41, 42, 45, 46, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 69, 76, 78, 81, 82, 84, 87, 91, 108, 109, 119, 126, 128, 129, 131, 138, 152, 153, 156, 160, 162, 164, 173, 179, 183, 185, 187, 188, 190, 191, 192, 193, 194, 195, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 214, 216, 218, 219, 220, 222, 223, 224, 225, 229, 233, 236, 243, 244, 245, 246, 247, 248, 249, 251, 252, 273, 274], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 5, 10, 11, 16, 17, 18, 25, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 74, 76, 78, 80, 81, 82, 83, 84, 87, 91, 93, 94, 95, 97, 99, 101, 106, 107, 108, 109, 110, 111, 114, 118, 119, 128, 129, 131, 133, 136, 141, 143, 145, 147, 152, 153, 156, 161, 162, 163, 164, 174, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 229, 232, 233, 236, 239, 243, 244, 245, 246, 247, 248, 264, 266, 270, 274, 275], "matthew": 0, "amit": [0, 217], "sergiu": 0, "jason": [0, 198], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 150], "e": [0, 1, 3, 4, 5, 6, 7, 10, 11, 16, 17, 18, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 87, 91, 93, 94, 95, 97, 101, 102, 106, 109, 111, 113, 114, 127, 128, 131, 132, 133, 136, 143, 144, 148, 153, 154, 156, 159, 161, 163, 164, 169, 170, 174, 178, 179, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 243, 246, 249, 251, 252, 263, 264, 268, 269, 274], "richard": [0, 91], "francesco": 0, "harsh": [0, 217], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 7, 10, 11, 25, 29, 31, 33, 34, 37, 41, 42, 43, 47, 49, 50, 52, 53, 55, 56, 59, 73, 76, 78, 80, 82, 84, 87, 91, 99, 102, 108, 129, 130, 131, 136, 143, 144, 161, 164, 169, 173, 179, 183, 185, 187, 189, 191, 192, 193, 194, 195, 197, 198, 200, 206, 208, 210, 211, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 230, 236, 243, 244, 245, 246, 247, 248, 249, 251, 252], "andi": [0, 130], "rou": 0, "ka": 0, "n": [0, 5, 6, 7, 11, 14, 16, 18, 21, 24, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 47, 49, 50, 52, 53, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 94, 95, 101, 103, 104, 106, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 131, 132, 133, 135, 137, 138, 140, 144, 149, 150, 153, 158, 160, 161, 162, 164, 165, 167, 169, 171, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 216, 217, 218, 221, 223, 224, 227, 230, 236, 238, 239, 243, 244, 245, 246, 247, 251, 264, 270, 273, 274, 275], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 218], "anthoni": 0, "year": [0, 4, 6, 10], "month": 0, "jan": [0, 52], "keyword": [0, 4, 6, 18, 32, 33, 34, 42, 43, 51, 52, 55, 56, 64, 66, 67, 68, 82, 87, 91, 94, 99, 101, 109, 126, 127, 158, 164, 178, 184, 186, 188, 189, 191, 193, 194, 197, 198, 199, 205, 210, 211, 216, 223, 229, 230, 232, 234, 237, 239, 247, 270], "algebra": [0, 7, 11, 16, 20, 28, 34, 42, 51, 52, 55, 57, 69, 72, 73, 74, 76, 78, 81, 82, 86, 88, 91, 92, 93, 113, 124, 131, 132, 180, 183, 186, 187, 189, 190, 191, 192, 194, 195, 198, 200, 208, 211, 212, 214, 217, 253, 254, 257, 259, 260, 265, 266, 268, 270], "system": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 17, 18, 20, 26, 28, 42, 51, 52, 53, 57, 76, 79, 80, 81, 82, 87, 92, 93, 94, 98, 100, 101, 105, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 131, 142, 143, 158, 161, 162, 164, 167, 171, 174, 177, 178, 179, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 196, 197, 198, 206, 207, 212, 213, 217, 218, 229, 230, 243, 244, 245, 248, 250, 252, 259, 266, 268, 270, 274, 275], "abstract": [0, 10, 31, 32, 40, 51, 53, 57, 59, 64, 69, 84, 108, 114, 148, 150, 159, 162, 163, 164, 185, 190, 193, 217, 218, 220, 224, 231, 251, 255], "an": [0, 1, 3, 4, 6, 7, 9, 11, 13, 14, 16, 17, 18, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 105, 106, 108, 109, 111, 113, 116, 118, 124, 126, 128, 129, 131, 132, 135, 136, 137, 141, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 157, 158, 159, 161, 162, 164, 165, 166, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 243, 244, 246, 247, 249, 250, 251, 252, 260, 263, 264, 265, 266, 267, 268, 270, 273, 274, 275], "open": [0, 1, 3, 4, 6, 7, 9, 10, 21, 23, 31, 51, 53, 57, 78, 81, 101, 114, 117, 131, 198, 206, 213, 217, 218, 240, 268, 270], "sourc": [0, 1, 5, 6, 7, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 174, 175, 176, 177, 178, 179, 183, 184, 185, 187, 188, 189, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 249, 261, 268], "written": [0, 3, 6, 7, 16, 18, 29, 33, 39, 42, 43, 47, 51, 56, 59, 63, 69, 74, 76, 80, 81, 90, 91, 118, 124, 131, 164, 179, 180, 181, 182, 185, 186, 194, 198, 201, 205, 208, 211, 214, 231, 249, 251, 267, 268, 269, 274], "pure": [0, 3, 21, 25, 52, 57, 78, 81, 84, 101, 128, 169, 188, 189, 191, 194, 198, 218, 236], "It": [0, 1, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 21, 23, 25, 26, 27, 28, 31, 32, 33, 39, 42, 43, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 67, 68, 74, 76, 78, 80, 81, 87, 91, 92, 93, 94, 95, 97, 99, 101, 103, 105, 106, 107, 108, 109, 114, 116, 122, 124, 125, 126, 127, 129, 131, 133, 137, 138, 148, 153, 154, 159, 160, 161, 162, 163, 164, 166, 169, 172, 174, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 201, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 229, 230, 231, 232, 233, 234, 237, 243, 245, 246, 247, 249, 251, 252, 263, 264, 266, 267, 268, 269, 270, 272, 273, 274], "built": [0, 1, 3, 6, 7, 11, 13, 26, 28, 34, 51, 57, 78, 114, 131, 186, 189, 198, 199, 203, 214, 217, 218, 224, 233, 236, 237, 268, 269, 273], "focu": [0, 10, 16, 61, 216, 268], "extens": [0, 3, 6, 7, 16, 18, 42, 51, 57, 63, 67, 78, 87, 111, 131, 186, 188, 189, 190, 191, 192, 193, 194, 198, 208, 210, 214, 216, 217, 230, 231, 240, 267, 274], "eas": [0, 114, 182, 184, 198, 201], "through": [0, 4, 6, 11, 16, 18, 21, 23, 31, 33, 42, 43, 45, 50, 51, 52, 55, 56, 59, 61, 62, 63, 64, 65, 67, 76, 80, 81, 87, 91, 94, 95, 99, 106, 109, 114, 116, 124, 129, 135, 136, 174, 184, 185, 191, 193, 198, 204, 208, 210, 214, 216, 217, 218, 219, 230, 236, 243, 244, 249, 252, 265, 266, 267, 272], "both": [0, 3, 4, 6, 7, 10, 11, 13, 16, 17, 18, 21, 24, 25, 31, 32, 33, 43, 46, 47, 49, 50, 51, 52, 56, 57, 59, 66, 75, 76, 78, 81, 82, 87, 91, 93, 94, 95, 101, 106, 108, 109, 116, 118, 119, 125, 128, 136, 137, 148, 154, 161, 164, 169, 174, 177, 181, 182, 184, 185, 186, 188, 189, 191, 193, 194, 196, 197, 198, 200, 205, 206, 207, 208, 210, 211, 214, 216, 217, 219, 223, 229, 231, 236, 237, 243, 244, 264, 267, 268, 269, 274, 275], "interact": [0, 21, 24, 51, 65, 78, 85, 87, 131, 161, 178, 182, 188, 189, 210, 218, 234, 241, 253, 260, 261, 266, 268, 269, 273, 274], "programmat": [0, 13, 217, 247], "applic": [0, 7, 10, 21, 34, 35, 41, 42, 43, 44, 51, 52, 57, 78, 82, 87, 91, 94, 97, 109, 113, 114, 124, 128, 130, 131, 148, 149, 174, 177, 181, 186, 191, 192, 193, 194, 198, 200, 205, 211, 214, 217, 231, 236, 243, 249, 250, 268], "These": [0, 3, 6, 7, 10, 11, 12, 14, 16, 17, 18, 22, 24, 32, 33, 42, 50, 51, 52, 53, 59, 76, 78, 81, 87, 93, 95, 101, 109, 110, 116, 118, 122, 125, 128, 131, 154, 159, 160, 174, 175, 179, 181, 182, 185, 186, 187, 188, 189, 191, 198, 208, 211, 214, 215, 217, 218, 220, 225, 229, 230, 231, 236, 249, 264, 267, 270, 273, 274], "characterist": [0, 53, 69, 87, 181, 187, 189, 191, 192, 214, 216, 270], "have": [0, 1, 4, 5, 6, 7, 11, 13, 14, 16, 17, 18, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 66, 67, 69, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 99, 101, 102, 104, 105, 108, 109, 111, 114, 115, 116, 122, 124, 125, 128, 131, 148, 150, 153, 157, 159, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 201, 203, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 222, 224, 225, 227, 228, 229, 231, 232, 233, 236, 237, 239, 243, 244, 246, 247, 248, 249, 252, 263, 264, 266, 267, 268, 269, 270, 273, 274, 275], "led": 0, "becom": [0, 4, 6, 7, 10, 11, 14, 16, 42, 47, 50, 51, 52, 55, 74, 79, 87, 93, 178, 181, 185, 186, 188, 195, 198, 201, 207, 214, 217, 218, 224, 239, 245, 247, 274], "popular": [0, 3, 52, 92, 131, 268], "librari": [0, 3, 4, 6, 10, 16, 18, 22, 23, 33, 51, 52, 56, 76, 78, 79, 87, 92, 105, 114, 131, 184, 188, 189, 218, 229, 230, 231, 236, 237, 263, 266, 267, 268], "scientif": [0, 23, 51, 131], "ecosystem": 0, "thi": [0, 1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275], "paper": [0, 6, 91, 116, 182, 193, 194, 207, 208, 211, 214, 218], "present": [0, 3, 7, 10, 11, 14, 31, 32, 35, 38, 42, 43, 45, 49, 51, 54, 78, 87, 91, 94, 97, 99, 101, 109, 116, 164, 166, 174, 176, 178, 179, 184, 185, 191, 192, 193, 197, 198, 211, 217, 231, 237, 240, 245, 246, 247, 251, 275], "architectur": [0, 131, 188, 229], "descript": [0, 4, 6, 7, 10, 20, 22, 32, 34, 41, 59, 78, 91, 136, 154, 161, 172, 181, 182, 183, 198, 222, 229, 231, 233, 234, 253, 271], "its": [0, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 21, 25, 27, 28, 29, 32, 33, 34, 35, 39, 41, 42, 43, 50, 51, 52, 53, 56, 57, 59, 61, 63, 67, 69, 76, 78, 79, 81, 82, 84, 87, 91, 93, 94, 95, 97, 101, 105, 106, 109, 111, 114, 116, 117, 118, 124, 125, 128, 129, 131, 132, 137, 143, 149, 150, 152, 153, 158, 159, 162, 164, 169, 171, 174, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 210, 213, 214, 216, 217, 218, 222, 223, 224, 229, 232, 233, 236, 237, 240, 243, 245, 246, 247, 249, 252, 268, 269, 270, 273, 274], "featur": [0, 3, 4, 7, 10, 11, 12, 18, 22, 23, 51, 53, 55, 82, 93, 114, 124, 131, 180, 198, 214, 218, 227, 231, 234, 250, 262, 267, 268, 272, 274], "discuss": [0, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 22, 34, 42, 52, 59, 91, 105, 109, 114, 124, 128, 129, 173, 180, 181, 182, 188, 224, 233, 253, 263, 265, 266, 268, 269, 271, 273, 274], "select": [0, 1, 12, 22, 33, 35, 42, 43, 50, 51, 52, 60, 65, 79, 81, 82, 91, 93, 107, 129, 169, 178, 188, 189, 191, 192, 194, 198, 207, 210, 216], "submodul": [0, 3, 4, 6, 33, 105, 185, 189, 191, 193], "The": [0, 1, 3, 5, 6, 7, 8, 11, 14, 15, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 136, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 250, 251, 252, 259, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275], "supplementari": 0, "materi": [0, 94, 135, 272], "provid": [0, 1, 3, 4, 6, 7, 10, 12, 14, 15, 16, 17, 18, 22, 25, 31, 32, 33, 34, 40, 41, 42, 43, 49, 50, 51, 53, 55, 59, 60, 62, 67, 70, 73, 74, 78, 79, 81, 82, 84, 87, 88, 90, 91, 92, 93, 95, 97, 99, 105, 106, 109, 111, 113, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 131, 132, 137, 138, 158, 166, 167, 168, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 201, 203, 206, 207, 208, 210, 214, 215, 216, 217, 218, 219, 223, 224, 229, 230, 231, 233, 234, 236, 237, 239, 243, 245, 246, 247, 249, 250, 252, 264, 268, 269, 270, 274], "addit": [0, 3, 4, 7, 10, 11, 14, 23, 33, 41, 42, 43, 50, 51, 57, 59, 63, 69, 71, 75, 76, 78, 79, 81, 84, 87, 93, 98, 99, 101, 105, 106, 109, 128, 129, 132, 150, 162, 163, 166, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 194, 198, 204, 207, 208, 210, 211, 214, 215, 216, 217, 218, 229, 230, 231, 233, 234, 236, 237, 239, 246, 266, 268, 269, 270, 273, 274], "exampl": [0, 2, 3, 4, 5, 7, 10, 11, 13, 14, 16, 17, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 101, 103, 104, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 165, 166, 168, 170, 171, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 203, 204, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 221, 222, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 250, 251, 252, 254, 258, 259, 260, 263, 264, 265, 266, 267, 269, 270, 272, 273, 275], "further": [0, 3, 5, 16, 18, 28, 32, 52, 59, 63, 76, 78, 83, 84, 87, 93, 94, 98, 99, 106, 108, 109, 124, 129, 136, 181, 183, 184, 185, 191, 193, 194, 207, 208, 210, 214, 218, 224, 267, 268], "outlin": [0, 3, 4, 16, 18, 49, 78, 185, 214], "detail": [0, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 18, 22, 32, 42, 51, 53, 56, 58, 59, 76, 77, 78, 79, 82, 87, 91, 99, 108, 109, 114, 129, 131, 136, 154, 158, 174, 176, 183, 184, 185, 191, 193, 200, 205, 210, 211, 212, 214, 215, 218, 223, 224, 229, 232, 234, 235, 237, 247, 248, 249, 250, 253, 264, 266, 270, 271, 273], "volum": [0, 6, 33, 50, 59, 76, 183, 192, 208, 211, 214, 233, 243, 250], "page": [0, 1, 3, 4, 6, 7, 10, 11, 16, 17, 20, 21, 22, 33, 34, 50, 56, 76, 91, 92, 109, 131, 169, 184, 187, 188, 189, 192, 198, 208, 211, 234, 251, 274], "journal": [0, 6, 50, 56, 91, 102, 192, 210, 233], "issn": 0, "2376": 0, "5992": 0, "url": [0, 52, 234], "bsd": [0, 1, 3, 268], "licens": [0, 1, 3, 268], "so": [0, 3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 20, 21, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 42, 43, 45, 47, 49, 51, 52, 55, 57, 59, 61, 63, 64, 65, 67, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 94, 95, 101, 105, 109, 114, 116, 118, 124, 126, 128, 131, 132, 137, 148, 150, 158, 160, 161, 162, 164, 166, 168, 169, 173, 174, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 222, 223, 227, 229, 230, 233, 234, 236, 237, 239, 248, 252, 254, 263, 264, 266, 268, 269, 270, 273, 274, 275], "you": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 13, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 31, 33, 34, 42, 43, 50, 51, 52, 53, 55, 57, 58, 59, 63, 65, 67, 69, 70, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 91, 92, 93, 101, 103, 104, 105, 109, 110, 111, 114, 115, 125, 126, 128, 129, 131, 153, 158, 159, 162, 164, 173, 174, 176, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 199, 201, 205, 206, 210, 211, 214, 215, 216, 217, 218, 222, 223, 224, 227, 229, 230, 231, 232, 234, 236, 237, 240, 246, 247, 248, 249, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275], "free": [0, 10, 23, 31, 32, 33, 38, 41, 42, 47, 51, 63, 78, 82, 84, 87, 91, 94, 95, 99, 102, 124, 133, 153, 171, 174, 180, 184, 185, 189, 190, 191, 193, 194, 198, 200, 206, 208, 210, 211, 214, 216, 217, 224, 236, 268], "whatev": [0, 10, 11, 18, 42, 51, 52, 210, 214, 215, 217, 237], "like": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 22, 23, 33, 34, 36, 42, 43, 50, 51, 52, 55, 56, 57, 59, 61, 71, 74, 78, 79, 81, 82, 84, 85, 86, 87, 91, 92, 93, 97, 101, 105, 111, 114, 116, 125, 128, 129, 131, 132, 146, 148, 158, 159, 162, 163, 164, 169, 173, 174, 177, 179, 181, 184, 185, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 201, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 222, 224, 225, 227, 229, 230, 231, 232, 236, 237, 239, 240, 246, 247, 249, 251, 263, 264, 266, 267, 268, 269, 270, 274], "academ": [0, 32, 35, 192], "commerci": [0, 268], "creat": [0, 3, 4, 5, 6, 7, 9, 16, 17, 21, 27, 32, 33, 34, 40, 42, 43, 51, 52, 53, 55, 57, 58, 59, 61, 63, 64, 66, 67, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 92, 93, 94, 97, 101, 106, 108, 109, 111, 114, 117, 118, 119, 121, 123, 125, 127, 128, 129, 131, 132, 141, 143, 145, 149, 152, 153, 154, 158, 159, 161, 162, 164, 167, 170, 173, 174, 176, 177, 181, 182, 184, 185, 187, 188, 189, 191, 193, 194, 195, 198, 205, 210, 214, 217, 218, 219, 223, 224, 229, 230, 231, 233, 234, 236, 237, 243, 247, 249, 264, 266, 269, 270, 273, 274, 275], "fork": [0, 5, 7, 10, 116], "deriv": [0, 6, 10, 12, 15, 18, 21, 31, 32, 33, 35, 41, 42, 53, 57, 58, 59, 61, 68, 73, 74, 76, 78, 79, 81, 84, 87, 101, 105, 107, 108, 109, 113, 116, 118, 119, 121, 124, 126, 127, 128, 129, 153, 162, 166, 169, 170, 173, 174, 176, 177, 178, 179, 181, 184, 185, 186, 189, 191, 193, 194, 195, 198, 200, 208, 210, 214, 215, 216, 220, 221, 225, 231, 243, 245, 246, 265, 268, 275], "long": [0, 6, 7, 8, 33, 43, 50, 51, 52, 54, 64, 76, 78, 79, 81, 87, 91, 94, 95, 116, 178, 194, 195, 198, 207, 208, 216, 218, 230, 239, 245, 266, 269], "copi": [0, 1, 5, 10, 11, 16, 34, 43, 44, 51, 67, 87, 91, 92, 187, 189, 191, 193, 197, 198, 205, 216, 229, 236, 239, 273], "statement": [0, 6, 16, 17, 18, 23, 32, 33, 51, 59, 76, 81, 84, 114, 143, 198, 218, 227, 231, 236], "redistribut": [0, 194], "see": [0, 1, 3, 4, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 22, 26, 27, 28, 29, 31, 32, 33, 37, 39, 42, 43, 44, 47, 50, 52, 53, 56, 57, 58, 59, 63, 67, 68, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 92, 93, 99, 105, 108, 109, 120, 122, 126, 128, 129, 133, 136, 139, 140, 149, 153, 154, 158, 159, 160, 161, 163, 164, 167, 169, 174, 178, 181, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 200, 201, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 223, 224, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 243, 244, 252, 263, 264, 266, 268, 269, 270, 272, 273, 274, 275], "file": [0, 1, 3, 4, 5, 6, 7, 11, 33, 87, 114, 131, 153, 198, 205, 208, 210, 227, 229, 230, 231, 237, 240], "That": [0, 4, 7, 11, 16, 17, 18, 51, 52, 57, 81, 87, 124, 161, 166, 172, 181, 182, 185, 186, 188, 189, 191, 193, 204, 205, 214, 216, 218, 230, 231, 237, 263, 266, 269, 274], "said": [0, 4, 25, 29, 33, 37, 91, 169, 179, 181, 182, 186, 214, 217, 218, 243, 249], "although": [0, 3, 4, 6, 7, 11, 13, 14, 16, 18, 43, 51, 52, 57, 63, 75, 76, 79, 81, 82, 84, 87, 91, 94, 105, 116, 131, 185, 188, 189, 191, 193, 194, 206, 207, 210, 211, 216, 230, 236, 237, 266, 269, 274], "requir": [0, 3, 6, 7, 8, 10, 11, 18, 23, 33, 42, 51, 52, 54, 55, 59, 61, 62, 64, 65, 68, 70, 81, 87, 90, 91, 92, 93, 94, 99, 105, 106, 109, 111, 113, 114, 116, 118, 129, 138, 161, 173, 174, 176, 184, 185, 188, 189, 191, 193, 195, 198, 201, 207, 208, 211, 214, 216, 217, 218, 222, 229, 230, 231, 232, 234, 236, 237, 245, 246, 247, 270, 272], "conveni": [0, 1, 10, 11, 21, 24, 31, 33, 43, 51, 52, 56, 59, 78, 81, 93, 114, 131, 173, 176, 181, 182, 184, 185, 186, 187, 188, 189, 193, 196, 205, 206, 210, 216, 222, 223, 230, 232, 233, 237, 249, 264, 266], "pleas": [0, 4, 6, 7, 9, 10, 21, 23, 29, 31, 51, 59, 63, 76, 91, 105, 109, 114, 124, 128, 129, 136, 137, 158, 173, 182, 183, 184, 185, 191, 192, 206, 210, 211, 216, 217, 237, 243, 247, 271, 275], "when": [0, 1, 3, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 42, 43, 44, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 75, 77, 78, 79, 81, 82, 83, 87, 91, 92, 93, 99, 101, 102, 105, 108, 114, 116, 122, 124, 126, 127, 128, 129, 132, 137, 138, 143, 148, 149, 153, 156, 158, 166, 167, 168, 173, 178, 181, 182, 184, 185, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 222, 223, 227, 229, 230, 231, 232, 234, 236, 237, 239, 240, 242, 246, 264, 266, 268, 269, 274, 275], "your": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 18, 20, 23, 27, 51, 52, 78, 79, 87, 92, 93, 101, 105, 126, 128, 182, 184, 198, 205, 210, 214, 217, 218, 236, 237, 264, 268, 270, 271, 273, 274], "work": [0, 1, 3, 4, 6, 10, 11, 13, 14, 16, 17, 18, 23, 26, 28, 31, 32, 33, 42, 43, 44, 51, 52, 55, 59, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 105, 108, 114, 116, 125, 129, 131, 144, 148, 153, 157, 158, 159, 160, 163, 166, 176, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 198, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 224, 229, 230, 231, 233, 236, 237, 238, 239, 246, 247, 260, 266, 267, 268, 269, 270, 273, 274], "also": [0, 1, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 40, 42, 43, 50, 52, 53, 55, 56, 57, 58, 59, 63, 67, 69, 71, 73, 74, 76, 78, 80, 81, 82, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 119, 122, 125, 126, 127, 128, 129, 131, 132, 133, 137, 147, 148, 150, 154, 158, 163, 164, 167, 169, 173, 174, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 243, 245, 246, 247, 248, 249, 251, 252, 263, 264, 266, 268, 269, 270, 273, 274, 275], "consid": [0, 4, 7, 10, 11, 13, 16, 17, 18, 21, 29, 32, 33, 40, 43, 46, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 67, 75, 76, 78, 79, 80, 81, 82, 84, 87, 91, 101, 105, 106, 111, 115, 126, 132, 154, 161, 164, 169, 175, 178, 179, 181, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 201, 205, 210, 211, 214, 215, 216, 217, 218, 229, 231, 236, 245, 247, 249, 251, 252, 266, 270, 274], "contribut": [0, 3, 4, 5, 6, 7, 23, 67, 91, 109, 119, 122, 188, 190, 191, 193, 214, 252, 271], "all": [0, 1, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 106, 107, 108, 109, 111, 113, 114, 116, 117, 119, 124, 126, 128, 131, 132, 138, 143, 144, 148, 158, 160, 161, 162, 164, 166, 167, 168, 169, 171, 172, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 222, 224, 225, 227, 229, 230, 231, 232, 234, 236, 237, 239, 243, 244, 246, 248, 249, 250, 251, 253, 263, 264, 266, 268, 269, 270, 273, 274, 275], "chang": [0, 1, 6, 7, 8, 10, 11, 16, 23, 32, 33, 34, 42, 43, 47, 50, 51, 52, 55, 57, 59, 65, 66, 76, 78, 81, 87, 91, 93, 94, 97, 101, 111, 114, 116, 121, 138, 149, 159, 169, 170, 173, 179, 181, 182, 183, 184, 185, 186, 187, 191, 194, 195, 198, 205, 206, 207, 208, 210, 214, 216, 217, 218, 219, 229, 236, 237, 247, 249, 263, 266, 269, 273], "back": [0, 18, 21, 32, 33, 47, 50, 51, 52, 57, 59, 66, 67, 73, 75, 76, 78, 79, 82, 91, 92, 101, 158, 178, 181, 188, 190, 193, 194, 196, 198, 208, 214, 216, 219, 220], "we": [0, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 20, 21, 26, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 64, 69, 74, 75, 76, 78, 79, 80, 81, 82, 87, 88, 90, 91, 101, 104, 105, 106, 107, 108, 109, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 136, 139, 147, 150, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 169, 173, 174, 176, 177, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 218, 222, 224, 229, 230, 231, 233, 234, 236, 237, 243, 246, 247, 248, 249, 251, 252, 263, 264, 266, 268, 269, 270, 273, 274, 275], "can": [0, 1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 119, 122, 124, 125, 126, 127, 128, 129, 131, 132, 136, 137, 138, 143, 145, 148, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 233, 234, 236, 237, 239, 245, 246, 247, 248, 249, 251, 252, 263, 264, 266, 268, 269, 270, 272, 273, 274, 275], "incorpor": [0, 3, 14, 186, 210], "benefit": [0, 3, 18, 33, 105, 128, 178], "end": [0, 3, 6, 10, 11, 14, 16, 17, 18, 20, 31, 32, 33, 41, 42, 47, 49, 50, 51, 52, 56, 57, 59, 61, 63, 67, 76, 79, 81, 82, 84, 87, 91, 93, 94, 95, 97, 113, 116, 118, 121, 126, 127, 128, 129, 169, 174, 178, 179, 182, 183, 187, 191, 198, 201, 204, 206, 207, 209, 211, 214, 215, 216, 217, 218, 219, 229, 231, 232, 234, 236, 239, 249, 264, 268, 270, 274], "develop": [0, 4, 6, 7, 8, 9, 14, 16, 18, 22, 23, 31, 34, 49, 93, 131, 168, 184, 185, 188, 191, 216, 217, 268, 271], "team": [0, 4], "member": [0, 6, 10, 16, 32, 40, 42, 52, 74, 97, 185, 206, 223], "list": [0, 3, 4, 6, 7, 12, 16, 21, 23, 25, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 101, 106, 108, 109, 113, 116, 118, 121, 125, 126, 127, 131, 132, 137, 148, 150, 153, 154, 158, 159, 161, 162, 164, 166, 174, 177, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 263, 267, 268, 270, 273, 274, 275], "github": [0, 1, 3, 4, 5, 7, 10, 21, 23, 31, 51, 67, 78, 87, 168, 206, 217, 270], "found": [0, 1, 3, 4, 6, 7, 16, 17, 21, 31, 34, 42, 43, 45, 47, 49, 51, 52, 53, 61, 62, 67, 76, 78, 87, 91, 101, 107, 108, 109, 110, 128, 131, 168, 181, 185, 186, 187, 188, 193, 194, 195, 198, 200, 201, 204, 205, 208, 211, 214, 215, 216, 217, 218, 222, 236, 237, 239, 240, 273], "zotero": 0, "start": [1, 2, 3, 4, 5, 6, 7, 10, 11, 18, 22, 23, 32, 33, 35, 40, 41, 42, 43, 47, 50, 51, 52, 53, 59, 81, 82, 84, 87, 90, 91, 92, 94, 95, 97, 114, 116, 126, 127, 159, 160, 163, 167, 181, 182, 184, 188, 191, 193, 194, 198, 201, 204, 206, 207, 208, 211, 214, 216, 217, 218, 219, 222, 229, 230, 236, 238, 239, 248, 262, 263, 266, 268], "either": [1, 3, 6, 7, 10, 11, 16, 17, 18, 21, 25, 29, 31, 32, 35, 43, 50, 51, 52, 55, 56, 57, 59, 66, 68, 74, 76, 78, 79, 81, 82, 87, 91, 101, 106, 109, 110, 113, 114, 127, 129, 131, 148, 154, 161, 164, 166, 178, 182, 184, 186, 187, 188, 189, 191, 193, 194, 198, 200, 205, 206, 207, 208, 211, 214, 215, 216, 217, 218, 219, 222, 223, 230, 236, 237, 243, 251, 266, 269, 270], "machin": [1, 3, 5, 6, 199, 210, 214, 263], "imag": [1, 3, 42, 120, 125, 131, 133, 137, 185, 189, 191, 198, 206, 217], "contain": [1, 3, 4, 6, 7, 10, 11, 17, 18, 21, 24, 26, 27, 31, 32, 33, 34, 42, 43, 47, 49, 50, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 67, 68, 77, 78, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 96, 99, 100, 102, 106, 109, 110, 111, 113, 116, 118, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 151, 154, 156, 159, 161, 164, 173, 182, 183, 184, 185, 186, 187, 188, 189, 191, 194, 198, 199, 200, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 243, 245, 253, 254, 264, 266, 270, 274], "them": [1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 16, 17, 18, 21, 24, 27, 29, 32, 33, 40, 42, 43, 50, 51, 52, 53, 55, 56, 59, 62, 67, 69, 71, 73, 74, 76, 80, 81, 84, 87, 90, 91, 92, 105, 109, 111, 114, 116, 118, 119, 124, 126, 128, 129, 131, 137, 141, 157, 158, 164, 166, 169, 172, 174, 179, 181, 182, 185, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 205, 206, 207, 208, 210, 211, 214, 216, 217, 219, 220, 229, 231, 233, 236, 245, 263, 264, 266, 268, 269, 274], "If": [1, 3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 40, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 94, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 126, 127, 128, 129, 131, 132, 137, 141, 145, 148, 154, 158, 159, 160, 161, 162, 164, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 243, 245, 247, 249, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275], "instead": [1, 3, 4, 6, 7, 10, 11, 16, 17, 18, 21, 24, 26, 28, 32, 33, 42, 44, 47, 51, 53, 54, 55, 56, 59, 78, 79, 81, 82, 84, 85, 87, 91, 99, 102, 104, 113, 114, 116, 118, 128, 131, 162, 166, 168, 174, 178, 179, 181, 182, 185, 188, 189, 191, 193, 194, 196, 198, 200, 208, 210, 214, 216, 217, 218, 222, 223, 224, 227, 232, 233, 234, 237, 241, 249, 252, 263, 264, 266, 268, 269, 270, 274, 275], "follow": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 21, 23, 26, 28, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 50, 51, 52, 55, 56, 57, 59, 63, 65, 67, 74, 75, 76, 78, 81, 82, 84, 87, 91, 92, 94, 95, 108, 109, 114, 116, 124, 125, 126, 127, 128, 129, 131, 133, 137, 156, 159, 161, 164, 167, 169, 174, 179, 181, 182, 183, 184, 185, 186, 191, 192, 193, 194, 196, 197, 198, 199, 200, 205, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 229, 232, 233, 236, 237, 240, 246, 247, 249, 263, 264, 266, 267, 269, 270, 274, 275], "os": [1, 229, 239, 240], "specif": [1, 5, 6, 7, 10, 16, 18, 19, 22, 42, 43, 51, 52, 53, 59, 63, 78, 80, 82, 87, 106, 108, 109, 113, 114, 124, 131, 133, 169, 182, 184, 185, 189, 191, 193, 194, 197, 198, 199, 204, 210, 211, 214, 215, 216, 218, 224, 229, 230, 231, 236, 255, 270, 274], "instruct": [1, 3, 5, 6, 7, 9, 10, 11, 14, 19, 22, 33, 198, 216, 230, 231], "below": [1, 3, 4, 6, 7, 10, 11, 16, 18, 21, 23, 31, 32, 33, 41, 42, 43, 51, 52, 56, 58, 59, 60, 61, 67, 68, 74, 76, 78, 82, 87, 90, 91, 93, 94, 95, 101, 106, 109, 113, 114, 116, 118, 119, 120, 125, 126, 127, 128, 131, 158, 164, 169, 174, 182, 183, 184, 185, 187, 194, 198, 199, 201, 207, 210, 211, 214, 215, 217, 218, 229, 231, 236, 237, 239, 247, 249, 252, 253, 270, 274], "mai": [1, 3, 4, 5, 6, 10, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 29, 31, 32, 33, 34, 42, 43, 44, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 76, 78, 79, 81, 82, 83, 87, 88, 90, 91, 93, 107, 109, 110, 114, 118, 124, 128, 150, 159, 164, 165, 166, 171, 174, 177, 179, 181, 184, 185, 186, 187, 191, 193, 198, 199, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 249, 251, 263, 264, 266, 269, 270, 274, 275], "choos": [1, 6, 21, 42, 47, 51, 53, 56, 87, 91, 95, 99, 118, 129, 164, 168, 174, 181, 182, 190, 194, 195, 198, 205, 207, 208, 214, 215, 218, 229, 234, 274], "cd": [1, 5, 6, 217, 236], "dockerfil": 1, "htmldoc": 1, "sympy_htmldoc": 1, "option": [1, 4, 5, 6, 7, 8, 11, 18, 26, 28, 31, 33, 42, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 64, 65, 67, 68, 70, 78, 79, 82, 84, 87, 88, 91, 92, 93, 94, 99, 101, 105, 106, 107, 108, 109, 110, 113, 131, 137, 148, 153, 154, 156, 159, 161, 166, 173, 174, 178, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 203, 205, 206, 207, 210, 211, 214, 215, 216, 217, 218, 223, 224, 229, 230, 231, 234, 236, 237, 243, 267, 273, 274], "now": [1, 2, 3, 5, 7, 10, 11, 14, 16, 17, 18, 23, 32, 33, 43, 51, 52, 59, 62, 67, 68, 73, 75, 76, 80, 87, 91, 101, 106, 113, 114, 117, 119, 122, 124, 131, 132, 167, 169, 174, 178, 181, 182, 185, 186, 188, 191, 194, 195, 199, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 224, 229, 230, 237, 247, 248, 266, 268, 269, 274, 275], "skip": [1, 3, 4, 6, 11, 32, 35, 51, 82, 87, 91, 174, 193, 197, 198, 200, 214, 216, 227, 229, 264, 272, 273], "down": [1, 4, 6, 16, 84, 103, 116, 118, 181, 182, 184, 189, 200, 206, 208, 210, 214, 233, 270, 274], "section": [1, 4, 7, 8, 16, 18, 19, 25, 32, 34, 42, 43, 50, 51, 52, 54, 58, 59, 61, 67, 76, 81, 82, 87, 94, 95, 108, 114, 129, 167, 169, 173, 179, 182, 185, 188, 191, 193, 198, 201, 205, 208, 214, 224, 233, 234, 236, 246, 247, 248, 249, 253, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275], "For": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 16, 17, 18, 19, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 65, 66, 69, 72, 74, 75, 76, 77, 80, 81, 82, 87, 91, 92, 93, 94, 95, 101, 103, 107, 108, 109, 110, 114, 118, 124, 125, 126, 127, 128, 129, 131, 133, 147, 148, 153, 157, 159, 161, 162, 163, 164, 166, 169, 170, 174, 177, 178, 179, 181, 182, 184, 185, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 222, 223, 224, 225, 229, 230, 231, 233, 234, 236, 237, 240, 241, 243, 244, 247, 249, 251, 252, 263, 264, 266, 269, 270, 274, 275], "apt": [1, 5], "get": [1, 2, 4, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 21, 23, 24, 27, 28, 31, 32, 33, 35, 40, 41, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 59, 64, 74, 76, 78, 80, 84, 87, 91, 93, 94, 99, 101, 104, 114, 117, 118, 126, 127, 128, 131, 136, 137, 144, 148, 153, 158, 159, 160, 161, 166, 169, 182, 186, 188, 189, 191, 193, 194, 195, 196, 197, 198, 200, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 224, 225, 230, 236, 237, 238, 240, 243, 246, 263, 266, 268, 269, 270, 273, 274, 275], "python3": [1, 3, 33, 93, 198, 229], "sphinx": [1, 4, 7, 8, 57, 214, 229, 234], "texliv": [1, 3, 198], "recommend": [1, 5, 6, 10, 11, 12, 16, 18, 20, 21, 22, 23, 32, 33, 51, 52, 55, 82, 105, 126, 131, 158, 174, 181, 186, 187, 188, 189, 195, 211, 214, 217, 223, 227, 234, 246, 247, 272, 275], "dvipng": 1, "librsvg2": 1, "bin": [1, 2, 3, 5, 6, 79, 198, 229, 236], "imagemagick": 1, "docbook2x": 1, "graphviz": [1, 7, 269, 273], "pip": [1, 3, 23, 93], "txt": [1, 198], "mpmath": [1, 3, 5, 18, 33, 56, 59, 87, 92, 131, 188, 189, 198, 206, 216, 232, 237], "error": [1, 3, 4, 6, 7, 10, 16, 17, 24, 31, 33, 40, 43, 50, 51, 52, 57, 58, 61, 66, 76, 78, 87, 90, 91, 93, 114, 182, 183, 186, 188, 189, 191, 195, 198, 200, 206, 214, 215, 216, 217, 218, 229, 230, 231, 234, 236, 239, 243, 254, 263], "packag": [1, 3, 20, 23, 79, 92, 93, 98, 124, 131, 178, 198, 229, 240, 248, 249, 268], "matplotlib": [1, 3, 6, 7, 10, 23, 74, 79, 99, 131, 144, 178, 184, 273], "mayb": [1, 17], "other": [1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 17, 19, 21, 25, 29, 32, 33, 34, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 76, 78, 81, 82, 84, 87, 91, 92, 93, 94, 95, 101, 105, 106, 108, 114, 115, 118, 119, 124, 125, 128, 129, 131, 133, 136, 137, 138, 148, 159, 161, 162, 163, 164, 167, 169, 170, 171, 173, 174, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 199, 200, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 224, 225, 227, 230, 231, 232, 233, 236, 237, 243, 245, 246, 249, 251, 253, 263, 264, 266, 268, 269, 270, 274], "rpm": 1, "base": [1, 3, 4, 5, 6, 7, 9, 11, 16, 18, 23, 27, 28, 31, 33, 34, 40, 41, 42, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 62, 64, 67, 74, 78, 79, 80, 81, 83, 84, 87, 91, 92, 98, 106, 108, 114, 116, 131, 132, 133, 142, 144, 148, 149, 153, 159, 160, 162, 164, 166, 169, 170, 172, 174, 176, 178, 179, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 198, 200, 202, 205, 206, 207, 208, 210, 211, 212, 214, 216, 218, 222, 223, 224, 229, 230, 231, 232, 233, 234, 236, 237, 238, 243, 245, 246, 249, 260, 269, 274], "distribut": [1, 3, 23, 42, 49, 51, 59, 67, 78, 94, 95, 163, 186, 189, 190, 194, 198, 224], "prerequisit": 1, "dnf": [1, 81], "scheme": [1, 4, 16, 43, 50, 55, 183, 184, 191, 194, 223], "medium": [1, 18, 133, 134, 137, 138, 148, 191, 259], "tool": [1, 7, 18, 42, 79, 86, 87, 92, 101, 131, 182, 185, 190, 191, 198, 209, 230, 236, 242, 250, 255, 257], "first": [1, 3, 5, 6, 7, 8, 11, 14, 16, 17, 18, 21, 23, 32, 33, 34, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 75, 76, 78, 80, 81, 82, 87, 90, 91, 94, 95, 101, 102, 107, 108, 109, 113, 114, 116, 117, 118, 119, 124, 125, 128, 129, 132, 136, 137, 141, 145, 148, 153, 154, 157, 158, 159, 160, 161, 163, 164, 167, 169, 174, 177, 181, 182, 184, 185, 187, 189, 191, 192, 193, 194, 195, 198, 199, 200, 201, 204, 205, 207, 208, 210, 211, 214, 215, 216, 217, 218, 222, 224, 227, 229, 230, 231, 232, 236, 237, 239, 247, 252, 263, 264, 266, 268, 269, 270, 272, 274, 275], "homebrew": 1, "brew": 1, "sh": 1, "Then": [1, 5, 14, 16, 42, 47, 50, 51, 76, 80, 87, 91, 107, 109, 111, 121, 123, 124, 129, 133, 161, 169, 181, 185, 186, 188, 191, 193, 195, 198, 205, 208, 210, 211, 214, 216, 237], "docbook": 1, "librsvg": 1, "conda": [1, 3, 5, 23, 93], "Or": [1, 7, 11, 17, 21, 42, 51, 52, 53, 59, 76, 81, 91, 111, 185, 195, 197, 198, 210, 217, 218, 229, 237, 249, 269, 272], "forg": [1, 3, 93], "make": [1, 3, 4, 6, 7, 8, 10, 11, 14, 16, 17, 18, 24, 27, 28, 29, 31, 33, 34, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 67, 78, 79, 81, 87, 90, 91, 92, 93, 94, 95, 97, 109, 113, 114, 116, 117, 121, 122, 126, 128, 129, 131, 144, 161, 166, 178, 181, 184, 187, 188, 189, 191, 193, 194, 195, 197, 198, 201, 206, 207, 208, 210, 214, 215, 216, 217, 222, 224, 227, 229, 230, 231, 232, 234, 236, 237, 246, 251, 252, 266, 267, 268, 269, 270, 274], "success": [1, 7, 32, 42, 51, 59, 76, 78, 91, 116, 174, 185, 191, 193, 206, 207, 214, 216, 217, 218, 236, 243, 244], "tricki": [1, 51, 76], "becaus": [1, 3, 4, 6, 7, 10, 11, 16, 17, 18, 21, 23, 24, 29, 33, 43, 50, 51, 52, 57, 63, 67, 68, 76, 78, 81, 85, 87, 91, 93, 114, 118, 144, 152, 164, 166, 169, 181, 184, 185, 187, 188, 189, 191, 193, 194, 195, 197, 198, 201, 205, 208, 210, 211, 214, 215, 216, 217, 227, 229, 230, 232, 236, 237, 239, 246, 264, 266, 268, 269, 270, 273, 274, 275], "some": [1, 3, 4, 6, 11, 14, 16, 17, 18, 21, 23, 24, 29, 32, 33, 34, 39, 42, 43, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 63, 67, 76, 78, 80, 81, 82, 84, 87, 91, 92, 93, 99, 102, 105, 106, 111, 113, 114, 115, 116, 117, 118, 119, 124, 126, 128, 129, 132, 144, 149, 153, 161, 164, 169, 170, 173, 175, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 200, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 244, 245, 247, 249, 253, 263, 264, 266, 268, 269, 270, 272, 273, 274], "avail": [1, 3, 5, 7, 10, 11, 16, 22, 23, 32, 33, 42, 43, 50, 51, 56, 59, 78, 87, 92, 93, 114, 128, 131, 188, 189, 191, 194, 198, 199, 204, 206, 208, 210, 211, 216, 217, 218, 219, 223, 224, 229, 236, 237, 242, 243, 260, 266, 273], "howev": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 21, 26, 28, 33, 42, 43, 47, 50, 51, 52, 53, 56, 57, 59, 61, 76, 78, 81, 82, 87, 91, 92, 93, 94, 114, 128, 132, 164, 182, 184, 185, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 205, 206, 207, 208, 210, 214, 215, 216, 217, 229, 230, 237, 246, 247, 251, 263, 266, 268, 270, 274, 275], "subsystem": [1, 198], "linux": [1, 23], "possibl": [1, 6, 10, 16, 17, 18, 23, 31, 33, 34, 35, 40, 42, 43, 45, 46, 47, 49, 51, 52, 56, 57, 59, 61, 63, 65, 66, 68, 73, 75, 76, 78, 80, 81, 82, 84, 87, 91, 102, 103, 105, 116, 127, 129, 158, 160, 164, 166, 167, 168, 169, 177, 179, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 210, 211, 214, 215, 216, 217, 218, 219, 224, 229, 231, 232, 233, 234, 236, 237, 246, 247, 249, 264, 265, 266, 269, 274], "workaround": [1, 237], "solut": [1, 10, 11, 14, 17, 18, 20, 33, 47, 51, 52, 57, 59, 61, 69, 73, 74, 75, 78, 87, 91, 98, 105, 109, 114, 118, 124, 128, 133, 169, 173, 185, 191, 192, 193, 194, 195, 196, 197, 206, 211, 212, 213, 214, 215, 216, 259, 275], "shell": [1, 11, 79, 131, 197], "after": [1, 4, 5, 6, 7, 10, 11, 23, 25, 27, 28, 32, 34, 39, 42, 43, 47, 49, 50, 51, 52, 53, 57, 66, 68, 73, 78, 82, 87, 91, 93, 94, 101, 125, 126, 128, 131, 133, 137, 149, 161, 169, 173, 179, 182, 187, 191, 193, 194, 195, 196, 198, 199, 204, 211, 214, 215, 216, 217, 219, 229, 232, 237, 239, 243, 245, 249, 263, 264, 266, 270, 274], "tutori": [1, 7, 11, 14, 15, 23, 67, 114, 131, 186, 197, 198, 212, 214, 237, 266, 269, 271, 272, 273, 274, 275], "com": [1, 3, 4, 5, 6, 7, 10, 18, 23, 25, 29, 31, 42, 44, 45, 51, 52, 54, 55, 56, 57, 59, 61, 67, 68, 76, 78, 82, 87, 91, 99, 183, 192, 201, 203, 206, 207, 210, 211, 214, 217, 218, 236, 239, 270], "microsoftdoc": 1, "wsl": 1, "blob": [1, 78], "win10": 1, "md": [1, 4, 7, 227, 234], "In": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 21, 23, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 50, 51, 52, 53, 55, 56, 57, 59, 64, 66, 67, 68, 69, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 95, 97, 101, 105, 108, 109, 114, 117, 118, 119, 124, 125, 126, 127, 128, 129, 131, 132, 150, 152, 153, 154, 159, 163, 164, 167, 169, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 222, 224, 227, 229, 231, 233, 234, 236, 237, 240, 243, 246, 247, 249, 251, 263, 266, 267, 268, 269, 270, 273, 274, 275], "command": [1, 3, 5, 6, 11, 23, 33, 55, 79, 114, 126, 131, 178, 184, 198, 229, 230, 273], "prompt": [1, 6], "run": [1, 4, 6, 7, 8, 11, 14, 16, 18, 34, 42, 43, 45, 51, 52, 76, 87, 92, 93, 109, 116, 131, 164, 178, 184, 185, 198, 208, 210, 214, 215, 216, 226, 230, 232, 233, 236, 237, 261, 266, 273], "transfer": [1, 98, 99, 101, 133, 217], "termin": [1, 42, 51, 57, 79, 91, 178, 198, 205, 229, 273], "abov": [1, 3, 4, 6, 7, 10, 11, 14, 17, 18, 31, 32, 33, 34, 35, 41, 42, 43, 47, 50, 51, 55, 56, 59, 61, 64, 67, 68, 76, 78, 81, 82, 87, 91, 92, 93, 95, 101, 105, 109, 111, 113, 114, 116, 117, 118, 119, 124, 125, 127, 128, 129, 132, 159, 161, 164, 174, 179, 181, 182, 184, 185, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 205, 208, 210, 211, 214, 216, 217, 218, 222, 223, 230, 231, 237, 246, 247, 248, 249, 252, 266, 268, 269, 270, 274], "html": [1, 3, 4, 6, 7, 29, 33, 35, 43, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 68, 78, 79, 87, 91, 99, 192, 198, 201, 203, 206, 207, 211, 214, 218, 230, 232, 234, 236, 237, 270], "note": [1, 3, 6, 7, 10, 11, 14, 16, 17, 20, 25, 26, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 47, 49, 50, 52, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 76, 78, 79, 81, 82, 84, 87, 91, 93, 101, 102, 106, 107, 108, 109, 110, 113, 114, 116, 118, 121, 125, 129, 131, 137, 140, 148, 158, 159, 161, 163, 164, 165, 167, 173, 174, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 223, 224, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 247, 249, 251, 260, 263, 264, 265, 267, 268, 269, 270, 274], "via": [1, 3, 14, 18, 23, 26, 27, 28, 42, 43, 51, 56, 59, 76, 78, 81, 87, 91, 92, 93, 94, 174, 183, 185, 189, 191, 193, 194, 197, 198, 217, 227, 230, 231, 243, 251, 269], "want": [1, 3, 4, 5, 6, 10, 11, 13, 14, 16, 17, 18, 21, 23, 29, 31, 33, 34, 35, 43, 51, 52, 58, 63, 65, 67, 70, 76, 78, 82, 84, 87, 88, 91, 92, 99, 101, 104, 110, 114, 131, 147, 157, 158, 161, 164, 167, 169, 176, 177, 181, 182, 184, 186, 187, 188, 191, 193, 194, 195, 197, 198, 199, 205, 206, 208, 210, 211, 214, 215, 216, 217, 218, 224, 227, 229, 231, 233, 236, 237, 247, 249, 252, 263, 264, 266, 268, 269, 270, 271, 273, 274], "directori": [1, 3, 6, 7, 23, 28, 33, 214, 229, 230, 239], "folder": 1, "prepend": [1, 32, 42, 87, 101, 171, 224], "mnt": 1, "path": [1, 5, 6, 10, 42, 67, 73, 101, 122, 179, 181, 207, 210, 214, 217, 229, 230, 233, 234, 236, 239, 240, 241, 249], "navig": 1, "method": [1, 3, 4, 6, 7, 11, 15, 16, 21, 27, 28, 29, 31, 32, 33, 34, 35, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 67, 70, 73, 75, 76, 78, 80, 82, 83, 84, 87, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 105, 108, 113, 114, 117, 119, 120, 124, 125, 130, 131, 138, 141, 143, 145, 153, 154, 159, 161, 164, 166, 171, 172, 173, 174, 176, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 199, 200, 201, 203, 204, 205, 206, 210, 211, 212, 214, 216, 218, 219, 221, 223, 224, 225, 229, 231, 233, 236, 237, 243, 246, 249, 252, 253, 263, 264, 265, 266, 269, 274], "better": [1, 3, 4, 6, 10, 11, 16, 17, 18, 32, 33, 43, 51, 55, 59, 78, 81, 101, 114, 144, 168, 172, 184, 187, 188, 189, 201, 205, 206, 207, 208, 214, 215, 216, 217, 218, 230, 236, 237, 268, 274], "compat": [1, 3, 4, 13, 33, 51, 59, 79, 82, 87, 92, 105, 166, 171, 178, 184, 187, 189, 193, 194, 198, 218, 221, 222, 225, 229, 231, 237], "than": [1, 3, 4, 6, 7, 10, 11, 14, 15, 16, 17, 18, 21, 24, 29, 33, 34, 36, 42, 43, 44, 50, 51, 52, 55, 56, 57, 59, 60, 65, 66, 67, 69, 73, 76, 78, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 99, 101, 105, 109, 113, 114, 118, 121, 138, 144, 158, 161, 162, 164, 173, 182, 183, 186, 187, 188, 189, 191, 194, 195, 196, 198, 201, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 225, 230, 231, 233, 236, 237, 239, 240, 263, 264, 266, 267, 268, 269, 270, 272, 274], "cygwin": 1, "msys2": 1, "more": [1, 3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 21, 23, 24, 28, 29, 31, 32, 33, 34, 37, 41, 42, 43, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 73, 76, 78, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 99, 101, 105, 109, 110, 114, 116, 118, 120, 122, 124, 126, 127, 128, 129, 131, 133, 136, 148, 152, 153, 158, 161, 162, 163, 164, 169, 173, 174, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 210, 211, 214, 215, 216, 217, 218, 229, 231, 232, 233, 236, 237, 239, 243, 246, 250, 263, 264, 266, 267, 269, 270, 272, 273, 274, 275], "virtual": [1, 4, 8, 23, 51, 67, 182, 267], "partial": [1, 31, 42, 49, 50, 51, 53, 55, 56, 57, 91, 93, 131, 158, 174, 177, 179, 189, 190, 192, 195, 198, 200, 207, 210, 212, 214, 215, 219, 225, 243, 249, 264, 274], "need": [1, 3, 4, 6, 7, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 36, 42, 43, 47, 49, 50, 51, 52, 53, 57, 59, 62, 66, 67, 74, 75, 76, 78, 79, 82, 87, 91, 92, 93, 95, 101, 105, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 144, 148, 156, 162, 167, 168, 173, 174, 178, 181, 182, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 205, 206, 208, 210, 211, 213, 214, 216, 217, 218, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 236, 239, 243, 246, 248, 249, 252, 263, 264, 266, 269, 270, 272, 274], "environ": [1, 3, 8, 9, 10, 51, 79, 178, 198, 218, 229, 239, 266, 268, 273], "workflow": [1, 3, 5, 8, 9, 22, 131, 188, 231, 237, 271], "onli": [1, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 68, 69, 74, 76, 78, 79, 80, 81, 82, 87, 88, 91, 92, 93, 97, 99, 101, 107, 108, 114, 116, 117, 118, 120, 121, 123, 125, 126, 128, 129, 132, 137, 139, 158, 159, 163, 164, 166, 168, 169, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 243, 245, 247, 249, 251, 252, 263, 264, 266, 267, 269, 270, 274, 275], "viabl": [1, 52], "64": [1, 36, 42, 91, 130, 183, 197, 207, 216, 218, 229, 236, 239, 273], "bit": [1, 14, 18, 32, 33, 35, 51, 52, 54, 81, 82, 87, 91, 158, 169, 185, 194, 208, 211, 217, 229, 236, 246, 247, 273], "chocolatei": 1, "choco": 1, "rsvg": 1, "convert": [1, 3, 4, 10, 11, 16, 17, 18, 25, 29, 33, 35, 43, 47, 51, 52, 55, 56, 57, 65, 66, 68, 71, 72, 75, 79, 81, 82, 87, 90, 91, 93, 101, 158, 161, 167, 168, 169, 171, 177, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 206, 207, 208, 210, 211, 215, 217, 218, 219, 220, 223, 229, 230, 236, 237, 239, 241, 245, 265, 266, 269, 274], "chose": [1, 52], "rm": [1, 33], "absolut": [1, 10, 29, 30, 33, 50, 51, 57, 66, 76, 78, 82, 87, 103, 162, 189, 193, 194, 208, 210, 213, 218, 229, 251, 252, 253], "Be": [1, 4, 6, 18, 31, 51, 81, 87, 191, 214, 217, 225, 237], "sure": [1, 4, 6, 7, 18, 33, 42, 51, 63, 113, 114, 144, 169, 194, 195, 205, 214, 216, 217, 230, 236, 266, 269, 274], "substitut": [1, 10, 11, 14, 17, 33, 51, 52, 57, 59, 76, 78, 87, 92, 93, 101, 109, 110, 114, 116, 118, 128, 153, 162, 164, 167, 174, 176, 177, 195, 196, 199, 200, 205, 208, 210, 211, 214, 215, 216, 217, 237, 245, 265, 266], "actual": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 32, 33, 34, 40, 42, 49, 51, 52, 59, 63, 76, 78, 80, 84, 87, 91, 101, 105, 114, 116, 126, 127, 128, 178, 185, 188, 193, 198, 206, 208, 210, 211, 214, 217, 225, 229, 230, 233, 234, 236, 237, 268], "filesystem": 1, "from": [1, 3, 4, 5, 6, 7, 12, 13, 14, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 263, 264, 266, 268, 269, 270, 273, 274, 275], "ani": [1, 3, 4, 5, 6, 7, 10, 11, 13, 16, 17, 18, 23, 26, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 66, 67, 68, 76, 78, 79, 81, 82, 85, 87, 88, 91, 93, 94, 95, 97, 101, 103, 106, 108, 109, 110, 111, 113, 114, 124, 127, 128, 129, 132, 133, 137, 150, 153, 158, 159, 162, 164, 166, 169, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 199, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 220, 223, 224, 229, 230, 232, 233, 234, 236, 237, 243, 246, 247, 248, 249, 251, 252, 263, 264, 266, 269, 270, 273, 274, 275], "makefil": 1, "subdirectori": 1, "ha": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 20, 21, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 74, 76, 78, 80, 81, 82, 84, 87, 88, 90, 91, 92, 94, 95, 97, 101, 102, 106, 108, 109, 114, 116, 118, 124, 125, 129, 131, 137, 138, 148, 149, 158, 161, 166, 169, 173, 174, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 203, 205, 206, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 229, 230, 231, 232, 233, 234, 236, 239, 243, 244, 246, 247, 249, 251, 252, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275], "collect": [1, 3, 7, 15, 32, 33, 42, 51, 68, 78, 91, 94, 101, 113, 122, 131, 164, 171, 183, 189, 194, 207, 208, 214, 218, 229, 236, 254], "offici": [1, 11, 23, 51, 105, 131, 173, 182, 217, 237, 272], "which": [1, 2, 3, 4, 6, 7, 10, 11, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 87, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 119, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 137, 138, 150, 153, 159, 160, 161, 162, 164, 168, 169, 170, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 222, 224, 229, 230, 231, 232, 233, 234, 236, 237, 239, 243, 244, 247, 251, 252, 254, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 275], "gener": [1, 4, 8, 10, 11, 14, 16, 17, 18, 21, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 65, 67, 69, 74, 76, 78, 79, 80, 81, 84, 87, 91, 92, 93, 101, 105, 106, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 127, 128, 129, 131, 132, 136, 147, 148, 149, 150, 153, 158, 159, 162, 163, 164, 169, 171, 173, 174, 175, 177, 178, 179, 181, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 204, 207, 208, 210, 211, 212, 214, 215, 216, 218, 223, 224, 230, 231, 233, 234, 235, 236, 237, 243, 246, 247, 249, 250, 251, 264, 266, 267, 268, 269, 270, 274, 275], "svg": [1, 79, 178], "store": [1, 5, 10, 11, 16, 32, 33, 41, 42, 51, 73, 75, 84, 87, 91, 93, 109, 111, 113, 114, 129, 158, 164, 177, 181, 182, 184, 185, 188, 193, 194, 195, 205, 208, 219, 222, 223, 231, 232, 233, 236, 247, 249, 269], "_build": [1, 6], "same": [1, 4, 6, 7, 10, 11, 14, 16, 17, 18, 21, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 42, 43, 47, 50, 51, 52, 53, 56, 58, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 101, 102, 105, 106, 112, 114, 118, 121, 122, 128, 129, 148, 150, 158, 161, 162, 164, 166, 167, 169, 171, 172, 173, 174, 176, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 223, 224, 225, 227, 229, 231, 232, 233, 234, 236, 237, 239, 243, 244, 246, 247, 251, 264, 266, 269, 270, 273, 274], "inform": [1, 3, 4, 6, 7, 11, 13, 16, 17, 21, 22, 28, 29, 32, 33, 34, 37, 42, 43, 49, 51, 52, 56, 59, 63, 76, 78, 80, 84, 87, 92, 95, 106, 107, 109, 113, 114, 116, 124, 125, 126, 128, 129, 131, 132, 159, 164, 169, 173, 174, 178, 182, 184, 188, 193, 194, 198, 199, 205, 208, 210, 211, 212, 216, 217, 218, 222, 223, 224, 229, 230, 231, 232, 233, 243, 247, 249, 274], "onc": [1, 4, 11, 16, 17, 18, 33, 35, 42, 47, 51, 52, 56, 59, 67, 76, 78, 92, 95, 107, 108, 124, 128, 169, 174, 176, 182, 184, 186, 188, 194, 198, 199, 207, 208, 210, 214, 217, 224, 236, 246, 263, 264, 274, 275], "under": [1, 3, 4, 6, 11, 16, 17, 27, 28, 30, 31, 33, 34, 41, 42, 47, 49, 59, 69, 76, 78, 80, 87, 91, 93, 94, 95, 133, 159, 183, 185, 186, 193, 194, 198, 205, 206, 208, 211, 214, 216, 217, 218, 224, 227, 268, 274], "prefer": [1, 3, 6, 10, 16, 18, 33, 43, 50, 51, 59, 91, 93, 114, 164, 169, 184, 187, 189, 191, 193, 198, 206, 210, 214, 216, 223, 229, 231, 234, 237, 268, 270], "web": [1, 7, 52, 63, 131, 180, 192, 211], "browser": 1, "drop": [1, 57, 78, 92, 121, 189, 191], "menu": 1, "index": [1, 3, 10, 11, 18, 25, 33, 38, 40, 42, 43, 47, 50, 51, 52, 53, 57, 59, 62, 67, 76, 78, 81, 82, 84, 87, 90, 91, 101, 113, 114, 131, 132, 133, 135, 137, 138, 148, 157, 159, 161, 164, 169, 174, 184, 185, 189, 193, 194, 195, 198, 203, 204, 208, 216, 218, 219, 221, 222, 224, 225, 230], "given": [1, 3, 4, 7, 10, 11, 14, 16, 18, 25, 27, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 78, 80, 81, 82, 84, 87, 90, 91, 93, 94, 97, 99, 102, 106, 107, 111, 113, 114, 118, 129, 137, 154, 159, 161, 169, 170, 172, 174, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 223, 224, 227, 229, 231, 233, 236, 237, 239, 240, 241, 243, 245, 247, 249, 251, 263, 269, 272, 274, 275], "told": 1, "how": [1, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 32, 33, 42, 43, 50, 51, 58, 59, 63, 74, 77, 78, 81, 82, 84, 87, 91, 93, 105, 109, 114, 115, 121, 126, 127, 129, 131, 135, 136, 152, 156, 159, 160, 161, 166, 167, 174, 181, 184, 185, 188, 189, 191, 193, 197, 198, 201, 205, 206, 208, 210, 211, 212, 214, 215, 218, 224, 229, 230, 231, 232, 234, 236, 237, 247, 264, 266, 268, 269, 270, 271, 273, 274], "load": [1, 33, 51, 79, 94, 95, 97, 106, 108, 109, 113, 117, 119, 132, 144, 178], "ll": [1, 32, 49, 87, 118, 181, 182, 227], "manual": [1, 3, 4, 7, 10, 18, 33, 34, 42, 55, 61, 78, 79, 93, 101, 113, 114, 117, 128, 132, 184, 191, 198, 214, 216, 217, 232, 264, 274], "repeat": [1, 11, 42, 45, 50, 51, 57, 59, 78, 80, 82, 87, 91, 93, 148, 150, 164, 184, 185, 186, 191, 193, 194, 198, 204, 214, 218, 222, 223, 230, 232, 236, 274], "step": [1, 4, 5, 18, 19, 22, 31, 33, 42, 46, 47, 50, 51, 52, 59, 75, 76, 78, 87, 91, 92, 100, 109, 121, 124, 126, 131, 132, 166, 177, 182, 184, 188, 189, 191, 194, 198, 199, 200, 203, 206, 207, 208, 210, 211, 212, 214, 216, 218, 223, 230, 236, 237, 264], "reload": 1, "There": [1, 3, 4, 5, 6, 7, 10, 11, 13, 16, 17, 18, 21, 33, 34, 42, 43, 44, 45, 48, 50, 51, 52, 55, 56, 59, 75, 76, 78, 79, 80, 81, 84, 87, 91, 94, 95, 97, 101, 105, 113, 124, 126, 128, 137, 154, 159, 173, 174, 178, 181, 182, 184, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 206, 207, 208, 210, 211, 214, 216, 217, 218, 223, 232, 233, 236, 237, 239, 247, 263, 264, 266, 268, 269, 273, 274], "altern": [1, 4, 6, 10, 11, 17, 18, 21, 23, 33, 39, 42, 43, 50, 51, 55, 57, 58, 59, 82, 84, 88, 92, 114, 126, 128, 174, 181, 183, 184, 186, 187, 188, 193, 194, 198, 203, 205, 207, 216, 217, 219, 236, 266, 268, 270], "approach": [1, 14, 21, 32, 50, 51, 78, 101, 118, 124, 188, 191, 192, 195, 206, 215, 216, 218, 230, 233, 236, 264, 270], "set": [1, 2, 3, 4, 6, 7, 11, 14, 15, 16, 17, 24, 27, 28, 31, 32, 33, 34, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 66, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 101, 105, 108, 109, 113, 114, 116, 117, 118, 123, 126, 127, 128, 131, 132, 148, 154, 159, 164, 166, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 191, 193, 194, 197, 198, 199, 200, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 222, 223, 224, 227, 229, 230, 231, 232, 236, 237, 243, 245, 247, 253, 256, 263, 265, 274], "up": [1, 3, 4, 10, 14, 16, 17, 18, 23, 28, 31, 33, 42, 43, 45, 51, 52, 53, 55, 56, 57, 59, 60, 67, 68, 72, 76, 78, 79, 81, 82, 87, 91, 92, 94, 103, 105, 111, 113, 116, 117, 121, 123, 128, 129, 131, 132, 144, 159, 161, 177, 183, 184, 185, 188, 189, 193, 195, 198, 199, 200, 205, 207, 208, 210, 211, 214, 215, 216, 217, 230, 231, 232, 233, 234, 237, 265, 266, 269, 270, 272], "monitor": 1, "automat": [1, 3, 4, 6, 7, 10, 11, 16, 21, 32, 33, 34, 43, 51, 53, 54, 55, 56, 57, 59, 64, 66, 70, 76, 79, 81, 91, 93, 94, 109, 114, 116, 122, 150, 152, 153, 162, 164, 177, 181, 184, 185, 188, 189, 190, 193, 194, 195, 198, 201, 204, 205, 207, 208, 210, 211, 214, 216, 217, 223, 224, 229, 230, 231, 234, 247, 252, 264, 266, 268, 269, 273, 274, 275], "detect": [1, 3, 24, 31, 84, 87, 91, 184, 188, 198, 214, 215, 217, 219, 236, 254, 273], "procedur": [1, 34, 36, 42, 48, 49, 50, 78, 87, 109, 129, 191, 193, 210, 211, 216, 217, 243, 270], "again": [1, 4, 11, 14, 17, 43, 51, 66, 91, 114, 116, 129, 159, 160, 174, 181, 185, 186, 193, 201, 208, 214, 227, 246, 266, 274], "whether": [1, 4, 10, 16, 17, 18, 21, 31, 32, 33, 37, 42, 50, 51, 52, 58, 59, 63, 66, 78, 79, 81, 82, 87, 91, 105, 110, 113, 114, 152, 171, 176, 182, 184, 187, 188, 189, 193, 194, 198, 201, 205, 206, 210, 211, 214, 216, 217, 218, 219, 229, 231, 236, 237, 243, 245, 266, 270], "8000": [1, 94], "80": [1, 4, 6, 11, 18, 31, 42, 51, 54, 78, 87, 91, 94, 95, 99, 194, 197, 214, 218, 234, 236], "localhost": 1, "differ": [1, 4, 6, 7, 10, 11, 12, 13, 15, 17, 18, 21, 24, 32, 33, 34, 40, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 62, 64, 66, 67, 71, 73, 75, 76, 78, 79, 80, 81, 84, 87, 91, 92, 93, 94, 99, 105, 106, 111, 114, 116, 120, 124, 128, 129, 132, 136, 137, 149, 150, 158, 159, 162, 164, 166, 169, 173, 174, 175, 177, 178, 179, 182, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 205, 206, 207, 210, 211, 214, 215, 216, 217, 218, 219, 222, 224, 227, 229, 230, 231, 232, 233, 234, 236, 237, 243, 245, 249, 250, 251, 254, 265, 266, 268, 269, 270, 273, 274], "port": [1, 93, 116, 136], "finish": [1, 33, 34, 158, 232, 271], "stop": [1, 4, 33, 34, 43, 51, 87, 91, 184, 204, 206, 214, 218], "ctrl": 1, "detach": 1, "mode": [1, 2, 51, 79, 93, 136, 159, 178, 194, 198, 229, 240, 260], "d": [1, 6, 7, 10, 11, 14, 18, 25, 32, 35, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 56, 59, 61, 65, 69, 74, 76, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 93, 94, 97, 109, 131, 133, 136, 137, 143, 153, 161, 163, 164, 169, 173, 174, 176, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 200, 204, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 222, 224, 236, 239, 243, 244, 245, 246, 247, 251, 259, 270, 275], "name": [1, 3, 4, 5, 6, 7, 10, 11, 16, 18, 24, 27, 28, 32, 33, 34, 38, 41, 44, 47, 50, 51, 52, 53, 57, 58, 59, 61, 64, 76, 78, 79, 80, 84, 87, 91, 93, 94, 97, 106, 108, 111, 113, 114, 116, 131, 135, 144, 159, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 182, 184, 185, 186, 188, 189, 191, 193, 195, 198, 204, 208, 210, 211, 214, 215, 217, 218, 223, 224, 227, 229, 230, 231, 232, 237, 239, 240, 241, 243, 246, 249, 263, 266, 269, 270, 274], "livehtml": 1, "simpli": [1, 3, 4, 7, 16, 17, 29, 34, 50, 51, 53, 57, 61, 82, 84, 87, 91, 93, 94, 102, 106, 114, 116, 128, 154, 159, 169, 179, 182, 188, 195, 206, 207, 208, 214, 217, 234, 237, 249], "should": [1, 3, 5, 6, 7, 8, 10, 11, 13, 16, 17, 18, 21, 24, 26, 28, 31, 32, 33, 34, 42, 43, 44, 45, 47, 50, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 91, 93, 94, 99, 101, 105, 114, 116, 118, 126, 128, 129, 131, 132, 133, 144, 148, 152, 154, 156, 158, 159, 162, 164, 166, 167, 169, 170, 174, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 197, 198, 200, 201, 204, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 222, 223, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 243, 246, 254, 263, 264, 266, 267, 270], "new": [1, 3, 4, 5, 7, 16, 18, 22, 27, 28, 32, 33, 34, 42, 43, 50, 51, 52, 53, 59, 64, 67, 76, 78, 79, 82, 87, 91, 94, 97, 101, 106, 114, 121, 123, 129, 130, 131, 133, 154, 160, 161, 164, 166, 169, 170, 172, 174, 177, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 198, 205, 208, 210, 211, 214, 216, 217, 218, 219, 229, 230, 234, 237, 243, 244, 246, 250, 262, 263, 266, 269, 270, 272], "tab": [1, 11, 47, 131], "show": [1, 3, 4, 6, 7, 11, 13, 14, 15, 16, 17, 18, 33, 43, 50, 51, 55, 57, 74, 76, 78, 87, 91, 94, 95, 99, 105, 114, 120, 125, 129, 131, 159, 163, 167, 169, 174, 181, 182, 184, 185, 188, 189, 191, 193, 194, 198, 199, 201, 205, 206, 207, 208, 210, 211, 214, 216, 218, 219, 227, 230, 231, 234, 236, 237, 266, 268, 270, 273], "necessari": [1, 3, 4, 6, 8, 10, 11, 16, 18, 22, 31, 32, 42, 43, 51, 61, 76, 78, 81, 87, 91, 109, 116, 124, 184, 186, 188, 193, 194, 201, 207, 210, 214, 215, 216, 217, 218, 219, 224, 229, 231, 236, 237, 243, 267, 272], "major": [1, 3, 4, 7, 10, 61, 105, 223, 268, 274], "contributor": [1, 3, 7, 10, 18], "action": [1, 3, 7, 42, 80, 156, 159, 169, 194, 210, 217], "pull": [1, 3, 4, 5, 6, 7, 9, 10, 18, 23, 33, 51, 56, 59, 163, 199, 210, 214, 217, 270, 274], "request": [1, 3, 4, 6, 7, 9, 10, 16, 23, 31, 51, 55, 67, 76, 91, 114, 164, 191, 194, 222, 230], "each": [1, 3, 4, 10, 11, 16, 18, 21, 22, 28, 29, 31, 32, 33, 34, 35, 42, 43, 47, 51, 52, 53, 54, 55, 56, 57, 59, 61, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 94, 99, 101, 107, 108, 109, 114, 116, 118, 121, 123, 125, 126, 129, 148, 161, 164, 173, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 196, 198, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 227, 229, 231, 233, 236, 237, 239, 243, 244, 245, 247, 249, 251, 264, 267, 269, 274, 275], "releas": [1, 7, 10, 51, 78, 82, 93, 128, 184, 223, 234, 237, 269], "includ": [1, 3, 4, 6, 7, 9, 10, 11, 16, 18, 23, 28, 29, 31, 32, 33, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 63, 69, 76, 78, 81, 82, 84, 86, 87, 91, 92, 93, 103, 105, 113, 114, 116, 118, 119, 124, 126, 128, 131, 144, 148, 153, 158, 161, 162, 172, 179, 182, 186, 189, 190, 191, 193, 194, 197, 198, 199, 204, 205, 206, 208, 210, 213, 214, 215, 216, 218, 221, 224, 227, 229, 231, 232, 233, 234, 236, 243, 244, 246, 251, 253, 264, 268, 269, 270, 274, 275], "fail": [1, 3, 4, 6, 7, 10, 16, 17, 18, 33, 42, 43, 47, 50, 51, 55, 57, 75, 76, 78, 79, 87, 88, 91, 93, 116, 154, 159, 178, 184, 187, 188, 189, 191, 193, 194, 198, 205, 208, 214, 216, 218, 227, 229, 236, 237, 270], "99": [1, 33, 51, 52, 87, 91, 191, 192], "time": [1, 3, 4, 7, 10, 11, 14, 16, 17, 24, 28, 29, 33, 42, 43, 47, 51, 52, 56, 59, 74, 76, 81, 82, 87, 88, 90, 91, 92, 93, 98, 99, 101, 105, 109, 110, 113, 114, 116, 118, 121, 122, 124, 126, 127, 128, 129, 131, 132, 138, 148, 153, 161, 162, 166, 167, 169, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 206, 207, 208, 210, 214, 216, 218, 227, 229, 230, 235, 236, 237, 249, 251, 261, 264, 268, 269, 270], "due": [1, 6, 10, 14, 18, 31, 33, 41, 42, 51, 53, 68, 87, 91, 114, 116, 128, 137, 164, 179, 182, 188, 194, 198, 201, 211, 213, 215, 218, 234, 245, 251, 274], "bad": [1, 10, 50, 91, 166, 198], "math": [1, 3, 6, 18, 25, 29, 32, 34, 42, 51, 59, 61, 78, 87, 91, 92, 114, 124, 179, 184, 189, 192, 197, 198, 214, 215, 218, 230, 231, 237, 247, 248, 249, 250, 251, 255, 263, 264, 268], "format": [1, 4, 8, 10, 14, 32, 43, 52, 73, 74, 78, 81, 87, 90, 91, 94, 113, 132, 137, 148, 158, 184, 187, 188, 193, 194, 196, 198, 208, 214, 217, 229, 239, 243, 246, 267, 270, 273], "doubl": [1, 6, 7, 31, 33, 47, 51, 52, 58, 87, 93, 108, 123, 124, 181, 188, 198, 207, 208, 231, 274], "check": [1, 3, 4, 6, 7, 11, 13, 14, 16, 17, 18, 27, 28, 31, 32, 33, 37, 40, 42, 43, 44, 49, 50, 51, 52, 56, 59, 63, 74, 76, 80, 81, 82, 84, 87, 88, 91, 101, 106, 107, 114, 128, 131, 144, 152, 164, 166, 167, 172, 179, 180, 184, 185, 187, 188, 189, 191, 193, 194, 200, 206, 208, 210, 214, 215, 216, 217, 218, 222, 223, 227, 229, 231, 234, 236, 245, 249, 266, 274], "ad": [1, 6, 7, 10, 16, 21, 25, 32, 33, 35, 41, 42, 51, 52, 62, 66, 73, 76, 80, 91, 93, 97, 105, 106, 114, 115, 131, 138, 166, 169, 175, 183, 184, 193, 195, 197, 198, 200, 208, 211, 214, 217, 218, 220, 223, 224, 229, 245, 266], "correctli": [1, 3, 4, 6, 7, 10, 17, 18, 31, 55, 76, 79, 87, 114, 116, 128, 198, 205, 211, 214], "backtick": [1, 6, 7], "code": [1, 6, 8, 9, 11, 14, 16, 17, 18, 23, 24, 34, 38, 42, 45, 46, 51, 52, 53, 55, 59, 63, 76, 78, 79, 87, 91, 92, 93, 106, 114, 116, 122, 124, 125, 129, 131, 132, 158, 164, 173, 178, 181, 183, 184, 185, 186, 188, 191, 197, 208, 210, 214, 216, 217, 218, 223, 226, 227, 229, 230, 231, 234, 235, 236, 237, 246, 261, 266, 268, 271, 273], "singl": [1, 4, 7, 10, 14, 16, 18, 21, 24, 32, 33, 35, 42, 51, 52, 56, 57, 59, 64, 65, 67, 68, 69, 76, 78, 81, 82, 87, 90, 93, 101, 102, 107, 108, 118, 125, 144, 148, 150, 158, 161, 164, 171, 174, 177, 184, 185, 187, 188, 189, 191, 193, 194, 198, 199, 200, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 223, 229, 231, 233, 236, 237, 239, 264, 266, 269, 270, 275], "render": [1, 3, 6, 7, 33, 51, 79, 178, 184, 198, 273], "resourc": [1, 6, 7, 18, 87, 192, 214, 230, 240], "style": [1, 8, 32, 51, 79, 158, 178, 184, 198, 217, 273], "guid": [1, 3, 8, 9, 12, 18, 23, 32, 51, 58, 114, 128, 198, 224, 257, 259, 267, 271, 272], "tip": [1, 6, 51, 128, 214, 215, 274], "few": [1, 3, 4, 10, 16, 29, 41, 43, 51, 52, 78, 79, 91, 92, 116, 124, 167, 173, 178, 181, 182, 185, 193, 198, 206, 207, 208, 214, 217, 218, 231, 236, 274], "extra": [1, 10, 33, 51, 52, 91, 92, 122, 169, 179, 190, 191, 198, 208, 214, 229, 230, 231, 249], "xelatex": 1, "latexmk": 1, "chrome": 1, "chromium": 1, "On": [1, 10, 16, 28, 44, 51, 53, 59, 78, 81, 91, 114, 169, 179, 188, 191, 192, 193, 194, 214, 216, 233, 237, 249, 251], "xetex": 1, "font": [1, 79, 178, 198], "lmodern": 1, "cask": 1, "tap": 1, "dejavu": 1, "strawberryperl": 1, "miktex": [1, 3], "dejavufont": 1, "appdata": 1, "microsoft": 1, "right": [1, 4, 6, 7, 10, 11, 14, 18, 20, 31, 33, 34, 42, 43, 47, 51, 52, 54, 56, 57, 59, 67, 68, 76, 78, 81, 82, 87, 90, 91, 93, 94, 95, 101, 109, 113, 114, 128, 129, 131, 132, 136, 143, 148, 150, 152, 153, 158, 161, 164, 174, 179, 182, 183, 184, 185, 187, 193, 195, 196, 198, 200, 201, 205, 206, 208, 214, 215, 217, 218, 229, 231, 233, 236, 249, 264, 268, 270, 274], "click": 1, "result": [1, 3, 6, 10, 11, 13, 14, 16, 17, 18, 25, 26, 27, 28, 29, 31, 32, 33, 41, 42, 43, 47, 50, 51, 52, 53, 55, 57, 59, 63, 68, 69, 73, 75, 76, 78, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 101, 102, 105, 106, 107, 110, 114, 118, 124, 128, 131, 149, 156, 158, 159, 161, 163, 164, 166, 167, 169, 173, 174, 182, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 222, 223, 225, 229, 230, 231, 233, 234, 236, 237, 239, 243, 245, 247, 266, 268, 269, 270, 274], "version": [1, 3, 4, 5, 6, 7, 11, 12, 16, 17, 18, 22, 23, 26, 32, 33, 42, 43, 49, 51, 52, 57, 59, 64, 78, 81, 82, 83, 85, 87, 89, 91, 104, 106, 114, 148, 162, 166, 174, 183, 184, 185, 188, 189, 191, 193, 194, 198, 201, 210, 216, 218, 228, 229, 231, 232, 233, 234, 236, 237, 241, 243, 248, 266, 269, 270], "where": [1, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 21, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 91, 94, 98, 101, 105, 108, 109, 110, 111, 113, 114, 116, 127, 128, 129, 131, 132, 138, 148, 153, 159, 161, 163, 164, 165, 166, 167, 174, 177, 179, 181, 182, 183, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 222, 224, 229, 230, 231, 232, 236, 237, 239, 243, 249, 251, 264, 266, 268, 270, 274, 275], "g": [1, 3, 4, 5, 7, 10, 11, 16, 17, 18, 31, 32, 33, 34, 36, 39, 41, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 67, 68, 69, 71, 74, 77, 78, 80, 81, 82, 87, 91, 93, 94, 101, 102, 106, 111, 113, 114, 116, 118, 119, 121, 122, 123, 128, 129, 131, 132, 144, 148, 153, 159, 161, 162, 164, 167, 169, 170, 174, 179, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 229, 230, 231, 232, 234, 236, 237, 238, 239, 251, 264, 269, 273, 274, 275], "1": [1, 3, 4, 7, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 143, 146, 147, 148, 149, 150, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 243, 245, 246, 247, 249, 252, 259, 263, 264, 266, 268, 269, 270, 273, 274, 275], "dev": [1, 3, 4, 5, 234], "sympi": [2, 3, 4, 7, 8, 9, 12, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 250, 251, 252, 253, 255, 261, 262, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275], "sympy_debug": [2, 78, 239], "variabl": [2, 3, 6, 7, 10, 12, 14, 17, 18, 24, 25, 26, 28, 29, 31, 33, 34, 46, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 68, 70, 76, 78, 79, 81, 82, 87, 93, 94, 95, 99, 101, 113, 114, 121, 123, 131, 132, 138, 153, 158, 162, 164, 167, 173, 174, 176, 179, 186, 188, 189, 191, 193, 194, 195, 198, 199, 204, 205, 210, 211, 213, 214, 215, 216, 217, 225, 229, 231, 232, 233, 237, 243, 245, 246, 248, 249, 251, 260, 264, 266, 268, 270, 275], "instanc": [2, 4, 6, 7, 10, 13, 16, 17, 18, 26, 27, 28, 30, 32, 33, 42, 44, 46, 51, 53, 55, 56, 57, 59, 64, 67, 68, 69, 74, 75, 78, 79, 82, 84, 87, 91, 93, 94, 102, 106, 109, 113, 114, 132, 137, 144, 148, 154, 158, 159, 161, 163, 164, 174, 176, 178, 179, 184, 188, 189, 193, 194, 195, 196, 198, 206, 208, 210, 214, 216, 217, 218, 222, 223, 224, 229, 230, 231, 233, 236, 237, 243, 244, 245, 246, 247, 249, 251, 263, 264, 269, 274, 275], "unix": [2, 229, 230], "would": [2, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 20, 21, 23, 32, 33, 34, 40, 42, 43, 50, 51, 52, 56, 63, 67, 76, 78, 82, 87, 91, 93, 94, 101, 102, 103, 105, 107, 114, 118, 128, 131, 159, 161, 164, 169, 173, 174, 179, 181, 184, 187, 188, 189, 191, 194, 195, 197, 198, 199, 201, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 222, 223, 229, 231, 233, 236, 237, 239, 240, 247, 248, 249, 251, 263, 264, 266, 268, 269, 270, 273, 274, 275], "do": [2, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 19, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 43, 47, 50, 51, 52, 53, 54, 57, 59, 61, 63, 66, 67, 70, 76, 78, 79, 81, 82, 84, 85, 87, 88, 91, 92, 98, 101, 105, 108, 109, 111, 113, 114, 115, 117, 118, 122, 125, 126, 131, 136, 139, 144, 148, 153, 156, 158, 160, 166, 168, 169, 172, 173, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 201, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 220, 223, 224, 227, 229, 230, 232, 234, 236, 237, 239, 245, 247, 248, 249, 251, 263, 264, 266, 267, 268, 269, 270, 272, 274], "true": [2, 3, 6, 10, 11, 13, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 76, 78, 79, 81, 82, 83, 84, 87, 88, 91, 93, 94, 95, 99, 101, 102, 103, 104, 105, 107, 109, 110, 114, 116, 118, 131, 135, 136, 145, 148, 149, 156, 158, 159, 162, 163, 164, 167, 173, 174, 175, 176, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 229, 230, 231, 232, 234, 236, 237, 239, 243, 245, 246, 247, 248, 249, 252, 263, 264, 266, 268, 269, 270, 273, 274, 275], "isympi": [2, 3, 11, 79], "window": [2, 239, 260], "just": [2, 4, 6, 7, 10, 11, 16, 17, 18, 21, 23, 29, 32, 33, 42, 49, 51, 52, 53, 74, 76, 78, 79, 80, 81, 87, 91, 92, 103, 105, 106, 111, 114, 118, 122, 128, 129, 131, 144, 149, 154, 164, 169, 173, 178, 179, 181, 185, 187, 188, 189, 191, 193, 197, 198, 205, 206, 207, 208, 210, 214, 217, 227, 229, 231, 232, 234, 248, 249, 251, 263, 264, 266, 267, 268, 269, 270, 274, 275], "limit": [2, 4, 10, 11, 21, 23, 29, 31, 33, 50, 51, 53, 55, 56, 57, 59, 60, 63, 71, 73, 78, 79, 81, 87, 91, 99, 124, 129, 153, 159, 162, 178, 184, 189, 191, 194, 195, 198, 201, 202, 204, 206, 210, 211, 213, 214, 215, 216, 218, 223, 230, 233, 236, 237, 239, 242, 243, 252, 265, 266, 268, 270], "function": [2, 3, 4, 7, 8, 13, 14, 16, 17, 19, 20, 22, 26, 27, 28, 30, 31, 32, 34, 42, 43, 46, 47, 49, 52, 53, 54, 55, 56, 60, 61, 62, 63, 68, 71, 72, 75, 77, 78, 79, 80, 82, 84, 86, 90, 92, 94, 96, 98, 99, 101, 102, 103, 107, 108, 111, 112, 113, 114, 117, 118, 119, 120, 124, 126, 127, 131, 136, 137, 138, 139, 143, 148, 149, 150, 153, 158, 159, 160, 161, 162, 163, 164, 167, 173, 174, 177, 178, 180, 182, 183, 185, 190, 191, 192, 193, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275], "nice": [2, 4, 6, 23, 51, 63, 87, 91, 114, 128, 131, 184, 198, 208, 239, 269], "print": [2, 4, 6, 7, 11, 14, 16, 17, 21, 23, 26, 27, 28, 29, 31, 32, 34, 35, 40, 42, 43, 50, 51, 52, 55, 56, 57, 59, 78, 80, 81, 84, 87, 88, 91, 92, 93, 95, 101, 109, 114, 116, 124, 130, 136, 144, 157, 158, 162, 164, 174, 180, 182, 184, 187, 188, 189, 193, 194, 204, 205, 207, 208, 210, 214, 216, 223, 225, 229, 231, 236, 237, 239, 241, 243, 246, 253, 255, 261, 264, 265, 266, 267, 268, 269, 270, 274], "tree": [2, 10, 13, 42, 45, 51, 93, 107, 114, 156, 159, 174, 190, 194, 205, 207, 210, 217, 220, 222, 233, 236, 239, 255, 261, 265], "veri": [2, 3, 4, 6, 10, 11, 13, 16, 18, 33, 47, 51, 52, 55, 56, 61, 63, 69, 73, 76, 78, 81, 87, 91, 101, 105, 114, 118, 131, 136, 169, 181, 182, 185, 188, 191, 193, 194, 195, 197, 198, 199, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 229, 230, 231, 237, 263, 266, 269, 274], "sever": [3, 4, 5, 6, 10, 13, 16, 18, 21, 23, 33, 36, 42, 43, 50, 51, 55, 56, 58, 59, 63, 76, 78, 91, 107, 125, 169, 171, 184, 186, 188, 191, 193, 197, 198, 199, 205, 206, 214, 218, 229, 231, 241, 253, 266, 270, 273], "instal": [3, 5, 7, 11, 55, 92, 188, 189, 198, 230, 237, 261, 267, 273], "enabl": [3, 7, 18, 23, 51, 78, 79, 91, 95, 114, 116, 164, 174, 178, 198, 214, 218, 229, 234, 237, 270, 273, 274], "certain": [3, 7, 18, 23, 30, 32, 33, 42, 49, 51, 55, 59, 67, 76, 78, 91, 93, 128, 174, 175, 185, 188, 191, 193, 198, 199, 205, 208, 210, 211, 214, 217, 218, 220, 231, 232, 237, 243, 245, 251, 274], "most": [3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 21, 23, 26, 27, 28, 31, 32, 33, 34, 42, 43, 50, 51, 52, 55, 61, 63, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 101, 105, 109, 114, 122, 128, 129, 132, 166, 173, 177, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 198, 205, 206, 208, 211, 214, 215, 216, 217, 218, 227, 230, 231, 232, 233, 234, 236, 237, 239, 245, 247, 263, 266, 268, 269, 270, 272, 273, 274], "mention": [3, 4, 6, 18, 42, 76, 78, 101, 116, 132, 133, 179, 208, 211, 214, 218, 246, 247, 248, 249, 270], "except": [3, 4, 6, 10, 11, 14, 16, 17, 18, 31, 33, 42, 43, 51, 52, 55, 57, 59, 76, 78, 86, 91, 108, 122, 170, 183, 185, 188, 189, 190, 193, 194, 195, 196, 198, 207, 210, 211, 214, 215, 217, 222, 227, 229, 231, 232, 235, 236, 237, 246, 249, 261, 263, 266, 269, 270], "unless": [3, 6, 16, 18, 21, 26, 28, 31, 33, 42, 50, 51, 52, 56, 59, 66, 67, 76, 87, 90, 137, 181, 182, 186, 188, 193, 194, 198, 203, 206, 207, 214, 216, 229, 233, 236, 237, 239, 243, 251, 264, 270, 274], "thei": [3, 4, 6, 7, 10, 11, 16, 17, 18, 21, 23, 29, 32, 33, 34, 39, 41, 42, 43, 49, 50, 51, 52, 53, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 76, 78, 79, 81, 82, 84, 85, 87, 90, 91, 93, 105, 108, 109, 111, 113, 114, 116, 122, 124, 126, 127, 128, 131, 132, 138, 143, 148, 153, 156, 161, 166, 167, 169, 170, 174, 177, 178, 179, 182, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 196, 198, 199, 204, 205, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 224, 227, 229, 231, 233, 236, 237, 239, 243, 249, 251, 264, 266, 267, 268, 269, 270, 274], "intend": [3, 4, 6, 10, 16, 51, 52, 62, 71, 76, 91, 93, 107, 159, 188, 189, 193, 196, 211, 214, 215, 227, 232, 263], "part": [3, 4, 6, 7, 10, 16, 17, 18, 25, 30, 42, 43, 50, 51, 52, 56, 57, 59, 67, 74, 76, 78, 81, 82, 84, 91, 101, 105, 106, 108, 109, 113, 114, 116, 122, 124, 125, 129, 131, 148, 160, 164, 173, 182, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 206, 208, 210, 211, 214, 216, 229, 231, 233, 236, 264, 269, 274], "those": [3, 6, 11, 16, 17, 21, 24, 29, 32, 33, 34, 42, 43, 49, 50, 51, 52, 55, 64, 65, 76, 78, 81, 87, 90, 91, 105, 116, 122, 137, 161, 173, 176, 178, 181, 182, 184, 188, 189, 191, 193, 194, 196, 197, 198, 204, 206, 210, 214, 215, 216, 217, 218, 224, 227, 229, 233, 236, 243, 245, 266, 268, 274], "everi": [3, 4, 6, 16, 18, 21, 22, 27, 28, 29, 32, 37, 39, 42, 43, 51, 52, 66, 80, 82, 87, 91, 101, 129, 179, 181, 182, 184, 185, 186, 188, 189, 191, 193, 198, 203, 206, 208, 210, 211, 214, 217, 218, 220, 246, 249, 251, 267, 269, 270, 274], "doe": [3, 6, 7, 8, 10, 13, 16, 17, 18, 22, 23, 24, 27, 28, 31, 32, 33, 34, 42, 43, 47, 49, 50, 51, 52, 53, 55, 57, 59, 61, 62, 64, 65, 67, 76, 78, 81, 82, 87, 90, 91, 93, 103, 105, 107, 114, 116, 121, 125, 144, 148, 154, 158, 160, 163, 173, 181, 182, 184, 186, 187, 188, 189, 191, 193, 194, 195, 198, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 223, 224, 227, 229, 231, 233, 236, 237, 239, 243, 244, 247, 263, 264, 266, 269, 270, 273, 274, 275], "themselv": [3, 7, 10, 18, 29, 32, 43, 47, 49, 51, 78, 91, 124, 125, 168, 188, 189, 193, 204, 218, 224, 233, 236, 239, 274], "incomplet": [3, 6, 7, 51, 56, 59, 186, 188, 194, 200, 216, 217], "main": [3, 5, 6, 7, 10, 11, 28, 29, 33, 51, 57, 76, 82, 87, 90, 114, 122, 162, 168, 178, 182, 184, 185, 189, 190, 198, 205, 214, 217, 223, 230, 274, 275], "webpag": [3, 7], "complet": [3, 4, 6, 11, 16, 21, 28, 33, 51, 52, 53, 55, 57, 58, 59, 67, 76, 78, 87, 91, 105, 109, 110, 118, 124, 131, 150, 153, 154, 182, 191, 194, 195, 199, 205, 210, 211, 214, 217, 218, 229, 231, 239, 268, 269, 274], "io": [3, 7, 79, 198, 237], "one": [3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 22, 24, 25, 28, 29, 31, 32, 33, 35, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 108, 109, 114, 115, 118, 128, 129, 131, 133, 136, 137, 138, 144, 149, 158, 162, 164, 166, 167, 169, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 222, 224, 225, 229, 230, 231, 233, 236, 237, 239, 243, 247, 249, 251, 262, 263, 264, 266, 268, 269, 270, 272, 273, 274], "arbitrari": [3, 6, 10, 11, 16, 18, 21, 31, 36, 43, 44, 50, 51, 52, 55, 56, 59, 62, 63, 65, 81, 82, 87, 95, 125, 129, 150, 153, 182, 184, 185, 188, 189, 191, 193, 195, 210, 214, 215, 216, 224, 234, 237, 243, 244, 263, 264, 269, 274, 275], "precis": [3, 4, 6, 11, 16, 17, 18, 21, 33, 42, 51, 54, 55, 56, 59, 67, 78, 87, 91, 99, 129, 183, 185, 188, 189, 193, 194, 195, 198, 205, 210, 211, 216, 217, 230, 231, 239, 263, 274], "arithmet": [3, 33, 51, 52, 55, 82, 87, 91, 153, 160, 183, 184, 185, 187, 188, 189, 191, 192, 196, 199], "hood": 3, "whenev": [3, 4, 10, 11, 18, 49, 76, 78, 87, 171, 184, 185, 186, 200, 205, 208, 218, 264, 266, 269], "calcul": [3, 11, 14, 16, 25, 31, 34, 43, 49, 51, 52, 53, 54, 55, 57, 59, 61, 63, 64, 65, 67, 68, 78, 82, 84, 87, 91, 94, 95, 103, 105, 106, 108, 109, 113, 116, 117, 118, 133, 136, 137, 140, 143, 159, 160, 161, 162, 164, 165, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 188, 189, 191, 193, 194, 195, 200, 205, 214, 218, 222, 230, 231, 237, 243, 245, 249, 250, 251, 270, 273], "float": [3, 16, 18, 33, 42, 57, 59, 66, 68, 78, 79, 82, 87, 91, 93, 99, 101, 131, 137, 178, 184, 188, 189, 198, 210, 216, 218, 229, 237, 239, 254, 263, 266], "point": [3, 4, 6, 7, 10, 11, 14, 16, 21, 23, 25, 31, 33, 34, 42, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 73, 74, 75, 76, 78, 87, 91, 94, 95, 97, 99, 106, 108, 109, 110, 111, 113, 114, 116, 118, 120, 121, 122, 123, 126, 127, 128, 129, 131, 132, 144, 166, 169, 175, 179, 180, 182, 184, 185, 188, 189, 191, 193, 194, 198, 200, 204, 205, 206, 214, 216, 217, 218, 230, 233, 236, 237, 239, 243, 245, 247, 248, 249, 250, 251, 252, 254, 263, 264, 266, 269], "valu": [3, 4, 6, 7, 10, 11, 14, 16, 18, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 103, 106, 108, 109, 110, 111, 113, 114, 116, 128, 131, 133, 137, 140, 143, 148, 150, 153, 156, 158, 159, 160, 161, 164, 165, 167, 168, 169, 174, 175, 177, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 193, 194, 195, 196, 198, 199, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 229, 231, 232, 236, 237, 239, 245, 247, 249, 252, 264, 266, 269], "evalf": [3, 6, 11, 16, 33, 50, 55, 56, 57, 59, 70, 73, 74, 82, 87, 93, 114, 116, 131, 146, 189, 194, 205, 206, 210, 218, 230, 237, 254, 265], "cannot": [3, 4, 6, 7, 10, 11, 13, 17, 18, 23, 26, 27, 28, 29, 30, 31, 33, 43, 48, 50, 51, 53, 55, 56, 57, 61, 63, 64, 66, 68, 73, 78, 80, 83, 85, 87, 89, 91, 101, 159, 167, 169, 181, 182, 184, 189, 191, 193, 194, 195, 198, 205, 206, 210, 211, 213, 214, 216, 217, 218, 219, 227, 229, 230, 231, 236, 240, 243, 244, 268, 269, 270, 274, 275], "without": [3, 4, 6, 7, 10, 11, 16, 18, 23, 27, 29, 30, 33, 50, 51, 52, 53, 55, 59, 76, 78, 79, 82, 84, 87, 101, 102, 114, 120, 122, 127, 128, 164, 169, 173, 174, 175, 181, 184, 187, 188, 191, 194, 198, 200, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 220, 223, 224, 227, 229, 230, 231, 234, 236, 237, 239, 245, 248, 270, 274], "import": [3, 4, 8, 11, 13, 14, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 252, 263, 264, 266, 268, 269, 270, 272, 273, 274, 275], "importerror": 3, "extern": [3, 23, 79, 93, 97, 99, 116, 124, 178, 188, 189, 199, 206, 210, 218, 229, 230], "doc": [3, 4, 6, 7, 8, 11, 22, 33, 42, 50, 51, 67, 79, 129, 166, 188, 190, 211, 214, 229, 230, 232, 234, 236, 243, 247], "latest": [3, 5, 23, 32, 232, 234, 237], "mean": [3, 4, 6, 7, 10, 11, 16, 17, 18, 29, 34, 43, 50, 51, 52, 53, 69, 76, 78, 79, 81, 82, 85, 87, 91, 105, 164, 166, 169, 174, 178, 181, 184, 185, 186, 188, 191, 193, 197, 198, 208, 210, 211, 214, 216, 217, 218, 219, 220, 222, 223, 229, 236, 247, 263, 264, 266, 268, 269, 270, 274, 275], "did": [3, 7, 17, 51, 78, 91, 105, 121, 169, 191, 195, 206, 216, 227, 237, 266, 268, 274], "explain": [3, 4, 6, 7, 16, 32, 47, 51, 59, 69, 74, 125, 185, 188, 191, 193, 195, 205], "ones": [3, 4, 10, 18, 23, 33, 42, 47, 51, 76, 78, 81, 82, 84, 87, 90, 91, 114, 137, 158, 164, 187, 191, 201, 211, 214, 219, 225, 231, 239, 243, 247, 270, 273], "typic": [3, 4, 10, 18, 47, 59, 76, 91, 101, 106, 111, 115, 173, 182, 184, 186, 191, 195, 208, 230, 231, 247], "directli": [3, 4, 6, 10, 11, 14, 16, 17, 18, 23, 27, 28, 31, 32, 33, 42, 50, 51, 53, 57, 62, 82, 84, 87, 91, 114, 150, 162, 167, 174, 177, 184, 185, 188, 189, 193, 194, 206, 207, 208, 210, 211, 214, 215, 217, 218, 229, 230, 231, 232, 233, 234, 264, 275], "git": [3, 8], "repositori": [3, 5, 7, 23], "vast": [3, 78, 190], "wrap": [3, 4, 6, 26, 27, 28, 29, 33, 40, 51, 57, 79, 92, 178, 182, 184, 187, 188, 191, 198, 201, 217, 223, 230, 234, 237, 239, 269], "addition": [3, 6, 10, 51, 126, 162, 182, 191, 198, 218, 227, 234, 246], "ci": [3, 7, 59, 76, 198, 273], "wish": [3, 6, 11, 18, 23, 33, 51, 52, 55, 76, 91, 159, 173, 182, 233, 237, 264, 268, 270, 275], "local": [3, 24, 26, 27, 28, 51, 53, 76, 93, 121, 123, 176, 185, 191, 216, 229], "improv": [3, 4, 10, 17, 18, 51, 76, 124, 184, 188, 191, 192, 194, 195, 197, 199, 214, 217, 223, 254, 264, 270], "perform": [3, 10, 11, 13, 14, 16, 18, 30, 32, 33, 34, 42, 43, 46, 50, 51, 52, 54, 55, 57, 64, 68, 75, 78, 85, 87, 91, 92, 107, 109, 116, 118, 124, 128, 129, 131, 148, 149, 158, 161, 164, 179, 182, 186, 187, 188, 191, 193, 194, 199, 200, 201, 205, 210, 211, 214, 216, 217, 218, 219, 230, 236, 243, 244, 246, 249, 254, 263, 264, 268, 269, 274], "gmpy2": [3, 188, 189], "wrapper": [3, 10, 18, 27, 29, 33, 43, 51, 59, 87, 128, 176, 178, 187, 188, 191, 198, 205, 214, 217, 218, 230, 234, 236], "gmp": 3, "multipl": [3, 4, 6, 10, 11, 16, 18, 21, 27, 28, 29, 31, 32, 33, 34, 40, 42, 43, 47, 50, 51, 52, 56, 57, 59, 61, 66, 69, 71, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 98, 101, 105, 116, 124, 131, 132, 148, 149, 150, 154, 161, 163, 166, 169, 170, 171, 174, 177, 181, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 198, 203, 204, 206, 207, 208, 210, 211, 214, 215, 217, 218, 219, 222, 224, 227, 231, 232, 233, 234, 236, 237, 239, 243, 247, 263, 264, 266, 267, 269, 270, 275], "larg": [3, 4, 6, 11, 16, 42, 43, 51, 52, 61, 76, 78, 90, 91, 105, 110, 128, 131, 144, 169, 173, 183, 188, 189, 191, 194, 197, 198, 199, 205, 208, 210, 218, 223, 230, 237, 239, 245, 263, 268, 274], "integ": [3, 6, 7, 10, 11, 16, 18, 20, 21, 26, 27, 28, 31, 33, 34, 40, 42, 43, 44, 45, 47, 50, 52, 53, 54, 55, 56, 58, 59, 61, 64, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 94, 101, 103, 153, 158, 160, 161, 162, 164, 166, 174, 176, 178, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 203, 204, 205, 207, 208, 210, 211, 214, 216, 217, 218, 222, 223, 224, 230, 231, 233, 236, 239, 264, 266, 269, 273, 274], "faster": [3, 16, 33, 36, 51, 59, 82, 91, 92, 105, 107, 109, 110, 128, 187, 188, 189, 191, 193, 194, 195, 199, 201, 205, 210, 211, 214, 215, 217, 230, 233], "int": [3, 6, 7, 10, 11, 16, 17, 18, 25, 31, 33, 43, 51, 52, 53, 56, 57, 59, 60, 67, 76, 78, 79, 81, 82, 87, 88, 91, 93, 99, 101, 144, 148, 149, 158, 174, 176, 177, 178, 183, 184, 188, 189, 193, 194, 195, 198, 200, 201, 203, 214, 215, 218, 230, 234, 236, 239, 266, 268, 269, 273, 274], "core": [3, 4, 5, 6, 11, 13, 16, 17, 18, 29, 31, 33, 42, 52, 57, 58, 60, 68, 82, 86, 91, 93, 162, 163, 186, 188, 189, 190, 191, 193, 194, 195, 198, 205, 206, 210, 211, 214, 218, 228, 229, 230, 236, 237, 241, 253, 254, 266, 269], "oper": [3, 5, 6, 16, 17, 18, 25, 29, 33, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 59, 61, 69, 71, 74, 76, 81, 82, 84, 86, 91, 93, 101, 102, 105, 109, 110, 118, 122, 128, 131, 136, 140, 141, 145, 147, 148, 149, 150, 155, 156, 159, 161, 162, 163, 164, 173, 174, 176, 180, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 201, 203, 206, 207, 209, 210, 214, 216, 217, 220, 221, 222, 223, 229, 230, 233, 236, 237, 243, 250, 253, 259, 265, 266, 267, 269, 274], "poli": [3, 11, 50, 51, 52, 56, 57, 59, 60, 67, 73, 78, 82, 84, 87, 91, 131, 185, 186, 190, 191, 193, 194, 195, 197, 200, 213, 214, 216, 217, 229], "refer": [3, 4, 5, 7, 11, 14, 17, 18, 19, 23, 27, 28, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 45, 49, 52, 54, 56, 57, 59, 61, 66, 67, 68, 71, 73, 77, 79, 80, 81, 86, 88, 92, 94, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 116, 124, 126, 129, 131, 132, 133, 134, 135, 137, 141, 143, 145, 146, 147, 150, 152, 153, 161, 162, 164, 168, 173, 174, 175, 176, 177, 179, 181, 188, 190, 195, 198, 200, 201, 203, 206, 209, 210, 212, 214, 215, 216, 218, 224, 233, 235, 236, 237, 239, 243, 246, 247, 251, 254, 257, 258, 259, 260, 261, 266, 270, 271, 274], "domain": [3, 6, 10, 14, 18, 31, 32, 51, 52, 54, 56, 57, 59, 70, 72, 73, 76, 78, 84, 87, 88, 91, 98, 101, 114, 131, 185, 187, 190, 191, 193, 195, 196, 212, 213, 214, 216, 218, 270, 275], "No": [3, 6, 7, 11, 32, 51, 59, 66, 81, 91, 102, 114, 159, 184, 194, 200, 201, 210, 211, 216, 217, 218, 223, 227, 233, 234, 236, 263, 275], "mani": [3, 4, 6, 11, 14, 16, 17, 18, 21, 23, 31, 32, 33, 34, 39, 42, 47, 51, 52, 53, 55, 57, 59, 63, 76, 78, 81, 82, 87, 91, 92, 109, 110, 114, 116, 124, 127, 128, 131, 148, 164, 172, 182, 185, 187, 188, 189, 191, 193, 202, 205, 206, 208, 210, 211, 214, 215, 216, 217, 218, 222, 231, 236, 263, 264, 266, 267, 268, 269, 273, 274, 275], "algorithm": [3, 6, 11, 16, 21, 31, 35, 36, 38, 41, 42, 43, 45, 47, 49, 50, 51, 52, 55, 56, 57, 63, 68, 76, 78, 81, 84, 87, 88, 91, 102, 128, 151, 169, 174, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 199, 202, 203, 206, 207, 209, 210, 211, 214, 216, 217, 218, 224, 233, 236, 255, 264, 269, 270, 274], "simplif": [3, 11, 16, 26, 28, 30, 31, 33, 51, 53, 56, 57, 76, 82, 87, 93, 107, 114, 128, 131, 148, 164, 174, 194, 199, 209, 214, 216, 217, 253, 254, 256, 263, 265, 267, 268], "factor": [3, 10, 11, 34, 42, 43, 50, 51, 52, 55, 56, 57, 59, 76, 78, 87, 91, 94, 101, 131, 133, 141, 145, 148, 160, 164, 169, 170, 171, 185, 188, 189, 190, 192, 193, 194, 201, 207, 208, 210, 211, 216, 218, 222, 233, 246, 249, 268, 270], "matric": [3, 6, 15, 16, 29, 33, 51, 52, 78, 88, 90, 101, 108, 109, 110, 114, 118, 128, 131, 133, 136, 137, 139, 147, 148, 158, 163, 174, 182, 183, 187, 193, 198, 199, 206, 208, 210, 211, 214, 216, 217, 219, 221, 231, 232, 259, 265, 267, 268], "thu": [3, 4, 10, 11, 14, 21, 29, 36, 42, 43, 51, 52, 53, 57, 59, 74, 76, 78, 82, 85, 87, 90, 91, 102, 113, 118, 124, 128, 169, 174, 186, 191, 193, 195, 199, 205, 208, 210, 231, 236, 237, 247, 248, 266, 269, 274, 275], "speed": [3, 6, 28, 33, 42, 51, 52, 55, 82, 91, 92, 103, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 131, 132, 135, 138, 173, 174, 177, 182, 183, 195, 198, 199, 205, 210, 214, 230, 233, 236, 269, 270], "non": [3, 4, 11, 16, 18, 24, 29, 31, 34, 41, 44, 50, 51, 52, 56, 57, 58, 59, 60, 61, 64, 65, 66, 78, 80, 81, 82, 83, 84, 87, 88, 90, 105, 109, 111, 116, 118, 122, 126, 127, 131, 148, 153, 163, 164, 166, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 201, 205, 206, 208, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 229, 231, 236, 239, 249, 269, 274, 275], "who": [3, 4, 6, 14, 18, 52, 53, 131, 182, 191, 198, 267], "abl": [3, 4, 6, 14, 16, 18, 32, 33, 42, 47, 51, 52, 53, 62, 70, 78, 84, 87, 91, 98, 114, 126, 128, 129, 131, 132, 185, 188, 195, 214, 217, 229, 246, 268, 273, 275], "experi": [3, 116, 217, 218], "design": [3, 4, 6, 10, 12, 13, 17, 18, 20, 22, 29, 34, 41, 51, 87, 90, 93, 131, 132, 188, 192, 198, 203, 208, 214, 217, 268, 269, 273], "interfac": [3, 7, 21, 31, 51, 79, 108, 124, 133, 159, 178, 180, 182, 188, 191, 196, 217, 230, 231, 260], "ipython": [3, 6, 10, 11, 23, 79, 131, 178, 237, 241, 242, 272, 273], "jupyt": [3, 10, 18, 237, 241], "notebook": [3, 18, 23, 79, 178, 237, 272, 273], "init_sess": [3, 79, 273], "usual": [3, 10, 11, 14, 16, 32, 34, 42, 50, 51, 52, 69, 76, 78, 87, 124, 150, 162, 169, 179, 181, 182, 185, 186, 188, 189, 191, 197, 198, 199, 205, 208, 214, 217, 218, 219, 223, 224, 231, 233, 237, 243, 251, 263, 266, 269, 273, 274], "flag": [3, 4, 18, 31, 33, 42, 43, 47, 49, 51, 64, 66, 78, 81, 82, 83, 87, 91, 114, 148, 184, 189, 191, 194, 195, 198, 199, 200, 206, 210, 211, 214, 216, 217, 224, 229, 230, 236, 239, 263, 274], "auto_symbol": [3, 79, 93], "auto_int_to_integ": [3, 79], "qt": 3, "consol": [3, 4, 11, 51, 79, 178, 184, 273], "express": [3, 4, 6, 7, 12, 13, 16, 17, 18, 20, 26, 27, 28, 29, 30, 31, 43, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 71, 74, 75, 76, 78, 79, 82, 85, 86, 87, 90, 91, 92, 94, 101, 102, 104, 105, 110, 111, 114, 118, 124, 126, 127, 128, 129, 131, 132, 139, 143, 147, 148, 152, 153, 156, 159, 161, 162, 163, 164, 166, 167, 169, 171, 173, 174, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 193, 194, 195, 198, 199, 201, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 237, 239, 243, 244, 246, 248, 249, 250, 251, 255, 256, 257, 261, 264, 265, 266, 267, 268, 270, 273, 274, 275], "mathjax": [3, 7, 79, 178, 273], "preview": [3, 32, 232, 261], "save": [3, 31, 51, 87, 91, 184, 197, 216, 233], "viewer": [3, 7, 32, 198, 232], "parser": [3, 84, 93, 124, 131, 229], "modul": [3, 4, 5, 6, 7, 10, 11, 13, 16, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 41, 43, 51, 52, 54, 56, 57, 59, 63, 67, 71, 74, 77, 78, 79, 81, 84, 85, 86, 87, 92, 93, 94, 96, 97, 99, 102, 105, 114, 115, 120, 124, 126, 127, 131, 133, 136, 138, 139, 151, 154, 167, 168, 169, 170, 179, 182, 184, 189, 190, 192, 195, 196, 198, 202, 205, 208, 212, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 245, 247, 249, 250, 251, 252, 253, 259, 261, 263, 266, 268, 274, 275], "parse_expr": [3, 10, 16, 93], "mathematca": 3, "parse_mathematica": [3, 10, 93], "maxima": [3, 21, 93, 217], "parse_maxima": [3, 93], "antlr": [3, 93, 114], "runtim": [3, 33, 51, 110, 261], "autolev": [3, 116, 124], "call": [3, 4, 6, 7, 11, 13, 14, 16, 17, 18, 20, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 40, 41, 42, 43, 49, 51, 52, 54, 55, 56, 58, 59, 61, 66, 67, 69, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 101, 105, 114, 116, 118, 125, 128, 129, 154, 156, 159, 164, 169, 174, 179, 181, 182, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 198, 200, 205, 206, 208, 210, 211, 213, 214, 216, 217, 218, 220, 222, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 243, 245, 246, 249, 251, 264, 266, 268, 269, 270, 273, 274, 275], "antlr4": [3, 93], "awar": [3, 4, 6, 11, 17, 31, 51, 55, 81, 87, 208, 218, 237], "must": [3, 4, 5, 6, 10, 11, 16, 17, 21, 25, 26, 27, 28, 33, 42, 43, 45, 47, 49, 50, 51, 52, 53, 56, 57, 59, 61, 64, 67, 70, 73, 74, 76, 78, 81, 82, 83, 84, 87, 90, 91, 94, 95, 97, 99, 101, 102, 109, 110, 114, 116, 124, 126, 127, 128, 129, 131, 144, 159, 161, 164, 173, 174, 182, 183, 184, 185, 186, 189, 191, 193, 194, 198, 199, 206, 207, 208, 210, 211, 214, 216, 217, 218, 222, 223, 229, 230, 231, 232, 233, 234, 236, 237, 240, 266, 268, 269, 273, 274], "match": [3, 4, 6, 10, 11, 16, 18, 42, 43, 50, 51, 64, 76, 78, 82, 87, 113, 140, 165, 173, 174, 187, 194, 210, 211, 214, 215, 218, 227, 229, 231, 236, 237, 248, 264], "wa": [3, 4, 10, 11, 16, 18, 40, 42, 43, 45, 51, 52, 53, 59, 64, 87, 91, 93, 105, 106, 114, 116, 118, 128, 129, 159, 169, 181, 182, 183, 185, 191, 193, 194, 195, 197, 198, 207, 208, 210, 214, 216, 218, 227, 229, 232, 234, 236, 237, 264, 266, 268, 269, 272], "compil": [3, 33, 79, 92, 105, 131, 178, 198, 210, 223, 229, 230, 231, 253, 268], "4": [3, 7, 11, 12, 14, 16, 17, 18, 20, 21, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 73, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 107, 114, 116, 117, 118, 119, 121, 122, 123, 124, 128, 129, 131, 132, 133, 136, 140, 143, 148, 158, 159, 161, 162, 163, 164, 165, 167, 173, 174, 175, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 216, 217, 218, 219, 220, 223, 224, 229, 230, 233, 236, 237, 243, 245, 246, 247, 249, 251, 252, 263, 264, 266, 268, 269, 270, 274, 275], "clang": [3, 93], "bind": [3, 33, 198, 230], "parse_c": 3, "lfortran": [3, 93], "fortran": [3, 14, 18, 31, 92, 93, 105, 131, 183, 231, 255, 261, 273], "satisfi": [3, 7, 10, 16, 21, 28, 29, 31, 34, 39, 42, 47, 51, 52, 56, 59, 61, 74, 76, 80, 81, 87, 91, 110, 128, 148, 153, 185, 186, 191, 193, 194, 198, 204, 205, 206, 211, 214, 215, 216, 217, 218, 224, 269, 274], "implement": [3, 6, 7, 10, 12, 13, 17, 18, 21, 22, 25, 26, 27, 28, 31, 32, 33, 34, 36, 41, 42, 43, 48, 51, 52, 54, 56, 57, 59, 62, 64, 71, 72, 74, 75, 77, 78, 81, 82, 83, 87, 91, 92, 93, 105, 114, 124, 133, 135, 136, 139, 148, 149, 157, 158, 160, 168, 173, 175, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 202, 205, 206, 207, 210, 211, 214, 215, 216, 217, 218, 222, 223, 233, 235, 236, 237, 240, 250, 253, 261, 264, 268, 274], "dpll": 3, "But": [3, 4, 7, 10, 11, 18, 50, 51, 59, 65, 75, 82, 87, 91, 152, 153, 164, 169, 174, 185, 186, 191, 195, 205, 207, 208, 210, 211, 214, 216, 217, 223, 233, 236, 237, 245, 264, 266, 268, 269, 274], "sat": [3, 27], "solver": [3, 6, 27, 59, 87, 91, 113, 124, 131, 132, 187, 190, 210, 211, 215, 229, 253, 254, 265, 267], "ask": [3, 6, 11, 13, 16, 17, 27, 28, 29, 30, 51, 63, 76, 114, 169, 185, 204, 210, 217, 236, 266], "pycosat": 3, "forc": [3, 11, 14, 17, 18, 51, 55, 57, 61, 67, 76, 78, 81, 94, 95, 97, 106, 108, 109, 113, 116, 118, 119, 120, 121, 124, 126, 127, 128, 131, 152, 153, 167, 179, 182, 184, 186, 188, 207, 210, 211, 216, 229, 249, 251, 273, 274], "pysat": 3, "minisat": 3, "minisat22": 3, "heavi": [3, 218, 269], "primarili": [3, 16, 33, 51, 91, 94, 163, 194, 196, 230, 233, 239, 246], "support": [3, 4, 5, 6, 7, 10, 11, 18, 23, 25, 26, 27, 28, 31, 32, 33, 43, 51, 55, 58, 59, 61, 75, 78, 84, 87, 91, 92, 93, 94, 95, 97, 98, 101, 105, 114, 131, 159, 174, 181, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 203, 204, 205, 206, 210, 214, 215, 216, 217, 218, 219, 223, 227, 229, 230, 231, 237, 247, 249, 264, 266, 269, 273], "give": [3, 4, 6, 11, 16, 17, 18, 26, 28, 33, 34, 40, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 59, 61, 63, 64, 66, 67, 75, 76, 78, 79, 81, 84, 87, 90, 91, 92, 94, 101, 114, 131, 143, 158, 159, 161, 162, 166, 167, 169, 170, 172, 174, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 191, 193, 194, 195, 198, 199, 200, 201, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 229, 230, 231, 236, 246, 251, 266, 267, 269, 274, 275], "rudimentari": [3, 18, 191], "text": [3, 4, 6, 7, 18, 23, 33, 42, 52, 56, 57, 59, 69, 76, 79, 82, 87, 91, 129, 169, 178, 184, 185, 198, 205, 211, 214, 217, 218, 229], "pyglet": [3, 198, 260], "pygletplot": [3, 184], "2d": [3, 10, 64, 65, 67, 77, 94, 95, 97, 142, 174, 184, 198, 211, 223, 268], "3d": [3, 10, 25, 35, 64, 65, 94, 142, 165, 179, 184, 246, 248, 249, 250, 251], "evalu": [3, 6, 14, 16, 17, 20, 26, 27, 28, 31, 33, 51, 53, 56, 57, 59, 62, 66, 67, 71, 76, 78, 81, 84, 87, 91, 92, 93, 101, 105, 107, 114, 124, 128, 129, 139, 141, 143, 145, 150, 153, 161, 164, 183, 184, 188, 189, 191, 192, 194, 198, 199, 204, 205, 206, 208, 210, 211, 214, 216, 217, 218, 220, 230, 231, 232, 237, 249, 254, 263, 264, 265, 266, 268, 270], "numer": [3, 6, 10, 11, 14, 16, 20, 21, 29, 31, 33, 50, 51, 56, 59, 63, 67, 71, 74, 87, 91, 93, 97, 98, 99, 101, 108, 109, 110, 114, 116, 124, 128, 132, 136, 143, 146, 161, 168, 173, 182, 184, 188, 189, 191, 192, 193, 194, 197, 198, 207, 208, 210, 214, 216, 217, 223, 229, 230, 236, 237, 254, 263, 266, 270, 274], "variou": [3, 6, 7, 14, 18, 21, 31, 33, 35, 42, 50, 51, 56, 71, 76, 78, 81, 111, 143, 147, 148, 159, 161, 173, 185, 186, 189, 190, 191, 193, 199, 205, 208, 211, 214, 215, 217, 231, 274], "primari": [3, 4, 6, 7, 16, 18, 51, 63, 81, 182, 185, 231, 237], "vehicl": 3, "between": [3, 4, 13, 17, 18, 21, 32, 33, 41, 42, 43, 45, 49, 51, 53, 56, 59, 61, 63, 64, 65, 66, 67, 68, 78, 80, 81, 84, 85, 87, 91, 92, 93, 97, 98, 99, 101, 108, 111, 113, 114, 117, 121, 123, 125, 128, 129, 131, 132, 133, 136, 137, 143, 150, 152, 153, 154, 158, 161, 162, 163, 164, 167, 168, 169, 174, 175, 176, 177, 179, 181, 182, 184, 185, 187, 190, 191, 193, 198, 200, 210, 214, 215, 216, 217, 218, 219, 232, 237, 243, 245, 246, 249, 251, 266], "standard": [3, 7, 10, 11, 16, 18, 21, 33, 51, 55, 57, 59, 74, 76, 78, 79, 80, 81, 85, 87, 91, 92, 93, 104, 141, 145, 174, 179, 185, 188, 189, 191, 198, 201, 206, 210, 211, 214, 217, 218, 231, 237, 240, 246, 251, 263, 266, 274], "wai": [3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 21, 24, 32, 34, 35, 40, 42, 43, 44, 47, 51, 53, 56, 59, 67, 71, 75, 76, 78, 80, 84, 87, 90, 91, 93, 94, 97, 105, 109, 111, 113, 114, 118, 120, 121, 124, 128, 144, 158, 161, 162, 167, 169, 172, 173, 174, 176, 177, 179, 181, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 205, 208, 210, 211, 214, 215, 217, 219, 220, 223, 224, 227, 231, 233, 236, 237, 240, 243, 246, 247, 248, 249, 251, 263, 264, 266, 267, 268, 269, 274, 275], "principl": [3, 52, 82, 91, 135, 185, 186, 191, 207, 216], "pass": [3, 4, 5, 6, 11, 13, 16, 17, 18, 24, 25, 28, 31, 32, 33, 42, 43, 51, 52, 53, 55, 57, 58, 59, 61, 64, 65, 67, 78, 79, 81, 82, 84, 87, 88, 91, 93, 94, 99, 101, 106, 113, 114, 118, 131, 132, 136, 153, 154, 158, 159, 161, 162, 174, 178, 184, 185, 187, 188, 189, 191, 193, 194, 196, 198, 199, 205, 206, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 227, 229, 230, 231, 232, 234, 236, 237, 239, 242, 243, 263, 264, 269, 273, 274, 275], "appropri": [3, 6, 7, 11, 14, 21, 42, 51, 57, 66, 87, 105, 116, 153, 154, 164, 174, 181, 187, 188, 194, 195, 198, 204, 205, 210, 211, 216, 218, 223, 231, 247, 273], "namespac": [3, 6, 10, 24, 33, 34, 51, 189, 211, 214, 215, 229, 231, 232, 237], "dictionari": [3, 10, 21, 32, 33, 40, 42, 43, 49, 51, 56, 65, 67, 80, 82, 87, 90, 91, 93, 94, 107, 109, 110, 113, 114, 116, 118, 121, 126, 128, 154, 164, 174, 182, 184, 186, 189, 191, 193, 194, 196, 198, 205, 210, 211, 214, 215, 216, 217, 218, 222, 224, 229, 233, 236, 237, 243, 263, 270], "third": [3, 4, 33, 42, 43, 51, 59, 61, 65, 101, 161, 167, 181, 186, 194, 208, 214, 217, 218, 234, 236, 250, 264, 269], "argument": [3, 4, 5, 6, 13, 16, 17, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 68, 76, 78, 79, 81, 82, 84, 87, 90, 91, 93, 94, 99, 101, 109, 113, 114, 126, 127, 131, 138, 141, 145, 147, 150, 153, 158, 159, 161, 162, 163, 164, 172, 178, 179, 183, 184, 185, 186, 188, 189, 191, 193, 194, 197, 198, 199, 200, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 222, 223, 229, 230, 231, 232, 233, 234, 236, 237, 239, 246, 247, 249, 263, 264, 269, 270, 274], "default": [3, 4, 6, 7, 11, 16, 18, 21, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 41, 42, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 73, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 95, 99, 101, 103, 105, 106, 107, 108, 109, 110, 114, 128, 137, 154, 156, 159, 161, 162, 164, 170, 173, 174, 176, 177, 178, 183, 184, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 205, 206, 207, 210, 211, 214, 215, 216, 217, 218, 223, 224, 229, 230, 231, 233, 234, 236, 237, 239, 243, 263, 264, 268, 270, 273, 274], "translat": [3, 10, 33, 42, 51, 60, 62, 66, 68, 92, 93, 101, 104, 108, 109, 121, 123, 129, 181, 184, 198, 214, 216, 230, 231, 237, 239, 247], "numpi": [3, 6, 10, 18, 23, 33, 51, 74, 79, 86, 92, 99, 114, 131, 148, 158, 187, 198, 218, 223, 230, 231, 237, 263, 266], "By": [3, 11, 16, 18, 21, 26, 28, 33, 41, 50, 51, 53, 55, 56, 59, 65, 66, 70, 74, 76, 81, 82, 87, 90, 91, 92, 93, 94, 95, 99, 106, 159, 164, 184, 186, 188, 189, 191, 193, 194, 195, 197, 198, 200, 205, 207, 210, 211, 214, 216, 217, 218, 222, 224, 225, 229, 232, 236, 237, 249, 263, 268, 269, 274], "produc": [3, 6, 7, 17, 18, 21, 32, 42, 51, 52, 64, 78, 81, 87, 174, 188, 193, 194, 198, 205, 214, 215, 216, 218, 227, 229, 233, 234, 236, 273], "behavior": [3, 4, 10, 11, 18, 42, 51, 59, 78, 93, 104, 105, 124, 128, 159, 185, 186, 193, 194, 198, 199, 203, 205, 207, 210, 227, 230, 232, 236, 237, 266], "backward": [3, 8, 14, 31, 51, 82, 87, 198, 236, 274], "scipi": [3, 33, 51, 59, 105, 131, 158, 198, 218, 230, 237, 263, 272], "special": [3, 6, 12, 16, 18, 24, 25, 43, 51, 52, 54, 55, 56, 58, 66, 69, 76, 78, 82, 87, 131, 148, 153, 179, 185, 188, 190, 191, 192, 193, 198, 207, 208, 210, 214, 215, 216, 218, 229, 230, 231, 234, 236, 237, 246, 249, 251, 255, 256, 264, 265, 269], "cupi": [3, 92], "cuda": [3, 92], "gpu": [3, 92, 131], "jax": [3, 92, 237], "xla": [3, 92], "program": [3, 7, 11, 16, 33, 35, 43, 131, 169, 183, 231, 233, 266, 268, 272, 274], "tpu": [3, 92], "tensorflow": [3, 237], "learn": [3, 5, 7, 20, 87, 129, 182, 207, 217, 263, 266, 267, 268, 272], "numexpr": [3, 237], "fast": [3, 16, 33, 51, 78, 86, 87, 91, 136, 189, 190, 191, 192, 193, 194, 195, 201, 205, 214, 216, 233, 236, 237], "alreadi": [3, 4, 10, 11, 16, 18, 21, 23, 42, 43, 51, 52, 60, 61, 64, 65, 67, 76, 78, 82, 88, 91, 97, 102, 106, 114, 128, 133, 159, 161, 164, 179, 181, 182, 184, 187, 188, 191, 193, 197, 201, 207, 208, 210, 214, 217, 218, 224, 247, 249, 264, 266, 267, 268, 272, 273, 274, 275], "number": [3, 4, 5, 6, 7, 10, 13, 16, 18, 21, 25, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 77, 78, 79, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 95, 99, 101, 102, 103, 105, 109, 110, 113, 114, 118, 128, 129, 131, 137, 140, 143, 144, 147, 148, 149, 150, 152, 153, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 198, 200, 204, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 223, 224, 229, 231, 233, 236, 239, 243, 245, 246, 248, 249, 251, 254, 263, 264, 266, 268, 269, 270, 274], "languag": [3, 7, 11, 14, 18, 33, 57, 87, 93, 105, 114, 131, 198, 203, 218, 230, 231, 266, 268, 270, 272, 274], "valid": [3, 6, 7, 10, 16, 17, 18, 26, 28, 30, 31, 32, 33, 44, 50, 51, 56, 57, 67, 77, 87, 91, 107, 108, 109, 114, 116, 129, 133, 137, 156, 161, 171, 174, 178, 182, 188, 191, 194, 197, 198, 206, 210, 211, 214, 216, 217, 218, 237, 270, 274], "rather": [3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 21, 24, 29, 33, 34, 42, 43, 44, 51, 55, 62, 67, 69, 76, 81, 82, 84, 87, 91, 93, 113, 121, 131, 144, 158, 162, 164, 173, 181, 185, 188, 191, 194, 196, 201, 208, 211, 213, 214, 217, 218, 233, 236, 237, 240, 251, 266, 268, 269], "string": [3, 4, 6, 7, 11, 18, 26, 32, 33, 35, 40, 51, 52, 53, 54, 55, 58, 64, 74, 79, 80, 81, 84, 87, 91, 93, 94, 97, 99, 105, 106, 108, 111, 135, 144, 148, 158, 162, 166, 172, 173, 174, 177, 178, 179, 184, 187, 189, 193, 198, 199, 205, 210, 214, 218, 219, 222, 223, 224, 229, 230, 231, 236, 237, 239, 241, 243, 244, 246, 265, 266, 269, 273], "repres": [3, 10, 11, 13, 16, 17, 18, 25, 27, 29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 56, 57, 59, 61, 62, 64, 66, 67, 68, 73, 74, 77, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 98, 99, 101, 106, 108, 109, 111, 113, 114, 116, 117, 118, 119, 122, 124, 126, 127, 128, 129, 131, 133, 135, 136, 138, 150, 151, 153, 157, 158, 161, 162, 164, 166, 169, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 196, 198, 200, 201, 204, 205, 206, 208, 210, 211, 214, 216, 217, 218, 220, 222, 223, 224, 231, 233, 236, 237, 243, 245, 249, 251, 264, 266, 268, 269, 274, 275], "take": [3, 4, 5, 7, 10, 11, 14, 16, 17, 18, 21, 28, 31, 33, 34, 36, 41, 42, 46, 50, 51, 52, 53, 57, 59, 63, 64, 74, 78, 80, 81, 82, 87, 91, 92, 93, 94, 97, 101, 105, 109, 111, 113, 114, 116, 128, 129, 131, 133, 147, 150, 153, 154, 158, 160, 161, 162, 163, 164, 166, 169, 172, 173, 174, 175, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 194, 195, 198, 201, 204, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 220, 223, 229, 230, 232, 233, 236, 237, 243, 244, 245, 263, 264, 266, 268, 269, 270, 274], "within": [3, 7, 12, 16, 31, 32, 33, 51, 57, 64, 67, 81, 82, 84, 91, 92, 94, 121, 159, 173, 174, 181, 182, 186, 188, 194, 196, 206, 214, 216, 217, 218, 229, 230, 239], "case": [3, 4, 6, 7, 10, 11, 14, 16, 17, 21, 31, 32, 33, 34, 36, 39, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 63, 66, 67, 68, 69, 73, 76, 78, 81, 82, 84, 87, 88, 91, 92, 93, 95, 101, 105, 108, 109, 114, 116, 117, 118, 119, 125, 127, 129, 131, 137, 148, 154, 159, 161, 163, 164, 169, 170, 177, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 203, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 222, 224, 227, 229, 231, 232, 234, 236, 237, 238, 239, 240, 243, 245, 246, 264, 268, 269, 270, 273, 274, 275], "subpackag": [3, 253], "f2py": [3, 33, 92, 230, 231], "ufuncifi": [3, 33, 230, 254], "cython": [3, 33, 92, 131, 230], "codegen": [3, 18, 92, 198, 230, 235, 255, 261], "relat": [3, 4, 6, 7, 17, 26, 28, 29, 31, 34, 35, 41, 42, 49, 53, 56, 57, 58, 67, 73, 76, 78, 82, 87, 91, 97, 104, 118, 121, 124, 125, 131, 133, 138, 146, 148, 174, 177, 180, 181, 183, 184, 185, 191, 193, 194, 195, 197, 198, 202, 204, 205, 208, 210, 211, 213, 214, 216, 217, 218, 236, 250, 254, 256, 274], "reli": [3, 10, 11, 33, 87, 92, 98, 191, 197, 198, 205, 210, 217, 232, 237, 270], "llvm": 3, "gcc": [3, 231], "ifort": 3, "therefor": [3, 4, 6, 18, 21, 34, 42, 47, 51, 55, 59, 67, 80, 91, 101, 179, 182, 183, 184, 188, 191, 194, 198, 214, 217, 218, 219, 224, 243, 244, 246, 247, 249, 251], "aesara": [3, 10, 33, 131, 254, 261], "aesaracod": [3, 10, 33, 92, 198], "aeseara": 3, "previous": [3, 4, 10, 50, 122, 179, 197, 210, 218, 249], "theano": [3, 10, 131, 273], "return": [3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 21, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 93, 94, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 116, 118, 122, 126, 128, 129, 131, 133, 135, 136, 137, 138, 140, 141, 145, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 245, 247, 249, 263, 264, 269, 270, 273, 274, 275], "graph": [3, 6, 43, 59, 80, 87, 92, 187, 198, 217, 236, 269, 273], "object": [3, 4, 6, 7, 11, 12, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 50, 51, 53, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 76, 78, 81, 82, 84, 85, 87, 92, 93, 94, 95, 99, 101, 102, 105, 106, 108, 109, 110, 111, 113, 114, 118, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 137, 138, 139, 147, 148, 150, 158, 159, 163, 164, 166, 167, 170, 171, 173, 174, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 198, 200, 201, 204, 205, 206, 207, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 229, 230, 231, 232, 233, 236, 237, 240, 241, 245, 246, 247, 252, 253, 263, 264, 266, 268, 269, 270, 273, 274], "llvmlite": 3, "llvmjitcod": 3, "jit": [3, 207], "around": [3, 4, 6, 7, 10, 11, 17, 18, 23, 31, 40, 43, 51, 52, 53, 55, 57, 60, 67, 71, 90, 91, 106, 124, 128, 132, 182, 188, 191, 193, 198, 200, 205, 209, 211, 214, 217, 218, 229, 243, 244, 264, 266, 268], "llvm_callabl": 3, "callabl": [3, 11, 33, 42, 87, 93, 149, 193, 198, 199, 210, 227, 230, 231, 236, 237, 238], "unlik": [3, 6, 11, 16, 17, 30, 52, 78, 87, 91, 93, 114, 181, 191, 198, 211, 214, 217, 233, 234, 266, 268, 269, 270, 273], "two": [3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 21, 25, 31, 32, 33, 34, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 117, 122, 124, 125, 126, 128, 129, 136, 137, 138, 143, 144, 148, 150, 153, 154, 159, 160, 161, 162, 163, 164, 166, 169, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 223, 233, 236, 237, 243, 245, 247, 248, 249, 251, 263, 264, 267, 269, 270, 274], "tensorflow_cod": 3, "order": [3, 4, 6, 7, 10, 11, 14, 16, 17, 21, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 64, 67, 68, 70, 73, 76, 78, 79, 80, 81, 82, 87, 88, 91, 92, 93, 94, 95, 101, 102, 105, 109, 113, 114, 115, 116, 117, 125, 126, 127, 128, 129, 137, 141, 145, 148, 158, 159, 160, 161, 162, 163, 164, 169, 173, 174, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 197, 198, 199, 200, 201, 202, 204, 206, 209, 210, 211, 215, 216, 217, 218, 219, 220, 223, 224, 225, 229, 230, 231, 233, 236, 237, 239, 243, 244, 246, 247, 252, 264, 266, 267, 269, 273, 274, 275], "assum": [3, 6, 11, 13, 16, 18, 21, 28, 33, 34, 35, 40, 42, 50, 51, 52, 53, 57, 59, 61, 68, 69, 76, 78, 87, 91, 94, 101, 113, 114, 120, 126, 127, 128, 129, 131, 137, 159, 163, 164, 174, 177, 179, 185, 186, 188, 191, 194, 196, 198, 205, 206, 208, 210, 211, 214, 215, 217, 218, 222, 223, 224, 231, 236, 239, 245, 247, 251, 267, 269, 272, 274, 275], "wurlitz": 3, "allow": [3, 4, 7, 10, 11, 16, 18, 29, 32, 33, 34, 35, 42, 44, 47, 50, 51, 52, 55, 59, 61, 62, 63, 76, 79, 81, 82, 84, 85, 87, 91, 92, 93, 95, 109, 114, 116, 124, 128, 129, 131, 136, 148, 164, 168, 169, 170, 182, 184, 185, 188, 189, 191, 193, 194, 195, 198, 203, 205, 206, 207, 210, 211, 214, 216, 217, 218, 219, 223, 229, 232, 234, 236, 237, 247, 266, 269], "captur": [3, 51, 236], "output": [3, 6, 7, 10, 11, 14, 16, 18, 21, 32, 33, 51, 52, 59, 75, 78, 79, 81, 82, 84, 87, 91, 92, 93, 98, 101, 109, 113, 114, 122, 128, 131, 132, 136, 137, 148, 160, 164, 173, 174, 177, 178, 179, 182, 188, 191, 194, 198, 199, 208, 210, 211, 212, 213, 214, 216, 218, 223, 229, 230, 231, 233, 236, 237, 243, 266, 268, 269, 270, 273, 274, 275], "suit": [3, 4, 7, 16, 18, 21, 32, 184, 194, 227, 229], "stat": [3, 253, 260], "sampl": [3, 8, 14, 42, 54, 99, 148, 184, 198, 218, 264, 268], "At": [3, 10, 16, 18, 21, 31, 47, 57, 59, 78, 91, 94, 95, 105, 169, 173, 182, 193, 208, 237], "least": [3, 4, 7, 10, 16, 29, 31, 33, 42, 51, 57, 63, 75, 76, 78, 87, 91, 92, 109, 144, 158, 166, 185, 186, 188, 189, 191, 193, 194, 205, 207, 210, 214, 216, 217, 218, 231, 274], "random": [3, 6, 10, 35, 40, 42, 43, 49, 52, 61, 64, 65, 86, 87, 91, 148, 160, 184, 191, 198, 228, 229, 232, 236, 254, 260, 266, 270, 274], "pymc": [3, 218], "manipul": [3, 13, 14, 16, 32, 33, 34, 42, 51, 59, 76, 86, 91, 92, 114, 124, 129, 162, 181, 187, 188, 189, 192, 197, 198, 200, 207, 210, 212, 221, 236, 253, 256, 260, 263, 264, 265, 266, 267, 268, 270, 273, 274], "use_symengin": 3, "physic": [3, 6, 14, 33, 44, 87, 91, 94, 95, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 183, 192, 218, 233, 236, 249, 268, 274], "mechan": [3, 18, 51, 74, 78, 94, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 146, 150, 153, 159, 161, 162, 163, 166, 173, 174, 180, 183, 259, 260], "liealgebra": [3, 80], "thing": [3, 4, 6, 7, 10, 11, 12, 16, 17, 18, 22, 29, 33, 41, 42, 43, 51, 53, 63, 79, 80, 81, 82, 87, 92, 105, 111, 114, 128, 131, 148, 164, 169, 181, 182, 195, 197, 205, 206, 207, 210, 214, 217, 222, 232, 234, 236, 263, 264, 266, 268, 269, 270, 273, 274], "configur": [3, 4, 5, 10, 43, 81, 101, 108, 109, 117, 118, 121, 123, 124, 126, 128, 190, 198], "otherwis": [3, 4, 16, 17, 18, 31, 32, 33, 42, 43, 47, 50, 51, 52, 55, 57, 59, 60, 61, 64, 65, 66, 67, 76, 78, 80, 81, 83, 87, 90, 91, 93, 99, 101, 103, 106, 113, 114, 149, 154, 160, 177, 180, 181, 185, 189, 191, 193, 194, 196, 198, 200, 201, 203, 204, 206, 210, 211, 214, 215, 216, 217, 218, 219, 227, 229, 231, 236, 237, 263, 264, 273], "ordinari": [3, 16, 17, 20, 31, 33, 42, 51, 55, 57, 59, 69, 73, 74, 78, 88, 101, 124, 185, 187, 188, 197, 204, 212, 214, 219, 233, 268, 274], "x": [3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 42, 43, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 136, 138, 139, 140, 141, 142, 144, 145, 148, 153, 154, 159, 161, 162, 163, 164, 165, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 229, 230, 231, 232, 234, 236, 237, 239, 243, 245, 246, 247, 248, 249, 251, 252, 263, 264, 266, 268, 269, 270, 273, 274, 275], "still": [3, 4, 6, 7, 11, 16, 18, 23, 24, 32, 43, 50, 51, 52, 59, 63, 78, 82, 87, 114, 164, 182, 184, 185, 186, 191, 193, 198, 205, 207, 208, 210, 214, 216, 217, 223, 229, 236, 249, 270], "matchpi": 3, "pattern": [3, 10, 11, 16, 18, 51, 76, 78, 81, 82, 93, 158, 188, 208, 210, 214, 216, 264, 269], "anywher": [3, 4, 6, 10, 16, 33, 51, 59, 65, 164, 239, 268], "els": [3, 4, 10, 11, 16, 17, 18, 33, 41, 43, 47, 51, 52, 59, 61, 65, 67, 68, 76, 78, 81, 87, 91, 101, 164, 174, 184, 189, 193, 194, 198, 199, 206, 210, 214, 217, 222, 224, 229, 236, 239, 243, 245, 263, 269], "mathemat": [3, 4, 7, 8, 10, 13, 16, 18, 21, 22, 27, 28, 31, 33, 34, 37, 41, 43, 50, 51, 52, 53, 56, 57, 58, 59, 64, 65, 76, 78, 81, 84, 87, 91, 92, 93, 101, 102, 105, 118, 130, 169, 179, 181, 182, 185, 186, 188, 189, 192, 197, 198, 206, 207, 211, 214, 217, 218, 223, 230, 231, 237, 243, 246, 249, 251, 263, 266, 267, 268, 269, 272, 274], "softwar": [3, 7, 78, 192, 268], "itself": [3, 4, 6, 7, 10, 18, 29, 40, 42, 43, 49, 51, 53, 56, 64, 68, 73, 91, 109, 113, 114, 129, 154, 161, 179, 181, 184, 185, 188, 191, 193, 194, 198, 206, 207, 210, 217, 222, 223, 224, 231, 233, 236, 251, 268], "_sage_": 3, "basic": [3, 4, 5, 6, 7, 10, 16, 18, 25, 27, 32, 33, 34, 39, 42, 46, 49, 50, 54, 57, 67, 69, 74, 75, 76, 81, 82, 85, 86, 88, 101, 108, 114, 126, 127, 129, 131, 132, 138, 148, 162, 169, 172, 179, 180, 182, 184, 185, 187, 189, 190, 191, 193, 195, 196, 198, 199, 205, 210, 211, 214, 215, 216, 217, 218, 229, 231, 236, 237, 241, 248, 249, 250, 256, 264, 265, 266, 267, 272], "beyond": [3, 16, 45, 67, 91, 128, 185, 188, 207, 210, 270], "control": [3, 5, 10, 11, 16, 18, 32, 34, 51, 52, 55, 76, 81, 82, 128, 131, 144, 148, 159, 160, 164, 168, 194, 195, 199, 206, 211, 217, 236, 259, 260, 263], "pytest": [3, 4, 10, 226, 232, 234, 237, 261], "entir": [3, 4, 16, 42, 51, 52, 55, 59, 65, 67, 76, 90, 107, 125, 129, 174, 185, 187, 193, 206, 223, 232, 234, 268, 274], "import_modul": 3, "own": [3, 5, 6, 11, 18, 27, 35, 42, 43, 51, 67, 95, 114, 131, 193, 198, 205, 210, 214, 233, 236, 237, 268], "runner": [3, 229], "access": [3, 6, 7, 11, 16, 18, 26, 27, 28, 33, 51, 59, 80, 81, 84, 87, 92, 95, 101, 102, 108, 109, 113, 114, 132, 173, 174, 179, 182, 184, 188, 189, 191, 193, 210, 214, 218, 219, 222, 230, 231, 246, 249, 269, 273], "script": [3, 5, 6, 24, 59, 178, 230], "cloudpickl": 3, "effect": [3, 6, 10, 18, 23, 42, 44, 51, 68, 76, 78, 82, 87, 94, 114, 116, 128, 136, 164, 174, 184, 188, 191, 195, 197, 214, 266], "pickl": 3, "util": [3, 4, 5, 6, 7, 21, 31, 38, 40, 42, 43, 56, 57, 62, 63, 64, 67, 81, 82, 86, 91, 92, 134, 168, 171, 187, 190, 191, 195, 198, 210, 211, 212, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 255, 259], "test_pickl": 3, "py": [3, 4, 5, 6, 11, 16, 23, 32, 51, 62, 76, 78, 87, 142, 144, 184, 187, 189, 195, 198, 205, 208, 214, 215, 224, 227, 229, 234, 237], "pdf": [3, 7, 8, 22, 31, 32, 42, 52, 54, 56, 73, 78, 87, 91, 94, 95, 99, 184, 192, 197, 198, 201, 207, 210, 211, 214, 218, 236, 243], "view": [3, 6, 8, 33, 34, 51, 87, 94, 166, 169, 182, 184, 191, 198, 214, 217, 231, 233, 236], "host": [3, 7], "onlin": [3, 6, 109, 211, 236], "sympy_benchmark": 3, "readm": 3, "yourself": [3, 18, 33, 116, 232, 264], "reproduc": [3, 194, 229, 274], "add": [3, 4, 5, 6, 10, 11, 13, 16, 25, 27, 31, 33, 40, 42, 47, 52, 55, 58, 66, 68, 76, 80, 84, 87, 91, 94, 97, 106, 114, 131, 142, 148, 158, 163, 164, 167, 181, 182, 184, 187, 188, 189, 191, 193, 194, 195, 198, 199, 208, 210, 211, 214, 215, 217, 218, 220, 222, 223, 224, 232, 237, 241, 254, 264, 266, 269, 273, 274], "asv": 3, "airspe": 3, "veloc": [3, 105, 106, 108, 109, 111, 116, 117, 118, 121, 122, 123, 125, 128, 129, 131, 138, 166, 169, 173, 174, 177, 179, 182, 249, 251], "describ": [4, 6, 7, 10, 11, 16, 17, 18, 32, 34, 41, 42, 43, 45, 46, 49, 50, 51, 52, 56, 59, 61, 66, 67, 76, 78, 82, 87, 90, 91, 101, 105, 108, 109, 111, 113, 114, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 143, 164, 168, 169, 173, 174, 179, 181, 182, 185, 188, 191, 193, 199, 205, 208, 210, 211, 214, 217, 218, 222, 231, 236, 237, 243, 244, 249, 264], "properli": [4, 18, 32, 51, 57, 63, 76, 87, 110, 114, 126, 141, 145, 148, 162, 186, 188, 198, 214, 217, 227, 231, 237, 270, 275], "current": [4, 7, 10, 11, 16, 25, 28, 31, 32, 33, 34, 35, 42, 45, 46, 48, 49, 50, 51, 53, 57, 59, 61, 63, 66, 71, 74, 76, 78, 80, 82, 87, 91, 93, 94, 98, 105, 108, 114, 124, 158, 163, 164, 168, 172, 182, 184, 185, 186, 187, 189, 191, 194, 195, 197, 198, 199, 205, 208, 210, 211, 213, 214, 215, 216, 217, 218, 224, 229, 230, 231, 233, 246, 270, 275], "activ": [4, 5, 12, 116, 184, 227, 232, 234], "updat": [4, 10, 11, 23, 51, 118, 144, 154, 157, 158, 160, 183, 191, 194, 198, 211, 224, 234], "continu": [4, 6, 7, 10, 14, 17, 18, 21, 31, 33, 41, 43, 45, 51, 56, 57, 59, 76, 79, 82, 91, 98, 99, 159, 162, 178, 189, 191, 194, 211, 213, 214, 222, 265], "someon": [4, 214, 233, 267], "warn": [4, 6, 11, 12, 18, 51, 52, 66, 93, 174, 182, 186, 214, 216, 227, 229, 231, 235, 236, 261, 270], "screen": [4, 79, 178, 182, 229, 273], "indic": [4, 6, 11, 13, 16, 21, 31, 32, 33, 34, 35, 40, 42, 43, 44, 46, 47, 49, 50, 51, 54, 55, 56, 59, 61, 66, 67, 76, 78, 81, 82, 84, 87, 90, 91, 102, 113, 118, 148, 159, 161, 162, 164, 169, 173, 174, 183, 187, 188, 189, 193, 194, 195, 198, 205, 206, 207, 209, 210, 211, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 236, 270], "remov": [4, 10, 16, 26, 27, 42, 45, 49, 51, 55, 57, 66, 67, 76, 81, 82, 87, 91, 94, 97, 106, 121, 123, 128, 148, 164, 189, 191, 194, 196, 197, 198, 210, 211, 214, 216, 217, 219, 220, 230, 231, 232, 234, 236, 237, 263, 274], "futur": [4, 11, 16, 17, 33, 34, 51, 76, 78, 82, 87, 93, 113, 116, 124, 128, 164, 168, 180, 184, 186, 197, 198, 210, 214, 223, 229, 232, 234, 237, 260, 269, 275], "chanc": [4, 11, 17, 51, 79, 208, 218, 269], "break": [4, 6, 10, 18, 32, 33, 43, 51, 52, 91, 181, 195, 198, 206, 236], "opportun": [4, 6, 210], "messag": [4, 10, 52, 79, 232, 234], "wrong": [4, 7, 10, 42, 51, 52, 59, 61, 87, 174, 188, 212, 214, 232, 266, 270], "answer": [4, 16, 18, 21, 42, 51, 55, 73, 76, 78, 81, 87, 91, 169, 191, 195, 207, 208, 210, 216, 218, 233, 239, 268, 270, 274], "made": [4, 7, 10, 11, 16, 18, 45, 47, 51, 52, 57, 60, 61, 64, 67, 68, 78, 81, 87, 91, 93, 114, 128, 131, 182, 185, 189, 191, 193, 194, 199, 205, 206, 207, 210, 214, 216, 217, 218, 231, 236, 239, 251, 269], "lightli": 4, "fix": [4, 6, 9, 10, 33, 42, 44, 47, 49, 52, 59, 63, 80, 94, 95, 97, 106, 108, 111, 116, 131, 148, 153, 157, 160, 164, 169, 174, 177, 181, 182, 184, 188, 191, 193, 194, 195, 198, 204, 208, 216, 218, 236, 243, 244], "worth": [4, 16, 18, 174, 247, 249], "pain": 4, "frustrat": 4, "go": [4, 5, 6, 7, 18, 23, 32, 33, 42, 52, 57, 76, 109, 114, 116, 129, 131, 132, 158, 169, 177, 184, 193, 194, 205, 208, 214, 266, 268, 269, 272, 274], "seek": [4, 216], "stabl": [4, 6, 18, 51, 79, 87, 93, 101, 263], "done": [4, 6, 10, 11, 14, 18, 27, 28, 30, 31, 32, 33, 42, 44, 49, 51, 52, 53, 56, 59, 62, 63, 76, 78, 82, 87, 91, 114, 116, 122, 129, 131, 150, 159, 160, 161, 164, 166, 167, 174, 179, 181, 182, 184, 185, 187, 191, 195, 197, 198, 199, 207, 210, 211, 214, 216, 217, 218, 223, 224, 229, 230, 233, 237, 246, 247, 263, 266, 268, 269, 270], "exist": [4, 10, 14, 16, 18, 31, 32, 35, 42, 51, 55, 61, 63, 66, 67, 68, 69, 77, 78, 81, 87, 91, 97, 154, 179, 182, 184, 185, 186, 187, 191, 193, 198, 205, 206, 208, 211, 214, 216, 217, 229, 237, 247, 268, 270, 275], "necessarili": [4, 6, 16, 29, 51, 52, 53, 76, 78, 81, 185, 186, 193, 194, 196, 210, 214, 216, 217], "supplant": 4, "old": [4, 10, 11, 51, 52, 53, 79, 128, 133, 168, 169, 178, 184, 185, 189, 190, 198, 199, 210, 214, 217, 219, 263], "sometim": [4, 6, 7, 11, 16, 18, 32, 33, 51, 56, 59, 75, 76, 101, 124, 128, 156, 164, 182, 185, 188, 193, 198, 200, 205, 207, 211, 214, 216, 227, 236, 263, 270], "alongsid": [4, 10, 18, 84], "newer": [4, 181, 216], "solveset": [4, 18, 131, 196, 212, 213, 216, 275], "superior": [4, 198], "replac": [4, 6, 10, 11, 16, 31, 33, 42, 50, 51, 52, 55, 56, 57, 59, 61, 65, 78, 81, 82, 87, 91, 92, 93, 105, 107, 131, 153, 159, 174, 185, 191, 194, 195, 199, 205, 207, 208, 210, 214, 216, 217, 224, 225, 236, 237, 239, 263, 272], "older": [4, 7, 74, 114, 188, 198, 216], "solv": [4, 6, 10, 11, 14, 16, 18, 19, 33, 35, 47, 50, 51, 59, 64, 76, 78, 82, 83, 87, 94, 96, 97, 108, 109, 110, 114, 117, 118, 121, 123, 124, 126, 128, 131, 167, 187, 190, 191, 195, 196, 197, 200, 210, 211, 212, 213, 214, 215, 218, 259, 264, 265, 268, 270, 273], "remain": [4, 10, 18, 27, 28, 33, 42, 43, 45, 47, 51, 52, 57, 76, 82, 91, 93, 102, 114, 163, 179, 181, 182, 193, 194, 195, 204, 207, 208, 214, 215, 218, 220, 224, 233, 236, 237, 246, 251, 263, 266, 268, 269, 270], "intact": [4, 10, 33, 230], "cogniz": 4, "properti": [4, 13, 18, 27, 28, 31, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 76, 78, 82, 84, 87, 91, 94, 95, 97, 98, 101, 106, 108, 109, 111, 113, 129, 131, 133, 135, 138, 139, 142, 143, 148, 149, 150, 152, 153, 160, 162, 164, 166, 169, 171, 172, 174, 175, 176, 179, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 197, 200, 201, 204, 205, 206, 208, 211, 214, 217, 218, 223, 224, 229, 231, 232, 243, 245, 246, 247, 249, 251, 270], "attr": [4, 33], "imposs": [4, 6, 10, 18, 51, 188, 207, 214, 215, 227, 266, 274], "later": [4, 10, 14, 33, 42, 76, 82, 105, 110, 111, 116, 118, 119, 126, 128, 129, 131, 138, 173, 181, 188, 191, 197, 198, 199, 208, 210, 214, 233, 246, 263, 264, 266, 268, 269, 274], "unsur": [4, 6], "about": [4, 5, 6, 7, 10, 11, 12, 14, 16, 17, 18, 22, 23, 25, 26, 28, 29, 32, 33, 42, 43, 44, 45, 51, 55, 57, 59, 61, 62, 63, 65, 66, 67, 71, 73, 77, 78, 80, 87, 91, 94, 95, 101, 105, 106, 107, 108, 109, 110, 111, 113, 114, 118, 128, 129, 159, 161, 162, 164, 168, 173, 174, 181, 182, 183, 185, 187, 188, 193, 195, 198, 200, 205, 210, 211, 212, 214, 218, 222, 223, 229, 230, 231, 232, 233, 234, 243, 244, 246, 249, 250, 263, 265, 266, 268, 269, 270, 274], "mark": [4, 6, 7, 99, 137, 149, 211, 227, 232, 234], "explicitli": [4, 10, 16, 18, 33, 42, 43, 51, 52, 54, 57, 59, 64, 68, 84, 87, 92, 101, 114, 173, 174, 184, 186, 188, 189, 191, 194, 198, 210, 214, 234, 266, 270, 273, 275], "privat": [4, 6, 51, 52, 114, 184, 231], "experiment": [4, 210, 261], "With": [4, 11, 17, 23, 33, 50, 51, 55, 76, 91, 117, 118, 119, 125, 127, 128, 137, 161, 164, 182, 184, 185, 186, 188, 189, 196, 197, 198, 205, 210, 216, 219, 236, 268, 269], "being": [4, 7, 10, 11, 16, 17, 29, 31, 33, 42, 43, 49, 50, 51, 52, 57, 59, 61, 63, 64, 67, 68, 76, 81, 82, 87, 88, 91, 94, 95, 97, 105, 113, 114, 116, 128, 129, 131, 132, 160, 169, 176, 179, 181, 182, 183, 184, 185, 187, 188, 193, 194, 195, 198, 207, 208, 210, 211, 214, 215, 216, 217, 218, 224, 227, 233, 234, 236, 237, 239, 243, 247, 251, 268, 270], "decid": [4, 6, 14, 16, 17, 18, 32, 50, 82, 105, 128, 157, 168, 188, 191, 193, 194, 198, 214, 217, 231, 270], "reason": [4, 7, 10, 16, 17, 18, 33, 43, 49, 51, 55, 59, 76, 79, 85, 87, 109, 110, 114, 116, 121, 124, 128, 135, 169, 178, 182, 188, 191, 192, 195, 198, 206, 208, 210, 214, 216, 217, 227, 233, 234, 236, 237, 263, 264, 268, 269, 270], "confus": [4, 7, 10, 16, 51, 56, 81, 137, 182, 186, 194, 217, 263, 264, 266], "unnecessari": [4, 6, 7, 29, 33, 194, 197, 218, 229, 267], "redund": [4, 16, 42, 49, 81, 87, 214, 231], "usabl": [4, 188, 189, 198, 217, 268], "breakag": 4, "serious": 4, "taken": [4, 33, 34, 39, 42, 49, 50, 51, 56, 57, 59, 68, 82, 91, 101, 103, 105, 106, 128, 131, 161, 167, 174, 177, 183, 184, 188, 193, 194, 201, 205, 207, 208, 217, 218, 223, 231, 236, 243], "commun": [4, 7, 23, 183, 214, 216, 218, 270], "inde": [4, 14, 18, 39, 42, 50, 76, 185, 208, 214, 225, 229, 268], "second": [4, 7, 10, 11, 14, 16, 17, 18, 21, 24, 28, 31, 33, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 64, 65, 67, 78, 87, 91, 92, 94, 95, 99, 101, 102, 105, 106, 108, 109, 114, 118, 121, 123, 124, 125, 127, 129, 135, 137, 138, 141, 145, 150, 153, 158, 159, 161, 162, 167, 169, 171, 173, 174, 175, 181, 182, 184, 187, 188, 191, 192, 193, 194, 198, 200, 208, 210, 211, 214, 216, 217, 218, 219, 220, 236, 237, 243, 245, 246, 247, 259, 263, 268, 269, 270], "know": [4, 6, 7, 10, 11, 16, 17, 18, 26, 28, 32, 43, 51, 52, 55, 63, 68, 76, 78, 87, 91, 111, 114, 132, 158, 162, 166, 167, 169, 173, 174, 181, 182, 184, 194, 195, 197, 198, 208, 210, 214, 216, 217, 218, 232, 236, 237, 247, 263, 264, 266, 267, 268, 269, 272, 274], "Is": [4, 10, 43, 61, 62, 64, 65, 66, 67, 91, 195, 217], "count": [4, 7, 43, 50, 51, 52, 56, 61, 81, 87, 90, 91, 159, 194, 206, 207, 210, 217, 218, 224, 233, 236], "basi": [4, 51, 53, 80, 84, 87, 106, 121, 123, 149, 158, 159, 161, 164, 166, 169, 172, 173, 174, 179, 181, 183, 185, 187, 189, 190, 194, 197, 208, 210, 216, 217, 219, 224, 245, 246, 249, 272], "exact": [4, 11, 16, 18, 29, 50, 51, 52, 55, 61, 66, 73, 76, 78, 82, 87, 94, 131, 158, 188, 189, 191, 194, 205, 210, 214, 216, 229, 239, 266, 268, 273], "rule": [4, 7, 10, 14, 16, 18, 33, 42, 43, 50, 51, 59, 74, 76, 78, 81, 82, 87, 94, 108, 114, 145, 148, 169, 174, 179, 182, 183, 195, 197, 198, 199, 204, 208, 209, 210, 214, 224, 236, 237, 249, 250, 266, 269], "doesn": [4, 6, 10, 11, 18, 33, 75, 114, 118, 128, 131, 182, 186, 195, 197, 207, 210, 217, 275], "constitut": [4, 7, 78, 91, 198], "yet": [4, 5, 10, 11, 16, 18, 26, 28, 31, 32, 55, 56, 78, 128, 144, 185, 188, 189, 193, 195, 197, 206, 214, 217, 264], "fulli": [4, 6, 16, 42, 51, 68, 78, 81, 93, 95, 114, 131, 164, 181, 188, 189, 195, 205, 218, 224, 240], "codifi": 4, "clean": [4, 229], "distinct": [4, 7, 16, 18, 33, 42, 43, 51, 52, 56, 64, 76, 81, 87, 91, 113, 181, 188, 193, 194, 198, 206, 208, 274], "well": [4, 6, 7, 10, 11, 14, 16, 18, 23, 29, 31, 32, 33, 34, 35, 43, 50, 51, 56, 57, 59, 78, 82, 85, 87, 102, 105, 114, 116, 118, 119, 128, 154, 163, 166, 167, 173, 181, 183, 184, 185, 187, 188, 189, 191, 193, 198, 205, 206, 207, 208, 210, 214, 216, 217, 229, 230, 246, 247, 251, 266, 268, 269, 274], "categor": [4, 87, 185], "issu": [4, 7, 9, 10, 11, 17, 18, 21, 23, 24, 31, 50, 51, 68, 78, 81, 87, 92, 110, 124, 144, 180, 183, 192, 193, 195, 198, 206, 207, 216, 217, 229, 231, 233, 234, 236, 239, 265, 266, 269, 274], "here": [4, 6, 7, 10, 14, 16, 17, 18, 21, 22, 23, 27, 28, 33, 34, 35, 40, 41, 42, 43, 49, 50, 51, 52, 53, 55, 56, 57, 59, 67, 68, 69, 73, 74, 76, 78, 81, 82, 87, 90, 91, 92, 93, 94, 97, 101, 105, 109, 114, 115, 116, 121, 122, 123, 126, 128, 129, 131, 132, 154, 159, 164, 173, 178, 179, 181, 182, 184, 185, 188, 189, 191, 193, 194, 195, 198, 199, 205, 207, 208, 210, 211, 214, 216, 217, 218, 222, 223, 230, 231, 233, 234, 236, 237, 247, 249, 251, 262, 263, 264, 266, 268, 269, 270, 272, 273, 274], "guidelin": [4, 8, 214], "exhaust": [4, 16, 208, 236, 267], "alwai": [4, 6, 7, 10, 11, 16, 17, 18, 23, 25, 32, 42, 43, 50, 51, 52, 53, 55, 57, 59, 61, 63, 66, 67, 75, 76, 78, 81, 82, 87, 90, 91, 97, 101, 102, 113, 114, 116, 118, 122, 132, 164, 166, 169, 170, 179, 181, 185, 186, 188, 189, 191, 193, 194, 198, 199, 200, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 225, 229, 231, 236, 237, 243, 244, 249, 264, 266, 267, 268, 269, 274], "posit": [4, 10, 11, 16, 17, 18, 21, 26, 27, 28, 30, 32, 33, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 67, 76, 78, 80, 81, 82, 83, 87, 88, 90, 91, 94, 95, 97, 101, 103, 108, 111, 114, 116, 118, 121, 123, 125, 128, 129, 131, 133, 136, 138, 142, 159, 162, 164, 175, 176, 177, 179, 181, 182, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 203, 204, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 224, 236, 243, 245, 246, 247, 249, 251, 252, 270, 274, 275], "convent": [4, 6, 7, 9, 18, 42, 43, 47, 50, 51, 52, 56, 57, 59, 61, 66, 76, 78, 81, 93, 94, 95, 101, 104, 116, 131, 133, 137, 158, 159, 161, 166, 167, 179, 184, 198, 214, 215, 217, 218, 224, 251, 266, 274], "defin": [4, 6, 7, 10, 11, 14, 16, 17, 24, 25, 27, 28, 31, 33, 34, 35, 41, 42, 43, 46, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 74, 76, 78, 79, 82, 84, 87, 91, 95, 99, 105, 106, 108, 111, 113, 114, 116, 117, 121, 123, 124, 125, 129, 131, 132, 135, 141, 143, 145, 150, 153, 159, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 200, 201, 204, 205, 206, 208, 210, 211, 214, 216, 217, 218, 219, 223, 224, 230, 231, 232, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 251, 252, 266, 268, 274], "And": [4, 10, 11, 17, 18, 20, 27, 42, 43, 50, 51, 52, 59, 76, 81, 82, 87, 90, 108, 125, 136, 182, 184, 186, 194, 195, 198, 206, 210, 211, 217, 218, 237, 247, 274], "aren": [4, 10, 18, 33, 51, 114, 197, 217], "don": [4, 10, 11, 17, 18, 28, 33, 76, 87, 92, 93, 105, 114, 173, 181, 182, 188, 198, 208, 217, 227, 232, 251, 263, 264, 268, 269, 274], "form": [4, 7, 10, 14, 16, 18, 25, 28, 29, 30, 31, 33, 34, 41, 42, 43, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 67, 71, 73, 74, 76, 78, 80, 82, 84, 86, 87, 91, 93, 94, 95, 98, 101, 105, 106, 108, 109, 110, 113, 114, 116, 118, 121, 123, 124, 125, 126, 127, 129, 131, 132, 141, 144, 145, 146, 148, 158, 159, 162, 164, 166, 169, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 206, 207, 208, 210, 211, 215, 216, 217, 218, 221, 223, 224, 229, 230, 236, 243, 245, 246, 248, 249, 251, 256, 257, 264, 268, 269, 270, 273, 274, 275], "equival": [4, 10, 11, 16, 17, 18, 25, 29, 33, 34, 41, 42, 47, 51, 52, 55, 57, 59, 76, 78, 87, 91, 93, 98, 99, 101, 114, 124, 147, 158, 161, 164, 167, 174, 178, 182, 184, 185, 186, 188, 189, 193, 194, 198, 205, 206, 210, 214, 216, 217, 219, 220, 223, 224, 233, 237, 239, 240, 256], "intern": [4, 10, 11, 16, 17, 31, 33, 34, 42, 51, 54, 55, 56, 59, 67, 68, 71, 77, 83, 87, 91, 95, 97, 99, 116, 128, 137, 158, 159, 169, 185, 187, 189, 190, 192, 194, 196, 198, 208, 210, 212, 215, 216, 217, 218, 222, 224, 227, 231, 233, 236, 269, 273], "Such": [4, 6, 16, 33, 51, 67, 118, 185, 186, 193, 199, 207, 208, 210, 263, 269], "prefix": [4, 33, 51, 87, 91, 168, 171, 172, 188, 191, 195, 211, 214, 230, 231, 236, 259], "underscor": [4, 6, 10, 51, 87, 214, 224, 232], "_": [4, 5, 6, 7, 10, 11, 14, 18, 27, 28, 32, 39, 40, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 65, 66, 67, 76, 78, 81, 82, 83, 84, 85, 87, 89, 91, 93, 101, 126, 129, 131, 143, 169, 173, 178, 181, 183, 189, 194, 197, 198, 199, 201, 205, 206, 207, 208, 210, 211, 214, 215, 216, 219, 236, 245, 247, 273], "univers": [4, 33, 183, 192, 206, 211, 216, 217], "adher": [4, 7, 76], "codebas": [4, 10, 16, 188, 227], "anyth": [4, 6, 7, 10, 11, 18, 31, 33, 51, 52, 62, 66, 87, 114, 138, 148, 195, 198, 204, 206, 210, 214, 216, 230, 236, 239, 266], "were": [4, 7, 10, 11, 16, 18, 32, 43, 45, 51, 52, 57, 68, 76, 82, 87, 91, 92, 93, 105, 113, 128, 173, 179, 182, 185, 191, 192, 193, 194, 197, 198, 199, 207, 210, 216, 236, 237, 239, 266, 268, 269, 273, 274], "incorrect": [4, 7, 10, 17, 18, 42, 51, 61, 91, 99, 177, 189, 214, 217, 230, 233, 234], "bug": [4, 6, 16, 18, 21, 23, 31, 52, 77, 188, 206, 214, 217, 266], "despit": [4, 51, 274], "sai": [4, 7, 11, 14, 16, 34, 41, 50, 51, 52, 80, 105, 109, 114, 124, 131, 169, 181, 182, 185, 186, 187, 191, 193, 197, 198, 205, 208, 211, 214, 216, 217, 218, 237, 263, 268, 274], "befor": [4, 6, 10, 11, 16, 17, 18, 21, 23, 33, 42, 43, 45, 47, 51, 52, 53, 59, 79, 82, 87, 91, 93, 94, 95, 105, 110, 114, 116, 117, 118, 121, 122, 128, 131, 133, 164, 173, 178, 182, 186, 188, 193, 194, 198, 199, 205, 206, 210, 211, 214, 216, 217, 218, 225, 229, 232, 236, 237, 246, 267, 268, 269, 274], "recent": [4, 10, 11, 13, 16, 17, 18, 21, 26, 27, 28, 33, 34, 43, 51, 52, 55, 59, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 93, 101, 183, 185, 188, 189, 191, 194, 197, 205, 206, 214, 216, 217, 227, 230, 232, 234, 236, 237, 239, 266, 270], "best": [4, 8, 11, 21, 22, 23, 33, 51, 59, 76, 78, 92, 163, 184, 195, 198, 207, 208, 210, 214, 217, 222, 230, 262, 266, 267, 273, 274], "determin": [4, 7, 11, 14, 16, 17, 18, 21, 26, 28, 29, 30, 31, 33, 34, 35, 42, 51, 52, 53, 54, 55, 57, 61, 62, 64, 66, 67, 78, 79, 80, 84, 87, 91, 93, 94, 95, 101, 107, 110, 111, 113, 123, 129, 132, 143, 156, 158, 160, 161, 164, 167, 169, 174, 179, 184, 185, 186, 187, 191, 193, 198, 204, 205, 206, 208, 210, 211, 213, 214, 216, 217, 218, 222, 234, 236, 243, 249, 252, 266, 274], "someth": [4, 6, 7, 10, 11, 16, 17, 18, 31, 33, 51, 52, 55, 61, 76, 81, 82, 87, 91, 105, 114, 115, 131, 157, 170, 173, 184, 188, 189, 197, 205, 206, 210, 214, 217, 229, 231, 237, 263, 266, 268, 269, 272], "re": [4, 11, 18, 30, 31, 33, 42, 43, 51, 52, 55, 58, 59, 76, 78, 87, 174, 176, 179, 185, 191, 198, 199, 200, 206, 207, 208, 214, 229, 245, 247, 264, 266, 269], "harm": 4, "even": [4, 6, 7, 11, 13, 16, 18, 26, 27, 28, 30, 33, 34, 39, 42, 43, 50, 51, 52, 55, 56, 57, 59, 63, 67, 76, 78, 81, 82, 87, 90, 91, 102, 114, 124, 149, 160, 167, 169, 174, 183, 186, 187, 188, 189, 191, 193, 194, 195, 198, 199, 205, 206, 207, 208, 210, 211, 214, 216, 217, 225, 229, 251, 263, 264, 266, 268, 269, 274, 275], "might": [4, 6, 10, 11, 16, 17, 18, 31, 51, 55, 57, 64, 73, 76, 84, 87, 91, 93, 105, 114, 115, 131, 144, 174, 181, 184, 188, 189, 194, 195, 198, 199, 206, 207, 208, 210, 211, 216, 217, 218, 230, 231, 234, 236, 239, 263, 266, 268, 269, 271, 274], "while": [4, 6, 10, 11, 16, 18, 20, 21, 32, 33, 34, 42, 43, 44, 47, 50, 51, 52, 53, 55, 56, 61, 65, 67, 75, 81, 82, 87, 91, 92, 93, 94, 106, 110, 114, 118, 128, 148, 169, 174, 179, 185, 193, 196, 198, 214, 217, 229, 231, 233, 236, 251, 263, 269, 270], "peopl": [4, 6, 54, 59, 78, 87, 169, 218], "upgrad": [4, 24], "immedi": [4, 16, 42, 51, 76, 81, 164, 185, 188, 230, 237], "fire": 4, "uncondition": 4, "correct": [4, 6, 7, 10, 11, 17, 18, 33, 40, 42, 48, 50, 51, 55, 57, 75, 76, 78, 87, 91, 101, 114, 128, 181, 182, 191, 194, 205, 211, 214, 216, 217, 222, 230, 236, 266, 273], "question": [4, 6, 7, 14, 16, 50, 53, 61, 68, 76, 78, 81, 91, 105, 166, 169, 173, 185, 188, 193, 208, 217, 236, 239], "read": [4, 6, 7, 9, 10, 18, 43, 57, 76, 91, 95, 131, 181, 182, 187, 188, 189, 195, 198, 211, 224, 225, 233, 240, 267, 273, 274], "previou": [4, 6, 10, 18, 35, 40, 41, 42, 43, 46, 51, 57, 78, 82, 90, 106, 128, 166, 181, 182, 191, 204, 211, 215, 219, 236, 267, 269, 274], "unchang": [4, 10, 18, 42, 43, 51, 78, 87, 101, 194, 198, 204, 207, 210, 217, 263], "dure": [4, 10, 11, 24, 33, 51, 52, 82, 87, 91, 93, 106, 109, 131, 132, 181, 193, 207, 216, 217, 234, 236], "period": [4, 6, 10, 21, 31, 51, 52, 57, 76, 91, 128, 138, 160, 167, 193, 198, 201, 204, 213, 217, 218, 236], "silenc": [4, 12, 227, 234], "filterwarn": [4, 10], "caus": [4, 7, 10, 18, 23, 51, 52, 55, 57, 87, 114, 122, 128, 181, 198, 207, 214, 215, 216, 233, 234, 270], "anoth": [4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 21, 29, 32, 33, 43, 48, 50, 51, 52, 53, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 76, 78, 84, 87, 91, 94, 95, 111, 125, 153, 169, 171, 174, 177, 181, 182, 184, 186, 188, 189, 191, 193, 194, 195, 198, 199, 205, 206, 208, 214, 216, 217, 218, 230, 231, 237, 243, 246, 247, 251, 263, 266, 268, 269, 274, 275], "over": [4, 7, 8, 10, 11, 13, 18, 22, 25, 31, 32, 33, 34, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 65, 67, 74, 76, 80, 81, 84, 87, 88, 91, 94, 95, 103, 114, 131, 132, 143, 159, 162, 164, 168, 169, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 201, 203, 205, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 232, 236, 237, 243, 245, 249, 252, 268, 272, 274], "defeat": [4, 214], "three": [4, 11, 14, 16, 18, 25, 29, 33, 42, 43, 44, 47, 51, 52, 56, 59, 61, 65, 66, 67, 76, 80, 81, 82, 94, 95, 113, 117, 120, 121, 122, 137, 159, 161, 166, 174, 177, 181, 182, 183, 184, 185, 186, 189, 191, 194, 198, 208, 210, 211, 216, 217, 218, 229, 243, 244, 249, 252, 266, 269, 274], "natur": [4, 10, 11, 16, 25, 29, 33, 34, 42, 51, 52, 56, 57, 85, 91, 114, 166, 168, 169, 185, 188, 189, 191, 193, 195, 198, 207, 211, 217, 218, 236, 252, 269, 274], "heavili": [4, 205, 215], "consider": [4, 17, 51, 92, 105, 188, 197, 206, 211, 214, 246], "easi": [4, 39, 43, 51, 59, 76, 92, 111, 118, 124, 181, 185, 188, 193, 198, 205, 208, 211, 214, 217, 222, 223, 224, 263, 264, 266, 267, 268, 269, 270, 273], "account": [4, 57, 87, 201, 210, 214], "nonetheless": [4, 52, 166, 210, 214], "deprecat": 4, "won": [4, 11, 18, 33, 210, 217, 269], "until": [4, 14, 16, 21, 24, 43, 45, 51, 52, 61, 78, 87, 91, 128, 182, 191, 194, 207, 214, 266], "come": [4, 23, 42, 47, 49, 50, 51, 57, 59, 76, 78, 87, 92, 105, 114, 116, 126, 167, 182, 185, 188, 191, 193, 194, 208, 211, 214, 217, 227, 229, 234, 237, 266, 268, 269, 272, 274], "minimum": [4, 10, 21, 31, 33, 42, 43, 45, 47, 51, 52, 55, 57, 87, 105, 109, 116, 148, 173, 184, 186, 191, 217, 218, 232, 264], "longer": [4, 6, 11, 15, 51, 61, 91, 118, 128, 186, 191, 198, 207, 210, 236, 239, 266, 274], "especi": [4, 6, 18, 21, 50, 87, 105, 114, 131, 158, 173, 182, 210, 214, 216, 229, 263, 264], "hard": [4, 8, 16, 43, 52, 87, 91, 114, 164, 188, 198, 205, 214, 217, 266, 268], "migrat": 4, "lengthen": 4, "impos": [4, 95], "signific": [4, 11, 16, 33, 51, 52, 55, 78, 87, 105, 129, 158, 188, 217, 237, 269], "mainten": [4, 28], "burden": [4, 198], "keep": [4, 6, 11, 13, 18, 47, 51, 52, 55, 56, 59, 76, 87, 109, 117, 125, 129, 148, 164, 184, 187, 188, 189, 194, 205, 206, 208, 210, 214, 216, 224, 251, 264, 269], "firstli": [4, 10, 16, 18, 208], "regular": [4, 10, 11, 16, 17, 34, 39, 51, 52, 55, 59, 67, 73, 74, 78, 91, 114, 158, 188, 195, 214, 224, 229, 273, 274], "schedul": 4, "Being": [4, 47, 61, 67, 188], "assur": [4, 91, 194], "suffici": [4, 6, 16, 32, 33, 42, 43, 47, 51, 87, 169, 201, 205, 214, 218, 233, 274], "regardless": [4, 6, 10, 18, 43, 51, 78, 91, 191, 206, 210, 236, 246, 251, 274], "often": [4, 6, 16, 17, 18, 32, 33, 34, 41, 51, 59, 61, 63, 76, 78, 87, 91, 92, 101, 124, 128, 173, 181, 182, 185, 186, 188, 191, 194, 199, 205, 206, 211, 214, 218, 236, 263, 268, 269, 270, 274], "happen": [4, 6, 10, 14, 16, 17, 18, 21, 25, 33, 43, 50, 51, 55, 63, 66, 75, 159, 163, 169, 185, 191, 193, 194, 197, 206, 210, 214, 218, 237, 247, 266, 273, 274], "secondli": [4, 18, 208], "rigor": [4, 59, 182, 231], "semant": [4, 16, 84], "surfac": [4, 57, 59, 65, 76, 95, 133, 137, 164, 184, 210, 243, 250], "enough": [4, 6, 21, 42, 51, 55, 78, 87, 90, 91, 101, 114, 131, 189, 191, 198, 214, 264, 266], "encod": [4, 10, 35, 43, 49, 52, 81, 190, 198, 229, 233, 236], "backport": 4, "prior": [4, 10, 23, 177, 194, 210, 270], "extrem": [4, 42, 55, 61, 67, 78, 84, 97, 128, 182, 210, 218], "accur": [4, 11, 14, 18, 31, 42, 51, 55, 56, 73, 78, 98, 184, 205, 263, 270], "model": [4, 55, 81, 91, 101, 110, 116, 118, 119, 120, 136, 194, 207, 218], "final": [4, 6, 7, 10, 16, 18, 32, 43, 50, 51, 57, 59, 76, 78, 81, 87, 91, 95, 99, 108, 109, 116, 121, 123, 124, 126, 129, 144, 156, 159, 161, 162, 164, 166, 167, 169, 174, 181, 182, 185, 188, 191, 193, 200, 206, 207, 208, 210, 211, 214, 216, 217, 224, 237, 267, 268, 269], "temptat": [4, 207, 274], "fudg": 4, "earli": [4, 51, 91, 153, 211], "acceler": [4, 92, 111, 116, 121, 123, 128, 129, 131, 167, 174, 177, 179, 202, 233, 251], "myst": [4, 7], "checkbox": 4, "tag": [4, 198, 216], "nest": [4, 51, 53, 57, 59, 78, 82, 101, 186, 188, 191, 198, 208, 210, 213, 217, 218, 219, 220, 222, 225, 236, 237, 269], "ensur": [4, 11, 18, 23, 51, 52, 55, 83, 87, 129, 193, 194, 198, 212, 229, 234, 237], "realli": [4, 10, 14, 16, 17, 18, 51, 63, 91, 116, 166, 188, 197, 199, 205, 207, 208, 210, 214, 230, 239, 266, 268], "per": [4, 52, 87, 92, 138, 174, 179, 184, 189, 194, 195, 243, 246, 248, 251], "everywher": [4, 11, 51, 59, 76, 101, 179, 251], "doctest": [4, 6, 7, 11, 18, 44, 59, 87, 91, 116, 153, 164, 188, 194, 214, 229, 232, 234, 273], "sympy_deprecation_warn": [4, 227, 232, 234], "write": [4, 8, 10, 14, 16, 17, 19, 24, 33, 40, 51, 52, 58, 59, 76, 78, 84, 131, 144, 181, 182, 186, 191, 193, 198, 207, 208, 211, 214, 217, 223, 229, 230, 231, 237, 267, 268, 269, 274], "multilin": [4, 198], "deprecated_since_vers": [4, 227, 232, 234], "active_deprecations_target": [4, 227, 232, 234], "target": [4, 6, 31, 32, 33, 51, 91, 107, 144, 148, 149, 207, 210, 213, 216, 217, 227, 230, 231, 234, 274], "stacklevel": [4, 227, 232, 234], "line": [4, 6, 10, 11, 14, 16, 23, 32, 33, 42, 43, 47, 52, 61, 62, 63, 65, 66, 67, 68, 73, 76, 78, 79, 80, 87, 91, 94, 99, 102, 114, 116, 122, 144, 174, 178, 179, 181, 183, 184, 198, 201, 208, 210, 214, 218, 219, 227, 229, 230, 231, 234, 237, 239, 249, 252, 266], "visual": [4, 51, 91, 95, 101, 124, 197, 210], "confirm": [4, 10, 42, 91, 214], "look": [4, 6, 7, 10, 11, 16, 17, 18, 24, 32, 33, 42, 51, 56, 57, 59, 72, 87, 91, 109, 114, 116, 124, 148, 158, 159, 162, 177, 184, 188, 189, 193, 198, 200, 201, 205, 208, 210, 211, 214, 215, 229, 233, 237, 239, 247, 264, 269, 272, 273], "good": [4, 7, 16, 18, 21, 33, 51, 52, 55, 63, 76, 87, 91, 116, 128, 131, 185, 188, 189, 198, 205, 207, 208, 210, 214, 236, 263, 267, 270], "top": [4, 6, 7, 10, 33, 50, 51, 52, 67, 68, 78, 81, 87, 94, 95, 113, 159, 166, 188, 198, 208, 214, 231, 232, 237, 252, 269], "relev": [4, 6, 7, 16, 33, 49, 64, 79, 80, 106, 109, 111, 116, 169, 178, 182, 188, 208, 214, 215, 224, 229, 250], "docstr": [4, 8, 10, 11, 18, 32, 33, 44, 51, 73, 76, 78, 87, 91, 96, 100, 102, 124, 129, 134, 151, 157, 158, 160, 180, 194, 201, 204, 205, 207, 210, 214, 215, 216, 217, 223, 224, 229, 232, 237, 239, 250, 253], "src": [4, 6, 7, 93, 214, 229, 234], "explan": [4, 7, 11, 16, 19, 25, 26, 27, 28, 29, 30, 32, 33, 36, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 57, 59, 63, 73, 74, 76, 78, 82, 87, 91, 101, 104, 106, 107, 108, 109, 111, 122, 133, 135, 138, 141, 143, 145, 147, 159, 164, 183, 184, 185, 187, 189, 193, 194, 196, 200, 201, 203, 204, 205, 206, 208, 210, 211, 214, 216, 218, 219, 223, 224, 229, 232, 234, 237, 271], "cross": [4, 7, 8, 51, 61, 67, 82, 87, 94, 95, 108, 122, 129, 131, 144, 174, 180, 181, 182, 211, 243, 246, 248, 249], "xyz": [4, 63, 93, 94, 174, 182, 243, 244, 247], "header": [4, 33, 230, 231], "why": [4, 10, 11, 16, 33, 51, 182, 189, 195, 205, 208, 212, 237, 267, 269, 270], "test": [4, 6, 7, 8, 11, 15, 17, 18, 28, 29, 31, 32, 33, 38, 42, 43, 50, 51, 52, 58, 61, 66, 76, 82, 84, 87, 91, 144, 153, 157, 158, 159, 167, 182, 188, 189, 190, 191, 193, 195, 206, 208, 211, 214, 215, 216, 217, 227, 230, 231, 232, 233, 234, 236, 237, 239, 253, 256, 261, 266, 268, 269], "warns_deprecated_sympi": [4, 227, 232, 234], "pr": [4, 10, 50, 189, 191, 192, 194, 217], "merg": [4, 33, 42, 43, 51, 172, 198, 206, 218, 229, 236, 237], "wiki": [4, 5, 6, 7, 8, 11, 16, 18, 22, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 99, 101, 104, 133, 135, 136, 137, 139, 140, 141, 145, 146, 147, 150, 152, 153, 162, 164, 168, 174, 176, 180, 184, 194, 201, 205, 206, 207, 211, 214, 217, 218, 231, 236, 243, 244, 248, 250, 252, 270, 271], "decor": [4, 18, 42, 51, 59, 227, 229, 234, 235, 238, 239, 261], "sympydeprecationwarn": [4, 10, 227, 229, 232, 234], "class": [4, 7, 8, 10, 11, 15, 16, 17, 18, 21, 22, 25, 26, 27, 28, 29, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 78, 79, 80, 81, 84, 86, 93, 94, 97, 98, 99, 101, 106, 108, 109, 110, 111, 113, 114, 118, 119, 124, 125, 129, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 177, 178, 180, 185, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 208, 212, 214, 215, 216, 217, 218, 221, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 241, 246, 247, 249, 250, 252, 253, 254, 255, 258, 260, 261, 264, 266, 269, 274], "context": [4, 6, 7, 10, 16, 18, 26, 27, 28, 51, 53, 59, 78, 81, 114, 169, 188, 191, 193, 206, 227, 229, 234, 243], "manag": [4, 10, 23, 27, 28, 93, 144, 191, 210, 224, 227, 229, 234], "filter": [4, 10, 13, 21, 51, 52, 76, 136, 194, 227, 229, 234, 236], "emit": [4, 198, 227, 234], "assert": [4, 32, 40, 41, 42, 43, 51, 61, 63, 93, 128, 206, 214, 215, 227, 234, 236], "separ": [4, 6, 10, 11, 14, 17, 18, 32, 39, 51, 52, 57, 59, 76, 78, 87, 102, 113, 128, 129, 132, 137, 161, 164, 173, 174, 184, 186, 189, 191, 194, 195, 198, 207, 210, 211, 215, 217, 222, 227, 229, 233, 237, 239, 243, 266], "block": [4, 6, 10, 33, 40, 42, 52, 82, 86, 87, 113, 114, 116, 119, 174, 182, 187, 211, 237, 246], "behavior1": 4, "behavior2": 4, "everyth": [4, 7, 11, 18, 33, 51, 53, 59, 78, 85, 103, 128, 160, 161, 184, 198, 269, 273], "ignore_warn": [4, 227, 232, 234, 237], "prevent": [4, 11, 33, 51, 88, 91, 105, 187, 189, 194, 198, 210, 218, 227, 234, 265], "trigger": [4, 18, 43, 93, 164, 227], "twice": [4, 11, 33, 51, 53, 65, 91, 174, 176, 181, 198, 233, 234, 243, 244, 264], "similar": [4, 5, 10, 11, 14, 16, 18, 43, 50, 51, 52, 55, 56, 57, 59, 62, 67, 68, 72, 81, 87, 92, 101, 114, 116, 118, 128, 129, 162, 179, 181, 182, 186, 188, 189, 191, 195, 205, 207, 208, 210, 214, 216, 219, 224, 227, 230, 233, 234, 243, 244, 246, 247, 251, 263, 268, 269, 270, 272, 274], "somewher": [4, 6, 7, 33], "sign": [4, 6, 7, 12, 25, 30, 33, 47, 51, 52, 56, 58, 61, 67, 76, 78, 87, 91, 94, 95, 101, 116, 137, 149, 174, 179, 181, 183, 191, 198, 203, 205, 210, 211, 216, 236, 249, 252, 267], "readi": [4, 16, 113, 188, 198, 214], "paragraph": [4, 6, 7, 18, 32], "metadata": [4, 32, 232, 234], "link": [4, 6, 7, 11, 20, 33, 52, 61, 67, 78, 102, 108, 117, 124, 125, 230, 233, 234, 272], "rememb": [4, 6, 11, 18, 81, 87, 102, 105, 131, 181, 182, 198, 210, 216, 219, 237, 269, 274], "shown": [4, 6, 10, 16, 17, 18, 40, 43, 50, 51, 55, 59, 76, 93, 95, 99, 101, 105, 109, 111, 117, 118, 119, 125, 126, 127, 129, 173, 174, 181, 182, 184, 187, 188, 189, 194, 198, 214, 218, 234, 236, 246, 247, 267], "plain": [4, 6, 16, 79, 178, 194, 198], "rst": [4, 6, 7, 34, 214, 229], "markdown": [4, 8], "markup": [4, 198], "clearli": [4, 6, 18, 91, 182, 188, 208, 270], "delin": 4, "newlin": [4, 87, 239], "charact": [4, 6, 7, 51, 52, 76, 79, 93, 144, 174, 178, 198, 214, 229, 231, 234, 239, 266, 268, 273], "full": [4, 6, 7, 8, 9, 10, 11, 16, 18, 22, 28, 31, 33, 42, 43, 51, 55, 59, 63, 64, 78, 84, 87, 93, 126, 127, 174, 188, 191, 192, 194, 198, 200, 210, 211, 268, 271, 274], "abc": [4, 6, 11, 13, 18, 21, 25, 26, 27, 28, 29, 30, 31, 33, 40, 42, 44, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 74, 75, 76, 78, 79, 81, 82, 84, 87, 90, 92, 99, 101, 103, 135, 137, 139, 140, 145, 162, 164, 165, 185, 187, 189, 191, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 230, 231, 232, 233, 234, 236, 237, 239, 243, 245, 246, 247, 252, 254, 266, 269, 273], "func": [4, 6, 15, 18, 27, 31, 33, 51, 53, 56, 59, 70, 72, 78, 91, 153, 174, 191, 194, 198, 199, 210, 214, 215, 216, 227, 232, 234, 236, 237, 239, 242], "larger": [4, 7, 18, 33, 42, 43, 50, 51, 52, 59, 76, 84, 87, 91, 118, 122, 189, 195, 199, 205, 210, 216, 231, 233, 266, 274], "easier": [4, 17, 51, 95, 114, 116, 181, 189, 193, 195, 208, 214, 217, 231, 237, 246, 268, 274, 275], "exactli": [4, 6, 7, 10, 11, 18, 29, 35, 42, 51, 54, 55, 87, 93, 108, 129, 183, 208, 210, 214, 217, 219, 233, 236, 237, 264, 266, 268, 273, 274], "direct": [4, 6, 7, 10, 15, 25, 27, 28, 32, 36, 39, 42, 47, 50, 51, 53, 55, 57, 60, 64, 65, 66, 67, 81, 82, 87, 94, 95, 97, 105, 106, 108, 116, 118, 122, 131, 150, 174, 179, 181, 182, 185, 187, 188, 191, 195, 205, 208, 224, 227, 236, 243, 247, 248, 251], "syntax": [4, 6, 7, 10, 11, 18, 26, 28, 43, 51, 78, 93, 114, 131, 161, 184, 188, 197, 198, 210, 216, 220, 239, 255, 264, 266, 268, 273, 275], "paramet": [4, 7, 10, 11, 25, 26, 28, 31, 33, 34, 42, 43, 47, 49, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 74, 76, 78, 79, 81, 82, 84, 87, 88, 90, 91, 93, 94, 97, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 131, 133, 135, 136, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 165, 166, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 227, 229, 230, 231, 233, 234, 236, 237, 243, 244, 245, 246, 247, 252, 264, 269], "short": [4, 7, 11, 24, 34, 41, 43, 47, 51, 52, 53, 54, 57, 85, 91, 105, 150, 169, 173, 182, 185, 192, 219, 229, 239, 269, 273], "renam": [4, 10, 33, 78], "rest": [4, 10, 76, 79, 81, 85, 95, 103, 114, 118, 124, 169, 185, 188, 218, 236, 266, 267, 274], "left": [4, 7, 10, 14, 16, 18, 20, 31, 33, 34, 42, 43, 47, 51, 52, 53, 56, 57, 59, 67, 68, 74, 76, 78, 79, 81, 82, 87, 90, 91, 101, 106, 113, 129, 136, 143, 148, 152, 153, 156, 161, 174, 179, 183, 184, 185, 187, 194, 195, 196, 197, 198, 200, 201, 205, 206, 207, 208, 210, 214, 215, 216, 217, 218, 229, 230, 231, 233, 236, 249, 264, 268, 270, 274], "imaginari": [4, 6, 11, 16, 18, 21, 25, 28, 30, 51, 55, 57, 59, 82, 131, 188, 189, 194, 198, 199, 206, 210, 217], "simplify_thi": [4, 6, 232], "expr": [4, 6, 11, 16, 18, 21, 27, 28, 30, 31, 33, 43, 50, 53, 55, 57, 59, 61, 73, 76, 78, 81, 84, 87, 92, 93, 101, 105, 107, 114, 128, 141, 145, 147, 149, 153, 156, 159, 161, 162, 164, 171, 174, 176, 178, 184, 186, 187, 188, 189, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 205, 207, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 230, 231, 232, 234, 237, 243, 244, 245, 246, 247, 249, 254, 263, 264, 266, 268, 269, 273, 274, 275], "simplifi": [4, 6, 11, 14, 16, 17, 18, 26, 28, 30, 31, 50, 51, 53, 55, 56, 57, 59, 63, 68, 73, 76, 78, 81, 82, 83, 84, 87, 94, 101, 102, 107, 110, 117, 118, 121, 122, 123, 128, 136, 143, 148, 163, 164, 171, 174, 179, 185, 193, 195, 197, 199, 204, 205, 206, 207, 208, 211, 214, 215, 216, 217, 218, 232, 234, 237, 246, 248, 254, 255, 263, 265, 266, 268, 269, 270], "def": [4, 6, 7, 10, 11, 14, 16, 17, 18, 27, 28, 32, 51, 56, 63, 81, 87, 91, 93, 122, 159, 188, 194, 198, 207, 210, 217, 232, 234, 236, 237, 240, 263, 266, 269, 270, 274], "ref": [4, 42, 57, 87, 99, 131, 203, 218, 232, 270], "is_this_zero": [4, 234], "y": [4, 6, 10, 11, 13, 16, 17, 18, 20, 21, 24, 26, 27, 28, 29, 30, 31, 33, 34, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 76, 78, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 95, 97, 99, 101, 106, 107, 108, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 129, 131, 132, 141, 142, 145, 148, 153, 159, 161, 162, 164, 165, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 230, 231, 234, 236, 237, 239, 243, 245, 246, 247, 248, 249, 251, 252, 263, 264, 266, 268, 269, 273, 274, 275], "0": [4, 6, 11, 14, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 119, 121, 123, 126, 127, 128, 129, 131, 132, 133, 136, 137, 138, 140, 143, 148, 149, 150, 153, 158, 159, 160, 161, 162, 163, 164, 165, 169, 171, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 232, 233, 234, 236, 237, 238, 243, 244, 245, 246, 247, 248, 249, 252, 263, 264, 266, 268, 269, 270, 273, 274, 275], "zero": [4, 11, 16, 17, 18, 25, 28, 30, 33, 41, 42, 43, 47, 50, 54, 55, 56, 57, 59, 61, 65, 66, 67, 76, 78, 80, 81, 82, 84, 86, 87, 90, 91, 93, 94, 100, 101, 108, 111, 114, 116, 119, 122, 126, 127, 131, 136, 158, 162, 164, 166, 177, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 193, 194, 196, 198, 201, 205, 206, 208, 210, 211, 214, 215, 216, 217, 218, 219, 234, 236, 237, 246, 248, 249, 269, 275], "is_zero": [4, 16, 18, 66, 87, 185, 189, 194, 234, 270], "mail": [4, 10, 21, 23, 198, 267], "summar": [4, 229, 274], "idea": [4, 16, 17, 18, 36, 42, 49, 51, 52, 63, 69, 76, 78, 91, 102, 114, 164, 168, 169, 185, 187, 188, 207, 210, 211, 214, 217, 231, 237, 274], "fit": [4, 32, 76, 87, 90, 91, 182, 198, 214, 239, 269], "put": [4, 6, 10, 11, 14, 18, 33, 47, 48, 51, 52, 53, 57, 81, 82, 87, 136, 141, 145, 160, 161, 194, 198, 199, 207, 208, 210, 214, 219, 225, 230, 270, 274], "word": [4, 7, 18, 29, 38, 47, 50, 51, 52, 57, 59, 81, 101, 114, 129, 185, 188, 193, 210, 211, 214, 216, 231, 243, 247, 266], "global": [4, 6, 10, 26, 27, 28, 31, 33, 34, 51, 63, 76, 93, 148, 154, 174, 176, 184, 185, 188, 189, 191, 198, 211, 214, 215, 218, 229, 231, 232, 237, 245], "uniqu": [4, 31, 32, 34, 42, 45, 47, 51, 52, 53, 56, 59, 66, 69, 74, 78, 80, 81, 87, 91, 108, 153, 162, 174, 182, 185, 186, 188, 191, 193, 199, 203, 210, 211, 214, 216, 217, 218, 222, 231, 236, 239, 246, 251, 266, 269], "across": [4, 7, 42, 49, 51, 62, 78, 95, 163, 164, 171, 184, 198, 233, 235, 236, 237, 272], "level": [4, 6, 7, 10, 11, 16, 17, 21, 33, 42, 49, 51, 57, 59, 78, 81, 87, 91, 105, 118, 131, 159, 164, 169, 173, 176, 182, 184, 187, 188, 190, 196, 198, 207, 211, 217, 218, 222, 230, 231, 236, 269, 270, 272], "correspond": [4, 6, 7, 10, 14, 16, 17, 18, 31, 32, 33, 34, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 57, 61, 62, 64, 65, 66, 67, 74, 76, 80, 81, 82, 87, 90, 91, 94, 95, 101, 107, 109, 113, 114, 116, 118, 132, 136, 140, 154, 158, 159, 161, 165, 166, 169, 174, 177, 179, 183, 184, 186, 187, 188, 189, 191, 193, 194, 198, 204, 205, 208, 210, 211, 214, 215, 216, 217, 218, 220, 222, 223, 224, 231, 232, 233, 234, 236, 237, 239, 243, 244, 246, 247, 249, 251, 269, 275], "share": [4, 16, 18, 52, 91, 189, 193, 198, 218, 231], "__init__": [4, 6, 18, 51, 109, 193, 243, 244, 269], "func_nam": [4, 33, 57, 82, 239], "help": [4, 5, 6, 7, 12, 16, 24, 33, 41, 51, 59, 76, 78, 87, 91, 92, 99, 114, 131, 139, 149, 182, 184, 193, 195, 198, 207, 208, 211, 214, 215, 218, 229, 230, 231, 237, 259, 267, 270], "rais": [4, 10, 11, 16, 17, 18, 26, 28, 31, 33, 40, 43, 51, 52, 53, 55, 57, 60, 61, 64, 66, 67, 68, 76, 78, 82, 84, 87, 88, 90, 91, 99, 101, 138, 150, 179, 182, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 200, 206, 210, 213, 214, 215, 216, 217, 218, 222, 224, 227, 229, 231, 234, 236, 237, 239, 240, 249, 270], "been": [4, 11, 16, 18, 31, 33, 34, 42, 43, 44, 47, 50, 51, 52, 63, 76, 78, 87, 91, 92, 93, 109, 114, 116, 124, 128, 129, 137, 149, 159, 161, 169, 173, 179, 180, 181, 182, 185, 188, 189, 193, 195, 196, 198, 200, 205, 208, 210, 215, 216, 217, 219, 228, 229, 231, 232, 234, 236, 239, 246, 249, 266, 267, 269, 270, 274], "simplfiy_thi": 4, "ident": [4, 11, 18, 29, 32, 34, 41, 42, 43, 49, 51, 52, 56, 57, 67, 74, 80, 82, 84, 87, 102, 104, 129, 148, 150, 153, 169, 185, 186, 187, 191, 192, 193, 194, 198, 207, 210, 214, 217, 222, 224, 229, 236, 237, 239, 247, 266, 270, 274], "much": [4, 6, 10, 14, 16, 17, 18, 32, 33, 36, 47, 55, 59, 73, 76, 78, 128, 172, 173, 181, 182, 183, 185, 188, 191, 194, 205, 208, 210, 214, 215, 216, 217, 231, 233, 266, 268, 274], "trivial": [4, 34, 42, 47, 50, 51, 52, 57, 66, 81, 84, 87, 91, 126, 164, 185, 186, 191, 194, 208, 211, 214, 217, 222], "furthermor": [4, 10, 18, 29, 51, 52, 81, 193, 207, 266, 268, 269], "particular": [4, 6, 10, 11, 16, 17, 20, 29, 34, 42, 51, 52, 55, 59, 62, 76, 78, 81, 84, 87, 91, 94, 97, 124, 148, 159, 186, 187, 188, 189, 191, 193, 194, 204, 206, 208, 210, 211, 214, 216, 217, 229, 231, 233, 270, 272, 274], "expr1": [4, 16, 101, 184, 216, 269], "expr2": [4, 16, 101, 184, 269], "dozen": [4, 18, 274], "search": [4, 6, 31, 42, 43, 47, 49, 51, 57, 87, 91, 114, 185, 193, 194, 198, 207, 208, 210, 212, 215, 218, 230], "upcom": 4, "bot": 4, "push": [5, 76], "respect": [5, 6, 10, 11, 18, 26, 28, 29, 31, 32, 33, 34, 41, 42, 43, 46, 47, 49, 50, 51, 53, 57, 59, 61, 63, 67, 68, 73, 74, 76, 78, 81, 82, 84, 87, 91, 93, 94, 95, 97, 101, 106, 107, 108, 111, 118, 125, 127, 129, 131, 138, 153, 166, 167, 168, 173, 174, 177, 179, 182, 183, 184, 185, 188, 191, 193, 194, 195, 198, 200, 201, 204, 206, 210, 214, 215, 216, 217, 218, 219, 223, 224, 229, 231, 243, 244, 245, 246, 247, 248, 249, 250, 251, 264, 274], "handbook": [5, 6, 34, 41, 42, 49, 59, 91], "internet": 5, "practic": [5, 8, 14, 16, 21, 40, 42, 52, 61, 128, 131, 184, 185, 186, 188, 193, 195, 222, 266, 267], "project": [5, 7, 10, 33, 64, 65, 66, 80, 87, 130, 230, 231, 243], "purpos": [5, 6, 7, 8, 10, 15, 16, 18, 32, 33, 42, 48, 51, 52, 78, 87, 114, 131, 169, 173, 182, 188, 191, 195, 197, 198, 205, 214, 217, 223, 233, 235, 237, 246, 247, 264, 274], "nn": 5, "brows": 5, "clone": [5, 23, 191], "download": [5, 7, 23, 32, 73, 192, 207, 214, 218, 243, 268], "origin": [5, 11, 14, 16, 23, 25, 42, 43, 44, 47, 50, 51, 52, 55, 56, 57, 59, 60, 62, 64, 66, 76, 78, 82, 87, 91, 99, 101, 102, 118, 128, 131, 156, 159, 169, 175, 179, 184, 185, 189, 193, 194, 197, 198, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 224, 229, 236, 237, 243, 245, 246, 247, 248, 249, 251, 252, 274], "77": [5, 40, 59, 87, 91, 197, 198, 231], "mib": 5, "remot": [5, 51], "collabor": 5, "upstream": 5, "fetch": 5, "branch": [5, 17, 31, 51, 56, 57, 58, 59, 77, 195, 208, 217, 269, 274], "checkout": [5, 32], "advantag": [5, 16, 18, 28, 31, 33, 51, 52, 78, 81, 87, 91, 98, 168, 187, 188, 195, 206, 211, 214, 217, 233, 266, 268, 270, 274], "isol": [5, 31, 57, 189, 193, 194, 195, 216, 231], "wide": [5, 16, 79, 87, 131, 178, 188, 194, 198, 218], "flake8": 5, "usernam": 5, "easiest": [5, 7, 10, 11, 51, 185, 188, 211, 237, 247, 263, 269, 274], "consult": [5, 34], "kwarg": [5, 11, 27, 28, 29, 33, 42, 43, 50, 51, 52, 53, 57, 59, 61, 62, 64, 65, 66, 67, 68, 73, 76, 78, 82, 83, 84, 85, 87, 89, 90, 99, 101, 107, 109, 118, 133, 142, 144, 148, 149, 153, 155, 157, 158, 160, 161, 162, 174, 177, 178, 184, 187, 189, 194, 198, 200, 204, 205, 206, 210, 214, 215, 216, 218, 219, 224, 229, 230, 232, 239, 247], "test_bas": [5, 229], "similari": 5, "qualiti": [5, 92, 198], "code_qu": 5, "liter": [6, 11, 18, 33, 41, 51, 79, 81, 93, 164, 171, 210], "occur": [6, 10, 11, 42, 43, 51, 55, 59, 68, 76, 82, 93, 105, 128, 173, 174, 181, 193, 201, 210, 215, 216, 219, 229, 236, 269], "definit": [6, 10, 11, 17, 25, 28, 33, 34, 42, 43, 48, 50, 51, 53, 54, 56, 57, 59, 64, 67, 71, 74, 76, 78, 82, 83, 84, 87, 91, 93, 116, 121, 122, 129, 166, 169, 172, 174, 181, 182, 185, 186, 189, 194, 195, 198, 205, 218, 219, 230, 231, 232, 236, 237, 243, 246, 247, 248, 249, 264, 274], "__doc__": [6, 11], "attribut": [6, 13, 16, 18, 27, 28, 32, 33, 42, 43, 51, 59, 60, 61, 64, 65, 66, 67, 84, 87, 93, 95, 101, 106, 108, 109, 110, 111, 113, 121, 129, 132, 153, 158, 162, 169, 173, 174, 179, 182, 184, 185, 188, 189, 193, 198, 206, 210, 211, 223, 224, 230, 232, 236, 237, 240, 246, 269], "fdiff": [6, 18, 33, 51, 57, 58, 59], "self": [6, 16, 18, 25, 27, 28, 32, 33, 42, 43, 48, 50, 51, 53, 57, 60, 61, 62, 64, 65, 66, 67, 78, 82, 87, 91, 106, 116, 159, 164, 174, 176, 177, 185, 187, 189, 191, 193, 194, 198, 200, 205, 206, 224, 243], "argindex": [6, 18, 33, 51, 57, 58, 59], "heavisid": [6, 58, 76, 78, 198], "diff": [6, 10, 14, 18, 21, 31, 33, 56, 57, 58, 59, 68, 73, 84, 87, 105, 107, 117, 118, 131, 162, 174, 176, 178, 179, 182, 184, 189, 194, 197, 198, 208, 214, 215, 216, 219, 220, 225, 246, 249, 264, 268, 275], "diracdelta": [6, 58, 78, 159, 164, 198], "what": [6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 20, 22, 31, 33, 43, 45, 50, 51, 52, 53, 57, 58, 61, 62, 66, 76, 78, 80, 87, 91, 93, 106, 109, 111, 114, 118, 125, 131, 163, 164, 167, 169, 174, 181, 182, 189, 190, 191, 194, 197, 198, 199, 205, 207, 208, 210, 211, 212, 214, 216, 223, 227, 229, 231, 232, 237, 246, 247, 252, 264, 266, 267, 269, 273, 274], "scope": [6, 33, 124, 128, 227, 274], "high": [6, 7, 11, 14, 16, 21, 33, 51, 55, 56, 79, 91, 131, 178, 188, 193, 196, 198, 211, 216, 259, 270], "od": [6, 18, 74, 109, 113, 124, 131, 212, 215, 275], "seen": [6, 14, 16, 25, 43, 76, 78, 93, 97, 113, 125, 169, 181, 185, 188, 191, 194, 214, 216, 217, 234, 236, 246, 266, 269, 273], "hand": [6, 10, 14, 16, 18, 32, 33, 43, 44, 51, 57, 59, 78, 81, 82, 87, 91, 94, 109, 113, 114, 128, 132, 136, 153, 156, 174, 179, 182, 183, 185, 188, 189, 191, 193, 196, 208, 217, 229, 231, 233, 237, 240, 249, 251, 268], "less": [6, 7, 10, 14, 29, 33, 34, 42, 43, 50, 51, 52, 55, 56, 57, 59, 65, 66, 67, 82, 87, 91, 99, 101, 114, 116, 164, 188, 191, 193, 194, 207, 208, 210, 211, 214, 216, 217, 218, 229, 231], "understand": [6, 11, 16, 17, 18, 51, 52, 76, 114, 124, 126, 127, 131, 169, 181, 184, 187, 188, 193, 208, 211, 230, 237, 265, 266, 273, 274], "clear": [6, 10, 16, 27, 41, 51, 76, 80, 106, 181, 182, 184, 189, 191, 194, 208, 216, 217, 224, 229, 233, 251, 266], "begin": [6, 10, 11, 16, 18, 20, 51, 52, 56, 57, 59, 76, 82, 84, 87, 91, 118, 126, 127, 128, 129, 160, 169, 174, 182, 183, 187, 198, 208, 211, 214, 215, 217, 218, 229, 239, 266, 268, 270, 274], "convers": [6, 7, 10, 16, 33, 51, 71, 93, 128, 168, 186, 187, 188, 189, 191, 193, 195, 198, 211, 223, 230, 243], "aim": [6, 7, 69, 76, 169, 185, 208, 214, 217, 267, 268], "comment": [6, 7, 33, 42, 114, 116, 195, 198, 231, 236], "distract": 6, "input": [6, 7, 10, 11, 18, 21, 25, 31, 34, 47, 51, 52, 54, 55, 56, 57, 65, 78, 80, 81, 87, 91, 93, 98, 99, 101, 105, 110, 113, 114, 116, 117, 118, 128, 131, 132, 137, 160, 174, 176, 177, 188, 189, 191, 194, 195, 196, 197, 198, 199, 206, 210, 211, 212, 214, 216, 218, 220, 230, 231, 233, 234, 236, 237, 239, 263, 269, 270, 274], "consum": [6, 33, 59, 110, 128], "human": [6, 76, 166, 194, 198], "beings": 6, "english": [6, 52], "likewis": [6, 16, 32, 117, 118], "reader": [6, 7, 18, 32, 34, 129, 185, 198, 233, 267, 272], "machineri": [6, 51, 193, 237], "mind": [6, 11, 13, 16, 21, 51, 87, 129, 184, 205, 206, 251, 269], "platform": [6, 51, 164, 182, 214, 230], "anyon": [6, 7, 10, 22, 194, 198, 262, 272, 273], "restructuredtext": [6, 7], "extend": [6, 7, 16, 18, 28, 33, 42, 43, 51, 52, 56, 63, 76, 78, 87, 91, 131, 172, 178, 184, 186, 189, 191, 193, 194, 195, 198, 205, 207, 211, 213, 214, 217, 218, 219, 231, 233, 266, 268], "concis": [6, 131], "quick": [6, 7, 18, 51, 87, 91, 210, 216, 237], "depth": [6, 7, 9, 11, 12, 22, 42, 51, 116, 184, 185, 198, 260], "tripl": [6, 68, 87, 182, 183, 185, 193, 239], "quot": [6, 11, 33, 81, 198, 239], "raw": [6, 7, 33, 51, 52, 57, 92, 93, 158, 163, 188, 189, 194, 206, 210, 273], "backslash": [6, 51, 198], "blank": [6, 93, 110, 184], "close": [6, 33, 50, 51, 55, 56, 59, 67, 69, 76, 78, 80, 101, 117, 184, 185, 186, 192, 193, 206, 216, 217, 231, 264, 274], "rare": [6, 18, 51, 214, 218, 227, 266], "underlin": [6, 7], "numpydoc": [6, 7], "build": [6, 7, 8, 13, 27, 28, 33, 51, 53, 59, 81, 131, 158, 169, 174, 182, 185, 190, 193, 194, 195, 205, 218, 246, 263, 266, 269], "consist": [6, 7, 10, 14, 16, 32, 42, 43, 47, 51, 52, 56, 57, 59, 61, 67, 69, 76, 81, 94, 97, 125, 129, 138, 158, 164, 169, 172, 177, 184, 186, 188, 189, 191, 206, 214, 216, 217, 218, 222, 227, 230, 231, 236, 267, 269], "review": [6, 7, 130], "head": [6, 13, 32, 51, 218, 224, 239, 269], "plural": [6, 7], "length": [6, 10, 33, 35, 41, 42, 43, 45, 49, 51, 52, 54, 56, 57, 59, 60, 64, 66, 67, 68, 81, 82, 87, 90, 91, 94, 95, 105, 109, 113, 117, 118, 119, 129, 133, 137, 161, 166, 167, 169, 174, 177, 182, 193, 194, 198, 204, 208, 210, 214, 216, 218, 229, 230, 236, 239, 243, 244, 252], "equal": [6, 10, 12, 16, 17, 18, 25, 29, 32, 33, 34, 40, 41, 42, 43, 47, 49, 50, 52, 53, 55, 56, 57, 59, 64, 65, 66, 67, 68, 70, 76, 81, 82, 84, 87, 91, 94, 101, 102, 106, 109, 111, 116, 126, 127, 148, 149, 164, 169, 174, 177, 182, 185, 186, 187, 188, 189, 191, 193, 194, 196, 198, 204, 206, 208, 211, 214, 215, 216, 217, 218, 224, 229, 230, 231, 236, 239, 243, 247, 252, 264, 267, 275], "clutter": 6, "harder": [6, 10, 16, 51, 76, 188, 229], "minim": [6, 16, 18, 31, 42, 43, 47, 50, 51, 52, 76, 78, 81, 91, 106, 118, 133, 187, 188, 189, 190, 191, 194, 197, 207, 210, 211, 216, 236, 240], "amount": [6, 32, 51, 52, 63, 124, 174, 179, 182, 191, 201, 229, 243, 244], "deprec": [6, 8, 12, 26, 43, 51, 64, 78, 82, 104, 128, 194, 198, 218, 224, 227, 228, 232, 234, 237, 241], "notifi": 6, "awai": [6, 32, 34, 52, 94, 95, 116, 193, 198], "encourag": [6, 10, 32, 126, 127, 193], "label": [6, 32, 33, 45, 51, 61, 74, 78, 97, 137, 144, 148, 153, 162, 164, 184, 198, 199, 201, 210, 223, 224, 273], "elabor": [6, 19, 179, 249], "suffic": [6, 186], "clarifi": 6, "complic": [6, 11, 16, 18, 33, 42, 50, 52, 53, 55, 56, 57, 59, 76, 78, 84, 124, 126, 164, 182, 188, 191, 195, 197, 208, 210, 217, 218, 222, 223, 231, 233, 237, 239, 264, 266, 269, 270], "demonstr": [6, 7, 11, 16, 18, 21, 42, 43, 51, 78, 91, 106, 108, 114, 118, 119, 128, 185, 188, 248, 274], "api": [6, 7, 10, 16, 19, 33, 51, 63, 71, 77, 92, 93, 100, 131, 160, 173, 184, 191, 211, 212, 213, 235, 237, 240, 246, 247, 257, 259, 267, 268, 271], "simpl": [6, 11, 14, 16, 18, 21, 23, 32, 33, 42, 50, 51, 55, 59, 63, 67, 69, 76, 78, 80, 87, 91, 92, 94, 95, 101, 102, 105, 108, 109, 111, 113, 116, 118, 119, 121, 123, 124, 128, 132, 138, 152, 153, 161, 162, 163, 174, 181, 182, 188, 189, 190, 194, 195, 198, 200, 205, 207, 208, 210, 211, 214, 217, 224, 230, 231, 236, 240, 242, 243, 244, 245, 249, 263, 266, 269, 270, 274], "too": [6, 11, 18, 42, 43, 51, 57, 59, 61, 64, 66, 76, 81, 90, 91, 92, 126, 133, 205, 206, 210, 211, 214, 216, 217, 218, 229, 230, 245, 246], "thought": [6, 51, 205, 214, 266, 269], "perfect": [6, 18, 42, 51, 91, 211, 217, 268, 269], "tell": [6, 7, 16, 17, 21, 33, 43, 52, 55, 59, 82, 93, 113, 169, 188, 193, 197, 205, 208, 214, 230, 266], "think": [6, 10, 16, 17, 18, 21, 23, 31, 42, 116, 169, 233, 237, 266, 274], "test_": [6, 229], "coverage_doctest": 6, "coverag": 6, "6868680200532414": 6, "dsolv": [6, 215, 216, 264, 268, 275], "co": [6, 11, 18, 20, 25, 31, 33, 50, 51, 53, 55, 56, 58, 59, 60, 61, 64, 65, 67, 69, 73, 74, 75, 76, 78, 82, 87, 91, 93, 106, 107, 108, 114, 116, 117, 119, 121, 122, 123, 128, 131, 136, 138, 174, 176, 177, 179, 181, 182, 183, 184, 188, 191, 194, 195, 197, 198, 199, 200, 201, 205, 206, 207, 208, 210, 214, 216, 217, 218, 219, 225, 237, 243, 244, 245, 246, 247, 252, 263, 264, 266, 268, 274, 275], "sin": [6, 7, 10, 11, 16, 18, 20, 21, 23, 25, 31, 33, 50, 51, 53, 55, 56, 58, 59, 60, 61, 65, 69, 70, 73, 74, 75, 76, 78, 79, 82, 87, 92, 93, 103, 106, 107, 108, 113, 114, 116, 117, 119, 121, 122, 123, 128, 131, 136, 138, 162, 174, 176, 177, 179, 181, 182, 183, 184, 186, 188, 194, 195, 197, 198, 199, 200, 201, 205, 206, 207, 208, 210, 213, 214, 216, 217, 219, 225, 231, 237, 243, 244, 245, 246, 247, 252, 263, 264, 266, 268, 269, 274, 275], "hint": [6, 18, 32, 35, 42, 51, 54, 57, 78, 82, 87, 91, 101, 131, 141, 145, 161, 163, 164, 174, 194, 205, 208, 212, 216, 274], "1st_exact": 6, "eq": [6, 11, 16, 18, 29, 31, 33, 57, 61, 64, 68, 76, 81, 167, 184, 185, 189, 194, 196, 198, 200, 204, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 230, 231, 237, 243, 266, 268, 275], "c1": [6, 14, 52, 61, 68, 82, 84, 150, 164, 206, 211, 214, 216, 248, 275], "comma": [6, 7, 11, 33, 51, 198, 237, 266], "readabl": [6, 24, 32, 79, 105, 194, 197, 198, 205, 207, 240], "accept": [6, 18, 32, 33, 42, 51, 57, 65, 78, 81, 82, 84, 87, 90, 93, 114, 158, 174, 178, 184, 193, 194, 197, 198, 199, 206, 208, 210, 216, 230, 237, 243, 244, 247, 270], "rang": [6, 10, 14, 18, 21, 31, 33, 40, 41, 42, 43, 45, 47, 51, 52, 56, 57, 59, 65, 82, 87, 91, 95, 99, 103, 133, 164, 184, 188, 189, 190, 191, 193, 194, 195, 200, 201, 204, 207, 210, 214, 217, 218, 219, 223, 229, 236, 263, 274], "30": [6, 25, 31, 33, 37, 51, 52, 54, 55, 56, 59, 65, 67, 78, 82, 87, 88, 91, 94, 95, 114, 137, 187, 189, 193, 194, 198, 204, 207, 210, 218, 219, 274], "7": [6, 11, 12, 16, 18, 20, 21, 25, 27, 28, 31, 33, 35, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 73, 76, 78, 81, 82, 84, 85, 87, 91, 93, 94, 96, 99, 101, 116, 123, 126, 127, 131, 164, 169, 171, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 200, 201, 204, 205, 206, 207, 208, 210, 211, 213, 215, 216, 217, 218, 219, 223, 224, 229, 230, 233, 236, 237, 243, 252, 264, 269, 270, 273], "8": [6, 12, 14, 23, 25, 26, 31, 33, 35, 42, 43, 44, 47, 49, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 67, 73, 76, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 99, 101, 103, 116, 131, 136, 137, 148, 184, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 200, 201, 204, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 223, 229, 231, 233, 236, 243, 245, 246, 252, 263, 264, 268, 270, 274], "9": [6, 12, 23, 31, 33, 39, 41, 42, 43, 47, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 67, 73, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 99, 101, 102, 103, 104, 114, 116, 119, 131, 133, 137, 169, 183, 184, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 204, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 229, 233, 236, 243, 245, 268, 270, 275], "11": [6, 12, 16, 27, 28, 33, 42, 45, 47, 49, 51, 52, 54, 56, 59, 63, 64, 65, 67, 68, 76, 78, 81, 82, 83, 87, 91, 93, 96, 101, 114, 116, 129, 148, 158, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 205, 207, 211, 214, 216, 217, 218, 219, 230, 236, 246], "12": [6, 11, 12, 18, 25, 31, 32, 33, 37, 39, 40, 42, 43, 44, 47, 49, 50, 51, 52, 54, 56, 57, 59, 61, 64, 65, 67, 76, 78, 82, 87, 88, 91, 94, 95, 99, 101, 103, 116, 117, 129, 161, 174, 183, 186, 187, 188, 191, 193, 194, 195, 197, 198, 204, 206, 207, 211, 213, 214, 218, 219, 230, 233, 236, 245, 270, 274], "13": [6, 25, 33, 40, 42, 47, 51, 52, 54, 56, 59, 63, 64, 65, 66, 76, 81, 87, 91, 95, 99, 101, 114, 129, 184, 191, 193, 194, 195, 197, 198, 204, 211, 213, 215, 216, 218, 219, 229, 230, 252], "14": [6, 33, 40, 42, 46, 47, 49, 51, 52, 56, 57, 59, 76, 87, 88, 91, 92, 94, 99, 114, 183, 184, 187, 189, 191, 192, 193, 194, 195, 197, 198, 207, 210, 211, 214, 216, 218, 219, 264], "15": [6, 11, 18, 31, 37, 40, 42, 47, 49, 51, 52, 54, 55, 56, 59, 61, 64, 65, 67, 68, 76, 78, 81, 82, 83, 87, 88, 91, 94, 137, 183, 184, 186, 187, 188, 189, 193, 194, 195, 197, 198, 200, 204, 205, 207, 210, 211, 215, 216, 217, 218, 219, 236, 263, 264, 269, 270], "16": [6, 25, 31, 33, 42, 43, 46, 50, 51, 52, 56, 59, 60, 61, 65, 76, 78, 81, 87, 88, 90, 91, 95, 179, 186, 187, 188, 191, 192, 193, 194, 197, 198, 204, 206, 207, 208, 211, 218, 219, 236, 243, 251, 270], "17": [6, 10, 40, 42, 43, 51, 52, 55, 56, 57, 61, 64, 67, 76, 87, 91, 101, 188, 189, 193, 194, 197, 198, 205, 207, 211, 214, 219, 233, 237, 268], "18": [6, 42, 43, 54, 56, 59, 61, 64, 67, 83, 87, 91, 95, 99, 101, 103, 175, 183, 191, 192, 197, 198, 206, 207, 211, 214, 216, 217, 218, 219, 245], "19": [6, 42, 51, 54, 59, 61, 64, 67, 87, 91, 93, 94, 189, 193, 194, 197, 207, 211, 213, 216, 230, 263], "20": [6, 11, 29, 33, 40, 42, 43, 50, 51, 52, 55, 56, 59, 67, 68, 78, 87, 91, 94, 95, 101, 111, 169, 171, 184, 188, 192, 193, 194, 195, 197, 198, 204, 205, 206, 207, 210, 211, 214, 217, 218, 243, 264], "21": [6, 10, 37, 42, 51, 54, 56, 64, 65, 73, 87, 91, 93, 94, 129, 184, 189, 191, 192, 193, 195, 197, 198, 204, 214, 216, 218, 219, 274], "22": [6, 11, 42, 51, 54, 55, 56, 59, 87, 91, 94, 95, 129, 192, 197, 210, 211, 216, 218], "23": [6, 31, 42, 43, 51, 54, 57, 59, 65, 67, 87, 91, 94, 129, 189, 194, 197, 204, 211, 236], "24": [6, 25, 31, 39, 43, 44, 51, 54, 56, 59, 65, 73, 78, 87, 91, 94, 95, 99, 101, 161, 171, 183, 189, 191, 193, 194, 195, 197, 200, 205, 211, 214, 218, 233, 236, 252, 264, 270], "25": [6, 11, 42, 43, 52, 54, 56, 59, 61, 64, 66, 83, 87, 90, 91, 94, 95, 101, 111, 177, 183, 191, 193, 194, 197, 198, 204, 205, 207, 211, 213, 214, 215, 218, 230], "26": [6, 40, 51, 52, 54, 63, 87, 91, 94, 95, 194, 211, 218], "27": [6, 21, 33, 34, 42, 46, 56, 61, 87, 91, 94, 95, 101, 103, 191, 216], "28": [6, 33, 42, 50, 54, 55, 59, 87, 91, 116, 207, 211, 214, 269], "29": [6, 25, 40, 42, 43, 51, 52, 54, 56, 57, 64, 65, 87, 91, 101, 153, 188, 206, 218], "assumpt": [6, 11, 15, 17, 19, 21, 26, 27, 29, 30, 32, 33, 42, 43, 45, 50, 53, 55, 57, 58, 78, 81, 82, 87, 88, 101, 105, 131, 171, 176, 187, 198, 206, 207, 210, 214, 216, 217, 223, 231, 236, 253, 254, 274], "parenthes": [6, 11, 51, 93, 105, 152, 153, 182, 198, 222, 239], "type": [6, 8, 10, 11, 13, 16, 17, 18, 21, 27, 28, 31, 42, 43, 47, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 69, 76, 78, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 95, 97, 99, 101, 105, 109, 114, 125, 131, 136, 150, 158, 159, 160, 162, 174, 177, 178, 180, 182, 184, 185, 188, 189, 192, 193, 194, 195, 196, 198, 199, 200, 206, 207, 208, 210, 211, 212, 213, 216, 222, 223, 224, 227, 229, 230, 231, 236, 237, 239, 246, 249, 252, 255, 260, 264, 266, 268, 269, 270, 273, 274, 275], "enclos": [6, 61, 62, 67, 90, 102, 198, 208, 237], "colon": [6, 51], "preced": [6, 7, 11, 34, 43, 51, 52, 55, 56, 144, 210, 237], "space": [6, 11, 18, 31, 32, 33, 51, 52, 53, 60, 61, 62, 64, 66, 67, 80, 87, 93, 94, 103, 109, 110, 111, 133, 135, 138, 148, 151, 153, 159, 161, 168, 174, 177, 179, 182, 183, 184, 185, 193, 209, 217, 218, 229, 233, 243, 244, 246, 247, 248, 249, 251, 252, 266, 269], "omit": [6, 10, 16, 18, 33, 43, 50, 51, 52, 76, 78, 81, 87, 166, 198, 199, 206, 208, 216, 222, 231, 236, 264], "absent": [6, 35], "specifi": [6, 7, 10, 16, 18, 21, 32, 33, 34, 46, 50, 51, 52, 53, 54, 57, 59, 60, 64, 67, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 101, 106, 109, 113, 114, 116, 118, 119, 121, 124, 126, 127, 128, 129, 131, 132, 148, 153, 158, 159, 161, 162, 167, 173, 174, 176, 177, 179, 181, 182, 185, 186, 187, 188, 189, 191, 193, 194, 195, 198, 200, 201, 204, 205, 206, 208, 210, 214, 215, 216, 217, 218, 219, 223, 224, 225, 229, 230, 231, 236, 237, 243, 244, 245, 248, 251, 260, 270], "displai": [6, 7, 11, 16, 17, 51, 52, 55, 76, 80, 94, 95, 99, 135, 168, 174, 177, 178, 184, 188, 189, 198, 206, 222, 229], "signatur": [6, 18, 27, 28, 43, 51, 87, 231, 232, 236, 237], "brace": [6, 56, 114, 198], "appear": [6, 7, 11, 32, 33, 35, 40, 42, 51, 52, 56, 57, 60, 61, 64, 67, 70, 74, 76, 78, 82, 87, 91, 93, 114, 118, 148, 164, 166, 169, 184, 186, 188, 191, 193, 194, 198, 207, 210, 214, 215, 216, 218, 222, 224, 229, 236, 237, 243, 247], "shape": [6, 10, 33, 67, 82, 84, 87, 89, 90, 99, 101, 108, 113, 114, 174, 184, 185, 187, 198, 201, 208, 218, 219, 220, 222, 223, 224, 237, 273], "combin": [6, 10, 11, 18, 32, 51, 55, 56, 59, 71, 78, 80, 81, 82, 91, 95, 101, 113, 117, 124, 132, 143, 150, 158, 159, 161, 162, 163, 167, 169, 170, 185, 186, 188, 189, 191, 193, 194, 198, 199, 207, 208, 210, 211, 214, 216, 218, 219, 233, 236, 263, 266, 269], "incorrectli": [6, 10, 18, 60, 61, 87, 186], "opt_cs": 6, "canon": [6, 16, 33, 35, 40, 42, 43, 47, 51, 52, 53, 57, 67, 76, 81, 87, 91, 93, 109, 141, 145, 164, 166, 169, 171, 191, 199, 206, 207, 210, 216, 218, 224, 236, 274], "find": [6, 11, 14, 15, 18, 20, 21, 25, 28, 31, 33, 34, 42, 45, 46, 47, 50, 51, 55, 57, 59, 61, 63, 64, 65, 68, 73, 76, 78, 80, 87, 91, 93, 107, 115, 122, 129, 131, 133, 149, 156, 158, 159, 160, 164, 167, 169, 181, 184, 185, 186, 187, 188, 189, 190, 191, 195, 197, 198, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 216, 217, 218, 224, 233, 236, 237, 239, 243, 252, 264, 266, 268, 270, 275], "optim": [6, 33, 35, 42, 55, 91, 105, 131, 144, 148, 194, 198, 199, 207, 210, 218, 230], "mul": [6, 10, 11, 13, 18, 25, 76, 78, 82, 91, 144, 148, 158, 159, 187, 188, 189, 193, 194, 198, 199, 200, 207, 210, 214, 215, 216, 217, 222, 254, 269], "pow": [6, 10, 11, 25, 30, 33, 52, 57, 76, 82, 91, 163, 187, 188, 189, 194, 198, 200, 207, 210, 216, 217, 269, 273], "neg": [6, 11, 16, 17, 21, 28, 30, 33, 34, 46, 50, 51, 56, 57, 59, 61, 63, 64, 67, 76, 78, 80, 81, 82, 87, 90, 91, 94, 95, 98, 99, 101, 164, 174, 186, 187, 189, 191, 193, 194, 195, 198, 204, 206, 207, 208, 210, 211, 214, 216, 217, 218], "coeffici": [6, 14, 16, 28, 31, 33, 50, 51, 53, 55, 56, 59, 64, 69, 70, 73, 74, 76, 80, 81, 84, 87, 88, 91, 102, 109, 114, 137, 151, 161, 169, 183, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 200, 201, 204, 205, 208, 210, 211, 213, 214, 215, 216, 217, 218, 224, 230, 246, 249, 269, 274], "none": [6, 7, 10, 16, 17, 18, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 101, 106, 107, 108, 109, 110, 113, 114, 133, 135, 137, 138, 144, 149, 154, 159, 161, 164, 166, 170, 171, 172, 174, 176, 177, 178, 182, 183, 184, 185, 187, 188, 189, 191, 193, 194, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 227, 229, 230, 231, 232, 236, 237, 239, 242, 243, 245, 270, 274, 275], "process": [6, 7, 10, 11, 16, 30, 33, 42, 43, 49, 51, 52, 57, 59, 67, 76, 78, 87, 91, 101, 110, 114, 116, 122, 125, 126, 128, 131, 184, 185, 191, 198, 199, 206, 210, 214, 216, 229, 233, 274], "concern": [6, 16, 31, 34, 50, 55, 91, 179, 184, 186, 187, 188, 197, 198, 199, 210, 211, 216, 230, 231, 233, 239], "item": [6, 7, 11, 33, 40, 41, 43, 51, 56, 62, 68, 82, 87, 91, 109, 184, 188, 191, 194, 198, 206, 214, 215, 218, 229, 230, 233, 236, 237, 274], "fragment": [6, 52], "desir": [6, 10, 11, 14, 18, 21, 24, 42, 43, 51, 52, 54, 55, 56, 57, 61, 65, 67, 81, 82, 87, 90, 91, 92, 109, 110, 111, 113, 124, 128, 149, 174, 181, 182, 187, 189, 191, 193, 194, 195, 198, 199, 201, 206, 210, 214, 216, 217, 230, 232, 233, 236, 249, 263], "span": [6, 10, 80, 87, 94, 95, 193, 198, 234, 270], "subsequ": [6, 11, 51, 57, 174, 189, 191, 194, 233, 236, 246, 249], "indent": [6, 11, 239], "embed": [6, 7, 31, 43, 51, 79, 193], "hyperlink": 6, "classnam": 6, "erf": [6, 59, 76, 78, 198, 208, 218], "gauss": [6, 59, 78, 87, 133, 186, 193, 196, 216, 217], "erfc": [6, 59, 76, 198, 218], "complementari": [6, 59, 101], "erfi": [6, 59, 76, 198], "erf2": [6, 59, 198], "erfinv": [6, 59, 198, 218], "invers": [6, 25, 42, 43, 51, 52, 53, 58, 59, 77, 78, 84, 87, 91, 108, 109, 153, 157, 158, 161, 166, 169, 185, 186, 187, 189, 191, 194, 195, 198, 200, 208, 210, 214, 216, 217, 218, 236, 270, 274], "erfcinv": [6, 59, 198], "erf2inv": [6, 59, 198], "besselj": [6, 59, 73, 198, 210, 214, 268], "besselbas": [6, 59], "bessel": [6, 7, 57, 58, 69, 78, 194, 210, 214, 218, 268], "kind": [6, 7, 10, 15, 16, 17, 18, 32, 33, 53, 56, 59, 71, 78, 82, 94, 97, 109, 114, 127, 179, 186, 188, 189, 194, 199, 200, 206, 214, 215, 218, 236, 249, 251, 254, 264, 274], "bess": [6, 59, 198, 210, 214, 218], "besselk": [6, 59, 198, 218], "cite": [6, 19], "citat": [6, 50, 192], "meant": [6, 7, 10, 11, 16, 18, 33, 51, 59, 64, 78, 91, 114, 131, 184, 189, 206, 210, 215, 247, 269], "augment": [6, 33, 87, 109, 126, 127, 131, 196, 216, 217, 234, 237, 275], "freeli": [6, 24, 85, 185], "wikipedia": [6, 16, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 80, 81, 82, 84, 87, 91, 99, 101, 104, 133, 135, 136, 137, 139, 140, 141, 145, 146, 147, 150, 152, 153, 162, 164, 167, 174, 176, 180, 194, 201, 205, 206, 207, 214, 217, 218, 231, 236, 243, 244, 248, 250, 252, 268, 270, 272], "wolfram": [6, 29, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 78, 87, 91, 93, 192, 198, 200, 201, 203, 206, 211, 218, 236, 270], "mathworld": [6, 29, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 78, 87, 91, 192, 201, 206, 211, 218, 236], "nist": [6, 56, 57, 59, 169], "digit": [6, 11, 33, 51, 52, 54, 55, 61, 78, 81, 91, 124, 174, 188, 194, 205, 210, 236, 263], "dlmf": [6, 56, 57, 59], "suffer": 6, "rot": [6, 67, 161], "publish": [6, 76, 208], "identifi": [6, 10, 16, 17, 31, 44, 51, 54, 55, 78, 87, 97, 126, 152, 153, 185, 188, 189, 199, 207, 210, 214, 215, 216, 217, 218, 237, 240], "clickabl": 6, "kozen89": [6, 191, 192], "kozen": [6, 192], "landau": [6, 192, 264], "polynomi": [6, 7, 14, 16, 20, 21, 29, 42, 50, 51, 52, 55, 56, 58, 69, 70, 71, 72, 74, 78, 81, 82, 84, 87, 91, 95, 101, 129, 131, 185, 187, 192, 196, 200, 205, 207, 208, 210, 211, 212, 213, 214, 217, 229, 253, 260, 265, 270, 275], "decomposit": [6, 42, 49, 83, 84, 87, 187, 189, 190, 191, 192, 200, 274], "1989": [6, 192, 216], "pp": [6, 42, 43, 49, 50, 51, 52, 56, 57, 78, 82, 87, 118, 128, 183, 186, 191, 192, 214, 215, 218], "445": [6, 192], "456": [6, 51, 192], "abramowitz": [6, 59], "milton": [6, 59], "stegun": [6, 59], "iren": [6, 59], "chapter": [6, 42, 59, 91, 114, 192], "formula": [6, 14, 31, 45, 50, 51, 55, 56, 59, 64, 77, 81, 87, 91, 183, 185, 191, 194, 198, 200, 204, 207, 210, 211, 214, 268, 274], "tabl": [6, 16, 34, 42, 51, 56, 59, 72, 77, 78, 87, 91, 108, 131, 183, 193, 220, 256], "ed": [6, 43, 59, 87, 192, 216, 218], "1965": [6, 59, 82], "luke": [6, 59, 76, 208], "l": [6, 10, 11, 31, 32, 33, 34, 40, 42, 43, 50, 52, 59, 62, 63, 64, 65, 66, 68, 69, 74, 76, 78, 80, 83, 84, 87, 91, 94, 95, 101, 103, 108, 109, 111, 113, 114, 117, 118, 119, 121, 122, 123, 127, 128, 129, 130, 131, 132, 133, 136, 162, 165, 166, 167, 169, 181, 182, 183, 185, 187, 189, 191, 192, 198, 200, 201, 207, 208, 211, 214, 216, 218, 222, 223, 224, 225, 229, 231, 236, 252, 274], "Their": [6, 51, 59, 76, 184, 188, 191, 208], "approxim": [6, 11, 12, 15, 31, 42, 50, 51, 52, 55, 59, 61, 67, 76, 78, 87, 91, 95, 98, 133, 167, 184, 188, 189, 194, 201, 205, 208, 218, 255, 264, 268], "1969": [6, 52, 59, 76, 192, 208], "en": [6, 7, 16, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 99, 101, 104, 133, 135, 136, 137, 139, 140, 141, 145, 146, 147, 150, 152, 153, 162, 164, 174, 176, 180, 194, 195, 201, 205, 206, 207, 214, 217, 218, 231, 236, 237, 243, 244, 248, 250, 252, 270], "bessel_funct": [6, 59], "typefunct": [6, 59], "gamma": [6, 7, 11, 18, 50, 51, 53, 55, 56, 58, 76, 78, 104, 131, 161, 182, 183, 198, 208, 210, 214, 218, 259, 274], "infti": [6, 16, 29, 50, 51, 52, 56, 57, 59, 76, 78, 185, 194, 201, 205, 208, 214, 217, 218, 264, 268, 274], "mathrm": [6, 23, 41, 50, 51, 52, 59, 76, 78, 87, 189, 191, 198, 206, 208, 214, 217, 218, 261, 264, 268], "factori": [6, 14, 18, 50, 51, 55, 58, 59, 87, 91, 93, 183, 189, 191, 193, 194, 198, 200, 210, 216, 218, 231, 232, 236, 237, 274], "z": [6, 10, 11, 16, 18, 29, 30, 33, 34, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 63, 64, 65, 66, 67, 76, 78, 81, 82, 84, 87, 93, 94, 95, 103, 106, 107, 108, 111, 114, 116, 117, 118, 119, 121, 122, 123, 128, 129, 131, 132, 133, 142, 144, 148, 158, 159, 161, 165, 169, 173, 174, 175, 176, 177, 179, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 197, 198, 199, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 222, 223, 224, 230, 231, 237, 243, 245, 246, 247, 248, 249, 251, 252, 263, 264, 266, 268, 269, 273, 274, 275], "whole": [6, 10, 16, 51, 53, 59, 78, 95, 103, 184, 185, 193, 194, 198, 201, 206, 208, 214, 217, 236], "complex": [6, 10, 11, 13, 16, 18, 21, 25, 28, 30, 31, 33, 42, 51, 52, 54, 55, 56, 58, 59, 63, 73, 76, 82, 83, 87, 91, 92, 93, 99, 101, 105, 114, 131, 133, 137, 147, 150, 152, 153, 164, 173, 174, 182, 186, 187, 189, 190, 193, 194, 198, 199, 203, 208, 210, 214, 216, 217, 218, 231, 239, 274, 275], "plane": [6, 25, 51, 59, 61, 63, 64, 66, 67, 77, 78, 99, 116, 136, 137, 181, 182, 206, 217, 252, 274], "pole": [6, 59, 76, 100, 101, 137, 205, 208, 214], "pi": [6, 10, 11, 13, 16, 18, 21, 24, 25, 26, 28, 29, 30, 31, 33, 43, 50, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 70, 76, 78, 87, 91, 103, 116, 131, 133, 135, 136, 137, 138, 140, 148, 159, 161, 162, 165, 167, 174, 183, 184, 186, 188, 189, 194, 198, 201, 205, 206, 207, 208, 210, 213, 214, 216, 217, 218, 236, 243, 245, 252, 263, 268, 274], "oo": [6, 16, 17, 29, 31, 50, 51, 55, 56, 57, 59, 64, 76, 78, 81, 87, 101, 103, 150, 162, 165, 189, 191, 194, 203, 204, 205, 206, 210, 213, 214, 216, 217, 218, 223, 236, 239, 264, 268], "known": [6, 16, 17, 18, 28, 32, 33, 34, 40, 42, 43, 51, 52, 55, 56, 59, 61, 64, 69, 76, 78, 79, 88, 91, 99, 101, 102, 104, 106, 111, 128, 167, 174, 181, 187, 188, 189, 193, 194, 198, 201, 204, 206, 207, 208, 210, 212, 213, 214, 215, 216, 218, 236, 237, 243, 249, 251, 274], "sqrt": [6, 10, 16, 18, 20, 21, 25, 29, 30, 31, 33, 51, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 75, 76, 78, 79, 82, 83, 87, 91, 93, 94, 101, 103, 116, 133, 135, 137, 138, 143, 148, 158, 159, 161, 162, 164, 165, 167, 174, 179, 182, 183, 186, 188, 189, 191, 193, 194, 197, 198, 199, 204, 207, 208, 210, 211, 213, 214, 216, 217, 218, 236, 237, 239, 243, 251, 252, 263, 268, 273, 274, 275], "obei": [6, 59, 183, 198, 208], "mirror": [6, 59, 78, 137], "symmetri": [6, 10, 39, 44, 47, 59, 82, 143, 183, 214, 222, 224, 263, 274], "conjug": [6, 29, 40, 41, 42, 51, 58, 59, 82, 87, 103, 133, 147, 150, 164, 194, 198, 214, 224], "differenti": [6, 7, 10, 20, 31, 51, 56, 57, 59, 68, 69, 71, 74, 101, 108, 109, 113, 114, 116, 118, 121, 124, 125, 126, 127, 128, 131, 132, 153, 159, 173, 174, 176, 177, 179, 182, 185, 191, 195, 197, 198, 203, 208, 210, 212, 214, 215, 243, 249, 250, 253, 260, 264, 265, 268], "polygamma": [6, 56, 59, 198], "seri": [6, 14, 31, 32, 33, 34, 41, 42, 50, 51, 53, 55, 56, 57, 59, 71, 74, 75, 76, 80, 91, 98, 101, 114, 121, 123, 131, 177, 181, 190, 191, 198, 203, 204, 208, 214, 217, 254, 260, 265], "expans": [6, 14, 18, 33, 51, 53, 56, 57, 59, 71, 78, 87, 91, 128, 143, 145, 194, 195, 200, 201, 202, 207, 209, 214, 216, 217, 254, 265, 274], "eulergamma": [6, 55, 56, 59], "40": [6, 33, 54, 56, 59, 61, 68, 82, 87, 91, 94, 184, 195, 197, 198, 218, 239, 263], "288037795340032417959588909060233922890": [6, 59], "49801566811835604271": [6, 59], "15494982830181068512": [6, 59], "lowergamma": [6, 59, 218], "lower": [6, 10, 16, 28, 31, 33, 42, 43, 50, 51, 53, 59, 60, 62, 67, 68, 78, 82, 83, 84, 87, 99, 104, 108, 164, 177, 183, 185, 187, 189, 191, 194, 198, 207, 208, 210, 214, 223, 224, 233, 243, 264, 272], "uppergamma": [6, 56, 59, 198, 218], "upper": [6, 28, 50, 52, 55, 59, 60, 67, 68, 82, 83, 84, 87, 90, 91, 99, 108, 157, 164, 183, 187, 189, 191, 193, 194, 198, 208, 216, 223, 243], "loggamma": [6, 7, 59, 198], "log": [6, 7, 11, 18, 23, 25, 31, 33, 42, 50, 51, 55, 56, 58, 59, 69, 73, 75, 76, 78, 82, 87, 91, 184, 189, 198, 200, 205, 208, 210, 214, 217, 218, 225, 264, 274, 275], "digamma": [6, 56, 59, 198], "trigamma": [6, 59, 198], "beta": [6, 11, 33, 42, 51, 58, 78, 161, 174, 183, 193, 195, 198, 214, 218], "euler": [6, 31, 32, 50, 51, 52, 55, 58, 59, 67, 73, 79, 91, 161, 174, 178, 182, 183, 198, 214, 218, 243, 244], "gamma_funct": [6, 59], "gov": [6, 56, 57, 59], "gammafunct": [6, 59], "gammabetaerf": [6, 56, 59], "unusu": [6, 16, 116, 229], "inlin": [6, 79, 178, 198, 231], "pretti": [6, 18, 32, 33, 59, 78, 79, 87, 91, 95, 101, 116, 178, 208, 210, 217, 251, 261, 265, 268, 270, 274], "As": [6, 10, 13, 14, 17, 18, 24, 33, 42, 43, 51, 52, 55, 56, 57, 59, 75, 76, 81, 87, 90, 91, 93, 113, 114, 116, 118, 125, 128, 129, 164, 169, 181, 185, 186, 188, 189, 191, 195, 197, 198, 205, 206, 208, 214, 217, 218, 236, 237, 246, 247, 263, 264, 266, 268, 269, 270, 273, 274], "literatur": [6, 76, 168, 190], "fact": [6, 10, 16, 17, 18, 21, 28, 29, 51, 56, 59, 69, 76, 91, 116, 128, 169, 185, 186, 188, 191, 193, 195, 197, 208, 210, 214, 217, 229, 237, 251, 263, 266, 267, 268, 269, 274], "eval": [6, 10, 16, 27, 28, 33, 51, 57, 59, 150, 164, 189, 194, 198, 231, 263], "illumin": 6, "tone": 6, "narr": [6, 8, 267], "excerpt": 6, "geometri": [6, 60, 61, 62, 64, 65, 66, 67, 68, 78, 124, 137, 190, 245, 252, 253, 260, 268], "autofunct": 6, "intersect": [6, 16, 21, 31, 32, 42, 61, 62, 64, 65, 66, 67, 68, 137, 185, 194, 198, 204, 205, 217, 260], "convex_hul": [6, 63, 67, 68], "are_similar": [6, 62, 63, 68], "autoclass": 6, "linearent": [6, 61, 64, 65, 66, 67], "rai": [6, 61, 63, 64, 65, 67, 68, 133, 137], "segment": [6, 10, 42, 61, 63, 64, 65, 66, 67, 68, 181, 184, 214, 229], "curv": [6, 32, 53, 63, 78, 91, 94, 133, 184, 185, 214, 243, 252, 264], "ellips": [6, 62, 63, 67, 136, 184, 198, 273], "circl": [6, 18, 51, 61, 62, 63, 65, 66, 67, 68, 76, 137, 144, 184, 217, 243, 245, 252], "polygon": [6, 61, 62, 63, 68, 77, 184, 252], "regularpolygon": [6, 62, 63, 67, 184], "triangl": [6, 18, 32, 56, 62, 63, 67, 68, 78, 82, 91, 183, 184, 245, 252], "rel": [6, 7, 10, 32, 33, 41, 42, 43, 44, 48, 49, 50, 52, 55, 62, 76, 91, 106, 108, 111, 119, 128, 129, 136, 163, 174, 177, 181, 182, 185, 187, 188, 191, 193, 206, 208, 213, 216, 218, 229, 236, 246, 247, 251, 268], "cumbersom": 6, "viewcod": 6, "aco": [6, 11, 25, 58, 64, 67, 116, 131, 137, 174, 198, 214, 243, 274], "obj": [6, 10, 16, 51, 189, 194, 198, 232], "qualifi": [6, 240], "elementari": [6, 16, 17, 18, 42, 51, 52, 55, 58, 59, 73, 76, 78, 82, 87, 91, 129, 157, 160, 190, 194, 195, 202, 236, 237, 246, 256], "trigonometr": [6, 18, 51, 58, 78, 195, 201, 209, 213, 214, 217, 237, 254, 265, 275], "trail": [6, 43, 91, 189, 191, 194, 234, 239], "pair": [6, 11, 14, 32, 33, 42, 43, 51, 52, 57, 63, 68, 75, 87, 91, 114, 118, 154, 156, 158, 159, 164, 173, 185, 188, 191, 193, 194, 199, 204, 205, 207, 208, 210, 211, 214, 217, 218, 231, 236, 246, 263, 270], "www": [6, 7, 25, 31, 42, 43, 52, 54, 56, 59, 73, 78, 79, 91, 99, 178, 192, 197, 198, 207, 210, 211, 214, 218, 236, 270, 273], "master": [6, 7, 23, 78, 229], "usag": [6, 7, 11, 16, 17, 18, 24, 27, 53, 57, 78, 124, 161, 179, 184, 185, 190, 191, 198, 206, 208, 211, 214, 215, 219, 233, 237, 238, 249, 250, 260, 269], "expect": [6, 7, 11, 16, 18, 21, 32, 34, 36, 51, 57, 59, 63, 81, 91, 92, 101, 114, 158, 188, 191, 193, 195, 196, 205, 210, 213, 217, 218, 227, 229, 230, 233, 236, 237, 268, 269], "vector": [6, 14, 25, 29, 33, 35, 38, 42, 43, 53, 59, 64, 65, 66, 73, 74, 80, 82, 87, 92, 94, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 136, 137, 150, 159, 161, 166, 169, 176, 177, 178, 185, 190, 193, 198, 208, 214, 216, 218, 223, 224, 229, 230, 244, 248, 253, 257, 259, 270], "dynamicsymbol": [6, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 174, 177, 178, 179, 180, 181, 182], "custom": [6, 10, 19, 33, 43, 51, 55, 58, 79, 82, 87, 107, 108, 173, 178, 179, 200, 204, 211, 218, 224, 230, 237, 243, 251, 260, 268, 270], "sine": [6, 18, 51, 57, 59, 76, 78, 138, 195, 201, 207, 263], "expand": [6, 10, 11, 14, 16, 33, 53, 55, 56, 57, 59, 76, 78, 82, 101, 114, 116, 131, 145, 153, 156, 163, 164, 186, 188, 190, 191, 193, 194, 195, 201, 205, 207, 208, 210, 214, 217, 218, 222, 230, 237, 248, 254, 263, 268], "troubleshoot": [6, 128], "spell": [6, 10, 214], "try": [6, 7, 8, 10, 11, 16, 17, 18, 43, 50, 51, 55, 59, 61, 66, 76, 78, 81, 84, 87, 90, 91, 154, 156, 163, 164, 184, 188, 193, 198, 203, 205, 206, 207, 208, 210, 211, 214, 216, 237, 239, 263, 266, 269, 270, 274], "referencefram": [6, 106, 107, 108, 109, 111, 114, 116, 117, 118, 121, 122, 123, 126, 127, 128, 129, 131, 132, 175, 176, 177, 178, 179, 180, 181], "though": [6, 11, 16, 17, 18, 24, 34, 51, 52, 53, 63, 67, 76, 78, 82, 87, 91, 105, 109, 116, 126, 128, 159, 173, 174, 181, 182, 186, 188, 189, 194, 195, 207, 208, 210, 214, 215, 216, 217, 229, 249, 264, 269, 274], "frame": [6, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 131, 132, 173, 174, 175, 176, 177, 179, 180, 181, 233, 243, 249], "notimplementederror": [6, 31, 50, 61, 64, 68, 78, 87, 99, 187, 193, 197, 206, 213, 214, 215, 216, 217], "outsid": [6, 21, 29, 42, 51, 59, 62, 67, 82, 91, 105, 169, 182, 194, 210, 264, 269], "plot": [6, 18, 23, 60, 61, 63, 64, 67, 74, 79, 87, 94, 95, 100, 131, 148, 151, 157, 201, 253, 259, 260, 268, 273], "ahead": [6, 91], "submit": 6, "sub": [6, 10, 11, 16, 17, 18, 21, 33, 50, 57, 59, 60, 61, 62, 63, 64, 65, 67, 78, 81, 82, 84, 87, 91, 93, 94, 95, 101, 105, 107, 114, 116, 117, 118, 121, 122, 128, 131, 161, 162, 167, 174, 183, 185, 187, 188, 189, 194, 198, 205, 206, 210, 211, 214, 215, 216, 218, 229, 230, 232, 254, 263, 264, 266], "common": [6, 7, 10, 11, 16, 17, 18, 20, 21, 28, 31, 33, 42, 43, 51, 52, 57, 62, 65, 68, 78, 84, 86, 87, 91, 92, 99, 101, 106, 108, 110, 117, 124, 129, 131, 136, 169, 174, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 200, 206, 207, 208, 209, 211, 214, 218, 230, 231, 234, 236, 237, 249, 251, 254, 257, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274], "matrixcommon": [6, 84, 86, 87], "dyadic": [6, 54, 106, 111, 114, 116, 121, 123, 124, 131, 176, 178, 180, 245, 250], "shorten": 6, "highli": [7, 51, 55, 98, 188, 194, 203, 231], "aspect": [7, 16, 87, 188], "teach": [7, 43, 52, 218], "conduct": 7, "accord": [7, 11, 33, 39, 42, 43, 47, 50, 51, 52, 59, 81, 84, 87, 91, 93, 115, 124, 158, 164, 184, 189, 191, 193, 195, 211, 216, 217, 224, 229, 231, 236, 251], "survei": 7, "commonli": [7, 43, 56, 59, 78, 87, 105, 181, 186, 214, 249], "encount": [7, 11, 14, 51, 78, 87, 156, 186, 191, 194, 216, 217, 231, 243, 270], "problem": [7, 10, 11, 14, 16, 17, 18, 20, 21, 35, 45, 47, 51, 52, 63, 76, 78, 82, 87, 91, 94, 96, 97, 102, 105, 114, 118, 119, 122, 124, 126, 173, 181, 182, 185, 186, 190, 191, 208, 210, 211, 214, 217, 233, 236, 250, 259, 264, 266, 270], "offer": [7, 32, 33, 42, 51, 92, 105, 131, 173, 182, 188, 193, 233, 250], "bring": [7, 76, 109, 122, 187, 201, 210, 270], "greater": [7, 21, 29, 43, 51, 57, 59, 76, 80, 91, 101, 191, 194, 197, 205, 210, 214, 216, 218, 233, 236, 249, 264], "clariti": [7, 42, 177], "mission": [7, 32, 85], "ca": [7, 23, 52, 59, 78, 197, 198, 236], "dedic": [7, 33, 190, 231, 247, 249], "essenti": [7, 35, 46, 51, 55, 57, 58, 59, 76, 111, 116, 179, 180, 182, 185, 186, 189, 193, 205, 208, 246, 249, 250, 251], "element": [7, 10, 11, 13, 16, 25, 28, 32, 33, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 74, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 94, 95, 101, 102, 111, 131, 133, 136, 150, 161, 169, 177, 180, 182, 184, 185, 186, 187, 189, 190, 191, 194, 196, 197, 198, 204, 205, 206, 208, 210, 211, 214, 216, 217, 218, 219, 223, 230, 232, 233, 236, 237, 238, 245, 264, 269, 270, 273, 274], "deviat": [7, 137, 218], "advanc": [7, 13, 15, 18, 27, 42, 51, 55, 56, 87, 88, 124, 129, 180, 184, 187, 188, 190, 192, 193, 200, 207, 214, 229, 230, 231, 236, 263, 265, 267, 271, 272, 273, 274], "docutil": 7, "sourceforg": [7, 32], "net": [7, 32, 67, 192, 214, 218, 236], "ext": [7, 185, 189], "autodoc": 7, "associ": [7, 10, 16, 32, 34, 49, 51, 52, 58, 59, 73, 74, 76, 80, 129, 131, 154, 162, 173, 174, 181, 182, 186, 187, 188, 189, 191, 193, 198, 206, 208, 211, 224, 238], "graphic": [7, 99], "info": [7, 11, 101, 198, 214, 215], "bear": [7, 16], "linkcod": 7, "readthedoc": [7, 79, 237], "subset": [7, 14, 16, 18, 31, 32, 35, 38, 42, 43, 49, 56, 57, 63, 74, 76, 78, 80, 91, 185, 187, 191, 193, 198, 206, 236], "modifi": [7, 11, 32, 33, 42, 51, 57, 59, 91, 93, 127, 136, 184, 191, 193, 194, 195, 198, 210, 216, 217, 218, 229, 232, 233, 236, 237, 263, 268, 270], "sphinx_math_dollar": 7, "delimit": [7, 51, 198], "dollar": [7, 268], "2": [7, 11, 12, 13, 14, 16, 17, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 229, 230, 231, 232, 233, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 251, 252, 263, 264, 266, 268, 269, 270, 273, 274, 275], "sphinxext": 7, "plot_direct": 7, "figur": [7, 51, 52, 61, 62, 64, 66, 67, 78, 95, 114, 159, 181, 182, 183, 184, 195, 198, 252, 274], "devel": [7, 183], "supersed": [7, 114, 131], "pep": [7, 33, 51, 81], "257": [7, 91, 216], "our": [7, 9, 10, 14, 18, 23, 33, 51, 59, 76, 87, 91, 117, 169, 181, 182, 184, 185, 187, 193, 194, 195, 198, 205, 208, 211, 214, 217, 229, 263, 266, 267, 269, 274], "introduct": [7, 10, 12, 15, 38, 42, 43, 124, 180, 189, 190, 191, 192, 198, 211, 214, 217, 250, 254, 255, 256, 260, 267, 273], "four": [7, 33, 43, 51, 55, 59, 81, 84, 91, 97, 102, 115, 124, 129, 137, 174, 184, 185, 191, 194, 198, 206, 211, 214, 216, 218, 219, 243, 244, 247], "locat": [7, 10, 43, 51, 65, 87, 91, 94, 95, 97, 108, 118, 128, 132, 177, 179, 193, 194, 198, 210, 218, 232, 241, 243, 246, 248, 250, 251], "websit": [7, 272], "advertis": 7, "serv": [7, 14, 18, 27, 28, 33, 48, 51, 58, 74, 193, 214, 215, 239, 267], "initi": [7, 16, 27, 42, 46, 51, 52, 53, 56, 59, 67, 69, 70, 73, 74, 75, 76, 79, 91, 93, 95, 97, 99, 101, 106, 109, 111, 113, 114, 116, 118, 123, 126, 127, 128, 131, 132, 136, 144, 153, 175, 176, 178, 182, 183, 191, 193, 194, 198, 204, 208, 210, 214, 216, 217, 223, 231, 238, 239, 243, 244, 245, 246, 247], "obtain": [7, 11, 14, 21, 27, 28, 32, 34, 35, 42, 43, 44, 47, 51, 52, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 73, 76, 78, 80, 82, 87, 90, 91, 98, 101, 124, 127, 129, 137, 159, 164, 169, 185, 186, 189, 191, 193, 194, 197, 199, 206, 207, 208, 210, 211, 214, 215, 216, 217, 236, 239, 246, 247], "technic": [7, 10, 12, 18, 22, 32, 51, 131, 150, 185, 214, 231, 236, 249, 266, 269], "place": [7, 8, 10, 11, 16, 18, 21, 22, 32, 43, 44, 51, 52, 57, 67, 83, 87, 90, 91, 93, 101, 131, 132, 192, 193, 198, 199, 205, 207, 210, 214, 233, 236, 262, 263, 270, 274], "site": [7, 91, 232], "upload": [7, 91], "belong": [7, 16, 29, 32, 42, 47, 51, 74, 87, 164, 174, 181, 184, 185, 187, 188, 191, 193, 194, 205, 206, 210, 211, 217, 224], "insid": [7, 10, 11, 18, 42, 43, 48, 51, 61, 62, 67, 94, 105, 107, 118, 128, 163, 164, 169, 178, 182, 194, 198, 206, 208, 211, 216, 217, 218, 220, 222, 233, 269, 270], "spars": [7, 84, 86, 87, 158, 187, 190, 193, 194, 195, 218, 219, 257, 269], "substanti": [7, 92], "edit": [7, 78, 87, 91, 191, 192, 194], "arg": [7, 16, 18, 21, 25, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 45, 48, 50, 51, 52, 53, 55, 56, 58, 59, 61, 62, 64, 66, 67, 68, 73, 76, 78, 81, 82, 83, 84, 85, 87, 89, 91, 93, 101, 133, 139, 142, 144, 147, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 174, 178, 182, 184, 187, 189, 191, 193, 194, 195, 198, 200, 201, 204, 205, 206, 207, 210, 214, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 236, 237, 239, 243, 244], "invari": [7, 10, 18, 42, 47, 98, 101, 183, 189, 193, 194, 208, 214], "polici": [7, 8, 10, 232, 234], "5": [7, 11, 12, 16, 18, 20, 21, 25, 27, 28, 29, 31, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 99, 101, 103, 104, 106, 111, 114, 116, 117, 121, 122, 123, 124, 126, 133, 137, 158, 159, 162, 164, 171, 173, 175, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 213, 215, 216, 217, 218, 219, 223, 224, 229, 230, 236, 237, 243, 245, 247, 249, 251, 252, 263, 264, 266, 269, 270, 273, 274], "center": [7, 14, 31, 42, 50, 51, 61, 65, 67, 68, 78, 87, 106, 108, 111, 114, 116, 121, 123, 125, 129, 131, 137, 181, 184, 193, 198, 206, 252], "resid": 7, "standalon": [7, 131], "restructur": 7, "appli": [7, 10, 17, 18, 25, 26, 27, 28, 29, 33, 42, 43, 44, 49, 50, 51, 52, 53, 54, 57, 58, 61, 66, 67, 69, 77, 78, 81, 82, 83, 87, 91, 93, 94, 95, 97, 101, 102, 106, 107, 116, 119, 126, 128, 130, 141, 145, 148, 149, 153, 156, 157, 161, 164, 174, 182, 184, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 209, 210, 214, 215, 216, 217, 218, 219, 222, 229, 232, 236, 243, 244, 247, 270, 273, 274], "surround": [7, 51, 68, 137, 206, 239], "nu": [7, 11, 59, 78, 91, 165, 186, 198, 210, 218, 224, 268], "equat": [7, 11, 14, 19, 31, 33, 47, 50, 51, 53, 57, 59, 61, 64, 65, 69, 73, 74, 75, 76, 79, 82, 87, 94, 101, 103, 105, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 130, 131, 132, 133, 137, 168, 173, 177, 178, 181, 182, 183, 184, 185, 190, 191, 192, 193, 196, 197, 198, 204, 208, 210, 212, 213, 215, 223, 243, 247, 248, 252, 264, 265, 268], "strip": [7, 52, 78, 91, 191, 234, 239], "out": [7, 11, 16, 17, 18, 32, 33, 42, 43, 51, 52, 53, 56, 59, 67, 76, 78, 84, 87, 91, 94, 101, 102, 114, 116, 118, 121, 131, 141, 145, 156, 159, 161, 163, 164, 185, 186, 188, 189, 193, 194, 195, 196, 198, 199, 205, 208, 210, 214, 219, 229, 231, 236, 237, 266, 268, 269, 273, 274], "unimport": 7, "bullet": 7, "avoid": [7, 8, 10, 17, 18, 33, 34, 51, 52, 57, 76, 78, 81, 87, 90, 93, 118, 128, 158, 181, 182, 186, 188, 194, 198, 199, 206, 210, 214, 216, 218, 222, 231, 234, 237, 266, 267], "whitespac": [7, 51, 234], "invalid": [7, 11, 21, 51, 52, 93, 116, 188, 191, 206], "dx": [7, 10, 14, 18, 31, 33, 47, 51, 53, 55, 59, 68, 70, 73, 74, 75, 76, 78, 87, 94, 104, 109, 110, 153, 182, 194, 195, 201, 211, 214, 215, 219, 264, 268, 273, 275], "meta": [7, 51, 214, 215], "stackexchang": [7, 61], "5020": 7, "wikibook": [7, 78, 79], "overleaf": 7, "mathematical_express": 7, "verbatim": 7, "_rewrit": 7, "_expand": 7, "difficult": [7, 16, 51, 87, 114, 195, 208, 214, 215, 217, 230, 252, 268, 274], "sentenc": [7, 81], "thumb": [7, 81, 236], "greek": [7, 24, 51, 91, 93, 185, 198], "letter": [7, 11, 24, 44, 51, 52, 91, 164, 198, 236, 264, 266], "\u03b1": [7, 183, 197], "alpha": [7, 11, 42, 51, 59, 78, 80, 136, 140, 143, 161, 177, 181, 182, 183, 189, 191, 193, 194, 197, 198, 210, 214, 218], "logarithm": [7, 11, 25, 31, 33, 51, 52, 57, 58, 76, 78, 87, 91, 189, 191, 195, 198, 208, 210, 217, 218, 265], "italic": 7, "emphasi": [7, 188], "asterisk": 7, "stirl": [7, 43, 58, 236], "fals": [7, 11, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 76, 78, 79, 81, 82, 83, 84, 87, 88, 91, 93, 94, 95, 99, 101, 103, 104, 107, 109, 110, 111, 114, 116, 117, 121, 122, 123, 125, 126, 127, 128, 129, 132, 136, 148, 149, 153, 156, 161, 162, 163, 164, 167, 171, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 223, 224, 227, 229, 230, 231, 232, 236, 237, 239, 243, 245, 266, 269, 270, 273], "permut": [7, 34, 36, 38, 39, 41, 44, 47, 48, 49, 52, 56, 59, 82, 84, 87, 110, 164, 183, 187, 189, 194, 211, 219, 220, 224, 236, 274], "cycl": [7, 10, 33, 39, 42, 43, 49, 51, 54, 56, 82, 91, 138, 206, 236], "partit": [7, 38, 42, 58, 91, 118, 128, 130, 218, 233, 235], "reduc": [7, 11, 17, 21, 26, 28, 30, 34, 47, 51, 52, 54, 56, 57, 59, 66, 67, 76, 78, 87, 91, 101, 102, 128, 146, 164, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 204, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 236, 270], "ge": [7, 16, 56, 57, 59, 76, 82, 87, 91, 183, 186, 191, 208, 236], "consecut": [7, 33, 42, 47, 50, 52, 56, 67, 210, 216], "group": [7, 32, 37, 38, 43, 44, 47, 48, 49, 51, 54, 56, 80, 81, 91, 143, 152, 153, 164, 183, 184, 185, 193, 194, 210, 214, 216, 217, 224, 236], "pairwis": [7, 29, 32, 51, 56, 68, 87, 91, 211, 216], "ital": [7, 198], "last": [7, 8, 10, 11, 13, 14, 16, 17, 18, 21, 26, 27, 28, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 55, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 101, 113, 125, 136, 169, 183, 184, 185, 186, 188, 189, 191, 194, 197, 198, 205, 206, 211, 214, 216, 217, 218, 219, 224, 227, 229, 230, 231, 232, 234, 236, 237, 239, 264, 266, 269, 270], "talk": [7, 12, 22, 52, 185, 193, 246], "handl": [7, 14, 16, 17, 18, 31, 39, 43, 51, 57, 78, 79, 81, 86, 91, 92, 93, 94, 102, 105, 114, 128, 144, 147, 153, 154, 159, 188, 194, 195, 204, 210, 212, 214, 216, 219, 222, 230, 236, 237, 239, 254, 269, 274], "referenc": [7, 8, 35, 40, 91, 113, 116, 161, 193], "overlin": [7, 16, 59], "normal": [7, 10, 11, 16, 17, 18, 21, 25, 28, 33, 42, 50, 51, 55, 57, 61, 64, 65, 66, 78, 79, 81, 85, 86, 87, 91, 93, 103, 105, 108, 114, 116, 122, 131, 137, 148, 158, 161, 162, 163, 164, 165, 169, 172, 174, 182, 185, 188, 189, 190, 191, 193, 194, 198, 199, 201, 206, 207, 211, 214, 218, 223, 229, 234, 236, 243, 257], "assign": [7, 16, 32, 33, 34, 47, 51, 67, 78, 80, 81, 87, 93, 109, 114, 121, 131, 169, 179, 182, 184, 186, 191, 198, 216, 217, 224, 231, 246, 249, 266], "structur": [7, 10, 13, 16, 18, 30, 32, 33, 39, 42, 43, 49, 51, 76, 78, 81, 82, 87, 94, 95, 97, 113, 124, 162, 164, 184, 185, 188, 191, 193, 194, 195, 210, 212, 214, 216, 217, 218, 222, 223, 231, 233, 236, 237, 266, 274], "suggest": [7, 10, 34, 42, 78, 87, 91, 114, 196, 270], "american": [7, 37, 52], "color": [7, 79, 99, 178, 198, 229, 236, 260, 273], "colour": 7, "quotat": 7, "line_color": [7, 184, 201], "aesthet": [7, 184], "ariti": [7, 184], "term": [7, 10, 11, 14, 16, 18, 33, 42, 51, 52, 53, 55, 56, 57, 59, 70, 74, 75, 76, 78, 81, 82, 87, 91, 95, 99, 101, 107, 109, 116, 118, 121, 124, 126, 128, 129, 143, 148, 160, 161, 164, 166, 169, 174, 176, 179, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 222, 223, 236, 243, 245, 249, 254, 264, 266, 268, 269, 274], "unrestrict": [7, 40, 236], "necklac": [7, 236], "bracelet": [7, 236], "impli": [7, 11, 16, 25, 29, 33, 42, 81, 164, 184, 189, 191, 198, 206, 208, 214, 219, 222, 223, 236, 249], "turn": [7, 10, 16, 33, 51, 57, 59, 66, 76, 85, 122, 126, 179, 185, 193, 195, 198, 205, 206, 208, 210, 211, 214, 229, 236, 251, 266, 268], "sequenc": [7, 11, 31, 33, 35, 38, 41, 42, 43, 47, 49, 50, 51, 52, 54, 56, 59, 61, 64, 65, 66, 67, 68, 71, 75, 81, 82, 84, 87, 90, 91, 131, 137, 163, 164, 189, 192, 194, 198, 200, 202, 205, 207, 208, 210, 211, 214, 215, 217, 224, 227, 230, 231, 236, 238, 239], "revers": [7, 35, 40, 43, 50, 51, 52, 57, 78, 79, 81, 87, 91, 101, 163, 174, 178, 185, 187, 191, 194, 195, 198, 199, 206, 210, 214, 236, 274], "ambigu": [7, 10, 11, 51, 152, 158, 210, 222, 227], "person": 7, "chebyshev": [7, 31, 51, 78, 191, 194], "pafnuti": 7, "lvovich": 7, "tchebychev": 7, "whose": [7, 16, 18, 32, 34, 35, 40, 43, 50, 51, 52, 57, 61, 65, 67, 68, 74, 78, 81, 87, 91, 111, 126, 136, 159, 169, 175, 176, 179, 182, 186, 187, 189, 193, 194, 205, 206, 210, 214, 215, 216, 218, 224, 229, 233, 236, 237, 243, 245, 247, 249], "transliter": 7, "russian": 7, "chebyshevt": [7, 59, 198], "orthogonalpolynomi": 7, "t_n": [7, 56, 59, 78, 191, 247], "tens": 7, "inclus": [7, 50, 97, 157, 185, 204, 205, 206, 217], "pronoun": 7, "gender": 7, "neutral": 7, "he": [7, 56, 76, 191], "she": [7, 217], "extran": [7, 214], "belittl": 7, "obvious": [7, 34, 42, 167, 181, 188, 208], "easili": [7, 10, 16, 18, 23, 51, 52, 74, 76, 87, 91, 92, 126, 162, 181, 194, 197, 198, 203, 210, 211, 214, 216, 217, 230, 268], "straightforward": [7, 18, 42, 52, 87, 208], "unwelcom": 7, "judgement": 7, "phrase": [7, 52], "friendli": [7, 33, 76, 231], "mistak": [7, 11, 21, 42, 237], "goe": [8, 18, 22, 87, 205, 208, 217, 266, 269], "content": [8, 12, 33, 51, 52, 86, 186, 189, 191, 194, 197, 198, 226, 231, 234, 235, 254, 255, 256, 257, 258, 259, 260, 261, 265, 267], "setup": [8, 33, 51, 117, 118, 119, 125, 133, 174, 191, 194, 196, 197, 208, 229, 230, 232, 242, 273], "depend": [8, 10, 11, 16, 18, 21, 23, 31, 33, 34, 42, 43, 50, 51, 52, 53, 56, 57, 59, 63, 68, 75, 76, 78, 79, 80, 87, 91, 92, 93, 99, 103, 106, 109, 110, 113, 114, 116, 118, 124, 126, 136, 137, 138, 153, 162, 164, 166, 169, 178, 179, 184, 186, 189, 190, 191, 193, 194, 195, 198, 199, 204, 208, 210, 211, 214, 215, 216, 217, 218, 229, 230, 231, 232, 236, 237, 249, 251, 252, 266, 268], "document": [8, 10, 15, 18, 27, 28, 29, 42, 47, 51, 52, 57, 58, 59, 63, 73, 76, 77, 79, 84, 87, 92, 95, 105, 109, 124, 126, 127, 129, 131, 139, 153, 159, 173, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 194, 198, 208, 212, 214, 216, 217, 227, 229, 231, 232, 234, 236, 243, 249, 250, 253, 264, 266, 267, 273, 274], "auto": [8, 11, 31, 51, 52, 79, 184, 191, 194, 198, 210, 214, 218], "rebuild": [8, 18, 51, 194, 269], "live": [8, 24, 34, 131, 193, 211], "server": 8, "debug": [8, 33, 51, 78, 116, 153, 229, 230, 239], "incompat": 8, "pick": [9, 16, 52, 56, 128, 158, 160, 274], "ignor": [10, 11, 18, 33, 42, 51, 52, 56, 57, 61, 66, 76, 81, 87, 91, 101, 107, 116, 161, 164, 174, 184, 194, 198, 199, 210, 216, 230, 274], "regex": 10, "categori": [10, 185, 253, 260], "lead": [10, 16, 17, 18, 50, 51, 57, 61, 78, 81, 87, 91, 103, 110, 148, 174, 182, 186, 189, 191, 193, 194, 195, 198, 205, 207, 210, 214, 217, 231, 234, 239, 267, 274], "against": [10, 16, 18, 52, 94, 114, 230], "unrel": [10, 51, 58, 186, 266], "capabl": [10, 16, 31, 33, 51, 55, 63, 76, 91, 94, 95, 124, 131, 184, 195, 198, 217, 267, 268, 274, 275], "w": [10, 11, 33, 35, 41, 50, 51, 52, 53, 54, 57, 59, 76, 78, 81, 87, 88, 108, 111, 122, 129, 130, 133, 138, 149, 153, 162, 177, 179, 180, 183, 184, 186, 187, 191, 192, 193, 194, 195, 199, 205, 206, 208, 210, 211, 214, 215, 217, 218, 229, 237, 239, 249, 275], "pythonwarn": 10, "NOT": [10, 81, 101, 144, 148, 163, 166, 227, 230], "blog": [10, 18, 33, 56, 82, 211, 217], "post": [10, 16, 21, 33, 45, 51, 198, 199, 210, 229, 269], "ned": 10, "batcheld": 10, "pars": [10, 43, 51, 84, 114, 125, 195, 197, 253, 261], "comprehens": [10, 16, 21, 192, 206, 218, 263], "additional_transl": 10, "recogn": [10, 11, 51, 52, 56, 66, 91, 94, 102, 186, 189, 197, 206, 207, 216, 223, 266], "logic": [10, 16, 18, 26, 27, 28, 29, 32, 51, 53, 76, 78, 91, 156, 158, 159, 163, 198, 200, 206, 214, 218, 236, 266, 267, 268, 270], "node": [10, 31, 45, 51, 78, 93, 97, 107, 140, 165, 174, 183, 188, 198, 205, 217, 222, 233, 255, 269, 273], "suppos": [10, 17, 18, 43, 50, 51, 52, 76, 185, 187, 191, 193, 194, 198, 205, 208, 214, 216, 227, 236, 247, 252, 266, 268, 274], "maximum": [10, 11, 21, 31, 33, 34, 42, 43, 51, 57, 78, 87, 91, 94, 116, 161, 169, 184, 189, 191, 194, 198, 205, 206, 210, 211, 214, 217, 218, 233, 236], "multipli": [10, 11, 25, 29, 33, 42, 51, 62, 66, 73, 80, 82, 87, 91, 109, 118, 127, 128, 129, 141, 150, 164, 169, 170, 185, 186, 187, 189, 191, 193, 194, 198, 200, 207, 208, 211, 214, 219, 236, 246, 266, 269], "max": [10, 33, 42, 43, 51, 58, 59, 61, 78, 87, 91, 93, 94, 184, 193, 194, 198, 205, 207, 208, 237], "min": [10, 43, 47, 51, 56, 58, 87, 93, 184, 193, 198, 204, 214], "is_perfect_squar": 10, "ntheori": [10, 29, 42, 51, 52, 191, 194, 211, 236, 258], "primetest": [10, 51, 91], "is_squar": [10, 51, 82, 91], "is_prim": [10, 16, 51, 185], "isprim": [10, 29, 52, 91], "divid": [10, 42, 50, 51, 52, 67, 87, 91, 168, 169, 186, 188, 189, 191, 193, 194, 198, 214, 233, 269], "bottom_up": 10, "interactive_travers": 10, "postorder_travers": [10, 269], "preorder_travers": [10, 269], "refactor": [10, 214, 222, 233], "tr": [10, 34, 42, 198, 207], "quantum": [10, 103, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 183, 259], "ever": [10, 18, 57, 182, 185, 194, 208, 214, 231, 234, 269], "helper": [10, 31, 33, 42, 46, 49, 51, 76, 79, 80, 149, 151, 160, 195, 205, 208, 211, 214, 215, 217, 230, 261], "default_sort_kei": [10, 32, 40, 222], "matrixel": [10, 33], "matrixsymbol": [10, 13, 16, 29, 30, 33, 51, 82, 84, 87, 198, 218, 220], "layer": [10, 101, 191, 237], "imprecis": 10, "free_symbol": [10, 33, 51, 60, 78, 82, 153, 171, 174, 194, 204, 211], "sinc": [10, 11, 13, 14, 16, 17, 18, 26, 31, 33, 34, 42, 43, 44, 47, 48, 49, 51, 52, 54, 56, 58, 59, 60, 61, 63, 64, 67, 69, 75, 76, 78, 80, 81, 82, 87, 91, 104, 116, 129, 131, 140, 164, 165, 169, 173, 179, 182, 185, 186, 188, 189, 191, 193, 194, 198, 201, 206, 207, 208, 210, 211, 214, 216, 217, 218, 224, 228, 232, 233, 234, 236, 237, 241, 246, 248, 249, 251, 263, 268, 270, 273, 274, 275], "atomicexpr": 10, "concept": [10, 16, 42, 116, 182, 188, 190, 193, 198, 217, 222, 251, 267, 272], "misappli": 10, "noth": [10, 32, 42, 51, 64, 78, 148, 164, 185, 189, 197, 198, 210, 214, 216, 227, 229, 237, 239, 266], "introduc": [10, 17, 47, 50, 51, 59, 76, 87, 92, 95, 114, 116, 121, 122, 123, 127, 164, 169, 182, 189, 190, 195, 198, 205, 208, 211, 218, 234, 267, 270, 272, 274], "21494": 10, "size": [10, 14, 33, 34, 35, 40, 42, 43, 44, 45, 46, 47, 51, 52, 54, 56, 79, 82, 84, 87, 90, 91, 99, 116, 126, 127, 128, 137, 159, 160, 178, 184, 187, 191, 198, 210, 211, 214, 218, 236, 264], "die": [10, 193, 218], "arrai": [10, 18, 20, 33, 42, 43, 47, 48, 52, 59, 78, 82, 84, 87, 91, 92, 99, 131, 161, 184, 187, 189, 194, 198, 217, 218, 221, 223, 224, 225, 230, 231, 233, 237, 270], "histor": [10, 18, 52, 214, 218], "21563": 10, "revert": [10, 189, 194], "sample_it": [10, 218], "consequ": [10, 18, 29, 51, 186, 188, 266, 274], "subclass": [10, 16, 18, 27, 28, 33, 51, 58, 62, 64, 78, 81, 133, 139, 148, 152, 153, 154, 159, 161, 162, 184, 185, 187, 188, 189, 193, 194, 198, 218, 229, 230, 231, 234, 237, 243, 246, 269], "kei": [10, 11, 26, 29, 32, 40, 42, 43, 51, 52, 53, 56, 67, 80, 82, 87, 90, 91, 94, 113, 114, 124, 156, 159, 164, 182, 184, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 210, 214, 215, 216, 218, 222, 233, 236, 237, 239, 270, 271, 274], "domainmatrix": [10, 83, 87, 190, 193, 196], "switch": [10, 42, 49, 78, 91, 101, 191, 194], "21402": 10, "earlier": [10, 105, 195, 199, 208, 210, 237, 247, 249, 269], "could": [10, 11, 14, 16, 18, 21, 28, 33, 44, 51, 63, 76, 78, 81, 111, 114, 124, 128, 164, 167, 169, 185, 187, 188, 191, 193, 195, 198, 206, 208, 210, 214, 215, 216, 217, 218, 219, 222, 223, 230, 234, 247, 248, 266, 269, 274], "traceback": [10, 11, 13, 16, 17, 18, 21, 26, 27, 28, 33, 34, 43, 51, 52, 55, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 93, 101, 183, 185, 188, 189, 191, 194, 197, 205, 206, 214, 216, 217, 227, 229, 230, 232, 234, 236, 237, 239, 266, 270], "typeerror": [10, 11, 17, 18, 21, 26, 27, 28, 43, 51, 61, 66, 81, 83, 85, 89, 101, 138, 205, 206, 230, 237], "unsupport": [10, 11, 13, 101, 198], "operand": [10, 11, 43, 51, 175, 193, 245], "dict": [10, 11, 16, 33, 43, 52, 53, 67, 68, 81, 82, 87, 91, 93, 109, 110, 144, 156, 159, 170, 172, 174, 184, 187, 188, 189, 191, 193, 194, 195, 196, 198, 210, 211, 214, 215, 216, 217, 218, 222, 229, 230, 236, 243, 275], "solve_lin_si": [10, 190], "heurisch": [10, 78], "smith_normal_form": [10, 88, 187], "newmatrix": 10, "holonom": [10, 72, 75, 115, 116, 117, 118, 124, 126, 127, 253, 260], "polymatrix": 10, "risch": [10, 78, 264], "broken": [10, 40, 51, 181, 198, 214, 239], "20780": 10, "20759": 10, "20621": 10, "19882": 10, "18844": 10, "21441": 10, "21427": 10, "21496": 10, "potenti": [10, 16, 63, 84, 87, 91, 109, 110, 111, 113, 123, 124, 175, 180, 188, 193, 205, 208, 210, 214, 216, 232, 233, 245, 250, 251], "impact": 10, "downstream": [10, 16], "goal": [10, 32, 105, 132, 193, 195, 229, 230, 232, 267, 268], "perhap": [10, 33, 51, 81, 91, 149, 188, 216, 231, 263], "tableform": [10, 239], "isn": [10, 18, 78, 105, 114, 217, 268], "advis": [10, 16, 32, 114], "usecas": 10, "unclear": [10, 16, 105], "line2dbaseseri": [10, 184], "coordin": [10, 25, 33, 52, 53, 57, 59, 60, 62, 66, 68, 84, 87, 94, 97, 99, 103, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 124, 125, 126, 127, 130, 132, 140, 142, 161, 162, 165, 173, 174, 175, 176, 177, 179, 182, 185, 193, 194, 206, 214, 243, 244, 245, 248, 250, 252, 260], "linecollect": [10, 184], "bokeh": 10, "plotli": 10, "mayavi": 10, "k3d": 10, "matplotlibbackend": [10, 184], "get_point": [10, 184], "uniformli": [10, 14, 42, 67, 68, 94, 99, 184, 232], "adapt": [10, 99, 184, 204, 216, 236, 242], "get_data": [10, 184, 240], "dft": [10, 54, 104], "fourier": [10, 51, 59, 78, 104, 157, 202], "as_explicit": [10, 84, 87, 104, 220], "exp": [10, 11, 16, 18, 25, 31, 33, 41, 50, 51, 53, 55, 56, 58, 59, 69, 70, 73, 76, 78, 82, 84, 87, 91, 103, 140, 143, 159, 165, 183, 188, 189, 194, 195, 198, 200, 205, 208, 210, 214, 215, 216, 217, 218, 219, 236, 252, 264, 268, 270, 275], "discret": [10, 31, 33, 34, 41, 43, 51, 52, 59, 91, 164, 169, 200, 203, 214, 216, 217, 254, 263], "transform": [10, 25, 30, 33, 47, 50, 51, 52, 53, 55, 56, 59, 66, 77, 84, 87, 99, 101, 116, 136, 157, 159, 161, 166, 186, 189, 191, 193, 194, 200, 205, 206, 207, 210, 211, 214, 215, 216, 217, 218, 223, 231, 237, 243, 249, 250, 254, 261, 268], "unevalu": [10, 16, 17, 18, 27, 28, 31, 43, 50, 51, 57, 59, 68, 78, 91, 101, 141, 145, 152, 153, 164, 194, 197, 205, 206, 210, 214, 216, 217, 218, 264, 268, 269, 275], "represent": [10, 18, 21, 25, 32, 33, 34, 42, 45, 51, 52, 59, 63, 71, 73, 75, 76, 78, 80, 81, 82, 83, 84, 90, 91, 98, 99, 104, 105, 106, 113, 124, 128, 129, 133, 153, 158, 159, 161, 162, 164, 166, 173, 178, 179, 181, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 208, 210, 211, 214, 217, 218, 223, 224, 239, 243, 245, 252, 264, 266, 269], "21626": 10, "expos": [10, 32, 218], "mutat": [10, 101, 187, 189, 218], "flat": [10, 65, 82, 230], "todok": [10, 82], "ey": [10, 82, 83, 84, 85, 86, 87, 89, 187, 193, 211, 219, 224, 239, 270], "converg": [10, 33, 50, 55, 59, 77, 78, 91, 133, 194, 201, 205, 208, 264], "legacy_matrix": [10, 78], "discontinu": [10, 31, 55, 57, 59, 78, 94, 201], "theano_cod": 10, "aesara_cod": [10, 198], "theanoprint": 10, "aesaraprint": [10, 198], "predic": [10, 26, 27, 31, 93, 194, 210, 236, 254], "experienc": [10, 34], "big": [10, 11, 14, 16, 35, 51, 53, 91, 131, 144, 183, 197, 198, 205, 239, 264, 266], "registr": 10, "add_handl": 10, "remove_handl": [10, 26], "multipledispatch": [10, 26], "regist": [10, 26, 27, 28, 52, 160], "register_mani": [10, 27, 28], "askprimehandl": 10, "staticmethod": [10, 229], "register_handl": [10, 26], "prime": [10, 16, 26, 27, 28, 42, 49, 50, 51, 52, 54, 56, 59, 91, 135, 185, 186, 188, 189, 190, 191, 194, 208, 210, 211, 218, 233], "Not": [10, 17, 18, 51, 56, 81, 101, 198, 217, 218, 236, 268, 275], "primepred": [10, 29], "q": [10, 11, 13, 16, 24, 25, 26, 27, 28, 29, 30, 33, 43, 47, 50, 51, 52, 59, 68, 73, 74, 76, 78, 80, 82, 87, 91, 93, 94, 101, 102, 108, 109, 110, 113, 114, 116, 118, 123, 126, 127, 128, 131, 132, 133, 144, 158, 164, 167, 174, 175, 176, 177, 178, 179, 181, 184, 185, 186, 188, 189, 191, 193, 194, 195, 197, 198, 200, 208, 211, 214, 216, 218, 223, 224, 239, 243, 245, 246, 248, 251, 270, 274], "20209": 10, "stochast": 10, "timestamp": 10, "wienerprocess": [10, 218], "normaldistribut": [10, 218], "20078": 10, "misspel": 10, "absorbing_prob": [10, 218], "absorb": [10, 76, 214, 218, 264], "probabilit": [10, 218], "es": 10, "shutil": 10, "power": [10, 11, 25, 30, 33, 41, 42, 43, 52, 54, 55, 57, 73, 74, 76, 78, 80, 82, 84, 91, 92, 101, 114, 131, 136, 147, 150, 163, 166, 169, 170, 174, 185, 186, 188, 189, 190, 191, 193, 194, 198, 199, 202, 205, 207, 209, 211, 214, 216, 217, 218, 222, 231, 236, 254, 256, 263, 264, 265, 266, 267, 269, 270, 273], "immut": [10, 51, 83, 86, 89, 182, 189, 214, 219, 257, 263, 270], "coordsystem": [10, 53], "explicit": [10, 16, 18, 21, 43, 50, 51, 55, 67, 68, 78, 90, 91, 113, 114, 118, 128, 132, 182, 185, 194, 197, 198, 200, 206, 208, 214, 215, 216, 217, 221, 233], "appropi": 10, "patch": [10, 53, 198], "real": [10, 11, 13, 14, 16, 17, 18, 21, 25, 27, 28, 30, 31, 33, 43, 51, 52, 53, 55, 56, 57, 58, 59, 63, 67, 68, 73, 76, 78, 81, 82, 84, 87, 91, 93, 97, 103, 114, 131, 133, 136, 137, 144, 162, 176, 183, 186, 189, 190, 193, 194, 195, 198, 199, 201, 205, 208, 210, 213, 214, 216, 217, 218, 223, 227, 231, 240, 268, 274, 275], "similarli": [10, 16, 47, 51, 52, 59, 63, 87, 94, 95, 101, 109, 129, 184, 185, 188, 193, 195, 205, 206, 208, 214, 229, 237, 247, 248, 270], "manifold": [10, 53], "track": [10, 11, 42, 51, 55, 59, 113, 125, 129, 148, 182, 205, 224, 264], "coord_system": 10, "connect_to": 10, "coord_tuple_transform_to": [10, 53], "constructor": [10, 18, 27, 28, 32, 33, 38, 42, 43, 44, 51, 58, 59, 80, 85, 87, 118, 157, 158, 162, 166, 184, 185, 187, 188, 189, 190, 198, 206, 214, 223, 231, 246, 265, 269], "str": [10, 18, 27, 32, 33, 34, 43, 51, 52, 53, 55, 60, 61, 64, 67, 68, 79, 81, 84, 91, 93, 99, 108, 109, 111, 131, 148, 158, 164, 174, 176, 177, 184, 189, 193, 198, 210, 214, 218, 234, 236, 237, 239, 243], "unord": [10, 11, 51, 91, 189, 217, 236, 237], "lambidfi": 10, "guess": [10, 32, 52, 55, 76, 79, 178, 191, 194, 208, 211, 269], "construct": [10, 14, 27, 28, 32, 33, 38, 51, 53, 57, 59, 61, 65, 67, 79, 84, 87, 92, 95, 105, 109, 111, 114, 116, 149, 153, 162, 163, 166, 170, 185, 188, 189, 191, 193, 194, 198, 211, 216, 218, 219, 221, 223, 231, 233, 234, 246, 248, 249, 266, 269, 270, 274], "superclass": [10, 16, 50, 51, 78, 84, 189], "scalar": [10, 25, 51, 53, 66, 80, 82, 84, 87, 92, 111, 114, 163, 174, 175, 176, 180, 182, 185, 187, 191, 198, 214, 219, 231, 237, 243, 244, 245, 246, 247, 248, 250, 252], "boolean": [10, 18, 19, 26, 27, 28, 29, 30, 31, 33, 51, 57, 61, 65, 66, 67, 68, 79, 82, 87, 88, 91, 94, 99, 101, 149, 174, 176, 178, 184, 187, 189, 191, 193, 195, 198, 210, 214, 216, 218, 236, 245, 256, 270], "sens": [10, 14, 16, 18, 25, 29, 31, 32, 51, 53, 56, 59, 76, 81, 109, 116, 169, 174, 182, 185, 191, 193, 207, 208, 210, 217, 218, 230, 231, 236, 251, 274], "exponenti": [10, 11, 16, 25, 33, 42, 47, 51, 52, 56, 58, 78, 81, 82, 87, 91, 93, 150, 166, 195, 210, 217, 218, 265, 266, 270], "trick": [10, 11, 47, 208, 224], "treat": [10, 16, 17, 18, 41, 42, 49, 51, 56, 59, 66, 67, 87, 93, 111, 114, 137, 174, 179, 186, 188, 189, 191, 193, 194, 195, 197, 198, 205, 206, 208, 210, 211, 214, 222, 230, 233, 249, 266, 270], "cdot": [10, 16, 34, 50, 56, 59, 69, 73, 74, 76, 82, 84, 87, 91, 102, 104, 129, 169, 179, 181, 182, 183, 185, 186, 194, 201, 205, 208, 214, 216, 219, 220, 248, 249, 268, 269, 274], "attributeerror": [10, 16, 51, 87, 217, 237, 270], "as_coeff_mul": [10, 51, 76, 84], "tri": [10, 11, 16, 21, 32, 51, 59, 67, 76, 78, 116, 128, 159, 185, 186, 193, 198, 200, 210, 214, 215, 217, 229, 266, 274], "benchmark": [10, 116, 130], "runtest": [10, 229], "tmpfile": 10, "random_complex_numb": 10, "verify_numer": 10, "test_derivative_numer": 10, "_randrang": [10, 52], "_randint": [10, 191], "as_poli": [10, 51, 186, 194], "as_expr": [10, 51, 87, 188, 193, 194, 195, 270], "combintor": 10, "perm_cycl": [10, 43, 198], "printer": [10, 18, 43, 51, 59, 79, 87, 92, 178, 223, 230, 231, 237, 255, 261, 265, 269], "init_print": [10, 23, 33, 43, 55, 78, 79, 87, 95, 178, 185, 186, 197, 264, 268, 270, 273, 274, 275], "problemat": [10, 18, 188], "affect": [10, 16, 18, 50, 51, 87, 173, 194, 217, 247], "18056": 10, "15416": 10, "100x": 10, "slowdown": [10, 55], "significantli": [10, 33, 55, 105, 126, 189, 200, 230, 233], "slower": [10, 18, 47, 87, 188, 193, 237, 263], "_sympifi": [10, 51, 84, 269], "strict": [10, 42, 43, 51, 55, 56, 82, 87, 191, 194, 216, 236, 239, 274], "lot": [10, 42, 51, 69, 76, 78, 87, 114, 131, 184, 197, 201, 211, 217, 229, 274], "secur": 10, "__repr__": [10, 198], "12524": 10, "repr": [10, 33, 78, 158, 188, 193, 198, 229, 273], "plenti": 10, "_sympy_": [10, 51], "disabl": [10, 51, 52, 76, 78, 91, 191, 194, 198, 206, 214, 216, 227, 229, 232, 236], "constant": [10, 31, 33, 50, 51, 55, 57, 59, 75, 76, 78, 94, 95, 101, 113, 114, 116, 131, 132, 141, 145, 151, 167, 168, 170, 171, 172, 175, 177, 179, 184, 186, 189, 191, 193, 194, 195, 198, 200, 205, 208, 210, 211, 214, 215, 216, 217, 218, 229, 231, 236, 237, 245, 249, 252, 264, 270, 275], "lh": [10, 33, 41, 51, 196, 198, 214, 216, 217, 248], "tensexpr": [10, 102, 224], "substitute_indic": 10, "danger": [10, 186], "tensor_head": [10, 102, 224], "had": [10, 18, 21, 43, 51, 52, 87, 91, 114, 128, 193, 194, 195, 198, 206, 208, 214, 216, 217, 232, 237, 263, 266, 269, 270], "shorter": [10, 51, 61, 105, 126, 173, 185, 189, 198, 231, 239], "creation": [10, 11, 18, 51, 53, 87, 106, 111, 121, 124, 125, 126, 127, 128, 138, 148, 152, 153, 154, 164, 181, 182, 198, 218, 223, 231, 237], "_dummy_fmt": 10, "l_": [10, 78, 87], "obsolet": 10, "dummy_nam": [10, 224], "clearer": [10, 246], "metric_symmetri": [10, 224], "set_metr": [10, 224], "delta": [10, 11, 33, 35, 45, 56, 59, 74, 76, 80, 99, 128, 136, 164, 198, 205, 211, 214, 218, 219, 224], "epsilon": [10, 11, 50, 52, 59, 76, 78, 135, 198, 224], "latter": [10, 13, 18, 33, 42, 51, 56, 59, 76, 91, 185, 189, 193, 198, 208, 211, 224, 231, 236, 237, 266], "involv": [10, 11, 14, 16, 21, 28, 30, 42, 50, 51, 52, 56, 63, 64, 76, 78, 91, 101, 106, 109, 114, 143, 153, 159, 161, 171, 181, 182, 185, 186, 189, 191, 193, 194, 195, 199, 200, 205, 206, 207, 208, 210, 211, 214, 216, 219, 237, 274], "obscur": [10, 16], "young": [10, 94, 224], "tableau": 10, "favor": 10, "tensorindex": [10, 224], "tensor_indic": [10, 102, 224], "denot": [10, 11, 14, 42, 43, 51, 53, 59, 73, 74, 76, 78, 80, 81, 82, 87, 91, 93, 101, 169, 174, 179, 184, 185, 186, 191, 193, 201, 205, 206, 208, 214, 218, 223, 224, 243, 244, 246, 247, 249, 251], "set_dimens": 10, "unit_system": [10, 171], "set_quantity_dimens": [10, 167], "set_global_dimens": 10, "set_scale_factor": 10, "set_quantity_scale_factor": [10, 167], "set_global_relative_scale_factor": [10, 171], "get_dimensional_expr": 10, "unitsystem": [10, 172], "dimension": [10, 31, 33, 35, 53, 63, 64, 65, 66, 67, 84, 87, 95, 102, 131, 138, 140, 150, 166, 168, 179, 180, 184, 185, 191, 193, 194, 197, 198, 216, 217, 219, 220, 224, 230, 251, 275], "_collect_factor_and_dimens": 10, "motiv": [10, 12, 18, 22], "emptyset": [10, 16, 21, 31, 32, 81, 198, 217, 243, 275], "is_empti": [10, 16, 43], "unknown": [10, 13, 16, 17, 18, 25, 51, 52, 95, 149, 196, 213, 214, 215, 216, 217, 236, 275], "empti": [10, 16, 21, 27, 31, 32, 33, 34, 42, 46, 50, 51, 63, 66, 67, 68, 81, 82, 87, 91, 109, 128, 159, 172, 189, 193, 194, 198, 204, 205, 206, 208, 214, 216, 217, 229, 231, 236, 239, 269], "individu": [10, 16, 18, 51, 57, 62, 67, 68, 80, 82, 84, 87, 101, 129, 136, 154, 158, 183, 206, 214, 229, 270], "denest": [10, 51, 194, 209, 216, 236], "particl": [10, 106, 108, 109, 114, 118, 119, 124, 126, 128, 131, 132, 140, 143, 150, 151, 162, 164, 167, 169, 181, 224], "rigidbodi": [10, 106, 109, 113, 116, 121, 122, 123, 124, 129, 131], "potential_energi": [10, 108, 109, 123, 124, 129], "energi": [10, 103, 106, 109, 111, 114, 123, 124, 140, 165, 169, 179, 224, 249, 259], "setter": [10, 114, 131], "getter": [10, 51, 114, 131], "set_": 10, "set_condit": 10, "17749": 10, "side": [10, 11, 14, 16, 33, 42, 43, 51, 63, 67, 78, 87, 91, 94, 101, 109, 113, 128, 129, 132, 152, 153, 169, 174, 183, 185, 191, 193, 196, 198, 215, 217, 218, 222, 229, 231, 252, 264], "unpack": [10, 51, 82, 87, 236, 237], "intermedi": [10, 33, 34, 74, 82, 114, 116, 121, 148, 158, 166, 167, 174, 177, 181, 217, 231, 271], "emul": [10, 210, 217, 219, 237], "is_deriv": [10, 51], "as_finite_differ": [10, 31, 51, 264], "17881": 10, "get_matrix": [10, 224], "__getitem__": [10, 51, 82, 223], "__iter__": [10, 43, 51, 210], "_components_data_full_destroi": 10, "__pow__": [10, 82, 189, 195], "flaw": 10, "replace_with_arrai": [10, 224, 225], "cach": [10, 16, 56, 76, 185, 194, 198, 227, 232, 233, 254], "safe": [10, 91, 188, 194, 216, 222, 264], "squar": [10, 11, 16, 21, 25, 28, 33, 42, 51, 52, 57, 67, 68, 76, 78, 82, 83, 87, 90, 91, 94, 101, 103, 126, 127, 150, 166, 174, 183, 187, 189, 190, 191, 193, 194, 195, 198, 206, 209, 211, 214, 217, 218, 268], "jordan": [10, 76, 82, 87, 196, 216, 217], "band": [10, 82, 90], "eigenvalu": [10, 82, 87, 114, 116, 158, 161, 268], "elif": [10, 16, 17, 18], "inspect": [10, 16, 87, 193, 204, 235, 237, 261], "getsourc": [10, 237, 241], "sum": [10, 14, 16, 33, 40, 43, 50, 51, 54, 56, 59, 64, 66, 74, 76, 78, 80, 81, 82, 84, 87, 91, 111, 126, 143, 147, 150, 158, 161, 163, 164, 183, 185, 186, 188, 189, 193, 194, 195, 198, 200, 201, 203, 205, 207, 208, 210, 211, 214, 216, 217, 218, 219, 220, 222, 224, 233, 236, 254, 274], "meter": [10, 94, 95, 135, 138, 167, 169, 170, 171], "si": [10, 18, 59, 75, 76, 137, 166, 167, 169, 170, 171, 198], "cg": [10, 143, 161], "aris": [10, 16, 17, 51, 56, 76, 78, 161, 182, 188, 193], "scale": [10, 60, 61, 62, 66, 67, 68, 79, 94, 144, 165, 167, 169, 171, 172, 178, 182, 184, 201, 218, 249, 251], "kilomet": [10, 170, 171], "1000": [10, 11, 33, 35, 51, 52, 55, 84, 91, 131, 169, 170, 171, 183, 197, 198, 207], "dimensionsystem": [10, 166], "14318": 10, "duplic": [10, 11, 42, 45, 52, 57, 59, 87, 91, 206, 214, 236, 267], "flatten": [10, 32, 51, 188, 220, 225, 236, 237], "neither": [10, 16, 17, 29, 51, 138, 159, 184, 194, 205, 206, 207, 214, 224, 237, 243, 251, 274], "polymorph": 10, "anymor": [10, 184], "temporarili": [10, 51], "point3d": [10, 64, 65, 66, 137], "p1": [10, 34, 42, 43, 47, 50, 61, 63, 64, 65, 66, 67, 101, 106, 108, 118, 131, 133, 177, 184, 188, 189, 191, 195, 207, 218, 219], "p2": [10, 17, 42, 43, 50, 61, 63, 64, 65, 66, 67, 101, 106, 108, 131, 177, 184, 188, 189, 191, 195, 207, 218], "behav": [11, 29, 31, 51, 52, 57, 59, 91, 194, 206, 210, 216, 219, 225, 270], "independ": [11, 18, 29, 31, 33, 42, 50, 51, 53, 59, 68, 76, 78, 80, 87, 101, 109, 110, 114, 116, 118, 126, 128, 162, 169, 179, 184, 186, 188, 193, 194, 200, 201, 208, 210, 211, 214, 215, 216, 217, 218, 224, 229, 230, 249, 268, 269], "mapl": [11, 78, 214, 261, 268], "mathematica": [11, 33, 43, 93, 261, 268, 270], "faq": 11, "introductori": [11, 14, 22, 23, 131, 188, 189, 194], "remaind": [11, 50, 51, 52, 91, 186, 188, 189, 192, 194, 214], "familiar": [11, 18, 78, 114, 129, 148, 195, 264, 266, 272], "java": 11, "minut": [11, 105, 116, 173], "subtract": [11, 33, 43, 51, 55, 66, 91, 101, 108, 166, 186, 187, 188, 189, 191, 193, 194, 269, 274], "proper": [11, 42, 51, 78, 91, 105, 114, 173, 188, 189, 193, 198, 206, 214, 219, 230, 231, 249, 270], "trigsimp": [11, 25, 51, 87, 108, 114, 122, 174, 207, 246], "unequ": [11, 94, 198], "fill": [11, 15, 42, 52, 82, 84, 87, 90, 164, 184, 229, 232, 236, 239, 270], "alter": [11, 34, 42, 51, 174, 188, 198, 200, 217], "afterward": [11, 33, 51, 111, 118], "quantiti": [11, 43, 51, 56, 59, 63, 68, 95, 105, 109, 122, 129, 143, 166, 168, 172, 179, 181, 182, 193, 210, 218, 246, 250, 251, 259], "simultan": [11, 51, 64, 82, 91, 184, 207], "var": [11, 31, 33, 50, 55, 56, 74, 78, 81, 87, 101, 174, 184, 193, 197, 198, 210, 211, 237, 275], "rate": [11, 116, 181, 218, 249, 264], "short_lif": 11, "haven": 11, "160": [11, 94, 192], "bodi": [11, 33, 76, 93, 104, 105, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 124, 125, 126, 131, 132, 167, 173, 174, 177, 181, 182, 243, 244, 250], "ctimesd": 11, "circular": [11, 16, 99, 136, 191], "relationship": [11, 16, 33, 51, 56, 58, 78, 91, 125, 148, 174, 179, 182, 188, 216], "runtimeerror": [11, 31, 206, 217, 236], "compileflag": [11, 229], "glob": [11, 229], "recurs": [11, 13, 16, 18, 31, 51, 56, 76, 78, 81, 82, 91, 116, 184, 191, 194, 195, 198, 199, 202, 203, 205, 210, 216, 217, 222, 227, 229, 233, 234, 236, 265, 274], "exceed": [11, 116], "stdin": [11, 232, 234], "nameerror": [11, 79, 232, 266], "__future__": [11, 14, 266, 273], "divis": [11, 18, 51, 87, 91, 166, 185, 188, 189, 190, 191, 194, 196, 198, 214, 216, 229, 237, 266, 269, 273], "cl": [11, 16, 18, 33, 42, 51, 78, 82, 164, 177, 189, 193, 214, 223, 232, 236, 248, 264, 273, 275], "dir": [11, 51, 94, 200, 205, 236], "u": [11, 21, 25, 31, 32, 42, 50, 51, 52, 54, 65, 68, 73, 76, 78, 84, 87, 91, 108, 109, 110, 113, 114, 116, 118, 121, 126, 128, 129, 131, 132, 137, 148, 153, 177, 179, 181, 184, 186, 187, 191, 193, 198, 208, 210, 211, 214, 215, 216, 217, 218, 223, 249], "__builtins__": 11, "__file__": [11, 240], "__name__": [11, 198, 240], "__package__": 11, "_greek": 11, "_latin": 11, "chi": [11, 59, 76, 136, 198, 208, 218, 224], "eta": [11, 59, 76, 193, 198, 214, 215, 218], "iota": [11, 198], "kappa": [11, 198, 218], "mu": [11, 59, 76, 91, 102, 104, 135, 198, 218, 224], "omega": [11, 33, 34, 42, 76, 91, 106, 111, 113, 129, 132, 138, 140, 165, 174, 177, 178, 181, 183, 198, 205, 218], "omicron": [11, 198], "phi": [11, 42, 51, 52, 56, 59, 76, 80, 87, 91, 103, 131, 138, 147, 149, 183, 185, 193, 198, 214, 243, 252], "psi": [11, 59, 76, 136, 147, 148, 154, 162, 193, 198, 224], "rho": [11, 53, 76, 87, 91, 117, 158, 198, 218, 224, 252], "sigma": [11, 43, 74, 76, 82, 87, 198, 201, 218], "tau": [11, 33, 76, 78, 87, 193, 198, 214], "theta": [11, 51, 53, 57, 59, 76, 79, 87, 93, 103, 113, 132, 136, 174, 182, 183, 189, 193, 198, 201, 206, 217, 218, 243, 244, 247, 249, 252], "upsilon": [11, 198], "xi": [11, 18, 53, 76, 198, 214, 215, 216], "zeta": [11, 50, 51, 55, 56, 58, 189, 193, 198, 205, 218], "lastli": [11, 78, 95, 132, 214], "unit": [11, 18, 25, 28, 32, 51, 52, 56, 64, 65, 66, 78, 87, 91, 94, 99, 101, 103, 104, 114, 129, 131, 140, 165, 166, 167, 171, 173, 174, 179, 182, 184, 186, 189, 191, 193, 194, 196, 198, 206, 208, 211, 217, 219, 243, 244, 246, 251, 252, 259], "sympifi": [11, 16, 17, 33, 55, 61, 81, 129, 137, 162, 164, 174, 175, 188, 189, 254, 263, 269], "hold": [11, 18, 28, 32, 42, 47, 51, 52, 53, 57, 59, 73, 76, 87, 90, 93, 101, 103, 108, 110, 111, 129, 160, 194, 208, 210, 214, 218, 231, 274], "mnemon": [11, 207, 236], "osineq": 11, "lowercas": [11, 214, 229, 264], "overrid": [11, 33, 51, 60, 61, 67, 93, 162, 198, 223, 230, 231, 236, 237], "care": [11, 17, 18, 42, 51, 59, 78, 87, 94, 105, 114, 128, 174, 182, 188, 193, 210, 211, 214, 216, 217, 222, 225, 230, 263, 266, 268], "notic": [11, 18, 42, 43, 49, 51, 87, 152, 173, 188, 208, 224, 225, 236, 237, 266, 268, 269, 274], "reimport": 11, "restor": [11, 188, 210], "__": [11, 59, 78, 198, 218, 223], "press": [11, 32, 34, 35, 43, 52, 78, 82, 183, 192, 211, 216], "autocomplet": 11, "lose": [11, 185], "abil": [11, 16, 31, 87, 124, 193, 197, 214, 217, 268, 274], "past": [11, 57, 91, 197, 198, 273], "f1": [11, 42, 76, 78, 87, 101, 106, 114, 122, 131, 184, 189, 191, 194, 198, 200, 216], "f2": [11, 51, 76, 87, 101, 106, 114, 122, 131, 167, 184, 191, 194, 198, 200, 216], "6": [11, 12, 14, 25, 27, 28, 31, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 73, 74, 76, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 116, 117, 121, 122, 123, 133, 137, 143, 161, 173, 174, 182, 183, 184, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 200, 203, 204, 205, 206, 207, 210, 211, 215, 216, 217, 218, 219, 229, 230, 233, 236, 237, 243, 245, 247, 252, 264, 270, 274, 275], "accuraci": [11, 14, 31, 51, 194, 254, 270], "2000000000000002": 11, "py3k": 11, "20000000000000": 11, "sympyifi": 11, "shorthand": [11, 16, 18, 51, 81, 158, 193, 206, 227], "worri": [11, 51, 269], "reus": [11, 18, 33, 164, 268], "142857142857143": 11, "One": [11, 13, 16, 18, 31, 32, 33, 41, 43, 50, 56, 57, 59, 70, 73, 75, 76, 78, 81, 87, 91, 94, 95, 114, 129, 131, 140, 169, 189, 191, 192, 194, 197, 200, 206, 210, 216, 217, 218, 219, 224, 237, 249, 263, 264, 266, 269, 270, 274], "achiev": [11, 18, 51, 55, 59, 84, 91, 114, 131, 197, 205, 208, 210, 217, 232, 247], "receiv": [11, 51, 52, 91, 106, 159, 193, 223], "fraction": [11, 51, 52, 55, 57, 67, 78, 87, 91, 107, 170, 188, 189, 190, 191, 192, 195, 198, 200, 211, 214, 216, 265], "interpret": [11, 17, 33, 42, 50, 51, 56, 59, 64, 67, 78, 82, 84, 87, 91, 93, 105, 169, 184, 186, 193, 194, 198, 205, 211, 216, 217, 218, 223, 229, 230, 233, 239, 270], "100": [11, 18, 33, 35, 40, 50, 51, 52, 55, 59, 67, 74, 81, 82, 87, 91, 94, 184, 188, 193, 195, 197, 198, 205, 216, 217, 236, 263], "000000000000": 11, "00": [11, 51, 91, 148, 158, 211, 236], "null": [11, 51, 87], "34": [11, 33, 43, 56, 64, 87, 91, 146, 192, 197, 204, 210, 211], "3400000000000": 11, "250": [11, 91, 211], "143": [11, 143, 183], "next": [11, 14, 16, 18, 24, 33, 34, 35, 40, 42, 43, 45, 46, 51, 52, 57, 76, 78, 81, 87, 91, 105, 106, 109, 117, 118, 119, 121, 123, 124, 125, 132, 181, 182, 185, 189, 193, 194, 198, 206, 208, 211, 214, 233, 234, 236, 267, 268, 269], "appar": [11, 51, 239, 274], "binari": [11, 17, 18, 29, 33, 35, 46, 51, 52, 78, 81, 91, 92, 158, 170, 185, 188, 194, 211, 230, 233, 236], "decim": [11, 18, 33, 51, 54, 55, 91, 93, 99, 188, 194, 268], "far": [11, 32, 51, 65, 78, 185, 188, 198, 208, 237, 263, 264, 266], "142857": 11, "25000000000000000000": 11, "14285278320312500000": 11, "realiz": [11, 36, 42, 53, 81, 91, 118, 185, 186, 191, 218], "pad": [11, 33, 52, 53, 54, 66, 91], "inexact": [11, 51, 189], "low": [11, 16, 17, 33, 51, 52, 59, 91, 188, 191, 196, 198, 210, 230, 231, 236], "higher": [11, 14, 31, 33, 51, 53, 55, 59, 62, 87, 177, 183, 185, 188, 191, 194, 200, 201, 205, 207, 210, 214, 216, 219, 237, 264], "engin": [11, 97, 130, 131, 180, 214, 273], "increas": [11, 31, 32, 43, 49, 50, 51, 54, 55, 59, 82, 91, 92, 105, 115, 148, 173, 174, 176, 181, 182, 188, 191, 193, 194, 200, 203, 207, 214, 218, 234, 236], "2000061035": 11, "maintain": [11, 51, 52, 91, 95, 198, 206, 207, 214, 217, 233], "highest": [11, 33, 45, 80, 105, 185, 194, 201, 211, 214], "hopefulli": [11, 15, 76], "unsimplifi": [11, 207], "12345678901234567890": 11, "big_trig_ident": 11, "ab": [11, 30, 33, 34, 50, 51, 52, 55, 56, 58, 59, 63, 74, 76, 81, 82, 87, 97, 103, 131, 164, 186, 189, 193, 194, 198, 211, 213, 216, 217, 218, 224, 233, 236, 239, 248, 274], "gave": [11, 51, 236], "gain": [11, 52, 101, 126, 127, 131], "impress": 11, "91": [11, 34, 192, 197, 204, 218], "compar": [11, 16, 31, 33, 43, 48, 51, 57, 68, 81, 87, 91, 92, 116, 143, 167, 171, 188, 191, 194, 195, 198, 203, 205, 210, 214, 217, 219, 223, 229, 236, 266, 269, 274], "4e": [11, 216], "nearli": [11, 91, 207], "snippet": [11, 33], "expr_modifi": 11, "__main__": [11, 33, 270], "declar": [11, 16, 21, 33, 64, 76, 87, 93, 102, 114, 116, 131, 143, 187, 198, 205, 208, 213, 214, 215, 218, 231], "asid": [11, 81, 214, 215, 268], "2x": [11, 51, 59, 76, 93, 210, 211, 217, 218, 263, 266, 274], "syntaxerror": [11, 93], "pprint": [11, 18, 21, 31, 32, 53, 59, 78, 87, 91, 101, 136, 183, 198, 199, 206, 210, 214, 215, 217, 218, 236, 273], "asin": [11, 58, 59, 65, 195, 198, 208, 210, 214, 218, 274], "arcsin": [11, 57, 195, 198, 218], "arcco": [11, 57, 198], "root": [11, 16, 18, 20, 21, 31, 33, 50, 51, 52, 58, 59, 73, 74, 75, 76, 78, 80, 83, 87, 91, 131, 169, 183, 185, 186, 189, 190, 193, 195, 197, 198, 208, 209, 214, 216, 217, 218, 229, 233, 236, 268, 270, 273, 275], "expon": [11, 30, 33, 38, 51, 52, 57, 58, 59, 76, 78, 84, 91, 99, 101, 170, 186, 187, 188, 190, 194, 195, 198, 207, 210, 214, 217, 222, 233, 274], "half": [11, 18, 33, 52, 56, 57, 59, 61, 67, 78, 80, 87, 91, 93, 94, 133, 136, 161, 183, 189, 191, 193, 194, 206, 207, 208, 210, 218, 229, 236], "denomin": [11, 51, 55, 59, 78, 91, 101, 107, 186, 188, 189, 191, 193, 194, 197, 198, 207, 208, 210, 211, 214, 216, 274], "wild": [11, 210, 236], "interest": [11, 18, 47, 51, 53, 56, 57, 67, 76, 78, 87, 91, 115, 116, 164, 169, 182, 185, 189, 193, 194, 195, 197, 205, 208, 210, 211, 216, 217, 230, 231, 247, 264, 267, 269, 270, 271, 274], "sq": [11, 211], "lambda": [11, 18, 27, 28, 31, 33, 42, 43, 52, 53, 57, 78, 82, 83, 84, 87, 90, 91, 93, 114, 127, 128, 131, 132, 149, 184, 191, 193, 194, 198, 199, 206, 207, 210, 214, 216, 217, 218, 219, 227, 236, 237, 243, 244, 247, 263, 270], "is_pow": [11, 33, 51, 57], "is_rat": [11, 16, 193, 236], "bracket": [11, 18, 43, 51, 59, 162, 164, 174, 198], "mutabl": [11, 34, 51, 83, 84, 85, 94, 189, 198, 199, 210, 219, 270], "notat": [11, 14, 21, 39, 43, 44, 50, 51, 52, 56, 59, 76, 84, 87, 93, 101, 162, 173, 174, 178, 182, 185, 198, 205, 209, 210, 217, 223, 224, 236, 249, 264], "curli": [11, 114, 198], "integr": [11, 13, 20, 23, 25, 31, 43, 50, 51, 53, 56, 57, 58, 69, 70, 71, 74, 80, 82, 87, 90, 91, 101, 103, 109, 114, 124, 131, 150, 159, 162, 165, 168, 173, 175, 179, 183, 185, 188, 189, 190, 191, 194, 195, 198, 200, 201, 208, 214, 215, 218, 231, 239, 243, 245, 246, 249, 250, 254, 265, 268, 273], "suppli": [11, 31, 32, 33, 42, 43, 51, 53, 61, 65, 87, 91, 106, 109, 111, 116, 118, 121, 126, 127, 137, 164, 173, 177, 182, 184, 193, 195, 200, 207, 214, 230, 236, 237, 243, 244, 247], "powsimp": [11, 51, 57, 207], "deep": [11, 18, 51, 57, 81, 82, 194, 205, 210, 218, 269], "measur": [11, 25, 57, 59, 67, 83, 105, 144, 153, 158, 166, 169, 171, 173, 174, 177, 179, 182, 194, 206, 207, 210, 218, 242, 243, 245, 246, 248, 249, 251], "count_op": [11, 207, 210], "strictli": [11, 13, 15, 16, 29, 31, 51, 59, 87, 91, 101, 191, 210, 216], "radic": [11, 51, 52, 87, 185, 193, 194, 210, 216, 217], "join": [11, 43, 51, 52, 64, 82, 94, 95, 198, 210, 214, 219, 236, 240], "autoexpand": [11, 210], "violat": [11, 114, 183, 195, 210], "naiv": [11, 13, 42, 48, 51, 76, 82, 87, 169, 208, 216, 217, 224], "strategi": [11, 34, 51, 78, 191, 192, 205, 208, 210, 215], "radsimp": [11, 51, 209], "togeth": [11, 14, 33, 42, 51, 55, 80, 87, 91, 124, 150, 161, 169, 182, 185, 189, 191, 193, 194, 197, 198, 210, 214, 216, 218, 229, 230, 236, 268, 274], "logcombin": [11, 209, 214, 217], "robust": [11, 48, 51, 55, 190, 210, 214], "cancel": [11, 14, 18, 33, 51, 55, 59, 67, 76, 78, 87, 91, 101, 102, 188, 189, 191, 194, 197, 210, 216, 268], "topic": [12, 19, 22, 33, 124, 129, 180, 181, 182, 183, 185, 187, 188, 193, 217, 266, 271], "behind": [12, 22, 102, 114, 128, 168, 187, 207, 210, 214, 217, 259, 266], "decis": [12, 22, 51, 57, 78, 207, 216, 231], "opinion": [12, 22], "gotcha": [12, 51, 124, 182, 237, 267, 275], "pitfal": [12, 18, 182, 188, 266, 271, 274], "finit": [12, 15, 16, 21, 28, 33, 37, 38, 39, 42, 50, 51, 52, 54, 55, 78, 80, 81, 150, 174, 183, 186, 189, 190, 192, 194, 195, 198, 200, 201, 204, 206, 211, 213, 214, 217, 236, 243, 244, 254, 265, 268, 274], "classif": [12, 15, 51, 214, 215], "classifi": [13, 87, 188, 214, 215, 217, 218], "isinst": [13, 16, 18, 33, 51, 82, 84, 101, 188, 189, 198, 199, 210, 219, 222, 231, 269], "distinguish": [13, 16, 17, 32, 42, 55, 80, 114, 163, 169, 185], "matrix": [13, 14, 16, 20, 25, 28, 33, 40, 43, 51, 52, 53, 59, 66, 76, 78, 80, 82, 85, 86, 89, 90, 92, 93, 101, 102, 104, 106, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 131, 132, 133, 136, 137, 139, 147, 148, 153, 158, 159, 161, 163, 164, 166, 169, 173, 174, 182, 183, 185, 187, 191, 193, 196, 198, 199, 206, 208, 210, 211, 216, 217, 219, 220, 222, 223, 224, 225, 230, 231, 236, 237, 239, 243, 244, 245, 247, 251, 257, 265, 268, 269, 274, 275], "former": [13, 33, 51, 56, 114, 191, 193, 194, 211, 236], "retriev": [13, 49, 82, 194, 210, 224], "numberkind": [13, 82, 206], "matrixkind": [13, 51, 86, 206], "guarante": [13, 16, 33, 42, 43, 51, 63, 76, 78, 87, 188, 191, 193, 194, 214, 216, 217, 234, 239, 270, 274], "catch": [13, 51, 214, 229, 270], "theori": [13, 18, 28, 34, 40, 41, 42, 43, 49, 51, 52, 56, 59, 80, 88, 91, 109, 114, 128, 130, 143, 161, 164, 174, 177, 187, 191, 192, 193, 197, 211, 233, 243, 260, 268], "is_subset": [13, 206], "valueerror": [13, 16, 26, 28, 31, 33, 34, 43, 51, 52, 60, 61, 64, 66, 67, 78, 82, 84, 87, 90, 91, 94, 99, 101, 138, 177, 179, 183, 185, 187, 191, 193, 206, 214, 216, 217, 236, 239, 249], "odd": [13, 16, 26, 28, 30, 39, 43, 51, 52, 56, 57, 59, 81, 90, 91, 102, 193, 198, 216], "appliedpred": [13, 26, 27, 28], "quit": [14, 18, 59, 87, 91, 116, 181, 184, 195, 197, 208, 216, 251, 266, 269], "analysi": [14, 33, 34, 42, 51, 52, 57, 98, 116, 128, 129, 132, 168, 185, 194, 208, 211, 218], "vari": [14, 31, 33, 51, 65, 67, 99, 105, 109, 129, 162, 182, 205, 216, 236, 249], "hope": [14, 42, 105, 185], "research": [14, 43, 195, 210], "effici": [14, 16, 31, 33, 35, 42, 47, 51, 54, 55, 56, 67, 68, 84, 87, 91, 92, 101, 109, 131, 183, 186, 187, 188, 189, 191, 194, 195, 196, 197, 210, 211, 216, 230, 237, 263, 269, 270, 274], "establish": [14, 47, 76, 108, 119, 208], "state": [14, 16, 42, 49, 51, 59, 91, 94, 101, 103, 108, 109, 110, 113, 116, 118, 132, 136, 140, 141, 143, 144, 145, 147, 148, 149, 153, 156, 158, 159, 160, 161, 163, 164, 194, 198, 207, 208, 210, 218, 233, 259, 270], "envis": 14, "along": [14, 18, 33, 42, 51, 52, 53, 57, 59, 60, 61, 65, 66, 69, 71, 74, 76, 82, 84, 87, 94, 95, 97, 104, 105, 108, 109, 116, 118, 121, 122, 123, 125, 126, 127, 128, 131, 133, 161, 173, 174, 179, 182, 184, 187, 188, 193, 194, 214, 217, 245, 249, 251], "small": [14, 33, 34, 42, 43, 51, 55, 56, 78, 81, 87, 91, 101, 118, 122, 131, 161, 183, 184, 191, 192, 193, 210, 211, 216, 236, 263, 266, 268], "x_": [14, 33, 41, 51, 52, 56, 93, 189, 191, 194, 200, 211, 214, 219], "taylor": [14, 51, 57, 114, 128, 131, 189, 191, 194, 195, 205, 214], "let": [14, 16, 17, 18, 31, 33, 42, 47, 51, 52, 61, 69, 74, 76, 80, 84, 87, 88, 91, 93, 106, 114, 131, 169, 174, 181, 185, 186, 187, 191, 193, 194, 195, 198, 205, 208, 210, 211, 214, 216, 217, 224, 227, 230, 234, 237, 247, 248, 252, 263, 266, 268, 269, 274], "frac": [14, 16, 18, 31, 50, 51, 52, 53, 56, 58, 59, 76, 78, 87, 91, 93, 101, 118, 129, 167, 178, 179, 181, 182, 183, 187, 191, 194, 198, 200, 201, 205, 208, 211, 214, 215, 217, 218, 219, 236, 249, 251, 264, 268, 269, 273, 274], "df": [14, 53, 214], "c_": [14, 20, 52, 74, 76, 182, 186, 214], "grid": [14, 31, 32, 99, 184], "f_": [14, 51, 56, 59, 78, 126, 127, 128, 191, 197, 198, 208, 214], "constraint": [14, 87, 95, 101, 108, 109, 110, 113, 114, 116, 117, 118, 120, 124, 126, 127, 128, 131, 195], "formul": [14, 108, 117, 118, 124, 126, 127, 164, 182], "assess": 14, "brute": [14, 207, 211], "frequent": [14, 42, 193, 205, 217], "cover": [14, 91, 93, 105, 114, 173, 181, 224, 231, 264, 266], "treatment": [14, 76, 194], "shall": [14, 42, 76, 114, 131, 205, 208, 269], "job": [14, 18, 43, 144, 195, 198], "truncat": [14, 43, 51, 87, 91, 95, 169, 184, 195, 197, 200, 201], "approx": [14, 20, 51, 78], "lowest": [14, 33, 42, 47, 91, 185, 200, 217], "2h": 14, "elimin": [14, 33, 47, 51, 81, 83, 87, 105, 189, 196, 197, 199, 201, 209, 214, 216, 217, 224, 231, 270], "print_funct": 14, "x0": [14, 31, 33, 41, 51, 59, 70, 72, 74, 75, 91, 136, 188, 199, 200, 205, 210, 214, 216, 218, 236, 264], "x_0": [14, 41, 42, 52, 73, 74, 75, 191, 200, 211, 214, 218, 264], "fi": 14, "fip1": 14, "fip2": 14, "c_0": [14, 52, 74], "c_1": [14, 52, 74, 76, 205, 208, 214], "c_2": [14, 76, 205, 214], "2f": [14, 275], "c_i": [14, 76, 205, 208, 214], "nth": [14, 51, 56, 59, 80, 91, 189, 194, 195, 204, 210, 214, 218], "degre": [14, 34, 42, 49, 50, 56, 59, 67, 78, 82, 87, 94, 97, 99, 101, 108, 109, 114, 115, 118, 124, 132, 136, 182, 185, 186, 189, 191, 193, 194, 197, 201, 204, 207, 208, 210, 211, 214, 216, 218, 243], "x_i": [14, 18, 41, 59, 78, 87, 186, 189, 191, 194, 195, 198, 217], "m11": [14, 218], "m12": [14, 218], "m13": 14, "m21": [14, 218], "m22": [14, 218], "m23": 14, "m31": 14, "m32": 14, "m33": [14, 91], "3x3": [14, 66, 87, 247], "invert": [14, 28, 51, 52, 82, 84, 87, 101, 118, 166, 186, 188, 189, 193, 194, 214, 216, 217, 224, 270], "inv": [14, 43, 83, 87, 108, 109, 116, 121, 122, 131, 153, 187, 214], "fim1": 14, "wherea": [14, 16, 29, 33, 52, 61, 67, 76, 81, 101, 169, 185, 188, 194, 198, 216, 217, 236, 274], "eight": [14, 198], "dfdxcheck": 14, "c3": [14, 54, 80, 82, 84, 91, 214, 218, 248, 275], "c5": [14, 214], "120": [14, 50, 51, 56, 57, 73, 91, 94, 95, 195, 197, 198, 200, 214, 264], "c7": [14, 42], "5040": [14, 56, 73, 194, 195], "quickli": [14, 18, 42, 43, 51, 52, 55, 91, 191, 194, 207, 217, 233], "tediou": [14, 78], "attempt": [14, 17, 18, 33, 42, 47, 49, 51, 55, 56, 63, 76, 78, 87, 91, 105, 107, 159, 188, 193, 200, 205, 207, 210, 211, 214, 216, 217, 218, 229, 266, 274], "certainli": [14, 63, 93, 233], "fine": [14, 18, 51, 55, 79, 178, 188, 198, 210], "data": [14, 33, 42, 51, 52, 59, 78, 87, 92, 99, 109, 143, 184, 185, 188, 189, 191, 194, 195, 198, 210, 223, 224, 229, 231, 233, 236, 240], "devis": 14, "xn": [14, 18, 189], "x_n": [14, 18, 34, 41, 52, 73, 87, 186, 189, 191, 194, 211, 217], "fn": [14, 78, 87, 185, 194], "fnm1": 14, "fnm2": 14, "dth": 14, "Of": [14, 16, 50, 76, 87, 214, 217, 236, 274], "cours": [14, 16, 35, 42, 50, 59, 76, 78, 87, 88, 91, 179, 187, 188, 192, 193, 205, 207, 208, 249, 274], "etc": [14, 16, 17, 28, 31, 33, 47, 51, 52, 56, 57, 69, 80, 81, 86, 91, 114, 135, 144, 148, 161, 164, 168, 176, 179, 181, 182, 184, 185, 186, 188, 191, 193, 198, 199, 206, 207, 208, 210, 214, 217, 218, 222, 230, 231, 236, 247, 251], "discrit": 14, "bengt": [14, 31], "fornberg": [14, 31], "weight": [14, 51, 59, 66, 68, 78, 80, 87, 148, 210, 254, 264], "gap": [15, 42, 91, 114, 195], "matur": [15, 16, 216, 217], "elsewher": [16, 56, 80, 116, 187, 229], "concret": [16, 32, 43, 51, 56, 57, 78, 80, 87, 91, 114, 169, 189, 193, 198, 254], "seem": [16, 18, 75, 76, 114, 169, 185, 210, 214, 274], "obviou": [16, 17, 18, 42, 50, 185, 188, 197, 211, 268], "situat": [16, 55, 76, 182, 214, 216, 218, 234, 266], "surpris": [16, 217], "refus": [16, 274], "roughli": [16, 51, 52, 92, 115, 214, 237], "infinit": [16, 18, 28, 50, 51, 52, 55, 56, 57, 64, 65, 78, 87, 91, 101, 120, 150, 169, 185, 193, 198, 199, 200, 203, 204, 205, 206, 210, 211, 212, 213, 216, 223, 236, 274, 275], "queri": [16, 17, 18, 26, 29, 30, 31, 33, 51, 63, 194, 210, 218, 254], "is_posit": [16, 17, 18, 51, 176, 189], "is_neg": [16, 18, 189], "fuzzi": [16, 18, 19], "interprett": 16, "unknow": 16, "resolv": [16, 17, 21, 51, 207, 210], "undecid": [16, 18, 21, 87, 188, 217, 270], "heurist": [16, 43, 76, 78, 82, 191, 192, 205, 207, 210, 212, 216, 217, 229, 264, 274], "conclud": [16, 59, 74, 116, 179, 205, 216, 251], "particularli": [16, 55, 78, 188, 189, 208, 274, 275], "mix": [16, 24, 50, 57, 82, 87, 93, 173, 188, 189, 194, 198, 217, 220, 222, 224, 237], "ideal": [16, 33, 88, 111, 114, 124, 174, 181, 187, 189, 190, 191, 192, 193, 194, 195, 210, 217, 243], "slow": [16, 18, 47, 51, 55, 78, 92, 105, 116, 136, 173, 182, 188, 189, 198, 199, 200, 201, 210, 214, 216, 217, 229, 230, 274], "indetermin": [16, 17, 51, 87, 191, 203, 216], "never": [16, 18, 51, 57, 78, 166, 194, 195, 198, 206, 216, 218, 227, 246, 266, 267], "contradict": 16, "infer": [16, 27, 28, 43, 51, 78, 188, 197, 203, 208, 214, 230, 256], "prepar": [16, 109, 196], "presum": [16, 76, 188, 208, 231], "singletonregistri": [16, 51], "implicitli": [16, 17, 18, 43, 51, 78, 185, 188, 216], "x1": [16, 18, 41, 51, 56, 131, 136, 188, 189, 199, 200, 210, 214, 216, 218, 236], "x2": [16, 41, 51, 56, 131, 136, 188, 200, 214, 216, 218], "posifi": [16, 209], "_x": [16, 18, 87, 129, 178, 181, 182, 189, 195, 210, 214, 230], "rep": [16, 42, 47, 51, 148, 185, 187, 188, 189, 192, 193, 194, 207, 210, 239], "map": [16, 18, 31, 32, 33, 41, 42, 43, 51, 52, 63, 67, 74, 76, 78, 81, 82, 91, 99, 109, 118, 142, 153, 154, 159, 174, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 205, 210, 214, 215, 216, 217, 218, 222, 223, 230, 233, 236, 237, 239, 243], "feel": [16, 23, 131, 132, 210, 214], "among": [16, 32, 33, 34, 35, 42, 43, 52, 79, 92, 194, 214, 219, 222, 224, 246], "discourag": [16, 51, 210], "behaviour": [16, 76, 81, 106, 191, 195, 201, 204], "symbolc": 16, "implicit": [16, 33, 49, 51, 93, 113, 132, 184, 214, 216, 220, 223, 230, 231, 243, 245, 252, 266], "tailor": 16, "is_integ": [16, 18, 51, 176, 198, 223], "assumptions0": [16, 51], "commut": [16, 25, 28, 32, 42, 43, 47, 51, 53, 74, 78, 87, 141, 148, 151, 152, 153, 163, 164, 169, 176, 182, 186, 189, 190, 191, 192, 194, 198, 205, 206, 208, 214, 224, 269], "extended_neg": [16, 51], "extended_nonneg": [16, 51], "extended_nonposit": [16, 51], "extended_nonzero": [16, 51, 198], "extended_posit": [16, 51], "extended_r": [16, 29, 51, 198, 213, 217], "hermitian": [16, 28, 51, 82, 83, 87, 147, 153, 164, 198], "irrat": [16, 28, 31, 51, 91, 188, 194, 198, 206, 268], "noninteg": [16, 29, 51, 188, 198], "nonneg": [16, 18, 28, 51, 52, 53, 56, 59, 84, 131, 186, 188, 211, 218, 274], "nonposit": [16, 28, 51, 131], "nonzero": [16, 18, 28, 30, 50, 51, 66, 87, 103, 186, 187, 188, 189, 198, 201, 217], "ration": [16, 18, 26, 28, 31, 33, 50, 55, 56, 57, 59, 61, 64, 66, 68, 72, 76, 78, 79, 84, 87, 91, 93, 101, 133, 166, 183, 186, 190, 191, 192, 193, 195, 198, 202, 203, 207, 208, 210, 211, 212, 213, 216, 217, 218, 236, 243, 265, 266, 269, 273], "transcendent": [16, 28, 51, 59, 78, 188, 193, 198, 216, 217, 270, 275], "zoo": [16, 29, 51, 56, 57, 59, 78, 205, 207, 210], "field": [16, 25, 29, 33, 51, 52, 53, 59, 69, 78, 136, 137, 176, 180, 185, 186, 187, 189, 190, 192, 194, 195, 196, 211, 216, 229, 243, 245, 247, 248, 250, 252], "antihermitian": [16, 28, 51], "mathbb": [16, 18, 29, 34, 42, 50, 51, 52, 57, 59, 76, 82, 87, 128, 183, 185, 186, 188, 189, 191, 193, 194, 197, 205, 206, 208, 211, 217, 218, 274], "iy": [16, 57, 76, 206, 217], "cup": [16, 194, 206, 217], "pm": [16, 50, 76, 78, 186, 197, 205, 211, 214], "yi": 16, "ne": [16, 52, 57, 64, 76, 91, 186, 188, 191, 208, 214, 218], "composit": [16, 28, 32, 40, 42, 43, 51, 52, 69, 71, 78, 91, 94, 189, 191, 194, 197, 210, 217, 232], "2k": [16, 51, 76, 91, 211], "pariti": [16, 43], "product": [16, 25, 36, 39, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 59, 61, 64, 66, 67, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 101, 102, 103, 105, 116, 129, 131, 139, 143, 144, 147, 149, 150, 151, 153, 156, 158, 159, 161, 162, 164, 169, 170, 173, 174, 176, 180, 181, 182, 183, 185, 186, 187, 189, 191, 193, 194, 195, 198, 199, 200, 203, 206, 207, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 230, 233, 236, 243, 246, 250], "le": [16, 34, 47, 59, 76, 82, 91, 123, 191, 208, 218], "commutative_properti": [16, 51], "infin": [16, 29, 50, 56, 57, 59, 64, 76, 78, 87, 137, 189, 191, 194, 198, 203, 204, 205, 206, 210, 213, 214, 218], "skew": [16, 74, 91, 218], "hermitian_matrix": 16, "complex_numb": [16, 29, 51], "algebraic_numb": [16, 29, 51], "transcendental_numb": [16, 51], "extended_real_number_lin": 16, "real_numb": [16, 29], "imaginary_numb": [16, 29, 51], "rational_numb": [16, 29], "irrational_numb": [16, 29, 51], "parity_": [16, 51], "prime_numb": [16, 51, 91], "composite_numb": [16, 51], "positive_real_numb": 16, "negative_numb": [16, 51], "is_real": [16, 18, 21, 51, 53, 57, 58, 87, 176, 198, 223], "inconsist": [16, 18, 26, 28, 50, 169, 174, 177, 181, 210, 214, 217], "inconsistentassumpt": 16, "deal": [16, 33, 50, 51, 55, 63, 71, 76, 78, 98, 105, 109, 110, 114, 179, 181, 182, 186, 191, 194, 211, 212, 216, 227, 237, 239, 246, 251, 266, 268, 274], "reserv": [16, 114, 224, 231, 270], "is_zero_matrix": [16, 82, 187], "generalis": [16, 59, 76, 185], "gaussian": [16, 59, 78, 87, 91, 134, 190, 191, 194, 211, 216, 218, 259, 270], "notion": [16, 32, 169, 172, 185, 217, 246, 251], "chain": [16, 18, 33, 42, 47, 51, 59, 68, 92, 181, 193, 218], "superset": [16, 31, 40, 46, 54, 131, 188, 206, 216], "vanilla": 16, "attach": [16, 45, 76, 92, 94, 109, 182, 230, 232, 237], "is_commut": [16, 78, 153, 162, 236], "is_complex": [16, 51], "is_finit": [16, 51], "permit": [16, 43, 53, 57, 81, 91, 184], "formal": [16, 32, 50, 51, 59, 76, 81, 133, 169, 188, 190, 191, 202, 205], "littl": [16, 18, 32, 43, 61, 87, 91, 92, 116, 169, 192, 194, 198, 208, 210, 218, 233, 246], "n1": [16, 33, 42, 51, 52, 114, 131, 133, 137, 173, 211, 218, 243], "n2": [16, 33, 42, 51, 52, 131, 133, 137, 211, 218], "misunderstand": 16, "is_nonneg": [16, 18, 189], "intent": [16, 33, 50, 51, 93, 231], "meaning": [16, 26, 28, 32, 52], "alon": [16, 52, 79, 191, 214, 216, 223, 236, 268, 269], "tempt": [16, 18, 51, 91], "meet": [16, 52, 205], "criteria": [16, 51, 269], "noncommut": [16, 51, 74, 269], "finiteset": [16, 21, 31, 32, 217, 218, 275], "s1": [16, 42, 50, 64, 67, 74, 101, 175, 185, 194, 201, 211, 236, 245], "s2": [16, 42, 43, 50, 64, 67, 101, 175, 185, 194, 201, 205, 211, 236, 245], "bool": [16, 31, 33, 47, 49, 51, 52, 54, 57, 78, 79, 81, 82, 84, 87, 91, 93, 110, 148, 176, 178, 184, 193, 194, 196, 198, 199, 200, 205, 206, 210, 213, 216, 218, 230, 231, 236, 237, 243, 245, 266], "plai": [16, 50, 116, 126, 211, 266, 268, 269], "role": [16, 57, 196], "connect": [16, 45, 52, 53, 66, 67, 87, 92, 94, 97, 106, 108, 116, 119, 125, 185, 186, 187, 196, 214, 218, 236, 243], "is_finite_set": 16, "zero_matrix": 16, "setsymbol": 16, "is_numb": [16, 51, 59, 78], "is_compar": [16, 51], "capitalis": 16, "4142135623731": [16, 198, 216], "predict": [16, 164, 210, 236], "inequ": [16, 17, 18, 20, 21, 51, 184, 191, 206, 208, 212], "expreal": 16, "restrict": [16, 18, 33, 40, 51, 52, 59, 87, 94, 95, 164, 185, 188, 193, 195, 213], "fuzzy_and": [16, 17, 18], "fuzzy_or": [16, 17], "is_extended_nonneg": 16, "classmethod": [16, 18, 25, 27, 28, 33, 35, 40, 42, 43, 45, 46, 51, 57, 58, 59, 66, 82, 87, 101, 150, 161, 162, 164, 187, 189, 193, 194, 198, 206, 224, 229], "is_extended_r": 16, "is_infinit": 16, "is_extended_neg": 16, "is_extended_posit": [16, 17], "_eval_is_finit": 16, "is_extended_nonposit": 16, "_eval_is_algebra": 16, "is_nonzero": [16, 66], "_eval_is_integ": 16, "_eval_is_zero": [16, 18], "__new__": [16, 18, 33, 42, 51, 269], "verifi": [16, 23, 31, 42, 48, 52, 53, 114, 185, 191, 197, 214, 216, 217, 219, 220, 250, 274], "importantli": [16, 18, 195, 233], "reject": [16, 17, 91, 211, 239], "_eval_is_": 16, "is_algebra": [16, 51, 189], "interfer": [16, 198], "determinist": [16, 42, 78, 91, 191, 192], "reach": [16, 91, 101, 193, 194, 214], "leav": [16, 18, 33, 51, 78, 87, 91, 110, 124, 148, 164, 205, 233, 263, 269, 274], "claus": [16, 81], "flow": [16, 193], "condit": [16, 17, 33, 42, 51, 53, 57, 59, 69, 70, 73, 74, 75, 77, 78, 81, 87, 91, 93, 94, 95, 101, 107, 110, 116, 124, 128, 131, 133, 177, 183, 195, 198, 201, 208, 211, 213, 214, 216, 217, 218, 223, 256, 274], "inner": [16, 50, 76, 87, 147, 150, 151, 156, 158, 159, 162, 164, 174, 177, 187, 193, 200, 243], "optimis": [16, 214], "stage": [16, 32, 50, 91, 205, 274], "briefli": [16, 186, 191], "managedproperti": [16, 51], "metaclass": [16, 51], "default_assumpt": 16, "_ask": 16, "_eval_i": 16, "enumer": [16, 22, 35, 38, 40, 43, 46, 54, 58, 76, 81, 91, 193, 194, 208, 233, 236], "randomis": [16, 226, 261], "unresolv": 16, "factrul": 16, "_assume_rul": 16, "preprocess": [16, 78, 196], "defined_fact": 16, "full_impl": 16, "defaultdict": [16, 51, 236], "precomput": [16, 56, 91, 237], "static": [16, 25, 33, 42, 43, 45, 51, 57, 64, 65, 66, 67, 84, 95, 116, 124, 184, 198, 204, 206, 218, 230], "knowabl": 16, "stdfactkb": 16, "_eval_is_r": [16, 18, 194], "_assumpt": [16, 51], "amongst": [16, 216], "indirectli": 16, "execut": [16, 23, 33, 79, 82, 131, 184, 198, 214, 217, 227, 229, 231, 232, 237, 239, 242, 253, 268, 273], "manifest": [16, 186], "jointli": 16, "fundament": [16, 18, 31, 34, 41, 69, 76, 78, 87, 169, 188, 193, 211, 214, 218, 270], "theoret": [16, 32, 34, 42, 52, 192, 193, 208, 266], "upon": [16, 33, 51, 91, 113, 116, 126, 127, 128, 131, 158, 164, 179, 181, 182, 206, 214, 223, 230, 249, 274], "isposit": 17, "xpo": 17, "xneg": 17, "strictgreaterthan": 17, "analogu": [17, 29, 50, 65, 188, 189], "piecewis": [17, 18, 33, 50, 58, 59, 78, 94, 162, 198, 200, 201, 216, 217, 218, 237, 264], "nonetyp": [17, 33], "quirk": 17, "both_posit": 17, "falsei": 17, "both_positive_bett": 17, "negat": [17, 18, 29, 51, 57, 81, 101, 174, 187, 189, 191, 194], "fuzzy_not": [17, 18], "both_positive_best": 17, "simpler": [17, 18, 51, 55, 59, 75, 76, 121, 182, 191, 207, 208, 210, 214, 216, 217, 274], "silent": [17, 55, 91, 230], "carefulli": [17, 51, 174, 191, 200], "truth": [17, 26, 27, 28, 29, 30, 51, 82, 210, 256], "bitwis": [17, 54, 81], "footnot": [17, 169, 269, 270, 273], "combinatori": [18, 35, 43, 50, 51, 58, 59, 200, 209, 236, 238, 274], "primepi": [18, 91], "matrixexpr": [18, 82, 84, 85], "dig": [18, 33, 269], "th": [18, 25, 34, 42, 43, 49, 52, 53, 55, 56, 57, 59, 80, 81, 87, 91, 109, 189, 191, 193, 194, 200, 203, 208, 211, 214, 216, 218, 219, 224], "undefin": [18, 21, 27, 28, 31, 51, 57, 58, 59, 78, 84, 93, 106, 182, 193, 204, 205, 208, 237, 264, 275], "handler": [18, 26, 27, 28, 29, 30, 51, 58, 87], "spectrum": 18, "matter": [18, 31, 40, 43, 50, 51, 56, 76, 78, 129, 205, 236, 268, 269], "use_unicod": [18, 31, 32, 33, 55, 59, 78, 79, 87, 95, 101, 136, 178, 183, 185, 186, 197, 198, 199, 217, 218, 264, 268, 270, 273, 274, 275], "neq": [18, 51, 57, 59, 76, 78, 82, 169, 182, 183, 191, 194, 211, 214, 216, 274], "lambdifi": [18, 33, 59, 116, 198, 216, 230, 235, 254, 261, 265], "np": [18, 58, 74, 91, 114, 230, 237], "arang": [18, 230, 263], "ultim": [18, 57, 169], "cosin": [18, 51, 57, 59, 66, 78, 106, 108, 174, 182, 194, 195, 201, 207, 218, 243, 274], "todai": [18, 185], "operatornam": [18, 56, 57, 59, 76, 78, 183, 186, 194, 198, 201, 206, 208, 216], "modern": [18, 33, 185, 192, 198], "recal": [18, 51, 87, 191, 193, 208, 266, 268, 269, 275], "redefin": [18, 43, 51, 126, 128, 186, 237], "antipattern": [18, 267], "stai": [18, 193], "trig": [18, 51, 78, 194, 198, 207, 210, 274], "wouldn": 18, "cheap": [18, 51, 91], "expens": [18, 51, 128, 207, 214, 215, 216, 232, 270], "as_two_term": [18, 51], "split": [18, 33, 51, 52, 55, 76, 78, 93, 191, 193, 196, 197, 198, 218, 224, 229, 236, 241, 269, 274], "hadn": 18, "wors": [18, 81, 210], "expand_trig": [18, 263], "mid": [18, 34, 52, 55, 95, 206, 211], "troubl": [18, 59], "bigger": [18, 33, 51, 56, 208, 214, 274], "deduc": [18, 33, 76, 81, 208, 268], "disallow": [18, 51, 194, 199, 210, 232], "great": [18, 133, 195, 198, 211, 237], "simplest": [18, 32, 81, 87, 91, 92, 183, 184, 195, 199, 207, 210, 214, 264, 274], "is_": [18, 51], "\u03c0": [18, 55, 136, 198, 217, 264, 268, 274, 275], "as_independ": [18, 51, 217], "coeff": [18, 51, 53, 81, 131, 189, 193, 194, 204, 210, 214, 216, 224, 274], "apart": [18, 25, 42, 47, 51, 55, 57, 78, 179, 186, 189, 191, 194, 197, 200, 211, 217, 224, 247, 249, 269], "subexpress": [18, 33, 51, 82, 105, 107, 193, 194, 198, 205, 209, 217, 231, 237, 254, 263], "is_even": [18, 39, 42, 43], "nonreal": [18, 216], "cosh": [18, 51, 58, 59, 70, 76, 195, 198, 199, 208, 210, 216, 270, 274], "5919532755215": 18, "_eval_is_nonneg": 18, "exercis": [18, 42, 233, 267, 274], "_eval_is_posit": 18, "iff": [18, 29, 43, 52, 81, 87, 182, 185, 193, 208, 211, 229], "as_add": [18, 51], "pi_": 18, "fuzzy_": 18, "deduct": [18, 33], "somehow": 18, "subtl": [18, 207], "nontrivi": [18, 42, 51, 91], "_eval_evalf": [18, 194], "prec": [18, 51, 61, 67, 91, 99, 183, 189, 194, 195, 210, 216], "dp": [18, 33, 51, 54, 59, 91, 188, 189, 216, 232], "53": [18, 52, 54, 87, 133, 186, 188, 189], "459697694131860": 18, "hook": [18, 92, 198], "_eval_rewrit": [18, 51], "rewritten": [18, 51, 56, 57, 59, 78, 114, 161, 205, 210, 214, 216, 274], "caller": 18, "ve": [18, 116], "nonintegr": 18, "isint": 18, "xy": [18, 31, 32, 65, 87, 111, 182, 184, 185, 191, 198, 210, 217, 252, 269, 274], "happi": 18, "demand": [18, 24], "_eval_expand_": 18, "expand_": 18, "predefin": [18, 53, 131, 188, 198, 199, 210, 217, 224, 243, 247, 255], "expand_log": [18, 33, 210], "_eval_expand_trig": 18, "sophist": [18, 92, 216], "x_1": [18, 34, 41, 42, 52, 56, 73, 87, 159, 186, 189, 191, 194, 200, 211, 217], "ldot": [18, 34, 41, 42, 50, 51, 52, 56, 59, 76, 91, 95, 169, 185, 186, 189, 191, 193, 198, 201, 205, 208, 211, 216, 219, 274], "x_k": [18, 52, 191], "_eval_deriv": [18, 51, 59], "dy": [18, 33, 53, 68, 87, 94, 104, 131, 194, 198, 211, 214, 215, 264], "dz": [18, 94, 104, 208], "argumentindexerror": 18, "linear": [18, 20, 32, 33, 43, 50, 51, 52, 54, 55, 59, 64, 71, 74, 76, 78, 80, 82, 84, 86, 94, 98, 101, 108, 109, 111, 116, 118, 119, 124, 126, 130, 131, 136, 158, 161, 162, 177, 184, 185, 189, 190, 191, 193, 194, 196, 204, 206, 208, 215, 216, 217, 236, 257, 275], "varion": 18, "middl": [18, 59, 67, 76, 87, 95, 144, 184, 208, 274], "iverson": 18, "printmethod": [18, 198], "latexprint": [18, 261], "_latex": [18, 198], "_print": [18, 198], "_m": [18, 59], "_n": [18, 52, 56, 59, 78, 208, 217], "arcversin": 18, "aversin": 18, "tupl": [18, 25, 27, 28, 31, 32, 33, 34, 42, 43, 50, 52, 53, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 73, 76, 78, 82, 87, 90, 91, 93, 94, 95, 99, 106, 108, 109, 111, 113, 126, 127, 129, 131, 133, 148, 149, 150, 153, 158, 161, 162, 163, 164, 174, 177, 182, 184, 185, 187, 188, 189, 190, 191, 195, 196, 198, 199, 200, 204, 206, 210, 211, 214, 215, 216, 217, 218, 219, 223, 224, 229, 230, 231, 232, 236, 237, 239, 243, 246, 264, 269, 270, 273], "im": [18, 30, 51, 58, 76, 85, 185, 198, 199, 206, 214, 270], "sinh": [18, 31, 51, 55, 58, 59, 70, 76, 195, 198, 199, 208, 274], "expand_complex": 18, "analog": [18, 44, 50, 52, 56, 129, 181, 182, 185, 186, 187, 191, 203, 219, 236], "vers": 18, "geometr": [18, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 87, 133, 182, 185, 192, 218, 260, 270], "angl": [18, 25, 57, 59, 60, 61, 62, 64, 65, 66, 67, 97, 103, 108, 113, 114, 116, 117, 118, 119, 128, 133, 136, 137, 138, 161, 169, 174, 181, 182, 183, 198, 207, 217, 243, 244, 247, 274], "horizont": [18, 32, 61, 64, 66, 82, 97, 136, 184, 187, 198], "distanc": [18, 32, 35, 43, 61, 64, 65, 66, 67, 94, 95, 104, 105, 108, 118, 119, 125, 133, 137, 167, 177, 179, 251], "rightmost": [18, 164], "scientificamerican": 18, "uniti": [18, 57, 59, 76, 159, 193], "secret": [18, 52], "teacher": 18, "taught": [18, 78], "nr": 18, "sake": [18, 56, 211], "simplic": [18, 208, 210, 214, 216], "divisor": [18, 29, 42, 51, 52, 87, 91, 185, 186, 188, 189, 191, 192, 193, 194, 197], "hardwar": [18, 33], "round": [18, 31, 33, 51, 55, 56, 57, 87, 137, 193, 194, 205, 207, 218], "contrast": [18, 50, 51, 118, 188, 208, 214, 268], "regard": [18, 34, 52, 59, 79, 132, 164, 185, 186, 200, 216, 217], "vriabl": 18, "c99codeprint": [18, 33, 198], "cxx11codeprint": [18, 198], "cfunction": [18, 255], "e2": [18, 31, 51, 54, 61, 68, 78, 87, 91, 99, 114, 188, 193, 205, 214, 217, 218, 236], "93accumulate_oper": 18, "fused_multipli": 18, "93add": 18, "ccode": [18, 33, 198, 223, 231], "cxxcode": [18, 33, 198], "_ccode": [18, 198], "_y": [18, 129, 178, 181, 182], "_z": [18, 78, 129, 181, 182, 218], "_cxxcode": [18, 198], "std": [18, 198, 218], "28318530717959": 18, "trigonometricfunct": 18, "inversetrigonometricfunct": 18, "reciprocaltrigonometricfunct": 18, "bypass": [18, 214], "fragil": 18, "tend": [18, 24, 33, 51, 191, 193, 203, 205, 208, 267, 274], "prone": [18, 33, 51], "move": [18, 42, 43, 51, 52, 65, 67, 94, 108, 116, 118, 124, 152, 177, 181, 182, 209, 210, 219, 228, 249], "task": [19, 22, 57, 124, 125, 131, 188, 193, 264, 271], "deeper": [19, 222, 269], "explor": [19, 126, 127, 184, 193, 233, 274], "nonlinear": [20, 50, 131, 194, 216, 217], "diophantin": [20, 91, 191, 212], "739085133215161": [20, 216], "9y": 20, "3x": [20, 51, 93, 191, 217, 266], "cc": [20, 52, 67, 183, 186, 188, 190, 194, 270], "4xy": [20, 179, 251], "8y": 20, "7y": [20, 211], "colloqui": 20, "terminolog": [20, 224], "yield": [21, 31, 33, 42, 51, 52, 59, 75, 76, 91, 94, 101, 107, 158, 186, 191, 193, 194, 199, 200, 205, 206, 207, 210, 211, 216, 233, 236, 270], "extract": [21, 31, 51, 78, 82, 84, 87, 91, 102, 116, 124, 173, 182, 191, 193, 194, 216, 217, 218, 229, 231, 236], "rearrang": [21, 102, 109, 126, 127, 148, 214], "eqn": [21, 31, 217], "solutions_set": 21, "solution_set": 21, "256": [21, 33, 42, 91, 194, 198], "techniqu": [21, 34, 46, 76, 78, 198, 200, 210, 214, 217, 270], "solution_outside_2_3": 21, "solution_2_3": 21, "interv": [21, 29, 31, 42, 51, 55, 57, 59, 60, 61, 64, 67, 76, 78, 81, 91, 150, 159, 189, 191, 193, 194, 201, 204, 213, 217, 218, 260, 275], "calculu": [21, 28, 51, 56, 78, 87, 131, 179, 180, 207, 218, 248, 249, 250, 253, 254, 265, 267, 272], "critic": [21, 31, 137, 181, 193, 217], "minima": [21, 217], "critical_point": 21, "point1": [21, 175, 245], "point2": [21, 175, 245], "curvatur": [21, 133, 137], "iter": [21, 31, 33, 40, 42, 43, 46, 47, 51, 52, 53, 54, 56, 59, 67, 81, 91, 106, 107, 108, 109, 110, 113, 128, 132, 149, 164, 177, 184, 185, 186, 187, 189, 191, 194, 198, 199, 200, 201, 204, 210, 211, 214, 216, 217, 218, 219, 222, 230, 231, 232, 233, 235, 237, 243, 247, 261], "solution_list": 21, "membership": [21, 49, 193, 206], "candid": [21, 51, 87, 91, 191, 210], "solution_set_arg": 21, "exclud": [21, 33, 50, 51, 78, 87, 107, 131, 186, 189, 191, 194, 204, 214, 216, 229, 232, 236], "risk": 21, "central": [22, 42, 48, 59, 61, 67, 106, 111, 129, 184, 193, 211, 218], "pypi": 23, "continuum": [23, 259], "analyt": [23, 56, 59, 76, 87, 124, 214, 259, 264], "qtconsol": [23, 273], "nicer": [23, 51, 122], "setupegg": 23, "enthought": 23, "canopi": 23, "activepython": 23, "spack": 23, "freshli": 23, "starter": 23, "sy": [23, 33, 53, 114, 131, 198, 229, 240, 248, 266], "wherev": [23, 114, 210, 217, 246], "visit": [23, 35, 42, 51, 56, 271], "chat": 23, "gitter": [23, 270], "excel": [23, 55, 193, 272], "ticket": 23, "export": [24, 198], "latin": 24, "slightli": [24, 33, 47, 91, 93, 116, 184, 185, 189, 191, 194, 198, 208, 210], "clunki": 24, "collid": [24, 224], "win": 24, "session": [24, 33, 51, 63, 78, 178, 182, 188, 234, 261, 266, 273], "throwawai": 24, "surviv": 24, "foo": [24, 31, 33, 51, 159, 178, 236, 239], "report": [24, 31, 42, 64, 82, 91, 195, 206, 217, 229, 270, 275], "stick": 24, "clash": [24, 51, 87], "_clash1": [24, 51], "_clash2": [24, 51], "multi": [24, 51, 52, 115, 124, 131, 144, 148, 158, 184, 198, 217], "_clash": [24, 51], "union": [24, 29, 31, 33, 40, 42, 49, 81, 93, 185, 193, 198, 204, 205, 213, 217, 218, 236], "sympif": [24, 51], "real_field": 25, "instanti": [25, 32, 33, 43, 51, 59, 64, 66, 67, 84, 87, 154, 162, 174, 184, 185, 189, 193, 218, 243, 246], "q1": [25, 87, 105, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 132, 173, 174, 176, 177, 178, 181, 182, 188, 243, 244], "q2": [25, 105, 114, 116, 117, 118, 119, 121, 122, 123, 126, 127, 132, 173, 174, 176, 177, 178, 181, 182, 188, 243, 244], "r1": [25, 61, 64, 80, 94, 95, 137, 174, 179, 194, 243], "euclideanspac": 25, "realnormedalgebra": 25, "r2": [25, 53, 64, 80, 82, 94, 95, 137, 174, 194, 198, 210, 243], "q3": [25, 105, 116, 117, 119, 121, 122, 123, 126, 174, 176, 177, 182, 243, 244], "axi": [25, 44, 56, 57, 61, 62, 64, 65, 67, 73, 76, 78, 84, 87, 94, 99, 104, 108, 114, 116, 118, 121, 122, 123, 125, 128, 131, 132, 133, 136, 137, 161, 174, 176, 177, 179, 181, 182, 184, 189, 217, 243, 244, 247, 249, 252], "bi": [25, 51, 57, 59, 78, 182, 205, 214], "cj": 25, "dk": [25, 94, 193], "atan2": [25, 30, 53, 58, 138, 198, 243], "atan": [25, 30, 53, 55, 58, 62, 67, 75, 78, 118, 132, 133, 195, 198, 200], "arc_coplanar": 25, "arc": [25, 57, 274], "orient": [25, 63, 67, 82, 114, 116, 118, 121, 125, 129, 131, 174, 177, 179, 181, 182, 191, 236, 243, 250, 251], "coplanar": [25, 65, 182], "ax": [25, 52, 55, 61, 64, 76, 83, 87, 94, 99, 108, 136, 161, 174, 182, 183, 184, 187, 195, 211, 214, 217, 219, 220, 223, 243, 244, 246, 249, 251, 274], "parallel": [25, 61, 64, 65, 67, 78, 98, 101, 104, 125, 181, 182, 191, 248, 252], "vector_coplanar": 25, "is_pur": 25, "mathbf": [25, 84, 124, 126, 127, 129, 169, 173, 174, 178, 179, 181, 182, 198, 208, 219, 246, 247, 249, 251, 252], "versor": 25, "0i": 25, "0j": [25, 188], "0k": 25, "vector_part": 25, "from_axis_angl": 25, "rotat": [25, 39, 42, 44, 51, 60, 61, 62, 64, 66, 67, 82, 87, 94, 95, 108, 116, 119, 121, 123, 129, 132, 148, 161, 174, 177, 179, 181, 182, 183, 184, 236, 243, 244, 247, 249, 251], "radian": [25, 57, 60, 61, 62, 64, 65, 66, 87, 99, 114, 137, 138, 174], "from_rotation_matrix": 25, "orthogon": [25, 28, 58, 66, 80, 87, 162, 174, 182, 190, 243, 244, 250], "det": [25, 87, 88, 131, 182, 187, 270], "index_vector": 25, "mod": [25, 52, 57, 81, 87, 88, 91, 160, 185, 187, 188, 189, 191, 193, 194, 198, 200, 208, 211, 254], "magnitud": [25, 33, 50, 51, 55, 59, 92, 94, 95, 97, 99, 118, 131, 162, 171, 174, 179, 182, 184, 243, 249, 251], "norm": [25, 87, 162, 174, 189, 191, 193, 194], "indefinit": [25, 57, 75, 76, 78, 87, 189, 191, 192, 194, 203, 264], "scalar_part": 25, "is_zero_quaternion": 25, "mensor": 25, "60": [25, 37, 42, 44, 50, 51, 56, 59, 78, 87, 91, 94, 95, 197, 198, 211, 214, 236], "anti": [25, 29, 47, 57, 78, 82, 136, 141, 224], "pth": 25, "668": 25, "224": [25, 167, 192], "336": 25, "448": 25, "pow_cos_sin": 25, "900": 25, "1800": [25, 52], "2700": [25, 94], "3600": [25, 56], "rotate_point": 25, "pin": [25, 94, 95, 97, 108], "to_axis_angl": 25, "to_rotation_matrix": 25, "assumptionkei": 26, "proposit": [26, 28, 81], "is_tru": [26, 28, 29], "assumptionscontext": [26, 27, 28], "global_assumpt": [26, 27, 28], "discern": [26, 28], "refin": [26, 28, 51, 82, 185, 189, 193, 194, 210, 231], "progress": [26, 28, 91, 231], "inherit": [26, 51, 58, 81, 84, 85, 108, 153, 162, 183, 198, 218, 223, 231, 232], "askhandl": 26, "mere": [27, 28, 33, 55, 159], "thin": [27, 87, 120, 133], "dispatch": [27, 28, 29, 51, 52, 159, 198, 217, 233], "undefinedpred": [27, 28], "sexi": [27, 28], "sexyprimepred": [27, 28], "sexyprim": [27, 28], "int1": [27, 28], "int2": [27, 28], "sort": [27, 28, 32, 33, 40, 43, 47, 76, 78, 81, 87, 90, 91, 102, 105, 109, 148, 164, 169, 173, 184, 191, 194, 195, 205, 210, 211, 214, 215, 216, 222, 224, 229, 231, 236, 246, 254, 266, 268, 269], "assump": [27, 28], "r3": [27, 80, 94, 95, 210], "predicate_": [27, 28], "mathematical_log": [27, 28], "r4": [27, 80, 94], "sexy_prim": [27, 28], "resolut": [27, 28, 211], "askpredicatehandl": [27, 28], "r5": [28, 210], "r6": 28, "tautolog": 28, "symmetr": [28, 30, 34, 39, 42, 43, 47, 67, 82, 83, 84, 87, 91, 173, 183, 189, 191, 194, 197, 206, 208, 224, 236], "unitari": [28, 78, 91, 148, 153], "triangular": [28, 82, 83, 87, 187, 193, 216, 218, 252], "diagon": [28, 56, 82, 83, 84, 87, 90, 113, 136, 187, 220, 221], "rank": [28, 33, 34, 35, 40, 42, 43, 45, 46, 47, 66, 80, 87, 88, 174, 176, 185, 187, 189, 191, 193, 219, 223, 224, 270], "singular": [28, 33, 43, 51, 55, 57, 58, 73, 74, 76, 78, 87, 94, 96, 128, 174, 185, 192, 205, 214, 217, 243, 254, 264], "notabl": [28, 33, 54, 59, 76, 92, 188], "truth_maintenance_system": 28, "istruepred": 29, "gt": [29, 33, 218, 236], "istruehandl": 29, "commutativepred": 29, "commutativehandl": 29, "finitepred": 29, "nor": [29, 31, 51, 81, 91, 138, 184, 194, 205, 207, 214, 224, 243], "nan": [29, 30, 57, 59, 107, 210, 218, 264], "bound": [29, 33, 34, 50, 51, 60, 61, 62, 64, 66, 67, 78, 91, 162, 189, 191, 193, 194, 198, 204, 214, 216, 217, 218, 223, 233, 239, 243], "finitehandl": 29, "r7": 29, "infinitepred": 29, "infinitehandl": 29, "symmetricpred": 29, "transpos": [29, 32, 82, 84, 87, 101, 131, 147, 174, 182, 187, 193, 211, 219, 224, 225, 270], "symmetrichandl": 29, "r8": 29, "symmetric_matrix": 29, "invertiblepred": 29, "fullrank": [29, 33], "invertiblehandl": 29, "r9": 29, "invertible_matrix": 29, "orthogonalpred": 29, "tm": [29, 137], "mm": [29, 32, 91, 109, 116, 121, 122, 162, 187], "orthogonalhandl": 29, "r10": 29, "orthogonal_matrix": 29, "unitarypred": 29, "unitaryhandl": 29, "r11": 29, "unitary_matrix": 29, "positivedefinitepred": 29, "tmz": 29, "column": [29, 32, 33, 34, 79, 81, 82, 84, 87, 88, 90, 101, 109, 113, 116, 129, 159, 166, 174, 178, 183, 187, 193, 198, 214, 217, 223, 243], "positive_definit": 29, "positivedefinitehandl": 29, "r12": 29, "definite_matrix": 29, "uppertriangularpred": 29, "m_": [29, 127, 191], "ij": [29, 164, 169, 218], "zeromatrix": [29, 84], "upper_triangular": [29, 82], "uppertriangularhandl": 29, "r13": 29, "uppertriangularmatrix": 29, "lowertriangularpred": 29, "lower_triangular": [29, 82], "lowertriangularhandl": 29, "r14": 29, "lowertriangularmatrix": 29, "diagonalpred": 29, "diagonalhandl": 29, "r15": 29, "diagonal_matrix": 29, "fullrankpred": 29, "row": [29, 32, 33, 34, 40, 43, 51, 56, 82, 83, 84, 87, 88, 90, 91, 101, 113, 114, 116, 129, 131, 132, 159, 174, 182, 187, 193, 198, 208, 217, 218, 223, 237, 243, 244], "linearli": [29, 33, 59, 75, 87, 191, 214, 216, 224], "fullrankhandl": 29, "squarepred": 29, "squarehandl": 29, "r16": 29, "square_matrix": 29, "integerelementspred": 29, "integer_el": 29, "integerelementshandl": 29, "realelementspred": 29, "real_el": 29, "realelementshandl": 29, "complexelementspred": 29, "complex_el": 29, "complexelementshandl": 29, "singularpred": 29, "singularhandl": 29, "fore": 29, "r17": 29, "singularmatrix": 29, "normalpred": 29, "normalhandl": 29, "r18": 29, "normal_matrix": 29, "triangularpred": 29, "triangularhandl": 29, "r19": 29, "triangular_matrix": 29, "unittriangularpred": 29, "1s": [29, 56, 80, 187], "unit_triangular": 29, "unittriangularhandl": 29, "evenpred": 29, "evenhandl": 29, "oddpred": 29, "oddhandl": 29, "primehandl": 29, "subject": [29, 61, 67, 95, 105, 132, 193], "compositepred": 29, "compositehandl": 29, "positivepred": 29, "positivehandl": 29, "negativepred": 29, "negativehandl": 29, "zeropred": 29, "zerohandl": 29, "nonzeropred": 29, "nonzerohandl": 29, "nonpositivepred": 29, "nonpositivehandl": 29, "nonnegativepred": 29, "nonnegativehandl": 29, "integerpred": 29, "integerhandl": 29, "r20": 29, "rationalpred": 29, "rationalhandl": 29, "r21": 29, "irrationalpred": 29, "ratio": [29, 41, 42, 50, 51, 55, 56, 59, 61, 64, 65, 66, 67, 83, 91, 101, 137, 169, 198, 207, 210, 216], "irrationalhandl": 29, "r22": 29, "realpred": 29, "disjoint": [29, 32, 40, 43, 194, 206, 236], "realhandl": 29, "r23": 29, "extendedrealpred": 29, "extendedrealhandl": 29, "hermitianpred": 29, "hermitianhandl": 29, "r24": 29, "hermitianoper": [29, 153], "complexpred": 29, "complexhandl": 29, "r25": 29, "imaginarypred": 29, "imaginaryhandl": 29, "r26": 29, "antihermitianpred": 29, "antihermitianhandl": 29, "r27": 29, "algebraicpred": 29, "askalgebraicpredicatehandl": 29, "r28": 29, "algebraichandl": 29, "transcendentalpred": 29, "transcedent": 29, "refine_pow": 30, "refine_ab": 30, "refine_arg": 30, "refine_atan2": 30, "refine_im": 30, "refine_matrixel": 30, "refine_r": 30, "refine_sign": 30, "lagrang": [31, 51, 108, 120, 124, 194, 211], "lagrangian": [31, 109, 118, 123, 124, 127, 128], "euler_equ": 31, "r29": 31, "93lagrange_equ": 31, "decreas": [31, 33, 43, 191], "monoton": [31, 33, 68], "is_decreas": 31, "lopen": [31, 51, 206, 213, 218], "ropen": [31, 57, 206, 218], "is_increas": 31, "72": [31, 51, 64, 87, 91, 94, 183, 197], "is_monoton": 31, "is_strictly_decreas": 31, "is_strictly_increas": 31, "monotonicity_help": 31, "held": [31, 52, 128, 222, 274], "univari": [31, 50, 51, 57, 74, 78, 185, 186, 188, 189, 190, 192, 193, 194, 195, 200, 213, 216, 218], "r30": 31, "mathematical_singular": 31, "interpol": [31, 60, 131, 191, 194], "finite_diff_weight": [31, 51, 264], "estim": [31, 50, 51, 55, 76, 264], "apply_finite_diff": [31, 51, 264], "differentiate_finit": [31, 51, 264], "finite_diff": [31, 51], "x_list": [31, 264], "y_list": [31, 264], "cube": [31, 33, 35, 42, 44, 57, 78, 191, 192, 211, 217, 252], "xlist": 31, "55271367880050e": 31, "indexedbas": [31, 33, 50, 51, 198, 216, 222, 223, 230], "idx": [31, 33, 198, 222, 223, 230], "zip": [31, 41, 52, 81, 91, 194, 204, 211, 214, 233, 236], "region": [31, 59, 68, 78, 184, 206, 214, 217, 218, 243, 245, 252], "bewar": [31, 59], "rung": [31, 73], "phenomenon": [31, 169, 191, 201, 269], "90": [31, 42, 49, 59, 82, 87, 93, 94, 97, 105, 114, 132, 198, 200, 210, 218, 231], "finitediff": 31, "wrt": [31, 33, 51, 53, 59, 68, 87, 114, 131, 174, 175, 191, 194, 243, 244, 245, 249], "arbitrarili": [31, 51, 64, 91, 191, 193, 205, 208, 214, 215, 218], "len": [31, 39, 40, 41, 42, 43, 47, 49, 51, 52, 56, 59, 66, 76, 81, 118, 133, 137, 148, 158, 194, 210, 214, 223, 236], "nearest": [31, 193], "furthest": [31, 52], "sublist": [31, 47, 52, 78, 161, 264], "fd": [31, 33, 164], "0th": [31, 43, 52, 59], "1st": [31, 43, 91, 101, 214, 215, 239, 264], "classic": [31, 57, 59, 87, 150, 166, 174, 182, 185, 259], "forward": [31, 33, 82, 101, 116, 124, 157, 181, 210, 229], "pai": 31, "attent": [31, 42, 57], "gridpoint": 31, "plan": [31, 105, 189, 212, 273], "mycoeff": 31, "3rd": [31, 43, 57, 91, 131, 194, 216, 219, 236], "2nd": [31, 43, 52, 91, 101, 131, 214, 219, 236], "cost": [31, 33, 91, 118, 217, 268], "poorer": 31, "grand": 31, "r31": 31, "51": [31, 87, 91], "184": [31, 214], "1988": [31, 143, 161, 191, 192], "699": 31, "706": [31, 87], "1090": [31, 194], "s0025": [31, 91], "5718": [31, 91], "0935077": 31, "continuous_domain": [31, 213], "tan": [31, 51, 56, 58, 78, 93, 107, 121, 122, 123, 128, 195, 197, 198, 205, 207, 214, 217, 274], "function_rang": 31, "OR": [31, 54, 81, 191], "is_convex": [31, 67], "sym": [31, 41, 42, 47, 51, 56, 174, 198, 201, 206, 210, 211, 216, 218, 224, 236, 274], "convex": [31, 67, 68, 78], "unspecifi": [31, 51, 66, 264], "multivari": [31, 51, 59, 185, 186, 188, 189, 190, 192, 194, 195, 205, 210, 216, 217, 218, 274], "concav": [31, 133], "logartihm": 31, "r32": 31, "convex_funct": 31, "r33": 31, "ifp": 31, "illinoi": 31, "edu": [31, 35, 42, 43, 52, 54, 56, 78, 87, 91, 192, 197, 207, 210, 211, 214, 218, 243], "angelia": 31, "l3_convfunc": 31, "r34": 31, "logarithmically_convex_funct": 31, "r35": 31, "logarithmically_concave_funct": 31, "r36": 31, "concave_funct": 31, "lcim": 31, "mixtur": [31, 33, 68, 185, 231], "incommensur": 31, "not_empty_in": [31, 217], "finset_intersect": 31, "finite_set": [31, 206], "tracker": [31, 206, 217, 270], "aperiod": 31, "smallest": [31, 45, 57, 64, 66, 73, 81, 87, 91, 161, 174, 189, 234, 236], "verif": [31, 187, 216], "reliabl": [31, 51, 214, 234, 264], "henc": [31, 33, 41, 42, 51, 53, 57, 59, 63, 76, 79, 81, 91, 179, 184, 185, 186, 191, 198, 208, 211, 215, 217, 229, 233, 247, 248, 249, 269, 274], "stationary_point": 31, "stationari": [31, 218], "tikz": 32, "joyofcat": 32, "adamek": 32, "herrlich": 32, "strecker": 32, "joi": 32, "cat": [32, 173], "book": [32, 42, 52, 57, 109, 114, 117, 125, 129, 130, 149, 192, 197, 198, 267], "katmat": 32, "uni": [32, 78, 236], "bremen": 32, "de": [32, 52, 91, 169, 183, 184, 195, 200, 211, 212, 214, 236], "acc": [32, 131, 177, 181], "pre": [32, 33, 51, 183, 184, 199, 207, 210, 216, 217, 229, 247, 251, 269], "embryon": 32, "morphism": [32, 185], "codomain": [32, 185, 193], "arrow": [32, 80, 94, 184, 198], "namedmorph": 32, "prohibit": [32, 43, 44, 174], "identitymorph": 32, "compositemorph": 32, "compos": [32, 51, 52, 118, 128, 166, 168, 169, 181, 185, 189, 193, 194, 195, 198, 200, 210], "circ": [32, 51, 62, 68, 76, 84], "compon": [32, 33, 47, 51, 53, 66, 78, 84, 87, 102, 111, 124, 129, 136, 161, 166, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 194, 196, 218, 220, 223, 224, 233, 236, 243, 245, 248, 249], "new_nam": 32, "forget": [32, 274], "act": [32, 41, 42, 43, 47, 51, 59, 67, 80, 81, 87, 94, 97, 106, 108, 113, 114, 119, 127, 136, 148, 153, 156, 157, 206, 217, 219, 247, 251, 263], "id_a": 32, "id_b": 32, "commutative_diagram": 32, "quadrupl": [32, 194], "mbox": 32, "hom": 32, "id": [32, 47, 57], "rightarrow": [32, 43, 47, 52, 56, 57, 59, 73, 74, 76, 78, 81, 82, 91, 184, 193, 205, 217, 236, 264], "law": [32, 124, 167, 182, 186], "monoid": 32, "pare1970": 32, "accompani": 32, "premis": 32, "conclus": [32, 51], "carri": [32, 33, 51, 156, 162, 169, 185, 188, 191, 193, 195, 196, 237], "premises_kei": 32, "et": [32, 78, 143, 191, 194, 195, 207, 210], "pareigi": 32, "functor": 32, "1970": [32, 87], "is_subdiagram": 32, "subdiagram": 32, "d1": [32, 47, 174, 185, 205, 218, 243], "subdiagram_from_object": 32, "preserv": [32, 33, 42, 51, 87, 162, 189, 194, 199, 200, 210], "veryuniqu": 32, "diagram_draw": 32, "diagramgrid": 32, "analys": [32, 99, 101, 131, 218], "drawn": [32, 42, 80, 184, 188, 196], "moprhism": 32, "strive": 32, "nevertheless": 32, "laid": [32, 114, 161], "width": [32, 33, 79, 178, 184, 194, 198, 229], "height": [32, 33, 67, 84, 133, 184, 185, 198, 205, 252], "emploi": [32, 50, 55, 78, 91, 194, 197, 212, 214, 218], "lai": 32, "layout": 32, "sequenti": [32, 35, 52, 57, 243, 244], "test_draw": 32, "five": [32, 40, 76, 97, 198, 211], "lemma": [32, 42, 76, 186], "fivelemma": 32, "five_lemma": 32, "arrowstringdescript": 32, "curving_amount": 32, "looping_start": 32, "looping_end": 32, "horizontal_direct": 32, "vertical_direct": 32, "label_posit": 32, "pic": 32, "princip": [32, 52, 57, 59, 76, 78, 88, 103, 116, 137, 185, 186, 187, 188, 189, 191, 193, 194, 195], "offset": [32, 33, 51, 56, 59, 223], "cell": 32, "vertic": [32, 35, 44, 45, 61, 62, 64, 66, 67, 68, 78, 80, 82, 87, 95, 113, 119, 136, 144, 183, 184, 187, 193, 198, 206, 236, 252], "disregard": 32, "unexplain": 32, "astr": 32, "dr": [32, 53, 198, 214], "12mm": 32, "loop": [32, 33, 91, 101, 117, 174, 184, 195, 198, 214, 233, 236, 269], "correspondingli": 32, "label_displac": 32, "arrow_styl": 32, "dash": 32, "xypicdiagramdraw": 32, "formatt": 32, "utilis": 32, "xypic": 32, "drawer": 32, "xymatrix": 32, "ld": 32, "arrow_formatt": 32, "therebi": 32, "default_arrow_formatt": 32, "farther": 32, "centr": [32, 48, 184], "default_formatt": 32, "45": [32, 51, 56, 67, 87, 91, 97, 194, 195, 211], "_3mm": 32, "default_curving_amount": 32, "cm": [32, 131, 218], "_1cm": 32, "default_curving_step": 32, "h1": [32, 111], "1cm": 32, "rr": [32, 51, 69, 187, 188, 190, 194, 195], "h_": [32, 42, 47, 59, 78], "_2cm": 32, "mask": [32, 198], "diagram_format": 32, "proceed": [32, 34, 76, 78, 130, 192, 208], "xypic_draw_diagram": 32, "shortcut": [32, 51, 83, 182, 198, 206, 210, 274], "insert": [32, 34, 82, 93, 94, 159, 164, 198, 218, 239], "preview_diagram": 32, "png": [32, 79, 87, 94, 95, 99, 178, 184, 198, 201], "varieti": [33, 34, 43, 51, 92, 95, 129, 185, 192, 194, 218, 236], "brief": [33, 217, 229, 251], "fab": [33, 198], "cse_main": [33, 199, 210], "cse": [33, 92, 105, 153, 199, 231, 237], "meat": 33, "lightweight": [33, 193, 268], "pycod": [33, 198], "lambdarepr": [33, 198, 237], "aesara_funct": [33, 92, 198], "float80": [33, 198], "assign_to": [33, 198], "type_alias": [33, 198], "0l": [33, 198], "powl": [33, 198], "c99": [33, 198, 231], "expm1": [33, 198], "ternari": [33, 51, 198, 211], "lack": [33, 53, 55, 111, 198, 264], "thrown": [33, 198], "fcode": [33, 198], "contract": [33, 53, 102, 164, 198, 207, 220, 221, 222, 223, 224, 225], "len_i": [33, 198], "mat_1": 33, "mat_2": 33, "jscode": [33, 198], "rh": [33, 41, 43, 51, 82, 83, 87, 108, 109, 114, 121, 122, 123, 187, 196, 198, 200, 214, 216, 217, 248], "user_funct": [33, 198], "argument_test": [33, 198], "cfunction_str": [33, 198], "octav": [33, 131, 231, 261], "custom_funct": [33, 198], "existing_octave_fcn": [33, 198], "is_matrix": [33, 198], "my_mat_fcn": [33, 198], "my_fcn": [33, 198], "mat": [33, 84, 133, 158, 198], "octave_cod": [33, 198], "summat": [33, 50, 51, 55, 56, 59, 164, 192, 198, 201, 210, 218, 219, 222, 223, 224, 230], "mathematica_cod": [33, 198], "g1": [33, 36, 41, 42, 76, 87, 101], "g2": [33, 36, 41, 42, 76, 80, 87, 101], "gamma_1": [33, 104], "gamma_2": [33, 104], "\u03b3\u2081": 33, "\u03b3\u2082": 33, "\u03b2": [33, 183], "h_i": [33, 47], "c89": [33, 198, 231], "julia_cod": [33, 198], "rust_cod": [33, 198], "powi": [33, 198], "make_routin": [33, 231], "f95": [33, 230, 231], "matlab": [33, 105, 131, 231, 261, 270], "breadth": [33, 51, 218], "c_name": [33, 231], "c_code": [33, 231], "h_name": [33, 231], "c_header": [33, 231], "volume_result": 33, "ifndef": [33, 231], "project__test__h": [33, 231], "endif": [33, 231], "preprocessor": [33, 199, 210, 231], "global_var": [33, 231], "insensit": [33, 87, 131, 198, 229, 231], "argument_sequ": [33, 231], "routin": [33, 40, 50, 51, 52, 53, 76, 81, 82, 87, 91, 136, 164, 187, 191, 194, 197, 198, 199, 210, 211, 214, 215, 216, 217, 230, 235, 236, 249], "name_expr": [33, 231], "to_fil": [33, 231], "f_name": [33, 231], "f_code": [33, 231], "choic": [33, 43, 59, 76, 78, 92, 128, 160, 169, 173, 174, 181, 189, 191, 194, 198, 210, 214, 236, 268], "hydrogen": [33, 259], "r_nl": [33, 103, 165], "my_routin": 33, "result_var": [33, 231], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 33, "__________": [33, 186], "\u212f": [33, 136, 183, 198, 264, 268, 270, 274, 275], "assoc_laguerr": [33, 59, 198], "fcn": [33, 231], "result_5397460570204848505": [33, 231], "out_8598435338387848786": [33, 231], "examin": [33, 52, 153, 229, 231, 274], "inputargu": [33, 231], "outputargu": [33, 231], "inoutargu": [33, 231], "disk": [33, 52, 206, 217, 237], "binary_funct": [33, 92, 230], "tensor": [33, 38, 53, 58, 87, 102, 111, 129, 143, 149, 150, 151, 161, 164, 173, 174, 198, 219, 220, 222, 223, 230, 237, 246, 247, 253, 257], "binary_func": [33, 230], "servic": [33, 218], "tempdir": [33, 230], "qho_1d": [33, 140], "psi_n": [33, 140], "y_": [33, 59, 76, 103, 183], "qho": 33, "tmp": 33, "reveal": [33, 91, 217, 269], "subroutin": [33, 42, 160, 191], "autofunc": 33, "dimens": [33, 35, 52, 53, 59, 60, 62, 64, 65, 66, 68, 80, 82, 84, 87, 90, 94, 102, 118, 138, 148, 150, 153, 158, 167, 168, 171, 172, 174, 184, 187, 198, 211, 214, 216, 218, 219, 223, 224, 231, 243, 245, 247, 259], "hbar": [33, 140, 146, 159, 165, 169, 171, 183], "05457162d": 33, "14159265358979d0": 33, "0d0": [33, 198], "74126166983329d": 33, "33": [33, 51, 54, 87, 129, 137, 191, 195, 198, 218], "verbos": [33, 51, 82, 91, 198, 229, 230, 273], "mute": [33, 230], "backend": [33, 79, 92, 93, 99, 117, 119, 125, 178, 195, 230, 237, 260], "auxiliari": [33, 78, 109, 114, 126, 214, 230], "function_nam": [33, 230], "sympy_express": [33, 230], "mandatori": [33, 198, 230], "illustr": [33, 87, 115, 118, 169, 188, 201, 205], "psi_nl": 33, "766": 33, "incur": [33, 92], "get_numpy_arrai": 33, "tight": 33, "temp": [33, 116], "alloc": [33, 57], "walk": [33, 35, 156, 159, 208], "memori": [33, 51, 91, 194, 219, 230, 233], "fuse": 33, "wise": [33, 34, 57, 82, 187, 191, 198, 204, 230], "unabl": [33, 64, 68, 93, 216, 243, 263, 264], "fortun": [33, 92, 118, 194, 195], "reconnect": 33, "autom": [33, 57, 92, 207, 230, 268], "ideolog": [33, 217], "fashion": [33, 51, 84, 116, 126, 127, 129, 182, 185, 236], "broadcast": [33, 92, 198, 223, 230], "outperform": 33, "jensen": 33, "quantit": [33, 166], "leverag": [33, 92, 198], "ufunc": [33, 92, 230, 237], "fn_numpi": 33, "fn_fortran": 33, "linspac": [33, 74, 92, 114, 131], "xx": [33, 87, 111, 182, 236], "21306132": 33, "98101184": 33, "44626032": 33, "timeit": [33, 195], "10000": [33, 55, 91, 92, 94, 216], "18891601900395472": 33, "004707066000264604": 33, "facil": 33, "comparison": [33, 50, 51, 81, 87, 114, 185, 193, 197, 216, 229, 236], "thereof": [33, 51, 185, 191, 193], "optims_c99": 33, "log1p": [33, 198], "expm1_opt": 33, "log1p_opt": 33, "exp2_opt": 33, "log2_opt": 33, "log2const_opt": 33, "funcminusoneoptim": 33, "func_m_1": 33, "opportunist": 33, "replaceoptim": 33, "toward": [33, 51, 59, 185, 205, 217], "catastroph": 33, "smaller": [33, 42, 43, 51, 52, 59, 67, 78, 84, 91, 126, 186, 188, 191, 194, 201, 207, 208, 216, 236, 263, 274], "replace_in_add": 33, "cost_funct": 33, "prioriti": [33, 74, 105, 114, 182, 237], "__call__": [33, 43, 51, 193], "exp2": [33, 198], "create_expand_pow_optim": 33, "base_req": 33, "is_symbol": [33, 82], "expand_opt": 33, "opt2": 33, "is_funct": 33, "log2": [33, 198], "matin_opt": 33, "matinv_opt": 33, "matrixsolv": [33, 198], "matrix_nod": 33, "numpyprint": 33, "doprint": [33, 198], "linalg": 33, "seriesapprox": 33, "reltol": 33, "max_ord": 33, "n_point_check": 33, "threshold": [33, 91], "largest": [33, 43, 45, 51, 57, 59, 87, 90, 91, 144, 185, 189, 216, 236], "series_approx2": 33, "1e": [33, 51, 55, 87, 99, 133, 194, 216], "series_approx3": 33, "series_approx8": 33, "sumapprox": 33, "neglect": 33, "2000": [33, 37, 78, 91, 192], "sum_approx3": 33, "sum_approx2": 33, "sum_approx1": 33, "token": [33, 76, 79, 93], "diagram": [33, 40, 80, 94, 117, 118, 119, 124, 144, 223, 247, 260, 269], "codegenast": 33, "assignmentbas": 33, "augmentedassign": 33, "addaugmentedassign": 33, "subaugmentedassign": 33, "mulaugmentedassign": 33, "divaugmentedassign": 33, "modaugmentedassign": 33, "codeblock": [33, 93], "quotedstr": 33, "intbasetyp": 33, "_sizedinttyp": 33, "signedinttyp": 33, "unsignedinttyp": 33, "floatbasetyp": 33, "floattyp": 33, "complexbasetyp": 33, "complextyp": 33, "pointer": [33, 231, 232], "functionprototyp": 33, "functiondefinit": [33, 93], "stream": [33, 52, 199, 210, 236], "functioncal": 33, "breaktoken": 33, "continuetoken": 33, "nonetoken": 33, "float32": [33, 92, 93, 237], "float64": [33, 92, 218], "codeprint": 33, "underli": [33, 43, 49, 51, 80, 87, 99, 114, 159, 172, 216, 217, 218], "complex_": 33, "bool_": 33, "intc": [33, 93], "intp": 33, "unsign": [33, 56, 210], "int8": 33, "int16": 33, "int32": 33, "int64": [33, 218], "uint8": 33, "uint16": 33, "uint32": 33, "uint64": 33, "x86": 33, "amd64": 33, "complex64": 33, "complex128": 33, "newton": [33, 59, 124, 167, 171, 191, 195], "aug_assign": 33, "tol": [33, 51, 189], "val": [33, 51, 63, 189, 193, 237], "whl": 33, "py_str": 33, "inf": [33, 43, 51, 87, 189, 194, 206, 214, 218], "exec": [33, 51, 79, 237], "1121416371": 33, "909672693737": 33, "867263818209": 33, "865477135298": 33, "865474033111": 33, "1g": 33, "3e": 33, "2003": [33, 183, 192, 198, 211], "source_format": [33, 198], "align": [33, 61, 87, 108, 125, 182, 183, 198, 229], "op": [33, 51, 87, 153, 164, 177, 181, 207, 236, 237], "parametr": [33, 59, 60, 64, 87, 184, 211, 217, 243, 245, 252], "volatil": 33, "binop": 33, "exit": [33, 91, 229], "premad": 33, "break_": 33, "lift": [33, 47, 57, 59, 76, 189, 191, 194], "left_hand_sid": 33, "topological_sort": [33, 236], "postprocess": [33, 194, 199, 210], "topolog": [33, 51, 53, 76, 187, 206, 236], "continue_": 33, "untyp": 33, "compliant": 33, "ok": [33, 43, 198, 214], "elem": [33, 42, 185], "ijk": [33, 223], "stride": [33, 223], "lmn": 33, "cast_nocheck": 33, "alia": [33, 44, 51, 61, 67, 82, 83, 85, 89, 148, 157, 164, 185, 188, 189, 193, 197, 206, 229, 239, 274], "nbit": 33, "storag": [33, 51, 87, 158, 183, 191], "nmant": 33, "mantissa": 33, "nexp": 33, "half_precis": 33, "f16": 33, "65504": 33, "tini": [33, 51], "ep": [33, 42, 50, 189, 193, 194], "decimal_dig": 33, "cast_check": 33, "1e5": 33, "cast": [33, 84, 266], "subnorm": [33, 42], "loss": [33, 76, 164, 230, 248], "idempot": 33, "loos": [33, 51, 209], "overflow": [33, 233], "max_expon": 33, "min_expon": 33, "for_i": 33, "for_ji": 33, "for_kji": 33, "function_arg": [33, 229], "fcall": 33, "bar": [33, 59, 115, 124, 153, 159, 239], "baz": 33, "return_typ": 33, "fp": [33, 34, 51, 194, 200], "from_functionprototyp": 33, "prototyp": [33, 92, 231], "value_const": 33, "pointer_const": 33, "attr_param": 33, "looking_for": 33, "as_declar": 33, "formatstr": 33, "5g": 33, "stdout": [33, 229], "stderr": 33, "atom": [33, 43, 78, 81, 82, 103, 165, 188, 195, 198, 216, 217, 223], "oppos": [33, 237, 264], "_field": 33, "_construct_": 33, "not_in_arg": 33, "float16": 33, "inttyp": 33, "super": [33, 59, 189, 198, 243, 244], "from_expr": [33, 194], "toler": [33, 51, 55, 189, 210, 216], "42": [33, 40, 51, 54, 56, 64, 65, 67, 82, 83, 85, 87, 89, 91, 189, 211, 229], "v6": 33, "123456": [33, 51, 91], "v10": 33, "12345": [33, 55], "67894": 33, "boost_mp50": 33, "boost": 33, "multiprecis": [33, 188], "cpp_dec_float_50": 33, "r37": 33, "rtol": 33, "atol": 33, "precision_target": 33, "v18": 33, "123456789012345646": 33, "123456789012345649": 33, "Will": [33, 87, 93, 193, 198, 229], "decl1": 33, "decl2": 33, "alt": 33, "secondarili": [33, 194], "mathcin": 33, "cbrt": [33, 58, 198], "minu": [33, 50, 51, 179, 191, 198, 249], "0e": [33, 51], "fma": [33, 198], "cpu": [33, 92, 131], "hypot": [33, 198], "hypotenus": [33, 67], "log10": [33, 198], "ten": [33, 92], "plu": [33, 50, 87, 93, 131, 144, 198, 208, 237], "famili": [33, 35, 69, 78, 186], "commaoper": 33, "goto": 33, "preincrement": 33, "postdecr": 33, "decrement": [33, 209, 233], "postincr": 33, "increment": [33, 42, 43, 44, 50, 67, 91, 209, 218], "predecr": 33, "alignof": 33, "sizeof": 33, "struct": 33, "dsign": 33, "arrayconstructor": 33, "ac": [33, 43, 63, 97, 111, 129, 141, 211, 218, 236, 239], "95": [33, 49, 91, 191, 198, 214, 216, 231], "do1": 33, "1d0": 33, "do2": 33, "extent": 33, "intent_out": 33, "dim": [33, 53, 66, 92, 166, 172, 198, 221, 224], "arr": 33, "fortranreturn": 33, "aid": [33, 116], "implieddoloop": 33, "idl": 33, "signallib": 33, "prog": [33, 143], "myprogram": 33, "mysub": 33, "subroutinecal": 33, "passs": 33, "inout": 33, "bind_c": 33, "sum_": [33, 50, 51, 52, 56, 59, 76, 78, 82, 84, 91, 195, 200, 201, 208, 214, 218], "cmplx": [33, 198], "intent_in": 33, "intrins": 33, "isign": 33, "lbound": 33, "lb": [33, 73, 233], "literal_dp": 33, "num": [33, 42, 51, 91, 101, 189, 210, 214, 233, 239], "literal_sp": 33, "reshap": [33, 82, 114, 131, 219, 225, 236], "arrayexpr": 33, "shp": 33, "metric": [33, 43, 47, 53, 102, 210, 214, 217, 224], "snr": 33, "convolution2d": 33, "use_renam": 33, "ren": 33, "thingi": 33, "newtons_method": 33, "itermax": 33, "counter": [33, 51, 57, 63, 82, 95, 97], "raphson": 33, "criterion": [33, 42, 130, 186, 191], "dummi": [33, 47, 50, 57, 76, 78, 87, 114, 131, 159, 164, 188, 189, 193, 194, 195, 204, 205, 206, 208, 210, 214, 217, 222, 224, 227, 231, 236, 237], "netwon": 33, "algo": [33, 43], "r38": 33, "27s_method": 33, "newtons_method_funct": 33, "param": [33, 53, 87, 211], "render_as_modul": 33, "py_mod": 33, "865474033102": 33, "render_as_source_fil": 33, "printer_set": 33, "fcodeprint": [33, 198], "fpgroup": [34, 42], "studi": [34, 41, 50, 53, 87, 182, 185, 191, 194, 211, 218], "combinator": [34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 84, 91, 200, 219, 224, 233, 236, 254, 268, 274], "free_group": [34, 41, 42], "vfree_group": 34, "xfree_group": 34, "fp_group": [34, 42], "coset_enumeration_r": 34, "fall": [34, 50, 51, 56, 79, 178, 193, 198, 211, 215, 218], "famou": [34, 59, 78, 91, 211], "langl": [34, 42, 143, 183], "rangl": [34, 42, 143, 161, 183], "gen0": 34, "gen1": 34, "gen_": 34, "freegroup": 34, "x_2": [34, 41, 56, 73, 159, 186, 191, 194, 200, 211, 217], "x_3": [34, 41, 73, 159], "s_1": 34, "r_1": [34, 185, 195], "s_2": 34, "r_2": 34, "s_k": 34, "r_k": [34, 157], "s_i": [34, 47, 78, 80], "r_i": [34, 195], "reduct": [34, 87, 110, 191, 193, 209, 211], "ho05": [34, 41], "cdhw73": 34, "hav91": 34, "coset_enumeration_c": 34, "coset_enumer": 34, "relator_bas": 34, "coset_table_bas": 34, "total": [34, 40, 42, 51, 56, 67, 80, 81, 82, 84, 116, 118, 126, 133, 137, 143, 148, 161, 170, 183, 189, 191, 194, 207, 210, 214, 222, 224, 252], "influenc": [34, 94, 185, 186], "coset_table_max_limit": 34, "4096000": 34, "safeti": [34, 43, 85], "max_coset": 34, "cox": [34, 192, 194], "c_r": [34, 208], "50": [34, 42, 54, 55, 56, 59, 67, 87, 91, 94, 95, 137, 194, 198, 207, 216], "max_stack_s": 34, "500": [34, 55, 111], "deduction_stack": 34, "stack": [34, 68, 82, 131, 187, 193, 198, 227, 233, 270], "occurr": [34, 51, 91, 114, 174, 210, 218], "exce": [34, 91, 224], "modest": 34, "low_index_subgroup": 34, "conjugaci": [34, 42], "coset_t": [34, 42], "reidemeister_present": 34, "y_1": [34, 211, 218], "y_2": [34, 211, 218], "john": [34, 42, 59, 194, 211, 214], "cannon": 34, "lucien": 34, "dimino": [34, 42], "georg": [34, 185, 214, 236], "hava": 34, "jane": 34, "watson": [34, 210], "comp": [34, 214], "463": [34, 130], "490": [34, 43], "1973": [34, 52, 180], "derek": [34, 41], "holt": [34, 41, 42, 49], "chapman": [34, 41], "hall": [34, 41, 218], "crc": [34, 41, 43], "2005": [34, 41, 78, 91, 194], "xvi": [34, 41], "514": [34, 41, 192], "symposium": [34, 76, 191, 192, 208], "issac": [34, 78, 192, 216], "bonn": 34, "1991": [34, 192], "191": [34, 217], "199": 34, "acm": [34, 50, 76, 78, 192, 208, 214, 216], "graycod": 35, "kw_arg": [35, 45, 164, 223, 224], "hamiltonian": [35, 155], "edg": [35, 44, 45, 80, 187, 198, 217, 236, 273], "hamilton": [35, 82], "vertex": [35, 45, 62, 67, 78, 187], "000": [35, 55, 78, 81, 158, 236], "110": [35, 81, 214, 216, 230, 236], "010": [35, 81, 236], "011": [35, 81, 158, 236], "111": [35, 54, 61, 81, 91, 236], "101": [35, 81, 91, 158, 236], "001": [35, 55, 81, 133, 236], "delet": [35, 80, 82, 87, 195, 239, 274], "statist": [35, 52, 59, 218, 229, 268], "manner": [35, 52, 59, 128, 162, 179, 211, 214, 219, 236, 251], "generate_grai": 35, "0000": 35, "0001": [35, 55], "0011": [35, 46], "0010": 35, "0110": 35, "0111": [35, 158], "0101": [35, 158], "0100": 35, "1100": 35, "1101": 35, "1111": 35, "1110": 35, "1010": 35, "1011": 35, "1001": 35, "r39": 35, "nijenhui": 35, "wilf": [35, 50, 216], "1978": [35, 42, 169, 192], "r40": 35, "knuth": [35, 43, 233], "2011": [35, 43, 76, 91, 180, 207], "art": [35, 43, 185, 198, 200, 233, 260], "vol": [35, 43, 52, 56, 59, 76, 87, 102, 193, 194, 208, 233, 236], "addison": [35, 43, 91, 192], "weslei": [35, 43, 91, 192], "r41": 35, "reflect": [35, 39, 43, 51, 61, 62, 67, 80, 97, 133, 136, 137, 174], "brgc": 35, "6th": [35, 91], "unrank": [35, 40, 42, 43, 45], "r42": 35, "statweb": 35, "stanford": 35, "susan": 35, "s208": 35, "node12": 35, "tail": [35, 50, 51, 189, 218], "00010": 35, "random_bitstr": 35, "bitlist": [35, 46], "gray_to_bin": 35, "endian": 35, "bin_to_grai": 35, "get_subset_from_bitstr": 35, "bitstr": 35, "graycode_subset": 35, "group_construct": 36, "directproduct": [36, 39], "__mul__": [36, 42, 82, 87, 189, 193], "shift": [36, 42, 43, 45, 52, 59, 62, 66, 68, 81, 184, 189, 191, 194, 201, 208, 216, 218], "gn": 36, "named_group": [36, 39, 41, 42, 48, 49], "cyclicgroup": [36, 39, 42], "perm_group": [36, 41, 42, 43, 48, 49], "permutationgroup": [36, 39, 41, 42, 43, 48, 49], "group_numb": 37, "is_nilpotent_numb": 37, "r43": 37, "randprim": [37, 91], "pakianathan": 37, "shankar": 37, "monthli": [37, 52, 87], "107": [37, 192], "631": 37, "634": 37, "is_abelian_numb": 37, "r44": 37, "is_cyclic_numb": 37, "r45": 37, "polyhedron": [38, 42, 78, 236], "prufer": 38, "grai": [38, 46, 79, 133, 178, 184], "nilpot": [38, 42, 87], "abelian": [38, 39, 42, 80, 169, 185], "cyclic": [38, 39, 42, 43, 44, 54, 82, 91, 224, 236], "canonic": [38, 51, 207, 224], "coset": [38, 42, 47, 193], "todd": 38, "coxet": [38, 80], "subgroup": [38, 42, 43, 47, 49, 80, 91], "bibliographi": 38, "polycycl": [38, 42], "collector": 38, "symmetricgroup": [39, 41, 42, 48, 49], "transposit": [39, 42, 43, 52, 82, 84, 220], "is_group": [39, 42], "generate_schreier_sim": [39, 42], "af": [39, 42, 48, 131], "dihedralgroup": [39, 42, 49], "alternatinggroup": [39, 42, 48], "r46": 39, "symmetric_group": 39, "generators_and_rel": 39, "dihedr": [39, 43], "d_n": [39, 80, 194], "gon": 39, "bab": 39, "generate_dimino": [39, 42], "perm": [39, 41, 42, 43, 44, 49, 56, 82, 84, 87, 219], "cyclic_form": [39, 43, 44], "r47": 39, "dihedral_group": 39, "31": [39, 51, 54, 55, 67, 91, 129, 183, 194, 211], "ex": [39, 78, 102, 113, 188, 190, 193, 194, 224, 232], "r48": 39, "armstrong": 39, "abeliangroup": [39, 42], "cyclic_ord": 39, "theorem": [39, 52, 59, 61, 67, 77, 78, 82, 87, 91, 104, 105, 116, 164, 173, 181, 185, 188, 191, 205, 208, 211, 217, 250, 260], "r49": 39, "groupprop": [39, 42], "subwiki": [39, 42], "structure_theorem_for_finitely_generated_abelian_group": 39, "multiset_partit": [40, 56, 76, 233, 236], "rg": 40, "growth": [40, 91, 191, 264], "from_rg": 40, "abcd": [40, 44, 164, 236, 239], "cbead": 40, "sort_kei": [40, 51, 214], "ti": [40, 43, 51, 91], "integerpartit": [40, 236], "summand": [40, 193], "r50": 40, "partition_": [40, 56], "28number_theori": 40, "as_dict": [40, 188, 194], "as_ferr": 40, "char": 40, "ferrer": 40, "next_lex": [40, 43], "lexic": [40, 144, 236], "prev_lex": 40, "random_integer_partit": 40, "seed": [40, 42, 51, 52, 61, 64, 65, 87, 91, 191, 218, 229, 236], "85": [40, 55, 56, 87, 91, 116, 162, 183, 218], "rgs_gener": 40, "37": [40, 52, 57, 61, 87, 91, 95, 198, 211], "52": [40, 56, 91, 94, 95, 183, 197, 211, 214, 236, 264], "151": 40, "203": [40, 56], "rgs_enum": 40, "rgs_unrank": 40, "rgs_rank": 40, "pcgroup": 41, "pcg": 41, "pc_seri": [41, 42], "polycyl": 41, "pc_present": 41, "pc_sequenc": [41, 42], "miss": [41, 42, 68, 198, 216, 231, 274], "adjac": [41, 42, 43, 51, 101, 136, 187, 236], "der": [41, 42], "relative_ord": [41, 42], "polycyclic_group": [41, 42], "gen": [41, 42, 47, 48, 49, 51, 87, 185, 188, 189, 191, 193, 194, 195, 196, 204, 210, 213, 216], "is_ident": [41, 43, 51], "poss": [41, 116, 182], "pc_group": 41, "a_j": [41, 59, 76, 169, 191, 200, 208], "notin": [41, 76, 206], "_order": 41, "minimal_uncollected_subword": 41, "subword_index": 41, "i_1": [41, 164, 194, 219], "a_1": [41, 42, 52, 59, 73, 76, 82, 87, 102, 164, 169, 186, 191, 208, 211, 214, 216, 218, 274], "i_r": 41, "a_r": [41, 208], "i_2": [41, 164, 194], "s_": [41, 47, 114, 191], "s_j": [41, 80, 191], "x3": [41, 51, 56, 188, 214, 218], "collected_word": 41, "free_to_perm": 41, "bottom": [41, 42, 51, 52, 67, 82, 87, 90, 113, 193, 198, 207, 252], "pictur": [41, 198], "x_3x_2": 41, "x_3x_1": 41, "x_2x_1": 41, "x_3x_0": 41, "x_2x_0": 41, "x_1x_0": 41, "varii": 41, "derived_seri": [41, 42], "pc_resent": 41, "k_arrai": 41, "array_form": [41, 43, 44], "v_arrai": 41, "e_1": [41, 87, 185, 191, 194], "e_n": [41, 56, 80, 87, 140, 185, 194], "exponent_vector": 41, "leading_expon": 41, "dup": [42, 189, 190], "pn": [42, 118, 128], "motion": [42, 105, 108, 109, 110, 113, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 131, 132, 177, 178, 181, 182, 218], "front": [42, 51, 116, 117, 133, 163, 189, 191, 194, 198, 210, 274], "face": [42, 44, 64, 78, 114, 191, 195, 198, 211, 252, 270], "rubik": 42, "3674160": 42, "pgroup": [42, 44], "corner": [42, 44, 82, 194, 214, 217, 237], "reset": [42, 44, 184, 191, 194, 229, 232, 234], "p10": 42, "make_perm": 42, "r51": 42, "eick": [42, 49], "brien": [42, 49], "r52": 42, "seress": 42, "r53": 42, "schreier_vector": 42, "r54": 42, "nielsen_transform": 42, "product_replacement_algorithm": 42, "r55": 42, "frank": [42, 43, 87], "celler": 42, "charl": 42, "leedham": 42, "green": [42, 125, 184], "scott": 42, "murrai": 42, "alic": [42, 52], "niemey": 42, "r56": 42, "block_": 42, "28permutation_group_theori": 42, "r57": 42, "algorithmist": 42, "php": [42, 59, 91, 211, 218], "union_find": 42, "r58": 42, "multiply_transitive_group": 42, "r59": 42, "center_": 42, "28group_theori": 42, "centralizer_and_norm": 42, "derived_subgroup": 42, "nilpotent_group": 42, "colost": 42, "hulpk": 42, "cgt": 42, "cgtnote": 42, "__contains__": 42, "__weakref__": [42, 82], "weak": [42, 51, 82, 188, 191], "_coset_repres": 42, "hg": 42, "transvers": [42, 47, 49, 137, 138], "coset_transvers": 42, "_distinct_primes_lemma": 42, "_element": 42, "_eval_is_alt_sym_monte_carlo": 42, "05": [42, 73, 99, 180, 183], "mont": 42, "carlo": 42, "candidat": 42, "randomli": [42, 51, 52, 91, 158], "n_ep": 42, "_check_cycles_alt_sym": [42, 49], "_eval_is_alt_sym_na": 42, "only_sym": 42, "only_alt": 42, "_p_elements_group": 42, "_random_pr_init": 42, "_random_prec_n": 42, "modif": [42, 57, 87, 217, 218, 233], "69": [42, 87, 216, 233], "71": [42, 67, 87, 167], "_random_gen": 42, "append": [42, 51, 52, 87, 95, 131, 159, 184, 189, 198, 219, 231, 232, 236, 274], "accumul": [42, 229, 233], "random_pr": 42, "chosen": [42, 43, 52, 53, 64, 65, 87, 91, 94, 108, 132, 166, 169, 184, 185, 189, 191, 193, 198, 205, 208, 214, 218, 229, 243], "gh": [42, 186, 217, 224], "eventu": [42, 59, 78, 184, 185, 205, 231, 236], "_sylow_alt_sym": 42, "sylow": 42, "p_1": [42, 47, 52, 69, 91, 181, 208, 211], "p_2": [42, 52, 69, 91, 181, 208], "p_p": 42, "sylow_subgroup": 42, "is_alt_sym": [42, 49], "_union_find_merg": 42, "parent": [42, 51, 74, 108, 125, 174, 177, 184, 188, 189, 193, 229, 233, 243, 246, 247], "not_rep": 42, "atkinson": 42, "83": [42, 197], "87": [42, 57, 87, 91], "minimal_block": 42, "_union_find_rep": 42, "r60": 42, "r66": 42, "compress": [42, 87, 90], "r62": 42, "r68": [42, 43], "_verifi": 42, "_h": [42, 217], "gens_k": 42, "rels_k": 42, "gens_h": 42, "stabil": [42, 47, 49, 55, 101, 128, 222], "inject": [42, 51, 185, 189, 194, 270], "homomorph": [42, 190], "rels_h": 42, "strong_present": 42, "abelian_invari": 42, "isomorph": [42, 45, 185, 188, 191, 193], "t_1": [42, 56, 211], "t_2": [42, 56, 211], "t_r": [42, 129, 224], "542": 42, "adopt": [42, 224], "schreier": [42, 47, 49], "sim": [42, 47, 49, 76], "b_1": [42, 49, 59, 73, 76, 185, 208, 211, 214, 274], "b_2": [42, 49, 59, 73, 208, 214], "dot": [42, 43, 47, 49, 52, 64, 66, 73, 82, 87, 101, 116, 117, 118, 121, 122, 123, 126, 127, 128, 129, 131, 148, 174, 178, 180, 181, 182, 183, 185, 186, 191, 194, 198, 217, 218, 236, 243, 246, 248, 249], "b_k": [42, 49, 52, 56, 59, 200, 201], "strong": [42, 47, 48, 49, 91, 92], "89": [42, 49, 78], "55": [42, 54, 56, 87, 183, 184, 194, 211], "57": [42, 87, 91, 218], "strong_gen": [42, 48, 49], "basic_transvers": [42, 49], "basic_orbit": [42, 49], "basic_stabil": 42, "baseswap": 42, "po": [42, 76, 81, 82, 111, 129, 131, 189, 216], "strong_gens_distr": [42, 49], "swap": [42, 43, 44, 82, 87, 144, 148, 157, 218, 236], "orbit": [42, 49, 164, 165, 167], "b_": [42, 47, 49, 51, 56, 59, 76, 84, 101, 200, 208, 211, 219], "b_i": [42, 47, 49, 76, 185, 208], "la": [42, 131, 169], "vega": 42, "testutil": [42, 48, 49], "_verify_bsg": [42, 48, 49], "schreier_sim": [42, 48, 49], "bsg": [42, 47, 49, 224], "102": [42, 87], "98": [42, 52, 130, 194, 214], "pseudocod": 42, "beta_": 42, "g_": [42, 49, 50, 59, 76, 211], "foral": [42, 50, 53, 169], "zg": 42, "gz": 42, "c_g": 42, "gs": [42, 76], "sg": [42, 218, 224], "is_subgroup": 42, "subgroup_search": 42, "hgh": 42, "closur": [42, 48, 74, 144, 193, 206], "composition_seri": 42, "h_0": [42, 47], "h_1": [42, 47, 217], "h_2": [42, 217], "1024": [42, 198, 218], "512": [42, 59], "128": [42, 56, 59, 61, 91, 192, 198], "32": [42, 54, 57, 59, 61, 87, 91, 99, 129, 192, 194, 195, 207, 208, 211, 218, 229], "243": [42, 59, 216], "81": [42, 56, 61, 82, 87, 91, 114, 116, 183, 197], "conjugacy_class": 42, "xax": 42, "s_3": 42, "s3": [42, 50, 101, 201, 211], "feasibl": [42, 101], "resiz": [42, 43, 82, 84], "coset_factor": 42, "factor_index": 42, "_basic_orbit": 42, "u1": [42, 91, 114, 116, 117, 118, 119, 121, 122, 125, 126, 128, 131, 174, 176, 177, 178, 181, 214], "u2": [42, 90, 91, 114, 116, 117, 118, 119, 121, 122, 126, 131, 174, 177, 181, 214], "_strip": [42, 49], "coset_rank": 42, "lexicograph": [42, 43, 46, 47, 51, 191, 194, 236], "coset_unrank": 42, "standardis": [42, 188], "subsect": [42, 249], "compris": [42, 52, 84, 111, 129, 132, 194, 236], "g_0": [42, 211], "g_1": [42, 194, 205, 211, 214], "g_2": [42, 80, 205, 214], "g_i": [42, 205], "g_k": 42, "tetrahedron": [42, 44], "r64": 42, "axiom": [42, 185], "doy": 42, "sc": [42, 78], "thesi": [42, 51, 205, 243], "generator_product": 42, "sn": [42, 43, 50, 73], "is_abelian": 42, "_random_prec": 42, "probabl": [42, 51, 56, 59, 63, 91, 114, 158, 162, 208, 214, 217, 218, 230, 266, 272], "transit": [42, 131, 191, 218], "82": [42, 78, 87, 218], "proport": [42, 52, 205], "226": 42, "227": 42, "is_altern": 42, "quicker": [42, 91], "taxonomi": 42, "is_cycl": 42, "p_": [42, 47, 51, 78, 169, 211, 214, 219], "p_i": [42, 47, 91], "equiv": [42, 52, 56, 91, 193, 208, 211], "pmod": [42, 51, 52, 56, 87, 208], "p_j": [42, 47], "r65": 42, "35": [42, 45, 54, 56, 64, 65, 78, 87, 91, 116, 193, 198, 211, 214, 218], "rose": 42, "is_elementari": 42, "is_nilpot": [42, 87], "solvabl": [42, 211, 214, 217, 275], "lower_central_seri": 42, "is_solv": 42, "is_norm": [42, 162], "gr": 42, "is_perfect": [42, 91], "is_polycycl": 42, "is_primit": [42, 189, 194], "primit": [42, 51, 52, 59, 91, 158, 162, 185, 186, 188, 189, 191, 193, 194, 197, 198, 211, 264], "cardin": [42, 43, 46, 185, 206], "badli": 42, "random_stab": 42, "g3": [42, 101], "s5": 42, "is_symmetr": [42, 82], "is_transit": 42, "is_trivi": 42, "cba": [42, 219, 236], "mainli": [42, 59, 87, 92, 169, 178, 191, 208, 211, 214], "max_div": 42, "siev": [42, 91], "nonempti": 42, "gb": 42, "moreov": [42, 52, 76, 168, 179, 185, 186, 191, 199, 247], "congruenc": [42, 51, 91, 208, 211], "p_0": [42, 47, 69, 208, 211], "maxim": [42, 52, 80, 185, 189, 193, 205, 207], "intransit": 42, "normal_closur": 42, "adjoin": [42, 186], "yx": [42, 182], "73": [42, 50, 51, 64, 91, 214], "74": [42, 56, 91], "orb": 42, "78": [42, 65, 87, 91, 95, 169, 214, 218], "orbit_transvers": 42, "orbit_rep": 42, "send": [42, 51, 52, 57, 91, 185, 214, 216], "proof": [42, 45, 76, 78, 217], "79": [42, 43, 95], "pointwise_stabil": 42, "pointwis": [42, 49], "p_k": [42, 91], "p20": 42, "stab": 42, "schreier_sims_increment": [42, 49], "polycyclicgroup": 42, "eliminate_gen": 42, "gen_count": 42, "b1": [42, 47, 59, 91, 94, 95, 106, 114, 131, 174, 189, 198, 208, 211, 214, 248], "b_r": 42, "slp_dict": 42, "seq": [42, 51, 54, 87, 189, 191, 194, 204, 216, 236], "93": [42, 192], "schreier_sims_random": [42, 49], "consec_succ": 42, "consec": 42, "_succ": 42, "97": [42, 52, 91, 191], "sift": [42, 49, 236], "amend": 42, "decompos": [42, 43, 49, 51, 53, 57, 62, 87, 91, 148, 157, 158, 160, 189, 194, 197, 218], "unsuccess": [42, 49], "accordingli": [42, 186, 193], "halt": 42, "signifi": [42, 51, 194, 218], "g_t": 42, "leq": [42, 50, 52, 59, 76, 87, 91, 191, 193, 204, 205, 211, 218], "prop": [42, 193], "init_subgroup": 42, "supergroup": 42, "sought": [42, 91, 149, 159, 210, 217], "prune": 42, "prop_even": 42, "lengthi": 42, "114": [42, 91], "117": [42, 59], "terribl": 42, "crucial": [42, 50, 188], "len1": 42, "len2": 42, "len3": 42, "transitivity_degre": 42, "fold": [42, 51, 57, 198, 205, 210], "a_2": [42, 52, 73, 87, 191, 208, 211, 214, 218, 274], "a_k": [42, 52, 195, 201, 216], "arrang": [43, 101, 109, 129, 131, 207, 211, 224], "r69": 43, "reorder": [43, 50, 164, 194, 214, 218, 236], "pretty_print": [43, 79, 111, 116, 117, 121, 122, 123, 125, 126, 127, 129, 132, 174, 176, 177, 178, 181, 182, 198], "enter": [43, 51, 52, 56, 64, 91, 93, 94, 109, 113, 116, 126, 198, 208, 216, 229, 269, 273], "understood": [43, 91, 169, 185, 189], "economi": 43, "caution": [43, 51, 57, 210], "singleton": [43, 81, 202, 217, 254, 256, 269], "indexerror": [43, 87, 194], "autos": [43, 90], "watch": 43, "print_cycl": 43, "econom": [43, 78, 236], "retain": [43, 51, 57, 59, 78, 93, 194, 199, 207, 210], "biject": [43, 45, 52, 82, 185], "full_cyclic_form": 43, "rmul": 43, "unrank_lex": 43, "r73": 43, "zo42": 43, "from_sequ": 43, "a1": [43, 47, 51, 79, 82, 91, 95, 114, 131, 138, 214, 218, 219, 248, 274], "a2": [43, 47, 51, 80, 82, 91, 95, 114, 131, 138, 187, 218, 219, 248, 274], "a3": [43, 47, 51, 80, 82, 131, 248, 274], "perfectli": [43, 50, 51, 52, 191, 194, 197], "skiena": 43, "ma": [43, 50, 119], "1990": [43, 76, 208, 243], "r70": 43, "wendi": 43, "myrvold": 43, "ruskei": 43, "2001": [43, 91, 192], "lett": 43, "septemb": [43, 233], "281": 43, "284": [43, 91], "1016": 43, "s0020": 43, "0190": 43, "01": [43, 51, 55, 114, 158, 192, 210, 236], "00141": 43, "r71": 43, "kreher": 43, "stinson": 43, "1999": [43, 87, 192, 197, 214], "r72": 43, "graham": [43, 56, 57, 91], "patashnik": 43, "foundat": [43, 192, 193], "1994": [43, 191, 192, 194], "product_and_invers": 43, "r74": 43, "lehmer_cod": 43, "appliedpermut": 43, "magic": [43, 210, 229, 266], "attatch": 43, "_array_form": 43, "ascent": 43, "ie": [43, 211], "descent": 43, "fg": [43, 53, 214, 217], "gf": [43, 52, 185, 187, 188, 190, 191, 193], "r75": 43, "commutes_with": [43, 224], "cycle_structur": 43, "from_inversion_vector": 43, "get_adjacency_dist": 43, "n_adj": 43, "reev": 43, "colin": 43, "landscap": 43, "annal": 43, "86": [43, 87, 130, 197, 207], "473": 43, "josephu": 43, "get_precedence_matrix": 43, "get_precedence_dist": 43, "get_adjacency_matrix": 43, "get_positional_dist": 43, "subscript": [43, 189, 198, 208, 211, 236], "inversion_vector": 43, "lesser": [43, 194], "lie": [43, 53, 65, 66, 67, 194, 212, 218, 253, 260], "lehmer": 43, "ith": [43, 80, 91, 189, 195, 217, 218], "variat": [43, 51, 191, 205, 214, 235], "r76": 43, "eng": 43, "chula": 43, "piak": 43, "algo2008": 43, "htm": [43, 59, 78, 211], "is_singleton": 43, "is_odd": 43, "shuffl": [43, 87, 274], "012345": 43, "345": 43, "253": 43, "2531": 43, "25314": 43, "253140": 43, "r77": 43, "flavius_josephu": 43, "r78": 43, "josephus_problem": 43, "r79": 43, "wou": 43, "burtonl": 43, "trim": [43, 128], "unmov": 43, "mul_inv": 43, "next_nonlex": 43, "nonlex": 43, "rank_nonlex": 43, "unrank_nonlex": 43, "next_trotterjohnson": [43, 236], "trotter": 43, "johnson": [43, 87], "generate_bel": [43, 236], "rank_trotterjohnson": 43, "unrank_trotterjohnson": 43, "_af_par": 43, "pseudo": [43, 87, 91, 189, 191, 194], "inv_perm": 43, "enforc": [43, 116], "rmul_with_af": 43, "ascend": [43, 236], "r80": 43, "transposition_": 43, "28mathemat": [43, 51, 206], "flexibl": [43, 51, 114, 131, 181, 184, 188, 217, 264], "investig": [43, 76, 183, 185, 208, 236, 266], "cn": [43, 198, 273], "2n": [43, 50, 56, 59, 78, 82, 102, 127, 183, 201, 208], "dn": [43, 218], "klein": 43, "s4": [43, 101], "polyhedr": 44, "psg": 44, "platon": 44, "solid": [44, 65, 184, 252], "tetrahedr": 44, "octahedr": 44, "icosahedr": 44, "r81": 44, "polyhedralgroup": 44, "polyhedra": [44, 77], "shadow": 44, "h5": 44, "heinz": 45, "caylei": [45, 82], "r82": 45, "labeledtre": 45, "tree_repr": 45, "prufer_rank": 45, "prev": 45, "36": [45, 52, 56, 67, 78, 82, 87, 91, 95, 194, 198, 211, 214, 218, 252], "prufer_repr": 45, "record": [45, 51, 193, 229], "to_pruf": 45, "778": 45, "779": 45, "777": [45, 54], "1296": 45, "to_tre": 45, "r83": 45, "hamberg": 45, "erlend": 45, "2010": [45, 215, 236], "06": [45, 51, 116, 183, 218], "compact": [45, 51, 98, 131, 162, 178, 194, 198, 216, 233], "next_binari": 46, "prev_binari": 46, "bitlist_from_subset": 46, "subset_from_bitlist": 46, "superset_s": 46, "iterate_binari": 46, "iterate_graycod": 46, "prev_grai": 46, "next_grai": 46, "next_lexicograph": 46, "prev_lexicograph": 46, "rank_binari": 46, "unrank_binari": 46, "rank_grai": 46, "unrank_grai": 46, "rank_lexicograph": 46, "43": [46, 87, 91, 94, 95, 218, 274], "super_set": 46, "subset_indic": 46, "ksubset": 46, "itertool": [46, 236], "tensor_can": [47, 224], "msym": 47, "contravari": [47, 87, 224, 225], "covari": [47, 53, 87, 218, 224, 225], "d0": 47, "base_i": 47, "gens_i": 47, "n_i": [47, 191, 216], "sym_i": 47, "failur": [47, 55, 68, 76, 91, 218, 229, 274], "canonicalize_na": 47, "exchang": [47, 52, 87, 183, 187, 236], "anticommut": [47, 151, 153, 163, 164, 224], "canonical_fre": 47, "slot": [47, 148, 219, 223, 224, 269], "residu": [47, 52, 91, 191, 202, 208], "tensor_gen": 47, "list_free_indic": 47, "double_coset_can_rep": 47, "reintroduc": 47, "a_": [47, 51, 52, 59, 76, 80, 82, 84, 101, 102, 129, 200, 208, 211, 214, 216, 218, 219], "antisymmetr": [47, 53, 82, 164, 224], "d2": [47, 174, 185, 205, 218, 236, 243], "ord": [47, 52, 87], "t_c": 47, "get_symmetric_group_sg": [47, 224], "bsgs_direct_product": 47, "base2a": 47, "gens2a": 47, "t0": 47, "t1": [47, 67, 68, 91, 106, 111, 211, 218], "a_m": [47, 214], "a_n": [47, 52, 59, 76, 80, 169, 186, 191, 201, 211, 214, 274], "_a": [47, 59, 164, 194], "_b": [47, 59, 164], "base_f": 47, "gens_f": 47, "base1": 47, "gens1": 47, "base_a": 47, "gens_a": 47, "sgen": 47, "s_transvers": 47, "butler": [47, 224], "portug": [47, 224], "grow": [47, 51, 76, 87, 91, 188, 191], "computation": [47, 109, 110], "absenc": [47, 81], "observ": [47, 73, 76, 153, 182, 185, 208, 211, 214, 218, 251, 274], "opposit": [47, 67, 81, 82, 106, 108, 186, 189, 206, 210, 217, 225, 236, 243, 244, 274], "ind": [47, 200, 224], "d3": [47, 205], "a0": [47, 214, 274], "a4": [47, 51, 80, 131, 274], "a5": [47, 51], "interchang": [47, 50, 76, 214], "leftrightarrow": 47, "_af_rmul": 47, "t_": [47, 56], "b0": [47, 59, 189, 208, 214], "d_": [47, 208], "p0": [47, 61, 193, 214], "dbase": 47, "recomput": [47, 194], "d_i": [47, 76, 169], "s_0": 47, "d_0": [47, 52], "b_0": [47, 52, 56, 208, 211, 214], "b_j": [47, 49, 59, 76, 208], "sx": 47, "trace": [47, 82, 84, 102, 131, 191, 198, 218, 219, 220, 222, 236, 270], "h_n": [47, 59, 78, 217], "tab1": 47, "get_transvers": 47, "antisym": 47, "base2": 47, "gens2": 47, "_cmp_perm_list": 48, "hashabl": [48, 76, 236], "ls1": 48, "ls2": 48, "_naive_list_centr": 48, "_verify_centr": 48, "_verify_normal_closur": 48, "_base_ord": 49, "base_ord": 49, "backtrack": 49, "108": [49, 91, 95], "132": [49, 56, 174], "r84": 49, "_distribute_gens_by_bas": 49, "_strong_gens_from_distr": 49, "_orbits_transversals_from_bsg": 49, "_handle_precomputed_bsg": 49, "transversals_onli": 49, "slp": 49, "_remove_gen": 49, "new_gen": 49, "r85": 49, "r86": 49, "recurr": [50, 56, 73, 87, 193, 204, 210, 212, 214, 218, 238], "annihil": [50, 69, 70, 74, 140, 164, 216], "is_hypergeometr": 50, "binomi": [50, 55, 58, 59, 91, 194, 198, 203, 210, 214, 218, 236, 274], "rf": [50, 56, 194], "ff": [50, 52, 56, 183, 186, 187, 188, 193, 194], "speci": [50, 51], "rise": [50, 56, 59, 183, 210, 214, 218, 246], "knowledg": [50, 51, 52, 193, 214, 269, 272], "hypersimp": [50, 209], "quotient": [50, 51, 54, 57, 91, 185, 186, 188, 190, 191, 194, 208, 210, 214], "dummy_vari": 50, "stand": [50, 51, 131, 186, 188, 189, 195], "karr": 50, "quad": [50, 51, 53, 55, 59, 78, 82], "exclus": [50, 51, 81, 87, 191, 266], "emphas": 50, "typeset": [50, 198], "doit": [50, 51, 53, 56, 57, 59, 78, 84, 101, 141, 143, 145, 156, 158, 161, 162, 164, 174, 183, 194, 200, 205, 210, 214, 215, 218, 220, 243, 245, 246, 248, 249, 264, 269], "seemingli": [50, 217], "nonsens": [50, 59], "r87": 50, "michael": [50, 192, 197], "april": 50, "1981": [50, 192], "305": 50, "350": [50, 111], "dl": [50, 182, 192], "cfm": [50, 192], "doid": [50, 192], "322248": 50, "322255": 50, "r88": 50, "capit": [50, 52, 101, 214], "sigma_not": 50, "r89": 50, "empty_sum": 50, "euler_maclaurin": [50, 55], "eval_integr": 50, "maclaurin": [50, 55], "endpoint": [50, 51, 55, 179, 206, 249], "28333333333333": 50, "sstr": [50, 178, 198], "full_prec": [50, 198], "26629073187415": 50, "0175000000000000": 50, "soon": [50, 51, 114, 169, 195], "eval_zeta_funct": 50, "is_absolutely_converg": 50, "sequence_term": 50, "is_converg": 50, "r90": 50, "absolute_converg": 50, "prod_": [50, 56, 59, 76, 91, 169, 208], "respons": [50, 51, 100, 101, 114, 184, 231], "diverg": [50, 59, 133, 243, 250], "dirichlet": [50, 59, 218], "r91": 50, "convergence_test": 50, "reverse_ord": 50, "selector": [50, 82, 210, 236], "handi": [50, 51, 87, 198, 269], "s0": [50, 74, 76, 136], "expr_with_intlimit": [50, 78], "exprwithintlimit": [50, 78], "reorder_limit": 50, "r92": 50, "walli": 50, "w2": [50, 138], "w2e": 50, "risingfactori": [50, 58, 59, 198, 200], "combsimp": [50, 51, 56], "pe": 50, "gammasimp": [50, 51, 210], "rewrit": [50, 51, 53, 56, 57, 59, 76, 78, 81, 94, 101, 161, 194, 205, 206, 207, 210, 214, 215, 216, 217, 218, 254, 255, 268, 270], "r93": 50, "r94": 50, "capital_pi_not": 50, "r95": 50, "empty_product": 50, "r96": 50, "infinite_product": 50, "r97": 50, "expr_with_limit": [50, 78], "exprwithlimit": [50, 78], "change_index": 50, "trafo": 50, "newvar": 50, "mapsto": [50, 76, 82, 193], "p3": [50, 61, 63, 64, 66, 67, 101, 184, 188, 207, 218], "has_empty_sequ": [50, 78], "has_reversed_limit": [50, 78], "has_finite_limit": [50, 78], "____": [50, 55, 78, 136, 186, 199, 218, 236, 275], "___": [50, 55, 78, 79, 87, 186, 210, 218, 223, 236, 273], "rubric": [50, 51], "_____": [50, 218], "gosper": 50, "gosper_norm": 50, "monic": [50, 185, 186, 189, 191, 193, 194, 197], "gcd": [50, 51, 52, 87, 91, 160, 188, 189, 190, 192, 193, 194, 198, 210, 211], "gosper_term": 50, "s_n": [50, 194], "f_k": [50, 126, 191], "g_n": [50, 56, 194], "f_n": [50, 56, 59, 185, 191, 194, 214], "gosper_sum": 50, "r98": 50, "marko": 50, "petkovsek": [50, 216], "herbert": 50, "doron": 50, "zeilberg": [50, 216], "ak": [50, 200], "peter": [50, 56, 91, 130, 180, 236], "ltd": 50, "welleslei": 50, "usa": [50, 192], "1997": [50, 76, 91, 192, 208], "convert_xor": [51, 93], "09": [51, 99], "2e": 51, "xor": [51, 54, 81, 93, 198, 266], "sympifyerror": 51, "coerc": [51, 128, 191], "cooper": 51, "sage": [51, 91, 183, 268], "shouldn": [51, 195], "unsanit": [51, 237, 263], "bitcount": 51, "improperli": 51, "unbound": [51, 223], "ns": 51, "fallback": [51, 79, 164, 178, 188, 198, 216], "ast": [51, 198, 255], "00000000000000": [51, 55, 165, 198, 218], "mylist1": 51, "mylist": 51, "mylist2": 51, "xxx": [51, 78, 87, 236, 238], "autosimplif": [51, 207, 210], "kern": 51, "r101": 51, "7649": 51, "r100": 51, "r104": 51, "r102": 51, "r103": 51, "r105": 51, "r106": 51, "r107": 51, "r99": 51, "recreat": 51, "isfinit": 51, "__cacheit": 51, "maxsiz": 51, "noqa": [51, 79, 189, 232], "f811": 51, "sympy_use_cach": 51, "cot": [51, 58, 59, 93, 195, 198, 207], "_arg": [51, 57], "as_mut": [51, 83, 84], "as_content_primit": [51, 87, 186, 194], "stub": 51, "as_dummi": [51, 78], "_0": [51, 76, 82, 87, 194, 237], "_r": [51, 164, 208, 217], "bound_symbol": [51, 78], "besid": [51, 191, 216], "typeinfo": 51, "truli": [51, 59, 169], "piec": [51, 55, 208, 231], "scan": 51, "appliedundef": 51, "canonical_vari": 51, "class_kei": 51, "sorted_class": 51, "dummy_eq": 51, "eg": [51, 114, 171, 217], "fromit": 51, "has_fre": 51, "exp_polar": [51, 58, 59, 208], "dif": 51, "_prec": 51, "xreplac": [51, 82, 87, 174], "q_": [51, 178, 211, 214], "r_": [51, 103, 165, 195], "repl_dict": 51, "rcall": [51, 53], "simul": [51, 114, 131, 197], "abus": [51, 224], "succe": [51, 76, 81, 91, 154, 193, 205], "newtyp": 51, "intuit": [51, 169, 202, 214], "is_mul": 51, "is_add": [51, 217], "mysin": [51, 237, 263], "_eval_rewrite_as_": 51, "_eval_rewrite_as_co": 51, "tie": [51, 236], "delai": [51, 99, 128, 207, 229, 264], "unsort": [51, 105, 173], "333333333333333333333": 51, "333333333333333314830": 51, "wildcard": [51, 210], "registri": 51, "metaprogram": 51, "address": [51, 198, 217], "mostli": [51, 57, 78, 87, 131, 159, 181, 185, 197, 198, 208, 216, 273], "__truediv__": [51, 189], "class_nam": 51, "mysingleton": 51, "_eval_is_g": 51, "_eval_is_eq": 51, "args_cnc": 51, "cset": 51, "split_1": 51, "suppress": [51, 93, 227, 234], "as_coeff_add": 51, "dep": [51, 214], "as_coeff_expon": 51, "as_coeffici": 51, "zz": [51, 56, 73, 74, 78, 84, 87, 88, 91, 111, 182, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 213], "coeff_monomi": [51, 194], "polytool": [51, 194, 217], "monomi": [51, 78, 81, 91, 186, 188, 189, 190, 191, 197, 198, 274], "as_coefficients_dict": 51, "inquiri": 51, "121": [51, 56, 91, 101, 174, 216], "84": [51, 55, 91], "separatevar": [51, 209, 214], "n3": [51, 114], "as_leading_term": [51, 205], "logx": [51, 205], "cdir": 51, "_eval_as_leading_term": 51, "as_numer_denom": [51, 216], "as_ordered_factor": 51, "as_ordered_term": 51, "as_powers_dict": 51, "lost": 51, "as_real_imag": [51, 57, 82, 199], "as_term": 51, "aseri": 51, "hir": 51, "asymptot": [51, 76, 101, 264], "hierarch": 51, "normalis": [51, 200], "induc": [51, 82, 193, 207, 236], "gruntz": [51, 200], "majorli": 51, "mrv": [51, 205], "overal": [51, 171, 184, 216], "rapidli": [51, 55, 76, 205], "till": [51, 94, 95, 114, 214], "r108": 51, "dominik": [51, 200], "proc": [51, 216], "1993": [51, 192], "symp": 51, "239": 51, "244": [51, 191], "r109": 51, "p90": 51, "r110": 51, "asymptotic_expans": 51, "_first": [51, 57], "distribute_order_term": [51, 210], "compute_leading_term": 51, "could_extract_minus_sign": 51, "signsimp": [51, 122, 210], "failing_express": 51, "modulu": [51, 52, 54, 59, 61, 67, 82, 91, 94, 95, 185, 189, 191, 193, 194, 197, 217], "power_bas": [51, 82], "power_exp": [51, 82], "multinomi": [51, 82, 91, 218], "expr_free_symbol": 51, "extract_addit": 51, "extract_multipl": 51, "extract_branch_factor": 51, "allow_half": 51, "fourier_seri": [51, 201], "hyper": [51, 56, 59, 70, 73, 198, 200, 208, 210, 216, 218, 274], "geto": 51, "getn": 51, "is_algebraic_expr": 51, "is_rational_funct": 51, "r111": 51, "algebraic_express": 51, "is_const": 51, "constanc": 51, "agre": [51, 52, 59, 66, 76, 208], "test_expr": 51, "prove": [51, 76, 78, 87, 185, 205, 214, 248], "failing_numb": 51, "is_meromorph": 51, "meromorph": [51, 59], "multivalu": [51, 57], "cut": [51, 56, 57, 59, 67, 76, 185, 208, 233, 239, 274], "hit": [51, 269], "is_polynomi": 51, "rational_funct": 51, "leadterm": 51, "xlim": [51, 184], "lseri": 51, "exaxmpl": 51, "nseri": 51, "_eval_nseri": 51, "innermost": 51, "disadvantag": 51, "met": [51, 211, 217, 232, 274], "nsimplifi": [51, 55, 209], "ratsimp": [51, 209], "removeo": [51, 131, 198, 264], "chop": [51, 55, 59, 82, 87, 216, 263], "123": [51, 56, 61, 81, 161, 174, 236, 243, 244], "lazi": [51, 84, 194], "smooth": [51, 55, 91, 200], "taylor_term": [51, 57], "previous_term": [51, 57], "dummy_index": 51, "temporari": [51, 230], "_dummy_10": 51, "contigu": [51, 208, 231], "x4": [51, 56, 188], "x5": [51, 56, 188], "x6": [51, 188], "x7": [51, 188], "x8": [51, 188], "x9": [51, 188], "x50": 51, "x51": 51, "y0": [51, 70, 72, 74, 214], "y1": [51, 131], "y2": [51, 131, 188], "y3": [51, 188], "y4": 51, "xa": [51, 186, 191], "xb": [51, 239], "xc": [51, 163, 239], "disambigu": 51, "x01": 51, "x02": 51, "x11": 51, "x12": 51, "escap": [51, 93, 184, 198, 239], "newli": [51, 76, 208], "undefinedfunct": [51, 176, 198, 230, 237], "f821": [51, 232], "cofactor": [51, 87, 189, 191, 194], "lcm": [51, 91, 189, 190, 191, 194, 198], "50000000000000": [51, 55], "100000000000000000000": 51, "1e20": 51, "00000000000000e": 51, "23456789123456789": 51, "23456789123457": 51, "00100": 51, "sent": [51, 78, 210], "789": [51, 91], "123_456": 51, "123456789": 51, "12e": 51, "012": 51, "60e2": 51, "6000": 51, "600e": 51, "125": [51, 55, 78, 91, 189, 204, 211], "099609": 51, "12500": 51, "12500000000000000000": 51, "closest": [51, 64], "5404319552844595": 51, "54": [51, 87, 95, 191, 197, 236], "29999999999999998890": 51, "30000000000000000000": 51, "_mpf_": [51, 188], "4915": 51, "70": [51, 52, 68, 78, 87, 91, 197, 198, 211, 218, 239], "307": 51, "mpf": [51, 188, 189], "is_float": 51, "unprejud": 51, "3602879701896397": 51, "18014398509481984": [51, 210], "limit_denomin": 51, "320": 51, "75": [51, 54, 218, 243], "use_tri": [51, 91], "use_rho": [51, 91], "use_pm1": [51, 91], "factorint": [51, 91, 193, 194, 233], "trial": [51, 91, 191, 203, 207, 214, 218], "max_denomin": 51, "1000000": [51, 91], "141592653589793": 51, "311": [51, 91], "discard": [51, 193, 198, 217], "99999999999999999999": 51, "hookrightarrow": 51, "minpoli": [51, 188, 189, 193], "dmp": [51, 185, 189, 190, 194], "complexrootof": [51, 87, 189, 194, 214], "anp": [51, 188, 189, 193, 194], "to_list": [51, 187, 189], "crootof": [51, 194, 214, 216], "minpoly_of_el": 51, "414213562": 51, "scratch": [51, 169], "6x": [51, 191], "to_number_field": [51, 193], "to_root": 51, "primitive_el": [51, 188, 189, 193], "knew": [51, 274], "golden": [51, 55, 91], "5th": [51, 131, 191, 193], "cyclotom": [51, 189, 190, 191, 192, 193, 194], "cyclotomic_poli": [51, 193, 194], "61803398874989": 51, "2i": 51, "a6": 51, "a6_wrong": 51, "309016994374947": 51, "951056516295154": 51, "field_el": 51, "is_alias": 51, "is_primitive_el": 51, "native_coeff": 51, "nativ": [51, 101, 189, 194, 229], "to_algebraic_integ": 51, "to_primitive_el": 51, "Its": [51, 57, 67, 131, 162, 191, 198, 206], "a_prim": 51, "number_cl": 51, "greatest": [51, 56, 61, 91, 186, 188, 189, 191, 192, 194, 197], "euclid": [51, 191, 192], "r112": 51, "euclidean_algorithm": 51, "r113": 51, "r114": 51, "1_": 51, "28number": 51, "r115": 51, "88": [51, 87, 91], "921_": 51, "r116": 51, "one_half": 51, "holder": 51, "ieee": [51, 52], "754": 51, "r117": 51, "affin": [51, 52, 66, 185], "compactif": 51, "r118": 51, "tild": [51, 57, 219], "undetermin": [51, 87, 194, 200, 214, 216], "phase": [51, 78, 99, 133, 136, 138, 148, 149, 217], "718281828": 51, "napier": 51, "r119": 51, "e_": [51, 56, 87], "28mathematical_const": 51, "r120": 51, "imaginary_unit": [51, 198], "141592654": 51, "circumfer": [51, 61], "diamet": [51, 61], "area": [51, 61, 63, 67, 68, 94, 95, 250], "is_irr": 51, "r121": 51, "mascheroni": [51, 59], "5772157": 51, "recur": 51, "harmon": [51, 58, 91, 103, 143, 183, 198, 259], "lim": [51, 205, 264], "limits_": [51, 183, 200, 268], "ln": [51, 57, 78, 198, 200, 214, 218, 274], "r122": 51, "93mascheroni_const": 51, "91596559": 51, "r123": 51, "27s_constant": 51, "r124": 51, "golden_ratio": 51, "tribonacci": [51, 58], "fibonacci": [51, 55, 58, 91], "predetermin": [51, 229], "8392867552141611326": 51, "r125": 51, "generalizations_of_fibonacci_numb": [51, 56], "tribonacci_numb": [51, 56], "modulo": [51, 52, 88, 91, 160, 185, 187, 188, 189, 191, 193, 194, 195, 197, 198, 201, 210], "r126": 51, "modular_multiplicative_invers": 51, "r127": 51, "extended_euclidean_algorithm": 51, "oscil": [51, 259], "conform": [51, 217, 222, 223], "r128": 51, "r129": 51, "zero_to_the_power_of_zero": 51, "r130": 51, "indeterminate_form": 51, "as_base_exp": [51, 57, 58, 236], "floor": [51, 58, 91, 188, 189, 198, 218], "geq": [51, 52, 59, 87, 194, 211, 218, 274], "factor_": [51, 52, 91, 194, 211], "perfect_pow": [51, 91], "infix": 51, "matmul": [51, 84, 187], "as_coef_mul": 51, "undesir": [51, 105, 114, 128, 186, 189, 208], "4596": 51, "compound": [51, 119, 162, 202, 256], "5728": 51, "suspect": [51, 91], "5706": 51, "moot": 51, "off": [51, 61, 76, 82, 90, 92, 116, 125, 148, 185, 194, 198, 214, 229, 240, 243, 268], "nb": 51, "sensit": [51, 101, 131, 184, 191, 210, 229], "assocop": 51, "quadrat": [51, 52, 78, 91, 185, 189, 193, 194, 211, 216, 218], "matadd": [51, 84, 198], "as_coef_add": 51, "extract_leading_ord": 51, "commutative_part": 51, "noncommutative_part": 51, "order_symbol": 51, "subprocess": [51, 198, 229, 230], "dividend": [51, 189], "rop": 51, "validrelationoper": 51, "rel_op": 51, "fourth": [51, 52, 186, 214, 264], "my_equ": 51, "my_inequ": 51, "reversedsign": 51, "_eval_eq": 51, "respond": 51, "boolalg": [51, 81], "client": [51, 233], "counterpart": [51, 52, 214, 264], "litter": 51, "oddbal": 51, "minor": [51, 61, 87, 198, 229], "caveat": [51, 194, 254, 261, 266], "succinctli": 51, "coupl": [51, 87, 128, 143, 158, 161], "annoy": 51, "succinct": 51, "occasion": 51, "r131": 51, "operar": 51, "circuit": [51, 148, 151], "greaterthanobject": 51, "__bool__": 51, "335": 51, "march": 51, "2012": 51, "r132": 51, "r133": 51, "r134": 51, "mdarg": 51, "fgh": 51, "vsin": 51, "vdiff": 51, "narg": [51, 191], "naturals0": [51, 198, 217, 218], "evalul": 51, "fairli": [51, 59, 76, 116, 124, 173, 185], "conserv": [51, 109, 127, 175, 245, 250, 251], "136": [51, 87], "indirect": [51, 53, 59, 91, 164, 214], "implic": [51, 81, 191], "fx": [51, 53, 184, 214, 215], "fxx": 51, "insconsist": 51, "presenc": [51, 57, 81, 113, 118, 128, 214, 222], "nonvanish": 51, "_diff_wrt": 51, "_sort_variable_count": 51, "vc": 51, "vsort": 51, "collaps": [51, 158, 210], "vsort0": 51, "vi": 51, "dfx": 51, "equidist": 51, "sq2": 51, "xl": 51, "d2fdxdy": 51, "doit_numer": 51, "z0": [51, 205], "unifi": [51, 132, 187, 189, 190, 191, 193, 194, 206], "zeroth": [51, 193], "idiff": [51, 68], "r135": 51, "legaci": [51, 78, 87, 218], "v5_2": 51, "infunct": 51, "algebraiccomput": 51, "f_real": [51, 58], "f_real_inherit": [51, 58], "is_singular": [51, 58, 74], "holomorph": [51, 58, 76], "superfici": 51, "unexpect": [51, 229], "ss": [51, 189], "denom": [51, 188, 189, 193, 210], "_eval_expand_bas": 51, "_eval_expand_complex": 51, "shut": [51, 194], "unwant": [51, 216, 236], "alphabet": [51, 52, 101, 169, 186, 211, 231], "expand_hint": 51, "_eval_expand_hint": 51, "liabl": [51, 81], "metahint": 51, "myclass": 51, "_eval_expand_doubl": 51, "hyperexpand": [51, 59, 73, 76, 208], "div": [51, 186, 188, 189, 194, 198, 210, 269], "horner": [51, 131, 191, 194], "untouch": 51, "dkei": 51, "mixin": [51, 236], "maxn": [51, 55, 82], "subresult": [51, 189, 192, 194], "000100000000000000": 51, "maxprec": 51, "quadratur": [51, 55, 78, 214], "tanh": [51, 55, 58, 78, 195, 198, 210, 274], "oscillatori": [51, 55, 203], "osc": [51, 55], "advers": 51, "1e16": 51, "291": 51, "builtin": [51, 189, 198, 206, 239, 273], "speedup": [51, 87, 92, 191, 195, 237], "framework": [51, 114, 124, 223, 229, 231, 237], "slice": [51, 81, 82, 87, 93, 189, 194, 204, 206, 210, 219, 236], "parametris": [51, 206], "element_kind": [51, 82, 206], "tuple_count": 51, "setkind": [51, 82, 256], "isprimit": 51, "_gcd_term": 51, "terms_gcd": [51, 189, 194], "entiti": [51, 61, 64, 65, 67, 68, 76, 114, 129, 179, 217, 251, 260, 270], "arguement": 51, "broad": [51, 269], "lex": [51, 79, 178, 186, 188, 189, 191, 194, 195, 197, 198, 210], "grlex": [51, 79, 178, 189, 194, 197, 198], "grevlex": [51, 79, 178, 186, 191, 194, 197, 198], "rev": 51, "unaffect": [51, 217], "_node": 51, "fastest": [51, 56, 78, 91, 92, 195], "undecor": 51, "ineffici": [51, 87, 188], "breaker": 51, "hash": [51, 189, 191, 199, 210, 214, 229, 231], "collis": [51, 90], "wast": [51, 88, 187], "rng": 51, "getstat": 51, "intention": 51, "tn": 51, "td": [51, 198, 273], "randrang": 51, "999": [51, 55], "238": [51, 91], "randint": [51, 87, 191], "ri": [51, 198], "rv": [51, 207, 218, 236], "nonbas": 51, "postord": 51, "descend": [51, 185, 193, 231], "children": [51, 52, 188, 233], "subtre": [51, 198, 233], "educ": [52, 87], "cryptograph": 52, "encrypt": 52, "hide": [52, 198], "cipher": 52, "vigener": 52, "hill": [52, 59, 109, 130, 174, 180, 243], "bifid": 52, "rsa": 52, "kid": 52, "feedback": [52, 98, 101, 267], "elgam": 52, "plaintext": [52, 198], "ciphertext": 52, "monoalphabet": 52, "polyalphabet": 52, "crypto": 52, "az": [52, 211], "uppercas": [52, 208], "hello": [52, 236], "world": [52, 97, 118, 128, 236], "helloworld": 52, "check_and_join": 52, "padded_kei": 52, "puppi": 52, "opqrstuvwxi": 52, "puyoqrstvwx": 52, "artist": 52, "aphras": 52, "ara": 52, "hp": 52, "cycle_list": 52, "encipher_shift": 52, "msg": [52, 78], "decipher_shift": 52, "gonavybeatarmi": 52, "ct": [52, 80, 191], "hpobwzcfbubsnz": 52, "deciph": 52, "l1": [52, 61, 63, 64, 108, 111, 117, 129, 189, 191, 194, 211, 218], "l2": [52, 63, 64, 108, 111, 117, 150, 166, 189, 191, 218], "caesar": 52, "juliu": 52, "suetoniu": 52, "protect": [52, 198], "militari": 52, "nephew": 52, "augustu": 52, "reportedli": 52, "r136": 52, "caesar_ciph": 52, "r137": 52, "caesarsmethod": 52, "encipher_rot13": 52, "rot13": 52, "caeser": 52, "midwai": 52, "decipher_rot13": 52, "r138": 52, "decrypt": 52, "tbanilorngnezl": 52, "encipher_affin": 52, "_invers": 52, "cx": [52, 95], "recov": [52, 78, 169, 191, 193, 194, 211, 214], "decipher_affin": 52, "r139": 52, "affine_ciph": 52, "reciph": 52, "navi": 52, "beat": 52, "armi": 52, "trobmvenbgbalv": 52, "encipher_atbash": 52, "enciph": 52, "atbash": 52, "hebrew": 52, "decipher_atbash": 52, "tlmzebyvzgzinb": 52, "r140": 52, "encipher_substitut": 52, "oeyag": 52, "034": 52, "60n": 52, "v4b3": 52, "rm4": 52, "immateri": 52, "anyv": 52, "wherebi": 52, "r141": 52, "substitution_ciph": 52, "encipher_vigener": 52, "me": [52, 114, 131, 174, 198, 220], "mondai": 52, "qrgkkthrzqebpr": 52, "krypto": 52, "sculptur": 52, "cia": 52, "headquart": 52, "r143": 52, "decipher_vigener": 52, "alp": 52, "palimpsest": 52, "emufphzlrfaxyusdjkzldkrnshgnfivj": 52, "betweensubtleshadingandtheabsenc": 52, "blais": 52, "sixteenth": 52, "centuri": [52, 185], "diplomat": 52, "accid": [52, 237], "invent": [52, 193, 216, 268], "giovan": 52, "batista": 52, "belaso": 52, "1553": 52, "civil": [52, 94], "war": 52, "confederaci": 52, "brass": 52, "nsa": 52, "museum": 52, "fort": 52, "mead": 52, "r142": 52, "sender": 52, "assembl": [52, 76, 97, 116, 205], "concaten": [52, 82], "frequenc": [52, 78, 99, 101, 138, 140, 148, 165], "kasiski": 52, "discov": [52, 76, 105, 222, 270], "babbag": 52, "unbreak": 52, "ye": [52, 81, 214], "gonavybeatarmyyesyoucan": 52, "gold": 52, "auto_kei": 52, "goldbuggonavybeatarmyy": 52, "mcydwshkogamkzcelyfgayr": 52, "pt": [52, 60, 61, 62, 64, 65, 66, 67, 204], "vigenere_ciph": 52, "archiv": [52, 130, 211], "20071116100808": 52, "r144": 52, "filebox": 52, "vt": 52, "batman": 52, "goo": 52, "gl": 52, "ijr22d": 52, "decod": 52, "qrgk": 52, "kt": [52, 119], "hrzqe": 52, "bpr": 52, "meetmeonmondai": 52, "encipher_hil": 52, "z_": [52, 210], "r145": 52, "lester": 52, "1920": 52, "r146": 52, "polygraph": 52, "bare": [52, 109], "ceil": [52, 58, 91, 108, 198], "l_1": [52, 56, 102, 183, 208, 224], "l_t": 52, "c_t": 52, "l_i": [52, 183, 208], "decipher_hil": 52, "hill_ciph": 52, "june": [52, 87], "juli": [52, 211], "1929": 52, "306": 52, "312": [52, 174, 216, 243, 244], "ueqdueodoctcwq": 52, "st": [52, 78, 164], "hjeb": 52, "stqq": 52, "ispk": 52, "stzz": 52, "hd": 52, "ormv": 52, "IS": 52, "uiki": 52, "encipher_bifid": 52, "polybiu": 52, "printabl": 52, "bifid5": 52, "decipher_bifid": 52, "encipher_bifid5": 52, "encipher_bifid6": 52, "r147": 52, "bifid_ciph": 52, "ieilhhfstsfqy": 52, "ieilh": 52, "hfst": 52, "fqyej": 52, "bmtwmg": 52, "bio": 52, "gold_bug": 52, "hg2sfuei7t": 52, "pug": 52, "heldo": 52, "wor6d": 52, "bifid5_squar": 52, "5x5": 52, "cap": [52, 55, 164, 206, 217], "tradition": [52, 59], "decipher_bifid5": 52, "round_trip": 52, "josi": 52, "osi": 52, "iosi": 52, "qiq": 52, "1901": 52, "felix": 52, "delastel": 52, "onto": [52, 64, 65, 66, 76, 80, 87, 90, 92, 193], "helen": 52, "cryptanalysi": 52, "german": 52, "fridai": 52, "ieilehfstsfxe": 52, "okai": 52, "decipher_bifid6": 52, "8am": 52, "kfkljjhf5mmmktfrgpl": 52, "meetmeonmondayat8am": 52, "bifid6_squar": 52, "6x6": 52, "rsa_public_kei": 52, "totient": [52, 91], "carmichael": [52, 91], "p_n": [52, 56, 59, 78], "multiprim": 52, "land": 52, "rad": [52, 99, 114, 193], "reduced_toti": [52, 91], "uniquenss": 52, "rsa_private_kei": 52, "e_0": 52, "canonicalz": 52, "61": [52, 56, 67, 87, 91, 200], "3233": 52, "797": 52, "1577": 52, "multipow": 52, "cryptosystem": 52, "coprim": [52, 78, 91, 160, 191, 211], "30030": 52, "becam": [52, 124], "hardest": 52, "claim": [52, 182, 208, 217], "encipher_rsa": 52, "decipher_rsa": 52, "r148": 52, "rsa_": 52, "28cryptosystem": 52, "r149": 52, "cacr": 52, "uwaterloo": 52, "techreport": 52, "2006": [52, 207], "cacr2006": 52, "r150": 52, "springer": [52, 78, 91, 191, 192, 214], "1007": 52, "2fbfb0055738": 52, "r151": 52, "itii": 52, "manuscript": 52, "1381": 52, "2753": 52, "413": 52, "1193": 52, "823": 52, "r152": 52, "r153": 52, "r154": 52, "r155": 52, "bmod": [52, 198], "vice": [52, 78, 91, 94, 154, 174, 185, 189, 246, 247, 266], "versa": [52, 78, 91, 94, 154, 174, 185, 189, 246, 247, 266], "asymmetr": [52, 67], "puk": 52, "prk": 52, "chines": [52, 91, 191], "k_1": [52, 91, 191, 208], "k_2": 52, "k_n": [52, 191], "p_3": [52, 181], "k_3": 52, "moduli": [52, 91, 191], "2048": [52, 91, 198], "overhead": [52, 92, 195], "modular": [52, 91, 160, 190, 192, 217], "crt": [52, 91, 191], "overcompens": 52, "theorit": 52, "new_msg": 52, "kid_rsa_public_kei": 52, "grade": [52, 79, 178, 194], "school": [52, 207], "bob": [52, 108], "369": 52, "58": [52, 87, 224], "kid_rsa_private_kei": 52, "encipher_kid_rsa": 52, "200": [52, 82, 87, 91, 94, 99, 243], "161": 52, "decipher_kid_rsa": 52, "pub": [52, 243], "pri": 52, "encode_mors": 52, "sep": [52, 198, 215, 229], "mors": 52, "attack": 52, "flank": 52, "r156": 52, "morse_cod": 52, "decode_mors": 52, "word_sep": 52, "mc": [52, 119], "east": 52, "r157": 52, "lfsr_sequenc": 52, "lfsr": 52, "c_k": 52, "golomb": [52, 91], "g157": 52, "autocorrel": 52, "lim_": [52, 57, 59, 76, 78, 205, 264, 268], "balanc": [52, 130, 185, 218, 229], "solomon": 52, "aegean": 52, "park": 52, "laguna": 52, "1967": [52, 192], "lfsr_autocorrel": 52, "lfsr_connection_polynomi": 52, "massei": 52, "m158": 52, "jame": [52, 191], "synthesi": 52, "bch": 52, "tran": 52, "122": [52, 54, 59], "127": [52, 91], "elgamal_public_kei": 52, "elgamal_private_kei": 52, "1031": 52, "636": 52, "212": [52, 78, 192], "mathmat": 52, "dlp": 52, "is_primitive_root": [52, 91], "encipher_elgam": 52, "c2": [52, 61, 68, 82, 84, 150, 164, 206, 214, 216, 218, 245, 248, 275], "encryp": 52, "decipher_elgam": 52, "eucliden": 52, "dh_public_kei": 52, "dh_private_kei": 52, "_p": [52, 164, 189, 191, 193, 205, 208, 216], "_g": 52, "diffi": 52, "hellman": [52, 91], "publicli": 52, "secretli": 52, "dh_shared_kei": 52, "sk": 52, "gm_public_kei": 52, "goldwass": 52, "micali": 52, "gm_private_kei": 52, "b_n": [52, 56, 80, 185, 201], "jacobi_symbol": [52, 91], "reconstruct": [52, 87, 191, 269], "residuos": 52, "entropi": [52, 218], "encipher_gm": 52, "public_kei": 52, "gm": [52, 167], "decipher_gm": 52, "encipher_railf": 52, "rail": 52, "railfenc": 52, "horel": 52, "ollwd": 52, "r160": 52, "rail_fence_ciph": 52, "decipher_railf": 52, "diffgeom": 53, "resembl": [53, 59, 78, 223], "euclidean": [53, 64, 66, 174, 189, 191, 194], "r161": 53, "chart": [53, 184], "parameter": [53, 60, 61, 64, 67, 211], "r162": 53, "sussman": 53, "wisdom": 53, "farr": 53, "2013": [53, 63, 82, 272], "tranform": 53, "cartesian": [53, 94, 132, 137, 151, 154, 159, 179, 184, 185, 206, 217, 236, 246, 247, 249, 250], "polar": [53, 57, 59, 61, 67, 77, 94, 103, 134, 184, 206, 210, 217, 259], "relation_dict": 53, "car2d": 53, "pol": 53, "coordinatesymbol": 53, "jacobian": [53, 87, 128, 216], "jacobian_determin": 53, "r163": 53, "coordinate_system": 53, "base_oneform": 53, "coord_index": 53, "oneform": 53, "base_scalar": 53, "basescalarfield": 53, "base_vector": [53, 243], "coord_funct": 53, "to_si": 53, "coord": [53, 66, 68, 105, 162, 177], "immutabledensematrix": [53, 82, 83, 84, 85, 218], "rn": 53, "r2_r": 53, "r2_p": 53, "jacobian_matrix": 53, "point_to_coord": 53, "coord_si": [53, 245], "imbu": 53, "difficulti": [53, 115], "arriv": [53, 191, 208, 210, 214, 218, 274], "inappropri": 53, "poin": 53, "unappropri": 53, "fy": [53, 184, 215], "ftheta": 53, "basevectorfield": 53, "point_p": 53, "point_r": 53, "s_field": 53, "dxi": 53, "v1": [53, 64, 87, 111, 131, 174, 175, 177, 218, 237, 243, 245, 246, 247, 248], "v2": [53, 64, 87, 111, 174, 175, 177, 237, 243, 245, 246, 247, 248], "v_1": [53, 193, 216], "v_2": [53, 193], "e_x": [53, 224], "e_i": [53, 185, 208, 224], "e_r": 53, "c_xy": 53, "c_xr": 53, "unfortun": [53, 55, 92, 197, 211], "e_rho": 53, "form_field": 53, "exterior": [53, 67], "dg": 53, "tensorproduct": [53, 161, 163, 219, 220], "multilinear": 53, "wedg": [53, 76], "tp1": 53, "tp": [53, 136, 163, 189], "wedgeproduct": 53, "wp1": 53, "liederiv": 53, "v_field": 53, "transport": 53, "pushforward": 53, "e_theta": 53, "basecovarderivativeop": 53, "christoffel": 53, "metric_to_christoffel_2nd": 53, "ch": [53, 87, 211], "cvd": 53, "covarderivativeop": 53, "intcurve_seri": 53, "vector_field": [53, 249], "start_point": 53, "dt": [53, 59, 118, 131, 173, 174, 176, 181, 182, 214, 274], "f_i": [53, 76, 87, 191, 195], "movement": 53, "intcurve_diffequ": 53, "init_cond": 53, "f_1": [53, 56, 59, 76, 101, 110, 113, 132, 185, 191, 194, 214], "f_0": [53, 56, 110, 191], "vectors_in_basi": 53, "kept": [53, 166, 182, 236, 269], "twoform_to_matrix": 53, "twoform": 53, "e_j": 53, "metric_to_christoffel_1st": 53, "levi": [53, 59, 218, 224], "civita": [53, 59, 224], "metric_to_riemann_compon": 53, "riemann": [53, 56, 57, 58, 76, 185, 210, 224], "non_trivial_metr": 53, "dtheta": 53, "drho": 53, "metric_to_ricci_compon": 53, "ricci": 53, "fft": [54, 131], "ifft": 54, "ntt": 54, "intt": 54, "fwht": 54, "ifwht": 54, "mobius_transform": 54, "inverse_mobius_transform": 54, "convolution_fft": 54, "convolution_ntt": 54, "convolution_fwht": 54, "convolution_subset": 54, "covering_product": 54, "intersecting_product": 54, "radix": 54, "r164": 54, "coolei": 54, "93tukey_fft_algorithm": 54, "r165": 54, "fastfouriertransform": 54, "r166": 54, "r167": 54, "ring": [54, 74, 87, 88, 181, 186, 187, 190, 191, 193, 194, 195, 196, 197, 198, 236], "pz": [54, 99, 224], "643": [54, 91], "767": 54, "387": 54, "415": 54, "384": 54, "353": [54, 87], "r168": 54, "apfloat": 54, "r169": 54, "numbertheoretictransform": 54, "r170": 54, "discrete_fourier_transform_": 54, "r171": 54, "r172": 54, "r173": 54, "wht": 54, "r174": 54, "hadamard_transform": 54, "r175": 54, "fast_walsh": 54, "93hadamard_transform": 54, "r176": 54, "r177": 54, "mobiu": [54, 91], "lattic": [54, 211], "bitmask": 54, "r178": 54, "b6bius_inversion_formula": 54, "r179": 54, "csail": 54, "mit": 54, "rrw": 54, "conv": 54, "r180": 54, "arxiv": [54, 87, 103, 236], "1211": 54, "0189": 54, "r181": 54, "r182": 54, "r183": 54, "888": 54, "444": 54, "1283": 54, "19351": 54, "14219": 54, "15502": 54, "44": [54, 56, 87, 91, 207, 218], "41": [54, 61, 87, 91, 189, 211], "63": [54, 87, 91], "r184": 54, "convolution_theorem": 54, "r185": 54, "333": [54, 91], "555": 54, "222": 54, "666": 54, "15555": 54, "19404": 54, "r186": 54, "r187": 54, "56": [54, 78, 91, 194], "68": [54, 79, 87, 91, 211], "48": [54, 61, 95, 211, 216, 218, 264], "2057": 54, "1870": 54, "r188": 54, "radioeng": 54, "cz": [54, 211], "fulltext": 54, "2002": [54, 185, 192, 195], "02_03_40_42": 54, "r189": 54, "r190": 54, "r191": 54, "AND": [54, 81, 250], "327": [54, 214], "r192": 54, "44288293815837": 55, "4429": 55, "4428829381583662470158809900606936986146216893757": 55, "28902548222223624241": 55, "091999668350375232456": 55, "14159265358979": [55, 59, 216], "333333333333333": [55, 188, 210], "1415926535": 55, "7182818284": 55, "100000": [55, 91, 99], "951": 55, "95678796130331164628399634646042209010610577945815": 55, "gmpy": [55, 188, 189, 273], "googl": [55, 183, 184, 217], "100000000000000": 55, "1000000000": 55, "125000000000000000000000000000": 55, "100000000000000005551115123126": 55, "100000000000000000000000000000": 55, "1415": 55, "uncertainti": [55, 169], "003": 55, "31417": 55, "propag": [55, 64, 135, 138], "5000": [55, 94], "50000000000000000000000000000": 55, "varphi": [55, 59, 193, 198, 214], "erron": 55, "goldenratio": [55, 199, 210], "34665576869e": 55, "208": [55, 194], "64613129282185e": 55, "60123853010113e": 55, "210": [55, 91, 211], "thousand": [55, 91, 263], "precisionexhaust": 55, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 55, "binet": 55, "104": 55, "1336": 55, "portion": [55, 67, 82, 87], "meaningless": 55, "012297": 55, "9562288417661": 55, "956": 55, "29128599706266": 55, "2912859970626635404072825905956005414986193682745": 55, "14159265358979323846264338328": 55, "integrand": [55, 59, 75, 76, 78, 208], "struggl": [55, 197], "346": 55, "34635637913639": 55, "dealt": [55, 76], "504067061906928": 55, "50406706190692837199": 55, "wrap_lin": [55, 78, 79, 87, 95, 178, 185, 186, 197, 198, 214], "intgrl": 55, "extrapol": [55, 205], "richardson": [55, 205, 217], "slowli": [55, 205], "64493406684823": 55, "577215664901533": 55, "57721566490153286060651209008240243104215933593992": 55, "10000000": [55, 194], "20000000": [55, 194], "693147255559946": 55, "tune": [55, 79, 178, 198], "worthwhil": 55, "hypergeometr": [55, 56, 58, 69, 71, 75, 76, 192, 202, 209, 214, 216, 218, 254, 274], "ramanujan": [55, 56, 91], "9801": 55, "1103": 55, "26390": 55, "396": [55, 114], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 55, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 55, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 55, "355": [55, 91, 192], "113": [55, 91, 211], "33333": [55, 78], "635": 55, "504": [55, 192], "130198866629986772369127970337": 55, "49": [55, 56, 91, 95, 191, 211], "___________": [55, 95, 214], "k_sym": 56, "binom": [56, 91, 218, 274], "dotsc": [56, 200], "j_1": [56, 143, 144, 161, 183, 200, 219], "j_2": [56, 143, 144, 161, 183, 200], "dotsb": [56, 200], "atop": [56, 59, 200, 208], "2j_2": [56, 200], "3j_2": [56, 200], "j_": [56, 59, 76, 78, 161, 200, 208, 268], "877": 56, "4140": 56, "21147": 56, "115975": 56, "846749014511809332450147": 56, "r193": 56, "bell_numb": 56, "r194": 56, "bellnumb": 56, "r195": 56, "bellpolynomi": 56, "6k": 56, "66": [56, 82, 87, 198], "1000001": 56, "r196": 56, "bernoulli_numb": 56, "r197": 56, "bernoulli_polynomi": 56, "r198": 56, "bernoullinumb": 56, "r199": 56, "bernoullipolynomi": 56, "_k": [56, 59, 78, 183, 193, 218], "expand_func": [56, 59], "6435": 56, "pascal": [56, 91], "4th": [56, 57, 73, 87, 91, 131], "195": 56, "r200": 56, "johndcook": 56, "binomial_coeffici": [56, 91], "c_n": [56, 59, 80, 214], "429": [56, 198], "1430": 56, "4862": 56, "39764993382373624267": 56, "020884341620842555705": 56, "r201": 56, "catalan_numb": 56, "r202": 56, "catalannumb": [56, 198], "r203": 56, "r204": 56, "geomet": [56, 185], "mathcircl": 56, "2j": [56, 191, 218], "r209": 56, "e_k": [56, 191], "1385": 56, "2702765": 56, "4096": 56, "r205": 56, "euler_numb": 56, "r206": 56, "eulernumb": 56, "r207": 56, "alternating_permut": 56, "r208": 56, "alternatingpermut": 56, "ii": [56, 78, 91, 194, 198, 214], "swing": 56, "derang": [56, 236], "r211": 56, "generate_derang": [56, 236], "r210": 56, "r212": 56, "double_factori": 56, "texttt": [56, 206], "r213": 56, "r214": 56, "paul": [56, 233], "235": 56, "268": 56, "1995": [56, 192, 210, 216], "f_z": [56, 179, 249], "f_2": [56, 76, 101, 110, 113, 132, 191, 208, 214], "r216": 56, "fibonacci_numb": 56, "r217": 56, "fibonaccinumb": 56, "t_0": [56, 211], "149": [56, 91], "r218": 56, "r219": 56, "tribonaccinumb": 56, "r220": 56, "oei": [56, 91], "a000073": 56, "137": [56, 87, 103], "205": [56, 76, 208], "144": [56, 78, 183], "5269": 56, "761": 56, "280": 56, "83711": 56, "27720": 56, "30247": 56, "9900": 56, "983697455232980674869851942390639915940": 56, "r221": 56, "harmonic_numb": 56, "r222": 56, "harmonicnumb": [56, 198], "r223": 56, "harmonicnumber2": 56, "l_0": [56, 102, 224, 225], "47": [56, 59, 87, 91, 103, 137, 169, 197], "76": [56, 87, 91, 191, 194], "r224": 56, "lucas_numb": 56, "r225": 56, "lucasnumb": 56, "2t": 56, "r226": 56, "genocchi_numb": 56, "r227": 56, "genocchinumb": 56, "irrelev": 56, "r228": 56, "number_theori": 56, "r229": 56, "pentagonal_number_theorem": 56, "pochhamm": [56, 198, 210], "r230": 56, "r231": 56, "pochhammer_symbol": 56, "274": 56, "225": [56, 91, 192], "511": 56, "9330": 56, "34105": 56, "42525": 56, "22827": 56, "5880": 56, "750": 56, "r232": 56, "stirling_numbers_of_the_first_kind": 56, "r233": 56, "stirling_numbers_of_the_second_kind": 56, "multiset": [56, 76, 233, 236], "babi": [56, 91, 236], "aa": [56, 183], "bb": [56, 183, 210, 236], "multiset_combin": [56, 236], "aab": [56, 236], "aabc": 56, "aaaabbbbcccc": 56, "m_1": [56, 101, 143, 161, 183, 211], "m_2": [56, 113, 132, 143, 161, 183], "m_k": 56, "r234": 56, "r235": 56, "tinyurl": 56, "cep849r": 56, "ba": [56, 236], "multiset_permut": [56, 236], "r236": 56, "aabbc": 56, "mississippi": [56, 236], "609": 56, "1521": 56, "1768": 56, "1224": [56, 91], "579": 56, "197": 56, "r237": 56, "undergradu": 56, "csse": 56, "uwa": 56, "au": 56, "cits7209": 56, "707106781186548": 57, "negativeon": [57, 269], "tangent": [57, 61, 63, 67, 78, 195, 214], "643501108793284": 57, "r238": 57, "ib": [57, 119], "complex_conjug": 57, "r242": 57, "r239": 57, "trigonometric_funct": 57, "r240": 57, "r241": 57, "elementaryfunct": 57, "trigonometryangl": 57, "r243": 57, "r244": 57, "r245": 57, "r246": 57, "r247": 57, "r248": 57, "cotang": [57, 195], "r249": 57, "r250": 57, "r251": 57, "secant": [57, 194], "r252": 57, "r253": 57, "r254": 57, "cosec": 57, "r255": 57, "r256": 57, "r257": 57, "unnorm": [57, 59], "qquad": [57, 169, 191], "jn": [57, 59, 161, 194, 198, 268], "spheric": [57, 58, 103, 143, 183, 184, 194, 243, 246, 247, 268], "r258": 57, "sinc_funct": 57, "r259": 57, "inverse_trigonometric_funct": 57, "r260": 57, "r261": 57, "r262": 57, "r263": 57, "r264": 57, "r265": 57, "r266": 57, "r267": 57, "arctan": [57, 195, 198], "r268": 57, "r269": 57, "arccot": [57, 198], "r273": 57, "r270": 57, "r271": 57, "r272": 57, "arcsec": [57, 198], "r274": 57, "r275": 57, "r276": 57, "arccsc": [57, 198], "quadrant": [57, 189, 217], "clock": [57, 207], "reurn": 57, "r277": 57, "r278": 57, "r279": 57, "arctan2": 57, "r280": 57, "hyperbolic_funct": 57, "r281": 57, "r282": 57, "arcsech": [57, 198], "imaginaryunit": [57, 198], "r283": 57, "r284": 57, "r285": 57, "arccsch": [57, 198], "567": 57, "r286": 57, "r287": 57, "ceilingfunct": 57, "r288": 57, "r289": 57, "floorfunct": 57, "r290": 57, "lfloor": [57, 189, 217, 218], "rfloor": [57, 189, 217, 218], "fractional_part": 57, "r291": 57, "fractionalpart": 57, "lambert": [57, 78, 195], "r292": 57, "w_k": 57, "635564016364870": 57, "34747534407696": 57, "41624341514535": 57, "lambert_w_funct": 57, "mathcal": [57, 76, 101, 129, 161, 183, 206], "cond": [57, 76, 78, 206], "piecewise_fold": 57, "folded_cond": 57, "ITE": [57, 81], "_eval_integr": [57, 78], "piecewise_integr": 57, "as_expr_set_pair": 57, "antideriv": [57, 59, 78, 214, 264], "conflict": [57, 91, 101, 114, 231], "supremum": [57, 206], "r293": 57, "directed_complete_partial_ord": 57, "r294": 57, "lattice_": 57, "28order": 57, "global_paramet": 57, "rootof": [57, 194], "rootoftool": [57, 87, 194], "integer_nthroot": [57, 91], "r295": 57, "square_root": 57, "r296": 57, "r297": 57, "root_of_un": 57, "r298": 57, "principal_valu": [57, 78], "r299": 57, "cuberoot": 57, "powdenest": 57, "misc": [57, 82, 239, 254], "r300": 57, "r301": 57, "r302": 57, "cube_root": 57, "r303": 57, "polar_lift": [58, 59, 210], "periodic_argu": 58, "principal_branch": [58, 76], "sec": [58, 78, 99, 193, 198, 207, 274], "csc": [58, 93, 198, 207], "acot": [58, 198], "asec": [58, 198], "acsc": [58, 198], "hyperbol": [58, 59, 195, 217, 270, 274], "hyperbolicfunct": 58, "coth": [58, 198, 210], "sech": [58, 198], "csch": [58, 198], "asinh": [58, 198], "acosh": [58, 198], "atanh": [58, 195, 198, 208], "acoth": [58, 198], "asech": [58, 198], "acsch": [58, 198], "roundfunct": 58, "lambertw": [58, 195, 198, 216, 217, 275], "exprcondpair": 58, "miscellan": [58, 235, 260, 261], "identityfunct": 58, "real_root": [58, 194, 216], "bell": [58, 148, 200, 236], "bernoulli": [58, 59, 198, 216, 218], "catalan": [58, 198], "subfactori": [58, 198, 236], "factorial2": [58, 165, 198], "fallingfactori": [58, 198], "luca": [58, 91, 198, 204], "genocchi": 58, "multifactori": 58, "nc": 58, "nt": [58, 236], "fresnel": [58, 137, 198, 208], "airi": [58, 78, 214], "spline": 58, "ellipt": [58, 61, 91, 185], "mathieu": [58, 198], "delta_funct": [59, 78], "int_": [59, 75, 76, 78, 201, 264, 268], "sum_i": [59, 205], "is_simpl": 59, "tensor_funct": 59, "kroneckerdelta": [59, 84, 164, 198, 210], "r304": 59, "deltafunct": [59, 78], "h0": 59, "electron": [59, 103, 207], "signal": [59, 81, 91, 99, 101, 131, 191, 269], "improp": [59, 78], "convolut": [59, 200, 254], "r305": 59, "heavisidestepfunct": 59, "r306": 59, "iv": [59, 195], "105": [59, 91, 194, 211], "parg": 59, "singularity_funct": 59, "singularityfunct": [59, 78, 94], "macaulai": 59, "heavisidediracdelta": 59, "r307": 59, "r308": 59, "r309": 59, "r310": 59, "r311": 59, "setminu": [59, 76], "17805383034794561964694160130": 59, "65092319930185633889": 59, "8724366472624298171": 59, "r312": 59, "r313": 59, "r314": 59, "loggammafunct": 59, "r315": 59, "19093197": 59, "5173168": 59, "ni": [59, 91], "r316": 59, "polygamma_funct": 59, "r317": 59, "polygammafunct": 59, "r318": 59, "r319": 59, "polygamma2": 59, "r320": 59, "digamma_funct": 59, "r321": 59, "digammafunct": 59, "r322": 59, "r323": 59, "trigamma_funct": 59, "r324": 59, "trigammafunct": 59, "r325": 59, "int_x": 59, "_1f_1": 59, "confluent": [59, 208], "xt": 59, "expint": [59, 198], "r326": 59, "incomplete_gamma_funct": 59, "upper_incomplete_gamma_funct": 59, "r327": 59, "r328": 59, "r329": 59, "gamma2": 59, "r330": 59, "gamma3": 59, "r331": 59, "exponential_integr": 59, "relation_with_other_funct": 59, "int_0": [59, 76, 78, 264, 274], "r332": 59, "lower_incomplete_gamma_funct": 59, "r333": 59, "r334": 59, "r335": 59, "r336": 59, "multigamma": 59, "gamma_p": 59, "r337": 59, "multivariate_gamma_funct": 59, "beta_funct": 59, "eulerian": 59, "02671848900111377452242355235388489324562": 59, "2112723729365330143": 59, "7655283165378005676": 59, "r338": 59, "r339": 59, "betafunct": 59, "r340": 59, "error_funct": 59, "999999984582742099719981147840": 59, "1296959": 59, "73071763923152794095062": 59, "r341": 59, "r342": 59, "r343": 59, "r344": 59, "0000000154172579002800188521596734869": 59, "r345": 59, "r346": 59, "r347": 59, "r348": 59, "5648024145755525987042919132": 59, "995322265018952734162069256367": 59, "r349": 59, "r350": 59, "r351": 59, "r352": 59, "179143454621291692285822705344": 59, "r353": 59, "inverse_funct": 59, "r354": 59, "inverseerf": [59, 198], "r355": 59, "r356": 59, "inverseerfc": [59, 198], "r357": 59, "inverseerf2": 59, "fresnelintegr": 59, "343415678363698242195300815958": 59, "fresnelc": [59, 198, 208], "r358": 59, "fresnel_integr": 59, "r359": 59, "r360": 59, "r361": 59, "r362": 59, "wrench": 59, "jr": 59, "vicki": 59, "allei": 59, "488253406075340754500223503357": 59, "r363": 59, "r364": 59, "r365": 59, "r366": 59, "r367": 59, "ei": [59, 76, 193, 198, 208, 214], "background": [59, 79, 124, 178, 181, 272], "cauchi": [59, 76, 78, 189, 214, 218], "219383934395520": 59, "21938393439552": 59, "shi": [59, 76, 198, 208], "e1": [59, 61, 68, 114, 188, 193, 205, 214, 217], "li": [59, 67, 78, 91, 164, 198, 252], "r368": 59, "r369": 59, "r370": 59, "sfu": [59, 78], "cbm": [59, 78], "aand": [59, 78], "page_228": 59, "int_1": [59, 76], "zt": [59, 76], "unbranch": [59, 76], "meijerg": [59, 70, 76, 78, 198, 218, 274], "postiv": 59, "r371": 59, "r372": 59, "expintegral": [59, 198], "r373": 59, "04516378011749278484458888919": 59, "0652795784357498247001125598": 59, "08346052231061726610939702133": 59, "soldner": 59, "findroot": [59, 216], "45136923488338": 59, "r374": 59, "logarithmic_integr": 59, "r375": 59, "logarithmicintegr": 59, "r376": 59, "r377": 59, "soldnersconst": 59, "92242131492155809316615998938": 59, "r378": 59, "r379": 59, "r380": 59, "r381": 59, "trigonometric_integr": 59, "_1": [59, 87, 174, 208, 237], "somewhat": [59, 78, 114, 189], "r382": 59, "r383": 59, "r384": 59, "laurent": [59, 189, 195, 214], "j_n": [59, 161], "r385": 59, "r386": 59, "r387": 59, "r388": 59, "yn": [59, 198, 204], "r389": 59, "i_": [59, 76, 208, 218, 219], "iz": 59, "r390": 59, "k_": [59, 76, 126, 127], "r391": 59, "hankel1": [59, 198], "hankel": [59, 78], "iy_": 59, "hankel2": [59, 198], "r392": 59, "hankelh1": [59, 198], "r393": 59, "hankelh2": [59, 198], "2z": [59, 217, 218], "orthopoli": [59, 194], "spherical_bessel_fn": [59, 194], "3j": [59, 143, 183], "099419756723640344491": 59, "054525080242173562897": 59, "r394": 59, "y_n": [59, 211], "18525034196069722536": 59, "014895573969924817587": 59, "r395": 59, "jn_zero": 59, "besseljzero": 59, "sph_jn": 59, "7635": 59, "095": 59, "323": [59, 91], "515": 59, "marcumq": 59, "marcum": 59, "q_m": 59, "r396": 59, "marcum_q": 59, "r397": 59, "airybas": 59, "airyai": [59, 198, 214], "ai": [59, 91], "airyaiprim": [59, 198], "22740742820168557599192443603787379946077222541710": 59, "airybi": [59, 198, 214], "airybiprim": [59, 198], "r398": 59, "airy_funct": 59, "r399": 59, "r400": 59, "encyclopediaofmath": 59, "r401": 59, "airyfunct": 59, "41230258795639848808323405461146104203453483447240": 59, "r402": 59, "r403": 59, "r404": 59, "r405": 59, "61825902074169104140626429133247528291577794512415": 59, "r406": 59, "r407": 59, "r408": 59, "r409": 59, "27879516692116952268509756941098324140300059345163": 59, "r410": 59, "r411": 59, "r412": 59, "r413": 59, "bspline": 59, "bspline_basi": 59, "knot": 59, "cubic": [59, 185, 194, 211, 216], "bspline_basis_set": 59, "r414": 59, "interpolating_splin": 59, "131": [59, 174], "39": [59, 91, 197], "interpolating_poli": [59, 194], "zeta_funct": 59, "hurwitz": 59, "admit": [59, 214], "circumst": [59, 193, 268], "lerch": 59, "transcend": 59, "lerchphi": [59, 198], "dirichlet_eta": [59, 198], "20205690315959": 59, "polylog": [59, 198], "r415": 59, "r416": 59, "hurwitz_zeta_funct": 59, "r417": 59, "dirichlet_eta_funct": 59, "polylogarithm": 59, "_s": [59, 164], "sheet": [59, 207], "phi_0": 59, "ze": 59, "r418": 59, "bateman": 59, "erdelyi": 59, "1953": [59, 193], "york": [59, 76, 130, 208, 216], "mcgraw": [59, 109, 130, 174, 180, 243], "r419": 59, "r420": 59, "lerch_transcend": 59, "stieltj": [59, 198], "gamma_": [59, 102, 104], "r421": 59, "stieltjes_const": 59, "ap": [59, 63, 208], "bq": [59, 186, 187, 208], "a_p": [59, 76, 208, 274], "b_q": [59, 76, 208, 274], "_pf_q": [59, 208, 214, 274], "unicod": [59, 79, 87, 178, 198, 229, 268], "r422": 59, "r423": 59, "generalized_hypergeometric_funct": 59, "convergence_stat": 59, "radius_of_converg": 59, "radiu": [59, 61, 65, 67, 121, 123, 133, 137, 184, 217, 218, 252], "meijer": [59, 69, 71, 77, 78, 264, 274], "mellin": [59, 77, 78], "barn": 59, "b_m": [59, 76, 216], "confusingli": 59, "int_l": [59, 76, 208], "contour": [59, 61, 76, 184, 208], "__1": 59, "subvector": 59, "aother": 59, "bm": 59, "bother": [59, 269], "slater": [59, 208], "allow_hyp": [59, 210], "subsum": 59, "r424": 59, "r425": 59, "meijer_g": 59, "get_period": [59, 76], "appellf1": [59, 198], "b2": [59, 91, 94, 95, 106, 114, 131, 174, 187, 189, 198, 208, 211, 214, 248], "appel": 59, "0063339426292673": 59, "172870711": 59, "659936": 59, "15605338197184": 59, "r426": 59, "appell_seri": 59, "r427": 59, "hypergeometricfunct": 59, "elliptic_integr": 59, "elliptic_k": [59, 198], "tfrac": [59, 214, 218], "eccentr": [59, 61], "50923695405127": 59, "625146415202697": 59, "elliptic_f": [59, 198], "r428": 59, "r429": 59, "ellipticintegr": 59, "elliptick": [59, 198], "909449841483": 59, "74720545502474": 59, "r430": 59, "r431": 59, "ellipticf": 59, "elliptic_": [59, 61, 198], "55203744279187": 59, "290764986058437": 59, "991052601328069": 59, "81879421395609": 59, "r432": 59, "r433": 59, "elliptice2": 59, "r434": 59, "elliptic": [59, 198], "elliptic_pi": [59, 198], "50232379629182": 59, "760939574180767": 59, "29136443417283": 59, "32555634906645": 59, "r435": 59, "r436": 59, "ellipticpi3": 59, "r437": 59, "ellipticpi": [59, 198], "mathieu_funct": 59, "mathieubas": 59, "mathieusprim": [59, 198], "mathieuc": [59, 198], "mathieucprim": [59, 198], "r438": 59, "r439": 59, "r440": 59, "r441": 59, "mathieuandspheroidalfunct": 59, "r442": 59, "r443": 59, "r444": 59, "r445": 59, "r446": 59, "r447": 59, "r448": 59, "r449": 59, "r450": 59, "r451": 59, "r452": 59, "r453": 59, "chebyshevu": [59, 198], "chebyshevt_root": 59, "chebyshevu_root": 59, "assoc_legendr": [59, 198], "jacobi_poli": [59, 194], "gegenbauer_poli": [59, 194], "chebyshevt_poli": [59, 194], "chebyshevu_poli": [59, 194], "hermite_poli": [59, 194], "legendre_poli": [59, 194], "laguerre_poli": [59, 194], "r454": 59, "jacobi_polynomi": 59, "r455": 59, "jacobipolynomi": 59, "r456": 59, "jacobip": [59, 198], "jacobi_norm": 59, "normilz": 59, "p_m": 59, "delta_": [59, 161, 169], "r457": 59, "r458": 59, "r459": 59, "r460": 59, "gegenbauer_polynomi": 59, "r461": 59, "gegenbauerpolynomi": 59, "r462": 59, "gegenbauerc3": 59, "r463": 59, "chebyshev_polynomi": 59, "r464": 59, "chebyshevpolynomialofthefirstkind": 59, "r465": 59, "chebyshevpolynomialofthesecondkind": 59, "r466": 59, "r467": 59, "u_n": [59, 78, 191, 193], "r468": 59, "r469": 59, "r470": 59, "r471": 59, "r472": 59, "chebyshev_root": 59, "r473": 59, "legendre_polynomi": 59, "r474": 59, "legendrepolynomi": 59, "r475": 59, "legendrep": [59, 198], "r476": 59, "legendrep2": 59, "r477": 59, "associated_legendre_polynomi": 59, "r478": 59, "r479": 59, "r480": 59, "r481": 59, "hermite_polynomi": 59, "r482": 59, "hermitepolynomi": 59, "r483": 59, "hermiteh": [59, 198], "l_n": [59, 78], "r484": 59, "laguerre_polynomi": 59, "r485": 59, "laguerrepolynomi": 59, "r486": 59, "laguerrel": [59, 198], "r487": 59, "laguerrel3": 59, "r488": 59, "generalized_laguerre_polynomi": 59, "r489": 59, "associatedlaguerrepolynomi": 59, "r490": 59, "r491": 59, "spherical_harmon": 59, "ynm": [59, 183], "ynm_c": 59, "znm": 59, "r492": 59, "r493": 59, "sphericalharmon": 59, "r494": 59, "sphericalharmonici": 59, "r495": 59, "r496": 59, "r497": 59, "r498": 59, "z_n": [59, 192], "r499": 59, "r500": 59, "r501": 59, "eijk": 59, "levicivita": [59, 87], "eval_levicivita": 59, "pseudotensor": 59, "delta_rang": [59, 164], "kroneck": [59, 163, 164, 219, 224], "r502": 59, "kronecker_delta": [59, 164], "indices_contain_equal_inform": [59, 164], "fermi": [59, 164], "above_fermi": [59, 164], "below_fermi": [59, 164], "is_above_fermi": [59, 164], "is_below_fermi": [59, 164], "is_only_below_fermi": [59, 164], "is_only_above_fermi": [59, 164], "killable_index": [59, 164], "preferred_index": [59, 164], "point2d": [60, 61, 62, 63, 64, 66, 67, 68], "arbitrary_point": [60, 61, 62, 63, 64, 65, 67], "polyfunc": [60, 194], "ambient_dimens": [60, 62, 64, 66], "plot_interv": [60, 61, 64, 67], "lower_bound": [60, 61, 64, 67], "upper_bound": [60, 61, 64, 67], "counterclockwis": [60, 61, 62, 66, 95], "geometryent": [60, 61, 62, 64, 66, 67, 68], "hradiu": 61, "vradiu": 61, "geometryerror": [61, 64, 67, 68], "radii": 61, "foci": 61, "periapsi": 61, "apoapsi": 61, "focus_dist": 61, "shortest": [61, 64, 67, 181, 204, 210, 214, 236], "auxiliary_circl": 61, "xmin": [61, 62, 64, 66, 67, 184], "ymin": [61, 62, 64, 66, 67, 184], "xmax": [61, 62, 64, 66, 67, 184], "ymax": [61, 62, 64, 66, 67, 184], "rectangl": [61, 62, 64, 66, 67, 184, 194], "director_circl": 61, "perpendicular": [61, 64, 65, 67, 80, 122, 137, 182], "director": 61, "130": 61, "r503": 61, "encloses_point": [61, 62, 67], "border": [61, 67], "_slope": 61, "slope": [61, 62, 64, 67, 94, 95, 99], "eq1": [61, 214, 216, 217], "eq2": [61, 81, 214, 217], "r504": 61, "108270": 61, "r505": 61, "equation_of_a_shifted_ellips": 61, "evolut": 61, "focal": [61, 133, 137], "100500": 61, "363": [61, 91, 192], "175": [61, 87, 191, 192], "is_tang": [61, 63], "tangent_lin": 61, "normal_lin": 61, "line2d": [61, 64, 67], "quartic": [61, 194, 216], "2020": [61, 143], "polar_second_moment_of_area": [61, 67], "moment": [61, 67, 94, 95, 116, 124, 127, 173, 184, 194, 211, 218], "constitu": [61, 67, 111, 174, 204, 243], "planar": [61, 67, 95, 137], "resist": [61, 67, 94, 95, 207], "deflect": [61, 67, 94, 95], "bend": [61, 67, 94, 96], "r506": 61, "polar_moment_of_inertia": [61, 67], "random_point": [61, 64, 65], "arb": 61, "364": 61, "notimpl": [61, 193], "second_moment_of_area": [61, 67], "centroid": [61, 67, 68, 94], "i_xx": [61, 67], "i_yi": [61, 67], "i_xi": [61, 67], "ellis": 61, "r507": 61, "list_of_second_moments_of_area": 61, "section_modulu": [61, 67], "sympify": [61, 67, 94, 97, 106, 111, 135, 138, 176], "farthest": [61, 67], "s_x": [61, 67], "s_y": [61, 67], "r508": 61, "semilatus_rectum": 61, "semi": [61, 64, 91], "latu": 61, "rectum": 61, "chord": 61, "conic": [61, 211, 243], "directrix": 61, "r509": 61, "semilatusrectum": 61, "r510": 61, "latus_rectum": 61, "collinear": [61, 63, 65, 66, 67, 184], "gx": 61, "hy": 61, "synonym": [61, 193], "p4": [61, 64, 66, 67, 184], "boundari": [62, 64, 94, 95, 177, 195, 206, 214, 218], "t2": [62, 67, 68, 91, 106, 111, 211, 218, 224], "ordering_of_class": 62, "is_similar": [62, 64, 67, 68], "uniform": [62, 184, 218], "enlarg": 62, "shrink": [62, 76], "parameter_valu": [62, 65], "pent": 62, "rpent": 62, "rcirc": 62, "entity1": 63, "entity2": 63, "zp": 63, "is_collinear": [63, 66], "segment2d": [63, 64, 67, 68], "wikipappu": 63, "bc": [63, 97, 236, 239, 248], "subs_point": 63, "p11": 63, "p12": 63, "p13": 63, "p21": 63, "p22": 63, "p23": 63, "ll1": 63, "ll2": 63, "ll3": 63, "ll4": 63, "ll5": 63, "ll6": 63, "pp1": 63, "pp2": 63, "pp3": 63, "encyclopedia": [63, 180], "apr": 63, "s_hexagon_theorem": 63, "clockwis": [63, 78, 82, 94, 95, 97], "overlap": [63, 68, 90, 185, 206, 239], "infanc": 63, "geometryresult": 63, "fair": [63, 218], "angle_between": [64, 65, 67, 174], "reflex": 64, "eman": 64, "readili": [64, 87], "sw": 64, "obtus": 64, "smallest_angle_between": 64, "line3d": [64, 65, 66], "is_perpendicular": [64, 65, 66, 67], "ray2d": [64, 67], "closing_angl": 64, "are_concurr": [64, 65], "concurr": [64, 65, 195], "l3": [64, 117, 191], "l4": [64, 117], "bisector": [64, 67], "p5": [64, 66, 67, 184], "p6": [64, 67, 184], "p7": [64, 67, 184], "segment3d": [64, 65], "direction_ratio": [64, 66], "is_parallel": [64, 65], "parallel_lin": 64, "perpendicular_lin": [64, 65], "perpendicular_seg": 64, "enpoint": 64, "reform": 64, "432": [64, 193], "92": [64, 192, 214, 218], "ccw": [64, 67], "ray3d": [64, 65, 137], "xdirect": 64, "ydirect": 64, "midpoint": [64, 66, 67, 78, 184, 248], "170": [64, 218], "341": 64, "perpendicular_bisector": 64, "linearentity2d": 64, "linearentity3d": [64, 65], "direction_cosin": [64, 66], "zdirect": 64, "normal_vector": [65, 137], "proce": [65, 128, 191, 193, 208, 216], "147": 65, "321": 65, "is_coplanar": 65, "perpendicualar": 65, "parallel_plan": 65, "on_circl": 65, "off_circl": 65, "perpendicular_plan": 65, "pt1": 65, "projection_lin": 65, "on_morph": 66, "affine_rank": 66, "are_coplanar": 66, "canberra_dist": 66, "canberra": 66, "geometricent": 66, "taxicab_dist": 66, "is_concycl": 66, "concycl": 66, "fewer": [66, 67, 128, 218, 264], "is_scalar_multipl": 66, "ambient": 66, "orthogonal_direct": 66, "taxicab": 66, "_nocheck": 66, "are_collinear": 66, "4x4": [66, 90, 136, 218], "travers": [67, 91, 107, 194, 207, 223, 233, 254, 269], "unrot": 67, "circumscrib": 67, "spin": [67, 103, 116, 150, 151, 159], "perimet": [67, 250], "contact": [67, 116, 120, 121, 122, 123, 181, 222], "38": [67, 87, 91, 198, 211, 213, 218], "cut_sect": 67, "upper_polygon": 67, "lower_polygon": 67, "upper_seg": 67, "lower_seg": 67, "r511": 67, "r512": 67, "paulbourk": 67, "polygonmesh": 67, "insidepoli": 67, "first_moment_of_area": 67, "q_x": [67, 181], "q_y": [67, 181], "625": [67, 252], "3125": [67, 218], "525": 67, "3000": [67, 94], "r513": 67, "skyciv": 67, "beam": [67, 97, 133, 136, 259], "bmd": 67, "r514": 67, "mechanicalc": 67, "poly1": 67, "poly2": 67, "interior": [67, 194, 206], "180": [67, 182, 192], "r515": 67, "r516": 67, "r517": 67, "apothem": 67, "interior_angl": 67, "exterior_angl": 67, "circumcircl": 67, "incircl": 67, "inradiu": 67, "inscrib": 67, "circumcent": 67, "circumradiu": 67, "leg": 67, "square_in_unit_circl": 67, "kite": 67, "asa": 67, "sa": [67, 194], "sss": 67, "altitud": 67, "orthocent": 67, "exradii": 67, "median": [67, 218, 260], "medial": 67, "nine_point_circl": 67, "straight": [67, 73, 99, 118, 181, 214], "eulerlin": 67, "equilater": 67, "coincid": [67, 87, 90, 108, 114, 185, 243, 247, 266], "excent": 67, "excircl": 67, "touch": [67, 116, 207], "r518": 67, "ly": [67, 87, 189], "exradiu": 67, "r519": 67, "r520": 67, "incent": 67, "is_equilater": 67, "is_isoscel": 67, "is_right": 67, "is_scalen": 67, "nine": [67, 198], "feet": 67, "real_num": 68, "hull": 68, "r521": 68, "graham_scan": 68, "r522": 68, "andrew": 68, "1979": [68, 169], "geomalgorithm": 68, "a10": 68, "_hull": 68, "t3": [68, 211], "mass": [68, 103, 104, 105, 106, 108, 109, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 131, 132, 140, 165, 167, 168, 169, 179, 181, 229, 250, 251], "averag": [68, 78, 91, 191, 218], "qq": [69, 70, 72, 73, 74, 78, 185, 186, 187, 188, 190, 191, 193, 194, 195], "p_r": 69, "holonomic_funct": 69, "from_hyp": [70, 73], "holonomicfunct": [70, 71, 73], "from_meijerg": [70, 73], "initcond": [70, 72, 73], "expr_to_holonom": [70, 73, 74, 75], "lenic": [70, 72], "ground": [70, 116, 120, 121, 122, 123, 185, 188, 189, 191, 193, 194, 216, 273], "meijerint": [70, 72, 76, 78], "_rewrite1": [70, 76], "_convert_poly_rat_alg": [70, 72], "_create_t": [70, 72], "differentialoper": [71, 73, 153], "differentialoperatoralgebra": 71, "_create_lookup_t": [72, 76], "old_poly_r": [73, 74, 185, 188, 189], "to_expr": [73, 74, 75, 101], "to_sequ": 73, "n_0": [73, 191, 216, 217], "indici": [73, 74, 75, 214], "c_j": [73, 76, 208], "holonomicsequ": 73, "r523": 73, "hal": 73, "inria": [73, 78], "fr": [73, 78, 91, 109, 114, 116, 118, 121, 122, 126, 128, 131, 218], "00070025": 73, "r524": 73, "risc": [73, 214, 243], "jku": [73, 214, 243], "risc_2244": 73, "diplform": 73, "_recur": 73, "rk4": 73, "kutta": 73, "71828182845905": 73, "10517083333333": 73, "22140257085069": 73, "34985849706254": 73, "49182424008069": 73, "64872063859684": 73, "82211796209193": 73, "01375162659678": 73, "22553956329232": 73, "45960141378007": 73, "71827974413517": 73, "331": 73, "4641": 73, "61051": 73, "771561": 73, "9487171": 73, "14358881": 73, "357947691": 73, "5937424601": 73, "to_hyp": 73, "as_list": [73, 194], "to_meijerg": 73, "homogen": [74, 78, 87, 101, 189, 191, 194, 211, 214, 215, 218], "1_0": 74, "1_1": 74, "0_0": 74, "0_1": 74, "pyplot": [74, 131], "plt": [74, 131], "list_of_poli": 74, "weyl": [74, 80], "Ore": 74, "dxa": 74, "endomorph": [74, 193], "frobeniu": [75, 87, 91, 191, 192], "subtleti": 76, "recast": [76, 210, 216, 217], "branchpoint": 76, "crude": [76, 116, 184], "decre": 76, "biholomorph": 76, "mutual": [76, 182], "neighbourhood": 76, "evid": [76, 109, 122, 208], "peculiar": [76, 182], "throughout": [76, 81, 191, 201, 217, 266], "_split_mul": 76, "_mytyp": 76, "inequival": 76, "_mul_as_two_part": 76, "bx": [76, 218, 224], "twist": 76, "recognis": [76, 188, 208, 210], "anywai": [76, 210, 214], "analyitc": 76, "_rewrite_singl": 76, "_rewrite2": 76, "_rewrite_saxena_1": 76, "_rewrite_saxena": 76, "blogpost": 76, "remedi": 76, "exploit": [76, 230], "transpar": [76, 79, 178], "nessgrh": 76, "wordpress": [76, 211], "07": 76, "stade": 76, "c_u": 76, "d_1": [76, 169, 194, 218], "d_v": 76, "amalgam": 76, "prudnikov1990": [76, 208], "luke1969": [76, 208], "c_3": [76, 214], "c_4": 76, "visibl": [76, 184], "fulfil": [76, 183], "vee": [76, 81], "lceil": 76, "rceil": 76, "d_j": [76, 169, 208], "lambda_c": [76, 127], "lambda_": 76, "z_0": [76, 210], "z_1": 76, "a_i": [76, 169, 174, 182, 186, 191, 208], "c_5": 76, "c_6": 76, "c_7": 76, "c_8": 76, "lvert": 76, "rvert": 76, "c_9": 76, "versatil": 76, "bz": [76, 211, 224], "deform": [76, 95], "encircl": 76, "appeal": 76, "fox": 76, "obstacl": 76, "identif": [76, 217], "domin": [76, 82, 203, 205], "iT": 76, "omega_": 76, "disguis": 76, "meijerint_indefinit": 76, "meijerint_definit": 76, "meijerint_invers": 76, "kelli": [76, 208], "roach": [76, 208], "211": [76, 91, 194, 208, 214], "prudnikov": [76, 208], "yu": [76, 183, 208], "brychkov": [76, 208], "marichev": [76, 208], "gordon": [76, 143, 208], "breach": [76, 208], "_coeffexpvalueerror": 76, "_get_coeff_exp": 76, "_check_anteced": 76, "_check_antecedents_1": 76, "mt": 76, "_check_antecedents_invers": 76, "anteced": [76, 205], "_condsimp": 76, "hoc": 76, "simp": [76, 116, 174], "_dummi": 76, "_dummy_": 76, "_eval_cond": 76, "_expon": 76, "_find_splitting_point": 76, "fsp": 76, "_flip_g": 76, "_function": 76, "_guess_expans": 76, "sensibl": [76, 78], "_inflate_fox_h": 76, "_inflate_g": 76, "_int0oo": 76, "_int0oo_1": 76, "_int_invers": 76, "_is_analyt": 76, "almost": [76, 85, 93, 166, 184, 185, 189, 194, 195, 214, 218, 232, 233, 236, 268], "_meijerint_definite_2": 76, "expand_mul": 76, "trigexpand": 76, "_meijerint_definite_3": 76, "_meijerint_definite_4": 76, "only_doubl": 76, "_meijerint_indefinite_1": 76, "_mul_arg": 76, "_my_principal_branch": 76, "full_pb": 76, "nearer": 76, "superflu": 76, "opaqu": [76, 198], "fac": 76, "_rewrite_invers": 76, "costli": [76, 118, 270], "tx": [76, 272], "overview": [77, 186, 217, 250, 251], "argand": [77, 217], "lookup": [77, 78, 87, 91, 208], "laplac": [77, 78, 98, 99, 101, 218], "todo": [77, 142, 144, 148, 149, 153, 154, 156, 157, 158, 159, 160, 191, 198, 205, 223], "polytop": 77, "happili": [78, 222], "nonelementari": 78, "mellin_transform": 78, "bilater": 78, "mellintransform": 78, "integraltransform": 78, "nocond": 78, "inverse_mellin_transform": 78, "laplace_transform": [78, 101], "fourier_transform": 78, "hankel_transform": 78, "inverse_hankel_transform": 78, "suitabl": [78, 84, 93, 186, 188, 191, 193, 198, 208, 211, 214, 217, 219, 267], "inversemellintransform": 78, "attemp": 78, "laplacetransform": 78, "inverse_laplace_transform": 78, "singularit": [78, 128], "inverselaplacetransform": 78, "_fast_inverse_laplac": 78, "rootsum": [78, 194, 200], "fouriertransform": 78, "_fourier_transform": 78, "inverse_fourier_transform": 78, "sine_transform": 78, "inverse_sine_transform": 78, "cosine_transform": 78, "inverse_cosine_transform": 78, "bixk": 78, "inversefouriertransform": 78, "sinetransform": 78, "inversesinetransform": 78, "cosinetransform": 78, "inversecosinetransform": 78, "hankeltransform": 78, "ht": 78, "inversehankeltransform": 78, "_compute_transform": 78, "_as_integr": 78, "integraltransformerror": 78, "_name": 78, "_collapse_extra": 78, "needev": 78, "function_vari": 78, "transform_vari": 78, "lazard": [78, 191, 194], "rioboo": 78, "trager": 78, "horowitz": 78, "ostrogradski": 78, "ratint": 78, "rationaltool": [78, 194], "ratint_logpart": 78, "ratint_ratpart": 78, "r525": 78, "bronstein": [78, 192, 194, 200, 216], "verlag": [78, 192], "deg": [78, 99, 114, 186, 191, 193, 194], "q_i": [78, 110, 128], "_t": [78, 114, 117, 131, 164, 173, 174, 177, 208, 218], "trigintegr": 78, "trigonometri": 78, "r526": 78, "integration_techniqu": 78, "deltaintegr": 78, "couldn": 78, "didn": [78, 87, 128], "singularityintegr": 78, "risch_integr": 78, "nonelementaryintegr": 78, "proven": [78, 91, 248, 266], "handle_first": 78, "separate_integr": 78, "rewrite_complex": 78, "forthcom": 78, "5109": 78, "outer": [78, 111, 129, 131, 147, 152, 153, 174, 177, 180, 182, 200, 206, 222, 243, 245, 246], "pop": [78, 211], "manualintegr": 78, "integral_step": 78, "student": [78, 207, 211, 218], "_i": [78, 164, 169, 195], "namedtupl": 78, "substep": 78, "sympy_gamma": 78, "app": 78, "intstep": 78, "urul": 78, "u_var": 78, "_u": [78, 164], "u_func": 78, "arctanrul": 78, "trigrul": 78, "rewriterul": 78, "addrul": 78, "powerrul": 78, "constanttimesrul": 78, "constantrul": 78, "norman": 78, "slowest": [78, 92], "retri": [78, 91], "degree_offset": 78, "unnecessary_permut": 78, "_try_heurisch": 78, "manuel": [78, 203], "poor": [78, 92], "man": [78, 192], "whittak": 78, "r527": 78, "sop": [78, 81], "cafe": 78, "pmint": 78, "r528": 78, "gedd": [78, 192], "stefanu": 78, "217": [78, 192], "r529": 78, "davenport": [78, 191, 192], "eurocam": 78, "lnc": [78, 192, 216], "157": [78, 91, 95, 192], "r530": 78, "iii": [78, 198, 214], "sigsam": 78, "bulletin": 78, "1982": [78, 183], "r531": 78, "transact": [78, 192], "1985": [78, 109, 130, 174, 243], "356": [78, 193, 216], "362": 78, "huge": [78, 91, 194, 234], "entail": 78, "delic": [78, 185], "albeit": [78, 246], "mimic": [78, 79, 178, 237], "moder": 78, "irrespect": [78, 211, 214, 239], "line_integr": 78, "as_sum": 78, "subinterv": 78, "trapezoid": [78, 87, 218], "730": 78, "809": 78, "decai": 78, "r532": 78, "riemann_sum": 78, "r533": 78, "cauchy_principal_valu": 78, "r534": 78, "cauchyprincipalvalu": 78, "int_a": 78, "uvar": 78, "ui": [78, 91], "accomplish": [78, 128, 131, 249], "3aissu": 78, "3aopen": 78, "3aintegr": 78, "gauss_legendr": 78, "n_digit": 78, "legendr": [78, 91, 194, 198, 211], "r535": 78, "w_i": [78, 133, 194, 214], "7746": 78, "55556": 78, "88889": 78, "86114": 78, "33998": 78, "34785": 78, "65215": 78, "gauss_laguerr": 78, "gauss_gen_laguerr": 78, "gauss_hermit": 78, "gauss_chebyshev_t": 78, "gauss_chebyshev_u": 78, "gauss_jacobi": 78, "gauss_lobatto": 78, "gaussian_quadratur": 78, "r536": 78, "fsu": 78, "jburkardt": 78, "cpp_src": 78, "legendre_rul": 78, "laguerr": [78, 194, 198], "r537": 78, "41577": 78, "2943": 78, "2899": 78, "71109": 78, "27852": 78, "010389": 78, "22285": 78, "1889": 78, "9927": 78, "7751": 78, "8375": 78, "983": 78, "45896": 78, "417": [78, 210], "11337": 78, "010399": 78, "00026102": 78, "9855e": 78, "93laguerre_quadratur": 78, "r538": 78, "laguerre_rul": 78, "hermit": [78, 82, 87, 88, 187, 193, 194, 198, 218], "r539": 78, "2247": 78, "29541": 78, "1816": 78, "3506": 78, "3358": 78, "43608": 78, "00453": 78, "15707": 78, "72463": 78, "hermite_quadratur": 78, "r540": 78, "hermite_rul": 78, "r541": 78, "gen_hermite_rul": 78, "r542": 78, "19016": 78, "7845": 78, "5253": 78, "4493": 78, "31413": 78, "00906": 78, "97851": 78, "9904": 78, "3193": 78, "712": 78, "53087": 78, "67721": 78, "11895": 78, "0023152": 78, "r543": 78, "gen_laguerre_rul": 78, "r544": 78, "86602": 78, "0472": 78, "96593": 78, "70711": 78, "25882": 78, "5236": 78, "93gauss_quadratur": 78, "r545": 78, "chebyshev1_rul": 78, "r546": 78, "3927": 78, "7854": 78, "90097": 78, "62349": 78, "22252": 78, "084489": 78, "27433": 78, "42658": 78, "r547": 78, "chebyshev2_rul": 78, "jacobi": [78, 91, 103, 194, 198], "r548": 78, "7063": 78, "0973": 78, "33795": 78, "87174": 78, "5917": 78, "2093": 78, "050584": 78, "22169": 78, "39439": 78, "93jacobi_quadratur": 78, "r549": 78, "jacobi_rul": 78, "r550": 78, "gegenbauer_rul": 78, "lobatto": 78, "r551": 78, "3333": 78, "44721": 78, "16667": 78, "83333": 78, "93lobatto_rul": 78, "r552": 78, "page_888": 78, "intpoli": 78, "chin": 78, "al": [78, 114, 143, 191, 207, 210], "2015": [78, 217], "unit_cub": 78, "polytope_integr": 78, "eric": [78, 192], "jean": 78, "lasserr": 78, "sukumar": 78, "nonconvex": 78, "967": 78, "981": 78, "dilbert": 78, "engr": 78, "ucdavi": 78, "suku": 78, "max_degre": [78, 194], "689": [78, 95], "21875": 78, "octahedron": 78, "trivari": 78, "enable_automatic_int_sympif": 79, "enable_automatic_symbol": 79, "init_ipython_sess": 79, "argv": [79, 229], "init_python_sess": 79, "use_latex": [79, 178, 273], "quiet": 79, "str_printer": [79, 178], "latex_print": [79, 178], "pylab": 79, "stringifi": [79, 178], "sstrrepr": [79, 178, 198], "lexograph": [79, 178], "gui": [79, 178], "statu": 79, "\u03b8": [79, 108, 136, 217], "int_to_integ": 79, "decistmt": 79, "f401": 79, "0x12": 79, "num_column": [79, 178, 198, 214], "no_glob": [79, 178], "ip": [79, 152, 158, 178], "forecolor": [79, 178], "backcolor": [79, 178], "fontsiz": [79, 178, 198], "10pt": [79, 178, 198], "latex_mod": [79, 178], "print_builtin": [79, 178], "interactiveconsol": [79, 178], "preambl": [79, 178, 198], "handwritten": [79, 178], "ctan": [79, 178], "pkg": [79, 178], "dvi": [79, 178, 198], "foreground": [79, 178], "black": [79, 149, 160, 178, 198, 273], "white": [79, 178, 218], "documentclass": [79, 178, 198], "dpi": [79, 178], "u03b8": 79, "dvip": 79, "r553": 79, "r554": 79, "the_68_standard_colors_known_to_dvip": 79, "config": 79, "root_system": 80, "rootsystem": 80, "cartantyp": 80, "cartan": 80, "subalgebra": 80, "adjoint": [80, 82, 87, 141, 145], "hyperplan": 80, "k_y": 80, "r555": 80, "r556": 80, "humphrei": 80, "add_as_root": 80, "root1": 80, "root2": 80, "add_simple_root": 80, "newroot": 80, "all_root": [80, 91, 194], "cartan_matrix": 80, "dynkin_diagram": 80, "dynkin": 80, "root_spac": 80, "simple_root": 80, "type_a": 80, "typea": 80, "basic_root": 80, "iin": 80, "jth": [80, 217], "ijth": 80, "cartan_typ": 80, "highest_root": 80, "lie_algebra": 80, "positive_root": 80, "type_b": 80, "typeb": 80, "b4": 80, "b3": [80, 114, 131, 174, 248], "type_c": 80, "typec": 80, "c4": [80, 82, 84, 214], "type_d": 80, "d4": [80, 218], "dmension": 80, "type_": 80, "e6": 80, "type_f": 80, "typef": 80, "f_4": [80, 110], "f4": [80, 184], "type_g": 80, "typeg": 80, "weyl_group": 80, "weylgroup": 80, "semisimpl": 80, "isometri": 80, "coxeter_diagram": 80, "undirect": [80, 236], "s_is_j": 80, "delete_doubl": 80, "element_ord": 80, "weylelt": 80, "group_nam": 80, "group_ord": 80, "192": 80, "matrix_form": 80, "cartantype_gener": 80, "standard_cartan": 80, "dynkindiagram": 80, "cartanmatrix": 80, "sopform": 81, "minterm": 81, "dontcar": 81, "simplified_pair": 81, "combo": 81, "outcom": [81, 167, 218], "r557": 81, "quin": 81, "mccluskey_algorithm": 81, "posform": 81, "r558": 81, "anfform": 81, "truthvalu": 81, "anf": 81, "funciton": 81, "zhegalkin": 81, "r559": 81, "zhegalkin_polynomi": 81, "as_set": 81, "booleantru": 81, "doubt": [81, 114], "greet": 81, "booleanfals": 81, "universalset": 81, "nand": 81, "xnor": 81, "gate": [81, 144, 149, 151, 157, 158, 160], "perspect": [81, 91, 101, 169, 184, 231, 247, 251], "multiplex": 81, "conjunct": [81, 184, 208, 229, 274], "disjunct": 81, "to_anf": 81, "oplu": [81, 148], "to_cnf": 81, "cnf": 81, "mccluskei": 81, "to_dnf": 81, "to_nnf": 81, "nnf": 81, "is_anf": 81, "is_cnf": 81, "is_dnf": 81, "is_nnf": 81, "gateinputcount": 81, "simplify_log": 81, "fewest": [81, 158], "bool_map": 81, "bool1": 81, "bool2": 81, "function1": 81, "function2": 81, "distribute_and_over_or": 81, "distribute_or_over_and": 81, "distribute_xor_over_and": 81, "eliminate_impl": 81, "truth_tabl": 81, "ibin": [81, 236], "integer_to_term": 81, "0001111011": [81, 236], "1101111000": [81, 236], "term_to_integ": 81, "bool_maxterm": 81, "maxterm": 81, "complement": [81, 84, 194, 217], "r560": 81, "canonical_normal_form": 81, "indexing_maxterm": 81, "bool_minterm": 81, "patter": 81, "r561": 81, "indexing_minterm": 81, "bool_monomi": 81, "enumar": 81, "anf_coeff": 81, "to_int_repr": 81, "all_model": 81, "unsatisfi": 81, "use_model": 81, "unsat": 81, "matrixbas": [82, 83, 84, 86, 187], "dirac": [82, 87, 99, 103, 104, 162, 198], "__abs__": [82, 189], "__add__": [82, 189, 193], "shapeerror": [82, 84, 87], "__len__": 82, "96": [82, 87, 218], "mismatch": 82, "matrix_multiply_elementwis": [82, 87], "applyfunc": [82, 83, 87, 122, 174, 219], "col": [82, 84, 87, 90, 101, 131, 187, 193, 270], "col_del": [82, 87, 270], "col_join": [82, 87, 116], "col_insert": [82, 270], "row_insert": [82, 270], "row_join": [82, 87, 116], "companion": [82, 84], "c0": [82, 84, 205, 214, 216], "sparsematrix": [82, 86, 87, 90, 199, 210], "diag": [82, 84, 87, 90, 131, 187, 224, 270], "immutablematrix": [82, 84, 86, 101, 174, 218, 243, 245, 270], "dens": [82, 84, 86, 87, 187, 190, 193, 194, 219, 257, 269], "blockmatrix": [82, 84, 87], "sparsetool": [82, 90], "kth": [82, 91], "rowslist": [82, 187], "colslist": 82, "submatrix": [82, 87, 191, 218], "get_diag_block": [82, 84, 87], "decoupl": 82, "hstack": [82, 187], "is_anti_symmetr": 82, "is_diagon": [82, 87], "is_low": [82, 187], "is_upp": [82, 187], "matrixeigen": [82, 86], "is_diagonaliz": [82, 87], "is_hermitian": [82, 87], "is_lower_hessenberg": 82, "hessenberg": [82, 87], "superdiagon": 82, "is_upper_hessenberg": 82, "is_strongly_diagonally_domin": 82, "strongli": [82, 87, 187, 236], "m1": [82, 87, 91, 95, 135, 143, 161, 163, 167, 211, 214, 219, 224], "subdiagon": [82, 87], "is_weakly_diagonally_domin": 82, "weakli": [82, 236], "vacuou": 82, "jordan_block": [82, 87], "eigenv": [82, 87, 114, 116, 131, 158, 268, 270], "insuffici": 82, "rectangular": [82, 87, 206, 217, 246], "r562": 82, "jordan_matrix": [82, 214], "dotprodsimp": 82, "blowup": 82, "multiply_elementwis": [82, 87], "hadamard": [82, 84, 87, 148, 149, 160, 198], "elementwis": [82, 84, 87, 219], "300": [82, 87, 91, 94, 179, 184, 195, 251], "bmatrix": [82, 84, 87, 118, 126, 127, 128, 129, 174, 182, 211], "a_0": [82, 87, 201, 211, 214, 219, 274], "vdot": [82, 84, 87, 169], "alpha_0": 82, "alpha_1": [82, 91, 193], "alpha_": [82, 183], "permute_col": 82, "permute_row": 82, "mulsimp": 82, "rmultipli": 82, "__rmul__": 82, "rot90": 82, "anticlockwis": 82, "row_del": [82, 87, 270], "todod": 82, "tolist": [82, 219], "vec": [82, 87, 131, 174, 183, 191, 248, 249, 251], "vech": 82, "check_symmetri": 82, "vstack": [82, 187], "wilkinson": 82, "w_": [82, 193], "wminu": 82, "wplu": 82, "r563": 82, "mathwork": [82, 99, 218, 270], "cleve": 82, "04": [82, 218], "r564": 82, "claredon": 82, "oxford": 82, "662": 82, "intm": 82, "undefinedkind": [82, 206], "tuplekind": [82, 206], "mutabledensematrix": [83, 187, 239], "densematrix": [83, 87], "ldldecomposit": [83, 87], "ldl": [83, 87], "choleski": [83, 87], "ludecomposit": [83, 84, 87, 270], "qrdecomposit": [83, 87], "as_immut": 83, "lower_triangular_solv": [83, 87], "upper_triangular_solv": [83, 87], "gauss_jordan_solv": [83, 87], "cholesky_solv": [83, 87], "diagonal_solv": [83, 87], "ldlsolv": [83, 87], "lusolv": [83, 87, 108, 110, 128, 132, 216, 270], "qrsolv": [83, 87], "pinv_solv": [83, 87], "permutedim": [84, 219, 220], "arraytensorproduct": [84, 220], "from_index_summ": 84, "first_index": 84, "last_index": 84, "longrightarrow": 84, "matpow": [84, 198], "hadamardproduct": [84, 198], "hadamard_product": 84, "hadamardpow": [84, 198], "ddot": [84, 87, 118, 127, 178, 181, 198, 274], "functionmatrix": 84, "lamda": [84, 198, 206, 218, 270], "lazili": [84, 204], "342923500": 84, "permutationmatrix": [84, 87], "matrixpermut": 84, "companionmatrix": 84, "matrixset": [84, 206], "submatric": [84, 87, 187, 218], "block_collaps": 84, "dat": [84, 236], "irregular": [84, 87], "ldudecomposit": 84, "ldu": 84, "2x2": [84, 90, 133, 187, 214], "noninvertiblematrixerror": [84, 270], "udldecomposit": 84, "lu": [84, 87, 187, 192], "udl": 84, "schur": 84, "penros": [84, 87], "pinv": [84, 87], "r565": 84, "schur_compl": 84, "blockdiagmatrix": [84, 87], "diag_block": 84, "alias": [85, 189], "bridg": [85, 97, 114, 237], "tension": 85, "matrixdetermin": 86, "matrixreduct": 86, "matrixsubspac": 86, "matrixcalculu": 86, "immutablesparsematrix": 86, "gramschmidt": 87, "m2": [87, 91, 95, 111, 135, 143, 161, 163, 167, 193, 211, 214, 219, 224], "126": [87, 91, 197], "150": [87, 101, 211], "v3": [87, 174, 177, 248], "glue": 87, "m3": [87, 143, 211, 219], "adj": 87, "qr": 87, "cheat": 87, "soln": 87, "gram": [87, 169, 171], "schmidt": 87, "out1": 87, "out2": 87, "1692": 87, "1551": 87, "423": 87, "6707": 87, "spot": [87, 132], "eigenvector": [87, 114, 158, 159, 183], "nullspac": [87, 187], "adjug": 87, "berkowitz": 87, "bareiss": 87, "cofactor_matrix": 87, "charpoli": [87, 187, 270], "_simplifi": 87, "purepoli": [87, 194], "samuelson": 87, "minor_submatrix": 87, "iszerofunc": [87, 270], "barei": 87, "det_lu": 87, "functiontyp": 87, "_iszero": [87, 270], "_is_zero_after_expand_mul": 87, "unrecogn": 87, "nonsquarematrixerror": [87, 214], "i3": [87, 102, 114, 131, 224], "perman": 87, "ryser": 87, "450": 87, "r566": 87, "prof": 87, "ben": 87, "berkelei": 87, "bernd": 87, "ban275": 87, "r567": 87, "permanent_": 87, "r568": 87, "r569": 87, "0904": 87, "3251": 87, "echelon_form": [87, 270], "with_pivot": 87, "echelon": [87, 187, 217, 270], "elementary_col_op": 87, "kn": [87, 94, 95], "col1": 87, "col2": 87, "km": [87, 91, 105, 109, 116, 118, 121, 122, 126, 128, 131, 170], "elementary_row_op": 87, "row1": 87, "row2": 87, "is_echelon": [87, 270], "rref": [87, 187], "pivot": [87, 187, 270], "normalize_last": 87, "rref_matrix": [87, 187], "rref_pivot": [87, 187], "301369863013699": 87, "712328767123288": 87, "noramlize_last": 87, "subspac": [87, 193], "columnspac": [87, 187], "rowspac": [87, 187], "orthonorm": [87, 131, 159, 182, 246], "rankcheck": 87, "r570": 87, "93schmidt_process": 87, "eigen": [87, 140], "bidiagonal_decomposit": 87, "ubv": 87, "bidiagon": 87, "hang": [87, 118, 122, 214, 215], "bidiagn": 87, "r571": 87, "golub": 87, "van": [87, 91, 192], "loan": 87, "r572": 87, "vslobodi": 87, "household": 87, "r573": 87, "r574": 87, "reals_onli": 87, "throw": [87, 93, 114, 193, 211, 217], "error_when_incomplet": 87, "eig": [87, 114, 131], "matrixerror": 87, "got": [87, 185, 188, 191, 194, 197, 229, 230, 236, 237, 266, 268, 269], "abel": 87, "ruffini": 87, "eigenvect": [87, 114, 131, 158, 270], "tidi": 87, "artifact": 87, "ret": 87, "eigenspac": 87, "rag": 87, "a_3": 87, "diagonaliz": [87, 270], "is_indefinit": 87, "semidefinit": [87, 218], "plot3d": [87, 184], "is_positive_definit": 87, "is_positive_semidefinit": 87, "hire": [87, 94, 95, 99, 184, 201], "is_negative_definit": 87, "is_negative_semidefinit": 87, "defer": [87, 240], "r575": 87, "definiteness_of_a_matrix": 87, "r576": 87, "positivedefinitematrix": 87, "r577": 87, "amer": 87, "259": 87, "264": [87, 216], "r578": 87, "r579": 87, "r580": 87, "r581": 87, "r582": 87, "r583": 87, "r584": 87, "r585": 87, "r586": 87, "r587": 87, "r588": 87, "r589": 87, "jordan_form": 87, "calc_transform": 87, "left_eigenvect": 87, "singular_valu": 87, "condition_numb": 87, "hessian": 87, "wronskian": [87, 214], "simpfunc": 87, "permutebkwd": 87, "permutefwd": 87, "lucombin": 87, "defici": [87, 91, 217], "matrixi": 87, "ludecomposition_simpl": [87, 270], "ludecompositionff": 87, "pa": [87, 109, 111, 126, 129, 132], "r590": 87, "zhou": 87, "jeffrei": [87, 210], "frontier": [87, 206], "china": 87, "67": [87, 192], "2008": [87, 183, 192, 194, 198], "row_swap": 87, "compres": 87, "permute_backward": 87, "permute_forward": 87, "u_": 87, "intiuit": 87, "lu_": 87, "_find_reasonable_pivot": 87, "lu_solv": [87, 187], "qr_solv": 87, "augument": 87, "167": 87, "158": [87, 95], "27261": 87, "30625": 87, "348": 87, "1914": 87, "6125": 87, "30589": 87, "198": 87, "1225": 87, "q_aug": 87, "r_aug": 87, "analytic_func": 87, "connected_compon": [87, 236], "connected_components_decomposit": 87, "relax": [87, 93], "3x1": 87, "1x3": 87, "conjugate_convent": 87, "dual": [87, 156, 162], "anti_symmetr": 87, "speak": [87, 193, 249], "freevar": 87, "underdetermin": [87, 216, 217], "free_var_index": 87, "sol": [87, 211, 214, 215, 216], "tau0": [87, 217, 218], "tau1": 87, "taus_zero": 87, "sol_uniqu": 87, "r591": 87, "gaussian_elimin": 87, "try_block_diag": 87, "inverse_g": [87, 270], "inverse_lu": [87, 270], "inverse_adj": [87, 270], "inverse_ch": 87, "inverse_ldl": 87, "inverse_qr": 87, "inv_mod": 87, "cof": 87, "inverse_block": 87, "blockwis": 87, "ntop": 87, "key2bound": 87, "key2ij": 87, "reciproc": [87, 218, 274], "fro": 87, "sing": 87, "spectral": 87, "rd": [87, 114, 198], "pseudoinvers": 87, "r592": 87, "penrose_pseudoinvers": 87, "arbitrary_matrix": 87, "wn_m": 87, "_w0_0": 87, "_w1_0": 87, "_w2_0": 87, "59": [87, 214], "r593": 87, "obtaining_all_solutions_of_a_linear_system": 87, "print_nonzero": [87, 236], "symb": [87, 198], "rank_decomposit": 87, "r594": 87, "rank_factor": 87, "r595": 87, "piziak": 87, "odel": 87, "magazin": 87, "193": [87, 99], "2307": 87, "2690882": 87, "singular_value_decomposit": 87, "condens": [87, 217], "orthogn": 87, "v_aug": 87, "u_aug": 87, "s_aug": 87, "gj": 87, "solve_least_squar": 87, "strongly_connected_compon": [87, 187, 236], "62": [87, 191], "strongly_connected_components_decomposit": 87, "rowstart": 87, "rowend": 87, "rowsep": 87, "colsep": 87, "strprinter": [87, 178, 261], "upper_hessenberg_decomposit": 87, "213": 87, "134": 87, "216": [87, 191], "hessenbergdecomposit": 87, "jordan_cel": 87, "varlist": 87, "r596": 87, "hessian_matrix": 87, "vlist": 87, "r597": 87, "casoratian": 87, "kernel": [87, 185, 191, 193, 216], "vanish": [87, 164, 191, 194, 197, 214, 243], "rsolve_hyp": [87, 216], "randmatrix": 87, "percent": [87, 217], "prng": 87, "percentag": [87, 91], "46": [87, 94, 169, 197, 216, 218], "list2numpi": 87, "dtype": [87, 92, 185, 187, 188, 189, 198, 237], "matrix2numpi": 87, "symarrai": 87, "ndarrai": [87, 218, 224, 230], "prefix_i1_i2_": 87, "_2": [87, 173, 174, 214], "a_0_0": 87, "a_0_1": 87, "a_0_2": 87, "a_1_0": 87, "a_1_1": 87, "a_1_2": 87, "a_0_0_0": 87, "a_0_0_1": 87, "a_0_1_0": 87, "a_0_1_1": 87, "a_0_2_0": 87, "a_0_2_1": 87, "a_1_0_0": 87, "a_1_0_1": 87, "a_1_1_0": 87, "a_1_1_1": 87, "a_1_2_0": 87, "a_1_2_1": 87, "rot_axis1": 87, "rot_axis2": 87, "rot_axis3": 87, "a2idx": 87, "normalform": [88, 187], "hermite_normal_form": [88, 187, 193], "check_rank": [88, 187], "hnf": [88, 187, 193], "explos": [88, 187], "believ": [88, 91, 187], "dmdomainerror": [88, 187], "dmshapeerror": [88, 187], "r598": 88, "cohen": [88, 187, 192, 193], "mutablesparsematrix": 89, "_doktocsr": 90, "csr": 90, "ja": 90, "ia": 90, "_csrtodok": 90, "dok": 90, "1x1": [90, 218], "vert": [90, 179, 182, 251], "saw": [90, 188, 274], "dynam": [91, 98, 99, 101, 105, 107, 109, 110, 113, 116, 124, 126, 127, 128, 129, 130, 131, 132, 173, 174, 176, 177, 181, 182, 233, 234, 243], "eratosthen": 91, "_reset": [91, 194], "_list": 91, "extend_to_no": 91, "mobiusrang": 91, "primerang": 91, "10th": 91, "totientrang": 91, "1e11": 91, "50000": 91, "primal": [91, 185], "1299709": 91, "r599": 91, "prime_number_theorem": 91, "table_of_": 91, "cf": [91, 191], "28x": 91, "2c_x_": 91, "2f_log_x": 91, "2c_and_li": 91, "r600": 91, "approximations_for_the_nth_prime_numb": 91, "r601": 91, "27_number": 91, "arr1": 91, "arr2": 91, "prevprim": 91, "9th": 91, "nextprim": 91, "occupi": [91, 164, 224], "conjectur": [91, 191], "twin": 91, "bertrand": 91, "brocard": 91, "primori": 91, "r602": 91, "r603": 91, "utm": 91, "postul": 91, "r604": 91, "s_postul": 91, "primefactor": 91, "argu": 91, "cycle_length": 91, "nmax": 91, "brent": [91, 233], "floyd": 91, "cycle_detect": 91, "17737": 91, "20000": 91, "compositepi": 91, "831": 91, "smoothness_p": 91, "sm": [91, 114, 131, 185], "psm": 91, "govern": 91, "10431": 91, "annot": [91, 184, 198], "21477639576571": 91, "4410317": 91, "1787": 91, "4869863": 91, "2434931": 91, "multiplicity_in_factori": 91, "nfac": 91, "52818775009509558395695966887": 91, "is2pow": 91, "pollard_rho": 91, "1234": [91, 211], "max_step": 91, "pollard": [91, 214], "leader": 91, "16843009": 91, "32767": 91, "4i": 91, "3i": 91, "2489": 91, "1482": 91, "285": [91, 216], "leadup": 91, "r605": 91, "crandal": 91, "carl": [91, 233], "pomer": [91, 233], "229": 91, "231": [91, 174], "pollard_pm1": 91, "ilcm": 91, "likelihood": 91, "1009": 91, "igcd": [91, 186], "am": [91, 169, 198], "255": 91, "crack": 91, "617": 91, "1786": 91, "worst": [91, 194, 214], "scenario": [91, 218], "divisisor": 91, "realist": 91, "r606": 91, "236": 91, "r607": 91, "washington": 91, "2007": [91, 130, 233], "spring": [91, 106, 108, 109, 114, 119], "ent": 91, "node81": 91, "r608": 91, "toronto": 91, "yuvalf": 91, "use_ecm": 91, "65537": [91, 197], "1407633717262338957430697921446883": 91, "991": 91, "202916782076162456022877024859": 91, "4200": 91, "1764": 91, "toggl": [91, 184], "12345678910111213141516": 91, "2507191691": 91, "1231026625769": 91, "factorrat": 91, "rat": 91, "987": 91, "10000000001": 91, "99009901": 91, "divisor_count": 91, "tim": [91, 236], "stackoverflow": [91, 236, 239], "1010381": 91, "proper_divisor": 91, "proper_divisor_count": 91, "udivisor": 91, "udivisor_count": 91, "r609": 91, "unitary_divisor": 91, "r610": 91, "unitarydivisor": 91, "r611": 91, "unitarydivisorfunct": 91, "antidivisor": 91, "r612": 91, "margin": [91, 101, 184, 218], "antidivisor_count": 91, "a066272": 91, "a066272a": 91, "r613": 91, "r614": 91, "27s_totient_funct": 91, "r615": 91, "totientfunct": 91, "r616": 91, "carmichael_funct": 91, "r617": 91, "carmichaelfunct": 91, "divisor_sigma": 91, "sigma_k": 91, "m_i": [91, 191], "m_ik": 91, "r618": 91, "divisor_funct": 91, "udivisor_sigma": 91, "47450": 91, "152": 91, "r619": 91, "core_t": 91, "core_2": 91, "squarefre": [91, 193], "cubefre": 91, "9424": 91, "1178": 91, "379238": 91, "square_factor": 91, "r620": 91, "free_integ": 91, "squarefree_cor": 91, "primenu": 91, "r621": 91, "primeomega": 91, "r622": 91, "mersenne_prime_expon": 91, "mersenn": 91, "4423": 91, "r623": 91, "perfectnumb": 91, "r624": 91, "perfect_numb": 91, "is_mersenne_prim": 91, "r625": 91, "mersenneprim": 91, "abund": 91, "is_abund": 91, "r626": 91, "abundantnumb": 91, "is_defici": 91, "r627": 91, "deficientnumb": 91, "is_amic": 91, "amic": 91, "220": [91, 194], "r628": 91, "amicable_numb": 91, "symmetric_residu": 91, "v_i": [91, 193, 216], "65": [91, 101, 191, 218], "639985": [91, 191], "912285": [91, 191], "954": 91, "gf_crt": [91, 191], "solve_congru": [91, 191], "programm": [91, 198], "galoistool": [91, 191], "crt1": 91, "4536": 91, "252": 91, "756": 91, "crt2": 91, "remainder_modulus_pair": 91, "mi": [91, 198], "k1": [91, 131, 162, 188, 189, 191], "k2": [91, 131, 188], "c_kn": 91, "binomial_coefficients_list": 91, "multinomial_coeffici": 91, "k_m": 91, "k_i": [91, 191, 208], "yann": 91, "laigl": 91, "chapui": 91, "permiss": [91, 183], "multinomial_coefficients_iter": 91, "_tupl": 91, "m53": 91, "partitions_": 91, "npartit": 91, "hardi": 91, "rademach": [91, 218], "r629": 91, "1958": [91, 183], "partitionfunctionp": 91, "is_euler_pseudoprim": 91, "pseudoprim": 91, "r630": 91, "euler_pseudoprim": 91, "prep": [91, 214, 215], "r631": 91, "mersenneforum": 91, "showpost": 91, "110896": 91, "mr": 91, "miller": 91, "rabin": 91, "wit": 91, "1373651": 91, "479001599": 91, "r632": 91, "135": 91, "138": 91, "93rabin_primality_test": 91, "deterministic_vari": 91, "is_lucas_prp": 91, "selfridg": 91, "377": 91, "1159": 91, "1829": 91, "3827": 91, "5459": 91, "5777": 91, "9071": 91, "9179": 91, "bailli": 91, "wagstaff": 91, "1980": [91, 236], "mpq": [91, 188, 190], "lucaspseudoprim": 91, "a217120": 91, "lucas_pseudoprim": 91, "is_strong_lucas_prp": 91, "bpsw": 91, "10877": 91, "16109": 91, "18971": 91, "a217255": 91, "psw_primality_test": 91, "is_extra_strong_lucas_prp": 91, "grantham": 91, "mo": [91, 131, 198], "jone": [91, 136], "preprint": 91, "a217719": 91, "perl": 91, "counterexampl": [91, 274], "989": 91, "3239": 91, "jon": 91, "mcom": 91, "234": 91, "01197": 91, "bisect": [91, 194, 216], "1e3": 91, "1e23": [91, 239], "near_int": 91, "strong_pseudoprim": 91, "is_gaussian_prim": 91, "r633": 91, "gaussian_prim": 91, "residue_ntheori": 91, "n_order": 91, "cong": [91, 191], "primitive_root": [91, 193], "r634": 91, "stein": [91, 214], "r635": 91, "hackman": 91, "2009": [91, 183], "sqrt_mod": 91, "sqrt_mod_it": 91, "quadratic_residu": 91, "nthroot_mod": 91, "109": [91, 192, 211], "is_nthpow_residu": 91, "r636": 91, "is_quad_residu": 91, "legendre_symbol": 91, "genfrac": 91, "nonresidu": 91, "alpha_2": [91, 193], "alpha_k": 91, "discrete_log": 91, "prime_ord": 91, "giant": [91, 217], "pohlig": 91, "r637": 91, "discretelogarithm": 91, "r638": 91, "cryptographi": [91, 253, 260], "menez": 91, "vanston": 91, "continued_fract": 91, "continued_fraction_period": 91, "continued_fraction_reduc": 91, "continued_fraction_converg": 91, "continued_fraction_iter": 91, "106": 91, "103993": 91, "33102": 91, "104348": 91, "33215": 91, "208341": 91, "66317": 91, "292": 91, "r639": 91, "discrimin": [91, 189, 191, 193, 194], "r640": 91, "periodic_continued_fract": 91, "r641": 91, "rosen": 91, "379": [91, 194], "381": 91, "januari": 91, "1992": [91, 192, 216], "233": [91, 192, 214], "718281835": 91, "287": 91, "count_digit": 91, "1111339": 91, "0xfa": 91, "c77": 91, "is_palindrom": [91, 236], "palindrom": 91, "0o121": 91, "oct": 91, "0o171": 91, "fermion": [91, 164], "r642": 91, "b6bius_funct": 91, "r643": 91, "thoma": [91, 130], "koshi": 91, "egyptian_fract": 91, "greedi": [91, 191, 207, 210], "egyptian": 91, "r644": 91, "jewett": 91, "takenouchi": 91, "3192": 91, "1118": 91, "2580": 91, "sylvest": [91, 191], "r645": 91, "seldom": 91, "blow": 91, "doubli": 91, "exhibit": [91, 183, 193, 207], "singli": 91, "tendenc": 91, "r646": 91, "1921": 91, "golumb": 91, "1962": 91, "propos": 91, "bleicher": 91, "1972": 91, "r647": 91, "420": [91, 211], "140": 91, "574": 91, "2788": 91, "6460": 91, "11590": 91, "33062": 91, "113820": 91, "greedy_algorithm_for_egyptian_fract": 91, "ic": [91, 214], "uci": 91, "eppstein": 91, "numth": 91, "egypt": 91, "ami": 91, "ektf": 91, "hu": 91, "finalpdf": 91, "ami_42_from129to134": 91, "bbp_pi": 91, "pi_hex_digit": 91, "hex": 91, "3243f6a8885a30": 91, "324": [91, 192], "r648": 91, "numberworld": 91, "subexponenti": 91, "comfort": [91, 92], "15154262241479": 91, "15423094826093": 91, "799333555511111": 91, "809709509409109": 91, "888888877777777": 91, "914148152112161": 91, "factoris": [91, 188, 189, 214], "max_curv": 91, "lenstra": 91, "repeatedli": [91, 102, 230], "ecm_one_factor": 91, "pseudorandom": [91, 236], "25645121643901801": 91, "5394769": 91, "4753701529": 91, "9804659461513846513": 91, "4641991": 91, "2112166839943": 91, "7060005655815754299976961394452809": 91, "6988699669998001": 91, "1010203040506070809": 91, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 91, "2709077133180915240135586837960864768806330782747": 91, "248": 91, "prime_bound": 91, "error_term": 91, "siq": 91, "modn": 91, "mulipl": 91, "r649": 91, "semanticscholar": 91, "5c52": 91, "8a975c1405bd35c65993abf5a4edb667c1db": 91, "r650": 91, "rieselprim": 91, "ziki": 91, "initializing_quadratic_siev": 91, "5915587277": 91, "3267000013": 91, "facilit": [92, 124, 135, 180, 229], "ship": 92, "000507214304613640": 92, "microsecond": 92, "000507214304614": 92, "hundr": [92, 268], "nanosecond": 92, "84147098": [92, 237, 263], "84119981": 92, "84092844": 92, "05426074": 92, "05433146": 92, "05440211": 92, "confer": [92, 272], "nano": 92, "manufactur": 92, "asnumpi": 92, "compliat": 92, "jnp": 92, "asarrai": 92, "84147096": 92, "8411998": 92, "05426079": 92, "05433151": 92, "autowrap": [92, 223, 231, 235, 255, 261], "implemented_funct": [92, 230, 237], "effort": [92, 189, 191], "50u": 92, "1u": 92, "10n": 92, "sympy_pars": 93, "local_dict": 93, "lambda_not": 93, "repeated_decim": 93, "auto_numb": 93, "factorial_not": 93, "global_dict": 93, "standard_transform": 93, "implicit_multiplication_appl": 93, "implicit_appl": 93, "implicit_multipl": 93, "convert_equals_sign": 93, "function_exponenti": 93, "stringify_expr": 93, "eval_expr": 93, "name_dict": 93, "fullform": 93, "setdelai": 93, "datatyp": [93, 189, 198, 231], "split_symbol": 93, "split_symbols_custom": 93, "_token_splitt": 93, "can_split": 93, "unsplitt": 93, "10sin": 93, "3xyz": 93, "2111": 93, "latex2sympi": 93, "typograph": 93, "parse_latex": 93, "stricter": 93, "liber": [93, 105, 268], "618": 93, "latexparsingerror": 93, "sym_expr": 93, "sympyexpress": 93, "source_cod": 93, "return_expr": 93, "definiton": 93, "src2": 93, "convert_to_expr": 93, "convert_to_c": 93, "src3": 93, "convert_to_python": 93, "src_code": 93, "filenam": [93, 198, 229, 230, 231, 239], "convert_to_fortran": 93, "continuum_mechan": [94, 95, 97], "elastic_modulu": 94, "second_mo": 94, "base_char": 94, "withstand": [94, 95], "character": [94, 95, 179, 182, 205, 218, 224, 251], "profil": 94, "shear": [94, 95], "downward": [94, 95, 97, 193], "apply_load": [94, 95, 97], "bc_deflect": [94, 95], "boundary_condit": 94, "solve_for_reaction_load": [94, 95], "shear_forc": [94, 95], "bending_mo": [94, 95], "applied_load": 94, "nm": [94, 95, 162, 219], "pointload": [94, 95], "ramp": [94, 95, 100], "parabol": 94, "apply_support": [94, 97], "loc": 94, "freedom": [94, 108, 109, 115, 118, 124, 218], "roller": [94, 95, 97], "upward": [94, 193], "r_10": 94, "r_30": 94, "4000": [94, 95], "bc_slope": [94, 95], "cross_sect": 94, "elast": [94, 95], "12000": 94, "draw": [94, 144, 198, 218, 260], "pictori": 94, "positv": 94, "ild_moment": 94, "ild_react": 94, "reaction": [94, 95, 97], "ild_shear": 94, "axial": [94, 133], "hing": [94, 95], "cantilev": [94, 95], "inertia": [94, 95, 104, 105, 106, 113, 114, 116, 117, 119, 121, 122, 123, 124, 131, 174, 180, 181, 182, 193], "666666666666667": [94, 95], "max_bmoment": 94, "max_deflect": 94, "max_shear_forc": 94, "plot_bending_mo": [94, 95], "gpa": 94, "400": [94, 184, 194], "13750": 94, "31250": 94, "plot_deflect": [94, 95], "00138541666666667": 94, "86458333333333e": 94, "04166666666667e": 94, "20833333333333e": 94, "51041666666667e": 94, "plot_ild_mo": 94, "solve_for_ild_mo": 94, "1kn": 94, "r_0": 94, "r_8": 94, "solve_for_ild_react": 94, "plot_ild_react": 94, "5kn": 94, "r_7": 94, "plotgrid": [94, 260], "plot_ild_shear": 94, "solve_for_ild_shear": 94, "plot_loading_result": [94, 95], "subplot": [94, 184], "plot_shear_forc": [94, 95], "plot_shear_stress": 94, "stress": 94, "6875": 94, "2500": 94, "15625": [94, 171], "plot_slop": [94, 95], "59375e": 94, "125e": 94, "08333333333333e": 94, "0001953125": 94, "point_cflexur": 94, "overhang": [94, 95], "10kn": 94, "20kn": [94, 95], "3kn": 94, "reaction_load": [94, 95, 97], "remove_load": [94, 97, 106], "shear_stress": 94, "beam3d": 94, "shear_modulu": 94, "apply_moment_load": 94, "solve_slope_deflect": 94, "r651": 94, "home": [94, 193, 211, 218, 229], "aau": 94, "jc": 94, "femtesemest": 94, "beams3d": 94, "axial_forc": 94, "axial_stress": 94, "load_vector": 94, "max_bending_mo": 94, "16000": 94, "495": 94, "10793": 94, "6400": 94, "301": [94, 208, 211], "560": 94, "2400": 94, "moment_load_vector": 94, "40000": 94, "4013": 94, "90300": 94, "1520": 94, "903": 94, "1600": [94, 95], "172": 94, "polar_mo": 94, "i1": [94, 102, 114, 131, 224], "1350": 94, "torsional_mo": 94, "torsion": 94, "_________________": 95, "________________": [95, 214], "_______________v": 95, "_______________": 95, "equilibrium": [95, 116, 128], "20e9": 95, "25e": 95, "______________________________________________": 95, "_______________________________________________": 95, "r\u2081": 95, "r\u2082": 95, "______________________": 95, "________________________": 95, "8kn": 95, "_____________": 95, "1m": 95, "3m": 95, "2m": 95, "5m": [95, 233], "679": 95, "12kn": 95, "________________________________": 95, "____________________________________________________": 95, "o____________________________________________________": 95, "4m": 95, "concentr": [95, 218], "_____________________________________": 95, "m\u2081": 95, "m\u2082": 95, "connector": 95, "_____________________": 95, "_______________________": 95, "_____________________o_______________________": 95, "oooo": [95, 236], "r\u2083": 95, "_______i_______": 95, "flexur": 95, "rigid": [95, 97, 106, 109, 111, 114, 116, 119, 124, 131, 174, 181], "____________": 95, "____________o________________________": 95, "a\u2081": [95, 274], "a\u2082": [95, 274], "six": [95, 198, 211, 217, 218], "joint": [97, 117, 119, 124], "add_nod": 97, "node_1": 97, "node_2": 97, "node_3": 97, "node_4": 97, "add_memb": 97, "member_1": 97, "member_2": 97, "member_3": 97, "member_4": 97, "member_5": 97, "270": 97, "360": 97, "change_member_label": 97, "new_label": 97, "change_node_label": 97, "bc_new": 97, "internal_forc": 97, "member_label": 97, "node_label": 97, "node_posit": 97, "remove_memb": 97, "remove_nod": 97, "remove_support": 97, "lti": [98, 99, 100], "transferfunct": [98, 99, 101], "interconnect": [98, 101, 108], "mimo": [98, 101], "transferfunctionmatrix": [98, 101], "mimoseri": [98, 101], "mimoparallel": [98, 101], "mimofeedback": [98, 101], "control_plot": 99, "pole_zero_plot": 99, "pole_color": 99, "blue": [99, 125, 184, 198], "pole_markers": 99, "zero_color": 99, "orang": 99, "zero_markers": 99, "show_ax": 99, "marker": [99, 184], "sisolineartimeinvari": [99, 101], "markers": 99, "tf1": [99, 101], "pole_zero_numerical_data": 99, "r652": 99, "93zero_plot": 99, "siso": [99, 101], "8660254j": 99, "bode_plot": 99, "initial_exp": 99, "final_exp": 99, "freq_unit": 99, "phase_unit": 99, "semilog": 99, "hz": 99, "hertz": 99, "bode_magnitude_plot": 99, "bode_phase_plot": 99, "bode_magnitude_numerical_data": 99, "5148378120533502e": 99, "68437": 99, "36188804005": 99, "020599914256786": 99, "0205999155219505": 99, "4117304087953": 99, "00000000260573": 99, "bode_phase_numerical_data": 99, "4472354033813751e": 99, "035581932165858e": 99, "47577": 99, "3248186011": 99, "67884": 99, "09326036123": 99, "5000000000291665e": 99, "6180885085e": 99, "08895483066e": 99, "1415085799262523": 99, "14155265358979": 99, "impulse_response_plot": 99, "lower_limit": [99, 264], "upper_limit": [99, 264], "step_response_plot": 99, "ramp_response_plot": 99, "r653": 99, "impulse_response_numerical_data": 99, "nb_of_point": [99, 184], "lineover1drangeseri": [99, 184], "amplitud": [99, 138], "06616480200395854": 99, "854500743565858": 99, "9999999799999999": 99, "7042848373025861": 99, "170748906965121e": 99, "1901263495547205e": 99, "r654": 99, "step_response_numerical_data": 99, "025413462339411542": 99, "0484508722725343": 99, "670250533855183": 99, "844291913708725": 99, "023844582399907256": 99, "042894276802320226": 99, "828770759094287e": 99, "456457160755703e": 99, "mx": [99, 144, 205], "r655": 99, "ramp_funct": 99, "ramp_response_numerical_data": 99, "12166980856813935": 99, "861246379582118": 99, "4504508011325967e": 99, "006046440489058766": 99, "12499999999568202": 99, "12499999999661349": 99, "bode": 100, "impuls": [100, 101], "den": [101, 189, 210, 214], "superscript": [101, 198], "tf2": 101, "tf3": 101, "tf4": 101, "tf5": 101, "tf6": 101, "500000000000000": 101, "tf7": 101, "tf8": 101, "tf9": 101, "tf10": 101, "tf11": 101, "tf12": 101, "r656": 101, "transfer_funct": 101, "r657": 101, "dc_gain": 101, "dc": [101, 127], "from_rational_express": 101, "zerodivisionerror": [101, 189, 227, 237], "complexinfin": 101, "tf": [101, 237], "is_biprop": 101, "is_prop": 101, "is_stabl": 101, "is_strictly_prop": 101, "sys1": 101, "sys2": 101, "feedforward": 101, "fed": 101, "sit": [101, 182], "plant": 101, "compulsori": 101, "tf_1": 101, "tf_2": 101, "tf_3": 101, "tf_4": 101, "tfm_1": 101, "num_input": 101, "num_output": 101, "tfm_2": 101, "tf_5": 101, "tf_6": 101, "tf_7": 101, "tf_8": 101, "tfm_3": 101, "tfm_4": 101, "tfm_5": 101, "tfm_6": 101, "tf_9": 101, "tf_10": 101, "tfm_7": 101, "tfm_8": 101, "tfm_9": 101, "tfm_10": 101, "tfm_11": 101, "tfm_12": 101, "elem_pol": 101, "elem_zero": 101, "from_matrix": [101, 187], "m_tf": 101, "tfm": 101, "tfm1": 101, "tfm2": 101, "g4": 101, "tfm3": 101, "mimolineartimeinvari": 101, "mat_a": 101, "mat_b": 101, "mat_c": 101, "tfm_a": 101, "tfm_b": 101, "tfm_c": 101, "expr_1": 101, "expr_2": 101, "expr_3": 101, "expr_4": 101, "plant_mat": 101, "controller_mat": 101, "neg_feedback": 101, "hep": 102, "gamma_matric": [102, 104], "gammamatrix": 102, "lorentzindex": 102, "gammamatrixhead": 102, "extract_type_ten": 102, "gamma_trac": 102, "i0": [102, 136, 224], "i2": [102, 114, 131, 224], "i4": [102, 224], "i5": 102, "ps": 102, "qs": [102, 109, 258], "kahane_simplifi": 102, "spinor": 102, "ta": [102, 207], "tb": [102, 207, 229], "tc": [102, 189, 194, 207], "joseph": [102, 192], "kahan": 102, "octob": 102, "1968": 102, "simplify_gpgp": 102, "e_nl": [103, 165], "hartre": 103, "helium": 103, "2209": 103, "e_nl_dirac": 103, "spin_up": 103, "035999037000": 103, "relativist": 103, "angular": [103, 106, 108, 111, 116, 117, 118, 119, 121, 123, 124, 128, 131, 133, 137, 138, 140, 143, 161, 165, 174, 177, 183], "momentum": [103, 111, 114, 124, 131, 142, 143, 161, 165, 183, 224], "light": [103, 136, 169, 178, 185], "035999037": 103, "1012": 103, "3627": 103, "500006656595360": 103, "125002080189006": 103, "125000416028342": 103, "0555562951740285": 103, "0555558020932949": 103, "0555556377366884": 103, "psi_nlm": 103, "wave": [103, 134, 135, 136, 201, 259], "psi_": [103, 140], "nlm": 103, "radial": [103, 118, 165], "nl": [103, 165], "magnet": [103, 135, 179, 251], "azimuth": 103, "wf": [103, 116], "abs_sqrd": 103, "silver": 103, "94": [103, 192], "141": 103, "4418": 103, "mdft": 104, "mgamma": 104, "gamma_5": 104, "gamma_0": 104, "gamma_3": 104, "r658": 104, "msigma": 104, "pauli": [104, 259], "sigma_i": [104, 218], "r659": 104, "pauli_matric": [104, 139], "pat_matrix": 104, "unansw": [105, 173], "kane": [105, 108, 114, 120, 124, 125, 130, 131, 173, 174, 243], "q1d": [105, 114, 116, 118, 121, 122, 123, 126, 127, 128, 129, 173, 178, 182], "q2d": [105, 114, 116, 118, 121, 122, 123, 126, 127, 177, 178], "q3d": [105, 121, 122, 123, 126], "kinemat": [105, 108, 109, 113, 114, 116, 117, 118, 119, 121, 123, 125, 126, 128, 129, 131, 132, 174, 180, 182], "dyad": [105, 131, 246], "mprint": [105, 121, 122, 123, 124, 126], "mpprint": [105, 124, 126], "mlatex": [105, 124], "sub_dict": [105, 107, 116], "msub": [105, 124, 128], "cleaner": [105, 131, 214], "gsl": [105, 231], "lsoda": 105, "penalti": 105, "masscent": [106, 108, 111, 117, 125, 129, 131], "central_inertia": [106, 111, 117, 119], "possess": [106, 129, 224], "name_of_bodi": 106, "ixx": [106, 111, 174], "body_inertia": 106, "torqu": [106, 109, 113, 119, 126, 127, 131], "ang_vel_in": [106, 108, 114, 121, 122, 131, 174, 181], "set_ang_vel": [106, 111, 114, 116, 121, 122, 128, 129, 131, 132, 174, 176, 177, 181], "apply_forc": [106, 108, 119], "reaction_bodi": [106, 108, 119], "reaction_point": 106, "oppposit": 106, "desri": 106, "force1": 106, "b_masscent": 106, "b_frame": 106, "newtonion": [106, 108], "spring_forc": 106, "n_frame": 106, "apply_torqu": [106, 119], "torquess": 106, "torque1": 106, "b1_frame": 106, "b2_frame": 106, "clear_load": 106, "dcm": [106, 108, 114, 116, 131, 174, 181, 182, 243], "orient_axi": [106, 174, 176], "kinetic_energi": [106, 124, 129, 131], "kinet": [106, 109, 111, 124], "inerti": [106, 108, 109, 111, 116, 118, 121, 126, 127, 129, 131], "set_vel": [106, 109, 111, 114, 116, 118, 121, 122, 123, 126, 127, 128, 129, 131, 132, 177, 181], "b_ixx": 106, "b_mass": [106, 108], "masscenter_vel": [106, 108], "smart": [107, 128, 205, 211, 214], "sub1": [107, 198], "sub2": [107, 198], "reference_fram": [107, 174], "child": [108, 125, 188, 233], "parent_joint_po": [108, 117, 119, 125], "child_joint_po": [108, 117, 119, 125], "parent_axi": [108, 117, 119, 125], "child_axi": [108, 117, 119, 125], "_generate_coordin": 108, "_generate_spe": 108, "_orient_fram": 108, "_set_angular_veloc": 108, "_set_linar_veloc": 108, "rotation_axi": 108, "parent_point": [108, 125], "child_point": [108, 125], "kde": [108, 117, 118, 125, 128], "revolut": 108, "\u03c9": 108, "pc": [108, 195], "pc_p_joint": 108, "pc_c_joint": 108, "p_frame": 108, "c_frame": 108, "theta_pc": 108, "omega_pc": 108, "pos_from": [108, 114, 116, 117, 118, 125, 131, 177, 181], "pendulum": [108, 113, 115, 119, 124, 128, 132, 181], "upper_bob": 108, "lower_bob": 108, "ceiling_joint": 108, "pendulum_joint": 108, "theta_p1": 108, "theta_p2": 108, "u_fram": 108, "l_frame": 108, "omega_p1": 108, "omega_p2": 108, "vel": [108, 114, 116, 118, 122, 125, 131, 177, 181, 249], "prismat": 108, "slide": 108, "x_pc": 108, "v_pc": 108, "wall": [108, 119], "part1": 108, "part2": 108, "j1": [108, 117, 119, 143, 161], "j2": [108, 117, 119, 143, 161], "x_j1": 108, "w_frame": 108, "x_j2": 108, "p1_frame": 108, "v_j1": 108, "damper": [108, 109, 114, 119], "form_eom": [108, 119, 125], "mass_matrix_ful": [108, 109, 114, 119, 126, 127], "forcing_ful": [108, 109, 114, 119, 126, 127], "mass_matrix": [108, 109, 113, 116, 121, 122, 126, 127, 132], "kanesmethod": [108, 109, 114, 116, 117, 118, 119, 121, 122, 125, 126, 128, 131], "lagrangesmethod": [108, 118, 123, 124, 127, 128], "qd": [108, 109, 116, 126, 177], "inv_method": [108, 109], "solveabl": 108, "q_ind": [109, 110, 114, 116, 117, 118, 121, 122, 126, 128, 131], "u_ind": [109, 110, 114, 116, 117, 118, 121, 122, 126, 128, 131], "kd_eq": [109, 114, 116, 117, 118, 121, 122, 128, 131], "q_depend": [109, 116, 117, 118, 126, 131], "configuration_constraint": [109, 116, 117, 118, 126], "u_depend": [109, 116, 117, 118, 126, 131], "velocity_constraint": [109, 116, 117, 118, 126, 131], "acceleration_constraint": 109, "u_auxiliari": [109, 122, 126, 131], "forcelist": [109, 114, 117, 118, 121, 122, 127, 128, 131], "levinson": [109, 130, 174, 243], "udot": [109, 116], "ud": [109, 126], "kd": [109, 116, 121, 122, 126], "fl": [109, 116, 126, 127, 131, 192], "bl": [109, 116, 126, 131], "frstar": [109, 114, 116, 118, 121, 122, 126, 128, 131], "kanes_equ": [109, 114, 116, 118, 121, 122, 126, 128, 131], "a_and_b": [109, 110, 118], "auxiliary_eq": [109, 122], "constrain": [109, 118, 127, 131], "kindiffdict": [109, 116, 121, 122, 126, 131], "new_method": [109, 118], "intens": [109, 110, 133, 136], "perm_mat": [109, 110, 128], "op_point": [109, 110, 118, 128], "beforehand": [109, 231], "to_linear": [109, 128], "recalcul": [109, 194], "hol_coneq": [109, 118, 127], "nonhol_coneq": [109, 118, 127], "nonconserv": 109, "form_lagranges_equ": [109, 118, 123, 127, 128], "qdot": [109, 116, 117, 177], "qdoubledot": 109, "lam": [109, 110, 132], "lagranges_equ": 109, "qd_ind": [109, 128], "q_dep": [109, 126, 128], "qd_dep": [109, 128], "solve_multipli": [109, 118], "sol_typ": 109, "array_lik": 109, "f_3": [110, 113, 132, 214], "f_c": [110, 118], "f_v": [110, 118], "f_a": 110, "q_d": 110, "u_i": [110, 128, 181, 191], "u_d": [110, 131], "q_op": [110, 118], "u_op": [110, 118], "qd_op": 110, "ud_op": [110, 118], "spatial": [111, 138, 174, 198], "init_vprint": [111, 112, 129, 132, 174, 176, 177, 180, 181, 182], "locatenew": [111, 116, 118, 121, 122, 123, 128, 129, 131, 132, 175, 177, 179, 181], "parallel_axi": 111, "inertia_tupl": 111, "mv": 111, "iyi": [111, 174], "izz": [111, 174], "ixi": [111, 174], "iyz": [111, 174], "izx": 111, "yy": [111, 182, 214], "yz": [111, 182, 184], "zx": [111, 182], "pos_vec": 111, "px": [111, 154, 159, 224], "body1": 111, "body2": 111, "body3": 111, "h2": 111, "multibodi": [111, 114, 124, 130, 131, 132, 181], "vprint": [112, 173, 177, 180, 182], "vpprint": [112, 173, 180, 182], "vlatex": [112, 173, 174, 180, 182], "coord_stat": 113, "right_hand_sid": 113, "coordinate_deriv": [113, 132], "alg_con": [113, 132], "output_eqn": 113, "coord_idx": [113, 132], "speed_idx": [113, 132], "m_3": [113, 132, 143, 183], "exogen": [113, 132], "ref_fram": 113, "graviti": [113, 114, 118, 119, 121, 123, 131, 179, 251], "theta_dot": 113, "kin_explicit_rh": [113, 132], "dyn_implicit_mat": [113, 132], "dyn_implicit_rh": [113, 132], "symsystem": 113, "dae": [113, 132], "adjust": [113, 201, 205], "comb_implicit_mat": [113, 132], "comb_implicit_rh": [113, 132], "kinema": 113, "comb_explicit_rh": [113, 132], "compute_explicit_form": 113, "awhil": 113, "constant_symbol": 113, "dynamic_symbol": 113, "motiongenesi": [114, 131], "double_pendulum": 114, "motionvari": [114, 131], "newtonian": [114, 131], "simprot": [114, 131], "n_a": 114, "n_b": 114, "w_a_n": 114, "w_b_n": [114, 131], "p_o_p": 114, "p_p_r": 114, "v_o_n": [114, 131], "v2pt": [114, 131], "v_p_n": 114, "v_r_n": 114, "force_p": 114, "force_r": 114, "tfinal": 114, "integstp": 114, "some_filenam": 114, "parse_autolev": 114, "sympy_cod": 114, "include_numer": 114, "include_pydi": 114, "pydi": [114, 131, 174], "u1d": [114, 116, 118, 121, 122, 126], "u2d": [114, 116, 118, 121, 122, 126], "frame_n": 114, "frame_a": 114, "frame_b": 114, "point_o": 114, "particle_p": 114, "p_pt": 114, "particle_r": 114, "r_pt": 114, "set_po": [114, 177, 181], "v2pt_theori": [114, 116, 121, 122, 123, 128, 129, 131, 132, 177, 181], "initial_condit": [114, 131], "overwritten": 114, "e2row": 114, "eigvec": [114, 131], "eigenvec": 114, "deg2rad": 114, "0174533": 114, "wo": 114, "coef": [114, 131], "u3": [114, 116, 117, 119, 121, 122, 126, 131, 177, 181], "strai": 114, "reassign": 114, "inher": [114, 237, 266], "rhs_x": 114, "i_b_bo": 114, "body_b": 114, "body_b_f": 114, "b_cm": 114, "b_f": 114, "scene": [114, 210, 266], "i_c_d": 114, "i_p_q": 114, "i_b_o": 114, "e3": [114, 205, 214], "i_p_o": 114, "e4": [114, 205], "p_so_o": 114, "nicheck": 114, "plug": [114, 169], "hurdl": 114, "gitlab": 114, "repo": 114, "ch4": 114, "ch5": 114, "ch6": 114, "cst": 114, "grammar": [114, 210], "roll": [115, 116, 124, 181, 218], "disc": [115, 124, 181], "bicycl": [115, 124, 130], "nonminim": [115, 124, 128], "linkag": [115, 124], "meijaard2007": [116, 130], "steer": [116, 130], "purposefulli": 116, "mechanics_print": [116, 117, 121, 122, 123, 124, 125, 126, 127], "yaw": 116, "ang": 116, "rear": 116, "wheel": 116, "pitch": 116, "q4": [116, 126, 176], "q5": [116, 176], "q4d": [116, 126], "q5d": 116, "u4": [116, 122, 126, 131], "u5": [116, 122], "u6": [116, 122], "u3d": [116, 121, 122], "u4d": 116, "u5d": 116, "u6d": 116, "explanatori": 116, "wfrad": 116, "wrrad": 116, "htangl": 116, "forkoffset": 116, "forklength": 116, "framelength": 116, "forkcg1": 116, "forkcg3": 116, "framecg1": 116, "framecg3": 116, "iwr11": 116, "iwr22": 116, "iwf11": 116, "iwf22": 116, "iframe11": 116, "iframe22": 116, "iframe33": 116, "iframe31": 116, "ifork11": 116, "ifork22": 116, "ifork33": 116, "ifork31": 116, "mframe": 116, "mfork": 116, "mwf": 116, "mwr": 116, "wr": 116, "tempfram": 116, "tempfork": 116, "orientnew": [116, 118, 121, 122, 123, 128, 132, 174, 176, 177, 179, 181, 182], "wr_cont": 116, "wr_mc": 116, "frame_mc": 116, "fork_mc": 116, "wf_mc": 116, "wf_cont": 116, "flip": [116, 149, 158, 218], "frame_i": 116, "fork_i": 116, "wr_i": 116, "wf_i": 116, "bodyfram": 116, "bodyfork": 116, "bodywr": 116, "bodywf": 116, "nonholonom": 116, "closer": [116, 217, 269], "slip": [116, 120, 122, 181], "replic": 116, "conlist_spe": 116, "conlist_coord": 116, "gravit": [116, 121, 167, 179, 251], "aforement": [116, 179, 211, 249], "paperradrear": 116, "paperradfront": 116, "hta": 116, "trailpap": 116, "08": 116, "rake": 116, "paperwb": 116, "02": 116, "paperframecgx": 116, "paperframecgz": 116, "paperforkcgx": 116, "paperforkcgz": 116, "framecgnorm": 116, "framecgpar": 116, "tempa": 116, "tempb": 116, "tempc": 116, "paperforkl": 116, "forkcgnorm": 116, "forkcgpar": 116, "upright": 116, "val_dict": 116, "0603": 116, "1405": 116, "05892": 116, "00708": 116, "00756": 116, "kdd": [116, 121, 122], "centripet": 116, "corioli": 116, "forcing_lin": 116, "mm_full": 116, "_k_kqdot": 116, "xdot": 116, "lean": [116, 121, 123], "amat": 116, "summari": [117, 210, 229, 253], "jointsmethod": [117, 119, 124], "q_1": [117, 118, 119, 125, 128, 144, 181, 194, 211], "q_2": [117, 118, 119, 128, 181], "q_3": [117, 119, 181], "u_1": [117, 118, 119, 125, 181, 193, 214], "u_2": [117, 118, 119, 181, 193, 214], "u_3": [117, 119, 181], "densiti": [117, 218, 229, 252], "link1": 117, "link2": 117, "link3": 117, "link4": 117, "joint1": 117, "pinjoint": [117, 119], "joint2": 117, "joint3": 117, "j3": [117, 119, 143, 161], "fh": 117, "fhd": 117, "_method": 117, "_form_eom": 117, "eom": [118, 119, 128], "theta1": 118, "dq_dict": 118, "presimplifi": 118, "inp_vec": [118, 128], "lag": [118, 123, 128], "lm": [118, 127, 128, 191, 194], "lag_eq": [118, 128], "lam_op": 118, "prismaticjoint": [119, 125], "mb": [119, 131], "ibzz": 119, "compound_pend": 119, "simple_pend": 119, "slider": [119, 125], "rev1": 119, "rev2": 119, "w_r_n_qd": [121, 122], "dmc": [121, 122, 123], "uv": [121, 122, 164], "bodyd": [121, 122, 123], "bodylist": [121, 122], "revisit": [122, 181], "kane1985": [122, 126, 129, 130], "thorough": [122, 128, 211], "simplifc": 122, "f3": [122, 184, 198], "necessit": 122, "factor_term": [122, 194, 207, 210], "simplify_auxiliary_eq": 122, "lrh": 123, "planet": 124, "robot": 124, "fascin": 124, "trajectori": 124, "challeng": 124, "came": [124, 269], "tackl": [124, 231], "organ": 124, "amen": 124, "arduou": 124, "momenta": [124, 143], "symbolicsystem": 124, "rough": [124, 169], "inertia_of_point_mass": 124, "linear_momentum": [124, 129, 131], "angular_momentum": [124, 129, 131], "kanemethod": 124, "find_dynamicsymbol": 124, "red": [125, 184], "parent_fram": 125, "child_fram": 125, "child_mass": 125, "f_h": 126, "nh": 126, "ku": [126, 198], "k_d": 126, "f_d": [126, 127, 191], "dnh": 126, "f_r": [126, 128, 191], "speed_con": 126, "coord_con": 126, "u_dep": 126, "m_d": 127, "lam1": 127, "0_": 128, "blajer1994": [128, 130], "brought": [128, 218], "vel_p": 128, "a_op": 128, "b_op": 128, "m_op": 128, "a_lin": 128, "hasn": 128, "wikidyad": [129, 180], "wikidyadicproduct": [129, 180], "juxtaposit": [129, 173, 246], "hat": [129, 173, 174, 178, 179, 181, 182, 246, 247, 249, 251, 252], "otim": [129, 219], "l_p": 129, "likins1973": [129, 180], "l_b": 129, "requisit": 129, "t_p": 129, "t_b": 129, "t_t": 129, "virtu": [129, 131], "blajer": 130, "wojciech": 130, "werner": 130, "schiehlen": 130, "walter": 130, "schirm": 130, "kane1983": [130, 182], "likin": [130, 180], "david": [130, 194], "spacecraft": 130, "1983": [130, 233], "meijaard": 130, "jim": 130, "papadopoulo": 130, "ruina": 130, "schwab": 130, "royal": 130, "societi": [130, 211], "2084": 130, "1955": 130, "982": 130, "lectur": [131, 192, 218], "rigibodi": 131, "proprietari": 131, "k3": [131, 188], "k4": 131, "b11": 131, "b12": 131, "b21": 131, "b22": 131, "xd": 131, "xd2": 131, "y1d": 131, "y2d": 131, "tina": 131, "overwrit": [131, 173], "dt2": 131, "dy2": 131, "ty": 131, "linsolv": [131, 196, 212, 216, 275], "nonlinsolv": [131, 212, 216, 275], "nsolv": [131, 216], "rowmatrix": 131, "colmatrix": 131, "diagmat": 131, "eigval": 131, "row_matrix": 131, "col_matrix": 131, "ao": 131, "i12": 131, "i23": 131, "i31": 131, "bf": 131, "p_o_q": 131, "mag": 131, "unitvec": 131, "qo": 131, "p_p_q": 131, "partial_veloc": [131, 174, 177], "a_o_n": 131, "set_acc": [131, 177, 181], "qb": [131, 186], "qbd": 131, "alf_b_n": 131, "set_ang_acc": [131, 174], "ang_acc_in": [131, 174], "force_o": 131, "torque_a": 131, "qa": 131, "qad": 131, "a_b": 131, "v1pt": 131, "v1pt_theori": [131, 177, 181], "a1pt": 131, "a1pt_theori": [131, 177], "a2pt": 131, "a2pt_theori": [131, 177, 181], "angvel": 131, "force_vector": 131, "center_of_mass": 131, "kindiff": 131, "ke": 131, "configura": 131, "tion_constraint": 131, "pendent": 131, "velocity_con": 131, "traint": 131, "acceleration_": 131, "u_auxilia": 131, "ry": 131, "matlplotlib": 131, "stiff": 131, "damp": 131, "legend": [131, 184, 201], "introspect": 131, "rich": [131, 210], "media": [131, 137], "histori": 131, "esqu": 131, "cpython": 131, "pertin": [132, 185, 193], "alg_con_ful": 132, "symsystem1": 132, "symsystem2": 132, "symsystem3": 132, "raytransfermatrix": 133, "geometricrai": 133, "beamparamet": 133, "geometric_conj": 133, "gauss_conj": 133, "conjugate_gauss_beam": 133, "lens": 133, "gaussopt": 133, "wavelen": 133, "z_r": 133, "wavelength": [133, 138], "waist": 133, "rayleigh": [133, 218], "refract": [133, 135, 137, 138], "530e": 133, "88679245283019": 133, "92753330865999": 133, "w_0": [133, 211], "00100000000000000": 133, "freespac": 133, "fs": 133, "00101413072159615": 133, "00210803120913829": 133, "r660": 133, "complex_beam_paramet": 133, "r661": 133, "gaussian_beam": 133, "spread": [133, 198, 218, 233], "00053": 133, "goui": 133, "55998576005696": 133, "2809": 133, "peak": 133, "waist_approximation_limit": 133, "paraxi": [133, 137], "06e": 133, "curvedmirror": 133, "curvedrefract": 133, "flatmirror": 133, "flatrefract": 133, "2x1": 133, "thinlen": 133, "r662": 133, "ray_transfer_matrix_analysi": 133, "waist_in": 133, "waist_out": 133, "s_in": 133, "s_out": 133, "w_o": 133, "gaussian_conj": 133, "z_r_in": 133, "incid": [133, 137], "z_r_out": 133, "emerg": [133, 186], "geometric_conj_ab": 133, "geometric_conj_af": 133, "geometric_conj_bf": 133, "rayleigh2waist": 133, "waist2rayleigh": 133, "optic": [135, 136, 137, 138, 259], "permitt": 135, "permeabl": 135, "fermat": 135, "electr": [135, 137, 179, 249, 251], "electromagnet": [135, 179, 224, 251], "intrinsic_imped": 135, "149896229": [135, 138], "kilogram": [135, 167, 169, 171], "1250000": 135, "amper": 135, "refractive_index": 135, "299792458": [135, 138, 171], "r663": 135, "optical_medium": 135, "travel": [135, 138, 179, 249, 251], "stoke": [136, 250], "mueller": 136, "jones_vector": 136, "stokes_vector": 136, "half_wave_retard": 136, "polarizing_beam_splitt": 136, "jones_2_stok": 136, "\u2148": [136, 183, 197, 198, 217, 275], "\u03c7": 136, "\u03c8": 136, "i\u2080": 136, "plate": 136, "hwp": 136, "splitter": 136, "transmit": [136, 137], "pb": 136, "transmitted_port": 136, "reflected_port": 136, "transmitted_pow": 136, "reflected_pow": 136, "r664": 136, "jones_calculu": 136, "r665": 136, "mueller_calculu": 136, "r666": 136, "stokes_paramet": 136, "retard": 136, "poincar\u00e9": 136, "sphere": [136, 243, 252], "tilt": 136, "mayor": 136, "linear_polar": 136, "transmiss": [136, 137], "mueller_matrix": 136, "quarter_wave_retard": 136, "quarter": 136, "phase_retard": 136, "\u03b4": 136, "rs": [136, 195, 231], "ts": [136, 218], "phia": 136, "phib": 136, "4x1": [136, 218], "phi_a": 136, "phi_b": 136, "qwp": 136, "reflective_filt": 136, "unpolar": 136, "transmissive_filt": 136, "attenu": 136, "transmitt": 136, "ndf": 136, "refraction_angl": 137, "fresnel_coeffici": 137, "brewster_angl": 137, "critical_angl": 137, "lens_makers_formula": 137, "mirror_formula": 137, "lens_formula": 137, "hyperfocal_dist": 137, "transverse_magnif": 137, "medium1": 137, "medium2": 137, "brewster": 137, "926093295503462": 137, "onset": 137, "850908514477849": 137, "02005": 137, "angle_of_incid": 137, "polaris": 137, "te": 137, "undergo": 137, "317843553417859": 137, "348645229818821": 137, "658921776708929": 137, "651354770181179": 137, "235625382192159": 137, "971843958291041": 137, "816477005968898": 137, "577377951366403": 137, "r667": 137, "fresnel_equ": 137, "coc": 137, "0033": 137, "focal_length": 137, "n_len": 137, "n_surr": 137, "thick": 137, "1515151515151": 137, "0000000000000": 137, "3418463277618": 137, "41152": 137, "magnif": 137, "twave": 138, "time_period": 138, "wavenumb": 138, "phi1": 138, "phi2": 138, "w1": [138, 210], "w3": [138, 198], "superposit": [138, 149, 160, 185], "angular_veloc": 138, "tempor": 138, "r668": 139, "paulialgebra": 139, "evaluate_pauli_product": 139, "paulimatric": 139, "sigma3": 139, "nodal": [140, 165, 185], "hw": [140, 165], "coherent_st": 140, "coher": [140, 166, 172], "1d": [140, 142, 155, 174, 223], "wavefunct": [140, 153, 162, 165, 259], "r669": 141, "__cmp__": [141, 145, 164], "dagger": [141, 145, 151, 153, 156, 158, 163, 164], "operatorset": [142, 154], "positionbra3d": 142, "eigenbra": [142, 155, 161], "positionket3d": 142, "eigenket": [142, 155, 161], "positionstate3d": 142, "eigenst": [142, 154, 159, 161, 162], "position_x": 142, "position_i": 142, "position_z": 142, "pxbra": [142, 154], "pxket": [142, 154, 159], "pxop": [142, 154, 159], "xbra": [142, 154, 159], "xket": [142, 154, 159], "xop": [142, 154, 159], "yop": 142, "zop": 142, "uncoupl": [143, 161], "r670": 143, "j_3": [143, 161, 183], "r671": 143, "wigner3j": [143, 183], "wigner": [143, 161, 218, 259], "varshalovich": [143, 161], "zyla": 143, "theor": 143, "phy": [143, 169, 183], "083c01": 143, "r672": 143, "w3j": 143, "715": [143, 183, 198], "wigner6j": [143, 183], "j12": [143, 161], "j23": 143, "6j": [143, 183], "wigner9j": [143, 183], "j4": 143, "j34": 143, "j13": 143, "j24": 143, "9j": [143, 183], "cg_simp": 143, "r673": 143, "clebsh": 143, "rethink": 144, "figsiz": 144, "circuitplot": 144, "nqubit": [144, 148, 149, 158], "control_lin": 144, "gate_idx": [144, 148], "min_wir": 144, "max_wir": 144, "control_point": 144, "wire_idx": 144, "not_point": 144, "one_qubit_box": 144, "box": [144, 149, 151, 160, 162, 252], "qubit": [144, 148, 149, 150, 151, 157], "swap_point": 144, "two_qubit_box": 144, "createcg": 144, "latexnam": 144, "mock": 144, "mz": 144, "circuit_plot": 144, "min_qubit": [144, 148], "autogener": 144, "wire": 144, "q_0": [144, 211], "j_0": 144, "r674": 145, "comm": [145, 164, 224], "plank": 146, "r675": 146, "05457162000000e": 146, "planck_const": 146, "hermetian": 147, "r676": 147, "r677": 147, "ket": [147, 152, 153, 154, 156, 158, 159, 162, 164], "bra": [147, 152, 153, 154, 156, 158, 159, 162, 164], "innerproduct": [147, 152, 153, 159, 161, 164], "outerproduct": [147, 153], "seamlessli": 147, "hermitian_adjoint": 147, "hermitian_transpos": 147, "_apply_operators_qubit": 148, "gate_sort": 148, "gate_simp": 148, "ugat": 148, "cgate": 148, "control_valu": 148, "cnot": 148, "eval_control": 148, "plot_gat": 148, "circ_plot": 148, "simplify_cg": 148, "cphase": 148, "cnotgat": 148, "qappli": [148, 149, 151, 153, 158], "get_target_matrix": 148, "represen": 148, "hadamardg": 148, "identityg": 148, "onequbitg": 148, "phaseg": 148, "swapgat": 148, "target1": 148, "target2": 148, "tgate": 148, "twoqubitg": 148, "xgate": 148, "ygate": 148, "zgate": 148, "bubbl": 148, "random_circuit": 148, "ngate": 148, "gate_spac": 148, "mermin": 149, "_represent_zg": 149, "oracleg": 149, "oracl": 149, "intqubit": [149, 158], "search_funct": 149, "wgate": 149, "apply_grov": 149, "grover_iter": 149, "qstate": 149, "wv": 149, "superposition_basi": 149, "numqubit": 149, "basis_st": 149, "matt": 150, "complexspac": 150, "directsumhilbertspac": 150, "r678": 150, "hilbertspac": 150, "fockspac": 150, "hs": 150, "hilbert_spac": [150, 153, 162], "direct_sum": 150, "quantiz": [150, 259], "r679": 150, "mess": [150, 214, 217, 274], "fock_spac": 150, "r680": 150, "tensorpowerhilbertspac": 150, "r681": 150, "tensor_product": 150, "tensorproducthilbertspac": 150, "r682": 150, "clebsch": [151, 161, 183], "gordan": [151, 161, 183], "hilbert": [151, 153, 159], "grover": 151, "qft": [151, 160], "shor": 151, "brabas": [152, 153, 159, 162], "ketbas": [152, 153, 159, 162], "r683": 152, "inner_product": 152, "apply_oper": [153, 164], "identityoper": 153, "r684": 153, "r685": 153, "polymoni": 153, "operator_": 153, "28physic": 153, "old_assumpt": 153, "r686": 153, "outer_product": 153, "unitaryoper": 153, "operators_to_st": 154, "state_to_oper": 154, "_operators_to_st": 154, "state_map": 154, "_state_to_oper": 154, "statebas": [154, 159, 162], "piab": 155, "piabbra": 155, "piabhamiltonian": 155, "piabket": 155, "ip_doit": 156, "smarter": [157, 207], "rk": 157, "iqft": 157, "rkgate": 157, "qtf": 157, "povm": 158, "as_int": [158, 239], "qubit_valu": 158, "intqubitbra": 158, "00001": 158, "qubitbra": 158, "matrix_to_dens": 158, "matrix_to_qubit": 158, "measure_al": 158, "ensembl": 158, "measure_all_oneshot": 158, "oneshot": 158, "measure_parti": 158, "measure_partial_oneshot": 158, "qubit_to_matrix": 158, "enumerate_st": 159, "_enumerate_st": 159, "foo_1": 159, "foo_2": 159, "foo_3": 159, "test2": 159, "bar_4": 159, "bar_5": 159, "bar_10": 159, "get_basi": 159, "replace_non": 159, "operator_to_st": 159, "qexpr": 159, "integrate_result": 159, "orig_expr": 159, "x_ket": 159, "x_op": 159, "rep_expect": 159, "px_2": 159, "px_1": 159, "rep_innerproduct": 159, "_repres": 159, "_represent_foobasi": 159, "foobasi": 159, "_represent_szop": 159, "szupket": 159, "szop": 159, "sz": 159, "cmod": 160, "reformat": 160, "period_find": 160, "momemtum": 161, "j2op": 161, "jxbra": 161, "jx": 161, "jzket": 161, "jxbracoupl": 161, "jcoupl": 161, "jzketcoupl": 161, "jxket": 161, "jxketcoupl": 161, "jybra": 161, "jy": 161, "jybracoupl": 161, "jyket": 161, "jyketcoupl": 161, "jzbra": 161, "jz": 161, "jzbracoupl": 161, "j_4": [161, 183], "argular": 161, "jzop": 161, "passiv": 161, "r687": 161, "wignerd": 161, "mp": [161, 216, 232], "jm": 161, "jj": 161, "r688": 161, "jcoupling_list": 161, "coupledspinst": 161, "spinstat": 161, "r689": 162, "dual_class": 162, "mn": [162, 198, 218], "ket_not": 162, "r690": 162, "k0": [162, 189, 191, 218], "orthogonalbra": 162, "orthogonalket": 162, "orthogonalst": 162, "_eval_adjoint": 162, "timedepbra": 162, "timedepst": 162, "timedepket": 162, "prob": [162, 218], "412214747707527": 162, "matrix_tensor_product": 163, "axb": 163, "xdagger": 163, "axc": 163, "bxc": 163, "tensor_product_simp": 163, "cxd": 163, "boson": 164, "fetter": 164, "welecka": 164, "secondqu": 164, "annihilateboson": 164, "fockstateket": 164, "bket": 164, "fockstatebosonket": 164, "annihilatefermion": 164, "createboson": 164, "is_only_q_annihil": 164, "destroi": [164, 207], "quasi": 164, "hole": 164, "is_only_q_cr": 164, "is_q_annihil": 164, "is_q_creat": 164, "antisymmetrictensor": 164, "bbra": 164, "fockstatebosonbra": 164, "bd": 164, "bosonicbasi": 164, "fock": 164, "NO": 164, "createfermion": 164, "wick": 164, "fbra": 164, "fockstatefermionbra": 164, "fket": 164, "fockstatefermionket": 164, "fixedbosonicbasi": 164, "n_particl": 164, "n_level": 164, "fockstat": 164, "occup": 164, "bosonbra": 164, "fockstatebra": 164, "fermi_level": 164, "r691": 164, "textwrap": [164, 239], "_q": 164, "get_subno": 164, "fermionicoper": 164, "has_q_annihil": 164, "q_annihil": 164, "has_q_creat": 164, "leftmost": 164, "q_creator": 164, "iter_q_annihil": 164, "iter_q_cr": 164, "0x": 164, "permutationoper": 164, "get_permut": 164, "varbosonicbasi": 164, "n_max": 164, "creator": 164, "evaluate_delta": 164, "einstein": [164, 224], "d_ij": 164, "_j": [164, 169, 183, 200], "d_ip": 164, "d_qp": 164, "matrix_rep": 164, "simplify_index_permut": 164, "permutation_oper": 164, "schemat": [164, 169], "abij": 164, "abji": 164, "baij": 164, "baji": 164, "permutlist": 164, "substitute_dummi": 164, "new_indic": 164, "pretty_indic": 164, "_get_ordered_dummi": 164, "_c": 164, "_d": 164, "index_group": 164, "string_of_lett": 164, "my_dummi": 164, "_v": [164, 182], "_p_0": 164, "_p_1": 164, "keep_only_fully_contract": 164, "sho": 165, "isotrop": 165, "mk": [166, 169], "legal": 166, "temperatur": [166, 179, 251], "dimensions": 166, "dimsys_si": [166, 167], "get_dimensional_depend": [166, 167], "has_integer_pow": 166, "dim_si": 166, "base_dim": 166, "derived_dim": 166, "dimensional_depend": 166, "can_transf_matrix": 166, "useless": [166, 189, 191], "inv_can_transf_matrix": 166, "dim_can_vector": 166, "dim_vector": 166, "is_consist": [166, 172], "is_dimensionless": 166, "list_can_dim": 166, "print_dim_bas": 166, "gravitational_const": [167, 171], "equivalent_dim": 167, "grav_eq": 167, "kepler": [167, 243], "venu": 167, "701": 167, "dai": [167, 171, 214], "venus_a": 167, "108208000e3": 167, "solar": 167, "solar_mass": 167, "9891e30": 167, "convert_to": [167, 171, 187, 193], "5112118495813": 167, "659097795948": 167, "astrophys": 167, "ill": 167, "astrophysicist": 168, "ua": [168, 186], "earth": [168, 179, 251], "sun": 168, "theoricist": 168, "philosophi": [168, 214, 217, 259], "mole": 169, "dimensionless": 169, "unavoid": 169, "d_3": 169, "d_2": [169, 194, 218], "underbrac": [169, 181], "countabl": [169, 217], "pmatrix": 169, "kg": [169, 252], "glu": 169, "men": 169, "heat": 169, "joul": 169, "calori": 169, "stori": 169, "chemistri": 169, "page52": 169, "1952": 169, "page78": 169, "deboer79": 169, "boer": 169, "818": 169, "levyleblond77": 169, "l\u00e9vy": 169, "leblond": 169, "conceptu": [169, 185, 251], "rivista": 169, "del": [169, 233, 250, 274], "nuovo": [169, 183], "cimento": [169, 183], "1977": 169, "187": [169, 192], "214": 169, "anticip": 169, "bin_prefix": 170, "abbrev": [170, 171, 198], "latex_repr": [170, 171], "encapsul": [170, 191, 217, 231], "kilo": 170, "scale_factor": 171, "pretty_unicode_repr": 171, "pretty_ascii_repr": 171, "mathml_presentation_repr": 171, "is_prefix": 171, "abbrevi": [171, 186, 198, 217, 219], "speed_of_light": 171, "reference_quant": 171, "target_unit": 171, "mile": 171, "atomic_mass_const": 171, "centimet": 171, "25146": 171, "609344": 171, "86400": 171, "660539060e": 171, "300000": 171, "planck": 171, "62963087839509e": 171, "base_unit": 172, "descr": 172, "dimension_system": 172, "derived_unit": 172, "overridden": [172, 185, 200, 274], "get_units_non_prefix": 172, "to_matrix": [173, 174, 182, 187, 193, 243, 245, 247], "rigidli": 173, "entireti": 173, "hidden": 173, "_str": 173, "otherfram": [174, 243], "n_alpha_b": 174, "ny": 174, "_3": 174, "rot_typ": [174, 177, 179], "rot_ord": [174, 177, 244], "orient_body_fix": 174, "orient_space_fix": 174, "orient_quaternion": 174, "tait": [174, 243, 244], "bryan": [174, 243, 244], "quaternion": [174, 177, 182, 243, 244, 254], "userwarn": [174, 227, 234, 270], "rotation_ord": [174, 243, 244], "xzx": 174, "zxz": [174, 182, 243, 244], "xyx": [174, 243, 244], "yzy": 174, "zyz": 174, "yxy": [174, 182], "yzx": [174, 182], "zxy": 174, "xzy": 174, "zyx": 174, "yxz": 174, "orient_explicit": 174, "lambda_x": [174, 243, 244], "lambda_i": [174, 243, 244], "lambda_z": [174, 243, 244], "q0": [174, 214, 243, 244], "newnam": 174, "gen_spe": [174, 177], "variable_map": 174, "a_x": [174, 182, 198], "b_x": [174, 176, 182, 224], "b_y": [174, 176, 182, 224], "a_z": [174, 182], "b_z": [174, 182, 224], "inlist": 174, "var_in_dcm": 174, "reexpress": [174, 247], "time_deriv": [174, 179, 180], "free_dynamicsymbol": 174, "codirect": 174, "dyadic_tensor": [174, 243], "frame1": 174, "frame2": [174, 176], "second_reference_fram": 174, "ixz": 174, "inertia_dyad": 174, "pertain": [175, 180], "fieldfunct": [175, 179], "vect": [175, 243, 245], "r_x": [175, 179], "r_y": [175, 179], "r_z": [175, 179], "scalar_field": [175, 179, 243, 245, 249], "grad_field": [175, 245], "sympyfi": [175, 176, 177, 245], "position2": [175, 245], "vectfield": [175, 179, 245, 249], "solenoid": [175, 245, 250], "q6": 176, "vec1": 176, "vec2": 176, "coordinatesym": [176, 180], "n_x": 176, "rotating_reference_fram": 176, "time_derivatives_in_the_two_fram": 176, "otherpoint": 177, "outfram": 177, "interfram": 177, "fixedfram": 177, "get_motion_param": 177, "vectori": [177, 179, 246, 251], "timevalue1": 177, "timevalue2": 177, "313": 177, "vel_vec": 177, "q1dd": 178, "q2dd": 178, "charg": [179, 251], "displac": [179, 181, 251], "depict": [179, 217, 251], "temper": 179, "electric_potenti": [179, 249], "r1_x": 179, "r1_y": 179, "infinitesim": [179, 249], "nabla": [179, 243, 248, 249], "f_y": [179, 249], "f_x": [179, 217, 249], "sink": [179, 249], "irrot": [179, 249], "is_conserv": [179, 249, 250], "is_solenoid": [179, 249, 250], "scalar_potenti": [179, 249, 250], "conservative_field": [179, 249], "scalar_potential_differ": [179, 249, 250], "aug": [180, 217], "dyadic_product": [180, 250], "inc": [180, 192], "kinematic_equ": 180, "w_x": 181, "w_y": 181, "w_z": 181, "w_1": [181, 193], "w_2": [181, 193], "w_3": 181, "textrm": [181, 182, 206], "u_x": 181, "sp": 181, "oq": 181, "qp": 181, "rod": 181, "went": 181, "parallelogram": 182, "c_x": 182, "c_y": 182, "c_z": 182, "train": 182, "friend": 182, "xz": [182, 184], "zy": 182, "undergon": [182, 217], "vastli": 182, "wait": 182, "mold": 182, "bp": [182, 214], "bpp": 182, "zzx": 182, "multifram": 182, "direction": 182, "racah": 183, "gaunt": 183, "rasch03": 183, "regge58": 183, "regg": 183, "544": 183, "regge59": 183, "116": [183, 192], "1959": 183, "edmonds74": 183, "edmond": 183, "princeton": [183, 218], "1957": 183, "rasch": 183, "siam": [183, 236], "sci": 183, "1416": 183, "1428": 183, "liberatodebrito82": 183, "liberato": 183, "brito": 183, "forum": [183, 217], "m4nzdu": 183, "7o38": 183, "jen": 183, "03": [183, 218], "oscar": 183, "gerardo": 183, "lazo": 183, "arjona": 183, "jyr2000": 183, "gmail": 183, "clebsch_gordan": 183, "2j_3": 183, "dot_rot_grad_ynm": 183, "gradient": [183, 184, 243, 250, 251], "_l": 183, "l_2": 183, "l_3": 183, "drastic": 183, "2l_1": 183, "2l_2": 183, "2l_3": 183, "1200": 183, "00689500421922113448": 183, "inflect": 183, "unsuit": 183, "dd": [183, 203], "ee": [183, 193], "j_5": 183, "j_6": 183, "richer": 183, "wigner_3j": 183, "wigner_6j": 183, "wigner_9j": 183, "j_7": 183, "j_8": 183, "j_9": 183, "05555555": 183, "1666666": 183, "wigner_d": 183, "j_z": 183, "j_y": 183, "\u03b3": [183, 264, 274], "wigner_d_smal": 183, "textbackend": 184, "plot_parametr": 184, "plot_implicit": 184, "plot3d_parametric_lin": 184, "plot3d_parametric_surfac": 184, "xlabel": 184, "ylabel": 184, "zlabel": 184, "aspect_ratio": 184, "ylim": 184, "axis_cent": 184, "xscale": 184, "yscale": 184, "autoscal": 184, "textplot": 184, "_seri": [184, 195], "baseseri": 184, "nonparametr": 184, "cylindr": [184, 249], "basebackend": 184, "parametric2dlineseri": 184, "parametric3dlineseri": 184, "cyan": 184, "grayscal": 184, "integers_onli": 184, "surfaceover2drangeseri": 184, "parametricsurfaceseri": 184, "surface_color": 184, "range1": 184, "range2": 184, "fill_between": 184, "inch": 184, "expr_x": 184, "expr_i": 184, "canva": 184, "range_x": 184, "range_i": 184, "nb_of_points_x": 184, "nb_of_points_i": 184, "expr_z": 184, "range_u": 184, "range_v": 184, "nb_of_points_u": 184, "nb_of_points_v": 184, "x_var": 184, "y_var": 184, "mesh": 184, "p8": 184, "p9": 184, "nrow": [184, 187], "ncolumn": 184, "stuff": [184, 229, 231, 239], "is_2dlin": 184, "oblig": 184, "only_integ": 184, "get_seg": 184, "get_color_arrai": 184, "var_start_end": 184, "r692": 184, "luiz": 184, "henriqu": 184, "figueiredo": 184, "r693": 184, "line3dbaseseri": 184, "surfacebaseseri": 184, "var_start_end_x": 184, "var_start_end_i": 184, "var_start_end_u": 184, "var_start_end_v": 184, "implicitseri": 184, "has_equ": 184, "use_interval_math": 184, "centric": 184, "get_mesh": 184, "process_seri": 184, "_process_seri": 184, "keyboard": 184, "mous": 184, "pyglet_plot": 184, "screenshot": 184, "camera": 184, "zoom": 184, "numpad": 184, "ordin": [184, 214, 239], "f5": 184, "f6": 184, "f8": 184, "drag": 184, "button": [184, 230], "curvilinear": [184, 246, 247, 250], "__setitem__": 184, "zfade4": 184, "key1": 184, "value1": 184, "key2": 184, "value2": 184, "unbound_theta": 184, "wirefram": 184, "saddl": 184, "fz": 184, "_______________________________________________________": 184, "mediterranean": 185, "cultur": 185, "arab": 185, "lighten": 185, "tapestri": 185, "woven": 185, "european": 185, "soil": 185, "plausibl": 185, "teeter": 185, "totter": 185, "outweigh": 185, "excit": 185, "amus": 185, "kempf": 185, "1944": 185, "20th": 185, "dedekind": 185, "intim": 185, "disciplin": 185, "toolset": 185, "atiyah69": [185, 192], "gear": 185, "greuel2008": [185, 192], "interspers": 185, "lr": 185, "ilex": 185, "\u211a": [185, 198], "localis": 185, "abridg": 185, "free_modul": [185, 189], "quotient_r": [185, 189], "overload": [185, 188, 189, 246, 269], "polynomialr": [185, 189, 190, 196], "domain_or_r": [185, 189], "quotientr": [185, 189], "base_id": [185, 189], "elbow": 185, "room": 185, "componentwis": [185, 198], "inclin": 185, "biproduct": 185, "quotient_modul": 185, "is_submodul": 185, "multiply_id": 185, "identity_hom": 185, "freemodul": 185, "freemoduleel": 185, "conicis": 185, "_contain": 185, "_syzygi": 185, "_in_terms_of_gener": 185, "_intersect": 185, "_module_quoti": 185, "reduce_el": [185, 193], "represantit": 185, "in_terms_of_gener": 185, "inclusion_hom": 185, "rela": 185, "relb": 185, "is_full_modul": 185, "module_quoti": 185, "opt": [185, 191, 210, 270], "coincis": 185, "syzygy_modul": 185, "r_n": 185, "_contains_elem": 185, "_contains_id": 185, "_quotient": 185, "_union": 185, "_product": 185, "is_whole_r": 185, "is_maxim": 185, "is_primari": 185, "is_rad": 185, "is_princip": 185, "xj": 185, "satur": 185, "subquoti": 185, "quotientmodul": 185, "subquotientmodul": 185, "killed_modul": 185, "quotientmoduleel": 185, "kill": [185, 189, 229], "quotient_hom": 185, "ker": 185, "surject": 185, "cokernel": 185, "coker": 185, "meaningfulli": 185, "restrict_domain": 185, "homomoprh": 185, "modulehomomorph": [185, 193], "_ker": 185, "_img": 185, "_kernel": 185, "_imag": 185, "_restrict_domain": 185, "_restrict_codomain": 185, "_quotient_domain": 185, "_quotient_codomain": 185, "_appli": 185, "_mul_scalar": 185, "_compos": 185, "_add": [185, 204], "is_inject": 185, "quotient_domain": 185, "is_isomorph": 185, "preimag": 185, "restrict_codomain": 185, "is_surject": 185, "quotient_codomain": 185, "induct": 185, "monogen": 185, "monogenicfiniteextens": [185, 189], "finiteextens": 185, "sqrt2": [185, 188], "_5": 185, "extensionel": [185, 189], "notinvert": [185, 191, 194], "nu_1": 186, "nu_2": 186, "nu_n": 186, "nu_i": 186, "customarili": 186, "irreduc": [186, 189, 191, 193, 194, 197, 218, 224, 274], "endow": 186, "resp": [186, 189, 214], "divmod": [186, 188, 189], "cb": [186, 236], "sqf_list": [186, 189, 194], "sqf": [186, 189, 194, 211], "buchberg": [186, 191, 192, 194], "groebnerbasi": [186, 194, 197], "solve_poly_system": [186, 194, 216, 217], "fmt": [187, 189, 193], "matrix1": 187, "driectli": 187, "dmnonsquarematrixerror": 187, "zz_i": [187, 188, 190], "from_dict_sympi": 187, "ncol": 187, "elemsdict": 187, "from_list_sympi": 187, "from_list": [187, 189, 194, 195], "construct_domain": [187, 188, 189, 194], "from_rep": 187, "drep": 187, "dm": [187, 193], "ownership": 187, "scc": 187, "substract": 187, "to_dens": 187, "to_field": [187, 189, 194], "to_spars": 187, "aq": 187, "ccc": [187, 217], "from_ddm": 187, "domainerror": [187, 191, 194], "to_ddm": 187, "r694": 187, "pythonmpq": [188, 189], "srepr": [188, 261, 269], "leaf": [188, 198, 207, 269], "strength": 188, "richardon": 188, "dup_factor_list": 188, "factortool": [188, 191], "dup_": [188, 191], "dmp_": [188, 191], "prod": [188, 195, 207], "z1": [188, 189, 216], "is_field": [188, 189], "quo": [188, 189, 191, 194], "rem": [188, 189, 191, 194], "exquo": [188, 189, 194], "exactquotientfail": [188, 189, 191, 194], "mpz": [188, 189], "of_typ": [188, 189], "z1_sympi": 188, "to_sympi": [188, 189], "from_sympi": [188, 189], "forth": [188, 193], "z_sympi": 188, "z_zz": 188, "coercionfail": [188, 191], "sum_domain": 188, "expressions_sympi": 188, "expressions_dom": 188, "result_dom": 188, "e_dom": 188, "result_sympi": 188, "qq_i": [188, 190], "gaussianinteg": [188, 189], "gaussianrationalfield": [188, 189], "gaussianr": [188, 189], "galoi": [188, 191, 193], "finitefield": [188, 189], "pythonfinitefield": [188, 189], "gmpyfinitefield": [188, 189], "welcom": [188, 214, 267], "realel": [188, 189], "complexel": [188, 189], "mpc": 188, "xr": [188, 196], "zc": 188, "1j": 188, "_mpc_": 188, "realfield": [188, 189], "rr100": 188, "33333333333333333333333333333": 188, "hack": [188, 214, 227], "algebraic_field": [188, 189, 191, 193], "algebraicfield": [188, 189, 191, 193], "sqrt3": 188, "x_dom": 188, "p_expr": [188, 189], "polyel": [188, 189, 191, 195, 196, 198], "p_dom": 188, "unexpand": [188, 197, 207, 230], "xk": [188, 189, 200], "yk": [188, 189], "poly_r": [188, 189], "old_polynomialr": 188, "globalpolynomialr": 188, "polyclass": [188, 189, 194], "yr": [188, 196], "broader": 188, "get_field": [188, 189], "frac_field": [188, 189], "rationalfield": [188, 189], "old_frac_field": [188, 189], "fractionfield": [188, 189], "old_fractionfield": 188, "xf": 188, "yf": 188, "fracfield": [188, 189], "expressiondomain": [188, 189], "elements_sympi": 188, "elements_k": 188, "convert_from": [188, 189], "num_zz": 188, "num_qq": 188, "domainel": [188, 189, 196], "encompass": 188, "all_coeff": [188, 189, 194], "dom": [188, 189, 191, 206], "strang": 188, "hybrid": 188, "unreli": 188, "usefulli": 189, "pythonr": [189, 196], "p_domain": 189, "ez": [189, 224], "get_r": 189, "has_assoc_field": 189, "has_assoc_r": 189, "alg_field_from_poli": [189, 193], "root_index": 189, "almosteq": 189, "cyclotomic_field": [189, 193], "zeta7": 189, "zeta_": 189, "lexord": [189, 194], "from_algebraicfield": 189, "from_complexfield": 189, "from_expressiondomain": 189, "from_expressionrawdomain": 189, "from_ff": 189, "modularinteg": 189, "from_ff_gmpi": 189, "from_ff_python": 189, "from_fractionfield": 189, "from_globalpolynomialr": 189, "from_monogenicfiniteextens": 189, "from_polynomialr": 189, "from_qq_gmpi": 189, "from_qq_python": 189, "from_realfield": 189, "from_zz_gmpi": 189, "from_zz_python": 189, "gcdex": [189, 194], "get_exact": 189, "half_gcdex": [189, 194], "is_pid": 189, "is_r": 189, "is_nonposit": 189, "is_on": [189, 194], "rersiv": 189, "__neg__": 189, "__pos__": 189, "__sub__": 189, "q_domain": 189, "q_expr": 189, "x_domain": 189, "alg": [189, 193, 197], "trait": 189, "is_unit": 189, "__divmod__": 189, "__floordiv__": 189, "__mod__": [189, 193], "simpledomain": 189, "compositedomain": 189, "from_qq": 189, "from_zz": 189, "gmpyinteg": 189, "pythoninteg": 189, "gmpyrationalfield": 189, "pythonrationalfield": 189, "from_gaussianrationalfield": 189, "gaussianel": 189, "gaussiandomain": 189, "qq_python": 189, "zz_python": 189, "z2": 189, "z3": 189, "z4": 189, "from_gaussianinteg": 189, "as_algebraicfield": 189, "orig_ext": 189, "algebraicnumb": [189, 193, 197], "integral_basi": [189, 193], "maximal_ord": [189, 193], "zeta5": 189, "primes_abov": [189, 193], "primeid": [189, 193], "to_alg_num": [189, 193], "legibl": 189, "to_rat": 189, "mpelement": 189, "complexfield": 189, "lc": [189, 191, 194], "domain_or_field": 189, "dmf": 189, "coercibl": 189, "monomialord": [189, 194], "xring": 189, "vring": 189, "sring": [189, 195, 196], "polyr": [189, 190, 191, 196], "factor_list": [189, 194, 274], "add_gen": 189, "drop_to_ground": 189, "monomial_basi": 189, "206": [189, 194], "744": 189, "945": [189, 195], "is_monomi": [189, 194], "const": 189, "coeffcient": [189, 191], "inplac": 189, "shallow": [189, 205], "zero_monom": 189, "fv": 189, "clo": 189, "p64": 189, "qv": 189, "f0": 189, "imul_num": 189, "itercoeff": 189, "itermonom": 189, "iterterm": 189, "leading_expv": 189, "leading_monom": 189, "leading_term": 189, "listcoeff": 189, "listmonom": 189, "listterm": 189, "monom": [189, 194], "strip_zero": 189, "tail_degre": 189, "xfield": 189, "vfield": [189, 248], "sfield": [189, 248], "fracel": [189, 198], "lev": 189, "add_ground": [189, 194], "all_monom": [189, 194], "all_term": [189, 194], "cauchy_lower_bound": 189, "cauchy_upper_bound": 189, "clear_denom": [189, 194], "count_complex_root": 189, "sup": [189, 194, 198, 205, 206], "count_real_root": 189, "deflat": [189, 194], "y_i": [189, 191, 193, 194, 214], "x_j": [189, 191, 194], "degree_list": [189, 194], "eject": [189, 194], "exquo_ground": [189, 194], "factor_list_includ": [189, 194], "from_dict": [189, 194], "from_sympy_list": 189, "gff_list": [189, 194], "homogeneous_ord": [189, 194, 211], "is_cyclotom": [189, 194], "is_ground": [189, 194], "is_homogen": [189, 194], "is_irreduc": [189, 194], "is_linear": [189, 194], "is_mon": [189, 194], "is_quadrat": [189, 194], "is_sqf": [189, 194], "l1_norm": [189, 194], "l2_norm_squar": 189, "max_norm": [189, 194], "mignotte_sep_bound_squar": 189, "mignott": [189, 191], "mul_ground": [189, 194], "pdiv": [189, 194], "pexquo": [189, 194], "pquo": [189, 194], "prem": [189, 194], "quo_ground": [189, 194], "refine_root": [189, 193, 194], "includepr": [189, 191, 194], "sqf_list_includ": [189, 194], "sqf_norm": [189, 194], "sqf_part": [189, 194], "sqr": [189, 194], "sturm": [189, 194], "sub_ground": [189, 194], "to_dict": 189, "to_exact": [189, 194], "to_r": [189, 194], "to_sympy_dict": 189, "to_sympy_list": 189, "to_tupl": 189, "total_degre": [189, 194, 211], "trunc": [189, 194, 197], "frac_unifi": 189, "half_per": 189, "poly_unifi": 189, "gr\u00f6bner": 190, "groebner": [190, 192, 193, 194, 197, 210, 216, 217], "wester": 190, "dispers": [190, 192, 218], "agca": 190, "syzygi": 190, "vs": [190, 198, 229], "undocu": 190, "rs_seri": 190, "eqs_to_matrix": 190, "sympy_eqs_to_r": 190, "_solve_lin_si": 190, "_solve_lin_sys_compon": 190, "ddm": 190, "sdm": [190, 191], "adic": [190, 192], "valuat": [190, 214], "subfield": 190, "l0": 191, "focus": 191, "legitim": 191, "uninterest": 191, "bulk": [191, 208], "x_u": 191, "dup__": 191, "densebas": 191, "dmp_lc": 191, "poly_lc": 191, "dmp_tc": 191, "poly_tc": 191, "dmp_ground_lc": 191, "dmp_ground_tc": 191, "dmp_true_lt": 191, "n_1": [191, 216, 218], "n_k": 191, "dmp_degre": 191, "dmp_degree_in": 191, "dmp_degree_list": 191, "dmp_strip": 191, "dmp_valid": 191, "dup_revers": 191, "dmp_copi": 191, "dmp_to_tupl": 191, "dmp_normal": 191, "dmp_convert": 191, "to_domain": 191, "dmp_from_sympi": 191, "dmp_nth": 191, "dmp_ground_nth": 191, "dmp_zero_p": 191, "dmp_zero": 191, "dmp_one_p": 191, "dmp_one": 191, "dmp_ground_p": 191, "dmp_ground": 191, "dmp_negative_p": 191, "dmp_positive_p": 191, "dmp_from_dict": 191, "dmp_to_dict": 191, "dmp_swap": 191, "dmp_permut": 191, "dmp_nest": 191, "dmp_rais": 191, "dmp_deflat": 191, "dmp_multi_defl": 191, "dmp_inflat": 191, "dmp_exclud": 191, "dmp_includ": 191, "dmp_inject": 191, "dmp_eject": 191, "dmp_terms_gcd": 191, "dmp_list_term": 191, "dmp_apply_pair": 191, "dmp_slice": 191, "dup_random": 191, "densearith": 191, "dmp_add_term": 191, "dmp_sub_term": 191, "dmp_mul_term": 191, "dmp_add_ground": 191, "dmp_sub_ground": 191, "dmp_mul_ground": 191, "dmp_quo_ground": 191, "dmp_exquo_ground": 191, "dup_lshift": 191, "dup_rshift": 191, "dmp_ab": 191, "dmp_neg": 191, "dmp_add": 191, "dmp_sub": 191, "dmp_add_mul": 191, "dmp_sub_mul": 191, "dmp_mul": 191, "dmp_sqr": 191, "dmp_pow": 191, "dmp_pdiv": 191, "dmp_prem": 191, "dmp_pquo": 191, "dmp_pexquo": 191, "dmp_rr_div": 191, "dmp_ff_div": 191, "dmp_div": 191, "dmp_rem": 191, "dmp_quo": 191, "dmp_exquo": 191, "dmp_max_norm": 191, "dmp_l1_norm": 191, "dmp_expand": 191, "densetool": 191, "dmp_integr": 191, "dmp_integrate_in": 191, "dmp_diff": 191, "dmp_diff_in": 191, "dmp_eval": 191, "dmp_eval_in": 191, "dmp_eval_tail": 191, "dmp_diff_eval_in": 191, "dmp_trunc": 191, "dmp_ground_trunc": 191, "dup_mon": 191, "dmp_ground_mon": 191, "dup_cont": 191, "dmp_ground_cont": 191, "dup_primit": 191, "dmp_ground_primit": 191, "dup_extract": 191, "dmp_ground_extract": 191, "dup_real_imag": 191, "bivari": [191, 197, 218], "dup_mirror": 191, "dup_scal": 191, "dup_shift": 191, "dup_transform": 191, "dmp_compos": 191, "dup_decompos": 191, "t_m": 191, "r695": 191, "dmp_lift": 191, "dup_sign_vari": 191, "dmp_clear_denom": 191, "k_0": 191, "dmp_revert": 191, "gf_": 191, "justifi": 191, "necess": 191, "u_0": 191, "m_0": [191, 211], "m_n": 191, "gf_crt1": 191, "9215": 191, "9405": 191, "9603": 191, "gf_crt2": 191, "gf_int": 191, "gf_degre": 191, "gf_lc": 191, "gf_tc": 191, "gf_strip": 191, "gf_trunc": 191, "gf_normal": 191, "gf_from_dict": 191, "gf_to_dict": 191, "gf_from_int_poli": 191, "gf_to_int_poli": 191, "gf_neg": 191, "gf_add_ground": 191, "gf_sub_ground": 191, "gf_mul_ground": 191, "gf_quo_ground": 191, "gf_add": 191, "gf_sub": 191, "gf_mul": 191, "gf_sqr": 191, "gf_add_mul": 191, "gf_sub_mul": 191, "gf_expand": 191, "gf_div": 191, "r696": 191, "monagan93": [191, 192], "r697": 191, "gathen99": [191, 192], "gf_rem": 191, "gf_quo": 191, "gf_exquo": 191, "gf_lshift": 191, "gf_rshift": 191, "gf_pow": 191, "gf_pow_mod": 191, "r698": 191, "gf_gcd": 191, "gf_lcm": 191, "gf_cofactor": 191, "gf_gcdex": 191, "eea": 191, "r699": 191, "gf_monic": 191, "gf_diff": 191, "gf_eval": 191, "gf_multi_ev": 191, "gf_compos": 191, "gf_compose_mod": 191, "gf_trace_map": 191, "r700": 191, "gathen92": [191, 192], "gf_random": 191, "gf_irreduc": 191, "gf_irreducible_p": 191, "gf_sqf_p": 191, "gf_sqf_part": 191, "gf_sqf_list": 191, "e_2": [191, 194], "f_j": [191, 208], "gf_sqf": 191, "r701": 191, "geddes92": [191, 192], "gf_qmatrix": 191, "berlekamp": 191, "gf_qbasi": 191, "gf_berlekamp": 191, "gf_zassenhau": 191, "gf_shoup": 191, "gf_factor_sqf": 191, "gf_factor": 191, "e_d": 191, "cantor": 191, "zassenhau": [191, 193], "shoup": [191, 192], "kaltofen": [191, 192], "gathen": [191, 192], "gf_factor_method": 191, "r702": 191, "gf_valu": 191, "2204": 191, "gf_csolv": 191, "congruent": [191, 208, 211], "189": 191, "112": [191, 195], "139": 191, "r703": 191, "ivan": 191, "niven": 191, "zuckerman": 191, "montgomeri": 191, "infeas": [191, 194], "sdm_": 191, "distributedmodul": 191, "sdm_monomial_mul": 191, "sdm_monomial_deg": 191, "f_5": 191, "sdm_monomial_divid": 191, "sdm_lc": 191, "sdm_to_dict": 191, "sdm_from_dict": 191, "dic": 191, "sdm_add": 191, "2f_1": 191, "3f_1": 191, "yf_1": 191, "xf_1": 191, "sdm_lm": 191, "sdm_lt": 191, "sdm_mul_term": 191, "2xy": [191, 268], "4y": [191, 217, 263], "8xy": 191, "2y": [191, 211, 214, 217, 268], "sdm_zero": 191, "sdm_deg": 191, "sdm_from_vector": 191, "sdm_to_vector": 191, "variant": [191, 214, 217], "qg": 191, "remark": [191, 197, 208, 214], "uf": 191, "vg": 191, "zout": 191, "euclidtool": 191, "dmp_half_gcdex": 191, "dmp_gcdex": 191, "dmp_invert": 191, "dmp_euclidean_pr": 191, "dmp_primitive_pr": 191, "exceedingli": 191, "collin": [191, 192], "collins67": [191, 192], "subdomain": 191, "2l": 191, "remainin": 191, "subdetermin": 191, "n_2": [191, 218], "n_": [191, 211], "abnorm": 191, "gamma_i": 191, "brown": [191, 192, 218], "traub": [191, 192], "browntraub71": [191, 192], "brown78": [191, 192], "discoveri": [191, 270], "dmp_inner_subresult": 191, "729": 191, "sre": 191, "dmp_subresult": 191, "dmp_prs_result": 191, "dmp_zz_modular_result": 191, "dmp_zz_collins_result": 191, "dmp_qq_collins_result": 191, "dmp_result": 191, "dmp_discrimin": 191, "dmp_rr_prs_gcd": 191, "cff": [191, 194], "cfg": [191, 194], "dmp_ff_prs_gcd": 191, "dmp_zz_heu_gcd": 191, "r704": 191, "liao95": [191, 192], "dmp_qq_heu_gcd": 191, "dmp_inner_gcd": 191, "dmp_gcd": 191, "dmp_lcm": 191, "dmp_content": 191, "dmp_primit": 191, "dmp_cancel": 191, "dmp_trial_divis": 191, "dmp_zz_mignotte_bound": 191, "dup_zz_hensel_step": 191, "hensel": 191, "r705": 191, "dup_zz_hensel_lift": 191, "f_list": 191, "multifactor": 191, "r706": 191, "dup_zz_zassenhau": 191, "dup_zz_irreducible_p": 191, "eisenstein": 191, "dup_cyclotomic_p": 191, "bradford": 191, "russel": 191, "251": 191, "berlin": 191, "heidelberg": 191, "dup_zz_cyclotomic_poli": 191, "dup_zz_cyclotomic_factor": 191, "r707": 191, "weisstein09": [191, 192], "dup_zz_factor_sqf": 191, "dup_zz_factor": 191, "r708": 191, "dmp_zz_wang_non_divisor": 191, "wang": [191, 192], "eez": 191, "dmp_zz_wang_test_point": 191, "dmp_zz_wang_lead_coeff": 191, "dmp_zz_diophantin": 191, "dmp_zz_wang_hensel_lift": 191, "dmp_zz_wang": 191, "enhanc": [191, 218], "r709": 191, "wang78": [191, 192], "r710": 191, "dmp_zz_factor": 191, "r711": 191, "dmp_ext_factor": 191, "dup_gf_factor": 191, "dmp_factor_list": 191, "dmp_factor_list_includ": 191, "dmp_irreducible_p": 191, "groebnertool": 191, "polyconfig": [191, 194], "f5b": [191, 194], "spoli": 191, "red_groebn": 191, "beckerweispfenning93": 191, "is_groebn": 191, "is_minim": 191, "is_reduc": 191, "fglmtool": 191, "matrix_fglm": 191, "o_to": 191, "o_from": 191, "r712": 191, "fauger": [191, 194], "gianni": [191, 194, 216], "mora": [191, 192, 194, 216], "sdm_spoli": 191, "phantom": 191, "sca": 191, "defn": 191, "sdm_ecart": 191, "ecart": 191, "sdm_nf_mora": 191, "nf": 191, "sdm_groebner": 191, "sugar": [191, 192, 223], "giovini": [191, 192], "polyopt": [191, 195], "build_opt": 191, "polyerror": [191, 194], "basepolynomialerror": 191, "operationnotsupport": 191, "heuristicgcdfail": 191, "homomorphismfail": 191, "isomorphismfail": [191, 193], "extraneousfactor": 191, "evaluationfail": 191, "refinementfail": 191, "notrevers": [191, 194], "notalgebra": 191, "polynomialerror": [191, 194], "unificationfail": [191, 193], "generatorsneed": 191, "computationfail": 191, "exc": 191, "generatorserror": 191, "univariatepolynomialerror": 191, "multivariatepolynomialerror": [191, 194], "polificationfail": 191, "orig": 191, "optionerror": 191, "flagerror": 191, "modulargcd": 191, "modgcd_univari": 191, "monagan00": [191, 192], "modgcd_bivari": 191, "modgcd_multivari": 191, "_modgcd_multivariate_p": 191, "brown71": [191, 192], "degbound": 191, "contbound": 191, "func_field_modgcd": 191, "reconstuct": 191, "z_p": 191, "spuriou": [191, 216], "hoeij04": [191, 192], "scarc": 191, "hsin": 192, "chao": 192, "liao": 192, "fateman": 192, "montreal": 192, "quebec": 192, "canada": 192, "240": [192, 200, 245], "247": [192, 216], "von": [192, 218], "zur": 192, "gerhard": 192, "cambridg": [192, 211], "weisstein": 192, "cyclotomicpolynomi": 192, "1215": 192, "1231": 192, "czapor": 192, "labahn": 192, "monagan": [192, 210], "disco": 192, "721": 192, "kaltofen98": 192, "subquadrat": 192, "223": 192, "1998": [192, 211], "1179": 192, "1197": 192, "shoup95": 192, "397": 192, "shoup91": 192, "cox97": [192, 194], "shea": [192, 194], "ajwa95": 192, "ajwa": 192, "liu": 192, "cites": [192, 210], "ist": [192, 207, 210], "psu": [192, 207, 210], "mycites": 192, "login": 192, "bose03": 192, "bose": 192, "guiver": 192, "multidimension": [192, 229, 254], "giovini91": 192, "bronstein93": [192, 194], "salvi": [192, 195], "kiev": 192, "ukrain": 192, "buchberger01": [192, 194], "theorist": 192, "moreno": 192, "diaz": 192, "freir": 192, "eurocast": 192, "februari": 192, "davenport88": 192, "siret": 192, "tournier": 192, "london": [192, 211], "124": [192, 263], "greuel": 192, "pfister": 192, "atiyah": 192, "macdonald": 192, "142": 192, "1971": [192, 214], "505": 192, "237": 192, "249": 192, "wittkopf": 192, "478": 192, "hoeij": 192, "2004": [192, 211], "297": [192, 194], "304": [192, 194], "wang81": 192, "symsac": 192, "hoeij02": 192, "manwright94": [192, 194], "yiu": 192, "kwong": 192, "franci": 192, "wright": 192, "190347": 192, "190413": 192, "koepf98": [192, 194], "koepf": [192, 200, 210], "vieweg": 192, "abramov71": [192, 194], "abramov": [192, 216], "ussr": 192, "330": 192, "man93": [192, 194], "376": 192, "sciencedirect": 192, "pii": 192, "s0747717183710539": 192, "kapur1994": 192, "deepak": 192, "kapur": 192, "tushar": 192, "saxena": 192, "yang": 192, "dixon": 192, "researchg": [192, 218], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 192, "palancz08": 192, "pal\u00e1ncz": 192, "zaletnyik": 192, "jl": [192, 231], "awang": 192, "ew": 192, "grafarend": 192, "geodet": 192, "geodesi": 192, "225607735_dixon_result": 192, "s_solution_of_systems_of_geodetic_polynomial_equ": 192, "bruce97": 192, "bruce": 192, "randal": 192, "donald": [192, 233], "mundi": 192, "artifici": [192, 201], "intellig": [192, 210, 214, 274], "orlando": 192, "www2": 192, "duke": 192, "donaldlab": 192, "symbolicnumericalcomput": 192, "045": 192, "087": 192, "stiller96": 192, "stiller": 192, "1996": [192, 208, 216, 243], "citeseerx": [192, 207], "viewdoc": [192, 207, 210], "590": 192, "2021": 192, "rep1": [192, 207], "cohen93": [192, 193], "henri": 192, "olga": 193, "tausski": 193, "zimmer": 193, "pohst": 193, "articul": 193, "numberfield": 193, "mathfrak": 193, "regul": 193, "alpha_m": 193, "round_two": 193, "prime_decomp": 193, "prime_valu": 193, "minimal_polynomi": 193, "field_isomorph": 193, "nilrad": 193, "z_k": 193, "zk": 193, "ordinarili": 193, "503": 193, "r713": 193, "r714": 193, "powerbasisel": 193, "ramif": 193, "as_submodul": 193, "bundl": 193, "test_factor": 193, "deliber": 193, "is_inert": 193, "inert": [193, 214], "reduce_anp": 193, "elt": 193, "reduce_alg_num": 193, "field_gen": 193, "just_gen": 193, "reagent": 193, "kummer": 193, "1847": 193, "ueber": 193, "zerlegung": 193, "crell": 193, "r715": 193, "_minpoly_compos": 193, "stall": 193, "alli": 193, "monomorph": 193, "alpha_i": 193, "alpha_n": 193, "lincomb": 193, "primtiiv": 193, "meanwhil": 193, "moduleel": 193, "powerbasi": 193, "submodule_from_matrix": 193, "ancestor": 193, "to_col": 193, "nca": 193, "_mult_tab": 193, "successfulli": 193, "moduleendomorph": 193, "innerendomorph": 193, "endomorphismr": 193, "spec": [193, 194], "i_n": [193, 194, 219], "include_self": 193, "basis_el": 193, "element_from_r": 193, "endomorphism_r": 193, "is_compat_col": 193, "mult_tab": 193, "mult": 193, "closurefailur": 193, "nearest_common_ancestor": 193, "number_field": 193, "power_basis_ancestor": 193, "incom": 193, "halv": 193, "submodule_from_gen": 193, "over_power_basi": 193, "starts_with_un": 193, "hnf_modulu": 193, "whole_submodul": 193, "element_from_anp": 193, "element_from_alg_num": 193, "element_from_poli": 193, "qq_matrix": 193, "basis_element_pullback": 193, "discard_befor": 193, "structureerror": 193, "cohen00": 193, "make_mod_elt": 193, "qq_col": 193, "from_int_list": 193, "is_compat": 193, "reduced_mod_p": 193, "to_ancestor": 193, "anc": 193, "to_par": 193, "to_anp": 193, "inner_endomorph": 193, "event": [193, 218], "find_min_poli": 193, "missingunityerror": 193, "is_int": 193, "get_num_denom": 193, "extract_fundamental_discrimin": 193, "r716": 193, "algintpow": 193, "zeta_pow": 193, "r717": 193, "coeff_search": 193, "supplement_a_subspac": 193, "dmrankerror": 193, "v_n": 193, "w_r": 193, "w_j": 193, "u_j": 193, "r718": 193, "poly_from_expr": 194, "parallel_poly_from_expr": 194, "lt": [194, 239], "mod_invers": 194, "exprtool": [194, 254], "gcd_term": 194, "gcd_list": 194, "lcm_list": 194, "destruct": 194, "2079": 194, "1401": 194, "2715": 194, "6720": 194, "1092": 194, "gff": 194, "check_sqf": 194, "count_root": 194, "nroot": [194, 216], "maxstep": 194, "cleanup": 194, "73205080756888": 194, "73205080756887729352744634151": 194, "ground_root": 194, "nth_power_roots_poli": 194, "r_f": 194, "r_g": 194, "_signsimp": 194, "q_n": 194, "is_zero_dimension": [194, 217], "donal": 194, "230": [194, 216], "ec": 194, "em": 194, "di": 194, "dispersionset": 194, "gp": [194, 214], "free_symbols_in_domain": 194, "from_poli": 194, "get_domain": 194, "get_modulu": 194, "has_only_gen": 194, "vincent": [194, 236], "akrita": 194, "strzebonski": 194, "va": 194, "alkiviadi": 194, "adam": 194, "panagioti": 194, "vigkla": 194, "265": 194, "279": 194, "polnomi": 194, "is_multivari": 194, "is_univari": 194, "ltrim": 194, "rerun": [194, 229], "_only_": 194, "sturmian": 194, "subresultants_qq_zz": 194, "suffix": [194, 231], "_pg": 194, "_amv": 194, "rem_z": 194, "premultipli": 194, "rat_clear_denom": 194, "_ignor": 194, "retract": 194, "same_root": 194, "r0": 194, "set_domain": 194, "set_modulu": 194, "termwis": 194, "fglm": 194, "r719": 194, "horner_schem": 194, "equispac": 194, "viet": 194, "itermonomi": 194, "min_degre": 194, "gib": 194, "monomial_kei": 194, "monomial_count": 194, "gradedlexord": 194, "reversedgradedlexord": 194, "clear_cach": 194, "_get_interv": 194, "165": [194, 218, 236], "169": 194, "eval_approx": 194, "evalf_r": 194, "eval_r": 194, "69629": 194, "71318": 194, "805": 194, "3275": 194, "65536": [194, 197, 198], "414645": 194, "131072": 194, "6545": 194, "104755": 194, "2097152": 194, "6634255": 194, "_all_root": 194, "use_cach": 194, "_complexes_index": 194, "_complexes_sort": 194, "_count_root": 194, "_ensure_complexes_init": 194, "_ensure_reals_init": 194, "_eval_is_imaginari": 194, "_get_complex": 194, "_get_complexes_sqf": 194, "currentfactor": 194, "_get_real": 194, "_get_reals_sqf": 194, "_get_root": 194, "_indexed_root": 194, "_new": 194, "_postprocess_root": 194, "_preprocess_root": 194, "heroic": [194, 216], "_real_root": 194, "_reals_index": 194, "_reals_sort": 194, "_refine_complex": 194, "ay": [194, 211, 239, 274], "_roots_trivi": 194, "_set_interv": 194, "861136": 194, "86113631159405258": 194, "polyroot": 194, "quintic": [194, 216], "unread": [194, 234], "casu": 194, "irreducibili": 194, "unsolvablefactorerror": [194, 216], "inexpress": 194, "unsolv": [194, 217], "r720": 194, "cubic_funct": 194, "trigonometric_": 194, "28and_hyperbol": 194, "29_method": 194, "specialpoli": 194, "swinnerton_dyer_poli": 194, "swinnerton": 194, "dyer": 194, "symmetric_poli": 194, "random_poli": 194, "gegenbau": [194, 198], "partfrac": [194, 200], "undertermin": 194, "_w": [194, 205], "apart_list": 194, "assemble_partfrac_list": 194, "bunch": 194, "pfd": 194, "r721": 194, "partial_list": 194, "reassembl": 194, "pfda": 194, "r722": 194, "r723": 194, "r724": 194, "r725": 194, "r726": 194, "r727": 194, "r728": 194, "r729": 194, "widen": 195, "ring_seri": 195, "rs_sin": 195, "166666666666667": 195, "puiseux": 195, "rs_co": 195, "rs_tan": 195, "took": [195, 207], "eleg": [195, 197], "rs_exp": 195, "everyon": 195, "blazingli": 195, "ms": 195, "promin": 195, "gradual": 195, "rs_": 195, "rs_log": 195, "rs_lambertw": 195, "rs_atan": 195, "arctang": 195, "rs_asin": 195, "_tan1": 195, "rs_cot": 195, "rs_cos_sin": 195, "rs_atanh": 195, "rs_sinh": 195, "rs_cosh": 195, "rs_tanh": 195, "rs_hadamard_exp": 195, "inver": 195, "rs_mul": 195, "rs_squar": 195, "rs_pow": 195, "rs_series_invers": 195, "rs_series_revers": 195, "a_kx_k": 195, "ar_i": 195, "ar_": 195, "ae": 195, "rs_trunc": 195, "rs_nth_root": 195, "160249952256379": 195, "44224957030741": 195, "rs_sub": 195, "rs_diff": 195, "rs_integr": 195, "rs_newton": 195, "rs_compose_add": 195, "r730": 195, "bostan": 195, "flajolet": 195, "schost": 195, "4579": 195, "institut": 195, "nation": 195, "recherch": 195, "informatiqu": 195, "automatiqu": 195, "rs_is_puiseux": 195, "rs_puiseux": 195, "rs_puiseux2": 195, "rs_series_from_list": 195, "concur": 195, "rs_fun": 195, "_tan": 195, "_nth": 195, "_root": 195, "_fun": 195, "mul_xin": 195, "pow_xin": 195, "_raw": 196, "unkown": 196, "eqs_r": 196, "eqs_coeff": 196, "eqs_rh": 196, "critiqu": 197, "wester1999": 197, "systemat": 197, "153": 197, "\u2124": [197, 198, 217, 275], "unm": 197, "driver": [198, 230], "adequ": 198, "emptyprint": 198, "_sympystr": 198, "mathml": 198, "inconveni": 198, "_print_": 198, "expr_class": 198, "hierarchi": [198, 218], "_print_rat": 198, "_print_numb": 198, "_print_atom": 198, "_print_bas": 198, "print_latex": 198, "mylatexprint": 198, "_print_deriv": 198, "print_my_latex": 198, "modop": 198, "subcompon": 198, "outermost": [198, 206, 210, 222], "modopmodewrong": 198, "modopnestedwrong": 198, "modopsettingswrong": 198, "subobject": 198, "infrastructur": [198, 215], "printer_exampl": 198, "set_global_set": 198, "stringpict": 198, "pretty_symbolog": 198, "prettyform": 198, "hline": 198, "vline": 198, "ascii": [198, 260], "_pretti": 198, "use_unicode_sqrt_char": 198, "root_not": 198, "mat_symbol_styl": 198, "prettifi": 198, "unambigu": [198, 214, 239], "bold": 198, "c89codeprint": 198, "print_ccod": 198, "tgamma": 198, "known_functions_c89": 198, "known_functions_c99": 198, "fmax": 198, "fmin": 198, "lgamma": 198, "indent_cod": 198, "functionclass": [198, 237], "cfunction_format": 198, "derefer": 198, "dereferenc": 198, "symbols_to_declar": 198, "not_supported_funct": 198, "code_text": 198, "m_sqrt2": 198, "math_macro": 198, "m_sqrt2l": 198, "cxx": 198, "cxx98codeprint": 198, "print_rcod": 198, "rcode": 198, "known_funct": 198, "_rcode": 198, "rfunction_str": 198, "rfunction_format": 198, "ifels": 198, "tweak": [198, 216], "type_map": 198, "name_mangl": 198, "mangl": 198, "floor1": 198, "floor2": 198, "print_fcod": 198, "_fcode": 198, "conjg": 198, "32768": 198, "7182818284590452d0": 198, "1415926535897932d0": 198, "718281828459045235360287d0": 198, "141592653589793238462643d0": 198, "869604401089358618834491d0": 198, "mygamma": 198, "allow_unknown_funct": 198, "coshintegr": 198, "cosintegr": 198, "expintegralei": 198, "factorialpow": 198, "heavisidetheta": 198, "sinhintegr": 198, "sinintegr": 198, "arccosh": 198, "arccoth": 198, "arcsinh": 198, "arctanh": 198, "dirichleteta": 198, "gegenbauerc": 198, "hypergeometricpfq": 198, "sphericalbesselj": 198, "logintegr": 198, "lucasl": 198, "riemann_xi": 198, "riemannxi": 198, "stieltjesgamma": 198, "sphericalbess": 198, "mcodeprint": 198, "_mcode": 198, "mcode": 198, "maplecodeprint": 198, "_mapl": 198, "maple_cod": 198, "print_maple_cod": 198, "javascriptcodeprint": 198, "_javascript": 198, "js_function_str": 198, "known_fcns_src1": 198, "known_fcns_src2": 198, "conj": 198, "juliacodeprint": 198, "_julia": 198, "harmless": [198, 270], "cosmet": 198, "pw": 198, "existing_julia_fcn": 198, "coshint": 198, "cosint": 198, "sinhint": 198, "sinint": 198, "bincoeff": 198, "logint": 198, "gammaln": 198, "octavecodeprint": 198, "_octav": 198, "recip": [198, 236], "powf": 198, "signum": 198, "rustcodeprint": 198, "_rust_cod": 198, "7_f64": 198, "_aesara": 198, "tensorvari": 198, "floatx": 198, "squeez": 198, "dim_handl": 198, "gtkmathview": 198, "widget": 198, "print_gtk": 198, "libgtkmathview": 198, "start_view": 198, "_lambdacod": 198, "accepted_latex_funct": 198, "parenthesize_sup": 198, "fold_frac_pow": 198, "fold_func_bracket": 198, "fold_short_frac": 198, "inv_trig_styl": 198, "itex": 198, "ln_notat": 198, "long_frac_ratio": 198, "mat_delim": 198, "mat_str": 198, "mul_symbol": 198, "symbol_nam": 198, "gothic_re_im": 198, "decimal_separ": 198, "diff_oper": 198, "smallmatrix": [198, 268], "amsmath": 198, "fracton": 198, "semicolon": 198, "monospac": 198, "mathtt": 198, "mathml2": 198, "mathmlprinterbas": 198, "mathmlcontentprint": 198, "mathmlpresentationprint": 198, "chapter4": 198, "_mathml_cont": 198, "mathml_tag": 198, "chapter3": 198, "_mathml_present": 198, "utf": 198, "mul_symbol_mathml_numb": 198, "xb7": 198, "print_mathml": [198, 273], "mrow": 198, "mpmathprint": 198, "fully_qualified_modul": 198, "print_python": 198, "textual": 198, "reprprint": 198, "_sympyrepr": 198, "reprifi": 198, "sympy_integ": 198, "displayhook": [198, 229], "pprint_nod": 198, "nb2": 198, "print_nod": 198, "asssumpt": 198, "determinisit": 198, "backtrac": 198, "print_tre": 198, "outputbuff": 198, "dvioption": 198, "outputtexfil": 198, "extra_preambl": 198, "latex_set": 198, "postscript": 198, "tex": 198, "eulervm": 198, "sty": 198, "debian": 198, "ubuntu": 198, "unset": [198, 210], "gimp": 198, "evinc": 198, "kdvi": 198, "xdvi": 198, "xdg": 198, "system_default_view": 198, "gracefulli": [198, 222], "generet": 198, "bytesio": 198, "usepackag": 198, "amsfont": 198, "renewcommand": 198, "popen": 198, "phidd": 198, "bitmap": 198, "split_super_sub": 198, "var_sub1__sup_sub2": 198, "assignmenterror": 198, "bitwiseand": 198, "bitwiseor": 198, "bitwisexor": 198, "precedence_valu": 198, "kroneckerproduct": 198, "negativeinfin": 198, "tensadd": [198, 224], "tensmul": [198, 224], "precedence_funct": 198, "precedence_float": 198, "precedence_fracel": 198, "precedence_integ": 198, "precedence_mul": 198, "precedence_polyel": 198, "precedence_r": 198, "unevaluatedexpr": [198, 269], "precedence_unevaluatedexpr": 198, "databas": [198, 208], "pretty_use_unicod": 198, "pretty_try_use_unicod": 198, "xstr": 198, "greek_lett": 198, "digit_2txt": 198, "ONE": 198, "seven": 198, "symb_2txt": 198, "parenthesi": [198, 222], "\u2080": 198, "\u2081": 198, "\u2082": 198, "\u2083": 198, "\u2084": 198, "\u2085": 198, "\u2086": 198, "\u2087": 198, "\u2088": 198, "\u2089": 198, "\u2090": 198, "\u1d66": 198, "\u1d6a": 198, "\u2091": 198, "\u1d67": 198, "\u2095": 198, "\u1d62": 198, "\u2096": 198, "\u2097": 198, "\u2098": 198, "\u2099": 198, "\u2092": 198, "\u209a": 198, "\u1d69": 198, "\u1d63": 198, "\u1d68": 198, "\u209b": 198, "\u209c": 198, "\u1d64": 198, "\u1d65": 198, "\u2093": 198, "\u2070": 198, "\u00b9": 198, "\u00b2": 198, "\u00b3": 198, "\u2074": 198, "\u2075": 198, "\u2076": 198, "\u2077": 198, "\u2078": 198, "\u2079": 198, "\u2071": 198, "\u207f": 198, "xobj": 198, "vobj": 198, "hobj": 198, "vf": 198, "\u00bd": 198, "\u2153": 198, "\u00bc": 198, "\u2155": 198, "\u2159": 198, "\u215b": 198, "\u2154": 198, "\u2156": 198, "\u00be": 198, "\u2157": 198, "\u215c": 198, "\u2158": 198, "\u215a": 198, "\u215d": 198, "\u215e": 198, "xsym": 198, "symbolog": 198, "atoms_t": 198, "\u2102": [198, 275], "emptysequ": [198, 204], "exp1": 198, "\u2115": 198, "\u2115\u2080": 198, "\u211d": [198, 275], "symmetricdiffer": [198, 217], "pretty_atom": 198, "atom_nam": 198, "pretty_symbol": 198, "symb_nam": 198, "bold_nam": 198, "stylis": 198, "_print_meijerg": 198, "_print_hyp": 198, "jurjen": 198, "bo": 198, "hate": 198, "spammer": 198, "pietjepuk314": 198, "oc": [198, 248], "oohai": 198, "gedg": 198, "email": 198, "my": [198, 263], "mun": 198, "terminal_str": 198, "baselin": 198, "leftslash": 198, "slash": [198, 229], "paren": 198, "ifascii_nougli": 198, "line_break": 198, "ugli": 198, "terminal_width": 198, "wider": 198, "maxdepth": 198, "labelfunc": 198, "digraph": [198, 236, 273], "rankdir": [198, 273], "_sparse_": 199, "flavor": 199, "________": [199, 218, 236], "x\u2080": 199, "greatli": 199, "numbered_symbol": [199, 210, 214, 236], "postprocessor": [199, 210], "reduced_expr": [199, 210], "formalpowerseri": 200, "coeff_bel": 200, "formalpowerseriescompos": 200, "r731": 200, "comtet": 200, "loui": 200, "reidel": 200, "1974": 200, "720": [200, 214, 236], "formalpowerseriesinvers": 200, "r732": 200, "upto": [200, 205, 214], "formalpowerseriesproduct": 200, "rational_algorithm": 200, "compute_fp": 200, "hyper_algorithm": 200, "omposit": 200, "bell_seq": 200, "finiteformalpowerseri": 200, "rational_independ": 200, "ra": 200, "admiss": [200, 203], "r733": 200, "r734": 200, "simpled": 200, "exp_r": 200, "explik": 200, "hyper_r": 200, "rsolve_hypergeometr": 200, "r735": 200, "r736": 200, "solve_d": 200, "fourierseri": 201, "scalex": 201, "shiftx": 201, "sigma_approxim": 201, "gibb": 201, "bigl": 201, "bigr": 201, "lanczo": 201, "r737": 201, "gibbs_phenomenon": 201, "r738": 201, "sawtooth": 201, "bn": 201, "r739": 201, "limitseq": 203, "difference_delta": 203, "r740": 203, "differencedelta": 203, "limit_seq": [203, 205], "safeguard": 203, "r741": 203, "kauer": 203, "seqper": 204, "seqformula": 204, "seqbas": 204, "coeff_mul": 204, "find_linear_recurr": 204, "gfvar": 204, "seqadd": 204, "seqmul": 204, "_mul": 204, "recursiveseq": 204, "fib": 204, "invok": [205, 229, 230], "workhors": 205, "succ": [205, 218], "asymp": 205, "exposit": 205, "gloss": 205, "wsym": 205, "test_rewrite1": 205, "build_expression_tre": 205, "mrv_leadterm": 205, "e0": 205, "calculate_seri": 205, "limitinf": 205, "leadsimp": 205, "constantli": 205, "subsset": 205, "mrv_max1": 205, "mrv_max3": 205, "expsf": 205, "expsg": 205, "expsboth": 205, "o2": 205, "do_sub": 205, "r742": 205, "7048138294": 205, "7182818285": 205, "6349839002": 205, "6449340668": 205, "shank": 205, "6881721793": 205, "6931396564": 205, "6931471806": 205, "6931471805599453094172321215": 205, "r743": 205, "residue_theorem": 205, "neighborhood": 206, "rim": 206, "affirm": 206, "infimum": 206, "is_clos": 206, "closed": 206, "is_disjoint": 206, "r744": 206, "disjoint_set": 206, "is_open": 206, "is_proper_subset": 206, "is_proper_superset": 206, "left_open": 206, "is_superset": 206, "isdisjoint": 206, "issubset": 206, "issuperset": 206, "fancyset": 206, "lebesgu": 206, "r745": 206, "power_set": 206, "symmetric_differ": 206, "r746": 206, "right_open": 206, "mpi": 206, "r747": 206, "interval_": 206, "as_rel": 206, "is_left_unbound": 206, "is_right_unbound": 206, "r748": 206, "r749": 206, "union_": 206, "28set_theori": 206, "r750": 206, "intersection_": 206, "coin": [206, 218], "r751": 206, "cartesian_product": 206, "is_iter": 206, "r752": 206, "complementset": 206, "r753": 206, "disjoint_union": 206, "r754": 206, "empty_set": 206, "r755": 206, "universal_set": 206, "flambda": 206, "square_iter": 206, "base_set": 206, "cartesiancomplexregion": 206, "polarcomplexregion": 206, "unit_disk": 206, "upper_half_unit_disk": 206, "a_interv": 206, "b_interv": 206, "from_real": 206, "pset": 206, "rset": 206, "thetaset": 206, "upper_half_plan": 206, "normalize_theta_set": 206, "r756": 206, "r757": 206, "axiom_of_power_set": 206, "varnoth": 206, "sin_sol": 206, "r758": 206, "element_": 206, "tr0": 207, "tr1": 207, "tr2": 207, "tr2i": 207, "tr3": 207, "tr4": 207, "tr5": 207, "tr6": 207, "tr7": 207, "tr8": 207, "tr9": 207, "tr10": 207, "tr10i": 207, "tr11": 207, "tr12": 207, "tr12i": 207, "tr13": 207, "trmorri": 207, "tr14": 207, "tr15": 207, "tr16": 207, "tr22": 207, "tr111": 207, "ctr1": 207, "ctr4": 207, "rl1": 207, "rl2": 207, "deem": 207, "932": 207, "016": 207, "serendipit": 207, "dead": 207, "newa": 207, "lucki": 207, "sqt": 207, "_tr56": 207, "un": [207, 208], "r759": 207, "morri": 207, "27s_law": 207, "trpower": 207, "r760": 207, "list_of_trigonometric_ident": 207, "reduction_formula": 207, "ctr2": 207, "ctr3": 207, "r761": 207, "657": 207, "2478": 207, "dimitar": 207, "vlahovski": 207, "technolog": 207, "xiuqin": 207, "zhong": 207, "zhenb": 207, "zeng": 207, "1169": 207, "1177": 207, "sosmath": 207, "trig5": 207, "symplifi": [208, 210], "roach1996": 208, "roach1997": 208, "p_q": 208, "reachabl": [208, 218], "f_q": 208, "undo": [208, 274], "whenc": 208, "game": 208, "twofold": 208, "incongru": 208, "wlog": 208, "alpha_r": 208, "beta_r": 208, "blindli": 208, "messi": 208, "k_u": 208, "l_v": 208, "k_j": 208, "c_w": 208, "r_j": 208, "l_u": 208, "res_": 208, "delta_i": 208, "add_formula": 208, "addb": 208, "sum_0": 208, "test_hyperexpand": 208, "test_formula": 208, "typo": 208, "suboptim": 208, "imath": 208, "b1prime": 208, "vital": [208, 218], "308": 208, "nthroot": 209, "kroneckersimp": 209, "besselsimp": 209, "hypersimilar": 209, "epath": 209, "hongguang": [209, 254], "fu": [209, 210, 254], "unmodifi": 210, "my_measur": 210, "boolian": 210, "max_len": 210, "surd": 210, "strigonometr": 210, "399": 210, "rational_convers": 210, "base10": 210, "6004799503160655": 210, "nfloat": 210, "eq_x": 210, "max_term": 210, "polish": 210, "expand_power_bas": 210, "rcollect": 210, "analyz": [210, 223], "r762": 210, "pearc": 210, "163": 210, "6984": 210, "trigsimp_groebn": 210, "bb1": 210, "be1": 210, "bb2": 210, "be2": 210, "bei": 210, "max_it": 210, "unrad": [210, 216], "r763": 210, "ibm": 210, "fagin": 210, "symb85": 210, "r764": 210, "cybertest": 210, "opt_sub": 210, "as_unevaluated_bas": 210, "hyperegeometr": 210, "epathtool": 210, "ebnf": 210, "za": [210, 218], "xml": 210, "xpath": 210, "hasattr": [210, 232], "diophantu": 211, "mathematician": [211, 217], "citi": 211, "alexandria": 211, "father": 211, "hi": 211, "arithmetica": 211, "a_1x_1": 211, "a_2x_2": 211, "a_nx_n": 211, "bxy": 211, "cy": 211, "dxy": 211, "eyz": 211, "fzx": 211, "pythagorean": 211, "3y": 211, "4ac": 211, "9369318": 211, "920": 211, "5y": 211, "BY": 211, "t4": 211, "t5": 211, "providean": 211, "eqyptian": 211, "thilinaatsympi": 211, "andreescu": 211, "titu": 211, "andrica": 211, "dorin": 211, "cucurezeanu": 211, "ion": 211, "diophantineequ": 211, "alpertron": 211, "20160323033111": 211, "jpr2718": 211, "ax2p": 211, "permute_sign": [211, 236], "signed_permut": [211, 236], "_dict": 211, "r765": 211, "r766": 211, "pell": 211, "lmm": 211, "r767": 211, "393": 211, "13y": 211, "986": 211, "49299": 211, "1570": 211, "robertson": 211, "20160323033128": 211, "r768": 211, "nitaj": 211, "r769": 211, "numbertheori": 211, "r770": 211, "r771": 211, "676": 211, "884": 211, "fxz": 211, "3xy": 211, "r772": 211, "fxy": 211, "gyz": 211, "hxz": 211, "r773": 211, "cremona": 211, "rusin": 211, "2x_": 211, "m4": 211, "general_sum_of_squar": 211, "8m": 211, "r774": 211, "2345": 211, "proofwiki": 211, "integer_as_sum_of_three_squar": 211, "general_sum_of_even_pow": 211, "1729": 211, "stopiter": 211, "r775": 211, "44542": 211, "207": 211, "schorn": 211, "3456": 211, "1294585930293": 211, "2161": 211, "1137796": 211, "r776": 211, "evenli": 211, "var_t": 211, "r777": 211, "ur": 211, "dv": 211, "vr": 211, "r778": 211, "r779": 211, "nigel": 211, "y_0": [211, 214], "4x": [211, 217, 263], "5x": 211, "r780": 211, "r781": 211, "eprint": 211, "nottingham": 211, "uk": 211, "kvxefz87": 211, "r782": 211, "cuhk": 211, "hk": 211, "wkshum": 211, "404": 211, "r783": 211, "mordel": 211, "r784": 211, "r785": 211, "r786": 211, "r787": 211, "legrang": 211, "csusm": 211, "aitken_html": 211, "symbols_seq": 211, "dict_iter": 211, "r788": 211, "r789": 211, "inhomogen": [211, 214, 216], "r790": 211, "thue": 211, "riccati": 212, "pde": [212, 214], "deutil": [212, 214, 215], "linear_eq_to_matrix": [212, 214], "transolv": 212, "solve_rational_inequ": 213, "solve_poly_inequ": 213, "reduce_rational_inequ": 213, "reduce_abs_inequ": 213, "reduce_inequ": 213, "solve_univariate_inequ": [213, 217], "solvifi": [213, 217], "autodetect": [214, 215], "ode_ord": [214, 215, 216], "best_hint": 214, "all_integr": [214, 215], "_integr": [214, 215], "unevaluat": 214, "test_od": 214, "ode_": 214, "hintnam": [214, 215], "classify_sysod": 214, "ode_hintnam": 214, "tough": 214, "nth_linear_homogeneous_constant_coeff_integr": 214, "nth_linear": 214, "indep": 214, "indep_div_dep": 214, "undetermined_coeffici": 214, "_best": 214, "nth_algebraic_integr": 214, "separable_integr": 214, "1st_exact_integr": 214, "1st_linear_integr": 214, "bernoulli_integr": 214, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 214, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 214, "nth_linear_constant_coeff_variation_of_parameters_integr": 214, "solve_for_func": [214, 215], "homogeneouscoeffsubsdepdivindep": 214, "homogeneouscoeffsubsindepdivdep": 214, "varepsilon": 214, "genform": [214, 215], "starrett": 214, "symbolnam": 214, "startnumb": 214, "endnumb": 214, "renumb": 214, "absorpt": 214, "assist": 214, "2nd_hypergeometric_integr": 214, "almost_linear_integr": 214, "linear_coefficients_integr": 214, "separable_reduced_integr": 214, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 214, "liouville_integr": 214, "2nd_nonlinear_autonomous_conserv": 214, "2nd_nonlinear_autonomous_conserved_integr": 214, "newconst": 214, "ode_sol_simpl": 214, "trysolv": 214, "sola": 214, "solb": 214, "listofsolut": 214, "ode_problem": 214, "firstexact": 214, "exact_differential_equ": 214, "tenenbaum": 214, "dover": 214, "1963": 214, "homogeneouscoeffbest": 214, "ode_1st_homogeneous_coeff_best_integr": 214, "homogeneous_differential_equ": 214, "firstlinear": 214, "linear_differential_equ": 214, "first_order_equ": 214, "rationalriccati": 214, "atleast": 214, "riccati_equ": 214, "thieu": 214, "vo": 214, "www3": [214, 243], "risc_5387": 214, "phdthesisthieu": 214, "secondlinearairi": 214, "secondlinearbessel": 214, "math24": 214, "bernoulli_differential_equ": 214, "goldstein": 214, "braun": 214, "maplesoft": 214, "aspx": 214, "odeadvisor": 214, "riccatispeci": 214, "__________________": 214, "eqworld": 214, "ipmnet": 214, "ru": 214, "ode0106": 214, "ode0123": 214, "nthlinearconstantcoeffhomogen": 214, "nth_linear_constant_coeff_homogeneous_integr": 214, "nonhomogeneous_equation_with_constant_coeffici": 214, "nthlinearconstantcoeffundeterminedcoeffici": 214, "method_of_undetermined_coeffici": 214, "221": 214, "nthlinearconstantcoeffvariationofparamet": 214, "cramer": 214, "variation_of_paramet": 214, "planetmath": 214, "variationofparamet": 214, "nthlineareulereqhomogen": 214, "equidimension": 214, "nth_linear_euler_eq_homogeneous_integr": 214, "sollist": 214, "93euler_equ": 214, "bender": 214, "orszag": 214, "scientist": 214, "nthlineareulereqnonhomogeneousvariationofparamet": 214, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 214, "nthalgebra": 214, "nthorderreduc": 214, "caught": 214, "fault": 214, "almostlinear": 214, "first_linear": 214, "joel": 214, "mose": 214, "stormi": 214, "decad": 214, "august": [214, 233], "558": 214, "linearcoeffici": 214, "separablereduc": 214, "liegroup": 214, "ds": 214, "secondhypergeometr": 214, "2f1": 214, "1f1": 214, "0f1": 214, "liouvillian": 214, "pfq": 214, "chan": 214, "cheb": 214, "terrab": 214, "ode_1st_power_seri": 214, "travi": [214, 229], "walker": 214, "ode_2nd_power_series_ordinari": 214, "lamar": 214, "seriessolut": 214, "simmon": 214, "176": 214, "ode_2nd_power_series_regular": 214, "lie_heuristic_abaco1_simpl": 214, "duart": 214, "da": 214, "mota": 214, "lie_heuristic_abaco1_product": 214, "roch": 214, "lie_heuristic_bivari": 214, "329": 214, "lie_heuristic_chi": 214, "lie_heuristic_abaco2_similar": 214, "lie_heuristic_function_sum": 214, "lie_heuristic_abaco2_unique_unknown": 214, "lie_heuristic_abaco2_unique_gener": 214, "lie_heuristic_linear": 214, "gy": 214, "bh": 214, "impract": 214, "val_inf": 214, "ybar": 214, "numa": 214, "dena": 214, "numi": 214, "deni": 214, "sol1": 214, "sol2": 214, "part_sol": 214, "haaheim": 214, "gensol": 214, "_linear_2eq_order1_type6": 214, "_linear_2eq_order1_type7": 214, "fgp": 214, "ag": 214, "bg": 214, "linear_ode_to_matrix": 214, "odeordererror": 214, "odenonlinearerror": 214, "eqs_mat": 214, "r791": 214, "matrix_differential_equ": 214, "canonical_od": 214, "canonical_eq": 214, "canonical_system": 214, "linodesolve_typ": 214, "type1": 214, "type2": 214, "type3": 214, "type4": 214, "type5": 214, "type6": 214, "type_of_equ": 214, "a_t": 214, "a_non_commut": 214, "matrix_exp_jordan_form": 214, "expj": 214, "matrix_exp": 214, "defect": 214, "p_invers": 214, "r792": 214, "defective_matrix": 214, "r793": 214, "r794": 214, "jordan_normal_form": 214, "comupt": 214, "r795": 214, "r796": 214, "matrix_exponenti": 214, "follw": 214, "antiderv": 214, "subscheck": 214, "system_info": 214, "sol_vector": 214, "sol_vector_evalu": 214, "_nonlinear_2eq_order1_type1": 214, "_nonlinear_2eq_order1_type2": 214, "_nonlinear_2eq_order1_type3": 214, "autonom": 214, "_nonlinear_2eq_order1_type4": 214, "_nonlinear_2eq_order1_type5": 214, "clairaut": 214, "envelop": 214, "_nonlinear_3eq_order1_type1": 214, "enspac": [214, 217], "sysod": 214, "sode0401": 214, "_nonlinear_3eq_order1_type2": 214, "sode0402": 214, "_nonlinear_3eq_order1_type3": 214, "sode0404": 214, "_nonlinear_3eq_order1_type4": 214, "sode0405": 214, "_nonlinear_3eq_order1_type5": 214, "sode0406": 214, "_handle_integr": 214, "gather": 214, "unhind": 214, "wolphramalpha": 214, "detool": 214, "hint_integr": 214, "alphanumer": 214, "hinder": 214, "matching_hint": 214, "matchdict": 214, "1st_homogeneous_coeff": 214, "your_hint": 214, "xfail": [214, 227, 229], "fun": [215, 267], "uxt": 215, "uxi": 215, "solvefun": 215, "test_pd": 215, "pde_hintnam": 215, "ux": 215, "uy": 215, "allhint": 215, "1st_linear_constant_coeff_homogen": 215, "_preprocess": 215, "inabl": 215, "_xi_1": 215, "viktor": 215, "grigoryan": 215, "124a": 215, "substack": 215, "1st_linear_constant_coeff_integr": 215, "du": 215, "inspir": [215, 270], "pde_hint": 215, "checksol": 216, "ect": 216, "elim": 216, "dicontinu": 216, "052": 216, "cov": 216, "pval": 216, "xval": 216, "rsolv": 216, "solve_linear": 216, "solve_linear_system": 216, "overdetermin": [216, 217], "msymbol": 216, "degener": [216, 217], "solve_linear_system_lu": 216, "solve_undetermined_coeff": 216, "equ": 216, "obligatori": 216, "19287309935246": 216, "27844411169911": 216, "73908513321516064165531208767387340401341175890076": 216, "steep": 216, "39267e": 216, "1684e": 216, "588469032184": 216, "315": 216, "730061685774": 216, "46792545969349058": 216, "inconclus": 216, "init": 216, "dissimilar": 216, "v_0": 216, "n_m": 216, "v_m": 216, "rsolve_poli": 216, "rsolve_ratio": 216, "r797": 216, "levelt": 216, "290": [216, 245], "296": 216, "r798": 216, "r799": 216, "revis": 216, "r800": 216, "289": 216, "alembertian": 216, "r801": 216, "r802": 216, "polysi": 216, "solve_triangul": 216, "kalkbrenn": 216, "patrizia": 216, "teo": 216, "aaecc": 216, "conditionset": [217, 218, 275], "productset": 217, "imageset": [217, 275], "complexregion": 217, "uncount": 217, "bizarr": 217, "her": 217, "sol_f": 217, "solveset_r": 217, "solveset_complex": 217, "methodolog": [217, 267], "_solve_real_trig": 217, "invert_r": 217, "invert_complex": 217, "_solve_rad": 217, "_solve_ab": 217, "_solve_as_r": 217, "_solve_as_poly_r": 217, "_solve_as_poly_complex": 217, "_solve_as_poli": 217, "gsoc": 217, "2014": [217, 218], "iamit": 217, "2948": 217, "6659": 217, "7523": 217, "sibx0afl3q": 217, "9696": 217, "27s_theorem": 217, "inftyright": 217, "nright": 217, "0right": 217, "domain_check": 217, "3z": 217, "9z": 217, "nonlinearerror": 217, "4z": 217, "cccc": 217, "eq3": 217, "eq4": 217, "391": 217, "_solve_system": 217, "_solve_using_known_valu": 217, "_transolv": 217, "_tsolv": 217, "tsolv": 217, "outright": 217, "tractabl": 217, "interf": 217, "add_typ": 217, "_is_exponenti": 217, "new_eq": 217, "_solve_exponenti": 217, "_is_class": 217, "_solve_class": 217, "_solve_expo": 217, "9x": 217, "solve_expo": 217, "log_b": 217, "_solve_logarithm": 217, "solve_log": 217, "_is_logarithm": 217, "prebuilt": 218, "finiterv": 218, "varianc": 218, "dice": 218, "continuousrv": 218, "continuousdistributionhandmad": 218, "dist": 218, "discreterv": 218, "discretedistributionhandmad": 218, "pmf": 218, "finitedistributionhandmad": 218, "discreteuniform": 218, "randomsymbol": 218, "r803": 218, "discrete_uniform_distribut": 218, "r804": 218, "discreteuniformdistribut": 218, "d6": 218, "diedistribut": 218, "toss": 218, "r805": 218, "bernoulli_distribut": 218, "r806": 218, "bernoullidistribut": 218, "numeb": 218, "unfair": 218, "r807": 218, "coin_flip": 218, "binomialdistribut": 218, "r808": 218, "binomial_distribut": 218, "r809": 218, "betabinomi": 218, "r810": 218, "r811": 218, "betabinomialdistribut": 218, "popul": 218, "marbl": 218, "r812": 218, "hypergeometric_distribut": 218, "r813": 218, "hypergeometricdistribut": 218, "700000000000000": 218, "r814": 218, "rademacher_distribut": 218, "r815": 218, "geometric_distribut": 218, "r816": 218, "geometricdistribut": 218, "r817": 218, "hermite_distribut": 218, "poisson": 218, "r818": 218, "poisson_distribut": 218, "r819": 218, "poissondistribut": 218, "r820": 218, "logarithmic_distribut": 218, "r821": 218, "logarithmicdistribut": 218, "negativebinomi": 218, "r822": 218, "negative_binomial_distribut": 218, "r823": 218, "negativebinomialdistribut": 218, "skellam": 218, "mu1": 218, "mu2": 218, "mu_1": 218, "mu_2": 218, "i_k": 218, "r824": 218, "skellam_distribut": 218, "yulesimon": 218, "yule": 218, "simon": 218, "r825": 218, "93simon_distribut": 218, "8100": 218, "r826": 218, "zeta_distribut": 218, "cdf": 218, "r827": 218, "arcsine_distribut": 218, "benini": 218, "r828": 218, "benini_distribut": 218, "r829": 218, "v8": 218, "beninidistribut": 218, "r830": 218, "beta_distribut": 218, "r831": 218, "betadistribut": 218, "betanoncentr": 218, "noncentr": 218, "r832": 218, "noncentral_beta_distribut": 218, "r833": 218, "noncentralbetadistribut": 218, "betaprim": 218, "r834": 218, "beta_prime_distribut": 218, "r835": 218, "betaprimedistribut": 218, "boundedpareto": 218, "pareto": 218, "r836": 218, "pareto_distribut": 218, "bounded_pareto_distribut": 218, "r837": 218, "cauchy_distribut": 218, "r838": 218, "cauchydistribut": 218, "r839": 218, "chi_distribut": 218, "r840": 218, "chidistribut": 218, "chinoncentr": 218, "r841": 218, "noncentral_chi_distribut": 218, "chisquar": 218, "r842": 218, "chi_squared_distribut": 218, "r843": 218, "squareddistribut": 218, "dagum": 218, "r844": 218, "dagum_distribut": 218, "erlang": 218, "r845": 218, "erlang_distribut": 218, "r846": 218, "erlangdistribut": 218, "exgaussian": 218, "emg": 218, "r847": 218, "exponentially_modified_gaussian_distribut": 218, "quantil": 218, "r848": 218, "exponential_distribut": 218, "r849": 218, "exponentialdistribut": 218, "fdistribut": 218, "______________________________": 218, "r850": 218, "r851": 218, "fisherz": 218, "fisher": 218, "2d_1": 218, "d_1z": 218, "d_1e": 218, "r852": 218, "27s_z": 218, "r853": 218, "fishersz": 218, "frechet": 218, "r854": 218, "a9chet_distribut": 218, "r855": 218, "gamma_distribut": 218, "r856": 218, "gammadistribut": 218, "gammainvers": 218, "r857": 218, "gompertz": 218, "r858": 218, "gompertz_distribut": 218, "gumbel": 218, "dfrac": 218, "r859": 218, "gumbeldistribut": 218, "r860": 218, "gumbel_distribut": 218, "r861": 218, "mathwav": 218, "easyfit": 218, "gumbel_max": 218, "r862": 218, "gumbel_min": 218, "kumaraswami": 218, "r863": 218, "kumaraswamy_distribut": 218, "r864": 218, "laplace_distribut": 218, "r865": 218, "laplacedistribut": 218, "r866": 218, "a9vy_distribut": 218, "r867": 218, "levydistribut": 218, "logist": 218, "r868": 218, "logistic_distribut": 218, "r869": 218, "logisticdistribut": 218, "loglogist": 218, "unimod": 218, "r870": 218, "lognorm": 218, "r871": 218, "r872": 218, "lognormaldistribut": 218, "lomax": 218, "r873": 218, "lomax_distribut": 218, "maxwel": 218, "2a": 218, "r874": 218, "maxwell_distribut": 218, "r875": 218, "maxwelldistribut": 218, "moyal": 218, "r876": 218, "moyaldistribut": 218, "r877": 218, "rice": 218, "dobelman": 218, "textfil": 218, "distributionshandbook": 218, "nakagami": 218, "r878": 218, "nakagami_distribut": 218, "marginal_distribut": 218, "r879": 218, "normal_distribut": 218, "r880": 218, "normaldistributionfunct": 218, "xm": 218, "x_m": 218, "r881": 218, "r882": 218, "paretodistribut": 218, "powerfunct": 218, "paramat": 218, "r883": 218, "power_func": 218, "quadraticu": 218, "r884": 218, "quadratic_distribut": 218, "raisedcosin": 218, "2s": 218, "r885": 218, "raised_cosine_distribut": 218, "r886": 218, "rayleigh_distribut": 218, "r887": 218, "rayleighdistribut": 218, "r888": 218, "reciprocal_distribut": 218, "studentt": 218, "r889": 218, "student_t": 218, "r890": 218, "studentst": 218, "shiftedgompertz": 218, "r891": 218, "shifted_gompertz_distribut": 218, "r892": 218, "trapezoidal_distribut": 218, "r893": 218, "triangular_distribut": 218, "r894": 218, "triangulardistribut": 218, "r895": 218, "uniform_distribution_": 218, "28continu": 218, "r896": 218, "uniformdistribut": 218, "uniformsum": 218, "irwin": 218, "r897": 218, "uniform_sum_distribut": 218, "r898": 218, "uniformsumdistribut": 218, "vonmis": 218, "mise": 218, "i_0": 218, "r899": 218, "von_mises_distribut": 218, "r900": 218, "vonmisesdistribut": 218, "wald": 218, "gaussianinvers": 218, "r901": 218, "inverse_gaussian_distribut": 218, "r902": 218, "inversegaussiandistribut": 218, "weibul": 218, "geq0": 218, "r903": 218, "weibull_distribut": 218, "r904": 218, "weibulldistribut": 218, "wignersemicircl": 218, "semicircl": 218, "frac2": 218, "r905": 218, "wigner_semicircle_distribut": 218, "r906": 218, "wignerssemicirclelaw": 218, "jointrv": 218, "_set": 218, "multivariatenorm": 218, "noninvert": 218, "ob": 218, "r907": 218, "multivariate_normal_distribut": 218, "multivariatelaplac": 218, "r908": 218, "multivariate_laplace_distribut": 218, "generalizedmultivariateloggamma": 218, "joint_rv_typ": 218, "gd": 218, "y_3": 218, "gmvlg": 218, "generalizedmultivariateloggammaomega": 218, "r909": 218, "generalized_multivariate_log": 218, "r910": 218, "234137346_on_a_multivariate_log": 218, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 218, "correl": 218, "gmvlgo": 218, "r911": 218, "r912": 218, "r913": 218, "multinomial_distribut": 218, "r914": 218, "multinomialdistribut": 218, "multivariatebeta": 218, "r915": 218, "dirichlet_distribut": 218, "r916": 218, "dirichletdistribut": 218, "multivariateewen": 218, "ewen": 218, "r917": 218, "27s_sampling_formula": 218, "r918": 218, "rutger": 218, "hcrane": 218, "sts529": 218, "multivariatet": 218, "negativemultinomi": 218, "n_c": 218, "r919": 218, "negative_multinomial_distribut": 218, "r920": 218, "normalgamma": 218, "r921": 218, "discretemarkovchain": 218, "state_spac": 218, "trans_prob": 218, "markov": 218, "characteris": 218, "transitionmatrixof": 218, "ys": 218, "transition_prob": 218, "sunni": 218, "cloudi": 218, "raini": 218, "randomindexedsymbol": 218, "409": 218, "6963328": 218, "3096": 218, "query_gt": 218, "64705": 218, "r922": 218, "markov_chain": 218, "time_markov_chain": 218, "r923": 218, "dartmouth": 218, "teaching_aid": 218, "books_articl": 218, "probability_book": 218, "chapter11": 218, "canonical_form": 218, "transient": 218, "p_new": 218, "new_matrix": 218, "communication_class": 218, "r924": 218, "onlinelibrari": 218, "wilei": 218, "1002": 218, "9780470316887": 218, "app1": 218, "r925": 218, "columbia": 218, "ww2040": 218, "6711f12": 218, "lect1023big": 218, "is_recurr": 218, "tarjan": [218, 236], "r926": 218, "4701sum07": 218, "4701": 218, "mcii": 218, "r927": 218, "ceca": 218, "clemson": 218, "shierd": 218, "shier": 218, "r928": 218, "ujcont": 218, "uj": 218, "7506": 218, "content1": 218, "r929": 218, "econ": 218, "dtmc": 218, "reccur": 218, "r930": 218, "absorbing_markov_chain": 218, "r931": 218, "brandei": 218, "igusa": 218, "math56as08": 218, "math56a_s08_notes015": 218, "fixed_row_vector": 218, "stationary_distribut": 218, "fundamental_matrix": 218, "r932": 218, "lip": 218, "limiting_distribut": 218, "condition_set": 218, "wm": 218, "r933": 218, "probabilitycours": 218, "11_2_6_stationary_and_limiting_distribut": 218, "r934": 218, "galton": 218, "uchicago": 218, "yibi": 218, "stat317": 218, "lecture4_6up": 218, "continuousmarkovchain": 218, "gen_mat": 218, "generator_matrix": 218, "45279": 218, "58602": 218, "37933": 218, "34211": 218, "7143": 218, "4002723175": 218, "6832579186": 218, "r935": 218, "r936": 218, "biu": 218, "il": 218, "amirgi": 218, "ctmcnote": 218, "bernoulliprocess": 218, "processs": 218, "joint_distribut": 218, "jointdistributionhandmad": 218, "r937": 218, "bernoulli_process": 218, "r938": 218, "mathc": 218, "clarku": 218, "djoyc": 218, "ma217": 218, "given_condit": 218, "poissonprocess": 218, "648": 218, "r939": 218, "11_0_0_intro": 218, "r940": 218, "poisson_point_process": 218, "wiener": 218, "brownian": 218, "scottish": 218, "botanist": 218, "r941": 218, "11_4_0_brownian_motion_wiener_process": 218, "r942": 218, "wiener_process": 218, "gammaprocess": 218, "jump": [218, 274], "472": 218, "r943": 218, "gamma_process": 218, "matrixgamma": 218, "scale_matrix": 218, "r944": 218, "matrix_gamma_distribut": 218, "wishart": 218, "r945": 218, "wishart_distribut": 218, "matrixnorm": 218, "location_matrix": 218, "scale_matrix_1": 218, "scale_matrix_2": 218, "r946": 218, "matrix_normal_distribut": 218, "compound_rv": 218, "compounddistribut": 218, "crv_type": 218, "r947": 218, "compound_probability_distribut": 218, "numsampl": 218, "evaluate_integr": 218, "r948": 218, "entropy_": 218, "information_theori": 218, "r949": 218, "crmarsh": 218, "charles_marsh_continuous_entropi": 218, "r950": 218, "uconn": 218, "kconrad": 218, "blurb": 218, "entropypost": 218, "arg1": 218, "arg2": 218, "cexpr": 218, "coskew": 218, "sigma_": 218, "r951": 218, "r952": 218, "probability_distribut": 218, "randomst": 218, "die_rol": 218, "samp": 218, "pspace": 218, "samp_list": 218, "sam": 218, "42519758": 218, "40207856": 218, "94991743": 218, "85819627": 218, "83403519": 218, "9412172": 218, "85768055": 218, "38954165": 218, "11163337": 218, "3176591": 218, "79115232": 218, "63232916": 218, "01747268": 218, "96716083": 218, "sampling_p": 218, "sampling_": 218, "factorial_mo": 218, "r953": 218, "r954": 218, "factorialmo": 218, "kurtosi": 218, "outlier": 218, "sigma_x": 218, "r955": 218, "r956": 218, "asymmetri": 218, "pearson": 218, "sampling_dens": 218, "centralmo": 218, "cmoment": 218, "expectationmatrix": 218, "randommatrixsymbol": 218, "n11": 218, "n12": 218, "n21": 218, "n22": 218, "variancematrix": 218, "crosscovariancematrix": 218, "randomdomain": 218, "probabilist": 218, "singledomain": 218, "singlepspac": 218, "productdomain": 218, "productpspac": 218, "adject": 218, "conditionaldomain": 218, "frv": 218, "finitedomain": 218, "finitepspac": 218, "crv": 218, "continuousdomain": 218, "continuouspspac": 218, "diepspac": 218, "singlefinitepspac": 218, "normalpspac": 218, "singlecontinuouspspac": 218, "frv_type": 218, "randomvari": 218, "tactic": 218, "random_symbol": 218, "rs_swap": 218, "pspace1": 218, "pspace2": 218, "immutabledensendimarrai": 219, "tomatrix": 219, "j_m": 219, "i_a": 219, "i_b": 219, "sum_k": 219, "tensorcontract": [219, 220], "tensordiagon": [219, 220], "derive_by_arrai": 219, "sum_m": 219, "immutablesparsendimarrai": 219, "mutabledensendimarrai": 219, "mutablesparsendimarrai": 219, "index_order_old": 219, "index_order_new": 219, "cab": 219, "contraction_ax": 219, "diagonal_ax": 219, "arraycontract": 220, "arraydiagon": 220, "arraysymbol": 220, "convert_indexed_to_arrai": 220, "arrayadd": 220, "convert_matrix_to_arrai": 220, "convert_array_to_matrix": 220, "expr_tr": 220, "array_der": 220, "index_method": 222, "get_contraction_structur": [222, 223], "deepest": 222, "nested_contract": 222, "get_indic": [222, 223, 224, 225], "indexconformanceexcept": 222, "______": 223, "stem": 223, "dim1": 223, "dim2": 223, "qwerti": 223, "a_ij": 223, "b_ij": 223, "syntact": 223, "a_real": 223, "c_inherit": 223, "c_explicit": 223, "unrol": 223, "tensorindextyp": [224, 225], "eps_dim": 224, "metric_nam": 224, "su": 224, "lorentz": 224, "tensor_index_typ": 224, "is_up": 224, "tensor_inde_typ": 224, "typ": 224, "tensorhead": [224, 225], "index_typ": 224, "tensorsymmetri": 224, "monoterm": 224, "_tensormanag": 224, "set_comm": 224, "asym2": 224, "fully_symmetr": 224, "tensori": [224, 225], "repl": 224, "e_z": 224, "no_symmetri": 224, "p_x": 224, "p_y": 224, "p_z": 224, "ipos1": 224, "ipos2": 224, "icomp1": 224, "icomp2": 224, "nameless": 224, "replacement_dict": 224, "free_arg": 224, "addend": 224, "canon_bp": 224, "contract_metr": 224, "contract_al": 224, "ipo": 224, "icomp": 224, "nonrep": 224, "dum": 224, "ext_rank": 224, "is_canon_bp": 224, "m0": 224, "get_free_indic": [224, 225], "perm2tensor": 224, "tid": 224, "sorted_compon": 224, "riemann_cyclic_replac": 224, "riemann_cycl": 224, "cadabra": 224, "multiterm": 224, "bianchi": 224, "sym2": 224, "direct_product": 224, "monotorem": 224, "tableaux": 224, "tensortyp": 224, "repetit": [224, 236], "tensormanag": 224, "comm_i2symbol": 224, "comm_symbols2i": 224, "get_comm": 224, "gcomm": 224, "ghcomm": 224, "toper": 225, "partialderiv": 225, "valenc": 225, "uncontract": 225, "compa": 225, "compb": 225, "derivand": 225, "xpass": [227, 229], "nocache_fail": 227, "expectedexcept": 227, "assertionerror": 227, "exceptioninfo": 227, "abort": 227, "9999": 227, "warningcl": [227, 234], "test_stacklevel": 227, "randtest": 228, "portabl": [229, 230], "pytestreport": 229, "force_color": 229, "readlin": 229, "sympydoctestfind": 229, "doctestpars": 229, "exclude_empti": 229, "sympydoctestrunn": 229, "checker": 229, "optionflag": 229, "5140": 229, "doctestrunn": 229, "clear_glob": 229, "writer": 229, "garbag": 229, "check_output": 229, "report_": 229, "sympyoutputcheck": 229, "outputcheck": 229, "stdlib": 229, "testrunn": 229, "sympytestresult": 229, "convert_to_native_path": 229, "lst": 229, "blacklist": 229, "get_sympy_dir": 229, "raise_on_deprec": 229, "deprecationwarn": [229, 234], "run_all_test": 229, "test_arg": 229, "test_kwarg": 229, "doctest_arg": 229, "doctest_kwarg": 229, "examples_arg": 229, "examples_kwarg": 229, "run_in_subprocess_with_hash_random": 229, "function_kwarg": 229, "virtualenv": 229, "pythonhashse": 229, "_test": 229, "split_list": 229, "sympytestfil": 229, "module_rel": 229, "extraglob": 229, "raise_on_error": 229, "basenam": [229, 230, 231], "slate": 229, "dont_accept_true_for_1": 229, "dont_accept_blanklin": 229, "normalize_whitespac": 229, "ellipsi": 229, "ignore_exception_detail": 229, "report_udiff": 229, "report_cdiff": 229, "report_ndiff": 229, "report_only_first_failur": 229, "mortem": 229, "tomfooleri": 229, "testmod": 229, "tester": 229, "fiddl": [229, 274], "timeout": 229, "keyboardinterrupt": 229, "interrupt": 229, "_basic": 229, "kw": 229, "test_equ": 229, "pdb": 229, "pipe": 229, "time_bal": 229, "tandem": 230, "matvec": 230, "codewrapp": 230, "distutil": 230, "fwrap": 230, "swig": 230, "binary_cal": 230, "22925376": 230, "25165824": 230, "_imp_": [230, 237], "filepath": 230, "cythoncodewrapp": 230, "dump_pyx": 230, "dummywrapp": 230, "f2pycodewrapp": 230, "ufuncifycodewrapp": 230, "dump_c": [230, 231], "funcnam": 230, "code_gen": [230, 231], "argument_tupl": 230, "include_dir": 230, "library_dir": 230, "extra_compile_arg": 230, "extra_link_arg": 230, "symfunc": [230, 237], "funtion_nam": 230, "ndimension": 230, "f_fortran": 230, "f_cython": 230, "r957": 230, "fortran77": 231, "fortran90": 231, "julia": [231, 261], "rust": [231, 261], "mileston": 231, "unsurmount": 231, "pyf": 231, "inputoutput": 231, "tcc": 231, "libtcc": 231, "date": 231, "hostnam": 231, "sha1": 231, "ccodegen": 231, "preprocessor_stat": 231, "dump_h": 231, "guard": 231, "get_prototyp": 231, "codegenerror": 231, "function_prototyp": 231, "dump_cod": 231, "cname": 231, "fname": 231, "pynam": 231, "jlname": 231, "octnam": 231, "rsname": 231, "fcodegen": 231, "f90": 231, "dump_f95": 231, "get_interfac": 231, "juliacodegen": 231, "dump_jl": 231, "octavecodegen": 231, "dump_m": 231, "returnvalu": 231, "destin": 231, "local_var": 231, "result_vari": 231, "ot": 231, "unnam": 231, "rustcodegen": 231, "dump_r": 231, "f_result": 231, "myfcn": 231, "fcn2": 231, "myfcn_result": 231, "void": 231, "get_default_datatyp": 231, "complex_allow": 231, "agnost": 231, "conserve_mpmath_dp": 232, "doctest_depends_on": 232, "disable_view": 232, "python_vers": 232, "memoize_properti": 232, "propfunc": 232, "no_attrs_in_subclass": 232, "__all__": 232, "some_funct": 232, "thread": 232, "xthread": 232, "threaded_factori": 232, "use_add": 232, "multiset_partitions_taocp": 233, "visitor": 233, "pstack": 233, "lpart": 233, "topmost": 233, "partcompon": 233, "peek": [233, 274], "unpredict": 233, "list_visitor": 233, "abb": [233, 236], "factoring_visitor": 233, "multisetpartitiontravers": 233, "aocp": 233, "count_partit": 233, "127750": 233, "686": 233, "4a": 233, "factorisatio": 233, "oppenheim": 233, "numerorum": 233, "canfield": 233, "erdo": 233, "OF": 233, "yorgei": 233, "monad": 233, "persist": 233, "288716": 233, "memoiz": [233, 235, 261], "dramat": 233, "hypothet": 233, "borrow": 233, "coalesc": 233, "_rang": 233, "stretch": 233, "brain": 233, "histogram": 233, "enum_al": 233, "enum_larg": 233, "enum_rang": 233, "enum_smal": 233, "ub": 233, "parti": 234, "catch_warn": 234, "simplefilt": 234, "dedent": [234, 239], "enum": [235, 261], "pkgdata": [235, 261], "kbin": 236, "partion": 236, "bcd": 236, "notiter": 236, "binary_partit": 236, "r958": 236, "taocp": 236, "nx": 236, "common_prefix": 236, "common_suffix": 236, "unhash": 236, "r959": 236, "connected_component_": 236, "graph_theori": 236, "r960": 236, "27s_strongly_connected_components_algorithm": 236, "dict_merg": 236, "filter_symbol": 236, "ls": 236, "myop": 236, "kog": 236, "informatik": 236, "hamburg": 236, "mein": 236, "python_trick": 236, "neighbor": 236, "xxxxxx": 236, "xxxx": 236, "r961": 236, "method_ring": 236, "r962": 236, "4856615": 236, "4857018": 236, "r963": 236, "programminggeek": 236, "r964": 236, "steinhau": 236, "93johnson": 236, "93trotter_algorithm": 236, "r965": 236, "involut": 236, "eco": 236, "vajnovszki": 236, "dmtc": 236, "generate_involut": 236, "r966": 236, "permutationinvolut": 236, "generate_oriented_forest": 236, "forest": 236, "acycl": 236, "r967": 236, "beyer": 236, "hedetniemi": 236, "novemb": 236, "r968": 236, "1633833": 236, "has_dup": 236, "has_varieti": 236, "iproduct": 236, "abcbb": 236, "is_sequ": 236, "generatortyp": 236, "_iter": 236, "ordered_flag": 236, "least_rot": 236, "rotate_left": 236, "r969": 236, "lexicographically_minimal_string_rot": 236, "minlex": 236, "acb": 236, "11010011000": 236, "00011010011": 236, "00011001011": 236, "aaa": 236, "abi": 236, "bby": 236, "abracadabra": 236, "banana": 236, "multiset_derang": 236, "uniq": 236, "1233": 236, "3312": 236, "3321": 236, "aba": 236, "baa": 236, "bead": 236, "ooo": 236, "r970": 236, "ordered_partit": 236, "r971": 236, "jeromekelleh": 236, "r972": 236, "jerom": 236, "kelleh": 236, "barri": 236, "sullivan": 236, "0909": 236, "2331v2": 236, "r973": 236, "activest": 236, "218332": 236, "postfix": 236, "random_derang": 236, "reseed": 236, "templat": 236, "rotate_right": 236, "roundrobin": 236, "ef": 236, "credit": [236, 259], "sakki": 236, "keyfunc": 236, "subgraph": 236, "r974": 236, "r975": 236, "longest": 236, "r976": 236, "unflatten": 236, "afunc": 237, "lam_f": 237, "lambdastr": 237, "dummifi": 237, "use_imp": 237, "custom_sin": 237, "38177329": 237, "49315059": 237, "8414709848078965": 237, "eager": 237, "enable_eager_execut": 237, "eagertensor": 237, "__class__": 237, "placehold": 237, "user_guid": 237, "runtimewarn": 237, "sin_cos_sympi": 237, "sin_co": 237, "sin_cos_numpi": 237, "38177329068": 237, "module_dictionari": 237, "_lambdifygener": 237, "__globals__": 237, "lambdaprint": [237, 261], "90929743": [237, 263], "assoc_recurrence_memo": 238, "base_seq": 238, "memo": 238, "pn0": 238, "recurrence_memo": 238, "specfun": 238, "__index__": 239, "sanit": 239, "99999999999999991611392": 239, "debug_decor": 239, "fillded": 239, "strline": 239, "rawlin": 239, "find_execut": 239, "pathsep": 239, "strictlessthan": 239, "pastabl": 239, "bee": 239, "spamham": 239, "sha": 239, "spam": 239, "egg": 239, "md5": 239, "eggsham": 239, "r977": 239, "6116978": 239, "roken": 239, "deletechar": 239, "multicharact": 239, "oldchar": 239, "newchar": 239, "acquir": 240, "getresourc": 240, "idiom": [240, 266, 267], "pkgname": 240, "pkgpath": 240, "dirnam": 240, "normpath": 240, "rb": 240, "__loader__": 240, "stringio": 240, "get_resourc": 240, "ioerror": 240, "mydata": 240, "mypkgdata": 240, "jpg": 240, "get_class": 241, "lookup_view": 241, "get_mod_func": 241, "callback": 241, "timeutil": 242, "coordsysrect": 243, "rotation_matrix": [243, 244, 247], "vector_nam": 243, "variable_nam": [243, 249], "latex_vect": 243, "pretty_vect": 243, "latex_scalar": 243, "pretty_scalar": 243, "new_system": 243, "create_new": [243, 247], "transformation_to_par": 243, "transformation_from_par": 243, "locate_new": [243, 245, 246, 247, 248, 249], "position_wrt": [243, 246, 247, 248], "orient_new": [243, 244], "axisorient": [243, 247, 250], "axis_orient": [243, 247], "bodyorient": [243, 247, 250], "body_orient": [243, 244, 247], "spaceorient": [243, 247, 250], "space_orient": [243, 244], "quaternionorient": [243, 247, 250], "q_orient": [243, 244], "orient_new_axi": [243, 245, 247], "orient_new_bodi": [243, 247], "angle1": [243, 244], "angle2": [243, 244], "angle3": [243, 244], "euler_angl": [243, 244], "orient_new_quaternion": [243, 247], "orient_new_spac": [243, 247], "coordsyrect": 243, "v_a": 243, "v_b": 243, "scalar_map": 243, "basevector": [243, 246, 247], "delop": [243, 248, 249], "r978": 243, "r979": 243, "basedyad": [243, 246], "second_system": 243, "deloper": [243, 250], "curl": [243, 250, 252], "parabola": 243, "rational_parametr": 243, "singular_point": 243, "regular_point": 243, "reg_point": 243, "implict": 243, "cubic_curv": 243, "calulc": 243, "hoffmann": 243, "purdu": 243, "lib": 243, "cgi": 243, "viewcont": 243, "1827": 243, "cstech": 243, "erik": 243, "hillgart": 243, "diploma": 243, "linz": 243, "universitat": 243, "availa": 243, "risc_1355": 243, "20point": 243, "20on": 243, "20conic": 243, "semispher": [243, 252], "coordsys3d": [244, 245, 246, 248, 249, 250, 252], "axis_orienter1": 244, "axis_orienter2": 244, "axis_orienter3": 244, "body_orienter1": 244, "body_orienter2": 244, "body_orienter3": 244, "system2": 245, "parametricregion": [245, 250, 252], "implicitregion": [245, 250, 252], "essenc": 246, "vectormul": 246, "vectoradd": 246, "ofcours": 246, "vectorzero": 246, "expressli": 246, "express_coordin": [246, 247], "dyadicmul": 246, "dyadicadd": 246, "cleanest": 247, "orient_new_": 247, "attain": 247, "basescalar": [247, 249], "oabc": 248, "oa": 248, "pq": 248, "sr": 248, "wikidel": 248, "ffield": 248, "gradient_field": 249, "instantan": 249, "directional_deriv": 249, "lame": 249, "quadrilater": 250, "flux": 250, "parametricintegr": 250, "matrix_to_vector": 250, "vector_integr": [250, 252], "dyadicproduct": 250, "quantifi": 251, "throughtout": 251, "necesssari": 252, "param_circl": 252, "implicit_circl": 252, "obextj": 252, "solidspher": 252, "lamina": 252, "\ud835\udc45": 252, "cylind": 252, "vectorfield": 252, "hemispher": 252, "top_fac": 252, "bottom_fac": 252, "27_theorem": 252, "cone": 252, "divergence_theorem": 252, "12288": 252, "subcategori": 253, "cnode": 255, "cxxnode": 255, "fnode": 255, "pyutil": 255, "cutil": 255, "futil": 255, "ecm": 258, "copyright": 259, "truss": 259, "pappu": 260, "hexagon": 260, "prettyprint": 261, "rcodeprint": 261, "javascript": [261, 273], "gtk": 261, "mathmlprint": 261, "pythoncodeprint": 261, "pythonprint": 261, "dotprint": [261, 269, 273], "str_expr": 263, "82842712474619": 263, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 263, "0874989834394464": 263, "roundoff": 263, "14112001": 263, "7568025": 263, "95892427": 263, "2794155": 263, "6569866": 263, "98935825": 263, "41211849": 263, "0998334166468": 263, "sympy_nam": 263, "numerical_funct": 263, "rephras": 264, "oh": 264, "integration_vari": 264, "dfdx": 264, "equidistantli": 264, "d2fdx2": 264, "django": 266, "oop": 266, "crazi": 266, "abcdef": 266, "reevalu": 266, "infal": 266, "insight": 267, "entertain": 267, "preliminari": 267, "82842712475": 268, "cass": 268, "wrote": [268, 269], "theme": 268, "expanded_expr": 268, "whet": 268, "appetit": 268, "c\u2082": [268, 275], "c\u2081": [268, 275], "\u03bd": 268, "sell": 268, "battl": 268, "confid": 268, "gigabyt": 268, "tear": 269, "rebuilt": 269, "stopper": 269, "uexpr": 269, "unevalutedexpr": 269, "downsid": 270, "algebraic_multipl": 270, "pdp": 270, "\u03bb": 270, "undertest": 270, "underevalu": 270, "my_iszero": 270, "stronger": 270, "tradeoff": 270, "wonder": 270, "5b7c3e8ee5b40332abdb206c": 270, "15141": 270, "19548": 270, "10120": 270, "10279": 270, "constant_problem": 270, "possiblezeroq": 270, "mupad_ref": 270, "iszero": 270, "congratul": 271, "decent": 272, "austin": 272, "video": 272, "bvar": 273, "unnecessarili": 274, "whittl": 274, "catchal": 274, "sound": 274, "collected_expr": 274, "cdot1": 274, "undertak": 274, "undon": 274, "cdot2": 274, "nck": 274, "pronounc": 274, "_2f_1": 274, "cfrac": 274, "list_to_frac": 274, "a\u2080": 274, "a\u2083": 274, "a\u2084": 274, "pointless": 274, "orig_frac": 274, "diffeq": 275}, "objects": {"": [[22, 0, 0, "-", "sympy"]], "sympy": [[24, 0, 0, "-", "abc"], [25, 0, 0, "-", "algebras"], [28, 0, 0, "-", "assumptions"], [31, 0, 0, "-", "calculus"], [32, 0, 0, "-", "categories"], [53, 0, 0, "-", "diffgeom"], [54, 0, 0, "-", "discrete"], [58, 0, 0, "-", "functions"], [71, 0, 0, "-", "holonomic"], [78, 0, 0, "-", "integrals"], [79, 0, 0, "-", "interactive"], [80, 0, 0, "-", "liealgebras"], [81, 0, 0, "-", "logic"], [86, 0, 0, "-", "matrices"], [93, 0, 0, "-", "parsing"], [259, 0, 0, "-", "physics"], [194, 0, 0, "-", "polys"], [216, 0, 0, "-", "solvers"], [218, 0, 0, "-", "stats"], [221, 0, 0, "-", "tensor"], [226, 0, 0, "-", "testing"], [235, 0, 0, "-", "utilities"], [250, 0, 0, "-", "vector"]], "sympy.algebras": [[25, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[25, 2, 1, "", "add"], [25, 2, 1, "", "angle"], [25, 2, 1, "", "arc_coplanar"], [25, 2, 1, "", "axis"], [25, 2, 1, "", "exp"], [25, 2, 1, "", "from_axis_angle"], [25, 2, 1, "", "from_rotation_matrix"], [25, 2, 1, "", "index_vector"], [25, 2, 1, "", "integrate"], [25, 2, 1, "", "inverse"], [25, 2, 1, "", "is_pure"], [25, 2, 1, "", "is_zero_quaternion"], [25, 2, 1, "", "mensor"], [25, 2, 1, "", "mul"], [25, 2, 1, "", "norm"], [25, 2, 1, "", "normalize"], [25, 2, 1, "", "orthogonal"], [25, 2, 1, "", "parallel"], [25, 2, 1, "", "pow"], [25, 2, 1, "", "pow_cos_sin"], [25, 2, 1, "", "rotate_point"], [25, 2, 1, "", "scalar_part"], [25, 2, 1, "", "to_axis_angle"], [25, 2, 1, "", "to_rotation_matrix"], [25, 2, 1, "", "vector_coplanar"], [25, 2, 1, "", "vector_part"]], "sympy.assumptions": [[26, 0, 0, "-", "ask"], [27, 0, 0, "-", "assume"], [29, 0, 0, "-", "predicates"], [30, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[26, 1, 1, "", "AssumptionKeys"], [26, 3, 1, "", "ask"], [26, 3, 1, "", "register_handler"], [26, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[27, 1, 1, "", "AppliedPredicate"], [27, 1, 1, "", "AssumptionsContext"], [27, 1, 1, "", "Predicate"], [27, 1, 1, "", "UndefinedPredicate"], [27, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[27, 4, 1, "", "arg"], [27, 4, 1, "", "arguments"], [27, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[27, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[27, 2, 1, "", "eval"], [27, 5, 1, "", "handler"], [27, 2, 1, "", "register"], [27, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[29, 1, 1, "", "FinitePredicate"], [29, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[29, 1, 1, "", "CommutativePredicate"], [29, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[29, 1, 1, "", "ComplexElementsPredicate"], [29, 1, 1, "", "DiagonalPredicate"], [29, 1, 1, "", "FullRankPredicate"], [29, 1, 1, "", "IntegerElementsPredicate"], [29, 1, 1, "", "InvertiblePredicate"], [29, 1, 1, "", "LowerTriangularPredicate"], [29, 1, 1, "", "NormalPredicate"], [29, 1, 1, "", "OrthogonalPredicate"], [29, 1, 1, "", "PositiveDefinitePredicate"], [29, 1, 1, "", "RealElementsPredicate"], [29, 1, 1, "", "SingularPredicate"], [29, 1, 1, "", "SquarePredicate"], [29, 1, 1, "", "SymmetricPredicate"], [29, 1, 1, "", "TriangularPredicate"], [29, 1, 1, "", "UnitTriangularPredicate"], [29, 1, 1, "", "UnitaryPredicate"], [29, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[29, 1, 1, "", "CompositePredicate"], [29, 1, 1, "", "EvenPredicate"], [29, 1, 1, "", "OddPredicate"], [29, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[29, 1, 1, "", "NegativePredicate"], [29, 1, 1, "", "NonNegativePredicate"], [29, 1, 1, "", "NonPositivePredicate"], [29, 1, 1, "", "NonZeroPredicate"], [29, 1, 1, "", "PositivePredicate"], [29, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[29, 1, 1, "", "AlgebraicPredicate"], [29, 1, 1, "", "AntihermitianPredicate"], [29, 1, 1, "", "ComplexPredicate"], [29, 1, 1, "", "ExtendedRealPredicate"], [29, 1, 1, "", "HermitianPredicate"], [29, 1, 1, "", "ImaginaryPredicate"], [29, 1, 1, "", "IntegerPredicate"], [29, 1, 1, "", "IrrationalPredicate"], [29, 1, 1, "", "RationalPredicate"], [29, 1, 1, "", "RealPredicate"], [29, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[29, 5, 1, "", "AlgebraicHandler"], [29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[30, 3, 1, "", "refine"], [30, 3, 1, "", "refine_Pow"], [30, 3, 1, "", "refine_abs"], [30, 3, 1, "", "refine_arg"], [30, 3, 1, "", "refine_atan2"], [30, 3, 1, "", "refine_im"], [30, 3, 1, "", "refine_matrixelement"], [30, 3, 1, "", "refine_re"], [30, 3, 1, "", "refine_sign"]], "sympy.calculus": [[31, 0, 0, "-", "euler"], [31, 0, 0, "-", "finite_diff"], [31, 0, 0, "-", "singularities"], [31, 0, 0, "-", "util"]], "sympy.calculus.euler": [[31, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[31, 3, 1, "", "apply_finite_diff"], [31, 3, 1, "", "differentiate_finite"], [31, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[31, 3, 1, "", "is_decreasing"], [31, 3, 1, "", "is_increasing"], [31, 3, 1, "", "is_monotonic"], [31, 3, 1, "", "is_strictly_decreasing"], [31, 3, 1, "", "is_strictly_increasing"], [31, 3, 1, "", "monotonicity_helper"], [31, 3, 1, "", "singularities"]], "sympy.calculus.util": [[31, 3, 1, "", "continuous_domain"], [31, 3, 1, "", "function_range"], [31, 3, 1, "", "is_convex"], [31, 3, 1, "", "lcim"], [31, 3, 1, "", "maximum"], [31, 3, 1, "", "minimum"], [31, 3, 1, "", "not_empty_in"], [31, 3, 1, "", "periodicity"], [31, 3, 1, "", "stationary_points"]], "sympy.categories": [[32, 1, 1, "", "Category"], [32, 1, 1, "", "CompositeMorphism"], [32, 1, 1, "", "Diagram"], [32, 1, 1, "", "IdentityMorphism"], [32, 1, 1, "", "Morphism"], [32, 1, 1, "", "NamedMorphism"], [32, 1, 1, "", "Object"], [32, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[32, 4, 1, "", "commutative_diagrams"], [32, 4, 1, "", "name"], [32, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[32, 4, 1, "", "codomain"], [32, 4, 1, "", "components"], [32, 4, 1, "", "domain"], [32, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[32, 4, 1, "", "conclusions"], [32, 2, 1, "", "hom"], [32, 2, 1, "", "is_subdiagram"], [32, 4, 1, "", "objects"], [32, 4, 1, "", "premises"], [32, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[32, 4, 1, "", "codomain"], [32, 2, 1, "", "compose"], [32, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[32, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[32, 1, 1, "", "ArrowStringDescription"], [32, 1, 1, "", "DiagramGrid"], [32, 1, 1, "", "XypicDiagramDrawer"], [32, 3, 1, "", "preview_diagram"], [32, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[32, 4, 1, "", "height"], [32, 4, 1, "", "morphisms"], [32, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[32, 2, 1, "", "draw"]], "sympy.codegen": [[33, 0, 0, "-", "algorithms"], [33, 0, 0, "-", "approximations"], [33, 0, 0, "-", "ast"], [33, 0, 0, "-", "cfunctions"], [33, 0, 0, "-", "cnodes"], [33, 0, 0, "-", "cutils"], [33, 0, 0, "-", "cxxnodes"], [33, 0, 0, "-", "fnodes"], [33, 0, 0, "-", "futils"], [33, 0, 0, "-", "matrix_nodes"], [33, 0, 0, "-", "pyutils"], [33, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[33, 3, 1, "", "newtons_method"], [33, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[33, 1, 1, "", "SeriesApprox"], [33, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[33, 1, 1, "", "Assignment"], [33, 1, 1, "", "AssignmentBase"], [33, 1, 1, "", "Attribute"], [33, 1, 1, "", "AugmentedAssignment"], [33, 1, 1, "", "BreakToken"], [33, 1, 1, "", "CodeBlock"], [33, 1, 1, "", "Comment"], [33, 1, 1, "", "ComplexType"], [33, 1, 1, "", "ContinueToken"], [33, 1, 1, "", "Declaration"], [33, 1, 1, "", "Element"], [33, 1, 1, "", "FloatBaseType"], [33, 1, 1, "", "FloatType"], [33, 1, 1, "", "For"], [33, 1, 1, "", "FunctionCall"], [33, 1, 1, "", "FunctionDefinition"], [33, 1, 1, "", "FunctionPrototype"], [33, 1, 1, "", "IntBaseType"], [33, 1, 1, "", "Node"], [33, 1, 1, "", "NoneToken"], [33, 1, 1, "", "Pointer"], [33, 1, 1, "", "Print"], [33, 1, 1, "", "QuotedString"], [33, 1, 1, "", "Return"], [33, 1, 1, "", "Scope"], [33, 1, 1, "", "SignedIntType"], [33, 1, 1, "", "Stream"], [33, 1, 1, "", "String"], [33, 1, 1, "", "Token"], [33, 1, 1, "", "Type"], [33, 1, 1, "", "UnsignedIntType"], [33, 1, 1, "", "Variable"], [33, 1, 1, "", "While"], [33, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[33, 2, 1, "", "cse"], [33, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[33, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[33, 2, 1, "", "cast_nocheck"], [33, 4, 1, "", "decimal_dig"], [33, 4, 1, "", "dig"], [33, 4, 1, "", "eps"], [33, 4, 1, "", "max"], [33, 4, 1, "", "max_exponent"], [33, 4, 1, "", "min_exponent"], [33, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[33, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[33, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[33, 2, 1, "", "cast_check"], [33, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[33, 2, 1, "", "as_Declaration"], [33, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[33, 1, 1, "", "Cbrt"], [33, 1, 1, "", "Sqrt"], [33, 1, 1, "", "exp2"], [33, 1, 1, "", "expm1"], [33, 1, 1, "", "fma"], [33, 1, 1, "", "hypot"], [33, 1, 1, "", "log10"], [33, 1, 1, "", "log1p"], [33, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[33, 1, 1, "", "CommaOperator"], [33, 1, 1, "", "Label"], [33, 1, 1, "", "PostDecrement"], [33, 1, 1, "", "PostIncrement"], [33, 1, 1, "", "PreDecrement"], [33, 1, 1, "", "PreIncrement"], [33, 3, 1, "", "alignof"], [33, 1, 1, "", "goto"], [33, 3, 1, "", "sizeof"], [33, 1, 1, "", "struct"], [33, 1, 1, "", "union"]], "sympy.codegen.cutils": [[33, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[33, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[33, 1, 1, "", "ArrayConstructor"], [33, 1, 1, "", "Do"], [33, 1, 1, "", "Extent"], [33, 1, 1, "", "FortranReturn"], [33, 1, 1, "", "GoTo"], [33, 1, 1, "", "ImpliedDoLoop"], [33, 1, 1, "", "Module"], [33, 1, 1, "", "Program"], [33, 1, 1, "", "Subroutine"], [33, 1, 1, "", "SubroutineCall"], [33, 3, 1, "", "allocated"], [33, 3, 1, "", "array"], [33, 3, 1, "", "bind_C"], [33, 1, 1, "", "cmplx"], [33, 3, 1, "", "dimension"], [33, 1, 1, "", "dsign"], [33, 1, 1, "", "isign"], [33, 1, 1, "", "kind"], [33, 3, 1, "", "lbound"], [33, 1, 1, "", "literal_dp"], [33, 1, 1, "", "literal_sp"], [33, 1, 1, "", "merge"], [33, 3, 1, "", "reshape"], [33, 3, 1, "", "shape"], [33, 3, 1, "", "size"], [33, 1, 1, "", "use"], [33, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[33, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[33, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[33, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[33, 1, 1, "", "FuncMinusOneOptim"], [33, 1, 1, "", "Optimization"], [33, 1, 1, "", "ReplaceOptim"], [33, 3, 1, "", "create_expand_pow_optimization"], [33, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[33, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[43, 0, 0, "-", "generators"], [35, 0, 0, "-", "graycode"], [36, 0, 0, "-", "group_constructs"], [37, 0, 0, "-", "group_numbers"], [39, 0, 0, "-", "named_groups"], [40, 0, 0, "-", "partitions"], [42, 0, 0, "-", "perm_groups"], [43, 0, 0, "-", "permutations"], [44, 0, 0, "-", "polyhedron"], [45, 0, 0, "-", "prufer"], [46, 0, 0, "-", "subsets"], [47, 0, 0, "-", "tensor_can"], [48, 0, 0, "-", "testutil"], [49, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[43, 2, 1, "", "alternating"], [43, 2, 1, "", "cyclic"], [43, 2, 1, "", "dihedral"], [43, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[35, 1, 1, "", "GrayCode"], [35, 2, 1, "", "bin_to_gray"], [35, 2, 1, "", "get_subset_from_bitstring"], [35, 2, 1, "", "gray_to_bin"], [35, 2, 1, "", "graycode_subsets"], [35, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[35, 4, 1, "", "current"], [35, 2, 1, "", "generate_gray"], [35, 4, 1, "", "n"], [35, 2, 1, "", "next"], [35, 4, 1, "", "rank"], [35, 4, 1, "", "selections"], [35, 2, 1, "", "skip"], [35, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[36, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[37, 3, 1, "", "is_abelian_number"], [37, 3, 1, "", "is_cyclic_number"], [37, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[39, 3, 1, "", "AbelianGroup"], [39, 3, 1, "", "AlternatingGroup"], [39, 3, 1, "", "CyclicGroup"], [39, 3, 1, "", "DihedralGroup"], [39, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[40, 1, 1, "", "IntegerPartition"], [40, 1, 1, "", "Partition"], [40, 3, 1, "", "RGS_enum"], [40, 3, 1, "", "RGS_generalized"], [40, 3, 1, "", "RGS_rank"], [40, 3, 1, "", "RGS_unrank"], [40, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[40, 2, 1, "", "as_dict"], [40, 2, 1, "", "as_ferrers"], [40, 4, 1, "", "conjugate"], [40, 2, 1, "", "next_lex"], [40, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[40, 4, 1, "", "RGS"], [40, 2, 1, "", "from_rgs"], [40, 4, 1, "", "partition"], [40, 4, 1, "", "rank"], [40, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[42, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[42, 2, 1, "", "__contains__"], [42, 2, 1, "", "__mul__"], [42, 2, 1, "", "__new__"], [42, 5, 1, "", "__weakref__"], [42, 2, 1, "", "_coset_representative"], [42, 2, 1, "", "_distinct_primes_lemma"], [42, 4, 1, "", "_elements"], [42, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [42, 2, 1, "", "_eval_is_alt_sym_naive"], [42, 2, 1, "", "_p_elements_group"], [42, 2, 1, "", "_random_pr_init"], [42, 2, 1, "", "_sylow_alt_sym"], [42, 2, 1, "", "_union_find_merge"], [42, 2, 1, "", "_union_find_rep"], [42, 2, 1, "", "_verify"], [42, 2, 1, "", "abelian_invariants"], [42, 4, 1, "", "base"], [42, 2, 1, "", "baseswap"], [42, 4, 1, "", "basic_orbits"], [42, 4, 1, "", "basic_stabilizers"], [42, 4, 1, "", "basic_transversals"], [42, 2, 1, "", "center"], [42, 2, 1, "", "centralizer"], [42, 2, 1, "", "commutator"], [42, 2, 1, "", "composition_series"], [42, 2, 1, "", "conjugacy_class"], [42, 2, 1, "", "conjugacy_classes"], [42, 2, 1, "", "contains"], [42, 2, 1, "", "coset_factor"], [42, 2, 1, "", "coset_rank"], [42, 2, 1, "", "coset_table"], [42, 2, 1, "", "coset_transversal"], [42, 2, 1, "", "coset_unrank"], [42, 4, 1, "", "degree"], [42, 2, 1, "", "derived_series"], [42, 2, 1, "", "derived_subgroup"], [42, 4, 1, "", "elements"], [42, 2, 1, "", "equals"], [42, 2, 1, "", "generate"], [42, 2, 1, "", "generate_dimino"], [42, 2, 1, "", "generate_schreier_sims"], [42, 2, 1, "", "generator_product"], [42, 4, 1, "", "generators"], [42, 4, 1, "", "identity"], [42, 2, 1, "", "index"], [42, 4, 1, "", "is_abelian"], [42, 2, 1, "", "is_alt_sym"], [42, 4, 1, "", "is_alternating"], [42, 4, 1, "", "is_cyclic"], [42, 2, 1, "", "is_elementary"], [42, 4, 1, "", "is_nilpotent"], [42, 2, 1, "", "is_normal"], [42, 4, 1, "", "is_perfect"], [42, 4, 1, "", "is_polycyclic"], [42, 2, 1, "", "is_primitive"], [42, 4, 1, "", "is_solvable"], [42, 2, 1, "", "is_subgroup"], [42, 4, 1, "", "is_symmetric"], [42, 2, 1, "", "is_transitive"], [42, 4, 1, "", "is_trivial"], [42, 2, 1, "", "lower_central_series"], [42, 2, 1, "", "make_perm"], [42, 4, 1, "", "max_div"], [42, 2, 1, "", "minimal_block"], [42, 2, 1, "", "minimal_blocks"], [42, 2, 1, "", "normal_closure"], [42, 2, 1, "", "orbit"], [42, 2, 1, "", "orbit_rep"], [42, 2, 1, "", "orbit_transversal"], [42, 2, 1, "", "orbits"], [42, 2, 1, "", "order"], [42, 2, 1, "", "pointwise_stabilizer"], [42, 2, 1, "", "polycyclic_group"], [42, 2, 1, "", "presentation"], [42, 2, 1, "", "random"], [42, 2, 1, "", "random_pr"], [42, 2, 1, "", "random_stab"], [42, 2, 1, "", "schreier_sims"], [42, 2, 1, "", "schreier_sims_incremental"], [42, 2, 1, "", "schreier_sims_random"], [42, 2, 1, "", "schreier_vector"], [42, 2, 1, "", "stabilizer"], [42, 4, 1, "", "strong_gens"], [42, 2, 1, "", "strong_presentation"], [42, 2, 1, "", "subgroup"], [42, 2, 1, "", "subgroup_search"], [42, 2, 1, "", "sylow_subgroup"], [42, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[43, 1, 1, "", "Cycle"], [43, 1, 1, "", "Permutation"], [43, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[43, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[43, 2, 1, "", "apply"], [43, 4, 1, "", "array_form"], [43, 2, 1, "", "ascents"], [43, 2, 1, "", "atoms"], [43, 4, 1, "", "cardinality"], [43, 2, 1, "", "commutator"], [43, 2, 1, "", "commutes_with"], [43, 4, 1, "", "cycle_structure"], [43, 4, 1, "", "cycles"], [43, 4, 1, "", "cyclic_form"], [43, 2, 1, "", "descents"], [43, 2, 1, "", "from_inversion_vector"], [43, 2, 1, "", "from_sequence"], [43, 4, 1, "", "full_cyclic_form"], [43, 2, 1, "", "get_adjacency_distance"], [43, 2, 1, "", "get_adjacency_matrix"], [43, 2, 1, "", "get_positional_distance"], [43, 2, 1, "", "get_precedence_distance"], [43, 2, 1, "", "get_precedence_matrix"], [43, 2, 1, "", "index"], [43, 2, 1, "", "inversion_vector"], [43, 2, 1, "", "inversions"], [43, 4, 1, "", "is_Empty"], [43, 4, 1, "", "is_Identity"], [43, 4, 1, "", "is_Singleton"], [43, 4, 1, "", "is_even"], [43, 4, 1, "", "is_odd"], [43, 2, 1, "", "josephus"], [43, 2, 1, "", "length"], [43, 2, 1, "", "list"], [43, 2, 1, "", "max"], [43, 2, 1, "", "min"], [43, 2, 1, "", "mul_inv"], [43, 2, 1, "", "next_lex"], [43, 2, 1, "", "next_nonlex"], [43, 2, 1, "", "next_trotterjohnson"], [43, 2, 1, "", "order"], [43, 2, 1, "", "parity"], [43, 2, 1, "", "random"], [43, 2, 1, "", "rank"], [43, 2, 1, "", "rank_nonlex"], [43, 2, 1, "", "rank_trotterjohnson"], [43, 2, 1, "", "resize"], [43, 2, 1, "", "rmul"], [43, 2, 1, "", "rmul_with_af"], [43, 2, 1, "", "runs"], [43, 2, 1, "", "signature"], [43, 4, 1, "", "size"], [43, 2, 1, "", "support"], [43, 2, 1, "", "transpositions"], [43, 2, 1, "", "unrank_lex"], [43, 2, 1, "", "unrank_nonlex"], [43, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[44, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[44, 4, 1, "", "array_form"], [44, 4, 1, "", "corners"], [44, 4, 1, "", "cyclic_form"], [44, 4, 1, "", "edges"], [44, 4, 1, "", "faces"], [44, 4, 1, "", "pgroup"], [44, 2, 1, "", "reset"], [44, 2, 1, "", "rotate"], [44, 4, 1, "", "size"], [44, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[45, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[45, 2, 1, "", "edges"], [45, 2, 1, "", "next"], [45, 4, 1, "", "nodes"], [45, 2, 1, "", "prev"], [45, 2, 1, "", "prufer_rank"], [45, 4, 1, "", "prufer_repr"], [45, 4, 1, "", "rank"], [45, 4, 1, "", "size"], [45, 2, 1, "", "to_prufer"], [45, 2, 1, "", "to_tree"], [45, 4, 1, "", "tree_repr"], [45, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[46, 1, 1, "", "Subset"], [46, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[46, 2, 1, "", "bitlist_from_subset"], [46, 4, 1, "", "cardinality"], [46, 2, 1, "", "iterate_binary"], [46, 2, 1, "", "iterate_graycode"], [46, 2, 1, "", "next_binary"], [46, 2, 1, "", "next_gray"], [46, 2, 1, "", "next_lexicographic"], [46, 2, 1, "", "prev_binary"], [46, 2, 1, "", "prev_gray"], [46, 2, 1, "", "prev_lexicographic"], [46, 4, 1, "", "rank_binary"], [46, 4, 1, "", "rank_gray"], [46, 4, 1, "", "rank_lexicographic"], [46, 4, 1, "", "size"], [46, 4, 1, "", "subset"], [46, 2, 1, "", "subset_from_bitlist"], [46, 2, 1, "", "subset_indices"], [46, 4, 1, "", "superset"], [46, 4, 1, "", "superset_size"], [46, 2, 1, "", "unrank_binary"], [46, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[47, 3, 1, "", "bsgs_direct_product"], [47, 3, 1, "", "canonicalize"], [47, 3, 1, "", "double_coset_can_rep"], [47, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[48, 3, 1, "", "_cmp_perm_lists"], [48, 3, 1, "", "_naive_list_centralizer"], [48, 3, 1, "", "_verify_bsgs"], [48, 3, 1, "", "_verify_centralizer"], [48, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[49, 3, 1, "", "_base_ordering"], [49, 3, 1, "", "_check_cycles_alt_sym"], [49, 3, 1, "", "_distribute_gens_by_base"], [49, 3, 1, "", "_handle_precomputed_bsgs"], [49, 3, 1, "", "_orbits_transversals_from_bsgs"], [49, 3, 1, "", "_remove_gens"], [49, 3, 1, "", "_strip"], [49, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[50, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[50, 2, 1, "", "change_index"], [50, 4, 1, "", "has_empty_sequence"], [50, 2, 1, "", "index"], [50, 2, 1, "", "reorder"], [50, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[78, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[78, 4, 1, "", "bound_symbols"], [78, 4, 1, "", "free_symbols"], [78, 4, 1, "", "function"], [78, 4, 1, "", "has_finite_limits"], [78, 4, 1, "", "has_reversed_limits"], [78, 4, 1, "", "is_number"], [78, 4, 1, "", "limits"], [78, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[50, 3, 1, "", "gosper_normal"], [50, 3, 1, "", "gosper_sum"], [50, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[50, 1, 1, "", "Product"], [50, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[50, 2, 1, "", "is_convergent"], [50, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[50, 1, 1, "", "Sum"], [50, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[50, 2, 1, "", "euler_maclaurin"], [50, 2, 1, "", "eval_zeta_function"], [50, 2, 1, "", "is_absolutely_convergent"], [50, 2, 1, "", "is_convergent"], [50, 2, 1, "", "reverse_order"]], "sympy.core": [[51, 0, 0, "-", "add"], [51, 0, 0, "-", "assumptions"], [51, 0, 0, "-", "basic"], [51, 0, 0, "-", "cache"], [51, 0, 0, "-", "containers"], [51, 0, 0, "-", "core"], [51, 0, 0, "-", "evalf"], [51, 0, 0, "-", "expr"], [51, 0, 0, "-", "exprtools"], [51, 0, 0, "-", "function"], [51, 0, 0, "-", "kind"], [51, 0, 0, "-", "mod"], [51, 0, 0, "-", "mul"], [51, 0, 0, "-", "multidimensional"], [51, 0, 0, "-", "numbers"], [51, 0, 0, "-", "power"], [51, 0, 0, "-", "random"], [51, 0, 0, "-", "relational"], [51, 0, 0, "-", "singleton"], [51, 0, 0, "-", "symbol"], [51, 0, 0, "-", "sympify"], [51, 0, 0, "-", "traversal"]], "sympy.core.add": [[51, 1, 1, "", "Add"]], "sympy.core.add.Add": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_add"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_numer_denom"], [51, 2, 1, "", "as_real_imag"], [51, 2, 1, "", "as_two_terms"], [51, 2, 1, "", "class_key"], [51, 2, 1, "", "extract_leading_order"], [51, 2, 1, "", "flatten"], [51, 2, 1, "", "primitive"]], "sympy.core.basic": [[51, 1, 1, "", "Atom"], [51, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[51, 4, 1, "", "args"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_dummy"], [51, 4, 1, "", "assumptions0"], [51, 2, 1, "", "atoms"], [51, 4, 1, "", "canonical_variables"], [51, 2, 1, "", "class_key"], [51, 2, 1, "", "compare"], [51, 2, 1, "", "count"], [51, 2, 1, "", "count_ops"], [51, 2, 1, "", "doit"], [51, 2, 1, "", "dummy_eq"], [51, 2, 1, "", "find"], [51, 4, 1, "", "free_symbols"], [51, 2, 1, "", "fromiter"], [51, 4, 1, "", "func"], [51, 2, 1, "", "has"], [51, 2, 1, "", "has_free"], [51, 4, 1, "", "is_comparable"], [51, 2, 1, "", "match"], [51, 2, 1, "", "matches"], [51, 2, 1, "", "rcall"], [51, 2, 1, "", "refine"], [51, 2, 1, "", "replace"], [51, 2, 1, "", "rewrite"], [51, 2, 1, "", "simplify"], [51, 2, 1, "", "sort_key"], [51, 2, 1, "", "subs"], [51, 2, 1, "", "xreplace"]], "sympy.core.cache": [[51, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[51, 1, 1, "", "Dict"], [51, 1, 1, "", "Tuple"], [51, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[51, 2, 1, "", "get"], [51, 2, 1, "", "items"], [51, 2, 1, "", "keys"], [51, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[51, 2, 1, "", "index"], [51, 4, 1, "", "kind"], [51, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[51, 1, 1, "", "EvalfMixin"], [51, 3, 1, "", "N"], [51, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[51, 2, 1, "", "evalf"], [51, 2, 1, "", "n"]], "sympy.core.expr": [[51, 1, 1, "", "AtomicExpr"], [51, 1, 1, "", "Expr"], [51, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[51, 2, 1, "", "apart"], [51, 2, 1, "", "args_cnc"], [51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_coeff_add"], [51, 2, 1, "", "as_coeff_exponent"], [51, 2, 1, "", "as_coeff_mul"], [51, 2, 1, "", "as_coefficient"], [51, 2, 1, "", "as_coefficients_dict"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_expr"], [51, 2, 1, "", "as_independent"], [51, 2, 1, "", "as_leading_term"], [51, 2, 1, "", "as_numer_denom"], [51, 2, 1, "", "as_ordered_factors"], [51, 2, 1, "", "as_ordered_terms"], [51, 2, 1, "", "as_poly"], [51, 2, 1, "", "as_powers_dict"], [51, 2, 1, "", "as_real_imag"], [51, 2, 1, "", "as_terms"], [51, 2, 1, "", "aseries"], [51, 2, 1, "", "cancel"], [51, 2, 1, "", "coeff"], [51, 2, 1, "", "collect"], [51, 2, 1, "", "combsimp"], [51, 2, 1, "", "compute_leading_term"], [51, 2, 1, "", "conjugate"], [51, 2, 1, "", "could_extract_minus_sign"], [51, 2, 1, "", "count_ops"], [51, 2, 1, "", "equals"], [51, 2, 1, "", "expand"], [51, 4, 1, "", "expr_free_symbols"], [51, 2, 1, "", "extract_additively"], [51, 2, 1, "", "extract_branch_factor"], [51, 2, 1, "", "extract_multiplicatively"], [51, 2, 1, "", "factor"], [51, 2, 1, "", "fourier_series"], [51, 2, 1, "", "fps"], [51, 2, 1, "", "gammasimp"], [51, 2, 1, "", "getO"], [51, 2, 1, "", "getn"], [51, 2, 1, "", "integrate"], [51, 2, 1, "", "invert"], [51, 2, 1, "", "is_algebraic_expr"], [51, 2, 1, "", "is_constant"], [51, 2, 1, "", "is_meromorphic"], [51, 4, 1, "", "is_number"], [51, 2, 1, "", "is_polynomial"], [51, 2, 1, "", "is_rational_function"], [51, 2, 1, "", "leadterm"], [51, 2, 1, "", "limit"], [51, 2, 1, "", "lseries"], [51, 2, 1, "", "normal"], [51, 2, 1, "", "nseries"], [51, 2, 1, "", "nsimplify"], [51, 2, 1, "", "powsimp"], [51, 2, 1, "", "primitive"], [51, 2, 1, "", "radsimp"], [51, 2, 1, "", "ratsimp"], [51, 2, 1, "", "removeO"], [51, 2, 1, "", "round"], [51, 2, 1, "", "separate"], [51, 2, 1, "", "series"], [51, 2, 1, "", "taylor_term"], [51, 2, 1, "", "together"], [51, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[51, 3, 1, "", "factor_terms"], [51, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[51, 1, 1, "", "Derivative"], [51, 1, 1, "", "Function"], [51, 1, 1, "", "FunctionClass"], [51, 1, 1, "", "Lambda"], [51, 1, 1, "", "PoleError"], [51, 1, 1, "", "Subs"], [51, 1, 1, "", "WildFunction"], [51, 3, 1, "", "count_ops"], [51, 3, 1, "", "diff"], [51, 3, 1, "", "expand"], [51, 3, 1, "", "expand_complex"], [51, 3, 1, "", "expand_func"], [51, 3, 1, "", "expand_log"], [51, 3, 1, "", "expand_mul"], [51, 3, 1, "", "expand_multinomial"], [51, 3, 1, "", "expand_power_base"], [51, 3, 1, "", "expand_power_exp"], [51, 3, 1, "", "expand_trig"], [51, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[51, 4, 1, "", "_diff_wrt"], [51, 2, 1, "", "_sort_variable_count"], [51, 2, 1, "", "as_finite_difference"], [51, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[51, 2, 1, "", "as_base_exp"], [51, 2, 1, "", "fdiff"], [51, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[51, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[51, 4, 1, "", "bound_symbols"], [51, 4, 1, "", "expr"], [51, 4, 1, "", "is_identity"], [51, 4, 1, "", "signature"], [51, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[51, 4, 1, "", "bound_symbols"], [51, 4, 1, "", "expr"], [51, 4, 1, "", "point"], [51, 4, 1, "", "variables"]], "sympy.core.kind": [[51, 5, 1, "", "BooleanKind"], [51, 1, 1, "", "Kind"], [51, 5, 1, "", "NumberKind"], [51, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[51, 1, 1, "", "Mod"]], "sympy.core.mul": [[51, 1, 1, "", "Mul"], [51, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_ordered_factors"], [51, 2, 1, "", "as_two_terms"], [51, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[51, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[51, 1, 1, "", "AlgebraicNumber"], [51, 1, 1, "", "Catalan"], [51, 1, 1, "", "ComplexInfinity"], [51, 1, 1, "", "EulerGamma"], [51, 1, 1, "", "Exp1"], [51, 1, 1, "", "Float"], [51, 1, 1, "", "GoldenRatio"], [51, 1, 1, "", "Half"], [51, 1, 1, "", "ImaginaryUnit"], [51, 1, 1, "", "Infinity"], [51, 1, 1, "", "Integer"], [51, 1, 1, "", "NaN"], [51, 1, 1, "", "NegativeInfinity"], [51, 1, 1, "", "NegativeOne"], [51, 1, 1, "", "Number"], [51, 1, 1, "", "NumberSymbol"], [51, 1, 1, "", "One"], [51, 1, 1, "", "Pi"], [51, 1, 1, "", "Rational"], [51, 5, 1, "", "RealNumber"], [51, 1, 1, "", "TribonacciConstant"], [51, 1, 1, "", "Zero"], [51, 3, 1, "", "igcd"], [51, 3, 1, "", "ilcm"], [51, 3, 1, "", "mod_inverse"], [51, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[51, 2, 1, "", "__new__"], [51, 2, 1, "", "as_expr"], [51, 2, 1, "", "as_poly"], [51, 2, 1, "", "coeffs"], [51, 2, 1, "", "field_element"], [51, 4, 1, "", "is_aliased"], [51, 4, 1, "", "is_primitive_element"], [51, 2, 1, "", "minpoly_of_element"], [51, 2, 1, "", "native_coeffs"], [51, 2, 1, "", "primitive_element"], [51, 2, 1, "", "to_algebraic_integer"], [51, 2, 1, "", "to_primitive_element"], [51, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "cofactors"], [51, 2, 1, "", "gcd"], [51, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[51, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "factors"], [51, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[51, 1, 1, "", "Pow"], [51, 3, 1, "", "integer_log"], [51, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[51, 2, 1, "", "as_base_exp"], [51, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[51, 3, 1, "", "_randint"], [51, 3, 1, "", "_randrange"], [51, 3, 1, "", "random_complex_number"], [51, 3, 1, "", "test_derivative_numerically"], [51, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[51, 5, 1, "", "Eq"], [51, 1, 1, "", "Equality"], [51, 5, 1, "", "Ge"], [51, 1, 1, "", "GreaterThan"], [51, 5, 1, "", "Gt"], [51, 5, 1, "", "Le"], [51, 1, 1, "", "LessThan"], [51, 5, 1, "", "Lt"], [51, 5, 1, "", "Ne"], [51, 5, 1, "", "Rel"], [51, 1, 1, "", "Relational"], [51, 1, 1, "", "StrictGreaterThan"], [51, 1, 1, "", "StrictLessThan"], [51, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[51, 2, 1, "", "as_poly"], [51, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[51, 4, 1, "", "canonical"], [51, 2, 1, "", "equals"], [51, 4, 1, "", "lhs"], [51, 4, 1, "", "negated"], [51, 4, 1, "", "reversed"], [51, 4, 1, "", "reversedsign"], [51, 4, 1, "", "rhs"], [51, 4, 1, "", "strict"], [51, 4, 1, "", "weak"]], "sympy.core.singleton": [[51, 1, 1, "", "Singleton"], [51, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[51, 3, 1, "", "default_sort_key"], [51, 3, 1, "", "ordered"]], "sympy.core.symbol": [[51, 1, 1, "", "Dummy"], [51, 1, 1, "", "Symbol"], [51, 1, 1, "", "Wild"], [51, 3, 1, "", "symbols"], [51, 3, 1, "", "var"]], "sympy.core.sympify": [[51, 3, 1, "", "sympify"]], "sympy.core.traversal": [[51, 3, 1, "", "bottom_up"], [51, 3, 1, "", "postorder_traversal"], [51, 3, 1, "", "preorder_traversal"], [51, 3, 1, "", "use"], [51, 3, 1, "", "walk"]], "sympy.crypto": [[52, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[52, 3, 1, "", "AZ"], [52, 3, 1, "", "bifid5_square"], [52, 3, 1, "", "bifid6_square"], [52, 3, 1, "", "check_and_join"], [52, 3, 1, "", "cycle_list"], [52, 3, 1, "", "decipher_affine"], [52, 3, 1, "", "decipher_atbash"], [52, 3, 1, "", "decipher_bifid"], [52, 3, 1, "", "decipher_bifid5"], [52, 3, 1, "", "decipher_bifid6"], [52, 3, 1, "", "decipher_elgamal"], [52, 3, 1, "", "decipher_gm"], [52, 3, 1, "", "decipher_hill"], [52, 3, 1, "", "decipher_kid_rsa"], [52, 3, 1, "", "decipher_railfence"], [52, 3, 1, "", "decipher_rot13"], [52, 3, 1, "", "decipher_rsa"], [52, 3, 1, "", "decipher_shift"], [52, 3, 1, "", "decipher_vigenere"], [52, 3, 1, "", "decode_morse"], [52, 3, 1, "", "dh_private_key"], [52, 3, 1, "", "dh_public_key"], [52, 3, 1, "", "dh_shared_key"], [52, 3, 1, "", "elgamal_private_key"], [52, 3, 1, "", "elgamal_public_key"], [52, 3, 1, "", "encipher_affine"], [52, 3, 1, "", "encipher_atbash"], [52, 3, 1, "", "encipher_bifid"], [52, 3, 1, "", "encipher_bifid5"], [52, 3, 1, "", "encipher_bifid6"], [52, 3, 1, "", "encipher_elgamal"], [52, 3, 1, "", "encipher_gm"], [52, 3, 1, "", "encipher_hill"], [52, 3, 1, "", "encipher_kid_rsa"], [52, 3, 1, "", "encipher_railfence"], [52, 3, 1, "", "encipher_rot13"], [52, 3, 1, "", "encipher_rsa"], [52, 3, 1, "", "encipher_shift"], [52, 3, 1, "", "encipher_substitution"], [52, 3, 1, "", "encipher_vigenere"], [52, 3, 1, "", "encode_morse"], [52, 3, 1, "", "gm_private_key"], [52, 3, 1, "", "gm_public_key"], [52, 3, 1, "", "kid_rsa_private_key"], [52, 3, 1, "", "kid_rsa_public_key"], [52, 3, 1, "", "lfsr_autocorrelation"], [52, 3, 1, "", "lfsr_connection_polynomial"], [52, 3, 1, "", "lfsr_sequence"], [52, 3, 1, "", "padded_key"], [52, 3, 1, "", "rsa_private_key"], [52, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[53, 1, 1, "", "BaseCovarDerivativeOp"], [53, 1, 1, "", "BaseScalarField"], [53, 1, 1, "", "BaseVectorField"], [53, 1, 1, "", "Commutator"], [53, 1, 1, "", "CoordSystem"], [53, 1, 1, "", "CoordinateSymbol"], [53, 1, 1, "", "CovarDerivativeOp"], [53, 1, 1, "", "Differential"], [53, 1, 1, "", "LieDerivative"], [53, 1, 1, "", "Manifold"], [53, 1, 1, "", "Patch"], [53, 1, 1, "", "Point"], [53, 1, 1, "", "TensorProduct"], [53, 1, 1, "", "WedgeProduct"], [53, 3, 1, "", "intcurve_diffequ"], [53, 3, 1, "", "intcurve_series"], [53, 3, 1, "", "metric_to_Christoffel_1st"], [53, 3, 1, "", "metric_to_Christoffel_2nd"], [53, 3, 1, "", "metric_to_Ricci_components"], [53, 3, 1, "", "metric_to_Riemann_components"], [53, 3, 1, "", "twoform_to_matrix"], [53, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[53, 2, 1, "", "base_oneform"], [53, 2, 1, "", "base_oneforms"], [53, 2, 1, "", "base_scalar"], [53, 2, 1, "", "base_scalars"], [53, 2, 1, "", "base_vector"], [53, 2, 1, "", "base_vectors"], [53, 2, 1, "", "coord_function"], [53, 2, 1, "", "coord_functions"], [53, 2, 1, "", "coord_tuple_transform_to"], [53, 2, 1, "", "jacobian"], [53, 2, 1, "", "jacobian_determinant"], [53, 2, 1, "", "jacobian_matrix"], [53, 2, 1, "", "point"], [53, 2, 1, "", "point_to_coords"], [53, 2, 1, "", "transform"], [53, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[53, 2, 1, "", "coords"]], "sympy.discrete": [[54, 0, 0, "-", "convolutions"], [54, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[54, 3, 1, "", "convolution"], [54, 3, 1, "", "convolution_fft"], [54, 3, 1, "", "convolution_fwht"], [54, 3, 1, "", "convolution_ntt"], [54, 3, 1, "", "convolution_subset"], [54, 3, 1, "", "covering_product"], [54, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[54, 3, 1, "", "fft"], [54, 3, 1, "", "fwht"], [54, 3, 1, "", "ifft"], [54, 3, 1, "", "ifwht"], [54, 3, 1, "", "intt"], [54, 3, 1, "", "inverse_mobius_transform"], [54, 3, 1, "", "mobius_transform"], [54, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[189, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[56, 1, 1, "", "FallingFactorial"], [56, 1, 1, "", "MultiFactorial"], [56, 1, 1, "", "RisingFactorial"], [56, 1, 1, "", "binomial"], [56, 1, 1, "", "factorial"], [56, 1, 1, "", "factorial2"], [56, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[56, 1, 1, "", "bell"], [56, 1, 1, "", "bernoulli"], [56, 1, 1, "", "catalan"], [56, 1, 1, "", "euler"], [56, 1, 1, "", "fibonacci"], [56, 1, 1, "", "genocchi"], [56, 1, 1, "", "harmonic"], [56, 1, 1, "", "lucas"], [56, 3, 1, "", "nC"], [56, 3, 1, "", "nP"], [56, 3, 1, "", "nT"], [56, 1, 1, "", "partition"], [56, 3, 1, "", "stirling"], [56, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[57, 1, 1, "", "Abs"], [57, 1, 1, "", "arg"], [57, 1, 1, "", "conjugate"], [57, 1, 1, "", "im"], [57, 1, 1, "", "periodic_argument"], [57, 1, 1, "", "polar_lift"], [57, 1, 1, "", "principal_branch"], [57, 1, 1, "", "re"], [57, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[57, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[57, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[57, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[57, 1, 1, "", "LambertW"], [57, 1, 1, "", "exp"], [57, 1, 1, "", "exp_polar"], [57, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[57, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[57, 2, 1, "", "as_real_imag"], [57, 4, 1, "", "base"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[57, 2, 1, "", "as_base_exp"], [57, 2, 1, "", "as_real_imag"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "inverse"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[57, 1, 1, "", "HyperbolicFunction"], [57, 1, 1, "", "acosh"], [57, 1, 1, "", "acoth"], [57, 1, 1, "", "acsch"], [57, 1, 1, "", "asech"], [57, 1, 1, "", "asinh"], [57, 1, 1, "", "atanh"], [57, 1, 1, "", "cosh"], [57, 1, 1, "", "coth"], [57, 1, 1, "", "csch"], [57, 1, 1, "", "sech"], [57, 1, 1, "", "sinh"], [57, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[57, 2, 1, "", "fdiff"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[57, 2, 1, "", "as_real_imag"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "inverse"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[57, 1, 1, "", "RoundFunction"], [57, 1, 1, "", "ceiling"], [57, 1, 1, "", "floor"], [57, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[57, 1, 1, "", "IdentityFunction"], [57, 1, 1, "", "Max"], [57, 1, 1, "", "Min"], [57, 3, 1, "", "cbrt"], [57, 3, 1, "", "real_root"], [57, 3, 1, "", "root"], [57, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[57, 1, 1, "", "ExprCondPair"], [57, 1, 1, "", "Piecewise"], [57, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[57, 4, 1, "", "cond"], [57, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[57, 2, 1, "", "_eval_integral"], [57, 2, 1, "", "as_expr_set_pairs"], [57, 2, 1, "", "doit"], [57, 2, 1, "", "eval"], [57, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[57, 1, 1, "", "acos"], [57, 1, 1, "", "acot"], [57, 1, 1, "", "acsc"], [57, 1, 1, "", "asec"], [57, 1, 1, "", "asin"], [57, 1, 1, "", "atan"], [57, 1, 1, "", "atan2"], [57, 1, 1, "", "cos"], [57, 1, 1, "", "cot"], [57, 1, 1, "", "csc"], [57, 1, 1, "", "sec"], [57, 1, 1, "", "sin"], [57, 1, 1, "", "sinc"], [57, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[57, 2, 1, "", "inverse"]], "sympy.functions.special": [[59, 0, 0, "-", "bessel"], [59, 0, 0, "-", "beta_functions"], [59, 0, 0, "-", "elliptic_integrals"], [59, 0, 0, "-", "error_functions"], [59, 0, 0, "-", "gamma_functions"], [59, 0, 0, "-", "mathieu_functions"], [59, 0, 0, "-", "polynomials"], [59, 0, 0, "-", "singularity_functions"], [59, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[59, 1, 1, "", "AiryBase"], [59, 1, 1, "", "BesselBase"], [59, 1, 1, "", "airyai"], [59, 1, 1, "", "airyaiprime"], [59, 1, 1, "", "airybi"], [59, 1, 1, "", "airybiprime"], [59, 1, 1, "", "besseli"], [59, 1, 1, "", "besselj"], [59, 1, 1, "", "besselk"], [59, 1, 1, "", "bessely"], [59, 1, 1, "", "hankel1"], [59, 1, 1, "", "hankel2"], [59, 1, 1, "", "jn"], [59, 3, 1, "", "jn_zeros"], [59, 1, 1, "", "marcumq"], [59, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[59, 4, 1, "", "argument"], [59, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[59, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[59, 3, 1, "", "bspline_basis"], [59, 3, 1, "", "bspline_basis_set"], [59, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[59, 1, 1, "", "DiracDelta"], [59, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"], [59, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"], [59, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[59, 1, 1, "", "elliptic_e"], [59, 1, 1, "", "elliptic_f"], [59, 1, 1, "", "elliptic_k"], [59, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[59, 1, 1, "", "Chi"], [59, 1, 1, "", "Ci"], [59, 3, 1, "", "E1"], [59, 1, 1, "", "Ei"], [59, 1, 1, "", "FresnelIntegral"], [59, 1, 1, "", "Li"], [59, 1, 1, "", "Shi"], [59, 1, 1, "", "Si"], [59, 1, 1, "", "erf"], [59, 1, 1, "", "erf2"], [59, 1, 1, "", "erf2inv"], [59, 1, 1, "", "erfc"], [59, 1, 1, "", "erfcinv"], [59, 1, 1, "", "erfi"], [59, 1, 1, "", "erfinv"], [59, 1, 1, "", "expint"], [59, 1, 1, "", "fresnelc"], [59, 1, 1, "", "fresnels"], [59, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[59, 1, 1, "", "digamma"], [59, 1, 1, "", "gamma"], [59, 1, 1, "", "loggamma"], [59, 1, 1, "", "lowergamma"], [59, 1, 1, "", "multigamma"], [59, 1, 1, "", "polygamma"], [59, 1, 1, "", "trigamma"], [59, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[59, 1, 1, "", "appellf1"], [59, 1, 1, "", "hyper"], [59, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[59, 4, 1, "", "ap"], [59, 4, 1, "", "argument"], [59, 4, 1, "", "bq"], [59, 4, 1, "", "convergence_statement"], [59, 4, 1, "", "eta"], [59, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[59, 4, 1, "", "an"], [59, 4, 1, "", "aother"], [59, 4, 1, "", "ap"], [59, 4, 1, "", "argument"], [59, 4, 1, "", "bm"], [59, 4, 1, "", "bother"], [59, 4, 1, "", "bq"], [59, 4, 1, "", "delta"], [59, 2, 1, "", "get_period"], [59, 2, 1, "", "integrand"], [59, 4, 1, "", "is_number"], [59, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[59, 1, 1, "", "MathieuBase"], [59, 1, 1, "", "mathieuc"], [59, 1, 1, "", "mathieucprime"], [59, 1, 1, "", "mathieus"], [59, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[59, 1, 1, "", "assoc_laguerre"], [59, 1, 1, "", "assoc_legendre"], [59, 1, 1, "", "chebyshevt"], [59, 1, 1, "", "chebyshevt_root"], [59, 1, 1, "", "chebyshevu"], [59, 1, 1, "", "chebyshevu_root"], [59, 1, 1, "", "gegenbauer"], [59, 1, 1, "", "hermite"], [59, 1, 1, "", "jacobi"], [59, 3, 1, "", "jacobi_normalized"], [59, 1, 1, "", "laguerre"], [59, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[59, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[59, 1, 1, "", "Ynm"], [59, 3, 1, "", "Ynm_c"], [59, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[59, 3, 1, "", "Eijk"], [59, 1, 1, "", "KroneckerDelta"], [59, 1, 1, "", "LeviCivita"], [59, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[59, 2, 1, "", "eval"], [59, 4, 1, "", "indices_contain_equal_information"], [59, 4, 1, "", "is_above_fermi"], [59, 4, 1, "", "is_below_fermi"], [59, 4, 1, "", "is_only_above_fermi"], [59, 4, 1, "", "is_only_below_fermi"], [59, 4, 1, "", "killable_index"], [59, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[59, 1, 1, "", "dirichlet_eta"], [59, 1, 1, "", "lerchphi"], [59, 1, 1, "", "polylog"], [59, 1, 1, "", "stieltjes"], [59, 1, 1, "", "zeta"]], "sympy.geometry": [[60, 0, 0, "-", "curve"], [61, 0, 0, "-", "ellipse"], [62, 0, 0, "-", "entity"], [64, 0, 0, "-", "line"], [65, 0, 0, "-", "plane"], [66, 0, 0, "-", "point"], [67, 0, 0, "-", "polygon"], [68, 0, 0, "-", "util"]], "sympy.geometry.curve": [[60, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[60, 4, 1, "", "ambient_dimension"], [60, 2, 1, "", "arbitrary_point"], [60, 4, 1, "", "free_symbols"], [60, 4, 1, "", "functions"], [60, 4, 1, "", "length"], [60, 4, 1, "", "limits"], [60, 4, 1, "", "parameter"], [60, 2, 1, "", "plot_interval"], [60, 2, 1, "", "rotate"], [60, 2, 1, "", "scale"], [60, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[61, 1, 1, "", "Circle"], [61, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[61, 4, 1, "", "circumference"], [61, 2, 1, "", "equation"], [61, 2, 1, "", "intersection"], [61, 4, 1, "", "radius"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "scale"], [61, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[61, 4, 1, "", "apoapsis"], [61, 2, 1, "", "arbitrary_point"], [61, 4, 1, "", "area"], [61, 2, 1, "", "auxiliary_circle"], [61, 4, 1, "", "bounds"], [61, 4, 1, "", "center"], [61, 4, 1, "", "circumference"], [61, 2, 1, "", "director_circle"], [61, 4, 1, "", "eccentricity"], [61, 2, 1, "", "encloses_point"], [61, 2, 1, "", "equation"], [61, 2, 1, "", "evolute"], [61, 4, 1, "", "foci"], [61, 4, 1, "", "focus_distance"], [61, 4, 1, "", "hradius"], [61, 2, 1, "", "intersection"], [61, 2, 1, "", "is_tangent"], [61, 4, 1, "", "major"], [61, 4, 1, "", "minor"], [61, 2, 1, "", "normal_lines"], [61, 4, 1, "", "periapsis"], [61, 2, 1, "", "plot_interval"], [61, 2, 1, "", "polar_second_moment_of_area"], [61, 2, 1, "", "random_point"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "rotate"], [61, 2, 1, "", "scale"], [61, 2, 1, "", "second_moment_of_area"], [61, 2, 1, "", "section_modulus"], [61, 4, 1, "", "semilatus_rectum"], [61, 2, 1, "", "tangent_lines"], [61, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[62, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[62, 4, 1, "", "ambient_dimension"], [62, 4, 1, "", "bounds"], [62, 2, 1, "", "encloses"], [62, 2, 1, "", "intersection"], [62, 2, 1, "", "is_similar"], [62, 2, 1, "", "parameter_value"], [62, 2, 1, "", "reflect"], [62, 2, 1, "", "rotate"], [62, 2, 1, "", "scale"], [62, 2, 1, "", "translate"]], "sympy.geometry.line": [[64, 1, 1, "", "Line"], [64, 1, 1, "", "Line2D"], [64, 1, 1, "", "Line3D"], [64, 1, 1, "", "LinearEntity"], [64, 1, 1, "", "LinearEntity2D"], [64, 1, 1, "", "LinearEntity3D"], [64, 1, 1, "", "Ray"], [64, 1, 1, "", "Ray2D"], [64, 1, 1, "", "Ray3D"], [64, 1, 1, "", "Segment"], [64, 1, 1, "", "Segment2D"], [64, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[64, 4, 1, "", "coefficients"], [64, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[64, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[64, 4, 1, "", "ambient_dimension"], [64, 2, 1, "", "angle_between"], [64, 2, 1, "", "arbitrary_point"], [64, 2, 1, "", "are_concurrent"], [64, 2, 1, "", "bisectors"], [64, 2, 1, "", "contains"], [64, 4, 1, "", "direction"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "is_parallel"], [64, 2, 1, "", "is_perpendicular"], [64, 2, 1, "", "is_similar"], [64, 4, 1, "", "length"], [64, 4, 1, "", "p1"], [64, 4, 1, "", "p2"], [64, 2, 1, "", "parallel_line"], [64, 2, 1, "", "perpendicular_line"], [64, 2, 1, "", "perpendicular_segment"], [64, 4, 1, "", "points"], [64, 2, 1, "", "projection"], [64, 2, 1, "", "random_point"], [64, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[64, 4, 1, "", "bounds"], [64, 2, 1, "", "perpendicular_line"], [64, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[64, 4, 1, "", "direction_cosine"], [64, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "plot_interval"], [64, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[64, 2, 1, "", "closing_angle"], [64, 4, 1, "", "xdirection"], [64, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[64, 4, 1, "", "xdirection"], [64, 4, 1, "", "ydirection"], [64, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 4, 1, "", "length"], [64, 4, 1, "", "midpoint"], [64, 2, 1, "", "perpendicular_bisector"], [64, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[65, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[65, 2, 1, "", "angle_between"], [65, 2, 1, "", "arbitrary_point"], [65, 2, 1, "", "are_concurrent"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "equals"], [65, 2, 1, "", "equation"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "is_coplanar"], [65, 2, 1, "", "is_parallel"], [65, 2, 1, "", "is_perpendicular"], [65, 4, 1, "", "normal_vector"], [65, 4, 1, "", "p1"], [65, 2, 1, "", "parallel_plane"], [65, 2, 1, "", "parameter_value"], [65, 2, 1, "", "perpendicular_line"], [65, 2, 1, "", "perpendicular_plane"], [65, 2, 1, "", "projection"], [65, 2, 1, "", "projection_line"], [65, 2, 1, "", "random_point"]], "sympy.geometry.point": [[66, 1, 1, "", "Point"], [66, 1, 1, "", "Point2D"], [66, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[66, 2, 1, "", "affine_rank"], [66, 4, 1, "", "ambient_dimension"], [66, 2, 1, "", "are_coplanar"], [66, 2, 1, "", "canberra_distance"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "dot"], [66, 2, 1, "", "equals"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "is_collinear"], [66, 2, 1, "", "is_concyclic"], [66, 4, 1, "", "is_nonzero"], [66, 2, 1, "", "is_scalar_multiple"], [66, 4, 1, "", "is_zero"], [66, 4, 1, "", "length"], [66, 2, 1, "", "midpoint"], [66, 4, 1, "", "origin"], [66, 4, 1, "", "orthogonal_direction"], [66, 2, 1, "", "project"], [66, 2, 1, "", "taxicab_distance"], [66, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[66, 4, 1, "", "bounds"], [66, 4, 1, "", "coordinates"], [66, 2, 1, "", "rotate"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "transform"], [66, 2, 1, "", "translate"], [66, 4, 1, "", "x"], [66, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[66, 2, 1, "", "are_collinear"], [66, 4, 1, "", "coordinates"], [66, 2, 1, "", "direction_cosine"], [66, 2, 1, "", "direction_ratio"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "transform"], [66, 2, 1, "", "translate"], [66, 4, 1, "", "x"], [66, 4, 1, "", "y"], [66, 4, 1, "", "z"]], "sympy.geometry.polygon": [[67, 1, 1, "", "Polygon"], [67, 1, 1, "", "RegularPolygon"], [67, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[67, 4, 1, "", "angles"], [67, 2, 1, "", "arbitrary_point"], [67, 4, 1, "", "area"], [67, 2, 1, "", "bisectors"], [67, 4, 1, "", "bounds"], [67, 4, 1, "", "centroid"], [67, 2, 1, "", "cut_section"], [67, 2, 1, "", "distance"], [67, 2, 1, "", "encloses_point"], [67, 2, 1, "", "first_moment_of_area"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "is_convex"], [67, 4, 1, "", "perimeter"], [67, 2, 1, "", "plot_interval"], [67, 2, 1, "", "polar_second_moment_of_area"], [67, 2, 1, "", "second_moment_of_area"], [67, 2, 1, "", "section_modulus"], [67, 4, 1, "", "sides"], [67, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[67, 4, 1, "", "angles"], [67, 4, 1, "", "apothem"], [67, 4, 1, "", "area"], [67, 4, 1, "", "args"], [67, 4, 1, "", "center"], [67, 4, 1, "", "centroid"], [67, 4, 1, "", "circumcenter"], [67, 4, 1, "", "circumcircle"], [67, 4, 1, "", "circumradius"], [67, 2, 1, "", "encloses_point"], [67, 4, 1, "", "exterior_angle"], [67, 4, 1, "", "incircle"], [67, 4, 1, "", "inradius"], [67, 4, 1, "", "interior_angle"], [67, 4, 1, "", "length"], [67, 4, 1, "", "radius"], [67, 2, 1, "", "reflect"], [67, 2, 1, "", "rotate"], [67, 4, 1, "", "rotation"], [67, 2, 1, "", "scale"], [67, 2, 1, "", "spin"], [67, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[67, 4, 1, "", "altitudes"], [67, 2, 1, "", "bisectors"], [67, 4, 1, "", "circumcenter"], [67, 4, 1, "", "circumcircle"], [67, 4, 1, "", "circumradius"], [67, 4, 1, "", "eulerline"], [67, 4, 1, "", "excenters"], [67, 4, 1, "", "exradii"], [67, 4, 1, "", "incenter"], [67, 4, 1, "", "incircle"], [67, 4, 1, "", "inradius"], [67, 2, 1, "", "is_equilateral"], [67, 2, 1, "", "is_isosceles"], [67, 2, 1, "", "is_right"], [67, 2, 1, "", "is_scalene"], [67, 2, 1, "", "is_similar"], [67, 4, 1, "", "medial"], [67, 4, 1, "", "medians"], [67, 4, 1, "", "nine_point_circle"], [67, 4, 1, "", "orthocenter"], [67, 4, 1, "", "vertices"]], "sympy.geometry.util": [[68, 3, 1, "", "are_similar"], [68, 3, 1, "", "centroid"], [68, 3, 1, "", "convex_hull"], [68, 3, 1, "", "idiff"], [68, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[74, 1, 1, "", "DifferentialOperator"], [74, 1, 1, "", "DifferentialOperatorAlgebra"], [74, 3, 1, "", "DifferentialOperators"], [74, 1, 1, "", "HolonomicFunction"], [72, 3, 1, "", "_convert_poly_rat_alg"], [72, 3, 1, "", "_create_table"], [70, 3, 1, "", "expr_to_holonomic"], [70, 3, 1, "", "from_hyper"], [70, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[74, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[73, 2, 1, "", "composition"], [73, 2, 1, "", "diff"], [73, 2, 1, "", "evalf"], [73, 2, 1, "", "integrate"], [73, 2, 1, "", "series"], [73, 2, 1, "", "to_expr"], [73, 2, 1, "", "to_hyper"], [73, 2, 1, "", "to_meijerg"], [73, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[78, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[78, 3, 1, "", "components"], [78, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[78, 1, 1, "", "Integral"], [78, 3, 1, "", "integrate"], [78, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[78, 2, 1, "", "as_sum"], [78, 2, 1, "", "doit"], [78, 4, 1, "", "free_symbols"], [78, 6, 1, "", "is_commutative"], [78, 2, 1, "", "principal_value"], [78, 2, 1, "", "transform"]], "sympy.integrals": [[78, 0, 0, "-", "intpoly"], [76, 0, 0, "-", "meijerint"], [76, 0, 0, "-", "meijerint_doc"], [78, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[78, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[78, 3, 1, "", "integral_steps"], [78, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[76, 7, 1, "", "_CoeffExpValueError"], [76, 3, 1, "", "_check_antecedents"], [76, 3, 1, "", "_check_antecedents_1"], [76, 3, 1, "", "_check_antecedents_inversion"], [76, 3, 1, "", "_condsimp"], [76, 3, 1, "", "_create_lookup_table"], [76, 3, 1, "", "_dummy"], [76, 3, 1, "", "_dummy_"], [76, 3, 1, "", "_eval_cond"], [76, 3, 1, "", "_exponents"], [76, 3, 1, "", "_find_splitting_points"], [76, 3, 1, "", "_flip_g"], [76, 3, 1, "", "_functions"], [76, 3, 1, "", "_get_coeff_exp"], [76, 3, 1, "", "_guess_expansion"], [76, 3, 1, "", "_inflate_fox_h"], [76, 3, 1, "", "_inflate_g"], [76, 3, 1, "", "_int0oo"], [76, 3, 1, "", "_int0oo_1"], [76, 3, 1, "", "_int_inversion"], [76, 3, 1, "", "_is_analytic"], [76, 3, 1, "", "_meijerint_definite_2"], [76, 3, 1, "", "_meijerint_definite_3"], [76, 3, 1, "", "_meijerint_definite_4"], [76, 3, 1, "", "_meijerint_indefinite_1"], [76, 3, 1, "", "_mul_args"], [76, 3, 1, "", "_mul_as_two_parts"], [76, 3, 1, "", "_my_principal_branch"], [76, 3, 1, "", "_mytype"], [76, 3, 1, "", "_rewrite1"], [76, 3, 1, "", "_rewrite2"], [76, 3, 1, "", "_rewrite_inversion"], [76, 3, 1, "", "_rewrite_saxena"], [76, 3, 1, "", "_rewrite_saxena_1"], [76, 3, 1, "", "_rewrite_single"], [76, 3, 1, "", "_split_mul"], [76, 3, 1, "", "meijerint_definite"], [76, 3, 1, "", "meijerint_indefinite"], [76, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[78, 3, 1, "", "gauss_chebyshev_t"], [78, 3, 1, "", "gauss_chebyshev_u"], [78, 3, 1, "", "gauss_gen_laguerre"], [78, 3, 1, "", "gauss_hermite"], [78, 3, 1, "", "gauss_jacobi"], [78, 3, 1, "", "gauss_laguerre"], [78, 3, 1, "", "gauss_legendre"], [78, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[78, 3, 1, "", "ratint"], [78, 3, 1, "", "ratint_logpart"], [78, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[78, 1, 1, "", "NonElementaryIntegral"], [78, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[78, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[78, 1, 1, "", "CosineTransform"], [78, 1, 1, "", "FourierTransform"], [78, 1, 1, "", "HankelTransform"], [78, 1, 1, "", "IntegralTransform"], [78, 7, 1, "", "IntegralTransformError"], [78, 1, 1, "", "InverseCosineTransform"], [78, 1, 1, "", "InverseFourierTransform"], [78, 1, 1, "", "InverseHankelTransform"], [78, 1, 1, "", "InverseLaplaceTransform"], [78, 1, 1, "", "InverseMellinTransform"], [78, 1, 1, "", "InverseSineTransform"], [78, 1, 1, "", "LaplaceTransform"], [78, 1, 1, "", "MellinTransform"], [78, 1, 1, "", "SineTransform"], [78, 3, 1, "", "_fast_inverse_laplace"], [78, 3, 1, "", "_fourier_transform"], [78, 3, 1, "", "cosine_transform"], [78, 3, 1, "", "fourier_transform"], [78, 3, 1, "", "hankel_transform"], [78, 3, 1, "", "inverse_cosine_transform"], [78, 3, 1, "", "inverse_fourier_transform"], [78, 3, 1, "", "inverse_hankel_transform"], [78, 3, 1, "", "inverse_laplace_transform"], [78, 3, 1, "", "inverse_mellin_transform"], [78, 3, 1, "", "inverse_sine_transform"], [78, 3, 1, "", "laplace_transform"], [78, 3, 1, "", "mellin_transform"], [78, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[78, 2, 1, "", "doit"], [78, 4, 1, "", "function"], [78, 4, 1, "", "function_variable"], [78, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[78, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[79, 0, 0, "-", "printing"], [79, 0, 0, "-", "session"]], "sympy.interactive.printing": [[79, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[79, 3, 1, "", "enable_automatic_int_sympification"], [79, 3, 1, "", "enable_automatic_symbols"], [79, 3, 1, "", "init_ipython_session"], [79, 3, 1, "", "init_python_session"], [79, 3, 1, "", "init_session"], [79, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[80, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[80, 1, 1, "", "CartanType_generator"], [80, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[80, 2, 1, "", "rank"], [80, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[80, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[80, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[80, 2, 1, "", "add_as_roots"], [80, 2, 1, "", "add_simple_roots"], [80, 2, 1, "", "all_roots"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dynkin_diagram"], [80, 2, 1, "", "root_space"], [80, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[80, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "highest_root"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[80, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[80, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[80, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[80, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[80, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[80, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[80, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[80, 2, 1, "", "coxeter_diagram"], [80, 2, 1, "", "delete_doubles"], [80, 2, 1, "", "element_order"], [80, 2, 1, "", "generators"], [80, 2, 1, "", "group_name"], [80, 2, 1, "", "group_order"], [80, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[81, 3, 1, "", "ANFform"], [81, 1, 1, "", "And"], [81, 1, 1, "", "Boolean"], [81, 1, 1, "", "BooleanFalse"], [81, 1, 1, "", "BooleanTrue"], [81, 1, 1, "", "Equivalent"], [81, 1, 1, "", "Exclusive"], [81, 1, 1, "", "ITE"], [81, 1, 1, "", "Implies"], [81, 1, 1, "", "Nand"], [81, 1, 1, "", "Nor"], [81, 1, 1, "", "Not"], [81, 1, 1, "", "Or"], [81, 3, 1, "", "POSform"], [81, 3, 1, "", "SOPform"], [81, 1, 1, "", "Xnor"], [81, 1, 1, "", "Xor"], [81, 3, 1, "", "anf_coeffs"], [81, 3, 1, "", "bool_map"], [81, 3, 1, "", "bool_maxterm"], [81, 3, 1, "", "bool_minterm"], [81, 3, 1, "", "bool_monomial"], [81, 3, 1, "", "distribute_and_over_or"], [81, 3, 1, "", "distribute_or_over_and"], [81, 3, 1, "", "distribute_xor_over_and"], [81, 3, 1, "", "eliminate_implications"], [81, 3, 1, "", "gateinputcount"], [81, 3, 1, "", "integer_to_term"], [81, 3, 1, "", "is_anf"], [81, 3, 1, "", "is_cnf"], [81, 3, 1, "", "is_dnf"], [81, 3, 1, "", "is_nnf"], [81, 3, 1, "", "simplify_logic"], [81, 3, 1, "", "term_to_integer"], [81, 3, 1, "", "to_anf"], [81, 3, 1, "", "to_cnf"], [81, 3, 1, "", "to_dnf"], [81, 3, 1, "", "to_int_repr"], [81, 3, 1, "", "to_nnf"], [81, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[81, 2, 1, "", "as_set"], [81, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[81, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[81, 2, 1, "", "as_set"]], "sympy.logic": [[81, 0, 0, "-", "inference"]], "sympy.logic.inference": [[81, 3, 1, "", "satisfiable"]], "sympy.matrices": [[82, 0, 0, "-", "common"], [84, 0, 0, "-", "expressions"], [85, 0, 0, "-", "immutable"], [87, 0, 0, "-", "matrices"], [89, 0, 0, "-", "sparse"], [90, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[82, 1, 1, "", "MatrixCommon"], [82, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[82, 4, 1, "", "C"], [82, 4, 1, "", "H"], [82, 4, 1, "", "T"], [82, 2, 1, "", "__abs__"], [82, 2, 1, "", "__add__"], [82, 2, 1, "", "__getitem__"], [82, 2, 1, "", "__len__"], [82, 2, 1, "", "__mul__"], [82, 2, 1, "", "__pow__"], [82, 5, 1, "", "__weakref__"], [82, 2, 1, "", "adjoint"], [82, 2, 1, "", "applyfunc"], [82, 2, 1, "", "as_real_imag"], [82, 2, 1, "", "atoms"], [82, 2, 1, "", "col"], [82, 2, 1, "", "col_del"], [82, 2, 1, "", "col_insert"], [82, 2, 1, "", "col_join"], [82, 2, 1, "", "companion"], [82, 2, 1, "", "conjugate"], [82, 2, 1, "", "diag"], [82, 2, 1, "", "diagonal"], [82, 2, 1, "", "evalf"], [82, 2, 1, "", "expand"], [82, 2, 1, "", "extract"], [82, 2, 1, "", "eye"], [82, 4, 1, "", "free_symbols"], [82, 2, 1, "", "get_diag_blocks"], [82, 2, 1, "", "has"], [82, 2, 1, "", "hstack"], [82, 2, 1, "", "is_anti_symmetric"], [82, 2, 1, "", "is_diagonal"], [82, 4, 1, "", "is_hermitian"], [82, 4, 1, "", "is_lower"], [82, 4, 1, "", "is_lower_hessenberg"], [82, 4, 1, "", "is_square"], [82, 4, 1, "", "is_strongly_diagonally_dominant"], [82, 2, 1, "", "is_symbolic"], [82, 2, 1, "", "is_symmetric"], [82, 4, 1, "", "is_upper"], [82, 4, 1, "", "is_upper_hessenberg"], [82, 4, 1, "", "is_weakly_diagonally_dominant"], [82, 4, 1, "", "is_zero_matrix"], [82, 2, 1, "", "jordan_block"], [82, 2, 1, "", "lower_triangular"], [82, 2, 1, "", "multiply"], [82, 2, 1, "", "multiply_elementwise"], [82, 2, 1, "", "n"], [82, 2, 1, "", "ones"], [82, 2, 1, "", "permute"], [82, 2, 1, "", "permute_cols"], [82, 2, 1, "", "permute_rows"], [82, 2, 1, "", "pow"], [82, 2, 1, "", "refine"], [82, 2, 1, "", "replace"], [82, 2, 1, "", "reshape"], [82, 2, 1, "", "rmultiply"], [82, 2, 1, "", "rot90"], [82, 2, 1, "", "row"], [82, 2, 1, "", "row_del"], [82, 2, 1, "", "row_insert"], [82, 2, 1, "", "row_join"], [82, 4, 1, "", "shape"], [82, 2, 1, "", "simplify"], [82, 2, 1, "", "subs"], [82, 2, 1, "", "todod"], [82, 2, 1, "", "todok"], [82, 2, 1, "", "tolist"], [82, 2, 1, "", "trace"], [82, 2, 1, "", "transpose"], [82, 2, 1, "", "upper_triangular"], [82, 2, 1, "", "values"], [82, 2, 1, "", "vec"], [82, 2, 1, "", "vech"], [82, 2, 1, "", "vstack"], [82, 2, 1, "", "wilkinson"], [82, 2, 1, "", "xreplace"], [82, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[83, 1, 1, "", "DenseMatrix"], [87, 3, 1, "", "GramSchmidt"], [83, 5, 1, "", "Matrix"], [83, 1, 1, "", "MutableDenseMatrix"], [87, 3, 1, "", "casoratian"], [87, 3, 1, "", "diag"], [87, 3, 1, "", "eye"], [87, 3, 1, "", "hessian"], [87, 3, 1, "", "jordan_cell"], [87, 3, 1, "", "list2numpy"], [87, 3, 1, "", "matrix2numpy"], [87, 3, 1, "", "matrix_multiply_elementwise"], [87, 3, 1, "", "ones"], [87, 3, 1, "", "randMatrix"], [87, 3, 1, "", "rot_axis1"], [87, 3, 1, "", "rot_axis2"], [87, 3, 1, "", "rot_axis3"], [87, 3, 1, "", "symarray"], [87, 3, 1, "", "wronskian"], [87, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[83, 2, 1, "", "LDLdecomposition"], [83, 2, 1, "", "as_immutable"], [83, 2, 1, "", "as_mutable"], [83, 2, 1, "", "cholesky"], [83, 2, 1, "", "lower_triangular_solve"], [83, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[83, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[84, 1, 1, "", "CompanionMatrix"], [84, 1, 1, "", "FunctionMatrix"], [84, 1, 1, "", "HadamardPower"], [84, 1, 1, "", "HadamardProduct"], [84, 1, 1, "", "Identity"], [84, 1, 1, "", "Inverse"], [84, 1, 1, "", "MatAdd"], [84, 1, 1, "", "MatMul"], [84, 1, 1, "", "MatPow"], [84, 1, 1, "", "MatrixExpr"], [84, 1, 1, "", "MatrixPermute"], [84, 1, 1, "", "MatrixSet"], [84, 1, 1, "", "MatrixSymbol"], [84, 1, 1, "", "PermutationMatrix"], [84, 1, 1, "", "Trace"], [84, 1, 1, "", "Transpose"], [84, 1, 1, "", "ZeroMatrix"], [84, 0, 0, "-", "blockmatrix"]], "sympy.matrices.expressions.MatrixExpr": [[84, 4, 1, "", "T"], [84, 2, 1, "", "as_coeff_Mul"], [84, 2, 1, "", "as_explicit"], [84, 2, 1, "", "as_mutable"], [84, 2, 1, "", "equals"], [84, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[84, 1, 1, "", "BlockDiagMatrix"], [84, 1, 1, "", "BlockMatrix"], [84, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[84, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[84, 2, 1, "", "LDUdecomposition"], [84, 2, 1, "", "LUdecomposition"], [84, 2, 1, "", "UDLdecomposition"], [84, 2, 1, "", "schur"], [84, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[85, 1, 1, "", "ImmutableDenseMatrix"], [85, 5, 1, "", "ImmutableMatrix"], [89, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[87, 1, 1, "", "MatrixBase"], [87, 1, 1, "", "MatrixCalculus"], [87, 1, 1, "", "MatrixDeterminant"], [87, 1, 1, "", "MatrixEigen"], [87, 1, 1, "", "MatrixError"], [87, 1, 1, "", "MatrixReductions"], [87, 1, 1, "", "MatrixSubspaces"], [87, 1, 1, "", "NonSquareMatrixError"], [87, 1, 1, "", "ShapeError"], [87, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[87, 4, 1, "", "D"], [87, 2, 1, "", "LDLdecomposition"], [87, 2, 1, "", "LDLsolve"], [87, 2, 1, "", "LUdecomposition"], [87, 2, 1, "", "LUdecompositionFF"], [87, 2, 1, "", "LUdecomposition_Simple"], [87, 2, 1, "", "LUsolve"], [87, 2, 1, "", "QRdecomposition"], [87, 2, 1, "", "QRsolve"], [87, 2, 1, "", "add"], [87, 2, 1, "", "analytic_func"], [87, 2, 1, "", "cholesky"], [87, 2, 1, "", "cholesky_solve"], [87, 2, 1, "", "condition_number"], [87, 2, 1, "", "connected_components"], [87, 2, 1, "", "connected_components_decomposition"], [87, 2, 1, "", "copy"], [87, 2, 1, "", "cross"], [87, 2, 1, "", "diagonal_solve"], [87, 2, 1, "", "dot"], [87, 2, 1, "", "dual"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "gauss_jordan_solve"], [87, 2, 1, "", "inv"], [87, 2, 1, "", "inv_mod"], [87, 2, 1, "", "inverse_ADJ"], [87, 2, 1, "", "inverse_BLOCK"], [87, 2, 1, "", "inverse_CH"], [87, 2, 1, "", "inverse_GE"], [87, 2, 1, "", "inverse_LDL"], [87, 2, 1, "", "inverse_LU"], [87, 2, 1, "", "inverse_QR"], [87, 2, 1, "", "irregular"], [87, 2, 1, "", "is_nilpotent"], [87, 2, 1, "", "key2bounds"], [87, 2, 1, "", "key2ij"], [87, 2, 1, "", "log"], [87, 2, 1, "", "lower_triangular_solve"], [87, 2, 1, "", "norm"], [87, 2, 1, "", "normalized"], [87, 2, 1, "", "pinv"], [87, 2, 1, "", "pinv_solve"], [87, 2, 1, "", "print_nonzero"], [87, 2, 1, "", "project"], [87, 2, 1, "", "rank_decomposition"], [87, 2, 1, "", "singular_value_decomposition"], [87, 2, 1, "", "solve"], [87, 2, 1, "", "solve_least_squares"], [87, 2, 1, "", "strongly_connected_components"], [87, 2, 1, "", "strongly_connected_components_decomposition"], [87, 2, 1, "", "table"], [87, 2, 1, "", "upper_hessenberg_decomposition"], [87, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[87, 2, 1, "", "diff"], [87, 2, 1, "", "integrate"], [87, 2, 1, "", "jacobian"], [87, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[87, 2, 1, "", "adjugate"], [87, 2, 1, "", "charpoly"], [87, 2, 1, "", "cofactor"], [87, 2, 1, "", "cofactor_matrix"], [87, 2, 1, "", "det"], [87, 2, 1, "", "minor"], [87, 2, 1, "", "minor_submatrix"], [87, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[87, 2, 1, "", "bidiagonal_decomposition"], [87, 2, 1, "", "bidiagonalize"], [87, 2, 1, "", "diagonalize"], [87, 2, 1, "", "eigenvals"], [87, 2, 1, "", "eigenvects"], [87, 2, 1, "", "is_diagonalizable"], [87, 4, 1, "", "is_indefinite"], [87, 4, 1, "", "is_negative_definite"], [87, 4, 1, "", "is_negative_semidefinite"], [87, 4, 1, "", "is_positive_definite"], [87, 4, 1, "", "is_positive_semidefinite"], [87, 2, 1, "", "jordan_form"], [87, 2, 1, "", "left_eigenvects"], [87, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[87, 2, 1, "", "echelon_form"], [87, 2, 1, "", "elementary_col_op"], [87, 2, 1, "", "elementary_row_op"], [87, 4, 1, "", "is_echelon"], [87, 2, 1, "", "rank"], [87, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[87, 2, 1, "", "columnspace"], [87, 2, 1, "", "nullspace"], [87, 2, 1, "", "orthogonalize"], [87, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[88, 3, 1, "", "hermite_normal_form"], [88, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[89, 1, 1, "", "MutableSparseMatrix"], [89, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[90, 2, 1, "", "_csrtodok"], [90, 2, 1, "", "_doktocsr"], [90, 2, 1, "", "banded"]], "sympy.ntheory": [[91, 0, 0, "-", "bbp_pi"], [91, 0, 0, "-", "continued_fraction"], [91, 0, 0, "-", "digits"], [91, 0, 0, "-", "ecm"], [91, 0, 0, "-", "egyptian_fraction"], [91, 0, 0, "-", "factor_"], [91, 0, 0, "-", "generate"], [91, 1, 1, "", "mobius"], [91, 0, 0, "-", "modular"], [91, 0, 0, "-", "multinomial"], [91, 0, 0, "-", "partitions_"], [91, 0, 0, "-", "primetest"], [91, 0, 0, "-", "qs"], [91, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[91, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[91, 3, 1, "", "continued_fraction"], [91, 3, 1, "", "continued_fraction_convergents"], [91, 3, 1, "", "continued_fraction_iterator"], [91, 3, 1, "", "continued_fraction_periodic"], [91, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[91, 3, 1, "", "count_digits"], [91, 3, 1, "", "digits"], [91, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[91, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[91, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[91, 3, 1, "", "abundance"], [91, 3, 1, "", "antidivisor_count"], [91, 3, 1, "", "antidivisors"], [91, 3, 1, "", "core"], [91, 3, 1, "", "digits"], [91, 3, 1, "", "divisor_count"], [91, 1, 1, "", "divisor_sigma"], [91, 3, 1, "", "divisors"], [91, 3, 1, "", "factorint"], [91, 3, 1, "", "factorrat"], [91, 3, 1, "", "is_abundant"], [91, 3, 1, "", "is_amicable"], [91, 3, 1, "", "is_deficient"], [91, 3, 1, "", "is_mersenne_prime"], [91, 3, 1, "", "is_perfect"], [91, 3, 1, "", "mersenne_prime_exponent"], [91, 3, 1, "", "multiplicity"], [91, 3, 1, "", "perfect_power"], [91, 3, 1, "", "pollard_pm1"], [91, 3, 1, "", "pollard_rho"], [91, 3, 1, "", "primefactors"], [91, 1, 1, "", "primenu"], [91, 1, 1, "", "primeomega"], [91, 3, 1, "", "proper_divisor_count"], [91, 3, 1, "", "proper_divisors"], [91, 1, 1, "", "reduced_totient"], [91, 3, 1, "", "smoothness"], [91, 3, 1, "", "smoothness_p"], [91, 1, 1, "", "totient"], [91, 3, 1, "", "trailing"], [91, 3, 1, "", "udivisor_count"], [91, 1, 1, "", "udivisor_sigma"], [91, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[91, 1, 1, "", "Sieve"], [91, 3, 1, "", "composite"], [91, 3, 1, "", "compositepi"], [91, 3, 1, "", "cycle_length"], [91, 3, 1, "", "nextprime"], [91, 3, 1, "", "prevprime"], [91, 3, 1, "", "prime"], [91, 3, 1, "", "primepi"], [91, 3, 1, "", "primerange"], [91, 3, 1, "", "primorial"], [91, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[91, 2, 1, "", "extend"], [91, 2, 1, "", "extend_to_no"], [91, 2, 1, "", "mobiusrange"], [91, 2, 1, "", "primerange"], [91, 2, 1, "", "search"], [91, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[91, 3, 1, "", "crt"], [91, 3, 1, "", "crt1"], [91, 3, 1, "", "crt2"], [91, 3, 1, "", "solve_congruence"], [91, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[91, 3, 1, "", "binomial_coefficients"], [91, 3, 1, "", "binomial_coefficients_list"], [91, 3, 1, "", "multinomial_coefficients"], [91, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[91, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[91, 3, 1, "", "is_euler_pseudoprime"], [91, 3, 1, "", "is_extra_strong_lucas_prp"], [91, 3, 1, "", "is_gaussian_prime"], [91, 3, 1, "", "is_lucas_prp"], [91, 3, 1, "", "is_square"], [91, 3, 1, "", "is_strong_lucas_prp"], [91, 3, 1, "", "isprime"], [91, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[91, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[91, 3, 1, "", "discrete_log"], [91, 3, 1, "", "is_nthpow_residue"], [91, 3, 1, "", "is_primitive_root"], [91, 3, 1, "", "is_quad_residue"], [91, 3, 1, "", "jacobi_symbol"], [91, 3, 1, "", "legendre_symbol"], [91, 3, 1, "", "n_order"], [91, 3, 1, "", "nthroot_mod"], [91, 3, 1, "", "primitive_root"], [91, 3, 1, "", "quadratic_residues"], [91, 3, 1, "", "sqrt_mod"], [91, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[93, 1, 1, "", "LaTeXParsingError"], [93, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[93, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[93, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[93, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[93, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[93, 2, 1, "", "convert_to_c"], [93, 2, 1, "", "convert_to_expr"], [93, 2, 1, "", "convert_to_fortran"], [93, 2, 1, "", "convert_to_python"], [93, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[93, 3, 1, "", "auto_number"], [93, 3, 1, "", "auto_symbol"], [93, 3, 1, "", "convert_xor"], [93, 3, 1, "", "eval_expr"], [93, 3, 1, "", "factorial_notation"], [93, 3, 1, "", "function_exponentiation"], [93, 3, 1, "", "implicit_application"], [93, 3, 1, "", "implicit_multiplication"], [93, 3, 1, "", "implicit_multiplication_application"], [93, 3, 1, "", "lambda_notation"], [93, 3, 1, "", "parse_expr"], [93, 3, 1, "", "rationalize"], [93, 3, 1, "", "repeated_decimals"], [93, 3, 1, "", "split_symbols"], [93, 3, 1, "", "split_symbols_custom"], [93, 6, 1, "", "standard_transformations"], [93, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[94, 0, 0, "-", "beam"], [97, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[94, 1, 1, "", "Beam"], [94, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[94, 4, 1, "", "applied_loads"], [94, 2, 1, "", "apply_load"], [94, 2, 1, "", "apply_support"], [94, 4, 1, "", "area"], [94, 2, 1, "", "bending_moment"], [94, 4, 1, "", "boundary_conditions"], [94, 4, 1, "", "cross_section"], [94, 2, 1, "", "deflection"], [94, 2, 1, "", "draw"], [94, 4, 1, "", "elastic_modulus"], [94, 4, 1, "", "ild_moment"], [94, 4, 1, "", "ild_reactions"], [94, 4, 1, "", "ild_shear"], [94, 2, 1, "", "join"], [94, 4, 1, "", "length"], [94, 4, 1, "", "load"], [94, 2, 1, "", "max_bmoment"], [94, 2, 1, "", "max_deflection"], [94, 2, 1, "", "max_shear_force"], [94, 2, 1, "", "plot_bending_moment"], [94, 2, 1, "", "plot_deflection"], [94, 2, 1, "", "plot_ild_moment"], [94, 2, 1, "", "plot_ild_reactions"], [94, 2, 1, "", "plot_ild_shear"], [94, 2, 1, "", "plot_loading_results"], [94, 2, 1, "", "plot_shear_force"], [94, 2, 1, "", "plot_shear_stress"], [94, 2, 1, "", "plot_slope"], [94, 2, 1, "", "point_cflexure"], [94, 4, 1, "", "reaction_loads"], [94, 2, 1, "", "remove_load"], [94, 4, 1, "", "second_moment"], [94, 2, 1, "", "shear_force"], [94, 2, 1, "", "shear_stress"], [94, 2, 1, "", "slope"], [94, 2, 1, "", "solve_for_ild_moment"], [94, 2, 1, "", "solve_for_ild_reactions"], [94, 2, 1, "", "solve_for_ild_shear"], [94, 2, 1, "", "solve_for_reaction_loads"], [94, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[94, 2, 1, "", "apply_load"], [94, 2, 1, "", "apply_moment_load"], [94, 4, 1, "", "area"], [94, 2, 1, "", "axial_force"], [94, 2, 1, "", "axial_stress"], [94, 2, 1, "", "bending_moment"], [94, 4, 1, "", "boundary_conditions"], [94, 2, 1, "", "deflection"], [94, 4, 1, "", "load_vector"], [94, 2, 1, "", "max_bending_moment"], [94, 2, 1, "", "max_bmoment"], [94, 2, 1, "", "max_deflection"], [94, 2, 1, "", "max_shear_force"], [94, 4, 1, "", "moment_load_vector"], [94, 2, 1, "", "plot_bending_moment"], [94, 2, 1, "", "plot_deflection"], [94, 2, 1, "", "plot_loading_results"], [94, 2, 1, "", "plot_shear_force"], [94, 2, 1, "", "plot_shear_stress"], [94, 2, 1, "", "plot_slope"], [94, 2, 1, "", "polar_moment"], [94, 4, 1, "", "second_moment"], [94, 2, 1, "", "shear_force"], [94, 4, 1, "", "shear_modulus"], [94, 2, 1, "", "shear_stress"], [94, 2, 1, "", "slope"], [94, 2, 1, "", "solve_for_reaction_loads"], [94, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.truss": [[97, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[97, 2, 1, "", "add_member"], [97, 2, 1, "", "add_node"], [97, 2, 1, "", "apply_load"], [97, 2, 1, "", "apply_support"], [97, 2, 1, "", "change_member_label"], [97, 2, 1, "", "change_node_label"], [97, 4, 1, "", "internal_forces"], [97, 4, 1, "", "loads"], [97, 4, 1, "", "member_labels"], [97, 4, 1, "", "members"], [97, 4, 1, "", "node_labels"], [97, 4, 1, "", "node_positions"], [97, 4, 1, "", "nodes"], [97, 4, 1, "", "reaction_loads"], [97, 2, 1, "", "remove_load"], [97, 2, 1, "", "remove_member"], [97, 2, 1, "", "remove_node"], [97, 2, 1, "", "remove_support"], [97, 4, 1, "", "supports"]], "sympy.physics": [[100, 0, 0, "-", "control"], [103, 0, 0, "-", "hydrogen"], [104, 0, 0, "-", "matrices"], [124, 0, 0, "-", "mechanics"], [139, 0, 0, "-", "paulialgebra"], [140, 0, 0, "-", "qho_1d"], [164, 0, 0, "-", "secondquant"], [165, 0, 0, "-", "sho"], [180, 0, 0, "-", "vector"], [183, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[99, 2, 1, "", "bode_magnitude_numerical_data"], [99, 2, 1, "", "bode_magnitude_plot"], [99, 2, 1, "", "bode_phase_numerical_data"], [99, 2, 1, "", "bode_phase_plot"], [99, 2, 1, "", "bode_plot"], [99, 2, 1, "", "impulse_response_numerical_data"], [99, 2, 1, "", "impulse_response_plot"], [99, 2, 1, "", "pole_zero_numerical_data"], [99, 2, 1, "", "pole_zero_plot"], [99, 2, 1, "", "ramp_response_numerical_data"], [99, 2, 1, "", "ramp_response_plot"], [99, 2, 1, "", "step_response_numerical_data"], [99, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[101, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[101, 1, 1, "", "Feedback"], [101, 1, 1, "", "MIMOFeedback"], [101, 1, 1, "", "MIMOParallel"], [101, 1, 1, "", "MIMOSeries"], [101, 1, 1, "", "Parallel"], [101, 1, 1, "", "Series"], [101, 1, 1, "", "TransferFunction"], [101, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "sensitivity"], [101, 4, 1, "", "sign"], [101, 4, 1, "", "sys1"], [101, 4, 1, "", "sys2"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "sensitivity"], [101, 4, 1, "", "sign"], [101, 4, 1, "", "sys1"], [101, 4, 1, "", "sys2"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "num_inputs"], [101, 4, 1, "", "num_outputs"], [101, 4, 1, "", "shape"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "num_inputs"], [101, 4, 1, "", "num_outputs"], [101, 4, 1, "", "shape"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "is_biproper"], [101, 4, 1, "", "is_proper"], [101, 4, 1, "", "is_strictly_proper"], [101, 2, 1, "", "to_expr"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "is_biproper"], [101, 4, 1, "", "is_proper"], [101, 4, 1, "", "is_strictly_proper"], [101, 2, 1, "", "to_expr"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[101, 2, 1, "", "dc_gain"], [101, 4, 1, "", "den"], [101, 2, 1, "", "expand"], [101, 2, 1, "", "from_rational_expression"], [101, 4, 1, "", "is_biproper"], [101, 4, 1, "", "is_proper"], [101, 2, 1, "", "is_stable"], [101, 4, 1, "", "is_strictly_proper"], [101, 4, 1, "", "num"], [101, 2, 1, "", "poles"], [101, 2, 1, "", "to_expr"], [101, 4, 1, "", "var"], [101, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[101, 2, 1, "", "elem_poles"], [101, 2, 1, "", "elem_zeros"], [101, 2, 1, "", "expand"], [101, 2, 1, "", "from_Matrix"], [101, 4, 1, "", "num_inputs"], [101, 4, 1, "", "num_outputs"], [101, 4, 1, "", "shape"], [101, 2, 1, "", "transpose"], [101, 4, 1, "", "var"]], "sympy.physics.hep": [[102, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[102, 3, 1, "", "extract_type_tens"], [102, 3, 1, "", "gamma_trace"], [102, 3, 1, "", "kahane_simplify"], [102, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[103, 3, 1, "", "E_nl"], [103, 3, 1, "", "E_nl_dirac"], [103, 3, 1, "", "Psi_nlm"], [103, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[104, 3, 1, "", "mdft"], [104, 3, 1, "", "mgamma"], [104, 3, 1, "", "msigma"], [104, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[106, 0, 0, "-", "body"], [107, 3, 1, "", "find_dynamicsymbols"], [108, 0, 0, "-", "joint"], [108, 0, 0, "-", "jointsmethod"], [109, 0, 0, "-", "kane"], [109, 0, 0, "-", "lagrange"], [110, 0, 0, "-", "linearize"], [107, 3, 1, "", "msubs"], [111, 0, 0, "-", "particle"], [111, 0, 0, "-", "rigidbody"], [113, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[106, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[106, 2, 1, "", "ang_vel_in"], [106, 2, 1, "", "apply_force"], [106, 2, 1, "", "apply_torque"], [106, 2, 1, "", "clear_loads"], [106, 2, 1, "", "dcm"], [106, 2, 1, "", "kinetic_energy"], [106, 2, 1, "", "masscenter_vel"], [106, 2, 1, "", "remove_load"], [106, 4, 1, "", "x"], [106, 4, 1, "", "y"], [106, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[111, 3, 1, "", "Lagrangian"], [111, 3, 1, "", "angular_momentum"], [111, 3, 1, "", "inertia"], [111, 3, 1, "", "inertia_of_point_mass"], [111, 3, 1, "", "kinetic_energy"], [111, 3, 1, "", "linear_momentum"], [111, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[108, 1, 1, "", "Joint"], [108, 1, 1, "", "PinJoint"], [108, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[108, 4, 1, "", "child"], [108, 4, 1, "", "child_axis"], [108, 4, 1, "", "child_point"], [108, 4, 1, "", "coordinates"], [108, 4, 1, "", "kdes"], [108, 4, 1, "", "parent"], [108, 4, 1, "", "parent_axis"], [108, 4, 1, "", "parent_point"], [108, 4, 1, "", "speeds"]], "sympy.physics.mechanics.jointsmethod": [[108, 1, 1, "", "JointsMethod"]], "sympy.physics.mechanics.jointsmethod.JointsMethod": [[108, 4, 1, "", "bodies"], [108, 4, 1, "", "forcing"], [108, 4, 1, "", "forcing_full"], [108, 2, 1, "", "form_eoms"], [108, 4, 1, "", "kdes"], [108, 4, 1, "", "loads"], [108, 4, 1, "", "mass_matrix"], [108, 4, 1, "", "mass_matrix_full"], [108, 4, 1, "", "method"], [108, 4, 1, "", "q"], [108, 2, 1, "", "rhs"], [108, 4, 1, "", "u"]], "sympy.physics.mechanics.kane": [[109, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[109, 4, 1, "", "auxiliary_eqs"], [109, 4, 1, "", "forcing"], [109, 4, 1, "", "forcing_full"], [109, 2, 1, "", "kanes_equations"], [109, 2, 1, "", "kindiffdict"], [109, 2, 1, "", "linearize"], [109, 4, 1, "", "mass_matrix"], [109, 4, 1, "", "mass_matrix_full"], [109, 2, 1, "", "rhs"], [109, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[109, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[109, 4, 1, "", "forcing"], [109, 4, 1, "", "forcing_full"], [109, 2, 1, "", "form_lagranges_equations"], [109, 2, 1, "", "linearize"], [109, 4, 1, "", "mass_matrix"], [109, 4, 1, "", "mass_matrix_full"], [109, 2, 1, "", "rhs"], [109, 2, 1, "", "solve_multipliers"], [109, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[110, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[110, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[111, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[111, 2, 1, "", "angular_momentum"], [111, 2, 1, "", "kinetic_energy"], [111, 2, 1, "", "linear_momentum"], [111, 4, 1, "", "mass"], [111, 2, 1, "", "parallel_axis"], [111, 4, 1, "", "point"], [111, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[111, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[111, 2, 1, "", "angular_momentum"], [111, 4, 1, "", "central_inertia"], [111, 2, 1, "", "kinetic_energy"], [111, 2, 1, "", "linear_momentum"], [111, 2, 1, "", "parallel_axis"], [111, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[113, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[113, 4, 1, "", "alg_con"], [113, 4, 1, "", "bodies"], [113, 4, 1, "", "comb_explicit_rhs"], [113, 4, 1, "", "comb_implicit_mat"], [113, 4, 1, "", "comb_implicit_rhs"], [113, 2, 1, "", "compute_explicit_form"], [113, 2, 1, "", "constant_symbols"], [113, 4, 1, "", "coordinates"], [113, 4, 1, "", "dyn_implicit_mat"], [113, 4, 1, "", "dyn_implicit_rhs"], [113, 2, 1, "", "dynamic_symbols"], [113, 4, 1, "", "kin_explicit_rhs"], [113, 4, 1, "", "loads"], [113, 4, 1, "", "speeds"], [113, 4, 1, "", "states"]], "sympy.physics.optics": [[133, 0, 0, "-", "gaussopt"], [135, 0, 0, "-", "medium"], [136, 0, 0, "-", "polarization"], [137, 0, 0, "-", "utils"], [138, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[133, 1, 1, "", "BeamParameter"], [133, 1, 1, "", "CurvedMirror"], [133, 1, 1, "", "CurvedRefraction"], [133, 1, 1, "", "FlatMirror"], [133, 1, 1, "", "FlatRefraction"], [133, 1, 1, "", "FreeSpace"], [133, 1, 1, "", "GeometricRay"], [133, 1, 1, "", "RayTransferMatrix"], [133, 1, 1, "", "ThinLens"], [133, 3, 1, "", "conjugate_gauss_beams"], [133, 3, 1, "", "gaussian_conj"], [133, 3, 1, "", "geometric_conj_ab"], [133, 3, 1, "", "geometric_conj_af"], [133, 3, 1, "", "geometric_conj_bf"], [133, 3, 1, "", "rayleigh2waist"], [133, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[133, 4, 1, "", "divergence"], [133, 4, 1, "", "gouy"], [133, 4, 1, "", "q"], [133, 4, 1, "", "radius"], [133, 4, 1, "", "w"], [133, 4, 1, "", "w_0"], [133, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[133, 4, 1, "", "angle"], [133, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[133, 4, 1, "", "A"], [133, 4, 1, "", "B"], [133, 4, 1, "", "C"], [133, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[135, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[135, 4, 1, "", "refractive_index"], [135, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[136, 3, 1, "", "half_wave_retarder"], [136, 3, 1, "", "jones_2_stokes"], [136, 3, 1, "", "jones_vector"], [136, 3, 1, "", "linear_polarizer"], [136, 3, 1, "", "mueller_matrix"], [136, 3, 1, "", "phase_retarder"], [136, 3, 1, "", "polarizing_beam_splitter"], [136, 3, 1, "", "quarter_wave_retarder"], [136, 3, 1, "", "reflective_filter"], [136, 3, 1, "", "stokes_vector"], [136, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[137, 3, 1, "", "brewster_angle"], [137, 3, 1, "", "critical_angle"], [137, 3, 1, "", "deviation"], [137, 3, 1, "", "fresnel_coefficients"], [137, 3, 1, "", "hyperfocal_distance"], [137, 3, 1, "", "lens_formula"], [137, 3, 1, "", "lens_makers_formula"], [137, 3, 1, "", "mirror_formula"], [137, 3, 1, "", "refraction_angle"], [137, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[138, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[138, 4, 1, "", "amplitude"], [138, 4, 1, "", "angular_velocity"], [138, 4, 1, "", "frequency"], [138, 4, 1, "", "n"], [138, 4, 1, "", "phase"], [138, 4, 1, "", "speed"], [138, 4, 1, "", "time_period"], [138, 4, 1, "", "wavelength"], [138, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[139, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[140, 3, 1, "", "E_n"], [140, 3, 1, "", "coherent_state"], [140, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[141, 0, 0, "-", "anticommutator"], [142, 0, 0, "-", "cartesian"], [143, 0, 0, "-", "cg"], [144, 0, 0, "-", "circuitplot"], [145, 0, 0, "-", "commutator"], [146, 0, 0, "-", "constants"], [147, 0, 0, "-", "dagger"], [148, 0, 0, "-", "gate"], [149, 0, 0, "-", "grover"], [150, 0, 0, "-", "hilbert"], [152, 0, 0, "-", "innerproduct"], [153, 0, 0, "-", "operator"], [154, 0, 0, "-", "operatorset"], [155, 0, 0, "-", "piab"], [156, 0, 0, "-", "qapply"], [157, 0, 0, "-", "qft"], [158, 0, 0, "-", "qubit"], [159, 0, 0, "-", "represent"], [160, 0, 0, "-", "shor"], [161, 0, 0, "-", "spin"], [162, 0, 0, "-", "state"], [163, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[141, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[141, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[142, 1, 1, "", "PositionBra3D"], [142, 1, 1, "", "PositionKet3D"], [142, 1, 1, "", "PositionState3D"], [142, 1, 1, "", "PxBra"], [142, 1, 1, "", "PxKet"], [142, 1, 1, "", "PxOp"], [142, 1, 1, "", "XBra"], [142, 1, 1, "", "XKet"], [142, 1, 1, "", "XOp"], [142, 1, 1, "", "YOp"], [142, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[142, 4, 1, "", "position_x"], [142, 4, 1, "", "position_y"], [142, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[142, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[142, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[142, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[142, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[143, 1, 1, "", "CG"], [143, 1, 1, "", "Wigner3j"], [143, 1, 1, "", "Wigner6j"], [143, 1, 1, "", "Wigner9j"], [143, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[144, 1, 1, "", "CircuitPlot"], [144, 3, 1, "", "CreateCGate"], [144, 1, 1, "", "Mx"], [144, 1, 1, "", "Mz"], [144, 3, 1, "", "circuit_plot"], [144, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[144, 2, 1, "", "control_line"], [144, 2, 1, "", "control_point"], [144, 2, 1, "", "not_point"], [144, 2, 1, "", "one_qubit_box"], [144, 2, 1, "", "swap_point"], [144, 2, 1, "", "two_qubit_box"], [144, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[145, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[145, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[146, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[147, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[148, 1, 1, "", "CGate"], [148, 1, 1, "", "CGateS"], [148, 5, 1, "", "CNOT"], [148, 1, 1, "", "CNotGate"], [148, 1, 1, "", "Gate"], [148, 5, 1, "", "H"], [148, 1, 1, "", "HadamardGate"], [148, 1, 1, "", "IdentityGate"], [148, 1, 1, "", "OneQubitGate"], [148, 5, 1, "", "Phase"], [148, 1, 1, "", "PhaseGate"], [148, 5, 1, "", "S"], [148, 5, 1, "", "SWAP"], [148, 1, 1, "", "SwapGate"], [148, 5, 1, "", "T"], [148, 1, 1, "", "TGate"], [148, 1, 1, "", "TwoQubitGate"], [148, 1, 1, "", "UGate"], [148, 5, 1, "", "X"], [148, 1, 1, "", "XGate"], [148, 5, 1, "", "Y"], [148, 1, 1, "", "YGate"], [148, 5, 1, "", "Z"], [148, 1, 1, "", "ZGate"], [148, 3, 1, "", "gate_simp"], [148, 3, 1, "", "gate_sort"], [148, 3, 1, "", "normalized"], [148, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[148, 4, 1, "", "controls"], [148, 2, 1, "", "decompose"], [148, 2, 1, "", "eval_controls"], [148, 4, 1, "", "gate"], [148, 4, 1, "", "min_qubits"], [148, 4, 1, "", "nqubits"], [148, 2, 1, "", "plot_gate"], [148, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[148, 4, 1, "", "controls"], [148, 4, 1, "", "gate"], [148, 4, 1, "", "min_qubits"], [148, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[148, 2, 1, "", "get_target_matrix"], [148, 4, 1, "", "min_qubits"], [148, 4, 1, "", "nqubits"], [148, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[148, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[148, 2, 1, "", "get_target_matrix"], [148, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[149, 1, 1, "", "OracleGate"], [149, 1, 1, "", "WGate"], [149, 3, 1, "", "apply_grover"], [149, 3, 1, "", "grover_iteration"], [149, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[149, 4, 1, "", "search_function"], [149, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[150, 1, 1, "", "ComplexSpace"], [150, 1, 1, "", "DirectSumHilbertSpace"], [150, 1, 1, "", "FockSpace"], [150, 1, 1, "", "HilbertSpace"], [150, 1, 1, "", "L2"], [150, 1, 1, "", "TensorPowerHilbertSpace"], [150, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[150, 2, 1, "", "eval"], [150, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[150, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[150, 2, 1, "", "eval"], [150, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[152, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[153, 1, 1, "", "DifferentialOperator"], [153, 1, 1, "", "HermitianOperator"], [153, 1, 1, "", "IdentityOperator"], [153, 1, 1, "", "Operator"], [153, 1, 1, "", "OuterProduct"], [153, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[153, 4, 1, "", "expr"], [153, 4, 1, "", "free_symbols"], [153, 4, 1, "", "function"], [153, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[153, 4, 1, "", "bra"], [153, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[154, 3, 1, "", "operators_to_state"], [154, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[155, 1, 1, "", "PIABBra"], [155, 1, 1, "", "PIABHamiltonian"], [155, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[156, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[157, 1, 1, "", "IQFT"], [157, 1, 1, "", "QFT"], [157, 5, 1, "", "Rk"], [157, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[157, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[157, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[158, 1, 1, "", "IntQubit"], [158, 1, 1, "", "IntQubitBra"], [158, 1, 1, "", "Qubit"], [158, 1, 1, "", "QubitBra"], [158, 3, 1, "", "matrix_to_density"], [158, 3, 1, "", "matrix_to_qubit"], [158, 3, 1, "", "measure_all"], [158, 3, 1, "", "measure_all_oneshot"], [158, 3, 1, "", "measure_partial"], [158, 3, 1, "", "measure_partial_oneshot"], [158, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[159, 3, 1, "", "enumerate_states"], [159, 3, 1, "", "get_basis"], [159, 3, 1, "", "integrate_result"], [159, 3, 1, "", "rep_expectation"], [159, 3, 1, "", "rep_innerproduct"], [159, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[160, 1, 1, "", "CMod"], [160, 3, 1, "", "period_find"], [160, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[160, 4, 1, "", "N"], [160, 4, 1, "", "a"], [160, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[161, 1, 1, "", "J2Op"], [161, 1, 1, "", "JxBra"], [161, 1, 1, "", "JxBraCoupled"], [161, 1, 1, "", "JxKet"], [161, 1, 1, "", "JxKetCoupled"], [161, 1, 1, "", "JyBra"], [161, 1, 1, "", "JyBraCoupled"], [161, 1, 1, "", "JyKet"], [161, 1, 1, "", "JyKetCoupled"], [161, 1, 1, "", "JzBra"], [161, 1, 1, "", "JzBraCoupled"], [161, 1, 1, "", "JzKet"], [161, 1, 1, "", "JzKetCoupled"], [161, 1, 1, "", "JzOp"], [161, 1, 1, "", "Rotation"], [161, 1, 1, "", "WignerD"], [161, 3, 1, "", "couple"], [161, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[161, 2, 1, "", "D"], [161, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[162, 1, 1, "", "Bra"], [162, 1, 1, "", "BraBase"], [162, 1, 1, "", "Ket"], [162, 1, 1, "", "KetBase"], [162, 1, 1, "", "OrthogonalBra"], [162, 1, 1, "", "OrthogonalKet"], [162, 1, 1, "", "OrthogonalState"], [162, 1, 1, "", "State"], [162, 1, 1, "", "StateBase"], [162, 1, 1, "", "TimeDepBra"], [162, 1, 1, "", "TimeDepKet"], [162, 1, 1, "", "TimeDepState"], [162, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[162, 4, 1, "", "dual"], [162, 2, 1, "", "dual_class"], [162, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[162, 4, 1, "", "label"], [162, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[162, 4, 1, "", "expr"], [162, 4, 1, "", "is_commutative"], [162, 4, 1, "", "is_normalized"], [162, 4, 1, "", "limits"], [162, 4, 1, "", "norm"], [162, 2, 1, "", "normalize"], [162, 2, 1, "", "prob"], [162, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[163, 1, 1, "", "TensorProduct"], [163, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[164, 1, 1, "", "AnnihilateBoson"], [164, 1, 1, "", "AnnihilateFermion"], [164, 1, 1, "", "AntiSymmetricTensor"], [164, 5, 1, "", "B"], [164, 5, 1, "", "BBra"], [164, 5, 1, "", "BKet"], [164, 5, 1, "", "Bd"], [164, 1, 1, "", "BosonicBasis"], [164, 1, 1, "", "Commutator"], [164, 1, 1, "", "CreateBoson"], [164, 1, 1, "", "CreateFermion"], [164, 1, 1, "", "Dagger"], [164, 5, 1, "", "F"], [164, 5, 1, "", "FBra"], [164, 5, 1, "", "FKet"], [164, 5, 1, "", "Fd"], [164, 1, 1, "", "FixedBosonicBasis"], [164, 1, 1, "", "FockState"], [164, 1, 1, "", "FockStateBosonBra"], [164, 1, 1, "", "FockStateBosonKet"], [164, 1, 1, "", "FockStateBra"], [164, 1, 1, "", "FockStateFermionBra"], [164, 1, 1, "", "FockStateFermionKet"], [164, 1, 1, "", "FockStateKet"], [164, 1, 1, "", "InnerProduct"], [164, 1, 1, "", "KroneckerDelta"], [164, 1, 1, "", "NO"], [164, 1, 1, "", "PermutationOperator"], [164, 1, 1, "", "VarBosonicBasis"], [164, 3, 1, "", "apply_operators"], [164, 3, 1, "", "contraction"], [164, 3, 1, "", "evaluate_deltas"], [164, 3, 1, "", "matrix_rep"], [164, 3, 1, "", "simplify_index_permutations"], [164, 3, 1, "", "substitute_dummies"], [164, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[164, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[164, 2, 1, "", "apply_operator"], [164, 4, 1, "", "is_only_q_annihilator"], [164, 4, 1, "", "is_only_q_creator"], [164, 4, 1, "", "is_q_annihilator"], [164, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[164, 4, 1, "", "lower"], [164, 4, 1, "", "symbol"], [164, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[164, 2, 1, "", "doit"], [164, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[164, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[164, 2, 1, "", "apply_operator"], [164, 4, 1, "", "is_only_q_annihilator"], [164, 4, 1, "", "is_only_q_creator"], [164, 4, 1, "", "is_q_annihilator"], [164, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[164, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[164, 2, 1, "", "index"], [164, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[164, 4, 1, "", "bra"], [164, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[164, 2, 1, "", "eval"], [164, 4, 1, "", "indices_contain_equal_information"], [164, 4, 1, "", "is_above_fermi"], [164, 4, 1, "", "is_below_fermi"], [164, 4, 1, "", "is_only_above_fermi"], [164, 4, 1, "", "is_only_below_fermi"], [164, 4, 1, "", "killable_index"], [164, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[164, 2, 1, "", "doit"], [164, 2, 1, "", "get_subNO"], [164, 4, 1, "", "has_q_annihilators"], [164, 4, 1, "", "has_q_creators"], [164, 2, 1, "", "iter_q_annihilators"], [164, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[164, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[164, 2, 1, "", "index"], [164, 2, 1, "", "state"]], "sympy.physics.sho": [[165, 3, 1, "", "E_nl"], [165, 3, 1, "", "R_nl"]], "sympy.physics.units": [[166, 0, 0, "-", "dimensions"], [170, 0, 0, "-", "prefixes"], [171, 0, 0, "-", "quantities"], [172, 0, 0, "-", "unitsystem"], [171, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[166, 1, 1, "", "Dimension"], [166, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[166, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[166, 4, 1, "", "can_transf_matrix"], [166, 4, 1, "", "dim"], [166, 2, 1, "", "dim_can_vector"], [166, 2, 1, "", "dim_vector"], [166, 4, 1, "", "inv_can_transf_matrix"], [166, 4, 1, "", "is_consistent"], [166, 2, 1, "", "is_dimensionless"], [166, 4, 1, "", "list_can_dims"], [166, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[170, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[171, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[171, 4, 1, "", "abbrev"], [171, 2, 1, "", "convert_to"], [171, 4, 1, "", "free_symbols"], [171, 4, 1, "", "is_prefixed"], [171, 4, 1, "", "scale_factor"], [171, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[172, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[172, 4, 1, "", "dim"], [172, 2, 1, "", "extend"], [172, 2, 1, "", "get_units_non_prefixed"], [172, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[171, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[174, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[174, 2, 1, "", "applyfunc"], [174, 2, 1, "", "cross"], [174, 2, 1, "", "doit"], [174, 2, 1, "", "dot"], [174, 2, 1, "", "dt"], [174, 2, 1, "", "express"], [174, 4, 1, "", "func"], [174, 2, 1, "", "simplify"], [174, 2, 1, "", "subs"], [174, 2, 1, "", "to_matrix"], [174, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[176, 3, 1, "", "dynamicsymbols"], [177, 0, 0, "-", "functions"], [177, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[175, 3, 1, "", "curl"], [175, 3, 1, "", "divergence"], [175, 3, 1, "", "gradient"], [175, 3, 1, "", "is_conservative"], [175, 3, 1, "", "is_solenoidal"], [175, 3, 1, "", "scalar_potential"], [175, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[174, 1, 1, "", "CoordinateSym"], [174, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[174, 2, 1, "", "ang_acc_in"], [174, 2, 1, "", "ang_vel_in"], [174, 2, 1, "", "dcm"], [174, 2, 1, "", "orient"], [174, 2, 1, "", "orient_axis"], [174, 2, 1, "", "orient_body_fixed"], [174, 2, 1, "", "orient_explicit"], [174, 2, 1, "", "orient_quaternion"], [174, 2, 1, "", "orient_space_fixed"], [174, 2, 1, "", "orientnew"], [174, 2, 1, "", "partial_velocity"], [174, 2, 1, "", "set_ang_acc"], [174, 2, 1, "", "set_ang_vel"], [174, 2, 1, "", "variable_map"], [174, 4, 1, "", "x"], [174, 4, 1, "", "y"], [174, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[176, 3, 1, "", "cross"], [176, 3, 1, "", "dot"], [176, 3, 1, "", "express"], [177, 3, 1, "", "get_motion_params"], [177, 3, 1, "", "kinematic_equations"], [176, 3, 1, "", "outer"], [177, 3, 1, "", "partial_velocity"], [176, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[177, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[177, 2, 1, "", "a1pt_theory"], [177, 2, 1, "", "a2pt_theory"], [177, 2, 1, "", "acc"], [177, 2, 1, "", "locatenew"], [177, 2, 1, "", "partial_velocity"], [177, 2, 1, "", "pos_from"], [177, 2, 1, "", "set_acc"], [177, 2, 1, "", "set_pos"], [177, 2, 1, "", "set_vel"], [177, 2, 1, "", "v1pt_theory"], [177, 2, 1, "", "v2pt_theory"], [177, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[178, 3, 1, "", "init_vprinting"], [178, 3, 1, "", "vlatex"], [178, 3, 1, "", "vpprint"], [178, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[174, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[174, 2, 1, "", "angle_between"], [174, 2, 1, "", "applyfunc"], [174, 2, 1, "", "cross"], [174, 2, 1, "", "diff"], [174, 2, 1, "", "doit"], [174, 2, 1, "", "dot"], [174, 2, 1, "", "dt"], [174, 2, 1, "", "express"], [174, 2, 1, "", "free_dynamicsymbols"], [174, 2, 1, "", "free_symbols"], [174, 4, 1, "", "func"], [174, 2, 1, "", "magnitude"], [174, 2, 1, "", "normalize"], [174, 2, 1, "", "outer"], [174, 2, 1, "", "separate"], [174, 2, 1, "", "simplify"], [174, 2, 1, "", "subs"], [174, 2, 1, "", "to_matrix"], [174, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[183, 3, 1, "", "clebsch_gordan"], [183, 3, 1, "", "dot_rot_grad_Ynm"], [183, 3, 1, "", "gaunt"], [183, 3, 1, "", "racah"], [183, 3, 1, "", "wigner_3j"], [183, 3, 1, "", "wigner_6j"], [183, 3, 1, "", "wigner_9j"], [183, 3, 1, "", "wigner_d"], [183, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[184, 0, 0, "-", "plot"], [184, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[184, 1, 1, "", "BaseBackend"], [184, 1, 1, "", "BaseSeries"], [184, 1, 1, "", "Line2DBaseSeries"], [184, 1, 1, "", "Line3DBaseSeries"], [184, 1, 1, "", "LineOver1DRangeSeries"], [184, 1, 1, "", "MatplotlibBackend"], [184, 1, 1, "", "Parametric2DLineSeries"], [184, 1, 1, "", "Parametric3DLineSeries"], [184, 1, 1, "", "ParametricSurfaceSeries"], [184, 1, 1, "", "Plot"], [184, 1, 1, "", "PlotGrid"], [184, 1, 1, "", "SurfaceBaseSeries"], [184, 1, 1, "", "SurfaceOver2DRangeSeries"], [184, 1, 1, "", "TextBackend"], [184, 3, 1, "", "plot"], [184, 3, 1, "", "plot3d"], [184, 3, 1, "", "plot3d_parametric_line"], [184, 3, 1, "", "plot3d_parametric_surface"], [184, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[184, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[184, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[184, 2, 1, "", "get_segments"], [184, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[184, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[184, 2, 1, "", "append"], [184, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[184, 1, 1, "", "ImplicitSeries"], [184, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[184, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[185, 1, 1, "", "ExtensionElement"], [185, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[185, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[185, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[185, 1, 1, "", "ModuleHomomorphism"], [185, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[185, 2, 1, "", "image"], [185, 2, 1, "", "is_injective"], [185, 2, 1, "", "is_isomorphism"], [185, 2, 1, "", "is_surjective"], [185, 2, 1, "", "is_zero"], [185, 2, 1, "", "kernel"], [185, 2, 1, "", "quotient_codomain"], [185, 2, 1, "", "quotient_domain"], [185, 2, 1, "", "restrict_codomain"], [185, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[185, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[185, 2, 1, "", "contains"], [185, 2, 1, "", "depth"], [185, 2, 1, "", "height"], [185, 2, 1, "", "intersect"], [185, 2, 1, "", "is_maximal"], [185, 2, 1, "", "is_primary"], [185, 2, 1, "", "is_prime"], [185, 2, 1, "", "is_principal"], [185, 2, 1, "", "is_radical"], [185, 2, 1, "", "is_whole_ring"], [185, 2, 1, "", "is_zero"], [185, 2, 1, "", "product"], [185, 2, 1, "", "quotient"], [185, 2, 1, "", "radical"], [185, 2, 1, "", "reduce_element"], [185, 2, 1, "", "saturate"], [185, 2, 1, "", "subset"], [185, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[185, 1, 1, "", "FreeModule"], [185, 1, 1, "", "FreeModuleElement"], [185, 1, 1, "", "Module"], [185, 1, 1, "", "QuotientModule"], [185, 1, 1, "", "QuotientModuleElement"], [185, 1, 1, "", "SubModule"], [185, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[185, 2, 1, "", "basis"], [185, 2, 1, "", "convert"], [185, 5, 1, "", "dtype"], [185, 2, 1, "", "identity_hom"], [185, 2, 1, "", "is_submodule"], [185, 2, 1, "", "is_zero"], [185, 2, 1, "", "multiply_ideal"], [185, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[185, 2, 1, "", "contains"], [185, 2, 1, "", "convert"], [185, 2, 1, "", "identity_hom"], [185, 2, 1, "", "is_submodule"], [185, 2, 1, "", "is_zero"], [185, 2, 1, "", "multiply_ideal"], [185, 2, 1, "", "quotient_module"], [185, 2, 1, "", "submodule"], [185, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[185, 2, 1, "", "convert"], [185, 5, 1, "", "dtype"], [185, 2, 1, "", "identity_hom"], [185, 2, 1, "", "is_submodule"], [185, 2, 1, "", "is_zero"], [185, 2, 1, "", "quotient_hom"], [185, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[185, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[185, 2, 1, "", "convert"], [185, 2, 1, "", "identity_hom"], [185, 2, 1, "", "in_terms_of_generators"], [185, 2, 1, "", "inclusion_hom"], [185, 2, 1, "", "intersect"], [185, 2, 1, "", "is_full_module"], [185, 2, 1, "", "is_submodule"], [185, 2, 1, "", "is_zero"], [185, 2, 1, "", "module_quotient"], [185, 2, 1, "", "multiply_ideal"], [185, 2, 1, "", "quotient_module"], [185, 2, 1, "", "reduce_element"], [185, 2, 1, "", "submodule"], [185, 2, 1, "", "syzygy_module"], [185, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[185, 2, 1, "", "is_full_module"], [185, 2, 1, "", "quotient_hom"]], "sympy.polys.constructor": [[194, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[191, 3, 1, "", "dmp_abs"], [191, 3, 1, "", "dmp_add"], [191, 3, 1, "", "dmp_add_ground"], [191, 3, 1, "", "dmp_add_mul"], [191, 3, 1, "", "dmp_add_term"], [191, 3, 1, "", "dmp_div"], [191, 3, 1, "", "dmp_expand"], [191, 3, 1, "", "dmp_exquo"], [191, 3, 1, "", "dmp_exquo_ground"], [191, 3, 1, "", "dmp_ff_div"], [191, 3, 1, "", "dmp_l1_norm"], [191, 3, 1, "", "dmp_max_norm"], [191, 3, 1, "", "dmp_mul"], [191, 3, 1, "", "dmp_mul_ground"], [191, 3, 1, "", "dmp_mul_term"], [191, 3, 1, "", "dmp_neg"], [191, 3, 1, "", "dmp_pdiv"], [191, 3, 1, "", "dmp_pexquo"], [191, 3, 1, "", "dmp_pow"], [191, 3, 1, "", "dmp_pquo"], [191, 3, 1, "", "dmp_prem"], [191, 3, 1, "", "dmp_quo"], [191, 3, 1, "", "dmp_quo_ground"], [191, 3, 1, "", "dmp_rem"], [191, 3, 1, "", "dmp_rr_div"], [191, 3, 1, "", "dmp_sqr"], [191, 3, 1, "", "dmp_sub"], [191, 3, 1, "", "dmp_sub_ground"], [191, 3, 1, "", "dmp_sub_mul"], [191, 3, 1, "", "dmp_sub_term"], [191, 3, 1, "", "dup_lshift"], [191, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[191, 3, 1, "", "dmp_LC"], [191, 3, 1, "", "dmp_TC"], [191, 3, 1, "", "dmp_apply_pairs"], [191, 3, 1, "", "dmp_convert"], [191, 3, 1, "", "dmp_copy"], [191, 3, 1, "", "dmp_deflate"], [191, 3, 1, "", "dmp_degree"], [191, 3, 1, "", "dmp_degree_in"], [191, 3, 1, "", "dmp_degree_list"], [191, 3, 1, "", "dmp_eject"], [191, 3, 1, "", "dmp_exclude"], [191, 3, 1, "", "dmp_from_dict"], [191, 3, 1, "", "dmp_from_sympy"], [191, 3, 1, "", "dmp_ground"], [191, 3, 1, "", "dmp_ground_LC"], [191, 3, 1, "", "dmp_ground_TC"], [191, 3, 1, "", "dmp_ground_nth"], [191, 3, 1, "", "dmp_ground_p"], [191, 3, 1, "", "dmp_grounds"], [191, 3, 1, "", "dmp_include"], [191, 3, 1, "", "dmp_inflate"], [191, 3, 1, "", "dmp_inject"], [191, 3, 1, "", "dmp_list_terms"], [191, 3, 1, "", "dmp_multi_deflate"], [191, 3, 1, "", "dmp_negative_p"], [191, 3, 1, "", "dmp_nest"], [191, 3, 1, "", "dmp_normal"], [191, 3, 1, "", "dmp_nth"], [191, 3, 1, "", "dmp_one"], [191, 3, 1, "", "dmp_one_p"], [191, 3, 1, "", "dmp_permute"], [191, 3, 1, "", "dmp_positive_p"], [191, 3, 1, "", "dmp_raise"], [191, 3, 1, "", "dmp_slice"], [191, 3, 1, "", "dmp_strip"], [191, 3, 1, "", "dmp_swap"], [191, 3, 1, "", "dmp_terms_gcd"], [191, 3, 1, "", "dmp_to_dict"], [191, 3, 1, "", "dmp_to_tuple"], [191, 3, 1, "", "dmp_true_LT"], [191, 3, 1, "", "dmp_validate"], [191, 3, 1, "", "dmp_zero"], [191, 3, 1, "", "dmp_zero_p"], [191, 3, 1, "", "dmp_zeros"], [191, 3, 1, "", "dup_random"], [191, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[191, 3, 1, "", "dmp_clear_denoms"], [191, 3, 1, "", "dmp_compose"], [191, 3, 1, "", "dmp_diff"], [191, 3, 1, "", "dmp_diff_eval_in"], [191, 3, 1, "", "dmp_diff_in"], [191, 3, 1, "", "dmp_eval"], [191, 3, 1, "", "dmp_eval_in"], [191, 3, 1, "", "dmp_eval_tail"], [191, 3, 1, "", "dmp_ground_content"], [191, 3, 1, "", "dmp_ground_extract"], [191, 3, 1, "", "dmp_ground_monic"], [191, 3, 1, "", "dmp_ground_primitive"], [191, 3, 1, "", "dmp_ground_trunc"], [191, 3, 1, "", "dmp_integrate"], [191, 3, 1, "", "dmp_integrate_in"], [191, 3, 1, "", "dmp_lift"], [191, 3, 1, "", "dmp_revert"], [191, 3, 1, "", "dmp_trunc"], [191, 3, 1, "", "dup_content"], [191, 3, 1, "", "dup_decompose"], [191, 3, 1, "", "dup_extract"], [191, 3, 1, "", "dup_mirror"], [191, 3, 1, "", "dup_monic"], [191, 3, 1, "", "dup_primitive"], [191, 3, 1, "", "dup_real_imag"], [191, 3, 1, "", "dup_scale"], [191, 3, 1, "", "dup_shift"], [191, 3, 1, "", "dup_sign_variations"], [191, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[194, 3, 1, "", "dispersion"], [194, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[191, 3, 1, "", "sdm_LC"], [191, 3, 1, "", "sdm_LM"], [191, 3, 1, "", "sdm_LT"], [191, 3, 1, "", "sdm_add"], [191, 3, 1, "", "sdm_deg"], [191, 3, 1, "", "sdm_ecart"], [191, 3, 1, "", "sdm_from_dict"], [191, 3, 1, "", "sdm_from_vector"], [191, 3, 1, "", "sdm_groebner"], [191, 3, 1, "", "sdm_monomial_deg"], [191, 3, 1, "", "sdm_monomial_divides"], [191, 3, 1, "", "sdm_monomial_mul"], [191, 3, 1, "", "sdm_mul_term"], [191, 3, 1, "", "sdm_nf_mora"], [191, 3, 1, "", "sdm_spoly"], [191, 3, 1, "", "sdm_to_dict"], [191, 3, 1, "", "sdm_to_vector"], [191, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[189, 1, 1, "", "AlgebraicField"], [189, 1, 1, "", "ComplexField"], [189, 1, 1, "", "ExpressionDomain"], [189, 1, 1, "", "FiniteField"], [189, 1, 1, "", "FractionField"], [189, 1, 1, "", "GMPYFiniteField"], [189, 1, 1, "", "GMPYIntegerRing"], [189, 1, 1, "", "GMPYRationalField"], [189, 1, 1, "", "IntegerRing"], [189, 1, 1, "", "PolynomialRing"], [189, 1, 1, "", "PythonFiniteField"], [189, 1, 1, "", "PythonIntegerRing"], [189, 1, 1, "", "PythonRationalField"], [189, 1, 1, "", "RationalField"], [189, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[189, 2, 1, "", "algebraic_field"], [189, 2, 1, "", "denom"], [189, 2, 1, "", "discriminant"], [189, 5, 1, "", "dtype"], [189, 5, 1, "", "ext"], [189, 2, 1, "", "from_AlgebraicField"], [189, 2, 1, "", "from_GaussianIntegerRing"], [189, 2, 1, "", "from_GaussianRationalField"], [189, 2, 1, "", "from_QQ"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "integral_basis"], [189, 2, 1, "", "is_negative"], [189, 2, 1, "", "is_nonnegative"], [189, 2, 1, "", "is_nonpositive"], [189, 2, 1, "", "is_positive"], [189, 2, 1, "", "maximal_order"], [189, 5, 1, "", "mod"], [189, 2, 1, "", "numer"], [189, 5, 1, "", "orig_ext"], [189, 2, 1, "", "primes_above"], [189, 2, 1, "", "to_alg_num"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[189, 2, 1, "", "almosteq"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "get_exact"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "is_negative"], [189, 2, 1, "", "is_nonnegative"], [189, 2, 1, "", "is_nonpositive"], [189, 2, 1, "", "is_positive"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[189, 1, 1, "", "Expression"], [189, 2, 1, "", "denom"], [189, 5, 1, "", "dtype"], [189, 2, 1, "", "from_ExpressionDomain"], [189, 2, 1, "", "from_FractionField"], [189, 2, 1, "", "from_GaussianIntegerRing"], [189, 2, 1, "", "from_GaussianRationalField"], [189, 2, 1, "", "from_PolynomialRing"], [189, 2, 1, "", "from_QQ"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "get_field"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "is_negative"], [189, 2, 1, "", "is_nonnegative"], [189, 2, 1, "", "is_nonpositive"], [189, 2, 1, "", "is_positive"], [189, 2, 1, "", "numer"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[189, 2, 1, "", "characteristic"], [189, 2, 1, "", "from_FF"], [189, 2, 1, "", "from_FF_gmpy"], [189, 2, 1, "", "from_FF_python"], [189, 2, 1, "", "from_QQ"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "get_field"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[189, 2, 1, "", "denom"], [189, 2, 1, "", "factorial"], [189, 2, 1, "", "from_AlgebraicField"], [189, 2, 1, "", "from_ComplexField"], [189, 2, 1, "", "from_FractionField"], [189, 2, 1, "", "from_GaussianIntegerRing"], [189, 2, 1, "", "from_GaussianRationalField"], [189, 2, 1, "", "from_PolynomialRing"], [189, 2, 1, "", "from_QQ"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "is_negative"], [189, 2, 1, "", "is_nonnegative"], [189, 2, 1, "", "is_nonpositive"], [189, 2, 1, "", "is_positive"], [189, 2, 1, "", "numer"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[189, 2, 1, "", "factorial"], [189, 2, 1, "", "from_FF_gmpy"], [189, 2, 1, "", "from_FF_python"], [189, 2, 1, "", "from_QQ"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "gcdex"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "sqrt"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[189, 2, 1, "", "denom"], [189, 2, 1, "", "div"], [189, 2, 1, "", "exquo"], [189, 2, 1, "", "factorial"], [189, 2, 1, "", "from_GaussianRationalField"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "numer"], [189, 2, 1, "", "quo"], [189, 2, 1, "", "rem"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[189, 2, 1, "", "algebraic_field"], [189, 2, 1, "", "factorial"], [189, 2, 1, "", "from_AlgebraicField"], [189, 2, 1, "", "from_FF"], [189, 2, 1, "", "from_FF_gmpy"], [189, 2, 1, "", "from_FF_python"], [189, 2, 1, "", "from_QQ"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "gcdex"], [189, 2, 1, "", "get_field"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "log"], [189, 2, 1, "", "sqrt"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[189, 2, 1, "", "factorial"], [189, 2, 1, "", "from_AlgebraicField"], [189, 2, 1, "", "from_ComplexField"], [189, 2, 1, "", "from_FractionField"], [189, 2, 1, "", "from_GaussianIntegerRing"], [189, 2, 1, "", "from_GaussianRationalField"], [189, 2, 1, "", "from_GlobalPolynomialRing"], [189, 2, 1, "", "from_PolynomialRing"], [189, 2, 1, "", "from_QQ"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "gcdex"], [189, 2, 1, "", "get_field"], [189, 2, 1, "", "is_negative"], [189, 2, 1, "", "is_nonnegative"], [189, 2, 1, "", "is_nonpositive"], [189, 2, 1, "", "is_positive"], [189, 2, 1, "", "is_unit"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[189, 2, 1, "", "algebraic_field"], [189, 2, 1, "", "denom"], [189, 2, 1, "", "div"], [189, 2, 1, "", "exquo"], [189, 2, 1, "", "from_AlgebraicField"], [189, 2, 1, "", "from_GaussianRationalField"], [189, 2, 1, "", "from_QQ"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "numer"], [189, 2, 1, "", "quo"], [189, 2, 1, "", "rem"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[189, 2, 1, "", "almosteq"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "get_exact"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "to_rational"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[189, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[189, 2, 1, "", "drop"], [189, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[189, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[189, 2, 1, "", "abs"], [189, 2, 1, "", "add"], [189, 2, 1, "", "alg_field_from_poly"], [189, 2, 1, "", "algebraic_field"], [189, 2, 1, "", "almosteq"], [189, 2, 1, "", "characteristic"], [189, 2, 1, "", "cofactors"], [189, 2, 1, "", "convert"], [189, 2, 1, "", "convert_from"], [189, 2, 1, "", "cyclotomic_field"], [189, 2, 1, "", "denom"], [189, 2, 1, "", "div"], [189, 2, 1, "", "drop"], [189, 5, 1, "", "dtype"], [189, 2, 1, "", "evalf"], [189, 2, 1, "", "exquo"], [189, 2, 1, "", "frac_field"], [189, 2, 1, "", "from_AlgebraicField"], [189, 2, 1, "", "from_ComplexField"], [189, 2, 1, "", "from_ExpressionDomain"], [189, 2, 1, "", "from_ExpressionRawDomain"], [189, 2, 1, "", "from_FF"], [189, 2, 1, "", "from_FF_gmpy"], [189, 2, 1, "", "from_FF_python"], [189, 2, 1, "", "from_FractionField"], [189, 2, 1, "", "from_GlobalPolynomialRing"], [189, 2, 1, "", "from_MonogenicFiniteExtension"], [189, 2, 1, "", "from_PolynomialRing"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_RealField"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "gcdex"], [189, 2, 1, "", "get_exact"], [189, 2, 1, "", "get_field"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "half_gcdex"], [189, 5, 1, "", "has_assoc_Field"], [189, 5, 1, "", "has_assoc_Ring"], [189, 2, 1, "", "inject"], [189, 2, 1, "", "invert"], [189, 5, 1, "", "is_Field"], [189, 5, 1, "", "is_PID"], [189, 5, 1, "", "is_Ring"], [189, 2, 1, "", "is_negative"], [189, 2, 1, "", "is_nonnegative"], [189, 2, 1, "", "is_nonpositive"], [189, 2, 1, "", "is_one"], [189, 2, 1, "", "is_positive"], [189, 2, 1, "", "is_zero"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "log"], [189, 2, 1, "", "map"], [189, 2, 1, "", "mul"], [189, 2, 1, "", "n"], [189, 2, 1, "", "neg"], [189, 2, 1, "", "numer"], [189, 2, 1, "", "of_type"], [189, 2, 1, "", "old_frac_field"], [189, 2, 1, "", "old_poly_ring"], [189, 5, 1, "", "one"], [189, 2, 1, "", "poly_ring"], [189, 2, 1, "", "pos"], [189, 2, 1, "", "pow"], [189, 2, 1, "", "quo"], [189, 2, 1, "", "rem"], [189, 2, 1, "", "revert"], [189, 2, 1, "", "sqrt"], [189, 2, 1, "", "sub"], [189, 2, 1, "", "to_sympy"], [189, 4, 1, "", "tp"], [189, 2, 1, "", "unify"], [189, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[189, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[189, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[189, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[189, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[189, 2, 1, "", "div"], [189, 2, 1, "", "exquo"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "get_field"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "is_unit"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "quo"], [189, 2, 1, "", "rem"], [189, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[189, 1, 1, "", "GaussianDomain"], [189, 1, 1, "", "GaussianElement"], [189, 1, 1, "", "GaussianInteger"], [189, 1, 1, "", "GaussianIntegerRing"], [189, 1, 1, "", "GaussianRational"], [189, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[189, 2, 1, "", "from_AlgebraicField"], [189, 2, 1, "", "from_QQ"], [189, 2, 1, "", "from_QQ_gmpy"], [189, 2, 1, "", "from_QQ_python"], [189, 2, 1, "", "from_ZZ"], [189, 2, 1, "", "from_ZZ_gmpy"], [189, 2, 1, "", "from_ZZ_python"], [189, 2, 1, "", "from_sympy"], [189, 2, 1, "", "inject"], [189, 2, 1, "", "is_negative"], [189, 2, 1, "", "is_nonnegative"], [189, 2, 1, "", "is_nonpositive"], [189, 2, 1, "", "is_positive"], [189, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[189, 2, 1, "", "new"], [189, 2, 1, "", "parent"], [189, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[189, 5, 1, "", "dtype"], [189, 2, 1, "", "from_GaussianIntegerRing"], [189, 2, 1, "", "from_GaussianRationalField"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "get_field"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[189, 2, 1, "", "as_AlgebraicField"], [189, 2, 1, "", "denom"], [189, 5, 1, "", "dtype"], [189, 2, 1, "", "from_GaussianIntegerRing"], [189, 2, 1, "", "from_GaussianRationalField"], [189, 2, 1, "", "get_field"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[189, 1, 1, "", "ComplexElement"], [189, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[189, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[189, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[189, 2, 1, "", "denom"], [189, 2, 1, "", "div"], [189, 2, 1, "", "exquo"], [189, 2, 1, "", "free_module"], [189, 2, 1, "", "get_ring"], [189, 2, 1, "", "ideal"], [189, 2, 1, "", "invert"], [189, 2, 1, "", "numer"], [189, 2, 1, "", "quo"], [189, 2, 1, "", "quotient_ring"], [189, 2, 1, "", "rem"], [189, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[189, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[189, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[191, 3, 1, "", "dmp_cancel"], [191, 3, 1, "", "dmp_content"], [191, 3, 1, "", "dmp_discriminant"], [191, 3, 1, "", "dmp_euclidean_prs"], [191, 3, 1, "", "dmp_ff_prs_gcd"], [191, 3, 1, "", "dmp_gcd"], [191, 3, 1, "", "dmp_gcdex"], [191, 3, 1, "", "dmp_half_gcdex"], [191, 3, 1, "", "dmp_inner_gcd"], [191, 3, 1, "", "dmp_inner_subresultants"], [191, 3, 1, "", "dmp_invert"], [191, 3, 1, "", "dmp_lcm"], [191, 3, 1, "", "dmp_primitive"], [191, 3, 1, "", "dmp_primitive_prs"], [191, 3, 1, "", "dmp_prs_resultant"], [191, 3, 1, "", "dmp_qq_collins_resultant"], [191, 3, 1, "", "dmp_qq_heu_gcd"], [191, 3, 1, "", "dmp_resultant"], [191, 3, 1, "", "dmp_rr_prs_gcd"], [191, 3, 1, "", "dmp_subresultants"], [191, 3, 1, "", "dmp_zz_collins_resultant"], [191, 3, 1, "", "dmp_zz_heu_gcd"], [191, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[191, 3, 1, "", "dmp_ext_factor"], [191, 3, 1, "", "dmp_factor_list"], [191, 3, 1, "", "dmp_factor_list_include"], [191, 3, 1, "", "dmp_irreducible_p"], [191, 3, 1, "", "dmp_trial_division"], [191, 3, 1, "", "dmp_zz_diophantine"], [191, 3, 1, "", "dmp_zz_factor"], [191, 3, 1, "", "dmp_zz_mignotte_bound"], [191, 3, 1, "", "dmp_zz_wang"], [191, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [191, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [191, 3, 1, "", "dmp_zz_wang_non_divisors"], [191, 3, 1, "", "dmp_zz_wang_test_points"], [191, 3, 1, "", "dup_cyclotomic_p"], [191, 3, 1, "", "dup_gf_factor"], [191, 3, 1, "", "dup_zz_cyclotomic_factor"], [191, 3, 1, "", "dup_zz_cyclotomic_poly"], [191, 3, 1, "", "dup_zz_factor"], [191, 3, 1, "", "dup_zz_factor_sqf"], [191, 3, 1, "", "dup_zz_hensel_lift"], [191, 3, 1, "", "dup_zz_hensel_step"], [191, 3, 1, "", "dup_zz_irreducible_p"], [191, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[191, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[189, 1, 1, "", "FracElement"], [189, 1, 1, "", "FracField"], [189, 3, 1, "", "field"], [189, 3, 1, "", "sfield"], [189, 3, 1, "", "vfield"], [189, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[189, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[191, 3, 1, "", "gf_LC"], [191, 3, 1, "", "gf_Qbasis"], [191, 3, 1, "", "gf_Qmatrix"], [191, 3, 1, "", "gf_TC"], [191, 3, 1, "", "gf_add"], [191, 3, 1, "", "gf_add_ground"], [191, 3, 1, "", "gf_add_mul"], [191, 3, 1, "", "gf_berlekamp"], [191, 3, 1, "", "gf_cofactors"], [191, 3, 1, "", "gf_compose"], [191, 3, 1, "", "gf_compose_mod"], [191, 3, 1, "", "gf_crt"], [191, 3, 1, "", "gf_crt1"], [191, 3, 1, "", "gf_crt2"], [191, 3, 1, "", "gf_csolve"], [191, 3, 1, "", "gf_degree"], [191, 3, 1, "", "gf_diff"], [191, 3, 1, "", "gf_div"], [191, 3, 1, "", "gf_eval"], [191, 3, 1, "", "gf_expand"], [191, 3, 1, "", "gf_exquo"], [191, 3, 1, "", "gf_factor"], [191, 3, 1, "", "gf_factor_sqf"], [191, 3, 1, "", "gf_from_dict"], [191, 3, 1, "", "gf_from_int_poly"], [191, 3, 1, "", "gf_gcd"], [191, 3, 1, "", "gf_gcdex"], [191, 3, 1, "", "gf_int"], [191, 3, 1, "", "gf_irreducible"], [191, 3, 1, "", "gf_irreducible_p"], [191, 3, 1, "", "gf_lcm"], [191, 3, 1, "", "gf_lshift"], [191, 3, 1, "", "gf_monic"], [191, 3, 1, "", "gf_mul"], [191, 3, 1, "", "gf_mul_ground"], [191, 3, 1, "", "gf_multi_eval"], [191, 3, 1, "", "gf_neg"], [191, 3, 1, "", "gf_normal"], [191, 3, 1, "", "gf_pow"], [191, 3, 1, "", "gf_pow_mod"], [191, 3, 1, "", "gf_quo"], [191, 3, 1, "", "gf_quo_ground"], [191, 3, 1, "", "gf_random"], [191, 3, 1, "", "gf_rem"], [191, 3, 1, "", "gf_rshift"], [191, 3, 1, "", "gf_shoup"], [191, 3, 1, "", "gf_sqf_list"], [191, 3, 1, "", "gf_sqf_p"], [191, 3, 1, "", "gf_sqf_part"], [191, 3, 1, "", "gf_sqr"], [191, 3, 1, "", "gf_strip"], [191, 3, 1, "", "gf_sub"], [191, 3, 1, "", "gf_sub_ground"], [191, 3, 1, "", "gf_sub_mul"], [191, 3, 1, "", "gf_to_dict"], [191, 3, 1, "", "gf_to_int_poly"], [191, 3, 1, "", "gf_trace_map"], [191, 3, 1, "", "gf_trunc"], [191, 3, 1, "", "gf_value"], [191, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[191, 3, 1, "", "groebner"], [191, 3, 1, "", "is_groebner"], [191, 3, 1, "", "is_minimal"], [191, 3, 1, "", "is_reduced"], [191, 3, 1, "", "red_groebner"], [191, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[187, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[187, 2, 1, "", "add"], [187, 2, 1, "", "charpoly"], [187, 2, 1, "", "det"], [187, 2, 1, "", "hstack"], [187, 2, 1, "", "inv"], [187, 2, 1, "", "is_lower"], [187, 2, 1, "", "is_upper"], [187, 2, 1, "", "is_zero_matrix"], [187, 2, 1, "", "lu"], [187, 2, 1, "", "lu_solve"], [187, 2, 1, "", "matmul"], [187, 2, 1, "", "neg"], [187, 2, 1, "", "rref"], [187, 2, 1, "", "scc"], [187, 2, 1, "", "sub"], [187, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[187, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[187, 2, 1, "", "add"], [187, 2, 1, "", "charpoly"], [187, 2, 1, "", "columnspace"], [187, 2, 1, "", "convert_to"], [187, 2, 1, "", "det"], [187, 2, 1, "", "diag"], [187, 2, 1, "", "eye"], [187, 2, 1, "", "from_Matrix"], [187, 2, 1, "", "from_dict_sympy"], [187, 2, 1, "", "from_list"], [187, 2, 1, "", "from_list_sympy"], [187, 2, 1, "", "from_rep"], [187, 2, 1, "", "hstack"], [187, 2, 1, "", "inv"], [187, 4, 1, "", "is_lower"], [187, 4, 1, "", "is_upper"], [187, 2, 1, "", "lu"], [187, 2, 1, "", "lu_solve"], [187, 2, 1, "", "matmul"], [187, 2, 1, "", "mul"], [187, 2, 1, "", "neg"], [187, 2, 1, "", "nullspace"], [187, 2, 1, "", "ones"], [187, 2, 1, "", "pow"], [187, 2, 1, "", "rowspace"], [187, 2, 1, "", "rref"], [187, 2, 1, "", "scc"], [187, 2, 1, "", "sub"], [187, 2, 1, "", "to_Matrix"], [187, 2, 1, "", "to_dense"], [187, 2, 1, "", "to_field"], [187, 2, 1, "", "to_sparse"], [187, 2, 1, "", "transpose"], [187, 2, 1, "", "unify"], [187, 2, 1, "", "vstack"], [187, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[187, 3, 1, "", "hermite_normal_form"], [187, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[187, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[187, 2, 1, "", "add"], [187, 2, 1, "", "charpoly"], [187, 2, 1, "", "convert_to"], [187, 2, 1, "", "copy"], [187, 2, 1, "", "det"], [187, 2, 1, "", "eye"], [187, 2, 1, "", "from_ddm"], [187, 2, 1, "", "from_list"], [187, 2, 1, "", "hstack"], [187, 2, 1, "", "inv"], [187, 2, 1, "", "is_lower"], [187, 2, 1, "", "is_upper"], [187, 2, 1, "", "is_zero_matrix"], [187, 2, 1, "", "lu"], [187, 2, 1, "", "lu_solve"], [187, 2, 1, "", "matmul"], [187, 2, 1, "", "mul"], [187, 2, 1, "", "neg"], [187, 2, 1, "", "new"], [187, 2, 1, "", "nullspace"], [187, 2, 1, "", "rref"], [187, 2, 1, "", "scc"], [187, 2, 1, "", "sub"], [187, 2, 1, "", "to_ddm"], [187, 2, 1, "", "to_list"], [187, 2, 1, "", "transpose"], [187, 2, 1, "", "vstack"], [187, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[191, 3, 1, "", "_modgcd_multivariate_p"], [191, 3, 1, "", "func_field_modgcd"], [191, 3, 1, "", "modgcd_bivariate"], [191, 3, 1, "", "modgcd_multivariate"], [191, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[194, 1, 1, "", "Monomial"], [194, 3, 1, "", "itermonomials"], [194, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[194, 2, 1, "", "as_expr"], [194, 2, 1, "", "gcd"], [194, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[193, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[193, 3, 1, "", "minimal_polynomial"], [193, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[193, 0, 0, "-", "modules"], [193, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[193, 1, 1, "", "EndomorphismRing"], [193, 1, 1, "", "InnerEndomorphism"], [193, 1, 1, "", "Module"], [193, 1, 1, "", "ModuleElement"], [193, 1, 1, "", "ModuleEndomorphism"], [193, 1, 1, "", "ModuleHomomorphism"], [193, 1, 1, "", "PowerBasis"], [193, 1, 1, "", "PowerBasisElement"], [193, 1, 1, "", "Submodule"], [193, 3, 1, "", "find_min_poly"], [193, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[193, 2, 1, "", "__init__"], [193, 2, 1, "", "inner_endomorphism"], [193, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[193, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[193, 2, 1, "", "__call__"], [193, 2, 1, "", "ancestors"], [193, 2, 1, "", "basis_elements"], [193, 2, 1, "", "element_from_rational"], [193, 2, 1, "", "endomorphism_ring"], [193, 2, 1, "", "is_compat_col"], [193, 2, 1, "", "mult_tab"], [193, 4, 1, "", "n"], [193, 2, 1, "", "nearest_common_ancestor"], [193, 4, 1, "", "number_field"], [193, 2, 1, "", "one"], [193, 4, 1, "", "parent"], [193, 2, 1, "", "power_basis_ancestor"], [193, 2, 1, "", "represent"], [193, 2, 1, "", "starts_with_unity"], [193, 2, 1, "", "submodule_from_gens"], [193, 2, 1, "", "submodule_from_matrix"], [193, 2, 1, "", "whole_submodule"], [193, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[193, 4, 1, "", "QQ_col"], [193, 2, 1, "", "__add__"], [193, 2, 1, "", "__init__"], [193, 2, 1, "", "__mod__"], [193, 2, 1, "", "__mul__"], [193, 2, 1, "", "column"], [193, 2, 1, "", "equiv"], [193, 2, 1, "", "from_int_list"], [193, 2, 1, "", "is_compat"], [193, 4, 1, "", "n"], [193, 2, 1, "", "over_power_basis"], [193, 2, 1, "", "reduced"], [193, 2, 1, "", "reduced_mod_p"], [193, 2, 1, "", "to_ancestor"], [193, 2, 1, "", "to_parent"], [193, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[193, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[193, 2, 1, "", "__init__"], [193, 2, 1, "", "kernel"], [193, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[193, 2, 1, "", "__init__"], [193, 2, 1, "", "element_from_ANP"], [193, 2, 1, "", "element_from_alg_num"], [193, 2, 1, "", "element_from_poly"], [193, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[193, 4, 1, "", "T"], [193, 2, 1, "", "as_expr"], [193, 4, 1, "", "generator"], [193, 4, 1, "", "is_rational"], [193, 2, 1, "", "norm"], [193, 2, 1, "", "numerator"], [193, 2, 1, "", "poly"], [193, 2, 1, "", "to_ANP"], [193, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[193, 4, 1, "", "QQ_matrix"], [193, 2, 1, "", "__init__"], [193, 2, 1, "", "add"], [193, 2, 1, "", "basis_element_pullbacks"], [193, 2, 1, "", "discard_before"], [193, 2, 1, "", "mul"], [193, 2, 1, "", "reduce_element"], [193, 2, 1, "", "reduced"], [193, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[193, 1, 1, "", "PrimeIdeal"], [193, 3, 1, "", "prime_decomp"], [193, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[193, 2, 1, "", "__add__"], [193, 2, 1, "", "__init__"], [193, 2, 1, "", "__mul__"], [193, 2, 1, "", "as_submodule"], [193, 4, 1, "", "is_inert"], [193, 2, 1, "", "reduce_ANP"], [193, 2, 1, "", "reduce_alg_num"], [193, 2, 1, "", "reduce_element"], [193, 2, 1, "", "repr"], [193, 2, 1, "", "test_factor"], [193, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[193, 3, 1, "", "field_isomorphism"], [193, 3, 1, "", "primitive_element"], [193, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[193, 1, 1, "", "AlgIntPowers"], [193, 3, 1, "", "coeff_search"], [193, 3, 1, "", "extract_fundamental_discriminant"], [193, 3, 1, "", "get_num_denom"], [193, 3, 1, "", "is_int"], [193, 3, 1, "", "is_rat"], [193, 3, 1, "", "isolate"], [193, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[193, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[194, 1, 1, "", "GradedLexOrder"], [194, 1, 1, "", "LexOrder"], [194, 1, 1, "", "MonomialOrder"], [194, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[194, 3, 1, "", "chebyshevt_poly"], [194, 3, 1, "", "chebyshevu_poly"], [194, 3, 1, "", "gegenbauer_poly"], [194, 3, 1, "", "hermite_poly"], [194, 3, 1, "", "jacobi_poly"], [194, 3, 1, "", "laguerre_poly"], [194, 3, 1, "", "legendre_poly"], [194, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[194, 3, 1, "", "apart"], [194, 3, 1, "", "apart_list"], [194, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[189, 1, 1, "", "ANP"], [189, 1, 1, "", "DMF"], [189, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[189, 2, 1, "", "LC"], [189, 2, 1, "", "TC"], [189, 4, 1, "", "is_ground"], [189, 4, 1, "", "is_one"], [189, 4, 1, "", "is_zero"], [189, 2, 1, "", "pow"], [189, 2, 1, "", "to_dict"], [189, 2, 1, "", "to_list"], [189, 2, 1, "", "to_sympy_dict"], [189, 2, 1, "", "to_sympy_list"], [189, 2, 1, "", "to_tuple"], [189, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[189, 2, 1, "", "add"], [189, 2, 1, "", "cancel"], [189, 2, 1, "", "denom"], [189, 2, 1, "", "exquo"], [189, 2, 1, "", "frac_unify"], [189, 2, 1, "", "half_per"], [189, 2, 1, "", "invert"], [189, 4, 1, "", "is_one"], [189, 4, 1, "", "is_zero"], [189, 2, 1, "", "mul"], [189, 2, 1, "", "neg"], [189, 2, 1, "", "numer"], [189, 2, 1, "", "per"], [189, 2, 1, "", "poly_unify"], [189, 2, 1, "", "pow"], [189, 2, 1, "", "quo"], [189, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[189, 2, 1, "", "LC"], [189, 2, 1, "", "TC"], [189, 2, 1, "", "abs"], [189, 2, 1, "", "add"], [189, 2, 1, "", "add_ground"], [189, 2, 1, "", "all_coeffs"], [189, 2, 1, "", "all_monoms"], [189, 2, 1, "", "all_terms"], [189, 2, 1, "", "cancel"], [189, 2, 1, "", "cauchy_lower_bound"], [189, 2, 1, "", "cauchy_upper_bound"], [189, 2, 1, "", "clear_denoms"], [189, 2, 1, "", "coeffs"], [189, 2, 1, "", "cofactors"], [189, 2, 1, "", "compose"], [189, 2, 1, "", "content"], [189, 2, 1, "", "convert"], [189, 2, 1, "", "count_complex_roots"], [189, 2, 1, "", "count_real_roots"], [189, 2, 1, "", "decompose"], [189, 2, 1, "", "deflate"], [189, 2, 1, "", "degree"], [189, 2, 1, "", "degree_list"], [189, 2, 1, "", "diff"], [189, 2, 1, "", "discriminant"], [189, 2, 1, "", "div"], [189, 2, 1, "", "eject"], [189, 2, 1, "", "eval"], [189, 2, 1, "", "exclude"], [189, 2, 1, "", "exquo"], [189, 2, 1, "", "exquo_ground"], [189, 2, 1, "", "factor_list"], [189, 2, 1, "", "factor_list_include"], [189, 2, 1, "", "from_dict"], [189, 2, 1, "", "from_list"], [189, 2, 1, "", "from_sympy_list"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "gcdex"], [189, 2, 1, "", "gff_list"], [189, 2, 1, "", "half_gcdex"], [189, 2, 1, "", "homogeneous_order"], [189, 2, 1, "", "homogenize"], [189, 2, 1, "", "inject"], [189, 2, 1, "", "integrate"], [189, 2, 1, "", "intervals"], [189, 2, 1, "", "invert"], [189, 4, 1, "", "is_cyclotomic"], [189, 4, 1, "", "is_ground"], [189, 4, 1, "", "is_homogeneous"], [189, 4, 1, "", "is_irreducible"], [189, 4, 1, "", "is_linear"], [189, 4, 1, "", "is_monic"], [189, 4, 1, "", "is_monomial"], [189, 4, 1, "", "is_one"], [189, 4, 1, "", "is_primitive"], [189, 4, 1, "", "is_quadratic"], [189, 4, 1, "", "is_sqf"], [189, 4, 1, "", "is_zero"], [189, 2, 1, "", "l1_norm"], [189, 2, 1, "", "l2_norm_squared"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "lift"], [189, 2, 1, "", "max_norm"], [189, 2, 1, "", "mignotte_sep_bound_squared"], [189, 2, 1, "", "monic"], [189, 2, 1, "", "monoms"], [189, 2, 1, "", "mul"], [189, 2, 1, "", "mul_ground"], [189, 2, 1, "", "neg"], [189, 2, 1, "", "norm"], [189, 2, 1, "", "nth"], [189, 2, 1, "", "pdiv"], [189, 2, 1, "", "per"], [189, 2, 1, "", "permute"], [189, 2, 1, "", "pexquo"], [189, 2, 1, "", "pow"], [189, 2, 1, "", "pquo"], [189, 2, 1, "", "prem"], [189, 2, 1, "", "primitive"], [189, 2, 1, "", "quo"], [189, 2, 1, "", "quo_ground"], [189, 2, 1, "", "refine_root"], [189, 2, 1, "", "rem"], [189, 2, 1, "", "resultant"], [189, 2, 1, "", "revert"], [189, 2, 1, "", "shift"], [189, 2, 1, "", "slice"], [189, 2, 1, "", "sqf_list"], [189, 2, 1, "", "sqf_list_include"], [189, 2, 1, "", "sqf_norm"], [189, 2, 1, "", "sqf_part"], [189, 2, 1, "", "sqr"], [189, 2, 1, "", "sturm"], [189, 2, 1, "", "sub"], [189, 2, 1, "", "sub_ground"], [189, 2, 1, "", "subresultants"], [189, 2, 1, "", "terms"], [189, 2, 1, "", "terms_gcd"], [189, 2, 1, "", "to_dict"], [189, 2, 1, "", "to_exact"], [189, 2, 1, "", "to_field"], [189, 2, 1, "", "to_list"], [189, 2, 1, "", "to_ring"], [189, 2, 1, "", "to_sympy_dict"], [189, 2, 1, "", "to_sympy_list"], [189, 2, 1, "", "to_tuple"], [189, 2, 1, "", "total_degree"], [189, 2, 1, "", "transform"], [189, 2, 1, "", "trunc"], [189, 2, 1, "", "unify"]], "sympy.polys": [[191, 0, 0, "-", "polyconfig"], [191, 0, 0, "-", "polyoptions"], [196, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[191, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[191, 1, 1, "", "BasePolynomialError"], [191, 1, 1, "", "CoercionFailed"], [191, 1, 1, "", "ComputationFailed"], [191, 1, 1, "", "DomainError"], [191, 1, 1, "", "EvaluationFailed"], [191, 1, 1, "", "ExactQuotientFailed"], [191, 1, 1, "", "ExtraneousFactors"], [191, 1, 1, "", "FlagError"], [191, 1, 1, "", "GeneratorsError"], [191, 1, 1, "", "GeneratorsNeeded"], [191, 1, 1, "", "HeuristicGCDFailed"], [191, 1, 1, "", "HomomorphismFailed"], [191, 1, 1, "", "IsomorphismFailed"], [191, 1, 1, "", "MultivariatePolynomialError"], [191, 1, 1, "", "NotAlgebraic"], [191, 1, 1, "", "NotInvertible"], [191, 1, 1, "", "NotReversible"], [191, 1, 1, "", "OperationNotSupported"], [191, 1, 1, "", "OptionError"], [191, 1, 1, "", "PolificationFailed"], [191, 1, 1, "", "PolynomialError"], [191, 1, 1, "", "RefinementFailed"], [191, 1, 1, "", "UnificationFailed"], [191, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[194, 3, 1, "", "horner"], [194, 3, 1, "", "interpolate"], [194, 3, 1, "", "symmetrize"], [194, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[191, 1, 1, "", "Options"], [191, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[191, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[194, 3, 1, "", "roots"]], "sympy.polys.polytools": [[194, 1, 1, "", "GroebnerBasis"], [194, 3, 1, "", "LC"], [194, 3, 1, "", "LM"], [194, 3, 1, "", "LT"], [194, 1, 1, "", "Poly"], [194, 1, 1, "", "PurePoly"], [194, 3, 1, "", "cancel"], [194, 3, 1, "", "cofactors"], [194, 3, 1, "", "compose"], [194, 3, 1, "", "content"], [194, 3, 1, "", "count_roots"], [194, 3, 1, "", "decompose"], [194, 3, 1, "", "degree"], [194, 3, 1, "", "degree_list"], [194, 3, 1, "", "discriminant"], [194, 3, 1, "", "div"], [194, 3, 1, "", "exquo"], [194, 3, 1, "", "factor"], [194, 3, 1, "", "factor_list"], [194, 3, 1, "", "gcd"], [194, 3, 1, "", "gcd_list"], [194, 3, 1, "", "gcdex"], [194, 3, 1, "", "gff"], [194, 3, 1, "", "gff_list"], [194, 3, 1, "", "groebner"], [194, 3, 1, "", "ground_roots"], [194, 3, 1, "", "half_gcdex"], [194, 3, 1, "", "intervals"], [194, 3, 1, "", "invert"], [194, 3, 1, "", "is_zero_dimensional"], [194, 3, 1, "", "lcm"], [194, 3, 1, "", "lcm_list"], [194, 3, 1, "", "monic"], [194, 3, 1, "", "nroots"], [194, 3, 1, "", "nth_power_roots_poly"], [194, 3, 1, "", "parallel_poly_from_expr"], [194, 3, 1, "", "pdiv"], [194, 3, 1, "", "pexquo"], [194, 3, 1, "", "poly"], [194, 3, 1, "", "poly_from_expr"], [194, 3, 1, "", "pquo"], [194, 3, 1, "", "prem"], [194, 3, 1, "", "primitive"], [194, 3, 1, "", "quo"], [194, 3, 1, "", "real_roots"], [194, 3, 1, "", "reduced"], [194, 3, 1, "", "refine_root"], [194, 3, 1, "", "rem"], [194, 3, 1, "", "resultant"], [194, 3, 1, "", "sqf"], [194, 3, 1, "", "sqf_list"], [194, 3, 1, "", "sqf_norm"], [194, 3, 1, "", "sqf_part"], [194, 3, 1, "", "sturm"], [194, 3, 1, "", "subresultants"], [194, 3, 1, "", "terms_gcd"], [194, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[194, 2, 1, "", "contains"], [194, 2, 1, "", "fglm"], [194, 4, 1, "", "is_zero_dimensional"], [194, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[194, 2, 1, "", "EC"], [194, 2, 1, "", "EM"], [194, 2, 1, "", "ET"], [194, 2, 1, "", "LC"], [194, 2, 1, "", "LM"], [194, 2, 1, "", "LT"], [194, 2, 1, "", "TC"], [194, 2, 1, "", "abs"], [194, 2, 1, "", "add"], [194, 2, 1, "", "add_ground"], [194, 2, 1, "", "all_coeffs"], [194, 2, 1, "", "all_monoms"], [194, 2, 1, "", "all_roots"], [194, 2, 1, "", "all_terms"], [194, 2, 1, "", "as_dict"], [194, 2, 1, "", "as_expr"], [194, 2, 1, "", "as_list"], [194, 2, 1, "", "as_poly"], [194, 2, 1, "", "cancel"], [194, 2, 1, "", "clear_denoms"], [194, 2, 1, "", "coeff_monomial"], [194, 2, 1, "", "coeffs"], [194, 2, 1, "", "cofactors"], [194, 2, 1, "", "compose"], [194, 2, 1, "", "content"], [194, 2, 1, "", "count_roots"], [194, 2, 1, "", "decompose"], [194, 2, 1, "", "deflate"], [194, 2, 1, "", "degree"], [194, 2, 1, "", "degree_list"], [194, 2, 1, "", "diff"], [194, 2, 1, "", "discriminant"], [194, 2, 1, "", "dispersion"], [194, 2, 1, "", "dispersionset"], [194, 2, 1, "", "div"], [194, 4, 1, "", "domain"], [194, 2, 1, "", "eject"], [194, 2, 1, "", "eval"], [194, 2, 1, "", "exclude"], [194, 2, 1, "", "exquo"], [194, 2, 1, "", "exquo_ground"], [194, 2, 1, "", "factor_list"], [194, 2, 1, "", "factor_list_include"], [194, 4, 1, "", "free_symbols"], [194, 4, 1, "", "free_symbols_in_domain"], [194, 2, 1, "", "from_dict"], [194, 2, 1, "", "from_expr"], [194, 2, 1, "", "from_list"], [194, 2, 1, "", "from_poly"], [194, 2, 1, "", "gcd"], [194, 2, 1, "", "gcdex"], [194, 4, 1, "", "gen"], [194, 2, 1, "", "get_domain"], [194, 2, 1, "", "get_modulus"], [194, 2, 1, "", "gff_list"], [194, 2, 1, "", "ground_roots"], [194, 2, 1, "", "half_gcdex"], [194, 2, 1, "", "has_only_gens"], [194, 2, 1, "", "homogeneous_order"], [194, 2, 1, "", "homogenize"], [194, 2, 1, "", "inject"], [194, 2, 1, "", "integrate"], [194, 2, 1, "", "intervals"], [194, 2, 1, "", "invert"], [194, 4, 1, "", "is_cyclotomic"], [194, 4, 1, "", "is_ground"], [194, 4, 1, "", "is_homogeneous"], [194, 4, 1, "", "is_irreducible"], [194, 4, 1, "", "is_linear"], [194, 4, 1, "", "is_monic"], [194, 4, 1, "", "is_monomial"], [194, 4, 1, "", "is_multivariate"], [194, 4, 1, "", "is_one"], [194, 4, 1, "", "is_primitive"], [194, 4, 1, "", "is_quadratic"], [194, 4, 1, "", "is_sqf"], [194, 4, 1, "", "is_univariate"], [194, 4, 1, "", "is_zero"], [194, 2, 1, "", "l1_norm"], [194, 2, 1, "", "lcm"], [194, 2, 1, "", "length"], [194, 2, 1, "", "lift"], [194, 2, 1, "", "ltrim"], [194, 2, 1, "", "match"], [194, 2, 1, "", "max_norm"], [194, 2, 1, "", "monic"], [194, 2, 1, "", "monoms"], [194, 2, 1, "", "mul"], [194, 2, 1, "", "mul_ground"], [194, 2, 1, "", "neg"], [194, 2, 1, "", "new"], [194, 2, 1, "", "norm"], [194, 2, 1, "", "nroots"], [194, 2, 1, "", "nth"], [194, 2, 1, "", "nth_power_roots_poly"], [194, 4, 1, "", "one"], [194, 2, 1, "", "pdiv"], [194, 2, 1, "", "per"], [194, 2, 1, "", "pexquo"], [194, 2, 1, "", "pow"], [194, 2, 1, "", "pquo"], [194, 2, 1, "", "prem"], [194, 2, 1, "", "primitive"], [194, 2, 1, "", "quo"], [194, 2, 1, "", "quo_ground"], [194, 2, 1, "", "rat_clear_denoms"], [194, 2, 1, "", "real_roots"], [194, 2, 1, "", "refine_root"], [194, 2, 1, "", "rem"], [194, 2, 1, "", "reorder"], [194, 2, 1, "", "replace"], [194, 2, 1, "", "resultant"], [194, 2, 1, "", "retract"], [194, 2, 1, "", "revert"], [194, 2, 1, "", "root"], [194, 2, 1, "", "same_root"], [194, 2, 1, "", "set_domain"], [194, 2, 1, "", "set_modulus"], [194, 2, 1, "", "shift"], [194, 2, 1, "", "slice"], [194, 2, 1, "", "sqf_list"], [194, 2, 1, "", "sqf_list_include"], [194, 2, 1, "", "sqf_norm"], [194, 2, 1, "", "sqf_part"], [194, 2, 1, "", "sqr"], [194, 2, 1, "", "sturm"], [194, 2, 1, "", "sub"], [194, 2, 1, "", "sub_ground"], [194, 2, 1, "", "subresultants"], [194, 2, 1, "", "terms"], [194, 2, 1, "", "terms_gcd"], [194, 2, 1, "", "termwise"], [194, 2, 1, "", "to_exact"], [194, 2, 1, "", "to_field"], [194, 2, 1, "", "to_ring"], [194, 2, 1, "", "total_degree"], [194, 2, 1, "", "transform"], [194, 2, 1, "", "trunc"], [194, 2, 1, "", "unify"], [194, 4, 1, "", "unit"], [194, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[194, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[194, 3, 1, "", "together"]], "sympy.polys.ring_series": [[195, 3, 1, "", "_tan1"], [195, 3, 1, "", "mul_xin"], [195, 3, 1, "", "pow_xin"], [195, 3, 1, "", "rs_LambertW"], [195, 3, 1, "", "rs_asin"], [195, 3, 1, "", "rs_atan"], [195, 3, 1, "", "rs_atanh"], [195, 3, 1, "", "rs_compose_add"], [195, 3, 1, "", "rs_cos"], [195, 3, 1, "", "rs_cos_sin"], [195, 3, 1, "", "rs_cosh"], [195, 3, 1, "", "rs_cot"], [195, 3, 1, "", "rs_diff"], [195, 3, 1, "", "rs_exp"], [195, 3, 1, "", "rs_fun"], [195, 3, 1, "", "rs_hadamard_exp"], [195, 3, 1, "", "rs_integrate"], [195, 3, 1, "", "rs_is_puiseux"], [195, 3, 1, "", "rs_log"], [195, 3, 1, "", "rs_mul"], [195, 3, 1, "", "rs_newton"], [195, 3, 1, "", "rs_nth_root"], [195, 3, 1, "", "rs_pow"], [195, 3, 1, "", "rs_puiseux"], [195, 3, 1, "", "rs_puiseux2"], [195, 3, 1, "", "rs_series_from_list"], [195, 3, 1, "", "rs_series_inversion"], [195, 3, 1, "", "rs_series_reversion"], [195, 3, 1, "", "rs_sin"], [195, 3, 1, "", "rs_sinh"], [195, 3, 1, "", "rs_square"], [195, 3, 1, "", "rs_subs"], [195, 3, 1, "", "rs_tan"], [195, 3, 1, "", "rs_tanh"], [195, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[189, 1, 1, "", "PolyElement"], [189, 1, 1, "", "PolyRing"], [189, 3, 1, "", "ring"], [189, 3, 1, "", "sring"], [189, 3, 1, "", "vring"], [189, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[189, 2, 1, "", "almosteq"], [189, 2, 1, "", "cancel"], [189, 2, 1, "", "coeff"], [189, 2, 1, "", "coeffs"], [189, 2, 1, "", "const"], [189, 2, 1, "", "content"], [189, 2, 1, "", "copy"], [189, 2, 1, "", "degree"], [189, 2, 1, "", "degrees"], [189, 2, 1, "", "diff"], [189, 2, 1, "", "div"], [189, 2, 1, "", "imul_num"], [189, 2, 1, "", "itercoeffs"], [189, 2, 1, "", "itermonoms"], [189, 2, 1, "", "iterterms"], [189, 2, 1, "", "leading_expv"], [189, 2, 1, "", "leading_monom"], [189, 2, 1, "", "leading_term"], [189, 2, 1, "", "listcoeffs"], [189, 2, 1, "", "listmonoms"], [189, 2, 1, "", "listterms"], [189, 2, 1, "", "monic"], [189, 2, 1, "", "monoms"], [189, 2, 1, "", "primitive"], [189, 2, 1, "", "square"], [189, 2, 1, "", "strip_zero"], [189, 2, 1, "", "tail_degree"], [189, 2, 1, "", "tail_degrees"], [189, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[189, 2, 1, "", "add"], [189, 2, 1, "", "add_gens"], [189, 2, 1, "", "compose"], [189, 2, 1, "", "drop"], [189, 2, 1, "", "drop_to_ground"], [189, 2, 1, "", "index"], [189, 2, 1, "", "monomial_basis"], [189, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[194, 1, 1, "", "ComplexRootOf"], [194, 1, 1, "", "RootOf"], [194, 1, 1, "", "RootSum"], [194, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[194, 2, 1, "", "_all_roots"], [194, 2, 1, "", "_complexes_index"], [194, 2, 1, "", "_complexes_sorted"], [194, 2, 1, "", "_count_roots"], [194, 2, 1, "", "_ensure_complexes_init"], [194, 2, 1, "", "_ensure_reals_init"], [194, 2, 1, "", "_eval_evalf"], [194, 2, 1, "", "_eval_is_imaginary"], [194, 2, 1, "", "_eval_is_real"], [194, 2, 1, "", "_get_complexes"], [194, 2, 1, "", "_get_complexes_sqf"], [194, 2, 1, "", "_get_interval"], [194, 2, 1, "", "_get_reals"], [194, 2, 1, "", "_get_reals_sqf"], [194, 2, 1, "", "_get_roots"], [194, 2, 1, "", "_indexed_root"], [194, 2, 1, "", "_new"], [194, 2, 1, "", "_postprocess_root"], [194, 2, 1, "", "_preprocess_roots"], [194, 2, 1, "", "_real_roots"], [194, 2, 1, "", "_reals_index"], [194, 2, 1, "", "_reals_sorted"], [194, 2, 1, "", "_refine_complexes"], [194, 2, 1, "", "_reset"], [194, 2, 1, "", "_roots_trivial"], [194, 2, 1, "", "_set_interval"], [194, 2, 1, "", "all_roots"], [194, 2, 1, "", "clear_cache"], [194, 2, 1, "", "eval_approx"], [194, 2, 1, "", "eval_rational"], [194, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[194, 2, 1, "", "new"]], "sympy.polys.solvers": [[196, 3, 1, "", "_solve_lin_sys"], [196, 3, 1, "", "_solve_lin_sys_component"], [196, 3, 1, "", "eqs_to_matrix"], [196, 3, 1, "", "solve_lin_sys"], [196, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[194, 3, 1, "", "cyclotomic_poly"], [194, 3, 1, "", "interpolating_poly"], [194, 3, 1, "", "random_poly"], [194, 3, 1, "", "swinnerton_dyer_poly"], [194, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[198, 0, 0, "-", "aesaracode"], [198, 0, 0, "-", "c"], [198, 0, 0, "-", "codeprinter"], [198, 0, 0, "-", "conventions"], [198, 0, 0, "-", "cxx"], [198, 0, 0, "-", "fortran"], [198, 0, 0, "-", "gtk"], [198, 0, 0, "-", "jscode"], [198, 0, 0, "-", "julia"], [198, 0, 0, "-", "lambdarepr"], [198, 0, 0, "-", "latex"], [198, 0, 0, "-", "maple"], [198, 0, 0, "-", "mathematica"], [198, 0, 0, "-", "mathml"], [198, 0, 0, "-", "octave"], [198, 0, 0, "-", "precedence"], [198, 0, 0, "-", "pretty"], [198, 0, 0, "-", "preview"], [198, 0, 0, "-", "printer"], [198, 0, 0, "-", "pycode"], [198, 0, 0, "-", "python"], [198, 0, 0, "-", "rcode"], [198, 0, 0, "-", "repr"], [198, 0, 0, "-", "rust"], [198, 0, 0, "-", "str"], [198, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[198, 1, 1, "", "AesaraPrinter"], [198, 3, 1, "", "aesara_code"], [198, 3, 1, "", "aesara_function"], [198, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[198, 2, 1, "", "doprint"], [198, 5, 1, "", "printmethod"]], "sympy.printing.c": [[198, 1, 1, "", "C89CodePrinter"], [198, 1, 1, "", "C99CodePrinter"], [198, 3, 1, "", "ccode"], [198, 6, 1, "", "known_functions_C89"], [198, 6, 1, "", "known_functions_C99"], [198, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[198, 2, 1, "", "indent_code"], [198, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[198, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[198, 7, 1, "", "AssignmentError"], [198, 1, 1, "", "CodePrinter"], [198, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[198, 2, 1, "", "doprint"], [198, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[198, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[198, 1, 1, "", "CXX11CodePrinter"], [198, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[198, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[198, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[198, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[198, 1, 1, "", "FCodePrinter"], [198, 3, 1, "", "fcode"], [198, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[198, 2, 1, "", "indent_code"], [198, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[198, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[198, 1, 1, "", "JavascriptCodePrinter"], [198, 3, 1, "", "jscode"], [198, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[198, 2, 1, "", "indent_code"], [198, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[198, 1, 1, "", "JuliaCodePrinter"], [198, 3, 1, "", "julia_code"], [198, 6, 1, "", "known_fcns_src1"], [198, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[198, 2, 1, "", "indent_code"], [198, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[198, 1, 1, "", "LambdaPrinter"], [198, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[198, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[198, 1, 1, "", "LatexPrinter"], [198, 6, 1, "", "accepted_latex_functions"], [198, 3, 1, "", "latex"], [198, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[198, 2, 1, "", "parenthesize_super"], [198, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[198, 1, 1, "", "MapleCodePrinter"], [198, 3, 1, "", "maple_code"], [198, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[198, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[198, 1, 1, "", "MCodePrinter"], [198, 6, 1, "", "known_functions"], [198, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[198, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[198, 1, 1, "", "MathMLContentPrinter"], [198, 1, 1, "", "MathMLPresentationPrinter"], [198, 1, 1, "", "MathMLPrinterBase"], [198, 3, 1, "", "mathml"], [198, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[198, 2, 1, "", "mathml_tag"], [198, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[198, 2, 1, "", "mathml_tag"], [198, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[198, 2, 1, "", "doprint"]], "sympy.printing.octave": [[198, 1, 1, "", "OctaveCodePrinter"], [198, 6, 1, "", "known_fcns_src1"], [198, 6, 1, "", "known_fcns_src2"], [198, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[198, 2, 1, "", "indent_code"], [198, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[198, 6, 1, "", "PRECEDENCE"], [198, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [198, 6, 1, "", "PRECEDENCE_VALUES"], [198, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[198, 0, 0, "-", "pretty"], [198, 0, 0, "-", "pretty_symbology"], [198, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[198, 1, 1, "", "PrettyPrinter"], [198, 3, 1, "", "pretty"], [198, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[198, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[198, 3, 1, "", "G"], [198, 3, 1, "", "U"], [198, 3, 1, "", "VF"], [198, 3, 1, "", "annotated"], [198, 6, 1, "", "atoms_table"], [198, 6, 1, "", "digit_2txt"], [198, 6, 1, "", "frac"], [198, 3, 1, "", "g"], [198, 6, 1, "", "greek_letters"], [198, 3, 1, "", "hobj"], [198, 3, 1, "", "pretty_atom"], [198, 3, 1, "", "pretty_symbol"], [198, 3, 1, "", "pretty_try_use_unicode"], [198, 3, 1, "", "pretty_use_unicode"], [198, 6, 1, "", "root"], [198, 6, 1, "", "sub"], [198, 6, 1, "", "sup"], [198, 6, 1, "", "symb_2txt"], [198, 3, 1, "", "vobj"], [198, 3, 1, "", "xobj"], [198, 3, 1, "", "xstr"], [198, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[198, 1, 1, "", "prettyForm"], [198, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[198, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[198, 2, 1, "", "above"], [198, 2, 1, "", "below"], [198, 2, 1, "", "height"], [198, 2, 1, "", "left"], [198, 2, 1, "", "leftslash"], [198, 2, 1, "", "next"], [198, 2, 1, "", "parens"], [198, 2, 1, "", "render"], [198, 2, 1, "", "right"], [198, 2, 1, "", "root"], [198, 2, 1, "", "stack"], [198, 2, 1, "", "terminal_width"], [198, 2, 1, "", "width"]], "sympy.printing.preview": [[198, 3, 1, "", "preview"]], "sympy.printing.printer": [[198, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[198, 2, 1, "", "_print"], [198, 2, 1, "", "doprint"], [198, 5, 1, "", "printmethod"], [198, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[198, 1, 1, "", "MpmathPrinter"], [198, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[198, 1, 1, "", "RCodePrinter"], [198, 6, 1, "", "known_functions"], [198, 3, 1, "", "print_rcode"], [198, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[198, 2, 1, "", "indent_code"], [198, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[198, 1, 1, "", "ReprPrinter"], [198, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[198, 2, 1, "", "emptyPrinter"], [198, 5, 1, "", "printmethod"], [198, 2, 1, "", "reprify"]], "sympy.printing.rust": [[198, 1, 1, "", "RustCodePrinter"], [198, 6, 1, "", "known_functions"], [198, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[198, 2, 1, "", "indent_code"], [198, 5, 1, "", "printmethod"]], "sympy.printing.str": [[198, 1, 1, "", "StrPrinter"], [198, 3, 1, "", "sstr"], [198, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[198, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[198, 3, 1, "", "pprint_nodes"], [198, 3, 1, "", "print_node"], [198, 3, 1, "", "print_tree"], [198, 3, 1, "", "tree"]], "sympy.series.acceleration": [[205, 3, 1, "", "richardson"], [205, 3, 1, "", "shanks"]], "sympy.series.formal": [[200, 1, 1, "", "FiniteFormalPowerSeries"], [200, 1, 1, "", "FormalPowerSeries"], [200, 1, 1, "", "FormalPowerSeriesCompose"], [200, 1, 1, "", "FormalPowerSeriesInverse"], [200, 1, 1, "", "FormalPowerSeriesProduct"], [200, 3, 1, "", "compute_fps"], [200, 3, 1, "", "exp_re"], [200, 3, 1, "", "fps"], [200, 3, 1, "", "hyper_algorithm"], [200, 3, 1, "", "hyper_re"], [200, 3, 1, "", "rational_algorithm"], [200, 3, 1, "", "rational_independent"], [200, 3, 1, "", "rsolve_hypergeometric"], [200, 3, 1, "", "simpleDE"], [200, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[200, 2, 1, "", "coeff_bell"], [200, 2, 1, "", "compose"], [200, 4, 1, "", "infinite"], [200, 2, 1, "", "integrate"], [200, 2, 1, "", "inverse"], [200, 2, 1, "", "polynomial"], [200, 2, 1, "", "product"], [200, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[200, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[200, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[200, 4, 1, "", "function"]], "sympy.series.fourier": [[201, 1, 1, "", "FourierSeries"], [201, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[201, 2, 1, "", "scale"], [201, 2, 1, "", "scalex"], [201, 2, 1, "", "shift"], [201, 2, 1, "", "shiftx"], [201, 2, 1, "", "sigma_approximation"], [201, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[205, 1, 1, "", "SubsSet"], [205, 3, 1, "", "build_expression_tree"], [205, 3, 1, "", "calculate_series"], [205, 3, 1, "", "compare"], [205, 3, 1, "", "gruntz"], [205, 3, 1, "", "limitinf"], [205, 3, 1, "", "mrv"], [205, 3, 1, "", "mrv_leadterm"], [205, 3, 1, "", "mrv_max1"], [205, 3, 1, "", "mrv_max3"], [205, 3, 1, "", "rewrite"], [205, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[205, 2, 1, "", "copy"], [205, 2, 1, "", "do_subs"], [205, 2, 1, "", "meets"], [205, 2, 1, "", "union"]], "sympy.series.limits": [[205, 1, 1, "", "Limit"], [205, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[205, 2, 1, "", "doit"]], "sympy.series.limitseq": [[203, 3, 1, "", "difference_delta"], [203, 3, 1, "", "dominant"], [203, 3, 1, "", "limit_seq"]], "sympy.series.order": [[205, 1, 1, "", "Order"]], "sympy.series.order.Order": [[205, 2, 1, "", "contains"]], "sympy.series.residues": [[205, 3, 1, "", "residue"]], "sympy.series.sequences": [[204, 1, 1, "", "EmptySequence"], [204, 1, 1, "", "RecursiveSeq"], [204, 1, 1, "", "SeqAdd"], [204, 1, 1, "", "SeqBase"], [204, 1, 1, "", "SeqFormula"], [204, 1, 1, "", "SeqMul"], [204, 1, 1, "", "SeqPer"], [204, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[204, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[204, 4, 1, "", "initial"], [204, 4, 1, "", "interval"], [204, 4, 1, "", "n"], [204, 4, 1, "", "recurrence"], [204, 4, 1, "", "start"], [204, 4, 1, "", "stop"], [204, 4, 1, "", "y"], [204, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[204, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[204, 2, 1, "", "coeff"], [204, 2, 1, "", "coeff_mul"], [204, 2, 1, "", "find_linear_recurrence"], [204, 4, 1, "", "free_symbols"], [204, 4, 1, "", "gen"], [204, 4, 1, "", "interval"], [204, 4, 1, "", "length"], [204, 4, 1, "", "start"], [204, 4, 1, "", "stop"], [204, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[204, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[204, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[204, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[205, 3, 1, "", "series"]], "sympy.sets": [[206, 0, 0, "-", "conditionset"], [206, 0, 0, "-", "fancysets"], [206, 0, 0, "-", "powerset"], [206, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[206, 1, 1, "", "ConditionSet"], [206, 1, 1, "", "Contains"], [206, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[206, 1, 1, "", "CartesianComplexRegion"], [206, 1, 1, "", "ComplexRegion"], [206, 1, 1, "", "Complexes"], [206, 1, 1, "", "ImageSet"], [206, 1, 1, "", "Integers"], [206, 1, 1, "", "Naturals"], [206, 1, 1, "", "Naturals0"], [206, 1, 1, "", "PolarComplexRegion"], [206, 1, 1, "", "Range"], [206, 1, 1, "", "Rationals"], [206, 1, 1, "", "Reals"], [206, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[206, 4, 1, "", "a_interval"], [206, 4, 1, "", "b_interval"], [206, 2, 1, "", "from_real"], [206, 4, 1, "", "psets"], [206, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[206, 2, 1, "", "as_relational"], [206, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[206, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[206, 1, 1, "", "Complement"], [206, 1, 1, "", "DisjointUnion"], [206, 1, 1, "", "EmptySet"], [206, 1, 1, "", "FiniteSet"], [206, 1, 1, "", "Intersection"], [206, 1, 1, "", "Interval"], [206, 1, 1, "", "ProductSet"], [206, 1, 1, "", "Set"], [206, 1, 1, "", "SymmetricDifference"], [206, 1, 1, "", "Union"], [206, 1, 1, "", "UniversalSet"], [206, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[206, 2, 1, "", "as_relational"], [206, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[206, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[206, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[206, 2, 1, "", "Lopen"], [206, 2, 1, "", "Ropen"], [206, 2, 1, "", "as_relational"], [206, 4, 1, "", "end"], [206, 4, 1, "", "is_left_unbounded"], [206, 4, 1, "", "is_right_unbounded"], [206, 4, 1, "", "left_open"], [206, 2, 1, "", "open"], [206, 4, 1, "", "right_open"], [206, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[206, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[206, 4, 1, "", "boundary"], [206, 4, 1, "", "closure"], [206, 2, 1, "", "complement"], [206, 2, 1, "", "contains"], [206, 4, 1, "", "inf"], [206, 4, 1, "", "interior"], [206, 2, 1, "", "intersect"], [206, 2, 1, "", "intersection"], [206, 4, 1, "", "is_closed"], [206, 2, 1, "", "is_disjoint"], [206, 4, 1, "", "is_open"], [206, 2, 1, "", "is_proper_subset"], [206, 2, 1, "", "is_proper_superset"], [206, 2, 1, "", "is_subset"], [206, 2, 1, "", "is_superset"], [206, 2, 1, "", "isdisjoint"], [206, 2, 1, "", "issubset"], [206, 2, 1, "", "issuperset"], [206, 4, 1, "", "kind"], [206, 4, 1, "", "measure"], [206, 2, 1, "", "powerset"], [206, 4, 1, "", "sup"], [206, 2, 1, "", "symmetric_difference"], [206, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[206, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[206, 2, 1, "", "as_relational"]], "sympy.simplify": [[210, 0, 0, "-", "combsimp"], [210, 0, 0, "-", "cse_main"], [210, 0, 0, "-", "epathtools"], [210, 0, 0, "-", "hyperexpand"], [208, 0, 0, "-", "hyperexpand_doc"], [210, 0, 0, "-", "powsimp"], [210, 0, 0, "-", "radsimp"], [210, 0, 0, "-", "ratsimp"], [11, 0, 0, "-", "simplify"], [210, 0, 0, "-", "sqrtdenest"], [210, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[210, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[210, 3, 1, "", "cse"], [210, 3, 1, "", "opt_cse"], [210, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[210, 1, 1, "", "EPath"], [210, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[210, 2, 1, "", "apply"], [210, 2, 1, "", "select"]], "sympy.simplify.fu": [[207, 3, 1, "", "TR0"], [207, 3, 1, "", "TR1"], [207, 3, 1, "", "TR10"], [207, 3, 1, "", "TR10i"], [207, 3, 1, "", "TR11"], [207, 3, 1, "", "TR111"], [207, 3, 1, "", "TR12"], [207, 3, 1, "", "TR12i"], [207, 3, 1, "", "TR13"], [207, 3, 1, "", "TR14"], [207, 3, 1, "", "TR15"], [207, 3, 1, "", "TR16"], [207, 3, 1, "", "TR2"], [207, 3, 1, "", "TR22"], [207, 3, 1, "", "TR2i"], [207, 3, 1, "", "TR3"], [207, 3, 1, "", "TR4"], [207, 3, 1, "", "TR5"], [207, 3, 1, "", "TR6"], [207, 3, 1, "", "TR7"], [207, 3, 1, "", "TR8"], [207, 3, 1, "", "TR9"], [207, 3, 1, "", "TRmorrie"], [207, 3, 1, "", "TRpower"], [207, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[210, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[210, 3, 1, "", "powdenest"], [210, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[210, 3, 1, "", "collect"], [210, 3, 1, "", "collect_const"], [210, 3, 1, "", "collect_sqrt"], [210, 3, 1, "", "fraction"], [210, 3, 1, "", "rad_rationalize"], [210, 3, 1, "", "radsimp"], [210, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[210, 3, 1, "", "ratsimp"], [210, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[210, 3, 1, "", "besselsimp"], [210, 3, 1, "", "hypersimilar"], [210, 3, 1, "", "hypersimp"], [210, 3, 1, "", "kroneckersimp"], [210, 3, 1, "", "logcombine"], [210, 3, 1, "", "nsimplify"], [210, 3, 1, "", "nthroot"], [210, 3, 1, "", "posify"], [210, 3, 1, "", "separatevars"], [210, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[210, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[210, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[216, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[211, 1, 1, "", "BinaryQuadratic"], [211, 1, 1, "", "CubicThue"], [211, 1, 1, "", "DiophantineEquationType"], [211, 1, 1, "", "DiophantineSolutionSet"], [211, 1, 1, "", "GeneralPythagorean"], [211, 1, 1, "", "GeneralSumOfEvenPowers"], [211, 1, 1, "", "GeneralSumOfSquares"], [211, 1, 1, "", "HomogeneousGeneralQuadratic"], [211, 1, 1, "", "HomogeneousTernaryQuadratic"], [211, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [211, 1, 1, "", "InhomogeneousGeneralQuadratic"], [211, 1, 1, "", "InhomogeneousTernaryQuadratic"], [211, 1, 1, "", "Linear"], [211, 3, 1, "", "PQa"], [211, 1, 1, "", "Univariate"], [211, 3, 1, "", "base_solution_linear"], [211, 3, 1, "", "classify_diop"], [211, 3, 1, "", "cornacchia"], [211, 3, 1, "", "descent"], [211, 3, 1, "", "diop_DN"], [211, 3, 1, "", "diop_bf_DN"], [211, 3, 1, "", "diop_general_pythagorean"], [211, 3, 1, "", "diop_general_sum_of_even_powers"], [211, 3, 1, "", "diop_general_sum_of_squares"], [211, 3, 1, "", "diop_linear"], [211, 3, 1, "", "diop_quadratic"], [211, 3, 1, "", "diop_solve"], [211, 3, 1, "", "diop_ternary_quadratic"], [211, 3, 1, "", "diop_ternary_quadratic_normal"], [211, 3, 1, "", "diophantine"], [211, 3, 1, "", "divisible"], [211, 3, 1, "", "equivalent"], [211, 3, 1, "", "find_DN"], [211, 3, 1, "", "gaussian_reduce"], [211, 3, 1, "", "holzer"], [211, 3, 1, "", "ldescent"], [211, 3, 1, "", "merge_solution"], [211, 3, 1, "", "parametrize_ternary_quadratic"], [211, 3, 1, "", "partition"], [211, 3, 1, "", "power_representation"], [211, 3, 1, "", "prime_as_sum_of_two_squares"], [211, 3, 1, "", "reconstruct"], [211, 3, 1, "", "sqf_normal"], [211, 3, 1, "", "square_factor"], [211, 3, 1, "", "sum_of_four_squares"], [211, 3, 1, "", "sum_of_powers"], [211, 3, 1, "", "sum_of_squares"], [211, 3, 1, "", "sum_of_three_squares"], [211, 3, 1, "", "transformation_to_DN"], [211, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[211, 2, 1, "", "matches"]], "sympy.solvers": [[213, 0, 0, "-", "inequalities"], [214, 0, 0, "-", "ode"], [215, 0, 0, "-", "pde"], [216, 0, 0, "-", "recurr"], [217, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[213, 3, 1, "", "reduce_abs_inequalities"], [213, 3, 1, "", "reduce_abs_inequality"], [213, 3, 1, "", "reduce_inequalities"], [213, 3, 1, "", "reduce_rational_inequalities"], [213, 3, 1, "", "solve_poly_inequalities"], [213, 3, 1, "", "solve_poly_inequality"], [213, 3, 1, "", "solve_rational_inequalities"], [213, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[214, 6, 1, "", "allhints"], [214, 3, 1, "", "checkinfsol"], [214, 3, 1, "", "checkodesol"], [214, 3, 1, "", "classify_ode"], [214, 3, 1, "", "constantsimp"], [214, 3, 1, "", "dsolve"], [214, 3, 1, "", "homogeneous_order"], [214, 3, 1, "", "infinitesimals"], [214, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[214, 3, 1, "", "lie_heuristic_abaco1_product"], [214, 3, 1, "", "lie_heuristic_abaco1_simple"], [214, 3, 1, "", "lie_heuristic_abaco2_similar"], [214, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [214, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [214, 3, 1, "", "lie_heuristic_bivariate"], [214, 3, 1, "", "lie_heuristic_chi"], [214, 3, 1, "", "lie_heuristic_function_sum"], [214, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[214, 3, 1, "", "_handle_Integral"], [214, 3, 1, "", "_linear_2eq_order1_type6"], [214, 3, 1, "", "_linear_2eq_order1_type7"], [214, 3, 1, "", "_nonlinear_2eq_order1_type1"], [214, 3, 1, "", "_nonlinear_2eq_order1_type2"], [214, 3, 1, "", "_nonlinear_2eq_order1_type3"], [214, 3, 1, "", "_nonlinear_2eq_order1_type4"], [214, 3, 1, "", "_nonlinear_2eq_order1_type5"], [214, 3, 1, "", "_nonlinear_3eq_order1_type1"], [214, 3, 1, "", "_nonlinear_3eq_order1_type2"], [214, 3, 1, "", "_nonlinear_3eq_order1_type3"], [214, 3, 1, "", "_nonlinear_3eq_order1_type4"], [214, 3, 1, "", "_nonlinear_3eq_order1_type5"], [214, 3, 1, "", "constant_renumber"], [214, 3, 1, "", "ode_1st_power_series"], [214, 3, 1, "", "ode_2nd_power_series_ordinary"], [214, 3, 1, "", "ode_2nd_power_series_regular"], [214, 3, 1, "", "ode_sol_simplicity"], [214, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[214, 3, 1, "", "compute_m_ybar"], [214, 3, 1, "", "construct_c"], [214, 3, 1, "", "construct_d"], [214, 3, 1, "", "get_gen_sol_from_part_sol"], [214, 3, 1, "", "rational_laurent_series"], [214, 3, 1, "", "remove_redundant_sols"], [214, 3, 1, "", "riccati_inverse_normal"], [214, 3, 1, "", "riccati_normal"], [214, 3, 1, "", "riccati_reduced"], [214, 3, 1, "", "solve_aux_eq"], [214, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[214, 1, 1, "", "AlmostLinear"], [214, 1, 1, "", "Bernoulli"], [214, 1, 1, "", "Factorable"], [214, 1, 1, "", "FirstExact"], [214, 1, 1, "", "FirstLinear"], [214, 1, 1, "", "HomogeneousCoeffBest"], [214, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [214, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [214, 1, 1, "", "LieGroup"], [214, 1, 1, "", "LinearCoefficients"], [214, 1, 1, "", "Liouville"], [214, 1, 1, "", "NthAlgebraic"], [214, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [214, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [214, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [214, 1, 1, "", "NthLinearEulerEqHomogeneous"], [214, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [214, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [214, 1, 1, "", "NthOrderReducible"], [214, 1, 1, "", "RationalRiccati"], [214, 1, 1, "", "RiccatiSpecial"], [214, 1, 1, "", "SecondHypergeometric"], [214, 1, 1, "", "SecondLinearAiry"], [214, 1, 1, "", "SecondLinearBessel"], [214, 1, 1, "", "Separable"], [214, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[214, 3, 1, "", "canonical_odes"], [214, 3, 1, "", "dsolve_system"], [214, 3, 1, "", "linear_ode_to_matrix"], [214, 3, 1, "", "linodesolve"], [214, 3, 1, "", "linodesolve_type"], [214, 3, 1, "", "matrix_exp"], [214, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[215, 3, 1, "", "checkpdesol"], [215, 3, 1, "", "classify_pde"], [215, 3, 1, "", "pde_1st_linear_constant_coeff"], [215, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [215, 3, 1, "", "pde_1st_linear_variable_coeff"], [215, 3, 1, "", "pde_separate"], [215, 3, 1, "", "pde_separate_add"], [215, 3, 1, "", "pde_separate_mul"], [215, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[216, 3, 1, "", "solve_poly_system"], [216, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[216, 3, 1, "", "rsolve"], [216, 3, 1, "", "rsolve_hyper"], [216, 3, 1, "", "rsolve_poly"], [216, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[216, 3, 1, "", "checksol"], [216, 3, 1, "", "nsolve"], [216, 3, 1, "", "solve"], [216, 3, 1, "", "solve_linear"], [216, 3, 1, "", "solve_linear_system"], [216, 3, 1, "", "solve_linear_system_LU"], [216, 3, 1, "", "solve_undetermined_coeffs"], [216, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[217, 3, 1, "", "_is_exponential"], [217, 3, 1, "", "_is_logarithmic"], [217, 3, 1, "", "_solve_exponential"], [217, 3, 1, "", "_solve_logarithm"], [217, 3, 1, "", "_transolve"], [217, 3, 1, "", "domain_check"], [217, 3, 1, "", "invert_complex"], [217, 3, 1, "", "invert_real"], [217, 3, 1, "", "linear_eq_to_matrix"], [217, 3, 1, "", "linsolve"], [217, 3, 1, "", "nonlinsolve"], [217, 3, 1, "", "solveset"], [217, 3, 1, "", "solveset_complex"], [217, 3, 1, "", "solveset_real"], [217, 3, 1, "", "solvify"]], "sympy.stats": [[218, 3, 1, "", "Arcsin"], [218, 3, 1, "", "Benini"], [218, 3, 1, "", "Bernoulli"], [218, 1, 1, "", "BernoulliProcess"], [218, 3, 1, "", "Beta"], [218, 3, 1, "", "BetaBinomial"], [218, 3, 1, "", "BetaNoncentral"], [218, 3, 1, "", "BetaPrime"], [218, 3, 1, "", "Binomial"], [218, 3, 1, "", "BoundedPareto"], [218, 3, 1, "", "Cauchy"], [218, 1, 1, "", "CentralMoment"], [218, 3, 1, "", "Chi"], [218, 3, 1, "", "ChiNoncentral"], [218, 3, 1, "", "ChiSquared"], [218, 3, 1, "", "Coin"], [218, 1, 1, "", "ContinuousMarkovChain"], [218, 3, 1, "", "ContinuousRV"], [218, 1, 1, "", "Covariance"], [218, 1, 1, "", "CrossCovarianceMatrix"], [218, 3, 1, "", "Dagum"], [218, 3, 1, "", "Die"], [218, 1, 1, "", "DiscreteMarkovChain"], [218, 3, 1, "", "DiscreteUniform"], [218, 3, 1, "", "E"], [218, 3, 1, "", "Erlang"], [218, 3, 1, "", "ExGaussian"], [218, 1, 1, "", "Expectation"], [218, 1, 1, "", "ExpectationMatrix"], [218, 3, 1, "", "Exponential"], [218, 3, 1, "", "FDistribution"], [218, 3, 1, "", "FiniteRV"], [218, 3, 1, "", "FisherZ"], [218, 3, 1, "", "Frechet"], [218, 3, 1, "", "Gamma"], [218, 3, 1, "", "GammaInverse"], [218, 1, 1, "", "GammaProcess"], [218, 3, 1, "", "GeneralizedMultivariateLogGamma"], [218, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [218, 3, 1, "", "Geometric"], [218, 3, 1, "", "Gompertz"], [218, 3, 1, "", "Gumbel"], [218, 3, 1, "", "Hermite"], [218, 3, 1, "", "Hypergeometric"], [218, 3, 1, "", "JointRV"], [218, 3, 1, "", "Kumaraswamy"], [218, 3, 1, "", "Laplace"], [218, 3, 1, "", "Levy"], [218, 3, 1, "", "LogLogistic"], [218, 3, 1, "", "LogNormal"], [218, 3, 1, "", "Logarithmic"], [218, 3, 1, "", "Logistic"], [218, 3, 1, "", "Lomax"], [218, 3, 1, "", "MatrixGamma"], [218, 3, 1, "", "MatrixNormal"], [218, 3, 1, "", "Maxwell"], [218, 1, 1, "", "Moment"], [218, 3, 1, "", "Moyal"], [218, 3, 1, "", "Multinomial"], [218, 3, 1, "", "MultivariateBeta"], [218, 3, 1, "", "MultivariateEwens"], [218, 3, 1, "", "MultivariateLaplace"], [218, 3, 1, "", "MultivariateNormal"], [218, 3, 1, "", "MultivariateT"], [218, 3, 1, "", "Nakagami"], [218, 3, 1, "", "NegativeBinomial"], [218, 3, 1, "", "NegativeMultinomial"], [218, 3, 1, "", "Normal"], [218, 3, 1, "", "NormalGamma"], [218, 3, 1, "", "P"], [218, 3, 1, "", "Pareto"], [218, 3, 1, "", "Poisson"], [218, 1, 1, "", "PoissonProcess"], [218, 3, 1, "", "PowerFunction"], [218, 1, 1, "", "Probability"], [218, 3, 1, "", "QuadraticU"], [218, 3, 1, "", "Rademacher"], [218, 3, 1, "", "RaisedCosine"], [218, 3, 1, "", "Rayleigh"], [218, 3, 1, "", "Reciprocal"], [218, 3, 1, "", "ShiftedGompertz"], [218, 3, 1, "", "Skellam"], [218, 3, 1, "", "StudentT"], [218, 3, 1, "", "Trapezoidal"], [218, 3, 1, "", "Triangular"], [218, 3, 1, "", "Uniform"], [218, 3, 1, "", "UniformSum"], [218, 1, 1, "", "Variance"], [218, 1, 1, "", "VarianceMatrix"], [218, 3, 1, "", "VonMises"], [218, 3, 1, "", "Wald"], [218, 3, 1, "", "Weibull"], [218, 1, 1, "", "WienerProcess"], [218, 3, 1, "", "WignerSemicircle"], [218, 3, 1, "", "Wishart"], [218, 3, 1, "", "YuleSimon"], [218, 3, 1, "", "Zeta"], [218, 3, 1, "", "cmoment"], [218, 3, 1, "", "correlation"], [218, 3, 1, "", "coskewness"], [218, 3, 1, "", "covariance"], [218, 0, 0, "-", "crv"], [218, 0, 0, "-", "crv_types"], [218, 3, 1, "", "density"], [218, 3, 1, "", "entropy"], [218, 3, 1, "", "factorial_moment"], [218, 0, 0, "-", "frv"], [218, 0, 0, "-", "frv_types"], [218, 3, 1, "", "given"], [218, 3, 1, "", "kurtosis"], [218, 3, 1, "", "marginal_distribution"], [218, 3, 1, "", "median"], [218, 3, 1, "", "moment"], [218, 3, 1, "", "quantile"], [218, 0, 0, "-", "rv"], [218, 3, 1, "", "sample"], [218, 3, 1, "", "sample_iter"], [218, 3, 1, "", "skewness"], [218, 3, 1, "", "std"], [218, 3, 1, "", "variance"], [218, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[218, 2, 1, "", "expectation"], [218, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[218, 2, 1, "", "absorbing_probabilities"], [218, 2, 1, "", "canonical_form"], [218, 2, 1, "", "communication_classes"], [218, 2, 1, "", "decompose"], [218, 2, 1, "", "fixed_row_vector"], [218, 2, 1, "", "fundamental_matrix"], [218, 4, 1, "", "limiting_distribution"], [218, 2, 1, "", "sample"], [218, 2, 1, "", "stationary_distribution"], [218, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[218, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[218, 1, 1, "", "ContinuousDomain"], [218, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[218, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[218, 3, 1, "", "Die"], [218, 3, 1, "", "Normal"]], "sympy.stats.frv": [[218, 1, 1, "", "FiniteDomain"], [218, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[218, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[218, 1, 1, "", "ConditionalDomain"], [218, 1, 1, "", "PSpace"], [218, 1, 1, "", "ProductDomain"], [218, 1, 1, "", "ProductPSpace"], [218, 1, 1, "", "RandomDomain"], [218, 1, 1, "", "RandomSymbol"], [218, 1, 1, "", "SingleDomain"], [218, 1, 1, "", "SinglePSpace"], [218, 3, 1, "", "pspace"], [218, 3, 1, "", "random_symbols"], [218, 3, 1, "", "rs_swap"], [218, 3, 1, "", "sampling_E"], [218, 3, 1, "", "sampling_P"], [218, 3, 1, "", "sampling_density"]], "sympy.tensor": [[219, 0, 0, "-", "array"], [222, 0, 0, "-", "index_methods"], [223, 0, 0, "-", "indexed"], [224, 0, 0, "-", "tensor"], [225, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[219, 1, 1, "", "ImmutableDenseNDimArray"], [219, 1, 1, "", "ImmutableSparseNDimArray"], [219, 1, 1, "", "MutableDenseNDimArray"], [219, 1, 1, "", "MutableSparseNDimArray"], [219, 3, 1, "", "derive_by_array"], [220, 0, 0, "-", "expressions"], [219, 3, 1, "", "permutedims"], [219, 3, 1, "", "tensorcontraction"], [219, 3, 1, "", "tensordiagonal"], [219, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[222, 3, 1, "", "get_contraction_structure"], [222, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[223, 1, 1, "", "Idx"], [223, 1, 1, "", "Indexed"], [223, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[223, 4, 1, "", "label"], [223, 4, 1, "", "lower"], [223, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[223, 4, 1, "", "base"], [223, 4, 1, "", "indices"], [223, 4, 1, "", "ranges"], [223, 4, 1, "", "rank"], [223, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[223, 4, 1, "", "label"], [223, 4, 1, "", "offset"], [223, 4, 1, "", "shape"], [223, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[224, 1, 1, "", "TensAdd"], [224, 1, 1, "", "TensExpr"], [224, 1, 1, "", "TensMul"], [224, 1, 1, "", "TensorHead"], [224, 1, 1, "", "TensorIndex"], [224, 1, 1, "", "TensorIndexType"], [224, 1, 1, "", "TensorSymmetry"], [224, 1, 1, "", "TensorType"], [224, 1, 1, "", "_TensorManager"], [224, 3, 1, "", "canon_bp"], [224, 3, 1, "", "riemann_cyclic"], [224, 3, 1, "", "riemann_cyclic_replace"], [224, 3, 1, "", "tensor_heads"], [224, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[224, 2, 1, "", "canon_bp"], [224, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[224, 2, 1, "", "get_matrix"], [224, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[224, 2, 1, "", "canon_bp"], [224, 2, 1, "", "contract_metric"], [224, 2, 1, "", "get_free_indices"], [224, 2, 1, "", "get_indices"], [224, 2, 1, "", "perm2tensor"], [224, 2, 1, "", "sorted_components"], [224, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[224, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[224, 2, 1, "", "direct_product"], [224, 2, 1, "", "fully_symmetric"], [224, 2, 1, "", "no_symmetry"], [224, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[224, 2, 1, "", "clear"], [224, 2, 1, "", "comm_i2symbol"], [224, 2, 1, "", "comm_symbols2i"], [224, 2, 1, "", "get_comm"], [224, 2, 1, "", "set_comm"], [224, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[225, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[227, 0, 0, "-", "pytest"], [228, 0, 0, "-", "randtest"], [229, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[227, 3, 1, "", "SKIP"], [227, 3, 1, "", "nocache_fail"], [227, 3, 1, "", "raises"], [227, 3, 1, "", "warns"], [227, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[229, 1, 1, "", "PyTestReporter"], [229, 1, 1, "", "Reporter"], [229, 1, 1, "", "SymPyDocTestFinder"], [229, 1, 1, "", "SymPyDocTestRunner"], [229, 1, 1, "", "SymPyOutputChecker"], [229, 1, 1, "", "SymPyTestResults"], [229, 3, 1, "", "convert_to_native_paths"], [229, 3, 1, "", "doctest"], [229, 3, 1, "", "get_sympy_dir"], [229, 3, 1, "", "raise_on_deprecated"], [229, 3, 1, "", "run_all_tests"], [229, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [229, 3, 1, "", "split_list"], [229, 3, 1, "", "sympytestfile"], [229, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[229, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[229, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[229, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[229, 5, 1, "", "attempted"], [229, 5, 1, "", "failed"]], "sympy.utilities": [[230, 0, 0, "-", "autowrap"], [231, 0, 0, "-", "codegen"], [232, 0, 0, "-", "decorator"], [233, 0, 0, "-", "enumerative"], [234, 0, 0, "-", "exceptions"], [236, 0, 0, "-", "iterables"], [237, 0, 0, "-", "lambdify"], [238, 0, 0, "-", "memoization"], [239, 0, 0, "-", "misc"], [240, 0, 0, "-", "pkgdata"], [241, 0, 0, "-", "source"], [242, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[230, 1, 1, "", "CodeWrapper"], [230, 1, 1, "", "CythonCodeWrapper"], [230, 1, 1, "", "DummyWrapper"], [230, 1, 1, "", "F2PyCodeWrapper"], [230, 1, 1, "", "UfuncifyCodeWrapper"], [230, 3, 1, "", "autowrap"], [230, 3, 1, "", "binary_function"], [230, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[230, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[230, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[231, 1, 1, "", "Argument"], [231, 1, 1, "", "CCodeGen"], [231, 1, 1, "", "CodeGen"], [231, 1, 1, "", "DataType"], [231, 1, 1, "", "FCodeGen"], [231, 1, 1, "", "JuliaCodeGen"], [231, 1, 1, "", "OctaveCodeGen"], [231, 1, 1, "", "OutputArgument"], [231, 1, 1, "", "Result"], [231, 1, 1, "", "Routine"], [231, 1, 1, "", "RustCodeGen"], [231, 3, 1, "", "codegen"], [231, 3, 1, "", "get_default_datatype"], [231, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[231, 2, 1, "", "dump_c"], [231, 2, 1, "", "dump_h"], [231, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[231, 2, 1, "", "dump_code"], [231, 2, 1, "", "routine"], [231, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[231, 2, 1, "", "dump_f95"], [231, 2, 1, "", "dump_h"], [231, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[231, 2, 1, "", "dump_jl"], [231, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[231, 2, 1, "", "dump_m"], [231, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[231, 4, 1, "", "result_variables"], [231, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[231, 2, 1, "", "dump_rs"], [231, 2, 1, "", "get_prototype"], [231, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[232, 3, 1, "", "conserve_mpmath_dps"], [232, 3, 1, "", "deprecated"], [232, 3, 1, "", "doctest_depends_on"], [232, 3, 1, "", "memoize_property"], [232, 1, 1, "", "no_attrs_in_subclass"], [232, 3, 1, "", "public"], [232, 3, 1, "", "threaded"], [232, 3, 1, "", "threaded_factory"], [232, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[233, 1, 1, "", "MultisetPartitionTraverser"], [233, 3, 1, "", "factoring_visitor"], [233, 3, 1, "", "list_visitor"], [233, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[233, 2, 1, "", "count_partitions"], [233, 2, 1, "", "enum_all"], [233, 2, 1, "", "enum_large"], [233, 2, 1, "", "enum_range"], [233, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[234, 7, 1, "", "SymPyDeprecationWarning"], [234, 3, 1, "", "ignore_warnings"], [234, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[236, 1, 1, "", "NotIterable"], [236, 3, 1, "", "binary_partitions"], [236, 3, 1, "", "bracelets"], [236, 3, 1, "", "capture"], [236, 3, 1, "", "common_prefix"], [236, 3, 1, "", "common_suffix"], [236, 3, 1, "", "connected_components"], [236, 3, 1, "", "dict_merge"], [236, 3, 1, "", "filter_symbols"], [236, 3, 1, "", "flatten"], [236, 3, 1, "", "generate_bell"], [236, 3, 1, "", "generate_derangements"], [236, 3, 1, "", "generate_involutions"], [236, 3, 1, "", "generate_oriented_forest"], [236, 3, 1, "", "group"], [236, 3, 1, "", "has_dups"], [236, 3, 1, "", "has_variety"], [236, 3, 1, "", "ibin"], [236, 3, 1, "", "iproduct"], [236, 3, 1, "", "is_palindromic"], [236, 3, 1, "", "is_sequence"], [236, 3, 1, "", "iterable"], [236, 3, 1, "", "kbins"], [236, 3, 1, "", "least_rotation"], [236, 3, 1, "", "minlex"], [236, 3, 1, "", "multiset"], [236, 3, 1, "", "multiset_combinations"], [236, 3, 1, "", "multiset_derangements"], [236, 3, 1, "", "multiset_partitions"], [236, 3, 1, "", "multiset_permutations"], [236, 3, 1, "", "necklaces"], [236, 3, 1, "", "numbered_symbols"], [236, 3, 1, "", "ordered_partitions"], [236, 3, 1, "", "partitions"], [236, 3, 1, "", "permute_signs"], [236, 3, 1, "", "postfixes"], [236, 3, 1, "", "prefixes"], [236, 3, 1, "", "random_derangement"], [236, 3, 1, "", "reshape"], [236, 3, 1, "", "rotate_left"], [236, 3, 1, "", "rotate_right"], [236, 3, 1, "", "rotations"], [236, 3, 1, "", "roundrobin"], [236, 3, 1, "", "runs"], [236, 3, 1, "", "sift"], [236, 3, 1, "", "signed_permutations"], [236, 3, 1, "", "strongly_connected_components"], [236, 3, 1, "", "subsets"], [236, 3, 1, "", "take"], [236, 3, 1, "", "topological_sort"], [236, 3, 1, "", "unflatten"], [236, 3, 1, "", "uniq"], [236, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[237, 3, 1, "", "implemented_function"], [237, 3, 1, "", "lambdastr"], [237, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[238, 3, 1, "", "assoc_recurrence_memo"], [238, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[239, 3, 1, "", "as_int"], [239, 3, 1, "", "debug"], [239, 3, 1, "", "debug_decorator"], [239, 3, 1, "", "filldedent"], [239, 3, 1, "", "find_executable"], [239, 3, 1, "", "func_name"], [239, 3, 1, "", "ordinal"], [239, 3, 1, "", "rawlines"], [239, 3, 1, "", "replace"], [239, 3, 1, "", "strlines"], [239, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[240, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[241, 3, 1, "", "get_class"], [241, 3, 1, "", "get_mod_func"], [241, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[242, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[243, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[243, 2, 1, "", "__init__"], [243, 2, 1, "", "create_new"], [243, 2, 1, "", "locate_new"], [243, 2, 1, "", "orient_new"], [243, 2, 1, "", "orient_new_axis"], [243, 2, 1, "", "orient_new_body"], [243, 2, 1, "", "orient_new_quaternion"], [243, 2, 1, "", "orient_new_space"], [243, 2, 1, "", "position_wrt"], [243, 2, 1, "", "rotation_matrix"], [243, 2, 1, "", "scalar_map"]], "sympy.vector": [[245, 3, 1, "", "curl"], [245, 3, 1, "", "divergence"], [245, 3, 1, "", "express"], [245, 3, 1, "", "gradient"], [245, 3, 1, "", "is_conservative"], [245, 3, 1, "", "is_solenoidal"], [245, 3, 1, "", "matrix_to_vector"], [245, 3, 1, "", "scalar_potential"], [245, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[243, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[243, 2, 1, "", "cross"], [243, 2, 1, "", "dot"], [243, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[243, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[243, 4, 1, "", "components"], [243, 2, 1, "", "cross"], [243, 2, 1, "", "dot"], [243, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[243, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[243, 2, 1, "", "multiplicity"], [243, 2, 1, "", "rational_parametrization"], [243, 2, 1, "", "regular_point"], [243, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[243, 1, 1, "", "ParametricIntegral"], [245, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[244, 1, 1, "", "AxisOrienter"], [244, 1, 1, "", "BodyOrienter"], [244, 1, 1, "", "Orienter"], [244, 1, 1, "", "QuaternionOrienter"], [244, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[244, 2, 1, "", "__init__"], [244, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[244, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[244, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[244, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[244, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[243, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[243, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[243, 4, 1, "", "components"], [243, 2, 1, "", "cross"], [243, 2, 1, "", "dot"], [243, 2, 1, "", "magnitude"], [243, 2, 1, "", "normalize"], [243, 2, 1, "", "outer"], [243, 2, 1, "", "projection"], [243, 2, 1, "", "separate"], [243, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 5, 6, 10, 11, 13, 14, 15, 21, 22, 23, 33, 57, 74, 93, 131, 179, 188, 243, 245, 246, 249, 263, 265, 268], "build": [1, 3], "document": [1, 3, 4, 6, 7, 22], "requir": [1, 4], "depend": [1, 3, 128, 188, 247], "docker": 1, "debian": 1, "ubuntu": 1, "fedora": 1, "mac": 1, "window": [1, 184], "10": [1, 10, 95], "doc": [1, 189], "local": 1, "instal": [1, 22, 23, 93, 272], "logo": 1, "view": 1, "auto": 1, "rebuild": 1, "live": 1, "server": 1, "pdf": 1, "debug": 2, "hard": 3, "option": [3, 21, 191], "recommend": [3, 7], "interact": [3, 79, 184], "us": [3, 7, 10, 14, 21, 33, 51, 54, 75, 76, 92, 95, 123, 128, 129, 182, 184, 195, 217, 247], "print": [3, 10, 18, 33, 79, 105, 112, 173, 178, 198, 273], "pars": [3, 93], "logic": [3, 17, 81, 253, 256], "plot": [3, 10, 99, 144, 184], "lambdifi": [3, 10, 92, 237, 263], "code": [3, 4, 5, 7, 10, 33, 35, 105, 182, 198, 241, 253, 255], "gener": [3, 6, 7, 41, 43, 188, 193, 217, 248, 253, 255], "autowrap": [3, 33, 230], "printer": [3, 33, 198, 273], "test": [3, 5, 10, 48, 81, 197, 226, 228, 229, 270], "onli": [3, 217], "statist": 3, "symengin": 3, "backend": [3, 184], "experiment": [3, 93], "rubi": 3, "integr": [3, 10, 55, 59, 73, 75, 76, 77, 78, 105, 186, 193, 252, 264], "sage": 3, "develop": [3, 5, 51], "get": [3, 5, 11], "sourc": [3, 10, 11, 241], "run": [3, 5, 23, 229], "benchmark": 3, "deprec": [4, 10], "polici": 4, "what": [4, 128, 187, 188, 217, 268, 271], "try": 4, "avoid": 4, "backward": 4, "incompat": 4, "chang": 4, "first": [4, 10], "place": 4, "when": [4, 76], "doe": [4, 11, 217], "public": 4, "api": [4, 22, 72, 76, 78, 101, 124, 180, 217, 230, 231, 250, 253], "Not": [4, 21], "The": [4, 10, 16, 18, 34, 41, 76, 128, 169, 180, 193, 205, 208, 248, 249, 268], "purpos": 4, "technic": 4, "possibl": [4, 21, 270], "how": [4, 19, 22, 76, 182, 217], "long": 4, "should": [4, 92], "last": 4, "checklist": 4, "ad": 4, "releas": 4, "note": [4, 18, 51, 63, 128, 205, 207, 266, 275], "entri": [4, 87], "environ": 5, "setup": 5, "git": [5, 23], "virtual": 5, "docstr": [6, 7, 94, 97, 106, 107, 108, 109, 110, 111, 112, 113, 175, 176, 177, 178, 236, 243, 244, 245], "style": [6, 7], "guid": [6, 7, 19, 22, 124, 180, 250], "guidelin": [6, 7], "format": [6, 7, 21], "section": 6, "1": [6, 10, 76, 95, 114, 128, 140, 214], "singl": [6, 11], "sentenc": 6, "summari": 6, "2": [6, 10, 76, 95, 114, 128, 214], "explan": [6, 12, 22], "3": [6, 10, 78, 95, 114, 165, 214], "exampl": [6, 18, 24, 51, 63, 75, 78, 91, 95, 102, 115, 128, 132, 136, 167, 169, 182, 197, 198, 205, 208, 218, 219, 220, 223, 248, 268, 274], "4": [6, 10, 95, 214], "paramet": [6, 208, 217], "5": [6, 10, 95, 214], "see": [6, 51, 248], "also": [6, 51], "6": [6, 10, 95, 214], "refer": [6, 16, 22, 25, 32, 50, 51, 53, 63, 69, 76, 78, 82, 83, 84, 85, 87, 89, 91, 93, 130, 136, 139, 169, 180, 182, 183, 184, 185, 187, 189, 191, 193, 194, 205, 207, 208, 211, 217, 230, 231, 250, 253], "sampl": [6, 10], "class": [6, 13, 32, 33, 50, 53, 82, 83, 85, 87, 89, 91, 128, 174, 184, 187, 193, 198, 210, 211, 219, 243, 244], "ar": [6, 182, 188, 217], "mathemat": [6, 11, 131], "function": [6, 10, 11, 18, 21, 33, 41, 50, 51, 57, 58, 59, 69, 70, 73, 74, 76, 81, 87, 91, 93, 95, 105, 129, 151, 154, 175, 176, 179, 184, 186, 188, 189, 194, 197, 198, 208, 210, 211, 214, 215, 219, 245, 249, 273, 274], "best": [6, 7, 18], "practic": [6, 7, 18], "write": [6, 7, 18], "import": [6, 10], "sphinx": 6, "cross": [6, 176], "referenc": 6, "type": [7, 33, 59, 175, 214, 217, 218], "narr": 7, "markdown": 7, "prefer": 7, "math": [7, 33], "latex": [7, 93, 273], "head": 7, "spell": 7, "punctuat": 7, "capit": 7, "tone": 7, "contribut": [8, 9, 22, 195], "make": [9, 21], "list": [10, 11], "activ": 10, "silenc": 10, "warn": [10, 234], "version": 10, "12": 10, "11": [10, 95], "new": [10, 247], "mathematica": [10, 198], "parser": [10, 114], "redund": 10, "static": 10, "method": [10, 14, 18, 23, 109, 118, 121, 122, 123, 126, 127, 128, 198, 215, 217, 222, 247, 270], "carmichael": 10, "check": [10, 21, 175], "argument": [10, 11, 217], "hadamardproduct": 10, "matadd": 10, "matmul": 10, "some": [10, 131, 217], "travers": [10, 51], "have": [10, 21, 197], "been": 10, "move": [10, 208], "core": [10, 51, 84], "trace": 10, "compat": [10, 220], "submodul": [10, 63], "9": [10, 95], "expr_free_symbol": 10, "stat": [10, 218], "numsampl": 10, "n": [10, 51, 214, 219, 220], "poli": [10, 187, 188, 189, 196], "solver": [10, 196, 212, 213, 214, 216, 217, 275], "rawmatrix": 10, "non": 10, "expr": [10, 51], "object": [10, 13, 223], "matrix": [10, 29, 83, 84, 87, 88, 128, 214, 218, 270], "get_seg": 10, "attribut": [10, 34, 41], "mdft": 10, "physic": [10, 102, 105, 115, 125, 126, 127, 128, 129, 130, 131, 132, 171, 173, 179, 180, 181, 182, 253, 259], "matric": [10, 14, 82, 83, 84, 85, 86, 87, 89, 102, 104, 220, 253, 257, 270], "privat": 10, "sparsematrix": [10, 89], "_smat": 10, "densematrix": 10, "_mat": 10, "laplace_transform": 10, "nocond": 10, "fals": [10, 21], "8": [10, 95], "theanocod": 10, "assumpt": [10, 13, 16, 18, 28, 51], "handler": [10, 16], "askhandl": 10, "relat": [10, 11, 16, 51, 59, 81, 179, 182, 206, 249], "7": [10, 95, 214], "call": [10, 21], "stochasticprocess": 10, "distribut": [10, 191, 218], "randomindexedsymbol": 10, "discretemarkovchain": 10, "absorbing_probabilit": 10, "util": [10, 33, 48, 49, 68, 87, 137, 193, 216, 235, 242, 253, 261], "misc": [10, 28], "find_execut": 10, "mutabl": 10, "diffgeom": 10, "unicod": [10, 273], "pretti": [10, 198, 273], "stringpict": 10, "prettyform": 10, "pretty_symbolog": 10, "xstr": 10, "pass": 10, "set": [10, 13, 21, 29, 63, 182, 206, 217, 273], "oper": [10, 11, 73, 87, 142, 151, 153, 154, 175, 179, 182, 208, 219, 225, 246, 248, 249, 263, 270], "longer": 10, "accept": 10, "arg": [10, 57, 269], "variou": [10, 197], "randtest": 10, "mix": 10, "polynomi": [10, 59, 73, 186, 188, 189, 190, 191, 193, 194, 195, 197, 216, 274], "express": [10, 11, 21, 33, 63, 70, 73, 81, 84, 93, 107, 176, 188, 197, 220, 245, 247, 263, 269], "binari": 10, "print_cycl": 10, "flag": 10, "combinator": [10, 38], "permut": [10, 42, 43], "string": [10, 16, 263], "fallback": 10, "sympifi": [10, 51], "creat": [10, 11, 18, 87], "an": [10, 21, 63, 114, 169, 208, 217, 269], "indefinit": 10, "eq": [10, 21, 51], "tensor": [10, 47, 59, 163, 221, 224, 225], "fun_ev": 10, "__call__": 10, "tensortyp": 10, "dummy_fmt": 10, "tensorindextyp": 10, "metric": 10, "get_kronecker_delta": 10, "get_epsilon": 10, "tensorsymmetri": 10, "tensorhead": 10, "unit": [10, 29, 168, 169, 170, 172], "quantiti": [10, 167, 169, 171, 247], "is_emptyset": 10, "productset": [10, 206], "iter": [10, 206, 236], "set_potential_energi": 10, "mechan": [10, 16, 96, 105, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 151, 218], "condit": [10, 76, 206], "conditionset": [10, 206], "max_degre": 10, "get_upper_degre": 10, "properti": [10, 16, 185], "multivariate_result": 10, "dixonresult": 10, "rh": 10, "default": 10, "0": 10, "tupl": [10, 11, 51, 194], "lambda": [10, 51], "evalu": [10, 11, 18, 55, 73, 131, 269], "differentiate_finit": 10, "data": 10, "clear_cach": 10, "clear_subproduct": 10, "keyword": [10, 11], "is_diagonaliz": 10, "row": [10, 270], "col": 10, "jordan_block": 10, "dimens": [10, 63, 166, 169], "scale_factor": 10, "quanit": 10, "classof": 10, "a2idx": 10, "from": [10, 11, 21, 197, 220], "dot": [10, 176, 273], "product": [10, 54, 152, 163, 219, 248], "column": [10, 270], "vector": [10, 41, 51, 124, 173, 174, 175, 179, 180, 181, 182, 191, 243, 245, 246, 247, 249, 250, 251, 252], "geometri": [10, 53, 63, 185], "line3d": 10, "equat": [10, 20, 21, 126, 127, 128, 167, 186, 211, 214, 216, 217, 275], "need": [10, 169], "k": [10, 189], "gotcha": [11, 16, 114, 266], "pitfal": 11, "introduct": [11, 14, 25, 32, 33, 34, 41, 53, 63, 81, 114, 131, 169, 179, 181, 184, 185, 186, 193, 197, 251, 268], "equal": [11, 21, 51, 266], "sign": [11, 57, 266], "doubl": [11, 56], "variabl": [11, 21, 184, 218, 247], "assign": 11, "between": [11, 16, 171, 188], "symbol": [11, 16, 17, 18, 51, 70, 128, 132, 183, 188, 194, 197, 217, 266, 268], "python": [11, 33], "number": [11, 29, 37, 51, 54, 55, 76, 188, 193, 197, 253, 258], "vs": [11, 17, 188], "float": [11, 51, 55], "ration": [11, 29, 51, 188, 189, 194, 197, 200, 206, 214, 274], "immut": [11, 85], "invers": [11, 18, 57, 76], "trig": 11, "sqrt": [11, 57], "special": [11, 15, 33, 59, 194, 206, 274], "dictionari": 11, "help": 11, "within": 11, "classif": 13, "kind": [13, 51], "func": [13, 269], "finit": [14, 29, 31, 34, 185, 188, 191, 193, 197, 208, 218, 264], "differ": [14, 16, 31, 131, 188, 247, 264], "approxim": [14, 33], "deriv": [14, 51, 182, 219, 249, 264], "A": [14, 116, 117, 120, 121, 122, 123, 128, 268, 275], "direct": [14, 249], "topic": [15, 105, 173, 253, 260], "old": [16, 188], "system": [16, 99, 119, 132, 166, 168, 169, 172, 214, 216, 246, 247, 249, 251], "appli": [16, 76, 208], "input": [16, 217], "predic": [16, 28, 29], "abov": 16, "definit": [16, 18, 29, 69], "implic": 16, "interpret": 16, "other": [16, 18, 23, 70, 179, 247], "is_": 16, "implement": [16, 76, 179, 198, 208, 230, 231, 246, 249], "limit": [16, 75, 114, 203, 205, 264], "combin": [16, 73], "fuzzi": 17, "boolean": [17, 81], "three": [17, 63], "valu": 17, "bool": 17, "custom": [18, 184, 198], "easi": 18, "case": [18, 217], "fulli": 18, "defin": 18, "automat": [18, 197], "eval": 18, "remind": 18, "kei": [18, 131, 269], "point": [18, 55, 66, 105, 173, 177, 181, 246], "numer": [18, 55, 73, 78, 92, 105, 131], "evalf": [18, 51, 92, 263], "rewrit": [18, 33, 199, 274], "simplif": [18, 55, 81, 207, 210, 274], "doit": 18, "expand": [18, 51, 197, 199, 274], "differenti": [18, 53, 73, 105, 216, 217, 275], "as_real_imag": 18, "miscellan": [18, 57, 63, 239], "_eval_": 18, "complet": [18, 114], "versin": 18, "divid": 18, "fuse": 18, "multipli": 18, "add": [18, 51], "fma": 18, "addit": [18, 73], "tip": [18, 263, 264, 266, 269, 270], "solv": [20, 21, 95, 186, 193, 216, 217, 275], "algebra": [21, 25, 29, 80, 87, 139, 182, 185, 188, 193, 197, 216, 275], "guidanc": 21, "includ": 21, "ensur": [21, 217], "consist": 21, "dict": [21, 51], "true": [21, 128], "solveset": [21, 217], "your": 21, "zero": [21, 29, 51, 99, 191, 197, 270], "put": 21, "form": [21, 81, 88, 128, 187, 214, 220], "restrict": 21, "domain": [21, 186, 188, 189, 194, 197, 217], "solut": [21, 151, 217, 248], "explicitli": 21, "repres": [21, 76, 159, 188, 193], "infinit": [21, 29, 217], "result": [21, 197], "substitut": [21, 105, 173, 263], "cannot": 21, "necessarili": 21, "interrog": 21, "programmat": 21, "can": 21, "speed": [21, 105, 128], "up": [21, 273], "ani": [21, 217], "denomin": 21, "do": [21, 217], "simplifi": [21, 33, 191, 209, 210, 274], "all": 21, "which": [21, 92, 198], "analyt": [21, 151], "welcom": 22, "s": [22, 51, 109, 118, 121, 122, 123, 126, 127, 128, 149, 160, 197, 207, 216, 217, 247, 252, 271], "tutori": [22, 211, 262, 267], "anaconda": 23, "mpmath": 23, "question": 23, "abc": 24, "caveat": [24, 93], "quaternion": 25, "ask": 26, "assum": 27, "queri": 28, "content": [28, 38, 58, 71, 77, 190, 202, 212, 221], "perform": 28, "improv": [28, 114], "common": [29, 82, 105, 173, 197, 198, 199, 210], "tautolog": 29, "commut": [29, 145, 185], "calculu": [29, 31, 182, 264], "symmetr": 29, "invert": 29, "orthogon": [29, 59, 194, 249], "unitari": 29, "posit": 29, "upper": 29, "triangular": 29, "lower": 29, "diagon": [29, 219, 270], "full": 29, "rank": 29, "squar": [29, 186, 210], "integ": [29, 51, 57, 188, 206], "element": [29, 128, 188, 193], "real": [29, 188, 206], "complex": [29, 57, 188, 206], "singular": [29, 31, 59, 95], "normal": [29, 88, 187, 197], "theori": [29, 32, 253, 258], "even": 29, "odd": 29, "prime": [29, 193], "composit": [29, 73], "order": [29, 51, 194, 205, 208, 214], "neg": 29, "nonzero": 29, "nonposit": 29, "nonneg": 29, "irrat": 29, "extend": [29, 208], "hermitian": 29, "imaginari": 29, "antihermitian": 29, "transcendent": 29, "refin": 30, "weight": 31, "categori": 32, "base": [32, 53, 185, 186, 197, 204, 217], "diagram": 32, "draw": 32, "codegen": [33, 231], "tool": [33, 90, 210], "abstract": [33, 96, 100, 102, 124, 134, 151, 180, 189], "syntax": 33, "tree": [33, 188, 198, 269], "ast": [33, 114], "predefin": 33, "node": 33, "c": [33, 198], "cfunction": 33, "specif": 33, "cnode": 33, "cxxnode": 33, "fortran": [33, 198], "fnode": 33, "algorithm": [33, 34, 149, 160, 191, 194, 200, 205, 208], "pyutil": 33, "cutil": 33, "futil": 33, "present": [34, 41], "group": [34, 36, 39, 41, 42, 169], "overview": [34, 41, 76], "facil": 34, "construct": [34, 41, 220], "free": [34, 186], "word": [34, 41], "coset": 34, "enumer": [34, 56], "todd": 34, "coxet": 34, "cosett": 34, "compress": 34, "standard": 34, "subgroup": 34, "index": [34, 41, 220, 223], "low": 34, "reidemeist": 34, "schreier": 34, "bibliographi": [34, 41], "grai": 35, "constructor": [36, 194, 270], "nilpot": 37, "abelian": 37, "cyclic": 37, "name": 39, "partit": [40, 56, 211, 236], "polycycl": 41, "polycyclicgroup": 41, "collector": 41, "comput": [41, 76, 92, 151, 197, 268], "minim": [41, 193], "uncollect": 41, "subword": 41, "collect": [41, 199, 210, 274], "expon": [41, 197], "depth": [41, 63], "lead": 41, "polyhedron": 44, "prufer": 45, "sequenc": [45, 73, 191, 203, 204], "subset": [46, 54], "canonic": 47, "concret": 50, "hypergeometr": [50, 59, 70, 73, 200, 208, 210], "term": [50, 197, 199, 205], "cach": 51, "cacheit": 51, "basic": [51, 55, 87, 175, 186, 188, 194, 206, 246, 253, 254, 263, 270], "atom": 51, "singleton": [51, 204, 206], "unevaluatedexpr": 51, "atomicexpr": 51, "wild": 51, "dummi": 51, "var": 51, "algebraicnumb": 51, "numbersymbol": 51, "realnumb": 51, "igcd": 51, "ilcm": 51, "seterr": 51, "One": 51, "negativeon": 51, "half": 51, "nan": [51, 128], "infin": 51, "negativeinfin": 51, "complexinfin": 51, "exp1": 51, "imaginaryunit": 51, "pi": 51, "eulergamma": 51, "catalan": [51, 56], "goldenratio": 51, "tribonacciconst": 51, "mod_invers": 51, "power": [51, 195, 200, 206, 210, 268, 274], "pow": 51, "integer_nthroot": 51, "integer_log": 51, "mul": 51, "prod": 51, "mod": 51, "rel": 51, "ne": 51, "lt": 51, "le": 51, "gt": 51, "ge": 51, "greaterthan": 51, "lessthan": 51, "unequ": 51, "strictgreaterthan": 51, "strictlessthan": 51, "multidimension": 51, "wildfunct": 51, "diff": 51, "functionclass": 51, "sub": [51, 92], "poleerror": 51, "count_op": 51, "expand_mul": 51, "expand_log": [51, 274], "expand_func": [51, 274], "expand_trig": [51, 274], "expand_complex": 51, "expand_multinomi": 51, "expand_power_exp": [51, 274], "expand_power_bas": [51, 274], "nfloat": 51, "evalfmixin": 51, "precisionexhaust": 51, "contain": 51, "tuplekind": 51, "exprtool": 51, "gcd_term": 51, "factor_term": 51, "numberkind": 51, "undefinedkind": 51, "booleankind": 51, "sort": 51, "default_sort_kei": 51, "random": [51, 218], "random_complex_numb": 51, "verify_numer": 51, "test_derivative_numer": 51, "_randrang": 51, "_randint": 51, "bottom_up": 51, "postorder_travers": 51, "preorder_travers": 51, "walk": [51, 269], "cryptographi": 52, "discret": [54, 218], "transform": [54, 76, 78, 93, 247], "fast": 54, "fourier": [54, 201], "theoret": 54, "walsh": 54, "hadamard": 54, "m\u00f6biu": 54, "convolut": 54, "cover": 54, "intersect": [54, 63, 206], "accuraci": 55, "error": [55, 59], "handl": [55, 217], "sum": 55, "combinatori": [56, 210], "bell": 56, "bernoulli": [56, 214], "binomi": 56, "euler": 56, "factori": [56, 186], "subfactori": 56, "factorial2": 56, "fallingfactori": 56, "fibonacci": 56, "tribonacci": 56, "harmon": [56, 59, 140, 165], "luca": 56, "genocchi": 56, "multifactori": 56, "risingfactori": 56, "stirl": 56, "nc": 56, "np": 56, "nt": 56, "elementari": [57, 185, 204, 206], "re": 57, "im": 57, "ab": 57, "conjug": 57, "polar_lift": 57, "periodic_argu": 57, "principal_branch": 57, "trigonometr": [57, 59, 207, 210, 274], "sin": 57, "co": 57, "tan": 57, "cot": 57, "sec": 57, "csc": 57, "sinc": 57, "asin": 57, "aco": 57, "atan": 57, "acot": 57, "asec": 57, "acsc": 57, "atan2": 57, "hyperbol": 57, "hyperbolicfunct": 57, "sinh": 57, "cosh": 57, "tanh": 57, "coth": 57, "sech": 57, "csch": 57, "asinh": 57, "acosh": 57, "atanh": 57, "acoth": 57, "asech": 57, "acsch": 57, "ceil": 57, "floor": 57, "roundfunct": 57, "frac": 57, "exponenti": [57, 59, 214, 274], "exp": 57, "lambertw": 57, "log": 57, "exp_polar": 57, "piecewis": 57, "exprcondpair": 57, "identityfunct": 57, "min": 57, "max": 57, "root": [57, 194, 210], "cbrt": 57, "real_root": 57, "diracdelta": 59, "heavisid": 59, "gamma": [59, 102], "beta": 59, "fresnel": 59, "logarithm": [59, 274], "bessel": 59, "airi": 59, "b": 59, "spline": 59, "riemann": 59, "zeta": 59, "ellipt": 59, "mathieu": 59, "jacobi": 59, "gegenbau": 59, "chebyshev": 59, "legendr": 59, "hermit": 59, "laguerr": 59, "spheric": 59, "curv": 60, "ellips": 61, "entiti": [62, 63, 184], "avail": 63, "usag": [63, 114, 132, 188, 248], "median": 63, "pappu": 63, "hexagon": 63, "theorem": [63, 76, 252], "futur": [63, 105, 114, 173], "work": [63, 197], "truth": [63, 81], "beyond": 63, "visual": [63, 131], "line": 64, "plane": [65, 76], "polygon": [67, 78], "about": [69, 217, 247, 275], "holonom": [69, 70, 71, 73, 74, 119], "convert": [70, 73, 188, 214, 263], "represent": [70, 74, 169, 182, 188], "meijer": [70, 73, 76, 208], "g": [70, 73, 76, 208], "intern": [72, 76, 78, 188, 191, 193, 211, 214], "multipl": [73, 182, 193], "seri": [73, 184, 195, 200, 201, 202, 205, 264], "expans": [73, 205, 208, 210, 264], "linear": [73, 87, 105, 110, 128, 129, 169, 197, 211, 214], "holonomicfunct": 74, "differentialoper": 74, "differentialoperatoralgebra": 74, "current": 75, "polar": [76, 136], "branch": 76, "argand": 76, "tabl": [76, 81, 208], "lookup": 76, "mellin": 76, "converg": 76, "laplac": 76, "thi": [76, 217], "valid": 76, "exist": 76, "formula": [76, 208], "todo": 78, "bug": 78, "over": [78, 197, 206], "polytop": 78, "For": 78, "2d": 78, "polyhedra": 78, "session": 79, "lie": [80, 214], "equival": [81, 131, 211], "manipul": [81, 87, 107, 190, 191, 194, 195, 217, 269], "infer": 81, "matrixcommon": 82, "matrixkind": 82, "dens": [83, 188, 189, 191], "immutablematrix": [83, 85], "block": 84, "matrixdetermin": 87, "matrixreduct": 87, "matrixsubspac": 87, "matrixeigen": 87, "matrixcalculu": 87, "matrixbas": 87, "except": [87, 93, 191, 234], "numpi": 87, "spars": [89, 90, 188, 189, 191], "immutablesparsematrix": 89, "ntheori": 91, "ecm": 91, "qs": 91, "ufuncifi": 92, "aesara": [92, 198], "so": 92, "i": 92, "mathrm": [93, 273], "runtim": 93, "beam": [94, 95, 96], "bend": 95, "problem": [95, 193, 248], "continuum": 96, "truss": [96, 97], "control": [98, 99, 100, 101, 184], "pole": 99, "bode": 99, "impuls": 99, "respons": [99, 198], "step": [99, 217], "ramp": 99, "modul": [100, 134, 173, 180, 185, 186, 187, 188, 191, 193, 194, 211, 214, 215, 217, 230], "lti": 101, "high": 102, "energi": [102, 129], "hydrogen": 103, "wavefunct": 103, "potenti": [105, 128, 129, 173, 179, 249], "issu": [105, 114, 128, 173, 270], "advanc": [105, 173, 197, 269, 270], "featur": [105, 173, 265], "choic": 105, "coordin": [105, 118, 128, 184, 246, 247, 249, 251], "acceler": [105, 173, 181, 205], "interfac": [105, 173, 184, 218], "output": [105, 217], "bodi": [106, 129, 252], "msub": 107, "find_dynamicsymbol": 107, "joint": [108, 125, 218], "framework": [108, 125], "pinjoint": 108, "prismaticjoint": 108, "jointsmethod": [108, 125], "kane": [109, 118, 121, 122, 126, 128], "lagrang": [109, 118, 123, 127, 128], "kanemethod": 109, "lagrangesmethod": 109, "mass": [111, 129, 252], "inertia": [111, 129, 173], "particl": [111, 129, 155], "rigidbodi": 111, "inertia_of_point_mass": 111, "linear_momentum": 111, "angular_momentum": 111, "kinetic_energi": 111, "potential_energi": 111, "lagrangian": [111, 129], "mechanics_print": 112, "mprint": 112, "mpprint": 112, "mlatex": 112, "symbolicsystem": [113, 132], "autolev": [114, 131], "dynam": 114, "onlin": 114, "fix": 114, "switch": 114, "bicycl": 116, "four": 117, "bar": 117, "linkag": 117, "nonminim": 118, "pendulum": 118, "multi": 119, "degre": 119, "freedom": 119, "roll": [120, 121, 122, 123], "disc": [120, 121, 122, 123], "constraint": 122, "forc": 122, "classic": [124, 191], "structur": [126, 127, 169, 211], "background": 128, "directli": [128, 247], "new_method": 128, "kwarg": 128, "a_and_b": 128, "slow": 128, "ha": 128, "zoo": 128, "oo": 128, "further": [128, 266], "rigid": 129, "dyadic": [129, 173, 174, 243, 246, 247], "momentum": 129, "angular": [129, 181], "momenta": 129, "kinet": 129, "user": [131, 211, 214, 215], "rough": 131, "link": 131, "gaussian": [133, 188, 189, 197], "optic": [133, 134], "medium": 135, "wave": 138, "pauli": 139, "quantum": [140, 151, 165], "oscil": [140, 165], "d": [140, 165], "anticommut": 141, "cartesian": 142, "state": [142, 151, 154, 162], "clebsch": 143, "gordan": 143, "coeffici": [143, 191], "circuit": 144, "constant": [146, 169], "dagger": 147, "gate": 148, "grover": 149, "hilbert": 150, "space": [150, 169, 208], "inner": 152, "helper": [154, 198], "box": 155, "qappli": 156, "qft": 157, "qubit": 158, "shor": 160, "spin": 161, "second": 164, "quantiz": 164, "dimension": 167, "analysi": 167, "philosophi": 169, "behind": 169, "literatur": [169, 192, 197], "prefix": 170, "convers": 171, "referencefram": [173, 174, 182], "dynamicsymbol": [173, 176], "essenti": [174, 176, 243, 245], "coordinatesym": 174, "field": [175, 179, 188, 191, 193, 197, 249, 251], "curl": [175, 179, 245, 249], "diverg": [175, 179, 245, 249, 252], "gradient": [175, 179, 245, 249], "scalar_potenti": [175, 245], "scalar_potential_differ": [175, 245], "is_conserv": [175, 245], "is_solenoid": [175, 245], "outer": 176, "time_deriv": 176, "kinemat": [177, 181], "kinematic_equ": 177, "init_vprint": 178, "vprint": 178, "vpprint": 178, "vlatex": 178, "scalar": [179, 249, 251], "conserv": [179, 249], "solenoid": [179, 249], "veloc": 181, "altern": 182, "basi": [182, 191, 193], "frame": 182, "wigner": 183, "credit": 183, "copyright": 183, "author": 183, "plotgrid": 184, "pyglet": 184, "mode": 184, "specifi": 184, "interv": [184, 206], "color": 184, "geometr": 184, "ascii": [184, 273], "art": 184, "agca": 185, "ring": [185, 188, 189], "ideal": 185, "homomorph": [185, 193], "syzygi": 185, "extens": [185, 197], "concept": 186, "divis": [186, 211], "euclidean": 186, "gcd": [186, 191, 197], "lcm": 186, "factor": [186, 191, 197, 214, 274], "groebner": [186, 191], "introduc": [187, 188], "domainmatrix": 187, "ddm": 187, "sdm": 187, "dup": 188, "dmp": 188, "polyr": 188, "polynomialr": 188, "choos": 188, "unifi": 188, "gf": 189, "p": [189, 193], "zz": 189, "qq": 189, "mpq": 189, "zz_i": 189, "qq_i": 189, "rr": 189, "cc": 189, "x": 189, "ex": 189, "quotient": 189, "level": 191, "multivari": [191, 197], "univari": [191, 197, 211], "remaind": 191, "subresult": 191, "configur": 191, "modular": 191, "undocu": 191, "main": 193, "decomposit": [193, 194, 197], "adic": 193, "valuat": 193, "find": [193, 194], "subfield": 193, "As": 193, "arithmet": 193, "extra": 194, "monomi": 194, "encod": 194, "formal": [194, 200], "partial": [194, 197, 216, 217], "fraction": [194, 197, 210, 274], "dispers": 194, "rs_seri": 195, "solve_lin_si": 196, "eqs_to_matrix": 196, "sympy_eqs_to_r": 196, "_solve_lin_si": 196, "_solve_lin_sys_compon": 196, "wester": 197, "articl": 197, "simpl": 197, "support": 197, "back": 197, "cyclotom": 197, "reduc": 197, "gr\u00f6bner": 197, "mistak": 198, "prettyprint": 198, "rcodeprint": 198, "mapl": 198, "javascript": 198, "julia": 198, "octav": 198, "matlab": 198, "rust": 198, "gtk": 198, "lambdaprint": 198, "latexprint": 198, "mathmlprint": 198, "pythoncodeprint": 198, "pythonprint": 198, "srepr": [198, 273], "strprinter": 198, "preview": 198, "codeprint": 198, "preced": 198, "dotprint": 198, "subexpress": [199, 210], "detect": 199, "compound": [204, 206, 218], "recurs": [204, 269], "gruntz": 205, "more": [205, 247, 268], "intuit": 205, "residu": 205, "finiteset": 206, "union": 206, "complement": 206, "symmetricdiffer": 206, "disjointunion": 206, "emptyset": 206, "universalset": 206, "natur": 206, "naturals0": 206, "imageset": 206, "rang": 206, "complexregion": 206, "powerset": 206, "setkind": 206, "hongguang": 207, "fu": 207, "rule": [207, 248], "notat": 208, "increment": 208, "decrement": 208, "indic": 208, "reduct": 208, "around": 208, "loos": 208, "end": 208, "confluenc": 208, "separatevar": 210, "nthroot": 210, "kroneckersimp": 210, "besselsimp": 210, "hypersimp": 210, "hypersimilar": 210, "nsimplifi": 210, "posifi": 210, "logcombin": [210, 274], "radsimp": 210, "rad_ration": 210, "collect_sqrt": 210, "collect_const": 210, "ratsimp": 210, "ratsimpmodprim": 210, "trigsimp": [210, 274], "powsimp": [210, 274], "powdenest": [210, 274], "combsimp": [210, 274], "denest": 210, "sqrtdenest": 210, "elimin": 210, "cse": 210, "opt_cs": 210, "tree_cs": 210, "hyperexpand": [210, 274], "epath": 210, "diophantin": [211, 216, 217], "classify_diop": 211, "diop_solv": 211, "diop_linear": 211, "base_solution_linear": 211, "diop_quadrat": 211, "diop_dn": 211, "cornacchia": 211, "diop_bf_dn": 211, "transformation_to_dn": 211, "transformation_to_norm": 211, "find_dn": 211, "diop_ternary_quadrat": 211, "square_factor": 211, "descent": 211, "diop_general_pythagorean": 211, "diop_general_sum_of_squar": 211, "diop_general_sum_of_even_pow": 211, "power_represent": 211, "sum_of_three_squar": 211, "sum_of_four_squar": 211, "sum_of_pow": 211, "sum_of_squar": 211, "merge_solut": 211, "pqa": 211, "parametrize_ternary_quadrat": 211, "diop_ternary_quadratic_norm": 211, "ldescent": 211, "gaussian_reduc": 211, "holzer": 211, "prime_as_sum_of_two_squar": 211, "sqf_normal": 211, "reconstruct": 211, "diophantinesolutionset": 211, "diophantineequationtyp": 211, "binaryquadrat": 211, "inhomogeneousternaryquadrat": 211, "homogeneousternaryquadraticnorm": 211, "homogeneousternaryquadrat": 211, "inhomogeneousgeneralquadrat": 211, "homogeneousgeneralquadrat": 211, "generalsumofsquar": 211, "generalpythagorean": 211, "cubicthu": 211, "generalsumofevenpow": 211, "inequ": [213, 216, 217], "od": [214, 216, 217], "dsolv": 214, "dsolve_system": 214, "classify_od": 214, "checkodesol": 214, "homogeneous_ord": 214, "infinitesim": 214, "checkinfsol": 214, "constantsimp": 214, "hint": [214, 215], "allhint": 214, "odesimp": 214, "constant_renumb": 214, "sol_simpl": 214, "1st_exact": 214, "1st_homogeneous_coeff_best": 214, "1st_homogeneous_coeff_subs_dep_div_indep": 214, "1st_homogeneous_coeff_subs_indep_div_dep": 214, "1st_linear": 214, "1st_rational_riccati": 214, "2nd_linear_airi": 214, "2nd_linear_bessel": 214, "liouvil": 214, "riccati_special_minus2": 214, "nth_linear_constant_coeff_homogen": 214, "nth_linear_constant_coeff_undetermined_coeffici": 214, "nth_linear_constant_coeff_variation_of_paramet": 214, "nth_linear_euler_eq_homogen": 214, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 214, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 214, "nth_algebra": 214, "nth_order_reduc": 214, "separ": 214, "almost_linear": 214, "linear_coeffici": 214, "separable_reduc": 214, "lie_group": 214, "2nd_hypergeometr": 214, "1st_power_seri": 214, "2nd_power_series_ordinari": 214, "2nd_power_series_regular": 214, "heurist": 214, "abaco1_simpl": 214, "abaco1_product": 214, "bivari": 214, "chi": 214, "abaco2_similar": 214, "function_sum": 214, "abaco2_unique_unknown": 214, "abaco2_unique_gener": 214, "riccati": 214, "riccati_norm": 214, "riccati_inverse_norm": 214, "riccati_reduc": 214, "construct_c": 214, "construct_d": 214, "rational_laurent_seri": 214, "compute_m_ybar": 214, "solve_aux_eq": 214, "remove_redundant_sol": 214, "get_gen_sol_from_part_sol": 214, "solve_riccati": 214, "canon": 214, "linodesolv": 214, "inform": [214, 215], "jordan": 214, "nonlinear": 214, "pde": [215, 216, 217], "pde_separ": 215, "pde_separate_add": 215, "pde_separate_mul": 215, "pdsolv": 215, "classify_pd": 215, "checkpdesol": 215, "pde_1st_linear_constant_coeff_homogen": 215, "pde_1st_linear_constant_coeff": 215, "pde_1st_linear_variable_coeff": 215, "ordinari": [216, 217], "deutil": 216, "recurr": 216, "de": [216, 217], "wrong": 217, "why": [217, 268], "we": 217, "emploi": 217, "return": 217, "search": 217, "deal": 217, "where": 217, "known": 217, "plan": 217, "linear_eq_to_matrix": 217, "linsolv": 217, "nonlinsolv": 217, "transolv": 217, "continu": [218, 274], "stochast": 218, "process": 218, "dim": [219, 220], "arrai": [219, 220], "contract": 219, "explicit": 220, "pytest": 227, "randomis": 228, "detail": [230, 231, 246], "routin": 231, "decor": 232, "enum": 233, "variat": 236, "memoiz": 238, "pkgdata": 240, "inspect": 241, "time": 242, "coordsys3d": [243, 247], "del": [243, 248, 249], "parametricregion": 243, "implicitregion": 243, "parametricintegr": 243, "orient": [244, 247], "axisorient": 244, "bodyorient": 244, "spaceorient": 244, "quaternionorient": 244, "matrix_to_vector": 245, "vector_integr": 245, "locat": 247, "orient_new": 247, "AND": 247, "quadrilater": 248, "third": 248, "curvilinear": 249, "applic": 252, "calcul": 252, "perimet": 252, "surfac": 252, "area": 252, "volum": 252, "flux": 252, "verifi": 252, "stoke": 252, "introductori": [262, 267], "quick": [263, 264, 266, 269, 270], "two": 266, "final": 266, "read": 266, "interest": 268, "understand": 269, "through": 269, "invari": 269, "prevent": 269, "shape": 270, "access": 270, "delet": 270, "insert": 270, "determin": 270, "rref": 270, "nullspac": 270, "columnspac": 270, "eigenvalu": 270, "eigenvector": 270, "next": 271, "preliminari": 272, "exercis": 272, "str": 273, "mathml": 273, "cancel": 274, "apart": 274, "gammasimp": 274}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})