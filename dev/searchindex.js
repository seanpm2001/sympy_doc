Search.setIndex({"docnames": ["citing", "explanation/active-deprecations", "explanation/gotchas", "explanation/index", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/contributing/build-docs", "guides/contributing/debug", "guides/contributing/dependencies", "guides/contributing/deprecations", "guides/contributing/dev-setup", "guides/contributing/docstring", "guides/contributing/documentation-style-guide", "guides/contributing/index", "guides/contributing/make-a-contribution", "guides/custom-functions", "guides/getting_started/index", "guides/getting_started/install", "guides/index", "guides/solving/index", "index", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/four_bar_linkage_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorial/basic_operations", "tutorial/calculus", "tutorial/features", "tutorial/gotchas", "tutorial/index", "tutorial/intro", "tutorial/manipulation", "tutorial/matrices", "tutorial/next", "tutorial/preliminaries", "tutorial/printing", "tutorial/simplification", "tutorial/solvers"], "filenames": ["citing.md", "explanation/active-deprecations.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/contributing/build-docs.rst", "guides/contributing/debug.rst", "guides/contributing/dependencies.md", "guides/contributing/deprecations.md", "guides/contributing/dev-setup.rst", "guides/contributing/docstring.rst", "guides/contributing/documentation-style-guide.rst", "guides/contributing/index.rst", "guides/contributing/make-a-contribution.rst", "guides/custom-functions.md", "guides/getting_started/index.rst", "guides/getting_started/install.md", "guides/index.rst", "guides/solving/index.md", "index.rst", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/four_bar_linkage_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorial/basic_operations.rst", "tutorial/calculus.rst", "tutorial/features.rst", "tutorial/gotchas.rst", "tutorial/index.rst", "tutorial/intro.rst", "tutorial/manipulation.rst", "tutorial/matrices.rst", "tutorial/next.rst", "tutorial/preliminaries.rst", "tutorial/printing.rst", "tutorial/simplification.rst", "tutorial/solvers.rst"], "titles": ["Citing SymPy", "List of active deprecations", "Gotchas and Pitfalls", "Explanation", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Docstring Style Guide", "Contributing to SymPy", "Making a Contribution", "Writing Custom Functions", "Getting Started", "Installation", "How-to Guides", "Solve Equations", "Welcome to SymPy\u2019s documentation!", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joint (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "A four bar linkage", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Tutorials", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 24, 27, 28, 31, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 64, 74, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 99, 101, 102, 104, 106, 108, 109, 126, 127, 130, 140, 144, 157, 166, 168, 172, 178, 181, 183, 185, 187, 188, 190, 192, 193, 194, 196, 197, 204, 205, 207, 210, 213, 214, 215, 216, 217, 218, 221, 222, 226, 228, 229, 232, 233, 235, 236, 242, 243, 245, 246, 248, 250, 251, 261, 262, 264, 265, 267, 268, 271, 272, 273], "public": [0, 14, 33, 51, 52, 73, 187, 188, 190, 191, 195, 210, 213, 217, 231, 242], "us": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 131, 132, 135, 136, 138, 140, 142, 143, 144, 147, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 245, 247, 248, 250, 251, 253, 254, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "meurer": 0, "A": [0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 18, 19, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 97, 99, 101, 105, 106, 107, 108, 109, 110, 111, 114, 115, 118, 119, 124, 125, 128, 129, 130, 131, 132, 135, 137, 140, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 242, 243, 245, 246, 247, 248, 250, 251, 258, 263, 265, 267, 268, 272], "smith": [0, 1, 88, 186], "cp": [0, 43, 92, 185], "paprocki": 0, "m": [0, 1, 2, 5, 7, 9, 18, 25, 29, 33, 34, 39, 40, 42, 43, 47, 50, 51, 52, 53, 54, 56, 59, 61, 63, 67, 68, 76, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 101, 103, 104, 106, 109, 110, 111, 113, 114, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 139, 146, 160, 161, 164, 166, 168, 178, 182, 184, 185, 186, 188, 190, 191, 192, 193, 197, 198, 199, 200, 202, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 218, 219, 222, 223, 229, 230, 232, 235, 237, 242, 244, 246, 250, 251, 262, 268, 271, 272, 273], "\u010dert\u00edk": 0, "o": [0, 2, 5, 7, 14, 24, 32, 33, 42, 43, 49, 51, 52, 57, 59, 61, 62, 64, 65, 67, 73, 76, 91, 95, 106, 109, 111, 113, 114, 125, 126, 127, 128, 130, 131, 153, 163, 174, 176, 178, 180, 190, 191, 193, 194, 197, 199, 204, 207, 213, 217, 222, 235, 244, 247, 262], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 216], "ivanov": 0, "s": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 17, 18, 20, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 90, 91, 92, 93, 94, 95, 99, 101, 103, 105, 106, 108, 111, 114, 116, 120, 124, 128, 130, 134, 135, 136, 142, 143, 145, 147, 149, 150, 153, 157, 158, 160, 161, 163, 166, 168, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 223, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 243, 247, 248, 249, 250, 253, 261, 262, 264, 265, 266, 267, 268, 272, 273], "moor": [0, 84, 87], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 2, 8, 9, 12, 14, 15, 18, 25, 28, 29, 31, 33, 34, 35, 42, 43, 44, 45, 47, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 78, 80, 81, 82, 83, 84, 87, 91, 92, 93, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 119, 125, 126, 127, 128, 130, 131, 135, 137, 143, 147, 159, 161, 163, 165, 166, 168, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 200, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 223, 226, 228, 231, 235, 236, 242, 244, 246, 250, 261, 262, 266, 267, 268, 271, 272, 273], "vig": 0, "granger": [0, 149], "BE": 0, "muller": 0, "rp": [0, 67, 135], "bonazzi": 0, "f": [0, 1, 2, 5, 9, 14, 18, 31, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 69, 74, 75, 76, 78, 80, 82, 84, 87, 91, 92, 93, 95, 99, 109, 113, 119, 124, 125, 126, 130, 132, 136, 137, 148, 149, 152, 161, 163, 166, 173, 177, 178, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 232, 235, 236, 238, 247, 248, 251, 261, 262, 267, 271, 272, 273], "gupta": [0, 216], "h": [0, 2, 5, 31, 32, 33, 34, 35, 42, 47, 50, 51, 52, 56, 59, 73, 76, 78, 82, 83, 87, 88, 93, 101, 111, 128, 132, 135, 147, 149, 152, 157, 161, 168, 182, 183, 184, 185, 186, 190, 191, 192, 193, 196, 197, 205, 209, 213, 215, 216, 217, 218, 223, 230, 251, 262, 271], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 149], "mj": 0, "terrel": 0, "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 138, 140, 142, 144, 147, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 250, 252, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 1, 2, 4, 5, 7, 8, 12, 14, 15, 18, 24, 25, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 73, 74, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 93, 94, 95, 97, 101, 102, 103, 104, 106, 109, 111, 114, 116, 121, 122, 123, 126, 127, 128, 130, 132, 135, 136, 138, 146, 147, 152, 153, 158, 160, 161, 163, 168, 169, 172, 173, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 228, 229, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 261, 267, 272], "kulal": 0, "cimrman": 0, "r": [0, 1, 2, 5, 7, 9, 14, 15, 18, 25, 32, 33, 34, 35, 42, 43, 51, 52, 53, 55, 56, 57, 64, 65, 67, 69, 73, 74, 76, 78, 87, 91, 93, 95, 101, 103, 106, 109, 110, 111, 113, 114, 116, 118, 121, 122, 123, 127, 128, 129, 130, 131, 132, 135, 159, 160, 163, 164, 166, 173, 174, 176, 178, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 204, 205, 207, 209, 210, 213, 215, 216, 217, 223, 228, 230, 232, 242, 244, 246, 247, 248, 251, 272], "scopatz": 0, "2017": [0, 182], "symbol": [0, 1, 3, 5, 11, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 41, 43, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 81, 82, 84, 87, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 128, 130, 132, 135, 136, 137, 138, 140, 142, 143, 145, 147, 149, 151, 152, 155, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 229, 235, 236, 242, 243, 244, 246, 247, 248, 251, 253, 258, 261, 262, 265, 267, 268, 271, 272, 273], "comput": [0, 1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 19, 20, 22, 25, 31, 33, 34, 35, 38, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 66, 70, 73, 74, 75, 77, 78, 80, 82, 84, 87, 88, 90, 91, 93, 95, 99, 101, 105, 108, 109, 110, 113, 114, 116, 117, 121, 124, 130, 147, 148, 149, 157, 162, 163, 165, 167, 168, 172, 174, 178, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 219, 229, 232, 235, 236, 242, 243, 244, 245, 246, 247, 248, 250, 253, 258, 261, 262, 264, 265, 268, 272], "python": [0, 1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 26, 27, 28, 31, 43, 51, 52, 55, 57, 63, 79, 81, 82, 84, 87, 91, 92, 93, 94, 105, 114, 130, 173, 183, 184, 185, 187, 188, 194, 196, 197, 205, 209, 213, 216, 218, 228, 229, 230, 231, 232, 235, 236, 238, 242, 254, 264, 265, 266, 267, 268, 270, 271, 272], "peerj": 0, "scienc": [0, 43, 76, 87, 129, 130, 184, 191, 207, 262], "3": [0, 2, 3, 5, 7, 8, 12, 13, 15, 18, 20, 22, 25, 26, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 107, 111, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 130, 131, 132, 134, 136, 140, 142, 143, 144, 148, 152, 157, 158, 160, 162, 163, 166, 169, 170, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 228, 229, 231, 232, 233, 235, 236, 238, 240, 242, 243, 244, 245, 246, 248, 250, 251, 258, 261, 262, 264, 266, 267, 268, 271, 272, 273], "e103": 0, "http": [0, 1, 7, 9, 11, 12, 13, 14, 15, 18, 20, 25, 27, 28, 29, 31, 32, 33, 35, 39, 40, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 67, 68, 69, 73, 76, 78, 79, 80, 81, 82, 84, 87, 91, 94, 99, 101, 103, 104, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 173, 175, 177, 179, 182, 191, 193, 196, 197, 200, 202, 204, 205, 206, 209, 210, 213, 216, 217, 229, 230, 231, 233, 235, 236, 238, 242, 243, 247, 249, 251, 268, 271], "doi": [0, 14, 31, 43, 87, 191, 206, 209, 217], "org": [0, 2, 7, 11, 14, 15, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 99, 101, 103, 104, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 173, 175, 177, 179, 191, 193, 197, 200, 204, 205, 206, 210, 213, 216, 217, 229, 230, 231, 233, 235, 242, 243, 247, 249, 251, 268, 271], "10": [0, 2, 3, 11, 14, 18, 20, 25, 31, 33, 40, 42, 43, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 67, 68, 76, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 96, 97, 99, 101, 102, 107, 111, 114, 116, 130, 132, 136, 147, 157, 158, 169, 173, 174, 175, 176, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 200, 203, 204, 205, 206, 209, 210, 213, 216, 217, 218, 227, 228, 233, 235, 236, 238, 242, 244, 261, 268, 272], "7717": 0, "cs": [0, 91, 190, 191, 192, 197, 217], "103": [0, 42], "bibtex": 0, "entri": [0, 1, 29, 34, 41, 43, 49, 52, 63, 76, 80, 82, 83, 84, 86, 90, 109, 114, 116, 128, 135, 186, 190, 192, 193, 207, 217, 236], "latex": [0, 9, 11, 14, 18, 20, 59, 79, 172, 173, 177, 181, 183, 188, 197, 260, 266, 267], "user": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 23, 32, 33, 34, 42, 43, 50, 51, 52, 53, 59, 63, 76, 80, 84, 87, 93, 94, 95, 99, 101, 105, 114, 124, 126, 128, 131, 151, 152, 161, 167, 168, 172, 173, 176, 180, 184, 187, 190, 192, 194, 195, 196, 197, 198, 206, 209, 211, 215, 216, 217, 226, 229, 230, 232, 233, 236, 242, 245, 246, 251, 261, 264, 265, 267, 268, 269], "articl": [0, 51, 52, 84, 87, 189, 191, 192, 197, 242, 266], "titl": [0, 14, 15, 183], "author": [0, 14, 91, 149, 192, 258], "aaron": 0, "christoph": [0, 242], "p": [0, 1, 2, 5, 7, 8, 9, 18, 25, 27, 28, 29, 33, 34, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 82, 84, 87, 91, 93, 94, 95, 97, 101, 102, 106, 108, 109, 110, 111, 113, 114, 118, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 142, 161, 163, 168, 174, 176, 178, 180, 182, 183, 185, 186, 187, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 207, 209, 210, 213, 215, 216, 217, 218, 222, 223, 235, 242, 244, 245, 246, 247, 248, 250, 268, 272], "mateusz": 0, "v": [0, 2, 9, 13, 25, 33, 41, 47, 50, 51, 52, 53, 54, 55, 65, 76, 80, 82, 87, 91, 95, 106, 107, 111, 116, 127, 128, 130, 131, 135, 136, 148, 163, 168, 173, 175, 176, 178, 180, 181, 183, 187, 190, 191, 192, 193, 197, 207, 209, 210, 213, 215, 217, 228, 235, 242, 244, 245, 246, 247, 248, 250], "c": [0, 2, 5, 7, 9, 11, 18, 24, 25, 31, 32, 35, 36, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 93, 94, 95, 97, 101, 103, 105, 107, 108, 109, 114, 119, 121, 122, 123, 126, 127, 128, 130, 132, 136, 142, 143, 144, 147, 149, 152, 157, 160, 162, 163, 168, 173, 176, 180, 181, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 222, 223, 229, 230, 232, 235, 238, 239, 242, 243, 244, 245, 246, 247, 248, 251, 254, 260, 262, 264, 271, 272, 273], "ert": 0, "k": [0, 2, 7, 15, 18, 25, 31, 32, 33, 34, 35, 37, 41, 42, 45, 46, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 69, 76, 78, 81, 82, 84, 87, 91, 109, 119, 125, 127, 128, 130, 137, 151, 152, 155, 159, 161, 163, 172, 178, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 213, 215, 217, 218, 219, 221, 222, 223, 224, 228, 232, 235, 242, 243, 244, 245, 246, 247, 248, 250, 251, 271, 272], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 1, 2, 7, 8, 13, 18, 25, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 74, 76, 78, 80, 81, 82, 83, 84, 87, 91, 93, 94, 95, 97, 99, 101, 106, 107, 109, 110, 111, 114, 118, 119, 127, 128, 130, 132, 135, 140, 142, 144, 146, 151, 152, 155, 160, 161, 162, 163, 173, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 228, 231, 232, 235, 238, 242, 243, 244, 245, 246, 247, 262, 264, 268, 272, 273], "matthew": 0, "amit": [0, 216], "sergiu": 0, "jason": [0, 197], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 149], "e": [0, 1, 2, 7, 8, 9, 11, 12, 13, 14, 15, 18, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 87, 91, 93, 94, 95, 97, 101, 102, 106, 109, 111, 113, 114, 126, 127, 130, 131, 132, 135, 142, 143, 147, 152, 153, 155, 158, 160, 162, 163, 168, 169, 173, 177, 178, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 242, 245, 248, 250, 251, 261, 262, 266, 267, 272], "richard": [0, 91], "francesco": 0, "harsh": [0, 216], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 1, 2, 15, 25, 29, 31, 33, 34, 37, 41, 42, 43, 47, 49, 50, 52, 53, 55, 56, 59, 73, 76, 78, 80, 82, 84, 87, 91, 99, 102, 128, 129, 130, 135, 142, 143, 160, 163, 168, 172, 178, 182, 184, 186, 188, 190, 191, 192, 193, 194, 196, 197, 199, 205, 207, 209, 210, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 235, 242, 243, 244, 245, 246, 247, 248, 250, 251], "andi": [0, 129], "rou": 0, "ka": 0, "n": [0, 2, 5, 7, 13, 14, 15, 18, 24, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 47, 49, 50, 52, 53, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 94, 95, 101, 103, 104, 106, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 136, 137, 139, 143, 148, 149, 152, 157, 159, 160, 161, 163, 164, 166, 168, 170, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 215, 216, 217, 220, 222, 223, 226, 229, 235, 237, 238, 242, 243, 244, 245, 246, 250, 262, 268, 271, 272, 273], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 217], "anthoni": 0, "year": [0, 1, 12, 14], "month": 0, "jan": [0, 52], "keyword": [0, 12, 14, 18, 32, 33, 34, 42, 43, 51, 52, 55, 56, 64, 66, 67, 68, 82, 87, 91, 94, 99, 101, 109, 125, 126, 157, 163, 177, 183, 185, 187, 188, 190, 192, 193, 196, 197, 198, 204, 209, 210, 215, 222, 228, 229, 231, 233, 236, 238, 246, 268], "algebra": [0, 2, 7, 15, 19, 22, 28, 34, 42, 51, 52, 55, 57, 69, 72, 73, 74, 76, 78, 81, 82, 86, 88, 91, 92, 93, 113, 124, 130, 131, 179, 182, 185, 186, 188, 189, 190, 191, 193, 194, 197, 199, 207, 210, 211, 213, 216, 252, 253, 256, 258, 259, 263, 264, 266, 268], "system": [0, 1, 2, 4, 5, 8, 9, 10, 11, 13, 15, 18, 19, 21, 22, 26, 28, 42, 51, 52, 53, 57, 76, 79, 80, 81, 82, 87, 92, 93, 94, 98, 100, 101, 105, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 130, 141, 142, 157, 160, 161, 163, 166, 170, 173, 176, 177, 178, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 197, 205, 206, 211, 212, 216, 217, 228, 229, 242, 243, 244, 247, 249, 251, 258, 264, 266, 268, 272, 273], "abstract": [0, 1, 31, 32, 40, 51, 53, 57, 59, 64, 69, 84, 108, 114, 147, 149, 158, 161, 162, 163, 184, 189, 192, 216, 217, 219, 223, 230, 250, 254], "an": [0, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 105, 106, 108, 109, 111, 113, 116, 118, 124, 125, 127, 128, 130, 131, 134, 135, 136, 140, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 160, 161, 163, 164, 165, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 242, 243, 245, 246, 248, 249, 250, 251, 259, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273], "open": [0, 1, 9, 11, 12, 14, 15, 17, 20, 31, 51, 53, 57, 78, 81, 101, 114, 117, 130, 197, 205, 212, 216, 217, 239, 266, 268], "sourc": [0, 9, 13, 14, 15, 18, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 173, 174, 175, 176, 177, 178, 182, 183, 184, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 248, 260, 266], "written": [0, 7, 11, 14, 15, 18, 19, 29, 33, 39, 42, 43, 47, 51, 56, 59, 63, 69, 74, 76, 80, 81, 90, 91, 118, 124, 130, 163, 178, 179, 180, 181, 184, 185, 193, 197, 200, 204, 207, 210, 213, 230, 248, 250, 265, 266, 267, 272], "pure": [0, 11, 19, 25, 52, 57, 78, 81, 84, 101, 127, 168, 187, 188, 190, 193, 197, 217, 235], "It": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 25, 26, 27, 28, 31, 32, 33, 39, 42, 43, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 67, 68, 74, 76, 78, 80, 81, 87, 91, 92, 93, 94, 95, 97, 99, 101, 103, 105, 106, 107, 108, 109, 114, 116, 122, 124, 125, 126, 128, 130, 132, 136, 137, 147, 152, 153, 158, 159, 160, 161, 162, 163, 165, 168, 171, 173, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 200, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 232, 233, 236, 242, 244, 245, 246, 248, 250, 251, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272], "built": [0, 2, 4, 9, 11, 14, 15, 26, 28, 34, 51, 57, 78, 114, 130, 185, 188, 197, 198, 202, 213, 216, 217, 223, 232, 235, 236, 266, 267, 271], "focu": [0, 1, 7, 61, 215, 266], "extens": [0, 7, 11, 14, 15, 18, 19, 42, 51, 57, 63, 67, 78, 87, 111, 130, 185, 187, 188, 189, 190, 191, 192, 193, 197, 207, 209, 213, 215, 216, 229, 230, 239, 265, 272], "eas": [0, 114, 181, 183, 197, 200], "through": [0, 2, 7, 12, 14, 18, 20, 31, 33, 42, 43, 45, 50, 51, 52, 55, 56, 59, 61, 62, 63, 64, 65, 67, 76, 80, 81, 87, 91, 94, 95, 99, 106, 109, 114, 116, 124, 128, 134, 135, 173, 183, 184, 190, 192, 197, 203, 207, 209, 213, 215, 216, 217, 218, 229, 235, 242, 243, 248, 251, 263, 264, 265, 270], "both": [0, 1, 2, 4, 7, 8, 11, 12, 14, 15, 18, 19, 24, 25, 31, 32, 33, 43, 46, 47, 49, 50, 51, 52, 56, 57, 59, 66, 75, 76, 78, 81, 82, 87, 91, 93, 94, 95, 101, 106, 108, 109, 116, 118, 119, 127, 135, 136, 147, 153, 160, 163, 168, 173, 176, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 195, 196, 197, 199, 204, 205, 206, 207, 209, 210, 213, 215, 216, 218, 222, 228, 230, 235, 236, 242, 243, 262, 265, 266, 267, 272, 273], "interact": [0, 19, 24, 51, 65, 78, 85, 87, 130, 160, 177, 181, 187, 188, 209, 217, 233, 240, 252, 259, 260, 264, 266, 267, 271, 272], "programmat": [0, 4, 216, 246], "applic": [0, 1, 15, 19, 34, 35, 41, 42, 43, 44, 51, 52, 57, 78, 82, 87, 91, 94, 97, 109, 113, 114, 124, 127, 129, 130, 147, 148, 173, 176, 180, 185, 190, 191, 192, 193, 197, 199, 204, 210, 213, 216, 230, 235, 242, 248, 249, 266], "These": [0, 1, 2, 5, 7, 8, 11, 14, 15, 18, 23, 24, 32, 33, 42, 50, 51, 52, 53, 59, 76, 78, 81, 87, 93, 95, 101, 109, 110, 116, 118, 122, 127, 130, 153, 158, 159, 173, 174, 178, 180, 181, 184, 185, 186, 187, 188, 190, 197, 207, 210, 213, 214, 216, 217, 219, 224, 228, 229, 230, 235, 248, 262, 265, 268, 271, 272], "characterist": [0, 53, 69, 87, 180, 186, 188, 190, 191, 213, 215, 268], "have": [0, 2, 4, 5, 7, 8, 9, 12, 13, 14, 15, 18, 20, 25, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 66, 67, 69, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 99, 101, 102, 104, 105, 109, 111, 114, 115, 116, 122, 124, 127, 130, 147, 149, 152, 156, 158, 160, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 199, 200, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 221, 223, 224, 226, 227, 228, 230, 231, 232, 235, 236, 238, 242, 243, 245, 246, 247, 248, 251, 261, 262, 264, 265, 266, 267, 268, 271, 272, 273], "led": 0, "becom": [0, 1, 2, 5, 7, 12, 14, 15, 19, 42, 47, 50, 51, 52, 55, 74, 79, 87, 93, 177, 180, 184, 185, 187, 194, 197, 200, 206, 213, 216, 217, 223, 238, 244, 246, 272], "popular": [0, 11, 52, 92, 130, 266], "librari": [0, 1, 7, 11, 12, 14, 18, 19, 20, 23, 33, 51, 52, 56, 76, 78, 79, 87, 92, 105, 114, 130, 183, 187, 188, 217, 228, 229, 230, 235, 236, 261, 264, 265, 266], "scientif": [0, 20, 51, 130], "ecosystem": 0, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 147, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273], "paper": [0, 14, 91, 116, 181, 192, 193, 206, 207, 210, 213, 217], "present": [0, 1, 2, 5, 11, 15, 31, 32, 35, 38, 42, 43, 45, 49, 51, 54, 78, 87, 91, 94, 97, 99, 101, 109, 116, 163, 165, 173, 175, 177, 178, 183, 184, 190, 191, 192, 196, 197, 210, 216, 230, 236, 239, 244, 245, 246, 250, 273], "architectur": [0, 130, 187, 228], "descript": [0, 1, 12, 14, 15, 22, 23, 32, 34, 41, 59, 78, 91, 135, 153, 160, 171, 180, 181, 182, 197, 221, 228, 230, 232, 233, 252, 269], "its": [0, 1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 19, 25, 27, 28, 29, 32, 33, 34, 35, 39, 41, 42, 43, 50, 51, 52, 53, 56, 57, 59, 61, 63, 67, 69, 76, 78, 79, 81, 82, 84, 87, 91, 93, 94, 95, 97, 101, 105, 106, 109, 111, 114, 116, 117, 118, 124, 127, 128, 130, 131, 136, 142, 148, 149, 151, 152, 157, 158, 161, 163, 168, 170, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 209, 212, 213, 215, 216, 217, 221, 222, 223, 228, 231, 232, 235, 236, 239, 242, 244, 245, 246, 248, 251, 266, 267, 268, 271, 272], "featur": [0, 1, 2, 3, 11, 12, 15, 18, 19, 20, 23, 51, 53, 55, 82, 93, 114, 124, 130, 179, 197, 213, 217, 226, 230, 233, 249, 265, 266, 270, 272], "discuss": [0, 1, 2, 3, 5, 7, 8, 12, 14, 15, 16, 18, 21, 23, 34, 42, 52, 59, 91, 105, 109, 114, 124, 127, 128, 172, 179, 180, 181, 187, 223, 232, 252, 261, 263, 264, 266, 267, 269, 271, 272], "select": [0, 9, 33, 35, 42, 43, 50, 51, 52, 60, 65, 79, 81, 82, 91, 93, 107, 128, 168, 177, 187, 188, 190, 191, 193, 197, 206, 209, 215], "submodul": [0, 11, 12, 14, 33, 105, 184, 188, 190, 192], "The": [0, 2, 5, 6, 8, 9, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 258, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273], "supplementari": 0, "materi": [0, 94, 134, 270], "provid": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 25, 31, 32, 33, 34, 40, 41, 42, 43, 49, 50, 51, 53, 55, 59, 60, 62, 67, 70, 73, 74, 78, 79, 81, 82, 84, 87, 88, 90, 91, 92, 93, 95, 97, 99, 105, 106, 109, 111, 113, 116, 117, 118, 119, 124, 125, 126, 127, 128, 130, 131, 136, 137, 157, 165, 166, 167, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 200, 202, 205, 206, 207, 209, 213, 214, 215, 216, 217, 218, 222, 223, 228, 229, 230, 232, 233, 235, 236, 238, 242, 244, 245, 246, 248, 249, 251, 262, 266, 267, 268, 272], "addit": [0, 1, 2, 5, 11, 12, 15, 20, 21, 33, 41, 42, 43, 50, 51, 57, 59, 63, 69, 71, 75, 76, 78, 79, 81, 84, 87, 93, 98, 99, 101, 105, 106, 109, 127, 128, 131, 149, 161, 162, 165, 177, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 197, 203, 206, 207, 209, 210, 213, 214, 215, 216, 217, 228, 229, 230, 232, 233, 235, 236, 238, 245, 264, 266, 267, 268, 271, 272], "exampl": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 15, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 101, 103, 104, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 167, 169, 170, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 220, 221, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 248, 249, 250, 251, 253, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 270, 271, 273], "further": [0, 7, 11, 13, 18, 28, 32, 52, 59, 63, 76, 78, 83, 84, 87, 93, 94, 98, 99, 106, 108, 109, 124, 128, 135, 180, 182, 183, 184, 190, 192, 193, 206, 207, 209, 213, 217, 223, 265, 266], "outlin": [0, 7, 11, 12, 18, 49, 78, 184, 213], "detail": [0, 1, 3, 4, 7, 11, 12, 13, 14, 15, 16, 18, 23, 32, 42, 51, 53, 56, 58, 59, 76, 77, 78, 79, 82, 87, 91, 99, 108, 109, 114, 128, 130, 135, 153, 157, 173, 175, 182, 183, 184, 190, 192, 199, 204, 209, 210, 211, 213, 214, 217, 222, 223, 228, 231, 233, 234, 236, 246, 247, 248, 249, 252, 262, 264, 268, 269, 271], "volum": [0, 14, 33, 50, 59, 76, 182, 191, 207, 210, 213, 232, 242, 249], "page": [0, 1, 2, 7, 8, 9, 11, 12, 14, 15, 22, 23, 33, 34, 50, 56, 76, 91, 92, 109, 130, 168, 183, 186, 187, 188, 191, 197, 207, 210, 233, 250, 272], "journal": [0, 14, 50, 56, 91, 102, 191, 209, 232], "issn": 0, "2376": 0, "5992": 0, "url": [0, 52, 233], "bsd": [0, 9, 11, 19, 266], "licens": [0, 9, 11, 19, 266], "so": [0, 1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 42, 43, 45, 47, 49, 51, 52, 55, 57, 59, 61, 63, 64, 65, 67, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 94, 95, 101, 105, 109, 114, 116, 118, 124, 125, 127, 130, 131, 136, 147, 149, 157, 159, 160, 161, 163, 165, 167, 168, 172, 173, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 221, 222, 226, 228, 229, 232, 233, 235, 236, 238, 247, 251, 253, 261, 262, 264, 266, 267, 268, 271, 272, 273], "you": [0, 1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 22, 23, 24, 27, 28, 29, 31, 33, 34, 42, 43, 50, 51, 52, 53, 55, 57, 58, 59, 63, 65, 67, 69, 70, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 91, 92, 93, 101, 103, 104, 105, 109, 110, 111, 114, 115, 125, 127, 128, 130, 152, 157, 158, 161, 163, 172, 173, 175, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 198, 200, 204, 205, 209, 210, 213, 214, 215, 216, 217, 221, 222, 223, 226, 228, 229, 230, 231, 233, 235, 236, 239, 245, 246, 247, 248, 261, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273], "free": [0, 1, 19, 20, 31, 32, 33, 38, 41, 42, 47, 51, 63, 78, 82, 84, 87, 91, 94, 95, 99, 102, 124, 132, 152, 170, 173, 179, 183, 184, 188, 189, 190, 192, 193, 197, 199, 205, 207, 209, 210, 213, 215, 216, 223, 235, 266], "whatev": [0, 1, 2, 18, 42, 51, 52, 209, 213, 214, 216, 236], "like": [0, 1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 23, 33, 34, 36, 42, 43, 50, 51, 52, 55, 56, 57, 59, 61, 71, 74, 78, 79, 81, 82, 84, 85, 86, 87, 91, 92, 93, 97, 101, 105, 111, 114, 116, 127, 128, 130, 131, 145, 147, 157, 158, 161, 162, 163, 168, 172, 173, 176, 178, 180, 183, 184, 185, 187, 188, 189, 190, 192, 193, 195, 196, 197, 200, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 224, 226, 228, 229, 230, 231, 235, 236, 238, 239, 245, 246, 248, 250, 261, 262, 264, 265, 266, 267, 268, 272], "academ": [0, 32, 35, 191], "commerci": [0, 266], "creat": [0, 7, 8, 11, 12, 13, 14, 15, 17, 21, 27, 32, 33, 34, 40, 42, 43, 51, 52, 53, 55, 57, 58, 59, 61, 63, 64, 66, 67, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 92, 93, 94, 97, 101, 106, 108, 109, 111, 114, 117, 118, 119, 121, 123, 126, 127, 128, 130, 131, 140, 142, 144, 148, 151, 152, 153, 157, 158, 160, 161, 163, 166, 169, 172, 173, 175, 176, 180, 181, 183, 184, 186, 187, 188, 190, 192, 193, 194, 197, 204, 209, 213, 216, 217, 218, 222, 223, 228, 229, 230, 232, 233, 235, 236, 242, 246, 248, 262, 264, 267, 268, 271, 272, 273], "fork": [0, 1, 13, 15, 116], "deriv": [0, 1, 3, 6, 14, 18, 31, 32, 33, 35, 41, 42, 53, 57, 58, 59, 61, 68, 73, 74, 76, 78, 79, 81, 84, 87, 101, 105, 107, 108, 109, 113, 116, 118, 119, 121, 124, 125, 126, 127, 128, 152, 161, 165, 168, 169, 172, 173, 175, 176, 177, 178, 180, 183, 184, 185, 188, 190, 192, 193, 194, 197, 199, 207, 209, 213, 214, 215, 219, 220, 224, 230, 242, 244, 245, 263, 266, 273], "long": [0, 14, 15, 16, 33, 43, 50, 51, 52, 54, 64, 76, 78, 79, 81, 87, 91, 94, 95, 116, 177, 193, 194, 197, 206, 207, 215, 217, 229, 238, 244, 264, 267], "copi": [0, 1, 2, 7, 9, 13, 34, 43, 44, 51, 67, 87, 91, 92, 186, 188, 190, 192, 196, 197, 204, 215, 228, 235, 238, 271], "statement": [0, 7, 8, 14, 18, 20, 32, 33, 51, 59, 76, 81, 84, 114, 142, 197, 217, 226, 230, 235], "redistribut": [0, 193], "see": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 15, 18, 21, 26, 27, 28, 29, 31, 32, 33, 37, 39, 42, 43, 44, 47, 50, 52, 53, 56, 57, 58, 59, 63, 67, 68, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 92, 93, 99, 105, 108, 109, 120, 122, 125, 127, 128, 132, 135, 138, 139, 148, 152, 153, 157, 158, 159, 160, 162, 163, 166, 168, 173, 177, 180, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 242, 243, 251, 261, 262, 264, 266, 267, 268, 270, 271, 272, 273], "file": [0, 2, 9, 11, 12, 13, 14, 15, 33, 87, 114, 130, 152, 197, 204, 207, 209, 226, 228, 229, 230, 236, 239], "That": [0, 2, 7, 8, 12, 15, 18, 51, 52, 57, 81, 87, 124, 160, 165, 171, 180, 181, 184, 185, 187, 188, 190, 192, 203, 204, 213, 215, 217, 229, 230, 236, 261, 264, 267, 272], "said": [0, 12, 25, 29, 33, 37, 91, 168, 178, 180, 181, 185, 213, 216, 217, 242, 248], "although": [0, 2, 4, 5, 7, 11, 12, 14, 15, 18, 43, 51, 52, 57, 63, 75, 76, 79, 81, 82, 84, 87, 91, 94, 105, 116, 130, 184, 187, 188, 190, 192, 193, 205, 206, 209, 210, 215, 229, 235, 236, 264, 267, 272], "requir": [0, 1, 2, 11, 14, 15, 16, 18, 20, 21, 33, 42, 51, 52, 54, 55, 59, 61, 62, 64, 65, 68, 70, 81, 87, 90, 91, 92, 93, 94, 99, 105, 106, 109, 111, 113, 114, 116, 118, 128, 137, 160, 172, 173, 175, 183, 184, 187, 188, 190, 192, 194, 197, 200, 206, 207, 210, 213, 215, 216, 217, 221, 228, 229, 230, 231, 233, 235, 236, 244, 245, 246, 268, 270], "conveni": [0, 1, 2, 9, 24, 31, 33, 43, 51, 52, 56, 59, 78, 81, 93, 114, 130, 172, 175, 180, 181, 183, 184, 185, 186, 187, 188, 192, 195, 204, 205, 209, 215, 221, 222, 229, 231, 232, 236, 248, 262, 264], "pleas": [0, 1, 12, 14, 15, 17, 20, 29, 31, 51, 59, 63, 76, 91, 105, 109, 114, 124, 127, 128, 135, 136, 157, 172, 181, 182, 183, 184, 190, 191, 205, 209, 210, 215, 216, 236, 242, 246, 269, 273], "when": [0, 1, 2, 4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 20, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 42, 43, 44, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 75, 77, 78, 79, 81, 82, 83, 87, 91, 92, 93, 99, 101, 102, 105, 108, 114, 116, 122, 124, 125, 126, 127, 128, 131, 136, 137, 142, 147, 148, 152, 155, 157, 165, 166, 167, 172, 177, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 221, 222, 226, 228, 229, 230, 231, 233, 235, 236, 238, 239, 241, 245, 262, 264, 266, 267, 272, 273], "your": [0, 1, 2, 9, 11, 12, 13, 14, 15, 17, 18, 20, 22, 27, 51, 52, 78, 79, 87, 92, 93, 101, 105, 125, 127, 181, 183, 197, 204, 209, 213, 216, 217, 235, 236, 262, 266, 268, 269, 271, 272], "work": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 18, 20, 26, 28, 31, 32, 33, 42, 43, 44, 51, 52, 55, 59, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 105, 114, 116, 128, 130, 143, 147, 152, 156, 157, 158, 159, 162, 165, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 197, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 223, 228, 229, 230, 232, 235, 236, 237, 238, 245, 246, 259, 264, 265, 266, 267, 268, 271, 272], "also": [0, 1, 2, 5, 7, 8, 9, 11, 12, 15, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 40, 42, 43, 50, 52, 53, 55, 56, 57, 58, 59, 63, 67, 69, 71, 73, 74, 76, 78, 80, 81, 82, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 119, 122, 125, 126, 127, 128, 130, 131, 132, 136, 146, 147, 149, 153, 157, 162, 163, 166, 168, 172, 173, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 244, 245, 246, 247, 248, 250, 251, 261, 262, 264, 266, 267, 268, 271, 272, 273], "consid": [0, 1, 2, 4, 7, 8, 12, 15, 18, 29, 32, 33, 40, 43, 46, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 67, 75, 76, 78, 79, 80, 81, 82, 84, 87, 91, 101, 105, 106, 111, 115, 125, 131, 153, 160, 163, 168, 174, 177, 178, 180, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 204, 209, 210, 213, 214, 215, 216, 217, 228, 230, 235, 244, 246, 248, 250, 251, 264, 268, 272], "contribut": [0, 11, 12, 13, 14, 15, 20, 21, 67, 91, 109, 119, 122, 187, 189, 190, 192, 213, 251], "all": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 106, 107, 108, 109, 111, 113, 114, 116, 117, 119, 124, 125, 127, 130, 131, 137, 142, 143, 147, 157, 159, 160, 161, 163, 165, 166, 167, 168, 170, 171, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 223, 224, 226, 228, 229, 230, 231, 233, 235, 236, 238, 242, 243, 245, 247, 248, 249, 250, 252, 261, 262, 264, 266, 267, 268, 271, 272, 273], "chang": [0, 1, 2, 7, 9, 14, 15, 16, 20, 32, 33, 34, 42, 43, 47, 50, 51, 52, 55, 57, 59, 65, 66, 76, 78, 81, 87, 91, 93, 94, 97, 101, 111, 114, 116, 121, 137, 148, 158, 168, 169, 172, 178, 180, 181, 182, 183, 184, 185, 186, 190, 193, 194, 197, 204, 205, 206, 207, 209, 213, 215, 216, 217, 218, 228, 235, 236, 246, 248, 261, 264, 267, 271], "back": [0, 18, 32, 33, 47, 50, 51, 52, 57, 59, 66, 67, 73, 75, 76, 78, 79, 82, 91, 92, 101, 157, 177, 180, 187, 189, 192, 193, 195, 197, 207, 213, 215, 218, 219], "we": [0, 1, 2, 5, 7, 8, 11, 12, 13, 14, 15, 18, 22, 26, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 64, 69, 74, 75, 76, 78, 79, 80, 81, 82, 87, 88, 90, 91, 101, 104, 105, 106, 107, 109, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 135, 138, 146, 149, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 172, 173, 175, 176, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 221, 223, 228, 229, 230, 232, 233, 235, 236, 242, 245, 246, 247, 248, 250, 251, 261, 262, 264, 266, 267, 268, 271, 272, 273], "can": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 119, 122, 124, 125, 126, 127, 128, 130, 131, 135, 136, 137, 142, 144, 147, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 235, 236, 238, 244, 245, 246, 247, 248, 250, 251, 261, 262, 264, 266, 267, 268, 270, 271, 272, 273], "incorpor": [0, 5, 11, 185, 209], "benefit": [0, 11, 18, 33, 105, 127, 177], "end": [0, 1, 2, 5, 7, 8, 11, 14, 18, 22, 31, 32, 33, 41, 42, 47, 49, 50, 51, 52, 56, 57, 59, 61, 63, 67, 76, 79, 81, 82, 84, 87, 91, 93, 94, 95, 97, 113, 116, 118, 121, 125, 126, 127, 128, 168, 173, 177, 178, 181, 182, 186, 190, 197, 200, 203, 205, 206, 208, 210, 213, 214, 215, 216, 217, 218, 228, 230, 231, 233, 235, 238, 248, 262, 266, 268, 272], "develop": [0, 5, 7, 12, 14, 15, 16, 17, 18, 20, 21, 23, 31, 34, 49, 93, 130, 167, 183, 184, 187, 190, 215, 216, 266, 269], "team": [0, 12], "member": [0, 1, 7, 14, 32, 40, 42, 52, 74, 97, 184, 205, 222], "list": [0, 3, 7, 11, 12, 14, 15, 20, 25, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 101, 106, 108, 109, 113, 116, 118, 121, 125, 126, 130, 131, 136, 147, 149, 152, 153, 157, 158, 160, 161, 163, 165, 173, 176, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 261, 265, 266, 268, 271, 272, 273], "github": [0, 1, 9, 11, 12, 13, 15, 20, 31, 51, 67, 78, 87, 167, 205, 216, 268], "found": [0, 7, 8, 9, 11, 12, 14, 15, 31, 34, 42, 43, 45, 47, 49, 51, 52, 53, 61, 62, 67, 76, 78, 87, 91, 101, 107, 108, 109, 110, 127, 130, 167, 180, 184, 185, 186, 187, 192, 193, 194, 197, 199, 200, 203, 204, 207, 210, 213, 214, 215, 216, 217, 221, 235, 236, 238, 239, 271], "zotero": 0, "codebas": [1, 7, 12, 187, 226], "polici": [1, 15, 16, 21, 231, 233], "well": [1, 2, 5, 7, 12, 14, 15, 18, 20, 29, 31, 32, 33, 34, 35, 43, 50, 51, 56, 57, 59, 78, 82, 85, 87, 102, 105, 114, 116, 118, 119, 127, 153, 162, 165, 166, 172, 180, 182, 183, 184, 186, 187, 188, 190, 192, 197, 204, 205, 206, 207, 209, 213, 215, 216, 228, 229, 245, 246, 250, 264, 266, 267, 272], "instruct": [1, 2, 5, 9, 11, 13, 14, 15, 17, 23, 33, 197, 215, 229, 230], "contributor": [1, 9, 11, 15, 18], "how": [1, 2, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 22, 32, 33, 42, 43, 50, 51, 58, 59, 63, 74, 77, 78, 81, 82, 84, 87, 91, 93, 105, 109, 114, 115, 121, 125, 126, 128, 130, 134, 135, 151, 155, 158, 159, 160, 165, 166, 173, 180, 183, 184, 187, 188, 190, 192, 196, 197, 200, 204, 205, 207, 209, 210, 211, 213, 214, 217, 223, 228, 229, 230, 231, 233, 235, 236, 246, 262, 264, 266, 267, 268, 269, 271, 272], "thing": [1, 2, 7, 8, 11, 12, 14, 15, 18, 29, 33, 41, 42, 43, 51, 53, 63, 79, 80, 81, 82, 87, 92, 105, 111, 114, 127, 130, 147, 163, 168, 180, 181, 194, 196, 204, 205, 206, 209, 213, 216, 221, 231, 233, 235, 261, 262, 264, 266, 267, 268, 271, 272], "In": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 50, 51, 52, 53, 55, 56, 57, 59, 64, 66, 67, 68, 69, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 95, 97, 101, 105, 108, 109, 114, 117, 118, 119, 124, 125, 126, 127, 128, 130, 131, 149, 151, 152, 153, 158, 162, 163, 166, 168, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 226, 228, 230, 232, 233, 235, 236, 239, 242, 245, 246, 248, 250, 261, 264, 265, 266, 267, 268, 271, 272, 273], "particular": [1, 2, 7, 8, 12, 14, 22, 29, 34, 42, 51, 52, 55, 59, 62, 76, 78, 81, 84, 87, 91, 94, 97, 124, 147, 158, 185, 186, 187, 188, 190, 192, 193, 203, 205, 207, 209, 210, 213, 215, 216, 228, 230, 232, 268, 270, 272], "last": [1, 2, 4, 5, 7, 8, 15, 16, 18, 26, 27, 28, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 55, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 101, 113, 135, 168, 182, 183, 184, 185, 187, 188, 190, 193, 196, 197, 204, 205, 210, 213, 215, 216, 217, 218, 223, 226, 228, 229, 230, 231, 233, 235, 236, 238, 262, 264, 267, 268], "least": [1, 7, 11, 12, 15, 29, 31, 33, 42, 51, 57, 63, 75, 76, 78, 87, 91, 92, 109, 143, 157, 165, 184, 185, 187, 188, 190, 192, 193, 204, 206, 209, 213, 215, 216, 217, 230, 272], "after": [1, 2, 9, 12, 13, 14, 15, 20, 25, 27, 28, 32, 34, 39, 42, 43, 47, 49, 50, 51, 52, 53, 57, 66, 68, 73, 78, 82, 87, 91, 93, 94, 101, 125, 127, 130, 132, 136, 148, 160, 168, 172, 178, 181, 186, 190, 192, 193, 194, 195, 197, 198, 203, 210, 213, 214, 215, 216, 218, 228, 231, 236, 238, 242, 244, 248, 261, 262, 264, 268, 272], "major": [1, 9, 11, 12, 15, 61, 105, 222, 266, 272], "releas": [1, 9, 15, 51, 78, 82, 93, 127, 183, 222, 233, 236, 267], "includ": [1, 2, 7, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 28, 29, 31, 32, 33, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 63, 69, 76, 78, 81, 82, 84, 86, 87, 91, 92, 93, 103, 105, 113, 114, 116, 118, 119, 124, 125, 127, 130, 143, 147, 152, 157, 160, 161, 171, 178, 181, 185, 188, 189, 190, 192, 193, 196, 197, 198, 203, 204, 205, 207, 209, 212, 213, 214, 215, 217, 220, 223, 226, 228, 230, 231, 232, 233, 235, 242, 243, 245, 250, 252, 262, 266, 267, 268, 272, 273], "period": [1, 12, 14, 31, 51, 52, 57, 76, 91, 127, 137, 159, 166, 192, 197, 200, 203, 212, 216, 217, 235], "mai": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 18, 20, 22, 24, 29, 31, 32, 33, 34, 42, 43, 44, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 76, 78, 79, 81, 82, 83, 87, 88, 90, 91, 93, 107, 109, 110, 114, 118, 124, 127, 149, 158, 163, 164, 165, 170, 173, 176, 178, 180, 183, 184, 185, 186, 190, 192, 197, 198, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 248, 250, 261, 262, 264, 267, 268, 272, 273], "remov": [1, 7, 12, 26, 27, 42, 45, 49, 51, 55, 57, 66, 67, 76, 81, 82, 87, 91, 94, 97, 106, 121, 123, 127, 147, 163, 188, 190, 193, 195, 196, 197, 209, 210, 213, 215, 216, 218, 219, 229, 230, 231, 233, 235, 236, 261, 272], "updat": [1, 2, 12, 20, 51, 118, 143, 153, 156, 157, 159, 182, 190, 193, 197, 210, 223, 233], "replac": [1, 2, 7, 12, 14, 31, 33, 42, 50, 51, 52, 55, 56, 57, 59, 61, 65, 78, 81, 82, 87, 91, 92, 93, 105, 107, 130, 152, 158, 173, 184, 190, 193, 194, 198, 204, 206, 207, 209, 213, 215, 216, 223, 224, 235, 236, 238, 261, 270], "continu": [1, 5, 8, 12, 14, 15, 18, 31, 33, 41, 43, 45, 51, 56, 57, 59, 76, 79, 82, 91, 98, 99, 158, 161, 177, 188, 190, 193, 210, 212, 213, 221, 263], "dure": [1, 2, 12, 24, 33, 51, 52, 82, 87, 91, 93, 106, 109, 130, 131, 180, 192, 206, 215, 216, 233, 235], "sympydeprecationwarn": [1, 12, 226, 228, 231, 233], "messag": [1, 12, 52, 79, 231, 233], "whenev": [1, 2, 11, 12, 18, 49, 76, 78, 87, 170, 183, 184, 185, 199, 204, 207, 217, 262, 264, 267], "recommend": [1, 2, 7, 9, 13, 14, 18, 20, 22, 32, 33, 51, 52, 55, 82, 105, 125, 130, 157, 173, 180, 185, 186, 187, 188, 194, 210, 213, 216, 222, 226, 233, 245, 246, 270, 273], "doe": [1, 4, 7, 8, 11, 14, 15, 16, 18, 20, 23, 24, 27, 28, 31, 32, 33, 34, 42, 43, 47, 49, 50, 51, 52, 53, 55, 57, 59, 61, 62, 64, 65, 67, 76, 78, 81, 82, 87, 90, 91, 93, 103, 105, 107, 114, 116, 121, 143, 147, 153, 157, 159, 162, 172, 180, 181, 183, 185, 186, 187, 188, 190, 192, 193, 194, 197, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 222, 223, 226, 228, 230, 232, 235, 236, 238, 242, 243, 246, 261, 262, 264, 267, 268, 271, 272, 273], "describ": [1, 2, 7, 8, 12, 14, 15, 18, 32, 34, 41, 42, 43, 45, 46, 49, 50, 51, 52, 56, 59, 61, 66, 67, 76, 78, 82, 87, 90, 91, 101, 105, 109, 111, 113, 114, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 142, 163, 167, 168, 172, 173, 178, 180, 181, 184, 187, 190, 192, 198, 204, 207, 209, 210, 213, 216, 217, 221, 230, 235, 236, 242, 243, 248, 262], "below": [1, 2, 7, 9, 11, 12, 14, 15, 18, 20, 31, 32, 33, 41, 42, 43, 51, 52, 56, 58, 59, 60, 61, 67, 68, 74, 76, 78, 82, 87, 90, 91, 93, 94, 95, 101, 106, 109, 113, 114, 116, 118, 119, 120, 125, 126, 127, 130, 157, 163, 168, 173, 181, 182, 183, 184, 186, 193, 197, 198, 200, 206, 209, 210, 213, 214, 216, 217, 228, 230, 235, 236, 238, 246, 248, 251, 252, 268, 272], "each": [1, 2, 7, 9, 11, 12, 18, 28, 29, 31, 32, 33, 34, 35, 42, 43, 47, 51, 52, 53, 54, 55, 56, 57, 59, 61, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 94, 99, 101, 107, 108, 109, 114, 116, 118, 121, 123, 125, 128, 147, 160, 163, 172, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 195, 197, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 230, 232, 235, 236, 238, 242, 243, 244, 246, 248, 250, 262, 265, 267, 272, 273], "given": [1, 2, 5, 7, 9, 11, 12, 15, 18, 25, 27, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 78, 80, 81, 82, 84, 87, 90, 91, 93, 94, 97, 99, 102, 106, 107, 111, 113, 114, 118, 128, 136, 153, 158, 160, 168, 169, 171, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 222, 223, 226, 228, 230, 232, 235, 236, 238, 239, 240, 242, 244, 246, 248, 250, 261, 267, 270, 272, 273], "add": [1, 2, 4, 7, 11, 12, 13, 14, 25, 27, 31, 33, 40, 42, 47, 52, 55, 58, 66, 68, 76, 80, 84, 87, 91, 94, 97, 106, 114, 130, 141, 147, 157, 162, 163, 166, 180, 181, 183, 186, 187, 188, 190, 192, 193, 194, 197, 198, 207, 209, 210, 213, 214, 216, 217, 219, 221, 222, 223, 231, 236, 240, 253, 262, 264, 267, 271, 272], "filter": [1, 4, 12, 51, 52, 76, 135, 193, 226, 228, 233, 235], "modul": [1, 2, 4, 7, 11, 12, 13, 14, 15, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 41, 43, 51, 52, 54, 56, 57, 59, 63, 67, 71, 74, 77, 78, 79, 81, 84, 85, 86, 87, 92, 93, 94, 96, 97, 99, 102, 105, 114, 115, 120, 124, 125, 126, 130, 132, 135, 137, 138, 150, 153, 166, 167, 168, 169, 178, 181, 183, 188, 189, 191, 194, 195, 197, 201, 204, 207, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 244, 246, 248, 249, 250, 251, 252, 258, 260, 261, 264, 266, 272, 273], "For": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 65, 66, 69, 72, 74, 75, 76, 77, 80, 81, 82, 87, 91, 92, 93, 94, 95, 101, 103, 107, 109, 110, 114, 118, 124, 125, 126, 127, 128, 130, 132, 146, 147, 152, 156, 158, 160, 161, 162, 163, 165, 168, 169, 173, 176, 177, 178, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 221, 222, 223, 224, 228, 229, 230, 232, 233, 235, 236, 239, 240, 242, 243, 246, 248, 250, 251, 261, 262, 264, 267, 268, 272, 273], "except": [1, 2, 5, 7, 8, 11, 12, 14, 18, 31, 33, 42, 43, 51, 52, 55, 57, 59, 76, 78, 86, 91, 108, 122, 169, 182, 184, 187, 188, 189, 192, 193, 194, 195, 197, 206, 209, 210, 213, 214, 216, 221, 226, 228, 230, 231, 234, 235, 236, 245, 248, 260, 261, 264, 267, 268], "filterwarn": [1, 12], "ignor": [1, 2, 18, 33, 42, 51, 52, 56, 57, 61, 66, 76, 81, 87, 91, 101, 107, 116, 160, 163, 173, 183, 193, 197, 198, 209, 215, 229, 272], "error": [1, 7, 8, 9, 11, 12, 14, 15, 24, 31, 33, 40, 43, 50, 51, 52, 57, 58, 61, 66, 76, 78, 87, 90, 91, 93, 114, 181, 182, 185, 187, 188, 190, 194, 197, 199, 205, 213, 214, 215, 216, 217, 228, 229, 230, 233, 235, 238, 242, 253, 261], "make": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 24, 27, 28, 29, 31, 33, 34, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 67, 78, 79, 81, 87, 90, 91, 92, 93, 94, 95, 97, 109, 113, 114, 116, 117, 121, 122, 125, 127, 128, 130, 143, 160, 165, 177, 180, 183, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 205, 206, 207, 209, 213, 214, 215, 216, 221, 223, 226, 228, 229, 230, 231, 233, 235, 236, 245, 250, 251, 264, 265, 266, 267, 268, 272], "rais": [1, 2, 7, 8, 12, 18, 26, 28, 31, 33, 40, 43, 51, 52, 53, 55, 57, 60, 61, 64, 66, 67, 68, 76, 78, 82, 84, 87, 88, 90, 91, 99, 101, 137, 149, 178, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 199, 205, 209, 212, 213, 214, 215, 216, 217, 221, 223, 226, 228, 230, 233, 235, 236, 238, 239, 248, 268], "want": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 18, 20, 29, 31, 33, 34, 35, 43, 51, 52, 58, 63, 65, 67, 70, 76, 78, 82, 84, 87, 88, 91, 92, 99, 101, 104, 110, 114, 130, 146, 156, 157, 160, 163, 166, 168, 175, 176, 180, 181, 183, 185, 186, 187, 190, 192, 193, 194, 196, 197, 198, 204, 205, 207, 209, 210, 213, 214, 215, 216, 217, 223, 226, 228, 230, 232, 235, 236, 246, 248, 251, 261, 262, 264, 266, 267, 268, 269, 271, 272], "aren": [1, 12, 18, 33, 51, 114, 196, 216], "omit": [1, 7, 14, 18, 33, 43, 50, 51, 52, 76, 78, 81, 87, 165, 197, 198, 205, 207, 215, 221, 230, 235, 262], "regex": 1, "match": [1, 2, 7, 11, 12, 14, 18, 42, 43, 50, 51, 64, 76, 78, 82, 87, 113, 139, 164, 172, 173, 186, 193, 209, 210, 213, 214, 217, 226, 228, 230, 235, 236, 247, 262], "categori": [1, 23, 184, 252, 259], "here": [1, 5, 7, 8, 12, 14, 15, 18, 20, 27, 28, 33, 34, 35, 40, 41, 42, 43, 49, 50, 51, 52, 53, 55, 56, 57, 59, 67, 68, 69, 73, 74, 76, 78, 81, 82, 87, 90, 91, 92, 93, 94, 97, 101, 105, 109, 114, 115, 116, 121, 122, 123, 125, 127, 128, 130, 131, 153, 158, 163, 172, 177, 178, 180, 181, 183, 184, 187, 188, 190, 192, 193, 194, 197, 198, 204, 206, 207, 209, 210, 213, 215, 216, 217, 221, 222, 229, 230, 232, 233, 235, 236, 246, 248, 250, 261, 262, 264, 266, 267, 268, 270, 271, 272], "regular": [1, 2, 7, 8, 12, 34, 39, 51, 52, 55, 59, 67, 73, 74, 78, 91, 114, 157, 187, 194, 213, 223, 228, 271, 272], "about": [1, 2, 5, 7, 8, 12, 13, 14, 15, 18, 20, 25, 26, 28, 29, 32, 33, 42, 43, 44, 45, 51, 55, 57, 59, 61, 62, 63, 65, 66, 67, 71, 73, 77, 78, 80, 87, 91, 94, 95, 101, 105, 106, 107, 108, 109, 110, 111, 113, 114, 118, 127, 128, 158, 160, 161, 163, 167, 172, 173, 180, 181, 182, 184, 186, 187, 192, 194, 197, 199, 204, 209, 210, 211, 213, 217, 221, 222, 228, 229, 230, 231, 232, 233, 242, 243, 245, 248, 249, 261, 263, 264, 266, 267, 268, 272], "might": [1, 2, 7, 8, 12, 14, 18, 31, 51, 55, 57, 64, 73, 76, 84, 87, 91, 93, 105, 114, 115, 130, 143, 173, 180, 183, 187, 188, 193, 194, 197, 198, 205, 206, 207, 209, 210, 215, 216, 217, 229, 230, 233, 235, 238, 261, 264, 266, 267, 269, 272], "lead": [1, 7, 8, 18, 50, 51, 57, 61, 78, 81, 87, 91, 103, 110, 147, 173, 181, 185, 188, 190, 192, 193, 194, 197, 204, 206, 209, 213, 216, 230, 233, 238, 265, 272], "becaus": [1, 2, 7, 8, 9, 11, 12, 14, 15, 18, 20, 24, 29, 33, 43, 50, 51, 52, 57, 63, 67, 68, 76, 78, 81, 85, 87, 91, 93, 114, 118, 143, 151, 163, 165, 168, 180, 183, 184, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 204, 207, 209, 210, 213, 214, 215, 216, 226, 228, 229, 231, 235, 236, 238, 245, 262, 264, 266, 267, 268, 271, 272, 273], "against": [1, 7, 18, 52, 94, 114, 229], "start": [1, 2, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 32, 33, 35, 40, 41, 42, 43, 47, 50, 51, 52, 53, 59, 81, 82, 84, 87, 90, 91, 92, 94, 95, 97, 114, 116, 125, 126, 158, 159, 162, 166, 180, 181, 183, 187, 190, 192, 193, 197, 200, 203, 205, 206, 207, 210, 213, 215, 216, 217, 218, 221, 228, 229, 235, 237, 238, 247, 261, 264, 266], "typic": [1, 11, 12, 18, 47, 59, 76, 91, 101, 106, 111, 115, 172, 181, 183, 185, 190, 194, 207, 229, 230, 246], "span": [1, 14, 80, 87, 94, 95, 192, 197, 233, 268], "multipl": [1, 2, 7, 11, 12, 14, 18, 27, 28, 29, 31, 32, 33, 34, 40, 42, 43, 47, 50, 51, 52, 56, 57, 59, 61, 66, 69, 71, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 98, 101, 105, 116, 124, 130, 131, 147, 148, 149, 153, 160, 162, 165, 168, 169, 170, 173, 176, 180, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 197, 202, 203, 205, 206, 207, 209, 210, 213, 214, 216, 217, 218, 221, 223, 226, 230, 231, 232, 233, 235, 236, 238, 242, 246, 261, 262, 264, 265, 267, 268, 273], "line": [1, 2, 5, 7, 12, 14, 20, 32, 33, 42, 43, 47, 52, 61, 62, 63, 65, 66, 67, 68, 73, 76, 78, 79, 80, 87, 91, 94, 99, 102, 114, 116, 122, 143, 173, 177, 178, 180, 182, 183, 197, 200, 207, 209, 213, 217, 218, 226, 228, 229, 230, 233, 236, 238, 248, 251, 264], "should": [1, 2, 4, 7, 8, 9, 11, 13, 14, 15, 16, 18, 23, 24, 26, 28, 31, 32, 33, 34, 42, 43, 44, 45, 47, 50, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 91, 93, 94, 99, 101, 105, 114, 116, 118, 125, 127, 128, 130, 131, 132, 143, 147, 151, 153, 155, 157, 158, 161, 163, 165, 166, 168, 169, 173, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 196, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 221, 222, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 245, 253, 261, 262, 264, 265, 268], "don": [1, 2, 8, 12, 18, 28, 33, 76, 87, 92, 93, 105, 114, 172, 180, 181, 187, 197, 207, 216, 226, 231, 250, 261, 262, 266, 267, 272], "same": [1, 2, 5, 7, 8, 9, 12, 14, 15, 18, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 42, 43, 47, 50, 51, 52, 53, 56, 58, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 101, 102, 105, 106, 112, 114, 118, 121, 122, 127, 128, 147, 149, 157, 160, 161, 163, 165, 166, 168, 170, 171, 172, 173, 175, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 222, 223, 224, 226, 228, 230, 231, 232, 233, 235, 236, 238, 242, 243, 245, 246, 250, 262, 264, 267, 268, 271, 272], "unrel": [1, 51, 58, 185, 264], "pattern": [1, 2, 7, 11, 18, 51, 76, 78, 81, 82, 93, 157, 187, 207, 209, 213, 215, 262, 267], "instead": [1, 2, 7, 8, 9, 11, 12, 14, 15, 18, 24, 26, 28, 32, 33, 42, 44, 47, 51, 53, 54, 55, 56, 59, 78, 79, 81, 82, 84, 85, 87, 91, 99, 102, 104, 113, 114, 116, 118, 127, 130, 161, 165, 167, 173, 177, 178, 180, 181, 184, 187, 188, 190, 192, 193, 195, 197, 199, 207, 209, 213, 215, 216, 217, 221, 222, 223, 226, 231, 232, 233, 236, 240, 248, 251, 261, 262, 264, 266, 267, 268, 272, 273], "turn": [1, 7, 15, 33, 51, 57, 59, 66, 76, 85, 122, 125, 178, 184, 192, 194, 197, 204, 205, 207, 209, 210, 213, 228, 235, 250, 264, 266], "do": [1, 2, 5, 7, 8, 10, 11, 12, 14, 15, 18, 20, 23, 24, 27, 28, 29, 31, 32, 33, 34, 43, 47, 50, 51, 52, 53, 54, 57, 59, 61, 63, 66, 67, 70, 76, 78, 79, 81, 82, 84, 85, 87, 88, 91, 92, 98, 101, 105, 109, 111, 113, 114, 115, 117, 118, 122, 125, 130, 135, 138, 143, 147, 152, 155, 157, 159, 165, 167, 168, 171, 172, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 200, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 219, 222, 223, 226, 228, 229, 231, 233, 235, 236, 238, 244, 246, 247, 248, 250, 261, 262, 264, 265, 266, 267, 268, 270, 272], "abov": [1, 2, 5, 8, 9, 11, 12, 14, 15, 18, 31, 32, 33, 34, 35, 41, 42, 43, 47, 50, 51, 55, 56, 59, 61, 64, 67, 68, 76, 78, 81, 82, 87, 91, 92, 93, 95, 101, 105, 109, 111, 113, 114, 116, 117, 118, 119, 124, 126, 127, 128, 131, 158, 160, 163, 173, 178, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 204, 207, 209, 210, 213, 215, 216, 217, 221, 222, 229, 230, 236, 245, 246, 247, 248, 251, 264, 266, 267, 268, 272], "appli": [1, 8, 15, 18, 21, 25, 26, 27, 28, 29, 33, 42, 43, 44, 49, 50, 51, 52, 53, 54, 57, 58, 61, 66, 67, 69, 77, 78, 81, 82, 83, 87, 91, 93, 94, 95, 97, 101, 102, 106, 107, 116, 119, 125, 127, 129, 140, 144, 147, 148, 152, 155, 156, 160, 163, 173, 181, 183, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 217, 218, 221, 228, 231, 235, 242, 243, 246, 268, 271, 272], "If": [1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 40, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 94, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 125, 126, 127, 128, 130, 131, 136, 140, 144, 147, 153, 157, 158, 159, 160, 161, 163, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 244, 246, 248, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "pytest": [1, 11, 12, 225, 231, 233, 236, 260], "capabl": [1, 7, 31, 33, 51, 55, 63, 76, 91, 94, 95, 124, 130, 183, 194, 197, 216, 265, 266, 272, 273], "either": [1, 2, 7, 8, 9, 11, 14, 15, 18, 25, 29, 31, 32, 35, 43, 50, 51, 52, 55, 56, 57, 59, 66, 68, 74, 76, 78, 79, 81, 82, 87, 91, 101, 106, 109, 110, 113, 114, 126, 128, 130, 147, 153, 160, 163, 165, 177, 181, 183, 185, 186, 187, 188, 190, 192, 193, 197, 199, 204, 205, 206, 207, 210, 213, 214, 215, 216, 217, 218, 221, 222, 229, 235, 236, 242, 250, 264, 267, 268], "them": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 24, 27, 29, 32, 33, 40, 42, 43, 50, 51, 52, 53, 55, 56, 59, 62, 67, 69, 71, 73, 74, 76, 80, 81, 84, 87, 90, 91, 92, 105, 109, 111, 114, 116, 118, 119, 124, 125, 127, 128, 130, 136, 140, 156, 157, 163, 165, 168, 171, 173, 178, 180, 181, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 215, 216, 218, 219, 228, 230, 232, 235, 244, 261, 262, 264, 266, 267, 272], "w": [1, 2, 33, 35, 41, 50, 51, 52, 53, 54, 57, 59, 76, 78, 81, 87, 88, 108, 111, 122, 128, 129, 132, 137, 148, 152, 161, 176, 178, 179, 182, 183, 185, 186, 190, 191, 192, 193, 194, 198, 204, 205, 207, 209, 210, 213, 214, 216, 217, 228, 236, 238, 248, 273], "pythonwarn": 1, "environ": [1, 9, 11, 16, 17, 21, 51, 79, 177, 197, 217, 228, 238, 264, 266, 271], "variabl": [1, 3, 5, 8, 10, 11, 14, 15, 18, 23, 24, 25, 26, 28, 29, 31, 33, 34, 46, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 68, 70, 76, 78, 79, 81, 82, 87, 93, 94, 95, 99, 101, 113, 114, 121, 123, 130, 131, 137, 152, 157, 161, 163, 166, 172, 173, 175, 178, 185, 187, 188, 190, 192, 193, 194, 197, 198, 203, 204, 209, 210, 212, 213, 214, 215, 216, 224, 228, 230, 231, 232, 236, 242, 244, 245, 247, 248, 250, 259, 262, 264, 266, 268, 273], "NOT": [1, 81, 101, 143, 147, 162, 165, 226, 229], "blog": [1, 18, 33, 56, 82, 210, 216], "post": [1, 7, 33, 45, 51, 197, 198, 209, 228, 267], "ned": 1, "batcheld": 1, "issu": [1, 2, 8, 12, 15, 17, 18, 20, 24, 31, 50, 51, 68, 78, 81, 87, 92, 110, 124, 143, 179, 182, 191, 192, 194, 197, 205, 206, 215, 216, 228, 230, 232, 233, 235, 238, 263, 264, 267, 272], "why": [1, 2, 7, 12, 33, 51, 181, 188, 194, 204, 207, 211, 236, 265, 267, 268], "old": [1, 2, 12, 21, 51, 52, 53, 79, 127, 132, 167, 168, 177, 183, 184, 188, 189, 197, 198, 209, 213, 216, 218, 261], "defin": [1, 2, 5, 7, 8, 12, 14, 15, 24, 25, 27, 28, 31, 33, 34, 35, 41, 42, 43, 46, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 74, 76, 78, 79, 82, 84, 87, 91, 95, 99, 105, 106, 108, 111, 113, 114, 116, 117, 121, 123, 124, 128, 130, 131, 134, 140, 142, 144, 149, 152, 158, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 199, 200, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 218, 222, 223, 229, 230, 231, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 264, 266, 272], "pars": [1, 43, 51, 84, 114, 194, 196, 252, 260], "parse_mathematica": [1, 11, 93], "more": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 20, 24, 28, 29, 31, 32, 33, 34, 37, 41, 42, 43, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 73, 76, 78, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 99, 101, 105, 109, 110, 114, 116, 118, 120, 122, 124, 125, 126, 127, 128, 130, 132, 135, 147, 151, 152, 157, 160, 161, 162, 163, 168, 172, 173, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 209, 210, 213, 214, 215, 216, 217, 228, 230, 231, 232, 235, 236, 238, 242, 245, 249, 261, 262, 264, 265, 267, 268, 270, 271, 272, 273], "comprehens": [1, 7, 19, 191, 205, 217, 261], "additional_transl": 1, "paramet": [1, 2, 12, 15, 25, 26, 28, 31, 33, 34, 42, 43, 47, 49, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 74, 76, 78, 79, 81, 82, 84, 87, 88, 90, 91, 93, 94, 97, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 130, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 226, 228, 229, 230, 232, 233, 235, 236, 242, 243, 244, 245, 246, 251, 262, 267], "avail": [1, 2, 7, 9, 11, 13, 15, 20, 23, 32, 33, 42, 43, 50, 51, 56, 59, 78, 87, 92, 93, 114, 127, 130, 187, 188, 190, 193, 197, 198, 203, 205, 207, 209, 210, 215, 216, 217, 218, 222, 223, 228, 235, 236, 241, 242, 259, 264, 271], "translat": [1, 11, 33, 42, 51, 60, 62, 66, 68, 92, 93, 101, 104, 108, 109, 121, 123, 128, 180, 183, 197, 213, 215, 229, 230, 236, 238, 246], "rule": [1, 5, 7, 12, 15, 18, 33, 42, 43, 50, 51, 59, 74, 76, 78, 81, 82, 87, 94, 108, 114, 144, 147, 168, 173, 178, 181, 182, 194, 196, 197, 198, 203, 207, 208, 209, 213, 223, 235, 236, 248, 249, 264, 267], "convert": [1, 2, 7, 8, 9, 11, 12, 18, 25, 29, 33, 35, 43, 47, 51, 52, 55, 56, 57, 65, 66, 68, 71, 72, 75, 79, 81, 82, 87, 90, 91, 93, 101, 157, 160, 166, 167, 168, 170, 176, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 205, 206, 207, 209, 210, 214, 216, 217, 218, 219, 222, 228, 229, 235, 236, 238, 240, 244, 263, 264, 267, 272], "ones": [1, 11, 12, 18, 20, 33, 42, 47, 51, 76, 78, 81, 82, 84, 87, 90, 91, 114, 136, 157, 163, 186, 190, 200, 210, 213, 218, 224, 230, 238, 242, 246, 268, 271], "specifi": [1, 7, 14, 15, 18, 32, 33, 34, 46, 50, 51, 52, 53, 54, 57, 59, 60, 64, 67, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 101, 106, 109, 113, 114, 116, 118, 119, 121, 124, 125, 126, 127, 128, 130, 131, 147, 152, 157, 158, 160, 161, 166, 172, 173, 175, 176, 178, 180, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 199, 200, 203, 204, 205, 207, 209, 213, 214, 215, 216, 217, 218, 222, 223, 224, 228, 229, 230, 235, 236, 242, 243, 244, 247, 250, 259, 268], "convers": [1, 7, 14, 15, 33, 51, 71, 93, 127, 167, 185, 186, 187, 188, 190, 192, 194, 197, 210, 222, 229, 242], "sub": [1, 2, 7, 8, 14, 18, 33, 50, 57, 59, 60, 61, 62, 63, 64, 65, 67, 78, 81, 82, 84, 87, 91, 93, 94, 95, 101, 105, 107, 114, 116, 117, 118, 121, 122, 127, 130, 160, 161, 166, 173, 182, 184, 186, 187, 188, 193, 197, 204, 205, 209, 210, 213, 214, 215, 217, 228, 229, 231, 253, 261, 262, 264], "output": [1, 2, 5, 7, 11, 14, 15, 18, 32, 33, 51, 52, 59, 75, 78, 79, 81, 82, 84, 87, 91, 92, 93, 98, 101, 109, 113, 114, 122, 127, 130, 131, 135, 136, 147, 159, 163, 172, 173, 176, 177, 178, 181, 187, 190, 193, 197, 198, 207, 209, 210, 211, 212, 213, 215, 217, 222, 228, 229, 230, 232, 235, 236, 242, 264, 266, 267, 268, 271, 272, 273], "fail": [1, 7, 8, 9, 11, 12, 14, 15, 18, 33, 42, 43, 47, 50, 51, 55, 57, 75, 76, 78, 79, 87, 88, 91, 93, 116, 153, 158, 177, 183, 186, 187, 188, 190, 192, 193, 197, 204, 207, 213, 215, 217, 226, 228, 235, 236, 268], "recogn": [1, 2, 51, 52, 56, 66, 91, 94, 102, 185, 188, 196, 205, 206, 215, 222, 264], "logic": [1, 7, 18, 21, 26, 27, 28, 29, 32, 51, 53, 76, 78, 91, 155, 157, 158, 162, 197, 199, 205, 213, 217, 235, 264, 265, 266, 268], "mean": [1, 2, 7, 8, 11, 12, 14, 15, 18, 29, 34, 43, 50, 51, 52, 53, 69, 76, 78, 79, 81, 82, 85, 87, 91, 105, 163, 165, 168, 173, 177, 180, 183, 184, 185, 187, 190, 192, 196, 197, 207, 209, 210, 213, 215, 216, 217, 218, 219, 221, 222, 228, 235, 246, 261, 262, 264, 266, 267, 268, 272, 273], "form": [1, 5, 7, 12, 15, 18, 25, 28, 29, 30, 31, 33, 34, 41, 42, 43, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 67, 71, 73, 74, 76, 78, 80, 82, 84, 86, 87, 91, 93, 94, 95, 98, 101, 105, 106, 108, 109, 110, 113, 114, 116, 118, 121, 123, 124, 125, 126, 128, 130, 131, 140, 143, 144, 145, 147, 157, 158, 161, 163, 165, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 222, 223, 228, 229, 235, 242, 244, 245, 247, 248, 250, 255, 256, 262, 266, 267, 268, 271, 272, 273], "similar": [1, 2, 5, 7, 12, 13, 18, 43, 50, 51, 52, 55, 56, 57, 59, 62, 67, 68, 72, 81, 87, 92, 101, 114, 116, 118, 127, 128, 161, 178, 180, 181, 185, 187, 188, 190, 194, 204, 206, 207, 209, 213, 215, 218, 223, 226, 229, 232, 233, 242, 243, 245, 246, 250, 261, 266, 267, 268, 270, 272], "full": [1, 2, 7, 12, 14, 15, 17, 18, 19, 28, 31, 33, 42, 43, 51, 55, 59, 63, 64, 78, 84, 87, 93, 125, 126, 173, 187, 190, 191, 193, 197, 199, 209, 210, 266, 272], "return": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 93, 94, 97, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 113, 114, 116, 118, 122, 125, 127, 128, 130, 132, 134, 135, 136, 137, 139, 140, 144, 147, 148, 149, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 244, 246, 248, 261, 262, 267, 268, 271, 272, 273], "encod": [1, 12, 35, 43, 49, 52, 81, 189, 197, 228, 232, 235], "node": [1, 31, 45, 51, 78, 93, 97, 107, 139, 164, 173, 182, 187, 197, 204, 216, 221, 232, 254, 267, 271], "syntax": [1, 2, 12, 14, 15, 18, 26, 28, 43, 51, 78, 93, 114, 130, 160, 183, 187, 196, 197, 209, 215, 219, 238, 254, 262, 264, 266, 271, 273], "tree": [1, 4, 10, 42, 45, 51, 93, 107, 114, 155, 158, 173, 189, 193, 204, 206, 209, 216, 219, 221, 232, 235, 238, 254, 260, 263], "suppos": [1, 8, 18, 43, 50, 51, 52, 76, 184, 186, 190, 192, 193, 197, 204, 207, 213, 215, 226, 235, 246, 251, 264, 266, 272], "maximum": [1, 2, 31, 33, 34, 42, 43, 51, 57, 78, 87, 91, 94, 116, 160, 168, 183, 188, 190, 193, 197, 204, 205, 209, 210, 213, 216, 217, 232, 235], "valu": [1, 2, 5, 7, 11, 12, 14, 15, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 103, 106, 108, 109, 110, 111, 113, 114, 116, 127, 130, 132, 136, 139, 142, 147, 149, 152, 155, 157, 158, 159, 160, 163, 164, 166, 167, 168, 173, 174, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 228, 230, 231, 235, 236, 238, 244, 246, 248, 251, 262, 264, 267], "multipli": [1, 2, 25, 29, 33, 42, 51, 62, 66, 73, 80, 82, 87, 91, 109, 118, 126, 127, 128, 140, 149, 163, 168, 169, 184, 185, 186, 188, 190, 192, 193, 197, 199, 206, 207, 210, 213, 218, 235, 245, 264, 267], "minimum": [1, 12, 31, 33, 42, 43, 45, 47, 51, 52, 55, 57, 87, 105, 109, 116, 147, 172, 183, 185, 190, 216, 217, 231, 262], "previou": [1, 12, 14, 18, 35, 40, 41, 42, 43, 46, 51, 57, 78, 82, 90, 106, 127, 165, 180, 181, 190, 203, 210, 214, 218, 235, 265, 267, 272], "wai": [1, 2, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 18, 24, 32, 34, 35, 40, 42, 43, 44, 47, 51, 53, 56, 59, 67, 71, 75, 76, 78, 80, 84, 87, 90, 91, 93, 94, 97, 105, 109, 111, 113, 114, 118, 120, 121, 124, 127, 143, 157, 160, 161, 166, 168, 171, 172, 173, 175, 176, 178, 180, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 204, 207, 209, 210, 213, 214, 216, 218, 219, 222, 223, 226, 230, 232, 235, 236, 239, 242, 245, 246, 247, 248, 250, 261, 262, 264, 265, 266, 267, 272, 273], "wa": [1, 2, 7, 11, 12, 18, 40, 42, 43, 45, 51, 52, 53, 59, 64, 87, 91, 93, 105, 106, 114, 116, 118, 127, 128, 158, 168, 180, 181, 182, 184, 190, 192, 193, 194, 196, 197, 206, 207, 209, 213, 215, 217, 226, 228, 231, 233, 235, 236, 262, 264, 266, 267, 270], "x": [1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 42, 43, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 130, 131, 135, 137, 138, 139, 140, 141, 143, 144, 147, 152, 153, 158, 160, 161, 162, 163, 164, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 228, 229, 230, 231, 233, 235, 236, 238, 242, 244, 245, 246, 247, 248, 250, 251, 261, 262, 264, 266, 267, 268, 271, 272, 273], "max": [1, 33, 42, 43, 51, 58, 59, 61, 78, 87, 91, 93, 94, 183, 192, 193, 197, 204, 206, 207, 236], "min": [1, 43, 47, 51, 56, 58, 87, 93, 183, 192, 197, 203, 213], "21": [1, 14, 37, 42, 51, 54, 56, 64, 65, 73, 87, 91, 93, 94, 128, 183, 188, 190, 191, 192, 194, 196, 197, 203, 213, 215, 217, 218, 272], "now": [1, 2, 5, 7, 8, 9, 10, 11, 13, 15, 18, 20, 32, 33, 43, 51, 52, 59, 62, 67, 68, 73, 75, 76, 80, 87, 91, 101, 106, 113, 114, 117, 119, 122, 124, 130, 131, 166, 168, 173, 177, 180, 181, 184, 185, 187, 190, 193, 194, 198, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 223, 228, 229, 236, 246, 247, 264, 266, 267, 272, 273], "number": [1, 4, 7, 11, 12, 13, 14, 15, 18, 25, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 77, 78, 79, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 95, 99, 101, 102, 103, 105, 109, 110, 113, 114, 118, 127, 128, 130, 136, 139, 142, 143, 146, 147, 148, 149, 151, 152, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 193, 194, 197, 199, 203, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 222, 223, 228, 230, 232, 235, 238, 242, 244, 245, 247, 248, 250, 253, 261, 262, 264, 266, 267, 268, 272], "just": [1, 2, 7, 8, 10, 12, 14, 15, 18, 20, 29, 32, 33, 42, 49, 51, 52, 53, 74, 76, 78, 79, 80, 81, 87, 91, 92, 103, 105, 106, 111, 114, 118, 122, 127, 128, 130, 143, 148, 153, 163, 168, 172, 177, 178, 180, 184, 186, 187, 188, 190, 192, 196, 197, 204, 205, 206, 207, 209, 213, 216, 226, 228, 230, 231, 233, 247, 248, 250, 261, 262, 264, 265, 266, 267, 268, 272, 273], "wrapper": [1, 11, 18, 27, 29, 33, 43, 51, 59, 87, 127, 175, 177, 186, 187, 190, 197, 204, 213, 216, 217, 229, 233, 235], "around": [1, 2, 8, 11, 12, 14, 15, 18, 20, 31, 40, 43, 51, 52, 53, 55, 57, 60, 67, 71, 90, 91, 106, 124, 127, 131, 181, 187, 190, 192, 197, 199, 204, 208, 210, 213, 216, 217, 228, 242, 243, 262, 264, 266], "other": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 19, 21, 25, 29, 32, 33, 34, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 76, 78, 81, 82, 84, 87, 91, 92, 93, 94, 95, 101, 105, 106, 108, 114, 115, 118, 119, 124, 127, 128, 130, 132, 135, 136, 137, 147, 158, 160, 161, 162, 163, 166, 168, 169, 170, 172, 173, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 223, 224, 226, 229, 230, 231, 232, 235, 236, 242, 244, 245, 248, 250, 252, 261, 262, 264, 266, 267, 268, 272], "is_perfect_squar": 1, "ntheori": [1, 29, 42, 51, 52, 190, 193, 210, 235, 257], "primetest": [1, 51, 91], "is_squar": [1, 51, 82, 91], "is_prim": [1, 7, 51, 184], "isprim": [1, 29, 52, 91], "final": [1, 7, 12, 14, 15, 18, 32, 43, 50, 51, 57, 59, 76, 78, 81, 87, 91, 95, 99, 108, 109, 116, 121, 123, 124, 125, 128, 143, 155, 158, 160, 161, 163, 165, 166, 168, 173, 180, 181, 184, 187, 190, 192, 199, 205, 206, 207, 209, 210, 213, 215, 216, 223, 236, 265, 266, 267], "divid": [1, 42, 50, 51, 52, 67, 87, 91, 167, 168, 185, 187, 188, 190, 192, 193, 197, 213, 232, 267], "incorrect": [1, 8, 12, 15, 18, 42, 51, 61, 91, 99, 176, 188, 213, 216, 229, 232, 233], "later": [1, 5, 12, 33, 42, 76, 82, 105, 110, 111, 116, 118, 119, 125, 127, 128, 130, 137, 172, 180, 187, 190, 196, 197, 198, 207, 209, 213, 232, 245, 261, 262, 264, 266, 267, 272], "problem": [1, 2, 5, 7, 8, 15, 18, 22, 35, 45, 47, 51, 52, 63, 76, 78, 82, 87, 91, 94, 96, 97, 102, 105, 114, 118, 119, 122, 124, 125, 172, 180, 181, 184, 185, 189, 190, 207, 209, 210, 213, 216, 232, 235, 249, 258, 262, 264, 268], "alwai": [1, 2, 7, 8, 12, 14, 15, 18, 20, 25, 32, 42, 43, 50, 51, 52, 53, 55, 57, 59, 61, 63, 66, 67, 75, 76, 78, 81, 82, 87, 90, 91, 97, 101, 102, 113, 114, 116, 118, 122, 131, 163, 165, 168, 169, 178, 180, 184, 185, 187, 188, 190, 192, 193, 197, 198, 199, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 224, 228, 230, 235, 236, 242, 243, 248, 262, 264, 265, 266, 267, 272], "correct": [1, 2, 8, 12, 14, 15, 18, 33, 40, 42, 48, 50, 51, 55, 57, 75, 76, 78, 87, 91, 101, 114, 127, 180, 181, 190, 193, 204, 210, 213, 215, 216, 221, 229, 235, 264, 271], "specif": [1, 7, 9, 13, 14, 15, 18, 42, 43, 51, 52, 53, 59, 63, 78, 80, 82, 87, 106, 108, 109, 113, 114, 124, 130, 132, 168, 181, 183, 184, 188, 190, 192, 193, 196, 197, 198, 203, 209, 210, 213, 214, 215, 217, 223, 228, 229, 230, 235, 254, 268, 272], "bottom_up": 1, "interactive_travers": 1, "postorder_travers": [1, 267], "preorder_travers": [1, 267], "differ": [1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 18, 21, 23, 24, 32, 33, 34, 40, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 62, 64, 66, 67, 71, 73, 75, 76, 78, 79, 80, 81, 84, 87, 91, 92, 93, 94, 99, 105, 106, 111, 114, 116, 120, 124, 127, 128, 131, 135, 136, 148, 149, 157, 158, 161, 163, 165, 168, 172, 173, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 242, 244, 248, 249, 250, 253, 263, 264, 266, 267, 268, 271, 272], "top": [1, 12, 14, 15, 33, 50, 51, 52, 67, 68, 78, 81, 87, 94, 95, 113, 158, 165, 187, 197, 207, 213, 230, 231, 236, 251, 267], "level": [1, 2, 7, 8, 12, 14, 15, 33, 42, 49, 51, 57, 59, 78, 81, 87, 91, 105, 118, 130, 158, 163, 168, 172, 175, 181, 183, 186, 187, 189, 195, 197, 206, 210, 216, 217, 221, 229, 230, 235, 267, 268, 270], "namespac": [1, 11, 14, 24, 33, 34, 51, 188, 210, 213, 214, 228, 230, 231, 236], "gener": [1, 2, 5, 7, 8, 9, 12, 16, 18, 20, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 65, 67, 69, 74, 76, 78, 79, 80, 81, 84, 87, 91, 92, 93, 101, 105, 106, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 123, 124, 126, 127, 128, 130, 131, 135, 146, 147, 148, 149, 152, 157, 158, 161, 162, 163, 168, 170, 172, 173, 174, 176, 177, 178, 180, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 203, 206, 207, 209, 210, 211, 213, 214, 215, 217, 222, 223, 229, 230, 232, 233, 234, 235, 236, 242, 245, 246, 248, 249, 250, 262, 264, 265, 266, 267, 268, 272, 273], "ani": [1, 2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 26, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 66, 67, 68, 76, 78, 79, 81, 82, 85, 87, 88, 91, 93, 94, 95, 97, 101, 103, 106, 109, 110, 111, 113, 114, 124, 126, 127, 128, 131, 132, 136, 149, 152, 157, 158, 161, 163, 165, 168, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 198, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 219, 222, 223, 228, 229, 231, 232, 233, 235, 236, 242, 245, 246, 247, 248, 250, 251, 261, 262, 264, 267, 268, 271, 272, 273], "name": [1, 2, 7, 9, 11, 12, 13, 14, 15, 18, 24, 27, 28, 32, 33, 34, 38, 41, 44, 47, 50, 51, 52, 53, 57, 58, 59, 61, 64, 76, 78, 79, 80, 84, 87, 91, 93, 94, 97, 106, 108, 111, 113, 114, 116, 130, 134, 143, 158, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 183, 184, 185, 187, 188, 190, 192, 194, 197, 203, 207, 209, 210, 213, 214, 216, 217, 222, 223, 226, 228, 229, 230, 231, 236, 238, 239, 240, 242, 245, 248, 261, 264, 267, 268, 272], "reli": [1, 2, 11, 33, 87, 92, 98, 190, 196, 197, 204, 209, 216, 231, 236, 268], "due": [1, 5, 9, 14, 18, 31, 33, 41, 42, 51, 53, 68, 87, 91, 114, 116, 127, 136, 163, 178, 181, 187, 193, 197, 200, 210, 212, 214, 217, 233, 244, 250, 272], "intern": [1, 2, 7, 8, 12, 31, 33, 34, 42, 51, 54, 55, 56, 59, 67, 68, 71, 77, 83, 87, 91, 95, 97, 99, 116, 127, 136, 157, 158, 168, 184, 186, 188, 189, 191, 193, 195, 197, 207, 209, 211, 214, 215, 216, 217, 221, 223, 226, 230, 232, 235, 267, 271], "refactor": [1, 213, 221, 232], "tr": [1, 34, 42, 197, 206], "quantum": [1, 103, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 182, 258], "onlibetter": [1, 2, 7, 8, 9, 11, 12, 14, 18, 32, 33, 43, 51, 55, 59, 78, 81, 101, 114, 143, 167, 171, 183, 186, 187, 188, 200, 204, 205, 206, 207, 213, 214, 215, 216, 217, 229, 235, 236, 266, 272], "than": [1, 2, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 24, 29, 33, 34, 36, 42, 43, 44, 50, 51, 52, 55, 56, 57, 59, 60, 65, 66, 67, 69, 73, 76, 78, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 99, 101, 105, 109, 113, 114, 118, 121, 137, 143, 157, 160, 161, 163, 172, 181, 182, 185, 186, 187, 188, 190, 193, 194, 195, 197, 200, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 224, 229, 230, 232, 235, 236, 238, 239, 261, 262, 264, 265, 266, 267, 268, 270, 272], "ever": [1, 18, 57, 181, 184, 193, 207, 213, 230, 233, 267], "intend": [1, 7, 11, 12, 14, 51, 52, 62, 71, 76, 91, 93, 107, 158, 187, 188, 192, 195, 210, 213, 214, 226, 231, 261], "support": [1, 2, 11, 12, 13, 14, 15, 18, 20, 25, 26, 27, 28, 31, 32, 33, 43, 51, 55, 58, 59, 61, 75, 78, 84, 87, 91, 92, 93, 94, 95, 97, 98, 101, 105, 114, 130, 158, 173, 180, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 202, 203, 204, 205, 209, 213, 214, 215, 216, 217, 218, 222, 226, 228, 229, 230, 236, 246, 248, 262, 264, 267, 271], "necessari": [1, 2, 7, 9, 11, 12, 14, 16, 18, 31, 32, 42, 43, 51, 61, 76, 78, 81, 87, 91, 109, 116, 124, 183, 185, 187, 192, 193, 200, 206, 209, 213, 214, 215, 216, 217, 218, 223, 228, 230, 235, 236, 242, 265, 270], "remain": [1, 12, 18, 27, 28, 33, 42, 43, 45, 47, 51, 52, 57, 76, 82, 91, 93, 102, 114, 162, 178, 180, 181, 192, 193, 194, 203, 206, 207, 213, 214, 217, 219, 223, 232, 235, 236, 245, 250, 261, 264, 266, 267, 268], "helper": [1, 31, 33, 42, 46, 49, 51, 76, 79, 80, 148, 150, 159, 194, 204, 207, 210, 213, 214, 216, 229, 260], "place": [1, 2, 7, 15, 16, 18, 32, 43, 44, 51, 52, 57, 67, 83, 87, 90, 91, 93, 101, 130, 131, 191, 192, 197, 198, 204, 206, 209, 213, 232, 235, 261, 268, 272], "were": [1, 2, 7, 12, 15, 18, 32, 43, 45, 51, 52, 57, 68, 76, 82, 87, 91, 92, 93, 105, 113, 127, 172, 178, 181, 184, 190, 191, 192, 193, 196, 197, 198, 206, 209, 215, 235, 236, 238, 264, 266, 267, 271, 272], "order": [1, 2, 5, 7, 8, 11, 12, 14, 15, 19, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 64, 67, 68, 70, 73, 76, 78, 79, 80, 81, 82, 87, 88, 91, 92, 93, 94, 95, 101, 102, 105, 109, 113, 114, 115, 116, 117, 125, 126, 127, 128, 136, 140, 144, 147, 157, 158, 159, 160, 161, 162, 163, 168, 172, 173, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 208, 209, 210, 214, 215, 216, 217, 218, 219, 222, 223, 224, 228, 229, 230, 232, 235, 236, 238, 242, 243, 245, 246, 251, 262, 264, 265, 267, 271, 272, 273], "default_sort_kei": [1, 32, 40, 221], "addition": [1, 11, 14, 51, 125, 161, 181, 190, 197, 217, 226, 233, 245], "two": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 25, 31, 32, 33, 34, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 117, 122, 124, 125, 127, 128, 135, 136, 137, 142, 143, 147, 149, 152, 153, 158, 159, 160, 161, 162, 163, 165, 168, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 222, 232, 235, 236, 242, 244, 246, 247, 248, 250, 261, 262, 265, 267, 268, 272], "meant": [1, 2, 7, 14, 15, 18, 33, 51, 59, 64, 78, 91, 114, 130, 183, 188, 205, 209, 214, 246, 267], "repres": [1, 2, 4, 7, 8, 11, 18, 25, 27, 29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 56, 57, 59, 61, 62, 64, 66, 67, 68, 73, 74, 77, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 98, 99, 101, 106, 108, 109, 111, 113, 114, 116, 117, 118, 119, 122, 124, 125, 126, 127, 128, 130, 132, 134, 135, 137, 149, 150, 152, 156, 157, 160, 161, 163, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 195, 197, 199, 200, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 219, 221, 222, 223, 230, 232, 235, 236, 242, 244, 248, 250, 262, 264, 266, 267, 272, 273], "index": [1, 2, 9, 11, 18, 25, 33, 38, 40, 42, 43, 47, 50, 51, 52, 53, 57, 59, 62, 67, 76, 78, 81, 82, 84, 87, 90, 91, 101, 113, 114, 130, 131, 132, 134, 136, 137, 147, 156, 158, 160, 163, 168, 173, 183, 184, 188, 192, 193, 194, 197, 202, 203, 207, 215, 217, 218, 220, 221, 223, 224, 229], "matrixel": [1, 33], "howev": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 26, 28, 33, 42, 43, 47, 50, 51, 52, 53, 56, 57, 59, 61, 76, 78, 81, 82, 87, 91, 92, 93, 94, 114, 127, 131, 163, 181, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 204, 205, 206, 207, 209, 213, 214, 215, 216, 228, 229, 236, 245, 246, 250, 261, 264, 266, 268, 272, 273], "without": [1, 2, 7, 11, 12, 14, 15, 18, 20, 27, 29, 30, 33, 50, 51, 52, 53, 55, 59, 76, 78, 79, 82, 84, 87, 101, 102, 114, 120, 122, 126, 127, 163, 168, 172, 173, 174, 180, 183, 186, 187, 190, 193, 197, 199, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 219, 222, 223, 226, 228, 229, 230, 233, 235, 236, 238, 244, 247, 268, 272], "matrixsymbol": [1, 4, 7, 29, 30, 33, 51, 82, 84, 87, 197, 217, 219], "diff": [1, 5, 14, 18, 31, 33, 56, 57, 58, 59, 68, 73, 84, 87, 105, 107, 117, 118, 130, 161, 173, 175, 177, 178, 181, 183, 188, 193, 196, 197, 207, 213, 214, 215, 218, 219, 224, 245, 248, 262, 266, 273], "ad": [1, 7, 9, 14, 15, 25, 32, 33, 35, 41, 42, 51, 52, 62, 66, 73, 76, 80, 91, 93, 97, 105, 106, 114, 115, 130, 137, 165, 168, 174, 182, 183, 192, 194, 196, 197, 199, 207, 210, 213, 216, 217, 219, 222, 223, 228, 244, 264], "solv": [1, 2, 5, 7, 12, 14, 18, 21, 33, 35, 47, 50, 51, 59, 64, 76, 78, 82, 83, 87, 94, 96, 97, 109, 110, 114, 117, 118, 121, 123, 124, 125, 127, 130, 166, 186, 189, 190, 194, 195, 196, 199, 209, 210, 211, 212, 213, 214, 217, 258, 262, 263, 266, 268, 271], "veri": [1, 2, 4, 7, 10, 11, 12, 14, 18, 33, 47, 51, 52, 55, 56, 61, 63, 69, 73, 76, 78, 81, 87, 91, 101, 105, 114, 118, 130, 135, 168, 180, 181, 184, 187, 190, 192, 193, 194, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 228, 229, 230, 236, 261, 264, 267, 272], "layer": [1, 101, 190, 236], "structur": [1, 4, 7, 15, 18, 30, 32, 33, 39, 42, 43, 49, 51, 76, 78, 81, 82, 87, 94, 95, 97, 113, 124, 161, 163, 183, 184, 187, 190, 192, 193, 194, 209, 211, 213, 215, 216, 217, 221, 222, 230, 232, 235, 236, 264, 272], "alreadi": [1, 2, 7, 11, 12, 18, 20, 42, 43, 51, 52, 60, 61, 64, 65, 67, 76, 78, 82, 88, 91, 97, 102, 106, 114, 127, 132, 158, 160, 163, 178, 180, 181, 183, 186, 187, 190, 192, 196, 200, 206, 207, 209, 213, 216, 217, 223, 246, 248, 262, 264, 265, 266, 270, 271, 272, 273], "allow": [1, 2, 7, 11, 12, 15, 18, 29, 32, 33, 34, 35, 42, 44, 47, 50, 51, 52, 55, 59, 61, 62, 63, 76, 79, 81, 82, 84, 85, 87, 91, 92, 93, 95, 109, 114, 116, 124, 127, 128, 130, 135, 147, 163, 167, 168, 169, 181, 183, 184, 187, 188, 190, 192, 193, 194, 197, 202, 204, 205, 206, 209, 210, 213, 215, 216, 217, 218, 222, 228, 231, 233, 235, 236, 246, 264, 267], "one": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 24, 25, 28, 29, 31, 32, 33, 35, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 108, 109, 114, 115, 118, 127, 128, 130, 132, 135, 136, 137, 143, 148, 157, 161, 163, 165, 166, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 224, 228, 229, 230, 232, 235, 236, 238, 242, 246, 248, 250, 261, 262, 264, 266, 267, 268, 270, 271, 272], "desir": [1, 2, 5, 14, 18, 24, 42, 43, 51, 52, 54, 55, 56, 57, 61, 65, 67, 81, 82, 87, 90, 91, 92, 109, 110, 111, 113, 124, 127, 148, 173, 180, 181, 186, 188, 190, 192, 193, 194, 197, 198, 200, 205, 209, 213, 215, 216, 229, 231, 232, 235, 248, 261], "g": [1, 2, 7, 8, 9, 11, 12, 13, 15, 18, 31, 32, 33, 34, 36, 39, 41, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 67, 68, 69, 71, 74, 77, 78, 80, 81, 82, 87, 91, 93, 94, 101, 102, 106, 111, 113, 114, 116, 118, 119, 121, 122, 123, 127, 128, 130, 131, 143, 147, 152, 158, 160, 161, 163, 166, 168, 169, 173, 178, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 233, 235, 236, 237, 238, 250, 262, 267, 271, 272, 273], "introduct": [1, 3, 6, 15, 23, 38, 42, 43, 124, 179, 188, 189, 190, 191, 197, 210, 213, 216, 249, 253, 254, 255, 259, 265, 271], "encourag": [1, 14, 32, 125, 126, 192], "imprecis": 1, "think": [1, 7, 8, 14, 18, 20, 31, 42, 116, 168, 232, 236, 264, 272], "request": [1, 7, 9, 11, 12, 14, 15, 17, 20, 31, 51, 55, 67, 76, 91, 114, 163, 190, 193, 221, 229], "free_symbol": [1, 33, 51, 60, 78, 82, 152, 170, 173, 193, 203, 210], "sinc": [1, 2, 4, 5, 7, 8, 18, 26, 31, 33, 34, 42, 43, 44, 47, 48, 49, 51, 52, 54, 56, 58, 59, 60, 61, 63, 64, 67, 69, 75, 76, 78, 80, 81, 82, 87, 91, 104, 116, 128, 130, 139, 163, 164, 168, 172, 178, 181, 184, 185, 187, 188, 190, 192, 193, 197, 200, 205, 206, 207, 209, 210, 213, 215, 216, 217, 223, 227, 231, 232, 233, 235, 236, 240, 245, 247, 248, 250, 261, 266, 268, 271, 272, 273], "get": [1, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 27, 28, 31, 32, 33, 35, 40, 41, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 59, 64, 74, 76, 78, 80, 84, 87, 91, 93, 94, 99, 101, 104, 114, 117, 118, 125, 126, 127, 130, 135, 136, 143, 147, 152, 157, 158, 159, 160, 165, 168, 181, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 223, 224, 229, 235, 236, 237, 239, 242, 245, 261, 264, 266, 267, 268, 271, 272, 273], "incorrectli": [1, 14, 18, 60, 61, 87, 185], "atomicexpr": 1, "concept": [1, 7, 42, 116, 181, 187, 189, 192, 197, 216, 221, 250, 265, 270], "misappli": 1, "point": [1, 2, 5, 7, 11, 12, 14, 15, 19, 20, 25, 31, 33, 34, 42, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 73, 74, 75, 76, 78, 87, 91, 94, 95, 97, 99, 106, 108, 109, 110, 111, 113, 114, 116, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 143, 165, 168, 174, 178, 179, 181, 183, 184, 187, 188, 190, 192, 193, 197, 199, 203, 204, 205, 213, 215, 216, 217, 229, 232, 235, 236, 238, 242, 244, 246, 247, 248, 249, 250, 251, 253, 261, 262, 264, 267], "noth": [1, 32, 42, 51, 64, 78, 147, 163, 184, 188, 196, 197, 209, 213, 215, 226, 228, 236, 238, 264], "anywher": [1, 7, 11, 12, 14, 33, 51, 59, 65, 163, 238, 266], "els": [1, 2, 7, 8, 11, 12, 18, 33, 41, 43, 47, 51, 52, 59, 61, 65, 67, 68, 76, 78, 81, 87, 91, 101, 163, 173, 183, 188, 192, 193, 197, 198, 205, 209, 213, 216, 221, 223, 228, 235, 238, 242, 244, 261, 267], "context": [1, 7, 12, 14, 15, 18, 26, 27, 28, 51, 53, 59, 78, 81, 114, 168, 187, 190, 192, 205, 226, 228, 233, 242], "differenti": [1, 14, 15, 22, 31, 51, 56, 57, 59, 68, 69, 71, 74, 101, 108, 109, 113, 114, 116, 118, 121, 124, 125, 126, 127, 130, 131, 152, 158, 172, 173, 175, 176, 178, 181, 184, 190, 194, 196, 197, 202, 207, 209, 211, 213, 214, 242, 248, 249, 252, 259, 262, 263, 266], "which": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 87, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 119, 122, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136, 137, 149, 152, 158, 159, 160, 161, 163, 167, 168, 169, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 221, 223, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 243, 246, 250, 251, 253, 261, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273], "suggest": [1, 15, 34, 42, 78, 87, 91, 114, 195, 268], "someth": [1, 2, 7, 8, 12, 14, 15, 18, 31, 33, 51, 52, 55, 61, 76, 81, 82, 87, 91, 105, 114, 115, 130, 156, 169, 172, 183, 187, 188, 196, 204, 205, 209, 213, 216, 228, 230, 236, 261, 264, 266, 267, 270], "confirm": [1, 12, 42, 91, 213], "fact": [1, 7, 8, 14, 18, 28, 29, 51, 56, 59, 69, 76, 91, 116, 127, 168, 184, 185, 187, 190, 192, 194, 196, 207, 209, 213, 216, 228, 236, 250, 261, 264, 265, 266, 267, 272], "introduc": [1, 8, 23, 47, 50, 51, 59, 76, 87, 92, 95, 114, 116, 121, 122, 123, 126, 163, 168, 181, 188, 189, 194, 197, 204, 207, 210, 217, 233, 265, 268, 270, 272], "21494": 1, "size": [1, 5, 33, 34, 35, 40, 42, 43, 44, 45, 46, 47, 51, 52, 54, 56, 79, 82, 84, 87, 90, 91, 99, 116, 125, 126, 127, 136, 158, 159, 177, 183, 186, 190, 197, 209, 210, 213, 217, 235, 262], "die": [1, 192, 217], "easili": [1, 7, 15, 18, 19, 20, 51, 52, 74, 76, 87, 91, 92, 125, 161, 180, 193, 196, 197, 202, 209, 210, 213, 215, 216, 229, 266], "implement": [1, 4, 8, 11, 14, 15, 18, 21, 25, 26, 27, 28, 31, 32, 33, 34, 36, 41, 42, 43, 48, 51, 52, 54, 56, 57, 59, 62, 64, 71, 72, 74, 75, 77, 78, 81, 82, 83, 87, 91, 92, 93, 105, 114, 124, 132, 134, 135, 138, 147, 148, 156, 157, 159, 167, 172, 174, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 201, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 221, 222, 232, 234, 235, 236, 239, 249, 252, 260, 262, 266, 272], "rang": [1, 5, 14, 18, 31, 33, 40, 41, 42, 43, 45, 47, 51, 52, 56, 57, 59, 65, 82, 87, 91, 95, 99, 103, 132, 163, 183, 187, 188, 189, 190, 192, 193, 194, 199, 200, 203, 206, 209, 213, 216, 217, 218, 222, 228, 235, 261, 272], "numpi": [1, 11, 14, 18, 20, 33, 51, 74, 79, 86, 92, 99, 114, 130, 147, 157, 186, 197, 217, 222, 229, 230, 236, 261, 264], "arrai": [1, 18, 22, 33, 42, 43, 47, 48, 52, 59, 78, 82, 84, 87, 91, 92, 99, 130, 160, 183, 186, 188, 193, 197, 216, 217, 220, 222, 223, 224, 229, 230, 232, 236, 268], "shape": [1, 14, 33, 67, 82, 84, 87, 89, 90, 99, 101, 113, 114, 173, 183, 184, 186, 197, 200, 207, 217, 218, 219, 221, 222, 223, 236, 271], "histor": [1, 18, 52, 213, 217], "length": [1, 14, 33, 35, 41, 42, 43, 45, 49, 51, 52, 54, 56, 57, 59, 60, 64, 66, 67, 68, 81, 82, 87, 90, 91, 94, 95, 105, 109, 113, 117, 118, 119, 128, 132, 136, 160, 165, 166, 168, 173, 176, 181, 192, 193, 197, 203, 207, 209, 213, 215, 217, 228, 229, 235, 238, 242, 243, 251], "behavior": [1, 2, 11, 12, 18, 42, 51, 59, 78, 93, 104, 105, 124, 127, 158, 184, 185, 192, 193, 197, 198, 202, 204, 206, 209, 226, 229, 231, 235, 236, 264], "confus": [1, 7, 12, 15, 51, 56, 81, 136, 181, 185, 193, 216, 261, 262, 264], "21563": 1, "revert": [1, 188, 193], "sample_it": [1, 217], "consequ": [1, 18, 29, 51, 185, 187, 264, 272], "class": [1, 2, 6, 7, 8, 12, 15, 16, 18, 25, 26, 27, 28, 29, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 78, 79, 80, 81, 84, 86, 93, 94, 97, 98, 99, 101, 106, 108, 109, 110, 111, 113, 114, 118, 119, 124, 128, 130, 131, 132, 134, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 176, 177, 179, 184, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 207, 211, 213, 214, 215, 216, 217, 220, 222, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 240, 245, 246, 248, 249, 251, 253, 254, 257, 259, 260, 262, 264, 267, 272], "subclass": [1, 7, 18, 27, 28, 33, 51, 58, 62, 64, 78, 81, 132, 138, 147, 151, 152, 153, 158, 160, 161, 183, 184, 186, 187, 188, 192, 193, 197, 217, 228, 229, 230, 233, 236, 242, 245, 267], "domain": [1, 5, 11, 14, 18, 31, 32, 51, 52, 54, 56, 57, 59, 70, 72, 73, 76, 78, 84, 87, 88, 91, 98, 101, 114, 130, 184, 186, 189, 190, 192, 194, 195, 211, 212, 213, 215, 217, 268, 273], "element": [1, 2, 4, 7, 15, 25, 28, 32, 33, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 74, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 94, 95, 101, 102, 111, 130, 132, 135, 149, 160, 168, 176, 179, 181, 183, 184, 185, 186, 188, 189, 190, 193, 195, 196, 197, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 218, 222, 229, 231, 232, 235, 236, 237, 244, 262, 267, 268, 271, 272], "break": [1, 12, 14, 18, 21, 32, 33, 43, 51, 52, 91, 180, 194, 197, 205, 235], "kei": [1, 2, 23, 26, 29, 32, 40, 42, 43, 51, 52, 53, 56, 67, 80, 82, 87, 90, 91, 94, 113, 114, 124, 155, 158, 163, 181, 183, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 209, 213, 214, 215, 217, 221, 232, 235, 236, 238, 268, 269, 272], "invari": [1, 15, 18, 42, 47, 98, 101, 182, 188, 192, 193, 207, 213], "kind": [1, 6, 7, 8, 14, 15, 18, 32, 33, 53, 56, 59, 71, 78, 82, 94, 97, 109, 114, 126, 178, 185, 187, 188, 193, 198, 199, 205, 213, 214, 217, 235, 248, 250, 253, 262, 272], "limit": [1, 2, 10, 12, 20, 21, 29, 31, 33, 50, 51, 53, 55, 56, 57, 59, 60, 63, 71, 73, 78, 79, 81, 87, 91, 99, 124, 128, 152, 158, 161, 177, 183, 188, 190, 193, 194, 197, 200, 201, 203, 205, 209, 210, 212, 213, 214, 215, 217, 222, 229, 232, 235, 236, 238, 241, 242, 251, 263, 264, 266, 268], "improv": [1, 8, 11, 12, 18, 51, 76, 124, 183, 187, 190, 191, 193, 194, 196, 198, 213, 216, 222, 253, 262, 268], "part": [1, 7, 8, 11, 12, 14, 15, 18, 25, 30, 42, 43, 50, 51, 52, 56, 57, 59, 67, 74, 76, 78, 81, 82, 84, 91, 101, 105, 106, 108, 109, 113, 114, 116, 122, 124, 128, 130, 147, 159, 163, 172, 181, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 205, 207, 209, 210, 213, 215, 228, 230, 232, 235, 262, 267, 272], "document": [1, 6, 16, 18, 21, 27, 28, 29, 42, 47, 51, 52, 57, 58, 59, 63, 73, 76, 77, 79, 84, 87, 92, 95, 105, 109, 124, 125, 126, 128, 130, 138, 152, 158, 172, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 193, 197, 207, 211, 213, 215, 216, 226, 228, 230, 231, 233, 235, 242, 248, 249, 252, 262, 264, 265, 271, 272], "normal": [1, 2, 7, 8, 15, 18, 25, 28, 33, 42, 50, 51, 55, 57, 61, 64, 65, 66, 78, 79, 81, 85, 86, 87, 91, 93, 103, 105, 108, 114, 116, 122, 130, 136, 147, 157, 160, 161, 162, 163, 164, 168, 171, 173, 181, 184, 187, 188, 189, 190, 192, 193, 197, 198, 200, 205, 206, 210, 213, 217, 222, 228, 233, 235, 242, 256], "ha": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 22, 23, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 74, 76, 78, 80, 81, 82, 84, 87, 88, 90, 91, 92, 94, 95, 97, 101, 102, 106, 108, 109, 114, 116, 118, 124, 128, 130, 136, 137, 147, 148, 157, 160, 165, 168, 172, 173, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 202, 204, 205, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 245, 246, 248, 250, 251, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "domainmatrix": [1, 83, 87, 189, 192, 195], "anyon": [1, 14, 15, 193, 197, 270, 271], "switch": [1, 42, 49, 78, 91, 101, 190, 193], "shown": [1, 7, 8, 12, 14, 18, 40, 43, 50, 51, 55, 59, 76, 93, 95, 99, 101, 105, 109, 111, 117, 118, 119, 125, 126, 128, 172, 173, 180, 181, 183, 186, 187, 188, 193, 197, 213, 217, 233, 235, 245, 246, 265], "21402": 1, "api": [1, 7, 14, 15, 21, 33, 51, 63, 71, 77, 92, 93, 100, 130, 159, 172, 183, 190, 210, 211, 212, 234, 236, 239, 245, 246, 256, 258, 265, 266, 269], "earlier": [1, 105, 194, 198, 207, 209, 236, 246, 248, 267], "possibl": [1, 7, 8, 9, 14, 18, 19, 20, 31, 33, 34, 35, 40, 42, 43, 45, 46, 47, 49, 51, 52, 56, 57, 59, 61, 63, 65, 66, 68, 73, 75, 76, 78, 80, 81, 82, 84, 87, 91, 102, 103, 105, 116, 126, 128, 157, 159, 163, 165, 166, 167, 168, 176, 178, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 218, 223, 228, 230, 231, 232, 233, 235, 236, 245, 246, 248, 262, 263, 264, 267, 272], "put": [1, 2, 5, 12, 14, 18, 33, 47, 48, 51, 52, 53, 57, 81, 82, 87, 135, 140, 144, 159, 160, 193, 197, 198, 206, 207, 209, 213, 218, 224, 229, 268, 272], "could": [1, 2, 5, 7, 18, 28, 33, 44, 51, 63, 76, 78, 81, 111, 114, 124, 127, 163, 166, 168, 184, 186, 187, 190, 192, 194, 197, 205, 207, 209, 213, 214, 215, 216, 217, 218, 221, 222, 229, 233, 246, 247, 264, 267, 272], "arbitrari": [1, 2, 7, 11, 14, 18, 19, 31, 36, 43, 44, 50, 51, 52, 55, 56, 59, 62, 63, 65, 81, 82, 87, 95, 128, 149, 152, 181, 183, 184, 187, 188, 190, 192, 194, 209, 213, 214, 215, 223, 233, 236, 242, 243, 261, 262, 267, 272, 273], "realli": [1, 5, 7, 8, 12, 18, 51, 63, 91, 116, 165, 187, 196, 198, 204, 206, 207, 209, 213, 229, 238, 264, 266], "traceback": [1, 2, 4, 7, 8, 18, 26, 27, 28, 33, 34, 43, 51, 52, 55, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 93, 101, 182, 184, 187, 188, 190, 193, 196, 204, 205, 213, 215, 216, 226, 228, 229, 231, 233, 235, 236, 238, 264, 268], "most": [1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 20, 26, 27, 28, 31, 32, 33, 34, 42, 43, 50, 51, 52, 55, 61, 63, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 101, 105, 109, 114, 122, 127, 128, 131, 165, 172, 176, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 204, 205, 207, 210, 213, 214, 215, 216, 217, 226, 229, 230, 231, 232, 233, 235, 236, 238, 244, 246, 261, 264, 266, 267, 268, 270, 271, 272], "recent": [1, 2, 4, 7, 8, 12, 18, 26, 27, 28, 33, 34, 43, 51, 52, 55, 59, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 93, 101, 182, 184, 187, 188, 190, 193, 196, 204, 205, 213, 215, 216, 226, 229, 231, 233, 235, 236, 238, 264, 268], "typeerror": [1, 2, 8, 18, 26, 27, 28, 43, 51, 61, 66, 81, 83, 85, 89, 101, 137, 204, 205, 229, 236], "unsupport": [1, 2, 4, 101, 197], "operand": [1, 2, 43, 51, 174, 192, 244], "type": [1, 2, 4, 7, 8, 14, 16, 18, 27, 28, 31, 42, 43, 47, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 69, 76, 78, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 95, 97, 99, 101, 105, 109, 114, 130, 135, 149, 157, 158, 159, 161, 173, 176, 177, 179, 181, 183, 184, 187, 188, 191, 192, 193, 194, 195, 197, 198, 199, 205, 206, 207, 209, 210, 211, 212, 215, 221, 222, 223, 226, 228, 229, 230, 235, 236, 238, 245, 248, 251, 254, 259, 262, 264, 266, 267, 268, 271, 272, 273], "dict": [1, 2, 7, 33, 43, 52, 53, 67, 68, 81, 82, 87, 91, 93, 109, 110, 143, 155, 158, 169, 171, 173, 183, 186, 187, 188, 190, 192, 193, 194, 195, 197, 209, 210, 213, 214, 215, 216, 217, 221, 228, 229, 235, 242, 273], "main": [1, 2, 11, 13, 14, 15, 28, 29, 33, 51, 57, 76, 82, 87, 90, 114, 122, 161, 167, 177, 181, 183, 184, 188, 189, 197, 204, 213, 216, 222, 229, 272, 273], "reason": [1, 7, 8, 12, 15, 18, 33, 43, 49, 51, 55, 59, 76, 79, 85, 87, 109, 110, 114, 116, 121, 124, 127, 134, 168, 177, 181, 187, 190, 191, 194, 197, 205, 207, 209, 213, 215, 216, 226, 232, 233, 235, 236, 261, 262, 266, 267, 268], "solve_lin_si": [1, 189], "heurisch": [1, 78], "smith_normal_form": [1, 88, 186], "newmatrix": 1, "rather": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 24, 29, 33, 34, 42, 43, 44, 51, 55, 62, 67, 69, 76, 81, 82, 84, 87, 91, 93, 113, 121, 130, 143, 157, 161, 163, 172, 180, 184, 187, 190, 193, 195, 200, 207, 210, 212, 213, 216, 217, 232, 235, 236, 239, 250, 264, 266, 267], "holonom": [1, 72, 75, 115, 116, 117, 118, 124, 125, 126, 252, 259], "polymatrix": 1, "risch": [1, 78, 262], "broken": [1, 40, 51, 180, 197, 213, 238], "20780": 1, "20759": 1, "20621": 1, "19882": 1, "18844": 1, "solut": [1, 2, 5, 8, 9, 18, 22, 33, 47, 51, 52, 57, 59, 61, 69, 73, 74, 75, 78, 87, 91, 98, 105, 109, 114, 118, 124, 127, 132, 168, 172, 184, 190, 191, 192, 193, 194, 195, 196, 205, 210, 211, 212, 213, 214, 215, 258, 273], "case": [1, 2, 5, 7, 8, 11, 12, 14, 15, 21, 31, 32, 33, 34, 36, 39, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 63, 66, 67, 68, 69, 73, 76, 78, 81, 82, 84, 87, 88, 91, 92, 93, 95, 101, 105, 108, 109, 114, 116, 117, 118, 119, 126, 128, 130, 136, 147, 153, 158, 160, 162, 163, 168, 169, 176, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 221, 223, 226, 228, 230, 231, 233, 235, 236, 237, 238, 239, 242, 244, 245, 262, 266, 267, 268, 271, 272, 273], "pr": [1, 12, 50, 188, 190, 191, 193, 216], "depend": [1, 2, 7, 16, 18, 19, 20, 21, 31, 33, 34, 42, 43, 50, 51, 52, 53, 56, 57, 59, 63, 68, 75, 76, 78, 79, 80, 87, 91, 92, 93, 99, 103, 106, 109, 110, 113, 114, 116, 118, 124, 125, 135, 136, 137, 152, 161, 163, 165, 168, 177, 178, 183, 185, 188, 189, 190, 192, 193, 194, 197, 198, 203, 207, 209, 210, 213, 214, 215, 216, 217, 228, 229, 230, 231, 235, 236, 248, 250, 251, 264, 266], "21441": 1, "21427": 1, "21496": 1, "potenti": [1, 7, 63, 84, 87, 91, 109, 110, 111, 113, 123, 124, 174, 179, 187, 192, 204, 207, 209, 213, 215, 231, 232, 244, 249, 250], "impact": 1, "downstream": [1, 7], "altern": [1, 2, 8, 9, 12, 14, 18, 20, 33, 39, 42, 43, 50, 51, 55, 57, 58, 59, 82, 84, 88, 92, 114, 125, 127, 173, 180, 182, 183, 185, 186, 187, 192, 193, 197, 202, 204, 206, 215, 216, 218, 235, 264, 266, 268], "goal": [1, 32, 105, 131, 192, 194, 228, 229, 231, 265, 266], "perhap": [1, 33, 51, 81, 91, 148, 187, 215, 230, 261], "tableform": [1, 238], "isn": [1, 18, 78, 105, 114, 216, 266], "clear": [1, 7, 14, 27, 41, 51, 76, 80, 106, 180, 181, 183, 188, 190, 193, 207, 215, 216, 223, 228, 232, 250, 264], "what": [1, 2, 4, 5, 7, 8, 14, 15, 16, 18, 22, 23, 31, 33, 43, 45, 50, 51, 52, 53, 57, 58, 61, 62, 66, 76, 78, 80, 87, 91, 93, 106, 109, 111, 114, 118, 130, 162, 163, 166, 168, 173, 180, 181, 188, 189, 190, 193, 196, 197, 198, 204, 206, 207, 209, 210, 211, 213, 215, 222, 226, 228, 230, 231, 236, 245, 246, 251, 262, 264, 265, 267, 271, 272], "advis": [1, 7, 32, 114], "know": [1, 2, 7, 8, 12, 14, 15, 18, 26, 28, 32, 43, 51, 52, 55, 63, 68, 76, 78, 87, 91, 111, 114, 131, 157, 161, 165, 166, 168, 172, 173, 180, 181, 183, 193, 194, 196, 197, 207, 209, 213, 215, 216, 217, 231, 235, 236, 246, 261, 262, 264, 265, 266, 267, 270, 272], "usecas": 1, "unclear": [1, 7, 105], "write": [1, 5, 7, 8, 12, 16, 21, 23, 24, 33, 40, 51, 52, 58, 59, 76, 78, 84, 130, 143, 180, 181, 185, 190, 192, 197, 206, 207, 210, 213, 216, 222, 228, 229, 230, 236, 265, 266, 267, 272], "our": [1, 5, 15, 17, 18, 20, 33, 51, 59, 76, 87, 91, 117, 168, 180, 181, 183, 184, 186, 192, 193, 194, 197, 204, 207, 210, 213, 216, 228, 261, 264, 265, 267, 272], "mail": [1, 12, 20, 197, 265], "line2dbaseseri": [1, 183], "coordin": [1, 25, 33, 52, 53, 57, 59, 60, 62, 66, 68, 84, 87, 94, 97, 99, 103, 108, 109, 110, 113, 114, 115, 116, 117, 119, 121, 124, 125, 126, 129, 131, 139, 141, 160, 161, 164, 172, 173, 174, 175, 176, 178, 181, 184, 192, 193, 205, 213, 242, 243, 244, 247, 249, 251, 259], "y": [1, 2, 4, 7, 8, 12, 14, 18, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 76, 78, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 95, 97, 99, 101, 106, 107, 108, 111, 114, 116, 117, 118, 119, 121, 122, 123, 128, 130, 131, 140, 141, 144, 147, 152, 158, 160, 161, 163, 164, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 229, 230, 233, 235, 236, 238, 242, 244, 245, 246, 247, 248, 250, 251, 261, 262, 264, 266, 267, 271, 272, 273], "segment": [1, 14, 42, 61, 63, 64, 65, 66, 67, 68, 180, 183, 213, 228], "matplotlib": [1, 9, 11, 14, 15, 20, 74, 79, 99, 130, 143, 177, 183, 271], "linecollect": [1, 183], "bokeh": 1, "plotli": 1, "mayavi": 1, "k3d": 1, "insid": [1, 2, 15, 18, 42, 43, 48, 51, 61, 62, 67, 94, 105, 107, 118, 127, 162, 163, 168, 177, 181, 193, 197, 205, 207, 210, 215, 216, 217, 219, 221, 232, 267, 268], "matplotlibbackend": [1, 183], "note": [1, 2, 5, 7, 8, 9, 11, 14, 15, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 47, 49, 50, 52, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 76, 78, 79, 81, 82, 84, 87, 91, 93, 101, 102, 106, 107, 108, 109, 110, 113, 114, 116, 118, 121, 128, 130, 136, 139, 147, 157, 158, 160, 162, 163, 164, 166, 172, 173, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 246, 248, 250, 259, 261, 262, 263, 265, 266, 267, 268, 272], "previous": [1, 11, 12, 50, 122, 178, 196, 209, 217, 248], "get_point": [1, 183], "uniformli": [1, 5, 42, 67, 68, 94, 99, 183, 231], "correctli": [1, 8, 9, 11, 12, 14, 15, 18, 31, 55, 76, 79, 87, 114, 116, 127, 197, 204, 210, 213], "avoid": [1, 8, 15, 16, 18, 33, 34, 51, 52, 57, 76, 78, 81, 87, 90, 93, 118, 127, 157, 180, 181, 185, 187, 193, 197, 198, 205, 209, 213, 215, 217, 221, 230, 233, 236, 264, 265], "adapt": [1, 99, 183, 203, 215, 235, 241], "get_data": [1, 183, 239], "dft": [1, 54, 104], "fourier": [1, 51, 59, 78, 104, 156, 201], "as_explicit": [1, 84, 87, 104, 219], "sqrt": [1, 7, 14, 18, 25, 29, 30, 31, 33, 51, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 75, 76, 78, 79, 82, 83, 87, 91, 93, 94, 101, 103, 116, 132, 134, 136, 137, 142, 147, 157, 158, 160, 161, 163, 164, 166, 173, 178, 181, 182, 185, 187, 188, 190, 192, 193, 196, 197, 198, 203, 206, 207, 209, 210, 212, 213, 215, 216, 217, 235, 236, 238, 242, 250, 251, 261, 266, 271, 272, 273], "exp": [1, 2, 7, 18, 25, 31, 33, 41, 50, 51, 53, 55, 56, 58, 59, 69, 70, 73, 76, 78, 82, 84, 87, 91, 103, 139, 142, 158, 164, 182, 187, 188, 193, 194, 197, 199, 204, 207, 209, 213, 214, 215, 216, 217, 218, 235, 251, 262, 266, 268, 273], "pi": [1, 2, 4, 7, 14, 18, 24, 25, 26, 28, 29, 30, 31, 33, 43, 50, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 70, 76, 78, 87, 91, 103, 116, 130, 132, 134, 135, 136, 137, 139, 147, 158, 160, 161, 164, 166, 173, 182, 183, 185, 187, 188, 193, 197, 200, 204, 205, 206, 207, 209, 212, 213, 215, 216, 217, 235, 242, 244, 251, 261, 266, 272], "contain": [1, 2, 3, 8, 9, 11, 12, 14, 15, 18, 24, 26, 27, 31, 32, 33, 34, 42, 43, 47, 49, 50, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 67, 68, 77, 78, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 96, 99, 100, 102, 106, 109, 110, 111, 113, 116, 118, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 150, 153, 155, 158, 160, 163, 172, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 197, 198, 199, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 217, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 252, 253, 262, 264, 268, 272], "discret": [1, 31, 33, 34, 41, 43, 51, 52, 59, 91, 163, 168, 199, 202, 213, 215, 216, 253, 261], "transform": [1, 25, 30, 33, 47, 50, 51, 52, 53, 55, 56, 59, 66, 77, 84, 87, 99, 101, 116, 135, 156, 158, 160, 165, 185, 188, 190, 192, 193, 199, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 222, 230, 236, 242, 248, 249, 253, 260, 266], "mathemat": [1, 4, 7, 11, 12, 15, 16, 18, 19, 23, 27, 28, 31, 33, 34, 37, 41, 43, 50, 51, 52, 53, 56, 57, 58, 59, 64, 65, 76, 78, 81, 84, 87, 91, 92, 93, 101, 102, 105, 118, 129, 168, 178, 180, 181, 184, 185, 187, 188, 191, 196, 197, 205, 206, 210, 213, 216, 217, 222, 229, 230, 236, 242, 245, 248, 250, 261, 264, 265, 266, 267, 270, 272], "locat": [1, 15, 43, 51, 65, 87, 91, 94, 95, 97, 108, 118, 127, 131, 176, 178, 192, 193, 197, 209, 217, 231, 240, 242, 245, 247, 249, 250], "furthermor": [1, 12, 18, 29, 51, 52, 81, 192, 206, 264, 266, 267], "unevalu": [1, 7, 8, 18, 27, 28, 31, 43, 50, 51, 57, 59, 68, 78, 91, 101, 140, 144, 151, 152, 163, 193, 196, 204, 205, 209, 213, 215, 216, 217, 262, 266, 267, 273], "represent": [1, 18, 25, 32, 33, 34, 42, 45, 51, 52, 59, 63, 71, 73, 75, 76, 78, 80, 81, 82, 83, 84, 90, 91, 98, 99, 104, 105, 106, 113, 124, 127, 128, 132, 152, 157, 158, 160, 161, 163, 165, 172, 177, 178, 180, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 207, 209, 210, 213, 216, 217, 222, 223, 238, 242, 244, 251, 262, 264, 267], "21626": 1, "expos": [1, 32, 217], "mutat": [1, 101, 186, 188, 217], "flat": [1, 65, 82, 229], "cannot": [1, 2, 4, 8, 11, 12, 14, 15, 18, 20, 26, 27, 28, 29, 30, 31, 33, 43, 48, 50, 51, 53, 55, 56, 57, 61, 63, 64, 66, 68, 73, 78, 80, 83, 85, 87, 89, 91, 101, 158, 166, 168, 180, 181, 183, 188, 190, 192, 193, 194, 197, 204, 205, 209, 210, 212, 213, 215, 216, 217, 218, 226, 228, 229, 230, 235, 239, 242, 243, 266, 267, 268, 272, 273], "itself": [1, 11, 12, 14, 15, 18, 29, 40, 42, 43, 49, 51, 53, 56, 64, 68, 73, 91, 109, 113, 114, 128, 153, 160, 178, 180, 183, 184, 187, 190, 192, 193, 197, 205, 206, 209, 216, 221, 222, 223, 230, 232, 235, 250, 266], "todok": [1, 82], "read": [1, 12, 14, 15, 17, 18, 43, 57, 76, 91, 95, 130, 180, 181, 186, 187, 188, 194, 197, 210, 223, 224, 232, 239, 265, 271, 272], "technic": [1, 15, 18, 32, 51, 130, 149, 184, 213, 230, 235, 248, 264, 267], "thei": [1, 2, 7, 8, 11, 12, 14, 15, 18, 20, 29, 32, 33, 34, 39, 41, 42, 43, 49, 50, 51, 52, 53, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 76, 78, 79, 81, 82, 84, 85, 87, 90, 91, 93, 105, 109, 111, 113, 114, 116, 122, 124, 125, 126, 127, 130, 131, 137, 142, 147, 152, 155, 160, 165, 166, 168, 169, 173, 176, 177, 178, 181, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 197, 198, 203, 204, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 223, 226, 228, 230, 232, 235, 236, 238, 242, 248, 250, 262, 264, 265, 266, 267, 268, 272], "underscor": [1, 12, 14, 51, 87, 213, 223, 231], "prior": [1, 12, 20, 176, 193, 209, 268], "result": [1, 2, 4, 5, 7, 8, 9, 11, 14, 18, 25, 26, 27, 28, 29, 31, 32, 33, 41, 42, 43, 47, 50, 51, 52, 53, 55, 57, 59, 63, 68, 69, 73, 75, 76, 78, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 101, 102, 105, 106, 107, 110, 114, 118, 124, 127, 130, 148, 155, 157, 158, 160, 162, 163, 165, 166, 168, 172, 173, 181, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 228, 229, 230, 232, 233, 235, 236, 238, 242, 244, 246, 264, 266, 267, 268, 272], "ey": [1, 82, 83, 84, 85, 86, 87, 89, 186, 192, 210, 218, 223, 238, 268], "z": [1, 2, 7, 14, 18, 29, 30, 33, 34, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 63, 64, 65, 66, 67, 76, 78, 81, 82, 84, 87, 93, 94, 95, 103, 106, 107, 108, 111, 114, 116, 117, 118, 119, 121, 122, 123, 127, 128, 130, 131, 132, 141, 143, 147, 157, 158, 160, 164, 168, 172, 173, 174, 175, 176, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 229, 230, 236, 242, 244, 245, 246, 247, 248, 250, 251, 261, 262, 264, 266, 267, 271, 272, 273], "true": [1, 2, 4, 7, 8, 10, 11, 14, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 76, 78, 79, 81, 82, 83, 84, 87, 88, 91, 93, 94, 95, 99, 101, 102, 103, 104, 105, 107, 109, 110, 114, 116, 118, 130, 134, 135, 144, 147, 148, 155, 157, 158, 161, 162, 163, 166, 172, 173, 174, 175, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 228, 229, 230, 231, 233, 235, 236, 238, 242, 244, 245, 246, 247, 248, 251, 261, 262, 264, 266, 267, 268, 271, 272, 273], "design": [1, 4, 8, 11, 12, 14, 18, 22, 29, 34, 41, 51, 87, 90, 93, 130, 131, 187, 191, 197, 202, 207, 213, 216, 266, 267, 271], "converg": [1, 33, 50, 55, 59, 77, 78, 91, 132, 193, 200, 204, 207, 262], "legacy_matrix": [1, 78], "singl": [1, 5, 7, 9, 12, 15, 18, 24, 32, 33, 35, 42, 51, 52, 56, 57, 59, 64, 65, 67, 68, 69, 76, 78, 81, 82, 87, 90, 93, 101, 102, 107, 108, 118, 143, 147, 149, 157, 160, 163, 170, 173, 176, 183, 184, 186, 187, 188, 190, 192, 193, 197, 198, 199, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 222, 228, 230, 232, 235, 236, 238, 262, 264, 267, 268, 273], "combin": [1, 2, 14, 18, 32, 51, 55, 56, 59, 71, 78, 80, 81, 82, 91, 95, 101, 113, 117, 124, 131, 142, 149, 157, 158, 160, 161, 162, 166, 168, 169, 184, 185, 187, 188, 190, 192, 193, 197, 198, 206, 207, 209, 210, 213, 215, 217, 218, 232, 235, 261, 264, 267], "whole": [1, 7, 14, 51, 53, 59, 78, 95, 103, 183, 184, 192, 193, 197, 200, 205, 207, 213, 216, 235], "left": [1, 5, 7, 12, 15, 18, 22, 31, 33, 34, 42, 43, 47, 51, 52, 53, 56, 57, 59, 67, 68, 74, 76, 78, 79, 81, 82, 87, 90, 91, 101, 106, 113, 128, 135, 142, 147, 151, 152, 155, 160, 173, 178, 182, 183, 184, 186, 193, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 209, 213, 214, 215, 216, 217, 228, 229, 230, 232, 235, 248, 262, 266, 268, 272], "intact": [1, 12, 33, 229], "theano": [1, 11, 130, 271], "discontinu": [1, 31, 55, 57, 59, 78, 94, 200], "project": [1, 13, 15, 16, 21, 23, 33, 64, 65, 66, 80, 87, 129, 229, 230, 242], "aesara": [1, 11, 33, 130, 253, 260], "renam": [1, 12, 33, 78], "aesaracod": [1, 11, 33, 92, 197], "correspond": [1, 5, 7, 8, 12, 14, 15, 18, 31, 32, 33, 34, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 57, 61, 62, 64, 65, 66, 67, 74, 76, 80, 81, 82, 87, 90, 91, 94, 95, 101, 107, 109, 113, 114, 116, 118, 131, 135, 139, 153, 157, 158, 160, 164, 165, 168, 173, 176, 178, 182, 183, 185, 186, 187, 188, 190, 192, 193, 197, 203, 204, 207, 209, 210, 213, 214, 215, 216, 217, 219, 221, 222, 223, 230, 231, 232, 233, 235, 236, 238, 242, 243, 245, 246, 248, 250, 267, 273], "theano_cod": 1, "aesara_cod": [1, 197], "theanoprint": 1, "aesaraprint": [1, 197], "predic": [1, 21, 26, 27, 31, 93, 193, 209, 235, 253], "experienc": [1, 34], "big": [1, 2, 5, 7, 35, 51, 53, 91, 130, 143, 182, 196, 197, 204, 238, 262, 264], "registr": 1, "done": [1, 2, 5, 12, 14, 18, 27, 28, 30, 31, 32, 33, 42, 44, 49, 51, 52, 53, 56, 59, 62, 63, 76, 78, 82, 87, 91, 114, 116, 122, 128, 130, 149, 158, 159, 160, 163, 165, 166, 173, 178, 180, 181, 183, 184, 186, 190, 194, 196, 197, 198, 206, 209, 210, 213, 215, 216, 217, 222, 223, 228, 229, 232, 236, 245, 246, 261, 264, 266, 267, 268], "add_handl": 1, "remove_handl": [1, 26], "multipledispatch": [1, 26], "instanc": [1, 4, 7, 8, 10, 12, 14, 15, 18, 26, 27, 28, 30, 32, 33, 42, 44, 46, 51, 53, 55, 56, 57, 59, 64, 67, 68, 69, 74, 75, 78, 79, 82, 84, 87, 91, 93, 94, 102, 106, 109, 113, 114, 131, 136, 143, 147, 153, 157, 158, 160, 162, 163, 173, 175, 177, 178, 183, 187, 188, 192, 193, 194, 195, 197, 205, 207, 209, 213, 215, 216, 217, 221, 222, 223, 228, 229, 230, 232, 235, 236, 242, 243, 244, 245, 246, 248, 250, 261, 262, 267, 272, 273], "regist": [1, 26, 27, 28, 52, 159], "register_mani": [1, 27, 28], "must": [1, 2, 7, 8, 11, 12, 13, 14, 25, 26, 27, 28, 33, 42, 43, 45, 47, 49, 50, 51, 52, 53, 56, 57, 59, 61, 64, 67, 70, 73, 74, 76, 78, 81, 82, 83, 84, 87, 90, 91, 94, 95, 97, 99, 101, 102, 109, 110, 114, 116, 124, 125, 126, 127, 128, 130, 143, 158, 160, 163, 172, 173, 181, 182, 183, 184, 185, 188, 190, 192, 193, 197, 198, 205, 206, 207, 209, 210, 213, 215, 216, 217, 221, 222, 228, 229, 230, 231, 232, 233, 235, 236, 239, 264, 266, 267, 271, 272], "askprimehandl": 1, "staticmethod": [1, 228], "def": [1, 2, 5, 7, 8, 12, 14, 15, 18, 27, 28, 32, 51, 56, 63, 81, 87, 91, 93, 122, 158, 187, 193, 197, 206, 209, 216, 231, 233, 235, 236, 239, 261, 264, 267, 268, 272], "integ": [1, 2, 7, 11, 14, 15, 18, 22, 26, 27, 28, 31, 33, 34, 40, 42, 43, 44, 45, 47, 50, 52, 53, 54, 55, 56, 58, 59, 61, 64, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 94, 101, 103, 152, 157, 159, 160, 161, 163, 165, 173, 175, 177, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 206, 207, 209, 210, 213, 215, 216, 217, 221, 222, 223, 229, 230, 232, 235, 238, 262, 264, 267, 271, 272], "register_handl": [1, 26], "prime": [1, 7, 26, 27, 28, 42, 49, 50, 51, 52, 54, 56, 59, 91, 134, 184, 185, 187, 188, 189, 190, 193, 207, 209, 210, 217, 232], "definit": [1, 2, 8, 14, 25, 28, 33, 34, 42, 43, 48, 50, 51, 53, 54, 56, 57, 59, 64, 67, 71, 74, 76, 78, 82, 83, 84, 87, 91, 93, 116, 121, 122, 128, 165, 168, 171, 173, 180, 181, 184, 185, 188, 193, 194, 197, 204, 217, 218, 229, 230, 231, 235, 236, 242, 245, 246, 247, 248, 262, 272], "Not": [1, 8, 18, 51, 56, 81, 101, 197, 216, 217, 235, 266, 273], "exist": [1, 5, 7, 12, 18, 31, 32, 35, 42, 51, 55, 61, 63, 66, 67, 68, 69, 77, 78, 81, 87, 91, 97, 153, 178, 181, 183, 184, 185, 186, 190, 192, 197, 204, 205, 207, 210, 213, 215, 216, 228, 236, 246, 266, 268, 273], "primepred": [1, 29], "q": [1, 2, 4, 7, 24, 25, 26, 27, 28, 29, 30, 33, 43, 47, 50, 51, 52, 59, 68, 73, 74, 76, 78, 80, 82, 87, 91, 93, 94, 101, 102, 109, 110, 113, 114, 116, 118, 123, 125, 126, 127, 130, 131, 132, 143, 157, 163, 166, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 199, 207, 210, 213, 215, 217, 222, 223, 238, 242, 244, 245, 247, 250, 268, 272], "_": [1, 2, 5, 12, 13, 14, 15, 18, 27, 28, 32, 39, 40, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 65, 66, 67, 76, 78, 81, 82, 83, 84, 85, 87, 89, 91, 93, 101, 125, 128, 130, 142, 168, 172, 177, 180, 182, 188, 193, 196, 197, 198, 200, 204, 205, 206, 207, 209, 210, 213, 214, 215, 218, 235, 244, 246, 271], "20209": 1, "stochast": 1, "process": [1, 2, 7, 14, 15, 16, 21, 30, 33, 42, 43, 49, 51, 52, 57, 59, 67, 76, 78, 87, 91, 101, 110, 114, 116, 122, 125, 127, 130, 183, 184, 190, 197, 198, 205, 209, 213, 215, 228, 232, 272], "timestamp": 1, "wienerprocess": [1, 217], "posit": [1, 2, 7, 8, 12, 18, 26, 27, 28, 30, 32, 33, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 67, 76, 78, 80, 81, 82, 83, 87, 88, 90, 91, 94, 95, 97, 101, 103, 108, 111, 114, 116, 118, 121, 123, 127, 128, 130, 132, 135, 137, 141, 158, 161, 163, 174, 175, 176, 178, 180, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 202, 203, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 223, 235, 242, 244, 245, 246, 248, 250, 251, 268, 272, 273], "would": [1, 2, 5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 22, 32, 33, 34, 40, 42, 43, 50, 51, 52, 56, 63, 67, 76, 78, 82, 87, 91, 93, 94, 101, 102, 103, 105, 107, 114, 118, 127, 130, 158, 160, 163, 168, 172, 173, 178, 180, 183, 186, 187, 188, 190, 193, 194, 196, 197, 198, 200, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 221, 222, 228, 230, 232, 235, 236, 238, 239, 246, 247, 248, 250, 261, 262, 264, 266, 267, 268, 271, 272, 273], "normaldistribut": [1, 217], "made": [1, 2, 7, 12, 15, 18, 45, 47, 51, 52, 57, 60, 61, 64, 67, 68, 78, 81, 87, 91, 93, 114, 127, 130, 181, 184, 188, 190, 192, 193, 198, 204, 205, 206, 209, 213, 215, 216, 217, 230, 235, 238, 250, 267], "store": [1, 2, 7, 9, 13, 32, 33, 41, 42, 51, 73, 75, 84, 87, 91, 93, 109, 111, 113, 114, 128, 157, 163, 176, 180, 181, 183, 184, 187, 192, 193, 194, 204, 207, 218, 221, 222, 230, 231, 232, 235, 246, 248, 267], "basic": [1, 7, 11, 12, 13, 14, 15, 18, 23, 25, 27, 32, 33, 34, 39, 42, 46, 49, 50, 54, 57, 67, 69, 74, 75, 76, 81, 82, 85, 86, 88, 101, 108, 114, 125, 126, 128, 130, 131, 137, 147, 161, 168, 171, 178, 179, 181, 183, 184, 186, 188, 189, 190, 192, 194, 195, 197, 198, 204, 209, 210, 213, 214, 215, 216, 217, 228, 230, 235, 236, 240, 247, 248, 249, 255, 262, 263, 264, 265, 270], "20078": 1, "misspel": 1, "spell": [1, 14, 213], "absorbing_prob": [1, 217], "absorb": [1, 76, 213, 217, 262], "probabilit": [1, 217], "es": 1, "standard": [1, 2, 7, 11, 15, 18, 33, 51, 55, 57, 59, 74, 76, 78, 79, 80, 81, 85, 87, 91, 92, 93, 104, 140, 144, 173, 178, 184, 187, 188, 190, 197, 200, 205, 209, 210, 213, 216, 217, 230, 236, 239, 245, 250, 261, 264, 272], "shutil": 1, "power": [1, 2, 25, 30, 33, 41, 42, 43, 52, 54, 55, 57, 73, 74, 76, 78, 80, 82, 84, 91, 92, 101, 114, 130, 135, 146, 149, 162, 165, 168, 169, 173, 184, 185, 187, 188, 189, 190, 192, 193, 197, 198, 201, 204, 206, 208, 210, 213, 215, 216, 217, 221, 230, 235, 253, 255, 261, 262, 263, 264, 265, 267, 268, 271], "sever": [1, 4, 7, 11, 12, 13, 14, 18, 20, 33, 36, 42, 43, 50, 51, 55, 56, 58, 59, 63, 76, 78, 91, 107, 168, 170, 183, 185, 187, 190, 192, 196, 197, 198, 204, 205, 213, 217, 228, 230, 240, 252, 264, 268, 271], "immut": [1, 51, 83, 86, 89, 181, 188, 213, 218, 256, 261, 268], "rest": [1, 12, 76, 79, 81, 85, 95, 103, 114, 118, 124, 168, 184, 187, 217, 235, 264, 265, 272], "coordsystem": [1, 53], "explicit": [1, 7, 18, 43, 50, 51, 55, 67, 68, 78, 90, 91, 113, 114, 118, 127, 131, 181, 184, 193, 196, 197, 199, 205, 207, 213, 214, 215, 216, 220, 232], "appropi": 1, "patch": [1, 53, 197], "real": [1, 2, 4, 5, 7, 8, 18, 25, 27, 28, 30, 31, 33, 43, 51, 52, 53, 55, 56, 57, 58, 59, 63, 67, 68, 73, 76, 78, 81, 82, 84, 87, 91, 93, 97, 103, 114, 130, 132, 135, 136, 143, 161, 175, 182, 185, 188, 189, 192, 193, 194, 197, 198, 200, 204, 207, 209, 212, 213, 215, 216, 217, 222, 226, 230, 239, 266, 272, 273], "similarli": [1, 7, 47, 51, 52, 59, 63, 87, 94, 95, 101, 109, 128, 183, 184, 187, 192, 194, 204, 205, 207, 213, 228, 236, 246, 247, 268], "manifold": [1, 53], "track": [1, 2, 42, 51, 55, 59, 113, 128, 147, 181, 204, 223, 262], "separ": [1, 2, 5, 8, 12, 14, 18, 32, 39, 51, 52, 57, 59, 76, 78, 87, 102, 113, 127, 128, 131, 136, 160, 163, 172, 173, 183, 185, 188, 190, 193, 194, 197, 206, 209, 210, 214, 216, 221, 226, 228, 232, 236, 238, 242, 264], "coord_system": 1, "connect_to": 1, "coord_tuple_transform_to": [1, 53], "constructor": [1, 18, 27, 28, 32, 33, 38, 42, 43, 44, 51, 58, 59, 80, 85, 87, 118, 156, 157, 161, 165, 183, 184, 186, 187, 188, 189, 197, 205, 213, 222, 230, 245, 263, 267], "docstr": [1, 2, 12, 16, 18, 21, 23, 32, 33, 44, 51, 73, 76, 78, 87, 91, 96, 100, 102, 124, 128, 133, 150, 156, 157, 159, 179, 193, 200, 203, 204, 206, 209, 213, 214, 215, 216, 222, 223, 228, 231, 236, 238, 249, 252], "str": [1, 18, 27, 32, 33, 34, 43, 51, 52, 53, 55, 60, 61, 64, 67, 68, 79, 81, 84, 91, 93, 99, 109, 111, 130, 147, 157, 163, 173, 175, 176, 183, 188, 192, 197, 209, 213, 217, 233, 235, 236, 238, 242], "wrong": [1, 12, 15, 42, 51, 52, 59, 61, 87, 173, 187, 211, 213, 231, 264, 268], "right": [1, 2, 5, 9, 12, 14, 15, 18, 22, 31, 33, 34, 42, 43, 47, 51, 52, 54, 56, 57, 59, 67, 68, 76, 78, 81, 82, 87, 90, 91, 93, 94, 95, 101, 109, 113, 114, 127, 128, 130, 131, 135, 142, 147, 149, 151, 152, 157, 160, 163, 173, 178, 181, 182, 183, 184, 186, 192, 194, 195, 197, 199, 200, 204, 205, 207, 213, 214, 216, 217, 228, 230, 232, 235, 248, 262, 266, 268, 272], "unord": [1, 2, 51, 91, 188, 216, 235, 236], "imposs": [1, 12, 14, 18, 51, 187, 206, 213, 214, 226, 264, 272], "lambidfi": 1, "thu": [1, 2, 5, 11, 12, 29, 36, 42, 43, 51, 52, 53, 57, 59, 74, 76, 78, 82, 85, 87, 90, 91, 102, 113, 118, 124, 127, 168, 173, 185, 190, 192, 194, 198, 204, 207, 209, 230, 235, 236, 246, 247, 264, 267, 272, 273], "guess": [1, 32, 52, 55, 76, 79, 177, 190, 193, 207, 210, 267], "mul": [1, 2, 4, 14, 18, 25, 76, 78, 82, 91, 143, 147, 157, 158, 186, 187, 188, 192, 193, 197, 198, 199, 206, 209, 213, 214, 215, 216, 221, 253, 267], "pow": [1, 2, 14, 25, 30, 33, 52, 57, 76, 82, 91, 162, 186, 187, 188, 193, 197, 199, 206, 209, 215, 216, 267, 271], "construct": [1, 5, 27, 28, 32, 33, 38, 51, 53, 57, 59, 61, 65, 67, 79, 84, 87, 92, 95, 105, 109, 111, 114, 116, 148, 152, 161, 162, 165, 169, 184, 187, 188, 190, 192, 193, 197, 210, 215, 217, 218, 220, 222, 230, 232, 233, 245, 247, 248, 264, 267, 268, 272], "directli": [1, 2, 5, 7, 8, 11, 12, 14, 18, 20, 27, 28, 31, 32, 33, 42, 50, 51, 53, 57, 62, 82, 84, 87, 91, 114, 149, 161, 166, 173, 176, 183, 184, 187, 188, 192, 193, 205, 206, 207, 209, 210, 213, 214, 216, 217, 228, 229, 230, 231, 232, 233, 262, 273], "superclass": [1, 7, 50, 51, 78, 84, 188], "scalar": [1, 25, 51, 53, 66, 80, 82, 84, 87, 92, 111, 114, 162, 173, 174, 175, 179, 181, 184, 186, 190, 197, 213, 218, 230, 236, 242, 243, 244, 245, 246, 247, 249, 251], "numer": [1, 2, 5, 7, 11, 14, 22, 29, 31, 33, 50, 51, 56, 59, 63, 67, 71, 74, 87, 91, 93, 97, 98, 99, 101, 109, 110, 114, 116, 124, 127, 131, 135, 142, 145, 160, 167, 172, 181, 183, 187, 188, 190, 191, 192, 193, 196, 197, 206, 207, 209, 213, 215, 216, 222, 228, 229, 235, 236, 253, 261, 264, 268, 272], "sin": [1, 2, 7, 14, 15, 18, 20, 22, 25, 31, 33, 50, 51, 53, 55, 56, 58, 59, 60, 61, 65, 69, 70, 73, 74, 75, 76, 78, 79, 82, 87, 92, 93, 103, 106, 107, 108, 113, 114, 116, 117, 119, 121, 122, 123, 127, 130, 135, 137, 161, 173, 175, 176, 178, 180, 181, 182, 183, 185, 187, 193, 194, 196, 197, 198, 199, 200, 204, 205, 206, 207, 209, 212, 213, 215, 216, 218, 224, 230, 236, 242, 243, 244, 245, 246, 251, 261, 262, 264, 266, 267, 272, 273], "boolean": [1, 18, 21, 26, 27, 28, 29, 30, 31, 33, 51, 57, 61, 65, 66, 67, 68, 79, 82, 87, 88, 91, 94, 99, 101, 148, 173, 175, 177, 183, 186, 188, 190, 192, 194, 197, 209, 213, 215, 217, 235, 244, 255, 268], "sens": [1, 5, 7, 18, 25, 29, 31, 32, 51, 53, 56, 59, 76, 81, 109, 116, 168, 173, 181, 184, 190, 192, 206, 207, 209, 216, 217, 229, 230, 235, 250, 272], "exponenti": [1, 2, 7, 25, 33, 42, 47, 51, 52, 56, 58, 78, 81, 82, 87, 91, 93, 149, 165, 194, 209, 216, 217, 263, 264, 268], "complex": [1, 2, 4, 7, 14, 18, 25, 28, 30, 31, 33, 42, 51, 52, 54, 55, 56, 58, 59, 63, 73, 76, 82, 83, 87, 91, 92, 93, 99, 101, 105, 114, 130, 132, 136, 146, 149, 151, 152, 163, 172, 173, 181, 185, 186, 188, 189, 192, 193, 197, 198, 202, 207, 209, 213, 215, 216, 217, 230, 238, 272, 273], "manual": [1, 9, 11, 12, 15, 18, 33, 34, 42, 55, 61, 78, 79, 93, 101, 113, 114, 117, 127, 131, 183, 190, 197, 213, 215, 216, 231, 262, 272], "trick": [1, 2, 47, 207, 223], "treat": [1, 7, 8, 18, 41, 42, 49, 51, 56, 59, 66, 67, 87, 93, 111, 114, 136, 173, 178, 185, 187, 188, 190, 192, 193, 194, 196, 197, 204, 205, 207, 209, 210, 213, 221, 229, 232, 248, 264, 268], "cdot": [1, 7, 34, 50, 56, 59, 69, 73, 74, 76, 82, 84, 87, 91, 102, 104, 128, 168, 178, 180, 181, 182, 184, 185, 193, 200, 204, 207, 213, 215, 218, 219, 247, 248, 266, 267, 272], "try": [1, 2, 7, 8, 14, 15, 16, 18, 43, 50, 51, 55, 59, 61, 66, 76, 78, 81, 84, 87, 90, 91, 153, 155, 162, 163, 183, 187, 192, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 236, 238, 261, 264, 267, 268, 272], "attributeerror": [1, 7, 51, 87, 216, 236, 268], "as_coeff_mul": [1, 51, 76, 84], "tri": [1, 2, 7, 32, 51, 59, 67, 76, 78, 116, 127, 158, 184, 185, 192, 197, 199, 209, 213, 214, 216, 228, 264, 272], "follow": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 26, 28, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 50, 51, 52, 55, 56, 57, 59, 63, 65, 67, 74, 75, 76, 78, 81, 82, 84, 87, 91, 92, 94, 95, 108, 109, 114, 116, 124, 125, 126, 127, 128, 130, 132, 136, 155, 158, 160, 163, 166, 168, 173, 178, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 228, 231, 232, 235, 236, 239, 245, 246, 248, 261, 262, 264, 265, 267, 268, 272, 273], "benchmark": [1, 116, 129], "random": [1, 11, 14, 35, 40, 42, 43, 49, 52, 61, 64, 65, 86, 87, 91, 147, 159, 183, 190, 197, 227, 228, 231, 235, 253, 259, 264, 268, 272], "runtest": [1, 228], "tmpfile": 1, "random_complex_numb": 1, "verify_numer": 1, "test_derivative_numer": 1, "_randrang": [1, 52], "_randint": [1, 190], "explicitli": [1, 7, 12, 18, 33, 42, 43, 51, 52, 54, 57, 59, 64, 68, 84, 87, 92, 101, 114, 172, 173, 183, 185, 187, 188, 190, 193, 197, 209, 213, 233, 264, 268, 271, 273], "as_poli": [1, 51, 185, 193], "as_expr": [1, 51, 87, 187, 192, 193, 194, 268], "combintor": 1, "control": [1, 2, 7, 11, 13, 18, 32, 34, 51, 52, 55, 76, 81, 82, 127, 130, 143, 147, 158, 159, 163, 167, 193, 194, 198, 205, 210, 216, 235, 258, 259, 261], "whether": [1, 7, 8, 9, 12, 18, 31, 32, 33, 37, 42, 50, 51, 52, 58, 59, 63, 66, 78, 79, 81, 82, 87, 91, 105, 110, 113, 114, 151, 170, 175, 181, 183, 186, 187, 188, 192, 193, 197, 200, 204, 205, 209, 210, 213, 215, 216, 217, 218, 228, 230, 235, 236, 242, 244, 264, 268], "cycl": [1, 15, 33, 39, 42, 43, 49, 51, 54, 56, 82, 91, 137, 205, 235], "bad": [1, 9, 50, 91, 165, 197], "global": [1, 12, 14, 26, 27, 28, 31, 33, 34, 51, 63, 76, 93, 147, 153, 173, 175, 183, 184, 187, 188, 190, 197, 210, 213, 214, 217, 228, 230, 231, 236, 244], "perm_cycl": [1, 43, 197], "printer": [1, 18, 43, 51, 59, 79, 87, 92, 177, 222, 229, 230, 236, 254, 260, 263, 267], "easiest": [1, 2, 13, 15, 51, 184, 187, 210, 236, 246, 261, 267, 272], "configur": [1, 11, 12, 13, 43, 81, 101, 109, 117, 118, 121, 123, 124, 125, 127, 189, 197], "init_print": [1, 20, 33, 43, 55, 78, 79, 87, 95, 177, 184, 185, 196, 262, 266, 268, 271, 272, 273], "current": [1, 2, 7, 12, 15, 25, 28, 31, 32, 33, 34, 35, 42, 45, 46, 48, 49, 50, 51, 53, 57, 59, 61, 63, 66, 71, 74, 76, 78, 80, 82, 87, 91, 93, 94, 98, 105, 114, 124, 157, 162, 163, 167, 171, 181, 183, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 204, 207, 209, 210, 212, 213, 214, 215, 216, 217, 223, 228, 229, 230, 232, 245, 268, 273], "take": [1, 2, 5, 7, 8, 11, 12, 13, 15, 18, 28, 31, 33, 34, 36, 41, 42, 46, 50, 51, 52, 53, 57, 59, 63, 64, 74, 78, 80, 81, 82, 87, 91, 92, 93, 94, 97, 101, 105, 109, 111, 113, 114, 116, 127, 128, 130, 132, 146, 149, 152, 153, 157, 159, 160, 161, 162, 163, 165, 168, 171, 172, 173, 174, 175, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 193, 194, 197, 200, 203, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 219, 222, 228, 229, 231, 232, 235, 236, 242, 243, 244, 261, 262, 264, 266, 267, 268, 272], "parse_expr": [1, 7, 11, 93], "problemat": [1, 18, 187], "few": [1, 7, 9, 11, 12, 29, 41, 43, 51, 52, 78, 79, 91, 92, 116, 124, 166, 172, 177, 180, 181, 184, 192, 197, 205, 206, 207, 213, 216, 217, 230, 235, 272], "affect": [1, 7, 18, 50, 51, 87, 172, 193, 216, 246], "perform": [1, 2, 4, 5, 7, 11, 18, 30, 32, 33, 34, 42, 43, 46, 50, 51, 52, 54, 55, 57, 64, 68, 75, 78, 85, 87, 91, 92, 107, 109, 116, 118, 124, 127, 128, 130, 147, 148, 157, 160, 163, 178, 181, 185, 186, 187, 190, 192, 193, 198, 199, 200, 204, 209, 210, 213, 215, 216, 217, 218, 229, 235, 242, 243, 245, 248, 253, 261, 262, 266, 267, 272], "18056": 1, "15416": 1, "where": [1, 2, 5, 7, 8, 9, 12, 13, 14, 15, 18, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 91, 94, 98, 101, 105, 108, 109, 110, 111, 113, 114, 116, 126, 127, 128, 130, 131, 137, 147, 152, 158, 160, 162, 163, 164, 165, 166, 173, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 221, 223, 228, 229, 230, 231, 235, 236, 238, 242, 248, 250, 262, 264, 266, 268, 272, 273], "caus": [1, 12, 15, 18, 20, 51, 52, 55, 57, 87, 114, 122, 127, 180, 197, 206, 213, 214, 215, 232, 233, 268], "up": [1, 5, 7, 8, 9, 11, 12, 18, 20, 28, 31, 33, 42, 43, 45, 51, 52, 53, 55, 56, 57, 59, 60, 67, 68, 72, 76, 78, 79, 81, 82, 87, 91, 92, 94, 103, 105, 111, 113, 116, 117, 121, 123, 127, 128, 130, 131, 143, 158, 160, 176, 182, 183, 184, 187, 188, 192, 194, 197, 198, 199, 204, 206, 207, 209, 210, 213, 214, 215, 216, 229, 230, 231, 232, 233, 236, 263, 264, 267, 268, 270], "100x": 1, "slowdown": [1, 55], "automat": [1, 2, 7, 9, 11, 12, 14, 15, 32, 33, 34, 43, 51, 53, 54, 55, 56, 57, 59, 64, 66, 70, 76, 79, 81, 91, 93, 94, 109, 114, 116, 122, 149, 151, 152, 161, 163, 176, 180, 183, 184, 187, 188, 189, 192, 193, 194, 197, 200, 203, 204, 206, 207, 209, 210, 213, 215, 216, 222, 223, 228, 229, 230, 233, 246, 251, 262, 264, 266, 267, 271, 272, 273], "doesn": [1, 2, 12, 14, 18, 33, 75, 114, 118, 127, 130, 181, 185, 194, 196, 206, 209, 216, 273], "significantli": [1, 33, 55, 105, 125, 188, 199, 229, 232], "slower": [1, 18, 47, 87, 187, 192, 236, 261], "direct": [1, 6, 12, 14, 15, 25, 27, 28, 32, 36, 39, 42, 47, 50, 51, 53, 55, 57, 60, 64, 65, 66, 67, 81, 82, 87, 94, 95, 97, 105, 106, 108, 116, 118, 122, 130, 149, 173, 178, 180, 181, 184, 186, 187, 190, 194, 204, 207, 223, 226, 235, 242, 246, 247, 250], "happen": [1, 5, 7, 8, 12, 14, 18, 25, 33, 43, 50, 51, 55, 63, 66, 75, 158, 162, 168, 184, 190, 192, 193, 196, 205, 209, 213, 217, 236, 246, 264, 271, 272], "occur": [1, 2, 14, 42, 43, 51, 55, 59, 68, 76, 82, 93, 105, 127, 172, 173, 180, 192, 200, 209, 214, 215, 218, 228, 235, 267], "_sympifi": [1, 51, 84, 267], "equival": [1, 2, 7, 8, 12, 18, 25, 29, 33, 34, 41, 42, 47, 51, 52, 55, 57, 59, 76, 78, 87, 91, 93, 98, 99, 101, 114, 124, 146, 157, 160, 163, 166, 173, 177, 181, 183, 184, 185, 187, 188, 192, 193, 197, 204, 205, 209, 213, 215, 216, 218, 219, 222, 223, 232, 236, 238, 239, 255], "strict": [1, 42, 43, 51, 55, 56, 82, 87, 190, 193, 215, 235, 238, 272], "lot": [1, 42, 51, 69, 76, 78, 87, 114, 130, 183, 196, 200, 210, 216, 228, 272], "harder": [1, 7, 14, 51, 76, 187, 228], "secur": 1, "eval": [1, 7, 14, 27, 28, 33, 51, 57, 59, 149, 163, 188, 193, 197, 230, 261], "__repr__": [1, 197], "com": [1, 9, 11, 12, 13, 14, 15, 18, 20, 25, 29, 31, 42, 44, 45, 51, 52, 54, 55, 56, 57, 59, 61, 67, 68, 76, 78, 82, 87, 91, 99, 182, 191, 200, 202, 205, 206, 209, 210, 213, 216, 217, 235, 238, 268], "pull": [1, 9, 11, 12, 13, 14, 15, 17, 18, 20, 33, 51, 56, 59, 162, 198, 209, 213, 216, 268, 272], "12524": 1, "begin": [1, 2, 7, 14, 18, 22, 51, 52, 56, 57, 59, 76, 82, 84, 87, 91, 118, 125, 126, 127, 128, 159, 168, 173, 181, 182, 186, 197, 207, 210, 213, 214, 216, 217, 228, 238, 264, 266, 268, 272], "usual": [1, 2, 5, 7, 11, 32, 34, 42, 50, 51, 52, 69, 76, 78, 87, 124, 149, 161, 168, 178, 180, 181, 184, 185, 187, 188, 190, 196, 197, 198, 204, 207, 213, 216, 217, 218, 222, 223, 230, 232, 236, 242, 250, 261, 264, 267, 271, 272], "custom": [1, 14, 19, 21, 33, 43, 51, 55, 58, 79, 82, 87, 107, 108, 172, 177, 178, 199, 203, 210, 217, 223, 229, 236, 242, 250, 259, 266, 268], "repr": [1, 33, 78, 157, 187, 192, 197, 228, 271], "anyth": [1, 2, 12, 14, 15, 18, 31, 33, 51, 52, 62, 66, 87, 114, 137, 147, 194, 197, 203, 205, 209, 213, 215, 229, 235, 238, 264], "look": [1, 2, 7, 8, 12, 14, 15, 18, 24, 32, 33, 42, 51, 56, 57, 59, 72, 87, 91, 109, 114, 116, 124, 147, 157, 158, 161, 176, 183, 187, 188, 192, 197, 199, 200, 204, 207, 209, 210, 213, 214, 228, 232, 236, 238, 246, 262, 267, 270, 271], "valid": [1, 7, 8, 11, 14, 15, 18, 26, 28, 30, 31, 32, 33, 44, 50, 51, 56, 57, 67, 77, 87, 91, 107, 109, 114, 116, 128, 132, 136, 155, 160, 170, 173, 177, 181, 187, 190, 193, 196, 197, 205, 209, 210, 213, 215, 216, 217, 236, 268, 272], "identifi": [1, 7, 8, 14, 31, 44, 51, 54, 55, 78, 87, 97, 125, 151, 152, 184, 187, 188, 198, 206, 209, 213, 214, 215, 216, 217, 236, 239], "There": [1, 2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 18, 33, 34, 42, 43, 44, 45, 48, 50, 51, 52, 55, 56, 59, 75, 76, 78, 79, 80, 81, 84, 87, 91, 94, 95, 97, 101, 105, 113, 124, 125, 127, 136, 153, 158, 172, 173, 177, 180, 181, 183, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 205, 206, 207, 209, 210, 213, 215, 216, 217, 222, 231, 232, 235, 236, 238, 246, 261, 262, 264, 266, 267, 271, 272], "plenti": 1, "firstli": [1, 7, 12, 18, 207], "alongsid": [1, 12, 18, 84], "unchang": [1, 12, 18, 42, 43, 51, 78, 87, 101, 193, 197, 203, 206, 209, 216, 261], "_sympy_": [1, 51], "dictionari": [1, 11, 32, 33, 40, 42, 43, 49, 51, 56, 65, 67, 80, 82, 87, 90, 91, 93, 94, 107, 109, 110, 113, 114, 116, 118, 121, 125, 127, 153, 163, 173, 181, 183, 185, 188, 190, 192, 193, 195, 197, 204, 209, 210, 213, 214, 215, 216, 217, 221, 223, 228, 232, 235, 236, 242, 261, 268], "disabl": [1, 51, 52, 76, 78, 91, 190, 193, 197, 205, 213, 215, 226, 228, 231, 235], "int": [1, 2, 7, 8, 11, 14, 15, 18, 25, 31, 33, 43, 51, 52, 53, 56, 57, 59, 60, 67, 76, 78, 79, 81, 82, 87, 88, 91, 93, 99, 101, 143, 147, 148, 157, 173, 175, 176, 177, 182, 183, 187, 188, 192, 193, 194, 197, 199, 200, 202, 213, 214, 217, 229, 233, 235, 238, 264, 266, 267, 271, 272], "dx": [1, 5, 15, 18, 31, 33, 47, 51, 53, 55, 59, 68, 70, 73, 74, 75, 76, 78, 87, 94, 104, 109, 110, 152, 181, 193, 194, 200, 210, 213, 214, 218, 262, 266, 271, 273], "constant": [1, 31, 33, 50, 51, 55, 57, 59, 75, 76, 78, 94, 95, 101, 113, 114, 116, 130, 131, 140, 144, 150, 166, 167, 169, 170, 171, 174, 176, 178, 183, 185, 188, 190, 192, 193, 194, 197, 199, 204, 207, 209, 210, 213, 214, 215, 216, 217, 228, 230, 235, 236, 244, 248, 251, 262, 268, 273], "equal": [1, 3, 7, 8, 14, 18, 25, 29, 32, 33, 34, 40, 41, 42, 43, 47, 49, 50, 52, 53, 55, 56, 57, 59, 64, 65, 66, 67, 68, 70, 76, 81, 82, 84, 87, 91, 94, 101, 102, 106, 109, 111, 116, 125, 126, 147, 148, 163, 168, 173, 176, 181, 184, 185, 186, 187, 188, 190, 192, 193, 195, 197, 203, 205, 207, 210, 213, 214, 215, 216, 217, 223, 228, 229, 230, 235, 238, 242, 246, 251, 262, 265, 273], "lh": [1, 33, 41, 51, 195, 197, 213, 215, 216, 247], "tensexpr": [1, 102, 223], "substitute_indic": 1, "danger": [1, 185], "tensor_head": [1, 102, 223], "had": [1, 18, 43, 51, 52, 87, 91, 114, 127, 192, 193, 194, 197, 205, 207, 213, 215, 216, 231, 236, 261, 264, 267, 268], "purpos": [1, 6, 7, 13, 14, 15, 16, 18, 32, 33, 42, 48, 51, 52, 78, 87, 114, 130, 168, 172, 181, 187, 190, 194, 196, 197, 204, 213, 216, 222, 232, 234, 236, 245, 246, 262, 272], "shorter": [1, 51, 61, 105, 125, 172, 184, 188, 197, 230, 238], "creation": [1, 2, 18, 51, 53, 87, 106, 111, 121, 124, 125, 126, 127, 137, 147, 151, 152, 153, 163, 180, 181, 197, 217, 222, 230, 236], "l": [1, 2, 14, 31, 32, 33, 34, 40, 42, 43, 50, 52, 59, 62, 63, 64, 65, 66, 68, 69, 74, 76, 78, 80, 83, 84, 87, 91, 94, 95, 101, 103, 108, 109, 111, 113, 114, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 135, 161, 164, 165, 166, 168, 180, 181, 182, 184, 186, 188, 190, 191, 197, 199, 200, 206, 207, 210, 213, 215, 217, 221, 222, 223, 224, 228, 230, 235, 251, 272], "_dummy_fmt": 1, "l_": [1, 78, 87], "d": [1, 2, 5, 9, 14, 15, 18, 25, 32, 35, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 56, 59, 61, 65, 69, 74, 76, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 93, 94, 97, 109, 130, 132, 135, 136, 142, 152, 160, 162, 163, 168, 172, 173, 175, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 199, 203, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 223, 235, 238, 242, 243, 244, 245, 246, 250, 258, 268, 273], "obsolet": 1, "format": [1, 5, 9, 12, 16, 32, 43, 52, 73, 74, 78, 81, 87, 90, 91, 94, 113, 131, 136, 147, 157, 183, 186, 187, 192, 193, 195, 197, 207, 213, 216, 228, 238, 242, 245, 265, 268, 271], "dummy_nam": [1, 223], "clearer": [1, 245], "ambigu": [1, 2, 15, 51, 151, 157, 209, 221, 226], "symmetri": [1, 14, 39, 44, 47, 59, 82, 142, 182, 213, 221, 223, 261, 272], "metric_symmetri": [1, 223], "set_metr": [1, 223], "delta": [1, 2, 33, 35, 45, 56, 59, 74, 76, 80, 99, 127, 135, 163, 197, 204, 210, 213, 217, 218, 223], "epsilon": [1, 2, 50, 52, 59, 76, 78, 134, 197, 223], "respect": [1, 2, 13, 14, 18, 26, 28, 29, 31, 32, 33, 34, 41, 42, 43, 46, 47, 49, 50, 51, 53, 57, 59, 61, 63, 67, 68, 73, 74, 76, 78, 81, 82, 84, 87, 91, 93, 94, 95, 97, 101, 106, 107, 108, 111, 118, 126, 128, 130, 137, 152, 165, 166, 167, 172, 173, 176, 178, 181, 182, 183, 184, 187, 190, 192, 193, 194, 197, 199, 200, 203, 205, 209, 213, 214, 215, 216, 217, 218, 222, 223, 228, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 262, 272], "prefer": [1, 7, 9, 11, 14, 18, 33, 43, 50, 51, 59, 91, 93, 114, 163, 168, 183, 186, 188, 190, 192, 197, 205, 209, 213, 215, 222, 228, 230, 233, 236, 266, 268], "over": [1, 2, 4, 12, 15, 18, 25, 31, 32, 33, 34, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 65, 67, 74, 76, 80, 81, 84, 87, 88, 91, 94, 95, 103, 114, 130, 131, 142, 158, 161, 163, 167, 168, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 200, 202, 204, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 231, 235, 236, 242, 244, 248, 251, 266, 270, 272], "latter": [1, 4, 18, 33, 42, 51, 56, 59, 76, 91, 184, 188, 192, 197, 207, 210, 223, 230, 235, 236, 264], "extra": [1, 9, 33, 51, 52, 91, 92, 122, 168, 178, 189, 190, 197, 207, 213, 228, 229, 230, 248], "involv": [1, 2, 5, 7, 28, 30, 42, 50, 51, 52, 56, 63, 64, 76, 78, 91, 101, 106, 109, 114, 142, 152, 158, 160, 170, 180, 181, 184, 185, 188, 190, 192, 193, 194, 198, 199, 204, 205, 206, 207, 209, 210, 213, 215, 218, 236, 272], "obscur": [1, 7], "young": [1, 94, 223], "tableau": 1, "Is": [1, 12, 43, 61, 62, 64, 65, 66, 67, 91, 194, 216], "favor": 1, "consist": [1, 5, 7, 14, 15, 32, 42, 43, 47, 51, 52, 56, 57, 59, 61, 67, 69, 76, 81, 94, 97, 128, 137, 157, 163, 168, 171, 176, 183, 185, 187, 188, 190, 205, 213, 215, 216, 217, 221, 226, 229, 230, 235, 265, 267], "tensorindex": [1, 223], "tensor_indic": [1, 102, 223], "denot": [1, 2, 5, 42, 43, 51, 53, 59, 73, 74, 76, 78, 80, 81, 82, 87, 91, 93, 101, 168, 173, 178, 183, 184, 185, 190, 192, 200, 204, 205, 207, 213, 217, 222, 223, 242, 243, 245, 246, 248, 250], "set_dimens": 1, "unit_system": [1, 170], "set_quantity_dimens": [1, 166], "set_global_dimens": 1, "set_scale_factor": 1, "set_quantity_scale_factor": [1, 166], "set_global_relative_scale_factor": [1, 170], "get_dimensional_expr": 1, "associ": [1, 7, 15, 32, 34, 49, 51, 52, 58, 59, 73, 74, 76, 80, 128, 130, 153, 161, 172, 173, 180, 181, 185, 186, 187, 188, 190, 192, 197, 205, 207, 210, 223, 237], "unitsystem": [1, 171], "dimension": [1, 31, 33, 35, 53, 63, 64, 65, 66, 67, 84, 87, 95, 102, 130, 137, 139, 149, 165, 167, 178, 179, 183, 184, 190, 192, 193, 196, 197, 215, 216, 218, 219, 223, 229, 250, 273], "_collect_factor_and_dimens": 1, "motiv": [1, 18], "emptyset": [1, 7, 31, 32, 81, 197, 216, 242, 273], "is_empti": [1, 7, 43], "none": [1, 7, 8, 14, 15, 18, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 101, 106, 107, 108, 109, 110, 113, 114, 132, 134, 136, 137, 143, 148, 153, 158, 160, 163, 165, 169, 170, 171, 173, 175, 176, 177, 181, 182, 183, 184, 186, 187, 188, 190, 192, 193, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 241, 242, 244, 268, 272, 273], "unknown": [1, 4, 7, 8, 18, 25, 51, 52, 95, 148, 195, 212, 213, 214, 215, 216, 235, 273], "empti": [1, 7, 27, 31, 32, 33, 34, 42, 46, 50, 51, 63, 66, 67, 68, 81, 82, 87, 91, 109, 127, 158, 171, 188, 192, 193, 197, 203, 204, 205, 207, 213, 215, 216, 228, 230, 235, 238, 267], "individu": [1, 7, 18, 51, 57, 62, 67, 68, 80, 82, 84, 87, 101, 128, 135, 153, 157, 182, 205, 213, 228, 268], "themselv": [1, 11, 15, 18, 29, 32, 43, 47, 49, 51, 78, 91, 124, 167, 187, 188, 192, 203, 217, 223, 232, 235, 238, 272], "But": [1, 2, 11, 12, 15, 18, 50, 51, 59, 65, 75, 82, 87, 91, 151, 152, 163, 168, 173, 184, 185, 190, 194, 204, 206, 207, 209, 210, 213, 215, 216, 222, 232, 235, 236, 244, 262, 264, 266, 267, 272], "exactli": [1, 2, 12, 14, 15, 18, 29, 35, 42, 51, 54, 55, 87, 93, 108, 128, 182, 207, 209, 213, 216, 218, 232, 235, 236, 262, 264, 266, 271, 272], "denest": [1, 51, 193, 208, 215, 235], "On": [1, 7, 9, 28, 44, 51, 53, 59, 78, 81, 91, 114, 168, 178, 187, 190, 191, 192, 193, 213, 215, 232, 236, 248, 250], "hand": [1, 5, 7, 14, 18, 32, 33, 43, 44, 51, 57, 59, 78, 81, 82, 87, 91, 94, 109, 113, 114, 127, 131, 135, 152, 155, 173, 178, 181, 182, 184, 187, 188, 190, 192, 195, 207, 216, 228, 230, 232, 236, 239, 248, 250, 266], "anoth": [1, 2, 4, 5, 7, 8, 12, 14, 15, 18, 29, 32, 33, 43, 48, 50, 51, 52, 53, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 76, 78, 84, 87, 91, 94, 95, 111, 152, 168, 170, 173, 176, 180, 181, 183, 185, 187, 188, 190, 192, 193, 194, 197, 198, 204, 205, 207, 213, 215, 216, 217, 229, 230, 236, 242, 245, 246, 250, 261, 264, 266, 267, 272, 273], "path": [1, 9, 13, 14, 42, 67, 73, 101, 122, 178, 180, 206, 209, 213, 216, 228, 229, 232, 233, 235, 238, 239, 240, 248], "particl": [1, 106, 108, 109, 114, 118, 119, 124, 125, 127, 130, 131, 139, 142, 149, 150, 161, 163, 166, 168, 180, 223], "rigidbodi": [1, 106, 109, 113, 116, 121, 122, 123, 124, 128, 130], "potential_energi": [1, 109, 123, 124, 128], "energi": [1, 103, 106, 109, 111, 114, 123, 124, 139, 164, 168, 178, 223, 248, 258], "setter": [1, 114, 130], "getter": [1, 51, 114, 130], "set_": 1, "fix": [1, 12, 14, 17, 33, 42, 44, 47, 49, 52, 59, 63, 80, 94, 95, 97, 106, 108, 111, 116, 130, 147, 152, 156, 159, 163, 168, 173, 176, 180, 181, 183, 187, 190, 192, 193, 194, 197, 203, 207, 215, 217, 235, 242, 243], "set_condit": 1, "And": [1, 2, 8, 12, 18, 22, 27, 42, 43, 50, 51, 52, 59, 76, 81, 82, 87, 90, 108, 135, 181, 183, 185, 193, 194, 197, 205, 209, 210, 216, 217, 236, 246, 272], "17749": 1, "side": [1, 2, 5, 7, 33, 42, 43, 51, 63, 67, 78, 87, 91, 94, 101, 109, 113, 127, 128, 131, 151, 152, 168, 173, 182, 184, 190, 192, 195, 197, 214, 216, 217, 221, 228, 230, 251, 262], "unpack": [1, 51, 82, 87, 235, 236], "expand": [1, 2, 5, 7, 14, 33, 53, 55, 56, 57, 59, 76, 78, 82, 101, 114, 116, 130, 144, 152, 155, 162, 163, 185, 187, 189, 190, 192, 193, 194, 200, 204, 206, 207, 209, 213, 216, 217, 221, 229, 236, 247, 253, 261, 266], "intermedi": [1, 23, 33, 34, 74, 82, 114, 116, 121, 147, 157, 165, 166, 173, 176, 180, 216, 230, 269], "befor": [1, 2, 7, 8, 12, 14, 18, 20, 33, 42, 43, 45, 47, 51, 52, 53, 59, 79, 82, 87, 91, 93, 94, 95, 105, 110, 114, 116, 117, 118, 121, 122, 127, 130, 132, 163, 172, 177, 181, 185, 187, 192, 193, 197, 198, 204, 205, 209, 210, 213, 215, 216, 217, 224, 228, 231, 235, 236, 245, 265, 266, 267, 272], "satisfi": [1, 7, 11, 15, 28, 29, 31, 34, 39, 42, 47, 51, 52, 56, 59, 61, 74, 76, 80, 81, 87, 91, 110, 127, 147, 152, 184, 185, 190, 192, 193, 197, 203, 204, 205, 210, 213, 214, 215, 216, 217, 223, 267, 272], "emul": [1, 209, 216, 218, 236], "is_deriv": [1, 51], "as_finite_differ": [1, 31, 51, 262], "17881": 1, "get_matrix": [1, 223], "__getitem__": [1, 51, 82, 222], "__iter__": [1, 43, 51, 209], "_components_data_full_destroi": 1, "__pow__": [1, 82, 188, 194], "flaw": 1, "replace_with_arrai": [1, 223, 224], "cach": [1, 7, 56, 76, 184, 193, 197, 226, 231, 232, 253], "actual": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 32, 33, 34, 40, 42, 49, 51, 52, 59, 63, 76, 78, 80, 84, 87, 91, 101, 105, 114, 116, 125, 126, 127, 177, 184, 187, 192, 197, 205, 207, 209, 210, 213, 216, 224, 228, 229, 232, 233, 235, 236, 266], "safe": [1, 91, 187, 193, 215, 221, 262], "squar": [1, 2, 7, 25, 28, 33, 42, 51, 52, 57, 67, 68, 76, 78, 82, 83, 87, 90, 91, 94, 101, 103, 125, 126, 149, 165, 173, 182, 186, 188, 189, 190, 192, 193, 194, 197, 205, 208, 210, 213, 216, 217, 266], "jordan": [1, 76, 82, 87, 195, 215, 216], "block": [1, 12, 14, 33, 40, 42, 52, 82, 86, 87, 113, 114, 116, 119, 173, 181, 186, 210, 236, 245], "band": [1, 82, 90], "eigenvalu": [1, 82, 87, 114, 116, 157, 160, 266], "elif": [1, 7, 8, 18], "lower": [1, 7, 14, 28, 31, 33, 42, 43, 50, 51, 53, 59, 60, 62, 67, 68, 78, 82, 83, 84, 87, 99, 104, 108, 163, 176, 182, 184, 186, 188, 190, 193, 197, 206, 207, 209, 213, 222, 223, 232, 242, 262, 270], "inspect": [1, 7, 87, 192, 203, 234, 236, 260], "getsourc": [1, 236, 240], "obj": [1, 7, 14, 51, 188, 193, 197, 231], "ipython": [1, 2, 11, 14, 20, 79, 130, 177, 236, 240, 241, 270, 271], "jupyt": [1, 11, 18, 236, 240], "absolut": [1, 9, 29, 30, 33, 50, 51, 57, 66, 76, 78, 82, 87, 103, 161, 188, 192, 193, 207, 209, 212, 217, 228, 250, 251, 252], "natur": [1, 2, 7, 12, 25, 29, 33, 34, 42, 51, 52, 56, 57, 85, 91, 114, 165, 167, 168, 184, 187, 188, 190, 192, 194, 197, 206, 210, 216, 217, 235, 251, 267, 272], "time": [1, 2, 5, 7, 8, 9, 11, 12, 15, 24, 28, 29, 33, 42, 43, 47, 51, 52, 56, 59, 74, 76, 81, 82, 87, 88, 90, 91, 92, 93, 98, 99, 101, 105, 109, 110, 113, 114, 116, 118, 121, 122, 124, 125, 126, 127, 128, 130, 131, 137, 147, 152, 160, 161, 165, 166, 168, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 190, 191, 192, 193, 194, 196, 197, 204, 205, 206, 207, 209, 213, 215, 217, 226, 228, 229, 234, 235, 236, 248, 250, 260, 262, 266, 267, 268], "sum": [1, 5, 7, 33, 40, 43, 50, 51, 54, 56, 59, 64, 66, 74, 76, 78, 80, 81, 82, 84, 87, 91, 111, 125, 142, 146, 149, 157, 160, 162, 163, 182, 184, 185, 187, 188, 192, 193, 194, 197, 199, 200, 202, 204, 206, 207, 209, 210, 213, 215, 216, 217, 218, 219, 221, 223, 232, 235, 253, 272], "meter": [1, 94, 95, 134, 137, 166, 168, 169, 170], "second": [1, 2, 5, 7, 8, 12, 15, 18, 24, 28, 31, 33, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 64, 65, 67, 78, 87, 91, 92, 94, 95, 99, 101, 102, 105, 106, 108, 109, 114, 118, 121, 123, 124, 126, 128, 134, 136, 137, 140, 144, 149, 152, 157, 158, 160, 161, 166, 168, 170, 172, 173, 174, 180, 181, 183, 186, 187, 190, 191, 192, 193, 197, 199, 207, 209, 210, 213, 215, 216, 217, 218, 219, 235, 236, 242, 244, 245, 246, 258, 261, 266, 267, 268], "si": [1, 18, 59, 75, 76, 136, 165, 166, 168, 169, 170, 197], "cg": [1, 142, 160], "At": [1, 7, 11, 18, 31, 47, 57, 59, 78, 91, 94, 95, 105, 168, 172, 181, 192, 207, 236], "aris": [1, 7, 8, 51, 56, 76, 78, 160, 181, 187, 192], "scale": [1, 60, 61, 62, 66, 67, 68, 79, 94, 143, 164, 166, 168, 170, 171, 177, 181, 183, 200, 217, 248, 250], "factor": [1, 2, 11, 34, 42, 43, 50, 51, 52, 55, 56, 57, 59, 76, 78, 87, 91, 94, 101, 130, 132, 140, 144, 147, 159, 163, 168, 169, 170, 184, 187, 188, 189, 191, 192, 193, 200, 206, 207, 209, 210, 215, 217, 221, 232, 245, 248, 266, 268], "while": [1, 2, 7, 12, 14, 18, 19, 22, 32, 33, 34, 42, 43, 44, 47, 50, 51, 52, 53, 55, 56, 61, 65, 67, 75, 81, 82, 87, 91, 92, 93, 94, 106, 110, 114, 118, 127, 147, 168, 173, 178, 184, 192, 195, 197, 213, 216, 228, 230, 232, 235, 250, 261, 267, 268], "kilomet": [1, 169, 170], "1000": [1, 2, 33, 35, 51, 52, 55, 84, 91, 130, 168, 169, 170, 182, 196, 197, 206], "rel": [1, 14, 15, 32, 33, 41, 42, 43, 44, 48, 49, 50, 52, 55, 62, 76, 91, 106, 108, 111, 119, 127, 128, 135, 162, 173, 176, 180, 181, 184, 186, 187, 190, 192, 205, 207, 212, 215, 217, 228, 235, 245, 246, 250, 266], "being": [1, 2, 7, 8, 12, 15, 29, 31, 33, 42, 43, 49, 50, 51, 52, 57, 59, 61, 63, 64, 67, 68, 76, 81, 82, 87, 88, 91, 94, 95, 97, 105, 113, 114, 116, 127, 128, 130, 131, 159, 168, 175, 178, 180, 181, 182, 183, 184, 186, 187, 192, 193, 194, 197, 206, 207, 209, 210, 213, 214, 215, 216, 217, 223, 226, 232, 233, 235, 236, 238, 242, 246, 250, 266, 268], "manag": [1, 12, 20, 27, 28, 93, 143, 190, 209, 223, 226, 228, 233], "dimensionsystem": [1, 165], "14318": 1, "duplic": [1, 2, 42, 45, 52, 57, 59, 87, 91, 205, 213, 235, 265], "common": [1, 2, 3, 7, 8, 14, 15, 18, 21, 22, 23, 28, 31, 33, 42, 43, 51, 52, 57, 62, 65, 68, 78, 84, 86, 87, 91, 92, 99, 101, 106, 108, 110, 117, 124, 128, 130, 135, 168, 173, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199, 205, 206, 207, 208, 210, 213, 217, 229, 230, 233, 235, 236, 248, 250, 253, 256, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272], "flatten": [1, 32, 51, 187, 219, 224, 235, 236], "neither": [1, 7, 8, 29, 51, 137, 158, 183, 193, 204, 205, 206, 213, 223, 236, 242, 250, 272], "regardless": [1, 12, 14, 18, 43, 51, 78, 91, 190, 205, 209, 235, 245, 250, 272], "much": [1, 5, 7, 8, 12, 14, 18, 32, 33, 36, 47, 55, 59, 73, 76, 78, 127, 171, 172, 180, 181, 182, 184, 187, 190, 193, 204, 207, 209, 213, 214, 215, 216, 230, 232, 264, 266, 272], "less": [1, 5, 14, 15, 29, 33, 34, 42, 43, 50, 51, 52, 55, 56, 57, 59, 65, 66, 67, 82, 87, 91, 99, 101, 114, 116, 163, 187, 190, 192, 193, 206, 207, 209, 210, 213, 215, 216, 217, 228, 230], "polymorph": 1, "input": [1, 2, 14, 15, 18, 21, 25, 31, 34, 47, 51, 52, 54, 55, 56, 57, 65, 78, 80, 81, 87, 91, 93, 98, 99, 101, 105, 110, 113, 114, 116, 117, 118, 127, 130, 131, 136, 159, 173, 175, 176, 187, 188, 190, 193, 194, 195, 196, 197, 198, 205, 209, 210, 211, 213, 215, 217, 219, 229, 230, 232, 233, 235, 236, 238, 261, 267, 268, 272], "17": [1, 14, 40, 42, 43, 51, 52, 55, 56, 57, 61, 64, 67, 76, 87, 91, 101, 187, 188, 192, 193, 196, 197, 204, 206, 210, 213, 218, 232, 236, 266], "As": [1, 4, 5, 8, 14, 18, 24, 33, 42, 43, 51, 52, 55, 56, 57, 59, 75, 76, 81, 87, 90, 91, 93, 113, 114, 116, 118, 127, 128, 163, 168, 180, 184, 185, 187, 188, 190, 194, 196, 197, 204, 205, 207, 213, 216, 217, 235, 236, 245, 246, 261, 262, 264, 266, 267, 268, 271, 272], "2d": [1, 11, 64, 65, 67, 77, 94, 95, 97, 141, 173, 183, 197, 210, 222, 266], "3d": [1, 11, 25, 35, 64, 65, 94, 141, 164, 178, 183, 245, 247, 248, 249, 250], "anymor": [1, 183], "effect": [1, 11, 14, 18, 20, 42, 44, 51, 68, 76, 78, 82, 87, 94, 114, 116, 127, 135, 163, 173, 183, 187, 190, 194, 196, 213, 264], "temporarili": [1, 51], "substitut": [1, 2, 5, 8, 9, 33, 51, 52, 57, 59, 76, 78, 87, 92, 93, 101, 109, 110, 114, 116, 118, 127, 152, 161, 163, 166, 173, 175, 176, 194, 195, 198, 199, 204, 207, 209, 210, 213, 214, 215, 216, 236, 244, 263, 264], "term": [1, 2, 5, 7, 15, 18, 33, 42, 51, 52, 53, 55, 56, 57, 59, 70, 74, 75, 76, 78, 81, 82, 87, 91, 95, 99, 101, 107, 109, 116, 118, 121, 124, 125, 127, 128, 142, 147, 159, 160, 163, 165, 168, 173, 175, 178, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 221, 222, 235, 242, 244, 248, 253, 262, 264, 266, 267, 272], "point3d": [1, 64, 65, 66, 136], "p1": [1, 34, 42, 43, 47, 50, 61, 63, 64, 65, 66, 67, 101, 106, 108, 118, 130, 132, 176, 183, 187, 188, 190, 194, 206, 217, 218], "p2": [1, 8, 42, 43, 50, 61, 63, 64, 65, 66, 67, 101, 106, 108, 130, 176, 183, 187, 188, 190, 194, 206, 217], "run": [2, 5, 7, 9, 12, 14, 15, 16, 18, 19, 34, 42, 43, 45, 51, 52, 76, 87, 92, 93, 109, 116, 130, 163, 177, 183, 184, 197, 207, 209, 213, 214, 215, 225, 229, 231, 232, 235, 236, 260, 264, 271], "under": [2, 7, 8, 9, 11, 12, 14, 19, 27, 28, 30, 31, 33, 34, 41, 42, 47, 49, 59, 69, 76, 78, 80, 87, 91, 93, 94, 95, 132, 158, 182, 184, 185, 192, 193, 197, 204, 205, 207, 210, 213, 215, 216, 217, 223, 226, 266, 272], "program": [2, 7, 11, 15, 33, 35, 43, 130, 168, 182, 230, 232, 264, 266, 270, 272], "languag": [2, 5, 11, 15, 18, 19, 33, 57, 87, 93, 105, 114, 130, 197, 202, 217, 229, 230, 264, 266, 268, 270, 272], "some": [2, 5, 7, 8, 9, 11, 12, 14, 18, 20, 24, 29, 32, 33, 34, 39, 42, 43, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 63, 67, 76, 78, 80, 81, 82, 84, 87, 91, 92, 93, 99, 102, 105, 106, 111, 113, 114, 115, 116, 117, 118, 119, 124, 125, 127, 128, 131, 143, 148, 152, 160, 163, 168, 169, 172, 174, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 246, 248, 252, 261, 262, 264, 266, 267, 268, 270, 271, 272], "behav": [2, 29, 31, 51, 52, 57, 59, 91, 193, 205, 209, 215, 218, 224, 268], "independ": [2, 18, 29, 31, 33, 42, 50, 51, 53, 59, 68, 76, 78, 80, 87, 101, 109, 110, 114, 116, 118, 125, 127, 161, 168, 178, 183, 185, 187, 192, 193, 199, 200, 207, 209, 210, 213, 214, 215, 216, 217, 223, 228, 229, 248, 266, 267], "mapl": [2, 78, 213, 260, 266], "mathematica": [2, 33, 43, 93, 260, 266, 268], "encount": [2, 5, 15, 51, 78, 87, 155, 185, 190, 193, 215, 216, 230, 242, 268], "faq": 2, "tutori": [2, 5, 6, 9, 15, 20, 67, 114, 130, 185, 196, 197, 211, 213, 236, 264, 267, 269, 270, 271, 272, 273], "remaind": [2, 50, 51, 52, 91, 185, 187, 188, 191, 193, 213], "doc": [2, 11, 12, 14, 15, 16, 23, 33, 42, 50, 51, 67, 79, 128, 165, 187, 189, 210, 213, 228, 229, 231, 233, 235, 242, 246], "offici": [2, 9, 20, 51, 105, 130, 172, 181, 216, 236, 270], "familiar": [2, 18, 78, 114, 128, 147, 194, 262, 264, 270], "java": 2, "4": [2, 3, 5, 7, 8, 11, 15, 18, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 73, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 107, 114, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 130, 131, 132, 135, 139, 142, 147, 157, 158, 160, 161, 162, 163, 164, 166, 172, 173, 174, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 222, 223, 228, 229, 232, 235, 236, 242, 244, 245, 246, 248, 250, 251, 261, 262, 264, 266, 267, 268, 272, 273], "minut": [2, 105, 116, 172], "doctest": [2, 12, 14, 15, 18, 44, 59, 87, 91, 116, 152, 163, 187, 193, 213, 228, 231, 233, 271], "skip": [2, 9, 11, 12, 14, 32, 35, 51, 82, 87, 91, 173, 192, 196, 197, 199, 213, 215, 226, 228, 262, 270, 271], "test": [2, 6, 8, 12, 14, 15, 16, 18, 28, 29, 31, 32, 33, 38, 42, 43, 50, 51, 52, 58, 61, 66, 76, 82, 84, 87, 91, 143, 152, 156, 157, 158, 166, 181, 187, 188, 189, 190, 192, 194, 205, 207, 210, 213, 214, 215, 216, 226, 229, 230, 231, 232, 233, 235, 236, 238, 252, 255, 260, 264, 266, 267], "eq": [2, 7, 14, 18, 29, 31, 33, 57, 61, 64, 68, 76, 81, 166, 183, 184, 188, 193, 195, 197, 199, 203, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 229, 230, 236, 242, 264, 266, 273], "assum": [2, 4, 7, 11, 14, 18, 28, 33, 34, 35, 40, 42, 50, 51, 52, 53, 57, 59, 61, 68, 69, 76, 78, 87, 91, 94, 101, 113, 114, 120, 125, 126, 127, 128, 130, 136, 158, 162, 163, 173, 176, 178, 184, 185, 187, 190, 193, 195, 197, 204, 205, 207, 209, 210, 213, 214, 216, 217, 221, 222, 223, 230, 235, 238, 244, 246, 250, 265, 267, 270, 272, 273], "zero": [2, 7, 8, 12, 18, 25, 28, 30, 33, 41, 42, 43, 47, 50, 54, 55, 56, 57, 59, 61, 65, 66, 67, 76, 78, 80, 81, 82, 84, 86, 87, 90, 91, 93, 94, 100, 101, 108, 111, 114, 116, 119, 122, 125, 126, 130, 135, 157, 161, 163, 165, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 195, 197, 200, 204, 205, 207, 209, 210, 213, 214, 215, 216, 217, 218, 233, 235, 236, 245, 247, 248, 267, 273], "subtract": [2, 33, 43, 51, 55, 66, 91, 101, 108, 165, 185, 186, 187, 188, 190, 192, 193, 267, 272], "proper": [2, 42, 51, 78, 91, 105, 114, 172, 187, 188, 192, 197, 205, 213, 218, 229, 230, 248, 268], "abc": [2, 4, 12, 14, 18, 25, 26, 27, 28, 29, 30, 31, 33, 40, 42, 44, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 74, 75, 76, 78, 79, 81, 82, 84, 87, 90, 92, 99, 101, 103, 134, 136, 138, 139, 144, 161, 163, 164, 184, 186, 188, 190, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 229, 230, 231, 232, 233, 235, 236, 238, 242, 244, 245, 246, 251, 253, 264, 267, 271], "import": [2, 4, 5, 7, 8, 11, 12, 16, 18, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 261, 262, 264, 266, 267, 268, 270, 271, 272, 273], "print": [2, 5, 7, 8, 10, 12, 14, 15, 20, 26, 27, 28, 29, 31, 32, 34, 35, 40, 42, 43, 50, 51, 52, 55, 56, 57, 59, 78, 80, 81, 84, 87, 88, 91, 92, 93, 95, 101, 109, 114, 116, 124, 129, 135, 143, 156, 157, 161, 163, 173, 179, 181, 183, 186, 187, 188, 192, 193, 203, 204, 206, 207, 209, 213, 215, 222, 224, 228, 230, 235, 236, 238, 240, 242, 245, 252, 254, 260, 262, 263, 264, 265, 266, 267, 268, 272], "1": [2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 142, 145, 146, 147, 148, 149, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 240, 242, 244, 245, 246, 248, 251, 258, 261, 262, 264, 266, 267, 268, 271, 272, 273], "2": [2, 3, 4, 5, 7, 8, 15, 18, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 116, 117, 118, 119, 121, 122, 123, 125, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 226, 228, 229, 230, 231, 232, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 261, 262, 264, 266, 267, 268, 271, 272, 273], "fals": [2, 7, 8, 15, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 76, 78, 79, 81, 82, 83, 84, 87, 88, 91, 93, 94, 95, 99, 101, 103, 104, 107, 109, 110, 111, 114, 116, 117, 121, 122, 123, 125, 126, 127, 128, 131, 135, 147, 148, 152, 155, 160, 161, 162, 163, 166, 170, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 242, 244, 264, 267, 268, 271], "simplifi": [2, 5, 7, 8, 12, 14, 18, 26, 28, 30, 31, 50, 51, 53, 55, 56, 57, 59, 63, 68, 73, 76, 78, 81, 82, 83, 84, 87, 94, 101, 102, 107, 110, 117, 118, 121, 122, 123, 127, 135, 142, 147, 162, 163, 170, 173, 178, 184, 192, 194, 196, 198, 203, 204, 205, 206, 207, 210, 213, 214, 215, 216, 217, 231, 233, 236, 245, 247, 253, 254, 261, 263, 264, 266, 267, 268], "trigsimp": [2, 25, 51, 87, 108, 114, 122, 173, 206, 245], "equat": [2, 5, 15, 21, 31, 33, 47, 50, 51, 53, 57, 59, 61, 64, 65, 69, 73, 74, 75, 76, 79, 82, 87, 94, 101, 103, 105, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 123, 124, 129, 130, 131, 132, 136, 167, 172, 176, 177, 180, 181, 182, 183, 184, 189, 190, 191, 192, 195, 196, 197, 203, 207, 209, 211, 212, 214, 222, 242, 246, 247, 251, 262, 263, 266], "reduc": [2, 8, 15, 26, 28, 30, 34, 47, 51, 52, 54, 56, 57, 59, 66, 67, 76, 78, 87, 91, 101, 102, 127, 145, 163, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 235, 268], "0": [2, 5, 7, 8, 12, 14, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 139, 142, 147, 148, 149, 152, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 231, 232, 233, 235, 236, 237, 242, 243, 244, 245, 246, 247, 248, 251, 261, 262, 264, 266, 267, 268, 271, 272, 273], "co": [2, 14, 18, 22, 25, 31, 33, 50, 51, 53, 55, 56, 58, 59, 60, 61, 64, 65, 67, 69, 73, 74, 75, 76, 78, 82, 87, 91, 93, 106, 107, 108, 114, 116, 117, 119, 121, 122, 123, 127, 130, 135, 137, 173, 175, 176, 178, 180, 181, 182, 183, 187, 190, 193, 194, 196, 197, 198, 199, 200, 204, 205, 206, 207, 209, 213, 215, 216, 217, 218, 224, 236, 242, 243, 244, 245, 246, 251, 261, 262, 264, 266, 272, 273], "sai": [2, 5, 7, 12, 15, 34, 41, 50, 51, 52, 80, 105, 109, 114, 124, 130, 168, 180, 181, 184, 185, 186, 190, 192, 196, 197, 204, 207, 210, 213, 215, 216, 217, 236, 252, 261, 266, 272], "unequ": [2, 94, 197], "rememb": [2, 12, 14, 18, 81, 87, 102, 105, 130, 180, 181, 197, 209, 215, 218, 236, 267, 272], "fill": [2, 6, 42, 52, 82, 84, 87, 90, 163, 183, 228, 231, 235, 238, 268], "alter": [2, 34, 42, 51, 173, 187, 197, 199, 216], "afterward": [2, 33, 51, 111, 118], "liter": [2, 14, 18, 33, 41, 51, 79, 81, 93, 163, 170, 209], "still": [2, 7, 11, 12, 14, 15, 18, 20, 24, 32, 43, 50, 51, 52, 59, 63, 78, 82, 87, 114, 163, 181, 183, 184, 185, 190, 192, 197, 204, 206, 207, 209, 213, 215, 216, 222, 228, 235, 248, 268], "quantiti": [2, 43, 51, 56, 59, 63, 68, 95, 105, 109, 122, 128, 142, 165, 167, 171, 178, 180, 181, 192, 209, 217, 245, 249, 250, 258], "set": [2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 24, 27, 28, 31, 32, 33, 34, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 66, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 101, 105, 109, 113, 114, 116, 117, 118, 123, 125, 126, 127, 130, 131, 147, 153, 158, 163, 165, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 190, 192, 193, 196, 197, 198, 199, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 221, 222, 223, 226, 228, 229, 230, 231, 235, 236, 242, 244, 246, 252, 255, 261, 263, 272], "simultan": [2, 51, 64, 82, 91, 183, 206], "string": [2, 11, 12, 14, 15, 18, 21, 26, 32, 33, 35, 40, 51, 52, 53, 54, 55, 58, 64, 74, 79, 80, 81, 84, 87, 91, 93, 94, 97, 99, 105, 106, 108, 111, 134, 143, 147, 157, 161, 165, 171, 172, 173, 176, 177, 178, 183, 186, 188, 192, 197, 198, 204, 209, 213, 217, 218, 221, 222, 223, 228, 229, 230, 235, 236, 238, 240, 242, 243, 245, 263, 264, 267, 271], "refer": [2, 5, 8, 11, 12, 13, 15, 18, 20, 21, 27, 28, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 45, 49, 52, 54, 56, 57, 59, 61, 66, 67, 68, 71, 73, 77, 79, 80, 81, 86, 88, 92, 94, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 116, 124, 125, 128, 130, 131, 132, 133, 134, 136, 140, 142, 144, 145, 146, 149, 151, 152, 160, 161, 163, 167, 172, 173, 174, 175, 176, 178, 180, 187, 189, 194, 197, 199, 200, 202, 205, 208, 209, 211, 213, 214, 215, 217, 223, 232, 234, 235, 236, 238, 242, 245, 246, 250, 253, 256, 257, 258, 259, 260, 264, 268, 269, 272], "object": [2, 3, 6, 7, 8, 11, 12, 14, 15, 18, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 50, 51, 53, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 76, 78, 81, 82, 84, 85, 87, 92, 93, 94, 95, 99, 101, 102, 105, 106, 109, 110, 111, 113, 114, 118, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 146, 147, 149, 157, 158, 162, 163, 165, 166, 169, 170, 172, 173, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 197, 199, 200, 203, 204, 205, 206, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 228, 229, 230, 231, 232, 235, 236, 239, 240, 244, 245, 246, 251, 252, 261, 262, 264, 266, 267, 268, 271, 272], "var": [2, 31, 33, 50, 55, 56, 74, 78, 81, 87, 101, 173, 183, 192, 196, 197, 209, 210, 236, 273], "rate": [2, 116, 180, 217, 248, 262], "short_lif": 2, "80": [2, 9, 12, 14, 18, 31, 42, 51, 54, 78, 87, 91, 94, 95, 99, 193, 196, 213, 217, 233, 235], "haven": 2, "160": [2, 94, 191], "need": [2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 22, 24, 25, 27, 28, 31, 32, 33, 36, 42, 43, 47, 49, 50, 51, 52, 53, 57, 59, 62, 66, 67, 74, 75, 76, 78, 79, 82, 87, 91, 92, 93, 95, 101, 105, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 131, 132, 143, 147, 155, 161, 166, 167, 172, 173, 177, 180, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 235, 238, 242, 245, 247, 248, 251, 261, 262, 264, 267, 268, 270, 272], "indent": [2, 14, 238], "bodi": [2, 33, 76, 93, 104, 105, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 124, 125, 130, 131, 166, 172, 173, 176, 180, 181, 242, 243, 249], "inform": [2, 4, 7, 8, 9, 11, 12, 14, 15, 28, 29, 32, 33, 34, 37, 42, 43, 49, 51, 52, 56, 59, 63, 76, 78, 80, 84, 87, 92, 95, 106, 107, 109, 113, 114, 116, 124, 125, 127, 128, 130, 131, 158, 163, 168, 172, 173, 177, 181, 183, 187, 192, 193, 197, 198, 204, 207, 209, 210, 211, 215, 216, 217, 221, 222, 223, 228, 229, 230, 231, 232, 242, 246, 248, 272], "ctimesd": 2, "circular": [2, 7, 99, 135, 190], "relationship": [2, 7, 33, 51, 56, 58, 78, 91, 147, 173, 178, 181, 187, 215], "runtimeerror": [2, 31, 205, 216, 235], "call": [2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 22, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 40, 41, 42, 43, 49, 51, 52, 54, 55, 56, 58, 59, 61, 66, 67, 69, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 101, 105, 114, 116, 118, 127, 128, 153, 155, 158, 163, 168, 173, 178, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 219, 221, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 244, 245, 248, 250, 262, 264, 266, 267, 268, 271, 272, 273], "compileflag": [2, 228], "glob": [2, 228], "recurs": [2, 4, 7, 18, 31, 51, 56, 76, 78, 81, 82, 91, 116, 183, 190, 193, 194, 197, 198, 201, 202, 204, 209, 215, 216, 221, 226, 228, 232, 233, 235, 263, 272], "depth": [2, 3, 14, 15, 17, 42, 51, 116, 183, 184, 197, 259], "exceed": [2, 116], "yet": [2, 7, 12, 13, 18, 26, 28, 31, 32, 55, 56, 78, 127, 143, 184, 187, 188, 192, 194, 196, 205, 213, 216, 262], "stdin": [2, 231, 233], "nameerror": [2, 79, 231, 264], "isympi": [2, 10, 11, 79], "command": [2, 9, 11, 13, 14, 20, 33, 55, 79, 114, 125, 130, 177, 183, 197, 228, 229, 271], "give": [2, 7, 8, 11, 12, 14, 18, 26, 28, 33, 34, 40, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 59, 61, 63, 64, 66, 67, 75, 76, 78, 79, 81, 84, 87, 90, 91, 92, 94, 101, 114, 130, 142, 157, 158, 160, 161, 165, 166, 168, 169, 171, 173, 176, 178, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 197, 198, 199, 200, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 228, 229, 230, 235, 245, 250, 264, 265, 267, 272, 273], "default": [2, 7, 11, 12, 14, 15, 18, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 41, 42, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 73, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 95, 99, 101, 103, 105, 106, 107, 108, 109, 110, 114, 127, 136, 153, 155, 158, 160, 161, 163, 169, 172, 173, 175, 176, 177, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 222, 223, 228, 229, 230, 232, 233, 235, 236, 238, 242, 261, 262, 266, 268, 271, 272], "__future__": [2, 5, 264, 271], "divis": [2, 18, 51, 87, 91, 165, 184, 187, 188, 189, 190, 193, 195, 197, 213, 215, 228, 236, 264, 267, 271], "cl": [2, 7, 18, 33, 42, 51, 78, 82, 163, 176, 188, 192, 213, 222, 231, 235, 247, 262, 271, 273], "dir": [2, 51, 94, 199, 204, 235], "u": [2, 25, 31, 32, 42, 50, 51, 52, 54, 65, 68, 73, 76, 78, 84, 87, 91, 108, 109, 110, 113, 114, 116, 118, 121, 125, 127, 128, 130, 131, 136, 147, 152, 176, 178, 180, 183, 185, 186, 190, 192, 197, 207, 209, 210, 213, 214, 215, 216, 217, 222, 248], "__builtins__": 2, "__doc__": [2, 14], "__file__": [2, 239], "__name__": [2, 197, 239], "__package__": 2, "_greek": 2, "_latin": 2, "alpha": [2, 15, 42, 51, 59, 78, 80, 135, 139, 142, 160, 176, 180, 181, 182, 188, 190, 192, 193, 196, 197, 209, 213, 217], "beta": [2, 14, 33, 42, 51, 58, 78, 160, 173, 182, 192, 194, 197, 213, 217], "chi": [2, 59, 76, 135, 197, 207, 217, 223], "eta": [2, 59, 76, 192, 197, 213, 214, 217], "gamma": [2, 14, 15, 18, 50, 51, 53, 55, 56, 58, 76, 78, 104, 130, 160, 181, 182, 197, 207, 209, 213, 217, 258, 272], "iota": [2, 197], "kappa": [2, 197, 217], "mu": [2, 59, 76, 91, 102, 104, 134, 197, 217, 223], "nu": [2, 15, 59, 78, 91, 164, 185, 197, 209, 217, 223, 266], "omega": [2, 33, 34, 42, 76, 91, 106, 111, 113, 128, 131, 137, 139, 164, 173, 176, 177, 180, 182, 197, 204, 217], "omicron": [2, 197], "phi": [2, 42, 51, 52, 56, 59, 76, 80, 87, 91, 103, 130, 137, 146, 148, 182, 184, 192, 197, 213, 242, 251], "psi": [2, 59, 76, 135, 146, 147, 153, 161, 192, 197, 223], "rho": [2, 53, 76, 87, 91, 117, 157, 197, 217, 223, 251], "sigma": [2, 43, 74, 76, 82, 87, 197, 200, 217], "tau": [2, 33, 76, 78, 87, 192, 197, 213], "theta": [2, 51, 53, 57, 59, 76, 79, 87, 93, 103, 113, 131, 135, 173, 181, 182, 188, 192, 197, 200, 205, 216, 217, 242, 243, 246, 248, 251], "upsilon": [2, 197], "xi": [2, 18, 53, 76, 197, 213, 214, 215], "zeta": [2, 50, 51, 55, 56, 58, 188, 192, 197, 204, 217], "assumpt": [2, 6, 8, 14, 21, 26, 27, 29, 30, 32, 33, 42, 43, 45, 50, 53, 55, 57, 58, 78, 81, 82, 87, 88, 101, 105, 130, 170, 175, 186, 197, 205, 206, 209, 213, 215, 216, 222, 230, 235, 252, 253, 272], "lastli": [2, 78, 95, 131, 213], "those": [2, 7, 8, 11, 14, 24, 29, 32, 33, 34, 42, 43, 49, 50, 51, 52, 55, 64, 65, 76, 78, 81, 87, 90, 91, 105, 116, 122, 136, 160, 172, 175, 177, 180, 181, 183, 187, 188, 190, 192, 193, 195, 196, 197, 203, 205, 209, 213, 214, 215, 216, 217, 223, 226, 228, 232, 235, 242, 244, 264, 266, 272], "imaginari": [2, 7, 12, 14, 18, 25, 28, 30, 51, 55, 57, 59, 82, 130, 187, 188, 193, 197, 198, 205, 209, 216], "unit": [2, 18, 25, 28, 32, 51, 52, 56, 64, 65, 66, 78, 87, 91, 94, 99, 101, 103, 104, 114, 128, 130, 139, 164, 165, 166, 170, 172, 173, 178, 181, 183, 185, 188, 190, 192, 193, 195, 197, 205, 207, 210, 216, 218, 242, 243, 245, 250, 251, 258], "base": [2, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 27, 28, 31, 33, 34, 40, 41, 42, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 62, 64, 67, 74, 78, 79, 80, 81, 83, 84, 87, 91, 92, 98, 106, 108, 114, 116, 130, 131, 132, 141, 143, 147, 148, 152, 158, 159, 161, 163, 165, 168, 169, 171, 173, 175, 177, 178, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 201, 204, 205, 206, 207, 209, 210, 211, 213, 215, 217, 221, 222, 223, 228, 229, 230, 231, 232, 233, 235, 236, 237, 242, 244, 245, 248, 259, 267, 272], "logarithm": [2, 15, 25, 31, 33, 51, 52, 57, 58, 76, 78, 87, 91, 188, 190, 194, 197, 207, 209, 216, 217, 263], "sympifi": [2, 7, 8, 33, 55, 61, 81, 128, 136, 161, 163, 173, 174, 187, 188, 253, 261, 267], "evalf": [2, 7, 11, 14, 33, 50, 55, 56, 57, 59, 70, 73, 74, 82, 87, 93, 114, 116, 130, 145, 188, 193, 204, 205, 209, 217, 229, 236, 253, 263], "log": [2, 14, 15, 18, 20, 25, 31, 33, 42, 50, 51, 55, 56, 58, 59, 69, 73, 75, 76, 78, 82, 87, 91, 183, 188, 197, 199, 204, 207, 209, 213, 216, 217, 224, 262, 272, 273], "hold": [2, 18, 28, 32, 42, 47, 51, 52, 53, 57, 59, 73, 76, 87, 90, 93, 101, 103, 108, 110, 111, 128, 159, 193, 207, 209, 213, 217, 230, 272], "ask": [2, 4, 7, 8, 11, 14, 27, 28, 29, 30, 51, 63, 76, 114, 168, 184, 203, 209, 216, 235, 264], "mnemon": [2, 206, 235], "osineq": 2, "Or": [2, 8, 9, 15, 42, 51, 52, 53, 59, 76, 81, 91, 111, 184, 194, 196, 197, 209, 216, 217, 228, 236, 248, 267, 270], "lowercas": [2, 213, 228, 262], "letter": [2, 15, 24, 44, 51, 52, 91, 163, 197, 235, 262, 264], "prevent": [2, 12, 33, 51, 88, 91, 105, 186, 188, 193, 197, 209, 217, 226, 233, 263], "overrid": [2, 33, 51, 60, 61, 67, 93, 161, 197, 222, 229, 230, 235, 236], "care": [2, 8, 18, 42, 51, 59, 78, 87, 94, 105, 114, 127, 173, 181, 187, 192, 209, 210, 213, 215, 216, 221, 224, 229, 261, 264, 266], "notic": [2, 18, 42, 43, 49, 51, 87, 151, 172, 187, 207, 223, 224, 235, 236, 264, 266, 267, 272], "warn": [2, 3, 12, 14, 18, 51, 52, 66, 93, 173, 181, 185, 213, 215, 226, 228, 230, 234, 235, 260, 268], "No": [2, 11, 14, 15, 32, 51, 59, 66, 81, 91, 102, 114, 158, 183, 193, 199, 200, 209, 210, 215, 216, 217, 222, 226, 232, 233, 235, 261, 273], "5": [2, 3, 7, 15, 18, 22, 25, 27, 28, 29, 31, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 99, 101, 103, 104, 106, 111, 114, 116, 117, 121, 122, 123, 124, 125, 132, 136, 157, 158, 161, 163, 170, 172, 174, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 222, 223, 228, 229, 235, 236, 242, 244, 246, 248, 250, 251, 261, 262, 264, 267, 268, 271, 272], "15": [2, 14, 18, 31, 37, 40, 42, 47, 49, 51, 52, 54, 55, 56, 59, 61, 64, 65, 67, 68, 76, 78, 81, 82, 83, 87, 88, 91, 94, 136, 182, 183, 185, 186, 187, 188, 192, 193, 194, 196, 197, 199, 203, 204, 206, 209, 210, 214, 215, 216, 217, 218, 235, 261, 262, 267, 268], "reimport": 2, "restor": [2, 187, 209], "everyth": [2, 12, 15, 18, 33, 51, 53, 59, 78, 85, 103, 127, 159, 160, 183, 197, 267, 271], "__": [2, 59, 78, 197, 217, 222], "instal": [2, 11, 13, 15, 19, 21, 23, 55, 92, 187, 188, 197, 229, 236, 260, 265, 271], "press": [2, 32, 34, 35, 43, 52, 78, 82, 182, 191, 210, 215], "tab": [2, 9, 47, 130], "autocomplet": 2, "complet": [2, 7, 11, 12, 14, 21, 23, 28, 33, 51, 52, 53, 55, 57, 58, 59, 67, 76, 78, 87, 91, 105, 109, 110, 118, 124, 130, 149, 152, 153, 181, 190, 193, 194, 198, 204, 209, 210, 213, 216, 217, 228, 230, 238, 266, 267, 272], "consol": [2, 11, 12, 51, 79, 177, 183, 271], "best": [2, 12, 16, 20, 33, 51, 59, 76, 78, 92, 162, 183, 194, 197, 206, 207, 209, 213, 216, 221, 229, 264, 265, 271, 272], "lose": [2, 184], "abil": [2, 7, 31, 87, 124, 192, 196, 213, 216, 266, 272], "past": [2, 57, 91, 196, 197, 271], "callabl": [2, 11, 33, 42, 87, 93, 148, 192, 197, 198, 209, 226, 229, 230, 235, 236, 237], "f1": [2, 42, 76, 78, 87, 101, 106, 114, 122, 130, 183, 188, 190, 193, 197, 199, 215], "f2": [2, 51, 76, 87, 101, 106, 114, 122, 130, 166, 183, 190, 193, 197, 199, 215], "own": [2, 11, 13, 14, 18, 27, 35, 42, 43, 51, 67, 95, 114, 130, 192, 197, 204, 209, 213, 232, 235, 236, 266], "ensur": [2, 12, 18, 20, 51, 52, 55, 83, 87, 128, 192, 193, 197, 211, 228, 233, 236], "6": [2, 3, 5, 25, 27, 28, 31, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 73, 74, 76, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 116, 117, 121, 122, 123, 132, 136, 142, 160, 172, 173, 181, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 209, 210, 214, 215, 216, 217, 218, 228, 229, 232, 235, 236, 242, 244, 246, 251, 262, 268, 272, 273], "accuraci": [2, 5, 31, 51, 193, 253, 268], "2000000000000002": 2, "py3k": 2, "precis": [2, 7, 8, 11, 12, 14, 18, 33, 42, 51, 54, 55, 56, 59, 67, 78, 87, 91, 99, 128, 182, 184, 187, 188, 192, 193, 194, 197, 204, 209, 210, 215, 216, 229, 230, 238, 261, 272], "20000000000000": 2, "core": [2, 4, 7, 8, 11, 12, 13, 14, 18, 21, 23, 29, 31, 33, 42, 52, 57, 58, 60, 68, 82, 86, 91, 93, 161, 162, 185, 187, 188, 189, 190, 192, 193, 194, 197, 204, 205, 209, 210, 213, 217, 227, 228, 229, 235, 236, 240, 252, 253, 264, 267], "awar": [2, 8, 11, 12, 14, 31, 51, 55, 81, 87, 207, 217, 236], "chanc": [2, 8, 12, 51, 79, 207, 217, 267], "sympyifi": 2, "With": [2, 8, 12, 20, 33, 50, 51, 55, 76, 91, 117, 118, 119, 126, 127, 136, 160, 163, 181, 183, 184, 185, 187, 188, 195, 196, 197, 204, 209, 215, 218, 235, 266, 267], "shorthand": [2, 7, 18, 51, 81, 157, 192, 205, 226], "worri": [2, 51, 267], "mistak": [2, 15, 42, 236], "reus": [2, 18, 33, 163, 266], "obtain": [2, 5, 15, 27, 28, 32, 34, 35, 42, 43, 44, 47, 51, 52, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 73, 76, 78, 80, 82, 87, 90, 91, 98, 101, 124, 126, 128, 136, 158, 163, 168, 184, 185, 188, 190, 192, 193, 196, 198, 205, 206, 207, 209, 210, 213, 214, 215, 216, 235, 238, 245, 246], "7": [2, 3, 7, 14, 18, 22, 25, 27, 28, 31, 33, 35, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 73, 76, 78, 81, 82, 84, 85, 87, 91, 93, 94, 96, 99, 101, 116, 123, 125, 126, 130, 163, 168, 170, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 222, 223, 228, 229, 232, 235, 236, 242, 251, 262, 267, 268, 271], "22": [2, 14, 42, 51, 54, 55, 56, 59, 87, 91, 94, 95, 128, 191, 196, 209, 210, 215, 217], "142857142857143": 2, "One": [2, 4, 7, 18, 31, 32, 33, 41, 43, 50, 56, 57, 59, 70, 73, 75, 76, 78, 81, 87, 91, 94, 95, 114, 128, 130, 139, 168, 188, 190, 191, 193, 196, 199, 205, 209, 215, 216, 217, 218, 223, 236, 248, 261, 262, 264, 267, 268, 272], "again": [2, 5, 8, 9, 12, 43, 51, 66, 91, 114, 116, 128, 158, 159, 173, 180, 184, 185, 192, 200, 207, 213, 226, 245, 264, 272], "quot": [2, 14, 33, 81, 197, 238], "achiev": [2, 18, 51, 55, 59, 84, 91, 114, 130, 196, 204, 207, 209, 216, 231, 246], "receiv": [2, 51, 52, 91, 106, 158, 192, 222], "fraction": [2, 51, 52, 55, 57, 67, 78, 87, 91, 107, 169, 187, 188, 189, 190, 191, 194, 197, 199, 210, 213, 215, 263], "invalid": [2, 15, 51, 52, 93, 116, 187, 190, 205], "keep": [2, 4, 12, 14, 18, 19, 47, 51, 52, 55, 56, 59, 76, 87, 109, 117, 128, 147, 163, 183, 186, 187, 188, 193, 204, 205, 207, 209, 213, 215, 223, 250, 262, 267], "digit": [2, 14, 33, 51, 52, 54, 55, 61, 78, 81, 91, 124, 173, 187, 193, 204, 209, 235, 261], "calcul": [2, 5, 7, 11, 25, 31, 34, 43, 49, 51, 52, 53, 54, 55, 57, 59, 61, 63, 64, 65, 67, 68, 78, 82, 84, 87, 91, 94, 95, 103, 105, 106, 109, 113, 116, 117, 118, 132, 135, 136, 139, 142, 158, 159, 160, 161, 163, 164, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 187, 188, 190, 192, 193, 194, 199, 204, 213, 217, 221, 229, 230, 236, 242, 244, 248, 249, 250, 268, 271], "signific": [2, 7, 12, 33, 51, 52, 55, 78, 87, 105, 128, 157, 187, 216, 236, 267], "first": [2, 5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 20, 32, 33, 34, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 75, 76, 78, 80, 81, 82, 87, 90, 91, 94, 95, 101, 102, 107, 108, 109, 113, 114, 116, 117, 118, 119, 124, 127, 128, 131, 135, 136, 140, 144, 147, 152, 153, 156, 157, 158, 159, 160, 162, 163, 166, 168, 173, 176, 180, 181, 183, 184, 186, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 203, 204, 206, 207, 209, 210, 213, 214, 215, 216, 217, 221, 223, 226, 228, 229, 230, 231, 235, 236, 238, 246, 251, 261, 262, 264, 266, 267, 268, 270, 272, 273], "mind": [2, 4, 7, 14, 51, 87, 128, 183, 204, 205, 250, 267], "indic": [2, 4, 7, 12, 14, 31, 32, 33, 34, 35, 40, 42, 43, 44, 46, 47, 49, 50, 51, 54, 55, 56, 59, 61, 66, 67, 76, 78, 81, 82, 84, 87, 90, 91, 102, 113, 118, 147, 158, 160, 161, 163, 168, 172, 173, 182, 186, 187, 188, 192, 193, 194, 197, 204, 205, 206, 208, 209, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 235, 268], "appear": [2, 14, 15, 32, 33, 35, 40, 42, 51, 52, 56, 57, 60, 61, 64, 67, 70, 74, 76, 78, 82, 87, 91, 93, 114, 118, 147, 163, 165, 168, 183, 185, 187, 190, 192, 193, 197, 206, 209, 213, 214, 215, 217, 221, 223, 228, 235, 236, 242, 246], "interpret": [2, 8, 21, 33, 42, 50, 51, 56, 59, 64, 67, 78, 82, 84, 87, 91, 93, 105, 168, 183, 185, 192, 193, 197, 204, 210, 215, 216, 217, 222, 228, 229, 232, 238, 268], "exact": [2, 7, 12, 18, 29, 50, 51, 52, 55, 61, 66, 73, 76, 78, 82, 87, 94, 130, 157, 187, 188, 190, 193, 204, 209, 213, 215, 228, 238, 264, 266, 271], "100": [2, 18, 33, 35, 40, 50, 51, 52, 55, 59, 67, 74, 81, 82, 87, 91, 94, 183, 187, 192, 194, 196, 197, 204, 215, 216, 235, 261], "000000000000": 2, "00": [2, 51, 91, 147, 157, 210, 235], "null": [2, 51, 87], "12": [2, 14, 18, 25, 31, 32, 33, 37, 39, 40, 42, 43, 44, 47, 49, 50, 51, 52, 54, 56, 57, 59, 61, 64, 65, 67, 76, 78, 82, 87, 88, 91, 94, 95, 99, 101, 103, 116, 117, 128, 160, 173, 182, 185, 186, 187, 190, 192, 193, 194, 196, 197, 203, 205, 206, 210, 212, 213, 217, 218, 229, 232, 235, 244, 268, 272], "34": [2, 33, 43, 56, 64, 87, 91, 145, 191, 196, 203, 209, 210], "3400000000000": 2, "25": [2, 14, 42, 43, 52, 54, 56, 59, 61, 64, 66, 83, 87, 90, 91, 94, 95, 101, 111, 176, 182, 190, 192, 193, 196, 197, 203, 204, 206, 210, 212, 213, 214, 217, 229], "250": [2, 91, 210], "143": [2, 142, 182], "next": [2, 5, 7, 18, 24, 33, 34, 35, 40, 42, 43, 45, 46, 51, 52, 57, 76, 78, 81, 87, 91, 105, 106, 109, 117, 118, 119, 121, 123, 124, 131, 180, 181, 184, 188, 192, 193, 197, 205, 207, 210, 213, 232, 233, 235, 265, 266, 267], "20": [2, 14, 29, 33, 40, 42, 43, 50, 51, 52, 55, 56, 59, 67, 68, 78, 87, 91, 94, 95, 101, 111, 168, 170, 183, 187, 191, 192, 193, 194, 196, 197, 203, 204, 205, 206, 209, 210, 213, 216, 217, 242, 262], "appar": [2, 51, 238, 272], "non": [2, 7, 11, 12, 18, 24, 29, 31, 34, 41, 44, 50, 51, 52, 56, 57, 58, 59, 60, 61, 64, 65, 66, 78, 80, 81, 82, 83, 84, 87, 88, 90, 105, 109, 111, 116, 118, 122, 125, 126, 130, 147, 152, 162, 163, 165, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 200, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 223, 228, 230, 235, 238, 248, 267, 272, 273], "repeat": [2, 9, 42, 45, 50, 51, 57, 59, 78, 80, 82, 87, 91, 93, 147, 149, 163, 183, 184, 185, 190, 192, 193, 197, 203, 213, 217, 221, 222, 229, 231, 235, 272], "binari": [2, 8, 18, 29, 33, 35, 46, 51, 52, 78, 81, 91, 92, 157, 169, 184, 187, 193, 210, 229, 232, 235], "decim": [2, 18, 33, 51, 54, 55, 91, 93, 99, 187, 193, 266], "accur": [2, 5, 12, 18, 31, 42, 51, 55, 56, 73, 78, 98, 183, 204, 261, 268], "too": [2, 14, 18, 42, 43, 51, 57, 59, 61, 64, 66, 76, 81, 90, 91, 92, 125, 132, 204, 205, 209, 210, 213, 215, 216, 217, 228, 229, 244, 245], "far": [2, 32, 51, 65, 78, 184, 187, 197, 207, 236, 261, 262, 264], "142857": 2, "25000000000000000000": 2, "14285278320312500000": 2, "realiz": [2, 36, 42, 53, 81, 91, 118, 184, 185, 190, 217], "displai": [2, 7, 8, 14, 15, 51, 52, 55, 76, 80, 94, 95, 99, 134, 167, 173, 176, 177, 183, 187, 188, 197, 205, 221, 228], "onc": [2, 7, 8, 9, 12, 18, 33, 35, 42, 47, 51, 52, 56, 59, 67, 76, 78, 92, 95, 107, 108, 124, 127, 168, 173, 175, 181, 183, 185, 187, 193, 197, 198, 206, 207, 209, 213, 216, 223, 235, 245, 261, 262, 272, 273], "subsequ": [2, 14, 51, 57, 173, 188, 190, 193, 232, 235, 245, 248], "pad": [2, 33, 52, 53, 54, 66, 91], "inexact": [2, 51, 188], "low": [2, 7, 8, 33, 51, 52, 59, 91, 187, 190, 195, 197, 209, 229, 230, 235], "higher": [2, 5, 31, 33, 51, 53, 55, 59, 62, 87, 176, 182, 184, 187, 190, 193, 199, 200, 204, 206, 209, 213, 215, 218, 236, 262], "engin": [2, 97, 129, 130, 179, 213, 271], "increas": [2, 31, 32, 43, 49, 50, 51, 54, 55, 59, 82, 91, 92, 105, 115, 147, 172, 173, 175, 180, 181, 187, 190, 192, 193, 199, 202, 206, 213, 217, 233, 235], "2000061035": 2, "maintain": [2, 51, 52, 91, 95, 197, 205, 206, 213, 216, 232], "highest": [2, 33, 45, 80, 105, 184, 193, 200, 210, 213], "simpl": [2, 5, 7, 14, 18, 19, 20, 32, 33, 42, 50, 51, 55, 59, 63, 67, 69, 76, 78, 80, 87, 91, 92, 94, 95, 101, 102, 105, 108, 109, 111, 113, 116, 118, 119, 121, 123, 124, 127, 131, 137, 151, 152, 160, 161, 162, 173, 180, 181, 187, 188, 189, 193, 194, 197, 199, 204, 206, 207, 209, 210, 213, 216, 223, 229, 230, 235, 239, 241, 242, 243, 244, 248, 261, 264, 267, 268, 272], "hopefulli": [2, 6, 76], "understand": [2, 7, 8, 14, 18, 51, 52, 76, 114, 124, 125, 126, 130, 168, 180, 183, 186, 187, 192, 207, 210, 229, 236, 263, 264, 271, 272], "complic": [2, 7, 14, 18, 33, 42, 50, 52, 53, 55, 56, 57, 59, 76, 78, 84, 124, 125, 163, 181, 187, 190, 194, 196, 207, 209, 216, 217, 221, 222, 230, 232, 236, 238, 262, 264, 267, 268], "even": [2, 4, 7, 12, 14, 15, 18, 26, 27, 28, 30, 33, 34, 39, 42, 43, 50, 51, 52, 55, 56, 57, 59, 63, 67, 76, 78, 81, 82, 87, 90, 91, 102, 114, 124, 148, 159, 166, 168, 173, 182, 185, 186, 187, 188, 190, 192, 193, 194, 197, 198, 204, 205, 206, 207, 209, 210, 213, 215, 216, 224, 228, 250, 261, 262, 264, 266, 267, 272, 273], "though": [2, 7, 8, 14, 18, 24, 34, 51, 52, 53, 63, 67, 76, 78, 82, 87, 91, 105, 109, 116, 125, 127, 158, 172, 173, 180, 181, 185, 187, 188, 193, 194, 206, 207, 209, 213, 214, 215, 216, 228, 248, 262, 267, 272], "simplif": [2, 7, 11, 26, 28, 30, 31, 33, 51, 53, 56, 57, 76, 82, 87, 93, 107, 114, 127, 130, 147, 163, 173, 193, 198, 208, 213, 215, 216, 252, 253, 255, 261, 263, 265, 266], "unsimplifi": [2, 206], "ident": [2, 12, 18, 29, 32, 34, 41, 42, 43, 49, 51, 52, 56, 57, 67, 74, 80, 82, 84, 87, 102, 104, 128, 147, 149, 152, 168, 184, 185, 186, 190, 191, 192, 193, 197, 206, 209, 213, 216, 221, 223, 228, 235, 236, 238, 246, 264, 268, 272], "12345678901234567890": 2, "big_trig_ident": 2, "ab": [2, 30, 33, 34, 50, 51, 52, 55, 56, 58, 59, 63, 74, 76, 81, 82, 87, 97, 103, 130, 163, 185, 188, 192, 193, 197, 210, 212, 215, 216, 217, 223, 232, 235, 238, 247, 272], "gave": [2, 51, 235], "larg": [2, 7, 11, 12, 14, 42, 43, 51, 52, 61, 76, 78, 90, 91, 105, 110, 127, 130, 143, 168, 172, 182, 187, 188, 190, 193, 196, 197, 198, 204, 207, 209, 217, 222, 229, 236, 238, 244, 261, 266, 272], "approxim": [2, 3, 6, 14, 31, 42, 50, 51, 52, 55, 59, 61, 67, 76, 78, 87, 91, 95, 98, 132, 166, 183, 187, 188, 193, 200, 204, 207, 217, 254, 262, 266], "three": [2, 5, 7, 12, 18, 21, 25, 29, 33, 42, 43, 44, 47, 51, 52, 56, 59, 61, 65, 66, 67, 76, 80, 81, 82, 94, 95, 113, 117, 120, 121, 122, 136, 158, 160, 165, 173, 176, 180, 181, 182, 183, 184, 185, 188, 190, 193, 197, 207, 209, 210, 215, 216, 217, 228, 242, 243, 248, 251, 264, 267, 272], "pass": [2, 4, 7, 8, 11, 12, 13, 14, 18, 24, 25, 28, 31, 32, 33, 42, 43, 51, 52, 53, 55, 57, 58, 59, 61, 64, 65, 67, 78, 79, 81, 82, 84, 87, 88, 91, 93, 94, 99, 101, 106, 113, 114, 118, 130, 131, 135, 152, 153, 157, 158, 160, 161, 173, 177, 183, 184, 186, 187, 188, 190, 192, 193, 195, 197, 198, 204, 205, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 233, 235, 236, 238, 241, 242, 261, 262, 267, 271, 272, 273], "By": [2, 7, 11, 18, 26, 28, 33, 41, 50, 51, 53, 55, 56, 59, 65, 66, 70, 74, 76, 81, 82, 87, 90, 91, 92, 93, 94, 95, 99, 106, 158, 163, 183, 185, 187, 188, 190, 192, 193, 194, 196, 197, 199, 204, 206, 209, 210, 213, 215, 216, 217, 221, 223, 224, 228, 231, 235, 236, 248, 261, 266, 267, 272], "re": [2, 12, 18, 30, 31, 33, 42, 43, 51, 52, 55, 58, 59, 76, 78, 87, 173, 175, 178, 184, 190, 197, 198, 199, 205, 206, 207, 213, 228, 244, 246, 262, 264, 267], "gain": [2, 52, 101, 125, 126, 130], "impress": 2, "91": [2, 34, 191, 196, 203, 217], "compar": [2, 7, 31, 33, 43, 48, 51, 57, 68, 81, 87, 91, 92, 116, 142, 166, 170, 187, 190, 193, 194, 197, 202, 204, 209, 213, 216, 218, 222, 228, 235, 264, 267, 272], "4e": [2, 215], "nearli": [2, 91, 206], "modifi": [2, 15, 32, 33, 42, 51, 57, 59, 91, 93, 126, 135, 183, 190, 192, 193, 194, 197, 209, 215, 216, 217, 228, 231, 232, 235, 236, 261, 266, 268], "origin": [2, 5, 7, 13, 20, 25, 42, 43, 44, 47, 50, 51, 52, 55, 56, 57, 59, 60, 62, 64, 66, 76, 78, 82, 87, 91, 99, 101, 102, 118, 127, 130, 155, 158, 168, 174, 178, 183, 184, 188, 192, 193, 196, 197, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 223, 228, 235, 236, 242, 244, 245, 246, 247, 248, 250, 251, 272], "snippet": [2, 33], "demonstr": [2, 7, 14, 15, 18, 42, 43, 51, 78, 91, 106, 108, 114, 118, 119, 127, 184, 187, 247, 272], "expr": [2, 7, 12, 14, 18, 27, 28, 30, 31, 33, 43, 50, 53, 55, 57, 59, 61, 73, 76, 78, 81, 84, 87, 92, 93, 101, 105, 107, 114, 127, 140, 144, 146, 148, 152, 155, 158, 160, 161, 163, 170, 173, 175, 177, 183, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 204, 206, 209, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 229, 230, 231, 233, 236, 242, 243, 244, 245, 246, 248, 253, 261, 262, 264, 266, 267, 271, 272, 273], "expr_modifi": 2, "__main__": [2, 33, 268], "show": [2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 33, 43, 50, 51, 55, 57, 74, 76, 78, 87, 91, 94, 95, 99, 105, 114, 120, 128, 130, 158, 162, 166, 168, 173, 180, 181, 183, 184, 187, 188, 190, 192, 193, 197, 198, 200, 204, 205, 206, 207, 209, 210, 213, 215, 217, 218, 226, 229, 230, 233, 235, 236, 264, 266, 268, 271], "unlik": [2, 7, 8, 11, 14, 30, 52, 78, 87, 91, 93, 114, 180, 190, 197, 210, 213, 216, 232, 233, 264, 266, 267, 268, 271], "high": [2, 5, 7, 14, 15, 33, 51, 55, 56, 79, 91, 130, 177, 187, 192, 195, 197, 210, 215, 258, 268], "declar": [2, 7, 33, 64, 76, 87, 93, 102, 114, 116, 130, 142, 186, 197, 204, 207, 212, 213, 214, 217, 230], "asid": [2, 81, 213, 214, 266], "impli": [2, 7, 15, 25, 29, 33, 42, 81, 163, 183, 188, 190, 197, 205, 207, 213, 218, 221, 222, 235, 248], "wish": [2, 11, 14, 18, 20, 33, 51, 52, 55, 76, 91, 158, 172, 181, 232, 236, 262, 266, 268, 273], "mani": [2, 5, 7, 8, 11, 12, 14, 18, 20, 31, 32, 33, 34, 39, 42, 47, 51, 52, 53, 55, 57, 59, 63, 76, 78, 81, 82, 87, 91, 92, 109, 110, 114, 116, 124, 126, 127, 130, 147, 163, 171, 181, 184, 186, 187, 188, 190, 192, 201, 204, 205, 207, 209, 210, 213, 214, 215, 216, 217, 221, 230, 235, 261, 262, 264, 265, 266, 267, 271, 272, 273], "parenthes": [2, 14, 51, 93, 105, 151, 152, 181, 197, 221, 238], "preced": [2, 14, 15, 34, 43, 51, 52, 55, 56, 143, 209, 236], "expect": [2, 7, 14, 15, 18, 32, 34, 36, 51, 57, 59, 63, 81, 91, 92, 101, 114, 157, 187, 190, 192, 194, 195, 204, 209, 212, 216, 217, 226, 228, 229, 232, 235, 236, 266, 267], "shell": [2, 9, 79, 130, 196], "2x": [2, 51, 59, 76, 93, 209, 210, 216, 217, 261, 264, 272], "syntaxerror": [2, 93], "pprint": [2, 18, 31, 32, 53, 59, 78, 87, 91, 101, 135, 182, 197, 198, 205, 209, 213, 214, 216, 217, 235, 271], "asin": [2, 58, 59, 65, 194, 197, 207, 209, 213, 217, 272], "aco": [2, 14, 25, 58, 64, 67, 116, 130, 136, 173, 197, 213, 242, 272], "arcsin": [2, 57, 194, 197, 217], "arcco": [2, 57, 197], "method": [2, 6, 7, 9, 11, 12, 14, 15, 19, 27, 28, 29, 31, 32, 33, 34, 35, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 67, 70, 73, 75, 76, 78, 80, 82, 83, 84, 87, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 105, 108, 113, 114, 117, 119, 120, 124, 129, 130, 137, 140, 142, 144, 152, 153, 158, 160, 163, 165, 170, 171, 172, 173, 175, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 198, 199, 200, 202, 203, 204, 205, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 224, 228, 230, 232, 235, 236, 242, 245, 248, 251, 252, 261, 262, 263, 264, 267, 272], "root": [2, 7, 18, 22, 31, 33, 50, 51, 52, 58, 59, 73, 74, 75, 76, 78, 80, 83, 87, 91, 130, 168, 182, 184, 185, 188, 189, 192, 194, 196, 197, 207, 208, 213, 215, 216, 217, 228, 232, 235, 266, 268, 271, 273], "expon": [2, 30, 33, 38, 51, 52, 57, 58, 59, 76, 78, 84, 91, 99, 101, 169, 185, 186, 187, 189, 193, 194, 197, 206, 209, 213, 216, 221, 232, 272], "half": [2, 18, 33, 52, 56, 57, 59, 61, 67, 78, 80, 87, 91, 93, 94, 132, 135, 160, 182, 188, 190, 192, 193, 205, 206, 207, 209, 217, 228, 235], "neg": [2, 7, 8, 14, 28, 30, 33, 34, 46, 50, 51, 56, 57, 59, 61, 63, 64, 67, 76, 78, 80, 81, 82, 87, 90, 91, 94, 95, 98, 99, 101, 163, 173, 185, 186, 188, 190, 192, 193, 194, 197, 203, 205, 206, 207, 209, 210, 213, 215, 216, 217], "denomin": [2, 51, 55, 59, 78, 91, 101, 107, 185, 187, 188, 190, 192, 193, 196, 197, 206, 207, 209, 210, 213, 215, 272], "find": [2, 5, 6, 14, 18, 22, 25, 28, 31, 33, 34, 42, 45, 46, 47, 50, 51, 55, 57, 59, 61, 63, 64, 65, 68, 73, 76, 78, 80, 87, 91, 93, 107, 115, 122, 128, 130, 132, 148, 155, 157, 158, 159, 163, 166, 168, 180, 183, 184, 185, 186, 187, 188, 189, 190, 194, 196, 197, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 217, 223, 232, 235, 236, 238, 242, 251, 262, 264, 266, 268, 273], "wild": [2, 209, 235], "interest": [2, 18, 47, 51, 53, 56, 57, 67, 76, 78, 87, 91, 115, 116, 163, 168, 181, 184, 188, 192, 193, 194, 196, 204, 207, 209, 210, 215, 216, 229, 230, 246, 262, 265, 267, 268, 269, 272], "appropri": [2, 5, 11, 14, 15, 42, 51, 57, 66, 87, 105, 116, 152, 153, 163, 173, 180, 186, 187, 193, 194, 197, 203, 204, 209, 210, 215, 217, 222, 230, 246, 271], "sq": [2, 210], "lambda": [2, 18, 27, 28, 31, 33, 42, 43, 52, 53, 57, 78, 82, 83, 84, 87, 90, 91, 93, 114, 126, 127, 130, 131, 148, 183, 190, 192, 193, 197, 198, 205, 206, 209, 213, 215, 216, 217, 218, 226, 235, 236, 242, 243, 246, 261, 268], "is_pow": [2, 33, 51, 57], "is_rat": [2, 7, 192, 235], "link": [2, 12, 14, 15, 16, 22, 33, 52, 61, 67, 78, 102, 108, 117, 124, 229, 232, 233, 270], "bracket": [2, 18, 43, 51, 59, 161, 163, 173, 197], "item": [2, 14, 15, 33, 40, 41, 43, 51, 56, 62, 68, 82, 87, 91, 109, 183, 187, 190, 193, 197, 205, 213, 214, 217, 228, 229, 232, 235, 236, 272], "mutabl": [2, 34, 51, 83, 84, 85, 94, 188, 197, 198, 209, 218, 268], "been": [2, 7, 12, 18, 31, 33, 34, 42, 43, 44, 47, 50, 51, 52, 63, 76, 78, 87, 91, 92, 93, 109, 114, 116, 124, 127, 128, 136, 148, 158, 160, 168, 172, 178, 179, 180, 181, 184, 187, 188, 192, 194, 195, 197, 199, 204, 207, 209, 214, 215, 216, 218, 227, 228, 230, 231, 233, 235, 238, 245, 248, 264, 265, 267, 268, 272], "access": [2, 7, 11, 14, 15, 18, 26, 27, 28, 33, 51, 59, 80, 81, 84, 87, 92, 95, 101, 102, 108, 109, 113, 114, 131, 172, 173, 178, 181, 183, 187, 188, 190, 192, 209, 213, 217, 218, 221, 229, 230, 245, 248, 267, 271], "space": [2, 14, 18, 31, 32, 33, 51, 52, 53, 60, 61, 62, 64, 66, 67, 80, 87, 93, 94, 103, 109, 110, 111, 132, 134, 137, 147, 150, 152, 158, 160, 167, 173, 176, 178, 181, 182, 183, 184, 192, 208, 216, 217, 228, 232, 242, 243, 245, 246, 247, 248, 250, 251, 264, 267], "notat": [2, 5, 39, 43, 44, 50, 51, 52, 56, 59, 76, 84, 87, 93, 101, 161, 172, 173, 177, 181, 184, 197, 204, 208, 209, 216, 222, 223, 235, 248, 262], "curli": [2, 114, 197], "short": [2, 12, 15, 24, 34, 41, 43, 47, 51, 52, 53, 54, 57, 85, 91, 105, 149, 168, 172, 181, 184, 191, 218, 228, 238, 267, 271], "twice": [2, 12, 33, 51, 53, 65, 91, 173, 175, 180, 197, 232, 233, 242, 243, 262], "sometim": [2, 7, 12, 14, 15, 18, 32, 33, 51, 56, 59, 75, 76, 101, 124, 127, 155, 163, 181, 184, 187, 192, 197, 199, 204, 206, 210, 213, 215, 226, 235, 261, 268], "comma": [2, 14, 15, 33, 51, 197, 236, 264], "integr": [2, 4, 20, 22, 25, 31, 43, 50, 51, 53, 56, 57, 58, 69, 70, 71, 74, 80, 82, 87, 90, 91, 101, 103, 109, 114, 124, 130, 149, 158, 161, 164, 167, 172, 174, 178, 182, 184, 187, 188, 189, 190, 193, 194, 197, 199, 200, 207, 213, 214, 217, 230, 238, 242, 244, 245, 248, 249, 253, 263, 266, 271], "sequenc": [2, 15, 31, 33, 35, 38, 41, 42, 43, 47, 49, 50, 51, 52, 54, 56, 59, 61, 64, 65, 66, 67, 68, 71, 75, 81, 82, 84, 87, 90, 91, 130, 136, 162, 163, 188, 191, 193, 197, 199, 201, 204, 206, 207, 209, 210, 213, 214, 216, 223, 226, 229, 230, 235, 237, 238], "usag": [2, 7, 8, 14, 15, 18, 24, 27, 53, 57, 78, 124, 160, 178, 183, 184, 189, 190, 197, 205, 207, 210, 213, 214, 218, 232, 236, 237, 248, 249, 259, 267], "out": [2, 7, 8, 15, 18, 32, 33, 42, 43, 51, 52, 53, 56, 59, 67, 76, 78, 84, 87, 91, 94, 101, 102, 114, 116, 118, 121, 130, 140, 144, 155, 158, 160, 162, 163, 184, 185, 187, 188, 192, 193, 194, 195, 197, 198, 204, 207, 209, 213, 218, 228, 230, 235, 236, 264, 266, 267, 271, 272], "suppli": [2, 31, 32, 33, 42, 43, 51, 53, 61, 65, 87, 91, 106, 109, 111, 116, 118, 121, 125, 126, 136, 163, 172, 176, 181, 183, 192, 194, 199, 206, 213, 229, 235, 236, 242, 243, 246], "kwarg": [2, 13, 27, 28, 29, 33, 42, 43, 50, 51, 52, 53, 57, 59, 61, 62, 64, 65, 66, 67, 68, 73, 76, 78, 82, 83, 84, 85, 87, 89, 90, 99, 101, 107, 109, 118, 132, 141, 143, 147, 148, 152, 154, 156, 157, 159, 160, 161, 173, 176, 177, 183, 186, 188, 193, 197, 199, 203, 204, 205, 209, 213, 214, 215, 217, 218, 223, 228, 229, 231, 238, 246], "pair": [2, 5, 14, 32, 33, 42, 43, 51, 52, 57, 63, 68, 75, 87, 91, 114, 118, 153, 155, 157, 158, 163, 172, 184, 187, 190, 192, 193, 198, 203, 204, 206, 207, 209, 210, 213, 216, 217, 230, 235, 245, 261, 268], "accord": [2, 15, 33, 39, 42, 43, 47, 50, 51, 52, 59, 81, 84, 87, 91, 93, 115, 124, 157, 163, 183, 188, 190, 192, 194, 210, 215, 216, 223, 228, 230, 235, 250], "auto": [2, 16, 31, 51, 52, 79, 183, 190, 193, 197, 209, 213, 217], "powsimp": [2, 51, 57, 206], "option": [2, 9, 12, 13, 14, 15, 16, 18, 26, 28, 31, 33, 42, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 64, 65, 67, 68, 70, 78, 79, 82, 84, 87, 88, 91, 92, 93, 94, 99, 101, 105, 106, 107, 108, 109, 110, 113, 130, 136, 147, 152, 153, 155, 158, 160, 165, 172, 173, 177, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 222, 223, 228, 229, 230, 233, 235, 236, 242, 265, 271, 272], "wiki": [2, 7, 12, 13, 14, 15, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 99, 101, 104, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 167, 173, 175, 179, 183, 193, 200, 204, 205, 206, 210, 213, 216, 217, 230, 235, 242, 243, 247, 249, 251, 268], "info": [2, 15, 101, 197, 213, 214], "everywher": [2, 12, 51, 59, 76, 101, 178, 250], "deep": [2, 18, 51, 57, 81, 82, 193, 204, 209, 217, 267], "forc": [2, 5, 8, 11, 18, 51, 55, 57, 61, 67, 76, 78, 81, 94, 95, 97, 106, 109, 113, 116, 118, 119, 120, 121, 124, 125, 126, 127, 130, 151, 152, 166, 178, 181, 183, 185, 187, 206, 209, 210, 215, 228, 248, 250, 271, 272], "measur": [2, 25, 57, 59, 67, 83, 105, 143, 152, 157, 165, 168, 170, 172, 173, 176, 178, 181, 193, 205, 206, 209, 217, 241, 242, 244, 245, 247, 248, 250], "count_op": [2, 206, 209], "explan": [2, 7, 12, 15, 21, 25, 26, 27, 28, 29, 30, 32, 33, 36, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 57, 59, 63, 73, 74, 76, 78, 82, 87, 91, 101, 104, 106, 107, 108, 109, 111, 122, 132, 134, 137, 140, 142, 144, 146, 158, 163, 182, 183, 184, 186, 188, 192, 193, 195, 199, 200, 202, 203, 204, 205, 207, 209, 210, 213, 215, 217, 218, 222, 223, 228, 231, 233, 236, 269], "check": [2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 27, 28, 31, 32, 33, 37, 40, 42, 43, 44, 49, 50, 51, 52, 56, 59, 63, 74, 76, 80, 81, 82, 84, 87, 88, 91, 101, 106, 107, 114, 127, 130, 143, 151, 163, 165, 166, 171, 178, 179, 183, 184, 186, 187, 188, 190, 192, 193, 199, 205, 207, 209, 213, 214, 215, 216, 217, 221, 222, 226, 228, 230, 233, 235, 244, 248, 264, 272], "strictli": [2, 4, 6, 7, 29, 31, 51, 59, 87, 91, 101, 190, 209, 215], "radic": [2, 51, 52, 87, 184, 192, 193, 209, 215, 216], "join": [2, 43, 51, 52, 64, 82, 94, 95, 197, 209, 213, 218, 235, 239], "autoexpand": [2, 209], "longer": [2, 6, 12, 14, 51, 61, 91, 118, 127, 185, 190, 197, 206, 209, 235, 238, 264, 272], "won": [2, 12, 18, 33, 209, 216, 267], "violat": [2, 114, 182, 194, 209], "code": [2, 5, 7, 8, 9, 14, 16, 17, 18, 19, 20, 21, 24, 34, 38, 42, 45, 46, 51, 52, 53, 55, 59, 63, 76, 78, 79, 87, 91, 92, 93, 106, 114, 116, 122, 124, 128, 130, 131, 157, 163, 172, 177, 180, 182, 183, 184, 185, 187, 190, 196, 207, 209, 213, 215, 216, 217, 222, 225, 226, 228, 229, 230, 233, 234, 235, 236, 245, 260, 264, 266, 269, 271], "py": [2, 7, 11, 12, 13, 14, 20, 32, 51, 62, 76, 78, 87, 141, 143, 183, 186, 188, 194, 197, 204, 207, 213, 214, 223, 226, 228, 233, 236], "naiv": [2, 4, 42, 48, 51, 76, 82, 87, 168, 207, 215, 216, 223], "strategi": [2, 34, 51, 78, 190, 191, 204, 207, 209, 214], "futur": [2, 7, 8, 12, 33, 34, 51, 76, 78, 82, 87, 93, 113, 116, 124, 127, 163, 167, 179, 183, 185, 196, 197, 209, 213, 222, 228, 231, 233, 236, 259, 267, 273], "version": [2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 23, 26, 32, 33, 42, 43, 49, 51, 52, 57, 59, 64, 78, 81, 82, 83, 85, 87, 89, 91, 104, 106, 114, 147, 161, 165, 173, 182, 183, 184, 187, 188, 190, 192, 193, 197, 200, 209, 215, 217, 227, 228, 230, 231, 232, 233, 235, 236, 240, 242, 247, 264, 267, 268], "algorithm": [2, 7, 11, 14, 31, 35, 36, 38, 41, 42, 43, 45, 47, 49, 50, 51, 52, 55, 56, 57, 63, 68, 76, 78, 81, 84, 87, 88, 91, 102, 127, 150, 168, 173, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 198, 201, 202, 205, 206, 208, 209, 210, 213, 215, 216, 217, 223, 232, 235, 254, 262, 267, 268, 272], "determin": [2, 5, 7, 8, 12, 15, 18, 26, 28, 29, 30, 31, 33, 34, 35, 42, 51, 52, 53, 54, 55, 57, 61, 62, 64, 66, 67, 78, 79, 80, 84, 87, 91, 93, 94, 95, 101, 107, 110, 111, 113, 123, 128, 131, 142, 155, 157, 159, 160, 163, 166, 168, 173, 178, 183, 184, 185, 186, 190, 192, 197, 203, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 221, 233, 235, 242, 248, 251, 264, 272], "radsimp": [2, 51, 208], "togeth": [2, 5, 33, 42, 51, 55, 80, 87, 91, 124, 149, 160, 168, 181, 184, 188, 190, 192, 193, 196, 197, 209, 213, 215, 217, 228, 229, 235, 266, 272], "logcombin": [2, 208, 213, 216], "robust": [2, 48, 51, 55, 189, 209, 213], "poli": [2, 11, 50, 51, 52, 56, 57, 59, 60, 67, 73, 78, 82, 84, 87, 91, 130, 184, 185, 189, 190, 192, 193, 194, 196, 199, 212, 213, 215, 216, 228], "cancel": [2, 5, 18, 33, 51, 55, 59, 67, 76, 78, 87, 91, 101, 102, 187, 188, 190, 193, 196, 209, 215, 266], "section": [3, 7, 9, 12, 15, 16, 18, 21, 25, 32, 34, 42, 43, 50, 51, 52, 54, 58, 59, 61, 67, 76, 81, 82, 87, 94, 95, 108, 114, 128, 166, 168, 172, 178, 181, 184, 187, 190, 192, 197, 200, 204, 207, 213, 223, 232, 233, 235, 245, 246, 247, 248, 252, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273], "special": [3, 7, 11, 14, 18, 24, 25, 43, 51, 52, 54, 55, 56, 58, 66, 69, 76, 78, 82, 87, 130, 147, 152, 178, 184, 187, 189, 190, 191, 192, 197, 206, 207, 209, 213, 214, 215, 217, 228, 229, 230, 233, 235, 236, 245, 248, 250, 254, 255, 262, 263, 267], "topic": [3, 21, 23, 33, 124, 128, 179, 180, 181, 182, 184, 186, 187, 192, 216, 264, 269], "sympi": [3, 7, 8, 10, 11, 12, 15, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 251, 252, 254, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273], "pitfal": [3, 18, 23, 181, 187, 264, 269, 272], "content": [3, 16, 33, 51, 52, 86, 185, 188, 190, 193, 196, 197, 225, 230, 233, 234, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265], "gotcha": [3, 21, 23, 51, 124, 181, 236, 265, 273], "sign": [3, 12, 14, 15, 25, 30, 33, 47, 51, 52, 56, 58, 61, 67, 76, 78, 87, 91, 94, 95, 101, 116, 136, 148, 173, 178, 180, 182, 190, 197, 202, 204, 209, 210, 215, 235, 248, 251, 265], "express": [3, 4, 7, 8, 11, 12, 14, 15, 18, 22, 23, 26, 27, 28, 29, 30, 31, 43, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 71, 74, 75, 76, 78, 79, 82, 85, 86, 87, 90, 91, 92, 94, 101, 102, 104, 105, 110, 111, 114, 118, 124, 125, 126, 127, 128, 130, 131, 138, 142, 146, 147, 151, 152, 155, 158, 160, 161, 162, 163, 165, 166, 168, 170, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 197, 198, 200, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 236, 238, 242, 243, 245, 247, 248, 249, 250, 254, 255, 256, 260, 262, 263, 264, 265, 266, 268, 271, 272, 273], "help": [3, 7, 12, 13, 14, 15, 24, 33, 41, 51, 59, 76, 78, 87, 91, 92, 99, 114, 130, 138, 148, 181, 183, 192, 194, 197, 206, 207, 210, 213, 214, 217, 228, 229, 230, 236, 258, 265, 268], "from": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 261, 262, 264, 266, 267, 268, 271, 272, 273], "within": [3, 7, 11, 15, 31, 32, 33, 51, 57, 64, 67, 81, 82, 84, 91, 92, 94, 121, 158, 172, 173, 180, 181, 185, 187, 193, 195, 205, 213, 215, 216, 217, 228, 229, 238], "finit": [3, 6, 7, 28, 33, 37, 38, 39, 42, 50, 51, 52, 54, 55, 78, 80, 81, 149, 173, 182, 185, 188, 189, 191, 193, 194, 197, 199, 200, 203, 205, 210, 212, 213, 216, 235, 242, 243, 253, 263, 266, 272], "classif": [3, 6, 51, 213, 214], "activ": [3, 12, 13, 116, 183, 226, 231, 233], "deprec": [3, 14, 16, 21, 26, 43, 51, 64, 78, 82, 104, 127, 193, 197, 217, 223, 226, 227, 231, 233, 236, 240], "silenc": [3, 12, 226, 233], "11": [3, 7, 14, 27, 28, 33, 42, 45, 47, 49, 51, 52, 54, 56, 59, 63, 64, 65, 67, 68, 76, 78, 81, 82, 83, 87, 91, 93, 96, 101, 114, 116, 128, 147, 157, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 204, 206, 210, 213, 215, 216, 217, 218, 229, 235, 245], "9": [3, 14, 20, 31, 33, 39, 41, 42, 43, 47, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 67, 73, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 99, 101, 102, 103, 104, 114, 116, 119, 130, 132, 136, 168, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 203, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 228, 232, 235, 242, 244, 266, 268, 273], "8": [3, 5, 14, 20, 25, 26, 31, 33, 35, 42, 43, 44, 47, 49, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 67, 73, 76, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 99, 101, 103, 116, 130, 135, 136, 147, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 199, 200, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 222, 228, 230, 232, 235, 242, 244, 245, 251, 261, 262, 266, 268, 272], "classifi": [4, 87, 187, 213, 214, 216, 217], "function": [4, 5, 7, 8, 10, 11, 12, 15, 16, 19, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 42, 43, 46, 47, 49, 52, 53, 54, 55, 56, 60, 61, 62, 63, 68, 71, 72, 75, 77, 78, 79, 80, 82, 84, 86, 90, 92, 94, 96, 98, 99, 101, 102, 103, 107, 108, 111, 112, 113, 114, 117, 118, 119, 120, 124, 125, 126, 130, 135, 136, 137, 138, 142, 147, 148, 149, 152, 157, 158, 159, 160, 161, 162, 163, 166, 172, 173, 176, 177, 179, 181, 182, 184, 189, 190, 191, 192, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273], "isinst": [4, 7, 18, 33, 51, 82, 84, 101, 187, 188, 197, 198, 209, 218, 221, 230, 267], "distinguish": [4, 7, 8, 32, 42, 55, 80, 114, 162, 168, 184], "between": [4, 8, 11, 12, 18, 32, 33, 41, 42, 43, 45, 49, 51, 53, 56, 59, 61, 63, 64, 65, 66, 67, 68, 78, 80, 81, 84, 85, 87, 91, 92, 93, 97, 98, 99, 101, 108, 111, 113, 114, 117, 121, 123, 127, 128, 130, 131, 132, 135, 136, 142, 149, 151, 152, 153, 157, 160, 161, 162, 163, 166, 167, 168, 173, 174, 175, 176, 178, 180, 181, 183, 184, 186, 189, 190, 192, 197, 199, 209, 213, 214, 215, 216, 217, 218, 231, 236, 242, 244, 245, 248, 250, 264], "matrix": [4, 5, 7, 22, 25, 28, 33, 40, 43, 51, 52, 53, 59, 66, 76, 78, 80, 82, 85, 86, 89, 90, 92, 93, 101, 102, 104, 106, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 130, 131, 132, 135, 136, 138, 146, 147, 152, 157, 158, 160, 162, 163, 165, 168, 172, 173, 181, 182, 184, 186, 190, 192, 195, 197, 198, 205, 207, 209, 210, 215, 216, 218, 219, 221, 222, 223, 224, 229, 230, 235, 236, 238, 242, 243, 244, 246, 250, 256, 263, 266, 267, 272, 273], "former": [4, 33, 51, 56, 114, 190, 192, 193, 210, 235], "retriev": [4, 49, 82, 193, 209, 223], "properti": [4, 12, 18, 21, 27, 28, 31, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 76, 78, 82, 84, 87, 91, 94, 95, 97, 98, 101, 106, 108, 109, 111, 113, 128, 130, 132, 134, 137, 138, 141, 142, 147, 148, 149, 151, 152, 159, 161, 163, 165, 168, 170, 171, 173, 174, 175, 178, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 196, 199, 200, 203, 204, 205, 207, 210, 213, 216, 217, 222, 223, 228, 230, 231, 242, 244, 245, 246, 248, 250, 268], "numberkind": [4, 82, 205], "matrixkind": [4, 51, 86, 205], "guarante": [4, 7, 33, 42, 43, 51, 63, 76, 78, 87, 187, 190, 192, 193, 213, 215, 216, 233, 238, 268, 272], "catch": [4, 51, 213, 228, 268], "build": [4, 14, 15, 16, 21, 23, 27, 28, 33, 51, 53, 59, 81, 130, 157, 168, 173, 181, 184, 189, 192, 193, 194, 204, 217, 245, 261, 264, 267], "argument": [4, 7, 8, 11, 12, 13, 14, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 68, 76, 78, 79, 81, 82, 84, 87, 90, 91, 93, 94, 99, 101, 109, 113, 114, 125, 126, 130, 137, 140, 144, 146, 149, 152, 157, 158, 160, 161, 162, 163, 171, 177, 178, 182, 183, 184, 185, 187, 188, 190, 192, 193, 196, 197, 198, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 221, 222, 228, 229, 230, 231, 232, 233, 235, 236, 238, 245, 246, 248, 261, 262, 267, 268, 272], "theori": [4, 18, 28, 34, 40, 41, 42, 43, 49, 51, 52, 56, 59, 80, 88, 91, 109, 114, 127, 129, 142, 160, 163, 173, 176, 186, 190, 191, 192, 196, 210, 232, 242, 259, 266], "compat": [4, 9, 11, 12, 33, 51, 59, 79, 82, 87, 92, 105, 165, 170, 177, 183, 186, 188, 192, 193, 197, 217, 220, 221, 224, 228, 230, 236], "is_subset": [4, 205], "valueerror": [4, 7, 26, 28, 31, 33, 34, 43, 51, 52, 60, 61, 64, 66, 67, 78, 82, 84, 87, 90, 91, 94, 99, 101, 137, 176, 178, 182, 184, 186, 190, 192, 205, 213, 215, 216, 235, 238, 248], "odd": [4, 7, 26, 28, 30, 39, 43, 51, 52, 56, 57, 59, 81, 90, 91, 102, 192, 197, 215], "head": [4, 14, 32, 51, 217, 223, 238, 267], "appliedpred": [4, 26, 27, 28], "attribut": [4, 7, 14, 18, 27, 28, 32, 33, 42, 43, 51, 59, 60, 61, 64, 65, 66, 67, 84, 87, 93, 95, 101, 106, 108, 109, 110, 111, 113, 121, 128, 131, 152, 157, 161, 168, 172, 173, 178, 181, 183, 184, 187, 188, 192, 197, 205, 209, 210, 222, 223, 229, 231, 235, 236, 239, 245, 267], "advanc": [4, 6, 15, 18, 23, 27, 42, 51, 55, 56, 87, 88, 124, 128, 179, 183, 186, 187, 189, 191, 192, 199, 206, 213, 228, 229, 230, 235, 261, 263, 265, 269, 270, 271, 272], "manipul": [4, 5, 7, 11, 32, 33, 34, 42, 51, 59, 76, 86, 91, 92, 114, 124, 128, 161, 180, 186, 187, 188, 191, 196, 197, 199, 206, 209, 211, 220, 235, 252, 255, 259, 261, 262, 263, 264, 265, 266, 268, 271, 272], "quit": [5, 18, 59, 87, 91, 116, 180, 183, 194, 196, 207, 215, 250, 264, 267], "analysi": [5, 33, 34, 42, 51, 52, 57, 98, 116, 127, 128, 131, 167, 184, 193, 207, 210, 217], "physic": [5, 11, 14, 33, 44, 87, 91, 94, 95, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 182, 191, 217, 232, 235, 248, 266, 272], "vari": [5, 31, 33, 51, 65, 67, 99, 105, 109, 128, 161, 181, 204, 215, 235, 248], "hope": [5, 42, 105, 184], "practic": [5, 7, 13, 16, 40, 42, 52, 61, 127, 130, 183, 184, 185, 187, 192, 194, 221, 264, 265], "research": [5, 43, 194, 209], "who": [5, 11, 12, 14, 18, 23, 52, 53, 130, 181, 190, 197, 265], "abl": [5, 7, 11, 12, 14, 18, 32, 33, 42, 47, 51, 52, 53, 62, 70, 78, 84, 87, 91, 98, 114, 125, 127, 128, 130, 131, 184, 187, 194, 213, 216, 228, 245, 266, 271, 273], "effici": [5, 7, 31, 33, 35, 42, 47, 51, 54, 55, 56, 67, 68, 84, 87, 91, 92, 101, 109, 130, 182, 185, 186, 187, 188, 190, 193, 194, 195, 196, 209, 210, 215, 229, 236, 261, 267, 268, 272], "formula": [5, 14, 31, 45, 50, 51, 55, 56, 59, 64, 77, 81, 87, 91, 182, 184, 190, 193, 197, 199, 203, 206, 209, 210, 213, 266, 272], "variou": [5, 11, 14, 15, 18, 31, 33, 35, 42, 50, 51, 56, 71, 76, 78, 81, 111, 142, 146, 147, 158, 160, 172, 184, 185, 188, 189, 190, 192, 198, 204, 207, 210, 213, 214, 216, 230, 272], "establish": [5, 47, 76, 108, 119, 207], "state": [5, 7, 42, 49, 51, 59, 91, 94, 101, 103, 109, 110, 113, 116, 118, 131, 135, 139, 140, 142, 143, 144, 146, 147, 148, 152, 155, 157, 158, 159, 160, 162, 163, 193, 197, 206, 207, 209, 217, 232, 258, 268], "envis": 5, "sampl": [5, 11, 16, 42, 54, 99, 147, 183, 197, 217, 262, 266], "along": [5, 18, 33, 42, 51, 52, 53, 57, 59, 60, 61, 65, 66, 69, 71, 74, 76, 82, 84, 87, 94, 95, 97, 104, 105, 108, 109, 116, 118, 121, 122, 123, 125, 126, 127, 130, 132, 160, 172, 173, 178, 181, 183, 186, 187, 192, 193, 213, 216, 244, 248, 250], "small": [5, 33, 34, 42, 43, 51, 55, 56, 78, 81, 87, 91, 101, 118, 122, 130, 160, 182, 183, 190, 191, 192, 209, 210, 215, 235, 261, 264, 266], "x_": [5, 33, 41, 51, 52, 56, 93, 188, 190, 193, 199, 210, 213, 218], "via": [5, 9, 11, 18, 20, 26, 27, 28, 42, 43, 51, 56, 59, 76, 78, 81, 87, 91, 92, 93, 94, 173, 182, 184, 188, 190, 192, 193, 196, 216, 226, 229, 230, 242, 250, 267], "taylor": [5, 51, 57, 114, 127, 130, 188, 190, 193, 194, 204, 213], "seri": [5, 14, 31, 32, 33, 34, 41, 42, 50, 51, 53, 55, 56, 57, 59, 71, 74, 75, 76, 80, 91, 98, 101, 114, 121, 123, 130, 176, 180, 189, 190, 197, 202, 203, 207, 213, 216, 253, 259, 263], "expans": [5, 14, 18, 33, 51, 53, 56, 57, 59, 71, 78, 87, 91, 127, 142, 144, 193, 194, 199, 200, 201, 206, 208, 213, 215, 216, 253, 263, 272], "let": [5, 7, 8, 18, 31, 33, 42, 47, 51, 52, 61, 69, 74, 76, 80, 84, 87, 88, 91, 93, 106, 114, 130, 168, 173, 180, 184, 185, 186, 190, 192, 193, 194, 197, 204, 207, 209, 210, 213, 215, 216, 223, 226, 229, 233, 236, 246, 247, 251, 261, 264, 266, 267, 272], "Then": [5, 7, 9, 13, 42, 47, 50, 51, 76, 80, 87, 91, 107, 109, 111, 121, 123, 124, 128, 132, 160, 168, 180, 184, 185, 187, 190, 192, 194, 197, 204, 207, 209, 210, 213, 215, 236], "frac": [5, 7, 18, 31, 50, 51, 52, 53, 56, 58, 59, 76, 78, 87, 91, 93, 101, 118, 128, 166, 177, 178, 180, 181, 182, 186, 190, 193, 197, 199, 200, 204, 207, 210, 213, 214, 216, 217, 218, 235, 248, 250, 262, 266, 267, 271, 272], "df": [5, 53, 213], "coeffici": [5, 7, 14, 28, 31, 33, 50, 51, 53, 55, 56, 59, 64, 69, 70, 73, 74, 76, 80, 81, 84, 87, 88, 91, 102, 109, 114, 136, 150, 160, 168, 182, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 199, 200, 203, 204, 207, 209, 210, 212, 213, 214, 215, 216, 217, 223, 229, 245, 248, 267, 272], "c_": [5, 22, 52, 74, 76, 181, 185, 213], "grid": [5, 31, 32, 99, 183], "f_": [5, 51, 56, 59, 78, 125, 126, 127, 190, 196, 197, 207, 213], "constraint": [5, 87, 95, 101, 109, 110, 113, 114, 116, 117, 118, 120, 124, 125, 126, 127, 130, 194], "subset": [5, 7, 15, 18, 31, 32, 35, 38, 42, 43, 49, 56, 57, 63, 74, 76, 78, 80, 91, 184, 186, 190, 192, 197, 205, 235], "formul": [5, 117, 118, 124, 125, 126, 163, 181], "assess": 5, "brute": [5, 206, 210], "frequent": [5, 42, 192, 204, 216], "cover": [5, 21, 91, 93, 105, 114, 172, 180, 223, 230, 262, 264], "introductori": [5, 187, 188, 193], "treatment": [5, 76, 193], "shall": [5, 42, 76, 114, 130, 204, 207, 267], "job": [5, 18, 43, 143, 194, 197], "evalu": [5, 7, 8, 11, 14, 21, 22, 26, 27, 28, 31, 33, 51, 53, 56, 57, 59, 62, 66, 67, 71, 76, 78, 81, 84, 87, 91, 92, 93, 101, 105, 107, 114, 124, 127, 128, 138, 140, 142, 144, 149, 152, 160, 163, 182, 183, 187, 188, 190, 191, 193, 197, 198, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 219, 229, 230, 231, 236, 248, 253, 261, 262, 263, 264, 266, 268], "truncat": [5, 43, 51, 87, 91, 95, 168, 183, 194, 196, 199, 200], "approx": [5, 22, 51, 78], "lowest": [5, 33, 42, 47, 91, 184, 199, 216], "decid": [5, 7, 8, 12, 14, 18, 32, 50, 82, 105, 127, 156, 167, 187, 190, 192, 193, 197, 213, 216, 230, 268], "2h": 5, "elimin": [5, 33, 47, 51, 81, 83, 87, 105, 188, 195, 196, 198, 200, 208, 213, 215, 216, 223, 230, 268], "print_funct": 5, "x0": [5, 31, 33, 41, 51, 59, 70, 72, 74, 75, 91, 135, 187, 198, 199, 204, 209, 213, 215, 217, 235, 262], "x_0": [5, 41, 42, 52, 73, 74, 75, 190, 199, 210, 213, 217, 262], "fi": 5, "fip1": 5, "fip2": 5, "c_0": [5, 52, 74], "c_1": [5, 52, 74, 76, 204, 207, 213], "c_2": [5, 76, 204, 213], "2f": [5, 273], "factori": [5, 14, 18, 50, 51, 55, 58, 59, 87, 91, 93, 182, 188, 190, 192, 193, 197, 199, 209, 215, 217, 230, 231, 235, 236, 272], "vector": [5, 14, 25, 29, 33, 35, 38, 42, 43, 53, 59, 64, 65, 66, 73, 74, 80, 82, 87, 92, 94, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 121, 122, 123, 125, 126, 127, 128, 130, 131, 135, 136, 149, 158, 160, 165, 168, 175, 176, 177, 184, 189, 192, 197, 207, 213, 215, 217, 222, 223, 228, 229, 243, 247, 252, 256, 258, 268], "c_i": [5, 76, 204, 207, 213], "nth": [5, 51, 56, 59, 80, 91, 188, 193, 194, 203, 209, 213, 217], "degre": [5, 34, 42, 49, 50, 56, 59, 67, 78, 82, 87, 94, 97, 99, 101, 108, 109, 114, 115, 118, 124, 131, 135, 181, 184, 185, 188, 190, 192, 193, 196, 200, 203, 206, 207, 209, 210, 213, 215, 217, 242], "polynomi": [5, 7, 14, 15, 22, 29, 42, 50, 51, 52, 55, 56, 58, 69, 70, 71, 72, 74, 78, 81, 82, 84, 87, 91, 95, 101, 128, 130, 184, 186, 191, 195, 199, 204, 206, 207, 209, 210, 211, 212, 213, 216, 228, 252, 259, 263, 268, 273], "x_i": [5, 18, 41, 59, 78, 87, 185, 188, 190, 193, 194, 197, 216], "m11": [5, 217], "m12": [5, 217], "m13": 5, "m21": [5, 217], "m22": [5, 217], "m23": 5, "m31": 5, "m32": 5, "m33": [5, 91], "3x3": [5, 66, 87, 246], "invert": [5, 28, 51, 52, 82, 84, 87, 101, 118, 165, 185, 187, 188, 192, 193, 213, 215, 216, 223, 268], "inv": [5, 43, 83, 87, 109, 116, 121, 122, 130, 152, 186, 213], "center": [5, 15, 31, 42, 50, 51, 61, 65, 67, 68, 78, 87, 106, 108, 111, 114, 116, 121, 123, 128, 130, 136, 180, 183, 192, 197, 205, 251], "fim1": 5, "serv": [5, 15, 18, 27, 28, 33, 48, 51, 58, 74, 192, 213, 214, 238, 265], "wherea": [5, 7, 29, 33, 52, 61, 67, 76, 81, 101, 168, 184, 187, 193, 197, 215, 216, 235, 272], "bit": [5, 9, 18, 32, 33, 35, 51, 52, 54, 81, 82, 87, 91, 157, 168, 184, 193, 207, 210, 216, 228, 235, 245, 246, 271], "question": [5, 7, 12, 14, 15, 19, 50, 53, 61, 68, 76, 78, 81, 91, 105, 165, 168, 172, 184, 187, 192, 207, 216, 235, 238], "eight": [5, 197], "dfdxcheck": 5, "c1": [5, 14, 52, 61, 68, 82, 84, 149, 163, 205, 210, 213, 215, 247, 273], "c3": [5, 54, 80, 82, 84, 91, 213, 217, 247, 273], "c5": [5, 213], "120": [5, 50, 51, 56, 57, 73, 91, 94, 95, 194, 196, 197, 199, 213, 262], "c7": [5, 42], "5040": [5, 56, 73, 193, 194], "inde": [5, 12, 18, 39, 42, 50, 76, 184, 207, 213, 224, 228, 266], "quickli": [5, 18, 42, 43, 51, 52, 55, 91, 190, 193, 206, 216, 232], "tediou": [5, 78], "attempt": [5, 8, 18, 33, 42, 47, 49, 51, 55, 56, 63, 76, 78, 87, 91, 105, 107, 158, 187, 192, 199, 204, 206, 209, 210, 213, 215, 216, 217, 228, 264, 272], "certainli": [5, 63, 93, 232], "seen": [5, 7, 14, 25, 43, 76, 78, 93, 97, 113, 168, 180, 184, 187, 190, 193, 213, 215, 216, 233, 235, 245, 264, 267, 271], "fine": [5, 18, 51, 55, 79, 177, 187, 197, 209], "until": [5, 7, 12, 24, 43, 45, 51, 52, 61, 78, 87, 91, 127, 181, 190, 193, 206, 213, 264], "data": [5, 33, 42, 51, 52, 59, 78, 87, 92, 99, 109, 142, 183, 184, 187, 188, 190, 193, 194, 197, 209, 222, 223, 228, 230, 232, 235, 239], "handl": [5, 7, 8, 15, 18, 31, 39, 43, 51, 57, 78, 79, 81, 86, 91, 92, 93, 94, 102, 105, 114, 127, 143, 146, 152, 153, 158, 187, 193, 194, 203, 209, 211, 213, 215, 218, 221, 229, 235, 236, 238, 253, 267, 272], "devis": 5, "backward": [5, 11, 16, 31, 51, 82, 87, 197, 235, 272], "approach": [5, 9, 32, 50, 51, 78, 101, 118, 124, 187, 190, 191, 194, 205, 214, 215, 217, 229, 232, 235, 262, 268], "xn": [5, 18, 188], "x_n": [5, 18, 34, 41, 52, 73, 87, 185, 188, 190, 193, 210, 216], "fn": [5, 78, 87, 184, 193], "fnm1": 5, "fnm2": 5, "dth": 5, "Of": [5, 7, 50, 76, 87, 213, 216, 235, 272], "cours": [5, 7, 35, 42, 50, 59, 76, 78, 87, 88, 91, 178, 186, 187, 191, 192, 204, 206, 207, 248, 272], "fortran": [5, 11, 18, 31, 92, 93, 105, 130, 182, 230, 254, 260, 271], "etc": [5, 7, 8, 28, 31, 33, 47, 51, 52, 56, 57, 69, 80, 81, 86, 91, 114, 134, 143, 147, 160, 163, 167, 175, 178, 180, 181, 183, 184, 185, 187, 190, 192, 197, 198, 205, 206, 207, 209, 213, 216, 217, 221, 229, 230, 235, 246, 250], "discrit": 5, "bengt": [5, 31], "fornberg": [5, 31], "weight": [5, 51, 59, 66, 68, 78, 80, 87, 147, 209, 253, 262], "collect": [6, 9, 11, 15, 32, 33, 42, 51, 68, 78, 91, 94, 101, 113, 122, 130, 163, 170, 182, 188, 193, 206, 207, 213, 217, 228, 235, 253], "gap": [6, 42, 91, 114, 194], "matur": [6, 7, 215, 216], "matric": [6, 7, 11, 14, 29, 33, 51, 52, 78, 88, 90, 101, 108, 109, 110, 114, 118, 127, 130, 132, 135, 136, 138, 146, 147, 157, 162, 173, 181, 182, 186, 192, 197, 198, 205, 207, 209, 210, 213, 215, 216, 218, 220, 230, 231, 258, 263, 265, 266], "func": [6, 12, 14, 18, 27, 31, 33, 51, 53, 56, 59, 70, 72, 78, 91, 152, 173, 190, 193, 197, 198, 209, 213, 214, 215, 226, 231, 233, 235, 236, 238, 241], "explain": [7, 11, 12, 14, 15, 32, 47, 51, 59, 69, 74, 184, 187, 190, 192, 194, 204], "often": [7, 8, 12, 14, 18, 32, 33, 34, 41, 51, 59, 61, 63, 76, 78, 87, 91, 92, 101, 124, 127, 172, 180, 181, 184, 185, 187, 190, 193, 198, 204, 205, 210, 213, 217, 235, 261, 266, 267, 268, 272], "new": [7, 9, 11, 12, 13, 15, 18, 23, 27, 28, 32, 33, 34, 42, 43, 50, 51, 52, 53, 59, 64, 67, 76, 78, 79, 82, 87, 91, 94, 97, 101, 106, 114, 121, 123, 128, 129, 130, 132, 153, 159, 160, 163, 165, 168, 169, 171, 173, 176, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 197, 204, 207, 209, 210, 213, 215, 216, 217, 218, 228, 229, 233, 236, 242, 243, 245, 249, 261, 264, 267, 268, 270], "elsewher": [7, 56, 80, 116, 186, 228], "wide": [7, 13, 79, 87, 130, 177, 187, 193, 197, 217], "concret": [7, 32, 43, 51, 56, 57, 78, 80, 87, 91, 114, 168, 188, 192, 197, 253], "seem": [7, 18, 75, 76, 114, 168, 184, 209, 213, 272], "obviou": [7, 8, 18, 42, 50, 184, 187, 196, 210, 266], "situat": [7, 55, 76, 181, 213, 215, 217, 233, 264], "surpris": [7, 216], "refus": [7, 272], "everi": [7, 11, 12, 14, 18, 27, 28, 29, 32, 37, 39, 42, 43, 51, 52, 66, 80, 82, 87, 91, 101, 128, 178, 180, 181, 183, 184, 185, 187, 188, 190, 192, 197, 202, 205, 207, 209, 210, 213, 216, 217, 219, 245, 248, 250, 265, 267, 268, 272], "roughli": [7, 51, 52, 92, 115, 213, 236], "known": [7, 8, 14, 18, 28, 32, 33, 34, 40, 42, 43, 51, 52, 55, 56, 59, 61, 64, 69, 76, 78, 79, 88, 91, 99, 101, 102, 104, 106, 111, 127, 166, 173, 180, 186, 187, 188, 192, 193, 197, 200, 203, 205, 206, 207, 209, 211, 212, 213, 214, 215, 217, 235, 236, 242, 248, 250, 272], "tell": [7, 8, 14, 15, 33, 43, 52, 55, 59, 82, 93, 113, 168, 187, 192, 196, 204, 207, 213, 229, 264], "infinit": [7, 18, 28, 50, 51, 52, 55, 56, 57, 64, 65, 78, 87, 91, 101, 120, 149, 168, 184, 192, 197, 198, 199, 202, 203, 204, 205, 209, 210, 211, 212, 215, 222, 235, 272, 273], "good": [7, 12, 15, 18, 33, 51, 52, 55, 63, 76, 87, 91, 116, 127, 130, 184, 187, 188, 197, 204, 206, 207, 209, 213, 235, 261, 265, 268], "idea": [7, 8, 12, 18, 36, 42, 49, 51, 52, 63, 69, 76, 78, 91, 102, 114, 163, 167, 168, 184, 186, 187, 206, 209, 210, 213, 216, 230, 236, 272], "queri": [7, 8, 18, 26, 29, 30, 31, 33, 51, 63, 193, 209, 217, 253], "is_posit": [7, 8, 18, 51, 175, 188], "is_neg": [7, 18, 188], "fuzzi": [7, 18, 21], "interprett": 7, "unknow": 7, "resolv": [7, 8, 51, 206, 209], "undecid": [7, 18, 87, 187, 216, 268], "answer": [7, 12, 18, 42, 51, 55, 73, 76, 78, 81, 87, 91, 168, 190, 194, 206, 207, 209, 215, 217, 232, 238, 266, 268, 272], "hard": [7, 12, 16, 43, 52, 87, 91, 114, 163, 187, 197, 204, 213, 216, 264, 266], "fast": [7, 11, 33, 51, 78, 86, 87, 91, 135, 188, 189, 190, 191, 192, 193, 194, 200, 204, 213, 215, 232, 235, 236], "heurist": [7, 43, 76, 78, 82, 190, 191, 204, 206, 209, 211, 215, 216, 228, 262, 272], "conclud": [7, 59, 74, 116, 178, 204, 215, 250], "particularli": [7, 55, 78, 187, 188, 207, 272, 273], "mix": [7, 24, 50, 57, 82, 87, 93, 172, 187, 188, 193, 197, 216, 219, 221, 223, 236], "expr2": [7, 12, 101, 183, 267], "ideal": [7, 33, 88, 111, 114, 124, 173, 180, 186, 188, 189, 190, 191, 192, 193, 194, 209, 216, 242], "fulli": [7, 12, 14, 21, 42, 51, 68, 78, 81, 93, 95, 114, 130, 163, 180, 187, 188, 194, 204, 217, 223, 239], "primarili": [7, 11, 33, 51, 91, 94, 162, 193, 195, 229, 232, 238, 245], "slow": [7, 18, 47, 51, 55, 78, 92, 105, 116, 135, 172, 181, 187, 188, 197, 198, 199, 200, 209, 213, 215, 216, 228, 229, 272], "down": [7, 9, 12, 14, 21, 84, 103, 116, 118, 180, 181, 183, 188, 199, 205, 207, 209, 213, 232, 268, 272], "indetermin": [7, 8, 51, 87, 190, 202, 215], "never": [7, 18, 51, 57, 78, 165, 193, 194, 197, 205, 215, 217, 226, 245, 264, 265], "contradict": 7, "infer": [7, 27, 28, 43, 51, 78, 187, 196, 202, 207, 213, 229, 255], "bug": [7, 12, 14, 18, 20, 31, 52, 77, 187, 205, 213, 216, 264], "prepar": [7, 109, 195], "presum": [7, 76, 187, 207, 230], "plain": [7, 12, 14, 79, 177, 193, 197], "singletonregistri": [7, 51], "implicitli": [7, 8, 18, 43, 51, 78, 184, 187, 215], "x1": [7, 18, 41, 51, 56, 130, 135, 187, 188, 198, 199, 209, 213, 215, 217, 235], "x2": [7, 41, 51, 56, 130, 135, 187, 199, 213, 215, 217], "distinct": [7, 12, 15, 18, 33, 42, 43, 51, 52, 56, 64, 76, 81, 87, 91, 113, 180, 187, 192, 193, 197, 205, 207, 272], "posifi": [7, 208], "unless": [7, 11, 14, 18, 26, 28, 31, 33, 42, 50, 51, 52, 56, 59, 66, 67, 76, 87, 90, 136, 180, 181, 185, 187, 192, 193, 197, 202, 205, 206, 213, 215, 228, 232, 235, 236, 238, 242, 250, 262, 268, 272], "_x": [7, 18, 87, 128, 177, 180, 181, 188, 194, 209, 213, 229], "rep": [7, 42, 47, 51, 147, 184, 186, 187, 188, 191, 192, 193, 206, 209, 238], "map": [7, 18, 31, 32, 33, 41, 42, 43, 51, 52, 63, 67, 74, 76, 78, 81, 82, 91, 99, 109, 118, 141, 152, 153, 158, 173, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 204, 209, 213, 214, 215, 216, 217, 221, 222, 229, 232, 235, 236, 238, 242], "otherwis": [7, 8, 11, 12, 18, 31, 32, 33, 42, 43, 47, 50, 51, 52, 55, 57, 59, 60, 61, 64, 65, 66, 67, 76, 78, 80, 81, 83, 87, 90, 91, 93, 99, 101, 103, 106, 113, 114, 148, 153, 159, 176, 179, 180, 184, 188, 190, 192, 193, 195, 197, 199, 200, 202, 203, 205, 209, 210, 213, 214, 215, 216, 217, 218, 226, 228, 230, 235, 236, 261, 262, 271], "assign": [7, 15, 32, 33, 34, 47, 51, 67, 78, 80, 81, 87, 93, 109, 114, 121, 130, 168, 178, 181, 183, 185, 190, 197, 215, 216, 223, 230, 245, 248, 264], "feel": [7, 20, 130, 131, 209, 213], "among": [7, 32, 33, 34, 35, 42, 43, 52, 79, 92, 193, 213, 218, 221, 223, 245], "discourag": [7, 51, 209], "behaviour": [7, 76, 81, 106, 190, 194, 200, 203], "symbolc": 7, "implicit": [7, 33, 49, 51, 93, 113, 131, 183, 213, 215, 219, 222, 229, 230, 242, 244, 251, 264], "unusu": [7, 14, 116, 228], "tailor": 7, "necessarili": [7, 12, 14, 29, 51, 52, 53, 76, 78, 81, 184, 185, 192, 193, 195, 209, 213, 215, 216], "is_integ": [7, 18, 51, 175, 197, 222], "assumptions0": [7, 51], "commut": [7, 25, 28, 32, 42, 43, 47, 51, 53, 74, 78, 87, 140, 147, 150, 151, 152, 162, 163, 168, 175, 181, 185, 188, 189, 190, 191, 193, 197, 204, 205, 207, 213, 223, 267], "extended_neg": [7, 51], "extended_nonneg": [7, 51], "extended_nonposit": [7, 51], "extended_nonzero": [7, 51, 197], "extended_posit": [7, 51], "extended_r": [7, 29, 51, 197, 212, 216], "hermitian": [7, 28, 51, 82, 83, 87, 146, 152, 163, 197], "irrat": [7, 28, 31, 51, 91, 187, 193, 197, 205, 266], "noninteg": [7, 29, 51, 187, 197], "nonneg": [7, 18, 28, 51, 52, 53, 56, 59, 84, 130, 185, 187, 210, 217, 272], "nonposit": [7, 28, 51, 130], "nonzero": [7, 18, 28, 30, 50, 51, 66, 87, 103, 185, 186, 187, 188, 197, 200, 216], "ration": [7, 18, 26, 28, 31, 33, 50, 55, 56, 57, 59, 61, 64, 66, 68, 72, 76, 78, 79, 84, 87, 91, 93, 101, 132, 165, 182, 185, 189, 190, 191, 192, 194, 197, 201, 202, 206, 207, 209, 210, 211, 212, 215, 216, 217, 235, 242, 263, 264, 267, 271], "transcendent": [7, 28, 51, 59, 78, 187, 192, 197, 215, 216, 268, 273], "tabl": [7, 14, 34, 42, 51, 56, 59, 72, 77, 78, 87, 91, 108, 130, 182, 192, 219, 255], "oo": [7, 8, 14, 29, 31, 50, 51, 55, 56, 57, 59, 64, 76, 78, 81, 87, 101, 103, 149, 161, 164, 188, 190, 193, 202, 203, 204, 205, 209, 212, 213, 215, 216, 217, 222, 235, 238, 262, 266], "zoo": [7, 29, 51, 56, 57, 59, 78, 204, 206, 209], "field": [7, 25, 29, 33, 51, 52, 53, 59, 69, 78, 135, 136, 175, 179, 184, 185, 186, 188, 189, 191, 193, 194, 195, 210, 215, 228, 242, 244, 246, 247, 249, 251], "oper": [7, 8, 11, 13, 14, 18, 23, 25, 29, 33, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 59, 61, 69, 71, 74, 76, 81, 82, 84, 86, 91, 93, 101, 102, 105, 109, 110, 118, 122, 127, 130, 135, 139, 140, 144, 146, 147, 148, 149, 154, 155, 158, 160, 161, 162, 163, 172, 173, 175, 179, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 200, 202, 205, 206, 208, 209, 213, 215, 216, 219, 220, 221, 222, 228, 229, 232, 235, 236, 242, 249, 252, 258, 263, 264, 265, 267, 272], "antihermitian": [7, 28, 51], "mathbb": [7, 18, 29, 34, 42, 50, 51, 52, 57, 59, 76, 82, 87, 127, 182, 184, 185, 187, 188, 190, 192, 193, 196, 204, 205, 207, 210, 216, 217, 272], "iy": [7, 57, 76, 205, 216], "overlin": [7, 15, 59], "extend": [7, 14, 15, 18, 19, 28, 33, 42, 43, 51, 52, 56, 63, 76, 78, 87, 91, 130, 171, 177, 183, 185, 188, 190, 192, 193, 194, 197, 204, 206, 210, 212, 213, 216, 217, 218, 230, 232, 264, 266], "cup": [7, 193, 205, 216], "infti": [7, 14, 29, 50, 51, 52, 56, 57, 59, 76, 78, 184, 193, 200, 204, 207, 213, 216, 217, 262, 266, 272], "pm": [7, 50, 76, 78, 185, 196, 204, 210, 213], "yi": 7, "ne": [7, 52, 57, 64, 76, 91, 185, 187, 190, 207, 213, 217], "composit": [7, 28, 32, 40, 42, 43, 51, 52, 69, 71, 78, 91, 94, 188, 190, 193, 196, 209, 216, 231], "2k": [7, 51, 76, 91, 210], "pariti": [7, 43], "product": [7, 25, 36, 39, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 59, 61, 64, 66, 67, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 101, 102, 103, 105, 116, 128, 130, 138, 142, 143, 146, 148, 149, 150, 152, 155, 157, 158, 160, 161, 163, 168, 169, 172, 173, 175, 179, 180, 181, 182, 184, 185, 186, 188, 190, 192, 193, 194, 197, 198, 199, 202, 205, 206, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 229, 232, 235, 242, 245, 249], "ge": [7, 15, 56, 57, 59, 76, 82, 87, 91, 182, 185, 190, 207, 235], "le": [7, 34, 47, 59, 76, 82, 91, 123, 190, 207, 217], "en": [7, 14, 15, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 99, 101, 104, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 173, 175, 179, 193, 194, 200, 204, 205, 206, 213, 216, 217, 230, 235, 236, 242, 243, 247, 249, 251, 268], "wikipedia": [7, 14, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 80, 81, 82, 84, 87, 91, 99, 101, 104, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 166, 173, 175, 179, 193, 200, 204, 205, 206, 213, 216, 217, 230, 235, 242, 243, 247, 249, 251, 266, 268, 270], "commutative_properti": [7, 51], "infin": [7, 29, 50, 56, 57, 59, 64, 76, 78, 87, 136, 188, 190, 193, 197, 202, 203, 204, 205, 209, 212, 213, 217], "skew": [7, 74, 91, 217], "hermitian_matrix": 7, "complex_numb": [7, 29, 51], "algebraic_numb": [7, 29, 51], "transcendental_numb": [7, 51], "extended_real_number_lin": 7, "real_numb": [7, 29], "imaginary_numb": [7, 29, 51], "rational_numb": [7, 29], "irrational_numb": [7, 29, 51], "parity_": [7, 51], "prime_numb": [7, 51, 91], "composite_numb": [7, 51], "positive_real_numb": 7, "negative_numb": [7, 51], "beyond": [7, 11, 19, 45, 67, 91, 127, 184, 187, 206, 209, 268], "immedi": [7, 12, 42, 51, 76, 81, 163, 184, 187, 229, 236], "redund": [7, 12, 42, 49, 81, 87, 213, 230], "simpli": [7, 8, 9, 11, 12, 15, 29, 34, 50, 51, 53, 57, 61, 82, 84, 87, 91, 93, 94, 102, 106, 114, 116, 127, 153, 158, 168, 178, 181, 187, 194, 205, 206, 207, 213, 216, 233, 236, 248], "is_real": [7, 18, 51, 53, 57, 58, 87, 175, 197, 222], "inconsist": [7, 18, 26, 28, 50, 168, 173, 176, 180, 209, 213, 216], "inconsistentassumpt": 7, "worth": [7, 12, 18, 173, 246, 248], "deal": [7, 33, 50, 51, 55, 63, 71, 76, 78, 98, 105, 109, 110, 114, 178, 180, 181, 185, 190, 193, 210, 211, 215, 226, 236, 238, 245, 250, 264, 266, 272], "reserv": [7, 114, 223, 230, 268], "is_zero_matrix": [7, 82, 186], "is_zero": [7, 12, 18, 66, 87, 184, 188, 193, 233, 268], "generalis": [7, 59, 76, 184], "gaussian": [7, 59, 78, 87, 91, 133, 189, 190, 193, 210, 215, 217, 258, 268], "notion": [7, 32, 168, 171, 184, 216, 245, 250], "likewis": [7, 14, 32, 117, 118], "scheme": [7, 9, 12, 43, 50, 55, 182, 183, 190, 193, 222], "chain": [7, 18, 33, 42, 47, 51, 59, 68, 92, 180, 192, 217], "superset": [7, 31, 40, 46, 54, 130, 187, 205, 215], "vanilla": 7, "attach": [7, 45, 76, 92, 94, 109, 181, 229, 231, 236], "belong": [7, 15, 29, 32, 42, 47, 51, 74, 87, 163, 173, 180, 183, 184, 186, 187, 190, 192, 193, 204, 205, 209, 210, 216, 223], "is_commut": [7, 78, 152, 161, 235], "is_complex": [7, 51], "is_finit": [7, 51], "permit": [7, 43, 53, 57, 81, 91, 183], "formal": [7, 32, 50, 51, 59, 76, 81, 132, 168, 187, 189, 190, 201, 204], "littl": [7, 18, 32, 43, 61, 87, 91, 92, 116, 168, 191, 193, 197, 207, 209, 217, 232, 245], "difficult": [7, 15, 51, 87, 114, 194, 207, 213, 214, 216, 229, 251, 266, 272], "suit": [7, 11, 12, 15, 18, 32, 183, 193, 226, 228], "n1": [7, 33, 42, 51, 52, 114, 130, 132, 136, 172, 210, 217, 242], "n2": [7, 33, 42, 51, 52, 130, 132, 136, 210, 217], "misunderstand": 7, "is_nonneg": [7, 18, 188], "intent": [7, 33, 50, 51, 93, 230], "meaning": [7, 26, 28, 32, 52], "alon": [7, 52, 79, 190, 213, 215, 222, 235, 266, 267], "suffici": [7, 12, 14, 32, 33, 42, 43, 47, 51, 87, 168, 200, 204, 213, 217, 232, 272], "tempt": [7, 18, 51, 91], "meet": [7, 52, 204], "criteria": [7, 51, 267], "bear": [7, 15], "ordinari": [7, 8, 11, 22, 31, 33, 42, 51, 55, 57, 59, 69, 73, 74, 78, 88, 101, 124, 184, 186, 187, 196, 203, 211, 213, 218, 232, 266, 272], "noncommut": [7, 51, 74, 267], "entir": [7, 11, 12, 19, 42, 51, 52, 55, 59, 65, 67, 76, 90, 107, 128, 173, 184, 186, 192, 205, 222, 231, 233, 266, 272], "Such": [7, 12, 14, 33, 51, 67, 118, 184, 185, 192, 198, 206, 207, 209, 261, 267], "finiteset": [7, 31, 32, 216, 217, 273], "intersect": [7, 14, 31, 32, 42, 61, 62, 64, 65, 66, 67, 68, 136, 184, 193, 197, 203, 204, 216, 259], "s1": [7, 42, 50, 64, 67, 74, 101, 174, 184, 193, 200, 210, 235, 244], "s2": [7, 42, 43, 50, 64, 67, 101, 174, 184, 193, 200, 204, 210, 235, 244], "bool": [7, 21, 31, 33, 47, 49, 51, 52, 54, 57, 78, 79, 81, 82, 84, 87, 91, 93, 110, 147, 175, 177, 183, 192, 193, 195, 197, 198, 199, 204, 205, 209, 212, 215, 217, 229, 230, 235, 236, 242, 244, 264], "plai": [7, 50, 116, 125, 210, 264, 266, 267], "role": [7, 57, 195], "connect": [7, 45, 52, 53, 66, 67, 87, 92, 94, 97, 106, 108, 116, 119, 184, 185, 186, 195, 213, 217, 235, 242], "is_finite_set": 7, "zero_matrix": 7, "setsymbol": 7, "concern": [7, 14, 31, 34, 50, 55, 91, 178, 183, 185, 186, 187, 196, 197, 198, 209, 210, 215, 229, 230, 232, 238], "semant": [7, 12, 84], "aspect": [7, 15, 87, 187], "is_numb": [7, 51, 59, 78], "is_compar": [7, 51], "capitalis": 7, "float": [7, 11, 18, 19, 33, 42, 57, 59, 66, 68, 78, 79, 82, 87, 91, 93, 99, 101, 130, 136, 177, 183, 187, 188, 197, 209, 215, 217, 228, 236, 238, 253, 261, 264], "faster": [7, 11, 33, 36, 51, 59, 82, 91, 92, 105, 107, 109, 110, 127, 186, 187, 188, 190, 192, 193, 194, 198, 200, 204, 209, 210, 213, 214, 216, 229, 232], "expr1": [7, 12, 101, 183, 215, 267], "4142135623731": [7, 197, 215], "primari": [7, 11, 12, 14, 15, 18, 51, 63, 81, 181, 184, 230, 236], "predict": [7, 163, 209, 235], "inequ": [7, 8, 18, 22, 51, 183, 190, 205, 207, 211], "expreal": 7, "restrict": [7, 18, 33, 40, 51, 52, 59, 87, 94, 95, 163, 184, 187, 192, 194, 212], "fuzzy_and": [7, 8, 18], "fuzzy_or": [7, 8], "is_extended_nonneg": 7, "classmethod": [7, 18, 25, 27, 28, 33, 35, 40, 42, 43, 45, 46, 51, 57, 58, 59, 66, 82, 87, 101, 149, 160, 161, 163, 186, 188, 192, 193, 197, 205, 223, 228], "is_extended_r": 7, "is_infinit": 7, "is_extended_neg": 7, "is_extended_posit": [7, 8], "self": [7, 14, 18, 25, 27, 28, 32, 33, 42, 43, 48, 50, 51, 53, 57, 60, 61, 62, 64, 65, 66, 67, 78, 82, 87, 91, 106, 116, 158, 163, 173, 175, 176, 184, 186, 188, 190, 192, 193, 197, 199, 204, 205, 223, 242], "arg": [7, 15, 18, 25, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 45, 48, 50, 51, 52, 53, 55, 56, 58, 59, 61, 62, 64, 66, 67, 68, 73, 76, 78, 81, 82, 83, 84, 85, 87, 89, 91, 93, 101, 132, 138, 141, 143, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 173, 177, 181, 183, 186, 188, 190, 192, 193, 194, 197, 199, 200, 203, 204, 205, 206, 209, 213, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 235, 236, 238, 242, 243], "_eval_is_finit": 7, "is_extended_nonposit": 7, "_eval_is_algebra": 7, "is_nonzero": [7, 66], "_eval_is_integ": 7, "_eval_is_zero": [7, 18], "pick": [7, 17, 52, 56, 127, 157, 159, 272], "__new__": [7, 18, 33, 42, 51, 267], "verifi": [7, 20, 31, 42, 48, 52, 53, 114, 184, 190, 196, 213, 215, 216, 218, 219, 249, 272], "importantli": [7, 18, 194, 232], "reject": [7, 8, 91, 210, 238], "_eval_is_": 7, "is_algebra": [7, 51, 188], "minim": [7, 14, 18, 31, 42, 43, 47, 50, 51, 52, 76, 78, 81, 91, 106, 118, 132, 186, 187, 188, 189, 190, 193, 196, 206, 209, 210, 215, 235, 239], "interfer": [7, 197], "determinist": [7, 42, 78, 91, 190, 191], "reach": [7, 91, 101, 192, 193, 213], "advantag": [7, 13, 18, 28, 31, 33, 51, 52, 78, 81, 87, 91, 98, 167, 186, 187, 194, 205, 210, 213, 216, 232, 264, 266, 268, 272], "leav": [7, 18, 33, 51, 78, 87, 91, 110, 124, 147, 163, 204, 232, 261, 267, 272], "claus": [7, 81], "flow": [7, 192], "condit": [7, 8, 33, 42, 51, 53, 57, 59, 69, 70, 73, 74, 75, 77, 78, 81, 87, 91, 93, 94, 95, 101, 107, 110, 116, 124, 127, 130, 132, 176, 182, 194, 197, 200, 207, 210, 212, 213, 215, 216, 217, 222, 255, 272], "inner": [7, 50, 76, 87, 146, 149, 150, 155, 157, 158, 161, 163, 173, 176, 186, 192, 199, 242], "optimis": [7, 213], "elementari": [7, 8, 14, 18, 42, 51, 52, 55, 58, 59, 73, 76, 78, 82, 87, 91, 128, 156, 159, 189, 193, 194, 201, 235, 236, 245, 255], "stage": [7, 32, 50, 91, 204, 272], "briefli": [7, 185, 190], "canon": [7, 14, 33, 35, 40, 42, 43, 47, 51, 52, 53, 57, 67, 76, 81, 87, 91, 93, 109, 140, 144, 163, 165, 168, 170, 190, 198, 205, 206, 209, 215, 217, 223, 235, 272], "readi": [7, 12, 113, 187, 197, 213], "managedproperti": [7, 51], "metaclass": [7, 51], "relev": [7, 12, 14, 15, 33, 49, 64, 79, 80, 106, 109, 111, 116, 168, 177, 181, 187, 207, 213, 214, 223, 228, 249], "default_assumpt": 7, "initi": [7, 15, 27, 42, 46, 51, 52, 53, 56, 59, 67, 69, 70, 73, 74, 75, 76, 79, 91, 93, 95, 97, 99, 101, 106, 109, 111, 113, 114, 116, 118, 123, 125, 126, 127, 130, 131, 135, 143, 152, 174, 175, 177, 181, 182, 190, 192, 193, 197, 203, 207, 209, 213, 215, 216, 222, 230, 237, 238, 242, 243, 244, 245, 246], "_ask": 7, "_eval_i": 7, "enumer": [7, 35, 38, 40, 43, 46, 54, 58, 76, 81, 91, 192, 193, 207, 232, 235], "randomis": [7, 225, 260], "unresolv": 7, "factrul": 7, "_assume_rul": 7, "preprocess": [7, 78, 195], "defined_fact": 7, "full_impl": 7, "defaultdict": [7, 51, 235], "precomput": [7, 56, 91, 236], "static": [7, 25, 33, 42, 43, 45, 51, 57, 64, 65, 66, 67, 84, 95, 116, 124, 183, 197, 203, 205, 217, 229], "knowabl": 7, "stdfactkb": 7, "whose": [7, 15, 18, 32, 34, 35, 40, 43, 50, 51, 52, 57, 61, 65, 67, 68, 74, 78, 81, 87, 91, 111, 125, 135, 158, 168, 174, 175, 178, 181, 185, 186, 188, 192, 193, 204, 205, 209, 213, 214, 215, 217, 223, 228, 232, 235, 236, 242, 244, 246, 248], "_eval_is_r": [7, 18, 193], "_assumpt": [7, 51], "share": [7, 12, 18, 52, 91, 188, 192, 197, 217, 230], "amongst": [7, 215], "exhaust": [7, 12, 23, 207, 235, 265], "indirectli": 7, "execut": [7, 20, 33, 79, 82, 130, 183, 197, 213, 216, 226, 228, 230, 231, 236, 238, 241, 252, 266, 271], "manifest": [7, 185], "jointli": 7, "fundament": [7, 18, 31, 34, 41, 69, 76, 78, 87, 168, 187, 192, 210, 213, 217, 268], "theoret": [7, 32, 34, 42, 52, 191, 192, 207, 264], "upon": [7, 33, 51, 91, 113, 116, 125, 126, 127, 130, 157, 163, 178, 180, 181, 205, 213, 222, 229, 248, 272], "relat": [8, 11, 12, 14, 15, 26, 28, 29, 31, 34, 35, 41, 42, 49, 53, 56, 57, 58, 67, 73, 76, 78, 82, 87, 91, 97, 104, 118, 121, 124, 130, 132, 137, 145, 147, 173, 176, 179, 180, 182, 183, 184, 190, 192, 193, 194, 196, 197, 201, 203, 204, 207, 209, 210, 212, 213, 215, 216, 217, 235, 249, 253, 255, 272], "isposit": 8, "xpo": 8, "xneg": 8, "mayb": [8, 9], "strictgreaterthan": 8, "analogu": [8, 29, 50, 65, 187, 188], "piecewis": [8, 18, 33, 50, 58, 59, 78, 94, 161, 197, 199, 200, 215, 216, 217, 236, 262], "nonetyp": [8, 33], "consider": [8, 12, 51, 92, 105, 187, 196, 205, 210, 213, 245], "quirk": 8, "did": [8, 11, 15, 51, 78, 91, 105, 121, 168, 190, 194, 205, 215, 226, 236, 264, 266, 272], "both_posit": 8, "falsei": 8, "both_positive_bett": 8, "negat": [8, 18, 29, 51, 57, 81, 101, 173, 186, 188, 190, 193], "branch": [8, 13, 31, 51, 56, 57, 58, 59, 77, 194, 207, 216, 267, 272], "fuzzy_not": [8, 18], "both_positive_best": 8, "simpler": [8, 18, 51, 55, 59, 75, 76, 121, 181, 190, 206, 207, 209, 213, 215, 216, 272], "silent": [8, 55, 91, 229], "easier": [8, 12, 51, 95, 114, 116, 180, 188, 192, 194, 207, 213, 216, 230, 236, 245, 266, 272, 273], "carefulli": [8, 51, 173, 190, 199], "truth": [8, 26, 27, 28, 29, 30, 51, 82, 209, 255], "bitwis": [8, 54, 81], "produc": [8, 11, 14, 15, 18, 32, 42, 51, 52, 64, 78, 81, 87, 173, 187, 192, 193, 197, 204, 213, 214, 215, 217, 226, 228, 232, 233, 235, 271], "footnot": [8, 168, 267, 268, 271], "machin": [9, 11, 13, 14, 198, 209, 213, 261], "imag": [9, 11, 42, 120, 130, 132, 136, 184, 188, 190, 197, 205, 216], "os": [9, 228, 238, 239], "choos": [9, 14, 42, 47, 51, 53, 56, 87, 91, 95, 99, 118, 128, 163, 167, 173, 180, 181, 189, 193, 194, 197, 204, 206, 207, 213, 214, 217, 228, 233, 272], "cd": [9, 13, 14, 216, 235], "dockerfil": 9, "htmldoc": 9, "sympy_htmldoc": 9, "apt": [9, 13], "python3": [9, 11, 33, 93, 197, 228], "sphinx": [9, 12, 15, 16, 57, 213, 228, 233], "texliv": [9, 11, 197], "dvipng": 9, "librsvg2": 9, "bin": [9, 10, 11, 13, 14, 79, 197, 228, 235], "imagemagick": 9, "docbook2x": 9, "graphviz": [9, 15, 267, 271], "pip": [9, 11, 20, 93], "txt": [9, 197], "mpmath": [9, 11, 13, 18, 19, 33, 56, 59, 87, 92, 130, 187, 188, 197, 205, 215, 231, 236], "packag": [9, 11, 20, 22, 79, 92, 93, 98, 124, 130, 177, 197, 228, 239, 247, 248, 266], "rpm": 9, "distribut": [9, 11, 20, 42, 49, 51, 59, 67, 78, 94, 95, 162, 185, 188, 189, 193, 197, 223], "prerequisit": 9, "dnf": [9, 81], "medium": [9, 18, 132, 133, 136, 137, 147, 190, 258], "tool": [9, 15, 18, 19, 42, 79, 86, 87, 92, 101, 130, 181, 184, 189, 190, 197, 208, 229, 235, 241, 249, 254, 256], "homebrew": 9, "brew": 9, "sh": 9, "docbook": 9, "librsvg": 9, "conda": [9, 11, 13, 20, 93], "forg": [9, 11, 93], "success": [9, 15, 32, 42, 51, 59, 76, 78, 91, 116, 173, 184, 190, 192, 205, 206, 213, 215, 216, 217, 235, 242, 243], "tricki": [9, 51, 76], "subsystem": [9, 197], "linux": [9, 20], "workaround": [9, 236], "microsoftdoc": 9, "wsl": 9, "blob": [9, 78], "win10": 9, "md": [9, 12, 15, 226, 233], "prompt": [9, 14], "transfer": [9, 98, 99, 101, 132, 216], "termin": [9, 42, 51, 57, 79, 91, 177, 197, 204, 228, 271], "html": [9, 11, 12, 14, 15, 29, 33, 35, 43, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 68, 78, 79, 87, 91, 99, 191, 197, 200, 202, 205, 206, 210, 213, 217, 229, 231, 233, 235, 236, 268], "directori": [9, 11, 14, 15, 20, 28, 33, 213, 228, 229, 238], "folder": 9, "prepend": [9, 32, 42, 87, 101, 170, 223], "mnt": 9, "navig": 9, "cygwin": 9, "msys2": 9, "virtual": [9, 12, 16, 20, 51, 67, 181, 265], "partial": [9, 31, 42, 49, 50, 51, 53, 55, 56, 57, 91, 93, 130, 157, 173, 176, 178, 188, 189, 191, 194, 197, 199, 206, 209, 211, 213, 214, 218, 224, 242, 248, 262, 272], "workflow": [9, 11, 13, 17, 23, 130, 187, 230, 236], "viabl": [9, 52], "64": [9, 36, 42, 91, 129, 182, 196, 206, 215, 217, 228, 235, 238, 271], "chocolatei": 9, "choco": 9, "rsvg": 9, "chose": [9, 52], "rm": [9, 33], "Be": [9, 12, 14, 18, 31, 51, 81, 87, 190, 213, 216, 224, 236], "sure": [9, 12, 14, 15, 18, 33, 42, 51, 63, 113, 114, 143, 168, 193, 194, 204, 213, 215, 216, 229, 235, 264, 267, 272], "filesystem": 9, "makefil": 9, "subdirectori": 9, "svg": [9, 79, 177], "_build": [9, 14], "web": [9, 15, 52, 63, 130, 179, 191, 210], "browser": 9, "drop": [9, 57, 78, 92, 121, 188, 190], "menu": 9, "told": 9, "load": [9, 33, 51, 79, 94, 95, 97, 106, 109, 113, 117, 119, 131, 143, 177], "ll": [9, 32, 49, 87, 118, 180, 181, 226], "step": [9, 12, 13, 16, 18, 23, 31, 33, 42, 46, 47, 50, 51, 52, 59, 75, 76, 78, 87, 91, 92, 100, 109, 121, 124, 125, 130, 131, 165, 176, 181, 183, 187, 188, 190, 193, 197, 198, 199, 202, 205, 206, 207, 209, 210, 211, 213, 215, 217, 222, 229, 235, 236, 262], "reload": 9, "monitor": 9, "detect": [9, 11, 24, 31, 84, 87, 91, 183, 187, 197, 213, 214, 216, 218, 235, 253, 271], "procedur": [9, 34, 36, 42, 48, 49, 50, 78, 87, 109, 128, 190, 192, 209, 210, 215, 216, 242, 268], "8000": [9, 94], "localhost": 9, "port": [9, 93, 116, 135], "finish": [9, 33, 34, 157, 231, 269], "stop": [9, 12, 33, 34, 43, 51, 87, 91, 183, 203, 205, 213, 217], "ctrl": 9, "detach": 9, "mode": [9, 10, 51, 79, 93, 135, 158, 177, 193, 197, 228, 239, 259], "livehtml": 9, "action": [9, 11, 15, 42, 80, 155, 158, 168, 193, 209, 216], "99": [9, 33, 51, 52, 87, 91, 190, 191], "math": [9, 11, 14, 18, 25, 29, 32, 34, 42, 51, 59, 61, 78, 87, 91, 92, 114, 124, 178, 183, 188, 191, 196, 197, 213, 214, 217, 229, 230, 236, 246, 247, 248, 249, 250, 254, 261, 262, 266], "doubl": [9, 14, 15, 31, 33, 47, 51, 52, 58, 87, 93, 108, 123, 124, 180, 187, 197, 206, 207, 230, 272], "backtick": [9, 14, 15], "render": [9, 11, 14, 15, 33, 51, 79, 177, 183, 197, 271], "resourc": [9, 14, 15, 18, 87, 191, 213, 229, 239], "style": [9, 16, 21, 32, 51, 79, 157, 177, 183, 197, 216, 271], "guid": [9, 11, 16, 17, 18, 20, 32, 51, 58, 114, 127, 197, 223, 256, 258, 265, 269, 270], "tip": [9, 14, 21, 51, 127, 213, 214, 272], "xelatex": 9, "latexmk": 9, "chrome": 9, "chromium": 9, "xetex": 9, "font": [9, 79, 177, 197], "lmodern": 9, "cask": 9, "tap": 9, "dejavu": 9, "strawberryperl": 9, "miktex": [9, 11], "dejavufont": 9, "appdata": 9, "microsoft": 9, "click": 9, "dev": [9, 11, 12, 13, 233], "sympy_debug": [10, 78, 238], "unix": [10, 228, 229], "window": [10, 238, 259], "nice": [10, 12, 14, 20, 51, 63, 87, 91, 114, 127, 130, 183, 197, 207, 238, 267], "enabl": [11, 15, 18, 20, 51, 78, 79, 91, 95, 114, 116, 163, 173, 177, 197, 213, 217, 228, 233, 236, 268, 271, 272], "certain": [11, 15, 18, 20, 30, 32, 33, 42, 49, 51, 55, 59, 67, 76, 78, 91, 93, 127, 173, 174, 184, 187, 190, 192, 197, 198, 204, 207, 209, 210, 213, 216, 217, 219, 230, 231, 236, 242, 244, 250, 272], "mention": [11, 12, 14, 18, 42, 76, 78, 101, 116, 131, 132, 178, 207, 210, 213, 217, 245, 246, 247, 248, 268], "incomplet": [11, 14, 15, 51, 56, 59, 185, 187, 193, 199, 215, 216], "webpag": [11, 15], "io": [11, 15, 79, 197, 236], "arithmet": [11, 19, 33, 51, 52, 55, 82, 87, 91, 152, 159, 182, 183, 184, 186, 187, 188, 190, 191, 195, 198], "hood": 11, "importerror": 11, "extern": [11, 20, 79, 93, 97, 99, 116, 124, 177, 187, 188, 198, 205, 209, 217, 228, 229], "latest": [11, 13, 20, 32, 231, 233, 236], "git": [11, 16, 19], "repositori": [11, 13, 15, 20], "vast": [11, 78, 189], "wrap": [11, 12, 14, 26, 27, 28, 29, 33, 40, 51, 57, 79, 92, 177, 181, 183, 186, 187, 190, 197, 200, 216, 222, 229, 233, 236, 238, 267], "ci": [11, 15, 59, 76, 197, 271], "local": [11, 24, 26, 27, 28, 51, 53, 76, 93, 121, 123, 175, 184, 190, 215, 228], "gmpy2": [11, 187, 188], "gmp": 11, "speed": [11, 14, 28, 33, 42, 51, 52, 55, 82, 91, 92, 103, 108, 109, 110, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 130, 131, 134, 137, 172, 173, 176, 181, 182, 194, 197, 198, 204, 209, 213, 229, 232, 235, 267, 268], "experi": [11, 116, 216, 217], "interfac": [11, 15, 31, 51, 79, 108, 124, 132, 158, 177, 179, 181, 187, 190, 195, 216, 229, 230, 259], "notebook": [11, 18, 20, 79, 177, 236, 270, 271], "init_sess": [11, 79, 271], "flag": [11, 12, 18, 31, 33, 42, 43, 47, 49, 51, 64, 66, 78, 81, 82, 83, 87, 91, 114, 147, 183, 188, 190, 193, 194, 197, 198, 199, 205, 209, 210, 213, 215, 216, 223, 228, 229, 235, 238, 261, 272], "auto_symbol": [11, 79, 93], "auto_int_to_integ": [11, 79], "qt": 11, "mathjax": [11, 15, 79, 177, 271], "preview": [11, 32, 231, 260], "save": [11, 31, 51, 87, 91, 183, 196, 215, 232], "viewer": [11, 15, 32, 197, 231], "parser": [11, 84, 93, 124, 130, 228], "mathematca": 11, "maxima": [11, 93, 216], "parse_maxima": [11, 93], "antlr": [11, 93, 114], "runtim": [11, 33, 51, 110, 260], "autolev": [11, 116, 124], "antlr4": [11, 93], "compil": [11, 33, 79, 92, 105, 130, 177, 197, 209, 222, 228, 229, 230, 252, 266], "clang": [11, 93], "bind": [11, 33, 197, 229], "parse_c": 11, "lfortran": [11, 93], "dpll": 11, "sat": [11, 27], "solver": [11, 14, 27, 59, 87, 91, 113, 124, 130, 131, 186, 189, 209, 210, 214, 228, 252, 253, 263, 265], "pycosat": 11, "pysat": 11, "minisat": 11, "minisat22": 11, "heavi": [11, 217, 267], "rudimentari": [11, 18, 190], "text": [11, 12, 14, 15, 18, 20, 33, 42, 52, 56, 57, 59, 69, 76, 79, 82, 87, 91, 128, 168, 177, 183, 184, 197, 204, 210, 213, 216, 217, 228], "pyglet": [11, 197, 259], "pygletplot": [11, 183], "vehicl": 11, "principl": [11, 52, 82, 91, 134, 184, 185, 190, 206, 215], "third": [11, 12, 33, 42, 43, 51, 59, 61, 65, 101, 160, 166, 180, 185, 193, 207, 213, 216, 217, 233, 235, 249, 262, 267], "scipi": [11, 33, 51, 59, 105, 130, 157, 197, 217, 229, 236, 261, 270], "cupi": [11, 92], "cuda": [11, 92], "gpu": [11, 92, 130], "jax": [11, 92, 236], "xla": [11, 92], "tpu": [11, 92], "tensorflow": [11, 236], "learn": [11, 13, 15, 22, 87, 128, 181, 206, 216, 261, 264, 265, 266, 270], "numexpr": [11, 236], "subpackag": [11, 252], "f2py": [11, 33, 92, 229, 230], "ufuncifi": [11, 33, 229, 253], "cython": [11, 33, 92, 130, 229], "codegen": [11, 18, 92, 197, 229, 234, 254, 260], "llvm": 11, "gcc": [11, 230], "ifort": 11, "therefor": [11, 12, 14, 18, 34, 42, 47, 51, 55, 59, 67, 80, 91, 101, 178, 181, 182, 183, 187, 190, 193, 197, 213, 216, 217, 218, 223, 242, 243, 245, 246, 248, 250], "aeseara": 11, "graph": [11, 14, 43, 59, 80, 87, 92, 186, 197, 216, 235, 267, 271], "llvmlite": 11, "llvmjitcod": 11, "jit": [11, 206], "llvm_callabl": 11, "tensorflow_cod": 11, "wurlitz": 11, "captur": [11, 51, 235], "stat": [11, 252, 259], "pymc": [11, 217], "use_symengin": 11, "mechan": [11, 18, 21, 51, 74, 78, 94, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 145, 149, 152, 158, 160, 161, 162, 165, 172, 173, 179, 182, 258, 259], "liealgebra": [11, 80], "matchpi": 11, "softwar": [11, 15, 78, 191, 266], "_sage_": 11, "import_modul": 11, "runner": [11, 228], "script": [11, 13, 14, 24, 59, 177, 229], "cloudpickl": 11, "pickl": 11, "util": [11, 12, 13, 14, 15, 31, 38, 40, 42, 43, 56, 57, 62, 63, 64, 67, 81, 82, 86, 91, 92, 133, 167, 170, 186, 189, 190, 194, 197, 209, 210, 211, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 254, 258], "test_pickl": 11, "pdf": [11, 15, 16, 23, 31, 32, 42, 52, 54, 56, 73, 78, 87, 91, 94, 95, 99, 183, 191, 196, 197, 200, 206, 209, 210, 213, 217, 235, 242], "view": [11, 14, 16, 33, 34, 51, 87, 94, 165, 168, 181, 183, 190, 197, 213, 216, 230, 232, 235], "host": [11, 15], "onlin": [11, 14, 109, 210, 235], "sympy_benchmark": 11, "readm": 11, "yourself": [11, 18, 33, 116, 231, 262], "reproduc": [11, 193, 228, 272], "asv": 11, "airspe": 11, "veloc": [11, 105, 106, 108, 109, 111, 116, 117, 118, 121, 122, 123, 127, 128, 130, 137, 165, 168, 172, 173, 176, 178, 181, 248, 250], "properli": [12, 18, 32, 51, 57, 63, 76, 87, 110, 114, 125, 140, 144, 147, 161, 185, 187, 197, 213, 216, 226, 230, 236, 268, 273], "someon": [12, 213, 232, 265], "screen": [12, 79, 177, 181, 228, 271], "opportun": [12, 14, 209], "lightli": 12, "pain": 12, "frustrat": 12, "go": [12, 13, 14, 15, 18, 20, 32, 33, 42, 52, 57, 76, 109, 114, 116, 128, 130, 131, 157, 168, 176, 183, 192, 193, 204, 207, 213, 264, 266, 267, 270, 272], "seek": [12, 215], "stabl": [12, 14, 18, 51, 79, 87, 93, 101, 261], "supplant": 12, "newer": [12, 180, 215], "solveset": [12, 18, 130, 195, 211, 212, 215, 273], "superior": [12, 197], "older": [12, 15, 74, 114, 187, 197, 215], "cogniz": 12, "attr": [12, 33], "unsur": [12, 14], "mark": [12, 14, 15, 99, 136, 148, 210, 226, 231, 233], "privat": [12, 14, 51, 52, 114, 183, 230], "experiment": [12, 209, 260], "unnecessari": [12, 14, 15, 29, 33, 193, 196, 217, 228, 265], "usabl": [12, 187, 188, 197, 216, 266], "breakag": 12, "serious": 12, "taken": [12, 33, 34, 39, 42, 49, 50, 51, 56, 57, 59, 68, 82, 91, 101, 103, 105, 106, 127, 130, 160, 166, 173, 176, 182, 183, 187, 192, 193, 200, 204, 206, 207, 216, 217, 222, 230, 235, 242], "commun": [12, 15, 20, 182, 213, 215, 217, 268], "count": [12, 15, 43, 50, 51, 52, 56, 61, 81, 87, 90, 91, 158, 193, 205, 206, 209, 216, 217, 223, 232, 235], "basi": [12, 51, 53, 80, 84, 87, 106, 121, 123, 148, 157, 158, 160, 163, 165, 168, 171, 172, 173, 178, 180, 182, 184, 186, 188, 189, 193, 196, 207, 209, 215, 216, 218, 223, 244, 245, 248, 270], "constitut": [12, 15, 78, 91, 197], "codifi": 12, "clean": [12, 228], "categor": [12, 87, 184], "guidelin": [12, 16, 23, 213], "convent": [12, 14, 15, 17, 18, 42, 43, 47, 50, 51, 52, 56, 57, 59, 61, 66, 76, 78, 81, 93, 94, 95, 101, 104, 116, 130, 132, 136, 157, 158, 160, 165, 166, 178, 183, 197, 213, 214, 216, 217, 223, 250, 264, 272], "prefix": [12, 33, 51, 87, 91, 167, 170, 171, 187, 190, 194, 210, 213, 229, 230, 235, 258], "univers": [12, 33, 182, 191, 205, 210, 215, 216], "adher": [12, 15, 76], "despit": [12, 51, 272], "harm": 12, "peopl": [12, 14, 23, 54, 59, 78, 87, 168, 217], "upgrad": [12, 24], "fire": 12, "uncondition": 12, "defeat": [12, 213], "heavili": [12, 204, 214], "easi": [12, 19, 21, 39, 43, 51, 59, 76, 92, 111, 118, 124, 180, 184, 187, 192, 197, 204, 207, 210, 213, 216, 221, 222, 223, 261, 262, 264, 265, 266, 267, 268, 271], "account": [12, 57, 87, 200, 209, 213], "nonetheless": [12, 52, 165, 209, 213], "deprecat": 12, "come": [12, 20, 42, 47, 49, 50, 51, 57, 59, 76, 78, 87, 92, 105, 114, 116, 125, 166, 181, 184, 187, 190, 192, 193, 207, 210, 213, 216, 226, 228, 233, 236, 264, 266, 267, 270, 272], "especi": [12, 14, 18, 50, 87, 105, 114, 130, 157, 172, 181, 209, 213, 215, 228, 261, 262], "migrat": 12, "lengthen": 12, "impos": [12, 95], "mainten": [12, 28], "burden": [12, 197], "schedul": 12, "Being": [12, 47, 61, 67, 187], "assur": [12, 91, 193], "secondli": [12, 18, 207], "rigor": [12, 59, 181, 230], "surfac": [12, 57, 59, 65, 76, 95, 132, 136, 163, 183, 209, 242, 249], "enough": [12, 14, 42, 51, 55, 78, 87, 90, 91, 101, 114, 130, 188, 190, 197, 213, 262, 264], "backport": 12, "extrem": [12, 42, 55, 61, 67, 78, 84, 97, 127, 181, 209, 217], "model": [12, 55, 81, 91, 101, 110, 116, 118, 119, 120, 135, 193, 206, 217], "temptat": [12, 206, 272], "fudg": 12, "earli": [12, 51, 91, 152, 210], "acceler": [12, 92, 111, 116, 121, 123, 127, 128, 130, 166, 173, 176, 178, 201, 232, 250], "myst": [12, 15], "checkbox": 12, "tag": [12, 197, 215], "nest": [12, 51, 53, 57, 59, 78, 82, 101, 185, 187, 190, 197, 207, 209, 212, 216, 217, 218, 219, 221, 224, 235, 236, 267], "per": [12, 52, 87, 92, 137, 173, 178, 183, 188, 193, 194, 242, 245, 247, 250], "sympy_deprecation_warn": [12, 226, 231, 233], "multilin": [12, 197], "deprecated_since_vers": [12, 226, 231, 233], "active_deprecations_target": [12, 226, 231, 233], "target": [12, 14, 31, 32, 33, 51, 91, 107, 143, 147, 148, 206, 209, 212, 215, 216, 226, 229, 230, 233, 272], "stacklevel": [12, 226, 231, 233], "visual": [12, 51, 91, 95, 101, 124, 196, 209], "src": [12, 14, 15, 93, 213, 228, 233], "cross": [12, 15, 16, 51, 61, 67, 82, 87, 94, 95, 108, 122, 128, 130, 143, 173, 179, 180, 181, 210, 242, 245, 247, 248], "xyz": [12, 63, 93, 94, 173, 181, 242, 243, 246], "header": [12, 33, 229, 230], "warns_deprecated_sympi": [12, 226, 231, 233], "merg": [12, 33, 42, 43, 51, 171, 197, 205, 217, 228, 235, 236], "decor": [12, 18, 42, 51, 59, 226, 228, 233, 234, 237, 238, 260], "emit": [12, 197, 226, 233], "assert": [12, 32, 40, 41, 42, 43, 51, 61, 63, 93, 127, 205, 213, 214, 226, 233, 235], "behavior1": 12, "behavior2": 12, "ignore_warn": [12, 226, 231, 233, 236], "trigger": [12, 18, 43, 93, 163, 226], "somewher": [12, 14, 15, 33], "paragraph": [12, 14, 15, 18, 32], "metadata": [12, 32, 231, 233], "rst": [12, 14, 15, 34, 213, 228], "markdown": [12, 16], "markup": [12, 197], "clearli": [12, 14, 18, 91, 181, 187, 207, 268], "delin": 12, "newlin": [12, 87, 238], "charact": [12, 14, 15, 51, 52, 76, 79, 93, 143, 173, 177, 197, 213, 228, 230, 233, 238, 264, 266, 271], "larger": [12, 15, 18, 33, 42, 43, 50, 51, 52, 59, 76, 84, 87, 91, 118, 122, 188, 194, 198, 204, 209, 215, 230, 232, 264, 272], "simplify_thi": [12, 14, 231], "ref": [12, 42, 57, 87, 99, 130, 202, 217, 231, 268], "is_this_zero": [12, 233], "summar": [12, 228, 272], "fit": [12, 32, 76, 87, 90, 91, 181, 197, 213, 238, 267], "word": [12, 15, 18, 29, 38, 47, 50, 51, 52, 57, 59, 81, 101, 114, 128, 184, 187, 192, 209, 210, 213, 215, 230, 242, 246, 264], "uniqu": [12, 31, 32, 34, 42, 45, 47, 51, 52, 53, 56, 59, 66, 69, 74, 78, 80, 81, 87, 91, 108, 152, 161, 173, 181, 184, 185, 187, 190, 192, 198, 202, 209, 210, 213, 215, 216, 217, 221, 230, 235, 238, 245, 250, 264, 267], "across": [12, 15, 42, 49, 51, 62, 78, 95, 162, 163, 170, 183, 197, 232, 234, 235, 236, 270], "__init__": [12, 14, 18, 51, 109, 192, 242, 243, 267], "func_nam": [12, 33, 57, 82, 238], "simplfiy_thi": 12, "trivial": [12, 34, 42, 47, 50, 51, 52, 57, 66, 81, 84, 87, 91, 125, 163, 184, 185, 190, 193, 207, 210, 213, 216, 221], "dozen": [12, 18, 272], "search": [12, 14, 31, 42, 43, 47, 49, 51, 57, 87, 91, 114, 184, 192, 193, 206, 207, 209, 211, 214, 217, 229], "upcom": 12, "bot": 12, "push": [13, 76], "handbook": [13, 14, 34, 41, 42, 49, 59, 91], "internet": 13, "nn": 13, "brows": 13, "clone": [13, 20, 190], "download": [13, 15, 20, 32, 73, 191, 206, 213, 217, 242, 266], "77": [13, 40, 59, 87, 91, 196, 197, 230], "mib": 13, "remot": [13, 51], "collabor": 13, "upstream": 13, "fetch": 13, "checkout": [13, 32], "isol": [13, 31, 57, 188, 192, 193, 194, 215, 230], "flake8": 13, "usernam": 13, "consult": [13, 34], "test_bas": [13, 228], "similari": 13, "qualiti": [13, 92, 197], "code_qu": 13, "fdiff": [14, 18, 33, 51, 57, 58, 59], "argindex": [14, 18, 33, 51, 57, 58, 59], "heavisid": [14, 58, 76, 78, 197], "diracdelta": [14, 58, 78, 158, 163, 197], "scope": [14, 33, 124, 127, 226, 272], "od": [14, 18, 74, 109, 113, 124, 130, 211, 214, 273], "aim": [14, 15, 19, 69, 76, 168, 184, 207, 213, 216, 265, 266], "comment": [14, 15, 33, 42, 114, 116, 194, 197, 230, 235], "distract": 14, "consum": [14, 33, 59, 110, 127], "human": [14, 76, 165, 193, 197], "beings": 14, "english": [14, 52], "reader": [14, 15, 18, 32, 34, 128, 184, 232, 265, 270], "machineri": [14, 51, 192, 236], "platform": [14, 51, 163, 181, 213, 229], "restructuredtext": [14, 15], "concis": [14, 130], "quick": [14, 15, 18, 51, 87, 91, 209, 215, 236], "tripl": [14, 68, 87, 181, 182, 184, 192, 238], "raw": [14, 15, 33, 51, 52, 57, 92, 93, 157, 162, 187, 188, 193, 205, 209, 271], "backslash": [14, 51, 197], "blank": [14, 93, 110, 183], "close": [14, 33, 50, 51, 55, 56, 59, 67, 69, 76, 78, 80, 101, 117, 183, 184, 185, 191, 192, 205, 215, 216, 230, 262, 272], "rare": [14, 18, 51, 213, 217, 226, 264], "underlin": [14, 15], "numpydoc": [14, 15], "review": [14, 15, 129], "plural": [14, 15], "clutter": 14, "amount": [14, 32, 51, 52, 63, 124, 173, 178, 181, 190, 200, 228, 242, 243], "notifi": 14, "awai": [14, 32, 34, 52, 94, 95, 116, 192, 197], "label": [14, 32, 33, 45, 51, 61, 74, 78, 97, 136, 143, 147, 152, 161, 163, 183, 197, 198, 200, 209, 222, 223, 271], "elabor": [14, 21, 23, 178, 248], "suffic": [14, 185], "clarifi": 14, "thought": [14, 51, 204, 213, 264, 267], "perfect": [14, 18, 42, 51, 91, 210, 216, 266, 267], "test_": [14, 228], "coverage_doctest": 14, "coverag": 14, "6868680200532414": 14, "dsolv": [14, 214, 215, 262, 266, 273], "hint": [14, 18, 32, 35, 42, 51, 54, 57, 78, 82, 87, 91, 101, 130, 140, 144, 160, 162, 163, 173, 193, 204, 207, 211, 215, 272], "1st_exact": 14, "readabl": [14, 24, 32, 79, 105, 193, 196, 197, 204, 206, 239], "accept": [14, 18, 32, 33, 42, 51, 57, 65, 78, 81, 82, 84, 87, 90, 93, 114, 157, 173, 177, 183, 192, 193, 196, 197, 198, 205, 207, 209, 215, 229, 236, 242, 243, 246, 268], "30": [14, 25, 31, 33, 37, 51, 52, 54, 55, 56, 59, 65, 67, 78, 82, 87, 88, 91, 94, 95, 114, 136, 186, 188, 192, 193, 197, 203, 206, 209, 217, 218, 272], "13": [14, 25, 33, 40, 42, 47, 51, 52, 54, 56, 59, 63, 64, 65, 66, 76, 81, 87, 91, 95, 99, 101, 114, 128, 183, 190, 192, 193, 194, 196, 197, 203, 210, 212, 214, 215, 217, 218, 228, 229, 251], "14": [14, 33, 40, 42, 46, 47, 49, 51, 52, 56, 57, 59, 76, 87, 88, 91, 92, 94, 99, 114, 182, 183, 186, 188, 190, 191, 192, 193, 194, 196, 197, 206, 209, 210, 213, 215, 217, 218, 262], "16": [14, 25, 31, 33, 42, 43, 46, 50, 51, 52, 56, 59, 60, 61, 65, 76, 78, 81, 87, 88, 90, 91, 95, 178, 185, 186, 187, 190, 191, 192, 193, 196, 197, 203, 205, 206, 207, 210, 217, 218, 235, 242, 250, 268], "18": [14, 42, 43, 54, 56, 59, 61, 64, 67, 83, 87, 91, 95, 99, 101, 103, 174, 182, 190, 191, 196, 197, 205, 206, 210, 213, 215, 216, 217, 218, 244], "19": [14, 42, 51, 54, 59, 61, 64, 67, 87, 91, 93, 94, 188, 192, 193, 196, 206, 210, 212, 215, 229, 261], "23": [14, 31, 42, 43, 51, 54, 57, 59, 65, 67, 87, 91, 94, 128, 188, 193, 196, 203, 210, 235], "24": [14, 25, 31, 39, 43, 44, 51, 54, 56, 59, 65, 73, 78, 87, 91, 94, 95, 99, 101, 160, 170, 182, 188, 190, 192, 193, 194, 196, 199, 204, 210, 213, 217, 232, 235, 251, 262, 268], "26": [14, 40, 51, 52, 54, 63, 87, 91, 94, 95, 193, 210, 217], "27": [14, 33, 34, 42, 46, 56, 61, 87, 91, 94, 95, 101, 103, 190, 215], "28": [14, 33, 42, 50, 54, 55, 59, 87, 91, 116, 206, 210, 213, 267], "29": [14, 25, 40, 42, 43, 51, 52, 54, 56, 57, 64, 65, 87, 91, 101, 152, 187, 205, 217], "enclos": [14, 61, 62, 67, 90, 102, 197, 207, 236], "colon": [14, 51], "absent": [14, 35], "signatur": [14, 18, 27, 28, 43, 51, 87, 230, 231, 235, 236], "brace": [14, 56, 114, 197], "opt_cs": 14, "optim": [14, 33, 35, 42, 55, 91, 105, 130, 143, 147, 193, 197, 198, 206, 209, 217, 229], "fragment": [14, 52], "embed": [14, 15, 19, 31, 43, 51, 79, 192], "hyperlink": 14, "classnam": 14, "erf": [14, 59, 76, 78, 197, 207, 217], "gauss": [14, 59, 78, 87, 132, 185, 192, 195, 215, 216], "erfc": [14, 59, 76, 197, 217], "complementari": [14, 59, 101], "erfi": [14, 59, 76, 197], "erf2": [14, 59, 197], "erfinv": [14, 59, 197, 217], "invers": [14, 25, 42, 43, 51, 52, 53, 58, 59, 77, 78, 84, 87, 91, 109, 152, 156, 157, 160, 165, 168, 184, 185, 186, 188, 190, 193, 194, 197, 199, 207, 209, 213, 215, 216, 217, 235, 268, 272], "erfcinv": [14, 59, 197], "erf2inv": [14, 59, 197], "besselj": [14, 59, 73, 197, 209, 213, 266], "besselbas": [14, 59], "bessel": [14, 15, 57, 58, 69, 78, 193, 209, 213, 217, 266], "bess": [14, 59, 197, 209, 213, 217], "besselk": [14, 59, 197, 217], "cite": [14, 21], "citat": [14, 50, 191], "augment": [14, 33, 87, 109, 125, 126, 130, 195, 215, 216, 233, 236, 273], "freeli": [14, 24, 85, 184], "wolfram": [14, 29, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 78, 87, 91, 93, 191, 197, 199, 200, 202, 205, 210, 217, 235, 268], "mathworld": [14, 29, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 78, 87, 91, 191, 200, 205, 210, 217, 235], "nist": [14, 56, 57, 59, 168], "dlmf": [14, 56, 57, 59], "suffer": 14, "rot": [14, 67, 160], "publish": [14, 76, 207], "clickabl": 14, "kozen89": [14, 190, 191], "kozen": [14, 191], "landau": [14, 191, 262], "decomposit": [14, 42, 49, 83, 84, 87, 186, 188, 189, 190, 191, 199, 272], "1989": [14, 191, 215], "pp": [14, 42, 43, 49, 50, 51, 52, 56, 57, 78, 82, 87, 118, 127, 182, 185, 190, 191, 213, 214, 217], "445": [14, 191], "456": [14, 51, 191], "abramowitz": [14, 59], "milton": [14, 59], "stegun": [14, 59], "iren": [14, 59], "chapter": [14, 42, 59, 91, 114, 191], "ed": [14, 43, 59, 87, 191, 215, 217], "1965": [14, 59, 82], "luke": [14, 59, 76, 207], "Their": [14, 51, 59, 76, 183, 187, 190, 207], "1969": [14, 52, 59, 76, 191, 207], "bessel_funct": [14, 59], "typefunct": [14, 59], "mathrm": [14, 20, 41, 50, 51, 52, 59, 76, 78, 87, 188, 190, 197, 205, 207, 213, 216, 217, 260, 262, 266], "plane": [14, 25, 51, 59, 61, 63, 64, 66, 67, 77, 78, 99, 116, 135, 136, 180, 181, 205, 216, 251, 272], "pole": [14, 59, 76, 100, 101, 136, 204, 207, 213], "obei": [14, 59, 182, 197, 207], "mirror": [14, 59, 78, 136], "conjug": [14, 29, 40, 41, 42, 51, 58, 59, 82, 87, 103, 132, 146, 149, 163, 193, 197, 213, 223], "polygamma": [14, 56, 59, 197], "eulergamma": [14, 55, 56, 59], "40": [14, 33, 54, 56, 59, 61, 68, 82, 87, 91, 94, 183, 194, 196, 197, 217, 238, 261], "288037795340032417959588909060233922890": [14, 59], "49801566811835604271": [14, 59], "15494982830181068512": [14, 59], "lowergamma": [14, 59, 217], "uppergamma": [14, 56, 59, 197, 217], "upper": [14, 28, 50, 52, 55, 59, 60, 67, 68, 82, 83, 84, 87, 90, 91, 99, 108, 156, 163, 182, 186, 188, 190, 192, 193, 197, 207, 215, 222, 242], "loggamma": [14, 15, 59, 197], "digamma": [14, 56, 59, 197], "trigamma": [14, 59, 197], "euler": [14, 31, 32, 50, 51, 52, 55, 58, 59, 67, 73, 79, 91, 160, 173, 177, 181, 182, 197, 213, 217, 242, 243], "gamma_funct": [14, 59], "gov": [14, 56, 57, 59], "gammafunct": [14, 59], "gammabetaerf": [14, 56, 59], "inlin": [14, 79, 177, 197, 230], "pretti": [14, 18, 32, 33, 59, 78, 79, 87, 91, 95, 101, 116, 177, 207, 209, 216, 250, 260, 263, 266, 268, 272], "literatur": [14, 76, 167, 189], "illumin": 14, "tone": 14, "narr": [14, 16, 265], "excerpt": 14, "geometri": [14, 60, 61, 62, 64, 65, 66, 67, 68, 78, 124, 136, 189, 244, 251, 252, 259, 266], "autofunct": 14, "convex_hul": [14, 63, 67, 68], "are_similar": [14, 62, 63, 68], "autoclass": 14, "linearent": [14, 61, 64, 65, 66, 67], "rai": [14, 61, 63, 64, 65, 67, 68, 132, 136], "curv": [14, 32, 53, 63, 78, 91, 94, 132, 183, 184, 213, 242, 251, 262], "ellips": [14, 62, 63, 67, 135, 183, 197, 271], "circl": [14, 18, 51, 61, 62, 63, 65, 66, 67, 68, 76, 136, 143, 183, 216, 242, 244, 251], "polygon": [14, 61, 62, 63, 68, 77, 183, 251], "regularpolygon": [14, 62, 63, 67, 183], "triangl": [14, 18, 32, 56, 62, 63, 67, 68, 78, 82, 91, 182, 183, 244, 251], "cumbersom": 14, "viewcod": 14, "qualifi": [14, 239], "trigonometr": [14, 18, 51, 58, 78, 194, 200, 208, 212, 213, 216, 236, 253, 263, 273], "trail": [14, 43, 91, 188, 190, 193, 233, 238], "www": [14, 15, 25, 31, 42, 43, 52, 54, 56, 59, 73, 78, 79, 91, 99, 177, 191, 196, 197, 206, 209, 210, 213, 217, 235, 268, 271], "master": [14, 15, 20, 78, 228], "dynamicsymbol": [14, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 130, 131, 173, 176, 177, 178, 179, 180, 181], "sine": [14, 18, 51, 57, 59, 76, 78, 137, 194, 200, 206, 261], "troubleshoot": [14, 127], "referencefram": [14, 106, 107, 109, 111, 114, 116, 117, 118, 121, 122, 123, 125, 126, 127, 128, 130, 131, 174, 175, 176, 177, 178, 179, 180], "frame": [14, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 119, 121, 123, 125, 126, 127, 128, 130, 131, 172, 173, 174, 175, 176, 178, 179, 180, 232, 242, 248], "notimplementederror": [14, 31, 50, 61, 64, 68, 78, 87, 99, 186, 192, 196, 205, 212, 213, 214, 215, 216], "outsid": [14, 29, 42, 51, 59, 62, 67, 82, 91, 105, 168, 181, 193, 209, 262, 267], "plot": [14, 18, 20, 60, 61, 63, 64, 67, 74, 79, 87, 94, 95, 100, 130, 147, 150, 156, 200, 252, 258, 259, 266, 271], "ahead": [14, 91], "submit": 14, "matrixcommon": [14, 84, 86, 87], "dyadic": [14, 54, 106, 111, 114, 116, 121, 123, 124, 130, 175, 177, 179, 244, 249], "shorten": 14, "highli": [15, 51, 55, 98, 187, 193, 202, 230], "teach": [15, 43, 52, 217], "conduct": 15, "survei": 15, "commonli": [15, 43, 56, 59, 78, 87, 105, 180, 185, 213, 248], "offer": [15, 32, 33, 42, 51, 92, 105, 130, 172, 181, 187, 192, 232, 249], "bring": [15, 76, 109, 122, 186, 200, 209, 268], "greater": [15, 29, 43, 51, 57, 59, 76, 80, 91, 101, 190, 193, 196, 204, 209, 213, 215, 217, 232, 235, 248, 262], "clariti": [15, 42, 176], "mission": [15, 32, 85], "ca": [15, 19, 20, 52, 59, 78, 196, 197, 235], "dedic": [15, 33, 189, 230, 246, 248], "essenti": [15, 35, 46, 51, 55, 57, 58, 59, 76, 111, 116, 178, 179, 181, 184, 185, 188, 192, 204, 207, 245, 248, 249, 250], "deviat": [15, 136, 217], "docutil": 15, "sourceforg": [15, 32], "net": [15, 32, 67, 191, 213, 217, 235], "ext": [15, 184, 188], "autodoc": 15, "graphic": [15, 99], "linkcod": 15, "readthedoc": [15, 79, 236], "sphinx_math_dollar": 15, "delimit": [15, 51, 197], "dollar": [15, 266], "sphinxext": 15, "plot_direct": 15, "figur": [15, 51, 52, 61, 62, 64, 66, 67, 78, 95, 114, 158, 180, 181, 182, 183, 194, 197, 251, 272], "devel": [15, 182], "supersed": [15, 114, 130], "pep": [15, 33, 51, 81], "257": [15, 91, 215], "four": [15, 33, 43, 51, 55, 59, 81, 84, 91, 97, 102, 115, 124, 128, 136, 173, 183, 184, 190, 193, 197, 205, 210, 213, 215, 217, 218, 242, 243, 246], "websit": [15, 270], "advertis": 15, "site": [15, 91, 231], "upload": [15, 91], "spars": [15, 84, 86, 87, 157, 186, 189, 192, 193, 194, 217, 218, 256, 267], "substanti": [15, 92], "edit": [15, 78, 87, 91, 190, 191, 193], "resid": 15, "standalon": [15, 130], "restructur": 15, "surround": [15, 51, 68, 136, 205, 238], "strip": [15, 52, 78, 91, 190, 233, 238], "unimport": 15, "bullet": 15, "whitespac": [15, 51, 233], "meta": [15, 51, 213, 214], "stackexchang": [15, 61], "5020": 15, "wikibook": [15, 78, 79], "overleaf": 15, "mathematical_express": 15, "verbatim": 15, "_rewrit": 15, "_expand": 15, "sentenc": [15, 81], "thumb": [15, 81, 235], "greek": [15, 24, 51, 91, 93, 184, 197], "\u03b1": [15, 182, 196], "italic": 15, "emphasi": [15, 187], "asterisk": 15, "stirl": [15, 43, 58, 235], "permut": [15, 34, 36, 38, 39, 41, 44, 47, 48, 49, 52, 56, 59, 82, 84, 87, 110, 163, 182, 186, 188, 193, 210, 218, 219, 223, 235, 272], "partit": [15, 38, 42, 58, 91, 118, 127, 129, 217, 232, 234], "consecut": [15, 33, 42, 47, 50, 52, 56, 67, 209, 215], "group": [15, 32, 37, 38, 43, 44, 47, 48, 49, 51, 54, 56, 80, 81, 91, 142, 151, 152, 163, 182, 183, 184, 192, 193, 209, 213, 215, 216, 223, 235], "pairwis": [15, 29, 32, 51, 56, 68, 87, 91, 210, 215], "ital": [15, 197], "talk": [15, 52, 184, 192, 245], "referenc": [15, 16, 35, 40, 91, 113, 116, 160, 192], "american": [15, 37, 52], "color": [15, 79, 99, 177, 197, 228, 235, 259, 271], "colour": 15, "quotat": 15, "line_color": [15, 183, 200], "aesthet": [15, 183], "ariti": [15, 183], "unrestrict": [15, 40, 235], "necklac": [15, 235], "bracelet": [15, 235], "revers": [15, 35, 40, 43, 50, 51, 52, 57, 78, 79, 81, 87, 91, 101, 162, 173, 177, 184, 186, 190, 193, 194, 197, 198, 205, 209, 213, 235, 272], "person": 15, "chebyshev": [15, 31, 51, 78, 190, 193], "pafnuti": 15, "lvovich": 15, "tchebychev": 15, "transliter": 15, "russian": 15, "chebyshevt": [15, 59, 197], "orthogonalpolynomi": 15, "t_n": [15, 56, 59, 78, 190, 246], "tens": 15, "inclus": [15, 50, 97, 156, 184, 203, 204, 205, 216], "pronoun": 15, "gender": 15, "neutral": 15, "he": [15, 56, 76, 190], "she": [15, 216], "extran": [15, 213], "belittl": 15, "obvious": [15, 34, 42, 166, 180, 187, 207], "straightforward": [15, 18, 42, 52, 87, 207], "unwelcom": 15, "judgement": 15, "phrase": [15, 52], "friendli": [15, 33, 76, 230], "toc": 16, "setup": [16, 21, 23, 33, 51, 117, 118, 119, 132, 173, 190, 193, 195, 196, 207, 228, 229, 231, 241, 271], "rebuild": [16, 18, 51, 193, 267], "live": [16, 24, 34, 130, 192, 210], "server": 16, "debug": [16, 21, 23, 33, 51, 78, 116, 152, 228, 229, 238], "incompat": 16, "combinatori": [18, 35, 43, 50, 51, 58, 59, 199, 208, 235, 237, 272], "primepi": [18, 91], "matrixexpr": [18, 82, 84, 85], "dig": [18, 33, 267], "th": [18, 25, 34, 42, 43, 49, 52, 53, 55, 56, 57, 59, 80, 81, 87, 91, 109, 188, 190, 192, 193, 199, 202, 207, 210, 213, 215, 217, 218, 223], "undefin": [18, 27, 28, 31, 51, 57, 58, 59, 78, 84, 93, 106, 181, 192, 203, 204, 207, 236, 262, 273], "handler": [18, 21, 26, 27, 28, 29, 30, 51, 58, 87], "spectrum": 18, "matter": [18, 31, 40, 43, 50, 51, 56, 76, 78, 128, 204, 235, 266, 267], "use_unicod": [18, 31, 32, 33, 55, 59, 78, 79, 87, 95, 101, 135, 177, 182, 184, 185, 196, 197, 198, 216, 217, 262, 266, 268, 271, 272, 273], "neq": [18, 51, 57, 59, 76, 78, 82, 168, 181, 182, 190, 193, 210, 213, 215, 272], "lambdifi": [18, 33, 59, 116, 197, 215, 229, 234, 253, 260, 263], "np": [18, 58, 74, 91, 114, 229, 236], "arang": [18, 229, 261], "ultim": [18, 57, 168], "cosin": [18, 51, 57, 59, 66, 78, 106, 108, 173, 181, 193, 194, 200, 206, 217, 242, 272], "todai": [18, 184], "operatornam": [18, 56, 57, 59, 76, 78, 182, 185, 193, 197, 200, 205, 207, 215], "modern": [18, 33, 184, 191, 197], "recal": [18, 51, 87, 190, 192, 207, 264, 266, 267, 273], "redefin": [18, 43, 51, 125, 127, 185, 236], "antipattern": [18, 265], "stai": [18, 192], "trig": [18, 51, 78, 193, 197, 206, 209, 272], "wouldn": 18, "cheap": [18, 51, 91], "expens": [18, 51, 127, 206, 213, 214, 215, 231, 268], "as_two_term": [18, 51], "split": [18, 33, 51, 52, 55, 76, 78, 93, 190, 192, 195, 196, 197, 217, 223, 228, 235, 240, 267, 272], "hadn": 18, "wors": [18, 81, 209], "expand_trig": [18, 261], "mid": [18, 34, 52, 55, 95, 205, 210], "troubl": [18, 59], "bigger": [18, 33, 51, 56, 207, 213, 272], "deduc": [18, 33, 76, 81, 207, 266], "disallow": [18, 51, 193, 198, 209, 231], "goe": [18, 87, 204, 207, 216, 264, 267], "great": [18, 132, 194, 197, 210, 236], "simplest": [18, 32, 81, 87, 91, 92, 182, 183, 194, 198, 206, 209, 213, 262, 272], "is_": [18, 21, 51], "\u03c0": [18, 55, 135, 197, 216, 262, 266, 272, 273], "as_independ": [18, 51, 216], "coeff": [18, 51, 53, 81, 130, 188, 192, 193, 203, 209, 213, 215, 223, 272], "apart": [18, 25, 42, 47, 51, 55, 57, 78, 178, 185, 188, 190, 193, 196, 199, 210, 216, 223, 246, 248, 267], "subexpress": [18, 33, 51, 82, 105, 107, 192, 193, 197, 204, 208, 216, 230, 236, 253, 261], "is_even": [18, 39, 42, 43], "nonreal": [18, 215], "cosh": [18, 51, 58, 59, 70, 76, 194, 197, 198, 207, 209, 215, 268, 272], "5919532755215": 18, "_eval_is_nonneg": 18, "exercis": [18, 42, 232, 265, 272], "_eval_is_posit": 18, "iff": [18, 29, 43, 52, 81, 87, 181, 184, 192, 207, 210, 228], "as_add": [18, 51], "pi_": 18, "fuzzy_": 18, "deduct": [18, 33], "somehow": 18, "subtl": [18, 206], "nontrivi": [18, 42, 51, 91], "_eval_evalf": [18, 193], "prec": [18, 51, 61, 67, 91, 99, 182, 188, 193, 194, 209, 215], "dp": [18, 33, 51, 54, 59, 91, 187, 188, 215, 231], "53": [18, 52, 54, 87, 132, 185, 187, 188], "459697694131860": 18, "hook": [18, 92, 197], "_eval_rewrit": [18, 51], "rewritten": [18, 51, 56, 57, 59, 78, 114, 160, 204, 209, 213, 215, 272], "caller": 18, "ve": [18, 116], "nonintegr": 18, "isint": 18, "xy": [18, 31, 32, 65, 87, 111, 181, 183, 184, 190, 197, 209, 216, 251, 267, 272], "happi": 18, "demand": [18, 24], "_eval_expand_": 18, "expand_": 18, "predefin": [18, 53, 130, 187, 197, 198, 209, 216, 223, 242, 246, 254], "expand_log": [18, 33, 209], "_eval_expand_trig": 18, "sophist": [18, 92, 215], "x_1": [18, 34, 41, 42, 52, 56, 73, 87, 158, 185, 188, 190, 193, 199, 210, 216], "ldot": [18, 34, 41, 42, 50, 51, 52, 56, 59, 76, 91, 95, 168, 184, 185, 188, 190, 192, 197, 200, 204, 207, 210, 215, 218, 272], "x_k": [18, 52, 190], "_eval_deriv": [18, 51, 59], "dy": [18, 33, 53, 68, 87, 94, 104, 130, 193, 197, 210, 213, 214, 262], "dz": [18, 94, 104, 207], "argumentindexerror": 18, "linear": [18, 22, 32, 33, 43, 50, 51, 52, 54, 55, 59, 64, 71, 74, 76, 78, 80, 82, 84, 86, 94, 98, 101, 108, 109, 111, 116, 118, 119, 124, 125, 129, 130, 135, 157, 160, 161, 176, 183, 184, 188, 189, 190, 192, 193, 195, 203, 205, 207, 214, 215, 216, 235, 256, 273], "varion": 18, "middl": [18, 59, 67, 76, 87, 95, 143, 183, 207, 272], "iverson": 18, "printmethod": [18, 197], "latexprint": [18, 260], "_latex": [18, 197], "_print": [18, 197], "_m": [18, 59], "_n": [18, 52, 56, 59, 78, 207, 216], "arcversin": 18, "aversin": 18, "tupl": [18, 25, 27, 28, 31, 32, 33, 34, 42, 43, 50, 52, 53, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 73, 76, 78, 82, 87, 90, 91, 93, 94, 95, 99, 106, 109, 111, 113, 125, 126, 128, 130, 132, 147, 148, 149, 152, 157, 160, 161, 162, 163, 173, 176, 181, 183, 184, 186, 187, 188, 189, 190, 194, 195, 197, 198, 199, 203, 205, 209, 210, 213, 214, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 235, 236, 238, 242, 245, 262, 267, 268, 271], "im": [18, 30, 51, 58, 76, 85, 184, 197, 198, 205, 213, 268], "sinh": [18, 31, 51, 55, 58, 59, 70, 76, 194, 197, 198, 207, 272], "expand_complex": 18, "analog": [18, 44, 50, 52, 56, 128, 180, 181, 184, 185, 186, 190, 202, 218, 235], "vers": 18, "geometr": [18, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 87, 132, 181, 184, 191, 217, 259, 268], "angl": [18, 25, 57, 59, 60, 61, 62, 64, 65, 66, 67, 97, 103, 108, 113, 114, 116, 117, 118, 119, 127, 132, 135, 136, 137, 160, 168, 173, 180, 181, 182, 197, 206, 216, 242, 243, 246, 272], "horizont": [18, 32, 61, 64, 66, 82, 97, 135, 183, 186, 197], "distanc": [18, 32, 35, 43, 61, 64, 65, 66, 67, 94, 95, 104, 105, 108, 118, 119, 132, 136, 166, 176, 178, 250], "rightmost": [18, 163], "scientificamerican": 18, "uniti": [18, 57, 59, 76, 158, 192], "secret": [18, 52], "teacher": 18, "taught": [18, 78], "nr": 18, "sake": [18, 56, 210], "simplic": [18, 207, 209, 213, 215], "divisor": [18, 29, 42, 51, 52, 87, 91, 184, 185, 187, 188, 190, 191, 192, 193, 196], "hardwar": [18, 33], "round": [18, 31, 33, 51, 55, 56, 57, 87, 136, 192, 193, 204, 206, 217], "contrast": [18, 50, 51, 118, 187, 207, 213, 266], "regard": [18, 34, 52, 59, 79, 131, 163, 184, 185, 199, 215, 216], "vriabl": 18, "c99codeprint": [18, 33, 197], "cxx11codeprint": [18, 197], "cfunction": [18, 254], "e2": [18, 31, 51, 54, 61, 68, 78, 87, 91, 99, 114, 187, 192, 204, 213, 216, 217, 235], "93accumulate_oper": 18, "fused_multipli": 18, "93add": 18, "ccode": [18, 33, 197, 222, 230], "cxxcode": [18, 33, 197], "_ccode": [18, 197], "_y": [18, 128, 177, 180, 181], "_z": [18, 78, 128, 180, 181, 217], "_cxxcode": [18, 197], "std": [18, 197, 217], "28318530717959": 18, "trigonometricfunct": 18, "inversetrigonometricfunct": 18, "reciprocaltrigonometricfunct": 18, "bypass": [18, 213], "fragil": 18, "tend": [18, 24, 33, 51, 190, 192, 202, 204, 207, 265, 272], "prone": [18, 33, 51], "move": [18, 42, 43, 51, 52, 65, 67, 94, 108, 116, 118, 124, 151, 176, 180, 181, 208, 209, 218, 227, 248], "speech": 19, "beer": 19, "lightweight": [19, 33, 192, 266], "anaconda": 19, "pypi": 20, "continuum": [20, 258], "analyt": [20, 56, 59, 76, 87, 124, 213, 258, 262], "qtconsol": [20, 271], "nicer": [20, 51, 122], "setupegg": 20, "enthought": 20, "canopi": 20, "activepython": 20, "spack": 20, "freshli": 20, "starter": 20, "sy": [20, 33, 53, 114, 130, 197, 228, 239, 247, 264], "wherev": [20, 114, 209, 216, 245], "visit": [20, 35, 42, 51, 56, 269], "chat": 20, "gitter": [20, 268], "excel": [20, 55, 192, 270], "ticket": 20, "area": [21, 51, 61, 63, 67, 68, 94, 95, 249], "deeper": [21, 221, 267], "explor": [21, 125, 126, 183, 192, 232, 272], "implic": [21, 51, 81, 190], "vs": [21, 189, 197, 228], "nonlinear": [22, 50, 130, 193, 215, 216], "diophantin": [22, 91, 190, 211], "739085133215161": [22, 215], "9y": 22, "3x": [22, 51, 93, 190, 216, 264], "cc": [22, 52, 67, 182, 185, 187, 189, 193, 268], "4xy": [22, 178, 250], "8y": 22, "7y": [22, 210], "colloqui": 22, "terminolog": [22, 223], "central": [23, 42, 48, 59, 61, 67, 106, 111, 128, 183, 192, 210, 217], "task": [23, 57, 124, 130, 187, 192, 262, 269], "export": [24, 197], "latin": 24, "slightli": [24, 33, 47, 91, 93, 116, 183, 184, 188, 190, 193, 197, 207, 209], "clunki": 24, "collid": [24, 223], "win": 24, "session": [24, 33, 51, 63, 78, 177, 181, 187, 233, 260, 264, 271], "throwawai": 24, "surviv": 24, "foo": [24, 31, 33, 51, 158, 177, 235, 238], "report": [24, 31, 42, 64, 82, 91, 194, 205, 216, 228, 268, 273], "stick": 24, "clash": [24, 51, 87], "_clash1": [24, 51], "_clash2": [24, 51], "multi": [24, 51, 52, 115, 124, 130, 143, 147, 157, 183, 197, 216], "_clash": [24, 51], "union": [24, 29, 31, 33, 40, 42, 49, 81, 93, 184, 192, 197, 203, 204, 212, 216, 217, 235], "sympif": [24, 51], "real_field": 25, "instanti": [25, 32, 33, 43, 51, 59, 64, 66, 67, 84, 87, 153, 161, 173, 183, 184, 188, 192, 217, 242, 245], "q1": [25, 87, 105, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 131, 172, 173, 175, 176, 177, 180, 181, 187, 242, 243], "q2": [25, 105, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 131, 172, 173, 175, 176, 177, 180, 181, 187, 242, 243], "r1": [25, 61, 64, 80, 94, 95, 136, 173, 178, 193, 242], "euclideanspac": 25, "realnormedalgebra": 25, "r2": [25, 53, 64, 80, 82, 94, 95, 136, 173, 193, 197, 209, 242], "q3": [25, 105, 116, 117, 119, 121, 122, 123, 125, 173, 175, 176, 181, 242, 243], "axi": [25, 44, 56, 57, 61, 62, 64, 65, 67, 73, 76, 78, 84, 87, 94, 99, 104, 108, 114, 116, 118, 121, 122, 123, 127, 130, 131, 132, 135, 136, 160, 173, 175, 176, 178, 180, 181, 183, 188, 216, 242, 243, 246, 248, 251], "bi": [25, 51, 57, 59, 78, 181, 204, 213], "cj": 25, "dk": [25, 94, 192], "atan2": [25, 30, 53, 58, 137, 197, 242], "atan": [25, 30, 53, 55, 58, 62, 67, 75, 78, 118, 131, 132, 194, 197, 199], "arc_coplanar": 25, "arc": [25, 57, 272], "orient": [25, 63, 67, 82, 114, 116, 118, 121, 128, 130, 173, 176, 178, 180, 181, 190, 235, 242, 249, 250], "coplanar": [25, 65, 181], "ax": [25, 52, 55, 61, 64, 76, 83, 87, 94, 99, 108, 135, 160, 173, 181, 182, 183, 186, 194, 210, 213, 216, 218, 219, 222, 242, 243, 245, 248, 250, 272], "parallel": [25, 61, 64, 65, 67, 78, 98, 101, 104, 180, 181, 190, 247, 251], "vector_coplanar": 25, "is_pur": 25, "mathbf": [25, 84, 124, 125, 126, 128, 168, 172, 173, 177, 178, 180, 181, 197, 207, 218, 245, 246, 248, 250, 251], "versor": 25, "0i": 25, "0j": [25, 187], "0k": 25, "vector_part": 25, "from_axis_angl": 25, "rotat": [25, 39, 42, 44, 51, 60, 61, 62, 64, 66, 67, 82, 87, 94, 95, 108, 116, 119, 121, 123, 128, 131, 147, 160, 173, 176, 178, 180, 181, 182, 183, 235, 242, 243, 246, 248, 250], "radian": [25, 57, 60, 61, 62, 64, 65, 66, 87, 99, 114, 136, 137, 173], "from_rotation_matrix": 25, "orthogon": [25, 28, 58, 66, 80, 87, 161, 173, 181, 189, 242, 243, 249], "det": [25, 87, 88, 130, 181, 186, 268], "index_vector": 25, "mod": [25, 52, 57, 81, 87, 88, 91, 159, 184, 186, 187, 188, 190, 192, 193, 197, 199, 207, 210, 253], "magnitud": [25, 33, 50, 51, 55, 59, 92, 94, 95, 97, 99, 118, 130, 161, 170, 173, 178, 181, 183, 242, 248, 250], "norm": [25, 87, 161, 173, 188, 190, 192, 193], "indefinit": [25, 57, 75, 76, 78, 87, 188, 190, 191, 193, 202, 262], "scalar_part": 25, "is_zero_quaternion": 25, "mensor": 25, "60": [25, 37, 42, 44, 50, 51, 56, 59, 78, 87, 91, 94, 95, 196, 197, 210, 213, 235], "anti": [25, 29, 47, 57, 78, 82, 135, 140, 223], "pth": 25, "668": 25, "224": [25, 166, 191], "336": 25, "448": 25, "pow_cos_sin": 25, "900": 25, "1800": [25, 52], "2700": [25, 94], "3600": [25, 56], "rotate_point": 25, "pin": [25, 94, 95, 97, 108], "to_axis_angl": 25, "to_rotation_matrix": 25, "assumptionkei": 26, "proposit": [26, 28, 81], "is_tru": [26, 28, 29], "assumptionscontext": [26, 27, 28], "global_assumpt": [26, 27, 28], "discern": [26, 28], "refin": [26, 28, 51, 82, 184, 188, 192, 193, 209, 230], "progress": [26, 28, 91, 230], "inherit": [26, 51, 58, 81, 84, 85, 108, 152, 161, 182, 197, 217, 222, 230, 231], "askhandl": 26, "mere": [27, 28, 33, 55, 158], "thin": [27, 87, 120, 132], "dispatch": [27, 28, 29, 51, 52, 158, 197, 216, 232], "undefinedpred": [27, 28], "sexi": [27, 28], "sexyprimepred": [27, 28], "sexyprim": [27, 28], "int1": [27, 28], "int2": [27, 28], "sort": [27, 28, 32, 33, 40, 43, 47, 76, 78, 81, 87, 90, 91, 102, 105, 109, 147, 163, 168, 172, 183, 190, 193, 194, 204, 209, 210, 213, 214, 215, 221, 223, 228, 230, 235, 245, 253, 264, 266, 267], "assump": [27, 28], "r3": [27, 80, 94, 95, 209], "predicate_": [27, 28], "mathematical_log": [27, 28], "r4": [27, 80, 94], "sexy_prim": [27, 28], "resolut": [27, 28, 210], "askpredicatehandl": [27, 28], "r5": [28, 209], "r6": 28, "tautolog": 28, "calculu": [28, 51, 56, 78, 87, 130, 178, 179, 206, 217, 247, 248, 249, 252, 253, 263, 265, 270], "symmetr": [28, 30, 34, 39, 42, 43, 47, 67, 82, 83, 84, 87, 91, 172, 182, 188, 190, 193, 196, 205, 207, 223, 235], "unitari": [28, 78, 91, 147, 152], "triangular": [28, 82, 83, 87, 186, 192, 215, 217, 251], "diagon": [28, 56, 82, 83, 84, 87, 90, 113, 135, 186, 219, 220], "rank": [28, 33, 34, 35, 40, 42, 43, 45, 46, 47, 66, 80, 87, 88, 173, 175, 184, 186, 188, 190, 192, 218, 222, 223, 268], "singular": [28, 33, 43, 51, 55, 57, 58, 73, 74, 76, 78, 87, 94, 96, 127, 173, 184, 191, 204, 213, 216, 242, 253, 262], "notabl": [28, 33, 54, 59, 76, 92, 187], "truth_maintenance_system": 28, "istruepred": 29, "gt": [29, 33, 217, 235], "istruehandl": 29, "commutativepred": 29, "commutativehandl": 29, "finitepred": 29, "nor": [29, 31, 51, 81, 91, 137, 183, 193, 204, 206, 213, 223, 242], "nan": [29, 30, 57, 59, 107, 209, 217, 262], "bound": [29, 33, 34, 50, 51, 60, 61, 62, 64, 66, 67, 78, 91, 161, 188, 190, 192, 193, 197, 203, 213, 215, 216, 217, 222, 232, 238, 242], "finitehandl": 29, "r7": 29, "infinitepred": 29, "infinitehandl": 29, "symmetricpred": 29, "transpos": [29, 32, 82, 84, 87, 101, 130, 146, 173, 181, 186, 192, 210, 218, 223, 224, 268], "symmetrichandl": 29, "r8": 29, "symmetric_matrix": 29, "invertiblepred": 29, "fullrank": [29, 33], "invertiblehandl": 29, "r9": 29, "invertible_matrix": 29, "orthogonalpred": 29, "tm": [29, 136], "mm": [29, 32, 91, 109, 116, 121, 122, 161, 186], "orthogonalhandl": 29, "r10": 29, "orthogonal_matrix": 29, "unitarypred": 29, "unitaryhandl": 29, "r11": 29, "unitary_matrix": 29, "positivedefinitepred": 29, "tmz": 29, "column": [29, 32, 33, 34, 79, 81, 82, 84, 87, 88, 90, 101, 109, 113, 116, 128, 158, 165, 173, 177, 182, 186, 192, 197, 213, 216, 222, 242], "positive_definit": 29, "positivedefinitehandl": 29, "r12": 29, "definite_matrix": 29, "uppertriangularpred": 29, "m_": [29, 126, 190], "ij": [29, 163, 168, 217], "zeromatrix": [29, 84], "upper_triangular": [29, 82], "uppertriangularhandl": 29, "r13": 29, "uppertriangularmatrix": 29, "lowertriangularpred": 29, "lower_triangular": [29, 82], "lowertriangularhandl": 29, "r14": 29, "lowertriangularmatrix": 29, "diagonalpred": 29, "diagonalhandl": 29, "r15": 29, "diagonal_matrix": 29, "fullrankpred": 29, "row": [29, 32, 33, 34, 40, 43, 51, 56, 82, 83, 84, 87, 88, 90, 91, 101, 113, 114, 116, 128, 130, 131, 158, 173, 181, 186, 192, 197, 207, 216, 217, 222, 236, 242, 243], "linearli": [29, 33, 59, 75, 87, 190, 213, 215, 223], "fullrankhandl": 29, "squarepred": 29, "squarehandl": 29, "r16": 29, "square_matrix": 29, "integerelementspred": 29, "integer_el": 29, "integerelementshandl": 29, "realelementspred": 29, "real_el": 29, "realelementshandl": 29, "complexelementspred": 29, "complex_el": 29, "complexelementshandl": 29, "singularpred": 29, "singularhandl": 29, "fore": 29, "r17": 29, "singularmatrix": 29, "normalpred": 29, "normalhandl": 29, "r18": 29, "normal_matrix": 29, "triangularpred": 29, "triangularhandl": 29, "r19": 29, "triangular_matrix": 29, "unittriangularpred": 29, "1s": [29, 56, 80, 186], "unit_triangular": 29, "unittriangularhandl": 29, "evenpred": 29, "evenhandl": 29, "oddpred": 29, "oddhandl": 29, "primehandl": 29, "subject": [29, 61, 67, 95, 105, 131, 192], "compositepred": 29, "compositehandl": 29, "positivepred": 29, "interv": [29, 31, 42, 51, 55, 57, 59, 60, 61, 64, 67, 76, 78, 81, 91, 149, 158, 188, 190, 192, 193, 200, 203, 212, 216, 217, 259, 273], "positivehandl": 29, "negativepred": 29, "negativehandl": 29, "zeropred": 29, "zerohandl": 29, "nonzeropred": 29, "nonzerohandl": 29, "nonpositivepred": 29, "nonpositivehandl": 29, "nonnegativepred": 29, "nonnegativehandl": 29, "integerpred": 29, "integerhandl": 29, "r20": 29, "rationalpred": 29, "rationalhandl": 29, "r21": 29, "irrationalpred": 29, "ratio": [29, 41, 42, 50, 51, 55, 56, 59, 61, 64, 65, 66, 67, 83, 91, 101, 136, 168, 197, 206, 209, 215], "irrationalhandl": 29, "r22": 29, "realpred": 29, "disjoint": [29, 32, 40, 43, 193, 205, 235], "realhandl": 29, "r23": 29, "extendedrealpred": 29, "extendedrealhandl": 29, "hermitianpred": 29, "hermitianhandl": 29, "r24": 29, "hermitianoper": [29, 152], "complexpred": 29, "complexhandl": 29, "r25": 29, "imaginarypred": 29, "imaginaryhandl": 29, "r26": 29, "antihermitianpred": 29, "antihermitianhandl": 29, "r27": 29, "algebraicpred": 29, "askalgebraicpredicatehandl": 29, "r28": 29, "algebraichandl": 29, "transcendentalpred": 29, "transcedent": 29, "refine_pow": 30, "refine_ab": 30, "refine_arg": 30, "refine_atan2": 30, "refine_im": 30, "refine_matrixel": 30, "refine_r": 30, "refine_sign": 30, "lagrang": [31, 51, 120, 124, 193, 210], "lagrangian": [31, 109, 118, 123, 124, 126, 127], "euler_equ": 31, "r29": 31, "iter": [31, 33, 40, 42, 43, 46, 47, 51, 52, 53, 54, 56, 59, 67, 81, 91, 106, 107, 109, 110, 113, 127, 131, 148, 163, 176, 183, 184, 185, 186, 188, 190, 193, 197, 198, 199, 200, 203, 209, 210, 213, 215, 216, 217, 218, 221, 229, 230, 231, 232, 234, 236, 242, 246, 260], "eqn": [31, 216], "93lagrange_equ": 31, "decreas": [31, 33, 43, 190], "monoton": [31, 33, 68], "is_decreas": 31, "lopen": [31, 51, 205, 212, 217], "ropen": [31, 57, 205, 217], "is_increas": 31, "72": [31, 51, 64, 87, 91, 94, 182, 196], "is_monoton": 31, "is_strictly_decreas": 31, "is_strictly_increas": 31, "monotonicity_help": 31, "held": [31, 52, 127, 221, 272], "univari": [31, 50, 51, 57, 74, 78, 184, 185, 187, 188, 189, 191, 192, 193, 194, 199, 212, 215, 217], "r30": 31, "mathematical_singular": 31, "interpol": [31, 60, 130, 190, 193], "finite_diff_weight": [31, 51, 262], "estim": [31, 50, 51, 55, 76, 262], "apply_finite_diff": [31, 51, 262], "differentiate_finit": [31, 51, 262], "finite_diff": [31, 51], "x_list": [31, 262], "y_list": [31, 262], "cube": [31, 33, 35, 42, 44, 57, 78, 190, 191, 210, 216, 251], "xlist": 31, "55271367880050e": 31, "indexedbas": [31, 33, 50, 51, 197, 215, 221, 222, 229], "idx": [31, 33, 197, 221, 222, 229], "zip": [31, 41, 52, 81, 91, 193, 203, 210, 213, 232, 235], "extract": [31, 51, 78, 82, 84, 87, 91, 102, 116, 124, 172, 181, 190, 192, 193, 215, 216, 217, 228, 230, 235], "region": [31, 59, 68, 78, 183, 205, 213, 216, 217, 242, 244, 251], "bewar": [31, 59], "rung": [31, 73], "phenomenon": [31, 168, 190, 200, 267], "90": [31, 42, 49, 59, 82, 87, 93, 94, 97, 105, 114, 131, 197, 199, 209, 217, 230], "finitediff": 31, "wrt": [31, 33, 51, 53, 59, 68, 87, 114, 130, 173, 174, 190, 193, 242, 243, 244, 248], "arbitrarili": [31, 51, 64, 91, 190, 192, 204, 207, 213, 214, 217], "len": [31, 39, 40, 41, 42, 43, 47, 49, 51, 52, 56, 59, 66, 76, 81, 118, 132, 136, 147, 157, 193, 209, 213, 222, 235], "nearest": [31, 192], "furthest": [31, 52], "sublist": [31, 47, 52, 78, 160, 262], "fd": [31, 33, 163], "0th": [31, 43, 52, 59], "1st": [31, 43, 91, 101, 213, 214, 238, 262], "classic": [31, 57, 59, 87, 149, 165, 173, 181, 184, 258], "forward": [31, 33, 82, 101, 116, 124, 156, 180, 209, 228], "pai": 31, "attent": [31, 42, 57], "gridpoint": 31, "plan": [31, 105, 188, 211, 271], "mycoeff": 31, "3rd": [31, 43, 57, 91, 130, 193, 215, 218, 235], "2nd": [31, 43, 52, 91, 101, 130, 213, 218, 235], "cost": [31, 33, 91, 118, 216, 266], "yield": [31, 33, 42, 51, 52, 59, 75, 76, 91, 94, 101, 107, 157, 185, 190, 192, 193, 198, 199, 204, 205, 206, 209, 210, 215, 232, 235, 268], "poorer": 31, "grand": 31, "r31": 31, "51": [31, 87, 91], "184": [31, 213], "1988": [31, 142, 160, 190, 191], "699": 31, "706": [31, 87], "1090": [31, 193], "s0025": [31, 91], "5718": [31, 91], "0935077": 31, "continuous_domain": [31, 212], "tan": [31, 51, 56, 58, 78, 93, 107, 121, 122, 123, 127, 194, 196, 197, 204, 206, 213, 216, 272], "function_rang": 31, "OR": [31, 54, 81, 190], "critic": [31, 136, 180, 192, 216], "is_convex": [31, 67], "sym": [31, 41, 42, 47, 51, 56, 173, 197, 200, 205, 209, 210, 215, 217, 223, 235, 272], "convex": [31, 67, 68, 78], "unspecifi": [31, 51, 66, 262], "multivari": [31, 51, 59, 184, 185, 187, 188, 189, 191, 193, 194, 204, 209, 215, 216, 217, 272], "concav": [31, 132], "logartihm": 31, "r32": 31, "convex_funct": 31, "r33": 31, "ifp": 31, "illinoi": 31, "edu": [31, 35, 42, 43, 52, 54, 56, 78, 87, 91, 191, 196, 206, 209, 210, 213, 217, 242], "angelia": 31, "l3_convfunc": 31, "r34": 31, "logarithmically_convex_funct": 31, "r35": 31, "logarithmically_concave_funct": 31, "r36": 31, "concave_funct": 31, "lcim": 31, "mixtur": [31, 33, 68, 184, 230], "incommensur": 31, "not_empty_in": [31, 216], "finset_intersect": 31, "finite_set": [31, 205], "tracker": [31, 205, 216, 268], "aperiod": 31, "smallest": [31, 45, 57, 64, 66, 73, 81, 87, 91, 160, 173, 188, 233, 235], "verif": [31, 186, 215], "reliabl": [31, 51, 213, 233, 262], "henc": [31, 33, 41, 42, 51, 53, 57, 59, 63, 76, 79, 81, 91, 178, 183, 184, 185, 190, 197, 207, 210, 214, 216, 228, 232, 246, 247, 248, 267, 272], "stationary_point": 31, "stationari": [31, 217], "tikz": 32, "joyofcat": 32, "adamek": 32, "herrlich": 32, "strecker": 32, "joi": 32, "cat": [32, 172], "book": [32, 42, 52, 57, 109, 114, 117, 128, 129, 148, 191, 196, 197, 265], "katmat": 32, "uni": [32, 78, 235], "bremen": 32, "de": [32, 52, 91, 168, 182, 183, 194, 199, 210, 211, 213, 235], "acc": [32, 130, 176, 180], "pre": [32, 33, 51, 182, 183, 198, 206, 209, 215, 216, 228, 246, 250, 267], "embryon": 32, "morphism": [32, 184], "codomain": [32, 184, 192], "arrow": [32, 80, 94, 183, 197], "namedmorph": 32, "prohibit": [32, 43, 44, 173], "identitymorph": 32, "compositemorph": 32, "compos": [32, 51, 52, 118, 127, 165, 167, 168, 180, 184, 188, 192, 193, 194, 197, 199, 209], "circ": [32, 51, 62, 68, 76, 84], "compon": [32, 33, 47, 51, 53, 66, 78, 84, 87, 102, 111, 124, 128, 135, 160, 165, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 193, 195, 217, 219, 222, 223, 232, 235, 242, 244, 247, 248], "new_nam": 32, "forget": [32, 272], "act": [32, 41, 42, 43, 47, 51, 59, 67, 80, 81, 87, 94, 97, 106, 108, 113, 114, 119, 126, 135, 147, 152, 155, 156, 205, 216, 218, 246, 250, 261], "id_a": 32, "id_b": 32, "commutative_diagram": 32, "quadrupl": [32, 193], "mbox": 32, "hom": 32, "id": [32, 47, 57], "rightarrow": [32, 43, 47, 52, 56, 57, 59, 73, 74, 76, 78, 81, 82, 91, 183, 192, 204, 216, 235, 262], "law": [32, 124, 166, 181, 185], "monoid": 32, "pare1970": 32, "accompani": 32, "premis": 32, "conclus": [32, 51], "carri": [32, 33, 51, 155, 161, 168, 184, 187, 190, 192, 194, 195, 236], "premises_kei": 32, "et": [32, 78, 142, 190, 193, 194, 206, 209], "pareigi": 32, "functor": 32, "1970": [32, 87], "is_subdiagram": 32, "subdiagram": 32, "d1": [32, 47, 173, 184, 204, 217, 242], "subdiagram_from_object": 32, "preserv": [32, 33, 42, 51, 87, 161, 188, 193, 198, 199, 209], "veryuniqu": 32, "diagram_draw": 32, "diagramgrid": 32, "analys": [32, 99, 101, 130, 217], "drawn": [32, 42, 80, 183, 187, 195], "moprhism": 32, "strive": 32, "nevertheless": 32, "laid": [32, 114, 160], "width": [32, 33, 79, 177, 183, 193, 197, 228], "height": [32, 33, 67, 84, 132, 183, 184, 197, 204, 251], "emploi": [32, 50, 55, 78, 91, 193, 196, 211, 213, 217], "lai": 32, "layout": 32, "sequenti": [32, 35, 52, 57, 242, 243], "test_draw": 32, "five": [32, 40, 76, 97, 197, 210], "lemma": [32, 42, 76, 185], "fivelemma": 32, "five_lemma": 32, "arrowstringdescript": 32, "curving_amount": 32, "looping_start": 32, "looping_end": 32, "horizontal_direct": 32, "vertical_direct": 32, "label_posit": 32, "pic": 32, "princip": [32, 52, 57, 59, 76, 78, 88, 103, 116, 136, 184, 185, 186, 187, 188, 190, 192, 193, 194], "offset": [32, 33, 51, 56, 59, 222], "cell": 32, "vertic": [32, 35, 44, 45, 61, 62, 64, 66, 67, 68, 78, 80, 82, 87, 95, 113, 119, 135, 143, 182, 183, 186, 192, 197, 205, 235, 251], "disregard": 32, "unexplain": 32, "astr": 32, "dr": [32, 53, 197, 213], "12mm": 32, "loop": [32, 33, 91, 101, 117, 173, 183, 194, 197, 213, 232, 235, 267], "correspondingli": 32, "label_displac": 32, "arrow_styl": 32, "dash": 32, "xypicdiagramdraw": 32, "formatt": 32, "utilis": 32, "xypic": 32, "drawer": 32, "xymatrix": 32, "ld": 32, "arrow_formatt": 32, "therebi": 32, "default_arrow_formatt": 32, "farther": 32, "centr": [32, 48, 183], "default_formatt": 32, "45": [32, 51, 56, 67, 87, 91, 97, 193, 194, 210], "_3mm": 32, "default_curving_amount": 32, "cm": [32, 130, 217], "_1cm": 32, "default_curving_step": 32, "h1": [32, 111], "1cm": 32, "rr": [32, 51, 69, 186, 187, 189, 193, 194], "h_": [32, 42, 47, 59, 78], "_2cm": 32, "mask": [32, 197], "diagram_format": 32, "proceed": [32, 34, 76, 78, 129, 191, 207], "xypic_draw_diagram": 32, "shortcut": [32, 51, 83, 181, 197, 205, 209, 272], "insert": [32, 34, 82, 93, 94, 158, 163, 197, 217, 238], "preview_diagram": 32, "png": [32, 79, 87, 94, 95, 99, 177, 183, 197, 200], "varieti": [33, 34, 43, 51, 92, 95, 128, 184, 191, 193, 217, 235], "brief": [33, 216, 228, 250], "fab": [33, 197], "cse_main": [33, 198, 209], "cse": [33, 92, 105, 152, 198, 230, 236], "meat": 33, "pycod": [33, 197], "lambdarepr": [33, 197, 236], "aesara_funct": [33, 92, 197], "float80": [33, 197], "assign_to": [33, 197], "type_alias": [33, 197], "0l": [33, 197], "powl": [33, 197], "c99": [33, 197, 230], "expm1": [33, 197], "ternari": [33, 51, 197, 210], "lack": [33, 53, 55, 111, 197, 262], "thrown": [33, 197], "fcode": [33, 197], "contract": [33, 53, 102, 163, 197, 206, 219, 220, 221, 222, 223, 224], "len_i": [33, 197], "mat_1": 33, "mat_2": 33, "jscode": [33, 197], "rh": [33, 41, 43, 51, 82, 83, 87, 109, 114, 121, 122, 123, 186, 195, 197, 199, 213, 215, 216, 247], "user_funct": [33, 197], "argument_test": [33, 197], "cfunction_str": [33, 197], "octav": [33, 130, 230, 260], "custom_funct": [33, 197], "existing_octave_fcn": [33, 197], "is_matrix": [33, 197], "my_mat_fcn": [33, 197], "my_fcn": [33, 197], "mat": [33, 84, 132, 157, 197], "octave_cod": [33, 197], "summat": [33, 50, 51, 55, 56, 59, 163, 191, 197, 200, 209, 217, 218, 221, 222, 223, 229], "mathematica_cod": [33, 197], "g1": [33, 36, 41, 42, 76, 87, 101], "g2": [33, 36, 41, 42, 76, 80, 87, 101], "gamma_1": [33, 104], "gamma_2": [33, 104], "\u03b3\u2081": 33, "\u03b3\u2082": 33, "\u03b2": [33, 182], "h_i": [33, 47], "c89": [33, 197, 230], "julia_cod": [33, 197], "rust_cod": [33, 197], "powi": [33, 197], "make_routin": [33, 230], "f95": [33, 229, 230], "matlab": [33, 105, 130, 230, 260, 268], "breadth": [33, 51, 217], "c_name": [33, 230], "c_code": [33, 230], "h_name": [33, 230], "c_header": [33, 230], "volume_result": 33, "ifndef": [33, 230], "project__test__h": [33, 230], "endif": [33, 230], "preprocessor": [33, 198, 209, 230], "global_var": [33, 230], "insensit": [33, 87, 130, 197, 228, 230], "argument_sequ": [33, 230], "routin": [33, 40, 50, 51, 52, 53, 76, 81, 82, 87, 91, 135, 163, 186, 190, 193, 196, 197, 198, 209, 210, 213, 214, 215, 216, 229, 234, 235, 248], "name_expr": [33, 230], "to_fil": [33, 230], "f_name": [33, 230], "f_code": [33, 230], "choic": [33, 43, 59, 76, 78, 92, 127, 159, 168, 172, 173, 180, 188, 190, 193, 197, 209, 213, 235, 266], "hydrogen": [33, 258], "r_nl": [33, 103, 164], "my_routin": 33, "result_var": [33, 230], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 33, "__________": [33, 185], "\u212f": [33, 135, 182, 197, 262, 266, 268, 272, 273], "assoc_laguerr": [33, 59, 197], "fcn": [33, 230], "result_5397460570204848505": [33, 230], "out_8598435338387848786": [33, 230], "examin": [33, 52, 152, 228, 230, 272], "inputargu": [33, 230], "outputargu": [33, 230], "inoutargu": [33, 230], "disk": [33, 52, 205, 216, 236], "binary_funct": [33, 92, 229], "tensor": [33, 38, 53, 58, 87, 102, 111, 128, 142, 148, 149, 150, 160, 163, 172, 173, 197, 218, 219, 221, 222, 229, 236, 245, 246, 252, 256], "binary_func": [33, 229], "servic": [33, 217], "tempdir": [33, 229], "qho_1d": [33, 139], "psi_n": [33, 139], "y_": [33, 59, 76, 103, 182], "qho": 33, "tmp": 33, "reveal": [33, 91, 216, 267], "subroutin": [33, 42, 159, 190], "autofunc": 33, "dimens": [33, 35, 52, 53, 59, 60, 62, 64, 65, 66, 68, 80, 82, 84, 87, 90, 94, 102, 118, 137, 147, 149, 152, 157, 166, 167, 170, 171, 173, 183, 186, 197, 210, 213, 215, 217, 218, 222, 223, 230, 242, 244, 246, 258], "hbar": [33, 139, 145, 158, 164, 168, 170, 182], "05457162d": 33, "14159265358979d0": 33, "0d0": [33, 197], "74126166983329d": 33, "33": [33, 51, 54, 87, 128, 136, 190, 194, 197, 217], "verbos": [33, 51, 82, 91, 197, 228, 229, 271], "mute": [33, 229], "backend": [33, 79, 92, 93, 99, 117, 119, 177, 194, 229, 236, 259], "auxiliari": [33, 78, 109, 114, 125, 213, 229], "function_nam": [33, 229], "sympy_express": [33, 229], "mandatori": [33, 197, 229], "illustr": [33, 87, 115, 118, 168, 187, 200, 204], "psi_nl": 33, "766": 33, "incur": [33, 92], "get_numpy_arrai": 33, "tight": 33, "temp": [33, 116], "alloc": [33, 57], "walk": [33, 35, 155, 158, 207], "memori": [33, 51, 91, 193, 218, 229, 232], "fuse": 33, "wise": [33, 34, 57, 82, 186, 190, 197, 203, 229], "unabl": [33, 64, 68, 93, 215, 242, 261, 262], "fortun": [33, 92, 118, 193, 194], "reconnect": 33, "autom": [33, 57, 92, 206, 229, 266], "ideolog": [33, 216], "fashion": [33, 51, 84, 116, 125, 126, 128, 181, 184, 235], "broadcast": [33, 92, 197, 222, 229], "outperform": 33, "jensen": 33, "quantit": [33, 165], "leverag": [33, 92, 197], "ufunc": [33, 92, 229, 236], "fn_numpi": 33, "fn_fortran": 33, "linspac": [33, 74, 92, 114, 130], "xx": [33, 87, 111, 181, 235], "21306132": 33, "98101184": 33, "44626032": 33, "timeit": [33, 194], "10000": [33, 55, 91, 92, 94, 215], "18891601900395472": 33, "004707066000264604": 33, "facil": 33, "comparison": [33, 50, 51, 81, 87, 114, 184, 192, 196, 215, 228, 235], "thereof": [33, 51, 184, 190, 192], "optims_c99": 33, "log1p": [33, 197], "expm1_opt": 33, "log1p_opt": 33, "exp2_opt": 33, "log2_opt": 33, "log2const_opt": 33, "funcminusoneoptim": 33, "func_m_1": 33, "opportunist": 33, "replaceoptim": 33, "toward": [33, 51, 59, 184, 204, 216], "catastroph": 33, "smaller": [33, 42, 43, 51, 52, 59, 67, 78, 84, 91, 125, 185, 187, 190, 193, 200, 206, 207, 215, 235, 261, 272], "replace_in_add": 33, "cost_funct": 33, "prioriti": [33, 74, 105, 114, 181, 236], "__call__": [33, 43, 51, 192], "exp2": [33, 197], "create_expand_pow_optim": 33, "base_req": 33, "is_symbol": [33, 82], "expand_opt": 33, "opt2": 33, "is_funct": 33, "log2": [33, 197], "matin_opt": 33, "matinv_opt": 33, "matrixsolv": [33, 197], "matrix_nod": 33, "numpyprint": 33, "doprint": [33, 197], "linalg": 33, "seriesapprox": 33, "reltol": 33, "max_ord": 33, "n_point_check": 33, "threshold": [33, 91], "largest": [33, 43, 45, 51, 57, 59, 87, 90, 91, 143, 184, 188, 215, 235], "series_approx2": 33, "1e": [33, 51, 55, 87, 99, 132, 193, 215], "series_approx3": 33, "series_approx8": 33, "sumapprox": 33, "neglect": 33, "2000": [33, 37, 78, 91, 191], "sum_approx3": 33, "sum_approx2": 33, "sum_approx1": 33, "token": [33, 76, 79, 93], "diagram": [33, 40, 80, 94, 117, 118, 119, 124, 143, 222, 246, 259, 267], "codegenast": 33, "assignmentbas": 33, "augmentedassign": 33, "addaugmentedassign": 33, "subaugmentedassign": 33, "mulaugmentedassign": 33, "divaugmentedassign": 33, "modaugmentedassign": 33, "codeblock": [33, 93], "quotedstr": 33, "intbasetyp": 33, "_sizedinttyp": 33, "signedinttyp": 33, "unsignedinttyp": 33, "floatbasetyp": 33, "floattyp": 33, "complexbasetyp": 33, "complextyp": 33, "pointer": [33, 230, 231], "functionprototyp": 33, "functiondefinit": [33, 93], "stream": [33, 52, 198, 209, 235], "functioncal": 33, "breaktoken": 33, "continuetoken": 33, "nonetoken": 33, "float32": [33, 92, 93, 236], "float64": [33, 92, 217], "codeprint": 33, "underli": [33, 43, 49, 51, 80, 87, 99, 114, 158, 171, 215, 216, 217], "complex_": 33, "bool_": 33, "intc": [33, 93], "intp": 33, "unsign": [33, 56, 209], "int8": 33, "int16": 33, "int32": 33, "int64": [33, 217], "uint8": 33, "uint16": 33, "uint32": 33, "uint64": 33, "x86": 33, "amd64": 33, "complex64": 33, "complex128": 33, "newton": [33, 59, 124, 166, 170, 190, 194], "aug_assign": 33, "tol": [33, 51, 188], "val": [33, 51, 63, 188, 192, 236], "whl": 33, "py_str": 33, "inf": [33, 43, 51, 87, 188, 193, 205, 213, 217], "exec": [33, 51, 79, 236], "1121416371": 33, "909672693737": 33, "867263818209": 33, "865477135298": 33, "865474033111": 33, "1g": 33, "3e": 33, "2003": [33, 182, 191, 197, 210], "source_format": [33, 197], "align": [33, 61, 87, 108, 181, 182, 197, 228], "op": [33, 51, 87, 152, 163, 176, 180, 206, 235, 236], "parametr": [33, 59, 60, 64, 87, 183, 210, 216, 242, 244, 251], "volatil": 33, "binop": 33, "exit": [33, 91, 228], "premad": 33, "break_": 33, "lift": [33, 47, 57, 59, 76, 188, 190, 193], "left_hand_sid": 33, "topological_sort": [33, 235], "postprocess": [33, 193, 198, 209], "topolog": [33, 51, 53, 76, 186, 205, 235], "continue_": 33, "untyp": 33, "compliant": 33, "ok": [33, 43, 197, 213], "elem": [33, 42, 184], "ijk": [33, 222], "stride": [33, 222], "lmn": 33, "cast_nocheck": 33, "alia": [33, 44, 51, 61, 67, 82, 83, 85, 89, 147, 156, 163, 184, 187, 188, 192, 196, 205, 228, 238, 272], "nbit": 33, "storag": [33, 51, 87, 157, 182, 190], "nmant": 33, "mantissa": 33, "nexp": 33, "half_precis": 33, "f16": 33, "65504": 33, "tini": [33, 51], "ep": [33, 42, 50, 188, 192, 193], "decimal_dig": 33, "cast_check": 33, "1e5": 33, "cast": [33, 84, 264], "subnorm": [33, 42], "loss": [33, 76, 163, 229, 247], "idempot": 33, "loos": [33, 51, 208], "overflow": [33, 232], "max_expon": 33, "min_expon": 33, "for_i": 33, "for_ji": 33, "for_kji": 33, "function_arg": [33, 228], "fcall": 33, "bar": [33, 59, 115, 124, 152, 158, 238], "baz": 33, "return_typ": 33, "fp": [33, 34, 51, 193, 199], "from_functionprototyp": 33, "prototyp": [33, 92, 230], "value_const": 33, "pointer_const": 33, "attr_param": 33, "looking_for": 33, "as_declar": 33, "formatstr": 33, "5g": 33, "stdout": [33, 228], "stderr": 33, "atom": [33, 43, 78, 81, 82, 103, 164, 187, 194, 197, 215, 216, 222], "oppos": [33, 236, 262], "_field": 33, "_construct_": 33, "not_in_arg": 33, "exclud": [33, 50, 51, 78, 87, 107, 130, 185, 188, 190, 193, 203, 213, 215, 228, 231, 235], "float16": 33, "inttyp": 33, "super": [33, 59, 188, 197, 242, 243], "from_expr": [33, 193], "toler": [33, 51, 55, 188, 209, 215], "42": [33, 40, 51, 54, 56, 64, 65, 67, 82, 83, 85, 87, 89, 91, 188, 210, 228], "v6": 33, "123456": [33, 51, 91], "v10": 33, "12345": [33, 55], "67894": 33, "boost_mp50": 33, "boost": 33, "multiprecis": [33, 187], "cpp_dec_float_50": 33, "r37": 33, "rtol": 33, "atol": 33, "precision_target": 33, "256": [33, 42, 91, 193, 197], "v18": 33, "123456789012345646": 33, "123456789012345649": 33, "Will": [33, 87, 93, 192, 197, 228], "decl1": 33, "decl2": 33, "alt": 33, "secondarili": [33, 193], "mathcin": 33, "cbrt": [33, 58, 197], "minu": [33, 50, 51, 178, 190, 197, 248], "0e": [33, 51], "fma": [33, 197], "cpu": [33, 92, 130], "hypot": [33, 197], "hypotenus": [33, 67], "log10": [33, 197], "ten": [33, 92], "plu": [33, 50, 87, 93, 130, 143, 197, 207, 236], "famili": [33, 35, 69, 78, 185], "commaoper": 33, "goto": 33, "preincrement": 33, "postdecr": 33, "decrement": [33, 208, 232], "postincr": 33, "increment": [33, 42, 43, 44, 50, 67, 91, 208, 217], "predecr": 33, "alignof": 33, "sizeof": 33, "struct": 33, "dsign": 33, "arrayconstructor": 33, "ac": [33, 43, 63, 97, 111, 128, 140, 210, 217, 235, 238], "95": [33, 49, 91, 190, 197, 213, 215, 230], "do1": 33, "1d0": 33, "do2": 33, "extent": 33, "intent_out": 33, "dim": [33, 53, 66, 92, 165, 171, 197, 220, 223], "arr": 33, "fortranreturn": 33, "aid": [33, 116], "implieddoloop": 33, "idl": 33, "signallib": 33, "prog": [33, 142], "myprogram": 33, "mysub": 33, "subroutinecal": 33, "passs": 33, "inout": 33, "bind_c": 33, "sum_": [33, 50, 51, 52, 56, 59, 76, 78, 82, 84, 91, 194, 199, 200, 207, 213, 217], "cmplx": [33, 197], "intent_in": 33, "intrins": 33, "isign": 33, "lbound": 33, "lb": [33, 73, 232], "literal_dp": 33, "num": [33, 42, 51, 91, 101, 188, 209, 213, 232, 238], "literal_sp": 33, "reshap": [33, 82, 114, 130, 218, 224, 235], "arrayexpr": 33, "shp": 33, "metric": [33, 43, 47, 53, 102, 209, 213, 216, 223], "snr": 33, "convolution2d": 33, "use_renam": 33, "ren": 33, "thingi": 33, "newtons_method": 33, "itermax": 33, "counter": [33, 51, 57, 63, 82, 95, 97], "raphson": 33, "criterion": [33, 42, 129, 185, 190], "dummi": [33, 47, 50, 57, 76, 78, 87, 114, 130, 158, 163, 187, 188, 192, 193, 194, 203, 204, 205, 207, 209, 213, 216, 221, 223, 226, 230, 235, 236], "netwon": 33, "algo": [33, 43], "r38": 33, "27s_method": 33, "newtons_method_funct": 33, "param": [33, 53, 87, 210], "render_as_modul": 33, "py_mod": 33, "865474033102": 33, "render_as_source_fil": 33, "printer_set": 33, "fcodeprint": [33, 197], "fpgroup": [34, 42], "studi": [34, 41, 50, 53, 87, 181, 184, 190, 193, 210, 217], "combinator": [34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 84, 91, 199, 218, 223, 232, 235, 253, 266, 272], "free_group": [34, 41, 42], "vfree_group": 34, "xfree_group": 34, "fp_group": [34, 42], "coset_enumeration_r": 34, "fall": [34, 50, 51, 56, 79, 177, 192, 197, 210, 214, 217], "famou": [34, 59, 78, 91, 210], "langl": [34, 42, 142, 182], "rangl": [34, 42, 142, 160, 182], "gen0": 34, "gen1": 34, "gen_": 34, "freegroup": 34, "x_2": [34, 41, 56, 73, 158, 185, 190, 193, 199, 210, 216], "x_3": [34, 41, 73, 158], "s_1": 34, "r_1": [34, 184, 194], "s_2": 34, "r_2": 34, "s_k": 34, "r_k": [34, 156], "s_i": [34, 47, 78, 80], "r_i": [34, 194], "reduct": [34, 87, 110, 190, 192, 208, 210], "techniqu": [34, 46, 76, 78, 197, 199, 209, 213, 216, 268], "ho05": [34, 41], "cdhw73": 34, "hav91": 34, "coset_enumeration_c": 34, "coset_enumer": 34, "relator_bas": 34, "coset_table_bas": 34, "total": [34, 40, 42, 51, 56, 67, 80, 81, 82, 84, 116, 118, 125, 132, 136, 142, 147, 160, 169, 182, 188, 190, 193, 206, 209, 213, 221, 223, 251], "influenc": [34, 94, 184, 185], "coset_table_max_limit": 34, "4096000": 34, "safeti": [34, 43, 85], "max_coset": 34, "cox": [34, 191, 193], "c_r": [34, 207], "50": [34, 42, 54, 55, 56, 59, 67, 87, 91, 94, 95, 136, 193, 197, 206, 215], "max_stack_s": 34, "500": [34, 55, 111], "deduction_stack": 34, "stack": [34, 68, 82, 130, 186, 192, 197, 226, 232, 268], "occurr": [34, 51, 91, 114, 173, 209, 217], "exce": [34, 91, 223], "modest": 34, "low_index_subgroup": 34, "conjugaci": [34, 42], "coset_t": [34, 42], "reidemeister_present": 34, "y_1": [34, 210, 217], "y_2": [34, 210, 217], "john": [34, 42, 59, 193, 210, 213], "cannon": 34, "lucien": 34, "dimino": [34, 42], "georg": [34, 184, 213, 235], "hava": 34, "jane": 34, "watson": [34, 209], "comp": [34, 213], "463": [34, 129], "490": [34, 43], "1973": [34, 52, 179], "derek": [34, 41], "holt": [34, 41, 42, 49], "chapman": [34, 41], "hall": [34, 41, 217], "crc": [34, 41, 43], "2005": [34, 41, 78, 91, 193], "xvi": [34, 41], "514": [34, 41, 191], "symposium": [34, 76, 190, 191, 207], "issac": [34, 78, 191, 215], "bonn": 34, "1991": [34, 191], "191": [34, 216], "199": 34, "acm": [34, 50, 76, 78, 191, 207, 213, 215], "graycod": 35, "kw_arg": [35, 45, 163, 222, 223], "hamiltonian": [35, 154], "edg": [35, 44, 45, 80, 186, 197, 216, 235, 271], "hamilton": [35, 82], "vertex": [35, 45, 62, 67, 78, 186], "000": [35, 55, 78, 81, 157, 235], "110": [35, 81, 213, 215, 229, 235], "010": [35, 81, 235], "011": [35, 81, 157, 235], "111": [35, 54, 61, 81, 91, 235], "101": [35, 81, 91, 157, 235], "001": [35, 55, 81, 132, 235], "delet": [35, 80, 82, 87, 194, 238, 272], "statist": [35, 52, 59, 217, 228, 266], "manner": [35, 52, 59, 127, 161, 178, 210, 213, 218, 235, 250], "generate_grai": 35, "0000": 35, "0001": [35, 55], "0011": [35, 46], "0010": 35, "0110": 35, "0111": [35, 157], "0101": [35, 157], "0100": 35, "1100": 35, "1101": 35, "1111": 35, "1110": 35, "1010": 35, "1011": 35, "1001": 35, "r39": 35, "nijenhui": 35, "wilf": [35, 50, 215], "1978": [35, 42, 168, 191], "r40": 35, "knuth": [35, 43, 232], "2011": [35, 43, 76, 91, 179, 206], "art": [35, 43, 184, 197, 199, 232, 259], "vol": [35, 43, 52, 56, 59, 76, 87, 102, 192, 193, 207, 232, 235], "addison": [35, 43, 91, 191], "weslei": [35, 43, 91, 191], "r41": 35, "reflect": [35, 39, 43, 51, 61, 62, 67, 80, 97, 132, 135, 136, 173], "brgc": 35, "6th": [35, 91], "unrank": [35, 40, 42, 43, 45], "r42": 35, "statweb": 35, "stanford": 35, "susan": 35, "s208": 35, "node12": 35, "tail": [35, 50, 51, 188, 217], "00010": 35, "random_bitstr": 35, "bitlist": [35, 46], "gray_to_bin": 35, "endian": 35, "bin_to_grai": 35, "get_subset_from_bitstr": 35, "bitstr": 35, "graycode_subset": 35, "group_construct": 36, "directproduct": [36, 39], "__mul__": [36, 42, 82, 87, 188, 192], "shift": [36, 42, 43, 45, 52, 59, 62, 66, 68, 81, 183, 188, 190, 193, 200, 207, 215, 217], "gn": 36, "named_group": [36, 39, 41, 42, 48, 49], "cyclicgroup": [36, 39, 42], "perm_group": [36, 41, 42, 43, 48, 49], "permutationgroup": [36, 39, 41, 42, 43, 48, 49], "group_numb": 37, "is_nilpotent_numb": 37, "r43": 37, "randprim": [37, 91], "pakianathan": 37, "shankar": 37, "monthli": [37, 52, 87], "107": [37, 191], "631": 37, "634": 37, "is_abelian_numb": 37, "r44": 37, "is_cyclic_numb": 37, "r45": 37, "polyhedron": [38, 42, 78, 235], "prufer": 38, "grai": [38, 46, 79, 132, 177, 183], "nilpot": [38, 42, 87], "abelian": [38, 39, 42, 80, 168, 184], "cyclic": [38, 39, 42, 43, 44, 54, 82, 91, 223, 235], "canonic": [38, 51, 206, 223], "coset": [38, 42, 47, 192], "todd": 38, "coxet": [38, 80], "subgroup": [38, 42, 43, 47, 49, 80, 91], "bibliographi": 38, "polycycl": [38, 42], "collector": 38, "symmetricgroup": [39, 41, 42, 48, 49], "transposit": [39, 42, 43, 52, 82, 84, 219], "is_group": [39, 42], "generate_schreier_sim": [39, 42], "af": [39, 42, 48, 130], "dihedralgroup": [39, 42, 49], "alternatinggroup": [39, 42, 48], "r46": 39, "symmetric_group": 39, "generators_and_rel": 39, "dihedr": [39, 43], "d_n": [39, 80, 193], "gon": 39, "bab": 39, "generate_dimino": [39, 42], "perm": [39, 41, 42, 43, 44, 49, 56, 82, 84, 87, 218], "cyclic_form": [39, 43, 44], "r47": 39, "dihedral_group": 39, "31": [39, 51, 54, 55, 67, 91, 128, 182, 193, 210], "ex": [39, 78, 102, 113, 187, 189, 192, 193, 223, 231], "r48": 39, "armstrong": 39, "abeliangroup": [39, 42], "cyclic_ord": 39, "theorem": [39, 52, 59, 61, 67, 77, 78, 82, 87, 91, 104, 105, 116, 163, 172, 180, 184, 187, 190, 204, 207, 210, 216, 249, 259], "r49": 39, "groupprop": [39, 42], "subwiki": [39, 42], "structure_theorem_for_finitely_generated_abelian_group": 39, "multiset_partit": [40, 56, 76, 232, 235], "rg": 40, "growth": [40, 91, 190, 262], "from_rg": 40, "abcd": [40, 44, 163, 235, 238], "cbead": 40, "sort_kei": [40, 51, 213], "ti": [40, 43, 51, 91], "integerpartit": [40, 235], "summand": [40, 192], "r50": 40, "partition_": [40, 56], "28number_theori": 40, "as_dict": [40, 187, 193], "as_ferr": 40, "char": 40, "ferrer": 40, "next_lex": [40, 43], "lexic": [40, 143, 235], "prev_lex": 40, "random_integer_partit": 40, "seed": [40, 42, 51, 52, 61, 64, 65, 87, 91, 190, 217, 228, 235], "85": [40, 55, 56, 87, 91, 116, 161, 182, 217], "rgs_gener": 40, "37": [40, 52, 57, 61, 87, 91, 95, 197, 210], "52": [40, 56, 91, 94, 95, 182, 196, 210, 213, 235, 262], "151": 40, "203": [40, 56], "rgs_enum": 40, "rgs_unrank": 40, "rgs_rank": 40, "pcgroup": 41, "pcg": 41, "pc_seri": [41, 42], "polycyl": 41, "pc_present": 41, "pc_sequenc": [41, 42], "miss": [41, 42, 68, 197, 215, 230, 272], "adjac": [41, 42, 43, 51, 101, 135, 186, 235], "der": [41, 42], "relative_ord": [41, 42], "polycyclic_group": [41, 42], "gen": [41, 42, 47, 48, 49, 51, 87, 184, 187, 188, 190, 192, 193, 194, 195, 203, 209, 212, 215], "is_ident": [41, 43, 51], "poss": [41, 116, 181], "pc_group": 41, "a_j": [41, 59, 76, 168, 190, 199, 207], "notin": [41, 76, 205], "_order": 41, "minimal_uncollected_subword": 41, "subword_index": 41, "i_1": [41, 163, 193, 218], "a_1": [41, 42, 52, 59, 73, 76, 82, 87, 102, 163, 168, 185, 190, 207, 210, 213, 215, 217, 272], "i_r": 41, "a_r": [41, 207], "i_2": [41, 163, 193], "s_": [41, 47, 114, 190], "s_j": [41, 80, 190], "x3": [41, 51, 56, 187, 213, 217], "collected_word": 41, "free_to_perm": 41, "bottom": [41, 42, 51, 52, 67, 82, 87, 90, 113, 192, 197, 206, 251], "pictur": [41, 197], "x_3x_2": 41, "x_3x_1": 41, "x_2x_1": 41, "x_3x_0": 41, "x_2x_0": 41, "x_1x_0": 41, "varii": 41, "derived_seri": [41, 42], "pc_resent": 41, "k_arrai": 41, "array_form": [41, 43, 44], "v_arrai": 41, "e_1": [41, 87, 184, 190, 193], "e_n": [41, 56, 80, 87, 139, 184, 193], "exponent_vector": 41, "leading_expon": 41, "dup": [42, 188, 189], "pn": [42, 118, 127], "motion": [42, 105, 109, 110, 113, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 130, 131, 176, 177, 180, 181, 217], "front": [42, 51, 116, 117, 132, 162, 188, 190, 193, 197, 209, 272], "face": [42, 44, 64, 78, 114, 190, 194, 197, 210, 251, 268], "rubik": 42, "3674160": 42, "pgroup": [42, 44], "corner": [42, 44, 82, 193, 213, 216, 236], "reset": [42, 44, 183, 190, 193, 228, 231, 233], "p10": 42, "make_perm": 42, "r51": 42, "eick": [42, 49], "brien": [42, 49], "r52": 42, "seress": 42, "r53": 42, "schreier_vector": 42, "r54": 42, "nielsen_transform": 42, "product_replacement_algorithm": 42, "r55": 42, "frank": [42, 43, 87], "celler": 42, "charl": 42, "leedham": 42, "green": [42, 183], "scott": 42, "murrai": 42, "alic": [42, 52], "niemey": 42, "r56": 42, "block_": 42, "28permutation_group_theori": 42, "r57": 42, "algorithmist": 42, "php": [42, 59, 91, 210, 217], "union_find": 42, "r58": 42, "multiply_transitive_group": 42, "r59": 42, "center_": 42, "28group_theori": 42, "centralizer_and_norm": 42, "derived_subgroup": 42, "nilpotent_group": 42, "colost": 42, "hulpk": 42, "cgt": 42, "cgtnote": 42, "__contains__": 42, "__weakref__": [42, 82], "weak": [42, 51, 82, 187, 190], "_coset_repres": 42, "hg": 42, "transvers": [42, 47, 49, 136, 137], "coset_transvers": 42, "_distinct_primes_lemma": 42, "_element": 42, "_eval_is_alt_sym_monte_carlo": 42, "05": [42, 73, 99, 179, 182], "mont": 42, "carlo": 42, "candidat": 42, "randomli": [42, 51, 52, 91, 157], "n_ep": 42, "_check_cycles_alt_sym": [42, 49], "_eval_is_alt_sym_na": 42, "only_sym": 42, "only_alt": 42, "_p_elements_group": 42, "_random_pr_init": 42, "_random_prec_n": 42, "modif": [42, 57, 87, 216, 217, 232], "69": [42, 87, 215, 232], "71": [42, 67, 87, 166], "_random_gen": 42, "append": [42, 51, 52, 87, 95, 130, 158, 183, 188, 197, 218, 230, 231, 235, 272], "accumul": [42, 228, 232], "random_pr": 42, "chosen": [42, 43, 52, 53, 64, 65, 87, 91, 94, 108, 131, 165, 168, 183, 184, 188, 190, 192, 197, 204, 207, 213, 217, 228, 242], "gh": [42, 185, 216, 223], "eventu": [42, 59, 78, 183, 184, 204, 230, 235], "_sylow_alt_sym": 42, "sylow": 42, "p_1": [42, 47, 52, 69, 91, 180, 207, 210], "p_2": [42, 52, 69, 91, 180, 207], "p_p": 42, "sylow_subgroup": 42, "is_alt_sym": [42, 49], "_union_find_merg": 42, "parent": [42, 51, 74, 108, 173, 176, 183, 187, 188, 192, 228, 232, 242, 245, 246], "not_rep": 42, "atkinson": 42, "83": [42, 196], "87": [42, 57, 87, 91], "minimal_block": 42, "_union_find_rep": 42, "r60": 42, "r66": 42, "compress": [42, 87, 90], "r62": 42, "r68": [42, 43], "_verifi": 42, "_h": [42, 216], "gens_k": 42, "rels_k": 42, "gens_h": 42, "stabil": [42, 47, 49, 55, 101, 127, 221], "inject": [42, 51, 184, 188, 193, 268], "homomorph": [42, 189], "rels_h": 42, "strong_present": 42, "abelian_invari": 42, "isomorph": [42, 45, 184, 187, 190, 192], "t_1": [42, 56, 210], "t_2": [42, 56, 210], "t_r": [42, 128, 223], "542": 42, "adopt": [42, 223], "schreier": [42, 47, 49], "sim": [42, 47, 49, 76], "b_1": [42, 49, 59, 73, 76, 184, 207, 210, 213, 272], "b_2": [42, 49, 59, 73, 207, 213], "dot": [42, 43, 47, 49, 52, 64, 66, 73, 82, 87, 101, 116, 117, 118, 121, 122, 123, 125, 126, 127, 128, 130, 147, 173, 177, 179, 180, 181, 182, 184, 185, 190, 193, 197, 216, 217, 235, 242, 245, 247, 248], "b_k": [42, 49, 52, 56, 59, 199, 200], "strong": [42, 47, 48, 49, 91, 92], "89": [42, 49, 78], "55": [42, 54, 56, 87, 182, 183, 193, 210], "57": [42, 87, 91, 217], "strong_gen": [42, 48, 49], "basic_transvers": [42, 49], "basic_orbit": [42, 49], "basic_stabil": 42, "baseswap": 42, "po": [42, 76, 81, 82, 111, 128, 130, 188, 215], "strong_gens_distr": [42, 49], "swap": [42, 43, 44, 82, 87, 143, 147, 156, 217, 235], "orbit": [42, 49, 163, 164, 166], "b_": [42, 47, 49, 51, 56, 59, 76, 84, 101, 199, 207, 210, 218], "b_i": [42, 47, 49, 76, 184, 207], "la": [42, 130, 168], "vega": 42, "testutil": [42, 48, 49], "_verify_bsg": [42, 48, 49], "schreier_sim": [42, 48, 49], "bsg": [42, 47, 49, 223], "102": [42, 87], "98": [42, 52, 129, 193, 213], "pseudocod": 42, "beta_": 42, "g_": [42, 49, 50, 59, 76, 210], "foral": [42, 50, 53, 168], "zg": 42, "gz": 42, "c_g": 42, "gs": [42, 76], "sg": [42, 217, 223], "is_subgroup": 42, "subgroup_search": 42, "hgh": 42, "closur": [42, 48, 74, 143, 192, 205], "composition_seri": 42, "h_0": [42, 47], "h_1": [42, 47, 216], "h_2": [42, 216], "1024": [42, 197, 217], "512": [42, 59], "128": [42, 56, 59, 61, 91, 191, 197], "32": [42, 54, 57, 59, 61, 87, 91, 99, 128, 191, 193, 194, 206, 207, 210, 217, 228], "243": [42, 59, 215], "81": [42, 56, 61, 82, 87, 91, 114, 116, 182, 196], "conjugacy_class": 42, "xax": 42, "s_3": 42, "s3": [42, 50, 101, 200, 210], "feasibl": [42, 101], "resiz": [42, 43, 82, 84], "coset_factor": 42, "factor_index": 42, "_basic_orbit": 42, "u1": [42, 91, 114, 116, 117, 118, 119, 121, 122, 125, 127, 130, 173, 175, 176, 177, 180, 213], "u2": [42, 90, 91, 114, 116, 117, 118, 119, 121, 122, 125, 130, 173, 176, 180, 213], "_strip": [42, 49], "coset_rank": 42, "lexicograph": [42, 43, 46, 47, 51, 190, 193, 235], "coset_unrank": 42, "standardis": [42, 187], "subsect": [42, 248], "compris": [42, 52, 84, 111, 128, 131, 193, 235], "g_0": [42, 210], "g_1": [42, 193, 204, 210, 213], "g_2": [42, 80, 204, 213], "g_i": [42, 204], "g_k": 42, "tetrahedron": [42, 44], "r64": 42, "axiom": [42, 184], "doy": 42, "sc": [42, 78], "thesi": [42, 51, 204, 242], "generator_product": 42, "sn": [42, 43, 50, 73], "is_abelian": 42, "_random_prec": 42, "probabl": [42, 51, 56, 59, 63, 91, 114, 157, 161, 207, 213, 216, 217, 229, 264, 270], "transit": [42, 130, 190, 217], "82": [42, 78, 87, 217], "proport": [42, 52, 204], "226": 42, "227": 42, "is_altern": 42, "quicker": [42, 91], "taxonomi": 42, "is_cycl": 42, "p_": [42, 47, 51, 78, 168, 210, 213, 218], "p_i": [42, 47, 91], "equiv": [42, 52, 56, 91, 192, 207, 210], "pmod": [42, 51, 52, 56, 87, 207], "p_j": [42, 47], "r65": 42, "35": [42, 45, 54, 56, 64, 65, 78, 87, 91, 116, 192, 197, 210, 213, 217], "rose": 42, "is_elementari": 42, "is_nilpot": [42, 87], "solvabl": [42, 210, 213, 216, 273], "lower_central_seri": 42, "is_solv": 42, "is_norm": [42, 161], "gr": 42, "is_perfect": [42, 91], "is_polycycl": 42, "is_primit": [42, 188, 193], "primit": [42, 51, 52, 59, 91, 157, 161, 184, 185, 187, 188, 190, 192, 193, 196, 197, 210, 262], "cardin": [42, 43, 46, 184, 205], "badli": 42, "random_stab": 42, "g3": [42, 101], "s5": 42, "is_symmetr": [42, 82], "is_transit": 42, "is_trivi": 42, "cba": [42, 218, 235], "mainli": [42, 59, 87, 92, 168, 177, 190, 207, 210, 213], "max_div": 42, "siev": [42, 91], "nonempti": 42, "gb": 42, "moreov": [42, 52, 76, 167, 178, 184, 185, 190, 198, 246], "congruenc": [42, 51, 91, 207, 210], "p_0": [42, 47, 69, 207, 210], "maxim": [42, 52, 80, 184, 188, 192, 204, 206], "intransit": 42, "normal_closur": 42, "adjoin": [42, 185], "yx": [42, 181], "73": [42, 50, 51, 64, 91, 213], "74": [42, 56, 91], "orb": 42, "78": [42, 65, 87, 91, 95, 168, 213, 217], "orbit_transvers": 42, "orbit_rep": 42, "send": [42, 51, 52, 57, 91, 184, 213, 215], "proof": [42, 45, 76, 78, 216], "79": [42, 43, 95], "pointwise_stabil": 42, "pointwis": [42, 49], "p_k": [42, 91], "p20": 42, "stab": 42, "schreier_sims_increment": [42, 49], "polycyclicgroup": 42, "eliminate_gen": 42, "gen_count": 42, "b1": [42, 47, 59, 91, 94, 95, 106, 114, 130, 173, 188, 197, 207, 210, 213, 247], "b_r": 42, "slp_dict": 42, "seq": [42, 51, 54, 87, 188, 190, 193, 203, 215, 235], "93": [42, 191], "schreier_sims_random": [42, 49], "consec_succ": 42, "consec": 42, "_succ": 42, "97": [42, 52, 91, 190], "sift": [42, 49, 235], "amend": 42, "decompos": [42, 43, 49, 51, 53, 57, 62, 87, 91, 147, 156, 157, 159, 188, 193, 196, 217], "unsuccess": [42, 49], "accordingli": [42, 185, 192], "halt": 42, "signifi": [42, 51, 193, 217], "g_t": 42, "leq": [42, 50, 52, 59, 76, 87, 91, 190, 192, 203, 204, 210, 217], "prop": [42, 192], "init_subgroup": 42, "supergroup": 42, "sought": [42, 91, 148, 158, 209, 216], "prune": 42, "prop_even": 42, "lengthi": 42, "114": [42, 91], "117": [42, 59], "terribl": 42, "crucial": [42, 50, 187], "len1": 42, "len2": 42, "len3": 42, "transitivity_degre": 42, "fold": [42, 51, 57, 197, 204, 209], "a_2": [42, 52, 73, 87, 190, 207, 210, 213, 217, 272], "a_k": [42, 52, 194, 200, 215], "arrang": [43, 101, 109, 128, 130, 206, 210, 223], "r69": 43, "reorder": [43, 50, 163, 193, 213, 217, 235], "pretty_print": [43, 79, 111, 116, 117, 121, 122, 123, 125, 126, 128, 131, 173, 175, 176, 177, 180, 181, 197], "enter": [43, 51, 52, 56, 64, 91, 93, 94, 109, 113, 116, 125, 197, 207, 215, 228, 267, 271], "understood": [43, 91, 168, 184, 188], "economi": 43, "caution": [43, 51, 57, 209], "singleton": [43, 81, 201, 216, 253, 255, 267], "indexerror": [43, 87, 193], "autos": [43, 90], "watch": 43, "print_cycl": 43, "econom": [43, 78, 235], "retain": [43, 51, 57, 59, 78, 93, 193, 198, 206, 209], "biject": [43, 45, 52, 82, 184], "full_cyclic_form": 43, "rmul": 43, "unrank_lex": 43, "r73": 43, "zo42": 43, "from_sequ": 43, "a1": [43, 47, 51, 79, 82, 91, 95, 114, 130, 137, 213, 217, 218, 247, 272], "a2": [43, 47, 51, 80, 82, 91, 95, 114, 130, 137, 186, 217, 218, 247, 272], "a3": [43, 47, 51, 80, 82, 130, 247, 272], "perfectli": [43, 50, 51, 52, 190, 193, 196], "skiena": 43, "ma": [43, 50, 119], "1990": [43, 76, 207, 242], "r70": 43, "wendi": 43, "myrvold": 43, "ruskei": 43, "2001": [43, 91, 191], "lett": 43, "septemb": [43, 232], "281": 43, "284": [43, 91], "1016": 43, "s0020": 43, "0190": 43, "01": [43, 51, 55, 114, 157, 191, 209, 235], "00141": 43, "r71": 43, "kreher": 43, "stinson": 43, "1999": [43, 87, 191, 196, 213], "r72": 43, "graham": [43, 56, 57, 91], "patashnik": 43, "foundat": [43, 191, 192], "1994": [43, 190, 191, 193], "product_and_invers": 43, "r74": 43, "lehmer_cod": 43, "appliedpermut": 43, "magic": [43, 209, 228, 264], "attatch": 43, "_array_form": 43, "ascent": 43, "ie": [43, 210], "descent": 43, "fg": [43, 53, 213, 216], "gf": [43, 52, 184, 186, 187, 189, 190, 192], "r75": 43, "commutes_with": [43, 223], "cycle_structur": 43, "from_inversion_vector": 43, "get_adjacency_dist": 43, "n_adj": 43, "reev": 43, "colin": 43, "landscap": 43, "annal": 43, "86": [43, 87, 129, 196, 206], "473": 43, "josephu": 43, "get_precedence_matrix": 43, "get_precedence_dist": 43, "get_adjacency_matrix": 43, "get_positional_dist": 43, "subscript": [43, 188, 197, 207, 210, 235], "inversion_vector": 43, "lesser": [43, 193], "lie": [43, 53, 65, 66, 67, 193, 211, 217, 252, 259], "lehmer": 43, "ith": [43, 80, 91, 188, 194, 216, 217], "variat": [43, 51, 190, 204, 213, 234], "r76": 43, "eng": 43, "chula": 43, "piak": 43, "algo2008": 43, "htm": [43, 59, 78, 210], "is_singleton": 43, "is_odd": 43, "shuffl": [43, 87, 272], "012345": 43, "345": 43, "253": 43, "2531": 43, "25314": 43, "253140": 43, "r77": 43, "flavius_josephu": 43, "r78": 43, "josephus_problem": 43, "r79": 43, "wou": 43, "burtonl": 43, "trim": [43, 127], "unmov": 43, "mul_inv": 43, "next_nonlex": 43, "nonlex": 43, "rank_nonlex": 43, "unrank_nonlex": 43, "next_trotterjohnson": [43, 235], "trotter": 43, "johnson": [43, 87], "generate_bel": [43, 235], "rank_trotterjohnson": 43, "unrank_trotterjohnson": 43, "_af_par": 43, "pseudo": [43, 87, 91, 188, 190, 193], "inv_perm": 43, "enforc": [43, 116], "rmul_with_af": 43, "ascend": [43, 235], "r80": 43, "transposition_": 43, "28mathemat": [43, 51, 205], "flexibl": [43, 51, 114, 130, 180, 183, 187, 216, 262], "investig": [43, 76, 182, 184, 207, 235, 264], "cn": [43, 197, 271], "2n": [43, 50, 56, 59, 78, 82, 102, 126, 182, 200, 207], "dn": [43, 217], "klein": 43, "s4": [43, 101], "polyhedr": 44, "psg": 44, "platon": 44, "solid": [44, 65, 183, 251], "tetrahedr": 44, "octahedr": 44, "icosahedr": 44, "r81": 44, "polyhedralgroup": 44, "polyhedra": [44, 77], "shadow": 44, "h5": 44, "heinz": 45, "caylei": [45, 82], "r82": 45, "labeledtre": 45, "tree_repr": 45, "prufer_rank": 45, "prev": 45, "36": [45, 52, 56, 67, 78, 82, 87, 91, 95, 193, 197, 210, 213, 217, 251], "prufer_repr": 45, "record": [45, 51, 192, 228], "to_pruf": 45, "778": 45, "779": 45, "777": [45, 54], "1296": 45, "to_tre": 45, "r83": 45, "hamberg": 45, "erlend": 45, "2010": [45, 214, 235], "06": [45, 51, 116, 182, 217], "compact": [45, 51, 98, 130, 161, 177, 193, 197, 215, 232], "next_binari": 46, "prev_binari": 46, "bitlist_from_subset": 46, "subset_from_bitlist": 46, "superset_s": 46, "iterate_binari": 46, "iterate_graycod": 46, "prev_grai": 46, "next_grai": 46, "next_lexicograph": 46, "prev_lexicograph": 46, "rank_binari": 46, "unrank_binari": 46, "rank_grai": 46, "unrank_grai": 46, "rank_lexicograph": 46, "43": [46, 87, 91, 94, 95, 217, 272], "super_set": 46, "subset_indic": 46, "ksubset": 46, "itertool": [46, 235], "tensor_can": [47, 223], "msym": 47, "contravari": [47, 87, 223, 224], "covari": [47, 53, 87, 217, 223, 224], "d0": 47, "base_i": 47, "gens_i": 47, "n_i": [47, 190, 215], "sym_i": 47, "failur": [47, 55, 68, 76, 91, 217, 228, 272], "canonicalize_na": 47, "exchang": [47, 52, 87, 182, 186, 235], "anticommut": [47, 150, 152, 162, 163, 223], "canonical_fre": 47, "slot": [47, 147, 218, 222, 223, 267], "residu": [47, 52, 91, 190, 201, 207], "tensor_gen": 47, "list_free_indic": 47, "double_coset_can_rep": 47, "reintroduc": 47, "a_": [47, 51, 52, 59, 76, 80, 82, 84, 101, 102, 128, 199, 207, 210, 213, 215, 217, 218], "antisymmetr": [47, 53, 82, 163, 223], "d2": [47, 173, 184, 204, 217, 235, 242], "ord": [47, 52, 87], "t_c": 47, "get_symmetric_group_sg": [47, 223], "bsgs_direct_product": 47, "base2a": 47, "gens2a": 47, "t0": 47, "t1": [47, 67, 68, 91, 106, 111, 210, 217], "a_m": [47, 213], "a_n": [47, 52, 59, 76, 80, 168, 185, 190, 200, 210, 213, 272], "_a": [47, 59, 163, 193], "_b": [47, 59, 163], "base_f": 47, "gens_f": 47, "base1": 47, "gens1": 47, "base_a": 47, "gens_a": 47, "sgen": 47, "s_transvers": 47, "butler": [47, 223], "portug": [47, 223], "grow": [47, 51, 76, 87, 91, 187, 190], "computation": [47, 109, 110], "absenc": [47, 81], "observ": [47, 73, 76, 152, 181, 184, 207, 210, 213, 217, 250, 272], "opposit": [47, 67, 81, 82, 106, 108, 185, 188, 205, 209, 216, 224, 235, 242, 243, 272], "ind": [47, 199, 223], "d3": [47, 204], "a0": [47, 213, 272], "a4": [47, 51, 80, 130, 272], "a5": [47, 51], "interchang": [47, 50, 76, 213], "leftrightarrow": 47, "_af_rmul": 47, "t_": [47, 56], "b0": [47, 59, 188, 207, 213], "d_": [47, 207], "p0": [47, 61, 192, 213], "dbase": 47, "recomput": [47, 193], "d_i": [47, 76, 168], "s_0": 47, "d_0": [47, 52], "b_0": [47, 52, 56, 207, 210, 213], "b_j": [47, 49, 59, 76, 207], "sx": 47, "trace": [47, 82, 84, 102, 130, 190, 197, 217, 218, 219, 221, 235, 268], "h_n": [47, 59, 78, 216], "tab1": 47, "get_transvers": 47, "antisym": 47, "base2": 47, "gens2": 47, "_cmp_perm_list": 48, "hashabl": [48, 76, 235], "ls1": 48, "ls2": 48, "_naive_list_centr": 48, "_verify_centr": 48, "_verify_normal_closur": 48, "_base_ord": 49, "base_ord": 49, "backtrack": 49, "108": [49, 91, 95], "132": [49, 56, 173], "r84": 49, "_distribute_gens_by_bas": 49, "membership": [49, 192, 205], "_strong_gens_from_distr": 49, "_orbits_transversals_from_bsg": 49, "_handle_precomputed_bsg": 49, "transversals_onli": 49, "slp": 49, "_remove_gen": 49, "new_gen": 49, "r85": 49, "r86": 49, "recurr": [50, 56, 73, 87, 192, 203, 209, 211, 213, 217, 237], "annihil": [50, 69, 70, 74, 139, 163, 215], "is_hypergeometr": 50, "binomi": [50, 55, 58, 59, 91, 193, 197, 202, 209, 213, 217, 235, 272], "rf": [50, 56, 193], "ff": [50, 52, 56, 182, 185, 186, 187, 192, 193], "speci": [50, 51], "rise": [50, 56, 59, 182, 209, 213, 217, 245], "knowledg": [50, 51, 52, 192, 213, 267, 270], "hypersimp": [50, 208], "quotient": [50, 51, 54, 57, 91, 184, 185, 187, 189, 190, 193, 207, 209, 213], "dummy_vari": 50, "stand": [50, 51, 130, 185, 187, 188, 194], "karr": 50, "quad": [50, 51, 53, 55, 59, 78, 82], "exclus": [50, 51, 81, 87, 190, 264], "emphas": 50, "typeset": [50, 197], "doit": [50, 51, 53, 56, 57, 59, 78, 84, 101, 140, 142, 144, 155, 157, 160, 161, 163, 173, 182, 193, 199, 204, 209, 213, 214, 217, 219, 242, 244, 245, 247, 248, 262, 267], "seemingli": [50, 216], "nonsens": [50, 59], "r87": 50, "michael": [50, 191, 196], "april": 50, "1981": [50, 191], "305": 50, "350": [50, 111], "dl": [50, 181, 191], "cfm": [50, 191], "doid": [50, 191], "322248": 50, "322255": 50, "r88": 50, "capit": [50, 52, 101, 213], "sigma_not": 50, "r89": 50, "empty_sum": 50, "euler_maclaurin": [50, 55], "eval_integr": 50, "maclaurin": [50, 55], "endpoint": [50, 51, 55, 178, 205, 248], "28333333333333": 50, "sstr": [50, 177, 197], "full_prec": [50, 197], "26629073187415": 50, "0175000000000000": 50, "soon": [50, 51, 114, 168, 194], "eval_zeta_funct": 50, "is_absolutely_converg": 50, "sequence_term": 50, "is_converg": 50, "r90": 50, "absolute_converg": 50, "prod_": [50, 56, 59, 76, 91, 168, 207], "respons": [50, 51, 100, 101, 114, 183, 230], "diverg": [50, 59, 132, 242, 249], "dirichlet": [50, 59, 217], "r91": 50, "convergence_test": 50, "reverse_ord": 50, "selector": [50, 82, 209, 235], "handi": [50, 51, 87, 197, 267], "s0": [50, 74, 76, 135], "expr_with_intlimit": [50, 78], "exprwithintlimit": [50, 78], "reorder_limit": 50, "r92": 50, "walli": 50, "w2": [50, 137], "w2e": 50, "risingfactori": [50, 58, 59, 197, 199], "combsimp": [50, 51, 56], "pe": 50, "gammasimp": [50, 51, 209], "rewrit": [50, 51, 53, 56, 57, 59, 76, 78, 81, 94, 101, 160, 193, 204, 205, 206, 209, 213, 214, 215, 216, 217, 253, 254, 266, 268], "r93": 50, "r94": 50, "capital_pi_not": 50, "r95": 50, "empty_product": 50, "r96": 50, "infinite_product": 50, "r97": 50, "expr_with_limit": [50, 78], "exprwithlimit": [50, 78], "change_index": 50, "trafo": 50, "newvar": 50, "mapsto": [50, 76, 82, 192], "p3": [50, 61, 63, 64, 66, 67, 101, 183, 187, 206, 217], "has_empty_sequ": [50, 78], "has_reversed_limit": [50, 78], "has_finite_limit": [50, 78], "____": [50, 55, 78, 135, 185, 198, 217, 235, 273], "___": [50, 55, 78, 79, 87, 185, 209, 217, 222, 235, 271], "rubric": [50, 51], "_____": [50, 217], "gosper": 50, "gosper_norm": 50, "monic": [50, 184, 185, 188, 190, 192, 193, 196], "gcd": [50, 51, 52, 87, 91, 159, 187, 188, 189, 191, 192, 193, 197, 209, 210], "gosper_term": 50, "s_n": [50, 193], "f_k": [50, 125, 190], "g_n": [50, 56, 193], "f_n": [50, 56, 59, 184, 190, 193, 213], "gosper_sum": 50, "r98": 50, "marko": 50, "petkovsek": [50, 215], "herbert": 50, "doron": 50, "zeilberg": [50, 215], "ak": [50, 199], "peter": [50, 56, 91, 129, 179, 235], "ltd": 50, "welleslei": 50, "usa": [50, 191], "1997": [50, 76, 91, 191, 207], "convert_xor": [51, 93], "09": [51, 99], "2e": 51, "xor": [51, 54, 81, 93, 197, 264], "sympifyerror": 51, "coerc": [51, 127, 190], "cooper": 51, "sage": [51, 91, 182, 266], "shouldn": [51, 194], "unsanit": [51, 236, 261], "bitcount": 51, "improperli": 51, "unbound": [51, 222], "ns": 51, "fallback": [51, 79, 163, 177, 187, 197, 215], "ast": [51, 197, 254], "00000000000000": [51, 55, 164, 197, 217], "mylist1": 51, "mylist": 51, "mylist2": 51, "xxx": [51, 78, 87, 235, 237], "autosimplif": [51, 206, 209], "kern": 51, "r101": 51, "7649": 51, "r100": 51, "r104": 51, "r102": 51, "r103": 51, "r105": 51, "r106": 51, "r107": 51, "r99": 51, "recreat": 51, "isfinit": 51, "__cacheit": 51, "maxsiz": 51, "noqa": [51, 79, 188, 231], "f811": 51, "sympy_use_cach": 51, "cot": [51, 58, 59, 93, 194, 197, 206], "_arg": [51, 57], "as_mut": [51, 83, 84], "as_content_primit": [51, 87, 185, 193], "stub": 51, "as_dummi": [51, 78], "_0": [51, 76, 82, 87, 193, 236], "_r": [51, 163, 207, 216], "bound_symbol": [51, 78], "besid": [51, 190, 215], "typeinfo": 51, "truli": [51, 59, 168], "piec": [51, 55, 207, 230], "scan": 51, "appliedundef": 51, "canonical_vari": 51, "class_kei": 51, "sorted_class": 51, "dummy_eq": 51, "eg": [51, 114, 170, 216], "fromit": 51, "has_fre": 51, "exp_polar": [51, 58, 59, 207], "dif": 51, "_prec": 51, "xreplac": [51, 82, 87, 173], "q_": [51, 177, 210, 213], "r_": [51, 103, 164, 194], "repl_dict": 51, "rcall": [51, 53], "simul": [51, 114, 130, 196], "abus": [51, 223], "succe": [51, 76, 81, 91, 153, 192, 204], "newtyp": 51, "intuit": [51, 168, 201, 213], "is_mul": 51, "is_add": [51, 216], "mysin": [51, 236, 261], "_eval_rewrite_as_": 51, "_eval_rewrite_as_co": 51, "tie": [51, 235], "delai": [51, 99, 127, 206, 228, 262], "unsort": [51, 105, 172], "333333333333333333333": 51, "333333333333333314830": 51, "wildcard": [51, 209], "registri": 51, "metaprogram": 51, "address": [51, 197, 216], "mostli": [51, 57, 78, 87, 130, 158, 180, 184, 196, 197, 207, 215, 271], "__truediv__": [51, 188], "class_nam": 51, "mysingleton": 51, "_eval_is_g": 51, "_eval_is_eq": 51, "args_cnc": 51, "cset": 51, "split_1": 51, "suppress": [51, 93, 226, 233], "as_coeff_add": 51, "dep": [51, 213], "as_coeff_expon": 51, "as_coeffici": 51, "zz": [51, 56, 73, 74, 78, 84, 87, 88, 91, 111, 181, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 212], "coeff_monomi": [51, 193], "polytool": [51, 193, 216], "monomi": [51, 78, 81, 91, 185, 187, 188, 189, 190, 196, 197, 272], "as_coefficients_dict": 51, "inquiri": 51, "121": [51, 56, 91, 101, 173, 215], "84": [51, 55, 91], "separatevar": [51, 208, 213], "n3": [51, 114], "as_leading_term": [51, 204], "logx": [51, 204], "cdir": 51, "_eval_as_leading_term": 51, "as_numer_denom": [51, 215], "as_ordered_factor": 51, "as_ordered_term": 51, "as_powers_dict": 51, "lost": 51, "as_real_imag": [51, 57, 82, 198], "as_term": 51, "aseri": 51, "hir": 51, "asymptot": [51, 76, 101, 262], "hierarch": 51, "normalis": [51, 199], "induc": [51, 82, 192, 206, 235], "gruntz": [51, 199], "majorli": 51, "mrv": [51, 204], "overal": [51, 170, 183, 215], "rapidli": [51, 55, 76, 204], "till": [51, 94, 95, 114, 213], "r108": 51, "dominik": [51, 199], "proc": [51, 215], "1993": [51, 191], "symp": 51, "239": 51, "244": [51, 190], "r109": 51, "p90": 51, "r110": 51, "asymptotic_expans": 51, "_first": [51, 57], "distribute_order_term": [51, 209], "compute_leading_term": 51, "could_extract_minus_sign": 51, "signsimp": [51, 122, 209], "failing_express": 51, "modulu": [51, 52, 54, 59, 61, 67, 82, 91, 94, 95, 184, 188, 190, 192, 193, 196, 216], "power_bas": [51, 82], "power_exp": [51, 82], "multinomi": [51, 82, 91, 217], "expr_free_symbol": 51, "extract_addit": 51, "extract_multipl": 51, "extract_branch_factor": 51, "allow_half": 51, "fourier_seri": [51, 200], "hyper": [51, 56, 59, 70, 73, 197, 199, 207, 209, 215, 217, 272], "geto": 51, "getn": 51, "is_algebraic_expr": 51, "is_rational_funct": 51, "r111": 51, "algebraic_express": 51, "is_const": 51, "constanc": 51, "agre": [51, 52, 59, 66, 76, 207], "decis": [51, 57, 78, 206, 215, 230], "test_expr": 51, "prove": [51, 76, 78, 87, 184, 204, 213, 247], "failing_numb": 51, "is_meromorph": 51, "meromorph": [51, 59], "multivalu": [51, 57], "cut": [51, 56, 57, 59, 67, 76, 184, 207, 232, 238, 272], "hit": [51, 267], "is_polynomi": 51, "rational_funct": 51, "leadterm": 51, "xlim": [51, 183], "lseri": 51, "exaxmpl": 51, "nseri": 51, "_eval_nseri": 51, "innermost": 51, "disadvantag": 51, "met": [51, 210, 216, 231, 272], "nsimplifi": [51, 55, 208], "ratsimp": [51, 208], "removeo": [51, 130, 197, 262], "chop": [51, 55, 59, 82, 87, 215, 261], "123": [51, 56, 61, 81, 160, 173, 235, 242, 243], "lazi": [51, 84, 193], "smooth": [51, 55, 91, 199], "taylor_term": [51, 57], "previous_term": [51, 57], "dummy_index": 51, "temporari": [51, 229], "_dummy_10": 51, "contigu": [51, 207, 230], "x4": [51, 56, 187], "x5": [51, 56, 187], "x6": [51, 187], "x7": [51, 187], "x8": [51, 187], "x9": [51, 187], "x50": 51, "x51": 51, "y0": [51, 70, 72, 74, 213], "y1": [51, 130], "y2": [51, 130, 187], "y3": [51, 187], "y4": 51, "xa": [51, 185, 190], "xb": [51, 238], "xc": [51, 162, 238], "disambigu": 51, "x01": 51, "x02": 51, "x11": 51, "x12": 51, "escap": [51, 93, 183, 197, 238], "newli": [51, 76, 207], "undefinedfunct": [51, 175, 197, 229, 236], "f821": [51, 231], "cofactor": [51, 87, 188, 190, 193], "lcm": [51, 91, 188, 189, 190, 193, 197], "50000000000000": [51, 55], "100000000000000000000": 51, "1e20": 51, "00000000000000e": 51, "23456789123456789": 51, "23456789123457": 51, "00100": 51, "sent": [51, 78, 209], "789": [51, 91], "123_456": 51, "123456789": 51, "12e": 51, "012": 51, "60e2": 51, "6000": 51, "600e": 51, "125": [51, 55, 78, 91, 188, 203, 210], "099609": 51, "12500": 51, "12500000000000000000": 51, "closest": [51, 64], "5404319552844595": 51, "54": [51, 87, 95, 190, 196, 235], "29999999999999998890": 51, "30000000000000000000": 51, "_mpf_": [51, 187], "4915": 51, "70": [51, 52, 68, 78, 87, 91, 196, 197, 210, 217, 238], "307": 51, "mpf": [51, 187, 188], "is_float": 51, "unprejud": 51, "3602879701896397": 51, "18014398509481984": [51, 209], "limit_denomin": 51, "320": 51, "75": [51, 54, 217, 242], "use_tri": [51, 91], "use_rho": [51, 91], "use_pm1": [51, 91], "factorint": [51, 91, 192, 193, 232], "trial": [51, 91, 190, 202, 206, 213, 217], "max_denomin": 51, "1000000": [51, 91], "141592653589793": 51, "311": [51, 91], "discard": [51, 192, 197, 216], "99999999999999999999": 51, "hookrightarrow": 51, "minpoli": [51, 187, 188, 192], "dmp": [51, 184, 188, 189, 193], "complexrootof": [51, 87, 188, 193, 213], "anp": [51, 187, 188, 192, 193], "to_list": [51, 186, 188], "crootof": [51, 193, 213, 215], "minpoly_of_el": 51, "414213562": 51, "scratch": [51, 168], "6x": [51, 190], "to_number_field": [51, 192], "to_root": 51, "primitive_el": [51, 187, 188, 192], "knew": [51, 272], "golden": [51, 55, 91], "5th": [51, 130, 190, 192], "cyclotom": [51, 188, 189, 190, 191, 192, 193], "cyclotomic_poli": [51, 192, 193], "61803398874989": 51, "2i": 51, "a6": 51, "a6_wrong": 51, "309016994374947": 51, "951056516295154": 51, "field_el": 51, "is_alias": 51, "is_primitive_el": 51, "native_coeff": 51, "nativ": [51, 101, 188, 193, 228], "to_algebraic_integ": 51, "to_primitive_el": 51, "Its": [51, 57, 67, 130, 161, 190, 197, 205], "a_prim": 51, "number_cl": 51, "greatest": [51, 56, 61, 91, 185, 187, 188, 190, 191, 193, 196], "euclid": [51, 190, 191], "r112": 51, "euclidean_algorithm": 51, "r113": 51, "r114": 51, "1_": 51, "28number": 51, "r115": 51, "88": [51, 87, 91], "921_": 51, "r116": 51, "one_half": 51, "holder": 51, "ieee": [51, 52], "754": 51, "r117": 51, "affin": [51, 52, 66, 184], "compactif": 51, "r118": 51, "tild": [51, 57, 218], "undetermin": [51, 87, 193, 199, 213, 215], "phase": [51, 78, 99, 132, 135, 137, 147, 148, 216], "718281828": 51, "napier": 51, "r119": 51, "e_": [51, 56, 87], "28mathematical_const": 51, "r120": 51, "imaginary_unit": [51, 197], "141592654": 51, "circumfer": [51, 61], "diamet": [51, 61], "is_irr": 51, "r121": 51, "mascheroni": [51, 59], "5772157": 51, "recur": 51, "harmon": [51, 58, 91, 103, 142, 182, 197, 258], "lim": [51, 204, 262], "limits_": [51, 182, 199, 266], "ln": [51, 57, 78, 197, 199, 213, 217, 272], "r122": 51, "93mascheroni_const": 51, "91596559": 51, "r123": 51, "27s_constant": 51, "r124": 51, "golden_ratio": 51, "tribonacci": [51, 58], "fibonacci": [51, 55, 58, 91], "predetermin": [51, 228], "8392867552141611326": 51, "r125": 51, "generalizations_of_fibonacci_numb": [51, 56], "tribonacci_numb": [51, 56], "modulo": [51, 52, 88, 91, 159, 184, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 209], "r126": 51, "modular_multiplicative_invers": 51, "r127": 51, "extended_euclidean_algorithm": 51, "oscil": [51, 258], "conform": [51, 216, 221, 222], "r128": 51, "r129": 51, "zero_to_the_power_of_zero": 51, "r130": 51, "indeterminate_form": 51, "as_base_exp": [51, 57, 58, 235], "floor": [51, 58, 91, 187, 188, 197, 217], "geq": [51, 52, 59, 87, 193, 210, 217, 272], "factor_": [51, 52, 91, 193, 210], "perfect_pow": [51, 91], "infix": 51, "matmul": [51, 84, 186], "as_coef_mul": 51, "undesir": [51, 105, 114, 127, 185, 188, 207], "4596": 51, "compound": [51, 119, 161, 201, 255], "5728": 51, "suspect": [51, 91], "5706": 51, "moot": 51, "off": [51, 61, 76, 82, 90, 92, 116, 147, 184, 193, 197, 213, 228, 239, 242, 266], "nb": 51, "sensit": [51, 101, 130, 183, 190, 209, 228], "assocop": 51, "quadrat": [51, 52, 78, 91, 184, 188, 192, 193, 210, 215, 217], "matadd": [51, 84, 197], "as_coef_add": 51, "extract_leading_ord": 51, "commutative_part": 51, "noncommutative_part": 51, "order_symbol": 51, "subprocess": [51, 197, 228, 229], "dividend": [51, 188], "rop": 51, "validrelationoper": 51, "rel_op": 51, "fourth": [51, 52, 185, 213, 262], "my_equ": 51, "my_inequ": 51, "reversedsign": 51, "_eval_eq": 51, "respond": 51, "boolalg": [51, 81], "client": [51, 232], "counterpart": [51, 52, 213, 262], "litter": 51, "oddbal": 51, "minor": [51, 61, 87, 197, 228], "caveat": [51, 193, 253, 260, 264], "succinctli": 51, "coupl": [51, 87, 127, 142, 157, 160], "annoy": 51, "succinct": 51, "occasion": 51, "r131": 51, "operar": 51, "circuit": [51, 147, 150], "greaterthanobject": 51, "__bool__": 51, "335": 51, "march": 51, "2012": 51, "r132": 51, "r133": 51, "r134": 51, "mdarg": 51, "fgh": 51, "vsin": 51, "vdiff": 51, "narg": [51, 190], "naturals0": [51, 197, 216, 217], "evalul": 51, "fairli": [51, 59, 76, 116, 124, 172, 184], "conserv": [51, 109, 126, 174, 244, 249, 250], "136": [51, 87], "indirect": [51, 53, 59, 91, 163, 213], "fx": [51, 53, 183, 213, 214], "fxx": 51, "insconsist": 51, "presenc": [51, 57, 81, 113, 118, 127, 213, 221], "nonvanish": 51, "_diff_wrt": 51, "_sort_variable_count": 51, "vc": 51, "vsort": 51, "collaps": [51, 157, 209], "vsort0": 51, "vi": 51, "dfx": 51, "equidist": 51, "sq2": 51, "xl": 51, "d2fdxdy": 51, "doit_numer": 51, "z0": [51, 204], "unifi": [51, 131, 186, 188, 189, 190, 192, 193, 205], "zeroth": [51, 192], "idiff": [51, 68], "r135": 51, "legaci": [51, 78, 87, 217], "v5_2": 51, "infunct": 51, "algebraiccomput": 51, "f_real": [51, 58], "f_real_inherit": [51, 58], "is_singular": [51, 58, 74], "holomorph": [51, 58, 76], "superfici": 51, "unexpect": [51, 228], "ss": [51, 188], "denom": [51, 187, 188, 192, 209], "_eval_expand_bas": 51, "_eval_expand_complex": 51, "shut": [51, 193], "unwant": [51, 215, 235], "alphabet": [51, 52, 101, 168, 185, 210, 230], "expand_hint": 51, "_eval_expand_hint": 51, "liabl": [51, 81], "metahint": 51, "myclass": 51, "_eval_expand_doubl": 51, "hyperexpand": [51, 59, 73, 76, 207], "div": [51, 185, 187, 188, 193, 197, 209, 267], "horner": [51, 130, 190, 193], "untouch": 51, "dkei": 51, "mixin": [51, 235], "maxn": [51, 55, 82], "subresult": [51, 188, 191, 193], "000100000000000000": 51, "maxprec": 51, "quadratur": [51, 55, 78, 213], "tanh": [51, 55, 58, 78, 194, 197, 209, 272], "oscillatori": [51, 55, 202], "osc": [51, 55], "advers": 51, "1e16": 51, "291": 51, "builtin": [51, 188, 197, 205, 238, 271], "speedup": [51, 87, 92, 190, 194, 236], "framework": [51, 114, 222, 228, 230, 236], "slice": [51, 81, 82, 87, 93, 188, 193, 203, 205, 209, 218, 235], "parametris": [51, 205], "element_kind": [51, 82, 205], "tuple_count": 51, "setkind": [51, 82, 255], "isprimit": 51, "_gcd_term": 51, "terms_gcd": [51, 188, 193], "entiti": [51, 61, 64, 65, 67, 68, 76, 114, 128, 178, 216, 250, 259, 268], "arguement": 51, "broad": [51, 267], "lex": [51, 79, 177, 185, 187, 188, 190, 193, 194, 196, 197, 209], "grlex": [51, 79, 177, 188, 193, 196, 197], "grevlex": [51, 79, 177, 185, 190, 193, 196, 197], "rev": 51, "unaffect": [51, 216], "_node": 51, "fastest": [51, 56, 78, 91, 92, 194], "undecor": 51, "ineffici": [51, 87, 187], "breaker": 51, "hash": [51, 188, 190, 198, 209, 213, 228, 230], "collis": [51, 90], "wast": [51, 88, 186], "candid": [51, 87, 91, 190, 209], "rng": 51, "getstat": 51, "intention": 51, "tn": 51, "td": [51, 197, 271], "randrang": 51, "999": [51, 55], "238": [51, 91], "randint": [51, 87, 190], "ri": [51, 197], "rv": [51, 206, 217, 235], "nonbas": 51, "postord": 51, "descend": [51, 184, 192, 230], "children": [51, 52, 187, 232], "subtre": [51, 197, 232], "educ": [52, 87], "cryptograph": 52, "encrypt": 52, "hide": [52, 197], "cipher": 52, "vigener": 52, "hill": [52, 59, 109, 129, 173, 179, 242], "bifid": 52, "rsa": 52, "kid": 52, "feedback": [52, 98, 101, 265], "elgam": 52, "plaintext": [52, 197], "ciphertext": 52, "monoalphabet": 52, "polyalphabet": 52, "crypto": 52, "az": [52, 210], "uppercas": [52, 207], "hello": [52, 235], "world": [52, 97, 118, 127, 235], "helloworld": 52, "check_and_join": 52, "padded_kei": 52, "puppi": 52, "opqrstuvwxi": 52, "puyoqrstvwx": 52, "artist": 52, "aphras": 52, "ara": 52, "hp": 52, "cycle_list": 52, "encipher_shift": 52, "msg": [52, 78], "decipher_shift": 52, "gonavybeatarmi": 52, "ct": [52, 80, 190], "hpobwzcfbubsnz": 52, "deciph": 52, "l1": [52, 61, 63, 64, 108, 111, 117, 128, 188, 190, 193, 210, 217], "l2": [52, 63, 64, 108, 111, 117, 149, 165, 188, 190, 217], "caesar": 52, "juliu": 52, "suetoniu": 52, "protect": [52, 197], "militari": 52, "nephew": 52, "augustu": 52, "reportedli": 52, "r136": 52, "caesar_ciph": 52, "r137": 52, "caesarsmethod": 52, "encipher_rot13": 52, "rot13": 52, "caeser": 52, "midwai": 52, "decipher_rot13": 52, "r138": 52, "decrypt": 52, "tbanilorngnezl": 52, "encipher_affin": 52, "_invers": 52, "cx": [52, 95], "recov": [52, 78, 168, 190, 192, 193, 210, 213], "decipher_affin": 52, "r139": 52, "affine_ciph": 52, "reciph": 52, "navi": 52, "beat": 52, "armi": 52, "trobmvenbgbalv": 52, "encipher_atbash": 52, "enciph": 52, "atbash": 52, "hebrew": 52, "decipher_atbash": 52, "tlmzebyvzgzinb": 52, "r140": 52, "encipher_substitut": 52, "oeyag": 52, "034": 52, "60n": 52, "v4b3": 52, "rm4": 52, "immateri": 52, "anyv": 52, "wherebi": 52, "r141": 52, "substitution_ciph": 52, "encipher_vigener": 52, "me": [52, 114, 130, 173, 197, 219], "mondai": 52, "qrgkkthrzqebpr": 52, "krypto": 52, "sculptur": 52, "cia": 52, "headquart": 52, "r143": 52, "decipher_vigener": 52, "alp": 52, "palimpsest": 52, "emufphzlrfaxyusdjkzldkrnshgnfivj": 52, "betweensubtleshadingandtheabsenc": 52, "blais": 52, "sixteenth": 52, "centuri": [52, 184], "diplomat": 52, "accid": [52, 236], "invent": [52, 192, 215, 266], "giovan": 52, "batista": 52, "belaso": 52, "1553": 52, "civil": [52, 94], "war": 52, "confederaci": 52, "brass": 52, "nsa": 52, "museum": 52, "fort": 52, "mead": 52, "r142": 52, "sender": 52, "assembl": [52, 76, 97, 116, 204], "concaten": [52, 82], "frequenc": [52, 78, 99, 101, 137, 139, 147, 164], "kasiski": 52, "discov": [52, 76, 105, 221, 268], "babbag": 52, "unbreak": 52, "ye": [52, 81, 213], "gonavybeatarmyyesyoucan": 52, "gold": 52, "auto_kei": 52, "goldbuggonavybeatarmyy": 52, "mcydwshkogamkzcelyfgayr": 52, "pt": [52, 60, 61, 62, 64, 65, 66, 67, 203], "vigenere_ciph": 52, "archiv": [52, 129, 210], "20071116100808": 52, "r144": 52, "filebox": 52, "vt": 52, "batman": 52, "goo": 52, "gl": 52, "ijr22d": 52, "decod": 52, "qrgk": 52, "kt": [52, 119], "hrzqe": 52, "bpr": 52, "meetmeonmondai": 52, "encipher_hil": 52, "z_": [52, 209], "r145": 52, "lester": 52, "1920": 52, "r146": 52, "polygraph": 52, "bare": [52, 109], "ceil": [52, 58, 91, 108, 197], "l_1": [52, 56, 102, 182, 207, 223], "l_t": 52, "c_t": 52, "l_i": [52, 182, 207], "decipher_hil": 52, "hill_ciph": 52, "june": [52, 87], "juli": [52, 210], "1929": 52, "306": 52, "312": [52, 173, 215, 242, 243], "ueqdueodoctcwq": 52, "st": [52, 78, 163], "hjeb": 52, "stqq": 52, "ispk": 52, "stzz": 52, "hd": 52, "ormv": 52, "IS": 52, "uiki": 52, "encipher_bifid": 52, "polybiu": 52, "printabl": 52, "bifid5": 52, "decipher_bifid": 52, "encipher_bifid5": 52, "encipher_bifid6": 52, "r147": 52, "bifid_ciph": 52, "ieilhhfstsfqy": 52, "ieilh": 52, "hfst": 52, "fqyej": 52, "bmtwmg": 52, "bio": 52, "gold_bug": 52, "hg2sfuei7t": 52, "pug": 52, "heldo": 52, "wor6d": 52, "bifid5_squar": 52, "5x5": 52, "cap": [52, 55, 163, 205, 216], "tradition": [52, 59], "decipher_bifid5": 52, "round_trip": 52, "josi": 52, "osi": 52, "iosi": 52, "qiq": 52, "1901": 52, "felix": 52, "delastel": 52, "onto": [52, 64, 65, 66, 76, 80, 87, 90, 92, 192], "helen": 52, "cryptanalysi": 52, "german": 52, "fridai": 52, "ieilehfstsfxe": 52, "okai": 52, "decipher_bifid6": 52, "8am": 52, "kfkljjhf5mmmktfrgpl": 52, "meetmeonmondayat8am": 52, "bifid6_squar": 52, "6x6": 52, "rsa_public_kei": 52, "totient": [52, 91], "carmichael": [52, 91], "p_n": [52, 56, 59, 78], "multiprim": 52, "land": 52, "rad": [52, 99, 114, 192], "reduced_toti": [52, 91], "uniquenss": 52, "rsa_private_kei": 52, "e_0": 52, "canonicalz": 52, "61": [52, 56, 67, 87, 91, 199], "3233": 52, "797": 52, "1577": 52, "multipow": 52, "cryptosystem": 52, "coprim": [52, 78, 91, 159, 190, 210], "30030": 52, "becam": [52, 124], "hardest": 52, "claim": [52, 181, 207, 216], "encipher_rsa": 52, "decipher_rsa": 52, "r148": 52, "rsa_": 52, "28cryptosystem": 52, "r149": 52, "cacr": 52, "uwaterloo": 52, "techreport": 52, "2006": [52, 206], "cacr2006": 52, "r150": 52, "springer": [52, 78, 91, 190, 191, 213], "1007": 52, "2fbfb0055738": 52, "r151": 52, "itii": 52, "manuscript": 52, "1381": 52, "2753": 52, "413": 52, "1193": 52, "823": 52, "r152": 52, "r153": 52, "r154": 52, "r155": 52, "bmod": [52, 197], "vice": [52, 78, 91, 94, 153, 173, 184, 188, 245, 246, 264], "versa": [52, 78, 91, 94, 153, 173, 184, 188, 245, 246, 264], "asymmetr": [52, 67], "puk": 52, "prk": 52, "chines": [52, 91, 190], "k_1": [52, 91, 190, 207], "k_2": 52, "k_n": [52, 190], "p_3": [52, 180], "k_3": 52, "moduli": [52, 91, 190], "2048": [52, 91, 197], "overhead": [52, 92, 194], "modular": [52, 91, 159, 189, 191, 216], "crt": [52, 91, 190], "overcompens": 52, "theorit": 52, "new_msg": 52, "kid_rsa_public_kei": 52, "grade": [52, 79, 177, 193], "school": [52, 206], "bob": [52, 108], "369": 52, "58": [52, 87, 223], "kid_rsa_private_kei": 52, "encipher_kid_rsa": 52, "200": [52, 82, 87, 91, 94, 99, 242], "161": 52, "decipher_kid_rsa": 52, "pub": [52, 242], "pri": 52, "encode_mors": 52, "sep": [52, 197, 214, 228], "mors": 52, "attack": 52, "flank": 52, "r156": 52, "morse_cod": 52, "decode_mors": 52, "word_sep": 52, "mc": [52, 119], "east": 52, "r157": 52, "lfsr_sequenc": 52, "lfsr": 52, "c_k": 52, "golomb": [52, 91], "g157": 52, "autocorrel": 52, "lim_": [52, 57, 59, 76, 78, 204, 262, 266], "balanc": [52, 129, 184, 217, 228], "solomon": 52, "aegean": 52, "park": 52, "laguna": 52, "1967": [52, 191], "lfsr_autocorrel": 52, "lfsr_connection_polynomi": 52, "massei": 52, "m158": 52, "jame": [52, 190], "synthesi": 52, "bch": 52, "tran": 52, "122": [52, 54, 59], "127": [52, 91], "elgamal_public_kei": 52, "elgamal_private_kei": 52, "1031": 52, "636": 52, "212": [52, 78, 191], "mathmat": 52, "dlp": 52, "is_primitive_root": [52, 91], "encipher_elgam": 52, "c2": [52, 61, 68, 82, 84, 149, 163, 205, 213, 215, 217, 244, 247, 273], "encryp": 52, "decipher_elgam": 52, "eucliden": 52, "dh_public_kei": 52, "dh_private_kei": 52, "_p": [52, 163, 188, 190, 192, 204, 207, 215], "_g": 52, "diffi": 52, "hellman": [52, 91], "publicli": 52, "secretli": 52, "dh_shared_kei": 52, "sk": 52, "gm_public_kei": 52, "goldwass": 52, "micali": 52, "gm_private_kei": 52, "b_n": [52, 56, 80, 184, 200], "jacobi_symbol": [52, 91], "reconstruct": [52, 87, 190, 267], "residuos": 52, "entropi": [52, 217], "encipher_gm": 52, "public_kei": 52, "gm": [52, 166], "decipher_gm": 52, "encipher_railf": 52, "rail": 52, "railfenc": 52, "horel": 52, "ollwd": 52, "r160": 52, "rail_fence_ciph": 52, "decipher_railf": 52, "diffgeom": 53, "resembl": [53, 59, 78, 222], "euclidean": [53, 64, 66, 173, 188, 190, 193], "r161": 53, "chart": [53, 183], "parameter": [53, 60, 61, 64, 67, 210], "r162": 53, "sussman": 53, "wisdom": 53, "farr": 53, "2013": [53, 63, 82, 270], "tranform": 53, "cartesian": [53, 94, 131, 136, 150, 153, 158, 178, 183, 184, 205, 216, 235, 245, 246, 248, 249], "polar": [53, 57, 59, 61, 67, 77, 94, 103, 133, 183, 205, 209, 216, 258], "relation_dict": 53, "car2d": 53, "pol": 53, "coordinatesymbol": 53, "jacobian": [53, 87, 127, 215], "jacobian_determin": 53, "r163": 53, "coordinate_system": 53, "base_oneform": 53, "coord_index": 53, "oneform": 53, "base_scalar": 53, "basescalarfield": 53, "base_vector": [53, 242], "coord_funct": 53, "to_si": 53, "coord": [53, 66, 68, 105, 161, 176], "immutabledensematrix": [53, 82, 83, 84, 85, 217], "rn": 53, "r2_r": 53, "r2_p": 53, "jacobian_matrix": 53, "point_to_coord": 53, "coord_si": [53, 244], "imbu": 53, "difficulti": [53, 115], "arriv": [53, 190, 207, 209, 213, 217, 272], "inappropri": 53, "poin": 53, "unappropri": 53, "fy": [53, 183, 214], "ftheta": 53, "basevectorfield": 53, "point_p": 53, "point_r": 53, "s_field": 53, "dxi": 53, "v1": [53, 64, 87, 111, 130, 173, 174, 176, 217, 236, 242, 244, 245, 246, 247], "v2": [53, 64, 87, 111, 173, 174, 176, 236, 242, 244, 245, 246, 247], "v_1": [53, 192, 215], "v_2": [53, 192], "e_x": [53, 223], "e_i": [53, 184, 207, 223], "e_r": 53, "c_xy": 53, "c_xr": 53, "unfortun": [53, 55, 92, 196, 210], "e_rho": 53, "form_field": 53, "exterior": [53, 67], "dg": 53, "tensorproduct": [53, 160, 162, 218, 219], "multilinear": 53, "wedg": [53, 76], "tp1": 53, "tp": [53, 135, 162, 188], "wedgeproduct": 53, "wp1": 53, "liederiv": 53, "v_field": 53, "transport": 53, "pushforward": 53, "e_theta": 53, "basecovarderivativeop": 53, "christoffel": 53, "metric_to_christoffel_2nd": 53, "ch": [53, 87, 210], "cvd": 53, "covarderivativeop": 53, "intcurve_seri": 53, "vector_field": [53, 248], "start_point": 53, "dt": [53, 59, 118, 130, 172, 173, 175, 180, 181, 213, 272], "f_i": [53, 76, 87, 190, 194], "movement": 53, "intcurve_diffequ": 53, "init_cond": 53, "f_1": [53, 56, 59, 76, 101, 110, 113, 131, 184, 190, 193, 213], "f_0": [53, 56, 110, 190], "vectors_in_basi": 53, "kept": [53, 165, 181, 235, 267], "twoform_to_matrix": 53, "twoform": 53, "e_j": 53, "metric_to_christoffel_1st": 53, "levi": [53, 59, 217, 223], "civita": [53, 59, 223], "metric_to_riemann_compon": 53, "riemann": [53, 56, 57, 58, 76, 184, 209, 223], "non_trivial_metr": 53, "dtheta": 53, "drho": 53, "metric_to_ricci_compon": 53, "ricci": 53, "fft": [54, 130], "ifft": 54, "ntt": 54, "intt": 54, "fwht": 54, "ifwht": 54, "mobius_transform": 54, "inverse_mobius_transform": 54, "convolution_fft": 54, "convolution_ntt": 54, "convolution_fwht": 54, "convolution_subset": 54, "covering_product": 54, "intersecting_product": 54, "radix": 54, "r164": 54, "coolei": 54, "93tukey_fft_algorithm": 54, "r165": 54, "fastfouriertransform": 54, "r166": 54, "r167": 54, "ring": [54, 74, 87, 88, 180, 185, 186, 189, 190, 192, 193, 194, 195, 196, 197, 235], "pz": [54, 99, 223], "643": [54, 91], "767": 54, "387": 54, "415": 54, "384": 54, "353": [54, 87], "r168": 54, "apfloat": 54, "r169": 54, "numbertheoretictransform": 54, "r170": 54, "discrete_fourier_transform_": 54, "r171": 54, "r172": 54, "r173": 54, "wht": 54, "r174": 54, "hadamard_transform": 54, "r175": 54, "fast_walsh": 54, "93hadamard_transform": 54, "r176": 54, "r177": 54, "mobiu": [54, 91], "lattic": [54, 210], "bitmask": 54, "r178": 54, "b6bius_inversion_formula": 54, "r179": 54, "csail": 54, "mit": 54, "rrw": 54, "conv": 54, "r180": 54, "arxiv": [54, 87, 103, 235], "1211": 54, "0189": 54, "r181": 54, "r182": 54, "r183": 54, "888": 54, "444": 54, "1283": 54, "19351": 54, "14219": 54, "15502": 54, "44": [54, 56, 87, 91, 206, 217], "41": [54, 61, 87, 91, 188, 210], "63": [54, 87, 91], "r184": 54, "convolution_theorem": 54, "r185": 54, "333": [54, 91], "555": 54, "222": 54, "666": 54, "15555": 54, "19404": 54, "r186": 54, "r187": 54, "56": [54, 78, 91, 193], "68": [54, 79, 87, 91, 210], "48": [54, 61, 95, 210, 215, 217, 262], "2057": 54, "1870": 54, "r188": 54, "radioeng": 54, "cz": [54, 210], "fulltext": 54, "2002": [54, 184, 191, 194], "02_03_40_42": 54, "r189": 54, "r190": 54, "r191": 54, "AND": [54, 81, 249], "327": [54, 213], "r192": 54, "44288293815837": 55, "4429": 55, "4428829381583662470158809900606936986146216893757": 55, "28902548222223624241": 55, "091999668350375232456": 55, "14159265358979": [55, 59, 215], "333333333333333": [55, 187, 209], "1415926535": 55, "7182818284": 55, "100000": [55, 91, 99], "951": 55, "95678796130331164628399634646042209010610577945815": 55, "gmpy": [55, 187, 188, 271], "googl": [55, 182, 183, 216], "100000000000000": 55, "1000000000": 55, "125000000000000000000000000000": 55, "100000000000000005551115123126": 55, "100000000000000000000000000000": 55, "1415": 55, "uncertainti": [55, 168], "003": 55, "31417": 55, "propag": [55, 64, 134, 137], "5000": [55, 94], "50000000000000000000000000000": 55, "varphi": [55, 59, 192, 197, 213], "erron": 55, "goldenratio": [55, 198, 209], "34665576869e": 55, "208": [55, 193], "64613129282185e": 55, "60123853010113e": 55, "210": [55, 91, 210], "thousand": [55, 91, 261], "precisionexhaust": 55, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 55, "binet": 55, "104": 55, "1336": 55, "portion": [55, 67, 82, 87], "meaningless": 55, "012297": 55, "9562288417661": 55, "956": 55, "29128599706266": 55, "2912859970626635404072825905956005414986193682745": 55, "14159265358979323846264338328": 55, "integrand": [55, 59, 75, 76, 78, 207], "struggl": [55, 196], "346": 55, "34635637913639": 55, "dealt": [55, 76], "504067061906928": 55, "50406706190692837199": 55, "wrap_lin": [55, 78, 79, 87, 95, 177, 184, 185, 196, 197, 213], "intgrl": 55, "extrapol": [55, 204], "richardson": [55, 204, 216], "slowli": [55, 204], "64493406684823": 55, "577215664901533": 55, "57721566490153286060651209008240243104215933593992": 55, "10000000": [55, 193], "20000000": [55, 193], "693147255559946": 55, "tune": [55, 79, 177, 197], "worthwhil": 55, "hypergeometr": [55, 56, 58, 69, 71, 75, 76, 191, 201, 208, 213, 215, 217, 253, 272], "ramanujan": [55, 56, 91], "9801": 55, "1103": 55, "26390": 55, "396": [55, 114], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 55, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 55, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 55, "355": [55, 91, 191], "113": [55, 91, 210], "33333": [55, 78], "635": 55, "504": [55, 191], "130198866629986772369127970337": 55, "49": [55, 56, 91, 95, 190, 210], "___________": [55, 95, 213], "k_sym": 56, "binom": [56, 91, 217, 272], "dotsc": [56, 199], "j_1": [56, 142, 143, 160, 182, 199, 218], "j_2": [56, 142, 143, 160, 182, 199], "dotsb": [56, 199], "atop": [56, 59, 199, 207], "2j_2": [56, 199], "3j_2": [56, 199], "j_": [56, 59, 76, 78, 160, 199, 207, 266], "877": 56, "4140": 56, "21147": 56, "115975": 56, "846749014511809332450147": 56, "r193": 56, "bell_numb": 56, "r194": 56, "bellnumb": 56, "r195": 56, "bellpolynomi": 56, "6k": 56, "66": [56, 82, 87, 197], "1000001": 56, "r196": 56, "bernoulli_numb": 56, "r197": 56, "bernoulli_polynomi": 56, "r198": 56, "bernoullinumb": 56, "r199": 56, "bernoullipolynomi": 56, "_k": [56, 59, 78, 182, 192, 217], "expand_func": [56, 59], "6435": 56, "pascal": [56, 91], "4th": [56, 57, 73, 87, 91, 130], "195": 56, "r200": 56, "johndcook": 56, "binomial_coeffici": [56, 91], "c_n": [56, 59, 80, 213], "429": [56, 197], "1430": 56, "4862": 56, "39764993382373624267": 56, "020884341620842555705": 56, "r201": 56, "catalan_numb": 56, "r202": 56, "catalannumb": [56, 197], "r203": 56, "r204": 56, "geomet": [56, 184], "mathcircl": 56, "2j": [56, 190, 217], "r209": 56, "e_k": [56, 190], "1385": 56, "2702765": 56, "4096": 56, "r205": 56, "euler_numb": 56, "r206": 56, "eulernumb": 56, "r207": 56, "alternating_permut": 56, "r208": 56, "alternatingpermut": 56, "ii": [56, 78, 91, 193, 197, 213], "swing": 56, "derang": [56, 235], "r211": 56, "generate_derang": [56, 235], "r210": 56, "r212": 56, "double_factori": 56, "texttt": [56, 205], "r213": 56, "r214": 56, "paul": [56, 232], "235": 56, "268": 56, "1995": [56, 191, 209, 215], "f_z": [56, 178, 248], "f_2": [56, 76, 101, 110, 113, 131, 190, 207, 213], "r216": 56, "fibonacci_numb": 56, "r217": 56, "fibonaccinumb": 56, "t_0": [56, 210], "149": [56, 91], "r218": 56, "r219": 56, "tribonaccinumb": 56, "r220": 56, "oei": [56, 91], "a000073": 56, "137": [56, 87, 103], "205": [56, 76, 207], "144": [56, 78, 182], "5269": 56, "761": 56, "280": 56, "83711": 56, "27720": 56, "30247": 56, "9900": 56, "983697455232980674869851942390639915940": 56, "r221": 56, "harmonic_numb": 56, "r222": 56, "harmonicnumb": [56, 197], "r223": 56, "harmonicnumber2": 56, "l_0": [56, 102, 223, 224], "47": [56, 59, 87, 91, 103, 136, 168, 196], "76": [56, 87, 91, 190, 193], "r224": 56, "lucas_numb": 56, "r225": 56, "lucasnumb": 56, "2t": 56, "r226": 56, "genocchi_numb": 56, "r227": 56, "genocchinumb": 56, "irrelev": 56, "r228": 56, "number_theori": 56, "r229": 56, "pentagonal_number_theorem": 56, "pochhamm": [56, 197, 209], "r230": 56, "r231": 56, "pochhammer_symbol": 56, "274": 56, "225": [56, 91, 191], "511": 56, "9330": 56, "34105": 56, "42525": 56, "22827": 56, "5880": 56, "750": 56, "r232": 56, "stirling_numbers_of_the_first_kind": 56, "r233": 56, "stirling_numbers_of_the_second_kind": 56, "multiset": [56, 76, 232, 235], "babi": [56, 91, 235], "aa": [56, 182], "bb": [56, 182, 209, 235], "multiset_combin": [56, 235], "aab": [56, 235], "aabc": 56, "aaaabbbbcccc": 56, "m_1": [56, 101, 142, 160, 182, 210], "m_2": [56, 113, 131, 142, 160, 182], "m_k": 56, "r234": 56, "r235": 56, "tinyurl": 56, "cep849r": 56, "ba": [56, 235], "multiset_permut": [56, 235], "r236": 56, "aabbc": 56, "mississippi": [56, 235], "609": 56, "1521": 56, "1768": 56, "1224": [56, 91], "579": 56, "197": 56, "r237": 56, "undergradu": 56, "csse": 56, "uwa": 56, "au": 56, "cits7209": 56, "707106781186548": 57, "negativeon": [57, 267], "tangent": [57, 61, 63, 67, 78, 194, 213], "643501108793284": 57, "r238": 57, "ib": [57, 119], "complex_conjug": 57, "r242": 57, "r239": 57, "trigonometric_funct": 57, "r240": 57, "r241": 57, "elementaryfunct": 57, "trigonometryangl": 57, "r243": 57, "r244": 57, "r245": 57, "r246": 57, "r247": 57, "r248": 57, "cotang": [57, 194], "r249": 57, "r250": 57, "r251": 57, "secant": [57, 193], "r252": 57, "r253": 57, "r254": 57, "cosec": 57, "r255": 57, "r256": 57, "r257": 57, "unnorm": [57, 59], "qquad": [57, 168, 190], "jn": [57, 59, 160, 193, 197, 266], "spheric": [57, 58, 103, 142, 182, 183, 193, 242, 245, 246, 266], "r258": 57, "sinc_funct": 57, "r259": 57, "inverse_trigonometric_funct": 57, "r260": 57, "r261": 57, "r262": 57, "r263": 57, "r264": 57, "r265": 57, "r266": 57, "r267": 57, "arctan": [57, 194, 197], "r268": 57, "r269": 57, "arccot": [57, 197], "r273": 57, "r270": 57, "r271": 57, "r272": 57, "arcsec": [57, 197], "r274": 57, "r275": 57, "r276": 57, "arccsc": [57, 197], "quadrant": [57, 188, 216], "clock": [57, 206], "reurn": 57, "r277": 57, "r278": 57, "r279": 57, "arctan2": 57, "r280": 57, "hyperbolic_funct": 57, "r281": 57, "r282": 57, "arcsech": [57, 197], "imaginaryunit": [57, 197], "r283": 57, "r284": 57, "r285": 57, "arccsch": [57, 197], "567": 57, "r286": 57, "r287": 57, "ceilingfunct": 57, "r288": 57, "r289": 57, "floorfunct": 57, "r290": 57, "lfloor": [57, 188, 216, 217], "rfloor": [57, 188, 216, 217], "fractional_part": 57, "r291": 57, "fractionalpart": 57, "lambert": [57, 78, 194], "r292": 57, "w_k": 57, "635564016364870": 57, "34747534407696": 57, "41624341514535": 57, "lambert_w_funct": 57, "mathcal": [57, 76, 101, 128, 160, 182, 205], "cond": [57, 76, 78, 205], "piecewise_fold": 57, "folded_cond": 57, "ITE": [57, 81], "_eval_integr": [57, 78], "piecewise_integr": 57, "as_expr_set_pair": 57, "antideriv": [57, 59, 78, 213, 262], "conflict": [57, 91, 101, 114, 230], "supremum": [57, 205], "r293": 57, "directed_complete_partial_ord": 57, "r294": 57, "lattice_": 57, "28order": 57, "global_paramet": 57, "rootof": [57, 193], "rootoftool": [57, 87, 193], "integer_nthroot": [57, 91], "r295": 57, "square_root": 57, "r296": 57, "r297": 57, "root_of_un": 57, "r298": 57, "principal_valu": [57, 78], "r299": 57, "cuberoot": 57, "powdenest": 57, "misc": [57, 82, 238, 253], "r300": 57, "r301": 57, "r302": 57, "cube_root": 57, "r303": 57, "polar_lift": [58, 59, 209], "periodic_argu": 58, "principal_branch": [58, 76], "sec": [58, 78, 99, 192, 197, 206, 272], "csc": [58, 93, 197, 206], "acot": [58, 197], "asec": [58, 197], "acsc": [58, 197], "hyperbol": [58, 59, 194, 216, 268, 272], "hyperbolicfunct": 58, "coth": [58, 197, 209], "sech": [58, 197], "csch": [58, 197], "asinh": [58, 197], "acosh": [58, 197], "atanh": [58, 194, 197, 207], "acoth": [58, 197], "asech": [58, 197], "acsch": [58, 197], "roundfunct": 58, "lambertw": [58, 194, 197, 215, 216, 273], "exprcondpair": 58, "miscellan": [58, 234, 259, 260], "identityfunct": 58, "real_root": [58, 193, 215], "bell": [58, 147, 199, 235], "bernoulli": [58, 59, 197, 215, 217], "catalan": [58, 197], "subfactori": [58, 197, 235], "factorial2": [58, 164, 197], "fallingfactori": [58, 197], "luca": [58, 91, 197, 203], "genocchi": 58, "multifactori": 58, "nc": 58, "nt": [58, 235], "fresnel": [58, 136, 197, 207], "airi": [58, 78, 213], "spline": 58, "ellipt": [58, 61, 91, 184], "mathieu": [58, 197], "delta_funct": [59, 78], "int_": [59, 75, 76, 78, 200, 262, 266], "sum_i": [59, 204], "is_simpl": 59, "tensor_funct": 59, "kroneckerdelta": [59, 84, 163, 197, 209], "r304": 59, "deltafunct": [59, 78], "h0": 59, "electron": [59, 103, 206], "signal": [59, 81, 91, 99, 101, 130, 190, 267], "improp": [59, 78], "convolut": [59, 199, 253], "r305": 59, "heavisidestepfunct": 59, "r306": 59, "iv": [59, 194], "105": [59, 91, 193, 210], "parg": 59, "singularity_funct": 59, "singularityfunct": [59, 78, 94], "macaulai": 59, "heavisidediracdelta": 59, "r307": 59, "r308": 59, "r309": 59, "r310": 59, "r311": 59, "setminu": [59, 76], "17805383034794561964694160130": 59, "65092319930185633889": 59, "8724366472624298171": 59, "r312": 59, "r313": 59, "r314": 59, "loggammafunct": 59, "r315": 59, "19093197": 59, "5173168": 59, "ni": [59, 91], "r316": 59, "polygamma_funct": 59, "r317": 59, "polygammafunct": 59, "r318": 59, "r319": 59, "polygamma2": 59, "r320": 59, "digamma_funct": 59, "r321": 59, "digammafunct": 59, "r322": 59, "r323": 59, "trigamma_funct": 59, "r324": 59, "trigammafunct": 59, "r325": 59, "int_x": 59, "_1f_1": 59, "confluent": [59, 207], "xt": 59, "expint": [59, 197], "r326": 59, "incomplete_gamma_funct": 59, "upper_incomplete_gamma_funct": 59, "r327": 59, "r328": 59, "r329": 59, "gamma2": 59, "r330": 59, "gamma3": 59, "r331": 59, "exponential_integr": 59, "relation_with_other_funct": 59, "int_0": [59, 76, 78, 262, 272], "r332": 59, "lower_incomplete_gamma_funct": 59, "r333": 59, "r334": 59, "r335": 59, "r336": 59, "multigamma": 59, "gamma_p": 59, "r337": 59, "multivariate_gamma_funct": 59, "beta_funct": 59, "eulerian": 59, "02671848900111377452242355235388489324562": 59, "2112723729365330143": 59, "7655283165378005676": 59, "r338": 59, "r339": 59, "betafunct": 59, "r340": 59, "error_funct": 59, "999999984582742099719981147840": 59, "1296959": 59, "73071763923152794095062": 59, "r341": 59, "r342": 59, "r343": 59, "r344": 59, "0000000154172579002800188521596734869": 59, "r345": 59, "r346": 59, "r347": 59, "r348": 59, "5648024145755525987042919132": 59, "995322265018952734162069256367": 59, "r349": 59, "r350": 59, "r351": 59, "r352": 59, "179143454621291692285822705344": 59, "r353": 59, "inverse_funct": 59, "r354": 59, "inverseerf": [59, 197], "r355": 59, "r356": 59, "inverseerfc": [59, 197], "r357": 59, "inverseerf2": 59, "fresnelintegr": 59, "343415678363698242195300815958": 59, "fresnelc": [59, 197, 207], "r358": 59, "fresnel_integr": 59, "r359": 59, "r360": 59, "r361": 59, "r362": 59, "wrench": 59, "jr": 59, "vicki": 59, "allei": 59, "488253406075340754500223503357": 59, "r363": 59, "r364": 59, "r365": 59, "r366": 59, "r367": 59, "ei": [59, 76, 192, 197, 207, 213], "background": [59, 79, 124, 177, 180, 270], "cauchi": [59, 76, 78, 188, 213, 217], "219383934395520": 59, "21938393439552": 59, "shi": [59, 76, 197, 207], "e1": [59, 61, 68, 114, 187, 192, 204, 213, 216], "li": [59, 67, 78, 91, 163, 197, 251], "r368": 59, "r369": 59, "r370": 59, "sfu": [59, 78], "cbm": [59, 78], "aand": [59, 78], "page_228": 59, "int_1": [59, 76], "zt": [59, 76], "unbranch": [59, 76], "meijerg": [59, 70, 76, 78, 197, 217, 272], "postiv": 59, "r371": 59, "r372": 59, "expintegral": [59, 197], "r373": 59, "04516378011749278484458888919": 59, "0652795784357498247001125598": 59, "08346052231061726610939702133": 59, "soldner": 59, "findroot": [59, 215], "45136923488338": 59, "r374": 59, "logarithmic_integr": 59, "r375": 59, "logarithmicintegr": 59, "r376": 59, "r377": 59, "soldnersconst": 59, "92242131492155809316615998938": 59, "r378": 59, "r379": 59, "r380": 59, "r381": 59, "trigonometric_integr": 59, "_1": [59, 87, 173, 207, 236], "somewhat": [59, 78, 114, 188], "r382": 59, "r383": 59, "r384": 59, "laurent": [59, 188, 194, 213], "j_n": [59, 160], "r385": 59, "r386": 59, "r387": 59, "r388": 59, "yn": [59, 197, 203], "r389": 59, "i_": [59, 76, 207, 217, 218], "iz": 59, "r390": 59, "k_": [59, 76, 125, 126], "r391": 59, "hankel1": [59, 197], "hankel": [59, 78], "iy_": 59, "hankel2": [59, 197], "r392": 59, "hankelh1": [59, 197], "r393": 59, "hankelh2": [59, 197], "2z": [59, 216, 217], "orthopoli": [59, 193], "spherical_bessel_fn": [59, 193], "3j": [59, 142, 182], "099419756723640344491": 59, "054525080242173562897": 59, "r394": 59, "y_n": [59, 210], "18525034196069722536": 59, "014895573969924817587": 59, "r395": 59, "jn_zero": 59, "besseljzero": 59, "sph_jn": 59, "7635": 59, "095": 59, "323": [59, 91], "515": 59, "marcumq": 59, "marcum": 59, "q_m": 59, "r396": 59, "marcum_q": 59, "r397": 59, "airybas": 59, "airyai": [59, 197, 213], "ai": [59, 91], "airyaiprim": [59, 197], "22740742820168557599192443603787379946077222541710": 59, "airybi": [59, 197, 213], "airybiprim": [59, 197], "r398": 59, "airy_funct": 59, "r399": 59, "r400": 59, "encyclopediaofmath": 59, "r401": 59, "airyfunct": 59, "41230258795639848808323405461146104203453483447240": 59, "r402": 59, "r403": 59, "r404": 59, "r405": 59, "61825902074169104140626429133247528291577794512415": 59, "r406": 59, "r407": 59, "r408": 59, "r409": 59, "27879516692116952268509756941098324140300059345163": 59, "r410": 59, "r411": 59, "r412": 59, "r413": 59, "bspline": 59, "bspline_basi": 59, "knot": 59, "cubic": [59, 184, 193, 210, 215], "bspline_basis_set": 59, "r414": 59, "interpolating_splin": 59, "131": [59, 173], "39": [59, 91, 196], "interpolating_poli": [59, 193], "zeta_funct": 59, "hurwitz": 59, "admit": [59, 213], "circumst": [59, 192, 266], "lerch": 59, "transcend": 59, "lerchphi": [59, 197], "dirichlet_eta": [59, 197], "20205690315959": 59, "polylog": [59, 197], "r415": 59, "r416": 59, "hurwitz_zeta_funct": 59, "r417": 59, "dirichlet_eta_funct": 59, "polylogarithm": 59, "_s": [59, 163], "sheet": [59, 206], "phi_0": 59, "ze": 59, "r418": 59, "bateman": 59, "erdelyi": 59, "1953": [59, 192], "york": [59, 76, 129, 207, 215], "mcgraw": [59, 109, 129, 173, 179, 242], "r419": 59, "r420": 59, "lerch_transcend": 59, "stieltj": [59, 197], "gamma_": [59, 102, 104], "r421": 59, "stieltjes_const": 59, "ap": [59, 63, 207], "bq": [59, 185, 186, 207], "a_p": [59, 76, 207, 272], "b_q": [59, 76, 207, 272], "_pf_q": [59, 207, 213, 272], "unicod": [59, 79, 87, 177, 197, 228, 266], "r422": 59, "r423": 59, "generalized_hypergeometric_funct": 59, "convergence_stat": 59, "radius_of_converg": 59, "radiu": [59, 61, 65, 67, 121, 123, 132, 136, 183, 216, 217, 251], "meijer": [59, 69, 71, 77, 78, 262, 272], "mellin": [59, 77, 78], "barn": 59, "b_m": [59, 76, 215], "confusingli": 59, "int_l": [59, 76, 207], "contour": [59, 61, 76, 183, 207], "__1": 59, "subvector": 59, "aother": 59, "bm": 59, "bother": [59, 267], "slater": [59, 207], "allow_hyp": [59, 209], "subsum": 59, "r424": 59, "r425": 59, "meijer_g": 59, "get_period": [59, 76], "appellf1": [59, 197], "b2": [59, 91, 94, 95, 106, 114, 130, 173, 186, 188, 197, 207, 210, 213, 247], "appel": 59, "0063339426292673": 59, "172870711": 59, "659936": 59, "15605338197184": 59, "r426": 59, "appell_seri": 59, "r427": 59, "hypergeometricfunct": 59, "elliptic_integr": 59, "elliptic_k": [59, 197], "tfrac": [59, 213, 217], "eccentr": [59, 61], "50923695405127": 59, "625146415202697": 59, "elliptic_f": [59, 197], "r428": 59, "r429": 59, "ellipticintegr": 59, "elliptick": [59, 197], "909449841483": 59, "74720545502474": 59, "r430": 59, "r431": 59, "ellipticf": 59, "elliptic_": [59, 61, 197], "55203744279187": 59, "290764986058437": 59, "991052601328069": 59, "81879421395609": 59, "r432": 59, "r433": 59, "elliptice2": 59, "r434": 59, "elliptic": [59, 197], "elliptic_pi": [59, 197], "50232379629182": 59, "760939574180767": 59, "29136443417283": 59, "32555634906645": 59, "r435": 59, "r436": 59, "ellipticpi3": 59, "r437": 59, "ellipticpi": [59, 197], "mathieu_funct": 59, "mathieubas": 59, "mathieusprim": [59, 197], "mathieuc": [59, 197], "mathieucprim": [59, 197], "r438": 59, "r439": 59, "r440": 59, "r441": 59, "mathieuandspheroidalfunct": 59, "r442": 59, "r443": 59, "r444": 59, "r445": 59, "r446": 59, "r447": 59, "r448": 59, "r449": 59, "r450": 59, "r451": 59, "r452": 59, "r453": 59, "chebyshevu": [59, 197], "chebyshevt_root": 59, "chebyshevu_root": 59, "assoc_legendr": [59, 197], "jacobi_poli": [59, 193], "gegenbauer_poli": [59, 193], "chebyshevt_poli": [59, 193], "chebyshevu_poli": [59, 193], "hermite_poli": [59, 193], "legendre_poli": [59, 193], "laguerre_poli": [59, 193], "r454": 59, "jacobi_polynomi": 59, "r455": 59, "jacobipolynomi": 59, "r456": 59, "jacobip": [59, 197], "jacobi_norm": 59, "normilz": 59, "p_m": 59, "delta_": [59, 160, 168], "r457": 59, "r458": 59, "r459": 59, "r460": 59, "gegenbauer_polynomi": 59, "r461": 59, "gegenbauerpolynomi": 59, "r462": 59, "gegenbauerc3": 59, "r463": 59, "chebyshev_polynomi": 59, "r464": 59, "chebyshevpolynomialofthefirstkind": 59, "r465": 59, "chebyshevpolynomialofthesecondkind": 59, "r466": 59, "r467": 59, "u_n": [59, 78, 190, 192], "r468": 59, "r469": 59, "r470": 59, "r471": 59, "r472": 59, "chebyshev_root": 59, "r473": 59, "legendre_polynomi": 59, "r474": 59, "legendrepolynomi": 59, "r475": 59, "legendrep": [59, 197], "r476": 59, "legendrep2": 59, "r477": 59, "associated_legendre_polynomi": 59, "r478": 59, "r479": 59, "r480": 59, "r481": 59, "hermite_polynomi": 59, "r482": 59, "hermitepolynomi": 59, "r483": 59, "hermiteh": [59, 197], "l_n": [59, 78], "r484": 59, "laguerre_polynomi": 59, "r485": 59, "laguerrepolynomi": 59, "r486": 59, "laguerrel": [59, 197], "r487": 59, "laguerrel3": 59, "r488": 59, "generalized_laguerre_polynomi": 59, "r489": 59, "associatedlaguerrepolynomi": 59, "r490": 59, "r491": 59, "spherical_harmon": 59, "ynm": [59, 182], "ynm_c": 59, "znm": 59, "r492": 59, "r493": 59, "sphericalharmon": 59, "r494": 59, "sphericalharmonici": 59, "r495": 59, "r496": 59, "r497": 59, "r498": 59, "z_n": [59, 191], "r499": 59, "r500": 59, "r501": 59, "eijk": 59, "levicivita": [59, 87], "eval_levicivita": 59, "pseudotensor": 59, "delta_rang": [59, 163], "kroneck": [59, 162, 163, 218, 223], "r502": 59, "kronecker_delta": [59, 163], "indices_contain_equal_inform": [59, 163], "fermi": [59, 163], "above_fermi": [59, 163], "below_fermi": [59, 163], "is_above_fermi": [59, 163], "is_below_fermi": [59, 163], "is_only_below_fermi": [59, 163], "is_only_above_fermi": [59, 163], "killable_index": [59, 163], "preferred_index": [59, 163], "point2d": [60, 61, 62, 63, 64, 66, 67, 68], "arbitrary_point": [60, 61, 62, 63, 64, 65, 67], "polyfunc": [60, 193], "ambient_dimens": [60, 62, 64, 66], "plot_interv": [60, 61, 64, 67], "lower_bound": [60, 61, 64, 67], "upper_bound": [60, 61, 64, 67], "counterclockwis": [60, 61, 62, 66, 95], "geometryent": [60, 61, 62, 64, 66, 67, 68], "hradiu": 61, "vradiu": 61, "geometryerror": [61, 64, 67, 68], "radii": 61, "foci": 61, "periapsi": 61, "apoapsi": 61, "focus_dist": 61, "shortest": [61, 64, 67, 180, 203, 209, 213, 235], "auxiliary_circl": 61, "xmin": [61, 62, 64, 66, 67, 183], "ymin": [61, 62, 64, 66, 67, 183], "xmax": [61, 62, 64, 66, 67, 183], "ymax": [61, 62, 64, 66, 67, 183], "rectangl": [61, 62, 64, 66, 67, 183, 193], "director_circl": 61, "perpendicular": [61, 64, 65, 67, 80, 122, 136, 181], "director": 61, "130": 61, "r503": 61, "encloses_point": [61, 62, 67], "border": [61, 67], "_slope": 61, "slope": [61, 62, 64, 67, 94, 95, 99], "eq1": [61, 213, 215, 216], "eq2": [61, 81, 213, 216], "r504": 61, "108270": 61, "r505": 61, "equation_of_a_shifted_ellips": 61, "evolut": 61, "focal": [61, 132, 136], "100500": 61, "363": [61, 91, 191], "175": [61, 87, 190, 191], "is_tang": [61, 63], "tangent_lin": 61, "normal_lin": 61, "line2d": [61, 64, 67], "quartic": [61, 193, 215], "2020": [61, 142], "polar_second_moment_of_area": [61, 67], "moment": [61, 67, 94, 95, 116, 124, 126, 172, 183, 193, 210, 217], "constitu": [61, 67, 111, 173, 203, 242], "planar": [61, 67, 95, 136], "resist": [61, 67, 94, 95, 206], "deflect": [61, 67, 94, 95], "bend": [61, 67, 94, 96], "r506": 61, "polar_moment_of_inertia": [61, 67], "random_point": [61, 64, 65], "arb": 61, "364": 61, "notimpl": [61, 192], "second_moment_of_area": [61, 67], "centroid": [61, 67, 68, 94], "i_xx": [61, 67], "i_yi": [61, 67], "i_xi": [61, 67], "ellis": 61, "r507": 61, "list_of_second_moments_of_area": 61, "section_modulu": [61, 67], "sympify": [61, 67, 94, 97, 106, 111, 134, 137, 175], "farthest": [61, 67], "s_x": [61, 67], "s_y": [61, 67], "r508": 61, "semilatus_rectum": 61, "semi": [61, 64, 91], "latu": 61, "rectum": 61, "chord": 61, "conic": [61, 210, 242], "directrix": 61, "r509": 61, "semilatusrectum": 61, "r510": 61, "latus_rectum": 61, "collinear": [61, 63, 65, 66, 67, 183], "gx": 61, "hy": 61, "synonym": [61, 192], "p4": [61, 64, 66, 67, 183], "boundari": [62, 64, 94, 95, 176, 194, 205, 213, 217], "t2": [62, 67, 68, 91, 106, 111, 210, 217, 223], "ordering_of_class": 62, "is_similar": [62, 64, 67, 68], "uniform": [62, 183, 217], "enlarg": 62, "shrink": [62, 76], "parameter_valu": [62, 65], "pent": 62, "rpent": 62, "rcirc": 62, "entity1": 63, "entity2": 63, "zp": 63, "is_collinear": [63, 66], "segment2d": [63, 64, 67, 68], "wikipappu": 63, "bc": [63, 97, 235, 238, 247], "subs_point": 63, "p11": 63, "p12": 63, "p13": 63, "p21": 63, "p22": 63, "p23": 63, "ll1": 63, "ll2": 63, "ll3": 63, "ll4": 63, "ll5": 63, "ll6": 63, "pp1": 63, "pp2": 63, "pp3": 63, "encyclopedia": [63, 179], "apr": 63, "s_hexagon_theorem": 63, "clockwis": [63, 78, 82, 94, 95, 97], "overlap": [63, 68, 90, 184, 205, 238], "infanc": 63, "geometryresult": 63, "fair": [63, 217], "angle_between": [64, 65, 67, 173], "reflex": 64, "eman": 64, "readili": [64, 87], "sw": 64, "obtus": 64, "smallest_angle_between": 64, "line3d": [64, 65, 66], "is_perpendicular": [64, 65, 66, 67], "ray2d": [64, 67], "closing_angl": 64, "are_concurr": [64, 65], "concurr": [64, 65, 194], "l3": [64, 117, 190], "l4": [64, 117], "bisector": [64, 67], "p5": [64, 66, 67, 183], "p6": [64, 67, 183], "p7": [64, 67, 183], "segment3d": [64, 65], "direction_ratio": [64, 66], "is_parallel": [64, 65], "parallel_lin": 64, "perpendicular_lin": [64, 65], "perpendicular_seg": 64, "enpoint": 64, "reform": 64, "432": [64, 192], "92": [64, 191, 213, 217], "ccw": [64, 67], "ray3d": [64, 65, 136], "xdirect": 64, "ydirect": 64, "midpoint": [64, 66, 67, 78, 183, 247], "170": [64, 217], "341": 64, "perpendicular_bisector": 64, "linearentity2d": 64, "linearentity3d": [64, 65], "direction_cosin": [64, 66], "zdirect": 64, "normal_vector": [65, 136], "proce": [65, 127, 190, 192, 207, 215], "147": 65, "321": 65, "is_coplanar": 65, "perpendicualar": 65, "parallel_plan": 65, "on_circl": 65, "off_circl": 65, "perpendicular_plan": 65, "pt1": 65, "projection_lin": 65, "on_morph": 66, "affine_rank": 66, "are_coplanar": 66, "canberra_dist": 66, "canberra": 66, "geometricent": 66, "taxicab_dist": 66, "is_concycl": 66, "concycl": 66, "fewer": [66, 67, 127, 217, 262], "is_scalar_multipl": 66, "ambient": 66, "orthogonal_direct": 66, "taxicab": 66, "_nocheck": 66, "are_collinear": 66, "4x4": [66, 90, 135, 217], "travers": [67, 91, 107, 193, 206, 222, 232, 253, 267], "unrot": 67, "circumscrib": 67, "spin": [67, 103, 116, 149, 150, 158], "perimet": [67, 249], "contact": [67, 116, 120, 121, 122, 123, 180, 221], "38": [67, 87, 91, 197, 210, 212, 217], "cut_sect": 67, "upper_polygon": 67, "lower_polygon": 67, "upper_seg": 67, "lower_seg": 67, "r511": 67, "r512": 67, "paulbourk": 67, "polygonmesh": 67, "insidepoli": 67, "first_moment_of_area": 67, "q_x": [67, 180], "q_y": [67, 180], "625": [67, 251], "3125": [67, 217], "525": 67, "3000": [67, 94], "r513": 67, "skyciv": 67, "beam": [67, 97, 132, 135, 258], "bmd": 67, "r514": 67, "mechanicalc": 67, "poly1": 67, "poly2": 67, "interior": [67, 193, 205], "180": [67, 181, 191], "r515": 67, "r516": 67, "r517": 67, "apothem": 67, "interior_angl": 67, "exterior_angl": 67, "circumcircl": 67, "incircl": 67, "inradiu": 67, "inscrib": 67, "circumcent": 67, "circumradiu": 67, "leg": 67, "square_in_unit_circl": 67, "kite": 67, "asa": 67, "sa": [67, 193], "sss": 67, "altitud": 67, "orthocent": 67, "exradii": 67, "median": [67, 217, 259], "medial": 67, "nine_point_circl": 67, "straight": [67, 73, 99, 118, 180, 213], "eulerlin": 67, "equilater": 67, "coincid": [67, 87, 90, 108, 114, 184, 242, 246, 264], "excent": 67, "excircl": 67, "touch": [67, 116, 206], "r518": 67, "ly": [67, 87, 188], "exradiu": 67, "r519": 67, "r520": 67, "incent": 67, "is_equilater": 67, "is_isoscel": 67, "is_right": 67, "is_scalen": 67, "nine": [67, 197], "feet": 67, "real_num": 68, "hull": 68, "r521": 68, "graham_scan": 68, "r522": 68, "andrew": 68, "1979": [68, 168], "geomalgorithm": 68, "a10": 68, "_hull": 68, "t3": [68, 210], "mass": [68, 103, 104, 105, 106, 108, 109, 113, 114, 116, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 139, 164, 166, 167, 168, 178, 180, 228, 249, 250], "averag": [68, 78, 91, 190, 217], "qq": [69, 70, 72, 73, 74, 78, 184, 185, 186, 187, 189, 190, 192, 193, 194], "p_r": 69, "holonomic_funct": 69, "from_hyp": [70, 73], "holonomicfunct": [70, 71, 73], "from_meijerg": [70, 73], "initcond": [70, 72, 73], "expr_to_holonom": [70, 73, 74, 75], "lenic": [70, 72], "ground": [70, 116, 120, 121, 122, 123, 184, 187, 188, 190, 192, 193, 215, 271], "meijerint": [70, 72, 76, 78], "_rewrite1": [70, 76], "_convert_poly_rat_alg": [70, 72], "_create_t": [70, 72], "differentialoper": [71, 73, 152], "differentialoperatoralgebra": 71, "_create_lookup_t": [72, 76], "old_poly_r": [73, 74, 184, 187, 188], "to_expr": [73, 74, 75, 101], "to_sequ": 73, "n_0": [73, 190, 215, 216], "indici": [73, 74, 75, 213], "c_j": [73, 76, 207], "holonomicsequ": 73, "r523": 73, "hal": 73, "inria": [73, 78], "fr": [73, 78, 91, 109, 114, 116, 118, 121, 122, 125, 127, 130, 217], "00070025": 73, "r524": 73, "risc": [73, 213, 242], "jku": [73, 213, 242], "risc_2244": 73, "diplform": 73, "_recur": 73, "rk4": 73, "kutta": 73, "71828182845905": 73, "10517083333333": 73, "22140257085069": 73, "34985849706254": 73, "49182424008069": 73, "64872063859684": 73, "82211796209193": 73, "01375162659678": 73, "22553956329232": 73, "45960141378007": 73, "71827974413517": 73, "331": 73, "4641": 73, "61051": 73, "771561": 73, "9487171": 73, "14358881": 73, "357947691": 73, "5937424601": 73, "to_hyp": 73, "as_list": [73, 193], "to_meijerg": 73, "homogen": [74, 78, 87, 101, 188, 190, 193, 210, 213, 214, 217], "1_0": 74, "1_1": 74, "0_0": 74, "0_1": 74, "pyplot": [74, 130], "plt": [74, 130], "list_of_poli": 74, "weyl": [74, 80], "Ore": 74, "dxa": 74, "endomorph": [74, 192], "frobeniu": [75, 87, 91, 190, 191], "subtleti": 76, "recast": [76, 209, 215, 216], "branchpoint": 76, "crude": [76, 116, 183], "decre": 76, "biholomorph": 76, "mutual": [76, 181], "neighbourhood": 76, "evid": [76, 109, 122, 207], "peculiar": [76, 181], "throughout": [76, 81, 190, 200, 216, 264], "_split_mul": 76, "_mytyp": 76, "inequival": 76, "_mul_as_two_part": 76, "bx": [76, 217, 223], "twist": 76, "recognis": [76, 187, 207, 209], "anywai": [76, 209, 213], "analyitc": 76, "_rewrite_singl": 76, "_rewrite2": 76, "_rewrite_saxena_1": 76, "_rewrite_saxena": 76, "blogpost": 76, "remedi": 76, "exploit": [76, 229], "transpar": [76, 79, 177], "nessgrh": 76, "wordpress": [76, 210], "07": 76, "stade": 76, "c_u": 76, "d_1": [76, 168, 193, 217], "d_v": 76, "amalgam": 76, "prudnikov1990": [76, 207], "luke1969": [76, 207], "c_3": [76, 213], "c_4": 76, "visibl": [76, 183], "fulfil": [76, 182], "vee": [76, 81], "lceil": 76, "rceil": 76, "d_j": [76, 168, 207], "lambda_c": [76, 126], "lambda_": 76, "z_0": [76, 209], "z_1": 76, "a_i": [76, 168, 173, 181, 185, 190, 207], "c_5": 76, "c_6": 76, "c_7": 76, "c_8": 76, "lvert": 76, "rvert": 76, "c_9": 76, "versatil": 76, "bz": [76, 210, 223], "deform": [76, 95], "encircl": 76, "appeal": 76, "fox": 76, "obstacl": 76, "identif": [76, 216], "domin": [76, 82, 202, 204], "iT": 76, "omega_": 76, "disguis": 76, "meijerint_indefinit": 76, "meijerint_definit": 76, "meijerint_invers": 76, "kelli": [76, 207], "roach": [76, 207], "211": [76, 91, 193, 207, 213], "prudnikov": [76, 207], "yu": [76, 182, 207], "brychkov": [76, 207], "marichev": [76, 207], "gordon": [76, 142, 207], "breach": [76, 207], "_coeffexpvalueerror": 76, "_get_coeff_exp": 76, "_check_anteced": 76, "_check_antecedents_1": 76, "mt": 76, "_check_antecedents_invers": 76, "anteced": [76, 204], "_condsimp": 76, "hoc": 76, "simp": [76, 116, 173], "_dummi": 76, "_dummy_": 76, "_eval_cond": 76, "_expon": 76, "_find_splitting_point": 76, "fsp": 76, "_flip_g": 76, "_function": 76, "_guess_expans": 76, "sensibl": [76, 78], "_inflate_fox_h": 76, "_inflate_g": 76, "_int0oo": 76, "_int0oo_1": 76, "_int_invers": 76, "_is_analyt": 76, "almost": [76, 85, 93, 165, 183, 184, 188, 193, 194, 213, 217, 231, 232, 235, 266], "_meijerint_definite_2": 76, "expand_mul": 76, "trigexpand": 76, "_meijerint_definite_3": 76, "_meijerint_definite_4": 76, "only_doubl": 76, "_meijerint_indefinite_1": 76, "_mul_arg": 76, "_my_principal_branch": 76, "full_pb": 76, "nearer": 76, "superflu": 76, "opaqu": [76, 197], "fac": 76, "_rewrite_invers": 76, "costli": [76, 118, 268], "tx": [76, 270], "overview": [77, 185, 216, 249, 250], "argand": [77, 216], "lookup": [77, 78, 87, 91, 207], "laplac": [77, 78, 98, 99, 101, 217], "todo": [77, 141, 143, 147, 148, 152, 153, 155, 156, 157, 158, 159, 190, 197, 204, 222], "polytop": 77, "happili": [78, 221], "nonelementari": 78, "mellin_transform": 78, "bilater": 78, "mellintransform": 78, "integraltransform": 78, "nocond": 78, "inverse_mellin_transform": 78, "laplace_transform": [78, 101], "fourier_transform": 78, "hankel_transform": 78, "inverse_hankel_transform": 78, "suitabl": [78, 84, 93, 185, 187, 190, 192, 197, 207, 210, 213, 216, 218, 265], "inversemellintransform": 78, "attemp": 78, "laplacetransform": 78, "inverse_laplace_transform": 78, "singularit": [78, 127], "inverselaplacetransform": 78, "_fast_inverse_laplac": 78, "rootsum": [78, 193, 199], "fouriertransform": 78, "_fourier_transform": 78, "inverse_fourier_transform": 78, "sine_transform": 78, "inverse_sine_transform": 78, "cosine_transform": 78, "inverse_cosine_transform": 78, "bixk": 78, "inversefouriertransform": 78, "sinetransform": 78, "inversesinetransform": 78, "cosinetransform": 78, "inversecosinetransform": 78, "hankeltransform": 78, "ht": 78, "inversehankeltransform": 78, "_compute_transform": 78, "_as_integr": 78, "integraltransformerror": 78, "_name": 78, "_collapse_extra": 78, "needev": 78, "function_vari": 78, "transform_vari": 78, "lazard": [78, 190, 193], "rioboo": 78, "trager": 78, "horowitz": 78, "ostrogradski": 78, "ratint": 78, "rationaltool": [78, 193], "ratint_logpart": 78, "ratint_ratpart": 78, "r525": 78, "bronstein": [78, 191, 193, 199, 215], "verlag": [78, 191], "deg": [78, 99, 114, 185, 190, 192, 193], "q_i": [78, 110, 127], "_t": [78, 114, 117, 130, 163, 172, 173, 176, 207, 217], "trigintegr": 78, "trigonometri": 78, "r526": 78, "integration_techniqu": 78, "deltaintegr": 78, "couldn": 78, "didn": [78, 87, 127], "singularityintegr": 78, "risch_integr": 78, "nonelementaryintegr": 78, "proven": [78, 91, 247, 264], "handle_first": 78, "separate_integr": 78, "rewrite_complex": 78, "forthcom": 78, "5109": 78, "outer": [78, 111, 128, 130, 146, 151, 152, 173, 176, 179, 181, 199, 205, 221, 242, 244, 245], "pop": [78, 210], "manualintegr": 78, "integral_step": 78, "student": [78, 206, 210, 217], "_i": [78, 163, 168, 194], "namedtupl": 78, "substep": 78, "sympy_gamma": 78, "app": 78, "intstep": 78, "urul": 78, "u_var": 78, "_u": [78, 163], "u_func": 78, "arctanrul": 78, "trigrul": 78, "rewriterul": 78, "addrul": 78, "powerrul": 78, "constanttimesrul": 78, "constantrul": 78, "norman": 78, "slowest": [78, 92], "retri": [78, 91], "degree_offset": 78, "unnecessary_permut": 78, "_try_heurisch": 78, "manuel": [78, 202], "poor": [78, 92], "man": [78, 191], "whittak": 78, "r527": 78, "sop": [78, 81], "cafe": 78, "pmint": 78, "r528": 78, "gedd": [78, 191], "stefanu": 78, "217": [78, 191], "r529": 78, "davenport": [78, 190, 191], "eurocam": 78, "lnc": [78, 191, 215], "157": [78, 91, 95, 191], "r530": 78, "iii": [78, 197, 213], "sigsam": 78, "bulletin": 78, "1982": [78, 182], "r531": 78, "transact": [78, 191], "1985": [78, 109, 129, 173, 242], "356": [78, 192, 215], "362": 78, "huge": [78, 91, 193, 233], "entail": 78, "delic": [78, 184], "albeit": [78, 245], "mimic": [78, 79, 177, 236], "moder": 78, "irrespect": [78, 210, 213, 238], "line_integr": 78, "as_sum": 78, "subinterv": 78, "trapezoid": [78, 87, 217], "730": 78, "809": 78, "decai": 78, "r532": 78, "riemann_sum": 78, "r533": 78, "cauchy_principal_valu": 78, "r534": 78, "cauchyprincipalvalu": 78, "int_a": 78, "uvar": 78, "ui": [78, 91], "accomplish": [78, 127, 130, 248], "3aissu": 78, "3aopen": 78, "3aintegr": 78, "gauss_legendr": 78, "n_digit": 78, "legendr": [78, 91, 193, 197, 210], "r535": 78, "w_i": [78, 132, 193, 213], "7746": 78, "55556": 78, "88889": 78, "86114": 78, "33998": 78, "34785": 78, "65215": 78, "gauss_laguerr": 78, "gauss_gen_laguerr": 78, "gauss_hermit": 78, "gauss_chebyshev_t": 78, "gauss_chebyshev_u": 78, "gauss_jacobi": 78, "gauss_lobatto": 78, "gaussian_quadratur": 78, "r536": 78, "fsu": 78, "jburkardt": 78, "cpp_src": 78, "legendre_rul": 78, "laguerr": [78, 193, 197], "r537": 78, "41577": 78, "2943": 78, "2899": 78, "71109": 78, "27852": 78, "010389": 78, "22285": 78, "1889": 78, "9927": 78, "7751": 78, "8375": 78, "983": 78, "45896": 78, "417": [78, 209], "11337": 78, "010399": 78, "00026102": 78, "9855e": 78, "93laguerre_quadratur": 78, "r538": 78, "laguerre_rul": 78, "hermit": [78, 82, 87, 88, 186, 192, 193, 197, 217], "r539": 78, "2247": 78, "29541": 78, "1816": 78, "3506": 78, "3358": 78, "43608": 78, "00453": 78, "15707": 78, "72463": 78, "hermite_quadratur": 78, "r540": 78, "hermite_rul": 78, "r541": 78, "gen_hermite_rul": 78, "r542": 78, "19016": 78, "7845": 78, "5253": 78, "4493": 78, "31413": 78, "00906": 78, "97851": 78, "9904": 78, "3193": 78, "712": 78, "53087": 78, "67721": 78, "11895": 78, "0023152": 78, "r543": 78, "gen_laguerre_rul": 78, "r544": 78, "86602": 78, "0472": 78, "96593": 78, "70711": 78, "25882": 78, "5236": 78, "93gauss_quadratur": 78, "r545": 78, "chebyshev1_rul": 78, "r546": 78, "3927": 78, "7854": 78, "90097": 78, "62349": 78, "22252": 78, "084489": 78, "27433": 78, "42658": 78, "r547": 78, "chebyshev2_rul": 78, "jacobi": [78, 91, 103, 193, 197], "r548": 78, "7063": 78, "0973": 78, "33795": 78, "87174": 78, "5917": 78, "2093": 78, "050584": 78, "22169": 78, "39439": 78, "93jacobi_quadratur": 78, "r549": 78, "jacobi_rul": 78, "r550": 78, "gegenbauer_rul": 78, "lobatto": 78, "r551": 78, "3333": 78, "44721": 78, "16667": 78, "83333": 78, "93lobatto_rul": 78, "r552": 78, "page_888": 78, "intpoli": 78, "chin": 78, "al": [78, 114, 142, 190, 206, 209], "2015": [78, 216], "unit_cub": 78, "polytope_integr": 78, "eric": [78, 191], "jean": 78, "lasserr": 78, "sukumar": 78, "nonconvex": 78, "967": 78, "981": 78, "dilbert": 78, "engr": 78, "ucdavi": 78, "suku": 78, "max_degre": [78, 193], "689": [78, 95], "21875": 78, "octahedron": 78, "trivari": 78, "enable_automatic_int_sympif": 79, "enable_automatic_symbol": 79, "init_ipython_sess": 79, "argv": [79, 228], "init_python_sess": 79, "use_latex": [79, 177, 271], "quiet": 79, "str_printer": [79, 177], "latex_print": [79, 177], "pylab": 79, "stringifi": [79, 177], "sstrrepr": [79, 177, 197], "lexograph": [79, 177], "gui": [79, 177], "statu": 79, "\u03b8": [79, 108, 135, 216], "int_to_integ": 79, "decistmt": 79, "f401": 79, "0x12": 79, "num_column": [79, 177, 197, 213], "no_glob": [79, 177], "ip": [79, 151, 157, 177], "forecolor": [79, 177], "backcolor": [79, 177], "fontsiz": [79, 177, 197], "10pt": [79, 177, 197], "latex_mod": [79, 177], "print_builtin": [79, 177], "interactiveconsol": [79, 177], "preambl": [79, 177, 197], "handwritten": [79, 177], "ctan": [79, 177], "pkg": [79, 177], "dvi": [79, 177, 197], "foreground": [79, 177], "black": [79, 148, 159, 177, 197, 271], "white": [79, 177, 217], "documentclass": [79, 177, 197], "dpi": [79, 177], "u03b8": 79, "dvip": 79, "r553": 79, "r554": 79, "the_68_standard_colors_known_to_dvip": 79, "config": 79, "root_system": 80, "rootsystem": 80, "cartantyp": 80, "cartan": 80, "subalgebra": 80, "adjoint": [80, 82, 87, 140, 144], "hyperplan": 80, "k_y": 80, "r555": 80, "r556": 80, "humphrei": 80, "add_as_root": 80, "root1": 80, "root2": 80, "add_simple_root": 80, "newroot": 80, "all_root": [80, 91, 193], "cartan_matrix": 80, "dynkin_diagram": 80, "dynkin": 80, "root_spac": 80, "simple_root": 80, "type_a": 80, "typea": 80, "basic_root": 80, "iin": 80, "jth": [80, 216], "ijth": 80, "cartan_typ": 80, "highest_root": 80, "lie_algebra": 80, "positive_root": 80, "type_b": 80, "typeb": 80, "b4": 80, "b3": [80, 114, 130, 173, 247], "type_c": 80, "typec": 80, "c4": [80, 82, 84, 213], "type_d": 80, "d4": [80, 217], "dmension": 80, "type_": 80, "e6": 80, "type_f": 80, "typef": 80, "f_4": [80, 110], "f4": [80, 183], "type_g": 80, "typeg": 80, "weyl_group": 80, "weylgroup": 80, "semisimpl": 80, "isometri": 80, "coxeter_diagram": 80, "undirect": [80, 235], "s_is_j": 80, "delete_doubl": 80, "element_ord": 80, "weylelt": 80, "group_nam": 80, "group_ord": 80, "192": 80, "matrix_form": 80, "cartantype_gener": 80, "standard_cartan": 80, "dynkindiagram": 80, "cartanmatrix": 80, "sopform": 81, "minterm": 81, "dontcar": 81, "simplified_pair": 81, "combo": 81, "outcom": [81, 166, 217], "r557": 81, "quin": 81, "mccluskey_algorithm": 81, "posform": 81, "r558": 81, "anfform": 81, "truthvalu": 81, "anf": 81, "funciton": 81, "zhegalkin": 81, "r559": 81, "zhegalkin_polynomi": 81, "as_set": 81, "booleantru": 81, "doubt": [81, 114], "greet": 81, "booleanfals": 81, "universalset": 81, "nand": 81, "xnor": 81, "gate": [81, 143, 148, 150, 156, 157, 159], "perspect": [81, 91, 101, 168, 183, 230, 246, 250], "multiplex": 81, "conjunct": [81, 183, 207, 228, 272], "disjunct": 81, "to_anf": 81, "oplu": [81, 147], "to_cnf": 81, "cnf": 81, "mccluskei": 81, "to_dnf": 81, "to_nnf": 81, "nnf": 81, "is_anf": 81, "is_cnf": 81, "is_dnf": 81, "is_nnf": 81, "gateinputcount": 81, "simplify_log": 81, "fewest": [81, 157], "bool_map": 81, "bool1": 81, "bool2": 81, "function1": 81, "function2": 81, "distribute_and_over_or": 81, "distribute_or_over_and": 81, "distribute_xor_over_and": 81, "eliminate_impl": 81, "truth_tabl": 81, "ibin": [81, 235], "integer_to_term": 81, "0001111011": [81, 235], "1101111000": [81, 235], "term_to_integ": 81, "bool_maxterm": 81, "maxterm": 81, "complement": [81, 84, 193, 216], "r560": 81, "canonical_normal_form": 81, "indexing_maxterm": 81, "bool_minterm": 81, "patter": 81, "r561": 81, "indexing_minterm": 81, "bool_monomi": 81, "enumar": 81, "anf_coeff": 81, "to_int_repr": 81, "all_model": 81, "unsatisfi": 81, "use_model": 81, "unsat": 81, "matrixbas": [82, 83, 84, 86, 186], "dirac": [82, 87, 99, 103, 104, 161, 197], "__abs__": [82, 188], "__add__": [82, 188, 192], "shapeerror": [82, 84, 87], "__len__": 82, "96": [82, 87, 217], "mismatch": 82, "matrix_multiply_elementwis": [82, 87], "applyfunc": [82, 83, 87, 122, 173, 218], "col": [82, 84, 87, 90, 101, 130, 186, 192, 268], "col_del": [82, 87, 268], "col_join": [82, 87, 116], "col_insert": [82, 268], "row_insert": [82, 268], "row_join": [82, 87, 116], "companion": [82, 84], "c0": [82, 84, 204, 213, 215], "sparsematrix": [82, 86, 87, 90, 198, 209], "diag": [82, 84, 87, 90, 130, 186, 223, 268], "immutablematrix": [82, 84, 86, 101, 173, 217, 242, 244, 268], "dens": [82, 84, 86, 87, 186, 189, 192, 193, 218, 256, 267], "blockmatrix": [82, 84, 87], "sparsetool": [82, 90], "kth": [82, 91], "rowslist": [82, 186], "colslist": 82, "submatrix": [82, 87, 190, 217], "get_diag_block": [82, 84, 87], "decoupl": 82, "hstack": [82, 186], "is_anti_symmetr": 82, "is_diagon": [82, 87], "is_low": [82, 186], "is_upp": [82, 186], "matrixeigen": [82, 86], "is_diagonaliz": [82, 87], "is_hermitian": [82, 87], "is_lower_hessenberg": 82, "hessenberg": [82, 87], "superdiagon": 82, "is_upper_hessenberg": 82, "is_strongly_diagonally_domin": 82, "strongli": [82, 87, 186, 235], "m1": [82, 87, 91, 95, 134, 142, 160, 162, 166, 210, 213, 218, 223], "subdiagon": [82, 87], "is_weakly_diagonally_domin": 82, "weakli": [82, 235], "vacuou": 82, "jordan_block": [82, 87], "eigenv": [82, 87, 114, 116, 130, 157, 266, 268], "insuffici": 82, "rectangular": [82, 87, 205, 216, 245], "r562": 82, "jordan_matrix": [82, 213], "dotprodsimp": 82, "blowup": 82, "multiply_elementwis": [82, 87], "hadamard": [82, 84, 87, 147, 148, 159, 197], "elementwis": [82, 84, 87, 218], "300": [82, 87, 91, 94, 178, 183, 194, 250], "bmatrix": [82, 84, 87, 118, 125, 126, 127, 128, 173, 181, 210], "a_0": [82, 87, 200, 210, 213, 218, 272], "vdot": [82, 84, 87, 168], "alpha_0": 82, "alpha_1": [82, 91, 192], "alpha_": [82, 182], "permute_col": 82, "permute_row": 82, "mulsimp": 82, "rmultipli": 82, "__rmul__": 82, "rot90": 82, "anticlockwis": 82, "row_del": [82, 87, 268], "todod": 82, "tolist": [82, 218], "vec": [82, 87, 130, 173, 182, 190, 247, 248, 250], "vech": 82, "check_symmetri": 82, "vstack": [82, 186], "wilkinson": 82, "w_": [82, 192], "wminu": 82, "wplu": 82, "r563": 82, "mathwork": [82, 99, 217, 268], "cleve": 82, "04": [82, 217], "r564": 82, "claredon": 82, "oxford": 82, "662": 82, "intm": 82, "undefinedkind": [82, 205], "tuplekind": [82, 205], "mutabledensematrix": [83, 186, 238], "densematrix": [83, 87], "ldldecomposit": [83, 87], "ldl": [83, 87], "choleski": [83, 87], "ludecomposit": [83, 84, 87, 268], "qrdecomposit": [83, 87], "as_immut": 83, "lower_triangular_solv": [83, 87], "upper_triangular_solv": [83, 87], "gauss_jordan_solv": [83, 87], "cholesky_solv": [83, 87], "diagonal_solv": [83, 87], "ldlsolv": [83, 87], "lusolv": [83, 87, 110, 127, 131, 215, 268], "qrsolv": [83, 87], "pinv_solv": [83, 87], "permutedim": [84, 218, 219], "arraytensorproduct": [84, 219], "from_index_summ": 84, "first_index": 84, "last_index": 84, "longrightarrow": 84, "matpow": [84, 197], "hadamardproduct": [84, 197], "hadamard_product": 84, "hadamardpow": [84, 197], "ddot": [84, 87, 118, 126, 177, 180, 197, 272], "functionmatrix": 84, "lamda": [84, 197, 205, 217, 268], "lazili": [84, 203], "342923500": 84, "permutationmatrix": [84, 87], "matrixpermut": 84, "companionmatrix": 84, "matrixset": [84, 205], "submatric": [84, 87, 186, 217], "block_collaps": 84, "dat": [84, 235], "irregular": [84, 87], "ldudecomposit": 84, "ldu": 84, "2x2": [84, 90, 132, 186, 213], "noninvertiblematrixerror": [84, 268], "udldecomposit": 84, "lu": [84, 87, 186, 191], "udl": 84, "schur": 84, "penros": [84, 87], "pinv": [84, 87], "r565": 84, "schur_compl": 84, "blockdiagmatrix": [84, 87], "diag_block": 84, "alias": [85, 188], "bridg": [85, 97, 114, 236], "tension": 85, "matrixdetermin": 86, "matrixreduct": 86, "matrixsubspac": 86, "matrixcalculu": 86, "immutablesparsematrix": 86, "gramschmidt": 87, "m2": [87, 91, 95, 111, 134, 142, 160, 162, 166, 192, 210, 213, 218, 223], "126": [87, 91, 196], "150": [87, 101, 210], "v3": [87, 173, 176, 247], "glue": 87, "m3": [87, 142, 210, 218], "adj": 87, "qr": 87, "cheat": 87, "soln": 87, "gram": [87, 168, 170], "schmidt": 87, "out1": 87, "out2": 87, "1692": 87, "1551": 87, "423": 87, "6707": 87, "spot": [87, 131], "eigenvector": [87, 114, 157, 158, 182], "nullspac": [87, 186], "adjug": 87, "berkowitz": 87, "bareiss": 87, "cofactor_matrix": 87, "charpoli": [87, 186, 268], "_simplifi": 87, "purepoli": [87, 193], "samuelson": 87, "minor_submatrix": 87, "iszerofunc": [87, 268], "barei": 87, "det_lu": 87, "functiontyp": 87, "_iszero": [87, 268], "_is_zero_after_expand_mul": 87, "unrecogn": 87, "nonsquarematrixerror": [87, 213], "i3": [87, 102, 114, 130, 223], "perman": 87, "ryser": 87, "450": 87, "r566": 87, "prof": 87, "ben": 87, "berkelei": 87, "bernd": 87, "ban275": 87, "r567": 87, "permanent_": 87, "r568": 87, "r569": 87, "0904": 87, "3251": 87, "echelon_form": [87, 268], "with_pivot": 87, "echelon": [87, 186, 216, 268], "elementary_col_op": 87, "kn": [87, 94, 95], "col1": 87, "col2": 87, "km": [87, 91, 105, 109, 116, 118, 121, 122, 125, 127, 130, 169], "elementary_row_op": 87, "row1": 87, "row2": 87, "is_echelon": [87, 268], "rref": [87, 186], "pivot": [87, 186, 268], "normalize_last": 87, "rref_matrix": [87, 186], "rref_pivot": [87, 186], "301369863013699": 87, "712328767123288": 87, "noramlize_last": 87, "subspac": [87, 192], "columnspac": [87, 186], "rowspac": [87, 186], "orthonorm": [87, 130, 158, 181, 245], "rankcheck": 87, "r570": 87, "93schmidt_process": 87, "eigen": [87, 139], "bidiagonal_decomposit": 87, "ubv": 87, "bidiagon": 87, "hang": [87, 118, 122, 213, 214], "bidiagn": 87, "r571": 87, "golub": 87, "van": [87, 91, 191], "loan": 87, "r572": 87, "vslobodi": 87, "household": 87, "r573": 87, "r574": 87, "reals_onli": 87, "throw": [87, 93, 114, 192, 210, 216], "error_when_incomplet": 87, "eig": [87, 114, 130], "matrixerror": 87, "got": [87, 184, 187, 190, 193, 196, 228, 229, 235, 236, 264, 266, 267], "abel": 87, "ruffini": 87, "eigenvect": [87, 114, 130, 157, 268], "tidi": 87, "artifact": 87, "ret": 87, "eigenspac": 87, "rag": 87, "a_3": 87, "diagonaliz": [87, 268], "is_indefinit": 87, "semidefinit": [87, 217], "plot3d": [87, 183], "is_positive_definit": 87, "is_positive_semidefinit": 87, "hire": [87, 94, 95, 99, 183, 200], "is_negative_definit": 87, "is_negative_semidefinit": 87, "defer": [87, 239], "r575": 87, "definiteness_of_a_matrix": 87, "r576": 87, "positivedefinitematrix": 87, "r577": 87, "amer": 87, "259": 87, "264": [87, 215], "r578": 87, "r579": 87, "r580": 87, "r581": 87, "r582": 87, "r583": 87, "r584": 87, "r585": 87, "r586": 87, "r587": 87, "r588": 87, "r589": 87, "jordan_form": 87, "calc_transform": 87, "left_eigenvect": 87, "singular_valu": 87, "condition_numb": 87, "hessian": 87, "wronskian": [87, 213], "simpfunc": 87, "permutebkwd": 87, "permutefwd": 87, "lucombin": 87, "defici": [87, 91, 216], "matrixi": 87, "ludecomposition_simpl": [87, 268], "ludecompositionff": 87, "pa": [87, 109, 111, 125, 128, 131], "r590": 87, "zhou": 87, "jeffrei": [87, 209], "frontier": [87, 205], "china": 87, "67": [87, 191], "2008": [87, 182, 191, 193, 197], "row_swap": 87, "compres": 87, "permute_backward": 87, "permute_forward": 87, "u_": 87, "intiuit": 87, "lu_": 87, "_find_reasonable_pivot": 87, "lu_solv": [87, 186], "qr_solv": 87, "augument": 87, "167": 87, "158": [87, 95], "27261": 87, "30625": 87, "348": 87, "1914": 87, "6125": 87, "30589": 87, "198": 87, "1225": 87, "q_aug": 87, "r_aug": 87, "analytic_func": 87, "connected_compon": [87, 235], "connected_components_decomposit": 87, "relax": [87, 93], "3x1": 87, "1x3": 87, "conjugate_convent": 87, "dual": [87, 155, 161], "anti_symmetr": 87, "speak": [87, 192, 248], "freevar": 87, "underdetermin": [87, 215, 216], "free_var_index": 87, "sol": [87, 210, 213, 214, 215], "tau0": [87, 216, 217], "tau1": 87, "taus_zero": 87, "sol_uniqu": 87, "r591": 87, "gaussian_elimin": 87, "try_block_diag": 87, "inverse_g": [87, 268], "inverse_lu": [87, 268], "inverse_adj": [87, 268], "inverse_ch": 87, "inverse_ldl": 87, "inverse_qr": 87, "inv_mod": 87, "cof": 87, "inverse_block": 87, "blockwis": 87, "ntop": 87, "key2bound": 87, "key2ij": 87, "reciproc": [87, 217, 272], "fro": 87, "sing": 87, "spectral": 87, "rd": [87, 114, 197], "pseudoinvers": 87, "r592": 87, "penrose_pseudoinvers": 87, "arbitrary_matrix": 87, "wn_m": 87, "_w0_0": 87, "_w1_0": 87, "_w2_0": 87, "59": [87, 213], "r593": 87, "obtaining_all_solutions_of_a_linear_system": 87, "print_nonzero": [87, 235], "symb": [87, 197], "rank_decomposit": 87, "r594": 87, "rank_factor": 87, "r595": 87, "piziak": 87, "odel": 87, "magazin": 87, "193": [87, 99], "2307": 87, "2690882": 87, "singular_value_decomposit": 87, "condens": [87, 216], "orthogn": 87, "v_aug": 87, "u_aug": 87, "s_aug": 87, "gj": 87, "solve_least_squar": 87, "strongly_connected_compon": [87, 186, 235], "62": [87, 190], "strongly_connected_components_decomposit": 87, "rowstart": 87, "rowend": 87, "rowsep": 87, "colsep": 87, "strprinter": [87, 177, 260], "upper_hessenberg_decomposit": 87, "213": 87, "134": 87, "216": [87, 190], "hessenbergdecomposit": 87, "jordan_cel": 87, "varlist": 87, "r596": 87, "hessian_matrix": 87, "vlist": 87, "r597": 87, "casoratian": 87, "kernel": [87, 184, 190, 192, 215], "vanish": [87, 163, 190, 193, 196, 213, 242], "rsolve_hyp": [87, 215], "randmatrix": 87, "percent": [87, 216], "prng": 87, "percentag": [87, 91], "46": [87, 94, 168, 196, 215, 217], "list2numpi": 87, "dtype": [87, 92, 184, 186, 187, 188, 197, 236], "matrix2numpi": 87, "symarrai": 87, "ndarrai": [87, 217, 223, 229], "prefix_i1_i2_": 87, "_2": [87, 172, 173, 213], "a_0_0": 87, "a_0_1": 87, "a_0_2": 87, "a_1_0": 87, "a_1_1": 87, "a_1_2": 87, "a_0_0_0": 87, "a_0_0_1": 87, "a_0_1_0": 87, "a_0_1_1": 87, "a_0_2_0": 87, "a_0_2_1": 87, "a_1_0_0": 87, "a_1_0_1": 87, "a_1_1_0": 87, "a_1_1_1": 87, "a_1_2_0": 87, "a_1_2_1": 87, "rot_axis1": 87, "rot_axis2": 87, "rot_axis3": 87, "a2idx": 87, "normalform": [88, 186], "hermite_normal_form": [88, 186, 192], "check_rank": [88, 186], "hnf": [88, 186, 192], "explos": [88, 186], "believ": [88, 91, 186], "dmdomainerror": [88, 186], "dmshapeerror": [88, 186], "r598": 88, "cohen": [88, 186, 191, 192], "mutablesparsematrix": 89, "_doktocsr": 90, "csr": 90, "ja": 90, "ia": 90, "_csrtodok": 90, "dok": 90, "1x1": [90, 217], "vert": [90, 178, 181, 250], "saw": [90, 187, 272], "dynam": [91, 98, 99, 101, 105, 107, 109, 110, 113, 116, 124, 125, 126, 127, 128, 129, 130, 131, 172, 173, 175, 176, 180, 181, 232, 233, 242], "eratosthen": 91, "_reset": [91, 193], "_list": 91, "extend_to_no": 91, "mobiusrang": 91, "primerang": 91, "10th": 91, "totientrang": 91, "1e11": 91, "50000": 91, "primal": [91, 184], "1299709": 91, "r599": 91, "prime_number_theorem": 91, "table_of_": 91, "cf": [91, 190], "28x": 91, "2c_x_": 91, "2f_log_x": 91, "2c_and_li": 91, "r600": 91, "approximations_for_the_nth_prime_numb": 91, "r601": 91, "27_number": 91, "arr1": 91, "arr2": 91, "prevprim": 91, "9th": 91, "nextprim": 91, "occupi": [91, 163, 223], "conjectur": [91, 190], "twin": 91, "bertrand": 91, "brocard": 91, "primori": 91, "r602": 91, "r603": 91, "utm": 91, "postul": 91, "r604": 91, "s_postul": 91, "primefactor": 91, "argu": 91, "cycle_length": 91, "nmax": 91, "brent": [91, 232], "floyd": 91, "cycle_detect": 91, "17737": 91, "20000": 91, "compositepi": 91, "831": 91, "smoothness_p": 91, "sm": [91, 114, 130, 184], "psm": 91, "govern": 91, "10431": 91, "annot": [91, 183, 197], "21477639576571": 91, "4410317": 91, "1787": 91, "4869863": 91, "2434931": 91, "multiplicity_in_factori": 91, "nfac": 91, "52818775009509558395695966887": 91, "is2pow": 91, "pollard_rho": 91, "1234": [91, 210], "max_step": 91, "pollard": [91, 213], "leader": 91, "16843009": 91, "32767": 91, "4i": 91, "3i": 91, "2489": 91, "1482": 91, "285": [91, 215], "leadup": 91, "r605": 91, "crandal": 91, "carl": [91, 232], "pomer": [91, 232], "229": 91, "231": [91, 173], "pollard_pm1": 91, "ilcm": 91, "likelihood": 91, "1009": 91, "igcd": [91, 185], "am": [91, 168, 197], "255": 91, "crack": 91, "617": 91, "1786": 91, "worst": [91, 193, 213], "scenario": [91, 217], "divisisor": 91, "realist": 91, "r606": 91, "236": 91, "r607": 91, "washington": 91, "2007": [91, 129, 232], "spring": [91, 106, 109, 114, 119], "ent": 91, "node81": 91, "r608": 91, "toronto": 91, "yuvalf": 91, "use_ecm": 91, "65537": [91, 196], "1407633717262338957430697921446883": 91, "991": 91, "202916782076162456022877024859": 91, "4200": 91, "1764": 91, "toggl": [91, 183], "12345678910111213141516": 91, "2507191691": 91, "1231026625769": 91, "factorrat": 91, "rat": 91, "987": 91, "10000000001": 91, "99009901": 91, "divisor_count": 91, "tim": [91, 235], "stackoverflow": [91, 235, 238], "1010381": 91, "proper_divisor": 91, "proper_divisor_count": 91, "udivisor": 91, "udivisor_count": 91, "r609": 91, "unitary_divisor": 91, "r610": 91, "unitarydivisor": 91, "r611": 91, "unitarydivisorfunct": 91, "antidivisor": 91, "r612": 91, "margin": [91, 101, 183, 217], "antidivisor_count": 91, "a066272": 91, "a066272a": 91, "r613": 91, "r614": 91, "27s_totient_funct": 91, "r615": 91, "totientfunct": 91, "r616": 91, "carmichael_funct": 91, "r617": 91, "carmichaelfunct": 91, "divisor_sigma": 91, "sigma_k": 91, "m_i": [91, 190], "m_ik": 91, "r618": 91, "divisor_funct": 91, "udivisor_sigma": 91, "47450": 91, "152": 91, "r619": 91, "core_t": 91, "core_2": 91, "squarefre": [91, 192], "cubefre": 91, "9424": 91, "1178": 91, "379238": 91, "square_factor": 91, "r620": 91, "free_integ": 91, "squarefree_cor": 91, "primenu": 91, "r621": 91, "primeomega": 91, "r622": 91, "mersenne_prime_expon": 91, "mersenn": 91, "4423": 91, "r623": 91, "perfectnumb": 91, "r624": 91, "perfect_numb": 91, "is_mersenne_prim": 91, "r625": 91, "mersenneprim": 91, "abund": 91, "is_abund": 91, "r626": 91, "abundantnumb": 91, "is_defici": 91, "r627": 91, "deficientnumb": 91, "is_amic": 91, "amic": 91, "220": [91, 193], "r628": 91, "amicable_numb": 91, "symmetric_residu": 91, "v_i": [91, 192, 215], "65": [91, 101, 190, 217], "639985": [91, 190], "912285": [91, 190], "954": 91, "gf_crt": [91, 190], "solve_congru": [91, 190], "programm": [91, 197], "galoistool": [91, 190], "crt1": 91, "4536": 91, "252": 91, "756": 91, "crt2": 91, "remainder_modulus_pair": 91, "mi": [91, 197], "k1": [91, 130, 161, 187, 188, 190], "k2": [91, 130, 187], "c_kn": 91, "binomial_coefficients_list": 91, "multinomial_coeffici": 91, "k_m": 91, "k_i": [91, 190, 207], "yann": 91, "laigl": 91, "chapui": 91, "permiss": [91, 182], "multinomial_coefficients_iter": 91, "_tupl": 91, "m53": 91, "partitions_": 91, "npartit": 91, "hardi": 91, "rademach": [91, 217], "r629": 91, "1958": [91, 182], "partitionfunctionp": 91, "is_euler_pseudoprim": 91, "pseudoprim": 91, "r630": 91, "euler_pseudoprim": 91, "prep": [91, 213, 214], "r631": 91, "mersenneforum": 91, "showpost": 91, "110896": 91, "mr": 91, "miller": 91, "rabin": 91, "wit": 91, "1373651": 91, "479001599": 91, "r632": 91, "135": 91, "138": 91, "93rabin_primality_test": 91, "deterministic_vari": 91, "is_lucas_prp": 91, "selfridg": 91, "377": 91, "1159": 91, "1829": 91, "3827": 91, "5459": 91, "5777": 91, "9071": 91, "9179": 91, "bailli": 91, "wagstaff": 91, "1980": [91, 235], "mpq": [91, 187, 189], "lucaspseudoprim": 91, "a217120": 91, "lucas_pseudoprim": 91, "is_strong_lucas_prp": 91, "bpsw": 91, "10877": 91, "16109": 91, "18971": 91, "a217255": 91, "psw_primality_test": 91, "is_extra_strong_lucas_prp": 91, "grantham": 91, "mo": [91, 130, 197], "jone": [91, 135], "preprint": 91, "a217719": 91, "perl": 91, "counterexampl": [91, 272], "989": 91, "3239": 91, "jon": 91, "mcom": 91, "234": 91, "01197": 91, "bisect": [91, 193, 215], "1e3": 91, "1e23": [91, 238], "near_int": 91, "strong_pseudoprim": 91, "is_gaussian_prim": 91, "r633": 91, "gaussian_prim": 91, "residue_ntheori": 91, "n_order": 91, "cong": [91, 190], "primitive_root": [91, 192], "r634": 91, "stein": [91, 213], "r635": 91, "hackman": 91, "2009": [91, 182], "sqrt_mod": 91, "sqrt_mod_it": 91, "quadratic_residu": 91, "nthroot_mod": 91, "109": [91, 191, 210], "is_nthpow_residu": 91, "r636": 91, "is_quad_residu": 91, "legendre_symbol": 91, "genfrac": 91, "nonresidu": 91, "alpha_2": [91, 192], "alpha_k": 91, "discrete_log": 91, "prime_ord": 91, "giant": [91, 216], "pohlig": 91, "r637": 91, "discretelogarithm": 91, "r638": 91, "cryptographi": [91, 252, 259], "menez": 91, "vanston": 91, "continued_fract": 91, "continued_fraction_period": 91, "continued_fraction_reduc": 91, "continued_fraction_converg": 91, "continued_fraction_iter": 91, "106": 91, "103993": 91, "33102": 91, "104348": 91, "33215": 91, "208341": 91, "66317": 91, "292": 91, "r639": 91, "discrimin": [91, 188, 190, 192, 193], "r640": 91, "periodic_continued_fract": 91, "r641": 91, "rosen": 91, "379": [91, 193], "381": 91, "januari": 91, "1992": [91, 191, 215], "233": [91, 191, 213], "718281835": 91, "287": 91, "count_digit": 91, "1111339": 91, "0xfa": 91, "c77": 91, "is_palindrom": [91, 235], "palindrom": 91, "0o121": 91, "oct": 91, "0o171": 91, "fermion": [91, 163], "r642": 91, "b6bius_funct": 91, "r643": 91, "thoma": [91, 129], "koshi": 91, "egyptian_fract": 91, "greedi": [91, 190, 206, 209], "egyptian": 91, "r644": 91, "jewett": 91, "takenouchi": 91, "3192": 91, "1118": 91, "2580": 91, "sylvest": [91, 190], "r645": 91, "seldom": 91, "blow": 91, "doubli": 91, "exhibit": [91, 182, 192, 206], "singli": 91, "tendenc": 91, "r646": 91, "1921": 91, "golumb": 91, "1962": 91, "propos": 91, "bleicher": 91, "1972": 91, "r647": 91, "420": [91, 210], "140": 91, "574": 91, "2788": 91, "6460": 91, "11590": 91, "33062": 91, "113820": 91, "greedy_algorithm_for_egyptian_fract": 91, "ic": [91, 213], "uci": 91, "eppstein": 91, "numth": 91, "egypt": 91, "ami": 91, "ektf": 91, "hu": 91, "finalpdf": 91, "ami_42_from129to134": 91, "bbp_pi": 91, "pi_hex_digit": 91, "hex": 91, "3243f6a8885a30": 91, "324": [91, 191], "r648": 91, "numberworld": 91, "subexponenti": 91, "comfort": [91, 92], "15154262241479": 91, "15423094826093": 91, "799333555511111": 91, "809709509409109": 91, "888888877777777": 91, "914148152112161": 91, "factoris": [91, 187, 188, 213], "max_curv": 91, "lenstra": 91, "repeatedli": [91, 102, 229], "ecm_one_factor": 91, "pseudorandom": [91, 235], "25645121643901801": 91, "5394769": 91, "4753701529": 91, "9804659461513846513": 91, "4641991": 91, "2112166839943": 91, "7060005655815754299976961394452809": 91, "6988699669998001": 91, "1010203040506070809": 91, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 91, "2709077133180915240135586837960864768806330782747": 91, "248": 91, "prime_bound": 91, "error_term": 91, "siq": 91, "modn": 91, "mulipl": 91, "r649": 91, "semanticscholar": 91, "5c52": 91, "8a975c1405bd35c65993abf5a4edb667c1db": 91, "r650": 91, "rieselprim": 91, "ziki": 91, "initializing_quadratic_siev": 91, "5915587277": 91, "3267000013": 91, "facilit": [92, 124, 134, 179, 228], "ship": 92, "000507214304613640": 92, "microsecond": 92, "000507214304614": 92, "hundr": [92, 266], "nanosecond": 92, "84147098": [92, 236, 261], "84119981": 92, "84092844": 92, "05426074": 92, "05433146": 92, "05440211": 92, "confer": [92, 270], "nano": 92, "manufactur": 92, "asnumpi": 92, "compliat": 92, "jnp": 92, "asarrai": 92, "84147096": 92, "8411998": 92, "05426079": 92, "05433151": 92, "autowrap": [92, 222, 230, 234, 254, 260], "implemented_funct": [92, 229, 236], "effort": [92, 188, 190], "50u": 92, "1u": 92, "10n": 92, "sympy_pars": 93, "local_dict": 93, "lambda_not": 93, "repeated_decim": 93, "auto_numb": 93, "factorial_not": 93, "global_dict": 93, "standard_transform": 93, "implicit_multiplication_appl": 93, "implicit_appl": 93, "implicit_multipl": 93, "convert_equals_sign": 93, "function_exponenti": 93, "stringify_expr": 93, "eval_expr": 93, "name_dict": 93, "fullform": 93, "setdelai": 93, "datatyp": [93, 188, 197, 230], "split_symbol": 93, "split_symbols_custom": 93, "_token_splitt": 93, "can_split": 93, "unsplitt": 93, "10sin": 93, "3xyz": 93, "2111": 93, "latex2sympi": 93, "typograph": 93, "parse_latex": 93, "stricter": 93, "liber": [93, 105, 266], "618": 93, "latexparsingerror": 93, "sym_expr": 93, "sympyexpress": 93, "source_cod": 93, "return_expr": 93, "definiton": 93, "src2": 93, "convert_to_expr": 93, "convert_to_c": 93, "src3": 93, "convert_to_python": 93, "src_code": 93, "filenam": [93, 197, 228, 229, 230, 238], "convert_to_fortran": 93, "continuum_mechan": [94, 95, 97], "elastic_modulu": 94, "second_mo": 94, "base_char": 94, "withstand": [94, 95], "character": [94, 95, 178, 181, 204, 217, 223, 250], "profil": 94, "shear": [94, 95], "downward": [94, 95, 97, 192], "apply_load": [94, 95, 97], "bc_deflect": [94, 95], "boundary_condit": 94, "solve_for_reaction_load": [94, 95], "shear_forc": [94, 95], "bending_mo": [94, 95], "applied_load": 94, "nm": [94, 95, 161, 218], "pointload": [94, 95], "ramp": [94, 95, 100], "parabol": 94, "apply_support": [94, 97], "loc": 94, "freedom": [94, 108, 109, 115, 118, 124, 217], "roller": [94, 95, 97], "upward": [94, 192], "r_10": 94, "r_30": 94, "4000": [94, 95], "bc_slope": [94, 95], "cross_sect": 94, "elast": [94, 95], "12000": 94, "draw": [94, 143, 197, 217, 259], "pictori": 94, "positv": 94, "ild_moment": 94, "ild_react": 94, "reaction": [94, 95, 97], "ild_shear": 94, "axial": [94, 132], "hing": [94, 95], "cantilev": [94, 95], "inertia": [94, 95, 104, 105, 106, 113, 114, 116, 117, 119, 121, 122, 123, 124, 130, 173, 179, 180, 181, 192], "666666666666667": [94, 95], "max_bmoment": 94, "max_deflect": 94, "max_shear_forc": 94, "plot_bending_mo": [94, 95], "gpa": 94, "400": [94, 183, 193], "13750": 94, "31250": 94, "plot_deflect": [94, 95], "00138541666666667": 94, "86458333333333e": 94, "04166666666667e": 94, "20833333333333e": 94, "51041666666667e": 94, "plot_ild_mo": 94, "solve_for_ild_mo": 94, "1kn": 94, "r_0": 94, "r_8": 94, "solve_for_ild_react": 94, "plot_ild_react": 94, "5kn": 94, "r_7": 94, "plotgrid": [94, 259], "plot_ild_shear": 94, "solve_for_ild_shear": 94, "plot_loading_result": [94, 95], "subplot": [94, 183], "plot_shear_forc": [94, 95], "plot_shear_stress": 94, "stress": 94, "6875": 94, "2500": 94, "15625": [94, 170], "plot_slop": [94, 95], "59375e": 94, "125e": 94, "08333333333333e": 94, "0001953125": 94, "point_cflexur": 94, "overhang": [94, 95], "10kn": 94, "20kn": [94, 95], "3kn": 94, "reaction_load": [94, 95, 97], "remove_load": [94, 97, 106], "shear_stress": 94, "beam3d": 94, "shear_modulu": 94, "apply_moment_load": 94, "solve_slope_deflect": 94, "r651": 94, "home": [94, 192, 210, 217, 228], "aau": 94, "jc": 94, "femtesemest": 94, "beams3d": 94, "axial_forc": 94, "axial_stress": 94, "load_vector": 94, "max_bending_mo": 94, "16000": 94, "495": 94, "10793": 94, "6400": 94, "301": [94, 207, 210], "560": 94, "2400": 94, "moment_load_vector": 94, "40000": 94, "4013": 94, "90300": 94, "1520": 94, "903": 94, "1600": [94, 95], "172": 94, "polar_mo": 94, "i1": [94, 102, 114, 130, 223], "1350": 94, "torsional_mo": 94, "torsion": 94, "_________________": 95, "________________": [95, 213], "_______________v": 95, "_______________": 95, "equilibrium": [95, 116, 127], "20e9": 95, "25e": 95, "______________________________________________": 95, "_______________________________________________": 95, "r\u2081": 95, "r\u2082": 95, "______________________": 95, "________________________": 95, "8kn": 95, "_____________": 95, "1m": 95, "3m": 95, "2m": 95, "5m": [95, 232], "679": 95, "12kn": 95, "________________________________": 95, "____________________________________________________": 95, "o____________________________________________________": 95, "4m": 95, "concentr": [95, 217], "_____________________________________": 95, "m\u2081": 95, "m\u2082": 95, "connector": 95, "_____________________": 95, "_______________________": 95, "_____________________o_______________________": 95, "oooo": [95, 235], "r\u2083": 95, "_______i_______": 95, "flexur": 95, "rigid": [95, 97, 106, 109, 111, 114, 116, 119, 124, 130, 173, 180], "____________": 95, "____________o________________________": 95, "a\u2081": [95, 272], "a\u2082": [95, 272], "six": [95, 197, 210, 216, 217], "joint": [97, 117, 119, 124], "add_nod": 97, "node_1": 97, "node_2": 97, "node_3": 97, "node_4": 97, "add_memb": 97, "member_1": 97, "member_2": 97, "member_3": 97, "member_4": 97, "member_5": 97, "270": 97, "360": 97, "change_member_label": 97, "new_label": 97, "change_node_label": 97, "bc_new": 97, "internal_forc": 97, "member_label": 97, "node_label": 97, "node_posit": 97, "remove_memb": 97, "remove_nod": 97, "remove_support": 97, "lti": [98, 99, 100], "transferfunct": [98, 99, 101], "interconnect": [98, 101], "mimo": [98, 101], "transferfunctionmatrix": [98, 101], "mimoseri": [98, 101], "mimoparallel": [98, 101], "mimofeedback": [98, 101], "control_plot": 99, "pole_zero_plot": 99, "pole_color": 99, "blue": [99, 183, 197], "pole_markers": 99, "zero_color": 99, "orang": 99, "zero_markers": 99, "show_ax": 99, "marker": [99, 183], "sisolineartimeinvari": [99, 101], "markers": 99, "tf1": [99, 101], "pole_zero_numerical_data": 99, "r652": 99, "93zero_plot": 99, "siso": [99, 101], "8660254j": 99, "bode_plot": 99, "initial_exp": 99, "final_exp": 99, "freq_unit": 99, "phase_unit": 99, "semilog": 99, "hz": 99, "hertz": 99, "bode_magnitude_plot": 99, "bode_phase_plot": 99, "bode_magnitude_numerical_data": 99, "5148378120533502e": 99, "68437": 99, "36188804005": 99, "020599914256786": 99, "0205999155219505": 99, "4117304087953": 99, "00000000260573": 99, "bode_phase_numerical_data": 99, "4472354033813751e": 99, "035581932165858e": 99, "47577": 99, "3248186011": 99, "67884": 99, "09326036123": 99, "5000000000291665e": 99, "6180885085e": 99, "08895483066e": 99, "1415085799262523": 99, "14155265358979": 99, "impulse_response_plot": 99, "lower_limit": [99, 262], "upper_limit": [99, 262], "step_response_plot": 99, "ramp_response_plot": 99, "r653": 99, "impulse_response_numerical_data": 99, "nb_of_point": [99, 183], "lineover1drangeseri": [99, 183], "amplitud": [99, 137], "06616480200395854": 99, "854500743565858": 99, "9999999799999999": 99, "7042848373025861": 99, "170748906965121e": 99, "1901263495547205e": 99, "r654": 99, "step_response_numerical_data": 99, "025413462339411542": 99, "0484508722725343": 99, "670250533855183": 99, "844291913708725": 99, "023844582399907256": 99, "042894276802320226": 99, "828770759094287e": 99, "456457160755703e": 99, "mx": [99, 143, 204], "r655": 99, "ramp_funct": 99, "ramp_response_numerical_data": 99, "12166980856813935": 99, "861246379582118": 99, "4504508011325967e": 99, "006046440489058766": 99, "12499999999568202": 99, "12499999999661349": 99, "bode": 100, "impuls": [100, 101], "den": [101, 188, 209, 213], "superscript": [101, 197], "tf2": 101, "tf3": 101, "tf4": 101, "tf5": 101, "tf6": 101, "500000000000000": 101, "tf7": 101, "tf8": 101, "tf9": 101, "tf10": 101, "tf11": 101, "tf12": 101, "r656": 101, "transfer_funct": 101, "r657": 101, "dc_gain": 101, "dc": [101, 126], "from_rational_express": 101, "zerodivisionerror": [101, 188, 226, 236], "complexinfin": 101, "tf": [101, 236], "is_biprop": 101, "is_prop": 101, "is_stabl": 101, "is_strictly_prop": 101, "sys1": 101, "sys2": 101, "feedforward": 101, "fed": 101, "sit": [101, 181], "plant": 101, "compulsori": 101, "tf_1": 101, "tf_2": 101, "tf_3": 101, "tf_4": 101, "tfm_1": 101, "num_input": 101, "num_output": 101, "tfm_2": 101, "tf_5": 101, "tf_6": 101, "tf_7": 101, "tf_8": 101, "tfm_3": 101, "tfm_4": 101, "tfm_5": 101, "tfm_6": 101, "tf_9": 101, "tf_10": 101, "tfm_7": 101, "tfm_8": 101, "tfm_9": 101, "tfm_10": 101, "tfm_11": 101, "tfm_12": 101, "elem_pol": 101, "elem_zero": 101, "from_matrix": [101, 186], "m_tf": 101, "tfm": 101, "tfm1": 101, "tfm2": 101, "g4": 101, "tfm3": 101, "mimolineartimeinvari": 101, "mat_a": 101, "mat_b": 101, "mat_c": 101, "tfm_a": 101, "tfm_b": 101, "tfm_c": 101, "expr_1": 101, "expr_2": 101, "expr_3": 101, "expr_4": 101, "plant_mat": 101, "controller_mat": 101, "neg_feedback": 101, "hep": 102, "gamma_matric": [102, 104], "gammamatrix": 102, "lorentzindex": 102, "gammamatrixhead": 102, "extract_type_ten": 102, "gamma_trac": 102, "i0": [102, 135, 223], "i2": [102, 114, 130, 223], "i4": [102, 223], "i5": 102, "ps": 102, "qs": [102, 109, 257], "kahane_simplifi": 102, "spinor": 102, "behind": [102, 114, 127, 167, 186, 206, 209, 213, 216, 258, 264], "rearrang": [102, 109, 125, 126, 147, 213], "ta": [102, 206], "tb": [102, 206, 228], "tc": [102, 188, 193, 206], "joseph": [102, 191], "kahan": 102, "octob": 102, "1968": 102, "simplify_gpgp": 102, "e_nl": [103, 164], "hartre": 103, "helium": 103, "2209": 103, "e_nl_dirac": 103, "spin_up": 103, "035999037000": 103, "relativist": 103, "angular": [103, 106, 108, 111, 116, 117, 118, 119, 121, 123, 124, 127, 130, 132, 136, 137, 139, 142, 160, 164, 173, 176, 182], "momentum": [103, 111, 114, 124, 130, 141, 142, 160, 164, 182, 223], "light": [103, 135, 168, 177, 184], "035999037": 103, "1012": 103, "3627": 103, "500006656595360": 103, "125002080189006": 103, "125000416028342": 103, "0555562951740285": 103, "0555558020932949": 103, "0555556377366884": 103, "psi_nlm": 103, "wave": [103, 133, 134, 135, 200, 258], "psi_": [103, 139], "nlm": 103, "radial": [103, 118, 164], "nl": [103, 164], "magnet": [103, 134, 178, 250], "azimuth": 103, "wf": [103, 116], "abs_sqrd": 103, "silver": 103, "94": [103, 191], "141": 103, "4418": 103, "mdft": 104, "mgamma": 104, "gamma_5": 104, "gamma_0": 104, "gamma_3": 104, "r658": 104, "msigma": 104, "pauli": [104, 258], "sigma_i": [104, 217], "r659": 104, "pauli_matric": [104, 138], "pat_matrix": 104, "unansw": [105, 172], "kane": [105, 114, 120, 124, 129, 130, 172, 173, 242], "q1d": [105, 114, 116, 118, 121, 122, 123, 125, 126, 127, 128, 172, 177, 181], "q2d": [105, 114, 116, 118, 121, 122, 123, 125, 126, 176, 177], "q3d": [105, 121, 122, 123, 125], "kinemat": [105, 108, 109, 113, 114, 116, 117, 118, 119, 121, 123, 125, 127, 128, 130, 131, 173, 179, 181], "dyad": [105, 130, 245], "mprint": [105, 121, 122, 123, 124, 125], "mpprint": [105, 124, 125], "mlatex": [105, 124], "sub_dict": [105, 107, 116], "msub": [105, 124, 127], "cleaner": [105, 130, 213], "gsl": [105, 230], "lsoda": 105, "penalti": 105, "masscent": [106, 108, 111, 117, 128, 130], "central_inertia": [106, 111, 117, 119], "possess": [106, 128, 223], "name_of_bodi": 106, "ixx": [106, 111, 173], "body_inertia": 106, "torqu": [106, 109, 113, 119, 125, 126, 130], "ang_vel_in": [106, 108, 114, 121, 122, 130, 173, 180], "set_ang_vel": [106, 111, 114, 116, 121, 122, 127, 128, 130, 131, 173, 175, 176, 180], "apply_forc": [106, 119], "reaction_bodi": [106, 119], "reaction_point": 106, "oppposit": 106, "desri": 106, "force1": 106, "b_masscent": 106, "b_frame": 106, "newtonion": 106, "spring_forc": 106, "n_frame": 106, "apply_torqu": [106, 119], "torquess": 106, "torque1": 106, "b1_frame": 106, "b2_frame": 106, "clear_load": 106, "dcm": [106, 108, 114, 116, 130, 173, 180, 181, 242], "orient_axi": [106, 173, 175], "kinetic_energi": [106, 124, 128, 130], "kinet": [106, 109, 111, 124], "inerti": [106, 109, 111, 116, 118, 121, 125, 126, 128, 130], "set_vel": [106, 109, 111, 114, 116, 118, 121, 122, 123, 125, 126, 127, 128, 130, 131, 176, 180], "b_ixx": 106, "b_mass": 106, "masscenter_vel": [106, 108], "smart": [107, 127, 204, 210, 213], "sub1": [107, 197], "sub2": [107, 197], "reference_fram": [107, 173], "child": [108, 187, 232], "parent_joint_po": [108, 117, 119], "child_joint_po": [108, 117, 119], "parent_axi": [108, 117, 119], "child_axi": [108, 117, 119], "_generate_coordin": 108, "_generate_spe": 108, "_orient_fram": 108, "_set_angular_veloc": 108, "_set_linar_veloc": 108, "rotation_axi": 108, "parent_point": 108, "child_point": 108, "kde": [108, 117, 118, 127], "revolut": 108, "\u03c9": 108, "pc": [108, 194], "pc_p_joint": 108, "pc_c_joint": 108, "p_frame": 108, "c_frame": 108, "theta_pc": 108, "omega_pc": 108, "pos_from": [108, 114, 116, 117, 118, 130, 176, 180], "pendulum": [108, 113, 115, 119, 124, 127, 131, 180], "upper_bob": 108, "lower_bob": 108, "ceiling_joint": 108, "pendulum_joint": 108, "theta_p1": 108, "theta_p2": 108, "u_fram": 108, "l_frame": 108, "omega_p1": 108, "omega_p2": 108, "vel": [108, 114, 116, 118, 122, 130, 176, 180, 248], "prismat": 108, "slide": 108, "x_pc": 108, "v_pc": 108, "wall": [108, 119], "part1": 108, "part2": 108, "j1": [108, 117, 119, 142, 160], "j2": [108, 117, 119, 142, 160], "x_j1": 108, "w_frame": 108, "x_j2": 108, "p1_frame": 108, "v_j1": 108, "kanesmethod": [109, 114, 116, 117, 118, 119, 121, 122, 125, 127, 130], "q_ind": [109, 110, 114, 116, 117, 118, 121, 122, 125, 127, 130], "u_ind": [109, 110, 114, 116, 117, 118, 121, 122, 125, 127, 130], "kd_eq": [109, 114, 116, 117, 118, 121, 122, 127, 130], "q_depend": [109, 116, 117, 118, 125, 130], "configuration_constraint": [109, 116, 117, 118, 125], "u_depend": [109, 116, 117, 118, 125, 130], "velocity_constraint": [109, 116, 117, 118, 125, 130], "acceleration_constraint": 109, "u_auxiliari": [109, 122, 125, 130], "forcelist": [109, 114, 117, 118, 121, 122, 126, 127, 130], "levinson": [109, 129, 173, 242], "udot": [109, 116], "damper": [109, 114, 119], "qd": [109, 116, 125, 176], "ud": [109, 125], "kd": [109, 116, 121, 122, 125], "fl": [109, 116, 125, 126, 130, 191], "bl": [109, 116, 125, 130], "frstar": [109, 114, 116, 118, 121, 122, 125, 127, 130], "kanes_equ": [109, 114, 116, 118, 121, 122, 125, 127, 130], "mass_matrix": [109, 113, 116, 121, 122, 125, 126, 131], "a_and_b": [109, 110, 118], "mass_matrix_ful": [109, 114, 119, 125, 126], "forcing_ful": [109, 114, 119, 125, 126], "auxiliary_eq": [109, 122], "constrain": [109, 118, 126, 130], "kindiffdict": [109, 116, 121, 122, 125, 130], "new_method": [109, 118], "intens": [109, 110, 132, 135], "perm_mat": [109, 110, 127], "op_point": [109, 110, 118, 127], "beforehand": [109, 230], "inv_method": 109, "to_linear": [109, 127], "recalcul": [109, 193], "hol_coneq": [109, 118, 126], "nonhol_coneq": [109, 118, 126], "nonconserv": 109, "form_lagranges_equ": [109, 118, 123, 126, 127], "qdot": [109, 116, 117, 176], "qdoubledot": 109, "lam": [109, 110, 131], "lagranges_equ": 109, "qd_ind": [109, 127], "q_dep": [109, 125, 127], "qd_dep": [109, 127], "solve_multipli": [109, 118], "sol_typ": 109, "array_lik": 109, "f_3": [110, 113, 131, 213], "f_c": [110, 118], "f_v": [110, 118], "f_a": 110, "q_d": 110, "u_i": [110, 127, 180, 190], "u_d": [110, 130], "q_op": [110, 118], "u_op": [110, 118], "qd_op": 110, "ud_op": [110, 118], "spatial": [111, 137, 173, 197], "init_vprint": [111, 112, 128, 131, 173, 175, 176, 179, 180, 181], "locatenew": [111, 116, 118, 121, 122, 123, 127, 128, 130, 131, 174, 176, 178, 180], "parallel_axi": 111, "inertia_tupl": 111, "mv": 111, "iyi": [111, 173], "izz": [111, 173], "ixi": [111, 173], "iyz": [111, 173], "izx": 111, "yy": [111, 181, 213], "yz": [111, 181, 183], "zx": [111, 181], "pos_vec": 111, "px": [111, 153, 158, 223], "body1": 111, "body2": 111, "body3": 111, "h2": 111, "multibodi": [111, 114, 124, 129, 130, 131, 180], "vprint": [112, 172, 176, 179, 181], "vpprint": [112, 172, 179, 181], "vlatex": [112, 172, 173, 179, 181], "coord_stat": 113, "right_hand_sid": 113, "coordinate_deriv": [113, 131], "alg_con": [113, 131], "output_eqn": 113, "coord_idx": [113, 131], "speed_idx": [113, 131], "m_3": [113, 131, 142, 182], "exogen": [113, 131], "ref_fram": 113, "graviti": [113, 114, 118, 119, 121, 123, 130, 178, 250], "theta_dot": 113, "kin_explicit_rh": [113, 131], "dyn_implicit_mat": [113, 131], "dyn_implicit_rh": [113, 131], "symsystem": 113, "dae": [113, 131], "adjust": [113, 200, 204], "comb_implicit_mat": [113, 131], "comb_implicit_rh": [113, 131], "kinema": 113, "comb_explicit_rh": [113, 131], "compute_explicit_form": 113, "awhil": 113, "constant_symbol": 113, "dynamic_symbol": 113, "motiongenesi": [114, 130], "double_pendulum": 114, "motionvari": [114, 130], "newtonian": [114, 130], "simprot": [114, 130], "n_a": 114, "n_b": 114, "w_a_n": 114, "w_b_n": [114, 130], "p_o_p": 114, "p_p_r": 114, "v_o_n": [114, 130], "v2pt": [114, 130], "v_p_n": 114, "v_r_n": 114, "force_p": 114, "force_r": 114, "tfinal": 114, "integstp": 114, "some_filenam": 114, "parse_autolev": 114, "sympy_cod": 114, "include_numer": 114, "include_pydi": 114, "pydi": [114, 130, 173], "u1d": [114, 116, 118, 121, 122, 125], "u2d": [114, 116, 118, 121, 122, 125], "frame_n": 114, "frame_a": 114, "frame_b": 114, "point_o": 114, "particle_p": 114, "p_pt": 114, "particle_r": 114, "r_pt": 114, "set_po": [114, 176, 180], "v2pt_theori": [114, 116, 121, 122, 123, 127, 128, 130, 131, 176, 180], "initial_condit": [114, 130], "overwritten": 114, "e2row": 114, "eigvec": [114, 130], "eigenvec": 114, "deg2rad": 114, "0174533": 114, "wo": 114, "coef": [114, 130], "u3": [114, 116, 117, 119, 121, 122, 125, 130, 176, 180], "strai": 114, "reassign": 114, "inher": [114, 236, 264], "rhs_x": 114, "i_b_bo": 114, "body_b": 114, "body_b_f": 114, "b_cm": 114, "b_f": 114, "scene": [114, 209, 264], "i_c_d": 114, "i_p_q": 114, "i_b_o": 114, "e3": [114, 204, 213], "i_p_o": 114, "e4": [114, 204], "p_so_o": 114, "nicheck": 114, "plug": [114, 168], "hurdl": 114, "gitlab": 114, "repo": 114, "ch4": 114, "ch5": 114, "ch6": 114, "cst": 114, "grammar": [114, 209], "roll": [115, 116, 124, 180, 217], "disc": [115, 124, 180], "bicycl": [115, 124, 129], "nonminim": [115, 124, 127], "linkag": [115, 124], "meijaard2007": [116, 129], "steer": [116, 129], "purposefulli": 116, "mechanics_print": [116, 117, 121, 122, 123, 124, 125, 126], "yaw": 116, "ang": 116, "rear": 116, "wheel": 116, "pitch": 116, "q4": [116, 125, 175], "q5": [116, 175], "q4d": [116, 125], "q5d": 116, "u4": [116, 122, 125, 130], "u5": [116, 122], "u6": [116, 122], "u3d": [116, 121, 122], "u4d": 116, "u5d": 116, "u6d": 116, "explanatori": 116, "wfrad": 116, "wrrad": 116, "htangl": 116, "forkoffset": 116, "forklength": 116, "framelength": 116, "forkcg1": 116, "forkcg3": 116, "framecg1": 116, "framecg3": 116, "iwr11": 116, "iwr22": 116, "iwf11": 116, "iwf22": 116, "iframe11": 116, "iframe22": 116, "iframe33": 116, "iframe31": 116, "ifork11": 116, "ifork22": 116, "ifork33": 116, "ifork31": 116, "mframe": 116, "mfork": 116, "mwf": 116, "mwr": 116, "wr": 116, "tempfram": 116, "tempfork": 116, "orientnew": [116, 118, 121, 122, 123, 127, 131, 173, 175, 176, 178, 180, 181], "wr_cont": 116, "wr_mc": 116, "frame_mc": 116, "fork_mc": 116, "wf_mc": 116, "wf_cont": 116, "flip": [116, 148, 157, 217], "frame_i": 116, "fork_i": 116, "wr_i": 116, "wf_i": 116, "bodyfram": 116, "bodyfork": 116, "bodywr": 116, "bodywf": 116, "nonholonom": 116, "closer": [116, 216, 267], "slip": [116, 120, 122, 180], "replic": 116, "conlist_spe": 116, "conlist_coord": 116, "gravit": [116, 121, 166, 178, 250], "aforement": [116, 178, 210, 248], "paperradrear": 116, "paperradfront": 116, "hta": 116, "trailpap": 116, "08": 116, "rake": 116, "paperwb": 116, "02": 116, "paperframecgx": 116, "paperframecgz": 116, "paperforkcgx": 116, "paperforkcgz": 116, "framecgnorm": 116, "framecgpar": 116, "tempa": 116, "tempb": 116, "tempc": 116, "paperforkl": 116, "forkcgnorm": 116, "forkcgpar": 116, "upright": 116, "val_dict": 116, "0603": 116, "1405": 116, "05892": 116, "00708": 116, "00756": 116, "kdd": [116, 121, 122], "centripet": 116, "corioli": 116, "forcing_lin": 116, "mm_full": 116, "_k_kqdot": 116, "xdot": 116, "lean": [116, 121, 123], "amat": 116, "summari": [117, 209, 228, 252], "jointsmethod": [117, 119], "q_1": [117, 118, 119, 127, 143, 180, 193, 210], "q_2": [117, 118, 119, 127, 180], "q_3": [117, 119, 180], "u_1": [117, 118, 119, 180, 192, 213], "u_2": [117, 118, 119, 180, 192, 213], "u_3": [117, 119, 180], "densiti": [117, 217, 228, 251], "link1": 117, "link2": 117, "link3": 117, "link4": 117, "joint1": 117, "pinjoint": [117, 119, 124], "joint2": 117, "joint3": 117, "j3": [117, 119, 142, 160], "fh": 117, "fhd": 117, "_method": 117, "_form_eom": 117, "eom": [118, 119, 127], "theta1": 118, "dq_dict": 118, "presimplifi": 118, "inp_vec": [118, 127], "lagrangesmethod": [118, 123, 124, 126, 127], "lag": [118, 123, 127], "lm": [118, 126, 127, 190, 193], "lag_eq": [118, 127], "lam_op": 118, "prismaticjoint": [119, 124], "mb": [119, 130], "ibzz": 119, "compound_pend": 119, "simple_pend": 119, "slider": 119, "rev1": 119, "rev2": 119, "form_eom": 119, "w_r_n_qd": [121, 122], "dmc": [121, 122, 123], "uv": [121, 122, 163], "bodyd": [121, 122, 123], "bodylist": [121, 122], "revisit": [122, 180], "kane1985": [122, 125, 128, 129], "thorough": [122, 127, 210], "simplifc": 122, "f3": [122, 183, 197], "necessit": 122, "factor_term": [122, 193, 206, 209], "simplify_auxiliary_eq": 122, "lrh": 123, "planet": 124, "robot": 124, "fascin": 124, "trajectori": 124, "challeng": 124, "came": [124, 267], "tackl": [124, 230], "organ": 124, "amen": 124, "arduou": 124, "momenta": [124, 142], "symbolicsystem": 124, "rough": [124, 168], "inertia_of_point_mass": 124, "linear_momentum": [124, 128, 130], "angular_momentum": [124, 128, 130], "kanemethod": 124, "find_dynamicsymbol": 124, "f_h": 125, "nh": 125, "ku": [125, 197], "k_d": 125, "f_d": [125, 126, 190], "dnh": 125, "f_r": [125, 127, 190], "speed_con": 125, "coord_con": 125, "u_dep": 125, "m_d": 126, "lam1": 126, "0_": 127, "blajer1994": [127, 129], "brought": [127, 217], "vel_p": 127, "a_op": 127, "b_op": 127, "m_op": 127, "a_lin": 127, "hasn": 127, "wikidyad": [128, 179], "wikidyadicproduct": [128, 179], "juxtaposit": [128, 172, 245], "hat": [128, 172, 173, 177, 178, 180, 181, 245, 246, 248, 250, 251], "otim": [128, 218], "l_p": 128, "likins1973": [128, 179], "l_b": 128, "requisit": 128, "t_p": 128, "t_b": 128, "t_t": 128, "virtu": [128, 130], "blajer": 129, "wojciech": 129, "werner": 129, "schiehlen": 129, "walter": 129, "schirm": 129, "kane1983": [129, 181], "likin": [129, 179], "david": [129, 193], "spacecraft": 129, "1983": [129, 232], "meijaard": 129, "jim": 129, "papadopoulo": 129, "ruina": 129, "schwab": 129, "royal": 129, "societi": [129, 210], "2084": 129, "1955": 129, "982": 129, "lectur": [130, 191, 217], "rigibodi": 130, "proprietari": 130, "k3": [130, 187], "k4": 130, "b11": 130, "b12": 130, "b21": 130, "b22": 130, "xd": 130, "xd2": 130, "y1d": 130, "y2d": 130, "tina": 130, "overwrit": [130, 172], "dt2": 130, "dy2": 130, "ty": 130, "linsolv": [130, 195, 211, 215, 273], "nonlinsolv": [130, 211, 215, 273], "nsolv": [130, 215], "rowmatrix": 130, "colmatrix": 130, "diagmat": 130, "eigval": 130, "row_matrix": 130, "col_matrix": 130, "ao": 130, "i12": 130, "i23": 130, "i31": 130, "bf": 130, "p_o_q": 130, "mag": 130, "unitvec": 130, "qo": 130, "p_p_q": 130, "partial_veloc": [130, 173, 176], "a_o_n": 130, "set_acc": [130, 176, 180], "qb": [130, 185], "qbd": 130, "alf_b_n": 130, "set_ang_acc": [130, 173], "ang_acc_in": [130, 173], "force_o": 130, "torque_a": 130, "qa": 130, "qad": 130, "a_b": 130, "v1pt": 130, "v1pt_theori": [130, 176, 180], "a1pt": 130, "a1pt_theori": [130, 176], "a2pt": 130, "a2pt_theori": [130, 176, 180], "angvel": 130, "force_vector": 130, "center_of_mass": 130, "kindiff": 130, "ke": 130, "configura": 130, "tion_constraint": 130, "pendent": 130, "velocity_con": 130, "traint": 130, "acceleration_": 130, "u_auxilia": 130, "ry": 130, "matlplotlib": 130, "stiff": 130, "damp": 130, "legend": [130, 183, 200], "introspect": 130, "rich": [130, 209], "media": [130, 136], "histori": 130, "esqu": 130, "cpython": 130, "pertin": [131, 184, 192], "alg_con_ful": 131, "symsystem1": 131, "symsystem2": 131, "symsystem3": 131, "raytransfermatrix": 132, "geometricrai": 132, "beamparamet": 132, "geometric_conj": 132, "gauss_conj": 132, "conjugate_gauss_beam": 132, "lens": 132, "gaussopt": 132, "wavelen": 132, "z_r": 132, "wavelength": [132, 137], "waist": 132, "rayleigh": [132, 217], "refract": [132, 134, 136, 137], "530e": 132, "88679245283019": 132, "92753330865999": 132, "w_0": [132, 210], "00100000000000000": 132, "freespac": 132, "fs": 132, "00101413072159615": 132, "00210803120913829": 132, "r660": 132, "complex_beam_paramet": 132, "r661": 132, "gaussian_beam": 132, "spread": [132, 197, 217, 232], "00053": 132, "goui": 132, "curvatur": [132, 136], "55998576005696": 132, "2809": 132, "peak": 132, "waist_approximation_limit": 132, "paraxi": [132, 136], "06e": 132, "curvedmirror": 132, "curvedrefract": 132, "flatmirror": 132, "flatrefract": 132, "2x1": 132, "thinlen": 132, "r662": 132, "ray_transfer_matrix_analysi": 132, "waist_in": 132, "waist_out": 132, "s_in": 132, "s_out": 132, "w_o": 132, "gaussian_conj": 132, "z_r_in": 132, "incid": [132, 136], "z_r_out": 132, "emerg": [132, 185], "geometric_conj_ab": 132, "geometric_conj_af": 132, "geometric_conj_bf": 132, "rayleigh2waist": 132, "waist2rayleigh": 132, "optic": [134, 135, 136, 137, 258], "permitt": 134, "permeabl": 134, "fermat": 134, "electr": [134, 136, 178, 248, 250], "electromagnet": [134, 178, 223, 250], "intrinsic_imped": 134, "149896229": [134, 137], "kilogram": [134, 166, 168, 170], "1250000": 134, "amper": 134, "refractive_index": 134, "299792458": [134, 137, 170], "r663": 134, "optical_medium": 134, "travel": [134, 137, 178, 248, 250], "stoke": [135, 249], "mueller": 135, "jones_vector": 135, "stokes_vector": 135, "half_wave_retard": 135, "polarizing_beam_splitt": 135, "jones_2_stok": 135, "\u2148": [135, 182, 196, 197, 216, 273], "\u03c7": 135, "\u03c8": 135, "i\u2080": 135, "plate": 135, "hwp": 135, "splitter": 135, "transmit": [135, 136], "pb": 135, "transmitted_port": 135, "reflected_port": 135, "transmitted_pow": 135, "reflected_pow": 135, "r664": 135, "jones_calculu": 135, "r665": 135, "mueller_calculu": 135, "r666": 135, "stokes_paramet": 135, "retard": 135, "poincar\u00e9": 135, "sphere": [135, 242, 251], "tilt": 135, "mayor": 135, "linear_polar": 135, "transmiss": [135, 136], "mueller_matrix": 135, "quarter_wave_retard": 135, "quarter": 135, "phase_retard": 135, "\u03b4": 135, "rs": [135, 194, 230], "ts": [135, 217], "phia": 135, "phib": 135, "4x1": [135, 217], "phi_a": 135, "phi_b": 135, "qwp": 135, "reflective_filt": 135, "unpolar": 135, "transmissive_filt": 135, "attenu": 135, "transmitt": 135, "ndf": 135, "refraction_angl": 136, "fresnel_coeffici": 136, "brewster_angl": 136, "critical_angl": 136, "lens_makers_formula": 136, "mirror_formula": 136, "lens_formula": 136, "hyperfocal_dist": 136, "transverse_magnif": 136, "medium1": 136, "medium2": 136, "brewster": 136, "926093295503462": 136, "onset": 136, "850908514477849": 136, "02005": 136, "angle_of_incid": 136, "polaris": 136, "te": 136, "undergo": 136, "317843553417859": 136, "348645229818821": 136, "658921776708929": 136, "651354770181179": 136, "235625382192159": 136, "971843958291041": 136, "816477005968898": 136, "577377951366403": 136, "r667": 136, "fresnel_equ": 136, "coc": 136, "0033": 136, "focal_length": 136, "n_len": 136, "n_surr": 136, "thick": 136, "1515151515151": 136, "0000000000000": 136, "3418463277618": 136, "41152": 136, "magnif": 136, "twave": 137, "time_period": 137, "wavenumb": 137, "phi1": 137, "phi2": 137, "w1": [137, 209], "w3": [137, 197], "superposit": [137, 148, 159, 184], "angular_veloc": 137, "tempor": 137, "r668": 138, "paulialgebra": 138, "evaluate_pauli_product": 138, "paulimatric": 138, "sigma3": 138, "nodal": [139, 164, 184], "hw": [139, 164], "coherent_st": 139, "coher": [139, 165, 171], "1d": [139, 141, 154, 173, 222], "wavefunct": [139, 152, 161, 164, 258], "r669": 140, "__cmp__": [140, 144, 163], "dagger": [140, 144, 150, 152, 155, 157, 162, 163], "operatorset": [141, 153], "positionbra3d": 141, "eigenbra": [141, 154, 160], "positionket3d": 141, "eigenket": [141, 154, 160], "positionstate3d": 141, "eigenst": [141, 153, 158, 160, 161], "position_x": 141, "position_i": 141, "position_z": 141, "pxbra": [141, 153], "pxket": [141, 153, 158], "pxop": [141, 153, 158], "xbra": [141, 153, 158], "xket": [141, 153, 158], "xop": [141, 153, 158], "yop": 141, "zop": 141, "uncoupl": [142, 160], "r670": 142, "j_3": [142, 160, 182], "r671": 142, "wigner3j": [142, 182], "wigner": [142, 160, 217, 258], "varshalovich": [142, 160], "zyla": 142, "theor": 142, "phy": [142, 168, 182], "083c01": 142, "r672": 142, "w3j": 142, "715": [142, 182, 197], "wigner6j": [142, 182], "j12": [142, 160], "j23": 142, "6j": [142, 182], "wigner9j": [142, 182], "j4": 142, "j34": 142, "j13": 142, "j24": 142, "9j": [142, 182], "cg_simp": 142, "r673": 142, "clebsh": 142, "rethink": 143, "figsiz": 143, "circuitplot": 143, "nqubit": [143, 147, 148, 157], "control_lin": 143, "gate_idx": [143, 147], "min_wir": 143, "max_wir": 143, "control_point": 143, "wire_idx": 143, "not_point": 143, "one_qubit_box": 143, "box": [143, 148, 150, 159, 161, 251], "qubit": [143, 147, 148, 149, 150, 156], "swap_point": 143, "two_qubit_box": 143, "createcg": 143, "latexnam": 143, "mock": 143, "mz": 143, "circuit_plot": 143, "min_qubit": [143, 147], "autogener": 143, "wire": 143, "q_0": [143, 210], "j_0": 143, "r674": 144, "comm": [144, 163, 223], "plank": 145, "r675": 145, "05457162000000e": 145, "planck_const": 145, "hermetian": 146, "r676": 146, "r677": 146, "ket": [146, 151, 152, 153, 155, 157, 158, 161, 163], "bra": [146, 151, 152, 153, 155, 157, 158, 161, 163], "innerproduct": [146, 151, 152, 158, 160, 163], "outerproduct": [146, 152], "seamlessli": 146, "hermitian_adjoint": 146, "hermitian_transpos": 146, "_apply_operators_qubit": 147, "gate_sort": 147, "gate_simp": 147, "ugat": 147, "cgate": 147, "control_valu": 147, "cnot": 147, "eval_control": 147, "plot_gat": 147, "circ_plot": 147, "simplify_cg": 147, "cphase": 147, "cnotgat": 147, "qappli": [147, 148, 150, 152, 157], "get_target_matrix": 147, "represen": 147, "hadamardg": 147, "identityg": 147, "onequbitg": 147, "phaseg": 147, "swapgat": 147, "target1": 147, "target2": 147, "tgate": 147, "twoqubitg": 147, "xgate": 147, "ygate": 147, "zgate": 147, "bubbl": 147, "random_circuit": 147, "ngate": 147, "gate_spac": 147, "mermin": 148, "_represent_zg": 148, "oracleg": 148, "oracl": 148, "intqubit": [148, 157], "search_funct": 148, "wgate": 148, "apply_grov": 148, "grover_iter": 148, "qstate": 148, "wv": 148, "superposition_basi": 148, "numqubit": 148, "basis_st": 148, "matt": 149, "complexspac": 149, "directsumhilbertspac": 149, "r678": 149, "hilbertspac": 149, "fockspac": 149, "hs": 149, "hilbert_spac": [149, 152, 161], "direct_sum": 149, "quantiz": [149, 258], "r679": 149, "mess": [149, 213, 216, 272], "fock_spac": 149, "r680": 149, "tensorpowerhilbertspac": 149, "r681": 149, "tensor_product": 149, "tensorproducthilbertspac": 149, "r682": 149, "clebsch": [150, 160, 182], "gordan": [150, 160, 182], "hilbert": [150, 152, 158], "grover": 150, "qft": [150, 159], "shor": 150, "brabas": [151, 152, 158, 161], "ketbas": [151, 152, 158, 161], "r683": 151, "inner_product": 151, "apply_oper": [152, 163], "identityoper": 152, "r684": 152, "r685": 152, "polymoni": 152, "operator_": 152, "28physic": 152, "old_assumpt": 152, "r686": 152, "outer_product": 152, "unitaryoper": 152, "operators_to_st": 153, "state_to_oper": 153, "_operators_to_st": 153, "state_map": 153, "_state_to_oper": 153, "statebas": [153, 158, 161], "piab": 154, "piabbra": 154, "piabhamiltonian": 154, "piabket": 154, "ip_doit": 155, "smarter": [156, 206], "rk": 156, "iqft": 156, "rkgate": 156, "qtf": 156, "povm": 157, "as_int": [157, 238], "qubit_valu": 157, "intqubitbra": 157, "00001": 157, "qubitbra": 157, "matrix_to_dens": 157, "matrix_to_qubit": 157, "measure_al": 157, "ensembl": 157, "measure_all_oneshot": 157, "oneshot": 157, "measure_parti": 157, "measure_partial_oneshot": 157, "qubit_to_matrix": 157, "enumerate_st": 158, "_enumerate_st": 158, "foo_1": 158, "foo_2": 158, "foo_3": 158, "test2": 158, "bar_4": 158, "bar_5": 158, "bar_10": 158, "get_basi": 158, "replace_non": 158, "operator_to_st": 158, "qexpr": 158, "integrate_result": 158, "orig_expr": 158, "x_ket": 158, "x_op": 158, "rep_expect": 158, "px_2": 158, "px_1": 158, "rep_innerproduct": 158, "_repres": 158, "_represent_foobasi": 158, "foobasi": 158, "_represent_szop": 158, "szupket": 158, "szop": 158, "sz": 158, "cmod": 159, "reformat": 159, "period_find": 159, "momemtum": 160, "j2op": 160, "jxbra": 160, "jx": 160, "jzket": 160, "jxbracoupl": 160, "jcoupl": 160, "jzketcoupl": 160, "jxket": 160, "jxketcoupl": 160, "jybra": 160, "jy": 160, "jybracoupl": 160, "jyket": 160, "jyketcoupl": 160, "jzbra": 160, "jz": 160, "jzbracoupl": 160, "j_4": [160, 182], "argular": 160, "jzop": 160, "passiv": 160, "r687": 160, "wignerd": 160, "mp": [160, 215, 231], "jm": 160, "jj": 160, "r688": 160, "jcoupling_list": 160, "coupledspinst": 160, "spinstat": 160, "r689": 161, "dual_class": 161, "mn": [161, 197, 217], "ket_not": 161, "r690": 161, "k0": [161, 188, 190, 217], "orthogonalbra": 161, "orthogonalket": 161, "orthogonalst": 161, "_eval_adjoint": 161, "timedepbra": 161, "timedepst": 161, "timedepket": 161, "prob": [161, 217], "412214747707527": 161, "matrix_tensor_product": 162, "axb": 162, "xdagger": 162, "axc": 162, "bxc": 162, "tensor_product_simp": 162, "cxd": 162, "boson": 163, "fetter": 163, "welecka": 163, "secondqu": 163, "annihilateboson": 163, "fockstateket": 163, "bket": 163, "fockstatebosonket": 163, "annihilatefermion": 163, "createboson": 163, "is_only_q_annihil": 163, "destroi": [163, 206], "quasi": 163, "hole": 163, "is_only_q_cr": 163, "is_q_annihil": 163, "is_q_creat": 163, "antisymmetrictensor": 163, "bbra": 163, "fockstatebosonbra": 163, "bd": 163, "bosonicbasi": 163, "fock": 163, "NO": 163, "createfermion": 163, "wick": 163, "fbra": 163, "fockstatefermionbra": 163, "fket": 163, "fockstatefermionket": 163, "fixedbosonicbasi": 163, "n_particl": 163, "n_level": 163, "fockstat": 163, "occup": 163, "bosonbra": 163, "fockstatebra": 163, "fermi_level": 163, "r691": 163, "textwrap": [163, 238], "_q": 163, "get_subno": 163, "fermionicoper": 163, "has_q_annihil": 163, "q_annihil": 163, "has_q_creat": 163, "leftmost": 163, "q_creator": 163, "iter_q_annihil": 163, "iter_q_cr": 163, "0x": 163, "permutationoper": 163, "get_permut": 163, "varbosonicbasi": 163, "n_max": 163, "creator": 163, "evaluate_delta": 163, "einstein": [163, 223], "d_ij": 163, "_j": [163, 168, 182, 199], "d_ip": 163, "d_qp": 163, "matrix_rep": 163, "simplify_index_permut": 163, "permutation_oper": 163, "schemat": [163, 168], "abij": 163, "abji": 163, "baij": 163, "baji": 163, "permutlist": 163, "substitute_dummi": 163, "new_indic": 163, "pretty_indic": 163, "_get_ordered_dummi": 163, "_c": 163, "_d": 163, "index_group": 163, "string_of_lett": 163, "my_dummi": 163, "_v": [163, 181], "_p_0": 163, "_p_1": 163, "keep_only_fully_contract": 163, "sho": 164, "isotrop": 164, "mk": [165, 168], "legal": 165, "temperatur": [165, 178, 250], "dimensions": 165, "dimsys_si": [165, 166], "get_dimensional_depend": [165, 166], "has_integer_pow": 165, "dim_si": 165, "base_dim": 165, "derived_dim": 165, "dimensional_depend": 165, "can_transf_matrix": 165, "useless": [165, 188, 190], "inv_can_transf_matrix": 165, "dim_can_vector": 165, "dim_vector": 165, "is_consist": [165, 171], "is_dimensionless": 165, "list_can_dim": 165, "print_dim_bas": 165, "gravitational_const": [166, 170], "equivalent_dim": 166, "grav_eq": 166, "kepler": [166, 242], "venu": 166, "701": 166, "dai": [166, 170, 213], "venus_a": 166, "108208000e3": 166, "solar": 166, "solar_mass": 166, "9891e30": 166, "convert_to": [166, 170, 186, 192], "5112118495813": 166, "659097795948": 166, "astrophys": 166, "ill": 166, "astrophysicist": 167, "ua": [167, 185], "earth": [167, 178, 250], "sun": 167, "theoricist": 167, "philosophi": [167, 213, 216, 258], "mole": 168, "dimensionless": 168, "unavoid": 168, "d_3": 168, "d_2": [168, 193, 217], "underbrac": [168, 180], "countabl": [168, 216], "pmatrix": 168, "kg": [168, 251], "glu": 168, "men": 168, "heat": 168, "joul": 168, "calori": 168, "stori": 168, "chemistri": 168, "page52": 168, "1952": 168, "page78": 168, "deboer79": 168, "boer": 168, "818": 168, "levyleblond77": 168, "l\u00e9vy": 168, "leblond": 168, "conceptu": [168, 184, 250], "rivista": 168, "del": [168, 232, 249, 272], "nuovo": [168, 182], "cimento": [168, 182], "1977": 168, "187": [168, 191], "214": 168, "anticip": 168, "bin_prefix": 169, "abbrev": [169, 170, 197], "latex_repr": [169, 170], "encapsul": [169, 190, 216, 230], "kilo": 169, "scale_factor": 170, "pretty_unicode_repr": 170, "pretty_ascii_repr": 170, "mathml_presentation_repr": 170, "is_prefix": 170, "abbrevi": [170, 185, 197, 216, 218], "speed_of_light": 170, "reference_quant": 170, "target_unit": 170, "mile": 170, "atomic_mass_const": 170, "centimet": 170, "25146": 170, "609344": 170, "86400": 170, "660539060e": 170, "300000": 170, "planck": 170, "62963087839509e": 170, "base_unit": 171, "descr": 171, "dimension_system": 171, "derived_unit": 171, "overridden": [171, 184, 199, 272], "get_units_non_prefix": 171, "to_matrix": [172, 173, 181, 186, 192, 242, 244, 246], "rigidli": 172, "entireti": 172, "hidden": 172, "_str": 172, "otherfram": [173, 242], "n_alpha_b": 173, "ny": 173, "_3": 173, "rot_typ": [173, 176, 178], "rot_ord": [173, 176, 243], "orient_body_fix": 173, "orient_space_fix": 173, "orient_quaternion": 173, "tait": [173, 242, 243], "bryan": [173, 242, 243], "quaternion": [173, 176, 181, 242, 243, 253], "userwarn": [173, 226, 233, 268], "rotation_ord": [173, 242, 243], "xzx": 173, "zxz": [173, 181, 242, 243], "xyx": [173, 242, 243], "yzy": 173, "zyz": 173, "yxy": [173, 181], "yzx": [173, 181], "zxy": 173, "xzy": 173, "zyx": 173, "yxz": 173, "orient_explicit": 173, "lambda_x": [173, 242, 243], "lambda_i": [173, 242, 243], "lambda_z": [173, 242, 243], "q0": [173, 213, 242, 243], "newnam": 173, "gen_spe": [173, 176], "variable_map": 173, "a_x": [173, 181, 197], "b_x": [173, 175, 181, 223], "b_y": [173, 175, 181, 223], "a_z": [173, 181], "b_z": [173, 181, 223], "inlist": 173, "var_in_dcm": 173, "reexpress": [173, 246], "time_deriv": [173, 178, 179], "free_dynamicsymbol": 173, "codirect": 173, "dyadic_tensor": [173, 242], "frame1": 173, "frame2": [173, 175], "second_reference_fram": 173, "ixz": 173, "inertia_dyad": 173, "pertain": [174, 179], "fieldfunct": [174, 178], "vect": [174, 242, 244], "r_x": [174, 178], "r_y": [174, 178], "r_z": [174, 178], "scalar_field": [174, 178, 242, 244, 248], "grad_field": [174, 244], "point1": [174, 244], "point2": [174, 244], "sympyfi": [174, 175, 176, 244], "position2": [174, 244], "vectfield": [174, 178, 244, 248], "solenoid": [174, 244, 249], "q6": 175, "vec1": 175, "vec2": 175, "coordinatesym": [175, 179], "n_x": 175, "rotating_reference_fram": 175, "time_derivatives_in_the_two_fram": 175, "otherpoint": 176, "outfram": 176, "interfram": 176, "fixedfram": 176, "get_motion_param": 176, "vectori": [176, 178, 245, 250], "timevalue1": 176, "timevalue2": 176, "313": 176, "vel_vec": 176, "q1dd": 177, "q2dd": 177, "charg": [178, 250], "displac": [178, 180, 250], "depict": [178, 216, 250], "temper": 178, "electric_potenti": [178, 248], "r1_x": 178, "r1_y": 178, "infinitesim": [178, 248], "nabla": [178, 242, 247, 248], "f_y": [178, 248], "f_x": [178, 216, 248], "sink": [178, 248], "irrot": [178, 248], "is_conserv": [178, 248, 249], "is_solenoid": [178, 248, 249], "scalar_potenti": [178, 248, 249], "conservative_field": [178, 248], "scalar_potential_differ": [178, 248, 249], "aug": [179, 216], "dyadic_product": [179, 249], "inc": [179, 191], "kinematic_equ": 179, "w_x": 180, "w_y": 180, "w_z": 180, "w_1": [180, 192], "w_2": [180, 192], "w_3": 180, "textrm": [180, 181, 205], "u_x": 180, "sp": 180, "oq": 180, "qp": 180, "rod": 180, "went": 180, "parallelogram": 181, "c_x": 181, "c_y": 181, "c_z": 181, "train": 181, "friend": 181, "xz": [181, 183], "zy": 181, "undergon": [181, 216], "vastli": 181, "wait": 181, "mold": 181, "bp": [181, 213], "bpp": 181, "zzx": 181, "multifram": 181, "direction": 181, "racah": 182, "gaunt": 182, "rasch03": 182, "regge58": 182, "regg": 182, "544": 182, "regge59": 182, "116": [182, 191], "1959": 182, "edmonds74": 182, "edmond": 182, "princeton": [182, 217], "1957": 182, "rasch": 182, "siam": [182, 235], "sci": 182, "1416": 182, "1428": 182, "liberatodebrito82": 182, "liberato": 182, "brito": 182, "forum": [182, 216], "m4nzdu": 182, "7o38": 182, "jen": 182, "03": [182, 217], "oscar": 182, "gerardo": 182, "lazo": 182, "arjona": 182, "jyr2000": 182, "gmail": 182, "clebsch_gordan": 182, "2j_3": 182, "dot_rot_grad_ynm": 182, "gradient": [182, 183, 242, 249, 250], "_l": 182, "l_2": 182, "l_3": 182, "drastic": 182, "2l_1": 182, "2l_2": 182, "2l_3": 182, "1200": 182, "00689500421922113448": 182, "inflect": 182, "unsuit": 182, "dd": [182, 202], "ee": [182, 192], "j_5": 182, "j_6": 182, "richer": 182, "wigner_3j": 182, "wigner_6j": 182, "wigner_9j": 182, "j_7": 182, "j_8": 182, "j_9": 182, "05555555": 182, "1666666": 182, "wigner_d": 182, "j_z": 182, "j_y": 182, "\u03b3": [182, 262, 272], "wigner_d_smal": 182, "textbackend": 183, "plot_parametr": 183, "plot_implicit": 183, "plot3d_parametric_lin": 183, "plot3d_parametric_surfac": 183, "xlabel": 183, "ylabel": 183, "zlabel": 183, "aspect_ratio": 183, "ylim": 183, "axis_cent": 183, "xscale": 183, "yscale": 183, "autoscal": 183, "textplot": 183, "_seri": [183, 194], "baseseri": 183, "nonparametr": 183, "cylindr": [183, 248], "basebackend": 183, "parametric2dlineseri": 183, "parametric3dlineseri": 183, "red": 183, "cyan": 183, "grayscal": 183, "integers_onli": 183, "surfaceover2drangeseri": 183, "parametricsurfaceseri": 183, "surface_color": 183, "range1": 183, "range2": 183, "fill_between": 183, "inch": 183, "expr_x": 183, "expr_i": 183, "canva": 183, "range_x": 183, "range_i": 183, "nb_of_points_x": 183, "nb_of_points_i": 183, "expr_z": 183, "range_u": 183, "range_v": 183, "nb_of_points_u": 183, "nb_of_points_v": 183, "x_var": 183, "y_var": 183, "mesh": 183, "p8": 183, "p9": 183, "nrow": [183, 186], "ncolumn": 183, "stuff": [183, 228, 230, 238], "is_2dlin": 183, "oblig": 183, "only_integ": 183, "get_seg": 183, "get_color_arrai": 183, "var_start_end": 183, "r692": 183, "luiz": 183, "henriqu": 183, "figueiredo": 183, "r693": 183, "line3dbaseseri": 183, "surfacebaseseri": 183, "var_start_end_x": 183, "var_start_end_i": 183, "var_start_end_u": 183, "var_start_end_v": 183, "implicitseri": 183, "has_equ": 183, "use_interval_math": 183, "centric": 183, "get_mesh": 183, "process_seri": 183, "_process_seri": 183, "keyboard": 183, "mous": 183, "pyglet_plot": 183, "screenshot": 183, "camera": 183, "zoom": 183, "numpad": 183, "ordin": [183, 213, 238], "f5": 183, "f6": 183, "f8": 183, "drag": 183, "button": [183, 229], "curvilinear": [183, 245, 246, 249], "__setitem__": 183, "zfade4": 183, "key1": 183, "value1": 183, "key2": 183, "value2": 183, "unbound_theta": 183, "wirefram": 183, "saddl": 183, "fz": 183, "_______________________________________________________": 183, "mediterranean": 184, "cultur": 184, "arab": 184, "lighten": 184, "tapestri": 184, "woven": 184, "european": 184, "soil": 184, "plausibl": 184, "teeter": 184, "totter": 184, "outweigh": 184, "excit": 184, "amus": 184, "kempf": 184, "1944": 184, "20th": 184, "dedekind": 184, "intim": 184, "disciplin": 184, "toolset": 184, "atiyah69": [184, 191], "gear": 184, "greuel2008": [184, 191], "interspers": 184, "lr": 184, "ilex": 184, "\u211a": [184, 197], "localis": 184, "abridg": 184, "free_modul": [184, 188], "quotient_r": [184, 188], "overload": [184, 187, 188, 245, 267], "polynomialr": [184, 188, 189, 195], "domain_or_r": [184, 188], "quotientr": [184, 188], "base_id": [184, 188], "elbow": 184, "room": 184, "componentwis": [184, 197], "inclin": 184, "biproduct": 184, "quotient_modul": 184, "is_submodul": 184, "multiply_id": 184, "identity_hom": 184, "freemodul": 184, "freemoduleel": 184, "conicis": 184, "_contain": 184, "_syzygi": 184, "_in_terms_of_gener": 184, "_intersect": 184, "_module_quoti": 184, "reduce_el": [184, 192], "represantit": 184, "in_terms_of_gener": 184, "inclusion_hom": 184, "rela": 184, "relb": 184, "is_full_modul": 184, "module_quoti": 184, "opt": [184, 190, 209, 268], "coincis": 184, "syzygy_modul": 184, "r_n": 184, "_contains_elem": 184, "_contains_id": 184, "_quotient": 184, "_union": 184, "_product": 184, "is_whole_r": 184, "is_maxim": 184, "is_primari": 184, "is_rad": 184, "is_princip": 184, "xj": 184, "satur": 184, "subquoti": 184, "quotientmodul": 184, "subquotientmodul": 184, "killed_modul": 184, "quotientmoduleel": 184, "kill": [184, 188, 228], "quotient_hom": 184, "ker": 184, "surject": 184, "cokernel": 184, "coker": 184, "meaningfulli": 184, "restrict_domain": 184, "homomoprh": 184, "modulehomomorph": [184, 192], "_ker": 184, "_img": 184, "_kernel": 184, "_imag": 184, "_restrict_domain": 184, "_restrict_codomain": 184, "_quotient_domain": 184, "_quotient_codomain": 184, "_appli": 184, "_mul_scalar": 184, "_compos": 184, "_add": [184, 203], "is_inject": 184, "quotient_domain": 184, "is_isomorph": 184, "preimag": 184, "restrict_codomain": 184, "is_surject": 184, "quotient_codomain": 184, "induct": 184, "monogen": 184, "monogenicfiniteextens": [184, 188], "finiteextens": 184, "sqrt2": [184, 187], "_5": 184, "extensionel": [184, 188], "notinvert": [184, 190, 193], "nu_1": 185, "nu_2": 185, "nu_n": 185, "nu_i": 185, "customarili": 185, "irreduc": [185, 188, 190, 192, 193, 196, 217, 223, 272], "endow": 185, "resp": [185, 188, 213], "divmod": [185, 187, 188], "cb": [185, 235], "sqf_list": [185, 188, 193], "sqf": [185, 188, 193, 210], "buchberg": [185, 190, 191, 193], "groebnerbasi": [185, 193, 196], "solve_poly_system": [185, 193, 215, 216], "fmt": [186, 188, 192], "matrix1": 186, "driectli": 186, "dmnonsquarematrixerror": 186, "zz_i": [186, 187, 189], "from_dict_sympi": 186, "ncol": 186, "elemsdict": 186, "from_list_sympi": 186, "from_list": [186, 188, 193, 194], "construct_domain": [186, 187, 188, 193], "from_rep": 186, "drep": 186, "dm": [186, 192], "ownership": 186, "scc": 186, "substract": 186, "to_dens": 186, "to_field": [186, 188, 193], "to_spars": 186, "aq": 186, "ccc": [186, 216], "from_ddm": 186, "domainerror": [186, 190, 193], "to_ddm": 186, "r694": 186, "pythonmpq": [187, 188], "srepr": [187, 260, 267], "leaf": [187, 197, 206, 267], "strength": 187, "richardon": 187, "dup_factor_list": 187, "factortool": [187, 190], "dup_": [187, 190], "dmp_": [187, 190], "prod": [187, 194, 206], "z1": [187, 188, 215], "is_field": [187, 188], "quo": [187, 188, 190, 193], "rem": [187, 188, 190, 193], "exquo": [187, 188, 193], "exactquotientfail": [187, 188, 190, 193], "mpz": [187, 188], "of_typ": [187, 188], "z1_sympi": 187, "to_sympi": [187, 188], "from_sympi": [187, 188], "forth": [187, 192], "z_sympi": 187, "z_zz": 187, "coercionfail": [187, 190], "sum_domain": 187, "expressions_sympi": 187, "expressions_dom": 187, "result_dom": 187, "e_dom": 187, "result_sympi": 187, "qq_i": [187, 189], "gaussianinteg": [187, 188], "gaussianrationalfield": [187, 188], "gaussianr": [187, 188], "galoi": [187, 190, 192], "finitefield": [187, 188], "pythonfinitefield": [187, 188], "gmpyfinitefield": [187, 188], "welcom": [187, 213, 265], "realel": [187, 188], "complexel": [187, 188], "mpc": 187, "xr": [187, 195], "zc": 187, "1j": 187, "_mpc_": 187, "realfield": [187, 188], "rr100": 187, "33333333333333333333333333333": 187, "hack": [187, 213, 226], "algebraic_field": [187, 188, 190, 192], "algebraicfield": [187, 188, 190, 192], "sqrt3": 187, "x_dom": 187, "p_expr": [187, 188], "polyel": [187, 188, 190, 194, 195, 197], "p_dom": 187, "unexpand": [187, 196, 206, 229], "xk": [187, 188, 199], "yk": [187, 188], "poly_r": [187, 188], "old_polynomialr": 187, "globalpolynomialr": 187, "polyclass": [187, 188, 193], "yr": [187, 195], "broader": 187, "get_field": [187, 188], "frac_field": [187, 188], "rationalfield": [187, 188], "old_frac_field": [187, 188], "fractionfield": [187, 188], "old_fractionfield": 187, "xf": 187, "yf": 187, "fracfield": [187, 188], "expressiondomain": [187, 188], "elements_sympi": 187, "elements_k": 187, "convert_from": [187, 188], "num_zz": 187, "num_qq": 187, "domainel": [187, 188, 195], "encompass": 187, "all_coeff": [187, 188, 193], "dom": [187, 188, 190, 205], "strang": 187, "hybrid": 187, "unreli": 187, "usefulli": 188, "pythonr": [188, 195], "p_domain": 188, "ez": [188, 223], "get_r": 188, "has_assoc_field": 188, "has_assoc_r": 188, "alg_field_from_poli": [188, 192], "root_index": 188, "almosteq": 188, "cyclotomic_field": [188, 192], "zeta7": 188, "zeta_": 188, "lexord": [188, 193], "from_algebraicfield": 188, "from_complexfield": 188, "from_expressiondomain": 188, "from_expressionrawdomain": 188, "from_ff": 188, "modularinteg": 188, "from_ff_gmpi": 188, "from_ff_python": 188, "from_fractionfield": 188, "from_globalpolynomialr": 188, "from_monogenicfiniteextens": 188, "from_polynomialr": 188, "from_qq_gmpi": 188, "from_qq_python": 188, "from_realfield": 188, "from_zz_gmpi": 188, "from_zz_python": 188, "gcdex": [188, 193], "get_exact": 188, "half_gcdex": [188, 193], "is_pid": 188, "is_r": 188, "is_nonposit": 188, "is_on": [188, 193], "rersiv": 188, "__neg__": 188, "__pos__": 188, "__sub__": 188, "q_domain": 188, "q_expr": 188, "x_domain": 188, "alg": [188, 192, 196], "trait": 188, "is_unit": 188, "__divmod__": 188, "__floordiv__": 188, "__mod__": [188, 192], "simpledomain": 188, "compositedomain": 188, "from_qq": 188, "from_zz": 188, "gmpyinteg": 188, "pythoninteg": 188, "gmpyrationalfield": 188, "pythonrationalfield": 188, "from_gaussianrationalfield": 188, "gaussianel": 188, "gaussiandomain": 188, "qq_python": 188, "zz_python": 188, "z2": 188, "z3": 188, "z4": 188, "from_gaussianinteg": 188, "as_algebraicfield": 188, "orig_ext": 188, "algebraicnumb": [188, 192, 196], "integral_basi": [188, 192], "maximal_ord": [188, 192], "zeta5": 188, "primes_abov": [188, 192], "primeid": [188, 192], "to_alg_num": [188, 192], "legibl": 188, "to_rat": 188, "mpelement": 188, "complexfield": 188, "lc": [188, 190, 193], "domain_or_field": 188, "dmf": 188, "coercibl": 188, "monomialord": [188, 193], "xring": 188, "vring": 188, "sring": [188, 194, 195], "polyr": [188, 189, 190, 195], "factor_list": [188, 193, 272], "add_gen": 188, "drop_to_ground": 188, "monomial_basi": 188, "206": [188, 193], "744": 188, "945": [188, 194], "is_monomi": [188, 193], "const": 188, "coeffcient": [188, 190], "inplac": 188, "shallow": [188, 204], "zero_monom": 188, "fv": 188, "clo": 188, "p64": 188, "qv": 188, "f0": 188, "imul_num": 188, "itercoeff": 188, "itermonom": 188, "iterterm": 188, "leading_expv": 188, "leading_monom": 188, "leading_term": 188, "listcoeff": 188, "listmonom": 188, "listterm": 188, "monom": [188, 193], "strip_zero": 188, "tail_degre": 188, "xfield": 188, "vfield": [188, 247], "sfield": [188, 247], "fracel": [188, 197], "lev": 188, "add_ground": [188, 193], "all_monom": [188, 193], "all_term": [188, 193], "cauchy_lower_bound": 188, "cauchy_upper_bound": 188, "clear_denom": [188, 193], "count_complex_root": 188, "sup": [188, 193, 197, 204, 205], "count_real_root": 188, "deflat": [188, 193], "y_i": [188, 190, 192, 193, 213], "x_j": [188, 190, 193], "degree_list": [188, 193], "eject": [188, 193], "exquo_ground": [188, 193], "factor_list_includ": [188, 193], "from_dict": [188, 193], "from_sympy_list": 188, "gff_list": [188, 193], "homogeneous_ord": [188, 193, 210], "is_cyclotom": [188, 193], "is_ground": [188, 193], "is_homogen": [188, 193], "is_irreduc": [188, 193], "is_linear": [188, 193], "is_mon": [188, 193], "is_quadrat": [188, 193], "is_sqf": [188, 193], "l1_norm": [188, 193], "l2_norm_squar": 188, "max_norm": [188, 193], "mignotte_sep_bound_squar": 188, "mignott": [188, 190], "mul_ground": [188, 193], "pdiv": [188, 193], "pexquo": [188, 193], "pquo": [188, 193], "prem": [188, 193], "quo_ground": [188, 193], "refine_root": [188, 192, 193], "includepr": [188, 190, 193], "sqf_list_includ": [188, 193], "sqf_norm": [188, 193], "sqf_part": [188, 193], "sqr": [188, 193], "sturm": [188, 193], "sub_ground": [188, 193], "to_dict": 188, "to_exact": [188, 193], "to_r": [188, 193], "to_sympy_dict": 188, "to_sympy_list": 188, "to_tupl": 188, "total_degre": [188, 193, 210], "trunc": [188, 193, 196], "frac_unifi": 188, "half_per": 188, "poly_unifi": 188, "gr\u00f6bner": 189, "groebner": [189, 191, 192, 193, 196, 209, 215, 216], "wester": 189, "dispers": [189, 191, 217], "agca": 189, "syzygi": 189, "undocu": 189, "rs_seri": 189, "eqs_to_matrix": 189, "sympy_eqs_to_r": 189, "_solve_lin_si": 189, "_solve_lin_sys_compon": 189, "ddm": 189, "sdm": [189, 190], "adic": [189, 191], "valuat": [189, 213], "subfield": 189, "l0": 190, "focus": 190, "legitim": 190, "uninterest": 190, "bulk": [190, 207], "x_u": 190, "dup__": 190, "densebas": 190, "dmp_lc": 190, "poly_lc": 190, "dmp_tc": 190, "poly_tc": 190, "dmp_ground_lc": 190, "dmp_ground_tc": 190, "dmp_true_lt": 190, "n_1": [190, 215, 217], "n_k": 190, "dmp_degre": 190, "dmp_degree_in": 190, "dmp_degree_list": 190, "dmp_strip": 190, "dmp_valid": 190, "dup_revers": 190, "dmp_copi": 190, "dmp_to_tupl": 190, "dmp_normal": 190, "dmp_convert": 190, "to_domain": 190, "dmp_from_sympi": 190, "dmp_nth": 190, "dmp_ground_nth": 190, "dmp_zero_p": 190, "dmp_zero": 190, "dmp_one_p": 190, "dmp_one": 190, "dmp_ground_p": 190, "dmp_ground": 190, "dmp_negative_p": 190, "dmp_positive_p": 190, "dmp_from_dict": 190, "dmp_to_dict": 190, "dmp_swap": 190, "dmp_permut": 190, "dmp_nest": 190, "dmp_rais": 190, "dmp_deflat": 190, "dmp_multi_defl": 190, "dmp_inflat": 190, "dmp_exclud": 190, "dmp_includ": 190, "dmp_inject": 190, "dmp_eject": 190, "dmp_terms_gcd": 190, "dmp_list_term": 190, "dmp_apply_pair": 190, "dmp_slice": 190, "dup_random": 190, "densearith": 190, "dmp_add_term": 190, "dmp_sub_term": 190, "dmp_mul_term": 190, "dmp_add_ground": 190, "dmp_sub_ground": 190, "dmp_mul_ground": 190, "dmp_quo_ground": 190, "dmp_exquo_ground": 190, "dup_lshift": 190, "dup_rshift": 190, "dmp_ab": 190, "dmp_neg": 190, "dmp_add": 190, "dmp_sub": 190, "dmp_add_mul": 190, "dmp_sub_mul": 190, "dmp_mul": 190, "dmp_sqr": 190, "dmp_pow": 190, "dmp_pdiv": 190, "dmp_prem": 190, "dmp_pquo": 190, "dmp_pexquo": 190, "dmp_rr_div": 190, "dmp_ff_div": 190, "dmp_div": 190, "dmp_rem": 190, "dmp_quo": 190, "dmp_exquo": 190, "dmp_max_norm": 190, "dmp_l1_norm": 190, "dmp_expand": 190, "densetool": 190, "dmp_integr": 190, "dmp_integrate_in": 190, "dmp_diff": 190, "dmp_diff_in": 190, "dmp_eval": 190, "dmp_eval_in": 190, "dmp_eval_tail": 190, "dmp_diff_eval_in": 190, "dmp_trunc": 190, "dmp_ground_trunc": 190, "dup_mon": 190, "dmp_ground_mon": 190, "dup_cont": 190, "dmp_ground_cont": 190, "dup_primit": 190, "dmp_ground_primit": 190, "dup_extract": 190, "dmp_ground_extract": 190, "dup_real_imag": 190, "bivari": [190, 196, 217], "dup_mirror": 190, "dup_scal": 190, "dup_shift": 190, "dup_transform": 190, "dmp_compos": 190, "dup_decompos": 190, "t_m": 190, "r695": 190, "dmp_lift": 190, "dup_sign_vari": 190, "dmp_clear_denom": 190, "k_0": 190, "dmp_revert": 190, "gf_": 190, "justifi": 190, "necess": 190, "u_0": 190, "m_0": [190, 210], "m_n": 190, "gf_crt1": 190, "9215": 190, "9405": 190, "9603": 190, "gf_crt2": 190, "gf_int": 190, "gf_degre": 190, "gf_lc": 190, "gf_tc": 190, "gf_strip": 190, "gf_trunc": 190, "gf_normal": 190, "gf_from_dict": 190, "gf_to_dict": 190, "gf_from_int_poli": 190, "gf_to_int_poli": 190, "gf_neg": 190, "gf_add_ground": 190, "gf_sub_ground": 190, "gf_mul_ground": 190, "gf_quo_ground": 190, "gf_add": 190, "gf_sub": 190, "gf_mul": 190, "gf_sqr": 190, "gf_add_mul": 190, "gf_sub_mul": 190, "gf_expand": 190, "gf_div": 190, "r696": 190, "monagan93": [190, 191], "r697": 190, "gathen99": [190, 191], "gf_rem": 190, "gf_quo": 190, "gf_exquo": 190, "gf_lshift": 190, "gf_rshift": 190, "gf_pow": 190, "gf_pow_mod": 190, "r698": 190, "gf_gcd": 190, "gf_lcm": 190, "gf_cofactor": 190, "gf_gcdex": 190, "eea": 190, "r699": 190, "gf_monic": 190, "gf_diff": 190, "gf_eval": 190, "gf_multi_ev": 190, "gf_compos": 190, "gf_compose_mod": 190, "gf_trace_map": 190, "r700": 190, "gathen92": [190, 191], "gf_random": 190, "gf_irreduc": 190, "gf_irreducible_p": 190, "gf_sqf_p": 190, "gf_sqf_part": 190, "gf_sqf_list": 190, "e_2": [190, 193], "f_j": [190, 207], "gf_sqf": 190, "r701": 190, "geddes92": [190, 191], "gf_qmatrix": 190, "berlekamp": 190, "gf_qbasi": 190, "gf_berlekamp": 190, "gf_zassenhau": 190, "gf_shoup": 190, "gf_factor_sqf": 190, "gf_factor": 190, "e_d": 190, "cantor": 190, "zassenhau": [190, 192], "shoup": [190, 191], "kaltofen": [190, 191], "gathen": [190, 191], "gf_factor_method": 190, "r702": 190, "gf_valu": 190, "2204": 190, "gf_csolv": 190, "congruent": [190, 207, 210], "189": 190, "112": [190, 194], "139": 190, "r703": 190, "ivan": 190, "niven": 190, "zuckerman": 190, "montgomeri": 190, "infeas": [190, 193], "sdm_": 190, "distributedmodul": 190, "sdm_monomial_mul": 190, "sdm_monomial_deg": 190, "f_5": 190, "sdm_monomial_divid": 190, "sdm_lc": 190, "sdm_to_dict": 190, "sdm_from_dict": 190, "dic": 190, "sdm_add": 190, "2f_1": 190, "3f_1": 190, "yf_1": 190, "xf_1": 190, "sdm_lm": 190, "sdm_lt": 190, "sdm_mul_term": 190, "2xy": [190, 266], "4y": [190, 216, 261], "8xy": 190, "2y": [190, 210, 213, 216, 266], "sdm_zero": 190, "sdm_deg": 190, "sdm_from_vector": 190, "sdm_to_vector": 190, "variant": [190, 213, 216], "qg": 190, "remark": [190, 196, 207, 213], "uf": 190, "vg": 190, "zout": 190, "euclidtool": 190, "dmp_half_gcdex": 190, "dmp_gcdex": 190, "dmp_invert": 190, "dmp_euclidean_pr": 190, "dmp_primitive_pr": 190, "exceedingli": 190, "collin": [190, 191], "collins67": [190, 191], "subdomain": 190, "2l": 190, "remainin": 190, "subdetermin": 190, "n_2": [190, 217], "n_": [190, 210], "abnorm": 190, "gamma_i": 190, "brown": [190, 191, 217], "traub": [190, 191], "browntraub71": [190, 191], "brown78": [190, 191], "discoveri": [190, 268], "dmp_inner_subresult": 190, "729": 190, "sre": 190, "dmp_subresult": 190, "dmp_prs_result": 190, "dmp_zz_modular_result": 190, "dmp_zz_collins_result": 190, "dmp_qq_collins_result": 190, "dmp_result": 190, "dmp_discrimin": 190, "dmp_rr_prs_gcd": 190, "cff": [190, 193], "cfg": [190, 193], "dmp_ff_prs_gcd": 190, "dmp_zz_heu_gcd": 190, "r704": 190, "liao95": [190, 191], "dmp_qq_heu_gcd": 190, "dmp_inner_gcd": 190, "dmp_gcd": 190, "dmp_lcm": 190, "dmp_content": 190, "dmp_primit": 190, "dmp_cancel": 190, "dmp_trial_divis": 190, "dmp_zz_mignotte_bound": 190, "dup_zz_hensel_step": 190, "hensel": 190, "r705": 190, "dup_zz_hensel_lift": 190, "f_list": 190, "multifactor": 190, "r706": 190, "dup_zz_zassenhau": 190, "dup_zz_irreducible_p": 190, "eisenstein": 190, "dup_cyclotomic_p": 190, "bradford": 190, "russel": 190, "251": 190, "berlin": 190, "heidelberg": 190, "dup_zz_cyclotomic_poli": 190, "dup_zz_cyclotomic_factor": 190, "r707": 190, "weisstein09": [190, 191], "dup_zz_factor_sqf": 190, "dup_zz_factor": 190, "r708": 190, "dmp_zz_wang_non_divisor": 190, "wang": [190, 191], "eez": 190, "dmp_zz_wang_test_point": 190, "dmp_zz_wang_lead_coeff": 190, "dmp_zz_diophantin": 190, "dmp_zz_wang_hensel_lift": 190, "dmp_zz_wang": 190, "enhanc": [190, 217], "r709": 190, "wang78": [190, 191], "r710": 190, "dmp_zz_factor": 190, "r711": 190, "dmp_ext_factor": 190, "dup_gf_factor": 190, "dmp_factor_list": 190, "dmp_factor_list_includ": 190, "dmp_irreducible_p": 190, "groebnertool": 190, "polyconfig": [190, 193], "f5b": [190, 193], "spoli": 190, "red_groebn": 190, "beckerweispfenning93": 190, "is_groebn": 190, "is_minim": 190, "is_reduc": 190, "fglmtool": 190, "matrix_fglm": 190, "o_to": 190, "o_from": 190, "r712": 190, "fauger": [190, 193], "gianni": [190, 193, 215], "mora": [190, 191, 193, 215], "sdm_spoli": 190, "phantom": 190, "sca": 190, "defn": 190, "sdm_ecart": 190, "ecart": 190, "sdm_nf_mora": 190, "nf": 190, "sdm_groebner": 190, "sugar": [190, 191, 222], "giovini": [190, 191], "polyopt": [190, 194], "build_opt": 190, "polyerror": [190, 193], "basepolynomialerror": 190, "operationnotsupport": 190, "heuristicgcdfail": 190, "homomorphismfail": 190, "isomorphismfail": [190, 192], "extraneousfactor": 190, "evaluationfail": 190, "refinementfail": 190, "notrevers": [190, 193], "notalgebra": 190, "polynomialerror": [190, 193], "unificationfail": [190, 192], "generatorsneed": 190, "computationfail": 190, "exc": 190, "generatorserror": 190, "univariatepolynomialerror": 190, "multivariatepolynomialerror": [190, 193], "polificationfail": 190, "orig": 190, "optionerror": 190, "flagerror": 190, "modulargcd": 190, "modgcd_univari": 190, "monagan00": [190, 191], "modgcd_bivari": 190, "modgcd_multivari": 190, "_modgcd_multivariate_p": 190, "brown71": [190, 191], "degbound": 190, "contbound": 190, "func_field_modgcd": 190, "reconstuct": 190, "z_p": 190, "spuriou": [190, 215], "hoeij04": [190, 191], "scarc": 190, "hsin": 191, "chao": 191, "liao": 191, "fateman": 191, "montreal": 191, "quebec": 191, "canada": 191, "240": [191, 199, 244], "247": [191, 215], "von": [191, 217], "zur": 191, "gerhard": 191, "cambridg": [191, 210], "weisstein": 191, "cyclotomicpolynomi": 191, "1215": 191, "1231": 191, "czapor": 191, "labahn": 191, "monagan": [191, 209], "disco": 191, "721": 191, "kaltofen98": 191, "subquadrat": 191, "223": 191, "1998": [191, 210], "1179": 191, "1197": 191, "shoup95": 191, "397": 191, "shoup91": 191, "cox97": [191, 193], "shea": [191, 193], "ajwa95": 191, "ajwa": 191, "liu": 191, "cites": [191, 209], "ist": [191, 206, 209], "psu": [191, 206, 209], "mycites": 191, "login": 191, "bose03": 191, "bose": 191, "guiver": 191, "multidimension": [191, 228, 253], "giovini91": 191, "bronstein93": [191, 193], "salvi": [191, 194], "kiev": 191, "ukrain": 191, "buchberger01": [191, 193], "theorist": 191, "moreno": 191, "diaz": 191, "freir": 191, "eurocast": 191, "februari": 191, "davenport88": 191, "siret": 191, "tournier": 191, "london": [191, 210], "124": [191, 261], "greuel": 191, "pfister": 191, "atiyah": 191, "macdonald": 191, "142": 191, "1971": [191, 213], "505": 191, "237": 191, "249": 191, "wittkopf": 191, "478": 191, "hoeij": 191, "2004": [191, 210], "297": [191, 193], "304": [191, 193], "wang81": 191, "symsac": 191, "hoeij02": 191, "manwright94": [191, 193], "yiu": 191, "kwong": 191, "franci": 191, "wright": 191, "190347": 191, "190413": 191, "koepf98": [191, 193], "koepf": [191, 199, 209], "vieweg": 191, "abramov71": [191, 193], "abramov": [191, 215], "ussr": 191, "330": 191, "man93": [191, 193], "376": 191, "sciencedirect": 191, "pii": 191, "s0747717183710539": 191, "kapur1994": 191, "deepak": 191, "kapur": 191, "tushar": 191, "saxena": 191, "yang": 191, "dixon": 191, "researchg": [191, 217], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 191, "palancz08": 191, "pal\u00e1ncz": 191, "zaletnyik": 191, "jl": [191, 230], "awang": 191, "ew": 191, "grafarend": 191, "geodet": 191, "geodesi": 191, "225607735_dixon_result": 191, "s_solution_of_systems_of_geodetic_polynomial_equ": 191, "bruce97": 191, "bruce": 191, "randal": 191, "donald": [191, 232], "mundi": 191, "artifici": [191, 200], "intellig": [191, 209, 213, 272], "orlando": 191, "www2": 191, "duke": 191, "donaldlab": 191, "symbolicnumericalcomput": 191, "045": 191, "087": 191, "stiller96": 191, "stiller": 191, "1996": [191, 207, 215, 242], "citeseerx": [191, 206], "viewdoc": [191, 206, 209], "590": 191, "2021": 191, "rep1": [191, 206], "cohen93": [191, 192], "henri": 191, "olga": 192, "tausski": 192, "zimmer": 192, "pohst": 192, "articul": 192, "numberfield": 192, "mathfrak": 192, "regul": 192, "alpha_m": 192, "round_two": 192, "prime_decomp": 192, "prime_valu": 192, "minimal_polynomi": 192, "field_isomorph": 192, "nilrad": 192, "z_k": 192, "zk": 192, "ordinarili": 192, "503": 192, "r713": 192, "r714": 192, "powerbasisel": 192, "ramif": 192, "as_submodul": 192, "bundl": 192, "test_factor": 192, "deliber": 192, "is_inert": 192, "inert": [192, 213], "reduce_anp": 192, "elt": 192, "reduce_alg_num": 192, "field_gen": 192, "just_gen": 192, "reagent": 192, "kummer": 192, "1847": 192, "ueber": 192, "zerlegung": 192, "crell": 192, "r715": 192, "_minpoly_compos": 192, "stall": 192, "alli": 192, "monomorph": 192, "alpha_i": 192, "alpha_n": 192, "lincomb": 192, "primtiiv": 192, "meanwhil": 192, "moduleel": 192, "powerbasi": 192, "submodule_from_matrix": 192, "ancestor": 192, "to_col": 192, "nca": 192, "_mult_tab": 192, "successfulli": 192, "moduleendomorph": 192, "innerendomorph": 192, "endomorphismr": 192, "spec": [192, 193], "i_n": [192, 193, 218], "include_self": 192, "basis_el": 192, "element_from_r": 192, "endomorphism_r": 192, "is_compat_col": 192, "mult_tab": 192, "mult": 192, "closurefailur": 192, "nearest_common_ancestor": 192, "number_field": 192, "power_basis_ancestor": 192, "incom": 192, "halv": 192, "submodule_from_gen": 192, "over_power_basi": 192, "starts_with_un": 192, "hnf_modulu": 192, "whole_submodul": 192, "element_from_anp": 192, "element_from_alg_num": 192, "element_from_poli": 192, "qq_matrix": 192, "basis_element_pullback": 192, "discard_befor": 192, "structureerror": 192, "cohen00": 192, "make_mod_elt": 192, "qq_col": 192, "from_int_list": 192, "is_compat": 192, "reduced_mod_p": 192, "to_ancestor": 192, "anc": 192, "to_par": 192, "to_anp": 192, "inner_endomorph": 192, "event": [192, 217], "find_min_poli": 192, "missingunityerror": 192, "is_int": 192, "get_num_denom": 192, "extract_fundamental_discrimin": 192, "r716": 192, "algintpow": 192, "zeta_pow": 192, "r717": 192, "coeff_search": 192, "supplement_a_subspac": 192, "dmrankerror": 192, "v_n": 192, "w_r": 192, "w_j": 192, "u_j": 192, "r718": 192, "poly_from_expr": 193, "parallel_poly_from_expr": 193, "lt": [193, 238], "mod_invers": 193, "exprtool": [193, 253], "gcd_term": 193, "gcd_list": 193, "lcm_list": 193, "destruct": 193, "2079": 193, "1401": 193, "2715": 193, "6720": 193, "1092": 193, "gff": 193, "check_sqf": 193, "count_root": 193, "nroot": [193, 215], "maxstep": 193, "cleanup": 193, "73205080756888": 193, "73205080756887729352744634151": 193, "ground_root": 193, "nth_power_roots_poli": 193, "r_f": 193, "r_g": 193, "_signsimp": 193, "q_n": 193, "is_zero_dimension": [193, 216], "donal": 193, "230": [193, 215], "ec": 193, "em": 193, "di": 193, "dispersionset": 193, "gp": [193, 213], "free_symbols_in_domain": 193, "from_poli": 193, "get_domain": 193, "get_modulu": 193, "has_only_gen": 193, "vincent": [193, 235], "akrita": 193, "strzebonski": 193, "va": 193, "alkiviadi": 193, "adam": 193, "panagioti": 193, "vigkla": 193, "265": 193, "279": 193, "polnomi": 193, "is_multivari": 193, "is_univari": 193, "ltrim": 193, "rerun": [193, 228], "_only_": 193, "sturmian": 193, "subresultants_qq_zz": 193, "suffix": [193, 230], "_pg": 193, "_amv": 193, "rem_z": 193, "premultipli": 193, "rat_clear_denom": 193, "_ignor": 193, "retract": 193, "same_root": 193, "r0": 193, "set_domain": 193, "set_modulu": 193, "termwis": 193, "fglm": 193, "r719": 193, "horner_schem": 193, "equispac": 193, "viet": 193, "itermonomi": 193, "min_degre": 193, "gib": 193, "monomial_kei": 193, "monomial_count": 193, "gradedlexord": 193, "reversedgradedlexord": 193, "clear_cach": 193, "_get_interv": 193, "165": [193, 217, 235], "169": 193, "eval_approx": 193, "evalf_r": 193, "eval_r": 193, "69629": 193, "71318": 193, "805": 193, "3275": 193, "65536": [193, 196, 197], "414645": 193, "131072": 193, "6545": 193, "104755": 193, "2097152": 193, "6634255": 193, "_all_root": 193, "use_cach": 193, "_complexes_index": 193, "_complexes_sort": 193, "_count_root": 193, "_ensure_complexes_init": 193, "_ensure_reals_init": 193, "_eval_is_imaginari": 193, "_get_complex": 193, "_get_complexes_sqf": 193, "currentfactor": 193, "_get_real": 193, "_get_reals_sqf": 193, "_get_root": 193, "_indexed_root": 193, "_new": 193, "_postprocess_root": 193, "_preprocess_root": 193, "heroic": [193, 215], "_real_root": 193, "_reals_index": 193, "_reals_sort": 193, "_refine_complex": 193, "ay": [193, 210, 238, 272], "_roots_trivi": 193, "_set_interv": 193, "861136": 193, "86113631159405258": 193, "polyroot": 193, "quintic": [193, 215], "unread": [193, 233], "casu": 193, "irreducibili": 193, "unsolvablefactorerror": [193, 215], "inexpress": 193, "unsolv": [193, 216], "r720": 193, "cubic_funct": 193, "trigonometric_": 193, "28and_hyperbol": 193, "29_method": 193, "specialpoli": 193, "swinnerton_dyer_poli": 193, "swinnerton": 193, "dyer": 193, "symmetric_poli": 193, "random_poli": 193, "gegenbau": [193, 197], "partfrac": [193, 199], "undertermin": 193, "_w": [193, 204], "apart_list": 193, "assemble_partfrac_list": 193, "bunch": 193, "pfd": 193, "r721": 193, "partial_list": 193, "reassembl": 193, "pfda": 193, "r722": 193, "r723": 193, "r724": 193, "r725": 193, "r726": 193, "r727": 193, "r728": 193, "r729": 193, "widen": 194, "ring_seri": 194, "rs_sin": 194, "166666666666667": 194, "puiseux": 194, "rs_co": 194, "rs_tan": 194, "took": [194, 206], "eleg": [194, 196], "rs_exp": 194, "everyon": 194, "blazingli": 194, "ms": 194, "promin": 194, "gradual": 194, "rs_": 194, "rs_log": 194, "rs_lambertw": 194, "rs_atan": 194, "arctang": 194, "rs_asin": 194, "_tan1": 194, "rs_cot": 194, "rs_cos_sin": 194, "rs_atanh": 194, "rs_sinh": 194, "rs_cosh": 194, "rs_tanh": 194, "rs_hadamard_exp": 194, "inver": 194, "rs_mul": 194, "rs_squar": 194, "rs_pow": 194, "rs_series_invers": 194, "rs_series_revers": 194, "a_kx_k": 194, "ar_i": 194, "ar_": 194, "ae": 194, "rs_trunc": 194, "rs_nth_root": 194, "160249952256379": 194, "44224957030741": 194, "rs_sub": 194, "rs_diff": 194, "rs_integr": 194, "rs_newton": 194, "rs_compose_add": 194, "r730": 194, "bostan": 194, "flajolet": 194, "schost": 194, "4579": 194, "institut": 194, "nation": 194, "recherch": 194, "informatiqu": 194, "automatiqu": 194, "rs_is_puiseux": 194, "rs_puiseux": 194, "rs_puiseux2": 194, "rs_series_from_list": 194, "concur": 194, "rs_fun": 194, "_tan": 194, "_nth": 194, "_root": 194, "_fun": 194, "mul_xin": 194, "pow_xin": 194, "_raw": 195, "unkown": 195, "eqs_r": 195, "eqs_coeff": 195, "eqs_rh": 195, "critiqu": 196, "wester1999": 196, "systemat": 196, "153": 196, "\u2124": [196, 197, 216, 273], "unm": 196, "driver": [197, 229], "adequ": 197, "emptyprint": 197, "_sympystr": 197, "mathml": 197, "inconveni": 197, "_print_": 197, "expr_class": 197, "hierarchi": [197, 217], "_print_rat": 197, "_print_numb": 197, "_print_atom": 197, "_print_bas": 197, "print_latex": 197, "mylatexprint": 197, "_print_deriv": 197, "print_my_latex": 197, "modop": 197, "subcompon": 197, "outermost": [197, 205, 209, 221], "modopmodewrong": 197, "modopnestedwrong": 197, "modopsettingswrong": 197, "subobject": 197, "infrastructur": [197, 214], "printer_exampl": 197, "set_global_set": 197, "stringpict": 197, "pretty_symbolog": 197, "prettyform": 197, "hline": 197, "vline": 197, "ascii": [197, 259], "_pretti": 197, "use_unicode_sqrt_char": 197, "root_not": 197, "mat_symbol_styl": 197, "prettifi": 197, "unambigu": [197, 213, 238], "bold": 197, "c89codeprint": 197, "print_ccod": 197, "tgamma": 197, "known_functions_c89": 197, "known_functions_c99": 197, "fmax": 197, "fmin": 197, "lgamma": 197, "indent_cod": 197, "functionclass": [197, 236], "cfunction_format": 197, "derefer": 197, "dereferenc": 197, "symbols_to_declar": 197, "not_supported_funct": 197, "code_text": 197, "m_sqrt2": 197, "math_macro": 197, "m_sqrt2l": 197, "cxx": 197, "cxx98codeprint": 197, "print_rcod": 197, "rcode": 197, "known_funct": 197, "_rcode": 197, "rfunction_str": 197, "rfunction_format": 197, "ifels": 197, "tweak": [197, 215], "type_map": 197, "name_mangl": 197, "mangl": 197, "floor1": 197, "floor2": 197, "print_fcod": 197, "_fcode": 197, "conjg": 197, "32768": 197, "7182818284590452d0": 197, "1415926535897932d0": 197, "718281828459045235360287d0": 197, "141592653589793238462643d0": 197, "869604401089358618834491d0": 197, "mygamma": 197, "allow_unknown_funct": 197, "coshintegr": 197, "cosintegr": 197, "expintegralei": 197, "factorialpow": 197, "heavisidetheta": 197, "sinhintegr": 197, "sinintegr": 197, "arccosh": 197, "arccoth": 197, "arcsinh": 197, "arctanh": 197, "dirichleteta": 197, "gegenbauerc": 197, "hypergeometricpfq": 197, "sphericalbesselj": 197, "logintegr": 197, "lucasl": 197, "riemann_xi": 197, "riemannxi": 197, "stieltjesgamma": 197, "sphericalbess": 197, "mcodeprint": 197, "_mcode": 197, "mcode": 197, "maplecodeprint": 197, "_mapl": 197, "maple_cod": 197, "print_maple_cod": 197, "javascriptcodeprint": 197, "_javascript": 197, "js_function_str": 197, "known_fcns_src1": 197, "known_fcns_src2": 197, "conj": 197, "juliacodeprint": 197, "_julia": 197, "harmless": [197, 268], "cosmet": 197, "pw": 197, "existing_julia_fcn": 197, "coshint": 197, "cosint": 197, "sinhint": 197, "sinint": 197, "bincoeff": 197, "logint": 197, "gammaln": 197, "octavecodeprint": 197, "_octav": 197, "recip": [197, 235], "powf": 197, "signum": 197, "rustcodeprint": 197, "_rust_cod": 197, "7_f64": 197, "_aesara": 197, "tensorvari": 197, "floatx": 197, "squeez": 197, "dim_handl": 197, "gtkmathview": 197, "widget": 197, "print_gtk": 197, "libgtkmathview": 197, "start_view": 197, "_lambdacod": 197, "accepted_latex_funct": 197, "parenthesize_sup": 197, "fold_frac_pow": 197, "fold_func_bracket": 197, "fold_short_frac": 197, "inv_trig_styl": 197, "itex": 197, "ln_notat": 197, "long_frac_ratio": 197, "mat_delim": 197, "mat_str": 197, "mul_symbol": 197, "symbol_nam": 197, "gothic_re_im": 197, "decimal_separ": 197, "diff_oper": 197, "smallmatrix": [197, 266], "amsmath": 197, "fracton": 197, "semicolon": 197, "monospac": 197, "mathtt": 197, "mathml2": 197, "mathmlprinterbas": 197, "mathmlcontentprint": 197, "mathmlpresentationprint": 197, "chapter4": 197, "_mathml_cont": 197, "mathml_tag": 197, "chapter3": 197, "_mathml_present": 197, "utf": 197, "mul_symbol_mathml_numb": 197, "xb7": 197, "print_mathml": [197, 271], "mrow": 197, "mpmathprint": 197, "fully_qualified_modul": 197, "print_python": 197, "textual": 197, "reprprint": 197, "_sympyrepr": 197, "reprifi": 197, "sympy_integ": 197, "displayhook": [197, 228], "pprint_nod": 197, "nb2": 197, "print_nod": 197, "asssumpt": 197, "determinisit": 197, "backtrac": 197, "print_tre": 197, "outputbuff": 197, "dvioption": 197, "outputtexfil": 197, "extra_preambl": 197, "latex_set": 197, "postscript": 197, "tex": 197, "eulervm": 197, "sty": 197, "debian": 197, "ubuntu": 197, "unset": [197, 209], "gimp": 197, "evinc": 197, "kdvi": 197, "xdvi": 197, "gracefulli": [197, 221], "generet": 197, "bytesio": 197, "usepackag": 197, "amsfont": 197, "renewcommand": 197, "popen": 197, "phidd": 197, "bitmap": 197, "split_super_sub": 197, "var_sub1__sup_sub2": 197, "assignmenterror": 197, "bitwiseand": 197, "bitwiseor": 197, "bitwisexor": 197, "precedence_valu": 197, "kroneckerproduct": 197, "negativeinfin": 197, "tensadd": [197, 223], "tensmul": [197, 223], "precedence_funct": 197, "precedence_float": 197, "precedence_fracel": 197, "precedence_integ": 197, "precedence_mul": 197, "precedence_polyel": 197, "precedence_r": 197, "unevaluatedexpr": [197, 267], "precedence_unevaluatedexpr": 197, "databas": [197, 207], "pretty_use_unicod": 197, "pretty_try_use_unicod": 197, "xstr": 197, "greek_lett": 197, "digit_2txt": 197, "ONE": 197, "seven": 197, "symb_2txt": 197, "parenthesi": [197, 221], "\u2080": 197, "\u2081": 197, "\u2082": 197, "\u2083": 197, "\u2084": 197, "\u2085": 197, "\u2086": 197, "\u2087": 197, "\u2088": 197, "\u2089": 197, "\u2090": 197, "\u1d66": 197, "\u1d6a": 197, "\u2091": 197, "\u1d67": 197, "\u2095": 197, "\u1d62": 197, "\u2096": 197, "\u2097": 197, "\u2098": 197, "\u2099": 197, "\u2092": 197, "\u209a": 197, "\u1d69": 197, "\u1d63": 197, "\u1d68": 197, "\u209b": 197, "\u209c": 197, "\u1d64": 197, "\u1d65": 197, "\u2093": 197, "\u2070": 197, "\u00b9": 197, "\u00b2": 197, "\u00b3": 197, "\u2074": 197, "\u2075": 197, "\u2076": 197, "\u2077": 197, "\u2078": 197, "\u2079": 197, "\u2071": 197, "\u207f": 197, "xobj": 197, "vobj": 197, "hobj": 197, "vf": 197, "\u00bd": 197, "\u2153": 197, "\u00bc": 197, "\u2155": 197, "\u2159": 197, "\u215b": 197, "\u2154": 197, "\u2156": 197, "\u00be": 197, "\u2157": 197, "\u215c": 197, "\u2158": 197, "\u215a": 197, "\u215d": 197, "\u215e": 197, "xsym": 197, "symbolog": 197, "atoms_t": 197, "\u2102": [197, 273], "emptysequ": [197, 203], "exp1": 197, "\u2115": 197, "\u2115\u2080": 197, "\u211d": [197, 273], "symmetricdiffer": [197, 216], "pretty_atom": 197, "atom_nam": 197, "pretty_symbol": 197, "symb_nam": 197, "bold_nam": 197, "stylis": 197, "_print_meijerg": 197, "_print_hyp": 197, "jurjen": 197, "bo": 197, "hate": 197, "spammer": 197, "pietjepuk314": 197, "oc": [197, 247], "oohai": 197, "gedg": 197, "email": 197, "my": [197, 261], "mun": 197, "terminal_str": 197, "baselin": 197, "leftslash": 197, "slash": [197, 228], "paren": 197, "ifascii_nougli": 197, "line_break": 197, "ugli": 197, "terminal_width": 197, "wider": 197, "maxdepth": 197, "labelfunc": 197, "digraph": [197, 235, 271], "rankdir": [197, 271], "_sparse_": 198, "flavor": 198, "________": [198, 217, 235], "x\u2080": 198, "greatli": 198, "numbered_symbol": [198, 209, 213, 235], "postprocessor": [198, 209], "reduced_expr": [198, 209], "formalpowerseri": 199, "coeff_bel": 199, "formalpowerseriescompos": 199, "r731": 199, "comtet": 199, "loui": 199, "reidel": 199, "1974": 199, "720": [199, 213, 235], "formalpowerseriesinvers": 199, "r732": 199, "upto": [199, 204, 213], "formalpowerseriesproduct": 199, "rational_algorithm": 199, "compute_fp": 199, "hyper_algorithm": 199, "omposit": 199, "bell_seq": 199, "finiteformalpowerseri": 199, "rational_independ": 199, "ra": 199, "admiss": [199, 202], "r733": 199, "r734": 199, "simpled": 199, "exp_r": 199, "explik": 199, "hyper_r": 199, "rsolve_hypergeometr": 199, "r735": 199, "r736": 199, "solve_d": 199, "fourierseri": 200, "scalex": 200, "shiftx": 200, "sigma_approxim": 200, "gibb": 200, "bigl": 200, "bigr": 200, "lanczo": 200, "r737": 200, "gibbs_phenomenon": 200, "r738": 200, "sawtooth": 200, "bn": 200, "r739": 200, "limitseq": 202, "difference_delta": 202, "r740": 202, "differencedelta": 202, "limit_seq": [202, 204], "safeguard": 202, "r741": 202, "kauer": 202, "seqper": 203, "seqformula": 203, "seqbas": 203, "coeff_mul": 203, "find_linear_recurr": 203, "gfvar": 203, "seqadd": 203, "seqmul": 203, "_mul": 203, "recursiveseq": 203, "fib": 203, "invok": [204, 228, 229], "workhors": 204, "succ": [204, 217], "asymp": 204, "exposit": 204, "gloss": 204, "wsym": 204, "test_rewrite1": 204, "build_expression_tre": 204, "mrv_leadterm": 204, "e0": 204, "calculate_seri": 204, "limitinf": 204, "leadsimp": 204, "constantli": 204, "subsset": 204, "mrv_max1": 204, "mrv_max3": 204, "expsf": 204, "expsg": 204, "expsboth": 204, "o2": 204, "do_sub": 204, "r742": 204, "7048138294": 204, "7182818285": 204, "6349839002": 204, "6449340668": 204, "shank": 204, "6881721793": 204, "6931396564": 204, "6931471806": 204, "6931471805599453094172321215": 204, "r743": 204, "residue_theorem": 204, "neighborhood": 205, "rim": 205, "affirm": 205, "infimum": 205, "is_clos": 205, "closed": 205, "is_disjoint": 205, "r744": 205, "disjoint_set": 205, "is_open": 205, "is_proper_subset": 205, "is_proper_superset": 205, "left_open": 205, "is_superset": 205, "isdisjoint": 205, "issubset": 205, "issuperset": 205, "fancyset": 205, "lebesgu": 205, "r745": 205, "power_set": 205, "symmetric_differ": 205, "r746": 205, "right_open": 205, "mpi": 205, "r747": 205, "interval_": 205, "as_rel": 205, "is_left_unbound": 205, "is_right_unbound": 205, "r748": 205, "r749": 205, "union_": 205, "28set_theori": 205, "r750": 205, "intersection_": 205, "coin": [205, 217], "r751": 205, "cartesian_product": 205, "is_iter": 205, "r752": 205, "complementset": 205, "r753": 205, "disjoint_union": 205, "r754": 205, "empty_set": 205, "r755": 205, "universal_set": 205, "flambda": 205, "square_iter": 205, "base_set": 205, "cartesiancomplexregion": 205, "polarcomplexregion": 205, "unit_disk": 205, "upper_half_unit_disk": 205, "a_interv": 205, "b_interv": 205, "from_real": 205, "pset": 205, "rset": 205, "thetaset": 205, "upper_half_plan": 205, "normalize_theta_set": 205, "r756": 205, "r757": 205, "axiom_of_power_set": 205, "varnoth": 205, "sin_sol": 205, "r758": 205, "element_": 205, "tr0": 206, "tr1": 206, "tr2": 206, "tr2i": 206, "tr3": 206, "tr4": 206, "tr5": 206, "tr6": 206, "tr7": 206, "tr8": 206, "tr9": 206, "tr10": 206, "tr10i": 206, "tr11": 206, "tr12": 206, "tr12i": 206, "tr13": 206, "trmorri": 206, "tr14": 206, "tr15": 206, "tr16": 206, "tr22": 206, "tr111": 206, "ctr1": 206, "ctr4": 206, "rl1": 206, "rl2": 206, "deem": 206, "932": 206, "016": 206, "serendipit": 206, "dead": 206, "newa": 206, "lucki": 206, "sqt": 206, "_tr56": 206, "un": [206, 207], "r759": 206, "morri": 206, "27s_law": 206, "trpower": 206, "r760": 206, "list_of_trigonometric_ident": 206, "reduction_formula": 206, "ctr2": 206, "ctr3": 206, "r761": 206, "657": 206, "2478": 206, "dimitar": 206, "vlahovski": 206, "technolog": 206, "xiuqin": 206, "zhong": 206, "zhenb": 206, "zeng": 206, "1169": 206, "1177": 206, "sosmath": 206, "trig5": 206, "symplifi": [207, 209], "roach1996": 207, "roach1997": 207, "p_q": 207, "reachabl": [207, 217], "f_q": 207, "undo": [207, 272], "whenc": 207, "game": 207, "twofold": 207, "incongru": 207, "wlog": 207, "alpha_r": 207, "beta_r": 207, "blindli": 207, "messi": 207, "k_u": 207, "l_v": 207, "k_j": 207, "c_w": 207, "r_j": 207, "l_u": 207, "res_": 207, "delta_i": 207, "add_formula": 207, "addb": 207, "sum_0": 207, "test_hyperexpand": 207, "test_formula": 207, "typo": 207, "suboptim": 207, "imath": 207, "b1prime": 207, "vital": [207, 217], "308": 207, "nthroot": 208, "kroneckersimp": 208, "besselsimp": 208, "hypersimilar": 208, "epath": 208, "hongguang": [208, 253], "fu": [208, 209, 253], "unmodifi": 209, "my_measur": 209, "boolian": 209, "max_len": 209, "surd": 209, "strigonometr": 209, "399": 209, "rational_convers": 209, "base10": 209, "6004799503160655": 209, "nfloat": 209, "eq_x": 209, "max_term": 209, "polish": 209, "expand_power_bas": 209, "rcollect": 209, "analyz": [209, 222], "r762": 209, "pearc": 209, "163": 209, "6984": 209, "trigsimp_groebn": 209, "bb1": 209, "be1": 209, "bb2": 209, "be2": 209, "bei": 209, "max_it": 209, "unrad": [209, 215], "r763": 209, "ibm": 209, "fagin": 209, "symb85": 209, "r764": 209, "cybertest": 209, "opt_sub": 209, "as_unevaluated_bas": 209, "hyperegeometr": 209, "epathtool": 209, "ebnf": 209, "za": [209, 217], "xml": 209, "xpath": 209, "hasattr": [209, 231], "diophantu": 210, "mathematician": [210, 216], "citi": 210, "alexandria": 210, "father": 210, "hi": 210, "arithmetica": 210, "a_1x_1": 210, "a_2x_2": 210, "a_nx_n": 210, "bxy": 210, "cy": 210, "dxy": 210, "eyz": 210, "fzx": 210, "pythagorean": 210, "3y": 210, "4ac": 210, "9369318": 210, "920": 210, "5y": 210, "BY": 210, "t4": 210, "t5": 210, "providean": 210, "eqyptian": 210, "thilinaatsympi": 210, "andreescu": 210, "titu": 210, "andrica": 210, "dorin": 210, "cucurezeanu": 210, "ion": 210, "diophantineequ": 210, "alpertron": 210, "20160323033111": 210, "jpr2718": 210, "ax2p": 210, "permute_sign": [210, 235], "signed_permut": [210, 235], "_dict": 210, "r765": 210, "r766": 210, "pell": 210, "lmm": 210, "r767": 210, "393": 210, "13y": 210, "986": 210, "49299": 210, "1570": 210, "robertson": 210, "20160323033128": 210, "r768": 210, "nitaj": 210, "r769": 210, "numbertheori": 210, "r770": 210, "r771": 210, "676": 210, "884": 210, "fxz": 210, "3xy": 210, "r772": 210, "fxy": 210, "gyz": 210, "hxz": 210, "r773": 210, "cremona": 210, "rusin": 210, "2x_": 210, "m4": 210, "general_sum_of_squar": 210, "8m": 210, "r774": 210, "2345": 210, "proofwiki": 210, "integer_as_sum_of_three_squar": 210, "general_sum_of_even_pow": 210, "1729": 210, "stopiter": 210, "r775": 210, "44542": 210, "207": 210, "schorn": 210, "3456": 210, "1294585930293": 210, "2161": 210, "1137796": 210, "r776": 210, "evenli": 210, "var_t": 210, "r777": 210, "ur": 210, "dv": 210, "vr": 210, "r778": 210, "r779": 210, "nigel": 210, "y_0": [210, 213], "4x": [210, 216, 261], "5x": 210, "r780": 210, "r781": 210, "eprint": 210, "nottingham": 210, "uk": 210, "kvxefz87": 210, "r782": 210, "cuhk": 210, "hk": 210, "wkshum": 210, "404": 210, "r783": 210, "mordel": 210, "r784": 210, "r785": 210, "r786": 210, "r787": 210, "legrang": 210, "csusm": 210, "aitken_html": 210, "symbols_seq": 210, "dict_iter": 210, "r788": 210, "r789": 210, "inhomogen": [210, 213, 215], "r790": 210, "thue": 210, "riccati": 211, "pde": [211, 213], "deutil": [211, 213, 214], "linear_eq_to_matrix": [211, 213], "transolv": 211, "solve_rational_inequ": 212, "solve_poly_inequ": 212, "reduce_rational_inequ": 212, "reduce_abs_inequ": 212, "reduce_inequ": 212, "solve_univariate_inequ": [212, 216], "solvifi": [212, 216], "autodetect": [213, 214], "ode_ord": [213, 214, 215], "best_hint": 213, "all_integr": [213, 214], "_integr": [213, 214], "unevaluat": 213, "test_od": 213, "ode_": 213, "hintnam": [213, 214], "classify_sysod": 213, "ode_hintnam": 213, "tough": 213, "nth_linear_homogeneous_constant_coeff_integr": 213, "nth_linear": 213, "indep": 213, "indep_div_dep": 213, "undetermined_coeffici": 213, "_best": 213, "nth_algebraic_integr": 213, "separable_integr": 213, "1st_exact_integr": 213, "1st_linear_integr": 213, "bernoulli_integr": 213, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 213, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 213, "nth_linear_constant_coeff_variation_of_parameters_integr": 213, "solve_for_func": [213, 214], "homogeneouscoeffsubsdepdivindep": 213, "homogeneouscoeffsubsindepdivdep": 213, "varepsilon": 213, "genform": [213, 214], "starrett": 213, "symbolnam": 213, "startnumb": 213, "endnumb": 213, "renumb": 213, "absorpt": 213, "assist": 213, "2nd_hypergeometric_integr": 213, "almost_linear_integr": 213, "linear_coefficients_integr": 213, "separable_reduced_integr": 213, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 213, "liouville_integr": 213, "2nd_nonlinear_autonomous_conserv": 213, "2nd_nonlinear_autonomous_conserved_integr": 213, "newconst": 213, "ode_sol_simpl": 213, "trysolv": 213, "sola": 213, "solb": 213, "listofsolut": 213, "ode_problem": 213, "firstexact": 213, "exact_differential_equ": 213, "tenenbaum": 213, "dover": 213, "1963": 213, "homogeneouscoeffbest": 213, "ode_1st_homogeneous_coeff_best_integr": 213, "homogeneous_differential_equ": 213, "firstlinear": 213, "linear_differential_equ": 213, "first_order_equ": 213, "rationalriccati": 213, "atleast": 213, "riccati_equ": 213, "thieu": 213, "vo": 213, "www3": [213, 242], "risc_5387": 213, "phdthesisthieu": 213, "secondlinearairi": 213, "secondlinearbessel": 213, "math24": 213, "bernoulli_differential_equ": 213, "goldstein": 213, "braun": 213, "maplesoft": 213, "aspx": 213, "odeadvisor": 213, "riccatispeci": 213, "__________________": 213, "eqworld": 213, "ipmnet": 213, "ru": 213, "ode0106": 213, "ode0123": 213, "nthlinearconstantcoeffhomogen": 213, "nth_linear_constant_coeff_homogeneous_integr": 213, "nonhomogeneous_equation_with_constant_coeffici": 213, "nthlinearconstantcoeffundeterminedcoeffici": 213, "method_of_undetermined_coeffici": 213, "221": 213, "nthlinearconstantcoeffvariationofparamet": 213, "cramer": 213, "variation_of_paramet": 213, "planetmath": 213, "variationofparamet": 213, "nthlineareulereqhomogen": 213, "equidimension": 213, "nth_linear_euler_eq_homogeneous_integr": 213, "sollist": 213, "93euler_equ": 213, "bender": 213, "orszag": 213, "scientist": 213, "nthlineareulereqnonhomogeneousvariationofparamet": 213, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 213, "nthalgebra": 213, "nthorderreduc": 213, "caught": 213, "fault": 213, "almostlinear": 213, "first_linear": 213, "joel": 213, "mose": 213, "stormi": 213, "decad": 213, "august": [213, 232], "558": 213, "linearcoeffici": 213, "separablereduc": 213, "liegroup": 213, "ds": 213, "secondhypergeometr": 213, "2f1": 213, "1f1": 213, "0f1": 213, "liouvillian": 213, "pfq": 213, "chan": 213, "cheb": 213, "terrab": 213, "ode_1st_power_seri": 213, "travi": [213, 228], "walker": 213, "ode_2nd_power_series_ordinari": 213, "lamar": 213, "seriessolut": 213, "simmon": 213, "176": 213, "ode_2nd_power_series_regular": 213, "lie_heuristic_abaco1_simpl": 213, "duart": 213, "da": 213, "mota": 213, "lie_heuristic_abaco1_product": 213, "roch": 213, "lie_heuristic_bivari": 213, "329": 213, "lie_heuristic_chi": 213, "lie_heuristic_abaco2_similar": 213, "lie_heuristic_function_sum": 213, "lie_heuristic_abaco2_unique_unknown": 213, "lie_heuristic_abaco2_unique_gener": 213, "lie_heuristic_linear": 213, "gy": 213, "bh": 213, "impract": 213, "val_inf": 213, "ybar": 213, "numa": 213, "dena": 213, "numi": 213, "deni": 213, "sol1": 213, "sol2": 213, "part_sol": 213, "haaheim": 213, "gensol": 213, "_linear_2eq_order1_type6": 213, "_linear_2eq_order1_type7": 213, "fgp": 213, "ag": 213, "bg": 213, "linear_ode_to_matrix": 213, "odeordererror": 213, "odenonlinearerror": 213, "eqs_mat": 213, "r791": 213, "matrix_differential_equ": 213, "canonical_od": 213, "canonical_eq": 213, "canonical_system": 213, "linodesolve_typ": 213, "type1": 213, "type2": 213, "type3": 213, "type4": 213, "type5": 213, "type6": 213, "type_of_equ": 213, "a_t": 213, "a_non_commut": 213, "matrix_exp_jordan_form": 213, "expj": 213, "matrix_exp": 213, "defect": 213, "p_invers": 213, "r792": 213, "defective_matrix": 213, "r793": 213, "r794": 213, "jordan_normal_form": 213, "comupt": 213, "r795": 213, "r796": 213, "matrix_exponenti": 213, "follw": 213, "antiderv": 213, "subscheck": 213, "system_info": 213, "sol_vector": 213, "sol_vector_evalu": 213, "_nonlinear_2eq_order1_type1": 213, "_nonlinear_2eq_order1_type2": 213, "_nonlinear_2eq_order1_type3": 213, "autonom": 213, "_nonlinear_2eq_order1_type4": 213, "_nonlinear_2eq_order1_type5": 213, "clairaut": 213, "envelop": 213, "_nonlinear_3eq_order1_type1": 213, "enspac": [213, 216], "sysod": 213, "sode0401": 213, "_nonlinear_3eq_order1_type2": 213, "sode0402": 213, "_nonlinear_3eq_order1_type3": 213, "sode0404": 213, "_nonlinear_3eq_order1_type4": 213, "sode0405": 213, "_nonlinear_3eq_order1_type5": 213, "sode0406": 213, "_handle_integr": 213, "gather": 213, "unhind": 213, "wolphramalpha": 213, "detool": 213, "hint_integr": 213, "alphanumer": 213, "hinder": 213, "matching_hint": 213, "matchdict": 213, "1st_homogeneous_coeff": 213, "your_hint": 213, "xfail": [213, 226, 228], "fun": [214, 265], "uxt": 214, "uxi": 214, "solvefun": 214, "test_pd": 214, "pde_hintnam": 214, "ux": 214, "uy": 214, "allhint": 214, "1st_linear_constant_coeff_homogen": 214, "_preprocess": 214, "inabl": 214, "_xi_1": 214, "viktor": 214, "grigoryan": 214, "124a": 214, "substack": 214, "1st_linear_constant_coeff_integr": 214, "du": 214, "inspir": [214, 268], "pde_hint": 214, "checksol": 215, "ect": 215, "elim": 215, "dicontinu": 215, "052": 215, "cov": 215, "pval": 215, "xval": 215, "rsolv": 215, "solve_linear": 215, "solve_linear_system": 215, "overdetermin": [215, 216], "msymbol": 215, "degener": [215, 216], "solve_linear_system_lu": 215, "solve_undetermined_coeff": 215, "equ": 215, "obligatori": 215, "19287309935246": 215, "27844411169911": 215, "73908513321516064165531208767387340401341175890076": 215, "steep": 215, "39267e": 215, "1684e": 215, "588469032184": 215, "315": 215, "730061685774": 215, "46792545969349058": 215, "inconclus": 215, "init": 215, "dissimilar": 215, "v_0": 215, "n_m": 215, "v_m": 215, "rsolve_poli": 215, "rsolve_ratio": 215, "r797": 215, "levelt": 215, "290": [215, 244], "296": 215, "r798": 215, "r799": 215, "revis": 215, "r800": 215, "289": 215, "alembertian": 215, "r801": 215, "r802": 215, "polysi": 215, "solve_triangul": 215, "kalkbrenn": 215, "patrizia": 215, "teo": 215, "aaecc": 215, "minima": 216, "conditionset": [216, 217, 273], "productset": 216, "imageset": [216, 273], "complexregion": 216, "uncount": 216, "bizarr": 216, "her": 216, "sol_f": 216, "solveset_r": 216, "solveset_complex": 216, "methodolog": [216, 265], "_solve_real_trig": 216, "invert_r": 216, "invert_complex": 216, "_solve_rad": 216, "_solve_ab": 216, "_solve_as_r": 216, "_solve_as_poly_r": 216, "_solve_as_poly_complex": 216, "_solve_as_poli": 216, "gsoc": 216, "2014": [216, 217], "iamit": 216, "2948": 216, "6659": 216, "7523": 216, "sibx0afl3q": 216, "9696": 216, "27s_theorem": 216, "inftyright": 216, "nright": 216, "0right": 216, "domain_check": 216, "3z": 216, "9z": 216, "nonlinearerror": 216, "4z": 216, "cccc": 216, "eq3": 216, "eq4": 216, "391": 216, "_solve_system": 216, "_solve_using_known_valu": 216, "_transolv": 216, "_tsolv": 216, "tsolv": 216, "outright": 216, "tractabl": 216, "interf": 216, "add_typ": 216, "_is_exponenti": 216, "new_eq": 216, "_solve_exponenti": 216, "_is_class": 216, "_solve_class": 216, "_solve_expo": 216, "9x": 216, "solve_expo": 216, "log_b": 216, "_solve_logarithm": 216, "solve_log": 216, "_is_logarithm": 216, "prebuilt": 217, "finiterv": 217, "varianc": 217, "dice": 217, "continuousrv": 217, "continuousdistributionhandmad": 217, "dist": 217, "discreterv": 217, "discretedistributionhandmad": 217, "pmf": 217, "finitedistributionhandmad": 217, "discreteuniform": 217, "randomsymbol": 217, "r803": 217, "discrete_uniform_distribut": 217, "r804": 217, "discreteuniformdistribut": 217, "d6": 217, "diedistribut": 217, "toss": 217, "r805": 217, "bernoulli_distribut": 217, "r806": 217, "bernoullidistribut": 217, "numeb": 217, "unfair": 217, "r807": 217, "coin_flip": 217, "binomialdistribut": 217, "r808": 217, "binomial_distribut": 217, "r809": 217, "betabinomi": 217, "r810": 217, "r811": 217, "betabinomialdistribut": 217, "popul": 217, "marbl": 217, "r812": 217, "hypergeometric_distribut": 217, "r813": 217, "hypergeometricdistribut": 217, "700000000000000": 217, "r814": 217, "rademacher_distribut": 217, "r815": 217, "geometric_distribut": 217, "r816": 217, "geometricdistribut": 217, "r817": 217, "hermite_distribut": 217, "poisson": 217, "r818": 217, "poisson_distribut": 217, "r819": 217, "poissondistribut": 217, "r820": 217, "logarithmic_distribut": 217, "r821": 217, "logarithmicdistribut": 217, "negativebinomi": 217, "r822": 217, "negative_binomial_distribut": 217, "r823": 217, "negativebinomialdistribut": 217, "skellam": 217, "mu1": 217, "mu2": 217, "mu_1": 217, "mu_2": 217, "i_k": 217, "r824": 217, "skellam_distribut": 217, "yulesimon": 217, "yule": 217, "simon": 217, "r825": 217, "93simon_distribut": 217, "8100": 217, "r826": 217, "zeta_distribut": 217, "cdf": 217, "r827": 217, "arcsine_distribut": 217, "benini": 217, "r828": 217, "benini_distribut": 217, "r829": 217, "v8": 217, "beninidistribut": 217, "r830": 217, "beta_distribut": 217, "r831": 217, "betadistribut": 217, "betanoncentr": 217, "noncentr": 217, "r832": 217, "noncentral_beta_distribut": 217, "r833": 217, "noncentralbetadistribut": 217, "betaprim": 217, "r834": 217, "beta_prime_distribut": 217, "r835": 217, "betaprimedistribut": 217, "boundedpareto": 217, "pareto": 217, "r836": 217, "pareto_distribut": 217, "bounded_pareto_distribut": 217, "r837": 217, "cauchy_distribut": 217, "r838": 217, "cauchydistribut": 217, "r839": 217, "chi_distribut": 217, "r840": 217, "chidistribut": 217, "chinoncentr": 217, "r841": 217, "noncentral_chi_distribut": 217, "chisquar": 217, "r842": 217, "chi_squared_distribut": 217, "r843": 217, "squareddistribut": 217, "dagum": 217, "r844": 217, "dagum_distribut": 217, "erlang": 217, "r845": 217, "erlang_distribut": 217, "r846": 217, "erlangdistribut": 217, "exgaussian": 217, "emg": 217, "r847": 217, "exponentially_modified_gaussian_distribut": 217, "quantil": 217, "r848": 217, "exponential_distribut": 217, "r849": 217, "exponentialdistribut": 217, "fdistribut": 217, "______________________________": 217, "r850": 217, "r851": 217, "fisherz": 217, "fisher": 217, "2d_1": 217, "d_1z": 217, "d_1e": 217, "r852": 217, "27s_z": 217, "r853": 217, "fishersz": 217, "frechet": 217, "r854": 217, "a9chet_distribut": 217, "r855": 217, "gamma_distribut": 217, "r856": 217, "gammadistribut": 217, "gammainvers": 217, "r857": 217, "gompertz": 217, "r858": 217, "gompertz_distribut": 217, "gumbel": 217, "dfrac": 217, "r859": 217, "gumbeldistribut": 217, "r860": 217, "gumbel_distribut": 217, "r861": 217, "mathwav": 217, "easyfit": 217, "gumbel_max": 217, "r862": 217, "gumbel_min": 217, "kumaraswami": 217, "r863": 217, "kumaraswamy_distribut": 217, "r864": 217, "laplace_distribut": 217, "r865": 217, "laplacedistribut": 217, "r866": 217, "a9vy_distribut": 217, "r867": 217, "levydistribut": 217, "logist": 217, "r868": 217, "logistic_distribut": 217, "r869": 217, "logisticdistribut": 217, "loglogist": 217, "unimod": 217, "r870": 217, "lognorm": 217, "r871": 217, "r872": 217, "lognormaldistribut": 217, "lomax": 217, "r873": 217, "lomax_distribut": 217, "maxwel": 217, "2a": 217, "r874": 217, "maxwell_distribut": 217, "r875": 217, "maxwelldistribut": 217, "moyal": 217, "r876": 217, "moyaldistribut": 217, "r877": 217, "rice": 217, "dobelman": 217, "textfil": 217, "distributionshandbook": 217, "nakagami": 217, "r878": 217, "nakagami_distribut": 217, "marginal_distribut": 217, "r879": 217, "normal_distribut": 217, "r880": 217, "normaldistributionfunct": 217, "xm": 217, "x_m": 217, "r881": 217, "r882": 217, "paretodistribut": 217, "powerfunct": 217, "paramat": 217, "r883": 217, "power_func": 217, "quadraticu": 217, "r884": 217, "quadratic_distribut": 217, "raisedcosin": 217, "2s": 217, "r885": 217, "raised_cosine_distribut": 217, "r886": 217, "rayleigh_distribut": 217, "r887": 217, "rayleighdistribut": 217, "r888": 217, "reciprocal_distribut": 217, "studentt": 217, "r889": 217, "student_t": 217, "r890": 217, "studentst": 217, "shiftedgompertz": 217, "r891": 217, "shifted_gompertz_distribut": 217, "r892": 217, "trapezoidal_distribut": 217, "r893": 217, "triangular_distribut": 217, "r894": 217, "triangulardistribut": 217, "r895": 217, "uniform_distribution_": 217, "28continu": 217, "r896": 217, "uniformdistribut": 217, "uniformsum": 217, "irwin": 217, "r897": 217, "uniform_sum_distribut": 217, "r898": 217, "uniformsumdistribut": 217, "vonmis": 217, "mise": 217, "i_0": 217, "r899": 217, "von_mises_distribut": 217, "r900": 217, "vonmisesdistribut": 217, "wald": 217, "gaussianinvers": 217, "r901": 217, "inverse_gaussian_distribut": 217, "r902": 217, "inversegaussiandistribut": 217, "weibul": 217, "geq0": 217, "r903": 217, "weibull_distribut": 217, "r904": 217, "weibulldistribut": 217, "wignersemicircl": 217, "semicircl": 217, "frac2": 217, "r905": 217, "wigner_semicircle_distribut": 217, "r906": 217, "wignerssemicirclelaw": 217, "jointrv": 217, "_set": 217, "multivariatenorm": 217, "noninvert": 217, "ob": 217, "r907": 217, "multivariate_normal_distribut": 217, "multivariatelaplac": 217, "r908": 217, "multivariate_laplace_distribut": 217, "generalizedmultivariateloggamma": 217, "joint_rv_typ": 217, "gd": 217, "y_3": 217, "gmvlg": 217, "generalizedmultivariateloggammaomega": 217, "r909": 217, "generalized_multivariate_log": 217, "r910": 217, "234137346_on_a_multivariate_log": 217, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 217, "correl": 217, "gmvlgo": 217, "r911": 217, "r912": 217, "r913": 217, "multinomial_distribut": 217, "r914": 217, "multinomialdistribut": 217, "multivariatebeta": 217, "r915": 217, "dirichlet_distribut": 217, "r916": 217, "dirichletdistribut": 217, "multivariateewen": 217, "ewen": 217, "r917": 217, "27s_sampling_formula": 217, "r918": 217, "rutger": 217, "hcrane": 217, "sts529": 217, "multivariatet": 217, "negativemultinomi": 217, "n_c": 217, "r919": 217, "negative_multinomial_distribut": 217, "r920": 217, "normalgamma": 217, "r921": 217, "discretemarkovchain": 217, "state_spac": 217, "trans_prob": 217, "markov": 217, "characteris": 217, "transitionmatrixof": 217, "ys": 217, "transition_prob": 217, "sunni": 217, "cloudi": 217, "raini": 217, "randomindexedsymbol": 217, "409": 217, "6963328": 217, "3096": 217, "query_gt": 217, "64705": 217, "r922": 217, "markov_chain": 217, "time_markov_chain": 217, "r923": 217, "dartmouth": 217, "teaching_aid": 217, "books_articl": 217, "probability_book": 217, "chapter11": 217, "canonical_form": 217, "transient": 217, "p_new": 217, "new_matrix": 217, "communication_class": 217, "r924": 217, "onlinelibrari": 217, "wilei": 217, "1002": 217, "9780470316887": 217, "app1": 217, "r925": 217, "columbia": 217, "ww2040": 217, "6711f12": 217, "lect1023big": 217, "is_recurr": 217, "tarjan": [217, 235], "r926": 217, "4701sum07": 217, "4701": 217, "mcii": 217, "r927": 217, "ceca": 217, "clemson": 217, "shierd": 217, "shier": 217, "r928": 217, "ujcont": 217, "uj": 217, "7506": 217, "content1": 217, "r929": 217, "econ": 217, "dtmc": 217, "reccur": 217, "r930": 217, "absorbing_markov_chain": 217, "r931": 217, "brandei": 217, "igusa": 217, "math56as08": 217, "math56a_s08_notes015": 217, "fixed_row_vector": 217, "stationary_distribut": 217, "fundamental_matrix": 217, "r932": 217, "lip": 217, "limiting_distribut": 217, "condition_set": 217, "wm": 217, "r933": 217, "probabilitycours": 217, "11_2_6_stationary_and_limiting_distribut": 217, "r934": 217, "galton": 217, "uchicago": 217, "yibi": 217, "stat317": 217, "lecture4_6up": 217, "continuousmarkovchain": 217, "gen_mat": 217, "generator_matrix": 217, "45279": 217, "58602": 217, "37933": 217, "34211": 217, "7143": 217, "4002723175": 217, "6832579186": 217, "r935": 217, "r936": 217, "biu": 217, "il": 217, "amirgi": 217, "ctmcnote": 217, "bernoulliprocess": 217, "processs": 217, "joint_distribut": 217, "jointdistributionhandmad": 217, "r937": 217, "bernoulli_process": 217, "r938": 217, "mathc": 217, "clarku": 217, "djoyc": 217, "ma217": 217, "given_condit": 217, "poissonprocess": 217, "648": 217, "r939": 217, "11_0_0_intro": 217, "r940": 217, "poisson_point_process": 217, "wiener": 217, "brownian": 217, "scottish": 217, "botanist": 217, "r941": 217, "11_4_0_brownian_motion_wiener_process": 217, "r942": 217, "wiener_process": 217, "gammaprocess": 217, "jump": [217, 272], "472": 217, "r943": 217, "gamma_process": 217, "matrixgamma": 217, "scale_matrix": 217, "r944": 217, "matrix_gamma_distribut": 217, "wishart": 217, "r945": 217, "wishart_distribut": 217, "matrixnorm": 217, "location_matrix": 217, "scale_matrix_1": 217, "scale_matrix_2": 217, "r946": 217, "matrix_normal_distribut": 217, "compound_rv": 217, "compounddistribut": 217, "crv_type": 217, "r947": 217, "compound_probability_distribut": 217, "numsampl": 217, "evaluate_integr": 217, "r948": 217, "entropy_": 217, "information_theori": 217, "r949": 217, "crmarsh": 217, "charles_marsh_continuous_entropi": 217, "r950": 217, "uconn": 217, "kconrad": 217, "blurb": 217, "entropypost": 217, "arg1": 217, "arg2": 217, "cexpr": 217, "coskew": 217, "sigma_": 217, "r951": 217, "r952": 217, "probability_distribut": 217, "randomst": 217, "die_rol": 217, "samp": 217, "pspace": 217, "samp_list": 217, "sam": 217, "42519758": 217, "40207856": 217, "94991743": 217, "85819627": 217, "83403519": 217, "9412172": 217, "85768055": 217, "38954165": 217, "11163337": 217, "3176591": 217, "79115232": 217, "63232916": 217, "01747268": 217, "96716083": 217, "sampling_p": 217, "sampling_": 217, "factorial_mo": 217, "r953": 217, "r954": 217, "factorialmo": 217, "kurtosi": 217, "outlier": 217, "sigma_x": 217, "r955": 217, "r956": 217, "asymmetri": 217, "pearson": 217, "sampling_dens": 217, "centralmo": 217, "cmoment": 217, "expectationmatrix": 217, "randommatrixsymbol": 217, "n11": 217, "n12": 217, "n21": 217, "n22": 217, "variancematrix": 217, "crosscovariancematrix": 217, "randomdomain": 217, "probabilist": 217, "singledomain": 217, "singlepspac": 217, "productdomain": 217, "productpspac": 217, "adject": 217, "conditionaldomain": 217, "frv": 217, "finitedomain": 217, "finitepspac": 217, "crv": 217, "continuousdomain": 217, "continuouspspac": 217, "diepspac": 217, "singlefinitepspac": 217, "normalpspac": 217, "singlecontinuouspspac": 217, "frv_type": 217, "randomvari": 217, "tactic": 217, "random_symbol": 217, "rs_swap": 217, "pspace1": 217, "pspace2": 217, "immutabledensendimarrai": 218, "tomatrix": 218, "j_m": 218, "i_a": 218, "i_b": 218, "sum_k": 218, "tensorcontract": [218, 219], "tensordiagon": [218, 219], "derive_by_arrai": 218, "sum_m": 218, "immutablesparsendimarrai": 218, "mutabledensendimarrai": 218, "mutablesparsendimarrai": 218, "index_order_old": 218, "index_order_new": 218, "cab": 218, "contraction_ax": 218, "diagonal_ax": 218, "arraycontract": 219, "arraydiagon": 219, "arraysymbol": 219, "convert_indexed_to_arrai": 219, "arrayadd": 219, "convert_matrix_to_arrai": 219, "convert_array_to_matrix": 219, "expr_tr": 219, "array_der": 219, "index_method": 221, "get_contraction_structur": [221, 222], "deepest": 221, "nested_contract": 221, "get_indic": [221, 222, 223, 224], "indexconformanceexcept": 221, "______": 222, "stem": 222, "dim1": 222, "dim2": 222, "qwerti": 222, "a_ij": 222, "b_ij": 222, "syntact": 222, "a_real": 222, "c_inherit": 222, "c_explicit": 222, "unrol": 222, "tensorindextyp": [223, 224], "eps_dim": 223, "metric_nam": 223, "su": 223, "lorentz": 223, "tensor_index_typ": 223, "is_up": 223, "tensor_inde_typ": 223, "typ": 223, "tensorhead": [223, 224], "index_typ": 223, "tensorsymmetri": 223, "monoterm": 223, "_tensormanag": 223, "set_comm": 223, "asym2": 223, "fully_symmetr": 223, "tensori": [223, 224], "repl": 223, "e_z": 223, "no_symmetri": 223, "p_x": 223, "p_y": 223, "p_z": 223, "ipos1": 223, "ipos2": 223, "icomp1": 223, "icomp2": 223, "nameless": 223, "replacement_dict": 223, "free_arg": 223, "addend": 223, "canon_bp": 223, "contract_metr": 223, "contract_al": 223, "ipo": 223, "icomp": 223, "nonrep": 223, "dum": 223, "ext_rank": 223, "is_canon_bp": 223, "m0": 223, "get_free_indic": [223, 224], "perm2tensor": 223, "tid": 223, "sorted_compon": 223, "riemann_cyclic_replac": 223, "riemann_cycl": 223, "cadabra": 223, "multiterm": 223, "bianchi": 223, "sym2": 223, "direct_product": 223, "monotorem": 223, "tableaux": 223, "tensortyp": 223, "repetit": [223, 235], "tensormanag": 223, "comm_i2symbol": 223, "comm_symbols2i": 223, "get_comm": 223, "gcomm": 223, "ghcomm": 223, "toper": 224, "partialderiv": 224, "valenc": 224, "uncontract": 224, "compa": 224, "compb": 224, "derivand": 224, "xpass": [226, 228], "nocache_fail": 226, "expectedexcept": 226, "assertionerror": 226, "exceptioninfo": 226, "abort": 226, "9999": 226, "warningcl": [226, 233], "test_stacklevel": 226, "randtest": 227, "portabl": [228, 229], "pytestreport": 228, "force_color": 228, "readlin": 228, "sympydoctestfind": 228, "doctestpars": 228, "exclude_empti": 228, "sympydoctestrunn": 228, "checker": 228, "optionflag": 228, "5140": 228, "doctestrunn": 228, "clear_glob": 228, "writer": 228, "garbag": 228, "check_output": 228, "report_": 228, "sympyoutputcheck": 228, "outputcheck": 228, "stdlib": 228, "testrunn": 228, "sympytestresult": 228, "convert_to_native_path": 228, "lst": 228, "blacklist": 228, "get_sympy_dir": 228, "raise_on_deprec": 228, "deprecationwarn": [228, 233], "run_all_test": 228, "test_arg": 228, "test_kwarg": 228, "doctest_arg": 228, "doctest_kwarg": 228, "examples_arg": 228, "examples_kwarg": 228, "run_in_subprocess_with_hash_random": 228, "function_kwarg": 228, "virtualenv": 228, "pythonhashse": 228, "_test": 228, "split_list": 228, "sympytestfil": 228, "module_rel": 228, "extraglob": 228, "raise_on_error": 228, "basenam": [228, 229, 230], "slate": 228, "dont_accept_true_for_1": 228, "dont_accept_blanklin": 228, "normalize_whitespac": 228, "ellipsi": 228, "ignore_exception_detail": 228, "report_udiff": 228, "report_cdiff": 228, "report_ndiff": 228, "report_only_first_failur": 228, "mortem": 228, "tomfooleri": 228, "testmod": 228, "tester": 228, "fiddl": [228, 272], "timeout": 228, "keyboardinterrupt": 228, "interrupt": 228, "_basic": 228, "kw": 228, "test_equ": 228, "pdb": 228, "pipe": 228, "time_bal": 228, "tandem": 229, "matvec": 229, "codewrapp": 229, "distutil": 229, "fwrap": 229, "swig": 229, "binary_cal": 229, "22925376": 229, "25165824": 229, "_imp_": [229, 236], "filepath": 229, "cythoncodewrapp": 229, "dump_pyx": 229, "dummywrapp": 229, "f2pycodewrapp": 229, "ufuncifycodewrapp": 229, "dump_c": [229, 230], "funcnam": 229, "code_gen": [229, 230], "argument_tupl": 229, "include_dir": 229, "library_dir": 229, "extra_compile_arg": 229, "extra_link_arg": 229, "symfunc": [229, 236], "funtion_nam": 229, "ndimension": 229, "f_fortran": 229, "f_cython": 229, "r957": 229, "fortran77": 230, "fortran90": 230, "julia": [230, 260], "rust": [230, 260], "mileston": 230, "unsurmount": 230, "pyf": 230, "inputoutput": 230, "tcc": 230, "libtcc": 230, "date": 230, "hostnam": 230, "sha1": 230, "ccodegen": 230, "preprocessor_stat": 230, "dump_h": 230, "guard": 230, "get_prototyp": 230, "codegenerror": 230, "function_prototyp": 230, "dump_cod": 230, "cname": 230, "fname": 230, "pynam": 230, "jlname": 230, "octnam": 230, "rsname": 230, "fcodegen": 230, "f90": 230, "dump_f95": 230, "get_interfac": 230, "juliacodegen": 230, "dump_jl": 230, "octavecodegen": 230, "dump_m": 230, "returnvalu": 230, "destin": 230, "local_var": 230, "result_vari": 230, "ot": 230, "unnam": 230, "rustcodegen": 230, "dump_r": 230, "f_result": 230, "myfcn": 230, "fcn2": 230, "myfcn_result": 230, "void": 230, "get_default_datatyp": 230, "complex_allow": 230, "agnost": 230, "conserve_mpmath_dp": 231, "doctest_depends_on": 231, "disable_view": 231, "python_vers": 231, "memoize_properti": 231, "propfunc": 231, "no_attrs_in_subclass": 231, "__all__": 231, "some_funct": 231, "thread": 231, "xthread": 231, "threaded_factori": 231, "use_add": 231, "multiset_partitions_taocp": 232, "visitor": 232, "pstack": 232, "lpart": 232, "topmost": 232, "partcompon": 232, "peek": [232, 272], "unpredict": 232, "list_visitor": 232, "abb": [232, 235], "factoring_visitor": 232, "multisetpartitiontravers": 232, "aocp": 232, "count_partit": 232, "127750": 232, "686": 232, "4a": 232, "factorisatio": 232, "oppenheim": 232, "numerorum": 232, "canfield": 232, "erdo": 232, "OF": 232, "yorgei": 232, "monad": 232, "persist": 232, "288716": 232, "memoiz": [232, 234, 260], "dramat": 232, "hypothet": 232, "borrow": 232, "coalesc": 232, "_rang": 232, "stretch": 232, "brain": 232, "histogram": 232, "enum_al": 232, "enum_larg": 232, "enum_rang": 232, "enum_smal": 232, "ub": 232, "parti": 233, "catch_warn": 233, "simplefilt": 233, "dedent": [233, 238], "enum": [234, 260], "pkgdata": [234, 260], "kbin": 235, "partion": 235, "bcd": 235, "notiter": 235, "binary_partit": 235, "r958": 235, "taocp": 235, "nx": 235, "common_prefix": 235, "common_suffix": 235, "unhash": 235, "r959": 235, "connected_component_": 235, "graph_theori": 235, "r960": 235, "27s_strongly_connected_components_algorithm": 235, "dict_merg": 235, "filter_symbol": 235, "ls": 235, "myop": 235, "kog": 235, "informatik": 235, "hamburg": 235, "mein": 235, "python_trick": 235, "neighbor": 235, "xxxxxx": 235, "xxxx": 235, "r961": 235, "method_ring": 235, "r962": 235, "4856615": 235, "4857018": 235, "r963": 235, "programminggeek": 235, "r964": 235, "steinhau": 235, "93johnson": 235, "93trotter_algorithm": 235, "r965": 235, "involut": 235, "eco": 235, "vajnovszki": 235, "dmtc": 235, "generate_involut": 235, "r966": 235, "permutationinvolut": 235, "generate_oriented_forest": 235, "forest": 235, "acycl": 235, "r967": 235, "beyer": 235, "hedetniemi": 235, "novemb": 235, "r968": 235, "1633833": 235, "has_dup": 235, "has_varieti": 235, "iproduct": 235, "abcbb": 235, "is_sequ": 235, "generatortyp": 235, "_iter": 235, "ordered_flag": 235, "least_rot": 235, "rotate_left": 235, "r969": 235, "lexicographically_minimal_string_rot": 235, "minlex": 235, "acb": 235, "11010011000": 235, "00011010011": 235, "00011001011": 235, "aaa": 235, "abi": 235, "bby": 235, "abracadabra": 235, "banana": 235, "multiset_derang": 235, "uniq": 235, "1233": 235, "3312": 235, "3321": 235, "aba": 235, "baa": 235, "bead": 235, "ooo": 235, "r970": 235, "ordered_partit": 235, "r971": 235, "jeromekelleh": 235, "r972": 235, "jerom": 235, "kelleh": 235, "barri": 235, "sullivan": 235, "0909": 235, "2331v2": 235, "r973": 235, "activest": 235, "218332": 235, "postfix": 235, "random_derang": 235, "reseed": 235, "templat": 235, "rotate_right": 235, "roundrobin": 235, "ef": 235, "credit": [235, 258], "sakki": 235, "keyfunc": 235, "subgraph": 235, "r974": 235, "r975": 235, "longest": 235, "r976": 235, "unflatten": 235, "afunc": 236, "lam_f": 236, "lambdastr": 236, "dummifi": 236, "use_imp": 236, "custom_sin": 236, "38177329": 236, "49315059": 236, "8414709848078965": 236, "eager": 236, "enable_eager_execut": 236, "eagertensor": 236, "__class__": 236, "placehold": 236, "user_guid": 236, "runtimewarn": 236, "sin_cos_sympi": 236, "sin_co": 236, "sin_cos_numpi": 236, "38177329068": 236, "module_dictionari": 236, "_lambdifygener": 236, "__globals__": 236, "lambdaprint": [236, 260], "90929743": [236, 261], "assoc_recurrence_memo": 237, "base_seq": 237, "memo": 237, "pn0": 237, "recurrence_memo": 237, "specfun": 237, "__index__": 238, "sanit": 238, "99999999999999991611392": 238, "debug_decor": 238, "fillded": 238, "strline": 238, "rawlin": 238, "find_execut": 238, "pathsep": 238, "strictlessthan": 238, "pastabl": 238, "bee": 238, "spamham": 238, "sha": 238, "spam": 238, "egg": 238, "md5": 238, "eggsham": 238, "r977": 238, "6116978": 238, "roken": 238, "deletechar": 238, "multicharact": 238, "oldchar": 238, "newchar": 238, "acquir": 239, "getresourc": 239, "idiom": [239, 264, 265], "pkgname": 239, "pkgpath": 239, "dirnam": 239, "normpath": 239, "rb": 239, "__loader__": 239, "stringio": 239, "get_resourc": 239, "ioerror": 239, "mydata": 239, "mypkgdata": 239, "jpg": 239, "get_class": 240, "lookup_view": 240, "get_mod_func": 240, "callback": 240, "timeutil": 241, "coordsysrect": 242, "rotation_matrix": [242, 243, 246], "vector_nam": 242, "variable_nam": [242, 248], "latex_vect": 242, "pretty_vect": 242, "latex_scalar": 242, "pretty_scalar": 242, "new_system": 242, "create_new": [242, 246], "transformation_to_par": 242, "transformation_from_par": 242, "locate_new": [242, 244, 245, 246, 247, 248], "position_wrt": [242, 245, 246, 247], "orient_new": [242, 243], "axisorient": [242, 246, 249], "axis_orient": [242, 246], "bodyorient": [242, 246, 249], "body_orient": [242, 243, 246], "spaceorient": [242, 246, 249], "space_orient": [242, 243], "quaternionorient": [242, 246, 249], "q_orient": [242, 243], "orient_new_axi": [242, 244, 246], "orient_new_bodi": [242, 246], "angle1": [242, 243], "angle2": [242, 243], "angle3": [242, 243], "euler_angl": [242, 243], "orient_new_quaternion": [242, 246], "orient_new_spac": [242, 246], "coordsyrect": 242, "v_a": 242, "v_b": 242, "scalar_map": 242, "basevector": [242, 245, 246], "delop": [242, 247, 248], "r978": 242, "r979": 242, "basedyad": [242, 245], "second_system": 242, "deloper": [242, 249], "curl": [242, 249, 251], "parabola": 242, "rational_parametr": 242, "singular_point": 242, "regular_point": 242, "reg_point": 242, "implict": 242, "cubic_curv": 242, "calulc": 242, "hoffmann": 242, "purdu": 242, "lib": 242, "cgi": 242, "viewcont": 242, "1827": 242, "cstech": 242, "erik": 242, "hillgart": 242, "diploma": 242, "linz": 242, "universitat": 242, "availa": 242, "risc_1355": 242, "20point": 242, "20on": 242, "20conic": 242, "semispher": [242, 251], "coordsys3d": [243, 244, 245, 247, 248, 249, 251], "axis_orienter1": 243, "axis_orienter2": 243, "axis_orienter3": 243, "body_orienter1": 243, "body_orienter2": 243, "body_orienter3": 243, "system2": 244, "parametricregion": [244, 249, 251], "implicitregion": [244, 249, 251], "essenc": 245, "vectormul": 245, "vectoradd": 245, "ofcours": 245, "vectorzero": 245, "expressli": 245, "express_coordin": [245, 246], "dyadicmul": 245, "dyadicadd": 245, "cleanest": 246, "orient_new_": 246, "attain": 246, "basescalar": [246, 248], "oabc": 247, "oa": 247, "pq": 247, "sr": 247, "wikidel": 247, "ffield": 247, "gradient_field": 248, "instantan": 248, "directional_deriv": 248, "lame": 248, "quadrilater": 249, "flux": 249, "parametricintegr": 249, "matrix_to_vector": 249, "vector_integr": [249, 251], "dyadicproduct": 249, "quantifi": 250, "throughtout": 250, "necesssari": 251, "param_circl": 251, "implicit_circl": 251, "obextj": 251, "solidspher": 251, "lamina": 251, "\ud835\udc45": 251, "cylind": 251, "vectorfield": 251, "hemispher": 251, "top_fac": 251, "bottom_fac": 251, "27_theorem": 251, "cone": 251, "divergence_theorem": 251, "12288": 251, "subcategori": 252, "cnode": 254, "cxxnode": 254, "fnode": 254, "pyutil": 254, "cutil": 254, "futil": 254, "ecm": 257, "copyright": 258, "truss": 258, "pappu": 259, "hexagon": 259, "prettyprint": 260, "rcodeprint": 260, "javascript": [260, 271], "gtk": 260, "mathmlprint": 260, "pythoncodeprint": 260, "pythonprint": 260, "dotprint": [260, 267, 271], "str_expr": 261, "82842712474619": 261, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 261, "0874989834394464": 261, "roundoff": 261, "14112001": 261, "7568025": 261, "95892427": 261, "2794155": 261, "6569866": 261, "98935825": 261, "41211849": 261, "0998334166468": 261, "sympy_nam": 261, "numerical_funct": 261, "rephras": 262, "oh": 262, "integration_vari": 262, "dfdx": 262, "equidistantli": 262, "d2fdx2": 262, "django": 264, "oop": 264, "crazi": 264, "abcdef": 264, "reevalu": 264, "infal": 264, "insight": 265, "entertain": 265, "preliminari": 265, "82842712475": 266, "cass": 266, "wrote": [266, 267], "theme": 266, "expanded_expr": 266, "whet": 266, "appetit": 266, "c\u2082": [266, 273], "c\u2081": [266, 273], "\u03bd": 266, "sell": 266, "battl": 266, "confid": 266, "gigabyt": 266, "tear": 267, "rebuilt": 267, "stopper": 267, "uexpr": 267, "unevalutedexpr": 267, "downsid": 268, "algebraic_multipl": 268, "pdp": 268, "\u03bb": 268, "undertest": 268, "underevalu": 268, "my_iszero": 268, "stronger": 268, "tradeoff": 268, "wonder": 268, "5b7c3e8ee5b40332abdb206c": 268, "15141": 268, "19548": 268, "10120": 268, "10279": 268, "constant_problem": 268, "possiblezeroq": 268, "mupad_ref": 268, "iszero": 268, "congratul": 269, "decent": 270, "austin": 270, "video": 270, "bvar": 271, "unnecessarili": 272, "whittl": 272, "catchal": 272, "sound": 272, "collected_expr": 272, "cdot1": 272, "undertak": 272, "undon": 272, "cdot2": 272, "nck": 272, "pronounc": 272, "_2f_1": 272, "cfrac": 272, "list_to_frac": 272, "a\u2080": 272, "a\u2083": 272, "a\u2084": 272, "pointless": 272, "orig_frac": 272, "diffeq": 273}, "objects": {"": [[23, 0, 0, "-", "sympy"]], "sympy": [[24, 0, 0, "-", "abc"], [25, 0, 0, "-", "algebras"], [28, 0, 0, "-", "assumptions"], [31, 0, 0, "-", "calculus"], [32, 0, 0, "-", "categories"], [53, 0, 0, "-", "diffgeom"], [54, 0, 0, "-", "discrete"], [58, 0, 0, "-", "functions"], [71, 0, 0, "-", "holonomic"], [78, 0, 0, "-", "integrals"], [79, 0, 0, "-", "interactive"], [80, 0, 0, "-", "liealgebras"], [81, 0, 0, "-", "logic"], [86, 0, 0, "-", "matrices"], [93, 0, 0, "-", "parsing"], [258, 0, 0, "-", "physics"], [193, 0, 0, "-", "polys"], [215, 0, 0, "-", "solvers"], [217, 0, 0, "-", "stats"], [220, 0, 0, "-", "tensor"], [225, 0, 0, "-", "testing"], [234, 0, 0, "-", "utilities"], [249, 0, 0, "-", "vector"]], "sympy.algebras": [[25, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[25, 2, 1, "", "add"], [25, 2, 1, "", "angle"], [25, 2, 1, "", "arc_coplanar"], [25, 2, 1, "", "axis"], [25, 2, 1, "", "exp"], [25, 2, 1, "", "from_axis_angle"], [25, 2, 1, "", "from_rotation_matrix"], [25, 2, 1, "", "index_vector"], [25, 2, 1, "", "integrate"], [25, 2, 1, "", "inverse"], [25, 2, 1, "", "is_pure"], [25, 2, 1, "", "is_zero_quaternion"], [25, 2, 1, "", "mensor"], [25, 2, 1, "", "mul"], [25, 2, 1, "", "norm"], [25, 2, 1, "", "normalize"], [25, 2, 1, "", "orthogonal"], [25, 2, 1, "", "parallel"], [25, 2, 1, "", "pow"], [25, 2, 1, "", "pow_cos_sin"], [25, 2, 1, "", "rotate_point"], [25, 2, 1, "", "scalar_part"], [25, 2, 1, "", "to_axis_angle"], [25, 2, 1, "", "to_rotation_matrix"], [25, 2, 1, "", "vector_coplanar"], [25, 2, 1, "", "vector_part"]], "sympy.assumptions": [[26, 0, 0, "-", "ask"], [27, 0, 0, "-", "assume"], [29, 0, 0, "-", "predicates"], [30, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[26, 1, 1, "", "AssumptionKeys"], [26, 3, 1, "", "ask"], [26, 3, 1, "", "register_handler"], [26, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[27, 1, 1, "", "AppliedPredicate"], [27, 1, 1, "", "AssumptionsContext"], [27, 1, 1, "", "Predicate"], [27, 1, 1, "", "UndefinedPredicate"], [27, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[27, 4, 1, "", "arg"], [27, 4, 1, "", "arguments"], [27, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[27, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[27, 2, 1, "", "eval"], [27, 5, 1, "", "handler"], [27, 2, 1, "", "register"], [27, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[29, 1, 1, "", "FinitePredicate"], [29, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[29, 1, 1, "", "CommutativePredicate"], [29, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[29, 1, 1, "", "ComplexElementsPredicate"], [29, 1, 1, "", "DiagonalPredicate"], [29, 1, 1, "", "FullRankPredicate"], [29, 1, 1, "", "IntegerElementsPredicate"], [29, 1, 1, "", "InvertiblePredicate"], [29, 1, 1, "", "LowerTriangularPredicate"], [29, 1, 1, "", "NormalPredicate"], [29, 1, 1, "", "OrthogonalPredicate"], [29, 1, 1, "", "PositiveDefinitePredicate"], [29, 1, 1, "", "RealElementsPredicate"], [29, 1, 1, "", "SingularPredicate"], [29, 1, 1, "", "SquarePredicate"], [29, 1, 1, "", "SymmetricPredicate"], [29, 1, 1, "", "TriangularPredicate"], [29, 1, 1, "", "UnitTriangularPredicate"], [29, 1, 1, "", "UnitaryPredicate"], [29, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[29, 1, 1, "", "CompositePredicate"], [29, 1, 1, "", "EvenPredicate"], [29, 1, 1, "", "OddPredicate"], [29, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[29, 1, 1, "", "NegativePredicate"], [29, 1, 1, "", "NonNegativePredicate"], [29, 1, 1, "", "NonPositivePredicate"], [29, 1, 1, "", "NonZeroPredicate"], [29, 1, 1, "", "PositivePredicate"], [29, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[29, 1, 1, "", "AlgebraicPredicate"], [29, 1, 1, "", "AntihermitianPredicate"], [29, 1, 1, "", "ComplexPredicate"], [29, 1, 1, "", "ExtendedRealPredicate"], [29, 1, 1, "", "HermitianPredicate"], [29, 1, 1, "", "ImaginaryPredicate"], [29, 1, 1, "", "IntegerPredicate"], [29, 1, 1, "", "IrrationalPredicate"], [29, 1, 1, "", "RationalPredicate"], [29, 1, 1, "", "RealPredicate"], [29, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[29, 5, 1, "", "AlgebraicHandler"], [29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[30, 3, 1, "", "refine"], [30, 3, 1, "", "refine_Pow"], [30, 3, 1, "", "refine_abs"], [30, 3, 1, "", "refine_arg"], [30, 3, 1, "", "refine_atan2"], [30, 3, 1, "", "refine_im"], [30, 3, 1, "", "refine_matrixelement"], [30, 3, 1, "", "refine_re"], [30, 3, 1, "", "refine_sign"]], "sympy.calculus": [[31, 0, 0, "-", "euler"], [31, 0, 0, "-", "finite_diff"], [31, 0, 0, "-", "singularities"], [31, 0, 0, "-", "util"]], "sympy.calculus.euler": [[31, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[31, 3, 1, "", "apply_finite_diff"], [31, 3, 1, "", "differentiate_finite"], [31, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[31, 3, 1, "", "is_decreasing"], [31, 3, 1, "", "is_increasing"], [31, 3, 1, "", "is_monotonic"], [31, 3, 1, "", "is_strictly_decreasing"], [31, 3, 1, "", "is_strictly_increasing"], [31, 3, 1, "", "monotonicity_helper"], [31, 3, 1, "", "singularities"]], "sympy.calculus.util": [[31, 3, 1, "", "continuous_domain"], [31, 3, 1, "", "function_range"], [31, 3, 1, "", "is_convex"], [31, 3, 1, "", "lcim"], [31, 3, 1, "", "maximum"], [31, 3, 1, "", "minimum"], [31, 3, 1, "", "not_empty_in"], [31, 3, 1, "", "periodicity"], [31, 3, 1, "", "stationary_points"]], "sympy.categories": [[32, 1, 1, "", "Category"], [32, 1, 1, "", "CompositeMorphism"], [32, 1, 1, "", "Diagram"], [32, 1, 1, "", "IdentityMorphism"], [32, 1, 1, "", "Morphism"], [32, 1, 1, "", "NamedMorphism"], [32, 1, 1, "", "Object"], [32, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[32, 4, 1, "", "commutative_diagrams"], [32, 4, 1, "", "name"], [32, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[32, 4, 1, "", "codomain"], [32, 4, 1, "", "components"], [32, 4, 1, "", "domain"], [32, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[32, 4, 1, "", "conclusions"], [32, 2, 1, "", "hom"], [32, 2, 1, "", "is_subdiagram"], [32, 4, 1, "", "objects"], [32, 4, 1, "", "premises"], [32, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[32, 4, 1, "", "codomain"], [32, 2, 1, "", "compose"], [32, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[32, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[32, 1, 1, "", "ArrowStringDescription"], [32, 1, 1, "", "DiagramGrid"], [32, 1, 1, "", "XypicDiagramDrawer"], [32, 3, 1, "", "preview_diagram"], [32, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[32, 4, 1, "", "height"], [32, 4, 1, "", "morphisms"], [32, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[32, 2, 1, "", "draw"]], "sympy.codegen": [[33, 0, 0, "-", "algorithms"], [33, 0, 0, "-", "approximations"], [33, 0, 0, "-", "ast"], [33, 0, 0, "-", "cfunctions"], [33, 0, 0, "-", "cnodes"], [33, 0, 0, "-", "cutils"], [33, 0, 0, "-", "cxxnodes"], [33, 0, 0, "-", "fnodes"], [33, 0, 0, "-", "futils"], [33, 0, 0, "-", "matrix_nodes"], [33, 0, 0, "-", "pyutils"], [33, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[33, 3, 1, "", "newtons_method"], [33, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[33, 1, 1, "", "SeriesApprox"], [33, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[33, 1, 1, "", "Assignment"], [33, 1, 1, "", "AssignmentBase"], [33, 1, 1, "", "Attribute"], [33, 1, 1, "", "AugmentedAssignment"], [33, 1, 1, "", "BreakToken"], [33, 1, 1, "", "CodeBlock"], [33, 1, 1, "", "Comment"], [33, 1, 1, "", "ComplexType"], [33, 1, 1, "", "ContinueToken"], [33, 1, 1, "", "Declaration"], [33, 1, 1, "", "Element"], [33, 1, 1, "", "FloatBaseType"], [33, 1, 1, "", "FloatType"], [33, 1, 1, "", "For"], [33, 1, 1, "", "FunctionCall"], [33, 1, 1, "", "FunctionDefinition"], [33, 1, 1, "", "FunctionPrototype"], [33, 1, 1, "", "IntBaseType"], [33, 1, 1, "", "Node"], [33, 1, 1, "", "NoneToken"], [33, 1, 1, "", "Pointer"], [33, 1, 1, "", "Print"], [33, 1, 1, "", "QuotedString"], [33, 1, 1, "", "Return"], [33, 1, 1, "", "Scope"], [33, 1, 1, "", "SignedIntType"], [33, 1, 1, "", "Stream"], [33, 1, 1, "", "String"], [33, 1, 1, "", "Token"], [33, 1, 1, "", "Type"], [33, 1, 1, "", "UnsignedIntType"], [33, 1, 1, "", "Variable"], [33, 1, 1, "", "While"], [33, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[33, 2, 1, "", "cse"], [33, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[33, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[33, 2, 1, "", "cast_nocheck"], [33, 4, 1, "", "decimal_dig"], [33, 4, 1, "", "dig"], [33, 4, 1, "", "eps"], [33, 4, 1, "", "max"], [33, 4, 1, "", "max_exponent"], [33, 4, 1, "", "min_exponent"], [33, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[33, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[33, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[33, 2, 1, "", "cast_check"], [33, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[33, 2, 1, "", "as_Declaration"], [33, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[33, 1, 1, "", "Cbrt"], [33, 1, 1, "", "Sqrt"], [33, 1, 1, "", "exp2"], [33, 1, 1, "", "expm1"], [33, 1, 1, "", "fma"], [33, 1, 1, "", "hypot"], [33, 1, 1, "", "log10"], [33, 1, 1, "", "log1p"], [33, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[33, 1, 1, "", "CommaOperator"], [33, 1, 1, "", "Label"], [33, 1, 1, "", "PostDecrement"], [33, 1, 1, "", "PostIncrement"], [33, 1, 1, "", "PreDecrement"], [33, 1, 1, "", "PreIncrement"], [33, 3, 1, "", "alignof"], [33, 1, 1, "", "goto"], [33, 3, 1, "", "sizeof"], [33, 1, 1, "", "struct"], [33, 1, 1, "", "union"]], "sympy.codegen.cutils": [[33, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[33, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[33, 1, 1, "", "ArrayConstructor"], [33, 1, 1, "", "Do"], [33, 1, 1, "", "Extent"], [33, 1, 1, "", "FortranReturn"], [33, 1, 1, "", "GoTo"], [33, 1, 1, "", "ImpliedDoLoop"], [33, 1, 1, "", "Module"], [33, 1, 1, "", "Program"], [33, 1, 1, "", "Subroutine"], [33, 1, 1, "", "SubroutineCall"], [33, 3, 1, "", "allocated"], [33, 3, 1, "", "array"], [33, 3, 1, "", "bind_C"], [33, 1, 1, "", "cmplx"], [33, 3, 1, "", "dimension"], [33, 1, 1, "", "dsign"], [33, 1, 1, "", "isign"], [33, 1, 1, "", "kind"], [33, 3, 1, "", "lbound"], [33, 1, 1, "", "literal_dp"], [33, 1, 1, "", "literal_sp"], [33, 1, 1, "", "merge"], [33, 3, 1, "", "reshape"], [33, 3, 1, "", "shape"], [33, 3, 1, "", "size"], [33, 1, 1, "", "use"], [33, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[33, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[33, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[33, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[33, 1, 1, "", "FuncMinusOneOptim"], [33, 1, 1, "", "Optimization"], [33, 1, 1, "", "ReplaceOptim"], [33, 3, 1, "", "create_expand_pow_optimization"], [33, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[33, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[43, 0, 0, "-", "generators"], [35, 0, 0, "-", "graycode"], [36, 0, 0, "-", "group_constructs"], [37, 0, 0, "-", "group_numbers"], [39, 0, 0, "-", "named_groups"], [40, 0, 0, "-", "partitions"], [42, 0, 0, "-", "perm_groups"], [43, 0, 0, "-", "permutations"], [44, 0, 0, "-", "polyhedron"], [45, 0, 0, "-", "prufer"], [46, 0, 0, "-", "subsets"], [47, 0, 0, "-", "tensor_can"], [48, 0, 0, "-", "testutil"], [49, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[43, 2, 1, "", "alternating"], [43, 2, 1, "", "cyclic"], [43, 2, 1, "", "dihedral"], [43, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[35, 1, 1, "", "GrayCode"], [35, 2, 1, "", "bin_to_gray"], [35, 2, 1, "", "get_subset_from_bitstring"], [35, 2, 1, "", "gray_to_bin"], [35, 2, 1, "", "graycode_subsets"], [35, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[35, 4, 1, "", "current"], [35, 2, 1, "", "generate_gray"], [35, 4, 1, "", "n"], [35, 2, 1, "", "next"], [35, 4, 1, "", "rank"], [35, 4, 1, "", "selections"], [35, 2, 1, "", "skip"], [35, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[36, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[37, 3, 1, "", "is_abelian_number"], [37, 3, 1, "", "is_cyclic_number"], [37, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[39, 3, 1, "", "AbelianGroup"], [39, 3, 1, "", "AlternatingGroup"], [39, 3, 1, "", "CyclicGroup"], [39, 3, 1, "", "DihedralGroup"], [39, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[40, 1, 1, "", "IntegerPartition"], [40, 1, 1, "", "Partition"], [40, 3, 1, "", "RGS_enum"], [40, 3, 1, "", "RGS_generalized"], [40, 3, 1, "", "RGS_rank"], [40, 3, 1, "", "RGS_unrank"], [40, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[40, 2, 1, "", "as_dict"], [40, 2, 1, "", "as_ferrers"], [40, 4, 1, "", "conjugate"], [40, 2, 1, "", "next_lex"], [40, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[40, 4, 1, "", "RGS"], [40, 2, 1, "", "from_rgs"], [40, 4, 1, "", "partition"], [40, 4, 1, "", "rank"], [40, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[42, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[42, 2, 1, "", "__contains__"], [42, 2, 1, "", "__mul__"], [42, 2, 1, "", "__new__"], [42, 5, 1, "", "__weakref__"], [42, 2, 1, "", "_coset_representative"], [42, 2, 1, "", "_distinct_primes_lemma"], [42, 4, 1, "", "_elements"], [42, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [42, 2, 1, "", "_eval_is_alt_sym_naive"], [42, 2, 1, "", "_p_elements_group"], [42, 2, 1, "", "_random_pr_init"], [42, 2, 1, "", "_sylow_alt_sym"], [42, 2, 1, "", "_union_find_merge"], [42, 2, 1, "", "_union_find_rep"], [42, 2, 1, "", "_verify"], [42, 2, 1, "", "abelian_invariants"], [42, 4, 1, "", "base"], [42, 2, 1, "", "baseswap"], [42, 4, 1, "", "basic_orbits"], [42, 4, 1, "", "basic_stabilizers"], [42, 4, 1, "", "basic_transversals"], [42, 2, 1, "", "center"], [42, 2, 1, "", "centralizer"], [42, 2, 1, "", "commutator"], [42, 2, 1, "", "composition_series"], [42, 2, 1, "", "conjugacy_class"], [42, 2, 1, "", "conjugacy_classes"], [42, 2, 1, "", "contains"], [42, 2, 1, "", "coset_factor"], [42, 2, 1, "", "coset_rank"], [42, 2, 1, "", "coset_table"], [42, 2, 1, "", "coset_transversal"], [42, 2, 1, "", "coset_unrank"], [42, 4, 1, "", "degree"], [42, 2, 1, "", "derived_series"], [42, 2, 1, "", "derived_subgroup"], [42, 4, 1, "", "elements"], [42, 2, 1, "", "equals"], [42, 2, 1, "", "generate"], [42, 2, 1, "", "generate_dimino"], [42, 2, 1, "", "generate_schreier_sims"], [42, 2, 1, "", "generator_product"], [42, 4, 1, "", "generators"], [42, 4, 1, "", "identity"], [42, 2, 1, "", "index"], [42, 4, 1, "", "is_abelian"], [42, 2, 1, "", "is_alt_sym"], [42, 4, 1, "", "is_alternating"], [42, 4, 1, "", "is_cyclic"], [42, 2, 1, "", "is_elementary"], [42, 4, 1, "", "is_nilpotent"], [42, 2, 1, "", "is_normal"], [42, 4, 1, "", "is_perfect"], [42, 4, 1, "", "is_polycyclic"], [42, 2, 1, "", "is_primitive"], [42, 4, 1, "", "is_solvable"], [42, 2, 1, "", "is_subgroup"], [42, 4, 1, "", "is_symmetric"], [42, 2, 1, "", "is_transitive"], [42, 4, 1, "", "is_trivial"], [42, 2, 1, "", "lower_central_series"], [42, 2, 1, "", "make_perm"], [42, 4, 1, "", "max_div"], [42, 2, 1, "", "minimal_block"], [42, 2, 1, "", "minimal_blocks"], [42, 2, 1, "", "normal_closure"], [42, 2, 1, "", "orbit"], [42, 2, 1, "", "orbit_rep"], [42, 2, 1, "", "orbit_transversal"], [42, 2, 1, "", "orbits"], [42, 2, 1, "", "order"], [42, 2, 1, "", "pointwise_stabilizer"], [42, 2, 1, "", "polycyclic_group"], [42, 2, 1, "", "presentation"], [42, 2, 1, "", "random"], [42, 2, 1, "", "random_pr"], [42, 2, 1, "", "random_stab"], [42, 2, 1, "", "schreier_sims"], [42, 2, 1, "", "schreier_sims_incremental"], [42, 2, 1, "", "schreier_sims_random"], [42, 2, 1, "", "schreier_vector"], [42, 2, 1, "", "stabilizer"], [42, 4, 1, "", "strong_gens"], [42, 2, 1, "", "strong_presentation"], [42, 2, 1, "", "subgroup"], [42, 2, 1, "", "subgroup_search"], [42, 2, 1, "", "sylow_subgroup"], [42, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[43, 1, 1, "", "Cycle"], [43, 1, 1, "", "Permutation"], [43, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[43, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[43, 2, 1, "", "apply"], [43, 4, 1, "", "array_form"], [43, 2, 1, "", "ascents"], [43, 2, 1, "", "atoms"], [43, 4, 1, "", "cardinality"], [43, 2, 1, "", "commutator"], [43, 2, 1, "", "commutes_with"], [43, 4, 1, "", "cycle_structure"], [43, 4, 1, "", "cycles"], [43, 4, 1, "", "cyclic_form"], [43, 2, 1, "", "descents"], [43, 2, 1, "", "from_inversion_vector"], [43, 2, 1, "", "from_sequence"], [43, 4, 1, "", "full_cyclic_form"], [43, 2, 1, "", "get_adjacency_distance"], [43, 2, 1, "", "get_adjacency_matrix"], [43, 2, 1, "", "get_positional_distance"], [43, 2, 1, "", "get_precedence_distance"], [43, 2, 1, "", "get_precedence_matrix"], [43, 2, 1, "", "index"], [43, 2, 1, "", "inversion_vector"], [43, 2, 1, "", "inversions"], [43, 4, 1, "", "is_Empty"], [43, 4, 1, "", "is_Identity"], [43, 4, 1, "", "is_Singleton"], [43, 4, 1, "", "is_even"], [43, 4, 1, "", "is_odd"], [43, 2, 1, "", "josephus"], [43, 2, 1, "", "length"], [43, 2, 1, "", "list"], [43, 2, 1, "", "max"], [43, 2, 1, "", "min"], [43, 2, 1, "", "mul_inv"], [43, 2, 1, "", "next_lex"], [43, 2, 1, "", "next_nonlex"], [43, 2, 1, "", "next_trotterjohnson"], [43, 2, 1, "", "order"], [43, 2, 1, "", "parity"], [43, 2, 1, "", "random"], [43, 2, 1, "", "rank"], [43, 2, 1, "", "rank_nonlex"], [43, 2, 1, "", "rank_trotterjohnson"], [43, 2, 1, "", "resize"], [43, 2, 1, "", "rmul"], [43, 2, 1, "", "rmul_with_af"], [43, 2, 1, "", "runs"], [43, 2, 1, "", "signature"], [43, 4, 1, "", "size"], [43, 2, 1, "", "support"], [43, 2, 1, "", "transpositions"], [43, 2, 1, "", "unrank_lex"], [43, 2, 1, "", "unrank_nonlex"], [43, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[44, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[44, 4, 1, "", "array_form"], [44, 4, 1, "", "corners"], [44, 4, 1, "", "cyclic_form"], [44, 4, 1, "", "edges"], [44, 4, 1, "", "faces"], [44, 4, 1, "", "pgroup"], [44, 2, 1, "", "reset"], [44, 2, 1, "", "rotate"], [44, 4, 1, "", "size"], [44, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[45, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[45, 2, 1, "", "edges"], [45, 2, 1, "", "next"], [45, 4, 1, "", "nodes"], [45, 2, 1, "", "prev"], [45, 2, 1, "", "prufer_rank"], [45, 4, 1, "", "prufer_repr"], [45, 4, 1, "", "rank"], [45, 4, 1, "", "size"], [45, 2, 1, "", "to_prufer"], [45, 2, 1, "", "to_tree"], [45, 4, 1, "", "tree_repr"], [45, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[46, 1, 1, "", "Subset"], [46, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[46, 2, 1, "", "bitlist_from_subset"], [46, 4, 1, "", "cardinality"], [46, 2, 1, "", "iterate_binary"], [46, 2, 1, "", "iterate_graycode"], [46, 2, 1, "", "next_binary"], [46, 2, 1, "", "next_gray"], [46, 2, 1, "", "next_lexicographic"], [46, 2, 1, "", "prev_binary"], [46, 2, 1, "", "prev_gray"], [46, 2, 1, "", "prev_lexicographic"], [46, 4, 1, "", "rank_binary"], [46, 4, 1, "", "rank_gray"], [46, 4, 1, "", "rank_lexicographic"], [46, 4, 1, "", "size"], [46, 4, 1, "", "subset"], [46, 2, 1, "", "subset_from_bitlist"], [46, 2, 1, "", "subset_indices"], [46, 4, 1, "", "superset"], [46, 4, 1, "", "superset_size"], [46, 2, 1, "", "unrank_binary"], [46, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[47, 3, 1, "", "bsgs_direct_product"], [47, 3, 1, "", "canonicalize"], [47, 3, 1, "", "double_coset_can_rep"], [47, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[48, 3, 1, "", "_cmp_perm_lists"], [48, 3, 1, "", "_naive_list_centralizer"], [48, 3, 1, "", "_verify_bsgs"], [48, 3, 1, "", "_verify_centralizer"], [48, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[49, 3, 1, "", "_base_ordering"], [49, 3, 1, "", "_check_cycles_alt_sym"], [49, 3, 1, "", "_distribute_gens_by_base"], [49, 3, 1, "", "_handle_precomputed_bsgs"], [49, 3, 1, "", "_orbits_transversals_from_bsgs"], [49, 3, 1, "", "_remove_gens"], [49, 3, 1, "", "_strip"], [49, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[50, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[50, 2, 1, "", "change_index"], [50, 4, 1, "", "has_empty_sequence"], [50, 2, 1, "", "index"], [50, 2, 1, "", "reorder"], [50, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[78, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[78, 4, 1, "", "bound_symbols"], [78, 4, 1, "", "free_symbols"], [78, 4, 1, "", "function"], [78, 4, 1, "", "has_finite_limits"], [78, 4, 1, "", "has_reversed_limits"], [78, 4, 1, "", "is_number"], [78, 4, 1, "", "limits"], [78, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[50, 3, 1, "", "gosper_normal"], [50, 3, 1, "", "gosper_sum"], [50, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[50, 1, 1, "", "Product"], [50, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[50, 2, 1, "", "is_convergent"], [50, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[50, 1, 1, "", "Sum"], [50, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[50, 2, 1, "", "euler_maclaurin"], [50, 2, 1, "", "eval_zeta_function"], [50, 2, 1, "", "is_absolutely_convergent"], [50, 2, 1, "", "is_convergent"], [50, 2, 1, "", "reverse_order"]], "sympy.core": [[51, 0, 0, "-", "add"], [51, 0, 0, "-", "assumptions"], [51, 0, 0, "-", "basic"], [51, 0, 0, "-", "cache"], [51, 0, 0, "-", "containers"], [51, 0, 0, "-", "core"], [51, 0, 0, "-", "evalf"], [51, 0, 0, "-", "expr"], [51, 0, 0, "-", "exprtools"], [51, 0, 0, "-", "function"], [51, 0, 0, "-", "kind"], [51, 0, 0, "-", "mod"], [51, 0, 0, "-", "mul"], [51, 0, 0, "-", "multidimensional"], [51, 0, 0, "-", "numbers"], [51, 0, 0, "-", "power"], [51, 0, 0, "-", "random"], [51, 0, 0, "-", "relational"], [51, 0, 0, "-", "singleton"], [51, 0, 0, "-", "symbol"], [51, 0, 0, "-", "sympify"], [51, 0, 0, "-", "traversal"]], "sympy.core.add": [[51, 1, 1, "", "Add"]], "sympy.core.add.Add": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_add"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_numer_denom"], [51, 2, 1, "", "as_real_imag"], [51, 2, 1, "", "as_two_terms"], [51, 2, 1, "", "class_key"], [51, 2, 1, "", "extract_leading_order"], [51, 2, 1, "", "flatten"], [51, 2, 1, "", "primitive"]], "sympy.core.basic": [[51, 1, 1, "", "Atom"], [51, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[51, 4, 1, "", "args"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_dummy"], [51, 4, 1, "", "assumptions0"], [51, 2, 1, "", "atoms"], [51, 4, 1, "", "canonical_variables"], [51, 2, 1, "", "class_key"], [51, 2, 1, "", "compare"], [51, 2, 1, "", "count"], [51, 2, 1, "", "count_ops"], [51, 2, 1, "", "doit"], [51, 2, 1, "", "dummy_eq"], [51, 2, 1, "", "find"], [51, 4, 1, "", "free_symbols"], [51, 2, 1, "", "fromiter"], [51, 4, 1, "", "func"], [51, 2, 1, "", "has"], [51, 2, 1, "", "has_free"], [51, 4, 1, "", "is_comparable"], [51, 2, 1, "", "match"], [51, 2, 1, "", "matches"], [51, 2, 1, "", "rcall"], [51, 2, 1, "", "refine"], [51, 2, 1, "", "replace"], [51, 2, 1, "", "rewrite"], [51, 2, 1, "", "simplify"], [51, 2, 1, "", "sort_key"], [51, 2, 1, "", "subs"], [51, 2, 1, "", "xreplace"]], "sympy.core.cache": [[51, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[51, 1, 1, "", "Dict"], [51, 1, 1, "", "Tuple"], [51, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[51, 2, 1, "", "get"], [51, 2, 1, "", "items"], [51, 2, 1, "", "keys"], [51, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[51, 2, 1, "", "index"], [51, 4, 1, "", "kind"], [51, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[51, 1, 1, "", "EvalfMixin"], [51, 3, 1, "", "N"], [51, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[51, 2, 1, "", "evalf"], [51, 2, 1, "", "n"]], "sympy.core.expr": [[51, 1, 1, "", "AtomicExpr"], [51, 1, 1, "", "Expr"], [51, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[51, 2, 1, "", "apart"], [51, 2, 1, "", "args_cnc"], [51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_coeff_add"], [51, 2, 1, "", "as_coeff_exponent"], [51, 2, 1, "", "as_coeff_mul"], [51, 2, 1, "", "as_coefficient"], [51, 2, 1, "", "as_coefficients_dict"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_expr"], [51, 2, 1, "", "as_independent"], [51, 2, 1, "", "as_leading_term"], [51, 2, 1, "", "as_numer_denom"], [51, 2, 1, "", "as_ordered_factors"], [51, 2, 1, "", "as_ordered_terms"], [51, 2, 1, "", "as_poly"], [51, 2, 1, "", "as_powers_dict"], [51, 2, 1, "", "as_real_imag"], [51, 2, 1, "", "as_terms"], [51, 2, 1, "", "aseries"], [51, 2, 1, "", "cancel"], [51, 2, 1, "", "coeff"], [51, 2, 1, "", "collect"], [51, 2, 1, "", "combsimp"], [51, 2, 1, "", "compute_leading_term"], [51, 2, 1, "", "conjugate"], [51, 2, 1, "", "could_extract_minus_sign"], [51, 2, 1, "", "count_ops"], [51, 2, 1, "", "equals"], [51, 2, 1, "", "expand"], [51, 4, 1, "", "expr_free_symbols"], [51, 2, 1, "", "extract_additively"], [51, 2, 1, "", "extract_branch_factor"], [51, 2, 1, "", "extract_multiplicatively"], [51, 2, 1, "", "factor"], [51, 2, 1, "", "fourier_series"], [51, 2, 1, "", "fps"], [51, 2, 1, "", "gammasimp"], [51, 2, 1, "", "getO"], [51, 2, 1, "", "getn"], [51, 2, 1, "", "integrate"], [51, 2, 1, "", "invert"], [51, 2, 1, "", "is_algebraic_expr"], [51, 2, 1, "", "is_constant"], [51, 2, 1, "", "is_meromorphic"], [51, 4, 1, "", "is_number"], [51, 2, 1, "", "is_polynomial"], [51, 2, 1, "", "is_rational_function"], [51, 2, 1, "", "leadterm"], [51, 2, 1, "", "limit"], [51, 2, 1, "", "lseries"], [51, 2, 1, "", "normal"], [51, 2, 1, "", "nseries"], [51, 2, 1, "", "nsimplify"], [51, 2, 1, "", "powsimp"], [51, 2, 1, "", "primitive"], [51, 2, 1, "", "radsimp"], [51, 2, 1, "", "ratsimp"], [51, 2, 1, "", "removeO"], [51, 2, 1, "", "round"], [51, 2, 1, "", "separate"], [51, 2, 1, "", "series"], [51, 2, 1, "", "taylor_term"], [51, 2, 1, "", "together"], [51, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[51, 3, 1, "", "factor_terms"], [51, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[51, 1, 1, "", "Derivative"], [51, 1, 1, "", "Function"], [51, 1, 1, "", "FunctionClass"], [51, 1, 1, "", "Lambda"], [51, 1, 1, "", "PoleError"], [51, 1, 1, "", "Subs"], [51, 1, 1, "", "WildFunction"], [51, 3, 1, "", "count_ops"], [51, 3, 1, "", "diff"], [51, 3, 1, "", "expand"], [51, 3, 1, "", "expand_complex"], [51, 3, 1, "", "expand_func"], [51, 3, 1, "", "expand_log"], [51, 3, 1, "", "expand_mul"], [51, 3, 1, "", "expand_multinomial"], [51, 3, 1, "", "expand_power_base"], [51, 3, 1, "", "expand_power_exp"], [51, 3, 1, "", "expand_trig"], [51, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[51, 4, 1, "", "_diff_wrt"], [51, 2, 1, "", "_sort_variable_count"], [51, 2, 1, "", "as_finite_difference"], [51, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[51, 2, 1, "", "as_base_exp"], [51, 2, 1, "", "fdiff"], [51, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[51, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[51, 4, 1, "", "bound_symbols"], [51, 4, 1, "", "expr"], [51, 4, 1, "", "is_identity"], [51, 4, 1, "", "signature"], [51, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[51, 4, 1, "", "bound_symbols"], [51, 4, 1, "", "expr"], [51, 4, 1, "", "point"], [51, 4, 1, "", "variables"]], "sympy.core.kind": [[51, 5, 1, "", "BooleanKind"], [51, 1, 1, "", "Kind"], [51, 5, 1, "", "NumberKind"], [51, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[51, 1, 1, "", "Mod"]], "sympy.core.mul": [[51, 1, 1, "", "Mul"], [51, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_ordered_factors"], [51, 2, 1, "", "as_two_terms"], [51, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[51, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[51, 1, 1, "", "AlgebraicNumber"], [51, 1, 1, "", "Catalan"], [51, 1, 1, "", "ComplexInfinity"], [51, 1, 1, "", "EulerGamma"], [51, 1, 1, "", "Exp1"], [51, 1, 1, "", "Float"], [51, 1, 1, "", "GoldenRatio"], [51, 1, 1, "", "Half"], [51, 1, 1, "", "ImaginaryUnit"], [51, 1, 1, "", "Infinity"], [51, 1, 1, "", "Integer"], [51, 1, 1, "", "NaN"], [51, 1, 1, "", "NegativeInfinity"], [51, 1, 1, "", "NegativeOne"], [51, 1, 1, "", "Number"], [51, 1, 1, "", "NumberSymbol"], [51, 1, 1, "", "One"], [51, 1, 1, "", "Pi"], [51, 1, 1, "", "Rational"], [51, 5, 1, "", "RealNumber"], [51, 1, 1, "", "TribonacciConstant"], [51, 1, 1, "", "Zero"], [51, 3, 1, "", "igcd"], [51, 3, 1, "", "ilcm"], [51, 3, 1, "", "mod_inverse"], [51, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[51, 2, 1, "", "__new__"], [51, 2, 1, "", "as_expr"], [51, 2, 1, "", "as_poly"], [51, 2, 1, "", "coeffs"], [51, 2, 1, "", "field_element"], [51, 4, 1, "", "is_aliased"], [51, 4, 1, "", "is_primitive_element"], [51, 2, 1, "", "minpoly_of_element"], [51, 2, 1, "", "native_coeffs"], [51, 2, 1, "", "primitive_element"], [51, 2, 1, "", "to_algebraic_integer"], [51, 2, 1, "", "to_primitive_element"], [51, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "cofactors"], [51, 2, 1, "", "gcd"], [51, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[51, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "factors"], [51, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[51, 1, 1, "", "Pow"], [51, 3, 1, "", "integer_log"], [51, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[51, 2, 1, "", "as_base_exp"], [51, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[51, 3, 1, "", "_randint"], [51, 3, 1, "", "_randrange"], [51, 3, 1, "", "random_complex_number"], [51, 3, 1, "", "test_derivative_numerically"], [51, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[51, 5, 1, "", "Eq"], [51, 1, 1, "", "Equality"], [51, 5, 1, "", "Ge"], [51, 1, 1, "", "GreaterThan"], [51, 5, 1, "", "Gt"], [51, 5, 1, "", "Le"], [51, 1, 1, "", "LessThan"], [51, 5, 1, "", "Lt"], [51, 5, 1, "", "Ne"], [51, 5, 1, "", "Rel"], [51, 1, 1, "", "Relational"], [51, 1, 1, "", "StrictGreaterThan"], [51, 1, 1, "", "StrictLessThan"], [51, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[51, 2, 1, "", "as_poly"], [51, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[51, 4, 1, "", "canonical"], [51, 2, 1, "", "equals"], [51, 4, 1, "", "lhs"], [51, 4, 1, "", "negated"], [51, 4, 1, "", "reversed"], [51, 4, 1, "", "reversedsign"], [51, 4, 1, "", "rhs"], [51, 4, 1, "", "strict"], [51, 4, 1, "", "weak"]], "sympy.core.singleton": [[51, 1, 1, "", "Singleton"], [51, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[51, 3, 1, "", "default_sort_key"], [51, 3, 1, "", "ordered"]], "sympy.core.symbol": [[51, 1, 1, "", "Dummy"], [51, 1, 1, "", "Symbol"], [51, 1, 1, "", "Wild"], [51, 3, 1, "", "symbols"], [51, 3, 1, "", "var"]], "sympy.core.sympify": [[51, 3, 1, "", "sympify"]], "sympy.core.traversal": [[51, 3, 1, "", "bottom_up"], [51, 3, 1, "", "postorder_traversal"], [51, 3, 1, "", "preorder_traversal"], [51, 3, 1, "", "use"], [51, 3, 1, "", "walk"]], "sympy.crypto": [[52, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[52, 3, 1, "", "AZ"], [52, 3, 1, "", "bifid5_square"], [52, 3, 1, "", "bifid6_square"], [52, 3, 1, "", "check_and_join"], [52, 3, 1, "", "cycle_list"], [52, 3, 1, "", "decipher_affine"], [52, 3, 1, "", "decipher_atbash"], [52, 3, 1, "", "decipher_bifid"], [52, 3, 1, "", "decipher_bifid5"], [52, 3, 1, "", "decipher_bifid6"], [52, 3, 1, "", "decipher_elgamal"], [52, 3, 1, "", "decipher_gm"], [52, 3, 1, "", "decipher_hill"], [52, 3, 1, "", "decipher_kid_rsa"], [52, 3, 1, "", "decipher_railfence"], [52, 3, 1, "", "decipher_rot13"], [52, 3, 1, "", "decipher_rsa"], [52, 3, 1, "", "decipher_shift"], [52, 3, 1, "", "decipher_vigenere"], [52, 3, 1, "", "decode_morse"], [52, 3, 1, "", "dh_private_key"], [52, 3, 1, "", "dh_public_key"], [52, 3, 1, "", "dh_shared_key"], [52, 3, 1, "", "elgamal_private_key"], [52, 3, 1, "", "elgamal_public_key"], [52, 3, 1, "", "encipher_affine"], [52, 3, 1, "", "encipher_atbash"], [52, 3, 1, "", "encipher_bifid"], [52, 3, 1, "", "encipher_bifid5"], [52, 3, 1, "", "encipher_bifid6"], [52, 3, 1, "", "encipher_elgamal"], [52, 3, 1, "", "encipher_gm"], [52, 3, 1, "", "encipher_hill"], [52, 3, 1, "", "encipher_kid_rsa"], [52, 3, 1, "", "encipher_railfence"], [52, 3, 1, "", "encipher_rot13"], [52, 3, 1, "", "encipher_rsa"], [52, 3, 1, "", "encipher_shift"], [52, 3, 1, "", "encipher_substitution"], [52, 3, 1, "", "encipher_vigenere"], [52, 3, 1, "", "encode_morse"], [52, 3, 1, "", "gm_private_key"], [52, 3, 1, "", "gm_public_key"], [52, 3, 1, "", "kid_rsa_private_key"], [52, 3, 1, "", "kid_rsa_public_key"], [52, 3, 1, "", "lfsr_autocorrelation"], [52, 3, 1, "", "lfsr_connection_polynomial"], [52, 3, 1, "", "lfsr_sequence"], [52, 3, 1, "", "padded_key"], [52, 3, 1, "", "rsa_private_key"], [52, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[53, 1, 1, "", "BaseCovarDerivativeOp"], [53, 1, 1, "", "BaseScalarField"], [53, 1, 1, "", "BaseVectorField"], [53, 1, 1, "", "Commutator"], [53, 1, 1, "", "CoordSystem"], [53, 1, 1, "", "CoordinateSymbol"], [53, 1, 1, "", "CovarDerivativeOp"], [53, 1, 1, "", "Differential"], [53, 1, 1, "", "LieDerivative"], [53, 1, 1, "", "Manifold"], [53, 1, 1, "", "Patch"], [53, 1, 1, "", "Point"], [53, 1, 1, "", "TensorProduct"], [53, 1, 1, "", "WedgeProduct"], [53, 3, 1, "", "intcurve_diffequ"], [53, 3, 1, "", "intcurve_series"], [53, 3, 1, "", "metric_to_Christoffel_1st"], [53, 3, 1, "", "metric_to_Christoffel_2nd"], [53, 3, 1, "", "metric_to_Ricci_components"], [53, 3, 1, "", "metric_to_Riemann_components"], [53, 3, 1, "", "twoform_to_matrix"], [53, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[53, 2, 1, "", "base_oneform"], [53, 2, 1, "", "base_oneforms"], [53, 2, 1, "", "base_scalar"], [53, 2, 1, "", "base_scalars"], [53, 2, 1, "", "base_vector"], [53, 2, 1, "", "base_vectors"], [53, 2, 1, "", "coord_function"], [53, 2, 1, "", "coord_functions"], [53, 2, 1, "", "coord_tuple_transform_to"], [53, 2, 1, "", "jacobian"], [53, 2, 1, "", "jacobian_determinant"], [53, 2, 1, "", "jacobian_matrix"], [53, 2, 1, "", "point"], [53, 2, 1, "", "point_to_coords"], [53, 2, 1, "", "transform"], [53, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[53, 2, 1, "", "coords"]], "sympy.discrete": [[54, 0, 0, "-", "convolutions"], [54, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[54, 3, 1, "", "convolution"], [54, 3, 1, "", "convolution_fft"], [54, 3, 1, "", "convolution_fwht"], [54, 3, 1, "", "convolution_ntt"], [54, 3, 1, "", "convolution_subset"], [54, 3, 1, "", "covering_product"], [54, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[54, 3, 1, "", "fft"], [54, 3, 1, "", "fwht"], [54, 3, 1, "", "ifft"], [54, 3, 1, "", "ifwht"], [54, 3, 1, "", "intt"], [54, 3, 1, "", "inverse_mobius_transform"], [54, 3, 1, "", "mobius_transform"], [54, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[188, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[56, 1, 1, "", "FallingFactorial"], [56, 1, 1, "", "MultiFactorial"], [56, 1, 1, "", "RisingFactorial"], [56, 1, 1, "", "binomial"], [56, 1, 1, "", "factorial"], [56, 1, 1, "", "factorial2"], [56, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[56, 1, 1, "", "bell"], [56, 1, 1, "", "bernoulli"], [56, 1, 1, "", "catalan"], [56, 1, 1, "", "euler"], [56, 1, 1, "", "fibonacci"], [56, 1, 1, "", "genocchi"], [56, 1, 1, "", "harmonic"], [56, 1, 1, "", "lucas"], [56, 3, 1, "", "nC"], [56, 3, 1, "", "nP"], [56, 3, 1, "", "nT"], [56, 1, 1, "", "partition"], [56, 3, 1, "", "stirling"], [56, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[57, 1, 1, "", "Abs"], [57, 1, 1, "", "arg"], [57, 1, 1, "", "conjugate"], [57, 1, 1, "", "im"], [57, 1, 1, "", "periodic_argument"], [57, 1, 1, "", "polar_lift"], [57, 1, 1, "", "principal_branch"], [57, 1, 1, "", "re"], [57, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[57, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[57, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[57, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[57, 1, 1, "", "LambertW"], [57, 1, 1, "", "exp"], [57, 1, 1, "", "exp_polar"], [57, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[57, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[57, 2, 1, "", "as_real_imag"], [57, 4, 1, "", "base"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[57, 2, 1, "", "as_base_exp"], [57, 2, 1, "", "as_real_imag"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "inverse"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[57, 1, 1, "", "HyperbolicFunction"], [57, 1, 1, "", "acosh"], [57, 1, 1, "", "acoth"], [57, 1, 1, "", "acsch"], [57, 1, 1, "", "asech"], [57, 1, 1, "", "asinh"], [57, 1, 1, "", "atanh"], [57, 1, 1, "", "cosh"], [57, 1, 1, "", "coth"], [57, 1, 1, "", "csch"], [57, 1, 1, "", "sech"], [57, 1, 1, "", "sinh"], [57, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[57, 2, 1, "", "fdiff"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[57, 2, 1, "", "as_real_imag"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "inverse"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[57, 1, 1, "", "RoundFunction"], [57, 1, 1, "", "ceiling"], [57, 1, 1, "", "floor"], [57, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[57, 1, 1, "", "IdentityFunction"], [57, 1, 1, "", "Max"], [57, 1, 1, "", "Min"], [57, 3, 1, "", "cbrt"], [57, 3, 1, "", "real_root"], [57, 3, 1, "", "root"], [57, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[57, 1, 1, "", "ExprCondPair"], [57, 1, 1, "", "Piecewise"], [57, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[57, 4, 1, "", "cond"], [57, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[57, 2, 1, "", "_eval_integral"], [57, 2, 1, "", "as_expr_set_pairs"], [57, 2, 1, "", "doit"], [57, 2, 1, "", "eval"], [57, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[57, 1, 1, "", "acos"], [57, 1, 1, "", "acot"], [57, 1, 1, "", "acsc"], [57, 1, 1, "", "asec"], [57, 1, 1, "", "asin"], [57, 1, 1, "", "atan"], [57, 1, 1, "", "atan2"], [57, 1, 1, "", "cos"], [57, 1, 1, "", "cot"], [57, 1, 1, "", "csc"], [57, 1, 1, "", "sec"], [57, 1, 1, "", "sin"], [57, 1, 1, "", "sinc"], [57, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[57, 2, 1, "", "inverse"]], "sympy.functions.special": [[59, 0, 0, "-", "bessel"], [59, 0, 0, "-", "beta_functions"], [59, 0, 0, "-", "elliptic_integrals"], [59, 0, 0, "-", "error_functions"], [59, 0, 0, "-", "gamma_functions"], [59, 0, 0, "-", "mathieu_functions"], [59, 0, 0, "-", "polynomials"], [59, 0, 0, "-", "singularity_functions"], [59, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[59, 1, 1, "", "AiryBase"], [59, 1, 1, "", "BesselBase"], [59, 1, 1, "", "airyai"], [59, 1, 1, "", "airyaiprime"], [59, 1, 1, "", "airybi"], [59, 1, 1, "", "airybiprime"], [59, 1, 1, "", "besseli"], [59, 1, 1, "", "besselj"], [59, 1, 1, "", "besselk"], [59, 1, 1, "", "bessely"], [59, 1, 1, "", "hankel1"], [59, 1, 1, "", "hankel2"], [59, 1, 1, "", "jn"], [59, 3, 1, "", "jn_zeros"], [59, 1, 1, "", "marcumq"], [59, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[59, 4, 1, "", "argument"], [59, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[59, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[59, 3, 1, "", "bspline_basis"], [59, 3, 1, "", "bspline_basis_set"], [59, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[59, 1, 1, "", "DiracDelta"], [59, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"], [59, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"], [59, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[59, 1, 1, "", "elliptic_e"], [59, 1, 1, "", "elliptic_f"], [59, 1, 1, "", "elliptic_k"], [59, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[59, 1, 1, "", "Chi"], [59, 1, 1, "", "Ci"], [59, 3, 1, "", "E1"], [59, 1, 1, "", "Ei"], [59, 1, 1, "", "FresnelIntegral"], [59, 1, 1, "", "Li"], [59, 1, 1, "", "Shi"], [59, 1, 1, "", "Si"], [59, 1, 1, "", "erf"], [59, 1, 1, "", "erf2"], [59, 1, 1, "", "erf2inv"], [59, 1, 1, "", "erfc"], [59, 1, 1, "", "erfcinv"], [59, 1, 1, "", "erfi"], [59, 1, 1, "", "erfinv"], [59, 1, 1, "", "expint"], [59, 1, 1, "", "fresnelc"], [59, 1, 1, "", "fresnels"], [59, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[59, 1, 1, "", "digamma"], [59, 1, 1, "", "gamma"], [59, 1, 1, "", "loggamma"], [59, 1, 1, "", "lowergamma"], [59, 1, 1, "", "multigamma"], [59, 1, 1, "", "polygamma"], [59, 1, 1, "", "trigamma"], [59, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[59, 1, 1, "", "appellf1"], [59, 1, 1, "", "hyper"], [59, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[59, 4, 1, "", "ap"], [59, 4, 1, "", "argument"], [59, 4, 1, "", "bq"], [59, 4, 1, "", "convergence_statement"], [59, 4, 1, "", "eta"], [59, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[59, 4, 1, "", "an"], [59, 4, 1, "", "aother"], [59, 4, 1, "", "ap"], [59, 4, 1, "", "argument"], [59, 4, 1, "", "bm"], [59, 4, 1, "", "bother"], [59, 4, 1, "", "bq"], [59, 4, 1, "", "delta"], [59, 2, 1, "", "get_period"], [59, 2, 1, "", "integrand"], [59, 4, 1, "", "is_number"], [59, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[59, 1, 1, "", "MathieuBase"], [59, 1, 1, "", "mathieuc"], [59, 1, 1, "", "mathieucprime"], [59, 1, 1, "", "mathieus"], [59, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[59, 1, 1, "", "assoc_laguerre"], [59, 1, 1, "", "assoc_legendre"], [59, 1, 1, "", "chebyshevt"], [59, 1, 1, "", "chebyshevt_root"], [59, 1, 1, "", "chebyshevu"], [59, 1, 1, "", "chebyshevu_root"], [59, 1, 1, "", "gegenbauer"], [59, 1, 1, "", "hermite"], [59, 1, 1, "", "jacobi"], [59, 3, 1, "", "jacobi_normalized"], [59, 1, 1, "", "laguerre"], [59, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[59, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[59, 1, 1, "", "Ynm"], [59, 3, 1, "", "Ynm_c"], [59, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[59, 3, 1, "", "Eijk"], [59, 1, 1, "", "KroneckerDelta"], [59, 1, 1, "", "LeviCivita"], [59, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[59, 2, 1, "", "eval"], [59, 4, 1, "", "indices_contain_equal_information"], [59, 4, 1, "", "is_above_fermi"], [59, 4, 1, "", "is_below_fermi"], [59, 4, 1, "", "is_only_above_fermi"], [59, 4, 1, "", "is_only_below_fermi"], [59, 4, 1, "", "killable_index"], [59, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[59, 1, 1, "", "dirichlet_eta"], [59, 1, 1, "", "lerchphi"], [59, 1, 1, "", "polylog"], [59, 1, 1, "", "stieltjes"], [59, 1, 1, "", "zeta"]], "sympy.geometry": [[60, 0, 0, "-", "curve"], [61, 0, 0, "-", "ellipse"], [62, 0, 0, "-", "entity"], [64, 0, 0, "-", "line"], [65, 0, 0, "-", "plane"], [66, 0, 0, "-", "point"], [67, 0, 0, "-", "polygon"], [68, 0, 0, "-", "util"]], "sympy.geometry.curve": [[60, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[60, 4, 1, "", "ambient_dimension"], [60, 2, 1, "", "arbitrary_point"], [60, 4, 1, "", "free_symbols"], [60, 4, 1, "", "functions"], [60, 4, 1, "", "length"], [60, 4, 1, "", "limits"], [60, 4, 1, "", "parameter"], [60, 2, 1, "", "plot_interval"], [60, 2, 1, "", "rotate"], [60, 2, 1, "", "scale"], [60, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[61, 1, 1, "", "Circle"], [61, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[61, 4, 1, "", "circumference"], [61, 2, 1, "", "equation"], [61, 2, 1, "", "intersection"], [61, 4, 1, "", "radius"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "scale"], [61, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[61, 4, 1, "", "apoapsis"], [61, 2, 1, "", "arbitrary_point"], [61, 4, 1, "", "area"], [61, 2, 1, "", "auxiliary_circle"], [61, 4, 1, "", "bounds"], [61, 4, 1, "", "center"], [61, 4, 1, "", "circumference"], [61, 2, 1, "", "director_circle"], [61, 4, 1, "", "eccentricity"], [61, 2, 1, "", "encloses_point"], [61, 2, 1, "", "equation"], [61, 2, 1, "", "evolute"], [61, 4, 1, "", "foci"], [61, 4, 1, "", "focus_distance"], [61, 4, 1, "", "hradius"], [61, 2, 1, "", "intersection"], [61, 2, 1, "", "is_tangent"], [61, 4, 1, "", "major"], [61, 4, 1, "", "minor"], [61, 2, 1, "", "normal_lines"], [61, 4, 1, "", "periapsis"], [61, 2, 1, "", "plot_interval"], [61, 2, 1, "", "polar_second_moment_of_area"], [61, 2, 1, "", "random_point"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "rotate"], [61, 2, 1, "", "scale"], [61, 2, 1, "", "second_moment_of_area"], [61, 2, 1, "", "section_modulus"], [61, 4, 1, "", "semilatus_rectum"], [61, 2, 1, "", "tangent_lines"], [61, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[62, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[62, 4, 1, "", "ambient_dimension"], [62, 4, 1, "", "bounds"], [62, 2, 1, "", "encloses"], [62, 2, 1, "", "intersection"], [62, 2, 1, "", "is_similar"], [62, 2, 1, "", "parameter_value"], [62, 2, 1, "", "reflect"], [62, 2, 1, "", "rotate"], [62, 2, 1, "", "scale"], [62, 2, 1, "", "translate"]], "sympy.geometry.line": [[64, 1, 1, "", "Line"], [64, 1, 1, "", "Line2D"], [64, 1, 1, "", "Line3D"], [64, 1, 1, "", "LinearEntity"], [64, 1, 1, "", "LinearEntity2D"], [64, 1, 1, "", "LinearEntity3D"], [64, 1, 1, "", "Ray"], [64, 1, 1, "", "Ray2D"], [64, 1, 1, "", "Ray3D"], [64, 1, 1, "", "Segment"], [64, 1, 1, "", "Segment2D"], [64, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[64, 4, 1, "", "coefficients"], [64, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[64, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[64, 4, 1, "", "ambient_dimension"], [64, 2, 1, "", "angle_between"], [64, 2, 1, "", "arbitrary_point"], [64, 2, 1, "", "are_concurrent"], [64, 2, 1, "", "bisectors"], [64, 2, 1, "", "contains"], [64, 4, 1, "", "direction"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "is_parallel"], [64, 2, 1, "", "is_perpendicular"], [64, 2, 1, "", "is_similar"], [64, 4, 1, "", "length"], [64, 4, 1, "", "p1"], [64, 4, 1, "", "p2"], [64, 2, 1, "", "parallel_line"], [64, 2, 1, "", "perpendicular_line"], [64, 2, 1, "", "perpendicular_segment"], [64, 4, 1, "", "points"], [64, 2, 1, "", "projection"], [64, 2, 1, "", "random_point"], [64, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[64, 4, 1, "", "bounds"], [64, 2, 1, "", "perpendicular_line"], [64, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[64, 4, 1, "", "direction_cosine"], [64, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "plot_interval"], [64, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[64, 2, 1, "", "closing_angle"], [64, 4, 1, "", "xdirection"], [64, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[64, 4, 1, "", "xdirection"], [64, 4, 1, "", "ydirection"], [64, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 4, 1, "", "length"], [64, 4, 1, "", "midpoint"], [64, 2, 1, "", "perpendicular_bisector"], [64, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[65, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[65, 2, 1, "", "angle_between"], [65, 2, 1, "", "arbitrary_point"], [65, 2, 1, "", "are_concurrent"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "equals"], [65, 2, 1, "", "equation"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "is_coplanar"], [65, 2, 1, "", "is_parallel"], [65, 2, 1, "", "is_perpendicular"], [65, 4, 1, "", "normal_vector"], [65, 4, 1, "", "p1"], [65, 2, 1, "", "parallel_plane"], [65, 2, 1, "", "parameter_value"], [65, 2, 1, "", "perpendicular_line"], [65, 2, 1, "", "perpendicular_plane"], [65, 2, 1, "", "projection"], [65, 2, 1, "", "projection_line"], [65, 2, 1, "", "random_point"]], "sympy.geometry.point": [[66, 1, 1, "", "Point"], [66, 1, 1, "", "Point2D"], [66, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[66, 2, 1, "", "affine_rank"], [66, 4, 1, "", "ambient_dimension"], [66, 2, 1, "", "are_coplanar"], [66, 2, 1, "", "canberra_distance"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "dot"], [66, 2, 1, "", "equals"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "is_collinear"], [66, 2, 1, "", "is_concyclic"], [66, 4, 1, "", "is_nonzero"], [66, 2, 1, "", "is_scalar_multiple"], [66, 4, 1, "", "is_zero"], [66, 4, 1, "", "length"], [66, 2, 1, "", "midpoint"], [66, 4, 1, "", "origin"], [66, 4, 1, "", "orthogonal_direction"], [66, 2, 1, "", "project"], [66, 2, 1, "", "taxicab_distance"], [66, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[66, 4, 1, "", "bounds"], [66, 4, 1, "", "coordinates"], [66, 2, 1, "", "rotate"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "transform"], [66, 2, 1, "", "translate"], [66, 4, 1, "", "x"], [66, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[66, 2, 1, "", "are_collinear"], [66, 4, 1, "", "coordinates"], [66, 2, 1, "", "direction_cosine"], [66, 2, 1, "", "direction_ratio"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "transform"], [66, 2, 1, "", "translate"], [66, 4, 1, "", "x"], [66, 4, 1, "", "y"], [66, 4, 1, "", "z"]], "sympy.geometry.polygon": [[67, 1, 1, "", "Polygon"], [67, 1, 1, "", "RegularPolygon"], [67, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[67, 4, 1, "", "angles"], [67, 2, 1, "", "arbitrary_point"], [67, 4, 1, "", "area"], [67, 2, 1, "", "bisectors"], [67, 4, 1, "", "bounds"], [67, 4, 1, "", "centroid"], [67, 2, 1, "", "cut_section"], [67, 2, 1, "", "distance"], [67, 2, 1, "", "encloses_point"], [67, 2, 1, "", "first_moment_of_area"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "is_convex"], [67, 4, 1, "", "perimeter"], [67, 2, 1, "", "plot_interval"], [67, 2, 1, "", "polar_second_moment_of_area"], [67, 2, 1, "", "second_moment_of_area"], [67, 2, 1, "", "section_modulus"], [67, 4, 1, "", "sides"], [67, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[67, 4, 1, "", "angles"], [67, 4, 1, "", "apothem"], [67, 4, 1, "", "area"], [67, 4, 1, "", "args"], [67, 4, 1, "", "center"], [67, 4, 1, "", "centroid"], [67, 4, 1, "", "circumcenter"], [67, 4, 1, "", "circumcircle"], [67, 4, 1, "", "circumradius"], [67, 2, 1, "", "encloses_point"], [67, 4, 1, "", "exterior_angle"], [67, 4, 1, "", "incircle"], [67, 4, 1, "", "inradius"], [67, 4, 1, "", "interior_angle"], [67, 4, 1, "", "length"], [67, 4, 1, "", "radius"], [67, 2, 1, "", "reflect"], [67, 2, 1, "", "rotate"], [67, 4, 1, "", "rotation"], [67, 2, 1, "", "scale"], [67, 2, 1, "", "spin"], [67, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[67, 4, 1, "", "altitudes"], [67, 2, 1, "", "bisectors"], [67, 4, 1, "", "circumcenter"], [67, 4, 1, "", "circumcircle"], [67, 4, 1, "", "circumradius"], [67, 4, 1, "", "eulerline"], [67, 4, 1, "", "excenters"], [67, 4, 1, "", "exradii"], [67, 4, 1, "", "incenter"], [67, 4, 1, "", "incircle"], [67, 4, 1, "", "inradius"], [67, 2, 1, "", "is_equilateral"], [67, 2, 1, "", "is_isosceles"], [67, 2, 1, "", "is_right"], [67, 2, 1, "", "is_scalene"], [67, 2, 1, "", "is_similar"], [67, 4, 1, "", "medial"], [67, 4, 1, "", "medians"], [67, 4, 1, "", "nine_point_circle"], [67, 4, 1, "", "orthocenter"], [67, 4, 1, "", "vertices"]], "sympy.geometry.util": [[68, 3, 1, "", "are_similar"], [68, 3, 1, "", "centroid"], [68, 3, 1, "", "convex_hull"], [68, 3, 1, "", "idiff"], [68, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[74, 1, 1, "", "DifferentialOperator"], [74, 1, 1, "", "DifferentialOperatorAlgebra"], [74, 3, 1, "", "DifferentialOperators"], [74, 1, 1, "", "HolonomicFunction"], [72, 3, 1, "", "_convert_poly_rat_alg"], [72, 3, 1, "", "_create_table"], [70, 3, 1, "", "expr_to_holonomic"], [70, 3, 1, "", "from_hyper"], [70, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[74, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[73, 2, 1, "", "composition"], [73, 2, 1, "", "diff"], [73, 2, 1, "", "evalf"], [73, 2, 1, "", "integrate"], [73, 2, 1, "", "series"], [73, 2, 1, "", "to_expr"], [73, 2, 1, "", "to_hyper"], [73, 2, 1, "", "to_meijerg"], [73, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[78, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[78, 3, 1, "", "components"], [78, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[78, 1, 1, "", "Integral"], [78, 3, 1, "", "integrate"], [78, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[78, 2, 1, "", "as_sum"], [78, 2, 1, "", "doit"], [78, 4, 1, "", "free_symbols"], [78, 6, 1, "", "is_commutative"], [78, 2, 1, "", "principal_value"], [78, 2, 1, "", "transform"]], "sympy.integrals": [[78, 0, 0, "-", "intpoly"], [76, 0, 0, "-", "meijerint"], [76, 0, 0, "-", "meijerint_doc"], [78, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[78, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[78, 3, 1, "", "integral_steps"], [78, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[76, 7, 1, "", "_CoeffExpValueError"], [76, 3, 1, "", "_check_antecedents"], [76, 3, 1, "", "_check_antecedents_1"], [76, 3, 1, "", "_check_antecedents_inversion"], [76, 3, 1, "", "_condsimp"], [76, 3, 1, "", "_create_lookup_table"], [76, 3, 1, "", "_dummy"], [76, 3, 1, "", "_dummy_"], [76, 3, 1, "", "_eval_cond"], [76, 3, 1, "", "_exponents"], [76, 3, 1, "", "_find_splitting_points"], [76, 3, 1, "", "_flip_g"], [76, 3, 1, "", "_functions"], [76, 3, 1, "", "_get_coeff_exp"], [76, 3, 1, "", "_guess_expansion"], [76, 3, 1, "", "_inflate_fox_h"], [76, 3, 1, "", "_inflate_g"], [76, 3, 1, "", "_int0oo"], [76, 3, 1, "", "_int0oo_1"], [76, 3, 1, "", "_int_inversion"], [76, 3, 1, "", "_is_analytic"], [76, 3, 1, "", "_meijerint_definite_2"], [76, 3, 1, "", "_meijerint_definite_3"], [76, 3, 1, "", "_meijerint_definite_4"], [76, 3, 1, "", "_meijerint_indefinite_1"], [76, 3, 1, "", "_mul_args"], [76, 3, 1, "", "_mul_as_two_parts"], [76, 3, 1, "", "_my_principal_branch"], [76, 3, 1, "", "_mytype"], [76, 3, 1, "", "_rewrite1"], [76, 3, 1, "", "_rewrite2"], [76, 3, 1, "", "_rewrite_inversion"], [76, 3, 1, "", "_rewrite_saxena"], [76, 3, 1, "", "_rewrite_saxena_1"], [76, 3, 1, "", "_rewrite_single"], [76, 3, 1, "", "_split_mul"], [76, 3, 1, "", "meijerint_definite"], [76, 3, 1, "", "meijerint_indefinite"], [76, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[78, 3, 1, "", "gauss_chebyshev_t"], [78, 3, 1, "", "gauss_chebyshev_u"], [78, 3, 1, "", "gauss_gen_laguerre"], [78, 3, 1, "", "gauss_hermite"], [78, 3, 1, "", "gauss_jacobi"], [78, 3, 1, "", "gauss_laguerre"], [78, 3, 1, "", "gauss_legendre"], [78, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[78, 3, 1, "", "ratint"], [78, 3, 1, "", "ratint_logpart"], [78, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[78, 1, 1, "", "NonElementaryIntegral"], [78, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[78, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[78, 1, 1, "", "CosineTransform"], [78, 1, 1, "", "FourierTransform"], [78, 1, 1, "", "HankelTransform"], [78, 1, 1, "", "IntegralTransform"], [78, 7, 1, "", "IntegralTransformError"], [78, 1, 1, "", "InverseCosineTransform"], [78, 1, 1, "", "InverseFourierTransform"], [78, 1, 1, "", "InverseHankelTransform"], [78, 1, 1, "", "InverseLaplaceTransform"], [78, 1, 1, "", "InverseMellinTransform"], [78, 1, 1, "", "InverseSineTransform"], [78, 1, 1, "", "LaplaceTransform"], [78, 1, 1, "", "MellinTransform"], [78, 1, 1, "", "SineTransform"], [78, 3, 1, "", "_fast_inverse_laplace"], [78, 3, 1, "", "_fourier_transform"], [78, 3, 1, "", "cosine_transform"], [78, 3, 1, "", "fourier_transform"], [78, 3, 1, "", "hankel_transform"], [78, 3, 1, "", "inverse_cosine_transform"], [78, 3, 1, "", "inverse_fourier_transform"], [78, 3, 1, "", "inverse_hankel_transform"], [78, 3, 1, "", "inverse_laplace_transform"], [78, 3, 1, "", "inverse_mellin_transform"], [78, 3, 1, "", "inverse_sine_transform"], [78, 3, 1, "", "laplace_transform"], [78, 3, 1, "", "mellin_transform"], [78, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[78, 2, 1, "", "doit"], [78, 4, 1, "", "function"], [78, 4, 1, "", "function_variable"], [78, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[78, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[79, 0, 0, "-", "printing"], [79, 0, 0, "-", "session"]], "sympy.interactive.printing": [[79, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[79, 3, 1, "", "enable_automatic_int_sympification"], [79, 3, 1, "", "enable_automatic_symbols"], [79, 3, 1, "", "init_ipython_session"], [79, 3, 1, "", "init_python_session"], [79, 3, 1, "", "init_session"], [79, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[80, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[80, 1, 1, "", "CartanType_generator"], [80, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[80, 2, 1, "", "rank"], [80, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[80, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[80, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[80, 2, 1, "", "add_as_roots"], [80, 2, 1, "", "add_simple_roots"], [80, 2, 1, "", "all_roots"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dynkin_diagram"], [80, 2, 1, "", "root_space"], [80, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[80, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "highest_root"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[80, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[80, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[80, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[80, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[80, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[80, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[80, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[80, 2, 1, "", "coxeter_diagram"], [80, 2, 1, "", "delete_doubles"], [80, 2, 1, "", "element_order"], [80, 2, 1, "", "generators"], [80, 2, 1, "", "group_name"], [80, 2, 1, "", "group_order"], [80, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[81, 3, 1, "", "ANFform"], [81, 1, 1, "", "And"], [81, 1, 1, "", "Boolean"], [81, 1, 1, "", "BooleanFalse"], [81, 1, 1, "", "BooleanTrue"], [81, 1, 1, "", "Equivalent"], [81, 1, 1, "", "Exclusive"], [81, 1, 1, "", "ITE"], [81, 1, 1, "", "Implies"], [81, 1, 1, "", "Nand"], [81, 1, 1, "", "Nor"], [81, 1, 1, "", "Not"], [81, 1, 1, "", "Or"], [81, 3, 1, "", "POSform"], [81, 3, 1, "", "SOPform"], [81, 1, 1, "", "Xnor"], [81, 1, 1, "", "Xor"], [81, 3, 1, "", "anf_coeffs"], [81, 3, 1, "", "bool_map"], [81, 3, 1, "", "bool_maxterm"], [81, 3, 1, "", "bool_minterm"], [81, 3, 1, "", "bool_monomial"], [81, 3, 1, "", "distribute_and_over_or"], [81, 3, 1, "", "distribute_or_over_and"], [81, 3, 1, "", "distribute_xor_over_and"], [81, 3, 1, "", "eliminate_implications"], [81, 3, 1, "", "gateinputcount"], [81, 3, 1, "", "integer_to_term"], [81, 3, 1, "", "is_anf"], [81, 3, 1, "", "is_cnf"], [81, 3, 1, "", "is_dnf"], [81, 3, 1, "", "is_nnf"], [81, 3, 1, "", "simplify_logic"], [81, 3, 1, "", "term_to_integer"], [81, 3, 1, "", "to_anf"], [81, 3, 1, "", "to_cnf"], [81, 3, 1, "", "to_dnf"], [81, 3, 1, "", "to_int_repr"], [81, 3, 1, "", "to_nnf"], [81, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[81, 2, 1, "", "as_set"], [81, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[81, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[81, 2, 1, "", "as_set"]], "sympy.logic": [[81, 0, 0, "-", "inference"]], "sympy.logic.inference": [[81, 3, 1, "", "satisfiable"]], "sympy.matrices": [[82, 0, 0, "-", "common"], [84, 0, 0, "-", "expressions"], [85, 0, 0, "-", "immutable"], [87, 0, 0, "-", "matrices"], [89, 0, 0, "-", "sparse"], [90, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[82, 1, 1, "", "MatrixCommon"], [82, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[82, 4, 1, "", "C"], [82, 4, 1, "", "H"], [82, 4, 1, "", "T"], [82, 2, 1, "", "__abs__"], [82, 2, 1, "", "__add__"], [82, 2, 1, "", "__getitem__"], [82, 2, 1, "", "__len__"], [82, 2, 1, "", "__mul__"], [82, 2, 1, "", "__pow__"], [82, 5, 1, "", "__weakref__"], [82, 2, 1, "", "adjoint"], [82, 2, 1, "", "applyfunc"], [82, 2, 1, "", "as_real_imag"], [82, 2, 1, "", "atoms"], [82, 2, 1, "", "col"], [82, 2, 1, "", "col_del"], [82, 2, 1, "", "col_insert"], [82, 2, 1, "", "col_join"], [82, 2, 1, "", "companion"], [82, 2, 1, "", "conjugate"], [82, 2, 1, "", "diag"], [82, 2, 1, "", "diagonal"], [82, 2, 1, "", "evalf"], [82, 2, 1, "", "expand"], [82, 2, 1, "", "extract"], [82, 2, 1, "", "eye"], [82, 4, 1, "", "free_symbols"], [82, 2, 1, "", "get_diag_blocks"], [82, 2, 1, "", "has"], [82, 2, 1, "", "hstack"], [82, 2, 1, "", "is_anti_symmetric"], [82, 2, 1, "", "is_diagonal"], [82, 4, 1, "", "is_hermitian"], [82, 4, 1, "", "is_lower"], [82, 4, 1, "", "is_lower_hessenberg"], [82, 4, 1, "", "is_square"], [82, 4, 1, "", "is_strongly_diagonally_dominant"], [82, 2, 1, "", "is_symbolic"], [82, 2, 1, "", "is_symmetric"], [82, 4, 1, "", "is_upper"], [82, 4, 1, "", "is_upper_hessenberg"], [82, 4, 1, "", "is_weakly_diagonally_dominant"], [82, 4, 1, "", "is_zero_matrix"], [82, 2, 1, "", "jordan_block"], [82, 2, 1, "", "lower_triangular"], [82, 2, 1, "", "multiply"], [82, 2, 1, "", "multiply_elementwise"], [82, 2, 1, "", "n"], [82, 2, 1, "", "ones"], [82, 2, 1, "", "permute"], [82, 2, 1, "", "permute_cols"], [82, 2, 1, "", "permute_rows"], [82, 2, 1, "", "pow"], [82, 2, 1, "", "refine"], [82, 2, 1, "", "replace"], [82, 2, 1, "", "reshape"], [82, 2, 1, "", "rmultiply"], [82, 2, 1, "", "rot90"], [82, 2, 1, "", "row"], [82, 2, 1, "", "row_del"], [82, 2, 1, "", "row_insert"], [82, 2, 1, "", "row_join"], [82, 4, 1, "", "shape"], [82, 2, 1, "", "simplify"], [82, 2, 1, "", "subs"], [82, 2, 1, "", "todod"], [82, 2, 1, "", "todok"], [82, 2, 1, "", "tolist"], [82, 2, 1, "", "trace"], [82, 2, 1, "", "transpose"], [82, 2, 1, "", "upper_triangular"], [82, 2, 1, "", "values"], [82, 2, 1, "", "vec"], [82, 2, 1, "", "vech"], [82, 2, 1, "", "vstack"], [82, 2, 1, "", "wilkinson"], [82, 2, 1, "", "xreplace"], [82, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[83, 1, 1, "", "DenseMatrix"], [87, 3, 1, "", "GramSchmidt"], [83, 5, 1, "", "Matrix"], [83, 1, 1, "", "MutableDenseMatrix"], [87, 3, 1, "", "casoratian"], [87, 3, 1, "", "diag"], [87, 3, 1, "", "eye"], [87, 3, 1, "", "hessian"], [87, 3, 1, "", "jordan_cell"], [87, 3, 1, "", "list2numpy"], [87, 3, 1, "", "matrix2numpy"], [87, 3, 1, "", "matrix_multiply_elementwise"], [87, 3, 1, "", "ones"], [87, 3, 1, "", "randMatrix"], [87, 3, 1, "", "rot_axis1"], [87, 3, 1, "", "rot_axis2"], [87, 3, 1, "", "rot_axis3"], [87, 3, 1, "", "symarray"], [87, 3, 1, "", "wronskian"], [87, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[83, 2, 1, "", "LDLdecomposition"], [83, 2, 1, "", "as_immutable"], [83, 2, 1, "", "as_mutable"], [83, 2, 1, "", "cholesky"], [83, 2, 1, "", "lower_triangular_solve"], [83, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[83, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[84, 1, 1, "", "CompanionMatrix"], [84, 1, 1, "", "FunctionMatrix"], [84, 1, 1, "", "HadamardPower"], [84, 1, 1, "", "HadamardProduct"], [84, 1, 1, "", "Identity"], [84, 1, 1, "", "Inverse"], [84, 1, 1, "", "MatAdd"], [84, 1, 1, "", "MatMul"], [84, 1, 1, "", "MatPow"], [84, 1, 1, "", "MatrixExpr"], [84, 1, 1, "", "MatrixPermute"], [84, 1, 1, "", "MatrixSet"], [84, 1, 1, "", "MatrixSymbol"], [84, 1, 1, "", "PermutationMatrix"], [84, 1, 1, "", "Trace"], [84, 1, 1, "", "Transpose"], [84, 1, 1, "", "ZeroMatrix"], [84, 0, 0, "-", "blockmatrix"]], "sympy.matrices.expressions.MatrixExpr": [[84, 4, 1, "", "T"], [84, 2, 1, "", "as_coeff_Mul"], [84, 2, 1, "", "as_explicit"], [84, 2, 1, "", "as_mutable"], [84, 2, 1, "", "equals"], [84, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[84, 1, 1, "", "BlockDiagMatrix"], [84, 1, 1, "", "BlockMatrix"], [84, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[84, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[84, 2, 1, "", "LDUdecomposition"], [84, 2, 1, "", "LUdecomposition"], [84, 2, 1, "", "UDLdecomposition"], [84, 2, 1, "", "schur"], [84, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[85, 1, 1, "", "ImmutableDenseMatrix"], [85, 5, 1, "", "ImmutableMatrix"], [89, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[87, 1, 1, "", "MatrixBase"], [87, 1, 1, "", "MatrixCalculus"], [87, 1, 1, "", "MatrixDeterminant"], [87, 1, 1, "", "MatrixEigen"], [87, 1, 1, "", "MatrixError"], [87, 1, 1, "", "MatrixReductions"], [87, 1, 1, "", "MatrixSubspaces"], [87, 1, 1, "", "NonSquareMatrixError"], [87, 1, 1, "", "ShapeError"], [87, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[87, 4, 1, "", "D"], [87, 2, 1, "", "LDLdecomposition"], [87, 2, 1, "", "LDLsolve"], [87, 2, 1, "", "LUdecomposition"], [87, 2, 1, "", "LUdecompositionFF"], [87, 2, 1, "", "LUdecomposition_Simple"], [87, 2, 1, "", "LUsolve"], [87, 2, 1, "", "QRdecomposition"], [87, 2, 1, "", "QRsolve"], [87, 2, 1, "", "add"], [87, 2, 1, "", "analytic_func"], [87, 2, 1, "", "cholesky"], [87, 2, 1, "", "cholesky_solve"], [87, 2, 1, "", "condition_number"], [87, 2, 1, "", "connected_components"], [87, 2, 1, "", "connected_components_decomposition"], [87, 2, 1, "", "copy"], [87, 2, 1, "", "cross"], [87, 2, 1, "", "diagonal_solve"], [87, 2, 1, "", "dot"], [87, 2, 1, "", "dual"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "gauss_jordan_solve"], [87, 2, 1, "", "inv"], [87, 2, 1, "", "inv_mod"], [87, 2, 1, "", "inverse_ADJ"], [87, 2, 1, "", "inverse_BLOCK"], [87, 2, 1, "", "inverse_CH"], [87, 2, 1, "", "inverse_GE"], [87, 2, 1, "", "inverse_LDL"], [87, 2, 1, "", "inverse_LU"], [87, 2, 1, "", "inverse_QR"], [87, 2, 1, "", "irregular"], [87, 2, 1, "", "is_nilpotent"], [87, 2, 1, "", "key2bounds"], [87, 2, 1, "", "key2ij"], [87, 2, 1, "", "log"], [87, 2, 1, "", "lower_triangular_solve"], [87, 2, 1, "", "norm"], [87, 2, 1, "", "normalized"], [87, 2, 1, "", "pinv"], [87, 2, 1, "", "pinv_solve"], [87, 2, 1, "", "print_nonzero"], [87, 2, 1, "", "project"], [87, 2, 1, "", "rank_decomposition"], [87, 2, 1, "", "singular_value_decomposition"], [87, 2, 1, "", "solve"], [87, 2, 1, "", "solve_least_squares"], [87, 2, 1, "", "strongly_connected_components"], [87, 2, 1, "", "strongly_connected_components_decomposition"], [87, 2, 1, "", "table"], [87, 2, 1, "", "upper_hessenberg_decomposition"], [87, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[87, 2, 1, "", "diff"], [87, 2, 1, "", "integrate"], [87, 2, 1, "", "jacobian"], [87, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[87, 2, 1, "", "adjugate"], [87, 2, 1, "", "charpoly"], [87, 2, 1, "", "cofactor"], [87, 2, 1, "", "cofactor_matrix"], [87, 2, 1, "", "det"], [87, 2, 1, "", "minor"], [87, 2, 1, "", "minor_submatrix"], [87, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[87, 2, 1, "", "bidiagonal_decomposition"], [87, 2, 1, "", "bidiagonalize"], [87, 2, 1, "", "diagonalize"], [87, 2, 1, "", "eigenvals"], [87, 2, 1, "", "eigenvects"], [87, 2, 1, "", "is_diagonalizable"], [87, 4, 1, "", "is_indefinite"], [87, 4, 1, "", "is_negative_definite"], [87, 4, 1, "", "is_negative_semidefinite"], [87, 4, 1, "", "is_positive_definite"], [87, 4, 1, "", "is_positive_semidefinite"], [87, 2, 1, "", "jordan_form"], [87, 2, 1, "", "left_eigenvects"], [87, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[87, 2, 1, "", "echelon_form"], [87, 2, 1, "", "elementary_col_op"], [87, 2, 1, "", "elementary_row_op"], [87, 4, 1, "", "is_echelon"], [87, 2, 1, "", "rank"], [87, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[87, 2, 1, "", "columnspace"], [87, 2, 1, "", "nullspace"], [87, 2, 1, "", "orthogonalize"], [87, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[88, 3, 1, "", "hermite_normal_form"], [88, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[89, 1, 1, "", "MutableSparseMatrix"], [89, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[90, 2, 1, "", "_csrtodok"], [90, 2, 1, "", "_doktocsr"], [90, 2, 1, "", "banded"]], "sympy.ntheory": [[91, 0, 0, "-", "bbp_pi"], [91, 0, 0, "-", "continued_fraction"], [91, 0, 0, "-", "digits"], [91, 0, 0, "-", "ecm"], [91, 0, 0, "-", "egyptian_fraction"], [91, 0, 0, "-", "factor_"], [91, 0, 0, "-", "generate"], [91, 1, 1, "", "mobius"], [91, 0, 0, "-", "modular"], [91, 0, 0, "-", "multinomial"], [91, 0, 0, "-", "partitions_"], [91, 0, 0, "-", "primetest"], [91, 0, 0, "-", "qs"], [91, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[91, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[91, 3, 1, "", "continued_fraction"], [91, 3, 1, "", "continued_fraction_convergents"], [91, 3, 1, "", "continued_fraction_iterator"], [91, 3, 1, "", "continued_fraction_periodic"], [91, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[91, 3, 1, "", "count_digits"], [91, 3, 1, "", "digits"], [91, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[91, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[91, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[91, 3, 1, "", "abundance"], [91, 3, 1, "", "antidivisor_count"], [91, 3, 1, "", "antidivisors"], [91, 3, 1, "", "core"], [91, 3, 1, "", "digits"], [91, 3, 1, "", "divisor_count"], [91, 1, 1, "", "divisor_sigma"], [91, 3, 1, "", "divisors"], [91, 3, 1, "", "factorint"], [91, 3, 1, "", "factorrat"], [91, 3, 1, "", "is_abundant"], [91, 3, 1, "", "is_amicable"], [91, 3, 1, "", "is_deficient"], [91, 3, 1, "", "is_mersenne_prime"], [91, 3, 1, "", "is_perfect"], [91, 3, 1, "", "mersenne_prime_exponent"], [91, 3, 1, "", "multiplicity"], [91, 3, 1, "", "perfect_power"], [91, 3, 1, "", "pollard_pm1"], [91, 3, 1, "", "pollard_rho"], [91, 3, 1, "", "primefactors"], [91, 1, 1, "", "primenu"], [91, 1, 1, "", "primeomega"], [91, 3, 1, "", "proper_divisor_count"], [91, 3, 1, "", "proper_divisors"], [91, 1, 1, "", "reduced_totient"], [91, 3, 1, "", "smoothness"], [91, 3, 1, "", "smoothness_p"], [91, 1, 1, "", "totient"], [91, 3, 1, "", "trailing"], [91, 3, 1, "", "udivisor_count"], [91, 1, 1, "", "udivisor_sigma"], [91, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[91, 1, 1, "", "Sieve"], [91, 3, 1, "", "composite"], [91, 3, 1, "", "compositepi"], [91, 3, 1, "", "cycle_length"], [91, 3, 1, "", "nextprime"], [91, 3, 1, "", "prevprime"], [91, 3, 1, "", "prime"], [91, 3, 1, "", "primepi"], [91, 3, 1, "", "primerange"], [91, 3, 1, "", "primorial"], [91, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[91, 2, 1, "", "extend"], [91, 2, 1, "", "extend_to_no"], [91, 2, 1, "", "mobiusrange"], [91, 2, 1, "", "primerange"], [91, 2, 1, "", "search"], [91, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[91, 3, 1, "", "crt"], [91, 3, 1, "", "crt1"], [91, 3, 1, "", "crt2"], [91, 3, 1, "", "solve_congruence"], [91, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[91, 3, 1, "", "binomial_coefficients"], [91, 3, 1, "", "binomial_coefficients_list"], [91, 3, 1, "", "multinomial_coefficients"], [91, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[91, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[91, 3, 1, "", "is_euler_pseudoprime"], [91, 3, 1, "", "is_extra_strong_lucas_prp"], [91, 3, 1, "", "is_gaussian_prime"], [91, 3, 1, "", "is_lucas_prp"], [91, 3, 1, "", "is_square"], [91, 3, 1, "", "is_strong_lucas_prp"], [91, 3, 1, "", "isprime"], [91, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[91, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[91, 3, 1, "", "discrete_log"], [91, 3, 1, "", "is_nthpow_residue"], [91, 3, 1, "", "is_primitive_root"], [91, 3, 1, "", "is_quad_residue"], [91, 3, 1, "", "jacobi_symbol"], [91, 3, 1, "", "legendre_symbol"], [91, 3, 1, "", "n_order"], [91, 3, 1, "", "nthroot_mod"], [91, 3, 1, "", "primitive_root"], [91, 3, 1, "", "quadratic_residues"], [91, 3, 1, "", "sqrt_mod"], [91, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[93, 1, 1, "", "LaTeXParsingError"], [93, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[93, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[93, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[93, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[93, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[93, 2, 1, "", "convert_to_c"], [93, 2, 1, "", "convert_to_expr"], [93, 2, 1, "", "convert_to_fortran"], [93, 2, 1, "", "convert_to_python"], [93, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[93, 3, 1, "", "auto_number"], [93, 3, 1, "", "auto_symbol"], [93, 3, 1, "", "convert_xor"], [93, 3, 1, "", "eval_expr"], [93, 3, 1, "", "factorial_notation"], [93, 3, 1, "", "function_exponentiation"], [93, 3, 1, "", "implicit_application"], [93, 3, 1, "", "implicit_multiplication"], [93, 3, 1, "", "implicit_multiplication_application"], [93, 3, 1, "", "lambda_notation"], [93, 3, 1, "", "parse_expr"], [93, 3, 1, "", "rationalize"], [93, 3, 1, "", "repeated_decimals"], [93, 3, 1, "", "split_symbols"], [93, 3, 1, "", "split_symbols_custom"], [93, 6, 1, "", "standard_transformations"], [93, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[94, 0, 0, "-", "beam"], [97, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[94, 1, 1, "", "Beam"], [94, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[94, 4, 1, "", "applied_loads"], [94, 2, 1, "", "apply_load"], [94, 2, 1, "", "apply_support"], [94, 4, 1, "", "area"], [94, 2, 1, "", "bending_moment"], [94, 4, 1, "", "boundary_conditions"], [94, 4, 1, "", "cross_section"], [94, 2, 1, "", "deflection"], [94, 2, 1, "", "draw"], [94, 4, 1, "", "elastic_modulus"], [94, 4, 1, "", "ild_moment"], [94, 4, 1, "", "ild_reactions"], [94, 4, 1, "", "ild_shear"], [94, 2, 1, "", "join"], [94, 4, 1, "", "length"], [94, 4, 1, "", "load"], [94, 2, 1, "", "max_bmoment"], [94, 2, 1, "", "max_deflection"], [94, 2, 1, "", "max_shear_force"], [94, 2, 1, "", "plot_bending_moment"], [94, 2, 1, "", "plot_deflection"], [94, 2, 1, "", "plot_ild_moment"], [94, 2, 1, "", "plot_ild_reactions"], [94, 2, 1, "", "plot_ild_shear"], [94, 2, 1, "", "plot_loading_results"], [94, 2, 1, "", "plot_shear_force"], [94, 2, 1, "", "plot_shear_stress"], [94, 2, 1, "", "plot_slope"], [94, 2, 1, "", "point_cflexure"], [94, 4, 1, "", "reaction_loads"], [94, 2, 1, "", "remove_load"], [94, 4, 1, "", "second_moment"], [94, 2, 1, "", "shear_force"], [94, 2, 1, "", "shear_stress"], [94, 2, 1, "", "slope"], [94, 2, 1, "", "solve_for_ild_moment"], [94, 2, 1, "", "solve_for_ild_reactions"], [94, 2, 1, "", "solve_for_ild_shear"], [94, 2, 1, "", "solve_for_reaction_loads"], [94, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[94, 2, 1, "", "apply_load"], [94, 2, 1, "", "apply_moment_load"], [94, 4, 1, "", "area"], [94, 2, 1, "", "axial_force"], [94, 2, 1, "", "axial_stress"], [94, 2, 1, "", "bending_moment"], [94, 4, 1, "", "boundary_conditions"], [94, 2, 1, "", "deflection"], [94, 4, 1, "", "load_vector"], [94, 2, 1, "", "max_bending_moment"], [94, 2, 1, "", "max_bmoment"], [94, 2, 1, "", "max_deflection"], [94, 2, 1, "", "max_shear_force"], [94, 4, 1, "", "moment_load_vector"], [94, 2, 1, "", "plot_bending_moment"], [94, 2, 1, "", "plot_deflection"], [94, 2, 1, "", "plot_loading_results"], [94, 2, 1, "", "plot_shear_force"], [94, 2, 1, "", "plot_shear_stress"], [94, 2, 1, "", "plot_slope"], [94, 2, 1, "", "polar_moment"], [94, 4, 1, "", "second_moment"], [94, 2, 1, "", "shear_force"], [94, 4, 1, "", "shear_modulus"], [94, 2, 1, "", "shear_stress"], [94, 2, 1, "", "slope"], [94, 2, 1, "", "solve_for_reaction_loads"], [94, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.truss": [[97, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[97, 2, 1, "", "add_member"], [97, 2, 1, "", "add_node"], [97, 2, 1, "", "apply_load"], [97, 2, 1, "", "apply_support"], [97, 2, 1, "", "change_member_label"], [97, 2, 1, "", "change_node_label"], [97, 4, 1, "", "internal_forces"], [97, 4, 1, "", "loads"], [97, 4, 1, "", "member_labels"], [97, 4, 1, "", "members"], [97, 4, 1, "", "node_labels"], [97, 4, 1, "", "node_positions"], [97, 4, 1, "", "nodes"], [97, 4, 1, "", "reaction_loads"], [97, 2, 1, "", "remove_load"], [97, 2, 1, "", "remove_member"], [97, 2, 1, "", "remove_node"], [97, 2, 1, "", "remove_support"], [97, 4, 1, "", "supports"]], "sympy.physics": [[100, 0, 0, "-", "control"], [103, 0, 0, "-", "hydrogen"], [104, 0, 0, "-", "matrices"], [124, 0, 0, "-", "mechanics"], [138, 0, 0, "-", "paulialgebra"], [139, 0, 0, "-", "qho_1d"], [163, 0, 0, "-", "secondquant"], [164, 0, 0, "-", "sho"], [179, 0, 0, "-", "vector"], [182, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[99, 2, 1, "", "bode_magnitude_numerical_data"], [99, 2, 1, "", "bode_magnitude_plot"], [99, 2, 1, "", "bode_phase_numerical_data"], [99, 2, 1, "", "bode_phase_plot"], [99, 2, 1, "", "bode_plot"], [99, 2, 1, "", "impulse_response_numerical_data"], [99, 2, 1, "", "impulse_response_plot"], [99, 2, 1, "", "pole_zero_numerical_data"], [99, 2, 1, "", "pole_zero_plot"], [99, 2, 1, "", "ramp_response_numerical_data"], [99, 2, 1, "", "ramp_response_plot"], [99, 2, 1, "", "step_response_numerical_data"], [99, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[101, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[101, 1, 1, "", "Feedback"], [101, 1, 1, "", "MIMOFeedback"], [101, 1, 1, "", "MIMOParallel"], [101, 1, 1, "", "MIMOSeries"], [101, 1, 1, "", "Parallel"], [101, 1, 1, "", "Series"], [101, 1, 1, "", "TransferFunction"], [101, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "sensitivity"], [101, 4, 1, "", "sign"], [101, 4, 1, "", "sys1"], [101, 4, 1, "", "sys2"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "sensitivity"], [101, 4, 1, "", "sign"], [101, 4, 1, "", "sys1"], [101, 4, 1, "", "sys2"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "num_inputs"], [101, 4, 1, "", "num_outputs"], [101, 4, 1, "", "shape"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "num_inputs"], [101, 4, 1, "", "num_outputs"], [101, 4, 1, "", "shape"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "is_biproper"], [101, 4, 1, "", "is_proper"], [101, 4, 1, "", "is_strictly_proper"], [101, 2, 1, "", "to_expr"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "is_biproper"], [101, 4, 1, "", "is_proper"], [101, 4, 1, "", "is_strictly_proper"], [101, 2, 1, "", "to_expr"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[101, 2, 1, "", "dc_gain"], [101, 4, 1, "", "den"], [101, 2, 1, "", "expand"], [101, 2, 1, "", "from_rational_expression"], [101, 4, 1, "", "is_biproper"], [101, 4, 1, "", "is_proper"], [101, 2, 1, "", "is_stable"], [101, 4, 1, "", "is_strictly_proper"], [101, 4, 1, "", "num"], [101, 2, 1, "", "poles"], [101, 2, 1, "", "to_expr"], [101, 4, 1, "", "var"], [101, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[101, 2, 1, "", "elem_poles"], [101, 2, 1, "", "elem_zeros"], [101, 2, 1, "", "expand"], [101, 2, 1, "", "from_Matrix"], [101, 4, 1, "", "num_inputs"], [101, 4, 1, "", "num_outputs"], [101, 4, 1, "", "shape"], [101, 2, 1, "", "transpose"], [101, 4, 1, "", "var"]], "sympy.physics.hep": [[102, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[102, 3, 1, "", "extract_type_tens"], [102, 3, 1, "", "gamma_trace"], [102, 3, 1, "", "kahane_simplify"], [102, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[103, 3, 1, "", "E_nl"], [103, 3, 1, "", "E_nl_dirac"], [103, 3, 1, "", "Psi_nlm"], [103, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[104, 3, 1, "", "mdft"], [104, 3, 1, "", "mgamma"], [104, 3, 1, "", "msigma"], [104, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[106, 0, 0, "-", "body"], [107, 3, 1, "", "find_dynamicsymbols"], [108, 0, 0, "-", "joint"], [109, 0, 0, "-", "kane"], [109, 0, 0, "-", "lagrange"], [110, 0, 0, "-", "linearize"], [107, 3, 1, "", "msubs"], [111, 0, 0, "-", "particle"], [111, 0, 0, "-", "rigidbody"], [113, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[106, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[106, 2, 1, "", "ang_vel_in"], [106, 2, 1, "", "apply_force"], [106, 2, 1, "", "apply_torque"], [106, 2, 1, "", "clear_loads"], [106, 2, 1, "", "dcm"], [106, 2, 1, "", "kinetic_energy"], [106, 2, 1, "", "masscenter_vel"], [106, 2, 1, "", "remove_load"], [106, 4, 1, "", "x"], [106, 4, 1, "", "y"], [106, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[111, 3, 1, "", "Lagrangian"], [111, 3, 1, "", "angular_momentum"], [111, 3, 1, "", "inertia"], [111, 3, 1, "", "inertia_of_point_mass"], [111, 3, 1, "", "kinetic_energy"], [111, 3, 1, "", "linear_momentum"], [111, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[108, 1, 1, "", "Joint"], [108, 1, 1, "", "PinJoint"], [108, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[108, 4, 1, "", "child"], [108, 4, 1, "", "child_axis"], [108, 4, 1, "", "child_point"], [108, 4, 1, "", "coordinates"], [108, 4, 1, "", "kdes"], [108, 4, 1, "", "parent"], [108, 4, 1, "", "parent_axis"], [108, 4, 1, "", "parent_point"], [108, 4, 1, "", "speeds"]], "sympy.physics.mechanics.kane": [[109, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[109, 4, 1, "", "auxiliary_eqs"], [109, 4, 1, "", "forcing"], [109, 4, 1, "", "forcing_full"], [109, 2, 1, "", "kanes_equations"], [109, 2, 1, "", "kindiffdict"], [109, 2, 1, "", "linearize"], [109, 4, 1, "", "mass_matrix"], [109, 4, 1, "", "mass_matrix_full"], [109, 2, 1, "", "rhs"], [109, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[109, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[109, 4, 1, "", "forcing"], [109, 4, 1, "", "forcing_full"], [109, 2, 1, "", "form_lagranges_equations"], [109, 2, 1, "", "linearize"], [109, 4, 1, "", "mass_matrix"], [109, 4, 1, "", "mass_matrix_full"], [109, 2, 1, "", "rhs"], [109, 2, 1, "", "solve_multipliers"], [109, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[110, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[110, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[111, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[111, 2, 1, "", "angular_momentum"], [111, 2, 1, "", "kinetic_energy"], [111, 2, 1, "", "linear_momentum"], [111, 4, 1, "", "mass"], [111, 2, 1, "", "parallel_axis"], [111, 4, 1, "", "point"], [111, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[111, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[111, 2, 1, "", "angular_momentum"], [111, 4, 1, "", "central_inertia"], [111, 2, 1, "", "kinetic_energy"], [111, 2, 1, "", "linear_momentum"], [111, 2, 1, "", "parallel_axis"], [111, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[113, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[113, 4, 1, "", "alg_con"], [113, 4, 1, "", "bodies"], [113, 4, 1, "", "comb_explicit_rhs"], [113, 4, 1, "", "comb_implicit_mat"], [113, 4, 1, "", "comb_implicit_rhs"], [113, 2, 1, "", "compute_explicit_form"], [113, 2, 1, "", "constant_symbols"], [113, 4, 1, "", "coordinates"], [113, 4, 1, "", "dyn_implicit_mat"], [113, 4, 1, "", "dyn_implicit_rhs"], [113, 2, 1, "", "dynamic_symbols"], [113, 4, 1, "", "kin_explicit_rhs"], [113, 4, 1, "", "loads"], [113, 4, 1, "", "speeds"], [113, 4, 1, "", "states"]], "sympy.physics.optics": [[132, 0, 0, "-", "gaussopt"], [134, 0, 0, "-", "medium"], [135, 0, 0, "-", "polarization"], [136, 0, 0, "-", "utils"], [137, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[132, 1, 1, "", "BeamParameter"], [132, 1, 1, "", "CurvedMirror"], [132, 1, 1, "", "CurvedRefraction"], [132, 1, 1, "", "FlatMirror"], [132, 1, 1, "", "FlatRefraction"], [132, 1, 1, "", "FreeSpace"], [132, 1, 1, "", "GeometricRay"], [132, 1, 1, "", "RayTransferMatrix"], [132, 1, 1, "", "ThinLens"], [132, 3, 1, "", "conjugate_gauss_beams"], [132, 3, 1, "", "gaussian_conj"], [132, 3, 1, "", "geometric_conj_ab"], [132, 3, 1, "", "geometric_conj_af"], [132, 3, 1, "", "geometric_conj_bf"], [132, 3, 1, "", "rayleigh2waist"], [132, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[132, 4, 1, "", "divergence"], [132, 4, 1, "", "gouy"], [132, 4, 1, "", "q"], [132, 4, 1, "", "radius"], [132, 4, 1, "", "w"], [132, 4, 1, "", "w_0"], [132, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[132, 4, 1, "", "angle"], [132, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[132, 4, 1, "", "A"], [132, 4, 1, "", "B"], [132, 4, 1, "", "C"], [132, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[134, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[134, 4, 1, "", "refractive_index"], [134, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[135, 3, 1, "", "half_wave_retarder"], [135, 3, 1, "", "jones_2_stokes"], [135, 3, 1, "", "jones_vector"], [135, 3, 1, "", "linear_polarizer"], [135, 3, 1, "", "mueller_matrix"], [135, 3, 1, "", "phase_retarder"], [135, 3, 1, "", "polarizing_beam_splitter"], [135, 3, 1, "", "quarter_wave_retarder"], [135, 3, 1, "", "reflective_filter"], [135, 3, 1, "", "stokes_vector"], [135, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[136, 3, 1, "", "brewster_angle"], [136, 3, 1, "", "critical_angle"], [136, 3, 1, "", "deviation"], [136, 3, 1, "", "fresnel_coefficients"], [136, 3, 1, "", "hyperfocal_distance"], [136, 3, 1, "", "lens_formula"], [136, 3, 1, "", "lens_makers_formula"], [136, 3, 1, "", "mirror_formula"], [136, 3, 1, "", "refraction_angle"], [136, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[137, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[137, 4, 1, "", "amplitude"], [137, 4, 1, "", "angular_velocity"], [137, 4, 1, "", "frequency"], [137, 4, 1, "", "n"], [137, 4, 1, "", "phase"], [137, 4, 1, "", "speed"], [137, 4, 1, "", "time_period"], [137, 4, 1, "", "wavelength"], [137, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[138, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[139, 3, 1, "", "E_n"], [139, 3, 1, "", "coherent_state"], [139, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[140, 0, 0, "-", "anticommutator"], [141, 0, 0, "-", "cartesian"], [142, 0, 0, "-", "cg"], [143, 0, 0, "-", "circuitplot"], [144, 0, 0, "-", "commutator"], [145, 0, 0, "-", "constants"], [146, 0, 0, "-", "dagger"], [147, 0, 0, "-", "gate"], [148, 0, 0, "-", "grover"], [149, 0, 0, "-", "hilbert"], [151, 0, 0, "-", "innerproduct"], [152, 0, 0, "-", "operator"], [153, 0, 0, "-", "operatorset"], [154, 0, 0, "-", "piab"], [155, 0, 0, "-", "qapply"], [156, 0, 0, "-", "qft"], [157, 0, 0, "-", "qubit"], [158, 0, 0, "-", "represent"], [159, 0, 0, "-", "shor"], [160, 0, 0, "-", "spin"], [161, 0, 0, "-", "state"], [162, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[140, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[140, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[141, 1, 1, "", "PositionBra3D"], [141, 1, 1, "", "PositionKet3D"], [141, 1, 1, "", "PositionState3D"], [141, 1, 1, "", "PxBra"], [141, 1, 1, "", "PxKet"], [141, 1, 1, "", "PxOp"], [141, 1, 1, "", "XBra"], [141, 1, 1, "", "XKet"], [141, 1, 1, "", "XOp"], [141, 1, 1, "", "YOp"], [141, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[141, 4, 1, "", "position_x"], [141, 4, 1, "", "position_y"], [141, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[141, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[141, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[141, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[141, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[142, 1, 1, "", "CG"], [142, 1, 1, "", "Wigner3j"], [142, 1, 1, "", "Wigner6j"], [142, 1, 1, "", "Wigner9j"], [142, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[143, 1, 1, "", "CircuitPlot"], [143, 3, 1, "", "CreateCGate"], [143, 1, 1, "", "Mx"], [143, 1, 1, "", "Mz"], [143, 3, 1, "", "circuit_plot"], [143, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[143, 2, 1, "", "control_line"], [143, 2, 1, "", "control_point"], [143, 2, 1, "", "not_point"], [143, 2, 1, "", "one_qubit_box"], [143, 2, 1, "", "swap_point"], [143, 2, 1, "", "two_qubit_box"], [143, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[144, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[144, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[145, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[146, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[147, 1, 1, "", "CGate"], [147, 1, 1, "", "CGateS"], [147, 5, 1, "", "CNOT"], [147, 1, 1, "", "CNotGate"], [147, 1, 1, "", "Gate"], [147, 5, 1, "", "H"], [147, 1, 1, "", "HadamardGate"], [147, 1, 1, "", "IdentityGate"], [147, 1, 1, "", "OneQubitGate"], [147, 5, 1, "", "Phase"], [147, 1, 1, "", "PhaseGate"], [147, 5, 1, "", "S"], [147, 5, 1, "", "SWAP"], [147, 1, 1, "", "SwapGate"], [147, 5, 1, "", "T"], [147, 1, 1, "", "TGate"], [147, 1, 1, "", "TwoQubitGate"], [147, 1, 1, "", "UGate"], [147, 5, 1, "", "X"], [147, 1, 1, "", "XGate"], [147, 5, 1, "", "Y"], [147, 1, 1, "", "YGate"], [147, 5, 1, "", "Z"], [147, 1, 1, "", "ZGate"], [147, 3, 1, "", "gate_simp"], [147, 3, 1, "", "gate_sort"], [147, 3, 1, "", "normalized"], [147, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[147, 4, 1, "", "controls"], [147, 2, 1, "", "decompose"], [147, 2, 1, "", "eval_controls"], [147, 4, 1, "", "gate"], [147, 4, 1, "", "min_qubits"], [147, 4, 1, "", "nqubits"], [147, 2, 1, "", "plot_gate"], [147, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[147, 4, 1, "", "controls"], [147, 4, 1, "", "gate"], [147, 4, 1, "", "min_qubits"], [147, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[147, 2, 1, "", "get_target_matrix"], [147, 4, 1, "", "min_qubits"], [147, 4, 1, "", "nqubits"], [147, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[147, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[147, 2, 1, "", "get_target_matrix"], [147, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[148, 1, 1, "", "OracleGate"], [148, 1, 1, "", "WGate"], [148, 3, 1, "", "apply_grover"], [148, 3, 1, "", "grover_iteration"], [148, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[148, 4, 1, "", "search_function"], [148, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[149, 1, 1, "", "ComplexSpace"], [149, 1, 1, "", "DirectSumHilbertSpace"], [149, 1, 1, "", "FockSpace"], [149, 1, 1, "", "HilbertSpace"], [149, 1, 1, "", "L2"], [149, 1, 1, "", "TensorPowerHilbertSpace"], [149, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[149, 2, 1, "", "eval"], [149, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[149, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[149, 2, 1, "", "eval"], [149, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[151, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[152, 1, 1, "", "DifferentialOperator"], [152, 1, 1, "", "HermitianOperator"], [152, 1, 1, "", "IdentityOperator"], [152, 1, 1, "", "Operator"], [152, 1, 1, "", "OuterProduct"], [152, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[152, 4, 1, "", "expr"], [152, 4, 1, "", "free_symbols"], [152, 4, 1, "", "function"], [152, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[152, 4, 1, "", "bra"], [152, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[153, 3, 1, "", "operators_to_state"], [153, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[154, 1, 1, "", "PIABBra"], [154, 1, 1, "", "PIABHamiltonian"], [154, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[155, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[156, 1, 1, "", "IQFT"], [156, 1, 1, "", "QFT"], [156, 5, 1, "", "Rk"], [156, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[156, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[156, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[157, 1, 1, "", "IntQubit"], [157, 1, 1, "", "IntQubitBra"], [157, 1, 1, "", "Qubit"], [157, 1, 1, "", "QubitBra"], [157, 3, 1, "", "matrix_to_density"], [157, 3, 1, "", "matrix_to_qubit"], [157, 3, 1, "", "measure_all"], [157, 3, 1, "", "measure_all_oneshot"], [157, 3, 1, "", "measure_partial"], [157, 3, 1, "", "measure_partial_oneshot"], [157, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[158, 3, 1, "", "enumerate_states"], [158, 3, 1, "", "get_basis"], [158, 3, 1, "", "integrate_result"], [158, 3, 1, "", "rep_expectation"], [158, 3, 1, "", "rep_innerproduct"], [158, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[159, 1, 1, "", "CMod"], [159, 3, 1, "", "period_find"], [159, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[159, 4, 1, "", "N"], [159, 4, 1, "", "a"], [159, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[160, 1, 1, "", "J2Op"], [160, 1, 1, "", "JxBra"], [160, 1, 1, "", "JxBraCoupled"], [160, 1, 1, "", "JxKet"], [160, 1, 1, "", "JxKetCoupled"], [160, 1, 1, "", "JyBra"], [160, 1, 1, "", "JyBraCoupled"], [160, 1, 1, "", "JyKet"], [160, 1, 1, "", "JyKetCoupled"], [160, 1, 1, "", "JzBra"], [160, 1, 1, "", "JzBraCoupled"], [160, 1, 1, "", "JzKet"], [160, 1, 1, "", "JzKetCoupled"], [160, 1, 1, "", "JzOp"], [160, 1, 1, "", "Rotation"], [160, 1, 1, "", "WignerD"], [160, 3, 1, "", "couple"], [160, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[160, 2, 1, "", "D"], [160, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[161, 1, 1, "", "Bra"], [161, 1, 1, "", "BraBase"], [161, 1, 1, "", "Ket"], [161, 1, 1, "", "KetBase"], [161, 1, 1, "", "OrthogonalBra"], [161, 1, 1, "", "OrthogonalKet"], [161, 1, 1, "", "OrthogonalState"], [161, 1, 1, "", "State"], [161, 1, 1, "", "StateBase"], [161, 1, 1, "", "TimeDepBra"], [161, 1, 1, "", "TimeDepKet"], [161, 1, 1, "", "TimeDepState"], [161, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[161, 4, 1, "", "dual"], [161, 2, 1, "", "dual_class"], [161, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[161, 4, 1, "", "label"], [161, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[161, 4, 1, "", "expr"], [161, 4, 1, "", "is_commutative"], [161, 4, 1, "", "is_normalized"], [161, 4, 1, "", "limits"], [161, 4, 1, "", "norm"], [161, 2, 1, "", "normalize"], [161, 2, 1, "", "prob"], [161, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[162, 1, 1, "", "TensorProduct"], [162, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[163, 1, 1, "", "AnnihilateBoson"], [163, 1, 1, "", "AnnihilateFermion"], [163, 1, 1, "", "AntiSymmetricTensor"], [163, 5, 1, "", "B"], [163, 5, 1, "", "BBra"], [163, 5, 1, "", "BKet"], [163, 5, 1, "", "Bd"], [163, 1, 1, "", "BosonicBasis"], [163, 1, 1, "", "Commutator"], [163, 1, 1, "", "CreateBoson"], [163, 1, 1, "", "CreateFermion"], [163, 1, 1, "", "Dagger"], [163, 5, 1, "", "F"], [163, 5, 1, "", "FBra"], [163, 5, 1, "", "FKet"], [163, 5, 1, "", "Fd"], [163, 1, 1, "", "FixedBosonicBasis"], [163, 1, 1, "", "FockState"], [163, 1, 1, "", "FockStateBosonBra"], [163, 1, 1, "", "FockStateBosonKet"], [163, 1, 1, "", "FockStateBra"], [163, 1, 1, "", "FockStateFermionBra"], [163, 1, 1, "", "FockStateFermionKet"], [163, 1, 1, "", "FockStateKet"], [163, 1, 1, "", "InnerProduct"], [163, 1, 1, "", "KroneckerDelta"], [163, 1, 1, "", "NO"], [163, 1, 1, "", "PermutationOperator"], [163, 1, 1, "", "VarBosonicBasis"], [163, 3, 1, "", "apply_operators"], [163, 3, 1, "", "contraction"], [163, 3, 1, "", "evaluate_deltas"], [163, 3, 1, "", "matrix_rep"], [163, 3, 1, "", "simplify_index_permutations"], [163, 3, 1, "", "substitute_dummies"], [163, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[163, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[163, 2, 1, "", "apply_operator"], [163, 4, 1, "", "is_only_q_annihilator"], [163, 4, 1, "", "is_only_q_creator"], [163, 4, 1, "", "is_q_annihilator"], [163, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[163, 4, 1, "", "lower"], [163, 4, 1, "", "symbol"], [163, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[163, 2, 1, "", "doit"], [163, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[163, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[163, 2, 1, "", "apply_operator"], [163, 4, 1, "", "is_only_q_annihilator"], [163, 4, 1, "", "is_only_q_creator"], [163, 4, 1, "", "is_q_annihilator"], [163, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[163, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[163, 2, 1, "", "index"], [163, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[163, 4, 1, "", "bra"], [163, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[163, 2, 1, "", "eval"], [163, 4, 1, "", "indices_contain_equal_information"], [163, 4, 1, "", "is_above_fermi"], [163, 4, 1, "", "is_below_fermi"], [163, 4, 1, "", "is_only_above_fermi"], [163, 4, 1, "", "is_only_below_fermi"], [163, 4, 1, "", "killable_index"], [163, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[163, 2, 1, "", "doit"], [163, 2, 1, "", "get_subNO"], [163, 4, 1, "", "has_q_annihilators"], [163, 4, 1, "", "has_q_creators"], [163, 2, 1, "", "iter_q_annihilators"], [163, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[163, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[163, 2, 1, "", "index"], [163, 2, 1, "", "state"]], "sympy.physics.sho": [[164, 3, 1, "", "E_nl"], [164, 3, 1, "", "R_nl"]], "sympy.physics.units": [[165, 0, 0, "-", "dimensions"], [169, 0, 0, "-", "prefixes"], [170, 0, 0, "-", "quantities"], [171, 0, 0, "-", "unitsystem"], [170, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[165, 1, 1, "", "Dimension"], [165, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[165, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[165, 4, 1, "", "can_transf_matrix"], [165, 4, 1, "", "dim"], [165, 2, 1, "", "dim_can_vector"], [165, 2, 1, "", "dim_vector"], [165, 4, 1, "", "inv_can_transf_matrix"], [165, 4, 1, "", "is_consistent"], [165, 2, 1, "", "is_dimensionless"], [165, 4, 1, "", "list_can_dims"], [165, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[169, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[170, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[170, 4, 1, "", "abbrev"], [170, 2, 1, "", "convert_to"], [170, 4, 1, "", "free_symbols"], [170, 4, 1, "", "is_prefixed"], [170, 4, 1, "", "scale_factor"], [170, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[171, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[171, 4, 1, "", "dim"], [171, 2, 1, "", "extend"], [171, 2, 1, "", "get_units_non_prefixed"], [171, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[170, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[173, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[173, 2, 1, "", "applyfunc"], [173, 2, 1, "", "cross"], [173, 2, 1, "", "doit"], [173, 2, 1, "", "dot"], [173, 2, 1, "", "dt"], [173, 2, 1, "", "express"], [173, 4, 1, "", "func"], [173, 2, 1, "", "simplify"], [173, 2, 1, "", "subs"], [173, 2, 1, "", "to_matrix"], [173, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[175, 3, 1, "", "dynamicsymbols"], [176, 0, 0, "-", "functions"], [176, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[174, 3, 1, "", "curl"], [174, 3, 1, "", "divergence"], [174, 3, 1, "", "gradient"], [174, 3, 1, "", "is_conservative"], [174, 3, 1, "", "is_solenoidal"], [174, 3, 1, "", "scalar_potential"], [174, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[173, 1, 1, "", "CoordinateSym"], [173, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[173, 2, 1, "", "ang_acc_in"], [173, 2, 1, "", "ang_vel_in"], [173, 2, 1, "", "dcm"], [173, 2, 1, "", "orient"], [173, 2, 1, "", "orient_axis"], [173, 2, 1, "", "orient_body_fixed"], [173, 2, 1, "", "orient_explicit"], [173, 2, 1, "", "orient_quaternion"], [173, 2, 1, "", "orient_space_fixed"], [173, 2, 1, "", "orientnew"], [173, 2, 1, "", "partial_velocity"], [173, 2, 1, "", "set_ang_acc"], [173, 2, 1, "", "set_ang_vel"], [173, 2, 1, "", "variable_map"], [173, 4, 1, "", "x"], [173, 4, 1, "", "y"], [173, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[175, 3, 1, "", "cross"], [175, 3, 1, "", "dot"], [175, 3, 1, "", "express"], [176, 3, 1, "", "get_motion_params"], [176, 3, 1, "", "kinematic_equations"], [175, 3, 1, "", "outer"], [176, 3, 1, "", "partial_velocity"], [175, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[176, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[176, 2, 1, "", "a1pt_theory"], [176, 2, 1, "", "a2pt_theory"], [176, 2, 1, "", "acc"], [176, 2, 1, "", "locatenew"], [176, 2, 1, "", "partial_velocity"], [176, 2, 1, "", "pos_from"], [176, 2, 1, "", "set_acc"], [176, 2, 1, "", "set_pos"], [176, 2, 1, "", "set_vel"], [176, 2, 1, "", "v1pt_theory"], [176, 2, 1, "", "v2pt_theory"], [176, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[177, 3, 1, "", "init_vprinting"], [177, 3, 1, "", "vlatex"], [177, 3, 1, "", "vpprint"], [177, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[173, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[173, 2, 1, "", "angle_between"], [173, 2, 1, "", "applyfunc"], [173, 2, 1, "", "cross"], [173, 2, 1, "", "diff"], [173, 2, 1, "", "doit"], [173, 2, 1, "", "dot"], [173, 2, 1, "", "dt"], [173, 2, 1, "", "express"], [173, 2, 1, "", "free_dynamicsymbols"], [173, 2, 1, "", "free_symbols"], [173, 4, 1, "", "func"], [173, 2, 1, "", "magnitude"], [173, 2, 1, "", "normalize"], [173, 2, 1, "", "outer"], [173, 2, 1, "", "separate"], [173, 2, 1, "", "simplify"], [173, 2, 1, "", "subs"], [173, 2, 1, "", "to_matrix"], [173, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[182, 3, 1, "", "clebsch_gordan"], [182, 3, 1, "", "dot_rot_grad_Ynm"], [182, 3, 1, "", "gaunt"], [182, 3, 1, "", "racah"], [182, 3, 1, "", "wigner_3j"], [182, 3, 1, "", "wigner_6j"], [182, 3, 1, "", "wigner_9j"], [182, 3, 1, "", "wigner_d"], [182, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[183, 0, 0, "-", "plot"], [183, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[183, 1, 1, "", "BaseBackend"], [183, 1, 1, "", "BaseSeries"], [183, 1, 1, "", "Line2DBaseSeries"], [183, 1, 1, "", "Line3DBaseSeries"], [183, 1, 1, "", "LineOver1DRangeSeries"], [183, 1, 1, "", "MatplotlibBackend"], [183, 1, 1, "", "Parametric2DLineSeries"], [183, 1, 1, "", "Parametric3DLineSeries"], [183, 1, 1, "", "ParametricSurfaceSeries"], [183, 1, 1, "", "Plot"], [183, 1, 1, "", "PlotGrid"], [183, 1, 1, "", "SurfaceBaseSeries"], [183, 1, 1, "", "SurfaceOver2DRangeSeries"], [183, 1, 1, "", "TextBackend"], [183, 3, 1, "", "plot"], [183, 3, 1, "", "plot3d"], [183, 3, 1, "", "plot3d_parametric_line"], [183, 3, 1, "", "plot3d_parametric_surface"], [183, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[183, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[183, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[183, 2, 1, "", "get_segments"], [183, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[183, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[183, 2, 1, "", "append"], [183, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[183, 1, 1, "", "ImplicitSeries"], [183, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[183, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[184, 1, 1, "", "ExtensionElement"], [184, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[184, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[184, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[184, 1, 1, "", "ModuleHomomorphism"], [184, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[184, 2, 1, "", "image"], [184, 2, 1, "", "is_injective"], [184, 2, 1, "", "is_isomorphism"], [184, 2, 1, "", "is_surjective"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "kernel"], [184, 2, 1, "", "quotient_codomain"], [184, 2, 1, "", "quotient_domain"], [184, 2, 1, "", "restrict_codomain"], [184, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[184, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[184, 2, 1, "", "contains"], [184, 2, 1, "", "depth"], [184, 2, 1, "", "height"], [184, 2, 1, "", "intersect"], [184, 2, 1, "", "is_maximal"], [184, 2, 1, "", "is_primary"], [184, 2, 1, "", "is_prime"], [184, 2, 1, "", "is_principal"], [184, 2, 1, "", "is_radical"], [184, 2, 1, "", "is_whole_ring"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "product"], [184, 2, 1, "", "quotient"], [184, 2, 1, "", "radical"], [184, 2, 1, "", "reduce_element"], [184, 2, 1, "", "saturate"], [184, 2, 1, "", "subset"], [184, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[184, 1, 1, "", "FreeModule"], [184, 1, 1, "", "FreeModuleElement"], [184, 1, 1, "", "Module"], [184, 1, 1, "", "QuotientModule"], [184, 1, 1, "", "QuotientModuleElement"], [184, 1, 1, "", "SubModule"], [184, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[184, 2, 1, "", "basis"], [184, 2, 1, "", "convert"], [184, 5, 1, "", "dtype"], [184, 2, 1, "", "identity_hom"], [184, 2, 1, "", "is_submodule"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "multiply_ideal"], [184, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[184, 2, 1, "", "contains"], [184, 2, 1, "", "convert"], [184, 2, 1, "", "identity_hom"], [184, 2, 1, "", "is_submodule"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "multiply_ideal"], [184, 2, 1, "", "quotient_module"], [184, 2, 1, "", "submodule"], [184, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[184, 2, 1, "", "convert"], [184, 5, 1, "", "dtype"], [184, 2, 1, "", "identity_hom"], [184, 2, 1, "", "is_submodule"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "quotient_hom"], [184, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[184, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[184, 2, 1, "", "convert"], [184, 2, 1, "", "identity_hom"], [184, 2, 1, "", "in_terms_of_generators"], [184, 2, 1, "", "inclusion_hom"], [184, 2, 1, "", "intersect"], [184, 2, 1, "", "is_full_module"], [184, 2, 1, "", "is_submodule"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "module_quotient"], [184, 2, 1, "", "multiply_ideal"], [184, 2, 1, "", "quotient_module"], [184, 2, 1, "", "reduce_element"], [184, 2, 1, "", "submodule"], [184, 2, 1, "", "syzygy_module"], [184, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[184, 2, 1, "", "is_full_module"], [184, 2, 1, "", "quotient_hom"]], "sympy.polys.constructor": [[193, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[190, 3, 1, "", "dmp_abs"], [190, 3, 1, "", "dmp_add"], [190, 3, 1, "", "dmp_add_ground"], [190, 3, 1, "", "dmp_add_mul"], [190, 3, 1, "", "dmp_add_term"], [190, 3, 1, "", "dmp_div"], [190, 3, 1, "", "dmp_expand"], [190, 3, 1, "", "dmp_exquo"], [190, 3, 1, "", "dmp_exquo_ground"], [190, 3, 1, "", "dmp_ff_div"], [190, 3, 1, "", "dmp_l1_norm"], [190, 3, 1, "", "dmp_max_norm"], [190, 3, 1, "", "dmp_mul"], [190, 3, 1, "", "dmp_mul_ground"], [190, 3, 1, "", "dmp_mul_term"], [190, 3, 1, "", "dmp_neg"], [190, 3, 1, "", "dmp_pdiv"], [190, 3, 1, "", "dmp_pexquo"], [190, 3, 1, "", "dmp_pow"], [190, 3, 1, "", "dmp_pquo"], [190, 3, 1, "", "dmp_prem"], [190, 3, 1, "", "dmp_quo"], [190, 3, 1, "", "dmp_quo_ground"], [190, 3, 1, "", "dmp_rem"], [190, 3, 1, "", "dmp_rr_div"], [190, 3, 1, "", "dmp_sqr"], [190, 3, 1, "", "dmp_sub"], [190, 3, 1, "", "dmp_sub_ground"], [190, 3, 1, "", "dmp_sub_mul"], [190, 3, 1, "", "dmp_sub_term"], [190, 3, 1, "", "dup_lshift"], [190, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[190, 3, 1, "", "dmp_LC"], [190, 3, 1, "", "dmp_TC"], [190, 3, 1, "", "dmp_apply_pairs"], [190, 3, 1, "", "dmp_convert"], [190, 3, 1, "", "dmp_copy"], [190, 3, 1, "", "dmp_deflate"], [190, 3, 1, "", "dmp_degree"], [190, 3, 1, "", "dmp_degree_in"], [190, 3, 1, "", "dmp_degree_list"], [190, 3, 1, "", "dmp_eject"], [190, 3, 1, "", "dmp_exclude"], [190, 3, 1, "", "dmp_from_dict"], [190, 3, 1, "", "dmp_from_sympy"], [190, 3, 1, "", "dmp_ground"], [190, 3, 1, "", "dmp_ground_LC"], [190, 3, 1, "", "dmp_ground_TC"], [190, 3, 1, "", "dmp_ground_nth"], [190, 3, 1, "", "dmp_ground_p"], [190, 3, 1, "", "dmp_grounds"], [190, 3, 1, "", "dmp_include"], [190, 3, 1, "", "dmp_inflate"], [190, 3, 1, "", "dmp_inject"], [190, 3, 1, "", "dmp_list_terms"], [190, 3, 1, "", "dmp_multi_deflate"], [190, 3, 1, "", "dmp_negative_p"], [190, 3, 1, "", "dmp_nest"], [190, 3, 1, "", "dmp_normal"], [190, 3, 1, "", "dmp_nth"], [190, 3, 1, "", "dmp_one"], [190, 3, 1, "", "dmp_one_p"], [190, 3, 1, "", "dmp_permute"], [190, 3, 1, "", "dmp_positive_p"], [190, 3, 1, "", "dmp_raise"], [190, 3, 1, "", "dmp_slice"], [190, 3, 1, "", "dmp_strip"], [190, 3, 1, "", "dmp_swap"], [190, 3, 1, "", "dmp_terms_gcd"], [190, 3, 1, "", "dmp_to_dict"], [190, 3, 1, "", "dmp_to_tuple"], [190, 3, 1, "", "dmp_true_LT"], [190, 3, 1, "", "dmp_validate"], [190, 3, 1, "", "dmp_zero"], [190, 3, 1, "", "dmp_zero_p"], [190, 3, 1, "", "dmp_zeros"], [190, 3, 1, "", "dup_random"], [190, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[190, 3, 1, "", "dmp_clear_denoms"], [190, 3, 1, "", "dmp_compose"], [190, 3, 1, "", "dmp_diff"], [190, 3, 1, "", "dmp_diff_eval_in"], [190, 3, 1, "", "dmp_diff_in"], [190, 3, 1, "", "dmp_eval"], [190, 3, 1, "", "dmp_eval_in"], [190, 3, 1, "", "dmp_eval_tail"], [190, 3, 1, "", "dmp_ground_content"], [190, 3, 1, "", "dmp_ground_extract"], [190, 3, 1, "", "dmp_ground_monic"], [190, 3, 1, "", "dmp_ground_primitive"], [190, 3, 1, "", "dmp_ground_trunc"], [190, 3, 1, "", "dmp_integrate"], [190, 3, 1, "", "dmp_integrate_in"], [190, 3, 1, "", "dmp_lift"], [190, 3, 1, "", "dmp_revert"], [190, 3, 1, "", "dmp_trunc"], [190, 3, 1, "", "dup_content"], [190, 3, 1, "", "dup_decompose"], [190, 3, 1, "", "dup_extract"], [190, 3, 1, "", "dup_mirror"], [190, 3, 1, "", "dup_monic"], [190, 3, 1, "", "dup_primitive"], [190, 3, 1, "", "dup_real_imag"], [190, 3, 1, "", "dup_scale"], [190, 3, 1, "", "dup_shift"], [190, 3, 1, "", "dup_sign_variations"], [190, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[193, 3, 1, "", "dispersion"], [193, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[190, 3, 1, "", "sdm_LC"], [190, 3, 1, "", "sdm_LM"], [190, 3, 1, "", "sdm_LT"], [190, 3, 1, "", "sdm_add"], [190, 3, 1, "", "sdm_deg"], [190, 3, 1, "", "sdm_ecart"], [190, 3, 1, "", "sdm_from_dict"], [190, 3, 1, "", "sdm_from_vector"], [190, 3, 1, "", "sdm_groebner"], [190, 3, 1, "", "sdm_monomial_deg"], [190, 3, 1, "", "sdm_monomial_divides"], [190, 3, 1, "", "sdm_monomial_mul"], [190, 3, 1, "", "sdm_mul_term"], [190, 3, 1, "", "sdm_nf_mora"], [190, 3, 1, "", "sdm_spoly"], [190, 3, 1, "", "sdm_to_dict"], [190, 3, 1, "", "sdm_to_vector"], [190, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[188, 1, 1, "", "AlgebraicField"], [188, 1, 1, "", "ComplexField"], [188, 1, 1, "", "ExpressionDomain"], [188, 1, 1, "", "FiniteField"], [188, 1, 1, "", "FractionField"], [188, 1, 1, "", "GMPYFiniteField"], [188, 1, 1, "", "GMPYIntegerRing"], [188, 1, 1, "", "GMPYRationalField"], [188, 1, 1, "", "IntegerRing"], [188, 1, 1, "", "PolynomialRing"], [188, 1, 1, "", "PythonFiniteField"], [188, 1, 1, "", "PythonIntegerRing"], [188, 1, 1, "", "PythonRationalField"], [188, 1, 1, "", "RationalField"], [188, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[188, 2, 1, "", "algebraic_field"], [188, 2, 1, "", "denom"], [188, 2, 1, "", "discriminant"], [188, 5, 1, "", "dtype"], [188, 5, 1, "", "ext"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "integral_basis"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "maximal_order"], [188, 5, 1, "", "mod"], [188, 2, 1, "", "numer"], [188, 5, 1, "", "orig_ext"], [188, 2, 1, "", "primes_above"], [188, 2, 1, "", "to_alg_num"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[188, 2, 1, "", "almosteq"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "get_exact"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[188, 1, 1, "", "Expression"], [188, 2, 1, "", "denom"], [188, 5, 1, "", "dtype"], [188, 2, 1, "", "from_ExpressionDomain"], [188, 2, 1, "", "from_FractionField"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_PolynomialRing"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[188, 2, 1, "", "characteristic"], [188, 2, 1, "", "from_FF"], [188, 2, 1, "", "from_FF_gmpy"], [188, 2, 1, "", "from_FF_python"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[188, 2, 1, "", "denom"], [188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_ComplexField"], [188, 2, 1, "", "from_FractionField"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_PolynomialRing"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_FF_gmpy"], [188, 2, 1, "", "from_FF_python"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "sqrt"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[188, 2, 1, "", "denom"], [188, 2, 1, "", "div"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[188, 2, 1, "", "algebraic_field"], [188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_FF"], [188, 2, 1, "", "from_FF_gmpy"], [188, 2, 1, "", "from_FF_python"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "log"], [188, 2, 1, "", "sqrt"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_ComplexField"], [188, 2, 1, "", "from_FractionField"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_GlobalPolynomialRing"], [188, 2, 1, "", "from_PolynomialRing"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "is_unit"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[188, 2, 1, "", "algebraic_field"], [188, 2, 1, "", "denom"], [188, 2, 1, "", "div"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[188, 2, 1, "", "almosteq"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "get_exact"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "to_rational"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[188, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[188, 2, 1, "", "drop"], [188, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[188, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[188, 2, 1, "", "abs"], [188, 2, 1, "", "add"], [188, 2, 1, "", "alg_field_from_poly"], [188, 2, 1, "", "algebraic_field"], [188, 2, 1, "", "almosteq"], [188, 2, 1, "", "characteristic"], [188, 2, 1, "", "cofactors"], [188, 2, 1, "", "convert"], [188, 2, 1, "", "convert_from"], [188, 2, 1, "", "cyclotomic_field"], [188, 2, 1, "", "denom"], [188, 2, 1, "", "div"], [188, 2, 1, "", "drop"], [188, 5, 1, "", "dtype"], [188, 2, 1, "", "evalf"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "frac_field"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_ComplexField"], [188, 2, 1, "", "from_ExpressionDomain"], [188, 2, 1, "", "from_ExpressionRawDomain"], [188, 2, 1, "", "from_FF"], [188, 2, 1, "", "from_FF_gmpy"], [188, 2, 1, "", "from_FF_python"], [188, 2, 1, "", "from_FractionField"], [188, 2, 1, "", "from_GlobalPolynomialRing"], [188, 2, 1, "", "from_MonogenicFiniteExtension"], [188, 2, 1, "", "from_PolynomialRing"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "get_exact"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "half_gcdex"], [188, 5, 1, "", "has_assoc_Field"], [188, 5, 1, "", "has_assoc_Ring"], [188, 2, 1, "", "inject"], [188, 2, 1, "", "invert"], [188, 5, 1, "", "is_Field"], [188, 5, 1, "", "is_PID"], [188, 5, 1, "", "is_Ring"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_one"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "is_zero"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "log"], [188, 2, 1, "", "map"], [188, 2, 1, "", "mul"], [188, 2, 1, "", "n"], [188, 2, 1, "", "neg"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "of_type"], [188, 2, 1, "", "old_frac_field"], [188, 2, 1, "", "old_poly_ring"], [188, 5, 1, "", "one"], [188, 2, 1, "", "poly_ring"], [188, 2, 1, "", "pos"], [188, 2, 1, "", "pow"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "revert"], [188, 2, 1, "", "sqrt"], [188, 2, 1, "", "sub"], [188, 2, 1, "", "to_sympy"], [188, 4, 1, "", "tp"], [188, 2, 1, "", "unify"], [188, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[188, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[188, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[188, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[188, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[188, 2, 1, "", "div"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "is_unit"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[188, 1, 1, "", "GaussianDomain"], [188, 1, 1, "", "GaussianElement"], [188, 1, 1, "", "GaussianInteger"], [188, 1, 1, "", "GaussianIntegerRing"], [188, 1, 1, "", "GaussianRational"], [188, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "inject"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[188, 2, 1, "", "new"], [188, 2, 1, "", "parent"], [188, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[188, 5, 1, "", "dtype"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[188, 2, 1, "", "as_AlgebraicField"], [188, 2, 1, "", "denom"], [188, 5, 1, "", "dtype"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[188, 1, 1, "", "ComplexElement"], [188, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[188, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[188, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[188, 2, 1, "", "denom"], [188, 2, 1, "", "div"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "free_module"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "ideal"], [188, 2, 1, "", "invert"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "quotient_ring"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[188, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[188, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[190, 3, 1, "", "dmp_cancel"], [190, 3, 1, "", "dmp_content"], [190, 3, 1, "", "dmp_discriminant"], [190, 3, 1, "", "dmp_euclidean_prs"], [190, 3, 1, "", "dmp_ff_prs_gcd"], [190, 3, 1, "", "dmp_gcd"], [190, 3, 1, "", "dmp_gcdex"], [190, 3, 1, "", "dmp_half_gcdex"], [190, 3, 1, "", "dmp_inner_gcd"], [190, 3, 1, "", "dmp_inner_subresultants"], [190, 3, 1, "", "dmp_invert"], [190, 3, 1, "", "dmp_lcm"], [190, 3, 1, "", "dmp_primitive"], [190, 3, 1, "", "dmp_primitive_prs"], [190, 3, 1, "", "dmp_prs_resultant"], [190, 3, 1, "", "dmp_qq_collins_resultant"], [190, 3, 1, "", "dmp_qq_heu_gcd"], [190, 3, 1, "", "dmp_resultant"], [190, 3, 1, "", "dmp_rr_prs_gcd"], [190, 3, 1, "", "dmp_subresultants"], [190, 3, 1, "", "dmp_zz_collins_resultant"], [190, 3, 1, "", "dmp_zz_heu_gcd"], [190, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[190, 3, 1, "", "dmp_ext_factor"], [190, 3, 1, "", "dmp_factor_list"], [190, 3, 1, "", "dmp_factor_list_include"], [190, 3, 1, "", "dmp_irreducible_p"], [190, 3, 1, "", "dmp_trial_division"], [190, 3, 1, "", "dmp_zz_diophantine"], [190, 3, 1, "", "dmp_zz_factor"], [190, 3, 1, "", "dmp_zz_mignotte_bound"], [190, 3, 1, "", "dmp_zz_wang"], [190, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [190, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [190, 3, 1, "", "dmp_zz_wang_non_divisors"], [190, 3, 1, "", "dmp_zz_wang_test_points"], [190, 3, 1, "", "dup_cyclotomic_p"], [190, 3, 1, "", "dup_gf_factor"], [190, 3, 1, "", "dup_zz_cyclotomic_factor"], [190, 3, 1, "", "dup_zz_cyclotomic_poly"], [190, 3, 1, "", "dup_zz_factor"], [190, 3, 1, "", "dup_zz_factor_sqf"], [190, 3, 1, "", "dup_zz_hensel_lift"], [190, 3, 1, "", "dup_zz_hensel_step"], [190, 3, 1, "", "dup_zz_irreducible_p"], [190, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[190, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[188, 1, 1, "", "FracElement"], [188, 1, 1, "", "FracField"], [188, 3, 1, "", "field"], [188, 3, 1, "", "sfield"], [188, 3, 1, "", "vfield"], [188, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[188, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[190, 3, 1, "", "gf_LC"], [190, 3, 1, "", "gf_Qbasis"], [190, 3, 1, "", "gf_Qmatrix"], [190, 3, 1, "", "gf_TC"], [190, 3, 1, "", "gf_add"], [190, 3, 1, "", "gf_add_ground"], [190, 3, 1, "", "gf_add_mul"], [190, 3, 1, "", "gf_berlekamp"], [190, 3, 1, "", "gf_cofactors"], [190, 3, 1, "", "gf_compose"], [190, 3, 1, "", "gf_compose_mod"], [190, 3, 1, "", "gf_crt"], [190, 3, 1, "", "gf_crt1"], [190, 3, 1, "", "gf_crt2"], [190, 3, 1, "", "gf_csolve"], [190, 3, 1, "", "gf_degree"], [190, 3, 1, "", "gf_diff"], [190, 3, 1, "", "gf_div"], [190, 3, 1, "", "gf_eval"], [190, 3, 1, "", "gf_expand"], [190, 3, 1, "", "gf_exquo"], [190, 3, 1, "", "gf_factor"], [190, 3, 1, "", "gf_factor_sqf"], [190, 3, 1, "", "gf_from_dict"], [190, 3, 1, "", "gf_from_int_poly"], [190, 3, 1, "", "gf_gcd"], [190, 3, 1, "", "gf_gcdex"], [190, 3, 1, "", "gf_int"], [190, 3, 1, "", "gf_irreducible"], [190, 3, 1, "", "gf_irreducible_p"], [190, 3, 1, "", "gf_lcm"], [190, 3, 1, "", "gf_lshift"], [190, 3, 1, "", "gf_monic"], [190, 3, 1, "", "gf_mul"], [190, 3, 1, "", "gf_mul_ground"], [190, 3, 1, "", "gf_multi_eval"], [190, 3, 1, "", "gf_neg"], [190, 3, 1, "", "gf_normal"], [190, 3, 1, "", "gf_pow"], [190, 3, 1, "", "gf_pow_mod"], [190, 3, 1, "", "gf_quo"], [190, 3, 1, "", "gf_quo_ground"], [190, 3, 1, "", "gf_random"], [190, 3, 1, "", "gf_rem"], [190, 3, 1, "", "gf_rshift"], [190, 3, 1, "", "gf_shoup"], [190, 3, 1, "", "gf_sqf_list"], [190, 3, 1, "", "gf_sqf_p"], [190, 3, 1, "", "gf_sqf_part"], [190, 3, 1, "", "gf_sqr"], [190, 3, 1, "", "gf_strip"], [190, 3, 1, "", "gf_sub"], [190, 3, 1, "", "gf_sub_ground"], [190, 3, 1, "", "gf_sub_mul"], [190, 3, 1, "", "gf_to_dict"], [190, 3, 1, "", "gf_to_int_poly"], [190, 3, 1, "", "gf_trace_map"], [190, 3, 1, "", "gf_trunc"], [190, 3, 1, "", "gf_value"], [190, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[190, 3, 1, "", "groebner"], [190, 3, 1, "", "is_groebner"], [190, 3, 1, "", "is_minimal"], [190, 3, 1, "", "is_reduced"], [190, 3, 1, "", "red_groebner"], [190, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[186, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[186, 2, 1, "", "add"], [186, 2, 1, "", "charpoly"], [186, 2, 1, "", "det"], [186, 2, 1, "", "hstack"], [186, 2, 1, "", "inv"], [186, 2, 1, "", "is_lower"], [186, 2, 1, "", "is_upper"], [186, 2, 1, "", "is_zero_matrix"], [186, 2, 1, "", "lu"], [186, 2, 1, "", "lu_solve"], [186, 2, 1, "", "matmul"], [186, 2, 1, "", "neg"], [186, 2, 1, "", "rref"], [186, 2, 1, "", "scc"], [186, 2, 1, "", "sub"], [186, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[186, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[186, 2, 1, "", "add"], [186, 2, 1, "", "charpoly"], [186, 2, 1, "", "columnspace"], [186, 2, 1, "", "convert_to"], [186, 2, 1, "", "det"], [186, 2, 1, "", "diag"], [186, 2, 1, "", "eye"], [186, 2, 1, "", "from_Matrix"], [186, 2, 1, "", "from_dict_sympy"], [186, 2, 1, "", "from_list"], [186, 2, 1, "", "from_list_sympy"], [186, 2, 1, "", "from_rep"], [186, 2, 1, "", "hstack"], [186, 2, 1, "", "inv"], [186, 4, 1, "", "is_lower"], [186, 4, 1, "", "is_upper"], [186, 2, 1, "", "lu"], [186, 2, 1, "", "lu_solve"], [186, 2, 1, "", "matmul"], [186, 2, 1, "", "mul"], [186, 2, 1, "", "neg"], [186, 2, 1, "", "nullspace"], [186, 2, 1, "", "ones"], [186, 2, 1, "", "pow"], [186, 2, 1, "", "rowspace"], [186, 2, 1, "", "rref"], [186, 2, 1, "", "scc"], [186, 2, 1, "", "sub"], [186, 2, 1, "", "to_Matrix"], [186, 2, 1, "", "to_dense"], [186, 2, 1, "", "to_field"], [186, 2, 1, "", "to_sparse"], [186, 2, 1, "", "transpose"], [186, 2, 1, "", "unify"], [186, 2, 1, "", "vstack"], [186, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[186, 3, 1, "", "hermite_normal_form"], [186, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[186, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[186, 2, 1, "", "add"], [186, 2, 1, "", "charpoly"], [186, 2, 1, "", "convert_to"], [186, 2, 1, "", "copy"], [186, 2, 1, "", "det"], [186, 2, 1, "", "eye"], [186, 2, 1, "", "from_ddm"], [186, 2, 1, "", "from_list"], [186, 2, 1, "", "hstack"], [186, 2, 1, "", "inv"], [186, 2, 1, "", "is_lower"], [186, 2, 1, "", "is_upper"], [186, 2, 1, "", "is_zero_matrix"], [186, 2, 1, "", "lu"], [186, 2, 1, "", "lu_solve"], [186, 2, 1, "", "matmul"], [186, 2, 1, "", "mul"], [186, 2, 1, "", "neg"], [186, 2, 1, "", "new"], [186, 2, 1, "", "nullspace"], [186, 2, 1, "", "rref"], [186, 2, 1, "", "scc"], [186, 2, 1, "", "sub"], [186, 2, 1, "", "to_ddm"], [186, 2, 1, "", "to_list"], [186, 2, 1, "", "transpose"], [186, 2, 1, "", "vstack"], [186, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[190, 3, 1, "", "_modgcd_multivariate_p"], [190, 3, 1, "", "func_field_modgcd"], [190, 3, 1, "", "modgcd_bivariate"], [190, 3, 1, "", "modgcd_multivariate"], [190, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[193, 1, 1, "", "Monomial"], [193, 3, 1, "", "itermonomials"], [193, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[193, 2, 1, "", "as_expr"], [193, 2, 1, "", "gcd"], [193, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[192, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[192, 3, 1, "", "minimal_polynomial"], [192, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[192, 0, 0, "-", "modules"], [192, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[192, 1, 1, "", "EndomorphismRing"], [192, 1, 1, "", "InnerEndomorphism"], [192, 1, 1, "", "Module"], [192, 1, 1, "", "ModuleElement"], [192, 1, 1, "", "ModuleEndomorphism"], [192, 1, 1, "", "ModuleHomomorphism"], [192, 1, 1, "", "PowerBasis"], [192, 1, 1, "", "PowerBasisElement"], [192, 1, 1, "", "Submodule"], [192, 3, 1, "", "find_min_poly"], [192, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[192, 2, 1, "", "__init__"], [192, 2, 1, "", "inner_endomorphism"], [192, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[192, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[192, 2, 1, "", "__call__"], [192, 2, 1, "", "ancestors"], [192, 2, 1, "", "basis_elements"], [192, 2, 1, "", "element_from_rational"], [192, 2, 1, "", "endomorphism_ring"], [192, 2, 1, "", "is_compat_col"], [192, 2, 1, "", "mult_tab"], [192, 4, 1, "", "n"], [192, 2, 1, "", "nearest_common_ancestor"], [192, 4, 1, "", "number_field"], [192, 2, 1, "", "one"], [192, 4, 1, "", "parent"], [192, 2, 1, "", "power_basis_ancestor"], [192, 2, 1, "", "represent"], [192, 2, 1, "", "starts_with_unity"], [192, 2, 1, "", "submodule_from_gens"], [192, 2, 1, "", "submodule_from_matrix"], [192, 2, 1, "", "whole_submodule"], [192, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[192, 4, 1, "", "QQ_col"], [192, 2, 1, "", "__add__"], [192, 2, 1, "", "__init__"], [192, 2, 1, "", "__mod__"], [192, 2, 1, "", "__mul__"], [192, 2, 1, "", "column"], [192, 2, 1, "", "equiv"], [192, 2, 1, "", "from_int_list"], [192, 2, 1, "", "is_compat"], [192, 4, 1, "", "n"], [192, 2, 1, "", "over_power_basis"], [192, 2, 1, "", "reduced"], [192, 2, 1, "", "reduced_mod_p"], [192, 2, 1, "", "to_ancestor"], [192, 2, 1, "", "to_parent"], [192, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[192, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[192, 2, 1, "", "__init__"], [192, 2, 1, "", "kernel"], [192, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[192, 2, 1, "", "__init__"], [192, 2, 1, "", "element_from_ANP"], [192, 2, 1, "", "element_from_alg_num"], [192, 2, 1, "", "element_from_poly"], [192, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[192, 4, 1, "", "T"], [192, 2, 1, "", "as_expr"], [192, 4, 1, "", "generator"], [192, 4, 1, "", "is_rational"], [192, 2, 1, "", "norm"], [192, 2, 1, "", "numerator"], [192, 2, 1, "", "poly"], [192, 2, 1, "", "to_ANP"], [192, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[192, 4, 1, "", "QQ_matrix"], [192, 2, 1, "", "__init__"], [192, 2, 1, "", "add"], [192, 2, 1, "", "basis_element_pullbacks"], [192, 2, 1, "", "discard_before"], [192, 2, 1, "", "mul"], [192, 2, 1, "", "reduce_element"], [192, 2, 1, "", "reduced"], [192, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[192, 1, 1, "", "PrimeIdeal"], [192, 3, 1, "", "prime_decomp"], [192, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[192, 2, 1, "", "__add__"], [192, 2, 1, "", "__init__"], [192, 2, 1, "", "__mul__"], [192, 2, 1, "", "as_submodule"], [192, 4, 1, "", "is_inert"], [192, 2, 1, "", "reduce_ANP"], [192, 2, 1, "", "reduce_alg_num"], [192, 2, 1, "", "reduce_element"], [192, 2, 1, "", "repr"], [192, 2, 1, "", "test_factor"], [192, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[192, 3, 1, "", "field_isomorphism"], [192, 3, 1, "", "primitive_element"], [192, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[192, 1, 1, "", "AlgIntPowers"], [192, 3, 1, "", "coeff_search"], [192, 3, 1, "", "extract_fundamental_discriminant"], [192, 3, 1, "", "get_num_denom"], [192, 3, 1, "", "is_int"], [192, 3, 1, "", "is_rat"], [192, 3, 1, "", "isolate"], [192, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[192, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[193, 1, 1, "", "GradedLexOrder"], [193, 1, 1, "", "LexOrder"], [193, 1, 1, "", "MonomialOrder"], [193, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[193, 3, 1, "", "chebyshevt_poly"], [193, 3, 1, "", "chebyshevu_poly"], [193, 3, 1, "", "gegenbauer_poly"], [193, 3, 1, "", "hermite_poly"], [193, 3, 1, "", "jacobi_poly"], [193, 3, 1, "", "laguerre_poly"], [193, 3, 1, "", "legendre_poly"], [193, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[193, 3, 1, "", "apart"], [193, 3, 1, "", "apart_list"], [193, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[188, 1, 1, "", "ANP"], [188, 1, 1, "", "DMF"], [188, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[188, 2, 1, "", "LC"], [188, 2, 1, "", "TC"], [188, 4, 1, "", "is_ground"], [188, 4, 1, "", "is_one"], [188, 4, 1, "", "is_zero"], [188, 2, 1, "", "pow"], [188, 2, 1, "", "to_dict"], [188, 2, 1, "", "to_list"], [188, 2, 1, "", "to_sympy_dict"], [188, 2, 1, "", "to_sympy_list"], [188, 2, 1, "", "to_tuple"], [188, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[188, 2, 1, "", "add"], [188, 2, 1, "", "cancel"], [188, 2, 1, "", "denom"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "frac_unify"], [188, 2, 1, "", "half_per"], [188, 2, 1, "", "invert"], [188, 4, 1, "", "is_one"], [188, 4, 1, "", "is_zero"], [188, 2, 1, "", "mul"], [188, 2, 1, "", "neg"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "per"], [188, 2, 1, "", "poly_unify"], [188, 2, 1, "", "pow"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[188, 2, 1, "", "LC"], [188, 2, 1, "", "TC"], [188, 2, 1, "", "abs"], [188, 2, 1, "", "add"], [188, 2, 1, "", "add_ground"], [188, 2, 1, "", "all_coeffs"], [188, 2, 1, "", "all_monoms"], [188, 2, 1, "", "all_terms"], [188, 2, 1, "", "cancel"], [188, 2, 1, "", "cauchy_lower_bound"], [188, 2, 1, "", "cauchy_upper_bound"], [188, 2, 1, "", "clear_denoms"], [188, 2, 1, "", "coeffs"], [188, 2, 1, "", "cofactors"], [188, 2, 1, "", "compose"], [188, 2, 1, "", "content"], [188, 2, 1, "", "convert"], [188, 2, 1, "", "count_complex_roots"], [188, 2, 1, "", "count_real_roots"], [188, 2, 1, "", "decompose"], [188, 2, 1, "", "deflate"], [188, 2, 1, "", "degree"], [188, 2, 1, "", "degree_list"], [188, 2, 1, "", "diff"], [188, 2, 1, "", "discriminant"], [188, 2, 1, "", "div"], [188, 2, 1, "", "eject"], [188, 2, 1, "", "eval"], [188, 2, 1, "", "exclude"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "exquo_ground"], [188, 2, 1, "", "factor_list"], [188, 2, 1, "", "factor_list_include"], [188, 2, 1, "", "from_dict"], [188, 2, 1, "", "from_list"], [188, 2, 1, "", "from_sympy_list"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "gff_list"], [188, 2, 1, "", "half_gcdex"], [188, 2, 1, "", "homogeneous_order"], [188, 2, 1, "", "homogenize"], [188, 2, 1, "", "inject"], [188, 2, 1, "", "integrate"], [188, 2, 1, "", "intervals"], [188, 2, 1, "", "invert"], [188, 4, 1, "", "is_cyclotomic"], [188, 4, 1, "", "is_ground"], [188, 4, 1, "", "is_homogeneous"], [188, 4, 1, "", "is_irreducible"], [188, 4, 1, "", "is_linear"], [188, 4, 1, "", "is_monic"], [188, 4, 1, "", "is_monomial"], [188, 4, 1, "", "is_one"], [188, 4, 1, "", "is_primitive"], [188, 4, 1, "", "is_quadratic"], [188, 4, 1, "", "is_sqf"], [188, 4, 1, "", "is_zero"], [188, 2, 1, "", "l1_norm"], [188, 2, 1, "", "l2_norm_squared"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "lift"], [188, 2, 1, "", "max_norm"], [188, 2, 1, "", "mignotte_sep_bound_squared"], [188, 2, 1, "", "monic"], [188, 2, 1, "", "monoms"], [188, 2, 1, "", "mul"], [188, 2, 1, "", "mul_ground"], [188, 2, 1, "", "neg"], [188, 2, 1, "", "norm"], [188, 2, 1, "", "nth"], [188, 2, 1, "", "pdiv"], [188, 2, 1, "", "per"], [188, 2, 1, "", "permute"], [188, 2, 1, "", "pexquo"], [188, 2, 1, "", "pow"], [188, 2, 1, "", "pquo"], [188, 2, 1, "", "prem"], [188, 2, 1, "", "primitive"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "quo_ground"], [188, 2, 1, "", "refine_root"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "resultant"], [188, 2, 1, "", "revert"], [188, 2, 1, "", "shift"], [188, 2, 1, "", "slice"], [188, 2, 1, "", "sqf_list"], [188, 2, 1, "", "sqf_list_include"], [188, 2, 1, "", "sqf_norm"], [188, 2, 1, "", "sqf_part"], [188, 2, 1, "", "sqr"], [188, 2, 1, "", "sturm"], [188, 2, 1, "", "sub"], [188, 2, 1, "", "sub_ground"], [188, 2, 1, "", "subresultants"], [188, 2, 1, "", "terms"], [188, 2, 1, "", "terms_gcd"], [188, 2, 1, "", "to_dict"], [188, 2, 1, "", "to_exact"], [188, 2, 1, "", "to_field"], [188, 2, 1, "", "to_list"], [188, 2, 1, "", "to_ring"], [188, 2, 1, "", "to_sympy_dict"], [188, 2, 1, "", "to_sympy_list"], [188, 2, 1, "", "to_tuple"], [188, 2, 1, "", "total_degree"], [188, 2, 1, "", "transform"], [188, 2, 1, "", "trunc"], [188, 2, 1, "", "unify"]], "sympy.polys": [[190, 0, 0, "-", "polyconfig"], [190, 0, 0, "-", "polyoptions"], [195, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[190, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[190, 1, 1, "", "BasePolynomialError"], [190, 1, 1, "", "CoercionFailed"], [190, 1, 1, "", "ComputationFailed"], [190, 1, 1, "", "DomainError"], [190, 1, 1, "", "EvaluationFailed"], [190, 1, 1, "", "ExactQuotientFailed"], [190, 1, 1, "", "ExtraneousFactors"], [190, 1, 1, "", "FlagError"], [190, 1, 1, "", "GeneratorsError"], [190, 1, 1, "", "GeneratorsNeeded"], [190, 1, 1, "", "HeuristicGCDFailed"], [190, 1, 1, "", "HomomorphismFailed"], [190, 1, 1, "", "IsomorphismFailed"], [190, 1, 1, "", "MultivariatePolynomialError"], [190, 1, 1, "", "NotAlgebraic"], [190, 1, 1, "", "NotInvertible"], [190, 1, 1, "", "NotReversible"], [190, 1, 1, "", "OperationNotSupported"], [190, 1, 1, "", "OptionError"], [190, 1, 1, "", "PolificationFailed"], [190, 1, 1, "", "PolynomialError"], [190, 1, 1, "", "RefinementFailed"], [190, 1, 1, "", "UnificationFailed"], [190, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[193, 3, 1, "", "horner"], [193, 3, 1, "", "interpolate"], [193, 3, 1, "", "symmetrize"], [193, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[190, 1, 1, "", "Options"], [190, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[190, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[193, 3, 1, "", "roots"]], "sympy.polys.polytools": [[193, 1, 1, "", "GroebnerBasis"], [193, 3, 1, "", "LC"], [193, 3, 1, "", "LM"], [193, 3, 1, "", "LT"], [193, 1, 1, "", "Poly"], [193, 1, 1, "", "PurePoly"], [193, 3, 1, "", "cancel"], [193, 3, 1, "", "cofactors"], [193, 3, 1, "", "compose"], [193, 3, 1, "", "content"], [193, 3, 1, "", "count_roots"], [193, 3, 1, "", "decompose"], [193, 3, 1, "", "degree"], [193, 3, 1, "", "degree_list"], [193, 3, 1, "", "discriminant"], [193, 3, 1, "", "div"], [193, 3, 1, "", "exquo"], [193, 3, 1, "", "factor"], [193, 3, 1, "", "factor_list"], [193, 3, 1, "", "gcd"], [193, 3, 1, "", "gcd_list"], [193, 3, 1, "", "gcdex"], [193, 3, 1, "", "gff"], [193, 3, 1, "", "gff_list"], [193, 3, 1, "", "groebner"], [193, 3, 1, "", "ground_roots"], [193, 3, 1, "", "half_gcdex"], [193, 3, 1, "", "intervals"], [193, 3, 1, "", "invert"], [193, 3, 1, "", "is_zero_dimensional"], [193, 3, 1, "", "lcm"], [193, 3, 1, "", "lcm_list"], [193, 3, 1, "", "monic"], [193, 3, 1, "", "nroots"], [193, 3, 1, "", "nth_power_roots_poly"], [193, 3, 1, "", "parallel_poly_from_expr"], [193, 3, 1, "", "pdiv"], [193, 3, 1, "", "pexquo"], [193, 3, 1, "", "poly"], [193, 3, 1, "", "poly_from_expr"], [193, 3, 1, "", "pquo"], [193, 3, 1, "", "prem"], [193, 3, 1, "", "primitive"], [193, 3, 1, "", "quo"], [193, 3, 1, "", "real_roots"], [193, 3, 1, "", "reduced"], [193, 3, 1, "", "refine_root"], [193, 3, 1, "", "rem"], [193, 3, 1, "", "resultant"], [193, 3, 1, "", "sqf"], [193, 3, 1, "", "sqf_list"], [193, 3, 1, "", "sqf_norm"], [193, 3, 1, "", "sqf_part"], [193, 3, 1, "", "sturm"], [193, 3, 1, "", "subresultants"], [193, 3, 1, "", "terms_gcd"], [193, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[193, 2, 1, "", "contains"], [193, 2, 1, "", "fglm"], [193, 4, 1, "", "is_zero_dimensional"], [193, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[193, 2, 1, "", "EC"], [193, 2, 1, "", "EM"], [193, 2, 1, "", "ET"], [193, 2, 1, "", "LC"], [193, 2, 1, "", "LM"], [193, 2, 1, "", "LT"], [193, 2, 1, "", "TC"], [193, 2, 1, "", "abs"], [193, 2, 1, "", "add"], [193, 2, 1, "", "add_ground"], [193, 2, 1, "", "all_coeffs"], [193, 2, 1, "", "all_monoms"], [193, 2, 1, "", "all_roots"], [193, 2, 1, "", "all_terms"], [193, 2, 1, "", "as_dict"], [193, 2, 1, "", "as_expr"], [193, 2, 1, "", "as_list"], [193, 2, 1, "", "as_poly"], [193, 2, 1, "", "cancel"], [193, 2, 1, "", "clear_denoms"], [193, 2, 1, "", "coeff_monomial"], [193, 2, 1, "", "coeffs"], [193, 2, 1, "", "cofactors"], [193, 2, 1, "", "compose"], [193, 2, 1, "", "content"], [193, 2, 1, "", "count_roots"], [193, 2, 1, "", "decompose"], [193, 2, 1, "", "deflate"], [193, 2, 1, "", "degree"], [193, 2, 1, "", "degree_list"], [193, 2, 1, "", "diff"], [193, 2, 1, "", "discriminant"], [193, 2, 1, "", "dispersion"], [193, 2, 1, "", "dispersionset"], [193, 2, 1, "", "div"], [193, 4, 1, "", "domain"], [193, 2, 1, "", "eject"], [193, 2, 1, "", "eval"], [193, 2, 1, "", "exclude"], [193, 2, 1, "", "exquo"], [193, 2, 1, "", "exquo_ground"], [193, 2, 1, "", "factor_list"], [193, 2, 1, "", "factor_list_include"], [193, 4, 1, "", "free_symbols"], [193, 4, 1, "", "free_symbols_in_domain"], [193, 2, 1, "", "from_dict"], [193, 2, 1, "", "from_expr"], [193, 2, 1, "", "from_list"], [193, 2, 1, "", "from_poly"], [193, 2, 1, "", "gcd"], [193, 2, 1, "", "gcdex"], [193, 4, 1, "", "gen"], [193, 2, 1, "", "get_domain"], [193, 2, 1, "", "get_modulus"], [193, 2, 1, "", "gff_list"], [193, 2, 1, "", "ground_roots"], [193, 2, 1, "", "half_gcdex"], [193, 2, 1, "", "has_only_gens"], [193, 2, 1, "", "homogeneous_order"], [193, 2, 1, "", "homogenize"], [193, 2, 1, "", "inject"], [193, 2, 1, "", "integrate"], [193, 2, 1, "", "intervals"], [193, 2, 1, "", "invert"], [193, 4, 1, "", "is_cyclotomic"], [193, 4, 1, "", "is_ground"], [193, 4, 1, "", "is_homogeneous"], [193, 4, 1, "", "is_irreducible"], [193, 4, 1, "", "is_linear"], [193, 4, 1, "", "is_monic"], [193, 4, 1, "", "is_monomial"], [193, 4, 1, "", "is_multivariate"], [193, 4, 1, "", "is_one"], [193, 4, 1, "", "is_primitive"], [193, 4, 1, "", "is_quadratic"], [193, 4, 1, "", "is_sqf"], [193, 4, 1, "", "is_univariate"], [193, 4, 1, "", "is_zero"], [193, 2, 1, "", "l1_norm"], [193, 2, 1, "", "lcm"], [193, 2, 1, "", "length"], [193, 2, 1, "", "lift"], [193, 2, 1, "", "ltrim"], [193, 2, 1, "", "match"], [193, 2, 1, "", "max_norm"], [193, 2, 1, "", "monic"], [193, 2, 1, "", "monoms"], [193, 2, 1, "", "mul"], [193, 2, 1, "", "mul_ground"], [193, 2, 1, "", "neg"], [193, 2, 1, "", "new"], [193, 2, 1, "", "norm"], [193, 2, 1, "", "nroots"], [193, 2, 1, "", "nth"], [193, 2, 1, "", "nth_power_roots_poly"], [193, 4, 1, "", "one"], [193, 2, 1, "", "pdiv"], [193, 2, 1, "", "per"], [193, 2, 1, "", "pexquo"], [193, 2, 1, "", "pow"], [193, 2, 1, "", "pquo"], [193, 2, 1, "", "prem"], [193, 2, 1, "", "primitive"], [193, 2, 1, "", "quo"], [193, 2, 1, "", "quo_ground"], [193, 2, 1, "", "rat_clear_denoms"], [193, 2, 1, "", "real_roots"], [193, 2, 1, "", "refine_root"], [193, 2, 1, "", "rem"], [193, 2, 1, "", "reorder"], [193, 2, 1, "", "replace"], [193, 2, 1, "", "resultant"], [193, 2, 1, "", "retract"], [193, 2, 1, "", "revert"], [193, 2, 1, "", "root"], [193, 2, 1, "", "same_root"], [193, 2, 1, "", "set_domain"], [193, 2, 1, "", "set_modulus"], [193, 2, 1, "", "shift"], [193, 2, 1, "", "slice"], [193, 2, 1, "", "sqf_list"], [193, 2, 1, "", "sqf_list_include"], [193, 2, 1, "", "sqf_norm"], [193, 2, 1, "", "sqf_part"], [193, 2, 1, "", "sqr"], [193, 2, 1, "", "sturm"], [193, 2, 1, "", "sub"], [193, 2, 1, "", "sub_ground"], [193, 2, 1, "", "subresultants"], [193, 2, 1, "", "terms"], [193, 2, 1, "", "terms_gcd"], [193, 2, 1, "", "termwise"], [193, 2, 1, "", "to_exact"], [193, 2, 1, "", "to_field"], [193, 2, 1, "", "to_ring"], [193, 2, 1, "", "total_degree"], [193, 2, 1, "", "transform"], [193, 2, 1, "", "trunc"], [193, 2, 1, "", "unify"], [193, 4, 1, "", "unit"], [193, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[193, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[193, 3, 1, "", "together"]], "sympy.polys.ring_series": [[194, 3, 1, "", "_tan1"], [194, 3, 1, "", "mul_xin"], [194, 3, 1, "", "pow_xin"], [194, 3, 1, "", "rs_LambertW"], [194, 3, 1, "", "rs_asin"], [194, 3, 1, "", "rs_atan"], [194, 3, 1, "", "rs_atanh"], [194, 3, 1, "", "rs_compose_add"], [194, 3, 1, "", "rs_cos"], [194, 3, 1, "", "rs_cos_sin"], [194, 3, 1, "", "rs_cosh"], [194, 3, 1, "", "rs_cot"], [194, 3, 1, "", "rs_diff"], [194, 3, 1, "", "rs_exp"], [194, 3, 1, "", "rs_fun"], [194, 3, 1, "", "rs_hadamard_exp"], [194, 3, 1, "", "rs_integrate"], [194, 3, 1, "", "rs_is_puiseux"], [194, 3, 1, "", "rs_log"], [194, 3, 1, "", "rs_mul"], [194, 3, 1, "", "rs_newton"], [194, 3, 1, "", "rs_nth_root"], [194, 3, 1, "", "rs_pow"], [194, 3, 1, "", "rs_puiseux"], [194, 3, 1, "", "rs_puiseux2"], [194, 3, 1, "", "rs_series_from_list"], [194, 3, 1, "", "rs_series_inversion"], [194, 3, 1, "", "rs_series_reversion"], [194, 3, 1, "", "rs_sin"], [194, 3, 1, "", "rs_sinh"], [194, 3, 1, "", "rs_square"], [194, 3, 1, "", "rs_subs"], [194, 3, 1, "", "rs_tan"], [194, 3, 1, "", "rs_tanh"], [194, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[188, 1, 1, "", "PolyElement"], [188, 1, 1, "", "PolyRing"], [188, 3, 1, "", "ring"], [188, 3, 1, "", "sring"], [188, 3, 1, "", "vring"], [188, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[188, 2, 1, "", "almosteq"], [188, 2, 1, "", "cancel"], [188, 2, 1, "", "coeff"], [188, 2, 1, "", "coeffs"], [188, 2, 1, "", "const"], [188, 2, 1, "", "content"], [188, 2, 1, "", "copy"], [188, 2, 1, "", "degree"], [188, 2, 1, "", "degrees"], [188, 2, 1, "", "diff"], [188, 2, 1, "", "div"], [188, 2, 1, "", "imul_num"], [188, 2, 1, "", "itercoeffs"], [188, 2, 1, "", "itermonoms"], [188, 2, 1, "", "iterterms"], [188, 2, 1, "", "leading_expv"], [188, 2, 1, "", "leading_monom"], [188, 2, 1, "", "leading_term"], [188, 2, 1, "", "listcoeffs"], [188, 2, 1, "", "listmonoms"], [188, 2, 1, "", "listterms"], [188, 2, 1, "", "monic"], [188, 2, 1, "", "monoms"], [188, 2, 1, "", "primitive"], [188, 2, 1, "", "square"], [188, 2, 1, "", "strip_zero"], [188, 2, 1, "", "tail_degree"], [188, 2, 1, "", "tail_degrees"], [188, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[188, 2, 1, "", "add"], [188, 2, 1, "", "add_gens"], [188, 2, 1, "", "compose"], [188, 2, 1, "", "drop"], [188, 2, 1, "", "drop_to_ground"], [188, 2, 1, "", "index"], [188, 2, 1, "", "monomial_basis"], [188, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[193, 1, 1, "", "ComplexRootOf"], [193, 1, 1, "", "RootOf"], [193, 1, 1, "", "RootSum"], [193, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[193, 2, 1, "", "_all_roots"], [193, 2, 1, "", "_complexes_index"], [193, 2, 1, "", "_complexes_sorted"], [193, 2, 1, "", "_count_roots"], [193, 2, 1, "", "_ensure_complexes_init"], [193, 2, 1, "", "_ensure_reals_init"], [193, 2, 1, "", "_eval_evalf"], [193, 2, 1, "", "_eval_is_imaginary"], [193, 2, 1, "", "_eval_is_real"], [193, 2, 1, "", "_get_complexes"], [193, 2, 1, "", "_get_complexes_sqf"], [193, 2, 1, "", "_get_interval"], [193, 2, 1, "", "_get_reals"], [193, 2, 1, "", "_get_reals_sqf"], [193, 2, 1, "", "_get_roots"], [193, 2, 1, "", "_indexed_root"], [193, 2, 1, "", "_new"], [193, 2, 1, "", "_postprocess_root"], [193, 2, 1, "", "_preprocess_roots"], [193, 2, 1, "", "_real_roots"], [193, 2, 1, "", "_reals_index"], [193, 2, 1, "", "_reals_sorted"], [193, 2, 1, "", "_refine_complexes"], [193, 2, 1, "", "_reset"], [193, 2, 1, "", "_roots_trivial"], [193, 2, 1, "", "_set_interval"], [193, 2, 1, "", "all_roots"], [193, 2, 1, "", "clear_cache"], [193, 2, 1, "", "eval_approx"], [193, 2, 1, "", "eval_rational"], [193, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[193, 2, 1, "", "new"]], "sympy.polys.solvers": [[195, 3, 1, "", "_solve_lin_sys"], [195, 3, 1, "", "_solve_lin_sys_component"], [195, 3, 1, "", "eqs_to_matrix"], [195, 3, 1, "", "solve_lin_sys"], [195, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[193, 3, 1, "", "cyclotomic_poly"], [193, 3, 1, "", "interpolating_poly"], [193, 3, 1, "", "random_poly"], [193, 3, 1, "", "swinnerton_dyer_poly"], [193, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[197, 0, 0, "-", "aesaracode"], [197, 0, 0, "-", "c"], [197, 0, 0, "-", "codeprinter"], [197, 0, 0, "-", "conventions"], [197, 0, 0, "-", "cxx"], [197, 0, 0, "-", "fortran"], [197, 0, 0, "-", "gtk"], [197, 0, 0, "-", "jscode"], [197, 0, 0, "-", "julia"], [197, 0, 0, "-", "lambdarepr"], [197, 0, 0, "-", "latex"], [197, 0, 0, "-", "maple"], [197, 0, 0, "-", "mathematica"], [197, 0, 0, "-", "mathml"], [197, 0, 0, "-", "octave"], [197, 0, 0, "-", "precedence"], [197, 0, 0, "-", "pretty"], [197, 0, 0, "-", "preview"], [197, 0, 0, "-", "printer"], [197, 0, 0, "-", "pycode"], [197, 0, 0, "-", "python"], [197, 0, 0, "-", "rcode"], [197, 0, 0, "-", "repr"], [197, 0, 0, "-", "rust"], [197, 0, 0, "-", "str"], [197, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[197, 1, 1, "", "AesaraPrinter"], [197, 3, 1, "", "aesara_code"], [197, 3, 1, "", "aesara_function"], [197, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[197, 2, 1, "", "doprint"], [197, 5, 1, "", "printmethod"]], "sympy.printing.c": [[197, 1, 1, "", "C89CodePrinter"], [197, 1, 1, "", "C99CodePrinter"], [197, 3, 1, "", "ccode"], [197, 6, 1, "", "known_functions_C89"], [197, 6, 1, "", "known_functions_C99"], [197, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[197, 7, 1, "", "AssignmentError"], [197, 1, 1, "", "CodePrinter"], [197, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[197, 2, 1, "", "doprint"], [197, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[197, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[197, 1, 1, "", "CXX11CodePrinter"], [197, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[197, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[197, 1, 1, "", "FCodePrinter"], [197, 3, 1, "", "fcode"], [197, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[197, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[197, 1, 1, "", "JavascriptCodePrinter"], [197, 3, 1, "", "jscode"], [197, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[197, 1, 1, "", "JuliaCodePrinter"], [197, 3, 1, "", "julia_code"], [197, 6, 1, "", "known_fcns_src1"], [197, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[197, 1, 1, "", "LambdaPrinter"], [197, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[197, 1, 1, "", "LatexPrinter"], [197, 6, 1, "", "accepted_latex_functions"], [197, 3, 1, "", "latex"], [197, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[197, 2, 1, "", "parenthesize_super"], [197, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[197, 1, 1, "", "MapleCodePrinter"], [197, 3, 1, "", "maple_code"], [197, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[197, 1, 1, "", "MCodePrinter"], [197, 6, 1, "", "known_functions"], [197, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[197, 1, 1, "", "MathMLContentPrinter"], [197, 1, 1, "", "MathMLPresentationPrinter"], [197, 1, 1, "", "MathMLPrinterBase"], [197, 3, 1, "", "mathml"], [197, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[197, 2, 1, "", "mathml_tag"], [197, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[197, 2, 1, "", "mathml_tag"], [197, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[197, 2, 1, "", "doprint"]], "sympy.printing.octave": [[197, 1, 1, "", "OctaveCodePrinter"], [197, 6, 1, "", "known_fcns_src1"], [197, 6, 1, "", "known_fcns_src2"], [197, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[197, 6, 1, "", "PRECEDENCE"], [197, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [197, 6, 1, "", "PRECEDENCE_VALUES"], [197, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[197, 0, 0, "-", "pretty"], [197, 0, 0, "-", "pretty_symbology"], [197, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[197, 1, 1, "", "PrettyPrinter"], [197, 3, 1, "", "pretty"], [197, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[197, 3, 1, "", "G"], [197, 3, 1, "", "U"], [197, 3, 1, "", "VF"], [197, 3, 1, "", "annotated"], [197, 6, 1, "", "atoms_table"], [197, 6, 1, "", "digit_2txt"], [197, 6, 1, "", "frac"], [197, 3, 1, "", "g"], [197, 6, 1, "", "greek_letters"], [197, 3, 1, "", "hobj"], [197, 3, 1, "", "pretty_atom"], [197, 3, 1, "", "pretty_symbol"], [197, 3, 1, "", "pretty_try_use_unicode"], [197, 3, 1, "", "pretty_use_unicode"], [197, 6, 1, "", "root"], [197, 6, 1, "", "sub"], [197, 6, 1, "", "sup"], [197, 6, 1, "", "symb_2txt"], [197, 3, 1, "", "vobj"], [197, 3, 1, "", "xobj"], [197, 3, 1, "", "xstr"], [197, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[197, 1, 1, "", "prettyForm"], [197, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[197, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[197, 2, 1, "", "above"], [197, 2, 1, "", "below"], [197, 2, 1, "", "height"], [197, 2, 1, "", "left"], [197, 2, 1, "", "leftslash"], [197, 2, 1, "", "next"], [197, 2, 1, "", "parens"], [197, 2, 1, "", "render"], [197, 2, 1, "", "right"], [197, 2, 1, "", "root"], [197, 2, 1, "", "stack"], [197, 2, 1, "", "terminal_width"], [197, 2, 1, "", "width"]], "sympy.printing.preview": [[197, 3, 1, "", "preview"]], "sympy.printing.printer": [[197, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[197, 2, 1, "", "_print"], [197, 2, 1, "", "doprint"], [197, 5, 1, "", "printmethod"], [197, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[197, 1, 1, "", "MpmathPrinter"], [197, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[197, 1, 1, "", "RCodePrinter"], [197, 6, 1, "", "known_functions"], [197, 3, 1, "", "print_rcode"], [197, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[197, 1, 1, "", "ReprPrinter"], [197, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[197, 2, 1, "", "emptyPrinter"], [197, 5, 1, "", "printmethod"], [197, 2, 1, "", "reprify"]], "sympy.printing.rust": [[197, 1, 1, "", "RustCodePrinter"], [197, 6, 1, "", "known_functions"], [197, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.str": [[197, 1, 1, "", "StrPrinter"], [197, 3, 1, "", "sstr"], [197, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[197, 3, 1, "", "pprint_nodes"], [197, 3, 1, "", "print_node"], [197, 3, 1, "", "print_tree"], [197, 3, 1, "", "tree"]], "sympy.series.acceleration": [[204, 3, 1, "", "richardson"], [204, 3, 1, "", "shanks"]], "sympy.series.formal": [[199, 1, 1, "", "FiniteFormalPowerSeries"], [199, 1, 1, "", "FormalPowerSeries"], [199, 1, 1, "", "FormalPowerSeriesCompose"], [199, 1, 1, "", "FormalPowerSeriesInverse"], [199, 1, 1, "", "FormalPowerSeriesProduct"], [199, 3, 1, "", "compute_fps"], [199, 3, 1, "", "exp_re"], [199, 3, 1, "", "fps"], [199, 3, 1, "", "hyper_algorithm"], [199, 3, 1, "", "hyper_re"], [199, 3, 1, "", "rational_algorithm"], [199, 3, 1, "", "rational_independent"], [199, 3, 1, "", "rsolve_hypergeometric"], [199, 3, 1, "", "simpleDE"], [199, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[199, 2, 1, "", "coeff_bell"], [199, 2, 1, "", "compose"], [199, 4, 1, "", "infinite"], [199, 2, 1, "", "integrate"], [199, 2, 1, "", "inverse"], [199, 2, 1, "", "polynomial"], [199, 2, 1, "", "product"], [199, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[199, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[199, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[199, 4, 1, "", "function"]], "sympy.series.fourier": [[200, 1, 1, "", "FourierSeries"], [200, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[200, 2, 1, "", "scale"], [200, 2, 1, "", "scalex"], [200, 2, 1, "", "shift"], [200, 2, 1, "", "shiftx"], [200, 2, 1, "", "sigma_approximation"], [200, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[204, 1, 1, "", "SubsSet"], [204, 3, 1, "", "build_expression_tree"], [204, 3, 1, "", "calculate_series"], [204, 3, 1, "", "compare"], [204, 3, 1, "", "gruntz"], [204, 3, 1, "", "limitinf"], [204, 3, 1, "", "mrv"], [204, 3, 1, "", "mrv_leadterm"], [204, 3, 1, "", "mrv_max1"], [204, 3, 1, "", "mrv_max3"], [204, 3, 1, "", "rewrite"], [204, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[204, 2, 1, "", "copy"], [204, 2, 1, "", "do_subs"], [204, 2, 1, "", "meets"], [204, 2, 1, "", "union"]], "sympy.series.limits": [[204, 1, 1, "", "Limit"], [204, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[204, 2, 1, "", "doit"]], "sympy.series.limitseq": [[202, 3, 1, "", "difference_delta"], [202, 3, 1, "", "dominant"], [202, 3, 1, "", "limit_seq"]], "sympy.series.order": [[204, 1, 1, "", "Order"]], "sympy.series.order.Order": [[204, 2, 1, "", "contains"]], "sympy.series.residues": [[204, 3, 1, "", "residue"]], "sympy.series.sequences": [[203, 1, 1, "", "EmptySequence"], [203, 1, 1, "", "RecursiveSeq"], [203, 1, 1, "", "SeqAdd"], [203, 1, 1, "", "SeqBase"], [203, 1, 1, "", "SeqFormula"], [203, 1, 1, "", "SeqMul"], [203, 1, 1, "", "SeqPer"], [203, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[203, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[203, 4, 1, "", "initial"], [203, 4, 1, "", "interval"], [203, 4, 1, "", "n"], [203, 4, 1, "", "recurrence"], [203, 4, 1, "", "start"], [203, 4, 1, "", "stop"], [203, 4, 1, "", "y"], [203, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[203, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[203, 2, 1, "", "coeff"], [203, 2, 1, "", "coeff_mul"], [203, 2, 1, "", "find_linear_recurrence"], [203, 4, 1, "", "free_symbols"], [203, 4, 1, "", "gen"], [203, 4, 1, "", "interval"], [203, 4, 1, "", "length"], [203, 4, 1, "", "start"], [203, 4, 1, "", "stop"], [203, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[203, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[203, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[203, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[204, 3, 1, "", "series"]], "sympy.sets": [[205, 0, 0, "-", "conditionset"], [205, 0, 0, "-", "fancysets"], [205, 0, 0, "-", "powerset"], [205, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[205, 1, 1, "", "ConditionSet"], [205, 1, 1, "", "Contains"], [205, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[205, 1, 1, "", "CartesianComplexRegion"], [205, 1, 1, "", "ComplexRegion"], [205, 1, 1, "", "Complexes"], [205, 1, 1, "", "ImageSet"], [205, 1, 1, "", "Integers"], [205, 1, 1, "", "Naturals"], [205, 1, 1, "", "Naturals0"], [205, 1, 1, "", "PolarComplexRegion"], [205, 1, 1, "", "Range"], [205, 1, 1, "", "Rationals"], [205, 1, 1, "", "Reals"], [205, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[205, 4, 1, "", "a_interval"], [205, 4, 1, "", "b_interval"], [205, 2, 1, "", "from_real"], [205, 4, 1, "", "psets"], [205, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[205, 2, 1, "", "as_relational"], [205, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[205, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[205, 1, 1, "", "Complement"], [205, 1, 1, "", "DisjointUnion"], [205, 1, 1, "", "EmptySet"], [205, 1, 1, "", "FiniteSet"], [205, 1, 1, "", "Intersection"], [205, 1, 1, "", "Interval"], [205, 1, 1, "", "ProductSet"], [205, 1, 1, "", "Set"], [205, 1, 1, "", "SymmetricDifference"], [205, 1, 1, "", "Union"], [205, 1, 1, "", "UniversalSet"], [205, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[205, 2, 1, "", "as_relational"], [205, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[205, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[205, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[205, 2, 1, "", "Lopen"], [205, 2, 1, "", "Ropen"], [205, 2, 1, "", "as_relational"], [205, 4, 1, "", "end"], [205, 4, 1, "", "is_left_unbounded"], [205, 4, 1, "", "is_right_unbounded"], [205, 4, 1, "", "left_open"], [205, 2, 1, "", "open"], [205, 4, 1, "", "right_open"], [205, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[205, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[205, 4, 1, "", "boundary"], [205, 4, 1, "", "closure"], [205, 2, 1, "", "complement"], [205, 2, 1, "", "contains"], [205, 4, 1, "", "inf"], [205, 4, 1, "", "interior"], [205, 2, 1, "", "intersect"], [205, 2, 1, "", "intersection"], [205, 4, 1, "", "is_closed"], [205, 2, 1, "", "is_disjoint"], [205, 4, 1, "", "is_open"], [205, 2, 1, "", "is_proper_subset"], [205, 2, 1, "", "is_proper_superset"], [205, 2, 1, "", "is_subset"], [205, 2, 1, "", "is_superset"], [205, 2, 1, "", "isdisjoint"], [205, 2, 1, "", "issubset"], [205, 2, 1, "", "issuperset"], [205, 4, 1, "", "kind"], [205, 4, 1, "", "measure"], [205, 2, 1, "", "powerset"], [205, 4, 1, "", "sup"], [205, 2, 1, "", "symmetric_difference"], [205, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[205, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[205, 2, 1, "", "as_relational"]], "sympy.simplify": [[209, 0, 0, "-", "combsimp"], [209, 0, 0, "-", "cse_main"], [209, 0, 0, "-", "epathtools"], [209, 0, 0, "-", "hyperexpand"], [207, 0, 0, "-", "hyperexpand_doc"], [209, 0, 0, "-", "powsimp"], [209, 0, 0, "-", "radsimp"], [209, 0, 0, "-", "ratsimp"], [2, 0, 0, "-", "simplify"], [209, 0, 0, "-", "sqrtdenest"], [209, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[209, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[209, 3, 1, "", "cse"], [209, 3, 1, "", "opt_cse"], [209, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[209, 1, 1, "", "EPath"], [209, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[209, 2, 1, "", "apply"], [209, 2, 1, "", "select"]], "sympy.simplify.fu": [[206, 3, 1, "", "TR0"], [206, 3, 1, "", "TR1"], [206, 3, 1, "", "TR10"], [206, 3, 1, "", "TR10i"], [206, 3, 1, "", "TR11"], [206, 3, 1, "", "TR111"], [206, 3, 1, "", "TR12"], [206, 3, 1, "", "TR12i"], [206, 3, 1, "", "TR13"], [206, 3, 1, "", "TR14"], [206, 3, 1, "", "TR15"], [206, 3, 1, "", "TR16"], [206, 3, 1, "", "TR2"], [206, 3, 1, "", "TR22"], [206, 3, 1, "", "TR2i"], [206, 3, 1, "", "TR3"], [206, 3, 1, "", "TR4"], [206, 3, 1, "", "TR5"], [206, 3, 1, "", "TR6"], [206, 3, 1, "", "TR7"], [206, 3, 1, "", "TR8"], [206, 3, 1, "", "TR9"], [206, 3, 1, "", "TRmorrie"], [206, 3, 1, "", "TRpower"], [206, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[209, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[209, 3, 1, "", "powdenest"], [209, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[209, 3, 1, "", "collect"], [209, 3, 1, "", "collect_const"], [209, 3, 1, "", "collect_sqrt"], [209, 3, 1, "", "fraction"], [209, 3, 1, "", "rad_rationalize"], [209, 3, 1, "", "radsimp"], [209, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[209, 3, 1, "", "ratsimp"], [209, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[209, 3, 1, "", "besselsimp"], [209, 3, 1, "", "hypersimilar"], [209, 3, 1, "", "hypersimp"], [209, 3, 1, "", "kroneckersimp"], [209, 3, 1, "", "logcombine"], [209, 3, 1, "", "nsimplify"], [209, 3, 1, "", "nthroot"], [209, 3, 1, "", "posify"], [209, 3, 1, "", "separatevars"], [209, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[209, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[209, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[215, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[210, 1, 1, "", "BinaryQuadratic"], [210, 1, 1, "", "CubicThue"], [210, 1, 1, "", "DiophantineEquationType"], [210, 1, 1, "", "DiophantineSolutionSet"], [210, 1, 1, "", "GeneralPythagorean"], [210, 1, 1, "", "GeneralSumOfEvenPowers"], [210, 1, 1, "", "GeneralSumOfSquares"], [210, 1, 1, "", "HomogeneousGeneralQuadratic"], [210, 1, 1, "", "HomogeneousTernaryQuadratic"], [210, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [210, 1, 1, "", "InhomogeneousGeneralQuadratic"], [210, 1, 1, "", "InhomogeneousTernaryQuadratic"], [210, 1, 1, "", "Linear"], [210, 3, 1, "", "PQa"], [210, 1, 1, "", "Univariate"], [210, 3, 1, "", "base_solution_linear"], [210, 3, 1, "", "classify_diop"], [210, 3, 1, "", "cornacchia"], [210, 3, 1, "", "descent"], [210, 3, 1, "", "diop_DN"], [210, 3, 1, "", "diop_bf_DN"], [210, 3, 1, "", "diop_general_pythagorean"], [210, 3, 1, "", "diop_general_sum_of_even_powers"], [210, 3, 1, "", "diop_general_sum_of_squares"], [210, 3, 1, "", "diop_linear"], [210, 3, 1, "", "diop_quadratic"], [210, 3, 1, "", "diop_solve"], [210, 3, 1, "", "diop_ternary_quadratic"], [210, 3, 1, "", "diop_ternary_quadratic_normal"], [210, 3, 1, "", "diophantine"], [210, 3, 1, "", "divisible"], [210, 3, 1, "", "equivalent"], [210, 3, 1, "", "find_DN"], [210, 3, 1, "", "gaussian_reduce"], [210, 3, 1, "", "holzer"], [210, 3, 1, "", "ldescent"], [210, 3, 1, "", "merge_solution"], [210, 3, 1, "", "parametrize_ternary_quadratic"], [210, 3, 1, "", "partition"], [210, 3, 1, "", "power_representation"], [210, 3, 1, "", "prime_as_sum_of_two_squares"], [210, 3, 1, "", "reconstruct"], [210, 3, 1, "", "sqf_normal"], [210, 3, 1, "", "square_factor"], [210, 3, 1, "", "sum_of_four_squares"], [210, 3, 1, "", "sum_of_powers"], [210, 3, 1, "", "sum_of_squares"], [210, 3, 1, "", "sum_of_three_squares"], [210, 3, 1, "", "transformation_to_DN"], [210, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[210, 2, 1, "", "matches"]], "sympy.solvers": [[212, 0, 0, "-", "inequalities"], [213, 0, 0, "-", "ode"], [214, 0, 0, "-", "pde"], [215, 0, 0, "-", "recurr"], [216, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[212, 3, 1, "", "reduce_abs_inequalities"], [212, 3, 1, "", "reduce_abs_inequality"], [212, 3, 1, "", "reduce_inequalities"], [212, 3, 1, "", "reduce_rational_inequalities"], [212, 3, 1, "", "solve_poly_inequalities"], [212, 3, 1, "", "solve_poly_inequality"], [212, 3, 1, "", "solve_rational_inequalities"], [212, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[213, 6, 1, "", "allhints"], [213, 3, 1, "", "checkinfsol"], [213, 3, 1, "", "checkodesol"], [213, 3, 1, "", "classify_ode"], [213, 3, 1, "", "constantsimp"], [213, 3, 1, "", "dsolve"], [213, 3, 1, "", "homogeneous_order"], [213, 3, 1, "", "infinitesimals"], [213, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[213, 3, 1, "", "lie_heuristic_abaco1_product"], [213, 3, 1, "", "lie_heuristic_abaco1_simple"], [213, 3, 1, "", "lie_heuristic_abaco2_similar"], [213, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [213, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [213, 3, 1, "", "lie_heuristic_bivariate"], [213, 3, 1, "", "lie_heuristic_chi"], [213, 3, 1, "", "lie_heuristic_function_sum"], [213, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[213, 3, 1, "", "_handle_Integral"], [213, 3, 1, "", "_linear_2eq_order1_type6"], [213, 3, 1, "", "_linear_2eq_order1_type7"], [213, 3, 1, "", "_nonlinear_2eq_order1_type1"], [213, 3, 1, "", "_nonlinear_2eq_order1_type2"], [213, 3, 1, "", "_nonlinear_2eq_order1_type3"], [213, 3, 1, "", "_nonlinear_2eq_order1_type4"], [213, 3, 1, "", "_nonlinear_2eq_order1_type5"], [213, 3, 1, "", "_nonlinear_3eq_order1_type1"], [213, 3, 1, "", "_nonlinear_3eq_order1_type2"], [213, 3, 1, "", "_nonlinear_3eq_order1_type3"], [213, 3, 1, "", "_nonlinear_3eq_order1_type4"], [213, 3, 1, "", "_nonlinear_3eq_order1_type5"], [213, 3, 1, "", "constant_renumber"], [213, 3, 1, "", "ode_1st_power_series"], [213, 3, 1, "", "ode_2nd_power_series_ordinary"], [213, 3, 1, "", "ode_2nd_power_series_regular"], [213, 3, 1, "", "ode_sol_simplicity"], [213, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[213, 3, 1, "", "compute_m_ybar"], [213, 3, 1, "", "construct_c"], [213, 3, 1, "", "construct_d"], [213, 3, 1, "", "get_gen_sol_from_part_sol"], [213, 3, 1, "", "rational_laurent_series"], [213, 3, 1, "", "remove_redundant_sols"], [213, 3, 1, "", "riccati_inverse_normal"], [213, 3, 1, "", "riccati_normal"], [213, 3, 1, "", "riccati_reduced"], [213, 3, 1, "", "solve_aux_eq"], [213, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[213, 1, 1, "", "AlmostLinear"], [213, 1, 1, "", "Bernoulli"], [213, 1, 1, "", "Factorable"], [213, 1, 1, "", "FirstExact"], [213, 1, 1, "", "FirstLinear"], [213, 1, 1, "", "HomogeneousCoeffBest"], [213, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [213, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [213, 1, 1, "", "LieGroup"], [213, 1, 1, "", "LinearCoefficients"], [213, 1, 1, "", "Liouville"], [213, 1, 1, "", "NthAlgebraic"], [213, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [213, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [213, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [213, 1, 1, "", "NthLinearEulerEqHomogeneous"], [213, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [213, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [213, 1, 1, "", "NthOrderReducible"], [213, 1, 1, "", "RationalRiccati"], [213, 1, 1, "", "RiccatiSpecial"], [213, 1, 1, "", "SecondHypergeometric"], [213, 1, 1, "", "SecondLinearAiry"], [213, 1, 1, "", "SecondLinearBessel"], [213, 1, 1, "", "Separable"], [213, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[213, 3, 1, "", "canonical_odes"], [213, 3, 1, "", "dsolve_system"], [213, 3, 1, "", "linear_ode_to_matrix"], [213, 3, 1, "", "linodesolve"], [213, 3, 1, "", "linodesolve_type"], [213, 3, 1, "", "matrix_exp"], [213, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[214, 3, 1, "", "checkpdesol"], [214, 3, 1, "", "classify_pde"], [214, 3, 1, "", "pde_1st_linear_constant_coeff"], [214, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [214, 3, 1, "", "pde_1st_linear_variable_coeff"], [214, 3, 1, "", "pde_separate"], [214, 3, 1, "", "pde_separate_add"], [214, 3, 1, "", "pde_separate_mul"], [214, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[215, 3, 1, "", "solve_poly_system"], [215, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[215, 3, 1, "", "rsolve"], [215, 3, 1, "", "rsolve_hyper"], [215, 3, 1, "", "rsolve_poly"], [215, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[215, 3, 1, "", "checksol"], [215, 3, 1, "", "nsolve"], [215, 3, 1, "", "solve"], [215, 3, 1, "", "solve_linear"], [215, 3, 1, "", "solve_linear_system"], [215, 3, 1, "", "solve_linear_system_LU"], [215, 3, 1, "", "solve_undetermined_coeffs"], [215, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[216, 3, 1, "", "_is_exponential"], [216, 3, 1, "", "_is_logarithmic"], [216, 3, 1, "", "_solve_exponential"], [216, 3, 1, "", "_solve_logarithm"], [216, 3, 1, "", "_transolve"], [216, 3, 1, "", "domain_check"], [216, 3, 1, "", "invert_complex"], [216, 3, 1, "", "invert_real"], [216, 3, 1, "", "linear_eq_to_matrix"], [216, 3, 1, "", "linsolve"], [216, 3, 1, "", "nonlinsolve"], [216, 3, 1, "", "solveset"], [216, 3, 1, "", "solveset_complex"], [216, 3, 1, "", "solveset_real"], [216, 3, 1, "", "solvify"]], "sympy.stats": [[217, 3, 1, "", "Arcsin"], [217, 3, 1, "", "Benini"], [217, 3, 1, "", "Bernoulli"], [217, 1, 1, "", "BernoulliProcess"], [217, 3, 1, "", "Beta"], [217, 3, 1, "", "BetaBinomial"], [217, 3, 1, "", "BetaNoncentral"], [217, 3, 1, "", "BetaPrime"], [217, 3, 1, "", "Binomial"], [217, 3, 1, "", "BoundedPareto"], [217, 3, 1, "", "Cauchy"], [217, 1, 1, "", "CentralMoment"], [217, 3, 1, "", "Chi"], [217, 3, 1, "", "ChiNoncentral"], [217, 3, 1, "", "ChiSquared"], [217, 3, 1, "", "Coin"], [217, 1, 1, "", "ContinuousMarkovChain"], [217, 3, 1, "", "ContinuousRV"], [217, 1, 1, "", "Covariance"], [217, 1, 1, "", "CrossCovarianceMatrix"], [217, 3, 1, "", "Dagum"], [217, 3, 1, "", "Die"], [217, 1, 1, "", "DiscreteMarkovChain"], [217, 3, 1, "", "DiscreteUniform"], [217, 3, 1, "", "E"], [217, 3, 1, "", "Erlang"], [217, 3, 1, "", "ExGaussian"], [217, 1, 1, "", "Expectation"], [217, 1, 1, "", "ExpectationMatrix"], [217, 3, 1, "", "Exponential"], [217, 3, 1, "", "FDistribution"], [217, 3, 1, "", "FiniteRV"], [217, 3, 1, "", "FisherZ"], [217, 3, 1, "", "Frechet"], [217, 3, 1, "", "Gamma"], [217, 3, 1, "", "GammaInverse"], [217, 1, 1, "", "GammaProcess"], [217, 3, 1, "", "GeneralizedMultivariateLogGamma"], [217, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [217, 3, 1, "", "Geometric"], [217, 3, 1, "", "Gompertz"], [217, 3, 1, "", "Gumbel"], [217, 3, 1, "", "Hermite"], [217, 3, 1, "", "Hypergeometric"], [217, 3, 1, "", "JointRV"], [217, 3, 1, "", "Kumaraswamy"], [217, 3, 1, "", "Laplace"], [217, 3, 1, "", "Levy"], [217, 3, 1, "", "LogLogistic"], [217, 3, 1, "", "LogNormal"], [217, 3, 1, "", "Logarithmic"], [217, 3, 1, "", "Logistic"], [217, 3, 1, "", "Lomax"], [217, 3, 1, "", "MatrixGamma"], [217, 3, 1, "", "MatrixNormal"], [217, 3, 1, "", "Maxwell"], [217, 1, 1, "", "Moment"], [217, 3, 1, "", "Moyal"], [217, 3, 1, "", "Multinomial"], [217, 3, 1, "", "MultivariateBeta"], [217, 3, 1, "", "MultivariateEwens"], [217, 3, 1, "", "MultivariateLaplace"], [217, 3, 1, "", "MultivariateNormal"], [217, 3, 1, "", "MultivariateT"], [217, 3, 1, "", "Nakagami"], [217, 3, 1, "", "NegativeBinomial"], [217, 3, 1, "", "NegativeMultinomial"], [217, 3, 1, "", "Normal"], [217, 3, 1, "", "NormalGamma"], [217, 3, 1, "", "P"], [217, 3, 1, "", "Pareto"], [217, 3, 1, "", "Poisson"], [217, 1, 1, "", "PoissonProcess"], [217, 3, 1, "", "PowerFunction"], [217, 1, 1, "", "Probability"], [217, 3, 1, "", "QuadraticU"], [217, 3, 1, "", "Rademacher"], [217, 3, 1, "", "RaisedCosine"], [217, 3, 1, "", "Rayleigh"], [217, 3, 1, "", "Reciprocal"], [217, 3, 1, "", "ShiftedGompertz"], [217, 3, 1, "", "Skellam"], [217, 3, 1, "", "StudentT"], [217, 3, 1, "", "Trapezoidal"], [217, 3, 1, "", "Triangular"], [217, 3, 1, "", "Uniform"], [217, 3, 1, "", "UniformSum"], [217, 1, 1, "", "Variance"], [217, 1, 1, "", "VarianceMatrix"], [217, 3, 1, "", "VonMises"], [217, 3, 1, "", "Wald"], [217, 3, 1, "", "Weibull"], [217, 1, 1, "", "WienerProcess"], [217, 3, 1, "", "WignerSemicircle"], [217, 3, 1, "", "Wishart"], [217, 3, 1, "", "YuleSimon"], [217, 3, 1, "", "Zeta"], [217, 3, 1, "", "cmoment"], [217, 3, 1, "", "correlation"], [217, 3, 1, "", "coskewness"], [217, 3, 1, "", "covariance"], [217, 0, 0, "-", "crv"], [217, 0, 0, "-", "crv_types"], [217, 3, 1, "", "density"], [217, 3, 1, "", "entropy"], [217, 3, 1, "", "factorial_moment"], [217, 0, 0, "-", "frv"], [217, 0, 0, "-", "frv_types"], [217, 3, 1, "", "given"], [217, 3, 1, "", "kurtosis"], [217, 3, 1, "", "marginal_distribution"], [217, 3, 1, "", "median"], [217, 3, 1, "", "moment"], [217, 3, 1, "", "quantile"], [217, 0, 0, "-", "rv"], [217, 3, 1, "", "sample"], [217, 3, 1, "", "sample_iter"], [217, 3, 1, "", "skewness"], [217, 3, 1, "", "std"], [217, 3, 1, "", "variance"], [217, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[217, 2, 1, "", "expectation"], [217, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[217, 2, 1, "", "absorbing_probabilities"], [217, 2, 1, "", "canonical_form"], [217, 2, 1, "", "communication_classes"], [217, 2, 1, "", "decompose"], [217, 2, 1, "", "fixed_row_vector"], [217, 2, 1, "", "fundamental_matrix"], [217, 4, 1, "", "limiting_distribution"], [217, 2, 1, "", "sample"], [217, 2, 1, "", "stationary_distribution"], [217, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[217, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[217, 1, 1, "", "ContinuousDomain"], [217, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[217, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[217, 3, 1, "", "Die"], [217, 3, 1, "", "Normal"]], "sympy.stats.frv": [[217, 1, 1, "", "FiniteDomain"], [217, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[217, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[217, 1, 1, "", "ConditionalDomain"], [217, 1, 1, "", "PSpace"], [217, 1, 1, "", "ProductDomain"], [217, 1, 1, "", "ProductPSpace"], [217, 1, 1, "", "RandomDomain"], [217, 1, 1, "", "RandomSymbol"], [217, 1, 1, "", "SingleDomain"], [217, 1, 1, "", "SinglePSpace"], [217, 3, 1, "", "pspace"], [217, 3, 1, "", "random_symbols"], [217, 3, 1, "", "rs_swap"], [217, 3, 1, "", "sampling_E"], [217, 3, 1, "", "sampling_P"], [217, 3, 1, "", "sampling_density"]], "sympy.tensor": [[218, 0, 0, "-", "array"], [221, 0, 0, "-", "index_methods"], [222, 0, 0, "-", "indexed"], [223, 0, 0, "-", "tensor"], [224, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[218, 1, 1, "", "ImmutableDenseNDimArray"], [218, 1, 1, "", "ImmutableSparseNDimArray"], [218, 1, 1, "", "MutableDenseNDimArray"], [218, 1, 1, "", "MutableSparseNDimArray"], [218, 3, 1, "", "derive_by_array"], [219, 0, 0, "-", "expressions"], [218, 3, 1, "", "permutedims"], [218, 3, 1, "", "tensorcontraction"], [218, 3, 1, "", "tensordiagonal"], [218, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[221, 3, 1, "", "get_contraction_structure"], [221, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[222, 1, 1, "", "Idx"], [222, 1, 1, "", "Indexed"], [222, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[222, 4, 1, "", "label"], [222, 4, 1, "", "lower"], [222, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[222, 4, 1, "", "base"], [222, 4, 1, "", "indices"], [222, 4, 1, "", "ranges"], [222, 4, 1, "", "rank"], [222, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[222, 4, 1, "", "label"], [222, 4, 1, "", "offset"], [222, 4, 1, "", "shape"], [222, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[223, 1, 1, "", "TensAdd"], [223, 1, 1, "", "TensExpr"], [223, 1, 1, "", "TensMul"], [223, 1, 1, "", "TensorHead"], [223, 1, 1, "", "TensorIndex"], [223, 1, 1, "", "TensorIndexType"], [223, 1, 1, "", "TensorSymmetry"], [223, 1, 1, "", "TensorType"], [223, 1, 1, "", "_TensorManager"], [223, 3, 1, "", "canon_bp"], [223, 3, 1, "", "riemann_cyclic"], [223, 3, 1, "", "riemann_cyclic_replace"], [223, 3, 1, "", "tensor_heads"], [223, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[223, 2, 1, "", "canon_bp"], [223, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[223, 2, 1, "", "get_matrix"], [223, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[223, 2, 1, "", "canon_bp"], [223, 2, 1, "", "contract_metric"], [223, 2, 1, "", "get_free_indices"], [223, 2, 1, "", "get_indices"], [223, 2, 1, "", "perm2tensor"], [223, 2, 1, "", "sorted_components"], [223, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[223, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[223, 2, 1, "", "direct_product"], [223, 2, 1, "", "fully_symmetric"], [223, 2, 1, "", "no_symmetry"], [223, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[223, 2, 1, "", "clear"], [223, 2, 1, "", "comm_i2symbol"], [223, 2, 1, "", "comm_symbols2i"], [223, 2, 1, "", "get_comm"], [223, 2, 1, "", "set_comm"], [223, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[224, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[226, 0, 0, "-", "pytest"], [227, 0, 0, "-", "randtest"], [228, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[226, 3, 1, "", "SKIP"], [226, 3, 1, "", "nocache_fail"], [226, 3, 1, "", "raises"], [226, 3, 1, "", "warns"], [226, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[228, 1, 1, "", "PyTestReporter"], [228, 1, 1, "", "Reporter"], [228, 1, 1, "", "SymPyDocTestFinder"], [228, 1, 1, "", "SymPyDocTestRunner"], [228, 1, 1, "", "SymPyOutputChecker"], [228, 1, 1, "", "SymPyTestResults"], [228, 3, 1, "", "convert_to_native_paths"], [228, 3, 1, "", "doctest"], [228, 3, 1, "", "get_sympy_dir"], [228, 3, 1, "", "raise_on_deprecated"], [228, 3, 1, "", "run_all_tests"], [228, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [228, 3, 1, "", "split_list"], [228, 3, 1, "", "sympytestfile"], [228, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[228, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[228, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[228, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[228, 5, 1, "", "attempted"], [228, 5, 1, "", "failed"]], "sympy.utilities": [[229, 0, 0, "-", "autowrap"], [230, 0, 0, "-", "codegen"], [231, 0, 0, "-", "decorator"], [232, 0, 0, "-", "enumerative"], [233, 0, 0, "-", "exceptions"], [235, 0, 0, "-", "iterables"], [236, 0, 0, "-", "lambdify"], [237, 0, 0, "-", "memoization"], [238, 0, 0, "-", "misc"], [239, 0, 0, "-", "pkgdata"], [240, 0, 0, "-", "source"], [241, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[229, 1, 1, "", "CodeWrapper"], [229, 1, 1, "", "CythonCodeWrapper"], [229, 1, 1, "", "DummyWrapper"], [229, 1, 1, "", "F2PyCodeWrapper"], [229, 1, 1, "", "UfuncifyCodeWrapper"], [229, 3, 1, "", "autowrap"], [229, 3, 1, "", "binary_function"], [229, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[229, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[229, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[230, 1, 1, "", "Argument"], [230, 1, 1, "", "CCodeGen"], [230, 1, 1, "", "CodeGen"], [230, 1, 1, "", "DataType"], [230, 1, 1, "", "FCodeGen"], [230, 1, 1, "", "JuliaCodeGen"], [230, 1, 1, "", "OctaveCodeGen"], [230, 1, 1, "", "OutputArgument"], [230, 1, 1, "", "Result"], [230, 1, 1, "", "Routine"], [230, 1, 1, "", "RustCodeGen"], [230, 3, 1, "", "codegen"], [230, 3, 1, "", "get_default_datatype"], [230, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[230, 2, 1, "", "dump_c"], [230, 2, 1, "", "dump_h"], [230, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[230, 2, 1, "", "dump_code"], [230, 2, 1, "", "routine"], [230, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[230, 2, 1, "", "dump_f95"], [230, 2, 1, "", "dump_h"], [230, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[230, 2, 1, "", "dump_jl"], [230, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[230, 2, 1, "", "dump_m"], [230, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[230, 4, 1, "", "result_variables"], [230, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[230, 2, 1, "", "dump_rs"], [230, 2, 1, "", "get_prototype"], [230, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[231, 3, 1, "", "conserve_mpmath_dps"], [231, 3, 1, "", "deprecated"], [231, 3, 1, "", "doctest_depends_on"], [231, 3, 1, "", "memoize_property"], [231, 1, 1, "", "no_attrs_in_subclass"], [231, 3, 1, "", "public"], [231, 3, 1, "", "threaded"], [231, 3, 1, "", "threaded_factory"], [231, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[232, 1, 1, "", "MultisetPartitionTraverser"], [232, 3, 1, "", "factoring_visitor"], [232, 3, 1, "", "list_visitor"], [232, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[232, 2, 1, "", "count_partitions"], [232, 2, 1, "", "enum_all"], [232, 2, 1, "", "enum_large"], [232, 2, 1, "", "enum_range"], [232, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[233, 7, 1, "", "SymPyDeprecationWarning"], [233, 3, 1, "", "ignore_warnings"], [233, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[235, 1, 1, "", "NotIterable"], [235, 3, 1, "", "binary_partitions"], [235, 3, 1, "", "bracelets"], [235, 3, 1, "", "capture"], [235, 3, 1, "", "common_prefix"], [235, 3, 1, "", "common_suffix"], [235, 3, 1, "", "connected_components"], [235, 3, 1, "", "dict_merge"], [235, 3, 1, "", "filter_symbols"], [235, 3, 1, "", "flatten"], [235, 3, 1, "", "generate_bell"], [235, 3, 1, "", "generate_derangements"], [235, 3, 1, "", "generate_involutions"], [235, 3, 1, "", "generate_oriented_forest"], [235, 3, 1, "", "group"], [235, 3, 1, "", "has_dups"], [235, 3, 1, "", "has_variety"], [235, 3, 1, "", "ibin"], [235, 3, 1, "", "iproduct"], [235, 3, 1, "", "is_palindromic"], [235, 3, 1, "", "is_sequence"], [235, 3, 1, "", "iterable"], [235, 3, 1, "", "kbins"], [235, 3, 1, "", "least_rotation"], [235, 3, 1, "", "minlex"], [235, 3, 1, "", "multiset"], [235, 3, 1, "", "multiset_combinations"], [235, 3, 1, "", "multiset_derangements"], [235, 3, 1, "", "multiset_partitions"], [235, 3, 1, "", "multiset_permutations"], [235, 3, 1, "", "necklaces"], [235, 3, 1, "", "numbered_symbols"], [235, 3, 1, "", "ordered_partitions"], [235, 3, 1, "", "partitions"], [235, 3, 1, "", "permute_signs"], [235, 3, 1, "", "postfixes"], [235, 3, 1, "", "prefixes"], [235, 3, 1, "", "random_derangement"], [235, 3, 1, "", "reshape"], [235, 3, 1, "", "rotate_left"], [235, 3, 1, "", "rotate_right"], [235, 3, 1, "", "rotations"], [235, 3, 1, "", "roundrobin"], [235, 3, 1, "", "runs"], [235, 3, 1, "", "sift"], [235, 3, 1, "", "signed_permutations"], [235, 3, 1, "", "strongly_connected_components"], [235, 3, 1, "", "subsets"], [235, 3, 1, "", "take"], [235, 3, 1, "", "topological_sort"], [235, 3, 1, "", "unflatten"], [235, 3, 1, "", "uniq"], [235, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[236, 3, 1, "", "implemented_function"], [236, 3, 1, "", "lambdastr"], [236, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[237, 3, 1, "", "assoc_recurrence_memo"], [237, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[238, 3, 1, "", "as_int"], [238, 3, 1, "", "debug"], [238, 3, 1, "", "debug_decorator"], [238, 3, 1, "", "filldedent"], [238, 3, 1, "", "find_executable"], [238, 3, 1, "", "func_name"], [238, 3, 1, "", "ordinal"], [238, 3, 1, "", "rawlines"], [238, 3, 1, "", "replace"], [238, 3, 1, "", "strlines"], [238, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[239, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[240, 3, 1, "", "get_class"], [240, 3, 1, "", "get_mod_func"], [240, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[241, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[242, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[242, 2, 1, "", "__init__"], [242, 2, 1, "", "create_new"], [242, 2, 1, "", "locate_new"], [242, 2, 1, "", "orient_new"], [242, 2, 1, "", "orient_new_axis"], [242, 2, 1, "", "orient_new_body"], [242, 2, 1, "", "orient_new_quaternion"], [242, 2, 1, "", "orient_new_space"], [242, 2, 1, "", "position_wrt"], [242, 2, 1, "", "rotation_matrix"], [242, 2, 1, "", "scalar_map"]], "sympy.vector": [[244, 3, 1, "", "curl"], [244, 3, 1, "", "divergence"], [244, 3, 1, "", "express"], [244, 3, 1, "", "gradient"], [244, 3, 1, "", "is_conservative"], [244, 3, 1, "", "is_solenoidal"], [244, 3, 1, "", "matrix_to_vector"], [244, 3, 1, "", "scalar_potential"], [244, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[242, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[242, 2, 1, "", "cross"], [242, 2, 1, "", "dot"], [242, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[242, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[242, 4, 1, "", "components"], [242, 2, 1, "", "cross"], [242, 2, 1, "", "dot"], [242, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[242, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[242, 2, 1, "", "multiplicity"], [242, 2, 1, "", "rational_parametrization"], [242, 2, 1, "", "regular_point"], [242, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[242, 1, 1, "", "ParametricIntegral"], [244, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[243, 1, 1, "", "AxisOrienter"], [243, 1, 1, "", "BodyOrienter"], [243, 1, 1, "", "Orienter"], [243, 1, 1, "", "QuaternionOrienter"], [243, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[243, 2, 1, "", "__init__"], [243, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[243, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[243, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[243, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[243, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[242, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[242, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[242, 4, 1, "", "components"], [242, 2, 1, "", "cross"], [242, 2, 1, "", "dot"], [242, 2, 1, "", "magnitude"], [242, 2, 1, "", "normalize"], [242, 2, 1, "", "outer"], [242, 2, 1, "", "projection"], [242, 2, 1, "", "separate"], [242, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 2, 4, 5, 6, 9, 13, 14, 16, 20, 23, 33, 57, 74, 93, 130, 178, 187, 242, 244, 245, 248, 261, 263, 266], "list": [1, 2], "activ": 1, "deprec": [1, 12], "silenc": 1, "warn": [1, 233], "version": 1, "1": [1, 14, 76, 95, 114, 127, 139, 213], "11": [1, 95], "new": [1, 246], "mathematica": [1, 197], "code": [1, 11, 12, 13, 15, 33, 35, 105, 181, 197, 240, 252, 254], "parser": [1, 114], "redund": 1, "static": 1, "method": [1, 5, 18, 20, 109, 118, 121, 122, 123, 125, 126, 127, 197, 214, 216, 221, 246, 268], "carmichael": 1, "The": [1, 7, 12, 18, 34, 41, 76, 127, 168, 179, 192, 204, 207, 247, 248, 266], "check": [1, 174], "argument": [1, 2, 216], "hadamardproduct": 1, "matadd": 1, "matmul": 1, "10": [1, 9, 95], "some": [1, 130, 216], "travers": [1, 51], "function": [1, 2, 14, 18, 33, 41, 50, 51, 57, 58, 59, 69, 70, 73, 74, 76, 81, 87, 91, 93, 95, 105, 128, 150, 153, 174, 175, 178, 183, 185, 187, 188, 193, 196, 197, 207, 209, 210, 213, 214, 218, 244, 248, 271, 272], "have": [1, 196], "been": 1, "move": [1, 207], "core": [1, 51, 84], "trace": 1, "compat": [1, 219], "submodul": [1, 63], "9": [1, 95], "expr_free_symbol": 1, "stat": [1, 217], "sampl": [1, 14], "numsampl": 1, "n": [1, 51, 213, 218, 219], "poli": [1, 186, 187, 188, 195], "solver": [1, 195, 211, 212, 213, 215, 216, 273], "rawmatrix": 1, "non": 1, "expr": [1, 51], "object": [1, 4, 222], "matrix": [1, 29, 83, 84, 87, 88, 127, 213, 217, 268], "get_seg": 1, "attribut": [1, 34, 41], "plot": [1, 11, 99, 143, 183], "mdft": 1, "physic": [1, 102, 105, 115, 125, 126, 127, 128, 129, 130, 131, 170, 172, 178, 179, 180, 181, 252, 258], "matric": [1, 5, 82, 83, 84, 85, 86, 87, 89, 102, 104, 219, 252, 256, 268], "privat": 1, "sparsematrix": [1, 89], "_smat": 1, "densematrix": 1, "_mat": 1, "laplace_transform": 1, "nocond": 1, "fals": 1, "8": [1, 95], "print": [1, 11, 18, 33, 79, 105, 112, 172, 177, 197, 271], "theanocod": 1, "assumpt": [1, 4, 7, 18, 28, 51], "handler": [1, 7], "askhandl": 1, "relat": [1, 2, 7, 51, 59, 81, 178, 181, 205, 248], "7": [1, 95, 213], "call": 1, "stochasticprocess": 1, "distribut": [1, 190, 217], "randomindexedsymbol": 1, "discretemarkovchain": 1, "absorbing_probabilit": 1, "util": [1, 33, 48, 49, 68, 87, 136, 192, 215, 234, 241, 252, 260], "misc": [1, 28], "find_execut": 1, "mutabl": 1, "diffgeom": 1, "unicod": [1, 271], "pretti": [1, 197, 271], "stringpict": 1, "prettyform": 1, "pretty_symbolog": 1, "xstr": 1, "pass": 1, "lambdifi": [1, 11, 92, 236, 261], "set": [1, 4, 29, 63, 181, 205, 216, 271], "oper": [1, 2, 73, 87, 141, 150, 152, 153, 174, 178, 181, 207, 218, 224, 245, 247, 248, 261, 268], "longer": 1, "accept": 1, "arg": [1, 57, 267], "6": [1, 14, 95, 213], "variou": [1, 196], "test": [1, 11, 13, 48, 81, 196, 225, 227, 228, 268], "randtest": 1, "mix": 1, "polynomi": [1, 59, 73, 185, 187, 188, 189, 190, 192, 193, 194, 196, 215, 272], "express": [1, 2, 33, 63, 70, 73, 81, 84, 93, 107, 175, 187, 196, 219, 244, 246, 261, 267], "binari": 1, "print_cycl": 1, "flag": 1, "combinator": [1, 38], "permut": [1, 42, 43], "us": [1, 5, 11, 15, 33, 51, 54, 75, 76, 92, 95, 123, 127, 128, 181, 183, 194, 216, 246], "integr": [1, 11, 55, 59, 73, 75, 76, 77, 78, 105, 185, 192, 251, 262], "string": [1, 7, 261], "fallback": 1, "sympifi": [1, 51], "creat": [1, 2, 18, 87], "an": [1, 63, 114, 168, 207, 216, 267], "indefinit": 1, "eq": [1, 51], "5": [1, 14, 95, 213], "tensor": [1, 47, 59, 162, 220, 223, 224], "fun_ev": 1, "__call__": 1, "tensortyp": 1, "dummy_fmt": 1, "tensorindextyp": 1, "metric": 1, "get_kronecker_delta": 1, "get_epsilon": 1, "tensorsymmetri": 1, "tensorhead": 1, "unit": [1, 29, 167, 168, 169, 171], "quantiti": [1, 166, 168, 170, 246], "is_emptyset": 1, "productset": [1, 205], "iter": [1, 205, 235], "set_potential_energi": 1, "mechan": [1, 7, 96, 105, 115, 124, 125, 126, 127, 128, 129, 130, 131, 150, 217], "condit": [1, 76, 205], "conditionset": [1, 205], "max_degre": 1, "get_upper_degre": 1, "properti": [1, 7, 184], "multivariate_result": 1, "dixonresult": 1, "rh": 1, "default": 1, "0": 1, "tupl": [1, 2, 51, 193], "first": [1, 12], "lambda": [1, 51], "evalu": [1, 2, 18, 55, 73, 130, 267], "differentiate_finit": 1, "4": [1, 14, 95, 213], "data": 1, "clear_cach": 1, "clear_subproduct": 1, "keyword": [1, 2], "is_diagonaliz": 1, "row": [1, 268], "col": 1, "jordan_block": 1, "3": [1, 14, 78, 95, 114, 164, 213], "sourc": [1, 2, 11, 240], "dimens": [1, 63, 165, 168], "scale_factor": 1, "quanit": 1, "import": [1, 14], "classof": 1, "a2idx": 1, "from": [1, 2, 196, 219], "2": [1, 14, 76, 95, 114, 127, 213], "dot": [1, 175, 271], "product": [1, 54, 151, 162, 218, 247], "column": [1, 268], "vector": [1, 41, 51, 124, 172, 173, 174, 178, 179, 180, 181, 190, 242, 244, 245, 246, 248, 249, 250, 251], "geometri": [1, 53, 63, 184], "line3d": 1, "equat": [1, 22, 125, 126, 127, 166, 185, 210, 213, 215, 216, 273], "need": [1, 168], "k": [1, 188], "gotcha": [2, 7, 114, 264], "pitfal": 2, "introduct": [2, 5, 25, 32, 33, 34, 41, 53, 63, 81, 114, 130, 168, 178, 180, 183, 184, 185, 192, 196, 250, 266], "equal": [2, 51, 264], "sign": [2, 57, 264], "singl": [2, 14], "doubl": [2, 56], "variabl": [2, 183, 217, 246], "assign": 2, "doe": [2, 12, 216], "between": [2, 7, 170, 187], "symbol": [2, 7, 8, 18, 51, 70, 127, 131, 182, 187, 193, 196, 216, 264, 266], "python": [2, 33], "number": [2, 29, 37, 51, 54, 55, 76, 187, 192, 196, 252, 257], "vs": [2, 8, 187], "float": [2, 51, 55], "ration": [2, 29, 51, 187, 188, 193, 196, 199, 205, 213, 272], "immut": [2, 85], "mathemat": [2, 14, 130], "invers": [2, 18, 57, 76], "trig": 2, "sqrt": [2, 57], "special": [2, 6, 33, 59, 193, 205, 272], "dictionari": 2, "get": [2, 11, 13, 19], "help": 2, "within": 2, "explan": [3, 14, 23], "classif": 4, "class": [4, 14, 32, 33, 50, 53, 82, 83, 85, 87, 89, 91, 127, 173, 183, 186, 192, 197, 209, 210, 218, 242, 243], "kind": [4, 51], "func": [4, 267], "finit": [5, 29, 31, 34, 184, 187, 190, 192, 196, 207, 217, 262], "differ": [5, 7, 31, 130, 187, 246, 262], "approxim": [5, 33], "deriv": [5, 51, 181, 218, 248, 262], "A": [5, 116, 117, 120, 121, 122, 123, 127, 266, 273], "direct": [5, 248], "topic": [6, 105, 172, 252, 259], "old": [7, 187], "system": [7, 99, 119, 131, 165, 167, 168, 171, 213, 215, 245, 246, 248, 250], "appli": [7, 76, 207], "input": [7, 216], "predic": [7, 28, 29], "refer": [7, 14, 23, 25, 32, 50, 51, 53, 63, 69, 76, 78, 82, 83, 84, 85, 87, 89, 91, 93, 129, 135, 138, 168, 179, 181, 182, 183, 184, 186, 188, 190, 192, 193, 204, 206, 207, 210, 216, 229, 230, 249, 252], "abov": 7, "definit": [7, 18, 29, 69], "implic": 7, "interpret": 7, "other": [7, 18, 20, 70, 178, 246], "is_": 7, "implement": [7, 76, 178, 197, 207, 229, 230, 245, 248], "limit": [7, 75, 114, 202, 204, 262], "combin": [7, 73], "fuzzi": 8, "boolean": [8, 81], "three": [8, 63], "valu": 8, "bool": 8, "logic": [8, 11, 81, 252, 255], "build": [9, 11], "document": [9, 11, 12, 14, 15, 23], "requir": [9, 12], "depend": [9, 11, 127, 187, 246], "docker": 9, "debian": 9, "ubuntu": 9, "fedora": 9, "mac": 9, "window": [9, 183], "doc": [9, 188], "local": 9, "instal": [9, 20, 93, 270], "logo": 9, "view": 9, "auto": 9, "rebuild": 9, "live": 9, "server": 9, "pdf": 9, "debug": 10, "hard": 11, "option": [11, 190], "recommend": [11, 15], "interact": [11, 79, 183], "pars": [11, 93], "gener": [11, 14, 15, 41, 43, 187, 192, 216, 247, 252, 254], "autowrap": [11, 33, 229], "printer": [11, 33, 197, 271], "onli": [11, 216], "statist": 11, "symengin": 11, "backend": [11, 183], "experiment": [11, 93], "rubi": 11, "sage": 11, "develop": [11, 13, 51], "run": [11, 13, 20, 228], "benchmark": 11, "polici": 12, "what": [12, 127, 186, 187, 216, 266, 269], "try": 12, "avoid": 12, "backward": 12, "incompat": 12, "chang": 12, "place": 12, "when": [12, 76], "public": 12, "api": [12, 23, 72, 76, 78, 101, 124, 179, 216, 229, 230, 249, 252], "Not": 12, "purpos": 12, "technic": 12, "possibl": [12, 268], "how": [12, 21, 23, 76, 181, 216], "long": 12, "should": [12, 92], "last": 12, "checklist": 12, "ad": 12, "releas": 12, "note": [12, 18, 51, 63, 127, 204, 206, 264, 273], "entri": [12, 87], "environ": 13, "setup": 13, "git": [13, 20], "virtual": 13, "docstr": [14, 15, 94, 97, 106, 107, 108, 109, 110, 111, 112, 113, 174, 175, 176, 177, 235, 242, 243, 244], "style": [14, 15], "guid": [14, 15, 21, 23, 124, 179, 249], "guidelin": [14, 15], "format": [14, 15], "section": 14, "sentenc": 14, "summari": 14, "exampl": [14, 18, 24, 51, 63, 75, 78, 91, 95, 102, 115, 127, 131, 135, 166, 168, 181, 196, 197, 204, 207, 217, 218, 219, 222, 247, 266, 272], "paramet": [14, 207, 216], "see": [14, 51, 247], "also": [14, 51], "ar": [14, 181, 187, 216], "best": [14, 15, 18], "practic": [14, 15, 18], "write": [14, 15, 18], "sphinx": 14, "cross": [14, 175], "referenc": 14, "type": [15, 33, 59, 174, 213, 216, 217], "narr": 15, "markdown": 15, "prefer": 15, "math": [15, 33], "latex": [15, 93, 271], "head": 15, "spell": 15, "punctuat": 15, "capit": 15, "tone": 15, "contribut": [16, 17, 194], "make": 17, "custom": [18, 183, 197], "easi": 18, "case": [18, 216], "fulli": 18, "defin": 18, "automat": [18, 196], "eval": 18, "remind": 18, "kei": [18, 130, 267], "point": [18, 55, 66, 105, 172, 176, 180, 245], "numer": [18, 55, 73, 78, 92, 105, 130], "evalf": [18, 51, 92, 261], "rewrit": [18, 33, 198, 272], "simplif": [18, 55, 81, 206, 209, 272], "doit": 18, "expand": [18, 51, 196, 198, 272], "differenti": [18, 53, 73, 105, 215, 216, 273], "as_real_imag": 18, "miscellan": [18, 57, 63, 238], "_eval_": 18, "complet": [18, 114], "versin": 18, "divid": 18, "fuse": 18, "multipli": 18, "add": [18, 51], "fma": 18, "addit": [18, 73], "tip": [18, 261, 262, 264, 267, 268], "start": 19, "anaconda": 20, "mpmath": 20, "question": 20, "solv": [22, 95, 185, 192, 215, 216, 273], "welcom": 23, "s": [23, 51, 109, 118, 121, 122, 123, 125, 126, 127, 148, 159, 196, 206, 215, 216, 246, 251, 269], "tutori": [23, 210, 265], "abc": 24, "caveat": [24, 93], "algebra": [25, 29, 80, 87, 138, 181, 184, 187, 192, 196, 215, 273], "quaternion": 25, "ask": 26, "assum": 27, "queri": 28, "content": [28, 38, 58, 71, 77, 189, 201, 211, 220], "perform": 28, "improv": [28, 114], "common": [29, 82, 105, 172, 196, 197, 198, 209], "tautolog": 29, "commut": [29, 144, 184], "calculu": [29, 31, 181, 262], "infinit": [29, 216], "symmetr": 29, "invert": 29, "orthogon": [29, 59, 193, 248], "unitari": 29, "posit": 29, "upper": 29, "triangular": 29, "lower": 29, "diagon": [29, 218, 268], "full": 29, "rank": 29, "squar": [29, 185, 209], "integ": [29, 51, 57, 187, 205], "element": [29, 127, 187, 192], "real": [29, 187, 205], "complex": [29, 57, 187, 205], "singular": [29, 31, 59, 95], "normal": [29, 88, 186, 196], "theori": [29, 32, 252, 257], "even": 29, "odd": 29, "prime": [29, 192], "composit": [29, 73], "order": [29, 51, 193, 204, 207, 213], "neg": 29, "zero": [29, 51, 99, 190, 196, 268], "nonzero": 29, "nonposit": 29, "nonneg": 29, "irrat": 29, "extend": [29, 207], "hermitian": 29, "imaginari": 29, "antihermitian": 29, "transcendent": 29, "refin": 30, "weight": 31, "categori": 32, "base": [32, 53, 184, 185, 196, 203, 216], "diagram": 32, "draw": 32, "codegen": [33, 230], "tool": [33, 90, 209], "simplifi": [33, 190, 208, 209, 272], "abstract": [33, 96, 100, 102, 124, 133, 150, 179, 188], "syntax": 33, "tree": [33, 187, 197, 267], "ast": [33, 114], "predefin": 33, "node": 33, "c": [33, 197], "cfunction": 33, "specif": 33, "cnode": 33, "cxxnode": 33, "fortran": [33, 197], "fnode": 33, "algorithm": [33, 34, 148, 159, 190, 193, 199, 204, 207], "pyutil": 33, "cutil": 33, "futil": 33, "present": [34, 41], "group": [34, 36, 39, 41, 42, 168], "overview": [34, 41, 76], "facil": 34, "construct": [34, 41, 219], "free": [34, 185], "word": [34, 41], "coset": 34, "enumer": [34, 56], "todd": 34, "coxet": 34, "cosett": 34, "compress": 34, "standard": 34, "subgroup": 34, "index": [34, 41, 219, 222], "low": 34, "reidemeist": 34, "schreier": 34, "bibliographi": [34, 41], "grai": 35, "constructor": [36, 193, 268], "nilpot": 37, "abelian": 37, "cyclic": 37, "name": 39, "partit": [40, 56, 210, 235], "polycycl": 41, "polycyclicgroup": 41, "collector": 41, "comput": [41, 76, 92, 150, 196, 266], "minim": [41, 192], "uncollect": 41, "subword": 41, "collect": [41, 198, 209, 272], "expon": [41, 196], "depth": [41, 63], "lead": 41, "polyhedron": 44, "prufer": 45, "sequenc": [45, 73, 190, 202, 203], "subset": [46, 54], "canonic": 47, "concret": 50, "hypergeometr": [50, 59, 70, 73, 199, 207, 209], "term": [50, 196, 198, 204], "cach": 51, "cacheit": 51, "basic": [51, 55, 87, 174, 185, 187, 193, 205, 245, 252, 253, 261, 268], "atom": 51, "singleton": [51, 203, 205], "unevaluatedexpr": 51, "atomicexpr": 51, "wild": 51, "dummi": 51, "var": 51, "algebraicnumb": 51, "numbersymbol": 51, "realnumb": 51, "igcd": 51, "ilcm": 51, "seterr": 51, "One": 51, "negativeon": 51, "half": 51, "nan": [51, 127], "infin": 51, "negativeinfin": 51, "complexinfin": 51, "exp1": 51, "imaginaryunit": 51, "pi": 51, "eulergamma": 51, "catalan": [51, 56], "goldenratio": 51, "tribonacciconst": 51, "mod_invers": 51, "power": [51, 194, 199, 205, 209, 266, 272], "pow": 51, "integer_nthroot": 51, "integer_log": 51, "mul": 51, "prod": 51, "mod": 51, "rel": 51, "ne": 51, "lt": 51, "le": 51, "gt": 51, "ge": 51, "greaterthan": 51, "lessthan": 51, "unequ": 51, "strictgreaterthan": 51, "strictlessthan": 51, "multidimension": 51, "wildfunct": 51, "diff": 51, "functionclass": 51, "sub": [51, 92], "poleerror": 51, "count_op": 51, "expand_mul": 51, "expand_log": [51, 272], "expand_func": [51, 272], "expand_trig": [51, 272], "expand_complex": 51, "expand_multinomi": 51, "expand_power_exp": [51, 272], "expand_power_bas": [51, 272], "nfloat": 51, "evalfmixin": 51, "precisionexhaust": 51, "contain": 51, "tuplekind": 51, "dict": 51, "exprtool": 51, "gcd_term": 51, "factor_term": 51, "numberkind": 51, "undefinedkind": 51, "booleankind": 51, "sort": 51, "default_sort_kei": 51, "random": [51, 217], "random_complex_numb": 51, "verify_numer": 51, "test_derivative_numer": 51, "_randrang": 51, "_randint": 51, "bottom_up": 51, "postorder_travers": 51, "preorder_travers": 51, "walk": [51, 267], "cryptographi": 52, "discret": [54, 217], "transform": [54, 76, 78, 93, 246], "fast": 54, "fourier": [54, 200], "theoret": 54, "walsh": 54, "hadamard": 54, "m\u00f6biu": 54, "convolut": 54, "cover": 54, "intersect": [54, 63, 205], "accuraci": 55, "error": [55, 59], "handl": [55, 216], "sum": 55, "combinatori": [56, 209], "bell": 56, "bernoulli": [56, 213], "binomi": 56, "euler": 56, "factori": [56, 185], "subfactori": 56, "factorial2": 56, "fallingfactori": 56, "fibonacci": 56, "tribonacci": 56, "harmon": [56, 59, 139, 164], "luca": 56, "genocchi": 56, "multifactori": 56, "risingfactori": 56, "stirl": 56, "nc": 56, "np": 56, "nt": 56, "elementari": [57, 184, 203, 205], "re": 57, "im": 57, "ab": 57, "conjug": 57, "polar_lift": 57, "periodic_argu": 57, "principal_branch": 57, "trigonometr": [57, 59, 206, 209, 272], "sin": 57, "co": 57, "tan": 57, "cot": 57, "sec": 57, "csc": 57, "sinc": 57, "asin": 57, "aco": 57, "atan": 57, "acot": 57, "asec": 57, "acsc": 57, "atan2": 57, "hyperbol": 57, "hyperbolicfunct": 57, "sinh": 57, "cosh": 57, "tanh": 57, "coth": 57, "sech": 57, "csch": 57, "asinh": 57, "acosh": 57, "atanh": 57, "acoth": 57, "asech": 57, "acsch": 57, "ceil": 57, "floor": 57, "roundfunct": 57, "frac": 57, "exponenti": [57, 59, 213, 272], "exp": 57, "lambertw": 57, "log": 57, "exp_polar": 57, "piecewis": 57, "exprcondpair": 57, "identityfunct": 57, "min": 57, "max": 57, "root": [57, 193, 209], "cbrt": 57, "real_root": 57, "diracdelta": 59, "heavisid": 59, "gamma": [59, 102], "beta": 59, "fresnel": 59, "logarithm": [59, 272], "bessel": 59, "airi": 59, "b": 59, "spline": 59, "riemann": 59, "zeta": 59, "ellipt": 59, "mathieu": 59, "jacobi": 59, "gegenbau": 59, "chebyshev": 59, "legendr": 59, "hermit": 59, "laguerr": 59, "spheric": 59, "curv": 60, "ellips": 61, "entiti": [62, 63, 183], "avail": 63, "usag": [63, 114, 131, 187, 247], "median": 63, "pappu": 63, "hexagon": 63, "theorem": [63, 76, 251], "futur": [63, 105, 114, 172], "work": [63, 196], "truth": [63, 81], "beyond": 63, "visual": [63, 130], "line": 64, "plane": [65, 76], "polygon": [67, 78], "about": [69, 216, 246, 273], "holonom": [69, 70, 71, 73, 74, 119], "convert": [70, 73, 187, 213, 261], "represent": [70, 74, 168, 181, 187], "meijer": [70, 73, 76, 207], "g": [70, 73, 76, 207], "intern": [72, 76, 78, 187, 190, 192, 210, 213], "multipl": [73, 181, 192], "seri": [73, 183, 194, 199, 200, 201, 204, 262], "expans": [73, 204, 207, 209, 262], "linear": [73, 87, 105, 110, 127, 128, 168, 196, 210, 213], "holonomicfunct": 74, "differentialoper": 74, "differentialoperatoralgebra": 74, "current": 75, "polar": [76, 135], "branch": 76, "repres": [76, 158, 187, 192], "argand": 76, "tabl": [76, 81, 207], "lookup": 76, "mellin": 76, "converg": 76, "laplac": 76, "thi": [76, 216], "valid": 76, "exist": 76, "formula": [76, 207], "todo": 78, "bug": 78, "over": [78, 196, 205], "polytop": 78, "For": 78, "2d": 78, "polyhedra": 78, "session": 79, "lie": [80, 213], "form": [81, 88, 127, 186, 213, 219], "equival": [81, 130, 210], "manipul": [81, 87, 107, 189, 190, 193, 194, 216, 267], "infer": 81, "matrixcommon": 82, "matrixkind": 82, "dens": [83, 187, 188, 190], "immutablematrix": [83, 85], "block": 84, "matrixdetermin": 87, "matrixreduct": 87, "matrixsubspac": 87, "matrixeigen": 87, "matrixcalculu": 87, "matrixbas": 87, "except": [87, 93, 190, 233], "numpi": 87, "spars": [89, 90, 187, 188, 190], "immutablesparsematrix": 89, "ntheori": 91, "ecm": 91, "qs": 91, "ufuncifi": 92, "aesara": [92, 197], "so": 92, "which": [92, 197], "i": 92, "mathrm": [93, 271], "runtim": 93, "beam": [94, 95, 96], "bend": 95, "problem": [95, 192, 247], "continuum": 96, "truss": [96, 97], "control": [98, 99, 100, 101, 183], "pole": 99, "bode": 99, "impuls": 99, "respons": [99, 197], "step": [99, 216], "ramp": 99, "modul": [100, 133, 172, 179, 184, 185, 186, 187, 190, 192, 193, 210, 213, 214, 216, 229], "lti": 101, "high": 102, "energi": [102, 128], "hydrogen": 103, "wavefunct": 103, "potenti": [105, 127, 128, 172, 178, 248], "issu": [105, 114, 127, 172, 268], "advanc": [105, 172, 196, 267, 268], "featur": [105, 172, 263], "choic": 105, "coordin": [105, 118, 127, 183, 245, 246, 248, 250], "speed": [105, 127], "substitut": [105, 172, 261], "acceler": [105, 172, 180, 204], "interfac": [105, 172, 183, 217], "output": [105, 216], "bodi": [106, 128, 251], "msub": 107, "find_dynamicsymbol": 107, "joint": [108, 217], "pinjoint": 108, "prismaticjoint": 108, "kane": [109, 118, 121, 122, 125, 127], "lagrang": [109, 118, 123, 126, 127], "kanemethod": 109, "lagrangesmethod": 109, "mass": [111, 128, 251], "inertia": [111, 128, 172], "particl": [111, 128, 154], "rigidbodi": 111, "inertia_of_point_mass": 111, "linear_momentum": 111, "angular_momentum": 111, "kinetic_energi": 111, "potential_energi": 111, "lagrangian": [111, 128], "mechanics_print": 112, "mprint": 112, "mpprint": 112, "mlatex": 112, "symbolicsystem": [113, 131], "autolev": [114, 130], "dynam": 114, "onlin": 114, "fix": 114, "switch": 114, "bicycl": 116, "four": 117, "bar": 117, "linkag": 117, "nonminim": 118, "pendulum": 118, "multi": 119, "degre": 119, "freedom": 119, "roll": [120, 121, 122, 123], "disc": [120, 121, 122, 123], "constraint": 122, "forc": 122, "classic": [124, 190], "structur": [125, 126, 168, 210], "background": 127, "directli": [127, 246], "new_method": 127, "kwarg": 127, "a_and_b": 127, "true": 127, "slow": 127, "ha": 127, "zoo": 127, "oo": 127, "further": [127, 264], "rigid": 128, "dyadic": [128, 172, 173, 242, 245, 246], "momentum": 128, "angular": [128, 180], "momenta": 128, "kinet": 128, "user": [130, 210, 213, 214], "rough": 130, "link": 130, "gaussian": [132, 187, 188, 196], "optic": [132, 133], "medium": 134, "wave": 137, "pauli": 138, "quantum": [139, 150, 164], "oscil": [139, 164], "d": [139, 164], "anticommut": 140, "cartesian": 141, "state": [141, 150, 153, 161], "clebsch": 142, "gordan": 142, "coeffici": [142, 190], "circuit": 143, "constant": [145, 168], "dagger": 146, "gate": 147, "grover": 148, "hilbert": 149, "space": [149, 168, 207], "analyt": 150, "solut": [150, 216, 247], "inner": 151, "helper": [153, 197], "box": 154, "qappli": 155, "qft": 156, "qubit": 157, "shor": 159, "spin": 160, "second": 163, "quantiz": 163, "dimension": 166, "analysi": 166, "philosophi": 168, "behind": 168, "literatur": [168, 191, 196], "prefix": 169, "convers": 170, "referencefram": [172, 173, 181], "dynamicsymbol": [172, 175], "essenti": [173, 175, 242, 244], "coordinatesym": 173, "field": [174, 178, 187, 190, 192, 196, 248, 250], "curl": [174, 178, 244, 248], "diverg": [174, 178, 244, 248, 251], "gradient": [174, 178, 244, 248], "scalar_potenti": [174, 244], "scalar_potential_differ": [174, 244], "is_conserv": [174, 244], "is_solenoid": [174, 244], "outer": 175, "time_deriv": 175, "kinemat": [176, 180], "kinematic_equ": 176, "init_vprint": 177, "vprint": 177, "vpprint": 177, "vlatex": 177, "scalar": [178, 248, 250], "conserv": [178, 248], "solenoid": [178, 248], "veloc": 180, "altern": 181, "basi": [181, 190, 192], "frame": 181, "wigner": 182, "credit": 182, "copyright": 182, "author": 182, "plotgrid": 183, "pyglet": 183, "mode": 183, "specifi": 183, "interv": [183, 205], "color": 183, "geometr": 183, "ascii": [183, 271], "art": 183, "agca": 184, "ring": [184, 187, 188], "ideal": 184, "homomorph": [184, 192], "syzygi": 184, "extens": [184, 196], "concept": 185, "divis": [185, 210], "domain": [185, 187, 188, 193, 196, 216], "euclidean": 185, "gcd": [185, 190, 196], "lcm": 185, "factor": [185, 190, 196, 213, 272], "groebner": [185, 190], "introduc": [186, 187], "domainmatrix": 186, "ddm": 186, "sdm": 186, "dup": 187, "dmp": 187, "polyr": 187, "polynomialr": 187, "choos": 187, "unifi": 187, "gf": 188, "p": [188, 192], "zz": 188, "qq": 188, "mpq": 188, "zz_i": 188, "qq_i": 188, "rr": 188, "cc": 188, "x": 188, "ex": 188, "quotient": 188, "level": 190, "multivari": [190, 196], "univari": [190, 196, 210], "remaind": 190, "subresult": 190, "configur": 190, "modular": 190, "undocu": 190, "main": 192, "decomposit": [192, 193, 196], "adic": 192, "valuat": 192, "find": [192, 193], "subfield": 192, "As": 192, "arithmet": 192, "extra": 193, "monomi": 193, "encod": 193, "formal": [193, 199], "partial": [193, 196, 215, 216], "fraction": [193, 196, 209, 272], "dispers": 193, "rs_seri": 194, "solve_lin_si": 195, "eqs_to_matrix": 195, "sympy_eqs_to_r": 195, "_solve_lin_si": 195, "_solve_lin_sys_compon": 195, "wester": 196, "articl": 196, "simpl": 196, "result": 196, "support": 196, "back": 196, "cyclotom": 196, "reduc": 196, "gr\u00f6bner": 196, "mistak": 197, "prettyprint": 197, "rcodeprint": 197, "mapl": 197, "javascript": 197, "julia": 197, "octav": 197, "matlab": 197, "rust": 197, "gtk": 197, "lambdaprint": 197, "latexprint": 197, "mathmlprint": 197, "pythoncodeprint": 197, "pythonprint": 197, "srepr": [197, 271], "strprinter": 197, "preview": 197, "codeprint": 197, "preced": 197, "dotprint": 197, "subexpress": [198, 209], "detect": 198, "compound": [203, 205, 217], "recurs": [203, 267], "gruntz": 204, "more": [204, 246, 266], "intuit": 204, "residu": 204, "finiteset": 205, "union": 205, "complement": 205, "symmetricdiffer": 205, "disjointunion": 205, "emptyset": 205, "universalset": 205, "natur": 205, "naturals0": 205, "imageset": 205, "rang": 205, "complexregion": 205, "powerset": 205, "setkind": 205, "hongguang": 206, "fu": 206, "rule": [206, 247], "notat": 207, "increment": 207, "decrement": 207, "indic": 207, "reduct": 207, "around": 207, "loos": 207, "end": 207, "confluenc": 207, "separatevar": 209, "nthroot": 209, "kroneckersimp": 209, "besselsimp": 209, "hypersimp": 209, "hypersimilar": 209, "nsimplifi": 209, "posifi": 209, "logcombin": [209, 272], "radsimp": 209, "rad_ration": 209, "collect_sqrt": 209, "collect_const": 209, "ratsimp": 209, "ratsimpmodprim": 209, "trigsimp": [209, 272], "powsimp": [209, 272], "powdenest": [209, 272], "combsimp": [209, 272], "denest": 209, "sqrtdenest": 209, "elimin": 209, "cse": 209, "opt_cs": 209, "tree_cs": 209, "hyperexpand": [209, 272], "epath": 209, "diophantin": [210, 215, 216], "classify_diop": 210, "diop_solv": 210, "diop_linear": 210, "base_solution_linear": 210, "diop_quadrat": 210, "diop_dn": 210, "cornacchia": 210, "diop_bf_dn": 210, "transformation_to_dn": 210, "transformation_to_norm": 210, "find_dn": 210, "diop_ternary_quadrat": 210, "square_factor": 210, "descent": 210, "diop_general_pythagorean": 210, "diop_general_sum_of_squar": 210, "diop_general_sum_of_even_pow": 210, "power_represent": 210, "sum_of_three_squar": 210, "sum_of_four_squar": 210, "sum_of_pow": 210, "sum_of_squar": 210, "merge_solut": 210, "pqa": 210, "parametrize_ternary_quadrat": 210, "diop_ternary_quadratic_norm": 210, "ldescent": 210, "gaussian_reduc": 210, "holzer": 210, "prime_as_sum_of_two_squar": 210, "sqf_normal": 210, "reconstruct": 210, "diophantinesolutionset": 210, "diophantineequationtyp": 210, "binaryquadrat": 210, "inhomogeneousternaryquadrat": 210, "homogeneousternaryquadraticnorm": 210, "homogeneousternaryquadrat": 210, "inhomogeneousgeneralquadrat": 210, "homogeneousgeneralquadrat": 210, "generalsumofsquar": 210, "generalpythagorean": 210, "cubicthu": 210, "generalsumofevenpow": 210, "inequ": [212, 215, 216], "od": [213, 215, 216], "dsolv": 213, "dsolve_system": 213, "classify_od": 213, "checkodesol": 213, "homogeneous_ord": 213, "infinitesim": 213, "checkinfsol": 213, "constantsimp": 213, "hint": [213, 214], "allhint": 213, "odesimp": 213, "constant_renumb": 213, "sol_simpl": 213, "1st_exact": 213, "1st_homogeneous_coeff_best": 213, "1st_homogeneous_coeff_subs_dep_div_indep": 213, "1st_homogeneous_coeff_subs_indep_div_dep": 213, "1st_linear": 213, "1st_rational_riccati": 213, "2nd_linear_airi": 213, "2nd_linear_bessel": 213, "liouvil": 213, "riccati_special_minus2": 213, "nth_linear_constant_coeff_homogen": 213, "nth_linear_constant_coeff_undetermined_coeffici": 213, "nth_linear_constant_coeff_variation_of_paramet": 213, "nth_linear_euler_eq_homogen": 213, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 213, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 213, "nth_algebra": 213, "nth_order_reduc": 213, "separ": 213, "almost_linear": 213, "linear_coeffici": 213, "separable_reduc": 213, "lie_group": 213, "2nd_hypergeometr": 213, "1st_power_seri": 213, "2nd_power_series_ordinari": 213, "2nd_power_series_regular": 213, "heurist": 213, "abaco1_simpl": 213, "abaco1_product": 213, "bivari": 213, "chi": 213, "abaco2_similar": 213, "function_sum": 213, "abaco2_unique_unknown": 213, "abaco2_unique_gener": 213, "riccati": 213, "riccati_norm": 213, "riccati_inverse_norm": 213, "riccati_reduc": 213, "construct_c": 213, "construct_d": 213, "rational_laurent_seri": 213, "compute_m_ybar": 213, "solve_aux_eq": 213, "remove_redundant_sol": 213, "get_gen_sol_from_part_sol": 213, "solve_riccati": 213, "canon": 213, "linodesolv": 213, "inform": [213, 214], "jordan": 213, "nonlinear": 213, "pde": [214, 215, 216], "pde_separ": 214, "pde_separate_add": 214, "pde_separate_mul": 214, "pdsolv": 214, "classify_pd": 214, "checkpdesol": 214, "pde_1st_linear_constant_coeff_homogen": 214, "pde_1st_linear_constant_coeff": 214, "pde_1st_linear_variable_coeff": 214, "ordinari": [215, 216], "deutil": 215, "recurr": 215, "de": [215, 216], "solveset": 216, "wrong": 216, "why": [216, 266], "do": 216, "we": 216, "emploi": 216, "return": 216, "ensur": 216, "ani": 216, "search": 216, "deal": 216, "where": 216, "known": 216, "plan": 216, "linear_eq_to_matrix": 216, "linsolv": 216, "nonlinsolv": 216, "transolv": 216, "continu": [217, 272], "stochast": 217, "process": 217, "dim": [218, 219], "arrai": [218, 219], "contract": 218, "explicit": 219, "pytest": 226, "randomis": 227, "detail": [229, 230, 245], "routin": 230, "decor": 231, "enum": 232, "variat": 235, "memoiz": 237, "pkgdata": 239, "inspect": 240, "time": 241, "coordsys3d": [242, 246], "del": [242, 247, 248], "parametricregion": 242, "implicitregion": 242, "parametricintegr": 242, "orient": [243, 246], "axisorient": 243, "bodyorient": 243, "spaceorient": 243, "quaternionorient": 243, "matrix_to_vector": 244, "vector_integr": 244, "locat": 246, "orient_new": 246, "AND": 246, "quadrilater": 247, "third": 247, "curvilinear": 248, "applic": 251, "calcul": 251, "perimet": 251, "surfac": 251, "area": 251, "volum": 251, "flux": 251, "verifi": 251, "stoke": 251, "quick": [261, 262, 264, 267, 268], "two": 264, "final": 264, "read": 264, "interest": 266, "understand": 267, "through": 267, "invari": 267, "prevent": 267, "shape": 268, "access": 268, "delet": 268, "insert": 268, "determin": 268, "rref": 268, "nullspac": 268, "columnspac": 268, "eigenvalu": 268, "eigenvector": 268, "next": 269, "preliminari": 270, "exercis": 270, "up": 271, "str": 271, "mathml": 271, "cancel": 272, "apart": 272, "gammasimp": 272}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})