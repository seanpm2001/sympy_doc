Search.setIndex({"docnames": ["citing", "explanation/active-deprecations", "explanation/gotchas", "explanation/index", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/contributing/build-docs", "guides/contributing/debug", "guides/contributing/dependencies", "guides/contributing/deprecations", "guides/contributing/dev-setup", "guides/contributing/docstring", "guides/contributing/documentation-style-guide", "guides/contributing/index", "guides/contributing/make-a-contribution", "guides/custom-functions", "guides/getting_started/index", "guides/getting_started/install", "guides/index", "guides/solving/index", "index", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorial/basic_operations", "tutorial/calculus", "tutorial/features", "tutorial/gotchas", "tutorial/index", "tutorial/intro", "tutorial/manipulation", "tutorial/matrices", "tutorial/next", "tutorial/preliminaries", "tutorial/printing", "tutorial/simplification", "tutorial/solvers"], "filenames": ["citing.md", "explanation/active-deprecations.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/contributing/build-docs.rst", "guides/contributing/debug.rst", "guides/contributing/dependencies.md", "guides/contributing/deprecations.md", "guides/contributing/dev-setup.rst", "guides/contributing/docstring.rst", "guides/contributing/documentation-style-guide.rst", "guides/contributing/index.rst", "guides/contributing/make-a-contribution.rst", "guides/custom-functions.md", "guides/getting_started/index.rst", "guides/getting_started/install.md", "guides/index.rst", "guides/solving/index.md", "index.rst", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorial/basic_operations.rst", "tutorial/calculus.rst", "tutorial/features.rst", "tutorial/gotchas.rst", "tutorial/index.rst", "tutorial/intro.rst", "tutorial/manipulation.rst", "tutorial/matrices.rst", "tutorial/next.rst", "tutorial/preliminaries.rst", "tutorial/printing.rst", "tutorial/simplification.rst", "tutorial/solvers.rst"], "titles": ["Citing SymPy", "List of active deprecations", "Gotchas and Pitfalls", "Explanation", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Docstring Style Guide", "Contributing to SymPy", "Making a Contribution", "Writing Custom Functions", "Getting Started", "Installation", "How-to Guides", "Solve Equations", "Welcome to SymPy\u2019s documentation!", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joint (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Tutorials", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 24, 27, 28, 31, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 64, 74, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 99, 101, 102, 104, 106, 108, 109, 125, 126, 129, 139, 143, 156, 165, 167, 171, 177, 180, 182, 184, 186, 187, 189, 191, 192, 193, 195, 196, 203, 204, 206, 209, 212, 213, 214, 215, 216, 217, 220, 221, 225, 227, 228, 231, 232, 234, 235, 241, 242, 244, 245, 247, 249, 250, 260, 261, 263, 264, 266, 267, 270, 271, 272], "public": [0, 14, 33, 51, 52, 73, 186, 187, 189, 190, 194, 209, 212, 216, 230, 241], "us": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 129, 130, 131, 134, 135, 137, 139, 141, 142, 143, 146, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 243, 244, 246, 247, 249, 250, 252, 253, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "meurer": 0, "A": [0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 18, 19, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 97, 99, 101, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 123, 124, 127, 128, 129, 130, 131, 134, 136, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 241, 242, 244, 245, 246, 247, 249, 250, 257, 262, 264, 266, 267, 271], "smith": [0, 1, 88, 185], "cp": [0, 43, 92, 184], "paprocki": 0, "m": [0, 1, 2, 5, 7, 9, 18, 25, 29, 33, 34, 39, 40, 42, 43, 47, 50, 51, 52, 53, 54, 56, 59, 61, 63, 67, 68, 76, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 101, 103, 104, 106, 109, 110, 111, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 138, 145, 159, 160, 163, 165, 167, 177, 181, 183, 184, 185, 187, 189, 190, 191, 192, 196, 197, 198, 199, 201, 202, 203, 204, 206, 208, 209, 212, 214, 215, 216, 217, 218, 221, 222, 228, 229, 231, 234, 236, 241, 243, 245, 249, 250, 261, 267, 270, 271, 272], "\u010dert\u00edk": 0, "o": [0, 2, 5, 7, 14, 24, 32, 33, 42, 43, 49, 51, 52, 57, 59, 61, 62, 64, 65, 67, 73, 76, 91, 95, 106, 109, 111, 113, 114, 124, 125, 126, 127, 129, 130, 152, 162, 173, 175, 177, 179, 189, 190, 192, 193, 196, 198, 203, 206, 212, 216, 221, 234, 243, 246, 261], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 215], "ivanov": 0, "s": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 17, 18, 20, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 90, 91, 92, 93, 94, 95, 99, 101, 103, 105, 106, 108, 111, 114, 116, 119, 123, 127, 129, 133, 134, 135, 141, 142, 144, 146, 148, 149, 152, 156, 157, 159, 160, 162, 165, 167, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 222, 227, 228, 229, 230, 231, 232, 234, 235, 237, 241, 242, 246, 247, 248, 249, 252, 260, 261, 263, 264, 265, 266, 267, 271, 272], "moor": [0, 84, 87], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 2, 8, 9, 12, 14, 15, 18, 25, 28, 29, 31, 33, 34, 35, 42, 43, 44, 45, 47, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 78, 80, 81, 82, 83, 84, 87, 91, 92, 93, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 124, 125, 126, 127, 129, 130, 134, 136, 142, 146, 158, 160, 162, 164, 165, 167, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 199, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 222, 225, 227, 230, 234, 235, 241, 243, 245, 249, 260, 261, 265, 266, 267, 270, 271, 272], "vig": 0, "granger": [0, 148], "BE": 0, "muller": 0, "rp": [0, 67, 134], "bonazzi": 0, "f": [0, 1, 2, 5, 9, 14, 18, 31, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 69, 74, 75, 76, 78, 80, 82, 84, 87, 91, 92, 93, 95, 99, 109, 113, 118, 123, 124, 125, 129, 131, 135, 136, 147, 148, 151, 160, 162, 165, 172, 176, 177, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 195, 196, 198, 199, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 221, 222, 227, 228, 229, 230, 231, 234, 235, 237, 246, 247, 250, 260, 261, 266, 270, 271, 272], "gupta": [0, 215], "h": [0, 2, 5, 31, 32, 33, 34, 35, 42, 47, 50, 51, 52, 56, 59, 73, 76, 78, 82, 83, 87, 88, 93, 101, 111, 127, 131, 134, 146, 148, 151, 156, 160, 167, 181, 182, 183, 184, 185, 189, 190, 191, 192, 195, 196, 204, 208, 212, 214, 215, 216, 217, 222, 229, 250, 261, 270], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 148], "mj": 0, "terrel": 0, "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134, 135, 136, 137, 139, 141, 143, 146, 148, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 233, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 249, 251, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 1, 2, 4, 5, 7, 8, 12, 14, 15, 18, 24, 25, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 73, 74, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 93, 94, 95, 97, 101, 102, 103, 104, 106, 109, 111, 114, 116, 120, 121, 122, 125, 126, 127, 129, 131, 134, 135, 137, 145, 146, 151, 152, 157, 159, 160, 162, 167, 168, 171, 172, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 227, 228, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 260, 266, 271], "kulal": 0, "cimrman": 0, "r": [0, 1, 2, 5, 7, 9, 14, 15, 18, 25, 32, 33, 34, 35, 42, 43, 51, 52, 53, 55, 56, 57, 64, 65, 67, 69, 73, 74, 76, 78, 87, 91, 93, 95, 101, 103, 106, 109, 110, 111, 113, 114, 116, 117, 120, 121, 122, 126, 127, 128, 129, 130, 131, 134, 158, 159, 162, 163, 165, 172, 173, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 203, 204, 206, 208, 209, 212, 214, 215, 216, 222, 227, 229, 231, 241, 243, 245, 246, 247, 250, 271], "scopatz": 0, "2017": [0, 181], "symbol": [0, 1, 3, 5, 11, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 41, 43, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 81, 82, 84, 87, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 120, 121, 122, 123, 127, 129, 131, 134, 135, 136, 137, 139, 141, 142, 144, 146, 148, 150, 151, 154, 157, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 228, 234, 235, 241, 242, 243, 245, 246, 247, 250, 252, 257, 260, 261, 264, 266, 267, 270, 271, 272], "comput": [0, 1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 19, 20, 22, 25, 31, 33, 34, 35, 38, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 66, 70, 73, 74, 75, 77, 78, 80, 82, 84, 87, 88, 90, 91, 93, 95, 99, 101, 105, 108, 109, 110, 113, 114, 116, 120, 123, 129, 146, 147, 148, 156, 161, 162, 164, 166, 167, 171, 173, 177, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 201, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 218, 228, 231, 234, 235, 241, 242, 243, 244, 245, 246, 247, 249, 252, 257, 260, 261, 263, 264, 267, 271], "python": [0, 1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 26, 27, 28, 31, 43, 51, 52, 55, 57, 63, 79, 81, 82, 84, 87, 91, 92, 93, 94, 105, 114, 129, 172, 182, 183, 184, 186, 187, 193, 195, 196, 204, 208, 212, 215, 217, 227, 228, 229, 230, 231, 234, 235, 237, 241, 253, 263, 264, 265, 266, 267, 269, 270, 271], "peerj": 0, "scienc": [0, 43, 76, 87, 128, 129, 183, 190, 206, 261], "3": [0, 2, 3, 5, 7, 8, 12, 13, 15, 18, 20, 22, 25, 26, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 101, 102, 103, 104, 107, 111, 113, 116, 117, 118, 120, 121, 122, 123, 125, 126, 129, 130, 131, 133, 135, 139, 141, 142, 143, 147, 151, 156, 157, 159, 161, 162, 165, 168, 169, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 221, 222, 223, 227, 228, 230, 231, 232, 234, 235, 237, 239, 241, 242, 243, 244, 245, 247, 249, 250, 257, 260, 261, 263, 265, 266, 267, 270, 271, 272], "e103": 0, "http": [0, 1, 7, 9, 11, 12, 13, 14, 15, 18, 20, 25, 27, 28, 29, 31, 32, 33, 35, 39, 40, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 67, 68, 69, 73, 76, 78, 79, 80, 81, 82, 84, 87, 91, 94, 99, 101, 103, 104, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 148, 150, 151, 160, 162, 172, 174, 176, 178, 181, 190, 192, 195, 196, 199, 201, 203, 204, 205, 208, 209, 212, 215, 216, 228, 229, 230, 232, 234, 235, 237, 241, 242, 246, 248, 250, 267, 270], "doi": [0, 14, 31, 43, 87, 190, 205, 208, 216], "org": [0, 2, 7, 11, 14, 15, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 99, 101, 103, 104, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 148, 150, 151, 160, 162, 172, 174, 176, 178, 190, 192, 196, 199, 203, 204, 205, 209, 212, 215, 216, 228, 229, 230, 232, 234, 241, 242, 246, 248, 250, 267, 270], "10": [0, 2, 3, 11, 14, 18, 20, 25, 31, 33, 40, 42, 43, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 67, 68, 76, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 96, 97, 99, 101, 102, 107, 111, 114, 116, 129, 131, 135, 146, 156, 157, 168, 172, 173, 174, 175, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 199, 202, 203, 204, 205, 208, 209, 212, 215, 216, 217, 226, 227, 232, 234, 235, 237, 241, 243, 260, 267, 271], "7717": 0, "cs": [0, 91, 189, 190, 191, 196, 216], "103": [0, 42], "bibtex": 0, "entri": [0, 1, 29, 34, 41, 43, 49, 52, 63, 76, 80, 82, 83, 84, 86, 90, 109, 114, 116, 127, 134, 185, 189, 191, 192, 206, 216, 235], "latex": [0, 9, 11, 14, 18, 20, 59, 79, 171, 172, 176, 180, 182, 187, 196, 259, 265, 266], "user": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 23, 32, 33, 34, 42, 43, 50, 51, 52, 53, 59, 63, 76, 80, 84, 87, 93, 94, 95, 99, 101, 105, 114, 123, 125, 127, 130, 150, 151, 160, 166, 167, 171, 172, 175, 179, 183, 186, 189, 191, 193, 194, 195, 196, 197, 205, 208, 210, 214, 215, 216, 225, 228, 229, 231, 232, 235, 241, 244, 245, 250, 260, 263, 264, 266, 267, 268], "articl": [0, 51, 52, 84, 87, 188, 190, 191, 196, 241, 265], "titl": [0, 14, 15, 182], "author": [0, 14, 91, 148, 191, 257], "aaron": 0, "christoph": [0, 241], "p": [0, 1, 2, 5, 7, 8, 9, 18, 25, 27, 28, 29, 33, 34, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 82, 84, 87, 91, 93, 94, 95, 97, 101, 102, 106, 108, 109, 110, 111, 113, 114, 117, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 141, 160, 162, 167, 173, 175, 177, 179, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 196, 198, 199, 203, 204, 206, 208, 209, 212, 214, 215, 216, 217, 221, 222, 234, 241, 243, 244, 245, 246, 247, 249, 267, 271], "mateusz": 0, "v": [0, 2, 9, 13, 25, 33, 41, 47, 50, 51, 52, 53, 54, 55, 65, 76, 80, 82, 87, 91, 95, 106, 107, 111, 116, 126, 127, 129, 130, 134, 135, 147, 162, 167, 172, 174, 175, 177, 179, 180, 182, 186, 189, 190, 191, 192, 196, 206, 208, 209, 212, 214, 216, 227, 234, 241, 243, 244, 245, 246, 247, 249], "c": [0, 2, 5, 7, 9, 11, 18, 24, 25, 31, 32, 35, 36, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 93, 94, 95, 97, 101, 103, 105, 107, 108, 109, 114, 118, 120, 121, 122, 125, 126, 127, 129, 131, 135, 141, 142, 143, 146, 148, 151, 156, 159, 161, 162, 167, 172, 175, 179, 180, 181, 182, 184, 185, 186, 187, 189, 191, 192, 193, 195, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 221, 222, 228, 229, 231, 234, 237, 238, 241, 242, 243, 244, 245, 246, 247, 250, 253, 259, 261, 263, 270, 271, 272], "ert": 0, "k": [0, 2, 7, 15, 18, 25, 31, 32, 33, 34, 35, 37, 41, 42, 45, 46, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 69, 76, 78, 81, 82, 84, 87, 91, 109, 118, 124, 126, 127, 129, 136, 150, 151, 154, 158, 160, 162, 171, 177, 181, 183, 185, 186, 188, 189, 190, 191, 192, 193, 196, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 214, 216, 217, 218, 220, 221, 222, 223, 227, 231, 234, 241, 242, 243, 244, 245, 246, 247, 249, 250, 270, 271], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 1, 2, 7, 8, 13, 18, 25, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 74, 76, 78, 80, 81, 82, 83, 84, 87, 91, 93, 94, 95, 97, 99, 101, 106, 107, 109, 110, 111, 114, 117, 118, 126, 127, 129, 131, 134, 139, 141, 143, 145, 150, 151, 154, 159, 160, 161, 162, 172, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 196, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 227, 230, 231, 234, 237, 241, 242, 243, 244, 245, 246, 261, 263, 267, 271, 272], "matthew": 0, "amit": [0, 215], "sergiu": 0, "jason": [0, 196], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 148], "e": [0, 1, 2, 7, 8, 9, 11, 12, 13, 14, 15, 18, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 87, 91, 93, 94, 95, 97, 101, 102, 106, 109, 111, 113, 114, 125, 126, 129, 130, 131, 134, 141, 142, 146, 151, 152, 154, 157, 159, 161, 162, 167, 168, 172, 176, 177, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 241, 244, 247, 249, 250, 260, 261, 265, 266, 271], "richard": [0, 91], "francesco": 0, "harsh": [0, 215], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 1, 2, 15, 25, 29, 31, 33, 34, 37, 41, 42, 43, 47, 49, 50, 52, 53, 55, 56, 59, 73, 76, 78, 80, 82, 84, 87, 91, 99, 102, 127, 128, 129, 134, 141, 142, 159, 162, 167, 171, 177, 181, 183, 185, 187, 189, 190, 191, 192, 193, 195, 196, 198, 204, 206, 208, 209, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 228, 234, 241, 242, 243, 244, 245, 246, 247, 249, 250], "andi": [0, 128], "rou": 0, "ka": 0, "n": [0, 2, 5, 7, 13, 14, 15, 18, 24, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 47, 49, 50, 52, 53, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 94, 95, 101, 103, 104, 106, 109, 111, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 138, 142, 147, 148, 151, 156, 158, 159, 160, 162, 163, 165, 167, 169, 171, 172, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 214, 215, 216, 219, 221, 222, 225, 228, 234, 236, 237, 241, 242, 243, 244, 245, 249, 261, 267, 270, 271, 272], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 216], "anthoni": 0, "year": [0, 1, 12, 14], "month": 0, "jan": [0, 52], "keyword": [0, 12, 14, 18, 32, 33, 34, 42, 43, 51, 52, 55, 56, 64, 66, 67, 68, 82, 87, 91, 94, 99, 101, 109, 124, 125, 156, 162, 176, 182, 184, 186, 187, 189, 191, 192, 195, 196, 197, 203, 208, 209, 214, 221, 227, 228, 230, 232, 235, 237, 245, 267], "algebra": [0, 2, 7, 15, 19, 22, 28, 34, 42, 51, 52, 55, 57, 69, 72, 73, 74, 76, 78, 81, 82, 86, 88, 91, 92, 93, 113, 123, 129, 130, 178, 181, 184, 185, 187, 188, 189, 190, 192, 193, 196, 198, 206, 209, 210, 212, 215, 251, 252, 255, 257, 258, 262, 263, 265, 267], "system": [0, 1, 2, 4, 5, 8, 9, 10, 11, 13, 15, 18, 19, 21, 22, 26, 28, 42, 51, 52, 53, 57, 76, 79, 80, 81, 82, 87, 92, 93, 94, 98, 100, 101, 105, 109, 110, 111, 113, 114, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 129, 140, 141, 156, 159, 160, 162, 165, 169, 172, 175, 176, 177, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 194, 195, 196, 204, 205, 210, 211, 215, 216, 227, 228, 241, 242, 243, 246, 248, 250, 257, 263, 265, 267, 271, 272], "abstract": [0, 1, 31, 32, 40, 51, 53, 57, 59, 64, 69, 84, 108, 114, 146, 148, 157, 160, 161, 162, 183, 188, 191, 215, 216, 218, 222, 229, 249, 253], "an": [0, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 105, 106, 108, 109, 111, 113, 116, 117, 123, 124, 126, 127, 129, 130, 133, 134, 135, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 155, 156, 157, 159, 160, 162, 163, 164, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 241, 242, 244, 245, 247, 248, 249, 250, 258, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272], "open": [0, 1, 9, 11, 12, 14, 15, 17, 20, 31, 51, 53, 57, 78, 81, 101, 114, 129, 196, 204, 211, 215, 216, 238, 265, 267], "sourc": [0, 9, 13, 14, 15, 18, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 172, 173, 174, 175, 176, 177, 181, 182, 183, 185, 186, 187, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 247, 259, 265], "written": [0, 7, 11, 14, 15, 18, 19, 29, 33, 39, 42, 43, 47, 51, 56, 59, 63, 69, 74, 76, 80, 81, 90, 91, 117, 123, 129, 162, 177, 178, 179, 180, 183, 184, 192, 196, 199, 203, 206, 209, 212, 229, 247, 249, 264, 265, 266, 271], "pure": [0, 11, 19, 25, 52, 57, 78, 81, 84, 101, 126, 167, 186, 187, 189, 192, 196, 216, 234], "It": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 25, 26, 27, 28, 31, 32, 33, 39, 42, 43, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 67, 68, 74, 76, 78, 80, 81, 87, 91, 92, 93, 94, 95, 97, 99, 101, 103, 105, 106, 107, 108, 109, 114, 116, 121, 123, 124, 125, 127, 129, 131, 135, 136, 146, 151, 152, 157, 158, 159, 160, 161, 162, 164, 167, 170, 172, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 199, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 227, 228, 229, 230, 231, 232, 235, 241, 243, 244, 245, 247, 249, 250, 260, 261, 263, 264, 265, 266, 267, 269, 270, 271], "built": [0, 2, 4, 9, 11, 14, 15, 26, 28, 34, 51, 57, 78, 114, 129, 184, 187, 196, 197, 201, 212, 215, 216, 222, 231, 234, 235, 265, 266, 270], "focu": [0, 1, 7, 61, 214, 265], "extens": [0, 7, 11, 14, 15, 18, 19, 42, 51, 57, 63, 67, 78, 87, 111, 129, 184, 186, 187, 188, 189, 190, 191, 192, 196, 206, 208, 212, 214, 215, 228, 229, 238, 264, 271], "eas": [0, 114, 180, 182, 196, 199], "through": [0, 2, 7, 12, 14, 18, 20, 31, 33, 42, 43, 45, 50, 51, 52, 55, 56, 59, 61, 62, 63, 64, 65, 67, 76, 80, 81, 87, 91, 94, 95, 99, 106, 109, 114, 116, 123, 127, 133, 134, 172, 182, 183, 189, 191, 196, 202, 206, 208, 212, 214, 215, 216, 217, 228, 234, 241, 242, 247, 250, 262, 263, 264, 269], "both": [0, 1, 2, 4, 7, 8, 11, 12, 14, 15, 18, 19, 24, 25, 31, 32, 33, 43, 46, 47, 49, 50, 51, 52, 56, 57, 59, 66, 75, 76, 78, 81, 82, 87, 91, 93, 94, 95, 101, 106, 108, 109, 116, 117, 118, 126, 134, 135, 146, 152, 159, 162, 167, 172, 175, 179, 180, 182, 183, 184, 186, 187, 189, 191, 192, 194, 195, 196, 198, 203, 204, 205, 206, 208, 209, 212, 214, 215, 217, 221, 227, 229, 234, 235, 241, 242, 261, 264, 265, 266, 271, 272], "interact": [0, 19, 24, 51, 65, 78, 85, 87, 129, 159, 176, 180, 186, 187, 208, 216, 232, 239, 251, 258, 259, 263, 265, 266, 270, 271], "programmat": [0, 4, 215, 245], "applic": [0, 1, 15, 19, 34, 35, 41, 42, 43, 44, 51, 52, 57, 78, 82, 87, 91, 94, 97, 109, 113, 114, 123, 126, 128, 129, 146, 147, 172, 175, 179, 184, 189, 190, 191, 192, 196, 198, 203, 209, 212, 215, 229, 234, 241, 247, 248, 265], "These": [0, 1, 2, 5, 7, 8, 11, 14, 15, 18, 23, 24, 32, 33, 42, 50, 51, 52, 53, 59, 76, 78, 81, 87, 93, 95, 101, 109, 110, 116, 117, 121, 126, 129, 152, 157, 158, 172, 173, 177, 179, 180, 183, 184, 185, 186, 187, 189, 196, 206, 209, 212, 213, 215, 216, 218, 223, 227, 228, 229, 234, 247, 261, 264, 267, 270, 271], "characterist": [0, 53, 69, 87, 179, 185, 187, 189, 190, 212, 214, 267], "have": [0, 2, 4, 5, 7, 8, 9, 12, 13, 14, 15, 18, 20, 25, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 66, 67, 69, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 99, 101, 102, 104, 105, 109, 111, 114, 115, 116, 121, 123, 126, 129, 146, 148, 151, 155, 157, 159, 160, 161, 162, 164, 165, 166, 167, 170, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 217, 220, 222, 223, 225, 226, 227, 229, 230, 231, 234, 235, 237, 241, 242, 244, 245, 246, 247, 250, 260, 261, 263, 264, 265, 266, 267, 270, 271, 272], "led": 0, "becom": [0, 1, 2, 5, 7, 12, 14, 15, 19, 42, 47, 50, 51, 52, 55, 74, 79, 87, 93, 176, 179, 183, 184, 186, 193, 196, 199, 205, 212, 215, 216, 222, 237, 243, 245, 271], "popular": [0, 11, 52, 92, 129, 265], "librari": [0, 1, 7, 11, 12, 14, 18, 19, 20, 23, 33, 51, 52, 56, 76, 78, 79, 87, 92, 105, 114, 129, 182, 186, 187, 216, 227, 228, 229, 234, 235, 260, 263, 264, 265], "scientif": [0, 20, 51, 129], "ecosystem": 0, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 148, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272], "paper": [0, 14, 91, 116, 180, 191, 192, 205, 206, 209, 212, 216], "present": [0, 1, 2, 5, 11, 15, 31, 32, 35, 38, 42, 43, 45, 49, 51, 54, 78, 87, 91, 94, 97, 99, 101, 109, 116, 162, 164, 172, 174, 176, 177, 182, 183, 189, 190, 191, 195, 196, 209, 215, 229, 235, 238, 243, 244, 245, 249, 272], "architectur": [0, 129, 186, 227], "descript": [0, 1, 12, 14, 15, 22, 23, 32, 34, 41, 59, 78, 91, 134, 152, 159, 170, 179, 180, 181, 196, 220, 227, 229, 231, 232, 251, 268], "its": [0, 1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 19, 25, 27, 28, 29, 32, 33, 34, 35, 39, 41, 42, 43, 50, 51, 52, 53, 56, 57, 59, 61, 63, 67, 69, 76, 78, 79, 81, 82, 84, 87, 91, 93, 94, 95, 97, 101, 105, 106, 109, 111, 114, 116, 117, 123, 126, 127, 129, 130, 135, 141, 147, 148, 150, 151, 156, 157, 160, 162, 167, 169, 172, 173, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 208, 211, 212, 214, 215, 216, 220, 221, 222, 227, 230, 231, 234, 235, 238, 241, 243, 244, 245, 247, 250, 265, 266, 267, 270, 271], "featur": [0, 1, 2, 3, 11, 12, 15, 18, 19, 20, 23, 51, 53, 55, 82, 93, 114, 123, 129, 178, 196, 212, 216, 225, 229, 232, 248, 264, 265, 269, 271], "discuss": [0, 1, 2, 3, 5, 7, 8, 12, 14, 15, 16, 18, 21, 23, 34, 42, 52, 59, 91, 105, 109, 114, 123, 126, 127, 171, 178, 179, 180, 186, 222, 231, 251, 260, 262, 263, 265, 266, 268, 270, 271], "select": [0, 9, 33, 35, 42, 43, 50, 51, 52, 60, 65, 79, 81, 82, 91, 93, 107, 127, 167, 176, 186, 187, 189, 190, 192, 196, 205, 208, 214], "submodul": [0, 11, 12, 14, 33, 105, 183, 187, 189, 191], "The": [0, 2, 5, 6, 8, 9, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 133, 134, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 248, 249, 250, 257, 260, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272], "supplementari": 0, "materi": [0, 94, 133, 269], "provid": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 25, 31, 32, 33, 34, 40, 41, 42, 43, 49, 50, 51, 53, 55, 59, 60, 62, 67, 70, 73, 74, 78, 79, 81, 82, 84, 87, 88, 90, 91, 92, 93, 95, 97, 99, 105, 106, 109, 111, 113, 116, 117, 118, 123, 124, 125, 126, 127, 129, 130, 135, 136, 156, 164, 165, 166, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 199, 201, 204, 205, 206, 208, 212, 213, 214, 215, 216, 217, 221, 222, 227, 228, 229, 231, 232, 234, 235, 237, 241, 243, 244, 245, 247, 248, 250, 261, 265, 266, 267, 271], "addit": [0, 1, 2, 5, 11, 12, 15, 20, 21, 33, 41, 42, 43, 50, 51, 57, 59, 63, 69, 71, 75, 76, 78, 79, 81, 84, 87, 93, 98, 99, 101, 105, 106, 109, 126, 127, 130, 148, 160, 161, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 196, 202, 205, 206, 208, 209, 212, 213, 214, 215, 216, 227, 228, 229, 231, 232, 234, 235, 237, 244, 263, 265, 266, 267, 270, 271], "exampl": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 15, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 101, 103, 104, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 164, 166, 168, 169, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 197, 198, 199, 201, 202, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 219, 220, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 247, 248, 249, 250, 252, 256, 257, 258, 260, 261, 262, 263, 264, 266, 267, 269, 270, 272], "further": [0, 7, 11, 13, 18, 28, 32, 52, 59, 63, 76, 78, 83, 84, 87, 93, 94, 98, 99, 106, 108, 109, 123, 127, 134, 179, 181, 182, 183, 189, 191, 192, 205, 206, 208, 212, 216, 222, 264, 265], "outlin": [0, 7, 11, 12, 18, 49, 78, 183, 212], "detail": [0, 1, 3, 4, 7, 11, 12, 13, 14, 15, 16, 18, 23, 32, 42, 51, 53, 56, 58, 59, 76, 77, 78, 79, 82, 87, 91, 99, 108, 109, 114, 127, 129, 134, 152, 156, 172, 174, 181, 182, 183, 189, 191, 198, 203, 208, 209, 210, 212, 213, 216, 221, 222, 227, 230, 232, 233, 235, 245, 246, 247, 248, 251, 261, 263, 267, 268, 270], "volum": [0, 14, 33, 50, 59, 76, 181, 190, 206, 209, 212, 231, 241, 248], "page": [0, 1, 2, 7, 8, 9, 11, 12, 14, 15, 22, 23, 33, 34, 50, 56, 76, 91, 92, 109, 129, 167, 182, 185, 186, 187, 190, 196, 206, 209, 232, 249, 271], "journal": [0, 14, 50, 56, 91, 102, 190, 208, 231], "issn": 0, "2376": 0, "5992": 0, "url": [0, 52, 232], "bsd": [0, 9, 11, 19, 265], "licens": [0, 9, 11, 19, 265], "so": [0, 1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 42, 43, 45, 47, 49, 51, 52, 55, 57, 59, 61, 63, 64, 65, 67, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 94, 95, 101, 105, 109, 114, 116, 117, 123, 124, 126, 129, 130, 135, 146, 148, 156, 158, 159, 160, 162, 164, 166, 167, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 220, 221, 225, 227, 228, 231, 232, 234, 235, 237, 246, 250, 252, 260, 261, 263, 265, 266, 267, 270, 271, 272], "you": [0, 1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 22, 23, 24, 27, 28, 29, 31, 33, 34, 42, 43, 50, 51, 52, 53, 55, 57, 58, 59, 63, 65, 67, 69, 70, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 91, 92, 93, 101, 103, 104, 105, 109, 110, 111, 114, 115, 124, 126, 127, 129, 151, 156, 157, 160, 162, 171, 172, 174, 177, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 197, 199, 203, 204, 208, 209, 212, 213, 214, 215, 216, 220, 221, 222, 225, 227, 228, 229, 230, 232, 234, 235, 238, 244, 245, 246, 247, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272], "free": [0, 1, 19, 20, 31, 32, 33, 38, 41, 42, 47, 51, 63, 78, 82, 84, 87, 91, 94, 95, 99, 102, 123, 131, 151, 169, 172, 178, 182, 183, 187, 188, 189, 191, 192, 196, 198, 204, 206, 208, 209, 212, 214, 215, 222, 234, 265], "whatev": [0, 1, 2, 18, 42, 51, 52, 208, 212, 213, 215, 235], "like": [0, 1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 23, 33, 34, 36, 42, 43, 50, 51, 52, 55, 56, 57, 59, 61, 71, 74, 78, 79, 81, 82, 84, 85, 86, 87, 91, 92, 93, 97, 101, 105, 111, 114, 116, 126, 127, 129, 130, 144, 146, 156, 157, 160, 161, 162, 167, 171, 172, 175, 177, 179, 182, 183, 184, 186, 187, 188, 189, 191, 192, 194, 195, 196, 199, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 220, 222, 223, 225, 227, 228, 229, 230, 234, 235, 237, 238, 244, 245, 247, 249, 260, 261, 263, 264, 265, 266, 267, 271], "academ": [0, 32, 35, 190], "commerci": [0, 265], "creat": [0, 7, 8, 11, 12, 13, 14, 15, 17, 21, 27, 32, 33, 34, 40, 42, 43, 51, 52, 53, 55, 57, 58, 59, 61, 63, 64, 66, 67, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 92, 93, 94, 97, 101, 106, 108, 109, 111, 114, 117, 118, 120, 122, 125, 126, 127, 129, 130, 139, 141, 143, 147, 150, 151, 152, 156, 157, 159, 160, 162, 165, 168, 171, 172, 174, 175, 179, 180, 182, 183, 185, 186, 187, 189, 191, 192, 193, 196, 203, 208, 212, 215, 216, 217, 221, 222, 227, 228, 229, 231, 232, 234, 235, 241, 245, 247, 261, 263, 266, 267, 270, 271, 272], "fork": [0, 1, 13, 15, 116], "deriv": [0, 1, 3, 6, 14, 18, 31, 32, 33, 35, 41, 42, 53, 57, 58, 59, 61, 68, 73, 74, 76, 78, 79, 81, 84, 87, 101, 105, 107, 108, 109, 113, 116, 117, 118, 120, 123, 124, 125, 126, 127, 151, 160, 164, 167, 168, 171, 172, 174, 175, 176, 177, 179, 182, 183, 184, 187, 189, 191, 192, 193, 196, 198, 206, 208, 212, 213, 214, 218, 219, 223, 229, 241, 243, 244, 262, 265, 272], "long": [0, 14, 15, 16, 33, 43, 50, 51, 52, 54, 64, 76, 78, 79, 81, 87, 91, 94, 95, 116, 176, 192, 193, 196, 205, 206, 214, 216, 228, 237, 243, 263, 266], "copi": [0, 1, 2, 7, 9, 13, 34, 43, 44, 51, 67, 87, 91, 92, 185, 187, 189, 191, 195, 196, 203, 214, 227, 234, 237, 270], "statement": [0, 7, 8, 14, 18, 20, 32, 33, 51, 59, 76, 81, 84, 114, 141, 196, 216, 225, 229, 234], "redistribut": [0, 192], "see": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 15, 18, 21, 26, 27, 28, 29, 31, 32, 33, 37, 39, 42, 43, 44, 47, 50, 52, 53, 56, 57, 58, 59, 63, 67, 68, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 92, 93, 99, 105, 108, 109, 119, 121, 124, 126, 127, 131, 134, 137, 138, 147, 151, 152, 156, 157, 158, 159, 161, 162, 165, 167, 172, 176, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 198, 199, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 241, 242, 250, 260, 261, 263, 265, 266, 267, 269, 270, 271, 272], "file": [0, 2, 9, 11, 12, 13, 14, 15, 33, 87, 114, 129, 151, 196, 203, 206, 208, 225, 227, 228, 229, 235, 238], "That": [0, 2, 7, 8, 12, 15, 18, 51, 52, 57, 81, 87, 123, 159, 164, 170, 179, 180, 183, 184, 186, 187, 189, 191, 202, 203, 212, 214, 216, 228, 229, 235, 260, 263, 266, 271], "said": [0, 12, 25, 29, 33, 37, 91, 167, 177, 179, 180, 184, 212, 215, 216, 241, 247], "although": [0, 2, 4, 5, 7, 11, 12, 14, 15, 18, 43, 51, 52, 57, 63, 75, 76, 79, 81, 82, 84, 87, 91, 94, 105, 116, 129, 183, 186, 187, 189, 191, 192, 204, 205, 208, 209, 214, 228, 234, 235, 263, 266, 271], "requir": [0, 1, 2, 11, 14, 15, 16, 18, 20, 21, 33, 42, 51, 52, 54, 55, 59, 61, 62, 64, 65, 68, 70, 81, 87, 90, 91, 92, 93, 94, 99, 105, 106, 109, 111, 113, 114, 116, 117, 127, 136, 159, 171, 172, 174, 182, 183, 186, 187, 189, 191, 193, 196, 199, 205, 206, 209, 212, 214, 215, 216, 220, 227, 228, 229, 230, 232, 234, 235, 243, 244, 245, 267, 269], "conveni": [0, 1, 2, 9, 24, 31, 33, 43, 51, 52, 56, 59, 78, 81, 93, 114, 129, 171, 174, 179, 180, 182, 183, 184, 185, 186, 187, 191, 194, 203, 204, 208, 214, 220, 221, 228, 230, 231, 235, 247, 261, 263], "pleas": [0, 1, 12, 14, 15, 17, 20, 29, 31, 51, 59, 63, 76, 91, 105, 109, 114, 123, 126, 127, 134, 135, 156, 171, 180, 181, 182, 183, 189, 190, 204, 208, 209, 214, 215, 235, 241, 245, 268, 272], "when": [0, 1, 2, 4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 20, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 42, 43, 44, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 75, 77, 78, 79, 81, 82, 83, 87, 91, 92, 93, 99, 101, 102, 105, 108, 114, 116, 121, 123, 124, 125, 126, 127, 130, 135, 136, 141, 146, 147, 151, 154, 156, 164, 165, 166, 171, 176, 179, 180, 182, 183, 184, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 220, 221, 225, 227, 228, 229, 230, 232, 234, 235, 237, 238, 240, 244, 261, 263, 265, 266, 271, 272], "your": [0, 1, 2, 9, 11, 12, 13, 14, 15, 17, 18, 20, 22, 27, 51, 52, 78, 79, 87, 92, 93, 101, 105, 124, 126, 180, 182, 196, 203, 208, 212, 215, 216, 234, 235, 261, 265, 267, 268, 270, 271], "work": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 18, 20, 26, 28, 31, 32, 33, 42, 43, 44, 51, 52, 55, 59, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 105, 114, 116, 127, 129, 142, 146, 151, 155, 156, 157, 158, 161, 164, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 196, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 222, 227, 228, 229, 231, 234, 235, 236, 237, 244, 245, 258, 263, 264, 265, 266, 267, 270, 271], "also": [0, 1, 2, 5, 7, 8, 9, 11, 12, 15, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 40, 42, 43, 50, 52, 53, 55, 56, 57, 58, 59, 63, 67, 69, 71, 73, 74, 76, 78, 80, 81, 82, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 101, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 121, 124, 125, 126, 127, 129, 130, 131, 135, 145, 146, 148, 152, 156, 161, 162, 165, 167, 171, 172, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 260, 261, 263, 265, 266, 267, 270, 271, 272], "consid": [0, 1, 2, 4, 7, 8, 12, 15, 18, 29, 32, 33, 40, 43, 46, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 67, 75, 76, 78, 79, 80, 81, 82, 84, 87, 91, 101, 105, 106, 111, 115, 124, 130, 152, 159, 162, 167, 173, 176, 177, 179, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 199, 203, 208, 209, 212, 213, 214, 215, 216, 227, 229, 234, 243, 245, 247, 249, 250, 263, 267, 271], "contribut": [0, 11, 12, 13, 14, 15, 20, 21, 67, 91, 109, 118, 121, 186, 188, 189, 191, 212, 250], "all": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 106, 107, 108, 109, 111, 113, 114, 116, 118, 123, 124, 126, 129, 130, 136, 141, 142, 146, 156, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 225, 227, 228, 229, 230, 232, 234, 235, 237, 241, 242, 244, 246, 247, 248, 249, 251, 260, 261, 263, 265, 266, 267, 270, 271, 272], "chang": [0, 1, 2, 7, 9, 14, 15, 16, 20, 32, 33, 34, 42, 43, 47, 50, 51, 52, 55, 57, 59, 65, 66, 76, 78, 81, 87, 91, 93, 94, 97, 101, 111, 114, 116, 120, 136, 147, 157, 167, 168, 171, 177, 179, 180, 181, 182, 183, 184, 185, 189, 192, 193, 196, 203, 204, 205, 206, 208, 212, 214, 215, 216, 217, 227, 234, 235, 245, 247, 260, 263, 266, 270], "back": [0, 18, 32, 33, 47, 50, 51, 52, 57, 59, 66, 67, 73, 75, 76, 78, 79, 82, 91, 92, 101, 156, 176, 179, 186, 188, 191, 192, 194, 196, 206, 212, 214, 217, 218], "we": [0, 1, 2, 5, 7, 8, 11, 12, 13, 14, 15, 18, 22, 26, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 64, 69, 74, 75, 76, 78, 79, 80, 81, 82, 87, 88, 90, 91, 101, 104, 105, 106, 107, 109, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 134, 137, 145, 148, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 167, 171, 172, 174, 175, 177, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 216, 220, 222, 227, 228, 229, 231, 232, 234, 235, 241, 244, 245, 246, 247, 249, 250, 260, 261, 263, 265, 266, 267, 270, 271, 272], "can": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 121, 123, 124, 125, 126, 127, 129, 130, 134, 135, 136, 141, 143, 146, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 234, 235, 237, 243, 244, 245, 246, 247, 249, 250, 260, 261, 263, 265, 266, 267, 269, 270, 271, 272], "incorpor": [0, 5, 11, 184, 208], "benefit": [0, 11, 18, 33, 105, 126, 176], "end": [0, 1, 2, 5, 7, 8, 11, 14, 18, 22, 31, 32, 33, 41, 42, 47, 49, 50, 51, 52, 56, 57, 59, 61, 63, 67, 76, 79, 81, 82, 84, 87, 91, 93, 94, 95, 97, 113, 116, 117, 120, 124, 125, 126, 127, 167, 172, 176, 177, 180, 181, 185, 189, 196, 199, 202, 204, 205, 207, 209, 212, 213, 214, 215, 216, 217, 227, 229, 230, 232, 234, 237, 247, 261, 265, 267, 271], "develop": [0, 5, 7, 12, 14, 15, 16, 17, 18, 20, 21, 23, 31, 34, 49, 93, 129, 166, 182, 183, 186, 189, 214, 215, 265, 268], "team": [0, 12], "member": [0, 1, 7, 14, 32, 40, 42, 52, 74, 97, 183, 204, 221], "list": [0, 3, 7, 11, 12, 14, 15, 20, 25, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 101, 106, 108, 109, 113, 116, 117, 120, 124, 125, 129, 130, 135, 146, 148, 151, 152, 156, 157, 159, 160, 162, 164, 172, 175, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 260, 264, 265, 267, 270, 271, 272], "github": [0, 1, 9, 11, 12, 13, 15, 20, 31, 51, 67, 78, 87, 166, 204, 215, 267], "found": [0, 7, 8, 9, 11, 12, 14, 15, 31, 34, 42, 43, 45, 47, 49, 51, 52, 53, 61, 62, 67, 76, 78, 87, 91, 101, 107, 108, 109, 110, 126, 129, 166, 179, 183, 184, 185, 186, 191, 192, 193, 196, 198, 199, 202, 203, 206, 209, 212, 213, 214, 215, 216, 220, 234, 235, 237, 238, 270], "zotero": 0, "codebas": [1, 7, 12, 186, 225], "polici": [1, 15, 16, 21, 230, 232], "well": [1, 2, 5, 7, 12, 14, 15, 18, 20, 29, 31, 32, 33, 34, 35, 43, 50, 51, 56, 57, 59, 78, 82, 85, 87, 102, 105, 114, 116, 117, 118, 126, 152, 161, 164, 165, 171, 179, 181, 182, 183, 185, 186, 187, 189, 191, 196, 203, 204, 205, 206, 208, 212, 214, 215, 227, 228, 244, 245, 249, 263, 265, 266, 271], "instruct": [1, 2, 5, 9, 11, 13, 14, 15, 17, 23, 33, 196, 214, 228, 229], "contributor": [1, 9, 11, 15, 18], "how": [1, 2, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 22, 32, 33, 42, 43, 50, 51, 58, 59, 63, 74, 77, 78, 81, 82, 84, 87, 91, 93, 105, 109, 114, 115, 120, 124, 125, 127, 129, 133, 134, 150, 154, 157, 158, 159, 164, 165, 172, 179, 182, 183, 186, 187, 189, 191, 195, 196, 199, 203, 204, 206, 208, 209, 210, 212, 213, 216, 222, 227, 228, 229, 230, 232, 234, 235, 245, 261, 263, 265, 266, 267, 268, 270, 271], "thing": [1, 2, 7, 8, 11, 12, 14, 15, 18, 29, 33, 41, 42, 43, 51, 53, 63, 79, 80, 81, 82, 87, 92, 105, 111, 114, 126, 129, 146, 162, 167, 179, 180, 193, 195, 203, 204, 205, 208, 212, 215, 220, 230, 232, 234, 260, 261, 263, 265, 266, 267, 270, 271], "In": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 50, 51, 52, 53, 55, 56, 57, 59, 64, 66, 67, 68, 69, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 95, 97, 101, 105, 108, 109, 114, 117, 118, 123, 124, 125, 126, 127, 129, 130, 148, 150, 151, 152, 157, 161, 162, 165, 167, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 220, 222, 225, 227, 229, 231, 232, 234, 235, 238, 241, 244, 245, 247, 249, 260, 263, 264, 265, 266, 267, 270, 271, 272], "particular": [1, 2, 7, 8, 12, 14, 22, 29, 34, 42, 51, 52, 55, 59, 62, 76, 78, 81, 84, 87, 91, 94, 97, 123, 146, 157, 184, 185, 186, 187, 189, 191, 192, 202, 204, 206, 208, 209, 212, 214, 215, 227, 229, 231, 267, 269, 271], "last": [1, 2, 4, 5, 7, 8, 15, 16, 18, 26, 27, 28, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 55, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 101, 113, 134, 167, 181, 182, 183, 184, 186, 187, 189, 192, 195, 196, 203, 204, 209, 212, 214, 215, 216, 217, 222, 225, 227, 228, 229, 230, 232, 234, 235, 237, 261, 263, 266, 267], "least": [1, 7, 11, 12, 15, 29, 31, 33, 42, 51, 57, 63, 75, 76, 78, 87, 91, 92, 109, 142, 156, 164, 183, 184, 186, 187, 189, 191, 192, 203, 205, 208, 212, 214, 215, 216, 229, 271], "after": [1, 2, 9, 12, 13, 14, 15, 20, 25, 27, 28, 32, 34, 39, 42, 43, 47, 49, 50, 51, 52, 53, 57, 66, 68, 73, 78, 82, 87, 91, 93, 94, 101, 124, 126, 129, 131, 135, 147, 159, 167, 171, 177, 180, 185, 189, 191, 192, 193, 194, 196, 197, 202, 209, 212, 213, 214, 215, 217, 227, 230, 235, 237, 241, 243, 247, 260, 261, 263, 267, 271], "major": [1, 9, 11, 12, 15, 61, 105, 221, 265, 271], "releas": [1, 9, 15, 51, 78, 82, 93, 126, 182, 221, 232, 235, 266], "includ": [1, 2, 7, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 28, 29, 31, 32, 33, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 63, 69, 76, 78, 81, 82, 84, 86, 87, 91, 92, 93, 103, 105, 113, 114, 116, 117, 118, 123, 124, 126, 129, 142, 146, 151, 156, 159, 160, 170, 177, 180, 184, 187, 188, 189, 191, 192, 195, 196, 197, 202, 203, 204, 206, 208, 211, 212, 213, 214, 216, 219, 222, 225, 227, 229, 230, 231, 232, 234, 241, 242, 244, 249, 251, 261, 265, 266, 267, 271, 272], "period": [1, 12, 14, 31, 51, 52, 57, 76, 91, 126, 136, 158, 165, 191, 196, 199, 202, 211, 215, 216, 234], "mai": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 18, 20, 22, 24, 29, 31, 32, 33, 34, 42, 43, 44, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 76, 78, 79, 81, 82, 83, 87, 88, 90, 91, 93, 107, 109, 110, 114, 117, 123, 126, 148, 157, 162, 163, 164, 169, 172, 175, 177, 179, 182, 183, 184, 185, 189, 191, 196, 197, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 247, 249, 260, 261, 263, 266, 267, 271, 272], "remov": [1, 7, 12, 26, 27, 42, 45, 49, 51, 55, 57, 66, 67, 76, 81, 82, 87, 91, 94, 97, 106, 120, 122, 126, 146, 162, 187, 189, 192, 194, 195, 196, 208, 209, 212, 214, 215, 217, 218, 228, 229, 230, 232, 234, 235, 260, 271], "updat": [1, 2, 12, 20, 51, 117, 142, 152, 155, 156, 158, 181, 189, 192, 196, 209, 222, 232], "replac": [1, 2, 7, 12, 14, 31, 33, 42, 50, 51, 52, 55, 56, 57, 59, 61, 65, 78, 81, 82, 87, 91, 92, 93, 105, 107, 129, 151, 157, 172, 183, 189, 192, 193, 197, 203, 205, 206, 208, 212, 214, 215, 222, 223, 234, 235, 237, 260, 269], "continu": [1, 5, 8, 12, 14, 15, 18, 31, 33, 41, 43, 45, 51, 56, 57, 59, 76, 79, 82, 91, 98, 99, 157, 160, 176, 187, 189, 192, 209, 211, 212, 220, 262], "dure": [1, 2, 12, 24, 33, 51, 52, 82, 87, 91, 93, 106, 109, 129, 130, 179, 191, 205, 214, 215, 232, 234], "sympydeprecationwarn": [1, 12, 225, 227, 230, 232], "messag": [1, 12, 52, 79, 230, 232], "whenev": [1, 2, 11, 12, 18, 49, 76, 78, 87, 169, 182, 183, 184, 198, 203, 206, 216, 261, 263, 266], "recommend": [1, 2, 7, 9, 13, 14, 18, 20, 22, 32, 33, 51, 52, 55, 82, 105, 124, 129, 156, 172, 179, 184, 185, 186, 187, 193, 209, 212, 215, 221, 225, 232, 244, 245, 269, 272], "doe": [1, 4, 7, 8, 11, 14, 15, 16, 18, 20, 23, 24, 27, 28, 31, 32, 33, 34, 42, 43, 47, 49, 50, 51, 52, 53, 55, 57, 59, 61, 62, 64, 65, 67, 76, 78, 81, 82, 87, 90, 91, 93, 103, 105, 107, 114, 116, 120, 142, 146, 152, 156, 158, 161, 171, 179, 180, 182, 184, 185, 186, 187, 189, 191, 192, 193, 196, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 221, 222, 225, 227, 229, 231, 234, 235, 237, 241, 242, 245, 260, 261, 263, 266, 267, 270, 271, 272], "describ": [1, 2, 7, 8, 12, 14, 15, 18, 32, 34, 41, 42, 43, 45, 46, 49, 50, 51, 52, 56, 59, 61, 66, 67, 76, 78, 82, 87, 90, 91, 101, 105, 109, 111, 113, 114, 117, 118, 120, 122, 123, 124, 125, 126, 127, 141, 162, 166, 167, 171, 172, 177, 179, 180, 183, 186, 189, 191, 197, 203, 206, 208, 209, 212, 215, 216, 220, 229, 234, 235, 241, 242, 247, 261], "below": [1, 2, 7, 9, 11, 12, 14, 15, 18, 20, 31, 32, 33, 41, 42, 43, 51, 52, 56, 58, 59, 60, 61, 67, 68, 74, 76, 78, 82, 87, 90, 91, 93, 94, 95, 101, 106, 109, 113, 114, 116, 117, 118, 119, 124, 125, 126, 129, 156, 162, 167, 172, 180, 181, 182, 183, 185, 192, 196, 197, 199, 205, 208, 209, 212, 213, 215, 216, 227, 229, 234, 235, 237, 245, 247, 250, 251, 267, 271], "each": [1, 2, 7, 9, 11, 12, 18, 28, 29, 31, 32, 33, 34, 35, 42, 43, 47, 51, 52, 53, 54, 55, 56, 57, 59, 61, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 94, 99, 101, 107, 108, 109, 114, 116, 117, 120, 122, 124, 127, 146, 159, 162, 171, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 194, 196, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 227, 229, 231, 234, 235, 237, 241, 242, 243, 245, 247, 249, 261, 264, 266, 271, 272], "given": [1, 2, 5, 7, 9, 11, 12, 15, 18, 25, 27, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 78, 80, 81, 82, 84, 87, 90, 91, 93, 94, 97, 99, 102, 106, 107, 111, 113, 114, 117, 127, 135, 152, 157, 159, 167, 168, 170, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 221, 222, 225, 227, 229, 231, 234, 235, 237, 238, 239, 241, 243, 245, 247, 249, 260, 266, 269, 271, 272], "add": [1, 2, 4, 7, 11, 12, 13, 14, 25, 27, 31, 33, 40, 42, 47, 52, 55, 58, 66, 68, 76, 80, 84, 87, 91, 94, 97, 106, 114, 129, 140, 146, 156, 161, 162, 165, 179, 180, 182, 185, 186, 187, 189, 191, 192, 193, 196, 197, 206, 208, 209, 212, 213, 215, 216, 218, 220, 221, 222, 230, 235, 239, 252, 261, 263, 266, 270, 271], "filter": [1, 4, 12, 51, 52, 76, 134, 192, 225, 227, 232, 234], "modul": [1, 2, 4, 7, 11, 12, 13, 14, 15, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 41, 43, 51, 52, 54, 56, 57, 59, 63, 67, 71, 74, 77, 78, 79, 81, 84, 85, 86, 87, 92, 93, 94, 96, 97, 99, 102, 105, 114, 115, 119, 123, 124, 125, 129, 131, 134, 136, 137, 149, 152, 165, 166, 167, 168, 177, 180, 182, 187, 188, 190, 193, 194, 196, 200, 203, 206, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 243, 245, 247, 248, 249, 250, 251, 257, 259, 260, 263, 265, 271, 272], "For": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 65, 66, 69, 72, 74, 75, 76, 77, 80, 81, 82, 87, 91, 92, 93, 94, 95, 101, 103, 107, 109, 110, 114, 117, 123, 124, 125, 126, 127, 129, 131, 145, 146, 151, 155, 157, 159, 160, 161, 162, 164, 167, 168, 172, 175, 176, 177, 179, 180, 182, 183, 184, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 217, 220, 221, 222, 223, 227, 228, 229, 231, 232, 234, 235, 238, 239, 241, 242, 245, 247, 249, 250, 260, 261, 263, 266, 267, 271, 272], "except": [1, 2, 5, 7, 8, 11, 12, 14, 18, 31, 33, 42, 43, 51, 52, 55, 57, 59, 76, 78, 86, 91, 108, 121, 168, 181, 183, 186, 187, 188, 191, 192, 193, 194, 196, 205, 208, 209, 212, 213, 215, 220, 225, 227, 229, 230, 233, 234, 235, 244, 247, 259, 260, 263, 266, 267], "filterwarn": [1, 12], "ignor": [1, 2, 18, 33, 42, 51, 52, 56, 57, 61, 66, 76, 81, 87, 91, 101, 107, 116, 159, 162, 172, 182, 192, 196, 197, 208, 214, 228, 271], "error": [1, 7, 8, 9, 11, 12, 14, 15, 24, 31, 33, 40, 43, 50, 51, 52, 57, 58, 61, 66, 76, 78, 87, 90, 91, 93, 114, 180, 181, 184, 186, 187, 189, 193, 196, 198, 204, 212, 213, 214, 215, 216, 227, 228, 229, 232, 234, 237, 241, 252, 260], "make": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 24, 27, 28, 29, 31, 33, 34, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 67, 78, 79, 81, 87, 90, 91, 92, 93, 94, 95, 97, 109, 113, 114, 116, 120, 121, 124, 126, 127, 129, 142, 159, 164, 176, 179, 182, 185, 186, 187, 189, 191, 192, 193, 195, 196, 199, 204, 205, 206, 208, 212, 213, 214, 215, 220, 222, 225, 227, 228, 229, 230, 232, 234, 235, 244, 249, 250, 263, 264, 265, 266, 267, 271], "rais": [1, 2, 7, 8, 12, 18, 26, 28, 31, 33, 40, 43, 51, 52, 53, 55, 57, 60, 61, 64, 66, 67, 68, 76, 78, 82, 84, 87, 88, 90, 91, 99, 101, 136, 148, 177, 180, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 198, 204, 208, 211, 212, 213, 214, 215, 216, 220, 222, 225, 227, 229, 232, 234, 235, 237, 238, 247, 267], "want": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 18, 20, 29, 31, 33, 34, 35, 43, 51, 52, 58, 63, 65, 67, 70, 76, 78, 82, 84, 87, 88, 91, 92, 99, 101, 104, 110, 114, 129, 145, 155, 156, 159, 162, 165, 167, 174, 175, 179, 180, 182, 184, 185, 186, 189, 191, 192, 193, 195, 196, 197, 203, 204, 206, 208, 209, 212, 213, 214, 215, 216, 222, 225, 227, 229, 231, 234, 235, 245, 247, 250, 260, 261, 263, 265, 266, 267, 268, 270, 271], "aren": [1, 12, 18, 33, 51, 114, 195, 215], "omit": [1, 7, 14, 18, 33, 43, 50, 51, 52, 76, 78, 81, 87, 164, 196, 197, 204, 206, 214, 220, 229, 234, 261], "regex": 1, "match": [1, 2, 7, 11, 12, 14, 18, 42, 43, 50, 51, 64, 76, 78, 82, 87, 113, 138, 163, 171, 172, 185, 192, 208, 209, 212, 213, 216, 225, 227, 229, 234, 235, 246, 261], "categori": [1, 23, 183, 251, 258], "here": [1, 5, 7, 8, 12, 14, 15, 18, 20, 27, 28, 33, 34, 35, 40, 41, 42, 43, 49, 50, 51, 52, 53, 55, 56, 57, 59, 67, 68, 69, 73, 74, 76, 78, 81, 82, 87, 90, 91, 92, 93, 94, 97, 101, 105, 109, 114, 115, 116, 120, 121, 122, 124, 126, 127, 129, 130, 152, 157, 162, 171, 176, 177, 179, 180, 182, 183, 186, 187, 189, 191, 192, 193, 196, 197, 203, 205, 206, 208, 209, 212, 214, 215, 216, 220, 221, 228, 229, 231, 232, 234, 235, 245, 247, 249, 260, 261, 263, 265, 266, 267, 269, 270, 271], "regular": [1, 2, 7, 8, 12, 34, 39, 51, 52, 55, 59, 67, 73, 74, 78, 91, 114, 156, 186, 193, 212, 222, 227, 270, 271], "about": [1, 2, 5, 7, 8, 12, 13, 14, 15, 18, 20, 25, 26, 28, 29, 32, 33, 42, 43, 44, 45, 51, 55, 57, 59, 61, 62, 63, 65, 66, 67, 71, 73, 77, 78, 80, 87, 91, 94, 95, 101, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 126, 127, 157, 159, 160, 162, 166, 171, 172, 179, 180, 181, 183, 185, 186, 191, 193, 196, 198, 203, 208, 209, 210, 212, 216, 220, 221, 227, 228, 229, 230, 231, 232, 241, 242, 244, 247, 248, 260, 262, 263, 265, 266, 267, 271], "might": [1, 2, 7, 8, 12, 14, 18, 31, 51, 55, 57, 64, 73, 76, 84, 87, 91, 93, 105, 114, 115, 129, 142, 172, 179, 182, 186, 187, 192, 193, 196, 197, 204, 205, 206, 208, 209, 214, 215, 216, 228, 229, 232, 234, 237, 260, 263, 265, 266, 268, 271], "lead": [1, 7, 8, 18, 50, 51, 57, 61, 78, 81, 87, 91, 103, 110, 146, 172, 180, 184, 187, 189, 191, 192, 193, 196, 203, 205, 208, 212, 215, 229, 232, 237, 264, 271], "becaus": [1, 2, 7, 8, 9, 11, 12, 14, 15, 18, 20, 24, 29, 33, 43, 50, 51, 52, 57, 63, 67, 68, 76, 78, 81, 85, 87, 91, 93, 114, 117, 142, 150, 162, 164, 167, 179, 182, 183, 185, 186, 187, 189, 191, 192, 193, 195, 196, 199, 203, 206, 208, 209, 212, 213, 214, 215, 225, 227, 228, 230, 234, 235, 237, 244, 261, 263, 265, 266, 267, 270, 271, 272], "against": [1, 7, 18, 52, 94, 114, 228], "start": [1, 2, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 32, 33, 35, 40, 41, 42, 43, 47, 50, 51, 52, 53, 59, 81, 82, 84, 87, 90, 91, 92, 94, 95, 97, 114, 116, 124, 125, 157, 158, 161, 165, 179, 180, 182, 186, 189, 191, 192, 196, 199, 202, 204, 205, 206, 209, 212, 214, 215, 216, 217, 220, 227, 228, 234, 236, 237, 246, 260, 263, 265], "typic": [1, 11, 12, 18, 47, 59, 76, 91, 101, 106, 111, 115, 171, 180, 182, 184, 189, 193, 206, 228, 229, 245], "span": [1, 14, 80, 87, 94, 95, 191, 196, 232, 267], "multipl": [1, 2, 7, 11, 12, 14, 18, 27, 28, 29, 31, 32, 33, 34, 40, 42, 43, 47, 50, 51, 52, 56, 57, 59, 61, 66, 69, 71, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 98, 101, 105, 116, 123, 129, 130, 146, 147, 148, 152, 159, 161, 164, 167, 168, 169, 172, 175, 179, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 196, 201, 202, 204, 205, 206, 208, 209, 212, 213, 215, 216, 217, 220, 222, 225, 229, 230, 231, 232, 234, 235, 237, 241, 245, 260, 261, 263, 264, 266, 267, 272], "line": [1, 2, 5, 7, 12, 14, 20, 32, 33, 42, 43, 47, 52, 61, 62, 63, 65, 66, 67, 68, 73, 76, 78, 79, 80, 87, 91, 94, 99, 102, 114, 116, 121, 142, 172, 176, 177, 179, 181, 182, 196, 199, 206, 208, 212, 216, 217, 225, 227, 228, 229, 232, 235, 237, 247, 250, 263], "should": [1, 2, 4, 7, 8, 9, 11, 13, 14, 15, 16, 18, 23, 24, 26, 28, 31, 32, 33, 34, 42, 43, 44, 45, 47, 50, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 91, 93, 94, 99, 101, 105, 114, 116, 117, 124, 126, 127, 129, 130, 131, 142, 146, 150, 152, 154, 156, 157, 160, 162, 164, 165, 167, 168, 172, 176, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 195, 196, 198, 199, 202, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 220, 221, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 241, 244, 252, 260, 261, 263, 264, 267], "don": [1, 2, 8, 12, 18, 28, 33, 76, 87, 92, 93, 105, 114, 171, 179, 180, 186, 196, 206, 215, 225, 230, 249, 260, 261, 265, 266, 271], "same": [1, 2, 5, 7, 8, 9, 12, 14, 15, 18, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 42, 43, 47, 50, 51, 52, 53, 56, 58, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 101, 102, 105, 106, 112, 114, 117, 120, 121, 126, 127, 146, 148, 156, 159, 160, 162, 164, 165, 167, 169, 170, 171, 172, 174, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 221, 222, 223, 225, 227, 229, 230, 231, 232, 234, 235, 237, 241, 242, 244, 245, 249, 261, 263, 266, 267, 270, 271], "unrel": [1, 51, 58, 184, 263], "pattern": [1, 2, 7, 11, 18, 51, 76, 78, 81, 82, 93, 156, 186, 206, 208, 212, 214, 261, 266], "instead": [1, 2, 7, 8, 9, 11, 12, 14, 15, 18, 24, 26, 28, 32, 33, 42, 44, 47, 51, 53, 54, 55, 56, 59, 78, 79, 81, 82, 84, 85, 87, 91, 99, 102, 104, 113, 114, 116, 117, 126, 129, 160, 164, 166, 172, 176, 177, 179, 180, 183, 186, 187, 189, 191, 192, 194, 196, 198, 206, 208, 212, 214, 215, 216, 220, 221, 222, 225, 230, 231, 232, 235, 239, 247, 250, 260, 261, 263, 265, 266, 267, 271, 272], "turn": [1, 7, 15, 33, 51, 57, 59, 66, 76, 85, 121, 124, 177, 183, 191, 193, 196, 203, 204, 206, 208, 209, 212, 227, 234, 249, 263, 265], "do": [1, 2, 5, 7, 8, 10, 11, 12, 14, 15, 18, 20, 23, 24, 27, 28, 29, 31, 32, 33, 34, 43, 47, 50, 51, 52, 53, 54, 57, 59, 61, 63, 66, 67, 70, 76, 78, 79, 81, 82, 84, 85, 87, 88, 91, 92, 98, 101, 105, 109, 111, 113, 114, 115, 117, 121, 124, 129, 134, 137, 142, 146, 151, 154, 156, 158, 164, 166, 167, 170, 171, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 199, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 218, 221, 222, 225, 227, 228, 230, 232, 234, 235, 237, 243, 245, 246, 247, 249, 260, 261, 263, 264, 265, 266, 267, 269, 271], "abov": [1, 2, 5, 8, 9, 11, 12, 14, 15, 18, 31, 32, 33, 34, 35, 41, 42, 43, 47, 50, 51, 55, 56, 59, 61, 64, 67, 68, 76, 78, 81, 82, 87, 91, 92, 93, 95, 101, 105, 109, 111, 113, 114, 116, 117, 118, 123, 125, 126, 127, 130, 157, 159, 162, 172, 177, 179, 180, 182, 183, 184, 186, 187, 189, 191, 192, 193, 195, 196, 197, 203, 206, 208, 209, 212, 214, 215, 216, 220, 221, 228, 229, 235, 244, 245, 246, 247, 250, 263, 265, 266, 267, 271], "appli": [1, 8, 15, 18, 21, 25, 26, 27, 28, 29, 33, 42, 43, 44, 49, 50, 51, 52, 53, 54, 57, 58, 61, 66, 67, 69, 77, 78, 81, 82, 83, 87, 91, 93, 94, 95, 97, 101, 102, 106, 107, 116, 118, 124, 126, 128, 139, 143, 146, 147, 151, 154, 155, 159, 162, 172, 180, 182, 184, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 207, 208, 212, 213, 214, 215, 216, 217, 220, 227, 230, 234, 241, 242, 245, 267, 270, 271], "If": [1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 40, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 94, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 124, 125, 126, 127, 129, 130, 135, 139, 143, 146, 152, 156, 157, 158, 159, 160, 162, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 241, 243, 245, 247, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "pytest": [1, 11, 12, 224, 230, 232, 235, 259], "capabl": [1, 7, 31, 33, 51, 55, 63, 76, 91, 94, 95, 123, 129, 182, 193, 196, 215, 264, 265, 271, 272], "either": [1, 2, 7, 8, 9, 11, 14, 15, 18, 25, 29, 31, 32, 35, 43, 50, 51, 52, 55, 56, 57, 59, 66, 68, 74, 76, 78, 79, 81, 82, 87, 91, 101, 106, 109, 110, 113, 114, 125, 127, 129, 146, 152, 159, 162, 164, 176, 180, 182, 184, 185, 186, 187, 189, 191, 192, 196, 198, 203, 204, 205, 206, 209, 212, 213, 214, 215, 216, 217, 220, 221, 228, 234, 235, 241, 249, 263, 266, 267], "them": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 24, 27, 29, 32, 33, 40, 42, 43, 50, 51, 52, 53, 55, 56, 59, 62, 67, 69, 71, 73, 74, 76, 80, 81, 84, 87, 90, 91, 92, 105, 109, 111, 114, 116, 117, 118, 123, 124, 126, 127, 129, 135, 139, 155, 156, 162, 164, 167, 170, 172, 177, 179, 180, 183, 184, 186, 187, 189, 191, 192, 193, 195, 196, 197, 203, 204, 205, 206, 208, 209, 212, 214, 215, 217, 218, 227, 229, 231, 234, 243, 260, 261, 263, 265, 266, 271], "w": [1, 2, 33, 35, 41, 50, 51, 52, 53, 54, 57, 59, 76, 78, 81, 87, 88, 108, 111, 121, 127, 128, 131, 136, 147, 151, 160, 175, 177, 178, 181, 182, 184, 185, 189, 190, 191, 192, 193, 197, 203, 204, 206, 208, 209, 212, 213, 215, 216, 227, 235, 237, 247, 272], "pythonwarn": 1, "environ": [1, 9, 11, 16, 17, 21, 51, 79, 176, 196, 216, 227, 237, 263, 265, 270], "variabl": [1, 3, 5, 8, 10, 11, 14, 15, 18, 23, 24, 25, 26, 28, 29, 31, 33, 34, 46, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 68, 70, 76, 78, 79, 81, 82, 87, 93, 94, 95, 99, 101, 113, 114, 120, 122, 129, 130, 136, 151, 156, 160, 162, 165, 171, 172, 174, 177, 184, 186, 187, 189, 191, 192, 193, 196, 197, 202, 203, 208, 209, 211, 212, 213, 214, 215, 223, 227, 229, 230, 231, 235, 241, 243, 244, 246, 247, 249, 258, 261, 263, 265, 267, 272], "NOT": [1, 81, 101, 142, 146, 161, 164, 225, 228], "blog": [1, 18, 33, 56, 82, 209, 215], "post": [1, 7, 33, 45, 51, 196, 197, 208, 227, 266], "ned": 1, "batcheld": 1, "issu": [1, 2, 8, 12, 15, 17, 18, 20, 24, 31, 50, 51, 68, 78, 81, 87, 92, 110, 123, 142, 178, 181, 190, 191, 193, 196, 204, 205, 214, 215, 227, 229, 231, 232, 234, 237, 262, 263, 266, 271], "why": [1, 2, 7, 12, 33, 51, 180, 187, 193, 203, 206, 210, 235, 264, 266, 267], "old": [1, 2, 12, 21, 51, 52, 53, 79, 126, 131, 166, 167, 176, 182, 183, 187, 188, 196, 197, 208, 212, 215, 217, 235, 260], "defin": [1, 2, 5, 7, 8, 12, 14, 15, 24, 25, 27, 28, 31, 33, 34, 35, 41, 42, 43, 46, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 74, 76, 78, 79, 82, 84, 87, 91, 95, 99, 105, 106, 108, 111, 113, 114, 116, 120, 122, 123, 127, 129, 130, 133, 139, 141, 143, 148, 151, 157, 159, 160, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 198, 199, 202, 203, 204, 206, 208, 209, 212, 214, 215, 216, 217, 221, 222, 228, 229, 230, 235, 236, 237, 241, 242, 243, 244, 245, 246, 247, 249, 250, 263, 265, 271], "pars": [1, 43, 51, 84, 114, 193, 195, 251, 259], "parse_mathematica": [1, 11, 93], "more": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 20, 24, 28, 29, 31, 32, 33, 34, 37, 41, 42, 43, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 73, 76, 78, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 99, 101, 105, 109, 110, 114, 116, 117, 119, 121, 123, 124, 125, 126, 127, 129, 131, 134, 146, 150, 151, 156, 159, 160, 161, 162, 167, 171, 172, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 208, 209, 212, 213, 214, 215, 216, 227, 229, 230, 231, 234, 235, 237, 241, 244, 248, 260, 261, 263, 264, 266, 267, 269, 270, 271, 272], "comprehens": [1, 7, 19, 190, 204, 216, 260], "additional_transl": 1, "paramet": [1, 2, 12, 15, 25, 26, 28, 31, 33, 34, 42, 43, 47, 49, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 74, 76, 78, 79, 81, 82, 84, 87, 88, 90, 91, 93, 94, 97, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 129, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 147, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 164, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 187, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 225, 227, 228, 229, 231, 232, 234, 235, 241, 242, 243, 244, 245, 250, 261, 266], "avail": [1, 2, 7, 9, 11, 13, 15, 20, 23, 32, 33, 42, 43, 50, 51, 56, 59, 78, 87, 92, 93, 114, 126, 129, 186, 187, 189, 192, 196, 197, 202, 204, 206, 208, 209, 214, 215, 216, 217, 221, 222, 227, 234, 235, 240, 241, 258, 263, 270], "translat": [1, 11, 33, 42, 51, 60, 62, 66, 68, 92, 93, 101, 104, 108, 109, 120, 122, 127, 179, 182, 196, 212, 214, 228, 229, 235, 237, 245], "rule": [1, 5, 7, 12, 15, 18, 33, 42, 43, 50, 51, 59, 74, 76, 78, 81, 82, 87, 94, 108, 114, 143, 146, 167, 172, 177, 180, 181, 193, 195, 196, 197, 202, 206, 207, 208, 212, 222, 234, 235, 247, 248, 263, 266], "convert": [1, 2, 7, 8, 9, 11, 12, 18, 25, 29, 33, 35, 43, 47, 51, 52, 55, 56, 57, 65, 66, 68, 71, 72, 75, 79, 81, 82, 87, 90, 91, 93, 101, 156, 159, 165, 166, 167, 169, 175, 182, 183, 185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 204, 205, 206, 208, 209, 213, 215, 216, 217, 218, 221, 227, 228, 234, 235, 237, 239, 243, 262, 263, 266, 271], "ones": [1, 11, 12, 18, 20, 33, 42, 47, 51, 76, 78, 81, 82, 84, 87, 90, 91, 114, 135, 156, 162, 185, 189, 199, 209, 212, 217, 223, 229, 237, 241, 245, 267, 270], "specifi": [1, 7, 14, 15, 18, 32, 33, 34, 46, 50, 51, 52, 53, 54, 57, 59, 60, 64, 67, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 101, 106, 109, 113, 114, 116, 117, 118, 120, 123, 124, 125, 126, 127, 129, 130, 146, 151, 156, 157, 159, 160, 165, 171, 172, 174, 175, 177, 179, 180, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 198, 199, 202, 203, 204, 206, 208, 212, 213, 214, 215, 216, 217, 221, 222, 223, 227, 228, 229, 234, 235, 241, 242, 243, 246, 249, 258, 267], "convers": [1, 7, 14, 15, 33, 51, 71, 93, 126, 166, 184, 185, 186, 187, 189, 191, 193, 196, 209, 221, 228, 241], "sub": [1, 2, 7, 8, 14, 18, 33, 50, 57, 59, 60, 61, 62, 63, 64, 65, 67, 78, 81, 82, 84, 87, 91, 93, 94, 95, 101, 105, 107, 114, 116, 117, 120, 121, 126, 129, 159, 160, 165, 172, 181, 183, 185, 186, 187, 192, 196, 203, 204, 208, 209, 212, 213, 214, 216, 227, 228, 230, 252, 260, 261, 263], "output": [1, 2, 5, 7, 11, 14, 15, 18, 32, 33, 51, 52, 59, 75, 78, 79, 81, 82, 84, 87, 91, 92, 93, 98, 101, 109, 113, 114, 121, 126, 129, 130, 134, 135, 146, 158, 162, 171, 172, 175, 176, 177, 180, 186, 189, 192, 196, 197, 206, 208, 209, 210, 211, 212, 214, 216, 221, 227, 228, 229, 231, 234, 235, 241, 263, 265, 266, 267, 270, 271, 272], "fail": [1, 7, 8, 9, 11, 12, 14, 15, 18, 33, 42, 43, 47, 50, 51, 55, 57, 75, 76, 78, 79, 87, 88, 91, 93, 116, 152, 157, 176, 182, 185, 186, 187, 189, 191, 192, 196, 203, 206, 212, 214, 216, 225, 227, 234, 235, 267], "recogn": [1, 2, 51, 52, 56, 66, 91, 94, 102, 184, 187, 195, 204, 205, 214, 221, 263], "logic": [1, 7, 18, 21, 26, 27, 28, 29, 32, 51, 53, 76, 78, 91, 154, 156, 157, 161, 196, 198, 204, 212, 216, 234, 263, 264, 265, 267], "mean": [1, 2, 7, 8, 11, 12, 14, 15, 18, 29, 34, 43, 50, 51, 52, 53, 69, 76, 78, 79, 81, 82, 85, 87, 91, 105, 162, 164, 167, 172, 176, 179, 182, 183, 184, 186, 189, 191, 195, 196, 206, 208, 209, 212, 214, 215, 216, 217, 218, 220, 221, 227, 234, 245, 260, 261, 263, 265, 266, 267, 271, 272], "form": [1, 5, 7, 12, 15, 18, 25, 28, 29, 30, 31, 33, 34, 41, 42, 43, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 67, 71, 73, 74, 76, 78, 80, 82, 84, 86, 87, 91, 93, 94, 95, 98, 101, 105, 106, 108, 109, 110, 113, 114, 116, 117, 120, 122, 123, 124, 125, 127, 129, 130, 139, 142, 143, 144, 146, 156, 157, 160, 162, 164, 167, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 204, 205, 206, 208, 209, 213, 214, 215, 216, 219, 221, 222, 227, 228, 234, 241, 243, 244, 246, 247, 249, 254, 255, 261, 265, 266, 267, 270, 271, 272], "similar": [1, 2, 5, 7, 12, 13, 18, 43, 50, 51, 52, 55, 56, 57, 59, 62, 67, 68, 72, 81, 87, 92, 101, 114, 116, 117, 126, 127, 160, 177, 179, 180, 184, 186, 187, 189, 193, 203, 205, 206, 208, 212, 214, 217, 222, 225, 228, 231, 232, 241, 242, 244, 245, 249, 260, 265, 266, 267, 269, 271], "full": [1, 2, 7, 12, 14, 15, 17, 18, 19, 28, 31, 33, 42, 43, 51, 55, 59, 63, 64, 78, 84, 87, 93, 124, 125, 172, 186, 189, 190, 192, 196, 198, 208, 209, 265, 271], "return": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 93, 94, 97, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 113, 114, 116, 117, 121, 124, 126, 127, 129, 131, 133, 134, 135, 136, 138, 139, 143, 146, 147, 148, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 216, 217, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 241, 243, 245, 247, 260, 261, 266, 267, 270, 271, 272], "encod": [1, 12, 35, 43, 49, 52, 81, 188, 196, 227, 231, 234], "node": [1, 31, 45, 51, 78, 93, 97, 107, 138, 163, 172, 181, 186, 196, 203, 215, 220, 231, 253, 266, 270], "syntax": [1, 2, 12, 14, 15, 18, 26, 28, 43, 51, 78, 93, 114, 129, 159, 182, 186, 195, 196, 208, 214, 218, 237, 253, 261, 263, 265, 270, 272], "tree": [1, 4, 10, 42, 45, 51, 93, 107, 114, 154, 157, 172, 188, 192, 203, 205, 208, 215, 218, 220, 231, 234, 237, 253, 259, 262], "suppos": [1, 8, 18, 43, 50, 51, 52, 76, 183, 185, 189, 191, 192, 196, 203, 206, 212, 214, 225, 234, 245, 250, 263, 265, 271], "maximum": [1, 2, 31, 33, 34, 42, 43, 51, 57, 78, 87, 91, 94, 116, 159, 167, 182, 187, 189, 192, 196, 203, 204, 208, 209, 212, 215, 216, 231, 234], "valu": [1, 2, 5, 7, 11, 12, 14, 15, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 103, 106, 108, 109, 110, 111, 113, 114, 116, 126, 129, 131, 135, 138, 141, 146, 148, 151, 154, 156, 157, 158, 159, 162, 163, 165, 166, 167, 172, 173, 175, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 191, 192, 193, 194, 196, 197, 202, 203, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 227, 229, 230, 234, 235, 237, 243, 245, 247, 250, 261, 263, 266], "multipli": [1, 2, 25, 29, 33, 42, 51, 62, 66, 73, 80, 82, 87, 91, 109, 117, 125, 126, 127, 139, 148, 162, 167, 168, 183, 184, 185, 187, 189, 191, 192, 196, 198, 205, 206, 209, 212, 217, 234, 244, 263, 266], "minimum": [1, 12, 31, 33, 42, 43, 45, 47, 51, 52, 55, 57, 87, 105, 109, 116, 146, 171, 182, 184, 189, 215, 216, 230, 261], "previou": [1, 12, 14, 18, 35, 40, 41, 42, 43, 46, 51, 57, 78, 82, 90, 106, 126, 164, 179, 180, 189, 202, 209, 213, 217, 234, 235, 264, 266, 271], "wai": [1, 2, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 18, 24, 32, 34, 35, 40, 42, 43, 44, 47, 51, 53, 56, 59, 67, 71, 75, 76, 78, 80, 84, 87, 90, 91, 93, 94, 97, 105, 109, 111, 113, 114, 117, 119, 120, 123, 126, 142, 156, 159, 160, 165, 167, 170, 171, 172, 174, 175, 177, 179, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 203, 206, 208, 209, 212, 213, 215, 217, 218, 221, 222, 225, 229, 231, 234, 235, 238, 241, 244, 245, 246, 247, 249, 260, 261, 263, 264, 265, 266, 271, 272], "wa": [1, 2, 7, 11, 12, 18, 40, 42, 43, 45, 51, 52, 53, 59, 64, 87, 91, 93, 105, 106, 114, 116, 117, 126, 127, 157, 167, 179, 180, 181, 183, 189, 191, 192, 193, 195, 196, 205, 206, 208, 212, 214, 216, 225, 227, 230, 232, 234, 235, 261, 263, 265, 266, 269], "x": [1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 42, 43, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 130, 134, 136, 137, 138, 139, 140, 142, 143, 146, 151, 152, 157, 159, 160, 161, 162, 163, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 227, 228, 229, 230, 232, 234, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 260, 261, 263, 265, 266, 267, 270, 271, 272], "max": [1, 33, 42, 43, 51, 58, 59, 61, 78, 87, 91, 93, 94, 182, 191, 192, 196, 203, 205, 206, 235], "min": [1, 43, 47, 51, 56, 58, 87, 93, 182, 191, 196, 202, 212], "21": [1, 14, 37, 42, 51, 54, 56, 64, 65, 73, 87, 91, 93, 94, 127, 182, 187, 189, 190, 191, 193, 195, 196, 202, 212, 214, 216, 217, 271], "now": [1, 2, 5, 7, 8, 9, 10, 11, 13, 15, 18, 20, 32, 33, 43, 51, 52, 59, 62, 67, 68, 73, 75, 76, 80, 87, 91, 101, 106, 113, 114, 118, 121, 123, 129, 130, 165, 167, 172, 176, 179, 180, 183, 184, 186, 189, 192, 193, 197, 204, 205, 206, 208, 209, 212, 214, 215, 216, 217, 222, 227, 228, 235, 245, 246, 263, 265, 266, 271, 272], "number": [1, 4, 7, 11, 12, 13, 14, 15, 18, 25, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 77, 78, 79, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 95, 99, 101, 102, 103, 105, 109, 110, 113, 114, 117, 126, 127, 129, 135, 138, 141, 142, 145, 146, 147, 148, 150, 151, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 192, 193, 196, 198, 202, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 217, 221, 222, 227, 229, 231, 234, 237, 241, 243, 244, 246, 247, 249, 252, 260, 261, 263, 265, 266, 267, 271], "just": [1, 2, 7, 8, 10, 12, 14, 15, 18, 20, 29, 32, 33, 42, 49, 51, 52, 53, 74, 76, 78, 79, 80, 81, 87, 91, 92, 103, 105, 106, 111, 114, 117, 121, 126, 127, 129, 142, 147, 152, 162, 167, 171, 176, 177, 179, 183, 185, 186, 187, 189, 191, 195, 196, 203, 204, 205, 206, 208, 212, 215, 225, 227, 229, 230, 232, 246, 247, 249, 260, 261, 263, 264, 265, 266, 267, 271, 272], "wrapper": [1, 11, 18, 27, 29, 33, 43, 51, 59, 87, 126, 174, 176, 185, 186, 189, 196, 203, 212, 215, 216, 228, 232, 234], "around": [1, 2, 8, 11, 12, 14, 15, 18, 20, 31, 40, 43, 51, 52, 53, 55, 57, 60, 67, 71, 90, 91, 106, 123, 126, 130, 180, 186, 189, 191, 196, 198, 203, 207, 209, 212, 215, 216, 227, 241, 242, 261, 263, 265], "other": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 19, 21, 25, 29, 32, 33, 34, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 76, 78, 81, 82, 84, 87, 91, 92, 93, 94, 95, 101, 105, 106, 108, 114, 115, 117, 118, 123, 126, 127, 129, 131, 134, 135, 136, 146, 157, 159, 160, 161, 162, 165, 167, 168, 169, 171, 172, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 197, 198, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 222, 223, 225, 228, 229, 230, 231, 234, 235, 241, 243, 244, 247, 249, 251, 260, 261, 263, 265, 266, 267, 271], "is_perfect_squar": 1, "ntheori": [1, 29, 42, 51, 52, 189, 192, 209, 234, 256], "primetest": [1, 51, 91], "is_squar": [1, 51, 82, 91], "is_prim": [1, 7, 51, 183], "isprim": [1, 29, 52, 91], "final": [1, 7, 12, 14, 15, 18, 32, 43, 50, 51, 57, 59, 76, 78, 81, 87, 91, 95, 99, 108, 109, 116, 120, 122, 123, 124, 127, 142, 154, 157, 159, 160, 162, 164, 165, 167, 172, 179, 180, 183, 186, 189, 191, 198, 204, 205, 206, 208, 209, 212, 214, 215, 222, 235, 264, 265, 266], "divid": [1, 42, 50, 51, 52, 67, 87, 91, 166, 167, 184, 186, 187, 189, 191, 192, 196, 212, 231, 266], "incorrect": [1, 8, 12, 15, 18, 42, 51, 61, 91, 99, 175, 187, 212, 215, 228, 231, 232], "later": [1, 5, 12, 33, 42, 76, 82, 105, 110, 111, 116, 117, 118, 124, 126, 127, 129, 136, 171, 179, 186, 189, 195, 196, 197, 206, 208, 212, 231, 244, 260, 261, 263, 265, 266, 271], "problem": [1, 2, 5, 7, 8, 15, 18, 22, 35, 45, 47, 51, 52, 63, 76, 78, 82, 87, 91, 94, 96, 97, 102, 105, 114, 117, 118, 121, 123, 124, 171, 179, 180, 183, 184, 188, 189, 206, 208, 209, 212, 215, 231, 234, 248, 257, 261, 263, 267], "alwai": [1, 2, 7, 8, 12, 14, 15, 18, 20, 25, 32, 42, 43, 50, 51, 52, 53, 55, 57, 59, 61, 63, 66, 67, 75, 76, 78, 81, 82, 87, 90, 91, 97, 101, 102, 113, 114, 116, 117, 121, 130, 162, 164, 167, 168, 177, 179, 183, 184, 186, 187, 189, 191, 192, 196, 197, 198, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 223, 227, 229, 234, 235, 241, 242, 247, 261, 263, 264, 265, 266, 271], "correct": [1, 2, 8, 12, 14, 15, 18, 33, 40, 42, 48, 50, 51, 55, 57, 75, 76, 78, 87, 91, 101, 114, 126, 179, 180, 189, 192, 203, 209, 212, 214, 215, 220, 228, 234, 263, 270], "specif": [1, 7, 9, 13, 14, 15, 18, 42, 43, 51, 52, 53, 59, 63, 78, 80, 82, 87, 106, 108, 109, 113, 114, 123, 129, 131, 167, 180, 182, 183, 187, 189, 191, 192, 195, 196, 197, 202, 208, 209, 212, 213, 214, 216, 222, 227, 228, 229, 234, 253, 267, 271], "bottom_up": 1, "interactive_travers": 1, "postorder_travers": [1, 266], "preorder_travers": [1, 266], "differ": [1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 18, 21, 23, 24, 32, 33, 34, 40, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 62, 64, 66, 67, 71, 73, 75, 76, 78, 79, 80, 81, 84, 87, 91, 92, 93, 94, 99, 105, 106, 111, 114, 116, 119, 123, 126, 127, 130, 134, 135, 147, 148, 156, 157, 160, 162, 164, 167, 171, 172, 173, 175, 176, 177, 180, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 203, 204, 205, 208, 209, 212, 213, 214, 215, 216, 217, 220, 222, 225, 227, 228, 229, 230, 231, 232, 234, 235, 241, 243, 247, 248, 249, 252, 262, 263, 265, 266, 267, 270, 271], "top": [1, 12, 14, 15, 33, 50, 51, 52, 67, 68, 78, 81, 87, 94, 95, 113, 157, 164, 186, 196, 206, 212, 229, 230, 235, 250, 266], "level": [1, 2, 7, 8, 12, 14, 15, 33, 42, 49, 51, 57, 59, 78, 81, 87, 91, 105, 117, 129, 157, 162, 167, 171, 174, 180, 182, 185, 186, 188, 194, 196, 205, 209, 215, 216, 220, 228, 229, 234, 266, 267, 269], "namespac": [1, 11, 14, 24, 33, 34, 51, 187, 209, 212, 213, 227, 229, 230, 235], "gener": [1, 2, 5, 7, 8, 9, 12, 16, 18, 20, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 65, 67, 69, 74, 76, 78, 79, 80, 81, 84, 87, 91, 92, 93, 101, 105, 106, 108, 109, 110, 113, 114, 116, 117, 118, 120, 122, 123, 125, 126, 127, 129, 130, 134, 145, 146, 147, 148, 151, 156, 157, 160, 161, 162, 167, 169, 171, 172, 173, 175, 176, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 202, 205, 206, 208, 209, 210, 212, 213, 214, 216, 221, 222, 228, 229, 231, 232, 233, 234, 235, 241, 244, 245, 247, 248, 249, 261, 263, 264, 265, 266, 267, 271, 272], "ani": [1, 2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 26, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 66, 67, 68, 76, 78, 79, 81, 82, 85, 87, 88, 91, 93, 94, 95, 97, 101, 103, 106, 109, 110, 111, 113, 114, 123, 125, 126, 127, 130, 131, 135, 148, 151, 156, 157, 160, 162, 164, 167, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 197, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 218, 221, 222, 227, 228, 230, 231, 232, 234, 235, 241, 244, 245, 246, 247, 249, 250, 260, 261, 263, 266, 267, 270, 271, 272], "name": [1, 2, 7, 9, 11, 12, 13, 14, 15, 18, 24, 27, 28, 32, 33, 34, 38, 41, 44, 47, 50, 51, 52, 53, 57, 58, 59, 61, 64, 76, 78, 79, 80, 84, 87, 91, 93, 94, 97, 106, 108, 111, 113, 114, 116, 129, 133, 142, 157, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 180, 182, 183, 184, 186, 187, 189, 191, 193, 196, 202, 206, 208, 209, 212, 213, 215, 216, 221, 222, 225, 227, 228, 229, 230, 235, 237, 238, 239, 241, 244, 247, 260, 263, 266, 267, 271], "reli": [1, 2, 11, 33, 87, 92, 98, 189, 195, 196, 203, 208, 215, 230, 235, 267], "due": [1, 5, 9, 14, 18, 31, 33, 41, 42, 51, 53, 68, 87, 91, 114, 116, 126, 135, 162, 177, 180, 186, 192, 196, 199, 209, 211, 213, 216, 232, 243, 249, 271], "intern": [1, 2, 7, 8, 12, 31, 33, 34, 42, 51, 54, 55, 56, 59, 67, 68, 71, 77, 83, 87, 91, 95, 97, 99, 116, 126, 135, 156, 157, 167, 183, 185, 187, 188, 190, 192, 194, 196, 206, 208, 210, 213, 214, 215, 216, 220, 222, 225, 229, 231, 234, 266, 270], "refactor": [1, 212, 220, 231], "tr": [1, 34, 42, 196, 205], "quantum": [1, 103, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 181, 257], "onli": [1, 2, 4, 5, 7, 8, 9, 12, 14, 15, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 68, 69, 74, 76, 78, 79, 80, 81, 82, 87, 88, 91, 92, 93, 97, 99, 101, 107, 114, 116, 117, 119, 120, 122, 124, 126, 127, 130, 135, 137, 156, 157, 161, 162, 164, 166, 167, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 241, 243, 245, 247, 249, 250, 260, 261, 263, 264, 266, 267, 271, 272], "better": [1, 2, 7, 8, 9, 11, 12, 14, 18, 32, 33, 43, 51, 55, 59, 78, 81, 101, 114, 142, 166, 170, 182, 185, 186, 187, 199, 203, 204, 205, 206, 212, 213, 214, 215, 216, 228, 234, 235, 265, 271], "than": [1, 2, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 24, 29, 33, 34, 36, 42, 43, 44, 50, 51, 52, 55, 56, 57, 59, 60, 65, 66, 67, 69, 73, 76, 78, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 99, 101, 105, 109, 113, 114, 117, 120, 136, 142, 156, 159, 160, 162, 171, 180, 181, 184, 185, 186, 187, 189, 192, 193, 194, 196, 199, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 223, 228, 229, 231, 234, 235, 237, 238, 260, 261, 263, 264, 265, 266, 267, 269, 271], "ever": [1, 18, 57, 180, 183, 192, 206, 212, 229, 232, 266], "intend": [1, 7, 11, 12, 14, 51, 52, 62, 71, 76, 91, 93, 107, 157, 186, 187, 191, 194, 209, 212, 213, 225, 230, 260], "support": [1, 2, 11, 12, 13, 14, 15, 18, 20, 25, 26, 27, 28, 31, 32, 33, 43, 51, 55, 58, 59, 61, 75, 78, 84, 87, 91, 92, 93, 94, 95, 97, 98, 101, 105, 114, 129, 157, 172, 179, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 201, 202, 203, 204, 208, 212, 213, 214, 215, 216, 217, 221, 225, 227, 228, 229, 235, 245, 247, 261, 263, 266, 270], "necessari": [1, 2, 7, 9, 11, 12, 14, 16, 18, 31, 32, 42, 43, 51, 61, 76, 78, 81, 87, 91, 109, 116, 123, 182, 184, 186, 191, 192, 199, 205, 208, 212, 213, 214, 215, 216, 217, 222, 227, 229, 234, 235, 241, 264, 269], "remain": [1, 12, 18, 27, 28, 33, 42, 43, 45, 47, 51, 52, 57, 76, 82, 91, 93, 102, 114, 161, 177, 179, 180, 191, 192, 193, 202, 205, 206, 212, 213, 216, 218, 222, 231, 234, 235, 244, 249, 260, 263, 265, 266, 267], "helper": [1, 31, 33, 42, 46, 49, 51, 76, 79, 80, 147, 149, 158, 193, 203, 206, 209, 212, 213, 215, 228, 259], "place": [1, 2, 7, 15, 16, 18, 32, 43, 44, 51, 52, 57, 67, 83, 87, 90, 91, 93, 101, 129, 130, 190, 191, 196, 197, 203, 205, 208, 212, 231, 234, 260, 267, 271], "were": [1, 2, 7, 12, 15, 18, 32, 43, 45, 51, 52, 57, 68, 76, 82, 87, 91, 92, 93, 105, 113, 126, 171, 177, 180, 183, 189, 190, 191, 192, 195, 196, 197, 205, 208, 214, 234, 235, 237, 263, 265, 266, 270, 271], "order": [1, 2, 5, 7, 8, 11, 12, 14, 15, 19, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 64, 67, 68, 70, 73, 76, 78, 79, 80, 81, 82, 87, 88, 91, 92, 93, 94, 95, 101, 102, 105, 109, 113, 114, 115, 116, 124, 125, 126, 127, 135, 139, 143, 146, 156, 157, 158, 159, 160, 161, 162, 167, 171, 172, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 195, 196, 197, 198, 199, 200, 202, 204, 207, 208, 209, 213, 214, 215, 216, 217, 218, 221, 222, 223, 227, 228, 229, 231, 234, 235, 237, 241, 242, 244, 245, 250, 261, 263, 264, 266, 270, 271, 272], "default_sort_kei": [1, 32, 40, 220], "addition": [1, 11, 14, 51, 124, 160, 180, 189, 196, 216, 225, 232, 244], "two": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 25, 31, 32, 33, 34, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 94, 95, 97, 98, 101, 102, 105, 106, 108, 109, 121, 123, 124, 126, 127, 134, 135, 136, 141, 142, 146, 148, 151, 152, 157, 158, 159, 160, 161, 162, 164, 167, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 221, 231, 234, 235, 241, 243, 245, 246, 247, 249, 260, 261, 264, 266, 267, 271], "meant": [1, 2, 7, 14, 15, 18, 33, 51, 59, 64, 78, 91, 114, 129, 182, 187, 204, 208, 213, 245, 266], "repres": [1, 2, 4, 7, 8, 11, 18, 25, 27, 29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 56, 57, 59, 61, 62, 64, 66, 67, 68, 73, 74, 77, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 98, 99, 101, 106, 108, 109, 111, 113, 114, 116, 117, 118, 121, 123, 124, 125, 126, 127, 129, 131, 133, 134, 136, 148, 149, 151, 155, 156, 159, 160, 162, 164, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 192, 194, 196, 198, 199, 202, 203, 204, 206, 208, 209, 212, 214, 215, 216, 218, 220, 221, 222, 229, 231, 234, 235, 241, 243, 247, 249, 261, 263, 265, 266, 271, 272], "index": [1, 2, 9, 11, 18, 25, 33, 38, 40, 42, 43, 47, 50, 51, 52, 53, 57, 59, 62, 67, 76, 78, 81, 82, 84, 87, 90, 91, 101, 113, 114, 129, 130, 131, 133, 135, 136, 146, 155, 157, 159, 162, 167, 172, 182, 183, 187, 191, 192, 193, 196, 201, 202, 206, 214, 216, 217, 219, 220, 222, 223, 228], "matrixel": [1, 33], "howev": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 26, 28, 33, 42, 43, 47, 50, 51, 52, 53, 56, 57, 59, 61, 76, 78, 81, 82, 87, 91, 92, 93, 94, 114, 126, 130, 162, 180, 182, 183, 184, 186, 187, 189, 191, 192, 193, 195, 196, 197, 203, 204, 205, 206, 208, 212, 213, 214, 215, 227, 228, 235, 244, 245, 249, 260, 263, 265, 267, 271, 272], "without": [1, 2, 7, 11, 12, 14, 15, 18, 20, 27, 29, 30, 33, 50, 51, 52, 53, 55, 59, 76, 78, 79, 82, 84, 87, 101, 102, 114, 119, 121, 125, 126, 162, 167, 171, 172, 173, 179, 182, 185, 186, 189, 192, 196, 198, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 218, 221, 222, 225, 227, 228, 229, 232, 234, 235, 237, 243, 246, 267, 271], "matrixsymbol": [1, 4, 7, 29, 30, 33, 51, 82, 84, 87, 196, 216, 218], "diff": [1, 5, 14, 18, 31, 33, 56, 57, 58, 59, 68, 73, 84, 87, 105, 107, 117, 129, 160, 172, 174, 176, 177, 180, 182, 187, 192, 195, 196, 206, 212, 213, 214, 217, 218, 223, 244, 247, 261, 265, 272], "ad": [1, 7, 9, 14, 15, 25, 32, 33, 35, 41, 42, 51, 52, 62, 66, 73, 76, 80, 91, 93, 97, 105, 106, 114, 115, 129, 136, 164, 167, 173, 181, 182, 191, 193, 195, 196, 198, 206, 209, 212, 215, 216, 218, 221, 222, 227, 243, 263], "solv": [1, 2, 5, 7, 12, 14, 18, 21, 33, 35, 47, 50, 51, 59, 64, 76, 78, 82, 83, 87, 94, 96, 97, 109, 110, 114, 117, 120, 122, 123, 124, 126, 129, 165, 185, 188, 189, 193, 194, 195, 198, 208, 209, 210, 211, 212, 213, 216, 257, 261, 262, 265, 267, 270], "veri": [1, 2, 4, 7, 10, 11, 12, 14, 18, 33, 47, 51, 52, 55, 56, 61, 63, 69, 73, 76, 78, 81, 87, 91, 101, 105, 114, 117, 129, 134, 167, 179, 180, 183, 186, 189, 191, 192, 193, 195, 196, 197, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 227, 228, 229, 235, 260, 263, 266, 271], "layer": [1, 101, 189, 235], "structur": [1, 4, 7, 15, 18, 30, 32, 33, 39, 42, 43, 49, 51, 76, 78, 81, 82, 87, 94, 95, 97, 113, 123, 160, 162, 182, 183, 186, 189, 191, 192, 193, 208, 210, 212, 214, 215, 216, 220, 221, 229, 231, 234, 235, 263, 271], "alreadi": [1, 2, 7, 11, 12, 18, 20, 42, 43, 51, 52, 60, 61, 64, 65, 67, 76, 78, 82, 88, 91, 97, 102, 106, 114, 126, 131, 157, 159, 162, 177, 179, 180, 182, 185, 186, 189, 191, 195, 199, 205, 206, 208, 212, 215, 216, 222, 245, 247, 261, 263, 264, 265, 269, 270, 271, 272], "allow": [1, 2, 7, 11, 12, 15, 18, 29, 32, 33, 34, 35, 42, 44, 47, 50, 51, 52, 55, 59, 61, 62, 63, 76, 79, 81, 82, 84, 85, 87, 91, 92, 93, 95, 109, 114, 116, 123, 126, 127, 129, 134, 146, 162, 166, 167, 168, 180, 182, 183, 186, 187, 189, 191, 192, 193, 196, 201, 203, 204, 205, 208, 209, 212, 214, 215, 216, 217, 221, 227, 230, 232, 234, 235, 245, 263, 266], "one": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 24, 25, 28, 29, 31, 32, 33, 35, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 86, 87, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 105, 106, 108, 109, 114, 115, 117, 126, 127, 129, 131, 134, 135, 136, 142, 147, 156, 160, 162, 164, 165, 167, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 220, 222, 223, 227, 228, 229, 231, 234, 235, 237, 241, 245, 247, 249, 260, 261, 263, 265, 266, 267, 269, 270, 271], "desir": [1, 2, 5, 14, 18, 24, 42, 43, 51, 52, 54, 55, 56, 57, 61, 65, 67, 81, 82, 87, 90, 91, 92, 109, 110, 111, 113, 123, 126, 147, 172, 179, 180, 185, 187, 189, 191, 192, 193, 196, 197, 199, 204, 208, 212, 214, 215, 228, 230, 231, 234, 247, 260], "g": [1, 2, 7, 8, 9, 11, 12, 13, 15, 18, 31, 32, 33, 34, 36, 39, 41, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 67, 68, 69, 71, 74, 77, 78, 80, 81, 82, 87, 91, 93, 94, 101, 102, 106, 111, 113, 114, 116, 117, 118, 120, 121, 122, 126, 127, 129, 130, 142, 146, 151, 157, 159, 160, 162, 165, 167, 168, 172, 177, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 227, 228, 229, 230, 232, 234, 235, 236, 237, 249, 261, 266, 270, 271, 272], "introduct": [1, 3, 6, 15, 23, 38, 42, 43, 123, 178, 187, 188, 189, 190, 196, 209, 212, 215, 248, 252, 253, 254, 258, 264, 270], "encourag": [1, 14, 32, 124, 125, 191], "imprecis": 1, "think": [1, 7, 8, 14, 18, 20, 31, 42, 116, 167, 231, 235, 263, 271], "request": [1, 7, 9, 11, 12, 14, 15, 17, 20, 31, 51, 55, 67, 76, 91, 114, 162, 189, 192, 220, 228], "free_symbol": [1, 33, 51, 60, 78, 82, 151, 169, 172, 192, 202, 209], "sinc": [1, 2, 4, 5, 7, 8, 18, 26, 31, 33, 34, 42, 43, 44, 47, 48, 49, 51, 52, 54, 56, 58, 59, 60, 61, 63, 64, 67, 69, 75, 76, 78, 80, 81, 82, 87, 91, 104, 116, 127, 129, 138, 162, 163, 167, 171, 177, 180, 183, 184, 186, 187, 189, 191, 192, 196, 199, 204, 205, 206, 208, 209, 212, 214, 215, 216, 222, 226, 230, 231, 232, 234, 235, 239, 244, 246, 247, 249, 260, 265, 267, 270, 271, 272], "get": [1, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 27, 28, 31, 32, 33, 35, 40, 41, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 59, 64, 74, 76, 78, 80, 84, 87, 91, 93, 94, 99, 101, 104, 114, 117, 124, 125, 126, 129, 134, 135, 142, 146, 151, 156, 157, 158, 159, 164, 167, 180, 184, 186, 187, 189, 191, 192, 193, 194, 195, 196, 198, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 222, 223, 228, 234, 235, 236, 238, 241, 244, 260, 263, 265, 266, 267, 270, 271, 272], "incorrectli": [1, 14, 18, 60, 61, 87, 184], "atomicexpr": 1, "concept": [1, 7, 42, 116, 180, 186, 188, 191, 196, 215, 220, 249, 264, 269], "misappli": 1, "point": [1, 2, 5, 7, 11, 12, 14, 15, 19, 20, 25, 31, 33, 34, 42, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 73, 74, 75, 76, 78, 87, 91, 94, 95, 97, 99, 106, 108, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 142, 164, 167, 173, 177, 178, 180, 182, 183, 186, 187, 189, 191, 192, 196, 198, 202, 203, 204, 212, 214, 215, 216, 228, 231, 234, 235, 237, 241, 243, 245, 246, 247, 248, 249, 250, 252, 260, 261, 263, 266], "noth": [1, 32, 42, 51, 64, 78, 146, 162, 183, 187, 195, 196, 208, 212, 214, 225, 227, 235, 237, 263], "anywher": [1, 7, 11, 12, 14, 33, 51, 59, 65, 162, 237, 265], "els": [1, 2, 7, 8, 11, 12, 18, 33, 41, 43, 47, 51, 52, 59, 61, 65, 67, 68, 76, 78, 81, 87, 91, 101, 162, 172, 182, 187, 191, 192, 196, 197, 204, 208, 212, 215, 220, 222, 227, 234, 237, 241, 243, 260, 266], "context": [1, 7, 12, 14, 15, 18, 26, 27, 28, 51, 53, 59, 78, 81, 114, 167, 186, 189, 191, 204, 225, 227, 232, 241], "differenti": [1, 14, 15, 22, 31, 51, 56, 57, 59, 68, 69, 71, 74, 101, 108, 109, 113, 114, 116, 117, 120, 123, 124, 125, 126, 129, 130, 151, 157, 171, 172, 174, 175, 177, 180, 183, 189, 193, 195, 196, 201, 206, 208, 210, 212, 213, 241, 247, 248, 251, 258, 261, 262, 265], "which": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 87, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 111, 113, 114, 116, 118, 121, 123, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 148, 151, 157, 158, 159, 160, 162, 166, 167, 168, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 220, 222, 227, 228, 229, 230, 231, 232, 234, 235, 237, 241, 242, 245, 249, 250, 252, 260, 261, 263, 264, 265, 266, 267, 268, 270, 271, 272], "suggest": [1, 15, 34, 42, 78, 87, 91, 114, 194, 267], "someth": [1, 2, 7, 8, 12, 14, 15, 18, 31, 33, 51, 52, 55, 61, 76, 81, 82, 87, 91, 105, 114, 115, 129, 155, 168, 171, 182, 186, 187, 195, 203, 204, 208, 212, 215, 227, 229, 235, 260, 263, 265, 266, 269], "confirm": [1, 12, 42, 91, 212], "fact": [1, 7, 8, 14, 18, 28, 29, 51, 56, 59, 69, 76, 91, 116, 126, 167, 183, 184, 186, 189, 191, 193, 195, 206, 208, 212, 215, 227, 235, 249, 260, 263, 264, 265, 266, 271], "introduc": [1, 8, 23, 47, 50, 51, 59, 76, 87, 92, 95, 114, 116, 120, 121, 122, 125, 162, 167, 180, 187, 188, 193, 196, 203, 206, 209, 216, 232, 264, 267, 269, 271], "21494": 1, "size": [1, 5, 33, 34, 35, 40, 42, 43, 44, 45, 46, 47, 51, 52, 54, 56, 79, 82, 84, 87, 90, 91, 99, 116, 124, 125, 126, 135, 157, 158, 176, 182, 185, 189, 196, 208, 209, 212, 216, 234, 261], "die": [1, 191, 216], "easili": [1, 7, 15, 18, 19, 20, 51, 52, 74, 76, 87, 91, 92, 124, 160, 179, 192, 195, 196, 201, 208, 209, 212, 214, 215, 228, 265], "implement": [1, 4, 8, 11, 14, 15, 18, 21, 25, 26, 27, 28, 31, 32, 33, 34, 36, 41, 42, 43, 48, 51, 52, 54, 56, 57, 59, 62, 64, 71, 72, 74, 75, 77, 78, 81, 82, 83, 87, 91, 92, 93, 105, 114, 123, 131, 133, 134, 137, 146, 147, 155, 156, 158, 166, 171, 173, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 200, 203, 204, 205, 208, 209, 212, 213, 214, 215, 216, 220, 221, 231, 233, 234, 235, 238, 248, 251, 259, 261, 265, 271], "rang": [1, 5, 14, 18, 31, 33, 40, 41, 42, 43, 45, 47, 51, 52, 56, 57, 59, 65, 82, 87, 91, 95, 99, 103, 131, 162, 182, 186, 187, 188, 189, 191, 192, 193, 198, 199, 202, 205, 208, 212, 215, 216, 217, 221, 227, 234, 260, 271], "numpi": [1, 11, 14, 18, 20, 33, 51, 74, 79, 86, 92, 99, 114, 129, 146, 156, 185, 196, 216, 221, 228, 229, 235, 260, 263], "arrai": [1, 18, 22, 33, 42, 43, 47, 48, 52, 59, 78, 82, 84, 87, 91, 92, 99, 129, 159, 182, 185, 187, 192, 196, 215, 216, 219, 221, 222, 223, 228, 229, 231, 235, 267], "shape": [1, 14, 33, 67, 82, 84, 87, 89, 90, 99, 101, 113, 114, 172, 182, 183, 185, 196, 199, 206, 216, 217, 218, 220, 221, 222, 235, 270], "histor": [1, 18, 52, 212, 216], "length": [1, 14, 33, 35, 41, 42, 43, 45, 49, 51, 52, 54, 56, 57, 59, 60, 64, 66, 67, 68, 81, 82, 87, 90, 91, 94, 95, 105, 109, 113, 117, 118, 127, 131, 135, 159, 164, 165, 167, 172, 175, 180, 191, 192, 196, 202, 206, 208, 212, 214, 216, 227, 228, 234, 237, 241, 242, 250], "behavior": [1, 2, 11, 12, 18, 42, 51, 59, 78, 93, 104, 105, 123, 126, 157, 183, 184, 191, 192, 196, 197, 201, 203, 205, 208, 225, 228, 230, 234, 235, 263], "confus": [1, 7, 12, 15, 51, 56, 81, 135, 180, 184, 192, 215, 260, 261, 263], "21563": 1, "revert": [1, 187, 192], "sample_it": [1, 216], "consequ": [1, 18, 29, 51, 184, 186, 263, 271], "class": [1, 2, 6, 7, 8, 12, 15, 16, 18, 25, 26, 27, 28, 29, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 78, 79, 80, 81, 84, 86, 93, 94, 97, 98, 99, 101, 106, 108, 109, 110, 111, 113, 114, 117, 118, 123, 127, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 169, 170, 171, 175, 176, 178, 183, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 206, 210, 212, 213, 214, 215, 216, 219, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 235, 239, 244, 245, 247, 248, 250, 252, 253, 256, 258, 259, 261, 263, 266, 271], "subclass": [1, 7, 18, 27, 28, 33, 51, 58, 62, 64, 78, 81, 131, 137, 146, 150, 151, 152, 157, 159, 160, 182, 183, 185, 186, 187, 191, 192, 196, 216, 227, 228, 229, 232, 235, 241, 244, 266], "domain": [1, 5, 11, 14, 18, 31, 32, 51, 52, 54, 56, 57, 59, 70, 72, 73, 76, 78, 84, 87, 88, 91, 98, 101, 114, 129, 183, 185, 188, 189, 191, 193, 194, 210, 211, 212, 214, 216, 267, 272], "element": [1, 2, 4, 7, 15, 25, 28, 32, 33, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 74, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 94, 95, 101, 102, 111, 129, 131, 134, 148, 159, 167, 175, 178, 180, 182, 183, 184, 185, 187, 188, 189, 192, 194, 195, 196, 202, 203, 204, 206, 208, 209, 212, 214, 215, 216, 217, 221, 228, 230, 231, 234, 235, 236, 243, 261, 266, 267, 270, 271], "break": [1, 12, 14, 18, 21, 32, 33, 43, 51, 52, 91, 179, 193, 196, 204, 234], "kei": [1, 2, 23, 26, 29, 32, 40, 42, 43, 51, 52, 53, 56, 67, 80, 82, 87, 90, 91, 94, 113, 114, 123, 154, 157, 162, 180, 182, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 208, 212, 213, 214, 216, 220, 231, 234, 235, 237, 267, 268, 271], "invari": [1, 15, 18, 42, 47, 98, 101, 181, 187, 191, 192, 206, 212], "kind": [1, 6, 7, 8, 14, 15, 18, 32, 33, 53, 56, 59, 71, 78, 82, 94, 97, 109, 114, 125, 177, 184, 186, 187, 192, 197, 198, 204, 212, 213, 216, 234, 247, 249, 252, 261, 271], "limit": [1, 2, 10, 12, 20, 21, 29, 31, 33, 50, 51, 53, 55, 56, 57, 59, 60, 63, 71, 73, 78, 79, 81, 87, 91, 99, 123, 127, 151, 157, 160, 176, 182, 187, 189, 192, 193, 196, 199, 200, 202, 204, 208, 209, 211, 212, 213, 214, 216, 221, 228, 231, 234, 235, 237, 240, 241, 250, 262, 263, 265, 267], "improv": [1, 8, 11, 12, 18, 51, 76, 123, 182, 186, 189, 190, 192, 193, 195, 197, 212, 215, 221, 252, 261, 267], "part": [1, 7, 8, 11, 12, 14, 15, 18, 25, 30, 42, 43, 50, 51, 52, 56, 57, 59, 67, 74, 76, 78, 81, 82, 84, 91, 101, 105, 106, 108, 109, 113, 114, 116, 121, 123, 127, 129, 146, 158, 162, 171, 180, 184, 186, 187, 189, 191, 192, 193, 195, 196, 197, 204, 206, 208, 209, 212, 214, 227, 229, 231, 234, 261, 266, 271], "document": [1, 6, 16, 18, 21, 27, 28, 29, 42, 47, 51, 52, 57, 58, 59, 63, 73, 76, 77, 79, 84, 87, 92, 95, 105, 109, 123, 124, 125, 127, 129, 137, 151, 157, 171, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 192, 196, 206, 210, 212, 214, 215, 225, 227, 229, 230, 232, 234, 241, 247, 248, 251, 261, 263, 264, 270, 271], "normal": [1, 2, 7, 8, 15, 18, 25, 28, 33, 42, 50, 51, 55, 57, 61, 64, 65, 66, 78, 79, 81, 85, 86, 87, 91, 93, 103, 105, 108, 114, 116, 121, 129, 135, 146, 156, 159, 160, 161, 162, 163, 167, 170, 172, 180, 183, 186, 187, 188, 189, 191, 192, 196, 197, 199, 204, 205, 209, 212, 216, 221, 227, 232, 234, 241, 255], "ha": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 22, 23, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 74, 76, 78, 80, 81, 82, 84, 87, 88, 90, 91, 92, 94, 95, 97, 101, 102, 106, 108, 109, 114, 116, 117, 123, 127, 129, 135, 136, 146, 147, 156, 159, 164, 167, 171, 172, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 201, 203, 204, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 227, 228, 229, 230, 231, 232, 234, 237, 241, 242, 244, 245, 247, 249, 250, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "domainmatrix": [1, 83, 87, 188, 191, 194], "anyon": [1, 14, 15, 192, 196, 269, 270], "switch": [1, 42, 49, 78, 91, 101, 189, 192], "shown": [1, 7, 8, 12, 14, 18, 40, 43, 50, 51, 55, 59, 76, 93, 95, 99, 101, 105, 109, 111, 117, 118, 124, 125, 127, 171, 172, 179, 180, 182, 185, 186, 187, 192, 196, 212, 216, 232, 234, 244, 245, 264], "21402": 1, "api": [1, 7, 14, 15, 21, 33, 51, 63, 71, 77, 92, 93, 100, 129, 158, 171, 182, 189, 209, 210, 211, 233, 235, 238, 244, 245, 255, 257, 264, 265, 268], "earlier": [1, 105, 193, 197, 206, 208, 235, 245, 247, 266], "possibl": [1, 7, 8, 9, 14, 18, 19, 20, 31, 33, 34, 35, 40, 42, 43, 45, 46, 47, 49, 51, 52, 56, 57, 59, 61, 63, 65, 66, 68, 73, 75, 76, 78, 80, 81, 82, 84, 87, 91, 102, 103, 105, 116, 125, 127, 156, 158, 162, 164, 165, 166, 167, 175, 177, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 208, 209, 212, 213, 214, 215, 216, 217, 222, 227, 229, 230, 231, 232, 234, 235, 244, 245, 247, 261, 262, 263, 266, 271], "put": [1, 2, 5, 12, 14, 18, 33, 47, 48, 51, 52, 53, 57, 81, 82, 87, 134, 139, 143, 158, 159, 192, 196, 197, 205, 206, 208, 212, 217, 223, 228, 267, 271], "could": [1, 2, 5, 7, 18, 28, 33, 44, 51, 63, 76, 78, 81, 111, 114, 123, 126, 162, 165, 167, 183, 185, 186, 189, 191, 193, 196, 204, 206, 208, 212, 213, 214, 215, 216, 217, 220, 221, 228, 232, 245, 246, 263, 266, 271], "arbitrari": [1, 2, 7, 11, 14, 18, 19, 31, 36, 43, 44, 50, 51, 52, 55, 56, 59, 62, 63, 65, 81, 82, 87, 95, 127, 148, 151, 180, 182, 183, 186, 187, 189, 191, 193, 208, 212, 213, 214, 222, 232, 235, 241, 242, 260, 261, 266, 271, 272], "realli": [1, 5, 7, 8, 12, 18, 51, 63, 91, 116, 164, 186, 195, 197, 203, 205, 206, 208, 212, 228, 237, 263, 265], "traceback": [1, 2, 4, 7, 8, 18, 26, 27, 28, 33, 34, 43, 51, 52, 55, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 93, 101, 181, 183, 186, 187, 189, 192, 195, 203, 204, 212, 214, 215, 225, 227, 228, 230, 232, 234, 235, 237, 263, 267], "most": [1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 20, 26, 27, 28, 31, 32, 33, 34, 42, 43, 50, 51, 52, 55, 61, 63, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 101, 105, 109, 114, 121, 126, 127, 130, 164, 171, 175, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 196, 203, 204, 206, 209, 212, 213, 214, 215, 216, 225, 228, 229, 230, 231, 232, 234, 235, 237, 243, 245, 260, 263, 265, 266, 267, 269, 270, 271], "recent": [1, 2, 4, 7, 8, 12, 18, 26, 27, 28, 33, 34, 43, 51, 52, 55, 59, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 93, 101, 181, 183, 186, 187, 189, 192, 195, 203, 204, 212, 214, 215, 225, 228, 230, 232, 234, 235, 237, 263, 267], "typeerror": [1, 2, 8, 18, 26, 27, 28, 43, 51, 61, 66, 81, 83, 85, 89, 101, 136, 203, 204, 228, 235], "unsupport": [1, 2, 4, 101, 196], "operand": [1, 2, 43, 51, 173, 191, 243], "type": [1, 2, 4, 7, 8, 14, 16, 18, 27, 28, 31, 42, 43, 47, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 69, 76, 78, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 95, 97, 99, 101, 105, 109, 114, 129, 134, 148, 156, 157, 158, 160, 172, 175, 176, 178, 180, 182, 183, 186, 187, 190, 191, 192, 193, 194, 196, 197, 198, 204, 205, 206, 208, 209, 210, 211, 214, 220, 221, 222, 225, 227, 228, 229, 234, 235, 237, 244, 247, 250, 253, 258, 261, 263, 265, 266, 267, 270, 271, 272], "dict": [1, 2, 7, 33, 43, 52, 53, 67, 68, 81, 82, 87, 91, 93, 109, 110, 142, 154, 157, 168, 170, 172, 182, 185, 186, 187, 189, 191, 192, 193, 194, 196, 208, 209, 212, 213, 214, 215, 216, 220, 227, 228, 234, 241, 272], "main": [1, 2, 11, 13, 14, 15, 28, 29, 33, 51, 57, 76, 82, 87, 90, 114, 121, 160, 166, 176, 180, 182, 183, 187, 188, 196, 203, 212, 215, 221, 228, 271, 272], "reason": [1, 7, 8, 12, 15, 18, 33, 43, 49, 51, 55, 59, 76, 79, 85, 87, 109, 110, 114, 116, 120, 123, 126, 133, 167, 176, 180, 186, 189, 190, 193, 196, 204, 206, 208, 212, 214, 215, 225, 231, 232, 234, 235, 260, 261, 265, 266, 267], "solve_lin_si": [1, 188], "heurisch": [1, 78], "smith_normal_form": [1, 88, 185], "newmatrix": 1, "rather": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 24, 29, 33, 34, 42, 43, 44, 51, 55, 62, 67, 69, 76, 81, 82, 84, 87, 91, 93, 113, 120, 129, 142, 156, 160, 162, 171, 179, 183, 186, 189, 192, 194, 199, 206, 209, 211, 212, 215, 216, 231, 234, 235, 238, 249, 263, 265, 266], "holonom": [1, 72, 75, 115, 116, 117, 123, 124, 125, 251, 258], "polymatrix": 1, "risch": [1, 78, 261], "broken": [1, 40, 51, 179, 196, 212, 237], "20780": 1, "20759": 1, "20621": 1, "19882": 1, "18844": 1, "solut": [1, 2, 5, 8, 9, 18, 22, 33, 47, 51, 52, 57, 59, 61, 69, 73, 74, 75, 78, 87, 91, 98, 105, 109, 114, 117, 123, 126, 131, 167, 171, 183, 189, 190, 191, 192, 193, 194, 195, 204, 209, 210, 211, 212, 213, 214, 257, 272], "case": [1, 2, 5, 7, 8, 11, 12, 14, 15, 21, 31, 32, 33, 34, 36, 39, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 63, 66, 67, 68, 69, 73, 76, 78, 81, 82, 84, 87, 88, 91, 92, 93, 95, 101, 105, 108, 109, 114, 116, 117, 118, 125, 127, 129, 135, 146, 152, 157, 159, 161, 162, 167, 168, 175, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 201, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 220, 222, 225, 227, 229, 230, 232, 234, 235, 236, 237, 238, 241, 243, 244, 261, 265, 266, 267, 270, 271, 272], "pr": [1, 12, 50, 187, 189, 190, 192, 215], "depend": [1, 2, 7, 16, 18, 19, 20, 21, 31, 33, 34, 42, 43, 50, 51, 52, 53, 56, 57, 59, 63, 68, 75, 76, 78, 79, 80, 87, 91, 92, 93, 99, 103, 106, 109, 110, 113, 114, 116, 117, 123, 124, 134, 135, 136, 151, 160, 162, 164, 167, 176, 177, 182, 184, 187, 188, 189, 191, 192, 193, 196, 197, 202, 206, 208, 209, 212, 213, 214, 215, 216, 227, 228, 229, 230, 234, 235, 247, 249, 250, 263, 265], "21441": 1, "21427": 1, "21496": 1, "potenti": [1, 7, 63, 84, 87, 91, 109, 110, 111, 113, 122, 123, 173, 178, 186, 191, 203, 206, 208, 212, 214, 230, 231, 243, 248, 249], "impact": 1, "downstream": [1, 7], "altern": [1, 2, 8, 9, 12, 14, 18, 20, 33, 39, 42, 43, 50, 51, 55, 57, 58, 59, 82, 84, 88, 92, 114, 124, 126, 172, 179, 181, 182, 184, 185, 186, 191, 192, 196, 201, 203, 205, 214, 215, 217, 234, 263, 265, 267], "goal": [1, 32, 105, 130, 191, 193, 227, 228, 230, 264, 265], "perhap": [1, 33, 51, 81, 91, 147, 186, 214, 229, 260], "tableform": [1, 237], "isn": [1, 18, 78, 105, 114, 215, 265], "clear": [1, 7, 14, 27, 41, 51, 76, 80, 106, 179, 180, 182, 187, 189, 192, 206, 214, 215, 222, 227, 231, 249, 263], "what": [1, 2, 4, 5, 7, 8, 14, 15, 16, 18, 22, 23, 31, 33, 43, 45, 50, 51, 52, 53, 57, 58, 61, 62, 66, 76, 78, 80, 87, 91, 93, 106, 109, 111, 114, 117, 129, 161, 162, 165, 167, 172, 179, 180, 187, 188, 189, 192, 195, 196, 197, 203, 205, 206, 208, 209, 210, 212, 214, 221, 225, 227, 229, 230, 235, 244, 245, 250, 261, 263, 264, 266, 270, 271], "advis": [1, 7, 32, 114], "know": [1, 2, 7, 8, 12, 14, 15, 18, 26, 28, 32, 43, 51, 52, 55, 63, 68, 76, 78, 87, 91, 111, 114, 130, 156, 160, 164, 165, 167, 171, 172, 179, 180, 182, 192, 193, 195, 196, 206, 208, 212, 214, 215, 216, 230, 234, 235, 245, 260, 261, 263, 264, 265, 266, 269, 271], "usecas": 1, "unclear": [1, 7, 105], "write": [1, 5, 7, 8, 12, 16, 21, 23, 24, 33, 40, 51, 52, 58, 59, 76, 78, 84, 129, 142, 179, 180, 184, 189, 191, 196, 205, 206, 209, 212, 215, 221, 227, 228, 229, 235, 264, 265, 266, 271], "our": [1, 5, 15, 17, 18, 20, 33, 51, 59, 76, 87, 91, 167, 179, 180, 182, 183, 185, 191, 192, 193, 196, 203, 206, 209, 212, 215, 227, 260, 263, 264, 266, 271], "mail": [1, 12, 20, 196, 264], "line2dbaseseri": [1, 182], "coordin": [1, 25, 33, 52, 53, 57, 59, 60, 62, 66, 68, 84, 87, 94, 97, 99, 103, 108, 109, 110, 113, 114, 115, 116, 118, 120, 123, 124, 125, 128, 130, 138, 140, 159, 160, 163, 171, 172, 173, 174, 175, 177, 180, 183, 191, 192, 204, 212, 241, 242, 243, 246, 248, 250, 258], "y": [1, 2, 4, 7, 8, 12, 14, 18, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 76, 78, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 95, 97, 99, 101, 106, 107, 108, 111, 114, 116, 117, 118, 120, 121, 122, 127, 129, 130, 139, 140, 143, 146, 151, 157, 159, 160, 162, 163, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 228, 229, 232, 234, 235, 237, 241, 243, 244, 245, 246, 247, 249, 250, 260, 261, 263, 265, 266, 270, 271, 272], "segment": [1, 14, 42, 61, 63, 64, 65, 66, 67, 68, 179, 182, 212, 227], "matplotlib": [1, 9, 11, 14, 15, 20, 74, 79, 99, 129, 142, 176, 182, 270], "linecollect": [1, 182], "bokeh": 1, "plotli": 1, "mayavi": 1, "k3d": 1, "insid": [1, 2, 15, 18, 42, 43, 48, 51, 61, 62, 67, 94, 105, 107, 117, 126, 161, 162, 167, 176, 180, 192, 196, 204, 206, 209, 214, 215, 216, 218, 220, 231, 266, 267], "matplotlibbackend": [1, 182], "note": [1, 2, 5, 7, 8, 9, 11, 14, 15, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 47, 49, 50, 52, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 76, 78, 79, 81, 82, 84, 87, 91, 93, 101, 102, 106, 107, 108, 109, 110, 113, 114, 116, 117, 120, 127, 129, 135, 138, 146, 156, 157, 159, 161, 162, 163, 165, 171, 172, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 245, 247, 249, 258, 260, 261, 262, 264, 265, 266, 267, 271], "previous": [1, 11, 12, 50, 121, 177, 195, 208, 216, 247], "get_point": [1, 182], "uniformli": [1, 5, 42, 67, 68, 94, 99, 182, 230], "correctli": [1, 8, 9, 11, 12, 14, 15, 18, 31, 55, 76, 79, 87, 114, 116, 126, 196, 203, 209, 212], "avoid": [1, 8, 15, 16, 18, 33, 34, 51, 52, 57, 76, 78, 81, 87, 90, 93, 117, 126, 156, 179, 180, 184, 186, 192, 196, 197, 204, 208, 212, 214, 216, 220, 229, 232, 235, 263, 264], "adapt": [1, 99, 182, 202, 214, 234, 240], "get_data": [1, 182, 238], "dft": [1, 54, 104], "fourier": [1, 51, 59, 78, 104, 155, 200], "as_explicit": [1, 84, 87, 104, 218], "sqrt": [1, 7, 14, 18, 25, 29, 30, 31, 33, 51, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 75, 76, 78, 79, 82, 83, 87, 91, 93, 94, 101, 103, 116, 131, 133, 135, 136, 141, 146, 156, 157, 159, 160, 162, 163, 165, 172, 177, 180, 181, 184, 186, 187, 189, 191, 192, 195, 196, 197, 202, 205, 206, 208, 209, 211, 212, 214, 215, 216, 234, 235, 237, 241, 249, 250, 260, 265, 270, 271, 272], "exp": [1, 2, 7, 18, 25, 31, 33, 41, 50, 51, 53, 55, 56, 58, 59, 69, 70, 73, 76, 78, 82, 84, 87, 91, 103, 138, 141, 157, 163, 181, 186, 187, 192, 193, 196, 198, 203, 206, 208, 212, 213, 214, 215, 216, 217, 234, 250, 261, 265, 267, 272], "pi": [1, 2, 4, 7, 14, 18, 24, 25, 26, 28, 29, 30, 31, 33, 43, 50, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 70, 76, 78, 87, 91, 103, 116, 129, 131, 133, 134, 135, 136, 138, 146, 157, 159, 160, 163, 165, 172, 181, 182, 184, 186, 187, 192, 196, 199, 203, 204, 205, 206, 208, 211, 212, 214, 215, 216, 234, 241, 243, 250, 260, 265, 271], "contain": [1, 2, 3, 8, 9, 11, 12, 14, 15, 18, 24, 26, 27, 31, 32, 33, 34, 42, 43, 47, 49, 50, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 67, 68, 77, 78, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 96, 99, 100, 102, 106, 109, 110, 111, 113, 116, 117, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 149, 152, 154, 157, 159, 162, 171, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 196, 197, 198, 203, 204, 206, 208, 209, 210, 212, 213, 214, 215, 216, 220, 221, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 241, 243, 251, 252, 261, 263, 267, 271], "discret": [1, 31, 33, 34, 41, 43, 51, 52, 59, 91, 162, 167, 198, 201, 212, 214, 215, 252, 260], "transform": [1, 25, 30, 33, 47, 50, 51, 52, 53, 55, 56, 59, 66, 77, 84, 87, 99, 101, 116, 134, 155, 157, 159, 164, 184, 187, 189, 191, 192, 198, 203, 204, 205, 208, 209, 212, 213, 214, 215, 216, 221, 229, 235, 241, 247, 248, 252, 259, 265], "mathemat": [1, 4, 7, 11, 12, 15, 16, 18, 19, 23, 27, 28, 31, 33, 34, 37, 41, 43, 50, 51, 52, 53, 56, 57, 58, 59, 64, 65, 76, 78, 81, 84, 87, 91, 92, 93, 101, 102, 105, 117, 128, 167, 177, 179, 180, 183, 184, 186, 187, 190, 195, 196, 204, 205, 209, 212, 215, 216, 221, 228, 229, 235, 241, 244, 247, 249, 260, 263, 264, 265, 266, 269, 271], "locat": [1, 15, 43, 51, 65, 87, 91, 94, 95, 97, 108, 117, 126, 130, 175, 177, 191, 192, 196, 208, 216, 230, 239, 241, 244, 246, 248, 249], "furthermor": [1, 12, 18, 29, 51, 52, 81, 191, 205, 263, 265, 266], "unevalu": [1, 7, 8, 18, 27, 28, 31, 43, 50, 51, 57, 59, 68, 78, 91, 101, 139, 143, 150, 151, 162, 192, 195, 203, 204, 208, 212, 214, 215, 216, 261, 265, 266, 272], "represent": [1, 18, 25, 32, 33, 34, 42, 45, 51, 52, 59, 63, 71, 73, 75, 76, 78, 80, 81, 82, 83, 84, 90, 91, 98, 99, 104, 105, 106, 113, 123, 126, 127, 131, 151, 156, 157, 159, 160, 162, 164, 171, 176, 177, 179, 182, 183, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 206, 208, 209, 212, 215, 216, 221, 222, 237, 241, 243, 250, 261, 263, 266], "21626": 1, "expos": [1, 32, 216], "mutat": [1, 101, 185, 187, 216], "flat": [1, 65, 82, 228], "cannot": [1, 2, 4, 8, 11, 12, 14, 15, 18, 20, 26, 27, 28, 29, 30, 31, 33, 43, 48, 50, 51, 53, 55, 56, 57, 61, 63, 64, 66, 68, 73, 78, 80, 83, 85, 87, 89, 91, 101, 157, 165, 167, 179, 180, 182, 187, 189, 191, 192, 193, 196, 203, 204, 208, 209, 211, 212, 214, 215, 216, 217, 225, 227, 228, 229, 234, 238, 241, 242, 265, 266, 267, 271, 272], "itself": [1, 11, 12, 14, 15, 18, 29, 40, 42, 43, 49, 51, 53, 56, 64, 68, 73, 91, 109, 113, 114, 127, 152, 159, 177, 179, 182, 183, 186, 189, 191, 192, 196, 204, 205, 208, 215, 220, 221, 222, 229, 231, 234, 249, 265], "todok": [1, 82], "read": [1, 12, 14, 15, 17, 18, 43, 57, 76, 91, 95, 129, 179, 180, 185, 186, 187, 193, 196, 209, 222, 223, 231, 238, 264, 270, 271], "technic": [1, 15, 18, 32, 51, 129, 148, 183, 212, 229, 234, 247, 263, 266], "thei": [1, 2, 7, 8, 11, 12, 14, 15, 18, 20, 29, 32, 33, 34, 39, 41, 42, 43, 49, 50, 51, 52, 53, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 76, 78, 79, 81, 82, 84, 85, 87, 90, 91, 93, 105, 109, 111, 113, 114, 116, 121, 123, 124, 125, 126, 129, 130, 136, 141, 146, 151, 154, 159, 164, 165, 167, 168, 172, 175, 176, 177, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 196, 197, 202, 203, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 222, 225, 227, 229, 231, 234, 235, 237, 241, 247, 249, 261, 263, 264, 265, 266, 267, 271], "underscor": [1, 12, 14, 51, 87, 212, 222, 230], "prior": [1, 12, 20, 175, 192, 208, 267], "result": [1, 2, 4, 5, 7, 8, 9, 11, 14, 18, 25, 26, 27, 28, 29, 31, 32, 33, 41, 42, 43, 47, 50, 51, 52, 53, 55, 57, 59, 63, 68, 69, 73, 75, 76, 78, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 101, 102, 105, 106, 107, 110, 114, 117, 123, 126, 129, 147, 154, 156, 157, 159, 161, 162, 164, 165, 167, 171, 172, 180, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 223, 227, 228, 229, 231, 232, 234, 235, 237, 241, 243, 245, 263, 265, 266, 267, 271], "ey": [1, 82, 83, 84, 85, 86, 87, 89, 185, 191, 209, 217, 222, 237, 267], "z": [1, 2, 7, 14, 18, 29, 30, 33, 34, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 63, 64, 65, 66, 67, 76, 78, 81, 82, 84, 87, 93, 94, 95, 103, 106, 107, 108, 111, 114, 116, 117, 118, 120, 121, 122, 126, 127, 129, 130, 131, 140, 142, 146, 156, 157, 159, 163, 167, 171, 172, 173, 174, 175, 177, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 228, 229, 235, 241, 243, 244, 245, 246, 247, 249, 250, 260, 261, 263, 265, 266, 270, 271, 272], "true": [1, 2, 4, 7, 8, 10, 11, 14, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 76, 78, 79, 81, 82, 83, 84, 87, 88, 91, 93, 94, 95, 99, 101, 102, 103, 104, 105, 107, 109, 110, 114, 116, 117, 129, 133, 134, 143, 146, 147, 154, 156, 157, 160, 161, 162, 165, 171, 172, 173, 174, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 227, 228, 229, 230, 232, 234, 235, 237, 241, 243, 244, 245, 246, 247, 250, 260, 261, 263, 265, 266, 267, 270, 271, 272], "design": [1, 4, 8, 11, 12, 14, 18, 22, 29, 34, 41, 51, 87, 90, 93, 129, 130, 186, 190, 196, 201, 206, 212, 215, 265, 266, 270], "converg": [1, 33, 50, 55, 59, 77, 78, 91, 131, 192, 199, 203, 206, 261], "legacy_matrix": [1, 78], "singl": [1, 5, 7, 9, 12, 15, 18, 24, 32, 33, 35, 42, 51, 52, 56, 57, 59, 64, 65, 67, 68, 69, 76, 78, 81, 82, 87, 90, 93, 101, 102, 107, 108, 117, 142, 146, 148, 156, 159, 162, 169, 172, 175, 182, 183, 185, 186, 187, 189, 191, 192, 196, 197, 198, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 221, 227, 229, 231, 234, 235, 237, 261, 263, 266, 267, 272], "combin": [1, 2, 14, 18, 32, 51, 55, 56, 59, 71, 78, 80, 81, 82, 91, 95, 101, 113, 123, 130, 141, 148, 156, 157, 159, 160, 161, 165, 167, 168, 183, 184, 186, 187, 189, 191, 192, 196, 197, 205, 206, 208, 209, 212, 214, 216, 217, 231, 234, 260, 263, 266], "whole": [1, 7, 14, 51, 53, 59, 78, 95, 103, 182, 183, 191, 192, 196, 199, 204, 206, 212, 215, 234], "left": [1, 5, 7, 12, 15, 18, 22, 31, 33, 34, 42, 43, 47, 51, 52, 53, 56, 57, 59, 67, 68, 74, 76, 78, 79, 81, 82, 87, 90, 91, 101, 106, 113, 127, 134, 141, 146, 150, 151, 154, 159, 172, 177, 181, 182, 183, 185, 192, 193, 194, 195, 196, 198, 199, 203, 204, 205, 206, 208, 212, 213, 214, 215, 216, 227, 228, 229, 231, 234, 247, 261, 265, 267, 271], "intact": [1, 12, 33, 228], "theano": [1, 11, 129, 270], "discontinu": [1, 31, 55, 57, 59, 78, 94, 199], "project": [1, 13, 15, 16, 21, 23, 33, 64, 65, 66, 80, 87, 128, 228, 229, 241], "aesara": [1, 11, 33, 129, 252, 259], "renam": [1, 12, 33, 78], "aesaracod": [1, 11, 33, 92, 196], "correspond": [1, 5, 7, 8, 12, 14, 15, 18, 31, 32, 33, 34, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 57, 61, 62, 64, 65, 66, 67, 74, 76, 80, 81, 82, 87, 90, 91, 94, 95, 101, 107, 109, 113, 114, 116, 117, 130, 134, 138, 152, 156, 157, 159, 163, 164, 167, 172, 175, 177, 181, 182, 184, 185, 186, 187, 189, 191, 192, 196, 202, 203, 206, 208, 209, 212, 213, 214, 215, 216, 218, 220, 221, 222, 229, 230, 231, 232, 234, 235, 237, 241, 242, 244, 245, 247, 249, 266, 272], "theano_cod": 1, "aesara_cod": [1, 196], "theanoprint": 1, "aesaraprint": [1, 196], "predic": [1, 21, 26, 27, 31, 93, 192, 208, 234, 252], "experienc": [1, 34], "big": [1, 2, 5, 7, 35, 51, 53, 91, 129, 142, 181, 195, 196, 203, 237, 261, 263], "registr": 1, "done": [1, 2, 5, 12, 14, 18, 27, 28, 30, 31, 32, 33, 42, 44, 49, 51, 52, 53, 56, 59, 62, 63, 76, 78, 82, 87, 91, 114, 116, 121, 127, 129, 148, 157, 158, 159, 162, 164, 165, 172, 177, 179, 180, 182, 183, 185, 189, 193, 195, 196, 197, 205, 208, 209, 212, 214, 215, 216, 221, 222, 227, 228, 231, 235, 244, 245, 260, 263, 265, 266, 267], "add_handl": 1, "remove_handl": [1, 26], "multipledispatch": [1, 26], "instanc": [1, 4, 7, 8, 10, 12, 14, 15, 18, 26, 27, 28, 30, 32, 33, 42, 44, 46, 51, 53, 55, 56, 57, 59, 64, 67, 68, 69, 74, 75, 78, 79, 82, 84, 87, 91, 93, 94, 102, 106, 109, 113, 114, 130, 135, 142, 146, 152, 156, 157, 159, 161, 162, 172, 174, 176, 177, 182, 186, 187, 191, 192, 193, 194, 196, 204, 206, 208, 212, 214, 215, 216, 220, 221, 222, 227, 228, 229, 231, 234, 235, 241, 242, 243, 244, 245, 247, 249, 260, 261, 266, 271, 272], "regist": [1, 26, 27, 28, 52, 158], "register_mani": [1, 27, 28], "must": [1, 2, 7, 8, 11, 12, 13, 14, 25, 26, 27, 28, 33, 42, 43, 45, 47, 49, 50, 51, 52, 53, 56, 57, 59, 61, 64, 67, 70, 73, 74, 76, 78, 81, 82, 83, 84, 87, 90, 91, 94, 95, 97, 99, 101, 102, 109, 110, 114, 116, 123, 124, 125, 126, 127, 129, 142, 157, 159, 162, 171, 172, 180, 181, 182, 183, 184, 187, 189, 191, 192, 196, 197, 204, 205, 206, 208, 209, 212, 214, 215, 216, 220, 221, 227, 228, 229, 230, 231, 232, 234, 235, 238, 263, 265, 266, 270, 271], "askprimehandl": 1, "staticmethod": [1, 227], "def": [1, 2, 5, 7, 8, 12, 14, 15, 18, 27, 28, 32, 51, 56, 63, 81, 87, 91, 93, 121, 157, 186, 192, 196, 205, 208, 215, 230, 232, 234, 235, 238, 260, 263, 266, 267, 271], "integ": [1, 2, 7, 11, 14, 15, 18, 22, 26, 27, 28, 31, 33, 34, 40, 42, 43, 44, 45, 47, 50, 52, 53, 54, 55, 56, 58, 59, 61, 64, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 94, 101, 103, 151, 156, 158, 159, 160, 162, 164, 172, 174, 176, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 201, 202, 203, 205, 206, 208, 209, 212, 214, 215, 216, 220, 221, 222, 228, 229, 231, 234, 237, 261, 263, 266, 270, 271], "register_handl": [1, 26], "prime": [1, 7, 26, 27, 28, 42, 49, 50, 51, 52, 54, 56, 59, 91, 133, 183, 184, 186, 187, 188, 189, 192, 206, 208, 209, 216, 231], "definit": [1, 2, 8, 14, 25, 28, 33, 34, 42, 43, 48, 50, 51, 53, 54, 56, 57, 59, 64, 67, 71, 74, 76, 78, 82, 83, 84, 87, 91, 93, 116, 120, 121, 127, 164, 167, 170, 172, 179, 180, 183, 184, 187, 192, 193, 196, 203, 216, 217, 228, 229, 230, 234, 235, 241, 244, 245, 246, 247, 261, 271], "Not": [1, 8, 18, 51, 56, 81, 101, 196, 215, 216, 234, 265, 272], "exist": [1, 5, 7, 12, 18, 31, 32, 35, 42, 51, 55, 61, 63, 66, 67, 68, 69, 77, 78, 81, 87, 91, 97, 152, 177, 180, 182, 183, 184, 185, 189, 191, 196, 203, 204, 206, 209, 212, 214, 215, 227, 235, 245, 265, 267, 272], "primepred": [1, 29], "q": [1, 2, 4, 7, 24, 25, 26, 27, 28, 29, 30, 33, 43, 47, 50, 51, 52, 59, 68, 73, 74, 76, 78, 80, 82, 87, 91, 93, 94, 101, 102, 109, 110, 113, 114, 116, 117, 122, 124, 125, 126, 129, 130, 131, 142, 156, 162, 165, 172, 173, 174, 175, 176, 177, 179, 182, 183, 184, 186, 187, 189, 191, 192, 193, 195, 196, 198, 206, 209, 212, 214, 216, 221, 222, 237, 241, 243, 244, 246, 249, 267, 271], "_": [1, 2, 5, 12, 13, 14, 15, 18, 27, 28, 32, 39, 40, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 65, 66, 67, 76, 78, 81, 82, 83, 84, 85, 87, 89, 91, 93, 101, 124, 127, 129, 141, 167, 171, 176, 179, 181, 187, 192, 195, 196, 197, 199, 203, 204, 205, 206, 208, 209, 212, 213, 214, 217, 234, 243, 245, 270], "20209": 1, "stochast": 1, "process": [1, 2, 7, 14, 15, 16, 21, 30, 33, 42, 43, 49, 51, 52, 57, 59, 67, 76, 78, 87, 91, 101, 110, 114, 116, 121, 124, 126, 129, 182, 183, 189, 196, 197, 204, 208, 212, 214, 227, 231, 271], "timestamp": 1, "wienerprocess": [1, 216], "posit": [1, 2, 7, 8, 12, 18, 26, 27, 28, 30, 32, 33, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 67, 76, 78, 80, 81, 82, 83, 87, 88, 90, 91, 94, 95, 97, 101, 103, 108, 111, 114, 116, 117, 120, 122, 126, 127, 129, 131, 134, 136, 140, 157, 160, 162, 173, 174, 175, 177, 179, 180, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 201, 202, 204, 205, 206, 208, 209, 212, 214, 215, 216, 217, 222, 234, 241, 243, 244, 245, 247, 249, 250, 267, 271, 272], "would": [1, 2, 5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 22, 32, 33, 34, 40, 42, 43, 50, 51, 52, 56, 63, 67, 76, 78, 82, 87, 91, 93, 94, 101, 102, 103, 105, 107, 114, 117, 126, 129, 157, 159, 162, 167, 171, 172, 177, 179, 182, 185, 186, 187, 189, 192, 193, 195, 196, 197, 199, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 220, 221, 227, 229, 231, 234, 235, 237, 238, 245, 246, 247, 249, 260, 261, 263, 265, 266, 267, 270, 271, 272], "normaldistribut": [1, 216], "made": [1, 2, 7, 12, 15, 18, 45, 47, 51, 52, 57, 60, 61, 64, 67, 68, 78, 81, 87, 91, 93, 114, 126, 129, 180, 183, 187, 189, 191, 192, 197, 203, 204, 205, 208, 212, 214, 215, 216, 229, 234, 237, 249, 266], "store": [1, 2, 7, 9, 13, 32, 33, 41, 42, 51, 73, 75, 84, 87, 91, 93, 109, 111, 113, 114, 127, 156, 162, 175, 179, 180, 182, 183, 186, 191, 192, 193, 203, 206, 217, 220, 221, 229, 230, 231, 234, 245, 247, 266], "basic": [1, 7, 11, 12, 13, 14, 15, 18, 23, 25, 27, 32, 33, 34, 39, 42, 46, 49, 50, 54, 57, 67, 69, 74, 75, 76, 81, 82, 85, 86, 88, 101, 108, 114, 124, 125, 127, 129, 130, 136, 146, 160, 167, 170, 177, 178, 180, 182, 183, 185, 187, 188, 189, 191, 193, 194, 196, 197, 203, 208, 209, 212, 213, 214, 215, 216, 227, 229, 234, 235, 239, 246, 247, 248, 254, 261, 262, 263, 264, 269], "20078": 1, "misspel": 1, "spell": [1, 14, 212], "absorbing_prob": [1, 216], "absorb": [1, 76, 212, 216, 261], "probabilit": [1, 216], "es": 1, "standard": [1, 2, 7, 11, 15, 18, 33, 51, 55, 57, 59, 74, 76, 78, 79, 80, 81, 85, 87, 91, 92, 93, 104, 139, 143, 172, 177, 183, 186, 187, 189, 196, 199, 204, 208, 209, 212, 215, 216, 229, 235, 238, 244, 249, 260, 263, 271], "shutil": 1, "power": [1, 2, 25, 30, 33, 41, 42, 43, 52, 54, 55, 57, 73, 74, 76, 78, 80, 82, 84, 91, 92, 101, 114, 129, 134, 145, 148, 161, 164, 167, 168, 172, 183, 184, 186, 187, 188, 189, 191, 192, 196, 197, 200, 203, 205, 207, 209, 212, 214, 215, 216, 220, 229, 234, 252, 254, 260, 261, 262, 263, 264, 266, 267, 270], "sever": [1, 4, 7, 11, 12, 13, 14, 18, 20, 33, 36, 42, 43, 50, 51, 55, 56, 58, 59, 63, 76, 78, 91, 107, 167, 169, 182, 184, 186, 189, 191, 195, 196, 197, 203, 204, 212, 216, 227, 229, 239, 251, 263, 267, 270], "immut": [1, 51, 83, 86, 89, 180, 187, 212, 217, 255, 260, 267], "rest": [1, 12, 76, 79, 81, 85, 95, 103, 114, 117, 123, 167, 183, 186, 216, 234, 263, 264, 271], "coordsystem": [1, 53], "explicit": [1, 7, 18, 43, 50, 51, 55, 67, 68, 78, 90, 91, 113, 114, 117, 126, 130, 180, 183, 192, 195, 196, 198, 204, 206, 212, 213, 214, 215, 219, 231], "appropi": 1, "patch": [1, 53, 196], "real": [1, 2, 4, 5, 7, 8, 18, 25, 27, 28, 30, 31, 33, 43, 51, 52, 53, 55, 56, 57, 58, 59, 63, 67, 68, 73, 76, 78, 81, 82, 84, 87, 91, 93, 97, 103, 114, 129, 131, 134, 135, 142, 160, 174, 181, 184, 187, 188, 191, 192, 193, 196, 197, 199, 203, 206, 208, 211, 212, 214, 215, 216, 221, 225, 229, 238, 265, 271, 272], "similarli": [1, 7, 47, 51, 52, 59, 63, 87, 94, 95, 101, 109, 127, 182, 183, 186, 191, 193, 203, 204, 206, 212, 227, 235, 245, 246, 267], "manifold": [1, 53], "track": [1, 2, 42, 51, 55, 59, 113, 127, 146, 180, 203, 222, 261], "separ": [1, 2, 5, 8, 12, 14, 18, 32, 39, 51, 52, 57, 59, 76, 78, 87, 102, 113, 126, 127, 130, 135, 159, 162, 171, 172, 182, 184, 187, 189, 192, 193, 196, 205, 208, 209, 213, 215, 220, 225, 227, 231, 235, 237, 241, 263], "coord_system": 1, "connect_to": 1, "coord_tuple_transform_to": [1, 53], "constructor": [1, 18, 27, 28, 32, 33, 38, 42, 43, 44, 51, 58, 59, 80, 85, 87, 117, 155, 156, 160, 164, 182, 183, 185, 186, 187, 188, 196, 204, 212, 221, 229, 244, 262, 266], "docstr": [1, 2, 12, 16, 18, 21, 23, 32, 33, 44, 51, 73, 76, 78, 87, 91, 96, 100, 102, 123, 127, 132, 149, 155, 156, 158, 178, 192, 199, 202, 203, 205, 208, 212, 213, 214, 215, 221, 222, 227, 230, 235, 237, 248, 251], "str": [1, 18, 27, 32, 33, 34, 43, 51, 52, 53, 55, 60, 61, 64, 67, 68, 79, 81, 84, 91, 93, 99, 109, 111, 129, 146, 156, 162, 172, 174, 175, 182, 187, 191, 196, 208, 212, 216, 232, 234, 235, 237, 241], "wrong": [1, 12, 15, 42, 51, 52, 59, 61, 87, 172, 186, 210, 212, 230, 263, 267], "right": [1, 2, 5, 9, 12, 14, 15, 18, 22, 31, 33, 34, 42, 43, 47, 51, 52, 54, 56, 57, 59, 67, 68, 76, 78, 81, 82, 87, 90, 91, 93, 94, 95, 101, 109, 113, 114, 126, 127, 129, 130, 134, 141, 146, 148, 150, 151, 156, 159, 162, 172, 177, 180, 181, 182, 183, 185, 191, 193, 194, 196, 198, 199, 203, 204, 206, 212, 213, 215, 216, 227, 229, 231, 234, 247, 261, 265, 267, 271], "unord": [1, 2, 51, 91, 187, 215, 234, 235], "imposs": [1, 12, 14, 18, 51, 186, 205, 212, 213, 225, 263, 271], "lambidfi": 1, "thu": [1, 2, 5, 11, 12, 29, 36, 42, 43, 51, 52, 53, 57, 59, 74, 76, 78, 82, 85, 87, 90, 91, 102, 113, 117, 123, 126, 167, 172, 184, 189, 191, 193, 197, 203, 206, 208, 229, 234, 235, 245, 246, 263, 266, 271, 272], "guess": [1, 32, 52, 55, 76, 79, 176, 189, 192, 206, 209, 266], "mul": [1, 2, 4, 14, 18, 25, 76, 78, 82, 91, 142, 146, 156, 157, 185, 186, 187, 191, 192, 196, 197, 198, 205, 208, 212, 213, 214, 215, 220, 252, 266], "pow": [1, 2, 14, 25, 30, 33, 52, 57, 76, 82, 91, 161, 185, 186, 187, 192, 196, 198, 205, 208, 214, 215, 266, 270], "construct": [1, 5, 27, 28, 32, 33, 38, 51, 53, 57, 59, 61, 65, 67, 79, 84, 87, 92, 95, 105, 109, 111, 114, 116, 147, 151, 160, 161, 164, 168, 183, 186, 187, 189, 191, 192, 196, 209, 214, 216, 217, 219, 221, 229, 231, 232, 244, 246, 247, 263, 266, 267, 271], "directli": [1, 2, 5, 7, 8, 11, 12, 14, 18, 20, 27, 28, 31, 32, 33, 42, 50, 51, 53, 57, 62, 82, 84, 87, 91, 114, 148, 160, 165, 172, 175, 182, 183, 186, 187, 191, 192, 204, 205, 206, 208, 209, 212, 213, 215, 216, 227, 228, 229, 230, 231, 232, 261, 272], "superclass": [1, 7, 50, 51, 78, 84, 187], "scalar": [1, 25, 51, 53, 66, 80, 82, 84, 87, 92, 111, 114, 161, 172, 173, 174, 178, 180, 183, 185, 189, 196, 212, 217, 229, 235, 241, 242, 243, 244, 245, 246, 248, 250], "numer": [1, 2, 5, 7, 11, 14, 22, 29, 31, 33, 50, 51, 56, 59, 63, 67, 71, 74, 87, 91, 93, 97, 98, 99, 101, 109, 110, 114, 116, 123, 126, 130, 134, 141, 144, 159, 166, 171, 180, 182, 186, 187, 189, 190, 191, 192, 195, 196, 205, 206, 208, 212, 214, 215, 221, 227, 228, 234, 235, 252, 260, 263, 267, 271], "sin": [1, 2, 7, 14, 15, 18, 20, 22, 25, 31, 33, 50, 51, 53, 55, 56, 58, 59, 60, 61, 65, 69, 70, 73, 74, 75, 76, 78, 79, 82, 87, 92, 93, 103, 106, 107, 108, 113, 114, 116, 118, 120, 121, 122, 126, 129, 134, 136, 160, 172, 174, 175, 177, 179, 180, 181, 182, 184, 186, 192, 193, 195, 196, 197, 198, 199, 203, 204, 205, 206, 208, 211, 212, 214, 215, 217, 223, 229, 235, 241, 242, 243, 244, 245, 250, 260, 261, 263, 265, 266, 271, 272], "boolean": [1, 18, 21, 26, 27, 28, 29, 30, 31, 33, 51, 57, 61, 65, 66, 67, 68, 79, 82, 87, 88, 91, 94, 99, 101, 147, 172, 174, 176, 182, 185, 187, 189, 191, 193, 196, 208, 212, 214, 216, 234, 243, 254, 267], "sens": [1, 5, 7, 18, 25, 29, 31, 32, 51, 53, 56, 59, 76, 81, 109, 116, 167, 172, 180, 183, 189, 191, 205, 206, 208, 215, 216, 228, 229, 234, 249, 271], "exponenti": [1, 2, 7, 25, 33, 42, 47, 51, 52, 56, 58, 78, 81, 82, 87, 91, 93, 148, 164, 193, 208, 215, 216, 262, 263, 267], "complex": [1, 2, 4, 7, 14, 18, 25, 28, 30, 31, 33, 42, 51, 52, 54, 55, 56, 58, 59, 63, 73, 76, 82, 83, 87, 91, 92, 93, 99, 101, 105, 114, 129, 131, 135, 145, 148, 150, 151, 162, 171, 172, 180, 184, 185, 187, 188, 191, 192, 196, 197, 201, 206, 208, 212, 214, 215, 216, 229, 237, 271, 272], "manual": [1, 9, 11, 12, 15, 18, 33, 34, 42, 55, 61, 78, 79, 93, 101, 113, 114, 126, 130, 182, 189, 196, 212, 214, 215, 230, 261, 271], "trick": [1, 2, 47, 206, 222], "treat": [1, 7, 8, 18, 41, 42, 49, 51, 56, 59, 66, 67, 87, 93, 111, 114, 135, 172, 177, 184, 186, 187, 189, 191, 192, 193, 195, 196, 203, 204, 206, 208, 209, 212, 220, 228, 231, 247, 263, 267], "cdot": [1, 7, 34, 50, 56, 59, 69, 73, 74, 76, 82, 84, 87, 91, 102, 104, 127, 167, 177, 179, 180, 181, 183, 184, 192, 199, 203, 206, 212, 214, 217, 218, 246, 247, 265, 266, 271], "try": [1, 2, 7, 8, 14, 15, 16, 18, 43, 50, 51, 55, 59, 61, 66, 76, 78, 81, 84, 87, 90, 91, 152, 154, 161, 162, 182, 186, 191, 196, 201, 203, 204, 205, 206, 208, 209, 212, 214, 235, 237, 260, 263, 266, 267, 271], "attributeerror": [1, 7, 51, 87, 215, 235, 267], "as_coeff_mul": [1, 51, 76, 84], "tri": [1, 2, 7, 32, 51, 59, 67, 76, 78, 116, 126, 157, 183, 184, 191, 196, 198, 208, 212, 213, 215, 227, 263, 271], "follow": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 26, 28, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 50, 51, 52, 55, 56, 57, 59, 63, 65, 67, 74, 75, 76, 78, 81, 82, 84, 87, 91, 92, 94, 95, 108, 109, 114, 116, 123, 124, 125, 126, 127, 129, 131, 135, 154, 157, 159, 162, 165, 167, 172, 177, 179, 180, 181, 182, 183, 184, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 227, 230, 231, 234, 235, 238, 244, 245, 247, 260, 261, 263, 264, 266, 267, 271, 272], "benchmark": [1, 116, 128], "random": [1, 11, 14, 35, 40, 42, 43, 49, 52, 61, 64, 65, 86, 87, 91, 146, 158, 182, 189, 196, 226, 227, 230, 234, 252, 258, 263, 267, 271], "runtest": [1, 227], "tmpfile": 1, "random_complex_numb": 1, "verify_numer": 1, "test_derivative_numer": 1, "_randrang": [1, 52], "_randint": [1, 189], "explicitli": [1, 7, 12, 18, 33, 42, 43, 51, 52, 54, 57, 59, 64, 68, 84, 87, 92, 101, 114, 171, 172, 182, 184, 186, 187, 189, 192, 196, 208, 212, 232, 263, 267, 270, 272], "as_poli": [1, 51, 184, 192], "as_expr": [1, 51, 87, 186, 191, 192, 193, 267], "combintor": 1, "control": [1, 2, 7, 11, 13, 18, 32, 34, 51, 52, 55, 76, 81, 82, 126, 129, 142, 146, 157, 158, 162, 166, 192, 193, 197, 204, 209, 215, 234, 257, 258, 260], "whether": [1, 7, 8, 9, 12, 18, 31, 32, 33, 37, 42, 50, 51, 52, 58, 59, 63, 66, 78, 79, 81, 82, 87, 91, 105, 110, 113, 114, 150, 169, 174, 180, 182, 185, 186, 187, 191, 192, 196, 199, 203, 204, 208, 209, 212, 214, 215, 216, 217, 227, 229, 234, 235, 241, 243, 263, 267], "cycl": [1, 15, 33, 39, 42, 43, 49, 51, 54, 56, 82, 91, 136, 204, 234], "bad": [1, 9, 50, 91, 164, 196], "global": [1, 12, 14, 26, 27, 28, 31, 33, 34, 51, 63, 76, 93, 146, 152, 172, 174, 182, 183, 186, 187, 189, 196, 209, 212, 213, 216, 227, 229, 230, 235, 243], "perm_cycl": [1, 43, 196], "printer": [1, 18, 43, 51, 59, 79, 87, 92, 176, 221, 228, 229, 235, 253, 259, 262, 266], "easiest": [1, 2, 13, 15, 51, 183, 186, 209, 235, 245, 260, 266, 271], "configur": [1, 11, 12, 13, 43, 81, 101, 109, 117, 120, 122, 123, 124, 126, 188, 196], "init_print": [1, 20, 33, 43, 55, 78, 79, 87, 95, 176, 183, 184, 195, 261, 265, 267, 270, 271, 272], "current": [1, 2, 7, 12, 15, 25, 28, 31, 32, 33, 34, 35, 42, 45, 46, 48, 49, 50, 51, 53, 57, 59, 61, 63, 66, 71, 74, 76, 78, 80, 82, 87, 91, 93, 94, 98, 105, 114, 123, 156, 161, 162, 166, 170, 180, 182, 183, 184, 185, 187, 189, 192, 193, 195, 196, 197, 203, 206, 208, 209, 211, 212, 213, 214, 215, 216, 222, 227, 228, 229, 231, 244, 267, 272], "take": [1, 2, 5, 7, 8, 11, 12, 13, 15, 18, 28, 31, 33, 34, 36, 41, 42, 46, 50, 51, 52, 53, 57, 59, 63, 64, 74, 78, 80, 81, 82, 87, 91, 92, 93, 94, 97, 101, 105, 109, 111, 113, 114, 116, 126, 127, 129, 131, 145, 148, 151, 152, 156, 158, 159, 160, 161, 162, 164, 167, 170, 171, 172, 173, 174, 176, 179, 180, 182, 183, 184, 185, 186, 187, 189, 192, 193, 196, 199, 202, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 218, 221, 227, 228, 230, 231, 234, 235, 241, 242, 243, 260, 261, 263, 265, 266, 267, 271], "parse_expr": [1, 7, 11, 93], "problemat": [1, 18, 186], "few": [1, 7, 9, 11, 12, 29, 41, 43, 51, 52, 78, 79, 91, 92, 116, 123, 165, 171, 176, 179, 180, 183, 191, 196, 204, 205, 206, 212, 215, 216, 229, 234, 271], "affect": [1, 7, 18, 50, 51, 87, 171, 192, 215, 245], "perform": [1, 2, 4, 5, 7, 11, 18, 30, 32, 33, 34, 42, 43, 46, 50, 51, 52, 54, 55, 57, 64, 68, 75, 78, 85, 87, 91, 92, 107, 109, 116, 117, 123, 126, 127, 129, 146, 147, 156, 159, 162, 177, 180, 184, 185, 186, 189, 191, 192, 197, 198, 199, 203, 208, 209, 212, 214, 215, 216, 217, 228, 234, 241, 242, 244, 247, 252, 260, 261, 265, 266, 271], "18056": 1, "15416": 1, "where": [1, 2, 5, 7, 8, 9, 12, 13, 14, 15, 18, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 91, 94, 98, 101, 105, 108, 109, 110, 111, 113, 114, 116, 125, 126, 127, 129, 130, 136, 146, 151, 157, 159, 161, 162, 163, 164, 165, 172, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 220, 222, 227, 228, 229, 230, 234, 235, 237, 241, 247, 249, 261, 263, 265, 267, 271, 272], "caus": [1, 12, 15, 18, 20, 51, 52, 55, 57, 87, 114, 121, 126, 179, 196, 205, 212, 213, 214, 231, 232, 267], "up": [1, 5, 7, 8, 9, 11, 12, 18, 20, 28, 31, 33, 42, 43, 45, 51, 52, 53, 55, 56, 57, 59, 60, 67, 68, 72, 76, 78, 79, 81, 82, 87, 91, 92, 94, 103, 105, 111, 113, 116, 120, 122, 126, 127, 129, 130, 142, 157, 159, 175, 181, 182, 183, 186, 187, 191, 193, 196, 197, 198, 203, 205, 206, 208, 209, 212, 213, 214, 215, 228, 229, 230, 231, 232, 235, 262, 263, 266, 267, 269], "100x": 1, "slowdown": [1, 55], "automat": [1, 2, 7, 9, 11, 12, 14, 15, 32, 33, 34, 43, 51, 53, 54, 55, 56, 57, 59, 64, 66, 70, 76, 79, 81, 91, 93, 94, 109, 114, 116, 121, 148, 150, 151, 160, 162, 175, 179, 182, 183, 186, 187, 188, 191, 192, 193, 196, 199, 202, 203, 205, 206, 208, 209, 212, 214, 215, 221, 222, 227, 228, 229, 232, 245, 250, 261, 263, 265, 266, 270, 271, 272], "doesn": [1, 2, 12, 14, 18, 33, 75, 114, 117, 126, 129, 180, 184, 193, 195, 205, 208, 215, 272], "significantli": [1, 33, 55, 105, 124, 187, 198, 228, 231], "slower": [1, 18, 47, 87, 186, 191, 235, 260], "direct": [1, 6, 12, 14, 15, 25, 27, 28, 32, 36, 39, 42, 47, 50, 51, 53, 55, 57, 60, 64, 65, 66, 67, 81, 82, 87, 94, 95, 97, 105, 106, 108, 116, 117, 121, 129, 148, 172, 177, 179, 180, 183, 185, 186, 189, 193, 203, 206, 222, 225, 234, 241, 245, 246, 249], "happen": [1, 5, 7, 8, 12, 14, 18, 25, 33, 43, 50, 51, 55, 63, 66, 75, 157, 161, 167, 183, 189, 191, 192, 195, 204, 208, 212, 216, 235, 245, 263, 270, 271], "occur": [1, 2, 14, 42, 43, 51, 55, 59, 68, 76, 82, 93, 105, 126, 171, 172, 179, 191, 199, 208, 213, 214, 217, 227, 234, 266], "_sympifi": [1, 51, 84, 266], "equival": [1, 2, 7, 8, 12, 18, 25, 29, 33, 34, 41, 42, 47, 51, 52, 55, 57, 59, 76, 78, 87, 91, 93, 98, 99, 101, 114, 123, 145, 156, 159, 162, 165, 172, 176, 180, 182, 183, 184, 186, 187, 191, 192, 196, 203, 204, 208, 212, 214, 215, 217, 218, 221, 222, 231, 235, 237, 238, 254], "strict": [1, 42, 43, 51, 55, 56, 82, 87, 189, 192, 214, 234, 237, 271], "lot": [1, 42, 51, 69, 76, 78, 87, 114, 129, 182, 195, 199, 209, 215, 227, 271], "harder": [1, 7, 14, 51, 76, 186, 227], "secur": 1, "eval": [1, 7, 14, 27, 28, 33, 51, 57, 59, 148, 162, 187, 192, 196, 229, 260], "__repr__": [1, 196], "com": [1, 9, 11, 12, 13, 14, 15, 18, 20, 25, 29, 31, 42, 44, 45, 51, 52, 54, 55, 56, 57, 59, 61, 67, 68, 76, 78, 82, 87, 91, 99, 181, 190, 199, 201, 204, 205, 208, 209, 212, 215, 216, 234, 237, 267], "pull": [1, 9, 11, 12, 13, 14, 15, 17, 18, 20, 33, 51, 56, 59, 161, 197, 208, 212, 215, 267, 271], "12524": 1, "begin": [1, 2, 7, 14, 18, 22, 51, 52, 56, 57, 59, 76, 82, 84, 87, 91, 117, 124, 125, 126, 127, 158, 167, 172, 180, 181, 185, 196, 206, 209, 212, 213, 215, 216, 227, 237, 263, 265, 267, 271], "usual": [1, 2, 5, 7, 11, 32, 34, 42, 50, 51, 52, 69, 76, 78, 87, 123, 148, 160, 167, 177, 179, 180, 183, 184, 186, 187, 189, 195, 196, 197, 203, 206, 212, 215, 216, 217, 221, 222, 229, 231, 235, 241, 249, 260, 263, 266, 270, 271], "custom": [1, 14, 19, 21, 33, 43, 51, 55, 58, 79, 82, 87, 107, 108, 171, 176, 177, 198, 202, 209, 216, 222, 228, 235, 241, 249, 258, 265, 267], "repr": [1, 33, 78, 156, 186, 191, 196, 227, 270], "anyth": [1, 2, 12, 14, 15, 18, 31, 33, 51, 52, 62, 66, 87, 114, 136, 146, 193, 196, 202, 204, 208, 212, 214, 228, 234, 237, 263], "look": [1, 2, 7, 8, 12, 14, 15, 18, 24, 32, 33, 42, 51, 56, 57, 59, 72, 87, 91, 109, 114, 116, 123, 146, 156, 157, 160, 175, 182, 186, 187, 191, 196, 198, 199, 203, 206, 208, 209, 212, 213, 227, 231, 235, 237, 245, 261, 266, 269, 270], "valid": [1, 7, 8, 11, 14, 15, 18, 26, 28, 30, 31, 32, 33, 44, 50, 51, 56, 57, 67, 77, 87, 91, 107, 109, 114, 116, 127, 131, 135, 154, 159, 169, 172, 176, 180, 186, 189, 192, 195, 196, 204, 208, 209, 212, 214, 215, 216, 235, 267, 271], "identifi": [1, 7, 8, 14, 31, 44, 51, 54, 55, 78, 87, 97, 124, 150, 151, 183, 186, 187, 197, 205, 208, 212, 213, 214, 215, 216, 235, 238], "There": [1, 2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 18, 33, 34, 42, 43, 44, 45, 48, 50, 51, 52, 55, 56, 59, 75, 76, 78, 79, 80, 81, 84, 87, 91, 94, 95, 97, 101, 105, 113, 123, 124, 126, 135, 152, 157, 171, 172, 176, 179, 180, 182, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 204, 205, 206, 208, 209, 212, 214, 215, 216, 221, 230, 231, 234, 235, 237, 245, 260, 261, 263, 265, 266, 270, 271], "plenti": 1, "firstli": [1, 7, 12, 18, 206], "alongsid": [1, 12, 18, 84], "unchang": [1, 12, 18, 42, 43, 51, 78, 87, 101, 192, 196, 202, 205, 208, 215, 260], "_sympy_": [1, 51], "dictionari": [1, 11, 32, 33, 40, 42, 43, 49, 51, 56, 65, 67, 80, 82, 87, 90, 91, 93, 94, 107, 109, 110, 113, 114, 116, 117, 120, 124, 126, 152, 162, 172, 180, 182, 184, 187, 189, 191, 192, 194, 196, 203, 208, 209, 212, 213, 214, 215, 216, 220, 222, 227, 231, 234, 235, 241, 260, 267], "disabl": [1, 51, 52, 76, 78, 91, 189, 192, 196, 204, 212, 214, 225, 227, 230, 234], "int": [1, 2, 7, 8, 11, 14, 15, 18, 25, 31, 33, 43, 51, 52, 53, 56, 57, 59, 60, 67, 76, 78, 79, 81, 82, 87, 88, 91, 93, 99, 101, 142, 146, 147, 156, 172, 174, 175, 176, 181, 182, 186, 187, 191, 192, 193, 196, 198, 199, 201, 212, 213, 216, 228, 232, 234, 237, 263, 265, 266, 270, 271], "dx": [1, 5, 15, 18, 31, 33, 47, 51, 53, 55, 59, 68, 70, 73, 74, 75, 76, 78, 87, 94, 104, 109, 110, 151, 180, 192, 193, 199, 209, 212, 213, 217, 261, 265, 270, 272], "constant": [1, 31, 33, 50, 51, 55, 57, 59, 75, 76, 78, 94, 95, 101, 113, 114, 116, 129, 130, 139, 143, 149, 165, 166, 168, 169, 170, 173, 175, 177, 182, 184, 187, 189, 191, 192, 193, 196, 198, 203, 206, 208, 209, 212, 213, 214, 215, 216, 227, 229, 234, 235, 243, 247, 250, 261, 267, 272], "equal": [1, 3, 7, 8, 14, 18, 25, 29, 32, 33, 34, 40, 41, 42, 43, 47, 49, 50, 52, 53, 55, 56, 57, 59, 64, 65, 66, 67, 68, 70, 76, 81, 82, 84, 87, 91, 94, 101, 102, 106, 109, 111, 116, 124, 125, 146, 147, 162, 167, 172, 175, 180, 183, 184, 185, 186, 187, 189, 191, 192, 194, 196, 202, 204, 206, 209, 212, 213, 214, 215, 216, 222, 227, 228, 229, 234, 237, 241, 245, 250, 261, 264, 272], "lh": [1, 33, 41, 51, 194, 196, 212, 214, 215, 246], "tensexpr": [1, 102, 222], "substitute_indic": 1, "danger": [1, 184], "tensor_head": [1, 102, 222], "had": [1, 18, 43, 51, 52, 87, 91, 114, 126, 191, 192, 193, 196, 204, 206, 212, 214, 215, 230, 235, 260, 263, 266, 267], "purpos": [1, 6, 7, 13, 14, 15, 16, 18, 32, 33, 42, 48, 51, 52, 78, 87, 114, 129, 167, 171, 180, 186, 189, 193, 195, 196, 203, 212, 215, 221, 231, 233, 235, 244, 245, 261, 271], "shorter": [1, 51, 61, 105, 124, 171, 183, 187, 196, 229, 237], "creation": [1, 2, 18, 51, 53, 87, 106, 111, 120, 123, 124, 125, 126, 136, 146, 150, 151, 152, 162, 179, 180, 196, 216, 221, 229, 235], "l": [1, 2, 14, 31, 32, 33, 34, 40, 42, 43, 50, 52, 59, 62, 63, 64, 65, 66, 68, 69, 74, 76, 78, 80, 83, 84, 87, 91, 94, 95, 101, 103, 108, 109, 111, 113, 114, 117, 118, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 160, 163, 164, 165, 167, 179, 180, 181, 183, 185, 187, 189, 190, 196, 198, 199, 205, 206, 209, 212, 214, 216, 220, 221, 222, 223, 227, 229, 234, 250, 271], "_dummy_fmt": 1, "l_": [1, 78, 87], "d": [1, 2, 5, 9, 14, 15, 18, 25, 32, 35, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 56, 59, 61, 65, 69, 74, 76, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 93, 94, 97, 109, 129, 131, 134, 135, 141, 151, 159, 161, 162, 167, 171, 172, 174, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 196, 198, 202, 206, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 222, 234, 237, 241, 242, 243, 244, 245, 249, 257, 267, 272], "obsolet": 1, "format": [1, 5, 9, 12, 16, 32, 43, 52, 73, 74, 78, 81, 87, 90, 91, 94, 113, 130, 135, 146, 156, 182, 185, 186, 191, 192, 194, 196, 206, 212, 215, 227, 237, 241, 244, 264, 267, 270], "dummy_nam": [1, 222], "clearer": [1, 244], "ambigu": [1, 2, 15, 51, 150, 156, 208, 220, 225], "symmetri": [1, 14, 39, 44, 47, 59, 82, 141, 181, 212, 220, 222, 260, 271], "metric_symmetri": [1, 222], "set_metr": [1, 222], "delta": [1, 2, 33, 35, 45, 56, 59, 74, 76, 80, 99, 126, 134, 162, 196, 203, 209, 212, 216, 217, 222], "epsilon": [1, 2, 50, 52, 59, 76, 78, 133, 196, 222], "respect": [1, 2, 13, 14, 18, 26, 28, 29, 31, 32, 33, 34, 41, 42, 43, 46, 47, 49, 50, 51, 53, 57, 59, 61, 63, 67, 68, 73, 74, 76, 78, 81, 82, 84, 87, 91, 93, 94, 95, 97, 101, 106, 107, 108, 111, 117, 125, 127, 129, 136, 151, 164, 165, 166, 171, 172, 175, 177, 180, 181, 182, 183, 186, 189, 191, 192, 193, 196, 198, 199, 202, 204, 208, 212, 213, 214, 215, 216, 217, 221, 222, 227, 229, 241, 242, 243, 244, 245, 246, 247, 248, 249, 261, 271], "prefer": [1, 7, 9, 11, 14, 18, 33, 43, 50, 51, 59, 91, 93, 114, 162, 167, 182, 185, 187, 189, 191, 196, 204, 208, 212, 214, 221, 227, 229, 232, 235, 265, 267], "over": [1, 2, 4, 12, 15, 18, 25, 31, 32, 33, 34, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 65, 67, 74, 76, 80, 81, 84, 87, 88, 91, 94, 95, 103, 114, 129, 130, 141, 157, 160, 162, 166, 167, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 199, 201, 203, 208, 209, 211, 212, 214, 215, 216, 217, 220, 221, 230, 234, 235, 241, 243, 247, 250, 265, 269, 271], "latter": [1, 4, 18, 33, 42, 51, 56, 59, 76, 91, 183, 187, 191, 196, 206, 209, 222, 229, 234, 235, 263], "extra": [1, 9, 33, 51, 52, 91, 92, 121, 167, 177, 188, 189, 196, 206, 212, 227, 228, 229, 247], "involv": [1, 2, 5, 7, 28, 30, 42, 50, 51, 52, 56, 63, 64, 76, 78, 91, 101, 106, 109, 114, 141, 151, 157, 159, 169, 179, 180, 183, 184, 187, 189, 191, 192, 193, 197, 198, 203, 204, 205, 206, 208, 209, 212, 214, 217, 235, 271], "obscur": [1, 7], "young": [1, 94, 222], "tableau": 1, "Is": [1, 12, 43, 61, 62, 64, 65, 66, 67, 91, 193, 215], "favor": 1, "consist": [1, 5, 7, 14, 15, 32, 42, 43, 47, 51, 52, 56, 57, 59, 61, 67, 69, 76, 81, 94, 97, 127, 136, 156, 162, 167, 170, 175, 182, 184, 186, 187, 189, 204, 212, 214, 215, 216, 220, 225, 228, 229, 234, 264, 266], "tensorindex": [1, 222], "tensor_indic": [1, 102, 222], "denot": [1, 2, 5, 42, 43, 51, 53, 59, 73, 74, 76, 78, 80, 81, 82, 87, 91, 93, 101, 167, 172, 177, 182, 183, 184, 189, 191, 199, 203, 204, 206, 212, 216, 221, 222, 241, 242, 244, 245, 247, 249], "set_dimens": 1, "unit_system": [1, 169], "set_quantity_dimens": [1, 165], "set_global_dimens": 1, "set_scale_factor": 1, "set_quantity_scale_factor": [1, 165], "set_global_relative_scale_factor": [1, 169], "get_dimensional_expr": 1, "associ": [1, 7, 15, 32, 34, 49, 51, 52, 58, 59, 73, 74, 76, 80, 127, 129, 152, 160, 171, 172, 179, 180, 184, 185, 186, 187, 189, 191, 196, 204, 206, 209, 222, 236], "unitsystem": [1, 170], "dimension": [1, 31, 33, 35, 53, 63, 64, 65, 66, 67, 84, 87, 95, 102, 129, 136, 138, 148, 164, 166, 177, 178, 182, 183, 189, 191, 192, 195, 196, 214, 215, 217, 218, 222, 228, 249, 272], "_collect_factor_and_dimens": 1, "motiv": [1, 18], "emptyset": [1, 7, 31, 32, 81, 196, 215, 241, 272], "is_empti": [1, 7, 43], "none": [1, 7, 8, 14, 15, 18, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 101, 106, 107, 108, 109, 110, 113, 114, 131, 133, 135, 136, 142, 147, 152, 157, 159, 162, 164, 168, 169, 170, 172, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 189, 191, 192, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 227, 228, 229, 230, 234, 235, 237, 240, 241, 243, 267, 271, 272], "unknown": [1, 4, 7, 8, 18, 25, 51, 52, 95, 147, 194, 211, 212, 213, 214, 215, 234, 272], "empti": [1, 7, 27, 31, 32, 33, 34, 42, 46, 50, 51, 63, 66, 67, 68, 81, 82, 87, 91, 109, 126, 157, 170, 187, 191, 192, 196, 202, 203, 204, 206, 212, 214, 215, 227, 229, 234, 237, 266], "individu": [1, 7, 18, 51, 57, 62, 67, 68, 80, 82, 84, 87, 101, 127, 134, 152, 156, 181, 204, 212, 227, 267], "themselv": [1, 11, 15, 18, 29, 32, 43, 47, 49, 51, 78, 91, 123, 166, 186, 187, 191, 202, 216, 222, 231, 234, 237, 271], "But": [1, 2, 11, 12, 15, 18, 50, 51, 59, 65, 75, 82, 87, 91, 150, 151, 162, 167, 172, 183, 184, 189, 193, 203, 205, 206, 208, 209, 212, 214, 215, 221, 231, 234, 235, 243, 261, 263, 265, 266, 271], "exactli": [1, 2, 12, 14, 15, 18, 29, 35, 42, 51, 54, 55, 87, 93, 108, 127, 181, 206, 208, 212, 215, 217, 231, 234, 235, 261, 263, 265, 270, 271], "denest": [1, 51, 192, 207, 214, 234], "On": [1, 7, 9, 28, 44, 51, 53, 59, 78, 81, 91, 114, 167, 177, 186, 189, 190, 191, 192, 212, 214, 231, 235, 247, 249], "hand": [1, 5, 7, 14, 18, 32, 33, 43, 44, 51, 57, 59, 78, 81, 82, 87, 91, 94, 109, 113, 114, 126, 130, 134, 151, 154, 172, 177, 180, 181, 183, 186, 187, 189, 191, 194, 206, 215, 227, 229, 231, 235, 238, 247, 249, 265], "anoth": [1, 2, 4, 5, 7, 8, 12, 14, 15, 18, 29, 32, 33, 43, 48, 50, 51, 52, 53, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 76, 78, 84, 87, 91, 94, 95, 111, 151, 167, 169, 172, 175, 179, 180, 182, 184, 186, 187, 189, 191, 192, 193, 196, 197, 203, 204, 206, 212, 214, 215, 216, 228, 229, 235, 241, 244, 245, 249, 260, 263, 265, 266, 271, 272], "path": [1, 9, 13, 14, 42, 67, 73, 101, 121, 177, 179, 205, 208, 212, 215, 227, 228, 231, 232, 234, 237, 238, 239, 247], "particl": [1, 106, 108, 109, 114, 117, 118, 123, 124, 126, 129, 130, 138, 141, 148, 149, 160, 162, 165, 167, 179, 222], "rigidbodi": [1, 106, 109, 113, 116, 120, 121, 122, 123, 127, 129], "potential_energi": [1, 109, 122, 123, 127], "energi": [1, 103, 106, 109, 111, 114, 122, 123, 138, 163, 167, 177, 222, 247, 257], "setter": [1, 114, 129], "getter": [1, 51, 114, 129], "set_": 1, "fix": [1, 12, 14, 17, 33, 42, 44, 47, 49, 52, 59, 63, 80, 94, 95, 97, 106, 108, 111, 116, 129, 146, 151, 155, 158, 162, 167, 172, 175, 179, 180, 182, 186, 189, 191, 192, 193, 196, 202, 206, 214, 216, 234, 241, 242], "set_condit": 1, "And": [1, 2, 8, 12, 18, 22, 27, 42, 43, 50, 51, 52, 59, 76, 81, 82, 87, 90, 108, 134, 180, 182, 184, 192, 193, 196, 204, 208, 209, 215, 216, 235, 245, 271], "17749": 1, "side": [1, 2, 5, 7, 33, 42, 43, 51, 63, 67, 78, 87, 91, 94, 101, 109, 113, 126, 127, 130, 150, 151, 167, 172, 181, 183, 189, 191, 194, 196, 213, 215, 216, 220, 227, 229, 250, 261], "unpack": [1, 51, 82, 87, 234, 235], "expand": [1, 2, 5, 7, 14, 33, 53, 55, 56, 57, 59, 76, 78, 82, 101, 114, 116, 129, 143, 151, 154, 161, 162, 184, 186, 188, 189, 191, 192, 193, 199, 203, 205, 206, 208, 212, 215, 216, 220, 228, 235, 246, 252, 260, 265], "intermedi": [1, 23, 33, 34, 74, 82, 114, 116, 120, 146, 156, 164, 165, 172, 175, 179, 215, 229, 268], "befor": [1, 2, 7, 8, 12, 14, 18, 20, 33, 42, 43, 45, 47, 51, 52, 53, 59, 79, 82, 87, 91, 93, 94, 95, 105, 110, 114, 116, 117, 120, 121, 126, 129, 131, 162, 171, 176, 180, 184, 186, 191, 192, 196, 197, 203, 204, 208, 209, 212, 214, 215, 216, 223, 227, 230, 234, 235, 244, 264, 265, 266, 271], "satisfi": [1, 7, 11, 15, 28, 29, 31, 34, 39, 42, 47, 51, 52, 56, 59, 61, 74, 76, 80, 81, 87, 91, 110, 126, 146, 151, 183, 184, 189, 191, 192, 196, 202, 203, 204, 209, 212, 213, 214, 215, 216, 222, 266, 271], "emul": [1, 208, 215, 217, 235], "is_deriv": [1, 51], "as_finite_differ": [1, 31, 51, 261], "17881": 1, "get_matrix": [1, 222], "__getitem__": [1, 51, 82, 221], "__iter__": [1, 43, 51, 208], "_components_data_full_destroi": 1, "__pow__": [1, 82, 187, 193], "flaw": 1, "replace_with_arrai": [1, 222, 223], "cach": [1, 7, 56, 76, 183, 192, 196, 225, 230, 231, 252], "actual": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 32, 33, 34, 40, 42, 49, 51, 52, 59, 63, 76, 78, 80, 84, 87, 91, 101, 105, 114, 116, 124, 125, 126, 176, 183, 186, 191, 196, 204, 206, 208, 209, 212, 215, 223, 227, 228, 231, 232, 234, 235, 265], "safe": [1, 91, 186, 192, 214, 220, 261], "squar": [1, 2, 7, 25, 28, 33, 42, 51, 52, 57, 67, 68, 76, 78, 82, 83, 87, 90, 91, 94, 101, 103, 124, 125, 148, 164, 172, 181, 185, 187, 188, 189, 191, 192, 193, 196, 204, 207, 209, 212, 215, 216, 265], "jordan": [1, 76, 82, 87, 194, 214, 215], "block": [1, 12, 14, 33, 40, 42, 52, 82, 86, 87, 113, 114, 116, 118, 172, 180, 185, 209, 235, 244], "band": [1, 82, 90], "eigenvalu": [1, 82, 87, 114, 116, 156, 159, 265], "elif": [1, 7, 8, 18], "lower": [1, 7, 14, 28, 31, 33, 42, 43, 50, 51, 53, 59, 60, 62, 67, 68, 78, 82, 83, 84, 87, 99, 104, 108, 162, 175, 181, 183, 185, 187, 189, 192, 196, 205, 206, 208, 212, 221, 222, 231, 241, 261, 269], "inspect": [1, 7, 87, 191, 202, 233, 235, 259], "getsourc": [1, 235, 239], "obj": [1, 7, 14, 51, 187, 192, 196, 230], "ipython": [1, 2, 11, 14, 20, 79, 129, 176, 235, 239, 240, 269, 270], "jupyt": [1, 11, 18, 235, 239], "absolut": [1, 9, 29, 30, 33, 50, 51, 57, 66, 76, 78, 82, 87, 103, 160, 187, 191, 192, 206, 208, 211, 216, 227, 249, 250, 251], "natur": [1, 2, 7, 12, 25, 29, 33, 34, 42, 51, 52, 56, 57, 85, 91, 114, 164, 166, 167, 183, 186, 187, 189, 191, 193, 196, 205, 209, 215, 216, 234, 250, 266, 271], "time": [1, 2, 5, 7, 8, 9, 11, 12, 15, 24, 28, 29, 33, 42, 43, 47, 51, 52, 56, 59, 74, 76, 81, 82, 87, 88, 90, 91, 92, 93, 98, 99, 101, 105, 109, 110, 113, 114, 116, 117, 120, 121, 123, 124, 125, 126, 127, 129, 130, 136, 146, 151, 159, 160, 164, 165, 167, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 189, 190, 191, 192, 193, 195, 196, 203, 204, 205, 206, 208, 212, 214, 216, 225, 227, 228, 233, 234, 235, 247, 249, 259, 261, 265, 266, 267], "sum": [1, 5, 7, 33, 40, 43, 50, 51, 54, 56, 59, 64, 66, 74, 76, 78, 80, 81, 82, 84, 87, 91, 111, 124, 141, 145, 148, 156, 159, 161, 162, 181, 183, 184, 186, 187, 191, 192, 193, 196, 198, 199, 201, 203, 205, 206, 208, 209, 212, 214, 215, 216, 217, 218, 220, 222, 231, 234, 252, 271], "meter": [1, 94, 95, 133, 136, 165, 167, 168, 169], "second": [1, 2, 5, 7, 8, 12, 15, 18, 24, 28, 31, 33, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 64, 65, 67, 78, 87, 91, 92, 94, 95, 99, 101, 102, 105, 106, 108, 109, 114, 117, 120, 122, 123, 125, 127, 133, 135, 136, 139, 143, 148, 151, 156, 157, 159, 160, 165, 167, 169, 171, 172, 173, 179, 180, 182, 185, 186, 189, 190, 191, 192, 196, 198, 206, 208, 209, 212, 214, 215, 216, 217, 218, 234, 235, 241, 243, 244, 245, 257, 260, 265, 266, 267], "si": [1, 18, 59, 75, 76, 135, 164, 165, 167, 168, 169, 196], "cg": [1, 141, 159], "At": [1, 7, 11, 18, 31, 47, 57, 59, 78, 91, 94, 95, 105, 167, 171, 180, 191, 206, 235], "aris": [1, 7, 8, 51, 56, 76, 78, 159, 180, 186, 191], "scale": [1, 60, 61, 62, 66, 67, 68, 79, 94, 142, 163, 165, 167, 169, 170, 176, 180, 182, 199, 216, 247, 249], "factor": [1, 2, 11, 34, 42, 43, 50, 51, 52, 55, 56, 57, 59, 76, 78, 87, 91, 94, 101, 129, 131, 139, 143, 146, 158, 162, 167, 168, 169, 183, 186, 187, 188, 190, 191, 192, 199, 205, 206, 208, 209, 214, 216, 220, 231, 244, 247, 265, 267], "while": [1, 2, 7, 12, 14, 18, 19, 22, 32, 33, 34, 42, 43, 44, 47, 50, 51, 52, 53, 55, 56, 61, 65, 67, 75, 81, 82, 87, 91, 92, 93, 94, 106, 110, 114, 117, 126, 146, 167, 172, 177, 183, 191, 194, 196, 212, 215, 227, 229, 231, 234, 249, 260, 266, 267], "kilomet": [1, 168, 169], "1000": [1, 2, 33, 35, 51, 52, 55, 84, 91, 129, 167, 168, 169, 181, 195, 196, 205], "rel": [1, 14, 15, 32, 33, 41, 42, 43, 44, 48, 49, 50, 52, 55, 62, 76, 91, 106, 108, 111, 118, 126, 127, 134, 161, 172, 175, 179, 180, 183, 185, 186, 189, 191, 204, 206, 211, 214, 216, 227, 234, 244, 245, 249, 265], "being": [1, 2, 7, 8, 12, 15, 29, 31, 33, 42, 43, 49, 50, 51, 52, 57, 59, 61, 63, 64, 67, 68, 76, 81, 82, 87, 88, 91, 94, 95, 97, 105, 113, 114, 116, 126, 127, 129, 130, 158, 167, 174, 177, 179, 180, 181, 182, 183, 185, 186, 191, 192, 193, 196, 205, 206, 208, 209, 212, 213, 214, 215, 216, 222, 225, 231, 232, 234, 235, 237, 241, 245, 249, 265, 267], "manag": [1, 12, 20, 27, 28, 93, 142, 189, 208, 222, 225, 227, 232], "dimensionsystem": [1, 164], "14318": 1, "duplic": [1, 2, 42, 45, 52, 57, 59, 87, 91, 204, 212, 234, 264], "common": [1, 2, 3, 7, 8, 14, 15, 18, 21, 22, 23, 28, 31, 33, 42, 43, 51, 52, 57, 62, 65, 68, 78, 84, 86, 87, 91, 92, 99, 101, 106, 108, 110, 123, 127, 129, 134, 167, 172, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 198, 204, 205, 206, 207, 209, 212, 216, 228, 229, 232, 234, 235, 247, 249, 252, 255, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271], "flatten": [1, 32, 51, 186, 218, 223, 234, 235], "neither": [1, 7, 8, 29, 51, 136, 157, 182, 192, 203, 204, 205, 212, 222, 235, 241, 249, 271], "regardless": [1, 12, 14, 18, 43, 51, 78, 91, 189, 204, 208, 234, 244, 249, 271], "much": [1, 5, 7, 8, 12, 14, 18, 32, 33, 36, 47, 55, 59, 73, 76, 78, 126, 170, 171, 179, 180, 181, 183, 186, 189, 192, 203, 206, 208, 212, 213, 214, 215, 229, 231, 263, 265, 271], "less": [1, 5, 14, 15, 29, 33, 34, 42, 43, 50, 51, 52, 55, 56, 57, 59, 65, 66, 67, 82, 87, 91, 99, 101, 114, 116, 162, 186, 189, 191, 192, 205, 206, 208, 209, 212, 214, 215, 216, 227, 229], "polymorph": 1, "input": [1, 2, 14, 15, 18, 21, 25, 31, 34, 47, 51, 52, 54, 55, 56, 57, 65, 78, 80, 81, 87, 91, 93, 98, 99, 101, 105, 110, 113, 114, 116, 117, 126, 129, 130, 135, 158, 172, 174, 175, 186, 187, 189, 192, 193, 194, 195, 196, 197, 204, 208, 209, 210, 212, 214, 216, 218, 228, 229, 231, 232, 234, 235, 237, 260, 266, 267, 271], "17": [1, 14, 40, 42, 43, 51, 52, 55, 56, 57, 61, 64, 67, 76, 87, 91, 101, 186, 187, 191, 192, 195, 196, 203, 205, 209, 212, 217, 231, 235, 265], "As": [1, 4, 5, 8, 14, 18, 24, 33, 42, 43, 51, 52, 55, 56, 57, 59, 75, 76, 81, 87, 90, 91, 93, 113, 114, 116, 117, 126, 127, 162, 167, 179, 183, 184, 186, 187, 189, 193, 195, 196, 203, 204, 206, 212, 215, 216, 234, 235, 244, 245, 260, 261, 263, 265, 266, 267, 270, 271], "2d": [1, 11, 64, 65, 67, 77, 94, 95, 97, 140, 172, 182, 196, 209, 221, 265], "3d": [1, 11, 25, 35, 64, 65, 94, 140, 163, 177, 182, 244, 246, 247, 248, 249], "anymor": [1, 182], "effect": [1, 11, 14, 18, 20, 42, 44, 51, 68, 76, 78, 82, 87, 94, 114, 116, 126, 134, 162, 172, 182, 186, 189, 193, 195, 212, 263], "temporarili": [1, 51], "substitut": [1, 2, 5, 8, 9, 33, 51, 52, 57, 59, 76, 78, 87, 92, 93, 101, 109, 110, 114, 116, 117, 126, 151, 160, 162, 165, 172, 174, 175, 193, 194, 197, 198, 203, 206, 208, 209, 212, 213, 214, 215, 235, 243, 262, 263], "term": [1, 2, 5, 7, 15, 18, 33, 42, 51, 52, 53, 55, 56, 57, 59, 70, 74, 75, 76, 78, 81, 82, 87, 91, 95, 99, 101, 107, 109, 116, 117, 120, 123, 124, 126, 127, 141, 146, 158, 159, 162, 164, 167, 172, 174, 177, 179, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 198, 199, 200, 201, 202, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 220, 221, 234, 241, 243, 247, 252, 261, 263, 265, 266, 271], "point3d": [1, 64, 65, 66, 135], "p1": [1, 34, 42, 43, 47, 50, 61, 63, 64, 65, 66, 67, 101, 106, 108, 117, 129, 131, 175, 182, 186, 187, 189, 193, 205, 216, 217], "p2": [1, 8, 42, 43, 50, 61, 63, 64, 65, 66, 67, 101, 106, 108, 129, 175, 182, 186, 187, 189, 193, 205, 216], "run": [2, 5, 7, 9, 12, 14, 15, 16, 18, 19, 34, 42, 43, 45, 51, 52, 76, 87, 92, 93, 109, 116, 129, 162, 176, 182, 183, 196, 206, 208, 212, 213, 214, 224, 228, 230, 231, 234, 235, 259, 263, 270], "under": [2, 7, 8, 9, 11, 12, 14, 19, 27, 28, 30, 31, 33, 34, 41, 42, 47, 49, 59, 69, 76, 78, 80, 87, 91, 93, 94, 95, 131, 157, 181, 183, 184, 191, 192, 196, 203, 204, 206, 209, 212, 214, 215, 216, 222, 225, 265, 271], "program": [2, 7, 11, 15, 33, 35, 43, 129, 167, 181, 229, 231, 263, 265, 269, 271], "languag": [2, 5, 11, 15, 18, 19, 33, 57, 87, 93, 105, 114, 129, 196, 201, 216, 228, 229, 263, 265, 267, 269, 271], "some": [2, 5, 7, 8, 9, 11, 12, 14, 18, 20, 24, 29, 32, 33, 34, 39, 42, 43, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 63, 67, 76, 78, 80, 81, 82, 84, 87, 91, 92, 93, 99, 102, 105, 106, 111, 113, 114, 115, 116, 117, 118, 123, 124, 126, 127, 130, 142, 147, 151, 159, 162, 167, 168, 171, 173, 177, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 198, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 241, 242, 243, 245, 247, 251, 260, 261, 263, 265, 266, 267, 269, 270, 271], "behav": [2, 29, 31, 51, 52, 57, 59, 91, 192, 204, 208, 214, 217, 223, 267], "independ": [2, 18, 29, 31, 33, 42, 50, 51, 53, 59, 68, 76, 78, 80, 87, 101, 109, 110, 114, 116, 117, 124, 126, 160, 167, 177, 182, 184, 186, 191, 192, 198, 199, 206, 208, 209, 212, 213, 214, 215, 216, 222, 227, 228, 247, 265, 266], "mapl": [2, 78, 212, 259, 265], "mathematica": [2, 33, 43, 93, 259, 265, 267], "encount": [2, 5, 15, 51, 78, 87, 154, 184, 189, 192, 214, 215, 229, 241, 267], "faq": 2, "tutori": [2, 5, 6, 9, 15, 20, 67, 114, 129, 184, 195, 196, 210, 212, 235, 263, 266, 268, 269, 270, 271, 272], "remaind": [2, 50, 51, 52, 91, 184, 186, 187, 190, 192, 212], "doc": [2, 11, 12, 14, 15, 16, 23, 33, 42, 50, 51, 67, 79, 127, 164, 186, 188, 209, 212, 227, 228, 230, 232, 234, 241, 245], "offici": [2, 9, 20, 51, 105, 129, 171, 180, 215, 235, 269], "familiar": [2, 18, 78, 114, 127, 146, 193, 261, 263, 269], "java": 2, "4": [2, 3, 5, 7, 8, 11, 15, 18, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 73, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 107, 114, 116, 117, 118, 120, 121, 122, 123, 126, 127, 129, 130, 131, 134, 138, 141, 146, 156, 157, 159, 160, 161, 162, 163, 165, 171, 172, 173, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 221, 222, 227, 228, 231, 234, 235, 241, 243, 244, 245, 247, 249, 250, 260, 261, 263, 265, 266, 267, 271, 272], "minut": [2, 105, 116, 171], "doctest": [2, 12, 14, 15, 18, 44, 59, 87, 91, 116, 151, 162, 186, 192, 212, 227, 230, 232, 270], "skip": [2, 9, 11, 12, 14, 32, 35, 51, 82, 87, 91, 172, 191, 195, 196, 198, 212, 214, 225, 227, 261, 269, 270], "test": [2, 6, 8, 12, 14, 15, 16, 18, 28, 29, 31, 32, 33, 38, 42, 43, 50, 51, 52, 58, 61, 66, 76, 82, 84, 87, 91, 142, 151, 155, 156, 157, 165, 180, 186, 187, 188, 189, 191, 193, 204, 206, 209, 212, 213, 214, 215, 225, 228, 229, 230, 231, 232, 234, 235, 237, 251, 254, 259, 263, 265, 266], "eq": [2, 7, 14, 18, 29, 31, 33, 57, 61, 64, 68, 76, 81, 165, 182, 183, 187, 192, 194, 196, 198, 202, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 228, 229, 235, 241, 263, 265, 272], "assum": [2, 4, 7, 11, 14, 18, 28, 33, 34, 35, 40, 42, 50, 51, 52, 53, 57, 59, 61, 68, 69, 76, 78, 87, 91, 94, 101, 113, 114, 119, 124, 125, 126, 127, 129, 135, 157, 161, 162, 172, 175, 177, 183, 184, 186, 189, 192, 194, 196, 203, 204, 206, 208, 209, 212, 213, 215, 216, 220, 221, 222, 229, 234, 237, 243, 245, 249, 264, 266, 269, 271, 272], "zero": [2, 7, 8, 12, 18, 25, 28, 30, 33, 41, 42, 43, 47, 50, 54, 55, 56, 57, 59, 61, 65, 66, 67, 76, 78, 80, 81, 82, 84, 86, 87, 90, 91, 93, 94, 100, 101, 108, 111, 114, 116, 118, 121, 124, 125, 129, 134, 156, 160, 162, 164, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 194, 196, 199, 203, 204, 206, 208, 209, 212, 213, 214, 215, 216, 217, 232, 234, 235, 244, 246, 247, 266, 272], "subtract": [2, 33, 43, 51, 55, 66, 91, 101, 108, 164, 184, 185, 186, 187, 189, 191, 192, 266, 271], "proper": [2, 42, 51, 78, 91, 105, 114, 171, 186, 187, 191, 196, 204, 212, 217, 228, 229, 247, 267], "abc": [2, 4, 12, 14, 18, 25, 26, 27, 28, 29, 30, 31, 33, 40, 42, 44, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 74, 75, 76, 78, 79, 81, 82, 84, 87, 90, 92, 99, 101, 103, 133, 135, 137, 138, 143, 160, 162, 163, 183, 185, 187, 189, 191, 192, 193, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 221, 223, 228, 229, 230, 231, 232, 234, 235, 237, 241, 243, 244, 245, 250, 252, 263, 266, 270], "import": [2, 4, 5, 7, 8, 11, 12, 16, 18, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 250, 260, 261, 263, 265, 266, 267, 269, 270, 271, 272], "print": [2, 5, 7, 8, 10, 12, 14, 15, 20, 26, 27, 28, 29, 31, 32, 34, 35, 40, 42, 43, 50, 51, 52, 55, 56, 57, 59, 78, 80, 81, 84, 87, 88, 91, 92, 93, 95, 101, 109, 114, 116, 123, 128, 134, 142, 155, 156, 160, 162, 172, 178, 180, 182, 185, 186, 187, 191, 192, 202, 203, 205, 206, 208, 212, 214, 221, 223, 227, 229, 234, 235, 237, 239, 241, 244, 251, 253, 259, 261, 262, 263, 264, 265, 266, 267, 271], "1": [2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 141, 144, 145, 146, 147, 148, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 239, 241, 243, 244, 245, 247, 250, 257, 260, 261, 263, 265, 266, 267, 270, 271, 272], "2": [2, 3, 4, 5, 7, 8, 15, 18, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 113, 116, 117, 118, 120, 121, 122, 124, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 218, 221, 222, 223, 225, 227, 228, 229, 230, 231, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 249, 250, 260, 261, 263, 265, 266, 267, 270, 271, 272], "fals": [2, 7, 8, 15, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 76, 78, 79, 81, 82, 83, 84, 87, 88, 91, 93, 94, 95, 99, 101, 103, 104, 107, 109, 110, 111, 114, 116, 120, 121, 122, 124, 125, 126, 127, 130, 134, 146, 147, 151, 154, 159, 160, 161, 162, 165, 169, 172, 173, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 205, 208, 209, 211, 212, 213, 214, 215, 216, 221, 222, 225, 227, 228, 229, 230, 234, 235, 237, 241, 243, 263, 266, 267, 270], "simplifi": [2, 5, 7, 8, 12, 14, 18, 26, 28, 30, 31, 50, 51, 53, 55, 56, 57, 59, 63, 68, 73, 76, 78, 81, 82, 83, 84, 87, 94, 101, 102, 107, 110, 117, 120, 121, 122, 126, 134, 141, 146, 161, 162, 169, 172, 177, 183, 191, 193, 195, 197, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 216, 230, 232, 235, 244, 246, 252, 253, 260, 262, 263, 265, 266, 267], "trigsimp": [2, 25, 51, 87, 108, 114, 121, 172, 205, 244], "equat": [2, 5, 15, 21, 31, 33, 47, 50, 51, 53, 57, 59, 61, 64, 65, 69, 73, 74, 75, 76, 79, 82, 87, 94, 101, 103, 105, 108, 109, 110, 113, 114, 116, 117, 118, 120, 122, 123, 128, 129, 130, 131, 135, 166, 171, 175, 176, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 195, 196, 202, 206, 208, 210, 211, 213, 221, 241, 245, 246, 250, 261, 262, 265], "reduc": [2, 8, 15, 26, 28, 30, 34, 47, 51, 52, 54, 56, 57, 59, 66, 67, 76, 78, 87, 91, 101, 102, 126, 144, 162, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 202, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 234, 267], "0": [2, 5, 7, 8, 12, 14, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 111, 114, 116, 117, 118, 120, 122, 124, 125, 126, 127, 129, 130, 131, 134, 135, 136, 138, 141, 146, 147, 148, 151, 156, 157, 158, 159, 160, 161, 162, 163, 167, 169, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 227, 228, 230, 231, 232, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 250, 260, 261, 263, 265, 266, 267, 270, 271, 272], "co": [2, 14, 18, 22, 25, 31, 33, 50, 51, 53, 55, 56, 58, 59, 60, 61, 64, 65, 67, 69, 73, 74, 75, 76, 78, 82, 87, 91, 93, 106, 107, 108, 114, 116, 118, 120, 121, 122, 126, 129, 134, 136, 172, 174, 175, 177, 179, 180, 181, 182, 186, 189, 192, 193, 195, 196, 197, 198, 199, 203, 204, 205, 206, 208, 212, 214, 215, 216, 217, 223, 235, 241, 242, 243, 244, 245, 250, 260, 261, 263, 265, 271, 272], "sai": [2, 5, 7, 12, 15, 34, 41, 50, 51, 52, 80, 105, 109, 114, 123, 129, 167, 179, 180, 183, 184, 185, 189, 191, 195, 196, 203, 206, 209, 212, 214, 215, 216, 235, 251, 260, 265, 271], "unequ": [2, 94, 196], "rememb": [2, 12, 14, 18, 81, 87, 102, 105, 129, 179, 180, 196, 208, 214, 217, 235, 266, 271], "fill": [2, 6, 42, 52, 82, 84, 87, 90, 162, 182, 227, 230, 234, 237, 267], "alter": [2, 34, 42, 51, 172, 186, 196, 198, 215], "afterward": [2, 33, 51, 111, 117], "liter": [2, 14, 18, 33, 41, 51, 79, 81, 93, 162, 169, 208], "still": [2, 7, 11, 12, 14, 15, 18, 20, 24, 32, 43, 50, 51, 52, 59, 63, 78, 82, 87, 114, 162, 180, 182, 183, 184, 189, 191, 196, 203, 205, 206, 208, 212, 214, 215, 221, 227, 234, 247, 267], "quantiti": [2, 43, 51, 56, 59, 63, 68, 95, 105, 109, 121, 127, 141, 164, 166, 170, 177, 179, 180, 191, 208, 216, 244, 248, 249, 257], "set": [2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 24, 27, 28, 31, 32, 33, 34, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 66, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 101, 105, 109, 113, 114, 116, 117, 122, 124, 125, 126, 129, 130, 146, 152, 157, 162, 164, 167, 169, 170, 171, 172, 174, 175, 176, 177, 179, 182, 183, 184, 185, 186, 189, 191, 192, 195, 196, 197, 198, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 220, 221, 222, 225, 227, 228, 229, 230, 234, 235, 241, 243, 245, 251, 254, 260, 262, 271], "simultan": [2, 51, 64, 82, 91, 182, 205], "string": [2, 11, 12, 14, 15, 18, 21, 26, 32, 33, 35, 40, 51, 52, 53, 54, 55, 58, 64, 74, 79, 80, 81, 84, 87, 91, 93, 94, 97, 99, 105, 106, 108, 111, 133, 142, 146, 156, 160, 164, 170, 171, 172, 175, 176, 177, 182, 185, 187, 191, 196, 197, 203, 208, 212, 216, 217, 220, 221, 222, 227, 228, 229, 234, 235, 237, 239, 241, 242, 244, 262, 263, 266, 270], "refer": [2, 5, 8, 11, 12, 13, 15, 18, 20, 21, 27, 28, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 45, 49, 52, 54, 56, 57, 59, 61, 66, 67, 68, 71, 73, 77, 79, 80, 81, 86, 88, 92, 94, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 116, 123, 124, 127, 129, 130, 131, 132, 133, 135, 139, 141, 143, 144, 145, 148, 150, 151, 159, 160, 162, 166, 171, 172, 173, 174, 175, 177, 179, 186, 188, 193, 196, 198, 199, 201, 204, 207, 208, 210, 212, 213, 214, 216, 222, 231, 233, 234, 235, 237, 241, 244, 245, 249, 252, 255, 256, 257, 258, 259, 263, 267, 268, 271], "object": [2, 3, 6, 7, 8, 11, 12, 14, 15, 18, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 50, 51, 53, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 76, 78, 81, 82, 84, 85, 87, 92, 93, 94, 95, 99, 101, 102, 105, 106, 109, 110, 111, 113, 114, 117, 122, 123, 124, 125, 126, 127, 129, 130, 131, 135, 136, 137, 145, 146, 148, 156, 157, 161, 162, 164, 165, 168, 169, 171, 172, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 189, 191, 192, 196, 198, 199, 202, 203, 204, 205, 208, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 227, 228, 229, 230, 231, 234, 235, 238, 239, 243, 244, 245, 250, 251, 260, 261, 263, 265, 266, 267, 270, 271], "var": [2, 31, 33, 50, 55, 56, 74, 78, 81, 87, 101, 172, 182, 191, 195, 196, 208, 209, 235, 272], "rate": [2, 116, 179, 216, 247, 261], "short_lif": 2, "80": [2, 9, 12, 14, 18, 31, 42, 51, 54, 78, 87, 91, 94, 95, 99, 192, 195, 212, 216, 232, 234], "haven": 2, "160": [2, 94, 190], "need": [2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 22, 24, 25, 27, 28, 31, 32, 33, 36, 42, 43, 47, 49, 50, 51, 52, 53, 57, 59, 62, 66, 67, 74, 75, 76, 78, 79, 82, 87, 91, 92, 93, 95, 101, 105, 109, 111, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 130, 131, 142, 146, 154, 160, 165, 166, 171, 172, 176, 179, 180, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 203, 204, 206, 208, 209, 211, 212, 214, 215, 216, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 234, 237, 241, 244, 246, 247, 250, 260, 261, 263, 266, 267, 269, 271], "indent": [2, 14, 237], "bodi": [2, 33, 76, 93, 104, 105, 108, 109, 111, 113, 114, 116, 117, 118, 120, 123, 124, 129, 130, 165, 171, 172, 175, 179, 180, 241, 242, 248], "inform": [2, 4, 7, 8, 9, 11, 12, 14, 15, 28, 29, 32, 33, 34, 37, 42, 43, 49, 51, 52, 56, 59, 63, 76, 78, 80, 84, 87, 92, 95, 106, 107, 109, 113, 114, 116, 123, 124, 126, 127, 129, 130, 157, 162, 167, 171, 172, 176, 180, 182, 186, 191, 192, 196, 197, 203, 206, 208, 209, 210, 214, 215, 216, 220, 221, 222, 227, 228, 229, 230, 231, 241, 245, 247, 271], "ctimesd": 2, "circular": [2, 7, 99, 134, 189], "relationship": [2, 7, 33, 51, 56, 58, 78, 91, 146, 172, 177, 180, 186, 214], "runtimeerror": [2, 31, 204, 215, 234], "call": [2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 22, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 40, 41, 42, 43, 49, 51, 52, 54, 55, 56, 58, 59, 61, 66, 67, 69, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 101, 105, 114, 116, 117, 126, 127, 152, 154, 157, 162, 167, 172, 177, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 196, 198, 203, 204, 206, 208, 209, 211, 212, 214, 215, 216, 218, 220, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 241, 243, 244, 247, 249, 261, 263, 265, 266, 267, 270, 271, 272], "compileflag": [2, 227], "glob": [2, 227], "recurs": [2, 4, 7, 18, 31, 51, 56, 76, 78, 81, 82, 91, 116, 182, 189, 192, 193, 196, 197, 200, 201, 203, 208, 214, 215, 220, 225, 227, 231, 232, 234, 262, 271], "depth": [2, 3, 14, 15, 17, 42, 51, 116, 182, 183, 196, 258], "exceed": [2, 116], "yet": [2, 7, 12, 13, 18, 26, 28, 31, 32, 55, 56, 78, 126, 142, 183, 186, 187, 191, 193, 195, 204, 212, 215, 261], "stdin": [2, 230, 232], "nameerror": [2, 79, 230, 263], "isympi": [2, 10, 11, 79], "command": [2, 9, 11, 13, 14, 20, 33, 55, 79, 114, 124, 129, 176, 182, 196, 227, 228, 270], "give": [2, 7, 8, 11, 12, 14, 18, 26, 28, 33, 34, 40, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 59, 61, 63, 64, 66, 67, 75, 76, 78, 79, 81, 84, 87, 90, 91, 92, 94, 101, 114, 129, 141, 156, 157, 159, 160, 164, 165, 167, 168, 170, 172, 175, 177, 179, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 196, 197, 198, 199, 203, 204, 205, 206, 208, 209, 212, 214, 215, 216, 227, 228, 229, 234, 244, 249, 263, 264, 266, 271, 272], "default": [2, 7, 11, 12, 14, 15, 18, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 41, 42, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 73, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 95, 99, 101, 103, 105, 106, 107, 108, 109, 110, 114, 126, 135, 152, 154, 157, 159, 160, 162, 168, 171, 172, 174, 175, 176, 181, 182, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 203, 204, 205, 208, 209, 212, 213, 214, 215, 216, 221, 222, 227, 228, 229, 231, 232, 234, 235, 237, 241, 260, 261, 265, 267, 270, 271], "__future__": [2, 5, 263, 270], "divis": [2, 18, 51, 87, 91, 164, 183, 186, 187, 188, 189, 192, 194, 196, 212, 214, 227, 235, 263, 266, 270], "cl": [2, 7, 18, 33, 42, 51, 78, 82, 162, 175, 187, 191, 212, 221, 230, 234, 246, 261, 270, 272], "dir": [2, 51, 94, 198, 203, 234], "u": [2, 25, 31, 32, 42, 50, 51, 52, 54, 65, 68, 73, 76, 78, 84, 87, 91, 108, 109, 110, 113, 114, 116, 117, 120, 124, 126, 127, 129, 130, 135, 146, 151, 175, 177, 179, 182, 184, 185, 189, 191, 196, 206, 208, 209, 212, 213, 214, 215, 216, 221, 247], "__builtins__": 2, "__doc__": [2, 14], "__file__": [2, 238], "__name__": [2, 196, 238], "__package__": 2, "_greek": 2, "_latin": 2, "alpha": [2, 15, 42, 51, 59, 78, 80, 134, 138, 141, 159, 175, 179, 180, 181, 187, 189, 191, 192, 195, 196, 208, 212, 216], "beta": [2, 14, 33, 42, 51, 58, 78, 159, 172, 181, 191, 193, 196, 212, 216], "chi": [2, 59, 76, 134, 196, 206, 216, 222], "eta": [2, 59, 76, 191, 196, 212, 213, 216], "gamma": [2, 14, 15, 18, 50, 51, 53, 55, 56, 58, 76, 78, 104, 129, 159, 180, 181, 196, 206, 208, 212, 216, 257, 271], "iota": [2, 196], "kappa": [2, 196, 216], "mu": [2, 59, 76, 91, 102, 104, 133, 196, 216, 222], "nu": [2, 15, 59, 78, 91, 163, 184, 196, 208, 216, 222, 265], "omega": [2, 33, 34, 42, 76, 91, 106, 111, 113, 127, 130, 136, 138, 163, 172, 175, 176, 179, 181, 196, 203, 216], "omicron": [2, 196], "phi": [2, 42, 51, 52, 56, 59, 76, 80, 87, 91, 103, 129, 136, 145, 147, 181, 183, 191, 196, 212, 241, 250], "psi": [2, 59, 76, 134, 145, 146, 152, 160, 191, 196, 222], "rho": [2, 53, 76, 87, 91, 156, 196, 216, 222, 250], "sigma": [2, 43, 74, 76, 82, 87, 196, 199, 216], "tau": [2, 33, 76, 78, 87, 191, 196, 212], "theta": [2, 51, 53, 57, 59, 76, 79, 87, 93, 103, 113, 130, 134, 172, 180, 181, 187, 191, 196, 199, 204, 215, 216, 241, 242, 245, 247, 250], "upsilon": [2, 196], "xi": [2, 18, 53, 76, 196, 212, 213, 214], "zeta": [2, 50, 51, 55, 56, 58, 187, 191, 196, 203, 216], "assumpt": [2, 6, 8, 14, 21, 26, 27, 29, 30, 32, 33, 42, 43, 45, 50, 53, 55, 57, 58, 78, 81, 82, 87, 88, 101, 105, 129, 169, 174, 185, 196, 204, 205, 208, 212, 214, 215, 221, 229, 234, 251, 252, 271], "lastli": [2, 78, 95, 130, 212], "those": [2, 7, 8, 11, 14, 24, 29, 32, 33, 34, 42, 43, 49, 50, 51, 52, 55, 64, 65, 76, 78, 81, 87, 90, 91, 105, 116, 121, 135, 159, 171, 174, 176, 179, 180, 182, 186, 187, 189, 191, 192, 194, 195, 196, 202, 204, 208, 212, 213, 214, 215, 216, 222, 225, 227, 231, 234, 241, 243, 263, 265, 271], "imaginari": [2, 7, 12, 14, 18, 25, 28, 30, 51, 55, 57, 59, 82, 129, 186, 187, 192, 196, 197, 204, 208, 215], "unit": [2, 18, 25, 28, 32, 51, 52, 56, 64, 65, 66, 78, 87, 91, 94, 99, 101, 103, 104, 114, 127, 129, 138, 163, 164, 165, 169, 171, 172, 177, 180, 182, 184, 187, 189, 191, 192, 194, 196, 204, 206, 209, 215, 217, 241, 242, 244, 249, 250, 257], "base": [2, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 27, 28, 31, 33, 34, 40, 41, 42, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 62, 64, 67, 74, 78, 79, 80, 81, 83, 84, 87, 91, 92, 98, 106, 108, 114, 116, 129, 130, 131, 140, 142, 146, 147, 151, 157, 158, 160, 162, 164, 167, 168, 170, 172, 174, 176, 177, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 196, 198, 200, 203, 204, 205, 206, 208, 209, 210, 212, 214, 216, 220, 221, 222, 227, 228, 229, 230, 231, 232, 234, 235, 236, 241, 243, 244, 247, 258, 266, 271], "logarithm": [2, 15, 25, 31, 33, 51, 52, 57, 58, 76, 78, 87, 91, 187, 189, 193, 196, 206, 208, 215, 216, 262], "sympifi": [2, 7, 8, 33, 55, 61, 81, 127, 135, 160, 162, 172, 173, 186, 187, 252, 260, 266], "evalf": [2, 7, 11, 14, 33, 50, 55, 56, 57, 59, 70, 73, 74, 82, 87, 93, 114, 116, 129, 144, 187, 192, 203, 204, 208, 216, 228, 235, 252, 262], "log": [2, 14, 15, 18, 20, 25, 31, 33, 42, 50, 51, 55, 56, 58, 59, 69, 73, 75, 76, 78, 82, 87, 91, 182, 187, 196, 198, 203, 206, 208, 212, 215, 216, 223, 261, 271, 272], "hold": [2, 18, 28, 32, 42, 47, 51, 52, 53, 57, 59, 73, 76, 87, 90, 93, 101, 103, 108, 110, 111, 127, 158, 192, 206, 208, 212, 216, 229, 271], "ask": [2, 4, 7, 8, 11, 14, 27, 28, 29, 30, 51, 63, 76, 114, 167, 183, 202, 208, 215, 234, 263], "mnemon": [2, 205, 234], "osineq": 2, "Or": [2, 8, 9, 15, 42, 51, 52, 53, 59, 76, 81, 91, 111, 183, 193, 195, 196, 208, 215, 216, 227, 235, 247, 266, 269], "lowercas": [2, 212, 227, 261], "letter": [2, 15, 24, 44, 51, 52, 91, 162, 196, 234, 261, 263], "prevent": [2, 12, 33, 51, 88, 91, 105, 185, 187, 192, 196, 208, 216, 225, 232, 262], "overrid": [2, 33, 51, 60, 61, 67, 93, 160, 196, 221, 228, 229, 234, 235], "care": [2, 8, 18, 42, 51, 59, 78, 87, 94, 105, 114, 126, 172, 180, 186, 191, 208, 209, 212, 214, 215, 220, 223, 228, 260, 263, 265], "notic": [2, 18, 42, 43, 49, 51, 87, 150, 171, 186, 206, 222, 223, 234, 235, 263, 265, 266, 271], "warn": [2, 3, 12, 14, 18, 51, 52, 66, 93, 172, 180, 184, 212, 214, 225, 227, 229, 233, 234, 259, 267], "No": [2, 11, 14, 15, 32, 51, 59, 66, 81, 91, 102, 114, 157, 182, 192, 198, 199, 208, 209, 214, 215, 216, 221, 225, 231, 232, 234, 260, 272], "5": [2, 3, 7, 15, 18, 22, 25, 27, 28, 29, 31, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 99, 101, 103, 104, 106, 111, 114, 116, 120, 121, 122, 123, 124, 131, 135, 156, 157, 160, 162, 169, 171, 173, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 221, 222, 227, 228, 234, 235, 241, 243, 245, 247, 249, 250, 260, 261, 263, 266, 267, 270, 271], "15": [2, 14, 18, 31, 37, 40, 42, 47, 49, 51, 52, 54, 55, 56, 59, 61, 64, 65, 67, 68, 76, 78, 81, 82, 83, 87, 88, 91, 94, 135, 181, 182, 184, 185, 186, 187, 191, 192, 193, 195, 196, 198, 202, 203, 205, 208, 209, 213, 214, 215, 216, 217, 234, 260, 261, 266, 267], "reimport": 2, "restor": [2, 186, 208], "everyth": [2, 12, 15, 18, 33, 51, 53, 59, 78, 85, 103, 126, 158, 159, 182, 196, 266, 270], "__": [2, 59, 78, 196, 216, 221], "instal": [2, 11, 13, 15, 19, 21, 23, 55, 92, 186, 187, 196, 228, 235, 259, 264, 270], "press": [2, 32, 34, 35, 43, 52, 78, 82, 181, 190, 209, 214], "tab": [2, 9, 47, 129], "autocomplet": 2, "complet": [2, 7, 11, 12, 14, 21, 23, 28, 33, 51, 52, 53, 55, 57, 58, 59, 67, 76, 78, 87, 91, 105, 109, 110, 117, 123, 129, 148, 151, 152, 180, 189, 192, 193, 197, 203, 208, 209, 212, 215, 216, 227, 229, 237, 265, 266, 271], "consol": [2, 11, 12, 51, 79, 176, 182, 270], "best": [2, 12, 16, 20, 33, 51, 59, 76, 78, 92, 161, 182, 193, 196, 205, 206, 208, 212, 215, 220, 228, 263, 264, 270, 271], "lose": [2, 183], "abil": [2, 7, 31, 87, 123, 191, 195, 212, 215, 265, 271], "past": [2, 57, 91, 195, 196, 270], "callabl": [2, 11, 33, 42, 87, 93, 147, 191, 196, 197, 208, 225, 228, 229, 234, 235, 236], "f1": [2, 42, 76, 78, 87, 101, 106, 114, 121, 129, 182, 187, 189, 192, 196, 198, 214], "f2": [2, 51, 76, 87, 101, 106, 114, 121, 129, 165, 182, 189, 192, 196, 198, 214], "own": [2, 11, 13, 14, 18, 27, 35, 42, 43, 51, 67, 95, 114, 129, 191, 196, 203, 208, 212, 231, 234, 235, 265], "ensur": [2, 12, 18, 20, 51, 52, 55, 83, 87, 127, 191, 192, 196, 210, 227, 232, 235], "6": [2, 3, 5, 25, 27, 28, 31, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 73, 74, 76, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 101, 102, 103, 116, 120, 121, 122, 131, 135, 141, 159, 171, 172, 180, 181, 182, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 198, 201, 202, 203, 204, 205, 208, 209, 213, 214, 215, 216, 217, 227, 228, 231, 234, 235, 241, 243, 245, 250, 261, 267, 271, 272], "accuraci": [2, 5, 31, 51, 192, 252, 267], "2000000000000002": 2, "py3k": 2, "precis": [2, 7, 8, 11, 12, 14, 18, 33, 42, 51, 54, 55, 56, 59, 67, 78, 87, 91, 99, 127, 181, 183, 186, 187, 191, 192, 193, 196, 203, 208, 209, 214, 215, 228, 229, 237, 260, 271], "20000000000000": 2, "core": [2, 4, 7, 8, 11, 12, 13, 14, 18, 21, 23, 29, 31, 33, 42, 52, 57, 58, 60, 68, 82, 86, 91, 93, 160, 161, 184, 186, 187, 188, 189, 191, 192, 193, 196, 203, 204, 208, 209, 212, 216, 226, 227, 228, 234, 235, 239, 251, 252, 263, 266], "awar": [2, 8, 11, 12, 14, 31, 51, 55, 81, 87, 206, 216, 235], "chanc": [2, 8, 12, 51, 79, 206, 216, 266], "sympyifi": 2, "With": [2, 8, 12, 20, 33, 50, 51, 55, 76, 91, 117, 118, 125, 126, 135, 159, 162, 180, 182, 183, 184, 186, 187, 194, 195, 196, 203, 208, 214, 217, 234, 265, 266], "shorthand": [2, 7, 18, 51, 81, 156, 191, 204, 225], "worri": [2, 51, 266], "mistak": [2, 15, 42, 235], "reus": [2, 18, 33, 162, 265], "obtain": [2, 5, 15, 27, 28, 32, 34, 35, 42, 43, 44, 47, 51, 52, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 73, 76, 78, 80, 82, 87, 90, 91, 98, 101, 123, 125, 127, 135, 157, 162, 167, 183, 184, 187, 189, 191, 192, 195, 197, 204, 205, 206, 208, 209, 212, 213, 214, 215, 234, 237, 244, 245], "7": [2, 3, 7, 14, 18, 22, 25, 27, 28, 31, 33, 35, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 73, 76, 78, 81, 82, 84, 85, 87, 91, 93, 94, 96, 99, 101, 116, 122, 124, 125, 129, 162, 167, 169, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 198, 199, 202, 203, 204, 205, 206, 208, 209, 211, 213, 214, 215, 216, 217, 221, 222, 227, 228, 231, 234, 235, 241, 250, 261, 266, 267, 270], "22": [2, 14, 42, 51, 54, 55, 56, 59, 87, 91, 94, 95, 127, 190, 195, 208, 209, 214, 216], "142857142857143": 2, "One": [2, 4, 7, 18, 31, 32, 33, 41, 43, 50, 56, 57, 59, 70, 73, 75, 76, 78, 81, 87, 91, 94, 95, 114, 127, 129, 138, 167, 187, 189, 190, 192, 195, 198, 204, 208, 214, 215, 216, 217, 222, 235, 247, 260, 261, 263, 266, 267, 271], "again": [2, 5, 8, 9, 12, 43, 51, 66, 91, 114, 116, 127, 157, 158, 172, 179, 183, 184, 191, 199, 206, 212, 225, 244, 263, 271], "quot": [2, 14, 33, 81, 196, 237], "achiev": [2, 18, 51, 55, 59, 84, 91, 114, 129, 195, 203, 206, 208, 215, 230, 245], "receiv": [2, 51, 52, 91, 106, 157, 191, 221], "fraction": [2, 51, 52, 55, 57, 67, 78, 87, 91, 107, 168, 186, 187, 188, 189, 190, 193, 196, 198, 209, 212, 214, 262], "invalid": [2, 15, 51, 52, 93, 116, 186, 189, 204], "keep": [2, 4, 12, 14, 18, 19, 47, 51, 52, 55, 56, 59, 76, 87, 109, 127, 146, 162, 182, 185, 186, 187, 192, 203, 204, 206, 208, 212, 214, 222, 249, 261, 266], "digit": [2, 14, 33, 51, 52, 54, 55, 61, 78, 81, 91, 123, 172, 186, 192, 203, 208, 234, 260], "calcul": [2, 5, 7, 11, 25, 31, 34, 43, 49, 51, 52, 53, 54, 55, 57, 59, 61, 63, 64, 65, 67, 68, 78, 82, 84, 87, 91, 94, 95, 103, 105, 106, 109, 113, 116, 117, 131, 134, 135, 138, 141, 157, 158, 159, 160, 162, 163, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 186, 187, 189, 191, 192, 193, 198, 203, 212, 216, 220, 228, 229, 235, 241, 243, 247, 248, 249, 267, 270], "signific": [2, 7, 12, 33, 51, 52, 55, 78, 87, 105, 127, 156, 186, 215, 235, 266], "first": [2, 5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 20, 32, 33, 34, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 75, 76, 78, 80, 81, 82, 87, 90, 91, 94, 95, 101, 102, 107, 108, 109, 113, 114, 116, 117, 118, 123, 126, 127, 130, 134, 135, 139, 143, 146, 151, 152, 155, 156, 157, 158, 159, 161, 162, 165, 167, 172, 175, 179, 180, 182, 183, 185, 187, 189, 190, 191, 192, 193, 196, 197, 198, 199, 202, 203, 205, 206, 208, 209, 212, 213, 214, 215, 216, 220, 222, 225, 227, 228, 229, 230, 234, 235, 237, 245, 250, 260, 261, 263, 265, 266, 267, 269, 271, 272], "mind": [2, 4, 7, 14, 51, 87, 127, 182, 203, 204, 249, 266], "indic": [2, 4, 7, 12, 14, 31, 32, 33, 34, 35, 40, 42, 43, 44, 46, 47, 49, 50, 51, 54, 55, 56, 59, 61, 66, 67, 76, 78, 81, 82, 84, 87, 90, 91, 102, 113, 117, 146, 157, 159, 160, 162, 167, 171, 172, 181, 185, 186, 187, 191, 192, 193, 196, 203, 204, 205, 207, 208, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 234, 267], "appear": [2, 14, 15, 32, 33, 35, 40, 42, 51, 52, 56, 57, 60, 61, 64, 67, 70, 74, 76, 78, 82, 87, 91, 93, 114, 117, 146, 162, 164, 167, 182, 184, 186, 189, 191, 192, 196, 205, 208, 212, 213, 214, 216, 220, 222, 227, 234, 235, 241, 245], "interpret": [2, 8, 21, 33, 42, 50, 51, 56, 59, 64, 67, 78, 82, 84, 87, 91, 93, 105, 167, 182, 184, 191, 192, 196, 203, 209, 214, 215, 216, 221, 227, 228, 231, 237, 267], "exact": [2, 7, 12, 18, 29, 50, 51, 52, 55, 61, 66, 73, 76, 78, 82, 87, 94, 129, 156, 186, 187, 189, 192, 203, 208, 212, 214, 227, 237, 263, 265, 270], "100": [2, 18, 33, 35, 40, 50, 51, 52, 55, 59, 67, 74, 81, 82, 87, 91, 94, 182, 186, 191, 193, 195, 196, 203, 214, 215, 234, 260], "000000000000": 2, "00": [2, 51, 91, 146, 156, 209, 234], "null": [2, 51, 87], "12": [2, 14, 18, 25, 31, 32, 33, 37, 39, 40, 42, 43, 44, 47, 49, 50, 51, 52, 54, 56, 57, 59, 61, 64, 65, 67, 76, 78, 82, 87, 88, 91, 94, 95, 99, 101, 103, 116, 127, 159, 172, 181, 184, 185, 186, 189, 191, 192, 193, 195, 196, 202, 204, 205, 209, 211, 212, 216, 217, 228, 231, 234, 243, 267, 271], "34": [2, 33, 43, 56, 64, 87, 91, 144, 190, 195, 202, 208, 209], "3400000000000": 2, "25": [2, 14, 42, 43, 52, 54, 56, 59, 61, 64, 66, 83, 87, 90, 91, 94, 95, 101, 111, 175, 181, 189, 191, 192, 195, 196, 202, 203, 205, 209, 211, 212, 213, 216, 228], "250": [2, 91, 209], "143": [2, 141, 181], "next": [2, 5, 7, 18, 24, 33, 34, 35, 40, 42, 43, 45, 46, 51, 52, 57, 76, 78, 81, 87, 91, 105, 106, 109, 117, 118, 120, 122, 123, 130, 179, 180, 183, 187, 191, 192, 196, 204, 206, 209, 212, 231, 232, 234, 264, 265, 266], "20": [2, 14, 29, 33, 40, 42, 43, 50, 51, 52, 55, 56, 59, 67, 68, 78, 87, 91, 94, 95, 101, 111, 167, 169, 182, 186, 190, 191, 192, 193, 195, 196, 202, 203, 204, 205, 208, 209, 212, 215, 216, 241, 261], "appar": [2, 51, 237, 271], "non": [2, 7, 11, 12, 18, 24, 29, 31, 34, 41, 44, 50, 51, 52, 56, 57, 58, 59, 60, 61, 64, 65, 66, 78, 80, 81, 82, 83, 84, 87, 88, 90, 105, 109, 111, 116, 117, 121, 124, 125, 129, 146, 151, 161, 162, 164, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 199, 203, 204, 206, 208, 209, 211, 212, 214, 215, 216, 217, 220, 221, 222, 227, 229, 234, 237, 247, 266, 271, 272], "repeat": [2, 9, 42, 45, 50, 51, 57, 59, 78, 80, 82, 87, 91, 93, 146, 148, 162, 182, 183, 184, 189, 191, 192, 196, 202, 212, 216, 220, 221, 228, 230, 234, 271], "binari": [2, 8, 18, 29, 33, 35, 46, 51, 52, 78, 81, 91, 92, 156, 168, 183, 186, 192, 209, 228, 231, 234], "decim": [2, 18, 33, 51, 54, 55, 91, 93, 99, 186, 192, 265], "accur": [2, 5, 12, 18, 31, 42, 51, 55, 56, 73, 78, 98, 182, 203, 260, 267], "too": [2, 14, 18, 42, 43, 51, 57, 59, 61, 64, 66, 76, 81, 90, 91, 92, 124, 131, 203, 204, 208, 209, 212, 214, 215, 216, 227, 228, 243, 244], "far": [2, 32, 51, 65, 78, 183, 186, 196, 206, 235, 260, 261, 263], "142857": 2, "25000000000000000000": 2, "14285278320312500000": 2, "realiz": [2, 36, 42, 53, 81, 91, 117, 183, 184, 189, 216], "displai": [2, 7, 8, 14, 15, 51, 52, 55, 76, 80, 94, 95, 99, 133, 166, 172, 175, 176, 182, 186, 187, 196, 204, 220, 227], "onc": [2, 7, 8, 9, 12, 18, 33, 35, 42, 47, 51, 52, 56, 59, 67, 76, 78, 92, 95, 107, 108, 123, 126, 167, 172, 174, 180, 182, 184, 186, 192, 196, 197, 205, 206, 208, 212, 215, 222, 234, 244, 260, 261, 271, 272], "subsequ": [2, 14, 51, 57, 172, 187, 189, 192, 231, 234, 244, 247], "pad": [2, 33, 52, 53, 54, 66, 91], "inexact": [2, 51, 187], "low": [2, 7, 8, 33, 51, 52, 59, 91, 186, 189, 194, 196, 208, 228, 229, 234], "higher": [2, 5, 31, 33, 51, 53, 55, 59, 62, 87, 175, 181, 183, 186, 189, 192, 198, 199, 203, 205, 208, 212, 214, 217, 235, 261], "engin": [2, 97, 128, 129, 178, 212, 270], "increas": [2, 31, 32, 43, 49, 50, 51, 54, 55, 59, 82, 91, 92, 105, 115, 146, 171, 172, 174, 179, 180, 186, 189, 191, 192, 198, 201, 205, 212, 216, 232, 234], "2000061035": 2, "maintain": [2, 51, 52, 91, 95, 196, 204, 205, 212, 215, 231], "highest": [2, 33, 45, 80, 105, 183, 192, 199, 209, 212], "simpl": [2, 5, 7, 14, 18, 19, 20, 32, 33, 42, 50, 51, 55, 59, 63, 67, 69, 76, 78, 80, 87, 91, 92, 94, 95, 101, 102, 105, 108, 109, 111, 113, 116, 117, 118, 120, 122, 123, 126, 130, 136, 150, 151, 159, 160, 161, 172, 179, 180, 186, 187, 188, 192, 193, 196, 198, 203, 205, 206, 208, 209, 212, 215, 222, 228, 229, 234, 238, 240, 241, 242, 243, 247, 260, 263, 266, 267, 271], "hopefulli": [2, 6, 76], "understand": [2, 7, 8, 14, 18, 51, 52, 76, 114, 123, 124, 125, 129, 167, 179, 182, 185, 186, 191, 206, 209, 228, 235, 262, 263, 270, 271], "complic": [2, 7, 14, 18, 33, 42, 50, 52, 53, 55, 56, 57, 59, 76, 78, 84, 123, 124, 162, 180, 186, 189, 193, 195, 206, 208, 215, 216, 220, 221, 229, 231, 235, 237, 261, 263, 266, 267], "even": [2, 4, 7, 12, 14, 15, 18, 26, 27, 28, 30, 33, 34, 39, 42, 43, 50, 51, 52, 55, 56, 57, 59, 63, 67, 76, 78, 81, 82, 87, 90, 91, 102, 114, 123, 147, 158, 165, 167, 172, 181, 184, 185, 186, 187, 189, 191, 192, 193, 196, 197, 203, 204, 205, 206, 208, 209, 212, 214, 215, 223, 227, 249, 260, 261, 263, 265, 266, 271, 272], "though": [2, 7, 8, 14, 18, 24, 34, 51, 52, 53, 63, 67, 76, 78, 82, 87, 91, 105, 109, 116, 124, 126, 157, 171, 172, 179, 180, 184, 186, 187, 192, 193, 205, 206, 208, 212, 213, 214, 215, 227, 247, 261, 266, 271], "simplif": [2, 7, 11, 26, 28, 30, 31, 33, 51, 53, 56, 57, 76, 82, 87, 93, 107, 114, 126, 129, 146, 162, 172, 192, 197, 207, 212, 214, 215, 251, 252, 254, 260, 262, 264, 265], "unsimplifi": [2, 205], "ident": [2, 12, 18, 29, 32, 34, 41, 42, 43, 49, 51, 52, 56, 57, 67, 74, 80, 82, 84, 87, 102, 104, 127, 146, 148, 151, 167, 183, 184, 185, 189, 190, 191, 192, 196, 205, 208, 212, 215, 220, 222, 227, 234, 235, 237, 245, 263, 267, 271], "12345678901234567890": 2, "big_trig_ident": 2, "ab": [2, 30, 33, 34, 50, 51, 52, 55, 56, 58, 59, 63, 74, 76, 81, 82, 87, 97, 103, 129, 162, 184, 187, 191, 192, 196, 209, 211, 214, 215, 216, 222, 231, 234, 237, 246, 271], "gave": [2, 51, 234], "larg": [2, 7, 11, 12, 14, 42, 43, 51, 52, 61, 76, 78, 90, 91, 105, 110, 126, 129, 142, 167, 171, 181, 186, 187, 189, 192, 195, 196, 197, 203, 206, 208, 216, 221, 228, 235, 237, 243, 260, 265, 271], "approxim": [2, 3, 6, 14, 31, 42, 50, 51, 52, 55, 59, 61, 67, 76, 78, 87, 91, 95, 98, 131, 165, 182, 186, 187, 192, 199, 203, 206, 216, 253, 261, 265], "three": [2, 5, 7, 12, 18, 21, 25, 29, 33, 42, 43, 44, 47, 51, 52, 56, 59, 61, 65, 66, 67, 76, 80, 81, 82, 94, 95, 113, 119, 120, 121, 135, 157, 159, 164, 172, 175, 179, 180, 181, 182, 183, 184, 187, 189, 192, 196, 206, 208, 209, 214, 215, 216, 227, 241, 242, 247, 250, 263, 266, 271], "pass": [2, 4, 7, 8, 11, 12, 13, 14, 18, 24, 25, 28, 31, 32, 33, 42, 43, 51, 52, 53, 55, 57, 58, 59, 61, 64, 65, 67, 78, 79, 81, 82, 84, 87, 88, 91, 93, 94, 99, 101, 106, 113, 114, 117, 129, 130, 134, 151, 152, 156, 157, 159, 160, 172, 176, 182, 183, 185, 186, 187, 189, 191, 192, 194, 196, 197, 203, 204, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 227, 228, 229, 230, 232, 234, 235, 237, 240, 241, 260, 261, 266, 270, 271, 272], "By": [2, 7, 11, 18, 26, 28, 33, 41, 50, 51, 53, 55, 56, 59, 65, 66, 70, 74, 76, 81, 82, 87, 90, 91, 92, 93, 94, 95, 99, 106, 157, 162, 182, 184, 186, 187, 189, 191, 192, 193, 195, 196, 198, 203, 205, 208, 209, 212, 214, 215, 216, 220, 222, 223, 227, 230, 234, 235, 247, 260, 265, 266, 271], "re": [2, 12, 18, 30, 31, 33, 42, 43, 51, 52, 55, 58, 59, 76, 78, 87, 172, 174, 177, 183, 189, 196, 197, 198, 204, 205, 206, 212, 227, 243, 245, 261, 263, 266], "gain": [2, 52, 101, 124, 125, 129], "impress": 2, "91": [2, 34, 190, 195, 202, 216], "compar": [2, 7, 31, 33, 43, 48, 51, 57, 68, 81, 87, 91, 92, 116, 141, 165, 169, 186, 189, 192, 193, 196, 201, 203, 208, 212, 215, 217, 221, 227, 234, 263, 266, 271], "4e": [2, 214], "nearli": [2, 91, 205], "modifi": [2, 15, 32, 33, 42, 51, 57, 59, 91, 93, 125, 134, 182, 189, 191, 192, 193, 196, 208, 214, 215, 216, 227, 230, 231, 234, 235, 260, 265, 267], "origin": [2, 5, 7, 13, 20, 25, 42, 43, 44, 47, 50, 51, 52, 55, 56, 57, 59, 60, 62, 64, 66, 76, 78, 82, 87, 91, 99, 101, 102, 117, 126, 129, 154, 157, 167, 173, 177, 182, 183, 187, 191, 192, 195, 196, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 222, 227, 234, 235, 241, 243, 244, 245, 246, 247, 249, 250, 271], "snippet": [2, 33], "demonstr": [2, 7, 14, 15, 18, 42, 43, 51, 78, 91, 106, 108, 114, 117, 118, 126, 183, 186, 246, 271], "expr": [2, 7, 12, 14, 18, 27, 28, 30, 31, 33, 43, 50, 53, 55, 57, 59, 61, 73, 76, 78, 81, 84, 87, 92, 93, 101, 105, 107, 114, 126, 139, 143, 145, 147, 151, 154, 157, 159, 160, 162, 169, 172, 174, 176, 182, 184, 185, 186, 187, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 203, 205, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 228, 229, 230, 232, 235, 241, 242, 243, 244, 245, 247, 252, 260, 261, 263, 265, 266, 270, 271, 272], "expr_modifi": 2, "__main__": [2, 33, 267], "show": [2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 33, 43, 50, 51, 55, 57, 74, 76, 78, 87, 91, 94, 95, 99, 105, 114, 119, 127, 129, 157, 161, 165, 167, 172, 179, 180, 182, 183, 186, 187, 189, 191, 192, 196, 197, 199, 203, 204, 205, 206, 208, 209, 212, 214, 216, 217, 225, 228, 229, 232, 234, 235, 263, 265, 267, 270], "unlik": [2, 7, 8, 11, 14, 30, 52, 78, 87, 91, 93, 114, 179, 189, 196, 209, 212, 215, 231, 232, 263, 265, 266, 267, 270], "high": [2, 5, 7, 14, 15, 33, 51, 55, 56, 79, 91, 129, 176, 186, 191, 194, 196, 209, 214, 257, 267], "declar": [2, 7, 33, 64, 76, 87, 93, 102, 114, 116, 129, 141, 185, 196, 203, 206, 211, 212, 213, 216, 229], "asid": [2, 81, 212, 213, 265], "impli": [2, 7, 15, 25, 29, 33, 42, 81, 162, 182, 187, 189, 196, 204, 206, 212, 217, 220, 221, 234, 247], "wish": [2, 11, 14, 18, 20, 33, 51, 52, 55, 76, 91, 157, 171, 180, 231, 235, 261, 265, 267, 272], "mani": [2, 5, 7, 8, 11, 12, 14, 18, 20, 31, 32, 33, 34, 39, 42, 47, 51, 52, 53, 55, 57, 59, 63, 76, 78, 81, 82, 87, 91, 92, 109, 110, 114, 116, 123, 125, 126, 129, 146, 162, 170, 180, 183, 185, 186, 187, 189, 191, 200, 203, 204, 206, 208, 209, 212, 213, 214, 215, 216, 220, 229, 234, 260, 261, 263, 264, 265, 266, 270, 271, 272], "parenthes": [2, 14, 51, 93, 105, 150, 151, 180, 196, 220, 237], "preced": [2, 14, 15, 34, 43, 51, 52, 55, 56, 142, 208, 235], "expect": [2, 7, 14, 15, 18, 32, 34, 36, 51, 57, 59, 63, 81, 91, 92, 101, 114, 156, 186, 189, 191, 193, 194, 203, 208, 211, 215, 216, 225, 227, 228, 231, 234, 235, 265, 266], "shell": [2, 9, 79, 129, 195], "2x": [2, 51, 59, 76, 93, 208, 209, 215, 216, 260, 263, 271], "syntaxerror": [2, 93], "pprint": [2, 18, 31, 32, 53, 59, 78, 87, 91, 101, 134, 181, 196, 197, 204, 208, 212, 213, 215, 216, 234, 270], "asin": [2, 58, 59, 65, 193, 196, 206, 208, 212, 216, 271], "aco": [2, 14, 25, 58, 64, 67, 116, 129, 135, 172, 196, 212, 241, 271], "arcsin": [2, 57, 193, 196, 216], "arcco": [2, 57, 196], "method": [2, 6, 7, 9, 11, 12, 14, 15, 19, 27, 28, 29, 31, 32, 33, 34, 35, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 67, 70, 73, 75, 76, 78, 80, 82, 83, 84, 87, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 105, 108, 113, 114, 118, 119, 123, 128, 129, 136, 139, 141, 143, 151, 152, 157, 159, 162, 164, 169, 170, 171, 172, 174, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 201, 202, 203, 204, 208, 209, 210, 212, 214, 216, 217, 219, 221, 222, 223, 227, 229, 231, 234, 235, 241, 244, 247, 250, 251, 260, 261, 262, 263, 266, 271], "root": [2, 7, 18, 22, 31, 33, 50, 51, 52, 58, 59, 73, 74, 75, 76, 78, 80, 83, 87, 91, 129, 167, 181, 183, 184, 187, 188, 191, 193, 195, 196, 206, 207, 212, 214, 215, 216, 227, 231, 234, 265, 267, 270, 272], "expon": [2, 30, 33, 38, 51, 52, 57, 58, 59, 76, 78, 84, 91, 99, 101, 168, 184, 185, 186, 188, 192, 193, 196, 205, 208, 212, 215, 220, 231, 271], "half": [2, 18, 33, 52, 56, 57, 59, 61, 67, 78, 80, 87, 91, 93, 94, 131, 134, 159, 181, 187, 189, 191, 192, 204, 205, 206, 208, 216, 227, 234], "neg": [2, 7, 8, 14, 28, 30, 33, 34, 46, 50, 51, 56, 57, 59, 61, 63, 64, 67, 76, 78, 80, 81, 82, 87, 90, 91, 94, 95, 98, 99, 101, 162, 172, 184, 185, 187, 189, 191, 192, 193, 196, 202, 204, 205, 206, 208, 209, 212, 214, 215, 216], "denomin": [2, 51, 55, 59, 78, 91, 101, 107, 184, 186, 187, 189, 191, 192, 195, 196, 205, 206, 208, 209, 212, 214, 271], "find": [2, 5, 6, 14, 18, 22, 25, 28, 31, 33, 34, 42, 45, 46, 47, 50, 51, 55, 57, 59, 61, 63, 64, 65, 68, 73, 76, 78, 80, 87, 91, 93, 107, 115, 121, 127, 129, 131, 147, 154, 156, 157, 158, 162, 165, 167, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 195, 196, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 214, 215, 216, 222, 231, 234, 235, 237, 241, 250, 261, 263, 265, 267, 272], "wild": [2, 208, 234], "interest": [2, 18, 47, 51, 53, 56, 57, 67, 76, 78, 87, 91, 115, 116, 162, 167, 180, 183, 187, 191, 192, 193, 195, 203, 206, 208, 209, 214, 215, 228, 229, 245, 261, 264, 266, 267, 268, 271], "appropri": [2, 5, 11, 14, 15, 42, 51, 57, 66, 87, 105, 116, 151, 152, 162, 172, 179, 185, 186, 192, 193, 196, 202, 203, 208, 209, 214, 216, 221, 229, 245, 270], "sq": [2, 209], "lambda": [2, 18, 27, 28, 31, 33, 42, 43, 52, 53, 57, 78, 82, 83, 84, 87, 90, 91, 93, 114, 125, 126, 129, 130, 147, 182, 189, 191, 192, 196, 197, 204, 205, 208, 212, 214, 215, 216, 217, 225, 234, 235, 241, 242, 245, 260, 267], "is_pow": [2, 33, 51, 57], "is_rat": [2, 7, 191, 234], "link": [2, 12, 14, 15, 16, 22, 33, 52, 61, 67, 78, 102, 108, 123, 228, 231, 232, 269], "bracket": [2, 18, 43, 51, 59, 160, 162, 172, 196], "item": [2, 14, 15, 33, 40, 41, 43, 51, 56, 62, 68, 82, 87, 91, 109, 182, 186, 189, 192, 196, 204, 212, 213, 216, 227, 228, 231, 234, 235, 271], "mutabl": [2, 34, 51, 83, 84, 85, 94, 187, 196, 197, 208, 217, 267], "been": [2, 7, 12, 18, 31, 33, 34, 42, 43, 44, 47, 50, 51, 52, 63, 76, 78, 87, 91, 92, 93, 109, 114, 116, 123, 126, 127, 135, 147, 157, 159, 167, 171, 177, 178, 179, 180, 183, 186, 187, 191, 193, 194, 196, 198, 203, 206, 208, 213, 214, 215, 217, 226, 227, 229, 230, 232, 234, 237, 244, 247, 263, 264, 266, 267, 271], "access": [2, 7, 11, 14, 15, 18, 26, 27, 28, 33, 51, 59, 80, 81, 84, 87, 92, 95, 101, 102, 108, 109, 113, 114, 130, 171, 172, 177, 180, 182, 186, 187, 189, 191, 208, 212, 216, 217, 220, 228, 229, 244, 247, 266, 270], "space": [2, 14, 18, 31, 32, 33, 51, 52, 53, 60, 61, 62, 64, 66, 67, 80, 87, 93, 94, 103, 109, 110, 111, 131, 133, 136, 146, 149, 151, 157, 159, 166, 172, 175, 177, 180, 181, 182, 183, 191, 207, 215, 216, 227, 231, 241, 242, 244, 245, 246, 247, 249, 250, 263, 266], "notat": [2, 5, 39, 43, 44, 50, 51, 52, 56, 59, 76, 84, 87, 93, 101, 160, 171, 172, 176, 180, 183, 196, 203, 207, 208, 215, 221, 222, 234, 247, 261], "curli": [2, 114, 196], "short": [2, 12, 15, 24, 34, 41, 43, 47, 51, 52, 53, 54, 57, 85, 91, 105, 148, 167, 171, 180, 183, 190, 217, 227, 237, 266, 270], "twice": [2, 12, 33, 51, 53, 65, 91, 172, 174, 179, 196, 231, 232, 241, 242, 261], "sometim": [2, 7, 12, 14, 15, 18, 32, 33, 51, 56, 59, 75, 76, 101, 123, 126, 154, 162, 180, 183, 186, 191, 196, 198, 203, 205, 209, 212, 214, 225, 234, 260, 267], "comma": [2, 14, 15, 33, 51, 196, 235, 263], "integr": [2, 4, 20, 22, 25, 31, 43, 50, 51, 53, 56, 57, 58, 69, 70, 71, 74, 80, 82, 87, 90, 91, 101, 103, 109, 114, 123, 129, 148, 157, 160, 163, 166, 171, 173, 177, 181, 183, 186, 187, 188, 189, 192, 193, 196, 198, 199, 206, 212, 213, 216, 229, 237, 241, 243, 244, 247, 248, 252, 262, 265, 270], "sequenc": [2, 15, 31, 33, 35, 38, 41, 42, 43, 47, 49, 50, 51, 52, 54, 56, 59, 61, 64, 65, 66, 67, 68, 71, 75, 81, 82, 84, 87, 90, 91, 129, 135, 161, 162, 187, 190, 192, 196, 198, 200, 203, 205, 206, 208, 209, 212, 213, 215, 222, 225, 228, 229, 234, 236, 237], "usag": [2, 7, 8, 14, 15, 18, 24, 27, 53, 57, 78, 123, 159, 177, 182, 183, 188, 189, 196, 204, 206, 209, 212, 213, 217, 231, 235, 236, 247, 248, 258, 266], "out": [2, 7, 8, 15, 18, 32, 33, 42, 43, 51, 52, 53, 56, 59, 67, 76, 78, 84, 87, 91, 94, 101, 102, 114, 116, 117, 120, 129, 139, 143, 154, 157, 159, 161, 162, 183, 184, 186, 187, 191, 192, 193, 194, 196, 197, 203, 206, 208, 212, 217, 227, 229, 234, 235, 263, 265, 266, 270, 271], "suppli": [2, 31, 32, 33, 42, 43, 51, 53, 61, 65, 87, 91, 106, 109, 111, 116, 117, 120, 124, 125, 135, 162, 171, 175, 180, 182, 191, 193, 198, 205, 212, 228, 234, 235, 241, 242, 245], "kwarg": [2, 13, 27, 28, 29, 33, 42, 43, 50, 51, 52, 53, 57, 59, 61, 62, 64, 65, 66, 67, 68, 73, 76, 78, 82, 83, 84, 85, 87, 89, 90, 99, 101, 107, 109, 117, 131, 140, 142, 146, 147, 151, 153, 155, 156, 158, 159, 160, 172, 175, 176, 182, 185, 187, 192, 196, 198, 202, 203, 204, 208, 212, 213, 214, 216, 217, 222, 227, 228, 230, 235, 237, 245], "pair": [2, 5, 14, 32, 33, 42, 43, 51, 52, 57, 63, 68, 75, 87, 91, 114, 117, 152, 154, 156, 157, 162, 171, 183, 186, 189, 191, 192, 197, 202, 203, 205, 206, 208, 209, 212, 215, 216, 229, 234, 244, 260, 267], "accord": [2, 15, 33, 39, 42, 43, 47, 50, 51, 52, 59, 81, 84, 87, 91, 93, 115, 123, 156, 162, 182, 187, 189, 191, 193, 209, 214, 215, 222, 227, 229, 234, 249], "auto": [2, 16, 31, 51, 52, 79, 182, 189, 192, 196, 208, 212, 216], "powsimp": [2, 51, 57, 205], "option": [2, 9, 12, 13, 14, 15, 16, 18, 26, 28, 31, 33, 42, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 64, 65, 67, 68, 70, 78, 79, 82, 84, 87, 88, 91, 92, 93, 94, 99, 101, 105, 106, 107, 108, 109, 110, 113, 129, 135, 146, 151, 152, 154, 157, 159, 164, 171, 172, 176, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 201, 203, 204, 205, 208, 209, 212, 213, 214, 215, 216, 221, 222, 227, 228, 229, 232, 234, 235, 241, 264, 270, 271], "wiki": [2, 7, 12, 13, 14, 15, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 99, 101, 104, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 148, 150, 151, 160, 162, 166, 172, 174, 178, 182, 192, 199, 203, 204, 205, 209, 212, 215, 216, 229, 234, 241, 242, 246, 248, 250, 267], "info": [2, 15, 101, 196, 212, 213], "everywher": [2, 12, 51, 59, 76, 101, 177, 249], "deep": [2, 18, 51, 57, 81, 82, 192, 203, 208, 216, 266], "forc": [2, 5, 8, 11, 18, 51, 55, 57, 61, 67, 76, 78, 81, 94, 95, 97, 106, 109, 113, 116, 117, 118, 119, 120, 123, 124, 125, 126, 129, 150, 151, 165, 177, 180, 182, 184, 186, 205, 208, 209, 214, 227, 247, 249, 270, 271], "measur": [2, 25, 57, 59, 67, 83, 105, 142, 151, 156, 164, 167, 169, 171, 172, 175, 177, 180, 192, 204, 205, 208, 216, 240, 241, 243, 244, 246, 247, 249], "count_op": [2, 205, 208], "explan": [2, 7, 12, 15, 21, 25, 26, 27, 28, 29, 30, 32, 33, 36, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 57, 59, 63, 73, 74, 76, 78, 82, 87, 91, 101, 104, 106, 107, 108, 109, 111, 121, 131, 133, 136, 139, 141, 143, 145, 157, 162, 181, 182, 183, 185, 187, 191, 192, 194, 198, 199, 201, 202, 203, 204, 206, 208, 209, 212, 214, 216, 217, 221, 222, 227, 230, 232, 235, 268], "check": [2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 27, 28, 31, 32, 33, 37, 40, 42, 43, 44, 49, 50, 51, 52, 56, 59, 63, 74, 76, 80, 81, 82, 84, 87, 88, 91, 101, 106, 107, 114, 126, 129, 142, 150, 162, 164, 165, 170, 177, 178, 182, 183, 185, 186, 187, 189, 191, 192, 198, 204, 206, 208, 212, 213, 214, 215, 216, 220, 221, 225, 227, 229, 232, 234, 243, 247, 263, 271], "strictli": [2, 4, 6, 7, 29, 31, 51, 59, 87, 91, 101, 189, 208, 214], "radic": [2, 51, 52, 87, 183, 191, 192, 208, 214, 215], "join": [2, 43, 51, 52, 64, 82, 94, 95, 196, 208, 212, 217, 234, 238], "autoexpand": [2, 208], "longer": [2, 6, 12, 14, 51, 61, 91, 117, 126, 184, 189, 196, 205, 208, 234, 237, 263, 271], "won": [2, 12, 18, 33, 208, 215, 266], "violat": [2, 114, 181, 193, 208], "code": [2, 5, 7, 8, 9, 14, 16, 17, 18, 19, 20, 21, 24, 34, 38, 42, 45, 46, 51, 52, 53, 55, 59, 63, 76, 78, 79, 87, 91, 92, 93, 106, 114, 116, 121, 123, 127, 129, 130, 156, 162, 171, 176, 179, 181, 182, 183, 184, 186, 189, 195, 206, 208, 212, 214, 215, 216, 221, 224, 225, 227, 228, 229, 232, 233, 234, 235, 244, 259, 263, 265, 268, 270], "py": [2, 7, 11, 12, 13, 14, 20, 32, 51, 62, 76, 78, 87, 140, 142, 182, 185, 187, 193, 196, 203, 206, 212, 213, 222, 225, 227, 232, 235], "naiv": [2, 4, 42, 48, 51, 76, 82, 87, 167, 206, 214, 215, 222], "strategi": [2, 34, 51, 78, 189, 190, 203, 206, 208, 213], "futur": [2, 7, 8, 12, 33, 34, 51, 76, 78, 82, 87, 93, 113, 116, 123, 126, 162, 166, 178, 182, 184, 195, 196, 208, 212, 221, 227, 230, 232, 235, 258, 266, 272], "version": [2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 23, 26, 32, 33, 42, 43, 49, 51, 52, 57, 59, 64, 78, 81, 82, 83, 85, 87, 89, 91, 104, 106, 114, 146, 160, 164, 172, 181, 182, 183, 186, 187, 189, 191, 192, 196, 199, 208, 214, 216, 226, 227, 229, 230, 231, 232, 234, 235, 239, 241, 246, 263, 266, 267], "algorithm": [2, 7, 11, 14, 31, 35, 36, 38, 41, 42, 43, 45, 47, 49, 50, 51, 52, 55, 56, 57, 63, 68, 76, 78, 81, 84, 87, 88, 91, 102, 126, 149, 167, 172, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 197, 200, 201, 204, 205, 207, 208, 209, 212, 214, 215, 216, 222, 231, 234, 253, 261, 266, 267, 271], "determin": [2, 5, 7, 8, 12, 15, 18, 26, 28, 29, 30, 31, 33, 34, 35, 42, 51, 52, 53, 54, 55, 57, 61, 62, 64, 66, 67, 78, 79, 80, 84, 87, 91, 93, 94, 95, 101, 107, 110, 111, 113, 122, 127, 130, 141, 154, 156, 158, 159, 162, 165, 167, 172, 177, 182, 183, 184, 185, 189, 191, 196, 202, 203, 204, 206, 208, 209, 211, 212, 214, 215, 216, 220, 232, 234, 241, 247, 250, 263, 271], "radsimp": [2, 51, 207], "togeth": [2, 5, 33, 42, 51, 55, 80, 87, 91, 123, 148, 159, 167, 180, 183, 187, 189, 191, 192, 195, 196, 208, 212, 214, 216, 227, 228, 234, 265, 271], "logcombin": [2, 207, 212, 215], "robust": [2, 48, 51, 55, 188, 208, 212], "poli": [2, 11, 50, 51, 52, 56, 57, 59, 60, 67, 73, 78, 82, 84, 87, 91, 129, 183, 184, 188, 189, 191, 192, 193, 195, 198, 211, 212, 214, 215, 227], "cancel": [2, 5, 18, 33, 51, 55, 59, 67, 76, 78, 87, 91, 101, 102, 186, 187, 189, 192, 195, 208, 214, 265], "section": [3, 7, 9, 12, 15, 16, 18, 21, 25, 32, 34, 42, 43, 50, 51, 52, 54, 58, 59, 61, 67, 76, 81, 82, 87, 94, 95, 108, 114, 127, 165, 167, 171, 177, 180, 183, 186, 189, 191, 196, 199, 203, 206, 212, 222, 231, 232, 234, 244, 245, 246, 247, 251, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272], "special": [3, 7, 11, 14, 18, 24, 25, 43, 51, 52, 54, 55, 56, 58, 66, 69, 76, 78, 82, 87, 129, 146, 151, 177, 183, 186, 188, 189, 190, 191, 196, 205, 206, 208, 212, 213, 214, 216, 227, 228, 229, 232, 234, 235, 244, 247, 249, 253, 254, 261, 262, 266], "topic": [3, 21, 23, 33, 123, 127, 178, 179, 180, 181, 183, 185, 186, 191, 215, 263, 268], "sympi": [3, 7, 8, 10, 11, 12, 15, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 251, 253, 259, 261, 263, 264, 266, 267, 268, 269, 270, 271, 272], "pitfal": [3, 18, 23, 180, 186, 263, 268, 271], "content": [3, 16, 33, 51, 52, 86, 184, 187, 189, 192, 195, 196, 224, 229, 232, 233, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264], "gotcha": [3, 21, 23, 51, 123, 180, 235, 264, 272], "sign": [3, 12, 14, 15, 25, 30, 33, 47, 51, 52, 56, 58, 61, 67, 76, 78, 87, 91, 94, 95, 101, 116, 135, 147, 172, 177, 179, 181, 189, 196, 201, 203, 208, 209, 214, 234, 247, 250, 264], "express": [3, 4, 7, 8, 11, 12, 14, 15, 18, 22, 23, 26, 27, 28, 29, 30, 31, 43, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 71, 74, 75, 76, 78, 79, 82, 85, 86, 87, 90, 91, 92, 94, 101, 102, 104, 105, 110, 111, 114, 117, 123, 124, 125, 126, 127, 129, 130, 137, 141, 145, 146, 150, 151, 154, 157, 159, 160, 161, 162, 164, 165, 167, 169, 171, 172, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 235, 237, 241, 242, 244, 246, 247, 248, 249, 253, 254, 255, 259, 261, 262, 263, 264, 265, 267, 270, 271, 272], "help": [3, 7, 12, 13, 14, 15, 24, 33, 41, 51, 59, 76, 78, 87, 91, 92, 99, 114, 129, 137, 147, 180, 182, 191, 193, 196, 205, 206, 209, 212, 213, 216, 227, 228, 229, 235, 257, 264, 267], "from": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 260, 261, 263, 265, 266, 267, 270, 271, 272], "within": [3, 7, 11, 15, 31, 32, 33, 51, 57, 64, 67, 81, 82, 84, 91, 92, 94, 120, 157, 171, 172, 179, 180, 184, 186, 192, 194, 204, 212, 214, 215, 216, 227, 228, 237], "finit": [3, 6, 7, 28, 33, 37, 38, 39, 42, 50, 51, 52, 54, 55, 78, 80, 81, 148, 172, 181, 184, 187, 188, 190, 192, 193, 196, 198, 199, 202, 204, 209, 211, 212, 215, 234, 241, 242, 252, 262, 265, 271], "classif": [3, 6, 51, 212, 213], "activ": [3, 12, 13, 116, 182, 225, 230, 232], "deprec": [3, 14, 16, 21, 26, 43, 51, 64, 78, 82, 104, 126, 192, 196, 216, 222, 225, 226, 230, 232, 235, 239], "silenc": [3, 12, 225, 232], "11": [3, 7, 14, 27, 28, 33, 42, 45, 47, 49, 51, 52, 54, 56, 59, 63, 64, 65, 67, 68, 76, 78, 81, 82, 83, 87, 91, 93, 96, 101, 114, 116, 127, 146, 156, 181, 182, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 203, 205, 209, 212, 214, 215, 216, 217, 228, 234, 244], "9": [3, 14, 20, 31, 33, 39, 41, 42, 43, 47, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 67, 73, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 99, 101, 102, 103, 104, 114, 116, 118, 129, 131, 135, 167, 181, 182, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 202, 204, 205, 206, 208, 209, 212, 214, 215, 216, 217, 227, 231, 234, 241, 243, 265, 267, 272], "8": [3, 5, 14, 20, 25, 26, 31, 33, 35, 42, 43, 44, 47, 49, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 67, 73, 76, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 99, 101, 103, 116, 129, 134, 135, 146, 182, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 198, 199, 202, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 221, 227, 229, 231, 234, 241, 243, 244, 250, 260, 261, 265, 267, 271], "classifi": [4, 87, 186, 212, 213, 215, 216], "function": [4, 5, 7, 8, 10, 11, 12, 15, 16, 19, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 42, 43, 46, 47, 49, 52, 53, 54, 55, 56, 60, 61, 62, 63, 68, 71, 72, 75, 77, 78, 79, 80, 82, 84, 86, 90, 92, 94, 96, 98, 99, 101, 102, 103, 107, 108, 111, 112, 113, 114, 117, 118, 119, 123, 124, 125, 129, 134, 135, 136, 137, 141, 146, 147, 148, 151, 156, 157, 158, 159, 160, 161, 162, 165, 171, 172, 175, 176, 178, 180, 181, 183, 188, 189, 190, 191, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 214, 215, 216, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272], "isinst": [4, 7, 18, 33, 51, 82, 84, 101, 186, 187, 196, 197, 208, 217, 220, 229, 266], "distinguish": [4, 7, 8, 32, 42, 55, 80, 114, 161, 167, 183], "between": [4, 8, 11, 12, 18, 32, 33, 41, 42, 43, 45, 49, 51, 53, 56, 59, 61, 63, 64, 65, 66, 67, 68, 78, 80, 81, 84, 85, 87, 91, 92, 93, 97, 98, 99, 101, 108, 111, 113, 114, 120, 122, 126, 127, 129, 130, 131, 134, 135, 141, 148, 150, 151, 152, 156, 159, 160, 161, 162, 165, 166, 167, 172, 173, 174, 175, 177, 179, 180, 182, 183, 185, 188, 189, 191, 196, 198, 208, 212, 213, 214, 215, 216, 217, 230, 235, 241, 243, 244, 247, 249, 263], "matrix": [4, 5, 7, 22, 25, 28, 33, 40, 43, 51, 52, 53, 59, 66, 76, 78, 80, 82, 85, 86, 89, 90, 92, 93, 101, 102, 104, 106, 108, 109, 110, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 129, 130, 131, 134, 135, 137, 145, 146, 151, 156, 157, 159, 161, 162, 164, 167, 171, 172, 180, 181, 183, 185, 189, 191, 194, 196, 197, 204, 206, 208, 209, 214, 215, 217, 218, 220, 221, 222, 223, 228, 229, 234, 235, 237, 241, 242, 243, 245, 249, 255, 262, 265, 266, 271, 272], "former": [4, 33, 51, 56, 114, 189, 191, 192, 209, 234], "retriev": [4, 49, 82, 192, 208, 222], "properti": [4, 12, 18, 21, 27, 28, 31, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 76, 78, 82, 84, 87, 91, 94, 95, 97, 98, 101, 106, 108, 109, 111, 113, 127, 129, 131, 133, 136, 137, 140, 141, 146, 147, 148, 150, 151, 158, 160, 162, 164, 167, 169, 170, 172, 173, 174, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 195, 198, 199, 202, 203, 204, 206, 209, 212, 215, 216, 221, 222, 227, 229, 230, 241, 243, 244, 245, 247, 249, 267], "numberkind": [4, 82, 204], "matrixkind": [4, 51, 86, 204], "guarante": [4, 7, 33, 42, 43, 51, 63, 76, 78, 87, 186, 189, 191, 192, 212, 214, 215, 232, 237, 267, 271], "catch": [4, 51, 212, 227, 267], "build": [4, 14, 15, 16, 21, 23, 27, 28, 33, 51, 53, 59, 81, 129, 156, 167, 172, 180, 183, 188, 191, 192, 193, 203, 216, 244, 260, 263, 266], "argument": [4, 7, 8, 11, 12, 13, 14, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 68, 76, 78, 79, 81, 82, 84, 87, 90, 91, 93, 94, 99, 101, 109, 113, 114, 124, 125, 129, 136, 139, 143, 145, 148, 151, 156, 157, 159, 160, 161, 162, 170, 176, 177, 181, 182, 183, 184, 186, 187, 189, 191, 192, 195, 196, 197, 198, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 220, 221, 227, 228, 229, 230, 231, 232, 234, 235, 237, 244, 245, 247, 260, 261, 266, 267, 271], "theori": [4, 18, 28, 34, 40, 41, 42, 43, 49, 51, 52, 56, 59, 80, 88, 91, 109, 114, 126, 128, 141, 159, 162, 172, 175, 185, 189, 190, 191, 195, 209, 231, 241, 258, 265], "compat": [4, 9, 11, 12, 33, 51, 59, 79, 82, 87, 92, 105, 164, 169, 176, 182, 185, 187, 191, 192, 196, 216, 219, 220, 223, 227, 229, 235], "is_subset": [4, 204], "valueerror": [4, 7, 26, 28, 31, 33, 34, 43, 51, 52, 60, 61, 64, 66, 67, 78, 82, 84, 87, 90, 91, 94, 99, 101, 136, 175, 177, 181, 183, 185, 189, 191, 204, 212, 214, 215, 234, 237, 247], "odd": [4, 7, 26, 28, 30, 39, 43, 51, 52, 56, 57, 59, 81, 90, 91, 102, 191, 196, 214], "head": [4, 14, 32, 51, 216, 222, 237, 266], "appliedpred": [4, 26, 27, 28], "attribut": [4, 7, 14, 18, 27, 28, 32, 33, 42, 43, 51, 59, 60, 61, 64, 65, 66, 67, 84, 87, 93, 95, 101, 106, 108, 109, 110, 111, 113, 120, 127, 130, 151, 156, 160, 167, 171, 172, 177, 180, 182, 183, 186, 187, 191, 196, 204, 208, 209, 221, 222, 228, 230, 234, 235, 238, 244, 266], "advanc": [4, 6, 15, 18, 23, 27, 42, 51, 55, 56, 87, 88, 123, 127, 178, 182, 185, 186, 188, 190, 191, 198, 205, 212, 227, 228, 229, 234, 260, 262, 264, 268, 269, 270, 271], "manipul": [4, 5, 7, 11, 32, 33, 34, 42, 51, 59, 76, 86, 91, 92, 114, 123, 127, 160, 179, 185, 186, 187, 190, 195, 196, 198, 205, 208, 210, 219, 234, 251, 254, 258, 260, 261, 262, 263, 264, 265, 267, 270, 271], "quit": [5, 18, 59, 87, 91, 116, 179, 182, 193, 195, 206, 214, 249, 263, 266], "analysi": [5, 33, 34, 42, 51, 52, 57, 98, 116, 126, 127, 130, 166, 183, 192, 206, 209, 216], "physic": [5, 11, 14, 33, 44, 87, 91, 94, 95, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 181, 190, 216, 231, 234, 247, 265, 271], "vari": [5, 31, 33, 51, 65, 67, 99, 105, 109, 127, 160, 180, 203, 214, 234, 247], "hope": [5, 42, 105, 183], "practic": [5, 7, 13, 16, 40, 42, 52, 61, 126, 129, 182, 183, 184, 186, 191, 193, 220, 263, 264], "research": [5, 43, 193, 208], "who": [5, 11, 12, 14, 18, 23, 52, 53, 129, 180, 189, 196, 264], "abl": [5, 7, 11, 12, 14, 18, 32, 33, 42, 47, 51, 52, 53, 62, 70, 78, 84, 87, 91, 98, 114, 124, 126, 127, 129, 130, 183, 186, 193, 212, 215, 227, 244, 265, 270, 272], "effici": [5, 7, 31, 33, 35, 42, 47, 51, 54, 55, 56, 67, 68, 84, 87, 91, 92, 101, 109, 129, 181, 184, 185, 186, 187, 189, 192, 193, 194, 195, 208, 209, 214, 228, 235, 260, 266, 267, 271], "formula": [5, 14, 31, 45, 50, 51, 55, 56, 59, 64, 77, 81, 87, 91, 181, 183, 189, 192, 196, 198, 202, 205, 208, 209, 212, 265, 271], "variou": [5, 11, 14, 15, 18, 31, 33, 35, 42, 50, 51, 56, 71, 76, 78, 81, 111, 141, 145, 146, 157, 159, 171, 183, 184, 187, 188, 189, 191, 197, 203, 206, 209, 212, 213, 215, 229, 271], "establish": [5, 47, 76, 108, 118, 206], "state": [5, 7, 42, 49, 51, 59, 91, 94, 101, 103, 109, 110, 113, 116, 117, 130, 134, 138, 139, 141, 142, 143, 145, 146, 147, 151, 154, 156, 157, 158, 159, 161, 162, 192, 196, 205, 206, 208, 216, 231, 257, 267], "envis": 5, "sampl": [5, 11, 16, 42, 54, 99, 146, 182, 196, 216, 261, 265], "along": [5, 18, 33, 42, 51, 52, 53, 57, 59, 60, 61, 65, 66, 69, 71, 74, 76, 82, 84, 87, 94, 95, 97, 104, 105, 108, 109, 116, 117, 120, 121, 122, 124, 125, 126, 129, 131, 159, 171, 172, 177, 180, 182, 185, 186, 191, 192, 212, 215, 243, 247, 249], "small": [5, 33, 34, 42, 43, 51, 55, 56, 78, 81, 87, 91, 101, 117, 121, 129, 159, 181, 182, 189, 190, 191, 208, 209, 214, 234, 260, 263, 265], "x_": [5, 33, 41, 51, 52, 56, 93, 187, 189, 192, 198, 209, 212, 217], "via": [5, 9, 11, 18, 20, 26, 27, 28, 42, 43, 51, 56, 59, 76, 78, 81, 87, 91, 92, 93, 94, 172, 181, 183, 187, 189, 191, 192, 195, 215, 225, 228, 229, 241, 249, 266], "taylor": [5, 51, 57, 114, 126, 129, 187, 189, 192, 193, 203, 212], "seri": [5, 14, 31, 32, 33, 34, 41, 42, 50, 51, 53, 55, 56, 57, 59, 71, 74, 75, 76, 80, 91, 98, 101, 114, 120, 122, 129, 175, 179, 188, 189, 196, 201, 202, 206, 212, 215, 252, 258, 262], "expans": [5, 14, 18, 33, 51, 53, 56, 57, 59, 71, 78, 87, 91, 126, 141, 143, 192, 193, 198, 199, 200, 205, 207, 212, 214, 215, 252, 262, 271], "let": [5, 7, 8, 18, 31, 33, 42, 47, 51, 52, 61, 69, 74, 76, 80, 84, 87, 88, 91, 93, 106, 114, 129, 167, 172, 179, 183, 184, 185, 189, 191, 192, 193, 196, 203, 206, 208, 209, 212, 214, 215, 222, 225, 228, 232, 235, 245, 246, 250, 260, 263, 265, 266, 271], "Then": [5, 7, 9, 13, 42, 47, 50, 51, 76, 80, 87, 91, 107, 109, 111, 120, 122, 123, 127, 131, 159, 167, 179, 183, 184, 186, 189, 191, 193, 196, 203, 206, 208, 209, 212, 214, 235], "frac": [5, 7, 18, 31, 50, 51, 52, 53, 56, 58, 59, 76, 78, 87, 91, 93, 101, 117, 127, 165, 176, 177, 179, 180, 181, 185, 189, 192, 196, 198, 199, 203, 206, 209, 212, 213, 215, 216, 217, 234, 247, 249, 261, 265, 266, 270, 271], "df": [5, 53, 212], "coeffici": [5, 7, 14, 28, 31, 33, 50, 51, 53, 55, 56, 59, 64, 69, 70, 73, 74, 76, 80, 81, 84, 87, 88, 91, 102, 109, 114, 135, 149, 159, 167, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 198, 199, 202, 203, 206, 208, 209, 211, 212, 213, 214, 215, 216, 222, 228, 244, 247, 266, 271], "c_": [5, 22, 52, 74, 76, 180, 184, 212], "grid": [5, 31, 32, 99, 182], "f_": [5, 51, 56, 59, 78, 124, 125, 126, 189, 195, 196, 206, 212], "constraint": [5, 87, 95, 101, 109, 110, 113, 114, 116, 117, 119, 123, 124, 125, 126, 129, 193], "subset": [5, 7, 15, 18, 31, 32, 35, 38, 42, 43, 49, 56, 57, 63, 74, 76, 78, 80, 91, 183, 185, 189, 191, 196, 204, 234], "formul": [5, 117, 123, 124, 125, 162, 180], "assess": 5, "brute": [5, 205, 209], "frequent": [5, 42, 191, 203, 215], "cover": [5, 21, 91, 93, 105, 114, 171, 179, 222, 229, 261, 263], "introductori": [5, 186, 187, 192], "treatment": [5, 76, 192], "shall": [5, 42, 76, 114, 129, 203, 206, 266], "job": [5, 18, 43, 142, 193, 196], "evalu": [5, 7, 8, 11, 14, 21, 22, 26, 27, 28, 31, 33, 51, 53, 56, 57, 59, 62, 66, 67, 71, 76, 78, 81, 84, 87, 91, 92, 93, 101, 105, 107, 114, 123, 126, 127, 137, 139, 141, 143, 148, 151, 159, 162, 181, 182, 186, 187, 189, 190, 192, 196, 197, 202, 203, 204, 206, 208, 209, 212, 214, 215, 216, 218, 228, 229, 230, 235, 247, 252, 260, 261, 262, 263, 265, 267], "truncat": [5, 43, 51, 87, 91, 95, 167, 182, 193, 195, 198, 199], "approx": [5, 22, 51, 78], "lowest": [5, 33, 42, 47, 91, 183, 198, 215], "decid": [5, 7, 8, 12, 14, 18, 32, 50, 82, 105, 126, 155, 166, 186, 189, 191, 192, 196, 212, 215, 229, 267], "2h": 5, "elimin": [5, 33, 47, 51, 81, 83, 87, 105, 187, 194, 195, 197, 199, 207, 212, 214, 215, 222, 229, 267], "print_funct": 5, "x0": [5, 31, 33, 41, 51, 59, 70, 72, 74, 75, 91, 134, 186, 197, 198, 203, 208, 212, 214, 216, 234, 261], "x_0": [5, 41, 42, 52, 73, 74, 75, 189, 198, 209, 212, 216, 261], "fi": 5, "fip1": 5, "fip2": 5, "c_0": [5, 52, 74], "c_1": [5, 52, 74, 76, 203, 206, 212], "c_2": [5, 76, 203, 212], "2f": [5, 272], "factori": [5, 14, 18, 50, 51, 55, 58, 59, 87, 91, 93, 181, 187, 189, 191, 192, 196, 198, 208, 214, 216, 229, 230, 234, 235, 271], "vector": [5, 14, 25, 29, 33, 35, 38, 42, 43, 53, 59, 64, 65, 66, 73, 74, 80, 82, 87, 92, 94, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 122, 124, 125, 126, 127, 129, 130, 134, 135, 148, 157, 159, 164, 167, 174, 175, 176, 183, 188, 191, 196, 206, 212, 214, 216, 221, 222, 227, 228, 242, 246, 251, 255, 257, 267], "c_i": [5, 76, 203, 206, 212], "nth": [5, 51, 56, 59, 80, 91, 187, 192, 193, 202, 208, 212, 216], "degre": [5, 34, 42, 49, 50, 56, 59, 67, 78, 82, 87, 94, 97, 99, 101, 108, 109, 114, 115, 117, 123, 130, 134, 180, 183, 184, 187, 189, 191, 192, 195, 199, 202, 205, 206, 208, 209, 212, 214, 216, 241], "polynomi": [5, 7, 14, 15, 22, 29, 42, 50, 51, 52, 55, 56, 58, 69, 70, 71, 72, 74, 78, 81, 82, 84, 87, 91, 95, 101, 127, 129, 183, 185, 190, 194, 198, 203, 205, 206, 208, 209, 210, 211, 212, 215, 227, 251, 258, 262, 267, 272], "x_i": [5, 18, 41, 59, 78, 87, 184, 187, 189, 192, 193, 196, 215], "m11": [5, 216], "m12": [5, 216], "m13": 5, "m21": [5, 216], "m22": [5, 216], "m23": 5, "m31": 5, "m32": 5, "m33": [5, 91], "3x3": [5, 66, 87, 245], "invert": [5, 28, 51, 52, 82, 84, 87, 101, 117, 164, 184, 186, 187, 191, 192, 212, 214, 215, 222, 267], "inv": [5, 43, 83, 87, 109, 116, 120, 121, 129, 151, 185, 212], "center": [5, 15, 31, 42, 50, 51, 61, 65, 67, 68, 78, 87, 106, 108, 111, 114, 116, 120, 122, 127, 129, 135, 179, 182, 191, 196, 204, 250], "fim1": 5, "serv": [5, 15, 18, 27, 28, 33, 48, 51, 58, 74, 191, 212, 213, 237, 264], "wherea": [5, 7, 29, 33, 52, 61, 67, 76, 81, 101, 167, 183, 186, 192, 196, 214, 215, 234, 271], "bit": [5, 9, 18, 32, 33, 35, 51, 52, 54, 81, 82, 87, 91, 156, 167, 183, 192, 206, 209, 215, 227, 234, 244, 245, 270], "question": [5, 7, 12, 14, 15, 19, 50, 53, 61, 68, 76, 78, 81, 91, 105, 164, 167, 171, 183, 186, 191, 206, 215, 234, 237], "eight": [5, 196], "dfdxcheck": 5, "c1": [5, 14, 52, 61, 68, 82, 84, 148, 162, 204, 209, 212, 214, 246, 272], "c3": [5, 54, 80, 82, 84, 91, 212, 216, 246, 272], "c5": [5, 212], "120": [5, 50, 51, 56, 57, 73, 91, 94, 95, 193, 195, 196, 198, 212, 261], "c7": [5, 42], "5040": [5, 56, 73, 192, 193], "inde": [5, 12, 18, 39, 42, 50, 76, 183, 206, 212, 223, 227, 265], "quickli": [5, 18, 42, 43, 51, 52, 55, 91, 189, 192, 205, 215, 231], "tediou": [5, 78], "attempt": [5, 8, 18, 33, 42, 47, 49, 51, 55, 56, 63, 76, 78, 87, 91, 105, 107, 157, 186, 191, 198, 203, 205, 208, 209, 212, 214, 215, 216, 227, 263, 271], "certainli": [5, 63, 93, 231], "seen": [5, 7, 14, 25, 43, 76, 78, 93, 97, 113, 167, 179, 183, 186, 189, 192, 212, 214, 215, 232, 234, 244, 263, 266, 270], "fine": [5, 18, 51, 55, 79, 176, 186, 196, 208], "until": [5, 7, 12, 24, 43, 45, 51, 52, 61, 78, 87, 91, 126, 180, 189, 192, 205, 212, 263], "data": [5, 33, 42, 51, 52, 59, 78, 87, 92, 99, 109, 141, 182, 183, 186, 187, 189, 192, 193, 196, 208, 221, 222, 227, 229, 231, 234, 238], "handl": [5, 7, 8, 15, 18, 31, 39, 43, 51, 57, 78, 79, 81, 86, 91, 92, 93, 94, 102, 105, 114, 126, 142, 145, 151, 152, 157, 186, 192, 193, 202, 208, 210, 212, 214, 217, 220, 228, 234, 235, 237, 252, 266, 271], "devis": 5, "backward": [5, 11, 16, 31, 51, 82, 87, 196, 234, 271], "approach": [5, 9, 32, 50, 51, 78, 101, 117, 123, 186, 189, 190, 193, 204, 213, 214, 216, 228, 231, 234, 261, 267], "xn": [5, 18, 187], "x_n": [5, 18, 34, 41, 52, 73, 87, 184, 187, 189, 192, 209, 215], "fn": [5, 78, 87, 183, 192], "fnm1": 5, "fnm2": 5, "dth": 5, "Of": [5, 7, 50, 76, 87, 212, 215, 234, 271], "cours": [5, 7, 35, 42, 50, 59, 76, 78, 87, 88, 91, 177, 185, 186, 190, 191, 203, 205, 206, 247, 271], "fortran": [5, 11, 18, 31, 92, 93, 105, 129, 181, 229, 253, 259, 270], "etc": [5, 7, 8, 28, 31, 33, 47, 51, 52, 56, 57, 69, 80, 81, 86, 91, 114, 133, 142, 146, 159, 162, 166, 174, 177, 179, 180, 182, 183, 184, 186, 189, 191, 196, 197, 204, 205, 206, 208, 212, 215, 216, 220, 228, 229, 234, 245, 249], "discrit": 5, "bengt": [5, 31], "fornberg": [5, 31], "weight": [5, 51, 59, 66, 68, 78, 80, 87, 146, 208, 252, 261], "collect": [6, 9, 11, 15, 32, 33, 42, 51, 68, 78, 91, 94, 101, 113, 121, 129, 162, 169, 181, 187, 192, 205, 206, 212, 216, 227, 234, 252], "gap": [6, 42, 91, 114, 193], "matur": [6, 7, 214, 215], "matric": [6, 7, 11, 14, 29, 33, 51, 52, 78, 88, 90, 101, 108, 109, 110, 114, 117, 126, 129, 131, 134, 135, 137, 145, 146, 156, 161, 172, 180, 181, 185, 191, 196, 197, 204, 206, 208, 209, 212, 214, 215, 217, 219, 229, 230, 257, 262, 264, 265], "func": [6, 12, 14, 18, 27, 31, 33, 51, 53, 56, 59, 70, 72, 78, 91, 151, 172, 189, 192, 196, 197, 208, 212, 213, 214, 225, 230, 232, 234, 235, 237, 240], "explain": [7, 11, 12, 14, 15, 32, 47, 51, 59, 69, 74, 183, 186, 189, 191, 193, 203], "often": [7, 8, 12, 14, 18, 32, 33, 34, 41, 51, 59, 61, 63, 76, 78, 87, 91, 92, 101, 123, 126, 171, 179, 180, 183, 184, 186, 189, 192, 197, 203, 204, 209, 212, 216, 234, 260, 265, 266, 267, 271], "new": [7, 9, 11, 12, 13, 15, 18, 23, 27, 28, 32, 33, 34, 42, 43, 50, 51, 52, 53, 59, 64, 67, 76, 78, 79, 82, 87, 91, 94, 97, 101, 106, 114, 120, 122, 127, 128, 129, 131, 152, 158, 159, 162, 164, 167, 168, 170, 172, 175, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 196, 203, 206, 208, 209, 212, 214, 215, 216, 217, 227, 228, 232, 235, 241, 242, 244, 248, 260, 263, 266, 267, 269], "elsewher": [7, 56, 80, 116, 185, 227], "wide": [7, 13, 79, 87, 129, 176, 186, 192, 196, 216], "concret": [7, 32, 43, 51, 56, 57, 78, 80, 87, 91, 114, 167, 187, 191, 196, 252], "seem": [7, 18, 75, 76, 114, 167, 183, 208, 212, 271], "obviou": [7, 8, 18, 42, 50, 183, 186, 195, 209, 265], "situat": [7, 55, 76, 180, 212, 214, 216, 232, 263], "surpris": [7, 215], "refus": [7, 271], "everi": [7, 11, 12, 14, 18, 27, 28, 29, 32, 37, 39, 42, 43, 51, 52, 66, 80, 82, 87, 91, 101, 127, 177, 179, 180, 182, 183, 184, 186, 187, 189, 191, 196, 201, 204, 206, 208, 209, 212, 215, 216, 218, 244, 247, 249, 264, 266, 267, 271], "roughli": [7, 51, 52, 92, 115, 212, 235], "known": [7, 8, 14, 18, 28, 32, 33, 34, 40, 42, 43, 51, 52, 55, 56, 59, 61, 64, 69, 76, 78, 79, 88, 91, 99, 101, 102, 104, 106, 111, 126, 165, 172, 179, 185, 186, 187, 191, 192, 196, 199, 202, 204, 205, 206, 208, 210, 211, 212, 213, 214, 216, 234, 235, 241, 247, 249, 271], "tell": [7, 8, 14, 15, 33, 43, 52, 55, 59, 82, 93, 113, 167, 186, 191, 195, 203, 206, 212, 228, 263], "infinit": [7, 18, 28, 50, 51, 52, 55, 56, 57, 64, 65, 78, 87, 91, 101, 119, 148, 167, 183, 191, 196, 197, 198, 201, 202, 203, 204, 208, 209, 210, 211, 214, 221, 234, 271, 272], "good": [7, 12, 15, 18, 33, 51, 52, 55, 63, 76, 87, 91, 116, 126, 129, 183, 186, 187, 196, 203, 205, 206, 208, 212, 234, 260, 264, 267], "idea": [7, 8, 12, 18, 36, 42, 49, 51, 52, 63, 69, 76, 78, 91, 102, 114, 162, 166, 167, 183, 185, 186, 205, 208, 209, 212, 215, 229, 235, 271], "queri": [7, 8, 18, 26, 29, 30, 31, 33, 51, 63, 192, 208, 216, 252], "is_posit": [7, 8, 18, 51, 174, 187], "is_neg": [7, 18, 187], "fuzzi": [7, 18, 21], "interprett": 7, "unknow": 7, "resolv": [7, 8, 51, 205, 208], "undecid": [7, 18, 87, 186, 215, 267], "answer": [7, 12, 18, 42, 51, 55, 73, 76, 78, 81, 87, 91, 167, 189, 193, 205, 206, 208, 214, 216, 231, 237, 265, 267, 271], "hard": [7, 12, 16, 43, 52, 87, 91, 114, 162, 186, 196, 203, 212, 215, 263, 265], "fast": [7, 11, 33, 51, 78, 86, 87, 91, 134, 187, 188, 189, 190, 191, 192, 193, 199, 203, 212, 214, 231, 234, 235], "heurist": [7, 43, 76, 78, 82, 189, 190, 203, 205, 208, 210, 214, 215, 227, 261, 271], "conclud": [7, 59, 74, 116, 177, 203, 214, 249], "particularli": [7, 55, 78, 186, 187, 206, 271, 272], "mix": [7, 24, 50, 57, 82, 87, 93, 171, 186, 187, 192, 196, 215, 218, 220, 222, 235], "expr2": [7, 12, 101, 182, 266], "ideal": [7, 33, 88, 111, 114, 123, 172, 179, 185, 187, 188, 189, 190, 191, 192, 193, 208, 215, 241], "fulli": [7, 12, 14, 21, 42, 51, 68, 78, 81, 93, 95, 114, 129, 162, 179, 186, 187, 193, 203, 216, 222, 238], "primarili": [7, 11, 33, 51, 91, 94, 161, 192, 194, 228, 231, 237, 244], "slow": [7, 18, 47, 51, 55, 78, 92, 105, 116, 134, 171, 180, 186, 187, 196, 197, 198, 199, 208, 212, 214, 215, 227, 228, 271], "down": [7, 9, 12, 14, 21, 84, 103, 116, 117, 179, 180, 182, 187, 198, 204, 206, 208, 212, 231, 267, 271], "indetermin": [7, 8, 51, 87, 189, 201, 214], "never": [7, 18, 51, 57, 78, 164, 192, 193, 196, 204, 214, 216, 225, 244, 263, 264], "contradict": 7, "infer": [7, 27, 28, 43, 51, 78, 186, 195, 201, 206, 212, 228, 254], "bug": [7, 12, 14, 18, 20, 31, 52, 77, 186, 204, 212, 215, 263], "prepar": [7, 109, 194], "presum": [7, 76, 186, 206, 229], "plain": [7, 12, 14, 79, 176, 192, 196], "singletonregistri": [7, 51], "implicitli": [7, 8, 18, 43, 51, 78, 183, 186, 214], "x1": [7, 18, 41, 51, 56, 129, 134, 186, 187, 197, 198, 208, 212, 214, 216, 234], "x2": [7, 41, 51, 56, 129, 134, 186, 198, 212, 214, 216], "distinct": [7, 12, 15, 18, 33, 42, 43, 51, 52, 56, 64, 76, 81, 87, 91, 113, 179, 186, 191, 192, 196, 204, 206, 271], "posifi": [7, 207], "unless": [7, 11, 14, 18, 26, 28, 31, 33, 42, 50, 51, 52, 56, 59, 66, 67, 76, 87, 90, 135, 179, 180, 184, 186, 191, 192, 196, 201, 204, 205, 212, 214, 227, 231, 234, 235, 237, 241, 249, 261, 267, 271], "_x": [7, 18, 87, 127, 176, 179, 180, 187, 193, 208, 212, 228], "rep": [7, 42, 47, 51, 146, 183, 185, 186, 187, 190, 191, 192, 205, 208, 237], "map": [7, 18, 31, 32, 33, 41, 42, 43, 51, 52, 63, 67, 74, 76, 78, 81, 82, 91, 99, 109, 117, 140, 151, 152, 157, 172, 180, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 203, 208, 212, 213, 214, 215, 216, 220, 221, 228, 231, 234, 235, 237, 241], "otherwis": [7, 8, 11, 12, 18, 31, 32, 33, 42, 43, 47, 50, 51, 52, 55, 57, 59, 60, 61, 64, 65, 66, 67, 76, 78, 80, 81, 83, 87, 90, 91, 93, 99, 101, 103, 106, 113, 114, 147, 152, 158, 175, 178, 179, 183, 187, 189, 191, 192, 194, 196, 198, 199, 201, 202, 204, 208, 209, 212, 213, 214, 215, 216, 217, 225, 227, 229, 234, 235, 260, 261, 270], "assign": [7, 15, 32, 33, 34, 47, 51, 67, 78, 80, 81, 87, 93, 109, 114, 120, 129, 167, 177, 180, 182, 184, 189, 196, 214, 215, 222, 229, 244, 247, 263], "feel": [7, 20, 129, 130, 208, 212], "among": [7, 32, 33, 34, 35, 42, 43, 52, 79, 92, 192, 212, 217, 220, 222, 244], "discourag": [7, 51, 208], "behaviour": [7, 76, 81, 106, 189, 193, 199, 202], "symbolc": 7, "implicit": [7, 33, 49, 51, 93, 113, 130, 182, 212, 214, 218, 221, 228, 229, 241, 243, 250, 263], "unusu": [7, 14, 116, 227], "tailor": 7, "necessarili": [7, 12, 14, 29, 51, 52, 53, 76, 78, 81, 183, 184, 191, 192, 194, 208, 212, 214, 215], "is_integ": [7, 18, 51, 174, 196, 221], "assumptions0": [7, 51], "commut": [7, 25, 28, 32, 42, 43, 47, 51, 53, 74, 78, 87, 139, 146, 149, 150, 151, 161, 162, 167, 174, 180, 184, 187, 188, 189, 190, 192, 196, 203, 204, 206, 212, 222, 266], "extended_neg": [7, 51], "extended_nonneg": [7, 51], "extended_nonposit": [7, 51], "extended_nonzero": [7, 51, 196], "extended_posit": [7, 51], "extended_r": [7, 29, 51, 196, 211, 215], "hermitian": [7, 28, 51, 82, 83, 87, 145, 151, 162, 196], "irrat": [7, 28, 31, 51, 91, 186, 192, 196, 204, 265], "noninteg": [7, 29, 51, 186, 196], "nonneg": [7, 18, 28, 51, 52, 53, 56, 59, 84, 129, 184, 186, 209, 216, 271], "nonposit": [7, 28, 51, 129], "nonzero": [7, 18, 28, 30, 50, 51, 66, 87, 103, 184, 185, 186, 187, 196, 199, 215], "ration": [7, 18, 26, 28, 31, 33, 50, 55, 56, 57, 59, 61, 64, 66, 68, 72, 76, 78, 79, 84, 87, 91, 93, 101, 131, 164, 181, 184, 188, 189, 190, 191, 193, 196, 200, 201, 205, 206, 208, 209, 210, 211, 214, 215, 216, 234, 241, 262, 263, 266, 270], "transcendent": [7, 28, 51, 59, 78, 186, 191, 196, 214, 215, 267, 272], "tabl": [7, 14, 34, 42, 51, 56, 59, 72, 77, 78, 87, 91, 108, 129, 181, 191, 218, 254], "oo": [7, 8, 14, 29, 31, 50, 51, 55, 56, 57, 59, 64, 76, 78, 81, 87, 101, 103, 148, 160, 163, 187, 189, 192, 201, 202, 203, 204, 208, 211, 212, 214, 215, 216, 221, 234, 237, 261, 265], "zoo": [7, 29, 51, 56, 57, 59, 78, 203, 205, 208], "field": [7, 25, 29, 33, 51, 52, 53, 59, 69, 78, 134, 135, 174, 178, 183, 184, 185, 187, 188, 190, 192, 193, 194, 209, 214, 227, 241, 243, 245, 246, 248, 250], "oper": [7, 8, 11, 13, 14, 18, 23, 25, 29, 33, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 59, 61, 69, 71, 74, 76, 81, 82, 84, 86, 91, 93, 101, 102, 105, 109, 110, 117, 121, 126, 129, 134, 138, 139, 143, 145, 146, 147, 148, 153, 154, 157, 159, 160, 161, 162, 171, 172, 174, 178, 183, 184, 185, 186, 187, 189, 191, 192, 193, 196, 199, 201, 204, 205, 207, 208, 212, 214, 215, 218, 219, 220, 221, 227, 228, 231, 234, 235, 241, 248, 251, 257, 262, 263, 264, 266, 271], "antihermitian": [7, 28, 51], "mathbb": [7, 18, 29, 34, 42, 50, 51, 52, 57, 59, 76, 82, 87, 126, 181, 183, 184, 186, 187, 189, 191, 192, 195, 203, 204, 206, 209, 215, 216, 271], "iy": [7, 57, 76, 204, 215], "overlin": [7, 15, 59], "extend": [7, 14, 15, 18, 19, 28, 33, 42, 43, 51, 52, 56, 63, 76, 78, 87, 91, 129, 170, 176, 182, 184, 187, 189, 191, 192, 193, 196, 203, 205, 209, 211, 212, 215, 216, 217, 229, 231, 263, 265], "cup": [7, 192, 204, 215], "infti": [7, 14, 29, 50, 51, 52, 56, 57, 59, 76, 78, 183, 192, 199, 203, 206, 212, 215, 216, 261, 265, 271], "pm": [7, 50, 76, 78, 184, 195, 203, 209, 212], "yi": 7, "ne": [7, 52, 57, 64, 76, 91, 184, 186, 189, 206, 212, 216], "composit": [7, 28, 32, 40, 42, 43, 51, 52, 69, 71, 78, 91, 94, 187, 189, 192, 195, 208, 215, 230], "2k": [7, 51, 76, 91, 209], "pariti": [7, 43], "product": [7, 25, 36, 39, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 59, 61, 64, 66, 67, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 101, 102, 103, 105, 116, 127, 129, 137, 141, 142, 145, 147, 148, 149, 151, 154, 156, 157, 159, 160, 162, 167, 168, 171, 172, 174, 178, 179, 180, 181, 183, 184, 185, 187, 189, 191, 192, 193, 196, 197, 198, 201, 204, 205, 208, 209, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 228, 231, 234, 241, 244, 248], "ge": [7, 15, 56, 57, 59, 76, 82, 87, 91, 181, 184, 189, 206, 234], "le": [7, 34, 47, 59, 76, 82, 91, 122, 189, 206, 216], "en": [7, 14, 15, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 99, 101, 104, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 148, 150, 151, 160, 162, 172, 174, 178, 192, 193, 199, 203, 204, 205, 212, 215, 216, 229, 234, 235, 241, 242, 246, 248, 250, 267], "wikipedia": [7, 14, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 80, 81, 82, 84, 87, 91, 99, 101, 104, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 148, 150, 151, 160, 162, 165, 172, 174, 178, 192, 199, 203, 204, 205, 212, 215, 216, 229, 234, 241, 242, 246, 248, 250, 265, 267, 269], "commutative_properti": [7, 51], "infin": [7, 29, 50, 56, 57, 59, 64, 76, 78, 87, 135, 187, 189, 192, 196, 201, 202, 203, 204, 208, 211, 212, 216], "skew": [7, 74, 91, 216], "hermitian_matrix": 7, "complex_numb": [7, 29, 51], "algebraic_numb": [7, 29, 51], "transcendental_numb": [7, 51], "extended_real_number_lin": 7, "real_numb": [7, 29], "imaginary_numb": [7, 29, 51], "rational_numb": [7, 29], "irrational_numb": [7, 29, 51], "parity_": [7, 51], "prime_numb": [7, 51, 91], "composite_numb": [7, 51], "positive_real_numb": 7, "negative_numb": [7, 51], "beyond": [7, 11, 19, 45, 67, 91, 126, 183, 186, 205, 208, 267], "immedi": [7, 12, 42, 51, 76, 81, 162, 183, 186, 228, 235], "redund": [7, 12, 42, 49, 81, 87, 212, 229], "simpli": [7, 8, 9, 11, 12, 15, 29, 34, 50, 51, 53, 57, 61, 82, 84, 87, 91, 93, 94, 102, 106, 114, 116, 126, 152, 157, 167, 177, 180, 186, 193, 204, 205, 206, 212, 215, 232, 235, 247], "is_real": [7, 18, 51, 53, 57, 58, 87, 174, 196, 221], "inconsist": [7, 18, 26, 28, 50, 167, 172, 175, 179, 208, 212, 215], "inconsistentassumpt": 7, "worth": [7, 12, 18, 172, 245, 247], "deal": [7, 33, 50, 51, 55, 63, 71, 76, 78, 98, 105, 109, 110, 114, 177, 179, 180, 184, 189, 192, 209, 210, 214, 225, 235, 237, 244, 249, 263, 265, 271], "reserv": [7, 114, 222, 229, 267], "is_zero_matrix": [7, 82, 185], "is_zero": [7, 12, 18, 66, 87, 183, 187, 192, 232, 267], "generalis": [7, 59, 76, 183], "gaussian": [7, 59, 78, 87, 91, 132, 188, 189, 192, 209, 214, 216, 257, 267], "notion": [7, 32, 167, 170, 183, 215, 244, 249], "likewis": [7, 14, 32, 117], "scheme": [7, 9, 12, 43, 50, 55, 181, 182, 189, 192, 221], "chain": [7, 18, 33, 42, 47, 51, 59, 68, 92, 179, 191, 216], "superset": [7, 31, 40, 46, 54, 129, 186, 204, 214], "vanilla": 7, "attach": [7, 45, 76, 92, 94, 109, 180, 228, 230, 235], "belong": [7, 15, 29, 32, 42, 47, 51, 74, 87, 162, 172, 179, 182, 183, 185, 186, 189, 191, 192, 203, 204, 208, 209, 215, 222], "is_commut": [7, 78, 151, 160, 234], "is_complex": [7, 51], "is_finit": [7, 51], "permit": [7, 43, 53, 57, 81, 91, 182], "formal": [7, 32, 50, 51, 59, 76, 81, 131, 167, 186, 188, 189, 200, 203], "littl": [7, 18, 32, 43, 61, 87, 91, 92, 116, 167, 190, 192, 196, 206, 208, 216, 231, 244], "difficult": [7, 15, 51, 87, 114, 193, 206, 212, 213, 215, 228, 250, 265, 271], "suit": [7, 11, 12, 15, 18, 32, 182, 192, 225, 227], "n1": [7, 33, 42, 51, 52, 114, 129, 131, 135, 171, 209, 216, 241], "n2": [7, 33, 42, 51, 52, 129, 131, 135, 209, 216], "misunderstand": 7, "is_nonneg": [7, 18, 187], "intent": [7, 33, 50, 51, 93, 229], "meaning": [7, 26, 28, 32, 52], "alon": [7, 52, 79, 189, 212, 214, 221, 234, 265, 266], "suffici": [7, 12, 14, 32, 33, 42, 43, 47, 51, 87, 167, 199, 203, 212, 216, 231, 271], "tempt": [7, 18, 51, 91], "meet": [7, 52, 203], "criteria": [7, 51, 266], "bear": [7, 15], "ordinari": [7, 8, 11, 22, 31, 33, 42, 51, 55, 57, 59, 69, 73, 74, 78, 88, 101, 123, 183, 185, 186, 195, 202, 210, 212, 217, 231, 265, 271], "noncommut": [7, 51, 74, 266], "entir": [7, 11, 12, 19, 42, 51, 52, 55, 59, 65, 67, 76, 90, 107, 127, 172, 183, 185, 191, 204, 221, 230, 232, 265, 271], "Such": [7, 12, 14, 33, 51, 67, 117, 183, 184, 191, 197, 205, 206, 208, 260, 266], "finiteset": [7, 31, 32, 215, 216, 272], "intersect": [7, 14, 31, 32, 42, 61, 62, 64, 65, 66, 67, 68, 135, 183, 192, 196, 202, 203, 215, 258], "s1": [7, 42, 50, 64, 67, 74, 101, 173, 183, 192, 199, 209, 234, 243], "s2": [7, 42, 43, 50, 64, 67, 101, 173, 183, 192, 199, 203, 209, 234, 243], "bool": [7, 21, 31, 33, 47, 49, 51, 52, 54, 57, 78, 79, 81, 82, 84, 87, 91, 93, 110, 146, 174, 176, 182, 191, 192, 194, 196, 197, 198, 203, 204, 208, 211, 214, 216, 228, 229, 234, 235, 241, 243, 263], "plai": [7, 50, 116, 124, 209, 263, 265, 266], "role": [7, 57, 194], "connect": [7, 45, 52, 53, 66, 67, 87, 92, 94, 97, 106, 108, 116, 118, 183, 184, 185, 194, 212, 216, 234, 241], "is_finite_set": 7, "zero_matrix": 7, "setsymbol": 7, "concern": [7, 14, 31, 34, 50, 55, 91, 177, 182, 184, 185, 186, 195, 196, 197, 208, 209, 214, 228, 229, 231, 237], "semant": [7, 12, 84], "aspect": [7, 15, 87, 186], "is_numb": [7, 51, 59, 78], "is_compar": [7, 51], "capitalis": 7, "float": [7, 11, 18, 19, 33, 42, 57, 59, 66, 68, 78, 79, 82, 87, 91, 93, 99, 101, 129, 135, 176, 182, 186, 187, 196, 208, 214, 216, 227, 235, 237, 252, 260, 263], "faster": [7, 11, 33, 36, 51, 59, 82, 91, 92, 105, 107, 109, 110, 126, 185, 186, 187, 189, 191, 192, 193, 197, 199, 203, 208, 209, 212, 213, 215, 228, 231], "expr1": [7, 12, 101, 182, 214, 266], "4142135623731": [7, 196, 214], "primari": [7, 11, 12, 14, 15, 18, 51, 63, 81, 180, 183, 229, 235], "predict": [7, 162, 208, 234], "inequ": [7, 8, 18, 22, 51, 182, 189, 204, 206, 210], "expreal": 7, "restrict": [7, 18, 33, 40, 51, 52, 59, 87, 94, 95, 162, 183, 186, 191, 193, 211], "fuzzy_and": [7, 8, 18], "fuzzy_or": [7, 8], "is_extended_nonneg": 7, "classmethod": [7, 18, 25, 27, 28, 33, 35, 40, 42, 43, 45, 46, 51, 57, 58, 59, 66, 82, 87, 101, 148, 159, 160, 162, 185, 187, 191, 192, 196, 204, 222, 227], "is_extended_r": 7, "is_infinit": 7, "is_extended_neg": 7, "is_extended_posit": [7, 8], "self": [7, 14, 18, 25, 27, 28, 32, 33, 42, 43, 48, 50, 51, 53, 57, 60, 61, 62, 64, 65, 66, 67, 78, 82, 87, 91, 106, 116, 157, 162, 172, 174, 175, 183, 185, 187, 189, 191, 192, 196, 198, 203, 204, 222, 241], "arg": [7, 15, 18, 25, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 45, 48, 50, 51, 52, 53, 55, 56, 58, 59, 61, 62, 64, 66, 67, 68, 73, 76, 78, 81, 82, 83, 84, 85, 87, 89, 91, 93, 101, 131, 137, 140, 142, 145, 146, 147, 148, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 172, 176, 180, 182, 185, 187, 189, 191, 192, 193, 196, 198, 199, 202, 203, 204, 205, 208, 212, 214, 215, 216, 217, 221, 222, 227, 228, 229, 230, 234, 235, 237, 241, 242], "_eval_is_finit": 7, "is_extended_nonposit": 7, "_eval_is_algebra": 7, "is_nonzero": [7, 66], "_eval_is_integ": 7, "_eval_is_zero": [7, 18], "pick": [7, 17, 52, 56, 126, 156, 158, 271], "__new__": [7, 18, 33, 42, 51, 266], "verifi": [7, 20, 31, 42, 48, 52, 53, 114, 183, 189, 195, 212, 214, 215, 217, 218, 248, 271], "importantli": [7, 18, 193, 231], "reject": [7, 8, 91, 209, 237], "_eval_is_": 7, "is_algebra": [7, 51, 187], "minim": [7, 14, 18, 31, 42, 43, 47, 50, 51, 52, 76, 78, 81, 91, 106, 117, 131, 185, 186, 187, 188, 189, 192, 195, 205, 208, 209, 214, 234, 238], "interfer": [7, 196], "determinist": [7, 42, 78, 91, 189, 190], "reach": [7, 91, 101, 191, 192, 212], "advantag": [7, 13, 18, 28, 31, 33, 51, 52, 78, 81, 87, 91, 98, 166, 185, 186, 193, 204, 209, 212, 215, 231, 263, 265, 267, 271], "leav": [7, 18, 33, 51, 78, 87, 91, 110, 123, 146, 162, 203, 231, 260, 266, 271], "claus": [7, 81], "flow": [7, 191], "condit": [7, 8, 33, 42, 51, 53, 57, 59, 69, 70, 73, 74, 75, 77, 78, 81, 87, 91, 93, 94, 95, 101, 107, 110, 116, 123, 126, 129, 131, 175, 181, 193, 196, 199, 206, 209, 211, 212, 214, 215, 216, 221, 254, 271], "inner": [7, 50, 76, 87, 145, 148, 149, 154, 156, 157, 160, 162, 172, 175, 185, 191, 198, 241], "optimis": [7, 212], "elementari": [7, 8, 14, 18, 42, 51, 52, 55, 58, 59, 73, 76, 78, 82, 87, 91, 127, 155, 158, 188, 192, 193, 200, 234, 235, 244, 254], "stage": [7, 32, 50, 91, 203, 271], "briefli": [7, 184, 189], "canon": [7, 14, 33, 35, 40, 42, 43, 47, 51, 52, 53, 57, 67, 76, 81, 87, 91, 93, 109, 139, 143, 162, 164, 167, 169, 189, 197, 204, 205, 208, 214, 216, 222, 234, 271], "readi": [7, 12, 113, 186, 196, 212], "managedproperti": [7, 51], "metaclass": [7, 51], "relev": [7, 12, 14, 15, 33, 49, 64, 79, 80, 106, 109, 111, 116, 167, 176, 180, 186, 206, 212, 213, 222, 227, 248], "default_assumpt": 7, "initi": [7, 15, 27, 42, 46, 51, 52, 53, 56, 59, 67, 69, 70, 73, 74, 75, 76, 79, 91, 93, 95, 97, 99, 101, 106, 109, 111, 113, 114, 116, 117, 122, 124, 125, 126, 129, 130, 134, 142, 151, 173, 174, 176, 180, 181, 189, 191, 192, 196, 202, 206, 208, 212, 214, 215, 221, 229, 236, 237, 241, 242, 243, 244, 245], "_ask": 7, "_eval_i": 7, "enumer": [7, 35, 38, 40, 43, 46, 54, 58, 76, 81, 91, 191, 192, 206, 231, 234], "randomis": [7, 224, 259], "unresolv": 7, "factrul": 7, "_assume_rul": 7, "preprocess": [7, 78, 194], "defined_fact": 7, "full_impl": 7, "defaultdict": [7, 51, 234], "precomput": [7, 56, 91, 235], "static": [7, 25, 33, 42, 43, 45, 51, 57, 64, 65, 66, 67, 84, 95, 116, 123, 182, 196, 202, 204, 216, 228], "knowabl": 7, "stdfactkb": 7, "whose": [7, 15, 18, 32, 34, 35, 40, 43, 50, 51, 52, 57, 61, 65, 67, 68, 74, 78, 81, 87, 91, 111, 124, 134, 157, 167, 173, 174, 177, 180, 184, 185, 187, 191, 192, 203, 204, 208, 212, 213, 214, 216, 222, 227, 231, 234, 235, 241, 243, 245, 247], "_eval_is_r": [7, 18, 192], "_assumpt": [7, 51], "share": [7, 12, 18, 52, 91, 187, 191, 196, 216, 229], "amongst": [7, 214], "exhaust": [7, 12, 23, 206, 234, 264], "indirectli": 7, "execut": [7, 20, 33, 79, 82, 129, 182, 196, 212, 215, 225, 227, 229, 230, 235, 237, 240, 251, 265, 270], "manifest": [7, 184], "jointli": 7, "fundament": [7, 18, 31, 34, 41, 69, 76, 78, 87, 167, 186, 191, 209, 212, 216, 267], "theoret": [7, 32, 34, 42, 52, 190, 191, 206, 263], "upon": [7, 33, 51, 91, 113, 116, 124, 125, 126, 129, 156, 162, 177, 179, 180, 204, 212, 221, 228, 247, 271], "relat": [8, 11, 12, 14, 15, 26, 28, 29, 31, 34, 35, 41, 42, 49, 53, 56, 57, 58, 67, 73, 76, 78, 82, 87, 91, 97, 104, 117, 120, 123, 129, 131, 136, 144, 146, 172, 175, 178, 179, 181, 182, 183, 189, 191, 192, 193, 195, 196, 200, 202, 203, 206, 208, 209, 211, 212, 214, 215, 216, 234, 248, 252, 254, 271], "isposit": 8, "xpo": 8, "xneg": 8, "mayb": [8, 9], "strictgreaterthan": 8, "analogu": [8, 29, 50, 65, 186, 187], "piecewis": [8, 18, 33, 50, 58, 59, 78, 94, 160, 196, 198, 199, 214, 215, 216, 235, 261], "nonetyp": [8, 33], "consider": [8, 12, 51, 92, 105, 186, 195, 204, 209, 212, 244], "quirk": 8, "did": [8, 11, 15, 51, 78, 91, 105, 120, 167, 189, 193, 204, 214, 225, 235, 263, 265, 271], "both_posit": 8, "falsei": 8, "both_positive_bett": 8, "negat": [8, 18, 29, 51, 57, 81, 101, 172, 185, 187, 189, 192], "branch": [8, 13, 31, 51, 56, 57, 58, 59, 77, 193, 206, 215, 266, 271], "fuzzy_not": [8, 18], "both_positive_best": 8, "simpler": [8, 18, 51, 55, 59, 75, 76, 120, 180, 189, 205, 206, 208, 212, 214, 215, 271], "silent": [8, 55, 91, 228], "easier": [8, 12, 51, 95, 114, 116, 179, 187, 191, 193, 206, 212, 215, 229, 235, 244, 265, 271, 272], "carefulli": [8, 51, 172, 189, 198], "truth": [8, 26, 27, 28, 29, 30, 51, 82, 208, 254], "bitwis": [8, 54, 81], "produc": [8, 11, 14, 15, 18, 32, 42, 51, 52, 64, 78, 81, 87, 172, 186, 191, 192, 196, 203, 212, 213, 214, 216, 225, 227, 231, 232, 234, 270], "footnot": [8, 167, 266, 267, 270], "machin": [9, 11, 13, 14, 197, 208, 212, 260], "imag": [9, 11, 42, 119, 129, 131, 135, 183, 187, 189, 196, 204, 215], "os": [9, 227, 237, 238], "choos": [9, 14, 42, 47, 51, 53, 56, 87, 91, 95, 99, 117, 127, 162, 166, 172, 179, 180, 188, 192, 193, 196, 203, 205, 206, 212, 213, 216, 227, 232, 271], "cd": [9, 13, 14, 215, 234], "dockerfil": 9, "htmldoc": 9, "sympy_htmldoc": 9, "apt": [9, 13], "python3": [9, 11, 33, 93, 196, 227], "sphinx": [9, 12, 15, 16, 57, 212, 227, 232], "texliv": [9, 11, 196], "dvipng": 9, "librsvg2": 9, "bin": [9, 10, 11, 13, 14, 79, 196, 227, 234], "imagemagick": 9, "docbook2x": 9, "graphviz": [9, 15, 266, 270], "pip": [9, 11, 20, 93], "txt": [9, 196], "mpmath": [9, 11, 13, 18, 19, 33, 56, 59, 87, 92, 129, 186, 187, 196, 204, 214, 230, 235], "packag": [9, 11, 20, 22, 79, 92, 93, 98, 123, 129, 176, 196, 227, 238, 246, 247, 265], "rpm": 9, "distribut": [9, 11, 20, 42, 49, 51, 59, 67, 78, 94, 95, 161, 184, 187, 188, 192, 196, 222], "prerequisit": 9, "dnf": [9, 81], "medium": [9, 18, 131, 132, 135, 136, 146, 189, 257], "tool": [9, 15, 18, 19, 42, 79, 86, 87, 92, 101, 129, 180, 183, 188, 189, 196, 207, 228, 234, 240, 248, 253, 255], "homebrew": 9, "brew": 9, "sh": 9, "docbook": 9, "librsvg": 9, "conda": [9, 11, 13, 20, 93], "forg": [9, 11, 93], "success": [9, 15, 32, 42, 51, 59, 76, 78, 91, 116, 172, 183, 189, 191, 204, 205, 212, 214, 215, 216, 234, 241, 242], "tricki": [9, 51, 76], "subsystem": [9, 196], "linux": [9, 20], "workaround": [9, 235], "microsoftdoc": 9, "wsl": 9, "blob": [9, 78], "win10": 9, "md": [9, 12, 15, 225, 232], "prompt": [9, 14], "transfer": [9, 98, 99, 101, 131, 215], "termin": [9, 42, 51, 57, 79, 91, 176, 196, 203, 227, 270], "html": [9, 11, 12, 14, 15, 29, 33, 35, 43, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 68, 78, 79, 87, 91, 99, 190, 196, 199, 201, 204, 205, 209, 212, 216, 228, 230, 232, 234, 235, 267], "directori": [9, 11, 14, 15, 20, 28, 33, 212, 227, 228, 237], "folder": 9, "prepend": [9, 32, 42, 87, 101, 169, 222], "mnt": 9, "navig": 9, "cygwin": 9, "msys2": 9, "virtual": [9, 12, 16, 20, 51, 67, 180, 264], "partial": [9, 31, 42, 49, 50, 51, 53, 55, 56, 57, 91, 93, 129, 156, 172, 175, 177, 187, 188, 190, 193, 196, 198, 205, 208, 210, 212, 213, 217, 223, 241, 247, 261, 271], "workflow": [9, 11, 13, 17, 23, 129, 186, 229, 235], "viabl": [9, 52], "64": [9, 36, 42, 91, 128, 181, 195, 205, 214, 216, 227, 234, 237, 270], "chocolatei": 9, "choco": 9, "rsvg": 9, "chose": [9, 52], "rm": [9, 33], "Be": [9, 12, 14, 18, 31, 51, 81, 87, 189, 212, 215, 223, 235], "sure": [9, 12, 14, 15, 18, 33, 42, 51, 63, 113, 114, 142, 167, 192, 193, 203, 212, 214, 215, 228, 234, 263, 266, 271], "filesystem": 9, "makefil": 9, "subdirectori": 9, "svg": [9, 79, 176], "_build": [9, 14], "web": [9, 15, 52, 63, 129, 178, 190, 209], "browser": 9, "drop": [9, 57, 78, 92, 120, 187, 189], "menu": 9, "told": 9, "load": [9, 33, 51, 79, 94, 95, 97, 106, 109, 113, 118, 130, 142, 176], "ll": [9, 32, 49, 87, 117, 179, 180, 225], "step": [9, 12, 13, 16, 18, 23, 31, 33, 42, 46, 47, 50, 51, 52, 59, 75, 76, 78, 87, 91, 92, 100, 109, 120, 123, 124, 129, 130, 164, 175, 180, 182, 186, 187, 189, 192, 196, 197, 198, 201, 204, 205, 206, 208, 209, 210, 212, 214, 216, 221, 228, 234, 235, 261], "reload": 9, "monitor": 9, "detect": [9, 11, 24, 31, 84, 87, 91, 182, 186, 196, 212, 213, 215, 217, 234, 252, 270], "procedur": [9, 34, 36, 42, 48, 49, 50, 78, 87, 109, 127, 189, 191, 208, 209, 214, 215, 241, 267], "8000": [9, 94], "localhost": 9, "port": [9, 93, 116, 134], "finish": [9, 33, 34, 156, 230, 268], "stop": [9, 12, 33, 34, 43, 51, 87, 91, 182, 202, 204, 212, 216], "ctrl": 9, "detach": 9, "mode": [9, 10, 51, 79, 93, 134, 157, 176, 192, 196, 227, 238, 258], "livehtml": 9, "action": [9, 11, 15, 42, 80, 154, 157, 167, 192, 208, 215], "99": [9, 33, 51, 52, 87, 91, 189, 190], "math": [9, 11, 14, 18, 25, 29, 32, 34, 42, 51, 59, 61, 78, 87, 91, 92, 114, 123, 177, 182, 187, 190, 195, 196, 212, 213, 216, 228, 229, 235, 245, 246, 247, 248, 249, 253, 260, 261, 265], "doubl": [9, 14, 15, 31, 33, 47, 51, 52, 58, 87, 93, 108, 122, 123, 179, 186, 196, 205, 206, 229, 271], "backtick": [9, 14, 15], "render": [9, 11, 14, 15, 33, 51, 79, 176, 182, 196, 270], "resourc": [9, 14, 15, 18, 87, 190, 212, 228, 238], "style": [9, 16, 21, 32, 51, 79, 156, 176, 182, 196, 215, 270], "guid": [9, 11, 16, 17, 18, 20, 32, 51, 58, 114, 126, 196, 222, 255, 257, 264, 268, 269], "tip": [9, 14, 21, 51, 126, 212, 213, 271], "xelatex": 9, "latexmk": 9, "chrome": 9, "chromium": 9, "xetex": 9, "font": [9, 79, 176, 196], "lmodern": 9, "cask": 9, "tap": 9, "dejavu": 9, "strawberryperl": 9, "miktex": [9, 11], "dejavufont": 9, "appdata": 9, "microsoft": 9, "click": 9, "dev": [9, 11, 12, 13, 232], "sympy_debug": [10, 78, 237], "unix": [10, 227, 228], "window": [10, 237, 258], "nice": [10, 12, 14, 20, 51, 63, 87, 91, 114, 126, 129, 182, 196, 206, 237, 266], "enabl": [11, 15, 18, 20, 51, 78, 79, 91, 95, 114, 116, 162, 172, 176, 196, 212, 216, 227, 232, 235, 267, 270, 271], "certain": [11, 15, 18, 20, 30, 32, 33, 42, 49, 51, 55, 59, 67, 76, 78, 91, 93, 126, 172, 173, 183, 186, 189, 191, 196, 197, 203, 206, 208, 209, 212, 215, 216, 218, 229, 230, 235, 241, 243, 249, 271], "mention": [11, 12, 14, 18, 42, 76, 78, 101, 116, 130, 131, 177, 206, 209, 212, 216, 244, 245, 246, 247, 267], "incomplet": [11, 14, 15, 51, 56, 59, 184, 186, 192, 198, 214, 215], "webpag": [11, 15], "io": [11, 15, 79, 196, 235], "arithmet": [11, 19, 33, 51, 52, 55, 82, 87, 91, 151, 158, 181, 182, 183, 185, 186, 187, 189, 190, 194, 197], "hood": 11, "importerror": 11, "extern": [11, 20, 79, 93, 97, 99, 116, 123, 176, 186, 187, 197, 204, 208, 216, 227, 228], "latest": [11, 13, 20, 32, 230, 232, 235], "git": [11, 16, 19], "repositori": [11, 13, 15, 20], "vast": [11, 78, 188], "wrap": [11, 12, 14, 26, 27, 28, 29, 33, 40, 51, 57, 79, 92, 176, 180, 182, 185, 186, 189, 196, 199, 215, 221, 228, 232, 235, 237, 266], "ci": [11, 15, 59, 76, 196, 270], "local": [11, 24, 26, 27, 28, 51, 53, 76, 93, 120, 122, 174, 183, 189, 214, 227], "gmpy2": [11, 186, 187], "gmp": 11, "speed": [11, 14, 28, 33, 42, 51, 52, 55, 82, 91, 92, 103, 108, 109, 110, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 129, 130, 133, 136, 171, 172, 175, 180, 181, 193, 196, 197, 203, 208, 212, 228, 231, 234, 266, 267], "experi": [11, 116, 215, 216], "interfac": [11, 15, 31, 51, 79, 108, 123, 131, 157, 176, 178, 180, 186, 189, 194, 215, 228, 229, 258], "notebook": [11, 18, 20, 79, 176, 235, 269, 270], "init_sess": [11, 79, 270], "flag": [11, 12, 18, 31, 33, 42, 43, 47, 49, 51, 64, 66, 78, 81, 82, 83, 87, 91, 114, 146, 182, 187, 189, 192, 193, 196, 197, 198, 204, 208, 209, 212, 214, 215, 222, 227, 228, 234, 237, 260, 271], "auto_symbol": [11, 79, 93], "auto_int_to_integ": [11, 79], "qt": 11, "mathjax": [11, 15, 79, 176, 270], "preview": [11, 32, 230, 259], "save": [11, 31, 51, 87, 91, 182, 195, 214, 231], "viewer": [11, 15, 32, 196, 230], "parser": [11, 84, 93, 123, 129, 227], "mathematca": 11, "maxima": [11, 93, 215], "parse_maxima": [11, 93], "antlr": [11, 93, 114], "runtim": [11, 33, 51, 110, 259], "autolev": [11, 116, 123], "antlr4": [11, 93], "compil": [11, 33, 79, 92, 105, 129, 176, 196, 208, 221, 227, 228, 229, 251, 265], "clang": [11, 93], "bind": [11, 33, 196, 228], "parse_c": 11, "lfortran": [11, 93], "dpll": 11, "sat": [11, 27], "solver": [11, 14, 27, 59, 87, 91, 113, 123, 129, 130, 185, 188, 208, 209, 213, 227, 251, 252, 262, 264], "pycosat": 11, "pysat": 11, "minisat": 11, "minisat22": 11, "heavi": [11, 216, 266], "rudimentari": [11, 18, 189], "text": [11, 12, 14, 15, 18, 20, 33, 42, 52, 56, 57, 59, 69, 76, 79, 82, 87, 91, 127, 167, 176, 182, 183, 196, 203, 209, 212, 215, 216, 227], "pyglet": [11, 196, 258], "pygletplot": [11, 182], "vehicl": 11, "principl": [11, 52, 82, 91, 133, 183, 184, 189, 205, 214], "third": [11, 12, 33, 42, 43, 51, 59, 61, 65, 101, 159, 165, 179, 184, 192, 206, 212, 215, 216, 232, 234, 248, 261, 266], "scipi": [11, 33, 51, 59, 105, 129, 156, 196, 216, 228, 235, 260, 269], "cupi": [11, 92], "cuda": [11, 92], "gpu": [11, 92, 129], "jax": [11, 92, 235], "xla": [11, 92], "tpu": [11, 92], "tensorflow": [11, 235], "learn": [11, 13, 15, 22, 87, 127, 180, 205, 215, 260, 263, 264, 265, 269], "numexpr": [11, 235], "subpackag": [11, 251], "f2py": [11, 33, 92, 228, 229], "ufuncifi": [11, 33, 228, 252], "cython": [11, 33, 92, 129, 228], "codegen": [11, 18, 92, 196, 228, 233, 253, 259], "llvm": 11, "gcc": [11, 229], "ifort": 11, "therefor": [11, 12, 14, 18, 34, 42, 47, 51, 55, 59, 67, 80, 91, 101, 177, 180, 181, 182, 186, 189, 192, 196, 212, 215, 216, 217, 222, 241, 242, 244, 245, 247, 249], "aeseara": 11, "graph": [11, 14, 43, 59, 80, 87, 92, 185, 196, 215, 234, 266, 270], "llvmlite": 11, "llvmjitcod": 11, "jit": [11, 205], "llvm_callabl": 11, "tensorflow_cod": 11, "wurlitz": 11, "captur": [11, 51, 234], "stat": [11, 251, 258], "pymc": [11, 216], "use_symengin": 11, "mechan": [11, 18, 21, 51, 74, 78, 94, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 120, 121, 122, 144, 148, 151, 157, 159, 160, 161, 164, 171, 172, 178, 181, 257, 258], "liealgebra": [11, 80], "matchpi": 11, "softwar": [11, 15, 78, 190, 265], "_sage_": 11, "import_modul": 11, "runner": [11, 227], "script": [11, 13, 14, 24, 59, 176, 228], "cloudpickl": 11, "pickl": 11, "util": [11, 12, 13, 14, 15, 31, 38, 40, 42, 43, 56, 57, 62, 63, 64, 67, 81, 82, 86, 91, 92, 132, 166, 169, 185, 188, 189, 193, 196, 208, 209, 210, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 253, 257], "test_pickl": 11, "pdf": [11, 15, 16, 23, 31, 32, 42, 52, 54, 56, 73, 78, 87, 91, 94, 95, 99, 182, 190, 195, 196, 199, 205, 208, 209, 212, 216, 234, 241], "view": [11, 14, 16, 33, 34, 51, 87, 94, 164, 167, 180, 182, 189, 196, 212, 215, 229, 231, 234], "host": [11, 15], "onlin": [11, 14, 109, 209, 234], "sympy_benchmark": 11, "readm": 11, "yourself": [11, 18, 33, 116, 230, 261], "reproduc": [11, 192, 227, 271], "asv": 11, "airspe": 11, "veloc": [11, 105, 106, 108, 109, 111, 116, 117, 120, 121, 122, 126, 127, 129, 136, 164, 167, 171, 172, 175, 177, 180, 247, 249], "properli": [12, 18, 32, 51, 57, 63, 76, 87, 110, 114, 124, 139, 143, 146, 160, 184, 186, 196, 212, 215, 225, 229, 235, 267, 272], "someon": [12, 212, 231, 264], "screen": [12, 79, 176, 180, 227, 270], "opportun": [12, 14, 208], "lightli": 12, "pain": 12, "frustrat": 12, "go": [12, 13, 14, 15, 18, 20, 32, 33, 42, 52, 57, 76, 109, 114, 116, 127, 129, 130, 156, 167, 175, 182, 191, 192, 203, 206, 212, 263, 265, 266, 269, 271], "seek": [12, 214], "stabl": [12, 14, 18, 51, 79, 87, 93, 101, 260], "supplant": 12, "newer": [12, 179, 214], "solveset": [12, 18, 129, 194, 210, 211, 214, 272], "superior": [12, 196], "older": [12, 15, 74, 114, 186, 196, 214], "cogniz": 12, "attr": [12, 33], "unsur": [12, 14], "mark": [12, 14, 15, 99, 135, 147, 209, 225, 230, 232], "privat": [12, 14, 51, 52, 114, 182, 229], "experiment": [12, 208, 259], "unnecessari": [12, 14, 15, 29, 33, 192, 195, 216, 227, 264], "usabl": [12, 186, 187, 196, 215, 265], "breakag": 12, "serious": 12, "taken": [12, 33, 34, 39, 42, 49, 50, 51, 56, 57, 59, 68, 82, 91, 101, 103, 105, 106, 126, 129, 159, 165, 172, 175, 181, 182, 186, 191, 192, 199, 203, 205, 206, 215, 216, 221, 229, 234, 241], "commun": [12, 15, 20, 181, 212, 214, 216, 267], "count": [12, 15, 43, 50, 51, 52, 56, 61, 81, 87, 90, 91, 157, 192, 204, 205, 208, 215, 216, 222, 231, 234], "basi": [12, 51, 53, 80, 84, 87, 106, 120, 122, 147, 156, 157, 159, 162, 164, 167, 170, 171, 172, 177, 179, 181, 183, 185, 187, 188, 192, 195, 206, 208, 214, 215, 217, 222, 243, 244, 247, 269], "constitut": [12, 15, 78, 91, 196], "codifi": 12, "clean": [12, 227], "categor": [12, 87, 183], "guidelin": [12, 16, 23, 212], "convent": [12, 14, 15, 17, 18, 42, 43, 47, 50, 51, 52, 56, 57, 59, 61, 66, 76, 78, 81, 93, 94, 95, 101, 104, 116, 129, 131, 135, 156, 157, 159, 164, 165, 177, 182, 196, 212, 213, 215, 216, 222, 249, 263, 271], "prefix": [12, 33, 51, 87, 91, 166, 169, 170, 186, 189, 193, 209, 212, 228, 229, 234, 257], "univers": [12, 33, 181, 190, 204, 209, 214, 215], "adher": [12, 15, 76], "despit": [12, 51, 271], "harm": 12, "peopl": [12, 14, 23, 54, 59, 78, 87, 167, 216], "upgrad": [12, 24], "fire": 12, "uncondition": 12, "defeat": [12, 212], "heavili": [12, 203, 213], "easi": [12, 19, 21, 39, 43, 51, 59, 76, 92, 111, 117, 123, 179, 183, 186, 191, 196, 203, 206, 209, 212, 215, 220, 221, 222, 260, 261, 263, 264, 265, 266, 267, 270], "account": [12, 57, 87, 199, 208, 212], "nonetheless": [12, 52, 164, 208, 212], "deprecat": 12, "come": [12, 20, 42, 47, 49, 50, 51, 57, 59, 76, 78, 87, 92, 105, 114, 116, 124, 165, 180, 183, 186, 189, 191, 192, 206, 209, 212, 215, 225, 227, 232, 235, 263, 265, 266, 269, 271], "especi": [12, 14, 18, 50, 87, 105, 114, 129, 156, 171, 180, 208, 212, 214, 227, 260, 261], "migrat": 12, "lengthen": 12, "impos": [12, 95], "mainten": [12, 28], "burden": [12, 196], "schedul": 12, "Being": [12, 47, 61, 67, 186], "assur": [12, 91, 192], "secondli": [12, 18, 206], "rigor": [12, 59, 180, 229], "surfac": [12, 57, 59, 65, 76, 95, 131, 135, 162, 182, 208, 241, 248], "enough": [12, 14, 42, 51, 55, 78, 87, 90, 91, 101, 114, 129, 187, 189, 196, 212, 261, 263], "backport": 12, "extrem": [12, 42, 55, 61, 67, 78, 84, 97, 126, 180, 208, 216], "model": [12, 55, 81, 91, 101, 110, 116, 117, 118, 119, 134, 192, 205, 216], "temptat": [12, 205, 271], "fudg": 12, "earli": [12, 51, 91, 151, 209], "acceler": [12, 92, 111, 116, 120, 122, 126, 127, 129, 165, 172, 175, 177, 200, 231, 249], "myst": [12, 15], "checkbox": 12, "tag": [12, 196, 214], "nest": [12, 51, 53, 57, 59, 78, 82, 101, 184, 186, 189, 196, 206, 208, 211, 215, 216, 217, 218, 220, 223, 234, 235, 266], "per": [12, 52, 87, 92, 136, 172, 177, 182, 187, 192, 193, 241, 244, 246, 249], "sympy_deprecation_warn": [12, 225, 230, 232], "multilin": [12, 196], "deprecated_since_vers": [12, 225, 230, 232], "active_deprecations_target": [12, 225, 230, 232], "target": [12, 14, 31, 32, 33, 51, 91, 107, 142, 146, 147, 205, 208, 211, 214, 215, 225, 228, 229, 232, 271], "stacklevel": [12, 225, 230, 232], "visual": [12, 51, 91, 95, 101, 123, 195, 208], "src": [12, 14, 15, 93, 212, 227, 232], "cross": [12, 15, 16, 51, 61, 67, 82, 87, 94, 95, 108, 121, 127, 129, 142, 172, 178, 179, 180, 209, 241, 244, 246, 247], "xyz": [12, 63, 93, 94, 172, 180, 241, 242, 245], "header": [12, 33, 228, 229], "warns_deprecated_sympi": [12, 225, 230, 232], "merg": [12, 33, 42, 43, 51, 170, 196, 204, 216, 227, 234, 235], "decor": [12, 18, 42, 51, 59, 225, 227, 232, 233, 236, 237, 259], "emit": [12, 196, 225, 232], "assert": [12, 32, 40, 41, 42, 43, 51, 61, 63, 93, 126, 204, 212, 213, 225, 232, 234], "behavior1": 12, "behavior2": 12, "ignore_warn": [12, 225, 230, 232, 235], "trigger": [12, 18, 43, 93, 162, 225], "somewher": [12, 14, 15, 33], "paragraph": [12, 14, 15, 18, 32], "metadata": [12, 32, 230, 232], "rst": [12, 14, 15, 34, 212, 227], "markdown": [12, 16], "markup": [12, 196], "clearli": [12, 14, 18, 91, 180, 186, 206, 267], "delin": 12, "newlin": [12, 87, 237], "charact": [12, 14, 15, 51, 52, 76, 79, 93, 142, 172, 176, 196, 212, 227, 229, 232, 237, 263, 265, 270], "larger": [12, 15, 18, 33, 42, 43, 50, 51, 52, 59, 76, 84, 87, 91, 117, 121, 187, 193, 197, 203, 208, 214, 229, 231, 263, 271], "simplify_thi": [12, 14, 230], "ref": [12, 42, 57, 87, 99, 129, 201, 216, 230, 267], "is_this_zero": [12, 232], "summar": [12, 227, 271], "fit": [12, 32, 76, 87, 90, 91, 180, 196, 212, 237, 266], "word": [12, 15, 18, 29, 38, 47, 50, 51, 52, 57, 59, 81, 101, 114, 127, 183, 186, 191, 208, 209, 212, 214, 229, 241, 245, 263], "uniqu": [12, 31, 32, 34, 42, 45, 47, 51, 52, 53, 56, 59, 66, 69, 74, 78, 80, 81, 87, 91, 108, 151, 160, 172, 180, 183, 184, 186, 189, 191, 197, 201, 208, 209, 212, 214, 215, 216, 220, 229, 234, 237, 244, 249, 263, 266], "across": [12, 15, 42, 49, 51, 62, 78, 95, 161, 162, 169, 182, 196, 231, 233, 234, 235, 269], "__init__": [12, 14, 18, 51, 109, 191, 241, 242, 266], "func_nam": [12, 33, 57, 82, 237], "simplfiy_thi": 12, "trivial": [12, 34, 42, 47, 50, 51, 52, 57, 66, 81, 84, 87, 91, 124, 162, 183, 184, 189, 192, 206, 209, 212, 215, 220], "dozen": [12, 18, 271], "search": [12, 14, 31, 42, 43, 47, 49, 51, 57, 87, 91, 114, 183, 191, 192, 205, 206, 208, 210, 213, 216, 228], "upcom": 12, "bot": 12, "push": [13, 76], "handbook": [13, 14, 34, 41, 42, 49, 59, 91], "internet": 13, "nn": 13, "brows": 13, "clone": [13, 20, 189], "download": [13, 15, 20, 32, 73, 190, 205, 212, 216, 241, 265], "77": [13, 40, 59, 87, 91, 195, 196, 229], "mib": 13, "remot": [13, 51], "collabor": 13, "upstream": 13, "fetch": 13, "checkout": [13, 32], "isol": [13, 31, 57, 187, 191, 192, 193, 214, 229], "flake8": 13, "usernam": 13, "consult": [13, 34], "test_bas": [13, 227], "similari": 13, "qualiti": [13, 92, 196], "code_qu": 13, "fdiff": [14, 18, 33, 51, 57, 58, 59], "argindex": [14, 18, 33, 51, 57, 58, 59], "heavisid": [14, 58, 76, 78, 196], "diracdelta": [14, 58, 78, 157, 162, 196], "scope": [14, 33, 123, 126, 225, 271], "od": [14, 18, 74, 109, 113, 123, 129, 210, 213, 272], "aim": [14, 15, 19, 69, 76, 167, 183, 206, 212, 215, 264, 265], "comment": [14, 15, 33, 42, 114, 116, 193, 196, 229, 234], "distract": 14, "consum": [14, 33, 59, 110, 126], "human": [14, 76, 164, 192, 196], "beings": 14, "english": [14, 52], "reader": [14, 15, 18, 32, 34, 127, 183, 231, 264, 269], "machineri": [14, 51, 191, 235], "platform": [14, 51, 162, 180, 212, 228], "restructuredtext": [14, 15], "concis": [14, 129], "quick": [14, 15, 18, 51, 87, 91, 208, 214, 235], "tripl": [14, 68, 87, 180, 181, 183, 191, 237], "raw": [14, 15, 33, 51, 52, 57, 92, 93, 156, 161, 186, 187, 192, 204, 208, 270], "backslash": [14, 51, 196], "blank": [14, 93, 110, 182], "close": [14, 33, 50, 51, 55, 56, 59, 67, 69, 76, 78, 80, 101, 182, 183, 184, 190, 191, 204, 214, 215, 229, 261, 271], "rare": [14, 18, 51, 212, 216, 225, 263], "underlin": [14, 15], "numpydoc": [14, 15], "review": [14, 15, 128], "plural": [14, 15], "clutter": 14, "amount": [14, 32, 51, 52, 63, 123, 172, 177, 180, 189, 199, 227, 241, 242], "notifi": 14, "awai": [14, 32, 34, 52, 94, 95, 116, 191, 196], "label": [14, 32, 33, 45, 51, 61, 74, 78, 97, 135, 142, 146, 151, 160, 162, 182, 196, 197, 199, 208, 221, 222, 270], "elabor": [14, 21, 23, 177, 247], "suffic": [14, 184], "clarifi": 14, "thought": [14, 51, 203, 212, 263, 266], "perfect": [14, 18, 42, 51, 91, 209, 215, 265, 266], "test_": [14, 227], "coverage_doctest": 14, "coverag": 14, "6868680200532414": 14, "dsolv": [14, 213, 214, 261, 265, 272], "hint": [14, 18, 32, 35, 42, 51, 54, 57, 78, 82, 87, 91, 101, 129, 139, 143, 159, 161, 162, 172, 192, 203, 206, 210, 214, 271], "1st_exact": 14, "readabl": [14, 24, 32, 79, 105, 192, 195, 196, 203, 205, 238], "accept": [14, 18, 32, 33, 42, 51, 57, 65, 78, 81, 82, 84, 87, 90, 93, 114, 156, 172, 176, 182, 191, 192, 195, 196, 197, 204, 206, 208, 214, 228, 235, 241, 242, 245, 267], "30": [14, 25, 31, 33, 37, 51, 52, 54, 55, 56, 59, 65, 67, 78, 82, 87, 88, 91, 94, 95, 114, 135, 185, 187, 191, 192, 196, 202, 205, 208, 216, 217, 271], "13": [14, 25, 33, 40, 42, 47, 51, 52, 54, 56, 59, 63, 64, 65, 66, 76, 81, 87, 91, 95, 99, 101, 114, 127, 182, 189, 191, 192, 193, 195, 196, 202, 209, 211, 213, 214, 216, 217, 227, 228, 250], "14": [14, 33, 40, 42, 46, 47, 49, 51, 52, 56, 57, 59, 76, 87, 88, 91, 92, 94, 99, 114, 181, 182, 185, 187, 189, 190, 191, 192, 193, 195, 196, 205, 208, 209, 212, 214, 216, 217, 261], "16": [14, 25, 31, 33, 42, 43, 46, 50, 51, 52, 56, 59, 60, 61, 65, 76, 78, 81, 87, 88, 90, 91, 95, 177, 184, 185, 186, 189, 190, 191, 192, 195, 196, 202, 204, 205, 206, 209, 216, 217, 234, 241, 249, 267], "18": [14, 42, 43, 54, 56, 59, 61, 64, 67, 83, 87, 91, 95, 99, 101, 103, 173, 181, 189, 190, 195, 196, 204, 205, 209, 212, 214, 215, 216, 217, 243], "19": [14, 42, 51, 54, 59, 61, 64, 67, 87, 91, 93, 94, 187, 191, 192, 195, 205, 209, 211, 214, 228, 260], "23": [14, 31, 42, 43, 51, 54, 57, 59, 65, 67, 87, 91, 94, 127, 187, 192, 195, 202, 209, 234], "24": [14, 25, 31, 39, 43, 44, 51, 54, 56, 59, 65, 73, 78, 87, 91, 94, 95, 99, 101, 159, 169, 181, 187, 189, 191, 192, 193, 195, 198, 203, 209, 212, 216, 231, 234, 250, 261, 267], "26": [14, 40, 51, 52, 54, 63, 87, 91, 94, 95, 192, 209, 216], "27": [14, 33, 34, 42, 46, 56, 61, 87, 91, 94, 95, 101, 103, 189, 214], "28": [14, 33, 42, 50, 54, 55, 59, 87, 91, 116, 205, 209, 212, 266], "29": [14, 25, 40, 42, 43, 51, 52, 54, 56, 57, 64, 65, 87, 91, 101, 151, 186, 204, 216], "enclos": [14, 61, 62, 67, 90, 102, 196, 206, 235], "colon": [14, 51], "absent": [14, 35], "signatur": [14, 18, 27, 28, 43, 51, 87, 229, 230, 234, 235], "brace": [14, 56, 114, 196], "opt_cs": 14, "optim": [14, 33, 35, 42, 55, 91, 105, 129, 142, 146, 192, 196, 197, 205, 208, 216, 228], "fragment": [14, 52], "embed": [14, 15, 19, 31, 43, 51, 79, 191], "hyperlink": 14, "classnam": 14, "erf": [14, 59, 76, 78, 196, 206, 216], "gauss": [14, 59, 78, 87, 131, 184, 191, 194, 214, 215], "erfc": [14, 59, 76, 196, 216], "complementari": [14, 59, 101], "erfi": [14, 59, 76, 196], "erf2": [14, 59, 196], "erfinv": [14, 59, 196, 216], "invers": [14, 25, 42, 43, 51, 52, 53, 58, 59, 77, 78, 84, 87, 91, 109, 151, 155, 156, 159, 164, 167, 183, 184, 185, 187, 189, 192, 193, 196, 198, 206, 208, 212, 214, 215, 216, 234, 267, 271], "erfcinv": [14, 59, 196], "erf2inv": [14, 59, 196], "besselj": [14, 59, 73, 196, 208, 212, 265], "besselbas": [14, 59], "bessel": [14, 15, 57, 58, 69, 78, 192, 208, 212, 216, 265], "bess": [14, 59, 196, 208, 212, 216], "besselk": [14, 59, 196, 216], "cite": [14, 21], "citat": [14, 50, 190], "augment": [14, 33, 87, 109, 124, 125, 129, 194, 214, 215, 232, 235, 272], "freeli": [14, 24, 85, 183], "wolfram": [14, 29, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 78, 87, 91, 93, 190, 196, 198, 199, 201, 204, 209, 216, 234, 267], "mathworld": [14, 29, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 78, 87, 91, 190, 199, 204, 209, 216, 234], "nist": [14, 56, 57, 59, 167], "dlmf": [14, 56, 57, 59], "suffer": 14, "rot": [14, 67, 159], "publish": [14, 76, 206], "clickabl": 14, "kozen89": [14, 189, 190], "kozen": [14, 190], "landau": [14, 190, 261], "decomposit": [14, 42, 49, 83, 84, 87, 185, 187, 188, 189, 190, 198, 271], "1989": [14, 190, 214], "pp": [14, 42, 43, 49, 50, 51, 52, 56, 57, 78, 82, 87, 117, 126, 181, 184, 189, 190, 212, 213, 216], "445": [14, 190], "456": [14, 51, 190], "abramowitz": [14, 59], "milton": [14, 59], "stegun": [14, 59], "iren": [14, 59], "chapter": [14, 42, 59, 91, 114, 190], "ed": [14, 43, 59, 87, 190, 214, 216], "1965": [14, 59, 82], "luke": [14, 59, 76, 206], "Their": [14, 51, 59, 76, 182, 186, 189, 206], "1969": [14, 52, 59, 76, 190, 206], "bessel_funct": [14, 59], "typefunct": [14, 59], "mathrm": [14, 20, 41, 50, 51, 52, 59, 76, 78, 87, 187, 189, 196, 204, 206, 212, 215, 216, 259, 261, 265], "plane": [14, 25, 51, 59, 61, 63, 64, 66, 67, 77, 78, 99, 116, 134, 135, 179, 180, 204, 215, 250, 271], "pole": [14, 59, 76, 100, 101, 135, 203, 206, 212], "obei": [14, 59, 181, 196, 206], "mirror": [14, 59, 78, 135], "conjug": [14, 29, 40, 41, 42, 51, 58, 59, 82, 87, 103, 131, 145, 148, 162, 192, 196, 212, 222], "polygamma": [14, 56, 59, 196], "eulergamma": [14, 55, 56, 59], "40": [14, 33, 54, 56, 59, 61, 68, 82, 87, 91, 94, 182, 193, 195, 196, 216, 237, 260], "288037795340032417959588909060233922890": [14, 59], "49801566811835604271": [14, 59], "15494982830181068512": [14, 59], "lowergamma": [14, 59, 216], "uppergamma": [14, 56, 59, 196, 216], "upper": [14, 28, 50, 52, 55, 59, 60, 67, 68, 82, 83, 84, 87, 90, 91, 99, 108, 155, 162, 181, 185, 187, 189, 191, 192, 196, 206, 214, 221, 241], "loggamma": [14, 15, 59, 196], "digamma": [14, 56, 59, 196], "trigamma": [14, 59, 196], "euler": [14, 31, 32, 50, 51, 52, 55, 58, 59, 67, 73, 79, 91, 159, 172, 176, 180, 181, 196, 212, 216, 241, 242], "gamma_funct": [14, 59], "gov": [14, 56, 57, 59], "gammafunct": [14, 59], "gammabetaerf": [14, 56, 59], "inlin": [14, 79, 176, 196, 229], "pretti": [14, 18, 32, 33, 59, 78, 79, 87, 91, 95, 101, 116, 176, 206, 208, 215, 249, 259, 262, 265, 267, 271], "literatur": [14, 76, 166, 188], "illumin": 14, "tone": 14, "narr": [14, 16, 264], "excerpt": 14, "geometri": [14, 60, 61, 62, 64, 65, 66, 67, 68, 78, 123, 135, 188, 243, 250, 251, 258, 265], "autofunct": 14, "convex_hul": [14, 63, 67, 68], "are_similar": [14, 62, 63, 68], "autoclass": 14, "linearent": [14, 61, 64, 65, 66, 67], "rai": [14, 61, 63, 64, 65, 67, 68, 131, 135], "curv": [14, 32, 53, 63, 78, 91, 94, 131, 182, 183, 212, 241, 250, 261], "ellips": [14, 62, 63, 67, 134, 182, 196, 270], "circl": [14, 18, 51, 61, 62, 63, 65, 66, 67, 68, 76, 135, 142, 182, 215, 241, 243, 250], "polygon": [14, 61, 62, 63, 68, 77, 182, 250], "regularpolygon": [14, 62, 63, 67, 182], "triangl": [14, 18, 32, 56, 62, 63, 67, 68, 78, 82, 91, 181, 182, 243, 250], "cumbersom": 14, "viewcod": 14, "qualifi": [14, 238], "trigonometr": [14, 18, 51, 58, 78, 193, 199, 207, 211, 212, 215, 235, 252, 262, 272], "trail": [14, 43, 91, 187, 189, 192, 232, 237], "www": [14, 15, 25, 31, 42, 43, 52, 54, 56, 59, 73, 78, 79, 91, 99, 176, 190, 195, 196, 205, 208, 209, 212, 216, 234, 267, 270], "master": [14, 15, 20, 78, 227], "dynamicsymbol": [14, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 129, 130, 172, 175, 176, 177, 178, 179, 180], "sine": [14, 18, 51, 57, 59, 76, 78, 136, 193, 199, 205, 260], "troubleshoot": [14, 126], "referencefram": [14, 106, 107, 109, 111, 114, 116, 117, 120, 121, 122, 124, 125, 126, 127, 129, 130, 173, 174, 175, 176, 177, 178, 179], "frame": [14, 105, 106, 107, 108, 109, 111, 113, 114, 116, 117, 118, 120, 122, 124, 125, 126, 127, 129, 130, 171, 172, 173, 174, 175, 177, 178, 179, 231, 241, 247], "notimplementederror": [14, 31, 50, 61, 64, 68, 78, 87, 99, 185, 191, 195, 204, 211, 212, 213, 214, 215], "outsid": [14, 29, 42, 51, 59, 62, 67, 82, 91, 105, 167, 180, 192, 208, 261, 266], "plot": [14, 18, 20, 60, 61, 63, 64, 67, 74, 79, 87, 94, 95, 100, 129, 146, 149, 155, 199, 251, 257, 258, 265, 270], "ahead": [14, 91], "submit": 14, "matrixcommon": [14, 84, 86, 87], "dyadic": [14, 54, 106, 111, 114, 116, 120, 122, 123, 129, 174, 176, 178, 243, 248], "shorten": 14, "highli": [15, 51, 55, 98, 186, 192, 201, 229], "teach": [15, 43, 52, 216], "conduct": 15, "survei": 15, "commonli": [15, 43, 56, 59, 78, 87, 105, 179, 184, 212, 247], "offer": [15, 32, 33, 42, 51, 92, 105, 129, 171, 180, 186, 191, 231, 248], "bring": [15, 76, 109, 121, 185, 199, 208, 267], "greater": [15, 29, 43, 51, 57, 59, 76, 80, 91, 101, 189, 192, 195, 203, 208, 212, 214, 216, 231, 234, 247, 261], "clariti": [15, 42, 175], "mission": [15, 32, 85], "ca": [15, 19, 20, 52, 59, 78, 195, 196, 234], "dedic": [15, 33, 188, 229, 245, 247], "essenti": [15, 35, 46, 51, 55, 57, 58, 59, 76, 111, 116, 177, 178, 180, 183, 184, 187, 191, 203, 206, 244, 247, 248, 249], "deviat": [15, 135, 216], "docutil": 15, "sourceforg": [15, 32], "net": [15, 32, 67, 190, 212, 216, 234], "ext": [15, 183, 187], "autodoc": 15, "graphic": [15, 99], "linkcod": 15, "readthedoc": [15, 79, 235], "sphinx_math_dollar": 15, "delimit": [15, 51, 196], "dollar": [15, 265], "sphinxext": 15, "plot_direct": 15, "figur": [15, 51, 52, 61, 62, 64, 66, 67, 78, 95, 114, 157, 179, 180, 181, 182, 193, 196, 250, 271], "devel": [15, 181], "supersed": [15, 114, 129], "pep": [15, 33, 51, 81], "257": [15, 91, 214], "four": [15, 33, 43, 51, 55, 59, 81, 84, 91, 97, 102, 127, 135, 172, 182, 183, 189, 192, 196, 204, 209, 212, 214, 216, 217, 241, 242, 245], "websit": [15, 269], "advertis": 15, "site": [15, 91, 230], "upload": [15, 91], "spars": [15, 84, 86, 87, 156, 185, 188, 191, 192, 193, 216, 217, 255, 266], "substanti": [15, 92], "edit": [15, 78, 87, 91, 189, 190, 192], "resid": 15, "standalon": [15, 129], "restructur": 15, "surround": [15, 51, 68, 135, 204, 237], "strip": [15, 52, 78, 91, 189, 232, 237], "unimport": 15, "bullet": 15, "whitespac": [15, 51, 232], "meta": [15, 51, 212, 213], "stackexchang": [15, 61], "5020": 15, "wikibook": [15, 78, 79], "overleaf": 15, "mathematical_express": 15, "verbatim": 15, "_rewrit": 15, "_expand": 15, "sentenc": [15, 81], "thumb": [15, 81, 234], "greek": [15, 24, 51, 91, 93, 183, 196], "\u03b1": [15, 181, 195], "italic": 15, "emphasi": [15, 186], "asterisk": 15, "stirl": [15, 43, 58, 234], "permut": [15, 34, 36, 38, 39, 41, 44, 47, 48, 49, 52, 56, 59, 82, 84, 87, 110, 162, 181, 185, 187, 192, 209, 217, 218, 222, 234, 271], "partit": [15, 38, 42, 58, 91, 117, 126, 128, 216, 231, 233], "consecut": [15, 33, 42, 47, 50, 52, 56, 67, 208, 214], "group": [15, 32, 37, 38, 43, 44, 47, 48, 49, 51, 54, 56, 80, 81, 91, 141, 150, 151, 162, 181, 182, 183, 191, 192, 208, 212, 214, 215, 222, 234], "pairwis": [15, 29, 32, 51, 56, 68, 87, 91, 209, 214], "ital": [15, 196], "talk": [15, 52, 183, 191, 244], "referenc": [15, 16, 35, 40, 91, 113, 116, 159, 191], "american": [15, 37, 52], "color": [15, 79, 99, 176, 196, 227, 234, 258, 270], "colour": 15, "quotat": 15, "line_color": [15, 182, 199], "aesthet": [15, 182], "ariti": [15, 182], "unrestrict": [15, 40, 234], "necklac": [15, 234], "bracelet": [15, 234], "revers": [15, 35, 40, 43, 50, 51, 52, 57, 78, 79, 81, 87, 91, 101, 161, 172, 176, 183, 185, 189, 192, 193, 196, 197, 204, 208, 212, 234, 271], "person": 15, "chebyshev": [15, 31, 51, 78, 189, 192], "pafnuti": 15, "lvovich": 15, "tchebychev": 15, "transliter": 15, "russian": 15, "chebyshevt": [15, 59, 196], "orthogonalpolynomi": 15, "t_n": [15, 56, 59, 78, 189, 245], "tens": 15, "inclus": [15, 50, 97, 155, 183, 202, 203, 204, 215], "pronoun": 15, "gender": 15, "neutral": 15, "he": [15, 56, 76, 189], "she": [15, 215], "extran": [15, 212], "belittl": 15, "obvious": [15, 34, 42, 165, 179, 186, 206], "straightforward": [15, 18, 42, 52, 87, 206], "unwelcom": 15, "judgement": 15, "phrase": [15, 52], "friendli": [15, 33, 76, 229], "toc": 16, "setup": [16, 21, 23, 33, 51, 117, 118, 131, 172, 189, 192, 194, 195, 206, 227, 228, 230, 240, 270], "rebuild": [16, 18, 51, 192, 266], "live": [16, 24, 34, 129, 191, 209], "server": 16, "debug": [16, 21, 23, 33, 51, 78, 116, 151, 227, 228, 237], "incompat": 16, "combinatori": [18, 35, 43, 50, 51, 58, 59, 198, 207, 234, 236, 271], "primepi": [18, 91], "matrixexpr": [18, 82, 84, 85], "dig": [18, 33, 266], "th": [18, 25, 34, 42, 43, 49, 52, 53, 55, 56, 57, 59, 80, 81, 87, 91, 109, 187, 189, 191, 192, 198, 201, 206, 209, 212, 214, 216, 217, 222], "undefin": [18, 27, 28, 31, 51, 57, 58, 59, 78, 84, 93, 106, 180, 191, 202, 203, 206, 235, 261, 272], "handler": [18, 21, 26, 27, 28, 29, 30, 51, 58, 87], "spectrum": 18, "matter": [18, 31, 40, 43, 50, 51, 56, 76, 78, 127, 203, 234, 265, 266], "use_unicod": [18, 31, 32, 33, 55, 59, 78, 79, 87, 95, 101, 134, 176, 181, 183, 184, 195, 196, 197, 215, 216, 261, 265, 267, 270, 271, 272], "neq": [18, 51, 57, 59, 76, 78, 82, 167, 180, 181, 189, 192, 209, 212, 214, 271], "lambdifi": [18, 33, 59, 116, 196, 214, 228, 233, 252, 259, 262], "np": [18, 58, 74, 91, 114, 228, 235], "arang": [18, 228, 260], "ultim": [18, 57, 167], "cosin": [18, 51, 57, 59, 66, 78, 106, 108, 172, 180, 192, 193, 199, 205, 216, 241, 271], "todai": [18, 183], "operatornam": [18, 56, 57, 59, 76, 78, 181, 184, 192, 196, 199, 204, 206, 214], "modern": [18, 33, 183, 190, 196], "recal": [18, 51, 87, 189, 191, 206, 263, 265, 266, 272], "redefin": [18, 43, 51, 124, 126, 184, 235], "antipattern": [18, 264], "stai": [18, 191], "trig": [18, 51, 78, 192, 196, 205, 208, 271], "wouldn": 18, "cheap": [18, 51, 91], "expens": [18, 51, 126, 205, 212, 213, 214, 230, 267], "as_two_term": [18, 51], "split": [18, 33, 51, 52, 55, 76, 78, 93, 189, 191, 194, 195, 196, 216, 222, 227, 234, 239, 266, 271], "hadn": 18, "wors": [18, 81, 208], "expand_trig": [18, 260], "mid": [18, 34, 52, 55, 95, 204, 209], "troubl": [18, 59], "bigger": [18, 33, 51, 56, 206, 212, 271], "deduc": [18, 33, 76, 81, 206, 265], "disallow": [18, 51, 192, 197, 208, 230], "goe": [18, 87, 203, 206, 215, 263, 266], "great": [18, 131, 193, 196, 209, 235], "simplest": [18, 32, 81, 87, 91, 92, 181, 182, 193, 197, 205, 208, 212, 261, 271], "is_": [18, 21, 51], "\u03c0": [18, 55, 134, 196, 215, 261, 265, 271, 272], "as_independ": [18, 51, 215], "coeff": [18, 51, 53, 81, 129, 187, 191, 192, 202, 208, 212, 214, 222, 271], "apart": [18, 25, 42, 47, 51, 55, 57, 78, 177, 184, 187, 189, 192, 195, 198, 209, 215, 222, 245, 247, 266], "subexpress": [18, 33, 51, 82, 105, 107, 191, 192, 196, 203, 207, 215, 229, 235, 252, 260], "is_even": [18, 39, 42, 43], "nonreal": [18, 214], "cosh": [18, 51, 58, 59, 70, 76, 193, 196, 197, 206, 208, 214, 267, 271], "5919532755215": 18, "_eval_is_nonneg": 18, "exercis": [18, 42, 231, 264, 271], "_eval_is_posit": 18, "iff": [18, 29, 43, 52, 81, 87, 180, 183, 191, 206, 209, 227], "as_add": [18, 51], "pi_": 18, "fuzzy_": 18, "deduct": [18, 33], "somehow": 18, "subtl": [18, 205], "nontrivi": [18, 42, 51, 91], "_eval_evalf": [18, 192], "prec": [18, 51, 61, 67, 91, 99, 181, 187, 192, 193, 208, 214], "dp": [18, 33, 51, 54, 59, 91, 186, 187, 214, 230], "53": [18, 52, 54, 87, 131, 184, 186, 187], "459697694131860": 18, "hook": [18, 92, 196], "_eval_rewrit": [18, 51], "rewritten": [18, 51, 56, 57, 59, 78, 114, 159, 203, 208, 212, 214, 271], "caller": 18, "ve": [18, 116], "nonintegr": 18, "isint": 18, "xy": [18, 31, 32, 65, 87, 111, 180, 182, 183, 189, 196, 208, 215, 250, 266, 271], "happi": 18, "demand": [18, 24], "_eval_expand_": 18, "expand_": 18, "predefin": [18, 53, 129, 186, 196, 197, 208, 215, 222, 241, 245, 253], "expand_log": [18, 33, 208], "_eval_expand_trig": 18, "sophist": [18, 92, 214], "x_1": [18, 34, 41, 42, 52, 56, 73, 87, 157, 184, 187, 189, 192, 198, 209, 215], "ldot": [18, 34, 41, 42, 50, 51, 52, 56, 59, 76, 91, 95, 167, 183, 184, 187, 189, 191, 196, 199, 203, 206, 209, 214, 217, 271], "x_k": [18, 52, 189], "_eval_deriv": [18, 51, 59], "dy": [18, 33, 53, 68, 87, 94, 104, 129, 192, 196, 209, 212, 213, 261], "dz": [18, 94, 104, 206], "argumentindexerror": 18, "linear": [18, 22, 32, 33, 43, 50, 51, 52, 54, 55, 59, 64, 71, 74, 76, 78, 80, 82, 84, 86, 94, 98, 101, 108, 109, 111, 116, 117, 118, 123, 124, 128, 129, 134, 156, 159, 160, 175, 182, 183, 187, 188, 189, 191, 192, 194, 202, 204, 206, 213, 214, 215, 234, 255, 272], "varion": 18, "middl": [18, 59, 67, 76, 87, 95, 142, 182, 206, 271], "iverson": 18, "printmethod": [18, 196], "latexprint": [18, 259], "_latex": [18, 196], "_print": [18, 196], "_m": [18, 59], "_n": [18, 52, 56, 59, 78, 206, 215], "arcversin": 18, "aversin": 18, "tupl": [18, 25, 27, 28, 31, 32, 33, 34, 42, 43, 50, 52, 53, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 73, 76, 78, 82, 87, 90, 91, 93, 94, 95, 99, 106, 109, 111, 113, 124, 125, 127, 129, 131, 146, 147, 148, 151, 156, 159, 160, 161, 162, 172, 175, 180, 182, 183, 185, 186, 187, 188, 189, 193, 194, 196, 197, 198, 202, 204, 208, 209, 212, 213, 214, 215, 216, 217, 221, 222, 227, 228, 229, 230, 234, 235, 237, 241, 244, 261, 266, 267, 270], "im": [18, 30, 51, 58, 76, 85, 183, 196, 197, 204, 212, 267], "sinh": [18, 31, 51, 55, 58, 59, 70, 76, 193, 196, 197, 206, 271], "expand_complex": 18, "analog": [18, 44, 50, 52, 56, 127, 179, 180, 183, 184, 185, 189, 201, 217, 234], "vers": 18, "geometr": [18, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 87, 131, 180, 183, 190, 216, 258, 267], "angl": [18, 25, 57, 59, 60, 61, 62, 64, 65, 66, 67, 97, 103, 108, 113, 114, 116, 117, 118, 126, 131, 134, 135, 136, 159, 167, 172, 179, 180, 181, 196, 205, 215, 241, 242, 245, 271], "horizont": [18, 32, 61, 64, 66, 82, 97, 134, 182, 185, 196], "distanc": [18, 32, 35, 43, 61, 64, 65, 66, 67, 94, 95, 104, 105, 108, 117, 118, 131, 135, 165, 175, 177, 249], "rightmost": [18, 162], "scientificamerican": 18, "uniti": [18, 57, 59, 76, 157, 191], "secret": [18, 52], "teacher": 18, "taught": [18, 78], "nr": 18, "sake": [18, 56, 209], "simplic": [18, 206, 208, 212, 214], "divisor": [18, 29, 42, 51, 52, 87, 91, 183, 184, 186, 187, 189, 190, 191, 192, 195], "hardwar": [18, 33], "round": [18, 31, 33, 51, 55, 56, 57, 87, 135, 191, 192, 203, 205, 216], "contrast": [18, 50, 51, 117, 186, 206, 212, 265], "regard": [18, 34, 52, 59, 79, 130, 162, 183, 184, 198, 214, 215], "vriabl": 18, "c99codeprint": [18, 33, 196], "cxx11codeprint": [18, 196], "cfunction": [18, 253], "e2": [18, 31, 51, 54, 61, 68, 78, 87, 91, 99, 114, 186, 191, 203, 212, 215, 216, 234], "93accumulate_oper": 18, "fused_multipli": 18, "93add": 18, "ccode": [18, 33, 196, 221, 229], "cxxcode": [18, 33, 196], "_ccode": [18, 196], "_y": [18, 127, 176, 179, 180], "_z": [18, 78, 127, 179, 180, 216], "_cxxcode": [18, 196], "std": [18, 196, 216], "28318530717959": 18, "trigonometricfunct": 18, "inversetrigonometricfunct": 18, "reciprocaltrigonometricfunct": 18, "bypass": [18, 212], "fragil": 18, "tend": [18, 24, 33, 51, 189, 191, 201, 203, 206, 264, 271], "prone": [18, 33, 51], "move": [18, 42, 43, 51, 52, 65, 67, 94, 108, 116, 117, 123, 150, 175, 179, 180, 207, 208, 217, 226, 247], "speech": 19, "beer": 19, "lightweight": [19, 33, 191, 265], "anaconda": 19, "pypi": 20, "continuum": [20, 257], "analyt": [20, 56, 59, 76, 87, 123, 212, 257, 261], "qtconsol": [20, 270], "nicer": [20, 51, 121], "setupegg": 20, "enthought": 20, "canopi": 20, "activepython": 20, "spack": 20, "freshli": 20, "starter": 20, "sy": [20, 33, 53, 114, 129, 196, 227, 238, 246, 263], "wherev": [20, 114, 208, 215, 244], "visit": [20, 35, 42, 51, 56, 268], "chat": 20, "gitter": [20, 267], "excel": [20, 55, 191, 269], "ticket": 20, "area": [21, 51, 61, 63, 67, 68, 94, 95, 248], "deeper": [21, 220, 266], "explor": [21, 124, 125, 182, 191, 231, 271], "implic": [21, 51, 81, 189], "vs": [21, 188, 196, 227], "nonlinear": [22, 50, 129, 192, 214, 215], "diophantin": [22, 91, 189, 210], "739085133215161": [22, 214], "9y": 22, "3x": [22, 51, 93, 189, 215, 263], "cc": [22, 52, 67, 181, 184, 186, 188, 192, 267], "4xy": [22, 177, 249], "8y": 22, "7y": [22, 209], "colloqui": 22, "terminolog": [22, 222], "central": [23, 42, 48, 59, 61, 67, 106, 111, 127, 182, 191, 209, 216], "task": [23, 57, 123, 129, 186, 191, 261, 268], "export": [24, 196], "latin": 24, "slightli": [24, 33, 47, 91, 93, 116, 182, 183, 187, 189, 192, 196, 206, 208], "clunki": 24, "collid": [24, 222], "win": 24, "session": [24, 33, 51, 63, 78, 176, 180, 186, 232, 259, 263, 270], "throwawai": 24, "surviv": 24, "foo": [24, 31, 33, 51, 157, 176, 234, 237], "report": [24, 31, 42, 64, 82, 91, 193, 204, 215, 227, 267, 272], "stick": 24, "clash": [24, 51, 87], "_clash1": [24, 51], "_clash2": [24, 51], "multi": [24, 51, 52, 115, 123, 129, 142, 146, 156, 182, 196, 215], "_clash": [24, 51], "union": [24, 29, 31, 33, 40, 42, 49, 81, 93, 183, 191, 196, 202, 203, 211, 215, 216, 234], "sympif": [24, 51], "real_field": 25, "instanti": [25, 32, 33, 43, 51, 59, 64, 66, 67, 84, 87, 152, 160, 172, 182, 183, 187, 191, 216, 241, 244], "q1": [25, 87, 105, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 130, 171, 172, 174, 175, 176, 179, 180, 186, 241, 242], "q2": [25, 105, 114, 116, 117, 118, 120, 121, 122, 124, 125, 130, 171, 172, 174, 175, 176, 179, 180, 186, 241, 242], "r1": [25, 61, 64, 80, 94, 95, 135, 172, 177, 192, 241], "euclideanspac": 25, "realnormedalgebra": 25, "r2": [25, 53, 64, 80, 82, 94, 95, 135, 172, 192, 196, 208, 241], "q3": [25, 105, 116, 118, 120, 121, 122, 124, 172, 174, 175, 180, 241, 242], "axi": [25, 44, 56, 57, 61, 62, 64, 65, 67, 73, 76, 78, 84, 87, 94, 99, 104, 108, 114, 116, 117, 120, 121, 122, 126, 129, 130, 131, 134, 135, 159, 172, 174, 175, 177, 179, 180, 182, 187, 215, 241, 242, 245, 247, 250], "bi": [25, 51, 57, 59, 78, 180, 203, 212], "cj": 25, "dk": [25, 94, 191], "atan2": [25, 30, 53, 58, 136, 196, 241], "atan": [25, 30, 53, 55, 58, 62, 67, 75, 78, 117, 130, 131, 193, 196, 198], "arc_coplanar": 25, "arc": [25, 57, 271], "orient": [25, 63, 67, 82, 114, 116, 117, 120, 127, 129, 172, 175, 177, 179, 180, 189, 234, 241, 248, 249], "coplanar": [25, 65, 180], "ax": [25, 52, 55, 61, 64, 76, 83, 87, 94, 99, 108, 134, 159, 172, 180, 181, 182, 185, 193, 209, 212, 215, 217, 218, 221, 241, 242, 244, 247, 249, 271], "parallel": [25, 61, 64, 65, 67, 78, 98, 101, 104, 179, 180, 189, 246, 250], "vector_coplanar": 25, "is_pur": 25, "mathbf": [25, 84, 123, 124, 125, 127, 167, 171, 172, 176, 177, 179, 180, 196, 206, 217, 244, 245, 247, 249, 250], "versor": 25, "0i": 25, "0j": [25, 186], "0k": 25, "vector_part": 25, "from_axis_angl": 25, "rotat": [25, 39, 42, 44, 51, 60, 61, 62, 64, 66, 67, 82, 87, 94, 95, 108, 116, 118, 120, 122, 127, 130, 146, 159, 172, 175, 177, 179, 180, 181, 182, 234, 241, 242, 245, 247, 249], "radian": [25, 57, 60, 61, 62, 64, 65, 66, 87, 99, 114, 135, 136, 172], "from_rotation_matrix": 25, "orthogon": [25, 28, 58, 66, 80, 87, 160, 172, 180, 188, 241, 242, 248], "det": [25, 87, 88, 129, 180, 185, 267], "index_vector": 25, "mod": [25, 52, 57, 81, 87, 88, 91, 158, 183, 185, 186, 187, 189, 191, 192, 196, 198, 206, 209, 252], "magnitud": [25, 33, 50, 51, 55, 59, 92, 94, 95, 97, 99, 117, 129, 160, 169, 172, 177, 180, 182, 241, 247, 249], "norm": [25, 87, 160, 172, 187, 189, 191, 192], "indefinit": [25, 57, 75, 76, 78, 87, 187, 189, 190, 192, 201, 261], "scalar_part": 25, "is_zero_quaternion": 25, "mensor": 25, "60": [25, 37, 42, 44, 50, 51, 56, 59, 78, 87, 91, 94, 95, 195, 196, 209, 212, 234], "anti": [25, 29, 47, 57, 78, 82, 134, 139, 222], "pth": 25, "668": 25, "224": [25, 165, 190], "336": 25, "448": 25, "pow_cos_sin": 25, "900": 25, "1800": [25, 52], "2700": [25, 94], "3600": [25, 56], "rotate_point": 25, "pin": [25, 94, 95, 97, 108], "to_axis_angl": 25, "to_rotation_matrix": 25, "assumptionkei": 26, "proposit": [26, 28, 81], "is_tru": [26, 28, 29], "assumptionscontext": [26, 27, 28], "global_assumpt": [26, 27, 28], "discern": [26, 28], "refin": [26, 28, 51, 82, 183, 187, 191, 192, 208, 229], "progress": [26, 28, 91, 229], "inherit": [26, 51, 58, 81, 84, 85, 108, 151, 160, 181, 196, 216, 221, 229, 230], "askhandl": 26, "mere": [27, 28, 33, 55, 157], "thin": [27, 87, 119, 131], "dispatch": [27, 28, 29, 51, 52, 157, 196, 215, 231], "undefinedpred": [27, 28], "sexi": [27, 28], "sexyprimepred": [27, 28], "sexyprim": [27, 28], "int1": [27, 28], "int2": [27, 28], "sort": [27, 28, 32, 33, 40, 43, 47, 76, 78, 81, 87, 90, 91, 102, 105, 109, 146, 162, 167, 171, 182, 189, 192, 193, 203, 208, 209, 212, 213, 214, 220, 222, 227, 229, 234, 244, 252, 263, 265, 266], "assump": [27, 28], "r3": [27, 80, 94, 95, 208], "predicate_": [27, 28], "mathematical_log": [27, 28], "r4": [27, 80, 94], "sexy_prim": [27, 28], "resolut": [27, 28, 209], "askpredicatehandl": [27, 28], "r5": [28, 208], "r6": 28, "tautolog": 28, "calculu": [28, 51, 56, 78, 87, 129, 177, 178, 205, 216, 246, 247, 248, 251, 252, 262, 264, 269], "symmetr": [28, 30, 34, 39, 42, 43, 47, 67, 82, 83, 84, 87, 91, 171, 181, 187, 189, 192, 195, 204, 206, 222, 234], "unitari": [28, 78, 91, 146, 151], "triangular": [28, 82, 83, 87, 185, 191, 214, 216, 250], "diagon": [28, 56, 82, 83, 84, 87, 90, 113, 134, 185, 218, 219], "rank": [28, 33, 34, 35, 40, 42, 43, 45, 46, 47, 66, 80, 87, 88, 172, 174, 183, 185, 187, 189, 191, 217, 221, 222, 267], "singular": [28, 33, 43, 51, 55, 57, 58, 73, 74, 76, 78, 87, 94, 96, 126, 172, 183, 190, 203, 212, 215, 241, 252, 261], "notabl": [28, 33, 54, 59, 76, 92, 186], "truth_maintenance_system": 28, "istruepred": 29, "gt": [29, 33, 216, 234], "istruehandl": 29, "commutativepred": 29, "commutativehandl": 29, "finitepred": 29, "nor": [29, 31, 51, 81, 91, 136, 182, 192, 203, 205, 212, 222, 241], "nan": [29, 30, 57, 59, 107, 208, 216, 261], "bound": [29, 33, 34, 50, 51, 60, 61, 62, 64, 66, 67, 78, 91, 160, 187, 189, 191, 192, 196, 202, 212, 214, 215, 216, 221, 231, 237, 241], "finitehandl": 29, "r7": 29, "infinitepred": 29, "infinitehandl": 29, "symmetricpred": 29, "transpos": [29, 32, 82, 84, 87, 101, 129, 145, 172, 180, 185, 191, 209, 217, 222, 223, 267], "symmetrichandl": 29, "r8": 29, "symmetric_matrix": 29, "invertiblepred": 29, "fullrank": [29, 33], "invertiblehandl": 29, "r9": 29, "invertible_matrix": 29, "orthogonalpred": 29, "tm": [29, 135], "mm": [29, 32, 91, 109, 116, 120, 121, 160, 185], "orthogonalhandl": 29, "r10": 29, "orthogonal_matrix": 29, "unitarypred": 29, "unitaryhandl": 29, "r11": 29, "unitary_matrix": 29, "positivedefinitepred": 29, "tmz": 29, "column": [29, 32, 33, 34, 79, 81, 82, 84, 87, 88, 90, 101, 109, 113, 116, 127, 157, 164, 172, 176, 181, 185, 191, 196, 212, 215, 221, 241], "positive_definit": 29, "positivedefinitehandl": 29, "r12": 29, "definite_matrix": 29, "uppertriangularpred": 29, "m_": [29, 125, 189], "ij": [29, 162, 167, 216], "zeromatrix": [29, 84], "upper_triangular": [29, 82], "uppertriangularhandl": 29, "r13": 29, "uppertriangularmatrix": 29, "lowertriangularpred": 29, "lower_triangular": [29, 82], "lowertriangularhandl": 29, "r14": 29, "lowertriangularmatrix": 29, "diagonalpred": 29, "diagonalhandl": 29, "r15": 29, "diagonal_matrix": 29, "fullrankpred": 29, "row": [29, 32, 33, 34, 40, 43, 51, 56, 82, 83, 84, 87, 88, 90, 91, 101, 113, 114, 116, 127, 129, 130, 157, 172, 180, 185, 191, 196, 206, 215, 216, 221, 235, 241, 242], "linearli": [29, 33, 59, 75, 87, 189, 212, 214, 222], "fullrankhandl": 29, "squarepred": 29, "squarehandl": 29, "r16": 29, "square_matrix": 29, "integerelementspred": 29, "integer_el": 29, "integerelementshandl": 29, "realelementspred": 29, "real_el": 29, "realelementshandl": 29, "complexelementspred": 29, "complex_el": 29, "complexelementshandl": 29, "singularpred": 29, "singularhandl": 29, "fore": 29, "r17": 29, "singularmatrix": 29, "normalpred": 29, "normalhandl": 29, "r18": 29, "normal_matrix": 29, "triangularpred": 29, "triangularhandl": 29, "r19": 29, "triangular_matrix": 29, "unittriangularpred": 29, "1s": [29, 56, 80, 185], "unit_triangular": 29, "unittriangularhandl": 29, "evenpred": 29, "evenhandl": 29, "oddpred": 29, "oddhandl": 29, "primehandl": 29, "subject": [29, 61, 67, 95, 105, 130, 191], "compositepred": 29, "compositehandl": 29, "positivepred": 29, "interv": [29, 31, 42, 51, 55, 57, 59, 60, 61, 64, 67, 76, 78, 81, 91, 148, 157, 187, 189, 191, 192, 199, 202, 211, 215, 216, 258, 272], "positivehandl": 29, "negativepred": 29, "negativehandl": 29, "zeropred": 29, "zerohandl": 29, "nonzeropred": 29, "nonzerohandl": 29, "nonpositivepred": 29, "nonpositivehandl": 29, "nonnegativepred": 29, "nonnegativehandl": 29, "integerpred": 29, "integerhandl": 29, "r20": 29, "rationalpred": 29, "rationalhandl": 29, "r21": 29, "irrationalpred": 29, "ratio": [29, 41, 42, 50, 51, 55, 56, 59, 61, 64, 65, 66, 67, 83, 91, 101, 135, 167, 196, 205, 208, 214], "irrationalhandl": 29, "r22": 29, "realpred": 29, "disjoint": [29, 32, 40, 43, 192, 204, 234], "realhandl": 29, "r23": 29, "extendedrealpred": 29, "extendedrealhandl": 29, "hermitianpred": 29, "hermitianhandl": 29, "r24": 29, "hermitianoper": [29, 151], "complexpred": 29, "complexhandl": 29, "r25": 29, "imaginarypred": 29, "imaginaryhandl": 29, "r26": 29, "antihermitianpred": 29, "antihermitianhandl": 29, "r27": 29, "algebraicpred": 29, "askalgebraicpredicatehandl": 29, "r28": 29, "algebraichandl": 29, "transcendentalpred": 29, "transcedent": 29, "refine_pow": 30, "refine_ab": 30, "refine_arg": 30, "refine_atan2": 30, "refine_im": 30, "refine_matrixel": 30, "refine_r": 30, "refine_sign": 30, "lagrang": [31, 51, 119, 123, 192, 209], "lagrangian": [31, 109, 117, 122, 123, 125, 126], "euler_equ": 31, "r29": 31, "iter": [31, 33, 40, 42, 43, 46, 47, 51, 52, 53, 54, 56, 59, 67, 81, 91, 106, 107, 109, 110, 113, 126, 130, 147, 162, 175, 182, 183, 184, 185, 187, 189, 192, 196, 197, 198, 199, 202, 208, 209, 212, 214, 215, 216, 217, 220, 228, 229, 230, 231, 233, 235, 241, 245, 259], "eqn": [31, 215], "93lagrange_equ": 31, "decreas": [31, 33, 43, 189], "monoton": [31, 33, 68], "is_decreas": 31, "lopen": [31, 51, 204, 211, 216], "ropen": [31, 57, 204, 216], "is_increas": 31, "72": [31, 51, 64, 87, 91, 94, 181, 195], "is_monoton": 31, "is_strictly_decreas": 31, "is_strictly_increas": 31, "monotonicity_help": 31, "held": [31, 52, 126, 220, 271], "univari": [31, 50, 51, 57, 74, 78, 183, 184, 186, 187, 188, 190, 191, 192, 193, 198, 211, 214, 216], "r30": 31, "mathematical_singular": 31, "interpol": [31, 60, 129, 189, 192], "finite_diff_weight": [31, 51, 261], "estim": [31, 50, 51, 55, 76, 261], "apply_finite_diff": [31, 51, 261], "differentiate_finit": [31, 51, 261], "finite_diff": [31, 51], "x_list": [31, 261], "y_list": [31, 261], "cube": [31, 33, 35, 42, 44, 57, 78, 189, 190, 209, 215, 250], "xlist": 31, "55271367880050e": 31, "indexedbas": [31, 33, 50, 51, 196, 214, 220, 221, 228], "idx": [31, 33, 196, 220, 221, 228], "zip": [31, 41, 52, 81, 91, 192, 202, 209, 212, 231, 234], "extract": [31, 51, 78, 82, 84, 87, 91, 102, 116, 123, 171, 180, 189, 191, 192, 214, 215, 216, 227, 229, 234], "region": [31, 59, 68, 78, 182, 204, 212, 215, 216, 241, 243, 250], "bewar": [31, 59], "rung": [31, 73], "phenomenon": [31, 167, 189, 199, 266], "90": [31, 42, 49, 59, 82, 87, 93, 94, 97, 105, 114, 130, 196, 198, 208, 216, 229], "finitediff": 31, "wrt": [31, 33, 51, 53, 59, 68, 87, 114, 129, 172, 173, 189, 192, 241, 242, 243, 247], "arbitrarili": [31, 51, 64, 91, 189, 191, 203, 206, 212, 213, 216], "len": [31, 39, 40, 41, 42, 43, 47, 49, 51, 52, 56, 59, 66, 76, 81, 117, 131, 135, 146, 156, 192, 208, 212, 221, 234], "nearest": [31, 191], "furthest": [31, 52], "sublist": [31, 47, 52, 78, 159, 261], "fd": [31, 33, 162], "0th": [31, 43, 52, 59], "1st": [31, 43, 91, 101, 212, 213, 237, 261], "classic": [31, 57, 59, 87, 148, 164, 172, 180, 183, 257], "forward": [31, 33, 82, 101, 116, 123, 155, 179, 208, 227], "pai": 31, "attent": [31, 42, 57], "gridpoint": 31, "plan": [31, 105, 187, 210, 270], "mycoeff": 31, "3rd": [31, 43, 57, 91, 129, 192, 214, 217, 234], "2nd": [31, 43, 52, 91, 101, 129, 212, 217, 234], "cost": [31, 33, 91, 117, 215, 265], "yield": [31, 33, 42, 51, 52, 59, 75, 76, 91, 94, 101, 107, 156, 184, 189, 191, 192, 197, 198, 203, 204, 205, 208, 209, 214, 231, 234, 267], "poorer": 31, "grand": 31, "r31": 31, "51": [31, 87, 91], "184": [31, 212], "1988": [31, 141, 159, 189, 190], "699": 31, "706": [31, 87], "1090": [31, 192], "s0025": [31, 91], "5718": [31, 91], "0935077": 31, "continuous_domain": [31, 211], "tan": [31, 51, 56, 58, 78, 93, 107, 120, 121, 122, 126, 193, 195, 196, 203, 205, 212, 215, 271], "function_rang": 31, "OR": [31, 54, 81, 189], "critic": [31, 135, 179, 191, 215], "is_convex": [31, 67], "sym": [31, 41, 42, 47, 51, 56, 172, 196, 199, 204, 208, 209, 214, 216, 222, 234, 271], "convex": [31, 67, 68, 78], "unspecifi": [31, 51, 66, 261], "multivari": [31, 51, 59, 183, 184, 186, 187, 188, 190, 192, 193, 203, 208, 214, 215, 216, 271], "concav": [31, 131], "logartihm": 31, "r32": 31, "convex_funct": 31, "r33": 31, "ifp": 31, "illinoi": 31, "edu": [31, 35, 42, 43, 52, 54, 56, 78, 87, 91, 190, 195, 205, 208, 209, 212, 216, 241], "angelia": 31, "l3_convfunc": 31, "r34": 31, "logarithmically_convex_funct": 31, "r35": 31, "logarithmically_concave_funct": 31, "r36": 31, "concave_funct": 31, "lcim": 31, "mixtur": [31, 33, 68, 183, 229], "incommensur": 31, "not_empty_in": [31, 215], "finset_intersect": 31, "finite_set": [31, 204], "tracker": [31, 204, 215, 267], "aperiod": 31, "smallest": [31, 45, 57, 64, 66, 73, 81, 87, 91, 159, 172, 187, 232, 234], "verif": [31, 185, 214], "reliabl": [31, 51, 212, 232, 261], "henc": [31, 33, 41, 42, 51, 53, 57, 59, 63, 76, 79, 81, 91, 177, 182, 183, 184, 189, 196, 206, 209, 213, 215, 227, 231, 245, 246, 247, 266, 271], "stationary_point": 31, "stationari": [31, 216], "tikz": 32, "joyofcat": 32, "adamek": 32, "herrlich": 32, "strecker": 32, "joi": 32, "cat": [32, 171], "book": [32, 42, 52, 57, 109, 114, 127, 128, 147, 190, 195, 196, 264], "katmat": 32, "uni": [32, 78, 234], "bremen": 32, "de": [32, 52, 91, 167, 181, 182, 193, 198, 209, 210, 212, 234], "acc": [32, 129, 175, 179], "pre": [32, 33, 51, 181, 182, 197, 205, 208, 214, 215, 227, 245, 249, 266], "embryon": 32, "morphism": [32, 183], "codomain": [32, 183, 191], "arrow": [32, 80, 94, 182, 196], "namedmorph": 32, "prohibit": [32, 43, 44, 172], "identitymorph": 32, "compositemorph": 32, "compos": [32, 51, 52, 117, 126, 164, 166, 167, 179, 183, 187, 191, 192, 193, 196, 198, 208], "circ": [32, 51, 62, 68, 76, 84], "compon": [32, 33, 47, 51, 53, 66, 78, 84, 87, 102, 111, 123, 127, 134, 159, 164, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 194, 216, 218, 221, 222, 231, 234, 241, 243, 246, 247], "new_nam": 32, "forget": [32, 271], "act": [32, 41, 42, 43, 47, 51, 59, 67, 80, 81, 87, 94, 97, 106, 108, 113, 114, 118, 125, 134, 146, 151, 154, 155, 204, 215, 217, 245, 249, 260], "id_a": 32, "id_b": 32, "commutative_diagram": 32, "quadrupl": [32, 192], "mbox": 32, "hom": 32, "id": [32, 47, 57], "rightarrow": [32, 43, 47, 52, 56, 57, 59, 73, 74, 76, 78, 81, 82, 91, 182, 191, 203, 215, 234, 261], "law": [32, 123, 165, 180, 184], "monoid": 32, "pare1970": 32, "accompani": 32, "premis": 32, "conclus": [32, 51], "carri": [32, 33, 51, 154, 160, 167, 183, 186, 189, 191, 193, 194, 235], "premises_kei": 32, "et": [32, 78, 141, 189, 192, 193, 205, 208], "pareigi": 32, "functor": 32, "1970": [32, 87], "is_subdiagram": 32, "subdiagram": 32, "d1": [32, 47, 172, 183, 203, 216, 241], "subdiagram_from_object": 32, "preserv": [32, 33, 42, 51, 87, 160, 187, 192, 197, 198, 208], "veryuniqu": 32, "diagram_draw": 32, "diagramgrid": 32, "analys": [32, 99, 101, 129, 216], "drawn": [32, 42, 80, 182, 186, 194], "moprhism": 32, "strive": 32, "nevertheless": 32, "laid": [32, 114, 159], "width": [32, 33, 79, 176, 182, 192, 196, 227], "height": [32, 33, 67, 84, 131, 182, 183, 196, 203, 250], "emploi": [32, 50, 55, 78, 91, 192, 195, 210, 212, 216], "lai": 32, "layout": 32, "sequenti": [32, 35, 52, 57, 241, 242], "test_draw": 32, "five": [32, 40, 76, 97, 196, 209], "lemma": [32, 42, 76, 184], "fivelemma": 32, "five_lemma": 32, "arrowstringdescript": 32, "curving_amount": 32, "looping_start": 32, "looping_end": 32, "horizontal_direct": 32, "vertical_direct": 32, "label_posit": 32, "pic": 32, "princip": [32, 52, 57, 59, 76, 78, 88, 103, 116, 135, 183, 184, 185, 186, 187, 189, 191, 192, 193], "offset": [32, 33, 51, 56, 59, 221], "cell": 32, "vertic": [32, 35, 44, 45, 61, 62, 64, 66, 67, 68, 78, 80, 82, 87, 95, 113, 118, 134, 142, 181, 182, 185, 191, 196, 204, 234, 250], "disregard": 32, "unexplain": 32, "astr": 32, "dr": [32, 53, 196, 212], "12mm": 32, "loop": [32, 33, 91, 101, 172, 182, 193, 196, 212, 231, 234, 266], "correspondingli": 32, "label_displac": 32, "arrow_styl": 32, "dash": 32, "xypicdiagramdraw": 32, "formatt": 32, "utilis": 32, "xypic": 32, "drawer": 32, "xymatrix": 32, "ld": 32, "arrow_formatt": 32, "therebi": 32, "default_arrow_formatt": 32, "farther": 32, "centr": [32, 48, 182], "default_formatt": 32, "45": [32, 51, 56, 67, 87, 91, 97, 192, 193, 209], "_3mm": 32, "default_curving_amount": 32, "cm": [32, 129, 216], "_1cm": 32, "default_curving_step": 32, "h1": [32, 111], "1cm": 32, "rr": [32, 51, 69, 185, 186, 188, 192, 193], "h_": [32, 42, 47, 59, 78], "_2cm": 32, "mask": [32, 196], "diagram_format": 32, "proceed": [32, 34, 76, 78, 128, 190, 206], "xypic_draw_diagram": 32, "shortcut": [32, 51, 83, 180, 196, 204, 208, 271], "insert": [32, 34, 82, 93, 94, 157, 162, 196, 216, 237], "preview_diagram": 32, "png": [32, 79, 87, 94, 95, 99, 176, 182, 196, 199], "varieti": [33, 34, 43, 51, 92, 95, 127, 183, 190, 192, 216, 234], "brief": [33, 215, 227, 249], "fab": [33, 196], "cse_main": [33, 197, 208], "cse": [33, 92, 105, 151, 197, 229, 235], "meat": 33, "pycod": [33, 196], "lambdarepr": [33, 196, 235], "aesara_funct": [33, 92, 196], "float80": [33, 196], "assign_to": [33, 196], "type_alias": [33, 196], "0l": [33, 196], "powl": [33, 196], "c99": [33, 196, 229], "expm1": [33, 196], "ternari": [33, 51, 196, 209], "lack": [33, 53, 55, 111, 196, 261], "thrown": [33, 196], "fcode": [33, 196], "contract": [33, 53, 102, 162, 196, 205, 218, 219, 220, 221, 222, 223], "len_i": [33, 196], "mat_1": 33, "mat_2": 33, "jscode": [33, 196], "rh": [33, 41, 43, 51, 82, 83, 87, 109, 114, 120, 121, 122, 185, 194, 196, 198, 212, 214, 215, 246], "user_funct": [33, 196], "argument_test": [33, 196], "cfunction_str": [33, 196], "octav": [33, 129, 229, 259], "custom_funct": [33, 196], "existing_octave_fcn": [33, 196], "is_matrix": [33, 196], "my_mat_fcn": [33, 196], "my_fcn": [33, 196], "mat": [33, 84, 131, 156, 196], "octave_cod": [33, 196], "summat": [33, 50, 51, 55, 56, 59, 162, 190, 196, 199, 208, 216, 217, 220, 221, 222, 228], "mathematica_cod": [33, 196], "g1": [33, 36, 41, 42, 76, 87, 101], "g2": [33, 36, 41, 42, 76, 80, 87, 101], "gamma_1": [33, 104], "gamma_2": [33, 104], "\u03b3\u2081": 33, "\u03b3\u2082": 33, "\u03b2": [33, 181], "h_i": [33, 47], "c89": [33, 196, 229], "julia_cod": [33, 196], "rust_cod": [33, 196], "powi": [33, 196], "make_routin": [33, 229], "f95": [33, 228, 229], "matlab": [33, 105, 129, 229, 259, 267], "breadth": [33, 51, 216], "c_name": [33, 229], "c_code": [33, 229], "h_name": [33, 229], "c_header": [33, 229], "volume_result": 33, "ifndef": [33, 229], "project__test__h": [33, 229], "endif": [33, 229], "preprocessor": [33, 197, 208, 229], "global_var": [33, 229], "insensit": [33, 87, 129, 196, 227, 229], "argument_sequ": [33, 229], "routin": [33, 40, 50, 51, 52, 53, 76, 81, 82, 87, 91, 134, 162, 185, 189, 192, 195, 196, 197, 208, 209, 212, 213, 214, 215, 228, 233, 234, 247], "name_expr": [33, 229], "to_fil": [33, 229], "f_name": [33, 229], "f_code": [33, 229], "choic": [33, 43, 59, 76, 78, 92, 126, 158, 167, 171, 172, 179, 187, 189, 192, 196, 208, 212, 234, 265], "hydrogen": [33, 257], "r_nl": [33, 103, 163], "my_routin": 33, "result_var": [33, 229], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 33, "__________": [33, 184], "\u212f": [33, 134, 181, 196, 261, 265, 267, 271, 272], "assoc_laguerr": [33, 59, 196], "fcn": [33, 229], "result_5397460570204848505": [33, 229], "out_8598435338387848786": [33, 229], "examin": [33, 52, 151, 227, 229, 271], "inputargu": [33, 229], "outputargu": [33, 229], "inoutargu": [33, 229], "disk": [33, 52, 204, 215, 235], "binary_funct": [33, 92, 228], "tensor": [33, 38, 53, 58, 87, 102, 111, 127, 141, 147, 148, 149, 159, 162, 171, 172, 196, 217, 218, 220, 221, 228, 235, 244, 245, 251, 255], "binary_func": [33, 228], "servic": [33, 216], "tempdir": [33, 228], "qho_1d": [33, 138], "psi_n": [33, 138], "y_": [33, 59, 76, 103, 181], "qho": 33, "tmp": 33, "reveal": [33, 91, 215, 266], "subroutin": [33, 42, 158, 189], "autofunc": 33, "dimens": [33, 35, 52, 53, 59, 60, 62, 64, 65, 66, 68, 80, 82, 84, 87, 90, 94, 102, 117, 136, 146, 148, 151, 156, 165, 166, 169, 170, 172, 182, 185, 196, 209, 212, 214, 216, 217, 221, 222, 229, 241, 243, 245, 257], "hbar": [33, 138, 144, 157, 163, 167, 169, 181], "05457162d": 33, "14159265358979d0": 33, "0d0": [33, 196], "74126166983329d": 33, "33": [33, 51, 54, 87, 127, 135, 189, 193, 196, 216], "verbos": [33, 51, 82, 91, 196, 227, 228, 270], "mute": [33, 228], "backend": [33, 79, 92, 93, 99, 118, 176, 193, 228, 235, 258], "auxiliari": [33, 78, 109, 114, 124, 212, 228], "function_nam": [33, 228], "sympy_express": [33, 228], "mandatori": [33, 196, 228], "illustr": [33, 87, 115, 117, 167, 186, 199, 203], "psi_nl": 33, "766": 33, "incur": [33, 92], "get_numpy_arrai": 33, "tight": 33, "temp": [33, 116], "alloc": [33, 57], "walk": [33, 35, 154, 157, 206], "memori": [33, 51, 91, 192, 217, 228, 231], "fuse": 33, "wise": [33, 34, 57, 82, 185, 189, 196, 202, 228], "unabl": [33, 64, 68, 93, 214, 241, 260, 261], "fortun": [33, 92, 117, 192, 193], "reconnect": 33, "autom": [33, 57, 92, 205, 228, 265], "ideolog": [33, 215], "fashion": [33, 51, 84, 116, 124, 125, 127, 180, 183, 234], "broadcast": [33, 92, 196, 221, 228], "outperform": 33, "jensen": 33, "quantit": [33, 164], "leverag": [33, 92, 196], "ufunc": [33, 92, 228, 235], "fn_numpi": 33, "fn_fortran": 33, "linspac": [33, 74, 92, 114, 129], "xx": [33, 87, 111, 180, 234], "21306132": 33, "98101184": 33, "44626032": 33, "timeit": [33, 193], "10000": [33, 55, 91, 92, 94, 214], "18891601900395472": 33, "004707066000264604": 33, "facil": 33, "comparison": [33, 50, 51, 81, 87, 114, 183, 191, 195, 214, 227, 234], "thereof": [33, 51, 183, 189, 191], "optims_c99": 33, "log1p": [33, 196], "expm1_opt": 33, "log1p_opt": 33, "exp2_opt": 33, "log2_opt": 33, "log2const_opt": 33, "funcminusoneoptim": 33, "func_m_1": 33, "opportunist": 33, "replaceoptim": 33, "toward": [33, 51, 59, 183, 203, 215], "catastroph": 33, "smaller": [33, 42, 43, 51, 52, 59, 67, 78, 84, 91, 124, 184, 186, 189, 192, 199, 205, 206, 214, 234, 260, 271], "replace_in_add": 33, "cost_funct": 33, "prioriti": [33, 74, 105, 114, 180, 235], "__call__": [33, 43, 51, 191], "exp2": [33, 196], "create_expand_pow_optim": 33, "base_req": 33, "is_symbol": [33, 82], "expand_opt": 33, "opt2": 33, "is_funct": 33, "log2": [33, 196], "matin_opt": 33, "matinv_opt": 33, "matrixsolv": [33, 196], "matrix_nod": 33, "numpyprint": 33, "doprint": [33, 196], "linalg": 33, "seriesapprox": 33, "reltol": 33, "max_ord": 33, "n_point_check": 33, "threshold": [33, 91], "largest": [33, 43, 45, 51, 57, 59, 87, 90, 91, 142, 183, 187, 214, 234], "series_approx2": 33, "1e": [33, 51, 55, 87, 99, 131, 192, 214], "series_approx3": 33, "series_approx8": 33, "sumapprox": 33, "neglect": 33, "2000": [33, 37, 78, 91, 190], "sum_approx3": 33, "sum_approx2": 33, "sum_approx1": 33, "token": [33, 76, 79, 93], "diagram": [33, 40, 80, 94, 117, 118, 123, 142, 221, 245, 258, 266], "codegenast": 33, "assignmentbas": 33, "augmentedassign": 33, "addaugmentedassign": 33, "subaugmentedassign": 33, "mulaugmentedassign": 33, "divaugmentedassign": 33, "modaugmentedassign": 33, "codeblock": [33, 93], "quotedstr": 33, "intbasetyp": 33, "_sizedinttyp": 33, "signedinttyp": 33, "unsignedinttyp": 33, "floatbasetyp": 33, "floattyp": 33, "complexbasetyp": 33, "complextyp": 33, "pointer": [33, 229, 230], "functionprototyp": 33, "functiondefinit": [33, 93], "stream": [33, 52, 197, 208, 234], "functioncal": 33, "breaktoken": 33, "continuetoken": 33, "nonetoken": 33, "float32": [33, 92, 93, 235], "float64": [33, 92, 216], "codeprint": 33, "underli": [33, 43, 49, 51, 80, 87, 99, 114, 157, 170, 214, 215, 216], "complex_": 33, "bool_": 33, "intc": [33, 93], "intp": 33, "unsign": [33, 56, 208], "int8": 33, "int16": 33, "int32": 33, "int64": [33, 216], "uint8": 33, "uint16": 33, "uint32": 33, "uint64": 33, "x86": 33, "amd64": 33, "complex64": 33, "complex128": 33, "newton": [33, 59, 123, 165, 169, 189, 193], "aug_assign": 33, "tol": [33, 51, 187], "val": [33, 51, 63, 187, 191, 235], "whl": 33, "py_str": 33, "inf": [33, 43, 51, 87, 187, 192, 204, 212, 216], "exec": [33, 51, 79, 235], "1121416371": 33, "909672693737": 33, "867263818209": 33, "865477135298": 33, "865474033111": 33, "1g": 33, "3e": 33, "2003": [33, 181, 190, 196, 209], "source_format": [33, 196], "align": [33, 61, 87, 108, 180, 181, 196, 227], "op": [33, 51, 87, 151, 162, 175, 179, 205, 234, 235], "parametr": [33, 59, 60, 64, 87, 182, 209, 215, 241, 243, 250], "volatil": 33, "binop": 33, "exit": [33, 91, 227], "premad": 33, "break_": 33, "lift": [33, 47, 57, 59, 76, 187, 189, 192], "left_hand_sid": 33, "topological_sort": [33, 234], "postprocess": [33, 192, 197, 208], "topolog": [33, 51, 53, 76, 185, 204, 234], "continue_": 33, "untyp": 33, "compliant": 33, "ok": [33, 43, 196, 212], "elem": [33, 42, 183], "ijk": [33, 221], "stride": [33, 221], "lmn": 33, "cast_nocheck": 33, "alia": [33, 44, 51, 61, 67, 82, 83, 85, 89, 146, 155, 162, 183, 186, 187, 191, 195, 204, 227, 237, 271], "nbit": 33, "storag": [33, 51, 87, 156, 181, 189], "nmant": 33, "mantissa": 33, "nexp": 33, "half_precis": 33, "f16": 33, "65504": 33, "tini": [33, 51], "ep": [33, 42, 50, 187, 191, 192], "decimal_dig": 33, "cast_check": 33, "1e5": 33, "cast": [33, 84, 263], "subnorm": [33, 42], "loss": [33, 76, 162, 228, 246], "idempot": 33, "loos": [33, 51, 207], "overflow": [33, 231], "max_expon": 33, "min_expon": 33, "for_i": 33, "for_ji": 33, "for_kji": 33, "function_arg": [33, 227], "fcall": 33, "bar": [33, 59, 151, 157, 237], "baz": 33, "return_typ": 33, "fp": [33, 34, 51, 192, 198], "from_functionprototyp": 33, "prototyp": [33, 92, 229], "value_const": 33, "pointer_const": 33, "attr_param": 33, "looking_for": 33, "as_declar": 33, "formatstr": 33, "5g": 33, "stdout": [33, 227], "stderr": 33, "atom": [33, 43, 78, 81, 82, 103, 163, 186, 193, 196, 214, 215, 221], "oppos": [33, 235, 261], "_field": 33, "_construct_": 33, "not_in_arg": 33, "exclud": [33, 50, 51, 78, 87, 107, 129, 184, 187, 189, 192, 202, 212, 214, 227, 230, 234], "float16": 33, "inttyp": 33, "super": [33, 59, 187, 196, 241, 242], "from_expr": [33, 192], "toler": [33, 51, 55, 187, 208, 214], "42": [33, 40, 51, 54, 56, 64, 65, 67, 82, 83, 85, 87, 89, 91, 187, 209, 227], "v6": 33, "123456": [33, 51, 91], "v10": 33, "12345": [33, 55], "67894": 33, "boost_mp50": 33, "boost": 33, "multiprecis": [33, 186], "cpp_dec_float_50": 33, "r37": 33, "rtol": 33, "atol": 33, "precision_target": 33, "256": [33, 42, 91, 192, 196], "v18": 33, "123456789012345646": 33, "123456789012345649": 33, "Will": [33, 87, 93, 191, 196, 227], "decl1": 33, "decl2": 33, "alt": 33, "secondarili": [33, 192], "mathcin": 33, "cbrt": [33, 58, 196], "minu": [33, 50, 51, 177, 189, 196, 247], "0e": [33, 51], "fma": [33, 196], "cpu": [33, 92, 129], "hypot": [33, 196], "hypotenus": [33, 67], "log10": [33, 196], "ten": [33, 92], "plu": [33, 50, 87, 93, 129, 142, 196, 206, 235], "famili": [33, 35, 69, 78, 184], "commaoper": 33, "goto": 33, "preincrement": 33, "postdecr": 33, "decrement": [33, 207, 231], "postincr": 33, "increment": [33, 42, 43, 44, 50, 67, 91, 207, 216], "predecr": 33, "alignof": 33, "sizeof": 33, "struct": 33, "dsign": 33, "arrayconstructor": 33, "ac": [33, 43, 63, 97, 111, 127, 139, 209, 216, 234, 237], "95": [33, 49, 91, 189, 196, 212, 214, 229], "do1": 33, "1d0": 33, "do2": 33, "extent": 33, "intent_out": 33, "dim": [33, 53, 66, 92, 164, 170, 196, 219, 222], "arr": 33, "fortranreturn": 33, "aid": [33, 116], "implieddoloop": 33, "idl": 33, "signallib": 33, "prog": [33, 141], "myprogram": 33, "mysub": 33, "subroutinecal": 33, "passs": 33, "inout": 33, "bind_c": 33, "sum_": [33, 50, 51, 52, 56, 59, 76, 78, 82, 84, 91, 193, 198, 199, 206, 212, 216], "cmplx": [33, 196], "intent_in": 33, "intrins": 33, "isign": 33, "lbound": 33, "lb": [33, 73, 231], "literal_dp": 33, "num": [33, 42, 51, 91, 101, 187, 208, 212, 231, 237], "literal_sp": 33, "reshap": [33, 82, 114, 129, 217, 223, 234], "arrayexpr": 33, "shp": 33, "metric": [33, 43, 47, 53, 102, 208, 212, 215, 222], "snr": 33, "convolution2d": 33, "use_renam": 33, "ren": 33, "thingi": 33, "newtons_method": 33, "itermax": 33, "counter": [33, 51, 57, 63, 82, 95, 97], "raphson": 33, "criterion": [33, 42, 128, 184, 189], "dummi": [33, 47, 50, 57, 76, 78, 87, 114, 129, 157, 162, 186, 187, 191, 192, 193, 202, 203, 204, 206, 208, 212, 215, 220, 222, 225, 229, 234, 235], "netwon": 33, "algo": [33, 43], "r38": 33, "27s_method": 33, "newtons_method_funct": 33, "param": [33, 53, 87, 209], "render_as_modul": 33, "py_mod": 33, "865474033102": 33, "render_as_source_fil": 33, "printer_set": 33, "fcodeprint": [33, 196], "fpgroup": [34, 42], "studi": [34, 41, 50, 53, 87, 180, 183, 189, 192, 209, 216], "combinator": [34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 84, 91, 198, 217, 222, 231, 234, 252, 265, 271], "free_group": [34, 41, 42], "vfree_group": 34, "xfree_group": 34, "fp_group": [34, 42], "coset_enumeration_r": 34, "fall": [34, 50, 51, 56, 79, 176, 191, 196, 209, 213, 216], "famou": [34, 59, 78, 91, 209], "langl": [34, 42, 141, 181], "rangl": [34, 42, 141, 159, 181], "gen0": 34, "gen1": 34, "gen_": 34, "freegroup": 34, "x_2": [34, 41, 56, 73, 157, 184, 189, 192, 198, 209, 215], "x_3": [34, 41, 73, 157], "s_1": 34, "r_1": [34, 183, 193], "s_2": 34, "r_2": 34, "s_k": 34, "r_k": [34, 155], "s_i": [34, 47, 78, 80], "r_i": [34, 193], "reduct": [34, 87, 110, 189, 191, 207, 209], "techniqu": [34, 46, 76, 78, 196, 198, 208, 212, 215, 267], "ho05": [34, 41], "cdhw73": 34, "hav91": 34, "coset_enumeration_c": 34, "coset_enumer": 34, "relator_bas": 34, "coset_table_bas": 34, "total": [34, 40, 42, 51, 56, 67, 80, 81, 82, 84, 116, 117, 124, 131, 135, 141, 146, 159, 168, 181, 187, 189, 192, 205, 208, 212, 220, 222, 250], "influenc": [34, 94, 183, 184], "coset_table_max_limit": 34, "4096000": 34, "safeti": [34, 43, 85], "max_coset": 34, "cox": [34, 190, 192], "c_r": [34, 206], "50": [34, 42, 54, 55, 56, 59, 67, 87, 91, 94, 95, 135, 192, 196, 205, 214], "max_stack_s": 34, "500": [34, 55, 111], "deduction_stack": 34, "stack": [34, 68, 82, 129, 185, 191, 196, 225, 231, 267], "occurr": [34, 51, 91, 114, 172, 208, 216], "exce": [34, 91, 222], "modest": 34, "low_index_subgroup": 34, "conjugaci": [34, 42], "coset_t": [34, 42], "reidemeister_present": 34, "y_1": [34, 209, 216], "y_2": [34, 209, 216], "john": [34, 42, 59, 192, 209, 212], "cannon": 34, "lucien": 34, "dimino": [34, 42], "georg": [34, 183, 212, 234], "hava": 34, "jane": 34, "watson": [34, 208], "comp": [34, 212], "463": [34, 128], "490": [34, 43], "1973": [34, 52, 178], "derek": [34, 41], "holt": [34, 41, 42, 49], "chapman": [34, 41], "hall": [34, 41, 216], "crc": [34, 41, 43], "2005": [34, 41, 78, 91, 192], "xvi": [34, 41], "514": [34, 41, 190], "symposium": [34, 76, 189, 190, 206], "issac": [34, 78, 190, 214], "bonn": 34, "1991": [34, 190], "191": [34, 215], "199": 34, "acm": [34, 50, 76, 78, 190, 206, 212, 214], "graycod": 35, "kw_arg": [35, 45, 162, 221, 222], "hamiltonian": [35, 153], "edg": [35, 44, 45, 80, 185, 196, 215, 234, 270], "hamilton": [35, 82], "vertex": [35, 45, 62, 67, 78, 185], "000": [35, 55, 78, 81, 156, 234], "110": [35, 81, 212, 214, 228, 234], "010": [35, 81, 234], "011": [35, 81, 156, 234], "111": [35, 54, 61, 81, 91, 234], "101": [35, 81, 91, 156, 234], "001": [35, 55, 81, 131, 234], "delet": [35, 80, 82, 87, 193, 237, 271], "statist": [35, 52, 59, 216, 227, 265], "manner": [35, 52, 59, 126, 160, 177, 209, 212, 217, 234, 249], "generate_grai": 35, "0000": 35, "0001": [35, 55], "0011": [35, 46], "0010": 35, "0110": 35, "0111": [35, 156], "0101": [35, 156], "0100": 35, "1100": 35, "1101": 35, "1111": 35, "1110": 35, "1010": 35, "1011": 35, "1001": 35, "r39": 35, "nijenhui": 35, "wilf": [35, 50, 214], "1978": [35, 42, 167, 190], "r40": 35, "knuth": [35, 43, 231], "2011": [35, 43, 76, 91, 178, 205], "art": [35, 43, 183, 196, 198, 231, 258], "vol": [35, 43, 52, 56, 59, 76, 87, 102, 191, 192, 206, 231, 234], "addison": [35, 43, 91, 190], "weslei": [35, 43, 91, 190], "r41": 35, "reflect": [35, 39, 43, 51, 61, 62, 67, 80, 97, 131, 134, 135, 172], "brgc": 35, "6th": [35, 91], "unrank": [35, 40, 42, 43, 45], "r42": 35, "statweb": 35, "stanford": 35, "susan": 35, "s208": 35, "node12": 35, "tail": [35, 50, 51, 187, 216], "00010": 35, "random_bitstr": 35, "bitlist": [35, 46], "gray_to_bin": 35, "endian": 35, "bin_to_grai": 35, "get_subset_from_bitstr": 35, "bitstr": 35, "graycode_subset": 35, "group_construct": 36, "directproduct": [36, 39], "__mul__": [36, 42, 82, 87, 187, 191], "shift": [36, 42, 43, 45, 52, 59, 62, 66, 68, 81, 182, 187, 189, 192, 199, 206, 214, 216], "gn": 36, "named_group": [36, 39, 41, 42, 48, 49], "cyclicgroup": [36, 39, 42], "perm_group": [36, 41, 42, 43, 48, 49], "permutationgroup": [36, 39, 41, 42, 43, 48, 49], "group_numb": 37, "is_nilpotent_numb": 37, "r43": 37, "randprim": [37, 91], "pakianathan": 37, "shankar": 37, "monthli": [37, 52, 87], "107": [37, 190], "631": 37, "634": 37, "is_abelian_numb": 37, "r44": 37, "is_cyclic_numb": 37, "r45": 37, "polyhedron": [38, 42, 78, 234], "prufer": 38, "grai": [38, 46, 79, 131, 176, 182], "nilpot": [38, 42, 87], "abelian": [38, 39, 42, 80, 167, 183], "cyclic": [38, 39, 42, 43, 44, 54, 82, 91, 222, 234], "canonic": [38, 51, 205, 222], "coset": [38, 42, 47, 191], "todd": 38, "coxet": [38, 80], "subgroup": [38, 42, 43, 47, 49, 80, 91], "bibliographi": 38, "polycycl": [38, 42], "collector": 38, "symmetricgroup": [39, 41, 42, 48, 49], "transposit": [39, 42, 43, 52, 82, 84, 218], "is_group": [39, 42], "generate_schreier_sim": [39, 42], "af": [39, 42, 48, 129], "dihedralgroup": [39, 42, 49], "alternatinggroup": [39, 42, 48], "r46": 39, "symmetric_group": 39, "generators_and_rel": 39, "dihedr": [39, 43], "d_n": [39, 80, 192], "gon": 39, "bab": 39, "generate_dimino": [39, 42], "perm": [39, 41, 42, 43, 44, 49, 56, 82, 84, 87, 217], "cyclic_form": [39, 43, 44], "r47": 39, "dihedral_group": 39, "31": [39, 51, 54, 55, 67, 91, 127, 181, 192, 209], "ex": [39, 78, 102, 113, 186, 188, 191, 192, 222, 230], "r48": 39, "armstrong": 39, "abeliangroup": [39, 42], "cyclic_ord": 39, "theorem": [39, 52, 59, 61, 67, 77, 78, 82, 87, 91, 104, 105, 116, 162, 171, 179, 183, 186, 189, 203, 206, 209, 215, 248, 258], "r49": 39, "groupprop": [39, 42], "subwiki": [39, 42], "structure_theorem_for_finitely_generated_abelian_group": 39, "multiset_partit": [40, 56, 76, 231, 234], "rg": 40, "growth": [40, 91, 189, 261], "from_rg": 40, "abcd": [40, 44, 162, 234, 237], "cbead": 40, "sort_kei": [40, 51, 212], "ti": [40, 43, 51, 91], "integerpartit": [40, 234], "summand": [40, 191], "r50": 40, "partition_": [40, 56], "28number_theori": 40, "as_dict": [40, 186, 192], "as_ferr": 40, "char": 40, "ferrer": 40, "next_lex": [40, 43], "lexic": [40, 142, 234], "prev_lex": 40, "random_integer_partit": 40, "seed": [40, 42, 51, 52, 61, 64, 65, 87, 91, 189, 216, 227, 234], "85": [40, 55, 56, 87, 91, 116, 160, 181, 216], "rgs_gener": 40, "37": [40, 52, 57, 61, 87, 91, 95, 196, 209], "52": [40, 56, 91, 94, 95, 181, 195, 209, 212, 234, 261], "151": 40, "203": [40, 56], "rgs_enum": 40, "rgs_unrank": 40, "rgs_rank": 40, "pcgroup": 41, "pcg": 41, "pc_seri": [41, 42], "polycyl": 41, "pc_present": 41, "pc_sequenc": [41, 42], "miss": [41, 42, 68, 196, 214, 229, 271], "adjac": [41, 42, 43, 51, 101, 134, 185, 234], "der": [41, 42], "relative_ord": [41, 42], "polycyclic_group": [41, 42], "gen": [41, 42, 47, 48, 49, 51, 87, 183, 186, 187, 189, 191, 192, 193, 194, 202, 208, 211, 214], "is_ident": [41, 43, 51], "poss": [41, 116, 180], "pc_group": 41, "a_j": [41, 59, 76, 167, 189, 198, 206], "notin": [41, 76, 204], "_order": 41, "minimal_uncollected_subword": 41, "subword_index": 41, "i_1": [41, 162, 192, 217], "a_1": [41, 42, 52, 59, 73, 76, 82, 87, 102, 162, 167, 184, 189, 206, 209, 212, 214, 216, 271], "i_r": 41, "a_r": [41, 206], "i_2": [41, 162, 192], "s_": [41, 47, 114, 189], "s_j": [41, 80, 189], "x3": [41, 51, 56, 186, 212, 216], "collected_word": 41, "free_to_perm": 41, "bottom": [41, 42, 51, 52, 67, 82, 87, 90, 113, 191, 196, 205, 250], "pictur": [41, 196], "x_3x_2": 41, "x_3x_1": 41, "x_2x_1": 41, "x_3x_0": 41, "x_2x_0": 41, "x_1x_0": 41, "varii": 41, "derived_seri": [41, 42], "pc_resent": 41, "k_arrai": 41, "array_form": [41, 43, 44], "v_arrai": 41, "e_1": [41, 87, 183, 189, 192], "e_n": [41, 56, 80, 87, 138, 183, 192], "exponent_vector": 41, "leading_expon": 41, "dup": [42, 187, 188], "pn": [42, 117, 126], "motion": [42, 105, 109, 110, 113, 116, 117, 118, 120, 122, 123, 124, 125, 126, 129, 130, 175, 176, 179, 180, 216], "front": [42, 51, 116, 131, 161, 187, 189, 192, 196, 208, 271], "face": [42, 44, 64, 78, 114, 189, 193, 196, 209, 250, 267], "rubik": 42, "3674160": 42, "pgroup": [42, 44], "corner": [42, 44, 82, 192, 212, 215, 235], "reset": [42, 44, 182, 189, 192, 227, 230, 232], "p10": 42, "make_perm": 42, "r51": 42, "eick": [42, 49], "brien": [42, 49], "r52": 42, "seress": 42, "r53": 42, "schreier_vector": 42, "r54": 42, "nielsen_transform": 42, "product_replacement_algorithm": 42, "r55": 42, "frank": [42, 43, 87], "celler": 42, "charl": 42, "leedham": 42, "green": [42, 182], "scott": 42, "murrai": 42, "alic": [42, 52], "niemey": 42, "r56": 42, "block_": 42, "28permutation_group_theori": 42, "r57": 42, "algorithmist": 42, "php": [42, 59, 91, 209, 216], "union_find": 42, "r58": 42, "multiply_transitive_group": 42, "r59": 42, "center_": 42, "28group_theori": 42, "centralizer_and_norm": 42, "derived_subgroup": 42, "nilpotent_group": 42, "colost": 42, "hulpk": 42, "cgt": 42, "cgtnote": 42, "__contains__": 42, "__weakref__": [42, 82], "weak": [42, 51, 82, 186, 189], "_coset_repres": 42, "hg": 42, "transvers": [42, 47, 49, 135, 136], "coset_transvers": 42, "_distinct_primes_lemma": 42, "_element": 42, "_eval_is_alt_sym_monte_carlo": 42, "05": [42, 73, 99, 178, 181], "mont": 42, "carlo": 42, "candidat": 42, "randomli": [42, 51, 52, 91, 156], "n_ep": 42, "_check_cycles_alt_sym": [42, 49], "_eval_is_alt_sym_na": 42, "only_sym": 42, "only_alt": 42, "_p_elements_group": 42, "_random_pr_init": 42, "_random_prec_n": 42, "modif": [42, 57, 87, 215, 216, 231], "69": [42, 87, 214, 231], "71": [42, 67, 87, 165], "_random_gen": 42, "append": [42, 51, 52, 87, 95, 129, 157, 182, 187, 196, 217, 229, 230, 234, 271], "accumul": [42, 227, 231], "random_pr": 42, "chosen": [42, 43, 52, 53, 64, 65, 87, 91, 94, 108, 130, 164, 167, 182, 183, 187, 189, 191, 196, 203, 206, 212, 216, 227, 241], "gh": [42, 184, 215, 222], "eventu": [42, 59, 78, 182, 183, 203, 229, 234], "_sylow_alt_sym": 42, "sylow": 42, "p_1": [42, 47, 52, 69, 91, 179, 206, 209], "p_2": [42, 52, 69, 91, 179, 206], "p_p": 42, "sylow_subgroup": 42, "is_alt_sym": [42, 49], "_union_find_merg": 42, "parent": [42, 51, 74, 108, 172, 175, 182, 186, 187, 191, 227, 231, 241, 244, 245], "not_rep": 42, "atkinson": 42, "83": [42, 195], "87": [42, 57, 87, 91], "minimal_block": 42, "_union_find_rep": 42, "r60": 42, "r66": 42, "compress": [42, 87, 90], "r62": 42, "r68": [42, 43], "_verifi": 42, "_h": [42, 215], "gens_k": 42, "rels_k": 42, "gens_h": 42, "stabil": [42, 47, 49, 55, 101, 126, 220], "inject": [42, 51, 183, 187, 192, 267], "homomorph": [42, 188], "rels_h": 42, "strong_present": 42, "abelian_invari": 42, "isomorph": [42, 45, 183, 186, 189, 191], "t_1": [42, 56, 209], "t_2": [42, 56, 209], "t_r": [42, 127, 222], "542": 42, "adopt": [42, 222], "schreier": [42, 47, 49], "sim": [42, 47, 49, 76], "b_1": [42, 49, 59, 73, 76, 183, 206, 209, 212, 271], "b_2": [42, 49, 59, 73, 206, 212], "dot": [42, 43, 47, 49, 52, 64, 66, 73, 82, 87, 101, 116, 117, 120, 121, 122, 124, 125, 126, 127, 129, 146, 172, 176, 178, 179, 180, 181, 183, 184, 189, 192, 196, 215, 216, 234, 241, 244, 246, 247], "b_k": [42, 49, 52, 56, 59, 198, 199], "strong": [42, 47, 48, 49, 91, 92], "89": [42, 49, 78], "55": [42, 54, 56, 87, 181, 182, 192, 209], "57": [42, 87, 91, 216], "strong_gen": [42, 48, 49], "basic_transvers": [42, 49], "basic_orbit": [42, 49], "basic_stabil": 42, "baseswap": 42, "po": [42, 76, 81, 82, 111, 127, 129, 187, 214], "strong_gens_distr": [42, 49], "swap": [42, 43, 44, 82, 87, 142, 146, 155, 216, 234], "orbit": [42, 49, 162, 163, 165], "b_": [42, 47, 49, 51, 56, 59, 76, 84, 101, 198, 206, 209, 217], "b_i": [42, 47, 49, 76, 183, 206], "la": [42, 129, 167], "vega": 42, "testutil": [42, 48, 49], "_verify_bsg": [42, 48, 49], "schreier_sim": [42, 48, 49], "bsg": [42, 47, 49, 222], "102": [42, 87], "98": [42, 52, 128, 192, 212], "pseudocod": 42, "beta_": 42, "g_": [42, 49, 50, 59, 76, 209], "foral": [42, 50, 53, 167], "zg": 42, "gz": 42, "c_g": 42, "gs": [42, 76], "sg": [42, 216, 222], "is_subgroup": 42, "subgroup_search": 42, "hgh": 42, "closur": [42, 48, 74, 142, 191, 204], "composition_seri": 42, "h_0": [42, 47], "h_1": [42, 47, 215], "h_2": [42, 215], "1024": [42, 196, 216], "512": [42, 59], "128": [42, 56, 59, 61, 91, 190, 196], "32": [42, 54, 57, 59, 61, 87, 91, 99, 127, 190, 192, 193, 205, 206, 209, 216, 227], "243": [42, 59, 214], "81": [42, 56, 61, 82, 87, 91, 114, 116, 181, 195], "conjugacy_class": 42, "xax": 42, "s_3": 42, "s3": [42, 50, 101, 199, 209], "feasibl": [42, 101], "resiz": [42, 43, 82, 84], "coset_factor": 42, "factor_index": 42, "_basic_orbit": 42, "u1": [42, 91, 114, 116, 117, 118, 120, 121, 124, 126, 129, 172, 174, 175, 176, 179, 212], "u2": [42, 90, 91, 114, 116, 117, 118, 120, 121, 124, 129, 172, 175, 179, 212], "_strip": [42, 49], "coset_rank": 42, "lexicograph": [42, 43, 46, 47, 51, 189, 192, 234], "coset_unrank": 42, "standardis": [42, 186], "subsect": [42, 247], "compris": [42, 52, 84, 111, 127, 130, 192, 234], "g_0": [42, 209], "g_1": [42, 192, 203, 209, 212], "g_2": [42, 80, 203, 212], "g_i": [42, 203], "g_k": 42, "tetrahedron": [42, 44], "r64": 42, "axiom": [42, 183], "doy": 42, "sc": [42, 78], "thesi": [42, 51, 203, 241], "generator_product": 42, "sn": [42, 43, 50, 73], "is_abelian": 42, "_random_prec": 42, "probabl": [42, 51, 56, 59, 63, 91, 114, 156, 160, 206, 212, 215, 216, 228, 263, 269], "transit": [42, 129, 189, 216], "82": [42, 78, 87, 216], "proport": [42, 52, 203], "226": 42, "227": 42, "is_altern": 42, "quicker": [42, 91], "taxonomi": 42, "is_cycl": 42, "p_": [42, 47, 51, 78, 167, 209, 212, 217], "p_i": [42, 47, 91], "equiv": [42, 52, 56, 91, 191, 206, 209], "pmod": [42, 51, 52, 56, 87, 206], "p_j": [42, 47], "r65": 42, "35": [42, 45, 54, 56, 64, 65, 78, 87, 91, 116, 191, 196, 209, 212, 216], "rose": 42, "is_elementari": 42, "is_nilpot": [42, 87], "solvabl": [42, 209, 212, 215, 272], "lower_central_seri": 42, "is_solv": 42, "is_norm": [42, 160], "gr": 42, "is_perfect": [42, 91], "is_polycycl": 42, "is_primit": [42, 187, 192], "primit": [42, 51, 52, 59, 91, 156, 160, 183, 184, 186, 187, 189, 191, 192, 195, 196, 209, 261], "cardin": [42, 43, 46, 183, 204], "badli": 42, "random_stab": 42, "g3": [42, 101], "s5": 42, "is_symmetr": [42, 82], "is_transit": 42, "is_trivi": 42, "cba": [42, 217, 234], "mainli": [42, 59, 87, 92, 167, 176, 189, 206, 209, 212], "max_div": 42, "siev": [42, 91], "nonempti": 42, "gb": 42, "moreov": [42, 52, 76, 166, 177, 183, 184, 189, 197, 245], "congruenc": [42, 51, 91, 206, 209], "p_0": [42, 47, 69, 206, 209], "maxim": [42, 52, 80, 183, 187, 191, 203, 205], "intransit": 42, "normal_closur": 42, "adjoin": [42, 184], "yx": [42, 180], "73": [42, 50, 51, 64, 91, 212], "74": [42, 56, 91], "orb": 42, "78": [42, 65, 87, 91, 95, 167, 212, 216], "orbit_transvers": 42, "orbit_rep": 42, "send": [42, 51, 52, 57, 91, 183, 212, 214], "proof": [42, 45, 76, 78, 215], "79": [42, 43, 95], "pointwise_stabil": 42, "pointwis": [42, 49], "p_k": [42, 91], "p20": 42, "stab": 42, "schreier_sims_increment": [42, 49], "polycyclicgroup": 42, "eliminate_gen": 42, "gen_count": 42, "b1": [42, 47, 59, 91, 94, 95, 106, 114, 129, 172, 187, 196, 206, 209, 212, 246], "b_r": 42, "slp_dict": 42, "seq": [42, 51, 54, 87, 187, 189, 192, 202, 214, 234], "93": [42, 190], "schreier_sims_random": [42, 49], "consec_succ": 42, "consec": 42, "_succ": 42, "97": [42, 52, 91, 189], "sift": [42, 49, 234], "amend": 42, "decompos": [42, 43, 49, 51, 53, 57, 62, 87, 91, 146, 155, 156, 158, 187, 192, 195, 216], "unsuccess": [42, 49], "accordingli": [42, 184, 191], "halt": 42, "signifi": [42, 51, 192, 216], "g_t": 42, "leq": [42, 50, 52, 59, 76, 87, 91, 189, 191, 202, 203, 209, 216], "prop": [42, 191], "init_subgroup": 42, "supergroup": 42, "sought": [42, 91, 147, 157, 208, 215], "prune": 42, "prop_even": 42, "lengthi": 42, "114": [42, 91], "117": [42, 59], "terribl": 42, "crucial": [42, 50, 186], "len1": 42, "len2": 42, "len3": 42, "transitivity_degre": 42, "fold": [42, 51, 57, 196, 203, 208], "a_2": [42, 52, 73, 87, 189, 206, 209, 212, 216, 271], "a_k": [42, 52, 193, 199, 214], "arrang": [43, 101, 109, 127, 129, 205, 209, 222], "r69": 43, "reorder": [43, 50, 162, 192, 212, 216, 234], "pretty_print": [43, 79, 111, 116, 120, 121, 122, 124, 125, 127, 130, 172, 174, 175, 176, 179, 180, 196], "enter": [43, 51, 52, 56, 64, 91, 93, 94, 109, 113, 116, 124, 196, 206, 214, 227, 266, 270], "understood": [43, 91, 167, 183, 187], "economi": 43, "caution": [43, 51, 57, 208], "singleton": [43, 81, 200, 215, 252, 254, 266], "indexerror": [43, 87, 192], "autos": [43, 90], "watch": 43, "print_cycl": 43, "econom": [43, 78, 234], "retain": [43, 51, 57, 59, 78, 93, 192, 197, 205, 208], "biject": [43, 45, 52, 82, 183], "full_cyclic_form": 43, "rmul": 43, "unrank_lex": 43, "r73": 43, "zo42": 43, "from_sequ": 43, "a1": [43, 47, 51, 79, 82, 91, 95, 114, 129, 136, 212, 216, 217, 246, 271], "a2": [43, 47, 51, 80, 82, 91, 95, 114, 129, 136, 185, 216, 217, 246, 271], "a3": [43, 47, 51, 80, 82, 129, 246, 271], "perfectli": [43, 50, 51, 52, 189, 192, 195], "skiena": 43, "ma": [43, 50, 118], "1990": [43, 76, 206, 241], "r70": 43, "wendi": 43, "myrvold": 43, "ruskei": 43, "2001": [43, 91, 190], "lett": 43, "septemb": [43, 231], "281": 43, "284": [43, 91], "1016": 43, "s0020": 43, "0190": 43, "01": [43, 51, 55, 114, 156, 190, 208, 234], "00141": 43, "r71": 43, "kreher": 43, "stinson": 43, "1999": [43, 87, 190, 195, 212], "r72": 43, "graham": [43, 56, 57, 91], "patashnik": 43, "foundat": [43, 190, 191], "1994": [43, 189, 190, 192], "product_and_invers": 43, "r74": 43, "lehmer_cod": 43, "appliedpermut": 43, "magic": [43, 208, 227, 263], "attatch": 43, "_array_form": 43, "ascent": 43, "ie": [43, 209], "descent": 43, "fg": [43, 53, 212, 215], "gf": [43, 52, 183, 185, 186, 188, 189, 191], "r75": 43, "commutes_with": [43, 222], "cycle_structur": 43, "from_inversion_vector": 43, "get_adjacency_dist": 43, "n_adj": 43, "reev": 43, "colin": 43, "landscap": 43, "annal": 43, "86": [43, 87, 128, 195, 205], "473": 43, "josephu": 43, "get_precedence_matrix": 43, "get_precedence_dist": 43, "get_adjacency_matrix": 43, "get_positional_dist": 43, "subscript": [43, 187, 196, 206, 209, 234], "inversion_vector": 43, "lesser": [43, 192], "lie": [43, 53, 65, 66, 67, 192, 210, 216, 251, 258], "lehmer": 43, "ith": [43, 80, 91, 187, 193, 215, 216], "variat": [43, 51, 189, 203, 212, 233], "r76": 43, "eng": 43, "chula": 43, "piak": 43, "algo2008": 43, "htm": [43, 59, 78, 209], "is_singleton": 43, "is_odd": 43, "shuffl": [43, 87, 271], "012345": 43, "345": 43, "253": 43, "2531": 43, "25314": 43, "253140": 43, "r77": 43, "flavius_josephu": 43, "r78": 43, "josephus_problem": 43, "r79": 43, "wou": 43, "burtonl": 43, "trim": [43, 126], "unmov": 43, "mul_inv": 43, "next_nonlex": 43, "nonlex": 43, "rank_nonlex": 43, "unrank_nonlex": 43, "next_trotterjohnson": [43, 234], "trotter": 43, "johnson": [43, 87], "generate_bel": [43, 234], "rank_trotterjohnson": 43, "unrank_trotterjohnson": 43, "_af_par": 43, "pseudo": [43, 87, 91, 187, 189, 192], "inv_perm": 43, "enforc": [43, 116], "rmul_with_af": 43, "ascend": [43, 234], "r80": 43, "transposition_": 43, "28mathemat": [43, 51, 204], "flexibl": [43, 51, 114, 129, 179, 182, 186, 215, 261], "investig": [43, 76, 181, 183, 206, 234, 263], "cn": [43, 196, 270], "2n": [43, 50, 56, 59, 78, 82, 102, 125, 181, 199, 206], "dn": [43, 216], "klein": 43, "s4": [43, 101], "polyhedr": 44, "psg": 44, "platon": 44, "solid": [44, 65, 182, 250], "tetrahedr": 44, "octahedr": 44, "icosahedr": 44, "r81": 44, "polyhedralgroup": 44, "polyhedra": [44, 77], "shadow": 44, "h5": 44, "heinz": 45, "caylei": [45, 82], "r82": 45, "labeledtre": 45, "tree_repr": 45, "prufer_rank": 45, "prev": 45, "36": [45, 52, 56, 67, 78, 82, 87, 91, 95, 192, 196, 209, 212, 216, 250], "prufer_repr": 45, "record": [45, 51, 191, 227], "to_pruf": 45, "778": 45, "779": 45, "777": [45, 54], "1296": 45, "to_tre": 45, "r83": 45, "hamberg": 45, "erlend": 45, "2010": [45, 213, 234], "06": [45, 51, 116, 181, 216], "compact": [45, 51, 98, 129, 160, 176, 192, 196, 214, 231], "next_binari": 46, "prev_binari": 46, "bitlist_from_subset": 46, "subset_from_bitlist": 46, "superset_s": 46, "iterate_binari": 46, "iterate_graycod": 46, "prev_grai": 46, "next_grai": 46, "next_lexicograph": 46, "prev_lexicograph": 46, "rank_binari": 46, "unrank_binari": 46, "rank_grai": 46, "unrank_grai": 46, "rank_lexicograph": 46, "43": [46, 87, 91, 94, 95, 216, 271], "super_set": 46, "subset_indic": 46, "ksubset": 46, "itertool": [46, 234], "tensor_can": [47, 222], "msym": 47, "contravari": [47, 87, 222, 223], "covari": [47, 53, 87, 216, 222, 223], "d0": 47, "base_i": 47, "gens_i": 47, "n_i": [47, 189, 214], "sym_i": 47, "failur": [47, 55, 68, 76, 91, 216, 227, 271], "canonicalize_na": 47, "exchang": [47, 52, 87, 181, 185, 234], "anticommut": [47, 149, 151, 161, 162, 222], "canonical_fre": 47, "slot": [47, 146, 217, 221, 222, 266], "residu": [47, 52, 91, 189, 200, 206], "tensor_gen": 47, "list_free_indic": 47, "double_coset_can_rep": 47, "reintroduc": 47, "a_": [47, 51, 52, 59, 76, 80, 82, 84, 101, 102, 127, 198, 206, 209, 212, 214, 216, 217], "antisymmetr": [47, 53, 82, 162, 222], "d2": [47, 172, 183, 203, 216, 234, 241], "ord": [47, 52, 87], "t_c": 47, "get_symmetric_group_sg": [47, 222], "bsgs_direct_product": 47, "base2a": 47, "gens2a": 47, "t0": 47, "t1": [47, 67, 68, 91, 106, 111, 209, 216], "a_m": [47, 212], "a_n": [47, 52, 59, 76, 80, 167, 184, 189, 199, 209, 212, 271], "_a": [47, 59, 162, 192], "_b": [47, 59, 162], "base_f": 47, "gens_f": 47, "base1": 47, "gens1": 47, "base_a": 47, "gens_a": 47, "sgen": 47, "s_transvers": 47, "butler": [47, 222], "portug": [47, 222], "grow": [47, 51, 76, 87, 91, 186, 189], "computation": [47, 109, 110], "absenc": [47, 81], "observ": [47, 73, 76, 151, 180, 183, 206, 209, 212, 216, 249, 271], "opposit": [47, 67, 81, 82, 106, 108, 184, 187, 204, 208, 215, 223, 234, 241, 242, 271], "ind": [47, 198, 222], "d3": [47, 203], "a0": [47, 212, 271], "a4": [47, 51, 80, 129, 271], "a5": [47, 51], "interchang": [47, 50, 76, 212], "leftrightarrow": 47, "_af_rmul": 47, "t_": [47, 56], "b0": [47, 59, 187, 206, 212], "d_": [47, 206], "p0": [47, 61, 191, 212], "dbase": 47, "recomput": [47, 192], "d_i": [47, 76, 167], "s_0": 47, "d_0": [47, 52], "b_0": [47, 52, 56, 206, 209, 212], "b_j": [47, 49, 59, 76, 206], "sx": 47, "trace": [47, 82, 84, 102, 129, 189, 196, 216, 217, 218, 220, 234, 267], "h_n": [47, 59, 78, 215], "tab1": 47, "get_transvers": 47, "antisym": 47, "base2": 47, "gens2": 47, "_cmp_perm_list": 48, "hashabl": [48, 76, 234], "ls1": 48, "ls2": 48, "_naive_list_centr": 48, "_verify_centr": 48, "_verify_normal_closur": 48, "_base_ord": 49, "base_ord": 49, "backtrack": 49, "108": [49, 91, 95], "132": [49, 56, 172], "r84": 49, "_distribute_gens_by_bas": 49, "membership": [49, 191, 204], "_strong_gens_from_distr": 49, "_orbits_transversals_from_bsg": 49, "_handle_precomputed_bsg": 49, "transversals_onli": 49, "slp": 49, "_remove_gen": 49, "new_gen": 49, "r85": 49, "r86": 49, "recurr": [50, 56, 73, 87, 191, 202, 208, 210, 212, 216, 236], "annihil": [50, 69, 70, 74, 138, 162, 214], "is_hypergeometr": 50, "binomi": [50, 55, 58, 59, 91, 192, 196, 201, 208, 212, 216, 234, 271], "rf": [50, 56, 192], "ff": [50, 52, 56, 181, 184, 185, 186, 191, 192], "speci": [50, 51], "rise": [50, 56, 59, 181, 208, 212, 216, 244], "knowledg": [50, 51, 52, 191, 212, 266, 269], "hypersimp": [50, 207], "quotient": [50, 51, 54, 57, 91, 183, 184, 186, 188, 189, 192, 206, 208, 212], "dummy_vari": 50, "stand": [50, 51, 129, 184, 186, 187, 193], "karr": 50, "quad": [50, 51, 53, 55, 59, 78, 82], "exclus": [50, 51, 81, 87, 189, 263], "emphas": 50, "typeset": [50, 196], "doit": [50, 51, 53, 56, 57, 59, 78, 84, 101, 139, 141, 143, 154, 156, 159, 160, 162, 172, 181, 192, 198, 203, 208, 212, 213, 216, 218, 241, 243, 244, 246, 247, 261, 266], "seemingli": [50, 215], "nonsens": [50, 59], "r87": 50, "michael": [50, 190, 195], "april": 50, "1981": [50, 190], "305": 50, "350": [50, 111], "dl": [50, 180, 190], "cfm": [50, 190], "doid": [50, 190], "322248": 50, "322255": 50, "r88": 50, "capit": [50, 52, 101, 212], "sigma_not": 50, "r89": 50, "empty_sum": 50, "euler_maclaurin": [50, 55], "eval_integr": 50, "maclaurin": [50, 55], "endpoint": [50, 51, 55, 177, 204, 247], "28333333333333": 50, "sstr": [50, 176, 196], "full_prec": [50, 196], "26629073187415": 50, "0175000000000000": 50, "soon": [50, 51, 114, 167, 193], "eval_zeta_funct": 50, "is_absolutely_converg": 50, "sequence_term": 50, "is_converg": 50, "r90": 50, "absolute_converg": 50, "prod_": [50, 56, 59, 76, 91, 167, 206], "respons": [50, 51, 100, 101, 114, 182, 229], "diverg": [50, 59, 131, 241, 248], "dirichlet": [50, 59, 216], "r91": 50, "convergence_test": 50, "reverse_ord": 50, "selector": [50, 82, 208, 234], "handi": [50, 51, 87, 196, 266], "s0": [50, 74, 76, 134], "expr_with_intlimit": [50, 78], "exprwithintlimit": [50, 78], "reorder_limit": 50, "r92": 50, "walli": 50, "w2": [50, 136], "w2e": 50, "risingfactori": [50, 58, 59, 196, 198], "combsimp": [50, 51, 56], "pe": 50, "gammasimp": [50, 51, 208], "rewrit": [50, 51, 53, 56, 57, 59, 76, 78, 81, 94, 101, 159, 192, 203, 204, 205, 208, 212, 213, 214, 215, 216, 252, 253, 265, 267], "r93": 50, "r94": 50, "capital_pi_not": 50, "r95": 50, "empty_product": 50, "r96": 50, "infinite_product": 50, "r97": 50, "expr_with_limit": [50, 78], "exprwithlimit": [50, 78], "change_index": 50, "trafo": 50, "newvar": 50, "mapsto": [50, 76, 82, 191], "p3": [50, 61, 63, 64, 66, 67, 101, 182, 186, 205, 216], "has_empty_sequ": [50, 78], "has_reversed_limit": [50, 78], "has_finite_limit": [50, 78], "____": [50, 55, 78, 134, 184, 197, 216, 234, 272], "___": [50, 55, 78, 79, 87, 184, 208, 216, 221, 234, 270], "rubric": [50, 51], "_____": [50, 216], "gosper": 50, "gosper_norm": 50, "monic": [50, 183, 184, 187, 189, 191, 192, 195], "gcd": [50, 51, 52, 87, 91, 158, 186, 187, 188, 190, 191, 192, 196, 208, 209], "gosper_term": 50, "s_n": [50, 192], "f_k": [50, 124, 189], "g_n": [50, 56, 192], "f_n": [50, 56, 59, 183, 189, 192, 212], "gosper_sum": 50, "r98": 50, "marko": 50, "petkovsek": [50, 214], "herbert": 50, "doron": 50, "zeilberg": [50, 214], "ak": [50, 198], "peter": [50, 56, 91, 128, 178, 234], "ltd": 50, "welleslei": 50, "usa": [50, 190], "1997": [50, 76, 91, 190, 206], "convert_xor": [51, 93], "09": [51, 99], "2e": 51, "xor": [51, 54, 81, 93, 196, 263], "sympifyerror": 51, "coerc": [51, 126, 189], "cooper": 51, "sage": [51, 91, 181, 265], "shouldn": [51, 193], "unsanit": [51, 235, 260], "bitcount": 51, "improperli": 51, "unbound": [51, 221], "ns": 51, "fallback": [51, 79, 162, 176, 186, 196, 214], "ast": [51, 196, 253], "00000000000000": [51, 55, 163, 196, 216], "mylist1": 51, "mylist": 51, "mylist2": 51, "xxx": [51, 78, 87, 234, 236], "autosimplif": [51, 205, 208], "kern": 51, "r101": 51, "7649": 51, "r100": 51, "r104": 51, "r102": 51, "r103": 51, "r105": 51, "r106": 51, "r107": 51, "r99": 51, "recreat": 51, "isfinit": 51, "__cacheit": 51, "maxsiz": 51, "noqa": [51, 79, 187, 230], "f811": 51, "sympy_use_cach": 51, "cot": [51, 58, 59, 93, 193, 196, 205], "_arg": [51, 57], "as_mut": [51, 83, 84], "as_content_primit": [51, 87, 184, 192], "stub": 51, "as_dummi": [51, 78], "_0": [51, 76, 82, 87, 192, 235], "_r": [51, 162, 206, 215], "bound_symbol": [51, 78], "besid": [51, 189, 214], "typeinfo": 51, "truli": [51, 59, 167], "piec": [51, 55, 206, 229], "scan": 51, "appliedundef": 51, "canonical_vari": 51, "class_kei": 51, "sorted_class": 51, "dummy_eq": 51, "eg": [51, 114, 169, 215], "fromit": 51, "has_fre": 51, "exp_polar": [51, 58, 59, 206], "dif": 51, "_prec": 51, "xreplac": [51, 82, 87, 172], "q_": [51, 176, 209, 212], "r_": [51, 103, 163, 193], "repl_dict": 51, "rcall": [51, 53], "simul": [51, 114, 129, 195], "abus": [51, 222], "succe": [51, 76, 81, 91, 152, 191, 203], "newtyp": 51, "intuit": [51, 167, 200, 212], "is_mul": 51, "is_add": [51, 215], "mysin": [51, 235, 260], "_eval_rewrite_as_": 51, "_eval_rewrite_as_co": 51, "tie": [51, 234], "delai": [51, 99, 126, 205, 227, 261], "unsort": [51, 105, 171], "333333333333333333333": 51, "333333333333333314830": 51, "wildcard": [51, 208], "registri": 51, "metaprogram": 51, "address": [51, 196, 215], "mostli": [51, 57, 78, 87, 129, 157, 179, 183, 195, 196, 206, 214, 270], "__truediv__": [51, 187], "class_nam": 51, "mysingleton": 51, "_eval_is_g": 51, "_eval_is_eq": 51, "args_cnc": 51, "cset": 51, "split_1": 51, "suppress": [51, 93, 225, 232], "as_coeff_add": 51, "dep": [51, 212], "as_coeff_expon": 51, "as_coeffici": 51, "zz": [51, 56, 73, 74, 78, 84, 87, 88, 91, 111, 180, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 211], "coeff_monomi": [51, 192], "polytool": [51, 192, 215], "monomi": [51, 78, 81, 91, 184, 186, 187, 188, 189, 195, 196, 271], "as_coefficients_dict": 51, "inquiri": 51, "121": [51, 56, 91, 101, 172, 214], "84": [51, 55, 91], "separatevar": [51, 207, 212], "n3": [51, 114], "as_leading_term": [51, 203], "logx": [51, 203], "cdir": 51, "_eval_as_leading_term": 51, "as_numer_denom": [51, 214], "as_ordered_factor": 51, "as_ordered_term": 51, "as_powers_dict": 51, "lost": 51, "as_real_imag": [51, 57, 82, 197], "as_term": 51, "aseri": 51, "hir": 51, "asymptot": [51, 76, 101, 261], "hierarch": 51, "normalis": [51, 198], "induc": [51, 82, 191, 205, 234], "gruntz": [51, 198], "majorli": 51, "mrv": [51, 203], "overal": [51, 169, 182, 214], "rapidli": [51, 55, 76, 203], "till": [51, 94, 95, 114, 212], "r108": 51, "dominik": [51, 198], "proc": [51, 214], "1993": [51, 190], "symp": 51, "239": 51, "244": [51, 189], "r109": 51, "p90": 51, "r110": 51, "asymptotic_expans": 51, "_first": [51, 57], "distribute_order_term": [51, 208], "compute_leading_term": 51, "could_extract_minus_sign": 51, "signsimp": [51, 121, 208], "failing_express": 51, "modulu": [51, 52, 54, 59, 61, 67, 82, 91, 94, 95, 183, 187, 189, 191, 192, 195, 215], "power_bas": [51, 82], "power_exp": [51, 82], "multinomi": [51, 82, 91, 216], "expr_free_symbol": 51, "extract_addit": 51, "extract_multipl": 51, "extract_branch_factor": 51, "allow_half": 51, "fourier_seri": [51, 199], "hyper": [51, 56, 59, 70, 73, 196, 198, 206, 208, 214, 216, 271], "geto": 51, "getn": 51, "is_algebraic_expr": 51, "is_rational_funct": 51, "r111": 51, "algebraic_express": 51, "is_const": 51, "constanc": 51, "agre": [51, 52, 59, 66, 76, 206], "decis": [51, 57, 78, 205, 214, 229], "test_expr": 51, "prove": [51, 76, 78, 87, 183, 203, 212, 246], "failing_numb": 51, "is_meromorph": 51, "meromorph": [51, 59], "multivalu": [51, 57], "cut": [51, 56, 57, 59, 67, 76, 183, 206, 231, 237, 271], "hit": [51, 266], "is_polynomi": 51, "rational_funct": 51, "leadterm": 51, "xlim": [51, 182], "lseri": 51, "exaxmpl": 51, "nseri": 51, "_eval_nseri": 51, "innermost": 51, "disadvantag": 51, "met": [51, 209, 215, 230, 271], "nsimplifi": [51, 55, 207], "ratsimp": [51, 207], "removeo": [51, 129, 196, 261], "chop": [51, 55, 59, 82, 87, 214, 260], "123": [51, 56, 61, 81, 159, 172, 234, 241, 242], "lazi": [51, 84, 192], "smooth": [51, 55, 91, 198], "taylor_term": [51, 57], "previous_term": [51, 57], "dummy_index": 51, "temporari": [51, 228], "_dummy_10": 51, "contigu": [51, 206, 229], "x4": [51, 56, 186], "x5": [51, 56, 186], "x6": [51, 186], "x7": [51, 186], "x8": [51, 186], "x9": [51, 186], "x50": 51, "x51": 51, "y0": [51, 70, 72, 74, 212], "y1": [51, 129], "y2": [51, 129, 186], "y3": [51, 186], "y4": 51, "xa": [51, 184, 189], "xb": [51, 237], "xc": [51, 161, 237], "disambigu": 51, "x01": 51, "x02": 51, "x11": 51, "x12": 51, "escap": [51, 93, 182, 196, 237], "newli": [51, 76, 206], "undefinedfunct": [51, 174, 196, 228, 235], "f821": [51, 230], "cofactor": [51, 87, 187, 189, 192], "lcm": [51, 91, 187, 188, 189, 192, 196], "50000000000000": [51, 55], "100000000000000000000": 51, "1e20": 51, "00000000000000e": 51, "23456789123456789": 51, "23456789123457": 51, "00100": 51, "sent": [51, 78, 208], "789": [51, 91], "123_456": 51, "123456789": 51, "12e": 51, "012": 51, "60e2": 51, "6000": 51, "600e": 51, "125": [51, 55, 78, 91, 187, 202, 209], "099609": 51, "12500": 51, "12500000000000000000": 51, "closest": [51, 64], "5404319552844595": 51, "54": [51, 87, 95, 189, 195, 234], "29999999999999998890": 51, "30000000000000000000": 51, "_mpf_": [51, 186], "4915": 51, "70": [51, 52, 68, 78, 87, 91, 195, 196, 209, 216, 237], "307": 51, "mpf": [51, 186, 187], "is_float": 51, "unprejud": 51, "3602879701896397": 51, "18014398509481984": [51, 208], "limit_denomin": 51, "320": 51, "75": [51, 54, 216, 241], "use_tri": [51, 91], "use_rho": [51, 91], "use_pm1": [51, 91], "factorint": [51, 91, 191, 192, 231], "trial": [51, 91, 189, 201, 205, 212, 216], "max_denomin": 51, "1000000": [51, 91], "141592653589793": 51, "311": [51, 91], "discard": [51, 191, 196, 215], "99999999999999999999": 51, "hookrightarrow": 51, "minpoli": [51, 186, 187, 191], "dmp": [51, 183, 187, 188, 192], "complexrootof": [51, 87, 187, 192, 212], "anp": [51, 186, 187, 191, 192], "to_list": [51, 185, 187], "crootof": [51, 192, 212, 214], "minpoly_of_el": 51, "414213562": 51, "scratch": [51, 167], "6x": [51, 189], "to_number_field": [51, 191], "to_root": 51, "primitive_el": [51, 186, 187, 191], "knew": [51, 271], "golden": [51, 55, 91], "5th": [51, 129, 189, 191], "cyclotom": [51, 187, 188, 189, 190, 191, 192], "cyclotomic_poli": [51, 191, 192], "61803398874989": 51, "2i": 51, "a6": 51, "a6_wrong": 51, "309016994374947": 51, "951056516295154": 51, "field_el": 51, "is_alias": 51, "is_primitive_el": 51, "native_coeff": 51, "nativ": [51, 101, 187, 192, 227], "to_algebraic_integ": 51, "to_primitive_el": 51, "Its": [51, 57, 67, 129, 160, 189, 196, 204], "a_prim": 51, "number_cl": 51, "greatest": [51, 56, 61, 91, 184, 186, 187, 189, 190, 192, 195], "euclid": [51, 189, 190], "r112": 51, "euclidean_algorithm": 51, "r113": 51, "r114": 51, "1_": 51, "28number": 51, "r115": 51, "88": [51, 87, 91], "921_": 51, "r116": 51, "one_half": 51, "holder": 51, "ieee": [51, 52], "754": 51, "r117": 51, "affin": [51, 52, 66, 183], "compactif": 51, "r118": 51, "tild": [51, 57, 217], "undetermin": [51, 87, 192, 198, 212, 214], "phase": [51, 78, 99, 131, 134, 136, 146, 147, 215], "718281828": 51, "napier": 51, "r119": 51, "e_": [51, 56, 87], "28mathematical_const": 51, "r120": 51, "imaginary_unit": [51, 196], "141592654": 51, "circumfer": [51, 61], "diamet": [51, 61], "is_irr": 51, "r121": 51, "mascheroni": [51, 59], "5772157": 51, "recur": 51, "harmon": [51, 58, 91, 103, 141, 181, 196, 257], "lim": [51, 203, 261], "limits_": [51, 181, 198, 265], "ln": [51, 57, 78, 196, 198, 212, 216, 271], "r122": 51, "93mascheroni_const": 51, "91596559": 51, "r123": 51, "27s_constant": 51, "r124": 51, "golden_ratio": 51, "tribonacci": [51, 58], "fibonacci": [51, 55, 58, 91], "predetermin": [51, 227], "8392867552141611326": 51, "r125": 51, "generalizations_of_fibonacci_numb": [51, 56], "tribonacci_numb": [51, 56], "modulo": [51, 52, 88, 91, 158, 183, 185, 186, 187, 189, 191, 192, 193, 195, 196, 199, 208], "r126": 51, "modular_multiplicative_invers": 51, "r127": 51, "extended_euclidean_algorithm": 51, "oscil": [51, 257], "conform": [51, 215, 220, 221], "r128": 51, "r129": 51, "zero_to_the_power_of_zero": 51, "r130": 51, "indeterminate_form": 51, "as_base_exp": [51, 57, 58, 234], "floor": [51, 58, 91, 186, 187, 196, 216], "geq": [51, 52, 59, 87, 192, 209, 216, 271], "factor_": [51, 52, 91, 192, 209], "perfect_pow": [51, 91], "infix": 51, "matmul": [51, 84, 185], "as_coef_mul": 51, "undesir": [51, 105, 114, 126, 184, 187, 206], "4596": 51, "compound": [51, 118, 160, 200, 254], "5728": 51, "suspect": [51, 91], "5706": 51, "moot": 51, "off": [51, 61, 76, 82, 90, 92, 116, 146, 183, 192, 196, 212, 227, 238, 241, 265], "nb": 51, "sensit": [51, 101, 129, 182, 189, 208, 227], "assocop": 51, "quadrat": [51, 52, 78, 91, 183, 187, 191, 192, 209, 214, 216], "matadd": [51, 84, 196], "as_coef_add": 51, "extract_leading_ord": 51, "commutative_part": 51, "noncommutative_part": 51, "order_symbol": 51, "subprocess": [51, 196, 227, 228], "dividend": [51, 187], "rop": 51, "validrelationoper": 51, "rel_op": 51, "fourth": [51, 52, 184, 212, 261], "my_equ": 51, "my_inequ": 51, "reversedsign": 51, "_eval_eq": 51, "respond": 51, "boolalg": [51, 81], "client": [51, 231], "counterpart": [51, 52, 212, 261], "litter": 51, "oddbal": 51, "minor": [51, 61, 87, 196, 227], "caveat": [51, 192, 252, 259, 263], "succinctli": 51, "coupl": [51, 87, 126, 141, 156, 159], "annoy": 51, "succinct": 51, "occasion": 51, "r131": 51, "operar": 51, "circuit": [51, 146, 149], "greaterthanobject": 51, "__bool__": 51, "335": 51, "march": 51, "2012": 51, "r132": 51, "r133": 51, "r134": 51, "mdarg": 51, "fgh": 51, "vsin": 51, "vdiff": 51, "narg": [51, 189], "naturals0": [51, 196, 215, 216], "evalul": 51, "fairli": [51, 59, 76, 116, 123, 171, 183], "conserv": [51, 109, 125, 173, 243, 248, 249], "136": [51, 87], "indirect": [51, 53, 59, 91, 162, 212], "fx": [51, 53, 182, 212, 213], "fxx": 51, "insconsist": 51, "presenc": [51, 57, 81, 113, 117, 126, 212, 220], "nonvanish": 51, "_diff_wrt": 51, "_sort_variable_count": 51, "vc": 51, "vsort": 51, "collaps": [51, 156, 208], "vsort0": 51, "vi": 51, "dfx": 51, "equidist": 51, "sq2": 51, "xl": 51, "d2fdxdy": 51, "doit_numer": 51, "z0": [51, 203], "unifi": [51, 130, 185, 187, 188, 189, 191, 192, 204], "zeroth": [51, 191], "idiff": [51, 68], "r135": 51, "legaci": [51, 78, 87, 216], "v5_2": 51, "infunct": 51, "algebraiccomput": 51, "f_real": [51, 58], "f_real_inherit": [51, 58], "is_singular": [51, 58, 74], "holomorph": [51, 58, 76], "superfici": 51, "unexpect": [51, 227], "ss": [51, 187], "denom": [51, 186, 187, 191, 208], "_eval_expand_bas": 51, "_eval_expand_complex": 51, "shut": [51, 192], "unwant": [51, 214, 234], "alphabet": [51, 52, 101, 167, 184, 209, 229], "expand_hint": 51, "_eval_expand_hint": 51, "liabl": [51, 81], "metahint": 51, "myclass": 51, "_eval_expand_doubl": 51, "hyperexpand": [51, 59, 73, 76, 206], "div": [51, 184, 186, 187, 192, 196, 208, 266], "horner": [51, 129, 189, 192], "untouch": 51, "dkei": 51, "mixin": [51, 234], "maxn": [51, 55, 82], "subresult": [51, 187, 190, 192], "000100000000000000": 51, "maxprec": 51, "quadratur": [51, 55, 78, 212], "tanh": [51, 55, 58, 78, 193, 196, 208, 271], "oscillatori": [51, 55, 201], "osc": [51, 55], "advers": 51, "1e16": 51, "291": 51, "builtin": [51, 187, 196, 204, 237, 270], "speedup": [51, 87, 92, 189, 193, 235], "framework": [51, 114, 221, 227, 229, 235], "slice": [51, 81, 82, 87, 93, 187, 192, 202, 204, 208, 217, 234], "parametris": [51, 204], "element_kind": [51, 82, 204], "tuple_count": 51, "setkind": [51, 82, 254], "isprimit": 51, "_gcd_term": 51, "terms_gcd": [51, 187, 192], "entiti": [51, 61, 64, 65, 67, 68, 76, 114, 127, 177, 215, 249, 258, 267], "arguement": 51, "broad": [51, 266], "lex": [51, 79, 176, 184, 186, 187, 189, 192, 193, 195, 196, 208], "grlex": [51, 79, 176, 187, 192, 195, 196], "grevlex": [51, 79, 176, 184, 189, 192, 195, 196], "rev": 51, "unaffect": [51, 215], "_node": 51, "fastest": [51, 56, 78, 91, 92, 193], "undecor": 51, "ineffici": [51, 87, 186], "breaker": 51, "hash": [51, 187, 189, 197, 208, 212, 227, 229], "collis": [51, 90], "wast": [51, 88, 185], "candid": [51, 87, 91, 189, 208], "rng": 51, "getstat": 51, "intention": 51, "tn": 51, "td": [51, 196, 270], "randrang": 51, "999": [51, 55], "238": [51, 91], "randint": [51, 87, 189], "ri": [51, 196], "rv": [51, 205, 216, 234], "nonbas": 51, "postord": 51, "descend": [51, 183, 191, 229], "children": [51, 52, 186, 231], "subtre": [51, 196, 231], "educ": [52, 87], "cryptograph": 52, "encrypt": 52, "hide": [52, 196], "cipher": 52, "vigener": 52, "hill": [52, 59, 109, 128, 172, 178, 241], "bifid": 52, "rsa": 52, "kid": 52, "feedback": [52, 98, 101, 264], "elgam": 52, "plaintext": [52, 196], "ciphertext": 52, "monoalphabet": 52, "polyalphabet": 52, "crypto": 52, "az": [52, 209], "uppercas": [52, 206], "hello": [52, 234], "world": [52, 97, 117, 126, 234], "helloworld": 52, "check_and_join": 52, "padded_kei": 52, "puppi": 52, "opqrstuvwxi": 52, "puyoqrstvwx": 52, "artist": 52, "aphras": 52, "ara": 52, "hp": 52, "cycle_list": 52, "encipher_shift": 52, "msg": [52, 78], "decipher_shift": 52, "gonavybeatarmi": 52, "ct": [52, 80, 189], "hpobwzcfbubsnz": 52, "deciph": 52, "l1": [52, 61, 63, 64, 108, 111, 127, 187, 189, 192, 209, 216], "l2": [52, 63, 64, 108, 111, 148, 164, 187, 189, 216], "caesar": 52, "juliu": 52, "suetoniu": 52, "protect": [52, 196], "militari": 52, "nephew": 52, "augustu": 52, "reportedli": 52, "r136": 52, "caesar_ciph": 52, "r137": 52, "caesarsmethod": 52, "encipher_rot13": 52, "rot13": 52, "caeser": 52, "midwai": 52, "decipher_rot13": 52, "r138": 52, "decrypt": 52, "tbanilorngnezl": 52, "encipher_affin": 52, "_invers": 52, "cx": [52, 95], "recov": [52, 78, 167, 189, 191, 192, 209, 212], "decipher_affin": 52, "r139": 52, "affine_ciph": 52, "reciph": 52, "navi": 52, "beat": 52, "armi": 52, "trobmvenbgbalv": 52, "encipher_atbash": 52, "enciph": 52, "atbash": 52, "hebrew": 52, "decipher_atbash": 52, "tlmzebyvzgzinb": 52, "r140": 52, "encipher_substitut": 52, "oeyag": 52, "034": 52, "60n": 52, "v4b3": 52, "rm4": 52, "immateri": 52, "anyv": 52, "wherebi": 52, "r141": 52, "substitution_ciph": 52, "encipher_vigener": 52, "me": [52, 114, 129, 172, 196, 218], "mondai": 52, "qrgkkthrzqebpr": 52, "krypto": 52, "sculptur": 52, "cia": 52, "headquart": 52, "r143": 52, "decipher_vigener": 52, "alp": 52, "palimpsest": 52, "emufphzlrfaxyusdjkzldkrnshgnfivj": 52, "betweensubtleshadingandtheabsenc": 52, "blais": 52, "sixteenth": 52, "centuri": [52, 183], "diplomat": 52, "accid": [52, 235], "invent": [52, 191, 214, 265], "giovan": 52, "batista": 52, "belaso": 52, "1553": 52, "civil": [52, 94], "war": 52, "confederaci": 52, "brass": 52, "nsa": 52, "museum": 52, "fort": 52, "mead": 52, "r142": 52, "sender": 52, "assembl": [52, 76, 97, 116, 203], "concaten": [52, 82], "frequenc": [52, 78, 99, 101, 136, 138, 146, 163], "kasiski": 52, "discov": [52, 76, 105, 220, 267], "babbag": 52, "unbreak": 52, "ye": [52, 81, 212], "gonavybeatarmyyesyoucan": 52, "gold": 52, "auto_kei": 52, "goldbuggonavybeatarmyy": 52, "mcydwshkogamkzcelyfgayr": 52, "pt": [52, 60, 61, 62, 64, 65, 66, 67, 202], "vigenere_ciph": 52, "archiv": [52, 128, 209], "20071116100808": 52, "r144": 52, "filebox": 52, "vt": 52, "batman": 52, "goo": 52, "gl": 52, "ijr22d": 52, "decod": 52, "qrgk": 52, "kt": [52, 118], "hrzqe": 52, "bpr": 52, "meetmeonmondai": 52, "encipher_hil": 52, "z_": [52, 208], "r145": 52, "lester": 52, "1920": 52, "r146": 52, "polygraph": 52, "bare": [52, 109], "ceil": [52, 58, 91, 108, 196], "l_1": [52, 56, 102, 181, 206, 222], "l_t": 52, "c_t": 52, "l_i": [52, 181, 206], "decipher_hil": 52, "hill_ciph": 52, "june": [52, 87], "juli": [52, 209], "1929": 52, "306": 52, "312": [52, 172, 214, 241, 242], "ueqdueodoctcwq": 52, "st": [52, 78, 162], "hjeb": 52, "stqq": 52, "ispk": 52, "stzz": 52, "hd": 52, "ormv": 52, "IS": 52, "uiki": 52, "encipher_bifid": 52, "polybiu": 52, "printabl": 52, "bifid5": 52, "decipher_bifid": 52, "encipher_bifid5": 52, "encipher_bifid6": 52, "r147": 52, "bifid_ciph": 52, "ieilhhfstsfqy": 52, "ieilh": 52, "hfst": 52, "fqyej": 52, "bmtwmg": 52, "bio": 52, "gold_bug": 52, "hg2sfuei7t": 52, "pug": 52, "heldo": 52, "wor6d": 52, "bifid5_squar": 52, "5x5": 52, "cap": [52, 55, 162, 204, 215], "tradition": [52, 59], "decipher_bifid5": 52, "round_trip": 52, "josi": 52, "osi": 52, "iosi": 52, "qiq": 52, "1901": 52, "felix": 52, "delastel": 52, "onto": [52, 64, 65, 66, 76, 80, 87, 90, 92, 191], "helen": 52, "cryptanalysi": 52, "german": 52, "fridai": 52, "ieilehfstsfxe": 52, "okai": 52, "decipher_bifid6": 52, "8am": 52, "kfkljjhf5mmmktfrgpl": 52, "meetmeonmondayat8am": 52, "bifid6_squar": 52, "6x6": 52, "rsa_public_kei": 52, "totient": [52, 91], "carmichael": [52, 91], "p_n": [52, 56, 59, 78], "multiprim": 52, "land": 52, "rad": [52, 99, 114, 191], "reduced_toti": [52, 91], "uniquenss": 52, "rsa_private_kei": 52, "e_0": 52, "canonicalz": 52, "61": [52, 56, 67, 87, 91, 198], "3233": 52, "797": 52, "1577": 52, "multipow": 52, "cryptosystem": 52, "coprim": [52, 78, 91, 158, 189, 209], "30030": 52, "becam": [52, 123], "hardest": 52, "claim": [52, 180, 206, 215], "encipher_rsa": 52, "decipher_rsa": 52, "r148": 52, "rsa_": 52, "28cryptosystem": 52, "r149": 52, "cacr": 52, "uwaterloo": 52, "techreport": 52, "2006": [52, 205], "cacr2006": 52, "r150": 52, "springer": [52, 78, 91, 189, 190, 212], "1007": 52, "2fbfb0055738": 52, "r151": 52, "itii": 52, "manuscript": 52, "1381": 52, "2753": 52, "413": 52, "1193": 52, "823": 52, "r152": 52, "r153": 52, "r154": 52, "r155": 52, "bmod": [52, 196], "vice": [52, 78, 91, 94, 152, 172, 183, 187, 244, 245, 263], "versa": [52, 78, 91, 94, 152, 172, 183, 187, 244, 245, 263], "asymmetr": [52, 67], "puk": 52, "prk": 52, "chines": [52, 91, 189], "k_1": [52, 91, 189, 206], "k_2": 52, "k_n": [52, 189], "p_3": [52, 179], "k_3": 52, "moduli": [52, 91, 189], "2048": [52, 91, 196], "overhead": [52, 92, 193], "modular": [52, 91, 158, 188, 190, 215], "crt": [52, 91, 189], "overcompens": 52, "theorit": 52, "new_msg": 52, "kid_rsa_public_kei": 52, "grade": [52, 79, 176, 192], "school": [52, 205], "bob": [52, 108], "369": 52, "58": [52, 87, 222], "kid_rsa_private_kei": 52, "encipher_kid_rsa": 52, "200": [52, 82, 87, 91, 94, 99, 241], "161": 52, "decipher_kid_rsa": 52, "pub": [52, 241], "pri": 52, "encode_mors": 52, "sep": [52, 196, 213, 227], "mors": 52, "attack": 52, "flank": 52, "r156": 52, "morse_cod": 52, "decode_mors": 52, "word_sep": 52, "mc": [52, 118], "east": 52, "r157": 52, "lfsr_sequenc": 52, "lfsr": 52, "c_k": 52, "golomb": [52, 91], "g157": 52, "autocorrel": 52, "lim_": [52, 57, 59, 76, 78, 203, 261, 265], "balanc": [52, 128, 183, 216, 227], "solomon": 52, "aegean": 52, "park": 52, "laguna": 52, "1967": [52, 190], "lfsr_autocorrel": 52, "lfsr_connection_polynomi": 52, "massei": 52, "m158": 52, "jame": [52, 189], "synthesi": 52, "bch": 52, "tran": 52, "122": [52, 54, 59], "127": [52, 91], "elgamal_public_kei": 52, "elgamal_private_kei": 52, "1031": 52, "636": 52, "212": [52, 78, 190], "mathmat": 52, "dlp": 52, "is_primitive_root": [52, 91], "encipher_elgam": 52, "c2": [52, 61, 68, 82, 84, 148, 162, 204, 212, 214, 216, 243, 246, 272], "encryp": 52, "decipher_elgam": 52, "eucliden": 52, "dh_public_kei": 52, "dh_private_kei": 52, "_p": [52, 162, 187, 189, 191, 203, 206, 214], "_g": 52, "diffi": 52, "hellman": [52, 91], "publicli": 52, "secretli": 52, "dh_shared_kei": 52, "sk": 52, "gm_public_kei": 52, "goldwass": 52, "micali": 52, "gm_private_kei": 52, "b_n": [52, 56, 80, 183, 199], "jacobi_symbol": [52, 91], "reconstruct": [52, 87, 189, 266], "residuos": 52, "entropi": [52, 216], "encipher_gm": 52, "public_kei": 52, "gm": [52, 165], "decipher_gm": 52, "encipher_railf": 52, "rail": 52, "railfenc": 52, "horel": 52, "ollwd": 52, "r160": 52, "rail_fence_ciph": 52, "decipher_railf": 52, "diffgeom": 53, "resembl": [53, 59, 78, 221], "euclidean": [53, 64, 66, 172, 187, 189, 192], "r161": 53, "chart": [53, 182], "parameter": [53, 60, 61, 64, 67, 209], "r162": 53, "sussman": 53, "wisdom": 53, "farr": 53, "2013": [53, 63, 82, 269], "tranform": 53, "cartesian": [53, 94, 130, 135, 149, 152, 157, 177, 182, 183, 204, 215, 234, 244, 245, 247, 248], "polar": [53, 57, 59, 61, 67, 77, 94, 103, 132, 182, 204, 208, 215, 257], "relation_dict": 53, "car2d": 53, "pol": 53, "coordinatesymbol": 53, "jacobian": [53, 87, 126, 214], "jacobian_determin": 53, "r163": 53, "coordinate_system": 53, "base_oneform": 53, "coord_index": 53, "oneform": 53, "base_scalar": 53, "basescalarfield": 53, "base_vector": [53, 241], "coord_funct": 53, "to_si": 53, "coord": [53, 66, 68, 105, 160, 175], "immutabledensematrix": [53, 82, 83, 84, 85, 216, 235], "rn": 53, "r2_r": 53, "r2_p": 53, "jacobian_matrix": 53, "point_to_coord": 53, "coord_si": [53, 243], "imbu": 53, "difficulti": [53, 115], "arriv": [53, 189, 206, 208, 212, 216, 271], "inappropri": 53, "poin": 53, "unappropri": 53, "fy": [53, 182, 213], "ftheta": 53, "basevectorfield": 53, "point_p": 53, "point_r": 53, "s_field": 53, "dxi": 53, "v1": [53, 64, 87, 111, 129, 172, 173, 175, 216, 235, 241, 243, 244, 245, 246], "v2": [53, 64, 87, 111, 172, 173, 175, 235, 241, 243, 244, 245, 246], "v_1": [53, 191, 214], "v_2": [53, 191], "e_x": [53, 222], "e_i": [53, 183, 206, 222], "e_r": 53, "c_xy": 53, "c_xr": 53, "unfortun": [53, 55, 92, 195, 209], "e_rho": 53, "form_field": 53, "exterior": [53, 67], "dg": 53, "tensorproduct": [53, 159, 161, 217, 218], "multilinear": 53, "wedg": [53, 76], "tp1": 53, "tp": [53, 134, 161, 187], "wedgeproduct": 53, "wp1": 53, "liederiv": 53, "v_field": 53, "transport": 53, "pushforward": 53, "e_theta": 53, "basecovarderivativeop": 53, "christoffel": 53, "metric_to_christoffel_2nd": 53, "ch": [53, 87, 209], "cvd": 53, "covarderivativeop": 53, "intcurve_seri": 53, "vector_field": [53, 247], "start_point": 53, "dt": [53, 59, 117, 129, 171, 172, 174, 179, 180, 212, 271], "f_i": [53, 76, 87, 189, 193], "movement": 53, "intcurve_diffequ": 53, "init_cond": 53, "f_1": [53, 56, 59, 76, 101, 110, 113, 130, 183, 189, 192, 212], "f_0": [53, 56, 110, 189], "vectors_in_basi": 53, "kept": [53, 164, 180, 234, 266], "twoform_to_matrix": 53, "twoform": 53, "e_j": 53, "metric_to_christoffel_1st": 53, "levi": [53, 59, 216, 222], "civita": [53, 59, 222], "metric_to_riemann_compon": 53, "riemann": [53, 56, 57, 58, 76, 183, 208, 222], "non_trivial_metr": 53, "dtheta": 53, "drho": 53, "metric_to_ricci_compon": 53, "ricci": 53, "fft": [54, 129], "ifft": 54, "ntt": 54, "intt": 54, "fwht": 54, "ifwht": 54, "mobius_transform": 54, "inverse_mobius_transform": 54, "convolution_fft": 54, "convolution_ntt": 54, "convolution_fwht": 54, "convolution_subset": 54, "covering_product": 54, "intersecting_product": 54, "radix": 54, "r164": 54, "coolei": 54, "93tukey_fft_algorithm": 54, "r165": 54, "fastfouriertransform": 54, "r166": 54, "r167": 54, "ring": [54, 74, 87, 88, 179, 184, 185, 188, 189, 191, 192, 193, 194, 195, 196, 234], "pz": [54, 99, 222], "643": [54, 91], "767": 54, "387": 54, "415": 54, "384": 54, "353": [54, 87], "r168": 54, "apfloat": 54, "r169": 54, "numbertheoretictransform": 54, "r170": 54, "discrete_fourier_transform_": 54, "r171": 54, "r172": 54, "r173": 54, "wht": 54, "r174": 54, "hadamard_transform": 54, "r175": 54, "fast_walsh": 54, "93hadamard_transform": 54, "r176": 54, "r177": 54, "mobiu": [54, 91], "lattic": [54, 209], "bitmask": 54, "r178": 54, "b6bius_inversion_formula": 54, "r179": 54, "csail": 54, "mit": 54, "rrw": 54, "conv": 54, "r180": 54, "arxiv": [54, 87, 103, 234], "1211": 54, "0189": 54, "r181": 54, "r182": 54, "r183": 54, "888": 54, "444": 54, "1283": 54, "19351": 54, "14219": 54, "15502": 54, "44": [54, 56, 87, 91, 205, 216], "41": [54, 61, 87, 91, 187, 209], "63": [54, 87, 91], "r184": 54, "convolution_theorem": 54, "r185": 54, "333": [54, 91], "555": 54, "222": 54, "666": 54, "15555": 54, "19404": 54, "r186": 54, "r187": 54, "56": [54, 78, 91, 192], "68": [54, 79, 87, 91, 209], "48": [54, 61, 95, 209, 214, 216, 261], "2057": 54, "1870": 54, "r188": 54, "radioeng": 54, "cz": [54, 209], "fulltext": 54, "2002": [54, 183, 190, 193], "02_03_40_42": 54, "r189": 54, "r190": 54, "r191": 54, "AND": [54, 81, 248], "327": [54, 212], "r192": 54, "44288293815837": 55, "4429": 55, "4428829381583662470158809900606936986146216893757": 55, "28902548222223624241": 55, "091999668350375232456": 55, "14159265358979": [55, 59, 214], "333333333333333": [55, 186, 208], "1415926535": 55, "7182818284": 55, "100000": [55, 91, 99], "951": 55, "95678796130331164628399634646042209010610577945815": 55, "gmpy": [55, 186, 187, 270], "googl": [55, 181, 182, 215], "100000000000000": 55, "1000000000": 55, "125000000000000000000000000000": 55, "100000000000000005551115123126": 55, "100000000000000000000000000000": 55, "1415": 55, "uncertainti": [55, 167], "003": 55, "31417": 55, "propag": [55, 64, 133, 136], "5000": [55, 94], "50000000000000000000000000000": 55, "varphi": [55, 59, 191, 196, 212], "erron": 55, "goldenratio": [55, 197, 208], "34665576869e": 55, "208": [55, 192], "64613129282185e": 55, "60123853010113e": 55, "210": [55, 91, 209], "thousand": [55, 91, 260], "precisionexhaust": 55, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 55, "binet": 55, "104": 55, "1336": 55, "portion": [55, 67, 82, 87], "meaningless": 55, "012297": 55, "9562288417661": 55, "956": 55, "29128599706266": 55, "2912859970626635404072825905956005414986193682745": 55, "14159265358979323846264338328": 55, "integrand": [55, 59, 75, 76, 78, 206], "struggl": [55, 195], "346": 55, "34635637913639": 55, "dealt": [55, 76], "504067061906928": 55, "50406706190692837199": 55, "wrap_lin": [55, 78, 79, 87, 95, 176, 183, 184, 195, 196, 212], "intgrl": 55, "extrapol": [55, 203], "richardson": [55, 203, 215], "slowli": [55, 203], "64493406684823": 55, "577215664901533": 55, "57721566490153286060651209008240243104215933593992": 55, "10000000": [55, 192], "20000000": [55, 192], "693147255559946": 55, "tune": [55, 79, 176, 196], "worthwhil": 55, "hypergeometr": [55, 56, 58, 69, 71, 75, 76, 190, 200, 207, 212, 214, 216, 252, 271], "ramanujan": [55, 56, 91], "9801": 55, "1103": 55, "26390": 55, "396": [55, 114], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 55, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 55, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 55, "355": [55, 91, 190], "113": [55, 91, 209], "33333": [55, 78], "635": 55, "504": [55, 190], "130198866629986772369127970337": 55, "49": [55, 56, 91, 95, 189, 209], "___________": [55, 95, 212], "k_sym": 56, "binom": [56, 91, 216, 271], "dotsc": [56, 198], "j_1": [56, 141, 142, 159, 181, 198, 217], "j_2": [56, 141, 142, 159, 181, 198], "dotsb": [56, 198], "atop": [56, 59, 198, 206], "2j_2": [56, 198], "3j_2": [56, 198], "j_": [56, 59, 76, 78, 159, 198, 206, 265], "877": 56, "4140": 56, "21147": 56, "115975": 56, "846749014511809332450147": 56, "r193": 56, "bell_numb": 56, "r194": 56, "bellnumb": 56, "r195": 56, "bellpolynomi": 56, "6k": 56, "66": [56, 82, 87, 196], "1000001": 56, "r196": 56, "bernoulli_numb": 56, "r197": 56, "bernoulli_polynomi": 56, "r198": 56, "bernoullinumb": 56, "r199": 56, "bernoullipolynomi": 56, "_k": [56, 59, 78, 181, 191, 216], "expand_func": [56, 59], "6435": 56, "pascal": [56, 91], "4th": [56, 57, 73, 87, 91, 129], "195": 56, "r200": 56, "johndcook": 56, "binomial_coeffici": [56, 91], "c_n": [56, 59, 80, 212], "429": [56, 196], "1430": 56, "4862": 56, "39764993382373624267": 56, "020884341620842555705": 56, "r201": 56, "catalan_numb": 56, "r202": 56, "catalannumb": [56, 196], "r203": 56, "r204": 56, "geomet": [56, 183], "mathcircl": 56, "2j": [56, 189, 216], "r209": 56, "e_k": [56, 189], "1385": 56, "2702765": 56, "4096": 56, "r205": 56, "euler_numb": 56, "r206": 56, "eulernumb": 56, "r207": 56, "alternating_permut": 56, "r208": 56, "alternatingpermut": 56, "ii": [56, 78, 91, 192, 196, 212], "swing": 56, "derang": [56, 234], "r211": 56, "generate_derang": [56, 234], "r210": 56, "r212": 56, "double_factori": 56, "texttt": [56, 204], "r213": 56, "r214": 56, "paul": [56, 231], "235": 56, "268": 56, "1995": [56, 190, 208, 214], "f_z": [56, 177, 247], "f_2": [56, 76, 101, 110, 113, 130, 189, 206, 212], "r216": 56, "fibonacci_numb": 56, "r217": 56, "fibonaccinumb": 56, "t_0": [56, 209], "149": [56, 91], "r218": 56, "r219": 56, "tribonaccinumb": 56, "r220": 56, "oei": [56, 91], "a000073": 56, "137": [56, 87, 103], "205": [56, 76, 206], "144": [56, 78, 181], "5269": 56, "761": 56, "280": 56, "83711": 56, "27720": 56, "30247": 56, "9900": 56, "983697455232980674869851942390639915940": 56, "r221": 56, "harmonic_numb": 56, "r222": 56, "harmonicnumb": [56, 196], "r223": 56, "harmonicnumber2": 56, "l_0": [56, 102, 222, 223], "47": [56, 59, 87, 91, 103, 135, 167, 195], "76": [56, 87, 91, 189, 192], "r224": 56, "lucas_numb": 56, "r225": 56, "lucasnumb": 56, "2t": 56, "r226": 56, "genocchi_numb": 56, "r227": 56, "genocchinumb": 56, "irrelev": 56, "r228": 56, "number_theori": 56, "r229": 56, "pentagonal_number_theorem": 56, "pochhamm": [56, 196, 208], "r230": 56, "r231": 56, "pochhammer_symbol": 56, "274": 56, "225": [56, 91, 190], "511": 56, "9330": 56, "34105": 56, "42525": 56, "22827": 56, "5880": 56, "750": 56, "r232": 56, "stirling_numbers_of_the_first_kind": 56, "r233": 56, "stirling_numbers_of_the_second_kind": 56, "multiset": [56, 76, 231, 234], "babi": [56, 91, 234], "aa": [56, 181], "bb": [56, 181, 208, 234], "multiset_combin": [56, 234], "aab": [56, 234], "aabc": 56, "aaaabbbbcccc": 56, "m_1": [56, 101, 141, 159, 181, 209], "m_2": [56, 113, 130, 141, 159, 181], "m_k": 56, "r234": 56, "r235": 56, "tinyurl": 56, "cep849r": 56, "ba": [56, 234], "multiset_permut": [56, 234], "r236": 56, "aabbc": 56, "mississippi": [56, 234], "609": 56, "1521": 56, "1768": 56, "1224": [56, 91], "579": 56, "197": 56, "r237": 56, "undergradu": 56, "csse": 56, "uwa": 56, "au": 56, "cits7209": 56, "707106781186548": 57, "negativeon": [57, 266], "tangent": [57, 61, 63, 67, 78, 193, 212], "643501108793284": 57, "r238": 57, "ib": [57, 118], "complex_conjug": 57, "r242": 57, "r239": 57, "trigonometric_funct": 57, "r240": 57, "r241": 57, "elementaryfunct": 57, "trigonometryangl": 57, "r243": 57, "r244": 57, "r245": 57, "r246": 57, "r247": 57, "r248": 57, "cotang": [57, 193], "r249": 57, "r250": 57, "r251": 57, "secant": [57, 192], "r252": 57, "r253": 57, "r254": 57, "cosec": 57, "r255": 57, "r256": 57, "r257": 57, "unnorm": [57, 59], "qquad": [57, 167, 189], "jn": [57, 59, 159, 192, 196, 265], "spheric": [57, 58, 103, 141, 181, 182, 192, 241, 244, 245, 265], "r258": 57, "sinc_funct": 57, "r259": 57, "inverse_trigonometric_funct": 57, "r260": 57, "r261": 57, "r262": 57, "r263": 57, "r264": 57, "r265": 57, "r266": 57, "r267": 57, "arctan": [57, 193, 196], "r268": 57, "r269": 57, "arccot": [57, 196], "r273": 57, "r270": 57, "r271": 57, "r272": 57, "arcsec": [57, 196], "r274": 57, "r275": 57, "r276": 57, "arccsc": [57, 196], "quadrant": [57, 187, 215], "clock": [57, 205], "reurn": 57, "r277": 57, "r278": 57, "r279": 57, "arctan2": 57, "r280": 57, "hyperbolic_funct": 57, "r281": 57, "r282": 57, "arcsech": [57, 196], "imaginaryunit": [57, 196], "r283": 57, "r284": 57, "r285": 57, "arccsch": [57, 196], "567": 57, "r286": 57, "r287": 57, "ceilingfunct": 57, "r288": 57, "r289": 57, "floorfunct": 57, "r290": 57, "lfloor": [57, 187, 215, 216], "rfloor": [57, 187, 215, 216], "fractional_part": 57, "r291": 57, "fractionalpart": 57, "lambert": [57, 78, 193], "r292": 57, "w_k": 57, "635564016364870": 57, "34747534407696": 57, "41624341514535": 57, "lambert_w_funct": 57, "mathcal": [57, 76, 101, 127, 159, 181, 204], "cond": [57, 76, 78, 204], "piecewise_fold": 57, "folded_cond": 57, "ITE": [57, 81], "_eval_integr": [57, 78], "piecewise_integr": 57, "as_expr_set_pair": 57, "antideriv": [57, 59, 78, 212, 261], "conflict": [57, 91, 101, 114, 229], "supremum": [57, 204], "r293": 57, "directed_complete_partial_ord": 57, "r294": 57, "lattice_": 57, "28order": 57, "global_paramet": 57, "rootof": [57, 192], "rootoftool": [57, 87, 192], "integer_nthroot": [57, 91], "r295": 57, "square_root": 57, "r296": 57, "r297": 57, "root_of_un": 57, "r298": 57, "principal_valu": [57, 78], "r299": 57, "cuberoot": 57, "powdenest": 57, "misc": [57, 82, 237, 252], "r300": 57, "r301": 57, "r302": 57, "cube_root": 57, "r303": 57, "polar_lift": [58, 59, 208], "periodic_argu": 58, "principal_branch": [58, 76], "sec": [58, 78, 99, 191, 196, 205, 271], "csc": [58, 93, 196, 205], "acot": [58, 196], "asec": [58, 196], "acsc": [58, 196], "hyperbol": [58, 59, 193, 215, 267, 271], "hyperbolicfunct": 58, "coth": [58, 196, 208], "sech": [58, 196], "csch": [58, 196], "asinh": [58, 196], "acosh": [58, 196], "atanh": [58, 193, 196, 206], "acoth": [58, 196], "asech": [58, 196], "acsch": [58, 196], "roundfunct": 58, "lambertw": [58, 193, 196, 214, 215, 272], "exprcondpair": 58, "miscellan": [58, 233, 258, 259], "identityfunct": 58, "real_root": [58, 192, 214], "bell": [58, 146, 198, 234], "bernoulli": [58, 59, 196, 214, 216], "catalan": [58, 196], "subfactori": [58, 196, 234], "factorial2": [58, 163, 196], "fallingfactori": [58, 196], "luca": [58, 91, 196, 202], "genocchi": 58, "multifactori": 58, "nc": 58, "nt": [58, 234], "fresnel": [58, 135, 196, 206], "airi": [58, 78, 212], "spline": 58, "ellipt": [58, 61, 91, 183], "mathieu": [58, 196], "delta_funct": [59, 78], "int_": [59, 75, 76, 78, 199, 261, 265], "sum_i": [59, 203], "is_simpl": 59, "tensor_funct": 59, "kroneckerdelta": [59, 84, 162, 196, 208], "r304": 59, "deltafunct": [59, 78], "h0": 59, "electron": [59, 103, 205], "signal": [59, 81, 91, 99, 101, 129, 189, 266], "improp": [59, 78], "convolut": [59, 198, 252], "r305": 59, "heavisidestepfunct": 59, "r306": 59, "iv": [59, 193], "105": [59, 91, 192, 209], "parg": 59, "singularity_funct": 59, "singularityfunct": [59, 78, 94], "macaulai": 59, "heavisidediracdelta": 59, "r307": 59, "r308": 59, "r309": 59, "r310": 59, "r311": 59, "setminu": [59, 76], "17805383034794561964694160130": 59, "65092319930185633889": 59, "8724366472624298171": 59, "r312": 59, "r313": 59, "r314": 59, "loggammafunct": 59, "r315": 59, "19093197": 59, "5173168": 59, "ni": [59, 91], "r316": 59, "polygamma_funct": 59, "r317": 59, "polygammafunct": 59, "r318": 59, "r319": 59, "polygamma2": 59, "r320": 59, "digamma_funct": 59, "r321": 59, "digammafunct": 59, "r322": 59, "r323": 59, "trigamma_funct": 59, "r324": 59, "trigammafunct": 59, "r325": 59, "int_x": 59, "_1f_1": 59, "confluent": [59, 206], "xt": 59, "expint": [59, 196], "r326": 59, "incomplete_gamma_funct": 59, "upper_incomplete_gamma_funct": 59, "r327": 59, "r328": 59, "r329": 59, "gamma2": 59, "r330": 59, "gamma3": 59, "r331": 59, "exponential_integr": 59, "relation_with_other_funct": 59, "int_0": [59, 76, 78, 261, 271], "r332": 59, "lower_incomplete_gamma_funct": 59, "r333": 59, "r334": 59, "r335": 59, "r336": 59, "multigamma": 59, "gamma_p": 59, "r337": 59, "multivariate_gamma_funct": 59, "beta_funct": 59, "eulerian": 59, "02671848900111377452242355235388489324562": 59, "2112723729365330143": 59, "7655283165378005676": 59, "r338": 59, "r339": 59, "betafunct": 59, "r340": 59, "error_funct": 59, "999999984582742099719981147840": 59, "1296959": 59, "73071763923152794095062": 59, "r341": 59, "r342": 59, "r343": 59, "r344": 59, "0000000154172579002800188521596734869": 59, "r345": 59, "r346": 59, "r347": 59, "r348": 59, "5648024145755525987042919132": 59, "995322265018952734162069256367": 59, "r349": 59, "r350": 59, "r351": 59, "r352": 59, "179143454621291692285822705344": 59, "r353": 59, "inverse_funct": 59, "r354": 59, "inverseerf": [59, 196], "r355": 59, "r356": 59, "inverseerfc": [59, 196], "r357": 59, "inverseerf2": 59, "fresnelintegr": 59, "343415678363698242195300815958": 59, "fresnelc": [59, 196, 206], "r358": 59, "fresnel_integr": 59, "r359": 59, "r360": 59, "r361": 59, "r362": 59, "wrench": 59, "jr": 59, "vicki": 59, "allei": 59, "488253406075340754500223503357": 59, "r363": 59, "r364": 59, "r365": 59, "r366": 59, "r367": 59, "ei": [59, 76, 191, 196, 206, 212], "background": [59, 79, 123, 176, 179, 269], "cauchi": [59, 76, 78, 187, 212, 216], "219383934395520": 59, "21938393439552": 59, "shi": [59, 76, 196, 206], "e1": [59, 61, 68, 114, 186, 191, 203, 212, 215], "li": [59, 67, 78, 91, 162, 196, 250], "r368": 59, "r369": 59, "r370": 59, "sfu": [59, 78], "cbm": [59, 78], "aand": [59, 78], "page_228": 59, "int_1": [59, 76], "zt": [59, 76], "unbranch": [59, 76], "meijerg": [59, 70, 76, 78, 196, 216, 271], "postiv": 59, "r371": 59, "r372": 59, "expintegral": [59, 196], "r373": 59, "04516378011749278484458888919": 59, "0652795784357498247001125598": 59, "08346052231061726610939702133": 59, "soldner": 59, "findroot": [59, 214], "45136923488338": 59, "r374": 59, "logarithmic_integr": 59, "r375": 59, "logarithmicintegr": 59, "r376": 59, "r377": 59, "soldnersconst": 59, "92242131492155809316615998938": 59, "r378": 59, "r379": 59, "r380": 59, "r381": 59, "trigonometric_integr": 59, "_1": [59, 87, 172, 206, 235], "somewhat": [59, 78, 114, 187], "r382": 59, "r383": 59, "r384": 59, "laurent": [59, 187, 193, 212], "j_n": [59, 159], "r385": 59, "r386": 59, "r387": 59, "r388": 59, "yn": [59, 196, 202], "r389": 59, "i_": [59, 76, 206, 216, 217], "iz": 59, "r390": 59, "k_": [59, 76, 124, 125], "r391": 59, "hankel1": [59, 196], "hankel": [59, 78], "iy_": 59, "hankel2": [59, 196], "r392": 59, "hankelh1": [59, 196], "r393": 59, "hankelh2": [59, 196], "2z": [59, 215, 216], "orthopoli": [59, 192], "spherical_bessel_fn": [59, 192], "3j": [59, 141, 181], "099419756723640344491": 59, "054525080242173562897": 59, "r394": 59, "y_n": [59, 209], "18525034196069722536": 59, "014895573969924817587": 59, "r395": 59, "jn_zero": 59, "besseljzero": 59, "sph_jn": 59, "7635": 59, "095": 59, "323": [59, 91], "515": 59, "marcumq": 59, "marcum": 59, "q_m": 59, "r396": 59, "marcum_q": 59, "r397": 59, "airybas": 59, "airyai": [59, 196, 212], "ai": [59, 91], "airyaiprim": [59, 196], "22740742820168557599192443603787379946077222541710": 59, "airybi": [59, 196, 212], "airybiprim": [59, 196], "r398": 59, "airy_funct": 59, "r399": 59, "r400": 59, "encyclopediaofmath": 59, "r401": 59, "airyfunct": 59, "41230258795639848808323405461146104203453483447240": 59, "r402": 59, "r403": 59, "r404": 59, "r405": 59, "61825902074169104140626429133247528291577794512415": 59, "r406": 59, "r407": 59, "r408": 59, "r409": 59, "27879516692116952268509756941098324140300059345163": 59, "r410": 59, "r411": 59, "r412": 59, "r413": 59, "bspline": 59, "bspline_basi": 59, "knot": 59, "cubic": [59, 183, 192, 209, 214], "bspline_basis_set": 59, "r414": 59, "interpolating_splin": 59, "131": [59, 172], "39": [59, 91, 195], "interpolating_poli": [59, 192], "zeta_funct": 59, "hurwitz": 59, "admit": [59, 212], "circumst": [59, 191, 265], "lerch": 59, "transcend": 59, "lerchphi": [59, 196], "dirichlet_eta": [59, 196], "20205690315959": 59, "polylog": [59, 196], "r415": 59, "r416": 59, "hurwitz_zeta_funct": 59, "r417": 59, "dirichlet_eta_funct": 59, "polylogarithm": 59, "_s": [59, 162], "sheet": [59, 205], "phi_0": 59, "ze": 59, "r418": 59, "bateman": 59, "erdelyi": 59, "1953": [59, 191], "york": [59, 76, 128, 206, 214], "mcgraw": [59, 109, 128, 172, 178, 241], "r419": 59, "r420": 59, "lerch_transcend": 59, "stieltj": [59, 196], "gamma_": [59, 102, 104], "r421": 59, "stieltjes_const": 59, "ap": [59, 63, 206], "bq": [59, 184, 185, 206], "a_p": [59, 76, 206, 271], "b_q": [59, 76, 206, 271], "_pf_q": [59, 206, 212, 271], "unicod": [59, 79, 87, 176, 196, 227, 265], "r422": 59, "r423": 59, "generalized_hypergeometric_funct": 59, "convergence_stat": 59, "radius_of_converg": 59, "radiu": [59, 61, 65, 67, 120, 122, 131, 135, 182, 215, 216, 250], "meijer": [59, 69, 71, 77, 78, 261, 271], "mellin": [59, 77, 78], "barn": 59, "b_m": [59, 76, 214], "confusingli": 59, "int_l": [59, 76, 206], "contour": [59, 61, 76, 182, 206], "__1": 59, "subvector": 59, "aother": 59, "bm": 59, "bother": [59, 266], "slater": [59, 206], "allow_hyp": [59, 208], "subsum": 59, "r424": 59, "r425": 59, "meijer_g": 59, "get_period": [59, 76], "appellf1": [59, 196], "b2": [59, 91, 94, 95, 106, 114, 129, 172, 185, 187, 196, 206, 209, 212, 246], "appel": 59, "0063339426292673": 59, "172870711": 59, "659936": 59, "15605338197184": 59, "r426": 59, "appell_seri": 59, "r427": 59, "hypergeometricfunct": 59, "elliptic_integr": 59, "elliptic_k": [59, 196], "tfrac": [59, 212, 216], "eccentr": [59, 61], "50923695405127": 59, "625146415202697": 59, "elliptic_f": [59, 196], "r428": 59, "r429": 59, "ellipticintegr": 59, "elliptick": [59, 196], "909449841483": 59, "74720545502474": 59, "r430": 59, "r431": 59, "ellipticf": 59, "elliptic_": [59, 61, 196], "55203744279187": 59, "290764986058437": 59, "991052601328069": 59, "81879421395609": 59, "r432": 59, "r433": 59, "elliptice2": 59, "r434": 59, "elliptic": [59, 196], "elliptic_pi": [59, 196], "50232379629182": 59, "760939574180767": 59, "29136443417283": 59, "32555634906645": 59, "r435": 59, "r436": 59, "ellipticpi3": 59, "r437": 59, "ellipticpi": [59, 196], "mathieu_funct": 59, "mathieubas": 59, "mathieusprim": [59, 196], "mathieuc": [59, 196], "mathieucprim": [59, 196], "r438": 59, "r439": 59, "r440": 59, "r441": 59, "mathieuandspheroidalfunct": 59, "r442": 59, "r443": 59, "r444": 59, "r445": 59, "r446": 59, "r447": 59, "r448": 59, "r449": 59, "r450": 59, "r451": 59, "r452": 59, "r453": 59, "chebyshevu": [59, 196], "chebyshevt_root": 59, "chebyshevu_root": 59, "assoc_legendr": [59, 196], "jacobi_poli": [59, 192], "gegenbauer_poli": [59, 192], "chebyshevt_poli": [59, 192], "chebyshevu_poli": [59, 192], "hermite_poli": [59, 192], "legendre_poli": [59, 192], "laguerre_poli": [59, 192], "r454": 59, "jacobi_polynomi": 59, "r455": 59, "jacobipolynomi": 59, "r456": 59, "jacobip": [59, 196], "jacobi_norm": 59, "normilz": 59, "p_m": 59, "delta_": [59, 159, 167], "r457": 59, "r458": 59, "r459": 59, "r460": 59, "gegenbauer_polynomi": 59, "r461": 59, "gegenbauerpolynomi": 59, "r462": 59, "gegenbauerc3": 59, "r463": 59, "chebyshev_polynomi": 59, "r464": 59, "chebyshevpolynomialofthefirstkind": 59, "r465": 59, "chebyshevpolynomialofthesecondkind": 59, "r466": 59, "r467": 59, "u_n": [59, 78, 189, 191], "r468": 59, "r469": 59, "r470": 59, "r471": 59, "r472": 59, "chebyshev_root": 59, "r473": 59, "legendre_polynomi": 59, "r474": 59, "legendrepolynomi": 59, "r475": 59, "legendrep": [59, 196], "r476": 59, "legendrep2": 59, "r477": 59, "associated_legendre_polynomi": 59, "r478": 59, "r479": 59, "r480": 59, "r481": 59, "hermite_polynomi": 59, "r482": 59, "hermitepolynomi": 59, "r483": 59, "hermiteh": [59, 196], "l_n": [59, 78], "r484": 59, "laguerre_polynomi": 59, "r485": 59, "laguerrepolynomi": 59, "r486": 59, "laguerrel": [59, 196], "r487": 59, "laguerrel3": 59, "r488": 59, "generalized_laguerre_polynomi": 59, "r489": 59, "associatedlaguerrepolynomi": 59, "r490": 59, "r491": 59, "spherical_harmon": 59, "ynm": [59, 181], "ynm_c": 59, "znm": 59, "r492": 59, "r493": 59, "sphericalharmon": 59, "r494": 59, "sphericalharmonici": 59, "r495": 59, "r496": 59, "r497": 59, "r498": 59, "z_n": [59, 190], "r499": 59, "r500": 59, "r501": 59, "eijk": 59, "levicivita": [59, 87], "eval_levicivita": 59, "pseudotensor": 59, "delta_rang": [59, 162], "kroneck": [59, 161, 162, 217, 222], "r502": 59, "kronecker_delta": [59, 162], "indices_contain_equal_inform": [59, 162], "fermi": [59, 162], "above_fermi": [59, 162], "below_fermi": [59, 162], "is_above_fermi": [59, 162], "is_below_fermi": [59, 162], "is_only_below_fermi": [59, 162], "is_only_above_fermi": [59, 162], "killable_index": [59, 162], "preferred_index": [59, 162], "point2d": [60, 61, 62, 63, 64, 66, 67, 68], "arbitrary_point": [60, 61, 62, 63, 64, 65, 67], "polyfunc": [60, 192], "ambient_dimens": [60, 62, 64, 66], "plot_interv": [60, 61, 64, 67], "lower_bound": [60, 61, 64, 67], "upper_bound": [60, 61, 64, 67], "counterclockwis": [60, 61, 62, 66, 95], "geometryent": [60, 61, 62, 64, 66, 67, 68], "hradiu": 61, "vradiu": 61, "geometryerror": [61, 64, 67, 68], "radii": 61, "foci": 61, "periapsi": 61, "apoapsi": 61, "focus_dist": 61, "shortest": [61, 64, 67, 179, 202, 208, 212, 234], "auxiliary_circl": 61, "xmin": [61, 62, 64, 66, 67, 182], "ymin": [61, 62, 64, 66, 67, 182], "xmax": [61, 62, 64, 66, 67, 182], "ymax": [61, 62, 64, 66, 67, 182], "rectangl": [61, 62, 64, 66, 67, 182, 192], "director_circl": 61, "perpendicular": [61, 64, 65, 67, 80, 121, 135, 180], "director": 61, "130": 61, "r503": 61, "encloses_point": [61, 62, 67], "border": [61, 67], "_slope": 61, "slope": [61, 62, 64, 67, 94, 95, 99], "eq1": [61, 212, 214, 215], "eq2": [61, 81, 212, 215], "r504": 61, "108270": 61, "r505": 61, "equation_of_a_shifted_ellips": 61, "evolut": 61, "focal": [61, 131, 135], "100500": 61, "363": [61, 91, 190], "175": [61, 87, 189, 190], "is_tang": [61, 63], "tangent_lin": 61, "normal_lin": 61, "line2d": [61, 64, 67], "quartic": [61, 192, 214], "2020": [61, 141], "polar_second_moment_of_area": [61, 67], "moment": [61, 67, 94, 95, 116, 123, 125, 171, 182, 192, 209, 216], "constitu": [61, 67, 111, 172, 202, 241], "planar": [61, 67, 95, 135], "resist": [61, 67, 94, 95, 205], "deflect": [61, 67, 94, 95], "bend": [61, 67, 94, 96], "r506": 61, "polar_moment_of_inertia": [61, 67], "random_point": [61, 64, 65], "arb": 61, "364": 61, "notimpl": [61, 191], "second_moment_of_area": [61, 67], "centroid": [61, 67, 68, 94], "i_xx": [61, 67], "i_yi": [61, 67], "i_xi": [61, 67], "ellis": 61, "r507": 61, "list_of_second_moments_of_area": 61, "section_modulu": [61, 67], "sympify": [61, 67, 94, 97, 106, 111, 133, 136, 174], "farthest": [61, 67], "s_x": [61, 67], "s_y": [61, 67], "r508": 61, "semilatus_rectum": 61, "semi": [61, 64, 91], "latu": 61, "rectum": 61, "chord": 61, "conic": [61, 209, 241], "directrix": 61, "r509": 61, "semilatusrectum": 61, "r510": 61, "latus_rectum": 61, "collinear": [61, 63, 65, 66, 67, 182], "gx": 61, "hy": 61, "synonym": [61, 191], "p4": [61, 64, 66, 67, 182], "boundari": [62, 64, 94, 95, 175, 193, 204, 212, 216], "t2": [62, 67, 68, 91, 106, 111, 209, 216, 222], "ordering_of_class": 62, "is_similar": [62, 64, 67, 68], "uniform": [62, 182, 216], "enlarg": 62, "shrink": [62, 76], "parameter_valu": [62, 65], "pent": 62, "rpent": 62, "rcirc": 62, "entity1": 63, "entity2": 63, "zp": 63, "is_collinear": [63, 66], "segment2d": [63, 64, 67, 68], "wikipappu": 63, "bc": [63, 97, 234, 237, 246], "subs_point": 63, "p11": 63, "p12": 63, "p13": 63, "p21": 63, "p22": 63, "p23": 63, "ll1": 63, "ll2": 63, "ll3": 63, "ll4": 63, "ll5": 63, "ll6": 63, "pp1": 63, "pp2": 63, "pp3": 63, "encyclopedia": [63, 178], "apr": 63, "s_hexagon_theorem": 63, "clockwis": [63, 78, 82, 94, 95, 97], "overlap": [63, 68, 90, 183, 204, 237], "infanc": 63, "geometryresult": 63, "fair": [63, 216], "angle_between": [64, 65, 67, 172], "reflex": 64, "eman": 64, "readili": [64, 87], "sw": 64, "obtus": 64, "smallest_angle_between": 64, "line3d": [64, 65, 66], "is_perpendicular": [64, 65, 66, 67], "ray2d": [64, 67], "closing_angl": 64, "are_concurr": [64, 65], "concurr": [64, 65, 193], "l3": [64, 189], "l4": 64, "bisector": [64, 67], "p5": [64, 66, 67, 182], "p6": [64, 67, 182], "p7": [64, 67, 182], "segment3d": [64, 65], "direction_ratio": [64, 66], "is_parallel": [64, 65], "parallel_lin": 64, "perpendicular_lin": [64, 65], "perpendicular_seg": 64, "enpoint": 64, "reform": 64, "432": [64, 191], "92": [64, 190, 212, 216], "ccw": [64, 67], "ray3d": [64, 65, 135], "xdirect": 64, "ydirect": 64, "midpoint": [64, 66, 67, 78, 182, 246], "170": [64, 216], "341": 64, "perpendicular_bisector": 64, "linearentity2d": 64, "linearentity3d": [64, 65], "direction_cosin": [64, 66], "zdirect": 64, "normal_vector": [65, 135], "proce": [65, 126, 189, 191, 206, 214], "147": 65, "321": 65, "is_coplanar": 65, "perpendicualar": 65, "parallel_plan": 65, "on_circl": 65, "off_circl": 65, "perpendicular_plan": 65, "pt1": 65, "projection_lin": 65, "on_morph": 66, "affine_rank": 66, "are_coplanar": 66, "canberra_dist": 66, "canberra": 66, "geometricent": 66, "taxicab_dist": 66, "is_concycl": 66, "concycl": 66, "fewer": [66, 67, 126, 216, 261], "is_scalar_multipl": 66, "ambient": 66, "orthogonal_direct": 66, "taxicab": 66, "_nocheck": 66, "are_collinear": 66, "4x4": [66, 90, 134, 216], "travers": [67, 91, 107, 192, 205, 221, 231, 252, 266], "unrot": 67, "circumscrib": 67, "spin": [67, 103, 116, 148, 149, 157], "perimet": [67, 248], "contact": [67, 116, 119, 120, 121, 122, 179, 220], "38": [67, 87, 91, 196, 209, 211, 216], "cut_sect": 67, "upper_polygon": 67, "lower_polygon": 67, "upper_seg": 67, "lower_seg": 67, "r511": 67, "r512": 67, "paulbourk": 67, "polygonmesh": 67, "insidepoli": 67, "first_moment_of_area": 67, "q_x": [67, 179], "q_y": [67, 179], "625": [67, 250], "3125": [67, 216], "525": 67, "3000": [67, 94], "r513": 67, "skyciv": 67, "beam": [67, 97, 131, 134, 257], "bmd": 67, "r514": 67, "mechanicalc": 67, "poly1": 67, "poly2": 67, "interior": [67, 192, 204], "180": [67, 180, 190], "r515": 67, "r516": 67, "r517": 67, "apothem": 67, "interior_angl": 67, "exterior_angl": 67, "circumcircl": 67, "incircl": 67, "inradiu": 67, "inscrib": 67, "circumcent": 67, "circumradiu": 67, "leg": 67, "square_in_unit_circl": 67, "kite": 67, "asa": 67, "sa": [67, 192], "sss": 67, "altitud": 67, "orthocent": 67, "exradii": 67, "median": [67, 216, 258], "medial": 67, "nine_point_circl": 67, "straight": [67, 73, 99, 117, 179, 212], "eulerlin": 67, "equilater": 67, "coincid": [67, 87, 90, 108, 114, 183, 241, 245, 263], "excent": 67, "excircl": 67, "touch": [67, 116, 205], "r518": 67, "ly": [67, 87, 187], "exradiu": 67, "r519": 67, "r520": 67, "incent": 67, "is_equilater": 67, "is_isoscel": 67, "is_right": 67, "is_scalen": 67, "nine": [67, 196], "feet": 67, "real_num": 68, "hull": 68, "r521": 68, "graham_scan": 68, "r522": 68, "andrew": 68, "1979": [68, 167], "geomalgorithm": 68, "a10": 68, "_hull": 68, "t3": [68, 209], "mass": [68, 103, 104, 105, 106, 108, 109, 113, 114, 116, 117, 118, 120, 122, 123, 124, 125, 129, 130, 138, 163, 165, 166, 167, 177, 179, 227, 248, 249], "averag": [68, 78, 91, 189, 216], "qq": [69, 70, 72, 73, 74, 78, 183, 184, 185, 186, 188, 189, 191, 192, 193], "p_r": 69, "holonomic_funct": 69, "from_hyp": [70, 73], "holonomicfunct": [70, 71, 73], "from_meijerg": [70, 73], "initcond": [70, 72, 73], "expr_to_holonom": [70, 73, 74, 75], "lenic": [70, 72], "ground": [70, 116, 119, 120, 121, 122, 183, 186, 187, 189, 191, 192, 214, 270], "meijerint": [70, 72, 76, 78], "_rewrite1": [70, 76], "_convert_poly_rat_alg": [70, 72], "_create_t": [70, 72], "differentialoper": [71, 73, 151], "differentialoperatoralgebra": 71, "_create_lookup_t": [72, 76], "old_poly_r": [73, 74, 183, 186, 187], "to_expr": [73, 74, 75, 101], "to_sequ": 73, "n_0": [73, 189, 214, 215], "indici": [73, 74, 75, 212], "c_j": [73, 76, 206], "holonomicsequ": 73, "r523": 73, "hal": 73, "inria": [73, 78], "fr": [73, 78, 91, 109, 114, 116, 117, 120, 121, 124, 126, 129, 216], "00070025": 73, "r524": 73, "risc": [73, 212, 241], "jku": [73, 212, 241], "risc_2244": 73, "diplform": 73, "_recur": 73, "rk4": 73, "kutta": 73, "71828182845905": 73, "10517083333333": 73, "22140257085069": 73, "34985849706254": 73, "49182424008069": 73, "64872063859684": 73, "82211796209193": 73, "01375162659678": 73, "22553956329232": 73, "45960141378007": 73, "71827974413517": 73, "331": 73, "4641": 73, "61051": 73, "771561": 73, "9487171": 73, "14358881": 73, "357947691": 73, "5937424601": 73, "to_hyp": 73, "as_list": [73, 192], "to_meijerg": 73, "homogen": [74, 78, 87, 101, 187, 189, 192, 209, 212, 213, 216], "1_0": 74, "1_1": 74, "0_0": 74, "0_1": 74, "pyplot": [74, 129], "plt": [74, 129], "list_of_poli": 74, "weyl": [74, 80], "Ore": 74, "dxa": 74, "endomorph": [74, 191], "frobeniu": [75, 87, 91, 189, 190], "subtleti": 76, "recast": [76, 208, 214, 215], "branchpoint": 76, "crude": [76, 116, 182], "decre": 76, "biholomorph": 76, "mutual": [76, 180], "neighbourhood": 76, "evid": [76, 109, 121, 206], "peculiar": [76, 180], "throughout": [76, 81, 189, 199, 215, 263], "_split_mul": 76, "_mytyp": 76, "inequival": 76, "_mul_as_two_part": 76, "bx": [76, 216, 222], "twist": 76, "recognis": [76, 186, 206, 208], "anywai": [76, 208, 212], "analyitc": 76, "_rewrite_singl": 76, "_rewrite2": 76, "_rewrite_saxena_1": 76, "_rewrite_saxena": 76, "blogpost": 76, "remedi": 76, "exploit": [76, 228], "transpar": [76, 79, 176], "nessgrh": 76, "wordpress": [76, 209], "07": 76, "stade": 76, "c_u": 76, "d_1": [76, 167, 192, 216], "d_v": 76, "amalgam": 76, "prudnikov1990": [76, 206], "luke1969": [76, 206], "c_3": [76, 212], "c_4": 76, "visibl": [76, 182], "fulfil": [76, 181], "vee": [76, 81], "lceil": 76, "rceil": 76, "d_j": [76, 167, 206], "lambda_c": [76, 125], "lambda_": 76, "z_0": [76, 208], "z_1": 76, "a_i": [76, 167, 172, 180, 184, 189, 206], "c_5": 76, "c_6": 76, "c_7": 76, "c_8": 76, "lvert": 76, "rvert": 76, "c_9": 76, "versatil": 76, "bz": [76, 209, 222], "deform": [76, 95], "encircl": 76, "appeal": 76, "fox": 76, "obstacl": 76, "identif": [76, 215], "domin": [76, 82, 201, 203], "iT": 76, "omega_": 76, "disguis": 76, "meijerint_indefinit": 76, "meijerint_definit": 76, "meijerint_invers": 76, "kelli": [76, 206], "roach": [76, 206], "211": [76, 91, 192, 206, 212], "prudnikov": [76, 206], "yu": [76, 181, 206], "brychkov": [76, 206], "marichev": [76, 206], "gordon": [76, 141, 206], "breach": [76, 206], "_coeffexpvalueerror": 76, "_get_coeff_exp": 76, "_check_anteced": 76, "_check_antecedents_1": 76, "mt": 76, "_check_antecedents_invers": 76, "anteced": [76, 203], "_condsimp": 76, "hoc": 76, "simp": [76, 116, 172], "_dummi": 76, "_dummy_": 76, "_eval_cond": 76, "_expon": 76, "_find_splitting_point": 76, "fsp": 76, "_flip_g": 76, "_function": 76, "_guess_expans": 76, "sensibl": [76, 78], "_inflate_fox_h": 76, "_inflate_g": 76, "_int0oo": 76, "_int0oo_1": 76, "_int_invers": 76, "_is_analyt": 76, "almost": [76, 85, 93, 164, 182, 183, 187, 192, 193, 212, 216, 230, 231, 234, 265], "_meijerint_definite_2": 76, "expand_mul": 76, "trigexpand": 76, "_meijerint_definite_3": 76, "_meijerint_definite_4": 76, "only_doubl": 76, "_meijerint_indefinite_1": 76, "_mul_arg": 76, "_my_principal_branch": 76, "full_pb": 76, "nearer": 76, "superflu": 76, "opaqu": [76, 196], "fac": 76, "_rewrite_invers": 76, "costli": [76, 117, 267], "tx": [76, 269], "overview": [77, 184, 215, 248, 249], "argand": [77, 215], "lookup": [77, 78, 87, 91, 206], "laplac": [77, 78, 98, 99, 101, 216], "todo": [77, 140, 142, 146, 147, 151, 152, 154, 155, 156, 157, 158, 189, 196, 203, 221], "polytop": 77, "happili": [78, 220], "nonelementari": 78, "mellin_transform": 78, "bilater": 78, "mellintransform": 78, "integraltransform": 78, "nocond": 78, "inverse_mellin_transform": 78, "laplace_transform": [78, 101], "fourier_transform": 78, "hankel_transform": 78, "inverse_hankel_transform": 78, "suitabl": [78, 84, 93, 184, 186, 189, 191, 196, 206, 209, 212, 215, 217, 264], "inversemellintransform": 78, "attemp": 78, "laplacetransform": 78, "inverse_laplace_transform": 78, "singularit": [78, 126], "inverselaplacetransform": 78, "_fast_inverse_laplac": 78, "rootsum": [78, 192, 198], "fouriertransform": 78, "_fourier_transform": 78, "inverse_fourier_transform": 78, "sine_transform": 78, "inverse_sine_transform": 78, "cosine_transform": 78, "inverse_cosine_transform": 78, "bixk": 78, "inversefouriertransform": 78, "sinetransform": 78, "inversesinetransform": 78, "cosinetransform": 78, "inversecosinetransform": 78, "hankeltransform": 78, "ht": 78, "inversehankeltransform": 78, "_compute_transform": 78, "_as_integr": 78, "integraltransformerror": 78, "_name": 78, "_collapse_extra": 78, "needev": 78, "function_vari": 78, "transform_vari": 78, "lazard": [78, 189, 192], "rioboo": 78, "trager": 78, "horowitz": 78, "ostrogradski": 78, "ratint": 78, "rationaltool": [78, 192], "ratint_logpart": 78, "ratint_ratpart": 78, "r525": 78, "bronstein": [78, 190, 192, 198, 214], "verlag": [78, 190], "deg": [78, 99, 114, 184, 189, 191, 192], "q_i": [78, 110, 126], "_t": [78, 114, 129, 162, 171, 172, 175, 206, 216], "trigintegr": 78, "trigonometri": 78, "r526": 78, "integration_techniqu": 78, "deltaintegr": 78, "couldn": 78, "didn": [78, 87, 126], "singularityintegr": 78, "risch_integr": 78, "nonelementaryintegr": 78, "proven": [78, 91, 246, 263], "handle_first": 78, "separate_integr": 78, "rewrite_complex": 78, "forthcom": 78, "5109": 78, "outer": [78, 111, 127, 129, 145, 150, 151, 172, 175, 178, 180, 198, 204, 220, 241, 243, 244], "pop": [78, 209], "manualintegr": 78, "integral_step": 78, "student": [78, 205, 209, 216], "_i": [78, 162, 167, 193], "namedtupl": 78, "substep": 78, "sympy_gamma": 78, "app": 78, "intstep": 78, "urul": 78, "u_var": 78, "_u": [78, 162], "u_func": 78, "arctanrul": 78, "trigrul": 78, "rewriterul": 78, "addrul": 78, "powerrul": 78, "constanttimesrul": 78, "constantrul": 78, "norman": 78, "slowest": [78, 92], "retri": [78, 91], "degree_offset": 78, "unnecessary_permut": 78, "_try_heurisch": 78, "manuel": [78, 201], "poor": [78, 92], "man": [78, 190], "whittak": 78, "r527": 78, "sop": [78, 81], "cafe": 78, "pmint": 78, "r528": 78, "gedd": [78, 190], "stefanu": 78, "217": [78, 190], "r529": 78, "davenport": [78, 189, 190], "eurocam": 78, "lnc": [78, 190, 214], "157": [78, 91, 95, 190], "r530": 78, "iii": [78, 196, 212], "sigsam": 78, "bulletin": 78, "1982": [78, 181], "r531": 78, "transact": [78, 190], "1985": [78, 109, 128, 172, 241], "356": [78, 191, 214], "362": 78, "huge": [78, 91, 192, 232], "entail": 78, "delic": [78, 183], "albeit": [78, 244], "mimic": [78, 79, 176, 235], "moder": 78, "irrespect": [78, 209, 212, 237], "line_integr": 78, "as_sum": 78, "subinterv": 78, "trapezoid": [78, 87, 216], "730": 78, "809": 78, "decai": 78, "r532": 78, "riemann_sum": 78, "r533": 78, "cauchy_principal_valu": 78, "r534": 78, "cauchyprincipalvalu": 78, "int_a": 78, "uvar": 78, "ui": [78, 91], "accomplish": [78, 126, 129, 247], "3aissu": 78, "3aopen": 78, "3aintegr": 78, "gauss_legendr": 78, "n_digit": 78, "legendr": [78, 91, 192, 196, 209], "r535": 78, "w_i": [78, 131, 192, 212], "7746": 78, "55556": 78, "88889": 78, "86114": 78, "33998": 78, "34785": 78, "65215": 78, "gauss_laguerr": 78, "gauss_gen_laguerr": 78, "gauss_hermit": 78, "gauss_chebyshev_t": 78, "gauss_chebyshev_u": 78, "gauss_jacobi": 78, "gauss_lobatto": 78, "gaussian_quadratur": 78, "r536": 78, "fsu": 78, "jburkardt": 78, "cpp_src": 78, "legendre_rul": 78, "laguerr": [78, 192, 196], "r537": 78, "41577": 78, "2943": 78, "2899": 78, "71109": 78, "27852": 78, "010389": 78, "22285": 78, "1889": 78, "9927": 78, "7751": 78, "8375": 78, "983": 78, "45896": 78, "417": [78, 208], "11337": 78, "010399": 78, "00026102": 78, "9855e": 78, "93laguerre_quadratur": 78, "r538": 78, "laguerre_rul": 78, "hermit": [78, 82, 87, 88, 185, 191, 192, 196, 216], "r539": 78, "2247": 78, "29541": 78, "1816": 78, "3506": 78, "3358": 78, "43608": 78, "00453": 78, "15707": 78, "72463": 78, "hermite_quadratur": 78, "r540": 78, "hermite_rul": 78, "r541": 78, "gen_hermite_rul": 78, "r542": 78, "19016": 78, "7845": 78, "5253": 78, "4493": 78, "31413": 78, "00906": 78, "97851": 78, "9904": 78, "3193": 78, "712": 78, "53087": 78, "67721": 78, "11895": 78, "0023152": 78, "r543": 78, "gen_laguerre_rul": 78, "r544": 78, "86602": 78, "0472": 78, "96593": 78, "70711": 78, "25882": 78, "5236": 78, "93gauss_quadratur": 78, "r545": 78, "chebyshev1_rul": 78, "r546": 78, "3927": 78, "7854": 78, "90097": 78, "62349": 78, "22252": 78, "084489": 78, "27433": 78, "42658": 78, "r547": 78, "chebyshev2_rul": 78, "jacobi": [78, 91, 103, 192, 196], "r548": 78, "7063": 78, "0973": 78, "33795": 78, "87174": 78, "5917": 78, "2093": 78, "050584": 78, "22169": 78, "39439": 78, "93jacobi_quadratur": 78, "r549": 78, "jacobi_rul": 78, "r550": 78, "gegenbauer_rul": 78, "lobatto": 78, "r551": 78, "3333": 78, "44721": 78, "16667": 78, "83333": 78, "93lobatto_rul": 78, "r552": 78, "page_888": 78, "intpoli": 78, "chin": 78, "al": [78, 114, 141, 189, 205, 208], "2015": [78, 215], "unit_cub": 78, "polytope_integr": 78, "eric": [78, 190], "jean": 78, "lasserr": 78, "sukumar": 78, "nonconvex": 78, "967": 78, "981": 78, "dilbert": 78, "engr": 78, "ucdavi": 78, "suku": 78, "max_degre": [78, 192], "689": [78, 95], "21875": 78, "octahedron": 78, "trivari": 78, "enable_automatic_int_sympif": 79, "enable_automatic_symbol": 79, "init_ipython_sess": 79, "argv": [79, 227], "init_python_sess": 79, "use_latex": [79, 176, 270], "quiet": 79, "str_printer": [79, 176], "latex_print": [79, 176], "pylab": 79, "stringifi": [79, 176], "sstrrepr": [79, 176, 196], "lexograph": [79, 176], "gui": [79, 176], "statu": 79, "\u03b8": [79, 108, 134, 215], "int_to_integ": 79, "decistmt": 79, "f401": 79, "0x12": 79, "num_column": [79, 176, 196, 212], "no_glob": [79, 176], "ip": [79, 150, 156, 176], "forecolor": [79, 176], "backcolor": [79, 176], "fontsiz": [79, 176, 196], "10pt": [79, 176, 196], "latex_mod": [79, 176], "print_builtin": [79, 176], "interactiveconsol": [79, 176], "preambl": [79, 176, 196], "handwritten": [79, 176], "ctan": [79, 176], "pkg": [79, 176], "dvi": [79, 176, 196], "foreground": [79, 176], "black": [79, 147, 158, 176, 196, 270], "white": [79, 176, 216], "documentclass": [79, 176, 196], "dpi": [79, 176], "u03b8": 79, "dvip": 79, "r553": 79, "r554": 79, "the_68_standard_colors_known_to_dvip": 79, "config": 79, "root_system": 80, "rootsystem": 80, "cartantyp": 80, "cartan": 80, "subalgebra": 80, "adjoint": [80, 82, 87, 139, 143], "hyperplan": 80, "k_y": 80, "r555": 80, "r556": 80, "humphrei": 80, "add_as_root": 80, "root1": 80, "root2": 80, "add_simple_root": 80, "newroot": 80, "all_root": [80, 91, 192], "cartan_matrix": 80, "dynkin_diagram": 80, "dynkin": 80, "root_spac": 80, "simple_root": 80, "type_a": 80, "typea": 80, "basic_root": 80, "iin": 80, "jth": [80, 215], "ijth": 80, "cartan_typ": 80, "highest_root": 80, "lie_algebra": 80, "positive_root": 80, "type_b": 80, "typeb": 80, "b4": 80, "b3": [80, 114, 129, 172, 246], "type_c": 80, "typec": 80, "c4": [80, 82, 84, 212], "type_d": 80, "d4": [80, 216], "dmension": 80, "type_": 80, "e6": 80, "type_f": 80, "typef": 80, "f_4": [80, 110], "f4": [80, 182], "type_g": 80, "typeg": 80, "weyl_group": 80, "weylgroup": 80, "semisimpl": 80, "isometri": 80, "coxeter_diagram": 80, "undirect": [80, 234], "s_is_j": 80, "delete_doubl": 80, "element_ord": 80, "weylelt": 80, "group_nam": 80, "group_ord": 80, "192": 80, "matrix_form": 80, "cartantype_gener": 80, "standard_cartan": 80, "dynkindiagram": 80, "cartanmatrix": 80, "sopform": 81, "minterm": 81, "dontcar": 81, "simplified_pair": 81, "combo": 81, "outcom": [81, 165, 216], "r557": 81, "quin": 81, "mccluskey_algorithm": 81, "posform": 81, "r558": 81, "anfform": 81, "truthvalu": 81, "anf": 81, "funciton": 81, "zhegalkin": 81, "r559": 81, "zhegalkin_polynomi": 81, "as_set": 81, "booleantru": 81, "doubt": [81, 114], "greet": 81, "booleanfals": 81, "universalset": 81, "nand": 81, "xnor": 81, "gate": [81, 142, 147, 149, 155, 156, 158], "perspect": [81, 91, 101, 167, 182, 229, 245, 249], "multiplex": 81, "conjunct": [81, 182, 206, 227, 271], "disjunct": 81, "to_anf": 81, "oplu": [81, 146], "to_cnf": 81, "cnf": 81, "mccluskei": 81, "to_dnf": 81, "to_nnf": 81, "nnf": 81, "is_anf": 81, "is_cnf": 81, "is_dnf": 81, "is_nnf": 81, "gateinputcount": 81, "simplify_log": 81, "fewest": [81, 156], "bool_map": 81, "bool1": 81, "bool2": 81, "function1": 81, "function2": 81, "distribute_and_over_or": 81, "distribute_or_over_and": 81, "distribute_xor_over_and": 81, "eliminate_impl": 81, "truth_tabl": 81, "ibin": [81, 234], "integer_to_term": 81, "0001111011": [81, 234], "1101111000": [81, 234], "term_to_integ": 81, "bool_maxterm": 81, "maxterm": 81, "complement": [81, 84, 192, 215], "r560": 81, "canonical_normal_form": 81, "indexing_maxterm": 81, "bool_minterm": 81, "patter": 81, "r561": 81, "indexing_minterm": 81, "bool_monomi": 81, "enumar": 81, "anf_coeff": 81, "to_int_repr": 81, "all_model": 81, "unsatisfi": 81, "use_model": 81, "unsat": 81, "matrixbas": [82, 83, 84, 86, 185], "dirac": [82, 87, 99, 103, 104, 160, 196], "__abs__": [82, 187], "__add__": [82, 187, 191], "shapeerror": [82, 84, 87], "__len__": 82, "96": [82, 87, 216], "mismatch": 82, "matrix_multiply_elementwis": [82, 87], "applyfunc": [82, 83, 87, 121, 172, 217], "col": [82, 84, 87, 90, 101, 129, 185, 191, 267], "col_del": [82, 87, 267], "col_join": [82, 87, 116], "col_insert": [82, 267], "row_insert": [82, 267], "row_join": [82, 87, 116], "companion": [82, 84], "c0": [82, 84, 203, 212, 214], "sparsematrix": [82, 86, 87, 90, 197, 208], "diag": [82, 84, 87, 90, 129, 185, 222, 267], "immutablematrix": [82, 84, 86, 101, 172, 216, 241, 243, 267], "dens": [82, 84, 86, 87, 185, 188, 191, 192, 217, 255, 266], "blockmatrix": [82, 84, 87], "sparsetool": [82, 90], "kth": [82, 91], "rowslist": [82, 185], "colslist": 82, "submatrix": [82, 87, 189, 216], "get_diag_block": [82, 84, 87], "decoupl": 82, "hstack": [82, 185], "is_anti_symmetr": 82, "is_diagon": [82, 87], "is_low": [82, 185], "is_upp": [82, 185], "matrixeigen": [82, 86], "is_diagonaliz": [82, 87], "is_hermitian": [82, 87], "is_lower_hessenberg": 82, "hessenberg": [82, 87], "superdiagon": 82, "is_upper_hessenberg": 82, "is_strongly_diagonally_domin": 82, "strongli": [82, 87, 185, 234], "m1": [82, 87, 91, 95, 133, 141, 159, 161, 165, 209, 212, 217, 222], "subdiagon": [82, 87], "is_weakly_diagonally_domin": 82, "weakli": [82, 234], "vacuou": 82, "jordan_block": [82, 87], "eigenv": [82, 87, 114, 116, 129, 156, 265, 267], "insuffici": 82, "rectangular": [82, 87, 204, 215, 244], "r562": 82, "jordan_matrix": [82, 212], "dotprodsimp": 82, "blowup": 82, "multiply_elementwis": [82, 87], "hadamard": [82, 84, 87, 146, 147, 158, 196], "elementwis": [82, 84, 87, 217], "300": [82, 87, 91, 94, 177, 182, 193, 249], "bmatrix": [82, 84, 87, 117, 124, 125, 126, 127, 172, 180, 209], "a_0": [82, 87, 199, 209, 212, 217, 271], "vdot": [82, 84, 87, 167], "alpha_0": 82, "alpha_1": [82, 91, 191], "alpha_": [82, 181], "permute_col": 82, "permute_row": 82, "mulsimp": 82, "rmultipli": 82, "__rmul__": 82, "rot90": 82, "anticlockwis": 82, "row_del": [82, 87, 267], "todod": 82, "tolist": [82, 217], "vec": [82, 87, 129, 172, 181, 189, 246, 247, 249], "vech": 82, "check_symmetri": 82, "vstack": [82, 185], "wilkinson": 82, "w_": [82, 191], "wminu": 82, "wplu": 82, "r563": 82, "mathwork": [82, 99, 216, 267], "cleve": 82, "04": [82, 216], "r564": 82, "claredon": 82, "oxford": 82, "662": 82, "intm": 82, "undefinedkind": [82, 204], "tuplekind": [82, 204], "mutabledensematrix": [83, 185, 237], "densematrix": [83, 87], "ldldecomposit": [83, 87], "ldl": [83, 87], "choleski": [83, 87], "ludecomposit": [83, 84, 87, 267], "qrdecomposit": [83, 87], "as_immut": 83, "lower_triangular_solv": [83, 87], "upper_triangular_solv": [83, 87], "gauss_jordan_solv": [83, 87], "cholesky_solv": [83, 87], "diagonal_solv": [83, 87], "ldlsolv": [83, 87], "lusolv": [83, 87, 110, 126, 130, 214, 267], "qrsolv": [83, 87], "pinv_solv": [83, 87], "permutedim": [84, 217, 218], "arraytensorproduct": [84, 218], "from_index_summ": 84, "first_index": 84, "last_index": 84, "longrightarrow": 84, "matpow": [84, 196], "hadamardproduct": [84, 196], "hadamard_product": 84, "hadamardpow": [84, 196], "ddot": [84, 87, 117, 125, 176, 179, 196, 271], "functionmatrix": 84, "lamda": [84, 196, 204, 216, 267], "lazili": [84, 202], "342923500": 84, "permutationmatrix": [84, 87], "matrixpermut": 84, "companionmatrix": 84, "matrixset": [84, 204], "submatric": [84, 87, 185, 216], "block_collaps": 84, "dat": [84, 234], "irregular": [84, 87], "ldudecomposit": 84, "ldu": 84, "2x2": [84, 90, 131, 185, 212], "noninvertiblematrixerror": [84, 267], "udldecomposit": 84, "lu": [84, 87, 185, 190], "udl": 84, "schur": 84, "penros": [84, 87], "pinv": [84, 87], "r565": 84, "schur_compl": 84, "blockdiagmatrix": [84, 87], "diag_block": 84, "alias": [85, 187], "bridg": [85, 97, 114, 235], "tension": 85, "matrixdetermin": 86, "matrixreduct": 86, "matrixsubspac": 86, "matrixcalculu": 86, "immutablesparsematrix": 86, "gramschmidt": 87, "m2": [87, 91, 95, 111, 133, 141, 159, 161, 165, 191, 209, 212, 217, 222], "126": [87, 91, 195], "150": [87, 101, 209], "v3": [87, 172, 175, 246], "glue": 87, "m3": [87, 141, 209, 217], "adj": 87, "qr": 87, "cheat": 87, "soln": 87, "gram": [87, 167, 169], "schmidt": 87, "out1": 87, "out2": 87, "1692": 87, "1551": 87, "423": 87, "6707": 87, "spot": [87, 130], "eigenvector": [87, 114, 156, 157, 181], "nullspac": [87, 185], "adjug": 87, "berkowitz": 87, "bareiss": 87, "cofactor_matrix": 87, "charpoli": [87, 185, 267], "_simplifi": 87, "purepoli": [87, 192], "samuelson": 87, "minor_submatrix": 87, "iszerofunc": [87, 267], "barei": 87, "det_lu": 87, "functiontyp": 87, "_iszero": [87, 267], "_is_zero_after_expand_mul": 87, "unrecogn": 87, "nonsquarematrixerror": [87, 212], "i3": [87, 102, 114, 129, 222], "perman": 87, "ryser": 87, "450": 87, "r566": 87, "prof": 87, "ben": 87, "berkelei": 87, "bernd": 87, "ban275": 87, "r567": 87, "permanent_": 87, "r568": 87, "r569": 87, "0904": 87, "3251": 87, "echelon_form": [87, 267], "with_pivot": 87, "echelon": [87, 185, 215, 267], "elementary_col_op": 87, "kn": [87, 94, 95], "col1": 87, "col2": 87, "km": [87, 91, 105, 109, 116, 117, 120, 121, 124, 126, 129, 168], "elementary_row_op": 87, "row1": 87, "row2": 87, "is_echelon": [87, 267], "rref": [87, 185], "pivot": [87, 185, 267], "normalize_last": 87, "rref_matrix": [87, 185], "rref_pivot": [87, 185], "301369863013699": 87, "712328767123288": 87, "noramlize_last": 87, "subspac": [87, 191], "columnspac": [87, 185], "rowspac": [87, 185], "orthonorm": [87, 129, 157, 180, 244], "rankcheck": 87, "r570": 87, "93schmidt_process": 87, "eigen": [87, 138], "bidiagonal_decomposit": 87, "ubv": 87, "bidiagon": 87, "hang": [87, 117, 121, 212, 213], "bidiagn": 87, "r571": 87, "golub": 87, "van": [87, 91, 190], "loan": 87, "r572": 87, "vslobodi": 87, "household": 87, "r573": 87, "r574": 87, "reals_onli": 87, "throw": [87, 93, 114, 191, 209, 215], "error_when_incomplet": 87, "eig": [87, 114, 129], "matrixerror": 87, "got": [87, 183, 186, 189, 192, 195, 227, 228, 234, 235, 263, 265, 266], "abel": 87, "ruffini": 87, "eigenvect": [87, 114, 129, 156, 267], "tidi": 87, "artifact": 87, "ret": 87, "eigenspac": 87, "rag": 87, "a_3": 87, "diagonaliz": [87, 267], "is_indefinit": 87, "semidefinit": [87, 216], "plot3d": [87, 182], "is_positive_definit": 87, "is_positive_semidefinit": 87, "hire": [87, 94, 95, 99, 182, 199], "is_negative_definit": 87, "is_negative_semidefinit": 87, "defer": [87, 238], "r575": 87, "definiteness_of_a_matrix": 87, "r576": 87, "positivedefinitematrix": 87, "r577": 87, "amer": 87, "259": 87, "264": [87, 214], "r578": 87, "r579": 87, "r580": 87, "r581": 87, "r582": 87, "r583": 87, "r584": 87, "r585": 87, "r586": 87, "r587": 87, "r588": 87, "r589": 87, "jordan_form": 87, "calc_transform": 87, "left_eigenvect": 87, "singular_valu": 87, "condition_numb": 87, "hessian": 87, "wronskian": [87, 212], "simpfunc": 87, "permutebkwd": 87, "permutefwd": 87, "lucombin": 87, "defici": [87, 91, 215], "matrixi": 87, "ludecomposition_simpl": [87, 267], "ludecompositionff": 87, "pa": [87, 109, 111, 124, 127, 130], "r590": 87, "zhou": 87, "jeffrei": [87, 208], "frontier": [87, 204], "china": 87, "67": [87, 190], "2008": [87, 181, 190, 192, 196], "row_swap": 87, "compres": 87, "permute_backward": 87, "permute_forward": 87, "u_": 87, "intiuit": 87, "lu_": 87, "_find_reasonable_pivot": 87, "lu_solv": [87, 185], "qr_solv": 87, "augument": 87, "167": 87, "158": [87, 95], "27261": 87, "30625": 87, "348": 87, "1914": 87, "6125": 87, "30589": 87, "198": 87, "1225": 87, "q_aug": 87, "r_aug": 87, "analytic_func": 87, "connected_compon": [87, 234], "connected_components_decomposit": 87, "relax": [87, 93], "3x1": 87, "1x3": 87, "conjugate_convent": 87, "dual": [87, 154, 160], "anti_symmetr": 87, "speak": [87, 191, 247], "freevar": 87, "underdetermin": [87, 214, 215], "free_var_index": 87, "sol": [87, 209, 212, 213, 214], "tau0": [87, 215, 216], "tau1": 87, "taus_zero": 87, "sol_uniqu": 87, "r591": 87, "gaussian_elimin": 87, "try_block_diag": 87, "inverse_g": [87, 267], "inverse_lu": [87, 267], "inverse_adj": [87, 267], "inverse_ch": 87, "inverse_ldl": 87, "inverse_qr": 87, "inv_mod": 87, "cof": 87, "inverse_block": 87, "blockwis": 87, "ntop": 87, "key2bound": 87, "key2ij": 87, "reciproc": [87, 216, 271], "fro": 87, "sing": 87, "spectral": 87, "rd": [87, 114, 196], "pseudoinvers": 87, "r592": 87, "penrose_pseudoinvers": 87, "arbitrary_matrix": 87, "wn_m": 87, "_w0_0": 87, "_w1_0": 87, "_w2_0": 87, "59": [87, 212], "r593": 87, "obtaining_all_solutions_of_a_linear_system": 87, "print_nonzero": [87, 234], "symb": [87, 196], "rank_decomposit": 87, "r594": 87, "rank_factor": 87, "r595": 87, "piziak": 87, "odel": 87, "magazin": 87, "193": [87, 99], "2307": 87, "2690882": 87, "singular_value_decomposit": 87, "condens": [87, 215], "orthogn": 87, "v_aug": 87, "u_aug": 87, "s_aug": 87, "gj": 87, "solve_least_squar": 87, "strongly_connected_compon": [87, 185, 234], "62": [87, 189], "strongly_connected_components_decomposit": 87, "rowstart": 87, "rowend": 87, "rowsep": 87, "colsep": 87, "strprinter": [87, 176, 259], "upper_hessenberg_decomposit": 87, "213": 87, "134": 87, "216": [87, 189], "hessenbergdecomposit": 87, "jordan_cel": 87, "varlist": 87, "r596": 87, "hessian_matrix": 87, "vlist": 87, "r597": 87, "casoratian": 87, "kernel": [87, 183, 189, 191, 214], "vanish": [87, 162, 189, 192, 195, 212, 241], "rsolve_hyp": [87, 214], "randmatrix": 87, "percent": [87, 215], "prng": 87, "percentag": [87, 91], "46": [87, 94, 167, 195, 214, 216], "list2numpi": 87, "dtype": [87, 92, 183, 185, 186, 187, 196, 235], "matrix2numpi": 87, "symarrai": 87, "ndarrai": [87, 216, 222, 228], "prefix_i1_i2_": 87, "_2": [87, 171, 172, 212], "a_0_0": 87, "a_0_1": 87, "a_0_2": 87, "a_1_0": 87, "a_1_1": 87, "a_1_2": 87, "a_0_0_0": 87, "a_0_0_1": 87, "a_0_1_0": 87, "a_0_1_1": 87, "a_0_2_0": 87, "a_0_2_1": 87, "a_1_0_0": 87, "a_1_0_1": 87, "a_1_1_0": 87, "a_1_1_1": 87, "a_1_2_0": 87, "a_1_2_1": 87, "rot_axis1": 87, "rot_axis2": 87, "rot_axis3": 87, "a2idx": 87, "normalform": [88, 185], "hermite_normal_form": [88, 185, 191], "check_rank": [88, 185], "hnf": [88, 185, 191], "explos": [88, 185], "believ": [88, 91, 185], "dmdomainerror": [88, 185], "dmshapeerror": [88, 185], "r598": 88, "cohen": [88, 185, 190, 191], "mutablesparsematrix": 89, "_doktocsr": 90, "csr": 90, "ja": 90, "ia": 90, "_csrtodok": 90, "dok": 90, "1x1": [90, 216], "vert": [90, 177, 180, 249], "saw": [90, 186, 271], "dynam": [91, 98, 99, 101, 105, 107, 109, 110, 113, 116, 123, 124, 125, 126, 127, 128, 129, 130, 171, 172, 174, 175, 179, 180, 231, 232, 241], "eratosthen": 91, "_reset": [91, 192], "_list": 91, "extend_to_no": 91, "mobiusrang": 91, "primerang": 91, "10th": 91, "totientrang": 91, "1e11": 91, "50000": 91, "primal": [91, 183], "1299709": 91, "r599": 91, "prime_number_theorem": 91, "table_of_": 91, "cf": [91, 189], "28x": 91, "2c_x_": 91, "2f_log_x": 91, "2c_and_li": 91, "r600": 91, "approximations_for_the_nth_prime_numb": 91, "r601": 91, "27_number": 91, "arr1": 91, "arr2": 91, "prevprim": 91, "9th": 91, "nextprim": 91, "occupi": [91, 162, 222], "conjectur": [91, 189], "twin": 91, "bertrand": 91, "brocard": 91, "primori": 91, "r602": 91, "r603": 91, "utm": 91, "postul": 91, "r604": 91, "s_postul": 91, "primefactor": 91, "argu": 91, "cycle_length": 91, "nmax": 91, "brent": [91, 231], "floyd": 91, "cycle_detect": 91, "17737": 91, "20000": 91, "compositepi": 91, "831": 91, "smoothness_p": 91, "sm": [91, 114, 129, 183], "psm": 91, "govern": 91, "10431": 91, "annot": [91, 182, 196], "21477639576571": 91, "4410317": 91, "1787": 91, "4869863": 91, "2434931": 91, "multiplicity_in_factori": 91, "nfac": 91, "52818775009509558395695966887": 91, "is2pow": 91, "pollard_rho": 91, "1234": [91, 209], "max_step": 91, "pollard": [91, 212], "leader": 91, "16843009": 91, "32767": 91, "4i": 91, "3i": 91, "2489": 91, "1482": 91, "285": [91, 214], "leadup": 91, "r605": 91, "crandal": 91, "carl": [91, 231], "pomer": [91, 231], "229": 91, "231": [91, 172], "pollard_pm1": 91, "ilcm": 91, "likelihood": 91, "1009": 91, "igcd": [91, 184], "am": [91, 167, 196], "255": 91, "crack": 91, "617": 91, "1786": 91, "worst": [91, 192, 212], "scenario": [91, 216], "divisisor": 91, "realist": 91, "r606": 91, "236": 91, "r607": 91, "washington": 91, "2007": [91, 128, 231], "spring": [91, 106, 109, 114, 118], "ent": 91, "node81": 91, "r608": 91, "toronto": 91, "yuvalf": 91, "use_ecm": 91, "65537": [91, 195], "1407633717262338957430697921446883": 91, "991": 91, "202916782076162456022877024859": 91, "4200": 91, "1764": 91, "toggl": [91, 182], "12345678910111213141516": 91, "2507191691": 91, "1231026625769": 91, "factorrat": 91, "rat": 91, "987": 91, "10000000001": 91, "99009901": 91, "divisor_count": 91, "tim": [91, 234], "stackoverflow": [91, 234, 237], "1010381": 91, "proper_divisor": 91, "proper_divisor_count": 91, "udivisor": 91, "udivisor_count": 91, "r609": 91, "unitary_divisor": 91, "r610": 91, "unitarydivisor": 91, "r611": 91, "unitarydivisorfunct": 91, "antidivisor": 91, "r612": 91, "margin": [91, 101, 182, 216], "antidivisor_count": 91, "a066272": 91, "a066272a": 91, "r613": 91, "r614": 91, "27s_totient_funct": 91, "r615": 91, "totientfunct": 91, "r616": 91, "carmichael_funct": 91, "r617": 91, "carmichaelfunct": 91, "divisor_sigma": 91, "sigma_k": 91, "m_i": [91, 189], "m_ik": 91, "r618": 91, "divisor_funct": 91, "udivisor_sigma": 91, "47450": 91, "152": 91, "r619": 91, "core_t": 91, "core_2": 91, "squarefre": [91, 191], "cubefre": 91, "9424": 91, "1178": 91, "379238": 91, "square_factor": 91, "r620": 91, "free_integ": 91, "squarefree_cor": 91, "primenu": 91, "r621": 91, "primeomega": 91, "r622": 91, "mersenne_prime_expon": 91, "mersenn": 91, "4423": 91, "r623": 91, "perfectnumb": 91, "r624": 91, "perfect_numb": 91, "is_mersenne_prim": 91, "r625": 91, "mersenneprim": 91, "abund": 91, "is_abund": 91, "r626": 91, "abundantnumb": 91, "is_defici": 91, "r627": 91, "deficientnumb": 91, "is_amic": 91, "amic": 91, "220": [91, 192], "r628": 91, "amicable_numb": 91, "symmetric_residu": 91, "v_i": [91, 191, 214], "65": [91, 101, 189, 216], "639985": [91, 189], "912285": [91, 189], "954": 91, "gf_crt": [91, 189], "solve_congru": [91, 189], "programm": [91, 196], "galoistool": [91, 189], "crt1": 91, "4536": 91, "252": 91, "756": 91, "crt2": 91, "remainder_modulus_pair": 91, "mi": [91, 196], "k1": [91, 129, 160, 186, 187, 189], "k2": [91, 129, 186], "c_kn": 91, "binomial_coefficients_list": 91, "multinomial_coeffici": 91, "k_m": 91, "k_i": [91, 189, 206], "yann": 91, "laigl": 91, "chapui": 91, "permiss": [91, 181], "multinomial_coefficients_iter": 91, "_tupl": 91, "m53": 91, "partitions_": 91, "npartit": 91, "hardi": 91, "rademach": [91, 216], "r629": 91, "1958": [91, 181], "partitionfunctionp": 91, "is_euler_pseudoprim": 91, "pseudoprim": 91, "r630": 91, "euler_pseudoprim": 91, "prep": [91, 212, 213], "r631": 91, "mersenneforum": 91, "showpost": 91, "110896": 91, "mr": 91, "miller": 91, "rabin": 91, "wit": 91, "1373651": 91, "479001599": 91, "r632": 91, "135": 91, "138": 91, "93rabin_primality_test": 91, "deterministic_vari": 91, "is_lucas_prp": 91, "selfridg": 91, "377": 91, "1159": 91, "1829": 91, "3827": 91, "5459": 91, "5777": 91, "9071": 91, "9179": 91, "bailli": 91, "wagstaff": 91, "1980": [91, 234], "mpq": [91, 186, 188], "lucaspseudoprim": 91, "a217120": 91, "lucas_pseudoprim": 91, "is_strong_lucas_prp": 91, "bpsw": 91, "10877": 91, "16109": 91, "18971": 91, "a217255": 91, "psw_primality_test": 91, "is_extra_strong_lucas_prp": 91, "grantham": 91, "mo": [91, 129, 196], "jone": [91, 134], "preprint": 91, "a217719": 91, "perl": 91, "counterexampl": [91, 271], "989": 91, "3239": 91, "jon": 91, "mcom": 91, "234": 91, "01197": 91, "bisect": [91, 192, 214], "1e3": 91, "1e23": [91, 237], "near_int": 91, "strong_pseudoprim": 91, "is_gaussian_prim": 91, "r633": 91, "gaussian_prim": 91, "residue_ntheori": 91, "n_order": 91, "cong": [91, 189], "primitive_root": [91, 191], "r634": 91, "stein": [91, 212], "r635": 91, "hackman": 91, "2009": [91, 181], "sqrt_mod": 91, "sqrt_mod_it": 91, "quadratic_residu": 91, "nthroot_mod": 91, "109": [91, 190, 209], "is_nthpow_residu": 91, "r636": 91, "is_quad_residu": 91, "legendre_symbol": 91, "genfrac": 91, "nonresidu": 91, "alpha_2": [91, 191], "alpha_k": 91, "discrete_log": 91, "prime_ord": 91, "giant": [91, 215], "pohlig": 91, "r637": 91, "discretelogarithm": 91, "r638": 91, "cryptographi": [91, 251, 258], "menez": 91, "vanston": 91, "continued_fract": 91, "continued_fraction_period": 91, "continued_fraction_reduc": 91, "continued_fraction_converg": 91, "continued_fraction_iter": 91, "106": 91, "103993": 91, "33102": 91, "104348": 91, "33215": 91, "208341": 91, "66317": 91, "292": 91, "r639": 91, "discrimin": [91, 187, 189, 191, 192], "r640": 91, "periodic_continued_fract": 91, "r641": 91, "rosen": 91, "379": [91, 192], "381": 91, "januari": 91, "1992": [91, 190, 214], "233": [91, 190, 212], "718281835": 91, "287": 91, "count_digit": 91, "1111339": 91, "0xfa": 91, "c77": 91, "is_palindrom": [91, 234], "palindrom": 91, "0o121": 91, "oct": 91, "0o171": 91, "fermion": [91, 162], "r642": 91, "b6bius_funct": 91, "r643": 91, "thoma": [91, 128], "koshi": 91, "egyptian_fract": 91, "greedi": [91, 189, 205, 208], "egyptian": 91, "r644": 91, "jewett": 91, "takenouchi": 91, "3192": 91, "1118": 91, "2580": 91, "sylvest": [91, 189], "r645": 91, "seldom": 91, "blow": 91, "doubli": 91, "exhibit": [91, 181, 191, 205], "singli": 91, "tendenc": 91, "r646": 91, "1921": 91, "golumb": 91, "1962": 91, "propos": 91, "bleicher": 91, "1972": 91, "r647": 91, "420": [91, 209], "140": 91, "574": 91, "2788": 91, "6460": 91, "11590": 91, "33062": 91, "113820": 91, "greedy_algorithm_for_egyptian_fract": 91, "ic": [91, 212], "uci": 91, "eppstein": 91, "numth": 91, "egypt": 91, "ami": 91, "ektf": 91, "hu": 91, "finalpdf": 91, "ami_42_from129to134": 91, "bbp_pi": 91, "pi_hex_digit": 91, "hex": 91, "3243f6a8885a30": 91, "324": [91, 190], "r648": 91, "numberworld": 91, "subexponenti": 91, "comfort": [91, 92], "15154262241479": 91, "15423094826093": 91, "799333555511111": 91, "809709509409109": 91, "888888877777777": 91, "914148152112161": 91, "factoris": [91, 186, 187, 212], "max_curv": 91, "lenstra": 91, "repeatedli": [91, 102, 228], "ecm_one_factor": 91, "pseudorandom": [91, 234], "25645121643901801": 91, "5394769": 91, "4753701529": 91, "9804659461513846513": 91, "4641991": 91, "2112166839943": 91, "7060005655815754299976961394452809": 91, "6988699669998001": 91, "1010203040506070809": 91, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 91, "2709077133180915240135586837960864768806330782747": 91, "248": 91, "prime_bound": 91, "error_term": 91, "siq": 91, "modn": 91, "mulipl": 91, "r649": 91, "semanticscholar": 91, "5c52": 91, "8a975c1405bd35c65993abf5a4edb667c1db": 91, "r650": 91, "rieselprim": 91, "ziki": 91, "initializing_quadratic_siev": 91, "5915587277": 91, "3267000013": 91, "facilit": [92, 123, 133, 178, 227], "ship": 92, "000507214304613640": 92, "microsecond": 92, "000507214304614": 92, "hundr": [92, 265], "nanosecond": 92, "84147098": [92, 235, 260], "84119981": 92, "84092844": 92, "05426074": 92, "05433146": 92, "05440211": 92, "confer": [92, 269], "nano": 92, "manufactur": 92, "asnumpi": 92, "compliat": 92, "jnp": 92, "asarrai": 92, "84147096": 92, "8411998": 92, "05426079": 92, "05433151": 92, "autowrap": [92, 221, 229, 233, 253, 259], "implemented_funct": [92, 228, 235], "effort": [92, 187, 189], "50u": 92, "1u": 92, "10n": 92, "sympy_pars": 93, "local_dict": 93, "lambda_not": 93, "repeated_decim": 93, "auto_numb": 93, "factorial_not": 93, "global_dict": 93, "standard_transform": 93, "implicit_multiplication_appl": 93, "implicit_appl": 93, "implicit_multipl": 93, "convert_equals_sign": 93, "function_exponenti": 93, "stringify_expr": 93, "eval_expr": 93, "name_dict": 93, "fullform": 93, "setdelai": 93, "datatyp": [93, 187, 196, 229], "split_symbol": 93, "split_symbols_custom": 93, "_token_splitt": 93, "can_split": 93, "unsplitt": 93, "10sin": 93, "3xyz": 93, "2111": 93, "latex2sympi": 93, "typograph": 93, "parse_latex": 93, "stricter": 93, "liber": [93, 105, 265], "618": 93, "latexparsingerror": 93, "sym_expr": 93, "sympyexpress": 93, "source_cod": 93, "return_expr": 93, "definiton": 93, "src2": 93, "convert_to_expr": 93, "convert_to_c": 93, "src3": 93, "convert_to_python": 93, "src_code": 93, "filenam": [93, 196, 227, 228, 229, 237], "convert_to_fortran": 93, "continuum_mechan": [94, 95, 97], "elastic_modulu": 94, "second_mo": 94, "base_char": 94, "withstand": [94, 95], "character": [94, 95, 177, 180, 203, 216, 222, 249], "profil": 94, "shear": [94, 95], "downward": [94, 95, 97, 191], "apply_load": [94, 95, 97], "bc_deflect": [94, 95], "boundary_condit": 94, "solve_for_reaction_load": [94, 95], "shear_forc": [94, 95], "bending_mo": [94, 95], "applied_load": 94, "nm": [94, 95, 160, 217], "pointload": [94, 95], "ramp": [94, 95, 100], "parabol": 94, "apply_support": [94, 97], "loc": 94, "freedom": [94, 108, 109, 115, 117, 123, 216], "roller": [94, 95, 97], "upward": [94, 191], "r_10": 94, "r_30": 94, "4000": [94, 95], "bc_slope": [94, 95], "cross_sect": 94, "elast": [94, 95], "12000": 94, "draw": [94, 142, 196, 216, 258], "pictori": 94, "positv": 94, "ild_moment": 94, "ild_react": 94, "reaction": [94, 95, 97], "ild_shear": 94, "axial": [94, 131], "hing": [94, 95], "cantilev": [94, 95], "inertia": [94, 95, 104, 105, 106, 113, 114, 116, 118, 120, 121, 122, 123, 129, 172, 178, 179, 180, 191], "666666666666667": [94, 95], "max_bmoment": 94, "max_deflect": 94, "max_shear_forc": 94, "plot_bending_mo": [94, 95], "gpa": 94, "400": [94, 182, 192], "13750": 94, "31250": 94, "plot_deflect": [94, 95], "00138541666666667": 94, "86458333333333e": 94, "04166666666667e": 94, "20833333333333e": 94, "51041666666667e": 94, "plot_ild_mo": 94, "solve_for_ild_mo": 94, "1kn": 94, "r_0": 94, "r_8": 94, "solve_for_ild_react": 94, "plot_ild_react": 94, "5kn": 94, "r_7": 94, "plotgrid": [94, 258], "plot_ild_shear": 94, "solve_for_ild_shear": 94, "plot_loading_result": [94, 95], "subplot": [94, 182], "plot_shear_forc": [94, 95], "plot_shear_stress": 94, "stress": 94, "6875": 94, "2500": 94, "15625": [94, 169], "plot_slop": [94, 95], "59375e": 94, "125e": 94, "08333333333333e": 94, "0001953125": 94, "point_cflexur": 94, "overhang": [94, 95], "10kn": 94, "20kn": [94, 95], "3kn": 94, "reaction_load": [94, 95, 97], "remove_load": [94, 97, 106], "shear_stress": 94, "beam3d": 94, "shear_modulu": 94, "apply_moment_load": 94, "solve_slope_deflect": 94, "r651": 94, "home": [94, 191, 209, 216, 227], "aau": 94, "jc": 94, "femtesemest": 94, "beams3d": 94, "axial_forc": 94, "axial_stress": 94, "load_vector": 94, "max_bending_mo": 94, "16000": 94, "495": 94, "10793": 94, "6400": 94, "301": [94, 206, 209], "560": 94, "2400": 94, "moment_load_vector": 94, "40000": 94, "4013": 94, "90300": 94, "1520": 94, "903": 94, "1600": [94, 95], "172": 94, "polar_mo": 94, "i1": [94, 102, 114, 129, 222], "1350": 94, "torsional_mo": 94, "torsion": 94, "_________________": 95, "________________": [95, 212], "_______________v": 95, "_______________": 95, "equilibrium": [95, 116, 126], "20e9": 95, "25e": 95, "______________________________________________": 95, "_______________________________________________": 95, "r\u2081": 95, "r\u2082": 95, "______________________": 95, "________________________": 95, "8kn": 95, "_____________": 95, "1m": 95, "3m": 95, "2m": 95, "5m": [95, 231], "679": 95, "12kn": 95, "________________________________": 95, "____________________________________________________": 95, "o____________________________________________________": 95, "4m": 95, "concentr": [95, 216], "_____________________________________": 95, "m\u2081": 95, "m\u2082": 95, "connector": 95, "_____________________": 95, "_______________________": 95, "_____________________o_______________________": 95, "oooo": [95, 234], "r\u2083": 95, "_______i_______": 95, "flexur": 95, "rigid": [95, 97, 106, 109, 111, 114, 116, 118, 123, 129, 172, 179], "____________": 95, "____________o________________________": 95, "a\u2081": [95, 271], "a\u2082": [95, 271], "six": [95, 196, 209, 215, 216], "joint": [97, 118, 123], "add_nod": 97, "node_1": 97, "node_2": 97, "node_3": 97, "node_4": 97, "add_memb": 97, "member_1": 97, "member_2": 97, "member_3": 97, "member_4": 97, "member_5": 97, "270": 97, "360": 97, "change_member_label": 97, "new_label": 97, "change_node_label": 97, "bc_new": 97, "internal_forc": 97, "member_label": 97, "node_label": 97, "node_posit": 97, "remove_memb": 97, "remove_nod": 97, "remove_support": 97, "lti": [98, 99, 100], "transferfunct": [98, 99, 101], "interconnect": [98, 101], "mimo": [98, 101], "transferfunctionmatrix": [98, 101], "mimoseri": [98, 101], "mimoparallel": [98, 101], "mimofeedback": [98, 101], "control_plot": 99, "pole_zero_plot": 99, "pole_color": 99, "blue": [99, 182, 196], "pole_markers": 99, "zero_color": 99, "orang": 99, "zero_markers": 99, "show_ax": 99, "marker": [99, 182], "sisolineartimeinvari": [99, 101], "markers": 99, "tf1": [99, 101], "pole_zero_numerical_data": 99, "r652": 99, "93zero_plot": 99, "siso": [99, 101], "8660254j": 99, "bode_plot": 99, "initial_exp": 99, "final_exp": 99, "freq_unit": 99, "phase_unit": 99, "semilog": 99, "hz": 99, "hertz": 99, "bode_magnitude_plot": 99, "bode_phase_plot": 99, "bode_magnitude_numerical_data": 99, "5148378120533502e": 99, "68437": 99, "36188804005": 99, "020599914256786": 99, "0205999155219505": 99, "4117304087953": 99, "00000000260573": 99, "bode_phase_numerical_data": 99, "4472354033813751e": 99, "035581932165858e": 99, "47577": 99, "3248186011": 99, "67884": 99, "09326036123": 99, "5000000000291665e": 99, "6180885085e": 99, "08895483066e": 99, "1415085799262523": 99, "14155265358979": 99, "impulse_response_plot": 99, "lower_limit": [99, 261], "upper_limit": [99, 261], "step_response_plot": 99, "ramp_response_plot": 99, "r653": 99, "impulse_response_numerical_data": 99, "nb_of_point": [99, 182], "lineover1drangeseri": [99, 182], "amplitud": [99, 136], "06616480200395854": 99, "854500743565858": 99, "9999999799999999": 99, "7042848373025861": 99, "170748906965121e": 99, "1901263495547205e": 99, "r654": 99, "step_response_numerical_data": 99, "025413462339411542": 99, "0484508722725343": 99, "670250533855183": 99, "844291913708725": 99, "023844582399907256": 99, "042894276802320226": 99, "828770759094287e": 99, "456457160755703e": 99, "mx": [99, 142, 203], "r655": 99, "ramp_funct": 99, "ramp_response_numerical_data": 99, "12166980856813935": 99, "861246379582118": 99, "4504508011325967e": 99, "006046440489058766": 99, "12499999999568202": 99, "12499999999661349": 99, "bode": 100, "impuls": [100, 101], "den": [101, 187, 208, 212], "superscript": [101, 196], "tf2": 101, "tf3": 101, "tf4": 101, "tf5": 101, "tf6": 101, "500000000000000": 101, "tf7": 101, "tf8": 101, "tf9": 101, "tf10": 101, "tf11": 101, "tf12": 101, "r656": 101, "transfer_funct": 101, "r657": 101, "dc_gain": 101, "dc": [101, 125], "from_rational_express": 101, "zerodivisionerror": [101, 187, 225, 235], "complexinfin": 101, "tf": [101, 235], "is_biprop": 101, "is_prop": 101, "is_stabl": 101, "is_strictly_prop": 101, "sys1": 101, "sys2": 101, "feedforward": 101, "fed": 101, "sit": [101, 180], "plant": 101, "compulsori": 101, "tf_1": 101, "tf_2": 101, "tf_3": 101, "tf_4": 101, "tfm_1": 101, "num_input": 101, "num_output": 101, "tfm_2": 101, "tf_5": 101, "tf_6": 101, "tf_7": 101, "tf_8": 101, "tfm_3": 101, "tfm_4": 101, "tfm_5": 101, "tfm_6": 101, "tf_9": 101, "tf_10": 101, "tfm_7": 101, "tfm_8": 101, "tfm_9": 101, "tfm_10": 101, "tfm_11": 101, "tfm_12": 101, "elem_pol": 101, "elem_zero": 101, "from_matrix": [101, 185], "m_tf": 101, "tfm": 101, "tfm1": 101, "tfm2": 101, "g4": 101, "tfm3": 101, "mimolineartimeinvari": 101, "mat_a": 101, "mat_b": 101, "mat_c": 101, "tfm_a": 101, "tfm_b": 101, "tfm_c": 101, "expr_1": 101, "expr_2": 101, "expr_3": 101, "expr_4": 101, "plant_mat": 101, "controller_mat": 101, "neg_feedback": 101, "hep": 102, "gamma_matric": [102, 104], "gammamatrix": 102, "lorentzindex": 102, "gammamatrixhead": 102, "extract_type_ten": 102, "gamma_trac": 102, "i0": [102, 134, 222], "i2": [102, 114, 129, 222], "i4": [102, 222], "i5": 102, "ps": 102, "qs": [102, 109, 256], "kahane_simplifi": 102, "spinor": 102, "behind": [102, 114, 126, 166, 185, 205, 208, 212, 215, 257, 263], "rearrang": [102, 109, 124, 125, 146, 212], "ta": [102, 205], "tb": [102, 205, 227], "tc": [102, 187, 192, 205], "joseph": [102, 190], "kahan": 102, "octob": 102, "1968": 102, "simplify_gpgp": 102, "e_nl": [103, 163], "hartre": 103, "helium": 103, "2209": 103, "e_nl_dirac": 103, "spin_up": 103, "035999037000": 103, "relativist": 103, "angular": [103, 106, 108, 111, 116, 117, 118, 120, 122, 123, 126, 129, 131, 135, 136, 138, 141, 159, 163, 172, 175, 181], "momentum": [103, 111, 114, 123, 129, 140, 141, 159, 163, 181, 222], "light": [103, 134, 167, 176, 183], "035999037": 103, "1012": 103, "3627": 103, "500006656595360": 103, "125002080189006": 103, "125000416028342": 103, "0555562951740285": 103, "0555558020932949": 103, "0555556377366884": 103, "psi_nlm": 103, "wave": [103, 132, 133, 134, 199, 257], "psi_": [103, 138], "nlm": 103, "radial": [103, 117, 163], "nl": [103, 163], "magnet": [103, 133, 177, 249], "azimuth": 103, "wf": [103, 116], "abs_sqrd": 103, "silver": 103, "94": [103, 190], "141": 103, "4418": 103, "mdft": 104, "mgamma": 104, "gamma_5": 104, "gamma_0": 104, "gamma_3": 104, "r658": 104, "msigma": 104, "pauli": [104, 257], "sigma_i": [104, 216], "r659": 104, "pauli_matric": [104, 137], "pat_matrix": 104, "unansw": [105, 171], "kane": [105, 114, 119, 123, 128, 129, 171, 172, 241], "q1d": [105, 114, 116, 117, 120, 121, 122, 124, 125, 126, 127, 171, 176, 180], "q2d": [105, 114, 116, 117, 120, 121, 122, 124, 125, 175, 176], "q3d": [105, 120, 121, 122, 124], "kinemat": [105, 108, 109, 113, 114, 116, 117, 118, 120, 122, 124, 126, 127, 129, 130, 172, 178, 180], "dyad": [105, 129, 244], "mprint": [105, 120, 121, 122, 123, 124], "mpprint": [105, 123, 124], "mlatex": [105, 123], "sub_dict": [105, 107, 116], "msub": [105, 123, 126], "cleaner": [105, 129, 212], "gsl": [105, 229], "lsoda": 105, "penalti": 105, "masscent": [106, 108, 111, 127, 129], "central_inertia": [106, 111, 118], "possess": [106, 127, 222], "name_of_bodi": 106, "ixx": [106, 111, 172], "body_inertia": 106, "torqu": [106, 109, 113, 118, 124, 125, 129], "ang_vel_in": [106, 108, 114, 120, 121, 129, 172, 179], "set_ang_vel": [106, 111, 114, 116, 120, 121, 126, 127, 129, 130, 172, 174, 175, 179], "apply_forc": [106, 118], "reaction_bodi": [106, 118], "reaction_point": 106, "oppposit": 106, "desri": 106, "force1": 106, "b_masscent": 106, "b_frame": 106, "newtonion": 106, "spring_forc": 106, "n_frame": 106, "apply_torqu": [106, 118], "torquess": 106, "torque1": 106, "b1_frame": 106, "b2_frame": 106, "clear_load": 106, "dcm": [106, 108, 114, 116, 129, 172, 179, 180, 241], "orient_axi": [106, 172, 174], "kinetic_energi": [106, 123, 127, 129], "kinet": [106, 109, 111, 123], "inerti": [106, 109, 111, 116, 117, 120, 124, 125, 127, 129], "set_vel": [106, 109, 111, 114, 116, 117, 120, 121, 122, 124, 125, 126, 127, 129, 130, 175, 179], "b_ixx": 106, "b_mass": 106, "masscenter_vel": [106, 108], "smart": [107, 126, 203, 209, 212], "sub1": [107, 196], "sub2": [107, 196], "reference_fram": [107, 172], "child": [108, 186, 231], "parent_joint_po": [108, 118], "child_joint_po": [108, 118], "parent_axi": [108, 118], "child_axi": [108, 118], "_generate_coordin": 108, "_generate_spe": 108, "_orient_fram": 108, "_set_angular_veloc": 108, "_set_linar_veloc": 108, "rotation_axi": 108, "parent_point": 108, "child_point": 108, "kde": [108, 117, 126], "revolut": 108, "\u03c9": 108, "pc": [108, 193], "pc_p_joint": 108, "pc_c_joint": 108, "p_frame": 108, "c_frame": 108, "theta_pc": 108, "omega_pc": 108, "pos_from": [108, 114, 116, 117, 129, 175, 179], "pendulum": [108, 113, 115, 118, 123, 126, 130, 179], "upper_bob": 108, "lower_bob": 108, "ceiling_joint": 108, "pendulum_joint": 108, "theta_p1": 108, "theta_p2": 108, "u_fram": 108, "l_frame": 108, "omega_p1": 108, "omega_p2": 108, "vel": [108, 114, 116, 117, 121, 129, 175, 179, 247], "prismat": 108, "slide": 108, "x_pc": 108, "v_pc": 108, "wall": [108, 118], "part1": 108, "part2": 108, "j1": [108, 118, 141, 159], "j2": [108, 118, 141, 159], "x_j1": 108, "w_frame": 108, "x_j2": 108, "p1_frame": 108, "v_j1": 108, "kanesmethod": [109, 114, 116, 117, 118, 120, 121, 124, 126, 129], "q_ind": [109, 110, 114, 116, 117, 120, 121, 124, 126, 129], "u_ind": [109, 110, 114, 116, 117, 120, 121, 124, 126, 129], "kd_eq": [109, 114, 116, 117, 120, 121, 126, 129], "q_depend": [109, 116, 117, 124, 129], "configuration_constraint": [109, 116, 117, 124], "u_depend": [109, 116, 117, 124, 129], "velocity_constraint": [109, 116, 117, 124, 129], "acceleration_constraint": 109, "u_auxiliari": [109, 121, 124, 129], "forcelist": [109, 114, 117, 120, 121, 125, 126, 129], "levinson": [109, 128, 172, 241], "udot": [109, 116], "damper": [109, 114, 118], "qd": [109, 116, 124, 175], "ud": [109, 124], "kd": [109, 116, 120, 121, 124], "fl": [109, 116, 124, 125, 129, 190], "bl": [109, 116, 124, 129], "frstar": [109, 114, 116, 117, 120, 121, 124, 126, 129], "kanes_equ": [109, 114, 116, 117, 120, 121, 124, 126, 129], "mass_matrix": [109, 113, 116, 120, 121, 124, 125, 130], "a_and_b": [109, 110, 117], "mass_matrix_ful": [109, 114, 118, 124, 125], "forcing_ful": [109, 114, 118, 124, 125], "auxiliary_eq": [109, 121], "constrain": [109, 117, 125, 129], "kindiffdict": [109, 116, 120, 121, 124, 129], "new_method": [109, 117], "intens": [109, 110, 131, 134], "perm_mat": [109, 110, 126], "op_point": [109, 110, 117, 126], "beforehand": [109, 229], "inv_method": 109, "to_linear": [109, 126], "recalcul": [109, 192], "hol_coneq": [109, 117, 125], "nonhol_coneq": [109, 117, 125], "nonconserv": 109, "form_lagranges_equ": [109, 117, 122, 125, 126], "qdot": [109, 116, 175], "qdoubledot": 109, "lam": [109, 110, 130], "lagranges_equ": 109, "qd_ind": [109, 126], "q_dep": [109, 124, 126], "qd_dep": [109, 126], "solve_multipli": [109, 117], "sol_typ": 109, "array_lik": 109, "f_3": [110, 113, 130, 212], "f_c": [110, 117], "f_v": [110, 117], "f_a": 110, "q_d": 110, "u_i": [110, 126, 179, 189], "u_d": [110, 129], "q_op": [110, 117], "u_op": [110, 117], "qd_op": 110, "ud_op": [110, 117], "spatial": [111, 136, 172, 196], "init_vprint": [111, 112, 127, 130, 172, 174, 175, 178, 179, 180], "locatenew": [111, 116, 117, 120, 121, 122, 126, 127, 129, 130, 173, 175, 177, 179], "parallel_axi": 111, "inertia_tupl": 111, "mv": 111, "iyi": [111, 172], "izz": [111, 172], "ixi": [111, 172], "iyz": [111, 172], "izx": 111, "yy": [111, 180, 212], "yz": [111, 180, 182], "zx": [111, 180], "pos_vec": 111, "px": [111, 152, 157, 222], "body1": 111, "body2": 111, "body3": 111, "h2": 111, "multibodi": [111, 114, 123, 128, 129, 130, 179], "vprint": [112, 171, 175, 178, 180], "vpprint": [112, 171, 178, 180], "vlatex": [112, 171, 172, 178, 180], "coord_stat": 113, "right_hand_sid": 113, "coordinate_deriv": [113, 130], "alg_con": [113, 130], "output_eqn": 113, "coord_idx": [113, 130], "speed_idx": [113, 130], "m_3": [113, 130, 141, 181], "exogen": [113, 130], "ref_fram": 113, "graviti": [113, 114, 117, 118, 120, 122, 129, 177, 249], "theta_dot": 113, "kin_explicit_rh": [113, 130], "dyn_implicit_mat": [113, 130], "dyn_implicit_rh": [113, 130], "symsystem": 113, "dae": [113, 130], "adjust": [113, 199, 203], "comb_implicit_mat": [113, 130], "comb_implicit_rh": [113, 130], "kinema": 113, "comb_explicit_rh": [113, 130], "compute_explicit_form": 113, "awhil": 113, "constant_symbol": 113, "dynamic_symbol": 113, "motiongenesi": [114, 129], "double_pendulum": 114, "motionvari": [114, 129], "newtonian": [114, 129], "simprot": [114, 129], "n_a": 114, "n_b": 114, "w_a_n": 114, "w_b_n": [114, 129], "p_o_p": 114, "p_p_r": 114, "v_o_n": [114, 129], "v2pt": [114, 129], "v_p_n": 114, "v_r_n": 114, "force_p": 114, "force_r": 114, "tfinal": 114, "integstp": 114, "some_filenam": 114, "parse_autolev": 114, "sympy_cod": 114, "include_numer": 114, "include_pydi": 114, "pydi": [114, 129, 172], "u1d": [114, 116, 117, 120, 121, 124], "u2d": [114, 116, 117, 120, 121, 124], "frame_n": 114, "frame_a": 114, "frame_b": 114, "point_o": 114, "particle_p": 114, "p_pt": 114, "particle_r": 114, "r_pt": 114, "set_po": [114, 175, 179], "v2pt_theori": [114, 116, 120, 121, 122, 126, 127, 129, 130, 175, 179], "initial_condit": [114, 129], "overwritten": 114, "e2row": 114, "eigvec": [114, 129], "eigenvec": 114, "deg2rad": 114, "0174533": 114, "wo": 114, "coef": [114, 129], "u3": [114, 116, 118, 120, 121, 124, 129, 175, 179], "strai": 114, "reassign": 114, "inher": [114, 235, 263], "rhs_x": 114, "i_b_bo": 114, "body_b": 114, "body_b_f": 114, "b_cm": 114, "b_f": 114, "scene": [114, 208, 263], "i_c_d": 114, "i_p_q": 114, "i_b_o": 114, "e3": [114, 203, 212], "i_p_o": 114, "e4": [114, 203], "p_so_o": 114, "nicheck": 114, "plug": [114, 167], "hurdl": 114, "gitlab": 114, "repo": 114, "ch4": 114, "ch5": 114, "ch6": 114, "cst": 114, "grammar": [114, 208], "roll": [115, 116, 123, 179, 216], "disc": [115, 123, 179], "bicycl": [115, 123, 128], "nonminim": [115, 123, 126], "meijaard2007": [116, 128], "steer": [116, 128], "purposefulli": 116, "mechanics_print": [116, 120, 121, 122, 123, 124, 125], "yaw": 116, "ang": 116, "rear": 116, "wheel": 116, "pitch": 116, "q4": [116, 124, 174], "q5": [116, 174], "q4d": [116, 124], "q5d": 116, "u4": [116, 121, 124, 129], "u5": [116, 121], "u6": [116, 121], "u3d": [116, 120, 121], "u4d": 116, "u5d": 116, "u6d": 116, "explanatori": 116, "wfrad": 116, "wrrad": 116, "htangl": 116, "forkoffset": 116, "forklength": 116, "framelength": 116, "forkcg1": 116, "forkcg3": 116, "framecg1": 116, "framecg3": 116, "iwr11": 116, "iwr22": 116, "iwf11": 116, "iwf22": 116, "iframe11": 116, "iframe22": 116, "iframe33": 116, "iframe31": 116, "ifork11": 116, "ifork22": 116, "ifork33": 116, "ifork31": 116, "mframe": 116, "mfork": 116, "mwf": 116, "mwr": 116, "wr": 116, "tempfram": 116, "tempfork": 116, "orientnew": [116, 117, 120, 121, 122, 126, 130, 172, 174, 175, 177, 179, 180], "wr_cont": 116, "wr_mc": 116, "frame_mc": 116, "fork_mc": 116, "wf_mc": 116, "wf_cont": 116, "flip": [116, 147, 156, 216], "frame_i": 116, "fork_i": 116, "wr_i": 116, "wf_i": 116, "bodyfram": 116, "bodyfork": 116, "bodywr": 116, "bodywf": 116, "nonholonom": 116, "closer": [116, 215, 266], "slip": [116, 119, 121, 179], "replic": 116, "conlist_spe": 116, "conlist_coord": 116, "gravit": [116, 120, 165, 177, 249], "aforement": [116, 177, 209, 247], "paperradrear": 116, "paperradfront": 116, "hta": 116, "trailpap": 116, "08": 116, "rake": 116, "paperwb": 116, "02": 116, "paperframecgx": 116, "paperframecgz": 116, "paperforkcgx": 116, "paperforkcgz": 116, "framecgnorm": 116, "framecgpar": 116, "tempa": 116, "tempb": 116, "tempc": 116, "paperforkl": 116, "forkcgnorm": 116, "forkcgpar": 116, "upright": 116, "val_dict": 116, "0603": 116, "1405": 116, "05892": 116, "00708": 116, "00756": 116, "kdd": [116, 120, 121], "centripet": 116, "corioli": 116, "forcing_lin": 116, "mm_full": 116, "_k_kqdot": 116, "xdot": 116, "lean": [116, 120, 122], "amat": 116, "eom": [117, 118, 126], "q_1": [117, 118, 126, 142, 179, 192, 209], "q_2": [117, 118, 126, 179], "u_1": [117, 118, 179, 191, 212], "u_2": [117, 118, 179, 191, 212], "theta1": 117, "dq_dict": 117, "presimplifi": 117, "inp_vec": [117, 126], "lagrangesmethod": [117, 122, 123, 125, 126], "lag": [117, 122, 126], "lm": [117, 125, 126, 189, 192], "lag_eq": [117, 126], "lam_op": 117, "jointsmethod": 118, "ngle": 118, "q_3": [118, 179], "u_3": [118, 179], "pinjoint": [118, 123], "prismaticjoint": [118, 123], "mb": [118, 129], "ibzz": 118, "compound_pend": 118, "simple_pend": 118, "slider": 118, "rev1": 118, "rev2": 118, "j3": [118, 141, 159], "form_eom": 118, "w_r_n_qd": [120, 121], "dmc": [120, 121, 122], "uv": [120, 121, 162], "bodyd": [120, 121, 122], "bodylist": [120, 121], "revisit": [121, 179], "kane1985": [121, 124, 127, 128], "thorough": [121, 126, 209], "simplifc": 121, "f3": [121, 182, 196], "necessit": 121, "factor_term": [121, 192, 205, 208], "simplify_auxiliary_eq": 121, "lrh": 122, "planet": 123, "robot": 123, "fascin": 123, "trajectori": 123, "challeng": 123, "came": [123, 266], "tackl": [123, 229], "organ": 123, "amen": 123, "arduou": 123, "momenta": [123, 141], "symbolicsystem": 123, "rough": [123, 167], "inertia_of_point_mass": 123, "linear_momentum": [123, 127, 129], "angular_momentum": [123, 127, 129], "kanemethod": 123, "find_dynamicsymbol": 123, "f_h": 124, "nh": 124, "ku": [124, 196], "k_d": 124, "f_d": [124, 125, 189], "dnh": 124, "f_r": [124, 126, 189], "speed_con": 124, "coord_con": 124, "u_dep": 124, "m_d": 125, "lam1": 125, "0_": 126, "blajer1994": [126, 128], "brought": [126, 216], "vel_p": 126, "a_op": 126, "b_op": 126, "m_op": 126, "a_lin": 126, "hasn": 126, "wikidyad": [127, 178], "wikidyadicproduct": [127, 178], "juxtaposit": [127, 171, 244], "hat": [127, 171, 172, 176, 177, 179, 180, 244, 245, 247, 249, 250], "otim": [127, 217], "l_p": 127, "likins1973": [127, 178], "l_b": 127, "requisit": 127, "t_p": 127, "t_b": 127, "t_t": 127, "virtu": [127, 129], "blajer": 128, "wojciech": 128, "werner": 128, "schiehlen": 128, "walter": 128, "schirm": 128, "kane1983": [128, 180], "likin": [128, 178], "david": [128, 192], "spacecraft": 128, "1983": [128, 231], "meijaard": 128, "jim": 128, "papadopoulo": 128, "ruina": 128, "schwab": 128, "royal": 128, "societi": [128, 209], "2084": 128, "1955": 128, "982": 128, "lectur": [129, 190, 216], "rigibodi": 129, "proprietari": 129, "k3": [129, 186], "k4": 129, "b11": 129, "b12": 129, "b21": 129, "b22": 129, "xd": 129, "xd2": 129, "y1d": 129, "y2d": 129, "tina": 129, "overwrit": [129, 171], "dt2": 129, "dy2": 129, "ty": 129, "linsolv": [129, 194, 210, 214, 272], "nonlinsolv": [129, 210, 214, 272], "nsolv": [129, 214], "rowmatrix": 129, "colmatrix": 129, "diagmat": 129, "eigval": 129, "row_matrix": 129, "col_matrix": 129, "ao": 129, "i12": 129, "i23": 129, "i31": 129, "bf": 129, "p_o_q": 129, "mag": 129, "unitvec": 129, "qo": 129, "p_p_q": 129, "partial_veloc": [129, 172, 175], "a_o_n": 129, "set_acc": [129, 175, 179], "qb": [129, 184], "qbd": 129, "alf_b_n": 129, "set_ang_acc": [129, 172], "ang_acc_in": [129, 172], "force_o": 129, "torque_a": 129, "qa": 129, "qad": 129, "a_b": 129, "v1pt": 129, "v1pt_theori": [129, 175, 179], "a1pt": 129, "a1pt_theori": [129, 175], "a2pt": 129, "a2pt_theori": [129, 175, 179], "angvel": 129, "force_vector": 129, "center_of_mass": 129, "kindiff": 129, "ke": 129, "configura": 129, "tion_constraint": 129, "pendent": 129, "velocity_con": 129, "traint": 129, "acceleration_": 129, "u_auxilia": 129, "ry": 129, "matlplotlib": 129, "stiff": 129, "damp": 129, "legend": [129, 182, 199], "introspect": 129, "rich": [129, 208], "media": [129, 135], "histori": 129, "esqu": 129, "cpython": 129, "pertin": [130, 183, 191], "alg_con_ful": 130, "symsystem1": 130, "symsystem2": 130, "symsystem3": 130, "raytransfermatrix": 131, "geometricrai": 131, "beamparamet": 131, "geometric_conj": 131, "gauss_conj": 131, "conjugate_gauss_beam": 131, "lens": 131, "gaussopt": 131, "wavelen": 131, "z_r": 131, "wavelength": [131, 136], "waist": 131, "rayleigh": [131, 216], "refract": [131, 133, 135, 136], "530e": 131, "88679245283019": 131, "92753330865999": 131, "w_0": [131, 209], "00100000000000000": 131, "freespac": 131, "fs": 131, "00101413072159615": 131, "00210803120913829": 131, "r660": 131, "complex_beam_paramet": 131, "r661": 131, "gaussian_beam": 131, "spread": [131, 196, 216, 231], "00053": 131, "goui": 131, "curvatur": [131, 135], "55998576005696": 131, "2809": 131, "peak": 131, "waist_approximation_limit": 131, "paraxi": [131, 135], "06e": 131, "curvedmirror": 131, "curvedrefract": 131, "flatmirror": 131, "flatrefract": 131, "2x1": 131, "thinlen": 131, "r662": 131, "ray_transfer_matrix_analysi": 131, "waist_in": 131, "waist_out": 131, "s_in": 131, "s_out": 131, "w_o": 131, "gaussian_conj": 131, "z_r_in": 131, "incid": [131, 135], "z_r_out": 131, "emerg": [131, 184], "geometric_conj_ab": 131, "geometric_conj_af": 131, "geometric_conj_bf": 131, "rayleigh2waist": 131, "waist2rayleigh": 131, "optic": [133, 134, 135, 136, 257], "permitt": 133, "permeabl": 133, "fermat": 133, "electr": [133, 135, 177, 247, 249], "electromagnet": [133, 177, 222, 249], "intrinsic_imped": 133, "149896229": [133, 136], "kilogram": [133, 165, 167, 169], "1250000": 133, "amper": 133, "refractive_index": 133, "299792458": [133, 136, 169], "r663": 133, "optical_medium": 133, "travel": [133, 136, 177, 247, 249], "stoke": [134, 248], "mueller": 134, "jones_vector": 134, "stokes_vector": 134, "half_wave_retard": 134, "polarizing_beam_splitt": 134, "jones_2_stok": 134, "\u2148": [134, 181, 195, 196, 215, 272], "\u03c7": 134, "\u03c8": 134, "i\u2080": 134, "plate": 134, "hwp": 134, "splitter": 134, "transmit": [134, 135], "pb": 134, "transmitted_port": 134, "reflected_port": 134, "transmitted_pow": 134, "reflected_pow": 134, "r664": 134, "jones_calculu": 134, "r665": 134, "mueller_calculu": 134, "r666": 134, "stokes_paramet": 134, "retard": 134, "poincar\u00e9": 134, "sphere": [134, 241, 250], "tilt": 134, "mayor": 134, "linear_polar": 134, "transmiss": [134, 135], "mueller_matrix": 134, "quarter_wave_retard": 134, "quarter": 134, "phase_retard": 134, "\u03b4": 134, "rs": [134, 193, 229], "ts": [134, 216], "phia": 134, "phib": 134, "4x1": [134, 216], "phi_a": 134, "phi_b": 134, "qwp": 134, "reflective_filt": 134, "unpolar": 134, "transmissive_filt": 134, "attenu": 134, "transmitt": 134, "ndf": 134, "refraction_angl": 135, "fresnel_coeffici": 135, "brewster_angl": 135, "critical_angl": 135, "lens_makers_formula": 135, "mirror_formula": 135, "lens_formula": 135, "hyperfocal_dist": 135, "transverse_magnif": 135, "medium1": 135, "medium2": 135, "brewster": 135, "926093295503462": 135, "onset": 135, "850908514477849": 135, "02005": 135, "angle_of_incid": 135, "polaris": 135, "te": 135, "undergo": 135, "317843553417859": 135, "348645229818821": 135, "658921776708929": 135, "651354770181179": 135, "235625382192159": 135, "971843958291041": 135, "816477005968898": 135, "577377951366403": 135, "r667": 135, "fresnel_equ": 135, "coc": 135, "0033": 135, "focal_length": 135, "n_len": 135, "n_surr": 135, "thick": 135, "1515151515151": 135, "0000000000000": 135, "3418463277618": 135, "41152": 135, "magnif": 135, "twave": 136, "time_period": 136, "wavenumb": 136, "phi1": 136, "phi2": 136, "w1": [136, 208], "w3": [136, 196], "superposit": [136, 147, 158, 183], "angular_veloc": 136, "tempor": 136, "r668": 137, "paulialgebra": 137, "evaluate_pauli_product": 137, "paulimatric": 137, "sigma3": 137, "nodal": [138, 163, 183], "hw": [138, 163], "coherent_st": 138, "coher": [138, 164, 170], "1d": [138, 140, 153, 172, 221], "wavefunct": [138, 151, 160, 163, 257], "r669": 139, "__cmp__": [139, 143, 162], "dagger": [139, 143, 149, 151, 154, 156, 161, 162], "operatorset": [140, 152], "positionbra3d": 140, "eigenbra": [140, 153, 159], "positionket3d": 140, "eigenket": [140, 153, 159], "positionstate3d": 140, "eigenst": [140, 152, 157, 159, 160], "position_x": 140, "position_i": 140, "position_z": 140, "pxbra": [140, 152], "pxket": [140, 152, 157], "pxop": [140, 152, 157], "xbra": [140, 152, 157], "xket": [140, 152, 157], "xop": [140, 152, 157], "yop": 140, "zop": 140, "uncoupl": [141, 159], "r670": 141, "j_3": [141, 159, 181], "r671": 141, "wigner3j": [141, 181], "wigner": [141, 159, 216, 257], "varshalovich": [141, 159], "zyla": 141, "theor": 141, "phy": [141, 167, 181], "083c01": 141, "r672": 141, "w3j": 141, "715": [141, 181, 196], "wigner6j": [141, 181], "j12": [141, 159], "j23": 141, "6j": [141, 181], "wigner9j": [141, 181], "j4": 141, "j34": 141, "j13": 141, "j24": 141, "9j": [141, 181], "cg_simp": 141, "r673": 141, "clebsh": 141, "rethink": 142, "figsiz": 142, "circuitplot": 142, "nqubit": [142, 146, 147, 156], "control_lin": 142, "gate_idx": [142, 146], "min_wir": 142, "max_wir": 142, "control_point": 142, "wire_idx": 142, "not_point": 142, "one_qubit_box": 142, "box": [142, 147, 149, 158, 160, 250], "qubit": [142, 146, 147, 148, 149, 155], "swap_point": 142, "two_qubit_box": 142, "createcg": 142, "latexnam": 142, "mock": 142, "mz": 142, "circuit_plot": 142, "min_qubit": [142, 146], "autogener": 142, "wire": 142, "q_0": [142, 209], "j_0": 142, "r674": 143, "comm": [143, 162, 222], "plank": 144, "r675": 144, "05457162000000e": 144, "planck_const": 144, "hermetian": 145, "r676": 145, "r677": 145, "ket": [145, 150, 151, 152, 154, 156, 157, 160, 162], "bra": [145, 150, 151, 152, 154, 156, 157, 160, 162], "innerproduct": [145, 150, 151, 157, 159, 162], "outerproduct": [145, 151], "seamlessli": 145, "hermitian_adjoint": 145, "hermitian_transpos": 145, "_apply_operators_qubit": 146, "gate_sort": 146, "gate_simp": 146, "ugat": 146, "cgate": 146, "control_valu": 146, "cnot": 146, "eval_control": 146, "plot_gat": 146, "circ_plot": 146, "simplify_cg": 146, "cphase": 146, "cnotgat": 146, "qappli": [146, 147, 149, 151, 156], "get_target_matrix": 146, "represen": 146, "hadamardg": 146, "identityg": 146, "onequbitg": 146, "phaseg": 146, "swapgat": 146, "target1": 146, "target2": 146, "tgate": 146, "twoqubitg": 146, "xgate": 146, "ygate": 146, "zgate": 146, "bubbl": 146, "random_circuit": 146, "ngate": 146, "gate_spac": 146, "mermin": 147, "_represent_zg": 147, "oracleg": 147, "oracl": 147, "intqubit": [147, 156], "search_funct": 147, "wgate": 147, "apply_grov": 147, "grover_iter": 147, "qstate": 147, "wv": 147, "superposition_basi": 147, "numqubit": 147, "basis_st": 147, "matt": 148, "complexspac": 148, "directsumhilbertspac": 148, "r678": 148, "hilbertspac": 148, "fockspac": 148, "hs": 148, "hilbert_spac": [148, 151, 160], "direct_sum": 148, "quantiz": [148, 257], "r679": 148, "mess": [148, 212, 215, 271], "fock_spac": 148, "r680": 148, "tensorpowerhilbertspac": 148, "r681": 148, "tensor_product": 148, "tensorproducthilbertspac": 148, "r682": 148, "clebsch": [149, 159, 181], "gordan": [149, 159, 181], "hilbert": [149, 151, 157], "grover": 149, "qft": [149, 158], "shor": 149, "brabas": [150, 151, 157, 160], "ketbas": [150, 151, 157, 160], "r683": 150, "inner_product": 150, "apply_oper": [151, 162], "identityoper": 151, "r684": 151, "r685": 151, "polymoni": 151, "operator_": 151, "28physic": 151, "old_assumpt": 151, "r686": 151, "outer_product": 151, "unitaryoper": 151, "operators_to_st": 152, "state_to_oper": 152, "_operators_to_st": 152, "state_map": 152, "_state_to_oper": 152, "statebas": [152, 157, 160], "piab": 153, "piabbra": 153, "piabhamiltonian": 153, "piabket": 153, "ip_doit": 154, "smarter": [155, 205], "rk": 155, "iqft": 155, "rkgate": 155, "qtf": 155, "povm": 156, "as_int": [156, 237], "qubit_valu": 156, "intqubitbra": 156, "00001": 156, "qubitbra": 156, "matrix_to_dens": 156, "matrix_to_qubit": 156, "measure_al": 156, "ensembl": 156, "measure_all_oneshot": 156, "oneshot": 156, "measure_parti": 156, "measure_partial_oneshot": 156, "qubit_to_matrix": 156, "enumerate_st": 157, "_enumerate_st": 157, "foo_1": 157, "foo_2": 157, "foo_3": 157, "test2": 157, "bar_4": 157, "bar_5": 157, "bar_10": 157, "get_basi": 157, "replace_non": 157, "operator_to_st": 157, "qexpr": 157, "integrate_result": 157, "orig_expr": 157, "x_ket": 157, "x_op": 157, "rep_expect": 157, "px_2": 157, "px_1": 157, "rep_innerproduct": 157, "_repres": 157, "_represent_foobasi": 157, "foobasi": 157, "_represent_szop": 157, "szupket": 157, "szop": 157, "sz": 157, "cmod": 158, "reformat": 158, "period_find": 158, "momemtum": 159, "j2op": 159, "jxbra": 159, "jx": 159, "jzket": 159, "jxbracoupl": 159, "jcoupl": 159, "jzketcoupl": 159, "jxket": 159, "jxketcoupl": 159, "jybra": 159, "jy": 159, "jybracoupl": 159, "jyket": 159, "jyketcoupl": 159, "jzbra": 159, "jz": 159, "jzbracoupl": 159, "j_4": [159, 181], "argular": 159, "jzop": 159, "passiv": 159, "r687": 159, "wignerd": 159, "mp": [159, 214, 230], "jm": 159, "jj": 159, "r688": 159, "jcoupling_list": 159, "coupledspinst": 159, "spinstat": 159, "r689": 160, "dual_class": 160, "mn": [160, 196, 216], "ket_not": 160, "r690": 160, "k0": [160, 187, 189, 216], "orthogonalbra": 160, "orthogonalket": 160, "orthogonalst": 160, "_eval_adjoint": 160, "timedepbra": 160, "timedepst": 160, "timedepket": 160, "prob": [160, 216], "412214747707527": 160, "matrix_tensor_product": 161, "axb": 161, "xdagger": 161, "axc": 161, "bxc": 161, "tensor_product_simp": 161, "cxd": 161, "boson": 162, "fetter": 162, "welecka": 162, "secondqu": 162, "annihilateboson": 162, "fockstateket": 162, "bket": 162, "fockstatebosonket": 162, "annihilatefermion": 162, "createboson": 162, "is_only_q_annihil": 162, "destroi": [162, 205], "quasi": 162, "hole": 162, "is_only_q_cr": 162, "is_q_annihil": 162, "is_q_creat": 162, "antisymmetrictensor": 162, "bbra": 162, "fockstatebosonbra": 162, "bd": 162, "bosonicbasi": 162, "fock": 162, "NO": 162, "createfermion": 162, "wick": 162, "fbra": 162, "fockstatefermionbra": 162, "fket": 162, "fockstatefermionket": 162, "fixedbosonicbasi": 162, "n_particl": 162, "n_level": 162, "fockstat": 162, "occup": 162, "bosonbra": 162, "fockstatebra": 162, "fermi_level": 162, "r691": 162, "textwrap": [162, 237], "_q": 162, "get_subno": 162, "fermionicoper": 162, "has_q_annihil": 162, "q_annihil": 162, "has_q_creat": 162, "leftmost": 162, "q_creator": 162, "iter_q_annihil": 162, "iter_q_cr": 162, "0x": 162, "permutationoper": 162, "get_permut": 162, "varbosonicbasi": 162, "n_max": 162, "creator": 162, "evaluate_delta": 162, "einstein": [162, 222], "d_ij": 162, "_j": [162, 167, 181, 198], "d_ip": 162, "d_qp": 162, "matrix_rep": 162, "simplify_index_permut": 162, "permutation_oper": 162, "schemat": [162, 167], "abij": 162, "abji": 162, "baij": 162, "baji": 162, "permutlist": 162, "substitute_dummi": 162, "new_indic": 162, "pretty_indic": 162, "_get_ordered_dummi": 162, "_c": 162, "_d": 162, "index_group": 162, "string_of_lett": 162, "my_dummi": 162, "_v": [162, 180], "_p_0": 162, "_p_1": 162, "keep_only_fully_contract": 162, "sho": 163, "isotrop": 163, "mk": [164, 167], "legal": 164, "temperatur": [164, 177, 249], "dimensions": 164, "dimsys_si": [164, 165], "get_dimensional_depend": [164, 165], "has_integer_pow": 164, "dim_si": 164, "base_dim": 164, "derived_dim": 164, "dimensional_depend": 164, "can_transf_matrix": 164, "useless": [164, 187, 189], "inv_can_transf_matrix": 164, "dim_can_vector": 164, "dim_vector": 164, "is_consist": [164, 170], "is_dimensionless": 164, "list_can_dim": 164, "print_dim_bas": 164, "gravitational_const": [165, 169], "equivalent_dim": 165, "grav_eq": 165, "kepler": [165, 241], "venu": 165, "701": 165, "dai": [165, 169, 212], "venus_a": 165, "108208000e3": 165, "solar": 165, "solar_mass": 165, "9891e30": 165, "convert_to": [165, 169, 185, 191], "5112118495813": 165, "659097795948": 165, "astrophys": 165, "ill": 165, "astrophysicist": 166, "ua": [166, 184], "earth": [166, 177, 249], "sun": 166, "theoricist": 166, "philosophi": [166, 212, 215, 257], "mole": 167, "dimensionless": 167, "unavoid": 167, "d_3": 167, "d_2": [167, 192, 216], "underbrac": [167, 179], "countabl": [167, 215], "pmatrix": 167, "kg": [167, 250], "glu": 167, "men": 167, "heat": 167, "joul": 167, "calori": 167, "stori": 167, "chemistri": 167, "page52": 167, "1952": 167, "page78": 167, "deboer79": 167, "boer": 167, "818": 167, "levyleblond77": 167, "l\u00e9vy": 167, "leblond": 167, "conceptu": [167, 183, 249], "rivista": 167, "del": [167, 231, 248, 271], "nuovo": [167, 181], "cimento": [167, 181], "1977": 167, "187": [167, 190], "214": 167, "anticip": 167, "bin_prefix": 168, "abbrev": [168, 169, 196], "latex_repr": [168, 169], "encapsul": [168, 189, 215, 229], "kilo": 168, "scale_factor": 169, "pretty_unicode_repr": 169, "pretty_ascii_repr": 169, "mathml_presentation_repr": 169, "is_prefix": 169, "abbrevi": [169, 184, 196, 215, 217], "speed_of_light": 169, "reference_quant": 169, "target_unit": 169, "mile": 169, "atomic_mass_const": 169, "centimet": 169, "25146": 169, "609344": 169, "86400": 169, "660539060e": 169, "300000": 169, "planck": 169, "62963087839509e": 169, "base_unit": 170, "descr": 170, "dimension_system": 170, "derived_unit": 170, "overridden": [170, 183, 198, 271], "get_units_non_prefix": 170, "to_matrix": [171, 172, 180, 185, 191, 241, 243, 245], "rigidli": 171, "entireti": 171, "hidden": 171, "_str": 171, "otherfram": [172, 241], "n_alpha_b": 172, "ny": 172, "_3": 172, "rot_typ": [172, 175, 177], "rot_ord": [172, 175, 242], "orient_body_fix": 172, "orient_space_fix": 172, "orient_quaternion": 172, "tait": [172, 241, 242], "bryan": [172, 241, 242], "quaternion": [172, 175, 180, 241, 242, 252], "userwarn": [172, 225, 232, 267], "rotation_ord": [172, 241, 242], "xzx": 172, "zxz": [172, 180, 241, 242], "xyx": [172, 241, 242], "yzy": 172, "zyz": 172, "yxy": [172, 180], "yzx": [172, 180], "zxy": 172, "xzy": 172, "zyx": 172, "yxz": 172, "orient_explicit": 172, "lambda_x": [172, 241, 242], "lambda_i": [172, 241, 242], "lambda_z": [172, 241, 242], "q0": [172, 212, 241, 242], "newnam": 172, "gen_spe": [172, 175], "variable_map": 172, "a_x": [172, 180, 196], "b_x": [172, 174, 180, 222], "b_y": [172, 174, 180, 222], "a_z": [172, 180], "b_z": [172, 180, 222], "inlist": 172, "var_in_dcm": 172, "reexpress": [172, 245], "time_deriv": [172, 177, 178], "free_dynamicsymbol": 172, "codirect": 172, "dyadic_tensor": [172, 241], "frame1": 172, "frame2": [172, 174], "second_reference_fram": 172, "ixz": 172, "inertia_dyad": 172, "pertain": [173, 178], "fieldfunct": [173, 177], "vect": [173, 241, 243], "r_x": [173, 177], "r_y": [173, 177], "r_z": [173, 177], "scalar_field": [173, 177, 241, 243, 247], "grad_field": [173, 243], "point1": [173, 243], "point2": [173, 243], "sympyfi": [173, 174, 175, 243], "position2": [173, 243], "vectfield": [173, 177, 243, 247], "solenoid": [173, 243, 248], "q6": 174, "vec1": 174, "vec2": 174, "coordinatesym": [174, 178], "n_x": 174, "rotating_reference_fram": 174, "time_derivatives_in_the_two_fram": 174, "otherpoint": 175, "outfram": 175, "interfram": 175, "fixedfram": 175, "get_motion_param": 175, "vectori": [175, 177, 244, 249], "timevalue1": 175, "timevalue2": 175, "313": 175, "vel_vec": 175, "q1dd": 176, "q2dd": 176, "charg": [177, 249], "displac": [177, 179, 249], "depict": [177, 215, 249], "temper": 177, "electric_potenti": [177, 247], "r1_x": 177, "r1_y": 177, "infinitesim": [177, 247], "nabla": [177, 241, 246, 247], "f_y": [177, 247], "f_x": [177, 215, 247], "sink": [177, 247], "irrot": [177, 247], "is_conserv": [177, 247, 248], "is_solenoid": [177, 247, 248], "scalar_potenti": [177, 247, 248], "conservative_field": [177, 247], "scalar_potential_differ": [177, 247, 248], "aug": [178, 215], "dyadic_product": [178, 248], "inc": [178, 190], "kinematic_equ": 178, "w_x": 179, "w_y": 179, "w_z": 179, "w_1": [179, 191], "w_2": [179, 191], "w_3": 179, "textrm": [179, 180, 204], "u_x": 179, "sp": 179, "oq": 179, "qp": 179, "rod": 179, "went": 179, "parallelogram": 180, "c_x": 180, "c_y": 180, "c_z": 180, "train": 180, "friend": 180, "xz": [180, 182], "zy": 180, "undergon": [180, 215], "vastli": 180, "wait": 180, "mold": 180, "bp": [180, 212], "bpp": 180, "zzx": 180, "multifram": 180, "direction": 180, "racah": 181, "gaunt": 181, "rasch03": 181, "regge58": 181, "regg": 181, "544": 181, "regge59": 181, "116": [181, 190], "1959": 181, "edmonds74": 181, "edmond": 181, "princeton": [181, 216], "1957": 181, "rasch": 181, "siam": [181, 234], "sci": 181, "1416": 181, "1428": 181, "liberatodebrito82": 181, "liberato": 181, "brito": 181, "forum": [181, 215], "m4nzdu": 181, "7o38": 181, "jen": 181, "03": [181, 216], "oscar": 181, "gerardo": 181, "lazo": 181, "arjona": 181, "jyr2000": 181, "gmail": 181, "clebsch_gordan": 181, "2j_3": 181, "dot_rot_grad_ynm": 181, "gradient": [181, 182, 241, 248, 249], "_l": 181, "l_2": 181, "l_3": 181, "drastic": 181, "2l_1": 181, "2l_2": 181, "2l_3": 181, "1200": 181, "00689500421922113448": 181, "inflect": 181, "unsuit": 181, "dd": [181, 201], "ee": [181, 191], "j_5": 181, "j_6": 181, "richer": 181, "wigner_3j": 181, "wigner_6j": 181, "wigner_9j": 181, "j_7": 181, "j_8": 181, "j_9": 181, "05555555": 181, "1666666": 181, "wigner_d": 181, "j_z": 181, "j_y": 181, "\u03b3": [181, 261, 271], "wigner_d_smal": 181, "textbackend": 182, "plot_parametr": 182, "plot_implicit": 182, "plot3d_parametric_lin": 182, "plot3d_parametric_surfac": 182, "xlabel": 182, "ylabel": 182, "zlabel": 182, "aspect_ratio": 182, "ylim": 182, "axis_cent": 182, "xscale": 182, "yscale": 182, "autoscal": 182, "textplot": 182, "_seri": [182, 193], "baseseri": 182, "nonparametr": 182, "cylindr": [182, 247], "basebackend": 182, "parametric2dlineseri": 182, "parametric3dlineseri": 182, "red": 182, "cyan": 182, "grayscal": 182, "integers_onli": 182, "surfaceover2drangeseri": 182, "parametricsurfaceseri": 182, "surface_color": 182, "range1": 182, "range2": 182, "fill_between": 182, "inch": 182, "expr_x": 182, "expr_i": 182, "canva": 182, "range_x": 182, "range_i": 182, "nb_of_points_x": 182, "nb_of_points_i": 182, "expr_z": 182, "range_u": 182, "range_v": 182, "nb_of_points_u": 182, "nb_of_points_v": 182, "x_var": 182, "y_var": 182, "mesh": 182, "p8": 182, "p9": 182, "nrow": [182, 185], "ncolumn": 182, "stuff": [182, 227, 229, 237], "is_2dlin": 182, "oblig": 182, "only_integ": 182, "get_seg": 182, "get_color_arrai": 182, "var_start_end": 182, "r692": 182, "luiz": 182, "henriqu": 182, "figueiredo": 182, "r693": 182, "line3dbaseseri": 182, "surfacebaseseri": 182, "var_start_end_x": 182, "var_start_end_i": 182, "var_start_end_u": 182, "var_start_end_v": 182, "implicitseri": 182, "has_equ": 182, "use_interval_math": 182, "centric": 182, "get_mesh": 182, "process_seri": 182, "_process_seri": 182, "keyboard": 182, "mous": 182, "pyglet_plot": 182, "screenshot": 182, "camera": 182, "zoom": 182, "numpad": 182, "ordin": [182, 212, 237], "f5": 182, "f6": 182, "f8": 182, "drag": 182, "button": [182, 228], "curvilinear": [182, 244, 245, 248], "__setitem__": 182, "zfade4": 182, "key1": 182, "value1": 182, "key2": 182, "value2": 182, "unbound_theta": 182, "wirefram": 182, "saddl": 182, "fz": 182, "_______________________________________________________": 182, "mediterranean": 183, "cultur": 183, "arab": 183, "lighten": 183, "tapestri": 183, "woven": 183, "european": 183, "soil": 183, "plausibl": 183, "teeter": 183, "totter": 183, "outweigh": 183, "excit": 183, "amus": 183, "kempf": 183, "1944": 183, "20th": 183, "dedekind": 183, "intim": 183, "disciplin": 183, "toolset": 183, "atiyah69": [183, 190], "gear": 183, "greuel2008": [183, 190], "interspers": 183, "lr": 183, "ilex": 183, "\u211a": [183, 196], "localis": 183, "abridg": 183, "free_modul": [183, 187], "quotient_r": [183, 187], "overload": [183, 186, 187, 244, 266], "polynomialr": [183, 187, 188, 194], "domain_or_r": [183, 187], "quotientr": [183, 187], "base_id": [183, 187], "elbow": 183, "room": 183, "componentwis": [183, 196], "inclin": 183, "biproduct": 183, "quotient_modul": 183, "is_submodul": 183, "multiply_id": 183, "identity_hom": 183, "freemodul": 183, "freemoduleel": 183, "conicis": 183, "_contain": 183, "_syzygi": 183, "_in_terms_of_gener": 183, "_intersect": 183, "_module_quoti": 183, "reduce_el": [183, 191], "represantit": 183, "in_terms_of_gener": 183, "inclusion_hom": 183, "rela": 183, "relb": 183, "is_full_modul": 183, "module_quoti": 183, "opt": [183, 189, 208, 267], "coincis": 183, "syzygy_modul": 183, "r_n": 183, "_contains_elem": 183, "_contains_id": 183, "_quotient": 183, "_union": 183, "_product": 183, "is_whole_r": 183, "is_maxim": 183, "is_primari": 183, "is_rad": 183, "is_princip": 183, "xj": 183, "satur": 183, "subquoti": 183, "quotientmodul": 183, "subquotientmodul": 183, "killed_modul": 183, "quotientmoduleel": 183, "kill": [183, 187, 227], "quotient_hom": 183, "ker": 183, "surject": 183, "cokernel": 183, "coker": 183, "meaningfulli": 183, "restrict_domain": 183, "homomoprh": 183, "modulehomomorph": [183, 191], "_ker": 183, "_img": 183, "_kernel": 183, "_imag": 183, "_restrict_domain": 183, "_restrict_codomain": 183, "_quotient_domain": 183, "_quotient_codomain": 183, "_appli": 183, "_mul_scalar": 183, "_compos": 183, "_add": [183, 202], "is_inject": 183, "quotient_domain": 183, "is_isomorph": 183, "preimag": 183, "restrict_codomain": 183, "is_surject": 183, "quotient_codomain": 183, "induct": 183, "monogen": 183, "monogenicfiniteextens": [183, 187], "finiteextens": 183, "sqrt2": [183, 186], "_5": 183, "extensionel": [183, 187], "notinvert": [183, 189, 192], "nu_1": 184, "nu_2": 184, "nu_n": 184, "nu_i": 184, "customarili": 184, "irreduc": [184, 187, 189, 191, 192, 195, 216, 222, 271], "endow": 184, "resp": [184, 187, 212], "divmod": [184, 186, 187], "cb": [184, 234], "sqf_list": [184, 187, 192], "sqf": [184, 187, 192, 209], "buchberg": [184, 189, 190, 192], "groebnerbasi": [184, 192, 195], "solve_poly_system": [184, 192, 214, 215], "fmt": [185, 187, 191], "matrix1": 185, "driectli": 185, "dmnonsquarematrixerror": 185, "zz_i": [185, 186, 188], "from_dict_sympi": 185, "ncol": 185, "elemsdict": 185, "from_list_sympi": 185, "from_list": [185, 187, 192, 193], "construct_domain": [185, 186, 187, 192], "from_rep": 185, "drep": 185, "dm": [185, 191], "ownership": 185, "scc": 185, "substract": 185, "to_dens": 185, "to_field": [185, 187, 192], "to_spars": 185, "aq": 185, "ccc": [185, 215], "from_ddm": 185, "domainerror": [185, 189, 192], "to_ddm": 185, "r694": 185, "pythonmpq": [186, 187], "srepr": [186, 259, 266], "leaf": [186, 196, 205, 266], "strength": 186, "richardon": 186, "dup_factor_list": 186, "factortool": [186, 189], "dup_": [186, 189], "dmp_": [186, 189], "prod": [186, 193, 205], "z1": [186, 187, 214], "is_field": [186, 187], "quo": [186, 187, 189, 192], "rem": [186, 187, 189, 192], "exquo": [186, 187, 192], "exactquotientfail": [186, 187, 189, 192], "mpz": [186, 187], "of_typ": [186, 187], "z1_sympi": 186, "to_sympi": [186, 187], "from_sympi": [186, 187], "forth": [186, 191], "z_sympi": 186, "z_zz": 186, "coercionfail": [186, 189], "sum_domain": 186, "expressions_sympi": 186, "expressions_dom": 186, "result_dom": 186, "e_dom": 186, "result_sympi": 186, "qq_i": [186, 188], "gaussianinteg": [186, 187], "gaussianrationalfield": [186, 187], "gaussianr": [186, 187], "galoi": [186, 189, 191], "finitefield": [186, 187], "pythonfinitefield": [186, 187], "gmpyfinitefield": [186, 187], "welcom": [186, 212, 264], "realel": [186, 187], "complexel": [186, 187], "mpc": 186, "xr": [186, 194], "zc": 186, "1j": 186, "_mpc_": 186, "realfield": [186, 187], "rr100": 186, "33333333333333333333333333333": 186, "hack": [186, 212, 225], "algebraic_field": [186, 187, 189, 191], "algebraicfield": [186, 187, 189, 191], "sqrt3": 186, "x_dom": 186, "p_expr": [186, 187], "polyel": [186, 187, 189, 193, 194, 196], "p_dom": 186, "unexpand": [186, 195, 205, 228], "xk": [186, 187, 198], "yk": [186, 187], "poly_r": [186, 187], "old_polynomialr": 186, "globalpolynomialr": 186, "polyclass": [186, 187, 192], "yr": [186, 194], "broader": 186, "get_field": [186, 187], "frac_field": [186, 187], "rationalfield": [186, 187], "old_frac_field": [186, 187], "fractionfield": [186, 187], "old_fractionfield": 186, "xf": 186, "yf": 186, "fracfield": [186, 187], "expressiondomain": [186, 187], "elements_sympi": 186, "elements_k": 186, "convert_from": [186, 187], "num_zz": 186, "num_qq": 186, "domainel": [186, 187, 194], "encompass": 186, "all_coeff": [186, 187, 192], "dom": [186, 187, 189, 204], "strang": 186, "hybrid": 186, "unreli": 186, "usefulli": 187, "pythonr": [187, 194], "p_domain": 187, "ez": [187, 222], "get_r": 187, "has_assoc_field": 187, "has_assoc_r": 187, "alg_field_from_poli": [187, 191], "root_index": 187, "almosteq": 187, "cyclotomic_field": [187, 191], "zeta7": 187, "zeta_": 187, "lexord": [187, 192], "from_algebraicfield": 187, "from_complexfield": 187, "from_expressiondomain": 187, "from_expressionrawdomain": 187, "from_ff": 187, "modularinteg": 187, "from_ff_gmpi": 187, "from_ff_python": 187, "from_fractionfield": 187, "from_globalpolynomialr": 187, "from_monogenicfiniteextens": 187, "from_polynomialr": 187, "from_qq_gmpi": 187, "from_qq_python": 187, "from_realfield": 187, "from_zz_gmpi": 187, "from_zz_python": 187, "gcdex": [187, 192], "get_exact": 187, "half_gcdex": [187, 192], "is_pid": 187, "is_r": 187, "is_nonposit": 187, "is_on": [187, 192], "rersiv": 187, "__neg__": 187, "__pos__": 187, "__sub__": 187, "q_domain": 187, "q_expr": 187, "x_domain": 187, "alg": [187, 191, 195], "trait": 187, "is_unit": 187, "__divmod__": 187, "__floordiv__": 187, "__mod__": [187, 191], "simpledomain": 187, "compositedomain": 187, "from_qq": 187, "from_zz": 187, "gmpyinteg": 187, "pythoninteg": 187, "gmpyrationalfield": 187, "pythonrationalfield": 187, "from_gaussianrationalfield": 187, "gaussianel": 187, "gaussiandomain": 187, "qq_python": 187, "zz_python": 187, "z2": 187, "z3": 187, "z4": 187, "from_gaussianinteg": 187, "as_algebraicfield": 187, "orig_ext": 187, "algebraicnumb": [187, 191, 195], "integral_basi": [187, 191], "maximal_ord": [187, 191], "zeta5": 187, "primes_abov": [187, 191], "primeid": [187, 191], "to_alg_num": [187, 191], "legibl": 187, "to_rat": 187, "mpelement": 187, "complexfield": 187, "lc": [187, 189, 192], "domain_or_field": 187, "dmf": 187, "coercibl": 187, "monomialord": [187, 192], "xring": 187, "vring": 187, "sring": [187, 193, 194], "polyr": [187, 188, 189, 194], "factor_list": [187, 192, 271], "add_gen": 187, "drop_to_ground": 187, "monomial_basi": 187, "206": [187, 192], "744": 187, "945": [187, 193], "is_monomi": [187, 192], "const": 187, "coeffcient": [187, 189], "inplac": 187, "shallow": [187, 203], "zero_monom": 187, "fv": 187, "clo": 187, "p64": 187, "qv": 187, "f0": 187, "imul_num": 187, "itercoeff": 187, "itermonom": 187, "iterterm": 187, "leading_expv": 187, "leading_monom": 187, "leading_term": 187, "listcoeff": 187, "listmonom": 187, "listterm": 187, "monom": [187, 192], "strip_zero": 187, "tail_degre": 187, "xfield": 187, "vfield": [187, 246], "sfield": [187, 246], "fracel": [187, 196], "lev": 187, "add_ground": [187, 192], "all_monom": [187, 192], "all_term": [187, 192], "cauchy_lower_bound": 187, "cauchy_upper_bound": 187, "clear_denom": [187, 192], "count_complex_root": 187, "sup": [187, 192, 196, 203, 204], "count_real_root": 187, "deflat": [187, 192], "y_i": [187, 189, 191, 192, 212], "x_j": [187, 189, 192], "degree_list": [187, 192], "eject": [187, 192], "exquo_ground": [187, 192], "factor_list_includ": [187, 192], "from_dict": [187, 192], "from_sympy_list": 187, "gff_list": [187, 192], "homogeneous_ord": [187, 192, 209], "is_cyclotom": [187, 192], "is_ground": [187, 192], "is_homogen": [187, 192], "is_irreduc": [187, 192], "is_linear": [187, 192], "is_mon": [187, 192], "is_quadrat": [187, 192], "is_sqf": [187, 192], "l1_norm": [187, 192], "l2_norm_squar": 187, "max_norm": [187, 192], "mignotte_sep_bound_squar": 187, "mignott": [187, 189], "mul_ground": [187, 192], "pdiv": [187, 192], "pexquo": [187, 192], "pquo": [187, 192], "prem": [187, 192], "quo_ground": [187, 192], "refine_root": [187, 191, 192], "includepr": [187, 189, 192], "sqf_list_includ": [187, 192], "sqf_norm": [187, 192], "sqf_part": [187, 192], "sqr": [187, 192], "sturm": [187, 192], "sub_ground": [187, 192], "to_dict": 187, "to_exact": [187, 192], "to_r": [187, 192], "to_sympy_dict": 187, "to_sympy_list": 187, "to_tupl": 187, "total_degre": [187, 192, 209], "trunc": [187, 192, 195], "frac_unifi": 187, "half_per": 187, "poly_unifi": 187, "gr\u00f6bner": 188, "groebner": [188, 190, 191, 192, 195, 208, 214, 215], "wester": 188, "dispers": [188, 190, 216], "agca": 188, "syzygi": 188, "undocu": 188, "rs_seri": 188, "eqs_to_matrix": 188, "sympy_eqs_to_r": 188, "_solve_lin_si": 188, "_solve_lin_sys_compon": 188, "ddm": 188, "sdm": [188, 189], "adic": [188, 190], "valuat": [188, 212], "subfield": 188, "l0": 189, "focus": 189, "legitim": 189, "uninterest": 189, "bulk": [189, 206], "x_u": 189, "dup__": 189, "densebas": 189, "dmp_lc": 189, "poly_lc": 189, "dmp_tc": 189, "poly_tc": 189, "dmp_ground_lc": 189, "dmp_ground_tc": 189, "dmp_true_lt": 189, "n_1": [189, 214, 216], "n_k": 189, "dmp_degre": 189, "dmp_degree_in": 189, "dmp_degree_list": 189, "dmp_strip": 189, "dmp_valid": 189, "dup_revers": 189, "dmp_copi": 189, "dmp_to_tupl": 189, "dmp_normal": 189, "dmp_convert": 189, "to_domain": 189, "dmp_from_sympi": 189, "dmp_nth": 189, "dmp_ground_nth": 189, "dmp_zero_p": 189, "dmp_zero": 189, "dmp_one_p": 189, "dmp_one": 189, "dmp_ground_p": 189, "dmp_ground": 189, "dmp_negative_p": 189, "dmp_positive_p": 189, "dmp_from_dict": 189, "dmp_to_dict": 189, "dmp_swap": 189, "dmp_permut": 189, "dmp_nest": 189, "dmp_rais": 189, "dmp_deflat": 189, "dmp_multi_defl": 189, "dmp_inflat": 189, "dmp_exclud": 189, "dmp_includ": 189, "dmp_inject": 189, "dmp_eject": 189, "dmp_terms_gcd": 189, "dmp_list_term": 189, "dmp_apply_pair": 189, "dmp_slice": 189, "dup_random": 189, "densearith": 189, "dmp_add_term": 189, "dmp_sub_term": 189, "dmp_mul_term": 189, "dmp_add_ground": 189, "dmp_sub_ground": 189, "dmp_mul_ground": 189, "dmp_quo_ground": 189, "dmp_exquo_ground": 189, "dup_lshift": 189, "dup_rshift": 189, "dmp_ab": 189, "dmp_neg": 189, "dmp_add": 189, "dmp_sub": 189, "dmp_add_mul": 189, "dmp_sub_mul": 189, "dmp_mul": 189, "dmp_sqr": 189, "dmp_pow": 189, "dmp_pdiv": 189, "dmp_prem": 189, "dmp_pquo": 189, "dmp_pexquo": 189, "dmp_rr_div": 189, "dmp_ff_div": 189, "dmp_div": 189, "dmp_rem": 189, "dmp_quo": 189, "dmp_exquo": 189, "dmp_max_norm": 189, "dmp_l1_norm": 189, "dmp_expand": 189, "densetool": 189, "dmp_integr": 189, "dmp_integrate_in": 189, "dmp_diff": 189, "dmp_diff_in": 189, "dmp_eval": 189, "dmp_eval_in": 189, "dmp_eval_tail": 189, "dmp_diff_eval_in": 189, "dmp_trunc": 189, "dmp_ground_trunc": 189, "dup_mon": 189, "dmp_ground_mon": 189, "dup_cont": 189, "dmp_ground_cont": 189, "dup_primit": 189, "dmp_ground_primit": 189, "dup_extract": 189, "dmp_ground_extract": 189, "dup_real_imag": 189, "bivari": [189, 195, 216], "dup_mirror": 189, "dup_scal": 189, "dup_shift": 189, "dup_transform": 189, "dmp_compos": 189, "dup_decompos": 189, "t_m": 189, "r695": 189, "dmp_lift": 189, "dup_sign_vari": 189, "dmp_clear_denom": 189, "k_0": 189, "dmp_revert": 189, "gf_": 189, "justifi": 189, "necess": 189, "u_0": 189, "m_0": [189, 209], "m_n": 189, "gf_crt1": 189, "9215": 189, "9405": 189, "9603": 189, "gf_crt2": 189, "gf_int": 189, "gf_degre": 189, "gf_lc": 189, "gf_tc": 189, "gf_strip": 189, "gf_trunc": 189, "gf_normal": 189, "gf_from_dict": 189, "gf_to_dict": 189, "gf_from_int_poli": 189, "gf_to_int_poli": 189, "gf_neg": 189, "gf_add_ground": 189, "gf_sub_ground": 189, "gf_mul_ground": 189, "gf_quo_ground": 189, "gf_add": 189, "gf_sub": 189, "gf_mul": 189, "gf_sqr": 189, "gf_add_mul": 189, "gf_sub_mul": 189, "gf_expand": 189, "gf_div": 189, "r696": 189, "monagan93": [189, 190], "r697": 189, "gathen99": [189, 190], "gf_rem": 189, "gf_quo": 189, "gf_exquo": 189, "gf_lshift": 189, "gf_rshift": 189, "gf_pow": 189, "gf_pow_mod": 189, "r698": 189, "gf_gcd": 189, "gf_lcm": 189, "gf_cofactor": 189, "gf_gcdex": 189, "eea": 189, "r699": 189, "gf_monic": 189, "gf_diff": 189, "gf_eval": 189, "gf_multi_ev": 189, "gf_compos": 189, "gf_compose_mod": 189, "gf_trace_map": 189, "r700": 189, "gathen92": [189, 190], "gf_random": 189, "gf_irreduc": 189, "gf_irreducible_p": 189, "gf_sqf_p": 189, "gf_sqf_part": 189, "gf_sqf_list": 189, "e_2": [189, 192], "f_j": [189, 206], "gf_sqf": 189, "r701": 189, "geddes92": [189, 190], "gf_qmatrix": 189, "berlekamp": 189, "gf_qbasi": 189, "gf_berlekamp": 189, "gf_zassenhau": 189, "gf_shoup": 189, "gf_factor_sqf": 189, "gf_factor": 189, "e_d": 189, "cantor": 189, "zassenhau": [189, 191], "shoup": [189, 190], "kaltofen": [189, 190], "gathen": [189, 190], "gf_factor_method": 189, "r702": 189, "gf_valu": 189, "2204": 189, "gf_csolv": 189, "congruent": [189, 206, 209], "189": 189, "112": [189, 193], "139": 189, "r703": 189, "ivan": 189, "niven": 189, "zuckerman": 189, "montgomeri": 189, "infeas": [189, 192], "sdm_": 189, "distributedmodul": 189, "sdm_monomial_mul": 189, "sdm_monomial_deg": 189, "f_5": 189, "sdm_monomial_divid": 189, "sdm_lc": 189, "sdm_to_dict": 189, "sdm_from_dict": 189, "dic": 189, "sdm_add": 189, "2f_1": 189, "3f_1": 189, "yf_1": 189, "xf_1": 189, "sdm_lm": 189, "sdm_lt": 189, "sdm_mul_term": 189, "2xy": [189, 265], "4y": [189, 215, 260], "8xy": 189, "2y": [189, 209, 212, 215, 265], "sdm_zero": 189, "sdm_deg": 189, "sdm_from_vector": 189, "sdm_to_vector": 189, "variant": [189, 212, 215], "qg": 189, "remark": [189, 195, 206, 212], "uf": 189, "vg": 189, "zout": 189, "euclidtool": 189, "dmp_half_gcdex": 189, "dmp_gcdex": 189, "dmp_invert": 189, "dmp_euclidean_pr": 189, "dmp_primitive_pr": 189, "exceedingli": 189, "collin": [189, 190], "collins67": [189, 190], "subdomain": 189, "2l": 189, "remainin": 189, "subdetermin": 189, "n_2": [189, 216], "n_": [189, 209], "abnorm": 189, "gamma_i": 189, "brown": [189, 190, 216], "traub": [189, 190], "browntraub71": [189, 190], "brown78": [189, 190], "discoveri": [189, 267], "dmp_inner_subresult": 189, "729": 189, "sre": 189, "dmp_subresult": 189, "dmp_prs_result": 189, "dmp_zz_modular_result": 189, "dmp_zz_collins_result": 189, "dmp_qq_collins_result": 189, "dmp_result": 189, "dmp_discrimin": 189, "dmp_rr_prs_gcd": 189, "cff": [189, 192], "cfg": [189, 192], "dmp_ff_prs_gcd": 189, "dmp_zz_heu_gcd": 189, "r704": 189, "liao95": [189, 190], "dmp_qq_heu_gcd": 189, "dmp_inner_gcd": 189, "dmp_gcd": 189, "dmp_lcm": 189, "dmp_content": 189, "dmp_primit": 189, "dmp_cancel": 189, "dmp_trial_divis": 189, "dmp_zz_mignotte_bound": 189, "dup_zz_hensel_step": 189, "hensel": 189, "r705": 189, "dup_zz_hensel_lift": 189, "f_list": 189, "multifactor": 189, "r706": 189, "dup_zz_zassenhau": 189, "dup_zz_irreducible_p": 189, "eisenstein": 189, "dup_cyclotomic_p": 189, "bradford": 189, "russel": 189, "251": 189, "berlin": 189, "heidelberg": 189, "dup_zz_cyclotomic_poli": 189, "dup_zz_cyclotomic_factor": 189, "r707": 189, "weisstein09": [189, 190], "dup_zz_factor_sqf": 189, "dup_zz_factor": 189, "r708": 189, "dmp_zz_wang_non_divisor": 189, "wang": [189, 190], "eez": 189, "dmp_zz_wang_test_point": 189, "dmp_zz_wang_lead_coeff": 189, "dmp_zz_diophantin": 189, "dmp_zz_wang_hensel_lift": 189, "dmp_zz_wang": 189, "enhanc": [189, 216], "r709": 189, "wang78": [189, 190], "r710": 189, "dmp_zz_factor": 189, "r711": 189, "dmp_ext_factor": 189, "dup_gf_factor": 189, "dmp_factor_list": 189, "dmp_factor_list_includ": 189, "dmp_irreducible_p": 189, "groebnertool": 189, "polyconfig": [189, 192], "f5b": [189, 192], "spoli": 189, "red_groebn": 189, "beckerweispfenning93": 189, "is_groebn": 189, "is_minim": 189, "is_reduc": 189, "fglmtool": 189, "matrix_fglm": 189, "o_to": 189, "o_from": 189, "r712": 189, "fauger": [189, 192], "gianni": [189, 192, 214], "mora": [189, 190, 192, 214], "sdm_spoli": 189, "phantom": 189, "sca": 189, "defn": 189, "sdm_ecart": 189, "ecart": 189, "sdm_nf_mora": 189, "nf": 189, "sdm_groebner": 189, "sugar": [189, 190, 221], "giovini": [189, 190], "polyopt": [189, 193], "build_opt": 189, "polyerror": [189, 192], "basepolynomialerror": 189, "operationnotsupport": 189, "heuristicgcdfail": 189, "homomorphismfail": 189, "isomorphismfail": [189, 191], "extraneousfactor": 189, "evaluationfail": 189, "refinementfail": 189, "notrevers": [189, 192], "notalgebra": 189, "polynomialerror": [189, 192], "unificationfail": [189, 191], "generatorsneed": 189, "computationfail": 189, "exc": 189, "generatorserror": 189, "univariatepolynomialerror": 189, "multivariatepolynomialerror": [189, 192], "polificationfail": 189, "orig": 189, "optionerror": 189, "flagerror": 189, "modulargcd": 189, "modgcd_univari": 189, "monagan00": [189, 190], "modgcd_bivari": 189, "modgcd_multivari": 189, "_modgcd_multivariate_p": 189, "brown71": [189, 190], "degbound": 189, "contbound": 189, "func_field_modgcd": 189, "reconstuct": 189, "z_p": 189, "spuriou": [189, 214], "hoeij04": [189, 190], "scarc": 189, "hsin": 190, "chao": 190, "liao": 190, "fateman": 190, "montreal": 190, "quebec": 190, "canada": 190, "240": [190, 198, 243], "247": [190, 214], "von": [190, 216], "zur": 190, "gerhard": 190, "cambridg": [190, 209], "weisstein": 190, "cyclotomicpolynomi": 190, "1215": 190, "1231": 190, "czapor": 190, "labahn": 190, "monagan": [190, 208], "disco": 190, "721": 190, "kaltofen98": 190, "subquadrat": 190, "223": 190, "1998": [190, 209], "1179": 190, "1197": 190, "shoup95": 190, "397": 190, "shoup91": 190, "cox97": [190, 192], "shea": [190, 192], "ajwa95": 190, "ajwa": 190, "liu": 190, "cites": [190, 208], "ist": [190, 205, 208], "psu": [190, 205, 208], "mycites": 190, "login": 190, "bose03": 190, "bose": 190, "guiver": 190, "multidimension": [190, 227, 252], "giovini91": 190, "bronstein93": [190, 192], "salvi": [190, 193], "kiev": 190, "ukrain": 190, "buchberger01": [190, 192], "theorist": 190, "moreno": 190, "diaz": 190, "freir": 190, "eurocast": 190, "februari": 190, "davenport88": 190, "siret": 190, "tournier": 190, "london": [190, 209], "124": [190, 260], "greuel": 190, "pfister": 190, "atiyah": 190, "macdonald": 190, "142": 190, "1971": [190, 212], "505": 190, "237": 190, "249": 190, "wittkopf": 190, "478": 190, "hoeij": 190, "2004": [190, 209], "297": [190, 192], "304": [190, 192], "wang81": 190, "symsac": 190, "hoeij02": 190, "manwright94": [190, 192], "yiu": 190, "kwong": 190, "franci": 190, "wright": 190, "190347": 190, "190413": 190, "koepf98": [190, 192], "koepf": [190, 198, 208], "vieweg": 190, "abramov71": [190, 192], "abramov": [190, 214], "ussr": 190, "330": 190, "man93": [190, 192], "376": 190, "sciencedirect": 190, "pii": 190, "s0747717183710539": 190, "kapur1994": 190, "deepak": 190, "kapur": 190, "tushar": 190, "saxena": 190, "yang": 190, "dixon": 190, "researchg": [190, 216], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 190, "palancz08": 190, "pal\u00e1ncz": 190, "zaletnyik": 190, "jl": [190, 229], "awang": 190, "ew": 190, "grafarend": 190, "geodet": 190, "geodesi": 190, "225607735_dixon_result": 190, "s_solution_of_systems_of_geodetic_polynomial_equ": 190, "bruce97": 190, "bruce": 190, "randal": 190, "donald": [190, 231], "mundi": 190, "artifici": [190, 199], "intellig": [190, 208, 212, 271], "orlando": 190, "www2": 190, "duke": 190, "donaldlab": 190, "symbolicnumericalcomput": 190, "045": 190, "087": 190, "stiller96": 190, "stiller": 190, "1996": [190, 206, 214, 241], "citeseerx": [190, 205], "viewdoc": [190, 205, 208], "590": 190, "2021": 190, "rep1": [190, 205], "cohen93": [190, 191], "henri": 190, "olga": 191, "tausski": 191, "zimmer": 191, "pohst": 191, "articul": 191, "numberfield": 191, "mathfrak": 191, "regul": 191, "alpha_m": 191, "round_two": 191, "prime_decomp": 191, "prime_valu": 191, "minimal_polynomi": 191, "field_isomorph": 191, "nilrad": 191, "z_k": 191, "zk": 191, "ordinarili": 191, "503": 191, "r713": 191, "r714": 191, "powerbasisel": 191, "ramif": 191, "as_submodul": 191, "bundl": 191, "test_factor": 191, "deliber": 191, "is_inert": 191, "inert": [191, 212], "reduce_anp": 191, "elt": 191, "reduce_alg_num": 191, "field_gen": 191, "just_gen": 191, "reagent": 191, "kummer": 191, "1847": 191, "ueber": 191, "zerlegung": 191, "crell": 191, "r715": 191, "_minpoly_compos": 191, "stall": 191, "alli": 191, "monomorph": 191, "alpha_i": 191, "alpha_n": 191, "lincomb": 191, "primtiiv": 191, "meanwhil": 191, "moduleel": 191, "powerbasi": 191, "submodule_from_matrix": 191, "ancestor": 191, "to_col": 191, "nca": 191, "_mult_tab": 191, "successfulli": 191, "moduleendomorph": 191, "innerendomorph": 191, "endomorphismr": 191, "spec": [191, 192], "i_n": [191, 192, 217], "include_self": 191, "basis_el": 191, "element_from_r": 191, "endomorphism_r": 191, "is_compat_col": 191, "mult_tab": 191, "mult": 191, "closurefailur": 191, "nearest_common_ancestor": 191, "number_field": 191, "power_basis_ancestor": 191, "incom": 191, "halv": 191, "submodule_from_gen": 191, "over_power_basi": 191, "starts_with_un": 191, "hnf_modulu": 191, "whole_submodul": 191, "element_from_anp": 191, "element_from_alg_num": 191, "element_from_poli": 191, "qq_matrix": 191, "basis_element_pullback": 191, "discard_befor": 191, "structureerror": 191, "cohen00": 191, "make_mod_elt": 191, "qq_col": 191, "from_int_list": 191, "is_compat": 191, "reduced_mod_p": 191, "to_ancestor": 191, "anc": 191, "to_par": 191, "to_anp": 191, "inner_endomorph": 191, "event": [191, 216], "find_min_poli": 191, "missingunityerror": 191, "is_int": 191, "get_num_denom": 191, "extract_fundamental_discrimin": 191, "r716": 191, "algintpow": 191, "zeta_pow": 191, "r717": 191, "coeff_search": 191, "supplement_a_subspac": 191, "dmrankerror": 191, "v_n": 191, "w_r": 191, "w_j": 191, "u_j": 191, "r718": 191, "poly_from_expr": 192, "parallel_poly_from_expr": 192, "lt": [192, 237], "mod_invers": 192, "exprtool": [192, 252], "gcd_term": 192, "gcd_list": 192, "lcm_list": 192, "destruct": 192, "2079": 192, "1401": 192, "2715": 192, "6720": 192, "1092": 192, "gff": 192, "check_sqf": 192, "count_root": 192, "nroot": [192, 214], "maxstep": 192, "cleanup": 192, "73205080756888": 192, "73205080756887729352744634151": 192, "ground_root": 192, "nth_power_roots_poli": 192, "r_f": 192, "r_g": 192, "_signsimp": 192, "q_n": 192, "is_zero_dimension": [192, 215], "donal": 192, "230": [192, 214], "ec": 192, "em": 192, "di": 192, "dispersionset": 192, "gp": [192, 212], "free_symbols_in_domain": 192, "from_poli": 192, "get_domain": 192, "get_modulu": 192, "has_only_gen": 192, "vincent": [192, 234], "akrita": 192, "strzebonski": 192, "va": 192, "alkiviadi": 192, "adam": 192, "panagioti": 192, "vigkla": 192, "265": 192, "279": 192, "polnomi": 192, "is_multivari": 192, "is_univari": 192, "ltrim": 192, "rerun": [192, 227], "_only_": 192, "sturmian": 192, "subresultants_qq_zz": 192, "suffix": [192, 229], "_pg": 192, "_amv": 192, "rem_z": 192, "premultipli": 192, "rat_clear_denom": 192, "_ignor": 192, "retract": 192, "same_root": 192, "r0": 192, "set_domain": 192, "set_modulu": 192, "termwis": 192, "fglm": 192, "r719": 192, "horner_schem": 192, "equispac": 192, "viet": 192, "itermonomi": 192, "min_degre": 192, "gib": 192, "monomial_kei": 192, "monomial_count": 192, "gradedlexord": 192, "reversedgradedlexord": 192, "clear_cach": 192, "_get_interv": 192, "165": [192, 216, 234], "169": 192, "eval_approx": 192, "evalf_r": 192, "eval_r": 192, "69629": 192, "71318": 192, "805": 192, "3275": 192, "65536": [192, 195, 196], "414645": 192, "131072": 192, "6545": 192, "104755": 192, "2097152": 192, "6634255": 192, "_all_root": 192, "use_cach": 192, "_complexes_index": 192, "_complexes_sort": 192, "_count_root": 192, "_ensure_complexes_init": 192, "_ensure_reals_init": 192, "_eval_is_imaginari": 192, "_get_complex": 192, "_get_complexes_sqf": 192, "currentfactor": 192, "_get_real": 192, "_get_reals_sqf": 192, "_get_root": 192, "_indexed_root": 192, "_new": 192, "_postprocess_root": 192, "_preprocess_root": 192, "heroic": [192, 214], "_real_root": 192, "_reals_index": 192, "_reals_sort": 192, "_refine_complex": 192, "ay": [192, 209, 237, 271], "_roots_trivi": 192, "_set_interv": 192, "861136": 192, "86113631159405258": 192, "polyroot": 192, "quintic": [192, 214], "unread": [192, 232], "casu": 192, "irreducibili": 192, "unsolvablefactorerror": [192, 214], "inexpress": 192, "unsolv": [192, 215], "r720": 192, "cubic_funct": 192, "trigonometric_": 192, "28and_hyperbol": 192, "29_method": 192, "specialpoli": 192, "swinnerton_dyer_poli": 192, "swinnerton": 192, "dyer": 192, "symmetric_poli": 192, "random_poli": 192, "gegenbau": [192, 196], "partfrac": [192, 198], "undertermin": 192, "_w": [192, 203], "apart_list": 192, "assemble_partfrac_list": 192, "bunch": 192, "pfd": 192, "r721": 192, "partial_list": 192, "reassembl": 192, "pfda": 192, "r722": 192, "r723": 192, "r724": 192, "r725": 192, "r726": 192, "r727": 192, "r728": 192, "r729": 192, "widen": 193, "ring_seri": 193, "rs_sin": 193, "166666666666667": 193, "puiseux": 193, "rs_co": 193, "rs_tan": 193, "took": [193, 205], "eleg": [193, 195], "rs_exp": 193, "everyon": 193, "blazingli": 193, "ms": 193, "promin": 193, "gradual": 193, "rs_": 193, "rs_log": 193, "rs_lambertw": 193, "rs_atan": 193, "arctang": 193, "rs_asin": 193, "_tan1": 193, "rs_cot": 193, "rs_cos_sin": 193, "rs_atanh": 193, "rs_sinh": 193, "rs_cosh": 193, "rs_tanh": 193, "rs_hadamard_exp": 193, "inver": 193, "rs_mul": 193, "rs_squar": 193, "rs_pow": 193, "rs_series_invers": 193, "rs_series_revers": 193, "a_kx_k": 193, "ar_i": 193, "ar_": 193, "ae": 193, "rs_trunc": 193, "rs_nth_root": 193, "160249952256379": 193, "44224957030741": 193, "rs_sub": 193, "rs_diff": 193, "rs_integr": 193, "rs_newton": 193, "rs_compose_add": 193, "r730": 193, "bostan": 193, "flajolet": 193, "schost": 193, "4579": 193, "institut": 193, "nation": 193, "recherch": 193, "informatiqu": 193, "automatiqu": 193, "rs_is_puiseux": 193, "rs_puiseux": 193, "rs_puiseux2": 193, "rs_series_from_list": 193, "concur": 193, "rs_fun": 193, "_tan": 193, "_nth": 193, "_root": 193, "_fun": 193, "mul_xin": 193, "pow_xin": 193, "_raw": 194, "unkown": 194, "eqs_r": 194, "eqs_coeff": 194, "eqs_rh": 194, "critiqu": 195, "wester1999": 195, "systemat": 195, "153": 195, "\u2124": [195, 196, 215, 272], "unm": 195, "driver": [196, 228], "adequ": 196, "emptyprint": 196, "_sympystr": 196, "mathml": 196, "inconveni": 196, "_print_": 196, "expr_class": 196, "hierarchi": [196, 216], "_print_rat": 196, "_print_numb": 196, "_print_atom": 196, "_print_bas": 196, "print_latex": 196, "mylatexprint": 196, "_print_deriv": 196, "print_my_latex": 196, "modop": 196, "subcompon": 196, "outermost": [196, 204, 208, 220], "modopmodewrong": 196, "modopnestedwrong": 196, "modopsettingswrong": 196, "subobject": 196, "infrastructur": [196, 213], "printer_exampl": 196, "set_global_set": 196, "stringpict": 196, "pretty_symbolog": 196, "prettyform": 196, "hline": 196, "vline": 196, "ascii": [196, 258], "_pretti": 196, "use_unicode_sqrt_char": 196, "root_not": 196, "mat_symbol_styl": 196, "prettifi": 196, "unambigu": [196, 212, 237], "bold": 196, "c89codeprint": 196, "print_ccod": 196, "tgamma": 196, "known_functions_c89": 196, "known_functions_c99": 196, "fmax": 196, "fmin": 196, "lgamma": 196, "indent_cod": 196, "functionclass": [196, 235], "cfunction_format": 196, "derefer": 196, "dereferenc": 196, "symbols_to_declar": 196, "not_supported_funct": 196, "code_text": 196, "m_sqrt2": 196, "math_macro": 196, "m_sqrt2l": 196, "cxx": 196, "cxx98codeprint": 196, "print_rcod": 196, "rcode": 196, "known_funct": 196, "_rcode": 196, "rfunction_str": 196, "rfunction_format": 196, "ifels": 196, "tweak": [196, 214], "type_map": 196, "name_mangl": 196, "mangl": 196, "floor1": 196, "floor2": 196, "print_fcod": 196, "_fcode": 196, "conjg": 196, "32768": 196, "7182818284590452d0": 196, "1415926535897932d0": 196, "718281828459045235360287d0": 196, "141592653589793238462643d0": 196, "869604401089358618834491d0": 196, "mygamma": 196, "allow_unknown_funct": 196, "coshintegr": 196, "cosintegr": 196, "expintegralei": 196, "factorialpow": 196, "heavisidetheta": 196, "sinhintegr": 196, "sinintegr": 196, "arccosh": 196, "arccoth": 196, "arcsinh": 196, "arctanh": 196, "dirichleteta": 196, "gegenbauerc": 196, "hypergeometricpfq": 196, "sphericalbesselj": 196, "logintegr": 196, "lucasl": 196, "riemann_xi": 196, "riemannxi": 196, "stieltjesgamma": 196, "sphericalbess": 196, "mcodeprint": 196, "_mcode": 196, "mcode": 196, "maplecodeprint": 196, "_mapl": 196, "maple_cod": 196, "print_maple_cod": 196, "javascriptcodeprint": 196, "_javascript": 196, "js_function_str": 196, "known_fcns_src1": 196, "known_fcns_src2": 196, "conj": 196, "juliacodeprint": 196, "_julia": 196, "harmless": [196, 267], "cosmet": 196, "pw": 196, "existing_julia_fcn": 196, "coshint": 196, "cosint": 196, "sinhint": 196, "sinint": 196, "bincoeff": 196, "logint": 196, "gammaln": 196, "octavecodeprint": 196, "_octav": 196, "recip": [196, 234], "powf": 196, "signum": 196, "rustcodeprint": 196, "_rust_cod": 196, "7_f64": 196, "_aesara": 196, "tensorvari": 196, "floatx": 196, "squeez": 196, "dim_handl": 196, "gtkmathview": 196, "widget": 196, "print_gtk": 196, "libgtkmathview": 196, "start_view": 196, "_lambdacod": 196, "accepted_latex_funct": 196, "parenthesize_sup": 196, "fold_frac_pow": 196, "fold_func_bracket": 196, "fold_short_frac": 196, "inv_trig_styl": 196, "itex": 196, "ln_notat": 196, "long_frac_ratio": 196, "mat_delim": 196, "mat_str": 196, "mul_symbol": 196, "symbol_nam": 196, "gothic_re_im": 196, "decimal_separ": 196, "diff_oper": 196, "smallmatrix": [196, 265], "amsmath": 196, "fracton": 196, "semicolon": 196, "monospac": 196, "mathtt": 196, "mathml2": 196, "mathmlprinterbas": 196, "mathmlcontentprint": 196, "mathmlpresentationprint": 196, "chapter4": 196, "_mathml_cont": 196, "mathml_tag": 196, "chapter3": 196, "_mathml_present": 196, "utf": 196, "mul_symbol_mathml_numb": 196, "xb7": 196, "print_mathml": [196, 270], "mrow": 196, "mpmathprint": 196, "fully_qualified_modul": 196, "print_python": 196, "textual": 196, "reprprint": 196, "_sympyrepr": 196, "reprifi": 196, "sympy_integ": 196, "displayhook": [196, 227], "pprint_nod": 196, "nb2": 196, "print_nod": 196, "asssumpt": 196, "determinisit": 196, "backtrac": 196, "print_tre": 196, "outputbuff": 196, "dvioption": 196, "outputtexfil": 196, "extra_preambl": 196, "latex_set": 196, "postscript": 196, "tex": 196, "eulervm": 196, "sty": 196, "debian": 196, "ubuntu": 196, "unset": [196, 208], "gimp": 196, "evinc": 196, "kdvi": 196, "xdvi": 196, "gracefulli": [196, 220], "generet": 196, "bytesio": 196, "usepackag": 196, "amsfont": 196, "renewcommand": 196, "popen": 196, "phidd": 196, "bitmap": 196, "split_super_sub": 196, "var_sub1__sup_sub2": 196, "assignmenterror": 196, "bitwiseand": 196, "bitwiseor": 196, "bitwisexor": 196, "precedence_valu": 196, "kroneckerproduct": 196, "negativeinfin": 196, "tensadd": [196, 222], "tensmul": [196, 222], "precedence_funct": 196, "precedence_float": 196, "precedence_fracel": 196, "precedence_integ": 196, "precedence_mul": 196, "precedence_polyel": 196, "precedence_r": 196, "unevaluatedexpr": [196, 266], "precedence_unevaluatedexpr": 196, "databas": [196, 206], "pretty_use_unicod": 196, "pretty_try_use_unicod": 196, "xstr": 196, "greek_lett": 196, "digit_2txt": 196, "ONE": 196, "seven": 196, "symb_2txt": 196, "parenthesi": [196, 220], "\u2080": 196, "\u2081": 196, "\u2082": 196, "\u2083": 196, "\u2084": 196, "\u2085": 196, "\u2086": 196, "\u2087": 196, "\u2088": 196, "\u2089": 196, "\u2090": 196, "\u1d66": 196, "\u1d6a": 196, "\u2091": 196, "\u1d67": 196, "\u2095": 196, "\u1d62": 196, "\u2096": 196, "\u2097": 196, "\u2098": 196, "\u2099": 196, "\u2092": 196, "\u209a": 196, "\u1d69": 196, "\u1d63": 196, "\u1d68": 196, "\u209b": 196, "\u209c": 196, "\u1d64": 196, "\u1d65": 196, "\u2093": 196, "\u2070": 196, "\u00b9": 196, "\u00b2": 196, "\u00b3": 196, "\u2074": 196, "\u2075": 196, "\u2076": 196, "\u2077": 196, "\u2078": 196, "\u2079": 196, "\u2071": 196, "\u207f": 196, "xobj": 196, "vobj": 196, "hobj": 196, "vf": 196, "\u00bd": 196, "\u2153": 196, "\u00bc": 196, "\u2155": 196, "\u2159": 196, "\u215b": 196, "\u2154": 196, "\u2156": 196, "\u00be": 196, "\u2157": 196, "\u215c": 196, "\u2158": 196, "\u215a": 196, "\u215d": 196, "\u215e": 196, "xsym": 196, "symbolog": 196, "atoms_t": 196, "\u2102": [196, 272], "emptysequ": [196, 202], "exp1": 196, "\u2115": 196, "\u2115\u2080": 196, "\u211d": [196, 272], "symmetricdiffer": [196, 215], "pretty_atom": 196, "atom_nam": 196, "pretty_symbol": 196, "symb_nam": 196, "bold_nam": 196, "stylis": 196, "_print_meijerg": 196, "_print_hyp": 196, "jurjen": 196, "bo": 196, "hate": 196, "spammer": 196, "pietjepuk314": 196, "oc": [196, 246], "oohai": 196, "gedg": 196, "email": 196, "my": [196, 260], "mun": 196, "terminal_str": 196, "baselin": 196, "leftslash": 196, "slash": [196, 227], "paren": 196, "ifascii_nougli": 196, "line_break": 196, "ugli": 196, "terminal_width": 196, "wider": 196, "maxdepth": 196, "labelfunc": 196, "digraph": [196, 234, 270], "rankdir": [196, 270], "_sparse_": 197, "flavor": 197, "________": [197, 216, 234], "x\u2080": 197, "greatli": 197, "numbered_symbol": [197, 208, 212, 234], "postprocessor": [197, 208], "reduced_expr": [197, 208], "formalpowerseri": 198, "coeff_bel": 198, "formalpowerseriescompos": 198, "r731": 198, "comtet": 198, "loui": 198, "reidel": 198, "1974": 198, "720": [198, 212, 234], "formalpowerseriesinvers": 198, "r732": 198, "upto": [198, 203, 212], "formalpowerseriesproduct": 198, "rational_algorithm": 198, "compute_fp": 198, "hyper_algorithm": 198, "omposit": 198, "bell_seq": 198, "finiteformalpowerseri": 198, "rational_independ": 198, "ra": 198, "admiss": [198, 201], "r733": 198, "r734": 198, "simpled": 198, "exp_r": 198, "explik": 198, "hyper_r": 198, "rsolve_hypergeometr": 198, "r735": 198, "r736": 198, "solve_d": 198, "fourierseri": 199, "scalex": 199, "shiftx": 199, "sigma_approxim": 199, "gibb": 199, "bigl": 199, "bigr": 199, "lanczo": 199, "r737": 199, "gibbs_phenomenon": 199, "r738": 199, "sawtooth": 199, "bn": 199, "r739": 199, "limitseq": 201, "difference_delta": 201, "r740": 201, "differencedelta": 201, "limit_seq": [201, 203], "safeguard": 201, "r741": 201, "kauer": 201, "seqper": 202, "seqformula": 202, "seqbas": 202, "coeff_mul": 202, "find_linear_recurr": 202, "gfvar": 202, "seqadd": 202, "seqmul": 202, "_mul": 202, "recursiveseq": 202, "fib": 202, "invok": [203, 227, 228], "workhors": 203, "succ": [203, 216], "asymp": 203, "exposit": 203, "gloss": 203, "wsym": 203, "test_rewrite1": 203, "build_expression_tre": 203, "mrv_leadterm": 203, "e0": 203, "calculate_seri": 203, "limitinf": 203, "leadsimp": 203, "constantli": 203, "subsset": 203, "mrv_max1": 203, "mrv_max3": 203, "expsf": 203, "expsg": 203, "expsboth": 203, "o2": 203, "do_sub": 203, "r742": 203, "7048138294": 203, "7182818285": 203, "6349839002": 203, "6449340668": 203, "shank": 203, "6881721793": 203, "6931396564": 203, "6931471806": 203, "6931471805599453094172321215": 203, "r743": 203, "residue_theorem": 203, "neighborhood": 204, "rim": 204, "affirm": 204, "infimum": 204, "is_clos": 204, "closed": 204, "is_disjoint": 204, "r744": 204, "disjoint_set": 204, "is_open": 204, "is_proper_subset": 204, "is_proper_superset": 204, "left_open": 204, "is_superset": 204, "isdisjoint": 204, "issubset": 204, "issuperset": 204, "fancyset": 204, "lebesgu": 204, "r745": 204, "power_set": 204, "symmetric_differ": 204, "r746": 204, "right_open": 204, "mpi": 204, "r747": 204, "interval_": 204, "as_rel": 204, "is_left_unbound": 204, "is_right_unbound": 204, "r748": 204, "r749": 204, "union_": 204, "28set_theori": 204, "r750": 204, "intersection_": 204, "coin": [204, 216], "r751": 204, "cartesian_product": 204, "is_iter": 204, "r752": 204, "complementset": 204, "r753": 204, "disjoint_union": 204, "r754": 204, "empty_set": 204, "r755": 204, "universal_set": 204, "flambda": 204, "square_iter": 204, "base_set": 204, "cartesiancomplexregion": 204, "polarcomplexregion": 204, "unit_disk": 204, "upper_half_unit_disk": 204, "a_interv": 204, "b_interv": 204, "from_real": 204, "pset": 204, "rset": 204, "thetaset": 204, "upper_half_plan": 204, "normalize_theta_set": 204, "r756": 204, "r757": 204, "axiom_of_power_set": 204, "varnoth": 204, "sin_sol": 204, "r758": 204, "element_": 204, "tr0": 205, "tr1": 205, "tr2": 205, "tr2i": 205, "tr3": 205, "tr4": 205, "tr5": 205, "tr6": 205, "tr7": 205, "tr8": 205, "tr9": 205, "tr10": 205, "tr10i": 205, "tr11": 205, "tr12": 205, "tr12i": 205, "tr13": 205, "trmorri": 205, "tr14": 205, "tr15": 205, "tr16": 205, "tr22": 205, "tr111": 205, "ctr1": 205, "ctr4": 205, "rl1": 205, "rl2": 205, "deem": 205, "932": 205, "016": 205, "serendipit": 205, "dead": 205, "newa": 205, "lucki": 205, "sqt": 205, "_tr56": 205, "un": [205, 206], "r759": 205, "morri": 205, "27s_law": 205, "trpower": 205, "r760": 205, "list_of_trigonometric_ident": 205, "reduction_formula": 205, "ctr2": 205, "ctr3": 205, "r761": 205, "657": 205, "2478": 205, "dimitar": 205, "vlahovski": 205, "technolog": 205, "xiuqin": 205, "zhong": 205, "zhenb": 205, "zeng": 205, "1169": 205, "1177": 205, "sosmath": 205, "trig5": 205, "symplifi": [206, 208], "roach1996": 206, "roach1997": 206, "p_q": 206, "reachabl": [206, 216], "f_q": 206, "undo": [206, 271], "whenc": 206, "game": 206, "twofold": 206, "incongru": 206, "wlog": 206, "alpha_r": 206, "beta_r": 206, "blindli": 206, "messi": 206, "k_u": 206, "l_v": 206, "k_j": 206, "c_w": 206, "r_j": 206, "l_u": 206, "res_": 206, "delta_i": 206, "add_formula": 206, "addb": 206, "sum_0": 206, "test_hyperexpand": 206, "test_formula": 206, "typo": 206, "suboptim": 206, "imath": 206, "b1prime": 206, "vital": [206, 216], "308": 206, "nthroot": 207, "kroneckersimp": 207, "besselsimp": 207, "hypersimilar": 207, "epath": 207, "hongguang": [207, 252], "fu": [207, 208, 252], "unmodifi": 208, "my_measur": 208, "boolian": 208, "max_len": 208, "surd": 208, "strigonometr": 208, "399": 208, "rational_convers": 208, "base10": 208, "6004799503160655": 208, "nfloat": 208, "eq_x": 208, "max_term": 208, "polish": 208, "expand_power_bas": 208, "rcollect": 208, "analyz": [208, 221], "r762": 208, "pearc": 208, "summari": [208, 227, 251], "163": 208, "6984": 208, "trigsimp_groebn": 208, "bb1": 208, "be1": 208, "bb2": 208, "be2": 208, "bei": 208, "max_it": 208, "unrad": [208, 214], "r763": 208, "ibm": 208, "fagin": 208, "symb85": 208, "r764": 208, "cybertest": 208, "opt_sub": 208, "as_unevaluated_bas": 208, "hyperegeometr": 208, "epathtool": 208, "ebnf": 208, "za": [208, 216], "xml": 208, "xpath": 208, "hasattr": [208, 230], "diophantu": 209, "mathematician": [209, 215], "citi": 209, "alexandria": 209, "father": 209, "hi": 209, "arithmetica": 209, "a_1x_1": 209, "a_2x_2": 209, "a_nx_n": 209, "bxy": 209, "cy": 209, "dxy": 209, "eyz": 209, "fzx": 209, "pythagorean": 209, "3y": 209, "4ac": 209, "9369318": 209, "920": 209, "5y": 209, "BY": 209, "t4": 209, "t5": 209, "providean": 209, "eqyptian": 209, "thilinaatsympi": 209, "andreescu": 209, "titu": 209, "andrica": 209, "dorin": 209, "cucurezeanu": 209, "ion": 209, "diophantineequ": 209, "alpertron": 209, "20160323033111": 209, "jpr2718": 209, "ax2p": 209, "permute_sign": [209, 234], "signed_permut": [209, 234], "_dict": 209, "r765": 209, "r766": 209, "pell": 209, "lmm": 209, "r767": 209, "393": 209, "13y": 209, "986": 209, "49299": 209, "1570": 209, "robertson": 209, "20160323033128": 209, "r768": 209, "nitaj": 209, "r769": 209, "numbertheori": 209, "r770": 209, "r771": 209, "676": 209, "884": 209, "fxz": 209, "3xy": 209, "r772": 209, "fxy": 209, "gyz": 209, "hxz": 209, "r773": 209, "cremona": 209, "rusin": 209, "2x_": 209, "m4": 209, "general_sum_of_squar": 209, "8m": 209, "r774": 209, "2345": 209, "proofwiki": 209, "integer_as_sum_of_three_squar": 209, "general_sum_of_even_pow": 209, "1729": 209, "stopiter": 209, "r775": 209, "44542": 209, "207": 209, "schorn": 209, "3456": 209, "1294585930293": 209, "2161": 209, "1137796": 209, "r776": 209, "evenli": 209, "var_t": 209, "r777": 209, "ur": 209, "dv": 209, "vr": 209, "r778": 209, "r779": 209, "nigel": 209, "y_0": [209, 212], "4x": [209, 215, 260], "5x": 209, "r780": 209, "r781": 209, "eprint": 209, "nottingham": 209, "uk": 209, "kvxefz87": 209, "r782": 209, "cuhk": 209, "hk": 209, "wkshum": 209, "404": 209, "r783": 209, "mordel": 209, "r784": 209, "r785": 209, "r786": 209, "r787": 209, "legrang": 209, "csusm": 209, "aitken_html": 209, "symbols_seq": 209, "dict_iter": 209, "r788": 209, "r789": 209, "inhomogen": [209, 212, 214], "r790": 209, "thue": 209, "riccati": 210, "pde": [210, 212], "deutil": [210, 212, 213], "linear_eq_to_matrix": [210, 212], "transolv": 210, "solve_rational_inequ": 211, "solve_poly_inequ": 211, "reduce_rational_inequ": 211, "reduce_abs_inequ": 211, "reduce_inequ": 211, "solve_univariate_inequ": [211, 215], "solvifi": [211, 215], "autodetect": [212, 213], "ode_ord": [212, 213, 214], "best_hint": 212, "all_integr": [212, 213], "_integr": [212, 213], "unevaluat": 212, "test_od": 212, "ode_": 212, "hintnam": [212, 213], "classify_sysod": 212, "ode_hintnam": 212, "tough": 212, "nth_linear_homogeneous_constant_coeff_integr": 212, "nth_linear": 212, "indep": 212, "indep_div_dep": 212, "undetermined_coeffici": 212, "_best": 212, "nth_algebraic_integr": 212, "separable_integr": 212, "1st_exact_integr": 212, "1st_linear_integr": 212, "bernoulli_integr": 212, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 212, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 212, "nth_linear_constant_coeff_variation_of_parameters_integr": 212, "solve_for_func": [212, 213], "homogeneouscoeffsubsdepdivindep": 212, "homogeneouscoeffsubsindepdivdep": 212, "varepsilon": 212, "genform": [212, 213], "starrett": 212, "symbolnam": 212, "startnumb": 212, "endnumb": 212, "renumb": 212, "absorpt": 212, "assist": 212, "2nd_hypergeometric_integr": 212, "almost_linear_integr": 212, "linear_coefficients_integr": 212, "separable_reduced_integr": 212, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 212, "liouville_integr": 212, "2nd_nonlinear_autonomous_conserv": 212, "2nd_nonlinear_autonomous_conserved_integr": 212, "newconst": 212, "ode_sol_simpl": 212, "trysolv": 212, "sola": 212, "solb": 212, "listofsolut": 212, "ode_problem": 212, "firstexact": 212, "exact_differential_equ": 212, "tenenbaum": 212, "dover": 212, "1963": 212, "homogeneouscoeffbest": 212, "ode_1st_homogeneous_coeff_best_integr": 212, "homogeneous_differential_equ": 212, "firstlinear": 212, "linear_differential_equ": 212, "first_order_equ": 212, "rationalriccati": 212, "atleast": 212, "riccati_equ": 212, "thieu": 212, "vo": 212, "www3": [212, 241], "risc_5387": 212, "phdthesisthieu": 212, "secondlinearairi": 212, "secondlinearbessel": 212, "math24": 212, "bernoulli_differential_equ": 212, "goldstein": 212, "braun": 212, "maplesoft": 212, "aspx": 212, "odeadvisor": 212, "riccatispeci": 212, "__________________": 212, "eqworld": 212, "ipmnet": 212, "ru": 212, "ode0106": 212, "ode0123": 212, "nthlinearconstantcoeffhomogen": 212, "nth_linear_constant_coeff_homogeneous_integr": 212, "nonhomogeneous_equation_with_constant_coeffici": 212, "nthlinearconstantcoeffundeterminedcoeffici": 212, "method_of_undetermined_coeffici": 212, "221": 212, "nthlinearconstantcoeffvariationofparamet": 212, "cramer": 212, "variation_of_paramet": 212, "planetmath": 212, "variationofparamet": 212, "nthlineareulereqhomogen": 212, "equidimension": 212, "nth_linear_euler_eq_homogeneous_integr": 212, "sollist": 212, "93euler_equ": 212, "bender": 212, "orszag": 212, "scientist": 212, "nthlineareulereqnonhomogeneousvariationofparamet": 212, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 212, "nthalgebra": 212, "nthorderreduc": 212, "caught": 212, "fault": 212, "almostlinear": 212, "first_linear": 212, "joel": 212, "mose": 212, "stormi": 212, "decad": 212, "august": [212, 231], "558": 212, "linearcoeffici": 212, "separablereduc": 212, "liegroup": 212, "ds": 212, "secondhypergeometr": 212, "2f1": 212, "1f1": 212, "0f1": 212, "liouvillian": 212, "pfq": 212, "chan": 212, "cheb": 212, "terrab": 212, "ode_1st_power_seri": 212, "travi": [212, 227], "walker": 212, "ode_2nd_power_series_ordinari": 212, "lamar": 212, "seriessolut": 212, "simmon": 212, "176": 212, "ode_2nd_power_series_regular": 212, "lie_heuristic_abaco1_simpl": 212, "duart": 212, "da": 212, "mota": 212, "lie_heuristic_abaco1_product": 212, "roch": 212, "lie_heuristic_bivari": 212, "329": 212, "lie_heuristic_chi": 212, "lie_heuristic_abaco2_similar": 212, "lie_heuristic_function_sum": 212, "lie_heuristic_abaco2_unique_unknown": 212, "lie_heuristic_abaco2_unique_gener": 212, "lie_heuristic_linear": 212, "gy": 212, "bh": 212, "impract": 212, "val_inf": 212, "ybar": 212, "numa": 212, "dena": 212, "numi": 212, "deni": 212, "sol1": 212, "sol2": 212, "part_sol": 212, "haaheim": 212, "gensol": 212, "_linear_2eq_order1_type6": 212, "_linear_2eq_order1_type7": 212, "fgp": 212, "ag": 212, "bg": 212, "linear_ode_to_matrix": 212, "odeordererror": 212, "odenonlinearerror": 212, "eqs_mat": 212, "r791": 212, "matrix_differential_equ": 212, "canonical_od": 212, "canonical_eq": 212, "canonical_system": 212, "linodesolve_typ": 212, "type1": 212, "type2": 212, "type3": 212, "type4": 212, "type5": 212, "type6": 212, "type_of_equ": 212, "a_t": 212, "a_non_commut": 212, "matrix_exp_jordan_form": 212, "expj": 212, "matrix_exp": 212, "defect": 212, "p_invers": 212, "r792": 212, "defective_matrix": 212, "r793": 212, "r794": 212, "jordan_normal_form": 212, "comupt": 212, "r795": 212, "r796": 212, "matrix_exponenti": 212, "follw": 212, "antiderv": 212, "subscheck": 212, "system_info": 212, "sol_vector": 212, "sol_vector_evalu": 212, "_nonlinear_2eq_order1_type1": 212, "_nonlinear_2eq_order1_type2": 212, "_nonlinear_2eq_order1_type3": 212, "autonom": 212, "_nonlinear_2eq_order1_type4": 212, "_nonlinear_2eq_order1_type5": 212, "clairaut": 212, "envelop": 212, "_nonlinear_3eq_order1_type1": 212, "enspac": [212, 215], "sysod": 212, "sode0401": 212, "_nonlinear_3eq_order1_type2": 212, "sode0402": 212, "_nonlinear_3eq_order1_type3": 212, "sode0404": 212, "_nonlinear_3eq_order1_type4": 212, "sode0405": 212, "_nonlinear_3eq_order1_type5": 212, "sode0406": 212, "_handle_integr": 212, "gather": 212, "unhind": 212, "wolphramalpha": 212, "detool": 212, "hint_integr": 212, "alphanumer": 212, "hinder": 212, "matching_hint": 212, "matchdict": 212, "1st_homogeneous_coeff": 212, "your_hint": 212, "xfail": [212, 225, 227], "fun": [213, 264], "uxt": 213, "uxi": 213, "solvefun": 213, "test_pd": 213, "pde_hintnam": 213, "ux": 213, "uy": 213, "allhint": 213, "1st_linear_constant_coeff_homogen": 213, "_preprocess": 213, "inabl": 213, "_xi_1": 213, "viktor": 213, "grigoryan": 213, "124a": 213, "substack": 213, "1st_linear_constant_coeff_integr": 213, "du": 213, "inspir": [213, 267], "pde_hint": 213, "checksol": 214, "ect": 214, "elim": 214, "dicontinu": 214, "052": 214, "cov": 214, "pval": 214, "xval": 214, "rsolv": 214, "solve_linear": 214, "solve_linear_system": 214, "overdetermin": [214, 215], "msymbol": 214, "degener": [214, 215], "solve_linear_system_lu": 214, "solve_undetermined_coeff": 214, "equ": 214, "obligatori": 214, "19287309935246": 214, "27844411169911": 214, "73908513321516064165531208767387340401341175890076": 214, "steep": 214, "39267e": 214, "1684e": 214, "588469032184": 214, "315": 214, "730061685774": 214, "46792545969349058": 214, "inconclus": 214, "init": 214, "dissimilar": 214, "v_0": 214, "n_m": 214, "v_m": 214, "rsolve_poli": 214, "rsolve_ratio": 214, "r797": 214, "levelt": 214, "290": [214, 243], "296": 214, "r798": 214, "r799": 214, "revis": 214, "r800": 214, "289": 214, "alembertian": 214, "r801": 214, "r802": 214, "polysi": 214, "solve_triangul": 214, "kalkbrenn": 214, "patrizia": 214, "teo": 214, "aaecc": 214, "minima": 215, "conditionset": [215, 216, 272], "productset": 215, "imageset": [215, 272], "complexregion": 215, "uncount": 215, "bizarr": 215, "her": 215, "sol_f": 215, "solveset_r": 215, "solveset_complex": 215, "methodolog": [215, 264], "_solve_real_trig": 215, "invert_r": 215, "invert_complex": 215, "_solve_rad": 215, "_solve_ab": 215, "_solve_as_r": 215, "_solve_as_poly_r": 215, "_solve_as_poly_complex": 215, "_solve_as_poli": 215, "gsoc": 215, "2014": [215, 216], "iamit": 215, "2948": 215, "6659": 215, "7523": 215, "sibx0afl3q": 215, "9696": 215, "27s_theorem": 215, "inftyright": 215, "nright": 215, "0right": 215, "domain_check": 215, "3z": 215, "9z": 215, "nonlinearerror": 215, "4z": 215, "cccc": 215, "eq3": 215, "eq4": 215, "391": 215, "_solve_system": 215, "_solve_using_known_valu": 215, "_transolv": 215, "_tsolv": 215, "tsolv": 215, "outright": 215, "tractabl": 215, "interf": 215, "add_typ": 215, "_is_exponenti": 215, "new_eq": 215, "_solve_exponenti": 215, "_is_class": 215, "_solve_class": 215, "_solve_expo": 215, "9x": 215, "solve_expo": 215, "log_b": 215, "_solve_logarithm": 215, "solve_log": 215, "_is_logarithm": 215, "prebuilt": 216, "finiterv": 216, "varianc": 216, "densiti": [216, 227, 250], "dice": 216, "continuousrv": 216, "continuousdistributionhandmad": 216, "dist": 216, "discreterv": 216, "discretedistributionhandmad": 216, "pmf": 216, "finitedistributionhandmad": 216, "discreteuniform": 216, "randomsymbol": 216, "r803": 216, "discrete_uniform_distribut": 216, "r804": 216, "discreteuniformdistribut": 216, "d6": 216, "diedistribut": 216, "toss": 216, "r805": 216, "bernoulli_distribut": 216, "r806": 216, "bernoullidistribut": 216, "numeb": 216, "unfair": 216, "r807": 216, "coin_flip": 216, "binomialdistribut": 216, "r808": 216, "binomial_distribut": 216, "r809": 216, "betabinomi": 216, "r810": 216, "r811": 216, "betabinomialdistribut": 216, "popul": 216, "marbl": 216, "r812": 216, "hypergeometric_distribut": 216, "r813": 216, "hypergeometricdistribut": 216, "700000000000000": 216, "r814": 216, "rademacher_distribut": 216, "r815": 216, "geometric_distribut": 216, "r816": 216, "geometricdistribut": 216, "r817": 216, "hermite_distribut": 216, "poisson": 216, "r818": 216, "poisson_distribut": 216, "r819": 216, "poissondistribut": 216, "r820": 216, "logarithmic_distribut": 216, "r821": 216, "logarithmicdistribut": 216, "negativebinomi": 216, "r822": 216, "negative_binomial_distribut": 216, "r823": 216, "negativebinomialdistribut": 216, "skellam": 216, "mu1": 216, "mu2": 216, "mu_1": 216, "mu_2": 216, "i_k": 216, "r824": 216, "skellam_distribut": 216, "yulesimon": 216, "yule": 216, "simon": 216, "r825": 216, "93simon_distribut": 216, "8100": 216, "r826": 216, "zeta_distribut": 216, "cdf": 216, "r827": 216, "arcsine_distribut": 216, "benini": 216, "r828": 216, "benini_distribut": 216, "r829": 216, "v8": 216, "beninidistribut": 216, "r830": 216, "beta_distribut": 216, "r831": 216, "betadistribut": 216, "betanoncentr": 216, "noncentr": 216, "r832": 216, "noncentral_beta_distribut": 216, "r833": 216, "noncentralbetadistribut": 216, "betaprim": 216, "r834": 216, "beta_prime_distribut": 216, "r835": 216, "betaprimedistribut": 216, "boundedpareto": 216, "pareto": 216, "r836": 216, "pareto_distribut": 216, "bounded_pareto_distribut": 216, "r837": 216, "cauchy_distribut": 216, "r838": 216, "cauchydistribut": 216, "r839": 216, "chi_distribut": 216, "r840": 216, "chidistribut": 216, "chinoncentr": 216, "r841": 216, "noncentral_chi_distribut": 216, "chisquar": 216, "r842": 216, "chi_squared_distribut": 216, "r843": 216, "squareddistribut": 216, "dagum": 216, "r844": 216, "dagum_distribut": 216, "erlang": 216, "r845": 216, "erlang_distribut": 216, "r846": 216, "erlangdistribut": 216, "exgaussian": 216, "emg": 216, "r847": 216, "exponentially_modified_gaussian_distribut": 216, "quantil": 216, "r848": 216, "exponential_distribut": 216, "r849": 216, "exponentialdistribut": 216, "fdistribut": 216, "______________________________": 216, "r850": 216, "r851": 216, "fisherz": 216, "fisher": 216, "2d_1": 216, "d_1z": 216, "d_1e": 216, "r852": 216, "27s_z": 216, "r853": 216, "fishersz": 216, "frechet": 216, "r854": 216, "a9chet_distribut": 216, "r855": 216, "gamma_distribut": 216, "r856": 216, "gammadistribut": 216, "gammainvers": 216, "r857": 216, "gompertz": 216, "r858": 216, "gompertz_distribut": 216, "gumbel": 216, "dfrac": 216, "r859": 216, "gumbeldistribut": 216, "r860": 216, "gumbel_distribut": 216, "r861": 216, "mathwav": 216, "easyfit": 216, "gumbel_max": 216, "r862": 216, "gumbel_min": 216, "kumaraswami": 216, "r863": 216, "kumaraswamy_distribut": 216, "r864": 216, "laplace_distribut": 216, "r865": 216, "laplacedistribut": 216, "r866": 216, "a9vy_distribut": 216, "r867": 216, "levydistribut": 216, "logist": 216, "r868": 216, "logistic_distribut": 216, "r869": 216, "logisticdistribut": 216, "loglogist": 216, "unimod": 216, "r870": 216, "lognorm": 216, "r871": 216, "r872": 216, "lognormaldistribut": 216, "lomax": 216, "r873": 216, "lomax_distribut": 216, "maxwel": 216, "2a": 216, "r874": 216, "maxwell_distribut": 216, "r875": 216, "maxwelldistribut": 216, "moyal": 216, "r876": 216, "moyaldistribut": 216, "r877": 216, "rice": 216, "dobelman": 216, "textfil": 216, "distributionshandbook": 216, "nakagami": 216, "r878": 216, "nakagami_distribut": 216, "marginal_distribut": 216, "r879": 216, "normal_distribut": 216, "r880": 216, "normaldistributionfunct": 216, "xm": 216, "x_m": 216, "r881": 216, "r882": 216, "paretodistribut": 216, "powerfunct": 216, "paramat": 216, "r883": 216, "power_func": 216, "quadraticu": 216, "r884": 216, "quadratic_distribut": 216, "raisedcosin": 216, "2s": 216, "r885": 216, "raised_cosine_distribut": 216, "r886": 216, "rayleigh_distribut": 216, "r887": 216, "rayleighdistribut": 216, "r888": 216, "reciprocal_distribut": 216, "studentt": 216, "r889": 216, "student_t": 216, "r890": 216, "studentst": 216, "shiftedgompertz": 216, "r891": 216, "shifted_gompertz_distribut": 216, "r892": 216, "trapezoidal_distribut": 216, "r893": 216, "triangular_distribut": 216, "r894": 216, "triangulardistribut": 216, "r895": 216, "uniform_distribution_": 216, "28continu": 216, "r896": 216, "uniformdistribut": 216, "uniformsum": 216, "irwin": 216, "r897": 216, "uniform_sum_distribut": 216, "r898": 216, "uniformsumdistribut": 216, "vonmis": 216, "mise": 216, "i_0": 216, "r899": 216, "von_mises_distribut": 216, "r900": 216, "vonmisesdistribut": 216, "wald": 216, "gaussianinvers": 216, "r901": 216, "inverse_gaussian_distribut": 216, "r902": 216, "inversegaussiandistribut": 216, "weibul": 216, "geq0": 216, "r903": 216, "weibull_distribut": 216, "r904": 216, "weibulldistribut": 216, "wignersemicircl": 216, "semicircl": 216, "frac2": 216, "r905": 216, "wigner_semicircle_distribut": 216, "r906": 216, "wignerssemicirclelaw": 216, "jointrv": 216, "_set": 216, "multivariatenorm": 216, "noninvert": 216, "ob": 216, "r907": 216, "multivariate_normal_distribut": 216, "multivariatelaplac": 216, "r908": 216, "multivariate_laplace_distribut": 216, "generalizedmultivariateloggamma": 216, "joint_rv_typ": 216, "gd": 216, "y_3": 216, "gmvlg": 216, "generalizedmultivariateloggammaomega": 216, "r909": 216, "generalized_multivariate_log": 216, "r910": 216, "234137346_on_a_multivariate_log": 216, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 216, "correl": 216, "gmvlgo": 216, "r911": 216, "r912": 216, "r913": 216, "multinomial_distribut": 216, "r914": 216, "multinomialdistribut": 216, "multivariatebeta": 216, "r915": 216, "dirichlet_distribut": 216, "r916": 216, "dirichletdistribut": 216, "multivariateewen": 216, "ewen": 216, "r917": 216, "27s_sampling_formula": 216, "r918": 216, "rutger": 216, "hcrane": 216, "sts529": 216, "multivariatet": 216, "negativemultinomi": 216, "n_c": 216, "r919": 216, "negative_multinomial_distribut": 216, "r920": 216, "normalgamma": 216, "r921": 216, "discretemarkovchain": 216, "state_spac": 216, "trans_prob": 216, "markov": 216, "characteris": 216, "transitionmatrixof": 216, "ys": 216, "transition_prob": 216, "sunni": 216, "cloudi": 216, "raini": 216, "randomindexedsymbol": 216, "409": 216, "6963328": 216, "3096": 216, "query_gt": 216, "64705": 216, "r922": 216, "markov_chain": 216, "time_markov_chain": 216, "r923": 216, "dartmouth": 216, "teaching_aid": 216, "books_articl": 216, "probability_book": 216, "chapter11": 216, "canonical_form": 216, "transient": 216, "p_new": 216, "new_matrix": 216, "communication_class": 216, "r924": 216, "onlinelibrari": 216, "wilei": 216, "1002": 216, "9780470316887": 216, "app1": 216, "r925": 216, "columbia": 216, "ww2040": 216, "6711f12": 216, "lect1023big": 216, "is_recurr": 216, "tarjan": [216, 234], "r926": 216, "4701sum07": 216, "4701": 216, "mcii": 216, "r927": 216, "ceca": 216, "clemson": 216, "shierd": 216, "shier": 216, "r928": 216, "ujcont": 216, "uj": 216, "7506": 216, "content1": 216, "r929": 216, "econ": 216, "dtmc": 216, "reccur": 216, "r930": 216, "absorbing_markov_chain": 216, "r931": 216, "brandei": 216, "igusa": 216, "math56as08": 216, "math56a_s08_notes015": 216, "fixed_row_vector": 216, "stationary_distribut": 216, "fundamental_matrix": 216, "r932": 216, "lip": 216, "limiting_distribut": 216, "condition_set": 216, "wm": 216, "r933": 216, "probabilitycours": 216, "11_2_6_stationary_and_limiting_distribut": 216, "r934": 216, "galton": 216, "uchicago": 216, "yibi": 216, "stat317": 216, "lecture4_6up": 216, "continuousmarkovchain": 216, "gen_mat": 216, "generator_matrix": 216, "45279": 216, "58602": 216, "37933": 216, "34211": 216, "7143": 216, "4002723175": 216, "6832579186": 216, "r935": 216, "r936": 216, "biu": 216, "il": 216, "amirgi": 216, "ctmcnote": 216, "bernoulliprocess": 216, "processs": 216, "joint_distribut": 216, "jointdistributionhandmad": 216, "r937": 216, "bernoulli_process": 216, "r938": 216, "mathc": 216, "clarku": 216, "djoyc": 216, "ma217": 216, "given_condit": 216, "poissonprocess": 216, "648": 216, "r939": 216, "11_0_0_intro": 216, "r940": 216, "poisson_point_process": 216, "wiener": 216, "brownian": 216, "scottish": 216, "botanist": 216, "r941": 216, "11_4_0_brownian_motion_wiener_process": 216, "r942": 216, "wiener_process": 216, "gammaprocess": 216, "jump": [216, 271], "472": 216, "r943": 216, "gamma_process": 216, "matrixgamma": 216, "scale_matrix": 216, "r944": 216, "matrix_gamma_distribut": 216, "wishart": 216, "r945": 216, "wishart_distribut": 216, "matrixnorm": 216, "location_matrix": 216, "scale_matrix_1": 216, "scale_matrix_2": 216, "r946": 216, "matrix_normal_distribut": 216, "compound_rv": 216, "compounddistribut": 216, "crv_type": 216, "r947": 216, "compound_probability_distribut": 216, "numsampl": 216, "evaluate_integr": 216, "r948": 216, "entropy_": 216, "information_theori": 216, "r949": 216, "crmarsh": 216, "charles_marsh_continuous_entropi": 216, "r950": 216, "uconn": 216, "kconrad": 216, "blurb": 216, "entropypost": 216, "arg1": 216, "arg2": 216, "cexpr": 216, "coskew": 216, "sigma_": 216, "r951": 216, "r952": 216, "probability_distribut": 216, "randomst": 216, "die_rol": 216, "samp": 216, "pspace": 216, "samp_list": 216, "sam": 216, "42519758": 216, "40207856": 216, "94991743": 216, "85819627": 216, "83403519": 216, "9412172": 216, "85768055": 216, "38954165": 216, "11163337": 216, "3176591": 216, "79115232": 216, "63232916": 216, "01747268": 216, "96716083": 216, "sampling_p": 216, "sampling_": 216, "factorial_mo": 216, "r953": 216, "r954": 216, "factorialmo": 216, "kurtosi": 216, "outlier": 216, "sigma_x": 216, "r955": 216, "r956": 216, "asymmetri": 216, "pearson": 216, "sampling_dens": 216, "centralmo": 216, "cmoment": 216, "expectationmatrix": 216, "randommatrixsymbol": 216, "n11": 216, "n12": 216, "n21": 216, "n22": 216, "variancematrix": 216, "crosscovariancematrix": 216, "randomdomain": 216, "probabilist": 216, "singledomain": 216, "singlepspac": 216, "productdomain": 216, "productpspac": 216, "adject": 216, "conditionaldomain": 216, "frv": 216, "finitedomain": 216, "finitepspac": 216, "crv": 216, "continuousdomain": 216, "continuouspspac": 216, "diepspac": 216, "singlefinitepspac": 216, "normalpspac": 216, "singlecontinuouspspac": 216, "frv_type": 216, "randomvari": 216, "tactic": 216, "random_symbol": 216, "rs_swap": 216, "pspace1": 216, "pspace2": 216, "immutabledensendimarrai": 217, "tomatrix": 217, "j_m": 217, "i_a": 217, "i_b": 217, "sum_k": 217, "tensorcontract": [217, 218], "tensordiagon": [217, 218], "derive_by_arrai": 217, "sum_m": 217, "immutablesparsendimarrai": 217, "mutabledensendimarrai": 217, "mutablesparsendimarrai": 217, "index_order_old": 217, "index_order_new": 217, "cab": 217, "contraction_ax": 217, "diagonal_ax": 217, "arraycontract": 218, "arraydiagon": 218, "arraysymbol": 218, "convert_indexed_to_arrai": 218, "arrayadd": 218, "convert_matrix_to_arrai": 218, "convert_array_to_matrix": 218, "expr_tr": 218, "array_der": 218, "index_method": 220, "get_contraction_structur": [220, 221], "deepest": 220, "nested_contract": 220, "get_indic": [220, 221, 222, 223], "indexconformanceexcept": 220, "______": 221, "stem": 221, "dim1": 221, "dim2": 221, "qwerti": 221, "a_ij": 221, "b_ij": 221, "syntact": 221, "a_real": 221, "c_inherit": 221, "c_explicit": 221, "unrol": 221, "tensorindextyp": [222, 223], "eps_dim": 222, "metric_nam": 222, "metirc": 222, "su": 222, "lorentz": 222, "tensor_index_typ": 222, "is_up": 222, "tensor_inde_typ": 222, "typ": 222, "tensorhead": [222, 223], "index_typ": 222, "tensorsymmetri": 222, "monoterm": 222, "_tensormanag": 222, "set_comm": 222, "asym2": 222, "fully_symmetr": 222, "tensori": [222, 223], "repl": 222, "e_z": 222, "no_symmetri": 222, "p_x": 222, "p_y": 222, "p_z": 222, "ipos1": 222, "ipos2": 222, "icomp1": 222, "icomp2": 222, "nameless": 222, "replacement_dict": 222, "free_arg": 222, "addend": 222, "canon_bp": 222, "contract_metr": 222, "contract_al": 222, "ipo": 222, "icomp": 222, "nonrep": 222, "dum": 222, "ext_rank": 222, "is_canon_bp": 222, "m0": 222, "get_free_indic": [222, 223], "perm2tensor": 222, "tid": 222, "sorted_compon": 222, "riemann_cyclic_replac": 222, "riemann_cycl": 222, "cadabra": 222, "multiterm": 222, "bianchi": 222, "sym2": 222, "direct_product": 222, "monotorem": 222, "tableaux": 222, "tensortyp": 222, "repetit": [222, 234], "tensormanag": 222, "comm_i2symbol": 222, "comm_symbols2i": 222, "get_comm": 222, "gcomm": 222, "ghcomm": 222, "toper": 223, "partialderiv": 223, "valenc": 223, "uncontract": 223, "compa": 223, "compb": 223, "derivand": 223, "xpass": [225, 227], "nocache_fail": 225, "expectedexcept": 225, "assertionerror": 225, "exceptioninfo": 225, "abort": 225, "9999": 225, "warningcl": [225, 232], "test_stacklevel": 225, "randtest": 226, "portabl": [227, 228], "pytestreport": 227, "force_color": 227, "readlin": 227, "sympydoctestfind": 227, "doctestpars": 227, "exclude_empti": 227, "sympydoctestrunn": 227, "checker": 227, "optionflag": 227, "5140": 227, "doctestrunn": 227, "clear_glob": 227, "writer": 227, "garbag": 227, "check_output": 227, "report_": 227, "sympyoutputcheck": 227, "outputcheck": 227, "stdlib": 227, "testrunn": 227, "sympytestresult": 227, "convert_to_native_path": 227, "lst": 227, "blacklist": 227, "get_sympy_dir": 227, "raise_on_deprec": 227, "deprecationwarn": [227, 232], "run_all_test": 227, "test_arg": 227, "test_kwarg": 227, "doctest_arg": 227, "doctest_kwarg": 227, "examples_arg": 227, "examples_kwarg": 227, "run_in_subprocess_with_hash_random": 227, "function_kwarg": 227, "virtualenv": 227, "pythonhashse": 227, "_test": 227, "split_list": 227, "sympytestfil": 227, "module_rel": 227, "extraglob": 227, "raise_on_error": 227, "basenam": [227, 228, 229], "slate": 227, "dont_accept_true_for_1": 227, "dont_accept_blanklin": 227, "normalize_whitespac": 227, "ellipsi": 227, "ignore_exception_detail": 227, "report_udiff": 227, "report_cdiff": 227, "report_ndiff": 227, "report_only_first_failur": 227, "mortem": 227, "tomfooleri": 227, "testmod": 227, "tester": 227, "fiddl": [227, 271], "timeout": 227, "keyboardinterrupt": 227, "interrupt": 227, "_basic": 227, "kw": 227, "test_equ": 227, "pdb": 227, "pipe": 227, "time_bal": 227, "tandem": 228, "matvec": 228, "codewrapp": 228, "distutil": 228, "fwrap": 228, "swig": 228, "binary_cal": 228, "22925376": 228, "25165824": 228, "_imp_": [228, 235], "filepath": 228, "cythoncodewrapp": 228, "dump_pyx": 228, "dummywrapp": 228, "f2pycodewrapp": 228, "ufuncifycodewrapp": 228, "dump_c": [228, 229], "funcnam": 228, "code_gen": [228, 229], "argument_tupl": 228, "include_dir": 228, "library_dir": 228, "extra_compile_arg": 228, "extra_link_arg": 228, "symfunc": [228, 235], "funtion_nam": 228, "ndimension": 228, "f_fortran": 228, "f_cython": 228, "r957": 228, "fortran77": 229, "fortran90": 229, "julia": [229, 259], "rust": [229, 259], "mileston": 229, "unsurmount": 229, "pyf": 229, "inputoutput": 229, "tcc": 229, "libtcc": 229, "date": 229, "hostnam": 229, "sha1": 229, "ccodegen": 229, "preprocessor_stat": 229, "dump_h": 229, "guard": 229, "get_prototyp": 229, "codegenerror": 229, "function_prototyp": 229, "dump_cod": 229, "cname": 229, "fname": 229, "pynam": 229, "jlname": 229, "octnam": 229, "rsname": 229, "fcodegen": 229, "f90": 229, "dump_f95": 229, "get_interfac": 229, "juliacodegen": 229, "dump_jl": 229, "octavecodegen": 229, "dump_m": 229, "returnvalu": 229, "destin": 229, "local_var": 229, "result_vari": 229, "ot": 229, "unnam": 229, "rustcodegen": 229, "dump_r": 229, "f_result": 229, "myfcn": 229, "fcn2": 229, "myfcn_result": 229, "void": 229, "get_default_datatyp": 229, "complex_allow": 229, "agnost": 229, "conserve_mpmath_dp": 230, "doctest_depends_on": 230, "disable_view": 230, "python_vers": 230, "memoize_properti": 230, "propfunc": 230, "no_attrs_in_subclass": 230, "__all__": 230, "some_funct": 230, "thread": 230, "xthread": 230, "threaded_factori": 230, "use_add": 230, "multiset_partitions_taocp": 231, "visitor": 231, "pstack": 231, "lpart": 231, "topmost": 231, "partcompon": 231, "peek": [231, 271], "unpredict": 231, "list_visitor": 231, "abb": [231, 234], "factoring_visitor": 231, "multisetpartitiontravers": 231, "aocp": 231, "count_partit": 231, "127750": 231, "686": 231, "4a": 231, "factorisatio": 231, "oppenheim": 231, "numerorum": 231, "canfield": 231, "erdo": 231, "OF": 231, "yorgei": 231, "monad": 231, "persist": 231, "288716": 231, "memoiz": [231, 233, 259], "dramat": 231, "hypothet": 231, "borrow": 231, "coalesc": 231, "_rang": 231, "stretch": 231, "brain": 231, "histogram": 231, "enum_al": 231, "enum_larg": 231, "enum_rang": 231, "enum_smal": 231, "ub": 231, "parti": 232, "catch_warn": 232, "simplefilt": 232, "dedent": [232, 237], "enum": [233, 259], "pkgdata": [233, 259], "kbin": 234, "partion": 234, "bcd": 234, "notiter": 234, "binary_partit": 234, "r958": 234, "taocp": 234, "nx": 234, "common_prefix": 234, "common_suffix": 234, "unhash": 234, "r959": 234, "connected_component_": 234, "graph_theori": 234, "r960": 234, "27s_strongly_connected_components_algorithm": 234, "dict_merg": 234, "filter_symbol": 234, "ls": 234, "myop": 234, "kog": 234, "informatik": 234, "hamburg": 234, "mein": 234, "python_trick": 234, "neighbor": 234, "xxxxxx": 234, "xxxx": 234, "r961": 234, "method_ring": 234, "r962": 234, "4856615": 234, "4857018": 234, "r963": 234, "programminggeek": 234, "r964": 234, "steinhau": 234, "93johnson": 234, "93trotter_algorithm": 234, "r965": 234, "involut": 234, "eco": 234, "vajnovszki": 234, "dmtc": 234, "generate_involut": 234, "r966": 234, "permutationinvolut": 234, "generate_oriented_forest": 234, "forest": 234, "acycl": 234, "r967": 234, "beyer": 234, "hedetniemi": 234, "novemb": 234, "r968": 234, "1633833": 234, "has_dup": 234, "has_varieti": 234, "iproduct": 234, "abcbb": 234, "is_sequ": 234, "generatortyp": 234, "_iter": 234, "ordered_flag": 234, "least_rot": 234, "rotate_left": 234, "r969": 234, "lexicographically_minimal_string_rot": 234, "minlex": 234, "acb": 234, "11010011000": 234, "00011010011": 234, "00011001011": 234, "aaa": 234, "abi": 234, "bby": 234, "abracadabra": 234, "banana": 234, "multiset_derang": 234, "uniq": 234, "1233": 234, "3312": 234, "3321": 234, "aba": 234, "baa": 234, "bead": 234, "ooo": 234, "r970": 234, "ordered_partit": 234, "r971": 234, "jeromekelleh": 234, "r972": 234, "jerom": 234, "kelleh": 234, "barri": 234, "sullivan": 234, "0909": 234, "2331v2": 234, "r973": 234, "activest": 234, "218332": 234, "postfix": 234, "random_derang": 234, "reseed": 234, "templat": 234, "rotate_right": 234, "roundrobin": 234, "ef": 234, "credit": [234, 257], "sakki": 234, "keyfunc": 234, "subgraph": 234, "r974": 234, "r975": 234, "longest": 234, "r976": 234, "unflatten": 234, "afunc": 235, "lam_f": 235, "lambdastr": 235, "dummifi": 235, "use_imp": 235, "custom_sin": 235, "38177329": 235, "49315059": 235, "8414709848078965": 235, "eager": 235, "enable_eager_execut": 235, "eagertensor": 235, "__class__": 235, "placehold": 235, "user_guid": 235, "array2mat": 235, "runtimewarn": 235, "sin_cos_sympi": 235, "sin_co": 235, "sin_cos_numpi": 235, "38177329068": 235, "module_dictionari": 235, "_lambdifygener": 235, "__globals__": 235, "lambdaprint": [235, 259], "90929743": [235, 260], "assoc_recurrence_memo": 236, "base_seq": 236, "memo": 236, "pn0": 236, "recurrence_memo": 236, "specfun": 236, "__index__": 237, "sanit": 237, "99999999999999991611392": 237, "debug_decor": 237, "fillded": 237, "strline": 237, "rawlin": 237, "find_execut": 237, "pathsep": 237, "strictlessthan": 237, "pastabl": 237, "bee": 237, "spamham": 237, "sha": 237, "spam": 237, "egg": 237, "md5": 237, "eggsham": 237, "r977": 237, "6116978": 237, "roken": 237, "deletechar": 237, "multicharact": 237, "oldchar": 237, "newchar": 237, "acquir": 238, "getresourc": 238, "idiom": [238, 263, 264], "pkgname": 238, "pkgpath": 238, "dirnam": 238, "normpath": 238, "rb": 238, "__loader__": 238, "stringio": 238, "get_resourc": 238, "ioerror": 238, "mydata": 238, "mypkgdata": 238, "jpg": 238, "get_class": 239, "lookup_view": 239, "get_mod_func": 239, "callback": 239, "timeutil": 240, "coordsysrect": 241, "rotation_matrix": [241, 242, 245], "vector_nam": 241, "variable_nam": [241, 247], "latex_vect": 241, "pretty_vect": 241, "latex_scalar": 241, "pretty_scalar": 241, "new_system": 241, "create_new": [241, 245], "transformation_to_par": 241, "transformation_from_par": 241, "locate_new": [241, 243, 244, 245, 246, 247], "position_wrt": [241, 244, 245, 246], "orient_new": [241, 242], "axisorient": [241, 245, 248], "axis_orient": [241, 245], "bodyorient": [241, 245, 248], "body_orient": [241, 242, 245], "spaceorient": [241, 245, 248], "space_orient": [241, 242], "quaternionorient": [241, 245, 248], "q_orient": [241, 242], "orient_new_axi": [241, 243, 245], "orient_new_bodi": [241, 245], "angle1": [241, 242], "angle2": [241, 242], "angle3": [241, 242], "euler_angl": [241, 242], "orient_new_quaternion": [241, 245], "orient_new_spac": [241, 245], "coordsyrect": 241, "v_a": 241, "v_b": 241, "scalar_map": 241, "basevector": [241, 244, 245], "delop": [241, 246, 247], "r978": 241, "r979": 241, "basedyad": [241, 244], "second_system": 241, "deloper": [241, 248], "curl": [241, 248, 250], "parabola": 241, "rational_parametr": 241, "singular_point": 241, "regular_point": 241, "reg_point": 241, "implict": 241, "cubic_curv": 241, "calulc": 241, "hoffmann": 241, "purdu": 241, "lib": 241, "cgi": 241, "viewcont": 241, "1827": 241, "cstech": 241, "erik": 241, "hillgart": 241, "diploma": 241, "linz": 241, "universitat": 241, "availa": 241, "risc_1355": 241, "20point": 241, "20on": 241, "20conic": 241, "semispher": [241, 250], "coordsys3d": [242, 243, 244, 246, 247, 248, 250], "axis_orienter1": 242, "axis_orienter2": 242, "axis_orienter3": 242, "body_orienter1": 242, "body_orienter2": 242, "body_orienter3": 242, "system2": 243, "parametricregion": [243, 248, 250], "implicitregion": [243, 248, 250], "essenc": 244, "vectormul": 244, "vectoradd": 244, "ofcours": 244, "vectorzero": 244, "expressli": 244, "express_coordin": [244, 245], "dyadicmul": 244, "dyadicadd": 244, "cleanest": 245, "orient_new_": 245, "attain": 245, "basescalar": [245, 247], "oabc": 246, "oa": 246, "pq": 246, "sr": 246, "wikidel": 246, "ffield": 246, "gradient_field": 247, "instantan": 247, "directional_deriv": 247, "lame": 247, "quadrilater": 248, "flux": 248, "parametricintegr": 248, "matrix_to_vector": 248, "vector_integr": [248, 250], "dyadicproduct": 248, "quantifi": 249, "throughtout": 249, "necesssari": 250, "param_circl": 250, "implicit_circl": 250, "obextj": 250, "solidspher": 250, "lamina": 250, "\ud835\udc45": 250, "cylind": 250, "vectorfield": 250, "hemispher": 250, "top_fac": 250, "bottom_fac": 250, "27_theorem": 250, "cone": 250, "divergence_theorem": 250, "12288": 250, "subcategori": 251, "cnode": 253, "cxxnode": 253, "fnode": 253, "pyutil": 253, "cutil": 253, "futil": 253, "ecm": 256, "copyright": 257, "truss": 257, "pappu": 258, "hexagon": 258, "prettyprint": 259, "rcodeprint": 259, "javascript": [259, 270], "gtk": 259, "mathmlprint": 259, "pythoncodeprint": 259, "pythonprint": 259, "dotprint": [259, 266, 270], "str_expr": 260, "82842712474619": 260, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 260, "0874989834394464": 260, "roundoff": 260, "14112001": 260, "7568025": 260, "95892427": 260, "2794155": 260, "6569866": 260, "98935825": 260, "41211849": 260, "0998334166468": 260, "sympy_nam": 260, "numerical_funct": 260, "rephras": 261, "oh": 261, "integration_vari": 261, "dfdx": 261, "equidistantli": 261, "d2fdx2": 261, "django": 263, "oop": 263, "crazi": 263, "abcdef": 263, "reevalu": 263, "infal": 263, "insight": 264, "entertain": 264, "preliminari": 264, "82842712475": 265, "cass": 265, "wrote": [265, 266], "theme": 265, "expanded_expr": 265, "whet": 265, "appetit": 265, "c\u2082": [265, 272], "c\u2081": [265, 272], "\u03bd": 265, "sell": 265, "battl": 265, "confid": 265, "gigabyt": 265, "tear": 266, "rebuilt": 266, "stopper": 266, "uexpr": 266, "unevalutedexpr": 266, "downsid": 267, "algebraic_multipl": 267, "pdp": 267, "\u03bb": 267, "undertest": 267, "underevalu": 267, "my_iszero": 267, "stronger": 267, "tradeoff": 267, "wonder": 267, "5b7c3e8ee5b40332abdb206c": 267, "15141": 267, "19548": 267, "10120": 267, "10279": 267, "constant_problem": 267, "possiblezeroq": 267, "mupad_ref": 267, "iszero": 267, "congratul": 268, "decent": 269, "austin": 269, "video": 269, "bvar": 270, "unnecessarili": 271, "whittl": 271, "catchal": 271, "sound": 271, "collected_expr": 271, "cdot1": 271, "undertak": 271, "undon": 271, "cdot2": 271, "nck": 271, "pronounc": 271, "_2f_1": 271, "cfrac": 271, "list_to_frac": 271, "a\u2080": 271, "a\u2083": 271, "a\u2084": 271, "pointless": 271, "orig_frac": 271, "diffeq": 272}, "objects": {"": [[23, 0, 0, "-", "sympy"]], "sympy": [[24, 0, 0, "-", "abc"], [25, 0, 0, "-", "algebras"], [28, 0, 0, "-", "assumptions"], [31, 0, 0, "-", "calculus"], [32, 0, 0, "-", "categories"], [53, 0, 0, "-", "diffgeom"], [54, 0, 0, "-", "discrete"], [58, 0, 0, "-", "functions"], [71, 0, 0, "-", "holonomic"], [78, 0, 0, "-", "integrals"], [79, 0, 0, "-", "interactive"], [80, 0, 0, "-", "liealgebras"], [81, 0, 0, "-", "logic"], [86, 0, 0, "-", "matrices"], [93, 0, 0, "-", "parsing"], [257, 0, 0, "-", "physics"], [192, 0, 0, "-", "polys"], [214, 0, 0, "-", "solvers"], [216, 0, 0, "-", "stats"], [219, 0, 0, "-", "tensor"], [224, 0, 0, "-", "testing"], [233, 0, 0, "-", "utilities"], [248, 0, 0, "-", "vector"]], "sympy.algebras": [[25, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[25, 2, 1, "", "add"], [25, 2, 1, "", "angle"], [25, 2, 1, "", "arc_coplanar"], [25, 2, 1, "", "axis"], [25, 2, 1, "", "exp"], [25, 2, 1, "", "from_axis_angle"], [25, 2, 1, "", "from_rotation_matrix"], [25, 2, 1, "", "index_vector"], [25, 2, 1, "", "integrate"], [25, 2, 1, "", "inverse"], [25, 2, 1, "", "is_pure"], [25, 2, 1, "", "is_zero_quaternion"], [25, 2, 1, "", "mensor"], [25, 2, 1, "", "mul"], [25, 2, 1, "", "norm"], [25, 2, 1, "", "normalize"], [25, 2, 1, "", "orthogonal"], [25, 2, 1, "", "parallel"], [25, 2, 1, "", "pow"], [25, 2, 1, "", "pow_cos_sin"], [25, 2, 1, "", "rotate_point"], [25, 2, 1, "", "scalar_part"], [25, 2, 1, "", "to_axis_angle"], [25, 2, 1, "", "to_rotation_matrix"], [25, 2, 1, "", "vector_coplanar"], [25, 2, 1, "", "vector_part"]], "sympy.assumptions": [[26, 0, 0, "-", "ask"], [27, 0, 0, "-", "assume"], [29, 0, 0, "-", "predicates"], [30, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[26, 1, 1, "", "AssumptionKeys"], [26, 3, 1, "", "ask"], [26, 3, 1, "", "register_handler"], [26, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[27, 1, 1, "", "AppliedPredicate"], [27, 1, 1, "", "AssumptionsContext"], [27, 1, 1, "", "Predicate"], [27, 1, 1, "", "UndefinedPredicate"], [27, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[27, 4, 1, "", "arg"], [27, 4, 1, "", "arguments"], [27, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[27, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[27, 2, 1, "", "eval"], [27, 5, 1, "", "handler"], [27, 2, 1, "", "register"], [27, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[29, 1, 1, "", "FinitePredicate"], [29, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[29, 1, 1, "", "CommutativePredicate"], [29, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[29, 1, 1, "", "ComplexElementsPredicate"], [29, 1, 1, "", "DiagonalPredicate"], [29, 1, 1, "", "FullRankPredicate"], [29, 1, 1, "", "IntegerElementsPredicate"], [29, 1, 1, "", "InvertiblePredicate"], [29, 1, 1, "", "LowerTriangularPredicate"], [29, 1, 1, "", "NormalPredicate"], [29, 1, 1, "", "OrthogonalPredicate"], [29, 1, 1, "", "PositiveDefinitePredicate"], [29, 1, 1, "", "RealElementsPredicate"], [29, 1, 1, "", "SingularPredicate"], [29, 1, 1, "", "SquarePredicate"], [29, 1, 1, "", "SymmetricPredicate"], [29, 1, 1, "", "TriangularPredicate"], [29, 1, 1, "", "UnitTriangularPredicate"], [29, 1, 1, "", "UnitaryPredicate"], [29, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[29, 1, 1, "", "CompositePredicate"], [29, 1, 1, "", "EvenPredicate"], [29, 1, 1, "", "OddPredicate"], [29, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[29, 1, 1, "", "NegativePredicate"], [29, 1, 1, "", "NonNegativePredicate"], [29, 1, 1, "", "NonPositivePredicate"], [29, 1, 1, "", "NonZeroPredicate"], [29, 1, 1, "", "PositivePredicate"], [29, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[29, 1, 1, "", "AlgebraicPredicate"], [29, 1, 1, "", "AntihermitianPredicate"], [29, 1, 1, "", "ComplexPredicate"], [29, 1, 1, "", "ExtendedRealPredicate"], [29, 1, 1, "", "HermitianPredicate"], [29, 1, 1, "", "ImaginaryPredicate"], [29, 1, 1, "", "IntegerPredicate"], [29, 1, 1, "", "IrrationalPredicate"], [29, 1, 1, "", "RationalPredicate"], [29, 1, 1, "", "RealPredicate"], [29, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[29, 5, 1, "", "AlgebraicHandler"], [29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[30, 3, 1, "", "refine"], [30, 3, 1, "", "refine_Pow"], [30, 3, 1, "", "refine_abs"], [30, 3, 1, "", "refine_arg"], [30, 3, 1, "", "refine_atan2"], [30, 3, 1, "", "refine_im"], [30, 3, 1, "", "refine_matrixelement"], [30, 3, 1, "", "refine_re"], [30, 3, 1, "", "refine_sign"]], "sympy.calculus": [[31, 0, 0, "-", "euler"], [31, 0, 0, "-", "finite_diff"], [31, 0, 0, "-", "singularities"], [31, 0, 0, "-", "util"]], "sympy.calculus.euler": [[31, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[31, 3, 1, "", "apply_finite_diff"], [31, 3, 1, "", "differentiate_finite"], [31, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[31, 3, 1, "", "is_decreasing"], [31, 3, 1, "", "is_increasing"], [31, 3, 1, "", "is_monotonic"], [31, 3, 1, "", "is_strictly_decreasing"], [31, 3, 1, "", "is_strictly_increasing"], [31, 3, 1, "", "monotonicity_helper"], [31, 3, 1, "", "singularities"]], "sympy.calculus.util": [[31, 3, 1, "", "continuous_domain"], [31, 3, 1, "", "function_range"], [31, 3, 1, "", "is_convex"], [31, 3, 1, "", "lcim"], [31, 3, 1, "", "maximum"], [31, 3, 1, "", "minimum"], [31, 3, 1, "", "not_empty_in"], [31, 3, 1, "", "periodicity"], [31, 3, 1, "", "stationary_points"]], "sympy.categories": [[32, 1, 1, "", "Category"], [32, 1, 1, "", "CompositeMorphism"], [32, 1, 1, "", "Diagram"], [32, 1, 1, "", "IdentityMorphism"], [32, 1, 1, "", "Morphism"], [32, 1, 1, "", "NamedMorphism"], [32, 1, 1, "", "Object"], [32, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[32, 4, 1, "", "commutative_diagrams"], [32, 4, 1, "", "name"], [32, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[32, 4, 1, "", "codomain"], [32, 4, 1, "", "components"], [32, 4, 1, "", "domain"], [32, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[32, 4, 1, "", "conclusions"], [32, 2, 1, "", "hom"], [32, 2, 1, "", "is_subdiagram"], [32, 4, 1, "", "objects"], [32, 4, 1, "", "premises"], [32, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[32, 4, 1, "", "codomain"], [32, 2, 1, "", "compose"], [32, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[32, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[32, 1, 1, "", "ArrowStringDescription"], [32, 1, 1, "", "DiagramGrid"], [32, 1, 1, "", "XypicDiagramDrawer"], [32, 3, 1, "", "preview_diagram"], [32, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[32, 4, 1, "", "height"], [32, 4, 1, "", "morphisms"], [32, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[32, 2, 1, "", "draw"]], "sympy.codegen": [[33, 0, 0, "-", "algorithms"], [33, 0, 0, "-", "approximations"], [33, 0, 0, "-", "ast"], [33, 0, 0, "-", "cfunctions"], [33, 0, 0, "-", "cnodes"], [33, 0, 0, "-", "cutils"], [33, 0, 0, "-", "cxxnodes"], [33, 0, 0, "-", "fnodes"], [33, 0, 0, "-", "futils"], [33, 0, 0, "-", "matrix_nodes"], [33, 0, 0, "-", "pyutils"], [33, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[33, 3, 1, "", "newtons_method"], [33, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[33, 1, 1, "", "SeriesApprox"], [33, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[33, 1, 1, "", "Assignment"], [33, 1, 1, "", "AssignmentBase"], [33, 1, 1, "", "Attribute"], [33, 1, 1, "", "AugmentedAssignment"], [33, 1, 1, "", "BreakToken"], [33, 1, 1, "", "CodeBlock"], [33, 1, 1, "", "Comment"], [33, 1, 1, "", "ComplexType"], [33, 1, 1, "", "ContinueToken"], [33, 1, 1, "", "Declaration"], [33, 1, 1, "", "Element"], [33, 1, 1, "", "FloatBaseType"], [33, 1, 1, "", "FloatType"], [33, 1, 1, "", "For"], [33, 1, 1, "", "FunctionCall"], [33, 1, 1, "", "FunctionDefinition"], [33, 1, 1, "", "FunctionPrototype"], [33, 1, 1, "", "IntBaseType"], [33, 1, 1, "", "Node"], [33, 1, 1, "", "NoneToken"], [33, 1, 1, "", "Pointer"], [33, 1, 1, "", "Print"], [33, 1, 1, "", "QuotedString"], [33, 1, 1, "", "Return"], [33, 1, 1, "", "Scope"], [33, 1, 1, "", "SignedIntType"], [33, 1, 1, "", "Stream"], [33, 1, 1, "", "String"], [33, 1, 1, "", "Token"], [33, 1, 1, "", "Type"], [33, 1, 1, "", "UnsignedIntType"], [33, 1, 1, "", "Variable"], [33, 1, 1, "", "While"], [33, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[33, 2, 1, "", "cse"], [33, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[33, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[33, 2, 1, "", "cast_nocheck"], [33, 4, 1, "", "decimal_dig"], [33, 4, 1, "", "dig"], [33, 4, 1, "", "eps"], [33, 4, 1, "", "max"], [33, 4, 1, "", "max_exponent"], [33, 4, 1, "", "min_exponent"], [33, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[33, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[33, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[33, 2, 1, "", "cast_check"], [33, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[33, 2, 1, "", "as_Declaration"], [33, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[33, 1, 1, "", "Cbrt"], [33, 1, 1, "", "Sqrt"], [33, 1, 1, "", "exp2"], [33, 1, 1, "", "expm1"], [33, 1, 1, "", "fma"], [33, 1, 1, "", "hypot"], [33, 1, 1, "", "log10"], [33, 1, 1, "", "log1p"], [33, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[33, 1, 1, "", "CommaOperator"], [33, 1, 1, "", "Label"], [33, 1, 1, "", "PostDecrement"], [33, 1, 1, "", "PostIncrement"], [33, 1, 1, "", "PreDecrement"], [33, 1, 1, "", "PreIncrement"], [33, 3, 1, "", "alignof"], [33, 1, 1, "", "goto"], [33, 3, 1, "", "sizeof"], [33, 1, 1, "", "struct"], [33, 1, 1, "", "union"]], "sympy.codegen.cutils": [[33, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[33, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[33, 1, 1, "", "ArrayConstructor"], [33, 1, 1, "", "Do"], [33, 1, 1, "", "Extent"], [33, 1, 1, "", "FortranReturn"], [33, 1, 1, "", "GoTo"], [33, 1, 1, "", "ImpliedDoLoop"], [33, 1, 1, "", "Module"], [33, 1, 1, "", "Program"], [33, 1, 1, "", "Subroutine"], [33, 1, 1, "", "SubroutineCall"], [33, 3, 1, "", "allocated"], [33, 3, 1, "", "array"], [33, 3, 1, "", "bind_C"], [33, 1, 1, "", "cmplx"], [33, 3, 1, "", "dimension"], [33, 1, 1, "", "dsign"], [33, 1, 1, "", "isign"], [33, 1, 1, "", "kind"], [33, 3, 1, "", "lbound"], [33, 1, 1, "", "literal_dp"], [33, 1, 1, "", "literal_sp"], [33, 1, 1, "", "merge"], [33, 3, 1, "", "reshape"], [33, 3, 1, "", "shape"], [33, 3, 1, "", "size"], [33, 1, 1, "", "use"], [33, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[33, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[33, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[33, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[33, 1, 1, "", "FuncMinusOneOptim"], [33, 1, 1, "", "Optimization"], [33, 1, 1, "", "ReplaceOptim"], [33, 3, 1, "", "create_expand_pow_optimization"], [33, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[33, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[43, 0, 0, "-", "generators"], [35, 0, 0, "-", "graycode"], [36, 0, 0, "-", "group_constructs"], [37, 0, 0, "-", "group_numbers"], [39, 0, 0, "-", "named_groups"], [40, 0, 0, "-", "partitions"], [42, 0, 0, "-", "perm_groups"], [43, 0, 0, "-", "permutations"], [44, 0, 0, "-", "polyhedron"], [45, 0, 0, "-", "prufer"], [46, 0, 0, "-", "subsets"], [47, 0, 0, "-", "tensor_can"], [48, 0, 0, "-", "testutil"], [49, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[43, 2, 1, "", "alternating"], [43, 2, 1, "", "cyclic"], [43, 2, 1, "", "dihedral"], [43, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[35, 1, 1, "", "GrayCode"], [35, 2, 1, "", "bin_to_gray"], [35, 2, 1, "", "get_subset_from_bitstring"], [35, 2, 1, "", "gray_to_bin"], [35, 2, 1, "", "graycode_subsets"], [35, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[35, 4, 1, "", "current"], [35, 2, 1, "", "generate_gray"], [35, 4, 1, "", "n"], [35, 2, 1, "", "next"], [35, 4, 1, "", "rank"], [35, 4, 1, "", "selections"], [35, 2, 1, "", "skip"], [35, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[36, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[37, 3, 1, "", "is_abelian_number"], [37, 3, 1, "", "is_cyclic_number"], [37, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[39, 3, 1, "", "AbelianGroup"], [39, 3, 1, "", "AlternatingGroup"], [39, 3, 1, "", "CyclicGroup"], [39, 3, 1, "", "DihedralGroup"], [39, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[40, 1, 1, "", "IntegerPartition"], [40, 1, 1, "", "Partition"], [40, 3, 1, "", "RGS_enum"], [40, 3, 1, "", "RGS_generalized"], [40, 3, 1, "", "RGS_rank"], [40, 3, 1, "", "RGS_unrank"], [40, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[40, 2, 1, "", "as_dict"], [40, 2, 1, "", "as_ferrers"], [40, 4, 1, "", "conjugate"], [40, 2, 1, "", "next_lex"], [40, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[40, 4, 1, "", "RGS"], [40, 2, 1, "", "from_rgs"], [40, 4, 1, "", "partition"], [40, 4, 1, "", "rank"], [40, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[42, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[42, 2, 1, "", "__contains__"], [42, 2, 1, "", "__mul__"], [42, 2, 1, "", "__new__"], [42, 5, 1, "", "__weakref__"], [42, 2, 1, "", "_coset_representative"], [42, 2, 1, "", "_distinct_primes_lemma"], [42, 4, 1, "", "_elements"], [42, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [42, 2, 1, "", "_eval_is_alt_sym_naive"], [42, 2, 1, "", "_p_elements_group"], [42, 2, 1, "", "_random_pr_init"], [42, 2, 1, "", "_sylow_alt_sym"], [42, 2, 1, "", "_union_find_merge"], [42, 2, 1, "", "_union_find_rep"], [42, 2, 1, "", "_verify"], [42, 2, 1, "", "abelian_invariants"], [42, 4, 1, "", "base"], [42, 2, 1, "", "baseswap"], [42, 4, 1, "", "basic_orbits"], [42, 4, 1, "", "basic_stabilizers"], [42, 4, 1, "", "basic_transversals"], [42, 2, 1, "", "center"], [42, 2, 1, "", "centralizer"], [42, 2, 1, "", "commutator"], [42, 2, 1, "", "composition_series"], [42, 2, 1, "", "conjugacy_class"], [42, 2, 1, "", "conjugacy_classes"], [42, 2, 1, "", "contains"], [42, 2, 1, "", "coset_factor"], [42, 2, 1, "", "coset_rank"], [42, 2, 1, "", "coset_table"], [42, 2, 1, "", "coset_transversal"], [42, 2, 1, "", "coset_unrank"], [42, 4, 1, "", "degree"], [42, 2, 1, "", "derived_series"], [42, 2, 1, "", "derived_subgroup"], [42, 4, 1, "", "elements"], [42, 2, 1, "", "equals"], [42, 2, 1, "", "generate"], [42, 2, 1, "", "generate_dimino"], [42, 2, 1, "", "generate_schreier_sims"], [42, 2, 1, "", "generator_product"], [42, 4, 1, "", "generators"], [42, 4, 1, "", "identity"], [42, 2, 1, "", "index"], [42, 4, 1, "", "is_abelian"], [42, 2, 1, "", "is_alt_sym"], [42, 4, 1, "", "is_alternating"], [42, 4, 1, "", "is_cyclic"], [42, 2, 1, "", "is_elementary"], [42, 4, 1, "", "is_nilpotent"], [42, 2, 1, "", "is_normal"], [42, 4, 1, "", "is_perfect"], [42, 4, 1, "", "is_polycyclic"], [42, 2, 1, "", "is_primitive"], [42, 4, 1, "", "is_solvable"], [42, 2, 1, "", "is_subgroup"], [42, 4, 1, "", "is_symmetric"], [42, 2, 1, "", "is_transitive"], [42, 4, 1, "", "is_trivial"], [42, 2, 1, "", "lower_central_series"], [42, 2, 1, "", "make_perm"], [42, 4, 1, "", "max_div"], [42, 2, 1, "", "minimal_block"], [42, 2, 1, "", "minimal_blocks"], [42, 2, 1, "", "normal_closure"], [42, 2, 1, "", "orbit"], [42, 2, 1, "", "orbit_rep"], [42, 2, 1, "", "orbit_transversal"], [42, 2, 1, "", "orbits"], [42, 2, 1, "", "order"], [42, 2, 1, "", "pointwise_stabilizer"], [42, 2, 1, "", "polycyclic_group"], [42, 2, 1, "", "presentation"], [42, 2, 1, "", "random"], [42, 2, 1, "", "random_pr"], [42, 2, 1, "", "random_stab"], [42, 2, 1, "", "schreier_sims"], [42, 2, 1, "", "schreier_sims_incremental"], [42, 2, 1, "", "schreier_sims_random"], [42, 2, 1, "", "schreier_vector"], [42, 2, 1, "", "stabilizer"], [42, 4, 1, "", "strong_gens"], [42, 2, 1, "", "strong_presentation"], [42, 2, 1, "", "subgroup"], [42, 2, 1, "", "subgroup_search"], [42, 2, 1, "", "sylow_subgroup"], [42, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[43, 1, 1, "", "Cycle"], [43, 1, 1, "", "Permutation"], [43, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[43, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[43, 2, 1, "", "apply"], [43, 4, 1, "", "array_form"], [43, 2, 1, "", "ascents"], [43, 2, 1, "", "atoms"], [43, 4, 1, "", "cardinality"], [43, 2, 1, "", "commutator"], [43, 2, 1, "", "commutes_with"], [43, 4, 1, "", "cycle_structure"], [43, 4, 1, "", "cycles"], [43, 4, 1, "", "cyclic_form"], [43, 2, 1, "", "descents"], [43, 2, 1, "", "from_inversion_vector"], [43, 2, 1, "", "from_sequence"], [43, 4, 1, "", "full_cyclic_form"], [43, 2, 1, "", "get_adjacency_distance"], [43, 2, 1, "", "get_adjacency_matrix"], [43, 2, 1, "", "get_positional_distance"], [43, 2, 1, "", "get_precedence_distance"], [43, 2, 1, "", "get_precedence_matrix"], [43, 2, 1, "", "index"], [43, 2, 1, "", "inversion_vector"], [43, 2, 1, "", "inversions"], [43, 4, 1, "", "is_Empty"], [43, 4, 1, "", "is_Identity"], [43, 4, 1, "", "is_Singleton"], [43, 4, 1, "", "is_even"], [43, 4, 1, "", "is_odd"], [43, 2, 1, "", "josephus"], [43, 2, 1, "", "length"], [43, 2, 1, "", "list"], [43, 2, 1, "", "max"], [43, 2, 1, "", "min"], [43, 2, 1, "", "mul_inv"], [43, 2, 1, "", "next_lex"], [43, 2, 1, "", "next_nonlex"], [43, 2, 1, "", "next_trotterjohnson"], [43, 2, 1, "", "order"], [43, 2, 1, "", "parity"], [43, 2, 1, "", "random"], [43, 2, 1, "", "rank"], [43, 2, 1, "", "rank_nonlex"], [43, 2, 1, "", "rank_trotterjohnson"], [43, 2, 1, "", "resize"], [43, 2, 1, "", "rmul"], [43, 2, 1, "", "rmul_with_af"], [43, 2, 1, "", "runs"], [43, 2, 1, "", "signature"], [43, 4, 1, "", "size"], [43, 2, 1, "", "support"], [43, 2, 1, "", "transpositions"], [43, 2, 1, "", "unrank_lex"], [43, 2, 1, "", "unrank_nonlex"], [43, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[44, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[44, 4, 1, "", "array_form"], [44, 4, 1, "", "corners"], [44, 4, 1, "", "cyclic_form"], [44, 4, 1, "", "edges"], [44, 4, 1, "", "faces"], [44, 4, 1, "", "pgroup"], [44, 2, 1, "", "reset"], [44, 2, 1, "", "rotate"], [44, 4, 1, "", "size"], [44, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[45, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[45, 2, 1, "", "edges"], [45, 2, 1, "", "next"], [45, 4, 1, "", "nodes"], [45, 2, 1, "", "prev"], [45, 2, 1, "", "prufer_rank"], [45, 4, 1, "", "prufer_repr"], [45, 4, 1, "", "rank"], [45, 4, 1, "", "size"], [45, 2, 1, "", "to_prufer"], [45, 2, 1, "", "to_tree"], [45, 4, 1, "", "tree_repr"], [45, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[46, 1, 1, "", "Subset"], [46, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[46, 2, 1, "", "bitlist_from_subset"], [46, 4, 1, "", "cardinality"], [46, 2, 1, "", "iterate_binary"], [46, 2, 1, "", "iterate_graycode"], [46, 2, 1, "", "next_binary"], [46, 2, 1, "", "next_gray"], [46, 2, 1, "", "next_lexicographic"], [46, 2, 1, "", "prev_binary"], [46, 2, 1, "", "prev_gray"], [46, 2, 1, "", "prev_lexicographic"], [46, 4, 1, "", "rank_binary"], [46, 4, 1, "", "rank_gray"], [46, 4, 1, "", "rank_lexicographic"], [46, 4, 1, "", "size"], [46, 4, 1, "", "subset"], [46, 2, 1, "", "subset_from_bitlist"], [46, 2, 1, "", "subset_indices"], [46, 4, 1, "", "superset"], [46, 4, 1, "", "superset_size"], [46, 2, 1, "", "unrank_binary"], [46, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[47, 3, 1, "", "bsgs_direct_product"], [47, 3, 1, "", "canonicalize"], [47, 3, 1, "", "double_coset_can_rep"], [47, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[48, 3, 1, "", "_cmp_perm_lists"], [48, 3, 1, "", "_naive_list_centralizer"], [48, 3, 1, "", "_verify_bsgs"], [48, 3, 1, "", "_verify_centralizer"], [48, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[49, 3, 1, "", "_base_ordering"], [49, 3, 1, "", "_check_cycles_alt_sym"], [49, 3, 1, "", "_distribute_gens_by_base"], [49, 3, 1, "", "_handle_precomputed_bsgs"], [49, 3, 1, "", "_orbits_transversals_from_bsgs"], [49, 3, 1, "", "_remove_gens"], [49, 3, 1, "", "_strip"], [49, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[50, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[50, 2, 1, "", "change_index"], [50, 4, 1, "", "has_empty_sequence"], [50, 2, 1, "", "index"], [50, 2, 1, "", "reorder"], [50, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[78, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[78, 4, 1, "", "bound_symbols"], [78, 4, 1, "", "free_symbols"], [78, 4, 1, "", "function"], [78, 4, 1, "", "has_finite_limits"], [78, 4, 1, "", "has_reversed_limits"], [78, 4, 1, "", "is_number"], [78, 4, 1, "", "limits"], [78, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[50, 3, 1, "", "gosper_normal"], [50, 3, 1, "", "gosper_sum"], [50, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[50, 1, 1, "", "Product"], [50, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[50, 2, 1, "", "is_convergent"], [50, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[50, 1, 1, "", "Sum"], [50, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[50, 2, 1, "", "euler_maclaurin"], [50, 2, 1, "", "eval_zeta_function"], [50, 2, 1, "", "is_absolutely_convergent"], [50, 2, 1, "", "is_convergent"], [50, 2, 1, "", "reverse_order"]], "sympy.core": [[51, 0, 0, "-", "add"], [51, 0, 0, "-", "assumptions"], [51, 0, 0, "-", "basic"], [51, 0, 0, "-", "cache"], [51, 0, 0, "-", "containers"], [51, 0, 0, "-", "core"], [51, 0, 0, "-", "evalf"], [51, 0, 0, "-", "expr"], [51, 0, 0, "-", "exprtools"], [51, 0, 0, "-", "function"], [51, 0, 0, "-", "kind"], [51, 0, 0, "-", "mod"], [51, 0, 0, "-", "mul"], [51, 0, 0, "-", "multidimensional"], [51, 0, 0, "-", "numbers"], [51, 0, 0, "-", "power"], [51, 0, 0, "-", "random"], [51, 0, 0, "-", "relational"], [51, 0, 0, "-", "singleton"], [51, 0, 0, "-", "symbol"], [51, 0, 0, "-", "sympify"], [51, 0, 0, "-", "traversal"]], "sympy.core.add": [[51, 1, 1, "", "Add"]], "sympy.core.add.Add": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_add"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_numer_denom"], [51, 2, 1, "", "as_real_imag"], [51, 2, 1, "", "as_two_terms"], [51, 2, 1, "", "class_key"], [51, 2, 1, "", "extract_leading_order"], [51, 2, 1, "", "flatten"], [51, 2, 1, "", "primitive"]], "sympy.core.basic": [[51, 1, 1, "", "Atom"], [51, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[51, 4, 1, "", "args"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_dummy"], [51, 4, 1, "", "assumptions0"], [51, 2, 1, "", "atoms"], [51, 4, 1, "", "canonical_variables"], [51, 2, 1, "", "class_key"], [51, 2, 1, "", "compare"], [51, 2, 1, "", "count"], [51, 2, 1, "", "count_ops"], [51, 2, 1, "", "doit"], [51, 2, 1, "", "dummy_eq"], [51, 2, 1, "", "find"], [51, 4, 1, "", "free_symbols"], [51, 2, 1, "", "fromiter"], [51, 4, 1, "", "func"], [51, 2, 1, "", "has"], [51, 2, 1, "", "has_free"], [51, 4, 1, "", "is_comparable"], [51, 2, 1, "", "match"], [51, 2, 1, "", "matches"], [51, 2, 1, "", "rcall"], [51, 2, 1, "", "refine"], [51, 2, 1, "", "replace"], [51, 2, 1, "", "rewrite"], [51, 2, 1, "", "simplify"], [51, 2, 1, "", "sort_key"], [51, 2, 1, "", "subs"], [51, 2, 1, "", "xreplace"]], "sympy.core.cache": [[51, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[51, 1, 1, "", "Dict"], [51, 1, 1, "", "Tuple"], [51, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[51, 2, 1, "", "get"], [51, 2, 1, "", "items"], [51, 2, 1, "", "keys"], [51, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[51, 2, 1, "", "index"], [51, 4, 1, "", "kind"], [51, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[51, 1, 1, "", "EvalfMixin"], [51, 3, 1, "", "N"], [51, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[51, 2, 1, "", "evalf"], [51, 2, 1, "", "n"]], "sympy.core.expr": [[51, 1, 1, "", "AtomicExpr"], [51, 1, 1, "", "Expr"], [51, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[51, 2, 1, "", "apart"], [51, 2, 1, "", "args_cnc"], [51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_coeff_add"], [51, 2, 1, "", "as_coeff_exponent"], [51, 2, 1, "", "as_coeff_mul"], [51, 2, 1, "", "as_coefficient"], [51, 2, 1, "", "as_coefficients_dict"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_expr"], [51, 2, 1, "", "as_independent"], [51, 2, 1, "", "as_leading_term"], [51, 2, 1, "", "as_numer_denom"], [51, 2, 1, "", "as_ordered_factors"], [51, 2, 1, "", "as_ordered_terms"], [51, 2, 1, "", "as_poly"], [51, 2, 1, "", "as_powers_dict"], [51, 2, 1, "", "as_real_imag"], [51, 2, 1, "", "as_terms"], [51, 2, 1, "", "aseries"], [51, 2, 1, "", "cancel"], [51, 2, 1, "", "coeff"], [51, 2, 1, "", "collect"], [51, 2, 1, "", "combsimp"], [51, 2, 1, "", "compute_leading_term"], [51, 2, 1, "", "conjugate"], [51, 2, 1, "", "could_extract_minus_sign"], [51, 2, 1, "", "count_ops"], [51, 2, 1, "", "equals"], [51, 2, 1, "", "expand"], [51, 4, 1, "", "expr_free_symbols"], [51, 2, 1, "", "extract_additively"], [51, 2, 1, "", "extract_branch_factor"], [51, 2, 1, "", "extract_multiplicatively"], [51, 2, 1, "", "factor"], [51, 2, 1, "", "fourier_series"], [51, 2, 1, "", "fps"], [51, 2, 1, "", "gammasimp"], [51, 2, 1, "", "getO"], [51, 2, 1, "", "getn"], [51, 2, 1, "", "integrate"], [51, 2, 1, "", "invert"], [51, 2, 1, "", "is_algebraic_expr"], [51, 2, 1, "", "is_constant"], [51, 2, 1, "", "is_meromorphic"], [51, 4, 1, "", "is_number"], [51, 2, 1, "", "is_polynomial"], [51, 2, 1, "", "is_rational_function"], [51, 2, 1, "", "leadterm"], [51, 2, 1, "", "limit"], [51, 2, 1, "", "lseries"], [51, 2, 1, "", "normal"], [51, 2, 1, "", "nseries"], [51, 2, 1, "", "nsimplify"], [51, 2, 1, "", "powsimp"], [51, 2, 1, "", "primitive"], [51, 2, 1, "", "radsimp"], [51, 2, 1, "", "ratsimp"], [51, 2, 1, "", "removeO"], [51, 2, 1, "", "round"], [51, 2, 1, "", "separate"], [51, 2, 1, "", "series"], [51, 2, 1, "", "taylor_term"], [51, 2, 1, "", "together"], [51, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[51, 3, 1, "", "factor_terms"], [51, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[51, 1, 1, "", "Derivative"], [51, 1, 1, "", "Function"], [51, 1, 1, "", "FunctionClass"], [51, 1, 1, "", "Lambda"], [51, 1, 1, "", "PoleError"], [51, 1, 1, "", "Subs"], [51, 1, 1, "", "WildFunction"], [51, 3, 1, "", "count_ops"], [51, 3, 1, "", "diff"], [51, 3, 1, "", "expand"], [51, 3, 1, "", "expand_complex"], [51, 3, 1, "", "expand_func"], [51, 3, 1, "", "expand_log"], [51, 3, 1, "", "expand_mul"], [51, 3, 1, "", "expand_multinomial"], [51, 3, 1, "", "expand_power_base"], [51, 3, 1, "", "expand_power_exp"], [51, 3, 1, "", "expand_trig"], [51, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[51, 4, 1, "", "_diff_wrt"], [51, 2, 1, "", "_sort_variable_count"], [51, 2, 1, "", "as_finite_difference"], [51, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[51, 2, 1, "", "as_base_exp"], [51, 2, 1, "", "fdiff"], [51, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[51, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[51, 4, 1, "", "bound_symbols"], [51, 4, 1, "", "expr"], [51, 4, 1, "", "is_identity"], [51, 4, 1, "", "signature"], [51, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[51, 4, 1, "", "bound_symbols"], [51, 4, 1, "", "expr"], [51, 4, 1, "", "point"], [51, 4, 1, "", "variables"]], "sympy.core.kind": [[51, 5, 1, "", "BooleanKind"], [51, 1, 1, "", "Kind"], [51, 5, 1, "", "NumberKind"], [51, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[51, 1, 1, "", "Mod"]], "sympy.core.mul": [[51, 1, 1, "", "Mul"], [51, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_ordered_factors"], [51, 2, 1, "", "as_two_terms"], [51, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[51, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[51, 1, 1, "", "AlgebraicNumber"], [51, 1, 1, "", "Catalan"], [51, 1, 1, "", "ComplexInfinity"], [51, 1, 1, "", "EulerGamma"], [51, 1, 1, "", "Exp1"], [51, 1, 1, "", "Float"], [51, 1, 1, "", "GoldenRatio"], [51, 1, 1, "", "Half"], [51, 1, 1, "", "ImaginaryUnit"], [51, 1, 1, "", "Infinity"], [51, 1, 1, "", "Integer"], [51, 1, 1, "", "NaN"], [51, 1, 1, "", "NegativeInfinity"], [51, 1, 1, "", "NegativeOne"], [51, 1, 1, "", "Number"], [51, 1, 1, "", "NumberSymbol"], [51, 1, 1, "", "One"], [51, 1, 1, "", "Pi"], [51, 1, 1, "", "Rational"], [51, 5, 1, "", "RealNumber"], [51, 1, 1, "", "TribonacciConstant"], [51, 1, 1, "", "Zero"], [51, 3, 1, "", "igcd"], [51, 3, 1, "", "ilcm"], [51, 3, 1, "", "mod_inverse"], [51, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[51, 2, 1, "", "__new__"], [51, 2, 1, "", "as_expr"], [51, 2, 1, "", "as_poly"], [51, 2, 1, "", "coeffs"], [51, 2, 1, "", "field_element"], [51, 4, 1, "", "is_aliased"], [51, 4, 1, "", "is_primitive_element"], [51, 2, 1, "", "minpoly_of_element"], [51, 2, 1, "", "native_coeffs"], [51, 2, 1, "", "primitive_element"], [51, 2, 1, "", "to_algebraic_integer"], [51, 2, 1, "", "to_primitive_element"], [51, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "cofactors"], [51, 2, 1, "", "gcd"], [51, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[51, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "factors"], [51, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[51, 1, 1, "", "Pow"], [51, 3, 1, "", "integer_log"], [51, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[51, 2, 1, "", "as_base_exp"], [51, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[51, 3, 1, "", "_randint"], [51, 3, 1, "", "_randrange"], [51, 3, 1, "", "random_complex_number"], [51, 3, 1, "", "test_derivative_numerically"], [51, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[51, 5, 1, "", "Eq"], [51, 1, 1, "", "Equality"], [51, 5, 1, "", "Ge"], [51, 1, 1, "", "GreaterThan"], [51, 5, 1, "", "Gt"], [51, 5, 1, "", "Le"], [51, 1, 1, "", "LessThan"], [51, 5, 1, "", "Lt"], [51, 5, 1, "", "Ne"], [51, 5, 1, "", "Rel"], [51, 1, 1, "", "Relational"], [51, 1, 1, "", "StrictGreaterThan"], [51, 1, 1, "", "StrictLessThan"], [51, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[51, 2, 1, "", "as_poly"], [51, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[51, 4, 1, "", "canonical"], [51, 2, 1, "", "equals"], [51, 4, 1, "", "lhs"], [51, 4, 1, "", "negated"], [51, 4, 1, "", "reversed"], [51, 4, 1, "", "reversedsign"], [51, 4, 1, "", "rhs"], [51, 4, 1, "", "strict"], [51, 4, 1, "", "weak"]], "sympy.core.singleton": [[51, 1, 1, "", "Singleton"], [51, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[51, 3, 1, "", "default_sort_key"], [51, 3, 1, "", "ordered"]], "sympy.core.symbol": [[51, 1, 1, "", "Dummy"], [51, 1, 1, "", "Symbol"], [51, 1, 1, "", "Wild"], [51, 3, 1, "", "symbols"], [51, 3, 1, "", "var"]], "sympy.core.sympify": [[51, 3, 1, "", "sympify"]], "sympy.core.traversal": [[51, 3, 1, "", "bottom_up"], [51, 3, 1, "", "postorder_traversal"], [51, 3, 1, "", "preorder_traversal"], [51, 3, 1, "", "use"], [51, 3, 1, "", "walk"]], "sympy.crypto": [[52, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[52, 3, 1, "", "AZ"], [52, 3, 1, "", "bifid5_square"], [52, 3, 1, "", "bifid6_square"], [52, 3, 1, "", "check_and_join"], [52, 3, 1, "", "cycle_list"], [52, 3, 1, "", "decipher_affine"], [52, 3, 1, "", "decipher_atbash"], [52, 3, 1, "", "decipher_bifid"], [52, 3, 1, "", "decipher_bifid5"], [52, 3, 1, "", "decipher_bifid6"], [52, 3, 1, "", "decipher_elgamal"], [52, 3, 1, "", "decipher_gm"], [52, 3, 1, "", "decipher_hill"], [52, 3, 1, "", "decipher_kid_rsa"], [52, 3, 1, "", "decipher_railfence"], [52, 3, 1, "", "decipher_rot13"], [52, 3, 1, "", "decipher_rsa"], [52, 3, 1, "", "decipher_shift"], [52, 3, 1, "", "decipher_vigenere"], [52, 3, 1, "", "decode_morse"], [52, 3, 1, "", "dh_private_key"], [52, 3, 1, "", "dh_public_key"], [52, 3, 1, "", "dh_shared_key"], [52, 3, 1, "", "elgamal_private_key"], [52, 3, 1, "", "elgamal_public_key"], [52, 3, 1, "", "encipher_affine"], [52, 3, 1, "", "encipher_atbash"], [52, 3, 1, "", "encipher_bifid"], [52, 3, 1, "", "encipher_bifid5"], [52, 3, 1, "", "encipher_bifid6"], [52, 3, 1, "", "encipher_elgamal"], [52, 3, 1, "", "encipher_gm"], [52, 3, 1, "", "encipher_hill"], [52, 3, 1, "", "encipher_kid_rsa"], [52, 3, 1, "", "encipher_railfence"], [52, 3, 1, "", "encipher_rot13"], [52, 3, 1, "", "encipher_rsa"], [52, 3, 1, "", "encipher_shift"], [52, 3, 1, "", "encipher_substitution"], [52, 3, 1, "", "encipher_vigenere"], [52, 3, 1, "", "encode_morse"], [52, 3, 1, "", "gm_private_key"], [52, 3, 1, "", "gm_public_key"], [52, 3, 1, "", "kid_rsa_private_key"], [52, 3, 1, "", "kid_rsa_public_key"], [52, 3, 1, "", "lfsr_autocorrelation"], [52, 3, 1, "", "lfsr_connection_polynomial"], [52, 3, 1, "", "lfsr_sequence"], [52, 3, 1, "", "padded_key"], [52, 3, 1, "", "rsa_private_key"], [52, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[53, 1, 1, "", "BaseCovarDerivativeOp"], [53, 1, 1, "", "BaseScalarField"], [53, 1, 1, "", "BaseVectorField"], [53, 1, 1, "", "Commutator"], [53, 1, 1, "", "CoordSystem"], [53, 1, 1, "", "CoordinateSymbol"], [53, 1, 1, "", "CovarDerivativeOp"], [53, 1, 1, "", "Differential"], [53, 1, 1, "", "LieDerivative"], [53, 1, 1, "", "Manifold"], [53, 1, 1, "", "Patch"], [53, 1, 1, "", "Point"], [53, 1, 1, "", "TensorProduct"], [53, 1, 1, "", "WedgeProduct"], [53, 3, 1, "", "intcurve_diffequ"], [53, 3, 1, "", "intcurve_series"], [53, 3, 1, "", "metric_to_Christoffel_1st"], [53, 3, 1, "", "metric_to_Christoffel_2nd"], [53, 3, 1, "", "metric_to_Ricci_components"], [53, 3, 1, "", "metric_to_Riemann_components"], [53, 3, 1, "", "twoform_to_matrix"], [53, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[53, 2, 1, "", "base_oneform"], [53, 2, 1, "", "base_oneforms"], [53, 2, 1, "", "base_scalar"], [53, 2, 1, "", "base_scalars"], [53, 2, 1, "", "base_vector"], [53, 2, 1, "", "base_vectors"], [53, 2, 1, "", "coord_function"], [53, 2, 1, "", "coord_functions"], [53, 2, 1, "", "coord_tuple_transform_to"], [53, 2, 1, "", "jacobian"], [53, 2, 1, "", "jacobian_determinant"], [53, 2, 1, "", "jacobian_matrix"], [53, 2, 1, "", "point"], [53, 2, 1, "", "point_to_coords"], [53, 2, 1, "", "transform"], [53, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[53, 2, 1, "", "coords"]], "sympy.discrete": [[54, 0, 0, "-", "convolutions"], [54, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[54, 3, 1, "", "convolution"], [54, 3, 1, "", "convolution_fft"], [54, 3, 1, "", "convolution_fwht"], [54, 3, 1, "", "convolution_ntt"], [54, 3, 1, "", "convolution_subset"], [54, 3, 1, "", "covering_product"], [54, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[54, 3, 1, "", "fft"], [54, 3, 1, "", "fwht"], [54, 3, 1, "", "ifft"], [54, 3, 1, "", "ifwht"], [54, 3, 1, "", "intt"], [54, 3, 1, "", "inverse_mobius_transform"], [54, 3, 1, "", "mobius_transform"], [54, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[187, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[56, 1, 1, "", "FallingFactorial"], [56, 1, 1, "", "MultiFactorial"], [56, 1, 1, "", "RisingFactorial"], [56, 1, 1, "", "binomial"], [56, 1, 1, "", "factorial"], [56, 1, 1, "", "factorial2"], [56, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[56, 1, 1, "", "bell"], [56, 1, 1, "", "bernoulli"], [56, 1, 1, "", "catalan"], [56, 1, 1, "", "euler"], [56, 1, 1, "", "fibonacci"], [56, 1, 1, "", "genocchi"], [56, 1, 1, "", "harmonic"], [56, 1, 1, "", "lucas"], [56, 3, 1, "", "nC"], [56, 3, 1, "", "nP"], [56, 3, 1, "", "nT"], [56, 1, 1, "", "partition"], [56, 3, 1, "", "stirling"], [56, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[57, 1, 1, "", "Abs"], [57, 1, 1, "", "arg"], [57, 1, 1, "", "conjugate"], [57, 1, 1, "", "im"], [57, 1, 1, "", "periodic_argument"], [57, 1, 1, "", "polar_lift"], [57, 1, 1, "", "principal_branch"], [57, 1, 1, "", "re"], [57, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[57, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[57, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[57, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[57, 1, 1, "", "LambertW"], [57, 1, 1, "", "exp"], [57, 1, 1, "", "exp_polar"], [57, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[57, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[57, 2, 1, "", "as_real_imag"], [57, 4, 1, "", "base"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[57, 2, 1, "", "as_base_exp"], [57, 2, 1, "", "as_real_imag"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "inverse"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[57, 1, 1, "", "HyperbolicFunction"], [57, 1, 1, "", "acosh"], [57, 1, 1, "", "acoth"], [57, 1, 1, "", "acsch"], [57, 1, 1, "", "asech"], [57, 1, 1, "", "asinh"], [57, 1, 1, "", "atanh"], [57, 1, 1, "", "cosh"], [57, 1, 1, "", "coth"], [57, 1, 1, "", "csch"], [57, 1, 1, "", "sech"], [57, 1, 1, "", "sinh"], [57, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[57, 2, 1, "", "fdiff"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[57, 2, 1, "", "as_real_imag"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "inverse"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[57, 1, 1, "", "RoundFunction"], [57, 1, 1, "", "ceiling"], [57, 1, 1, "", "floor"], [57, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[57, 1, 1, "", "IdentityFunction"], [57, 1, 1, "", "Max"], [57, 1, 1, "", "Min"], [57, 3, 1, "", "cbrt"], [57, 3, 1, "", "real_root"], [57, 3, 1, "", "root"], [57, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[57, 1, 1, "", "ExprCondPair"], [57, 1, 1, "", "Piecewise"], [57, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[57, 4, 1, "", "cond"], [57, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[57, 2, 1, "", "_eval_integral"], [57, 2, 1, "", "as_expr_set_pairs"], [57, 2, 1, "", "doit"], [57, 2, 1, "", "eval"], [57, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[57, 1, 1, "", "acos"], [57, 1, 1, "", "acot"], [57, 1, 1, "", "acsc"], [57, 1, 1, "", "asec"], [57, 1, 1, "", "asin"], [57, 1, 1, "", "atan"], [57, 1, 1, "", "atan2"], [57, 1, 1, "", "cos"], [57, 1, 1, "", "cot"], [57, 1, 1, "", "csc"], [57, 1, 1, "", "sec"], [57, 1, 1, "", "sin"], [57, 1, 1, "", "sinc"], [57, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[57, 2, 1, "", "inverse"]], "sympy.functions.special": [[59, 0, 0, "-", "bessel"], [59, 0, 0, "-", "beta_functions"], [59, 0, 0, "-", "elliptic_integrals"], [59, 0, 0, "-", "error_functions"], [59, 0, 0, "-", "gamma_functions"], [59, 0, 0, "-", "mathieu_functions"], [59, 0, 0, "-", "polynomials"], [59, 0, 0, "-", "singularity_functions"], [59, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[59, 1, 1, "", "AiryBase"], [59, 1, 1, "", "BesselBase"], [59, 1, 1, "", "airyai"], [59, 1, 1, "", "airyaiprime"], [59, 1, 1, "", "airybi"], [59, 1, 1, "", "airybiprime"], [59, 1, 1, "", "besseli"], [59, 1, 1, "", "besselj"], [59, 1, 1, "", "besselk"], [59, 1, 1, "", "bessely"], [59, 1, 1, "", "hankel1"], [59, 1, 1, "", "hankel2"], [59, 1, 1, "", "jn"], [59, 3, 1, "", "jn_zeros"], [59, 1, 1, "", "marcumq"], [59, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[59, 4, 1, "", "argument"], [59, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[59, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[59, 3, 1, "", "bspline_basis"], [59, 3, 1, "", "bspline_basis_set"], [59, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[59, 1, 1, "", "DiracDelta"], [59, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"], [59, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"], [59, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[59, 1, 1, "", "elliptic_e"], [59, 1, 1, "", "elliptic_f"], [59, 1, 1, "", "elliptic_k"], [59, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[59, 1, 1, "", "Chi"], [59, 1, 1, "", "Ci"], [59, 3, 1, "", "E1"], [59, 1, 1, "", "Ei"], [59, 1, 1, "", "FresnelIntegral"], [59, 1, 1, "", "Li"], [59, 1, 1, "", "Shi"], [59, 1, 1, "", "Si"], [59, 1, 1, "", "erf"], [59, 1, 1, "", "erf2"], [59, 1, 1, "", "erf2inv"], [59, 1, 1, "", "erfc"], [59, 1, 1, "", "erfcinv"], [59, 1, 1, "", "erfi"], [59, 1, 1, "", "erfinv"], [59, 1, 1, "", "expint"], [59, 1, 1, "", "fresnelc"], [59, 1, 1, "", "fresnels"], [59, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[59, 1, 1, "", "digamma"], [59, 1, 1, "", "gamma"], [59, 1, 1, "", "loggamma"], [59, 1, 1, "", "lowergamma"], [59, 1, 1, "", "multigamma"], [59, 1, 1, "", "polygamma"], [59, 1, 1, "", "trigamma"], [59, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[59, 1, 1, "", "appellf1"], [59, 1, 1, "", "hyper"], [59, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[59, 4, 1, "", "ap"], [59, 4, 1, "", "argument"], [59, 4, 1, "", "bq"], [59, 4, 1, "", "convergence_statement"], [59, 4, 1, "", "eta"], [59, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[59, 4, 1, "", "an"], [59, 4, 1, "", "aother"], [59, 4, 1, "", "ap"], [59, 4, 1, "", "argument"], [59, 4, 1, "", "bm"], [59, 4, 1, "", "bother"], [59, 4, 1, "", "bq"], [59, 4, 1, "", "delta"], [59, 2, 1, "", "get_period"], [59, 2, 1, "", "integrand"], [59, 4, 1, "", "is_number"], [59, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[59, 1, 1, "", "MathieuBase"], [59, 1, 1, "", "mathieuc"], [59, 1, 1, "", "mathieucprime"], [59, 1, 1, "", "mathieus"], [59, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[59, 1, 1, "", "assoc_laguerre"], [59, 1, 1, "", "assoc_legendre"], [59, 1, 1, "", "chebyshevt"], [59, 1, 1, "", "chebyshevt_root"], [59, 1, 1, "", "chebyshevu"], [59, 1, 1, "", "chebyshevu_root"], [59, 1, 1, "", "gegenbauer"], [59, 1, 1, "", "hermite"], [59, 1, 1, "", "jacobi"], [59, 3, 1, "", "jacobi_normalized"], [59, 1, 1, "", "laguerre"], [59, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[59, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[59, 1, 1, "", "Ynm"], [59, 3, 1, "", "Ynm_c"], [59, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[59, 3, 1, "", "Eijk"], [59, 1, 1, "", "KroneckerDelta"], [59, 1, 1, "", "LeviCivita"], [59, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[59, 2, 1, "", "eval"], [59, 4, 1, "", "indices_contain_equal_information"], [59, 4, 1, "", "is_above_fermi"], [59, 4, 1, "", "is_below_fermi"], [59, 4, 1, "", "is_only_above_fermi"], [59, 4, 1, "", "is_only_below_fermi"], [59, 4, 1, "", "killable_index"], [59, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[59, 1, 1, "", "dirichlet_eta"], [59, 1, 1, "", "lerchphi"], [59, 1, 1, "", "polylog"], [59, 1, 1, "", "stieltjes"], [59, 1, 1, "", "zeta"]], "sympy.geometry": [[60, 0, 0, "-", "curve"], [61, 0, 0, "-", "ellipse"], [62, 0, 0, "-", "entity"], [64, 0, 0, "-", "line"], [65, 0, 0, "-", "plane"], [66, 0, 0, "-", "point"], [67, 0, 0, "-", "polygon"], [68, 0, 0, "-", "util"]], "sympy.geometry.curve": [[60, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[60, 4, 1, "", "ambient_dimension"], [60, 2, 1, "", "arbitrary_point"], [60, 4, 1, "", "free_symbols"], [60, 4, 1, "", "functions"], [60, 4, 1, "", "length"], [60, 4, 1, "", "limits"], [60, 4, 1, "", "parameter"], [60, 2, 1, "", "plot_interval"], [60, 2, 1, "", "rotate"], [60, 2, 1, "", "scale"], [60, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[61, 1, 1, "", "Circle"], [61, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[61, 4, 1, "", "circumference"], [61, 2, 1, "", "equation"], [61, 2, 1, "", "intersection"], [61, 4, 1, "", "radius"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "scale"], [61, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[61, 4, 1, "", "apoapsis"], [61, 2, 1, "", "arbitrary_point"], [61, 4, 1, "", "area"], [61, 2, 1, "", "auxiliary_circle"], [61, 4, 1, "", "bounds"], [61, 4, 1, "", "center"], [61, 4, 1, "", "circumference"], [61, 2, 1, "", "director_circle"], [61, 4, 1, "", "eccentricity"], [61, 2, 1, "", "encloses_point"], [61, 2, 1, "", "equation"], [61, 2, 1, "", "evolute"], [61, 4, 1, "", "foci"], [61, 4, 1, "", "focus_distance"], [61, 4, 1, "", "hradius"], [61, 2, 1, "", "intersection"], [61, 2, 1, "", "is_tangent"], [61, 4, 1, "", "major"], [61, 4, 1, "", "minor"], [61, 2, 1, "", "normal_lines"], [61, 4, 1, "", "periapsis"], [61, 2, 1, "", "plot_interval"], [61, 2, 1, "", "polar_second_moment_of_area"], [61, 2, 1, "", "random_point"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "rotate"], [61, 2, 1, "", "scale"], [61, 2, 1, "", "second_moment_of_area"], [61, 2, 1, "", "section_modulus"], [61, 4, 1, "", "semilatus_rectum"], [61, 2, 1, "", "tangent_lines"], [61, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[62, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[62, 4, 1, "", "ambient_dimension"], [62, 4, 1, "", "bounds"], [62, 2, 1, "", "encloses"], [62, 2, 1, "", "intersection"], [62, 2, 1, "", "is_similar"], [62, 2, 1, "", "parameter_value"], [62, 2, 1, "", "reflect"], [62, 2, 1, "", "rotate"], [62, 2, 1, "", "scale"], [62, 2, 1, "", "translate"]], "sympy.geometry.line": [[64, 1, 1, "", "Line"], [64, 1, 1, "", "Line2D"], [64, 1, 1, "", "Line3D"], [64, 1, 1, "", "LinearEntity"], [64, 1, 1, "", "LinearEntity2D"], [64, 1, 1, "", "LinearEntity3D"], [64, 1, 1, "", "Ray"], [64, 1, 1, "", "Ray2D"], [64, 1, 1, "", "Ray3D"], [64, 1, 1, "", "Segment"], [64, 1, 1, "", "Segment2D"], [64, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[64, 4, 1, "", "coefficients"], [64, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[64, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[64, 4, 1, "", "ambient_dimension"], [64, 2, 1, "", "angle_between"], [64, 2, 1, "", "arbitrary_point"], [64, 2, 1, "", "are_concurrent"], [64, 2, 1, "", "bisectors"], [64, 2, 1, "", "contains"], [64, 4, 1, "", "direction"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "is_parallel"], [64, 2, 1, "", "is_perpendicular"], [64, 2, 1, "", "is_similar"], [64, 4, 1, "", "length"], [64, 4, 1, "", "p1"], [64, 4, 1, "", "p2"], [64, 2, 1, "", "parallel_line"], [64, 2, 1, "", "perpendicular_line"], [64, 2, 1, "", "perpendicular_segment"], [64, 4, 1, "", "points"], [64, 2, 1, "", "projection"], [64, 2, 1, "", "random_point"], [64, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[64, 4, 1, "", "bounds"], [64, 2, 1, "", "perpendicular_line"], [64, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[64, 4, 1, "", "direction_cosine"], [64, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "plot_interval"], [64, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[64, 2, 1, "", "closing_angle"], [64, 4, 1, "", "xdirection"], [64, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[64, 4, 1, "", "xdirection"], [64, 4, 1, "", "ydirection"], [64, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 4, 1, "", "length"], [64, 4, 1, "", "midpoint"], [64, 2, 1, "", "perpendicular_bisector"], [64, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[65, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[65, 2, 1, "", "angle_between"], [65, 2, 1, "", "arbitrary_point"], [65, 2, 1, "", "are_concurrent"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "equals"], [65, 2, 1, "", "equation"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "is_coplanar"], [65, 2, 1, "", "is_parallel"], [65, 2, 1, "", "is_perpendicular"], [65, 4, 1, "", "normal_vector"], [65, 4, 1, "", "p1"], [65, 2, 1, "", "parallel_plane"], [65, 2, 1, "", "parameter_value"], [65, 2, 1, "", "perpendicular_line"], [65, 2, 1, "", "perpendicular_plane"], [65, 2, 1, "", "projection"], [65, 2, 1, "", "projection_line"], [65, 2, 1, "", "random_point"]], "sympy.geometry.point": [[66, 1, 1, "", "Point"], [66, 1, 1, "", "Point2D"], [66, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[66, 2, 1, "", "affine_rank"], [66, 4, 1, "", "ambient_dimension"], [66, 2, 1, "", "are_coplanar"], [66, 2, 1, "", "canberra_distance"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "dot"], [66, 2, 1, "", "equals"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "is_collinear"], [66, 2, 1, "", "is_concyclic"], [66, 4, 1, "", "is_nonzero"], [66, 2, 1, "", "is_scalar_multiple"], [66, 4, 1, "", "is_zero"], [66, 4, 1, "", "length"], [66, 2, 1, "", "midpoint"], [66, 4, 1, "", "origin"], [66, 4, 1, "", "orthogonal_direction"], [66, 2, 1, "", "project"], [66, 2, 1, "", "taxicab_distance"], [66, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[66, 4, 1, "", "bounds"], [66, 4, 1, "", "coordinates"], [66, 2, 1, "", "rotate"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "transform"], [66, 2, 1, "", "translate"], [66, 4, 1, "", "x"], [66, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[66, 2, 1, "", "are_collinear"], [66, 4, 1, "", "coordinates"], [66, 2, 1, "", "direction_cosine"], [66, 2, 1, "", "direction_ratio"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "transform"], [66, 2, 1, "", "translate"], [66, 4, 1, "", "x"], [66, 4, 1, "", "y"], [66, 4, 1, "", "z"]], "sympy.geometry.polygon": [[67, 1, 1, "", "Polygon"], [67, 1, 1, "", "RegularPolygon"], [67, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[67, 4, 1, "", "angles"], [67, 2, 1, "", "arbitrary_point"], [67, 4, 1, "", "area"], [67, 2, 1, "", "bisectors"], [67, 4, 1, "", "bounds"], [67, 4, 1, "", "centroid"], [67, 2, 1, "", "cut_section"], [67, 2, 1, "", "distance"], [67, 2, 1, "", "encloses_point"], [67, 2, 1, "", "first_moment_of_area"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "is_convex"], [67, 4, 1, "", "perimeter"], [67, 2, 1, "", "plot_interval"], [67, 2, 1, "", "polar_second_moment_of_area"], [67, 2, 1, "", "second_moment_of_area"], [67, 2, 1, "", "section_modulus"], [67, 4, 1, "", "sides"], [67, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[67, 4, 1, "", "angles"], [67, 4, 1, "", "apothem"], [67, 4, 1, "", "area"], [67, 4, 1, "", "args"], [67, 4, 1, "", "center"], [67, 4, 1, "", "centroid"], [67, 4, 1, "", "circumcenter"], [67, 4, 1, "", "circumcircle"], [67, 4, 1, "", "circumradius"], [67, 2, 1, "", "encloses_point"], [67, 4, 1, "", "exterior_angle"], [67, 4, 1, "", "incircle"], [67, 4, 1, "", "inradius"], [67, 4, 1, "", "interior_angle"], [67, 4, 1, "", "length"], [67, 4, 1, "", "radius"], [67, 2, 1, "", "reflect"], [67, 2, 1, "", "rotate"], [67, 4, 1, "", "rotation"], [67, 2, 1, "", "scale"], [67, 2, 1, "", "spin"], [67, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[67, 4, 1, "", "altitudes"], [67, 2, 1, "", "bisectors"], [67, 4, 1, "", "circumcenter"], [67, 4, 1, "", "circumcircle"], [67, 4, 1, "", "circumradius"], [67, 4, 1, "", "eulerline"], [67, 4, 1, "", "excenters"], [67, 4, 1, "", "exradii"], [67, 4, 1, "", "incenter"], [67, 4, 1, "", "incircle"], [67, 4, 1, "", "inradius"], [67, 2, 1, "", "is_equilateral"], [67, 2, 1, "", "is_isosceles"], [67, 2, 1, "", "is_right"], [67, 2, 1, "", "is_scalene"], [67, 2, 1, "", "is_similar"], [67, 4, 1, "", "medial"], [67, 4, 1, "", "medians"], [67, 4, 1, "", "nine_point_circle"], [67, 4, 1, "", "orthocenter"], [67, 4, 1, "", "vertices"]], "sympy.geometry.util": [[68, 3, 1, "", "are_similar"], [68, 3, 1, "", "centroid"], [68, 3, 1, "", "convex_hull"], [68, 3, 1, "", "idiff"], [68, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[74, 1, 1, "", "DifferentialOperator"], [74, 1, 1, "", "DifferentialOperatorAlgebra"], [74, 3, 1, "", "DifferentialOperators"], [74, 1, 1, "", "HolonomicFunction"], [72, 3, 1, "", "_convert_poly_rat_alg"], [72, 3, 1, "", "_create_table"], [70, 3, 1, "", "expr_to_holonomic"], [70, 3, 1, "", "from_hyper"], [70, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[74, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[73, 2, 1, "", "composition"], [73, 2, 1, "", "diff"], [73, 2, 1, "", "evalf"], [73, 2, 1, "", "integrate"], [73, 2, 1, "", "series"], [73, 2, 1, "", "to_expr"], [73, 2, 1, "", "to_hyper"], [73, 2, 1, "", "to_meijerg"], [73, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[78, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[78, 3, 1, "", "components"], [78, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[78, 1, 1, "", "Integral"], [78, 3, 1, "", "integrate"], [78, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[78, 2, 1, "", "as_sum"], [78, 2, 1, "", "doit"], [78, 4, 1, "", "free_symbols"], [78, 6, 1, "", "is_commutative"], [78, 2, 1, "", "principal_value"], [78, 2, 1, "", "transform"]], "sympy.integrals": [[78, 0, 0, "-", "intpoly"], [76, 0, 0, "-", "meijerint"], [76, 0, 0, "-", "meijerint_doc"], [78, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[78, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[78, 3, 1, "", "integral_steps"], [78, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[76, 7, 1, "", "_CoeffExpValueError"], [76, 3, 1, "", "_check_antecedents"], [76, 3, 1, "", "_check_antecedents_1"], [76, 3, 1, "", "_check_antecedents_inversion"], [76, 3, 1, "", "_condsimp"], [76, 3, 1, "", "_create_lookup_table"], [76, 3, 1, "", "_dummy"], [76, 3, 1, "", "_dummy_"], [76, 3, 1, "", "_eval_cond"], [76, 3, 1, "", "_exponents"], [76, 3, 1, "", "_find_splitting_points"], [76, 3, 1, "", "_flip_g"], [76, 3, 1, "", "_functions"], [76, 3, 1, "", "_get_coeff_exp"], [76, 3, 1, "", "_guess_expansion"], [76, 3, 1, "", "_inflate_fox_h"], [76, 3, 1, "", "_inflate_g"], [76, 3, 1, "", "_int0oo"], [76, 3, 1, "", "_int0oo_1"], [76, 3, 1, "", "_int_inversion"], [76, 3, 1, "", "_is_analytic"], [76, 3, 1, "", "_meijerint_definite_2"], [76, 3, 1, "", "_meijerint_definite_3"], [76, 3, 1, "", "_meijerint_definite_4"], [76, 3, 1, "", "_meijerint_indefinite_1"], [76, 3, 1, "", "_mul_args"], [76, 3, 1, "", "_mul_as_two_parts"], [76, 3, 1, "", "_my_principal_branch"], [76, 3, 1, "", "_mytype"], [76, 3, 1, "", "_rewrite1"], [76, 3, 1, "", "_rewrite2"], [76, 3, 1, "", "_rewrite_inversion"], [76, 3, 1, "", "_rewrite_saxena"], [76, 3, 1, "", "_rewrite_saxena_1"], [76, 3, 1, "", "_rewrite_single"], [76, 3, 1, "", "_split_mul"], [76, 3, 1, "", "meijerint_definite"], [76, 3, 1, "", "meijerint_indefinite"], [76, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[78, 3, 1, "", "gauss_chebyshev_t"], [78, 3, 1, "", "gauss_chebyshev_u"], [78, 3, 1, "", "gauss_gen_laguerre"], [78, 3, 1, "", "gauss_hermite"], [78, 3, 1, "", "gauss_jacobi"], [78, 3, 1, "", "gauss_laguerre"], [78, 3, 1, "", "gauss_legendre"], [78, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[78, 3, 1, "", "ratint"], [78, 3, 1, "", "ratint_logpart"], [78, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[78, 1, 1, "", "NonElementaryIntegral"], [78, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[78, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[78, 1, 1, "", "CosineTransform"], [78, 1, 1, "", "FourierTransform"], [78, 1, 1, "", "HankelTransform"], [78, 1, 1, "", "IntegralTransform"], [78, 7, 1, "", "IntegralTransformError"], [78, 1, 1, "", "InverseCosineTransform"], [78, 1, 1, "", "InverseFourierTransform"], [78, 1, 1, "", "InverseHankelTransform"], [78, 1, 1, "", "InverseLaplaceTransform"], [78, 1, 1, "", "InverseMellinTransform"], [78, 1, 1, "", "InverseSineTransform"], [78, 1, 1, "", "LaplaceTransform"], [78, 1, 1, "", "MellinTransform"], [78, 1, 1, "", "SineTransform"], [78, 3, 1, "", "_fast_inverse_laplace"], [78, 3, 1, "", "_fourier_transform"], [78, 3, 1, "", "cosine_transform"], [78, 3, 1, "", "fourier_transform"], [78, 3, 1, "", "hankel_transform"], [78, 3, 1, "", "inverse_cosine_transform"], [78, 3, 1, "", "inverse_fourier_transform"], [78, 3, 1, "", "inverse_hankel_transform"], [78, 3, 1, "", "inverse_laplace_transform"], [78, 3, 1, "", "inverse_mellin_transform"], [78, 3, 1, "", "inverse_sine_transform"], [78, 3, 1, "", "laplace_transform"], [78, 3, 1, "", "mellin_transform"], [78, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[78, 2, 1, "", "doit"], [78, 4, 1, "", "function"], [78, 4, 1, "", "function_variable"], [78, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[78, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[79, 0, 0, "-", "printing"], [79, 0, 0, "-", "session"]], "sympy.interactive.printing": [[79, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[79, 3, 1, "", "enable_automatic_int_sympification"], [79, 3, 1, "", "enable_automatic_symbols"], [79, 3, 1, "", "init_ipython_session"], [79, 3, 1, "", "init_python_session"], [79, 3, 1, "", "init_session"], [79, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[80, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[80, 1, 1, "", "CartanType_generator"], [80, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[80, 2, 1, "", "rank"], [80, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[80, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[80, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[80, 2, 1, "", "add_as_roots"], [80, 2, 1, "", "add_simple_roots"], [80, 2, 1, "", "all_roots"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dynkin_diagram"], [80, 2, 1, "", "root_space"], [80, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[80, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "highest_root"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[80, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[80, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[80, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[80, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[80, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[80, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[80, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[80, 2, 1, "", "coxeter_diagram"], [80, 2, 1, "", "delete_doubles"], [80, 2, 1, "", "element_order"], [80, 2, 1, "", "generators"], [80, 2, 1, "", "group_name"], [80, 2, 1, "", "group_order"], [80, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[81, 3, 1, "", "ANFform"], [81, 1, 1, "", "And"], [81, 1, 1, "", "Boolean"], [81, 1, 1, "", "BooleanFalse"], [81, 1, 1, "", "BooleanTrue"], [81, 1, 1, "", "Equivalent"], [81, 1, 1, "", "Exclusive"], [81, 1, 1, "", "ITE"], [81, 1, 1, "", "Implies"], [81, 1, 1, "", "Nand"], [81, 1, 1, "", "Nor"], [81, 1, 1, "", "Not"], [81, 1, 1, "", "Or"], [81, 3, 1, "", "POSform"], [81, 3, 1, "", "SOPform"], [81, 1, 1, "", "Xnor"], [81, 1, 1, "", "Xor"], [81, 3, 1, "", "anf_coeffs"], [81, 3, 1, "", "bool_map"], [81, 3, 1, "", "bool_maxterm"], [81, 3, 1, "", "bool_minterm"], [81, 3, 1, "", "bool_monomial"], [81, 3, 1, "", "distribute_and_over_or"], [81, 3, 1, "", "distribute_or_over_and"], [81, 3, 1, "", "distribute_xor_over_and"], [81, 3, 1, "", "eliminate_implications"], [81, 3, 1, "", "gateinputcount"], [81, 3, 1, "", "integer_to_term"], [81, 3, 1, "", "is_anf"], [81, 3, 1, "", "is_cnf"], [81, 3, 1, "", "is_dnf"], [81, 3, 1, "", "is_nnf"], [81, 3, 1, "", "simplify_logic"], [81, 3, 1, "", "term_to_integer"], [81, 3, 1, "", "to_anf"], [81, 3, 1, "", "to_cnf"], [81, 3, 1, "", "to_dnf"], [81, 3, 1, "", "to_int_repr"], [81, 3, 1, "", "to_nnf"], [81, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[81, 2, 1, "", "as_set"], [81, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[81, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[81, 2, 1, "", "as_set"]], "sympy.logic": [[81, 0, 0, "-", "inference"]], "sympy.logic.inference": [[81, 3, 1, "", "satisfiable"]], "sympy.matrices": [[82, 0, 0, "-", "common"], [84, 0, 0, "-", "expressions"], [85, 0, 0, "-", "immutable"], [87, 0, 0, "-", "matrices"], [89, 0, 0, "-", "sparse"], [90, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[82, 1, 1, "", "MatrixCommon"], [82, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[82, 4, 1, "", "C"], [82, 4, 1, "", "H"], [82, 4, 1, "", "T"], [82, 2, 1, "", "__abs__"], [82, 2, 1, "", "__add__"], [82, 2, 1, "", "__getitem__"], [82, 2, 1, "", "__len__"], [82, 2, 1, "", "__mul__"], [82, 2, 1, "", "__pow__"], [82, 5, 1, "", "__weakref__"], [82, 2, 1, "", "adjoint"], [82, 2, 1, "", "applyfunc"], [82, 2, 1, "", "as_real_imag"], [82, 2, 1, "", "atoms"], [82, 2, 1, "", "col"], [82, 2, 1, "", "col_del"], [82, 2, 1, "", "col_insert"], [82, 2, 1, "", "col_join"], [82, 2, 1, "", "companion"], [82, 2, 1, "", "conjugate"], [82, 2, 1, "", "diag"], [82, 2, 1, "", "diagonal"], [82, 2, 1, "", "evalf"], [82, 2, 1, "", "expand"], [82, 2, 1, "", "extract"], [82, 2, 1, "", "eye"], [82, 4, 1, "", "free_symbols"], [82, 2, 1, "", "get_diag_blocks"], [82, 2, 1, "", "has"], [82, 2, 1, "", "hstack"], [82, 2, 1, "", "is_anti_symmetric"], [82, 2, 1, "", "is_diagonal"], [82, 4, 1, "", "is_hermitian"], [82, 4, 1, "", "is_lower"], [82, 4, 1, "", "is_lower_hessenberg"], [82, 4, 1, "", "is_square"], [82, 4, 1, "", "is_strongly_diagonally_dominant"], [82, 2, 1, "", "is_symbolic"], [82, 2, 1, "", "is_symmetric"], [82, 4, 1, "", "is_upper"], [82, 4, 1, "", "is_upper_hessenberg"], [82, 4, 1, "", "is_weakly_diagonally_dominant"], [82, 4, 1, "", "is_zero_matrix"], [82, 2, 1, "", "jordan_block"], [82, 2, 1, "", "lower_triangular"], [82, 2, 1, "", "multiply"], [82, 2, 1, "", "multiply_elementwise"], [82, 2, 1, "", "n"], [82, 2, 1, "", "ones"], [82, 2, 1, "", "permute"], [82, 2, 1, "", "permute_cols"], [82, 2, 1, "", "permute_rows"], [82, 2, 1, "", "pow"], [82, 2, 1, "", "refine"], [82, 2, 1, "", "replace"], [82, 2, 1, "", "reshape"], [82, 2, 1, "", "rmultiply"], [82, 2, 1, "", "rot90"], [82, 2, 1, "", "row"], [82, 2, 1, "", "row_del"], [82, 2, 1, "", "row_insert"], [82, 2, 1, "", "row_join"], [82, 4, 1, "", "shape"], [82, 2, 1, "", "simplify"], [82, 2, 1, "", "subs"], [82, 2, 1, "", "todod"], [82, 2, 1, "", "todok"], [82, 2, 1, "", "tolist"], [82, 2, 1, "", "trace"], [82, 2, 1, "", "transpose"], [82, 2, 1, "", "upper_triangular"], [82, 2, 1, "", "values"], [82, 2, 1, "", "vec"], [82, 2, 1, "", "vech"], [82, 2, 1, "", "vstack"], [82, 2, 1, "", "wilkinson"], [82, 2, 1, "", "xreplace"], [82, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[83, 1, 1, "", "DenseMatrix"], [87, 3, 1, "", "GramSchmidt"], [83, 5, 1, "", "Matrix"], [83, 1, 1, "", "MutableDenseMatrix"], [87, 3, 1, "", "casoratian"], [87, 3, 1, "", "diag"], [87, 3, 1, "", "eye"], [87, 3, 1, "", "hessian"], [87, 3, 1, "", "jordan_cell"], [87, 3, 1, "", "list2numpy"], [87, 3, 1, "", "matrix2numpy"], [87, 3, 1, "", "matrix_multiply_elementwise"], [87, 3, 1, "", "ones"], [87, 3, 1, "", "randMatrix"], [87, 3, 1, "", "rot_axis1"], [87, 3, 1, "", "rot_axis2"], [87, 3, 1, "", "rot_axis3"], [87, 3, 1, "", "symarray"], [87, 3, 1, "", "wronskian"], [87, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[83, 2, 1, "", "LDLdecomposition"], [83, 2, 1, "", "as_immutable"], [83, 2, 1, "", "as_mutable"], [83, 2, 1, "", "cholesky"], [83, 2, 1, "", "lower_triangular_solve"], [83, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[83, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[84, 1, 1, "", "CompanionMatrix"], [84, 1, 1, "", "FunctionMatrix"], [84, 1, 1, "", "HadamardPower"], [84, 1, 1, "", "HadamardProduct"], [84, 1, 1, "", "Identity"], [84, 1, 1, "", "Inverse"], [84, 1, 1, "", "MatAdd"], [84, 1, 1, "", "MatMul"], [84, 1, 1, "", "MatPow"], [84, 1, 1, "", "MatrixExpr"], [84, 1, 1, "", "MatrixPermute"], [84, 1, 1, "", "MatrixSet"], [84, 1, 1, "", "MatrixSymbol"], [84, 1, 1, "", "PermutationMatrix"], [84, 1, 1, "", "Trace"], [84, 1, 1, "", "Transpose"], [84, 1, 1, "", "ZeroMatrix"], [84, 0, 0, "-", "blockmatrix"]], "sympy.matrices.expressions.MatrixExpr": [[84, 4, 1, "", "T"], [84, 2, 1, "", "as_coeff_Mul"], [84, 2, 1, "", "as_explicit"], [84, 2, 1, "", "as_mutable"], [84, 2, 1, "", "equals"], [84, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[84, 1, 1, "", "BlockDiagMatrix"], [84, 1, 1, "", "BlockMatrix"], [84, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[84, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[84, 2, 1, "", "LDUdecomposition"], [84, 2, 1, "", "LUdecomposition"], [84, 2, 1, "", "UDLdecomposition"], [84, 2, 1, "", "schur"], [84, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[85, 1, 1, "", "ImmutableDenseMatrix"], [85, 5, 1, "", "ImmutableMatrix"], [89, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[87, 1, 1, "", "MatrixBase"], [87, 1, 1, "", "MatrixCalculus"], [87, 1, 1, "", "MatrixDeterminant"], [87, 1, 1, "", "MatrixEigen"], [87, 1, 1, "", "MatrixError"], [87, 1, 1, "", "MatrixReductions"], [87, 1, 1, "", "MatrixSubspaces"], [87, 1, 1, "", "NonSquareMatrixError"], [87, 1, 1, "", "ShapeError"], [87, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[87, 4, 1, "", "D"], [87, 2, 1, "", "LDLdecomposition"], [87, 2, 1, "", "LDLsolve"], [87, 2, 1, "", "LUdecomposition"], [87, 2, 1, "", "LUdecompositionFF"], [87, 2, 1, "", "LUdecomposition_Simple"], [87, 2, 1, "", "LUsolve"], [87, 2, 1, "", "QRdecomposition"], [87, 2, 1, "", "QRsolve"], [87, 2, 1, "", "add"], [87, 2, 1, "", "analytic_func"], [87, 2, 1, "", "cholesky"], [87, 2, 1, "", "cholesky_solve"], [87, 2, 1, "", "condition_number"], [87, 2, 1, "", "connected_components"], [87, 2, 1, "", "connected_components_decomposition"], [87, 2, 1, "", "copy"], [87, 2, 1, "", "cross"], [87, 2, 1, "", "diagonal_solve"], [87, 2, 1, "", "dot"], [87, 2, 1, "", "dual"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "gauss_jordan_solve"], [87, 2, 1, "", "inv"], [87, 2, 1, "", "inv_mod"], [87, 2, 1, "", "inverse_ADJ"], [87, 2, 1, "", "inverse_BLOCK"], [87, 2, 1, "", "inverse_CH"], [87, 2, 1, "", "inverse_GE"], [87, 2, 1, "", "inverse_LDL"], [87, 2, 1, "", "inverse_LU"], [87, 2, 1, "", "inverse_QR"], [87, 2, 1, "", "irregular"], [87, 2, 1, "", "is_nilpotent"], [87, 2, 1, "", "key2bounds"], [87, 2, 1, "", "key2ij"], [87, 2, 1, "", "log"], [87, 2, 1, "", "lower_triangular_solve"], [87, 2, 1, "", "norm"], [87, 2, 1, "", "normalized"], [87, 2, 1, "", "pinv"], [87, 2, 1, "", "pinv_solve"], [87, 2, 1, "", "print_nonzero"], [87, 2, 1, "", "project"], [87, 2, 1, "", "rank_decomposition"], [87, 2, 1, "", "singular_value_decomposition"], [87, 2, 1, "", "solve"], [87, 2, 1, "", "solve_least_squares"], [87, 2, 1, "", "strongly_connected_components"], [87, 2, 1, "", "strongly_connected_components_decomposition"], [87, 2, 1, "", "table"], [87, 2, 1, "", "upper_hessenberg_decomposition"], [87, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[87, 2, 1, "", "diff"], [87, 2, 1, "", "integrate"], [87, 2, 1, "", "jacobian"], [87, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[87, 2, 1, "", "adjugate"], [87, 2, 1, "", "charpoly"], [87, 2, 1, "", "cofactor"], [87, 2, 1, "", "cofactor_matrix"], [87, 2, 1, "", "det"], [87, 2, 1, "", "minor"], [87, 2, 1, "", "minor_submatrix"], [87, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[87, 2, 1, "", "bidiagonal_decomposition"], [87, 2, 1, "", "bidiagonalize"], [87, 2, 1, "", "diagonalize"], [87, 2, 1, "", "eigenvals"], [87, 2, 1, "", "eigenvects"], [87, 2, 1, "", "is_diagonalizable"], [87, 4, 1, "", "is_indefinite"], [87, 4, 1, "", "is_negative_definite"], [87, 4, 1, "", "is_negative_semidefinite"], [87, 4, 1, "", "is_positive_definite"], [87, 4, 1, "", "is_positive_semidefinite"], [87, 2, 1, "", "jordan_form"], [87, 2, 1, "", "left_eigenvects"], [87, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[87, 2, 1, "", "echelon_form"], [87, 2, 1, "", "elementary_col_op"], [87, 2, 1, "", "elementary_row_op"], [87, 4, 1, "", "is_echelon"], [87, 2, 1, "", "rank"], [87, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[87, 2, 1, "", "columnspace"], [87, 2, 1, "", "nullspace"], [87, 2, 1, "", "orthogonalize"], [87, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[88, 3, 1, "", "hermite_normal_form"], [88, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[89, 1, 1, "", "MutableSparseMatrix"], [89, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[90, 2, 1, "", "_csrtodok"], [90, 2, 1, "", "_doktocsr"], [90, 2, 1, "", "banded"]], "sympy.ntheory": [[91, 0, 0, "-", "bbp_pi"], [91, 0, 0, "-", "continued_fraction"], [91, 0, 0, "-", "digits"], [91, 0, 0, "-", "ecm"], [91, 0, 0, "-", "egyptian_fraction"], [91, 0, 0, "-", "factor_"], [91, 0, 0, "-", "generate"], [91, 1, 1, "", "mobius"], [91, 0, 0, "-", "modular"], [91, 0, 0, "-", "multinomial"], [91, 0, 0, "-", "partitions_"], [91, 0, 0, "-", "primetest"], [91, 0, 0, "-", "qs"], [91, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[91, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[91, 3, 1, "", "continued_fraction"], [91, 3, 1, "", "continued_fraction_convergents"], [91, 3, 1, "", "continued_fraction_iterator"], [91, 3, 1, "", "continued_fraction_periodic"], [91, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[91, 3, 1, "", "count_digits"], [91, 3, 1, "", "digits"], [91, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[91, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[91, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[91, 3, 1, "", "abundance"], [91, 3, 1, "", "antidivisor_count"], [91, 3, 1, "", "antidivisors"], [91, 3, 1, "", "core"], [91, 3, 1, "", "digits"], [91, 3, 1, "", "divisor_count"], [91, 1, 1, "", "divisor_sigma"], [91, 3, 1, "", "divisors"], [91, 3, 1, "", "factorint"], [91, 3, 1, "", "factorrat"], [91, 3, 1, "", "is_abundant"], [91, 3, 1, "", "is_amicable"], [91, 3, 1, "", "is_deficient"], [91, 3, 1, "", "is_mersenne_prime"], [91, 3, 1, "", "is_perfect"], [91, 3, 1, "", "mersenne_prime_exponent"], [91, 3, 1, "", "multiplicity"], [91, 3, 1, "", "perfect_power"], [91, 3, 1, "", "pollard_pm1"], [91, 3, 1, "", "pollard_rho"], [91, 3, 1, "", "primefactors"], [91, 1, 1, "", "primenu"], [91, 1, 1, "", "primeomega"], [91, 3, 1, "", "proper_divisor_count"], [91, 3, 1, "", "proper_divisors"], [91, 1, 1, "", "reduced_totient"], [91, 3, 1, "", "smoothness"], [91, 3, 1, "", "smoothness_p"], [91, 1, 1, "", "totient"], [91, 3, 1, "", "trailing"], [91, 3, 1, "", "udivisor_count"], [91, 1, 1, "", "udivisor_sigma"], [91, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[91, 1, 1, "", "Sieve"], [91, 3, 1, "", "composite"], [91, 3, 1, "", "compositepi"], [91, 3, 1, "", "cycle_length"], [91, 3, 1, "", "nextprime"], [91, 3, 1, "", "prevprime"], [91, 3, 1, "", "prime"], [91, 3, 1, "", "primepi"], [91, 3, 1, "", "primerange"], [91, 3, 1, "", "primorial"], [91, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[91, 2, 1, "", "extend"], [91, 2, 1, "", "extend_to_no"], [91, 2, 1, "", "mobiusrange"], [91, 2, 1, "", "primerange"], [91, 2, 1, "", "search"], [91, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[91, 3, 1, "", "crt"], [91, 3, 1, "", "crt1"], [91, 3, 1, "", "crt2"], [91, 3, 1, "", "solve_congruence"], [91, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[91, 3, 1, "", "binomial_coefficients"], [91, 3, 1, "", "binomial_coefficients_list"], [91, 3, 1, "", "multinomial_coefficients"], [91, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[91, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[91, 3, 1, "", "is_euler_pseudoprime"], [91, 3, 1, "", "is_extra_strong_lucas_prp"], [91, 3, 1, "", "is_gaussian_prime"], [91, 3, 1, "", "is_lucas_prp"], [91, 3, 1, "", "is_square"], [91, 3, 1, "", "is_strong_lucas_prp"], [91, 3, 1, "", "isprime"], [91, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[91, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[91, 3, 1, "", "discrete_log"], [91, 3, 1, "", "is_nthpow_residue"], [91, 3, 1, "", "is_primitive_root"], [91, 3, 1, "", "is_quad_residue"], [91, 3, 1, "", "jacobi_symbol"], [91, 3, 1, "", "legendre_symbol"], [91, 3, 1, "", "n_order"], [91, 3, 1, "", "nthroot_mod"], [91, 3, 1, "", "primitive_root"], [91, 3, 1, "", "quadratic_residues"], [91, 3, 1, "", "sqrt_mod"], [91, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[93, 1, 1, "", "LaTeXParsingError"], [93, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[93, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[93, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[93, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[93, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[93, 2, 1, "", "convert_to_c"], [93, 2, 1, "", "convert_to_expr"], [93, 2, 1, "", "convert_to_fortran"], [93, 2, 1, "", "convert_to_python"], [93, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[93, 3, 1, "", "auto_number"], [93, 3, 1, "", "auto_symbol"], [93, 3, 1, "", "convert_xor"], [93, 3, 1, "", "eval_expr"], [93, 3, 1, "", "factorial_notation"], [93, 3, 1, "", "function_exponentiation"], [93, 3, 1, "", "implicit_application"], [93, 3, 1, "", "implicit_multiplication"], [93, 3, 1, "", "implicit_multiplication_application"], [93, 3, 1, "", "lambda_notation"], [93, 3, 1, "", "parse_expr"], [93, 3, 1, "", "rationalize"], [93, 3, 1, "", "repeated_decimals"], [93, 3, 1, "", "split_symbols"], [93, 3, 1, "", "split_symbols_custom"], [93, 6, 1, "", "standard_transformations"], [93, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[94, 0, 0, "-", "beam"], [97, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[94, 1, 1, "", "Beam"], [94, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[94, 4, 1, "", "applied_loads"], [94, 2, 1, "", "apply_load"], [94, 2, 1, "", "apply_support"], [94, 4, 1, "", "area"], [94, 2, 1, "", "bending_moment"], [94, 4, 1, "", "boundary_conditions"], [94, 4, 1, "", "cross_section"], [94, 2, 1, "", "deflection"], [94, 2, 1, "", "draw"], [94, 4, 1, "", "elastic_modulus"], [94, 4, 1, "", "ild_moment"], [94, 4, 1, "", "ild_reactions"], [94, 4, 1, "", "ild_shear"], [94, 2, 1, "", "join"], [94, 4, 1, "", "length"], [94, 4, 1, "", "load"], [94, 2, 1, "", "max_bmoment"], [94, 2, 1, "", "max_deflection"], [94, 2, 1, "", "max_shear_force"], [94, 2, 1, "", "plot_bending_moment"], [94, 2, 1, "", "plot_deflection"], [94, 2, 1, "", "plot_ild_moment"], [94, 2, 1, "", "plot_ild_reactions"], [94, 2, 1, "", "plot_ild_shear"], [94, 2, 1, "", "plot_loading_results"], [94, 2, 1, "", "plot_shear_force"], [94, 2, 1, "", "plot_shear_stress"], [94, 2, 1, "", "plot_slope"], [94, 2, 1, "", "point_cflexure"], [94, 4, 1, "", "reaction_loads"], [94, 2, 1, "", "remove_load"], [94, 4, 1, "", "second_moment"], [94, 2, 1, "", "shear_force"], [94, 2, 1, "", "shear_stress"], [94, 2, 1, "", "slope"], [94, 2, 1, "", "solve_for_ild_moment"], [94, 2, 1, "", "solve_for_ild_reactions"], [94, 2, 1, "", "solve_for_ild_shear"], [94, 2, 1, "", "solve_for_reaction_loads"], [94, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[94, 2, 1, "", "apply_load"], [94, 2, 1, "", "apply_moment_load"], [94, 4, 1, "", "area"], [94, 2, 1, "", "axial_force"], [94, 2, 1, "", "axial_stress"], [94, 2, 1, "", "bending_moment"], [94, 4, 1, "", "boundary_conditions"], [94, 2, 1, "", "deflection"], [94, 4, 1, "", "load_vector"], [94, 2, 1, "", "max_bending_moment"], [94, 2, 1, "", "max_bmoment"], [94, 2, 1, "", "max_deflection"], [94, 2, 1, "", "max_shear_force"], [94, 4, 1, "", "moment_load_vector"], [94, 2, 1, "", "plot_bending_moment"], [94, 2, 1, "", "plot_deflection"], [94, 2, 1, "", "plot_loading_results"], [94, 2, 1, "", "plot_shear_force"], [94, 2, 1, "", "plot_shear_stress"], [94, 2, 1, "", "plot_slope"], [94, 2, 1, "", "polar_moment"], [94, 4, 1, "", "second_moment"], [94, 2, 1, "", "shear_force"], [94, 4, 1, "", "shear_modulus"], [94, 2, 1, "", "shear_stress"], [94, 2, 1, "", "slope"], [94, 2, 1, "", "solve_for_reaction_loads"], [94, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.truss": [[97, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[97, 2, 1, "", "add_member"], [97, 2, 1, "", "add_node"], [97, 2, 1, "", "apply_load"], [97, 2, 1, "", "apply_support"], [97, 2, 1, "", "change_member_label"], [97, 2, 1, "", "change_node_label"], [97, 4, 1, "", "internal_forces"], [97, 4, 1, "", "loads"], [97, 4, 1, "", "member_labels"], [97, 4, 1, "", "members"], [97, 4, 1, "", "node_labels"], [97, 4, 1, "", "node_positions"], [97, 4, 1, "", "nodes"], [97, 4, 1, "", "reaction_loads"], [97, 2, 1, "", "remove_load"], [97, 2, 1, "", "remove_member"], [97, 2, 1, "", "remove_node"], [97, 2, 1, "", "remove_support"], [97, 4, 1, "", "supports"]], "sympy.physics": [[100, 0, 0, "-", "control"], [103, 0, 0, "-", "hydrogen"], [104, 0, 0, "-", "matrices"], [123, 0, 0, "-", "mechanics"], [137, 0, 0, "-", "paulialgebra"], [138, 0, 0, "-", "qho_1d"], [162, 0, 0, "-", "secondquant"], [163, 0, 0, "-", "sho"], [178, 0, 0, "-", "vector"], [181, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[99, 2, 1, "", "bode_magnitude_numerical_data"], [99, 2, 1, "", "bode_magnitude_plot"], [99, 2, 1, "", "bode_phase_numerical_data"], [99, 2, 1, "", "bode_phase_plot"], [99, 2, 1, "", "bode_plot"], [99, 2, 1, "", "impulse_response_numerical_data"], [99, 2, 1, "", "impulse_response_plot"], [99, 2, 1, "", "pole_zero_numerical_data"], [99, 2, 1, "", "pole_zero_plot"], [99, 2, 1, "", "ramp_response_numerical_data"], [99, 2, 1, "", "ramp_response_plot"], [99, 2, 1, "", "step_response_numerical_data"], [99, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[101, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[101, 1, 1, "", "Feedback"], [101, 1, 1, "", "MIMOFeedback"], [101, 1, 1, "", "MIMOParallel"], [101, 1, 1, "", "MIMOSeries"], [101, 1, 1, "", "Parallel"], [101, 1, 1, "", "Series"], [101, 1, 1, "", "TransferFunction"], [101, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "sensitivity"], [101, 4, 1, "", "sign"], [101, 4, 1, "", "sys1"], [101, 4, 1, "", "sys2"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "sensitivity"], [101, 4, 1, "", "sign"], [101, 4, 1, "", "sys1"], [101, 4, 1, "", "sys2"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "num_inputs"], [101, 4, 1, "", "num_outputs"], [101, 4, 1, "", "shape"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "num_inputs"], [101, 4, 1, "", "num_outputs"], [101, 4, 1, "", "shape"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "is_biproper"], [101, 4, 1, "", "is_proper"], [101, 4, 1, "", "is_strictly_proper"], [101, 2, 1, "", "to_expr"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[101, 2, 1, "", "doit"], [101, 4, 1, "", "is_biproper"], [101, 4, 1, "", "is_proper"], [101, 4, 1, "", "is_strictly_proper"], [101, 2, 1, "", "to_expr"], [101, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[101, 2, 1, "", "dc_gain"], [101, 4, 1, "", "den"], [101, 2, 1, "", "expand"], [101, 2, 1, "", "from_rational_expression"], [101, 4, 1, "", "is_biproper"], [101, 4, 1, "", "is_proper"], [101, 2, 1, "", "is_stable"], [101, 4, 1, "", "is_strictly_proper"], [101, 4, 1, "", "num"], [101, 2, 1, "", "poles"], [101, 2, 1, "", "to_expr"], [101, 4, 1, "", "var"], [101, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[101, 2, 1, "", "elem_poles"], [101, 2, 1, "", "elem_zeros"], [101, 2, 1, "", "expand"], [101, 2, 1, "", "from_Matrix"], [101, 4, 1, "", "num_inputs"], [101, 4, 1, "", "num_outputs"], [101, 4, 1, "", "shape"], [101, 2, 1, "", "transpose"], [101, 4, 1, "", "var"]], "sympy.physics.hep": [[102, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[102, 3, 1, "", "extract_type_tens"], [102, 3, 1, "", "gamma_trace"], [102, 3, 1, "", "kahane_simplify"], [102, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[103, 3, 1, "", "E_nl"], [103, 3, 1, "", "E_nl_dirac"], [103, 3, 1, "", "Psi_nlm"], [103, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[104, 3, 1, "", "mdft"], [104, 3, 1, "", "mgamma"], [104, 3, 1, "", "msigma"], [104, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[106, 0, 0, "-", "body"], [107, 3, 1, "", "find_dynamicsymbols"], [108, 0, 0, "-", "joint"], [109, 0, 0, "-", "kane"], [109, 0, 0, "-", "lagrange"], [110, 0, 0, "-", "linearize"], [107, 3, 1, "", "msubs"], [111, 0, 0, "-", "particle"], [111, 0, 0, "-", "rigidbody"], [113, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[106, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[106, 2, 1, "", "ang_vel_in"], [106, 2, 1, "", "apply_force"], [106, 2, 1, "", "apply_torque"], [106, 2, 1, "", "clear_loads"], [106, 2, 1, "", "dcm"], [106, 2, 1, "", "kinetic_energy"], [106, 2, 1, "", "masscenter_vel"], [106, 2, 1, "", "remove_load"], [106, 4, 1, "", "x"], [106, 4, 1, "", "y"], [106, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[111, 3, 1, "", "Lagrangian"], [111, 3, 1, "", "angular_momentum"], [111, 3, 1, "", "inertia"], [111, 3, 1, "", "inertia_of_point_mass"], [111, 3, 1, "", "kinetic_energy"], [111, 3, 1, "", "linear_momentum"], [111, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[108, 1, 1, "", "Joint"], [108, 1, 1, "", "PinJoint"], [108, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[108, 4, 1, "", "child"], [108, 4, 1, "", "child_axis"], [108, 4, 1, "", "child_point"], [108, 4, 1, "", "coordinates"], [108, 4, 1, "", "kdes"], [108, 4, 1, "", "parent"], [108, 4, 1, "", "parent_axis"], [108, 4, 1, "", "parent_point"], [108, 4, 1, "", "speeds"]], "sympy.physics.mechanics.kane": [[109, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[109, 4, 1, "", "auxiliary_eqs"], [109, 4, 1, "", "forcing"], [109, 4, 1, "", "forcing_full"], [109, 2, 1, "", "kanes_equations"], [109, 2, 1, "", "kindiffdict"], [109, 2, 1, "", "linearize"], [109, 4, 1, "", "mass_matrix"], [109, 4, 1, "", "mass_matrix_full"], [109, 2, 1, "", "rhs"], [109, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[109, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[109, 4, 1, "", "forcing"], [109, 4, 1, "", "forcing_full"], [109, 2, 1, "", "form_lagranges_equations"], [109, 2, 1, "", "linearize"], [109, 4, 1, "", "mass_matrix"], [109, 4, 1, "", "mass_matrix_full"], [109, 2, 1, "", "rhs"], [109, 2, 1, "", "solve_multipliers"], [109, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[110, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[110, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[111, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[111, 2, 1, "", "angular_momentum"], [111, 2, 1, "", "kinetic_energy"], [111, 2, 1, "", "linear_momentum"], [111, 4, 1, "", "mass"], [111, 2, 1, "", "parallel_axis"], [111, 4, 1, "", "point"], [111, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[111, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[111, 2, 1, "", "angular_momentum"], [111, 4, 1, "", "central_inertia"], [111, 2, 1, "", "kinetic_energy"], [111, 2, 1, "", "linear_momentum"], [111, 2, 1, "", "parallel_axis"], [111, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[113, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[113, 4, 1, "", "alg_con"], [113, 4, 1, "", "bodies"], [113, 4, 1, "", "comb_explicit_rhs"], [113, 4, 1, "", "comb_implicit_mat"], [113, 4, 1, "", "comb_implicit_rhs"], [113, 2, 1, "", "compute_explicit_form"], [113, 2, 1, "", "constant_symbols"], [113, 4, 1, "", "coordinates"], [113, 4, 1, "", "dyn_implicit_mat"], [113, 4, 1, "", "dyn_implicit_rhs"], [113, 2, 1, "", "dynamic_symbols"], [113, 4, 1, "", "kin_explicit_rhs"], [113, 4, 1, "", "loads"], [113, 4, 1, "", "speeds"], [113, 4, 1, "", "states"]], "sympy.physics.optics": [[131, 0, 0, "-", "gaussopt"], [133, 0, 0, "-", "medium"], [134, 0, 0, "-", "polarization"], [135, 0, 0, "-", "utils"], [136, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[131, 1, 1, "", "BeamParameter"], [131, 1, 1, "", "CurvedMirror"], [131, 1, 1, "", "CurvedRefraction"], [131, 1, 1, "", "FlatMirror"], [131, 1, 1, "", "FlatRefraction"], [131, 1, 1, "", "FreeSpace"], [131, 1, 1, "", "GeometricRay"], [131, 1, 1, "", "RayTransferMatrix"], [131, 1, 1, "", "ThinLens"], [131, 3, 1, "", "conjugate_gauss_beams"], [131, 3, 1, "", "gaussian_conj"], [131, 3, 1, "", "geometric_conj_ab"], [131, 3, 1, "", "geometric_conj_af"], [131, 3, 1, "", "geometric_conj_bf"], [131, 3, 1, "", "rayleigh2waist"], [131, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[131, 4, 1, "", "divergence"], [131, 4, 1, "", "gouy"], [131, 4, 1, "", "q"], [131, 4, 1, "", "radius"], [131, 4, 1, "", "w"], [131, 4, 1, "", "w_0"], [131, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[131, 4, 1, "", "angle"], [131, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[131, 4, 1, "", "A"], [131, 4, 1, "", "B"], [131, 4, 1, "", "C"], [131, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[133, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[133, 4, 1, "", "refractive_index"], [133, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[134, 3, 1, "", "half_wave_retarder"], [134, 3, 1, "", "jones_2_stokes"], [134, 3, 1, "", "jones_vector"], [134, 3, 1, "", "linear_polarizer"], [134, 3, 1, "", "mueller_matrix"], [134, 3, 1, "", "phase_retarder"], [134, 3, 1, "", "polarizing_beam_splitter"], [134, 3, 1, "", "quarter_wave_retarder"], [134, 3, 1, "", "reflective_filter"], [134, 3, 1, "", "stokes_vector"], [134, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[135, 3, 1, "", "brewster_angle"], [135, 3, 1, "", "critical_angle"], [135, 3, 1, "", "deviation"], [135, 3, 1, "", "fresnel_coefficients"], [135, 3, 1, "", "hyperfocal_distance"], [135, 3, 1, "", "lens_formula"], [135, 3, 1, "", "lens_makers_formula"], [135, 3, 1, "", "mirror_formula"], [135, 3, 1, "", "refraction_angle"], [135, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[136, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[136, 4, 1, "", "amplitude"], [136, 4, 1, "", "angular_velocity"], [136, 4, 1, "", "frequency"], [136, 4, 1, "", "n"], [136, 4, 1, "", "phase"], [136, 4, 1, "", "speed"], [136, 4, 1, "", "time_period"], [136, 4, 1, "", "wavelength"], [136, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[137, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[138, 3, 1, "", "E_n"], [138, 3, 1, "", "coherent_state"], [138, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[139, 0, 0, "-", "anticommutator"], [140, 0, 0, "-", "cartesian"], [141, 0, 0, "-", "cg"], [142, 0, 0, "-", "circuitplot"], [143, 0, 0, "-", "commutator"], [144, 0, 0, "-", "constants"], [145, 0, 0, "-", "dagger"], [146, 0, 0, "-", "gate"], [147, 0, 0, "-", "grover"], [148, 0, 0, "-", "hilbert"], [150, 0, 0, "-", "innerproduct"], [151, 0, 0, "-", "operator"], [152, 0, 0, "-", "operatorset"], [153, 0, 0, "-", "piab"], [154, 0, 0, "-", "qapply"], [155, 0, 0, "-", "qft"], [156, 0, 0, "-", "qubit"], [157, 0, 0, "-", "represent"], [158, 0, 0, "-", "shor"], [159, 0, 0, "-", "spin"], [160, 0, 0, "-", "state"], [161, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[139, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[139, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[140, 1, 1, "", "PositionBra3D"], [140, 1, 1, "", "PositionKet3D"], [140, 1, 1, "", "PositionState3D"], [140, 1, 1, "", "PxBra"], [140, 1, 1, "", "PxKet"], [140, 1, 1, "", "PxOp"], [140, 1, 1, "", "XBra"], [140, 1, 1, "", "XKet"], [140, 1, 1, "", "XOp"], [140, 1, 1, "", "YOp"], [140, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[140, 4, 1, "", "position_x"], [140, 4, 1, "", "position_y"], [140, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[140, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[140, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[140, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[140, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[141, 1, 1, "", "CG"], [141, 1, 1, "", "Wigner3j"], [141, 1, 1, "", "Wigner6j"], [141, 1, 1, "", "Wigner9j"], [141, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[142, 1, 1, "", "CircuitPlot"], [142, 3, 1, "", "CreateCGate"], [142, 1, 1, "", "Mx"], [142, 1, 1, "", "Mz"], [142, 3, 1, "", "circuit_plot"], [142, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[142, 2, 1, "", "control_line"], [142, 2, 1, "", "control_point"], [142, 2, 1, "", "not_point"], [142, 2, 1, "", "one_qubit_box"], [142, 2, 1, "", "swap_point"], [142, 2, 1, "", "two_qubit_box"], [142, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[143, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[143, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[144, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[145, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[146, 1, 1, "", "CGate"], [146, 1, 1, "", "CGateS"], [146, 5, 1, "", "CNOT"], [146, 1, 1, "", "CNotGate"], [146, 1, 1, "", "Gate"], [146, 5, 1, "", "H"], [146, 1, 1, "", "HadamardGate"], [146, 1, 1, "", "IdentityGate"], [146, 1, 1, "", "OneQubitGate"], [146, 5, 1, "", "Phase"], [146, 1, 1, "", "PhaseGate"], [146, 5, 1, "", "S"], [146, 5, 1, "", "SWAP"], [146, 1, 1, "", "SwapGate"], [146, 5, 1, "", "T"], [146, 1, 1, "", "TGate"], [146, 1, 1, "", "TwoQubitGate"], [146, 1, 1, "", "UGate"], [146, 5, 1, "", "X"], [146, 1, 1, "", "XGate"], [146, 5, 1, "", "Y"], [146, 1, 1, "", "YGate"], [146, 5, 1, "", "Z"], [146, 1, 1, "", "ZGate"], [146, 3, 1, "", "gate_simp"], [146, 3, 1, "", "gate_sort"], [146, 3, 1, "", "normalized"], [146, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[146, 4, 1, "", "controls"], [146, 2, 1, "", "decompose"], [146, 2, 1, "", "eval_controls"], [146, 4, 1, "", "gate"], [146, 4, 1, "", "min_qubits"], [146, 4, 1, "", "nqubits"], [146, 2, 1, "", "plot_gate"], [146, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[146, 4, 1, "", "controls"], [146, 4, 1, "", "gate"], [146, 4, 1, "", "min_qubits"], [146, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[146, 2, 1, "", "get_target_matrix"], [146, 4, 1, "", "min_qubits"], [146, 4, 1, "", "nqubits"], [146, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[146, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[146, 2, 1, "", "get_target_matrix"], [146, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[147, 1, 1, "", "OracleGate"], [147, 1, 1, "", "WGate"], [147, 3, 1, "", "apply_grover"], [147, 3, 1, "", "grover_iteration"], [147, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[147, 4, 1, "", "search_function"], [147, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[148, 1, 1, "", "ComplexSpace"], [148, 1, 1, "", "DirectSumHilbertSpace"], [148, 1, 1, "", "FockSpace"], [148, 1, 1, "", "HilbertSpace"], [148, 1, 1, "", "L2"], [148, 1, 1, "", "TensorPowerHilbertSpace"], [148, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[148, 2, 1, "", "eval"], [148, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[148, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[148, 2, 1, "", "eval"], [148, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[150, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[151, 1, 1, "", "DifferentialOperator"], [151, 1, 1, "", "HermitianOperator"], [151, 1, 1, "", "IdentityOperator"], [151, 1, 1, "", "Operator"], [151, 1, 1, "", "OuterProduct"], [151, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[151, 4, 1, "", "expr"], [151, 4, 1, "", "free_symbols"], [151, 4, 1, "", "function"], [151, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[151, 4, 1, "", "bra"], [151, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[152, 3, 1, "", "operators_to_state"], [152, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[153, 1, 1, "", "PIABBra"], [153, 1, 1, "", "PIABHamiltonian"], [153, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[154, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[155, 1, 1, "", "IQFT"], [155, 1, 1, "", "QFT"], [155, 5, 1, "", "Rk"], [155, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[155, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[155, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[156, 1, 1, "", "IntQubit"], [156, 1, 1, "", "IntQubitBra"], [156, 1, 1, "", "Qubit"], [156, 1, 1, "", "QubitBra"], [156, 3, 1, "", "matrix_to_density"], [156, 3, 1, "", "matrix_to_qubit"], [156, 3, 1, "", "measure_all"], [156, 3, 1, "", "measure_all_oneshot"], [156, 3, 1, "", "measure_partial"], [156, 3, 1, "", "measure_partial_oneshot"], [156, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[157, 3, 1, "", "enumerate_states"], [157, 3, 1, "", "get_basis"], [157, 3, 1, "", "integrate_result"], [157, 3, 1, "", "rep_expectation"], [157, 3, 1, "", "rep_innerproduct"], [157, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[158, 1, 1, "", "CMod"], [158, 3, 1, "", "period_find"], [158, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[158, 4, 1, "", "N"], [158, 4, 1, "", "a"], [158, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[159, 1, 1, "", "J2Op"], [159, 1, 1, "", "JxBra"], [159, 1, 1, "", "JxBraCoupled"], [159, 1, 1, "", "JxKet"], [159, 1, 1, "", "JxKetCoupled"], [159, 1, 1, "", "JyBra"], [159, 1, 1, "", "JyBraCoupled"], [159, 1, 1, "", "JyKet"], [159, 1, 1, "", "JyKetCoupled"], [159, 1, 1, "", "JzBra"], [159, 1, 1, "", "JzBraCoupled"], [159, 1, 1, "", "JzKet"], [159, 1, 1, "", "JzKetCoupled"], [159, 1, 1, "", "JzOp"], [159, 1, 1, "", "Rotation"], [159, 1, 1, "", "WignerD"], [159, 3, 1, "", "couple"], [159, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[159, 2, 1, "", "D"], [159, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[160, 1, 1, "", "Bra"], [160, 1, 1, "", "BraBase"], [160, 1, 1, "", "Ket"], [160, 1, 1, "", "KetBase"], [160, 1, 1, "", "OrthogonalBra"], [160, 1, 1, "", "OrthogonalKet"], [160, 1, 1, "", "OrthogonalState"], [160, 1, 1, "", "State"], [160, 1, 1, "", "StateBase"], [160, 1, 1, "", "TimeDepBra"], [160, 1, 1, "", "TimeDepKet"], [160, 1, 1, "", "TimeDepState"], [160, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[160, 4, 1, "", "dual"], [160, 2, 1, "", "dual_class"], [160, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[160, 4, 1, "", "label"], [160, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[160, 4, 1, "", "expr"], [160, 4, 1, "", "is_commutative"], [160, 4, 1, "", "is_normalized"], [160, 4, 1, "", "limits"], [160, 4, 1, "", "norm"], [160, 2, 1, "", "normalize"], [160, 2, 1, "", "prob"], [160, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[161, 1, 1, "", "TensorProduct"], [161, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[162, 1, 1, "", "AnnihilateBoson"], [162, 1, 1, "", "AnnihilateFermion"], [162, 1, 1, "", "AntiSymmetricTensor"], [162, 5, 1, "", "B"], [162, 5, 1, "", "BBra"], [162, 5, 1, "", "BKet"], [162, 5, 1, "", "Bd"], [162, 1, 1, "", "BosonicBasis"], [162, 1, 1, "", "Commutator"], [162, 1, 1, "", "CreateBoson"], [162, 1, 1, "", "CreateFermion"], [162, 1, 1, "", "Dagger"], [162, 5, 1, "", "F"], [162, 5, 1, "", "FBra"], [162, 5, 1, "", "FKet"], [162, 5, 1, "", "Fd"], [162, 1, 1, "", "FixedBosonicBasis"], [162, 1, 1, "", "FockState"], [162, 1, 1, "", "FockStateBosonBra"], [162, 1, 1, "", "FockStateBosonKet"], [162, 1, 1, "", "FockStateBra"], [162, 1, 1, "", "FockStateFermionBra"], [162, 1, 1, "", "FockStateFermionKet"], [162, 1, 1, "", "FockStateKet"], [162, 1, 1, "", "InnerProduct"], [162, 1, 1, "", "KroneckerDelta"], [162, 1, 1, "", "NO"], [162, 1, 1, "", "PermutationOperator"], [162, 1, 1, "", "VarBosonicBasis"], [162, 3, 1, "", "apply_operators"], [162, 3, 1, "", "contraction"], [162, 3, 1, "", "evaluate_deltas"], [162, 3, 1, "", "matrix_rep"], [162, 3, 1, "", "simplify_index_permutations"], [162, 3, 1, "", "substitute_dummies"], [162, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[162, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[162, 2, 1, "", "apply_operator"], [162, 4, 1, "", "is_only_q_annihilator"], [162, 4, 1, "", "is_only_q_creator"], [162, 4, 1, "", "is_q_annihilator"], [162, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[162, 4, 1, "", "lower"], [162, 4, 1, "", "symbol"], [162, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[162, 2, 1, "", "doit"], [162, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[162, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[162, 2, 1, "", "apply_operator"], [162, 4, 1, "", "is_only_q_annihilator"], [162, 4, 1, "", "is_only_q_creator"], [162, 4, 1, "", "is_q_annihilator"], [162, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[162, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[162, 2, 1, "", "index"], [162, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[162, 4, 1, "", "bra"], [162, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[162, 2, 1, "", "eval"], [162, 4, 1, "", "indices_contain_equal_information"], [162, 4, 1, "", "is_above_fermi"], [162, 4, 1, "", "is_below_fermi"], [162, 4, 1, "", "is_only_above_fermi"], [162, 4, 1, "", "is_only_below_fermi"], [162, 4, 1, "", "killable_index"], [162, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[162, 2, 1, "", "doit"], [162, 2, 1, "", "get_subNO"], [162, 4, 1, "", "has_q_annihilators"], [162, 4, 1, "", "has_q_creators"], [162, 2, 1, "", "iter_q_annihilators"], [162, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[162, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[162, 2, 1, "", "index"], [162, 2, 1, "", "state"]], "sympy.physics.sho": [[163, 3, 1, "", "E_nl"], [163, 3, 1, "", "R_nl"]], "sympy.physics.units": [[164, 0, 0, "-", "dimensions"], [168, 0, 0, "-", "prefixes"], [169, 0, 0, "-", "quantities"], [170, 0, 0, "-", "unitsystem"], [169, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[164, 1, 1, "", "Dimension"], [164, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[164, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[164, 4, 1, "", "can_transf_matrix"], [164, 4, 1, "", "dim"], [164, 2, 1, "", "dim_can_vector"], [164, 2, 1, "", "dim_vector"], [164, 4, 1, "", "inv_can_transf_matrix"], [164, 4, 1, "", "is_consistent"], [164, 2, 1, "", "is_dimensionless"], [164, 4, 1, "", "list_can_dims"], [164, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[168, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[169, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[169, 4, 1, "", "abbrev"], [169, 2, 1, "", "convert_to"], [169, 4, 1, "", "free_symbols"], [169, 4, 1, "", "is_prefixed"], [169, 4, 1, "", "scale_factor"], [169, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[170, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[170, 4, 1, "", "dim"], [170, 2, 1, "", "extend"], [170, 2, 1, "", "get_units_non_prefixed"], [170, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[169, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[172, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[172, 2, 1, "", "applyfunc"], [172, 2, 1, "", "cross"], [172, 2, 1, "", "doit"], [172, 2, 1, "", "dot"], [172, 2, 1, "", "dt"], [172, 2, 1, "", "express"], [172, 4, 1, "", "func"], [172, 2, 1, "", "simplify"], [172, 2, 1, "", "subs"], [172, 2, 1, "", "to_matrix"], [172, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[174, 3, 1, "", "dynamicsymbols"], [175, 0, 0, "-", "functions"], [175, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[173, 3, 1, "", "curl"], [173, 3, 1, "", "divergence"], [173, 3, 1, "", "gradient"], [173, 3, 1, "", "is_conservative"], [173, 3, 1, "", "is_solenoidal"], [173, 3, 1, "", "scalar_potential"], [173, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[172, 1, 1, "", "CoordinateSym"], [172, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[172, 2, 1, "", "ang_acc_in"], [172, 2, 1, "", "ang_vel_in"], [172, 2, 1, "", "dcm"], [172, 2, 1, "", "orient"], [172, 2, 1, "", "orient_axis"], [172, 2, 1, "", "orient_body_fixed"], [172, 2, 1, "", "orient_explicit"], [172, 2, 1, "", "orient_quaternion"], [172, 2, 1, "", "orient_space_fixed"], [172, 2, 1, "", "orientnew"], [172, 2, 1, "", "partial_velocity"], [172, 2, 1, "", "set_ang_acc"], [172, 2, 1, "", "set_ang_vel"], [172, 2, 1, "", "variable_map"], [172, 4, 1, "", "x"], [172, 4, 1, "", "y"], [172, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[174, 3, 1, "", "cross"], [174, 3, 1, "", "dot"], [174, 3, 1, "", "express"], [175, 3, 1, "", "get_motion_params"], [175, 3, 1, "", "kinematic_equations"], [174, 3, 1, "", "outer"], [175, 3, 1, "", "partial_velocity"], [174, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[175, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[175, 2, 1, "", "a1pt_theory"], [175, 2, 1, "", "a2pt_theory"], [175, 2, 1, "", "acc"], [175, 2, 1, "", "locatenew"], [175, 2, 1, "", "partial_velocity"], [175, 2, 1, "", "pos_from"], [175, 2, 1, "", "set_acc"], [175, 2, 1, "", "set_pos"], [175, 2, 1, "", "set_vel"], [175, 2, 1, "", "v1pt_theory"], [175, 2, 1, "", "v2pt_theory"], [175, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[176, 3, 1, "", "init_vprinting"], [176, 3, 1, "", "vlatex"], [176, 3, 1, "", "vpprint"], [176, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[172, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[172, 2, 1, "", "angle_between"], [172, 2, 1, "", "applyfunc"], [172, 2, 1, "", "cross"], [172, 2, 1, "", "diff"], [172, 2, 1, "", "doit"], [172, 2, 1, "", "dot"], [172, 2, 1, "", "dt"], [172, 2, 1, "", "express"], [172, 2, 1, "", "free_dynamicsymbols"], [172, 2, 1, "", "free_symbols"], [172, 4, 1, "", "func"], [172, 2, 1, "", "magnitude"], [172, 2, 1, "", "normalize"], [172, 2, 1, "", "outer"], [172, 2, 1, "", "separate"], [172, 2, 1, "", "simplify"], [172, 2, 1, "", "subs"], [172, 2, 1, "", "to_matrix"], [172, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[181, 3, 1, "", "clebsch_gordan"], [181, 3, 1, "", "dot_rot_grad_Ynm"], [181, 3, 1, "", "gaunt"], [181, 3, 1, "", "racah"], [181, 3, 1, "", "wigner_3j"], [181, 3, 1, "", "wigner_6j"], [181, 3, 1, "", "wigner_9j"], [181, 3, 1, "", "wigner_d"], [181, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[182, 0, 0, "-", "plot"], [182, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[182, 1, 1, "", "BaseBackend"], [182, 1, 1, "", "BaseSeries"], [182, 1, 1, "", "Line2DBaseSeries"], [182, 1, 1, "", "Line3DBaseSeries"], [182, 1, 1, "", "LineOver1DRangeSeries"], [182, 1, 1, "", "MatplotlibBackend"], [182, 1, 1, "", "Parametric2DLineSeries"], [182, 1, 1, "", "Parametric3DLineSeries"], [182, 1, 1, "", "ParametricSurfaceSeries"], [182, 1, 1, "", "Plot"], [182, 1, 1, "", "PlotGrid"], [182, 1, 1, "", "SurfaceBaseSeries"], [182, 1, 1, "", "SurfaceOver2DRangeSeries"], [182, 1, 1, "", "TextBackend"], [182, 3, 1, "", "plot"], [182, 3, 1, "", "plot3d"], [182, 3, 1, "", "plot3d_parametric_line"], [182, 3, 1, "", "plot3d_parametric_surface"], [182, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[182, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[182, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[182, 2, 1, "", "get_segments"], [182, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[182, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[182, 2, 1, "", "append"], [182, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[182, 1, 1, "", "ImplicitSeries"], [182, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[182, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[183, 1, 1, "", "ExtensionElement"], [183, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[183, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[183, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[183, 1, 1, "", "ModuleHomomorphism"], [183, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[183, 2, 1, "", "image"], [183, 2, 1, "", "is_injective"], [183, 2, 1, "", "is_isomorphism"], [183, 2, 1, "", "is_surjective"], [183, 2, 1, "", "is_zero"], [183, 2, 1, "", "kernel"], [183, 2, 1, "", "quotient_codomain"], [183, 2, 1, "", "quotient_domain"], [183, 2, 1, "", "restrict_codomain"], [183, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[183, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[183, 2, 1, "", "contains"], [183, 2, 1, "", "depth"], [183, 2, 1, "", "height"], [183, 2, 1, "", "intersect"], [183, 2, 1, "", "is_maximal"], [183, 2, 1, "", "is_primary"], [183, 2, 1, "", "is_prime"], [183, 2, 1, "", "is_principal"], [183, 2, 1, "", "is_radical"], [183, 2, 1, "", "is_whole_ring"], [183, 2, 1, "", "is_zero"], [183, 2, 1, "", "product"], [183, 2, 1, "", "quotient"], [183, 2, 1, "", "radical"], [183, 2, 1, "", "reduce_element"], [183, 2, 1, "", "saturate"], [183, 2, 1, "", "subset"], [183, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[183, 1, 1, "", "FreeModule"], [183, 1, 1, "", "FreeModuleElement"], [183, 1, 1, "", "Module"], [183, 1, 1, "", "QuotientModule"], [183, 1, 1, "", "QuotientModuleElement"], [183, 1, 1, "", "SubModule"], [183, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[183, 2, 1, "", "basis"], [183, 2, 1, "", "convert"], [183, 5, 1, "", "dtype"], [183, 2, 1, "", "identity_hom"], [183, 2, 1, "", "is_submodule"], [183, 2, 1, "", "is_zero"], [183, 2, 1, "", "multiply_ideal"], [183, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[183, 2, 1, "", "contains"], [183, 2, 1, "", "convert"], [183, 2, 1, "", "identity_hom"], [183, 2, 1, "", "is_submodule"], [183, 2, 1, "", "is_zero"], [183, 2, 1, "", "multiply_ideal"], [183, 2, 1, "", "quotient_module"], [183, 2, 1, "", "submodule"], [183, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[183, 2, 1, "", "convert"], [183, 5, 1, "", "dtype"], [183, 2, 1, "", "identity_hom"], [183, 2, 1, "", "is_submodule"], [183, 2, 1, "", "is_zero"], [183, 2, 1, "", "quotient_hom"], [183, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[183, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[183, 2, 1, "", "convert"], [183, 2, 1, "", "identity_hom"], [183, 2, 1, "", "in_terms_of_generators"], [183, 2, 1, "", "inclusion_hom"], [183, 2, 1, "", "intersect"], [183, 2, 1, "", "is_full_module"], [183, 2, 1, "", "is_submodule"], [183, 2, 1, "", "is_zero"], [183, 2, 1, "", "module_quotient"], [183, 2, 1, "", "multiply_ideal"], [183, 2, 1, "", "quotient_module"], [183, 2, 1, "", "reduce_element"], [183, 2, 1, "", "submodule"], [183, 2, 1, "", "syzygy_module"], [183, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[183, 2, 1, "", "is_full_module"], [183, 2, 1, "", "quotient_hom"]], "sympy.polys.constructor": [[192, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[189, 3, 1, "", "dmp_abs"], [189, 3, 1, "", "dmp_add"], [189, 3, 1, "", "dmp_add_ground"], [189, 3, 1, "", "dmp_add_mul"], [189, 3, 1, "", "dmp_add_term"], [189, 3, 1, "", "dmp_div"], [189, 3, 1, "", "dmp_expand"], [189, 3, 1, "", "dmp_exquo"], [189, 3, 1, "", "dmp_exquo_ground"], [189, 3, 1, "", "dmp_ff_div"], [189, 3, 1, "", "dmp_l1_norm"], [189, 3, 1, "", "dmp_max_norm"], [189, 3, 1, "", "dmp_mul"], [189, 3, 1, "", "dmp_mul_ground"], [189, 3, 1, "", "dmp_mul_term"], [189, 3, 1, "", "dmp_neg"], [189, 3, 1, "", "dmp_pdiv"], [189, 3, 1, "", "dmp_pexquo"], [189, 3, 1, "", "dmp_pow"], [189, 3, 1, "", "dmp_pquo"], [189, 3, 1, "", "dmp_prem"], [189, 3, 1, "", "dmp_quo"], [189, 3, 1, "", "dmp_quo_ground"], [189, 3, 1, "", "dmp_rem"], [189, 3, 1, "", "dmp_rr_div"], [189, 3, 1, "", "dmp_sqr"], [189, 3, 1, "", "dmp_sub"], [189, 3, 1, "", "dmp_sub_ground"], [189, 3, 1, "", "dmp_sub_mul"], [189, 3, 1, "", "dmp_sub_term"], [189, 3, 1, "", "dup_lshift"], [189, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[189, 3, 1, "", "dmp_LC"], [189, 3, 1, "", "dmp_TC"], [189, 3, 1, "", "dmp_apply_pairs"], [189, 3, 1, "", "dmp_convert"], [189, 3, 1, "", "dmp_copy"], [189, 3, 1, "", "dmp_deflate"], [189, 3, 1, "", "dmp_degree"], [189, 3, 1, "", "dmp_degree_in"], [189, 3, 1, "", "dmp_degree_list"], [189, 3, 1, "", "dmp_eject"], [189, 3, 1, "", "dmp_exclude"], [189, 3, 1, "", "dmp_from_dict"], [189, 3, 1, "", "dmp_from_sympy"], [189, 3, 1, "", "dmp_ground"], [189, 3, 1, "", "dmp_ground_LC"], [189, 3, 1, "", "dmp_ground_TC"], [189, 3, 1, "", "dmp_ground_nth"], [189, 3, 1, "", "dmp_ground_p"], [189, 3, 1, "", "dmp_grounds"], [189, 3, 1, "", "dmp_include"], [189, 3, 1, "", "dmp_inflate"], [189, 3, 1, "", "dmp_inject"], [189, 3, 1, "", "dmp_list_terms"], [189, 3, 1, "", "dmp_multi_deflate"], [189, 3, 1, "", "dmp_negative_p"], [189, 3, 1, "", "dmp_nest"], [189, 3, 1, "", "dmp_normal"], [189, 3, 1, "", "dmp_nth"], [189, 3, 1, "", "dmp_one"], [189, 3, 1, "", "dmp_one_p"], [189, 3, 1, "", "dmp_permute"], [189, 3, 1, "", "dmp_positive_p"], [189, 3, 1, "", "dmp_raise"], [189, 3, 1, "", "dmp_slice"], [189, 3, 1, "", "dmp_strip"], [189, 3, 1, "", "dmp_swap"], [189, 3, 1, "", "dmp_terms_gcd"], [189, 3, 1, "", "dmp_to_dict"], [189, 3, 1, "", "dmp_to_tuple"], [189, 3, 1, "", "dmp_true_LT"], [189, 3, 1, "", "dmp_validate"], [189, 3, 1, "", "dmp_zero"], [189, 3, 1, "", "dmp_zero_p"], [189, 3, 1, "", "dmp_zeros"], [189, 3, 1, "", "dup_random"], [189, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[189, 3, 1, "", "dmp_clear_denoms"], [189, 3, 1, "", "dmp_compose"], [189, 3, 1, "", "dmp_diff"], [189, 3, 1, "", "dmp_diff_eval_in"], [189, 3, 1, "", "dmp_diff_in"], [189, 3, 1, "", "dmp_eval"], [189, 3, 1, "", "dmp_eval_in"], [189, 3, 1, "", "dmp_eval_tail"], [189, 3, 1, "", "dmp_ground_content"], [189, 3, 1, "", "dmp_ground_extract"], [189, 3, 1, "", "dmp_ground_monic"], [189, 3, 1, "", "dmp_ground_primitive"], [189, 3, 1, "", "dmp_ground_trunc"], [189, 3, 1, "", "dmp_integrate"], [189, 3, 1, "", "dmp_integrate_in"], [189, 3, 1, "", "dmp_lift"], [189, 3, 1, "", "dmp_revert"], [189, 3, 1, "", "dmp_trunc"], [189, 3, 1, "", "dup_content"], [189, 3, 1, "", "dup_decompose"], [189, 3, 1, "", "dup_extract"], [189, 3, 1, "", "dup_mirror"], [189, 3, 1, "", "dup_monic"], [189, 3, 1, "", "dup_primitive"], [189, 3, 1, "", "dup_real_imag"], [189, 3, 1, "", "dup_scale"], [189, 3, 1, "", "dup_shift"], [189, 3, 1, "", "dup_sign_variations"], [189, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[192, 3, 1, "", "dispersion"], [192, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[189, 3, 1, "", "sdm_LC"], [189, 3, 1, "", "sdm_LM"], [189, 3, 1, "", "sdm_LT"], [189, 3, 1, "", "sdm_add"], [189, 3, 1, "", "sdm_deg"], [189, 3, 1, "", "sdm_ecart"], [189, 3, 1, "", "sdm_from_dict"], [189, 3, 1, "", "sdm_from_vector"], [189, 3, 1, "", "sdm_groebner"], [189, 3, 1, "", "sdm_monomial_deg"], [189, 3, 1, "", "sdm_monomial_divides"], [189, 3, 1, "", "sdm_monomial_mul"], [189, 3, 1, "", "sdm_mul_term"], [189, 3, 1, "", "sdm_nf_mora"], [189, 3, 1, "", "sdm_spoly"], [189, 3, 1, "", "sdm_to_dict"], [189, 3, 1, "", "sdm_to_vector"], [189, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[187, 1, 1, "", "AlgebraicField"], [187, 1, 1, "", "ComplexField"], [187, 1, 1, "", "ExpressionDomain"], [187, 1, 1, "", "FiniteField"], [187, 1, 1, "", "FractionField"], [187, 1, 1, "", "GMPYFiniteField"], [187, 1, 1, "", "GMPYIntegerRing"], [187, 1, 1, "", "GMPYRationalField"], [187, 1, 1, "", "IntegerRing"], [187, 1, 1, "", "PolynomialRing"], [187, 1, 1, "", "PythonFiniteField"], [187, 1, 1, "", "PythonIntegerRing"], [187, 1, 1, "", "PythonRationalField"], [187, 1, 1, "", "RationalField"], [187, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[187, 2, 1, "", "algebraic_field"], [187, 2, 1, "", "denom"], [187, 2, 1, "", "discriminant"], [187, 5, 1, "", "dtype"], [187, 5, 1, "", "ext"], [187, 2, 1, "", "from_AlgebraicField"], [187, 2, 1, "", "from_GaussianIntegerRing"], [187, 2, 1, "", "from_GaussianRationalField"], [187, 2, 1, "", "from_QQ"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "integral_basis"], [187, 2, 1, "", "is_negative"], [187, 2, 1, "", "is_nonnegative"], [187, 2, 1, "", "is_nonpositive"], [187, 2, 1, "", "is_positive"], [187, 2, 1, "", "maximal_order"], [187, 5, 1, "", "mod"], [187, 2, 1, "", "numer"], [187, 5, 1, "", "orig_ext"], [187, 2, 1, "", "primes_above"], [187, 2, 1, "", "to_alg_num"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[187, 2, 1, "", "almosteq"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "gcd"], [187, 2, 1, "", "get_exact"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "is_negative"], [187, 2, 1, "", "is_nonnegative"], [187, 2, 1, "", "is_nonpositive"], [187, 2, 1, "", "is_positive"], [187, 2, 1, "", "lcm"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[187, 1, 1, "", "Expression"], [187, 2, 1, "", "denom"], [187, 5, 1, "", "dtype"], [187, 2, 1, "", "from_ExpressionDomain"], [187, 2, 1, "", "from_FractionField"], [187, 2, 1, "", "from_GaussianIntegerRing"], [187, 2, 1, "", "from_GaussianRationalField"], [187, 2, 1, "", "from_PolynomialRing"], [187, 2, 1, "", "from_QQ"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "get_field"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "is_negative"], [187, 2, 1, "", "is_nonnegative"], [187, 2, 1, "", "is_nonpositive"], [187, 2, 1, "", "is_positive"], [187, 2, 1, "", "numer"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[187, 2, 1, "", "characteristic"], [187, 2, 1, "", "from_FF"], [187, 2, 1, "", "from_FF_gmpy"], [187, 2, 1, "", "from_FF_python"], [187, 2, 1, "", "from_QQ"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "get_field"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[187, 2, 1, "", "denom"], [187, 2, 1, "", "factorial"], [187, 2, 1, "", "from_AlgebraicField"], [187, 2, 1, "", "from_ComplexField"], [187, 2, 1, "", "from_FractionField"], [187, 2, 1, "", "from_GaussianIntegerRing"], [187, 2, 1, "", "from_GaussianRationalField"], [187, 2, 1, "", "from_PolynomialRing"], [187, 2, 1, "", "from_QQ"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "is_negative"], [187, 2, 1, "", "is_nonnegative"], [187, 2, 1, "", "is_nonpositive"], [187, 2, 1, "", "is_positive"], [187, 2, 1, "", "numer"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[187, 2, 1, "", "factorial"], [187, 2, 1, "", "from_FF_gmpy"], [187, 2, 1, "", "from_FF_python"], [187, 2, 1, "", "from_QQ"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "gcd"], [187, 2, 1, "", "gcdex"], [187, 2, 1, "", "lcm"], [187, 2, 1, "", "sqrt"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[187, 2, 1, "", "denom"], [187, 2, 1, "", "div"], [187, 2, 1, "", "exquo"], [187, 2, 1, "", "factorial"], [187, 2, 1, "", "from_GaussianRationalField"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "numer"], [187, 2, 1, "", "quo"], [187, 2, 1, "", "rem"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[187, 2, 1, "", "algebraic_field"], [187, 2, 1, "", "factorial"], [187, 2, 1, "", "from_AlgebraicField"], [187, 2, 1, "", "from_FF"], [187, 2, 1, "", "from_FF_gmpy"], [187, 2, 1, "", "from_FF_python"], [187, 2, 1, "", "from_QQ"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "gcd"], [187, 2, 1, "", "gcdex"], [187, 2, 1, "", "get_field"], [187, 2, 1, "", "lcm"], [187, 2, 1, "", "log"], [187, 2, 1, "", "sqrt"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[187, 2, 1, "", "factorial"], [187, 2, 1, "", "from_AlgebraicField"], [187, 2, 1, "", "from_ComplexField"], [187, 2, 1, "", "from_FractionField"], [187, 2, 1, "", "from_GaussianIntegerRing"], [187, 2, 1, "", "from_GaussianRationalField"], [187, 2, 1, "", "from_GlobalPolynomialRing"], [187, 2, 1, "", "from_PolynomialRing"], [187, 2, 1, "", "from_QQ"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "gcd"], [187, 2, 1, "", "gcdex"], [187, 2, 1, "", "get_field"], [187, 2, 1, "", "is_negative"], [187, 2, 1, "", "is_nonnegative"], [187, 2, 1, "", "is_nonpositive"], [187, 2, 1, "", "is_positive"], [187, 2, 1, "", "is_unit"], [187, 2, 1, "", "lcm"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[187, 2, 1, "", "algebraic_field"], [187, 2, 1, "", "denom"], [187, 2, 1, "", "div"], [187, 2, 1, "", "exquo"], [187, 2, 1, "", "from_AlgebraicField"], [187, 2, 1, "", "from_GaussianRationalField"], [187, 2, 1, "", "from_QQ"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "numer"], [187, 2, 1, "", "quo"], [187, 2, 1, "", "rem"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[187, 2, 1, "", "almosteq"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "gcd"], [187, 2, 1, "", "get_exact"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "lcm"], [187, 2, 1, "", "to_rational"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[187, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[187, 2, 1, "", "drop"], [187, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[187, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[187, 2, 1, "", "abs"], [187, 2, 1, "", "add"], [187, 2, 1, "", "alg_field_from_poly"], [187, 2, 1, "", "algebraic_field"], [187, 2, 1, "", "almosteq"], [187, 2, 1, "", "characteristic"], [187, 2, 1, "", "cofactors"], [187, 2, 1, "", "convert"], [187, 2, 1, "", "convert_from"], [187, 2, 1, "", "cyclotomic_field"], [187, 2, 1, "", "denom"], [187, 2, 1, "", "div"], [187, 2, 1, "", "drop"], [187, 5, 1, "", "dtype"], [187, 2, 1, "", "evalf"], [187, 2, 1, "", "exquo"], [187, 2, 1, "", "frac_field"], [187, 2, 1, "", "from_AlgebraicField"], [187, 2, 1, "", "from_ComplexField"], [187, 2, 1, "", "from_ExpressionDomain"], [187, 2, 1, "", "from_ExpressionRawDomain"], [187, 2, 1, "", "from_FF"], [187, 2, 1, "", "from_FF_gmpy"], [187, 2, 1, "", "from_FF_python"], [187, 2, 1, "", "from_FractionField"], [187, 2, 1, "", "from_GlobalPolynomialRing"], [187, 2, 1, "", "from_MonogenicFiniteExtension"], [187, 2, 1, "", "from_PolynomialRing"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_RealField"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "gcd"], [187, 2, 1, "", "gcdex"], [187, 2, 1, "", "get_exact"], [187, 2, 1, "", "get_field"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "half_gcdex"], [187, 5, 1, "", "has_assoc_Field"], [187, 5, 1, "", "has_assoc_Ring"], [187, 2, 1, "", "inject"], [187, 2, 1, "", "invert"], [187, 5, 1, "", "is_Field"], [187, 5, 1, "", "is_PID"], [187, 5, 1, "", "is_Ring"], [187, 2, 1, "", "is_negative"], [187, 2, 1, "", "is_nonnegative"], [187, 2, 1, "", "is_nonpositive"], [187, 2, 1, "", "is_one"], [187, 2, 1, "", "is_positive"], [187, 2, 1, "", "is_zero"], [187, 2, 1, "", "lcm"], [187, 2, 1, "", "log"], [187, 2, 1, "", "map"], [187, 2, 1, "", "mul"], [187, 2, 1, "", "n"], [187, 2, 1, "", "neg"], [187, 2, 1, "", "numer"], [187, 2, 1, "", "of_type"], [187, 2, 1, "", "old_frac_field"], [187, 2, 1, "", "old_poly_ring"], [187, 5, 1, "", "one"], [187, 2, 1, "", "poly_ring"], [187, 2, 1, "", "pos"], [187, 2, 1, "", "pow"], [187, 2, 1, "", "quo"], [187, 2, 1, "", "rem"], [187, 2, 1, "", "revert"], [187, 2, 1, "", "sqrt"], [187, 2, 1, "", "sub"], [187, 2, 1, "", "to_sympy"], [187, 4, 1, "", "tp"], [187, 2, 1, "", "unify"], [187, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[187, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[187, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[187, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[187, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[187, 2, 1, "", "div"], [187, 2, 1, "", "exquo"], [187, 2, 1, "", "gcd"], [187, 2, 1, "", "get_field"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "is_unit"], [187, 2, 1, "", "lcm"], [187, 2, 1, "", "quo"], [187, 2, 1, "", "rem"], [187, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[187, 1, 1, "", "GaussianDomain"], [187, 1, 1, "", "GaussianElement"], [187, 1, 1, "", "GaussianInteger"], [187, 1, 1, "", "GaussianIntegerRing"], [187, 1, 1, "", "GaussianRational"], [187, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[187, 2, 1, "", "from_AlgebraicField"], [187, 2, 1, "", "from_QQ"], [187, 2, 1, "", "from_QQ_gmpy"], [187, 2, 1, "", "from_QQ_python"], [187, 2, 1, "", "from_ZZ"], [187, 2, 1, "", "from_ZZ_gmpy"], [187, 2, 1, "", "from_ZZ_python"], [187, 2, 1, "", "from_sympy"], [187, 2, 1, "", "inject"], [187, 2, 1, "", "is_negative"], [187, 2, 1, "", "is_nonnegative"], [187, 2, 1, "", "is_nonpositive"], [187, 2, 1, "", "is_positive"], [187, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[187, 2, 1, "", "new"], [187, 2, 1, "", "parent"], [187, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[187, 5, 1, "", "dtype"], [187, 2, 1, "", "from_GaussianIntegerRing"], [187, 2, 1, "", "from_GaussianRationalField"], [187, 2, 1, "", "gcd"], [187, 2, 1, "", "get_field"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "lcm"], [187, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[187, 2, 1, "", "as_AlgebraicField"], [187, 2, 1, "", "denom"], [187, 5, 1, "", "dtype"], [187, 2, 1, "", "from_GaussianIntegerRing"], [187, 2, 1, "", "from_GaussianRationalField"], [187, 2, 1, "", "get_field"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[187, 1, 1, "", "ComplexElement"], [187, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[187, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[187, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[187, 2, 1, "", "denom"], [187, 2, 1, "", "div"], [187, 2, 1, "", "exquo"], [187, 2, 1, "", "free_module"], [187, 2, 1, "", "get_ring"], [187, 2, 1, "", "ideal"], [187, 2, 1, "", "invert"], [187, 2, 1, "", "numer"], [187, 2, 1, "", "quo"], [187, 2, 1, "", "quotient_ring"], [187, 2, 1, "", "rem"], [187, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[187, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[187, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[189, 3, 1, "", "dmp_cancel"], [189, 3, 1, "", "dmp_content"], [189, 3, 1, "", "dmp_discriminant"], [189, 3, 1, "", "dmp_euclidean_prs"], [189, 3, 1, "", "dmp_ff_prs_gcd"], [189, 3, 1, "", "dmp_gcd"], [189, 3, 1, "", "dmp_gcdex"], [189, 3, 1, "", "dmp_half_gcdex"], [189, 3, 1, "", "dmp_inner_gcd"], [189, 3, 1, "", "dmp_inner_subresultants"], [189, 3, 1, "", "dmp_invert"], [189, 3, 1, "", "dmp_lcm"], [189, 3, 1, "", "dmp_primitive"], [189, 3, 1, "", "dmp_primitive_prs"], [189, 3, 1, "", "dmp_prs_resultant"], [189, 3, 1, "", "dmp_qq_collins_resultant"], [189, 3, 1, "", "dmp_qq_heu_gcd"], [189, 3, 1, "", "dmp_resultant"], [189, 3, 1, "", "dmp_rr_prs_gcd"], [189, 3, 1, "", "dmp_subresultants"], [189, 3, 1, "", "dmp_zz_collins_resultant"], [189, 3, 1, "", "dmp_zz_heu_gcd"], [189, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[189, 3, 1, "", "dmp_ext_factor"], [189, 3, 1, "", "dmp_factor_list"], [189, 3, 1, "", "dmp_factor_list_include"], [189, 3, 1, "", "dmp_irreducible_p"], [189, 3, 1, "", "dmp_trial_division"], [189, 3, 1, "", "dmp_zz_diophantine"], [189, 3, 1, "", "dmp_zz_factor"], [189, 3, 1, "", "dmp_zz_mignotte_bound"], [189, 3, 1, "", "dmp_zz_wang"], [189, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [189, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [189, 3, 1, "", "dmp_zz_wang_non_divisors"], [189, 3, 1, "", "dmp_zz_wang_test_points"], [189, 3, 1, "", "dup_cyclotomic_p"], [189, 3, 1, "", "dup_gf_factor"], [189, 3, 1, "", "dup_zz_cyclotomic_factor"], [189, 3, 1, "", "dup_zz_cyclotomic_poly"], [189, 3, 1, "", "dup_zz_factor"], [189, 3, 1, "", "dup_zz_factor_sqf"], [189, 3, 1, "", "dup_zz_hensel_lift"], [189, 3, 1, "", "dup_zz_hensel_step"], [189, 3, 1, "", "dup_zz_irreducible_p"], [189, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[189, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[187, 1, 1, "", "FracElement"], [187, 1, 1, "", "FracField"], [187, 3, 1, "", "field"], [187, 3, 1, "", "sfield"], [187, 3, 1, "", "vfield"], [187, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[187, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[189, 3, 1, "", "gf_LC"], [189, 3, 1, "", "gf_Qbasis"], [189, 3, 1, "", "gf_Qmatrix"], [189, 3, 1, "", "gf_TC"], [189, 3, 1, "", "gf_add"], [189, 3, 1, "", "gf_add_ground"], [189, 3, 1, "", "gf_add_mul"], [189, 3, 1, "", "gf_berlekamp"], [189, 3, 1, "", "gf_cofactors"], [189, 3, 1, "", "gf_compose"], [189, 3, 1, "", "gf_compose_mod"], [189, 3, 1, "", "gf_crt"], [189, 3, 1, "", "gf_crt1"], [189, 3, 1, "", "gf_crt2"], [189, 3, 1, "", "gf_csolve"], [189, 3, 1, "", "gf_degree"], [189, 3, 1, "", "gf_diff"], [189, 3, 1, "", "gf_div"], [189, 3, 1, "", "gf_eval"], [189, 3, 1, "", "gf_expand"], [189, 3, 1, "", "gf_exquo"], [189, 3, 1, "", "gf_factor"], [189, 3, 1, "", "gf_factor_sqf"], [189, 3, 1, "", "gf_from_dict"], [189, 3, 1, "", "gf_from_int_poly"], [189, 3, 1, "", "gf_gcd"], [189, 3, 1, "", "gf_gcdex"], [189, 3, 1, "", "gf_int"], [189, 3, 1, "", "gf_irreducible"], [189, 3, 1, "", "gf_irreducible_p"], [189, 3, 1, "", "gf_lcm"], [189, 3, 1, "", "gf_lshift"], [189, 3, 1, "", "gf_monic"], [189, 3, 1, "", "gf_mul"], [189, 3, 1, "", "gf_mul_ground"], [189, 3, 1, "", "gf_multi_eval"], [189, 3, 1, "", "gf_neg"], [189, 3, 1, "", "gf_normal"], [189, 3, 1, "", "gf_pow"], [189, 3, 1, "", "gf_pow_mod"], [189, 3, 1, "", "gf_quo"], [189, 3, 1, "", "gf_quo_ground"], [189, 3, 1, "", "gf_random"], [189, 3, 1, "", "gf_rem"], [189, 3, 1, "", "gf_rshift"], [189, 3, 1, "", "gf_shoup"], [189, 3, 1, "", "gf_sqf_list"], [189, 3, 1, "", "gf_sqf_p"], [189, 3, 1, "", "gf_sqf_part"], [189, 3, 1, "", "gf_sqr"], [189, 3, 1, "", "gf_strip"], [189, 3, 1, "", "gf_sub"], [189, 3, 1, "", "gf_sub_ground"], [189, 3, 1, "", "gf_sub_mul"], [189, 3, 1, "", "gf_to_dict"], [189, 3, 1, "", "gf_to_int_poly"], [189, 3, 1, "", "gf_trace_map"], [189, 3, 1, "", "gf_trunc"], [189, 3, 1, "", "gf_value"], [189, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[189, 3, 1, "", "groebner"], [189, 3, 1, "", "is_groebner"], [189, 3, 1, "", "is_minimal"], [189, 3, 1, "", "is_reduced"], [189, 3, 1, "", "red_groebner"], [189, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[185, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[185, 2, 1, "", "add"], [185, 2, 1, "", "charpoly"], [185, 2, 1, "", "det"], [185, 2, 1, "", "hstack"], [185, 2, 1, "", "inv"], [185, 2, 1, "", "is_lower"], [185, 2, 1, "", "is_upper"], [185, 2, 1, "", "is_zero_matrix"], [185, 2, 1, "", "lu"], [185, 2, 1, "", "lu_solve"], [185, 2, 1, "", "matmul"], [185, 2, 1, "", "neg"], [185, 2, 1, "", "rref"], [185, 2, 1, "", "scc"], [185, 2, 1, "", "sub"], [185, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[185, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[185, 2, 1, "", "add"], [185, 2, 1, "", "charpoly"], [185, 2, 1, "", "columnspace"], [185, 2, 1, "", "convert_to"], [185, 2, 1, "", "det"], [185, 2, 1, "", "diag"], [185, 2, 1, "", "eye"], [185, 2, 1, "", "from_Matrix"], [185, 2, 1, "", "from_dict_sympy"], [185, 2, 1, "", "from_list"], [185, 2, 1, "", "from_list_sympy"], [185, 2, 1, "", "from_rep"], [185, 2, 1, "", "hstack"], [185, 2, 1, "", "inv"], [185, 4, 1, "", "is_lower"], [185, 4, 1, "", "is_upper"], [185, 2, 1, "", "lu"], [185, 2, 1, "", "lu_solve"], [185, 2, 1, "", "matmul"], [185, 2, 1, "", "mul"], [185, 2, 1, "", "neg"], [185, 2, 1, "", "nullspace"], [185, 2, 1, "", "ones"], [185, 2, 1, "", "pow"], [185, 2, 1, "", "rowspace"], [185, 2, 1, "", "rref"], [185, 2, 1, "", "scc"], [185, 2, 1, "", "sub"], [185, 2, 1, "", "to_Matrix"], [185, 2, 1, "", "to_dense"], [185, 2, 1, "", "to_field"], [185, 2, 1, "", "to_sparse"], [185, 2, 1, "", "transpose"], [185, 2, 1, "", "unify"], [185, 2, 1, "", "vstack"], [185, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[185, 3, 1, "", "hermite_normal_form"], [185, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[185, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[185, 2, 1, "", "add"], [185, 2, 1, "", "charpoly"], [185, 2, 1, "", "convert_to"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "det"], [185, 2, 1, "", "eye"], [185, 2, 1, "", "from_ddm"], [185, 2, 1, "", "from_list"], [185, 2, 1, "", "hstack"], [185, 2, 1, "", "inv"], [185, 2, 1, "", "is_lower"], [185, 2, 1, "", "is_upper"], [185, 2, 1, "", "is_zero_matrix"], [185, 2, 1, "", "lu"], [185, 2, 1, "", "lu_solve"], [185, 2, 1, "", "matmul"], [185, 2, 1, "", "mul"], [185, 2, 1, "", "neg"], [185, 2, 1, "", "new"], [185, 2, 1, "", "nullspace"], [185, 2, 1, "", "rref"], [185, 2, 1, "", "scc"], [185, 2, 1, "", "sub"], [185, 2, 1, "", "to_ddm"], [185, 2, 1, "", "to_list"], [185, 2, 1, "", "transpose"], [185, 2, 1, "", "vstack"], [185, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[189, 3, 1, "", "_modgcd_multivariate_p"], [189, 3, 1, "", "func_field_modgcd"], [189, 3, 1, "", "modgcd_bivariate"], [189, 3, 1, "", "modgcd_multivariate"], [189, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[192, 1, 1, "", "Monomial"], [192, 3, 1, "", "itermonomials"], [192, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[192, 2, 1, "", "as_expr"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[191, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[191, 3, 1, "", "minimal_polynomial"], [191, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[191, 0, 0, "-", "modules"], [191, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[191, 1, 1, "", "EndomorphismRing"], [191, 1, 1, "", "InnerEndomorphism"], [191, 1, 1, "", "Module"], [191, 1, 1, "", "ModuleElement"], [191, 1, 1, "", "ModuleEndomorphism"], [191, 1, 1, "", "ModuleHomomorphism"], [191, 1, 1, "", "PowerBasis"], [191, 1, 1, "", "PowerBasisElement"], [191, 1, 1, "", "Submodule"], [191, 3, 1, "", "find_min_poly"], [191, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[191, 2, 1, "", "__init__"], [191, 2, 1, "", "inner_endomorphism"], [191, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[191, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[191, 2, 1, "", "__call__"], [191, 2, 1, "", "ancestors"], [191, 2, 1, "", "basis_elements"], [191, 2, 1, "", "element_from_rational"], [191, 2, 1, "", "endomorphism_ring"], [191, 2, 1, "", "is_compat_col"], [191, 2, 1, "", "mult_tab"], [191, 4, 1, "", "n"], [191, 2, 1, "", "nearest_common_ancestor"], [191, 4, 1, "", "number_field"], [191, 2, 1, "", "one"], [191, 4, 1, "", "parent"], [191, 2, 1, "", "power_basis_ancestor"], [191, 2, 1, "", "represent"], [191, 2, 1, "", "starts_with_unity"], [191, 2, 1, "", "submodule_from_gens"], [191, 2, 1, "", "submodule_from_matrix"], [191, 2, 1, "", "whole_submodule"], [191, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[191, 4, 1, "", "QQ_col"], [191, 2, 1, "", "__add__"], [191, 2, 1, "", "__init__"], [191, 2, 1, "", "__mod__"], [191, 2, 1, "", "__mul__"], [191, 2, 1, "", "column"], [191, 2, 1, "", "equiv"], [191, 2, 1, "", "from_int_list"], [191, 2, 1, "", "is_compat"], [191, 4, 1, "", "n"], [191, 2, 1, "", "over_power_basis"], [191, 2, 1, "", "reduced"], [191, 2, 1, "", "reduced_mod_p"], [191, 2, 1, "", "to_ancestor"], [191, 2, 1, "", "to_parent"], [191, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[191, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[191, 2, 1, "", "__init__"], [191, 2, 1, "", "kernel"], [191, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[191, 2, 1, "", "__init__"], [191, 2, 1, "", "element_from_ANP"], [191, 2, 1, "", "element_from_alg_num"], [191, 2, 1, "", "element_from_poly"], [191, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[191, 4, 1, "", "T"], [191, 2, 1, "", "as_expr"], [191, 4, 1, "", "generator"], [191, 4, 1, "", "is_rational"], [191, 2, 1, "", "norm"], [191, 2, 1, "", "numerator"], [191, 2, 1, "", "poly"], [191, 2, 1, "", "to_ANP"], [191, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[191, 4, 1, "", "QQ_matrix"], [191, 2, 1, "", "__init__"], [191, 2, 1, "", "add"], [191, 2, 1, "", "basis_element_pullbacks"], [191, 2, 1, "", "discard_before"], [191, 2, 1, "", "mul"], [191, 2, 1, "", "reduce_element"], [191, 2, 1, "", "reduced"], [191, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[191, 1, 1, "", "PrimeIdeal"], [191, 3, 1, "", "prime_decomp"], [191, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[191, 2, 1, "", "__add__"], [191, 2, 1, "", "__init__"], [191, 2, 1, "", "__mul__"], [191, 2, 1, "", "as_submodule"], [191, 4, 1, "", "is_inert"], [191, 2, 1, "", "reduce_ANP"], [191, 2, 1, "", "reduce_alg_num"], [191, 2, 1, "", "reduce_element"], [191, 2, 1, "", "repr"], [191, 2, 1, "", "test_factor"], [191, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[191, 3, 1, "", "field_isomorphism"], [191, 3, 1, "", "primitive_element"], [191, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[191, 1, 1, "", "AlgIntPowers"], [191, 3, 1, "", "coeff_search"], [191, 3, 1, "", "extract_fundamental_discriminant"], [191, 3, 1, "", "get_num_denom"], [191, 3, 1, "", "is_int"], [191, 3, 1, "", "is_rat"], [191, 3, 1, "", "isolate"], [191, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[191, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[192, 1, 1, "", "GradedLexOrder"], [192, 1, 1, "", "LexOrder"], [192, 1, 1, "", "MonomialOrder"], [192, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[192, 3, 1, "", "chebyshevt_poly"], [192, 3, 1, "", "chebyshevu_poly"], [192, 3, 1, "", "gegenbauer_poly"], [192, 3, 1, "", "hermite_poly"], [192, 3, 1, "", "jacobi_poly"], [192, 3, 1, "", "laguerre_poly"], [192, 3, 1, "", "legendre_poly"], [192, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[192, 3, 1, "", "apart"], [192, 3, 1, "", "apart_list"], [192, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[187, 1, 1, "", "ANP"], [187, 1, 1, "", "DMF"], [187, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[187, 2, 1, "", "LC"], [187, 2, 1, "", "TC"], [187, 4, 1, "", "is_ground"], [187, 4, 1, "", "is_one"], [187, 4, 1, "", "is_zero"], [187, 2, 1, "", "pow"], [187, 2, 1, "", "to_dict"], [187, 2, 1, "", "to_list"], [187, 2, 1, "", "to_sympy_dict"], [187, 2, 1, "", "to_sympy_list"], [187, 2, 1, "", "to_tuple"], [187, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[187, 2, 1, "", "add"], [187, 2, 1, "", "cancel"], [187, 2, 1, "", "denom"], [187, 2, 1, "", "exquo"], [187, 2, 1, "", "frac_unify"], [187, 2, 1, "", "half_per"], [187, 2, 1, "", "invert"], [187, 4, 1, "", "is_one"], [187, 4, 1, "", "is_zero"], [187, 2, 1, "", "mul"], [187, 2, 1, "", "neg"], [187, 2, 1, "", "numer"], [187, 2, 1, "", "per"], [187, 2, 1, "", "poly_unify"], [187, 2, 1, "", "pow"], [187, 2, 1, "", "quo"], [187, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[187, 2, 1, "", "LC"], [187, 2, 1, "", "TC"], [187, 2, 1, "", "abs"], [187, 2, 1, "", "add"], [187, 2, 1, "", "add_ground"], [187, 2, 1, "", "all_coeffs"], [187, 2, 1, "", "all_monoms"], [187, 2, 1, "", "all_terms"], [187, 2, 1, "", "cancel"], [187, 2, 1, "", "cauchy_lower_bound"], [187, 2, 1, "", "cauchy_upper_bound"], [187, 2, 1, "", "clear_denoms"], [187, 2, 1, "", "coeffs"], [187, 2, 1, "", "cofactors"], [187, 2, 1, "", "compose"], [187, 2, 1, "", "content"], [187, 2, 1, "", "convert"], [187, 2, 1, "", "count_complex_roots"], [187, 2, 1, "", "count_real_roots"], [187, 2, 1, "", "decompose"], [187, 2, 1, "", "deflate"], [187, 2, 1, "", "degree"], [187, 2, 1, "", "degree_list"], [187, 2, 1, "", "diff"], [187, 2, 1, "", "discriminant"], [187, 2, 1, "", "div"], [187, 2, 1, "", "eject"], [187, 2, 1, "", "eval"], [187, 2, 1, "", "exclude"], [187, 2, 1, "", "exquo"], [187, 2, 1, "", "exquo_ground"], [187, 2, 1, "", "factor_list"], [187, 2, 1, "", "factor_list_include"], [187, 2, 1, "", "from_dict"], [187, 2, 1, "", "from_list"], [187, 2, 1, "", "from_sympy_list"], [187, 2, 1, "", "gcd"], [187, 2, 1, "", "gcdex"], [187, 2, 1, "", "gff_list"], [187, 2, 1, "", "half_gcdex"], [187, 2, 1, "", "homogeneous_order"], [187, 2, 1, "", "homogenize"], [187, 2, 1, "", "inject"], [187, 2, 1, "", "integrate"], [187, 2, 1, "", "intervals"], [187, 2, 1, "", "invert"], [187, 4, 1, "", "is_cyclotomic"], [187, 4, 1, "", "is_ground"], [187, 4, 1, "", "is_homogeneous"], [187, 4, 1, "", "is_irreducible"], [187, 4, 1, "", "is_linear"], [187, 4, 1, "", "is_monic"], [187, 4, 1, "", "is_monomial"], [187, 4, 1, "", "is_one"], [187, 4, 1, "", "is_primitive"], [187, 4, 1, "", "is_quadratic"], [187, 4, 1, "", "is_sqf"], [187, 4, 1, "", "is_zero"], [187, 2, 1, "", "l1_norm"], [187, 2, 1, "", "l2_norm_squared"], [187, 2, 1, "", "lcm"], [187, 2, 1, "", "lift"], [187, 2, 1, "", "max_norm"], [187, 2, 1, "", "mignotte_sep_bound_squared"], [187, 2, 1, "", "monic"], [187, 2, 1, "", "monoms"], [187, 2, 1, "", "mul"], [187, 2, 1, "", "mul_ground"], [187, 2, 1, "", "neg"], [187, 2, 1, "", "norm"], [187, 2, 1, "", "nth"], [187, 2, 1, "", "pdiv"], [187, 2, 1, "", "per"], [187, 2, 1, "", "permute"], [187, 2, 1, "", "pexquo"], [187, 2, 1, "", "pow"], [187, 2, 1, "", "pquo"], [187, 2, 1, "", "prem"], [187, 2, 1, "", "primitive"], [187, 2, 1, "", "quo"], [187, 2, 1, "", "quo_ground"], [187, 2, 1, "", "refine_root"], [187, 2, 1, "", "rem"], [187, 2, 1, "", "resultant"], [187, 2, 1, "", "revert"], [187, 2, 1, "", "shift"], [187, 2, 1, "", "slice"], [187, 2, 1, "", "sqf_list"], [187, 2, 1, "", "sqf_list_include"], [187, 2, 1, "", "sqf_norm"], [187, 2, 1, "", "sqf_part"], [187, 2, 1, "", "sqr"], [187, 2, 1, "", "sturm"], [187, 2, 1, "", "sub"], [187, 2, 1, "", "sub_ground"], [187, 2, 1, "", "subresultants"], [187, 2, 1, "", "terms"], [187, 2, 1, "", "terms_gcd"], [187, 2, 1, "", "to_dict"], [187, 2, 1, "", "to_exact"], [187, 2, 1, "", "to_field"], [187, 2, 1, "", "to_list"], [187, 2, 1, "", "to_ring"], [187, 2, 1, "", "to_sympy_dict"], [187, 2, 1, "", "to_sympy_list"], [187, 2, 1, "", "to_tuple"], [187, 2, 1, "", "total_degree"], [187, 2, 1, "", "transform"], [187, 2, 1, "", "trunc"], [187, 2, 1, "", "unify"]], "sympy.polys": [[189, 0, 0, "-", "polyconfig"], [189, 0, 0, "-", "polyoptions"], [194, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[189, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[189, 1, 1, "", "BasePolynomialError"], [189, 1, 1, "", "CoercionFailed"], [189, 1, 1, "", "ComputationFailed"], [189, 1, 1, "", "DomainError"], [189, 1, 1, "", "EvaluationFailed"], [189, 1, 1, "", "ExactQuotientFailed"], [189, 1, 1, "", "ExtraneousFactors"], [189, 1, 1, "", "FlagError"], [189, 1, 1, "", "GeneratorsError"], [189, 1, 1, "", "GeneratorsNeeded"], [189, 1, 1, "", "HeuristicGCDFailed"], [189, 1, 1, "", "HomomorphismFailed"], [189, 1, 1, "", "IsomorphismFailed"], [189, 1, 1, "", "MultivariatePolynomialError"], [189, 1, 1, "", "NotAlgebraic"], [189, 1, 1, "", "NotInvertible"], [189, 1, 1, "", "NotReversible"], [189, 1, 1, "", "OperationNotSupported"], [189, 1, 1, "", "OptionError"], [189, 1, 1, "", "PolificationFailed"], [189, 1, 1, "", "PolynomialError"], [189, 1, 1, "", "RefinementFailed"], [189, 1, 1, "", "UnificationFailed"], [189, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[192, 3, 1, "", "horner"], [192, 3, 1, "", "interpolate"], [192, 3, 1, "", "symmetrize"], [192, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[189, 1, 1, "", "Options"], [189, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[189, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[192, 3, 1, "", "roots"]], "sympy.polys.polytools": [[192, 1, 1, "", "GroebnerBasis"], [192, 3, 1, "", "LC"], [192, 3, 1, "", "LM"], [192, 3, 1, "", "LT"], [192, 1, 1, "", "Poly"], [192, 1, 1, "", "PurePoly"], [192, 3, 1, "", "cancel"], [192, 3, 1, "", "cofactors"], [192, 3, 1, "", "compose"], [192, 3, 1, "", "content"], [192, 3, 1, "", "count_roots"], [192, 3, 1, "", "decompose"], [192, 3, 1, "", "degree"], [192, 3, 1, "", "degree_list"], [192, 3, 1, "", "discriminant"], [192, 3, 1, "", "div"], [192, 3, 1, "", "exquo"], [192, 3, 1, "", "factor"], [192, 3, 1, "", "factor_list"], [192, 3, 1, "", "gcd"], [192, 3, 1, "", "gcd_list"], [192, 3, 1, "", "gcdex"], [192, 3, 1, "", "gff"], [192, 3, 1, "", "gff_list"], [192, 3, 1, "", "groebner"], [192, 3, 1, "", "ground_roots"], [192, 3, 1, "", "half_gcdex"], [192, 3, 1, "", "intervals"], [192, 3, 1, "", "invert"], [192, 3, 1, "", "is_zero_dimensional"], [192, 3, 1, "", "lcm"], [192, 3, 1, "", "lcm_list"], [192, 3, 1, "", "monic"], [192, 3, 1, "", "nroots"], [192, 3, 1, "", "nth_power_roots_poly"], [192, 3, 1, "", "parallel_poly_from_expr"], [192, 3, 1, "", "pdiv"], [192, 3, 1, "", "pexquo"], [192, 3, 1, "", "poly"], [192, 3, 1, "", "poly_from_expr"], [192, 3, 1, "", "pquo"], [192, 3, 1, "", "prem"], [192, 3, 1, "", "primitive"], [192, 3, 1, "", "quo"], [192, 3, 1, "", "real_roots"], [192, 3, 1, "", "reduced"], [192, 3, 1, "", "refine_root"], [192, 3, 1, "", "rem"], [192, 3, 1, "", "resultant"], [192, 3, 1, "", "sqf"], [192, 3, 1, "", "sqf_list"], [192, 3, 1, "", "sqf_norm"], [192, 3, 1, "", "sqf_part"], [192, 3, 1, "", "sturm"], [192, 3, 1, "", "subresultants"], [192, 3, 1, "", "terms_gcd"], [192, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[192, 2, 1, "", "contains"], [192, 2, 1, "", "fglm"], [192, 4, 1, "", "is_zero_dimensional"], [192, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[192, 2, 1, "", "EC"], [192, 2, 1, "", "EM"], [192, 2, 1, "", "ET"], [192, 2, 1, "", "LC"], [192, 2, 1, "", "LM"], [192, 2, 1, "", "LT"], [192, 2, 1, "", "TC"], [192, 2, 1, "", "abs"], [192, 2, 1, "", "add"], [192, 2, 1, "", "add_ground"], [192, 2, 1, "", "all_coeffs"], [192, 2, 1, "", "all_monoms"], [192, 2, 1, "", "all_roots"], [192, 2, 1, "", "all_terms"], [192, 2, 1, "", "as_dict"], [192, 2, 1, "", "as_expr"], [192, 2, 1, "", "as_list"], [192, 2, 1, "", "as_poly"], [192, 2, 1, "", "cancel"], [192, 2, 1, "", "clear_denoms"], [192, 2, 1, "", "coeff_monomial"], [192, 2, 1, "", "coeffs"], [192, 2, 1, "", "cofactors"], [192, 2, 1, "", "compose"], [192, 2, 1, "", "content"], [192, 2, 1, "", "count_roots"], [192, 2, 1, "", "decompose"], [192, 2, 1, "", "deflate"], [192, 2, 1, "", "degree"], [192, 2, 1, "", "degree_list"], [192, 2, 1, "", "diff"], [192, 2, 1, "", "discriminant"], [192, 2, 1, "", "dispersion"], [192, 2, 1, "", "dispersionset"], [192, 2, 1, "", "div"], [192, 4, 1, "", "domain"], [192, 2, 1, "", "eject"], [192, 2, 1, "", "eval"], [192, 2, 1, "", "exclude"], [192, 2, 1, "", "exquo"], [192, 2, 1, "", "exquo_ground"], [192, 2, 1, "", "factor_list"], [192, 2, 1, "", "factor_list_include"], [192, 4, 1, "", "free_symbols"], [192, 4, 1, "", "free_symbols_in_domain"], [192, 2, 1, "", "from_dict"], [192, 2, 1, "", "from_expr"], [192, 2, 1, "", "from_list"], [192, 2, 1, "", "from_poly"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "gcdex"], [192, 4, 1, "", "gen"], [192, 2, 1, "", "get_domain"], [192, 2, 1, "", "get_modulus"], [192, 2, 1, "", "gff_list"], [192, 2, 1, "", "ground_roots"], [192, 2, 1, "", "half_gcdex"], [192, 2, 1, "", "has_only_gens"], [192, 2, 1, "", "homogeneous_order"], [192, 2, 1, "", "homogenize"], [192, 2, 1, "", "inject"], [192, 2, 1, "", "integrate"], [192, 2, 1, "", "intervals"], [192, 2, 1, "", "invert"], [192, 4, 1, "", "is_cyclotomic"], [192, 4, 1, "", "is_ground"], [192, 4, 1, "", "is_homogeneous"], [192, 4, 1, "", "is_irreducible"], [192, 4, 1, "", "is_linear"], [192, 4, 1, "", "is_monic"], [192, 4, 1, "", "is_monomial"], [192, 4, 1, "", "is_multivariate"], [192, 4, 1, "", "is_one"], [192, 4, 1, "", "is_primitive"], [192, 4, 1, "", "is_quadratic"], [192, 4, 1, "", "is_sqf"], [192, 4, 1, "", "is_univariate"], [192, 4, 1, "", "is_zero"], [192, 2, 1, "", "l1_norm"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "length"], [192, 2, 1, "", "lift"], [192, 2, 1, "", "ltrim"], [192, 2, 1, "", "match"], [192, 2, 1, "", "max_norm"], [192, 2, 1, "", "monic"], [192, 2, 1, "", "monoms"], [192, 2, 1, "", "mul"], [192, 2, 1, "", "mul_ground"], [192, 2, 1, "", "neg"], [192, 2, 1, "", "new"], [192, 2, 1, "", "norm"], [192, 2, 1, "", "nroots"], [192, 2, 1, "", "nth"], [192, 2, 1, "", "nth_power_roots_poly"], [192, 4, 1, "", "one"], [192, 2, 1, "", "pdiv"], [192, 2, 1, "", "per"], [192, 2, 1, "", "pexquo"], [192, 2, 1, "", "pow"], [192, 2, 1, "", "pquo"], [192, 2, 1, "", "prem"], [192, 2, 1, "", "primitive"], [192, 2, 1, "", "quo"], [192, 2, 1, "", "quo_ground"], [192, 2, 1, "", "rat_clear_denoms"], [192, 2, 1, "", "real_roots"], [192, 2, 1, "", "refine_root"], [192, 2, 1, "", "rem"], [192, 2, 1, "", "reorder"], [192, 2, 1, "", "replace"], [192, 2, 1, "", "resultant"], [192, 2, 1, "", "retract"], [192, 2, 1, "", "revert"], [192, 2, 1, "", "root"], [192, 2, 1, "", "same_root"], [192, 2, 1, "", "set_domain"], [192, 2, 1, "", "set_modulus"], [192, 2, 1, "", "shift"], [192, 2, 1, "", "slice"], [192, 2, 1, "", "sqf_list"], [192, 2, 1, "", "sqf_list_include"], [192, 2, 1, "", "sqf_norm"], [192, 2, 1, "", "sqf_part"], [192, 2, 1, "", "sqr"], [192, 2, 1, "", "sturm"], [192, 2, 1, "", "sub"], [192, 2, 1, "", "sub_ground"], [192, 2, 1, "", "subresultants"], [192, 2, 1, "", "terms"], [192, 2, 1, "", "terms_gcd"], [192, 2, 1, "", "termwise"], [192, 2, 1, "", "to_exact"], [192, 2, 1, "", "to_field"], [192, 2, 1, "", "to_ring"], [192, 2, 1, "", "total_degree"], [192, 2, 1, "", "transform"], [192, 2, 1, "", "trunc"], [192, 2, 1, "", "unify"], [192, 4, 1, "", "unit"], [192, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[192, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[192, 3, 1, "", "together"]], "sympy.polys.ring_series": [[193, 3, 1, "", "_tan1"], [193, 3, 1, "", "mul_xin"], [193, 3, 1, "", "pow_xin"], [193, 3, 1, "", "rs_LambertW"], [193, 3, 1, "", "rs_asin"], [193, 3, 1, "", "rs_atan"], [193, 3, 1, "", "rs_atanh"], [193, 3, 1, "", "rs_compose_add"], [193, 3, 1, "", "rs_cos"], [193, 3, 1, "", "rs_cos_sin"], [193, 3, 1, "", "rs_cosh"], [193, 3, 1, "", "rs_cot"], [193, 3, 1, "", "rs_diff"], [193, 3, 1, "", "rs_exp"], [193, 3, 1, "", "rs_fun"], [193, 3, 1, "", "rs_hadamard_exp"], [193, 3, 1, "", "rs_integrate"], [193, 3, 1, "", "rs_is_puiseux"], [193, 3, 1, "", "rs_log"], [193, 3, 1, "", "rs_mul"], [193, 3, 1, "", "rs_newton"], [193, 3, 1, "", "rs_nth_root"], [193, 3, 1, "", "rs_pow"], [193, 3, 1, "", "rs_puiseux"], [193, 3, 1, "", "rs_puiseux2"], [193, 3, 1, "", "rs_series_from_list"], [193, 3, 1, "", "rs_series_inversion"], [193, 3, 1, "", "rs_series_reversion"], [193, 3, 1, "", "rs_sin"], [193, 3, 1, "", "rs_sinh"], [193, 3, 1, "", "rs_square"], [193, 3, 1, "", "rs_subs"], [193, 3, 1, "", "rs_tan"], [193, 3, 1, "", "rs_tanh"], [193, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[187, 1, 1, "", "PolyElement"], [187, 1, 1, "", "PolyRing"], [187, 3, 1, "", "ring"], [187, 3, 1, "", "sring"], [187, 3, 1, "", "vring"], [187, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[187, 2, 1, "", "almosteq"], [187, 2, 1, "", "cancel"], [187, 2, 1, "", "coeff"], [187, 2, 1, "", "coeffs"], [187, 2, 1, "", "const"], [187, 2, 1, "", "content"], [187, 2, 1, "", "copy"], [187, 2, 1, "", "degree"], [187, 2, 1, "", "degrees"], [187, 2, 1, "", "diff"], [187, 2, 1, "", "div"], [187, 2, 1, "", "imul_num"], [187, 2, 1, "", "itercoeffs"], [187, 2, 1, "", "itermonoms"], [187, 2, 1, "", "iterterms"], [187, 2, 1, "", "leading_expv"], [187, 2, 1, "", "leading_monom"], [187, 2, 1, "", "leading_term"], [187, 2, 1, "", "listcoeffs"], [187, 2, 1, "", "listmonoms"], [187, 2, 1, "", "listterms"], [187, 2, 1, "", "monic"], [187, 2, 1, "", "monoms"], [187, 2, 1, "", "primitive"], [187, 2, 1, "", "square"], [187, 2, 1, "", "strip_zero"], [187, 2, 1, "", "tail_degree"], [187, 2, 1, "", "tail_degrees"], [187, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[187, 2, 1, "", "add"], [187, 2, 1, "", "add_gens"], [187, 2, 1, "", "compose"], [187, 2, 1, "", "drop"], [187, 2, 1, "", "drop_to_ground"], [187, 2, 1, "", "index"], [187, 2, 1, "", "monomial_basis"], [187, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[192, 1, 1, "", "ComplexRootOf"], [192, 1, 1, "", "RootOf"], [192, 1, 1, "", "RootSum"], [192, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[192, 2, 1, "", "_all_roots"], [192, 2, 1, "", "_complexes_index"], [192, 2, 1, "", "_complexes_sorted"], [192, 2, 1, "", "_count_roots"], [192, 2, 1, "", "_ensure_complexes_init"], [192, 2, 1, "", "_ensure_reals_init"], [192, 2, 1, "", "_eval_evalf"], [192, 2, 1, "", "_eval_is_imaginary"], [192, 2, 1, "", "_eval_is_real"], [192, 2, 1, "", "_get_complexes"], [192, 2, 1, "", "_get_complexes_sqf"], [192, 2, 1, "", "_get_interval"], [192, 2, 1, "", "_get_reals"], [192, 2, 1, "", "_get_reals_sqf"], [192, 2, 1, "", "_get_roots"], [192, 2, 1, "", "_indexed_root"], [192, 2, 1, "", "_new"], [192, 2, 1, "", "_postprocess_root"], [192, 2, 1, "", "_preprocess_roots"], [192, 2, 1, "", "_real_roots"], [192, 2, 1, "", "_reals_index"], [192, 2, 1, "", "_reals_sorted"], [192, 2, 1, "", "_refine_complexes"], [192, 2, 1, "", "_reset"], [192, 2, 1, "", "_roots_trivial"], [192, 2, 1, "", "_set_interval"], [192, 2, 1, "", "all_roots"], [192, 2, 1, "", "clear_cache"], [192, 2, 1, "", "eval_approx"], [192, 2, 1, "", "eval_rational"], [192, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[192, 2, 1, "", "new"]], "sympy.polys.solvers": [[194, 3, 1, "", "_solve_lin_sys"], [194, 3, 1, "", "_solve_lin_sys_component"], [194, 3, 1, "", "eqs_to_matrix"], [194, 3, 1, "", "solve_lin_sys"], [194, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[192, 3, 1, "", "cyclotomic_poly"], [192, 3, 1, "", "interpolating_poly"], [192, 3, 1, "", "random_poly"], [192, 3, 1, "", "swinnerton_dyer_poly"], [192, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[196, 0, 0, "-", "aesaracode"], [196, 0, 0, "-", "c"], [196, 0, 0, "-", "codeprinter"], [196, 0, 0, "-", "conventions"], [196, 0, 0, "-", "cxx"], [196, 0, 0, "-", "fortran"], [196, 0, 0, "-", "gtk"], [196, 0, 0, "-", "jscode"], [196, 0, 0, "-", "julia"], [196, 0, 0, "-", "lambdarepr"], [196, 0, 0, "-", "latex"], [196, 0, 0, "-", "maple"], [196, 0, 0, "-", "mathematica"], [196, 0, 0, "-", "mathml"], [196, 0, 0, "-", "octave"], [196, 0, 0, "-", "precedence"], [196, 0, 0, "-", "pretty"], [196, 0, 0, "-", "preview"], [196, 0, 0, "-", "printer"], [196, 0, 0, "-", "pycode"], [196, 0, 0, "-", "python"], [196, 0, 0, "-", "rcode"], [196, 0, 0, "-", "repr"], [196, 0, 0, "-", "rust"], [196, 0, 0, "-", "str"], [196, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[196, 1, 1, "", "AesaraPrinter"], [196, 3, 1, "", "aesara_code"], [196, 3, 1, "", "aesara_function"], [196, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[196, 2, 1, "", "doprint"], [196, 5, 1, "", "printmethod"]], "sympy.printing.c": [[196, 1, 1, "", "C89CodePrinter"], [196, 1, 1, "", "C99CodePrinter"], [196, 3, 1, "", "ccode"], [196, 6, 1, "", "known_functions_C89"], [196, 6, 1, "", "known_functions_C99"], [196, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[196, 2, 1, "", "indent_code"], [196, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[196, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[196, 7, 1, "", "AssignmentError"], [196, 1, 1, "", "CodePrinter"], [196, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[196, 2, 1, "", "doprint"], [196, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[196, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[196, 1, 1, "", "CXX11CodePrinter"], [196, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[196, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[196, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[196, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[196, 1, 1, "", "FCodePrinter"], [196, 3, 1, "", "fcode"], [196, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[196, 2, 1, "", "indent_code"], [196, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[196, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[196, 1, 1, "", "JavascriptCodePrinter"], [196, 3, 1, "", "jscode"], [196, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[196, 2, 1, "", "indent_code"], [196, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[196, 1, 1, "", "JuliaCodePrinter"], [196, 3, 1, "", "julia_code"], [196, 6, 1, "", "known_fcns_src1"], [196, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[196, 2, 1, "", "indent_code"], [196, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[196, 1, 1, "", "LambdaPrinter"], [196, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[196, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[196, 1, 1, "", "LatexPrinter"], [196, 6, 1, "", "accepted_latex_functions"], [196, 3, 1, "", "latex"], [196, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[196, 2, 1, "", "parenthesize_super"], [196, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[196, 1, 1, "", "MapleCodePrinter"], [196, 3, 1, "", "maple_code"], [196, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[196, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[196, 1, 1, "", "MCodePrinter"], [196, 6, 1, "", "known_functions"], [196, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[196, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[196, 1, 1, "", "MathMLContentPrinter"], [196, 1, 1, "", "MathMLPresentationPrinter"], [196, 1, 1, "", "MathMLPrinterBase"], [196, 3, 1, "", "mathml"], [196, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[196, 2, 1, "", "mathml_tag"], [196, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[196, 2, 1, "", "mathml_tag"], [196, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[196, 2, 1, "", "doprint"]], "sympy.printing.octave": [[196, 1, 1, "", "OctaveCodePrinter"], [196, 6, 1, "", "known_fcns_src1"], [196, 6, 1, "", "known_fcns_src2"], [196, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[196, 2, 1, "", "indent_code"], [196, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[196, 6, 1, "", "PRECEDENCE"], [196, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [196, 6, 1, "", "PRECEDENCE_VALUES"], [196, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[196, 0, 0, "-", "pretty"], [196, 0, 0, "-", "pretty_symbology"], [196, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[196, 1, 1, "", "PrettyPrinter"], [196, 3, 1, "", "pretty"], [196, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[196, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[196, 3, 1, "", "G"], [196, 3, 1, "", "U"], [196, 3, 1, "", "VF"], [196, 3, 1, "", "annotated"], [196, 6, 1, "", "atoms_table"], [196, 6, 1, "", "digit_2txt"], [196, 6, 1, "", "frac"], [196, 3, 1, "", "g"], [196, 6, 1, "", "greek_letters"], [196, 3, 1, "", "hobj"], [196, 3, 1, "", "pretty_atom"], [196, 3, 1, "", "pretty_symbol"], [196, 3, 1, "", "pretty_try_use_unicode"], [196, 3, 1, "", "pretty_use_unicode"], [196, 6, 1, "", "root"], [196, 6, 1, "", "sub"], [196, 6, 1, "", "sup"], [196, 6, 1, "", "symb_2txt"], [196, 3, 1, "", "vobj"], [196, 3, 1, "", "xobj"], [196, 3, 1, "", "xstr"], [196, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[196, 1, 1, "", "prettyForm"], [196, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[196, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[196, 2, 1, "", "above"], [196, 2, 1, "", "below"], [196, 2, 1, "", "height"], [196, 2, 1, "", "left"], [196, 2, 1, "", "leftslash"], [196, 2, 1, "", "next"], [196, 2, 1, "", "parens"], [196, 2, 1, "", "render"], [196, 2, 1, "", "right"], [196, 2, 1, "", "root"], [196, 2, 1, "", "stack"], [196, 2, 1, "", "terminal_width"], [196, 2, 1, "", "width"]], "sympy.printing.preview": [[196, 3, 1, "", "preview"]], "sympy.printing.printer": [[196, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[196, 2, 1, "", "_print"], [196, 2, 1, "", "doprint"], [196, 5, 1, "", "printmethod"], [196, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[196, 1, 1, "", "MpmathPrinter"], [196, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[196, 1, 1, "", "RCodePrinter"], [196, 6, 1, "", "known_functions"], [196, 3, 1, "", "print_rcode"], [196, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[196, 2, 1, "", "indent_code"], [196, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[196, 1, 1, "", "ReprPrinter"], [196, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[196, 2, 1, "", "emptyPrinter"], [196, 5, 1, "", "printmethod"], [196, 2, 1, "", "reprify"]], "sympy.printing.rust": [[196, 1, 1, "", "RustCodePrinter"], [196, 6, 1, "", "known_functions"], [196, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[196, 2, 1, "", "indent_code"], [196, 5, 1, "", "printmethod"]], "sympy.printing.str": [[196, 1, 1, "", "StrPrinter"], [196, 3, 1, "", "sstr"], [196, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[196, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[196, 3, 1, "", "pprint_nodes"], [196, 3, 1, "", "print_node"], [196, 3, 1, "", "print_tree"], [196, 3, 1, "", "tree"]], "sympy.series.acceleration": [[203, 3, 1, "", "richardson"], [203, 3, 1, "", "shanks"]], "sympy.series.formal": [[198, 1, 1, "", "FiniteFormalPowerSeries"], [198, 1, 1, "", "FormalPowerSeries"], [198, 1, 1, "", "FormalPowerSeriesCompose"], [198, 1, 1, "", "FormalPowerSeriesInverse"], [198, 1, 1, "", "FormalPowerSeriesProduct"], [198, 3, 1, "", "compute_fps"], [198, 3, 1, "", "exp_re"], [198, 3, 1, "", "fps"], [198, 3, 1, "", "hyper_algorithm"], [198, 3, 1, "", "hyper_re"], [198, 3, 1, "", "rational_algorithm"], [198, 3, 1, "", "rational_independent"], [198, 3, 1, "", "rsolve_hypergeometric"], [198, 3, 1, "", "simpleDE"], [198, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[198, 2, 1, "", "coeff_bell"], [198, 2, 1, "", "compose"], [198, 4, 1, "", "infinite"], [198, 2, 1, "", "integrate"], [198, 2, 1, "", "inverse"], [198, 2, 1, "", "polynomial"], [198, 2, 1, "", "product"], [198, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[198, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[198, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[198, 4, 1, "", "function"]], "sympy.series.fourier": [[199, 1, 1, "", "FourierSeries"], [199, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[199, 2, 1, "", "scale"], [199, 2, 1, "", "scalex"], [199, 2, 1, "", "shift"], [199, 2, 1, "", "shiftx"], [199, 2, 1, "", "sigma_approximation"], [199, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[203, 1, 1, "", "SubsSet"], [203, 3, 1, "", "build_expression_tree"], [203, 3, 1, "", "calculate_series"], [203, 3, 1, "", "compare"], [203, 3, 1, "", "gruntz"], [203, 3, 1, "", "limitinf"], [203, 3, 1, "", "mrv"], [203, 3, 1, "", "mrv_leadterm"], [203, 3, 1, "", "mrv_max1"], [203, 3, 1, "", "mrv_max3"], [203, 3, 1, "", "rewrite"], [203, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[203, 2, 1, "", "copy"], [203, 2, 1, "", "do_subs"], [203, 2, 1, "", "meets"], [203, 2, 1, "", "union"]], "sympy.series.limits": [[203, 1, 1, "", "Limit"], [203, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[203, 2, 1, "", "doit"]], "sympy.series.limitseq": [[201, 3, 1, "", "difference_delta"], [201, 3, 1, "", "dominant"], [201, 3, 1, "", "limit_seq"]], "sympy.series.order": [[203, 1, 1, "", "Order"]], "sympy.series.order.Order": [[203, 2, 1, "", "contains"]], "sympy.series.residues": [[203, 3, 1, "", "residue"]], "sympy.series.sequences": [[202, 1, 1, "", "EmptySequence"], [202, 1, 1, "", "RecursiveSeq"], [202, 1, 1, "", "SeqAdd"], [202, 1, 1, "", "SeqBase"], [202, 1, 1, "", "SeqFormula"], [202, 1, 1, "", "SeqMul"], [202, 1, 1, "", "SeqPer"], [202, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[202, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[202, 4, 1, "", "initial"], [202, 4, 1, "", "interval"], [202, 4, 1, "", "n"], [202, 4, 1, "", "recurrence"], [202, 4, 1, "", "start"], [202, 4, 1, "", "stop"], [202, 4, 1, "", "y"], [202, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[202, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[202, 2, 1, "", "coeff"], [202, 2, 1, "", "coeff_mul"], [202, 2, 1, "", "find_linear_recurrence"], [202, 4, 1, "", "free_symbols"], [202, 4, 1, "", "gen"], [202, 4, 1, "", "interval"], [202, 4, 1, "", "length"], [202, 4, 1, "", "start"], [202, 4, 1, "", "stop"], [202, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[202, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[202, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[202, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[203, 3, 1, "", "series"]], "sympy.sets": [[204, 0, 0, "-", "conditionset"], [204, 0, 0, "-", "fancysets"], [204, 0, 0, "-", "powerset"], [204, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[204, 1, 1, "", "ConditionSet"], [204, 1, 1, "", "Contains"], [204, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[204, 1, 1, "", "CartesianComplexRegion"], [204, 1, 1, "", "ComplexRegion"], [204, 1, 1, "", "Complexes"], [204, 1, 1, "", "ImageSet"], [204, 1, 1, "", "Integers"], [204, 1, 1, "", "Naturals"], [204, 1, 1, "", "Naturals0"], [204, 1, 1, "", "PolarComplexRegion"], [204, 1, 1, "", "Range"], [204, 1, 1, "", "Rationals"], [204, 1, 1, "", "Reals"], [204, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[204, 4, 1, "", "a_interval"], [204, 4, 1, "", "b_interval"], [204, 2, 1, "", "from_real"], [204, 4, 1, "", "psets"], [204, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[204, 2, 1, "", "as_relational"], [204, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[204, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[204, 1, 1, "", "Complement"], [204, 1, 1, "", "DisjointUnion"], [204, 1, 1, "", "EmptySet"], [204, 1, 1, "", "FiniteSet"], [204, 1, 1, "", "Intersection"], [204, 1, 1, "", "Interval"], [204, 1, 1, "", "ProductSet"], [204, 1, 1, "", "Set"], [204, 1, 1, "", "SymmetricDifference"], [204, 1, 1, "", "Union"], [204, 1, 1, "", "UniversalSet"], [204, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[204, 2, 1, "", "as_relational"], [204, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[204, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[204, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[204, 2, 1, "", "Lopen"], [204, 2, 1, "", "Ropen"], [204, 2, 1, "", "as_relational"], [204, 4, 1, "", "end"], [204, 4, 1, "", "is_left_unbounded"], [204, 4, 1, "", "is_right_unbounded"], [204, 4, 1, "", "left_open"], [204, 2, 1, "", "open"], [204, 4, 1, "", "right_open"], [204, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[204, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[204, 4, 1, "", "boundary"], [204, 4, 1, "", "closure"], [204, 2, 1, "", "complement"], [204, 2, 1, "", "contains"], [204, 4, 1, "", "inf"], [204, 4, 1, "", "interior"], [204, 2, 1, "", "intersect"], [204, 2, 1, "", "intersection"], [204, 4, 1, "", "is_closed"], [204, 2, 1, "", "is_disjoint"], [204, 4, 1, "", "is_open"], [204, 2, 1, "", "is_proper_subset"], [204, 2, 1, "", "is_proper_superset"], [204, 2, 1, "", "is_subset"], [204, 2, 1, "", "is_superset"], [204, 2, 1, "", "isdisjoint"], [204, 2, 1, "", "issubset"], [204, 2, 1, "", "issuperset"], [204, 4, 1, "", "kind"], [204, 4, 1, "", "measure"], [204, 2, 1, "", "powerset"], [204, 4, 1, "", "sup"], [204, 2, 1, "", "symmetric_difference"], [204, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[204, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[204, 2, 1, "", "as_relational"]], "sympy.simplify": [[208, 0, 0, "-", "combsimp"], [208, 0, 0, "-", "cse_main"], [208, 0, 0, "-", "epathtools"], [208, 0, 0, "-", "hyperexpand"], [206, 0, 0, "-", "hyperexpand_doc"], [208, 0, 0, "-", "powsimp"], [208, 0, 0, "-", "radsimp"], [208, 0, 0, "-", "ratsimp"], [2, 0, 0, "-", "simplify"], [208, 0, 0, "-", "sqrtdenest"], [208, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[208, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[208, 3, 1, "", "cse"], [208, 3, 1, "", "opt_cse"], [208, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[208, 1, 1, "", "EPath"], [208, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[208, 2, 1, "", "apply"], [208, 2, 1, "", "select"]], "sympy.simplify.fu": [[205, 3, 1, "", "TR0"], [205, 3, 1, "", "TR1"], [205, 3, 1, "", "TR10"], [205, 3, 1, "", "TR10i"], [205, 3, 1, "", "TR11"], [205, 3, 1, "", "TR111"], [205, 3, 1, "", "TR12"], [205, 3, 1, "", "TR12i"], [205, 3, 1, "", "TR13"], [205, 3, 1, "", "TR14"], [205, 3, 1, "", "TR15"], [205, 3, 1, "", "TR16"], [205, 3, 1, "", "TR2"], [205, 3, 1, "", "TR22"], [205, 3, 1, "", "TR2i"], [205, 3, 1, "", "TR3"], [205, 3, 1, "", "TR4"], [205, 3, 1, "", "TR5"], [205, 3, 1, "", "TR6"], [205, 3, 1, "", "TR7"], [205, 3, 1, "", "TR8"], [205, 3, 1, "", "TR9"], [205, 3, 1, "", "TRmorrie"], [205, 3, 1, "", "TRpower"], [205, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[208, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[208, 3, 1, "", "powdenest"], [208, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[208, 3, 1, "", "collect"], [208, 3, 1, "", "collect_const"], [208, 3, 1, "", "collect_sqrt"], [208, 3, 1, "", "fraction"], [208, 3, 1, "", "rad_rationalize"], [208, 3, 1, "", "radsimp"], [208, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[208, 3, 1, "", "ratsimp"], [208, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[208, 3, 1, "", "besselsimp"], [208, 3, 1, "", "hypersimilar"], [208, 3, 1, "", "hypersimp"], [208, 3, 1, "", "kroneckersimp"], [208, 3, 1, "", "logcombine"], [208, 3, 1, "", "nsimplify"], [208, 3, 1, "", "nthroot"], [208, 3, 1, "", "posify"], [208, 3, 1, "", "separatevars"], [208, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[208, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[208, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[214, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[209, 1, 1, "", "BinaryQuadratic"], [209, 1, 1, "", "CubicThue"], [209, 1, 1, "", "DiophantineEquationType"], [209, 1, 1, "", "DiophantineSolutionSet"], [209, 1, 1, "", "GeneralPythagorean"], [209, 1, 1, "", "GeneralSumOfEvenPowers"], [209, 1, 1, "", "GeneralSumOfSquares"], [209, 1, 1, "", "HomogeneousGeneralQuadratic"], [209, 1, 1, "", "HomogeneousTernaryQuadratic"], [209, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [209, 1, 1, "", "InhomogeneousGeneralQuadratic"], [209, 1, 1, "", "InhomogeneousTernaryQuadratic"], [209, 1, 1, "", "Linear"], [209, 3, 1, "", "PQa"], [209, 1, 1, "", "Univariate"], [209, 3, 1, "", "base_solution_linear"], [209, 3, 1, "", "classify_diop"], [209, 3, 1, "", "cornacchia"], [209, 3, 1, "", "descent"], [209, 3, 1, "", "diop_DN"], [209, 3, 1, "", "diop_bf_DN"], [209, 3, 1, "", "diop_general_pythagorean"], [209, 3, 1, "", "diop_general_sum_of_even_powers"], [209, 3, 1, "", "diop_general_sum_of_squares"], [209, 3, 1, "", "diop_linear"], [209, 3, 1, "", "diop_quadratic"], [209, 3, 1, "", "diop_solve"], [209, 3, 1, "", "diop_ternary_quadratic"], [209, 3, 1, "", "diop_ternary_quadratic_normal"], [209, 3, 1, "", "diophantine"], [209, 3, 1, "", "divisible"], [209, 3, 1, "", "equivalent"], [209, 3, 1, "", "find_DN"], [209, 3, 1, "", "gaussian_reduce"], [209, 3, 1, "", "holzer"], [209, 3, 1, "", "ldescent"], [209, 3, 1, "", "merge_solution"], [209, 3, 1, "", "parametrize_ternary_quadratic"], [209, 3, 1, "", "partition"], [209, 3, 1, "", "power_representation"], [209, 3, 1, "", "prime_as_sum_of_two_squares"], [209, 3, 1, "", "reconstruct"], [209, 3, 1, "", "sqf_normal"], [209, 3, 1, "", "square_factor"], [209, 3, 1, "", "sum_of_four_squares"], [209, 3, 1, "", "sum_of_powers"], [209, 3, 1, "", "sum_of_squares"], [209, 3, 1, "", "sum_of_three_squares"], [209, 3, 1, "", "transformation_to_DN"], [209, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[209, 2, 1, "", "matches"]], "sympy.solvers": [[211, 0, 0, "-", "inequalities"], [212, 0, 0, "-", "ode"], [213, 0, 0, "-", "pde"], [214, 0, 0, "-", "recurr"], [215, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[211, 3, 1, "", "reduce_abs_inequalities"], [211, 3, 1, "", "reduce_abs_inequality"], [211, 3, 1, "", "reduce_inequalities"], [211, 3, 1, "", "reduce_rational_inequalities"], [211, 3, 1, "", "solve_poly_inequalities"], [211, 3, 1, "", "solve_poly_inequality"], [211, 3, 1, "", "solve_rational_inequalities"], [211, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[212, 6, 1, "", "allhints"], [212, 3, 1, "", "checkinfsol"], [212, 3, 1, "", "checkodesol"], [212, 3, 1, "", "classify_ode"], [212, 3, 1, "", "constantsimp"], [212, 3, 1, "", "dsolve"], [212, 3, 1, "", "homogeneous_order"], [212, 3, 1, "", "infinitesimals"], [212, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[212, 3, 1, "", "lie_heuristic_abaco1_product"], [212, 3, 1, "", "lie_heuristic_abaco1_simple"], [212, 3, 1, "", "lie_heuristic_abaco2_similar"], [212, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [212, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [212, 3, 1, "", "lie_heuristic_bivariate"], [212, 3, 1, "", "lie_heuristic_chi"], [212, 3, 1, "", "lie_heuristic_function_sum"], [212, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[212, 3, 1, "", "_handle_Integral"], [212, 3, 1, "", "_linear_2eq_order1_type6"], [212, 3, 1, "", "_linear_2eq_order1_type7"], [212, 3, 1, "", "_nonlinear_2eq_order1_type1"], [212, 3, 1, "", "_nonlinear_2eq_order1_type2"], [212, 3, 1, "", "_nonlinear_2eq_order1_type3"], [212, 3, 1, "", "_nonlinear_2eq_order1_type4"], [212, 3, 1, "", "_nonlinear_2eq_order1_type5"], [212, 3, 1, "", "_nonlinear_3eq_order1_type1"], [212, 3, 1, "", "_nonlinear_3eq_order1_type2"], [212, 3, 1, "", "_nonlinear_3eq_order1_type3"], [212, 3, 1, "", "_nonlinear_3eq_order1_type4"], [212, 3, 1, "", "_nonlinear_3eq_order1_type5"], [212, 3, 1, "", "constant_renumber"], [212, 3, 1, "", "ode_1st_power_series"], [212, 3, 1, "", "ode_2nd_power_series_ordinary"], [212, 3, 1, "", "ode_2nd_power_series_regular"], [212, 3, 1, "", "ode_sol_simplicity"], [212, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[212, 3, 1, "", "compute_m_ybar"], [212, 3, 1, "", "construct_c"], [212, 3, 1, "", "construct_d"], [212, 3, 1, "", "get_gen_sol_from_part_sol"], [212, 3, 1, "", "rational_laurent_series"], [212, 3, 1, "", "remove_redundant_sols"], [212, 3, 1, "", "riccati_inverse_normal"], [212, 3, 1, "", "riccati_normal"], [212, 3, 1, "", "riccati_reduced"], [212, 3, 1, "", "solve_aux_eq"], [212, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[212, 1, 1, "", "AlmostLinear"], [212, 1, 1, "", "Bernoulli"], [212, 1, 1, "", "Factorable"], [212, 1, 1, "", "FirstExact"], [212, 1, 1, "", "FirstLinear"], [212, 1, 1, "", "HomogeneousCoeffBest"], [212, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [212, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [212, 1, 1, "", "LieGroup"], [212, 1, 1, "", "LinearCoefficients"], [212, 1, 1, "", "Liouville"], [212, 1, 1, "", "NthAlgebraic"], [212, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [212, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [212, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [212, 1, 1, "", "NthLinearEulerEqHomogeneous"], [212, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [212, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [212, 1, 1, "", "NthOrderReducible"], [212, 1, 1, "", "RationalRiccati"], [212, 1, 1, "", "RiccatiSpecial"], [212, 1, 1, "", "SecondHypergeometric"], [212, 1, 1, "", "SecondLinearAiry"], [212, 1, 1, "", "SecondLinearBessel"], [212, 1, 1, "", "Separable"], [212, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[212, 3, 1, "", "canonical_odes"], [212, 3, 1, "", "dsolve_system"], [212, 3, 1, "", "linear_ode_to_matrix"], [212, 3, 1, "", "linodesolve"], [212, 3, 1, "", "linodesolve_type"], [212, 3, 1, "", "matrix_exp"], [212, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[213, 3, 1, "", "checkpdesol"], [213, 3, 1, "", "classify_pde"], [213, 3, 1, "", "pde_1st_linear_constant_coeff"], [213, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [213, 3, 1, "", "pde_1st_linear_variable_coeff"], [213, 3, 1, "", "pde_separate"], [213, 3, 1, "", "pde_separate_add"], [213, 3, 1, "", "pde_separate_mul"], [213, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[214, 3, 1, "", "solve_poly_system"], [214, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[214, 3, 1, "", "rsolve"], [214, 3, 1, "", "rsolve_hyper"], [214, 3, 1, "", "rsolve_poly"], [214, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[214, 3, 1, "", "checksol"], [214, 3, 1, "", "nsolve"], [214, 3, 1, "", "solve"], [214, 3, 1, "", "solve_linear"], [214, 3, 1, "", "solve_linear_system"], [214, 3, 1, "", "solve_linear_system_LU"], [214, 3, 1, "", "solve_undetermined_coeffs"], [214, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[215, 3, 1, "", "_is_exponential"], [215, 3, 1, "", "_is_logarithmic"], [215, 3, 1, "", "_solve_exponential"], [215, 3, 1, "", "_solve_logarithm"], [215, 3, 1, "", "_transolve"], [215, 3, 1, "", "domain_check"], [215, 3, 1, "", "invert_complex"], [215, 3, 1, "", "invert_real"], [215, 3, 1, "", "linear_eq_to_matrix"], [215, 3, 1, "", "linsolve"], [215, 3, 1, "", "nonlinsolve"], [215, 3, 1, "", "solveset"], [215, 3, 1, "", "solveset_complex"], [215, 3, 1, "", "solveset_real"], [215, 3, 1, "", "solvify"]], "sympy.stats": [[216, 3, 1, "", "Arcsin"], [216, 3, 1, "", "Benini"], [216, 3, 1, "", "Bernoulli"], [216, 1, 1, "", "BernoulliProcess"], [216, 3, 1, "", "Beta"], [216, 3, 1, "", "BetaBinomial"], [216, 3, 1, "", "BetaNoncentral"], [216, 3, 1, "", "BetaPrime"], [216, 3, 1, "", "Binomial"], [216, 3, 1, "", "BoundedPareto"], [216, 3, 1, "", "Cauchy"], [216, 1, 1, "", "CentralMoment"], [216, 3, 1, "", "Chi"], [216, 3, 1, "", "ChiNoncentral"], [216, 3, 1, "", "ChiSquared"], [216, 3, 1, "", "Coin"], [216, 1, 1, "", "ContinuousMarkovChain"], [216, 3, 1, "", "ContinuousRV"], [216, 1, 1, "", "Covariance"], [216, 1, 1, "", "CrossCovarianceMatrix"], [216, 3, 1, "", "Dagum"], [216, 3, 1, "", "Die"], [216, 1, 1, "", "DiscreteMarkovChain"], [216, 3, 1, "", "DiscreteUniform"], [216, 3, 1, "", "E"], [216, 3, 1, "", "Erlang"], [216, 3, 1, "", "ExGaussian"], [216, 1, 1, "", "Expectation"], [216, 1, 1, "", "ExpectationMatrix"], [216, 3, 1, "", "Exponential"], [216, 3, 1, "", "FDistribution"], [216, 3, 1, "", "FiniteRV"], [216, 3, 1, "", "FisherZ"], [216, 3, 1, "", "Frechet"], [216, 3, 1, "", "Gamma"], [216, 3, 1, "", "GammaInverse"], [216, 1, 1, "", "GammaProcess"], [216, 3, 1, "", "GeneralizedMultivariateLogGamma"], [216, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [216, 3, 1, "", "Geometric"], [216, 3, 1, "", "Gompertz"], [216, 3, 1, "", "Gumbel"], [216, 3, 1, "", "Hermite"], [216, 3, 1, "", "Hypergeometric"], [216, 3, 1, "", "JointRV"], [216, 3, 1, "", "Kumaraswamy"], [216, 3, 1, "", "Laplace"], [216, 3, 1, "", "Levy"], [216, 3, 1, "", "LogLogistic"], [216, 3, 1, "", "LogNormal"], [216, 3, 1, "", "Logarithmic"], [216, 3, 1, "", "Logistic"], [216, 3, 1, "", "Lomax"], [216, 3, 1, "", "MatrixGamma"], [216, 3, 1, "", "MatrixNormal"], [216, 3, 1, "", "Maxwell"], [216, 1, 1, "", "Moment"], [216, 3, 1, "", "Moyal"], [216, 3, 1, "", "Multinomial"], [216, 3, 1, "", "MultivariateBeta"], [216, 3, 1, "", "MultivariateEwens"], [216, 3, 1, "", "MultivariateLaplace"], [216, 3, 1, "", "MultivariateNormal"], [216, 3, 1, "", "MultivariateT"], [216, 3, 1, "", "Nakagami"], [216, 3, 1, "", "NegativeBinomial"], [216, 3, 1, "", "NegativeMultinomial"], [216, 3, 1, "", "Normal"], [216, 3, 1, "", "NormalGamma"], [216, 3, 1, "", "P"], [216, 3, 1, "", "Pareto"], [216, 3, 1, "", "Poisson"], [216, 1, 1, "", "PoissonProcess"], [216, 3, 1, "", "PowerFunction"], [216, 1, 1, "", "Probability"], [216, 3, 1, "", "QuadraticU"], [216, 3, 1, "", "Rademacher"], [216, 3, 1, "", "RaisedCosine"], [216, 3, 1, "", "Rayleigh"], [216, 3, 1, "", "Reciprocal"], [216, 3, 1, "", "ShiftedGompertz"], [216, 3, 1, "", "Skellam"], [216, 3, 1, "", "StudentT"], [216, 3, 1, "", "Trapezoidal"], [216, 3, 1, "", "Triangular"], [216, 3, 1, "", "Uniform"], [216, 3, 1, "", "UniformSum"], [216, 1, 1, "", "Variance"], [216, 1, 1, "", "VarianceMatrix"], [216, 3, 1, "", "VonMises"], [216, 3, 1, "", "Wald"], [216, 3, 1, "", "Weibull"], [216, 1, 1, "", "WienerProcess"], [216, 3, 1, "", "WignerSemicircle"], [216, 3, 1, "", "Wishart"], [216, 3, 1, "", "YuleSimon"], [216, 3, 1, "", "Zeta"], [216, 3, 1, "", "cmoment"], [216, 3, 1, "", "correlation"], [216, 3, 1, "", "coskewness"], [216, 3, 1, "", "covariance"], [216, 0, 0, "-", "crv"], [216, 0, 0, "-", "crv_types"], [216, 3, 1, "", "density"], [216, 3, 1, "", "entropy"], [216, 3, 1, "", "factorial_moment"], [216, 0, 0, "-", "frv"], [216, 0, 0, "-", "frv_types"], [216, 3, 1, "", "given"], [216, 3, 1, "", "kurtosis"], [216, 3, 1, "", "marginal_distribution"], [216, 3, 1, "", "median"], [216, 3, 1, "", "moment"], [216, 3, 1, "", "quantile"], [216, 0, 0, "-", "rv"], [216, 3, 1, "", "sample"], [216, 3, 1, "", "sample_iter"], [216, 3, 1, "", "skewness"], [216, 3, 1, "", "std"], [216, 3, 1, "", "variance"], [216, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[216, 2, 1, "", "expectation"], [216, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[216, 2, 1, "", "absorbing_probabilities"], [216, 2, 1, "", "canonical_form"], [216, 2, 1, "", "communication_classes"], [216, 2, 1, "", "decompose"], [216, 2, 1, "", "fixed_row_vector"], [216, 2, 1, "", "fundamental_matrix"], [216, 4, 1, "", "limiting_distribution"], [216, 2, 1, "", "sample"], [216, 2, 1, "", "stationary_distribution"], [216, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[216, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[216, 1, 1, "", "ContinuousDomain"], [216, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[216, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[216, 3, 1, "", "Die"], [216, 3, 1, "", "Normal"]], "sympy.stats.frv": [[216, 1, 1, "", "FiniteDomain"], [216, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[216, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[216, 1, 1, "", "ConditionalDomain"], [216, 1, 1, "", "PSpace"], [216, 1, 1, "", "ProductDomain"], [216, 1, 1, "", "ProductPSpace"], [216, 1, 1, "", "RandomDomain"], [216, 1, 1, "", "RandomSymbol"], [216, 1, 1, "", "SingleDomain"], [216, 1, 1, "", "SinglePSpace"], [216, 3, 1, "", "pspace"], [216, 3, 1, "", "random_symbols"], [216, 3, 1, "", "rs_swap"], [216, 3, 1, "", "sampling_E"], [216, 3, 1, "", "sampling_P"], [216, 3, 1, "", "sampling_density"]], "sympy.tensor": [[217, 0, 0, "-", "array"], [220, 0, 0, "-", "index_methods"], [221, 0, 0, "-", "indexed"], [222, 0, 0, "-", "tensor"], [223, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[217, 1, 1, "", "ImmutableDenseNDimArray"], [217, 1, 1, "", "ImmutableSparseNDimArray"], [217, 1, 1, "", "MutableDenseNDimArray"], [217, 1, 1, "", "MutableSparseNDimArray"], [217, 3, 1, "", "derive_by_array"], [218, 0, 0, "-", "expressions"], [217, 3, 1, "", "permutedims"], [217, 3, 1, "", "tensorcontraction"], [217, 3, 1, "", "tensordiagonal"], [217, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[220, 3, 1, "", "get_contraction_structure"], [220, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[221, 1, 1, "", "Idx"], [221, 1, 1, "", "Indexed"], [221, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[221, 4, 1, "", "label"], [221, 4, 1, "", "lower"], [221, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[221, 4, 1, "", "base"], [221, 4, 1, "", "indices"], [221, 4, 1, "", "ranges"], [221, 4, 1, "", "rank"], [221, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[221, 4, 1, "", "label"], [221, 4, 1, "", "offset"], [221, 4, 1, "", "shape"], [221, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[222, 1, 1, "", "TensAdd"], [222, 1, 1, "", "TensExpr"], [222, 1, 1, "", "TensMul"], [222, 1, 1, "", "TensorHead"], [222, 1, 1, "", "TensorIndex"], [222, 1, 1, "", "TensorIndexType"], [222, 1, 1, "", "TensorSymmetry"], [222, 1, 1, "", "TensorType"], [222, 1, 1, "", "_TensorManager"], [222, 3, 1, "", "canon_bp"], [222, 3, 1, "", "riemann_cyclic"], [222, 3, 1, "", "riemann_cyclic_replace"], [222, 3, 1, "", "tensor_heads"], [222, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[222, 2, 1, "", "canon_bp"], [222, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[222, 2, 1, "", "get_matrix"], [222, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[222, 2, 1, "", "canon_bp"], [222, 2, 1, "", "contract_metric"], [222, 2, 1, "", "get_free_indices"], [222, 2, 1, "", "get_indices"], [222, 2, 1, "", "perm2tensor"], [222, 2, 1, "", "sorted_components"], [222, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[222, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[222, 2, 1, "", "direct_product"], [222, 2, 1, "", "fully_symmetric"], [222, 2, 1, "", "no_symmetry"], [222, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[222, 2, 1, "", "clear"], [222, 2, 1, "", "comm_i2symbol"], [222, 2, 1, "", "comm_symbols2i"], [222, 2, 1, "", "get_comm"], [222, 2, 1, "", "set_comm"], [222, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[223, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[225, 0, 0, "-", "pytest"], [226, 0, 0, "-", "randtest"], [227, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[225, 3, 1, "", "SKIP"], [225, 3, 1, "", "nocache_fail"], [225, 3, 1, "", "raises"], [225, 3, 1, "", "warns"], [225, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[227, 1, 1, "", "PyTestReporter"], [227, 1, 1, "", "Reporter"], [227, 1, 1, "", "SymPyDocTestFinder"], [227, 1, 1, "", "SymPyDocTestRunner"], [227, 1, 1, "", "SymPyOutputChecker"], [227, 1, 1, "", "SymPyTestResults"], [227, 3, 1, "", "convert_to_native_paths"], [227, 3, 1, "", "doctest"], [227, 3, 1, "", "get_sympy_dir"], [227, 3, 1, "", "raise_on_deprecated"], [227, 3, 1, "", "run_all_tests"], [227, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [227, 3, 1, "", "split_list"], [227, 3, 1, "", "sympytestfile"], [227, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[227, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[227, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[227, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[227, 5, 1, "", "attempted"], [227, 5, 1, "", "failed"]], "sympy.utilities": [[228, 0, 0, "-", "autowrap"], [229, 0, 0, "-", "codegen"], [230, 0, 0, "-", "decorator"], [231, 0, 0, "-", "enumerative"], [232, 0, 0, "-", "exceptions"], [234, 0, 0, "-", "iterables"], [235, 0, 0, "-", "lambdify"], [236, 0, 0, "-", "memoization"], [237, 0, 0, "-", "misc"], [238, 0, 0, "-", "pkgdata"], [239, 0, 0, "-", "source"], [240, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[228, 1, 1, "", "CodeWrapper"], [228, 1, 1, "", "CythonCodeWrapper"], [228, 1, 1, "", "DummyWrapper"], [228, 1, 1, "", "F2PyCodeWrapper"], [228, 1, 1, "", "UfuncifyCodeWrapper"], [228, 3, 1, "", "autowrap"], [228, 3, 1, "", "binary_function"], [228, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[228, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[228, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[229, 1, 1, "", "Argument"], [229, 1, 1, "", "CCodeGen"], [229, 1, 1, "", "CodeGen"], [229, 1, 1, "", "DataType"], [229, 1, 1, "", "FCodeGen"], [229, 1, 1, "", "JuliaCodeGen"], [229, 1, 1, "", "OctaveCodeGen"], [229, 1, 1, "", "OutputArgument"], [229, 1, 1, "", "Result"], [229, 1, 1, "", "Routine"], [229, 1, 1, "", "RustCodeGen"], [229, 3, 1, "", "codegen"], [229, 3, 1, "", "get_default_datatype"], [229, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[229, 2, 1, "", "dump_c"], [229, 2, 1, "", "dump_h"], [229, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[229, 2, 1, "", "dump_code"], [229, 2, 1, "", "routine"], [229, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[229, 2, 1, "", "dump_f95"], [229, 2, 1, "", "dump_h"], [229, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[229, 2, 1, "", "dump_jl"], [229, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[229, 2, 1, "", "dump_m"], [229, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[229, 4, 1, "", "result_variables"], [229, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[229, 2, 1, "", "dump_rs"], [229, 2, 1, "", "get_prototype"], [229, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[230, 3, 1, "", "conserve_mpmath_dps"], [230, 3, 1, "", "deprecated"], [230, 3, 1, "", "doctest_depends_on"], [230, 3, 1, "", "memoize_property"], [230, 1, 1, "", "no_attrs_in_subclass"], [230, 3, 1, "", "public"], [230, 3, 1, "", "threaded"], [230, 3, 1, "", "threaded_factory"], [230, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[231, 1, 1, "", "MultisetPartitionTraverser"], [231, 3, 1, "", "factoring_visitor"], [231, 3, 1, "", "list_visitor"], [231, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[231, 2, 1, "", "count_partitions"], [231, 2, 1, "", "enum_all"], [231, 2, 1, "", "enum_large"], [231, 2, 1, "", "enum_range"], [231, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[232, 7, 1, "", "SymPyDeprecationWarning"], [232, 3, 1, "", "ignore_warnings"], [232, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[234, 1, 1, "", "NotIterable"], [234, 3, 1, "", "binary_partitions"], [234, 3, 1, "", "bracelets"], [234, 3, 1, "", "capture"], [234, 3, 1, "", "common_prefix"], [234, 3, 1, "", "common_suffix"], [234, 3, 1, "", "connected_components"], [234, 3, 1, "", "dict_merge"], [234, 3, 1, "", "filter_symbols"], [234, 3, 1, "", "flatten"], [234, 3, 1, "", "generate_bell"], [234, 3, 1, "", "generate_derangements"], [234, 3, 1, "", "generate_involutions"], [234, 3, 1, "", "generate_oriented_forest"], [234, 3, 1, "", "group"], [234, 3, 1, "", "has_dups"], [234, 3, 1, "", "has_variety"], [234, 3, 1, "", "ibin"], [234, 3, 1, "", "iproduct"], [234, 3, 1, "", "is_palindromic"], [234, 3, 1, "", "is_sequence"], [234, 3, 1, "", "iterable"], [234, 3, 1, "", "kbins"], [234, 3, 1, "", "least_rotation"], [234, 3, 1, "", "minlex"], [234, 3, 1, "", "multiset"], [234, 3, 1, "", "multiset_combinations"], [234, 3, 1, "", "multiset_derangements"], [234, 3, 1, "", "multiset_partitions"], [234, 3, 1, "", "multiset_permutations"], [234, 3, 1, "", "necklaces"], [234, 3, 1, "", "numbered_symbols"], [234, 3, 1, "", "ordered_partitions"], [234, 3, 1, "", "partitions"], [234, 3, 1, "", "permute_signs"], [234, 3, 1, "", "postfixes"], [234, 3, 1, "", "prefixes"], [234, 3, 1, "", "random_derangement"], [234, 3, 1, "", "reshape"], [234, 3, 1, "", "rotate_left"], [234, 3, 1, "", "rotate_right"], [234, 3, 1, "", "rotations"], [234, 3, 1, "", "roundrobin"], [234, 3, 1, "", "runs"], [234, 3, 1, "", "sift"], [234, 3, 1, "", "signed_permutations"], [234, 3, 1, "", "strongly_connected_components"], [234, 3, 1, "", "subsets"], [234, 3, 1, "", "take"], [234, 3, 1, "", "topological_sort"], [234, 3, 1, "", "unflatten"], [234, 3, 1, "", "uniq"], [234, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[235, 3, 1, "", "implemented_function"], [235, 3, 1, "", "lambdastr"], [235, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[236, 3, 1, "", "assoc_recurrence_memo"], [236, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[237, 3, 1, "", "as_int"], [237, 3, 1, "", "debug"], [237, 3, 1, "", "debug_decorator"], [237, 3, 1, "", "filldedent"], [237, 3, 1, "", "find_executable"], [237, 3, 1, "", "func_name"], [237, 3, 1, "", "ordinal"], [237, 3, 1, "", "rawlines"], [237, 3, 1, "", "replace"], [237, 3, 1, "", "strlines"], [237, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[238, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[239, 3, 1, "", "get_class"], [239, 3, 1, "", "get_mod_func"], [239, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[240, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[241, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[241, 2, 1, "", "__init__"], [241, 2, 1, "", "create_new"], [241, 2, 1, "", "locate_new"], [241, 2, 1, "", "orient_new"], [241, 2, 1, "", "orient_new_axis"], [241, 2, 1, "", "orient_new_body"], [241, 2, 1, "", "orient_new_quaternion"], [241, 2, 1, "", "orient_new_space"], [241, 2, 1, "", "position_wrt"], [241, 2, 1, "", "rotation_matrix"], [241, 2, 1, "", "scalar_map"]], "sympy.vector": [[243, 3, 1, "", "curl"], [243, 3, 1, "", "divergence"], [243, 3, 1, "", "express"], [243, 3, 1, "", "gradient"], [243, 3, 1, "", "is_conservative"], [243, 3, 1, "", "is_solenoidal"], [243, 3, 1, "", "matrix_to_vector"], [243, 3, 1, "", "scalar_potential"], [243, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[241, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[241, 2, 1, "", "cross"], [241, 2, 1, "", "dot"], [241, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[241, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[241, 4, 1, "", "components"], [241, 2, 1, "", "cross"], [241, 2, 1, "", "dot"], [241, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[241, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[241, 2, 1, "", "multiplicity"], [241, 2, 1, "", "rational_parametrization"], [241, 2, 1, "", "regular_point"], [241, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[241, 1, 1, "", "ParametricIntegral"], [243, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[242, 1, 1, "", "AxisOrienter"], [242, 1, 1, "", "BodyOrienter"], [242, 1, 1, "", "Orienter"], [242, 1, 1, "", "QuaternionOrienter"], [242, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[242, 2, 1, "", "__init__"], [242, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[242, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[242, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[242, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[242, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[241, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[241, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[241, 4, 1, "", "components"], [241, 2, 1, "", "cross"], [241, 2, 1, "", "dot"], [241, 2, 1, "", "magnitude"], [241, 2, 1, "", "normalize"], [241, 2, 1, "", "outer"], [241, 2, 1, "", "projection"], [241, 2, 1, "", "separate"], [241, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 2, 4, 5, 6, 9, 13, 14, 16, 20, 23, 33, 57, 74, 93, 129, 177, 186, 241, 243, 244, 247, 260, 262, 265], "list": [1, 2], "activ": 1, "deprec": [1, 12], "silenc": 1, "warn": [1, 232], "version": 1, "1": [1, 14, 76, 95, 114, 126, 138, 212], "11": [1, 95], "new": [1, 245], "mathematica": [1, 196], "code": [1, 11, 12, 13, 15, 33, 35, 105, 180, 196, 239, 251, 253], "parser": [1, 114], "redund": 1, "static": 1, "method": [1, 5, 18, 20, 109, 117, 120, 121, 122, 124, 125, 126, 196, 213, 215, 220, 245, 267], "carmichael": 1, "The": [1, 7, 12, 18, 34, 41, 76, 126, 167, 178, 191, 203, 206, 246, 247, 265], "check": [1, 173], "argument": [1, 2, 215], "hadamardproduct": 1, "matadd": 1, "matmul": 1, "10": [1, 9, 95], "some": [1, 129, 215], "travers": [1, 51], "function": [1, 2, 14, 18, 33, 41, 50, 51, 57, 58, 59, 69, 70, 73, 74, 76, 81, 87, 91, 93, 95, 105, 127, 149, 152, 173, 174, 177, 182, 184, 186, 187, 192, 195, 196, 206, 208, 209, 212, 213, 217, 243, 247, 270, 271], "have": [1, 195], "been": 1, "move": [1, 206], "core": [1, 51, 84], "trace": 1, "compat": [1, 218], "submodul": [1, 63], "9": [1, 95], "expr_free_symbol": 1, "stat": [1, 216], "sampl": [1, 14], "numsampl": 1, "n": [1, 51, 212, 217, 218], "poli": [1, 185, 186, 187, 194], "solver": [1, 194, 210, 211, 212, 214, 215, 272], "rawmatrix": 1, "non": 1, "expr": [1, 51], "object": [1, 4, 221], "matrix": [1, 29, 83, 84, 87, 88, 126, 212, 216, 267], "get_seg": 1, "attribut": [1, 34, 41], "plot": [1, 11, 99, 142, 182], "mdft": 1, "physic": [1, 102, 105, 115, 124, 125, 126, 127, 128, 129, 130, 169, 171, 177, 178, 179, 180, 251, 257], "matric": [1, 5, 82, 83, 84, 85, 86, 87, 89, 102, 104, 218, 251, 255, 267], "privat": 1, "sparsematrix": [1, 89], "_smat": 1, "densematrix": 1, "_mat": 1, "laplace_transform": 1, "nocond": 1, "fals": 1, "8": [1, 95], "print": [1, 11, 18, 33, 79, 105, 112, 171, 176, 196, 270], "theanocod": 1, "assumpt": [1, 4, 7, 18, 28, 51], "handler": [1, 7], "askhandl": 1, "relat": [1, 2, 7, 51, 59, 81, 177, 180, 204, 247], "7": [1, 95, 212], "call": 1, "stochasticprocess": 1, "distribut": [1, 189, 216], "randomindexedsymbol": 1, "discretemarkovchain": 1, "absorbing_probabilit": 1, "util": [1, 33, 48, 49, 68, 87, 135, 191, 214, 233, 240, 251, 259], "misc": [1, 28], "find_execut": 1, "mutabl": 1, "diffgeom": 1, "unicod": [1, 270], "pretti": [1, 196, 270], "stringpict": 1, "prettyform": 1, "pretty_symbolog": 1, "xstr": 1, "pass": 1, "lambdifi": [1, 11, 92, 235, 260], "set": [1, 4, 29, 63, 180, 204, 215, 270], "oper": [1, 2, 73, 87, 140, 149, 151, 152, 173, 177, 180, 206, 217, 223, 244, 246, 247, 260, 267], "longer": 1, "accept": 1, "arg": [1, 57, 266], "6": [1, 14, 95, 212], "variou": [1, 195], "test": [1, 11, 13, 48, 81, 195, 224, 226, 227, 267], "randtest": 1, "mix": 1, "polynomi": [1, 59, 73, 184, 186, 187, 188, 189, 191, 192, 193, 195, 214, 271], "express": [1, 2, 33, 63, 70, 73, 81, 84, 93, 107, 174, 186, 195, 218, 243, 245, 260, 266], "binari": 1, "print_cycl": 1, "flag": 1, "combinator": [1, 38], "permut": [1, 42, 43], "us": [1, 5, 11, 15, 33, 51, 54, 75, 76, 92, 95, 122, 126, 127, 180, 182, 193, 215, 245], "integr": [1, 11, 55, 59, 73, 75, 76, 77, 78, 105, 184, 191, 250, 261], "string": [1, 7, 260], "fallback": 1, "sympifi": [1, 51], "creat": [1, 2, 18, 87], "an": [1, 63, 114, 167, 206, 215, 266], "indefinit": 1, "eq": [1, 51], "5": [1, 14, 95, 212], "tensor": [1, 47, 59, 161, 219, 222, 223], "fun_ev": 1, "__call__": 1, "tensortyp": 1, "dummy_fmt": 1, "tensorindextyp": 1, "metric": 1, "get_kronecker_delta": 1, "get_epsilon": 1, "tensorsymmetri": 1, "tensorhead": 1, "unit": [1, 29, 166, 167, 168, 170], "quantiti": [1, 165, 167, 169, 245], "is_emptyset": 1, "productset": [1, 204], "iter": [1, 204, 234], "set_potential_energi": 1, "mechan": [1, 7, 96, 105, 115, 123, 124, 125, 126, 127, 128, 129, 130, 149, 216], "condit": [1, 76, 204], "conditionset": [1, 204], "max_degre": 1, "get_upper_degre": 1, "properti": [1, 7, 183], "multivariate_result": 1, "dixonresult": 1, "rh": 1, "default": 1, "0": 1, "tupl": [1, 2, 51, 192], "first": [1, 12], "lambda": [1, 51], "evalu": [1, 2, 18, 55, 73, 129, 266], "differentiate_finit": 1, "4": [1, 14, 95, 212], "data": 1, "clear_cach": 1, "clear_subproduct": 1, "keyword": [1, 2], "is_diagonaliz": 1, "row": [1, 267], "col": 1, "jordan_block": 1, "3": [1, 14, 78, 95, 114, 163, 212], "sourc": [1, 2, 11, 239], "dimens": [1, 63, 164, 167], "scale_factor": 1, "quanit": 1, "import": [1, 14], "classof": 1, "a2idx": 1, "from": [1, 2, 195, 218], "2": [1, 14, 76, 95, 114, 126, 212], "dot": [1, 174, 270], "product": [1, 54, 150, 161, 217, 246], "column": [1, 267], "vector": [1, 41, 51, 123, 171, 172, 173, 177, 178, 179, 180, 189, 241, 243, 244, 245, 247, 248, 249, 250], "geometri": [1, 53, 63, 183], "line3d": 1, "equat": [1, 22, 124, 125, 126, 165, 184, 209, 212, 214, 215, 272], "need": [1, 167], "k": [1, 187], "gotcha": [2, 7, 114, 263], "pitfal": 2, "introduct": [2, 5, 25, 32, 33, 34, 41, 53, 63, 81, 114, 129, 167, 177, 179, 182, 183, 184, 191, 195, 249, 265], "equal": [2, 51, 263], "sign": [2, 57, 263], "singl": [2, 14], "doubl": [2, 56], "variabl": [2, 182, 216, 245], "assign": 2, "doe": [2, 12, 215], "between": [2, 7, 169, 186], "symbol": [2, 7, 8, 18, 51, 70, 126, 130, 181, 186, 192, 195, 215, 263, 265], "python": [2, 33], "number": [2, 29, 37, 51, 54, 55, 76, 186, 191, 195, 251, 256], "vs": [2, 8, 186], "float": [2, 51, 55], "ration": [2, 29, 51, 186, 187, 192, 195, 198, 204, 212, 271], "immut": [2, 85], "mathemat": [2, 14, 129], "invers": [2, 18, 57, 76], "trig": 2, "sqrt": [2, 57], "special": [2, 6, 33, 59, 192, 204, 271], "dictionari": 2, "get": [2, 11, 13, 19], "help": 2, "within": 2, "explan": [3, 14, 23], "classif": 4, "class": [4, 14, 32, 33, 50, 53, 82, 83, 85, 87, 89, 91, 126, 172, 182, 185, 191, 196, 208, 209, 217, 241, 242], "kind": [4, 51], "func": [4, 266], "finit": [5, 29, 31, 34, 183, 186, 189, 191, 195, 206, 216, 261], "differ": [5, 7, 31, 129, 186, 245, 261], "approxim": [5, 33], "deriv": [5, 51, 180, 217, 247, 261], "A": [5, 116, 119, 120, 121, 122, 126, 265, 272], "direct": [5, 247], "topic": [6, 105, 171, 251, 258], "old": [7, 186], "system": [7, 99, 118, 130, 164, 166, 167, 170, 212, 214, 244, 245, 247, 249], "appli": [7, 76, 206], "input": [7, 215], "predic": [7, 28, 29], "refer": [7, 14, 23, 25, 32, 50, 51, 53, 63, 69, 76, 78, 82, 83, 84, 85, 87, 89, 91, 93, 128, 134, 137, 167, 178, 180, 181, 182, 183, 185, 187, 189, 191, 192, 203, 205, 206, 209, 215, 228, 229, 248, 251], "abov": 7, "definit": [7, 18, 29, 69], "implic": 7, "interpret": 7, "other": [7, 18, 20, 70, 177, 245], "is_": 7, "implement": [7, 76, 177, 196, 206, 228, 229, 244, 247], "limit": [7, 75, 114, 201, 203, 261], "combin": [7, 73], "fuzzi": 8, "boolean": [8, 81], "three": [8, 63], "valu": 8, "bool": 8, "logic": [8, 11, 81, 251, 254], "build": [9, 11], "document": [9, 11, 12, 14, 15, 23], "requir": [9, 12], "depend": [9, 11, 126, 186, 245], "docker": 9, "debian": 9, "ubuntu": 9, "fedora": 9, "mac": 9, "window": [9, 182], "doc": [9, 187], "local": 9, "instal": [9, 20, 93, 269], "logo": 9, "view": 9, "auto": 9, "rebuild": 9, "live": 9, "server": 9, "pdf": 9, "debug": 10, "hard": 11, "option": [11, 189], "recommend": [11, 15], "interact": [11, 79, 182], "pars": [11, 93], "gener": [11, 14, 15, 41, 43, 186, 191, 215, 246, 251, 253], "autowrap": [11, 33, 228], "printer": [11, 33, 196, 270], "onli": [11, 215], "statist": 11, "symengin": 11, "backend": [11, 182], "experiment": [11, 93], "rubi": 11, "sage": 11, "develop": [11, 13, 51], "run": [11, 13, 20, 227], "benchmark": 11, "polici": 12, "what": [12, 126, 185, 186, 215, 265, 268], "try": 12, "avoid": 12, "backward": 12, "incompat": 12, "chang": 12, "place": 12, "when": [12, 76], "public": 12, "api": [12, 23, 72, 76, 78, 101, 123, 178, 215, 228, 229, 248, 251], "Not": 12, "purpos": 12, "technic": 12, "possibl": [12, 267], "how": [12, 21, 23, 76, 180, 215], "long": 12, "should": [12, 92], "last": 12, "checklist": 12, "ad": 12, "releas": 12, "note": [12, 18, 51, 63, 126, 203, 205, 263, 272], "entri": [12, 87], "environ": 13, "setup": 13, "git": [13, 20], "virtual": 13, "docstr": [14, 15, 94, 97, 106, 107, 108, 109, 110, 111, 112, 113, 173, 174, 175, 176, 234, 241, 242, 243], "style": [14, 15], "guid": [14, 15, 21, 23, 123, 178, 248], "guidelin": [14, 15], "format": [14, 15], "section": 14, "sentenc": 14, "summari": 14, "exampl": [14, 18, 24, 51, 63, 75, 78, 91, 95, 102, 115, 126, 130, 134, 165, 167, 180, 195, 196, 203, 206, 216, 217, 218, 221, 246, 265, 271], "paramet": [14, 206, 215], "see": [14, 51, 246], "also": [14, 51], "ar": [14, 180, 186, 215], "best": [14, 15, 18], "practic": [14, 15, 18], "write": [14, 15, 18], "sphinx": 14, "cross": [14, 174], "referenc": 14, "type": [15, 33, 59, 173, 212, 215, 216], "narr": 15, "markdown": 15, "prefer": 15, "math": [15, 33], "latex": [15, 93, 270], "head": 15, "spell": 15, "punctuat": 15, "capit": 15, "tone": 15, "contribut": [16, 17, 193], "make": 17, "custom": [18, 182, 196], "easi": 18, "case": [18, 215], "fulli": 18, "defin": 18, "automat": [18, 195], "eval": 18, "remind": 18, "kei": [18, 129, 266], "point": [18, 55, 66, 105, 171, 175, 179, 244], "numer": [18, 55, 73, 78, 92, 105, 129], "evalf": [18, 51, 92, 260], "rewrit": [18, 33, 197, 271], "simplif": [18, 55, 81, 205, 208, 271], "doit": 18, "expand": [18, 51, 195, 197, 271], "differenti": [18, 53, 73, 105, 214, 215, 272], "as_real_imag": 18, "miscellan": [18, 57, 63, 237], "_eval_": 18, "complet": [18, 114], "versin": 18, "divid": 18, "fuse": 18, "multipli": 18, "add": [18, 51], "fma": 18, "addit": [18, 73], "tip": [18, 260, 261, 263, 266, 267], "start": 19, "anaconda": 20, "mpmath": 20, "question": 20, "solv": [22, 95, 184, 191, 214, 215, 272], "welcom": 23, "s": [23, 51, 109, 117, 120, 121, 122, 124, 125, 126, 147, 158, 195, 205, 214, 215, 245, 250, 268], "tutori": [23, 209, 264], "abc": 24, "caveat": [24, 93], "algebra": [25, 29, 80, 87, 137, 180, 183, 186, 191, 195, 214, 272], "quaternion": 25, "ask": 26, "assum": 27, "queri": 28, "content": [28, 38, 58, 71, 77, 188, 200, 210, 219], "perform": 28, "improv": [28, 114], "common": [29, 82, 105, 171, 195, 196, 197, 208], "tautolog": 29, "commut": [29, 143, 183], "calculu": [29, 31, 180, 261], "infinit": [29, 215], "symmetr": 29, "invert": 29, "orthogon": [29, 59, 192, 247], "unitari": 29, "posit": 29, "upper": 29, "triangular": 29, "lower": 29, "diagon": [29, 217, 267], "full": 29, "rank": 29, "squar": [29, 184, 208], "integ": [29, 51, 57, 186, 204], "element": [29, 126, 186, 191], "real": [29, 186, 204], "complex": [29, 57, 186, 204], "singular": [29, 31, 59, 95], "normal": [29, 88, 185, 195], "theori": [29, 32, 251, 256], "even": 29, "odd": 29, "prime": [29, 191], "composit": [29, 73], "order": [29, 51, 192, 203, 206, 212], "neg": 29, "zero": [29, 51, 99, 189, 195, 267], "nonzero": 29, "nonposit": 29, "nonneg": 29, "irrat": 29, "extend": [29, 206], "hermitian": 29, "imaginari": 29, "antihermitian": 29, "transcendent": 29, "refin": 30, "weight": 31, "categori": 32, "base": [32, 53, 183, 184, 195, 202, 215], "diagram": 32, "draw": 32, "codegen": [33, 229], "tool": [33, 90, 208], "simplifi": [33, 189, 207, 208, 271], "abstract": [33, 96, 100, 102, 123, 132, 149, 178, 187], "syntax": 33, "tree": [33, 186, 196, 266], "ast": [33, 114], "predefin": 33, "node": 33, "c": [33, 196], "cfunction": 33, "specif": 33, "cnode": 33, "cxxnode": 33, "fortran": [33, 196], "fnode": 33, "algorithm": [33, 34, 147, 158, 189, 192, 198, 203, 206], "pyutil": 33, "cutil": 33, "futil": 33, "present": [34, 41], "group": [34, 36, 39, 41, 42, 167], "overview": [34, 41, 76], "facil": 34, "construct": [34, 41, 218], "free": [34, 184], "word": [34, 41], "coset": 34, "enumer": [34, 56], "todd": 34, "coxet": 34, "cosett": 34, "compress": 34, "standard": 34, "subgroup": 34, "index": [34, 41, 218, 221], "low": 34, "reidemeist": 34, "schreier": 34, "bibliographi": [34, 41], "grai": 35, "constructor": [36, 192, 267], "nilpot": 37, "abelian": 37, "cyclic": 37, "name": 39, "partit": [40, 56, 209, 234], "polycycl": 41, "polycyclicgroup": 41, "collector": 41, "comput": [41, 76, 92, 149, 195, 265], "minim": [41, 191], "uncollect": 41, "subword": 41, "collect": [41, 197, 208, 271], "expon": [41, 195], "depth": [41, 63], "lead": 41, "polyhedron": 44, "prufer": 45, "sequenc": [45, 73, 189, 201, 202], "subset": [46, 54], "canonic": 47, "concret": 50, "hypergeometr": [50, 59, 70, 73, 198, 206, 208], "term": [50, 195, 197, 203], "cach": 51, "cacheit": 51, "basic": [51, 55, 87, 173, 184, 186, 192, 204, 244, 251, 252, 260, 267], "atom": 51, "singleton": [51, 202, 204], "unevaluatedexpr": 51, "atomicexpr": 51, "wild": 51, "dummi": 51, "var": 51, "algebraicnumb": 51, "numbersymbol": 51, "realnumb": 51, "igcd": 51, "ilcm": 51, "seterr": 51, "One": 51, "negativeon": 51, "half": 51, "nan": [51, 126], "infin": 51, "negativeinfin": 51, "complexinfin": 51, "exp1": 51, "imaginaryunit": 51, "pi": 51, "eulergamma": 51, "catalan": [51, 56], "goldenratio": 51, "tribonacciconst": 51, "mod_invers": 51, "power": [51, 193, 198, 204, 208, 265, 271], "pow": 51, "integer_nthroot": 51, "integer_log": 51, "mul": 51, "prod": 51, "mod": 51, "rel": 51, "ne": 51, "lt": 51, "le": 51, "gt": 51, "ge": 51, "greaterthan": 51, "lessthan": 51, "unequ": 51, "strictgreaterthan": 51, "strictlessthan": 51, "multidimension": 51, "wildfunct": 51, "diff": 51, "functionclass": 51, "sub": [51, 92], "poleerror": 51, "count_op": 51, "expand_mul": 51, "expand_log": [51, 271], "expand_func": [51, 271], "expand_trig": [51, 271], "expand_complex": 51, "expand_multinomi": 51, "expand_power_exp": [51, 271], "expand_power_bas": [51, 271], "nfloat": 51, "evalfmixin": 51, "precisionexhaust": 51, "contain": 51, "tuplekind": 51, "dict": 51, "exprtool": 51, "gcd_term": 51, "factor_term": 51, "numberkind": 51, "undefinedkind": 51, "booleankind": 51, "sort": 51, "default_sort_kei": 51, "random": [51, 216], "random_complex_numb": 51, "verify_numer": 51, "test_derivative_numer": 51, "_randrang": 51, "_randint": 51, "bottom_up": 51, "postorder_travers": 51, "preorder_travers": 51, "walk": [51, 266], "cryptographi": 52, "discret": [54, 216], "transform": [54, 76, 78, 93, 245], "fast": 54, "fourier": [54, 199], "theoret": 54, "walsh": 54, "hadamard": 54, "m\u00f6biu": 54, "convolut": 54, "cover": 54, "intersect": [54, 63, 204], "accuraci": 55, "error": [55, 59], "handl": [55, 215], "sum": 55, "combinatori": [56, 208], "bell": 56, "bernoulli": [56, 212], "binomi": 56, "euler": 56, "factori": [56, 184], "subfactori": 56, "factorial2": 56, "fallingfactori": 56, "fibonacci": 56, "tribonacci": 56, "harmon": [56, 59, 138, 163], "luca": 56, "genocchi": 56, "multifactori": 56, "risingfactori": 56, "stirl": 56, "nc": 56, "np": 56, "nt": 56, "elementari": [57, 183, 202, 204], "re": 57, "im": 57, "ab": 57, "conjug": 57, "polar_lift": 57, "periodic_argu": 57, "principal_branch": 57, "trigonometr": [57, 59, 205, 208, 271], "sin": 57, "co": 57, "tan": 57, "cot": 57, "sec": 57, "csc": 57, "sinc": 57, "asin": 57, "aco": 57, "atan": 57, "acot": 57, "asec": 57, "acsc": 57, "atan2": 57, "hyperbol": 57, "hyperbolicfunct": 57, "sinh": 57, "cosh": 57, "tanh": 57, "coth": 57, "sech": 57, "csch": 57, "asinh": 57, "acosh": 57, "atanh": 57, "acoth": 57, "asech": 57, "acsch": 57, "ceil": 57, "floor": 57, "roundfunct": 57, "frac": 57, "exponenti": [57, 59, 212, 271], "exp": 57, "lambertw": 57, "log": 57, "exp_polar": 57, "piecewis": 57, "exprcondpair": 57, "identityfunct": 57, "min": 57, "max": 57, "root": [57, 192, 208], "cbrt": 57, "real_root": 57, "diracdelta": 59, "heavisid": 59, "gamma": [59, 102], "beta": 59, "fresnel": 59, "logarithm": [59, 271], "bessel": 59, "airi": 59, "b": 59, "spline": 59, "riemann": 59, "zeta": 59, "ellipt": 59, "mathieu": 59, "jacobi": 59, "gegenbau": 59, "chebyshev": 59, "legendr": 59, "hermit": 59, "laguerr": 59, "spheric": 59, "curv": 60, "ellips": 61, "entiti": [62, 63, 182], "avail": 63, "usag": [63, 114, 130, 186, 246], "median": 63, "pappu": 63, "hexagon": 63, "theorem": [63, 76, 250], "futur": [63, 105, 114, 171], "work": [63, 195], "truth": [63, 81], "beyond": 63, "visual": [63, 129], "line": 64, "plane": [65, 76], "polygon": [67, 78], "about": [69, 215, 245, 272], "holonom": [69, 70, 71, 73, 74, 118], "convert": [70, 73, 186, 212, 260], "represent": [70, 74, 167, 180, 186], "meijer": [70, 73, 76, 206], "g": [70, 73, 76, 206], "intern": [72, 76, 78, 186, 189, 191, 209, 212], "multipl": [73, 180, 191], "seri": [73, 182, 193, 198, 199, 200, 203, 261], "expans": [73, 203, 206, 208, 261], "linear": [73, 87, 105, 110, 126, 127, 167, 195, 209, 212], "holonomicfunct": 74, "differentialoper": 74, "differentialoperatoralgebra": 74, "current": 75, "polar": [76, 134], "branch": 76, "repres": [76, 157, 186, 191], "argand": 76, "tabl": [76, 81, 206], "lookup": 76, "mellin": 76, "converg": 76, "laplac": 76, "thi": [76, 215], "valid": 76, "exist": 76, "formula": [76, 206], "todo": 78, "bug": 78, "over": [78, 195, 204], "polytop": 78, "For": 78, "2d": 78, "polyhedra": 78, "session": 79, "lie": [80, 212], "form": [81, 88, 126, 185, 212, 218], "equival": [81, 129, 209], "manipul": [81, 87, 107, 188, 189, 192, 193, 215, 266], "infer": 81, "matrixcommon": 82, "matrixkind": 82, "dens": [83, 186, 187, 189], "immutablematrix": [83, 85], "block": 84, "matrixdetermin": 87, "matrixreduct": 87, "matrixsubspac": 87, "matrixeigen": 87, "matrixcalculu": 87, "matrixbas": 87, "except": [87, 93, 189, 232], "numpi": 87, "spars": [89, 90, 186, 187, 189], "immutablesparsematrix": 89, "ntheori": 91, "ecm": 91, "qs": 91, "ufuncifi": 92, "aesara": [92, 196], "so": 92, "which": [92, 196], "i": 92, "mathrm": [93, 270], "runtim": 93, "beam": [94, 95, 96], "bend": 95, "problem": [95, 191, 246], "continuum": 96, "truss": [96, 97], "control": [98, 99, 100, 101, 182], "pole": 99, "bode": 99, "impuls": 99, "respons": [99, 196], "step": [99, 215], "ramp": 99, "modul": [100, 132, 171, 178, 183, 184, 185, 186, 189, 191, 192, 209, 212, 213, 215, 228], "lti": 101, "high": 102, "energi": [102, 127], "hydrogen": 103, "wavefunct": 103, "potenti": [105, 126, 127, 171, 177, 247], "issu": [105, 114, 126, 171, 267], "advanc": [105, 171, 195, 266, 267], "featur": [105, 171, 262], "choic": 105, "coordin": [105, 117, 126, 182, 244, 245, 247, 249], "speed": [105, 126], "substitut": [105, 171, 260], "acceler": [105, 171, 179, 203], "interfac": [105, 171, 182, 216], "output": [105, 215], "bodi": [106, 127, 250], "msub": 107, "find_dynamicsymbol": 107, "joint": [108, 216], "pinjoint": 108, "prismaticjoint": 108, "kane": [109, 117, 120, 121, 124, 126], "lagrang": [109, 117, 122, 125, 126], "kanemethod": 109, "lagrangesmethod": 109, "mass": [111, 127, 250], "inertia": [111, 127, 171], "particl": [111, 127, 153], "rigidbodi": 111, "inertia_of_point_mass": 111, "linear_momentum": 111, "angular_momentum": 111, "kinetic_energi": 111, "potential_energi": 111, "lagrangian": [111, 127], "mechanics_print": 112, "mprint": 112, "mpprint": 112, "mlatex": 112, "symbolicsystem": [113, 130], "autolev": [114, 129], "dynam": 114, "onlin": 114, "fix": 114, "switch": 114, "bicycl": 116, "nonminim": 117, "pendulum": 117, "multi": 118, "degre": 118, "freedom": 118, "roll": [119, 120, 121, 122], "disc": [119, 120, 121, 122], "constraint": 121, "forc": 121, "classic": [123, 189], "structur": [124, 125, 167, 209], "background": 126, "directli": [126, 245], "new_method": 126, "kwarg": 126, "a_and_b": 126, "true": 126, "slow": 126, "ha": 126, "zoo": 126, "oo": 126, "further": [126, 263], "rigid": 127, "dyadic": [127, 171, 172, 241, 244, 245], "momentum": 127, "angular": [127, 179], "momenta": 127, "kinet": 127, "user": [129, 209, 212, 213], "rough": 129, "link": 129, "gaussian": [131, 186, 187, 195], "optic": [131, 132], "medium": 133, "wave": 136, "pauli": 137, "quantum": [138, 149, 163], "oscil": [138, 163], "d": [138, 163], "anticommut": 139, "cartesian": 140, "state": [140, 149, 152, 160], "clebsch": 141, "gordan": 141, "coeffici": [141, 189], "circuit": 142, "constant": [144, 167], "dagger": 145, "gate": 146, "grover": 147, "hilbert": 148, "space": [148, 167, 206], "analyt": 149, "solut": [149, 215, 246], "inner": 150, "helper": [152, 196], "box": 153, "qappli": 154, "qft": 155, "qubit": 156, "shor": 158, "spin": 159, "second": 162, "quantiz": 162, "dimension": 165, "analysi": 165, "philosophi": 167, "behind": 167, "literatur": [167, 190, 195], "prefix": 168, "convers": 169, "referencefram": [171, 172, 180], "dynamicsymbol": [171, 174], "essenti": [172, 174, 241, 243], "coordinatesym": 172, "field": [173, 177, 186, 189, 191, 195, 247, 249], "curl": [173, 177, 243, 247], "diverg": [173, 177, 243, 247, 250], "gradient": [173, 177, 243, 247], "scalar_potenti": [173, 243], "scalar_potential_differ": [173, 243], "is_conserv": [173, 243], "is_solenoid": [173, 243], "outer": 174, "time_deriv": 174, "kinemat": [175, 179], "kinematic_equ": 175, "init_vprint": 176, "vprint": 176, "vpprint": 176, "vlatex": 176, "scalar": [177, 247, 249], "conserv": [177, 247], "solenoid": [177, 247], "veloc": 179, "altern": 180, "basi": [180, 189, 191], "frame": 180, "wigner": 181, "credit": 181, "copyright": 181, "author": 181, "plotgrid": 182, "pyglet": 182, "mode": 182, "specifi": 182, "interv": [182, 204], "color": 182, "geometr": 182, "ascii": [182, 270], "art": 182, "agca": 183, "ring": [183, 186, 187], "ideal": 183, "homomorph": [183, 191], "syzygi": 183, "extens": [183, 195], "concept": 184, "divis": [184, 209], "domain": [184, 186, 187, 192, 195, 215], "euclidean": 184, "gcd": [184, 189, 195], "lcm": 184, "factor": [184, 189, 195, 212, 271], "groebner": [184, 189], "introduc": [185, 186], "domainmatrix": 185, "ddm": 185, "sdm": 185, "dup": 186, "dmp": 186, "polyr": 186, "polynomialr": 186, "choos": 186, "unifi": 186, "gf": 187, "p": [187, 191], "zz": 187, "qq": 187, "mpq": 187, "zz_i": 187, "qq_i": 187, "rr": 187, "cc": 187, "x": 187, "ex": 187, "quotient": 187, "level": 189, "multivari": [189, 195], "univari": [189, 195, 209], "remaind": 189, "subresult": 189, "configur": 189, "modular": 189, "undocu": 189, "main": 191, "decomposit": [191, 192, 195], "adic": 191, "valuat": 191, "find": [191, 192], "subfield": 191, "As": 191, "arithmet": 191, "extra": 192, "monomi": 192, "encod": 192, "formal": [192, 198], "partial": [192, 195, 214, 215], "fraction": [192, 195, 208, 271], "dispers": 192, "rs_seri": 193, "solve_lin_si": 194, "eqs_to_matrix": 194, "sympy_eqs_to_r": 194, "_solve_lin_si": 194, "_solve_lin_sys_compon": 194, "wester": 195, "articl": 195, "simpl": 195, "result": 195, "support": 195, "back": 195, "cyclotom": 195, "reduc": 195, "gr\u00f6bner": 195, "mistak": 196, "prettyprint": 196, "rcodeprint": 196, "mapl": 196, "javascript": 196, "julia": 196, "octav": 196, "matlab": 196, "rust": 196, "gtk": 196, "lambdaprint": 196, "latexprint": 196, "mathmlprint": 196, "pythoncodeprint": 196, "pythonprint": 196, "srepr": [196, 270], "strprinter": 196, "preview": 196, "codeprint": 196, "preced": 196, "dotprint": 196, "subexpress": [197, 208], "detect": 197, "compound": [202, 204, 216], "recurs": [202, 266], "gruntz": 203, "more": [203, 245, 265], "intuit": 203, "residu": 203, "finiteset": 204, "union": 204, "complement": 204, "symmetricdiffer": 204, "disjointunion": 204, "emptyset": 204, "universalset": 204, "natur": 204, "naturals0": 204, "imageset": 204, "rang": 204, "complexregion": 204, "powerset": 204, "setkind": 204, "hongguang": 205, "fu": 205, "rule": [205, 246], "notat": 206, "increment": 206, "decrement": 206, "indic": 206, "reduct": 206, "around": 206, "loos": 206, "end": 206, "confluenc": 206, "separatevar": 208, "nthroot": 208, "kroneckersimp": 208, "besselsimp": 208, "hypersimp": 208, "hypersimilar": 208, "nsimplifi": 208, "posifi": 208, "logcombin": [208, 271], "radsimp": 208, "rad_ration": 208, "collect_sqrt": 208, "collect_const": 208, "ratsimp": 208, "ratsimpmodprim": 208, "trigsimp": [208, 271], "powsimp": [208, 271], "powdenest": [208, 271], "combsimp": [208, 271], "denest": 208, "sqrtdenest": 208, "elimin": 208, "cse": 208, "opt_cs": 208, "tree_cs": 208, "hyperexpand": [208, 271], "epath": 208, "diophantin": [209, 214, 215], "classify_diop": 209, "diop_solv": 209, "diop_linear": 209, "base_solution_linear": 209, "diop_quadrat": 209, "diop_dn": 209, "cornacchia": 209, "diop_bf_dn": 209, "transformation_to_dn": 209, "transformation_to_norm": 209, "find_dn": 209, "diop_ternary_quadrat": 209, "square_factor": 209, "descent": 209, "diop_general_pythagorean": 209, "diop_general_sum_of_squar": 209, "diop_general_sum_of_even_pow": 209, "power_represent": 209, "sum_of_three_squar": 209, "sum_of_four_squar": 209, "sum_of_pow": 209, "sum_of_squar": 209, "merge_solut": 209, "pqa": 209, "parametrize_ternary_quadrat": 209, "diop_ternary_quadratic_norm": 209, "ldescent": 209, "gaussian_reduc": 209, "holzer": 209, "prime_as_sum_of_two_squar": 209, "sqf_normal": 209, "reconstruct": 209, "diophantinesolutionset": 209, "diophantineequationtyp": 209, "binaryquadrat": 209, "inhomogeneousternaryquadrat": 209, "homogeneousternaryquadraticnorm": 209, "homogeneousternaryquadrat": 209, "inhomogeneousgeneralquadrat": 209, "homogeneousgeneralquadrat": 209, "generalsumofsquar": 209, "generalpythagorean": 209, "cubicthu": 209, "generalsumofevenpow": 209, "inequ": [211, 214, 215], "od": [212, 214, 215], "dsolv": 212, "dsolve_system": 212, "classify_od": 212, "checkodesol": 212, "homogeneous_ord": 212, "infinitesim": 212, "checkinfsol": 212, "constantsimp": 212, "hint": [212, 213], "allhint": 212, "odesimp": 212, "constant_renumb": 212, "sol_simpl": 212, "1st_exact": 212, "1st_homogeneous_coeff_best": 212, "1st_homogeneous_coeff_subs_dep_div_indep": 212, "1st_homogeneous_coeff_subs_indep_div_dep": 212, "1st_linear": 212, "1st_rational_riccati": 212, "2nd_linear_airi": 212, "2nd_linear_bessel": 212, "liouvil": 212, "riccati_special_minus2": 212, "nth_linear_constant_coeff_homogen": 212, "nth_linear_constant_coeff_undetermined_coeffici": 212, "nth_linear_constant_coeff_variation_of_paramet": 212, "nth_linear_euler_eq_homogen": 212, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 212, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 212, "nth_algebra": 212, "nth_order_reduc": 212, "separ": 212, "almost_linear": 212, "linear_coeffici": 212, "separable_reduc": 212, "lie_group": 212, "2nd_hypergeometr": 212, "1st_power_seri": 212, "2nd_power_series_ordinari": 212, "2nd_power_series_regular": 212, "heurist": 212, "abaco1_simpl": 212, "abaco1_product": 212, "bivari": 212, "chi": 212, "abaco2_similar": 212, "function_sum": 212, "abaco2_unique_unknown": 212, "abaco2_unique_gener": 212, "riccati": 212, "riccati_norm": 212, "riccati_inverse_norm": 212, "riccati_reduc": 212, "construct_c": 212, "construct_d": 212, "rational_laurent_seri": 212, "compute_m_ybar": 212, "solve_aux_eq": 212, "remove_redundant_sol": 212, "get_gen_sol_from_part_sol": 212, "solve_riccati": 212, "canon": 212, "linodesolv": 212, "inform": [212, 213], "jordan": 212, "nonlinear": 212, "pde": [213, 214, 215], "pde_separ": 213, "pde_separate_add": 213, "pde_separate_mul": 213, "pdsolv": 213, "classify_pd": 213, "checkpdesol": 213, "pde_1st_linear_constant_coeff_homogen": 213, "pde_1st_linear_constant_coeff": 213, "pde_1st_linear_variable_coeff": 213, "ordinari": [214, 215], "deutil": 214, "recurr": 214, "de": [214, 215], "solveset": 215, "wrong": 215, "why": [215, 265], "do": 215, "we": 215, "emploi": 215, "return": 215, "ensur": 215, "ani": 215, "search": 215, "deal": 215, "where": 215, "known": 215, "plan": 215, "linear_eq_to_matrix": 215, "linsolv": 215, "nonlinsolv": 215, "transolv": 215, "continu": [216, 271], "stochast": 216, "process": 216, "dim": [217, 218], "arrai": [217, 218], "contract": 217, "explicit": 218, "pytest": 225, "randomis": 226, "detail": [228, 229, 244], "routin": 229, "decor": 230, "enum": 231, "variat": 234, "memoiz": 236, "pkgdata": 238, "inspect": 239, "time": 240, "coordsys3d": [241, 245], "del": [241, 246, 247], "parametricregion": 241, "implicitregion": 241, "parametricintegr": 241, "orient": [242, 245], "axisorient": 242, "bodyorient": 242, "spaceorient": 242, "quaternionorient": 242, "matrix_to_vector": 243, "vector_integr": 243, "locat": 245, "orient_new": 245, "AND": 245, "quadrilater": 246, "third": 246, "curvilinear": 247, "applic": 250, "calcul": 250, "perimet": 250, "surfac": 250, "area": 250, "volum": 250, "flux": 250, "verifi": 250, "stoke": 250, "quick": [260, 261, 263, 266, 267], "two": 263, "final": 263, "read": 263, "interest": 265, "understand": 266, "through": 266, "invari": 266, "prevent": 266, "shape": 267, "access": 267, "delet": 267, "insert": 267, "determin": 267, "rref": 267, "nullspac": 267, "columnspac": 267, "eigenvalu": 267, "eigenvector": 267, "next": 268, "preliminari": 269, "exercis": 269, "up": 270, "str": 270, "mathml": 270, "cancel": 271, "apart": 271, "gammasimp": 271}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})