Search.setIndex({"docnames": ["citing", "explanation/active-deprecations", "explanation/gotchas", "explanation/index", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/contributing/build-docs", "guides/contributing/debug", "guides/contributing/dependencies", "guides/contributing/deprecations", "guides/contributing/dev-setup", "guides/contributing/docstring", "guides/contributing/documentation-style-guide", "guides/contributing/index", "guides/contributing/make-a-contribution", "guides/getting_started/index", "guides/getting_started/install", "guides/index", "guides/solving", "index", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorial/basic_operations", "tutorial/calculus", "tutorial/features", "tutorial/gotchas", "tutorial/index", "tutorial/intro", "tutorial/manipulation", "tutorial/matrices", "tutorial/next", "tutorial/preliminaries", "tutorial/printing", "tutorial/simplification", "tutorial/solvers"], "filenames": ["citing.md", "explanation/active-deprecations.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/contributing/build-docs.rst", "guides/contributing/debug.rst", "guides/contributing/dependencies.md", "guides/contributing/deprecations.md", "guides/contributing/dev-setup.rst", "guides/contributing/docstring.rst", "guides/contributing/documentation-style-guide.rst", "guides/contributing/index.rst", "guides/contributing/make-a-contribution.rst", "guides/getting_started/index.rst", "guides/getting_started/install.md", "guides/index.rst", "guides/solving.md", "index.rst", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorial/basic_operations.rst", "tutorial/calculus.rst", "tutorial/features.rst", "tutorial/gotchas.rst", "tutorial/index.rst", "tutorial/intro.rst", "tutorial/manipulation.rst", "tutorial/matrices.rst", "tutorial/next.rst", "tutorial/preliminaries.rst", "tutorial/printing.rst", "tutorial/simplification.rst", "tutorial/solvers.rst"], "titles": ["Citing SymPy", "List of active deprecations", "Gotchas and Pitfalls", "Explanation", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "General Guidelines", "Contributing to SymPy", "Making a Contribution", "Getting Started", "Installation", "How-to Guides", "Solve Equations", "Welcome to SymPy\u2019s documentation!", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joint (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Tutorials", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 19, 23, 26, 27, 30, 31, 32, 33, 40, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 58, 63, 73, 75, 77, 79, 80, 81, 83, 86, 90, 92, 93, 94, 97, 99, 100, 102, 104, 106, 107, 123, 124, 127, 137, 141, 154, 163, 165, 169, 175, 178, 180, 182, 184, 185, 187, 189, 190, 191, 193, 194, 201, 202, 204, 207, 210, 211, 212, 213, 214, 215, 218, 219, 223, 225, 226, 229, 230, 232, 233, 239, 240, 242, 243, 245, 247, 248, 258, 259, 261, 262, 264, 265, 268, 269, 270], "public": [0, 14, 32, 50, 51, 72, 184, 185, 187, 188, 192, 207, 210, 214, 228, 239], "us": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 127, 128, 129, 132, 133, 135, 137, 139, 140, 141, 144, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 216, 218, 219, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 241, 242, 244, 245, 247, 248, 250, 251, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "meurer": 0, "A": [0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 18, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 97, 99, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 121, 122, 125, 126, 127, 128, 129, 132, 134, 137, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 165, 166, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 227, 228, 229, 230, 232, 233, 239, 240, 242, 243, 244, 245, 247, 248, 255, 260, 262, 264, 265, 269], "smith": [0, 1, 87, 183], "cp": [0, 42, 91, 182], "paprocki": 0, "m": [0, 1, 2, 5, 7, 9, 24, 28, 32, 33, 38, 39, 41, 42, 46, 49, 50, 51, 52, 53, 55, 58, 60, 62, 66, 67, 75, 77, 79, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 99, 101, 102, 104, 107, 108, 109, 111, 112, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 136, 143, 157, 158, 161, 163, 165, 175, 179, 181, 182, 183, 185, 187, 188, 189, 190, 194, 195, 196, 197, 199, 200, 201, 202, 204, 206, 207, 210, 212, 213, 214, 215, 216, 219, 220, 226, 227, 229, 232, 234, 239, 241, 243, 247, 248, 259, 265, 268, 269, 270], "\u010dert\u00edk": 0, "o": [0, 2, 5, 7, 14, 23, 31, 32, 41, 42, 48, 50, 51, 56, 58, 60, 61, 63, 64, 66, 72, 75, 90, 94, 104, 107, 109, 111, 112, 122, 123, 124, 125, 127, 128, 150, 160, 171, 173, 175, 177, 187, 188, 190, 191, 194, 196, 201, 204, 210, 214, 219, 232, 241, 244, 259], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 213], "ivanov": 0, "s": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 17, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 72, 73, 75, 77, 78, 79, 80, 81, 83, 84, 86, 89, 90, 91, 92, 93, 94, 97, 99, 101, 103, 104, 106, 109, 112, 114, 117, 121, 125, 127, 131, 132, 133, 139, 140, 142, 144, 146, 147, 150, 154, 155, 157, 158, 160, 163, 165, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 214, 220, 225, 226, 227, 228, 229, 230, 232, 233, 235, 239, 240, 244, 245, 246, 247, 250, 258, 259, 261, 262, 263, 264, 265, 269, 270], "moor": [0, 83, 86], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 2, 8, 9, 12, 14, 15, 24, 27, 28, 30, 32, 33, 34, 41, 42, 43, 44, 46, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 77, 79, 80, 81, 82, 83, 86, 90, 91, 92, 99, 100, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 122, 123, 124, 125, 127, 128, 132, 134, 140, 144, 156, 158, 160, 162, 163, 165, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 197, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 220, 223, 225, 228, 232, 233, 239, 241, 243, 247, 258, 259, 263, 264, 265, 268, 269, 270], "vig": 0, "granger": [0, 146], "BE": 0, "muller": 0, "rp": [0, 66, 132], "bonazzi": 0, "f": [0, 1, 2, 5, 9, 14, 30, 31, 32, 33, 40, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 68, 73, 74, 75, 77, 79, 81, 83, 86, 90, 91, 92, 94, 97, 107, 111, 116, 121, 122, 123, 127, 129, 133, 134, 145, 146, 149, 158, 160, 163, 170, 174, 175, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 219, 220, 225, 226, 227, 228, 229, 232, 233, 235, 244, 245, 248, 258, 259, 264, 268, 269, 270], "gupta": [0, 213], "h": [0, 2, 5, 30, 31, 32, 33, 34, 41, 46, 49, 50, 51, 55, 58, 72, 75, 77, 81, 82, 86, 87, 92, 99, 109, 125, 129, 132, 144, 146, 149, 154, 158, 165, 179, 180, 181, 182, 183, 187, 188, 189, 190, 193, 194, 202, 206, 210, 212, 213, 214, 215, 220, 227, 248, 259, 268], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 146], "mj": 0, "terrel": 0, "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 135, 137, 139, 141, 144, 146, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 247, 249, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 1, 2, 4, 5, 7, 8, 12, 14, 15, 23, 24, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 65, 66, 72, 73, 75, 77, 79, 80, 81, 82, 83, 86, 89, 90, 92, 93, 94, 99, 100, 101, 102, 104, 107, 109, 112, 114, 118, 119, 120, 123, 124, 125, 127, 129, 132, 133, 135, 143, 144, 149, 150, 155, 157, 158, 160, 165, 166, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 225, 226, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 258, 264, 269], "kulal": 0, "cimrman": 0, "r": [0, 1, 2, 5, 7, 9, 14, 15, 24, 31, 32, 33, 34, 41, 42, 50, 51, 52, 54, 55, 56, 63, 64, 66, 68, 72, 73, 75, 77, 86, 90, 92, 94, 99, 101, 104, 107, 108, 109, 111, 112, 114, 115, 118, 119, 120, 124, 125, 126, 127, 128, 129, 132, 156, 157, 160, 161, 163, 170, 171, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 201, 202, 204, 206, 207, 210, 212, 213, 214, 220, 225, 227, 229, 239, 241, 243, 244, 245, 248, 269], "scopatz": 0, "2017": [0, 179], "symbol": [0, 1, 3, 5, 11, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 40, 42, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 80, 81, 83, 86, 90, 91, 92, 93, 94, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 118, 119, 120, 121, 125, 127, 129, 132, 133, 134, 135, 137, 139, 140, 142, 144, 146, 148, 149, 152, 155, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 226, 232, 233, 239, 240, 241, 243, 244, 245, 248, 250, 255, 258, 259, 262, 264, 265, 268, 269, 270], "comput": [0, 1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 19, 21, 24, 30, 32, 33, 34, 37, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 65, 69, 72, 73, 74, 76, 77, 79, 81, 83, 86, 87, 89, 90, 92, 94, 97, 99, 103, 106, 107, 108, 111, 112, 114, 118, 121, 127, 144, 145, 146, 154, 159, 160, 162, 164, 165, 169, 171, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 196, 197, 199, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 216, 226, 229, 232, 233, 239, 240, 241, 242, 243, 244, 245, 247, 250, 255, 258, 259, 261, 262, 265, 269], "python": [0, 1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 25, 26, 27, 30, 42, 50, 51, 54, 56, 62, 78, 80, 81, 83, 86, 90, 91, 92, 93, 103, 112, 127, 170, 180, 181, 182, 184, 185, 191, 193, 194, 202, 206, 210, 213, 215, 225, 226, 227, 228, 229, 232, 233, 235, 239, 251, 261, 262, 263, 264, 265, 267, 268, 269], "peerj": 0, "scienc": [0, 42, 75, 86, 126, 127, 181, 188, 204, 259], "3": [0, 2, 3, 5, 7, 8, 12, 13, 15, 19, 21, 24, 25, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 105, 109, 111, 114, 115, 116, 118, 119, 120, 121, 123, 124, 127, 128, 129, 131, 133, 137, 139, 140, 141, 145, 149, 154, 155, 157, 159, 160, 163, 166, 167, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 214, 215, 216, 219, 220, 221, 225, 226, 228, 229, 230, 232, 233, 235, 237, 239, 240, 241, 242, 243, 245, 247, 248, 255, 258, 259, 261, 263, 264, 265, 268, 269, 270], "e103": 0, "http": [0, 1, 7, 9, 11, 12, 13, 14, 15, 19, 24, 26, 27, 28, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 66, 67, 68, 72, 75, 77, 78, 79, 80, 81, 83, 86, 90, 93, 97, 99, 101, 102, 129, 131, 132, 133, 135, 136, 137, 141, 142, 143, 146, 148, 149, 158, 160, 170, 172, 174, 176, 179, 188, 190, 193, 194, 197, 199, 201, 202, 203, 206, 207, 210, 213, 214, 226, 227, 228, 230, 232, 233, 235, 239, 240, 244, 246, 248, 265, 268], "doi": [0, 14, 30, 42, 86, 188, 203, 206, 214], "org": [0, 2, 7, 11, 14, 15, 24, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 66, 67, 68, 77, 78, 79, 80, 81, 83, 86, 90, 97, 99, 101, 102, 129, 131, 132, 133, 135, 136, 137, 141, 142, 143, 146, 148, 149, 158, 160, 170, 172, 174, 176, 188, 190, 194, 197, 201, 202, 203, 207, 210, 213, 214, 226, 227, 228, 230, 232, 239, 240, 244, 246, 248, 265, 268], "10": [0, 2, 3, 14, 19, 24, 30, 32, 39, 41, 42, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 63, 64, 66, 67, 75, 77, 78, 80, 81, 83, 86, 87, 90, 91, 92, 93, 95, 97, 99, 100, 105, 109, 112, 114, 127, 129, 133, 144, 154, 155, 166, 170, 171, 172, 173, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 197, 200, 201, 202, 203, 206, 207, 210, 213, 214, 215, 224, 225, 230, 232, 233, 235, 239, 241, 258, 265, 269], "7717": 0, "cs": [0, 90, 187, 188, 189, 194, 214], "103": [0, 41], "bibtex": 0, "entri": [0, 1, 28, 33, 40, 42, 48, 51, 62, 75, 79, 81, 82, 83, 85, 89, 107, 112, 114, 125, 132, 183, 187, 189, 190, 204, 214, 233], "latex": [0, 9, 11, 14, 19, 58, 78, 169, 170, 174, 178, 180, 185, 194, 257, 263, 264], "user": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 15, 22, 31, 32, 33, 41, 42, 49, 50, 51, 52, 58, 62, 75, 79, 83, 86, 92, 93, 94, 97, 99, 103, 112, 121, 123, 125, 128, 148, 149, 158, 164, 165, 169, 170, 173, 177, 181, 184, 187, 189, 191, 192, 193, 194, 195, 203, 206, 208, 212, 213, 214, 223, 226, 227, 229, 230, 233, 239, 242, 243, 248, 258, 261, 262, 264, 265, 266], "articl": [0, 50, 51, 83, 86, 186, 188, 189, 194, 239, 263], "titl": [0, 14, 15, 180], "author": [0, 14, 90, 146, 189, 255], "aaron": 0, "christoph": [0, 239], "p": [0, 1, 2, 5, 7, 8, 9, 24, 26, 27, 28, 32, 33, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 67, 72, 73, 75, 77, 81, 83, 86, 90, 92, 93, 94, 99, 100, 104, 106, 107, 108, 109, 111, 112, 115, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 139, 158, 160, 165, 171, 173, 175, 177, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 194, 196, 197, 201, 202, 204, 206, 207, 210, 212, 213, 214, 215, 219, 220, 232, 239, 241, 242, 243, 244, 245, 247, 265, 269], "mateusz": 0, "v": [0, 2, 9, 13, 24, 32, 40, 46, 49, 50, 51, 52, 53, 54, 64, 75, 79, 81, 86, 90, 94, 104, 105, 109, 114, 124, 125, 127, 128, 132, 133, 145, 160, 165, 170, 172, 173, 175, 177, 178, 180, 184, 187, 188, 189, 190, 194, 204, 206, 207, 210, 212, 214, 225, 232, 239, 241, 242, 243, 244, 245, 247], "c": [0, 2, 5, 7, 9, 11, 23, 24, 30, 31, 34, 35, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 73, 75, 77, 79, 80, 81, 83, 86, 90, 91, 92, 93, 94, 99, 101, 103, 105, 106, 107, 112, 116, 118, 119, 120, 123, 124, 125, 127, 129, 133, 139, 140, 141, 144, 146, 149, 154, 157, 159, 160, 165, 170, 173, 177, 178, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 193, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 219, 220, 226, 227, 229, 232, 235, 236, 239, 240, 241, 242, 243, 244, 245, 248, 251, 257, 259, 261, 268, 269, 270], "ert": 0, "k": [0, 2, 7, 15, 24, 30, 31, 32, 33, 34, 36, 40, 41, 44, 45, 48, 49, 50, 51, 53, 54, 55, 56, 58, 63, 68, 75, 77, 80, 81, 83, 86, 90, 107, 116, 122, 124, 125, 127, 134, 148, 149, 152, 156, 158, 160, 169, 175, 179, 181, 183, 184, 186, 187, 188, 189, 190, 191, 194, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 210, 212, 214, 215, 216, 218, 219, 220, 221, 225, 229, 232, 239, 240, 241, 242, 243, 244, 245, 247, 248, 268, 269], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 1, 2, 7, 8, 13, 24, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 73, 75, 77, 79, 80, 81, 82, 83, 86, 90, 92, 93, 94, 97, 99, 104, 105, 107, 108, 109, 112, 115, 116, 124, 125, 127, 129, 132, 137, 139, 141, 143, 148, 149, 152, 157, 158, 159, 160, 170, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 225, 228, 229, 232, 235, 239, 240, 241, 242, 243, 244, 259, 261, 265, 269, 270], "matthew": 0, "amit": [0, 213], "sergiu": 0, "jason": [0, 194], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 146], "e": [0, 1, 2, 7, 8, 9, 11, 12, 13, 14, 15, 23, 24, 28, 30, 31, 32, 33, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 86, 90, 92, 93, 94, 99, 100, 104, 107, 109, 111, 112, 123, 124, 127, 128, 129, 132, 139, 140, 144, 149, 150, 152, 155, 157, 159, 160, 165, 166, 170, 174, 175, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 239, 242, 245, 247, 248, 258, 259, 263, 264, 269], "richard": [0, 90], "francesco": 0, "harsh": [0, 213], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 1, 2, 15, 24, 28, 30, 32, 33, 36, 40, 41, 42, 46, 48, 49, 51, 52, 54, 55, 58, 72, 75, 77, 79, 81, 83, 86, 90, 97, 100, 125, 126, 127, 132, 139, 140, 157, 160, 165, 169, 175, 179, 181, 183, 185, 187, 188, 189, 190, 191, 193, 194, 196, 202, 204, 206, 207, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 226, 232, 239, 240, 241, 242, 243, 244, 245, 247, 248], "andi": [0, 126], "rou": 0, "ka": 0, "n": [0, 2, 5, 7, 13, 14, 15, 23, 28, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60, 63, 64, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 83, 86, 87, 90, 92, 93, 94, 99, 101, 102, 104, 107, 109, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 136, 140, 145, 146, 149, 154, 156, 157, 158, 160, 161, 163, 165, 167, 169, 170, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 212, 213, 214, 217, 219, 220, 223, 226, 232, 234, 235, 239, 240, 241, 242, 243, 247, 259, 265, 268, 269, 270], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 214], "anthoni": 0, "year": [0, 1, 12, 14], "month": 0, "jan": [0, 51], "keyword": [0, 12, 14, 31, 32, 33, 41, 42, 50, 51, 54, 55, 63, 65, 66, 67, 81, 86, 90, 93, 97, 99, 107, 122, 123, 154, 160, 174, 180, 182, 184, 185, 187, 189, 190, 193, 194, 195, 201, 206, 207, 212, 219, 225, 226, 228, 230, 233, 235, 243, 265], "algebra": [0, 2, 7, 15, 18, 21, 27, 33, 41, 50, 51, 54, 56, 68, 71, 72, 73, 75, 77, 80, 81, 85, 87, 90, 91, 92, 111, 121, 127, 128, 176, 179, 182, 183, 185, 186, 187, 188, 190, 191, 194, 196, 204, 207, 208, 210, 213, 249, 250, 253, 255, 256, 260, 261, 263, 265], "system": [0, 1, 2, 4, 5, 8, 9, 10, 11, 13, 15, 18, 20, 21, 25, 27, 41, 50, 51, 52, 56, 75, 78, 79, 80, 81, 86, 91, 92, 93, 96, 98, 99, 103, 107, 108, 109, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 124, 125, 127, 138, 139, 154, 157, 158, 160, 163, 167, 170, 173, 174, 175, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 194, 202, 203, 208, 209, 213, 214, 225, 226, 239, 240, 241, 244, 246, 248, 255, 261, 263, 265, 269, 270], "abstract": [0, 1, 30, 31, 39, 50, 52, 56, 58, 63, 68, 83, 106, 112, 144, 146, 155, 158, 159, 160, 181, 186, 189, 213, 214, 216, 220, 227, 247, 251], "an": [0, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 104, 106, 107, 109, 111, 114, 115, 121, 122, 124, 125, 127, 128, 131, 132, 133, 137, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 157, 158, 160, 161, 162, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 239, 240, 242, 243, 245, 246, 247, 248, 256, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270], "open": [0, 1, 9, 11, 12, 14, 15, 17, 19, 30, 50, 52, 56, 77, 80, 99, 112, 127, 194, 202, 209, 213, 214, 236, 263, 265], "sourc": [0, 9, 13, 14, 15, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 170, 171, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 245, 257, 263], "written": [0, 7, 11, 14, 15, 18, 28, 32, 38, 41, 42, 46, 50, 55, 58, 62, 68, 73, 75, 79, 80, 89, 90, 115, 121, 127, 160, 175, 176, 177, 178, 181, 182, 190, 194, 197, 201, 204, 207, 210, 227, 245, 247, 262, 263, 264, 269], "pure": [0, 11, 18, 24, 51, 56, 77, 80, 83, 99, 124, 165, 184, 185, 187, 190, 194, 214, 232], "It": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 22, 24, 25, 26, 27, 30, 31, 32, 38, 41, 42, 44, 45, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 63, 66, 67, 73, 75, 77, 79, 80, 86, 90, 91, 92, 93, 94, 97, 99, 101, 103, 104, 105, 106, 107, 112, 114, 119, 121, 122, 123, 125, 127, 129, 133, 134, 144, 149, 150, 155, 156, 157, 158, 159, 160, 162, 165, 168, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 197, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 225, 226, 227, 228, 229, 230, 233, 239, 241, 242, 243, 245, 247, 248, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269], "built": [0, 2, 4, 9, 11, 14, 15, 25, 27, 33, 50, 56, 77, 112, 127, 182, 185, 194, 195, 199, 210, 213, 214, 220, 229, 232, 233, 263, 264, 268], "focu": [0, 1, 7, 60, 212, 263], "extens": [0, 7, 11, 14, 15, 18, 41, 50, 56, 62, 66, 77, 86, 109, 127, 182, 184, 185, 186, 187, 188, 189, 190, 194, 204, 206, 210, 212, 213, 226, 227, 236, 262, 269], "eas": [0, 112, 178, 180, 194, 197], "through": [0, 2, 7, 12, 14, 19, 30, 32, 41, 42, 44, 49, 50, 51, 54, 55, 58, 60, 61, 62, 63, 64, 66, 75, 79, 80, 86, 90, 93, 94, 97, 104, 107, 112, 114, 121, 125, 131, 132, 170, 180, 181, 187, 189, 194, 200, 204, 206, 210, 212, 213, 214, 215, 226, 232, 239, 240, 245, 248, 260, 261, 262, 267], "both": [0, 1, 2, 4, 7, 8, 11, 12, 14, 15, 18, 23, 24, 30, 31, 32, 42, 45, 46, 48, 49, 50, 51, 55, 56, 58, 65, 74, 75, 77, 80, 81, 86, 90, 92, 93, 94, 99, 104, 106, 107, 114, 115, 116, 124, 132, 133, 144, 150, 157, 160, 165, 170, 173, 177, 178, 180, 181, 182, 184, 185, 187, 189, 190, 192, 193, 194, 196, 201, 202, 203, 204, 206, 207, 210, 212, 213, 215, 219, 225, 227, 232, 233, 239, 240, 259, 262, 263, 264, 269, 270], "interact": [0, 18, 23, 50, 64, 77, 84, 86, 127, 157, 174, 178, 184, 185, 206, 214, 230, 237, 249, 256, 257, 261, 263, 264, 268, 269], "programmat": [0, 4, 213, 243], "applic": [0, 1, 15, 18, 33, 34, 40, 41, 42, 43, 50, 51, 56, 77, 81, 86, 90, 93, 107, 111, 112, 121, 124, 126, 127, 144, 145, 170, 173, 177, 182, 187, 188, 189, 190, 194, 196, 201, 207, 210, 213, 227, 232, 239, 245, 246, 263], "These": [0, 1, 2, 5, 7, 8, 11, 14, 15, 22, 23, 31, 32, 41, 49, 50, 51, 52, 58, 75, 77, 80, 86, 92, 94, 99, 107, 108, 114, 115, 119, 124, 127, 150, 155, 156, 170, 171, 175, 177, 178, 181, 182, 183, 184, 185, 187, 194, 204, 207, 210, 211, 213, 214, 216, 221, 225, 226, 227, 232, 245, 259, 262, 265, 268, 269], "characterist": [0, 52, 68, 86, 177, 183, 185, 187, 188, 210, 212, 265], "have": [0, 2, 4, 5, 7, 8, 9, 12, 13, 14, 15, 19, 24, 26, 27, 28, 30, 31, 32, 33, 34, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 61, 65, 66, 68, 73, 74, 75, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 97, 99, 100, 102, 103, 107, 109, 112, 113, 114, 119, 121, 124, 127, 144, 146, 149, 153, 155, 157, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 199, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 215, 218, 220, 221, 223, 224, 225, 227, 228, 229, 232, 233, 235, 239, 240, 242, 243, 244, 245, 248, 258, 259, 261, 262, 263, 264, 265, 268, 269, 270], "led": 0, "becom": [0, 1, 2, 5, 7, 12, 14, 15, 18, 41, 46, 49, 50, 51, 54, 57, 73, 78, 86, 92, 174, 177, 181, 182, 184, 191, 194, 197, 203, 210, 213, 214, 220, 235, 241, 243, 269], "popular": [0, 11, 51, 91, 127, 263], "librari": [0, 1, 7, 11, 12, 14, 18, 19, 22, 32, 50, 51, 55, 75, 77, 78, 86, 91, 103, 112, 127, 180, 184, 185, 214, 225, 226, 227, 232, 233, 258, 261, 262, 263], "scientif": [0, 19, 50, 127], "ecosystem": 0, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 132, 133, 134, 135, 137, 139, 140, 141, 143, 144, 146, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270], "paper": [0, 14, 90, 114, 178, 189, 190, 203, 204, 207, 210, 214], "present": [0, 1, 2, 5, 11, 15, 30, 31, 34, 37, 41, 42, 44, 48, 50, 53, 77, 86, 90, 93, 97, 99, 107, 114, 160, 162, 170, 172, 174, 175, 180, 181, 187, 188, 189, 193, 194, 207, 213, 227, 233, 236, 241, 242, 243, 247, 270], "architectur": [0, 127, 184, 225], "descript": [0, 1, 12, 14, 15, 21, 22, 31, 33, 40, 58, 77, 90, 132, 150, 157, 168, 177, 178, 179, 194, 218, 225, 227, 229, 230, 249, 266], "its": [0, 1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 24, 26, 27, 28, 31, 32, 33, 34, 38, 40, 41, 42, 49, 50, 51, 52, 55, 56, 58, 60, 62, 66, 68, 75, 77, 78, 80, 81, 83, 86, 90, 92, 93, 94, 99, 103, 104, 107, 109, 112, 114, 115, 121, 124, 125, 127, 128, 133, 139, 145, 146, 148, 149, 154, 155, 158, 160, 165, 167, 170, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 206, 209, 210, 212, 213, 214, 218, 219, 220, 225, 228, 229, 232, 233, 236, 239, 241, 242, 243, 245, 248, 263, 264, 265, 268, 269], "featur": [0, 1, 2, 3, 11, 12, 15, 18, 19, 22, 50, 52, 54, 81, 92, 112, 121, 127, 176, 194, 210, 214, 223, 227, 230, 246, 262, 263, 267, 269], "discuss": [0, 1, 2, 3, 5, 7, 8, 12, 14, 15, 16, 20, 22, 33, 41, 51, 58, 90, 103, 107, 112, 121, 124, 125, 169, 176, 177, 178, 184, 220, 229, 249, 258, 260, 261, 263, 264, 266, 268, 269], "select": [0, 9, 32, 34, 41, 42, 49, 50, 51, 59, 64, 78, 80, 81, 90, 92, 105, 125, 165, 174, 184, 185, 187, 188, 190, 194, 203, 206, 212], "submodul": [0, 11, 12, 14, 32, 103, 181, 185, 187, 189], "The": [0, 2, 5, 6, 8, 9, 11, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 131, 132, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 246, 247, 248, 255, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270], "supplementari": 0, "materi": [0, 93, 131, 267], "provid": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 24, 30, 31, 32, 33, 39, 40, 41, 42, 48, 49, 50, 52, 54, 58, 59, 61, 66, 69, 72, 73, 77, 78, 80, 81, 83, 86, 87, 89, 90, 91, 92, 94, 97, 103, 104, 107, 109, 111, 114, 115, 116, 121, 122, 123, 124, 125, 127, 128, 133, 134, 154, 162, 163, 164, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 197, 199, 202, 203, 204, 206, 210, 211, 212, 213, 214, 215, 219, 220, 225, 226, 227, 229, 230, 232, 233, 235, 239, 241, 242, 243, 245, 246, 248, 259, 263, 264, 265, 269], "addit": [0, 1, 2, 5, 11, 12, 15, 19, 32, 40, 41, 42, 49, 50, 56, 58, 62, 68, 70, 74, 75, 77, 78, 80, 83, 86, 92, 96, 97, 99, 103, 104, 107, 124, 125, 128, 146, 158, 159, 162, 174, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 194, 200, 203, 204, 206, 207, 210, 211, 212, 213, 214, 225, 226, 227, 229, 230, 232, 233, 235, 242, 261, 263, 264, 265, 268, 269], "exampl": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 15, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 95, 97, 99, 101, 102, 104, 105, 106, 107, 109, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 164, 166, 167, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 199, 200, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 217, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 248, 250, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 267, 268, 270], "further": [0, 7, 11, 13, 27, 31, 51, 58, 62, 75, 77, 82, 83, 86, 92, 93, 96, 97, 104, 106, 107, 121, 125, 132, 177, 179, 180, 181, 187, 189, 190, 203, 204, 206, 210, 214, 220, 262, 263], "outlin": [0, 7, 11, 12, 48, 77, 181, 210], "detail": [0, 1, 3, 4, 7, 11, 12, 13, 14, 15, 16, 22, 31, 41, 50, 52, 55, 58, 75, 76, 77, 78, 81, 86, 90, 97, 106, 107, 112, 125, 127, 132, 150, 154, 170, 172, 179, 180, 181, 187, 189, 196, 201, 206, 207, 208, 210, 211, 214, 219, 220, 225, 228, 230, 231, 233, 243, 244, 245, 246, 249, 259, 261, 265, 266, 268], "volum": [0, 14, 32, 49, 58, 75, 179, 188, 204, 207, 210, 229, 239, 246], "page": [0, 1, 2, 7, 8, 9, 11, 12, 14, 15, 21, 22, 32, 33, 49, 55, 75, 90, 91, 107, 127, 165, 180, 183, 184, 185, 188, 194, 204, 207, 230, 247, 269], "journal": [0, 14, 49, 55, 90, 100, 188, 206, 229], "issn": 0, "2376": 0, "5992": 0, "url": [0, 51, 230], "bsd": [0, 9, 11, 18, 263], "licens": [0, 9, 11, 18, 263], "so": [0, 1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 21, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 39, 41, 42, 44, 46, 48, 50, 51, 54, 56, 57, 58, 60, 62, 63, 64, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 86, 87, 90, 92, 93, 94, 99, 103, 107, 112, 114, 115, 121, 122, 124, 127, 128, 133, 144, 146, 154, 156, 157, 158, 160, 162, 164, 165, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 218, 219, 223, 225, 226, 229, 230, 232, 233, 235, 244, 248, 250, 258, 259, 261, 263, 264, 265, 268, 269, 270], "you": [0, 1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 26, 27, 28, 30, 32, 33, 41, 42, 49, 50, 51, 52, 54, 56, 57, 58, 62, 64, 66, 68, 69, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 90, 91, 92, 99, 101, 102, 103, 107, 108, 109, 112, 113, 122, 124, 125, 127, 149, 154, 155, 158, 160, 169, 170, 172, 175, 177, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 197, 201, 202, 206, 207, 210, 211, 212, 213, 214, 218, 219, 220, 223, 225, 226, 227, 228, 230, 232, 233, 236, 242, 243, 244, 245, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270], "free": [0, 1, 18, 19, 30, 31, 32, 37, 40, 41, 46, 50, 62, 77, 81, 83, 86, 90, 93, 94, 97, 100, 121, 129, 149, 167, 170, 176, 180, 181, 185, 186, 187, 189, 190, 194, 196, 202, 204, 206, 207, 210, 212, 213, 220, 232, 263], "whatev": [0, 1, 2, 41, 50, 51, 206, 210, 211, 213, 233], "like": [0, 1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 22, 32, 33, 35, 41, 42, 49, 50, 51, 54, 55, 56, 58, 60, 70, 73, 77, 78, 80, 81, 83, 84, 85, 86, 90, 91, 92, 99, 103, 109, 112, 114, 124, 125, 127, 128, 142, 144, 154, 155, 158, 159, 160, 165, 169, 170, 173, 175, 177, 180, 181, 182, 184, 185, 186, 187, 189, 190, 192, 193, 194, 197, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 218, 220, 221, 223, 225, 226, 227, 228, 232, 233, 235, 236, 242, 243, 245, 247, 258, 259, 261, 262, 263, 264, 265, 269], "academ": [0, 31, 34, 188], "commerci": [0, 263], "creat": [0, 7, 8, 11, 12, 13, 14, 15, 17, 26, 31, 32, 33, 39, 41, 42, 50, 51, 52, 54, 56, 58, 60, 62, 63, 65, 66, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 99, 104, 106, 107, 109, 112, 115, 116, 118, 120, 123, 124, 125, 127, 128, 137, 139, 141, 145, 148, 149, 150, 154, 155, 157, 158, 160, 163, 166, 169, 170, 172, 173, 177, 178, 180, 181, 183, 184, 185, 187, 189, 190, 191, 194, 201, 206, 210, 213, 214, 215, 219, 220, 225, 226, 227, 229, 230, 232, 233, 239, 243, 245, 259, 261, 264, 265, 268, 269, 270], "fork": [0, 1, 13, 15, 114], "deriv": [0, 1, 3, 6, 14, 30, 31, 32, 34, 40, 41, 52, 56, 57, 58, 60, 67, 72, 73, 75, 77, 78, 80, 83, 86, 99, 103, 105, 106, 107, 111, 114, 115, 116, 118, 121, 122, 123, 124, 125, 149, 158, 162, 165, 166, 169, 170, 172, 173, 174, 175, 177, 180, 181, 182, 185, 187, 189, 190, 191, 194, 196, 204, 206, 210, 211, 212, 216, 217, 221, 227, 239, 241, 242, 260, 263, 270], "long": [0, 14, 15, 16, 32, 42, 49, 50, 51, 53, 63, 75, 77, 78, 80, 86, 90, 93, 94, 114, 174, 190, 191, 194, 203, 204, 212, 214, 226, 235, 241, 261, 264], "copi": [0, 1, 2, 7, 9, 13, 33, 42, 43, 50, 66, 86, 90, 91, 183, 185, 187, 189, 193, 194, 201, 212, 225, 232, 235, 268], "statement": [0, 7, 8, 14, 19, 31, 32, 50, 58, 75, 80, 83, 112, 139, 194, 214, 223, 227, 232], "redistribut": [0, 190], "see": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 15, 20, 25, 26, 27, 28, 30, 31, 32, 36, 38, 41, 42, 43, 46, 49, 51, 52, 55, 56, 57, 58, 62, 66, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 86, 87, 90, 91, 92, 97, 103, 106, 107, 117, 119, 122, 124, 125, 129, 132, 135, 136, 145, 149, 150, 154, 155, 156, 157, 159, 160, 163, 165, 170, 174, 177, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 196, 197, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 219, 220, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 239, 240, 248, 258, 259, 261, 263, 264, 265, 267, 268, 269, 270], "file": [0, 2, 9, 11, 12, 13, 14, 15, 32, 86, 112, 127, 149, 194, 201, 204, 206, 223, 225, 226, 227, 233, 236], "That": [0, 2, 7, 8, 12, 15, 50, 51, 56, 80, 86, 121, 157, 162, 168, 177, 178, 181, 182, 184, 185, 187, 189, 200, 201, 210, 212, 214, 226, 227, 233, 258, 261, 264, 269], "said": [0, 12, 24, 28, 32, 36, 90, 165, 175, 177, 178, 182, 210, 213, 214, 239, 245], "although": [0, 2, 4, 5, 7, 11, 12, 14, 15, 42, 50, 51, 56, 62, 74, 75, 78, 80, 81, 83, 86, 90, 93, 103, 114, 127, 181, 184, 185, 187, 189, 190, 202, 203, 206, 207, 212, 226, 232, 233, 261, 264, 269], "requir": [0, 1, 2, 11, 14, 15, 16, 19, 20, 32, 41, 50, 51, 53, 54, 57, 58, 60, 61, 63, 64, 67, 69, 80, 86, 89, 90, 91, 92, 93, 97, 103, 104, 107, 109, 111, 112, 114, 115, 125, 134, 157, 169, 170, 172, 180, 181, 184, 185, 187, 189, 191, 194, 197, 203, 204, 207, 210, 212, 213, 214, 218, 225, 226, 227, 228, 230, 232, 233, 241, 242, 243, 265, 267], "conveni": [0, 1, 2, 9, 23, 30, 32, 42, 50, 51, 55, 58, 77, 80, 92, 112, 127, 169, 172, 177, 178, 180, 181, 182, 183, 184, 185, 189, 192, 201, 202, 206, 212, 218, 219, 226, 228, 229, 233, 245, 259, 261], "pleas": [0, 1, 12, 14, 15, 17, 19, 28, 30, 50, 58, 62, 75, 90, 103, 107, 112, 121, 124, 125, 132, 133, 154, 169, 178, 179, 180, 181, 187, 188, 202, 206, 207, 212, 213, 233, 239, 243, 266, 270], "when": [0, 1, 2, 4, 5, 7, 8, 9, 11, 14, 15, 16, 19, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 41, 42, 43, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 74, 76, 77, 78, 80, 81, 82, 86, 90, 91, 92, 97, 99, 100, 103, 106, 112, 114, 119, 121, 122, 123, 124, 125, 128, 133, 134, 139, 144, 145, 149, 152, 154, 162, 163, 164, 169, 174, 177, 178, 180, 181, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 218, 219, 223, 225, 226, 227, 228, 230, 232, 233, 235, 236, 238, 242, 259, 261, 263, 264, 269, 270], "your": [0, 1, 2, 9, 11, 12, 13, 14, 15, 17, 19, 21, 26, 50, 51, 77, 78, 86, 91, 92, 99, 103, 122, 124, 178, 180, 194, 201, 206, 210, 213, 214, 232, 233, 259, 263, 265, 266, 268, 269], "work": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 19, 25, 27, 30, 31, 32, 41, 42, 43, 50, 51, 54, 58, 75, 77, 79, 80, 81, 83, 86, 87, 90, 92, 103, 112, 114, 125, 127, 140, 144, 149, 153, 154, 155, 156, 159, 162, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 220, 225, 226, 227, 229, 232, 233, 234, 235, 242, 243, 256, 261, 262, 263, 264, 265, 268, 269], "also": [0, 1, 2, 5, 7, 8, 9, 11, 12, 15, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 39, 41, 42, 49, 51, 52, 54, 55, 56, 57, 58, 62, 66, 68, 70, 72, 73, 75, 77, 79, 80, 81, 84, 86, 87, 90, 91, 92, 93, 94, 96, 97, 99, 103, 104, 105, 106, 107, 111, 112, 114, 115, 116, 119, 122, 123, 124, 125, 127, 128, 129, 133, 143, 144, 146, 150, 154, 159, 160, 163, 165, 169, 170, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 239, 241, 242, 243, 244, 245, 247, 248, 258, 259, 261, 263, 264, 265, 268, 269, 270], "consid": [0, 1, 2, 4, 7, 8, 12, 15, 28, 31, 32, 39, 42, 45, 49, 50, 51, 53, 54, 55, 56, 58, 60, 62, 66, 74, 75, 77, 78, 79, 80, 81, 83, 86, 90, 99, 103, 104, 109, 113, 122, 128, 150, 157, 160, 165, 171, 174, 175, 177, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 197, 201, 206, 207, 210, 211, 212, 213, 214, 225, 227, 232, 241, 243, 245, 247, 248, 261, 265, 269], "contribut": [0, 11, 12, 13, 14, 15, 19, 20, 66, 90, 107, 116, 119, 184, 186, 187, 189, 210, 248], "all": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 75, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 97, 99, 100, 104, 105, 106, 107, 109, 111, 112, 114, 116, 121, 122, 124, 127, 128, 134, 139, 140, 144, 154, 156, 157, 158, 160, 162, 163, 164, 165, 167, 168, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 223, 225, 226, 227, 228, 230, 232, 233, 235, 239, 240, 242, 244, 245, 246, 247, 249, 258, 259, 261, 263, 264, 265, 268, 269, 270], "chang": [0, 1, 2, 7, 9, 14, 15, 16, 19, 31, 32, 33, 41, 42, 46, 49, 50, 51, 54, 56, 58, 64, 65, 75, 77, 80, 86, 90, 92, 93, 99, 109, 112, 114, 118, 134, 145, 155, 165, 166, 169, 175, 177, 178, 179, 180, 181, 182, 183, 187, 190, 191, 194, 201, 202, 203, 204, 206, 210, 212, 213, 214, 215, 225, 232, 233, 243, 245, 258, 261, 264, 268], "back": [0, 31, 32, 46, 49, 50, 51, 56, 58, 65, 66, 72, 74, 75, 77, 78, 81, 90, 91, 99, 154, 174, 177, 184, 186, 189, 190, 192, 194, 204, 210, 212, 215, 216], "we": [0, 1, 2, 5, 7, 8, 11, 12, 13, 14, 15, 21, 25, 26, 27, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 63, 68, 73, 74, 75, 77, 78, 79, 80, 81, 86, 87, 89, 90, 99, 102, 103, 104, 105, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 132, 135, 143, 146, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 165, 169, 170, 172, 173, 175, 177, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 201, 202, 204, 206, 207, 208, 209, 210, 211, 212, 214, 218, 220, 225, 226, 227, 229, 230, 232, 233, 239, 242, 243, 244, 245, 247, 248, 258, 259, 261, 263, 264, 265, 268, 269, 270], "can": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 92, 93, 94, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 116, 119, 121, 122, 123, 124, 125, 127, 128, 132, 133, 134, 139, 141, 144, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 232, 233, 235, 241, 242, 243, 244, 245, 247, 248, 258, 259, 261, 263, 264, 265, 267, 268, 269, 270], "incorpor": [0, 5, 11, 182, 206], "benefit": [0, 11, 32, 103, 124, 174], "end": [0, 1, 2, 5, 7, 8, 11, 14, 21, 30, 31, 32, 40, 41, 46, 48, 49, 50, 51, 55, 56, 58, 60, 62, 66, 75, 78, 80, 81, 83, 86, 90, 92, 93, 94, 111, 114, 115, 118, 122, 123, 124, 125, 165, 170, 174, 175, 178, 179, 183, 187, 194, 197, 200, 202, 203, 205, 207, 210, 211, 212, 213, 214, 215, 225, 227, 228, 230, 232, 235, 245, 259, 263, 265, 269], "develop": [0, 5, 7, 12, 14, 15, 16, 17, 19, 20, 22, 30, 33, 48, 92, 127, 164, 180, 181, 184, 187, 212, 213, 263, 266], "team": [0, 12], "member": [0, 1, 7, 14, 31, 39, 41, 51, 73, 181, 202, 219], "list": [0, 3, 7, 11, 12, 14, 15, 19, 24, 27, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 78, 79, 80, 81, 83, 86, 89, 90, 91, 92, 93, 99, 104, 106, 107, 111, 114, 115, 118, 122, 123, 127, 128, 133, 144, 146, 149, 150, 154, 155, 157, 158, 160, 162, 170, 173, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 258, 262, 263, 265, 268, 269, 270], "github": [0, 1, 9, 11, 12, 13, 15, 19, 30, 50, 66, 77, 86, 164, 202, 213, 265], "found": [0, 7, 8, 9, 11, 12, 14, 15, 30, 33, 41, 42, 44, 46, 48, 50, 51, 52, 60, 61, 66, 75, 77, 86, 90, 99, 105, 106, 107, 108, 124, 127, 164, 177, 181, 182, 183, 184, 189, 190, 191, 194, 196, 197, 200, 201, 204, 207, 210, 211, 212, 213, 214, 218, 232, 233, 235, 236, 268], "zotero": 0, "codebas": [1, 7, 12, 184, 223], "polici": [1, 15, 16, 20, 228, 230], "well": [1, 2, 5, 7, 12, 14, 15, 19, 28, 30, 31, 32, 33, 34, 42, 49, 50, 55, 56, 57, 58, 77, 81, 84, 86, 100, 103, 112, 114, 115, 116, 124, 150, 159, 162, 163, 169, 177, 179, 180, 181, 183, 184, 185, 187, 189, 194, 201, 202, 203, 204, 206, 210, 212, 213, 225, 226, 242, 243, 247, 261, 263, 264, 269], "instruct": [1, 2, 5, 9, 11, 13, 14, 15, 17, 22, 32, 194, 212, 226, 227], "contributor": [1, 9, 11, 15], "how": [1, 2, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 21, 31, 32, 41, 42, 49, 50, 57, 58, 62, 73, 76, 77, 80, 81, 83, 86, 90, 92, 103, 107, 112, 113, 118, 122, 123, 125, 127, 131, 132, 148, 152, 155, 156, 157, 162, 163, 170, 177, 180, 181, 184, 185, 187, 189, 193, 194, 197, 201, 202, 204, 206, 207, 208, 210, 211, 214, 220, 225, 226, 227, 228, 230, 232, 233, 243, 259, 261, 263, 264, 265, 266, 268, 269], "thing": [1, 2, 7, 8, 11, 12, 14, 15, 28, 32, 40, 41, 42, 50, 52, 62, 78, 79, 80, 81, 86, 91, 103, 109, 112, 124, 127, 144, 160, 165, 177, 178, 191, 193, 201, 202, 203, 206, 210, 213, 218, 228, 230, 232, 258, 259, 261, 263, 264, 265, 268, 269], "In": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 19, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42, 49, 50, 51, 52, 54, 55, 56, 57, 58, 63, 65, 66, 67, 68, 75, 77, 78, 79, 80, 81, 83, 86, 87, 90, 92, 94, 99, 103, 106, 107, 112, 115, 116, 121, 122, 123, 124, 125, 127, 128, 146, 148, 149, 150, 155, 159, 160, 163, 165, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 218, 220, 223, 225, 227, 229, 230, 232, 233, 236, 239, 242, 243, 245, 247, 258, 261, 262, 263, 264, 265, 268, 269, 270], "particular": [1, 2, 7, 8, 12, 14, 21, 28, 33, 41, 50, 51, 54, 58, 61, 75, 77, 80, 83, 86, 90, 93, 121, 144, 155, 182, 183, 184, 185, 187, 189, 190, 200, 202, 204, 206, 207, 210, 212, 213, 225, 227, 229, 265, 267, 269], "last": [1, 2, 4, 5, 7, 8, 15, 16, 25, 26, 27, 31, 32, 33, 40, 41, 42, 46, 49, 50, 51, 54, 60, 77, 80, 81, 82, 83, 84, 86, 88, 89, 90, 92, 99, 111, 132, 165, 179, 180, 181, 182, 184, 185, 187, 190, 193, 194, 201, 202, 207, 210, 212, 213, 214, 215, 220, 223, 225, 226, 227, 228, 230, 232, 233, 235, 259, 261, 264, 265], "least": [1, 7, 11, 12, 15, 28, 30, 32, 41, 50, 56, 62, 74, 75, 77, 86, 90, 91, 107, 140, 154, 162, 181, 182, 184, 185, 187, 189, 190, 201, 203, 206, 210, 212, 213, 214, 227, 269], "after": [1, 2, 9, 12, 13, 14, 15, 19, 24, 26, 27, 31, 33, 38, 41, 42, 46, 48, 49, 50, 51, 52, 56, 65, 67, 72, 77, 81, 86, 90, 92, 93, 99, 122, 124, 127, 129, 133, 145, 157, 165, 169, 175, 178, 183, 187, 189, 190, 191, 192, 194, 195, 200, 207, 210, 211, 212, 213, 215, 225, 228, 233, 235, 239, 241, 245, 258, 259, 261, 265, 269], "major": [1, 9, 11, 12, 15, 60, 103, 219, 263, 269], "releas": [1, 9, 15, 50, 77, 81, 92, 124, 180, 219, 230, 233, 264], "includ": [1, 2, 7, 9, 11, 12, 14, 15, 17, 19, 20, 22, 27, 28, 30, 31, 32, 42, 46, 49, 50, 51, 52, 54, 55, 56, 58, 62, 68, 75, 77, 80, 81, 83, 85, 86, 90, 91, 92, 101, 103, 111, 112, 114, 115, 116, 121, 122, 124, 127, 140, 144, 149, 154, 157, 158, 168, 175, 178, 182, 185, 186, 187, 189, 190, 193, 194, 195, 200, 201, 202, 204, 206, 209, 210, 211, 212, 214, 217, 220, 223, 225, 227, 228, 229, 230, 232, 239, 240, 242, 247, 249, 259, 263, 264, 265, 269, 270], "period": [1, 12, 14, 30, 50, 51, 56, 75, 90, 124, 134, 156, 163, 189, 194, 197, 200, 209, 213, 214, 232], "mai": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 19, 21, 23, 28, 30, 31, 32, 33, 41, 42, 43, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 63, 65, 66, 67, 75, 77, 78, 80, 81, 82, 86, 87, 89, 90, 92, 105, 107, 108, 112, 115, 121, 124, 146, 155, 160, 161, 162, 167, 170, 173, 175, 177, 180, 181, 182, 183, 187, 189, 194, 195, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 245, 247, 258, 259, 261, 264, 265, 269, 270], "remov": [1, 7, 12, 25, 26, 41, 44, 48, 50, 54, 56, 65, 66, 75, 80, 81, 86, 90, 93, 104, 118, 120, 124, 144, 160, 185, 187, 190, 192, 193, 194, 206, 207, 210, 212, 213, 215, 216, 226, 227, 228, 230, 232, 233, 258, 269], "updat": [1, 2, 12, 19, 50, 115, 140, 150, 153, 154, 156, 179, 187, 190, 194, 207, 220, 230], "replac": [1, 2, 7, 12, 14, 30, 32, 41, 49, 50, 51, 54, 55, 56, 58, 60, 64, 77, 80, 81, 86, 90, 91, 92, 103, 105, 127, 149, 155, 170, 181, 187, 190, 191, 195, 201, 203, 204, 206, 210, 212, 213, 220, 221, 232, 233, 235, 258, 267], "continu": [1, 5, 8, 12, 14, 15, 30, 32, 40, 42, 44, 50, 55, 56, 58, 75, 78, 81, 90, 96, 97, 155, 158, 174, 185, 187, 190, 207, 209, 210, 218, 260], "dure": [1, 2, 12, 23, 32, 50, 51, 81, 86, 90, 92, 104, 107, 127, 128, 177, 189, 203, 212, 213, 230, 232], "sympydeprecationwarn": [1, 12, 223, 225, 228, 230], "messag": [1, 12, 51, 78, 228, 230], "whenev": [1, 2, 11, 12, 48, 75, 77, 86, 167, 180, 181, 182, 196, 201, 204, 214, 259, 261, 264], "recommend": [1, 2, 7, 9, 13, 14, 19, 21, 31, 32, 50, 51, 54, 81, 103, 122, 127, 154, 170, 177, 182, 183, 184, 185, 191, 207, 210, 213, 219, 223, 230, 242, 243, 267, 270], "doe": [1, 4, 7, 8, 11, 14, 15, 16, 19, 22, 23, 26, 27, 30, 31, 32, 33, 41, 42, 46, 48, 49, 50, 51, 52, 54, 56, 58, 60, 61, 63, 64, 66, 75, 77, 80, 81, 86, 89, 90, 92, 101, 103, 105, 112, 114, 118, 140, 144, 150, 154, 156, 159, 169, 177, 178, 180, 182, 183, 184, 185, 187, 189, 190, 191, 194, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 219, 220, 223, 225, 227, 229, 232, 233, 235, 239, 240, 243, 258, 259, 261, 264, 265, 268, 269, 270], "describ": [1, 2, 7, 8, 12, 14, 15, 31, 33, 40, 41, 42, 44, 45, 48, 49, 50, 51, 55, 58, 60, 65, 66, 75, 77, 81, 86, 89, 90, 99, 103, 107, 109, 111, 112, 115, 116, 118, 120, 121, 122, 123, 124, 125, 139, 160, 164, 165, 169, 170, 175, 177, 178, 181, 184, 187, 189, 195, 201, 204, 206, 207, 210, 213, 214, 218, 227, 232, 233, 239, 240, 245, 259], "below": [1, 2, 7, 9, 11, 12, 14, 15, 19, 30, 31, 32, 40, 41, 42, 50, 51, 55, 57, 58, 59, 60, 66, 67, 73, 75, 77, 81, 86, 89, 90, 92, 93, 94, 99, 104, 107, 111, 112, 114, 115, 116, 117, 122, 123, 124, 127, 154, 160, 165, 170, 178, 179, 180, 181, 183, 190, 194, 195, 197, 203, 206, 207, 210, 211, 213, 214, 225, 227, 232, 233, 235, 243, 245, 248, 249, 265, 269], "each": [1, 2, 7, 9, 11, 12, 27, 28, 30, 31, 32, 33, 34, 41, 42, 46, 50, 51, 52, 53, 54, 55, 56, 58, 60, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 83, 86, 90, 93, 97, 99, 105, 106, 107, 112, 114, 115, 118, 120, 122, 125, 144, 157, 160, 169, 170, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 192, 194, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 223, 225, 227, 229, 232, 233, 235, 239, 240, 241, 243, 245, 247, 259, 262, 264, 269, 270], "given": [1, 2, 5, 7, 9, 11, 12, 15, 24, 26, 27, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 77, 79, 80, 81, 83, 86, 89, 90, 92, 93, 97, 100, 104, 105, 109, 111, 112, 115, 125, 133, 150, 155, 157, 165, 166, 168, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 219, 220, 223, 225, 227, 229, 232, 233, 235, 236, 237, 239, 241, 243, 245, 247, 258, 264, 267, 269, 270], "add": [1, 2, 4, 7, 11, 12, 13, 14, 24, 26, 30, 32, 39, 41, 46, 51, 54, 57, 65, 67, 75, 79, 83, 86, 90, 93, 104, 112, 127, 138, 144, 154, 159, 160, 163, 177, 178, 180, 183, 184, 185, 187, 189, 190, 191, 194, 195, 204, 206, 207, 210, 211, 213, 214, 216, 218, 219, 220, 228, 233, 237, 250, 259, 261, 264, 268, 269], "filter": [1, 4, 12, 50, 51, 75, 132, 190, 223, 225, 230, 232], "modul": [1, 2, 4, 7, 11, 12, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 40, 42, 50, 51, 53, 55, 56, 58, 62, 66, 70, 73, 76, 77, 78, 80, 83, 84, 85, 86, 91, 92, 93, 95, 97, 100, 103, 112, 113, 117, 121, 122, 123, 127, 129, 132, 134, 135, 147, 150, 163, 164, 165, 166, 175, 178, 180, 185, 186, 188, 191, 192, 194, 198, 201, 204, 208, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 241, 243, 245, 246, 247, 248, 249, 255, 257, 258, 261, 263, 269, 270], "For": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 62, 64, 65, 68, 71, 73, 74, 75, 76, 79, 80, 81, 86, 90, 91, 92, 93, 94, 99, 101, 105, 107, 108, 112, 115, 121, 122, 123, 124, 125, 127, 129, 143, 144, 149, 153, 155, 157, 158, 159, 160, 162, 165, 166, 170, 173, 174, 175, 177, 178, 180, 181, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 215, 218, 219, 220, 221, 225, 226, 227, 229, 230, 232, 233, 236, 237, 239, 240, 243, 245, 247, 248, 258, 259, 261, 264, 265, 269, 270], "except": [1, 2, 5, 7, 8, 11, 12, 14, 30, 32, 41, 42, 50, 51, 54, 56, 58, 75, 77, 85, 90, 106, 119, 166, 179, 181, 184, 185, 186, 189, 190, 191, 192, 194, 203, 206, 207, 210, 211, 213, 218, 223, 225, 227, 228, 231, 232, 233, 242, 245, 257, 258, 261, 264, 265], "filterwarn": [1, 12], "ignor": [1, 2, 32, 41, 50, 51, 55, 56, 60, 65, 75, 80, 86, 90, 99, 105, 114, 157, 160, 170, 180, 190, 194, 195, 206, 212, 226, 269], "error": [1, 7, 8, 9, 11, 12, 14, 15, 23, 30, 32, 39, 42, 49, 50, 51, 56, 57, 60, 65, 75, 77, 86, 89, 90, 92, 112, 178, 179, 182, 184, 185, 187, 191, 194, 196, 202, 210, 211, 212, 213, 214, 225, 226, 227, 230, 232, 235, 239, 250, 258], "make": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 20, 23, 26, 27, 28, 30, 32, 33, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 58, 62, 66, 77, 78, 80, 86, 89, 90, 91, 92, 93, 94, 107, 111, 112, 114, 118, 119, 122, 124, 125, 127, 140, 157, 162, 174, 177, 180, 183, 184, 185, 187, 189, 190, 191, 193, 194, 197, 202, 203, 204, 206, 210, 211, 212, 213, 218, 220, 223, 225, 226, 227, 228, 230, 232, 233, 242, 247, 248, 261, 262, 263, 264, 265, 269], "rais": [1, 2, 7, 8, 12, 25, 27, 30, 32, 39, 42, 50, 51, 52, 54, 56, 59, 60, 63, 65, 66, 67, 75, 77, 81, 83, 86, 87, 89, 90, 97, 99, 134, 146, 175, 178, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 196, 202, 206, 209, 210, 211, 212, 213, 214, 218, 220, 223, 225, 227, 230, 232, 233, 235, 236, 245, 265], "want": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 19, 28, 30, 32, 33, 34, 42, 50, 51, 57, 62, 64, 66, 69, 75, 77, 81, 83, 86, 87, 90, 91, 97, 99, 102, 108, 112, 127, 143, 153, 154, 157, 160, 163, 165, 172, 173, 177, 178, 180, 182, 183, 184, 187, 189, 190, 191, 193, 194, 195, 201, 202, 204, 206, 207, 210, 211, 212, 213, 214, 220, 223, 225, 227, 229, 232, 233, 243, 245, 248, 258, 259, 261, 263, 264, 265, 266, 268, 269], "aren": [1, 12, 32, 50, 112, 193, 213], "omit": [1, 7, 14, 32, 42, 49, 50, 51, 75, 77, 80, 86, 162, 194, 195, 202, 204, 212, 218, 227, 232, 259], "regex": 1, "match": [1, 2, 7, 11, 12, 14, 41, 42, 49, 50, 63, 75, 77, 81, 86, 111, 136, 161, 169, 170, 183, 190, 206, 207, 210, 211, 214, 223, 225, 227, 232, 233, 244, 259], "categori": [1, 22, 181, 249, 256], "here": [1, 5, 7, 8, 12, 14, 15, 19, 26, 27, 32, 33, 34, 39, 40, 41, 42, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 66, 67, 68, 72, 73, 75, 77, 80, 81, 86, 89, 90, 91, 92, 93, 99, 103, 107, 112, 113, 114, 118, 119, 120, 122, 124, 125, 127, 128, 150, 155, 160, 169, 174, 175, 177, 178, 180, 181, 184, 185, 187, 189, 190, 191, 194, 195, 201, 203, 204, 206, 207, 210, 212, 213, 214, 218, 219, 226, 227, 229, 230, 232, 233, 243, 245, 247, 258, 259, 261, 263, 264, 265, 267, 268, 269], "regular": [1, 2, 7, 8, 12, 33, 38, 50, 51, 54, 58, 66, 72, 73, 77, 90, 112, 154, 184, 191, 210, 220, 225, 268, 269], "about": [1, 2, 5, 7, 8, 12, 13, 14, 15, 19, 24, 25, 27, 28, 31, 32, 41, 42, 43, 44, 50, 54, 56, 58, 60, 61, 62, 64, 65, 66, 70, 72, 76, 77, 79, 86, 90, 93, 94, 99, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 124, 125, 155, 157, 158, 160, 164, 169, 170, 177, 178, 179, 181, 183, 184, 189, 191, 194, 196, 201, 206, 207, 208, 210, 214, 218, 219, 225, 226, 227, 228, 229, 230, 239, 240, 242, 245, 246, 258, 260, 261, 263, 264, 265, 269], "might": [1, 2, 7, 8, 12, 14, 30, 50, 54, 56, 63, 72, 75, 83, 86, 90, 92, 103, 112, 113, 127, 140, 170, 177, 180, 184, 185, 190, 191, 194, 195, 202, 203, 204, 206, 207, 212, 213, 214, 226, 227, 230, 232, 235, 258, 261, 263, 264, 266, 269], "lead": [1, 7, 8, 49, 50, 56, 60, 77, 80, 86, 90, 101, 108, 144, 170, 178, 182, 185, 187, 189, 190, 191, 194, 201, 203, 206, 210, 213, 227, 230, 235, 262, 269], "becaus": [1, 2, 7, 8, 9, 11, 12, 14, 15, 19, 23, 28, 32, 42, 49, 50, 51, 56, 62, 66, 67, 75, 77, 80, 84, 86, 90, 92, 112, 115, 140, 148, 160, 162, 165, 177, 180, 181, 183, 184, 185, 187, 189, 190, 191, 193, 194, 197, 201, 204, 206, 207, 210, 211, 212, 213, 223, 225, 226, 228, 232, 233, 235, 242, 259, 261, 263, 264, 265, 268, 269, 270], "against": [1, 7, 51, 93, 112, 226], "start": [1, 2, 9, 10, 11, 12, 13, 14, 15, 19, 20, 22, 31, 32, 34, 39, 40, 41, 42, 46, 49, 50, 51, 52, 58, 80, 81, 83, 86, 89, 90, 91, 93, 94, 112, 114, 122, 123, 155, 156, 159, 163, 177, 178, 180, 184, 187, 189, 190, 194, 197, 200, 202, 203, 204, 207, 210, 212, 213, 214, 215, 218, 225, 226, 232, 234, 235, 244, 258, 261, 263], "typic": [1, 11, 12, 46, 58, 75, 90, 99, 104, 109, 113, 169, 178, 180, 182, 187, 191, 204, 226, 227, 243], "span": [1, 14, 79, 86, 93, 94, 189, 194, 230, 265], "multipl": [1, 2, 7, 11, 12, 14, 26, 27, 28, 30, 31, 32, 33, 39, 41, 42, 46, 49, 50, 51, 55, 56, 58, 60, 65, 68, 70, 75, 77, 79, 80, 81, 83, 86, 87, 90, 92, 96, 99, 103, 114, 121, 127, 128, 144, 145, 146, 150, 157, 159, 162, 165, 166, 167, 170, 173, 177, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 194, 199, 200, 202, 203, 204, 206, 207, 210, 211, 213, 214, 215, 218, 220, 223, 227, 228, 229, 230, 232, 233, 235, 239, 243, 258, 259, 261, 262, 264, 265, 270], "line": [1, 2, 5, 7, 12, 14, 19, 31, 32, 41, 42, 46, 51, 60, 61, 62, 64, 65, 66, 67, 72, 75, 77, 78, 79, 86, 90, 93, 97, 100, 112, 114, 119, 140, 170, 174, 175, 177, 179, 180, 194, 197, 204, 206, 210, 214, 215, 223, 225, 226, 227, 230, 233, 235, 245, 248, 261], "should": [1, 2, 4, 7, 8, 9, 11, 13, 14, 15, 16, 22, 23, 25, 27, 30, 31, 32, 33, 41, 42, 43, 44, 46, 49, 50, 51, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 86, 90, 92, 93, 97, 99, 103, 112, 114, 115, 122, 124, 125, 127, 128, 129, 140, 144, 148, 150, 152, 154, 155, 158, 160, 162, 163, 165, 166, 170, 174, 177, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 193, 194, 196, 197, 200, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 218, 219, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 239, 242, 250, 258, 259, 261, 262, 265], "don": [1, 2, 8, 12, 27, 32, 75, 86, 91, 92, 103, 112, 169, 177, 178, 184, 194, 204, 213, 223, 228, 247, 258, 259, 263, 264, 269], "same": [1, 2, 5, 7, 8, 9, 12, 14, 15, 24, 25, 26, 27, 28, 30, 31, 32, 39, 40, 41, 42, 46, 49, 50, 51, 52, 55, 58, 60, 63, 64, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 83, 86, 90, 92, 93, 94, 99, 100, 103, 104, 110, 112, 115, 118, 119, 124, 125, 144, 146, 154, 157, 158, 160, 162, 163, 165, 167, 168, 169, 170, 172, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 219, 220, 221, 223, 225, 227, 228, 229, 230, 232, 233, 235, 239, 240, 242, 243, 247, 259, 261, 264, 265, 268, 269], "unrel": [1, 50, 57, 182, 261], "pattern": [1, 2, 7, 11, 50, 75, 77, 80, 81, 92, 154, 184, 204, 206, 210, 212, 259, 264], "instead": [1, 2, 7, 8, 9, 11, 12, 14, 15, 23, 25, 27, 31, 32, 41, 43, 46, 50, 52, 53, 54, 55, 58, 77, 78, 80, 81, 83, 84, 86, 90, 97, 100, 102, 111, 112, 114, 115, 124, 127, 158, 162, 164, 170, 174, 175, 177, 178, 181, 184, 185, 187, 189, 190, 192, 194, 196, 204, 206, 210, 212, 213, 214, 218, 219, 220, 223, 228, 229, 230, 233, 237, 245, 248, 258, 259, 261, 263, 264, 265, 269, 270], "turn": [1, 7, 15, 32, 50, 56, 58, 65, 75, 84, 119, 122, 175, 181, 189, 191, 194, 201, 202, 204, 206, 207, 210, 225, 232, 247, 261, 263], "do": [1, 2, 5, 7, 8, 10, 11, 12, 14, 15, 19, 22, 23, 26, 27, 28, 30, 31, 32, 33, 42, 46, 49, 50, 51, 52, 53, 56, 58, 60, 62, 65, 66, 69, 75, 77, 78, 80, 81, 83, 84, 86, 87, 90, 91, 96, 99, 103, 107, 109, 111, 112, 113, 115, 119, 122, 127, 132, 135, 140, 144, 149, 152, 154, 156, 162, 164, 165, 168, 169, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 197, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 216, 219, 220, 223, 225, 226, 228, 230, 232, 233, 235, 241, 243, 244, 245, 247, 258, 259, 261, 262, 263, 264, 265, 267, 269], "abov": [1, 2, 5, 8, 9, 11, 12, 14, 15, 30, 31, 32, 33, 34, 40, 41, 42, 46, 49, 50, 54, 55, 58, 60, 63, 66, 67, 75, 77, 80, 81, 86, 90, 91, 92, 94, 99, 103, 107, 109, 111, 112, 114, 115, 116, 121, 123, 124, 125, 128, 155, 157, 160, 170, 175, 177, 178, 180, 181, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 201, 204, 206, 207, 210, 212, 213, 214, 218, 219, 226, 227, 233, 242, 243, 244, 245, 248, 261, 263, 264, 265, 269], "appli": [1, 8, 15, 20, 24, 25, 26, 27, 28, 32, 41, 42, 43, 48, 49, 50, 51, 52, 53, 56, 57, 60, 65, 66, 68, 76, 77, 80, 81, 82, 86, 90, 92, 93, 94, 99, 100, 104, 105, 114, 116, 122, 124, 126, 137, 141, 144, 145, 149, 152, 153, 157, 160, 170, 178, 180, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 200, 201, 202, 203, 205, 206, 210, 211, 212, 213, 214, 215, 218, 225, 228, 232, 239, 240, 243, 265, 268, 269], "If": [1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 19, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 39, 41, 42, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 78, 79, 80, 81, 83, 86, 87, 89, 90, 91, 92, 93, 97, 99, 100, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 122, 123, 124, 125, 127, 128, 133, 137, 141, 144, 150, 154, 155, 156, 157, 158, 160, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 239, 241, 243, 245, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "pytest": [1, 11, 12, 222, 228, 230, 233, 257], "capabl": [1, 7, 30, 32, 50, 54, 62, 75, 90, 93, 94, 121, 127, 180, 191, 194, 213, 262, 263, 269, 270], "either": [1, 2, 7, 8, 9, 11, 14, 15, 24, 28, 30, 31, 34, 42, 49, 50, 51, 54, 55, 56, 58, 65, 67, 73, 75, 77, 78, 80, 81, 86, 90, 99, 104, 107, 108, 111, 112, 123, 125, 127, 144, 150, 157, 160, 162, 174, 178, 180, 182, 183, 184, 185, 187, 189, 190, 194, 196, 201, 202, 203, 204, 207, 210, 211, 212, 213, 214, 215, 218, 219, 226, 232, 233, 239, 247, 261, 264, 265], "them": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 23, 26, 28, 31, 32, 39, 41, 42, 49, 50, 51, 52, 54, 55, 58, 61, 66, 68, 70, 72, 73, 75, 79, 80, 83, 86, 89, 90, 91, 103, 107, 109, 112, 114, 115, 116, 121, 122, 124, 125, 127, 133, 137, 153, 154, 160, 162, 165, 168, 170, 175, 177, 178, 181, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 201, 202, 203, 204, 206, 207, 210, 212, 213, 215, 216, 225, 227, 229, 232, 241, 258, 259, 261, 263, 264, 269], "w": [1, 2, 32, 34, 40, 49, 50, 51, 52, 53, 56, 58, 75, 77, 80, 86, 87, 106, 109, 119, 125, 126, 129, 134, 145, 149, 158, 173, 175, 176, 179, 180, 182, 183, 187, 188, 189, 190, 191, 195, 201, 202, 204, 206, 207, 210, 211, 213, 214, 225, 233, 235, 245, 270], "pythonwarn": 1, "environ": [1, 9, 11, 16, 17, 20, 50, 78, 174, 194, 214, 225, 235, 261, 263, 268], "variabl": [1, 3, 5, 8, 10, 11, 14, 15, 22, 23, 24, 25, 27, 28, 30, 32, 33, 45, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 67, 69, 75, 77, 78, 80, 81, 86, 92, 93, 94, 97, 99, 111, 112, 118, 120, 127, 128, 134, 149, 154, 158, 160, 163, 169, 170, 172, 175, 182, 184, 185, 187, 189, 190, 191, 194, 195, 200, 201, 206, 207, 209, 210, 211, 212, 213, 221, 225, 227, 228, 229, 233, 239, 241, 242, 244, 245, 247, 256, 259, 261, 263, 265, 270], "NOT": [1, 80, 99, 140, 144, 159, 162, 223, 226], "blog": [1, 32, 55, 81, 207, 213], "post": [1, 7, 32, 44, 50, 194, 195, 206, 225, 264], "ned": 1, "batcheld": 1, "issu": [1, 2, 8, 12, 15, 17, 19, 23, 30, 49, 50, 67, 77, 80, 86, 91, 108, 121, 140, 176, 179, 188, 189, 191, 194, 202, 203, 212, 213, 225, 227, 229, 230, 232, 235, 260, 261, 264, 269], "why": [1, 2, 7, 12, 32, 50, 178, 185, 191, 201, 204, 208, 233, 262, 264, 265], "old": [1, 2, 12, 20, 50, 51, 52, 78, 124, 129, 164, 165, 174, 180, 181, 185, 186, 194, 195, 206, 210, 213, 215, 233, 258], "defin": [1, 2, 5, 7, 8, 12, 14, 15, 23, 24, 26, 27, 30, 32, 33, 34, 40, 41, 42, 45, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 73, 75, 77, 78, 81, 83, 86, 90, 94, 97, 103, 104, 106, 109, 111, 112, 114, 118, 120, 121, 125, 127, 128, 131, 137, 139, 141, 146, 149, 155, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 196, 197, 200, 201, 202, 204, 206, 207, 210, 212, 213, 214, 215, 219, 220, 226, 227, 228, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 247, 248, 261, 263, 269], "pars": [1, 42, 50, 83, 112, 191, 193, 249, 257], "parse_mathematica": [1, 11, 92], "more": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 23, 27, 28, 30, 31, 32, 33, 36, 40, 41, 42, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 72, 75, 77, 80, 81, 83, 84, 86, 87, 89, 90, 91, 92, 97, 99, 103, 107, 108, 112, 114, 115, 117, 119, 121, 122, 123, 124, 125, 127, 129, 132, 144, 148, 149, 154, 157, 158, 159, 160, 165, 169, 170, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 206, 207, 210, 211, 212, 213, 214, 225, 227, 228, 229, 232, 233, 235, 239, 242, 246, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270], "comprehens": [1, 7, 18, 188, 202, 214, 258], "additional_transl": 1, "paramet": [1, 2, 12, 15, 24, 25, 27, 30, 32, 33, 41, 42, 46, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 73, 75, 77, 78, 80, 81, 83, 86, 87, 89, 90, 92, 93, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 127, 129, 131, 132, 133, 135, 136, 137, 139, 140, 141, 143, 144, 145, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 178, 179, 180, 182, 183, 185, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 219, 220, 223, 225, 226, 227, 229, 230, 232, 233, 239, 240, 241, 242, 243, 248, 259, 264], "avail": [1, 2, 7, 9, 11, 13, 15, 19, 22, 31, 32, 41, 42, 49, 50, 55, 58, 77, 86, 91, 92, 112, 124, 127, 184, 185, 187, 190, 194, 195, 200, 202, 204, 206, 207, 212, 213, 214, 215, 219, 220, 225, 232, 233, 238, 239, 256, 261, 268], "translat": [1, 11, 32, 41, 50, 59, 61, 65, 67, 91, 92, 99, 102, 106, 107, 118, 120, 125, 177, 180, 194, 210, 212, 226, 227, 233, 235, 243], "rule": [1, 5, 7, 12, 15, 32, 41, 42, 49, 50, 58, 73, 75, 77, 80, 81, 86, 93, 106, 112, 141, 144, 165, 170, 175, 178, 179, 191, 193, 194, 195, 200, 204, 205, 206, 210, 220, 232, 233, 245, 246, 261, 264], "convert": [1, 2, 7, 8, 9, 11, 12, 24, 28, 32, 34, 42, 46, 50, 51, 54, 55, 56, 64, 65, 67, 70, 71, 74, 78, 80, 81, 86, 89, 90, 92, 99, 154, 157, 163, 164, 165, 167, 173, 180, 181, 183, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 202, 203, 204, 206, 207, 211, 213, 214, 215, 216, 219, 225, 226, 232, 233, 235, 237, 241, 260, 261, 264, 269], "ones": [1, 11, 12, 19, 32, 41, 46, 50, 75, 77, 80, 81, 83, 86, 89, 90, 112, 133, 154, 160, 183, 187, 197, 207, 210, 215, 221, 227, 235, 239, 243, 265, 268], "specifi": [1, 7, 14, 15, 31, 32, 33, 45, 49, 50, 51, 52, 53, 56, 58, 59, 63, 66, 75, 77, 79, 80, 81, 83, 86, 90, 92, 93, 94, 99, 104, 107, 111, 112, 114, 115, 116, 118, 121, 122, 123, 124, 125, 127, 128, 144, 149, 154, 155, 157, 158, 163, 169, 170, 172, 173, 175, 177, 178, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 196, 197, 200, 201, 202, 204, 206, 210, 211, 212, 213, 214, 215, 219, 220, 221, 225, 226, 227, 232, 233, 239, 240, 241, 244, 247, 256, 265], "convers": [1, 7, 14, 15, 32, 50, 70, 92, 124, 164, 182, 183, 184, 185, 187, 189, 191, 194, 207, 219, 226, 239], "sub": [1, 2, 7, 8, 14, 32, 49, 56, 58, 59, 60, 61, 62, 63, 64, 66, 77, 80, 81, 83, 86, 90, 92, 93, 94, 99, 103, 105, 112, 114, 115, 118, 119, 124, 127, 157, 158, 163, 170, 179, 181, 183, 184, 185, 190, 194, 201, 202, 206, 207, 210, 211, 212, 214, 225, 226, 228, 250, 258, 259, 261], "output": [1, 2, 5, 7, 11, 14, 15, 31, 32, 50, 51, 58, 74, 77, 78, 80, 81, 83, 86, 90, 91, 92, 96, 99, 107, 111, 112, 119, 124, 127, 128, 132, 133, 144, 156, 160, 169, 170, 173, 174, 175, 178, 184, 187, 190, 194, 195, 204, 206, 207, 208, 209, 210, 212, 214, 219, 225, 226, 227, 229, 232, 233, 239, 261, 263, 264, 265, 268, 269, 270], "fail": [1, 7, 8, 9, 11, 12, 14, 15, 32, 41, 42, 46, 49, 50, 54, 56, 74, 75, 77, 78, 86, 87, 90, 92, 114, 150, 155, 174, 180, 183, 184, 185, 187, 189, 190, 194, 201, 204, 210, 212, 214, 223, 225, 232, 233, 265], "recogn": [1, 2, 50, 51, 55, 65, 90, 93, 100, 182, 185, 193, 202, 203, 212, 219, 261], "logic": [1, 7, 20, 25, 26, 27, 28, 31, 50, 52, 75, 77, 90, 152, 154, 155, 159, 194, 196, 202, 210, 214, 232, 261, 262, 263, 265], "mean": [1, 2, 7, 8, 11, 12, 14, 15, 28, 33, 42, 49, 50, 51, 52, 68, 75, 77, 78, 80, 81, 84, 86, 90, 103, 160, 162, 165, 170, 174, 177, 180, 181, 182, 184, 187, 189, 193, 194, 204, 206, 207, 210, 212, 213, 214, 215, 216, 218, 219, 225, 232, 243, 258, 259, 261, 263, 264, 265, 269, 270], "form": [1, 5, 7, 12, 15, 24, 27, 28, 29, 30, 32, 33, 40, 41, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 66, 70, 72, 73, 75, 77, 79, 81, 83, 85, 86, 90, 92, 93, 94, 96, 99, 103, 104, 106, 107, 108, 111, 112, 114, 115, 118, 120, 121, 122, 123, 125, 127, 128, 137, 140, 141, 142, 144, 154, 155, 158, 160, 162, 165, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 202, 203, 204, 206, 207, 211, 212, 213, 214, 217, 219, 220, 225, 226, 232, 239, 241, 242, 244, 245, 247, 252, 253, 259, 263, 264, 265, 268, 269, 270], "similar": [1, 2, 5, 7, 12, 13, 42, 49, 50, 51, 54, 55, 56, 58, 61, 66, 67, 71, 80, 86, 99, 112, 114, 115, 124, 125, 158, 175, 177, 178, 182, 184, 185, 187, 191, 201, 203, 204, 206, 210, 212, 215, 220, 223, 226, 229, 230, 239, 240, 242, 243, 247, 258, 263, 264, 265, 267, 269], "full": [1, 2, 7, 12, 14, 15, 17, 18, 27, 30, 32, 41, 42, 50, 54, 58, 62, 63, 77, 83, 86, 92, 122, 123, 170, 184, 187, 188, 190, 194, 196, 206, 207, 263, 269], "return": [1, 2, 5, 7, 8, 11, 12, 14, 15, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 82, 83, 86, 87, 89, 90, 92, 93, 97, 99, 100, 101, 102, 104, 105, 107, 108, 109, 111, 112, 114, 115, 119, 122, 124, 125, 127, 129, 131, 132, 133, 134, 136, 137, 141, 144, 145, 146, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 214, 215, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 239, 241, 243, 245, 258, 259, 264, 265, 268, 269, 270], "encod": [1, 12, 34, 42, 48, 51, 80, 186, 194, 225, 229, 232], "node": [1, 30, 44, 50, 77, 92, 105, 136, 161, 170, 179, 184, 194, 201, 213, 218, 229, 251, 264, 268], "syntax": [1, 2, 12, 14, 15, 25, 27, 42, 50, 77, 92, 112, 127, 157, 180, 184, 193, 194, 206, 212, 216, 235, 251, 259, 261, 263, 268, 270], "tree": [1, 4, 10, 41, 44, 50, 92, 105, 112, 152, 155, 170, 186, 190, 201, 203, 206, 213, 216, 218, 229, 232, 235, 251, 257, 260], "suppos": [1, 8, 42, 49, 50, 51, 57, 75, 181, 183, 187, 189, 190, 194, 201, 204, 210, 212, 223, 232, 243, 248, 261, 263, 269], "maximum": [1, 2, 30, 32, 33, 41, 42, 50, 56, 77, 86, 90, 93, 114, 157, 165, 180, 185, 187, 190, 194, 201, 202, 206, 207, 210, 213, 214, 229, 232], "valu": [1, 2, 5, 7, 11, 12, 14, 15, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 78, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 99, 101, 104, 106, 107, 108, 109, 111, 112, 114, 124, 127, 129, 133, 136, 139, 144, 146, 149, 152, 154, 155, 156, 157, 160, 161, 163, 164, 165, 170, 171, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 192, 194, 195, 200, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 225, 227, 228, 232, 233, 235, 241, 243, 245, 248, 259, 261, 264], "multipli": [1, 2, 24, 28, 32, 41, 50, 61, 65, 72, 79, 81, 86, 90, 107, 115, 123, 124, 125, 137, 146, 160, 165, 166, 181, 182, 183, 185, 187, 189, 190, 194, 196, 203, 204, 207, 210, 215, 232, 242, 261, 264], "minimum": [1, 12, 30, 32, 41, 42, 44, 46, 50, 51, 54, 56, 86, 103, 107, 114, 144, 169, 180, 182, 187, 213, 214, 228, 259], "previou": [1, 12, 14, 34, 39, 40, 41, 42, 45, 50, 56, 77, 81, 89, 104, 124, 162, 177, 178, 187, 200, 207, 211, 215, 232, 233, 262, 264, 269], "wai": [1, 2, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 23, 31, 33, 34, 39, 41, 42, 43, 46, 50, 52, 55, 58, 66, 70, 74, 75, 77, 79, 83, 86, 89, 90, 92, 93, 103, 107, 109, 111, 112, 115, 117, 118, 121, 124, 140, 154, 157, 158, 163, 165, 168, 169, 170, 172, 173, 175, 177, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 201, 204, 206, 207, 210, 211, 213, 215, 216, 219, 220, 223, 227, 229, 232, 233, 236, 239, 242, 243, 244, 245, 247, 258, 259, 261, 262, 263, 264, 269, 270], "wa": [1, 2, 7, 11, 12, 39, 41, 42, 44, 50, 51, 52, 58, 63, 86, 90, 92, 103, 104, 112, 114, 115, 124, 125, 155, 165, 177, 178, 179, 181, 187, 189, 190, 191, 193, 194, 203, 204, 206, 210, 212, 214, 223, 225, 228, 230, 232, 233, 259, 261, 263, 264, 267], "x": [1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 39, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 97, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 132, 134, 135, 136, 137, 138, 140, 141, 144, 149, 150, 155, 157, 158, 159, 160, 161, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 225, 226, 227, 228, 230, 232, 233, 235, 239, 241, 242, 243, 244, 245, 247, 248, 258, 259, 261, 263, 264, 265, 268, 269, 270], "max": [1, 32, 41, 42, 50, 57, 58, 60, 77, 86, 90, 92, 93, 180, 189, 190, 194, 201, 203, 204, 233], "min": [1, 42, 46, 50, 55, 57, 86, 92, 180, 189, 194, 200, 210], "21": [1, 14, 36, 41, 50, 53, 55, 63, 64, 72, 86, 90, 92, 93, 125, 180, 185, 187, 188, 189, 191, 193, 194, 200, 210, 212, 214, 215, 269], "now": [1, 2, 5, 7, 8, 9, 10, 11, 13, 15, 19, 31, 32, 42, 50, 51, 58, 61, 66, 67, 72, 74, 75, 79, 86, 90, 99, 104, 111, 112, 116, 119, 121, 127, 128, 163, 165, 170, 174, 177, 178, 181, 182, 184, 187, 190, 191, 195, 202, 203, 204, 206, 207, 210, 212, 213, 214, 215, 220, 225, 226, 233, 243, 244, 261, 263, 264, 269, 270], "number": [1, 4, 7, 11, 12, 13, 14, 15, 24, 26, 27, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 55, 56, 58, 60, 63, 64, 65, 66, 67, 69, 76, 77, 78, 79, 80, 81, 83, 86, 87, 89, 90, 91, 92, 94, 97, 99, 100, 101, 103, 107, 108, 111, 112, 115, 124, 125, 127, 133, 136, 139, 140, 143, 144, 145, 146, 148, 149, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 190, 191, 194, 196, 200, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 215, 219, 220, 225, 227, 229, 232, 235, 239, 241, 242, 244, 245, 247, 250, 258, 259, 261, 263, 264, 265, 269], "just": [1, 2, 7, 8, 10, 12, 14, 15, 19, 28, 31, 32, 41, 48, 50, 51, 52, 73, 75, 77, 78, 79, 80, 86, 90, 91, 101, 103, 104, 109, 112, 115, 119, 124, 125, 127, 140, 145, 150, 160, 165, 169, 174, 175, 177, 181, 183, 184, 185, 187, 189, 193, 194, 201, 202, 203, 204, 206, 210, 213, 223, 225, 227, 228, 230, 244, 245, 247, 258, 259, 261, 262, 263, 264, 265, 269, 270], "wrapper": [1, 11, 26, 28, 32, 42, 50, 58, 86, 124, 172, 174, 183, 184, 187, 194, 201, 210, 213, 214, 226, 230, 232], "around": [1, 2, 8, 11, 12, 14, 15, 19, 30, 39, 42, 50, 51, 52, 54, 56, 59, 66, 70, 89, 90, 104, 121, 124, 128, 178, 184, 187, 189, 194, 196, 201, 205, 207, 210, 213, 214, 225, 239, 240, 259, 261, 263], "other": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 18, 20, 24, 28, 31, 32, 33, 41, 42, 43, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 75, 77, 80, 81, 83, 86, 90, 91, 92, 93, 94, 99, 103, 104, 106, 112, 113, 115, 116, 121, 124, 125, 127, 129, 132, 133, 134, 144, 155, 157, 158, 159, 160, 163, 165, 166, 167, 169, 170, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 220, 221, 223, 226, 227, 228, 229, 232, 233, 239, 241, 242, 245, 247, 249, 258, 259, 261, 263, 264, 265, 269], "is_perfect_squar": 1, "ntheori": [1, 28, 41, 50, 51, 187, 190, 207, 232, 254], "primetest": [1, 50, 90], "is_squar": [1, 50, 81, 90], "is_prim": [1, 7, 50, 181], "isprim": [1, 28, 51, 90], "final": [1, 7, 12, 14, 15, 31, 42, 49, 50, 56, 58, 75, 77, 80, 86, 90, 94, 97, 106, 107, 114, 118, 120, 121, 122, 125, 140, 152, 155, 157, 158, 160, 162, 163, 165, 170, 177, 178, 181, 184, 187, 189, 196, 202, 203, 204, 206, 207, 210, 212, 213, 220, 233, 262, 263, 264], "divid": [1, 41, 49, 50, 51, 66, 86, 90, 164, 165, 182, 184, 185, 187, 189, 190, 194, 210, 229, 264], "check": [1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 26, 27, 30, 31, 32, 36, 39, 41, 42, 43, 48, 49, 50, 51, 55, 58, 62, 73, 75, 79, 80, 81, 83, 86, 87, 90, 99, 104, 105, 112, 124, 127, 140, 148, 160, 162, 163, 168, 175, 176, 180, 181, 183, 184, 185, 187, 189, 190, 196, 202, 204, 206, 210, 211, 212, 213, 214, 218, 219, 223, 225, 227, 230, 232, 241, 245, 261, 269], "specif": [1, 7, 9, 13, 14, 15, 41, 42, 50, 51, 52, 58, 62, 77, 79, 81, 86, 104, 106, 107, 111, 112, 121, 127, 129, 165, 178, 180, 181, 185, 187, 189, 190, 193, 194, 195, 200, 206, 207, 210, 211, 212, 214, 220, 225, 226, 227, 232, 251, 265, 269], "bottom_up": 1, "interactive_travers": 1, "postorder_travers": [1, 264], "preorder_travers": [1, 264], "differ": [1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 20, 22, 23, 31, 32, 33, 39, 40, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 58, 61, 63, 65, 66, 70, 72, 74, 75, 77, 78, 79, 80, 83, 86, 90, 91, 92, 93, 97, 103, 104, 109, 112, 114, 117, 121, 124, 125, 128, 132, 133, 145, 146, 154, 155, 158, 160, 162, 165, 169, 170, 171, 173, 174, 175, 178, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 201, 202, 203, 206, 207, 210, 211, 212, 213, 214, 215, 218, 220, 223, 225, 226, 227, 228, 229, 230, 232, 233, 239, 241, 245, 246, 247, 250, 260, 261, 263, 264, 265, 268, 269], "top": [1, 12, 14, 15, 32, 49, 50, 51, 66, 67, 77, 80, 86, 93, 94, 111, 155, 162, 184, 194, 204, 210, 227, 228, 233, 248, 264], "level": [1, 2, 7, 8, 12, 14, 15, 32, 41, 48, 50, 56, 58, 77, 80, 86, 90, 103, 115, 127, 155, 160, 165, 169, 172, 178, 180, 183, 184, 186, 192, 194, 203, 207, 213, 214, 218, 226, 227, 232, 264, 265, 267], "namespac": [1, 11, 14, 23, 32, 33, 50, 185, 207, 210, 211, 225, 227, 228, 233], "gener": [1, 2, 5, 7, 8, 9, 12, 16, 19, 20, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 64, 66, 68, 73, 75, 77, 78, 79, 80, 83, 86, 90, 91, 92, 99, 103, 104, 106, 107, 108, 111, 112, 114, 115, 116, 118, 120, 121, 123, 124, 125, 127, 128, 132, 143, 144, 145, 146, 149, 154, 155, 158, 159, 160, 165, 167, 169, 170, 171, 173, 174, 175, 177, 179, 180, 181, 182, 183, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 200, 203, 204, 206, 207, 208, 210, 211, 212, 214, 219, 220, 226, 227, 229, 230, 231, 232, 233, 239, 242, 243, 245, 246, 247, 259, 261, 262, 263, 264, 265, 269, 270], "ani": [1, 2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 19, 25, 27, 28, 29, 30, 31, 32, 33, 39, 40, 41, 42, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62, 65, 66, 67, 75, 77, 78, 80, 81, 84, 86, 87, 90, 92, 93, 94, 99, 101, 104, 107, 108, 109, 111, 112, 121, 123, 124, 125, 128, 129, 133, 146, 149, 154, 155, 158, 160, 162, 165, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 216, 219, 220, 225, 226, 228, 229, 230, 232, 233, 239, 242, 243, 244, 245, 247, 248, 258, 259, 261, 264, 265, 268, 269, 270], "name": [1, 2, 7, 9, 11, 12, 13, 14, 15, 23, 26, 27, 31, 32, 33, 37, 40, 43, 46, 49, 50, 51, 52, 56, 57, 58, 60, 63, 75, 77, 78, 79, 83, 86, 90, 92, 93, 104, 106, 109, 111, 112, 114, 127, 131, 140, 155, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 178, 180, 181, 182, 184, 185, 187, 189, 191, 194, 200, 204, 206, 207, 210, 211, 213, 214, 219, 220, 223, 225, 226, 227, 228, 233, 235, 236, 237, 239, 242, 245, 258, 261, 264, 265, 269], "reli": [1, 2, 11, 32, 86, 91, 96, 187, 193, 194, 201, 206, 213, 228, 233, 265], "due": [1, 5, 9, 14, 30, 32, 40, 41, 50, 52, 67, 86, 90, 112, 114, 124, 133, 160, 175, 178, 184, 190, 194, 197, 207, 209, 211, 214, 230, 241, 247, 269], "intern": [1, 2, 7, 8, 12, 30, 32, 33, 41, 50, 53, 54, 55, 58, 66, 67, 70, 76, 82, 86, 90, 94, 97, 114, 124, 133, 154, 155, 165, 181, 183, 185, 186, 188, 190, 192, 194, 204, 206, 208, 211, 212, 213, 214, 218, 220, 223, 227, 229, 232, 264, 268], "refactor": [1, 210, 218, 229], "tr": [1, 33, 41, 194, 203], "quantum": [1, 101, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 179, 255], "onli": [1, 2, 4, 5, 7, 8, 9, 12, 14, 15, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 67, 68, 73, 75, 77, 78, 79, 80, 81, 86, 87, 90, 91, 92, 97, 99, 105, 112, 114, 115, 117, 118, 120, 122, 124, 125, 128, 133, 135, 154, 155, 159, 160, 162, 164, 165, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 239, 241, 243, 245, 247, 248, 258, 259, 261, 262, 264, 265, 269, 270], "better": [1, 2, 7, 8, 9, 11, 12, 14, 31, 32, 42, 50, 54, 58, 77, 80, 99, 112, 140, 164, 168, 180, 183, 184, 185, 197, 201, 202, 203, 204, 210, 211, 212, 213, 214, 226, 232, 233, 263, 269], "than": [1, 2, 5, 6, 7, 8, 9, 11, 12, 14, 15, 23, 28, 32, 33, 35, 41, 42, 43, 49, 50, 51, 54, 55, 56, 57, 58, 59, 64, 65, 66, 68, 72, 75, 77, 79, 80, 81, 83, 86, 87, 89, 90, 91, 92, 97, 99, 103, 107, 111, 112, 115, 118, 134, 140, 154, 157, 158, 160, 169, 178, 179, 182, 183, 184, 185, 187, 190, 191, 192, 194, 197, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 221, 226, 227, 229, 232, 233, 235, 236, 258, 259, 261, 262, 263, 264, 265, 267, 269], "ever": [1, 56, 178, 181, 190, 204, 210, 227, 230, 264], "intend": [1, 7, 11, 12, 14, 50, 51, 61, 70, 75, 90, 92, 105, 155, 184, 185, 189, 192, 207, 210, 211, 223, 228, 258], "support": [1, 2, 11, 12, 13, 14, 15, 19, 24, 25, 26, 27, 30, 31, 32, 42, 50, 54, 57, 58, 60, 74, 77, 83, 86, 90, 91, 92, 93, 94, 96, 99, 103, 112, 127, 155, 170, 177, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 199, 200, 201, 202, 206, 210, 211, 212, 213, 214, 215, 219, 223, 225, 226, 227, 233, 243, 245, 259, 261, 264, 268], "necessari": [1, 2, 7, 9, 11, 12, 14, 16, 30, 31, 41, 42, 50, 60, 75, 77, 80, 86, 90, 107, 114, 121, 180, 182, 184, 189, 190, 197, 203, 206, 210, 211, 212, 213, 214, 215, 220, 225, 227, 232, 233, 239, 262, 267], "remain": [1, 12, 26, 27, 32, 41, 42, 44, 46, 50, 51, 56, 75, 81, 90, 92, 100, 112, 159, 175, 177, 178, 189, 190, 191, 200, 203, 204, 210, 211, 214, 216, 220, 229, 232, 233, 242, 247, 258, 261, 263, 264, 265], "helper": [1, 30, 32, 41, 45, 48, 50, 75, 78, 79, 145, 147, 156, 191, 201, 204, 207, 210, 211, 213, 226, 257], "place": [1, 2, 7, 15, 16, 31, 42, 43, 50, 51, 56, 66, 82, 86, 89, 90, 92, 99, 127, 128, 188, 189, 194, 195, 201, 203, 206, 210, 229, 232, 258, 265, 269], "were": [1, 2, 7, 12, 15, 31, 42, 44, 50, 51, 56, 67, 75, 81, 86, 90, 91, 92, 103, 111, 124, 169, 175, 178, 181, 187, 188, 189, 190, 193, 194, 195, 203, 206, 212, 232, 233, 235, 261, 263, 264, 268, 269], "order": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 66, 67, 69, 72, 75, 77, 78, 79, 80, 81, 86, 87, 90, 91, 92, 93, 94, 99, 100, 103, 107, 111, 112, 113, 114, 122, 123, 124, 125, 133, 137, 141, 144, 154, 155, 156, 157, 158, 159, 160, 165, 169, 170, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 200, 202, 205, 206, 207, 211, 212, 213, 214, 215, 216, 219, 220, 221, 225, 226, 227, 229, 232, 233, 235, 239, 240, 242, 243, 248, 259, 261, 262, 264, 268, 269, 270], "default_sort_kei": [1, 31, 39, 218], "addition": [1, 11, 14, 50, 122, 158, 178, 187, 194, 214, 223, 230, 242], "two": [1, 2, 5, 7, 8, 11, 12, 14, 15, 24, 30, 31, 32, 33, 35, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 75, 77, 79, 80, 81, 83, 86, 90, 91, 93, 94, 96, 99, 100, 103, 104, 106, 107, 119, 121, 122, 124, 125, 132, 133, 134, 139, 140, 144, 146, 149, 150, 155, 156, 157, 158, 159, 160, 162, 165, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 219, 229, 232, 233, 239, 241, 243, 244, 245, 247, 258, 259, 262, 264, 265, 269], "meant": [1, 2, 7, 14, 15, 32, 50, 58, 63, 77, 90, 112, 127, 180, 185, 202, 206, 211, 243, 264], "repres": [1, 2, 4, 7, 8, 11, 24, 26, 28, 31, 32, 33, 34, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 55, 56, 57, 58, 60, 61, 63, 65, 66, 67, 72, 73, 76, 77, 79, 80, 81, 83, 86, 90, 92, 93, 94, 96, 97, 99, 104, 106, 107, 109, 111, 112, 114, 115, 116, 119, 121, 122, 123, 124, 125, 127, 129, 131, 132, 134, 146, 147, 149, 153, 154, 157, 158, 160, 162, 165, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 190, 192, 194, 196, 197, 200, 201, 202, 204, 206, 207, 210, 212, 213, 214, 216, 218, 219, 220, 227, 229, 232, 233, 239, 241, 245, 247, 259, 261, 263, 264, 269, 270], "index": [1, 2, 9, 11, 24, 32, 37, 39, 41, 42, 46, 49, 50, 51, 52, 56, 58, 61, 66, 75, 77, 80, 81, 83, 86, 89, 90, 99, 111, 112, 127, 128, 129, 131, 133, 134, 144, 153, 155, 157, 160, 165, 170, 180, 181, 185, 189, 190, 191, 194, 199, 200, 204, 212, 214, 215, 217, 218, 220, 221, 226], "matrixel": [1, 32], "howev": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 25, 27, 32, 41, 42, 46, 49, 50, 51, 52, 55, 56, 58, 60, 75, 77, 80, 81, 86, 90, 91, 92, 93, 112, 124, 128, 160, 178, 180, 181, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 201, 202, 203, 204, 206, 210, 211, 212, 213, 225, 226, 233, 242, 243, 247, 258, 261, 263, 265, 269, 270], "without": [1, 2, 7, 11, 12, 14, 15, 19, 26, 28, 29, 32, 49, 50, 51, 52, 54, 58, 75, 77, 78, 81, 83, 86, 99, 100, 112, 117, 119, 123, 124, 160, 165, 169, 170, 171, 177, 180, 183, 184, 187, 190, 194, 196, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 216, 219, 220, 223, 225, 226, 227, 230, 232, 233, 235, 241, 244, 265, 269], "matrixsymbol": [1, 4, 7, 28, 29, 32, 50, 81, 83, 86, 194, 214, 216], "diff": [1, 5, 14, 30, 32, 55, 56, 57, 58, 67, 72, 83, 86, 103, 105, 115, 127, 158, 170, 172, 174, 175, 178, 180, 185, 190, 193, 194, 204, 210, 211, 212, 215, 216, 221, 242, 245, 259, 263, 270], "ad": [1, 7, 9, 14, 15, 24, 31, 32, 34, 40, 41, 50, 51, 61, 65, 72, 75, 79, 90, 92, 103, 104, 112, 113, 127, 134, 162, 165, 171, 179, 180, 189, 191, 193, 194, 196, 204, 207, 210, 213, 214, 216, 219, 220, 225, 241, 261], "solv": [1, 2, 5, 7, 12, 14, 20, 32, 34, 46, 49, 50, 58, 63, 75, 77, 81, 82, 86, 93, 95, 107, 108, 112, 115, 118, 120, 121, 122, 124, 127, 163, 183, 186, 187, 191, 192, 193, 196, 206, 207, 208, 209, 210, 211, 214, 255, 259, 260, 263, 265, 268], "veri": [1, 2, 4, 7, 10, 11, 12, 14, 32, 46, 50, 51, 54, 55, 60, 62, 68, 72, 75, 77, 80, 86, 90, 99, 103, 112, 115, 127, 132, 165, 177, 178, 181, 184, 187, 189, 190, 191, 193, 194, 195, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 225, 226, 227, 233, 258, 261, 264, 269], "problem": [1, 2, 5, 7, 8, 15, 21, 34, 44, 46, 50, 51, 62, 75, 77, 81, 86, 90, 93, 95, 100, 103, 112, 115, 116, 119, 121, 122, 169, 177, 178, 181, 182, 186, 187, 204, 206, 207, 210, 213, 229, 232, 246, 255, 259, 261, 265], "layer": [1, 99, 187, 233], "structur": [1, 4, 7, 15, 29, 31, 32, 38, 41, 42, 48, 50, 75, 77, 80, 81, 86, 93, 94, 111, 121, 158, 160, 180, 181, 184, 187, 189, 190, 191, 206, 208, 210, 212, 213, 214, 218, 219, 227, 229, 232, 233, 261, 269], "alreadi": [1, 2, 7, 11, 12, 19, 41, 42, 50, 51, 57, 59, 60, 63, 64, 66, 75, 77, 81, 87, 90, 100, 104, 112, 124, 129, 155, 157, 160, 175, 177, 178, 180, 183, 184, 187, 189, 193, 197, 203, 204, 206, 210, 213, 214, 220, 243, 245, 259, 261, 262, 263, 267, 268, 269, 270], "allow": [1, 2, 7, 11, 12, 15, 28, 31, 32, 33, 34, 41, 43, 46, 49, 50, 51, 54, 58, 60, 61, 62, 75, 78, 80, 81, 83, 84, 86, 90, 91, 92, 94, 107, 112, 114, 121, 124, 125, 127, 132, 144, 160, 164, 165, 166, 178, 180, 181, 184, 185, 187, 189, 190, 191, 194, 199, 201, 202, 203, 206, 207, 210, 212, 213, 214, 215, 219, 225, 228, 230, 232, 233, 243, 261, 264], "one": [1, 2, 5, 7, 8, 11, 12, 14, 15, 23, 24, 27, 28, 30, 31, 32, 34, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 103, 104, 106, 107, 112, 113, 115, 124, 125, 127, 129, 132, 133, 134, 140, 145, 154, 158, 160, 162, 163, 165, 168, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 218, 220, 221, 225, 226, 227, 229, 232, 233, 235, 239, 243, 245, 247, 258, 259, 261, 263, 264, 265, 267, 268, 269], "desir": [1, 2, 5, 14, 23, 41, 42, 50, 51, 53, 54, 55, 56, 60, 64, 66, 80, 81, 86, 89, 90, 91, 107, 108, 109, 111, 121, 124, 145, 170, 177, 178, 183, 185, 187, 189, 190, 191, 194, 195, 197, 202, 206, 210, 212, 213, 226, 228, 229, 232, 245, 258], "g": [1, 2, 7, 8, 9, 11, 12, 13, 15, 30, 31, 32, 33, 35, 38, 40, 41, 42, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 66, 67, 68, 70, 73, 76, 77, 79, 80, 81, 86, 90, 92, 93, 99, 100, 104, 109, 111, 112, 114, 115, 116, 118, 119, 120, 124, 125, 127, 128, 140, 144, 149, 155, 157, 158, 160, 163, 165, 166, 170, 175, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 206, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 225, 226, 227, 228, 230, 232, 233, 234, 235, 247, 259, 264, 268, 269, 270], "introduct": [1, 3, 6, 15, 22, 37, 41, 42, 121, 176, 185, 186, 187, 188, 194, 207, 210, 213, 246, 250, 251, 252, 256, 262, 268], "encourag": [1, 14, 31, 122, 123, 189], "imprecis": 1, "think": [1, 7, 8, 14, 19, 30, 41, 114, 165, 229, 233, 261, 269], "request": [1, 7, 9, 11, 12, 14, 15, 17, 19, 30, 50, 54, 66, 75, 90, 112, 160, 187, 190, 218, 226], "free_symbol": [1, 32, 50, 59, 77, 81, 149, 167, 170, 190, 200, 207], "sinc": [1, 2, 4, 5, 7, 8, 25, 30, 32, 33, 41, 42, 43, 46, 47, 48, 50, 51, 53, 55, 57, 58, 59, 60, 62, 63, 66, 68, 74, 75, 77, 79, 80, 81, 86, 90, 102, 114, 125, 127, 136, 160, 161, 165, 169, 175, 178, 181, 182, 184, 185, 187, 189, 190, 194, 197, 202, 203, 204, 206, 207, 210, 212, 213, 214, 220, 224, 228, 229, 230, 232, 233, 237, 242, 244, 245, 247, 258, 263, 265, 268, 269, 270], "get": [1, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 19, 20, 23, 26, 27, 30, 31, 32, 34, 39, 40, 42, 43, 45, 46, 49, 50, 51, 52, 54, 55, 56, 58, 63, 73, 75, 77, 79, 83, 86, 90, 92, 93, 97, 99, 102, 112, 115, 122, 123, 124, 127, 132, 133, 140, 144, 149, 154, 155, 156, 157, 162, 165, 178, 182, 184, 185, 187, 189, 190, 191, 192, 193, 194, 196, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 220, 221, 226, 232, 233, 234, 236, 239, 242, 258, 261, 263, 264, 265, 268, 269, 270], "incorrectli": [1, 14, 59, 60, 86, 182], "atomicexpr": 1, "concept": [1, 7, 41, 114, 178, 184, 186, 189, 194, 213, 218, 247, 262, 267], "misappli": 1, "point": [1, 2, 5, 7, 11, 12, 14, 15, 18, 19, 24, 30, 32, 33, 41, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 72, 73, 74, 75, 77, 86, 90, 93, 94, 97, 104, 106, 107, 108, 109, 111, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 140, 162, 165, 171, 175, 176, 178, 180, 181, 184, 185, 187, 189, 190, 194, 196, 200, 201, 202, 210, 212, 213, 214, 226, 229, 232, 233, 235, 239, 241, 243, 244, 245, 246, 247, 248, 250, 258, 259, 261, 264], "noth": [1, 31, 41, 50, 63, 77, 144, 160, 181, 185, 193, 194, 206, 210, 212, 223, 225, 233, 235, 261], "anywher": [1, 7, 11, 12, 14, 32, 50, 58, 64, 160, 235, 263], "els": [1, 2, 7, 8, 11, 12, 32, 40, 42, 46, 50, 51, 58, 60, 64, 66, 67, 75, 77, 80, 86, 90, 99, 160, 170, 180, 185, 189, 190, 194, 195, 202, 206, 210, 213, 218, 220, 225, 232, 235, 239, 241, 258, 264], "context": [1, 7, 12, 14, 15, 25, 26, 27, 50, 52, 58, 77, 80, 112, 165, 184, 187, 189, 202, 223, 225, 230, 239], "differenti": [1, 14, 15, 21, 30, 50, 55, 56, 58, 67, 68, 70, 73, 99, 106, 107, 111, 112, 114, 115, 118, 121, 122, 123, 124, 127, 128, 149, 155, 169, 170, 172, 173, 175, 178, 181, 187, 191, 193, 194, 199, 204, 206, 208, 210, 211, 239, 245, 246, 249, 256, 259, 260, 263], "which": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 86, 89, 90, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 109, 111, 112, 114, 116, 119, 121, 122, 123, 124, 125, 127, 128, 129, 131, 133, 134, 146, 149, 155, 156, 157, 158, 160, 164, 165, 166, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 218, 220, 225, 226, 227, 228, 229, 230, 232, 233, 235, 239, 240, 243, 247, 248, 250, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270], "suggest": [1, 15, 33, 41, 77, 86, 90, 112, 192, 265], "someth": [1, 2, 7, 8, 12, 14, 15, 30, 32, 50, 51, 54, 60, 75, 80, 81, 86, 90, 103, 112, 113, 127, 153, 166, 169, 180, 184, 185, 193, 201, 202, 206, 210, 213, 225, 227, 233, 258, 261, 263, 264, 267], "confirm": [1, 12, 41, 90, 210], "fact": [1, 7, 8, 14, 27, 28, 50, 55, 58, 68, 75, 90, 114, 124, 165, 181, 182, 184, 187, 189, 191, 193, 204, 206, 210, 213, 225, 233, 247, 258, 261, 262, 263, 264, 269], "introduc": [1, 8, 22, 46, 49, 50, 58, 75, 86, 91, 94, 112, 114, 118, 119, 120, 123, 160, 165, 178, 185, 186, 191, 194, 201, 204, 207, 214, 230, 262, 265, 267, 269], "21494": 1, "size": [1, 5, 32, 33, 34, 39, 41, 42, 43, 44, 45, 46, 50, 51, 53, 55, 78, 81, 83, 86, 89, 90, 97, 114, 122, 123, 124, 133, 155, 156, 174, 180, 183, 187, 194, 206, 207, 210, 214, 232, 259], "die": [1, 189, 214], "easili": [1, 7, 15, 18, 19, 50, 51, 73, 75, 86, 90, 91, 122, 158, 177, 190, 193, 194, 199, 206, 207, 210, 212, 213, 226, 263], "implement": [1, 4, 8, 11, 14, 15, 20, 24, 25, 26, 27, 30, 31, 32, 33, 35, 40, 41, 42, 47, 50, 51, 53, 55, 56, 57, 58, 61, 63, 70, 71, 73, 74, 76, 77, 80, 81, 82, 86, 90, 91, 92, 103, 112, 121, 129, 131, 132, 135, 144, 145, 153, 154, 156, 164, 169, 171, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 198, 201, 202, 203, 206, 207, 210, 211, 212, 213, 214, 218, 219, 229, 231, 232, 233, 236, 246, 249, 257, 259, 263, 269], "rang": [1, 5, 14, 30, 32, 39, 40, 41, 42, 44, 46, 50, 51, 55, 56, 58, 64, 81, 86, 90, 94, 97, 101, 129, 160, 180, 184, 185, 186, 187, 189, 190, 191, 196, 197, 200, 203, 206, 210, 213, 214, 215, 219, 225, 232, 258, 269], "numpi": [1, 11, 14, 19, 32, 50, 73, 78, 85, 91, 97, 112, 127, 144, 154, 183, 194, 214, 219, 226, 227, 233, 258, 261], "arrai": [1, 21, 32, 41, 42, 46, 47, 51, 58, 77, 81, 83, 86, 90, 91, 97, 127, 157, 180, 183, 185, 190, 194, 213, 214, 217, 219, 220, 221, 226, 227, 229, 233, 265], "shape": [1, 14, 32, 66, 81, 83, 86, 88, 89, 97, 99, 111, 112, 170, 180, 181, 183, 194, 197, 204, 214, 215, 216, 218, 219, 220, 233, 268], "histor": [1, 51, 210, 214], "length": [1, 14, 32, 34, 40, 41, 42, 44, 48, 50, 51, 53, 55, 56, 58, 59, 63, 65, 66, 67, 80, 81, 86, 89, 90, 93, 94, 103, 107, 111, 115, 116, 125, 129, 133, 157, 162, 163, 165, 170, 173, 178, 189, 190, 194, 200, 204, 206, 210, 212, 214, 225, 226, 232, 235, 239, 240, 248], "behavior": [1, 2, 11, 12, 41, 50, 58, 77, 92, 102, 103, 121, 124, 155, 181, 182, 189, 190, 194, 195, 199, 201, 203, 206, 223, 226, 228, 232, 233, 261], "confus": [1, 7, 12, 15, 50, 55, 80, 133, 178, 182, 190, 213, 258, 259, 261], "21563": 1, "revert": [1, 185, 190], "sample_it": [1, 214], "consequ": [1, 28, 50, 182, 184, 261, 269], "class": [1, 2, 6, 7, 8, 12, 15, 16, 24, 25, 26, 27, 28, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 77, 78, 79, 80, 83, 85, 92, 93, 96, 97, 99, 104, 106, 107, 108, 109, 111, 112, 115, 116, 121, 125, 127, 128, 129, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 166, 167, 168, 169, 173, 174, 176, 181, 184, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 204, 208, 210, 211, 212, 213, 214, 217, 219, 220, 221, 225, 226, 227, 228, 229, 230, 232, 233, 237, 242, 243, 245, 246, 248, 250, 251, 254, 256, 257, 259, 261, 264, 269], "subclass": [1, 7, 26, 27, 32, 50, 57, 61, 63, 77, 80, 129, 135, 144, 148, 149, 150, 155, 157, 158, 180, 181, 183, 184, 185, 189, 190, 194, 214, 225, 226, 227, 230, 233, 239, 242, 264], "domain": [1, 5, 11, 14, 30, 31, 50, 51, 53, 55, 56, 58, 69, 71, 72, 75, 77, 83, 86, 87, 90, 96, 99, 112, 127, 181, 183, 186, 187, 189, 191, 192, 208, 209, 210, 212, 214, 265, 270], "element": [1, 2, 4, 7, 15, 24, 27, 31, 32, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 66, 73, 75, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 93, 94, 99, 100, 109, 127, 129, 132, 146, 157, 165, 173, 176, 178, 180, 181, 182, 183, 185, 186, 187, 190, 192, 193, 194, 200, 201, 202, 204, 206, 207, 210, 212, 213, 214, 215, 219, 226, 228, 229, 232, 233, 234, 241, 259, 264, 265, 268, 269], "break": [1, 12, 14, 20, 31, 32, 42, 50, 51, 90, 177, 191, 194, 202, 232], "kei": [1, 2, 22, 25, 28, 31, 39, 41, 42, 50, 51, 52, 55, 66, 79, 81, 86, 89, 90, 93, 111, 112, 121, 152, 155, 160, 178, 180, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 206, 210, 211, 212, 214, 218, 229, 232, 233, 235, 265, 266, 269], "invari": [1, 15, 41, 46, 96, 99, 179, 185, 189, 190, 204, 210], "kind": [1, 6, 7, 8, 14, 15, 31, 32, 52, 55, 58, 70, 77, 81, 93, 107, 112, 123, 175, 182, 184, 185, 190, 195, 196, 202, 210, 211, 214, 232, 245, 247, 250, 259, 269], "limit": [1, 2, 10, 12, 19, 20, 28, 30, 32, 49, 50, 52, 54, 55, 56, 58, 59, 62, 70, 72, 77, 78, 80, 86, 90, 97, 121, 125, 149, 155, 158, 174, 180, 185, 187, 190, 191, 194, 197, 198, 200, 202, 206, 207, 209, 210, 211, 212, 214, 219, 226, 229, 232, 233, 235, 238, 239, 248, 260, 261, 263, 265], "improv": [1, 8, 11, 12, 50, 75, 121, 180, 184, 187, 188, 190, 191, 193, 195, 210, 213, 219, 250, 259, 265], "part": [1, 7, 8, 11, 12, 14, 15, 24, 29, 41, 42, 49, 50, 51, 55, 56, 58, 66, 73, 75, 77, 80, 81, 83, 90, 99, 103, 104, 106, 107, 111, 112, 114, 119, 121, 125, 127, 144, 156, 160, 169, 178, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 202, 204, 206, 207, 210, 212, 225, 227, 229, 232, 259, 264, 269], "document": [1, 6, 16, 20, 26, 27, 28, 41, 46, 50, 51, 56, 57, 58, 62, 72, 75, 76, 78, 83, 86, 91, 94, 103, 107, 121, 122, 123, 125, 127, 135, 149, 155, 169, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 190, 194, 204, 208, 210, 212, 213, 223, 225, 227, 228, 230, 232, 239, 245, 246, 249, 259, 261, 262, 268, 269], "normal": [1, 2, 7, 8, 15, 24, 27, 32, 41, 49, 50, 54, 56, 60, 63, 64, 65, 77, 78, 80, 84, 85, 86, 90, 92, 101, 103, 106, 112, 114, 119, 127, 133, 144, 154, 157, 158, 159, 160, 161, 165, 168, 170, 178, 181, 184, 185, 186, 187, 189, 190, 194, 195, 197, 202, 203, 207, 210, 214, 219, 225, 230, 232, 239, 253], "ha": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 16, 21, 22, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 46, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 63, 65, 66, 67, 73, 75, 77, 79, 80, 81, 83, 86, 87, 89, 90, 91, 93, 94, 99, 100, 104, 106, 107, 112, 114, 115, 121, 125, 127, 133, 134, 144, 145, 154, 157, 162, 165, 169, 170, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 199, 201, 202, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 225, 226, 227, 228, 229, 230, 232, 235, 239, 240, 242, 243, 245, 247, 248, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "domainmatrix": [1, 82, 86, 186, 189, 192], "anyon": [1, 14, 15, 190, 194, 267, 268], "switch": [1, 41, 48, 77, 90, 99, 187, 190], "shown": [1, 7, 8, 12, 14, 39, 42, 49, 50, 54, 58, 75, 92, 94, 97, 99, 103, 107, 109, 115, 116, 122, 123, 125, 169, 170, 177, 178, 180, 183, 184, 185, 190, 194, 210, 214, 230, 232, 242, 243, 262], "21402": 1, "api": [1, 7, 14, 15, 20, 32, 50, 62, 70, 76, 91, 92, 98, 127, 156, 169, 180, 187, 207, 208, 209, 231, 233, 236, 242, 243, 253, 255, 262, 263, 266], "later": [1, 5, 12, 32, 41, 75, 81, 103, 108, 109, 114, 115, 116, 122, 124, 125, 127, 134, 169, 177, 184, 187, 193, 194, 195, 204, 206, 210, 229, 242, 258, 259, 261, 263, 264, 269], "earlier": [1, 103, 191, 195, 204, 206, 233, 243, 245, 264], "possibl": [1, 7, 8, 9, 14, 18, 19, 30, 32, 33, 34, 39, 41, 42, 44, 45, 46, 48, 50, 51, 55, 56, 58, 60, 62, 64, 65, 67, 72, 74, 75, 77, 79, 80, 81, 83, 86, 90, 100, 101, 103, 114, 123, 125, 154, 156, 160, 162, 163, 164, 165, 173, 175, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 200, 201, 202, 203, 206, 207, 210, 211, 212, 213, 214, 215, 220, 225, 227, 228, 229, 230, 232, 233, 242, 243, 245, 259, 260, 261, 264, 269], "put": [1, 2, 5, 12, 14, 32, 46, 47, 50, 51, 52, 56, 80, 81, 86, 132, 137, 141, 156, 157, 190, 194, 195, 203, 204, 206, 210, 215, 221, 226, 265, 269], "could": [1, 2, 5, 7, 27, 32, 43, 50, 62, 75, 77, 80, 109, 112, 121, 124, 160, 163, 165, 181, 183, 184, 187, 189, 191, 194, 202, 204, 206, 210, 211, 212, 213, 214, 215, 218, 219, 226, 230, 243, 244, 261, 264, 269], "arbitrari": [1, 2, 7, 11, 14, 18, 30, 35, 42, 43, 49, 50, 51, 54, 55, 58, 61, 62, 64, 80, 81, 86, 94, 125, 146, 149, 178, 180, 181, 184, 185, 187, 189, 191, 206, 210, 211, 212, 220, 230, 233, 239, 240, 258, 259, 264, 269, 270], "realli": [1, 5, 7, 8, 12, 50, 62, 90, 114, 162, 184, 193, 195, 201, 203, 204, 206, 210, 226, 235, 261, 263], "traceback": [1, 2, 4, 7, 8, 25, 26, 27, 32, 33, 42, 50, 51, 54, 60, 77, 80, 81, 82, 83, 84, 86, 88, 89, 92, 99, 179, 181, 184, 185, 187, 190, 193, 201, 202, 210, 212, 213, 223, 225, 226, 228, 230, 232, 233, 235, 261, 265], "most": [1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 19, 25, 26, 27, 30, 31, 32, 33, 41, 42, 49, 50, 51, 54, 60, 62, 77, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 99, 103, 107, 112, 119, 124, 125, 128, 162, 169, 173, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 192, 193, 194, 201, 202, 204, 207, 210, 211, 212, 213, 214, 223, 226, 227, 228, 229, 230, 232, 233, 235, 241, 243, 258, 261, 263, 264, 265, 267, 268, 269], "recent": [1, 2, 4, 7, 8, 12, 25, 26, 27, 32, 33, 42, 50, 51, 54, 58, 60, 77, 80, 81, 82, 83, 84, 86, 88, 89, 92, 99, 179, 181, 184, 185, 187, 190, 193, 201, 202, 210, 212, 213, 223, 226, 228, 230, 232, 233, 235, 261, 265], "typeerror": [1, 2, 8, 25, 26, 27, 42, 50, 60, 65, 80, 82, 84, 88, 99, 134, 201, 202, 226, 233], "unsupport": [1, 2, 4, 99, 194], "operand": [1, 2, 42, 50, 171, 189, 241], "type": [1, 2, 4, 7, 8, 14, 16, 20, 26, 27, 30, 41, 42, 46, 49, 50, 51, 52, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 68, 75, 77, 78, 79, 80, 81, 82, 83, 86, 90, 91, 92, 93, 94, 97, 99, 103, 107, 112, 127, 132, 146, 154, 155, 156, 158, 170, 173, 174, 176, 178, 180, 181, 184, 185, 188, 189, 190, 191, 192, 194, 195, 196, 202, 203, 204, 206, 207, 208, 209, 212, 218, 219, 220, 223, 225, 226, 227, 232, 233, 235, 242, 245, 248, 251, 256, 259, 261, 263, 264, 265, 268, 269, 270], "dict": [1, 2, 7, 32, 42, 51, 52, 66, 67, 80, 81, 86, 90, 92, 107, 108, 140, 152, 155, 166, 168, 170, 180, 183, 184, 185, 187, 189, 190, 191, 192, 194, 206, 207, 210, 211, 212, 213, 214, 218, 225, 226, 232, 239, 270], "main": [1, 2, 11, 13, 14, 15, 27, 28, 32, 50, 56, 75, 81, 86, 89, 112, 119, 158, 164, 174, 178, 180, 181, 185, 186, 194, 201, 210, 213, 219, 226, 269, 270], "reason": [1, 7, 8, 12, 15, 32, 42, 48, 50, 54, 58, 75, 78, 84, 86, 107, 108, 112, 114, 118, 121, 124, 131, 165, 174, 178, 184, 187, 188, 191, 194, 202, 204, 206, 210, 212, 213, 223, 229, 230, 232, 233, 258, 259, 263, 264, 265], "solve_lin_si": [1, 186], "heurisch": [1, 77], "smith_normal_form": [1, 87, 183], "newmatrix": 1, "rather": [1, 2, 5, 7, 8, 11, 12, 14, 15, 23, 28, 32, 33, 41, 42, 43, 50, 54, 61, 66, 68, 75, 80, 81, 83, 86, 90, 92, 111, 118, 127, 140, 154, 158, 160, 169, 177, 181, 184, 187, 190, 192, 197, 204, 207, 209, 210, 213, 214, 229, 232, 233, 236, 247, 261, 263, 264], "holonom": [1, 71, 74, 113, 114, 115, 121, 122, 123, 249, 256], "polymatrix": 1, "risch": [1, 77, 259], "broken": [1, 39, 50, 177, 194, 210, 235], "20780": 1, "20759": 1, "20621": 1, "19882": 1, "18844": 1, "solut": [1, 2, 5, 8, 9, 21, 32, 46, 50, 51, 56, 58, 60, 68, 72, 73, 74, 77, 86, 90, 96, 103, 107, 112, 115, 121, 124, 129, 165, 169, 181, 187, 188, 189, 190, 191, 192, 193, 202, 207, 208, 209, 210, 211, 212, 255, 270], "case": [1, 2, 5, 7, 8, 11, 12, 14, 15, 30, 31, 32, 33, 35, 38, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 58, 62, 65, 66, 67, 68, 72, 75, 77, 80, 81, 83, 86, 87, 90, 91, 92, 94, 99, 103, 106, 107, 112, 114, 115, 116, 123, 125, 127, 133, 144, 150, 155, 157, 159, 160, 165, 166, 173, 177, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 199, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 218, 220, 223, 225, 227, 228, 230, 232, 233, 234, 235, 236, 239, 241, 242, 259, 263, 264, 265, 268, 269, 270], "pr": [1, 12, 49, 185, 187, 188, 190, 213], "depend": [1, 2, 7, 16, 18, 19, 20, 30, 32, 33, 41, 42, 49, 50, 51, 52, 55, 56, 58, 62, 67, 74, 75, 77, 78, 79, 86, 90, 91, 92, 97, 101, 104, 107, 108, 111, 112, 114, 115, 121, 122, 132, 133, 134, 149, 158, 160, 162, 165, 174, 175, 180, 182, 185, 186, 187, 189, 190, 191, 194, 195, 200, 204, 206, 207, 210, 211, 212, 213, 214, 225, 226, 227, 228, 232, 233, 245, 247, 248, 261, 263], "21441": 1, "21427": 1, "21496": 1, "potenti": [1, 7, 62, 83, 86, 90, 107, 108, 109, 111, 120, 121, 171, 176, 184, 189, 201, 204, 206, 210, 212, 228, 229, 241, 246, 247], "impact": 1, "downstream": [1, 7], "altern": [1, 2, 8, 9, 12, 14, 19, 32, 38, 41, 42, 49, 50, 54, 56, 58, 81, 83, 87, 112, 122, 124, 170, 177, 179, 180, 182, 183, 184, 189, 190, 194, 199, 201, 203, 212, 213, 215, 232, 261, 263, 265], "goal": [1, 31, 103, 128, 189, 191, 225, 226, 228, 262, 263], "perhap": [1, 32, 50, 80, 90, 145, 184, 212, 227, 258], "tableform": [1, 235], "isn": [1, 77, 103, 112, 213, 263], "clear": [1, 7, 14, 26, 40, 50, 75, 79, 104, 177, 178, 180, 185, 187, 190, 204, 212, 213, 220, 225, 229, 247, 261], "what": [1, 2, 4, 5, 7, 8, 14, 15, 16, 21, 22, 30, 32, 42, 44, 49, 50, 51, 52, 56, 60, 61, 65, 75, 77, 79, 86, 90, 92, 104, 107, 109, 112, 115, 127, 159, 160, 163, 165, 170, 177, 178, 185, 186, 187, 190, 193, 194, 195, 201, 203, 204, 206, 207, 208, 210, 212, 219, 223, 225, 227, 228, 233, 242, 243, 248, 259, 261, 262, 264, 268, 269], "advis": [1, 7, 31, 112], "know": [1, 2, 7, 8, 12, 14, 15, 25, 27, 31, 42, 50, 51, 54, 62, 67, 75, 77, 86, 90, 109, 112, 128, 154, 158, 162, 163, 165, 169, 170, 177, 178, 180, 190, 191, 193, 194, 204, 206, 210, 212, 213, 214, 228, 232, 233, 243, 258, 259, 261, 262, 263, 264, 267, 269], "usecas": 1, "unclear": [1, 7, 103], "write": [1, 5, 7, 8, 12, 16, 20, 22, 23, 32, 39, 50, 51, 58, 75, 77, 83, 127, 140, 177, 178, 182, 187, 189, 194, 203, 204, 207, 210, 213, 219, 225, 226, 227, 233, 262, 263, 264, 269], "our": [1, 5, 15, 17, 19, 32, 50, 58, 75, 86, 90, 165, 177, 178, 180, 181, 183, 189, 190, 191, 194, 201, 204, 207, 210, 213, 225, 258, 261, 262, 264, 269], "mail": [1, 12, 19, 194, 262], "line2dbaseseri": [1, 180], "coordin": [1, 24, 32, 51, 52, 56, 58, 59, 61, 65, 67, 83, 86, 93, 97, 101, 106, 107, 108, 111, 112, 113, 114, 116, 118, 121, 122, 123, 126, 128, 136, 138, 157, 158, 161, 169, 170, 171, 172, 173, 175, 178, 181, 189, 190, 202, 210, 239, 240, 241, 244, 246, 248, 256], "y": [1, 2, 4, 7, 8, 12, 14, 21, 23, 25, 26, 27, 28, 29, 30, 32, 33, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 90, 91, 92, 93, 94, 97, 99, 104, 105, 106, 109, 112, 114, 115, 116, 118, 119, 120, 125, 127, 128, 137, 138, 141, 144, 149, 155, 157, 158, 160, 161, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 226, 227, 230, 232, 233, 235, 239, 241, 242, 243, 244, 245, 247, 248, 258, 259, 261, 263, 264, 268, 269, 270], "segment": [1, 14, 41, 60, 62, 63, 64, 65, 66, 67, 177, 180, 210, 225], "matplotlib": [1, 9, 11, 14, 15, 19, 73, 78, 97, 127, 140, 174, 180, 268], "linecollect": [1, 180], "bokeh": 1, "plotli": 1, "mayavi": 1, "k3d": 1, "insid": [1, 2, 15, 41, 42, 47, 50, 60, 61, 66, 93, 103, 105, 115, 124, 159, 160, 165, 174, 178, 190, 194, 202, 204, 207, 212, 213, 214, 216, 218, 229, 264, 265], "matplotlibbackend": [1, 180], "note": [1, 2, 5, 7, 8, 9, 11, 14, 15, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 40, 41, 42, 43, 46, 48, 49, 51, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 75, 77, 78, 80, 81, 83, 86, 90, 92, 99, 100, 104, 105, 106, 107, 108, 111, 112, 114, 115, 118, 125, 127, 133, 136, 144, 154, 155, 157, 159, 160, 161, 163, 169, 170, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 219, 220, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 243, 245, 247, 256, 258, 259, 260, 262, 263, 264, 265, 269], "previous": [1, 11, 12, 49, 119, 175, 193, 206, 214, 245], "get_point": [1, 180], "alwai": [1, 2, 7, 8, 12, 14, 15, 19, 24, 31, 41, 42, 49, 50, 51, 52, 54, 56, 58, 60, 62, 65, 66, 74, 75, 77, 80, 81, 86, 89, 90, 99, 100, 111, 112, 114, 115, 119, 128, 160, 162, 165, 166, 175, 177, 181, 182, 184, 185, 187, 189, 190, 194, 195, 196, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 221, 225, 227, 232, 233, 239, 240, 245, 259, 261, 262, 263, 264, 269], "uniformli": [1, 5, 41, 66, 67, 93, 97, 180, 228], "correctli": [1, 8, 9, 11, 12, 14, 15, 30, 54, 75, 78, 86, 112, 114, 124, 194, 201, 207, 210], "avoid": [1, 8, 15, 16, 32, 33, 50, 51, 56, 75, 77, 80, 86, 89, 92, 115, 124, 154, 177, 178, 182, 184, 190, 194, 195, 202, 206, 210, 212, 214, 218, 227, 230, 233, 261, 262], "adapt": [1, 97, 180, 200, 212, 232, 238], "get_data": [1, 180, 236], "dft": [1, 53, 102], "fourier": [1, 50, 58, 77, 102, 153, 198], "as_explicit": [1, 83, 86, 102, 216], "sqrt": [1, 7, 14, 24, 28, 29, 30, 32, 50, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 73, 74, 75, 77, 78, 81, 82, 86, 90, 92, 93, 99, 101, 114, 129, 131, 133, 134, 139, 144, 154, 155, 157, 158, 160, 161, 163, 170, 175, 178, 179, 182, 184, 185, 187, 189, 190, 193, 194, 195, 200, 203, 204, 206, 207, 209, 210, 212, 213, 214, 232, 233, 235, 239, 247, 248, 258, 263, 268, 269, 270], "exp": [1, 2, 7, 24, 30, 32, 40, 49, 50, 52, 54, 55, 57, 58, 68, 69, 72, 75, 77, 81, 83, 86, 90, 101, 136, 139, 155, 161, 179, 184, 185, 190, 191, 194, 196, 201, 204, 206, 210, 211, 212, 213, 214, 215, 232, 248, 259, 263, 265, 270], "pi": [1, 2, 4, 7, 14, 23, 24, 25, 27, 28, 29, 30, 32, 42, 49, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 69, 75, 77, 86, 90, 101, 114, 127, 129, 131, 132, 133, 134, 136, 144, 155, 157, 158, 161, 163, 170, 179, 180, 182, 184, 185, 190, 194, 197, 201, 202, 203, 204, 206, 209, 210, 212, 213, 214, 232, 239, 241, 248, 258, 263, 269], "contain": [1, 2, 3, 8, 9, 11, 12, 14, 15, 23, 25, 26, 30, 31, 32, 33, 41, 42, 46, 48, 49, 52, 53, 54, 56, 58, 59, 61, 63, 64, 65, 66, 67, 76, 77, 79, 80, 81, 83, 86, 89, 90, 91, 92, 93, 95, 97, 98, 100, 104, 107, 108, 109, 111, 114, 115, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 147, 150, 152, 155, 157, 160, 169, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 194, 195, 196, 201, 202, 204, 206, 207, 208, 210, 211, 212, 213, 214, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 241, 249, 250, 259, 261, 265, 269], "discret": [1, 30, 32, 33, 40, 42, 50, 51, 58, 90, 160, 165, 196, 199, 210, 212, 213, 250, 258], "transform": [1, 24, 29, 32, 46, 49, 50, 51, 52, 54, 55, 58, 65, 76, 83, 86, 97, 99, 114, 132, 153, 155, 157, 162, 182, 185, 187, 189, 190, 196, 201, 202, 203, 206, 207, 210, 211, 212, 213, 214, 219, 227, 233, 239, 245, 246, 250, 257, 263], "mathemat": [1, 4, 7, 11, 12, 15, 16, 18, 22, 26, 27, 30, 32, 33, 36, 40, 42, 49, 50, 51, 52, 55, 56, 57, 58, 63, 64, 75, 77, 80, 83, 86, 90, 91, 92, 99, 100, 103, 115, 126, 165, 175, 177, 178, 181, 182, 184, 185, 188, 193, 194, 202, 203, 207, 210, 213, 214, 219, 226, 227, 233, 239, 242, 245, 247, 258, 261, 262, 263, 264, 267, 269], "locat": [1, 15, 42, 50, 64, 86, 90, 93, 94, 106, 115, 124, 128, 173, 175, 189, 190, 194, 206, 214, 228, 237, 239, 242, 244, 246, 247], "furthermor": [1, 12, 28, 50, 51, 80, 189, 203, 261, 263, 264], "unevalu": [1, 7, 8, 26, 27, 30, 42, 49, 50, 56, 58, 67, 77, 90, 99, 137, 141, 148, 149, 160, 190, 193, 201, 202, 206, 210, 212, 213, 214, 259, 263, 264, 270], "represent": [1, 24, 31, 32, 33, 41, 44, 50, 51, 58, 62, 70, 72, 74, 75, 77, 79, 80, 81, 82, 83, 89, 90, 96, 97, 102, 103, 104, 111, 121, 124, 125, 129, 149, 154, 155, 157, 158, 160, 162, 169, 174, 175, 177, 180, 181, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 204, 206, 207, 210, 213, 214, 219, 220, 235, 239, 241, 248, 259, 261, 264], "21626": 1, "expos": [1, 31, 214], "mutat": [1, 99, 183, 185, 214], "flat": [1, 64, 81, 226], "cannot": [1, 2, 4, 8, 11, 12, 14, 15, 19, 25, 26, 27, 28, 29, 30, 32, 42, 47, 49, 50, 52, 54, 55, 56, 60, 62, 63, 65, 67, 72, 77, 79, 82, 84, 86, 88, 90, 99, 155, 163, 165, 177, 178, 180, 185, 187, 189, 190, 191, 194, 201, 202, 206, 207, 209, 210, 212, 213, 214, 215, 223, 225, 226, 227, 232, 236, 239, 240, 263, 264, 265, 269, 270], "itself": [1, 11, 12, 14, 15, 28, 39, 41, 42, 48, 50, 52, 55, 63, 67, 72, 90, 107, 111, 112, 125, 150, 157, 175, 177, 180, 181, 184, 187, 189, 190, 194, 202, 203, 206, 213, 218, 219, 220, 227, 229, 232, 247, 263], "todok": [1, 81], "read": [1, 12, 14, 15, 17, 42, 56, 75, 90, 94, 127, 177, 178, 183, 184, 185, 191, 194, 207, 220, 221, 229, 236, 262, 268, 269], "technic": [1, 15, 31, 50, 127, 146, 181, 210, 227, 232, 245, 261, 264], "thei": [1, 2, 7, 8, 11, 12, 14, 15, 19, 28, 31, 32, 33, 38, 40, 41, 42, 48, 49, 50, 51, 52, 55, 56, 58, 60, 63, 64, 65, 66, 67, 72, 75, 77, 78, 80, 81, 83, 84, 86, 89, 90, 92, 103, 107, 109, 111, 112, 114, 119, 121, 122, 123, 124, 127, 128, 134, 139, 144, 149, 152, 157, 162, 163, 165, 166, 170, 173, 174, 175, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 192, 194, 195, 200, 201, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 220, 223, 225, 227, 229, 232, 233, 235, 239, 245, 247, 259, 261, 262, 263, 264, 265, 269], "underscor": [1, 12, 14, 50, 86, 210, 220, 228], "prior": [1, 12, 19, 173, 190, 206, 265], "result": [1, 2, 4, 5, 7, 8, 9, 11, 14, 24, 25, 26, 27, 28, 30, 31, 32, 40, 41, 42, 46, 49, 50, 51, 52, 54, 56, 58, 62, 67, 68, 72, 74, 75, 77, 79, 80, 81, 83, 86, 89, 90, 91, 92, 93, 99, 100, 103, 104, 105, 108, 112, 115, 121, 124, 127, 145, 152, 154, 155, 157, 159, 160, 162, 163, 165, 169, 170, 178, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 225, 226, 227, 229, 230, 232, 233, 235, 239, 241, 243, 261, 263, 264, 265, 269], "ey": [1, 81, 82, 83, 84, 85, 86, 88, 183, 189, 207, 215, 220, 235, 265], "z": [1, 2, 7, 14, 28, 29, 32, 33, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 62, 63, 64, 65, 66, 75, 77, 80, 81, 83, 86, 92, 93, 94, 101, 104, 105, 106, 109, 112, 114, 115, 116, 118, 119, 120, 124, 125, 127, 128, 129, 138, 140, 144, 154, 155, 157, 161, 165, 169, 170, 171, 172, 173, 175, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 194, 195, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 226, 227, 233, 239, 241, 242, 243, 244, 245, 247, 248, 258, 259, 261, 263, 264, 268, 269, 270], "true": [1, 2, 4, 7, 8, 10, 11, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 75, 77, 78, 80, 81, 82, 83, 86, 87, 90, 92, 93, 94, 97, 99, 100, 101, 102, 103, 105, 107, 108, 112, 114, 115, 127, 131, 132, 141, 144, 145, 152, 154, 155, 158, 159, 160, 163, 169, 170, 171, 172, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 225, 226, 227, 228, 230, 232, 233, 235, 239, 241, 242, 243, 244, 245, 248, 258, 259, 261, 263, 264, 265, 268, 269, 270], "design": [1, 4, 8, 11, 12, 14, 21, 28, 33, 40, 50, 86, 89, 92, 127, 128, 184, 188, 194, 199, 204, 210, 213, 263, 264, 268], "converg": [1, 32, 49, 54, 58, 76, 77, 90, 129, 190, 197, 201, 204, 259], "legacy_matrix": [1, 77], "singl": [1, 5, 7, 9, 12, 15, 23, 31, 32, 34, 41, 50, 51, 55, 56, 58, 63, 64, 66, 67, 68, 75, 77, 80, 81, 86, 89, 92, 99, 100, 105, 106, 115, 140, 144, 146, 154, 157, 160, 167, 170, 173, 180, 181, 183, 184, 185, 187, 189, 190, 194, 195, 196, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 219, 225, 227, 229, 232, 233, 235, 259, 261, 264, 265, 270], "combin": [1, 2, 14, 31, 50, 54, 55, 58, 70, 77, 79, 80, 81, 90, 94, 99, 111, 121, 128, 139, 146, 154, 155, 157, 158, 159, 163, 165, 166, 181, 182, 184, 185, 187, 189, 190, 194, 195, 203, 204, 206, 207, 210, 212, 214, 215, 229, 232, 258, 261, 264], "whole": [1, 7, 14, 50, 52, 58, 77, 94, 101, 180, 181, 189, 190, 194, 197, 202, 204, 210, 213, 232], "left": [1, 5, 7, 12, 15, 21, 30, 32, 33, 41, 42, 46, 50, 51, 52, 55, 56, 58, 66, 67, 73, 75, 77, 78, 80, 81, 86, 89, 90, 99, 104, 111, 125, 132, 139, 144, 148, 149, 152, 157, 170, 175, 179, 180, 181, 183, 190, 191, 192, 193, 194, 196, 197, 201, 202, 203, 204, 206, 210, 211, 212, 213, 214, 225, 226, 227, 229, 232, 245, 259, 263, 265, 269], "intact": [1, 12, 32, 226], "theano": [1, 11, 127, 268], "discontinu": [1, 30, 54, 56, 58, 77, 93, 197], "project": [1, 13, 15, 16, 20, 22, 32, 63, 64, 65, 79, 86, 126, 226, 227, 239], "aesara": [1, 11, 32, 127, 250, 257], "renam": [1, 12, 32, 77], "aesaracod": [1, 11, 32, 91, 194], "correspond": [1, 5, 7, 8, 12, 14, 15, 30, 31, 32, 33, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 56, 60, 61, 63, 64, 65, 66, 73, 75, 79, 80, 81, 86, 89, 90, 93, 94, 99, 105, 107, 111, 112, 114, 115, 128, 132, 136, 150, 154, 155, 157, 161, 162, 165, 170, 173, 175, 179, 180, 182, 183, 184, 185, 187, 189, 190, 194, 200, 201, 204, 206, 207, 210, 211, 212, 213, 214, 216, 218, 219, 220, 227, 228, 229, 230, 232, 233, 235, 239, 240, 242, 243, 245, 247, 264, 270], "theano_cod": 1, "aesara_cod": [1, 194], "theanoprint": 1, "aesaraprint": [1, 194], "predic": [1, 20, 25, 26, 30, 92, 190, 206, 232, 250], "experienc": [1, 33], "big": [1, 2, 5, 7, 34, 50, 52, 90, 127, 140, 179, 193, 194, 201, 235, 259, 261], "registr": 1, "done": [1, 2, 5, 12, 14, 26, 27, 29, 30, 31, 32, 41, 43, 48, 50, 51, 52, 55, 58, 61, 62, 75, 77, 81, 86, 90, 112, 114, 119, 125, 127, 146, 155, 156, 157, 160, 162, 163, 170, 175, 177, 178, 180, 181, 183, 187, 191, 193, 194, 195, 203, 206, 207, 210, 212, 213, 214, 219, 220, 225, 226, 229, 233, 242, 243, 258, 261, 263, 264, 265], "add_handl": 1, "remove_handl": [1, 25], "multipledispatch": [1, 25], "instanc": [1, 4, 7, 8, 10, 12, 14, 15, 25, 26, 27, 29, 31, 32, 41, 43, 45, 50, 52, 54, 55, 56, 58, 63, 66, 67, 68, 73, 74, 77, 78, 81, 83, 86, 90, 92, 93, 100, 104, 107, 111, 112, 128, 133, 140, 144, 150, 154, 155, 157, 159, 160, 170, 172, 174, 175, 180, 184, 185, 189, 190, 191, 192, 194, 202, 204, 206, 210, 212, 213, 214, 218, 219, 220, 225, 226, 227, 229, 232, 233, 239, 240, 241, 242, 243, 245, 247, 258, 259, 264, 269, 270], "regist": [1, 25, 26, 27, 51, 156], "register_mani": [1, 26, 27], "must": [1, 2, 7, 8, 11, 12, 13, 14, 24, 25, 26, 27, 32, 41, 42, 44, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 63, 66, 69, 72, 73, 75, 77, 80, 81, 82, 83, 86, 89, 90, 93, 94, 97, 99, 100, 107, 108, 112, 114, 121, 122, 123, 124, 125, 127, 140, 155, 157, 160, 169, 170, 178, 179, 180, 181, 182, 185, 187, 189, 190, 194, 195, 202, 203, 204, 206, 207, 210, 212, 213, 214, 218, 219, 225, 226, 227, 228, 229, 230, 232, 233, 236, 261, 263, 264, 268, 269], "askprimehandl": 1, "staticmethod": [1, 225], "def": [1, 2, 5, 7, 8, 12, 14, 15, 26, 27, 31, 50, 55, 57, 62, 80, 86, 90, 92, 119, 155, 184, 190, 194, 203, 206, 213, 228, 230, 232, 233, 236, 258, 261, 264, 265, 269], "integ": [1, 2, 7, 11, 14, 15, 21, 25, 26, 27, 30, 32, 33, 39, 41, 42, 43, 44, 46, 49, 51, 52, 53, 54, 55, 57, 58, 60, 63, 74, 75, 77, 78, 79, 80, 81, 83, 86, 87, 90, 92, 93, 99, 101, 149, 154, 156, 157, 158, 160, 162, 170, 172, 174, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 201, 203, 204, 206, 207, 210, 212, 213, 214, 218, 219, 220, 226, 227, 229, 232, 235, 259, 261, 264, 268, 269], "register_handl": [1, 25], "prime": [1, 7, 25, 26, 27, 41, 48, 49, 50, 51, 53, 55, 58, 90, 131, 181, 182, 184, 185, 186, 187, 190, 204, 206, 207, 214, 229], "definit": [1, 2, 8, 14, 24, 27, 32, 33, 41, 42, 47, 49, 50, 52, 53, 55, 56, 58, 63, 66, 70, 73, 75, 77, 81, 82, 83, 86, 90, 92, 114, 118, 119, 125, 162, 165, 168, 170, 177, 178, 181, 182, 185, 190, 191, 194, 201, 214, 215, 226, 227, 228, 232, 233, 239, 242, 243, 244, 245, 259, 269], "Not": [1, 8, 50, 55, 57, 80, 99, 194, 213, 214, 232, 263, 270], "exist": [1, 5, 7, 12, 30, 31, 34, 41, 50, 54, 60, 62, 65, 66, 67, 68, 76, 77, 80, 86, 90, 150, 175, 178, 180, 181, 182, 183, 187, 189, 194, 201, 202, 204, 207, 210, 212, 213, 225, 233, 243, 263, 265, 270], "primepred": [1, 28], "q": [1, 2, 4, 7, 23, 24, 25, 26, 27, 28, 29, 32, 42, 46, 49, 50, 51, 58, 67, 72, 73, 75, 77, 79, 81, 86, 90, 92, 93, 99, 100, 107, 108, 111, 112, 114, 115, 120, 122, 123, 124, 127, 128, 129, 140, 154, 160, 163, 170, 171, 172, 173, 174, 175, 177, 180, 181, 182, 184, 185, 187, 189, 190, 191, 193, 194, 196, 204, 207, 210, 212, 214, 219, 220, 235, 239, 241, 242, 244, 247, 265, 269], "_": [1, 2, 5, 12, 13, 14, 15, 26, 27, 31, 38, 39, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 63, 64, 65, 66, 75, 77, 80, 81, 82, 83, 84, 86, 88, 90, 92, 99, 122, 125, 127, 139, 165, 169, 174, 177, 179, 185, 190, 193, 194, 195, 197, 201, 202, 203, 204, 206, 207, 210, 211, 212, 215, 232, 241, 243, 268], "20209": 1, "stochast": 1, "process": [1, 2, 7, 14, 15, 16, 20, 29, 32, 41, 42, 48, 50, 51, 56, 58, 66, 75, 77, 86, 90, 99, 108, 112, 114, 119, 122, 124, 127, 180, 181, 187, 194, 195, 202, 206, 210, 212, 225, 229, 269], "timestamp": 1, "wienerprocess": [1, 214], "posit": [1, 2, 7, 8, 12, 25, 26, 27, 29, 31, 32, 33, 34, 39, 41, 42, 43, 45, 46, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 63, 66, 75, 77, 79, 80, 81, 82, 86, 87, 89, 90, 93, 94, 99, 101, 106, 109, 112, 114, 115, 118, 120, 124, 125, 127, 129, 132, 134, 138, 155, 158, 160, 171, 172, 173, 175, 177, 178, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 199, 200, 202, 203, 204, 206, 207, 210, 212, 213, 214, 215, 220, 232, 239, 241, 242, 243, 245, 247, 248, 265, 269, 270], "would": [1, 2, 5, 7, 8, 10, 12, 13, 14, 15, 19, 21, 31, 32, 33, 39, 41, 42, 49, 50, 51, 55, 57, 62, 66, 75, 77, 81, 86, 90, 92, 93, 99, 100, 101, 103, 105, 112, 115, 124, 127, 155, 157, 160, 165, 169, 170, 175, 177, 180, 183, 184, 185, 187, 190, 191, 193, 194, 195, 197, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 218, 219, 225, 227, 229, 232, 233, 235, 236, 243, 244, 245, 247, 258, 259, 261, 263, 264, 265, 268, 269, 270], "normaldistribut": [1, 214], "made": [1, 2, 7, 12, 15, 44, 46, 50, 51, 56, 59, 60, 63, 66, 67, 77, 80, 86, 90, 92, 112, 124, 127, 178, 181, 185, 187, 189, 190, 195, 201, 202, 203, 206, 210, 212, 213, 214, 227, 232, 235, 247, 264], "store": [1, 2, 7, 9, 13, 31, 32, 40, 41, 50, 72, 74, 83, 86, 90, 92, 107, 109, 111, 112, 125, 154, 160, 173, 177, 178, 180, 181, 184, 189, 190, 191, 201, 204, 215, 218, 219, 227, 228, 229, 232, 243, 245, 264], "basic": [1, 7, 11, 12, 13, 14, 15, 22, 24, 26, 31, 32, 33, 38, 41, 45, 48, 49, 53, 56, 66, 68, 73, 74, 75, 80, 81, 84, 85, 87, 99, 106, 112, 122, 123, 125, 127, 128, 134, 144, 158, 165, 168, 175, 176, 178, 180, 181, 183, 185, 186, 187, 189, 191, 192, 194, 195, 201, 206, 207, 210, 211, 212, 213, 214, 225, 227, 232, 233, 237, 244, 245, 246, 252, 259, 260, 261, 262, 267], "20078": 1, "misspel": 1, "correct": [1, 2, 8, 12, 14, 15, 32, 39, 41, 47, 49, 50, 54, 56, 74, 75, 77, 86, 90, 99, 112, 124, 177, 178, 187, 190, 201, 207, 210, 212, 213, 218, 226, 232, 261, 268], "spell": [1, 14, 210], "absorbing_prob": [1, 214], "absorb": [1, 75, 210, 214, 259], "probabilit": [1, 214], "es": 1, "standard": [1, 2, 7, 11, 15, 32, 50, 54, 56, 58, 73, 75, 77, 78, 79, 80, 84, 86, 90, 91, 92, 102, 137, 141, 170, 175, 181, 184, 185, 187, 194, 197, 202, 206, 207, 210, 213, 214, 227, 233, 236, 242, 247, 258, 261, 269], "shutil": 1, "power": [1, 2, 24, 29, 32, 40, 41, 42, 51, 53, 54, 56, 72, 73, 75, 77, 79, 81, 83, 90, 91, 99, 112, 127, 132, 143, 146, 159, 162, 165, 166, 170, 181, 182, 184, 185, 186, 187, 189, 190, 194, 195, 198, 201, 203, 205, 207, 210, 212, 213, 214, 218, 227, 232, 250, 252, 258, 259, 260, 261, 262, 264, 265, 268], "sever": [1, 4, 7, 11, 12, 13, 14, 19, 32, 35, 41, 42, 49, 50, 54, 55, 57, 58, 62, 75, 77, 90, 105, 165, 167, 180, 182, 184, 187, 189, 193, 194, 195, 201, 202, 210, 214, 225, 227, 237, 249, 261, 265, 268], "immut": [1, 50, 82, 85, 88, 178, 185, 210, 215, 253, 258, 265], "rest": [1, 12, 75, 78, 80, 84, 94, 101, 112, 115, 121, 165, 181, 184, 214, 232, 261, 262, 269], "coordsystem": [1, 52], "explicit": [1, 7, 42, 49, 50, 54, 66, 67, 77, 89, 90, 111, 112, 115, 124, 128, 178, 181, 190, 193, 194, 196, 202, 204, 210, 211, 212, 213, 217, 229], "appropi": 1, "patch": [1, 52, 194], "real": [1, 2, 4, 5, 7, 8, 24, 26, 27, 29, 30, 32, 42, 50, 51, 52, 54, 55, 56, 57, 58, 62, 66, 67, 72, 75, 77, 80, 81, 83, 86, 90, 92, 101, 112, 127, 129, 132, 133, 140, 158, 172, 179, 182, 185, 186, 189, 190, 191, 194, 195, 197, 201, 204, 206, 209, 210, 212, 213, 214, 219, 223, 227, 236, 263, 269, 270], "similarli": [1, 7, 46, 50, 51, 58, 62, 86, 93, 94, 99, 107, 125, 180, 181, 184, 189, 191, 201, 202, 204, 210, 225, 233, 243, 244, 265], "manifold": [1, 52], "track": [1, 2, 41, 50, 54, 58, 111, 125, 144, 178, 201, 220, 259], "separ": [1, 2, 5, 8, 12, 14, 31, 38, 50, 51, 56, 58, 75, 77, 86, 100, 111, 124, 125, 128, 133, 157, 160, 169, 170, 180, 182, 185, 187, 190, 191, 194, 203, 206, 207, 211, 213, 218, 223, 225, 229, 233, 235, 239, 261], "coord_system": 1, "connect_to": 1, "coord_tuple_transform_to": [1, 52], "constructor": [1, 26, 27, 31, 32, 37, 41, 42, 43, 50, 57, 58, 79, 84, 86, 115, 153, 154, 158, 162, 180, 181, 183, 184, 185, 186, 194, 202, 210, 219, 227, 242, 260, 264], "docstr": [1, 2, 12, 15, 16, 20, 22, 31, 32, 43, 50, 72, 75, 77, 86, 90, 95, 98, 100, 121, 125, 130, 147, 153, 154, 156, 176, 190, 197, 200, 201, 203, 206, 210, 211, 212, 213, 219, 220, 225, 228, 233, 235, 246, 249], "str": [1, 26, 31, 32, 33, 42, 50, 51, 52, 54, 59, 60, 63, 66, 67, 78, 80, 83, 90, 92, 97, 107, 109, 127, 144, 154, 160, 170, 172, 173, 180, 185, 189, 194, 206, 210, 214, 230, 232, 233, 235, 239], "wrong": [1, 12, 15, 41, 50, 51, 58, 60, 86, 170, 184, 208, 210, 228, 261, 265], "right": [1, 2, 5, 9, 12, 14, 15, 21, 30, 32, 33, 41, 42, 46, 50, 51, 53, 55, 56, 58, 66, 67, 75, 77, 80, 81, 86, 89, 90, 92, 93, 94, 99, 107, 111, 112, 124, 125, 127, 128, 132, 139, 144, 146, 148, 149, 154, 157, 160, 170, 175, 178, 179, 180, 181, 183, 189, 191, 192, 194, 196, 197, 201, 202, 204, 210, 211, 213, 214, 225, 227, 229, 232, 245, 259, 263, 265, 269], "unord": [1, 2, 50, 90, 185, 213, 232, 233], "imposs": [1, 12, 14, 50, 184, 203, 210, 211, 223, 261, 269], "lambidfi": 1, "thu": [1, 2, 5, 11, 12, 28, 35, 41, 42, 50, 51, 52, 56, 58, 73, 75, 77, 81, 84, 86, 89, 90, 100, 111, 115, 121, 124, 165, 170, 182, 187, 189, 191, 195, 201, 204, 206, 227, 232, 233, 243, 244, 261, 264, 269, 270], "guess": [1, 31, 51, 54, 75, 78, 174, 187, 190, 204, 207, 264], "incorrect": [1, 8, 12, 15, 41, 50, 60, 90, 97, 173, 185, 210, 213, 226, 229, 230], "mul": [1, 2, 4, 14, 24, 75, 77, 81, 90, 140, 144, 154, 155, 183, 184, 185, 189, 190, 194, 195, 196, 203, 206, 210, 211, 212, 213, 218, 250, 264], "pow": [1, 2, 14, 24, 29, 32, 51, 56, 75, 81, 90, 159, 183, 184, 185, 190, 194, 196, 203, 206, 212, 213, 264, 268], "construct": [1, 5, 26, 27, 31, 32, 37, 50, 52, 56, 58, 60, 64, 66, 78, 83, 86, 91, 94, 103, 107, 109, 112, 114, 145, 149, 158, 159, 162, 166, 181, 184, 185, 187, 189, 190, 194, 207, 212, 214, 215, 217, 219, 227, 229, 230, 242, 244, 245, 261, 264, 265, 269], "directli": [1, 2, 5, 7, 8, 11, 12, 14, 19, 26, 27, 30, 31, 32, 41, 49, 50, 52, 56, 61, 81, 83, 86, 90, 112, 146, 158, 163, 170, 173, 180, 181, 184, 185, 189, 190, 202, 203, 204, 206, 207, 210, 211, 213, 214, 225, 226, 227, 228, 229, 230, 259, 270], "superclass": [1, 7, 49, 50, 77, 83, 185], "scalar": [1, 24, 50, 52, 65, 79, 81, 83, 86, 91, 109, 112, 159, 170, 171, 172, 176, 178, 181, 183, 187, 194, 210, 215, 227, 233, 239, 240, 241, 242, 243, 244, 246, 248], "numer": [1, 2, 5, 7, 11, 14, 21, 28, 30, 32, 49, 50, 55, 58, 62, 66, 70, 73, 86, 90, 92, 96, 97, 99, 107, 108, 112, 114, 121, 124, 128, 132, 139, 142, 157, 164, 169, 178, 180, 184, 185, 187, 188, 189, 190, 193, 194, 203, 204, 206, 210, 212, 213, 219, 225, 226, 232, 233, 250, 258, 261, 265, 269], "sin": [1, 2, 7, 14, 15, 19, 21, 24, 30, 32, 49, 50, 52, 54, 55, 57, 58, 59, 60, 64, 68, 69, 72, 73, 74, 75, 77, 78, 81, 86, 91, 92, 101, 104, 105, 106, 111, 112, 114, 116, 118, 119, 120, 124, 127, 132, 134, 158, 170, 172, 173, 175, 177, 178, 179, 180, 182, 184, 190, 191, 193, 194, 195, 196, 197, 201, 202, 203, 204, 206, 209, 210, 212, 213, 215, 221, 227, 233, 239, 240, 241, 242, 243, 248, 258, 259, 261, 263, 264, 269, 270], "boolean": [1, 20, 25, 26, 27, 28, 29, 30, 32, 50, 56, 60, 64, 65, 66, 67, 78, 81, 86, 87, 90, 93, 97, 99, 145, 170, 172, 174, 180, 183, 185, 187, 189, 191, 194, 206, 210, 212, 214, 232, 241, 252, 265], "sens": [1, 5, 7, 24, 28, 30, 31, 50, 52, 55, 58, 75, 80, 107, 114, 165, 170, 178, 181, 187, 189, 203, 204, 206, 213, 214, 226, 227, 232, 247, 269], "exponenti": [1, 2, 7, 24, 32, 41, 46, 50, 51, 55, 57, 77, 80, 81, 86, 90, 92, 146, 162, 191, 206, 213, 214, 260, 261, 265], "complex": [1, 2, 4, 7, 14, 24, 27, 29, 30, 32, 41, 50, 51, 53, 54, 55, 57, 58, 62, 72, 75, 81, 82, 86, 90, 91, 92, 97, 99, 103, 112, 127, 129, 133, 143, 146, 148, 149, 160, 169, 170, 178, 182, 183, 185, 186, 189, 190, 194, 195, 199, 204, 206, 210, 212, 213, 214, 227, 235, 269, 270], "manual": [1, 9, 11, 12, 15, 32, 33, 41, 54, 60, 77, 78, 92, 99, 111, 112, 124, 128, 180, 187, 194, 210, 212, 213, 228, 259, 269], "trick": [1, 2, 46, 204, 220], "treat": [1, 7, 8, 40, 41, 48, 50, 55, 58, 65, 66, 86, 92, 109, 112, 133, 170, 175, 182, 184, 185, 187, 189, 190, 191, 193, 194, 201, 202, 204, 206, 207, 210, 218, 226, 229, 245, 261, 265], "cdot": [1, 7, 33, 49, 55, 58, 68, 72, 73, 75, 81, 83, 86, 90, 100, 102, 125, 165, 175, 177, 178, 179, 181, 182, 190, 197, 201, 204, 210, 212, 215, 216, 244, 245, 263, 264, 269], "try": [1, 2, 7, 8, 14, 15, 16, 42, 49, 50, 54, 58, 60, 65, 75, 77, 80, 83, 86, 89, 90, 150, 152, 159, 160, 180, 184, 189, 194, 199, 201, 202, 203, 204, 206, 207, 210, 212, 233, 235, 258, 261, 264, 265, 269], "attributeerror": [1, 7, 50, 86, 213, 233, 265], "as_coeff_mul": [1, 50, 75, 83], "tri": [1, 2, 7, 31, 50, 58, 66, 75, 77, 114, 124, 155, 181, 182, 189, 194, 196, 206, 210, 211, 213, 225, 261, 269], "follow": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 19, 25, 27, 30, 31, 32, 33, 39, 40, 41, 42, 43, 46, 49, 50, 51, 54, 55, 56, 57, 58, 62, 64, 66, 73, 74, 75, 77, 80, 81, 83, 86, 90, 91, 93, 94, 106, 107, 112, 114, 121, 122, 123, 124, 125, 127, 129, 133, 152, 155, 157, 160, 163, 165, 170, 175, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 192, 193, 194, 195, 196, 201, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 225, 228, 229, 232, 233, 236, 242, 243, 245, 258, 259, 261, 262, 264, 265, 269, 270], "benchmark": [1, 114, 126], "random": [1, 11, 14, 34, 39, 41, 42, 48, 51, 60, 63, 64, 85, 86, 90, 144, 156, 180, 187, 194, 224, 225, 228, 232, 250, 256, 261, 265, 269], "runtest": [1, 225], "tmpfile": 1, "random_complex_numb": 1, "verify_numer": 1, "test_derivative_numer": 1, "_randrang": [1, 51], "_randint": [1, 187], "explicitli": [1, 7, 12, 32, 41, 42, 50, 51, 53, 56, 58, 63, 67, 83, 86, 91, 99, 112, 169, 170, 180, 182, 184, 185, 187, 190, 194, 206, 210, 230, 261, 265, 268, 270], "as_poli": [1, 50, 182, 190], "as_expr": [1, 50, 86, 184, 189, 190, 191, 265], "combintor": 1, "control": [1, 2, 7, 11, 13, 31, 33, 50, 51, 54, 75, 80, 81, 124, 127, 140, 144, 155, 156, 160, 164, 190, 191, 195, 202, 207, 213, 232, 255, 256, 258], "whether": [1, 7, 8, 9, 12, 30, 31, 32, 36, 41, 49, 50, 51, 57, 58, 62, 65, 77, 78, 80, 81, 86, 90, 103, 108, 111, 112, 148, 167, 172, 178, 180, 183, 184, 185, 189, 190, 194, 197, 201, 202, 206, 207, 210, 212, 213, 214, 215, 225, 227, 232, 233, 239, 241, 261, 265], "cycl": [1, 15, 32, 38, 41, 42, 48, 50, 53, 55, 81, 90, 134, 202, 232], "bad": [1, 9, 49, 90, 162, 194], "global": [1, 12, 14, 25, 26, 27, 30, 32, 33, 50, 62, 75, 92, 144, 150, 170, 172, 180, 181, 184, 185, 187, 194, 207, 210, 211, 214, 225, 227, 228, 233, 241], "perm_cycl": [1, 42, 194], "printer": [1, 42, 50, 58, 78, 86, 91, 174, 219, 226, 227, 233, 251, 257, 260, 264], "easiest": [1, 2, 13, 15, 50, 181, 184, 207, 233, 243, 258, 264, 269], "configur": [1, 11, 12, 13, 42, 80, 99, 107, 115, 118, 120, 121, 122, 124, 186, 194], "init_print": [1, 19, 32, 42, 54, 77, 78, 86, 94, 174, 181, 182, 193, 259, 263, 265, 268, 269, 270], "current": [1, 2, 7, 12, 15, 24, 27, 30, 31, 32, 33, 34, 41, 44, 45, 47, 48, 49, 50, 52, 56, 58, 60, 62, 65, 70, 73, 75, 77, 79, 81, 86, 90, 92, 93, 96, 103, 112, 121, 154, 159, 160, 164, 168, 178, 180, 181, 182, 183, 185, 187, 190, 191, 193, 194, 195, 201, 204, 206, 207, 209, 210, 211, 212, 213, 214, 220, 225, 226, 227, 229, 242, 265, 270], "take": [1, 2, 5, 7, 8, 11, 12, 13, 15, 27, 30, 32, 33, 35, 40, 41, 45, 49, 50, 51, 52, 56, 57, 58, 62, 63, 73, 77, 79, 80, 81, 86, 90, 91, 92, 93, 99, 103, 107, 109, 111, 112, 114, 124, 125, 127, 129, 143, 146, 149, 150, 154, 156, 157, 158, 159, 160, 162, 165, 168, 169, 170, 171, 172, 174, 177, 178, 180, 181, 182, 183, 184, 185, 187, 190, 191, 194, 197, 200, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 216, 219, 225, 226, 228, 229, 232, 233, 239, 240, 241, 258, 259, 261, 263, 264, 265, 269], "parse_expr": [1, 7, 11, 92], "problemat": [1, 184], "few": [1, 7, 9, 11, 12, 28, 40, 42, 50, 51, 77, 78, 90, 91, 114, 121, 163, 169, 174, 177, 178, 181, 189, 194, 202, 203, 204, 210, 213, 214, 227, 232, 269], "affect": [1, 7, 49, 50, 86, 169, 190, 213, 243], "perform": [1, 2, 4, 5, 7, 11, 29, 31, 32, 33, 41, 42, 45, 49, 50, 51, 53, 54, 56, 63, 67, 74, 77, 84, 86, 90, 91, 105, 107, 114, 115, 121, 124, 125, 127, 144, 145, 154, 157, 160, 175, 178, 182, 183, 184, 187, 189, 190, 195, 196, 197, 201, 206, 207, 210, 212, 213, 214, 215, 226, 232, 239, 240, 242, 245, 250, 258, 259, 263, 264, 269], "18056": 1, "15416": 1, "where": [1, 2, 5, 7, 8, 9, 12, 13, 14, 15, 23, 24, 28, 30, 31, 32, 33, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 63, 65, 66, 67, 68, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 86, 90, 93, 96, 99, 103, 106, 107, 108, 109, 111, 112, 114, 123, 124, 125, 127, 128, 134, 144, 149, 155, 157, 159, 160, 161, 162, 163, 170, 173, 175, 177, 178, 179, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 215, 218, 220, 225, 226, 227, 228, 232, 233, 235, 239, 245, 247, 259, 261, 263, 265, 269, 270], "caus": [1, 12, 15, 19, 50, 51, 54, 56, 86, 112, 119, 124, 177, 194, 203, 210, 211, 212, 229, 230, 265], "up": [1, 5, 7, 8, 9, 11, 12, 19, 27, 30, 32, 41, 42, 44, 50, 51, 52, 54, 55, 56, 58, 59, 66, 67, 71, 75, 77, 78, 80, 81, 86, 90, 91, 93, 101, 103, 109, 111, 114, 118, 120, 124, 125, 127, 128, 140, 155, 157, 173, 179, 180, 181, 184, 185, 189, 191, 194, 195, 196, 201, 203, 204, 206, 207, 210, 211, 212, 213, 226, 227, 228, 229, 230, 233, 260, 261, 264, 265, 267], "100x": 1, "slowdown": [1, 54], "automat": [1, 2, 7, 9, 11, 12, 14, 15, 31, 32, 33, 42, 50, 52, 53, 54, 55, 56, 57, 58, 63, 65, 69, 75, 78, 80, 90, 92, 93, 107, 112, 114, 119, 146, 148, 149, 158, 160, 173, 177, 180, 181, 184, 185, 186, 189, 190, 191, 194, 197, 200, 201, 203, 204, 206, 207, 210, 212, 213, 219, 220, 225, 226, 227, 230, 243, 248, 259, 261, 263, 264, 268, 269, 270], "doesn": [1, 2, 12, 14, 32, 74, 112, 115, 124, 127, 178, 182, 191, 193, 203, 206, 213, 270], "significantli": [1, 32, 54, 103, 122, 185, 196, 226, 229], "slower": [1, 46, 86, 184, 189, 233, 258], "direct": [1, 6, 12, 14, 15, 24, 26, 27, 31, 35, 38, 41, 46, 49, 50, 52, 54, 56, 59, 63, 64, 65, 66, 80, 81, 86, 93, 94, 103, 104, 106, 114, 115, 119, 127, 146, 170, 175, 177, 178, 181, 183, 184, 187, 191, 201, 204, 220, 223, 232, 239, 243, 244, 247], "happen": [1, 5, 7, 8, 12, 14, 24, 32, 42, 49, 50, 54, 62, 65, 74, 155, 159, 165, 181, 187, 189, 190, 193, 202, 206, 210, 214, 233, 243, 261, 268, 269], "occur": [1, 2, 14, 41, 42, 50, 54, 57, 58, 67, 75, 81, 92, 103, 124, 169, 170, 177, 189, 197, 206, 211, 212, 215, 225, 232, 264], "_sympifi": [1, 50, 83, 264], "equival": [1, 2, 7, 8, 12, 24, 28, 32, 33, 40, 41, 46, 50, 51, 54, 56, 58, 75, 77, 86, 90, 92, 96, 97, 99, 112, 121, 143, 154, 157, 160, 163, 170, 174, 178, 180, 181, 182, 184, 185, 189, 190, 194, 201, 202, 206, 210, 212, 213, 215, 216, 219, 220, 229, 233, 235, 236, 252], "strict": [1, 41, 42, 50, 54, 55, 81, 86, 187, 190, 212, 232, 235, 269], "lot": [1, 41, 50, 68, 75, 77, 86, 112, 127, 180, 193, 197, 207, 213, 225, 269], "harder": [1, 7, 14, 50, 75, 184, 225], "secur": 1, "eval": [1, 7, 14, 26, 27, 32, 50, 56, 57, 58, 146, 160, 185, 190, 194, 227, 258], "__repr__": [1, 194], "com": [1, 9, 11, 12, 13, 14, 15, 19, 24, 28, 30, 41, 43, 44, 50, 51, 53, 54, 55, 56, 58, 60, 66, 67, 75, 77, 81, 86, 90, 97, 179, 188, 197, 199, 202, 203, 206, 207, 210, 213, 214, 232, 235, 265], "pull": [1, 9, 11, 12, 13, 14, 15, 17, 19, 32, 50, 55, 58, 159, 195, 206, 210, 213, 265, 269], "12524": 1, "begin": [1, 2, 7, 14, 21, 50, 51, 55, 56, 58, 75, 81, 83, 86, 90, 115, 122, 123, 124, 125, 156, 165, 170, 178, 179, 183, 194, 204, 207, 210, 211, 213, 214, 225, 235, 261, 263, 265, 269], "usual": [1, 2, 5, 7, 11, 31, 33, 41, 49, 50, 51, 68, 75, 77, 86, 121, 146, 158, 165, 175, 177, 178, 181, 182, 184, 185, 187, 193, 194, 195, 201, 204, 210, 213, 214, 215, 219, 220, 227, 229, 233, 239, 247, 258, 261, 264, 268, 269], "custom": [1, 14, 18, 32, 42, 50, 54, 78, 81, 86, 105, 106, 169, 174, 175, 196, 200, 207, 214, 220, 226, 233, 239, 247, 256, 263, 265], "repr": [1, 32, 77, 154, 184, 189, 194, 225, 268], "anyth": [1, 2, 12, 14, 15, 30, 32, 50, 51, 61, 65, 86, 112, 134, 144, 191, 194, 200, 202, 206, 210, 212, 226, 232, 235, 261], "look": [1, 2, 7, 8, 12, 14, 15, 23, 31, 32, 41, 50, 55, 56, 58, 71, 86, 90, 107, 112, 114, 121, 144, 154, 155, 158, 173, 180, 184, 185, 189, 194, 196, 197, 201, 204, 206, 207, 210, 211, 225, 229, 233, 235, 243, 259, 264, 267, 268], "valid": [1, 7, 8, 11, 14, 15, 25, 27, 29, 30, 31, 32, 43, 49, 50, 55, 56, 66, 76, 86, 90, 105, 107, 112, 114, 125, 129, 133, 152, 157, 167, 170, 174, 178, 184, 187, 190, 193, 194, 202, 206, 207, 210, 212, 213, 214, 233, 265, 269], "identifi": [1, 7, 8, 14, 30, 43, 50, 53, 54, 77, 86, 122, 148, 149, 181, 184, 185, 195, 203, 206, 210, 211, 212, 213, 214, 233, 236], "There": [1, 2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 32, 33, 41, 42, 43, 44, 47, 49, 50, 51, 54, 55, 58, 74, 75, 77, 78, 79, 80, 83, 86, 90, 93, 94, 99, 103, 111, 121, 122, 124, 133, 150, 155, 169, 170, 174, 177, 178, 180, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 202, 203, 204, 206, 207, 210, 212, 213, 214, 219, 228, 229, 232, 233, 235, 243, 258, 259, 261, 263, 264, 268, 269], "plenti": 1, "firstli": [1, 7, 12, 204], "alongsid": [1, 12, 83], "unchang": [1, 12, 41, 42, 50, 77, 86, 99, 190, 194, 200, 203, 206, 213, 258], "_sympy_": [1, 50], "dictionari": [1, 11, 31, 32, 39, 41, 42, 48, 50, 55, 64, 66, 79, 81, 86, 89, 90, 92, 93, 105, 107, 108, 111, 112, 114, 115, 118, 122, 124, 150, 160, 170, 178, 180, 182, 185, 187, 189, 190, 192, 194, 201, 206, 207, 210, 211, 212, 213, 214, 218, 220, 225, 229, 232, 233, 239, 258, 265], "disabl": [1, 50, 51, 75, 77, 90, 187, 190, 194, 202, 210, 212, 223, 225, 228, 232], "int": [1, 2, 7, 8, 11, 14, 15, 24, 30, 32, 42, 50, 51, 52, 55, 56, 58, 59, 66, 75, 77, 78, 80, 81, 86, 87, 90, 92, 97, 99, 140, 144, 145, 154, 170, 172, 173, 174, 179, 180, 184, 185, 189, 190, 191, 194, 196, 197, 199, 210, 211, 214, 226, 230, 232, 235, 261, 263, 264, 268, 269], "dx": [1, 5, 15, 30, 32, 46, 50, 52, 54, 58, 67, 69, 72, 73, 74, 75, 77, 86, 93, 102, 107, 108, 149, 178, 190, 191, 197, 207, 210, 211, 215, 259, 263, 268, 270], "constant": [1, 30, 32, 49, 50, 54, 56, 58, 74, 75, 77, 93, 94, 99, 111, 112, 114, 127, 128, 137, 141, 147, 163, 164, 166, 167, 168, 171, 173, 175, 180, 182, 185, 187, 189, 190, 191, 194, 196, 201, 204, 206, 207, 210, 211, 212, 213, 214, 225, 227, 232, 233, 241, 245, 248, 259, 265, 270], "equal": [1, 3, 7, 8, 14, 24, 28, 31, 32, 33, 39, 40, 41, 42, 46, 48, 49, 51, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 69, 75, 80, 81, 83, 86, 90, 93, 99, 100, 104, 107, 109, 114, 122, 123, 144, 145, 160, 165, 170, 173, 178, 181, 182, 183, 184, 185, 187, 189, 190, 192, 194, 200, 202, 204, 207, 210, 211, 212, 213, 214, 220, 225, 226, 227, 232, 235, 239, 243, 248, 259, 262, 270], "lh": [1, 32, 40, 50, 192, 194, 210, 212, 213, 244], "tensexpr": [1, 100, 220], "substitute_indic": 1, "danger": [1, 182], "tensor_head": [1, 100, 220], "had": [1, 42, 50, 51, 86, 90, 112, 124, 189, 190, 191, 194, 202, 204, 210, 212, 213, 228, 233, 258, 261, 264, 265], "purpos": [1, 6, 7, 13, 14, 15, 16, 31, 32, 41, 47, 50, 51, 77, 86, 112, 127, 165, 169, 178, 184, 187, 191, 193, 194, 201, 210, 213, 219, 229, 231, 233, 242, 243, 259, 269], "shorter": [1, 50, 60, 103, 122, 169, 181, 185, 194, 227, 235], "creation": [1, 2, 50, 52, 86, 104, 109, 118, 121, 122, 123, 124, 134, 144, 148, 149, 150, 160, 177, 178, 194, 214, 219, 227, 233], "l": [1, 2, 14, 30, 31, 32, 33, 39, 41, 42, 49, 51, 58, 61, 62, 63, 64, 65, 67, 68, 73, 75, 77, 79, 82, 83, 86, 90, 93, 94, 99, 101, 106, 107, 109, 111, 112, 115, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 132, 158, 161, 162, 163, 165, 177, 178, 179, 181, 183, 185, 187, 188, 194, 196, 197, 203, 204, 207, 210, 212, 214, 218, 219, 220, 221, 225, 227, 232, 248, 269], "_dummy_fmt": 1, "l_": [1, 77, 86], "d": [1, 2, 5, 9, 14, 15, 24, 31, 34, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 55, 58, 60, 64, 68, 73, 75, 77, 79, 80, 81, 82, 83, 86, 87, 89, 90, 92, 93, 107, 127, 129, 132, 133, 139, 149, 157, 159, 160, 165, 169, 170, 172, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 196, 200, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 218, 220, 232, 235, 239, 240, 241, 242, 243, 247, 255, 265, 270], "obsolet": 1, "format": [1, 5, 9, 12, 16, 31, 42, 51, 72, 73, 77, 80, 86, 89, 90, 93, 111, 128, 133, 144, 154, 180, 183, 184, 189, 190, 192, 194, 204, 210, 213, 225, 235, 239, 242, 262, 265, 268], "dummy_nam": [1, 220], "clearer": [1, 242], "ambigu": [1, 2, 15, 50, 148, 154, 206, 218, 223], "symmetri": [1, 14, 38, 43, 46, 58, 81, 139, 179, 210, 218, 220, 258, 269], "metric_symmetri": [1, 220], "set_metr": [1, 220], "delta": [1, 2, 32, 34, 44, 55, 58, 73, 75, 79, 97, 124, 132, 160, 194, 201, 207, 210, 214, 215, 220], "epsilon": [1, 2, 49, 51, 58, 75, 77, 131, 194, 220], "respect": [1, 2, 13, 14, 25, 27, 28, 30, 31, 32, 33, 40, 41, 42, 45, 46, 48, 49, 50, 52, 56, 58, 60, 62, 66, 67, 72, 73, 75, 77, 80, 81, 83, 86, 90, 92, 93, 94, 99, 104, 105, 106, 109, 115, 123, 125, 127, 134, 149, 162, 163, 164, 169, 170, 173, 175, 178, 179, 180, 181, 184, 187, 189, 190, 191, 194, 196, 197, 200, 202, 206, 210, 211, 212, 213, 214, 215, 219, 220, 225, 227, 239, 240, 241, 242, 243, 244, 245, 246, 247, 259, 269], "prefer": [1, 7, 9, 11, 14, 16, 32, 42, 49, 50, 58, 90, 92, 112, 160, 165, 180, 183, 185, 187, 189, 194, 202, 206, 210, 212, 219, 225, 227, 230, 233, 263, 265], "over": [1, 2, 4, 12, 15, 24, 30, 31, 32, 33, 41, 42, 45, 49, 50, 51, 52, 53, 54, 55, 64, 66, 73, 75, 79, 80, 83, 86, 87, 90, 93, 94, 101, 112, 127, 128, 139, 155, 158, 160, 164, 165, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 197, 199, 201, 206, 207, 209, 210, 212, 213, 214, 215, 218, 219, 228, 232, 233, 239, 241, 245, 248, 263, 267, 269], "latter": [1, 4, 32, 41, 50, 55, 58, 75, 90, 181, 185, 189, 194, 204, 207, 220, 227, 232, 233, 261], "extra": [1, 9, 32, 50, 51, 90, 91, 119, 165, 175, 186, 187, 194, 204, 210, 225, 226, 227, 245], "involv": [1, 2, 5, 7, 27, 29, 41, 49, 50, 51, 55, 62, 63, 75, 77, 90, 99, 104, 107, 112, 139, 149, 155, 157, 167, 177, 178, 181, 182, 185, 187, 189, 190, 191, 195, 196, 201, 202, 203, 204, 206, 207, 210, 212, 215, 233, 269], "obscur": [1, 7], "young": [1, 93, 220], "tableau": 1, "Is": [1, 12, 42, 60, 61, 63, 64, 65, 66, 90, 191, 213], "favor": 1, "consist": [1, 5, 7, 14, 15, 31, 41, 42, 46, 50, 51, 55, 56, 58, 60, 66, 68, 75, 80, 93, 125, 134, 154, 160, 165, 168, 173, 180, 182, 184, 185, 187, 202, 210, 212, 213, 214, 218, 223, 226, 227, 232, 262, 264], "tensorindex": [1, 220], "tensor_indic": [1, 100, 220], "denot": [1, 2, 5, 41, 42, 50, 52, 58, 72, 73, 75, 77, 79, 80, 81, 86, 90, 92, 99, 165, 170, 175, 180, 181, 182, 187, 189, 197, 201, 202, 204, 210, 214, 219, 220, 239, 240, 242, 243, 245, 247], "set_dimens": 1, "unit_system": [1, 167], "set_quantity_dimens": [1, 163], "set_global_dimens": 1, "set_scale_factor": 1, "set_quantity_scale_factor": [1, 163], "set_global_relative_scale_factor": [1, 167], "get_dimensional_expr": 1, "associ": [1, 7, 15, 31, 33, 48, 50, 51, 57, 58, 72, 73, 75, 79, 125, 127, 150, 158, 169, 170, 177, 178, 182, 183, 184, 185, 187, 189, 194, 202, 204, 207, 220, 234], "unitsystem": [1, 168], "dimension": [1, 30, 32, 34, 52, 62, 63, 64, 65, 66, 83, 86, 94, 100, 127, 134, 136, 146, 162, 164, 175, 176, 180, 181, 187, 189, 190, 193, 194, 212, 213, 215, 216, 220, 226, 247, 270], "_collect_factor_and_dimens": 1, "motiv": 1, "emptyset": [1, 7, 30, 31, 80, 194, 213, 239, 270], "is_empti": [1, 7, 42], "none": [1, 7, 8, 14, 15, 24, 25, 26, 27, 28, 30, 31, 32, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 77, 78, 80, 81, 83, 86, 87, 90, 91, 92, 93, 99, 104, 105, 106, 107, 108, 111, 112, 129, 131, 133, 134, 140, 145, 150, 155, 157, 160, 162, 166, 167, 168, 170, 172, 173, 174, 178, 179, 180, 181, 183, 184, 185, 187, 189, 190, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 223, 225, 226, 227, 228, 232, 233, 235, 238, 239, 241, 265, 269, 270], "unknown": [1, 4, 7, 8, 24, 50, 51, 94, 145, 192, 209, 210, 211, 212, 213, 232, 270], "empti": [1, 7, 26, 30, 31, 32, 33, 41, 45, 49, 50, 62, 65, 66, 67, 80, 81, 86, 90, 107, 124, 155, 168, 185, 189, 190, 194, 200, 201, 202, 204, 210, 212, 213, 225, 227, 232, 235, 264], "individu": [1, 7, 50, 56, 61, 66, 67, 79, 81, 83, 86, 99, 125, 132, 150, 154, 179, 202, 210, 225, 265], "themselv": [1, 11, 15, 28, 31, 42, 46, 48, 50, 77, 90, 121, 164, 184, 185, 189, 200, 214, 220, 229, 232, 235, 269], "But": [1, 2, 11, 12, 15, 49, 50, 58, 64, 74, 81, 86, 90, 148, 149, 160, 165, 170, 181, 182, 187, 191, 201, 203, 204, 206, 207, 210, 212, 213, 219, 229, 232, 233, 241, 259, 261, 263, 264, 269], "exactli": [1, 2, 12, 14, 15, 28, 34, 41, 50, 53, 54, 57, 86, 92, 106, 125, 179, 204, 206, 210, 213, 215, 229, 232, 233, 259, 261, 263, 268, 269], "denest": [1, 50, 190, 205, 212, 232], "On": [1, 7, 9, 27, 43, 50, 52, 58, 77, 80, 90, 112, 165, 175, 184, 187, 188, 189, 190, 210, 212, 229, 233, 245, 247], "hand": [1, 5, 7, 14, 31, 32, 42, 43, 50, 56, 58, 77, 80, 81, 86, 90, 93, 107, 111, 112, 124, 128, 132, 149, 152, 170, 175, 178, 179, 181, 184, 185, 187, 189, 192, 204, 213, 225, 227, 229, 233, 236, 245, 247, 263], "anoth": [1, 2, 4, 5, 7, 8, 12, 14, 15, 28, 31, 32, 42, 47, 49, 50, 51, 52, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 75, 77, 83, 86, 90, 93, 94, 109, 149, 165, 167, 170, 173, 177, 178, 180, 182, 184, 185, 187, 189, 190, 191, 194, 195, 201, 202, 204, 210, 212, 213, 214, 226, 227, 233, 239, 242, 243, 247, 258, 261, 263, 264, 269, 270], "path": [1, 9, 13, 14, 41, 66, 72, 99, 119, 175, 177, 203, 206, 210, 213, 225, 226, 229, 230, 232, 235, 236, 237, 245], "particl": [1, 104, 106, 107, 112, 115, 116, 121, 122, 124, 127, 128, 136, 139, 146, 147, 158, 160, 163, 165, 177, 220], "rigidbodi": [1, 104, 107, 111, 114, 118, 119, 120, 121, 125, 127], "potential_energi": [1, 107, 120, 121, 125], "energi": [1, 101, 104, 107, 109, 112, 120, 121, 136, 161, 165, 175, 220, 245, 255], "setter": [1, 112, 127], "getter": [1, 50, 112, 127], "set_": 1, "fix": [1, 12, 14, 17, 32, 41, 43, 46, 48, 51, 58, 62, 79, 93, 94, 104, 106, 109, 114, 127, 144, 149, 153, 156, 160, 165, 170, 173, 177, 178, 180, 184, 187, 189, 190, 191, 194, 200, 204, 212, 214, 232, 239, 240], "set_condit": 1, "And": [1, 2, 8, 12, 21, 26, 41, 42, 49, 50, 51, 58, 75, 80, 81, 86, 89, 106, 132, 178, 180, 182, 190, 191, 194, 202, 206, 207, 213, 214, 233, 243, 269], "17749": 1, "side": [1, 2, 5, 7, 32, 41, 42, 50, 62, 66, 77, 86, 90, 93, 99, 107, 111, 124, 125, 128, 148, 149, 165, 170, 179, 181, 187, 189, 192, 194, 211, 213, 214, 218, 225, 227, 248, 259], "unpack": [1, 50, 81, 86, 232, 233], "expand": [1, 2, 5, 7, 14, 32, 52, 54, 55, 56, 58, 75, 77, 81, 99, 112, 114, 127, 141, 149, 152, 159, 160, 182, 184, 186, 187, 189, 190, 191, 197, 201, 203, 204, 206, 210, 213, 214, 218, 226, 233, 244, 250, 258, 263], "intermedi": [1, 22, 32, 33, 73, 81, 112, 114, 118, 144, 154, 162, 163, 170, 173, 177, 213, 227, 266], "befor": [1, 2, 7, 8, 12, 14, 19, 32, 41, 42, 44, 46, 50, 51, 52, 58, 78, 81, 86, 90, 92, 93, 94, 103, 108, 112, 114, 115, 118, 119, 124, 127, 129, 160, 169, 174, 178, 182, 184, 189, 190, 194, 195, 201, 202, 206, 207, 210, 212, 213, 214, 221, 225, 228, 232, 233, 242, 262, 263, 264, 269], "satisfi": [1, 7, 11, 15, 27, 28, 30, 33, 38, 41, 46, 50, 51, 55, 58, 60, 73, 75, 79, 80, 86, 90, 108, 124, 144, 149, 181, 182, 187, 189, 190, 194, 200, 201, 202, 207, 210, 211, 212, 213, 214, 220, 264, 269], "emul": [1, 206, 213, 215, 233], "is_deriv": [1, 50], "as_finite_differ": [1, 30, 50, 259], "17881": 1, "get_matrix": [1, 220], "__getitem__": [1, 50, 81, 219], "__iter__": [1, 42, 50, 206], "_components_data_full_destroi": 1, "__pow__": [1, 81, 185, 191], "flaw": 1, "replace_with_arrai": [1, 220, 221], "cach": [1, 7, 55, 75, 181, 190, 194, 223, 228, 229, 250], "actual": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 31, 32, 33, 39, 41, 48, 50, 51, 58, 62, 75, 77, 79, 83, 86, 90, 99, 103, 112, 114, 122, 123, 124, 174, 181, 184, 189, 194, 202, 204, 206, 207, 210, 213, 221, 225, 226, 229, 230, 232, 233, 263], "safe": [1, 90, 184, 190, 212, 218, 259], "squar": [1, 2, 7, 24, 27, 32, 41, 50, 51, 56, 66, 67, 75, 77, 81, 82, 86, 89, 90, 93, 99, 101, 122, 123, 146, 162, 170, 179, 183, 185, 186, 187, 189, 190, 191, 194, 202, 205, 207, 210, 213, 214, 263], "jordan": [1, 75, 81, 86, 192, 212, 213], "block": [1, 12, 14, 32, 39, 41, 51, 81, 85, 86, 111, 112, 114, 116, 170, 178, 183, 207, 233, 242], "band": [1, 81, 89], "eigenvalu": [1, 81, 86, 112, 114, 154, 157, 263], "elif": [1, 7, 8, 50, 57], "lower": [1, 7, 14, 27, 30, 32, 41, 42, 49, 50, 52, 58, 59, 61, 66, 67, 77, 81, 82, 83, 86, 97, 102, 106, 160, 173, 179, 181, 183, 185, 187, 190, 194, 203, 204, 206, 210, 219, 220, 229, 239, 259, 267], "inspect": [1, 7, 86, 189, 200, 231, 233, 257], "getsourc": [1, 233, 237], "obj": [1, 7, 14, 50, 185, 190, 194, 228], "ipython": [1, 2, 11, 14, 19, 78, 127, 174, 233, 237, 238, 267, 268], "jupyt": [1, 11, 233, 237], "absolut": [1, 9, 28, 29, 32, 49, 50, 56, 65, 75, 77, 81, 86, 101, 158, 185, 189, 190, 204, 206, 209, 214, 225, 247, 248, 249], "natur": [1, 2, 7, 12, 24, 28, 32, 33, 41, 50, 51, 55, 56, 84, 90, 112, 162, 164, 165, 181, 184, 185, 187, 189, 191, 194, 203, 207, 213, 214, 232, 248, 264, 269], "time": [1, 2, 5, 7, 8, 9, 11, 12, 15, 23, 27, 28, 32, 41, 42, 46, 50, 51, 55, 58, 73, 75, 80, 81, 86, 87, 89, 90, 91, 92, 96, 97, 99, 103, 107, 108, 111, 112, 114, 115, 118, 119, 121, 122, 123, 124, 125, 127, 128, 134, 144, 149, 157, 158, 162, 163, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 187, 188, 189, 190, 191, 193, 194, 201, 202, 203, 204, 206, 210, 212, 214, 223, 225, 226, 231, 232, 233, 245, 247, 257, 259, 263, 264, 265], "sum": [1, 5, 7, 32, 39, 42, 49, 50, 53, 55, 58, 63, 65, 73, 75, 77, 79, 80, 81, 83, 86, 90, 109, 122, 139, 143, 146, 154, 157, 159, 160, 179, 181, 182, 184, 185, 189, 190, 191, 194, 196, 197, 199, 201, 203, 204, 206, 207, 210, 212, 213, 214, 215, 216, 218, 220, 229, 232, 250, 269], "meter": [1, 93, 94, 131, 134, 163, 165, 166, 167], "second": [1, 2, 5, 7, 8, 12, 15, 23, 27, 30, 32, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 63, 64, 66, 77, 86, 90, 91, 93, 94, 97, 99, 100, 103, 104, 106, 107, 112, 115, 118, 120, 121, 123, 125, 131, 133, 134, 137, 141, 146, 149, 154, 155, 157, 158, 163, 165, 167, 169, 170, 171, 177, 178, 180, 183, 184, 187, 188, 189, 190, 194, 196, 204, 206, 207, 210, 212, 213, 214, 215, 216, 232, 233, 239, 241, 242, 243, 255, 258, 263, 264, 265], "si": [1, 58, 74, 75, 133, 162, 163, 165, 166, 167, 194], "cg": [1, 139, 157], "At": [1, 7, 11, 30, 46, 56, 58, 77, 90, 93, 94, 103, 165, 169, 178, 189, 204, 233], "aris": [1, 7, 8, 50, 55, 75, 77, 157, 178, 184, 189], "scale": [1, 59, 60, 61, 65, 66, 67, 78, 93, 140, 161, 163, 165, 167, 168, 174, 178, 180, 197, 214, 245, 247], "factor": [1, 2, 11, 33, 41, 42, 49, 50, 51, 54, 55, 56, 58, 75, 77, 86, 90, 93, 99, 127, 129, 137, 141, 144, 156, 160, 165, 166, 167, 181, 184, 185, 186, 188, 189, 190, 197, 203, 204, 206, 207, 212, 214, 218, 229, 242, 245, 263, 265], "while": [1, 2, 7, 12, 14, 18, 21, 31, 32, 33, 41, 42, 43, 46, 49, 50, 51, 52, 54, 55, 60, 64, 66, 74, 80, 81, 86, 90, 91, 92, 93, 104, 108, 112, 115, 124, 144, 165, 170, 175, 181, 189, 192, 194, 210, 213, 225, 227, 229, 232, 247, 258, 264, 265], "kilomet": [1, 166, 167], "1000": [1, 2, 32, 34, 50, 51, 54, 83, 90, 127, 165, 166, 167, 179, 193, 194, 203], "rel": [1, 14, 15, 31, 32, 40, 41, 42, 43, 47, 48, 49, 51, 54, 61, 75, 90, 104, 106, 109, 116, 124, 125, 132, 159, 170, 173, 177, 178, 181, 183, 184, 187, 189, 202, 204, 209, 212, 214, 225, 232, 242, 243, 247, 263], "being": [1, 2, 7, 8, 12, 15, 28, 30, 32, 41, 42, 48, 49, 50, 51, 56, 58, 60, 62, 63, 66, 67, 75, 80, 81, 86, 87, 90, 93, 94, 103, 111, 112, 114, 124, 125, 127, 128, 156, 165, 172, 175, 177, 178, 179, 180, 181, 183, 184, 189, 190, 191, 194, 203, 204, 206, 207, 210, 211, 212, 213, 214, 220, 223, 229, 230, 232, 233, 235, 239, 243, 247, 263, 265], "manag": [1, 12, 19, 26, 27, 92, 140, 187, 206, 220, 223, 225, 230], "dimensionsystem": [1, 162], "14318": 1, "duplic": [1, 2, 41, 44, 51, 56, 58, 86, 90, 202, 210, 232, 262], "common": [1, 2, 3, 7, 8, 14, 15, 20, 21, 22, 27, 30, 32, 41, 42, 50, 51, 56, 61, 64, 67, 77, 83, 85, 86, 90, 91, 97, 99, 104, 106, 108, 121, 125, 127, 132, 165, 170, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 196, 202, 203, 204, 205, 207, 210, 214, 226, 227, 230, 232, 233, 245, 247, 250, 253, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269], "flatten": [1, 31, 50, 184, 216, 221, 232, 233], "neither": [1, 7, 8, 28, 50, 134, 155, 180, 190, 201, 202, 203, 210, 220, 233, 239, 247, 269], "regardless": [1, 12, 14, 42, 50, 77, 90, 187, 202, 206, 232, 242, 247, 269], "much": [1, 5, 7, 8, 12, 14, 31, 32, 35, 46, 54, 58, 72, 75, 77, 124, 168, 169, 177, 178, 179, 181, 184, 187, 190, 201, 204, 206, 210, 211, 212, 213, 227, 229, 261, 263, 269], "less": [1, 5, 14, 15, 28, 32, 33, 41, 42, 49, 50, 51, 54, 55, 56, 58, 64, 65, 66, 81, 86, 90, 97, 99, 112, 114, 160, 184, 187, 189, 190, 203, 204, 206, 207, 210, 212, 213, 214, 225, 227], "polymorph": 1, "input": [1, 2, 14, 15, 20, 24, 30, 33, 46, 50, 51, 53, 54, 55, 56, 64, 77, 79, 80, 86, 90, 92, 96, 97, 99, 103, 108, 111, 112, 114, 115, 124, 127, 128, 133, 156, 170, 172, 173, 184, 185, 187, 190, 191, 192, 193, 194, 195, 202, 206, 207, 208, 210, 212, 214, 216, 226, 227, 229, 230, 232, 233, 235, 258, 264, 265, 269], "17": [1, 14, 39, 41, 42, 50, 51, 54, 55, 56, 60, 63, 66, 75, 86, 90, 99, 184, 185, 189, 190, 193, 194, 201, 203, 207, 210, 215, 229, 233, 263], "As": [1, 4, 5, 8, 14, 23, 32, 41, 42, 50, 51, 54, 55, 56, 58, 74, 75, 80, 86, 89, 90, 92, 111, 112, 114, 115, 124, 125, 160, 165, 177, 181, 182, 184, 185, 187, 191, 193, 194, 201, 202, 204, 210, 213, 214, 232, 233, 242, 243, 258, 259, 261, 263, 264, 265, 268, 269], "2d": [1, 11, 63, 64, 66, 76, 93, 94, 138, 170, 180, 194, 207, 219, 263], "3d": [1, 11, 24, 34, 63, 64, 93, 138, 161, 175, 180, 242, 244, 245, 246, 247], "anymor": [1, 180], "effect": [1, 11, 14, 19, 41, 43, 50, 67, 75, 77, 81, 86, 93, 112, 114, 124, 132, 160, 170, 180, 184, 187, 191, 193, 210, 261], "temporarili": [1, 50], "substitut": [1, 2, 5, 8, 9, 32, 50, 51, 56, 58, 75, 77, 86, 91, 92, 99, 107, 108, 112, 114, 115, 124, 149, 158, 160, 163, 170, 172, 173, 191, 192, 195, 196, 201, 204, 206, 207, 210, 211, 212, 213, 233, 241, 260, 261], "term": [1, 2, 5, 7, 15, 32, 41, 50, 51, 52, 54, 55, 56, 58, 69, 73, 74, 75, 77, 80, 81, 86, 90, 94, 97, 99, 105, 107, 114, 115, 118, 121, 122, 124, 125, 139, 144, 156, 157, 160, 162, 165, 170, 172, 175, 177, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 218, 219, 232, 239, 241, 245, 250, 259, 261, 263, 264, 269], "point3d": [1, 63, 64, 65, 133], "p1": [1, 33, 41, 42, 46, 49, 60, 62, 63, 64, 65, 66, 99, 104, 106, 115, 127, 129, 173, 180, 184, 185, 187, 191, 203, 214, 215], "p2": [1, 8, 41, 42, 49, 60, 62, 63, 64, 65, 66, 99, 104, 106, 127, 173, 180, 184, 185, 187, 191, 203, 214], "run": [2, 5, 7, 9, 12, 14, 15, 16, 18, 33, 41, 42, 44, 50, 51, 75, 86, 91, 92, 107, 114, 127, 160, 174, 180, 181, 194, 204, 206, 210, 211, 212, 222, 226, 228, 229, 232, 233, 257, 261, 268], "under": [2, 7, 8, 9, 11, 12, 14, 18, 26, 27, 29, 30, 32, 33, 40, 41, 46, 48, 58, 68, 75, 77, 79, 86, 90, 92, 93, 94, 129, 155, 179, 181, 182, 189, 190, 194, 201, 202, 204, 207, 210, 212, 213, 214, 220, 223, 263, 269], "program": [2, 7, 15, 32, 34, 42, 127, 165, 179, 227, 229, 261, 263, 267, 269], "languag": [2, 5, 11, 15, 18, 32, 56, 86, 92, 103, 112, 127, 194, 199, 214, 226, 227, 261, 263, 265, 267, 269], "some": [2, 5, 7, 8, 9, 11, 12, 14, 19, 23, 28, 31, 32, 33, 38, 41, 42, 48, 49, 50, 51, 54, 55, 56, 57, 58, 60, 61, 62, 66, 75, 77, 79, 80, 81, 83, 86, 90, 91, 92, 97, 100, 103, 104, 109, 111, 112, 113, 114, 115, 116, 121, 122, 124, 125, 128, 140, 145, 149, 157, 160, 165, 166, 169, 171, 175, 177, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 196, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 241, 243, 245, 249, 258, 259, 261, 263, 264, 265, 267, 268, 269], "behav": [2, 28, 30, 50, 51, 56, 58, 90, 190, 202, 206, 212, 215, 221, 265], "independ": [2, 28, 30, 32, 41, 49, 50, 52, 58, 67, 75, 77, 79, 86, 99, 107, 108, 112, 114, 115, 122, 124, 158, 165, 175, 180, 182, 184, 189, 190, 196, 197, 204, 206, 207, 210, 211, 212, 213, 214, 220, 225, 226, 245, 263, 264], "mapl": [2, 77, 210, 257, 263], "mathematica": [2, 32, 42, 92, 257, 263, 265], "encount": [2, 5, 15, 50, 77, 86, 152, 182, 187, 190, 212, 213, 227, 239, 265], "faq": 2, "tutori": [2, 5, 6, 9, 15, 19, 66, 112, 127, 182, 193, 194, 208, 210, 233, 261, 264, 266, 267, 268, 269, 270], "remaind": [2, 49, 50, 51, 90, 182, 184, 185, 188, 190, 210], "doc": [2, 11, 12, 14, 15, 16, 22, 32, 41, 49, 50, 66, 78, 125, 162, 184, 186, 207, 210, 225, 226, 228, 230, 232, 239, 243], "offici": [2, 9, 19, 50, 103, 127, 169, 178, 213, 233, 267], "familiar": [2, 77, 112, 125, 144, 191, 259, 261, 267], "java": 2, "4": [2, 3, 5, 7, 8, 11, 15, 21, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 97, 99, 100, 101, 105, 112, 114, 115, 116, 118, 119, 120, 121, 124, 125, 127, 128, 129, 132, 136, 139, 144, 154, 155, 157, 158, 159, 160, 161, 163, 169, 170, 171, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 214, 215, 216, 219, 220, 225, 226, 229, 232, 233, 239, 241, 242, 243, 245, 247, 248, 258, 259, 261, 263, 264, 265, 269, 270], "minut": [2, 103, 114, 169], "doctest": [2, 12, 14, 15, 43, 58, 86, 90, 114, 149, 160, 184, 190, 210, 225, 228, 230, 268], "skip": [2, 9, 11, 12, 14, 31, 34, 50, 81, 86, 90, 170, 189, 193, 194, 196, 210, 212, 223, 225, 259, 267, 268], "test": [2, 6, 8, 12, 14, 15, 16, 27, 28, 30, 31, 32, 37, 41, 42, 49, 50, 51, 57, 60, 65, 75, 81, 83, 86, 90, 140, 149, 153, 154, 155, 163, 178, 184, 185, 186, 187, 189, 191, 202, 204, 207, 210, 211, 212, 213, 223, 226, 227, 228, 229, 230, 232, 233, 235, 249, 252, 257, 261, 263, 264], "eq": [2, 7, 14, 28, 30, 32, 56, 60, 63, 67, 75, 80, 163, 180, 181, 185, 190, 192, 194, 196, 200, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 226, 227, 233, 239, 261, 263, 270], "assum": [2, 4, 7, 11, 14, 27, 32, 33, 34, 39, 41, 49, 50, 51, 52, 56, 58, 60, 67, 68, 75, 77, 86, 90, 93, 99, 111, 112, 117, 122, 123, 124, 125, 127, 133, 155, 159, 160, 170, 173, 175, 181, 182, 184, 187, 190, 192, 194, 201, 202, 204, 206, 207, 210, 211, 213, 214, 218, 219, 220, 227, 232, 235, 241, 243, 247, 262, 264, 267, 269, 270], "zero": [2, 7, 8, 12, 24, 27, 29, 32, 40, 41, 42, 46, 49, 53, 54, 55, 56, 57, 58, 60, 64, 65, 66, 75, 77, 79, 80, 81, 83, 85, 86, 89, 90, 92, 93, 98, 99, 106, 109, 112, 114, 116, 119, 122, 123, 127, 132, 154, 158, 160, 162, 173, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 192, 194, 197, 201, 202, 204, 206, 207, 210, 211, 212, 213, 214, 215, 230, 232, 233, 242, 244, 245, 264, 270], "subtract": [2, 32, 42, 50, 54, 65, 90, 99, 106, 162, 182, 183, 184, 185, 187, 189, 190, 264, 269], "proper": [2, 41, 50, 77, 90, 103, 112, 169, 184, 185, 189, 194, 202, 210, 215, 226, 227, 245, 265], "abc": [2, 4, 12, 14, 24, 25, 26, 27, 28, 29, 30, 32, 39, 41, 43, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 73, 74, 75, 77, 78, 80, 81, 83, 86, 89, 91, 97, 99, 101, 131, 133, 135, 136, 141, 158, 160, 161, 181, 183, 185, 187, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 226, 227, 228, 229, 230, 232, 233, 235, 239, 241, 242, 243, 248, 250, 261, 264, 268], "import": [2, 4, 5, 7, 8, 11, 12, 16, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 248, 258, 259, 261, 263, 264, 265, 267, 268, 269, 270], "print": [2, 5, 7, 8, 10, 12, 14, 15, 19, 25, 26, 27, 28, 30, 31, 33, 34, 39, 41, 42, 49, 50, 51, 54, 55, 56, 58, 77, 79, 80, 83, 86, 87, 90, 91, 92, 94, 99, 107, 112, 114, 121, 126, 132, 140, 153, 154, 158, 160, 170, 176, 178, 180, 183, 184, 185, 189, 190, 200, 201, 203, 204, 206, 210, 212, 219, 221, 225, 227, 232, 233, 235, 237, 239, 242, 249, 251, 257, 259, 260, 261, 262, 263, 264, 265, 269], "1": [2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 131, 132, 133, 134, 135, 139, 142, 143, 144, 145, 146, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 239, 241, 242, 243, 245, 248, 255, 258, 259, 261, 263, 264, 265, 268, 269, 270], "2": [2, 3, 4, 5, 7, 8, 15, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 109, 111, 114, 115, 116, 118, 119, 120, 122, 123, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 225, 226, 227, 228, 229, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 247, 248, 258, 259, 261, 263, 264, 265, 268, 269, 270], "fals": [2, 7, 8, 15, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 75, 77, 78, 80, 81, 82, 83, 86, 87, 90, 92, 93, 94, 97, 99, 101, 102, 105, 107, 108, 109, 112, 114, 118, 119, 120, 122, 123, 124, 125, 128, 132, 144, 145, 149, 152, 157, 158, 159, 160, 163, 167, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 206, 207, 209, 210, 211, 212, 213, 214, 219, 220, 223, 225, 226, 227, 228, 232, 233, 235, 239, 241, 261, 264, 265, 268], "simplifi": [2, 5, 7, 8, 12, 14, 25, 27, 29, 30, 49, 50, 52, 54, 55, 56, 58, 62, 67, 72, 75, 77, 80, 81, 82, 83, 86, 93, 99, 100, 105, 108, 115, 118, 119, 120, 124, 132, 139, 144, 159, 160, 167, 170, 175, 181, 189, 191, 193, 195, 200, 201, 202, 203, 204, 207, 210, 211, 212, 213, 214, 228, 230, 233, 242, 244, 250, 251, 258, 260, 261, 263, 264, 265], "trigsimp": [2, 24, 50, 86, 106, 112, 119, 170, 203, 242], "equat": [2, 5, 15, 20, 30, 32, 46, 49, 50, 52, 56, 58, 60, 63, 64, 68, 72, 73, 74, 75, 78, 81, 86, 93, 99, 101, 103, 106, 107, 108, 111, 112, 114, 115, 116, 118, 120, 121, 126, 127, 128, 129, 133, 164, 169, 173, 174, 177, 178, 179, 180, 181, 186, 187, 188, 189, 192, 193, 194, 200, 204, 206, 208, 209, 211, 219, 239, 243, 244, 248, 259, 260, 263], "reduc": [2, 8, 15, 25, 27, 29, 33, 46, 50, 51, 53, 55, 56, 58, 65, 66, 75, 77, 86, 90, 99, 100, 124, 142, 160, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 200, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 232, 265], "0": [2, 5, 7, 8, 12, 14, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 112, 114, 115, 116, 118, 120, 122, 123, 124, 125, 127, 128, 129, 132, 133, 134, 136, 139, 144, 145, 146, 149, 154, 155, 156, 157, 158, 159, 160, 161, 165, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 225, 226, 228, 229, 230, 232, 233, 234, 239, 240, 241, 242, 243, 244, 245, 248, 258, 259, 261, 263, 264, 265, 268, 269, 270], "co": [2, 14, 21, 24, 30, 32, 49, 50, 52, 54, 55, 57, 58, 59, 60, 63, 64, 66, 68, 72, 73, 74, 75, 77, 81, 86, 90, 92, 104, 105, 106, 112, 114, 116, 118, 119, 120, 124, 127, 132, 134, 170, 172, 173, 175, 177, 178, 179, 180, 184, 187, 190, 191, 193, 194, 195, 196, 197, 201, 202, 203, 204, 206, 210, 212, 213, 214, 215, 221, 233, 239, 240, 241, 242, 243, 248, 258, 259, 261, 263, 269, 270], "sai": [2, 5, 7, 12, 15, 33, 40, 49, 50, 51, 79, 103, 107, 112, 121, 127, 165, 177, 178, 181, 182, 183, 187, 189, 193, 194, 201, 204, 207, 210, 212, 213, 214, 233, 249, 258, 263, 269], "unequ": [2, 93, 194], "rememb": [2, 12, 14, 80, 86, 100, 103, 127, 177, 178, 194, 206, 212, 215, 233, 264, 269], "fill": [2, 6, 41, 51, 81, 83, 86, 89, 160, 180, 225, 228, 232, 235, 265], "alter": [2, 33, 41, 50, 170, 184, 194, 196, 213], "afterward": [2, 32, 50, 109, 115], "liter": [2, 14, 32, 40, 50, 78, 80, 92, 160, 167, 206], "still": [2, 7, 11, 12, 14, 15, 19, 23, 31, 42, 49, 50, 51, 58, 62, 77, 81, 86, 112, 160, 178, 180, 181, 182, 187, 189, 194, 201, 203, 204, 206, 210, 212, 213, 219, 225, 232, 245, 265], "quantiti": [2, 42, 50, 55, 58, 62, 67, 94, 103, 107, 119, 125, 139, 162, 164, 168, 175, 177, 178, 189, 206, 214, 242, 246, 247, 255], "set": [2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 23, 26, 27, 30, 31, 32, 33, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 63, 65, 67, 68, 69, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 99, 103, 107, 111, 112, 114, 115, 120, 122, 123, 124, 127, 128, 144, 150, 155, 160, 162, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 180, 181, 182, 183, 184, 187, 189, 190, 193, 194, 195, 196, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 218, 219, 220, 223, 225, 226, 227, 228, 232, 233, 239, 241, 243, 249, 252, 258, 260, 269], "simultan": [2, 50, 63, 81, 90, 180, 203], "string": [2, 11, 12, 14, 15, 20, 25, 31, 32, 34, 39, 50, 51, 52, 53, 54, 63, 73, 78, 79, 80, 83, 86, 90, 92, 93, 97, 103, 104, 106, 109, 131, 140, 144, 154, 158, 162, 168, 169, 170, 173, 174, 175, 180, 183, 185, 189, 194, 195, 201, 206, 210, 214, 215, 218, 219, 220, 225, 226, 227, 232, 233, 235, 237, 239, 240, 242, 260, 261, 264, 268], "refer": [2, 5, 8, 11, 12, 13, 15, 19, 20, 26, 27, 28, 30, 32, 34, 36, 38, 39, 41, 42, 43, 44, 48, 51, 53, 55, 56, 58, 60, 65, 66, 67, 70, 72, 76, 78, 79, 80, 85, 87, 91, 93, 97, 99, 100, 102, 104, 106, 107, 109, 111, 112, 114, 121, 122, 125, 127, 128, 129, 130, 131, 133, 137, 139, 141, 142, 143, 146, 148, 149, 157, 158, 160, 164, 169, 170, 171, 172, 173, 175, 177, 184, 186, 191, 194, 196, 197, 199, 202, 205, 206, 208, 210, 211, 212, 214, 220, 229, 231, 232, 233, 235, 239, 242, 243, 247, 250, 253, 254, 255, 256, 257, 261, 265, 266, 269], "object": [2, 3, 6, 7, 8, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 49, 50, 52, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 75, 77, 80, 81, 83, 84, 86, 91, 92, 93, 94, 97, 99, 100, 103, 104, 107, 108, 109, 111, 112, 115, 120, 121, 122, 123, 124, 125, 127, 128, 129, 133, 134, 135, 143, 144, 146, 154, 155, 159, 160, 162, 163, 166, 167, 169, 170, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 187, 189, 190, 194, 196, 197, 200, 201, 202, 203, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 225, 226, 227, 228, 229, 232, 233, 236, 237, 241, 242, 243, 248, 249, 258, 259, 261, 263, 264, 265, 268, 269], "var": [2, 30, 32, 49, 54, 55, 73, 77, 80, 86, 99, 170, 180, 189, 193, 194, 206, 207, 233, 270], "rate": [2, 114, 177, 214, 245, 259], "short_lif": 2, "80": [2, 9, 12, 14, 30, 41, 50, 53, 77, 86, 90, 93, 94, 97, 190, 193, 210, 214, 230, 232], "haven": 2, "160": [2, 93, 188], "need": [2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 19, 21, 23, 24, 26, 27, 30, 31, 32, 35, 41, 42, 46, 48, 49, 50, 51, 52, 56, 57, 58, 61, 65, 66, 73, 74, 75, 77, 78, 81, 86, 90, 91, 92, 94, 99, 103, 107, 109, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 140, 144, 152, 158, 163, 164, 169, 170, 174, 177, 178, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 201, 202, 204, 206, 207, 209, 210, 212, 213, 214, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 232, 235, 239, 242, 244, 245, 248, 258, 259, 261, 264, 265, 267, 269], "indent": [2, 14, 235], "bodi": [2, 32, 75, 92, 102, 103, 106, 107, 109, 111, 112, 114, 115, 116, 118, 121, 122, 127, 128, 163, 169, 170, 173, 177, 178, 239, 240, 246], "inform": [2, 4, 7, 8, 9, 11, 12, 14, 15, 27, 28, 31, 32, 33, 36, 41, 42, 48, 50, 51, 55, 58, 62, 75, 77, 79, 83, 86, 91, 94, 104, 105, 107, 111, 112, 114, 121, 122, 124, 125, 127, 128, 155, 160, 165, 169, 170, 174, 178, 180, 184, 189, 190, 194, 195, 201, 204, 206, 207, 208, 212, 213, 214, 218, 219, 220, 225, 226, 227, 228, 229, 239, 243, 245, 269], "ctimesd": 2, "circular": [2, 7, 97, 132, 187], "relationship": [2, 7, 32, 50, 55, 57, 77, 90, 144, 170, 175, 178, 184, 212], "runtimeerror": [2, 30, 202, 213, 232], "call": [2, 4, 5, 7, 8, 11, 12, 14, 15, 21, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 48, 50, 51, 53, 54, 55, 57, 58, 60, 65, 66, 68, 73, 75, 77, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 92, 93, 94, 99, 103, 112, 114, 115, 124, 125, 150, 152, 155, 160, 165, 170, 175, 177, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 192, 193, 194, 196, 201, 202, 204, 206, 207, 209, 210, 212, 213, 214, 216, 218, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 239, 241, 242, 245, 247, 259, 261, 263, 264, 265, 268, 269, 270], "compileflag": [2, 225], "glob": [2, 225], "recurs": [2, 4, 7, 30, 50, 55, 75, 77, 80, 81, 90, 114, 180, 187, 190, 191, 194, 195, 198, 199, 201, 206, 212, 213, 218, 223, 225, 229, 230, 232, 260, 269], "depth": [2, 3, 14, 15, 17, 41, 50, 114, 180, 181, 194, 256], "exceed": [2, 114], "yet": [2, 7, 12, 13, 25, 27, 30, 31, 50, 54, 55, 57, 77, 124, 140, 181, 184, 185, 189, 191, 193, 202, 210, 213, 259], "stdin": [2, 228, 230], "nameerror": [2, 78, 228, 261], "isympi": [2, 10, 11, 78], "command": [2, 9, 11, 13, 14, 19, 32, 54, 78, 112, 122, 127, 174, 180, 194, 225, 226, 268], "give": [2, 7, 8, 11, 12, 14, 25, 27, 32, 33, 39, 41, 42, 43, 44, 49, 50, 51, 52, 55, 56, 58, 60, 62, 63, 65, 66, 74, 75, 77, 78, 80, 83, 86, 89, 90, 91, 93, 99, 112, 127, 139, 154, 155, 157, 158, 162, 163, 165, 166, 168, 170, 173, 175, 177, 178, 179, 180, 181, 182, 184, 185, 187, 189, 190, 191, 194, 195, 196, 197, 201, 202, 203, 204, 206, 207, 210, 212, 213, 214, 225, 226, 227, 232, 242, 247, 261, 262, 264, 269, 270], "default": [2, 7, 11, 12, 14, 15, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 40, 41, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 77, 78, 80, 81, 83, 86, 87, 90, 91, 92, 93, 94, 97, 99, 101, 103, 104, 105, 106, 107, 108, 112, 124, 133, 150, 152, 155, 157, 158, 160, 166, 169, 170, 172, 173, 174, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 201, 202, 203, 206, 207, 210, 211, 212, 213, 214, 219, 220, 225, 226, 227, 229, 230, 232, 233, 235, 239, 258, 259, 263, 265, 268, 269], "__future__": [2, 5, 261, 268], "divis": [2, 50, 86, 90, 162, 181, 184, 185, 186, 187, 190, 192, 194, 210, 212, 225, 233, 261, 264, 268], "cl": [2, 7, 32, 41, 50, 57, 77, 81, 160, 173, 185, 189, 210, 219, 228, 232, 244, 259, 268, 270], "dir": [2, 50, 93, 196, 201, 232], "u": [2, 24, 30, 31, 41, 49, 50, 51, 53, 64, 67, 72, 75, 77, 83, 86, 90, 106, 107, 108, 111, 112, 114, 115, 118, 122, 124, 125, 127, 128, 133, 144, 149, 173, 175, 177, 180, 182, 183, 187, 189, 194, 204, 206, 207, 210, 211, 212, 213, 214, 219, 245], "__builtins__": 2, "__doc__": [2, 14], "__file__": [2, 236], "__name__": [2, 194, 236], "__package__": 2, "_greek": 2, "_latin": 2, "alpha": [2, 15, 41, 50, 58, 77, 79, 132, 136, 139, 157, 173, 177, 178, 179, 185, 187, 189, 190, 193, 194, 206, 210, 214], "beta": [2, 14, 32, 41, 50, 57, 77, 157, 170, 179, 189, 191, 194, 210, 214], "chi": [2, 58, 75, 132, 194, 204, 214, 220], "eta": [2, 58, 75, 189, 194, 210, 211, 214], "gamma": [2, 14, 15, 49, 50, 52, 54, 55, 57, 75, 77, 102, 127, 157, 178, 179, 194, 204, 206, 210, 214, 255, 269], "iota": [2, 194], "kappa": [2, 194, 214], "mu": [2, 58, 75, 90, 100, 102, 131, 194, 214, 220], "nu": [2, 15, 58, 77, 90, 161, 182, 194, 206, 214, 220, 263], "omega": [2, 32, 33, 41, 75, 90, 104, 109, 111, 125, 128, 134, 136, 161, 170, 173, 174, 177, 179, 194, 201, 214], "omicron": [2, 194], "phi": [2, 41, 50, 51, 55, 58, 75, 79, 86, 90, 101, 127, 134, 143, 145, 179, 181, 189, 194, 210, 239, 248], "psi": [2, 58, 75, 132, 143, 144, 150, 158, 189, 194, 220], "rho": [2, 52, 75, 86, 90, 154, 194, 214, 220, 248], "sigma": [2, 42, 73, 75, 81, 86, 194, 197, 214], "tau": [2, 32, 75, 77, 86, 189, 194, 210], "theta": [2, 50, 52, 56, 58, 75, 78, 86, 92, 101, 111, 128, 132, 170, 178, 179, 185, 189, 194, 197, 202, 213, 214, 239, 240, 243, 245, 248], "upsilon": [2, 194], "xi": [2, 52, 75, 194, 210, 211, 212], "zeta": [2, 49, 50, 54, 55, 57, 185, 189, 194, 201, 214], "assumpt": [2, 6, 8, 14, 20, 25, 26, 28, 29, 31, 32, 41, 42, 44, 49, 52, 54, 56, 57, 77, 80, 81, 86, 87, 99, 103, 127, 167, 172, 183, 194, 202, 203, 206, 210, 212, 213, 219, 227, 232, 249, 250, 269], "lastli": [2, 77, 94, 128, 210], "those": [2, 7, 8, 11, 14, 23, 28, 31, 32, 33, 41, 42, 48, 49, 50, 51, 54, 57, 63, 64, 75, 77, 80, 86, 89, 90, 103, 114, 119, 133, 157, 169, 172, 174, 177, 178, 180, 184, 185, 187, 189, 190, 192, 193, 194, 200, 202, 206, 210, 211, 212, 213, 214, 220, 223, 225, 229, 232, 239, 241, 261, 263, 269], "imaginari": [2, 7, 12, 14, 24, 27, 29, 50, 54, 56, 58, 81, 127, 184, 185, 190, 194, 195, 202, 206, 213], "unit": [2, 24, 27, 31, 50, 51, 55, 63, 64, 65, 77, 86, 90, 93, 97, 99, 101, 102, 112, 125, 127, 136, 161, 162, 163, 167, 169, 170, 175, 178, 180, 182, 185, 187, 189, 190, 192, 194, 202, 204, 207, 213, 215, 239, 240, 242, 247, 248, 255], "base": [2, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 26, 27, 30, 32, 33, 39, 40, 41, 46, 47, 48, 50, 51, 53, 55, 56, 57, 58, 61, 63, 66, 73, 77, 78, 79, 80, 82, 83, 86, 90, 91, 96, 104, 106, 112, 114, 127, 128, 129, 138, 140, 144, 145, 149, 155, 156, 158, 160, 162, 165, 166, 168, 170, 172, 174, 175, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 194, 196, 198, 201, 202, 203, 204, 206, 207, 208, 210, 212, 214, 218, 219, 220, 225, 226, 227, 228, 229, 230, 232, 233, 234, 239, 241, 242, 245, 256, 264, 269], "logarithm": [2, 15, 24, 30, 32, 50, 51, 56, 57, 75, 77, 86, 90, 185, 187, 191, 194, 204, 206, 213, 214, 260], "sympifi": [2, 7, 8, 32, 54, 60, 80, 125, 133, 158, 160, 170, 171, 184, 185, 250, 258, 264], "evalf": [2, 7, 11, 14, 32, 49, 54, 55, 56, 58, 69, 72, 73, 81, 86, 92, 112, 114, 127, 142, 185, 190, 201, 202, 206, 214, 226, 233, 250, 260], "log": [2, 14, 15, 19, 24, 30, 32, 41, 49, 50, 54, 55, 57, 58, 68, 72, 74, 75, 77, 81, 86, 90, 180, 185, 194, 196, 201, 204, 206, 210, 213, 214, 221, 259, 269, 270], "hold": [2, 27, 31, 41, 46, 50, 51, 52, 56, 58, 72, 75, 86, 89, 92, 99, 101, 106, 108, 109, 125, 156, 190, 204, 206, 210, 214, 227, 269], "ask": [2, 4, 7, 8, 11, 14, 26, 27, 28, 29, 50, 62, 75, 112, 165, 181, 200, 206, 213, 232, 261], "mnemon": [2, 203, 232], "osineq": 2, "Or": [2, 8, 9, 15, 41, 50, 51, 52, 58, 75, 80, 90, 109, 181, 191, 193, 194, 206, 213, 214, 225, 233, 245, 264, 267], "lowercas": [2, 210, 225, 259], "letter": [2, 15, 23, 43, 50, 51, 90, 160, 194, 232, 259, 261], "prevent": [2, 12, 32, 50, 87, 90, 103, 183, 185, 190, 194, 206, 214, 223, 230, 260], "overrid": [2, 32, 50, 59, 60, 66, 92, 158, 194, 219, 226, 227, 232, 233], "care": [2, 8, 41, 50, 58, 77, 86, 93, 103, 112, 124, 170, 178, 184, 189, 206, 207, 210, 212, 213, 218, 221, 226, 258, 261, 263], "notic": [2, 41, 42, 48, 50, 86, 148, 169, 184, 204, 220, 221, 232, 233, 261, 263, 264, 269], "warn": [2, 3, 12, 14, 50, 51, 65, 92, 170, 178, 182, 210, 212, 223, 225, 227, 231, 232, 257, 265], "No": [2, 11, 14, 15, 31, 50, 58, 65, 80, 90, 100, 112, 155, 180, 190, 196, 197, 206, 207, 212, 213, 214, 219, 223, 229, 230, 232, 258, 270], "5": [2, 3, 7, 15, 21, 24, 26, 27, 28, 30, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 97, 99, 101, 102, 104, 109, 112, 114, 118, 119, 120, 121, 122, 129, 133, 154, 155, 158, 160, 167, 169, 171, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 214, 215, 219, 220, 225, 226, 232, 233, 239, 241, 243, 245, 247, 248, 258, 259, 261, 264, 265, 268, 269], "15": [2, 14, 30, 36, 39, 41, 46, 48, 50, 51, 53, 54, 55, 58, 60, 63, 64, 66, 67, 75, 77, 80, 81, 82, 86, 87, 90, 93, 133, 179, 180, 182, 183, 184, 185, 189, 190, 191, 193, 194, 196, 200, 201, 203, 206, 207, 211, 212, 213, 214, 215, 232, 258, 259, 264, 265], "reimport": 2, "restor": [2, 184, 206], "everyth": [2, 12, 15, 32, 50, 52, 58, 77, 84, 101, 124, 156, 157, 180, 194, 264, 268], "__": [2, 58, 77, 194, 214, 219], "instal": [2, 11, 13, 15, 18, 20, 22, 54, 91, 184, 185, 194, 226, 233, 257, 262, 268], "press": [2, 31, 33, 34, 42, 51, 77, 81, 179, 188, 207, 212], "tab": [2, 9, 46, 127], "autocomplet": 2, "complet": [2, 7, 11, 12, 14, 22, 27, 32, 50, 51, 52, 54, 56, 57, 58, 66, 75, 77, 86, 90, 103, 107, 108, 115, 121, 127, 146, 149, 150, 178, 187, 190, 191, 195, 201, 206, 207, 210, 213, 214, 225, 227, 235, 263, 264, 269], "consol": [2, 11, 12, 50, 78, 174, 180, 268], "best": [2, 12, 16, 19, 20, 32, 50, 58, 75, 77, 91, 159, 180, 191, 194, 203, 204, 206, 210, 213, 218, 226, 261, 262, 268, 269], "lose": [2, 181], "abil": [2, 7, 30, 86, 121, 189, 193, 210, 213, 263, 269], "past": [2, 56, 90, 193, 194, 268], "callabl": [2, 11, 32, 41, 86, 92, 145, 189, 194, 195, 206, 223, 226, 227, 232, 233, 234], "f1": [2, 41, 75, 77, 86, 99, 104, 112, 119, 127, 180, 185, 187, 190, 194, 196, 212], "f2": [2, 50, 75, 86, 99, 104, 112, 119, 127, 163, 180, 187, 190, 194, 196, 212], "own": [2, 11, 13, 14, 26, 34, 41, 42, 50, 66, 94, 112, 127, 189, 194, 201, 206, 210, 229, 232, 233, 263], "ensur": [2, 12, 19, 50, 51, 54, 82, 86, 125, 189, 190, 194, 208, 225, 230, 233], "6": [2, 3, 5, 24, 26, 27, 30, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 72, 73, 75, 77, 79, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 97, 99, 100, 101, 114, 118, 119, 120, 129, 133, 139, 157, 169, 170, 178, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 196, 199, 200, 201, 202, 203, 206, 207, 211, 212, 213, 214, 215, 225, 226, 229, 232, 233, 239, 241, 243, 248, 259, 265, 269, 270], "accuraci": [2, 5, 30, 50, 190, 250, 265], "2000000000000002": 2, "py3k": 2, "precis": [2, 7, 8, 11, 12, 14, 32, 41, 50, 53, 54, 55, 58, 66, 77, 86, 90, 97, 125, 179, 181, 184, 185, 189, 190, 191, 194, 201, 206, 207, 212, 213, 226, 227, 235, 258, 269], "20000000000000": 2, "core": [2, 4, 7, 8, 11, 12, 13, 14, 20, 22, 28, 30, 32, 41, 51, 56, 57, 59, 67, 81, 85, 90, 92, 158, 159, 182, 184, 185, 186, 187, 189, 190, 191, 194, 201, 202, 206, 207, 210, 214, 224, 225, 226, 232, 233, 237, 249, 250, 261, 264], "awar": [2, 8, 11, 12, 14, 30, 50, 54, 80, 86, 204, 214, 233], "chanc": [2, 8, 12, 50, 78, 204, 214, 264], "sympyifi": 2, "With": [2, 8, 12, 19, 32, 49, 50, 54, 75, 90, 115, 116, 123, 124, 133, 157, 160, 178, 180, 181, 182, 184, 185, 192, 193, 194, 201, 206, 212, 215, 232, 263, 264], "shorthand": [2, 7, 50, 80, 154, 189, 202, 223], "worri": [2, 50, 264], "mistak": [2, 15, 41, 233], "reus": [2, 32, 160, 263], "obtain": [2, 5, 15, 26, 27, 31, 33, 34, 41, 42, 43, 46, 50, 51, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 72, 75, 77, 79, 81, 86, 89, 90, 96, 99, 121, 123, 125, 133, 155, 160, 165, 181, 182, 185, 187, 189, 190, 193, 195, 202, 203, 204, 206, 207, 210, 211, 212, 213, 232, 235, 242, 243], "7": [2, 3, 7, 11, 14, 21, 24, 26, 27, 30, 32, 34, 36, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 72, 75, 77, 80, 81, 83, 84, 86, 90, 92, 93, 95, 97, 99, 114, 120, 122, 123, 127, 160, 165, 167, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 214, 215, 219, 220, 225, 226, 229, 232, 233, 239, 248, 259, 264, 265, 268], "22": [2, 14, 41, 50, 53, 54, 55, 58, 86, 90, 93, 94, 125, 188, 193, 206, 207, 212, 214], "142857142857143": 2, "One": [2, 4, 7, 30, 31, 32, 40, 42, 49, 55, 56, 57, 58, 69, 72, 74, 75, 77, 80, 86, 90, 93, 94, 112, 125, 127, 136, 165, 185, 187, 188, 190, 193, 196, 202, 206, 212, 213, 214, 215, 220, 233, 245, 258, 259, 261, 264, 265, 269], "again": [2, 5, 8, 9, 12, 42, 50, 65, 90, 112, 114, 125, 155, 156, 170, 177, 181, 182, 189, 197, 204, 210, 223, 242, 261, 269], "quot": [2, 14, 32, 80, 194, 235], "achiev": [2, 50, 54, 58, 83, 90, 112, 127, 193, 201, 204, 206, 213, 228, 243], "receiv": [2, 50, 51, 90, 104, 155, 189, 219], "fraction": [2, 50, 51, 54, 56, 66, 77, 86, 90, 105, 166, 184, 185, 186, 187, 188, 191, 194, 196, 207, 210, 212, 260], "invalid": [2, 15, 50, 51, 92, 114, 184, 187, 202], "keep": [2, 4, 12, 14, 18, 46, 50, 51, 54, 55, 58, 75, 86, 107, 125, 144, 160, 180, 183, 184, 185, 190, 201, 202, 204, 206, 210, 212, 220, 247, 259, 264], "digit": [2, 14, 32, 50, 51, 53, 54, 60, 77, 80, 90, 121, 170, 184, 190, 201, 206, 232, 258], "calcul": [2, 5, 7, 11, 24, 30, 33, 42, 48, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 67, 77, 81, 83, 86, 90, 93, 94, 101, 103, 104, 107, 111, 114, 115, 129, 132, 133, 136, 139, 155, 156, 157, 158, 160, 161, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 184, 185, 187, 189, 190, 191, 196, 201, 210, 214, 218, 226, 227, 233, 239, 241, 245, 246, 247, 265, 268], "signific": [2, 7, 12, 32, 50, 51, 54, 77, 86, 103, 125, 154, 184, 213, 233, 264], "first": [2, 5, 7, 8, 9, 11, 13, 14, 15, 16, 19, 31, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 63, 64, 66, 67, 74, 75, 77, 79, 80, 81, 86, 89, 90, 93, 94, 99, 100, 105, 106, 107, 111, 112, 114, 115, 116, 121, 124, 125, 128, 132, 133, 137, 141, 144, 149, 150, 153, 154, 155, 156, 157, 159, 160, 163, 165, 170, 173, 177, 178, 180, 181, 183, 185, 187, 188, 189, 190, 191, 194, 195, 196, 197, 200, 201, 203, 204, 206, 207, 210, 211, 212, 213, 214, 218, 220, 223, 225, 226, 227, 228, 232, 233, 235, 243, 248, 258, 259, 261, 263, 264, 265, 267, 269, 270], "mind": [2, 4, 7, 14, 50, 86, 125, 180, 201, 202, 247, 264], "indic": [2, 4, 7, 12, 14, 30, 31, 32, 33, 34, 39, 41, 42, 43, 45, 46, 48, 49, 50, 53, 54, 55, 58, 60, 65, 66, 75, 77, 80, 81, 83, 86, 89, 90, 100, 111, 115, 144, 155, 157, 158, 160, 165, 169, 170, 179, 183, 184, 185, 189, 190, 191, 194, 201, 202, 203, 205, 206, 207, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 227, 232, 265], "appear": [2, 14, 15, 31, 32, 34, 39, 41, 50, 51, 55, 56, 59, 60, 63, 66, 69, 73, 75, 77, 81, 86, 90, 92, 112, 115, 144, 160, 162, 165, 180, 182, 184, 187, 189, 190, 194, 203, 206, 210, 211, 212, 214, 218, 220, 225, 232, 233, 239, 243], "interpret": [2, 8, 20, 32, 41, 49, 50, 55, 58, 63, 66, 77, 81, 83, 86, 90, 92, 103, 165, 180, 182, 189, 190, 194, 201, 207, 212, 213, 214, 219, 225, 226, 229, 235, 265], "exact": [2, 7, 12, 28, 49, 50, 51, 54, 60, 65, 72, 75, 77, 81, 86, 93, 127, 154, 184, 185, 187, 190, 201, 206, 210, 212, 225, 235, 261, 263, 268], "100": [2, 32, 34, 39, 49, 50, 51, 54, 58, 66, 73, 80, 81, 86, 90, 93, 180, 184, 189, 191, 193, 194, 201, 212, 213, 232, 258], "000000000000": 2, "00": [2, 50, 90, 144, 154, 207, 232], "null": [2, 50, 86], "12": [2, 14, 24, 30, 31, 32, 36, 38, 39, 41, 42, 43, 46, 48, 49, 50, 51, 53, 55, 56, 58, 60, 63, 64, 66, 75, 77, 81, 86, 87, 90, 93, 94, 97, 99, 101, 114, 125, 157, 170, 179, 182, 183, 184, 187, 189, 190, 191, 193, 194, 200, 202, 203, 207, 209, 210, 214, 215, 226, 229, 232, 241, 265, 269], "34": [2, 32, 42, 55, 63, 86, 90, 142, 188, 193, 200, 206, 207], "3400000000000": 2, "25": [2, 14, 41, 42, 51, 53, 55, 58, 60, 63, 65, 82, 86, 89, 90, 93, 94, 99, 109, 173, 179, 187, 189, 190, 193, 194, 200, 201, 203, 207, 209, 210, 211, 214, 226], "250": [2, 90, 207], "143": [2, 139, 179], "next": [2, 5, 7, 23, 32, 33, 34, 39, 41, 42, 44, 45, 50, 51, 56, 75, 77, 80, 86, 90, 103, 104, 107, 115, 116, 118, 120, 121, 128, 177, 178, 181, 185, 189, 190, 194, 202, 204, 207, 210, 229, 230, 232, 262, 263, 264], "20": [2, 14, 28, 32, 39, 41, 42, 49, 50, 51, 54, 55, 58, 66, 67, 77, 86, 90, 93, 94, 99, 109, 165, 167, 180, 184, 188, 189, 190, 191, 193, 194, 200, 201, 202, 203, 206, 207, 210, 213, 214, 239, 259], "appar": [2, 50, 235, 269], "non": [2, 7, 11, 12, 23, 28, 30, 33, 40, 43, 49, 50, 51, 55, 56, 57, 58, 59, 60, 63, 64, 65, 77, 79, 80, 81, 82, 83, 86, 87, 89, 103, 107, 109, 114, 115, 119, 122, 123, 127, 144, 149, 159, 160, 162, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 197, 201, 202, 204, 206, 207, 209, 210, 212, 213, 214, 215, 218, 219, 220, 225, 227, 232, 235, 245, 264, 269, 270], "repeat": [2, 9, 41, 44, 49, 50, 56, 58, 77, 79, 81, 86, 90, 92, 144, 146, 160, 180, 181, 182, 187, 189, 190, 194, 200, 210, 214, 218, 219, 226, 228, 232, 269], "binari": [2, 8, 28, 32, 34, 45, 50, 51, 77, 80, 90, 91, 154, 166, 181, 184, 190, 207, 226, 229, 232], "decim": [2, 32, 50, 53, 54, 90, 92, 97, 184, 190, 263], "accur": [2, 5, 12, 30, 41, 50, 54, 55, 72, 77, 96, 180, 201, 258, 265], "too": [2, 14, 41, 42, 50, 56, 58, 60, 63, 65, 75, 80, 89, 90, 122, 129, 201, 202, 206, 207, 210, 212, 213, 214, 225, 226, 241, 242], "far": [2, 31, 50, 64, 77, 181, 184, 194, 204, 233, 258, 259, 261], "142857": 2, "25000000000000000000": 2, "14285278320312500000": 2, "realiz": [2, 35, 41, 52, 80, 90, 115, 181, 182, 187, 214], "displai": [2, 7, 8, 14, 15, 50, 51, 54, 75, 79, 93, 94, 97, 131, 164, 170, 173, 174, 180, 184, 185, 194, 202, 218, 225], "onc": [2, 7, 8, 9, 12, 32, 34, 41, 46, 50, 51, 55, 58, 66, 75, 77, 91, 94, 105, 106, 121, 124, 165, 170, 172, 178, 180, 182, 184, 190, 194, 195, 203, 204, 206, 210, 213, 220, 232, 242, 258, 259, 269, 270], "subsequ": [2, 14, 50, 56, 170, 185, 187, 190, 229, 232, 242, 245], "pad": [2, 32, 51, 52, 53, 65, 90], "inexact": [2, 50, 185], "low": [2, 7, 8, 32, 50, 51, 58, 90, 184, 187, 192, 194, 206, 226, 227, 232], "higher": [2, 5, 30, 32, 50, 52, 54, 58, 61, 86, 173, 179, 181, 184, 187, 190, 196, 197, 201, 203, 206, 210, 212, 215, 233, 259], "engin": [2, 126, 127, 176, 210, 268], "increas": [2, 30, 31, 42, 48, 49, 50, 53, 54, 58, 81, 90, 91, 103, 113, 144, 169, 170, 172, 177, 178, 184, 187, 189, 190, 196, 199, 203, 210, 214, 230, 232], "2000061035": 2, "maintain": [2, 50, 51, 90, 94, 194, 202, 203, 210, 213, 229], "highest": [2, 32, 44, 79, 103, 181, 190, 197, 207, 210], "simpl": [2, 5, 7, 14, 18, 19, 31, 32, 41, 49, 50, 54, 58, 62, 66, 68, 75, 77, 79, 86, 90, 91, 93, 94, 99, 100, 103, 106, 107, 109, 111, 114, 115, 116, 118, 120, 121, 124, 128, 134, 148, 149, 157, 158, 159, 170, 177, 178, 184, 185, 186, 190, 191, 194, 196, 201, 203, 204, 206, 207, 210, 213, 220, 226, 227, 232, 236, 238, 239, 240, 241, 245, 258, 261, 264, 265, 269], "hopefulli": [2, 6, 75], "understand": [2, 7, 8, 14, 50, 51, 75, 112, 121, 122, 123, 127, 165, 177, 180, 183, 184, 189, 204, 207, 226, 233, 260, 261, 268, 269], "complic": [2, 7, 14, 32, 41, 49, 51, 52, 54, 55, 56, 58, 75, 77, 83, 121, 122, 160, 178, 184, 187, 191, 193, 204, 206, 213, 214, 218, 219, 227, 229, 233, 235, 259, 261, 264, 265], "even": [2, 4, 7, 12, 14, 15, 25, 26, 27, 29, 32, 33, 38, 41, 42, 49, 50, 51, 54, 55, 56, 58, 62, 66, 75, 77, 80, 81, 86, 89, 90, 100, 112, 121, 145, 156, 163, 165, 170, 179, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 201, 202, 203, 204, 206, 207, 210, 212, 213, 221, 225, 247, 258, 259, 261, 263, 264, 269, 270], "though": [2, 7, 8, 14, 23, 33, 50, 51, 52, 62, 66, 75, 77, 81, 86, 90, 103, 107, 114, 122, 124, 155, 169, 170, 177, 178, 182, 184, 185, 190, 191, 203, 204, 206, 210, 211, 212, 213, 225, 245, 259, 264, 269], "simplif": [2, 7, 11, 25, 27, 29, 30, 32, 50, 52, 55, 56, 57, 75, 81, 86, 92, 105, 112, 124, 127, 144, 160, 170, 190, 195, 205, 210, 212, 213, 249, 250, 252, 258, 260, 262, 263], "unsimplifi": [2, 203], "ident": [2, 12, 28, 31, 33, 40, 41, 42, 48, 50, 51, 55, 56, 66, 73, 79, 81, 83, 86, 100, 102, 125, 144, 146, 149, 165, 181, 182, 183, 187, 188, 189, 190, 194, 203, 206, 210, 213, 218, 220, 225, 232, 233, 235, 243, 261, 265, 269], "12345678901234567890": 2, "big_trig_ident": 2, "ab": [2, 29, 32, 33, 49, 50, 51, 54, 55, 57, 58, 62, 73, 75, 80, 81, 86, 101, 127, 160, 182, 185, 189, 190, 194, 207, 209, 212, 213, 214, 220, 229, 232, 235, 244, 269], "gave": [2, 50, 232], "larg": [2, 7, 11, 12, 14, 41, 42, 50, 51, 60, 75, 77, 89, 90, 103, 108, 124, 127, 140, 165, 169, 179, 184, 185, 187, 190, 193, 194, 195, 201, 204, 206, 214, 219, 226, 233, 235, 241, 258, 263, 269], "approxim": [2, 3, 6, 14, 30, 41, 49, 50, 51, 54, 58, 60, 66, 75, 77, 86, 90, 94, 96, 129, 163, 180, 184, 185, 190, 197, 201, 204, 214, 251, 259, 263], "three": [2, 5, 7, 12, 20, 24, 28, 32, 41, 42, 43, 46, 50, 51, 55, 58, 60, 64, 65, 66, 75, 79, 80, 81, 93, 94, 111, 117, 118, 119, 133, 155, 157, 162, 170, 173, 177, 178, 179, 180, 181, 182, 185, 187, 190, 194, 204, 206, 207, 212, 213, 214, 225, 239, 240, 245, 248, 261, 264, 269], "pass": [2, 4, 7, 8, 11, 12, 13, 14, 23, 24, 27, 30, 31, 32, 41, 42, 50, 51, 52, 54, 56, 57, 58, 60, 63, 64, 66, 77, 78, 80, 81, 83, 86, 87, 90, 92, 93, 97, 99, 104, 111, 112, 115, 127, 128, 132, 149, 150, 154, 155, 157, 158, 170, 174, 180, 181, 183, 184, 185, 187, 189, 190, 192, 194, 195, 201, 202, 206, 207, 210, 211, 212, 213, 214, 215, 218, 219, 220, 223, 225, 226, 227, 228, 230, 232, 233, 235, 238, 239, 258, 259, 264, 268, 269, 270], "By": [2, 7, 11, 25, 27, 32, 40, 49, 50, 52, 54, 55, 58, 64, 65, 69, 73, 75, 80, 81, 86, 89, 90, 91, 92, 93, 94, 97, 104, 155, 160, 180, 182, 184, 185, 187, 189, 190, 191, 193, 194, 196, 201, 203, 206, 207, 210, 212, 213, 214, 218, 220, 221, 225, 228, 232, 233, 245, 258, 263, 264, 269], "re": [2, 12, 29, 30, 32, 41, 42, 50, 51, 54, 57, 58, 75, 77, 86, 170, 172, 175, 181, 187, 194, 195, 196, 202, 203, 204, 210, 225, 241, 243, 259, 261, 264], "gain": [2, 51, 99, 122, 123, 127], "impress": 2, "91": [2, 33, 188, 193, 200, 214], "compar": [2, 7, 30, 32, 42, 47, 50, 56, 67, 80, 86, 90, 91, 114, 139, 163, 167, 184, 187, 190, 191, 194, 199, 201, 206, 210, 213, 215, 219, 225, 232, 261, 264, 269], "4e": [2, 212], "nearli": [2, 90, 203], "modifi": [2, 15, 31, 32, 41, 50, 56, 58, 90, 92, 123, 132, 180, 187, 189, 190, 191, 194, 206, 212, 213, 214, 225, 228, 229, 232, 233, 258, 263, 265], "origin": [2, 5, 7, 13, 19, 24, 41, 42, 43, 46, 49, 50, 51, 54, 55, 56, 58, 59, 61, 63, 65, 75, 77, 81, 86, 90, 97, 99, 100, 115, 124, 127, 152, 155, 165, 171, 175, 180, 181, 185, 189, 190, 193, 194, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 220, 225, 232, 233, 239, 241, 242, 243, 244, 245, 247, 248, 269], "snippet": [2, 32], "demonstr": [2, 7, 14, 15, 41, 42, 50, 77, 90, 104, 106, 112, 115, 116, 124, 181, 184, 244, 269], "expr": [2, 7, 12, 14, 26, 27, 29, 30, 32, 42, 49, 52, 54, 56, 58, 60, 72, 75, 77, 80, 83, 86, 91, 92, 99, 103, 105, 112, 124, 137, 141, 143, 145, 149, 152, 155, 157, 158, 160, 167, 170, 172, 174, 180, 182, 183, 184, 185, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 201, 203, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 226, 227, 228, 230, 233, 239, 240, 241, 242, 243, 245, 250, 258, 259, 261, 263, 264, 268, 269, 270], "expr_modifi": 2, "__main__": [2, 32, 265], "show": [2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 32, 42, 49, 50, 54, 56, 57, 73, 75, 77, 86, 90, 93, 94, 97, 103, 112, 117, 125, 127, 155, 159, 163, 165, 170, 177, 178, 180, 181, 184, 185, 187, 189, 190, 194, 195, 197, 201, 202, 203, 204, 206, 207, 210, 212, 214, 215, 223, 226, 227, 230, 232, 233, 261, 263, 265, 268], "unlik": [2, 7, 8, 11, 14, 29, 51, 77, 86, 90, 92, 112, 177, 187, 194, 207, 210, 213, 229, 230, 261, 263, 264, 265, 268], "high": [2, 5, 7, 14, 15, 32, 50, 54, 55, 78, 90, 127, 174, 184, 189, 192, 194, 207, 212, 255, 265], "declar": [2, 7, 32, 63, 75, 86, 92, 100, 112, 114, 127, 139, 183, 194, 201, 204, 209, 210, 211, 214, 227], "asid": [2, 80, 210, 211, 263], "impli": [2, 7, 15, 24, 28, 32, 41, 80, 160, 180, 185, 187, 194, 202, 204, 210, 215, 218, 219, 232, 245], "wish": [2, 11, 14, 19, 32, 50, 51, 54, 75, 90, 155, 169, 178, 229, 233, 259, 263, 265, 270], "mani": [2, 5, 7, 8, 11, 12, 14, 19, 30, 31, 32, 33, 38, 41, 46, 50, 51, 52, 54, 56, 58, 62, 75, 77, 80, 81, 86, 90, 91, 107, 108, 112, 114, 121, 123, 124, 127, 144, 160, 168, 178, 181, 183, 184, 185, 187, 189, 198, 201, 202, 204, 206, 207, 210, 211, 212, 213, 214, 218, 227, 232, 258, 259, 261, 262, 263, 264, 268, 269, 270], "parenthes": [2, 14, 50, 92, 103, 148, 149, 178, 194, 218, 235], "preced": [2, 14, 15, 33, 42, 50, 51, 54, 55, 140, 206, 233], "expect": [2, 7, 14, 15, 31, 33, 35, 50, 56, 58, 62, 80, 90, 91, 99, 112, 154, 184, 187, 189, 191, 192, 201, 206, 209, 213, 214, 223, 225, 226, 229, 232, 233, 263, 264], "shell": [2, 9, 78, 127, 193], "2x": [2, 50, 58, 75, 92, 206, 207, 213, 214, 258, 261, 269], "syntaxerror": [2, 92], "pprint": [2, 30, 31, 52, 58, 77, 86, 90, 99, 132, 179, 194, 195, 202, 206, 210, 211, 213, 214, 232, 268], "asin": [2, 57, 58, 64, 191, 194, 204, 206, 210, 214, 269], "aco": [2, 14, 24, 57, 63, 66, 114, 127, 133, 170, 194, 210, 239, 269], "arcsin": [2, 56, 191, 194, 214], "arcco": [2, 56, 194], "method": [2, 6, 7, 9, 11, 12, 14, 15, 18, 26, 27, 28, 30, 31, 32, 33, 34, 41, 42, 43, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 64, 66, 69, 72, 74, 75, 77, 79, 81, 82, 83, 86, 90, 91, 92, 93, 94, 95, 96, 99, 100, 103, 106, 111, 112, 116, 117, 121, 126, 127, 134, 137, 139, 141, 149, 150, 155, 157, 160, 162, 167, 168, 169, 170, 172, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 195, 196, 197, 199, 200, 201, 202, 206, 207, 208, 210, 212, 214, 215, 217, 219, 220, 221, 225, 227, 229, 232, 233, 239, 242, 245, 248, 249, 258, 259, 260, 261, 264, 269], "root": [2, 7, 21, 30, 32, 49, 50, 51, 57, 58, 72, 73, 74, 75, 77, 79, 82, 86, 90, 127, 165, 179, 181, 182, 185, 186, 189, 191, 193, 194, 204, 205, 210, 212, 213, 214, 225, 229, 232, 263, 265, 268, 270], "expon": [2, 29, 32, 37, 50, 51, 56, 57, 58, 75, 77, 83, 90, 97, 99, 166, 182, 183, 184, 186, 190, 191, 194, 203, 206, 210, 213, 218, 229, 269], "half": [2, 32, 51, 55, 56, 58, 60, 66, 77, 79, 86, 90, 92, 93, 129, 132, 157, 179, 185, 187, 189, 190, 202, 203, 204, 206, 214, 225, 232], "neg": [2, 7, 8, 14, 27, 29, 32, 33, 45, 49, 50, 55, 56, 58, 60, 62, 63, 66, 75, 77, 79, 80, 81, 86, 89, 90, 93, 94, 96, 97, 99, 160, 170, 182, 183, 185, 187, 189, 190, 191, 194, 200, 202, 203, 204, 206, 207, 210, 212, 213, 214], "denomin": [2, 50, 54, 58, 77, 90, 99, 105, 182, 184, 185, 187, 189, 190, 193, 194, 203, 204, 206, 207, 210, 212, 269], "find": [2, 5, 6, 14, 21, 24, 27, 30, 32, 33, 41, 44, 45, 46, 49, 50, 54, 56, 58, 60, 62, 63, 64, 67, 72, 75, 77, 79, 86, 90, 92, 105, 113, 119, 125, 127, 129, 145, 152, 154, 155, 156, 160, 163, 165, 177, 180, 181, 182, 183, 184, 185, 186, 187, 191, 193, 194, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 212, 213, 214, 220, 229, 232, 233, 235, 239, 248, 259, 261, 263, 265, 270], "wild": [2, 206, 232], "interest": [2, 46, 50, 52, 55, 56, 66, 75, 77, 86, 90, 113, 114, 160, 165, 178, 181, 185, 189, 190, 191, 193, 201, 204, 206, 207, 212, 213, 226, 227, 243, 259, 262, 264, 265, 266, 269], "appropri": [2, 5, 11, 14, 15, 41, 50, 56, 57, 65, 86, 103, 114, 149, 150, 160, 170, 177, 183, 184, 190, 191, 194, 200, 201, 206, 207, 212, 214, 219, 227, 243, 268], "sq": [2, 207], "lambda": [2, 26, 27, 30, 32, 41, 42, 51, 52, 56, 77, 81, 82, 83, 86, 89, 90, 92, 112, 123, 124, 127, 128, 145, 180, 187, 189, 190, 194, 195, 202, 203, 206, 210, 212, 213, 214, 215, 223, 232, 233, 239, 240, 243, 258, 265], "is_pow": [2, 32, 50, 56], "is_rat": [2, 7, 189, 232], "link": [2, 12, 14, 15, 16, 21, 32, 51, 60, 66, 77, 100, 106, 121, 226, 229, 230, 267], "bracket": [2, 42, 50, 58, 158, 160, 170, 194], "item": [2, 14, 15, 32, 39, 40, 42, 50, 55, 61, 67, 81, 86, 90, 107, 180, 184, 187, 190, 194, 202, 210, 211, 214, 225, 226, 229, 232, 233, 269], "mutabl": [2, 33, 50, 82, 83, 84, 93, 185, 194, 195, 206, 215, 265], "been": [2, 7, 12, 30, 32, 33, 41, 42, 43, 46, 49, 50, 51, 62, 75, 77, 86, 90, 91, 92, 107, 112, 114, 121, 124, 125, 133, 145, 155, 157, 165, 169, 175, 176, 177, 178, 181, 184, 185, 189, 191, 192, 194, 196, 201, 204, 206, 211, 212, 213, 215, 224, 225, 227, 228, 230, 232, 235, 242, 245, 261, 262, 264, 265, 269], "access": [2, 7, 11, 14, 15, 25, 26, 27, 32, 50, 58, 79, 80, 83, 86, 91, 94, 99, 100, 106, 107, 111, 112, 128, 169, 170, 175, 178, 180, 184, 185, 187, 189, 206, 210, 214, 215, 218, 226, 227, 242, 245, 264, 268], "space": [2, 14, 30, 31, 32, 50, 51, 52, 59, 60, 61, 63, 65, 66, 79, 86, 92, 93, 101, 107, 108, 109, 129, 131, 134, 144, 147, 149, 155, 157, 164, 170, 173, 175, 178, 179, 180, 181, 189, 205, 213, 214, 225, 229, 239, 240, 242, 243, 244, 245, 247, 248, 261, 264], "notat": [2, 5, 38, 42, 43, 49, 50, 51, 55, 58, 75, 83, 86, 92, 99, 158, 169, 170, 174, 178, 181, 194, 201, 205, 206, 213, 219, 220, 232, 245, 259], "curli": [2, 112, 194], "short": [2, 12, 15, 23, 33, 40, 42, 46, 50, 51, 52, 53, 56, 84, 90, 103, 146, 165, 169, 178, 181, 188, 215, 225, 235, 264, 268], "twice": [2, 12, 32, 50, 52, 64, 90, 170, 172, 177, 194, 229, 230, 239, 240, 259], "sometim": [2, 7, 12, 14, 15, 31, 32, 50, 55, 58, 74, 75, 99, 121, 124, 152, 160, 178, 181, 184, 189, 194, 196, 201, 203, 207, 210, 212, 223, 232, 258, 265], "comma": [2, 14, 15, 32, 50, 194, 233, 261], "integr": [2, 4, 19, 21, 24, 30, 42, 49, 50, 52, 55, 56, 57, 68, 69, 70, 73, 79, 81, 86, 89, 90, 99, 101, 107, 112, 121, 127, 146, 155, 158, 161, 164, 169, 171, 175, 179, 181, 184, 185, 186, 187, 190, 191, 194, 196, 197, 204, 210, 211, 214, 227, 235, 239, 241, 242, 245, 246, 250, 260, 263, 268], "sequenc": [2, 15, 30, 32, 34, 37, 40, 41, 42, 46, 48, 49, 50, 51, 53, 55, 58, 60, 63, 64, 65, 66, 67, 70, 74, 80, 81, 83, 86, 89, 90, 127, 133, 159, 160, 185, 188, 190, 194, 196, 198, 201, 203, 204, 206, 207, 210, 211, 213, 220, 223, 226, 227, 232, 234, 235], "usag": [2, 7, 8, 14, 15, 23, 26, 52, 56, 77, 121, 157, 175, 180, 181, 186, 187, 194, 202, 204, 207, 210, 211, 215, 229, 233, 234, 245, 246, 256, 264], "out": [2, 7, 8, 15, 31, 32, 41, 42, 50, 51, 52, 55, 58, 66, 75, 77, 83, 86, 90, 93, 99, 100, 112, 114, 115, 118, 127, 137, 141, 152, 155, 157, 159, 160, 181, 182, 184, 185, 189, 190, 191, 192, 194, 195, 201, 204, 206, 210, 215, 225, 227, 232, 233, 261, 263, 264, 268, 269], "suppli": [2, 30, 31, 32, 41, 42, 50, 52, 60, 64, 86, 90, 104, 107, 109, 114, 115, 118, 122, 123, 133, 160, 169, 173, 178, 180, 189, 191, 196, 203, 210, 226, 232, 233, 239, 240, 243], "kwarg": [2, 13, 26, 27, 28, 32, 41, 42, 49, 50, 51, 52, 56, 58, 60, 61, 63, 64, 65, 66, 67, 72, 75, 77, 81, 82, 83, 84, 86, 88, 89, 97, 99, 105, 107, 115, 129, 138, 140, 144, 145, 149, 151, 153, 154, 156, 157, 158, 170, 173, 174, 180, 183, 185, 190, 194, 196, 200, 201, 202, 206, 210, 211, 212, 214, 215, 220, 225, 226, 228, 233, 235, 243], "pair": [2, 5, 14, 31, 32, 41, 42, 50, 51, 56, 62, 67, 74, 86, 90, 112, 115, 150, 152, 154, 155, 160, 169, 181, 184, 187, 189, 190, 195, 200, 201, 203, 204, 206, 207, 210, 213, 214, 227, 232, 242, 258, 265], "accord": [2, 15, 32, 38, 41, 42, 46, 49, 50, 51, 58, 80, 83, 86, 90, 92, 113, 121, 154, 160, 180, 185, 187, 189, 191, 207, 212, 213, 220, 225, 227, 232, 247], "auto": [2, 16, 30, 50, 51, 78, 180, 187, 190, 194, 206, 210, 214], "powsimp": [2, 50, 56, 203], "option": [2, 9, 12, 13, 14, 15, 16, 25, 27, 30, 32, 41, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 63, 64, 66, 67, 69, 77, 78, 81, 83, 86, 87, 90, 91, 92, 93, 97, 99, 103, 104, 105, 106, 107, 108, 111, 127, 133, 144, 149, 150, 152, 155, 157, 162, 169, 170, 174, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 199, 201, 202, 203, 206, 207, 210, 211, 212, 213, 214, 219, 220, 225, 226, 227, 230, 232, 233, 239, 262, 268, 269], "wiki": [2, 7, 12, 13, 14, 15, 24, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 66, 67, 68, 77, 78, 79, 80, 81, 83, 86, 90, 97, 99, 102, 129, 131, 132, 133, 135, 136, 137, 141, 142, 143, 146, 148, 149, 158, 160, 164, 170, 172, 176, 180, 190, 197, 201, 202, 203, 207, 210, 213, 214, 227, 232, 239, 240, 244, 246, 248, 265], "info": [2, 15, 99, 194, 210, 211], "everywher": [2, 12, 50, 58, 75, 99, 175, 247], "deep": [2, 50, 56, 80, 81, 190, 201, 206, 214, 264], "forc": [2, 5, 8, 11, 50, 54, 56, 60, 66, 75, 77, 80, 93, 94, 104, 107, 111, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 148, 149, 163, 175, 178, 180, 182, 184, 203, 206, 207, 212, 225, 245, 247, 268, 269], "measur": [2, 24, 56, 58, 66, 82, 103, 140, 149, 154, 162, 165, 167, 169, 170, 173, 175, 178, 190, 202, 203, 206, 214, 238, 239, 241, 242, 244, 245, 247], "count_op": [2, 203, 206], "explan": [2, 7, 12, 15, 20, 24, 25, 26, 27, 28, 29, 31, 32, 35, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 58, 62, 72, 73, 75, 77, 81, 86, 90, 99, 102, 104, 105, 106, 107, 109, 119, 129, 131, 134, 137, 139, 141, 143, 155, 160, 179, 180, 181, 183, 185, 189, 190, 192, 196, 197, 199, 200, 201, 202, 204, 206, 207, 210, 212, 214, 215, 219, 220, 225, 228, 230, 233, 266], "strictli": [2, 4, 6, 7, 28, 30, 50, 58, 86, 90, 99, 187, 206, 212], "radic": [2, 50, 51, 86, 181, 189, 190, 206, 212, 213], "join": [2, 42, 50, 51, 63, 81, 93, 94, 194, 206, 210, 215, 232, 236], "autoexpand": [2, 206], "longer": [2, 6, 12, 14, 50, 60, 90, 115, 124, 182, 187, 194, 203, 206, 232, 235, 261, 269], "won": [2, 12, 32, 206, 213, 264], "violat": [2, 112, 179, 191, 206], "code": [2, 5, 7, 8, 9, 14, 16, 17, 18, 19, 20, 23, 33, 37, 41, 44, 45, 50, 51, 52, 54, 57, 58, 62, 75, 77, 78, 86, 90, 91, 92, 104, 112, 114, 119, 121, 125, 127, 128, 154, 160, 169, 174, 177, 179, 180, 181, 182, 184, 187, 193, 204, 206, 210, 212, 213, 214, 219, 222, 223, 225, 226, 227, 230, 231, 232, 233, 242, 257, 261, 263, 266, 268], "py": [2, 7, 11, 12, 13, 14, 19, 31, 50, 61, 75, 77, 86, 138, 140, 180, 183, 185, 191, 194, 201, 204, 210, 211, 220, 223, 225, 230, 233], "naiv": [2, 4, 41, 47, 50, 75, 81, 86, 165, 204, 212, 213, 220], "strategi": [2, 33, 50, 77, 187, 188, 201, 204, 206, 211], "futur": [2, 7, 8, 12, 32, 33, 50, 75, 77, 81, 86, 92, 111, 114, 121, 124, 160, 164, 176, 180, 182, 193, 194, 206, 210, 219, 225, 228, 230, 233, 256, 264, 270], "version": [2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 19, 22, 25, 31, 32, 41, 42, 48, 50, 51, 56, 58, 63, 77, 80, 81, 82, 84, 86, 88, 90, 102, 104, 112, 144, 158, 162, 170, 179, 180, 181, 184, 185, 187, 189, 190, 194, 197, 206, 212, 214, 224, 225, 227, 228, 229, 230, 232, 233, 237, 239, 244, 261, 264, 265], "algorithm": [2, 7, 11, 14, 30, 34, 35, 37, 40, 41, 42, 44, 46, 48, 49, 50, 51, 54, 55, 56, 62, 67, 75, 77, 80, 83, 86, 87, 90, 100, 124, 147, 165, 170, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 195, 198, 199, 202, 203, 205, 206, 207, 210, 212, 213, 214, 220, 229, 232, 251, 259, 264, 265, 269], "determin": [2, 5, 7, 8, 12, 15, 25, 27, 28, 29, 30, 32, 33, 34, 41, 50, 51, 52, 53, 54, 56, 60, 61, 63, 65, 66, 77, 78, 79, 83, 86, 90, 92, 93, 94, 99, 105, 108, 109, 111, 120, 125, 128, 139, 152, 154, 156, 157, 160, 163, 165, 170, 175, 180, 181, 182, 183, 187, 189, 194, 200, 201, 202, 204, 206, 207, 209, 210, 212, 213, 214, 218, 230, 232, 239, 245, 248, 261, 269], "radsimp": [2, 50, 205], "togeth": [2, 5, 32, 41, 50, 54, 79, 86, 90, 121, 146, 157, 165, 178, 181, 185, 187, 189, 190, 193, 194, 206, 210, 212, 214, 225, 226, 232, 263, 269], "logcombin": [2, 205, 210, 213], "robust": [2, 47, 50, 54, 186, 206, 210], "poli": [2, 11, 49, 50, 51, 55, 56, 58, 59, 66, 72, 77, 81, 83, 86, 90, 127, 181, 182, 186, 187, 189, 190, 191, 193, 196, 209, 210, 212, 213, 225], "cancel": [2, 5, 32, 50, 54, 58, 66, 75, 77, 86, 90, 99, 100, 184, 185, 187, 190, 193, 206, 212, 263], "section": [3, 7, 9, 12, 15, 16, 20, 24, 31, 33, 41, 42, 49, 50, 51, 53, 58, 60, 66, 75, 80, 81, 86, 93, 94, 106, 112, 125, 163, 165, 169, 175, 178, 181, 184, 187, 189, 194, 197, 201, 204, 210, 220, 229, 230, 232, 242, 243, 244, 245, 249, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270], "special": [3, 7, 11, 14, 23, 24, 42, 50, 51, 53, 54, 55, 57, 65, 68, 75, 77, 81, 86, 127, 144, 149, 175, 181, 184, 186, 187, 188, 189, 194, 203, 204, 206, 210, 211, 212, 214, 225, 226, 227, 230, 232, 233, 242, 245, 247, 251, 252, 259, 260, 264], "topic": [3, 20, 22, 32, 121, 125, 176, 177, 178, 179, 181, 183, 184, 189, 213, 261, 266], "sympi": [3, 7, 8, 10, 11, 12, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 243, 244, 246, 247, 248, 249, 251, 257, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270], "pitfal": [3, 22, 178, 184, 261, 266, 269], "content": [3, 16, 32, 50, 51, 85, 182, 185, 187, 190, 193, 194, 222, 227, 230, 231, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262], "gotcha": [3, 20, 22, 50, 121, 178, 233, 262, 270], "sign": [3, 12, 14, 15, 24, 29, 32, 46, 50, 51, 55, 57, 60, 66, 75, 77, 86, 90, 93, 94, 99, 114, 133, 145, 170, 175, 177, 179, 187, 194, 199, 201, 206, 207, 212, 232, 245, 248, 262], "express": [3, 4, 7, 8, 11, 12, 14, 15, 21, 22, 25, 26, 27, 28, 29, 30, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 65, 66, 70, 73, 74, 75, 77, 78, 81, 84, 85, 86, 89, 90, 91, 93, 99, 100, 102, 103, 108, 109, 112, 115, 121, 122, 123, 124, 125, 127, 128, 135, 139, 143, 144, 148, 149, 152, 155, 157, 158, 159, 160, 162, 163, 165, 167, 169, 170, 173, 174, 175, 176, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 194, 195, 197, 199, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 233, 235, 239, 240, 242, 244, 245, 246, 247, 251, 252, 253, 257, 259, 260, 261, 262, 263, 265, 268, 269, 270], "help": [3, 7, 12, 13, 14, 15, 23, 32, 40, 50, 58, 75, 77, 86, 90, 91, 97, 112, 127, 135, 145, 178, 180, 189, 191, 194, 203, 204, 207, 210, 211, 214, 225, 226, 227, 233, 255, 262, 265], "from": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 258, 259, 261, 263, 264, 265, 268, 269, 270], "within": [3, 7, 11, 15, 30, 31, 32, 50, 56, 63, 66, 80, 81, 83, 90, 91, 93, 118, 155, 169, 170, 177, 178, 182, 184, 190, 192, 202, 210, 212, 213, 214, 225, 226, 235], "finit": [3, 6, 7, 27, 32, 36, 37, 38, 41, 49, 50, 51, 53, 54, 77, 79, 80, 146, 170, 179, 182, 185, 186, 188, 190, 191, 194, 196, 197, 200, 202, 207, 209, 210, 213, 232, 239, 240, 250, 260, 263, 269], "classif": [3, 6, 50, 210, 211], "activ": [3, 12, 13, 114, 180, 223, 228, 230], "deprec": [3, 14, 16, 20, 25, 42, 50, 63, 77, 81, 102, 124, 190, 194, 214, 220, 223, 224, 228, 230, 233, 237], "silenc": [3, 12, 223, 230], "11": [3, 7, 14, 26, 27, 32, 41, 44, 46, 48, 50, 51, 53, 55, 58, 62, 63, 64, 66, 67, 75, 77, 80, 81, 82, 86, 90, 92, 95, 99, 112, 114, 125, 144, 154, 179, 180, 182, 183, 185, 187, 188, 189, 190, 191, 193, 194, 201, 203, 207, 210, 212, 213, 214, 215, 226, 232, 242], "9": [3, 14, 19, 30, 32, 38, 40, 41, 42, 46, 48, 49, 50, 51, 53, 55, 56, 58, 59, 60, 63, 64, 66, 72, 75, 77, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 97, 99, 100, 101, 102, 112, 114, 116, 127, 129, 133, 165, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 200, 202, 203, 204, 206, 207, 210, 212, 213, 214, 215, 225, 229, 232, 239, 241, 263, 265, 270], "8": [3, 5, 14, 19, 24, 25, 30, 32, 34, 41, 42, 43, 46, 48, 50, 51, 53, 54, 55, 56, 58, 60, 63, 64, 66, 72, 75, 77, 79, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 97, 99, 101, 114, 127, 132, 133, 144, 180, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 196, 197, 200, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 219, 225, 227, 229, 232, 239, 241, 242, 248, 258, 259, 263, 265, 269], "classifi": [4, 86, 184, 210, 211, 213, 214], "function": [4, 5, 7, 8, 10, 11, 12, 15, 16, 18, 21, 22, 25, 26, 27, 29, 30, 31, 33, 41, 42, 45, 46, 48, 51, 52, 53, 54, 55, 59, 60, 61, 62, 67, 70, 71, 74, 76, 77, 78, 79, 81, 83, 85, 89, 91, 93, 95, 96, 97, 99, 100, 101, 105, 106, 109, 110, 111, 112, 115, 116, 117, 121, 122, 123, 127, 132, 133, 134, 135, 139, 144, 145, 146, 149, 154, 155, 156, 157, 158, 159, 160, 163, 169, 170, 173, 174, 176, 178, 179, 181, 186, 187, 188, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 212, 213, 214, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270], "isinst": [4, 7, 32, 50, 81, 83, 99, 184, 185, 194, 195, 206, 215, 218, 227, 264], "distinguish": [4, 7, 8, 31, 41, 54, 79, 112, 159, 165, 181], "between": [4, 8, 11, 12, 31, 32, 40, 41, 42, 44, 48, 50, 52, 55, 58, 60, 62, 63, 64, 65, 66, 67, 77, 79, 80, 83, 84, 86, 90, 91, 92, 96, 97, 99, 106, 109, 111, 112, 118, 120, 124, 125, 127, 128, 129, 132, 133, 139, 146, 148, 149, 150, 154, 157, 158, 159, 160, 163, 164, 165, 170, 171, 172, 173, 175, 177, 178, 180, 181, 183, 186, 187, 189, 194, 196, 206, 210, 211, 212, 213, 214, 215, 228, 233, 239, 241, 242, 245, 247, 261], "matrix": [4, 5, 7, 21, 24, 27, 32, 39, 42, 50, 51, 52, 58, 65, 75, 77, 79, 81, 84, 85, 88, 89, 91, 92, 99, 100, 102, 104, 106, 107, 108, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 127, 128, 129, 132, 133, 135, 143, 144, 149, 154, 155, 157, 159, 160, 162, 165, 169, 170, 178, 179, 181, 183, 187, 189, 192, 194, 195, 202, 204, 206, 207, 212, 213, 215, 216, 218, 219, 220, 221, 226, 227, 232, 233, 235, 239, 240, 241, 243, 247, 253, 260, 263, 264, 269, 270], "former": [4, 32, 50, 55, 112, 187, 189, 190, 207, 232], "retriev": [4, 48, 81, 190, 206, 220], "properti": [4, 12, 20, 26, 27, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 73, 75, 77, 81, 83, 86, 90, 93, 94, 96, 99, 104, 106, 107, 109, 111, 125, 127, 129, 131, 134, 135, 138, 139, 144, 145, 146, 148, 149, 156, 158, 160, 162, 165, 167, 168, 170, 171, 172, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 193, 196, 197, 200, 201, 202, 204, 207, 210, 213, 214, 219, 220, 225, 227, 228, 239, 241, 242, 243, 245, 247, 265], "numberkind": [4, 81, 202], "matrixkind": [4, 50, 85, 202], "guarante": [4, 7, 32, 41, 42, 50, 62, 75, 77, 86, 184, 187, 189, 190, 210, 212, 213, 230, 235, 265, 269], "catch": [4, 50, 210, 225, 265], "build": [4, 14, 15, 16, 20, 22, 26, 27, 32, 50, 52, 58, 80, 127, 154, 165, 170, 178, 181, 186, 189, 190, 191, 201, 214, 242, 258, 261, 264], "argument": [4, 7, 8, 11, 12, 13, 14, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 66, 67, 75, 77, 78, 80, 81, 83, 86, 89, 90, 92, 93, 97, 99, 107, 111, 112, 122, 123, 127, 134, 137, 141, 143, 146, 149, 154, 155, 157, 158, 159, 160, 168, 174, 175, 179, 180, 181, 182, 184, 185, 187, 189, 190, 193, 194, 195, 196, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 214, 218, 219, 225, 226, 227, 228, 229, 230, 232, 233, 235, 242, 243, 245, 258, 259, 264, 265, 269], "theori": [4, 27, 33, 39, 40, 41, 42, 48, 50, 51, 55, 58, 79, 87, 90, 107, 112, 124, 126, 139, 157, 160, 170, 173, 183, 187, 188, 189, 193, 207, 229, 239, 256, 263], "compat": [4, 9, 11, 12, 32, 50, 58, 78, 81, 86, 91, 103, 162, 167, 174, 180, 183, 185, 189, 190, 194, 214, 217, 218, 221, 225, 227, 233], "is_subset": [4, 202], "valueerror": [4, 7, 25, 27, 30, 32, 33, 42, 50, 51, 59, 60, 63, 65, 66, 77, 81, 83, 86, 89, 90, 93, 97, 99, 134, 173, 175, 179, 181, 183, 187, 189, 202, 210, 212, 213, 232, 235, 245], "odd": [4, 7, 25, 27, 29, 38, 42, 50, 51, 55, 56, 58, 80, 89, 90, 100, 189, 194, 212], "head": [4, 14, 31, 50, 214, 220, 235, 264], "appliedpred": [4, 25, 26, 27], "attribut": [4, 7, 14, 26, 27, 31, 32, 41, 42, 50, 58, 59, 60, 63, 64, 65, 66, 83, 86, 92, 94, 99, 104, 106, 107, 108, 109, 111, 118, 125, 128, 149, 154, 158, 165, 169, 170, 175, 178, 180, 181, 184, 185, 189, 194, 202, 206, 207, 219, 220, 226, 228, 232, 233, 236, 242, 264], "advanc": [4, 6, 15, 22, 26, 41, 50, 54, 55, 86, 87, 121, 125, 176, 180, 183, 184, 186, 188, 189, 196, 203, 210, 225, 226, 227, 232, 258, 260, 262, 266, 267, 268, 269], "manipul": [4, 5, 7, 11, 31, 32, 33, 41, 50, 58, 75, 85, 90, 91, 112, 121, 125, 158, 177, 183, 184, 185, 188, 193, 194, 196, 203, 206, 208, 217, 232, 249, 252, 256, 258, 259, 260, 261, 262, 263, 265, 268, 269], "quit": [5, 58, 86, 90, 114, 177, 180, 191, 193, 204, 212, 247, 261, 264], "analysi": [5, 32, 33, 41, 50, 51, 56, 96, 114, 124, 125, 128, 164, 181, 190, 204, 207, 214], "physic": [5, 11, 14, 32, 43, 86, 90, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 179, 188, 214, 229, 232, 245, 263, 269], "vari": [5, 30, 32, 50, 64, 66, 97, 103, 107, 125, 158, 178, 201, 212, 232, 245], "hope": [5, 41, 103, 181], "practic": [5, 7, 13, 16, 20, 39, 41, 51, 60, 124, 127, 180, 181, 182, 184, 189, 191, 218, 261, 262], "research": [5, 42, 191, 206], "who": [5, 11, 12, 14, 22, 51, 52, 127, 178, 187, 194, 262], "abl": [5, 7, 11, 12, 14, 31, 32, 41, 46, 50, 51, 52, 61, 69, 77, 83, 86, 90, 96, 112, 122, 124, 125, 127, 128, 181, 184, 191, 210, 213, 225, 242, 263, 268, 270], "effici": [5, 7, 30, 32, 34, 41, 46, 50, 53, 54, 55, 66, 67, 83, 86, 90, 91, 99, 107, 127, 179, 182, 183, 184, 185, 187, 190, 191, 192, 193, 206, 207, 212, 226, 233, 258, 264, 265, 269], "formula": [5, 14, 30, 44, 49, 50, 54, 55, 58, 63, 76, 80, 86, 90, 179, 181, 187, 190, 194, 196, 200, 203, 206, 207, 210, 263, 269], "variou": [5, 11, 14, 15, 30, 32, 34, 41, 49, 50, 55, 70, 75, 77, 80, 109, 139, 143, 144, 155, 157, 169, 181, 182, 185, 186, 187, 189, 195, 201, 204, 207, 210, 211, 213, 227, 269], "establish": [5, 46, 75, 106, 116, 204], "state": [5, 7, 41, 48, 50, 58, 90, 93, 99, 101, 107, 108, 111, 114, 115, 128, 132, 136, 137, 139, 140, 141, 143, 144, 145, 149, 152, 154, 155, 156, 157, 159, 160, 190, 194, 203, 204, 206, 214, 229, 255, 265], "envis": 5, "sampl": [5, 11, 16, 41, 53, 97, 144, 180, 194, 214, 259, 263], "along": [5, 32, 41, 50, 51, 52, 56, 58, 59, 60, 64, 65, 68, 70, 73, 75, 81, 83, 86, 93, 94, 102, 103, 106, 107, 114, 115, 118, 119, 120, 122, 123, 124, 127, 129, 157, 169, 170, 175, 178, 180, 183, 184, 189, 190, 210, 213, 241, 245, 247], "small": [5, 32, 33, 41, 42, 50, 54, 55, 77, 80, 86, 90, 99, 115, 119, 127, 157, 179, 180, 187, 188, 189, 206, 207, 212, 232, 258, 261, 263], "x_": [5, 32, 40, 50, 51, 55, 92, 185, 187, 190, 196, 207, 210, 215], "via": [5, 9, 11, 19, 25, 26, 27, 41, 42, 50, 55, 58, 75, 77, 80, 86, 90, 92, 93, 170, 179, 181, 185, 187, 189, 190, 193, 213, 223, 226, 227, 239, 247, 264], "taylor": [5, 50, 56, 112, 124, 127, 185, 187, 190, 191, 201, 210], "seri": [5, 14, 30, 31, 32, 33, 40, 41, 49, 50, 52, 54, 55, 56, 58, 70, 73, 74, 75, 79, 90, 96, 99, 112, 118, 120, 127, 173, 177, 186, 187, 194, 199, 200, 204, 210, 213, 250, 256, 260], "expans": [5, 14, 32, 50, 52, 55, 56, 58, 70, 77, 86, 90, 124, 139, 141, 190, 191, 196, 197, 198, 203, 205, 210, 212, 213, 250, 260, 269], "let": [5, 7, 8, 30, 32, 41, 46, 50, 51, 60, 68, 73, 75, 79, 83, 86, 87, 90, 92, 104, 112, 127, 165, 170, 177, 181, 182, 183, 187, 189, 190, 191, 194, 201, 204, 206, 207, 210, 212, 213, 220, 223, 226, 230, 233, 243, 244, 248, 258, 261, 263, 264, 269], "Then": [5, 7, 9, 13, 41, 46, 49, 50, 75, 79, 86, 90, 105, 107, 109, 118, 120, 121, 125, 129, 157, 165, 177, 181, 182, 184, 187, 189, 191, 194, 201, 204, 206, 207, 210, 212, 233], "frac": [5, 7, 30, 49, 50, 51, 52, 55, 57, 58, 75, 77, 86, 90, 92, 99, 115, 125, 163, 174, 175, 177, 178, 179, 183, 187, 190, 194, 196, 197, 201, 204, 207, 210, 211, 213, 214, 215, 232, 245, 247, 259, 263, 264, 268, 269], "df": [5, 52, 210], "coeffici": [5, 7, 14, 27, 30, 32, 49, 50, 52, 54, 55, 58, 63, 68, 69, 72, 73, 75, 79, 80, 83, 86, 87, 90, 100, 107, 112, 133, 147, 157, 165, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 200, 201, 204, 206, 207, 209, 210, 211, 212, 213, 214, 220, 226, 242, 245, 264, 269], "c_": [5, 21, 51, 73, 75, 178, 182, 210], "grid": [5, 30, 31, 97, 180], "f_": [5, 50, 55, 58, 77, 122, 123, 124, 187, 193, 194, 204, 210], "constraint": [5, 86, 94, 99, 107, 108, 111, 112, 114, 115, 117, 121, 122, 123, 124, 127, 191], "subset": [5, 7, 15, 30, 31, 34, 37, 41, 42, 48, 55, 56, 62, 73, 75, 77, 79, 90, 181, 183, 187, 189, 194, 202, 232], "formul": [5, 115, 121, 122, 123, 160, 178], "assess": 5, "brute": [5, 203, 207], "frequent": [5, 41, 189, 201, 213], "cover": [5, 20, 90, 92, 103, 112, 169, 177, 220, 227, 259, 261], "introductori": [5, 184, 185, 190], "treatment": [5, 75, 190], "shall": [5, 41, 75, 112, 127, 201, 204, 264], "job": [5, 42, 140, 191, 194], "evalu": [5, 7, 8, 11, 14, 21, 25, 26, 27, 30, 32, 50, 52, 55, 56, 58, 61, 65, 66, 70, 75, 77, 80, 83, 86, 90, 91, 92, 99, 103, 105, 112, 121, 124, 125, 135, 137, 139, 141, 146, 149, 157, 160, 179, 180, 184, 185, 187, 188, 190, 194, 195, 200, 201, 202, 204, 206, 207, 210, 212, 213, 214, 216, 226, 227, 228, 233, 245, 250, 258, 259, 260, 261, 263, 265], "truncat": [5, 42, 50, 86, 90, 94, 165, 180, 191, 193, 196, 197], "approx": [5, 21, 50, 77], "lowest": [5, 32, 41, 46, 90, 181, 196, 213], "decid": [5, 7, 8, 12, 14, 31, 49, 81, 103, 124, 153, 164, 184, 187, 189, 190, 194, 210, 213, 227, 265], "2h": 5, "elimin": [5, 32, 46, 50, 80, 82, 86, 103, 185, 192, 193, 195, 197, 205, 210, 212, 213, 220, 227, 265], "print_funct": 5, "x0": [5, 30, 32, 40, 50, 58, 69, 71, 73, 74, 90, 132, 184, 195, 196, 201, 206, 210, 212, 214, 232, 259], "x_0": [5, 40, 41, 51, 72, 73, 74, 187, 196, 207, 210, 214, 259], "fi": 5, "fip1": 5, "fip2": 5, "c_0": [5, 51, 73], "c_1": [5, 51, 73, 75, 201, 204, 210], "c_2": [5, 75, 201, 210], "2f": [5, 270], "factori": [5, 14, 49, 50, 54, 57, 58, 86, 90, 92, 179, 185, 187, 189, 190, 194, 196, 206, 212, 214, 227, 228, 232, 233, 269], "vector": [5, 14, 24, 28, 32, 34, 37, 41, 42, 52, 58, 63, 64, 65, 72, 73, 79, 81, 86, 91, 93, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 119, 120, 122, 123, 124, 125, 127, 128, 132, 133, 146, 155, 157, 162, 165, 172, 173, 174, 181, 186, 189, 194, 204, 210, 212, 214, 219, 220, 225, 226, 240, 244, 249, 253, 255, 265], "c_i": [5, 75, 201, 204, 210], "nth": [5, 50, 55, 58, 79, 90, 185, 190, 191, 200, 206, 210, 214], "degre": [5, 33, 41, 48, 49, 55, 58, 66, 77, 81, 86, 93, 97, 99, 106, 107, 112, 113, 115, 121, 128, 132, 178, 181, 182, 185, 187, 189, 190, 193, 197, 200, 203, 204, 206, 207, 210, 212, 214, 239], "polynomi": [5, 7, 14, 15, 21, 28, 41, 49, 50, 51, 54, 55, 57, 68, 69, 70, 71, 73, 77, 80, 81, 83, 86, 90, 94, 99, 125, 127, 181, 183, 188, 192, 196, 201, 203, 204, 206, 207, 208, 209, 210, 213, 225, 249, 256, 260, 265, 270], "x_i": [5, 40, 58, 77, 86, 182, 185, 187, 190, 191, 194, 213], "m11": [5, 214], "m12": [5, 214], "m13": 5, "m21": [5, 214], "m22": [5, 214], "m23": 5, "m31": 5, "m32": 5, "m33": [5, 90], "3x3": [5, 65, 86, 243], "invert": [5, 27, 50, 51, 81, 83, 86, 99, 115, 162, 182, 184, 185, 189, 190, 210, 212, 213, 220, 265], "inv": [5, 42, 82, 86, 107, 114, 118, 119, 127, 149, 183, 210], "center": [5, 15, 30, 41, 49, 50, 60, 64, 66, 67, 77, 86, 104, 106, 109, 112, 114, 118, 120, 125, 127, 133, 177, 180, 189, 194, 202, 248], "fim1": 5, "serv": [5, 15, 26, 27, 32, 47, 50, 57, 73, 189, 210, 211, 235, 262], "wherea": [5, 7, 28, 32, 51, 60, 66, 75, 80, 99, 165, 181, 184, 190, 194, 212, 213, 232, 269], "bit": [5, 9, 31, 32, 34, 50, 51, 53, 80, 81, 86, 90, 154, 165, 181, 190, 204, 207, 213, 225, 232, 242, 243, 268], "question": [5, 7, 12, 14, 15, 18, 49, 52, 60, 67, 75, 77, 80, 90, 103, 162, 165, 169, 181, 184, 189, 204, 213, 232, 235], "eight": [5, 194], "dfdxcheck": 5, "c1": [5, 14, 51, 60, 67, 81, 83, 146, 160, 202, 207, 210, 212, 244, 270], "c3": [5, 53, 79, 81, 83, 90, 210, 214, 244, 270], "c5": [5, 210], "120": [5, 49, 50, 55, 56, 72, 90, 93, 94, 191, 193, 194, 196, 210, 259], "c7": [5, 41], "5040": [5, 55, 72, 190, 191], "inde": [5, 12, 38, 41, 49, 75, 181, 204, 210, 221, 225, 263], "quickli": [5, 41, 42, 50, 51, 54, 90, 187, 190, 203, 213, 229], "tediou": [5, 77], "attempt": [5, 8, 32, 41, 46, 48, 50, 54, 55, 62, 75, 77, 86, 90, 103, 105, 155, 184, 189, 196, 201, 203, 206, 207, 210, 212, 213, 214, 225, 261, 269], "certainli": [5, 62, 92, 229], "seen": [5, 7, 14, 24, 42, 75, 77, 92, 111, 165, 177, 181, 184, 187, 190, 210, 212, 213, 230, 232, 242, 261, 264, 268], "fine": [5, 50, 54, 78, 174, 184, 194, 206], "until": [5, 7, 12, 23, 42, 44, 50, 51, 60, 77, 86, 90, 124, 178, 187, 190, 203, 210, 261], "data": [5, 32, 41, 50, 51, 58, 77, 86, 91, 97, 107, 139, 180, 181, 184, 185, 187, 190, 191, 194, 206, 219, 220, 225, 227, 229, 232, 236], "handl": [5, 7, 8, 15, 30, 38, 42, 50, 56, 77, 78, 80, 85, 90, 91, 92, 93, 100, 103, 112, 124, 140, 143, 149, 150, 155, 184, 190, 191, 200, 206, 208, 210, 212, 215, 218, 226, 232, 233, 235, 250, 264, 269], "devis": 5, "backward": [5, 11, 16, 30, 50, 81, 86, 194, 232, 269], "approach": [5, 9, 31, 49, 50, 77, 99, 115, 121, 184, 187, 188, 191, 202, 211, 212, 214, 226, 229, 232, 259, 265], "xn": [5, 185], "x_n": [5, 33, 40, 51, 72, 86, 182, 185, 187, 190, 207, 213], "fn": [5, 77, 86, 181, 190], "fnm1": 5, "fnm2": 5, "dth": 5, "Of": [5, 7, 49, 75, 86, 210, 213, 232, 269], "cours": [5, 7, 34, 41, 49, 58, 75, 77, 86, 87, 90, 175, 183, 184, 188, 189, 201, 203, 204, 245, 269], "fortran": [5, 11, 30, 91, 92, 103, 127, 179, 227, 251, 257, 268], "etc": [5, 7, 8, 27, 30, 32, 46, 50, 51, 55, 56, 68, 79, 80, 85, 90, 112, 131, 140, 144, 157, 160, 164, 172, 175, 177, 178, 180, 181, 182, 184, 187, 189, 194, 195, 202, 203, 204, 206, 210, 213, 214, 218, 226, 227, 232, 243, 247], "discrit": 5, "bengt": [5, 30], "fornberg": [5, 30], "weight": [5, 50, 58, 65, 67, 77, 79, 86, 144, 206, 250, 259], "collect": [6, 9, 11, 15, 31, 32, 41, 50, 67, 77, 90, 93, 99, 111, 119, 127, 160, 167, 179, 185, 190, 203, 204, 210, 214, 225, 232, 250], "gap": [6, 41, 90, 112, 191], "matur": [6, 7, 212, 213], "matric": [6, 7, 11, 14, 28, 32, 50, 51, 77, 87, 89, 99, 106, 107, 108, 112, 115, 124, 127, 129, 132, 133, 135, 143, 144, 154, 159, 170, 178, 179, 183, 189, 194, 195, 202, 204, 206, 207, 210, 212, 213, 215, 217, 227, 228, 255, 260, 262, 263], "func": [6, 12, 14, 26, 30, 32, 50, 52, 55, 58, 69, 71, 77, 90, 149, 170, 187, 190, 194, 195, 206, 210, 211, 212, 223, 228, 230, 232, 233, 235, 238], "explain": [7, 11, 12, 14, 15, 31, 46, 50, 58, 68, 73, 181, 184, 187, 189, 191, 201], "often": [7, 8, 12, 14, 31, 32, 33, 40, 50, 58, 60, 62, 75, 77, 86, 90, 91, 99, 121, 124, 169, 177, 178, 181, 182, 184, 187, 190, 195, 201, 202, 207, 210, 214, 232, 258, 263, 264, 265, 269], "new": [7, 9, 11, 12, 13, 15, 22, 26, 27, 31, 32, 33, 41, 42, 49, 50, 51, 52, 58, 63, 66, 75, 77, 78, 81, 86, 90, 93, 99, 104, 112, 118, 120, 125, 126, 127, 129, 150, 156, 157, 160, 162, 165, 166, 168, 170, 173, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 194, 201, 204, 206, 207, 210, 212, 213, 214, 215, 225, 226, 230, 233, 239, 240, 242, 246, 258, 261, 264, 265, 267], "elsewher": [7, 55, 79, 114, 183, 225], "wide": [7, 13, 78, 86, 127, 174, 184, 190, 194, 214], "concret": [7, 31, 42, 50, 55, 56, 77, 79, 86, 90, 112, 165, 185, 189, 194, 250], "seem": [7, 74, 75, 112, 165, 181, 206, 210, 269], "obviou": [7, 8, 41, 49, 181, 184, 193, 207, 263], "situat": [7, 54, 75, 178, 210, 212, 214, 230, 261], "surpris": [7, 213], "refus": [7, 269], "everi": [7, 11, 12, 14, 26, 27, 28, 31, 36, 38, 41, 42, 50, 51, 65, 79, 81, 86, 90, 99, 125, 175, 177, 178, 180, 181, 182, 184, 185, 187, 189, 194, 199, 202, 204, 206, 207, 210, 213, 214, 216, 242, 245, 247, 262, 264, 265, 269], "roughli": [7, 50, 51, 91, 113, 210, 233], "known": [7, 8, 14, 27, 31, 32, 33, 39, 41, 42, 50, 51, 54, 55, 57, 58, 60, 63, 68, 75, 77, 78, 87, 90, 97, 99, 100, 102, 104, 109, 124, 163, 170, 177, 183, 184, 185, 189, 190, 194, 197, 200, 202, 203, 204, 206, 208, 209, 210, 211, 212, 214, 232, 233, 239, 245, 247, 269], "tell": [7, 8, 14, 15, 32, 42, 51, 54, 58, 81, 92, 111, 165, 184, 189, 193, 201, 204, 210, 226, 261], "infinit": [7, 27, 49, 50, 51, 54, 55, 56, 63, 64, 77, 86, 90, 99, 117, 146, 165, 181, 189, 194, 195, 196, 199, 200, 201, 202, 206, 207, 208, 209, 212, 219, 232, 269, 270], "good": [7, 12, 15, 32, 50, 51, 54, 62, 75, 86, 90, 114, 124, 127, 181, 184, 185, 194, 201, 203, 204, 206, 210, 232, 258, 262, 265], "idea": [7, 8, 12, 35, 41, 48, 50, 51, 62, 68, 75, 77, 90, 100, 112, 160, 164, 165, 181, 183, 184, 203, 206, 207, 210, 213, 227, 233, 269], "queri": [7, 8, 25, 28, 29, 30, 32, 50, 62, 190, 206, 214, 250], "is_posit": [7, 8, 50, 172, 185], "is_neg": [7, 185], "fuzzi": [7, 20], "interprett": 7, "unknow": 7, "resolv": [7, 8, 50, 203, 206], "undecid": [7, 86, 184, 213, 265], "answer": [7, 12, 41, 50, 54, 72, 75, 77, 80, 86, 90, 165, 187, 191, 203, 204, 206, 212, 214, 229, 235, 263, 265, 269], "hard": [7, 12, 16, 42, 51, 86, 90, 112, 160, 184, 194, 201, 210, 213, 261, 263], "fast": [7, 11, 32, 50, 77, 85, 86, 90, 132, 185, 186, 187, 188, 189, 190, 191, 197, 201, 210, 212, 229, 232, 233], "heurist": [7, 42, 75, 77, 81, 187, 188, 201, 203, 206, 208, 212, 213, 225, 259, 269], "conclud": [7, 58, 73, 114, 175, 201, 212, 247], "particularli": [7, 54, 77, 184, 185, 204, 269, 270], "mix": [7, 23, 49, 56, 81, 86, 92, 169, 184, 185, 190, 194, 213, 216, 218, 220, 233], "expr2": [7, 12, 99, 180, 264], "ideal": [7, 32, 87, 109, 112, 121, 170, 177, 183, 185, 186, 187, 188, 189, 190, 191, 206, 213, 239], "fulli": [7, 12, 14, 41, 50, 67, 77, 80, 92, 94, 112, 127, 160, 177, 184, 185, 191, 201, 214, 220, 236], "primarili": [7, 11, 32, 50, 90, 93, 159, 190, 192, 226, 229, 235, 242], "slow": [7, 46, 50, 54, 77, 91, 103, 114, 132, 169, 178, 184, 185, 194, 195, 196, 197, 206, 210, 212, 213, 225, 226, 269], "down": [7, 9, 12, 14, 20, 83, 101, 114, 115, 177, 178, 180, 185, 196, 202, 204, 206, 210, 229, 265, 269], "indetermin": [7, 8, 50, 86, 187, 199, 212], "never": [7, 50, 56, 77, 162, 190, 191, 194, 202, 212, 214, 223, 242, 261, 262], "contradict": 7, "infer": [7, 26, 27, 42, 50, 77, 184, 193, 199, 204, 210, 226, 252], "bug": [7, 12, 14, 19, 30, 51, 76, 184, 202, 210, 213, 261], "prepar": [7, 107, 192], "presum": [7, 75, 184, 204, 227], "plain": [7, 12, 14, 78, 174, 190, 194], "singletonregistri": [7, 50], "implicitli": [7, 8, 42, 50, 77, 181, 184, 212], "x1": [7, 40, 50, 55, 127, 132, 184, 185, 195, 196, 206, 210, 212, 214, 232], "x2": [7, 40, 50, 55, 127, 132, 184, 196, 210, 212, 214], "distinct": [7, 12, 15, 32, 41, 42, 50, 51, 55, 63, 75, 80, 86, 90, 111, 177, 184, 189, 190, 194, 202, 204, 269], "posifi": [7, 205], "unless": [7, 11, 14, 25, 27, 30, 32, 41, 49, 50, 51, 55, 58, 65, 66, 75, 86, 89, 133, 177, 178, 182, 184, 189, 190, 194, 199, 202, 203, 210, 212, 225, 229, 232, 233, 235, 239, 247, 259, 265, 269], "_x": [7, 86, 125, 174, 177, 178, 185, 191, 206, 210, 226], "rep": [7, 41, 46, 50, 144, 181, 183, 184, 185, 188, 189, 190, 203, 206, 235], "map": [7, 30, 31, 32, 40, 41, 42, 50, 51, 62, 66, 73, 75, 77, 80, 81, 90, 97, 107, 115, 138, 149, 150, 155, 170, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 201, 206, 210, 211, 212, 213, 214, 218, 219, 226, 229, 232, 233, 235, 239], "otherwis": [7, 8, 11, 12, 30, 31, 32, 41, 42, 46, 49, 50, 51, 54, 56, 58, 59, 60, 63, 64, 65, 66, 75, 77, 79, 80, 82, 86, 89, 90, 92, 97, 99, 101, 104, 111, 112, 145, 150, 156, 173, 176, 177, 181, 185, 187, 189, 190, 192, 194, 196, 197, 199, 200, 202, 206, 207, 210, 211, 212, 213, 214, 215, 223, 225, 227, 232, 233, 258, 259, 268], "assign": [7, 15, 31, 32, 33, 46, 50, 66, 77, 79, 80, 86, 92, 107, 112, 118, 127, 165, 175, 178, 180, 182, 187, 194, 212, 213, 220, 227, 242, 245, 261], "feel": [7, 19, 127, 128, 206, 210], "among": [7, 31, 32, 33, 34, 41, 42, 51, 78, 91, 190, 210, 215, 218, 220, 242], "discourag": [7, 50, 206], "behaviour": [7, 75, 80, 104, 187, 191, 197, 200], "symbolc": 7, "implicit": [7, 32, 48, 50, 92, 111, 128, 180, 210, 212, 216, 219, 226, 227, 239, 241, 248, 261], "unusu": [7, 14, 114, 225], "tailor": 7, "necessarili": [7, 12, 14, 28, 50, 51, 52, 75, 77, 80, 181, 182, 189, 190, 192, 206, 210, 212, 213], "is_integ": [7, 50, 172, 194, 219], "assumptions0": [7, 50], "commut": [7, 24, 27, 31, 41, 42, 46, 50, 52, 73, 77, 86, 137, 144, 147, 148, 149, 159, 160, 165, 172, 178, 182, 185, 186, 187, 188, 190, 194, 201, 202, 204, 210, 220, 264], "extended_neg": [7, 50], "extended_nonneg": [7, 50], "extended_nonposit": [7, 50], "extended_nonzero": [7, 50, 194], "extended_posit": [7, 50], "extended_r": [7, 28, 50, 194, 209, 213], "hermitian": [7, 27, 50, 81, 82, 86, 143, 149, 160, 194], "irrat": [7, 27, 30, 50, 90, 184, 190, 194, 202, 263], "noninteg": [7, 28, 50, 184, 194], "nonneg": [7, 27, 50, 51, 52, 55, 58, 83, 127, 182, 184, 207, 214, 269], "nonposit": [7, 27, 50, 127], "nonzero": [7, 27, 29, 49, 50, 65, 86, 101, 182, 183, 184, 185, 194, 197, 213], "ration": [7, 25, 27, 30, 32, 49, 54, 55, 56, 58, 60, 63, 65, 67, 71, 75, 77, 78, 83, 86, 90, 92, 99, 129, 162, 179, 182, 186, 187, 188, 189, 191, 194, 198, 199, 203, 204, 206, 207, 208, 209, 212, 213, 214, 232, 239, 260, 261, 264, 268], "transcendent": [7, 27, 50, 58, 77, 184, 189, 194, 212, 213, 265, 270], "tabl": [7, 14, 33, 41, 50, 55, 58, 71, 76, 77, 86, 90, 106, 127, 179, 189, 216, 252], "oo": [7, 8, 14, 28, 30, 49, 50, 54, 55, 56, 57, 58, 63, 75, 77, 80, 86, 99, 101, 146, 158, 161, 185, 187, 190, 199, 200, 201, 202, 206, 209, 210, 212, 213, 214, 219, 232, 235, 259, 263], "zoo": [7, 28, 50, 55, 56, 58, 77, 201, 203, 206], "field": [7, 24, 28, 32, 50, 51, 52, 58, 68, 77, 132, 133, 172, 176, 181, 182, 183, 185, 186, 188, 190, 191, 192, 207, 212, 225, 239, 241, 243, 244, 246, 248], "oper": [7, 8, 11, 13, 14, 22, 24, 28, 32, 41, 42, 43, 49, 50, 51, 52, 53, 54, 56, 58, 60, 68, 70, 73, 75, 80, 81, 83, 85, 90, 92, 99, 100, 103, 107, 108, 115, 119, 124, 127, 132, 136, 137, 141, 143, 144, 145, 146, 151, 152, 155, 157, 158, 159, 160, 169, 170, 172, 176, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 197, 199, 202, 203, 205, 206, 210, 212, 213, 216, 217, 218, 219, 225, 226, 229, 232, 233, 239, 246, 249, 255, 260, 261, 262, 264, 269], "antihermitian": [7, 27, 50], "mathbb": [7, 28, 33, 41, 49, 50, 51, 56, 58, 75, 81, 86, 124, 179, 181, 182, 184, 185, 187, 189, 190, 193, 201, 202, 204, 207, 213, 214, 269], "iy": [7, 56, 75, 202, 213], "overlin": [7, 15, 58], "extend": [7, 14, 15, 18, 27, 32, 41, 42, 50, 51, 55, 62, 75, 77, 86, 90, 127, 168, 174, 180, 182, 185, 187, 189, 190, 191, 194, 201, 203, 207, 209, 210, 213, 214, 215, 227, 229, 261, 263], "cup": [7, 190, 202, 213], "infti": [7, 14, 28, 49, 50, 51, 55, 56, 58, 75, 77, 181, 190, 197, 201, 204, 210, 213, 214, 259, 263, 269], "pm": [7, 49, 75, 77, 182, 193, 201, 207, 210], "yi": 7, "ne": [7, 51, 56, 63, 75, 90, 182, 184, 187, 204, 210, 214], "composit": [7, 27, 31, 39, 41, 42, 50, 51, 68, 70, 77, 90, 93, 185, 187, 190, 193, 206, 213, 228], "2k": [7, 50, 75, 90, 207], "pariti": [7, 42], "product": [7, 24, 35, 38, 41, 42, 46, 48, 49, 50, 51, 52, 54, 55, 58, 60, 63, 65, 66, 73, 75, 77, 79, 80, 81, 83, 86, 90, 91, 99, 100, 101, 103, 114, 125, 127, 135, 139, 140, 143, 145, 146, 147, 149, 152, 154, 155, 157, 158, 160, 165, 166, 169, 170, 172, 176, 177, 178, 179, 181, 182, 183, 185, 187, 189, 190, 191, 194, 195, 196, 199, 202, 203, 206, 207, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 226, 229, 232, 239, 242, 246], "ge": [7, 15, 55, 56, 58, 75, 81, 86, 90, 179, 182, 187, 204, 232], "le": [7, 33, 46, 58, 75, 81, 90, 120, 187, 204, 214], "en": [7, 14, 15, 24, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 66, 67, 68, 77, 78, 79, 80, 81, 83, 86, 90, 97, 99, 102, 129, 131, 132, 133, 135, 136, 137, 141, 142, 143, 146, 148, 149, 158, 160, 170, 172, 176, 190, 191, 197, 201, 202, 203, 210, 213, 214, 227, 232, 233, 239, 240, 244, 246, 248, 265], "wikipedia": [7, 14, 24, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 66, 67, 68, 77, 79, 80, 81, 83, 86, 90, 97, 99, 102, 129, 131, 132, 133, 135, 136, 137, 141, 142, 143, 146, 148, 149, 158, 160, 163, 170, 172, 176, 190, 197, 201, 202, 203, 210, 213, 214, 227, 232, 239, 240, 244, 246, 248, 263, 265, 267], "commutative_properti": [7, 50], "infin": [7, 28, 49, 55, 56, 57, 58, 63, 75, 77, 86, 133, 185, 187, 190, 194, 199, 200, 201, 202, 206, 209, 210, 214], "skew": [7, 73, 90, 214], "hermitian_matrix": 7, "complex_numb": [7, 28, 50], "algebraic_numb": [7, 28, 50], "transcendental_numb": [7, 50], "extended_real_number_lin": 7, "real_numb": [7, 28], "imaginary_numb": [7, 28, 50], "rational_numb": [7, 28], "irrational_numb": [7, 28, 50], "parity_": [7, 50], "prime_numb": [7, 50, 90], "composite_numb": [7, 50], "positive_real_numb": 7, "negative_numb": [7, 50], "beyond": [7, 11, 18, 44, 66, 90, 124, 181, 184, 203, 206, 265], "immedi": [7, 12, 41, 50, 75, 80, 160, 181, 184, 226, 233], "redund": [7, 12, 41, 48, 80, 86, 210, 227], "simpli": [7, 8, 9, 11, 12, 15, 28, 33, 49, 50, 52, 56, 60, 81, 83, 86, 90, 92, 93, 100, 104, 112, 114, 124, 150, 155, 165, 175, 178, 184, 191, 202, 203, 204, 210, 213, 230, 233, 245], "is_real": [7, 50, 52, 56, 57, 86, 172, 194, 219], "inconsist": [7, 25, 27, 49, 165, 170, 173, 177, 206, 210, 213], "inconsistentassumpt": 7, "worth": [7, 12, 170, 243, 245], "deal": [7, 32, 49, 50, 54, 62, 70, 75, 77, 96, 103, 107, 108, 112, 175, 177, 178, 182, 187, 190, 207, 208, 212, 223, 233, 235, 242, 247, 261, 263, 269], "reserv": [7, 112, 220, 227, 265], "is_zero_matrix": [7, 81, 183], "is_zero": [7, 12, 50, 57, 65, 86, 181, 185, 190, 230, 265], "generalis": [7, 58, 75, 181], "gaussian": [7, 58, 77, 86, 90, 130, 186, 187, 190, 207, 212, 214, 255, 265], "notion": [7, 31, 165, 168, 181, 213, 242, 247], "likewis": [7, 14, 31, 115], "scheme": [7, 9, 12, 42, 49, 54, 179, 180, 187, 190, 219], "chain": [7, 32, 41, 46, 50, 58, 67, 91, 177, 189, 214], "superset": [7, 30, 39, 45, 53, 127, 184, 202, 212], "vanilla": 7, "attach": [7, 44, 75, 91, 93, 107, 178, 226, 228, 233], "belong": [7, 15, 28, 31, 41, 46, 50, 73, 86, 160, 170, 177, 180, 181, 183, 184, 187, 189, 190, 201, 202, 206, 207, 213, 220], "is_commut": [7, 77, 149, 158, 232], "is_complex": [7, 50], "is_finit": [7, 50], "permit": [7, 42, 52, 56, 80, 90, 180], "formal": [7, 31, 49, 50, 58, 75, 80, 129, 165, 184, 186, 187, 198, 201], "littl": [7, 31, 42, 60, 86, 90, 91, 114, 165, 188, 190, 194, 204, 206, 214, 229, 242], "difficult": [7, 15, 50, 86, 112, 191, 204, 210, 211, 213, 226, 248, 263, 269], "suit": [7, 11, 12, 15, 31, 180, 190, 223, 225], "n1": [7, 32, 41, 50, 51, 112, 127, 129, 133, 169, 207, 214, 239], "n2": [7, 32, 41, 50, 51, 127, 129, 133, 207, 214], "misunderstand": 7, "is_nonneg": [7, 185], "intent": [7, 32, 49, 50, 92, 227], "meaning": [7, 25, 27, 31, 51], "alon": [7, 51, 78, 187, 210, 212, 219, 232, 263, 264], "suffici": [7, 12, 14, 31, 32, 41, 42, 46, 50, 86, 165, 197, 201, 210, 214, 229, 269], "tempt": [7, 50, 90], "meet": [7, 51, 201], "criteria": [7, 50, 264], "bear": [7, 15], "ordinari": [7, 8, 11, 21, 30, 32, 41, 50, 54, 56, 58, 68, 72, 73, 77, 87, 99, 121, 181, 183, 184, 193, 200, 208, 210, 215, 229, 263, 269], "noncommut": [7, 50, 73, 264], "entir": [7, 11, 12, 18, 41, 50, 51, 54, 58, 64, 66, 75, 89, 105, 125, 170, 181, 183, 189, 202, 219, 228, 230, 263, 269], "Such": [7, 12, 14, 32, 50, 66, 115, 181, 182, 189, 195, 203, 204, 206, 258, 264], "finiteset": [7, 30, 31, 213, 214, 270], "intersect": [7, 14, 30, 31, 41, 60, 61, 63, 64, 65, 66, 67, 133, 181, 190, 194, 200, 201, 213, 256], "s1": [7, 41, 49, 63, 66, 73, 99, 171, 181, 190, 197, 207, 232, 241], "s2": [7, 41, 42, 49, 63, 66, 99, 171, 181, 190, 197, 201, 207, 232, 241], "bool": [7, 20, 30, 32, 46, 48, 50, 51, 53, 56, 77, 78, 80, 81, 83, 86, 90, 92, 108, 144, 172, 174, 180, 189, 190, 192, 194, 195, 196, 201, 202, 206, 209, 212, 214, 226, 227, 232, 233, 239, 241, 261], "plai": [7, 49, 114, 122, 207, 261, 263, 264], "role": [7, 56, 192], "connect": [7, 44, 51, 52, 65, 66, 86, 91, 93, 104, 106, 114, 116, 181, 182, 183, 192, 210, 214, 232, 239], "is_finite_set": 7, "zero_matrix": 7, "setsymbol": 7, "concern": [7, 14, 30, 33, 49, 54, 90, 175, 180, 182, 183, 184, 193, 194, 195, 206, 207, 212, 226, 227, 229, 235], "semant": [7, 12, 83], "aspect": [7, 15, 86, 184], "is_numb": [7, 50, 57, 58, 77], "is_compar": [7, 50], "capitalis": 7, "float": [7, 11, 18, 32, 41, 56, 58, 65, 67, 77, 78, 81, 86, 90, 92, 97, 99, 127, 133, 174, 180, 184, 185, 194, 206, 212, 214, 225, 233, 235, 250, 258, 261], "faster": [7, 11, 32, 35, 50, 58, 81, 90, 91, 103, 105, 107, 108, 124, 183, 184, 185, 187, 189, 190, 191, 195, 197, 201, 206, 207, 210, 211, 213, 226, 229], "expr1": [7, 12, 99, 180, 212, 264], "4142135623731": [7, 194, 212], "primari": [7, 11, 12, 14, 15, 50, 62, 80, 178, 181, 227, 233], "predict": [7, 160, 206, 232], "inequ": [7, 8, 21, 50, 180, 187, 202, 204, 208], "expreal": 7, "restrict": [7, 32, 39, 50, 51, 58, 86, 93, 94, 160, 181, 184, 189, 191, 209], "fuzzy_and": [7, 8], "fuzzy_or": [7, 8], "is_extended_nonneg": 7, "classmethod": [7, 24, 26, 27, 32, 34, 39, 41, 42, 44, 45, 50, 56, 57, 58, 65, 81, 86, 99, 146, 157, 158, 160, 183, 185, 189, 190, 194, 202, 220, 225], "is_extended_r": 7, "is_infinit": 7, "is_extended_neg": 7, "is_extended_posit": [7, 8], "self": [7, 14, 24, 26, 27, 31, 32, 41, 42, 47, 49, 50, 52, 56, 57, 59, 60, 61, 63, 64, 65, 66, 77, 81, 86, 90, 104, 114, 155, 160, 170, 172, 173, 181, 183, 185, 187, 189, 190, 194, 196, 201, 202, 220, 239], "arg": [7, 15, 24, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 47, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 63, 65, 66, 67, 72, 75, 77, 80, 81, 82, 83, 84, 86, 88, 90, 92, 99, 129, 135, 138, 140, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 170, 174, 178, 180, 183, 185, 187, 189, 190, 191, 194, 196, 197, 200, 201, 202, 203, 206, 210, 212, 213, 214, 215, 219, 220, 225, 226, 227, 228, 232, 233, 235, 239, 240], "_eval_is_finit": 7, "is_extended_nonposit": 7, "_eval_is_algebra": 7, "is_nonzero": [7, 65], "_eval_is_integ": 7, "_eval_is_zero": 7, "pick": [7, 17, 51, 55, 124, 154, 156, 269], "__new__": [7, 32, 41, 50, 264], "verifi": [7, 19, 30, 41, 47, 51, 52, 112, 181, 187, 193, 210, 212, 213, 215, 216, 246, 269], "importantli": [7, 191, 229], "reject": [7, 8, 90, 207, 235], "_eval_is_": 7, "is_algebra": [7, 50, 185], "minim": [7, 14, 30, 41, 42, 46, 49, 50, 51, 75, 77, 80, 90, 104, 115, 129, 183, 184, 185, 186, 187, 190, 193, 203, 206, 207, 212, 232, 236], "interfer": [7, 194], "determinist": [7, 41, 77, 90, 187, 188], "reach": [7, 90, 99, 189, 190, 210], "advantag": [7, 13, 27, 30, 32, 50, 51, 77, 80, 86, 90, 96, 164, 183, 184, 191, 202, 207, 210, 213, 229, 261, 263, 265, 269], "leav": [7, 32, 50, 77, 86, 90, 108, 121, 144, 160, 201, 229, 258, 264, 269], "claus": [7, 80], "flow": [7, 189], "condit": [7, 8, 32, 41, 50, 52, 56, 58, 68, 69, 72, 73, 74, 76, 77, 80, 86, 90, 92, 93, 94, 99, 105, 108, 114, 121, 124, 127, 129, 173, 179, 191, 194, 197, 204, 207, 209, 210, 212, 213, 214, 219, 252, 269], "inner": [7, 49, 75, 86, 143, 146, 147, 152, 154, 155, 158, 160, 170, 173, 183, 189, 196, 239], "optimis": [7, 210], "elementari": [7, 8, 14, 41, 50, 51, 54, 57, 58, 72, 75, 77, 81, 86, 90, 125, 153, 156, 186, 190, 191, 198, 232, 233, 242, 252], "stage": [7, 31, 49, 90, 201, 269], "briefli": [7, 182, 187], "canon": [7, 14, 32, 34, 39, 41, 42, 46, 50, 51, 52, 56, 66, 75, 80, 86, 90, 92, 107, 137, 141, 160, 162, 165, 167, 187, 195, 202, 203, 206, 212, 214, 220, 232, 269], "readi": [7, 12, 111, 184, 194, 210], "managedproperti": [7, 50], "metaclass": [7, 50], "relev": [7, 12, 14, 15, 32, 48, 63, 78, 79, 104, 107, 109, 114, 165, 174, 178, 184, 204, 210, 211, 220, 225, 246], "default_assumpt": 7, "initi": [7, 15, 26, 41, 45, 50, 51, 52, 55, 57, 58, 66, 68, 69, 72, 73, 74, 75, 78, 90, 92, 94, 97, 99, 104, 107, 109, 111, 112, 114, 115, 120, 122, 123, 124, 127, 128, 132, 140, 149, 171, 172, 174, 178, 179, 187, 189, 190, 194, 200, 204, 206, 210, 212, 213, 219, 227, 234, 235, 239, 240, 241, 242, 243], "_ask": 7, "_eval_i": 7, "enumer": [7, 34, 37, 39, 42, 45, 53, 57, 75, 80, 90, 189, 190, 204, 229, 232], "randomis": [7, 222, 257], "unresolv": 7, "factrul": 7, "_assume_rul": 7, "preprocess": [7, 77, 192], "defined_fact": 7, "full_impl": 7, "defaultdict": [7, 50, 232], "precomput": [7, 55, 90, 233], "static": [7, 24, 32, 41, 42, 44, 50, 56, 63, 64, 65, 66, 83, 94, 114, 121, 180, 194, 200, 202, 214, 226], "knowabl": 7, "stdfactkb": 7, "whose": [7, 15, 31, 33, 34, 39, 42, 49, 50, 51, 56, 60, 64, 66, 67, 73, 77, 80, 86, 90, 109, 122, 132, 155, 165, 171, 172, 175, 178, 182, 183, 185, 189, 190, 201, 202, 206, 210, 211, 212, 214, 220, 225, 229, 232, 233, 239, 241, 243, 245], "_eval_is_r": [7, 50, 57, 190], "_assumpt": [7, 50], "share": [7, 12, 51, 90, 185, 189, 194, 214, 227], "amongst": [7, 212], "exhaust": [7, 12, 22, 204, 232, 262], "indirectli": 7, "execut": [7, 19, 32, 78, 81, 127, 180, 194, 210, 213, 223, 225, 227, 228, 233, 235, 238, 249, 263, 268], "manifest": [7, 182], "jointli": 7, "fundament": [7, 30, 33, 40, 68, 75, 77, 86, 165, 184, 189, 207, 210, 214, 265], "theoret": [7, 31, 33, 41, 51, 188, 189, 204, 261], "upon": [7, 32, 50, 90, 111, 114, 122, 123, 124, 127, 154, 160, 175, 177, 178, 202, 210, 219, 226, 245, 269], "relat": [8, 11, 12, 14, 15, 25, 27, 28, 30, 33, 34, 40, 41, 48, 52, 55, 56, 57, 66, 72, 75, 77, 81, 86, 90, 102, 115, 118, 121, 127, 129, 134, 142, 144, 170, 173, 176, 177, 179, 180, 181, 187, 189, 190, 191, 193, 194, 198, 200, 201, 204, 206, 207, 209, 210, 212, 213, 214, 232, 246, 250, 252, 269], "isposit": 8, "xpo": 8, "xneg": 8, "mayb": [8, 9], "strictgreaterthan": 8, "analogu": [8, 28, 49, 64, 184, 185], "piecewis": [8, 32, 49, 57, 58, 77, 93, 158, 194, 196, 197, 212, 213, 214, 233, 259], "nonetyp": [8, 32], "consider": [8, 12, 50, 91, 103, 184, 193, 202, 207, 210, 242], "quirk": 8, "did": [8, 11, 15, 50, 77, 90, 103, 118, 165, 187, 191, 202, 212, 223, 233, 261, 263, 269], "both_posit": 8, "falsei": 8, "both_positive_bett": 8, "negat": [8, 28, 50, 56, 80, 99, 170, 183, 185, 187, 190], "branch": [8, 13, 30, 50, 55, 56, 57, 58, 76, 191, 204, 213, 264, 269], "fuzzy_not": 8, "both_positive_best": 8, "simpler": [8, 50, 54, 58, 74, 75, 118, 178, 187, 203, 204, 206, 210, 212, 213, 269], "silent": [8, 54, 90, 226], "easier": [8, 12, 50, 94, 112, 114, 177, 185, 189, 191, 204, 210, 213, 227, 233, 242, 263, 269, 270], "carefulli": [8, 50, 170, 187, 196], "truth": [8, 25, 26, 27, 28, 29, 50, 81, 206, 252], "bitwis": [8, 53, 80], "produc": [8, 11, 14, 15, 31, 41, 50, 51, 63, 77, 80, 86, 170, 184, 189, 190, 194, 201, 210, 211, 212, 214, 223, 225, 229, 230, 232, 268], "footnot": [8, 165, 264, 265, 268], "machin": [9, 11, 13, 14, 195, 206, 210, 258], "imag": [9, 11, 41, 117, 127, 129, 133, 181, 185, 187, 194, 202, 213], "os": [9, 225, 235, 236], "choos": [9, 14, 41, 46, 50, 52, 55, 86, 90, 94, 97, 115, 125, 160, 164, 170, 177, 178, 186, 190, 191, 194, 201, 203, 204, 210, 211, 214, 225, 230, 269], "cd": [9, 13, 14, 213, 232], "dockerfil": 9, "htmldoc": 9, "sympy_htmldoc": 9, "apt": [9, 13], "python3": [9, 11, 32, 92, 194, 225], "sphinx": [9, 12, 15, 16, 56, 210, 225, 230], "texliv": [9, 11, 194], "dvipng": 9, "librsvg2": 9, "bin": [9, 10, 11, 13, 14, 78, 194, 225, 232], "imagemagick": 9, "docbook2x": 9, "graphviz": [9, 15, 264, 268], "pip": [9, 11, 19, 92], "txt": [9, 194], "mpmath": [9, 11, 13, 18, 32, 55, 58, 86, 91, 127, 184, 185, 194, 202, 212, 228, 233], "packag": [9, 11, 19, 21, 78, 91, 92, 96, 121, 127, 174, 194, 225, 236, 244, 245, 263], "rpm": 9, "distribut": [9, 11, 19, 41, 48, 50, 58, 66, 77, 93, 94, 159, 182, 185, 186, 190, 194, 220], "prerequisit": 9, "dnf": [9, 80], "medium": [9, 129, 130, 133, 134, 144, 187, 255], "tool": [9, 15, 18, 41, 78, 85, 86, 91, 99, 127, 178, 181, 186, 187, 194, 205, 226, 232, 238, 246, 251, 253], "homebrew": 9, "brew": 9, "sh": 9, "docbook": 9, "librsvg": 9, "conda": [9, 11, 13, 19, 92], "forg": [9, 11, 92], "success": [9, 15, 31, 41, 50, 58, 75, 77, 90, 114, 170, 181, 187, 189, 202, 203, 210, 212, 213, 214, 232, 239, 240], "tricki": [9, 50, 75], "subsystem": [9, 194], "linux": [9, 19], "workaround": [9, 233], "microsoftdoc": 9, "wsl": 9, "blob": [9, 77], "win10": 9, "md": [9, 12, 15, 223, 230], "prompt": [9, 14], "transfer": [9, 96, 97, 99, 129, 213], "termin": [9, 41, 50, 56, 78, 90, 174, 194, 201, 225, 268], "html": [9, 11, 12, 14, 15, 28, 32, 34, 42, 43, 44, 50, 51, 53, 55, 56, 58, 60, 66, 67, 77, 78, 86, 90, 97, 188, 194, 197, 199, 202, 203, 207, 210, 214, 226, 228, 230, 232, 233, 265], "directori": [9, 11, 14, 15, 19, 27, 32, 210, 225, 226, 235], "folder": 9, "prepend": [9, 31, 41, 86, 99, 167, 220], "mnt": 9, "navig": 9, "cygwin": 9, "msys2": 9, "virtual": [9, 12, 16, 19, 50, 66, 178, 262], "partial": [9, 30, 41, 48, 49, 50, 52, 54, 55, 56, 90, 92, 127, 154, 170, 173, 175, 185, 186, 188, 191, 194, 196, 203, 206, 208, 210, 211, 215, 221, 239, 245, 259, 269], "workflow": [9, 11, 13, 17, 22, 127, 184, 227, 233], "viabl": [9, 51], "64": [9, 35, 41, 90, 126, 179, 193, 203, 212, 214, 225, 232, 235, 268], "chocolatei": 9, "choco": 9, "rsvg": 9, "chose": [9, 51], "rm": [9, 32], "Be": [9, 12, 14, 30, 50, 80, 86, 187, 210, 213, 221, 233], "sure": [9, 12, 14, 15, 32, 41, 50, 62, 111, 112, 140, 165, 190, 191, 201, 210, 212, 213, 226, 232, 261, 264, 269], "filesystem": 9, "makefil": 9, "subdirectori": 9, "svg": [9, 78, 174], "_build": [9, 14], "web": [9, 15, 51, 62, 127, 176, 188, 207], "browser": 9, "drop": [9, 56, 77, 91, 118, 185, 187], "menu": 9, "told": 9, "load": [9, 32, 50, 78, 93, 94, 104, 107, 111, 116, 128, 140, 174], "ll": [9, 31, 48, 86, 115, 177, 178, 223], "step": [9, 12, 13, 16, 22, 30, 32, 41, 45, 46, 49, 50, 51, 58, 74, 75, 77, 86, 90, 91, 98, 107, 118, 121, 122, 127, 128, 162, 173, 178, 180, 184, 185, 187, 190, 194, 195, 196, 199, 202, 203, 204, 206, 207, 208, 210, 212, 214, 219, 226, 232, 233, 259], "reload": 9, "monitor": 9, "detect": [9, 11, 23, 30, 83, 86, 90, 180, 184, 194, 210, 211, 213, 215, 232, 250, 268], "procedur": [9, 33, 35, 41, 47, 48, 49, 77, 86, 107, 125, 187, 189, 206, 207, 212, 213, 239, 265], "8000": [9, 93], "localhost": 9, "port": [9, 92, 114, 132], "finish": [9, 32, 33, 154, 228, 266], "stop": [9, 12, 32, 33, 42, 50, 86, 90, 180, 200, 202, 210, 214], "ctrl": 9, "detach": 9, "mode": [9, 10, 50, 78, 92, 132, 155, 174, 190, 194, 225, 236, 256], "livehtml": 9, "action": [9, 11, 15, 41, 79, 152, 155, 165, 190, 206, 213], "99": [9, 32, 50, 51, 86, 90, 187, 188], "math": [9, 11, 14, 24, 28, 31, 33, 41, 50, 58, 60, 77, 86, 90, 91, 112, 121, 175, 180, 185, 188, 193, 194, 210, 211, 214, 226, 227, 233, 243, 244, 245, 246, 247, 251, 258, 259, 263], "doubl": [9, 14, 15, 30, 32, 46, 50, 51, 57, 86, 92, 106, 120, 121, 177, 184, 194, 203, 204, 227, 269], "backtick": [9, 14, 15], "render": [9, 11, 14, 15, 32, 50, 78, 174, 180, 194, 268], "resourc": [9, 14, 15, 86, 188, 210, 226, 236], "style": [9, 16, 20, 31, 50, 78, 154, 174, 180, 194, 213, 268], "guid": [9, 11, 15, 16, 17, 19, 31, 50, 112, 124, 194, 220, 253, 255, 262, 266, 267], "tip": [9, 14, 50, 124, 210, 211, 269], "xelatex": 9, "latexmk": 9, "chrome": 9, "chromium": 9, "xetex": 9, "font": [9, 78, 174, 194], "lmodern": 9, "cask": 9, "tap": 9, "dejavu": 9, "strawberryperl": 9, "miktex": [9, 11], "dejavufont": 9, "appdata": 9, "microsoft": 9, "click": 9, "dev": [9, 11, 12, 13, 230], "sympy_debug": [10, 77, 235], "unix": [10, 225, 226], "window": [10, 235, 256], "nice": [10, 12, 14, 19, 50, 62, 86, 90, 112, 124, 127, 180, 194, 204, 235, 264], "enabl": [11, 15, 19, 50, 77, 78, 90, 94, 112, 114, 160, 170, 174, 194, 210, 214, 225, 230, 233, 265, 268, 269], "certain": [11, 15, 19, 29, 31, 32, 41, 48, 50, 54, 58, 66, 75, 77, 90, 92, 124, 170, 171, 181, 184, 187, 189, 194, 195, 201, 204, 206, 207, 210, 213, 214, 216, 227, 228, 233, 239, 241, 247, 269], "mention": [11, 12, 14, 41, 75, 77, 99, 114, 128, 129, 175, 204, 207, 210, 214, 242, 243, 244, 245, 265], "incomplet": [11, 14, 15, 50, 55, 58, 182, 184, 190, 196, 212, 213], "webpag": [11, 15], "io": [11, 15, 78, 194, 233], "arithmet": [11, 18, 32, 50, 51, 54, 81, 86, 90, 149, 156, 179, 180, 181, 183, 184, 185, 187, 188, 192, 195], "hood": 11, "importerror": 11, "extern": [11, 19, 78, 92, 97, 114, 121, 174, 184, 185, 195, 202, 206, 214, 225, 226], "latest": [11, 13, 19, 31, 228, 230, 233], "git": [11, 16, 18], "repositori": [11, 13, 15, 19], "vast": [11, 77, 186], "wrap": [11, 12, 14, 25, 26, 27, 28, 32, 39, 50, 56, 78, 91, 174, 178, 180, 183, 184, 187, 194, 197, 213, 219, 226, 230, 233, 235, 264], "ci": [11, 15, 58, 75, 194, 268], "local": [11, 23, 25, 26, 27, 50, 52, 75, 92, 118, 120, 172, 181, 187, 212, 225], "gmpy2": [11, 184, 185], "gmp": 11, "speed": [11, 14, 27, 32, 41, 50, 51, 54, 81, 90, 91, 101, 106, 107, 108, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 127, 128, 131, 134, 169, 170, 173, 178, 179, 191, 194, 195, 201, 206, 210, 226, 229, 232, 264, 265], "experi": [11, 114, 213, 214], "interfac": [11, 15, 30, 50, 78, 106, 121, 129, 155, 174, 176, 178, 184, 187, 192, 213, 226, 227, 256], "notebook": [11, 19, 78, 174, 233, 267, 268], "init_sess": [11, 78, 268], "flag": [11, 12, 30, 32, 41, 42, 46, 48, 50, 63, 65, 77, 80, 81, 82, 86, 90, 112, 144, 180, 185, 187, 190, 191, 194, 195, 196, 202, 206, 207, 210, 212, 213, 220, 225, 226, 232, 235, 258, 269], "auto_symbol": [11, 78, 92], "auto_int_to_integ": [11, 78], "qt": 11, "mathjax": [11, 15, 78, 174, 268], "preview": [11, 31, 228, 257], "save": [11, 30, 50, 86, 90, 180, 193, 212, 229], "viewer": [11, 15, 31, 194, 228], "parser": [11, 83, 92, 121, 127, 225], "mathematca": 11, "maxima": [11, 92, 213], "parse_maxima": [11, 92], "antlr": [11, 92, 112], "runtim": [11, 32, 50, 108, 257], "autolev": [11, 114, 121], "antlr4": [11, 92], "compil": [11, 32, 78, 91, 103, 127, 174, 194, 206, 219, 225, 226, 227, 249, 263], "clang": [11, 92], "bind": [11, 32, 194, 226], "parse_c": 11, "lfortran": [11, 92], "dpll": 11, "sat": [11, 26], "solver": [11, 14, 26, 58, 86, 90, 111, 121, 127, 128, 183, 186, 206, 207, 211, 225, 249, 250, 260, 262], "pycosat": 11, "pysat": 11, "minisat": 11, "minisat22": 11, "heavi": [11, 214, 264], "rudimentari": [11, 187], "text": [11, 12, 14, 15, 19, 32, 41, 51, 55, 56, 58, 68, 75, 78, 81, 86, 90, 125, 165, 174, 180, 181, 194, 201, 207, 210, 213, 214, 225], "pyglet": [11, 194, 256], "pygletplot": [11, 180], "vehicl": 11, "principl": [11, 51, 81, 90, 131, 181, 182, 187, 203, 212], "third": [11, 12, 32, 41, 42, 50, 58, 60, 64, 99, 157, 163, 177, 182, 190, 204, 210, 213, 214, 230, 232, 246, 259, 264], "scipi": [11, 32, 50, 58, 103, 127, 154, 194, 214, 226, 233, 258, 267], "cupi": [11, 91], "cuda": [11, 91], "gpu": [11, 91, 127], "tensorflow": [11, 233], "learn": [11, 13, 15, 21, 86, 125, 178, 203, 213, 258, 261, 262, 263, 267], "numexpr": [11, 233], "subpackag": [11, 249], "f2py": [11, 32, 91, 226, 227], "ufuncifi": [11, 32, 226, 250], "cython": [11, 32, 91, 127, 226], "codegen": [11, 91, 194, 226, 231, 251, 257], "llvm": 11, "gcc": [11, 227], "ifort": 11, "therefor": [11, 12, 14, 33, 41, 46, 50, 54, 58, 66, 79, 90, 99, 175, 178, 179, 180, 184, 187, 190, 194, 210, 213, 214, 215, 220, 239, 240, 242, 243, 245, 247], "aeseara": 11, "graph": [11, 14, 42, 58, 79, 86, 91, 183, 194, 213, 232, 264, 268], "llvmlite": 11, "llvmjitcod": 11, "jit": [11, 203], "llvm_callabl": 11, "tensorflow_cod": 11, "wurlitz": 11, "captur": [11, 50, 232], "stat": [11, 249, 256], "pymc3": [11, 214], "use_symengin": 11, "mechan": [11, 20, 50, 73, 77, 93, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 118, 119, 120, 142, 146, 149, 155, 157, 158, 159, 162, 169, 170, 176, 179, 255, 256], "liealgebra": [11, 79], "matchpi": 11, "softwar": [11, 15, 77, 188, 263], "_sage_": 11, "import_modul": 11, "runner": [11, 225], "script": [11, 13, 14, 23, 58, 174, 226], "cloudpickl": 11, "pickl": 11, "util": [11, 12, 13, 14, 15, 30, 37, 39, 41, 42, 55, 56, 61, 62, 63, 66, 80, 81, 85, 90, 91, 130, 164, 167, 183, 186, 187, 191, 194, 206, 207, 208, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 251, 255], "test_pickl": 11, "pdf": [11, 15, 16, 22, 30, 31, 41, 51, 53, 55, 72, 77, 86, 90, 93, 94, 97, 180, 188, 193, 194, 197, 203, 206, 207, 210, 214, 232, 239], "view": [11, 14, 16, 32, 33, 50, 86, 93, 162, 165, 178, 180, 187, 194, 210, 213, 227, 229, 232], "host": [11, 15], "onlin": [11, 14, 107, 207, 232], "sympy_benchmark": 11, "readm": 11, "yourself": [11, 32, 114, 228, 259], "reproduc": [11, 190, 225, 269], "asv": 11, "airspe": 11, "veloc": [11, 103, 104, 106, 107, 109, 114, 115, 118, 119, 120, 124, 125, 127, 134, 162, 165, 169, 170, 173, 175, 178, 245, 247], "properli": [12, 31, 50, 56, 62, 75, 86, 108, 112, 122, 137, 141, 144, 158, 182, 184, 194, 210, 213, 223, 227, 233, 265, 270], "someon": [12, 210, 229, 262], "screen": [12, 78, 174, 178, 225, 268], "opportun": [12, 14, 206], "lightli": 12, "pain": 12, "frustrat": 12, "go": [12, 13, 14, 15, 19, 31, 32, 41, 51, 56, 75, 107, 112, 114, 125, 127, 128, 154, 165, 173, 180, 189, 190, 201, 204, 210, 261, 263, 264, 267, 269], "seek": [12, 212], "stabl": [12, 14, 50, 78, 86, 92, 99, 258], "supplant": 12, "newer": [12, 177, 212], "solveset": [12, 127, 192, 208, 209, 212, 270], "superior": [12, 194], "older": [12, 15, 73, 112, 184, 194, 212], "cogniz": 12, "attr": [12, 32], "unsur": [12, 14], "mark": [12, 14, 15, 97, 133, 145, 207, 223, 228, 230], "privat": [12, 14, 50, 51, 112, 180, 227], "experiment": [12, 206, 257], "unnecessari": [12, 14, 15, 28, 32, 190, 193, 214, 225, 262], "usabl": [12, 184, 185, 194, 213, 263], "breakag": 12, "serious": 12, "taken": [12, 32, 33, 38, 41, 48, 49, 50, 55, 56, 58, 67, 81, 90, 99, 101, 103, 104, 124, 127, 157, 163, 170, 173, 179, 180, 184, 189, 190, 197, 201, 203, 204, 213, 214, 219, 227, 232, 239], "commun": [12, 15, 19, 179, 210, 212, 214, 265], "count": [12, 15, 42, 49, 50, 51, 55, 60, 80, 86, 89, 90, 155, 190, 202, 203, 206, 213, 214, 220, 229, 232], "basi": [12, 50, 52, 79, 83, 86, 104, 118, 120, 145, 154, 155, 157, 160, 162, 165, 168, 169, 170, 175, 177, 179, 181, 183, 185, 186, 190, 193, 204, 206, 212, 213, 215, 220, 241, 242, 245, 267], "constitut": [12, 15, 77, 90, 194], "codifi": 12, "clean": [12, 225], "categor": [12, 86, 181], "guidelin": [12, 16, 20, 22, 210], "convent": [12, 14, 15, 17, 41, 42, 46, 49, 50, 51, 55, 56, 58, 60, 65, 75, 77, 80, 92, 93, 94, 99, 102, 114, 127, 129, 133, 154, 155, 157, 162, 163, 175, 180, 194, 210, 211, 213, 214, 220, 247, 261, 269], "prefix": [12, 32, 50, 86, 90, 164, 167, 168, 184, 187, 191, 207, 210, 226, 227, 232, 255], "univers": [12, 32, 179, 188, 202, 207, 212, 213], "adher": [12, 15, 75], "despit": [12, 50, 269], "harm": 12, "peopl": [12, 14, 22, 53, 58, 77, 86, 165, 214], "upgrad": [12, 23], "fire": 12, "uncondition": 12, "defeat": [12, 210], "heavili": [12, 201, 211], "easi": [12, 18, 38, 42, 50, 58, 75, 91, 109, 115, 121, 177, 181, 184, 189, 194, 201, 204, 207, 210, 213, 218, 219, 220, 258, 259, 261, 262, 263, 264, 265, 268], "account": [12, 56, 86, 197, 206, 210], "nonetheless": [12, 51, 162, 206, 210], "deprecat": 12, "come": [12, 19, 41, 46, 48, 49, 50, 56, 58, 75, 77, 86, 91, 103, 112, 114, 122, 163, 178, 181, 184, 187, 189, 190, 204, 207, 210, 213, 223, 225, 230, 233, 261, 263, 264, 267, 269], "especi": [12, 14, 49, 86, 103, 112, 127, 154, 169, 178, 206, 210, 212, 225, 258, 259], "migrat": 12, "lengthen": 12, "impos": [12, 94], "mainten": [12, 27], "burden": [12, 194], "schedul": 12, "Being": [12, 46, 60, 66, 184], "assur": [12, 90, 190], "secondli": [12, 204], "rigor": [12, 58, 178, 227], "surfac": [12, 56, 58, 64, 75, 94, 129, 133, 160, 180, 206, 239, 246], "enough": [12, 14, 41, 50, 54, 77, 86, 89, 90, 99, 112, 127, 185, 187, 194, 210, 259, 261], "backport": 12, "extrem": [12, 41, 54, 60, 66, 77, 83, 124, 178, 206, 214], "model": [12, 54, 80, 90, 99, 108, 114, 115, 116, 117, 132, 190, 203, 214], "temptat": [12, 203, 269], "fudg": 12, "earli": [12, 50, 90, 149, 207], "acceler": [12, 109, 114, 118, 120, 124, 125, 127, 163, 170, 173, 175, 198, 229, 247], "myst": [12, 15], "checkbox": 12, "tag": [12, 194, 212], "nest": [12, 50, 52, 56, 58, 77, 81, 99, 182, 184, 187, 194, 204, 206, 209, 213, 214, 215, 216, 218, 221, 232, 233, 264], "per": [12, 51, 86, 91, 134, 170, 175, 180, 185, 190, 191, 239, 242, 244, 247], "sympy_deprecation_warn": [12, 223, 228, 230], "multilin": [12, 194], "deprecated_since_vers": [12, 223, 228, 230], "active_deprecations_target": [12, 223, 228, 230], "target": [12, 14, 30, 31, 32, 50, 90, 105, 140, 144, 145, 203, 206, 209, 212, 213, 223, 226, 227, 230, 269], "stacklevel": [12, 223, 228, 230], "visual": [12, 50, 90, 94, 99, 121, 193, 206], "src": [12, 14, 15, 92, 210, 225, 230], "cross": [12, 15, 16, 50, 60, 66, 81, 86, 93, 94, 106, 119, 125, 127, 140, 170, 176, 177, 178, 207, 239, 242, 244, 245], "xyz": [12, 62, 92, 93, 170, 178, 239, 240, 243], "header": [12, 32, 226, 227], "warns_deprecated_sympi": [12, 223, 228, 230], "merg": [12, 32, 41, 42, 50, 168, 194, 202, 214, 225, 232, 233], "decor": [12, 41, 50, 58, 223, 225, 230, 231, 234, 235, 257], "emit": [12, 194, 223, 230], "assert": [12, 31, 39, 40, 41, 42, 50, 60, 62, 92, 124, 202, 210, 211, 223, 230, 232], "behavior1": 12, "behavior2": 12, "ignore_warn": [12, 223, 228, 230, 233], "trigger": [12, 42, 92, 160, 223], "somewher": [12, 14, 15, 32], "paragraph": [12, 14, 15, 31], "metadata": [12, 31, 228, 230], "rst": [12, 14, 15, 33, 210, 225], "markdown": [12, 16, 20], "markup": [12, 194], "clearli": [12, 14, 90, 178, 184, 204, 265], "delin": 12, "newlin": [12, 86, 235], "charact": [12, 14, 15, 50, 51, 75, 78, 92, 140, 170, 174, 194, 210, 225, 227, 230, 235, 261, 263, 268], "larger": [12, 15, 32, 41, 42, 49, 50, 51, 58, 75, 83, 86, 90, 115, 119, 185, 191, 195, 201, 206, 212, 227, 229, 261, 269], "simplify_thi": [12, 14, 228], "ref": [12, 41, 56, 86, 97, 127, 199, 214, 228, 265], "is_this_zero": [12, 230], "summar": [12, 225, 269], "fit": [12, 31, 75, 86, 89, 90, 178, 194, 210, 235, 264], "word": [12, 15, 28, 37, 46, 49, 50, 51, 56, 58, 80, 99, 112, 125, 181, 184, 189, 206, 207, 210, 212, 227, 239, 243, 261], "uniqu": [12, 30, 31, 33, 41, 44, 46, 50, 51, 52, 55, 58, 65, 68, 73, 77, 79, 80, 86, 90, 106, 149, 158, 170, 178, 181, 182, 184, 187, 189, 195, 199, 206, 207, 210, 212, 213, 214, 218, 227, 232, 235, 242, 247, 261, 264], "across": [12, 15, 41, 48, 50, 61, 77, 94, 159, 160, 167, 180, 194, 229, 231, 232, 233, 267], "__init__": [12, 14, 50, 107, 189, 239, 240, 264], "func_nam": [12, 32, 56, 81, 235], "simplfiy_thi": 12, "trivial": [12, 33, 41, 46, 49, 50, 51, 56, 65, 80, 83, 86, 90, 122, 160, 181, 182, 187, 190, 204, 207, 210, 213, 218], "dozen": [12, 269], "search": [12, 14, 30, 41, 42, 46, 48, 50, 56, 86, 90, 112, 181, 189, 190, 203, 204, 206, 208, 211, 214, 226], "upcom": 12, "bot": 12, "push": [13, 75], "handbook": [13, 14, 33, 40, 41, 48, 58, 90], "internet": 13, "nn": 13, "brows": 13, "clone": [13, 19, 187], "download": [13, 15, 19, 31, 72, 188, 203, 210, 214, 239, 263], "77": [13, 39, 58, 86, 90, 193, 194, 227], "mib": 13, "remot": [13, 50], "collabor": 13, "upstream": 13, "fetch": 13, "checkout": [13, 31], "isol": [13, 30, 56, 185, 189, 190, 191, 212, 227], "flake8": 13, "usernam": 13, "consult": [13, 33], "test_bas": [13, 225], "similari": 13, "qualiti": [13, 91, 194], "code_qu": 13, "fdiff": [14, 32, 50, 56, 57, 58], "argindex": [14, 32, 50, 56, 57, 58], "heavisid": [14, 57, 75, 77, 194], "diracdelta": [14, 57, 77, 155, 160, 194], "scope": [14, 32, 121, 124, 223, 269], "od": [14, 73, 107, 111, 121, 127, 208, 211, 270], "aim": [14, 15, 18, 68, 75, 165, 181, 204, 210, 213, 262, 263], "comment": [14, 15, 32, 41, 112, 114, 191, 194, 227, 232], "distract": 14, "consum": [14, 32, 58, 108, 124], "human": [14, 75, 162, 190, 194], "beings": 14, "english": [14, 51], "reader": [14, 15, 31, 33, 125, 181, 229, 262, 267], "machineri": [14, 50, 189, 233], "platform": [14, 50, 160, 178, 210, 226], "restructuredtext": [14, 15], "concis": [14, 127], "quick": [14, 15, 50, 86, 90, 206, 212, 233], "tripl": [14, 67, 86, 178, 179, 181, 189, 235], "raw": [14, 15, 32, 50, 51, 56, 91, 92, 154, 159, 184, 185, 190, 202, 206, 268], "backslash": [14, 50, 194], "blank": [14, 92, 108, 180], "close": [14, 32, 49, 50, 54, 55, 58, 66, 68, 75, 77, 79, 99, 180, 181, 182, 188, 189, 202, 212, 213, 227, 259, 269], "rare": [14, 50, 210, 214, 223, 261], "underlin": [14, 15], "numpydoc": [14, 15], "review": [14, 15, 126], "plural": [14, 15], "clutter": 14, "amount": [14, 31, 50, 51, 62, 121, 170, 175, 178, 187, 197, 225, 239, 240], "notifi": 14, "awai": [14, 31, 33, 51, 93, 94, 114, 189, 194], "label": [14, 31, 32, 44, 50, 60, 73, 77, 133, 140, 144, 149, 158, 160, 180, 194, 195, 197, 206, 219, 220, 268], "elabor": [14, 20, 22, 175, 245], "suffic": [14, 182], "clarifi": 14, "thought": [14, 50, 201, 210, 261, 264], "perfect": [14, 41, 50, 90, 207, 213, 263, 264], "test_": [14, 225], "coverage_doctest": 14, "coverag": 14, "6868680200532414": 14, "dsolv": [14, 211, 212, 259, 263, 270], "hint": [14, 31, 34, 41, 50, 53, 56, 77, 81, 86, 90, 99, 127, 137, 141, 157, 159, 160, 170, 190, 201, 204, 208, 212, 269], "1st_exact": 14, "readabl": [14, 23, 31, 78, 103, 190, 193, 194, 201, 203, 236], "accept": [14, 31, 32, 41, 50, 56, 64, 77, 80, 81, 83, 86, 89, 92, 112, 154, 170, 174, 180, 189, 190, 193, 194, 195, 202, 204, 206, 212, 226, 233, 239, 240, 243, 265], "30": [14, 24, 30, 32, 36, 50, 51, 53, 54, 55, 58, 64, 66, 77, 81, 86, 87, 90, 93, 94, 112, 133, 183, 185, 189, 190, 194, 200, 203, 206, 214, 215, 269], "13": [14, 24, 32, 39, 41, 46, 50, 51, 53, 55, 58, 62, 63, 64, 65, 75, 80, 86, 90, 94, 97, 99, 112, 125, 180, 187, 189, 190, 191, 193, 194, 200, 207, 209, 211, 212, 214, 215, 225, 226, 248], "14": [14, 32, 39, 41, 45, 46, 48, 50, 51, 55, 56, 58, 75, 86, 87, 90, 91, 93, 97, 112, 179, 180, 183, 185, 187, 188, 189, 190, 191, 193, 194, 203, 206, 207, 210, 212, 214, 215, 259], "16": [14, 24, 30, 32, 41, 42, 45, 49, 50, 51, 55, 58, 59, 60, 64, 75, 77, 80, 86, 87, 89, 90, 94, 175, 182, 183, 184, 187, 188, 189, 190, 193, 194, 200, 202, 203, 204, 207, 214, 215, 232, 239, 247, 265], "18": [14, 41, 42, 53, 55, 58, 60, 63, 66, 82, 86, 90, 94, 97, 99, 101, 171, 179, 187, 188, 193, 194, 202, 203, 207, 210, 212, 213, 214, 215, 241], "19": [14, 41, 50, 53, 58, 60, 63, 66, 86, 90, 92, 93, 185, 189, 190, 193, 203, 207, 209, 212, 226, 258], "23": [14, 30, 41, 42, 50, 53, 56, 58, 64, 66, 86, 90, 93, 125, 185, 190, 193, 200, 207, 232], "24": [14, 24, 30, 38, 42, 43, 50, 53, 55, 58, 64, 72, 77, 86, 90, 93, 94, 97, 99, 157, 167, 179, 185, 187, 189, 190, 191, 193, 196, 201, 207, 210, 214, 229, 232, 248, 259, 265], "26": [14, 39, 50, 51, 53, 62, 86, 90, 93, 94, 190, 207, 214], "27": [14, 32, 33, 41, 45, 55, 60, 86, 90, 93, 94, 99, 101, 187, 212], "28": [14, 32, 41, 49, 53, 54, 58, 86, 90, 114, 203, 207, 210, 264], "29": [14, 24, 39, 41, 42, 50, 51, 53, 55, 56, 63, 64, 86, 90, 99, 149, 184, 202, 214], "enclos": [14, 60, 61, 66, 89, 100, 194, 204, 233], "colon": [14, 50], "absent": [14, 34], "signatur": [14, 26, 27, 42, 50, 86, 227, 228, 232, 233], "brace": [14, 55, 112, 194], "opt_cs": 14, "optim": [14, 32, 34, 41, 54, 90, 103, 127, 140, 144, 190, 194, 195, 203, 206, 214, 226], "fragment": [14, 51], "embed": [14, 15, 18, 30, 42, 50, 78, 189], "hyperlink": 14, "classnam": 14, "erf": [14, 58, 75, 77, 194, 204, 214], "gauss": [14, 58, 77, 86, 129, 182, 189, 192, 212, 213], "erfc": [14, 58, 75, 194, 214], "complementari": [14, 58, 99], "erfi": [14, 58, 75, 194], "erf2": [14, 58, 194], "erfinv": [14, 58, 194, 214], "invers": [14, 24, 41, 42, 50, 51, 52, 57, 58, 76, 77, 83, 86, 90, 107, 149, 153, 154, 157, 162, 165, 181, 182, 183, 185, 187, 190, 191, 194, 196, 204, 206, 210, 212, 213, 214, 232, 265, 269], "erfcinv": [14, 58, 194], "erf2inv": [14, 58, 194], "besselj": [14, 58, 72, 194, 206, 210, 263], "besselbas": [14, 58], "bessel": [14, 15, 56, 57, 68, 77, 190, 206, 210, 214, 263], "bess": [14, 58, 194, 206, 210, 214], "besselk": [14, 58, 194, 214], "cite": [14, 20], "citat": [14, 49, 188], "augment": [14, 32, 86, 107, 122, 123, 127, 192, 212, 213, 230, 233, 270], "freeli": [14, 23, 84, 181], "wolfram": [14, 28, 43, 44, 50, 51, 53, 55, 56, 58, 60, 66, 77, 86, 90, 92, 188, 194, 196, 197, 199, 202, 207, 214, 232, 265], "mathworld": [14, 28, 43, 44, 50, 51, 53, 55, 56, 58, 60, 66, 77, 86, 90, 188, 197, 202, 207, 214, 232], "nist": [14, 55, 56, 58, 165], "dlmf": [14, 55, 56, 58], "suffer": 14, "rot": [14, 66, 157], "publish": [14, 75, 204], "clickabl": 14, "kozen89": [14, 187, 188], "kozen": [14, 188], "landau": [14, 188, 259], "decomposit": [14, 41, 48, 82, 83, 86, 183, 185, 186, 187, 188, 196, 269], "1989": [14, 188, 212], "pp": [14, 41, 42, 48, 49, 50, 51, 55, 56, 77, 81, 86, 115, 124, 179, 182, 187, 188, 210, 211, 214], "445": [14, 188], "456": [14, 50, 188], "abramowitz": [14, 58], "milton": [14, 58], "stegun": [14, 58], "iren": [14, 58], "chapter": [14, 41, 58, 90, 112, 188], "ed": [14, 42, 58, 86, 188, 212, 214], "1965": [14, 58, 81], "luke": [14, 58, 75, 204], "Their": [14, 50, 58, 75, 180, 184, 187, 204], "1969": [14, 51, 58, 75, 188, 204], "bessel_funct": [14, 58], "typefunct": [14, 58], "mathrm": [14, 19, 40, 49, 50, 51, 58, 75, 77, 86, 185, 187, 194, 202, 204, 210, 213, 214, 257, 259, 263], "plane": [14, 24, 50, 58, 60, 62, 63, 65, 66, 76, 77, 97, 114, 132, 133, 177, 178, 202, 213, 248, 269], "pole": [14, 58, 75, 98, 99, 133, 201, 204, 210], "obei": [14, 58, 179, 194, 204], "mirror": [14, 58, 77, 133], "conjug": [14, 28, 39, 40, 41, 50, 57, 58, 81, 86, 101, 129, 143, 146, 160, 190, 194, 210, 220], "polygamma": [14, 55, 58, 194], "eulergamma": [14, 54, 55, 58], "40": [14, 32, 53, 55, 58, 60, 67, 81, 86, 90, 93, 180, 191, 193, 194, 214, 235, 258], "288037795340032417959588909060233922890": [14, 58], "49801566811835604271": [14, 58], "15494982830181068512": [14, 58], "lowergamma": [14, 58, 214], "uppergamma": [14, 55, 58, 194, 214], "upper": [14, 27, 49, 51, 54, 58, 59, 66, 67, 81, 82, 83, 86, 89, 90, 97, 106, 153, 160, 179, 183, 185, 187, 189, 190, 194, 204, 212, 219, 239], "loggamma": [14, 15, 58, 194], "digamma": [14, 55, 58, 194], "trigamma": [14, 58, 194], "euler": [14, 30, 31, 49, 50, 51, 54, 57, 58, 66, 72, 78, 90, 157, 170, 174, 178, 179, 194, 210, 214, 239, 240], "gamma_funct": [14, 58], "gov": [14, 55, 56, 58], "gammafunct": [14, 58], "gammabetaerf": [14, 55, 58], "inlin": [14, 78, 174, 194, 227], "pretti": [14, 31, 32, 58, 77, 78, 86, 90, 94, 99, 114, 174, 204, 206, 213, 247, 257, 260, 263, 265, 269], "literatur": [14, 75, 164, 186], "illumin": 14, "tone": [14, 16], "narr": [14, 16, 20, 262], "excerpt": 14, "geometri": [14, 59, 60, 61, 63, 64, 65, 66, 67, 77, 121, 133, 186, 241, 248, 249, 256, 263], "autofunct": 14, "convex_hul": [14, 62, 66, 67], "are_similar": [14, 61, 62, 67], "autoclass": 14, "linearent": [14, 60, 63, 64, 65, 66], "rai": [14, 60, 62, 63, 64, 66, 67, 129, 133], "curv": [14, 31, 52, 62, 77, 90, 93, 129, 180, 181, 210, 239, 248, 259], "ellips": [14, 61, 62, 66, 132, 180, 194, 268], "circl": [14, 50, 60, 61, 62, 64, 65, 66, 67, 75, 133, 140, 180, 213, 239, 241, 248], "polygon": [14, 60, 61, 62, 67, 76, 180, 248], "regularpolygon": [14, 61, 62, 66, 180], "triangl": [14, 31, 55, 61, 62, 66, 67, 77, 81, 90, 179, 180, 241, 248], "cumbersom": 14, "viewcod": 14, "qualifi": [14, 236], "trigonometr": [14, 50, 57, 77, 191, 197, 205, 209, 210, 213, 233, 250, 260, 270], "trail": [14, 42, 90, 185, 187, 190, 230, 235], "www": [14, 15, 24, 30, 41, 42, 51, 53, 55, 58, 72, 77, 78, 90, 97, 174, 188, 193, 194, 203, 206, 207, 210, 214, 232, 265, 268], "master": [14, 15, 19, 77, 225], "dynamicsymbol": [14, 103, 104, 105, 106, 107, 109, 111, 112, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127, 128, 170, 173, 174, 175, 176, 177, 178], "sine": [14, 50, 56, 58, 75, 77, 134, 191, 197, 203, 258], "troubleshoot": [14, 124], "referencefram": [14, 104, 105, 107, 109, 112, 114, 115, 118, 119, 120, 122, 123, 124, 125, 127, 128, 171, 172, 173, 174, 175, 176, 177], "frame": [14, 103, 104, 105, 106, 107, 109, 111, 112, 114, 115, 116, 118, 120, 122, 123, 124, 125, 127, 128, 169, 170, 171, 172, 173, 175, 176, 177, 229, 239, 245], "notimplementederror": [14, 30, 49, 60, 63, 67, 77, 86, 97, 183, 189, 193, 202, 209, 210, 211, 212, 213], "outsid": [14, 28, 41, 50, 58, 61, 66, 81, 90, 103, 165, 178, 190, 206, 259, 264], "plot": [14, 19, 59, 60, 62, 63, 66, 73, 78, 86, 93, 94, 98, 127, 144, 147, 153, 197, 249, 255, 256, 263, 268], "ahead": [14, 90], "submit": 14, "matrixcommon": [14, 83, 85, 86], "dyadic": [14, 53, 104, 109, 112, 114, 118, 120, 121, 127, 172, 174, 176, 241, 246], "shorten": 14, "highli": [15, 50, 54, 96, 184, 190, 199, 227], "teach": [15, 42, 51, 214], "conduct": 15, "survei": 15, "commonli": [15, 42, 55, 58, 77, 86, 103, 177, 182, 210, 245], "offer": [15, 31, 32, 41, 50, 91, 103, 127, 169, 178, 184, 189, 229, 246], "bring": [15, 75, 107, 119, 183, 197, 206, 265], "greater": [15, 28, 42, 50, 56, 58, 75, 79, 90, 99, 187, 190, 193, 201, 206, 210, 212, 214, 229, 232, 245, 259], "clariti": [15, 41, 173], "mission": [15, 31, 84], "ca": [15, 18, 19, 51, 58, 77, 193, 194, 232], "dedic": [15, 32, 186, 227, 243, 245], "essenti": [15, 34, 45, 50, 54, 56, 57, 58, 75, 109, 114, 175, 176, 178, 181, 182, 185, 189, 201, 204, 242, 245, 246, 247], "deviat": [15, 133, 214], "docutil": 15, "sourceforg": [15, 31], "net": [15, 31, 66, 188, 210, 214, 232], "ext": [15, 181, 185], "autodoc": 15, "graphic": [15, 97], "linkcod": 15, "readthedoc": [15, 78, 233], "sphinx_math_dollar": 15, "delimit": [15, 50, 194], "dollar": [15, 263], "sphinxext": 15, "plot_direct": 15, "figur": [15, 50, 51, 60, 61, 63, 65, 66, 77, 94, 112, 155, 177, 178, 179, 180, 191, 194, 248, 269], "devel": [15, 179], "supersed": [15, 112, 127], "pep": [15, 32, 50, 80], "257": [15, 90, 212], "four": [15, 32, 42, 50, 54, 58, 80, 83, 90, 100, 125, 133, 170, 180, 181, 187, 190, 194, 202, 207, 210, 212, 214, 215, 239, 240, 243], "websit": [15, 267], "advertis": 15, "site": [15, 90, 228], "upload": [15, 90], "spars": [15, 83, 85, 86, 154, 183, 186, 189, 190, 191, 214, 215, 253, 264], "substanti": [15, 91], "edit": [15, 77, 86, 90, 187, 188, 190], "resid": 15, "standalon": [15, 127], "restructur": 15, "surround": [15, 50, 67, 133, 202, 235], "strip": [15, 51, 77, 90, 187, 230, 235], "unimport": 15, "bullet": 15, "whitespac": [15, 50, 230], "meta": [15, 50, 210, 211], "stackexchang": [15, 60], "5020": 15, "wikibook": [15, 77, 78], "overleaf": 15, "mathematical_express": 15, "verbatim": 15, "_rewrit": 15, "_expand": 15, "sentenc": [15, 80], "thumb": [15, 80, 232], "greek": [15, 23, 50, 90, 92, 181, 194], "\u03b1": [15, 179, 193], "italic": 15, "emphasi": [15, 184], "asterisk": 15, "stirl": [15, 42, 57, 232], "permut": [15, 33, 35, 37, 38, 40, 43, 46, 47, 48, 51, 55, 58, 81, 83, 86, 108, 160, 179, 183, 185, 190, 207, 215, 216, 220, 232, 269], "partit": [15, 37, 41, 57, 90, 115, 124, 126, 214, 229, 231], "consecut": [15, 32, 41, 46, 49, 51, 55, 66, 206, 212], "group": [15, 31, 36, 37, 42, 43, 46, 47, 48, 50, 53, 55, 79, 80, 90, 139, 148, 149, 160, 179, 180, 181, 189, 190, 206, 210, 212, 213, 220, 232], "pairwis": [15, 28, 31, 50, 55, 67, 86, 90, 207, 212], "ital": [15, 194], "talk": [15, 51, 181, 189, 242], "referenc": [15, 16, 34, 39, 90, 111, 114, 157, 189], "american": [15, 36, 51], "color": [15, 78, 97, 174, 194, 225, 232, 256, 268], "colour": 15, "quotat": 15, "line_color": [15, 180, 197], "aesthet": [15, 180], "ariti": [15, 180], "unrestrict": [15, 39, 232], "necklac": [15, 232], "bracelet": [15, 232], "revers": [15, 34, 39, 42, 49, 50, 51, 56, 77, 78, 80, 86, 90, 99, 159, 170, 174, 181, 183, 187, 190, 191, 194, 195, 202, 206, 210, 232, 269], "person": 15, "chebyshev": [15, 30, 50, 77, 187, 190], "pafnuti": 15, "lvovich": 15, "tchebychev": 15, "transliter": 15, "russian": 15, "chebyshevt": [15, 58, 194], "orthogonalpolynomi": 15, "t_n": [15, 55, 58, 77, 187, 243], "tens": 15, "inclus": [15, 49, 153, 181, 200, 201, 202, 213], "pronoun": 15, "gender": 15, "neutral": 15, "he": [15, 55, 75, 187], "she": [15, 213], "extran": [15, 210], "belittl": 15, "obvious": [15, 33, 41, 163, 177, 184, 204], "straightforward": [15, 41, 51, 86, 204], "unwelcom": 15, "judgement": 15, "phrase": [15, 51], "friendli": [15, 32, 75, 227], "toc": 16, "setup": [16, 20, 22, 32, 50, 115, 116, 129, 170, 187, 190, 192, 193, 204, 225, 226, 228, 238, 268], "rebuild": [16, 50, 190, 264], "live": [16, 23, 33, 127, 189, 207], "server": 16, "debug": [16, 20, 22, 32, 50, 77, 114, 149, 225, 226, 235], "incompat": 16, "speech": 18, "beer": 18, "lightweight": [18, 32, 189, 263], "anaconda": 18, "pypi": 19, "continuum": [19, 255], "analyt": [19, 55, 58, 75, 86, 121, 210, 255, 259], "qtconsol": [19, 268], "nicer": [19, 50, 119], "setupegg": 19, "enthought": 19, "canopi": 19, "activepython": 19, "spack": 19, "freshli": 19, "starter": 19, "sy": [19, 32, 52, 112, 127, 194, 225, 236, 244, 261], "wherev": [19, 112, 206, 213, 242], "visit": [19, 34, 41, 50, 55, 266], "chat": 19, "gitter": [19, 265], "excel": [19, 54, 189, 267], "ticket": 19, "area": [20, 50, 60, 62, 66, 67, 93, 94, 246], "deeper": [20, 218, 264], "explor": [20, 122, 123, 180, 189, 229, 269], "implic": [20, 50, 80, 187], "is_": [20, 50], "handler": [20, 25, 26, 27, 28, 29, 86], "vs": [20, 186, 194, 225], "linear": [21, 31, 32, 42, 49, 50, 51, 53, 54, 58, 63, 70, 73, 75, 77, 79, 81, 83, 85, 93, 96, 99, 106, 107, 109, 114, 115, 116, 121, 122, 126, 127, 132, 154, 157, 158, 173, 180, 181, 185, 186, 187, 189, 190, 192, 200, 202, 204, 211, 212, 213, 232, 253, 270], "nonlinear": [21, 49, 127, 190, 212, 213], "diophantin": [21, 90, 187, 208], "739085133215161": [21, 212], "9y": 21, "3x": [21, 50, 92, 187, 213, 261], "cc": [21, 51, 66, 179, 182, 184, 186, 190, 265], "4xy": [21, 175, 247], "8y": 21, "7y": [21, 207], "colloqui": 21, "terminolog": [21, 220], "central": [22, 41, 47, 58, 60, 66, 104, 109, 125, 180, 189, 207, 214], "task": [22, 56, 121, 127, 184, 189, 259, 266], "export": [23, 194], "latin": 23, "slightli": [23, 32, 46, 90, 92, 114, 180, 181, 185, 187, 190, 194, 204, 206], "clunki": 23, "collid": [23, 220], "win": 23, "session": [23, 32, 50, 62, 77, 174, 178, 184, 230, 257, 261, 268], "throwawai": 23, "surviv": 23, "demand": 23, "foo": [23, 30, 32, 50, 155, 174, 232, 235], "report": [23, 30, 41, 63, 81, 90, 191, 202, 213, 225, 265, 270], "stick": 23, "tend": [23, 32, 50, 187, 189, 199, 201, 204, 262, 269], "clash": [23, 50, 86], "_clash1": [23, 50], "_clash2": [23, 50], "multi": [23, 50, 51, 113, 121, 127, 140, 144, 154, 180, 194, 213], "_clash": [23, 50], "union": [23, 28, 30, 32, 39, 41, 48, 80, 92, 181, 189, 194, 200, 201, 209, 213, 214, 232], "sympif": [23, 50], "real_field": 24, "instanti": [24, 31, 32, 42, 50, 58, 63, 65, 66, 83, 86, 150, 158, 170, 180, 181, 185, 189, 214, 239, 242], "q1": [24, 86, 103, 112, 114, 115, 116, 118, 119, 120, 122, 123, 124, 128, 169, 170, 172, 173, 174, 177, 178, 184, 239, 240], "q2": [24, 103, 112, 114, 115, 116, 118, 119, 120, 122, 123, 128, 169, 170, 172, 173, 174, 177, 178, 184, 239, 240], "r1": [24, 60, 63, 79, 93, 94, 133, 170, 175, 190, 239], "euclideanspac": 24, "realnormedalgebra": 24, "r2": [24, 52, 63, 79, 81, 93, 94, 133, 170, 190, 194, 206, 239], "q3": [24, 103, 114, 116, 118, 119, 120, 122, 170, 172, 173, 178, 239, 240], "angl": [24, 56, 58, 59, 60, 61, 63, 64, 65, 66, 101, 106, 111, 112, 114, 115, 116, 124, 129, 132, 133, 134, 157, 165, 170, 177, 178, 179, 194, 203, 213, 239, 240, 243, 269], "axi": [24, 43, 55, 56, 60, 61, 63, 64, 66, 72, 75, 77, 83, 86, 93, 97, 102, 106, 112, 114, 115, 118, 119, 120, 124, 127, 128, 129, 132, 133, 157, 170, 172, 173, 175, 177, 178, 180, 185, 213, 239, 240, 243, 245, 248], "bi": [24, 50, 56, 58, 77, 178, 201, 210], "cj": 24, "dk": [24, 93, 189], "atan2": [24, 29, 52, 57, 134, 194, 239], "atan": [24, 29, 52, 54, 57, 61, 66, 74, 77, 115, 128, 129, 191, 194, 196], "arc_coplanar": 24, "arc": [24, 56, 269], "apart": [24, 41, 46, 50, 54, 56, 77, 175, 182, 185, 187, 190, 193, 196, 207, 213, 220, 243, 245, 264], "orient": [24, 62, 66, 81, 112, 114, 115, 118, 125, 127, 170, 173, 175, 177, 178, 187, 232, 239, 246, 247], "coplanar": [24, 64, 178], "ax": [24, 51, 54, 60, 63, 75, 82, 86, 93, 97, 106, 132, 157, 170, 178, 179, 180, 183, 191, 207, 210, 213, 215, 216, 219, 239, 240, 242, 245, 247, 269], "parallel": [24, 60, 63, 64, 66, 77, 96, 99, 102, 177, 178, 187, 244, 248], "vector_coplanar": 24, "is_pur": 24, "mathbf": [24, 83, 121, 122, 123, 125, 165, 169, 170, 174, 175, 177, 178, 194, 204, 215, 242, 243, 245, 247, 248], "versor": 24, "0i": 24, "0j": [24, 184], "0k": 24, "vector_part": 24, "from_axis_angl": 24, "rotat": [24, 38, 41, 43, 50, 59, 60, 61, 63, 65, 66, 81, 86, 93, 94, 106, 114, 116, 118, 120, 125, 128, 144, 157, 170, 173, 175, 177, 178, 179, 180, 232, 239, 240, 243, 245, 247], "tupl": [24, 26, 27, 30, 31, 32, 33, 41, 42, 49, 51, 52, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 72, 75, 77, 81, 86, 89, 90, 92, 93, 94, 97, 104, 107, 109, 111, 122, 123, 125, 127, 129, 144, 145, 146, 149, 154, 157, 158, 159, 160, 170, 173, 178, 180, 181, 183, 184, 185, 186, 187, 191, 192, 194, 195, 196, 200, 202, 206, 207, 210, 211, 212, 213, 214, 215, 219, 220, 225, 226, 227, 228, 232, 233, 235, 239, 242, 259, 264, 265, 268], "radian": [24, 56, 59, 60, 61, 63, 64, 65, 86, 97, 112, 133, 134, 170], "from_rotation_matrix": 24, "orthogon": [24, 27, 57, 65, 79, 86, 158, 170, 178, 186, 239, 240, 246], "det": [24, 86, 87, 127, 178, 183, 265], "index_vector": 24, "mod": [24, 51, 56, 80, 86, 87, 90, 156, 181, 183, 184, 185, 187, 189, 190, 194, 196, 204, 207, 250], "magnitud": [24, 32, 49, 50, 54, 58, 91, 93, 94, 97, 115, 127, 158, 167, 170, 175, 178, 180, 239, 245, 247], "norm": [24, 86, 158, 170, 185, 187, 189, 190], "indefinit": [24, 56, 74, 75, 77, 86, 185, 187, 188, 190, 199, 259], "scalar_part": 24, "is_zero_quaternion": 24, "mensor": 24, "60": [24, 36, 41, 43, 49, 50, 55, 58, 77, 86, 90, 93, 94, 193, 194, 207, 210, 232], "anti": [24, 28, 46, 56, 77, 81, 132, 137, 220], "pth": 24, "th": [24, 33, 41, 42, 48, 51, 52, 54, 55, 56, 58, 79, 80, 86, 90, 107, 185, 187, 189, 190, 196, 199, 204, 207, 210, 212, 214, 215, 220], "668": 24, "224": [24, 163, 188], "336": 24, "448": 24, "pow_cos_sin": 24, "900": 24, "1800": [24, 51], "2700": [24, 93], "3600": [24, 55], "rotate_point": 24, "pin": [24, 93, 94, 106], "to_axis_angl": 24, "to_rotation_matrix": 24, "assumptionkei": 25, "proposit": [25, 27, 80], "is_tru": [25, 27, 28], "assumptionscontext": [25, 26, 27], "global_assumpt": [25, 26, 27], "discern": [25, 27], "refin": [25, 27, 50, 81, 181, 185, 189, 190, 206, 227], "progress": [25, 27, 90, 227], "inherit": [25, 50, 57, 80, 83, 84, 106, 149, 158, 179, 194, 214, 219, 227, 228], "askhandl": 25, "mere": [26, 27, 32, 54, 155], "thin": [26, 86, 117, 129], "undefin": [26, 27, 30, 50, 56, 57, 58, 77, 83, 92, 104, 178, 189, 200, 201, 204, 233, 259, 270], "dispatch": [26, 27, 28, 50, 51, 155, 194, 213, 229], "undefinedpred": [26, 27], "sexi": [26, 27], "sexyprimepred": [26, 27], "sexyprim": [26, 27], "int1": [26, 27], "int2": [26, 27], "sort": [26, 27, 31, 32, 39, 42, 46, 75, 77, 80, 86, 89, 90, 100, 103, 107, 144, 160, 165, 169, 180, 187, 190, 191, 201, 206, 207, 210, 211, 212, 218, 220, 225, 227, 232, 242, 250, 261, 263, 264], "assump": [26, 27], "r3": [26, 79, 93, 94, 206], "predicate_": [26, 27], "mathematical_log": [26, 27], "r4": [26, 79, 93], "sexy_prim": [26, 27], "resolut": [26, 27, 207], "askpredicatehandl": [26, 27], "r5": [27, 206], "r6": 27, "tautolog": 27, "calculu": [27, 50, 55, 77, 86, 127, 175, 176, 203, 214, 244, 245, 246, 249, 250, 260, 262, 267], "symmetr": [27, 29, 33, 38, 41, 42, 46, 66, 81, 82, 83, 86, 90, 169, 179, 185, 187, 190, 193, 202, 204, 220, 232], "unitari": [27, 77, 90, 144, 149], "triangular": [27, 81, 82, 86, 183, 189, 212, 214, 248], "diagon": [27, 55, 81, 82, 83, 86, 89, 111, 132, 183, 216, 217], "rank": [27, 32, 33, 34, 39, 41, 42, 44, 45, 46, 65, 79, 86, 87, 170, 172, 181, 183, 185, 187, 189, 215, 219, 220, 265], "singular": [27, 32, 42, 50, 54, 56, 57, 72, 73, 75, 77, 86, 93, 95, 124, 170, 181, 188, 201, 210, 213, 239, 250, 259], "notabl": [27, 32, 53, 58, 75, 91, 184], "truth_maintenance_system": 27, "istruepred": 28, "iff": [28, 42, 51, 80, 86, 178, 181, 189, 204, 207, 225], "gt": [28, 32, 214, 232], "istruehandl": 28, "commutativepred": 28, "commutativehandl": 28, "finitepred": 28, "nor": [28, 30, 50, 80, 90, 134, 180, 190, 201, 203, 210, 220, 239], "nan": [28, 29, 56, 58, 105, 206, 214, 259], "bound": [28, 32, 33, 49, 50, 59, 60, 61, 63, 65, 66, 77, 90, 158, 185, 187, 189, 190, 194, 200, 210, 212, 213, 214, 219, 229, 235, 239], "finitehandl": 28, "r7": 28, "infinitepred": 28, "infinitehandl": 28, "symmetricpred": 28, "transpos": [28, 31, 81, 83, 86, 99, 127, 143, 170, 178, 183, 189, 207, 215, 220, 221, 265], "symmetrichandl": 28, "r8": 28, "symmetric_matrix": 28, "invertiblepred": 28, "fullrank": [28, 32], "invertiblehandl": 28, "r9": 28, "invertible_matrix": 28, "orthogonalpred": 28, "tm": [28, 133], "mm": [28, 31, 90, 107, 114, 118, 119, 158, 183], "orthogonalhandl": 28, "r10": 28, "orthogonal_matrix": 28, "unitarypred": 28, "unitaryhandl": 28, "r11": 28, "unitary_matrix": 28, "positivedefinitepred": 28, "tmz": 28, "column": [28, 31, 32, 33, 78, 80, 81, 83, 86, 87, 89, 99, 107, 111, 114, 125, 155, 162, 170, 174, 179, 183, 189, 194, 210, 213, 219, 239], "positive_definit": 28, "positivedefinitehandl": 28, "r12": 28, "definite_matrix": 28, "uppertriangularpred": 28, "m_": [28, 123, 187], "ij": [28, 160, 165, 214], "zeromatrix": [28, 83], "upper_triangular": [28, 81], "uppertriangularhandl": 28, "r13": 28, "uppertriangularmatrix": 28, "lowertriangularpred": 28, "lower_triangular": [28, 81], "lowertriangularhandl": 28, "r14": 28, "lowertriangularmatrix": 28, "diagonalpred": 28, "diagonalhandl": 28, "r15": 28, "diagonal_matrix": 28, "fullrankpred": 28, "row": [28, 31, 32, 33, 39, 42, 50, 55, 81, 82, 83, 86, 87, 89, 90, 99, 111, 112, 114, 125, 127, 128, 155, 170, 178, 183, 189, 194, 204, 213, 214, 219, 233, 239, 240], "linearli": [28, 32, 58, 74, 86, 187, 210, 212, 220], "fullrankhandl": 28, "squarepred": 28, "squarehandl": 28, "r16": 28, "square_matrix": 28, "integerelementspred": 28, "integer_el": 28, "integerelementshandl": 28, "realelementspred": 28, "real_el": 28, "realelementshandl": 28, "complexelementspred": 28, "complex_el": 28, "complexelementshandl": 28, "singularpred": 28, "singularhandl": 28, "fore": 28, "r17": 28, "singularmatrix": 28, "normalpred": 28, "normalhandl": 28, "r18": 28, "normal_matrix": 28, "triangularpred": 28, "triangularhandl": 28, "r19": 28, "triangular_matrix": 28, "unittriangularpred": 28, "1s": [28, 55, 79, 183], "unit_triangular": 28, "unittriangularhandl": 28, "evenpred": 28, "evenhandl": 28, "oddpred": 28, "oddhandl": 28, "divisor": [28, 41, 50, 51, 86, 90, 181, 182, 184, 185, 187, 188, 189, 190, 193], "primehandl": 28, "subject": [28, 60, 66, 94, 103, 128, 189], "compositepred": 28, "compositehandl": 28, "positivepred": 28, "interv": [28, 30, 41, 50, 54, 56, 58, 59, 60, 63, 66, 75, 77, 80, 90, 146, 155, 185, 187, 189, 190, 197, 200, 209, 213, 214, 256, 270], "positivehandl": 28, "negativepred": 28, "negativehandl": 28, "zeropred": 28, "zerohandl": 28, "nonzeropred": 28, "nonzerohandl": 28, "nonpositivepred": 28, "nonpositivehandl": 28, "nonnegativepred": 28, "nonnegativehandl": 28, "integerpred": 28, "integerhandl": 28, "r20": 28, "rationalpred": 28, "rationalhandl": 28, "r21": 28, "irrationalpred": 28, "ratio": [28, 40, 41, 49, 50, 54, 55, 58, 60, 63, 64, 65, 66, 82, 90, 99, 133, 165, 194, 203, 206, 212], "irrationalhandl": 28, "r22": 28, "realpred": 28, "disjoint": [28, 31, 39, 42, 190, 202, 232], "realhandl": 28, "r23": 28, "extendedrealpred": 28, "extendedrealhandl": 28, "hermitianpred": 28, "hermitianhandl": 28, "r24": 28, "hermitianoper": [28, 149], "complexpred": 28, "complexhandl": 28, "r25": 28, "imaginarypred": 28, "imaginaryhandl": 28, "r26": 28, "antihermitianpred": 28, "antihermitianhandl": 28, "r27": 28, "algebraicpred": 28, "askalgebraicpredicatehandl": 28, "r28": 28, "algebraichandl": 28, "transcendentalpred": 28, "transcedent": 28, "refine_pow": 29, "refine_ab": 29, "refine_arg": 29, "refine_atan2": 29, "refine_im": 29, "im": [29, 50, 57, 75, 84, 181, 194, 195, 202, 210, 265], "refine_matrixel": 29, "refine_r": 29, "refine_sign": 29, "lagrang": [30, 50, 117, 121, 190, 207], "lagrangian": [30, 107, 115, 120, 121, 123, 124], "euler_equ": 30, "r29": 30, "iter": [30, 32, 39, 41, 42, 45, 46, 50, 51, 52, 53, 55, 58, 66, 80, 90, 104, 105, 107, 108, 111, 124, 128, 145, 160, 173, 180, 181, 182, 183, 185, 187, 190, 194, 195, 196, 197, 200, 206, 207, 210, 212, 213, 214, 215, 218, 226, 227, 228, 229, 231, 233, 239, 243, 257], "eqn": [30, 213], "e2": [30, 50, 53, 60, 67, 77, 86, 90, 97, 112, 184, 189, 201, 210, 213, 214, 232], "93lagrange_equ": 30, "decreas": [30, 32, 42, 187], "monoton": [30, 32, 67], "is_decreas": 30, "lopen": [30, 50, 202, 209, 214], "ropen": [30, 56, 202, 214], "is_increas": 30, "72": [30, 50, 63, 86, 90, 93, 179, 193], "is_monoton": 30, "is_strictly_decreas": 30, "is_strictly_increas": 30, "monotonicity_help": 30, "held": [30, 51, 124, 218, 269], "univari": [30, 49, 50, 56, 73, 77, 181, 182, 184, 185, 186, 188, 189, 190, 191, 196, 209, 212, 214], "r30": 30, "mathematical_singular": 30, "interpol": [30, 59, 127, 187, 190], "finite_diff_weight": [30, 50, 259], "estim": [30, 49, 50, 54, 75, 259], "apply_finite_diff": [30, 50, 259], "differentiate_finit": [30, 50, 259], "finite_diff": [30, 50], "x_list": [30, 259], "y_list": [30, 259], "cube": [30, 32, 34, 41, 43, 56, 77, 187, 188, 207, 213, 248], "xlist": 30, "55271367880050e": 30, "round": [30, 32, 50, 54, 55, 56, 86, 133, 189, 190, 201, 203, 214], "indexedbas": [30, 32, 49, 50, 194, 212, 218, 219, 226], "idx": [30, 32, 194, 218, 219, 226], "xy": [30, 31, 64, 86, 109, 178, 180, 181, 187, 194, 206, 213, 248, 264, 269], "zip": [30, 40, 51, 80, 90, 190, 200, 207, 210, 229, 232], "extract": [30, 50, 77, 81, 83, 86, 90, 100, 114, 121, 169, 178, 187, 189, 190, 212, 213, 214, 225, 227, 232], "region": [30, 58, 67, 77, 180, 202, 210, 213, 214, 239, 241, 248], "bewar": [30, 58], "rung": [30, 72], "phenomenon": [30, 165, 187, 197, 264], "90": [30, 41, 48, 58, 81, 86, 92, 93, 103, 112, 128, 194, 196, 206, 214, 227], "finitediff": 30, "wrt": [30, 32, 50, 52, 58, 67, 86, 112, 127, 170, 171, 187, 190, 239, 240, 241, 245], "arbitrarili": [30, 50, 63, 90, 187, 189, 201, 204, 210, 211, 214], "len": [30, 38, 39, 40, 41, 42, 46, 48, 50, 51, 55, 58, 65, 75, 80, 115, 129, 133, 144, 154, 190, 206, 210, 219, 232], "nearest": [30, 189], "furthest": [30, 51], "sublist": [30, 46, 51, 77, 157, 259], "fd": [30, 32, 160], "0th": [30, 42, 51, 58], "1st": [30, 42, 90, 99, 210, 211, 235, 259], "classic": [30, 56, 58, 86, 146, 162, 170, 178, 181, 255], "forward": [30, 32, 81, 99, 114, 121, 153, 177, 206, 225], "pai": 30, "attent": [30, 41, 56], "gridpoint": 30, "plan": [30, 103, 185, 208, 268], "matter": [30, 39, 42, 49, 50, 55, 75, 77, 125, 201, 232, 263, 264], "mycoeff": 30, "3rd": [30, 42, 56, 90, 127, 190, 212, 215, 232], "2nd": [30, 42, 51, 90, 99, 127, 210, 215, 232], "cost": [30, 32, 90, 115, 213, 263], "yield": [30, 32, 41, 50, 51, 58, 74, 75, 90, 93, 99, 105, 154, 182, 187, 189, 190, 195, 196, 201, 202, 203, 206, 207, 212, 229, 232, 265], "poorer": 30, "grand": 30, "r31": 30, "51": [30, 86, 90], "184": [30, 210], "1988": [30, 139, 157, 187, 188], "699": 30, "706": [30, 86], "1090": [30, 190], "s0025": [30, 90], "5718": [30, 90], "0935077": 30, "continuous_domain": [30, 209], "tan": [30, 50, 55, 57, 77, 92, 105, 118, 119, 120, 124, 191, 193, 194, 201, 203, 210, 213, 269], "function_rang": 30, "OR": [30, 53, 80, 187], "critic": [30, 133, 177, 189, 213], "is_convex": [30, 66], "sym": [30, 40, 41, 46, 50, 55, 170, 194, 197, 202, 206, 207, 212, 214, 220, 232, 269], "convex": [30, 66, 67, 77], "unspecifi": [30, 50, 65, 259], "multivari": [30, 50, 58, 181, 182, 184, 185, 186, 188, 190, 191, 201, 206, 212, 213, 214, 269], "concav": [30, 129], "logartihm": 30, "r32": 30, "convex_funct": 30, "r33": 30, "ifp": 30, "illinoi": 30, "edu": [30, 34, 41, 42, 51, 53, 55, 77, 86, 90, 188, 193, 203, 206, 207, 210, 214, 239], "angelia": 30, "l3_convfunc": 30, "r34": 30, "logarithmically_convex_funct": 30, "r35": 30, "logarithmically_concave_funct": 30, "r36": 30, "concave_funct": 30, "lcim": 30, "mixtur": [30, 32, 67, 181, 227], "incommensur": 30, "not_empty_in": [30, 213], "finset_intersect": 30, "finite_set": [30, 202], "tracker": [30, 202, 213, 265], "aperiod": 30, "sinh": [30, 50, 54, 57, 58, 69, 75, 191, 194, 195, 204, 269], "smallest": [30, 44, 56, 63, 65, 72, 80, 86, 90, 157, 170, 185, 230, 232], "verif": [30, 183, 212], "reliabl": [30, 50, 210, 230, 259], "henc": [30, 32, 40, 41, 50, 52, 56, 58, 62, 75, 78, 80, 90, 175, 180, 181, 182, 187, 194, 204, 207, 211, 213, 225, 229, 243, 244, 245, 264, 269], "stationary_point": 30, "stationari": [30, 214], "use_unicod": [30, 31, 32, 54, 58, 77, 78, 86, 94, 99, 132, 174, 179, 181, 182, 193, 194, 195, 213, 214, 259, 263, 265, 268, 269, 270], "tikz": 31, "joyofcat": 31, "adamek": 31, "herrlich": 31, "strecker": 31, "joi": 31, "cat": [31, 169], "book": [31, 41, 51, 56, 107, 112, 125, 126, 145, 188, 193, 194, 262], "katmat": 31, "uni": [31, 77, 232], "bremen": 31, "de": [31, 51, 90, 165, 179, 180, 191, 196, 207, 208, 210, 232], "acc": [31, 127, 173, 177], "pre": [31, 32, 50, 179, 180, 195, 203, 206, 212, 213, 225, 243, 247, 264], "embryon": 31, "morphism": [31, 181], "codomain": [31, 181, 189], "arrow": [31, 79, 93, 180, 194], "namedmorph": 31, "prohibit": [31, 42, 43, 170], "identitymorph": 31, "compositemorph": 31, "compos": [31, 50, 51, 115, 124, 162, 164, 165, 177, 181, 185, 189, 190, 191, 194, 196, 206], "circ": [31, 50, 61, 67, 75, 83], "compon": [31, 32, 46, 50, 52, 65, 77, 83, 86, 100, 109, 121, 125, 132, 157, 162, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 190, 192, 214, 216, 219, 220, 229, 232, 239, 241, 244, 245], "new_nam": 31, "forget": [31, 269], "act": [31, 40, 41, 42, 46, 50, 58, 66, 79, 80, 86, 93, 104, 106, 111, 112, 116, 123, 132, 144, 149, 152, 153, 202, 213, 215, 243, 247, 258], "id_a": 31, "id_b": 31, "commutative_diagram": 31, "quadrupl": [31, 190], "mbox": 31, "hom": 31, "id": [31, 46, 56], "rightarrow": [31, 42, 46, 51, 55, 56, 58, 72, 73, 75, 77, 80, 81, 90, 180, 189, 201, 213, 232, 259], "law": [31, 121, 163, 178, 182], "monoid": 31, "pare1970": 31, "accompani": 31, "premis": 31, "conclus": [31, 50], "carri": [31, 32, 50, 152, 158, 165, 181, 184, 187, 189, 191, 192, 233], "premises_kei": 31, "et": [31, 77, 139, 187, 190, 191, 203, 206], "pareigi": 31, "functor": 31, "1970": [31, 86], "is_subdiagram": 31, "subdiagram": 31, "d1": [31, 46, 170, 181, 201, 214, 239], "subdiagram_from_object": 31, "preserv": [31, 32, 41, 50, 86, 158, 185, 190, 195, 196, 206], "veryuniqu": 31, "diagram_draw": 31, "diagramgrid": 31, "analys": [31, 97, 99, 127, 214], "drawn": [31, 41, 79, 180, 184, 192], "moprhism": 31, "strive": 31, "nevertheless": 31, "simplest": [31, 80, 86, 90, 91, 179, 180, 191, 195, 203, 206, 210, 259, 269], "laid": [31, 112, 157], "width": [31, 32, 78, 174, 180, 190, 194, 225], "height": [31, 32, 66, 83, 129, 180, 181, 194, 201, 248], "emploi": [31, 49, 54, 77, 90, 190, 193, 208, 210, 214], "lai": 31, "layout": 31, "sequenti": [31, 34, 51, 56, 239, 240], "test_draw": 31, "five": [31, 39, 75, 194, 207], "lemma": [31, 41, 75, 182], "fivelemma": 31, "five_lemma": 31, "arrowstringdescript": 31, "curving_amount": 31, "looping_start": 31, "looping_end": 31, "horizontal_direct": 31, "vertical_direct": 31, "label_posit": 31, "pic": 31, "princip": [31, 51, 56, 58, 75, 77, 87, 101, 114, 133, 181, 182, 183, 184, 185, 187, 189, 190, 191], "distanc": [31, 34, 42, 60, 63, 64, 65, 66, 93, 94, 102, 103, 106, 115, 116, 129, 133, 163, 173, 175, 247], "horizont": [31, 60, 63, 65, 81, 132, 180, 183, 194], "offset": [31, 32, 50, 55, 58, 219], "cell": 31, "vertic": [31, 34, 43, 44, 60, 61, 63, 65, 66, 67, 77, 79, 81, 86, 94, 111, 116, 132, 140, 179, 180, 183, 189, 194, 202, 232, 248], "disregard": 31, "unexplain": 31, "astr": 31, "dr": [31, 52, 194, 210], "12mm": 31, "loop": [31, 32, 90, 99, 170, 180, 191, 194, 210, 229, 232, 264], "correspondingli": 31, "label_displac": 31, "arrow_styl": 31, "dash": 31, "xypicdiagramdraw": 31, "formatt": 31, "utilis": 31, "xypic": 31, "drawer": 31, "xymatrix": 31, "ld": 31, "arrow_formatt": 31, "therebi": 31, "default_arrow_formatt": 31, "farther": 31, "centr": [31, 47, 180], "default_formatt": 31, "45": [31, 50, 55, 66, 86, 90, 190, 191, 207], "_3mm": 31, "default_curving_amount": 31, "cm": [31, 127, 214], "_1cm": 31, "default_curving_step": 31, "h1": [31, 109], "1cm": 31, "rr": [31, 50, 68, 183, 184, 186, 190, 191], "h_": [31, 41, 46, 58, 77], "_2cm": 31, "mask": [31, 194], "diagram_format": 31, "proceed": [31, 33, 75, 77, 126, 188, 204], "xypic_draw_diagram": 31, "shortcut": [31, 50, 82, 178, 194, 202, 206, 269], "insert": [31, 33, 81, 92, 93, 155, 160, 194, 214, 235], "preview_diagram": 31, "png": [31, 78, 86, 93, 94, 97, 174, 180, 194, 197], "varieti": [32, 33, 42, 50, 91, 94, 125, 181, 188, 190, 214, 232], "brief": [32, 213, 225, 247], "fab": [32, 194], "cse_main": [32, 195, 206], "cse": [32, 91, 103, 149, 195, 227, 233], "meat": 32, "pycod": [32, 194], "lambdarepr": [32, 194, 233], "aesara_funct": [32, 91, 194], "ccode": [32, 194, 219, 227], "float80": [32, 194], "assign_to": [32, 194], "type_alias": [32, 194], "0l": [32, 194], "powl": [32, 194], "c99": [32, 194, 227], "expm1": [32, 194], "ternari": [32, 50, 194, 207], "lack": [32, 52, 54, 109, 194, 259], "thrown": [32, 194], "fcode": [32, 194], "contract": [32, 52, 100, 160, 194, 203, 216, 217, 218, 219, 220, 221], "len_i": [32, 194], "mat_1": 32, "mat_2": 32, "dy": [32, 52, 67, 86, 93, 102, 127, 190, 194, 207, 210, 211, 259], "jscode": [32, 194], "rh": [32, 40, 42, 50, 81, 82, 86, 107, 112, 118, 119, 120, 183, 192, 194, 196, 210, 212, 213, 244], "user_funct": [32, 194], "argument_test": [32, 194], "cfunction_str": [32, 194], "octav": [32, 127, 227, 257], "custom_funct": [32, 194], "existing_octave_fcn": [32, 194], "is_matrix": [32, 194], "my_mat_fcn": [32, 194], "my_fcn": [32, 194], "mat": [32, 83, 129, 154, 194], "octave_cod": [32, 194], "summat": [32, 49, 50, 54, 55, 58, 160, 188, 194, 197, 206, 214, 215, 218, 219, 220, 226], "mathematica_cod": [32, 194], "g1": [32, 35, 40, 41, 75, 86, 99], "g2": [32, 35, 40, 41, 75, 79, 86, 99], "gamma_1": [32, 102], "gamma_2": [32, 102], "\u03b3\u2081": 32, "\u03b3\u2082": 32, "\u03b2": [32, 179], "h_i": [32, 46], "c89": [32, 194, 227], "julia_cod": [32, 194], "rust_cod": [32, 194], "powi": [32, 194], "make_routin": [32, 227], "f95": [32, 226, 227], "matlab": [32, 103, 127, 227, 257, 265], "breadth": [32, 50, 214], "c_name": [32, 227], "c_code": [32, 227], "h_name": [32, 227], "c_header": [32, 227], "volume_result": 32, "ifndef": [32, 227], "project__test__h": [32, 227], "endif": [32, 227], "preprocessor": [32, 195, 206, 227], "global_var": [32, 227], "insensit": [32, 86, 127, 194, 225, 227], "argument_sequ": [32, 227], "routin": [32, 39, 49, 50, 51, 52, 75, 80, 81, 86, 90, 132, 160, 183, 187, 190, 193, 194, 195, 206, 207, 210, 211, 212, 213, 226, 231, 232, 245], "name_expr": [32, 227], "to_fil": [32, 227], "f_name": [32, 227], "f_code": [32, 227], "choic": [32, 42, 58, 75, 77, 91, 124, 156, 165, 169, 170, 177, 185, 187, 190, 194, 206, 210, 232, 263], "hydrogen": [32, 255], "r_nl": [32, 101, 161], "my_routin": 32, "result_var": [32, 227], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 32, "__________": [32, 182], "\u212f": [32, 132, 179, 194, 259, 263, 265, 269, 270], "assoc_laguerr": [32, 58, 194], "fcn": [32, 227], "result_5397460570204848505": [32, 227], "out_8598435338387848786": [32, 227], "examin": [32, 51, 149, 225, 227, 269], "inputargu": [32, 227], "outputargu": [32, 227], "inoutargu": [32, 227], "disk": [32, 51, 202, 213, 233], "binary_funct": [32, 91, 226], "tensor": [32, 37, 52, 57, 86, 100, 109, 125, 139, 145, 146, 147, 157, 160, 169, 170, 194, 215, 216, 218, 219, 226, 233, 242, 243, 249, 253], "binary_func": [32, 226], "servic": [32, 214], "tempdir": [32, 226], "qho_1d": [32, 136], "psi_n": [32, 136], "y_": [32, 58, 75, 101, 179], "qho": 32, "tmp": 32, "reveal": [32, 90, 213, 264], "subroutin": [32, 41, 156, 187], "autofunc": 32, "dimens": [32, 34, 51, 52, 58, 59, 61, 63, 64, 65, 67, 79, 81, 83, 86, 89, 93, 100, 115, 134, 144, 146, 149, 154, 163, 164, 167, 168, 170, 180, 183, 194, 207, 210, 212, 214, 215, 219, 220, 227, 239, 241, 243, 255], "hbar": [32, 136, 142, 155, 161, 165, 167, 179], "05457162d": 32, "14159265358979d0": 32, "0d0": [32, 194], "74126166983329d": 32, "33": [32, 50, 53, 86, 125, 133, 187, 191, 194, 214], "verbos": [32, 50, 81, 90, 194, 225, 226, 268], "mute": [32, 226], "backend": [32, 78, 91, 92, 97, 116, 174, 191, 226, 233, 256], "auxiliari": [32, 77, 107, 112, 122, 210, 226], "function_nam": [32, 226], "sympy_express": [32, 226], "mandatori": [32, 194, 226], "illustr": [32, 86, 113, 115, 165, 184, 197, 201], "psi_nl": 32, "766": 32, "incur": [32, 91], "get_numpy_arrai": 32, "tight": 32, "temp": [32, 114], "alloc": [32, 56], "walk": [32, 34, 152, 155, 204], "memori": [32, 50, 90, 190, 215, 226, 229], "fuse": 32, "wise": [32, 33, 56, 81, 183, 187, 194, 200, 226], "unabl": [32, 63, 67, 92, 212, 239, 258, 259], "fortun": [32, 91, 115, 190, 191], "reconnect": 32, "autom": [32, 56, 91, 203, 226, 263], "ideolog": [32, 213], "fashion": [32, 50, 83, 114, 122, 123, 125, 178, 181, 232], "broadcast": [32, 91, 194, 219, 226], "lambdifi": [32, 58, 114, 194, 212, 226, 231, 250, 257, 260], "outperform": 32, "jensen": 32, "quantit": [32, 162], "leverag": [32, 91, 194], "ufunc": [32, 91, 226, 233], "fn_numpi": 32, "fn_fortran": 32, "linspac": [32, 73, 91, 112, 127], "xx": [32, 86, 109, 178, 232], "21306132": 32, "98101184": 32, "44626032": 32, "timeit": [32, 191], "10000": [32, 54, 90, 91, 93, 212], "18891601900395472": 32, "004707066000264604": 32, "facil": 32, "comparison": [32, 49, 50, 80, 86, 112, 181, 189, 193, 212, 225, 232], "thereof": [32, 50, 181, 187, 189], "optims_c99": 32, "log1p": [32, 194], "expm1_opt": 32, "log1p_opt": 32, "exp2_opt": 32, "log2_opt": 32, "log2const_opt": 32, "funcminusoneoptim": 32, "func_m_1": 32, "opportunist": 32, "replaceoptim": 32, "toward": [32, 50, 58, 181, 201, 213], "catastroph": 32, "smaller": [32, 41, 42, 50, 51, 58, 66, 77, 83, 90, 122, 182, 184, 187, 190, 197, 203, 204, 212, 232, 258, 269], "replace_in_add": 32, "cost_funct": 32, "prioriti": [32, 73, 103, 112, 178, 233], "__call__": [32, 42, 50, 189], "exp2": [32, 194], "create_expand_pow_optim": 32, "base_req": 32, "is_symbol": [32, 81], "expand_opt": 32, "opt2": 32, "is_funct": 32, "log2": [32, 194], "matin_opt": 32, "matinv_opt": 32, "matrixsolv": [32, 194], "matrix_nod": 32, "numpyprint": 32, "doprint": [32, 194], "linalg": 32, "seriesapprox": 32, "reltol": 32, "max_ord": 32, "n_point_check": 32, "threshold": [32, 90], "largest": [32, 42, 44, 50, 56, 58, 86, 89, 90, 140, 181, 185, 212, 232], "series_approx2": 32, "1e": [32, 50, 54, 86, 97, 129, 190, 212], "series_approx3": 32, "series_approx8": 32, "sumapprox": 32, "neglect": 32, "2000": [32, 36, 77, 90, 188], "sum_approx3": 32, "sum_approx2": 32, "sum_approx1": 32, "token": [32, 75, 78, 92], "diagram": [32, 39, 79, 93, 115, 116, 121, 140, 219, 243, 256, 264], "codegenast": 32, "assignmentbas": 32, "augmentedassign": 32, "addaugmentedassign": 32, "subaugmentedassign": 32, "mulaugmentedassign": 32, "divaugmentedassign": 32, "modaugmentedassign": 32, "codeblock": [32, 92], "quotedstr": 32, "intbasetyp": 32, "_sizedinttyp": 32, "signedinttyp": 32, "unsignedinttyp": 32, "floatbasetyp": 32, "floattyp": 32, "complexbasetyp": 32, "complextyp": 32, "pointer": [32, 227, 228], "functionprototyp": 32, "functiondefinit": [32, 92], "stream": [32, 51, 195, 206, 232], "functioncal": 32, "breaktoken": 32, "continuetoken": 32, "nonetoken": 32, "float32": [32, 92, 233], "float64": [32, 91, 214], "codeprint": 32, "underli": [32, 42, 48, 50, 79, 86, 97, 112, 155, 168, 212, 213, 214], "complex_": 32, "bool_": 32, "intc": [32, 92], "intp": 32, "unsign": [32, 55, 206], "int8": 32, "int16": 32, "int32": 32, "int64": [32, 214], "uint8": 32, "uint16": 32, "uint32": 32, "uint64": 32, "modern": [32, 181, 188, 194], "x86": 32, "amd64": 32, "hardwar": 32, "complex64": 32, "complex128": 32, "newton": [32, 58, 121, 163, 167, 187, 191], "aug_assign": 32, "tol": [32, 50, 185], "val": [32, 50, 62, 185, 189, 233], "whl": 32, "py_str": 32, "inf": [32, 42, 50, 86, 185, 190, 202, 210, 214], "exec": [32, 50, 78, 233], "1121416371": 32, "909672693737": 32, "867263818209": 32, "865477135298": 32, "865474033111": 32, "1g": 32, "3e": 32, "2003": [32, 179, 188, 194, 207], "source_format": [32, 194], "align": [32, 60, 86, 106, 178, 179, 194, 225], "op": [32, 50, 86, 149, 160, 173, 177, 203, 232, 233], "parametr": [32, 58, 59, 63, 86, 180, 207, 213, 239, 241, 248], "volatil": 32, "binop": 32, "exit": [32, 90, 225], "premad": 32, "break_": 32, "lift": [32, 46, 56, 58, 75, 185, 187, 190], "left_hand_sid": 32, "topological_sort": [32, 232], "subexpress": [32, 50, 81, 103, 105, 189, 190, 194, 201, 205, 213, 227, 233, 250, 258], "postprocess": [32, 190, 195, 206], "topolog": [32, 50, 52, 75, 183, 202, 232], "continue_": 32, "untyp": 32, "compliant": 32, "ok": [32, 42, 194, 210], "elem": [32, 41, 181], "ijk": [32, 219], "stride": [32, 219], "lmn": 32, "cast_nocheck": 32, "alia": [32, 43, 50, 60, 66, 81, 82, 84, 88, 144, 153, 160, 181, 184, 185, 189, 193, 202, 225, 235, 269], "nbit": 32, "storag": [32, 50, 86, 154, 179, 187], "nmant": 32, "mantissa": 32, "nexp": 32, "half_precis": 32, "f16": 32, "65504": 32, "tini": [32, 50], "ep": [32, 41, 49, 185, 189, 190], "dig": [32, 264], "decimal_dig": 32, "cast_check": 32, "1e5": 32, "cast": [32, 83, 261], "subnorm": [32, 41], "loss": [32, 75, 160, 226, 244], "idempot": 32, "loos": [32, 50, 205], "overflow": [32, 229], "max_expon": 32, "min_expon": 32, "for_i": 32, "for_ji": 32, "for_kji": 32, "function_arg": [32, 225], "fcall": 32, "bar": [32, 58, 149, 155, 235], "baz": 32, "split": [32, 50, 51, 54, 75, 77, 92, 187, 189, 192, 193, 194, 214, 220, 225, 232, 237, 264, 269], "return_typ": 32, "fp": [32, 33, 50, 190, 196], "from_functionprototyp": 32, "prototyp": [32, 91, 227], "value_const": 32, "pointer_const": 32, "attr_param": 32, "looking_for": 32, "as_declar": 32, "formatstr": 32, "5g": 32, "stdout": [32, 225], "stderr": 32, "atom": [32, 42, 77, 80, 81, 101, 161, 184, 191, 194, 212, 213, 219], "oppos": [32, 233, 259], "_field": 32, "_construct_": 32, "not_in_arg": 32, "exclud": [32, 49, 50, 77, 86, 105, 127, 182, 185, 187, 190, 200, 210, 212, 225, 228, 232], "float16": 32, "inttyp": 32, "super": [32, 58, 185, 194, 239, 240], "from_expr": [32, 190], "deduct": 32, "toler": [32, 50, 54, 185, 206, 212], "42": [32, 39, 50, 53, 55, 58, 63, 64, 66, 81, 82, 84, 86, 88, 90, 185, 207, 225], "bigger": [32, 50, 55, 204, 210, 269], "v6": 32, "123456": [32, 50, 90], "v10": 32, "12345": [32, 54], "67894": 32, "boost_mp50": 32, "boost": 32, "multiprecis": [32, 184], "cpp_dec_float_50": 32, "cxxcode": [32, 194], "r37": 32, "rtol": 32, "atol": 32, "precision_target": 32, "deduc": [32, 75, 80, 204, 263], "256": [32, 41, 90, 190, 194], "v18": 32, "123456789012345646": 32, "123456789012345649": 32, "Will": [32, 86, 92, 189, 194, 225], "decl1": 32, "decl2": 32, "alt": 32, "secondarili": [32, 190], "mathcin": 32, "cbrt": [32, 57, 194], "minu": [32, 49, 50, 175, 187, 194, 245], "prone": [32, 50], "0e": [32, 50], "fma": [32, 194], "cpu": [32, 91, 127], "hypot": [32, 194], "hypotenus": [32, 66], "log10": [32, 194], "ten": [32, 91], "plu": [32, 49, 86, 92, 127, 140, 194, 204, 233], "expand_log": [32, 206], "famili": [32, 34, 68, 77, 182], "commaoper": 32, "goto": 32, "preincrement": 32, "postdecr": 32, "decrement": [32, 205, 229], "postincr": 32, "increment": [32, 41, 42, 43, 49, 66, 90, 205, 214], "predecr": 32, "alignof": 32, "sizeof": 32, "struct": 32, "dsign": 32, "arrayconstructor": 32, "ac": [32, 42, 62, 109, 125, 137, 207, 214, 232, 235], "95": [32, 48, 90, 187, 194, 210, 212, 227], "do1": 32, "1d0": 32, "do2": 32, "extent": 32, "intent_out": 32, "dim": [32, 52, 65, 91, 162, 168, 194, 217, 220], "arr": 32, "fortranreturn": 32, "aid": [32, 114], "implieddoloop": 32, "idl": 32, "signallib": 32, "prog": [32, 139], "myprogram": 32, "mysub": 32, "subroutinecal": 32, "passs": 32, "inout": 32, "bind_c": 32, "sum_": [32, 49, 50, 51, 55, 58, 75, 77, 81, 83, 90, 191, 196, 197, 204, 210, 214], "cmplx": [32, 194], "intent_in": 32, "intrins": 32, "isign": 32, "lbound": 32, "lb": [32, 72, 229], "literal_dp": 32, "num": [32, 41, 50, 90, 99, 185, 206, 210, 229, 235], "dp": [32, 50, 53, 58, 90, 184, 185, 212, 228], "literal_sp": 32, "reshap": [32, 81, 112, 127, 215, 221, 232], "arrayexpr": 32, "shp": 32, "metric": [32, 42, 46, 52, 100, 206, 210, 213, 220], "snr": 32, "convolution2d": 32, "use_renam": 32, "ren": 32, "thingi": 32, "newtons_method": 32, "itermax": 32, "counter": [32, 50, 56, 62, 81, 94], "raphson": 32, "criterion": [32, 41, 126, 182, 187], "dummi": [32, 46, 49, 56, 75, 77, 86, 112, 127, 155, 160, 184, 185, 189, 190, 191, 200, 201, 202, 204, 206, 210, 213, 218, 220, 223, 227, 232, 233], "netwon": 32, "algo": [32, 42], "r38": 32, "27s_method": 32, "newtons_method_funct": 32, "param": [32, 52, 86, 207], "render_as_modul": 32, "py_mod": 32, "865474033102": 32, "render_as_source_fil": 32, "c99codeprint": [32, 194], "printer_set": 32, "fcodeprint": [32, 194], "fpgroup": [33, 41], "studi": [33, 40, 49, 52, 86, 178, 181, 187, 190, 207, 214], "combinator": [33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 83, 90, 196, 215, 220, 229, 232, 250, 263, 269], "free_group": [33, 40, 41], "vfree_group": 33, "xfree_group": 33, "fp_group": [33, 41], "coset_enumeration_r": 33, "fall": [33, 49, 50, 55, 78, 174, 189, 194, 207, 211, 214], "famou": [33, 58, 77, 90, 207], "langl": [33, 41, 139, 179], "mid": [33, 51, 54, 94, 202, 207], "rangl": [33, 41, 139, 157, 179], "gen0": 33, "gen1": 33, "gen_": 33, "ldot": [33, 40, 41, 49, 50, 51, 55, 58, 75, 90, 94, 165, 181, 182, 185, 187, 189, 194, 197, 201, 204, 207, 212, 215, 269], "freegroup": 33, "x_1": [33, 40, 41, 51, 55, 72, 86, 155, 182, 185, 187, 190, 196, 207, 213], "x_2": [33, 40, 55, 72, 155, 182, 187, 190, 196, 207, 213], "x_3": [33, 40, 72, 155], "s_1": 33, "r_1": [33, 181, 191], "s_2": 33, "r_2": 33, "s_k": 33, "r_k": [33, 153], "s_i": [33, 46, 77, 79], "r_i": [33, 191], "reduct": [33, 86, 108, 187, 189, 205, 207], "techniqu": [33, 45, 75, 77, 194, 196, 206, 210, 213, 265], "ho05": [33, 40], "cdhw73": 33, "hav91": 33, "coset_enumeration_c": 33, "coset_enumer": 33, "relator_bas": 33, "coset_table_bas": 33, "regard": [33, 51, 58, 78, 128, 160, 181, 182, 196, 212, 213], "total": [33, 39, 41, 50, 55, 66, 79, 80, 81, 83, 114, 115, 122, 129, 133, 139, 144, 157, 166, 179, 185, 187, 190, 203, 206, 210, 218, 220, 248], "influenc": [33, 93, 181, 182], "coset_table_max_limit": 33, "4096000": 33, "safeti": [33, 42, 84], "max_coset": 33, "cox": [33, 188, 190], "c_r": [33, 204], "50": [33, 41, 53, 54, 55, 58, 66, 86, 90, 93, 94, 133, 190, 194, 203, 212], "max_stack_s": 33, "500": [33, 54, 109], "deduction_stack": 33, "stack": [33, 67, 81, 127, 183, 189, 194, 223, 229, 265], "occurr": [33, 50, 90, 112, 170, 206, 214], "exce": [33, 90, 220], "modest": 33, "low_index_subgroup": 33, "conjugaci": [33, 41], "coset_t": [33, 41], "reidemeister_present": 33, "y_1": [33, 207, 214], "y_2": [33, 207, 214], "john": [33, 41, 58, 190, 207, 210], "cannon": 33, "lucien": 33, "dimino": [33, 41], "georg": [33, 181, 210, 232], "hava": 33, "jane": 33, "watson": [33, 206], "comp": [33, 210], "463": [33, 126], "490": [33, 42], "1973": [33, 51, 176], "derek": [33, 40], "holt": [33, 40, 41, 48], "chapman": [33, 40], "hall": [33, 40, 214], "crc": [33, 40, 42], "2005": [33, 40, 77, 90, 190], "xvi": [33, 40], "514": [33, 40, 188], "symposium": [33, 75, 187, 188, 204], "issac": [33, 77, 188, 212], "bonn": 33, "1991": [33, 188], "191": [33, 213], "199": 33, "acm": [33, 49, 75, 77, 188, 204, 210, 212], "graycod": 34, "kw_arg": [34, 44, 160, 219, 220], "hamiltonian": [34, 151], "edg": [34, 43, 44, 79, 183, 194, 213, 232, 268], "hamilton": [34, 81], "vertex": [34, 44, 61, 66, 77, 183], "000": [34, 54, 77, 80, 154, 232], "110": [34, 80, 210, 212, 226, 232], "010": [34, 80, 232], "011": [34, 80, 154, 232], "111": [34, 53, 60, 80, 90, 232], "101": [34, 80, 90, 154, 232], "001": [34, 54, 80, 129, 232], "delet": [34, 79, 81, 86, 191, 235, 269], "statist": [34, 51, 58, 214, 225, 263], "manner": [34, 51, 58, 124, 158, 175, 207, 210, 215, 232, 247], "generate_grai": 34, "0000": 34, "0001": [34, 54], "0011": [34, 45], "0010": 34, "0110": 34, "0111": [34, 154], "0101": [34, 154], "0100": 34, "1100": 34, "1101": 34, "1111": 34, "1110": 34, "1010": 34, "1011": 34, "1001": 34, "r39": 34, "nijenhui": 34, "wilf": [34, 49, 212], "1978": [34, 41, 165, 188], "combinatori": [34, 42, 49, 50, 57, 58, 196, 205, 232, 234, 269], "r40": 34, "knuth": [34, 42, 229], "2011": [34, 42, 75, 90, 176, 203], "art": [34, 42, 181, 194, 196, 229, 256], "vol": [34, 42, 51, 55, 58, 75, 86, 100, 189, 190, 204, 229, 232], "addison": [34, 42, 90, 188], "weslei": [34, 42, 90, 188], "r41": 34, "reflect": [34, 38, 42, 50, 60, 61, 66, 79, 129, 132, 133, 170], "brgc": 34, "6th": [34, 90], "unrank": [34, 39, 41, 42, 44], "r42": 34, "statweb": 34, "stanford": 34, "susan": 34, "s208": 34, "node12": 34, "tail": [34, 49, 50, 185, 214], "00010": 34, "random_bitstr": 34, "bitlist": [34, 45], "gray_to_bin": 34, "endian": 34, "bin_to_grai": 34, "get_subset_from_bitstr": 34, "bitstr": 34, "graycode_subset": 34, "group_construct": 35, "directproduct": [35, 38], "__mul__": [35, 41, 81, 86, 185, 189], "shift": [35, 41, 42, 44, 51, 58, 61, 65, 67, 80, 180, 185, 187, 190, 197, 204, 212, 214], "gn": 35, "named_group": [35, 38, 40, 41, 47, 48], "cyclicgroup": [35, 38, 41], "perm_group": [35, 40, 41, 42, 47, 48], "permutationgroup": [35, 38, 40, 41, 42, 47, 48], "group_numb": 36, "is_nilpotent_numb": 36, "r43": 36, "randprim": [36, 90], "pakianathan": 36, "shankar": 36, "monthli": [36, 51, 86], "107": [36, 188], "631": 36, "634": 36, "is_abelian_numb": 36, "r44": 36, "is_cyclic_numb": 36, "r45": 36, "polyhedron": [37, 41, 77, 232], "prufer": 37, "grai": [37, 45, 78, 129, 174, 180], "nilpot": [37, 41, 86], "abelian": [37, 38, 41, 79, 165, 181], "cyclic": [37, 38, 41, 42, 43, 53, 81, 90, 220, 232], "canonic": [37, 50, 203, 220], "coset": [37, 41, 46, 189], "todd": 37, "coxet": [37, 79], "subgroup": [37, 41, 42, 46, 48, 79, 90], "bibliographi": 37, "polycycl": [37, 41], "collector": 37, "symmetricgroup": [38, 40, 41, 47, 48], "transposit": [38, 41, 42, 51, 81, 83, 216], "is_group": [38, 41], "generate_schreier_sim": [38, 41], "af": [38, 41, 47, 127], "dihedralgroup": [38, 41, 48], "alternatinggroup": [38, 41, 47], "r46": 38, "symmetric_group": 38, "generators_and_rel": 38, "dihedr": [38, 42], "d_n": [38, 79, 190], "gon": 38, "bab": 38, "generate_dimino": [38, 41], "perm": [38, 40, 41, 42, 43, 48, 55, 81, 83, 86, 215], "cyclic_form": [38, 42, 43], "r47": 38, "dihedral_group": 38, "31": [38, 50, 53, 54, 66, 90, 125, 179, 190, 207], "ex": [38, 77, 100, 111, 184, 186, 189, 190, 220, 228], "is_even": [38, 41, 42], "r48": 38, "armstrong": 38, "abeliangroup": [38, 41], "cyclic_ord": 38, "theorem": [38, 51, 58, 60, 66, 76, 77, 81, 86, 90, 102, 103, 114, 160, 169, 177, 181, 184, 187, 201, 204, 207, 213, 246, 256], "r49": 38, "groupprop": [38, 41], "subwiki": [38, 41], "structure_theorem_for_finitely_generated_abelian_group": 38, "multiset_partit": [39, 55, 75, 229, 232], "rg": 39, "growth": [39, 90, 187, 259], "from_rg": 39, "abcd": [39, 43, 160, 232, 235], "cbead": 39, "sort_kei": [39, 50, 210], "ti": [39, 42, 50, 90], "integerpartit": [39, 232], "summand": [39, 189], "r50": 39, "partition_": [39, 55], "28number_theori": 39, "as_dict": [39, 184, 190], "as_ferr": 39, "char": 39, "ferrer": 39, "next_lex": [39, 42], "lexic": [39, 140, 232], "prev_lex": 39, "random_integer_partit": 39, "seed": [39, 41, 50, 51, 60, 63, 64, 86, 90, 187, 214, 225, 232], "85": [39, 54, 55, 86, 90, 114, 158, 179, 214], "rgs_gener": 39, "37": [39, 51, 56, 60, 86, 90, 94, 194, 207], "52": [39, 55, 90, 93, 94, 179, 193, 207, 210, 232, 259], "151": 39, "203": [39, 55], "rgs_enum": 39, "rgs_unrank": 39, "rgs_rank": 39, "pcgroup": 40, "pcg": 40, "pc_seri": [40, 41], "polycyl": 40, "pc_present": 40, "pc_sequenc": [40, 41], "miss": [40, 41, 67, 194, 212, 227, 269], "adjac": [40, 41, 42, 50, 99, 132, 183, 232], "der": [40, 41], "relative_ord": [40, 41], "polycyclic_group": [40, 41], "gen": [40, 41, 46, 47, 48, 50, 86, 181, 184, 185, 187, 189, 190, 191, 192, 200, 206, 209, 212], "is_ident": [40, 42, 50], "poss": [40, 114, 178], "pc_group": 40, "a_j": [40, 58, 75, 165, 187, 196, 204], "notin": [40, 75, 202], "_order": 40, "minimal_uncollected_subword": 40, "subword_index": 40, "i_1": [40, 160, 190, 215], "a_1": [40, 41, 51, 58, 72, 75, 81, 86, 100, 160, 165, 182, 187, 204, 207, 210, 212, 214, 269], "i_r": 40, "a_r": [40, 204], "i_2": [40, 160, 190], "s_": [40, 46, 112, 187], "s_j": [40, 79, 187], "x3": [40, 50, 55, 184, 210, 214], "collected_word": 40, "free_to_perm": 40, "bottom": [40, 41, 50, 51, 66, 81, 86, 89, 111, 189, 194, 203, 248], "pictur": [40, 194], "x_3x_2": 40, "x_3x_1": 40, "x_2x_1": 40, "x_3x_0": 40, "x_2x_0": 40, "x_1x_0": 40, "varii": 40, "derived_seri": [40, 41], "pc_resent": 40, "k_arrai": 40, "array_form": [40, 42, 43], "v_arrai": 40, "e_1": [40, 86, 181, 187, 190], "e_n": [40, 55, 79, 86, 136, 181, 190], "exponent_vector": 40, "leading_expon": 40, "dup": [41, 185, 186], "pn": [41, 115, 124], "motion": [41, 103, 107, 108, 111, 114, 115, 116, 118, 120, 121, 122, 123, 124, 127, 128, 173, 174, 177, 178, 214], "front": [41, 50, 114, 129, 159, 185, 187, 190, 194, 206, 269], "face": [41, 43, 63, 77, 112, 187, 191, 194, 207, 248, 265], "rubik": 41, "3674160": 41, "move": [41, 42, 50, 51, 64, 66, 93, 106, 114, 115, 121, 148, 173, 177, 178, 205, 206, 215, 224, 245], "pgroup": [41, 43], "corner": [41, 43, 81, 190, 210, 213, 233], "reset": [41, 43, 180, 187, 190, 225, 228, 230], "p10": 41, "make_perm": 41, "r51": 41, "eick": [41, 48], "brien": [41, 48], "r52": 41, "seress": 41, "r53": 41, "schreier_vector": 41, "r54": 41, "nielsen_transform": 41, "product_replacement_algorithm": 41, "r55": 41, "frank": [41, 42, 86], "celler": 41, "charl": 41, "leedham": 41, "green": [41, 180], "scott": 41, "murrai": 41, "alic": [41, 51], "niemey": 41, "r56": 41, "block_": 41, "28permutation_group_theori": 41, "r57": 41, "algorithmist": 41, "php": [41, 58, 90, 207, 214], "union_find": 41, "r58": 41, "multiply_transitive_group": 41, "r59": 41, "center_": 41, "28group_theori": 41, "centralizer_and_norm": 41, "derived_subgroup": 41, "nilpotent_group": 41, "colost": 41, "hulpk": 41, "cgt": 41, "cgtnote": 41, "__contains__": 41, "__weakref__": [41, 81], "weak": [41, 50, 81, 184, 187], "_coset_repres": 41, "hg": 41, "transvers": [41, 46, 48, 133, 134], "coset_transvers": 41, "_distinct_primes_lemma": 41, "_element": 41, "_eval_is_alt_sym_monte_carlo": 41, "05": [41, 72, 97, 176, 179], "mont": 41, "carlo": 41, "candidat": 41, "randomli": [41, 50, 51, 90, 154], "n_ep": 41, "_check_cycles_alt_sym": [41, 48], "_eval_is_alt_sym_na": 41, "only_sym": 41, "only_alt": 41, "_p_elements_group": 41, "_random_pr_init": 41, "_random_prec_n": 41, "modif": [41, 56, 86, 213, 214, 229], "69": [41, 86, 212, 229], "71": [41, 66, 86, 163], "_random_gen": 41, "append": [41, 50, 51, 86, 94, 127, 155, 180, 185, 194, 215, 227, 228, 232, 269], "accumul": [41, 225, 229], "random_pr": 41, "chosen": [41, 42, 51, 52, 63, 64, 86, 90, 93, 106, 128, 162, 165, 180, 181, 185, 187, 189, 194, 201, 204, 210, 214, 225, 239], "gh": [41, 182, 213, 220], "eventu": [41, 58, 77, 180, 181, 201, 227, 232], "_sylow_alt_sym": 41, "sylow": 41, "exercis": [41, 229, 262, 269], "p_1": [41, 46, 51, 68, 90, 177, 204, 207], "p_2": [41, 51, 68, 90, 177, 204], "p_p": 41, "sylow_subgroup": 41, "is_alt_sym": [41, 48], "_union_find_merg": 41, "parent": [41, 50, 73, 106, 170, 173, 180, 184, 185, 189, 225, 229, 239, 242, 243], "not_rep": 41, "atkinson": 41, "83": [41, 193], "87": [41, 56, 86, 90], "minimal_block": 41, "_union_find_rep": 41, "r60": 41, "r66": 41, "compress": [41, 86, 89], "r62": 41, "r68": [41, 42], "_verifi": 41, "_h": [41, 213], "gens_k": 41, "rels_k": 41, "gens_h": 41, "stabil": [41, 46, 48, 54, 99, 124, 218], "inject": [41, 50, 181, 185, 190, 265], "homomorph": [41, 186], "rels_h": 41, "strong_present": 41, "abelian_invari": 41, "nontrivi": [41, 50, 90], "isomorph": [41, 44, 181, 184, 187, 189], "t_1": [41, 55, 207], "t_2": [41, 55, 207], "t_r": [41, 125, 220], "542": 41, "adopt": [41, 220], "schreier": [41, 46, 48], "sim": [41, 46, 48, 75], "b_1": [41, 48, 58, 72, 75, 181, 204, 207, 210, 269], "b_2": [41, 48, 58, 72, 204, 210], "dot": [41, 42, 46, 48, 51, 63, 65, 72, 81, 86, 99, 114, 115, 118, 119, 120, 122, 123, 124, 125, 127, 144, 170, 174, 176, 177, 178, 179, 181, 182, 187, 190, 194, 213, 214, 232, 239, 242, 244, 245], "b_k": [41, 48, 51, 55, 58, 196, 197], "strong": [41, 46, 47, 48, 90, 91], "89": [41, 48, 77], "55": [41, 53, 55, 86, 179, 180, 190, 207], "57": [41, 86, 90, 214], "strong_gen": [41, 47, 48], "basic_transvers": [41, 48], "basic_orbit": [41, 48], "basic_stabil": 41, "baseswap": 41, "po": [41, 75, 80, 81, 109, 125, 127, 185, 212], "strong_gens_distr": [41, 48], "swap": [41, 42, 43, 81, 86, 140, 144, 153, 214, 232], "orbit": [41, 48, 160, 161, 163], "b_": [41, 46, 48, 50, 55, 58, 75, 83, 99, 196, 204, 207, 215], "b_i": [41, 46, 48, 75, 181, 204], "la": [41, 127, 165], "vega": 41, "testutil": [41, 47, 48], "_verify_bsg": [41, 47, 48], "schreier_sim": [41, 47, 48], "bsg": [41, 46, 48, 220], "102": [41, 86], "98": [41, 51, 126, 190, 210], "pseudocod": 41, "beta_": 41, "g_": [41, 48, 49, 58, 75, 207], "foral": [41, 49, 52, 165], "zg": 41, "gz": 41, "c_g": 41, "gs": [41, 75], "sg": [41, 214, 220], "is_subgroup": 41, "subgroup_search": 41, "hgh": 41, "closur": [41, 47, 73, 140, 189, 202], "composition_seri": 41, "h_0": [41, 46], "h_1": [41, 46, 213], "h_2": [41, 213], "1024": [41, 194, 214], "512": [41, 58], "128": [41, 55, 58, 60, 90, 188, 194], "32": [41, 53, 56, 58, 60, 86, 90, 97, 125, 188, 190, 191, 203, 204, 207, 214, 225], "243": [41, 58, 212], "81": [41, 55, 60, 81, 86, 90, 112, 114, 179, 193], "conjugacy_class": 41, "xax": 41, "s_3": 41, "s3": [41, 49, 99, 197, 207], "feasibl": [41, 99], "resiz": [41, 42, 81, 83], "coset_factor": 41, "factor_index": 41, "_basic_orbit": 41, "u1": [41, 90, 112, 114, 115, 116, 118, 119, 122, 124, 127, 170, 172, 173, 174, 177, 210], "u2": [41, 89, 90, 112, 114, 115, 116, 118, 119, 122, 127, 170, 173, 177, 210], "_strip": [41, 48], "coset_rank": 41, "lexicograph": [41, 42, 45, 46, 50, 187, 190, 232], "coset_unrank": 41, "standardis": [41, 184], "subsect": [41, 245], "compris": [41, 51, 83, 109, 125, 128, 190, 232], "g_0": [41, 207], "g_1": [41, 190, 201, 207, 210], "g_2": [41, 79, 201, 210], "g_i": [41, 201], "g_k": 41, "tetrahedron": [41, 43], "r64": 41, "axiom": [41, 181], "doy": 41, "sc": [41, 77], "thesi": [41, 50, 201, 239], "generator_product": 41, "sn": [41, 42, 49, 72], "is_abelian": 41, "_random_prec": 41, "probabl": [41, 50, 55, 58, 62, 90, 112, 154, 158, 204, 210, 213, 214, 226, 261, 267], "transit": [41, 127, 187, 214], "82": [41, 77, 86, 214], "proport": [41, 51, 201], "226": 41, "227": 41, "is_altern": 41, "quicker": [41, 90], "taxonomi": 41, "is_cycl": 41, "p_": [41, 46, 50, 77, 165, 207, 210, 215], "p_i": [41, 46, 90], "equiv": [41, 51, 55, 90, 189, 204, 207], "pmod": [41, 50, 51, 55, 86, 204], "p_j": [41, 46], "r65": 41, "35": [41, 44, 53, 55, 63, 64, 77, 86, 90, 114, 189, 194, 207, 210, 214], "rose": 41, "is_elementari": 41, "is_nilpot": [41, 86], "solvabl": [41, 207, 210, 213, 270], "lower_central_seri": 41, "is_solv": 41, "is_norm": [41, 158], "gr": 41, "is_perfect": [41, 90], "is_polycycl": 41, "is_primit": [41, 185, 190], "primit": [41, 50, 51, 58, 90, 154, 158, 181, 182, 184, 185, 187, 189, 190, 193, 194, 207, 259], "cardin": [41, 42, 45, 181, 202], "badli": 41, "random_stab": 41, "g3": [41, 99], "s5": 41, "is_symmetr": [41, 81], "is_transit": 41, "is_trivi": 41, "cba": [41, 215, 232], "mainli": [41, 58, 86, 91, 165, 174, 187, 204, 207, 210], "max_div": 41, "siev": [41, 90], "nonempti": 41, "gb": 41, "moreov": [41, 51, 75, 164, 175, 181, 182, 187, 195, 243], "congruenc": [41, 50, 90, 204, 207], "p_0": [41, 46, 68, 204, 207], "maxim": [41, 51, 79, 181, 185, 189, 201, 203], "intransit": 41, "normal_closur": 41, "adjoin": [41, 182], "yx": [41, 178], "73": [41, 49, 50, 63, 90, 210], "74": [41, 55, 90], "orb": 41, "78": [41, 64, 86, 90, 94, 165, 210, 214], "orbit_transvers": 41, "orbit_rep": 41, "send": [41, 50, 51, 56, 90, 181, 210, 212], "proof": [41, 44, 75, 77, 213], "79": [41, 42, 94], "pointwise_stabil": 41, "pointwis": [41, 48], "p_k": [41, 90], "p20": 41, "stab": 41, "schreier_sims_increment": [41, 48], "polycyclicgroup": 41, "eliminate_gen": 41, "gen_count": 41, "b1": [41, 46, 58, 90, 93, 94, 104, 112, 127, 170, 185, 194, 204, 207, 210, 244], "b_r": 41, "slp_dict": 41, "seq": [41, 50, 53, 86, 185, 187, 190, 200, 212, 232], "93": [41, 188], "schreier_sims_random": [41, 48], "consec_succ": 41, "consec": 41, "_succ": 41, "97": [41, 51, 90, 187], "sift": [41, 48, 232], "amend": 41, "decompos": [41, 42, 48, 50, 52, 56, 61, 86, 90, 144, 153, 154, 156, 185, 190, 193, 214], "unsuccess": [41, 48], "accordingli": [41, 182, 189], "halt": 41, "signifi": [41, 50, 190, 214], "g_t": 41, "leq": [41, 49, 51, 58, 75, 86, 90, 187, 189, 200, 201, 207, 214], "prop": [41, 189], "init_subgroup": 41, "supergroup": 41, "sought": [41, 90, 145, 155, 206, 213], "prune": 41, "prop_even": 41, "lengthi": 41, "114": [41, 90], "117": [41, 58], "terribl": 41, "crucial": [41, 49, 184], "len1": 41, "len2": 41, "len3": 41, "transitivity_degre": 41, "fold": [41, 50, 56, 194, 201, 206], "a_2": [41, 51, 72, 86, 187, 204, 207, 210, 214, 269], "a_k": [41, 51, 191, 197, 212], "arrang": [42, 99, 107, 125, 127, 203, 207, 220], "r69": 42, "reorder": [42, 49, 160, 190, 210, 214, 232], "pretty_print": [42, 78, 109, 114, 118, 119, 120, 122, 123, 125, 128, 170, 172, 173, 174, 177, 178, 194], "enter": [42, 50, 51, 55, 63, 90, 92, 93, 107, 111, 114, 122, 194, 204, 212, 225, 264, 268], "understood": [42, 90, 165, 181, 185], "economi": 42, "caution": [42, 50, 56, 206], "singleton": [42, 80, 198, 213, 250, 252, 264], "indexerror": [42, 86, 190], "autos": [42, 89], "watch": 42, "print_cycl": 42, "econom": [42, 77, 232], "retain": [42, 50, 56, 58, 77, 92, 190, 195, 203, 206], "biject": [42, 44, 51, 81, 181], "full_cyclic_form": 42, "rmul": 42, "unrank_lex": 42, "r73": 42, "zo42": 42, "from_sequ": 42, "a1": [42, 46, 50, 78, 81, 90, 94, 112, 127, 134, 210, 214, 215, 244, 269], "a2": [42, 46, 50, 79, 81, 90, 94, 112, 127, 134, 183, 214, 215, 244, 269], "a3": [42, 46, 50, 79, 81, 127, 244, 269], "perfectli": [42, 49, 50, 51, 187, 190, 193], "skiena": 42, "ma": [42, 49, 116], "1990": [42, 75, 204, 239], "r70": 42, "wendi": 42, "myrvold": 42, "ruskei": 42, "2001": [42, 90, 188], "lett": 42, "septemb": [42, 229], "281": 42, "284": [42, 90], "1016": 42, "s0020": 42, "0190": 42, "01": [42, 50, 54, 112, 154, 188, 206, 232], "00141": 42, "r71": 42, "kreher": 42, "stinson": 42, "1999": [42, 86, 188, 193, 210], "r72": 42, "graham": [42, 55, 56, 90], "patashnik": 42, "foundat": [42, 188, 189], "1994": [42, 187, 188, 190], "product_and_invers": 42, "r74": 42, "lehmer_cod": 42, "appliedpermut": 42, "magic": [42, 206, 225, 261], "attatch": 42, "_array_form": 42, "ascent": 42, "ie": [42, 207], "descent": 42, "fg": [42, 52, 210, 213], "gf": [42, 51, 181, 183, 184, 186, 187, 189], "r75": 42, "commutes_with": [42, 220], "cycle_structur": 42, "from_inversion_vector": 42, "get_adjacency_dist": 42, "n_adj": 42, "reev": 42, "colin": 42, "landscap": 42, "annal": 42, "86": [42, 86, 126, 193, 203], "473": 42, "josephu": 42, "get_precedence_matrix": 42, "get_precedence_dist": 42, "get_adjacency_matrix": 42, "get_positional_dist": 42, "subscript": [42, 185, 194, 204, 207, 232], "inversion_vector": 42, "lesser": [42, 190], "lie": [42, 52, 64, 65, 66, 190, 208, 214, 249, 256], "lehmer": 42, "ith": [42, 79, 90, 185, 191, 213, 214], "variat": [42, 50, 187, 201, 210, 231], "r76": 42, "eng": 42, "chula": 42, "piak": 42, "algo2008": 42, "htm": [42, 58, 77, 207], "is_singleton": 42, "is_odd": 42, "shuffl": [42, 86, 269], "012345": 42, "345": 42, "253": 42, "2531": 42, "25314": 42, "253140": 42, "r77": 42, "flavius_josephu": 42, "r78": 42, "josephus_problem": 42, "r79": 42, "wou": 42, "burtonl": 42, "trim": [42, 124], "unmov": 42, "mul_inv": 42, "next_nonlex": 42, "nonlex": 42, "rank_nonlex": 42, "unrank_nonlex": 42, "next_trotterjohnson": [42, 232], "trotter": 42, "johnson": [42, 86], "generate_bel": [42, 232], "rank_trotterjohnson": 42, "unrank_trotterjohnson": 42, "_af_par": 42, "pseudo": [42, 86, 90, 185, 187, 190], "inv_perm": 42, "enforc": [42, 114], "rmul_with_af": 42, "ascend": [42, 232], "r80": 42, "transposition_": 42, "28mathemat": [42, 50, 202], "flexibl": [42, 50, 112, 127, 177, 180, 184, 213, 259], "investig": [42, 75, 179, 181, 204, 232, 261], "redefin": [42, 50, 122, 124, 182, 233], "cn": [42, 194, 268], "2n": [42, 49, 55, 58, 77, 81, 100, 123, 179, 197, 204], "dn": [42, 214], "klein": 42, "s4": [42, 99], "polyhedr": 43, "psg": 43, "platon": 43, "solid": [43, 64, 180, 248], "tetrahedr": 43, "octahedr": 43, "icosahedr": 43, "r81": 43, "polyhedralgroup": 43, "polyhedra": [43, 76], "analog": [43, 49, 51, 55, 125, 177, 178, 181, 182, 183, 187, 199, 215, 232], "shadow": 43, "h5": 43, "heinz": 44, "caylei": [44, 81], "r82": 44, "labeledtre": 44, "tree_repr": 44, "prufer_rank": 44, "prev": 44, "36": [44, 51, 55, 66, 77, 81, 86, 90, 94, 190, 194, 207, 210, 214, 248], "prufer_repr": 44, "record": [44, 50, 189, 225], "to_pruf": 44, "778": 44, "779": 44, "777": [44, 53], "1296": 44, "to_tre": 44, "r83": 44, "hamberg": 44, "erlend": 44, "2010": [44, 211, 232], "06": [44, 50, 114, 179, 214], "compact": [44, 50, 96, 127, 158, 174, 190, 194, 212, 229], "next_binari": 45, "prev_binari": 45, "bitlist_from_subset": 45, "subset_from_bitlist": 45, "superset_s": 45, "iterate_binari": 45, "iterate_graycod": 45, "prev_grai": 45, "next_grai": 45, "next_lexicograph": 45, "prev_lexicograph": 45, "rank_binari": 45, "unrank_binari": 45, "rank_grai": 45, "unrank_grai": 45, "rank_lexicograph": 45, "43": [45, 86, 90, 93, 94, 214, 269], "super_set": 45, "subset_indic": 45, "ksubset": 45, "itertool": [45, 232], "tensor_can": [46, 220], "msym": 46, "contravari": [46, 86, 220, 221], "covari": [46, 52, 86, 214, 220, 221], "d0": 46, "base_i": 46, "gens_i": 46, "n_i": [46, 187, 212], "sym_i": 46, "failur": [46, 54, 67, 75, 90, 214, 225, 269], "canonicalize_na": 46, "exchang": [46, 51, 86, 179, 183, 232], "anticommut": [46, 147, 149, 159, 160, 220], "canonical_fre": 46, "slot": [46, 144, 215, 219, 220, 264], "residu": [46, 51, 90, 187, 198, 204], "tensor_gen": 46, "list_free_indic": 46, "double_coset_can_rep": 46, "reintroduc": 46, "a_": [46, 50, 51, 58, 75, 79, 81, 83, 99, 100, 125, 196, 204, 207, 210, 212, 214, 215], "antisymmetr": [46, 52, 81, 160, 220], "d2": [46, 170, 181, 201, 214, 232, 239], "ord": [46, 51, 86], "t_c": 46, "get_symmetric_group_sg": [46, 220], "bsgs_direct_product": 46, "base2a": 46, "gens2a": 46, "t0": 46, "t1": [46, 66, 67, 90, 104, 109, 207, 214], "a_m": [46, 210], "a_n": [46, 51, 58, 75, 79, 165, 182, 187, 197, 207, 210, 269], "_a": [46, 58, 160, 190], "_b": [46, 58, 160], "base_f": 46, "gens_f": 46, "base1": 46, "gens1": 46, "base_a": 46, "gens_a": 46, "sgen": 46, "s_transvers": 46, "butler": [46, 220], "portug": [46, 220], "grow": [46, 50, 75, 86, 90, 184, 187], "computation": [46, 107, 108], "absenc": [46, 80], "observ": [46, 72, 75, 149, 178, 181, 204, 207, 210, 214, 247, 269], "opposit": [46, 66, 80, 81, 104, 106, 182, 185, 202, 206, 213, 221, 232, 239, 240, 269], "ind": [46, 196, 220], "d3": [46, 201], "a0": [46, 210, 269], "a4": [46, 50, 79, 127, 269], "a5": [46, 50], "interchang": [46, 49, 75, 210], "leftrightarrow": 46, "_af_rmul": 46, "t_": [46, 55], "b0": [46, 58, 185, 204, 210], "d_": [46, 204], "p0": [46, 60, 189, 210], "dbase": 46, "recomput": [46, 190], "d_i": [46, 75, 165], "s_0": 46, "d_0": [46, 51], "b_0": [46, 51, 55, 204, 207, 210], "b_j": [46, 48, 58, 75, 204], "sx": 46, "trace": [46, 81, 83, 100, 127, 187, 194, 214, 215, 216, 218, 232, 265], "h_n": [46, 58, 77, 213], "tab1": 46, "get_transvers": 46, "antisym": 46, "base2": 46, "gens2": 46, "_cmp_perm_list": 47, "hashabl": [47, 75, 232], "ls1": 47, "ls2": 47, "_naive_list_centr": 47, "_verify_centr": 47, "_verify_normal_closur": 47, "_base_ord": 48, "base_ord": 48, "backtrack": 48, "108": [48, 90, 94], "132": [48, 55, 170], "r84": 48, "_distribute_gens_by_bas": 48, "membership": [48, 189, 202], "_strong_gens_from_distr": 48, "_orbits_transversals_from_bsg": 48, "_handle_precomputed_bsg": 48, "transversals_onli": 48, "slp": 48, "_remove_gen": 48, "new_gen": 48, "r85": 48, "r86": 48, "recurr": [49, 55, 72, 86, 189, 200, 206, 208, 210, 214, 234], "annihil": [49, 68, 69, 73, 136, 160, 212], "is_hypergeometr": 49, "binomi": [49, 54, 57, 58, 90, 190, 194, 199, 206, 210, 214, 232, 269], "rf": [49, 55, 190], "ff": [49, 51, 55, 179, 182, 183, 184, 189, 190], "speci": [49, 50], "rise": [49, 55, 58, 179, 206, 210, 214, 242], "knowledg": [49, 50, 51, 189, 210, 264, 267], "hypersimp": [49, 205], "quotient": [49, 50, 53, 56, 90, 181, 182, 184, 186, 187, 190, 204, 206, 210], "dummy_vari": 49, "stand": [49, 50, 127, 182, 184, 185, 191], "karr": 49, "quad": [49, 50, 52, 54, 58, 77, 81], "exclus": [49, 50, 80, 86, 187, 261], "contrast": [49, 50, 115, 184, 204, 210, 263], "emphas": 49, "typeset": [49, 194], "doit": [49, 50, 52, 55, 56, 58, 77, 83, 99, 137, 139, 141, 152, 154, 157, 158, 160, 170, 179, 190, 196, 201, 206, 210, 211, 214, 216, 239, 241, 242, 244, 245, 259, 264], "seemingli": [49, 213], "nonsens": [49, 58], "r87": 49, "michael": [49, 188, 193], "april": 49, "1981": [49, 188], "305": 49, "350": [49, 109], "dl": [49, 178, 188], "cfm": [49, 188], "doid": [49, 188], "322248": 49, "322255": 49, "r88": 49, "capit": [49, 51, 99, 210], "sigma_not": 49, "r89": 49, "empty_sum": 49, "euler_maclaurin": [49, 54], "eval_integr": 49, "maclaurin": [49, 54], "endpoint": [49, 50, 54, 175, 202, 245], "28333333333333": 49, "sstr": [49, 174, 194], "full_prec": [49, 194], "26629073187415": 49, "0175000000000000": 49, "soon": [49, 50, 112, 165, 191], "eval_zeta_funct": 49, "is_absolutely_converg": 49, "sequence_term": 49, "is_converg": 49, "r90": 49, "absolute_converg": 49, "prod_": [49, 55, 58, 75, 90, 165, 204], "respons": [49, 50, 98, 99, 112, 180, 227], "diverg": [49, 58, 129, 239, 246], "dirichlet": [49, 58, 214], "r91": 49, "convergence_test": 49, "reverse_ord": 49, "selector": [49, 81, 206, 232], "handi": [49, 50, 86, 194, 264], "s0": [49, 73, 75, 132], "expr_with_intlimit": [49, 77], "exprwithintlimit": [49, 77], "reorder_limit": 49, "r92": 49, "walli": 49, "w2": [49, 134], "w2e": 49, "risingfactori": [49, 57, 58, 194, 196], "combsimp": [49, 50, 55], "pe": 49, "gammasimp": [49, 50, 206], "rewrit": [49, 50, 52, 55, 56, 58, 75, 77, 80, 93, 99, 157, 190, 201, 202, 203, 206, 210, 211, 212, 213, 214, 250, 251, 263, 265], "r93": 49, "r94": 49, "capital_pi_not": 49, "r95": 49, "empty_product": 49, "r96": 49, "infinite_product": 49, "r97": 49, "expr_with_limit": [49, 77], "exprwithlimit": [49, 77], "change_index": 49, "trafo": 49, "newvar": 49, "mapsto": [49, 75, 81, 189], "p3": [49, 60, 62, 63, 65, 66, 99, 180, 184, 203, 214], "has_empty_sequ": [49, 77], "has_reversed_limit": [49, 77], "has_finite_limit": [49, 77], "____": [49, 54, 77, 132, 182, 195, 214, 232, 270], "___": [49, 54, 77, 78, 86, 182, 206, 214, 219, 232, 268], "rubric": [49, 50], "_____": [49, 214], "gosper": 49, "gosper_norm": 49, "monic": [49, 181, 182, 185, 187, 189, 190, 193], "gcd": [49, 50, 51, 86, 90, 156, 184, 185, 186, 188, 189, 190, 194, 206, 207], "gosper_term": 49, "s_n": [49, 190], "f_k": [49, 122, 187], "g_n": [49, 55, 190], "f_n": [49, 55, 58, 181, 187, 190, 210], "gosper_sum": 49, "r98": 49, "marko": 49, "petkovsek": [49, 212], "herbert": 49, "doron": 49, "zeilberg": [49, 212], "ak": [49, 196], "peter": [49, 55, 90, 126, 176, 232], "ltd": 49, "welleslei": 49, "usa": [49, 188], "1997": [49, 75, 90, 188, 204], "convert_xor": [50, 92], "09": [50, 97], "2e": 50, "xor": [50, 53, 80, 92, 194, 261], "sympifyerror": 50, "coerc": [50, 124, 187], "cooper": 50, "sage": [50, 90, 179, 263], "shouldn": [50, 191], "unsanit": [50, 233, 258], "bitcount": 50, "improperli": 50, "unbound": [50, 219], "ns": 50, "fallback": [50, 78, 160, 174, 184, 194, 212], "ast": [50, 194, 251], "00000000000000": [50, 54, 161, 194, 214], "mylist1": 50, "mylist": 50, "mylist2": 50, "xxx": [50, 77, 86, 232, 234], "autosimplif": [50, 203, 206], "kern": 50, "r101": 50, "7649": 50, "r100": 50, "r104": 50, "r102": 50, "r103": 50, "r105": 50, "r106": 50, "r107": 50, "r99": 50, "recreat": 50, "isfinit": 50, "__cacheit": 50, "maxsiz": 50, "noqa": [50, 78, 185, 228], "f811": 50, "sympy_use_cach": 50, "cot": [50, 57, 58, 92, 191, 194, 203], "_arg": [50, 56], "as_mut": [50, 82, 83], "as_content_primit": [50, 86, 182, 190], "stub": 50, "as_dummi": [50, 77], "_0": [50, 75, 81, 86, 190, 233], "_r": [50, 160, 204, 213], "bound_symbol": [50, 77], "besid": [50, 187, 212], "typeinfo": 50, "truli": [50, 58, 165], "piec": [50, 54, 204, 227], "scan": 50, "appliedundef": 50, "canonical_vari": 50, "class_kei": 50, "sorted_class": 50, "dummy_eq": 50, "eg": [50, 112, 167, 213], "fromit": 50, "has_fre": 50, "exp_polar": [50, 57, 58, 204], "rewritten": [50, 55, 56, 58, 77, 112, 157, 201, 206, 210, 212, 269], "dif": 50, "_prec": 50, "xreplac": [50, 81, 86, 170], "q_": [50, 174, 207, 210], "r_": [50, 101, 161, 191], "repl_dict": 50, "rcall": [50, 52], "simul": [50, 112, 127, 193], "abus": [50, 220], "succe": [50, 75, 80, 90, 150, 189, 201], "newtyp": 50, "intuit": [50, 165, 198, 210], "is_mul": 50, "is_add": [50, 213], "_eval_rewrit": 50, "mysin": [50, 233, 258], "_eval_rewrite_as_": 50, "_eval_rewrite_as_co": 50, "tie": [50, 232], "delai": [50, 97, 124, 203, 225, 259], "unsort": [50, 103, 169], "333333333333333333333": 50, "333333333333333314830": 50, "wildcard": [50, 206], "registri": 50, "metaprogram": 50, "address": [50, 194, 213], "mostli": [50, 56, 77, 86, 127, 155, 177, 181, 193, 194, 204, 212, 268], "__truediv__": [50, 185], "class_nam": 50, "mysingleton": 50, "_eval_is_g": 50, "_eval_is_eq": 50, "args_cnc": 50, "cset": 50, "split_1": 50, "suppress": [50, 92, 223, 230], "as_coeff_add": 50, "dep": [50, 210], "as_two_term": 50, "as_independ": [50, 213], "as_coeff_expon": 50, "as_coeffici": 50, "zz": [50, 55, 72, 73, 77, 83, 86, 87, 90, 109, 178, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 209], "coeff_monomi": [50, 190], "coeff": [50, 52, 80, 127, 185, 189, 190, 200, 206, 210, 212, 220, 269], "polytool": [50, 190, 213], "monomi": [50, 77, 80, 90, 182, 184, 185, 186, 187, 193, 194, 269], "as_coefficients_dict": 50, "inquiri": 50, "121": [50, 55, 90, 99, 170, 212], "84": [50, 54, 90], "separatevar": [50, 205, 210], "as_add": 50, "n3": [50, 112], "as_leading_term": [50, 201], "logx": [50, 201], "cdir": 50, "_eval_as_leading_term": 50, "as_numer_denom": [50, 212], "as_ordered_factor": 50, "as_ordered_term": 50, "as_powers_dict": 50, "lost": 50, "as_real_imag": [50, 56, 81, 195], "as_term": 50, "aseri": 50, "hir": 50, "asymptot": [50, 75, 99, 259], "hierarch": 50, "normalis": [50, 196], "induc": [50, 81, 189, 203, 232], "gruntz": [50, 196], "majorli": 50, "mrv": [50, 201], "overal": [50, 167, 180, 212], "rapidli": [50, 54, 75, 201], "till": [50, 93, 94, 112, 210], "r108": 50, "dominik": [50, 196], "proc": [50, 212], "1993": [50, 188], "symp": 50, "239": 50, "244": [50, 187], "r109": 50, "p90": 50, "r110": 50, "asymptotic_expans": 50, "_first": [50, 56], "distribute_order_term": [50, 206], "compute_leading_term": 50, "could_extract_minus_sign": 50, "signsimp": [50, 119, 206], "failing_express": 50, "modulu": [50, 51, 53, 58, 60, 66, 81, 90, 93, 94, 181, 185, 187, 189, 190, 193, 213], "power_bas": [50, 81], "power_exp": [50, 81], "multinomi": [50, 81, 90, 214], "expr_free_symbol": 50, "extract_addit": 50, "extract_multipl": 50, "extract_branch_factor": 50, "allow_half": 50, "fourier_seri": [50, 197], "cosin": [50, 56, 58, 65, 77, 104, 106, 170, 178, 190, 191, 197, 203, 214, 239, 269], "hyper": [50, 55, 58, 69, 72, 194, 196, 204, 206, 212, 214, 269], "geto": 50, "getn": 50, "is_algebraic_expr": 50, "is_rational_funct": 50, "r111": 50, "algebraic_express": 50, "is_const": 50, "constanc": 50, "agre": [50, 51, 58, 65, 75, 204], "decis": [50, 56, 77, 203, 212, 227], "test_expr": 50, "prove": [50, 75, 77, 86, 181, 201, 210, 244], "failing_numb": 50, "is_meromorph": 50, "meromorph": [50, 58], "multivalu": [50, 56], "cut": [50, 55, 56, 58, 66, 75, 181, 204, 229, 235, 269], "hit": [50, 264], "is_polynomi": 50, "rational_funct": 50, "leadterm": 50, "xlim": [50, 180], "lseri": 50, "exaxmpl": 50, "nseri": 50, "_eval_nseri": 50, "innermost": 50, "disadvantag": 50, "met": [50, 207, 213, 228, 269], "nsimplifi": [50, 54, 205], "ratsimp": [50, 205], "removeo": [50, 127, 194, 259], "chop": [50, 54, 58, 81, 86, 212, 258], "123": [50, 55, 60, 80, 157, 170, 232, 239, 240], "lazi": [50, 83, 190], "smooth": [50, 54, 90, 196], "taylor_term": [50, 56], "previous_term": [50, 56], "dummy_index": 50, "temporari": [50, 226], "_dummy_10": 50, "contigu": [50, 204, 227], "x4": [50, 55, 184], "x5": [50, 55, 184], "x6": [50, 184], "x7": [50, 184], "x8": [50, 184], "x9": [50, 184], "x50": 50, "x51": 50, "y0": [50, 69, 71, 73, 210], "y1": [50, 127], "y2": [50, 127, 184], "y3": [50, 184], "y4": 50, "xa": [50, 182, 187], "xb": [50, 235], "xc": [50, 159, 235], "disambigu": 50, "x01": 50, "x02": 50, "x11": 50, "x12": 50, "escap": [50, 92, 180, 194, 235], "newli": [50, 75, 204], "undefinedfunct": [50, 172, 194, 226, 233], "f821": [50, 228], "cofactor": [50, 86, 185, 187, 190], "lcm": [50, 90, 185, 186, 187, 190, 194], "50000000000000": [50, 54], "100000000000000000000": 50, "1e20": 50, "00000000000000e": 50, "23456789123456789": 50, "23456789123457": 50, "00100": 50, "sent": [50, 77, 206], "789": [50, 90], "123_456": 50, "123456789": 50, "12e": 50, "012": 50, "60e2": 50, "6000": 50, "600e": 50, "125": [50, 54, 77, 90, 185, 200, 207], "099609": 50, "12500": 50, "12500000000000000000": 50, "disallow": [50, 190, 195, 206, 228], "closest": [50, 63], "5404319552844595": 50, "54": [50, 57, 86, 94, 187, 193, 232], "29999999999999998890": 50, "30000000000000000000": 50, "_mpf_": [50, 184], "prec": [50, 60, 66, 90, 97, 179, 185, 190, 191, 206, 212], "4915": 50, "70": [50, 51, 67, 77, 86, 90, 193, 194, 207, 214, 235], "307": 50, "mpf": [50, 184, 185], "is_float": 50, "unprejud": 50, "3602879701896397": 50, "18014398509481984": [50, 206], "limit_denomin": 50, "320": 50, "75": [50, 53, 214, 239], "use_tri": [50, 90], "use_rho": [50, 90], "use_pm1": [50, 90], "factorint": [50, 90, 189, 190, 229], "cheap": [50, 90], "trial": [50, 90, 187, 199, 203, 210, 214], "max_denomin": 50, "1000000": [50, 90], "141592653589793": 50, "311": [50, 90], "discard": [50, 189, 194, 213], "99999999999999999999": 50, "hookrightarrow": 50, "minpoli": [50, 184, 185, 189], "dmp": [50, 181, 185, 186, 190], "complexrootof": [50, 86, 185, 190, 210], "anp": [50, 184, 185, 189, 190], "to_list": [50, 183, 185], "recal": [50, 86, 187, 189, 204, 261, 263, 264, 270], "crootof": [50, 190, 210, 212], "minpoly_of_el": 50, "414213562": 50, "scratch": [50, 165], "6x": [50, 187], "to_number_field": [50, 189], "to_root": 50, "primitive_el": [50, 184, 185, 189], "knew": [50, 269], "golden": [50, 54, 90], "5th": [50, 127, 187, 189], "cyclotom": [50, 185, 186, 187, 188, 189, 190], "cyclotomic_poli": [50, 189, 190], "61803398874989": 50, "2i": 50, "a6": 50, "a6_wrong": 50, "309016994374947": 50, "951056516295154": 50, "field_el": 50, "is_alias": 50, "is_primitive_el": 50, "native_coeff": 50, "nativ": [50, 99, 185, 190, 225], "to_algebraic_integ": 50, "to_primitive_el": 50, "neq": [50, 56, 58, 75, 77, 81, 165, 178, 179, 187, 190, 207, 210, 212, 269], "Its": [50, 56, 66, 127, 158, 187, 194, 202], "a_prim": 50, "number_cl": 50, "greatest": [50, 55, 60, 90, 182, 184, 185, 187, 188, 190, 193], "euclid": [50, 187, 188], "r112": 50, "euclidean_algorithm": 50, "r113": 50, "r114": 50, "1_": 50, "28number": 50, "r115": 50, "88": [50, 86, 90], "921_": 50, "r116": 50, "one_half": 50, "holder": 50, "ieee": [50, 51], "754": 50, "r117": 50, "affin": [50, 51, 65, 181], "compactif": 50, "r118": 50, "tild": [50, 56, 215], "undetermin": [50, 86, 190, 196, 210, 212], "phase": [50, 77, 97, 129, 132, 134, 144, 145, 213], "718281828": 50, "napier": 50, "r119": 50, "e_": [50, 55, 86], "28mathematical_const": 50, "r120": 50, "imaginary_unit": [50, 194], "141592654": 50, "circumfer": [50, 60], "diamet": [50, 60], "is_irr": 50, "r121": 50, "mascheroni": [50, 58], "5772157": 50, "recur": 50, "harmon": [50, 57, 90, 101, 139, 179, 194, 255], "lim": [50, 201, 259], "limits_": [50, 179, 196, 263], "ln": [50, 56, 77, 194, 196, 210, 214, 269], "r122": 50, "93mascheroni_const": 50, "91596559": 50, "r123": 50, "27s_constant": 50, "r124": 50, "golden_ratio": 50, "tribonacci": [50, 57], "fibonacci": [50, 54, 57, 90], "predetermin": [50, 225], "8392867552141611326": 50, "r125": 50, "generalizations_of_fibonacci_numb": [50, 55], "tribonacci_numb": [50, 55], "modulo": [50, 51, 87, 90, 156, 181, 183, 184, 185, 187, 189, 190, 191, 193, 194, 197, 206], "r126": 50, "modular_multiplicative_invers": 50, "r127": 50, "extended_euclidean_algorithm": 50, "oscil": [50, 255], "conform": [50, 213, 218, 219], "r128": 50, "r129": 50, "zero_to_the_power_of_zero": 50, "r130": 50, "indeterminate_form": 50, "as_base_exp": [50, 56, 57, 232], "floor": [50, 57, 90, 184, 185, 194, 214], "geq": [50, 51, 58, 86, 190, 207, 214, 269], "factor_": [50, 51, 90, 190, 207], "perfect_pow": [50, 90], "infix": 50, "matmul": [50, 83, 183], "as_coef_mul": 50, "undesir": [50, 103, 112, 124, 182, 185, 204], "4596": 50, "compound": [50, 116, 158, 198, 252], "5728": 50, "suspect": [50, 90], "5706": 50, "moot": 50, "off": [50, 60, 75, 81, 89, 91, 114, 144, 181, 190, 194, 210, 225, 236, 239, 263], "nb": 50, "sensit": [50, 99, 127, 180, 187, 206, 225], "assocop": 50, "quadrat": [50, 51, 77, 90, 181, 185, 189, 190, 207, 212, 214], "matadd": [50, 83, 194], "as_coef_add": 50, "extract_leading_ord": 50, "commutative_part": 50, "noncommutative_part": 50, "order_symbol": 50, "subprocess": [50, 194, 225, 226], "dividend": [50, 185], "rop": 50, "validrelationoper": 50, "rel_op": 50, "fourth": [50, 51, 182, 210, 259], "my_equ": 50, "my_inequ": 50, "reversedsign": 50, "cosh": [50, 57, 58, 69, 75, 191, 194, 195, 204, 206, 212, 265, 269], "_eval_eq": 50, "respond": 50, "boolalg": [50, 80], "client": [50, 229], "counterpart": [50, 51, 210, 259], "litter": 50, "oddbal": 50, "minor": [50, 60, 86, 194, 225], "caveat": [50, 190, 250, 257, 261], "succinctli": 50, "coupl": [50, 86, 124, 139, 154, 157], "annoy": 50, "succinct": 50, "occasion": 50, "r131": 50, "operar": 50, "circuit": [50, 144, 147], "greaterthanobject": 50, "__bool__": 50, "335": 50, "march": 50, "2012": 50, "r132": 50, "r133": 50, "r134": 50, "mdarg": 50, "fgh": 50, "vsin": 50, "vdiff": 50, "narg": [50, 57, 187], "naturals0": [50, 194, 213, 214], "evalul": 50, "fairli": [50, 58, 75, 114, 121, 169, 181], "conserv": [50, 107, 123, 171, 241, 246, 247], "136": [50, 86], "indirect": [50, 52, 58, 90, 160, 210], "fx": [50, 52, 180, 210, 211], "fxx": 50, "insconsist": 50, "presenc": [50, 56, 80, 111, 115, 124, 210, 218], "nonvanish": 50, "_eval_deriv": [50, 58], "_diff_wrt": 50, "_sort_variable_count": 50, "vc": 50, "vsort": 50, "collaps": [50, 154, 206], "vsort0": 50, "vi": 50, "dfx": 50, "equidist": 50, "sq2": 50, "xl": 50, "d2fdxdy": 50, "doit_numer": 50, "z0": [50, 201], "unifi": [50, 128, 183, 185, 186, 187, 189, 190, 202], "zeroth": [50, 189], "idiff": [50, 67], "r135": 50, "legaci": [50, 77, 86, 214], "v5_2": 50, "infunct": 50, "algebraiccomput": 50, "f_real": [50, 57], "f_real_inherit": [50, 57], "_eval_is_assumpt": [50, 57], "my_func": [50, 57], "goe": [50, 57, 86, 201, 204, 213, 261, 264], "honour": [50, 57], "is_singular": [50, 57, 73], "holomorph": [50, 57, 75], "superfici": 50, "unexpect": [50, 225], "ss": [50, 185], "trig": [50, 77, 190, 194, 203, 206, 269], "denom": [50, 184, 185, 189, 206], "_eval_expand_bas": 50, "_eval_expand_complex": 50, "shut": [50, 190], "unwant": [50, 212, 232], "alphabet": [50, 51, 99, 165, 182, 207, 227], "expand_hint": 50, "_eval_expand_hint": 50, "liabl": [50, 80], "metahint": 50, "myclass": 50, "_eval_expand_doubl": 50, "hyperexpand": [50, 58, 72, 75, 204], "div": [50, 182, 184, 185, 190, 194, 206, 264], "horner": [50, 127, 187, 190], "untouch": 50, "dkei": 50, "mixin": [50, 232], "maxn": [50, 54, 81], "subresult": [50, 185, 188, 190], "000100000000000000": 50, "maxprec": 50, "quadratur": [50, 54, 77, 210], "tanh": [50, 54, 57, 77, 191, 194, 206, 269], "oscillatori": [50, 54, 199], "osc": [50, 54], "advers": 50, "1e16": 50, "291": 50, "builtin": [50, 185, 194, 202, 235, 268], "speedup": [50, 86, 91, 187, 191, 233], "framework": [50, 112, 219, 225, 227, 233], "slice": [50, 80, 81, 86, 92, 185, 190, 200, 202, 206, 215, 232], "parametris": [50, 202], "element_kind": [50, 81, 202], "tuple_count": 50, "setkind": [50, 81, 252], "isprimit": 50, "_gcd_term": 50, "terms_gcd": [50, 185, 190], "entiti": [50, 60, 63, 64, 66, 67, 75, 112, 125, 175, 213, 247, 256, 265], "arguement": 50, "broad": [50, 264], "lex": [50, 78, 174, 182, 184, 185, 187, 190, 191, 193, 194, 206], "grlex": [50, 78, 174, 185, 190, 193, 194], "grevlex": [50, 78, 174, 182, 187, 190, 193, 194], "rev": 50, "unaffect": [50, 213], "_node": 50, "fastest": [50, 55, 77, 90, 91, 191], "undecor": 50, "expens": [50, 124, 203, 210, 211, 212, 228, 265], "ineffici": [50, 86, 184], "breaker": 50, "hash": [50, 185, 187, 195, 206, 210, 225, 227], "collis": [50, 89], "wast": [50, 87, 183], "candid": [50, 86, 90, 187, 206], "rng": 50, "getstat": 50, "intention": 50, "tn": 50, "td": [50, 194, 268], "randrang": 50, "999": [50, 54], "238": [50, 90], "randint": [50, 86, 187], "ri": [50, 194], "rv": [50, 203, 214, 232], "nonbas": 50, "postord": 50, "descend": [50, 181, 189, 227], "children": [50, 51, 184, 229], "subtre": [50, 194, 229], "educ": [51, 86], "cryptograph": 51, "encrypt": 51, "hide": [51, 194], "cipher": 51, "vigener": 51, "hill": [51, 58, 107, 126, 170, 176, 239], "bifid": 51, "rsa": 51, "kid": 51, "feedback": [51, 96, 99, 262], "elgam": 51, "plaintext": [51, 194], "ciphertext": 51, "monoalphabet": 51, "polyalphabet": 51, "crypto": 51, "az": [51, 207], "uppercas": [51, 204], "hello": [51, 232], "world": [51, 115, 124, 232], "helloworld": 51, "check_and_join": 51, "padded_kei": 51, "puppi": 51, "opqrstuvwxi": 51, "puyoqrstvwx": 51, "artist": 51, "aphras": 51, "ara": 51, "hp": 51, "cycle_list": 51, "encipher_shift": 51, "msg": [51, 77], "secret": 51, "decipher_shift": 51, "gonavybeatarmi": 51, "ct": [51, 79, 187], "hpobwzcfbubsnz": 51, "deciph": 51, "l1": [51, 60, 62, 63, 106, 109, 125, 185, 187, 190, 207, 214], "l2": [51, 62, 63, 106, 109, 146, 162, 185, 187, 214], "caesar": 51, "juliu": 51, "suetoniu": 51, "protect": [51, 194], "militari": 51, "nephew": 51, "augustu": 51, "reportedli": 51, "r136": 51, "caesar_ciph": 51, "r137": 51, "caesarsmethod": 51, "encipher_rot13": 51, "rot13": 51, "caeser": 51, "midwai": 51, "decipher_rot13": 51, "r138": 51, "decrypt": 51, "tbanilorngnezl": 51, "encipher_affin": 51, "_invers": 51, "cx": [51, 94], "recov": [51, 77, 165, 187, 189, 190, 207, 210], "decipher_affin": 51, "r139": 51, "affine_ciph": 51, "reciph": 51, "navi": 51, "beat": 51, "armi": 51, "trobmvenbgbalv": 51, "encipher_atbash": 51, "enciph": 51, "atbash": 51, "hebrew": 51, "decipher_atbash": 51, "tlmzebyvzgzinb": 51, "r140": 51, "encipher_substitut": 51, "oeyag": 51, "034": 51, "60n": 51, "v4b3": 51, "rm4": 51, "immateri": 51, "anyv": 51, "wherebi": 51, "r141": 51, "substitution_ciph": 51, "encipher_vigener": 51, "me": [51, 112, 127, 170, 194, 216], "mondai": 51, "qrgkkthrzqebpr": 51, "krypto": 51, "sculptur": 51, "cia": 51, "headquart": 51, "r143": 51, "decipher_vigener": 51, "alp": 51, "palimpsest": 51, "emufphzlrfaxyusdjkzldkrnshgnfivj": 51, "betweensubtleshadingandtheabsenc": 51, "blais": 51, "sixteenth": 51, "centuri": [51, 181], "diplomat": 51, "accid": [51, 233], "invent": [51, 189, 212, 263], "giovan": 51, "batista": 51, "belaso": 51, "1553": 51, "civil": [51, 93], "war": 51, "confederaci": 51, "brass": 51, "nsa": 51, "museum": 51, "fort": 51, "mead": 51, "r142": 51, "sender": 51, "assembl": [51, 75, 114, 201], "concaten": [51, 81], "frequenc": [51, 77, 97, 99, 134, 136, 144, 161], "kasiski": 51, "discov": [51, 75, 103, 218, 265], "babbag": 51, "unbreak": 51, "ye": [51, 80, 210], "gonavybeatarmyyesyoucan": 51, "gold": 51, "auto_kei": 51, "goldbuggonavybeatarmyy": 51, "mcydwshkogamkzcelyfgayr": 51, "pt": [51, 59, 60, 61, 63, 64, 65, 66, 200], "vigenere_ciph": 51, "archiv": [51, 126, 207], "20071116100808": 51, "r144": 51, "filebox": 51, "vt": 51, "batman": 51, "goo": 51, "gl": 51, "ijr22d": 51, "decod": 51, "qrgk": 51, "kt": [51, 116], "hrzqe": 51, "bpr": 51, "meetmeonmondai": 51, "encipher_hil": 51, "z_": [51, 206], "r145": 51, "lester": 51, "1920": 51, "r146": 51, "polygraph": 51, "bare": [51, 107], "ceil": [51, 57, 90, 106, 194], "l_1": [51, 55, 100, 179, 204, 220], "l_t": 51, "c_t": 51, "l_i": [51, 179, 204], "decipher_hil": 51, "hill_ciph": 51, "june": [51, 86], "juli": [51, 207], "1929": 51, "306": 51, "312": [51, 170, 212, 239, 240], "ueqdueodoctcwq": 51, "st": [51, 77, 160], "hjeb": 51, "stqq": 51, "ispk": 51, "stzz": 51, "hd": 51, "ormv": 51, "IS": 51, "uiki": 51, "encipher_bifid": 51, "polybiu": 51, "printabl": 51, "bifid5": 51, "decipher_bifid": 51, "encipher_bifid5": 51, "encipher_bifid6": 51, "r147": 51, "bifid_ciph": 51, "ieilhhfstsfqy": 51, "ieilh": 51, "hfst": 51, "fqyej": 51, "bmtwmg": 51, "bio": 51, "gold_bug": 51, "hg2sfuei7t": 51, "pug": 51, "heldo": 51, "wor6d": 51, "bifid5_squar": 51, "5x5": 51, "cap": [51, 54, 160, 202, 213], "tradition": [51, 58], "decipher_bifid5": 51, "round_trip": 51, "josi": 51, "osi": 51, "iosi": 51, "qiq": 51, "1901": 51, "felix": 51, "delastel": 51, "onto": [51, 63, 64, 65, 75, 79, 86, 89, 91, 189], "helen": 51, "cryptanalysi": 51, "german": 51, "fridai": 51, "ieilehfstsfxe": 51, "okai": 51, "decipher_bifid6": 51, "8am": 51, "kfkljjhf5mmmktfrgpl": 51, "meetmeonmondayat8am": 51, "bifid6_squar": 51, "6x6": 51, "rsa_public_kei": 51, "totient": [51, 90], "carmichael": [51, 90], "p_n": [51, 55, 58, 77], "multiprim": 51, "_n": [51, 55, 58, 77, 204, 213], "land": 51, "rad": [51, 97, 112, 189], "reduced_toti": [51, 90], "uniquenss": 51, "rsa_private_kei": 51, "e_0": 51, "canonicalz": 51, "61": [51, 55, 66, 86, 90, 196], "53": [51, 53, 86, 129, 182, 184, 185], "3233": 51, "797": 51, "1577": 51, "multipow": 51, "cryptosystem": 51, "coprim": [51, 77, 90, 156, 187, 207], "30030": 51, "becam": [51, 121], "hardest": 51, "claim": [51, 178, 204, 213], "encipher_rsa": 51, "decipher_rsa": 51, "r148": 51, "rsa_": 51, "28cryptosystem": 51, "r149": 51, "cacr": 51, "uwaterloo": 51, "techreport": 51, "2006": [51, 203], "cacr2006": 51, "r150": 51, "springer": [51, 77, 90, 187, 188, 210], "1007": 51, "2fbfb0055738": 51, "r151": 51, "itii": 51, "manuscript": 51, "1381": 51, "2753": 51, "413": 51, "1193": 51, "823": 51, "r152": 51, "r153": 51, "r154": 51, "r155": 51, "bmod": [51, 194], "vice": [51, 77, 90, 93, 150, 170, 181, 185, 242, 243, 261], "versa": [51, 77, 90, 93, 150, 170, 181, 185, 242, 243, 261], "asymmetr": [51, 66], "puk": 51, "prk": 51, "chines": [51, 90, 187], "k_1": [51, 90, 187, 204], "k_2": 51, "k_n": [51, 187], "p_3": [51, 177], "k_3": 51, "moduli": [51, 90, 187], "2048": [51, 90, 194], "overhead": [51, 91, 191], "modular": [51, 90, 156, 186, 188, 213], "crt": [51, 90, 187], "overcompens": 51, "theorit": 51, "new_msg": 51, "kid_rsa_public_kei": 51, "grade": [51, 78, 174, 190], "school": [51, 203], "bob": [51, 106], "369": 51, "58": [51, 86, 220], "kid_rsa_private_kei": 51, "encipher_kid_rsa": 51, "200": [51, 81, 86, 90, 93, 97, 239], "161": 51, "decipher_kid_rsa": 51, "pub": [51, 239], "pri": 51, "encode_mors": 51, "sep": [51, 194, 211, 225], "mors": 51, "attack": 51, "flank": 51, "r156": 51, "morse_cod": 51, "decode_mors": 51, "word_sep": 51, "mc": [51, 116], "east": 51, "r157": 51, "lfsr_sequenc": 51, "lfsr": 51, "c_k": 51, "x_k": [51, 187], "golomb": [51, 90], "g157": 51, "autocorrel": 51, "lim_": [51, 56, 58, 75, 77, 201, 259, 263], "balanc": [51, 126, 181, 214, 225], "solomon": 51, "aegean": 51, "park": 51, "laguna": 51, "1967": [51, 188], "lfsr_autocorrel": 51, "lfsr_connection_polynomi": 51, "massei": 51, "m158": 51, "jame": [51, 187], "synthesi": 51, "bch": 51, "tran": 51, "122": [51, 53, 58], "127": [51, 90], "elgamal_public_kei": 51, "elgamal_private_kei": 51, "1031": 51, "636": 51, "212": [51, 77, 188], "mathmat": 51, "dlp": 51, "is_primitive_root": [51, 90], "encipher_elgam": 51, "c2": [51, 60, 67, 81, 83, 146, 160, 202, 210, 212, 214, 241, 244, 270], "encryp": 51, "decipher_elgam": 51, "eucliden": 51, "dh_public_kei": 51, "dh_private_kei": 51, "_p": [51, 160, 185, 187, 189, 201, 204, 212], "_g": 51, "diffi": 51, "hellman": [51, 90], "publicli": 51, "secretli": 51, "dh_shared_kei": 51, "sk": 51, "gm_public_kei": 51, "goldwass": 51, "micali": 51, "gm_private_kei": 51, "b_n": [51, 55, 79, 181, 197], "jacobi_symbol": [51, 90], "reconstruct": [51, 86, 187, 264], "residuos": 51, "entropi": [51, 214], "encipher_gm": 51, "public_kei": 51, "gm": [51, 163], "decipher_gm": 51, "encipher_railf": 51, "rail": 51, "railfenc": 51, "horel": 51, "ollwd": 51, "r160": 51, "rail_fence_ciph": 51, "decipher_railf": 51, "diffgeom": 52, "resembl": [52, 58, 77, 219], "euclidean": [52, 63, 65, 170, 185, 187, 190], "r161": 52, "chart": [52, 180], "parameter": [52, 59, 60, 63, 66, 207], "r162": 52, "sussman": 52, "wisdom": 52, "farr": 52, "2013": [52, 62, 81, 267], "geometr": [52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 86, 129, 178, 181, 188, 214, 256, 265], "tranform": 52, "cartesian": [52, 93, 128, 133, 147, 150, 155, 175, 180, 181, 202, 213, 232, 242, 243, 245, 246], "polar": [52, 56, 58, 60, 66, 76, 93, 101, 130, 180, 202, 206, 213, 255], "relation_dict": 52, "car2d": 52, "pol": 52, "coordinatesymbol": 52, "jacobian": [52, 86, 124, 212], "jacobian_determin": 52, "r163": 52, "coordinate_system": 52, "base_oneform": 52, "coord_index": 52, "oneform": 52, "base_scalar": 52, "basescalarfield": 52, "base_vector": [52, 239], "coord_funct": 52, "to_si": 52, "coord": [52, 65, 67, 103, 158, 173], "immutabledensematrix": [52, 81, 82, 83, 84, 214, 233], "rn": 52, "r2_r": 52, "r2_p": 52, "jacobian_matrix": 52, "point_to_coord": 52, "coord_si": [52, 241], "imbu": 52, "difficulti": [52, 113], "arriv": [52, 187, 204, 206, 210, 214, 269], "inappropri": 52, "poin": 52, "unappropri": 52, "fy": [52, 180, 211], "ftheta": 52, "basevectorfield": 52, "point_p": 52, "point_r": 52, "s_field": 52, "dxi": 52, "v1": [52, 63, 86, 109, 127, 170, 171, 173, 214, 233, 239, 241, 242, 243, 244], "v2": [52, 63, 86, 109, 170, 171, 173, 233, 239, 241, 242, 243, 244], "v_1": [52, 189, 212], "v_2": [52, 189], "e_x": [52, 220], "e_i": [52, 181, 204, 220], "e_r": 52, "c_xy": 52, "c_xr": 52, "unfortun": [52, 54, 91, 193, 207], "e_rho": 52, "form_field": 52, "exterior": [52, 66], "dg": 52, "tensorproduct": [52, 157, 159, 215, 216], "multilinear": 52, "wedg": [52, 75], "tp1": 52, "tp": [52, 132, 159, 185], "wedgeproduct": 52, "wp1": 52, "liederiv": 52, "v_field": 52, "transport": 52, "pushforward": 52, "e_theta": 52, "basecovarderivativeop": 52, "christoffel": 52, "metric_to_christoffel_2nd": 52, "ch": [52, 86, 207], "cvd": 52, "covarderivativeop": 52, "intcurve_seri": 52, "vector_field": [52, 245], "start_point": 52, "dt": [52, 58, 115, 127, 169, 170, 172, 177, 178, 210, 269], "f_i": [52, 75, 86, 187, 191], "movement": 52, "predefin": [52, 127, 184, 194, 195, 206, 213, 220, 239, 243, 251], "intcurve_diffequ": 52, "init_cond": 52, "f_1": [52, 55, 58, 75, 99, 108, 111, 128, 181, 187, 190, 210], "f_0": [52, 55, 108, 187], "vectors_in_basi": 52, "kept": [52, 162, 178, 232, 264], "twoform_to_matrix": 52, "twoform": 52, "e_j": 52, "metric_to_christoffel_1st": 52, "levi": [52, 58, 214, 220], "civita": [52, 58, 220], "metric_to_riemann_compon": 52, "riemann": [52, 55, 56, 57, 75, 181, 206, 220], "non_trivial_metr": 52, "dtheta": 52, "drho": 52, "metric_to_ricci_compon": 52, "ricci": 52, "fft": [53, 127], "ifft": 53, "ntt": 53, "intt": 53, "fwht": 53, "ifwht": 53, "mobius_transform": 53, "inverse_mobius_transform": 53, "convolution_fft": 53, "convolution_ntt": 53, "convolution_fwht": 53, "convolution_subset": 53, "covering_product": 53, "intersecting_product": 53, "radix": 53, "r164": 53, "coolei": 53, "93tukey_fft_algorithm": 53, "r165": 53, "fastfouriertransform": 53, "r166": 53, "r167": 53, "ring": [53, 73, 86, 87, 177, 182, 183, 186, 187, 189, 190, 191, 192, 193, 194, 232], "pz": [53, 97, 220], "643": [53, 90], "767": 53, "387": 53, "415": 53, "384": 53, "353": [53, 86], "r168": 53, "apfloat": 53, "r169": 53, "numbertheoretictransform": 53, "r170": 53, "discrete_fourier_transform_": 53, "r171": 53, "r172": 53, "r173": 53, "wht": 53, "r174": 53, "hadamard_transform": 53, "r175": 53, "fast_walsh": 53, "93hadamard_transform": 53, "r176": 53, "r177": 53, "mobiu": [53, 90], "lattic": [53, 207], "bitmask": 53, "r178": 53, "b6bius_inversion_formula": 53, "r179": 53, "csail": 53, "mit": 53, "rrw": 53, "conv": 53, "r180": 53, "arxiv": [53, 86, 101, 232], "1211": 53, "0189": 53, "r181": 53, "r182": 53, "r183": 53, "888": 53, "444": 53, "1283": 53, "19351": 53, "14219": 53, "15502": 53, "44": [53, 55, 86, 90, 203, 214], "41": [53, 60, 86, 90, 185, 207], "63": [53, 86, 90], "r184": 53, "convolution_theorem": 53, "r185": 53, "333": [53, 90], "555": 53, "222": 53, "666": 53, "15555": 53, "19404": 53, "r186": 53, "r187": 53, "56": [53, 77, 90, 190], "68": [53, 78, 86, 90, 207], "48": [53, 60, 94, 207, 212, 214, 259], "2057": 53, "1870": 53, "r188": 53, "radioeng": 53, "cz": [53, 207], "fulltext": 53, "2002": [53, 181, 188, 191], "02_03_40_42": 53, "r189": 53, "r190": 53, "r191": 53, "AND": [53, 80, 246], "327": [53, 210], "r192": 53, "44288293815837": 54, "4429": 54, "4428829381583662470158809900606936986146216893757": 54, "28902548222223624241": 54, "091999668350375232456": 54, "14159265358979": [54, 58, 212], "333333333333333": [54, 184, 206], "1415926535": 54, "7182818284": 54, "\u03c0": [54, 132, 194, 213, 259, 263, 269, 270], "100000": [54, 90, 97], "951": 54, "95678796130331164628399634646042209010610577945815": 54, "gmpy": [54, 184, 185, 268], "googl": [54, 179, 180, 213], "100000000000000": 54, "1000000000": 54, "125000000000000000000000000000": 54, "100000000000000005551115123126": 54, "100000000000000000000000000000": 54, "1415": 54, "uncertainti": [54, 165], "003": 54, "31417": 54, "propag": [54, 63, 131, 134], "5000": [54, 93], "50000000000000000000000000000": 54, "varphi": [54, 58, 189, 194, 210], "erron": 54, "goldenratio": [54, 195, 206], "34665576869e": 54, "208": [54, 190], "64613129282185e": 54, "60123853010113e": 54, "210": [54, 90, 207], "thousand": [54, 90, 258], "precisionexhaust": 54, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 54, "binet": 54, "104": 54, "1336": 54, "portion": [54, 66, 81, 86], "meaningless": 54, "012297": 54, "9562288417661": 54, "956": 54, "29128599706266": 54, "2912859970626635404072825905956005414986193682745": 54, "14159265358979323846264338328": 54, "integrand": [54, 58, 74, 75, 77, 204], "struggl": [54, 193], "346": 54, "34635637913639": 54, "dealt": [54, 75], "504067061906928": 54, "50406706190692837199": 54, "wrap_lin": [54, 77, 78, 86, 94, 174, 181, 182, 193, 194, 210], "intgrl": 54, "extrapol": [54, 201], "richardson": [54, 201, 213], "slowli": [54, 201], "64493406684823": 54, "577215664901533": 54, "57721566490153286060651209008240243104215933593992": 54, "10000000": [54, 190], "20000000": [54, 190], "693147255559946": 54, "tune": [54, 78, 174, 194], "worthwhil": 54, "hypergeometr": [54, 55, 57, 68, 70, 74, 75, 188, 198, 205, 210, 212, 214, 250, 269], "ramanujan": [54, 55, 90], "9801": 54, "1103": 54, "26390": 54, "396": [54, 112], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 54, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 54, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 54, "355": [54, 90, 188], "113": [54, 90, 207], "33333": [54, 77], "635": 54, "504": [54, 188], "130198866629986772369127970337": 54, "49": [54, 55, 90, 94, 187, 207], "___________": [54, 94, 210], "k_sym": 55, "binom": [55, 90, 214, 269], "dotsc": [55, 196], "j_1": [55, 139, 140, 157, 179, 196, 215], "j_2": [55, 139, 140, 157, 179, 196], "dotsb": [55, 196], "atop": [55, 58, 196, 204], "2j_2": [55, 196], "3j_2": [55, 196], "j_": [55, 58, 75, 77, 157, 196, 204, 263], "877": 55, "4140": 55, "21147": 55, "115975": 55, "846749014511809332450147": 55, "r193": 55, "bell_numb": 55, "r194": 55, "bellnumb": 55, "r195": 55, "bellpolynomi": 55, "6k": 55, "66": [55, 81, 86, 194], "1000001": 55, "r196": 55, "bernoulli_numb": 55, "r197": 55, "bernoulli_polynomi": 55, "r198": 55, "bernoullinumb": 55, "r199": 55, "bernoullipolynomi": 55, "_k": [55, 58, 77, 179, 189, 214], "sake": [55, 207], "expand_func": [55, 58], "6435": 55, "pascal": [55, 90], "4th": [55, 56, 72, 86, 90, 127], "195": 55, "r200": 55, "johndcook": 55, "binomial_coeffici": [55, 90], "c_n": [55, 58, 79, 210], "429": [55, 194], "1430": 55, "4862": 55, "39764993382373624267": 55, "020884341620842555705": 55, "r201": 55, "catalan_numb": 55, "r202": 55, "catalannumb": [55, 194], "r203": 55, "r204": 55, "geomet": [55, 181], "mathcircl": 55, "2j": [55, 187, 214], "r209": 55, "e_k": [55, 187], "1385": 55, "2702765": 55, "4096": 55, "r205": 55, "euler_numb": 55, "r206": 55, "eulernumb": 55, "r207": 55, "alternating_permut": 55, "r208": 55, "alternatingpermut": 55, "ii": [55, 77, 90, 190, 194, 210], "swing": 55, "derang": [55, 232], "r211": 55, "generate_derang": [55, 232], "r210": 55, "r212": 55, "double_factori": 55, "texttt": [55, 202], "r213": 55, "r214": 55, "paul": [55, 229], "235": 55, "268": 55, "1995": [55, 188, 206, 212], "f_z": [55, 175, 245], "f_2": [55, 75, 99, 108, 111, 128, 187, 204, 210], "r216": 55, "fibonacci_numb": 55, "r217": 55, "fibonaccinumb": 55, "t_0": [55, 207], "149": [55, 90], "r218": 55, "r219": 55, "tribonaccinumb": 55, "r220": 55, "oei": [55, 90], "a000073": 55, "operatornam": [55, 56, 58, 75, 77, 179, 182, 190, 194, 197, 202, 204, 212], "137": [55, 86, 101], "205": [55, 75, 204], "144": [55, 77, 179], "5269": 55, "761": 55, "280": 55, "83711": 55, "27720": 55, "30247": 55, "9900": 55, "983697455232980674869851942390639915940": 55, "r221": 55, "harmonic_numb": 55, "r222": 55, "harmonicnumb": [55, 194], "r223": 55, "harmonicnumber2": 55, "l_0": [55, 100, 220, 221], "47": [55, 58, 86, 90, 101, 133, 165, 193], "76": [55, 86, 90, 187, 190], "r224": 55, "lucas_numb": 55, "r225": 55, "lucasnumb": 55, "2t": 55, "r226": 55, "genocchi_numb": 55, "r227": 55, "genocchinumb": 55, "irrelev": 55, "r228": 55, "number_theori": 55, "r229": 55, "pentagonal_number_theorem": 55, "pochhamm": [55, 194, 206], "r230": 55, "r231": 55, "pochhammer_symbol": 55, "274": 55, "225": [55, 90, 188], "511": 55, "9330": 55, "34105": 55, "42525": 55, "22827": 55, "5880": 55, "750": 55, "r232": 55, "stirling_numbers_of_the_first_kind": 55, "r233": 55, "stirling_numbers_of_the_second_kind": 55, "multiset": [55, 75, 229, 232], "babi": [55, 90, 232], "aa": [55, 179], "bb": [55, 179, 206, 232], "multiset_combin": [55, 232], "aab": [55, 232], "aabc": 55, "aaaabbbbcccc": 55, "m_1": [55, 99, 139, 157, 179, 207], "m_2": [55, 111, 128, 139, 157, 179], "m_k": 55, "r234": 55, "r235": 55, "tinyurl": 55, "cep849r": 55, "ba": [55, 232], "multiset_permut": [55, 232], "r236": 55, "aabbc": 55, "mississippi": [55, 232], "609": 55, "1521": 55, "1768": 55, "1224": [55, 90], "579": 55, "197": 55, "r237": 55, "undergradu": 55, "csse": 55, "uwa": 55, "au": 55, "cits7209": 55, "707106781186548": 56, "negativeon": [56, 264], "tangent": [56, 60, 62, 66, 77, 191, 210], "643501108793284": 56, "r238": 56, "ib": [56, 116], "complex_conjug": 56, "r242": 56, "r239": 56, "trigonometric_funct": 56, "r240": 56, "r241": 56, "elementaryfunct": 56, "trigonometryangl": 56, "r243": 56, "r244": 56, "r245": 56, "r246": 56, "r247": 56, "r248": 56, "cotang": [56, 191], "r249": 56, "r250": 56, "r251": 56, "secant": [56, 190], "r252": 56, "r253": 56, "r254": 56, "cosec": 56, "r255": 56, "r256": 56, "r257": 56, "unnorm": [56, 58], "qquad": [56, 165, 187], "jn": [56, 58, 157, 190, 194, 263], "spheric": [56, 57, 101, 139, 179, 180, 190, 239, 242, 243, 263], "r258": 56, "sinc_funct": 56, "r259": 56, "inverse_trigonometric_funct": 56, "r260": 56, "r261": 56, "r262": 56, "r263": 56, "r264": 56, "r265": 56, "r266": 56, "r267": 56, "arctan": [56, 191, 194], "r268": 56, "r269": 56, "arccot": [56, 194], "r273": 56, "ultim": [56, 165], "r270": 56, "r271": 56, "r272": 56, "arcsec": [56, 194], "r274": 56, "r275": 56, "r276": 56, "arccsc": [56, 194], "quadrant": [56, 185, 213], "clock": [56, 203], "reurn": 56, "r277": 56, "r278": 56, "r279": 56, "arctan2": 56, "r280": 56, "hyperbolic_funct": 56, "r281": 56, "r282": 56, "arcsech": [56, 194], "imaginaryunit": [56, 194], "r283": 56, "r284": 56, "r285": 56, "arccsch": [56, 194], "567": 56, "r286": 56, "r287": 56, "ceilingfunct": 56, "r288": 56, "r289": 56, "floorfunct": 56, "r290": 56, "lfloor": [56, 185, 213, 214], "rfloor": [56, 185, 213, 214], "fractional_part": 56, "r291": 56, "fractionalpart": 56, "lambert": [56, 77, 191], "r292": 56, "w_k": 56, "635564016364870": 56, "34747534407696": 56, "41624341514535": 56, "lambert_w_funct": 56, "mathcal": [56, 75, 99, 125, 157, 179, 202], "cond": [56, 75, 77, 202], "piecewise_fold": 56, "folded_cond": 56, "ITE": [56, 80], "_eval_integr": [56, 77], "piecewise_integr": 56, "as_expr_set_pair": 56, "antideriv": [56, 58, 77, 210, 259], "conflict": [56, 90, 99, 112, 227], "supremum": [56, 202], "r293": 56, "directed_complete_partial_ord": 56, "r294": 56, "lattice_": 56, "28order": 56, "global_paramet": 56, "rootof": [56, 190], "uniti": [56, 58, 75, 155, 189], "rootoftool": [56, 86, 190], "integer_nthroot": [56, 90], "r295": 56, "square_root": 56, "r296": 56, "r297": 56, "root_of_un": 56, "r298": 56, "principal_valu": [56, 77], "r299": 56, "cuberoot": 56, "powdenest": 56, "misc": [56, 81, 235, 250], "r300": 56, "r301": 56, "r302": 56, "cube_root": 56, "r303": 56, "polar_lift": [57, 58, 206], "periodic_argu": 57, "principal_branch": [57, 75], "sec": [57, 77, 97, 189, 194, 203, 269], "csc": [57, 92, 194, 203], "acot": [57, 194], "asec": [57, 194], "acsc": [57, 194], "hyperbol": [57, 58, 191, 213, 265, 269], "hyperbolicfunct": 57, "coth": [57, 194, 206], "sech": [57, 194], "csch": [57, 194], "asinh": [57, 194], "acosh": [57, 194], "atanh": [57, 191, 194, 204], "acoth": [57, 194], "asech": [57, 194], "acsch": [57, 194], "roundfunct": 57, "lambertw": [57, 191, 194, 212, 213, 270], "exprcondpair": 57, "miscellan": [57, 231, 256, 257], "identityfunct": 57, "real_root": [57, 190, 212], "bell": [57, 144, 196, 232], "bernoulli": [57, 58, 194, 212, 214], "catalan": [57, 194], "subfactori": [57, 194, 232], "factorial2": [57, 161, 194], "fallingfactori": [57, 194], "luca": [57, 90, 194, 200], "genocchi": 57, "multifactori": 57, "nc": 57, "np": [57, 73, 90, 112, 226, 233], "nt": [57, 232], "fresnel": [57, 133, 194, 204], "airi": [57, 77, 210], "spline": 57, "ellipt": [57, 60, 90, 181], "mathieu": [57, 194], "delta_funct": [58, 77], "troubl": 58, "int_": [58, 74, 75, 77, 197, 259, 263], "sum_i": [58, 201], "is_simpl": 58, "tensor_funct": 58, "kroneckerdelta": [58, 83, 160, 194, 206], "r304": 58, "deltafunct": [58, 77], "h0": 58, "electron": [58, 101, 203], "signal": [58, 80, 90, 97, 99, 127, 187, 264], "improp": [58, 77], "convolut": [58, 196, 250], "r305": 58, "heavisidestepfunct": 58, "r306": 58, "iv": [58, 191], "105": [58, 90, 190, 207], "parg": 58, "singularity_funct": 58, "singularityfunct": [58, 77, 93], "macaulai": 58, "heavisidediracdelta": 58, "r307": 58, "r308": 58, "r309": 58, "r310": 58, "r311": 58, "setminu": [58, 75], "17805383034794561964694160130": 58, "65092319930185633889": 58, "8724366472624298171": 58, "r312": 58, "r313": 58, "r314": 58, "loggammafunct": 58, "r315": 58, "19093197": 58, "5173168": 58, "ni": [58, 90], "r316": 58, "polygamma_funct": 58, "r317": 58, "polygammafunct": 58, "r318": 58, "r319": 58, "polygamma2": 58, "r320": 58, "digamma_funct": 58, "r321": 58, "digammafunct": 58, "r322": 58, "r323": 58, "trigamma_funct": 58, "r324": 58, "trigammafunct": 58, "r325": 58, "int_x": 58, "_1f_1": 58, "middl": [58, 66, 75, 86, 94, 140, 180, 204, 269], "confluent": [58, 204], "xt": 58, "expint": [58, 194], "r326": 58, "incomplete_gamma_funct": 58, "upper_incomplete_gamma_funct": 58, "r327": 58, "r328": 58, "r329": 58, "gamma2": 58, "r330": 58, "gamma3": 58, "r331": 58, "exponential_integr": 58, "relation_with_other_funct": 58, "int_0": [58, 75, 77, 259, 269], "r332": 58, "lower_incomplete_gamma_funct": 58, "r333": 58, "r334": 58, "r335": 58, "r336": 58, "multigamma": 58, "gamma_p": 58, "r337": 58, "multivariate_gamma_funct": 58, "beta_funct": 58, "eulerian": 58, "02671848900111377452242355235388489324562": 58, "2112723729365330143": 58, "7655283165378005676": 58, "r338": 58, "r339": 58, "betafunct": 58, "r340": 58, "error_funct": 58, "999999984582742099719981147840": 58, "1296959": 58, "73071763923152794095062": 58, "r341": 58, "r342": 58, "r343": 58, "r344": 58, "0000000154172579002800188521596734869": 58, "r345": 58, "r346": 58, "r347": 58, "r348": 58, "5648024145755525987042919132": 58, "995322265018952734162069256367": 58, "r349": 58, "r350": 58, "r351": 58, "r352": 58, "179143454621291692285822705344": 58, "r353": 58, "inverse_funct": 58, "r354": 58, "inverseerf": [58, 194], "r355": 58, "r356": 58, "inverseerfc": [58, 194], "r357": 58, "inverseerf2": 58, "fresnelintegr": 58, "343415678363698242195300815958": 58, "fresnelc": [58, 194, 204], "r358": 58, "fresnel_integr": 58, "r359": 58, "r360": 58, "r361": 58, "r362": 58, "wrench": 58, "jr": 58, "vicki": 58, "allei": 58, "488253406075340754500223503357": 58, "r363": 58, "r364": 58, "r365": 58, "r366": 58, "r367": 58, "ei": [58, 75, 189, 194, 204, 210], "background": [58, 78, 121, 174, 177, 267], "cauchi": [58, 75, 77, 185, 210, 214], "219383934395520": 58, "21938393439552": 58, "shi": [58, 75, 194, 204], "e1": [58, 60, 67, 112, 184, 189, 201, 210, 213], "li": [58, 66, 77, 90, 160, 194, 248], "r368": 58, "r369": 58, "r370": 58, "sfu": [58, 77], "cbm": [58, 77], "aand": [58, 77], "page_228": 58, "int_1": [58, 75], "zt": [58, 75], "unbranch": [58, 75], "meijerg": [58, 69, 75, 77, 194, 214, 269], "postiv": 58, "r371": 58, "r372": 58, "expintegral": [58, 194], "r373": 58, "04516378011749278484458888919": 58, "0652795784357498247001125598": 58, "08346052231061726610939702133": 58, "soldner": 58, "findroot": [58, 212], "45136923488338": 58, "r374": 58, "logarithmic_integr": 58, "r375": 58, "logarithmicintegr": 58, "r376": 58, "r377": 58, "soldnersconst": 58, "92242131492155809316615998938": 58, "r378": 58, "r379": 58, "r380": 58, "r381": 58, "trigonometric_integr": 58, "_1": [58, 86, 170, 204, 233], "somewhat": [58, 77, 112, 185], "r382": 58, "r383": 58, "r384": 58, "laurent": [58, 185, 191, 210], "j_n": [58, 157], "r385": 58, "r386": 58, "r387": 58, "r388": 58, "yn": [58, 194, 200], "r389": 58, "i_": [58, 75, 204, 214, 215], "iz": 58, "r390": 58, "k_": [58, 75, 122, 123], "r391": 58, "hankel1": [58, 194], "hankel": [58, 77], "iy_": 58, "hankel2": [58, 194], "r392": 58, "hankelh1": [58, 194], "r393": 58, "hankelh2": [58, 194], "2z": [58, 213, 214], "orthopoli": [58, 190], "spherical_bessel_fn": [58, 190], "3j": [58, 139, 179], "099419756723640344491": 58, "054525080242173562897": 58, "r394": 58, "y_n": [58, 207], "18525034196069722536": 58, "014895573969924817587": 58, "r395": 58, "jn_zero": 58, "besseljzero": 58, "sph_jn": 58, "7635": 58, "095": 58, "323": [58, 90], "515": 58, "marcumq": 58, "marcum": 58, "q_m": 58, "r396": 58, "marcum_q": 58, "r397": 58, "airybas": 58, "airyai": [58, 194, 210], "ai": [58, 90], "airyaiprim": [58, 194], "22740742820168557599192443603787379946077222541710": 58, "airybi": [58, 194, 210], "airybiprim": [58, 194], "r398": 58, "airy_funct": 58, "r399": 58, "r400": 58, "encyclopediaofmath": 58, "r401": 58, "airyfunct": 58, "41230258795639848808323405461146104203453483447240": 58, "r402": 58, "r403": 58, "r404": 58, "r405": 58, "61825902074169104140626429133247528291577794512415": 58, "r406": 58, "r407": 58, "r408": 58, "r409": 58, "27879516692116952268509756941098324140300059345163": 58, "r410": 58, "r411": 58, "r412": 58, "r413": 58, "bspline": 58, "bspline_basi": 58, "knot": 58, "cubic": [58, 181, 190, 207, 212], "bspline_basis_set": 58, "r414": 58, "interpolating_splin": 58, "131": [58, 170], "39": [58, 90, 193], "interpolating_poli": [58, 190], "zeta_funct": 58, "hurwitz": 58, "admit": [58, 210], "circumst": [58, 189, 263], "lerch": 58, "transcend": 58, "lerchphi": [58, 194], "dirichlet_eta": [58, 194], "20205690315959": 58, "polylog": [58, 194], "r415": 58, "r416": 58, "hurwitz_zeta_funct": 58, "r417": 58, "dirichlet_eta_funct": 58, "polylogarithm": 58, "_s": [58, 160], "sheet": [58, 203], "phi_0": 58, "ze": 58, "r418": 58, "bateman": 58, "erdelyi": 58, "1953": [58, 189], "york": [58, 75, 126, 204, 212], "mcgraw": [58, 107, 126, 170, 176, 239], "r419": 58, "r420": 58, "lerch_transcend": 58, "stieltj": [58, 194], "gamma_": [58, 100, 102], "r421": 58, "stieltjes_const": 58, "ap": [58, 62, 204], "bq": [58, 182, 183, 204], "a_p": [58, 75, 204, 269], "b_q": [58, 75, 204, 269], "_pf_q": [58, 204, 210, 269], "unicod": [58, 78, 86, 174, 194, 225, 263], "r422": 58, "r423": 58, "generalized_hypergeometric_funct": 58, "convergence_stat": 58, "radius_of_converg": 58, "radiu": [58, 60, 64, 66, 118, 120, 129, 133, 180, 213, 214, 248], "meijer": [58, 68, 70, 76, 77, 259, 269], "mellin": [58, 76, 77], "barn": 58, "b_m": [58, 75, 212], "confusingli": 58, "int_l": [58, 75, 204], "contour": [58, 60, 75, 180, 204], "__1": 58, "subvector": 58, "aother": 58, "bm": 58, "bother": [58, 264], "slater": [58, 204], "allow_hyp": [58, 206], "subsum": 58, "r424": 58, "r425": 58, "meijer_g": 58, "get_period": [58, 75], "appellf1": [58, 194], "b2": [58, 90, 93, 94, 104, 112, 127, 170, 183, 185, 194, 204, 207, 210, 244], "appel": 58, "_m": 58, "0063339426292673": 58, "172870711": 58, "659936": 58, "15605338197184": 58, "r426": 58, "appell_seri": 58, "r427": 58, "hypergeometricfunct": 58, "elliptic_integr": 58, "elliptic_k": [58, 194], "tfrac": [58, 210, 214], "eccentr": [58, 60], "50923695405127": 58, "625146415202697": 58, "elliptic_f": [58, 194], "r428": 58, "r429": 58, "ellipticintegr": 58, "elliptick": [58, 194], "909449841483": 58, "74720545502474": 58, "r430": 58, "r431": 58, "ellipticf": 58, "elliptic_": [58, 60, 194], "55203744279187": 58, "290764986058437": 58, "991052601328069": 58, "81879421395609": 58, "r432": 58, "r433": 58, "elliptice2": 58, "r434": 58, "elliptic": [58, 194], "elliptic_pi": [58, 194], "50232379629182": 58, "760939574180767": 58, "29136443417283": 58, "32555634906645": 58, "r435": 58, "r436": 58, "ellipticpi3": 58, "r437": 58, "ellipticpi": [58, 194], "mathieu_funct": 58, "mathieubas": 58, "mathieusprim": [58, 194], "mathieuc": [58, 194], "mathieucprim": [58, 194], "r438": 58, "r439": 58, "r440": 58, "r441": 58, "mathieuandspheroidalfunct": 58, "r442": 58, "r443": 58, "r444": 58, "r445": 58, "r446": 58, "r447": 58, "r448": 58, "r449": 58, "r450": 58, "r451": 58, "r452": 58, "r453": 58, "chebyshevu": [58, 194], "chebyshevt_root": 58, "chebyshevu_root": 58, "assoc_legendr": [58, 194], "jacobi_poli": [58, 190], "gegenbauer_poli": [58, 190], "chebyshevt_poli": [58, 190], "chebyshevu_poli": [58, 190], "hermite_poli": [58, 190], "legendre_poli": [58, 190], "laguerre_poli": [58, 190], "r454": 58, "jacobi_polynomi": 58, "r455": 58, "jacobipolynomi": 58, "r456": 58, "jacobip": [58, 194], "jacobi_norm": 58, "normilz": 58, "p_m": 58, "delta_": [58, 157, 165], "r457": 58, "r458": 58, "r459": 58, "r460": 58, "gegenbauer_polynomi": 58, "r461": 58, "gegenbauerpolynomi": 58, "r462": 58, "gegenbauerc3": 58, "r463": 58, "chebyshev_polynomi": 58, "r464": 58, "chebyshevpolynomialofthefirstkind": 58, "r465": 58, "chebyshevpolynomialofthesecondkind": 58, "r466": 58, "r467": 58, "u_n": [58, 77, 187, 189], "r468": 58, "r469": 58, "r470": 58, "r471": 58, "r472": 58, "chebyshev_root": 58, "r473": 58, "legendre_polynomi": 58, "r474": 58, "legendrepolynomi": 58, "r475": 58, "legendrep": [58, 194], "r476": 58, "legendrep2": 58, "r477": 58, "associated_legendre_polynomi": 58, "r478": 58, "r479": 58, "r480": 58, "r481": 58, "hermite_polynomi": 58, "r482": 58, "hermitepolynomi": 58, "r483": 58, "hermiteh": [58, 194], "l_n": [58, 77], "r484": 58, "laguerre_polynomi": 58, "r485": 58, "laguerrepolynomi": 58, "r486": 58, "laguerrel": [58, 194], "r487": 58, "laguerrel3": 58, "r488": 58, "generalized_laguerre_polynomi": 58, "r489": 58, "associatedlaguerrepolynomi": 58, "r490": 58, "r491": 58, "spherical_harmon": 58, "ynm": [58, 179], "ynm_c": 58, "znm": 58, "r492": 58, "r493": 58, "sphericalharmon": 58, "r494": 58, "sphericalharmonici": 58, "r495": 58, "r496": 58, "r497": 58, "r498": 58, "z_n": [58, 188], "r499": 58, "r500": 58, "r501": 58, "eijk": 58, "levicivita": [58, 86], "eval_levicivita": 58, "pseudotensor": 58, "delta_rang": [58, 160], "kroneck": [58, 159, 160, 215, 220], "r502": 58, "kronecker_delta": [58, 160], "indices_contain_equal_inform": [58, 160], "fermi": [58, 160], "above_fermi": [58, 160], "below_fermi": [58, 160], "is_above_fermi": [58, 160], "is_below_fermi": [58, 160], "is_only_below_fermi": [58, 160], "is_only_above_fermi": [58, 160], "killable_index": [58, 160], "preferred_index": [58, 160], "point2d": [59, 60, 61, 62, 63, 65, 66, 67], "arbitrary_point": [59, 60, 61, 62, 63, 64, 66], "polyfunc": [59, 190], "ambient_dimens": [59, 61, 63, 65], "plot_interv": [59, 60, 63, 66], "lower_bound": [59, 60, 63, 66], "upper_bound": [59, 60, 63, 66], "counterclockwis": [59, 60, 61, 65, 94], "geometryent": [59, 60, 61, 63, 65, 66, 67], "hradiu": 60, "vradiu": 60, "geometryerror": [60, 63, 66, 67], "radii": 60, "foci": 60, "periapsi": 60, "apoapsi": 60, "focus_dist": 60, "shortest": [60, 63, 66, 177, 200, 206, 210, 232], "auxiliary_circl": 60, "xmin": [60, 61, 63, 65, 66, 180], "ymin": [60, 61, 63, 65, 66, 180], "xmax": [60, 61, 63, 65, 66, 180], "ymax": [60, 61, 63, 65, 66, 180], "rectangl": [60, 61, 63, 65, 66, 180, 190], "director_circl": 60, "perpendicular": [60, 63, 64, 66, 79, 119, 133, 178], "director": 60, "130": 60, "r503": 60, "encloses_point": [60, 61, 66], "border": [60, 66], "_slope": 60, "slope": [60, 61, 63, 66, 93, 94, 97], "eq1": [60, 210, 212, 213], "eq2": [60, 80, 210, 213], "r504": 60, "108270": 60, "r505": 60, "equation_of_a_shifted_ellips": 60, "evolut": 60, "focal": [60, 129, 133], "100500": 60, "363": [60, 90, 188], "175": [60, 86, 187, 188], "is_tang": [60, 62], "tangent_lin": 60, "normal_lin": 60, "line2d": [60, 63, 66], "quartic": [60, 190, 212], "2020": [60, 139], "polar_second_moment_of_area": [60, 66], "moment": [60, 66, 93, 94, 114, 121, 123, 169, 180, 190, 207, 214], "constitu": [60, 66, 109, 170, 200, 239], "planar": [60, 66, 94, 133], "resist": [60, 66, 93, 94, 203], "deflect": [60, 66, 93, 94], "bend": [60, 66, 93, 95], "r506": 60, "polar_moment_of_inertia": [60, 66], "random_point": [60, 63, 64], "arb": 60, "364": 60, "notimpl": [60, 189], "second_moment_of_area": [60, 66], "centroid": [60, 66, 67, 93], "i_xx": [60, 66], "i_yi": [60, 66], "i_xi": [60, 66], "ellis": 60, "r507": 60, "list_of_second_moments_of_area": 60, "section_modulu": [60, 66], "sympify": [60, 66, 93, 104, 109, 131, 134, 172], "farthest": [60, 66], "s_x": [60, 66], "s_y": [60, 66], "r508": 60, "semilatus_rectum": 60, "semi": [60, 63, 90], "latu": 60, "rectum": 60, "chord": 60, "conic": [60, 207, 239], "directrix": 60, "r509": 60, "semilatusrectum": 60, "r510": 60, "latus_rectum": 60, "collinear": [60, 62, 64, 65, 66, 180], "gx": 60, "hy": 60, "synonym": [60, 189], "p4": [60, 63, 65, 66, 180], "boundari": [61, 63, 93, 94, 173, 191, 202, 210, 214], "t2": [61, 66, 67, 90, 104, 109, 207, 214, 220], "ordering_of_class": 61, "is_similar": [61, 63, 66, 67], "uniform": [61, 180, 214], "enlarg": 61, "shrink": [61, 75], "parameter_valu": [61, 64], "pent": 61, "rpent": 61, "rcirc": 61, "entity1": 62, "entity2": 62, "zp": 62, "is_collinear": [62, 65], "segment2d": [62, 63, 66, 67], "wikipappu": 62, "bc": [62, 232, 235, 244], "subs_point": 62, "p11": 62, "p12": 62, "p13": 62, "p21": 62, "p22": 62, "p23": 62, "ll1": 62, "ll2": 62, "ll3": 62, "ll4": 62, "ll5": 62, "ll6": 62, "pp1": 62, "pp2": 62, "pp3": 62, "encyclopedia": [62, 176], "apr": 62, "s_hexagon_theorem": 62, "clockwis": [62, 77, 81, 93, 94], "overlap": [62, 67, 89, 181, 202, 235], "infanc": 62, "geometryresult": 62, "fair": [62, 214], "angle_between": [63, 64, 66, 170], "reflex": 63, "eman": 63, "readili": [63, 86], "sw": 63, "obtus": 63, "smallest_angle_between": 63, "line3d": [63, 64, 65], "is_perpendicular": [63, 64, 65, 66], "ray2d": [63, 66], "closing_angl": 63, "are_concurr": [63, 64], "concurr": [63, 64, 191], "l3": [63, 187], "l4": 63, "bisector": [63, 66], "p5": [63, 65, 66, 180], "p6": [63, 66, 180], "p7": [63, 66, 180], "segment3d": [63, 64], "direction_ratio": [63, 65], "is_parallel": [63, 64], "parallel_lin": 63, "perpendicular_lin": [63, 64], "perpendicular_seg": 63, "enpoint": 63, "reform": 63, "432": [63, 189], "92": [63, 188, 210, 214], "ccw": [63, 66], "ray3d": [63, 64, 133], "xdirect": 63, "ydirect": 63, "midpoint": [63, 65, 66, 77, 180, 244], "170": [63, 214], "341": 63, "perpendicular_bisector": 63, "linearentity2d": 63, "linearentity3d": [63, 64], "direction_cosin": [63, 65], "zdirect": 63, "normal_vector": [64, 133], "proce": [64, 124, 187, 189, 204, 212], "147": 64, "321": 64, "is_coplanar": 64, "perpendicualar": 64, "parallel_plan": 64, "on_circl": 64, "off_circl": 64, "perpendicular_plan": 64, "pt1": 64, "projection_lin": 64, "on_morph": 65, "affine_rank": 65, "are_coplanar": 65, "canberra_dist": 65, "canberra": 65, "geometricent": 65, "taxicab_dist": 65, "is_concycl": 65, "concycl": 65, "fewer": [65, 66, 124, 214, 259], "is_scalar_multipl": 65, "ambient": 65, "orthogonal_direct": 65, "taxicab": 65, "_nocheck": 65, "are_collinear": 65, "4x4": [65, 89, 132, 214], "travers": [66, 90, 105, 190, 203, 219, 229, 250, 264], "unrot": 66, "circumscrib": 66, "spin": [66, 101, 114, 146, 147, 155], "perimet": [66, 246], "contact": [66, 114, 117, 118, 119, 120, 177, 218], "38": [66, 86, 90, 194, 207, 209, 214], "cut_sect": 66, "upper_polygon": 66, "lower_polygon": 66, "upper_seg": 66, "lower_seg": 66, "r511": 66, "r512": 66, "paulbourk": 66, "polygonmesh": 66, "insidepoli": 66, "first_moment_of_area": 66, "q_x": [66, 177], "q_y": [66, 177], "625": [66, 248], "3125": [66, 214], "525": 66, "3000": [66, 93], "r513": 66, "skyciv": 66, "beam": [66, 129, 132, 255], "bmd": 66, "r514": 66, "mechanicalc": 66, "poly1": 66, "poly2": 66, "interior": [66, 190, 202], "180": [66, 178, 188], "r515": 66, "r516": 66, "r517": 66, "apothem": 66, "interior_angl": 66, "exterior_angl": 66, "circumcircl": 66, "incircl": 66, "inradiu": 66, "inscrib": 66, "circumcent": 66, "circumradiu": 66, "leg": 66, "square_in_unit_circl": 66, "kite": 66, "asa": 66, "sa": [66, 190], "sss": 66, "altitud": 66, "orthocent": 66, "exradii": 66, "median": [66, 214, 256], "medial": 66, "nine_point_circl": 66, "straight": [66, 72, 97, 115, 177, 210], "eulerlin": 66, "equilater": 66, "coincid": [66, 86, 89, 106, 112, 181, 239, 243, 261], "excent": 66, "excircl": 66, "touch": [66, 114, 203], "r518": 66, "ly": [66, 86, 185], "exradiu": 66, "r519": 66, "r520": 66, "incent": 66, "is_equilater": 66, "is_isoscel": 66, "is_right": 66, "is_scalen": 66, "nine": [66, 194], "feet": 66, "real_num": 67, "hull": 67, "r521": 67, "graham_scan": 67, "r522": 67, "andrew": 67, "1979": [67, 165], "geomalgorithm": 67, "a10": 67, "_hull": 67, "t3": [67, 207], "mass": [67, 101, 102, 103, 104, 106, 107, 111, 112, 114, 115, 116, 118, 120, 121, 122, 123, 127, 128, 136, 161, 163, 164, 165, 175, 177, 225, 246, 247], "averag": [67, 77, 90, 187, 214], "qq": [68, 69, 71, 72, 73, 77, 181, 182, 183, 184, 186, 187, 189, 190, 191], "p_r": 68, "holonomic_funct": 68, "from_hyp": [69, 72], "holonomicfunct": [69, 70, 72], "from_meijerg": [69, 72], "initcond": [69, 71, 72], "expr_to_holonom": [69, 72, 73, 74], "lenic": [69, 71], "ground": [69, 114, 117, 118, 119, 120, 181, 184, 185, 187, 189, 190, 212, 268], "meijerint": [69, 71, 75, 77], "_rewrite1": [69, 75], "_convert_poly_rat_alg": [69, 71], "_create_t": [69, 71], "differentialoper": [70, 72, 149], "differentialoperatoralgebra": 70, "_create_lookup_t": [71, 75], "old_poly_r": [72, 73, 181, 184, 185], "to_expr": [72, 73, 74, 99], "to_sequ": 72, "n_0": [72, 187, 212, 213], "indici": [72, 73, 74, 210], "c_j": [72, 75, 204], "holonomicsequ": 72, "r523": 72, "hal": 72, "inria": [72, 77], "fr": [72, 77, 90, 107, 112, 114, 115, 118, 119, 122, 124, 127, 214], "00070025": 72, "r524": 72, "risc": [72, 210, 239], "jku": [72, 210, 239], "risc_2244": 72, "diplform": 72, "_recur": 72, "rk4": 72, "kutta": 72, "71828182845905": 72, "10517083333333": 72, "22140257085069": 72, "34985849706254": 72, "49182424008069": 72, "64872063859684": 72, "82211796209193": 72, "01375162659678": 72, "22553956329232": 72, "45960141378007": 72, "71827974413517": 72, "331": 72, "4641": 72, "61051": 72, "771561": 72, "9487171": 72, "14358881": 72, "357947691": 72, "5937424601": 72, "to_hyp": 72, "as_list": [72, 190], "to_meijerg": 72, "homogen": [73, 77, 86, 99, 185, 187, 190, 207, 210, 211, 214], "1_0": 73, "1_1": 73, "0_0": 73, "0_1": 73, "pyplot": [73, 127], "plt": [73, 127], "list_of_poli": 73, "weyl": [73, 79], "Ore": 73, "dxa": 73, "endomorph": [73, 189], "frobeniu": [74, 86, 90, 187, 188], "subtleti": 75, "recast": [75, 206, 212, 213], "branchpoint": 75, "crude": [75, 114, 180], "decre": 75, "biholomorph": 75, "mutual": [75, 178], "neighbourhood": 75, "evid": [75, 107, 119, 204], "peculiar": [75, 178], "throughout": [75, 80, 187, 197, 213, 261], "_split_mul": 75, "_mytyp": 75, "inequival": 75, "_mul_as_two_part": 75, "bx": [75, 214, 220], "twist": 75, "recognis": [75, 184, 204, 206], "anywai": [75, 206, 210], "analyitc": 75, "_rewrite_singl": 75, "_rewrite2": 75, "_rewrite_saxena_1": 75, "_rewrite_saxena": 75, "blogpost": 75, "remedi": 75, "exploit": [75, 226], "transpar": [75, 78, 174], "nessgrh": 75, "wordpress": [75, 207], "07": 75, "stade": 75, "c_u": 75, "d_1": [75, 165, 190, 214], "d_v": 75, "amalgam": 75, "prudnikov1990": [75, 204], "luke1969": [75, 204], "c_3": [75, 210], "c_4": 75, "visibl": [75, 180], "fulfil": [75, 179], "vee": [75, 80], "lceil": 75, "rceil": 75, "d_j": [75, 165, 204], "lambda_c": [75, 123], "lambda_": 75, "z_0": [75, 206], "z_1": 75, "a_i": [75, 165, 170, 178, 182, 187, 204], "c_5": 75, "c_6": 75, "c_7": 75, "c_8": 75, "lvert": 75, "rvert": 75, "c_9": 75, "versatil": 75, "bz": [75, 207, 220], "deform": [75, 94], "encircl": 75, "appeal": 75, "fox": 75, "obstacl": 75, "identif": [75, 213], "domin": [75, 81, 199, 201], "iT": 75, "omega_": 75, "disguis": 75, "meijerint_indefinit": 75, "meijerint_definit": 75, "meijerint_invers": 75, "kelli": [75, 204], "roach": [75, 204], "211": [75, 90, 190, 204, 210], "prudnikov": [75, 204], "yu": [75, 179, 204], "brychkov": [75, 204], "marichev": [75, 204], "gordon": [75, 139, 204], "breach": [75, 204], "_coeffexpvalueerror": 75, "_get_coeff_exp": 75, "_check_anteced": 75, "_check_antecedents_1": 75, "mt": 75, "_check_antecedents_invers": 75, "anteced": [75, 201], "_condsimp": 75, "hoc": 75, "simp": [75, 114, 170], "_dummi": 75, "_dummy_": 75, "_eval_cond": 75, "_expon": 75, "_find_splitting_point": 75, "fsp": 75, "_flip_g": 75, "_function": 75, "_guess_expans": 75, "sensibl": [75, 77], "_inflate_fox_h": 75, "_inflate_g": 75, "_int0oo": 75, "_int0oo_1": 75, "_int_invers": 75, "_is_analyt": 75, "almost": [75, 84, 92, 162, 180, 181, 185, 190, 191, 210, 214, 228, 229, 232, 263], "_meijerint_definite_2": 75, "expand_mul": 75, "trigexpand": 75, "_meijerint_definite_3": 75, "_meijerint_definite_4": 75, "only_doubl": 75, "_meijerint_indefinite_1": 75, "_mul_arg": 75, "_my_principal_branch": 75, "full_pb": 75, "nearer": 75, "superflu": 75, "opaqu": [75, 194], "fac": 75, "_rewrite_invers": 75, "costli": [75, 115, 265], "tx": [75, 267], "overview": [76, 182, 213, 246, 247], "argand": [76, 213], "lookup": [76, 77, 86, 90, 204], "laplac": [76, 77, 96, 97, 99, 214], "todo": [76, 138, 140, 144, 145, 149, 150, 152, 153, 154, 155, 156, 187, 194, 201, 219], "polytop": 76, "happili": [77, 218], "nonelementari": 77, "mellin_transform": 77, "bilater": 77, "mellintransform": 77, "integraltransform": 77, "nocond": 77, "inverse_mellin_transform": 77, "laplace_transform": [77, 99], "fourier_transform": 77, "hankel_transform": 77, "inverse_hankel_transform": 77, "suitabl": [77, 83, 92, 182, 184, 187, 189, 194, 204, 207, 210, 213, 215, 262], "inversemellintransform": 77, "attemp": 77, "laplacetransform": 77, "inverse_laplace_transform": 77, "singularit": [77, 124], "inverselaplacetransform": 77, "_fast_inverse_laplac": 77, "rootsum": [77, 190, 196], "fouriertransform": 77, "_fourier_transform": 77, "inverse_fourier_transform": 77, "sine_transform": 77, "inverse_sine_transform": 77, "cosine_transform": 77, "inverse_cosine_transform": 77, "bixk": 77, "inversefouriertransform": 77, "sinetransform": 77, "inversesinetransform": 77, "cosinetransform": 77, "inversecosinetransform": 77, "hankeltransform": 77, "ht": 77, "inversehankeltransform": 77, "_compute_transform": 77, "_as_integr": 77, "integraltransformerror": 77, "_name": 77, "_collapse_extra": 77, "needev": 77, "function_vari": 77, "transform_vari": 77, "lazard": [77, 187, 190], "rioboo": 77, "trager": 77, "horowitz": 77, "ostrogradski": 77, "ratint": 77, "rationaltool": [77, 190], "ratint_logpart": 77, "ratint_ratpart": 77, "r525": 77, "bronstein": [77, 188, 190, 196, 212], "verlag": [77, 188], "deg": [77, 97, 112, 182, 187, 189, 190], "q_i": [77, 108, 124], "_t": [77, 112, 127, 160, 169, 170, 173, 204, 214], "trigintegr": 77, "trigonometri": 77, "r526": 77, "integration_techniqu": 77, "deltaintegr": 77, "couldn": 77, "didn": [77, 86, 124], "singularityintegr": 77, "risch_integr": 77, "nonelementaryintegr": 77, "proven": [77, 90, 244, 261], "handle_first": 77, "separate_integr": 77, "rewrite_complex": 77, "forthcom": 77, "5109": 77, "outer": [77, 109, 125, 127, 143, 148, 149, 170, 173, 176, 178, 196, 202, 218, 239, 241, 242], "pop": [77, 207], "taught": 77, "manualintegr": 77, "integral_step": 77, "student": [77, 203, 207, 214], "_z": [77, 125, 177, 178, 214], "_i": [77, 160, 165, 191], "namedtupl": 77, "substep": 77, "sympy_gamma": 77, "app": 77, "intstep": 77, "urul": 77, "u_var": 77, "_u": [77, 160], "u_func": 77, "arctanrul": 77, "trigrul": 77, "rewriterul": 77, "addrul": 77, "powerrul": 77, "constanttimesrul": 77, "constantrul": 77, "norman": 77, "slowest": [77, 91], "retri": [77, 90], "degree_offset": 77, "unnecessary_permut": 77, "_try_heurisch": 77, "manuel": [77, 199], "poor": [77, 91], "man": [77, 188], "whittak": 77, "r527": 77, "sop": [77, 80], "cafe": 77, "pmint": 77, "r528": 77, "gedd": [77, 188], "stefanu": 77, "217": [77, 188], "r529": 77, "davenport": [77, 187, 188], "eurocam": 77, "lnc": [77, 188, 212], "157": [77, 90, 94, 188], "r530": 77, "iii": [77, 194, 210], "sigsam": 77, "bulletin": 77, "1982": [77, 179], "r531": 77, "transact": [77, 188], "1985": [77, 107, 126, 170, 239], "356": [77, 189, 212], "362": 77, "huge": [77, 90, 190, 230], "entail": 77, "delic": [77, 181], "albeit": [77, 242], "mimic": [77, 78, 174, 233], "moder": 77, "irrespect": [77, 207, 210, 235], "line_integr": 77, "as_sum": 77, "subinterv": 77, "trapezoid": [77, 86, 214], "730": 77, "809": 77, "decai": 77, "r532": 77, "riemann_sum": 77, "r533": 77, "cauchy_principal_valu": 77, "r534": 77, "cauchyprincipalvalu": 77, "int_a": 77, "uvar": 77, "ui": [77, 90], "accomplish": [77, 124, 127, 245], "3aissu": 77, "3aopen": 77, "3aintegr": 77, "gauss_legendr": 77, "n_digit": 77, "legendr": [77, 90, 190, 194, 207], "r535": 77, "w_i": [77, 129, 190, 210], "7746": 77, "55556": 77, "88889": 77, "86114": 77, "33998": 77, "34785": 77, "65215": 77, "gauss_laguerr": 77, "gauss_gen_laguerr": 77, "gauss_hermit": 77, "gauss_chebyshev_t": 77, "gauss_chebyshev_u": 77, "gauss_jacobi": 77, "gauss_lobatto": 77, "gaussian_quadratur": 77, "r536": 77, "fsu": 77, "jburkardt": 77, "cpp_src": 77, "legendre_rul": 77, "laguerr": [77, 190, 194], "r537": 77, "41577": 77, "2943": 77, "2899": 77, "71109": 77, "27852": 77, "010389": 77, "22285": 77, "1889": 77, "9927": 77, "7751": 77, "8375": 77, "983": 77, "45896": 77, "417": [77, 206], "11337": 77, "010399": 77, "00026102": 77, "9855e": 77, "93laguerre_quadratur": 77, "r538": 77, "laguerre_rul": 77, "hermit": [77, 81, 86, 87, 183, 189, 190, 194, 214], "r539": 77, "2247": 77, "29541": 77, "1816": 77, "3506": 77, "3358": 77, "43608": 77, "00453": 77, "15707": 77, "72463": 77, "hermite_quadratur": 77, "r540": 77, "hermite_rul": 77, "r541": 77, "gen_hermite_rul": 77, "r542": 77, "19016": 77, "7845": 77, "5253": 77, "4493": 77, "31413": 77, "00906": 77, "97851": 77, "9904": 77, "3193": 77, "712": 77, "53087": 77, "67721": 77, "11895": 77, "0023152": 77, "r543": 77, "gen_laguerre_rul": 77, "r544": 77, "86602": 77, "0472": 77, "96593": 77, "70711": 77, "25882": 77, "5236": 77, "93gauss_quadratur": 77, "r545": 77, "chebyshev1_rul": 77, "r546": 77, "3927": 77, "7854": 77, "90097": 77, "62349": 77, "22252": 77, "084489": 77, "27433": 77, "42658": 77, "r547": 77, "chebyshev2_rul": 77, "jacobi": [77, 90, 101, 190, 194], "r548": 77, "7063": 77, "0973": 77, "33795": 77, "87174": 77, "5917": 77, "2093": 77, "050584": 77, "22169": 77, "39439": 77, "93jacobi_quadratur": 77, "r549": 77, "jacobi_rul": 77, "r550": 77, "gegenbauer_rul": 77, "lobatto": 77, "r551": 77, "3333": 77, "44721": 77, "16667": 77, "83333": 77, "93lobatto_rul": 77, "r552": 77, "page_888": 77, "intpoli": 77, "chin": 77, "al": [77, 112, 139, 187, 203, 206], "2015": [77, 213], "unit_cub": 77, "polytope_integr": 77, "eric": [77, 188], "jean": 77, "lasserr": 77, "sukumar": 77, "nonconvex": 77, "967": 77, "981": 77, "dilbert": 77, "engr": 77, "ucdavi": 77, "suku": 77, "max_degre": [77, 190], "689": [77, 94], "21875": 77, "octahedron": 77, "trivari": 77, "enable_automatic_int_sympif": 78, "enable_automatic_symbol": 78, "init_ipython_sess": 78, "argv": [78, 225], "init_python_sess": 78, "use_latex": [78, 174, 268], "quiet": 78, "str_printer": [78, 174], "latex_print": [78, 174], "pylab": 78, "stringifi": [78, 174], "sstrrepr": [78, 174, 194], "lexograph": [78, 174], "gui": [78, 174], "statu": 78, "\u03b8": [78, 106, 132, 213], "int_to_integ": 78, "decistmt": 78, "f401": 78, "0x12": 78, "num_column": [78, 174, 194, 210], "no_glob": [78, 174], "ip": [78, 148, 154, 174], "forecolor": [78, 174], "backcolor": [78, 174], "fontsiz": [78, 174, 194], "10pt": [78, 174, 194], "latex_mod": [78, 174], "print_builtin": [78, 174], "interactiveconsol": [78, 174], "preambl": [78, 174, 194], "handwritten": [78, 174], "ctan": [78, 174], "pkg": [78, 174], "dvi": [78, 174, 194], "foreground": [78, 174], "black": [78, 145, 156, 174, 194, 268], "white": [78, 174, 214], "documentclass": [78, 174, 194], "dpi": [78, 174], "u03b8": 78, "dvip": 78, "r553": 78, "r554": 78, "the_68_standard_colors_known_to_dvip": 78, "config": 78, "root_system": 79, "rootsystem": 79, "cartantyp": 79, "cartan": 79, "subalgebra": 79, "adjoint": [79, 81, 86, 137, 141], "hyperplan": 79, "k_y": 79, "r555": 79, "r556": 79, "humphrei": 79, "add_as_root": 79, "root1": 79, "root2": 79, "add_simple_root": 79, "newroot": 79, "all_root": [79, 90, 190], "cartan_matrix": 79, "dynkin_diagram": 79, "dynkin": 79, "root_spac": 79, "simple_root": 79, "type_a": 79, "typea": 79, "basic_root": 79, "iin": 79, "jth": [79, 213], "ijth": 79, "cartan_typ": 79, "highest_root": 79, "lie_algebra": 79, "positive_root": 79, "type_b": 79, "typeb": 79, "b4": 79, "b3": [79, 112, 127, 170, 244], "type_c": 79, "typec": 79, "c4": [79, 81, 83, 210], "type_d": 79, "d4": [79, 214], "dmension": 79, "type_": 79, "e6": 79, "type_f": 79, "typef": 79, "f_4": [79, 108], "f4": [79, 180], "type_g": 79, "typeg": 79, "weyl_group": 79, "weylgroup": 79, "semisimpl": 79, "isometri": 79, "coxeter_diagram": 79, "undirect": [79, 232], "s_is_j": 79, "delete_doubl": 79, "element_ord": 79, "weylelt": 79, "group_nam": 79, "group_ord": 79, "192": 79, "matrix_form": 79, "cartantype_gener": 79, "standard_cartan": 79, "dynkindiagram": 79, "cartanmatrix": 79, "sopform": 80, "minterm": 80, "dontcar": 80, "simplified_pair": 80, "combo": 80, "outcom": [80, 163, 214], "r557": 80, "quin": 80, "mccluskey_algorithm": 80, "posform": 80, "r558": 80, "anfform": 80, "truthvalu": 80, "anf": 80, "funciton": 80, "zhegalkin": 80, "r559": 80, "zhegalkin_polynomi": 80, "as_set": 80, "booleantru": 80, "doubt": [80, 112], "greet": 80, "wors": [80, 206], "booleanfals": 80, "universalset": 80, "nand": 80, "xnor": 80, "gate": [80, 140, 145, 147, 153, 154, 156], "perspect": [80, 90, 99, 165, 180, 227, 243, 247], "multiplex": 80, "conjunct": [80, 180, 204, 225, 269], "disjunct": 80, "to_anf": 80, "oplu": [80, 144], "to_cnf": 80, "cnf": 80, "mccluskei": 80, "to_dnf": 80, "to_nnf": 80, "nnf": 80, "is_anf": 80, "is_cnf": 80, "is_dnf": 80, "is_nnf": 80, "gateinputcount": 80, "simplify_log": 80, "fewest": [80, 154], "bool_map": 80, "bool1": 80, "bool2": 80, "function1": 80, "function2": 80, "distribute_and_over_or": 80, "distribute_or_over_and": 80, "distribute_xor_over_and": 80, "eliminate_impl": 80, "truth_tabl": 80, "ibin": [80, 232], "integer_to_term": 80, "0001111011": [80, 232], "1101111000": [80, 232], "term_to_integ": 80, "bool_maxterm": 80, "maxterm": 80, "complement": [80, 83, 190, 213], "r560": 80, "canonical_normal_form": 80, "indexing_maxterm": 80, "bool_minterm": 80, "patter": 80, "r561": 80, "indexing_minterm": 80, "bool_monomi": 80, "enumar": 80, "anf_coeff": 80, "to_int_repr": 80, "all_model": 80, "unsatisfi": 80, "use_model": 80, "unsat": 80, "matrixbas": [81, 82, 83, 85, 183], "dirac": [81, 86, 97, 101, 102, 158, 194], "__abs__": [81, 185], "__add__": [81, 185, 189], "shapeerror": [81, 83, 86], "__len__": 81, "96": [81, 86, 214], "mismatch": 81, "matrix_multiply_elementwis": [81, 86], "applyfunc": [81, 82, 86, 119, 170, 215], "col": [81, 83, 86, 89, 99, 127, 183, 189, 265], "col_del": [81, 86, 265], "col_join": [81, 86, 114], "col_insert": [81, 265], "row_insert": [81, 265], "row_join": [81, 86, 114], "companion": [81, 83], "c0": [81, 83, 201, 210, 212], "sparsematrix": [81, 85, 86, 89, 195, 206], "diag": [81, 83, 86, 89, 127, 183, 220, 265], "immutablematrix": [81, 83, 85, 99, 170, 214, 239, 241, 265], "dens": [81, 83, 85, 86, 183, 186, 189, 190, 215, 253, 264], "blockmatrix": [81, 83, 86], "sparsetool": [81, 89], "kth": [81, 90], "rowslist": [81, 183], "colslist": 81, "submatrix": [81, 86, 187, 214], "get_diag_block": [81, 83, 86], "decoupl": 81, "hstack": [81, 183], "is_anti_symmetr": 81, "is_diagon": [81, 86], "is_low": [81, 183], "is_upp": [81, 183], "matrixeigen": [81, 85], "is_diagonaliz": [81, 86], "is_hermitian": [81, 86], "is_lower_hessenberg": 81, "hessenberg": [81, 86], "superdiagon": 81, "is_upper_hessenberg": 81, "is_strongly_diagonally_domin": 81, "strongli": [81, 86, 183, 232], "m1": [81, 86, 90, 94, 131, 139, 157, 159, 163, 207, 210, 215, 220], "subdiagon": [81, 86], "is_weakly_diagonally_domin": 81, "weakli": [81, 232], "vacuou": 81, "jordan_block": [81, 86], "eigenv": [81, 86, 112, 114, 127, 154, 263, 265], "insuffici": 81, "rectangular": [81, 86, 202, 213, 242], "r562": 81, "jordan_matrix": [81, 210], "dotprodsimp": 81, "blowup": 81, "multiply_elementwis": [81, 86], "hadamard": [81, 83, 86, 144, 145, 156, 194], "elementwis": [81, 83, 86, 215], "300": [81, 86, 90, 93, 175, 180, 191, 247], "bmatrix": [81, 83, 86, 115, 122, 123, 124, 125, 170, 178, 207], "a_0": [81, 86, 197, 207, 210, 215, 269], "vdot": [81, 83, 86, 165], "alpha_0": 81, "alpha_1": [81, 90, 189], "alpha_": [81, 179], "permute_col": 81, "permute_row": 81, "mulsimp": 81, "rmultipli": 81, "__rmul__": 81, "rot90": 81, "anticlockwis": 81, "row_del": [81, 86, 265], "todod": 81, "tolist": [81, 215], "vec": [81, 86, 127, 170, 179, 187, 244, 245, 247], "vech": 81, "check_symmetri": 81, "vstack": [81, 183], "wilkinson": 81, "w_": [81, 189], "wminu": 81, "wplu": 81, "r563": 81, "mathwork": [81, 97, 214, 265], "cleve": 81, "04": [81, 214], "r564": 81, "claredon": 81, "oxford": 81, "662": 81, "matrixexpr": [81, 83, 84], "intm": 81, "undefinedkind": [81, 202], "tuplekind": [81, 202], "mutabledensematrix": [82, 183, 235], "densematrix": [82, 86], "ldldecomposit": [82, 86], "ldl": [82, 86], "choleski": [82, 86], "ludecomposit": [82, 83, 86, 265], "qrdecomposit": [82, 86], "as_immut": 82, "lower_triangular_solv": [82, 86], "upper_triangular_solv": [82, 86], "gauss_jordan_solv": [82, 86], "cholesky_solv": [82, 86], "diagonal_solv": [82, 86], "ldlsolv": [82, 86], "lusolv": [82, 86, 108, 124, 128, 212, 265], "qrsolv": [82, 86], "pinv_solv": [82, 86], "permutedim": [83, 215, 216], "arraytensorproduct": [83, 216], "from_index_summ": 83, "first_index": 83, "last_index": 83, "longrightarrow": 83, "matpow": [83, 194], "hadamardproduct": [83, 194], "hadamard_product": 83, "hadamardpow": [83, 194], "ddot": [83, 86, 115, 123, 174, 177, 194, 269], "functionmatrix": 83, "lamda": [83, 194, 202, 214, 265], "lazili": [83, 200], "342923500": 83, "permutationmatrix": [83, 86], "matrixpermut": 83, "companionmatrix": 83, "matrixset": [83, 202], "submatric": [83, 86, 183, 214], "block_collaps": 83, "dat": [83, 232], "irregular": [83, 86], "ldudecomposit": 83, "ldu": 83, "2x2": [83, 89, 129, 183, 210], "noninvertiblematrixerror": [83, 265], "udldecomposit": 83, "lu": [83, 86, 183, 188], "udl": 83, "schur": 83, "penros": [83, 86], "pinv": [83, 86], "r565": 83, "schur_compl": 83, "blockdiagmatrix": [83, 86], "diag_block": 83, "alias": [84, 185], "bridg": [84, 112, 233], "tension": 84, "matrixdetermin": 85, "matrixreduct": 85, "matrixsubspac": 85, "matrixcalculu": 85, "immutablesparsematrix": 85, "gramschmidt": 86, "m2": [86, 90, 94, 109, 131, 139, 157, 159, 163, 189, 207, 210, 215, 220], "126": [86, 90, 193], "150": [86, 99, 207], "v3": [86, 170, 173, 244], "glue": 86, "m3": [86, 139, 207, 215], "adj": 86, "qr": 86, "cheat": 86, "soln": 86, "gram": [86, 165, 167], "schmidt": 86, "out1": 86, "out2": 86, "1692": 86, "1551": 86, "423": 86, "6707": 86, "spot": [86, 128], "eigenvector": [86, 112, 154, 155, 179], "nullspac": [86, 183], "adjug": 86, "berkowitz": 86, "bareiss": 86, "cofactor_matrix": 86, "charpoli": [86, 183, 265], "_simplifi": 86, "purepoli": [86, 190], "samuelson": 86, "minor_submatrix": 86, "iszerofunc": [86, 265], "barei": 86, "det_lu": 86, "functiontyp": 86, "_iszero": [86, 265], "_is_zero_after_expand_mul": 86, "unrecogn": 86, "nonsquarematrixerror": [86, 210], "i3": [86, 100, 112, 127, 220], "perman": 86, "ryser": 86, "450": 86, "r566": 86, "prof": 86, "ben": 86, "berkelei": 86, "bernd": 86, "ban275": 86, "r567": 86, "permanent_": 86, "r568": 86, "r569": 86, "0904": 86, "3251": 86, "echelon_form": [86, 265], "with_pivot": 86, "echelon": [86, 183, 213, 265], "elementary_col_op": 86, "kn": [86, 93, 94], "col1": 86, "col2": 86, "km": [86, 90, 103, 107, 114, 115, 118, 119, 122, 124, 127, 166], "elementary_row_op": 86, "row1": 86, "row2": 86, "is_echelon": [86, 265], "rref": [86, 183], "pivot": [86, 183, 265], "normalize_last": 86, "rref_matrix": [86, 183], "rref_pivot": [86, 183], "301369863013699": 86, "712328767123288": 86, "noramlize_last": 86, "subspac": [86, 189], "columnspac": [86, 183], "rowspac": [86, 183], "orthonorm": [86, 127, 155, 178, 242], "rankcheck": 86, "r570": 86, "93schmidt_process": 86, "eigen": [86, 136], "bidiagonal_decomposit": 86, "ubv": 86, "bidiagon": 86, "hang": [86, 115, 119, 210, 211], "bidiagn": 86, "r571": 86, "golub": 86, "van": [86, 90, 188], "loan": 86, "r572": 86, "vslobodi": 86, "household": 86, "r573": 86, "r574": 86, "reals_onli": 86, "throw": [86, 92, 112, 189, 207, 213], "error_when_incomplet": 86, "eig": [86, 112, 127], "matrixerror": 86, "got": [86, 181, 184, 187, 190, 193, 225, 226, 232, 233, 261, 263, 264], "abel": 86, "ruffini": 86, "eigenvect": [86, 112, 127, 154, 265], "tidi": 86, "artifact": 86, "ret": 86, "eigenspac": 86, "rag": 86, "a_3": 86, "diagonaliz": [86, 265], "is_indefinit": 86, "semidefinit": [86, 214], "plot3d": [86, 180], "is_positive_definit": 86, "is_positive_semidefinit": 86, "hire": [86, 93, 94, 97, 180, 197], "is_negative_definit": 86, "is_negative_semidefinit": 86, "defer": [86, 236], "r575": 86, "definiteness_of_a_matrix": 86, "r576": 86, "positivedefinitematrix": 86, "r577": 86, "amer": 86, "259": 86, "264": [86, 212], "r578": 86, "r579": 86, "r580": 86, "r581": 86, "r582": 86, "r583": 86, "r584": 86, "r585": 86, "r586": 86, "r587": 86, "r588": 86, "r589": 86, "jordan_form": 86, "calc_transform": 86, "left_eigenvect": 86, "singular_valu": 86, "condition_numb": 86, "hessian": 86, "wronskian": [86, 210], "simpfunc": 86, "permutebkwd": 86, "permutefwd": 86, "lucombin": 86, "defici": [86, 90, 213], "matrixi": 86, "ludecomposition_simpl": [86, 265], "ludecompositionff": 86, "pa": [86, 107, 109, 122, 125, 128], "r590": 86, "zhou": 86, "jeffrei": [86, 206], "frontier": [86, 202], "china": 86, "67": [86, 188], "2008": [86, 179, 188, 190, 194], "row_swap": 86, "compres": 86, "permute_backward": 86, "permute_forward": 86, "u_": 86, "intiuit": 86, "lu_": 86, "_find_reasonable_pivot": 86, "lu_solv": [86, 183], "qr_solv": 86, "augument": 86, "167": 86, "158": [86, 94], "27261": 86, "30625": 86, "348": 86, "1914": 86, "6125": 86, "30589": 86, "198": 86, "1225": 86, "q_aug": 86, "r_aug": 86, "analytic_func": 86, "connected_compon": [86, 232], "connected_components_decomposit": 86, "relax": [86, 92], "3x1": 86, "1x3": 86, "conjugate_convent": 86, "dual": [86, 152, 158], "anti_symmetr": 86, "speak": [86, 189, 245], "freevar": 86, "underdetermin": [86, 212, 213], "free_var_index": 86, "sol": [86, 207, 210, 211, 212], "tau0": [86, 213, 214], "tau1": 86, "taus_zero": 86, "sol_uniqu": 86, "r591": 86, "gaussian_elimin": 86, "try_block_diag": 86, "inverse_g": [86, 265], "inverse_lu": [86, 265], "inverse_adj": [86, 265], "inverse_ch": 86, "inverse_ldl": 86, "inverse_qr": 86, "inv_mod": 86, "cof": 86, "inverse_block": 86, "blockwis": 86, "ntop": 86, "key2bound": 86, "key2ij": 86, "reciproc": [86, 214, 269], "fro": 86, "sing": 86, "spectral": 86, "rd": [86, 112, 194], "pseudoinvers": 86, "r592": 86, "penrose_pseudoinvers": 86, "arbitrary_matrix": 86, "wn_m": 86, "_w0_0": 86, "_w1_0": 86, "_w2_0": 86, "59": [86, 210], "r593": 86, "obtaining_all_solutions_of_a_linear_system": 86, "print_nonzero": [86, 232], "symb": [86, 194], "rank_decomposit": 86, "r594": 86, "rank_factor": 86, "r595": 86, "piziak": 86, "odel": 86, "magazin": 86, "193": [86, 97], "2307": 86, "2690882": 86, "singular_value_decomposit": 86, "condens": [86, 213], "orthogn": 86, "v_aug": 86, "u_aug": 86, "s_aug": 86, "gj": 86, "solve_least_squar": 86, "strongly_connected_compon": [86, 183, 232], "62": [86, 187], "strongly_connected_components_decomposit": 86, "rowstart": 86, "rowend": 86, "rowsep": 86, "colsep": 86, "strprinter": [86, 174, 257], "upper_hessenberg_decomposit": 86, "213": 86, "134": 86, "216": [86, 187], "hessenbergdecomposit": 86, "jordan_cel": 86, "varlist": 86, "r596": 86, "hessian_matrix": 86, "vlist": 86, "r597": 86, "casoratian": 86, "kernel": [86, 181, 187, 189, 212], "vanish": [86, 160, 187, 190, 193, 210, 239], "rsolve_hyp": [86, 212], "randmatrix": 86, "percent": [86, 213], "prng": 86, "percentag": [86, 90], "46": [86, 93, 165, 193, 212, 214], "list2numpi": 86, "dtype": [86, 91, 181, 183, 184, 185, 194, 233], "matrix2numpi": 86, "symarrai": 86, "ndarrai": [86, 214, 220, 226], "prefix_i1_i2_": 86, "_2": [86, 169, 170, 210], "a_0_0": 86, "a_0_1": 86, "a_0_2": 86, "a_1_0": 86, "a_1_1": 86, "a_1_2": 86, "a_0_0_0": 86, "a_0_0_1": 86, "a_0_1_0": 86, "a_0_1_1": 86, "a_0_2_0": 86, "a_0_2_1": 86, "a_1_0_0": 86, "a_1_0_1": 86, "a_1_1_0": 86, "a_1_1_1": 86, "a_1_2_0": 86, "a_1_2_1": 86, "rot_axis1": 86, "rot_axis2": 86, "rot_axis3": 86, "a2idx": 86, "normalform": [87, 183], "hermite_normal_form": [87, 183, 189], "check_rank": [87, 183], "hnf": [87, 183, 189], "explos": [87, 183], "believ": [87, 90, 183], "dmdomainerror": [87, 183], "dmshapeerror": [87, 183], "r598": 87, "cohen": [87, 183, 188, 189], "mutablesparsematrix": 88, "_doktocsr": 89, "csr": 89, "ja": 89, "ia": 89, "_csrtodok": 89, "dok": 89, "1x1": [89, 214], "vert": [89, 175, 178, 247], "saw": [89, 184, 269], "dynam": [90, 96, 97, 99, 103, 105, 107, 108, 111, 114, 121, 122, 123, 124, 125, 126, 127, 128, 169, 170, 172, 173, 177, 178, 229, 230, 239], "eratosthen": 90, "_reset": [90, 190], "_list": 90, "extend_to_no": 90, "mobiusrang": 90, "primerang": 90, "10th": 90, "totientrang": 90, "1e11": 90, "50000": 90, "primepi": 90, "primal": [90, 181], "1299709": 90, "r599": 90, "prime_number_theorem": 90, "table_of_": 90, "cf": [90, 187], "28x": 90, "2c_x_": 90, "2f_log_x": 90, "2c_and_li": 90, "r600": 90, "approximations_for_the_nth_prime_numb": 90, "r601": 90, "27_number": 90, "arr1": 90, "arr2": 90, "prevprim": 90, "9th": 90, "nextprim": 90, "occupi": [90, 160, 220], "conjectur": [90, 187], "twin": 90, "bertrand": 90, "brocard": 90, "primori": 90, "r602": 90, "r603": 90, "utm": 90, "postul": 90, "r604": 90, "s_postul": 90, "primefactor": 90, "argu": 90, "cycle_length": 90, "nmax": 90, "brent": [90, 229], "floyd": 90, "cycle_detect": 90, "17737": 90, "20000": 90, "compositepi": 90, "831": 90, "smoothness_p": 90, "sm": [90, 112, 127, 181], "psm": 90, "govern": 90, "10431": 90, "annot": [90, 180, 194], "21477639576571": 90, "4410317": 90, "1787": 90, "4869863": 90, "2434931": 90, "multiplicity_in_factori": 90, "nfac": 90, "52818775009509558395695966887": 90, "is2pow": 90, "pollard_rho": 90, "1234": [90, 207], "max_step": 90, "pollard": [90, 210], "leader": 90, "16843009": 90, "32767": 90, "4i": 90, "3i": 90, "2489": 90, "1482": 90, "285": [90, 212], "leadup": 90, "r605": 90, "crandal": 90, "carl": [90, 229], "pomer": [90, 229], "229": 90, "231": [90, 170], "pollard_pm1": 90, "ilcm": 90, "likelihood": 90, "1009": 90, "igcd": [90, 182], "am": [90, 165, 194], "255": 90, "crack": 90, "617": 90, "1786": 90, "worst": [90, 190, 210], "scenario": [90, 214], "divisisor": 90, "realist": 90, "r606": 90, "236": 90, "r607": 90, "washington": 90, "2007": [90, 126, 229], "spring": [90, 104, 107, 112, 116], "ent": 90, "node81": 90, "r608": 90, "toronto": 90, "yuvalf": 90, "use_ecm": 90, "65537": [90, 193], "1407633717262338957430697921446883": 90, "991": 90, "202916782076162456022877024859": 90, "4200": 90, "1764": 90, "toggl": [90, 180], "12345678910111213141516": 90, "2507191691": 90, "1231026625769": 90, "factorrat": 90, "rat": 90, "987": 90, "10000000001": 90, "99009901": 90, "divisor_count": 90, "tim": [90, 232], "stackoverflow": [90, 232, 235], "1010381": 90, "proper_divisor": 90, "proper_divisor_count": 90, "udivisor": 90, "udivisor_count": 90, "r609": 90, "unitary_divisor": 90, "r610": 90, "unitarydivisor": 90, "r611": 90, "unitarydivisorfunct": 90, "antidivisor": 90, "r612": 90, "margin": [90, 99, 180, 214], "antidivisor_count": 90, "a066272": 90, "a066272a": 90, "r613": 90, "r614": 90, "27s_totient_funct": 90, "r615": 90, "totientfunct": 90, "r616": 90, "carmichael_funct": 90, "r617": 90, "carmichaelfunct": 90, "divisor_sigma": 90, "sigma_k": 90, "m_i": [90, 187], "m_ik": 90, "r618": 90, "divisor_funct": 90, "udivisor_sigma": 90, "47450": 90, "152": 90, "r619": 90, "core_t": 90, "core_2": 90, "squarefre": [90, 189], "cubefre": 90, "9424": 90, "1178": 90, "379238": 90, "square_factor": 90, "r620": 90, "free_integ": 90, "squarefree_cor": 90, "primenu": 90, "r621": 90, "primeomega": 90, "r622": 90, "mersenne_prime_expon": 90, "mersenn": 90, "4423": 90, "r623": 90, "perfectnumb": 90, "r624": 90, "perfect_numb": 90, "is_mersenne_prim": 90, "r625": 90, "mersenneprim": 90, "abund": 90, "is_abund": 90, "r626": 90, "abundantnumb": 90, "is_defici": 90, "r627": 90, "deficientnumb": 90, "is_amic": 90, "amic": 90, "220": [90, 190], "r628": 90, "amicable_numb": 90, "symmetric_residu": 90, "v_i": [90, 189, 212], "65": [90, 99, 187, 214], "639985": [90, 187], "912285": [90, 187], "954": 90, "gf_crt": [90, 187], "solve_congru": [90, 187], "programm": [90, 194], "galoistool": [90, 187], "crt1": 90, "4536": 90, "252": 90, "756": 90, "crt2": 90, "remainder_modulus_pair": 90, "mi": [90, 194], "k1": [90, 127, 158, 184, 185, 187], "k2": [90, 127, 184], "c_kn": 90, "binomial_coefficients_list": 90, "multinomial_coeffici": 90, "k_m": 90, "k_i": [90, 187, 204], "yann": 90, "laigl": 90, "chapui": 90, "permiss": [90, 179], "multinomial_coefficients_iter": 90, "_tupl": 90, "m53": 90, "partitions_": 90, "npartit": 90, "hardi": 90, "rademach": [90, 214], "r629": 90, "1958": [90, 179], "partitionfunctionp": 90, "is_euler_pseudoprim": 90, "pseudoprim": 90, "r630": 90, "euler_pseudoprim": 90, "prep": [90, 210, 211], "r631": 90, "mersenneforum": 90, "showpost": 90, "110896": 90, "mr": 90, "miller": 90, "rabin": 90, "wit": 90, "1373651": 90, "479001599": 90, "r632": 90, "135": 90, "138": 90, "93rabin_primality_test": 90, "deterministic_vari": 90, "is_lucas_prp": 90, "selfridg": 90, "377": 90, "1159": 90, "1829": 90, "3827": 90, "5459": 90, "5777": 90, "9071": 90, "9179": 90, "bailli": 90, "wagstaff": 90, "1980": [90, 232], "mpq": [90, 184, 186], "lucaspseudoprim": 90, "a217120": 90, "lucas_pseudoprim": 90, "is_strong_lucas_prp": 90, "bpsw": 90, "10877": 90, "16109": 90, "18971": 90, "a217255": 90, "psw_primality_test": 90, "is_extra_strong_lucas_prp": 90, "grantham": 90, "mo": [90, 127, 194], "jone": [90, 132], "preprint": 90, "a217719": 90, "perl": 90, "counterexampl": [90, 269], "989": 90, "3239": 90, "jon": 90, "mcom": 90, "234": 90, "01197": 90, "bisect": [90, 190, 212], "1e3": 90, "1e23": [90, 235], "near_int": 90, "strong_pseudoprim": 90, "is_gaussian_prim": 90, "r633": 90, "gaussian_prim": 90, "residue_ntheori": 90, "n_order": 90, "cong": [90, 187], "primitive_root": [90, 189], "r634": 90, "stein": [90, 210], "r635": 90, "hackman": 90, "2009": [90, 179], "sqrt_mod": 90, "sqrt_mod_it": 90, "quadratic_residu": 90, "nthroot_mod": 90, "109": [90, 188, 207], "is_nthpow_residu": 90, "r636": 90, "is_quad_residu": 90, "legendre_symbol": 90, "genfrac": 90, "nonresidu": 90, "alpha_2": [90, 189], "alpha_k": 90, "discrete_log": 90, "prime_ord": 90, "giant": [90, 213], "pohlig": 90, "r637": 90, "discretelogarithm": 90, "r638": 90, "cryptographi": [90, 249, 256], "menez": 90, "vanston": 90, "continued_fract": 90, "continued_fraction_period": 90, "continued_fraction_reduc": 90, "continued_fraction_converg": 90, "continued_fraction_iter": 90, "106": 90, "103993": 90, "33102": 90, "104348": 90, "33215": 90, "208341": 90, "66317": 90, "292": 90, "r639": 90, "discrimin": [90, 185, 187, 189, 190], "r640": 90, "periodic_continued_fract": 90, "r641": 90, "rosen": 90, "379": [90, 190], "381": 90, "januari": 90, "1992": [90, 188, 212], "233": [90, 188, 210], "718281835": 90, "287": 90, "count_digit": 90, "1111339": 90, "0xfa": 90, "c77": 90, "is_palindrom": [90, 232], "palindrom": 90, "0o121": 90, "oct": 90, "0o171": 90, "fermion": [90, 160], "r642": 90, "b6bius_funct": 90, "r643": 90, "thoma": [90, 126], "koshi": 90, "egyptian_fract": 90, "greedi": [90, 187, 203, 206], "egyptian": 90, "r644": 90, "jewett": 90, "takenouchi": 90, "3192": 90, "1118": 90, "2580": 90, "sylvest": [90, 187], "r645": 90, "seldom": 90, "blow": 90, "doubli": 90, "exhibit": [90, 179, 189, 203], "singli": 90, "tendenc": 90, "r646": 90, "1921": 90, "golumb": 90, "1962": 90, "propos": 90, "bleicher": 90, "1972": 90, "r647": 90, "420": [90, 207], "140": 90, "574": 90, "2788": 90, "6460": 90, "11590": 90, "33062": 90, "113820": 90, "greedy_algorithm_for_egyptian_fract": 90, "ic": [90, 210], "uci": 90, "eppstein": 90, "numth": 90, "egypt": 90, "ami": 90, "ektf": 90, "hu": 90, "finalpdf": 90, "ami_42_from129to134": 90, "bbp_pi": 90, "pi_hex_digit": 90, "hex": 90, "3243f6a8885a30": 90, "324": [90, 188], "r648": 90, "numberworld": 90, "subexponenti": 90, "comfort": [90, 91], "15154262241479": 90, "15423094826093": 90, "799333555511111": 90, "809709509409109": 90, "888888877777777": 90, "914148152112161": 90, "factoris": [90, 184, 185, 210], "max_curv": 90, "lenstra": 90, "repeatedli": [90, 100, 226], "ecm_one_factor": 90, "pseudorandom": [90, 232], "25645121643901801": 90, "5394769": 90, "4753701529": 90, "9804659461513846513": 90, "4641991": 90, "2112166839943": 90, "7060005655815754299976961394452809": 90, "6988699669998001": 90, "1010203040506070809": 90, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 90, "2709077133180915240135586837960864768806330782747": 90, "248": 90, "prime_bound": 90, "error_term": 90, "siq": 90, "modn": 90, "mulipl": 90, "r649": 90, "semanticscholar": 90, "5c52": 90, "8a975c1405bd35c65993abf5a4edb667c1db": 90, "r650": 90, "rieselprim": 90, "ziki": 90, "initializing_quadratic_siev": 90, "5915587277": 90, "3267000013": 90, "facilit": [91, 121, 131, 176, 225], "hook": [91, 194], "ship": 91, "000507214304613640": 91, "microsecond": 91, "000507214304614": 91, "hundr": [91, 263], "nanosecond": 91, "84147098": [91, 233, 258], "84119981": 91, "84092844": 91, "05426074": 91, "05433146": 91, "05440211": 91, "confer": [91, 267], "nano": 91, "manufactur": 91, "asnumpi": 91, "autowrap": [91, 219, 227, 231, 251, 257], "implemented_funct": [91, 226, 233], "sophist": [91, 212], "effort": [91, 185, 187], "50u": 91, "1u": 91, "10n": 91, "sympy_pars": 92, "local_dict": 92, "lambda_not": 92, "repeated_decim": 92, "auto_numb": 92, "factorial_not": 92, "global_dict": 92, "standard_transform": 92, "implicit_multiplication_appl": 92, "implicit_appl": 92, "implicit_multipl": 92, "convert_equals_sign": 92, "function_exponenti": 92, "stringify_expr": 92, "eval_expr": 92, "name_dict": 92, "fullform": 92, "setdelai": 92, "datatyp": [92, 185, 194, 227], "split_symbol": 92, "split_symbols_custom": 92, "_token_splitt": 92, "can_split": 92, "unsplitt": 92, "10sin": 92, "3xyz": 92, "2111": 92, "latex2sympi": 92, "typograph": 92, "parse_latex": 92, "stricter": 92, "liber": [92, 103, 263], "618": 92, "latexparsingerror": 92, "sym_expr": 92, "sympyexpress": 92, "source_cod": 92, "return_expr": 92, "definiton": 92, "src2": 92, "convert_to_expr": 92, "convert_to_c": 92, "src3": 92, "convert_to_python": 92, "src_code": 92, "filenam": [92, 194, 225, 226, 227, 235], "convert_to_fortran": 92, "pip3": 92, "python2": 92, "channel": 92, "continuum_mechan": [93, 94], "elastic_modulu": 93, "second_mo": 93, "base_char": 93, "withstand": [93, 94], "character": [93, 94, 175, 178, 201, 214, 220, 247], "profil": 93, "shear": [93, 94], "downward": [93, 94, 189], "apply_load": [93, 94], "bc_deflect": [93, 94], "boundary_condit": 93, "solve_for_reaction_load": [93, 94], "shear_forc": [93, 94], "bending_mo": [93, 94], "applied_load": 93, "nm": [93, 94, 158, 215], "pointload": [93, 94], "ramp": [93, 94, 98], "parabol": 93, "apply_support": 93, "loc": 93, "freedom": [93, 106, 107, 113, 115, 121, 214], "roller": [93, 94], "upward": [93, 189], "r_10": 93, "r_30": 93, "4000": [93, 94], "bc_slope": [93, 94], "cross_sect": 93, "elast": [93, 94], "12000": 93, "draw": [93, 140, 194, 214, 256], "pictori": 93, "positv": 93, "ild_moment": 93, "ild_react": 93, "reaction": [93, 94], "ild_shear": 93, "axial": [93, 129], "hing": [93, 94], "cantilev": [93, 94], "inertia": [93, 94, 102, 103, 104, 111, 112, 114, 116, 118, 119, 120, 121, 127, 170, 176, 177, 178, 189], "666666666666667": [93, 94], "max_bmoment": 93, "max_deflect": 93, "max_shear_forc": 93, "plot_bending_mo": [93, 94], "gpa": 93, "400": [93, 180, 190], "13750": 93, "31250": 93, "plot_deflect": [93, 94], "00138541666666667": 93, "86458333333333e": 93, "04166666666667e": 93, "20833333333333e": 93, "51041666666667e": 93, "plot_ild_mo": 93, "solve_for_ild_mo": 93, "1kn": 93, "r_0": 93, "r_8": 93, "solve_for_ild_react": 93, "plot_ild_react": 93, "5kn": 93, "r_7": 93, "plotgrid": [93, 256], "plot_ild_shear": 93, "solve_for_ild_shear": 93, "plot_loading_result": [93, 94], "subplot": [93, 180], "plot_shear_forc": [93, 94], "plot_shear_stress": 93, "stress": 93, "6875": 93, "2500": 93, "15625": [93, 167], "plot_slop": [93, 94], "59375e": 93, "125e": 93, "08333333333333e": 93, "0001953125": 93, "point_cflexur": 93, "overhang": [93, 94], "10kn": 93, "20kn": [93, 94], "3kn": 93, "reaction_load": [93, 94], "remove_load": [93, 104], "shear_stress": 93, "beam3d": 93, "shear_modulu": 93, "apply_moment_load": 93, "solve_slope_deflect": 93, "dz": [93, 102, 204], "r651": 93, "home": [93, 189, 207, 214, 225], "aau": 93, "jc": 93, "femtesemest": 93, "beams3d": 93, "axial_forc": 93, "axial_stress": 93, "load_vector": 93, "max_bending_mo": 93, "16000": 93, "495": 93, "10793": 93, "6400": 93, "301": [93, 204, 207], "560": 93, "2400": 93, "moment_load_vector": 93, "40000": 93, "4013": 93, "90300": 93, "1520": 93, "903": 93, "1600": [93, 94], "172": 93, "polar_mo": 93, "i1": [93, 100, 112, 127, 220], "1350": 93, "torsional_mo": 93, "torsion": 93, "_________________": 94, "________________": [94, 210], "_______________v": 94, "_______________": 94, "equilibrium": [94, 114, 124], "20e9": 94, "25e": 94, "______________________________________________": 94, "_______________________________________________": 94, "r\u2081": 94, "r\u2082": 94, "______________________": 94, "________________________": 94, "8kn": 94, "_____________": 94, "1m": 94, "3m": 94, "2m": 94, "5m": [94, 229], "679": 94, "12kn": 94, "________________________________": 94, "____________________________________________________": 94, "o____________________________________________________": 94, "4m": 94, "concentr": [94, 214], "_____________________________________": 94, "m\u2081": 94, "m\u2082": 94, "connector": 94, "_____________________": 94, "_______________________": 94, "_____________________o_______________________": 94, "oooo": [94, 232], "r\u2083": 94, "_______i_______": 94, "flexur": 94, "rigid": [94, 104, 107, 109, 112, 114, 116, 121, 127, 170, 177], "____________": 94, "____________o________________________": 94, "a\u2081": [94, 269], "a\u2082": [94, 269], "six": [94, 194, 207, 213, 214], "lti": [96, 97, 98], "transferfunct": [96, 97, 99], "interconnect": [96, 99], "mimo": [96, 99], "transferfunctionmatrix": [96, 99], "mimoseri": [96, 99], "mimoparallel": [96, 99], "mimofeedback": [96, 99], "control_plot": 97, "pole_zero_plot": 97, "pole_color": 97, "blue": [97, 180, 194], "pole_markers": 97, "zero_color": 97, "orang": 97, "zero_markers": 97, "show_ax": 97, "marker": [97, 180], "sisolineartimeinvari": [97, 99], "markers": 97, "tf1": [97, 99], "pole_zero_numerical_data": 97, "r652": 97, "93zero_plot": 97, "siso": [97, 99], "8660254j": 97, "bode_plot": 97, "initial_exp": 97, "final_exp": 97, "freq_unit": 97, "phase_unit": 97, "semilog": 97, "hz": 97, "hertz": 97, "bode_magnitude_plot": 97, "bode_phase_plot": 97, "bode_magnitude_numerical_data": 97, "5148378120533502e": 97, "68437": 97, "36188804005": 97, "020599914256786": 97, "0205999155219505": 97, "4117304087953": 97, "00000000260573": 97, "bode_phase_numerical_data": 97, "4472354033813751e": 97, "035581932165858e": 97, "47577": 97, "3248186011": 97, "67884": 97, "09326036123": 97, "5000000000291665e": 97, "6180885085e": 97, "08895483066e": 97, "1415085799262523": 97, "14155265358979": 97, "impulse_response_plot": 97, "lower_limit": [97, 259], "upper_limit": [97, 259], "step_response_plot": 97, "ramp_response_plot": 97, "r653": 97, "impulse_response_numerical_data": 97, "nb_of_point": [97, 180], "lineover1drangeseri": [97, 180], "amplitud": [97, 134], "06616480200395854": 97, "854500743565858": 97, "9999999799999999": 97, "7042848373025861": 97, "170748906965121e": 97, "1901263495547205e": 97, "r654": 97, "step_response_numerical_data": 97, "025413462339411542": 97, "0484508722725343": 97, "670250533855183": 97, "844291913708725": 97, "023844582399907256": 97, "042894276802320226": 97, "828770759094287e": 97, "456457160755703e": 97, "mx": [97, 140, 201], "r655": 97, "ramp_funct": 97, "ramp_response_numerical_data": 97, "12166980856813935": 97, "861246379582118": 97, "4504508011325967e": 97, "006046440489058766": 97, "12499999999568202": 97, "12499999999661349": 97, "bode": 98, "impuls": [98, 99], "den": [99, 185, 206, 210], "superscript": [99, 194], "tf2": 99, "tf3": 99, "tf4": 99, "tf5": 99, "tf6": 99, "500000000000000": 99, "tf7": 99, "tf8": 99, "tf9": 99, "tf10": 99, "tf11": 99, "tf12": 99, "r656": 99, "transfer_funct": 99, "r657": 99, "dc_gain": 99, "dc": [99, 123], "from_rational_express": 99, "zerodivisionerror": [99, 185, 223, 233], "complexinfin": 99, "tf": [99, 233], "is_biprop": 99, "is_prop": 99, "is_stabl": 99, "is_strictly_prop": 99, "sys1": 99, "sys2": 99, "feedforward": 99, "fed": 99, "sit": [99, 178], "plant": 99, "compulsori": 99, "tf_1": 99, "tf_2": 99, "tf_3": 99, "tf_4": 99, "tfm_1": 99, "num_input": 99, "num_output": 99, "tfm_2": 99, "tf_5": 99, "tf_6": 99, "tf_7": 99, "tf_8": 99, "tfm_3": 99, "tfm_4": 99, "tfm_5": 99, "tfm_6": 99, "tf_9": 99, "tf_10": 99, "tfm_7": 99, "tfm_8": 99, "tfm_9": 99, "tfm_10": 99, "tfm_11": 99, "tfm_12": 99, "elem_pol": 99, "elem_zero": 99, "from_matrix": [99, 183], "m_tf": 99, "tfm": 99, "tfm1": 99, "tfm2": 99, "g4": 99, "tfm3": 99, "mimolineartimeinvari": 99, "mat_a": 99, "mat_b": 99, "mat_c": 99, "tfm_a": 99, "tfm_b": 99, "tfm_c": 99, "expr_1": 99, "expr_2": 99, "expr_3": 99, "expr_4": 99, "plant_mat": 99, "controller_mat": 99, "neg_feedback": 99, "hep": 100, "gamma_matric": [100, 102], "gammamatrix": 100, "lorentzindex": 100, "gammamatrixhead": 100, "extract_type_ten": 100, "gamma_trac": 100, "i0": [100, 132, 220], "i2": [100, 112, 127, 220], "i4": [100, 220], "i5": 100, "ps": 100, "qs": [100, 107, 254], "kahane_simplifi": 100, "spinor": 100, "behind": [100, 112, 124, 164, 183, 203, 206, 210, 213, 255, 261], "rearrang": [100, 107, 122, 123, 144, 210], "ta": [100, 203], "tb": [100, 203, 225], "tc": [100, 185, 190, 203], "joseph": [100, 188], "kahan": 100, "octob": 100, "1968": 100, "simplify_gpgp": 100, "e_nl": [101, 161], "hartre": 101, "helium": 101, "2209": 101, "e_nl_dirac": 101, "spin_up": 101, "035999037000": 101, "relativist": 101, "angular": [101, 104, 106, 109, 114, 115, 116, 118, 120, 121, 124, 127, 129, 133, 134, 136, 139, 157, 161, 170, 173, 179], "momentum": [101, 109, 112, 121, 127, 138, 139, 157, 161, 179, 220], "light": [101, 132, 165, 174, 181], "035999037": 101, "1012": 101, "3627": 101, "500006656595360": 101, "125002080189006": 101, "125000416028342": 101, "0555562951740285": 101, "0555558020932949": 101, "0555556377366884": 101, "psi_nlm": 101, "wave": [101, 130, 131, 132, 197, 255], "psi_": [101, 136], "nlm": 101, "radial": [101, 115, 161], "nl": [101, 161], "magnet": [101, 131, 175, 247], "azimuth": 101, "wf": [101, 114], "abs_sqrd": 101, "silver": 101, "94": [101, 188], "141": 101, "4418": 101, "mdft": 102, "mgamma": 102, "gamma_5": 102, "gamma_0": 102, "gamma_3": 102, "r658": 102, "msigma": 102, "pauli": [102, 255], "sigma_i": [102, 214], "r659": 102, "pauli_matric": [102, 135], "pat_matrix": 102, "unansw": [103, 169], "kane": [103, 112, 117, 121, 126, 127, 169, 170, 239], "q1d": [103, 112, 114, 115, 118, 119, 120, 122, 123, 124, 125, 169, 174, 178], "q2d": [103, 112, 114, 115, 118, 119, 120, 122, 123, 173, 174], "q3d": [103, 118, 119, 120, 122], "kinemat": [103, 106, 107, 111, 112, 114, 115, 116, 118, 120, 122, 124, 125, 127, 128, 170, 176, 178], "dyad": [103, 127, 242], "mprint": [103, 118, 119, 120, 121, 122], "mpprint": [103, 121, 122], "mlatex": [103, 121], "sub_dict": [103, 105, 114], "msub": [103, 121, 124], "cleaner": [103, 127, 210], "gsl": [103, 227], "lsoda": 103, "penalti": 103, "masscent": [104, 106, 109, 125, 127], "central_inertia": [104, 109, 116], "possess": [104, 125, 220], "name_of_bodi": 104, "ixx": [104, 109, 170], "body_inertia": 104, "torqu": [104, 107, 111, 116, 122, 123, 127], "ang_vel_in": [104, 106, 112, 118, 119, 127, 170, 177], "set_ang_vel": [104, 109, 112, 114, 118, 119, 124, 125, 127, 128, 170, 172, 173, 177], "apply_forc": [104, 116], "reaction_bodi": [104, 116], "reaction_point": 104, "oppposit": 104, "desri": 104, "force1": 104, "b_masscent": 104, "b_frame": 104, "newtonion": 104, "spring_forc": 104, "n_frame": 104, "apply_torqu": [104, 116], "torquess": 104, "torque1": 104, "b1_frame": 104, "b2_frame": 104, "clear_load": 104, "dcm": [104, 106, 112, 114, 127, 170, 177, 178, 239], "orient_axi": [104, 170, 172], "kinetic_energi": [104, 121, 125, 127], "kinet": [104, 107, 109, 121], "inerti": [104, 107, 109, 114, 115, 118, 122, 123, 125, 127], "set_vel": [104, 107, 109, 112, 114, 115, 118, 119, 120, 122, 123, 124, 125, 127, 128, 173, 177], "b_ixx": 104, "b_mass": 104, "masscenter_vel": [104, 106], "smart": [105, 124, 201, 207, 210], "sub1": [105, 194], "sub2": [105, 194], "reference_fram": [105, 170], "child": [106, 184, 229], "parent_joint_po": [106, 116], "child_joint_po": [106, 116], "parent_axi": [106, 116], "child_axi": [106, 116], "_generate_coordin": 106, "_generate_spe": 106, "_orient_fram": 106, "_set_angular_veloc": 106, "_set_linar_veloc": 106, "rotation_axi": 106, "parent_point": 106, "child_point": 106, "kde": [106, 115, 124], "revolut": 106, "\u03c9": 106, "pc": [106, 191], "pc_p_joint": 106, "pc_c_joint": 106, "p_frame": 106, "c_frame": 106, "theta_pc": 106, "omega_pc": 106, "pos_from": [106, 112, 114, 115, 127, 173, 177], "pendulum": [106, 111, 113, 116, 121, 124, 128, 177], "upper_bob": 106, "lower_bob": 106, "ceiling_joint": 106, "pendulum_joint": 106, "theta_p1": 106, "theta_p2": 106, "u_fram": 106, "l_frame": 106, "omega_p1": 106, "omega_p2": 106, "vel": [106, 112, 114, 115, 119, 127, 173, 177, 245], "prismat": 106, "slide": 106, "x_pc": 106, "v_pc": 106, "wall": [106, 116], "part1": 106, "part2": 106, "j1": [106, 116, 139, 157], "j2": [106, 116, 139, 157], "x_j1": 106, "w_frame": 106, "x_j2": 106, "p1_frame": 106, "v_j1": 106, "kanesmethod": [107, 112, 114, 115, 116, 118, 119, 122, 124, 127], "q_ind": [107, 108, 112, 114, 115, 118, 119, 122, 124, 127], "u_ind": [107, 108, 112, 114, 115, 118, 119, 122, 124, 127], "kd_eq": [107, 112, 114, 115, 118, 119, 124, 127], "q_depend": [107, 114, 115, 122, 127], "configuration_constraint": [107, 114, 115, 122], "u_depend": [107, 114, 115, 122, 127], "velocity_constraint": [107, 114, 115, 122, 127], "acceleration_constraint": 107, "u_auxiliari": [107, 119, 122, 127], "forcelist": [107, 112, 115, 118, 119, 123, 124, 127], "levinson": [107, 126, 170, 239], "udot": [107, 114], "damper": [107, 112, 116], "qd": [107, 114, 122, 173], "ud": [107, 122], "kd": [107, 114, 118, 119, 122], "fl": [107, 114, 122, 123, 127, 188], "bl": [107, 114, 122, 127], "frstar": [107, 112, 114, 115, 118, 119, 122, 124, 127], "kanes_equ": [107, 112, 114, 115, 118, 119, 122, 124, 127], "mass_matrix": [107, 111, 114, 118, 119, 122, 123, 128], "a_and_b": [107, 108, 115], "mass_matrix_ful": [107, 112, 116, 122, 123], "forcing_ful": [107, 112, 116, 122, 123], "auxiliary_eq": [107, 119], "constrain": [107, 115, 123, 127], "kindiffdict": [107, 114, 118, 119, 122, 127], "new_method": [107, 115], "intens": [107, 108, 129, 132], "perm_mat": [107, 108, 124], "op_point": [107, 108, 115, 124], "beforehand": [107, 227], "inv_method": 107, "to_linear": [107, 124], "recalcul": [107, 190], "hol_coneq": [107, 115, 123], "nonhol_coneq": [107, 115, 123], "nonconserv": 107, "form_lagranges_equ": [107, 115, 120, 123, 124], "qdot": [107, 114, 173], "qdoubledot": 107, "lam": [107, 108, 128], "lagranges_equ": 107, "qd_ind": [107, 124], "q_dep": [107, 122, 124], "qd_dep": [107, 124], "solve_multipli": [107, 115], "sol_typ": 107, "array_lik": 107, "f_3": [108, 111, 128, 210], "f_c": [108, 115], "f_v": [108, 115], "f_a": 108, "q_d": 108, "u_i": [108, 124, 177, 187], "u_d": [108, 127], "q_op": [108, 115], "u_op": [108, 115], "qd_op": 108, "ud_op": [108, 115], "spatial": [109, 134, 170, 194], "init_vprint": [109, 110, 125, 128, 170, 172, 173, 176, 177, 178], "locatenew": [109, 114, 115, 118, 119, 120, 124, 125, 127, 128, 171, 173, 175, 177], "parallel_axi": 109, "inertia_tupl": 109, "mv": 109, "iyi": [109, 170], "izz": [109, 170], "ixi": [109, 170], "iyz": [109, 170], "izx": 109, "yy": [109, 178, 210], "yz": [109, 178, 180], "zx": [109, 178], "pos_vec": 109, "px": [109, 150, 155, 220], "body1": 109, "body2": 109, "body3": 109, "h2": 109, "multibodi": [109, 112, 121, 126, 127, 128, 177], "vprint": [110, 169, 173, 176, 178], "vpprint": [110, 169, 176, 178], "vlatex": [110, 169, 170, 176, 178], "coord_stat": 111, "right_hand_sid": 111, "coordinate_deriv": [111, 128], "alg_con": [111, 128], "output_eqn": 111, "coord_idx": [111, 128], "speed_idx": [111, 128], "m_3": [111, 128, 139, 179], "exogen": [111, 128], "ref_fram": 111, "graviti": [111, 112, 115, 116, 118, 120, 127, 175, 247], "theta_dot": 111, "kin_explicit_rh": [111, 128], "dyn_implicit_mat": [111, 128], "dyn_implicit_rh": [111, 128], "symsystem": 111, "dae": [111, 128], "adjust": [111, 197, 201], "comb_implicit_mat": [111, 128], "comb_implicit_rh": [111, 128], "kinema": 111, "comb_explicit_rh": [111, 128], "compute_explicit_form": 111, "awhil": 111, "constant_symbol": 111, "dynamic_symbol": 111, "motiongenesi": [112, 127], "double_pendulum": 112, "motionvari": [112, 127], "newtonian": [112, 127], "simprot": [112, 127], "n_a": 112, "n_b": 112, "w_a_n": 112, "w_b_n": [112, 127], "p_o_p": 112, "p_p_r": 112, "v_o_n": [112, 127], "v2pt": [112, 127], "v_p_n": 112, "v_r_n": 112, "force_p": 112, "force_r": 112, "tfinal": 112, "integstp": 112, "some_filenam": 112, "parse_autolev": 112, "sympy_cod": 112, "include_numer": 112, "include_pydi": 112, "pydi": [112, 127, 170], "u1d": [112, 114, 115, 118, 119, 122], "u2d": [112, 114, 115, 118, 119, 122], "frame_n": 112, "frame_a": 112, "frame_b": 112, "point_o": 112, "particle_p": 112, "p_pt": 112, "particle_r": 112, "r_pt": 112, "set_po": [112, 173, 177], "v2pt_theori": [112, 114, 118, 119, 120, 124, 125, 127, 128, 173, 177], "initial_condit": [112, 127], "overwritten": 112, "e2row": 112, "eigvec": [112, 127], "eigenvec": 112, "deg2rad": 112, "0174533": 112, "wo": 112, "coef": [112, 127], "u3": [112, 114, 116, 118, 119, 122, 127, 173, 177], "strai": 112, "reassign": 112, "inher": [112, 233, 261], "rhs_x": 112, "i_b_bo": 112, "body_b": 112, "body_b_f": 112, "b_cm": 112, "b_f": 112, "scene": [112, 206, 261], "i_c_d": 112, "i_p_q": 112, "i_b_o": 112, "e3": [112, 201, 210], "i_p_o": 112, "e4": [112, 201], "p_so_o": 112, "nicheck": 112, "plug": [112, 165], "hurdl": 112, "gitlab": 112, "repo": 112, "ch4": 112, "ch5": 112, "ch6": 112, "cst": 112, "grammar": [112, 206], "roll": [113, 114, 121, 177, 214], "disc": [113, 121, 177], "bicycl": [113, 121, 126], "nonminim": [113, 121, 124], "meijaard2007": [114, 126], "steer": [114, 126], "purposefulli": 114, "mechanics_print": [114, 118, 119, 120, 121, 122, 123], "yaw": 114, "ang": 114, "rear": 114, "wheel": 114, "pitch": 114, "q4": [114, 122, 172], "q5": [114, 172], "q4d": [114, 122], "q5d": 114, "u4": [114, 119, 122, 127], "u5": [114, 119], "u6": [114, 119], "u3d": [114, 118, 119], "u4d": 114, "u5d": 114, "u6d": 114, "explanatori": 114, "wfrad": 114, "wrrad": 114, "htangl": 114, "forkoffset": 114, "forklength": 114, "framelength": 114, "forkcg1": 114, "forkcg3": 114, "framecg1": 114, "framecg3": 114, "iwr11": 114, "iwr22": 114, "iwf11": 114, "iwf22": 114, "iframe11": 114, "iframe22": 114, "iframe33": 114, "iframe31": 114, "ifork11": 114, "ifork22": 114, "ifork33": 114, "ifork31": 114, "mframe": 114, "mfork": 114, "mwf": 114, "mwr": 114, "wr": 114, "tempfram": 114, "tempfork": 114, "orientnew": [114, 115, 118, 119, 120, 124, 128, 170, 172, 173, 175, 177, 178], "wr_cont": 114, "wr_mc": 114, "frame_mc": 114, "fork_mc": 114, "wf_mc": 114, "wf_cont": 114, "flip": [114, 145, 154, 214], "frame_i": 114, "fork_i": 114, "wr_i": 114, "wf_i": 114, "bodyfram": 114, "bodyfork": 114, "bodywr": 114, "bodywf": 114, "nonholonom": 114, "closer": [114, 213, 264], "slip": [114, 117, 119, 177], "replic": 114, "conlist_spe": 114, "conlist_coord": 114, "gravit": [114, 118, 163, 175, 247], "aforement": [114, 175, 207, 245], "paperradrear": 114, "paperradfront": 114, "hta": 114, "trailpap": 114, "08": 114, "rake": 114, "paperwb": 114, "02": 114, "paperframecgx": 114, "paperframecgz": 114, "paperforkcgx": 114, "paperforkcgz": 114, "framecgnorm": 114, "framecgpar": 114, "tempa": 114, "tempb": 114, "tempc": 114, "paperforkl": 114, "forkcgnorm": 114, "forkcgpar": 114, "upright": 114, "val_dict": 114, "0603": 114, "1405": 114, "05892": 114, "00708": 114, "00756": 114, "kdd": [114, 118, 119], "centripet": 114, "corioli": 114, "forcing_lin": 114, "mm_full": 114, "_k_kqdot": 114, "ve": 114, "xdot": 114, "lean": [114, 118, 120], "amat": 114, "eom": [115, 116, 124], "q_1": [115, 116, 124, 140, 177, 190, 207], "q_2": [115, 116, 124, 177], "u_1": [115, 116, 177, 189, 210], "u_2": [115, 116, 177, 189, 210], "theta1": 115, "dq_dict": 115, "presimplifi": 115, "inp_vec": [115, 124], "lagrangesmethod": [115, 120, 121, 123, 124], "lag": [115, 120, 124], "lm": [115, 123, 124, 187, 190], "lag_eq": [115, 124], "lam_op": 115, "jointsmethod": 116, "ngle": 116, "q_3": [116, 177], "u_3": [116, 177], "pinjoint": [116, 121], "prismaticjoint": [116, 121], "mb": [116, 127], "ibzz": 116, "joint": [116, 121], "compound_pend": 116, "simple_pend": 116, "slider": 116, "rev1": 116, "rev2": 116, "j3": [116, 139, 157], "form_eom": 116, "w_r_n_qd": [118, 119], "dmc": [118, 119, 120], "uv": [118, 119, 160], "bodyd": [118, 119, 120], "bodylist": [118, 119], "revisit": [119, 177], "kane1985": [119, 122, 125, 126], "thorough": [119, 124, 207], "simplifc": 119, "f3": [119, 180, 194], "necessit": 119, "factor_term": [119, 190, 203, 206], "simplify_auxiliary_eq": 119, "lrh": 120, "planet": 121, "robot": 121, "fascin": 121, "trajectori": 121, "challeng": 121, "came": [121, 264], "tackl": [121, 227], "organ": 121, "amen": 121, "arduou": 121, "momenta": [121, 139], "symbolicsystem": 121, "rough": [121, 165], "inertia_of_point_mass": 121, "linear_momentum": [121, 125, 127], "angular_momentum": [121, 125, 127], "kanemethod": 121, "find_dynamicsymbol": 121, "f_h": 122, "nh": 122, "ku": [122, 194], "k_d": 122, "f_d": [122, 123, 187], "dnh": 122, "f_r": [122, 124, 187], "speed_con": 122, "coord_con": 122, "u_dep": 122, "m_d": 123, "lam1": 123, "0_": 124, "blajer1994": [124, 126], "brought": [124, 214], "vel_p": 124, "a_op": 124, "b_op": 124, "m_op": 124, "a_lin": 124, "hasn": 124, "wikidyad": [125, 176], "wikidyadicproduct": [125, 176], "juxtaposit": [125, 169, 242], "hat": [125, 169, 170, 174, 175, 177, 178, 242, 243, 245, 247, 248], "otim": [125, 215], "_y": [125, 174, 177, 178], "l_p": 125, "likins1973": [125, 176], "l_b": 125, "requisit": 125, "t_p": 125, "t_b": 125, "t_t": 125, "virtu": [125, 127], "blajer": 126, "wojciech": 126, "werner": 126, "schiehlen": 126, "walter": 126, "schirm": 126, "kane1983": [126, 178], "likin": [126, 176], "david": [126, 190], "spacecraft": 126, "1983": [126, 229], "meijaard": 126, "jim": 126, "papadopoulo": 126, "ruina": 126, "schwab": 126, "royal": 126, "societi": [126, 207], "2084": 126, "1955": 126, "982": 126, "lectur": [127, 188, 214], "rigibodi": 127, "proprietari": 127, "k3": [127, 184], "k4": 127, "b11": 127, "b12": 127, "b21": 127, "b22": 127, "xd": 127, "xd2": 127, "y1d": 127, "y2d": 127, "tina": 127, "overwrit": [127, 169], "dt2": 127, "dy2": 127, "ty": 127, "linsolv": [127, 192, 208, 212, 270], "nonlinsolv": [127, 208, 212, 270], "nsolv": [127, 212], "rowmatrix": 127, "colmatrix": 127, "diagmat": 127, "eigval": 127, "row_matrix": 127, "col_matrix": 127, "ao": 127, "i12": 127, "i23": 127, "i31": 127, "bf": 127, "p_o_q": 127, "mag": 127, "unitvec": 127, "qo": 127, "p_p_q": 127, "partial_veloc": [127, 170, 173], "a_o_n": 127, "set_acc": [127, 173, 177], "qb": [127, 182], "qbd": 127, "alf_b_n": 127, "set_ang_acc": [127, 170], "ang_acc_in": [127, 170], "force_o": 127, "torque_a": 127, "qa": 127, "qad": 127, "a_b": 127, "v1pt": 127, "v1pt_theori": [127, 173, 177], "a1pt": 127, "a1pt_theori": [127, 173], "a2pt": 127, "a2pt_theori": [127, 173, 177], "angvel": 127, "force_vector": 127, "center_of_mass": 127, "kindiff": 127, "ke": 127, "configura": 127, "tion_constraint": 127, "pendent": 127, "velocity_con": 127, "traint": 127, "acceleration_": 127, "u_auxilia": 127, "ry": 127, "matlplotlib": 127, "stiff": 127, "damp": 127, "legend": [127, 180, 197], "introspect": 127, "rich": [127, 206], "media": [127, 133], "histori": 127, "esqu": 127, "cpython": 127, "pertin": [128, 181, 189], "alg_con_ful": 128, "symsystem1": 128, "symsystem2": 128, "symsystem3": 128, "raytransfermatrix": 129, "geometricrai": 129, "beamparamet": 129, "geometric_conj": 129, "gauss_conj": 129, "conjugate_gauss_beam": 129, "lens": 129, "gaussopt": 129, "wavelen": 129, "z_r": 129, "wavelength": [129, 134], "waist": 129, "rayleigh": [129, 214], "refract": [129, 131, 133, 134], "530e": 129, "88679245283019": 129, "92753330865999": 129, "w_0": [129, 207], "00100000000000000": 129, "freespac": 129, "fs": 129, "00101413072159615": 129, "00210803120913829": 129, "r660": 129, "complex_beam_paramet": 129, "r661": 129, "gaussian_beam": 129, "spread": [129, 194, 214, 229], "00053": 129, "goui": 129, "curvatur": [129, 133], "55998576005696": 129, "2809": 129, "peak": 129, "waist_approximation_limit": 129, "paraxi": [129, 133], "great": [129, 191, 194, 207, 233], "06e": 129, "curvedmirror": 129, "curvedrefract": 129, "flatmirror": 129, "flatrefract": 129, "2x1": 129, "thinlen": 129, "r662": 129, "ray_transfer_matrix_analysi": 129, "waist_in": 129, "waist_out": 129, "s_in": 129, "s_out": 129, "w_o": 129, "gaussian_conj": 129, "z_r_in": 129, "incid": [129, 133], "z_r_out": 129, "emerg": [129, 182], "geometric_conj_ab": 129, "geometric_conj_af": 129, "geometric_conj_bf": 129, "rayleigh2waist": 129, "waist2rayleigh": 129, "optic": [131, 132, 133, 134, 255], "permitt": 131, "permeabl": 131, "fermat": 131, "electr": [131, 133, 175, 245, 247], "electromagnet": [131, 175, 220, 247], "intrinsic_imped": 131, "149896229": [131, 134], "kilogram": [131, 163, 165, 167], "1250000": 131, "amper": 131, "refractive_index": 131, "299792458": [131, 134, 167], "r663": 131, "optical_medium": 131, "travel": [131, 134, 175, 245, 247], "stoke": [132, 246], "mueller": 132, "jones_vector": 132, "stokes_vector": 132, "half_wave_retard": 132, "polarizing_beam_splitt": 132, "jones_2_stok": 132, "\u2148": [132, 179, 193, 194, 213, 270], "\u03c7": 132, "\u03c8": 132, "i\u2080": 132, "plate": 132, "hwp": 132, "splitter": 132, "transmit": [132, 133], "pb": 132, "transmitted_port": 132, "reflected_port": 132, "transmitted_pow": 132, "reflected_pow": 132, "r664": 132, "jones_calculu": 132, "r665": 132, "mueller_calculu": 132, "r666": 132, "stokes_paramet": 132, "retard": 132, "poincar\u00e9": 132, "sphere": [132, 239, 248], "tilt": 132, "mayor": 132, "linear_polar": 132, "transmiss": [132, 133], "mueller_matrix": 132, "quarter_wave_retard": 132, "quarter": 132, "phase_retard": 132, "\u03b4": 132, "rs": [132, 191, 227], "ts": [132, 214], "phia": 132, "phib": 132, "4x1": [132, 214], "phi_a": 132, "phi_b": 132, "qwp": 132, "reflective_filt": 132, "unpolar": 132, "transmissive_filt": 132, "attenu": 132, "transmitt": 132, "ndf": 132, "refraction_angl": 133, "fresnel_coeffici": 133, "brewster_angl": 133, "critical_angl": 133, "lens_makers_formula": 133, "mirror_formula": 133, "lens_formula": 133, "hyperfocal_dist": 133, "transverse_magnif": 133, "medium1": 133, "medium2": 133, "brewster": 133, "926093295503462": 133, "onset": 133, "850908514477849": 133, "02005": 133, "angle_of_incid": 133, "polaris": 133, "te": 133, "undergo": 133, "317843553417859": 133, "348645229818821": 133, "658921776708929": 133, "651354770181179": 133, "235625382192159": 133, "971843958291041": 133, "816477005968898": 133, "577377951366403": 133, "r667": 133, "fresnel_equ": 133, "coc": 133, "0033": 133, "focal_length": 133, "n_len": 133, "n_surr": 133, "thick": 133, "1515151515151": 133, "0000000000000": 133, "3418463277618": 133, "41152": 133, "magnif": 133, "twave": 134, "time_period": 134, "wavenumb": 134, "phi1": 134, "phi2": 134, "w1": [134, 206], "w3": [134, 194], "superposit": [134, 145, 156, 181], "angular_veloc": 134, "tempor": 134, "r668": 135, "paulialgebra": 135, "evaluate_pauli_product": 135, "paulimatric": 135, "sigma3": 135, "nodal": [136, 161, 181], "hw": [136, 161], "coherent_st": 136, "coher": [136, 162, 168], "1d": [136, 138, 151, 170, 219], "wavefunct": [136, 149, 158, 161, 255], "r669": 137, "__cmp__": [137, 141, 160], "dagger": [137, 141, 147, 149, 152, 154, 159, 160], "operatorset": [138, 150], "positionbra3d": 138, "eigenbra": [138, 151, 157], "positionket3d": 138, "eigenket": [138, 151, 157], "positionstate3d": 138, "eigenst": [138, 150, 155, 157, 158], "position_x": 138, "position_i": 138, "position_z": 138, "pxbra": [138, 150], "pxket": [138, 150, 155], "pxop": [138, 150, 155], "xbra": [138, 150, 155], "xket": [138, 150, 155], "xop": [138, 150, 155], "yop": 138, "zop": 138, "uncoupl": [139, 157], "r670": 139, "j_3": [139, 157, 179], "r671": 139, "wigner3j": [139, 179], "wigner": [139, 157, 214, 255], "varshalovich": [139, 157], "zyla": 139, "theor": 139, "phy": [139, 165, 179], "083c01": 139, "r672": 139, "w3j": 139, "715": [139, 179, 194], "wigner6j": [139, 179], "j12": [139, 157], "j23": 139, "6j": [139, 179], "wigner9j": [139, 179], "j4": 139, "j34": 139, "j13": 139, "j24": 139, "9j": [139, 179], "cg_simp": 139, "r673": 139, "clebsh": 139, "rethink": 140, "figsiz": 140, "circuitplot": 140, "nqubit": [140, 144, 145, 154], "control_lin": 140, "gate_idx": [140, 144], "min_wir": 140, "max_wir": 140, "control_point": 140, "wire_idx": 140, "not_point": 140, "one_qubit_box": 140, "box": [140, 145, 147, 156, 158, 248], "qubit": [140, 144, 145, 146, 147, 153], "swap_point": 140, "two_qubit_box": 140, "createcg": 140, "latexnam": 140, "mock": 140, "mz": 140, "circuit_plot": 140, "min_qubit": [140, 144], "autogener": 140, "wire": 140, "q_0": [140, 207], "j_0": 140, "r674": 141, "comm": [141, 160, 220], "plank": 142, "r675": 142, "05457162000000e": 142, "planck_const": 142, "hermetian": 143, "r676": 143, "r677": 143, "ket": [143, 148, 149, 150, 152, 154, 155, 158, 160], "bra": [143, 148, 149, 150, 152, 154, 155, 158, 160], "innerproduct": [143, 148, 149, 155, 157, 160], "outerproduct": [143, 149], "seamlessli": 143, "hermitian_adjoint": 143, "hermitian_transpos": 143, "_apply_operators_qubit": 144, "gate_sort": 144, "gate_simp": 144, "ugat": 144, "cgate": 144, "control_valu": 144, "cnot": 144, "eval_control": 144, "plot_gat": 144, "circ_plot": 144, "simplify_cg": 144, "cphase": 144, "cnotgat": 144, "qappli": [144, 145, 147, 149, 154], "get_target_matrix": 144, "represen": 144, "hadamardg": 144, "identityg": 144, "onequbitg": 144, "phaseg": 144, "swapgat": 144, "target1": 144, "target2": 144, "tgate": 144, "twoqubitg": 144, "xgate": 144, "ygate": 144, "zgate": 144, "bubbl": 144, "random_circuit": 144, "ngate": 144, "gate_spac": 144, "mermin": 145, "_represent_zg": 145, "oracleg": 145, "oracl": 145, "intqubit": [145, 154], "search_funct": 145, "wgate": 145, "apply_grov": 145, "grover_iter": 145, "qstate": 145, "wv": 145, "superposition_basi": 145, "numqubit": 145, "basis_st": 145, "matt": 146, "complexspac": 146, "directsumhilbertspac": 146, "r678": 146, "hilbertspac": 146, "fockspac": 146, "hs": 146, "hilbert_spac": [146, 149, 158], "direct_sum": 146, "quantiz": [146, 255], "r679": 146, "mess": [146, 210, 213, 269], "fock_spac": 146, "r680": 146, "tensorpowerhilbertspac": 146, "r681": 146, "tensor_product": 146, "tensorproducthilbertspac": 146, "r682": 146, "clebsch": [147, 157, 179], "gordan": [147, 157, 179], "hilbert": [147, 149, 155], "grover": 147, "qft": [147, 156], "shor": 147, "brabas": [148, 149, 155, 158], "ketbas": [148, 149, 155, 158], "r683": 148, "inner_product": 148, "apply_oper": [149, 160], "identityoper": 149, "r684": 149, "r685": 149, "polymoni": 149, "operator_": 149, "28physic": 149, "old_assumpt": 149, "r686": 149, "outer_product": 149, "unitaryoper": 149, "operators_to_st": 150, "state_to_oper": 150, "_operators_to_st": 150, "state_map": 150, "_state_to_oper": 150, "statebas": [150, 155, 158], "piab": 151, "piabbra": 151, "piabhamiltonian": 151, "piabket": 151, "ip_doit": 152, "smarter": [153, 203], "rk": 153, "iqft": 153, "rkgate": 153, "qtf": 153, "povm": 154, "as_int": [154, 235], "qubit_valu": 154, "intqubitbra": 154, "00001": 154, "qubitbra": 154, "matrix_to_dens": 154, "matrix_to_qubit": 154, "measure_al": 154, "ensembl": 154, "measure_all_oneshot": 154, "oneshot": 154, "measure_parti": 154, "measure_partial_oneshot": 154, "qubit_to_matrix": 154, "enumerate_st": 155, "_enumerate_st": 155, "foo_1": 155, "foo_2": 155, "foo_3": 155, "test2": 155, "bar_4": 155, "bar_5": 155, "bar_10": 155, "get_basi": 155, "replace_non": 155, "operator_to_st": 155, "qexpr": 155, "integrate_result": 155, "orig_expr": 155, "x_ket": 155, "x_op": 155, "rep_expect": 155, "px_2": 155, "px_1": 155, "rep_innerproduct": 155, "_repres": 155, "_represent_foobasi": 155, "foobasi": 155, "_represent_szop": 155, "szupket": 155, "szop": 155, "sz": 155, "cmod": 156, "reformat": 156, "period_find": 156, "momemtum": 157, "j2op": 157, "jxbra": 157, "jx": 157, "jzket": 157, "jxbracoupl": 157, "jcoupl": 157, "jzketcoupl": 157, "jxket": 157, "jxketcoupl": 157, "jybra": 157, "jy": 157, "jybracoupl": 157, "jyket": 157, "jyketcoupl": 157, "jzbra": 157, "jz": 157, "jzbracoupl": 157, "j_4": [157, 179], "argular": 157, "jzop": 157, "passiv": 157, "r687": 157, "wignerd": 157, "mp": [157, 212, 228], "jm": 157, "jj": 157, "r688": 157, "jcoupling_list": 157, "coupledspinst": 157, "spinstat": 157, "r689": 158, "dual_class": 158, "mn": [158, 194, 214], "ket_not": 158, "r690": 158, "k0": [158, 185, 187, 214], "orthogonalbra": 158, "orthogonalket": 158, "orthogonalst": 158, "_eval_adjoint": 158, "timedepbra": 158, "timedepst": 158, "timedepket": 158, "prob": [158, 214], "412214747707527": 158, "matrix_tensor_product": 159, "axb": 159, "xdagger": 159, "axc": 159, "bxc": 159, "tensor_product_simp": 159, "cxd": 159, "boson": 160, "fetter": 160, "welecka": 160, "secondqu": 160, "annihilateboson": 160, "fockstateket": 160, "bket": 160, "fockstatebosonket": 160, "annihilatefermion": 160, "createboson": 160, "is_only_q_annihil": 160, "destroi": [160, 203], "quasi": 160, "hole": 160, "is_only_q_cr": 160, "is_q_annihil": 160, "is_q_creat": 160, "antisymmetrictensor": 160, "bbra": 160, "fockstatebosonbra": 160, "bd": 160, "bosonicbasi": 160, "fock": 160, "NO": 160, "createfermion": 160, "wick": 160, "fbra": 160, "fockstatefermionbra": 160, "fket": 160, "fockstatefermionket": 160, "fixedbosonicbasi": 160, "n_particl": 160, "n_level": 160, "fockstat": 160, "occup": 160, "bosonbra": 160, "fockstatebra": 160, "fermi_level": 160, "r691": 160, "textwrap": [160, 235], "_q": 160, "get_subno": 160, "fermionicoper": 160, "has_q_annihil": 160, "rightmost": 160, "q_annihil": 160, "has_q_creat": 160, "leftmost": 160, "q_creator": 160, "iter_q_annihil": 160, "iter_q_cr": 160, "0x": 160, "permutationoper": 160, "get_permut": 160, "varbosonicbasi": 160, "n_max": 160, "creator": 160, "evaluate_delta": 160, "einstein": [160, 220], "d_ij": 160, "_j": [160, 165, 179, 196], "d_ip": 160, "d_qp": 160, "matrix_rep": 160, "simplify_index_permut": 160, "permutation_oper": 160, "schemat": [160, 165], "abij": 160, "abji": 160, "baij": 160, "baji": 160, "permutlist": 160, "substitute_dummi": 160, "new_indic": 160, "pretty_indic": 160, "_get_ordered_dummi": 160, "_c": 160, "_d": 160, "index_group": 160, "string_of_lett": 160, "my_dummi": 160, "_v": [160, 178], "_p_0": 160, "_p_1": 160, "keep_only_fully_contract": 160, "sho": 161, "isotrop": 161, "mk": [162, 165], "legal": 162, "temperatur": [162, 175, 247], "dimensions": 162, "dimsys_si": [162, 163], "get_dimensional_depend": [162, 163], "has_integer_pow": 162, "dim_si": 162, "base_dim": 162, "derived_dim": 162, "dimensional_depend": 162, "can_transf_matrix": 162, "useless": [162, 185, 187], "inv_can_transf_matrix": 162, "dim_can_vector": 162, "dim_vector": 162, "is_consist": [162, 168], "is_dimensionless": 162, "list_can_dim": 162, "print_dim_bas": 162, "gravitational_const": [163, 167], "equivalent_dim": 163, "grav_eq": 163, "kepler": [163, 239], "venu": 163, "701": 163, "dai": [163, 167, 210], "venus_a": 163, "108208000e3": 163, "solar": 163, "solar_mass": 163, "9891e30": 163, "convert_to": [163, 167, 183, 189], "5112118495813": 163, "659097795948": 163, "astrophys": 163, "ill": 163, "astrophysicist": 164, "ua": [164, 182], "earth": [164, 175, 247], "sun": 164, "theoricist": 164, "philosophi": [164, 210, 213, 255], "mole": 165, "dimensionless": 165, "unavoid": 165, "d_3": 165, "d_2": [165, 190, 214], "underbrac": [165, 177], "countabl": [165, 213], "pmatrix": 165, "kg": [165, 248], "glu": 165, "men": 165, "heat": 165, "joul": 165, "calori": 165, "stori": 165, "chemistri": 165, "page52": 165, "1952": 165, "page78": 165, "deboer79": 165, "boer": 165, "818": 165, "levyleblond77": 165, "l\u00e9vy": 165, "leblond": 165, "conceptu": [165, 181, 247], "rivista": 165, "del": [165, 229, 246, 269], "nuovo": [165, 179], "cimento": [165, 179], "1977": 165, "187": [165, 188], "214": 165, "anticip": 165, "bin_prefix": 166, "abbrev": [166, 167, 194], "latex_repr": [166, 167], "encapsul": [166, 187, 213, 227], "kilo": 166, "scale_factor": 167, "pretty_unicode_repr": 167, "pretty_ascii_repr": 167, "mathml_presentation_repr": 167, "is_prefix": 167, "abbrevi": [167, 182, 194, 213, 215], "speed_of_light": 167, "reference_quant": 167, "target_unit": 167, "mile": 167, "atomic_mass_const": 167, "centimet": 167, "25146": 167, "609344": 167, "86400": 167, "660539060e": 167, "300000": 167, "planck": 167, "62963087839509e": 167, "base_unit": 168, "descr": 168, "dimension_system": 168, "derived_unit": 168, "overridden": [168, 181, 196, 269], "get_units_non_prefix": 168, "to_matrix": [169, 170, 178, 183, 189, 239, 241, 243], "rigidli": 169, "entireti": 169, "hidden": 169, "_str": 169, "otherfram": [170, 239], "n_alpha_b": 170, "ny": 170, "_3": 170, "rot_typ": [170, 173, 175], "rot_ord": [170, 173, 240], "orient_body_fix": 170, "orient_space_fix": 170, "orient_quaternion": 170, "tait": [170, 239, 240], "bryan": [170, 239, 240], "quaternion": [170, 173, 178, 239, 240, 250], "userwarn": [170, 223, 230, 265], "rotation_ord": [170, 239, 240], "xzx": 170, "zxz": [170, 178, 239, 240], "xyx": [170, 239, 240], "yzy": 170, "zyz": 170, "yxy": [170, 178], "yzx": [170, 178], "zxy": 170, "xzy": 170, "zyx": 170, "yxz": 170, "orient_explicit": 170, "lambda_x": [170, 239, 240], "lambda_i": [170, 239, 240], "lambda_z": [170, 239, 240], "q0": [170, 210, 239, 240], "newnam": 170, "gen_spe": [170, 173], "variable_map": 170, "a_x": [170, 178, 194], "b_x": [170, 172, 178, 220], "b_y": [170, 172, 178, 220], "a_z": [170, 178], "b_z": [170, 178, 220], "inlist": 170, "var_in_dcm": 170, "reexpress": [170, 243], "time_deriv": [170, 175, 176], "free_dynamicsymbol": 170, "codirect": 170, "dyadic_tensor": [170, 239], "frame1": 170, "frame2": [170, 172], "second_reference_fram": 170, "ixz": 170, "inertia_dyad": 170, "pertain": [171, 176], "fieldfunct": [171, 175], "vect": [171, 239, 241], "r_x": [171, 175], "r_y": [171, 175], "r_z": [171, 175], "scalar_field": [171, 175, 239, 241, 245], "grad_field": [171, 241], "point1": [171, 241], "point2": [171, 241], "sympyfi": [171, 172, 173, 241], "position2": [171, 241], "vectfield": [171, 175, 241, 245], "solenoid": [171, 241, 246], "q6": 172, "vec1": 172, "vec2": 172, "coordinatesym": [172, 176], "n_x": 172, "rotating_reference_fram": 172, "time_derivatives_in_the_two_fram": 172, "otherpoint": 173, "outfram": 173, "interfram": 173, "fixedfram": 173, "get_motion_param": 173, "vectori": [173, 175, 242, 247], "timevalue1": 173, "timevalue2": 173, "313": 173, "vel_vec": 173, "q1dd": 174, "q2dd": 174, "charg": [175, 247], "displac": [175, 177, 247], "depict": [175, 213, 247], "temper": 175, "electric_potenti": [175, 245], "r1_x": 175, "r1_y": 175, "infinitesim": [175, 245], "nabla": [175, 239, 244, 245], "f_y": [175, 245], "f_x": [175, 213, 245], "sink": [175, 245], "irrot": [175, 245], "is_conserv": [175, 245, 246], "is_solenoid": [175, 245, 246], "scalar_potenti": [175, 245, 246], "conservative_field": [175, 245], "scalar_potential_differ": [175, 245, 246], "aug": [176, 213], "dyadic_product": [176, 246], "inc": [176, 188], "kinematic_equ": 176, "w_x": 177, "w_y": 177, "w_z": 177, "w_1": [177, 189], "w_2": [177, 189], "w_3": 177, "textrm": [177, 178, 202], "u_x": 177, "sp": 177, "oq": 177, "qp": 177, "rod": 177, "went": 177, "parallelogram": 178, "c_x": 178, "c_y": 178, "c_z": 178, "train": 178, "friend": 178, "xz": [178, 180], "zy": 178, "undergon": [178, 213], "vastli": 178, "wait": 178, "mold": 178, "bp": [178, 210], "bpp": 178, "zzx": 178, "multifram": 178, "direction": 178, "racah": 179, "gaunt": 179, "rasch03": 179, "regge58": 179, "regg": 179, "544": 179, "regge59": 179, "116": [179, 188], "1959": 179, "edmonds74": 179, "edmond": 179, "princeton": [179, 214], "1957": 179, "rasch": 179, "siam": [179, 232], "sci": 179, "1416": 179, "1428": 179, "liberatodebrito82": 179, "liberato": 179, "brito": 179, "forum": [179, 213], "m4nzdu": 179, "7o38": 179, "jen": 179, "03": [179, 214], "oscar": 179, "gerardo": 179, "lazo": 179, "arjona": 179, "jyr2000": 179, "gmail": 179, "clebsch_gordan": 179, "2j_3": 179, "dot_rot_grad_ynm": 179, "gradient": [179, 180, 239, 246, 247], "_l": 179, "l_2": 179, "l_3": 179, "drastic": 179, "2l_1": 179, "2l_2": 179, "2l_3": 179, "1200": 179, "00689500421922113448": 179, "inflect": 179, "unsuit": 179, "dd": [179, 199], "ee": [179, 189], "j_5": 179, "j_6": 179, "richer": 179, "wigner_3j": 179, "wigner_6j": 179, "wigner_9j": 179, "j_7": 179, "j_8": 179, "j_9": 179, "05555555": 179, "1666666": 179, "wigner_d": 179, "j_z": 179, "j_y": 179, "\u03b3": [179, 259, 269], "wigner_d_smal": 179, "textbackend": 180, "plot_parametr": 180, "plot_implicit": 180, "plot3d_parametric_lin": 180, "plot3d_parametric_surfac": 180, "xlabel": 180, "ylabel": 180, "zlabel": 180, "aspect_ratio": 180, "ylim": 180, "axis_cent": 180, "xscale": 180, "yscale": 180, "autoscal": 180, "textplot": 180, "_seri": [180, 191], "baseseri": 180, "nonparametr": 180, "cylindr": [180, 245], "basebackend": 180, "parametric2dlineseri": 180, "parametric3dlineseri": 180, "red": 180, "cyan": 180, "grayscal": 180, "integers_onli": 180, "surfaceover2drangeseri": 180, "parametricsurfaceseri": 180, "surface_color": 180, "range1": 180, "range2": 180, "fill_between": 180, "inch": 180, "expr_x": 180, "expr_i": 180, "canva": 180, "range_x": 180, "range_i": 180, "nb_of_points_x": 180, "nb_of_points_i": 180, "expr_z": 180, "range_u": 180, "range_v": 180, "nb_of_points_u": 180, "nb_of_points_v": 180, "x_var": 180, "y_var": 180, "mesh": 180, "p8": 180, "p9": 180, "nrow": [180, 183], "ncolumn": 180, "stuff": [180, 225, 227, 235], "is_2dlin": 180, "oblig": 180, "only_integ": 180, "get_seg": 180, "get_color_arrai": 180, "var_start_end": 180, "r692": 180, "luiz": 180, "henriqu": 180, "figueiredo": 180, "r693": 180, "line3dbaseseri": 180, "surfacebaseseri": 180, "var_start_end_x": 180, "var_start_end_i": 180, "var_start_end_u": 180, "var_start_end_v": 180, "implicitseri": 180, "has_equ": 180, "use_interval_math": 180, "centric": 180, "get_mesh": 180, "process_seri": 180, "_process_seri": 180, "keyboard": 180, "mous": 180, "pyglet_plot": 180, "screenshot": 180, "camera": 180, "zoom": 180, "numpad": 180, "ordin": [180, 210, 235], "f5": 180, "f6": 180, "f8": 180, "drag": 180, "button": [180, 226], "curvilinear": [180, 242, 243, 246], "__setitem__": 180, "zfade4": 180, "key1": 180, "value1": 180, "key2": 180, "value2": 180, "unbound_theta": 180, "wirefram": 180, "saddl": 180, "fz": 180, "_______________________________________________________": 180, "mediterranean": 181, "cultur": 181, "arab": 181, "lighten": 181, "tapestri": 181, "woven": 181, "european": 181, "soil": 181, "plausibl": 181, "teeter": 181, "totter": 181, "outweigh": 181, "excit": 181, "amus": 181, "kempf": 181, "1944": 181, "todai": 181, "20th": 181, "dedekind": 181, "intim": 181, "disciplin": 181, "toolset": 181, "atiyah69": [181, 188], "gear": 181, "greuel2008": [181, 188], "interspers": 181, "lr": 181, "ilex": 181, "\u211a": [181, 194], "localis": 181, "abridg": 181, "free_modul": [181, 185], "quotient_r": [181, 185], "overload": [181, 184, 185, 242, 264], "polynomialr": [181, 185, 186, 192], "domain_or_r": [181, 185], "quotientr": [181, 185], "base_id": [181, 185], "elbow": 181, "room": 181, "componentwis": [181, 194], "inclin": 181, "biproduct": 181, "quotient_modul": 181, "is_submodul": 181, "multiply_id": 181, "identity_hom": 181, "freemodul": 181, "freemoduleel": 181, "conicis": 181, "_contain": 181, "_syzygi": 181, "_in_terms_of_gener": 181, "_intersect": 181, "_module_quoti": 181, "reduce_el": [181, 189], "represantit": 181, "in_terms_of_gener": 181, "inclusion_hom": 181, "rela": 181, "relb": 181, "is_full_modul": 181, "module_quoti": 181, "opt": [181, 187, 206, 265], "coincis": 181, "syzygy_modul": 181, "r_n": 181, "_contains_elem": 181, "_contains_id": 181, "_quotient": 181, "_union": 181, "_product": 181, "is_whole_r": 181, "is_maxim": 181, "is_primari": 181, "is_rad": 181, "is_princip": 181, "xj": 181, "satur": 181, "subquoti": 181, "quotientmodul": 181, "subquotientmodul": 181, "killed_modul": 181, "quotientmoduleel": 181, "kill": [181, 185, 225], "quotient_hom": 181, "ker": 181, "surject": 181, "cokernel": 181, "coker": 181, "meaningfulli": 181, "restrict_domain": 181, "homomoprh": 181, "modulehomomorph": [181, 189], "_ker": 181, "_img": 181, "_kernel": 181, "_imag": 181, "_restrict_domain": 181, "_restrict_codomain": 181, "_quotient_domain": 181, "_quotient_codomain": 181, "_appli": 181, "_mul_scalar": 181, "_compos": 181, "_add": [181, 200], "is_inject": 181, "quotient_domain": 181, "is_isomorph": 181, "preimag": 181, "restrict_codomain": 181, "is_surject": 181, "quotient_codomain": 181, "induct": 181, "monogen": 181, "monogenicfiniteextens": [181, 185], "finiteextens": 181, "sqrt2": [181, 184], "_5": 181, "extensionel": [181, 185], "notinvert": [181, 187, 190], "nu_1": 182, "nu_2": 182, "nu_n": 182, "nu_i": 182, "customarili": 182, "irreduc": [182, 185, 187, 189, 190, 193, 214, 220, 269], "endow": 182, "resp": [182, 185, 210], "divmod": [182, 184, 185], "cb": [182, 232], "sqf_list": [182, 185, 190], "sqf": [182, 185, 190, 207], "buchberg": [182, 187, 188, 190], "groebnerbasi": [182, 190, 193], "solve_poly_system": [182, 190, 212, 213], "fmt": [183, 185, 189], "matrix1": 183, "driectli": 183, "dmnonsquarematrixerror": 183, "zz_i": [183, 184, 186], "from_dict_sympi": 183, "ncol": 183, "elemsdict": 183, "from_list_sympi": 183, "from_list": [183, 185, 190, 191], "construct_domain": [183, 184, 185, 190], "from_rep": 183, "drep": 183, "dm": [183, 189], "ownership": 183, "scc": 183, "substract": 183, "to_dens": 183, "to_field": [183, 185, 190], "to_spars": 183, "aq": 183, "ccc": [183, 213], "from_ddm": 183, "domainerror": [183, 187, 190], "to_ddm": 183, "r694": 183, "pythonmpq": [184, 185], "srepr": [184, 257, 264], "leaf": [184, 194, 203, 264], "strength": 184, "richardon": 184, "dup_factor_list": 184, "factortool": [184, 187], "dup_": [184, 187], "dmp_": [184, 187], "prod": [184, 191, 203], "z1": [184, 185, 212], "is_field": [184, 185], "quo": [184, 185, 187, 190], "rem": [184, 185, 187, 190], "exquo": [184, 185, 190], "exactquotientfail": [184, 185, 187, 190], "mpz": [184, 185], "of_typ": [184, 185], "z1_sympi": 184, "to_sympi": [184, 185], "from_sympi": [184, 185], "forth": [184, 189], "z_sympi": 184, "z_zz": 184, "coercionfail": [184, 187], "sum_domain": 184, "expressions_sympi": 184, "expressions_dom": 184, "result_dom": 184, "e_dom": 184, "result_sympi": 184, "qq_i": [184, 186], "gaussianinteg": [184, 185], "gaussianrationalfield": [184, 185], "gaussianr": [184, 185], "galoi": [184, 187, 189], "finitefield": [184, 185], "pythonfinitefield": [184, 185], "gmpyfinitefield": [184, 185], "welcom": [184, 210, 262], "realel": [184, 185], "complexel": [184, 185], "mpc": 184, "xr": [184, 192], "zc": 184, "1j": 184, "_mpc_": 184, "realfield": [184, 185], "rr100": 184, "33333333333333333333333333333": 184, "hack": [184, 210, 223], "algebraic_field": [184, 185, 187, 189], "algebraicfield": [184, 185, 187, 189], "sqrt3": 184, "x_dom": 184, "p_expr": [184, 185], "polyel": [184, 185, 187, 191, 192, 194], "p_dom": 184, "unexpand": [184, 193, 203, 226], "xk": [184, 185, 196], "yk": [184, 185], "poly_r": [184, 185], "old_polynomialr": 184, "globalpolynomialr": 184, "polyclass": [184, 185, 190], "yr": [184, 192], "broader": 184, "get_field": [184, 185], "frac_field": [184, 185], "rationalfield": [184, 185], "old_frac_field": [184, 185], "fractionfield": [184, 185], "old_fractionfield": 184, "xf": 184, "yf": 184, "fracfield": [184, 185], "expressiondomain": [184, 185], "elements_sympi": 184, "elements_k": 184, "convert_from": [184, 185], "num_zz": 184, "num_qq": 184, "domainel": [184, 185, 192], "encompass": 184, "all_coeff": [184, 185, 190], "dom": [184, 185, 187, 202], "strang": 184, "hybrid": 184, "unreli": 184, "usefulli": 185, "pythonr": [185, 192], "p_domain": 185, "ez": [185, 220], "get_r": 185, "has_assoc_field": 185, "has_assoc_r": 185, "alg_field_from_poli": [185, 189], "root_index": 185, "almosteq": 185, "cyclotomic_field": [185, 189], "zeta7": 185, "zeta_": 185, "lexord": [185, 190], "from_algebraicfield": 185, "from_complexfield": 185, "from_expressiondomain": 185, "from_expressionrawdomain": 185, "from_ff": 185, "modularinteg": 185, "from_ff_gmpi": 185, "from_ff_python": 185, "from_fractionfield": 185, "from_globalpolynomialr": 185, "from_monogenicfiniteextens": 185, "from_polynomialr": 185, "from_qq_gmpi": 185, "from_qq_python": 185, "from_realfield": 185, "from_zz_gmpi": 185, "from_zz_python": 185, "gcdex": [185, 190], "get_exact": 185, "half_gcdex": [185, 190], "is_pid": 185, "is_r": 185, "is_nonposit": 185, "is_on": [185, 190], "rersiv": 185, "__neg__": 185, "__pos__": 185, "__sub__": 185, "q_domain": 185, "q_expr": 185, "x_domain": 185, "alg": [185, 189, 193], "trait": 185, "is_unit": 185, "__divmod__": 185, "__floordiv__": 185, "__mod__": [185, 189], "simpledomain": 185, "compositedomain": 185, "from_qq": 185, "from_zz": 185, "gmpyinteg": 185, "pythoninteg": 185, "gmpyrationalfield": 185, "pythonrationalfield": 185, "from_gaussianrationalfield": 185, "gaussianel": 185, "gaussiandomain": 185, "qq_python": 185, "zz_python": 185, "z2": 185, "z3": 185, "z4": 185, "from_gaussianinteg": 185, "as_algebraicfield": 185, "orig_ext": 185, "algebraicnumb": [185, 189, 193], "integral_basi": [185, 189], "maximal_ord": [185, 189], "zeta5": 185, "primes_abov": [185, 189], "primeid": [185, 189], "to_alg_num": [185, 189], "legibl": 185, "to_rat": 185, "mpelement": 185, "complexfield": 185, "lc": [185, 187, 190], "domain_or_field": 185, "dmf": 185, "coercibl": 185, "monomialord": [185, 190], "xring": 185, "vring": 185, "sring": [185, 191, 192], "polyr": [185, 186, 187, 192], "factor_list": [185, 190, 269], "add_gen": 185, "drop_to_ground": 185, "monomial_basi": 185, "206": [185, 190], "744": 185, "945": [185, 191], "is_monomi": [185, 190], "const": 185, "coeffcient": [185, 187], "inplac": 185, "shallow": [185, 201], "zero_monom": 185, "fv": 185, "clo": 185, "p64": 185, "qv": 185, "f0": 185, "imul_num": 185, "itercoeff": 185, "itermonom": 185, "iterterm": 185, "leading_expv": 185, "leading_monom": 185, "leading_term": 185, "listcoeff": 185, "listmonom": 185, "listterm": 185, "monom": [185, 190], "strip_zero": 185, "tail_degre": 185, "xfield": 185, "vfield": [185, 244], "sfield": [185, 244], "fracel": [185, 194], "lev": 185, "add_ground": [185, 190], "all_monom": [185, 190], "all_term": [185, 190], "cauchy_lower_bound": 185, "cauchy_upper_bound": 185, "clear_denom": [185, 190], "count_complex_root": 185, "sup": [185, 190, 194, 201, 202], "count_real_root": 185, "deflat": [185, 190], "y_i": [185, 187, 189, 190, 210], "x_j": [185, 187, 190], "degree_list": [185, 190], "eject": [185, 190], "exquo_ground": [185, 190], "factor_list_includ": [185, 190], "from_dict": [185, 190], "from_sympy_list": 185, "gff_list": [185, 190], "homogeneous_ord": [185, 190, 207], "is_cyclotom": [185, 190], "is_ground": [185, 190], "is_homogen": [185, 190], "is_irreduc": [185, 190], "is_linear": [185, 190], "is_mon": [185, 190], "is_quadrat": [185, 190], "is_sqf": [185, 190], "l1_norm": [185, 190], "l2_norm_squar": 185, "max_norm": [185, 190], "mignotte_sep_bound_squar": 185, "mignott": [185, 187], "mul_ground": [185, 190], "pdiv": [185, 190], "pexquo": [185, 190], "pquo": [185, 190], "prem": [185, 190], "quo_ground": [185, 190], "refine_root": [185, 189, 190], "includepr": [185, 187, 190], "sqf_list_includ": [185, 190], "sqf_norm": [185, 190], "sqf_part": [185, 190], "sqr": [185, 190], "sturm": [185, 190], "sub_ground": [185, 190], "to_dict": 185, "to_exact": [185, 190], "to_r": [185, 190], "to_sympy_dict": 185, "to_sympy_list": 185, "to_tupl": 185, "total_degre": [185, 190, 207], "trunc": [185, 190, 193], "frac_unifi": 185, "half_per": 185, "poly_unifi": 185, "gr\u00f6bner": 186, "groebner": [186, 188, 189, 190, 193, 206, 212, 213], "wester": 186, "dispers": [186, 188, 214], "agca": 186, "syzygi": 186, "undocu": 186, "rs_seri": 186, "eqs_to_matrix": 186, "sympy_eqs_to_r": 186, "_solve_lin_si": 186, "_solve_lin_sys_compon": 186, "ddm": 186, "sdm": [186, 187], "adic": [186, 188], "valuat": [186, 210], "subfield": 186, "l0": 187, "focus": 187, "legitim": 187, "uninterest": 187, "bulk": [187, 204], "x_u": 187, "dup__": 187, "densebas": 187, "dmp_lc": 187, "poly_lc": 187, "dmp_tc": 187, "poly_tc": 187, "dmp_ground_lc": 187, "dmp_ground_tc": 187, "dmp_true_lt": 187, "n_1": [187, 212, 214], "n_k": 187, "dmp_degre": 187, "dmp_degree_in": 187, "dmp_degree_list": 187, "dmp_strip": 187, "dmp_valid": 187, "dup_revers": 187, "dmp_copi": 187, "dmp_to_tupl": 187, "dmp_normal": 187, "dmp_convert": 187, "to_domain": 187, "dmp_from_sympi": 187, "dmp_nth": 187, "dmp_ground_nth": 187, "dmp_zero_p": 187, "dmp_zero": 187, "dmp_one_p": 187, "dmp_one": 187, "dmp_ground_p": 187, "dmp_ground": 187, "dmp_negative_p": 187, "dmp_positive_p": 187, "dmp_from_dict": 187, "dmp_to_dict": 187, "dmp_swap": 187, "dmp_permut": 187, "dmp_nest": 187, "dmp_rais": 187, "dmp_deflat": 187, "dmp_multi_defl": 187, "dmp_inflat": 187, "dmp_exclud": 187, "dmp_includ": 187, "dmp_inject": 187, "dmp_eject": 187, "dmp_terms_gcd": 187, "dmp_list_term": 187, "dmp_apply_pair": 187, "dmp_slice": 187, "dup_random": 187, "densearith": 187, "dmp_add_term": 187, "dmp_sub_term": 187, "dmp_mul_term": 187, "dmp_add_ground": 187, "dmp_sub_ground": 187, "dmp_mul_ground": 187, "dmp_quo_ground": 187, "dmp_exquo_ground": 187, "dup_lshift": 187, "dup_rshift": 187, "dmp_ab": 187, "dmp_neg": 187, "dmp_add": 187, "dmp_sub": 187, "dmp_add_mul": 187, "dmp_sub_mul": 187, "dmp_mul": 187, "dmp_sqr": 187, "dmp_pow": 187, "dmp_pdiv": 187, "dmp_prem": 187, "dmp_pquo": 187, "dmp_pexquo": 187, "dmp_rr_div": 187, "dmp_ff_div": 187, "dmp_div": 187, "dmp_rem": 187, "dmp_quo": 187, "dmp_exquo": 187, "dmp_max_norm": 187, "dmp_l1_norm": 187, "dmp_expand": 187, "densetool": 187, "dmp_integr": 187, "dmp_integrate_in": 187, "dmp_diff": 187, "dmp_diff_in": 187, "dmp_eval": 187, "dmp_eval_in": 187, "dmp_eval_tail": 187, "dmp_diff_eval_in": 187, "dmp_trunc": 187, "dmp_ground_trunc": 187, "dup_mon": 187, "dmp_ground_mon": 187, "dup_cont": 187, "dmp_ground_cont": 187, "dup_primit": 187, "dmp_ground_primit": 187, "dup_extract": 187, "dmp_ground_extract": 187, "dup_real_imag": 187, "bivari": [187, 193, 214], "dup_mirror": 187, "dup_scal": 187, "dup_shift": 187, "dup_transform": 187, "dmp_compos": 187, "dup_decompos": 187, "t_m": 187, "r695": 187, "dmp_lift": 187, "dup_sign_vari": 187, "dmp_clear_denom": 187, "k_0": 187, "dmp_revert": 187, "gf_": 187, "justifi": 187, "necess": 187, "u_0": 187, "m_0": [187, 207], "m_n": 187, "gf_crt1": 187, "9215": 187, "9405": 187, "9603": 187, "gf_crt2": 187, "gf_int": 187, "gf_degre": 187, "gf_lc": 187, "gf_tc": 187, "gf_strip": 187, "gf_trunc": 187, "gf_normal": 187, "gf_from_dict": 187, "gf_to_dict": 187, "gf_from_int_poli": 187, "gf_to_int_poli": 187, "gf_neg": 187, "gf_add_ground": 187, "gf_sub_ground": 187, "gf_mul_ground": 187, "gf_quo_ground": 187, "gf_add": 187, "gf_sub": 187, "gf_mul": 187, "gf_sqr": 187, "gf_add_mul": 187, "gf_sub_mul": 187, "gf_expand": 187, "gf_div": 187, "r696": 187, "monagan93": [187, 188], "r697": 187, "gathen99": [187, 188], "gf_rem": 187, "gf_quo": 187, "gf_exquo": 187, "gf_lshift": 187, "gf_rshift": 187, "gf_pow": 187, "gf_pow_mod": 187, "r698": 187, "gf_gcd": 187, "gf_lcm": 187, "gf_cofactor": 187, "gf_gcdex": 187, "eea": 187, "r699": 187, "gf_monic": 187, "gf_diff": 187, "gf_eval": 187, "gf_multi_ev": 187, "gf_compos": 187, "gf_compose_mod": 187, "gf_trace_map": 187, "r700": 187, "gathen92": [187, 188], "gf_random": 187, "gf_irreduc": 187, "gf_irreducible_p": 187, "gf_sqf_p": 187, "gf_sqf_part": 187, "gf_sqf_list": 187, "e_2": [187, 190], "f_j": [187, 204], "gf_sqf": 187, "r701": 187, "geddes92": [187, 188], "gf_qmatrix": 187, "berlekamp": 187, "gf_qbasi": 187, "gf_berlekamp": 187, "gf_zassenhau": 187, "gf_shoup": 187, "gf_factor_sqf": 187, "gf_factor": 187, "e_d": 187, "cantor": 187, "zassenhau": [187, 189], "shoup": [187, 188], "kaltofen": [187, 188], "gathen": [187, 188], "gf_factor_method": 187, "r702": 187, "gf_valu": 187, "2204": 187, "gf_csolv": 187, "congruent": [187, 204, 207], "189": 187, "112": [187, 191], "139": 187, "r703": 187, "ivan": 187, "niven": 187, "zuckerman": 187, "montgomeri": 187, "infeas": [187, 190], "sdm_": 187, "distributedmodul": 187, "sdm_monomial_mul": 187, "sdm_monomial_deg": 187, "f_5": 187, "sdm_monomial_divid": 187, "sdm_lc": 187, "sdm_to_dict": 187, "sdm_from_dict": 187, "dic": 187, "sdm_add": 187, "2f_1": 187, "3f_1": 187, "yf_1": 187, "xf_1": 187, "sdm_lm": 187, "sdm_lt": 187, "sdm_mul_term": 187, "2xy": [187, 263], "4y": [187, 213, 258], "8xy": 187, "2y": [187, 207, 210, 213, 263], "sdm_zero": 187, "sdm_deg": 187, "sdm_from_vector": 187, "sdm_to_vector": 187, "variant": [187, 210, 213], "qg": 187, "remark": [187, 193, 204, 210], "uf": 187, "vg": 187, "zout": 187, "euclidtool": 187, "dmp_half_gcdex": 187, "dmp_gcdex": 187, "dmp_invert": 187, "dmp_euclidean_pr": 187, "dmp_primitive_pr": 187, "exceedingli": 187, "collin": [187, 188], "collins67": [187, 188], "subdomain": 187, "2l": 187, "remainin": 187, "subdetermin": 187, "n_2": [187, 214], "n_": [187, 207], "abnorm": 187, "gamma_i": 187, "brown": [187, 188, 214], "traub": [187, 188], "browntraub71": [187, 188], "brown78": [187, 188], "discoveri": [187, 265], "dmp_inner_subresult": 187, "729": 187, "sre": 187, "dmp_subresult": 187, "dmp_prs_result": 187, "dmp_zz_modular_result": 187, "dmp_zz_collins_result": 187, "dmp_qq_collins_result": 187, "dmp_result": 187, "dmp_discrimin": 187, "dmp_rr_prs_gcd": 187, "cff": [187, 190], "cfg": [187, 190], "dmp_ff_prs_gcd": 187, "dmp_zz_heu_gcd": 187, "r704": 187, "liao95": [187, 188], "dmp_qq_heu_gcd": 187, "dmp_inner_gcd": 187, "dmp_gcd": 187, "dmp_lcm": 187, "dmp_content": 187, "dmp_primit": 187, "dmp_cancel": 187, "dmp_trial_divis": 187, "dmp_zz_mignotte_bound": 187, "dup_zz_hensel_step": 187, "hensel": 187, "r705": 187, "dup_zz_hensel_lift": 187, "f_list": 187, "multifactor": 187, "r706": 187, "dup_zz_zassenhau": 187, "dup_zz_irreducible_p": 187, "eisenstein": 187, "dup_cyclotomic_p": 187, "bradford": 187, "russel": 187, "251": 187, "berlin": 187, "heidelberg": 187, "dup_zz_cyclotomic_poli": 187, "dup_zz_cyclotomic_factor": 187, "r707": 187, "weisstein09": [187, 188], "dup_zz_factor_sqf": 187, "dup_zz_factor": 187, "r708": 187, "dmp_zz_wang_non_divisor": 187, "wang": [187, 188], "eez": 187, "dmp_zz_wang_test_point": 187, "dmp_zz_wang_lead_coeff": 187, "dmp_zz_diophantin": 187, "dmp_zz_wang_hensel_lift": 187, "dmp_zz_wang": 187, "enhanc": [187, 214], "r709": 187, "wang78": [187, 188], "r710": 187, "dmp_zz_factor": 187, "r711": 187, "dmp_ext_factor": 187, "dup_gf_factor": 187, "dmp_factor_list": 187, "dmp_factor_list_includ": 187, "dmp_irreducible_p": 187, "groebnertool": 187, "polyconfig": [187, 190], "f5b": [187, 190], "spoli": 187, "red_groebn": 187, "beckerweispfenning93": 187, "is_groebn": 187, "is_minim": 187, "is_reduc": 187, "fglmtool": 187, "matrix_fglm": 187, "o_to": 187, "o_from": 187, "r712": 187, "fauger": [187, 190], "gianni": [187, 190, 212], "mora": [187, 188, 190, 212], "sdm_spoli": 187, "phantom": 187, "sca": 187, "defn": 187, "sdm_ecart": 187, "ecart": 187, "sdm_nf_mora": 187, "nf": 187, "sdm_groebner": 187, "sugar": [187, 188, 219], "giovini": [187, 188], "polyopt": [187, 191], "build_opt": 187, "polyerror": [187, 190], "basepolynomialerror": 187, "operationnotsupport": 187, "heuristicgcdfail": 187, "homomorphismfail": 187, "isomorphismfail": [187, 189], "extraneousfactor": 187, "evaluationfail": 187, "refinementfail": 187, "notrevers": [187, 190], "notalgebra": 187, "polynomialerror": [187, 190], "unificationfail": [187, 189], "generatorsneed": 187, "computationfail": 187, "exc": 187, "generatorserror": 187, "univariatepolynomialerror": 187, "multivariatepolynomialerror": [187, 190], "polificationfail": 187, "orig": 187, "optionerror": 187, "flagerror": 187, "modulargcd": 187, "modgcd_univari": 187, "monagan00": [187, 188], "modgcd_bivari": 187, "modgcd_multivari": 187, "_modgcd_multivariate_p": 187, "brown71": [187, 188], "degbound": 187, "contbound": 187, "func_field_modgcd": 187, "reconstuct": 187, "z_p": 187, "spuriou": [187, 212], "hoeij04": [187, 188], "scarc": 187, "hsin": 188, "chao": 188, "liao": 188, "fateman": 188, "montreal": 188, "quebec": 188, "canada": 188, "240": [188, 196, 241], "247": [188, 212], "von": [188, 214], "zur": 188, "gerhard": 188, "cambridg": [188, 207], "weisstein": 188, "cyclotomicpolynomi": 188, "1215": 188, "1231": 188, "czapor": 188, "labahn": 188, "monagan": [188, 206], "disco": 188, "721": 188, "kaltofen98": 188, "subquadrat": 188, "223": 188, "1998": [188, 207], "1179": 188, "1197": 188, "shoup95": 188, "397": 188, "shoup91": 188, "cox97": [188, 190], "shea": [188, 190], "ajwa95": 188, "ajwa": 188, "liu": 188, "cites": [188, 206], "ist": [188, 203, 206], "psu": [188, 203, 206], "mycites": 188, "login": 188, "bose03": 188, "bose": 188, "guiver": 188, "multidimension": [188, 225, 250], "giovini91": 188, "bronstein93": [188, 190], "salvi": [188, 191], "kiev": 188, "ukrain": 188, "buchberger01": [188, 190], "theorist": 188, "moreno": 188, "diaz": 188, "freir": 188, "eurocast": 188, "februari": 188, "davenport88": 188, "siret": 188, "tournier": 188, "london": [188, 207], "124": [188, 258], "greuel": 188, "pfister": 188, "atiyah": 188, "macdonald": 188, "142": 188, "1971": [188, 210], "505": 188, "237": 188, "249": 188, "wittkopf": 188, "478": 188, "hoeij": 188, "2004": [188, 207], "297": [188, 190], "304": [188, 190], "wang81": 188, "symsac": 188, "hoeij02": 188, "manwright94": [188, 190], "yiu": 188, "kwong": 188, "franci": 188, "wright": 188, "190347": 188, "190413": 188, "koepf98": [188, 190], "koepf": [188, 196, 206], "vieweg": 188, "abramov71": [188, 190], "abramov": [188, 212], "ussr": 188, "330": 188, "man93": [188, 190], "376": 188, "sciencedirect": 188, "pii": 188, "s0747717183710539": 188, "kapur1994": 188, "deepak": 188, "kapur": 188, "tushar": 188, "saxena": 188, "yang": 188, "dixon": 188, "researchg": [188, 214], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 188, "palancz08": 188, "pal\u00e1ncz": 188, "zaletnyik": 188, "jl": [188, 227], "awang": 188, "ew": 188, "grafarend": 188, "geodet": 188, "geodesi": 188, "225607735_dixon_result": 188, "s_solution_of_systems_of_geodetic_polynomial_equ": 188, "bruce97": 188, "bruce": 188, "randal": 188, "donald": [188, 229], "mundi": 188, "artifici": [188, 197], "intellig": [188, 206, 210, 269], "orlando": 188, "www2": 188, "duke": 188, "donaldlab": 188, "symbolicnumericalcomput": 188, "045": 188, "087": 188, "stiller96": 188, "stiller": 188, "1996": [188, 204, 212, 239], "citeseerx": [188, 203], "viewdoc": [188, 203, 206], "590": 188, "2021": 188, "rep1": [188, 203], "cohen93": [188, 189], "henri": 188, "olga": 189, "tausski": 189, "zimmer": 189, "pohst": 189, "articul": 189, "numberfield": 189, "mathfrak": 189, "regul": 189, "alpha_m": 189, "round_two": 189, "prime_decomp": 189, "prime_valu": 189, "minimal_polynomi": 189, "field_isomorph": 189, "nilrad": 189, "z_k": 189, "zk": 189, "ordinarili": 189, "503": 189, "r713": 189, "r714": 189, "powerbasisel": 189, "ramif": 189, "as_submodul": 189, "bundl": 189, "test_factor": 189, "deliber": 189, "is_inert": 189, "inert": [189, 210], "stai": 189, "reduce_anp": 189, "elt": 189, "reduce_alg_num": 189, "field_gen": 189, "just_gen": 189, "reagent": 189, "kummer": 189, "1847": 189, "ueber": 189, "zerlegung": 189, "crell": 189, "r715": 189, "_minpoly_compos": 189, "stall": 189, "alli": 189, "monomorph": 189, "alpha_i": 189, "alpha_n": 189, "lincomb": 189, "primtiiv": 189, "meanwhil": 189, "moduleel": 189, "powerbasi": 189, "submodule_from_matrix": 189, "ancestor": 189, "to_col": 189, "nca": 189, "_mult_tab": 189, "successfulli": 189, "moduleendomorph": 189, "innerendomorph": 189, "endomorphismr": 189, "spec": [189, 190], "i_n": [189, 190, 215], "include_self": 189, "basis_el": 189, "element_from_r": 189, "endomorphism_r": 189, "is_compat_col": 189, "mult_tab": 189, "mult": 189, "closurefailur": 189, "nearest_common_ancestor": 189, "number_field": 189, "power_basis_ancestor": 189, "incom": 189, "halv": 189, "submodule_from_gen": 189, "over_power_basi": 189, "starts_with_un": 189, "hnf_modulu": 189, "whole_submodul": 189, "element_from_anp": 189, "element_from_alg_num": 189, "element_from_poli": 189, "qq_matrix": 189, "basis_element_pullback": 189, "discard_befor": 189, "structureerror": 189, "cohen00": 189, "make_mod_elt": 189, "qq_col": 189, "from_int_list": 189, "is_compat": 189, "reduced_mod_p": 189, "to_ancestor": 189, "anc": 189, "to_par": 189, "to_anp": 189, "inner_endomorph": 189, "event": [189, 214], "find_min_poli": 189, "missingunityerror": 189, "is_int": 189, "get_num_denom": 189, "extract_fundamental_discrimin": 189, "r716": 189, "algintpow": 189, "zeta_pow": 189, "r717": 189, "coeff_search": 189, "supplement_a_subspac": 189, "dmrankerror": 189, "v_n": 189, "w_r": 189, "w_j": 189, "u_j": 189, "r718": 189, "poly_from_expr": 190, "parallel_poly_from_expr": 190, "lt": [190, 235], "mod_invers": 190, "exprtool": [190, 250], "gcd_term": 190, "gcd_list": 190, "lcm_list": 190, "destruct": 190, "2079": 190, "1401": 190, "2715": 190, "6720": 190, "1092": 190, "gff": 190, "check_sqf": 190, "count_root": 190, "nroot": [190, 212], "maxstep": 190, "cleanup": 190, "73205080756888": 190, "73205080756887729352744634151": 190, "ground_root": 190, "nth_power_roots_poli": 190, "r_f": 190, "r_g": 190, "_signsimp": 190, "q_n": 190, "is_zero_dimension": [190, 213], "donal": 190, "230": [190, 212], "ec": 190, "em": 190, "di": 190, "dispersionset": 190, "gp": [190, 210], "free_symbols_in_domain": 190, "from_poli": 190, "get_domain": 190, "get_modulu": 190, "has_only_gen": 190, "vincent": [190, 232], "akrita": 190, "strzebonski": 190, "va": 190, "alkiviadi": 190, "adam": 190, "panagioti": 190, "vigkla": 190, "265": 190, "279": 190, "polnomi": 190, "is_multivari": 190, "is_univari": 190, "ltrim": 190, "rerun": [190, 225], "_only_": 190, "sturmian": 190, "subresultants_qq_zz": 190, "suffix": [190, 227], "_pg": 190, "_amv": 190, "rem_z": 190, "premultipli": 190, "rat_clear_denom": 190, "_ignor": 190, "retract": 190, "same_root": 190, "r0": 190, "set_domain": 190, "set_modulu": 190, "termwis": 190, "fglm": 190, "r719": 190, "horner_schem": 190, "equispac": 190, "viet": 190, "itermonomi": 190, "min_degre": 190, "gib": 190, "monomial_kei": 190, "monomial_count": 190, "gradedlexord": 190, "reversedgradedlexord": 190, "clear_cach": 190, "_get_interv": 190, "165": [190, 214, 232], "169": 190, "eval_approx": 190, "evalf_r": 190, "eval_r": 190, "69629": 190, "71318": 190, "805": 190, "3275": 190, "65536": [190, 193, 194], "414645": 190, "131072": 190, "6545": 190, "104755": 190, "2097152": 190, "6634255": 190, "_all_root": 190, "use_cach": 190, "_complexes_index": 190, "_complexes_sort": 190, "_count_root": 190, "_ensure_complexes_init": 190, "_ensure_reals_init": 190, "_eval_evalf": 190, "_eval_is_imaginari": 190, "_get_complex": 190, "_get_complexes_sqf": 190, "currentfactor": 190, "_get_real": 190, "_get_reals_sqf": 190, "_get_root": 190, "_indexed_root": 190, "_new": 190, "_postprocess_root": 190, "_preprocess_root": 190, "heroic": [190, 212], "_real_root": 190, "_reals_index": 190, "_reals_sort": 190, "_refine_complex": 190, "ay": [190, 207, 235, 269], "_roots_trivi": 190, "_set_interv": 190, "861136": 190, "86113631159405258": 190, "polyroot": 190, "quintic": [190, 212], "unread": [190, 230], "casu": 190, "irreducibili": 190, "unsolvablefactorerror": [190, 212], "inexpress": 190, "unsolv": [190, 213], "r720": 190, "cubic_funct": 190, "trigonometric_": 190, "28and_hyperbol": 190, "29_method": 190, "specialpoli": 190, "swinnerton_dyer_poli": 190, "swinnerton": 190, "dyer": 190, "symmetric_poli": 190, "random_poli": 190, "gegenbau": [190, 194], "partfrac": [190, 196], "undertermin": 190, "_w": [190, 201], "apart_list": 190, "assemble_partfrac_list": 190, "bunch": 190, "pfd": 190, "r721": 190, "partial_list": 190, "reassembl": 190, "pfda": 190, "r722": 190, "r723": 190, "r724": 190, "r725": 190, "r726": 190, "r727": 190, "r728": 190, "r729": 190, "widen": 191, "ring_seri": 191, "rs_sin": 191, "166666666666667": 191, "puiseux": 191, "rs_co": 191, "rs_tan": 191, "took": [191, 203], "eleg": [191, 193], "rs_exp": 191, "everyon": 191, "blazingli": 191, "ms": 191, "promin": 191, "gradual": 191, "rs_": 191, "rs_log": 191, "rs_lambertw": 191, "rs_atan": 191, "arctang": 191, "rs_asin": 191, "_tan1": 191, "rs_cot": 191, "rs_cos_sin": 191, "rs_atanh": 191, "rs_sinh": 191, "rs_cosh": 191, "rs_tanh": 191, "rs_hadamard_exp": 191, "inver": 191, "rs_mul": 191, "rs_squar": 191, "rs_pow": 191, "rs_series_invers": 191, "rs_series_revers": 191, "a_kx_k": 191, "ar_i": 191, "ar_": 191, "ae": 191, "rs_trunc": 191, "rs_nth_root": 191, "160249952256379": 191, "44224957030741": 191, "rs_sub": 191, "rs_diff": 191, "rs_integr": 191, "rs_newton": 191, "rs_compose_add": 191, "r730": 191, "bostan": 191, "flajolet": 191, "schost": 191, "4579": 191, "institut": 191, "nation": 191, "recherch": 191, "informatiqu": 191, "automatiqu": 191, "rs_is_puiseux": 191, "rs_puiseux": 191, "rs_puiseux2": 191, "rs_series_from_list": 191, "concur": 191, "rs_fun": 191, "_tan": 191, "_nth": 191, "_root": 191, "_fun": 191, "mul_xin": 191, "pow_xin": 191, "_raw": 192, "unkown": 192, "eqs_r": 192, "eqs_coeff": 192, "eqs_rh": 192, "critiqu": 193, "wester1999": 193, "systemat": 193, "153": 193, "\u2124": [193, 194, 213, 270], "unm": 193, "driver": [194, 226], "adequ": 194, "emptyprint": 194, "printmethod": 194, "_sympystr": 194, "_latex": 194, "mathml": 194, "inconveni": 194, "_print_": 194, "expr_class": 194, "hierarchi": [194, 214], "_print": 194, "_print_rat": 194, "_print_numb": 194, "_print_atom": 194, "_print_bas": 194, "print_latex": 194, "mylatexprint": 194, "_print_deriv": 194, "print_my_latex": 194, "modop": 194, "subcompon": 194, "outermost": [194, 202, 206, 218], "modopmodewrong": 194, "modopnestedwrong": 194, "modopsettingswrong": 194, "subobject": 194, "infrastructur": [194, 211], "printer_exampl": 194, "set_global_set": 194, "stringpict": 194, "pretty_symbolog": 194, "prettyform": 194, "hline": 194, "vline": 194, "ascii": [194, 256], "_pretti": 194, "use_unicode_sqrt_char": 194, "root_not": 194, "mat_symbol_styl": 194, "prettifi": 194, "unambigu": [194, 210, 235], "bold": 194, "c89codeprint": 194, "print_ccod": 194, "tgamma": 194, "known_functions_c89": 194, "known_functions_c99": 194, "fmax": 194, "fmin": 194, "lgamma": 194, "_ccode": 194, "indent_cod": 194, "functionclass": [194, 233], "cfunction_format": 194, "derefer": 194, "dereferenc": 194, "symbols_to_declar": 194, "not_supported_funct": 194, "code_text": 194, "m_sqrt2": 194, "math_macro": 194, "m_sqrt2l": 194, "std": [194, 214], "cxx": 194, "cxx98codeprint": 194, "_cxxcode": 194, "cxx11codeprint": 194, "print_rcod": 194, "rcode": 194, "known_funct": 194, "_rcode": 194, "rfunction_str": 194, "rfunction_format": 194, "ifels": 194, "tweak": [194, 212], "type_map": 194, "name_mangl": 194, "mangl": 194, "floor1": 194, "floor2": 194, "print_fcod": 194, "_fcode": 194, "conjg": 194, "32768": 194, "7182818284590452d0": 194, "1415926535897932d0": 194, "718281828459045235360287d0": 194, "141592653589793238462643d0": 194, "869604401089358618834491d0": 194, "mygamma": 194, "allow_unknown_funct": 194, "coshintegr": 194, "cosintegr": 194, "expintegralei": 194, "factorialpow": 194, "heavisidetheta": 194, "sinhintegr": 194, "sinintegr": 194, "arccosh": 194, "arccoth": 194, "arcsinh": 194, "arctanh": 194, "dirichleteta": 194, "gegenbauerc": 194, "hypergeometricpfq": 194, "sphericalbesselj": 194, "logintegr": 194, "lucasl": 194, "riemann_xi": 194, "riemannxi": 194, "stieltjesgamma": 194, "sphericalbess": 194, "mcodeprint": 194, "_mcode": 194, "mcode": 194, "maplecodeprint": 194, "_mapl": 194, "maple_cod": 194, "print_maple_cod": 194, "javascriptcodeprint": 194, "_javascript": 194, "js_function_str": 194, "known_fcns_src1": 194, "known_fcns_src2": 194, "conj": 194, "juliacodeprint": 194, "_julia": 194, "harmless": [194, 265], "cosmet": 194, "pw": 194, "existing_julia_fcn": 194, "coshint": 194, "cosint": 194, "sinhint": 194, "sinint": 194, "bincoeff": 194, "logint": 194, "gammaln": 194, "octavecodeprint": 194, "_octav": 194, "recip": [194, 232], "powf": 194, "signum": 194, "rustcodeprint": 194, "_rust_cod": 194, "7_f64": 194, "_aesara": 194, "tensorvari": 194, "floatx": 194, "squeez": 194, "dim_handl": 194, "gtkmathview": 194, "widget": 194, "print_gtk": 194, "libgtkmathview": 194, "start_view": 194, "_lambdacod": 194, "accepted_latex_funct": 194, "parenthesize_sup": 194, "fold_frac_pow": 194, "fold_func_bracket": 194, "fold_short_frac": 194, "inv_trig_styl": 194, "itex": 194, "ln_notat": 194, "long_frac_ratio": 194, "mat_delim": 194, "mat_str": 194, "mul_symbol": 194, "symbol_nam": 194, "gothic_re_im": 194, "decimal_separ": 194, "diff_oper": 194, "smallmatrix": [194, 263], "amsmath": 194, "fracton": 194, "semicolon": 194, "monospac": 194, "mathtt": 194, "mathml2": 194, "mathmlprinterbas": 194, "mathmlcontentprint": 194, "mathmlpresentationprint": 194, "chapter4": 194, "_mathml_cont": 194, "mathml_tag": 194, "chapter3": 194, "_mathml_present": 194, "utf": 194, "mul_symbol_mathml_numb": 194, "xb7": 194, "print_mathml": [194, 268], "mrow": 194, "mpmathprint": 194, "fully_qualified_modul": 194, "print_python": 194, "textual": 194, "reprprint": 194, "_sympyrepr": 194, "reprifi": 194, "sympy_integ": 194, "displayhook": [194, 225], "pprint_nod": 194, "nb2": 194, "print_nod": 194, "asssumpt": 194, "determinisit": 194, "backtrac": 194, "print_tre": 194, "outputbuff": 194, "dvioption": 194, "outputtexfil": 194, "extra_preambl": 194, "latex_set": 194, "postscript": 194, "tex": 194, "eulervm": 194, "sty": 194, "debian": 194, "ubuntu": 194, "unset": [194, 206], "gimp": 194, "evinc": 194, "kdvi": 194, "xdvi": 194, "gracefulli": [194, 218], "generet": 194, "bytesio": 194, "usepackag": 194, "amsfont": 194, "renewcommand": 194, "popen": 194, "phidd": 194, "bitmap": 194, "split_super_sub": 194, "var_sub1__sup_sub2": 194, "assignmenterror": 194, "bitwiseand": 194, "bitwiseor": 194, "bitwisexor": 194, "precedence_valu": 194, "kroneckerproduct": 194, "negativeinfin": 194, "tensadd": [194, 220], "tensmul": [194, 220], "precedence_funct": 194, "precedence_float": 194, "precedence_fracel": 194, "precedence_integ": 194, "precedence_mul": 194, "precedence_polyel": 194, "precedence_r": 194, "unevaluatedexpr": [194, 264], "precedence_unevaluatedexpr": 194, "databas": [194, 204], "pretty_use_unicod": 194, "pretty_try_use_unicod": 194, "xstr": 194, "greek_lett": 194, "digit_2txt": 194, "ONE": 194, "seven": 194, "symb_2txt": 194, "parenthesi": [194, 218], "\u2080": 194, "\u2081": 194, "\u2082": 194, "\u2083": 194, "\u2084": 194, "\u2085": 194, "\u2086": 194, "\u2087": 194, "\u2088": 194, "\u2089": 194, "\u2090": 194, "\u1d66": 194, "\u1d6a": 194, "\u2091": 194, "\u1d67": 194, "\u2095": 194, "\u1d62": 194, "\u2096": 194, "\u2097": 194, "\u2098": 194, "\u2099": 194, "\u2092": 194, "\u209a": 194, "\u1d69": 194, "\u1d63": 194, "\u1d68": 194, "\u209b": 194, "\u209c": 194, "\u1d64": 194, "\u1d65": 194, "\u2093": 194, "\u2070": 194, "\u00b9": 194, "\u00b2": 194, "\u00b3": 194, "\u2074": 194, "\u2075": 194, "\u2076": 194, "\u2077": 194, "\u2078": 194, "\u2079": 194, "\u2071": 194, "\u207f": 194, "xobj": 194, "vobj": 194, "hobj": 194, "vf": 194, "\u00bd": 194, "\u2153": 194, "\u00bc": 194, "\u2155": 194, "\u2159": 194, "\u215b": 194, "\u2154": 194, "\u2156": 194, "\u00be": 194, "\u2157": 194, "\u215c": 194, "\u2158": 194, "\u215a": 194, "\u215d": 194, "\u215e": 194, "xsym": 194, "symbolog": 194, "atoms_t": 194, "\u2102": [194, 270], "emptysequ": [194, 200], "exp1": 194, "\u2115": 194, "\u2115\u2080": 194, "\u211d": [194, 270], "symmetricdiffer": [194, 213], "pretty_atom": 194, "atom_nam": 194, "pretty_symbol": 194, "symb_nam": 194, "bold_nam": 194, "stylis": 194, "_print_meijerg": 194, "_print_hyp": 194, "jurjen": 194, "bo": 194, "hate": 194, "spammer": 194, "pietjepuk314": 194, "oc": [194, 244], "oohai": 194, "gedg": 194, "email": 194, "my": [194, 258], "mun": 194, "terminal_str": 194, "baselin": 194, "leftslash": 194, "slash": [194, 225], "paren": 194, "ifascii_nougli": 194, "line_break": 194, "ugli": 194, "terminal_width": 194, "wider": 194, "maxdepth": 194, "labelfunc": 194, "digraph": [194, 232, 268], "rankdir": [194, 268], "_sparse_": 195, "flavor": 195, "________": [195, 214, 232], "x\u2080": 195, "greatli": 195, "numbered_symbol": [195, 206, 210, 232], "postprocessor": [195, 206], "reduced_expr": [195, 206], "formalpowerseri": 196, "coeff_bel": 196, "formalpowerseriescompos": 196, "r731": 196, "comtet": 196, "loui": 196, "reidel": 196, "1974": 196, "720": [196, 210, 232], "formalpowerseriesinvers": 196, "r732": 196, "upto": [196, 201, 210], "formalpowerseriesproduct": 196, "rational_algorithm": 196, "compute_fp": 196, "hyper_algorithm": 196, "omposit": 196, "bell_seq": 196, "finiteformalpowerseri": 196, "rational_independ": 196, "ra": 196, "admiss": [196, 199], "r733": 196, "r734": 196, "simpled": 196, "exp_r": 196, "explik": 196, "hyper_r": 196, "rsolve_hypergeometr": 196, "r735": 196, "r736": 196, "solve_d": 196, "fourierseri": 197, "scalex": 197, "shiftx": 197, "sigma_approxim": 197, "gibb": 197, "bigl": 197, "bigr": 197, "lanczo": 197, "r737": 197, "gibbs_phenomenon": 197, "r738": 197, "sawtooth": 197, "bn": 197, "r739": 197, "limitseq": 199, "difference_delta": 199, "r740": 199, "differencedelta": 199, "limit_seq": [199, 201], "safeguard": 199, "r741": 199, "kauer": 199, "seqper": 200, "seqformula": 200, "seqbas": 200, "coeff_mul": 200, "find_linear_recurr": 200, "gfvar": 200, "seqadd": 200, "seqmul": 200, "_mul": 200, "recursiveseq": 200, "fib": 200, "invok": [201, 225, 226], "workhors": 201, "succ": [201, 214], "asymp": 201, "exposit": 201, "gloss": 201, "wsym": 201, "test_rewrite1": 201, "build_expression_tre": 201, "mrv_leadterm": 201, "e0": 201, "calculate_seri": 201, "limitinf": 201, "leadsimp": 201, "constantli": 201, "subsset": 201, "mrv_max1": 201, "mrv_max3": 201, "expsf": 201, "expsg": 201, "expsboth": 201, "o2": 201, "do_sub": 201, "r742": 201, "7048138294": 201, "7182818285": 201, "6349839002": 201, "6449340668": 201, "shank": 201, "6881721793": 201, "6931396564": 201, "6931471806": 201, "6931471805599453094172321215": 201, "r743": 201, "residue_theorem": 201, "neighborhood": 202, "rim": 202, "affirm": 202, "infimum": 202, "is_clos": 202, "closed": 202, "is_disjoint": 202, "r744": 202, "disjoint_set": 202, "is_open": 202, "is_proper_subset": 202, "is_proper_superset": 202, "left_open": 202, "is_superset": 202, "isdisjoint": 202, "issubset": 202, "issuperset": 202, "fancyset": 202, "lebesgu": 202, "r745": 202, "power_set": 202, "symmetric_differ": 202, "r746": 202, "right_open": 202, "mpi": 202, "r747": 202, "interval_": 202, "as_rel": 202, "is_left_unbound": 202, "is_right_unbound": 202, "r748": 202, "r749": 202, "union_": 202, "28set_theori": 202, "r750": 202, "intersection_": 202, "coin": [202, 214], "r751": 202, "cartesian_product": 202, "is_iter": 202, "r752": 202, "complementset": 202, "r753": 202, "disjoint_union": 202, "r754": 202, "empty_set": 202, "r755": 202, "universal_set": 202, "flambda": 202, "square_iter": 202, "base_set": 202, "cartesiancomplexregion": 202, "polarcomplexregion": 202, "unit_disk": 202, "upper_half_unit_disk": 202, "a_interv": 202, "b_interv": 202, "from_real": 202, "pset": 202, "rset": 202, "thetaset": 202, "upper_half_plan": 202, "normalize_theta_set": 202, "r756": 202, "r757": 202, "axiom_of_power_set": 202, "varnoth": 202, "sin_sol": 202, "r758": 202, "element_": 202, "tr0": 203, "tr1": 203, "tr2": 203, "tr2i": 203, "tr3": 203, "tr4": 203, "tr5": 203, "tr6": 203, "tr7": 203, "tr8": 203, "tr9": 203, "tr10": 203, "tr10i": 203, "tr11": 203, "tr12": 203, "tr12i": 203, "tr13": 203, "trmorri": 203, "tr14": 203, "tr15": 203, "tr16": 203, "tr22": 203, "tr111": 203, "ctr1": 203, "ctr4": 203, "rl1": 203, "rl2": 203, "deem": 203, "932": 203, "016": 203, "serendipit": 203, "dead": 203, "newa": 203, "lucki": 203, "sqt": 203, "_tr56": 203, "un": [203, 204], "subtl": 203, "r759": 203, "morri": 203, "27s_law": 203, "trpower": 203, "r760": 203, "list_of_trigonometric_ident": 203, "reduction_formula": 203, "ctr2": 203, "ctr3": 203, "r761": 203, "657": 203, "2478": 203, "dimitar": 203, "vlahovski": 203, "technolog": 203, "xiuqin": 203, "zhong": 203, "zhenb": 203, "zeng": 203, "1169": 203, "1177": 203, "sosmath": 203, "trig5": 203, "symplifi": [204, 206], "roach1996": 204, "roach1997": 204, "p_q": 204, "reachabl": [204, 214], "f_q": 204, "undo": [204, 269], "whenc": 204, "game": 204, "twofold": 204, "incongru": 204, "wlog": 204, "alpha_r": 204, "beta_r": 204, "blindli": 204, "messi": 204, "k_u": 204, "l_v": 204, "k_j": 204, "c_w": 204, "r_j": 204, "l_u": 204, "res_": 204, "delta_i": 204, "add_formula": 204, "addb": 204, "sum_0": 204, "test_hyperexpand": 204, "test_formula": 204, "typo": 204, "suboptim": 204, "simplic": [204, 206, 210, 212], "imath": 204, "b1prime": 204, "vital": [204, 214], "308": 204, "nthroot": 205, "kroneckersimp": 205, "besselsimp": 205, "hypersimilar": 205, "epath": 205, "hongguang": [205, 250], "fu": [205, 206, 250], "unmodifi": 206, "my_measur": 206, "boolian": 206, "max_len": 206, "surd": 206, "strigonometr": 206, "399": 206, "rational_convers": 206, "base10": 206, "6004799503160655": 206, "nfloat": 206, "eq_x": 206, "max_term": 206, "polish": 206, "expand_power_bas": 206, "rcollect": 206, "analyz": [206, 219], "r762": 206, "pearc": 206, "summari": [206, 225, 249], "163": 206, "6984": 206, "trigsimp_groebn": 206, "bb1": 206, "be1": 206, "bb2": 206, "be2": 206, "bei": 206, "max_it": 206, "unrad": [206, 212], "r763": 206, "ibm": 206, "fagin": 206, "symb85": 206, "r764": 206, "cybertest": 206, "opt_sub": 206, "as_unevaluated_bas": 206, "hyperegeometr": 206, "epathtool": 206, "ebnf": 206, "za": [206, 214], "xml": 206, "xpath": 206, "hasattr": [206, 228], "diophantu": 207, "mathematician": [207, 213], "citi": 207, "alexandria": 207, "father": 207, "hi": 207, "arithmetica": 207, "a_1x_1": 207, "a_2x_2": 207, "a_nx_n": 207, "bxy": 207, "cy": 207, "dxy": 207, "eyz": 207, "fzx": 207, "pythagorean": 207, "3y": 207, "4ac": 207, "9369318": 207, "920": 207, "5y": 207, "BY": 207, "t4": 207, "t5": 207, "providean": 207, "eqyptian": 207, "thilinaatsympi": 207, "andreescu": 207, "titu": 207, "andrica": 207, "dorin": 207, "cucurezeanu": 207, "ion": 207, "diophantineequ": 207, "alpertron": 207, "20160323033111": 207, "jpr2718": 207, "ax2p": 207, "permute_sign": [207, 232], "signed_permut": [207, 232], "_dict": 207, "r765": 207, "r766": 207, "pell": 207, "lmm": 207, "r767": 207, "393": 207, "13y": 207, "986": 207, "49299": 207, "1570": 207, "robertson": 207, "20160323033128": 207, "r768": 207, "nitaj": 207, "r769": 207, "numbertheori": 207, "r770": 207, "r771": 207, "676": 207, "884": 207, "fxz": 207, "3xy": 207, "r772": 207, "fxy": 207, "gyz": 207, "hxz": 207, "r773": 207, "cremona": 207, "rusin": 207, "2x_": 207, "m4": 207, "general_sum_of_squar": 207, "8m": 207, "r774": 207, "2345": 207, "proofwiki": 207, "integer_as_sum_of_three_squar": 207, "general_sum_of_even_pow": 207, "1729": 207, "stopiter": 207, "r775": 207, "44542": 207, "207": 207, "schorn": 207, "3456": 207, "1294585930293": 207, "2161": 207, "1137796": 207, "r776": 207, "evenli": 207, "var_t": 207, "r777": 207, "ur": 207, "dv": 207, "vr": 207, "r778": 207, "r779": 207, "nigel": 207, "y_0": [207, 210], "4x": [207, 213, 258], "5x": 207, "r780": 207, "r781": 207, "eprint": 207, "nottingham": 207, "uk": 207, "kvxefz87": 207, "r782": 207, "cuhk": 207, "hk": 207, "wkshum": 207, "404": 207, "r783": 207, "mordel": 207, "r784": 207, "r785": 207, "r786": 207, "r787": 207, "legrang": 207, "csusm": 207, "aitken_html": 207, "symbols_seq": 207, "dict_iter": 207, "r788": 207, "r789": 207, "inhomogen": [207, 210, 212], "r790": 207, "thue": 207, "riccati": 208, "pde": [208, 210], "deutil": [208, 210, 211], "linear_eq_to_matrix": [208, 210], "transolv": 208, "solve_rational_inequ": 209, "solve_poly_inequ": 209, "reduce_rational_inequ": 209, "reduce_abs_inequ": 209, "reduce_inequ": 209, "solve_univariate_inequ": [209, 213], "solvifi": [209, 213], "autodetect": [210, 211], "ode_ord": [210, 211, 212], "best_hint": 210, "all_integr": [210, 211], "_integr": [210, 211], "unevaluat": 210, "test_od": 210, "ode_": 210, "hintnam": [210, 211], "classify_sysod": 210, "ode_hintnam": 210, "tough": 210, "nth_linear_homogeneous_constant_coeff_integr": 210, "nth_linear": 210, "indep": 210, "indep_div_dep": 210, "undetermined_coeffici": 210, "_best": 210, "nth_algebraic_integr": 210, "separable_integr": 210, "1st_exact_integr": 210, "1st_linear_integr": 210, "bernoulli_integr": 210, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 210, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 210, "nth_linear_constant_coeff_variation_of_parameters_integr": 210, "solve_for_func": [210, 211], "homogeneouscoeffsubsdepdivindep": 210, "homogeneouscoeffsubsindepdivdep": 210, "varepsilon": 210, "genform": [210, 211], "starrett": 210, "symbolnam": 210, "startnumb": 210, "endnumb": 210, "renumb": 210, "absorpt": 210, "assist": 210, "2nd_hypergeometric_integr": 210, "almost_linear_integr": 210, "linear_coefficients_integr": 210, "separable_reduced_integr": 210, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 210, "liouville_integr": 210, "2nd_nonlinear_autonomous_conserv": 210, "2nd_nonlinear_autonomous_conserved_integr": 210, "newconst": 210, "ode_sol_simpl": 210, "trysolv": 210, "sola": 210, "solb": 210, "listofsolut": 210, "ode_problem": 210, "firstexact": 210, "exact_differential_equ": 210, "tenenbaum": 210, "dover": 210, "1963": 210, "homogeneouscoeffbest": 210, "ode_1st_homogeneous_coeff_best_integr": 210, "homogeneous_differential_equ": 210, "firstlinear": 210, "linear_differential_equ": 210, "first_order_equ": 210, "rationalriccati": 210, "atleast": 210, "riccati_equ": 210, "thieu": 210, "vo": 210, "www3": [210, 239], "risc_5387": 210, "phdthesisthieu": 210, "secondlinearairi": 210, "secondlinearbessel": 210, "math24": 210, "bernoulli_differential_equ": 210, "goldstein": 210, "braun": 210, "maplesoft": 210, "aspx": 210, "odeadvisor": 210, "riccatispeci": 210, "__________________": 210, "eqworld": 210, "ipmnet": 210, "ru": 210, "ode0106": 210, "ode0123": 210, "nthlinearconstantcoeffhomogen": 210, "nth_linear_constant_coeff_homogeneous_integr": 210, "nonhomogeneous_equation_with_constant_coeffici": 210, "nthlinearconstantcoeffundeterminedcoeffici": 210, "method_of_undetermined_coeffici": 210, "221": 210, "nthlinearconstantcoeffvariationofparamet": 210, "cramer": 210, "variation_of_paramet": 210, "planetmath": 210, "variationofparamet": 210, "nthlineareulereqhomogen": 210, "equidimension": 210, "nth_linear_euler_eq_homogeneous_integr": 210, "sollist": 210, "93euler_equ": 210, "bender": 210, "orszag": 210, "scientist": 210, "nthlineareulereqnonhomogeneousvariationofparamet": 210, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 210, "nthalgebra": 210, "nthorderreduc": 210, "caught": 210, "fault": 210, "almostlinear": 210, "first_linear": 210, "joel": 210, "mose": 210, "stormi": 210, "decad": 210, "august": [210, 229], "558": 210, "linearcoeffici": 210, "separablereduc": 210, "liegroup": 210, "ds": 210, "secondhypergeometr": 210, "2f1": 210, "1f1": 210, "0f1": 210, "liouvillian": 210, "pfq": 210, "chan": 210, "cheb": 210, "terrab": 210, "ode_1st_power_seri": 210, "travi": [210, 225], "walker": 210, "ode_2nd_power_series_ordinari": 210, "lamar": 210, "seriessolut": 210, "simmon": 210, "176": 210, "ode_2nd_power_series_regular": 210, "lie_heuristic_abaco1_simpl": 210, "duart": 210, "da": 210, "mota": 210, "lie_heuristic_abaco1_product": 210, "roch": 210, "lie_heuristic_bivari": 210, "329": 210, "lie_heuristic_chi": 210, "lie_heuristic_abaco2_similar": 210, "lie_heuristic_function_sum": 210, "lie_heuristic_abaco2_unique_unknown": 210, "lie_heuristic_abaco2_unique_gener": 210, "lie_heuristic_linear": 210, "gy": 210, "bh": 210, "impract": 210, "val_inf": 210, "ybar": 210, "numa": 210, "dena": 210, "numi": 210, "deni": 210, "sol1": 210, "sol2": 210, "part_sol": 210, "haaheim": 210, "gensol": 210, "_linear_2eq_order1_type6": 210, "_linear_2eq_order1_type7": 210, "fgp": 210, "ag": 210, "bg": 210, "linear_ode_to_matrix": 210, "odeordererror": 210, "odenonlinearerror": 210, "eqs_mat": 210, "r791": 210, "matrix_differential_equ": 210, "canonical_od": 210, "canonical_eq": 210, "canonical_system": 210, "linodesolve_typ": 210, "type1": 210, "type2": 210, "type3": 210, "type4": 210, "type5": 210, "type6": 210, "type_of_equ": 210, "a_t": 210, "a_non_commut": 210, "matrix_exp_jordan_form": 210, "expj": 210, "matrix_exp": 210, "defect": 210, "p_invers": 210, "r792": 210, "defective_matrix": 210, "r793": 210, "r794": 210, "jordan_normal_form": 210, "comupt": 210, "r795": 210, "r796": 210, "matrix_exponenti": 210, "follw": 210, "antiderv": 210, "subscheck": 210, "system_info": 210, "sol_vector": 210, "sol_vector_evalu": 210, "_nonlinear_2eq_order1_type1": 210, "_nonlinear_2eq_order1_type2": 210, "_nonlinear_2eq_order1_type3": 210, "autonom": 210, "_nonlinear_2eq_order1_type4": 210, "_nonlinear_2eq_order1_type5": 210, "clairaut": 210, "envelop": 210, "_nonlinear_3eq_order1_type1": 210, "enspac": [210, 213], "sysod": 210, "sode0401": 210, "_nonlinear_3eq_order1_type2": 210, "sode0402": 210, "_nonlinear_3eq_order1_type3": 210, "sode0404": 210, "_nonlinear_3eq_order1_type4": 210, "sode0405": 210, "_nonlinear_3eq_order1_type5": 210, "sode0406": 210, "_handle_integr": 210, "gather": 210, "unhind": 210, "wolphramalpha": 210, "detool": 210, "hint_integr": 210, "alphanumer": 210, "hinder": 210, "matching_hint": 210, "matchdict": 210, "bypass": 210, "1st_homogeneous_coeff": 210, "your_hint": 210, "xfail": [210, 223, 225], "fun": [211, 262], "uxt": 211, "uxi": 211, "solvefun": 211, "test_pd": 211, "pde_hintnam": 211, "ux": 211, "uy": 211, "allhint": 211, "1st_linear_constant_coeff_homogen": 211, "_preprocess": 211, "inabl": 211, "_xi_1": 211, "viktor": 211, "grigoryan": 211, "124a": 211, "substack": 211, "1st_linear_constant_coeff_integr": 211, "du": 211, "inspir": [211, 265], "pde_hint": 211, "checksol": 212, "ect": 212, "elim": 212, "dicontinu": 212, "052": 212, "cov": 212, "pval": 212, "xval": 212, "rsolv": 212, "solve_linear": 212, "solve_linear_system": 212, "overdetermin": [212, 213], "msymbol": 212, "degener": [212, 213], "solve_linear_system_lu": 212, "solve_undetermined_coeff": 212, "equ": 212, "obligatori": 212, "19287309935246": 212, "27844411169911": 212, "73908513321516064165531208767387340401341175890076": 212, "nonreal": 212, "steep": 212, "39267e": 212, "1684e": 212, "588469032184": 212, "315": 212, "730061685774": 212, "46792545969349058": 212, "inconclus": 212, "init": 212, "dissimilar": 212, "v_0": 212, "n_m": 212, "v_m": 212, "rsolve_poli": 212, "rsolve_ratio": 212, "r797": 212, "levelt": 212, "290": [212, 241], "296": 212, "r798": 212, "r799": 212, "revis": 212, "r800": 212, "289": 212, "alembertian": 212, "r801": 212, "r802": 212, "polysi": 212, "solve_triangul": 212, "kalkbrenn": 212, "patrizia": 212, "teo": 212, "aaecc": 212, "minima": 213, "conditionset": [213, 214, 270], "productset": 213, "imageset": [213, 270], "complexregion": 213, "uncount": 213, "bizarr": 213, "her": 213, "sol_f": 213, "solveset_r": 213, "solveset_complex": 213, "methodolog": [213, 262], "_solve_real_trig": 213, "invert_r": 213, "invert_complex": 213, "_solve_rad": 213, "_solve_ab": 213, "_solve_as_r": 213, "_solve_as_poly_r": 213, "_solve_as_poly_complex": 213, "_solve_as_poli": 213, "gsoc": 213, "2014": [213, 214], "iamit": 213, "2948": 213, "6659": 213, "7523": 213, "sibx0afl3q": 213, "9696": 213, "27s_theorem": 213, "inftyright": 213, "nright": 213, "0right": 213, "domain_check": 213, "3z": 213, "9z": 213, "nonlinearerror": 213, "4z": 213, "cccc": 213, "eq3": 213, "eq4": 213, "391": 213, "_solve_system": 213, "_solve_using_known_valu": 213, "_transolv": 213, "_tsolv": 213, "tsolv": 213, "outright": 213, "tractabl": 213, "interf": 213, "add_typ": 213, "_is_exponenti": 213, "new_eq": 213, "_solve_exponenti": 213, "_is_class": 213, "_solve_class": 213, "_solve_expo": 213, "9x": 213, "solve_expo": 213, "log_b": 213, "_solve_logarithm": 213, "solve_log": 213, "_is_logarithm": 213, "prebuilt": 214, "finiterv": 214, "varianc": 214, "densiti": [214, 225, 248], "dice": 214, "continuousrv": 214, "continuousdistributionhandmad": 214, "dist": 214, "discreterv": 214, "discretedistributionhandmad": 214, "pmf": 214, "finitedistributionhandmad": 214, "discreteuniform": 214, "randomsymbol": 214, "r803": 214, "discrete_uniform_distribut": 214, "r804": 214, "discreteuniformdistribut": 214, "d6": 214, "diedistribut": 214, "toss": 214, "r805": 214, "bernoulli_distribut": 214, "r806": 214, "bernoullidistribut": 214, "numeb": 214, "unfair": 214, "r807": 214, "coin_flip": 214, "binomialdistribut": 214, "r808": 214, "binomial_distribut": 214, "r809": 214, "betabinomi": 214, "r810": 214, "r811": 214, "betabinomialdistribut": 214, "popul": 214, "marbl": 214, "r812": 214, "hypergeometric_distribut": 214, "r813": 214, "hypergeometricdistribut": 214, "700000000000000": 214, "r814": 214, "rademacher_distribut": 214, "r815": 214, "geometric_distribut": 214, "r816": 214, "geometricdistribut": 214, "r817": 214, "hermite_distribut": 214, "poisson": 214, "r818": 214, "poisson_distribut": 214, "r819": 214, "poissondistribut": 214, "r820": 214, "logarithmic_distribut": 214, "r821": 214, "logarithmicdistribut": 214, "negativebinomi": 214, "r822": 214, "negative_binomial_distribut": 214, "r823": 214, "negativebinomialdistribut": 214, "skellam": 214, "mu1": 214, "mu2": 214, "mu_1": 214, "mu_2": 214, "i_k": 214, "r824": 214, "skellam_distribut": 214, "yulesimon": 214, "yule": 214, "simon": 214, "r825": 214, "93simon_distribut": 214, "8100": 214, "r826": 214, "zeta_distribut": 214, "cdf": 214, "r827": 214, "arcsine_distribut": 214, "benini": 214, "r828": 214, "benini_distribut": 214, "r829": 214, "v8": 214, "beninidistribut": 214, "r830": 214, "beta_distribut": 214, "r831": 214, "betadistribut": 214, "betanoncentr": 214, "noncentr": 214, "r832": 214, "noncentral_beta_distribut": 214, "r833": 214, "noncentralbetadistribut": 214, "betaprim": 214, "r834": 214, "beta_prime_distribut": 214, "r835": 214, "betaprimedistribut": 214, "boundedpareto": 214, "pareto": 214, "r836": 214, "pareto_distribut": 214, "bounded_pareto_distribut": 214, "r837": 214, "cauchy_distribut": 214, "r838": 214, "cauchydistribut": 214, "r839": 214, "chi_distribut": 214, "r840": 214, "chidistribut": 214, "chinoncentr": 214, "r841": 214, "noncentral_chi_distribut": 214, "chisquar": 214, "r842": 214, "chi_squared_distribut": 214, "r843": 214, "squareddistribut": 214, "dagum": 214, "r844": 214, "dagum_distribut": 214, "erlang": 214, "r845": 214, "erlang_distribut": 214, "r846": 214, "erlangdistribut": 214, "exgaussian": 214, "emg": 214, "r847": 214, "exponentially_modified_gaussian_distribut": 214, "quantil": 214, "r848": 214, "exponential_distribut": 214, "r849": 214, "exponentialdistribut": 214, "fdistribut": 214, "______________________________": 214, "r850": 214, "r851": 214, "fisherz": 214, "fisher": 214, "2d_1": 214, "d_1z": 214, "d_1e": 214, "r852": 214, "27s_z": 214, "r853": 214, "fishersz": 214, "frechet": 214, "r854": 214, "a9chet_distribut": 214, "r855": 214, "gamma_distribut": 214, "r856": 214, "gammadistribut": 214, "gammainvers": 214, "r857": 214, "gompertz": 214, "r858": 214, "gompertz_distribut": 214, "gumbel": 214, "dfrac": 214, "r859": 214, "gumbeldistribut": 214, "r860": 214, "gumbel_distribut": 214, "r861": 214, "mathwav": 214, "easyfit": 214, "gumbel_max": 214, "r862": 214, "gumbel_min": 214, "kumaraswami": 214, "r863": 214, "kumaraswamy_distribut": 214, "r864": 214, "laplace_distribut": 214, "r865": 214, "laplacedistribut": 214, "r866": 214, "a9vy_distribut": 214, "r867": 214, "levydistribut": 214, "logist": 214, "r868": 214, "logistic_distribut": 214, "r869": 214, "logisticdistribut": 214, "loglogist": 214, "unimod": 214, "r870": 214, "lognorm": 214, "r871": 214, "r872": 214, "lognormaldistribut": 214, "lomax": 214, "r873": 214, "lomax_distribut": 214, "maxwel": 214, "2a": 214, "r874": 214, "maxwell_distribut": 214, "r875": 214, "maxwelldistribut": 214, "moyal": 214, "r876": 214, "moyaldistribut": 214, "r877": 214, "rice": 214, "dobelman": 214, "textfil": 214, "distributionshandbook": 214, "nakagami": 214, "r878": 214, "nakagami_distribut": 214, "marginal_distribut": 214, "r879": 214, "normal_distribut": 214, "r880": 214, "normaldistributionfunct": 214, "xm": 214, "x_m": 214, "r881": 214, "r882": 214, "paretodistribut": 214, "powerfunct": 214, "paramat": 214, "r883": 214, "power_func": 214, "quadraticu": 214, "r884": 214, "quadratic_distribut": 214, "raisedcosin": 214, "2s": 214, "r885": 214, "raised_cosine_distribut": 214, "r886": 214, "rayleigh_distribut": 214, "r887": 214, "rayleighdistribut": 214, "r888": 214, "reciprocal_distribut": 214, "studentt": 214, "r889": 214, "student_t": 214, "r890": 214, "studentst": 214, "shiftedgompertz": 214, "r891": 214, "shifted_gompertz_distribut": 214, "r892": 214, "trapezoidal_distribut": 214, "r893": 214, "triangular_distribut": 214, "r894": 214, "triangulardistribut": 214, "r895": 214, "uniform_distribution_": 214, "28continu": 214, "r896": 214, "uniformdistribut": 214, "uniformsum": 214, "irwin": 214, "r897": 214, "uniform_sum_distribut": 214, "r898": 214, "uniformsumdistribut": 214, "vonmis": 214, "mise": 214, "i_0": 214, "r899": 214, "von_mises_distribut": 214, "r900": 214, "vonmisesdistribut": 214, "wald": 214, "gaussianinvers": 214, "r901": 214, "inverse_gaussian_distribut": 214, "r902": 214, "inversegaussiandistribut": 214, "weibul": 214, "geq0": 214, "r903": 214, "weibull_distribut": 214, "r904": 214, "weibulldistribut": 214, "wignersemicircl": 214, "semicircl": 214, "frac2": 214, "r905": 214, "wigner_semicircle_distribut": 214, "r906": 214, "wignerssemicirclelaw": 214, "jointrv": 214, "_set": 214, "multivariatenorm": 214, "noninvert": 214, "ob": 214, "r907": 214, "multivariate_normal_distribut": 214, "multivariatelaplac": 214, "r908": 214, "multivariate_laplace_distribut": 214, "generalizedmultivariateloggamma": 214, "joint_rv_typ": 214, "gd": 214, "y_3": 214, "gmvlg": 214, "generalizedmultivariateloggammaomega": 214, "r909": 214, "generalized_multivariate_log": 214, "r910": 214, "234137346_on_a_multivariate_log": 214, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 214, "correl": 214, "gmvlgo": 214, "r911": 214, "r912": 214, "r913": 214, "multinomial_distribut": 214, "r914": 214, "multinomialdistribut": 214, "multivariatebeta": 214, "r915": 214, "dirichlet_distribut": 214, "r916": 214, "dirichletdistribut": 214, "multivariateewen": 214, "ewen": 214, "r917": 214, "27s_sampling_formula": 214, "r918": 214, "rutger": 214, "hcrane": 214, "sts529": 214, "multivariatet": 214, "negativemultinomi": 214, "n_c": 214, "r919": 214, "negative_multinomial_distribut": 214, "r920": 214, "normalgamma": 214, "r921": 214, "discretemarkovchain": 214, "state_spac": 214, "trans_prob": 214, "markov": 214, "characteris": 214, "transitionmatrixof": 214, "ys": 214, "transition_prob": 214, "sunni": 214, "cloudi": 214, "raini": 214, "randomindexedsymbol": 214, "409": 214, "6963328": 214, "3096": 214, "query_gt": 214, "64705": 214, "r922": 214, "markov_chain": 214, "time_markov_chain": 214, "r923": 214, "dartmouth": 214, "teaching_aid": 214, "books_articl": 214, "probability_book": 214, "chapter11": 214, "canonical_form": 214, "transient": 214, "p_new": 214, "new_matrix": 214, "communication_class": 214, "r924": 214, "onlinelibrari": 214, "wilei": 214, "1002": 214, "9780470316887": 214, "app1": 214, "r925": 214, "columbia": 214, "ww2040": 214, "6711f12": 214, "lect1023big": 214, "is_recurr": 214, "tarjan": [214, 232], "r926": 214, "4701sum07": 214, "4701": 214, "mcii": 214, "r927": 214, "ceca": 214, "clemson": 214, "shierd": 214, "shier": 214, "r928": 214, "ujcont": 214, "uj": 214, "7506": 214, "content1": 214, "r929": 214, "econ": 214, "dtmc": 214, "reccur": 214, "r930": 214, "absorbing_markov_chain": 214, "r931": 214, "brandei": 214, "igusa": 214, "math56as08": 214, "math56a_s08_notes015": 214, "fixed_row_vector": 214, "stationary_distribut": 214, "fundamental_matrix": 214, "r932": 214, "lip": 214, "limiting_distribut": 214, "condition_set": 214, "wm": 214, "r933": 214, "probabilitycours": 214, "11_2_6_stationary_and_limiting_distribut": 214, "r934": 214, "galton": 214, "uchicago": 214, "yibi": 214, "stat317": 214, "lecture4_6up": 214, "continuousmarkovchain": 214, "gen_mat": 214, "generator_matrix": 214, "45279": 214, "58602": 214, "37933": 214, "34211": 214, "7143": 214, "4002723175": 214, "6832579186": 214, "r935": 214, "r936": 214, "biu": 214, "il": 214, "amirgi": 214, "ctmcnote": 214, "bernoulliprocess": 214, "processs": 214, "joint_distribut": 214, "jointdistributionhandmad": 214, "r937": 214, "bernoulli_process": 214, "r938": 214, "mathc": 214, "clarku": 214, "djoyc": 214, "ma217": 214, "given_condit": 214, "poissonprocess": 214, "648": 214, "r939": 214, "11_0_0_intro": 214, "r940": 214, "poisson_point_process": 214, "wiener": 214, "brownian": 214, "scottish": 214, "botanist": 214, "r941": 214, "11_4_0_brownian_motion_wiener_process": 214, "r942": 214, "wiener_process": 214, "gammaprocess": 214, "jump": [214, 269], "472": 214, "r943": 214, "gamma_process": 214, "matrixgamma": 214, "scale_matrix": 214, "r944": 214, "matrix_gamma_distribut": 214, "wishart": 214, "r945": 214, "wishart_distribut": 214, "matrixnorm": 214, "location_matrix": 214, "scale_matrix_1": 214, "scale_matrix_2": 214, "r946": 214, "matrix_normal_distribut": 214, "compound_rv": 214, "compounddistribut": 214, "crv_type": 214, "r947": 214, "compound_probability_distribut": 214, "numsampl": 214, "evaluate_integr": 214, "r948": 214, "entropy_": 214, "information_theori": 214, "r949": 214, "crmarsh": 214, "charles_marsh_continuous_entropi": 214, "r950": 214, "uconn": 214, "kconrad": 214, "blurb": 214, "entropypost": 214, "arg1": 214, "arg2": 214, "cexpr": 214, "coskew": 214, "sigma_": 214, "r951": 214, "r952": 214, "probability_distribut": 214, "randomst": 214, "die_rol": 214, "samp": 214, "pspace": 214, "samp_list": 214, "sam": 214, "42519758": 214, "40207856": 214, "94991743": 214, "85819627": 214, "83403519": 214, "9412172": 214, "85768055": 214, "38954165": 214, "11163337": 214, "3176591": 214, "79115232": 214, "63232916": 214, "01747268": 214, "96716083": 214, "sampling_p": 214, "sampling_": 214, "factorial_mo": 214, "r953": 214, "r954": 214, "factorialmo": 214, "kurtosi": 214, "outlier": 214, "sigma_x": 214, "r955": 214, "r956": 214, "asymmetri": 214, "pearson": 214, "sampling_dens": 214, "centralmo": 214, "cmoment": 214, "expectationmatrix": 214, "randommatrixsymbol": 214, "n11": 214, "n12": 214, "n21": 214, "n22": 214, "variancematrix": 214, "crosscovariancematrix": 214, "randomdomain": 214, "probabilist": 214, "singledomain": 214, "singlepspac": 214, "productdomain": 214, "productpspac": 214, "adject": 214, "conditionaldomain": 214, "frv": 214, "finitedomain": 214, "finitepspac": 214, "crv": 214, "continuousdomain": 214, "continuouspspac": 214, "diepspac": 214, "singlefinitepspac": 214, "normalpspac": 214, "singlecontinuouspspac": 214, "frv_type": 214, "randomvari": 214, "tactic": 214, "random_symbol": 214, "rs_swap": 214, "pspace1": 214, "pspace2": 214, "immutabledensendimarrai": 215, "tomatrix": 215, "j_m": 215, "i_a": 215, "i_b": 215, "sum_k": 215, "tensorcontract": [215, 216], "tensordiagon": [215, 216], "derive_by_arrai": 215, "sum_m": 215, "immutablesparsendimarrai": 215, "mutabledensendimarrai": 215, "mutablesparsendimarrai": 215, "index_order_old": 215, "index_order_new": 215, "cab": 215, "contraction_ax": 215, "diagonal_ax": 215, "arraycontract": 216, "arraydiagon": 216, "arraysymbol": 216, "convert_indexed_to_arrai": 216, "arrayadd": 216, "convert_matrix_to_arrai": 216, "convert_array_to_matrix": 216, "expr_tr": 216, "array_der": 216, "index_method": 218, "get_contraction_structur": [218, 219], "deepest": 218, "nested_contract": 218, "get_indic": [218, 219, 220, 221], "indexconformanceexcept": 218, "______": 219, "stem": 219, "dim1": 219, "dim2": 219, "qwerti": 219, "a_ij": 219, "b_ij": 219, "syntact": 219, "a_real": 219, "c_inherit": 219, "c_explicit": 219, "unrol": 219, "tensorindextyp": [220, 221], "eps_dim": 220, "metric_nam": 220, "metirc": 220, "su": 220, "lorentz": 220, "tensor_index_typ": 220, "is_up": 220, "tensor_inde_typ": 220, "typ": 220, "tensorhead": [220, 221], "index_typ": 220, "tensorsymmetri": 220, "monoterm": 220, "_tensormanag": 220, "set_comm": 220, "asym2": 220, "fully_symmetr": 220, "tensori": [220, 221], "repl": 220, "e_z": 220, "no_symmetri": 220, "p_x": 220, "p_y": 220, "p_z": 220, "ipos1": 220, "ipos2": 220, "icomp1": 220, "icomp2": 220, "nameless": 220, "replacement_dict": 220, "free_arg": 220, "addend": 220, "canon_bp": 220, "contract_metr": 220, "contract_al": 220, "ipo": 220, "icomp": 220, "nonrep": 220, "dum": 220, "ext_rank": 220, "is_canon_bp": 220, "m0": 220, "get_free_indic": [220, 221], "perm2tensor": 220, "tid": 220, "sorted_compon": 220, "riemann_cyclic_replac": 220, "riemann_cycl": 220, "cadabra": 220, "multiterm": 220, "bianchi": 220, "sym2": 220, "direct_product": 220, "monotorem": 220, "tableaux": 220, "tensortyp": 220, "repetit": [220, 232], "tensormanag": 220, "comm_i2symbol": 220, "comm_symbols2i": 220, "get_comm": 220, "gcomm": 220, "ghcomm": 220, "toper": 221, "partialderiv": 221, "valenc": 221, "uncontract": 221, "compa": 221, "compb": 221, "derivand": 221, "xpass": [223, 225], "nocache_fail": 223, "expectedexcept": 223, "assertionerror": 223, "exceptioninfo": 223, "abort": 223, "9999": 223, "warningcl": [223, 230], "test_stacklevel": 223, "randtest": 224, "portabl": [225, 226], "pytestreport": 225, "force_color": 225, "readlin": 225, "sympydoctestfind": 225, "doctestpars": 225, "exclude_empti": 225, "sympydoctestrunn": 225, "checker": 225, "optionflag": 225, "5140": 225, "doctestrunn": 225, "clear_glob": 225, "writer": 225, "garbag": 225, "check_output": 225, "report_": 225, "sympyoutputcheck": 225, "outputcheck": 225, "stdlib": 225, "testrunn": 225, "sympytestresult": 225, "convert_to_native_path": 225, "lst": 225, "blacklist": 225, "get_sympy_dir": 225, "raise_on_deprec": 225, "deprecationwarn": [225, 230], "run_all_test": 225, "test_arg": 225, "test_kwarg": 225, "doctest_arg": 225, "doctest_kwarg": 225, "examples_arg": 225, "examples_kwarg": 225, "run_in_subprocess_with_hash_random": 225, "function_kwarg": 225, "virtualenv": 225, "pythonhashse": 225, "_test": 225, "split_list": 225, "sympytestfil": 225, "module_rel": 225, "extraglob": 225, "raise_on_error": 225, "basenam": [225, 226, 227], "slate": 225, "dont_accept_true_for_1": 225, "dont_accept_blanklin": 225, "normalize_whitespac": 225, "ellipsi": 225, "ignore_exception_detail": 225, "report_udiff": 225, "report_cdiff": 225, "report_ndiff": 225, "report_only_first_failur": 225, "mortem": 225, "tomfooleri": 225, "testmod": 225, "tester": 225, "fiddl": [225, 269], "timeout": 225, "keyboardinterrupt": 225, "interrupt": 225, "_basic": 225, "kw": 225, "test_equ": 225, "pdb": 225, "pipe": 225, "time_bal": 225, "tandem": 226, "matvec": 226, "codewrapp": 226, "distutil": 226, "fwrap": 226, "swig": 226, "binary_cal": 226, "22925376": 226, "25165824": 226, "_imp_": [226, 233], "filepath": 226, "cythoncodewrapp": 226, "dump_pyx": 226, "dummywrapp": 226, "f2pycodewrapp": 226, "ufuncifycodewrapp": 226, "dump_c": [226, 227], "funcnam": 226, "code_gen": [226, 227], "argument_tupl": 226, "include_dir": 226, "library_dir": 226, "extra_compile_arg": 226, "extra_link_arg": 226, "symfunc": [226, 233], "funtion_nam": 226, "ndimension": 226, "arang": [226, 258], "f_fortran": 226, "f_cython": 226, "r957": 226, "fortran77": 227, "fortran90": 227, "julia": [227, 257], "rust": [227, 257], "mileston": 227, "unsurmount": 227, "pyf": 227, "inputoutput": 227, "tcc": 227, "libtcc": 227, "date": 227, "hostnam": 227, "sha1": 227, "ccodegen": 227, "preprocessor_stat": 227, "dump_h": 227, "guard": 227, "get_prototyp": 227, "codegenerror": 227, "function_prototyp": 227, "dump_cod": 227, "cname": 227, "fname": 227, "pynam": 227, "jlname": 227, "octnam": 227, "rsname": 227, "fcodegen": 227, "f90": 227, "dump_f95": 227, "get_interfac": 227, "juliacodegen": 227, "dump_jl": 227, "octavecodegen": 227, "dump_m": 227, "returnvalu": 227, "destin": 227, "local_var": 227, "result_vari": 227, "ot": 227, "unnam": 227, "rustcodegen": 227, "dump_r": 227, "f_result": 227, "myfcn": 227, "fcn2": 227, "myfcn_result": 227, "void": 227, "get_default_datatyp": 227, "complex_allow": 227, "agnost": 227, "conserve_mpmath_dp": 228, "doctest_depends_on": 228, "disable_view": 228, "python_vers": 228, "memoize_properti": 228, "propfunc": 228, "no_attrs_in_subclass": 228, "__all__": 228, "some_funct": 228, "thread": 228, "xthread": 228, "threaded_factori": 228, "use_add": 228, "multiset_partitions_taocp": 229, "visitor": 229, "pstack": 229, "lpart": 229, "topmost": 229, "partcompon": 229, "peek": [229, 269], "unpredict": 229, "list_visitor": 229, "abb": [229, 232], "factoring_visitor": 229, "multisetpartitiontravers": 229, "aocp": 229, "count_partit": 229, "127750": 229, "686": 229, "4a": 229, "factorisatio": 229, "oppenheim": 229, "numerorum": 229, "canfield": 229, "erdo": 229, "OF": 229, "yorgei": 229, "monad": 229, "persist": 229, "288716": 229, "memoiz": [229, 231, 257], "dramat": 229, "hypothet": 229, "borrow": 229, "coalesc": 229, "_rang": 229, "stretch": 229, "brain": 229, "histogram": 229, "enum_al": 229, "enum_larg": 229, "enum_rang": 229, "enum_smal": 229, "ub": 229, "parti": 230, "catch_warn": 230, "simplefilt": 230, "dedent": [230, 235], "enum": [231, 257], "pkgdata": [231, 257], "kbin": 232, "partion": 232, "bcd": 232, "notiter": 232, "binary_partit": 232, "r958": 232, "taocp": 232, "nx": 232, "common_prefix": 232, "common_suffix": 232, "unhash": 232, "r959": 232, "connected_component_": 232, "graph_theori": 232, "r960": 232, "27s_strongly_connected_components_algorithm": 232, "dict_merg": 232, "filter_symbol": 232, "ls": 232, "myop": 232, "kog": 232, "informatik": 232, "hamburg": 232, "mein": 232, "python_trick": 232, "neighbor": 232, "xxxxxx": 232, "xxxx": 232, "r961": 232, "method_ring": 232, "r962": 232, "4856615": 232, "4857018": 232, "r963": 232, "programminggeek": 232, "r964": 232, "steinhau": 232, "93johnson": 232, "93trotter_algorithm": 232, "r965": 232, "involut": 232, "eco": 232, "vajnovszki": 232, "dmtc": 232, "generate_involut": 232, "r966": 232, "permutationinvolut": 232, "generate_oriented_forest": 232, "forest": 232, "acycl": 232, "r967": 232, "beyer": 232, "hedetniemi": 232, "novemb": 232, "r968": 232, "1633833": 232, "has_dup": 232, "has_varieti": 232, "iproduct": 232, "abcbb": 232, "is_sequ": 232, "generatortyp": 232, "_iter": 232, "ordered_flag": 232, "least_rot": 232, "rotate_left": 232, "r969": 232, "lexicographically_minimal_string_rot": 232, "minlex": 232, "acb": 232, "11010011000": 232, "00011010011": 232, "00011001011": 232, "aaa": 232, "abi": 232, "bby": 232, "abracadabra": 232, "banana": 232, "multiset_derang": 232, "uniq": 232, "1233": 232, "3312": 232, "3321": 232, "aba": 232, "baa": 232, "bead": 232, "ooo": 232, "r970": 232, "ordered_partit": 232, "r971": 232, "jeromekelleh": 232, "r972": 232, "jerom": 232, "kelleh": 232, "barri": 232, "sullivan": 232, "0909": 232, "2331v2": 232, "r973": 232, "activest": 232, "218332": 232, "postfix": 232, "random_derang": 232, "reseed": 232, "templat": 232, "rotate_right": 232, "roundrobin": 232, "ef": 232, "credit": [232, 255], "sakki": 232, "keyfunc": 232, "subgraph": 232, "r974": 232, "r975": 232, "longest": 232, "r976": 232, "unflatten": 232, "afunc": 233, "lam_f": 233, "lambdastr": 233, "dummifi": 233, "use_imp": 233, "custom_sin": 233, "38177329": 233, "49315059": 233, "8414709848078965": 233, "eager": 233, "enable_eager_execut": 233, "eagertensor": 233, "__class__": 233, "placehold": 233, "user_guid": 233, "array2mat": 233, "runtimewarn": 233, "sin_cos_sympi": 233, "sin_co": 233, "sin_cos_numpi": 233, "38177329068": 233, "module_dictionari": 233, "_lambdifygener": 233, "__globals__": 233, "lambdaprint": [233, 257], "90929743": [233, 258], "assoc_recurrence_memo": 234, "base_seq": 234, "memo": 234, "pn0": 234, "recurrence_memo": 234, "specfun": 234, "__index__": 235, "sanit": 235, "99999999999999991611392": 235, "debug_decor": 235, "fillded": 235, "strline": 235, "rawlin": 235, "find_execut": 235, "pathsep": 235, "strictlessthan": 235, "pastabl": 235, "bee": 235, "spamham": 235, "sha": 235, "spam": 235, "egg": 235, "md5": 235, "eggsham": 235, "r977": 235, "6116978": 235, "roken": 235, "deletechar": 235, "multicharact": 235, "oldchar": 235, "newchar": 235, "acquir": 236, "getresourc": 236, "idiom": [236, 261, 262], "pkgname": 236, "pkgpath": 236, "dirnam": 236, "normpath": 236, "rb": 236, "__loader__": 236, "stringio": 236, "get_resourc": 236, "ioerror": 236, "mydata": 236, "mypkgdata": 236, "jpg": 236, "get_class": 237, "lookup_view": 237, "get_mod_func": 237, "callback": 237, "timeutil": 238, "coordsysrect": 239, "rotation_matrix": [239, 240, 243], "vector_nam": 239, "variable_nam": [239, 245], "latex_vect": 239, "pretty_vect": 239, "latex_scalar": 239, "pretty_scalar": 239, "new_system": 239, "create_new": [239, 243], "transformation_to_par": 239, "transformation_from_par": 239, "locate_new": [239, 241, 242, 243, 244, 245], "position_wrt": [239, 242, 243, 244], "orient_new": [239, 240], "axisorient": [239, 243, 246], "axis_orient": [239, 243], "bodyorient": [239, 243, 246], "body_orient": [239, 240, 243], "spaceorient": [239, 243, 246], "space_orient": [239, 240], "quaternionorient": [239, 243, 246], "q_orient": [239, 240], "orient_new_axi": [239, 241, 243], "orient_new_bodi": [239, 243], "angle1": [239, 240], "angle2": [239, 240], "angle3": [239, 240], "euler_angl": [239, 240], "orient_new_quaternion": [239, 243], "orient_new_spac": [239, 243], "coordsyrect": 239, "v_a": 239, "v_b": 239, "scalar_map": 239, "basevector": [239, 242, 243], "delop": [239, 244, 245], "r978": 239, "r979": 239, "basedyad": [239, 242], "second_system": 239, "deloper": [239, 246], "curl": [239, 246, 248], "parabola": 239, "rational_parametr": 239, "singular_point": 239, "regular_point": 239, "reg_point": 239, "implict": 239, "cubic_curv": 239, "calulc": 239, "hoffmann": 239, "purdu": 239, "lib": 239, "cgi": 239, "viewcont": 239, "1827": 239, "cstech": 239, "erik": 239, "hillgart": 239, "diploma": 239, "linz": 239, "universitat": 239, "availa": 239, "risc_1355": 239, "20point": 239, "20on": 239, "20conic": 239, "semispher": [239, 248], "coordsys3d": [240, 241, 242, 244, 245, 246, 248], "axis_orienter1": 240, "axis_orienter2": 240, "axis_orienter3": 240, "body_orienter1": 240, "body_orienter2": 240, "body_orienter3": 240, "system2": 241, "parametricregion": [241, 246, 248], "implicitregion": [241, 246, 248], "essenc": 242, "vectormul": 242, "vectoradd": 242, "ofcours": 242, "vectorzero": 242, "expressli": 242, "express_coordin": [242, 243], "dyadicmul": 242, "dyadicadd": 242, "cleanest": 243, "orient_new_": 243, "attain": 243, "basescalar": [243, 245], "oabc": 244, "oa": 244, "pq": 244, "sr": 244, "wikidel": 244, "ffield": 244, "gradient_field": 245, "instantan": 245, "directional_deriv": 245, "lame": 245, "quadrilater": 246, "flux": 246, "parametricintegr": 246, "matrix_to_vector": 246, "vector_integr": [246, 248], "dyadicproduct": 246, "quantifi": 247, "throughtout": 247, "necesssari": 248, "param_circl": 248, "implicit_circl": 248, "obextj": 248, "solidspher": 248, "lamina": 248, "\ud835\udc45": 248, "cylind": 248, "vectorfield": 248, "hemispher": 248, "top_fac": 248, "bottom_fac": 248, "27_theorem": 248, "cone": 248, "divergence_theorem": 248, "12288": 248, "subcategori": 249, "cfunction": 251, "cnode": 251, "cxxnode": 251, "fnode": 251, "pyutil": 251, "cutil": 251, "futil": 251, "ecm": 254, "copyright": 255, "pappu": 256, "hexagon": 256, "prettyprint": 257, "rcodeprint": 257, "javascript": [257, 268], "gtk": 257, "latexprint": 257, "mathmlprint": 257, "pythoncodeprint": 257, "pythonprint": 257, "dotprint": [257, 264, 268], "expand_trig": 258, "str_expr": 258, "82842712474619": 258, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 258, "0874989834394464": 258, "roundoff": 258, "14112001": 258, "7568025": 258, "95892427": 258, "2794155": 258, "6569866": 258, "98935825": 258, "41211849": 258, "0998334166468": 258, "sympy_nam": 258, "numerical_funct": 258, "rephras": 259, "oh": 259, "integration_vari": 259, "dfdx": 259, "equidistantli": 259, "d2fdx2": 259, "django": 261, "oop": 261, "crazi": 261, "abcdef": 261, "reevalu": 261, "infal": 261, "insight": 262, "entertain": 262, "antipattern": 262, "preliminari": 262, "82842712475": 263, "cass": 263, "wrote": [263, 264], "theme": 263, "expanded_expr": 263, "whet": 263, "appetit": 263, "c\u2082": [263, 270], "c\u2081": [263, 270], "\u03bd": 263, "sell": 263, "battl": 263, "confid": 263, "gigabyt": 263, "tear": 264, "rebuilt": 264, "stopper": 264, "uexpr": 264, "unevalutedexpr": 264, "downsid": 265, "algebraic_multipl": 265, "pdp": 265, "\u03bb": 265, "undertest": 265, "underevalu": 265, "my_iszero": 265, "stronger": 265, "tradeoff": 265, "wonder": 265, "5b7c3e8ee5b40332abdb206c": 265, "15141": 265, "19548": 265, "10120": 265, "10279": 265, "constant_problem": 265, "possiblezeroq": 265, "mupad_ref": 265, "iszero": 265, "congratul": 266, "decent": 267, "austin": 267, "video": 267, "bvar": 268, "unnecessarili": 269, "whittl": 269, "catchal": 269, "sound": 269, "collected_expr": 269, "cdot1": 269, "undertak": 269, "undon": 269, "cdot2": 269, "nck": 269, "pronounc": 269, "_2f_1": 269, "cfrac": 269, "list_to_frac": 269, "a\u2080": 269, "a\u2083": 269, "a\u2084": 269, "pointless": 269, "orig_frac": 269, "diffeq": 270}, "objects": {"": [[22, 0, 0, "-", "sympy"]], "sympy": [[23, 0, 0, "-", "abc"], [24, 0, 0, "-", "algebras"], [27, 0, 0, "-", "assumptions"], [30, 0, 0, "-", "calculus"], [31, 0, 0, "-", "categories"], [52, 0, 0, "-", "diffgeom"], [53, 0, 0, "-", "discrete"], [57, 0, 0, "-", "functions"], [70, 0, 0, "-", "holonomic"], [77, 0, 0, "-", "integrals"], [78, 0, 0, "-", "interactive"], [79, 0, 0, "-", "liealgebras"], [80, 0, 0, "-", "logic"], [85, 0, 0, "-", "matrices"], [92, 0, 0, "-", "parsing"], [255, 0, 0, "-", "physics"], [190, 0, 0, "-", "polys"], [212, 0, 0, "-", "solvers"], [214, 0, 0, "-", "stats"], [217, 0, 0, "-", "tensor"], [222, 0, 0, "-", "testing"], [231, 0, 0, "-", "utilities"], [246, 0, 0, "-", "vector"]], "sympy.algebras": [[24, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[24, 2, 1, "", "add"], [24, 2, 1, "", "angle"], [24, 2, 1, "", "arc_coplanar"], [24, 2, 1, "", "axis"], [24, 2, 1, "", "exp"], [24, 2, 1, "", "from_axis_angle"], [24, 2, 1, "", "from_rotation_matrix"], [24, 2, 1, "", "index_vector"], [24, 2, 1, "", "integrate"], [24, 2, 1, "", "inverse"], [24, 2, 1, "", "is_pure"], [24, 2, 1, "", "is_zero_quaternion"], [24, 2, 1, "", "mensor"], [24, 2, 1, "", "mul"], [24, 2, 1, "", "norm"], [24, 2, 1, "", "normalize"], [24, 2, 1, "", "orthogonal"], [24, 2, 1, "", "parallel"], [24, 2, 1, "", "pow"], [24, 2, 1, "", "pow_cos_sin"], [24, 2, 1, "", "rotate_point"], [24, 2, 1, "", "scalar_part"], [24, 2, 1, "", "to_axis_angle"], [24, 2, 1, "", "to_rotation_matrix"], [24, 2, 1, "", "vector_coplanar"], [24, 2, 1, "", "vector_part"]], "sympy.assumptions": [[25, 0, 0, "-", "ask"], [26, 0, 0, "-", "assume"], [28, 0, 0, "-", "predicates"], [29, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[25, 1, 1, "", "AssumptionKeys"], [25, 3, 1, "", "ask"], [25, 3, 1, "", "register_handler"], [25, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[26, 1, 1, "", "AppliedPredicate"], [26, 1, 1, "", "AssumptionsContext"], [26, 1, 1, "", "Predicate"], [26, 1, 1, "", "UndefinedPredicate"], [26, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[26, 4, 1, "", "arg"], [26, 4, 1, "", "arguments"], [26, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[26, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[26, 2, 1, "", "eval"], [26, 5, 1, "", "handler"], [26, 2, 1, "", "register"], [26, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[28, 1, 1, "", "FinitePredicate"], [28, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[28, 1, 1, "", "CommutativePredicate"], [28, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[28, 1, 1, "", "ComplexElementsPredicate"], [28, 1, 1, "", "DiagonalPredicate"], [28, 1, 1, "", "FullRankPredicate"], [28, 1, 1, "", "IntegerElementsPredicate"], [28, 1, 1, "", "InvertiblePredicate"], [28, 1, 1, "", "LowerTriangularPredicate"], [28, 1, 1, "", "NormalPredicate"], [28, 1, 1, "", "OrthogonalPredicate"], [28, 1, 1, "", "PositiveDefinitePredicate"], [28, 1, 1, "", "RealElementsPredicate"], [28, 1, 1, "", "SingularPredicate"], [28, 1, 1, "", "SquarePredicate"], [28, 1, 1, "", "SymmetricPredicate"], [28, 1, 1, "", "TriangularPredicate"], [28, 1, 1, "", "UnitTriangularPredicate"], [28, 1, 1, "", "UnitaryPredicate"], [28, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[28, 1, 1, "", "CompositePredicate"], [28, 1, 1, "", "EvenPredicate"], [28, 1, 1, "", "OddPredicate"], [28, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[28, 1, 1, "", "NegativePredicate"], [28, 1, 1, "", "NonNegativePredicate"], [28, 1, 1, "", "NonPositivePredicate"], [28, 1, 1, "", "NonZeroPredicate"], [28, 1, 1, "", "PositivePredicate"], [28, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[28, 1, 1, "", "AlgebraicPredicate"], [28, 1, 1, "", "AntihermitianPredicate"], [28, 1, 1, "", "ComplexPredicate"], [28, 1, 1, "", "ExtendedRealPredicate"], [28, 1, 1, "", "HermitianPredicate"], [28, 1, 1, "", "ImaginaryPredicate"], [28, 1, 1, "", "IntegerPredicate"], [28, 1, 1, "", "IrrationalPredicate"], [28, 1, 1, "", "RationalPredicate"], [28, 1, 1, "", "RealPredicate"], [28, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[28, 5, 1, "", "AlgebraicHandler"], [28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[29, 3, 1, "", "refine"], [29, 3, 1, "", "refine_Pow"], [29, 3, 1, "", "refine_abs"], [29, 3, 1, "", "refine_arg"], [29, 3, 1, "", "refine_atan2"], [29, 3, 1, "", "refine_im"], [29, 3, 1, "", "refine_matrixelement"], [29, 3, 1, "", "refine_re"], [29, 3, 1, "", "refine_sign"]], "sympy.calculus": [[30, 0, 0, "-", "euler"], [30, 0, 0, "-", "finite_diff"], [30, 0, 0, "-", "singularities"], [30, 0, 0, "-", "util"]], "sympy.calculus.euler": [[30, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[30, 3, 1, "", "apply_finite_diff"], [30, 3, 1, "", "differentiate_finite"], [30, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[30, 3, 1, "", "is_decreasing"], [30, 3, 1, "", "is_increasing"], [30, 3, 1, "", "is_monotonic"], [30, 3, 1, "", "is_strictly_decreasing"], [30, 3, 1, "", "is_strictly_increasing"], [30, 3, 1, "", "monotonicity_helper"], [30, 3, 1, "", "singularities"]], "sympy.calculus.util": [[30, 3, 1, "", "continuous_domain"], [30, 3, 1, "", "function_range"], [30, 3, 1, "", "is_convex"], [30, 3, 1, "", "lcim"], [30, 3, 1, "", "maximum"], [30, 3, 1, "", "minimum"], [30, 3, 1, "", "not_empty_in"], [30, 3, 1, "", "periodicity"], [30, 3, 1, "", "stationary_points"]], "sympy.categories": [[31, 1, 1, "", "Category"], [31, 1, 1, "", "CompositeMorphism"], [31, 1, 1, "", "Diagram"], [31, 1, 1, "", "IdentityMorphism"], [31, 1, 1, "", "Morphism"], [31, 1, 1, "", "NamedMorphism"], [31, 1, 1, "", "Object"], [31, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[31, 4, 1, "", "commutative_diagrams"], [31, 4, 1, "", "name"], [31, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[31, 4, 1, "", "codomain"], [31, 4, 1, "", "components"], [31, 4, 1, "", "domain"], [31, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[31, 4, 1, "", "conclusions"], [31, 2, 1, "", "hom"], [31, 2, 1, "", "is_subdiagram"], [31, 4, 1, "", "objects"], [31, 4, 1, "", "premises"], [31, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[31, 4, 1, "", "codomain"], [31, 2, 1, "", "compose"], [31, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[31, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[31, 1, 1, "", "ArrowStringDescription"], [31, 1, 1, "", "DiagramGrid"], [31, 1, 1, "", "XypicDiagramDrawer"], [31, 3, 1, "", "preview_diagram"], [31, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[31, 4, 1, "", "height"], [31, 4, 1, "", "morphisms"], [31, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[31, 2, 1, "", "draw"]], "sympy.codegen": [[32, 0, 0, "-", "algorithms"], [32, 0, 0, "-", "approximations"], [32, 0, 0, "-", "ast"], [32, 0, 0, "-", "cfunctions"], [32, 0, 0, "-", "cnodes"], [32, 0, 0, "-", "cutils"], [32, 0, 0, "-", "cxxnodes"], [32, 0, 0, "-", "fnodes"], [32, 0, 0, "-", "futils"], [32, 0, 0, "-", "matrix_nodes"], [32, 0, 0, "-", "pyutils"], [32, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[32, 3, 1, "", "newtons_method"], [32, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[32, 1, 1, "", "SeriesApprox"], [32, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[32, 1, 1, "", "Assignment"], [32, 1, 1, "", "AssignmentBase"], [32, 1, 1, "", "Attribute"], [32, 1, 1, "", "AugmentedAssignment"], [32, 1, 1, "", "BreakToken"], [32, 1, 1, "", "CodeBlock"], [32, 1, 1, "", "Comment"], [32, 1, 1, "", "ComplexType"], [32, 1, 1, "", "ContinueToken"], [32, 1, 1, "", "Declaration"], [32, 1, 1, "", "Element"], [32, 1, 1, "", "FloatBaseType"], [32, 1, 1, "", "FloatType"], [32, 1, 1, "", "For"], [32, 1, 1, "", "FunctionCall"], [32, 1, 1, "", "FunctionDefinition"], [32, 1, 1, "", "FunctionPrototype"], [32, 1, 1, "", "IntBaseType"], [32, 1, 1, "", "Node"], [32, 1, 1, "", "NoneToken"], [32, 1, 1, "", "Pointer"], [32, 1, 1, "", "Print"], [32, 1, 1, "", "QuotedString"], [32, 1, 1, "", "Return"], [32, 1, 1, "", "Scope"], [32, 1, 1, "", "SignedIntType"], [32, 1, 1, "", "Stream"], [32, 1, 1, "", "String"], [32, 1, 1, "", "Token"], [32, 1, 1, "", "Type"], [32, 1, 1, "", "UnsignedIntType"], [32, 1, 1, "", "Variable"], [32, 1, 1, "", "While"], [32, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[32, 2, 1, "", "cse"], [32, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[32, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[32, 2, 1, "", "cast_nocheck"], [32, 4, 1, "", "decimal_dig"], [32, 4, 1, "", "dig"], [32, 4, 1, "", "eps"], [32, 4, 1, "", "max"], [32, 4, 1, "", "max_exponent"], [32, 4, 1, "", "min_exponent"], [32, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[32, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[32, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[32, 2, 1, "", "cast_check"], [32, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[32, 2, 1, "", "as_Declaration"], [32, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[32, 1, 1, "", "Cbrt"], [32, 1, 1, "", "Sqrt"], [32, 1, 1, "", "exp2"], [32, 1, 1, "", "expm1"], [32, 1, 1, "", "fma"], [32, 1, 1, "", "hypot"], [32, 1, 1, "", "log10"], [32, 1, 1, "", "log1p"], [32, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[32, 1, 1, "", "CommaOperator"], [32, 1, 1, "", "Label"], [32, 1, 1, "", "PostDecrement"], [32, 1, 1, "", "PostIncrement"], [32, 1, 1, "", "PreDecrement"], [32, 1, 1, "", "PreIncrement"], [32, 3, 1, "", "alignof"], [32, 1, 1, "", "goto"], [32, 3, 1, "", "sizeof"], [32, 1, 1, "", "struct"], [32, 1, 1, "", "union"]], "sympy.codegen.cutils": [[32, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[32, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[32, 1, 1, "", "ArrayConstructor"], [32, 1, 1, "", "Do"], [32, 1, 1, "", "Extent"], [32, 1, 1, "", "FortranReturn"], [32, 1, 1, "", "GoTo"], [32, 1, 1, "", "ImpliedDoLoop"], [32, 1, 1, "", "Module"], [32, 1, 1, "", "Program"], [32, 1, 1, "", "Subroutine"], [32, 1, 1, "", "SubroutineCall"], [32, 3, 1, "", "allocated"], [32, 3, 1, "", "array"], [32, 3, 1, "", "bind_C"], [32, 1, 1, "", "cmplx"], [32, 3, 1, "", "dimension"], [32, 1, 1, "", "dsign"], [32, 1, 1, "", "isign"], [32, 1, 1, "", "kind"], [32, 3, 1, "", "lbound"], [32, 1, 1, "", "literal_dp"], [32, 1, 1, "", "literal_sp"], [32, 1, 1, "", "merge"], [32, 3, 1, "", "reshape"], [32, 3, 1, "", "shape"], [32, 3, 1, "", "size"], [32, 1, 1, "", "use"], [32, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[32, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[32, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[32, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[32, 1, 1, "", "FuncMinusOneOptim"], [32, 1, 1, "", "Optimization"], [32, 1, 1, "", "ReplaceOptim"], [32, 3, 1, "", "create_expand_pow_optimization"], [32, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[32, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[42, 0, 0, "-", "generators"], [34, 0, 0, "-", "graycode"], [35, 0, 0, "-", "group_constructs"], [36, 0, 0, "-", "group_numbers"], [38, 0, 0, "-", "named_groups"], [39, 0, 0, "-", "partitions"], [41, 0, 0, "-", "perm_groups"], [42, 0, 0, "-", "permutations"], [43, 0, 0, "-", "polyhedron"], [44, 0, 0, "-", "prufer"], [45, 0, 0, "-", "subsets"], [46, 0, 0, "-", "tensor_can"], [47, 0, 0, "-", "testutil"], [48, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[42, 2, 1, "", "alternating"], [42, 2, 1, "", "cyclic"], [42, 2, 1, "", "dihedral"], [42, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[34, 1, 1, "", "GrayCode"], [34, 2, 1, "", "bin_to_gray"], [34, 2, 1, "", "get_subset_from_bitstring"], [34, 2, 1, "", "gray_to_bin"], [34, 2, 1, "", "graycode_subsets"], [34, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[34, 4, 1, "", "current"], [34, 2, 1, "", "generate_gray"], [34, 4, 1, "", "n"], [34, 2, 1, "", "next"], [34, 4, 1, "", "rank"], [34, 4, 1, "", "selections"], [34, 2, 1, "", "skip"], [34, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[35, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[36, 3, 1, "", "is_abelian_number"], [36, 3, 1, "", "is_cyclic_number"], [36, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[38, 3, 1, "", "AbelianGroup"], [38, 3, 1, "", "AlternatingGroup"], [38, 3, 1, "", "CyclicGroup"], [38, 3, 1, "", "DihedralGroup"], [38, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[39, 1, 1, "", "IntegerPartition"], [39, 1, 1, "", "Partition"], [39, 3, 1, "", "RGS_enum"], [39, 3, 1, "", "RGS_generalized"], [39, 3, 1, "", "RGS_rank"], [39, 3, 1, "", "RGS_unrank"], [39, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[39, 2, 1, "", "as_dict"], [39, 2, 1, "", "as_ferrers"], [39, 4, 1, "", "conjugate"], [39, 2, 1, "", "next_lex"], [39, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[39, 4, 1, "", "RGS"], [39, 2, 1, "", "from_rgs"], [39, 4, 1, "", "partition"], [39, 4, 1, "", "rank"], [39, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[41, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[41, 2, 1, "", "__contains__"], [41, 2, 1, "", "__mul__"], [41, 2, 1, "", "__new__"], [41, 5, 1, "", "__weakref__"], [41, 2, 1, "", "_coset_representative"], [41, 2, 1, "", "_distinct_primes_lemma"], [41, 4, 1, "", "_elements"], [41, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [41, 2, 1, "", "_eval_is_alt_sym_naive"], [41, 2, 1, "", "_p_elements_group"], [41, 2, 1, "", "_random_pr_init"], [41, 2, 1, "", "_sylow_alt_sym"], [41, 2, 1, "", "_union_find_merge"], [41, 2, 1, "", "_union_find_rep"], [41, 2, 1, "", "_verify"], [41, 2, 1, "", "abelian_invariants"], [41, 4, 1, "", "base"], [41, 2, 1, "", "baseswap"], [41, 4, 1, "", "basic_orbits"], [41, 4, 1, "", "basic_stabilizers"], [41, 4, 1, "", "basic_transversals"], [41, 2, 1, "", "center"], [41, 2, 1, "", "centralizer"], [41, 2, 1, "", "commutator"], [41, 2, 1, "", "composition_series"], [41, 2, 1, "", "conjugacy_class"], [41, 2, 1, "", "conjugacy_classes"], [41, 2, 1, "", "contains"], [41, 2, 1, "", "coset_factor"], [41, 2, 1, "", "coset_rank"], [41, 2, 1, "", "coset_table"], [41, 2, 1, "", "coset_transversal"], [41, 2, 1, "", "coset_unrank"], [41, 4, 1, "", "degree"], [41, 2, 1, "", "derived_series"], [41, 2, 1, "", "derived_subgroup"], [41, 4, 1, "", "elements"], [41, 2, 1, "", "equals"], [41, 2, 1, "", "generate"], [41, 2, 1, "", "generate_dimino"], [41, 2, 1, "", "generate_schreier_sims"], [41, 2, 1, "", "generator_product"], [41, 4, 1, "", "generators"], [41, 4, 1, "", "identity"], [41, 2, 1, "", "index"], [41, 4, 1, "", "is_abelian"], [41, 2, 1, "", "is_alt_sym"], [41, 4, 1, "", "is_alternating"], [41, 4, 1, "", "is_cyclic"], [41, 2, 1, "", "is_elementary"], [41, 4, 1, "", "is_nilpotent"], [41, 2, 1, "", "is_normal"], [41, 4, 1, "", "is_perfect"], [41, 4, 1, "", "is_polycyclic"], [41, 2, 1, "", "is_primitive"], [41, 4, 1, "", "is_solvable"], [41, 2, 1, "", "is_subgroup"], [41, 4, 1, "", "is_symmetric"], [41, 2, 1, "", "is_transitive"], [41, 4, 1, "", "is_trivial"], [41, 2, 1, "", "lower_central_series"], [41, 2, 1, "", "make_perm"], [41, 4, 1, "", "max_div"], [41, 2, 1, "", "minimal_block"], [41, 2, 1, "", "minimal_blocks"], [41, 2, 1, "", "normal_closure"], [41, 2, 1, "", "orbit"], [41, 2, 1, "", "orbit_rep"], [41, 2, 1, "", "orbit_transversal"], [41, 2, 1, "", "orbits"], [41, 2, 1, "", "order"], [41, 2, 1, "", "pointwise_stabilizer"], [41, 2, 1, "", "polycyclic_group"], [41, 2, 1, "", "presentation"], [41, 2, 1, "", "random"], [41, 2, 1, "", "random_pr"], [41, 2, 1, "", "random_stab"], [41, 2, 1, "", "schreier_sims"], [41, 2, 1, "", "schreier_sims_incremental"], [41, 2, 1, "", "schreier_sims_random"], [41, 2, 1, "", "schreier_vector"], [41, 2, 1, "", "stabilizer"], [41, 4, 1, "", "strong_gens"], [41, 2, 1, "", "strong_presentation"], [41, 2, 1, "", "subgroup"], [41, 2, 1, "", "subgroup_search"], [41, 2, 1, "", "sylow_subgroup"], [41, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[42, 1, 1, "", "Cycle"], [42, 1, 1, "", "Permutation"], [42, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[42, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[42, 2, 1, "", "apply"], [42, 4, 1, "", "array_form"], [42, 2, 1, "", "ascents"], [42, 2, 1, "", "atoms"], [42, 4, 1, "", "cardinality"], [42, 2, 1, "", "commutator"], [42, 2, 1, "", "commutes_with"], [42, 4, 1, "", "cycle_structure"], [42, 4, 1, "", "cycles"], [42, 4, 1, "", "cyclic_form"], [42, 2, 1, "", "descents"], [42, 2, 1, "", "from_inversion_vector"], [42, 2, 1, "", "from_sequence"], [42, 4, 1, "", "full_cyclic_form"], [42, 2, 1, "", "get_adjacency_distance"], [42, 2, 1, "", "get_adjacency_matrix"], [42, 2, 1, "", "get_positional_distance"], [42, 2, 1, "", "get_precedence_distance"], [42, 2, 1, "", "get_precedence_matrix"], [42, 2, 1, "", "index"], [42, 2, 1, "", "inversion_vector"], [42, 2, 1, "", "inversions"], [42, 4, 1, "", "is_Empty"], [42, 4, 1, "", "is_Identity"], [42, 4, 1, "", "is_Singleton"], [42, 4, 1, "", "is_even"], [42, 4, 1, "", "is_odd"], [42, 2, 1, "", "josephus"], [42, 2, 1, "", "length"], [42, 2, 1, "", "list"], [42, 2, 1, "", "max"], [42, 2, 1, "", "min"], [42, 2, 1, "", "mul_inv"], [42, 2, 1, "", "next_lex"], [42, 2, 1, "", "next_nonlex"], [42, 2, 1, "", "next_trotterjohnson"], [42, 2, 1, "", "order"], [42, 2, 1, "", "parity"], [42, 2, 1, "", "random"], [42, 2, 1, "", "rank"], [42, 2, 1, "", "rank_nonlex"], [42, 2, 1, "", "rank_trotterjohnson"], [42, 2, 1, "", "resize"], [42, 2, 1, "", "rmul"], [42, 2, 1, "", "rmul_with_af"], [42, 2, 1, "", "runs"], [42, 2, 1, "", "signature"], [42, 4, 1, "", "size"], [42, 2, 1, "", "support"], [42, 2, 1, "", "transpositions"], [42, 2, 1, "", "unrank_lex"], [42, 2, 1, "", "unrank_nonlex"], [42, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[43, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[43, 4, 1, "", "array_form"], [43, 4, 1, "", "corners"], [43, 4, 1, "", "cyclic_form"], [43, 4, 1, "", "edges"], [43, 4, 1, "", "faces"], [43, 4, 1, "", "pgroup"], [43, 2, 1, "", "reset"], [43, 2, 1, "", "rotate"], [43, 4, 1, "", "size"], [43, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[44, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[44, 2, 1, "", "edges"], [44, 2, 1, "", "next"], [44, 4, 1, "", "nodes"], [44, 2, 1, "", "prev"], [44, 2, 1, "", "prufer_rank"], [44, 4, 1, "", "prufer_repr"], [44, 4, 1, "", "rank"], [44, 4, 1, "", "size"], [44, 2, 1, "", "to_prufer"], [44, 2, 1, "", "to_tree"], [44, 4, 1, "", "tree_repr"], [44, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[45, 1, 1, "", "Subset"], [45, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[45, 2, 1, "", "bitlist_from_subset"], [45, 4, 1, "", "cardinality"], [45, 2, 1, "", "iterate_binary"], [45, 2, 1, "", "iterate_graycode"], [45, 2, 1, "", "next_binary"], [45, 2, 1, "", "next_gray"], [45, 2, 1, "", "next_lexicographic"], [45, 2, 1, "", "prev_binary"], [45, 2, 1, "", "prev_gray"], [45, 2, 1, "", "prev_lexicographic"], [45, 4, 1, "", "rank_binary"], [45, 4, 1, "", "rank_gray"], [45, 4, 1, "", "rank_lexicographic"], [45, 4, 1, "", "size"], [45, 4, 1, "", "subset"], [45, 2, 1, "", "subset_from_bitlist"], [45, 2, 1, "", "subset_indices"], [45, 4, 1, "", "superset"], [45, 4, 1, "", "superset_size"], [45, 2, 1, "", "unrank_binary"], [45, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[46, 3, 1, "", "bsgs_direct_product"], [46, 3, 1, "", "canonicalize"], [46, 3, 1, "", "double_coset_can_rep"], [46, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[47, 3, 1, "", "_cmp_perm_lists"], [47, 3, 1, "", "_naive_list_centralizer"], [47, 3, 1, "", "_verify_bsgs"], [47, 3, 1, "", "_verify_centralizer"], [47, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[48, 3, 1, "", "_base_ordering"], [48, 3, 1, "", "_check_cycles_alt_sym"], [48, 3, 1, "", "_distribute_gens_by_base"], [48, 3, 1, "", "_handle_precomputed_bsgs"], [48, 3, 1, "", "_orbits_transversals_from_bsgs"], [48, 3, 1, "", "_remove_gens"], [48, 3, 1, "", "_strip"], [48, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[49, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[49, 2, 1, "", "change_index"], [49, 4, 1, "", "has_empty_sequence"], [49, 2, 1, "", "index"], [49, 2, 1, "", "reorder"], [49, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[77, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[77, 4, 1, "", "bound_symbols"], [77, 4, 1, "", "free_symbols"], [77, 4, 1, "", "function"], [77, 4, 1, "", "has_finite_limits"], [77, 4, 1, "", "has_reversed_limits"], [77, 4, 1, "", "is_number"], [77, 4, 1, "", "limits"], [77, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[49, 3, 1, "", "gosper_normal"], [49, 3, 1, "", "gosper_sum"], [49, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[49, 1, 1, "", "Product"], [49, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[49, 2, 1, "", "is_convergent"], [49, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[49, 1, 1, "", "Sum"], [49, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[49, 2, 1, "", "euler_maclaurin"], [49, 2, 1, "", "eval_zeta_function"], [49, 2, 1, "", "is_absolutely_convergent"], [49, 2, 1, "", "is_convergent"], [49, 2, 1, "", "reverse_order"]], "sympy.core": [[50, 0, 0, "-", "add"], [50, 0, 0, "-", "assumptions"], [50, 0, 0, "-", "basic"], [50, 0, 0, "-", "cache"], [50, 0, 0, "-", "containers"], [50, 0, 0, "-", "core"], [50, 0, 0, "-", "evalf"], [50, 0, 0, "-", "expr"], [50, 0, 0, "-", "exprtools"], [50, 0, 0, "-", "function"], [50, 0, 0, "-", "kind"], [50, 0, 0, "-", "mod"], [50, 0, 0, "-", "mul"], [50, 0, 0, "-", "multidimensional"], [50, 0, 0, "-", "numbers"], [50, 0, 0, "-", "power"], [50, 0, 0, "-", "random"], [50, 0, 0, "-", "relational"], [50, 0, 0, "-", "singleton"], [50, 0, 0, "-", "symbol"], [50, 0, 0, "-", "sympify"], [50, 0, 0, "-", "traversal"]], "sympy.core.add": [[50, 1, 1, "", "Add"]], "sympy.core.add.Add": [[50, 2, 1, "", "as_coeff_Add"], [50, 2, 1, "", "as_coeff_add"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "as_numer_denom"], [50, 2, 1, "", "as_real_imag"], [50, 2, 1, "", "as_two_terms"], [50, 2, 1, "", "class_key"], [50, 2, 1, "", "extract_leading_order"], [50, 2, 1, "", "flatten"], [50, 2, 1, "", "primitive"]], "sympy.core.basic": [[50, 1, 1, "", "Atom"], [50, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[50, 4, 1, "", "args"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "as_dummy"], [50, 4, 1, "", "assumptions0"], [50, 2, 1, "", "atoms"], [50, 4, 1, "", "canonical_variables"], [50, 2, 1, "", "class_key"], [50, 2, 1, "", "compare"], [50, 2, 1, "", "count"], [50, 2, 1, "", "count_ops"], [50, 2, 1, "", "doit"], [50, 2, 1, "", "dummy_eq"], [50, 2, 1, "", "find"], [50, 4, 1, "", "free_symbols"], [50, 2, 1, "", "fromiter"], [50, 4, 1, "", "func"], [50, 2, 1, "", "has"], [50, 2, 1, "", "has_free"], [50, 4, 1, "", "is_comparable"], [50, 2, 1, "", "match"], [50, 2, 1, "", "matches"], [50, 2, 1, "", "rcall"], [50, 2, 1, "", "refine"], [50, 2, 1, "", "replace"], [50, 2, 1, "", "rewrite"], [50, 2, 1, "", "simplify"], [50, 2, 1, "", "sort_key"], [50, 2, 1, "", "subs"], [50, 2, 1, "", "xreplace"]], "sympy.core.cache": [[50, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[50, 1, 1, "", "Dict"], [50, 1, 1, "", "Tuple"], [50, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[50, 2, 1, "", "get"], [50, 2, 1, "", "items"], [50, 2, 1, "", "keys"], [50, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[50, 2, 1, "", "index"], [50, 4, 1, "", "kind"], [50, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[50, 1, 1, "", "EvalfMixin"], [50, 3, 1, "", "N"], [50, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[50, 2, 1, "", "evalf"], [50, 2, 1, "", "n"]], "sympy.core.expr": [[50, 1, 1, "", "AtomicExpr"], [50, 1, 1, "", "Expr"], [50, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[50, 2, 1, "", "apart"], [50, 2, 1, "", "args_cnc"], [50, 2, 1, "", "as_coeff_Add"], [50, 2, 1, "", "as_coeff_Mul"], [50, 2, 1, "", "as_coeff_add"], [50, 2, 1, "", "as_coeff_exponent"], [50, 2, 1, "", "as_coeff_mul"], [50, 2, 1, "", "as_coefficient"], [50, 2, 1, "", "as_coefficients_dict"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "as_expr"], [50, 2, 1, "", "as_independent"], [50, 2, 1, "", "as_leading_term"], [50, 2, 1, "", "as_numer_denom"], [50, 2, 1, "", "as_ordered_factors"], [50, 2, 1, "", "as_ordered_terms"], [50, 2, 1, "", "as_poly"], [50, 2, 1, "", "as_powers_dict"], [50, 2, 1, "", "as_real_imag"], [50, 2, 1, "", "as_terms"], [50, 2, 1, "", "aseries"], [50, 2, 1, "", "cancel"], [50, 2, 1, "", "coeff"], [50, 2, 1, "", "collect"], [50, 2, 1, "", "combsimp"], [50, 2, 1, "", "compute_leading_term"], [50, 2, 1, "", "conjugate"], [50, 2, 1, "", "could_extract_minus_sign"], [50, 2, 1, "", "count_ops"], [50, 2, 1, "", "equals"], [50, 2, 1, "", "expand"], [50, 4, 1, "", "expr_free_symbols"], [50, 2, 1, "", "extract_additively"], [50, 2, 1, "", "extract_branch_factor"], [50, 2, 1, "", "extract_multiplicatively"], [50, 2, 1, "", "factor"], [50, 2, 1, "", "fourier_series"], [50, 2, 1, "", "fps"], [50, 2, 1, "", "gammasimp"], [50, 2, 1, "", "getO"], [50, 2, 1, "", "getn"], [50, 2, 1, "", "integrate"], [50, 2, 1, "", "invert"], [50, 2, 1, "", "is_algebraic_expr"], [50, 2, 1, "", "is_constant"], [50, 2, 1, "", "is_meromorphic"], [50, 4, 1, "", "is_number"], [50, 2, 1, "", "is_polynomial"], [50, 2, 1, "", "is_rational_function"], [50, 2, 1, "", "leadterm"], [50, 2, 1, "", "limit"], [50, 2, 1, "", "lseries"], [50, 2, 1, "", "normal"], [50, 2, 1, "", "nseries"], [50, 2, 1, "", "nsimplify"], [50, 2, 1, "", "powsimp"], [50, 2, 1, "", "primitive"], [50, 2, 1, "", "radsimp"], [50, 2, 1, "", "ratsimp"], [50, 2, 1, "", "removeO"], [50, 2, 1, "", "round"], [50, 2, 1, "", "separate"], [50, 2, 1, "", "series"], [50, 2, 1, "", "taylor_term"], [50, 2, 1, "", "together"], [50, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[50, 3, 1, "", "factor_terms"], [50, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[50, 1, 1, "", "Derivative"], [50, 1, 1, "", "Function"], [50, 1, 1, "", "FunctionClass"], [50, 1, 1, "", "Lambda"], [50, 1, 1, "", "PoleError"], [50, 1, 1, "", "Subs"], [50, 1, 1, "", "WildFunction"], [50, 3, 1, "", "count_ops"], [50, 3, 1, "", "diff"], [50, 3, 1, "", "expand"], [50, 3, 1, "", "expand_complex"], [50, 3, 1, "", "expand_func"], [50, 3, 1, "", "expand_log"], [50, 3, 1, "", "expand_mul"], [50, 3, 1, "", "expand_multinomial"], [50, 3, 1, "", "expand_power_base"], [50, 3, 1, "", "expand_power_exp"], [50, 3, 1, "", "expand_trig"], [50, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[50, 4, 1, "", "_diff_wrt"], [50, 2, 1, "", "_sort_variable_count"], [50, 2, 1, "", "as_finite_difference"], [50, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[50, 2, 1, "", "as_base_exp"], [50, 2, 1, "", "fdiff"], [50, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[50, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[50, 4, 1, "", "bound_symbols"], [50, 4, 1, "", "expr"], [50, 4, 1, "", "is_identity"], [50, 4, 1, "", "signature"], [50, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[50, 4, 1, "", "bound_symbols"], [50, 4, 1, "", "expr"], [50, 4, 1, "", "point"], [50, 4, 1, "", "variables"]], "sympy.core.kind": [[50, 5, 1, "", "BooleanKind"], [50, 1, 1, "", "Kind"], [50, 5, 1, "", "NumberKind"], [50, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[50, 1, 1, "", "Mod"]], "sympy.core.mul": [[50, 1, 1, "", "Mul"], [50, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[50, 2, 1, "", "as_coeff_Mul"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "as_ordered_factors"], [50, 2, 1, "", "as_two_terms"], [50, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[50, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[50, 1, 1, "", "AlgebraicNumber"], [50, 1, 1, "", "Catalan"], [50, 1, 1, "", "ComplexInfinity"], [50, 1, 1, "", "EulerGamma"], [50, 1, 1, "", "Exp1"], [50, 1, 1, "", "Float"], [50, 1, 1, "", "GoldenRatio"], [50, 1, 1, "", "Half"], [50, 1, 1, "", "ImaginaryUnit"], [50, 1, 1, "", "Infinity"], [50, 1, 1, "", "Integer"], [50, 1, 1, "", "NaN"], [50, 1, 1, "", "NegativeInfinity"], [50, 1, 1, "", "NegativeOne"], [50, 1, 1, "", "Number"], [50, 1, 1, "", "NumberSymbol"], [50, 1, 1, "", "One"], [50, 1, 1, "", "Pi"], [50, 1, 1, "", "Rational"], [50, 5, 1, "", "RealNumber"], [50, 1, 1, "", "TribonacciConstant"], [50, 1, 1, "", "Zero"], [50, 3, 1, "", "igcd"], [50, 3, 1, "", "ilcm"], [50, 3, 1, "", "mod_inverse"], [50, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[50, 2, 1, "", "__new__"], [50, 2, 1, "", "as_expr"], [50, 2, 1, "", "as_poly"], [50, 2, 1, "", "coeffs"], [50, 2, 1, "", "field_element"], [50, 4, 1, "", "is_aliased"], [50, 4, 1, "", "is_primitive_element"], [50, 2, 1, "", "minpoly_of_element"], [50, 2, 1, "", "native_coeffs"], [50, 2, 1, "", "primitive_element"], [50, 2, 1, "", "to_algebraic_integer"], [50, 2, 1, "", "to_primitive_element"], [50, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[50, 2, 1, "", "as_coeff_Add"], [50, 2, 1, "", "as_coeff_Mul"], [50, 2, 1, "", "cofactors"], [50, 2, 1, "", "gcd"], [50, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[50, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[50, 2, 1, "", "as_coeff_Add"], [50, 2, 1, "", "as_coeff_Mul"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "factors"], [50, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[50, 1, 1, "", "Pow"], [50, 3, 1, "", "integer_log"], [50, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[50, 2, 1, "", "as_base_exp"], [50, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[50, 3, 1, "", "_randint"], [50, 3, 1, "", "_randrange"], [50, 3, 1, "", "random_complex_number"], [50, 3, 1, "", "test_derivative_numerically"], [50, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[50, 5, 1, "", "Eq"], [50, 1, 1, "", "Equality"], [50, 5, 1, "", "Ge"], [50, 1, 1, "", "GreaterThan"], [50, 5, 1, "", "Gt"], [50, 5, 1, "", "Le"], [50, 1, 1, "", "LessThan"], [50, 5, 1, "", "Lt"], [50, 5, 1, "", "Ne"], [50, 5, 1, "", "Rel"], [50, 1, 1, "", "Relational"], [50, 1, 1, "", "StrictGreaterThan"], [50, 1, 1, "", "StrictLessThan"], [50, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[50, 2, 1, "", "as_poly"], [50, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[50, 4, 1, "", "canonical"], [50, 2, 1, "", "equals"], [50, 4, 1, "", "lhs"], [50, 4, 1, "", "negated"], [50, 4, 1, "", "reversed"], [50, 4, 1, "", "reversedsign"], [50, 4, 1, "", "rhs"], [50, 4, 1, "", "strict"], [50, 4, 1, "", "weak"]], "sympy.core.singleton": [[50, 1, 1, "", "Singleton"], [50, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[50, 3, 1, "", "default_sort_key"], [50, 3, 1, "", "ordered"]], "sympy.core.symbol": [[50, 1, 1, "", "Dummy"], [50, 1, 1, "", "Symbol"], [50, 1, 1, "", "Wild"], [50, 3, 1, "", "symbols"], [50, 3, 1, "", "var"]], "sympy.core.sympify": [[50, 3, 1, "", "sympify"]], "sympy.core.traversal": [[50, 3, 1, "", "bottom_up"], [50, 3, 1, "", "postorder_traversal"], [50, 3, 1, "", "preorder_traversal"], [50, 3, 1, "", "use"], [50, 3, 1, "", "walk"]], "sympy.crypto": [[51, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[51, 3, 1, "", "AZ"], [51, 3, 1, "", "bifid5_square"], [51, 3, 1, "", "bifid6_square"], [51, 3, 1, "", "check_and_join"], [51, 3, 1, "", "cycle_list"], [51, 3, 1, "", "decipher_affine"], [51, 3, 1, "", "decipher_atbash"], [51, 3, 1, "", "decipher_bifid"], [51, 3, 1, "", "decipher_bifid5"], [51, 3, 1, "", "decipher_bifid6"], [51, 3, 1, "", "decipher_elgamal"], [51, 3, 1, "", "decipher_gm"], [51, 3, 1, "", "decipher_hill"], [51, 3, 1, "", "decipher_kid_rsa"], [51, 3, 1, "", "decipher_railfence"], [51, 3, 1, "", "decipher_rot13"], [51, 3, 1, "", "decipher_rsa"], [51, 3, 1, "", "decipher_shift"], [51, 3, 1, "", "decipher_vigenere"], [51, 3, 1, "", "decode_morse"], [51, 3, 1, "", "dh_private_key"], [51, 3, 1, "", "dh_public_key"], [51, 3, 1, "", "dh_shared_key"], [51, 3, 1, "", "elgamal_private_key"], [51, 3, 1, "", "elgamal_public_key"], [51, 3, 1, "", "encipher_affine"], [51, 3, 1, "", "encipher_atbash"], [51, 3, 1, "", "encipher_bifid"], [51, 3, 1, "", "encipher_bifid5"], [51, 3, 1, "", "encipher_bifid6"], [51, 3, 1, "", "encipher_elgamal"], [51, 3, 1, "", "encipher_gm"], [51, 3, 1, "", "encipher_hill"], [51, 3, 1, "", "encipher_kid_rsa"], [51, 3, 1, "", "encipher_railfence"], [51, 3, 1, "", "encipher_rot13"], [51, 3, 1, "", "encipher_rsa"], [51, 3, 1, "", "encipher_shift"], [51, 3, 1, "", "encipher_substitution"], [51, 3, 1, "", "encipher_vigenere"], [51, 3, 1, "", "encode_morse"], [51, 3, 1, "", "gm_private_key"], [51, 3, 1, "", "gm_public_key"], [51, 3, 1, "", "kid_rsa_private_key"], [51, 3, 1, "", "kid_rsa_public_key"], [51, 3, 1, "", "lfsr_autocorrelation"], [51, 3, 1, "", "lfsr_connection_polynomial"], [51, 3, 1, "", "lfsr_sequence"], [51, 3, 1, "", "padded_key"], [51, 3, 1, "", "rsa_private_key"], [51, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[52, 1, 1, "", "BaseCovarDerivativeOp"], [52, 1, 1, "", "BaseScalarField"], [52, 1, 1, "", "BaseVectorField"], [52, 1, 1, "", "Commutator"], [52, 1, 1, "", "CoordSystem"], [52, 1, 1, "", "CoordinateSymbol"], [52, 1, 1, "", "CovarDerivativeOp"], [52, 1, 1, "", "Differential"], [52, 1, 1, "", "LieDerivative"], [52, 1, 1, "", "Manifold"], [52, 1, 1, "", "Patch"], [52, 1, 1, "", "Point"], [52, 1, 1, "", "TensorProduct"], [52, 1, 1, "", "WedgeProduct"], [52, 3, 1, "", "intcurve_diffequ"], [52, 3, 1, "", "intcurve_series"], [52, 3, 1, "", "metric_to_Christoffel_1st"], [52, 3, 1, "", "metric_to_Christoffel_2nd"], [52, 3, 1, "", "metric_to_Ricci_components"], [52, 3, 1, "", "metric_to_Riemann_components"], [52, 3, 1, "", "twoform_to_matrix"], [52, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[52, 2, 1, "", "base_oneform"], [52, 2, 1, "", "base_oneforms"], [52, 2, 1, "", "base_scalar"], [52, 2, 1, "", "base_scalars"], [52, 2, 1, "", "base_vector"], [52, 2, 1, "", "base_vectors"], [52, 2, 1, "", "coord_function"], [52, 2, 1, "", "coord_functions"], [52, 2, 1, "", "coord_tuple_transform_to"], [52, 2, 1, "", "jacobian"], [52, 2, 1, "", "jacobian_determinant"], [52, 2, 1, "", "jacobian_matrix"], [52, 2, 1, "", "point"], [52, 2, 1, "", "point_to_coords"], [52, 2, 1, "", "transform"], [52, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[52, 2, 1, "", "coords"]], "sympy.discrete": [[53, 0, 0, "-", "convolutions"], [53, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[53, 3, 1, "", "convolution"], [53, 3, 1, "", "convolution_fft"], [53, 3, 1, "", "convolution_fwht"], [53, 3, 1, "", "convolution_ntt"], [53, 3, 1, "", "convolution_subset"], [53, 3, 1, "", "covering_product"], [53, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[53, 3, 1, "", "fft"], [53, 3, 1, "", "fwht"], [53, 3, 1, "", "ifft"], [53, 3, 1, "", "ifwht"], [53, 3, 1, "", "intt"], [53, 3, 1, "", "inverse_mobius_transform"], [53, 3, 1, "", "mobius_transform"], [53, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[185, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[55, 1, 1, "", "FallingFactorial"], [55, 1, 1, "", "MultiFactorial"], [55, 1, 1, "", "RisingFactorial"], [55, 1, 1, "", "binomial"], [55, 1, 1, "", "factorial"], [55, 1, 1, "", "factorial2"], [55, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[55, 1, 1, "", "bell"], [55, 1, 1, "", "bernoulli"], [55, 1, 1, "", "catalan"], [55, 1, 1, "", "euler"], [55, 1, 1, "", "fibonacci"], [55, 1, 1, "", "genocchi"], [55, 1, 1, "", "harmonic"], [55, 1, 1, "", "lucas"], [55, 3, 1, "", "nC"], [55, 3, 1, "", "nP"], [55, 3, 1, "", "nT"], [55, 1, 1, "", "partition"], [55, 3, 1, "", "stirling"], [55, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[56, 1, 1, "", "Abs"], [56, 1, 1, "", "arg"], [56, 1, 1, "", "conjugate"], [56, 1, 1, "", "im"], [56, 1, 1, "", "periodic_argument"], [56, 1, 1, "", "polar_lift"], [56, 1, 1, "", "principal_branch"], [56, 1, 1, "", "re"], [56, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[56, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[56, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[56, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[56, 1, 1, "", "LambertW"], [56, 1, 1, "", "exp"], [56, 1, 1, "", "exp_polar"], [56, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[56, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[56, 2, 1, "", "as_real_imag"], [56, 4, 1, "", "base"], [56, 2, 1, "", "fdiff"], [56, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[56, 2, 1, "", "as_base_exp"], [56, 2, 1, "", "as_real_imag"], [56, 2, 1, "", "fdiff"], [56, 2, 1, "", "inverse"], [56, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[56, 1, 1, "", "HyperbolicFunction"], [56, 1, 1, "", "acosh"], [56, 1, 1, "", "acoth"], [56, 1, 1, "", "acsch"], [56, 1, 1, "", "asech"], [56, 1, 1, "", "asinh"], [56, 1, 1, "", "atanh"], [56, 1, 1, "", "cosh"], [56, 1, 1, "", "coth"], [56, 1, 1, "", "csch"], [56, 1, 1, "", "sech"], [56, 1, 1, "", "sinh"], [56, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[56, 2, 1, "", "fdiff"], [56, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[56, 2, 1, "", "as_real_imag"], [56, 2, 1, "", "fdiff"], [56, 2, 1, "", "inverse"], [56, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[56, 1, 1, "", "RoundFunction"], [56, 1, 1, "", "ceiling"], [56, 1, 1, "", "floor"], [56, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[56, 1, 1, "", "IdentityFunction"], [56, 1, 1, "", "Max"], [56, 1, 1, "", "Min"], [56, 3, 1, "", "cbrt"], [56, 3, 1, "", "real_root"], [56, 3, 1, "", "root"], [56, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[56, 1, 1, "", "ExprCondPair"], [56, 1, 1, "", "Piecewise"], [56, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[56, 4, 1, "", "cond"], [56, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[56, 2, 1, "", "_eval_integral"], [56, 2, 1, "", "as_expr_set_pairs"], [56, 2, 1, "", "doit"], [56, 2, 1, "", "eval"], [56, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[56, 1, 1, "", "acos"], [56, 1, 1, "", "acot"], [56, 1, 1, "", "acsc"], [56, 1, 1, "", "asec"], [56, 1, 1, "", "asin"], [56, 1, 1, "", "atan"], [56, 1, 1, "", "atan2"], [56, 1, 1, "", "cos"], [56, 1, 1, "", "cot"], [56, 1, 1, "", "csc"], [56, 1, 1, "", "sec"], [56, 1, 1, "", "sin"], [56, 1, 1, "", "sinc"], [56, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[56, 2, 1, "", "inverse"]], "sympy.functions.special": [[58, 0, 0, "-", "bessel"], [58, 0, 0, "-", "beta_functions"], [58, 0, 0, "-", "elliptic_integrals"], [58, 0, 0, "-", "error_functions"], [58, 0, 0, "-", "gamma_functions"], [58, 0, 0, "-", "mathieu_functions"], [58, 0, 0, "-", "polynomials"], [58, 0, 0, "-", "singularity_functions"], [58, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[58, 1, 1, "", "AiryBase"], [58, 1, 1, "", "BesselBase"], [58, 1, 1, "", "airyai"], [58, 1, 1, "", "airyaiprime"], [58, 1, 1, "", "airybi"], [58, 1, 1, "", "airybiprime"], [58, 1, 1, "", "besseli"], [58, 1, 1, "", "besselj"], [58, 1, 1, "", "besselk"], [58, 1, 1, "", "bessely"], [58, 1, 1, "", "hankel1"], [58, 1, 1, "", "hankel2"], [58, 1, 1, "", "jn"], [58, 3, 1, "", "jn_zeros"], [58, 1, 1, "", "marcumq"], [58, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[58, 4, 1, "", "argument"], [58, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[58, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[58, 3, 1, "", "bspline_basis"], [58, 3, 1, "", "bspline_basis_set"], [58, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[58, 1, 1, "", "DiracDelta"], [58, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[58, 2, 1, "", "eval"], [58, 2, 1, "", "fdiff"], [58, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[58, 2, 1, "", "eval"], [58, 2, 1, "", "fdiff"], [58, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[58, 1, 1, "", "elliptic_e"], [58, 1, 1, "", "elliptic_f"], [58, 1, 1, "", "elliptic_k"], [58, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[58, 1, 1, "", "Chi"], [58, 1, 1, "", "Ci"], [58, 3, 1, "", "E1"], [58, 1, 1, "", "Ei"], [58, 1, 1, "", "FresnelIntegral"], [58, 1, 1, "", "Li"], [58, 1, 1, "", "Shi"], [58, 1, 1, "", "Si"], [58, 1, 1, "", "erf"], [58, 1, 1, "", "erf2"], [58, 1, 1, "", "erf2inv"], [58, 1, 1, "", "erfc"], [58, 1, 1, "", "erfcinv"], [58, 1, 1, "", "erfi"], [58, 1, 1, "", "erfinv"], [58, 1, 1, "", "expint"], [58, 1, 1, "", "fresnelc"], [58, 1, 1, "", "fresnels"], [58, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[58, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[58, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[58, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[58, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[58, 1, 1, "", "digamma"], [58, 1, 1, "", "gamma"], [58, 1, 1, "", "loggamma"], [58, 1, 1, "", "lowergamma"], [58, 1, 1, "", "multigamma"], [58, 1, 1, "", "polygamma"], [58, 1, 1, "", "trigamma"], [58, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[58, 1, 1, "", "appellf1"], [58, 1, 1, "", "hyper"], [58, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[58, 4, 1, "", "ap"], [58, 4, 1, "", "argument"], [58, 4, 1, "", "bq"], [58, 4, 1, "", "convergence_statement"], [58, 4, 1, "", "eta"], [58, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[58, 4, 1, "", "an"], [58, 4, 1, "", "aother"], [58, 4, 1, "", "ap"], [58, 4, 1, "", "argument"], [58, 4, 1, "", "bm"], [58, 4, 1, "", "bother"], [58, 4, 1, "", "bq"], [58, 4, 1, "", "delta"], [58, 2, 1, "", "get_period"], [58, 2, 1, "", "integrand"], [58, 4, 1, "", "is_number"], [58, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[58, 1, 1, "", "MathieuBase"], [58, 1, 1, "", "mathieuc"], [58, 1, 1, "", "mathieucprime"], [58, 1, 1, "", "mathieus"], [58, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[58, 1, 1, "", "assoc_laguerre"], [58, 1, 1, "", "assoc_legendre"], [58, 1, 1, "", "chebyshevt"], [58, 1, 1, "", "chebyshevt_root"], [58, 1, 1, "", "chebyshevu"], [58, 1, 1, "", "chebyshevu_root"], [58, 1, 1, "", "gegenbauer"], [58, 1, 1, "", "hermite"], [58, 1, 1, "", "jacobi"], [58, 3, 1, "", "jacobi_normalized"], [58, 1, 1, "", "laguerre"], [58, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[58, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[58, 2, 1, "", "eval"], [58, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[58, 1, 1, "", "Ynm"], [58, 3, 1, "", "Ynm_c"], [58, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[58, 3, 1, "", "Eijk"], [58, 1, 1, "", "KroneckerDelta"], [58, 1, 1, "", "LeviCivita"], [58, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[58, 2, 1, "", "eval"], [58, 4, 1, "", "indices_contain_equal_information"], [58, 4, 1, "", "is_above_fermi"], [58, 4, 1, "", "is_below_fermi"], [58, 4, 1, "", "is_only_above_fermi"], [58, 4, 1, "", "is_only_below_fermi"], [58, 4, 1, "", "killable_index"], [58, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[58, 1, 1, "", "dirichlet_eta"], [58, 1, 1, "", "lerchphi"], [58, 1, 1, "", "polylog"], [58, 1, 1, "", "stieltjes"], [58, 1, 1, "", "zeta"]], "sympy.geometry": [[59, 0, 0, "-", "curve"], [60, 0, 0, "-", "ellipse"], [61, 0, 0, "-", "entity"], [63, 0, 0, "-", "line"], [64, 0, 0, "-", "plane"], [65, 0, 0, "-", "point"], [66, 0, 0, "-", "polygon"], [67, 0, 0, "-", "util"]], "sympy.geometry.curve": [[59, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[59, 4, 1, "", "ambient_dimension"], [59, 2, 1, "", "arbitrary_point"], [59, 4, 1, "", "free_symbols"], [59, 4, 1, "", "functions"], [59, 4, 1, "", "length"], [59, 4, 1, "", "limits"], [59, 4, 1, "", "parameter"], [59, 2, 1, "", "plot_interval"], [59, 2, 1, "", "rotate"], [59, 2, 1, "", "scale"], [59, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[60, 1, 1, "", "Circle"], [60, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[60, 4, 1, "", "circumference"], [60, 2, 1, "", "equation"], [60, 2, 1, "", "intersection"], [60, 4, 1, "", "radius"], [60, 2, 1, "", "reflect"], [60, 2, 1, "", "scale"], [60, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[60, 4, 1, "", "apoapsis"], [60, 2, 1, "", "arbitrary_point"], [60, 4, 1, "", "area"], [60, 2, 1, "", "auxiliary_circle"], [60, 4, 1, "", "bounds"], [60, 4, 1, "", "center"], [60, 4, 1, "", "circumference"], [60, 2, 1, "", "director_circle"], [60, 4, 1, "", "eccentricity"], [60, 2, 1, "", "encloses_point"], [60, 2, 1, "", "equation"], [60, 2, 1, "", "evolute"], [60, 4, 1, "", "foci"], [60, 4, 1, "", "focus_distance"], [60, 4, 1, "", "hradius"], [60, 2, 1, "", "intersection"], [60, 2, 1, "", "is_tangent"], [60, 4, 1, "", "major"], [60, 4, 1, "", "minor"], [60, 2, 1, "", "normal_lines"], [60, 4, 1, "", "periapsis"], [60, 2, 1, "", "plot_interval"], [60, 2, 1, "", "polar_second_moment_of_area"], [60, 2, 1, "", "random_point"], [60, 2, 1, "", "reflect"], [60, 2, 1, "", "rotate"], [60, 2, 1, "", "scale"], [60, 2, 1, "", "second_moment_of_area"], [60, 2, 1, "", "section_modulus"], [60, 4, 1, "", "semilatus_rectum"], [60, 2, 1, "", "tangent_lines"], [60, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[61, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[61, 4, 1, "", "ambient_dimension"], [61, 4, 1, "", "bounds"], [61, 2, 1, "", "encloses"], [61, 2, 1, "", "intersection"], [61, 2, 1, "", "is_similar"], [61, 2, 1, "", "parameter_value"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "rotate"], [61, 2, 1, "", "scale"], [61, 2, 1, "", "translate"]], "sympy.geometry.line": [[63, 1, 1, "", "Line"], [63, 1, 1, "", "Line2D"], [63, 1, 1, "", "Line3D"], [63, 1, 1, "", "LinearEntity"], [63, 1, 1, "", "LinearEntity2D"], [63, 1, 1, "", "LinearEntity3D"], [63, 1, 1, "", "Ray"], [63, 1, 1, "", "Ray2D"], [63, 1, 1, "", "Ray3D"], [63, 1, 1, "", "Segment"], [63, 1, 1, "", "Segment2D"], [63, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[63, 2, 1, "", "contains"], [63, 2, 1, "", "distance"], [63, 2, 1, "", "equals"], [63, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[63, 4, 1, "", "coefficients"], [63, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[63, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[63, 4, 1, "", "ambient_dimension"], [63, 2, 1, "", "angle_between"], [63, 2, 1, "", "arbitrary_point"], [63, 2, 1, "", "are_concurrent"], [63, 2, 1, "", "bisectors"], [63, 2, 1, "", "contains"], [63, 4, 1, "", "direction"], [63, 2, 1, "", "intersection"], [63, 2, 1, "", "is_parallel"], [63, 2, 1, "", "is_perpendicular"], [63, 2, 1, "", "is_similar"], [63, 4, 1, "", "length"], [63, 4, 1, "", "p1"], [63, 4, 1, "", "p2"], [63, 2, 1, "", "parallel_line"], [63, 2, 1, "", "perpendicular_line"], [63, 2, 1, "", "perpendicular_segment"], [63, 4, 1, "", "points"], [63, 2, 1, "", "projection"], [63, 2, 1, "", "random_point"], [63, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[63, 4, 1, "", "bounds"], [63, 2, 1, "", "perpendicular_line"], [63, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[63, 4, 1, "", "direction_cosine"], [63, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[63, 2, 1, "", "contains"], [63, 2, 1, "", "distance"], [63, 2, 1, "", "equals"], [63, 2, 1, "", "plot_interval"], [63, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[63, 2, 1, "", "closing_angle"], [63, 4, 1, "", "xdirection"], [63, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[63, 4, 1, "", "xdirection"], [63, 4, 1, "", "ydirection"], [63, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[63, 2, 1, "", "contains"], [63, 2, 1, "", "distance"], [63, 2, 1, "", "equals"], [63, 4, 1, "", "length"], [63, 4, 1, "", "midpoint"], [63, 2, 1, "", "perpendicular_bisector"], [63, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[64, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[64, 2, 1, "", "angle_between"], [64, 2, 1, "", "arbitrary_point"], [64, 2, 1, "", "are_concurrent"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "equation"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "is_coplanar"], [64, 2, 1, "", "is_parallel"], [64, 2, 1, "", "is_perpendicular"], [64, 4, 1, "", "normal_vector"], [64, 4, 1, "", "p1"], [64, 2, 1, "", "parallel_plane"], [64, 2, 1, "", "parameter_value"], [64, 2, 1, "", "perpendicular_line"], [64, 2, 1, "", "perpendicular_plane"], [64, 2, 1, "", "projection"], [64, 2, 1, "", "projection_line"], [64, 2, 1, "", "random_point"]], "sympy.geometry.point": [[65, 1, 1, "", "Point"], [65, 1, 1, "", "Point2D"], [65, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[65, 2, 1, "", "affine_rank"], [65, 4, 1, "", "ambient_dimension"], [65, 2, 1, "", "are_coplanar"], [65, 2, 1, "", "canberra_distance"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "dot"], [65, 2, 1, "", "equals"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "is_collinear"], [65, 2, 1, "", "is_concyclic"], [65, 4, 1, "", "is_nonzero"], [65, 2, 1, "", "is_scalar_multiple"], [65, 4, 1, "", "is_zero"], [65, 4, 1, "", "length"], [65, 2, 1, "", "midpoint"], [65, 4, 1, "", "origin"], [65, 4, 1, "", "orthogonal_direction"], [65, 2, 1, "", "project"], [65, 2, 1, "", "taxicab_distance"], [65, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[65, 4, 1, "", "bounds"], [65, 4, 1, "", "coordinates"], [65, 2, 1, "", "rotate"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "transform"], [65, 2, 1, "", "translate"], [65, 4, 1, "", "x"], [65, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[65, 2, 1, "", "are_collinear"], [65, 4, 1, "", "coordinates"], [65, 2, 1, "", "direction_cosine"], [65, 2, 1, "", "direction_ratio"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "transform"], [65, 2, 1, "", "translate"], [65, 4, 1, "", "x"], [65, 4, 1, "", "y"], [65, 4, 1, "", "z"]], "sympy.geometry.polygon": [[66, 1, 1, "", "Polygon"], [66, 1, 1, "", "RegularPolygon"], [66, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[66, 4, 1, "", "angles"], [66, 2, 1, "", "arbitrary_point"], [66, 4, 1, "", "area"], [66, 2, 1, "", "bisectors"], [66, 4, 1, "", "bounds"], [66, 4, 1, "", "centroid"], [66, 2, 1, "", "cut_section"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "encloses_point"], [66, 2, 1, "", "first_moment_of_area"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "is_convex"], [66, 4, 1, "", "perimeter"], [66, 2, 1, "", "plot_interval"], [66, 2, 1, "", "polar_second_moment_of_area"], [66, 2, 1, "", "second_moment_of_area"], [66, 2, 1, "", "section_modulus"], [66, 4, 1, "", "sides"], [66, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[66, 4, 1, "", "angles"], [66, 4, 1, "", "apothem"], [66, 4, 1, "", "area"], [66, 4, 1, "", "args"], [66, 4, 1, "", "center"], [66, 4, 1, "", "centroid"], [66, 4, 1, "", "circumcenter"], [66, 4, 1, "", "circumcircle"], [66, 4, 1, "", "circumradius"], [66, 2, 1, "", "encloses_point"], [66, 4, 1, "", "exterior_angle"], [66, 4, 1, "", "incircle"], [66, 4, 1, "", "inradius"], [66, 4, 1, "", "interior_angle"], [66, 4, 1, "", "length"], [66, 4, 1, "", "radius"], [66, 2, 1, "", "reflect"], [66, 2, 1, "", "rotate"], [66, 4, 1, "", "rotation"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "spin"], [66, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[66, 4, 1, "", "altitudes"], [66, 2, 1, "", "bisectors"], [66, 4, 1, "", "circumcenter"], [66, 4, 1, "", "circumcircle"], [66, 4, 1, "", "circumradius"], [66, 4, 1, "", "eulerline"], [66, 4, 1, "", "excenters"], [66, 4, 1, "", "exradii"], [66, 4, 1, "", "incenter"], [66, 4, 1, "", "incircle"], [66, 4, 1, "", "inradius"], [66, 2, 1, "", "is_equilateral"], [66, 2, 1, "", "is_isosceles"], [66, 2, 1, "", "is_right"], [66, 2, 1, "", "is_scalene"], [66, 2, 1, "", "is_similar"], [66, 4, 1, "", "medial"], [66, 4, 1, "", "medians"], [66, 4, 1, "", "nine_point_circle"], [66, 4, 1, "", "orthocenter"], [66, 4, 1, "", "vertices"]], "sympy.geometry.util": [[67, 3, 1, "", "are_similar"], [67, 3, 1, "", "centroid"], [67, 3, 1, "", "convex_hull"], [67, 3, 1, "", "idiff"], [67, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[73, 1, 1, "", "DifferentialOperator"], [73, 1, 1, "", "DifferentialOperatorAlgebra"], [73, 3, 1, "", "DifferentialOperators"], [73, 1, 1, "", "HolonomicFunction"], [71, 3, 1, "", "_convert_poly_rat_alg"], [71, 3, 1, "", "_create_table"], [69, 3, 1, "", "expr_to_holonomic"], [69, 3, 1, "", "from_hyper"], [69, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[73, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[72, 2, 1, "", "composition"], [72, 2, 1, "", "diff"], [72, 2, 1, "", "evalf"], [72, 2, 1, "", "integrate"], [72, 2, 1, "", "series"], [72, 2, 1, "", "to_expr"], [72, 2, 1, "", "to_hyper"], [72, 2, 1, "", "to_meijerg"], [72, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[77, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[77, 3, 1, "", "components"], [77, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[77, 1, 1, "", "Integral"], [77, 3, 1, "", "integrate"], [77, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[77, 2, 1, "", "as_sum"], [77, 2, 1, "", "doit"], [77, 4, 1, "", "free_symbols"], [77, 6, 1, "", "is_commutative"], [77, 2, 1, "", "principal_value"], [77, 2, 1, "", "transform"]], "sympy.integrals": [[77, 0, 0, "-", "intpoly"], [75, 0, 0, "-", "meijerint"], [75, 0, 0, "-", "meijerint_doc"], [77, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[77, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[77, 3, 1, "", "integral_steps"], [77, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[75, 7, 1, "", "_CoeffExpValueError"], [75, 3, 1, "", "_check_antecedents"], [75, 3, 1, "", "_check_antecedents_1"], [75, 3, 1, "", "_check_antecedents_inversion"], [75, 3, 1, "", "_condsimp"], [75, 3, 1, "", "_create_lookup_table"], [75, 3, 1, "", "_dummy"], [75, 3, 1, "", "_dummy_"], [75, 3, 1, "", "_eval_cond"], [75, 3, 1, "", "_exponents"], [75, 3, 1, "", "_find_splitting_points"], [75, 3, 1, "", "_flip_g"], [75, 3, 1, "", "_functions"], [75, 3, 1, "", "_get_coeff_exp"], [75, 3, 1, "", "_guess_expansion"], [75, 3, 1, "", "_inflate_fox_h"], [75, 3, 1, "", "_inflate_g"], [75, 3, 1, "", "_int0oo"], [75, 3, 1, "", "_int0oo_1"], [75, 3, 1, "", "_int_inversion"], [75, 3, 1, "", "_is_analytic"], [75, 3, 1, "", "_meijerint_definite_2"], [75, 3, 1, "", "_meijerint_definite_3"], [75, 3, 1, "", "_meijerint_definite_4"], [75, 3, 1, "", "_meijerint_indefinite_1"], [75, 3, 1, "", "_mul_args"], [75, 3, 1, "", "_mul_as_two_parts"], [75, 3, 1, "", "_my_principal_branch"], [75, 3, 1, "", "_mytype"], [75, 3, 1, "", "_rewrite1"], [75, 3, 1, "", "_rewrite2"], [75, 3, 1, "", "_rewrite_inversion"], [75, 3, 1, "", "_rewrite_saxena"], [75, 3, 1, "", "_rewrite_saxena_1"], [75, 3, 1, "", "_rewrite_single"], [75, 3, 1, "", "_split_mul"], [75, 3, 1, "", "meijerint_definite"], [75, 3, 1, "", "meijerint_indefinite"], [75, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[77, 3, 1, "", "gauss_chebyshev_t"], [77, 3, 1, "", "gauss_chebyshev_u"], [77, 3, 1, "", "gauss_gen_laguerre"], [77, 3, 1, "", "gauss_hermite"], [77, 3, 1, "", "gauss_jacobi"], [77, 3, 1, "", "gauss_laguerre"], [77, 3, 1, "", "gauss_legendre"], [77, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[77, 3, 1, "", "ratint"], [77, 3, 1, "", "ratint_logpart"], [77, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[77, 1, 1, "", "NonElementaryIntegral"], [77, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[77, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[77, 1, 1, "", "CosineTransform"], [77, 1, 1, "", "FourierTransform"], [77, 1, 1, "", "HankelTransform"], [77, 1, 1, "", "IntegralTransform"], [77, 7, 1, "", "IntegralTransformError"], [77, 1, 1, "", "InverseCosineTransform"], [77, 1, 1, "", "InverseFourierTransform"], [77, 1, 1, "", "InverseHankelTransform"], [77, 1, 1, "", "InverseLaplaceTransform"], [77, 1, 1, "", "InverseMellinTransform"], [77, 1, 1, "", "InverseSineTransform"], [77, 1, 1, "", "LaplaceTransform"], [77, 1, 1, "", "MellinTransform"], [77, 1, 1, "", "SineTransform"], [77, 3, 1, "", "_fast_inverse_laplace"], [77, 3, 1, "", "_fourier_transform"], [77, 3, 1, "", "cosine_transform"], [77, 3, 1, "", "fourier_transform"], [77, 3, 1, "", "hankel_transform"], [77, 3, 1, "", "inverse_cosine_transform"], [77, 3, 1, "", "inverse_fourier_transform"], [77, 3, 1, "", "inverse_hankel_transform"], [77, 3, 1, "", "inverse_laplace_transform"], [77, 3, 1, "", "inverse_mellin_transform"], [77, 3, 1, "", "inverse_sine_transform"], [77, 3, 1, "", "laplace_transform"], [77, 3, 1, "", "mellin_transform"], [77, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[77, 2, 1, "", "doit"], [77, 4, 1, "", "function"], [77, 4, 1, "", "function_variable"], [77, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[77, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[78, 0, 0, "-", "printing"], [78, 0, 0, "-", "session"]], "sympy.interactive.printing": [[78, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[78, 3, 1, "", "enable_automatic_int_sympification"], [78, 3, 1, "", "enable_automatic_symbols"], [78, 3, 1, "", "init_ipython_session"], [78, 3, 1, "", "init_python_session"], [78, 3, 1, "", "init_session"], [78, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[79, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[79, 1, 1, "", "CartanType_generator"], [79, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[79, 2, 1, "", "rank"], [79, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[79, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[79, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[79, 2, 1, "", "add_as_roots"], [79, 2, 1, "", "add_simple_roots"], [79, 2, 1, "", "all_roots"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dynkin_diagram"], [79, 2, 1, "", "root_space"], [79, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[79, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "highest_root"], [79, 2, 1, "", "lie_algebra"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[79, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "lie_algebra"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[79, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "lie_algebra"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[79, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "lie_algebra"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[79, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[79, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[79, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[79, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[79, 2, 1, "", "coxeter_diagram"], [79, 2, 1, "", "delete_doubles"], [79, 2, 1, "", "element_order"], [79, 2, 1, "", "generators"], [79, 2, 1, "", "group_name"], [79, 2, 1, "", "group_order"], [79, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[80, 3, 1, "", "ANFform"], [80, 1, 1, "", "And"], [80, 1, 1, "", "Boolean"], [80, 1, 1, "", "BooleanFalse"], [80, 1, 1, "", "BooleanTrue"], [80, 1, 1, "", "Equivalent"], [80, 1, 1, "", "Exclusive"], [80, 1, 1, "", "ITE"], [80, 1, 1, "", "Implies"], [80, 1, 1, "", "Nand"], [80, 1, 1, "", "Nor"], [80, 1, 1, "", "Not"], [80, 1, 1, "", "Or"], [80, 3, 1, "", "POSform"], [80, 3, 1, "", "SOPform"], [80, 1, 1, "", "Xnor"], [80, 1, 1, "", "Xor"], [80, 3, 1, "", "anf_coeffs"], [80, 3, 1, "", "bool_map"], [80, 3, 1, "", "bool_maxterm"], [80, 3, 1, "", "bool_minterm"], [80, 3, 1, "", "bool_monomial"], [80, 3, 1, "", "distribute_and_over_or"], [80, 3, 1, "", "distribute_or_over_and"], [80, 3, 1, "", "distribute_xor_over_and"], [80, 3, 1, "", "eliminate_implications"], [80, 3, 1, "", "gateinputcount"], [80, 3, 1, "", "integer_to_term"], [80, 3, 1, "", "is_anf"], [80, 3, 1, "", "is_cnf"], [80, 3, 1, "", "is_dnf"], [80, 3, 1, "", "is_nnf"], [80, 3, 1, "", "simplify_logic"], [80, 3, 1, "", "term_to_integer"], [80, 3, 1, "", "to_anf"], [80, 3, 1, "", "to_cnf"], [80, 3, 1, "", "to_dnf"], [80, 3, 1, "", "to_int_repr"], [80, 3, 1, "", "to_nnf"], [80, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[80, 2, 1, "", "as_set"], [80, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[80, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[80, 2, 1, "", "as_set"]], "sympy.logic": [[80, 0, 0, "-", "inference"]], "sympy.logic.inference": [[80, 3, 1, "", "satisfiable"]], "sympy.matrices": [[81, 0, 0, "-", "common"], [83, 0, 0, "-", "expressions"], [84, 0, 0, "-", "immutable"], [86, 0, 0, "-", "matrices"], [88, 0, 0, "-", "sparse"], [89, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[81, 1, 1, "", "MatrixCommon"], [81, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[81, 4, 1, "", "C"], [81, 4, 1, "", "H"], [81, 4, 1, "", "T"], [81, 2, 1, "", "__abs__"], [81, 2, 1, "", "__add__"], [81, 2, 1, "", "__getitem__"], [81, 2, 1, "", "__len__"], [81, 2, 1, "", "__mul__"], [81, 2, 1, "", "__pow__"], [81, 5, 1, "", "__weakref__"], [81, 2, 1, "", "adjoint"], [81, 2, 1, "", "applyfunc"], [81, 2, 1, "", "as_real_imag"], [81, 2, 1, "", "atoms"], [81, 2, 1, "", "col"], [81, 2, 1, "", "col_del"], [81, 2, 1, "", "col_insert"], [81, 2, 1, "", "col_join"], [81, 2, 1, "", "companion"], [81, 2, 1, "", "conjugate"], [81, 2, 1, "", "diag"], [81, 2, 1, "", "diagonal"], [81, 2, 1, "", "evalf"], [81, 2, 1, "", "expand"], [81, 2, 1, "", "extract"], [81, 2, 1, "", "eye"], [81, 4, 1, "", "free_symbols"], [81, 2, 1, "", "get_diag_blocks"], [81, 2, 1, "", "has"], [81, 2, 1, "", "hstack"], [81, 2, 1, "", "is_anti_symmetric"], [81, 2, 1, "", "is_diagonal"], [81, 4, 1, "", "is_hermitian"], [81, 4, 1, "", "is_lower"], [81, 4, 1, "", "is_lower_hessenberg"], [81, 4, 1, "", "is_square"], [81, 4, 1, "", "is_strongly_diagonally_dominant"], [81, 2, 1, "", "is_symbolic"], [81, 2, 1, "", "is_symmetric"], [81, 4, 1, "", "is_upper"], [81, 4, 1, "", "is_upper_hessenberg"], [81, 4, 1, "", "is_weakly_diagonally_dominant"], [81, 4, 1, "", "is_zero_matrix"], [81, 2, 1, "", "jordan_block"], [81, 2, 1, "", "lower_triangular"], [81, 2, 1, "", "multiply"], [81, 2, 1, "", "multiply_elementwise"], [81, 2, 1, "", "n"], [81, 2, 1, "", "ones"], [81, 2, 1, "", "permute"], [81, 2, 1, "", "permute_cols"], [81, 2, 1, "", "permute_rows"], [81, 2, 1, "", "pow"], [81, 2, 1, "", "refine"], [81, 2, 1, "", "replace"], [81, 2, 1, "", "reshape"], [81, 2, 1, "", "rmultiply"], [81, 2, 1, "", "rot90"], [81, 2, 1, "", "row"], [81, 2, 1, "", "row_del"], [81, 2, 1, "", "row_insert"], [81, 2, 1, "", "row_join"], [81, 4, 1, "", "shape"], [81, 2, 1, "", "simplify"], [81, 2, 1, "", "subs"], [81, 2, 1, "", "todod"], [81, 2, 1, "", "todok"], [81, 2, 1, "", "tolist"], [81, 2, 1, "", "trace"], [81, 2, 1, "", "transpose"], [81, 2, 1, "", "upper_triangular"], [81, 2, 1, "", "values"], [81, 2, 1, "", "vec"], [81, 2, 1, "", "vech"], [81, 2, 1, "", "vstack"], [81, 2, 1, "", "wilkinson"], [81, 2, 1, "", "xreplace"], [81, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[82, 1, 1, "", "DenseMatrix"], [86, 3, 1, "", "GramSchmidt"], [82, 5, 1, "", "Matrix"], [82, 1, 1, "", "MutableDenseMatrix"], [86, 3, 1, "", "casoratian"], [86, 3, 1, "", "diag"], [86, 3, 1, "", "eye"], [86, 3, 1, "", "hessian"], [86, 3, 1, "", "jordan_cell"], [86, 3, 1, "", "list2numpy"], [86, 3, 1, "", "matrix2numpy"], [86, 3, 1, "", "matrix_multiply_elementwise"], [86, 3, 1, "", "ones"], [86, 3, 1, "", "randMatrix"], [86, 3, 1, "", "rot_axis1"], [86, 3, 1, "", "rot_axis2"], [86, 3, 1, "", "rot_axis3"], [86, 3, 1, "", "symarray"], [86, 3, 1, "", "wronskian"], [86, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[82, 2, 1, "", "LDLdecomposition"], [82, 2, 1, "", "as_immutable"], [82, 2, 1, "", "as_mutable"], [82, 2, 1, "", "cholesky"], [82, 2, 1, "", "lower_triangular_solve"], [82, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[82, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[83, 1, 1, "", "CompanionMatrix"], [83, 1, 1, "", "FunctionMatrix"], [83, 1, 1, "", "HadamardPower"], [83, 1, 1, "", "HadamardProduct"], [83, 1, 1, "", "Identity"], [83, 1, 1, "", "Inverse"], [83, 1, 1, "", "MatAdd"], [83, 1, 1, "", "MatMul"], [83, 1, 1, "", "MatPow"], [83, 1, 1, "", "MatrixExpr"], [83, 1, 1, "", "MatrixPermute"], [83, 1, 1, "", "MatrixSet"], [83, 1, 1, "", "MatrixSymbol"], [83, 1, 1, "", "PermutationMatrix"], [83, 1, 1, "", "Trace"], [83, 1, 1, "", "Transpose"], [83, 1, 1, "", "ZeroMatrix"], [83, 0, 0, "-", "blockmatrix"]], "sympy.matrices.expressions.MatrixExpr": [[83, 4, 1, "", "T"], [83, 2, 1, "", "as_coeff_Mul"], [83, 2, 1, "", "as_explicit"], [83, 2, 1, "", "as_mutable"], [83, 2, 1, "", "equals"], [83, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[83, 1, 1, "", "BlockDiagMatrix"], [83, 1, 1, "", "BlockMatrix"], [83, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[83, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[83, 2, 1, "", "LDUdecomposition"], [83, 2, 1, "", "LUdecomposition"], [83, 2, 1, "", "UDLdecomposition"], [83, 2, 1, "", "schur"], [83, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[84, 1, 1, "", "ImmutableDenseMatrix"], [84, 5, 1, "", "ImmutableMatrix"], [88, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[86, 1, 1, "", "MatrixBase"], [86, 1, 1, "", "MatrixCalculus"], [86, 1, 1, "", "MatrixDeterminant"], [86, 1, 1, "", "MatrixEigen"], [86, 1, 1, "", "MatrixError"], [86, 1, 1, "", "MatrixReductions"], [86, 1, 1, "", "MatrixSubspaces"], [86, 1, 1, "", "NonSquareMatrixError"], [86, 1, 1, "", "ShapeError"], [86, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[86, 4, 1, "", "D"], [86, 2, 1, "", "LDLdecomposition"], [86, 2, 1, "", "LDLsolve"], [86, 2, 1, "", "LUdecomposition"], [86, 2, 1, "", "LUdecompositionFF"], [86, 2, 1, "", "LUdecomposition_Simple"], [86, 2, 1, "", "LUsolve"], [86, 2, 1, "", "QRdecomposition"], [86, 2, 1, "", "QRsolve"], [86, 2, 1, "", "add"], [86, 2, 1, "", "analytic_func"], [86, 2, 1, "", "cholesky"], [86, 2, 1, "", "cholesky_solve"], [86, 2, 1, "", "condition_number"], [86, 2, 1, "", "connected_components"], [86, 2, 1, "", "connected_components_decomposition"], [86, 2, 1, "", "copy"], [86, 2, 1, "", "cross"], [86, 2, 1, "", "diagonal_solve"], [86, 2, 1, "", "dot"], [86, 2, 1, "", "dual"], [86, 2, 1, "", "exp"], [86, 2, 1, "", "gauss_jordan_solve"], [86, 2, 1, "", "inv"], [86, 2, 1, "", "inv_mod"], [86, 2, 1, "", "inverse_ADJ"], [86, 2, 1, "", "inverse_BLOCK"], [86, 2, 1, "", "inverse_CH"], [86, 2, 1, "", "inverse_GE"], [86, 2, 1, "", "inverse_LDL"], [86, 2, 1, "", "inverse_LU"], [86, 2, 1, "", "inverse_QR"], [86, 2, 1, "", "irregular"], [86, 2, 1, "", "is_nilpotent"], [86, 2, 1, "", "key2bounds"], [86, 2, 1, "", "key2ij"], [86, 2, 1, "", "log"], [86, 2, 1, "", "lower_triangular_solve"], [86, 2, 1, "", "norm"], [86, 2, 1, "", "normalized"], [86, 2, 1, "", "pinv"], [86, 2, 1, "", "pinv_solve"], [86, 2, 1, "", "print_nonzero"], [86, 2, 1, "", "project"], [86, 2, 1, "", "rank_decomposition"], [86, 2, 1, "", "singular_value_decomposition"], [86, 2, 1, "", "solve"], [86, 2, 1, "", "solve_least_squares"], [86, 2, 1, "", "strongly_connected_components"], [86, 2, 1, "", "strongly_connected_components_decomposition"], [86, 2, 1, "", "table"], [86, 2, 1, "", "upper_hessenberg_decomposition"], [86, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[86, 2, 1, "", "diff"], [86, 2, 1, "", "integrate"], [86, 2, 1, "", "jacobian"], [86, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[86, 2, 1, "", "adjugate"], [86, 2, 1, "", "charpoly"], [86, 2, 1, "", "cofactor"], [86, 2, 1, "", "cofactor_matrix"], [86, 2, 1, "", "det"], [86, 2, 1, "", "minor"], [86, 2, 1, "", "minor_submatrix"], [86, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[86, 2, 1, "", "bidiagonal_decomposition"], [86, 2, 1, "", "bidiagonalize"], [86, 2, 1, "", "diagonalize"], [86, 2, 1, "", "eigenvals"], [86, 2, 1, "", "eigenvects"], [86, 2, 1, "", "is_diagonalizable"], [86, 4, 1, "", "is_indefinite"], [86, 4, 1, "", "is_negative_definite"], [86, 4, 1, "", "is_negative_semidefinite"], [86, 4, 1, "", "is_positive_definite"], [86, 4, 1, "", "is_positive_semidefinite"], [86, 2, 1, "", "jordan_form"], [86, 2, 1, "", "left_eigenvects"], [86, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[86, 2, 1, "", "echelon_form"], [86, 2, 1, "", "elementary_col_op"], [86, 2, 1, "", "elementary_row_op"], [86, 4, 1, "", "is_echelon"], [86, 2, 1, "", "rank"], [86, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[86, 2, 1, "", "columnspace"], [86, 2, 1, "", "nullspace"], [86, 2, 1, "", "orthogonalize"], [86, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[87, 3, 1, "", "hermite_normal_form"], [87, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[88, 1, 1, "", "MutableSparseMatrix"], [88, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[89, 2, 1, "", "_csrtodok"], [89, 2, 1, "", "_doktocsr"], [89, 2, 1, "", "banded"]], "sympy.ntheory": [[90, 0, 0, "-", "bbp_pi"], [90, 0, 0, "-", "continued_fraction"], [90, 0, 0, "-", "digits"], [90, 0, 0, "-", "ecm"], [90, 0, 0, "-", "egyptian_fraction"], [90, 0, 0, "-", "factor_"], [90, 0, 0, "-", "generate"], [90, 1, 1, "", "mobius"], [90, 0, 0, "-", "modular"], [90, 0, 0, "-", "multinomial"], [90, 0, 0, "-", "partitions_"], [90, 0, 0, "-", "primetest"], [90, 0, 0, "-", "qs"], [90, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[90, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[90, 3, 1, "", "continued_fraction"], [90, 3, 1, "", "continued_fraction_convergents"], [90, 3, 1, "", "continued_fraction_iterator"], [90, 3, 1, "", "continued_fraction_periodic"], [90, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[90, 3, 1, "", "count_digits"], [90, 3, 1, "", "digits"], [90, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[90, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[90, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[90, 3, 1, "", "abundance"], [90, 3, 1, "", "antidivisor_count"], [90, 3, 1, "", "antidivisors"], [90, 3, 1, "", "core"], [90, 3, 1, "", "digits"], [90, 3, 1, "", "divisor_count"], [90, 1, 1, "", "divisor_sigma"], [90, 3, 1, "", "divisors"], [90, 3, 1, "", "factorint"], [90, 3, 1, "", "factorrat"], [90, 3, 1, "", "is_abundant"], [90, 3, 1, "", "is_amicable"], [90, 3, 1, "", "is_deficient"], [90, 3, 1, "", "is_mersenne_prime"], [90, 3, 1, "", "is_perfect"], [90, 3, 1, "", "mersenne_prime_exponent"], [90, 3, 1, "", "multiplicity"], [90, 3, 1, "", "perfect_power"], [90, 3, 1, "", "pollard_pm1"], [90, 3, 1, "", "pollard_rho"], [90, 3, 1, "", "primefactors"], [90, 1, 1, "", "primenu"], [90, 1, 1, "", "primeomega"], [90, 3, 1, "", "proper_divisor_count"], [90, 3, 1, "", "proper_divisors"], [90, 1, 1, "", "reduced_totient"], [90, 3, 1, "", "smoothness"], [90, 3, 1, "", "smoothness_p"], [90, 1, 1, "", "totient"], [90, 3, 1, "", "trailing"], [90, 3, 1, "", "udivisor_count"], [90, 1, 1, "", "udivisor_sigma"], [90, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[90, 1, 1, "", "Sieve"], [90, 3, 1, "", "composite"], [90, 3, 1, "", "compositepi"], [90, 3, 1, "", "cycle_length"], [90, 3, 1, "", "nextprime"], [90, 3, 1, "", "prevprime"], [90, 3, 1, "", "prime"], [90, 3, 1, "", "primepi"], [90, 3, 1, "", "primerange"], [90, 3, 1, "", "primorial"], [90, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[90, 2, 1, "", "extend"], [90, 2, 1, "", "extend_to_no"], [90, 2, 1, "", "mobiusrange"], [90, 2, 1, "", "primerange"], [90, 2, 1, "", "search"], [90, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[90, 3, 1, "", "crt"], [90, 3, 1, "", "crt1"], [90, 3, 1, "", "crt2"], [90, 3, 1, "", "solve_congruence"], [90, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[90, 3, 1, "", "binomial_coefficients"], [90, 3, 1, "", "binomial_coefficients_list"], [90, 3, 1, "", "multinomial_coefficients"], [90, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[90, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[90, 3, 1, "", "is_euler_pseudoprime"], [90, 3, 1, "", "is_extra_strong_lucas_prp"], [90, 3, 1, "", "is_gaussian_prime"], [90, 3, 1, "", "is_lucas_prp"], [90, 3, 1, "", "is_square"], [90, 3, 1, "", "is_strong_lucas_prp"], [90, 3, 1, "", "isprime"], [90, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[90, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[90, 3, 1, "", "discrete_log"], [90, 3, 1, "", "is_nthpow_residue"], [90, 3, 1, "", "is_primitive_root"], [90, 3, 1, "", "is_quad_residue"], [90, 3, 1, "", "jacobi_symbol"], [90, 3, 1, "", "legendre_symbol"], [90, 3, 1, "", "n_order"], [90, 3, 1, "", "nthroot_mod"], [90, 3, 1, "", "primitive_root"], [90, 3, 1, "", "quadratic_residues"], [90, 3, 1, "", "sqrt_mod"], [90, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[92, 1, 1, "", "LaTeXParsingError"], [92, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[92, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[92, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[92, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[92, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[92, 2, 1, "", "convert_to_c"], [92, 2, 1, "", "convert_to_expr"], [92, 2, 1, "", "convert_to_fortran"], [92, 2, 1, "", "convert_to_python"], [92, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[92, 3, 1, "", "auto_number"], [92, 3, 1, "", "auto_symbol"], [92, 3, 1, "", "convert_xor"], [92, 3, 1, "", "eval_expr"], [92, 3, 1, "", "factorial_notation"], [92, 3, 1, "", "function_exponentiation"], [92, 3, 1, "", "implicit_application"], [92, 3, 1, "", "implicit_multiplication"], [92, 3, 1, "", "implicit_multiplication_application"], [92, 3, 1, "", "lambda_notation"], [92, 3, 1, "", "parse_expr"], [92, 3, 1, "", "rationalize"], [92, 3, 1, "", "repeated_decimals"], [92, 3, 1, "", "split_symbols"], [92, 3, 1, "", "split_symbols_custom"], [92, 6, 1, "", "standard_transformations"], [92, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[93, 0, 0, "-", "beam"]], "sympy.physics.continuum_mechanics.beam": [[93, 1, 1, "", "Beam"], [93, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[93, 4, 1, "", "applied_loads"], [93, 2, 1, "", "apply_load"], [93, 2, 1, "", "apply_support"], [93, 4, 1, "", "area"], [93, 2, 1, "", "bending_moment"], [93, 4, 1, "", "boundary_conditions"], [93, 4, 1, "", "cross_section"], [93, 2, 1, "", "deflection"], [93, 2, 1, "", "draw"], [93, 4, 1, "", "elastic_modulus"], [93, 4, 1, "", "ild_moment"], [93, 4, 1, "", "ild_reactions"], [93, 4, 1, "", "ild_shear"], [93, 2, 1, "", "join"], [93, 4, 1, "", "length"], [93, 4, 1, "", "load"], [93, 2, 1, "", "max_bmoment"], [93, 2, 1, "", "max_deflection"], [93, 2, 1, "", "max_shear_force"], [93, 2, 1, "", "plot_bending_moment"], [93, 2, 1, "", "plot_deflection"], [93, 2, 1, "", "plot_ild_moment"], [93, 2, 1, "", "plot_ild_reactions"], [93, 2, 1, "", "plot_ild_shear"], [93, 2, 1, "", "plot_loading_results"], [93, 2, 1, "", "plot_shear_force"], [93, 2, 1, "", "plot_shear_stress"], [93, 2, 1, "", "plot_slope"], [93, 2, 1, "", "point_cflexure"], [93, 4, 1, "", "reaction_loads"], [93, 2, 1, "", "remove_load"], [93, 4, 1, "", "second_moment"], [93, 2, 1, "", "shear_force"], [93, 2, 1, "", "shear_stress"], [93, 2, 1, "", "slope"], [93, 2, 1, "", "solve_for_ild_moment"], [93, 2, 1, "", "solve_for_ild_reactions"], [93, 2, 1, "", "solve_for_ild_shear"], [93, 2, 1, "", "solve_for_reaction_loads"], [93, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[93, 2, 1, "", "apply_load"], [93, 2, 1, "", "apply_moment_load"], [93, 4, 1, "", "area"], [93, 2, 1, "", "axial_force"], [93, 2, 1, "", "axial_stress"], [93, 2, 1, "", "bending_moment"], [93, 4, 1, "", "boundary_conditions"], [93, 2, 1, "", "deflection"], [93, 4, 1, "", "load_vector"], [93, 2, 1, "", "max_bending_moment"], [93, 2, 1, "", "max_bmoment"], [93, 2, 1, "", "max_deflection"], [93, 2, 1, "", "max_shear_force"], [93, 4, 1, "", "moment_load_vector"], [93, 2, 1, "", "plot_bending_moment"], [93, 2, 1, "", "plot_deflection"], [93, 2, 1, "", "plot_loading_results"], [93, 2, 1, "", "plot_shear_force"], [93, 2, 1, "", "plot_shear_stress"], [93, 2, 1, "", "plot_slope"], [93, 2, 1, "", "polar_moment"], [93, 4, 1, "", "second_moment"], [93, 2, 1, "", "shear_force"], [93, 4, 1, "", "shear_modulus"], [93, 2, 1, "", "shear_stress"], [93, 2, 1, "", "slope"], [93, 2, 1, "", "solve_for_reaction_loads"], [93, 2, 1, "", "torsional_moment"]], "sympy.physics": [[98, 0, 0, "-", "control"], [101, 0, 0, "-", "hydrogen"], [102, 0, 0, "-", "matrices"], [121, 0, 0, "-", "mechanics"], [135, 0, 0, "-", "paulialgebra"], [136, 0, 0, "-", "qho_1d"], [160, 0, 0, "-", "secondquant"], [161, 0, 0, "-", "sho"], [176, 0, 0, "-", "vector"], [179, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[97, 2, 1, "", "bode_magnitude_numerical_data"], [97, 2, 1, "", "bode_magnitude_plot"], [97, 2, 1, "", "bode_phase_numerical_data"], [97, 2, 1, "", "bode_phase_plot"], [97, 2, 1, "", "bode_plot"], [97, 2, 1, "", "impulse_response_numerical_data"], [97, 2, 1, "", "impulse_response_plot"], [97, 2, 1, "", "pole_zero_numerical_data"], [97, 2, 1, "", "pole_zero_plot"], [97, 2, 1, "", "ramp_response_numerical_data"], [97, 2, 1, "", "ramp_response_plot"], [97, 2, 1, "", "step_response_numerical_data"], [97, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[99, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[99, 1, 1, "", "Feedback"], [99, 1, 1, "", "MIMOFeedback"], [99, 1, 1, "", "MIMOParallel"], [99, 1, 1, "", "MIMOSeries"], [99, 1, 1, "", "Parallel"], [99, 1, 1, "", "Series"], [99, 1, 1, "", "TransferFunction"], [99, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[99, 2, 1, "", "doit"], [99, 4, 1, "", "sensitivity"], [99, 4, 1, "", "sign"], [99, 4, 1, "", "sys1"], [99, 4, 1, "", "sys2"], [99, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[99, 2, 1, "", "doit"], [99, 4, 1, "", "sensitivity"], [99, 4, 1, "", "sign"], [99, 4, 1, "", "sys1"], [99, 4, 1, "", "sys2"], [99, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[99, 2, 1, "", "doit"], [99, 4, 1, "", "num_inputs"], [99, 4, 1, "", "num_outputs"], [99, 4, 1, "", "shape"], [99, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[99, 2, 1, "", "doit"], [99, 4, 1, "", "num_inputs"], [99, 4, 1, "", "num_outputs"], [99, 4, 1, "", "shape"], [99, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[99, 2, 1, "", "doit"], [99, 4, 1, "", "is_biproper"], [99, 4, 1, "", "is_proper"], [99, 4, 1, "", "is_strictly_proper"], [99, 2, 1, "", "to_expr"], [99, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[99, 2, 1, "", "doit"], [99, 4, 1, "", "is_biproper"], [99, 4, 1, "", "is_proper"], [99, 4, 1, "", "is_strictly_proper"], [99, 2, 1, "", "to_expr"], [99, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[99, 2, 1, "", "dc_gain"], [99, 4, 1, "", "den"], [99, 2, 1, "", "expand"], [99, 2, 1, "", "from_rational_expression"], [99, 4, 1, "", "is_biproper"], [99, 4, 1, "", "is_proper"], [99, 2, 1, "", "is_stable"], [99, 4, 1, "", "is_strictly_proper"], [99, 4, 1, "", "num"], [99, 2, 1, "", "poles"], [99, 2, 1, "", "to_expr"], [99, 4, 1, "", "var"], [99, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[99, 2, 1, "", "elem_poles"], [99, 2, 1, "", "elem_zeros"], [99, 2, 1, "", "expand"], [99, 2, 1, "", "from_Matrix"], [99, 4, 1, "", "num_inputs"], [99, 4, 1, "", "num_outputs"], [99, 4, 1, "", "shape"], [99, 2, 1, "", "transpose"], [99, 4, 1, "", "var"]], "sympy.physics.hep": [[100, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[100, 3, 1, "", "extract_type_tens"], [100, 3, 1, "", "gamma_trace"], [100, 3, 1, "", "kahane_simplify"], [100, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[101, 3, 1, "", "E_nl"], [101, 3, 1, "", "E_nl_dirac"], [101, 3, 1, "", "Psi_nlm"], [101, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[102, 3, 1, "", "mdft"], [102, 3, 1, "", "mgamma"], [102, 3, 1, "", "msigma"], [102, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[104, 0, 0, "-", "body"], [105, 3, 1, "", "find_dynamicsymbols"], [106, 0, 0, "-", "joint"], [107, 0, 0, "-", "kane"], [107, 0, 0, "-", "lagrange"], [108, 0, 0, "-", "linearize"], [105, 3, 1, "", "msubs"], [109, 0, 0, "-", "particle"], [109, 0, 0, "-", "rigidbody"], [111, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[104, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[104, 2, 1, "", "ang_vel_in"], [104, 2, 1, "", "apply_force"], [104, 2, 1, "", "apply_torque"], [104, 2, 1, "", "clear_loads"], [104, 2, 1, "", "dcm"], [104, 2, 1, "", "kinetic_energy"], [104, 2, 1, "", "masscenter_vel"], [104, 2, 1, "", "remove_load"], [104, 4, 1, "", "x"], [104, 4, 1, "", "y"], [104, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[109, 3, 1, "", "Lagrangian"], [109, 3, 1, "", "angular_momentum"], [109, 3, 1, "", "inertia"], [109, 3, 1, "", "inertia_of_point_mass"], [109, 3, 1, "", "kinetic_energy"], [109, 3, 1, "", "linear_momentum"], [109, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[106, 1, 1, "", "Joint"], [106, 1, 1, "", "PinJoint"], [106, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[106, 4, 1, "", "child"], [106, 4, 1, "", "child_axis"], [106, 4, 1, "", "child_point"], [106, 4, 1, "", "coordinates"], [106, 4, 1, "", "kdes"], [106, 4, 1, "", "parent"], [106, 4, 1, "", "parent_axis"], [106, 4, 1, "", "parent_point"], [106, 4, 1, "", "speeds"]], "sympy.physics.mechanics.kane": [[107, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[107, 4, 1, "", "auxiliary_eqs"], [107, 4, 1, "", "forcing"], [107, 4, 1, "", "forcing_full"], [107, 2, 1, "", "kanes_equations"], [107, 2, 1, "", "kindiffdict"], [107, 2, 1, "", "linearize"], [107, 4, 1, "", "mass_matrix"], [107, 4, 1, "", "mass_matrix_full"], [107, 2, 1, "", "rhs"], [107, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[107, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[107, 4, 1, "", "forcing"], [107, 4, 1, "", "forcing_full"], [107, 2, 1, "", "form_lagranges_equations"], [107, 2, 1, "", "linearize"], [107, 4, 1, "", "mass_matrix"], [107, 4, 1, "", "mass_matrix_full"], [107, 2, 1, "", "rhs"], [107, 2, 1, "", "solve_multipliers"], [107, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[108, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[108, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[109, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[109, 2, 1, "", "angular_momentum"], [109, 2, 1, "", "kinetic_energy"], [109, 2, 1, "", "linear_momentum"], [109, 4, 1, "", "mass"], [109, 2, 1, "", "parallel_axis"], [109, 4, 1, "", "point"], [109, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[109, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[109, 2, 1, "", "angular_momentum"], [109, 4, 1, "", "central_inertia"], [109, 2, 1, "", "kinetic_energy"], [109, 2, 1, "", "linear_momentum"], [109, 2, 1, "", "parallel_axis"], [109, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[111, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[111, 4, 1, "", "alg_con"], [111, 4, 1, "", "bodies"], [111, 4, 1, "", "comb_explicit_rhs"], [111, 4, 1, "", "comb_implicit_mat"], [111, 4, 1, "", "comb_implicit_rhs"], [111, 2, 1, "", "compute_explicit_form"], [111, 2, 1, "", "constant_symbols"], [111, 4, 1, "", "coordinates"], [111, 4, 1, "", "dyn_implicit_mat"], [111, 4, 1, "", "dyn_implicit_rhs"], [111, 2, 1, "", "dynamic_symbols"], [111, 4, 1, "", "kin_explicit_rhs"], [111, 4, 1, "", "loads"], [111, 4, 1, "", "speeds"], [111, 4, 1, "", "states"]], "sympy.physics.optics": [[129, 0, 0, "-", "gaussopt"], [131, 0, 0, "-", "medium"], [132, 0, 0, "-", "polarization"], [133, 0, 0, "-", "utils"], [134, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[129, 1, 1, "", "BeamParameter"], [129, 1, 1, "", "CurvedMirror"], [129, 1, 1, "", "CurvedRefraction"], [129, 1, 1, "", "FlatMirror"], [129, 1, 1, "", "FlatRefraction"], [129, 1, 1, "", "FreeSpace"], [129, 1, 1, "", "GeometricRay"], [129, 1, 1, "", "RayTransferMatrix"], [129, 1, 1, "", "ThinLens"], [129, 3, 1, "", "conjugate_gauss_beams"], [129, 3, 1, "", "gaussian_conj"], [129, 3, 1, "", "geometric_conj_ab"], [129, 3, 1, "", "geometric_conj_af"], [129, 3, 1, "", "geometric_conj_bf"], [129, 3, 1, "", "rayleigh2waist"], [129, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[129, 4, 1, "", "divergence"], [129, 4, 1, "", "gouy"], [129, 4, 1, "", "q"], [129, 4, 1, "", "radius"], [129, 4, 1, "", "w"], [129, 4, 1, "", "w_0"], [129, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[129, 4, 1, "", "angle"], [129, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[129, 4, 1, "", "A"], [129, 4, 1, "", "B"], [129, 4, 1, "", "C"], [129, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[131, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[131, 4, 1, "", "refractive_index"], [131, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[132, 3, 1, "", "half_wave_retarder"], [132, 3, 1, "", "jones_2_stokes"], [132, 3, 1, "", "jones_vector"], [132, 3, 1, "", "linear_polarizer"], [132, 3, 1, "", "mueller_matrix"], [132, 3, 1, "", "phase_retarder"], [132, 3, 1, "", "polarizing_beam_splitter"], [132, 3, 1, "", "quarter_wave_retarder"], [132, 3, 1, "", "reflective_filter"], [132, 3, 1, "", "stokes_vector"], [132, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[133, 3, 1, "", "brewster_angle"], [133, 3, 1, "", "critical_angle"], [133, 3, 1, "", "deviation"], [133, 3, 1, "", "fresnel_coefficients"], [133, 3, 1, "", "hyperfocal_distance"], [133, 3, 1, "", "lens_formula"], [133, 3, 1, "", "lens_makers_formula"], [133, 3, 1, "", "mirror_formula"], [133, 3, 1, "", "refraction_angle"], [133, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[134, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[134, 4, 1, "", "amplitude"], [134, 4, 1, "", "angular_velocity"], [134, 4, 1, "", "frequency"], [134, 4, 1, "", "n"], [134, 4, 1, "", "phase"], [134, 4, 1, "", "speed"], [134, 4, 1, "", "time_period"], [134, 4, 1, "", "wavelength"], [134, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[135, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[136, 3, 1, "", "E_n"], [136, 3, 1, "", "coherent_state"], [136, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[137, 0, 0, "-", "anticommutator"], [138, 0, 0, "-", "cartesian"], [139, 0, 0, "-", "cg"], [140, 0, 0, "-", "circuitplot"], [141, 0, 0, "-", "commutator"], [142, 0, 0, "-", "constants"], [143, 0, 0, "-", "dagger"], [144, 0, 0, "-", "gate"], [145, 0, 0, "-", "grover"], [146, 0, 0, "-", "hilbert"], [148, 0, 0, "-", "innerproduct"], [149, 0, 0, "-", "operator"], [150, 0, 0, "-", "operatorset"], [151, 0, 0, "-", "piab"], [152, 0, 0, "-", "qapply"], [153, 0, 0, "-", "qft"], [154, 0, 0, "-", "qubit"], [155, 0, 0, "-", "represent"], [156, 0, 0, "-", "shor"], [157, 0, 0, "-", "spin"], [158, 0, 0, "-", "state"], [159, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[137, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[137, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[138, 1, 1, "", "PositionBra3D"], [138, 1, 1, "", "PositionKet3D"], [138, 1, 1, "", "PositionState3D"], [138, 1, 1, "", "PxBra"], [138, 1, 1, "", "PxKet"], [138, 1, 1, "", "PxOp"], [138, 1, 1, "", "XBra"], [138, 1, 1, "", "XKet"], [138, 1, 1, "", "XOp"], [138, 1, 1, "", "YOp"], [138, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[138, 4, 1, "", "position_x"], [138, 4, 1, "", "position_y"], [138, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[138, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[138, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[138, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[138, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[139, 1, 1, "", "CG"], [139, 1, 1, "", "Wigner3j"], [139, 1, 1, "", "Wigner6j"], [139, 1, 1, "", "Wigner9j"], [139, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[140, 1, 1, "", "CircuitPlot"], [140, 3, 1, "", "CreateCGate"], [140, 1, 1, "", "Mx"], [140, 1, 1, "", "Mz"], [140, 3, 1, "", "circuit_plot"], [140, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[140, 2, 1, "", "control_line"], [140, 2, 1, "", "control_point"], [140, 2, 1, "", "not_point"], [140, 2, 1, "", "one_qubit_box"], [140, 2, 1, "", "swap_point"], [140, 2, 1, "", "two_qubit_box"], [140, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[141, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[141, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[142, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[143, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[144, 1, 1, "", "CGate"], [144, 1, 1, "", "CGateS"], [144, 5, 1, "", "CNOT"], [144, 1, 1, "", "CNotGate"], [144, 1, 1, "", "Gate"], [144, 5, 1, "", "H"], [144, 1, 1, "", "HadamardGate"], [144, 1, 1, "", "IdentityGate"], [144, 1, 1, "", "OneQubitGate"], [144, 5, 1, "", "Phase"], [144, 1, 1, "", "PhaseGate"], [144, 5, 1, "", "S"], [144, 5, 1, "", "SWAP"], [144, 1, 1, "", "SwapGate"], [144, 5, 1, "", "T"], [144, 1, 1, "", "TGate"], [144, 1, 1, "", "TwoQubitGate"], [144, 1, 1, "", "UGate"], [144, 5, 1, "", "X"], [144, 1, 1, "", "XGate"], [144, 5, 1, "", "Y"], [144, 1, 1, "", "YGate"], [144, 5, 1, "", "Z"], [144, 1, 1, "", "ZGate"], [144, 3, 1, "", "gate_simp"], [144, 3, 1, "", "gate_sort"], [144, 3, 1, "", "normalized"], [144, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[144, 4, 1, "", "controls"], [144, 2, 1, "", "decompose"], [144, 2, 1, "", "eval_controls"], [144, 4, 1, "", "gate"], [144, 4, 1, "", "min_qubits"], [144, 4, 1, "", "nqubits"], [144, 2, 1, "", "plot_gate"], [144, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[144, 4, 1, "", "controls"], [144, 4, 1, "", "gate"], [144, 4, 1, "", "min_qubits"], [144, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[144, 2, 1, "", "get_target_matrix"], [144, 4, 1, "", "min_qubits"], [144, 4, 1, "", "nqubits"], [144, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[144, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[144, 2, 1, "", "get_target_matrix"], [144, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[145, 1, 1, "", "OracleGate"], [145, 1, 1, "", "WGate"], [145, 3, 1, "", "apply_grover"], [145, 3, 1, "", "grover_iteration"], [145, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[145, 4, 1, "", "search_function"], [145, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[146, 1, 1, "", "ComplexSpace"], [146, 1, 1, "", "DirectSumHilbertSpace"], [146, 1, 1, "", "FockSpace"], [146, 1, 1, "", "HilbertSpace"], [146, 1, 1, "", "L2"], [146, 1, 1, "", "TensorPowerHilbertSpace"], [146, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[146, 2, 1, "", "eval"], [146, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[146, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[146, 2, 1, "", "eval"], [146, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[148, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[149, 1, 1, "", "DifferentialOperator"], [149, 1, 1, "", "HermitianOperator"], [149, 1, 1, "", "IdentityOperator"], [149, 1, 1, "", "Operator"], [149, 1, 1, "", "OuterProduct"], [149, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[149, 4, 1, "", "expr"], [149, 4, 1, "", "free_symbols"], [149, 4, 1, "", "function"], [149, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[149, 4, 1, "", "bra"], [149, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[150, 3, 1, "", "operators_to_state"], [150, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[151, 1, 1, "", "PIABBra"], [151, 1, 1, "", "PIABHamiltonian"], [151, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[152, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[153, 1, 1, "", "IQFT"], [153, 1, 1, "", "QFT"], [153, 5, 1, "", "Rk"], [153, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[153, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[153, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[154, 1, 1, "", "IntQubit"], [154, 1, 1, "", "IntQubitBra"], [154, 1, 1, "", "Qubit"], [154, 1, 1, "", "QubitBra"], [154, 3, 1, "", "matrix_to_density"], [154, 3, 1, "", "matrix_to_qubit"], [154, 3, 1, "", "measure_all"], [154, 3, 1, "", "measure_all_oneshot"], [154, 3, 1, "", "measure_partial"], [154, 3, 1, "", "measure_partial_oneshot"], [154, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[155, 3, 1, "", "enumerate_states"], [155, 3, 1, "", "get_basis"], [155, 3, 1, "", "integrate_result"], [155, 3, 1, "", "rep_expectation"], [155, 3, 1, "", "rep_innerproduct"], [155, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[156, 1, 1, "", "CMod"], [156, 3, 1, "", "period_find"], [156, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[156, 4, 1, "", "N"], [156, 4, 1, "", "a"], [156, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[157, 1, 1, "", "J2Op"], [157, 1, 1, "", "JxBra"], [157, 1, 1, "", "JxBraCoupled"], [157, 1, 1, "", "JxKet"], [157, 1, 1, "", "JxKetCoupled"], [157, 1, 1, "", "JyBra"], [157, 1, 1, "", "JyBraCoupled"], [157, 1, 1, "", "JyKet"], [157, 1, 1, "", "JyKetCoupled"], [157, 1, 1, "", "JzBra"], [157, 1, 1, "", "JzBraCoupled"], [157, 1, 1, "", "JzKet"], [157, 1, 1, "", "JzKetCoupled"], [157, 1, 1, "", "JzOp"], [157, 1, 1, "", "Rotation"], [157, 1, 1, "", "WignerD"], [157, 3, 1, "", "couple"], [157, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[157, 2, 1, "", "D"], [157, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[158, 1, 1, "", "Bra"], [158, 1, 1, "", "BraBase"], [158, 1, 1, "", "Ket"], [158, 1, 1, "", "KetBase"], [158, 1, 1, "", "OrthogonalBra"], [158, 1, 1, "", "OrthogonalKet"], [158, 1, 1, "", "OrthogonalState"], [158, 1, 1, "", "State"], [158, 1, 1, "", "StateBase"], [158, 1, 1, "", "TimeDepBra"], [158, 1, 1, "", "TimeDepKet"], [158, 1, 1, "", "TimeDepState"], [158, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[158, 4, 1, "", "dual"], [158, 2, 1, "", "dual_class"], [158, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[158, 4, 1, "", "label"], [158, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[158, 4, 1, "", "expr"], [158, 4, 1, "", "is_commutative"], [158, 4, 1, "", "is_normalized"], [158, 4, 1, "", "limits"], [158, 4, 1, "", "norm"], [158, 2, 1, "", "normalize"], [158, 2, 1, "", "prob"], [158, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[159, 1, 1, "", "TensorProduct"], [159, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[160, 1, 1, "", "AnnihilateBoson"], [160, 1, 1, "", "AnnihilateFermion"], [160, 1, 1, "", "AntiSymmetricTensor"], [160, 5, 1, "", "B"], [160, 5, 1, "", "BBra"], [160, 5, 1, "", "BKet"], [160, 5, 1, "", "Bd"], [160, 1, 1, "", "BosonicBasis"], [160, 1, 1, "", "Commutator"], [160, 1, 1, "", "CreateBoson"], [160, 1, 1, "", "CreateFermion"], [160, 1, 1, "", "Dagger"], [160, 5, 1, "", "F"], [160, 5, 1, "", "FBra"], [160, 5, 1, "", "FKet"], [160, 5, 1, "", "Fd"], [160, 1, 1, "", "FixedBosonicBasis"], [160, 1, 1, "", "FockState"], [160, 1, 1, "", "FockStateBosonBra"], [160, 1, 1, "", "FockStateBosonKet"], [160, 1, 1, "", "FockStateBra"], [160, 1, 1, "", "FockStateFermionBra"], [160, 1, 1, "", "FockStateFermionKet"], [160, 1, 1, "", "FockStateKet"], [160, 1, 1, "", "InnerProduct"], [160, 1, 1, "", "KroneckerDelta"], [160, 1, 1, "", "NO"], [160, 1, 1, "", "PermutationOperator"], [160, 1, 1, "", "VarBosonicBasis"], [160, 3, 1, "", "apply_operators"], [160, 3, 1, "", "contraction"], [160, 3, 1, "", "evaluate_deltas"], [160, 3, 1, "", "matrix_rep"], [160, 3, 1, "", "simplify_index_permutations"], [160, 3, 1, "", "substitute_dummies"], [160, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[160, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[160, 2, 1, "", "apply_operator"], [160, 4, 1, "", "is_only_q_annihilator"], [160, 4, 1, "", "is_only_q_creator"], [160, 4, 1, "", "is_q_annihilator"], [160, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[160, 2, 1, "", "doit"], [160, 4, 1, "", "lower"], [160, 4, 1, "", "symbol"], [160, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[160, 2, 1, "", "doit"], [160, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[160, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[160, 2, 1, "", "apply_operator"], [160, 4, 1, "", "is_only_q_annihilator"], [160, 4, 1, "", "is_only_q_creator"], [160, 4, 1, "", "is_q_annihilator"], [160, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[160, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[160, 2, 1, "", "index"], [160, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[160, 4, 1, "", "bra"], [160, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[160, 2, 1, "", "eval"], [160, 4, 1, "", "indices_contain_equal_information"], [160, 4, 1, "", "is_above_fermi"], [160, 4, 1, "", "is_below_fermi"], [160, 4, 1, "", "is_only_above_fermi"], [160, 4, 1, "", "is_only_below_fermi"], [160, 4, 1, "", "killable_index"], [160, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[160, 2, 1, "", "doit"], [160, 2, 1, "", "get_subNO"], [160, 4, 1, "", "has_q_annihilators"], [160, 4, 1, "", "has_q_creators"], [160, 2, 1, "", "iter_q_annihilators"], [160, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[160, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[160, 2, 1, "", "index"], [160, 2, 1, "", "state"]], "sympy.physics.sho": [[161, 3, 1, "", "E_nl"], [161, 3, 1, "", "R_nl"]], "sympy.physics.units": [[162, 0, 0, "-", "dimensions"], [166, 0, 0, "-", "prefixes"], [167, 0, 0, "-", "quantities"], [168, 0, 0, "-", "unitsystem"], [167, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[162, 1, 1, "", "Dimension"], [162, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[162, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[162, 4, 1, "", "can_transf_matrix"], [162, 4, 1, "", "dim"], [162, 2, 1, "", "dim_can_vector"], [162, 2, 1, "", "dim_vector"], [162, 4, 1, "", "inv_can_transf_matrix"], [162, 4, 1, "", "is_consistent"], [162, 2, 1, "", "is_dimensionless"], [162, 4, 1, "", "list_can_dims"], [162, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[166, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[167, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[167, 4, 1, "", "abbrev"], [167, 2, 1, "", "convert_to"], [167, 4, 1, "", "free_symbols"], [167, 4, 1, "", "is_prefixed"], [167, 4, 1, "", "scale_factor"], [167, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[168, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[168, 4, 1, "", "dim"], [168, 2, 1, "", "extend"], [168, 2, 1, "", "get_units_non_prefixed"], [168, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[167, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[170, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[170, 2, 1, "", "applyfunc"], [170, 2, 1, "", "cross"], [170, 2, 1, "", "doit"], [170, 2, 1, "", "dot"], [170, 2, 1, "", "dt"], [170, 2, 1, "", "express"], [170, 4, 1, "", "func"], [170, 2, 1, "", "simplify"], [170, 2, 1, "", "subs"], [170, 2, 1, "", "to_matrix"], [170, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[172, 3, 1, "", "dynamicsymbols"], [173, 0, 0, "-", "functions"], [173, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[171, 3, 1, "", "curl"], [171, 3, 1, "", "divergence"], [171, 3, 1, "", "gradient"], [171, 3, 1, "", "is_conservative"], [171, 3, 1, "", "is_solenoidal"], [171, 3, 1, "", "scalar_potential"], [171, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[170, 1, 1, "", "CoordinateSym"], [170, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[170, 2, 1, "", "ang_acc_in"], [170, 2, 1, "", "ang_vel_in"], [170, 2, 1, "", "dcm"], [170, 2, 1, "", "orient"], [170, 2, 1, "", "orient_axis"], [170, 2, 1, "", "orient_body_fixed"], [170, 2, 1, "", "orient_explicit"], [170, 2, 1, "", "orient_quaternion"], [170, 2, 1, "", "orient_space_fixed"], [170, 2, 1, "", "orientnew"], [170, 2, 1, "", "partial_velocity"], [170, 2, 1, "", "set_ang_acc"], [170, 2, 1, "", "set_ang_vel"], [170, 2, 1, "", "variable_map"], [170, 4, 1, "", "x"], [170, 4, 1, "", "y"], [170, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[172, 3, 1, "", "cross"], [172, 3, 1, "", "dot"], [172, 3, 1, "", "express"], [173, 3, 1, "", "get_motion_params"], [173, 3, 1, "", "kinematic_equations"], [172, 3, 1, "", "outer"], [173, 3, 1, "", "partial_velocity"], [172, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[173, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[173, 2, 1, "", "a1pt_theory"], [173, 2, 1, "", "a2pt_theory"], [173, 2, 1, "", "acc"], [173, 2, 1, "", "locatenew"], [173, 2, 1, "", "partial_velocity"], [173, 2, 1, "", "pos_from"], [173, 2, 1, "", "set_acc"], [173, 2, 1, "", "set_pos"], [173, 2, 1, "", "set_vel"], [173, 2, 1, "", "v1pt_theory"], [173, 2, 1, "", "v2pt_theory"], [173, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[174, 3, 1, "", "init_vprinting"], [174, 3, 1, "", "vlatex"], [174, 3, 1, "", "vpprint"], [174, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[170, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[170, 2, 1, "", "angle_between"], [170, 2, 1, "", "applyfunc"], [170, 2, 1, "", "cross"], [170, 2, 1, "", "diff"], [170, 2, 1, "", "doit"], [170, 2, 1, "", "dot"], [170, 2, 1, "", "dt"], [170, 2, 1, "", "express"], [170, 2, 1, "", "free_dynamicsymbols"], [170, 2, 1, "", "free_symbols"], [170, 4, 1, "", "func"], [170, 2, 1, "", "magnitude"], [170, 2, 1, "", "normalize"], [170, 2, 1, "", "outer"], [170, 2, 1, "", "separate"], [170, 2, 1, "", "simplify"], [170, 2, 1, "", "subs"], [170, 2, 1, "", "to_matrix"], [170, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[179, 3, 1, "", "clebsch_gordan"], [179, 3, 1, "", "dot_rot_grad_Ynm"], [179, 3, 1, "", "gaunt"], [179, 3, 1, "", "racah"], [179, 3, 1, "", "wigner_3j"], [179, 3, 1, "", "wigner_6j"], [179, 3, 1, "", "wigner_9j"], [179, 3, 1, "", "wigner_d"], [179, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[180, 0, 0, "-", "plot"], [180, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[180, 1, 1, "", "BaseBackend"], [180, 1, 1, "", "BaseSeries"], [180, 1, 1, "", "Line2DBaseSeries"], [180, 1, 1, "", "Line3DBaseSeries"], [180, 1, 1, "", "LineOver1DRangeSeries"], [180, 1, 1, "", "MatplotlibBackend"], [180, 1, 1, "", "Parametric2DLineSeries"], [180, 1, 1, "", "Parametric3DLineSeries"], [180, 1, 1, "", "ParametricSurfaceSeries"], [180, 1, 1, "", "Plot"], [180, 1, 1, "", "PlotGrid"], [180, 1, 1, "", "SurfaceBaseSeries"], [180, 1, 1, "", "SurfaceOver2DRangeSeries"], [180, 1, 1, "", "TextBackend"], [180, 3, 1, "", "plot"], [180, 3, 1, "", "plot3d"], [180, 3, 1, "", "plot3d_parametric_line"], [180, 3, 1, "", "plot3d_parametric_surface"], [180, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[180, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[180, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[180, 2, 1, "", "get_segments"], [180, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[180, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[180, 2, 1, "", "append"], [180, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[180, 1, 1, "", "ImplicitSeries"], [180, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[180, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[181, 1, 1, "", "ExtensionElement"], [181, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[181, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[181, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[181, 1, 1, "", "ModuleHomomorphism"], [181, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[181, 2, 1, "", "image"], [181, 2, 1, "", "is_injective"], [181, 2, 1, "", "is_isomorphism"], [181, 2, 1, "", "is_surjective"], [181, 2, 1, "", "is_zero"], [181, 2, 1, "", "kernel"], [181, 2, 1, "", "quotient_codomain"], [181, 2, 1, "", "quotient_domain"], [181, 2, 1, "", "restrict_codomain"], [181, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[181, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[181, 2, 1, "", "contains"], [181, 2, 1, "", "depth"], [181, 2, 1, "", "height"], [181, 2, 1, "", "intersect"], [181, 2, 1, "", "is_maximal"], [181, 2, 1, "", "is_primary"], [181, 2, 1, "", "is_prime"], [181, 2, 1, "", "is_principal"], [181, 2, 1, "", "is_radical"], [181, 2, 1, "", "is_whole_ring"], [181, 2, 1, "", "is_zero"], [181, 2, 1, "", "product"], [181, 2, 1, "", "quotient"], [181, 2, 1, "", "radical"], [181, 2, 1, "", "reduce_element"], [181, 2, 1, "", "saturate"], [181, 2, 1, "", "subset"], [181, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[181, 1, 1, "", "FreeModule"], [181, 1, 1, "", "FreeModuleElement"], [181, 1, 1, "", "Module"], [181, 1, 1, "", "QuotientModule"], [181, 1, 1, "", "QuotientModuleElement"], [181, 1, 1, "", "SubModule"], [181, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[181, 2, 1, "", "basis"], [181, 2, 1, "", "convert"], [181, 5, 1, "", "dtype"], [181, 2, 1, "", "identity_hom"], [181, 2, 1, "", "is_submodule"], [181, 2, 1, "", "is_zero"], [181, 2, 1, "", "multiply_ideal"], [181, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[181, 2, 1, "", "contains"], [181, 2, 1, "", "convert"], [181, 2, 1, "", "identity_hom"], [181, 2, 1, "", "is_submodule"], [181, 2, 1, "", "is_zero"], [181, 2, 1, "", "multiply_ideal"], [181, 2, 1, "", "quotient_module"], [181, 2, 1, "", "submodule"], [181, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[181, 2, 1, "", "convert"], [181, 5, 1, "", "dtype"], [181, 2, 1, "", "identity_hom"], [181, 2, 1, "", "is_submodule"], [181, 2, 1, "", "is_zero"], [181, 2, 1, "", "quotient_hom"], [181, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[181, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[181, 2, 1, "", "convert"], [181, 2, 1, "", "identity_hom"], [181, 2, 1, "", "in_terms_of_generators"], [181, 2, 1, "", "inclusion_hom"], [181, 2, 1, "", "intersect"], [181, 2, 1, "", "is_full_module"], [181, 2, 1, "", "is_submodule"], [181, 2, 1, "", "is_zero"], [181, 2, 1, "", "module_quotient"], [181, 2, 1, "", "multiply_ideal"], [181, 2, 1, "", "quotient_module"], [181, 2, 1, "", "reduce_element"], [181, 2, 1, "", "submodule"], [181, 2, 1, "", "syzygy_module"], [181, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[181, 2, 1, "", "is_full_module"], [181, 2, 1, "", "quotient_hom"]], "sympy.polys.constructor": [[190, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[187, 3, 1, "", "dmp_abs"], [187, 3, 1, "", "dmp_add"], [187, 3, 1, "", "dmp_add_ground"], [187, 3, 1, "", "dmp_add_mul"], [187, 3, 1, "", "dmp_add_term"], [187, 3, 1, "", "dmp_div"], [187, 3, 1, "", "dmp_expand"], [187, 3, 1, "", "dmp_exquo"], [187, 3, 1, "", "dmp_exquo_ground"], [187, 3, 1, "", "dmp_ff_div"], [187, 3, 1, "", "dmp_l1_norm"], [187, 3, 1, "", "dmp_max_norm"], [187, 3, 1, "", "dmp_mul"], [187, 3, 1, "", "dmp_mul_ground"], [187, 3, 1, "", "dmp_mul_term"], [187, 3, 1, "", "dmp_neg"], [187, 3, 1, "", "dmp_pdiv"], [187, 3, 1, "", "dmp_pexquo"], [187, 3, 1, "", "dmp_pow"], [187, 3, 1, "", "dmp_pquo"], [187, 3, 1, "", "dmp_prem"], [187, 3, 1, "", "dmp_quo"], [187, 3, 1, "", "dmp_quo_ground"], [187, 3, 1, "", "dmp_rem"], [187, 3, 1, "", "dmp_rr_div"], [187, 3, 1, "", "dmp_sqr"], [187, 3, 1, "", "dmp_sub"], [187, 3, 1, "", "dmp_sub_ground"], [187, 3, 1, "", "dmp_sub_mul"], [187, 3, 1, "", "dmp_sub_term"], [187, 3, 1, "", "dup_lshift"], [187, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[187, 3, 1, "", "dmp_LC"], [187, 3, 1, "", "dmp_TC"], [187, 3, 1, "", "dmp_apply_pairs"], [187, 3, 1, "", "dmp_convert"], [187, 3, 1, "", "dmp_copy"], [187, 3, 1, "", "dmp_deflate"], [187, 3, 1, "", "dmp_degree"], [187, 3, 1, "", "dmp_degree_in"], [187, 3, 1, "", "dmp_degree_list"], [187, 3, 1, "", "dmp_eject"], [187, 3, 1, "", "dmp_exclude"], [187, 3, 1, "", "dmp_from_dict"], [187, 3, 1, "", "dmp_from_sympy"], [187, 3, 1, "", "dmp_ground"], [187, 3, 1, "", "dmp_ground_LC"], [187, 3, 1, "", "dmp_ground_TC"], [187, 3, 1, "", "dmp_ground_nth"], [187, 3, 1, "", "dmp_ground_p"], [187, 3, 1, "", "dmp_grounds"], [187, 3, 1, "", "dmp_include"], [187, 3, 1, "", "dmp_inflate"], [187, 3, 1, "", "dmp_inject"], [187, 3, 1, "", "dmp_list_terms"], [187, 3, 1, "", "dmp_multi_deflate"], [187, 3, 1, "", "dmp_negative_p"], [187, 3, 1, "", "dmp_nest"], [187, 3, 1, "", "dmp_normal"], [187, 3, 1, "", "dmp_nth"], [187, 3, 1, "", "dmp_one"], [187, 3, 1, "", "dmp_one_p"], [187, 3, 1, "", "dmp_permute"], [187, 3, 1, "", "dmp_positive_p"], [187, 3, 1, "", "dmp_raise"], [187, 3, 1, "", "dmp_slice"], [187, 3, 1, "", "dmp_strip"], [187, 3, 1, "", "dmp_swap"], [187, 3, 1, "", "dmp_terms_gcd"], [187, 3, 1, "", "dmp_to_dict"], [187, 3, 1, "", "dmp_to_tuple"], [187, 3, 1, "", "dmp_true_LT"], [187, 3, 1, "", "dmp_validate"], [187, 3, 1, "", "dmp_zero"], [187, 3, 1, "", "dmp_zero_p"], [187, 3, 1, "", "dmp_zeros"], [187, 3, 1, "", "dup_random"], [187, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[187, 3, 1, "", "dmp_clear_denoms"], [187, 3, 1, "", "dmp_compose"], [187, 3, 1, "", "dmp_diff"], [187, 3, 1, "", "dmp_diff_eval_in"], [187, 3, 1, "", "dmp_diff_in"], [187, 3, 1, "", "dmp_eval"], [187, 3, 1, "", "dmp_eval_in"], [187, 3, 1, "", "dmp_eval_tail"], [187, 3, 1, "", "dmp_ground_content"], [187, 3, 1, "", "dmp_ground_extract"], [187, 3, 1, "", "dmp_ground_monic"], [187, 3, 1, "", "dmp_ground_primitive"], [187, 3, 1, "", "dmp_ground_trunc"], [187, 3, 1, "", "dmp_integrate"], [187, 3, 1, "", "dmp_integrate_in"], [187, 3, 1, "", "dmp_lift"], [187, 3, 1, "", "dmp_revert"], [187, 3, 1, "", "dmp_trunc"], [187, 3, 1, "", "dup_content"], [187, 3, 1, "", "dup_decompose"], [187, 3, 1, "", "dup_extract"], [187, 3, 1, "", "dup_mirror"], [187, 3, 1, "", "dup_monic"], [187, 3, 1, "", "dup_primitive"], [187, 3, 1, "", "dup_real_imag"], [187, 3, 1, "", "dup_scale"], [187, 3, 1, "", "dup_shift"], [187, 3, 1, "", "dup_sign_variations"], [187, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[190, 3, 1, "", "dispersion"], [190, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[187, 3, 1, "", "sdm_LC"], [187, 3, 1, "", "sdm_LM"], [187, 3, 1, "", "sdm_LT"], [187, 3, 1, "", "sdm_add"], [187, 3, 1, "", "sdm_deg"], [187, 3, 1, "", "sdm_ecart"], [187, 3, 1, "", "sdm_from_dict"], [187, 3, 1, "", "sdm_from_vector"], [187, 3, 1, "", "sdm_groebner"], [187, 3, 1, "", "sdm_monomial_deg"], [187, 3, 1, "", "sdm_monomial_divides"], [187, 3, 1, "", "sdm_monomial_mul"], [187, 3, 1, "", "sdm_mul_term"], [187, 3, 1, "", "sdm_nf_mora"], [187, 3, 1, "", "sdm_spoly"], [187, 3, 1, "", "sdm_to_dict"], [187, 3, 1, "", "sdm_to_vector"], [187, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[185, 1, 1, "", "AlgebraicField"], [185, 1, 1, "", "ComplexField"], [185, 1, 1, "", "ExpressionDomain"], [185, 1, 1, "", "FiniteField"], [185, 1, 1, "", "FractionField"], [185, 1, 1, "", "GMPYFiniteField"], [185, 1, 1, "", "GMPYIntegerRing"], [185, 1, 1, "", "GMPYRationalField"], [185, 1, 1, "", "IntegerRing"], [185, 1, 1, "", "PolynomialRing"], [185, 1, 1, "", "PythonFiniteField"], [185, 1, 1, "", "PythonIntegerRing"], [185, 1, 1, "", "PythonRationalField"], [185, 1, 1, "", "RationalField"], [185, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[185, 2, 1, "", "algebraic_field"], [185, 2, 1, "", "denom"], [185, 2, 1, "", "discriminant"], [185, 5, 1, "", "dtype"], [185, 5, 1, "", "ext"], [185, 2, 1, "", "from_AlgebraicField"], [185, 2, 1, "", "from_GaussianIntegerRing"], [185, 2, 1, "", "from_GaussianRationalField"], [185, 2, 1, "", "from_QQ"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "integral_basis"], [185, 2, 1, "", "is_negative"], [185, 2, 1, "", "is_nonnegative"], [185, 2, 1, "", "is_nonpositive"], [185, 2, 1, "", "is_positive"], [185, 2, 1, "", "maximal_order"], [185, 5, 1, "", "mod"], [185, 2, 1, "", "numer"], [185, 5, 1, "", "orig_ext"], [185, 2, 1, "", "primes_above"], [185, 2, 1, "", "to_alg_num"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[185, 2, 1, "", "almosteq"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "gcd"], [185, 2, 1, "", "get_exact"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "is_negative"], [185, 2, 1, "", "is_nonnegative"], [185, 2, 1, "", "is_nonpositive"], [185, 2, 1, "", "is_positive"], [185, 2, 1, "", "lcm"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[185, 1, 1, "", "Expression"], [185, 2, 1, "", "denom"], [185, 5, 1, "", "dtype"], [185, 2, 1, "", "from_ExpressionDomain"], [185, 2, 1, "", "from_FractionField"], [185, 2, 1, "", "from_GaussianIntegerRing"], [185, 2, 1, "", "from_GaussianRationalField"], [185, 2, 1, "", "from_PolynomialRing"], [185, 2, 1, "", "from_QQ"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "get_field"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "is_negative"], [185, 2, 1, "", "is_nonnegative"], [185, 2, 1, "", "is_nonpositive"], [185, 2, 1, "", "is_positive"], [185, 2, 1, "", "numer"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[185, 2, 1, "", "characteristic"], [185, 2, 1, "", "from_FF"], [185, 2, 1, "", "from_FF_gmpy"], [185, 2, 1, "", "from_FF_python"], [185, 2, 1, "", "from_QQ"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "get_field"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[185, 2, 1, "", "denom"], [185, 2, 1, "", "factorial"], [185, 2, 1, "", "from_AlgebraicField"], [185, 2, 1, "", "from_ComplexField"], [185, 2, 1, "", "from_FractionField"], [185, 2, 1, "", "from_GaussianIntegerRing"], [185, 2, 1, "", "from_GaussianRationalField"], [185, 2, 1, "", "from_PolynomialRing"], [185, 2, 1, "", "from_QQ"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "is_negative"], [185, 2, 1, "", "is_nonnegative"], [185, 2, 1, "", "is_nonpositive"], [185, 2, 1, "", "is_positive"], [185, 2, 1, "", "numer"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[185, 2, 1, "", "factorial"], [185, 2, 1, "", "from_FF_gmpy"], [185, 2, 1, "", "from_FF_python"], [185, 2, 1, "", "from_QQ"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "gcd"], [185, 2, 1, "", "gcdex"], [185, 2, 1, "", "lcm"], [185, 2, 1, "", "sqrt"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[185, 2, 1, "", "denom"], [185, 2, 1, "", "div"], [185, 2, 1, "", "exquo"], [185, 2, 1, "", "factorial"], [185, 2, 1, "", "from_GaussianRationalField"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "numer"], [185, 2, 1, "", "quo"], [185, 2, 1, "", "rem"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[185, 2, 1, "", "algebraic_field"], [185, 2, 1, "", "factorial"], [185, 2, 1, "", "from_AlgebraicField"], [185, 2, 1, "", "from_FF"], [185, 2, 1, "", "from_FF_gmpy"], [185, 2, 1, "", "from_FF_python"], [185, 2, 1, "", "from_QQ"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "gcd"], [185, 2, 1, "", "gcdex"], [185, 2, 1, "", "get_field"], [185, 2, 1, "", "lcm"], [185, 2, 1, "", "log"], [185, 2, 1, "", "sqrt"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[185, 2, 1, "", "factorial"], [185, 2, 1, "", "from_AlgebraicField"], [185, 2, 1, "", "from_ComplexField"], [185, 2, 1, "", "from_FractionField"], [185, 2, 1, "", "from_GaussianIntegerRing"], [185, 2, 1, "", "from_GaussianRationalField"], [185, 2, 1, "", "from_GlobalPolynomialRing"], [185, 2, 1, "", "from_PolynomialRing"], [185, 2, 1, "", "from_QQ"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "gcd"], [185, 2, 1, "", "gcdex"], [185, 2, 1, "", "get_field"], [185, 2, 1, "", "is_negative"], [185, 2, 1, "", "is_nonnegative"], [185, 2, 1, "", "is_nonpositive"], [185, 2, 1, "", "is_positive"], [185, 2, 1, "", "is_unit"], [185, 2, 1, "", "lcm"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[185, 2, 1, "", "algebraic_field"], [185, 2, 1, "", "denom"], [185, 2, 1, "", "div"], [185, 2, 1, "", "exquo"], [185, 2, 1, "", "from_AlgebraicField"], [185, 2, 1, "", "from_GaussianRationalField"], [185, 2, 1, "", "from_QQ"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "numer"], [185, 2, 1, "", "quo"], [185, 2, 1, "", "rem"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[185, 2, 1, "", "almosteq"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "gcd"], [185, 2, 1, "", "get_exact"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "lcm"], [185, 2, 1, "", "to_rational"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[185, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[185, 2, 1, "", "drop"], [185, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[185, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[185, 2, 1, "", "abs"], [185, 2, 1, "", "add"], [185, 2, 1, "", "alg_field_from_poly"], [185, 2, 1, "", "algebraic_field"], [185, 2, 1, "", "almosteq"], [185, 2, 1, "", "characteristic"], [185, 2, 1, "", "cofactors"], [185, 2, 1, "", "convert"], [185, 2, 1, "", "convert_from"], [185, 2, 1, "", "cyclotomic_field"], [185, 2, 1, "", "denom"], [185, 2, 1, "", "div"], [185, 2, 1, "", "drop"], [185, 5, 1, "", "dtype"], [185, 2, 1, "", "evalf"], [185, 2, 1, "", "exquo"], [185, 2, 1, "", "frac_field"], [185, 2, 1, "", "from_AlgebraicField"], [185, 2, 1, "", "from_ComplexField"], [185, 2, 1, "", "from_ExpressionDomain"], [185, 2, 1, "", "from_ExpressionRawDomain"], [185, 2, 1, "", "from_FF"], [185, 2, 1, "", "from_FF_gmpy"], [185, 2, 1, "", "from_FF_python"], [185, 2, 1, "", "from_FractionField"], [185, 2, 1, "", "from_GlobalPolynomialRing"], [185, 2, 1, "", "from_MonogenicFiniteExtension"], [185, 2, 1, "", "from_PolynomialRing"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_RealField"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "gcd"], [185, 2, 1, "", "gcdex"], [185, 2, 1, "", "get_exact"], [185, 2, 1, "", "get_field"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "half_gcdex"], [185, 5, 1, "", "has_assoc_Field"], [185, 5, 1, "", "has_assoc_Ring"], [185, 2, 1, "", "inject"], [185, 2, 1, "", "invert"], [185, 5, 1, "", "is_Field"], [185, 5, 1, "", "is_PID"], [185, 5, 1, "", "is_Ring"], [185, 2, 1, "", "is_negative"], [185, 2, 1, "", "is_nonnegative"], [185, 2, 1, "", "is_nonpositive"], [185, 2, 1, "", "is_one"], [185, 2, 1, "", "is_positive"], [185, 2, 1, "", "is_zero"], [185, 2, 1, "", "lcm"], [185, 2, 1, "", "log"], [185, 2, 1, "", "map"], [185, 2, 1, "", "mul"], [185, 2, 1, "", "n"], [185, 2, 1, "", "neg"], [185, 2, 1, "", "numer"], [185, 2, 1, "", "of_type"], [185, 2, 1, "", "old_frac_field"], [185, 2, 1, "", "old_poly_ring"], [185, 5, 1, "", "one"], [185, 2, 1, "", "poly_ring"], [185, 2, 1, "", "pos"], [185, 2, 1, "", "pow"], [185, 2, 1, "", "quo"], [185, 2, 1, "", "rem"], [185, 2, 1, "", "revert"], [185, 2, 1, "", "sqrt"], [185, 2, 1, "", "sub"], [185, 2, 1, "", "to_sympy"], [185, 4, 1, "", "tp"], [185, 2, 1, "", "unify"], [185, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[185, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[185, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[185, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[185, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[185, 2, 1, "", "div"], [185, 2, 1, "", "exquo"], [185, 2, 1, "", "gcd"], [185, 2, 1, "", "get_field"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "is_unit"], [185, 2, 1, "", "lcm"], [185, 2, 1, "", "quo"], [185, 2, 1, "", "rem"], [185, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[185, 1, 1, "", "GaussianDomain"], [185, 1, 1, "", "GaussianElement"], [185, 1, 1, "", "GaussianInteger"], [185, 1, 1, "", "GaussianIntegerRing"], [185, 1, 1, "", "GaussianRational"], [185, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[185, 2, 1, "", "from_AlgebraicField"], [185, 2, 1, "", "from_QQ"], [185, 2, 1, "", "from_QQ_gmpy"], [185, 2, 1, "", "from_QQ_python"], [185, 2, 1, "", "from_ZZ"], [185, 2, 1, "", "from_ZZ_gmpy"], [185, 2, 1, "", "from_ZZ_python"], [185, 2, 1, "", "from_sympy"], [185, 2, 1, "", "inject"], [185, 2, 1, "", "is_negative"], [185, 2, 1, "", "is_nonnegative"], [185, 2, 1, "", "is_nonpositive"], [185, 2, 1, "", "is_positive"], [185, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[185, 2, 1, "", "new"], [185, 2, 1, "", "parent"], [185, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[185, 5, 1, "", "dtype"], [185, 2, 1, "", "from_GaussianIntegerRing"], [185, 2, 1, "", "from_GaussianRationalField"], [185, 2, 1, "", "gcd"], [185, 2, 1, "", "get_field"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "lcm"], [185, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[185, 2, 1, "", "as_AlgebraicField"], [185, 2, 1, "", "denom"], [185, 5, 1, "", "dtype"], [185, 2, 1, "", "from_GaussianIntegerRing"], [185, 2, 1, "", "from_GaussianRationalField"], [185, 2, 1, "", "get_field"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[185, 1, 1, "", "ComplexElement"], [185, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[185, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[185, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[185, 2, 1, "", "denom"], [185, 2, 1, "", "div"], [185, 2, 1, "", "exquo"], [185, 2, 1, "", "free_module"], [185, 2, 1, "", "get_ring"], [185, 2, 1, "", "ideal"], [185, 2, 1, "", "invert"], [185, 2, 1, "", "numer"], [185, 2, 1, "", "quo"], [185, 2, 1, "", "quotient_ring"], [185, 2, 1, "", "rem"], [185, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[185, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[185, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[187, 3, 1, "", "dmp_cancel"], [187, 3, 1, "", "dmp_content"], [187, 3, 1, "", "dmp_discriminant"], [187, 3, 1, "", "dmp_euclidean_prs"], [187, 3, 1, "", "dmp_ff_prs_gcd"], [187, 3, 1, "", "dmp_gcd"], [187, 3, 1, "", "dmp_gcdex"], [187, 3, 1, "", "dmp_half_gcdex"], [187, 3, 1, "", "dmp_inner_gcd"], [187, 3, 1, "", "dmp_inner_subresultants"], [187, 3, 1, "", "dmp_invert"], [187, 3, 1, "", "dmp_lcm"], [187, 3, 1, "", "dmp_primitive"], [187, 3, 1, "", "dmp_primitive_prs"], [187, 3, 1, "", "dmp_prs_resultant"], [187, 3, 1, "", "dmp_qq_collins_resultant"], [187, 3, 1, "", "dmp_qq_heu_gcd"], [187, 3, 1, "", "dmp_resultant"], [187, 3, 1, "", "dmp_rr_prs_gcd"], [187, 3, 1, "", "dmp_subresultants"], [187, 3, 1, "", "dmp_zz_collins_resultant"], [187, 3, 1, "", "dmp_zz_heu_gcd"], [187, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[187, 3, 1, "", "dmp_ext_factor"], [187, 3, 1, "", "dmp_factor_list"], [187, 3, 1, "", "dmp_factor_list_include"], [187, 3, 1, "", "dmp_irreducible_p"], [187, 3, 1, "", "dmp_trial_division"], [187, 3, 1, "", "dmp_zz_diophantine"], [187, 3, 1, "", "dmp_zz_factor"], [187, 3, 1, "", "dmp_zz_mignotte_bound"], [187, 3, 1, "", "dmp_zz_wang"], [187, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [187, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [187, 3, 1, "", "dmp_zz_wang_non_divisors"], [187, 3, 1, "", "dmp_zz_wang_test_points"], [187, 3, 1, "", "dup_cyclotomic_p"], [187, 3, 1, "", "dup_gf_factor"], [187, 3, 1, "", "dup_zz_cyclotomic_factor"], [187, 3, 1, "", "dup_zz_cyclotomic_poly"], [187, 3, 1, "", "dup_zz_factor"], [187, 3, 1, "", "dup_zz_factor_sqf"], [187, 3, 1, "", "dup_zz_hensel_lift"], [187, 3, 1, "", "dup_zz_hensel_step"], [187, 3, 1, "", "dup_zz_irreducible_p"], [187, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[187, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[185, 1, 1, "", "FracElement"], [185, 1, 1, "", "FracField"], [185, 3, 1, "", "field"], [185, 3, 1, "", "sfield"], [185, 3, 1, "", "vfield"], [185, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[185, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[187, 3, 1, "", "gf_LC"], [187, 3, 1, "", "gf_Qbasis"], [187, 3, 1, "", "gf_Qmatrix"], [187, 3, 1, "", "gf_TC"], [187, 3, 1, "", "gf_add"], [187, 3, 1, "", "gf_add_ground"], [187, 3, 1, "", "gf_add_mul"], [187, 3, 1, "", "gf_berlekamp"], [187, 3, 1, "", "gf_cofactors"], [187, 3, 1, "", "gf_compose"], [187, 3, 1, "", "gf_compose_mod"], [187, 3, 1, "", "gf_crt"], [187, 3, 1, "", "gf_crt1"], [187, 3, 1, "", "gf_crt2"], [187, 3, 1, "", "gf_csolve"], [187, 3, 1, "", "gf_degree"], [187, 3, 1, "", "gf_diff"], [187, 3, 1, "", "gf_div"], [187, 3, 1, "", "gf_eval"], [187, 3, 1, "", "gf_expand"], [187, 3, 1, "", "gf_exquo"], [187, 3, 1, "", "gf_factor"], [187, 3, 1, "", "gf_factor_sqf"], [187, 3, 1, "", "gf_from_dict"], [187, 3, 1, "", "gf_from_int_poly"], [187, 3, 1, "", "gf_gcd"], [187, 3, 1, "", "gf_gcdex"], [187, 3, 1, "", "gf_int"], [187, 3, 1, "", "gf_irreducible"], [187, 3, 1, "", "gf_irreducible_p"], [187, 3, 1, "", "gf_lcm"], [187, 3, 1, "", "gf_lshift"], [187, 3, 1, "", "gf_monic"], [187, 3, 1, "", "gf_mul"], [187, 3, 1, "", "gf_mul_ground"], [187, 3, 1, "", "gf_multi_eval"], [187, 3, 1, "", "gf_neg"], [187, 3, 1, "", "gf_normal"], [187, 3, 1, "", "gf_pow"], [187, 3, 1, "", "gf_pow_mod"], [187, 3, 1, "", "gf_quo"], [187, 3, 1, "", "gf_quo_ground"], [187, 3, 1, "", "gf_random"], [187, 3, 1, "", "gf_rem"], [187, 3, 1, "", "gf_rshift"], [187, 3, 1, "", "gf_shoup"], [187, 3, 1, "", "gf_sqf_list"], [187, 3, 1, "", "gf_sqf_p"], [187, 3, 1, "", "gf_sqf_part"], [187, 3, 1, "", "gf_sqr"], [187, 3, 1, "", "gf_strip"], [187, 3, 1, "", "gf_sub"], [187, 3, 1, "", "gf_sub_ground"], [187, 3, 1, "", "gf_sub_mul"], [187, 3, 1, "", "gf_to_dict"], [187, 3, 1, "", "gf_to_int_poly"], [187, 3, 1, "", "gf_trace_map"], [187, 3, 1, "", "gf_trunc"], [187, 3, 1, "", "gf_value"], [187, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[187, 3, 1, "", "groebner"], [187, 3, 1, "", "is_groebner"], [187, 3, 1, "", "is_minimal"], [187, 3, 1, "", "is_reduced"], [187, 3, 1, "", "red_groebner"], [187, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[183, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[183, 2, 1, "", "add"], [183, 2, 1, "", "charpoly"], [183, 2, 1, "", "det"], [183, 2, 1, "", "hstack"], [183, 2, 1, "", "inv"], [183, 2, 1, "", "is_lower"], [183, 2, 1, "", "is_upper"], [183, 2, 1, "", "is_zero_matrix"], [183, 2, 1, "", "lu"], [183, 2, 1, "", "lu_solve"], [183, 2, 1, "", "matmul"], [183, 2, 1, "", "neg"], [183, 2, 1, "", "rref"], [183, 2, 1, "", "scc"], [183, 2, 1, "", "sub"], [183, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[183, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[183, 2, 1, "", "add"], [183, 2, 1, "", "charpoly"], [183, 2, 1, "", "columnspace"], [183, 2, 1, "", "convert_to"], [183, 2, 1, "", "det"], [183, 2, 1, "", "diag"], [183, 2, 1, "", "eye"], [183, 2, 1, "", "from_Matrix"], [183, 2, 1, "", "from_dict_sympy"], [183, 2, 1, "", "from_list"], [183, 2, 1, "", "from_list_sympy"], [183, 2, 1, "", "from_rep"], [183, 2, 1, "", "hstack"], [183, 2, 1, "", "inv"], [183, 4, 1, "", "is_lower"], [183, 4, 1, "", "is_upper"], [183, 2, 1, "", "lu"], [183, 2, 1, "", "lu_solve"], [183, 2, 1, "", "matmul"], [183, 2, 1, "", "mul"], [183, 2, 1, "", "neg"], [183, 2, 1, "", "nullspace"], [183, 2, 1, "", "ones"], [183, 2, 1, "", "pow"], [183, 2, 1, "", "rowspace"], [183, 2, 1, "", "rref"], [183, 2, 1, "", "scc"], [183, 2, 1, "", "sub"], [183, 2, 1, "", "to_Matrix"], [183, 2, 1, "", "to_dense"], [183, 2, 1, "", "to_field"], [183, 2, 1, "", "to_sparse"], [183, 2, 1, "", "transpose"], [183, 2, 1, "", "unify"], [183, 2, 1, "", "vstack"], [183, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[183, 3, 1, "", "hermite_normal_form"], [183, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[183, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[183, 2, 1, "", "add"], [183, 2, 1, "", "charpoly"], [183, 2, 1, "", "convert_to"], [183, 2, 1, "", "copy"], [183, 2, 1, "", "det"], [183, 2, 1, "", "eye"], [183, 2, 1, "", "from_ddm"], [183, 2, 1, "", "from_list"], [183, 2, 1, "", "hstack"], [183, 2, 1, "", "inv"], [183, 2, 1, "", "is_lower"], [183, 2, 1, "", "is_upper"], [183, 2, 1, "", "is_zero_matrix"], [183, 2, 1, "", "lu"], [183, 2, 1, "", "lu_solve"], [183, 2, 1, "", "matmul"], [183, 2, 1, "", "mul"], [183, 2, 1, "", "neg"], [183, 2, 1, "", "new"], [183, 2, 1, "", "nullspace"], [183, 2, 1, "", "rref"], [183, 2, 1, "", "scc"], [183, 2, 1, "", "sub"], [183, 2, 1, "", "to_ddm"], [183, 2, 1, "", "to_list"], [183, 2, 1, "", "transpose"], [183, 2, 1, "", "vstack"], [183, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[187, 3, 1, "", "_modgcd_multivariate_p"], [187, 3, 1, "", "func_field_modgcd"], [187, 3, 1, "", "modgcd_bivariate"], [187, 3, 1, "", "modgcd_multivariate"], [187, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[190, 1, 1, "", "Monomial"], [190, 3, 1, "", "itermonomials"], [190, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[190, 2, 1, "", "as_expr"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[189, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[189, 3, 1, "", "minimal_polynomial"], [189, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[189, 0, 0, "-", "modules"], [189, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[189, 1, 1, "", "EndomorphismRing"], [189, 1, 1, "", "InnerEndomorphism"], [189, 1, 1, "", "Module"], [189, 1, 1, "", "ModuleElement"], [189, 1, 1, "", "ModuleEndomorphism"], [189, 1, 1, "", "ModuleHomomorphism"], [189, 1, 1, "", "PowerBasis"], [189, 1, 1, "", "PowerBasisElement"], [189, 1, 1, "", "Submodule"], [189, 3, 1, "", "find_min_poly"], [189, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "inner_endomorphism"], [189, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[189, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[189, 2, 1, "", "__call__"], [189, 2, 1, "", "ancestors"], [189, 2, 1, "", "basis_elements"], [189, 2, 1, "", "element_from_rational"], [189, 2, 1, "", "endomorphism_ring"], [189, 2, 1, "", "is_compat_col"], [189, 2, 1, "", "mult_tab"], [189, 4, 1, "", "n"], [189, 2, 1, "", "nearest_common_ancestor"], [189, 4, 1, "", "number_field"], [189, 2, 1, "", "one"], [189, 4, 1, "", "parent"], [189, 2, 1, "", "power_basis_ancestor"], [189, 2, 1, "", "represent"], [189, 2, 1, "", "starts_with_unity"], [189, 2, 1, "", "submodule_from_gens"], [189, 2, 1, "", "submodule_from_matrix"], [189, 2, 1, "", "whole_submodule"], [189, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[189, 4, 1, "", "QQ_col"], [189, 2, 1, "", "__add__"], [189, 2, 1, "", "__init__"], [189, 2, 1, "", "__mod__"], [189, 2, 1, "", "__mul__"], [189, 2, 1, "", "column"], [189, 2, 1, "", "equiv"], [189, 2, 1, "", "from_int_list"], [189, 2, 1, "", "is_compat"], [189, 4, 1, "", "n"], [189, 2, 1, "", "over_power_basis"], [189, 2, 1, "", "reduced"], [189, 2, 1, "", "reduced_mod_p"], [189, 2, 1, "", "to_ancestor"], [189, 2, 1, "", "to_parent"], [189, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[189, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "kernel"], [189, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "element_from_ANP"], [189, 2, 1, "", "element_from_alg_num"], [189, 2, 1, "", "element_from_poly"], [189, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[189, 4, 1, "", "T"], [189, 2, 1, "", "as_expr"], [189, 4, 1, "", "generator"], [189, 4, 1, "", "is_rational"], [189, 2, 1, "", "norm"], [189, 2, 1, "", "numerator"], [189, 2, 1, "", "poly"], [189, 2, 1, "", "to_ANP"], [189, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[189, 4, 1, "", "QQ_matrix"], [189, 2, 1, "", "__init__"], [189, 2, 1, "", "add"], [189, 2, 1, "", "basis_element_pullbacks"], [189, 2, 1, "", "discard_before"], [189, 2, 1, "", "mul"], [189, 2, 1, "", "reduce_element"], [189, 2, 1, "", "reduced"], [189, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[189, 1, 1, "", "PrimeIdeal"], [189, 3, 1, "", "prime_decomp"], [189, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[189, 2, 1, "", "__add__"], [189, 2, 1, "", "__init__"], [189, 2, 1, "", "__mul__"], [189, 2, 1, "", "as_submodule"], [189, 4, 1, "", "is_inert"], [189, 2, 1, "", "reduce_ANP"], [189, 2, 1, "", "reduce_alg_num"], [189, 2, 1, "", "reduce_element"], [189, 2, 1, "", "repr"], [189, 2, 1, "", "test_factor"], [189, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[189, 3, 1, "", "field_isomorphism"], [189, 3, 1, "", "primitive_element"], [189, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[189, 1, 1, "", "AlgIntPowers"], [189, 3, 1, "", "coeff_search"], [189, 3, 1, "", "extract_fundamental_discriminant"], [189, 3, 1, "", "get_num_denom"], [189, 3, 1, "", "is_int"], [189, 3, 1, "", "is_rat"], [189, 3, 1, "", "isolate"], [189, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[189, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[190, 1, 1, "", "GradedLexOrder"], [190, 1, 1, "", "LexOrder"], [190, 1, 1, "", "MonomialOrder"], [190, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[190, 3, 1, "", "chebyshevt_poly"], [190, 3, 1, "", "chebyshevu_poly"], [190, 3, 1, "", "gegenbauer_poly"], [190, 3, 1, "", "hermite_poly"], [190, 3, 1, "", "jacobi_poly"], [190, 3, 1, "", "laguerre_poly"], [190, 3, 1, "", "legendre_poly"], [190, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[190, 3, 1, "", "apart"], [190, 3, 1, "", "apart_list"], [190, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[185, 1, 1, "", "ANP"], [185, 1, 1, "", "DMF"], [185, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[185, 2, 1, "", "LC"], [185, 2, 1, "", "TC"], [185, 4, 1, "", "is_ground"], [185, 4, 1, "", "is_one"], [185, 4, 1, "", "is_zero"], [185, 2, 1, "", "pow"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_list"], [185, 2, 1, "", "to_sympy_dict"], [185, 2, 1, "", "to_sympy_list"], [185, 2, 1, "", "to_tuple"], [185, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[185, 2, 1, "", "add"], [185, 2, 1, "", "cancel"], [185, 2, 1, "", "denom"], [185, 2, 1, "", "exquo"], [185, 2, 1, "", "frac_unify"], [185, 2, 1, "", "half_per"], [185, 2, 1, "", "invert"], [185, 4, 1, "", "is_one"], [185, 4, 1, "", "is_zero"], [185, 2, 1, "", "mul"], [185, 2, 1, "", "neg"], [185, 2, 1, "", "numer"], [185, 2, 1, "", "per"], [185, 2, 1, "", "poly_unify"], [185, 2, 1, "", "pow"], [185, 2, 1, "", "quo"], [185, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[185, 2, 1, "", "LC"], [185, 2, 1, "", "TC"], [185, 2, 1, "", "abs"], [185, 2, 1, "", "add"], [185, 2, 1, "", "add_ground"], [185, 2, 1, "", "all_coeffs"], [185, 2, 1, "", "all_monoms"], [185, 2, 1, "", "all_terms"], [185, 2, 1, "", "cancel"], [185, 2, 1, "", "cauchy_lower_bound"], [185, 2, 1, "", "cauchy_upper_bound"], [185, 2, 1, "", "clear_denoms"], [185, 2, 1, "", "coeffs"], [185, 2, 1, "", "cofactors"], [185, 2, 1, "", "compose"], [185, 2, 1, "", "content"], [185, 2, 1, "", "convert"], [185, 2, 1, "", "count_complex_roots"], [185, 2, 1, "", "count_real_roots"], [185, 2, 1, "", "decompose"], [185, 2, 1, "", "deflate"], [185, 2, 1, "", "degree"], [185, 2, 1, "", "degree_list"], [185, 2, 1, "", "diff"], [185, 2, 1, "", "discriminant"], [185, 2, 1, "", "div"], [185, 2, 1, "", "eject"], [185, 2, 1, "", "eval"], [185, 2, 1, "", "exclude"], [185, 2, 1, "", "exquo"], [185, 2, 1, "", "exquo_ground"], [185, 2, 1, "", "factor_list"], [185, 2, 1, "", "factor_list_include"], [185, 2, 1, "", "from_dict"], [185, 2, 1, "", "from_list"], [185, 2, 1, "", "from_sympy_list"], [185, 2, 1, "", "gcd"], [185, 2, 1, "", "gcdex"], [185, 2, 1, "", "gff_list"], [185, 2, 1, "", "half_gcdex"], [185, 2, 1, "", "homogeneous_order"], [185, 2, 1, "", "homogenize"], [185, 2, 1, "", "inject"], [185, 2, 1, "", "integrate"], [185, 2, 1, "", "intervals"], [185, 2, 1, "", "invert"], [185, 4, 1, "", "is_cyclotomic"], [185, 4, 1, "", "is_ground"], [185, 4, 1, "", "is_homogeneous"], [185, 4, 1, "", "is_irreducible"], [185, 4, 1, "", "is_linear"], [185, 4, 1, "", "is_monic"], [185, 4, 1, "", "is_monomial"], [185, 4, 1, "", "is_one"], [185, 4, 1, "", "is_primitive"], [185, 4, 1, "", "is_quadratic"], [185, 4, 1, "", "is_sqf"], [185, 4, 1, "", "is_zero"], [185, 2, 1, "", "l1_norm"], [185, 2, 1, "", "l2_norm_squared"], [185, 2, 1, "", "lcm"], [185, 2, 1, "", "lift"], [185, 2, 1, "", "max_norm"], [185, 2, 1, "", "mignotte_sep_bound_squared"], [185, 2, 1, "", "monic"], [185, 2, 1, "", "monoms"], [185, 2, 1, "", "mul"], [185, 2, 1, "", "mul_ground"], [185, 2, 1, "", "neg"], [185, 2, 1, "", "norm"], [185, 2, 1, "", "nth"], [185, 2, 1, "", "pdiv"], [185, 2, 1, "", "per"], [185, 2, 1, "", "permute"], [185, 2, 1, "", "pexquo"], [185, 2, 1, "", "pow"], [185, 2, 1, "", "pquo"], [185, 2, 1, "", "prem"], [185, 2, 1, "", "primitive"], [185, 2, 1, "", "quo"], [185, 2, 1, "", "quo_ground"], [185, 2, 1, "", "refine_root"], [185, 2, 1, "", "rem"], [185, 2, 1, "", "resultant"], [185, 2, 1, "", "revert"], [185, 2, 1, "", "shift"], [185, 2, 1, "", "slice"], [185, 2, 1, "", "sqf_list"], [185, 2, 1, "", "sqf_list_include"], [185, 2, 1, "", "sqf_norm"], [185, 2, 1, "", "sqf_part"], [185, 2, 1, "", "sqr"], [185, 2, 1, "", "sturm"], [185, 2, 1, "", "sub"], [185, 2, 1, "", "sub_ground"], [185, 2, 1, "", "subresultants"], [185, 2, 1, "", "terms"], [185, 2, 1, "", "terms_gcd"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_exact"], [185, 2, 1, "", "to_field"], [185, 2, 1, "", "to_list"], [185, 2, 1, "", "to_ring"], [185, 2, 1, "", "to_sympy_dict"], [185, 2, 1, "", "to_sympy_list"], [185, 2, 1, "", "to_tuple"], [185, 2, 1, "", "total_degree"], [185, 2, 1, "", "transform"], [185, 2, 1, "", "trunc"], [185, 2, 1, "", "unify"]], "sympy.polys": [[187, 0, 0, "-", "polyconfig"], [187, 0, 0, "-", "polyoptions"], [192, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[187, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[187, 1, 1, "", "BasePolynomialError"], [187, 1, 1, "", "CoercionFailed"], [187, 1, 1, "", "ComputationFailed"], [187, 1, 1, "", "DomainError"], [187, 1, 1, "", "EvaluationFailed"], [187, 1, 1, "", "ExactQuotientFailed"], [187, 1, 1, "", "ExtraneousFactors"], [187, 1, 1, "", "FlagError"], [187, 1, 1, "", "GeneratorsError"], [187, 1, 1, "", "GeneratorsNeeded"], [187, 1, 1, "", "HeuristicGCDFailed"], [187, 1, 1, "", "HomomorphismFailed"], [187, 1, 1, "", "IsomorphismFailed"], [187, 1, 1, "", "MultivariatePolynomialError"], [187, 1, 1, "", "NotAlgebraic"], [187, 1, 1, "", "NotInvertible"], [187, 1, 1, "", "NotReversible"], [187, 1, 1, "", "OperationNotSupported"], [187, 1, 1, "", "OptionError"], [187, 1, 1, "", "PolificationFailed"], [187, 1, 1, "", "PolynomialError"], [187, 1, 1, "", "RefinementFailed"], [187, 1, 1, "", "UnificationFailed"], [187, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[190, 3, 1, "", "horner"], [190, 3, 1, "", "interpolate"], [190, 3, 1, "", "symmetrize"], [190, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[187, 1, 1, "", "Options"], [187, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[187, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[190, 3, 1, "", "roots"]], "sympy.polys.polytools": [[190, 1, 1, "", "GroebnerBasis"], [190, 3, 1, "", "LC"], [190, 3, 1, "", "LM"], [190, 3, 1, "", "LT"], [190, 1, 1, "", "Poly"], [190, 1, 1, "", "PurePoly"], [190, 3, 1, "", "cancel"], [190, 3, 1, "", "cofactors"], [190, 3, 1, "", "compose"], [190, 3, 1, "", "content"], [190, 3, 1, "", "count_roots"], [190, 3, 1, "", "decompose"], [190, 3, 1, "", "degree"], [190, 3, 1, "", "degree_list"], [190, 3, 1, "", "discriminant"], [190, 3, 1, "", "div"], [190, 3, 1, "", "exquo"], [190, 3, 1, "", "factor"], [190, 3, 1, "", "factor_list"], [190, 3, 1, "", "gcd"], [190, 3, 1, "", "gcd_list"], [190, 3, 1, "", "gcdex"], [190, 3, 1, "", "gff"], [190, 3, 1, "", "gff_list"], [190, 3, 1, "", "groebner"], [190, 3, 1, "", "ground_roots"], [190, 3, 1, "", "half_gcdex"], [190, 3, 1, "", "intervals"], [190, 3, 1, "", "invert"], [190, 3, 1, "", "is_zero_dimensional"], [190, 3, 1, "", "lcm"], [190, 3, 1, "", "lcm_list"], [190, 3, 1, "", "monic"], [190, 3, 1, "", "nroots"], [190, 3, 1, "", "nth_power_roots_poly"], [190, 3, 1, "", "parallel_poly_from_expr"], [190, 3, 1, "", "pdiv"], [190, 3, 1, "", "pexquo"], [190, 3, 1, "", "poly"], [190, 3, 1, "", "poly_from_expr"], [190, 3, 1, "", "pquo"], [190, 3, 1, "", "prem"], [190, 3, 1, "", "primitive"], [190, 3, 1, "", "quo"], [190, 3, 1, "", "real_roots"], [190, 3, 1, "", "reduced"], [190, 3, 1, "", "refine_root"], [190, 3, 1, "", "rem"], [190, 3, 1, "", "resultant"], [190, 3, 1, "", "sqf"], [190, 3, 1, "", "sqf_list"], [190, 3, 1, "", "sqf_norm"], [190, 3, 1, "", "sqf_part"], [190, 3, 1, "", "sturm"], [190, 3, 1, "", "subresultants"], [190, 3, 1, "", "terms_gcd"], [190, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[190, 2, 1, "", "contains"], [190, 2, 1, "", "fglm"], [190, 4, 1, "", "is_zero_dimensional"], [190, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[190, 2, 1, "", "EC"], [190, 2, 1, "", "EM"], [190, 2, 1, "", "ET"], [190, 2, 1, "", "LC"], [190, 2, 1, "", "LM"], [190, 2, 1, "", "LT"], [190, 2, 1, "", "TC"], [190, 2, 1, "", "abs"], [190, 2, 1, "", "add"], [190, 2, 1, "", "add_ground"], [190, 2, 1, "", "all_coeffs"], [190, 2, 1, "", "all_monoms"], [190, 2, 1, "", "all_roots"], [190, 2, 1, "", "all_terms"], [190, 2, 1, "", "as_dict"], [190, 2, 1, "", "as_expr"], [190, 2, 1, "", "as_list"], [190, 2, 1, "", "as_poly"], [190, 2, 1, "", "cancel"], [190, 2, 1, "", "clear_denoms"], [190, 2, 1, "", "coeff_monomial"], [190, 2, 1, "", "coeffs"], [190, 2, 1, "", "cofactors"], [190, 2, 1, "", "compose"], [190, 2, 1, "", "content"], [190, 2, 1, "", "count_roots"], [190, 2, 1, "", "decompose"], [190, 2, 1, "", "deflate"], [190, 2, 1, "", "degree"], [190, 2, 1, "", "degree_list"], [190, 2, 1, "", "diff"], [190, 2, 1, "", "discriminant"], [190, 2, 1, "", "dispersion"], [190, 2, 1, "", "dispersionset"], [190, 2, 1, "", "div"], [190, 4, 1, "", "domain"], [190, 2, 1, "", "eject"], [190, 2, 1, "", "eval"], [190, 2, 1, "", "exclude"], [190, 2, 1, "", "exquo"], [190, 2, 1, "", "exquo_ground"], [190, 2, 1, "", "factor_list"], [190, 2, 1, "", "factor_list_include"], [190, 4, 1, "", "free_symbols"], [190, 4, 1, "", "free_symbols_in_domain"], [190, 2, 1, "", "from_dict"], [190, 2, 1, "", "from_expr"], [190, 2, 1, "", "from_list"], [190, 2, 1, "", "from_poly"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "gcdex"], [190, 4, 1, "", "gen"], [190, 2, 1, "", "get_domain"], [190, 2, 1, "", "get_modulus"], [190, 2, 1, "", "gff_list"], [190, 2, 1, "", "ground_roots"], [190, 2, 1, "", "half_gcdex"], [190, 2, 1, "", "has_only_gens"], [190, 2, 1, "", "homogeneous_order"], [190, 2, 1, "", "homogenize"], [190, 2, 1, "", "inject"], [190, 2, 1, "", "integrate"], [190, 2, 1, "", "intervals"], [190, 2, 1, "", "invert"], [190, 4, 1, "", "is_cyclotomic"], [190, 4, 1, "", "is_ground"], [190, 4, 1, "", "is_homogeneous"], [190, 4, 1, "", "is_irreducible"], [190, 4, 1, "", "is_linear"], [190, 4, 1, "", "is_monic"], [190, 4, 1, "", "is_monomial"], [190, 4, 1, "", "is_multivariate"], [190, 4, 1, "", "is_one"], [190, 4, 1, "", "is_primitive"], [190, 4, 1, "", "is_quadratic"], [190, 4, 1, "", "is_sqf"], [190, 4, 1, "", "is_univariate"], [190, 4, 1, "", "is_zero"], [190, 2, 1, "", "l1_norm"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "length"], [190, 2, 1, "", "lift"], [190, 2, 1, "", "ltrim"], [190, 2, 1, "", "match"], [190, 2, 1, "", "max_norm"], [190, 2, 1, "", "monic"], [190, 2, 1, "", "monoms"], [190, 2, 1, "", "mul"], [190, 2, 1, "", "mul_ground"], [190, 2, 1, "", "neg"], [190, 2, 1, "", "new"], [190, 2, 1, "", "norm"], [190, 2, 1, "", "nroots"], [190, 2, 1, "", "nth"], [190, 2, 1, "", "nth_power_roots_poly"], [190, 4, 1, "", "one"], [190, 2, 1, "", "pdiv"], [190, 2, 1, "", "per"], [190, 2, 1, "", "pexquo"], [190, 2, 1, "", "pow"], [190, 2, 1, "", "pquo"], [190, 2, 1, "", "prem"], [190, 2, 1, "", "primitive"], [190, 2, 1, "", "quo"], [190, 2, 1, "", "quo_ground"], [190, 2, 1, "", "rat_clear_denoms"], [190, 2, 1, "", "real_roots"], [190, 2, 1, "", "refine_root"], [190, 2, 1, "", "rem"], [190, 2, 1, "", "reorder"], [190, 2, 1, "", "replace"], [190, 2, 1, "", "resultant"], [190, 2, 1, "", "retract"], [190, 2, 1, "", "revert"], [190, 2, 1, "", "root"], [190, 2, 1, "", "same_root"], [190, 2, 1, "", "set_domain"], [190, 2, 1, "", "set_modulus"], [190, 2, 1, "", "shift"], [190, 2, 1, "", "slice"], [190, 2, 1, "", "sqf_list"], [190, 2, 1, "", "sqf_list_include"], [190, 2, 1, "", "sqf_norm"], [190, 2, 1, "", "sqf_part"], [190, 2, 1, "", "sqr"], [190, 2, 1, "", "sturm"], [190, 2, 1, "", "sub"], [190, 2, 1, "", "sub_ground"], [190, 2, 1, "", "subresultants"], [190, 2, 1, "", "terms"], [190, 2, 1, "", "terms_gcd"], [190, 2, 1, "", "termwise"], [190, 2, 1, "", "to_exact"], [190, 2, 1, "", "to_field"], [190, 2, 1, "", "to_ring"], [190, 2, 1, "", "total_degree"], [190, 2, 1, "", "transform"], [190, 2, 1, "", "trunc"], [190, 2, 1, "", "unify"], [190, 4, 1, "", "unit"], [190, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[190, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[190, 3, 1, "", "together"]], "sympy.polys.ring_series": [[191, 3, 1, "", "_tan1"], [191, 3, 1, "", "mul_xin"], [191, 3, 1, "", "pow_xin"], [191, 3, 1, "", "rs_LambertW"], [191, 3, 1, "", "rs_asin"], [191, 3, 1, "", "rs_atan"], [191, 3, 1, "", "rs_atanh"], [191, 3, 1, "", "rs_compose_add"], [191, 3, 1, "", "rs_cos"], [191, 3, 1, "", "rs_cos_sin"], [191, 3, 1, "", "rs_cosh"], [191, 3, 1, "", "rs_cot"], [191, 3, 1, "", "rs_diff"], [191, 3, 1, "", "rs_exp"], [191, 3, 1, "", "rs_fun"], [191, 3, 1, "", "rs_hadamard_exp"], [191, 3, 1, "", "rs_integrate"], [191, 3, 1, "", "rs_is_puiseux"], [191, 3, 1, "", "rs_log"], [191, 3, 1, "", "rs_mul"], [191, 3, 1, "", "rs_newton"], [191, 3, 1, "", "rs_nth_root"], [191, 3, 1, "", "rs_pow"], [191, 3, 1, "", "rs_puiseux"], [191, 3, 1, "", "rs_puiseux2"], [191, 3, 1, "", "rs_series_from_list"], [191, 3, 1, "", "rs_series_inversion"], [191, 3, 1, "", "rs_series_reversion"], [191, 3, 1, "", "rs_sin"], [191, 3, 1, "", "rs_sinh"], [191, 3, 1, "", "rs_square"], [191, 3, 1, "", "rs_subs"], [191, 3, 1, "", "rs_tan"], [191, 3, 1, "", "rs_tanh"], [191, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[185, 1, 1, "", "PolyElement"], [185, 1, 1, "", "PolyRing"], [185, 3, 1, "", "ring"], [185, 3, 1, "", "sring"], [185, 3, 1, "", "vring"], [185, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[185, 2, 1, "", "almosteq"], [185, 2, 1, "", "cancel"], [185, 2, 1, "", "coeff"], [185, 2, 1, "", "coeffs"], [185, 2, 1, "", "const"], [185, 2, 1, "", "content"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "degree"], [185, 2, 1, "", "degrees"], [185, 2, 1, "", "diff"], [185, 2, 1, "", "div"], [185, 2, 1, "", "imul_num"], [185, 2, 1, "", "itercoeffs"], [185, 2, 1, "", "itermonoms"], [185, 2, 1, "", "iterterms"], [185, 2, 1, "", "leading_expv"], [185, 2, 1, "", "leading_monom"], [185, 2, 1, "", "leading_term"], [185, 2, 1, "", "listcoeffs"], [185, 2, 1, "", "listmonoms"], [185, 2, 1, "", "listterms"], [185, 2, 1, "", "monic"], [185, 2, 1, "", "monoms"], [185, 2, 1, "", "primitive"], [185, 2, 1, "", "square"], [185, 2, 1, "", "strip_zero"], [185, 2, 1, "", "tail_degree"], [185, 2, 1, "", "tail_degrees"], [185, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[185, 2, 1, "", "add"], [185, 2, 1, "", "add_gens"], [185, 2, 1, "", "compose"], [185, 2, 1, "", "drop"], [185, 2, 1, "", "drop_to_ground"], [185, 2, 1, "", "index"], [185, 2, 1, "", "monomial_basis"], [185, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[190, 1, 1, "", "ComplexRootOf"], [190, 1, 1, "", "RootOf"], [190, 1, 1, "", "RootSum"], [190, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[190, 2, 1, "", "_all_roots"], [190, 2, 1, "", "_complexes_index"], [190, 2, 1, "", "_complexes_sorted"], [190, 2, 1, "", "_count_roots"], [190, 2, 1, "", "_ensure_complexes_init"], [190, 2, 1, "", "_ensure_reals_init"], [190, 2, 1, "", "_eval_evalf"], [190, 2, 1, "", "_eval_is_imaginary"], [190, 2, 1, "", "_eval_is_real"], [190, 2, 1, "", "_get_complexes"], [190, 2, 1, "", "_get_complexes_sqf"], [190, 2, 1, "", "_get_interval"], [190, 2, 1, "", "_get_reals"], [190, 2, 1, "", "_get_reals_sqf"], [190, 2, 1, "", "_get_roots"], [190, 2, 1, "", "_indexed_root"], [190, 2, 1, "", "_new"], [190, 2, 1, "", "_postprocess_root"], [190, 2, 1, "", "_preprocess_roots"], [190, 2, 1, "", "_real_roots"], [190, 2, 1, "", "_reals_index"], [190, 2, 1, "", "_reals_sorted"], [190, 2, 1, "", "_refine_complexes"], [190, 2, 1, "", "_reset"], [190, 2, 1, "", "_roots_trivial"], [190, 2, 1, "", "_set_interval"], [190, 2, 1, "", "all_roots"], [190, 2, 1, "", "clear_cache"], [190, 2, 1, "", "eval_approx"], [190, 2, 1, "", "eval_rational"], [190, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[190, 2, 1, "", "new"]], "sympy.polys.solvers": [[192, 3, 1, "", "_solve_lin_sys"], [192, 3, 1, "", "_solve_lin_sys_component"], [192, 3, 1, "", "eqs_to_matrix"], [192, 3, 1, "", "solve_lin_sys"], [192, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[190, 3, 1, "", "cyclotomic_poly"], [190, 3, 1, "", "interpolating_poly"], [190, 3, 1, "", "random_poly"], [190, 3, 1, "", "swinnerton_dyer_poly"], [190, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[194, 0, 0, "-", "aesaracode"], [194, 0, 0, "-", "c"], [194, 0, 0, "-", "codeprinter"], [194, 0, 0, "-", "conventions"], [194, 0, 0, "-", "cxx"], [194, 0, 0, "-", "fortran"], [194, 0, 0, "-", "gtk"], [194, 0, 0, "-", "jscode"], [194, 0, 0, "-", "julia"], [194, 0, 0, "-", "lambdarepr"], [194, 0, 0, "-", "latex"], [194, 0, 0, "-", "maple"], [194, 0, 0, "-", "mathematica"], [194, 0, 0, "-", "mathml"], [194, 0, 0, "-", "octave"], [194, 0, 0, "-", "precedence"], [194, 0, 0, "-", "pretty"], [194, 0, 0, "-", "preview"], [194, 0, 0, "-", "printer"], [194, 0, 0, "-", "pycode"], [194, 0, 0, "-", "python"], [194, 0, 0, "-", "rcode"], [194, 0, 0, "-", "repr"], [194, 0, 0, "-", "rust"], [194, 0, 0, "-", "str"], [194, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[194, 1, 1, "", "AesaraPrinter"], [194, 3, 1, "", "aesara_code"], [194, 3, 1, "", "aesara_function"], [194, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[194, 2, 1, "", "doprint"], [194, 5, 1, "", "printmethod"]], "sympy.printing.c": [[194, 1, 1, "", "C89CodePrinter"], [194, 1, 1, "", "C99CodePrinter"], [194, 3, 1, "", "ccode"], [194, 6, 1, "", "known_functions_C89"], [194, 6, 1, "", "known_functions_C99"], [194, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[194, 2, 1, "", "indent_code"], [194, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[194, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[194, 7, 1, "", "AssignmentError"], [194, 1, 1, "", "CodePrinter"], [194, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[194, 2, 1, "", "doprint"], [194, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[194, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[194, 1, 1, "", "CXX11CodePrinter"], [194, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[194, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[194, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[194, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[194, 1, 1, "", "FCodePrinter"], [194, 3, 1, "", "fcode"], [194, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[194, 2, 1, "", "indent_code"], [194, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[194, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[194, 1, 1, "", "JavascriptCodePrinter"], [194, 3, 1, "", "jscode"], [194, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[194, 2, 1, "", "indent_code"], [194, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[194, 1, 1, "", "JuliaCodePrinter"], [194, 3, 1, "", "julia_code"], [194, 6, 1, "", "known_fcns_src1"], [194, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[194, 2, 1, "", "indent_code"], [194, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[194, 1, 1, "", "LambdaPrinter"], [194, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[194, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[194, 1, 1, "", "LatexPrinter"], [194, 6, 1, "", "accepted_latex_functions"], [194, 3, 1, "", "latex"], [194, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[194, 2, 1, "", "parenthesize_super"], [194, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[194, 1, 1, "", "MapleCodePrinter"], [194, 3, 1, "", "maple_code"], [194, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[194, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[194, 1, 1, "", "MCodePrinter"], [194, 6, 1, "", "known_functions"], [194, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[194, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[194, 1, 1, "", "MathMLContentPrinter"], [194, 1, 1, "", "MathMLPresentationPrinter"], [194, 1, 1, "", "MathMLPrinterBase"], [194, 3, 1, "", "mathml"], [194, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[194, 2, 1, "", "mathml_tag"], [194, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[194, 2, 1, "", "mathml_tag"], [194, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[194, 2, 1, "", "doprint"]], "sympy.printing.octave": [[194, 1, 1, "", "OctaveCodePrinter"], [194, 6, 1, "", "known_fcns_src1"], [194, 6, 1, "", "known_fcns_src2"], [194, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[194, 2, 1, "", "indent_code"], [194, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[194, 6, 1, "", "PRECEDENCE"], [194, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [194, 6, 1, "", "PRECEDENCE_VALUES"], [194, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[194, 0, 0, "-", "pretty"], [194, 0, 0, "-", "pretty_symbology"], [194, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[194, 1, 1, "", "PrettyPrinter"], [194, 3, 1, "", "pretty"], [194, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[194, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[194, 3, 1, "", "G"], [194, 3, 1, "", "U"], [194, 3, 1, "", "VF"], [194, 3, 1, "", "annotated"], [194, 6, 1, "", "atoms_table"], [194, 6, 1, "", "digit_2txt"], [194, 6, 1, "", "frac"], [194, 3, 1, "", "g"], [194, 6, 1, "", "greek_letters"], [194, 3, 1, "", "hobj"], [194, 3, 1, "", "pretty_atom"], [194, 3, 1, "", "pretty_symbol"], [194, 3, 1, "", "pretty_try_use_unicode"], [194, 3, 1, "", "pretty_use_unicode"], [194, 6, 1, "", "root"], [194, 6, 1, "", "sub"], [194, 6, 1, "", "sup"], [194, 6, 1, "", "symb_2txt"], [194, 3, 1, "", "vobj"], [194, 3, 1, "", "xobj"], [194, 3, 1, "", "xstr"], [194, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[194, 1, 1, "", "prettyForm"], [194, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[194, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[194, 2, 1, "", "above"], [194, 2, 1, "", "below"], [194, 2, 1, "", "height"], [194, 2, 1, "", "left"], [194, 2, 1, "", "leftslash"], [194, 2, 1, "", "next"], [194, 2, 1, "", "parens"], [194, 2, 1, "", "render"], [194, 2, 1, "", "right"], [194, 2, 1, "", "root"], [194, 2, 1, "", "stack"], [194, 2, 1, "", "terminal_width"], [194, 2, 1, "", "width"]], "sympy.printing.preview": [[194, 3, 1, "", "preview"]], "sympy.printing.printer": [[194, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[194, 2, 1, "", "_print"], [194, 2, 1, "", "doprint"], [194, 5, 1, "", "printmethod"], [194, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[194, 1, 1, "", "MpmathPrinter"], [194, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[194, 1, 1, "", "RCodePrinter"], [194, 6, 1, "", "known_functions"], [194, 3, 1, "", "print_rcode"], [194, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[194, 2, 1, "", "indent_code"], [194, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[194, 1, 1, "", "ReprPrinter"], [194, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[194, 2, 1, "", "emptyPrinter"], [194, 5, 1, "", "printmethod"], [194, 2, 1, "", "reprify"]], "sympy.printing.rust": [[194, 1, 1, "", "RustCodePrinter"], [194, 6, 1, "", "known_functions"], [194, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[194, 2, 1, "", "indent_code"], [194, 5, 1, "", "printmethod"]], "sympy.printing.str": [[194, 1, 1, "", "StrPrinter"], [194, 3, 1, "", "sstr"], [194, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[194, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[194, 3, 1, "", "pprint_nodes"], [194, 3, 1, "", "print_node"], [194, 3, 1, "", "print_tree"], [194, 3, 1, "", "tree"]], "sympy.series.acceleration": [[201, 3, 1, "", "richardson"], [201, 3, 1, "", "shanks"]], "sympy.series.formal": [[196, 1, 1, "", "FiniteFormalPowerSeries"], [196, 1, 1, "", "FormalPowerSeries"], [196, 1, 1, "", "FormalPowerSeriesCompose"], [196, 1, 1, "", "FormalPowerSeriesInverse"], [196, 1, 1, "", "FormalPowerSeriesProduct"], [196, 3, 1, "", "compute_fps"], [196, 3, 1, "", "exp_re"], [196, 3, 1, "", "fps"], [196, 3, 1, "", "hyper_algorithm"], [196, 3, 1, "", "hyper_re"], [196, 3, 1, "", "rational_algorithm"], [196, 3, 1, "", "rational_independent"], [196, 3, 1, "", "rsolve_hypergeometric"], [196, 3, 1, "", "simpleDE"], [196, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[196, 2, 1, "", "coeff_bell"], [196, 2, 1, "", "compose"], [196, 4, 1, "", "infinite"], [196, 2, 1, "", "integrate"], [196, 2, 1, "", "inverse"], [196, 2, 1, "", "polynomial"], [196, 2, 1, "", "product"], [196, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[196, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[196, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[196, 4, 1, "", "function"]], "sympy.series.fourier": [[197, 1, 1, "", "FourierSeries"], [197, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[197, 2, 1, "", "scale"], [197, 2, 1, "", "scalex"], [197, 2, 1, "", "shift"], [197, 2, 1, "", "shiftx"], [197, 2, 1, "", "sigma_approximation"], [197, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[201, 1, 1, "", "SubsSet"], [201, 3, 1, "", "build_expression_tree"], [201, 3, 1, "", "calculate_series"], [201, 3, 1, "", "compare"], [201, 3, 1, "", "gruntz"], [201, 3, 1, "", "limitinf"], [201, 3, 1, "", "mrv"], [201, 3, 1, "", "mrv_leadterm"], [201, 3, 1, "", "mrv_max1"], [201, 3, 1, "", "mrv_max3"], [201, 3, 1, "", "rewrite"], [201, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[201, 2, 1, "", "copy"], [201, 2, 1, "", "do_subs"], [201, 2, 1, "", "meets"], [201, 2, 1, "", "union"]], "sympy.series.limits": [[201, 1, 1, "", "Limit"], [201, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[201, 2, 1, "", "doit"]], "sympy.series.limitseq": [[199, 3, 1, "", "difference_delta"], [199, 3, 1, "", "dominant"], [199, 3, 1, "", "limit_seq"]], "sympy.series.order": [[201, 1, 1, "", "Order"]], "sympy.series.order.Order": [[201, 2, 1, "", "contains"]], "sympy.series.residues": [[201, 3, 1, "", "residue"]], "sympy.series.sequences": [[200, 1, 1, "", "EmptySequence"], [200, 1, 1, "", "RecursiveSeq"], [200, 1, 1, "", "SeqAdd"], [200, 1, 1, "", "SeqBase"], [200, 1, 1, "", "SeqFormula"], [200, 1, 1, "", "SeqMul"], [200, 1, 1, "", "SeqPer"], [200, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[200, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[200, 4, 1, "", "initial"], [200, 4, 1, "", "interval"], [200, 4, 1, "", "n"], [200, 4, 1, "", "recurrence"], [200, 4, 1, "", "start"], [200, 4, 1, "", "stop"], [200, 4, 1, "", "y"], [200, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[200, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[200, 2, 1, "", "coeff"], [200, 2, 1, "", "coeff_mul"], [200, 2, 1, "", "find_linear_recurrence"], [200, 4, 1, "", "free_symbols"], [200, 4, 1, "", "gen"], [200, 4, 1, "", "interval"], [200, 4, 1, "", "length"], [200, 4, 1, "", "start"], [200, 4, 1, "", "stop"], [200, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[200, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[200, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[200, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[201, 3, 1, "", "series"]], "sympy.sets": [[202, 0, 0, "-", "conditionset"], [202, 0, 0, "-", "fancysets"], [202, 0, 0, "-", "powerset"], [202, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[202, 1, 1, "", "ConditionSet"], [202, 1, 1, "", "Contains"], [202, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[202, 1, 1, "", "CartesianComplexRegion"], [202, 1, 1, "", "ComplexRegion"], [202, 1, 1, "", "Complexes"], [202, 1, 1, "", "ImageSet"], [202, 1, 1, "", "Integers"], [202, 1, 1, "", "Naturals"], [202, 1, 1, "", "Naturals0"], [202, 1, 1, "", "PolarComplexRegion"], [202, 1, 1, "", "Range"], [202, 1, 1, "", "Rationals"], [202, 1, 1, "", "Reals"], [202, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[202, 4, 1, "", "a_interval"], [202, 4, 1, "", "b_interval"], [202, 2, 1, "", "from_real"], [202, 4, 1, "", "psets"], [202, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[202, 2, 1, "", "as_relational"], [202, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[202, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[202, 1, 1, "", "Complement"], [202, 1, 1, "", "DisjointUnion"], [202, 1, 1, "", "EmptySet"], [202, 1, 1, "", "FiniteSet"], [202, 1, 1, "", "Intersection"], [202, 1, 1, "", "Interval"], [202, 1, 1, "", "ProductSet"], [202, 1, 1, "", "Set"], [202, 1, 1, "", "SymmetricDifference"], [202, 1, 1, "", "Union"], [202, 1, 1, "", "UniversalSet"], [202, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[202, 2, 1, "", "as_relational"], [202, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[202, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[202, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[202, 2, 1, "", "Lopen"], [202, 2, 1, "", "Ropen"], [202, 2, 1, "", "as_relational"], [202, 4, 1, "", "end"], [202, 4, 1, "", "is_left_unbounded"], [202, 4, 1, "", "is_right_unbounded"], [202, 4, 1, "", "left_open"], [202, 2, 1, "", "open"], [202, 4, 1, "", "right_open"], [202, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[202, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[202, 4, 1, "", "boundary"], [202, 4, 1, "", "closure"], [202, 2, 1, "", "complement"], [202, 2, 1, "", "contains"], [202, 4, 1, "", "inf"], [202, 4, 1, "", "interior"], [202, 2, 1, "", "intersect"], [202, 2, 1, "", "intersection"], [202, 4, 1, "", "is_closed"], [202, 2, 1, "", "is_disjoint"], [202, 4, 1, "", "is_open"], [202, 2, 1, "", "is_proper_subset"], [202, 2, 1, "", "is_proper_superset"], [202, 2, 1, "", "is_subset"], [202, 2, 1, "", "is_superset"], [202, 2, 1, "", "isdisjoint"], [202, 2, 1, "", "issubset"], [202, 2, 1, "", "issuperset"], [202, 4, 1, "", "kind"], [202, 4, 1, "", "measure"], [202, 2, 1, "", "powerset"], [202, 4, 1, "", "sup"], [202, 2, 1, "", "symmetric_difference"], [202, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[202, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[202, 2, 1, "", "as_relational"]], "sympy.simplify": [[206, 0, 0, "-", "combsimp"], [206, 0, 0, "-", "cse_main"], [206, 0, 0, "-", "epathtools"], [206, 0, 0, "-", "hyperexpand"], [204, 0, 0, "-", "hyperexpand_doc"], [206, 0, 0, "-", "powsimp"], [206, 0, 0, "-", "radsimp"], [206, 0, 0, "-", "ratsimp"], [2, 0, 0, "-", "simplify"], [206, 0, 0, "-", "sqrtdenest"], [206, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[206, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[206, 3, 1, "", "cse"], [206, 3, 1, "", "opt_cse"], [206, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[206, 1, 1, "", "EPath"], [206, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[206, 2, 1, "", "apply"], [206, 2, 1, "", "select"]], "sympy.simplify.fu": [[203, 3, 1, "", "TR0"], [203, 3, 1, "", "TR1"], [203, 3, 1, "", "TR10"], [203, 3, 1, "", "TR10i"], [203, 3, 1, "", "TR11"], [203, 3, 1, "", "TR111"], [203, 3, 1, "", "TR12"], [203, 3, 1, "", "TR12i"], [203, 3, 1, "", "TR13"], [203, 3, 1, "", "TR14"], [203, 3, 1, "", "TR15"], [203, 3, 1, "", "TR16"], [203, 3, 1, "", "TR2"], [203, 3, 1, "", "TR22"], [203, 3, 1, "", "TR2i"], [203, 3, 1, "", "TR3"], [203, 3, 1, "", "TR4"], [203, 3, 1, "", "TR5"], [203, 3, 1, "", "TR6"], [203, 3, 1, "", "TR7"], [203, 3, 1, "", "TR8"], [203, 3, 1, "", "TR9"], [203, 3, 1, "", "TRmorrie"], [203, 3, 1, "", "TRpower"], [203, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[206, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[206, 3, 1, "", "powdenest"], [206, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[206, 3, 1, "", "collect"], [206, 3, 1, "", "collect_const"], [206, 3, 1, "", "collect_sqrt"], [206, 3, 1, "", "fraction"], [206, 3, 1, "", "rad_rationalize"], [206, 3, 1, "", "radsimp"], [206, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[206, 3, 1, "", "ratsimp"], [206, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[206, 3, 1, "", "besselsimp"], [206, 3, 1, "", "hypersimilar"], [206, 3, 1, "", "hypersimp"], [206, 3, 1, "", "kroneckersimp"], [206, 3, 1, "", "logcombine"], [206, 3, 1, "", "nsimplify"], [206, 3, 1, "", "nthroot"], [206, 3, 1, "", "posify"], [206, 3, 1, "", "separatevars"], [206, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[206, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[206, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[212, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[207, 1, 1, "", "BinaryQuadratic"], [207, 1, 1, "", "CubicThue"], [207, 1, 1, "", "DiophantineEquationType"], [207, 1, 1, "", "DiophantineSolutionSet"], [207, 1, 1, "", "GeneralPythagorean"], [207, 1, 1, "", "GeneralSumOfEvenPowers"], [207, 1, 1, "", "GeneralSumOfSquares"], [207, 1, 1, "", "HomogeneousGeneralQuadratic"], [207, 1, 1, "", "HomogeneousTernaryQuadratic"], [207, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [207, 1, 1, "", "InhomogeneousGeneralQuadratic"], [207, 1, 1, "", "InhomogeneousTernaryQuadratic"], [207, 1, 1, "", "Linear"], [207, 3, 1, "", "PQa"], [207, 1, 1, "", "Univariate"], [207, 3, 1, "", "base_solution_linear"], [207, 3, 1, "", "classify_diop"], [207, 3, 1, "", "cornacchia"], [207, 3, 1, "", "descent"], [207, 3, 1, "", "diop_DN"], [207, 3, 1, "", "diop_bf_DN"], [207, 3, 1, "", "diop_general_pythagorean"], [207, 3, 1, "", "diop_general_sum_of_even_powers"], [207, 3, 1, "", "diop_general_sum_of_squares"], [207, 3, 1, "", "diop_linear"], [207, 3, 1, "", "diop_quadratic"], [207, 3, 1, "", "diop_solve"], [207, 3, 1, "", "diop_ternary_quadratic"], [207, 3, 1, "", "diop_ternary_quadratic_normal"], [207, 3, 1, "", "diophantine"], [207, 3, 1, "", "divisible"], [207, 3, 1, "", "equivalent"], [207, 3, 1, "", "find_DN"], [207, 3, 1, "", "gaussian_reduce"], [207, 3, 1, "", "holzer"], [207, 3, 1, "", "ldescent"], [207, 3, 1, "", "merge_solution"], [207, 3, 1, "", "parametrize_ternary_quadratic"], [207, 3, 1, "", "partition"], [207, 3, 1, "", "power_representation"], [207, 3, 1, "", "prime_as_sum_of_two_squares"], [207, 3, 1, "", "reconstruct"], [207, 3, 1, "", "sqf_normal"], [207, 3, 1, "", "square_factor"], [207, 3, 1, "", "sum_of_four_squares"], [207, 3, 1, "", "sum_of_powers"], [207, 3, 1, "", "sum_of_squares"], [207, 3, 1, "", "sum_of_three_squares"], [207, 3, 1, "", "transformation_to_DN"], [207, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[207, 2, 1, "", "matches"]], "sympy.solvers": [[209, 0, 0, "-", "inequalities"], [210, 0, 0, "-", "ode"], [211, 0, 0, "-", "pde"], [212, 0, 0, "-", "recurr"], [213, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[209, 3, 1, "", "reduce_abs_inequalities"], [209, 3, 1, "", "reduce_abs_inequality"], [209, 3, 1, "", "reduce_inequalities"], [209, 3, 1, "", "reduce_rational_inequalities"], [209, 3, 1, "", "solve_poly_inequalities"], [209, 3, 1, "", "solve_poly_inequality"], [209, 3, 1, "", "solve_rational_inequalities"], [209, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[210, 6, 1, "", "allhints"], [210, 3, 1, "", "checkinfsol"], [210, 3, 1, "", "checkodesol"], [210, 3, 1, "", "classify_ode"], [210, 3, 1, "", "constantsimp"], [210, 3, 1, "", "dsolve"], [210, 3, 1, "", "homogeneous_order"], [210, 3, 1, "", "infinitesimals"], [210, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[210, 3, 1, "", "lie_heuristic_abaco1_product"], [210, 3, 1, "", "lie_heuristic_abaco1_simple"], [210, 3, 1, "", "lie_heuristic_abaco2_similar"], [210, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [210, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [210, 3, 1, "", "lie_heuristic_bivariate"], [210, 3, 1, "", "lie_heuristic_chi"], [210, 3, 1, "", "lie_heuristic_function_sum"], [210, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[210, 3, 1, "", "_handle_Integral"], [210, 3, 1, "", "_linear_2eq_order1_type6"], [210, 3, 1, "", "_linear_2eq_order1_type7"], [210, 3, 1, "", "_nonlinear_2eq_order1_type1"], [210, 3, 1, "", "_nonlinear_2eq_order1_type2"], [210, 3, 1, "", "_nonlinear_2eq_order1_type3"], [210, 3, 1, "", "_nonlinear_2eq_order1_type4"], [210, 3, 1, "", "_nonlinear_2eq_order1_type5"], [210, 3, 1, "", "_nonlinear_3eq_order1_type1"], [210, 3, 1, "", "_nonlinear_3eq_order1_type2"], [210, 3, 1, "", "_nonlinear_3eq_order1_type3"], [210, 3, 1, "", "_nonlinear_3eq_order1_type4"], [210, 3, 1, "", "_nonlinear_3eq_order1_type5"], [210, 3, 1, "", "constant_renumber"], [210, 3, 1, "", "ode_1st_power_series"], [210, 3, 1, "", "ode_2nd_power_series_ordinary"], [210, 3, 1, "", "ode_2nd_power_series_regular"], [210, 3, 1, "", "ode_sol_simplicity"], [210, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[210, 3, 1, "", "compute_m_ybar"], [210, 3, 1, "", "construct_c"], [210, 3, 1, "", "construct_d"], [210, 3, 1, "", "get_gen_sol_from_part_sol"], [210, 3, 1, "", "rational_laurent_series"], [210, 3, 1, "", "remove_redundant_sols"], [210, 3, 1, "", "riccati_inverse_normal"], [210, 3, 1, "", "riccati_normal"], [210, 3, 1, "", "riccati_reduced"], [210, 3, 1, "", "solve_aux_eq"], [210, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[210, 1, 1, "", "AlmostLinear"], [210, 1, 1, "", "Bernoulli"], [210, 1, 1, "", "Factorable"], [210, 1, 1, "", "FirstExact"], [210, 1, 1, "", "FirstLinear"], [210, 1, 1, "", "HomogeneousCoeffBest"], [210, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [210, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [210, 1, 1, "", "LieGroup"], [210, 1, 1, "", "LinearCoefficients"], [210, 1, 1, "", "Liouville"], [210, 1, 1, "", "NthAlgebraic"], [210, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [210, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [210, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [210, 1, 1, "", "NthLinearEulerEqHomogeneous"], [210, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [210, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [210, 1, 1, "", "NthOrderReducible"], [210, 1, 1, "", "RationalRiccati"], [210, 1, 1, "", "RiccatiSpecial"], [210, 1, 1, "", "SecondHypergeometric"], [210, 1, 1, "", "SecondLinearAiry"], [210, 1, 1, "", "SecondLinearBessel"], [210, 1, 1, "", "Separable"], [210, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[210, 3, 1, "", "canonical_odes"], [210, 3, 1, "", "dsolve_system"], [210, 3, 1, "", "linear_ode_to_matrix"], [210, 3, 1, "", "linodesolve"], [210, 3, 1, "", "linodesolve_type"], [210, 3, 1, "", "matrix_exp"], [210, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[211, 3, 1, "", "checkpdesol"], [211, 3, 1, "", "classify_pde"], [211, 3, 1, "", "pde_1st_linear_constant_coeff"], [211, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [211, 3, 1, "", "pde_1st_linear_variable_coeff"], [211, 3, 1, "", "pde_separate"], [211, 3, 1, "", "pde_separate_add"], [211, 3, 1, "", "pde_separate_mul"], [211, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[212, 3, 1, "", "solve_poly_system"], [212, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[212, 3, 1, "", "rsolve"], [212, 3, 1, "", "rsolve_hyper"], [212, 3, 1, "", "rsolve_poly"], [212, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[212, 3, 1, "", "checksol"], [212, 3, 1, "", "nsolve"], [212, 3, 1, "", "solve"], [212, 3, 1, "", "solve_linear"], [212, 3, 1, "", "solve_linear_system"], [212, 3, 1, "", "solve_linear_system_LU"], [212, 3, 1, "", "solve_undetermined_coeffs"], [212, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[213, 3, 1, "", "_is_exponential"], [213, 3, 1, "", "_is_logarithmic"], [213, 3, 1, "", "_solve_exponential"], [213, 3, 1, "", "_solve_logarithm"], [213, 3, 1, "", "_transolve"], [213, 3, 1, "", "domain_check"], [213, 3, 1, "", "invert_complex"], [213, 3, 1, "", "invert_real"], [213, 3, 1, "", "linear_eq_to_matrix"], [213, 3, 1, "", "linsolve"], [213, 3, 1, "", "nonlinsolve"], [213, 3, 1, "", "solveset"], [213, 3, 1, "", "solveset_complex"], [213, 3, 1, "", "solveset_real"], [213, 3, 1, "", "solvify"]], "sympy.stats": [[214, 3, 1, "", "Arcsin"], [214, 3, 1, "", "Benini"], [214, 3, 1, "", "Bernoulli"], [214, 1, 1, "", "BernoulliProcess"], [214, 3, 1, "", "Beta"], [214, 3, 1, "", "BetaBinomial"], [214, 3, 1, "", "BetaNoncentral"], [214, 3, 1, "", "BetaPrime"], [214, 3, 1, "", "Binomial"], [214, 3, 1, "", "BoundedPareto"], [214, 3, 1, "", "Cauchy"], [214, 1, 1, "", "CentralMoment"], [214, 3, 1, "", "Chi"], [214, 3, 1, "", "ChiNoncentral"], [214, 3, 1, "", "ChiSquared"], [214, 3, 1, "", "Coin"], [214, 1, 1, "", "ContinuousMarkovChain"], [214, 3, 1, "", "ContinuousRV"], [214, 1, 1, "", "Covariance"], [214, 1, 1, "", "CrossCovarianceMatrix"], [214, 3, 1, "", "Dagum"], [214, 3, 1, "", "Die"], [214, 1, 1, "", "DiscreteMarkovChain"], [214, 3, 1, "", "DiscreteUniform"], [214, 3, 1, "", "E"], [214, 3, 1, "", "Erlang"], [214, 3, 1, "", "ExGaussian"], [214, 1, 1, "", "Expectation"], [214, 1, 1, "", "ExpectationMatrix"], [214, 3, 1, "", "Exponential"], [214, 3, 1, "", "FDistribution"], [214, 3, 1, "", "FiniteRV"], [214, 3, 1, "", "FisherZ"], [214, 3, 1, "", "Frechet"], [214, 3, 1, "", "Gamma"], [214, 3, 1, "", "GammaInverse"], [214, 1, 1, "", "GammaProcess"], [214, 3, 1, "", "GeneralizedMultivariateLogGamma"], [214, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [214, 3, 1, "", "Geometric"], [214, 3, 1, "", "Gompertz"], [214, 3, 1, "", "Gumbel"], [214, 3, 1, "", "Hermite"], [214, 3, 1, "", "Hypergeometric"], [214, 3, 1, "", "JointRV"], [214, 3, 1, "", "Kumaraswamy"], [214, 3, 1, "", "Laplace"], [214, 3, 1, "", "Levy"], [214, 3, 1, "", "LogLogistic"], [214, 3, 1, "", "LogNormal"], [214, 3, 1, "", "Logarithmic"], [214, 3, 1, "", "Logistic"], [214, 3, 1, "", "Lomax"], [214, 3, 1, "", "MatrixGamma"], [214, 3, 1, "", "MatrixNormal"], [214, 3, 1, "", "Maxwell"], [214, 1, 1, "", "Moment"], [214, 3, 1, "", "Moyal"], [214, 3, 1, "", "Multinomial"], [214, 3, 1, "", "MultivariateBeta"], [214, 3, 1, "", "MultivariateEwens"], [214, 3, 1, "", "MultivariateLaplace"], [214, 3, 1, "", "MultivariateNormal"], [214, 3, 1, "", "MultivariateT"], [214, 3, 1, "", "Nakagami"], [214, 3, 1, "", "NegativeBinomial"], [214, 3, 1, "", "NegativeMultinomial"], [214, 3, 1, "", "Normal"], [214, 3, 1, "", "NormalGamma"], [214, 3, 1, "", "P"], [214, 3, 1, "", "Pareto"], [214, 3, 1, "", "Poisson"], [214, 1, 1, "", "PoissonProcess"], [214, 3, 1, "", "PowerFunction"], [214, 1, 1, "", "Probability"], [214, 3, 1, "", "QuadraticU"], [214, 3, 1, "", "Rademacher"], [214, 3, 1, "", "RaisedCosine"], [214, 3, 1, "", "Rayleigh"], [214, 3, 1, "", "Reciprocal"], [214, 3, 1, "", "ShiftedGompertz"], [214, 3, 1, "", "Skellam"], [214, 3, 1, "", "StudentT"], [214, 3, 1, "", "Trapezoidal"], [214, 3, 1, "", "Triangular"], [214, 3, 1, "", "Uniform"], [214, 3, 1, "", "UniformSum"], [214, 1, 1, "", "Variance"], [214, 1, 1, "", "VarianceMatrix"], [214, 3, 1, "", "VonMises"], [214, 3, 1, "", "Wald"], [214, 3, 1, "", "Weibull"], [214, 1, 1, "", "WienerProcess"], [214, 3, 1, "", "WignerSemicircle"], [214, 3, 1, "", "Wishart"], [214, 3, 1, "", "YuleSimon"], [214, 3, 1, "", "Zeta"], [214, 3, 1, "", "cmoment"], [214, 3, 1, "", "correlation"], [214, 3, 1, "", "coskewness"], [214, 3, 1, "", "covariance"], [214, 0, 0, "-", "crv"], [214, 0, 0, "-", "crv_types"], [214, 3, 1, "", "density"], [214, 3, 1, "", "entropy"], [214, 3, 1, "", "factorial_moment"], [214, 0, 0, "-", "frv"], [214, 0, 0, "-", "frv_types"], [214, 3, 1, "", "given"], [214, 3, 1, "", "kurtosis"], [214, 3, 1, "", "marginal_distribution"], [214, 3, 1, "", "median"], [214, 3, 1, "", "moment"], [214, 3, 1, "", "quantile"], [214, 0, 0, "-", "rv"], [214, 3, 1, "", "sample"], [214, 3, 1, "", "sample_iter"], [214, 3, 1, "", "skewness"], [214, 3, 1, "", "std"], [214, 3, 1, "", "variance"], [214, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[214, 2, 1, "", "expectation"], [214, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[214, 2, 1, "", "absorbing_probabilities"], [214, 2, 1, "", "canonical_form"], [214, 2, 1, "", "communication_classes"], [214, 2, 1, "", "decompose"], [214, 2, 1, "", "fixed_row_vector"], [214, 2, 1, "", "fundamental_matrix"], [214, 4, 1, "", "limiting_distribution"], [214, 2, 1, "", "sample"], [214, 2, 1, "", "stationary_distribution"], [214, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[214, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[214, 1, 1, "", "ContinuousDomain"], [214, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[214, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[214, 3, 1, "", "Die"], [214, 3, 1, "", "Normal"]], "sympy.stats.frv": [[214, 1, 1, "", "FiniteDomain"], [214, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[214, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[214, 1, 1, "", "ConditionalDomain"], [214, 1, 1, "", "PSpace"], [214, 1, 1, "", "ProductDomain"], [214, 1, 1, "", "ProductPSpace"], [214, 1, 1, "", "RandomDomain"], [214, 1, 1, "", "RandomSymbol"], [214, 1, 1, "", "SingleDomain"], [214, 1, 1, "", "SinglePSpace"], [214, 3, 1, "", "pspace"], [214, 3, 1, "", "random_symbols"], [214, 3, 1, "", "rs_swap"], [214, 3, 1, "", "sampling_E"], [214, 3, 1, "", "sampling_P"], [214, 3, 1, "", "sampling_density"]], "sympy.tensor": [[215, 0, 0, "-", "array"], [218, 0, 0, "-", "index_methods"], [219, 0, 0, "-", "indexed"], [220, 0, 0, "-", "tensor"], [221, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[215, 1, 1, "", "ImmutableDenseNDimArray"], [215, 1, 1, "", "ImmutableSparseNDimArray"], [215, 1, 1, "", "MutableDenseNDimArray"], [215, 1, 1, "", "MutableSparseNDimArray"], [215, 3, 1, "", "derive_by_array"], [216, 0, 0, "-", "expressions"], [215, 3, 1, "", "permutedims"], [215, 3, 1, "", "tensorcontraction"], [215, 3, 1, "", "tensordiagonal"], [215, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[218, 3, 1, "", "get_contraction_structure"], [218, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[219, 1, 1, "", "Idx"], [219, 1, 1, "", "Indexed"], [219, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[219, 4, 1, "", "label"], [219, 4, 1, "", "lower"], [219, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[219, 4, 1, "", "base"], [219, 4, 1, "", "indices"], [219, 4, 1, "", "ranges"], [219, 4, 1, "", "rank"], [219, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[219, 4, 1, "", "label"], [219, 4, 1, "", "offset"], [219, 4, 1, "", "shape"], [219, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[220, 1, 1, "", "TensAdd"], [220, 1, 1, "", "TensExpr"], [220, 1, 1, "", "TensMul"], [220, 1, 1, "", "TensorHead"], [220, 1, 1, "", "TensorIndex"], [220, 1, 1, "", "TensorIndexType"], [220, 1, 1, "", "TensorSymmetry"], [220, 1, 1, "", "TensorType"], [220, 1, 1, "", "_TensorManager"], [220, 3, 1, "", "canon_bp"], [220, 3, 1, "", "riemann_cyclic"], [220, 3, 1, "", "riemann_cyclic_replace"], [220, 3, 1, "", "tensor_heads"], [220, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[220, 2, 1, "", "canon_bp"], [220, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[220, 2, 1, "", "get_matrix"], [220, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[220, 2, 1, "", "canon_bp"], [220, 2, 1, "", "contract_metric"], [220, 2, 1, "", "get_free_indices"], [220, 2, 1, "", "get_indices"], [220, 2, 1, "", "perm2tensor"], [220, 2, 1, "", "sorted_components"], [220, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[220, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[220, 2, 1, "", "direct_product"], [220, 2, 1, "", "fully_symmetric"], [220, 2, 1, "", "no_symmetry"], [220, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[220, 2, 1, "", "clear"], [220, 2, 1, "", "comm_i2symbol"], [220, 2, 1, "", "comm_symbols2i"], [220, 2, 1, "", "get_comm"], [220, 2, 1, "", "set_comm"], [220, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[221, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[223, 0, 0, "-", "pytest"], [224, 0, 0, "-", "randtest"], [225, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[223, 3, 1, "", "SKIP"], [223, 3, 1, "", "nocache_fail"], [223, 3, 1, "", "raises"], [223, 3, 1, "", "warns"], [223, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[225, 1, 1, "", "PyTestReporter"], [225, 1, 1, "", "Reporter"], [225, 1, 1, "", "SymPyDocTestFinder"], [225, 1, 1, "", "SymPyDocTestRunner"], [225, 1, 1, "", "SymPyOutputChecker"], [225, 1, 1, "", "SymPyTestResults"], [225, 3, 1, "", "convert_to_native_paths"], [225, 3, 1, "", "doctest"], [225, 3, 1, "", "get_sympy_dir"], [225, 3, 1, "", "raise_on_deprecated"], [225, 3, 1, "", "run_all_tests"], [225, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [225, 3, 1, "", "split_list"], [225, 3, 1, "", "sympytestfile"], [225, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[225, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[225, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[225, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[225, 5, 1, "", "attempted"], [225, 5, 1, "", "failed"]], "sympy.utilities": [[226, 0, 0, "-", "autowrap"], [227, 0, 0, "-", "codegen"], [228, 0, 0, "-", "decorator"], [229, 0, 0, "-", "enumerative"], [230, 0, 0, "-", "exceptions"], [232, 0, 0, "-", "iterables"], [233, 0, 0, "-", "lambdify"], [234, 0, 0, "-", "memoization"], [235, 0, 0, "-", "misc"], [236, 0, 0, "-", "pkgdata"], [237, 0, 0, "-", "source"], [238, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[226, 1, 1, "", "CodeWrapper"], [226, 1, 1, "", "CythonCodeWrapper"], [226, 1, 1, "", "DummyWrapper"], [226, 1, 1, "", "F2PyCodeWrapper"], [226, 1, 1, "", "UfuncifyCodeWrapper"], [226, 3, 1, "", "autowrap"], [226, 3, 1, "", "binary_function"], [226, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[226, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[226, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[227, 1, 1, "", "Argument"], [227, 1, 1, "", "CCodeGen"], [227, 1, 1, "", "CodeGen"], [227, 1, 1, "", "DataType"], [227, 1, 1, "", "FCodeGen"], [227, 1, 1, "", "JuliaCodeGen"], [227, 1, 1, "", "OctaveCodeGen"], [227, 1, 1, "", "OutputArgument"], [227, 1, 1, "", "Result"], [227, 1, 1, "", "Routine"], [227, 1, 1, "", "RustCodeGen"], [227, 3, 1, "", "codegen"], [227, 3, 1, "", "get_default_datatype"], [227, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[227, 2, 1, "", "dump_c"], [227, 2, 1, "", "dump_h"], [227, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[227, 2, 1, "", "dump_code"], [227, 2, 1, "", "routine"], [227, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[227, 2, 1, "", "dump_f95"], [227, 2, 1, "", "dump_h"], [227, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[227, 2, 1, "", "dump_jl"], [227, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[227, 2, 1, "", "dump_m"], [227, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[227, 4, 1, "", "result_variables"], [227, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[227, 2, 1, "", "dump_rs"], [227, 2, 1, "", "get_prototype"], [227, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[228, 3, 1, "", "conserve_mpmath_dps"], [228, 3, 1, "", "deprecated"], [228, 3, 1, "", "doctest_depends_on"], [228, 3, 1, "", "memoize_property"], [228, 1, 1, "", "no_attrs_in_subclass"], [228, 3, 1, "", "public"], [228, 3, 1, "", "threaded"], [228, 3, 1, "", "threaded_factory"], [228, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[229, 1, 1, "", "MultisetPartitionTraverser"], [229, 3, 1, "", "factoring_visitor"], [229, 3, 1, "", "list_visitor"], [229, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[229, 2, 1, "", "count_partitions"], [229, 2, 1, "", "enum_all"], [229, 2, 1, "", "enum_large"], [229, 2, 1, "", "enum_range"], [229, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[230, 7, 1, "", "SymPyDeprecationWarning"], [230, 3, 1, "", "ignore_warnings"], [230, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[232, 1, 1, "", "NotIterable"], [232, 3, 1, "", "binary_partitions"], [232, 3, 1, "", "bracelets"], [232, 3, 1, "", "capture"], [232, 3, 1, "", "common_prefix"], [232, 3, 1, "", "common_suffix"], [232, 3, 1, "", "connected_components"], [232, 3, 1, "", "dict_merge"], [232, 3, 1, "", "filter_symbols"], [232, 3, 1, "", "flatten"], [232, 3, 1, "", "generate_bell"], [232, 3, 1, "", "generate_derangements"], [232, 3, 1, "", "generate_involutions"], [232, 3, 1, "", "generate_oriented_forest"], [232, 3, 1, "", "group"], [232, 3, 1, "", "has_dups"], [232, 3, 1, "", "has_variety"], [232, 3, 1, "", "ibin"], [232, 3, 1, "", "iproduct"], [232, 3, 1, "", "is_palindromic"], [232, 3, 1, "", "is_sequence"], [232, 3, 1, "", "iterable"], [232, 3, 1, "", "kbins"], [232, 3, 1, "", "least_rotation"], [232, 3, 1, "", "minlex"], [232, 3, 1, "", "multiset"], [232, 3, 1, "", "multiset_combinations"], [232, 3, 1, "", "multiset_derangements"], [232, 3, 1, "", "multiset_partitions"], [232, 3, 1, "", "multiset_permutations"], [232, 3, 1, "", "necklaces"], [232, 3, 1, "", "numbered_symbols"], [232, 3, 1, "", "ordered_partitions"], [232, 3, 1, "", "partitions"], [232, 3, 1, "", "permute_signs"], [232, 3, 1, "", "postfixes"], [232, 3, 1, "", "prefixes"], [232, 3, 1, "", "random_derangement"], [232, 3, 1, "", "reshape"], [232, 3, 1, "", "rotate_left"], [232, 3, 1, "", "rotate_right"], [232, 3, 1, "", "rotations"], [232, 3, 1, "", "roundrobin"], [232, 3, 1, "", "runs"], [232, 3, 1, "", "sift"], [232, 3, 1, "", "signed_permutations"], [232, 3, 1, "", "strongly_connected_components"], [232, 3, 1, "", "subsets"], [232, 3, 1, "", "take"], [232, 3, 1, "", "topological_sort"], [232, 3, 1, "", "unflatten"], [232, 3, 1, "", "uniq"], [232, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[233, 3, 1, "", "implemented_function"], [233, 3, 1, "", "lambdastr"], [233, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[234, 3, 1, "", "assoc_recurrence_memo"], [234, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[235, 3, 1, "", "as_int"], [235, 3, 1, "", "debug"], [235, 3, 1, "", "debug_decorator"], [235, 3, 1, "", "filldedent"], [235, 3, 1, "", "find_executable"], [235, 3, 1, "", "func_name"], [235, 3, 1, "", "ordinal"], [235, 3, 1, "", "rawlines"], [235, 3, 1, "", "replace"], [235, 3, 1, "", "strlines"], [235, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[236, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[237, 3, 1, "", "get_class"], [237, 3, 1, "", "get_mod_func"], [237, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[238, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[239, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[239, 2, 1, "", "__init__"], [239, 2, 1, "", "create_new"], [239, 2, 1, "", "locate_new"], [239, 2, 1, "", "orient_new"], [239, 2, 1, "", "orient_new_axis"], [239, 2, 1, "", "orient_new_body"], [239, 2, 1, "", "orient_new_quaternion"], [239, 2, 1, "", "orient_new_space"], [239, 2, 1, "", "position_wrt"], [239, 2, 1, "", "rotation_matrix"], [239, 2, 1, "", "scalar_map"]], "sympy.vector": [[241, 3, 1, "", "curl"], [241, 3, 1, "", "divergence"], [241, 3, 1, "", "express"], [241, 3, 1, "", "gradient"], [241, 3, 1, "", "is_conservative"], [241, 3, 1, "", "is_solenoidal"], [241, 3, 1, "", "matrix_to_vector"], [241, 3, 1, "", "scalar_potential"], [241, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[239, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[239, 2, 1, "", "cross"], [239, 2, 1, "", "dot"], [239, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[239, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[239, 4, 1, "", "components"], [239, 2, 1, "", "cross"], [239, 2, 1, "", "dot"], [239, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[239, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[239, 2, 1, "", "multiplicity"], [239, 2, 1, "", "rational_parametrization"], [239, 2, 1, "", "regular_point"], [239, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[239, 1, 1, "", "ParametricIntegral"], [241, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[240, 1, 1, "", "AxisOrienter"], [240, 1, 1, "", "BodyOrienter"], [240, 1, 1, "", "Orienter"], [240, 1, 1, "", "QuaternionOrienter"], [240, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[240, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[240, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[240, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[240, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[239, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[239, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[239, 4, 1, "", "components"], [239, 2, 1, "", "cross"], [239, 2, 1, "", "dot"], [239, 2, 1, "", "magnitude"], [239, 2, 1, "", "normalize"], [239, 2, 1, "", "outer"], [239, 2, 1, "", "projection"], [239, 2, 1, "", "separate"], [239, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 2, 4, 5, 6, 9, 13, 14, 16, 19, 22, 32, 56, 73, 92, 127, 175, 184, 239, 241, 242, 245, 258, 260, 263], "list": [1, 2], "activ": 1, "deprec": [1, 12], "silenc": 1, "warn": [1, 230], "version": 1, "1": [1, 14, 75, 94, 112, 124, 136, 210], "11": [1, 94], "new": [1, 243], "mathematica": [1, 194], "code": [1, 11, 12, 13, 15, 32, 34, 103, 178, 194, 237, 249, 251], "parser": [1, 112], "redund": 1, "static": 1, "method": [1, 5, 19, 107, 115, 118, 119, 120, 122, 123, 124, 194, 211, 213, 218, 243, 265], "carmichael": 1, "10": [1, 9, 94], "some": [1, 127, 213], "travers": [1, 50], "function": [1, 2, 14, 32, 40, 49, 50, 56, 57, 58, 68, 69, 72, 73, 75, 80, 86, 90, 92, 94, 103, 125, 147, 150, 171, 172, 175, 180, 182, 184, 185, 190, 193, 194, 204, 206, 207, 210, 211, 215, 241, 245, 268, 269], "have": [1, 193], "been": 1, "move": [1, 204], "core": [1, 50, 83], "trace": 1, "The": [1, 7, 12, 33, 40, 75, 124, 165, 176, 189, 201, 204, 244, 245, 263], "compat": [1, 216], "submodul": [1, 62], "9": [1, 94], "expr_free_symbol": 1, "stat": [1, 214], "sampl": [1, 14], "numsampl": 1, "n": [1, 50, 210, 215, 216], "poli": [1, 183, 184, 185, 192], "solver": [1, 192, 208, 209, 210, 212, 213, 270], "rawmatrix": 1, "non": 1, "expr": [1, 50], "object": [1, 4, 219], "matrix": [1, 28, 82, 83, 86, 87, 124, 210, 214, 265], "get_seg": 1, "attribut": [1, 33, 40], "plot": [1, 11, 97, 140, 180], "mdft": 1, "physic": [1, 100, 103, 113, 122, 123, 124, 125, 126, 127, 128, 167, 169, 175, 176, 177, 178, 249, 255], "matric": [1, 5, 81, 82, 83, 84, 85, 86, 88, 100, 102, 216, 249, 253, 265], "privat": 1, "sparsematrix": [1, 88], "_smat": 1, "densematrix": 1, "_mat": 1, "laplace_transform": 1, "nocond": 1, "fals": 1, "8": [1, 94], "print": [1, 11, 32, 78, 103, 110, 169, 174, 194, 268], "theanocod": 1, "assumpt": [1, 4, 7, 27, 50], "handler": [1, 7], "askhandl": 1, "relat": [1, 2, 7, 50, 58, 80, 175, 178, 202, 245], "7": [1, 94, 210], "call": 1, "stochasticprocess": 1, "distribut": [1, 187, 214], "randomindexedsymbol": 1, "discretemarkovchain": 1, "absorbing_probabilit": 1, "util": [1, 32, 47, 48, 67, 86, 133, 189, 212, 231, 238, 249, 257], "misc": [1, 27], "find_execut": 1, "mutabl": 1, "diffgeom": 1, "unicod": [1, 268], "argument": [1, 2, 213], "pretti": [1, 194, 268], "stringpict": 1, "prettyform": 1, "pretty_symbolog": 1, "xstr": 1, "pass": 1, "lambdifi": [1, 11, 91, 233, 258], "set": [1, 4, 28, 62, 178, 202, 213, 268], "oper": [1, 2, 72, 86, 138, 147, 149, 150, 171, 175, 178, 204, 215, 221, 242, 244, 245, 258, 265], "longer": 1, "accept": 1, "arg": [1, 56, 264], "6": [1, 14, 94, 210], "variou": [1, 193], "test": [1, 11, 13, 47, 80, 193, 222, 224, 225, 265], "randtest": 1, "mix": 1, "polynomi": [1, 58, 72, 182, 184, 185, 186, 187, 189, 190, 191, 193, 212, 269], "express": [1, 2, 32, 62, 69, 72, 80, 83, 92, 105, 172, 184, 193, 216, 241, 243, 258, 264], "binari": 1, "print_cycl": 1, "flag": 1, "combinator": [1, 37], "permut": [1, 41, 42], "us": [1, 5, 11, 15, 32, 50, 53, 74, 75, 91, 94, 120, 124, 125, 178, 180, 191, 213, 243], "integr": [1, 11, 54, 58, 72, 74, 75, 76, 77, 103, 182, 189, 248, 259], "string": [1, 7, 258], "fallback": 1, "sympifi": [1, 50], "creat": [1, 2, 86], "an": [1, 62, 112, 165, 204, 213, 264], "indefinit": 1, "eq": [1, 50], "5": [1, 14, 94, 210], "tensor": [1, 46, 58, 159, 217, 220, 221], "fun_ev": 1, "__call__": 1, "tensortyp": 1, "dummy_fmt": 1, "tensorindextyp": 1, "metric": 1, "get_kronecker_delta": 1, "get_epsilon": 1, "tensorsymmetri": 1, "tensorhead": 1, "unit": [1, 28, 164, 165, 166, 168], "quantiti": [1, 163, 165, 167, 243], "is_emptyset": 1, "productset": [1, 202], "iter": [1, 202, 232], "set_potential_energi": 1, "mechan": [1, 7, 95, 103, 113, 121, 122, 123, 124, 125, 126, 127, 128, 147, 214], "condit": [1, 75, 202], "conditionset": [1, 202], "max_degre": 1, "get_upper_degre": 1, "properti": [1, 7, 181], "multivariate_result": 1, "dixonresult": 1, "rh": 1, "default": 1, "0": 1, "tupl": [1, 2, 50, 190], "first": [1, 12], "lambda": [1, 50], "evalu": [1, 2, 54, 72, 127, 264], "differentiate_finit": 1, "4": [1, 14, 94, 210], "data": 1, "clear_cach": 1, "clear_subproduct": 1, "keyword": [1, 2], "is_diagonaliz": 1, "row": [1, 265], "col": 1, "jordan_block": 1, "3": [1, 14, 77, 94, 112, 161, 210], "sourc": [1, 2, 11, 237], "dimens": [1, 62, 162, 165], "scale_factor": 1, "quanit": 1, "import": [1, 14], "classof": 1, "a2idx": 1, "from": [1, 2, 193, 216], "2": [1, 14, 75, 94, 112, 124, 210], "dot": [1, 172, 268], "product": [1, 53, 148, 159, 215, 244], "column": [1, 265], "vector": [1, 40, 50, 121, 169, 170, 171, 175, 176, 177, 178, 187, 239, 241, 242, 243, 245, 246, 247, 248], "geometri": [1, 52, 62, 181], "line3d": 1, "equat": [1, 21, 122, 123, 124, 163, 182, 207, 210, 212, 213, 270], "need": [1, 165], "k": [1, 185], "gotcha": [2, 7, 112, 261], "pitfal": 2, "introduct": [2, 5, 24, 31, 32, 33, 40, 52, 62, 80, 112, 127, 165, 175, 177, 180, 181, 182, 189, 193, 247, 263], "equal": [2, 50, 261], "sign": [2, 56, 261], "singl": [2, 14], "doubl": [2, 55], "variabl": [2, 180, 214, 243], "assign": 2, "doe": [2, 12, 213], "between": [2, 7, 167, 184], "symbol": [2, 7, 8, 50, 69, 124, 128, 179, 184, 190, 193, 213, 261, 263], "python": [2, 32], "number": [2, 28, 36, 50, 53, 54, 75, 184, 189, 193, 249, 254], "vs": [2, 8, 184], "float": [2, 50, 54], "ration": [2, 28, 50, 184, 185, 190, 193, 196, 202, 210, 269], "immut": [2, 84], "mathemat": [2, 14, 127], "invers": [2, 56, 75], "trig": 2, "sqrt": [2, 56], "special": [2, 6, 32, 58, 190, 202, 269], "dictionari": 2, "get": [2, 11, 13, 18], "help": 2, "within": 2, "explan": [3, 14, 22], "classif": 4, "class": [4, 14, 31, 32, 49, 52, 81, 82, 84, 86, 88, 90, 124, 170, 180, 183, 189, 194, 206, 207, 215, 239, 240], "kind": [4, 50], "func": [4, 264], "finit": [5, 28, 30, 33, 181, 184, 187, 189, 193, 204, 214, 259], "differ": [5, 7, 30, 127, 184, 243, 259], "approxim": [5, 32], "deriv": [5, 50, 178, 215, 245, 259], "A": [5, 114, 117, 118, 119, 120, 124, 263, 270], "direct": [5, 245], "topic": [6, 103, 169, 249, 256], "old": [7, 184], "system": [7, 97, 116, 128, 162, 164, 165, 168, 210, 212, 242, 243, 245, 247], "appli": [7, 75, 204], "input": [7, 213], "predic": [7, 27, 28], "refer": [7, 14, 22, 24, 31, 49, 50, 52, 62, 68, 75, 77, 81, 82, 83, 84, 86, 88, 90, 92, 126, 132, 135, 165, 176, 178, 179, 180, 181, 183, 185, 187, 189, 190, 201, 203, 204, 207, 213, 226, 227, 246, 249], "abov": 7, "definit": [7, 28, 68], "implic": 7, "interpret": 7, "other": [7, 19, 69, 175, 243], "is_": 7, "implement": [7, 75, 175, 194, 204, 226, 227, 242, 245], "limit": [7, 74, 112, 199, 201, 259], "combin": [7, 72], "fuzzi": 8, "boolean": [8, 80], "three": [8, 62], "valu": 8, "bool": 8, "logic": [8, 11, 80, 249, 252], "build": [9, 11], "document": [9, 11, 12, 14, 15, 22], "requir": [9, 12], "depend": [9, 11, 124, 184, 243], "docker": 9, "debian": 9, "ubuntu": 9, "fedora": 9, "mac": 9, "window": [9, 180], "doc": [9, 185], "local": 9, "instal": [9, 19, 92, 267], "logo": 9, "view": 9, "auto": 9, "rebuild": 9, "live": 9, "server": 9, "pdf": 9, "debug": 10, "hard": 11, "option": [11, 187], "recommend": [11, 15], "interact": [11, 78, 180], "pars": [11, 92], "gener": [11, 14, 15, 40, 42, 184, 189, 213, 244, 249, 251], "autowrap": [11, 32, 226], "printer": [11, 32, 194, 268], "onli": [11, 213], "statist": 11, "symengin": 11, "backend": [11, 180], "experiment": [11, 92], "rubi": 11, "sage": 11, "develop": [11, 13, 50], "run": [11, 13, 19, 225], "benchmark": 11, "polici": 12, "what": [12, 124, 183, 184, 213, 263, 266], "try": 12, "avoid": 12, "backward": 12, "incompat": 12, "chang": 12, "place": 12, "when": [12, 75], "public": 12, "api": [12, 22, 71, 75, 77, 99, 121, 176, 213, 226, 227, 246, 249], "Not": 12, "purpos": 12, "technic": 12, "possibl": [12, 265], "how": [12, 20, 22, 75, 178, 213], "long": 12, "should": [12, 91], "last": 12, "checklist": 12, "ad": 12, "releas": 12, "note": [12, 50, 62, 124, 201, 203, 261, 270], "entri": [12, 86], "environ": 13, "setup": 13, "git": [13, 19], "virtual": 13, "docstr": [14, 93, 104, 105, 106, 107, 108, 109, 110, 111, 171, 172, 173, 174, 232, 239, 240, 241], "style": [14, 15], "guid": [14, 20, 22, 121, 176, 246], "guidelin": [14, 15], "format": [14, 15], "section": 14, "sentenc": 14, "summari": 14, "exampl": [14, 23, 50, 62, 74, 77, 90, 94, 100, 113, 124, 128, 132, 163, 165, 178, 193, 194, 201, 204, 214, 215, 216, 219, 244, 263, 269], "paramet": [14, 204, 213], "see": [14, 50, 244], "also": [14, 50], "ar": [14, 178, 184, 213], "best": [14, 15], "practic": [14, 15], "write": [14, 15], "sphinx": 14, "cross": [14, 172], "referenc": 14, "type": [15, 32, 58, 171, 210, 213, 214], "narr": 15, "markdown": 15, "prefer": 15, "math": [15, 32], "latex": [15, 92, 268], "head": 15, "spell": 15, "punctuat": 15, "capit": 15, "tone": 15, "contribut": [16, 17, 191], "make": 17, "start": 18, "anaconda": 19, "mpmath": 19, "question": 19, "solv": [21, 94, 182, 189, 212, 213, 270], "welcom": 22, "s": [22, 50, 107, 115, 118, 119, 120, 122, 123, 124, 145, 156, 193, 203, 212, 213, 243, 248, 266], "tutori": [22, 207, 262], "abc": 23, "caveat": [23, 92], "algebra": [24, 28, 79, 86, 135, 178, 181, 184, 189, 193, 212, 270], "quaternion": 24, "ask": 25, "assum": 26, "queri": 27, "content": [27, 37, 57, 70, 76, 186, 198, 208, 217], "perform": 27, "improv": [27, 112], "common": [28, 81, 103, 169, 193, 194, 195, 206], "tautolog": 28, "commut": [28, 141, 181], "calculu": [28, 30, 178, 259], "infinit": [28, 213], "symmetr": 28, "invert": 28, "orthogon": [28, 58, 190, 245], "unitari": 28, "posit": 28, "upper": 28, "triangular": 28, "lower": 28, "diagon": [28, 215, 265], "full": 28, "rank": 28, "squar": [28, 182, 206], "integ": [28, 50, 56, 184, 202], "element": [28, 124, 184, 189], "real": [28, 184, 202], "complex": [28, 56, 184, 202], "singular": [28, 30, 58, 94], "normal": [28, 87, 183, 193], "theori": [28, 31, 249, 254], "even": 28, "odd": 28, "prime": [28, 189], "composit": [28, 72], "order": [28, 50, 190, 201, 204, 210], "neg": 28, "zero": [28, 50, 97, 187, 193, 265], "nonzero": 28, "nonposit": 28, "nonneg": 28, "irrat": 28, "extend": [28, 204], "hermitian": 28, "imaginari": 28, "antihermitian": 28, "transcendent": 28, "refin": 29, "weight": 30, "categori": 31, "base": [31, 52, 181, 182, 193, 200, 213], "diagram": 31, "draw": 31, "codegen": [32, 227], "rewrit": [32, 195, 269], "tool": [32, 89, 206], "simplifi": [32, 187, 205, 206, 269], "abstract": [32, 95, 98, 100, 121, 130, 147, 176, 185], "syntax": 32, "tree": [32, 184, 194, 264], "ast": [32, 112], "predefin": 32, "node": 32, "c": [32, 194], "cfunction": 32, "specif": 32, "cnode": 32, "cxxnode": 32, "fortran": [32, 194], "fnode": 32, "algorithm": [32, 33, 145, 156, 187, 190, 196, 201, 204], "pyutil": 32, "cutil": 32, "futil": 32, "present": [33, 40], "group": [33, 35, 38, 40, 41, 165], "overview": [33, 40, 75], "facil": 33, "construct": [33, 40, 216], "free": [33, 182], "word": [33, 40], "coset": 33, "enumer": [33, 55], "todd": 33, "coxet": 33, "cosett": 33, "compress": 33, "standard": 33, "subgroup": 33, "index": [33, 40, 216, 219], "low": 33, "reidemeist": 33, "schreier": 33, "bibliographi": [33, 40], "grai": 34, "constructor": [35, 190, 265], "nilpot": 36, "abelian": 36, "cyclic": 36, "name": 38, "partit": [39, 55, 207, 232], "polycycl": 40, "polycyclicgroup": 40, "collector": 40, "comput": [40, 75, 91, 147, 193, 263], "minim": [40, 189], "uncollect": 40, "subword": 40, "collect": [40, 195, 206, 269], "expon": [40, 193], "depth": [40, 62], "lead": 40, "polyhedron": 43, "prufer": 44, "sequenc": [44, 72, 187, 199, 200], "subset": [45, 53], "canonic": 46, "concret": 49, "hypergeometr": [49, 58, 69, 72, 196, 204, 206], "term": [49, 193, 195, 201], "cach": 50, "cacheit": 50, "basic": [50, 54, 86, 171, 182, 184, 190, 202, 242, 249, 250, 258, 265], "atom": 50, "singleton": [50, 200, 202], "unevaluatedexpr": 50, "atomicexpr": 50, "wild": 50, "dummi": 50, "var": 50, "algebraicnumb": 50, "numbersymbol": 50, "realnumb": 50, "igcd": 50, "ilcm": 50, "seterr": 50, "One": 50, "negativeon": 50, "half": 50, "nan": [50, 124], "infin": 50, "negativeinfin": 50, "complexinfin": 50, "exp1": 50, "imaginaryunit": 50, "pi": 50, "eulergamma": 50, "catalan": [50, 55], "goldenratio": 50, "tribonacciconst": 50, "mod_invers": 50, "power": [50, 191, 196, 202, 206, 263, 269], "pow": 50, "integer_nthroot": 50, "integer_log": 50, "mul": 50, "prod": 50, "add": 50, "mod": 50, "rel": 50, "ne": 50, "lt": 50, "le": 50, "gt": 50, "ge": 50, "greaterthan": 50, "lessthan": 50, "unequ": 50, "strictgreaterthan": 50, "strictlessthan": 50, "multidimension": 50, "wildfunct": 50, "diff": 50, "functionclass": 50, "sub": [50, 91], "expand": [50, 193, 195, 269], "poleerror": 50, "count_op": 50, "expand_mul": 50, "expand_log": [50, 269], "expand_func": [50, 269], "expand_trig": [50, 269], "expand_complex": 50, "expand_multinomi": 50, "expand_power_exp": [50, 269], "expand_power_bas": [50, 269], "nfloat": 50, "evalf": [50, 91, 258], "evalfmixin": 50, "precisionexhaust": 50, "contain": 50, "tuplekind": 50, "dict": 50, "exprtool": 50, "gcd_term": 50, "factor_term": 50, "numberkind": 50, "undefinedkind": 50, "booleankind": 50, "sort": 50, "default_sort_kei": 50, "random": [50, 214], "random_complex_numb": 50, "verify_numer": 50, "test_derivative_numer": 50, "_randrang": 50, "_randint": 50, "bottom_up": 50, "postorder_travers": 50, "preorder_travers": 50, "walk": [50, 264], "cryptographi": 51, "differenti": [52, 72, 103, 212, 213, 270], "discret": [53, 214], "transform": [53, 75, 77, 92, 243], "fast": 53, "fourier": [53, 197], "theoret": 53, "walsh": 53, "hadamard": 53, "m\u00f6biu": 53, "convolut": 53, "cover": 53, "intersect": [53, 62, 202], "numer": [54, 72, 77, 91, 103, 127], "point": [54, 65, 103, 169, 173, 177, 242], "accuraci": 54, "error": [54, 58], "handl": [54, 213], "sum": 54, "simplif": [54, 80, 203, 206, 269], "combinatori": [55, 206], "bell": 55, "bernoulli": [55, 210], "binomi": 55, "euler": 55, "factori": [55, 182], "subfactori": 55, "factorial2": 55, "fallingfactori": 55, "fibonacci": 55, "tribonacci": 55, "harmon": [55, 58, 136, 161], "luca": 55, "genocchi": 55, "multifactori": 55, "risingfactori": 55, "stirl": 55, "nc": 55, "np": 55, "nt": 55, "elementari": [56, 181, 200, 202], "re": 56, "im": 56, "ab": 56, "conjug": 56, "polar_lift": 56, "periodic_argu": 56, "principal_branch": 56, "trigonometr": [56, 58, 203, 206, 269], "sin": 56, "co": 56, "tan": 56, "cot": 56, "sec": 56, "csc": 56, "sinc": 56, "asin": 56, "aco": 56, "atan": 56, "acot": 56, "asec": 56, "acsc": 56, "atan2": 56, "hyperbol": 56, "hyperbolicfunct": 56, "sinh": 56, "cosh": 56, "tanh": 56, "coth": 56, "sech": 56, "csch": 56, "asinh": 56, "acosh": 56, "atanh": 56, "acoth": 56, "asech": 56, "acsch": 56, "ceil": 56, "floor": 56, "roundfunct": 56, "frac": 56, "exponenti": [56, 58, 210, 269], "exp": 56, "lambertw": 56, "log": 56, "exp_polar": 56, "piecewis": 56, "exprcondpair": 56, "miscellan": [56, 62, 235], "identityfunct": 56, "min": 56, "max": 56, "root": [56, 190, 206], "cbrt": 56, "real_root": 56, "diracdelta": 58, "heavisid": 58, "gamma": [58, 100], "beta": 58, "fresnel": 58, "logarithm": [58, 269], "bessel": 58, "airi": 58, "b": 58, "spline": 58, "riemann": 58, "zeta": 58, "ellipt": 58, "mathieu": 58, "jacobi": 58, "gegenbau": 58, "chebyshev": 58, "legendr": 58, "hermit": 58, "laguerr": 58, "spheric": 58, "curv": 59, "ellips": 60, "entiti": [61, 62, 180], "avail": 62, "usag": [62, 112, 128, 184, 244], "median": 62, "pappu": 62, "hexagon": 62, "theorem": [62, 75, 248], "futur": [62, 103, 112, 169], "work": [62, 193], "truth": [62, 80], "beyond": 62, "visual": [62, 127], "line": 63, "plane": [64, 75], "polygon": [66, 77], "about": [68, 213, 243, 270], "holonom": [68, 69, 70, 72, 73, 116], "convert": [69, 72, 184, 210, 258], "represent": [69, 73, 165, 178, 184], "meijer": [69, 72, 75, 204], "g": [69, 72, 75, 204], "intern": [71, 75, 77, 184, 187, 189, 207, 210], "addit": 72, "multipl": [72, 178, 189], "seri": [72, 180, 191, 196, 197, 198, 201, 259], "expans": [72, 201, 204, 206, 259], "linear": [72, 86, 103, 108, 124, 125, 165, 193, 207, 210], "holonomicfunct": 73, "differentialoper": 73, "differentialoperatoralgebra": 73, "current": 74, "polar": [75, 132], "branch": 75, "repres": [75, 155, 184, 189], "argand": 75, "tabl": [75, 80, 204], "lookup": 75, "mellin": 75, "converg": 75, "laplac": 75, "thi": [75, 213], "valid": 75, "exist": 75, "formula": [75, 204], "todo": 77, "bug": 77, "over": [77, 193, 202], "polytop": 77, "For": 77, "2d": 77, "polyhedra": 77, "session": 78, "lie": [79, 210], "form": [80, 87, 124, 183, 210, 216], "equival": [80, 127, 207], "manipul": [80, 86, 105, 186, 187, 190, 191, 213, 264], "infer": 80, "matrixcommon": 81, "matrixkind": 81, "dens": [82, 184, 185, 187], "immutablematrix": [82, 84], "block": 83, "matrixdetermin": 86, "matrixreduct": 86, "matrixsubspac": 86, "matrixeigen": 86, "matrixcalculu": 86, "matrixbas": 86, "except": [86, 92, 187, 230], "numpi": 86, "spars": [88, 89, 184, 185, 187], "immutablesparsematrix": 88, "ntheori": 90, "ecm": 90, "qs": 90, "ufuncifi": 91, "aesara": [91, 194], "so": 91, "which": [91, 194], "i": 91, "mathrm": [92, 268], "runtim": 92, "beam": [93, 94, 95], "bend": 94, "problem": [94, 189, 244], "continuum": 95, "control": [96, 97, 98, 99, 180], "pole": 97, "bode": 97, "impuls": 97, "respons": [97, 194], "step": [97, 213], "ramp": 97, "modul": [98, 130, 169, 176, 181, 182, 183, 184, 187, 189, 190, 207, 210, 211, 213, 226], "lti": 99, "high": 100, "energi": [100, 125], "hydrogen": 101, "wavefunct": 101, "potenti": [103, 124, 125, 169, 175, 245], "issu": [103, 112, 124, 169, 265], "advanc": [103, 169, 193, 264, 265], "featur": [103, 169, 260], "choic": 103, "coordin": [103, 115, 124, 180, 242, 243, 245, 247], "speed": [103, 124], "substitut": [103, 169, 258], "acceler": [103, 169, 177, 201], "interfac": [103, 169, 180, 214], "output": [103, 213], "bodi": [104, 125, 248], "msub": 105, "find_dynamicsymbol": 105, "joint": [106, 214], "pinjoint": 106, "prismaticjoint": 106, "kane": [107, 115, 118, 119, 122, 124], "lagrang": [107, 115, 120, 123, 124], "kanemethod": 107, "lagrangesmethod": 107, "mass": [109, 125, 248], "inertia": [109, 125, 169], "particl": [109, 125, 151], "rigidbodi": 109, "inertia_of_point_mass": 109, "linear_momentum": 109, "angular_momentum": 109, "kinetic_energi": 109, "potential_energi": 109, "lagrangian": [109, 125], "mechanics_print": 110, "mprint": 110, "mpprint": 110, "mlatex": 110, "symbolicsystem": [111, 128], "autolev": [112, 127], "complet": 112, "dynam": 112, "onlin": 112, "fix": 112, "switch": 112, "bicycl": 114, "nonminim": 115, "pendulum": 115, "multi": 116, "degre": 116, "freedom": 116, "roll": [117, 118, 119, 120], "disc": [117, 118, 119, 120], "constraint": 119, "forc": 119, "classic": [121, 187], "structur": [122, 123, 165, 207], "background": 124, "directli": [124, 243], "new_method": 124, "kwarg": 124, "a_and_b": 124, "true": 124, "slow": 124, "ha": 124, "zoo": 124, "oo": 124, "further": [124, 261], "rigid": 125, "dyadic": [125, 169, 170, 239, 242, 243], "momentum": 125, "angular": [125, 177], "momenta": 125, "kinet": 125, "user": [127, 207, 210, 211], "kei": [127, 264], "rough": 127, "link": 127, "gaussian": [129, 184, 185, 193], "optic": [129, 130], "medium": 131, "wave": 134, "pauli": 135, "quantum": [136, 147, 161], "oscil": [136, 161], "d": [136, 161], "anticommut": 137, "cartesian": 138, "state": [138, 147, 150, 158], "clebsch": 139, "gordan": 139, "coeffici": [139, 187], "circuit": 140, "constant": [142, 165], "dagger": 143, "gate": 144, "grover": 145, "hilbert": 146, "space": [146, 165, 204], "analyt": 147, "solut": [147, 213, 244], "inner": 148, "helper": [150, 194], "box": 151, "qappli": 152, "qft": 153, "qubit": 154, "shor": 156, "spin": 157, "second": 160, "quantiz": 160, "dimension": 163, "analysi": 163, "philosophi": 165, "behind": 165, "literatur": [165, 188, 193], "prefix": 166, "convers": 167, "referencefram": [169, 170, 178], "dynamicsymbol": [169, 172], "essenti": [170, 172, 239, 241], "coordinatesym": 170, "field": [171, 175, 184, 187, 189, 193, 245, 247], "curl": [171, 175, 241, 245], "diverg": [171, 175, 241, 245, 248], "gradient": [171, 175, 241, 245], "scalar_potenti": [171, 241], "scalar_potential_differ": [171, 241], "check": 171, "is_conserv": [171, 241], "is_solenoid": [171, 241], "outer": 172, "time_deriv": 172, "kinemat": [173, 177], "kinematic_equ": 173, "init_vprint": 174, "vprint": 174, "vpprint": 174, "vlatex": 174, "scalar": [175, 245, 247], "conserv": [175, 245], "solenoid": [175, 245], "veloc": 177, "altern": 178, "basi": [178, 187, 189], "frame": 178, "wigner": 179, "credit": 179, "copyright": 179, "author": 179, "plotgrid": 180, "pyglet": 180, "mode": 180, "specifi": 180, "interv": [180, 202], "custom": [180, 194], "color": 180, "geometr": 180, "ascii": [180, 268], "art": 180, "agca": 181, "ring": [181, 184, 185], "ideal": 181, "homomorph": [181, 189], "syzygi": 181, "extens": [181, 193], "concept": 182, "divis": [182, 207], "domain": [182, 184, 185, 190, 193, 213], "euclidean": 182, "gcd": [182, 187, 193], "lcm": 182, "factor": [182, 187, 193, 210, 269], "groebner": [182, 187], "introduc": [183, 184], "domainmatrix": 183, "ddm": 183, "sdm": 183, "dup": 184, "dmp": 184, "polyr": 184, "polynomialr": 184, "choos": 184, "unifi": 184, "gf": 185, "p": [185, 189], "zz": 185, "qq": 185, "mpq": 185, "zz_i": 185, "qq_i": 185, "rr": 185, "cc": 185, "x": 185, "ex": 185, "quotient": 185, "level": 187, "multivari": [187, 193], "univari": [187, 193, 207], "remaind": 187, "subresult": 187, "configur": 187, "modular": 187, "undocu": 187, "main": 189, "decomposit": [189, 190, 193], "adic": 189, "valuat": 189, "find": [189, 190], "subfield": 189, "As": 189, "arithmet": 189, "extra": 190, "monomi": 190, "encod": 190, "formal": [190, 196], "partial": [190, 193, 212, 213], "fraction": [190, 193, 206, 269], "dispers": 190, "rs_seri": 191, "solve_lin_si": 192, "eqs_to_matrix": 192, "sympy_eqs_to_r": 192, "_solve_lin_si": 192, "_solve_lin_sys_compon": 192, "wester": 193, "articl": 193, "simpl": 193, "result": 193, "support": 193, "back": 193, "cyclotom": 193, "automat": 193, "reduc": 193, "gr\u00f6bner": 193, "mistak": 194, "prettyprint": 194, "rcodeprint": 194, "mapl": 194, "javascript": 194, "julia": 194, "octav": 194, "matlab": 194, "rust": 194, "gtk": 194, "lambdaprint": 194, "latexprint": 194, "mathmlprint": 194, "pythoncodeprint": 194, "pythonprint": 194, "srepr": [194, 268], "strprinter": 194, "preview": 194, "codeprint": 194, "preced": 194, "dotprint": 194, "subexpress": [195, 206], "detect": 195, "compound": [200, 202, 214], "recurs": [200, 264], "gruntz": 201, "more": [201, 243, 263], "intuit": 201, "residu": 201, "finiteset": 202, "union": 202, "complement": 202, "symmetricdiffer": 202, "disjointunion": 202, "emptyset": 202, "universalset": 202, "natur": 202, "naturals0": 202, "imageset": 202, "rang": 202, "complexregion": 202, "powerset": 202, "setkind": 202, "hongguang": 203, "fu": 203, "rule": [203, 244], "notat": 204, "increment": 204, "decrement": 204, "indic": 204, "reduct": 204, "around": 204, "loos": 204, "end": 204, "confluenc": 204, "separatevar": 206, "nthroot": 206, "kroneckersimp": 206, "besselsimp": 206, "hypersimp": 206, "hypersimilar": 206, "nsimplifi": 206, "posifi": 206, "logcombin": [206, 269], "radsimp": 206, "rad_ration": 206, "collect_sqrt": 206, "collect_const": 206, "ratsimp": 206, "ratsimpmodprim": 206, "trigsimp": [206, 269], "powsimp": [206, 269], "powdenest": [206, 269], "combsimp": [206, 269], "denest": 206, "sqrtdenest": 206, "elimin": 206, "cse": 206, "opt_cs": 206, "tree_cs": 206, "hyperexpand": [206, 269], "epath": 206, "diophantin": [207, 212, 213], "classify_diop": 207, "diop_solv": 207, "diop_linear": 207, "base_solution_linear": 207, "diop_quadrat": 207, "diop_dn": 207, "cornacchia": 207, "diop_bf_dn": 207, "transformation_to_dn": 207, "transformation_to_norm": 207, "find_dn": 207, "diop_ternary_quadrat": 207, "square_factor": 207, "descent": 207, "diop_general_pythagorean": 207, "diop_general_sum_of_squar": 207, "diop_general_sum_of_even_pow": 207, "power_represent": 207, "sum_of_three_squar": 207, "sum_of_four_squar": 207, "sum_of_pow": 207, "sum_of_squar": 207, "merge_solut": 207, "pqa": 207, "parametrize_ternary_quadrat": 207, "diop_ternary_quadratic_norm": 207, "ldescent": 207, "gaussian_reduc": 207, "holzer": 207, "prime_as_sum_of_two_squar": 207, "sqf_normal": 207, "reconstruct": 207, "diophantinesolutionset": 207, "diophantineequationtyp": 207, "binaryquadrat": 207, "inhomogeneousternaryquadrat": 207, "homogeneousternaryquadraticnorm": 207, "homogeneousternaryquadrat": 207, "inhomogeneousgeneralquadrat": 207, "homogeneousgeneralquadrat": 207, "generalsumofsquar": 207, "generalpythagorean": 207, "cubicthu": 207, "generalsumofevenpow": 207, "inequ": [209, 212, 213], "od": [210, 212, 213], "dsolv": 210, "dsolve_system": 210, "classify_od": 210, "checkodesol": 210, "homogeneous_ord": 210, "infinitesim": 210, "checkinfsol": 210, "constantsimp": 210, "hint": [210, 211], "allhint": 210, "odesimp": 210, "constant_renumb": 210, "sol_simpl": 210, "1st_exact": 210, "1st_homogeneous_coeff_best": 210, "1st_homogeneous_coeff_subs_dep_div_indep": 210, "1st_homogeneous_coeff_subs_indep_div_dep": 210, "1st_linear": 210, "1st_rational_riccati": 210, "2nd_linear_airi": 210, "2nd_linear_bessel": 210, "liouvil": 210, "riccati_special_minus2": 210, "nth_linear_constant_coeff_homogen": 210, "nth_linear_constant_coeff_undetermined_coeffici": 210, "nth_linear_constant_coeff_variation_of_paramet": 210, "nth_linear_euler_eq_homogen": 210, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 210, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 210, "nth_algebra": 210, "nth_order_reduc": 210, "separ": 210, "almost_linear": 210, "linear_coeffici": 210, "separable_reduc": 210, "lie_group": 210, "2nd_hypergeometr": 210, "1st_power_seri": 210, "2nd_power_series_ordinari": 210, "2nd_power_series_regular": 210, "heurist": 210, "abaco1_simpl": 210, "abaco1_product": 210, "bivari": 210, "chi": 210, "abaco2_similar": 210, "function_sum": 210, "abaco2_unique_unknown": 210, "abaco2_unique_gener": 210, "riccati": 210, "riccati_norm": 210, "riccati_inverse_norm": 210, "riccati_reduc": 210, "construct_c": 210, "construct_d": 210, "rational_laurent_seri": 210, "compute_m_ybar": 210, "solve_aux_eq": 210, "remove_redundant_sol": 210, "get_gen_sol_from_part_sol": 210, "solve_riccati": 210, "canon": 210, "linodesolv": 210, "inform": [210, 211], "jordan": 210, "nonlinear": 210, "pde": [211, 212, 213], "pde_separ": 211, "pde_separate_add": 211, "pde_separate_mul": 211, "pdsolv": 211, "classify_pd": 211, "checkpdesol": 211, "pde_1st_linear_constant_coeff_homogen": 211, "pde_1st_linear_constant_coeff": 211, "pde_1st_linear_variable_coeff": 211, "ordinari": [212, 213], "deutil": 212, "recurr": 212, "de": [212, 213], "solveset": 213, "wrong": 213, "why": [213, 263], "do": 213, "we": 213, "emploi": 213, "return": 213, "ensur": 213, "ani": 213, "search": 213, "deal": 213, "case": 213, "where": 213, "known": 213, "plan": 213, "linear_eq_to_matrix": 213, "linsolv": 213, "nonlinsolv": 213, "transolv": 213, "continu": [214, 269], "stochast": 214, "process": 214, "dim": [215, 216], "arrai": [215, 216], "contract": 215, "explicit": 216, "pytest": 223, "randomis": 224, "detail": [226, 227, 242], "routin": 227, "decor": 228, "enum": 229, "variat": 232, "memoiz": 234, "pkgdata": 236, "inspect": 237, "time": 238, "coordsys3d": [239, 243], "del": [239, 244, 245], "parametricregion": 239, "implicitregion": 239, "parametricintegr": 239, "orient": [240, 243], "axisorient": 240, "bodyorient": 240, "spaceorient": 240, "quaternionorient": 240, "matrix_to_vector": 241, "vector_integr": 241, "locat": 243, "orient_new": 243, "AND": 243, "quadrilater": 244, "third": 244, "curvilinear": 245, "applic": 248, "calcul": 248, "perimet": 248, "surfac": 248, "area": 248, "volum": 248, "flux": 248, "verifi": 248, "stoke": 248, "quick": [258, 259, 261, 264, 265], "tip": [258, 259, 261, 264, 265], "two": 261, "final": 261, "read": 261, "interest": 263, "understand": 264, "through": 264, "invari": 264, "prevent": 264, "shape": 265, "access": 265, "delet": 265, "insert": 265, "determin": 265, "rref": 265, "nullspac": 265, "columnspac": 265, "eigenvalu": 265, "eigenvector": 265, "next": 266, "preliminari": 267, "exercis": 267, "up": 268, "str": 268, "mathml": 268, "cancel": 269, "apart": 269, "gammasimp": 269}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})