Search.setIndex({"docnames": ["citing", "explanation/active-deprecations", "explanation/gotchas", "explanation/index", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/contributing/build-docs", "guides/contributing/debug", "guides/contributing/dependencies", "guides/contributing/deprecations", "guides/contributing/dev-setup", "guides/contributing/docstring", "guides/contributing/documentation-style-guide", "guides/contributing/index", "guides/contributing/make-a-contribution", "guides/custom-functions", "guides/getting_started/index", "guides/getting_started/install", "guides/index", "guides/solving/index", "index", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorial/basic_operations", "tutorial/calculus", "tutorial/features", "tutorial/gotchas", "tutorial/index", "tutorial/intro", "tutorial/manipulation", "tutorial/matrices", "tutorial/next", "tutorial/preliminaries", "tutorial/printing", "tutorial/simplification", "tutorial/solvers"], "filenames": ["citing.md", "explanation/active-deprecations.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/contributing/build-docs.rst", "guides/contributing/debug.rst", "guides/contributing/dependencies.md", "guides/contributing/deprecations.md", "guides/contributing/dev-setup.rst", "guides/contributing/docstring.rst", "guides/contributing/documentation-style-guide.rst", "guides/contributing/index.rst", "guides/contributing/make-a-contribution.rst", "guides/custom-functions.md", "guides/getting_started/index.rst", "guides/getting_started/install.md", "guides/index.rst", "guides/solving/index.md", "index.rst", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorial/basic_operations.rst", "tutorial/calculus.rst", "tutorial/features.rst", "tutorial/gotchas.rst", "tutorial/index.rst", "tutorial/intro.rst", "tutorial/manipulation.rst", "tutorial/matrices.rst", "tutorial/next.rst", "tutorial/preliminaries.rst", "tutorial/printing.rst", "tutorial/simplification.rst", "tutorial/solvers.rst"], "titles": ["Citing SymPy", "List of active deprecations", "Gotchas and Pitfalls", "Explanation", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Docstring Style Guide", "Contributing to SymPy", "Making a Contribution", "Writing Custom Functions", "Getting Started", "Installation", "How-to Guides", "Solve Equations", "Welcome to SymPy\u2019s documentation!", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joint (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Tutorials", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 24, 27, 28, 31, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 64, 74, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 98, 100, 101, 103, 105, 107, 108, 124, 125, 128, 138, 142, 155, 164, 166, 170, 176, 179, 181, 183, 185, 186, 188, 190, 191, 192, 194, 195, 202, 203, 205, 208, 211, 212, 213, 214, 215, 216, 219, 220, 224, 226, 227, 230, 231, 233, 234, 240, 241, 243, 244, 246, 248, 249, 259, 260, 262, 263, 265, 266, 269, 270, 271], "public": [0, 14, 33, 51, 52, 73, 185, 186, 188, 189, 193, 208, 211, 215, 229, 240], "us": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 128, 129, 130, 133, 134, 136, 138, 140, 141, 142, 145, 147, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 242, 243, 245, 246, 248, 249, 251, 252, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "meurer": 0, "A": [0, 1, 2, 4, 6, 7, 8, 11, 12, 14, 15, 18, 19, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 98, 100, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 122, 123, 126, 127, 128, 129, 130, 133, 135, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 230, 231, 233, 234, 240, 241, 243, 244, 245, 246, 248, 249, 256, 261, 263, 265, 266, 270], "smith": [0, 1, 88, 184], "cp": [0, 43, 92, 183], "paprocki": 0, "m": [0, 1, 2, 5, 7, 9, 18, 25, 29, 33, 34, 39, 40, 42, 43, 47, 50, 51, 52, 53, 54, 56, 59, 61, 63, 67, 68, 76, 78, 80, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 100, 102, 103, 105, 108, 109, 110, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 137, 144, 158, 159, 162, 164, 166, 176, 180, 182, 183, 184, 186, 188, 189, 190, 191, 195, 196, 197, 198, 200, 201, 202, 203, 205, 207, 208, 211, 213, 214, 215, 216, 217, 220, 221, 227, 228, 230, 233, 235, 240, 242, 244, 248, 249, 260, 266, 269, 270, 271], "\u010dert\u00edk": 0, "o": [0, 2, 5, 7, 14, 24, 32, 33, 42, 43, 49, 51, 52, 57, 59, 61, 62, 64, 65, 67, 73, 76, 91, 95, 105, 108, 110, 112, 113, 123, 124, 125, 126, 128, 129, 151, 161, 172, 174, 176, 178, 188, 189, 191, 192, 195, 197, 202, 205, 211, 215, 220, 233, 242, 245, 260], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 214], "ivanov": 0, "s": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 17, 18, 20, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 87, 90, 91, 92, 93, 94, 95, 98, 100, 102, 104, 105, 107, 110, 113, 115, 118, 122, 126, 128, 132, 133, 134, 140, 141, 143, 145, 147, 148, 151, 155, 156, 158, 159, 161, 164, 166, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 221, 226, 227, 228, 229, 230, 231, 233, 234, 236, 240, 241, 245, 246, 247, 248, 251, 259, 260, 262, 263, 264, 265, 266, 270, 271], "moor": [0, 84, 87], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 2, 8, 9, 12, 14, 15, 18, 25, 28, 29, 31, 33, 34, 35, 42, 43, 44, 45, 47, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 78, 80, 81, 82, 83, 84, 87, 91, 92, 93, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 123, 124, 125, 126, 128, 129, 133, 135, 141, 145, 157, 159, 161, 163, 164, 166, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 198, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 221, 224, 226, 229, 233, 234, 240, 242, 244, 248, 259, 260, 264, 265, 266, 269, 270, 271], "vig": 0, "granger": [0, 147], "BE": 0, "muller": 0, "rp": [0, 67, 133], "bonazzi": 0, "f": [0, 1, 2, 5, 9, 14, 18, 31, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 69, 74, 75, 76, 78, 80, 82, 84, 87, 91, 92, 93, 95, 98, 108, 112, 117, 122, 123, 124, 128, 130, 134, 135, 146, 147, 150, 159, 161, 164, 171, 175, 176, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 194, 195, 197, 198, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 230, 233, 234, 236, 245, 246, 249, 259, 260, 265, 269, 270, 271], "gupta": [0, 214], "h": [0, 2, 5, 31, 32, 33, 34, 35, 42, 47, 50, 51, 52, 56, 59, 73, 76, 78, 82, 83, 87, 88, 93, 100, 110, 126, 130, 133, 145, 147, 150, 155, 159, 166, 180, 181, 182, 183, 184, 188, 189, 190, 191, 194, 195, 203, 207, 211, 213, 214, 215, 216, 221, 228, 249, 260, 269], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 147], "mj": 0, "terrel": 0, "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 136, 138, 140, 142, 145, 147, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 234, 236, 240, 241, 242, 243, 244, 245, 246, 248, 250, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 1, 2, 4, 5, 7, 8, 12, 14, 15, 18, 24, 25, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 73, 74, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 93, 94, 95, 100, 101, 102, 103, 105, 108, 110, 113, 115, 119, 120, 121, 124, 125, 126, 128, 130, 133, 134, 136, 144, 145, 150, 151, 156, 158, 159, 161, 166, 167, 170, 171, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 226, 227, 233, 234, 236, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 259, 265, 270], "kulal": 0, "cimrman": 0, "r": [0, 1, 2, 5, 7, 9, 14, 15, 18, 25, 32, 33, 34, 35, 42, 43, 51, 52, 53, 55, 56, 57, 64, 65, 67, 69, 73, 74, 76, 78, 87, 91, 93, 95, 100, 102, 105, 108, 109, 110, 112, 113, 115, 116, 119, 120, 121, 125, 126, 127, 128, 129, 130, 133, 157, 158, 161, 162, 164, 171, 172, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 202, 203, 205, 207, 208, 211, 213, 214, 215, 221, 226, 228, 230, 240, 242, 244, 245, 246, 249, 270], "scopatz": 0, "2017": [0, 180], "symbol": [0, 1, 3, 5, 11, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 41, 43, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 81, 82, 84, 87, 91, 92, 93, 94, 95, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 126, 128, 130, 133, 134, 135, 136, 138, 140, 141, 143, 145, 147, 149, 150, 153, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 227, 233, 234, 240, 241, 242, 244, 245, 246, 249, 251, 256, 259, 260, 263, 265, 266, 269, 270, 271], "comput": [0, 1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 19, 20, 22, 25, 31, 33, 34, 35, 38, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 66, 70, 73, 74, 75, 77, 78, 80, 82, 84, 87, 88, 90, 91, 93, 95, 98, 100, 104, 107, 108, 109, 112, 113, 115, 119, 122, 128, 145, 146, 147, 155, 160, 161, 163, 165, 166, 170, 172, 176, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 200, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 217, 227, 230, 233, 234, 240, 241, 242, 243, 244, 245, 246, 248, 251, 256, 259, 260, 262, 263, 266, 270], "python": [0, 1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 26, 27, 28, 31, 43, 51, 52, 55, 57, 63, 79, 81, 82, 84, 87, 91, 92, 93, 94, 104, 113, 128, 171, 181, 182, 183, 185, 186, 192, 194, 195, 203, 207, 211, 214, 216, 226, 227, 228, 229, 230, 233, 234, 236, 240, 252, 262, 263, 264, 265, 266, 268, 269, 270], "peerj": 0, "scienc": [0, 43, 76, 87, 127, 128, 182, 189, 205, 260], "3": [0, 2, 3, 5, 7, 8, 12, 13, 15, 18, 20, 22, 25, 26, 28, 29, 30, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 106, 110, 112, 115, 116, 117, 119, 120, 121, 122, 124, 125, 128, 129, 130, 132, 134, 138, 140, 141, 142, 146, 150, 155, 156, 158, 160, 161, 164, 167, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 220, 221, 222, 226, 227, 229, 230, 231, 233, 234, 236, 238, 240, 241, 242, 243, 244, 246, 248, 249, 256, 259, 260, 262, 264, 265, 266, 269, 270, 271], "e103": 0, "http": [0, 1, 7, 9, 11, 12, 13, 14, 15, 18, 20, 25, 27, 28, 29, 31, 32, 33, 35, 39, 40, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 67, 68, 69, 73, 76, 78, 79, 80, 81, 82, 84, 87, 91, 94, 98, 100, 102, 103, 130, 132, 133, 134, 136, 137, 138, 142, 143, 144, 147, 149, 150, 159, 161, 171, 173, 175, 177, 180, 189, 191, 194, 195, 198, 200, 202, 203, 204, 207, 208, 211, 214, 215, 227, 228, 229, 231, 233, 234, 236, 240, 241, 245, 247, 249, 266, 269], "doi": [0, 14, 31, 43, 87, 189, 204, 207, 215], "org": [0, 2, 7, 11, 14, 15, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 98, 100, 102, 103, 130, 132, 133, 134, 136, 137, 138, 142, 143, 144, 147, 149, 150, 159, 161, 171, 173, 175, 177, 189, 191, 195, 198, 202, 203, 204, 208, 211, 214, 215, 227, 228, 229, 231, 233, 240, 241, 245, 247, 249, 266, 269], "10": [0, 2, 3, 14, 18, 20, 25, 31, 33, 40, 42, 43, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 65, 67, 68, 76, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 96, 98, 100, 101, 106, 110, 113, 115, 128, 130, 134, 145, 155, 156, 167, 171, 172, 173, 174, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 198, 201, 202, 203, 204, 207, 208, 211, 214, 215, 216, 225, 226, 231, 233, 234, 236, 240, 242, 259, 266, 270], "7717": 0, "cs": [0, 91, 188, 189, 190, 195, 215], "103": [0, 42], "bibtex": 0, "entri": [0, 1, 29, 34, 41, 43, 49, 52, 63, 76, 80, 82, 83, 84, 86, 90, 108, 113, 115, 126, 133, 184, 188, 190, 191, 205, 215, 234], "latex": [0, 9, 11, 14, 18, 20, 59, 79, 170, 171, 175, 179, 181, 186, 195, 258, 264, 265], "user": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 23, 32, 33, 34, 42, 43, 50, 51, 52, 53, 59, 63, 76, 80, 84, 87, 93, 94, 95, 98, 100, 104, 113, 122, 124, 126, 129, 149, 150, 159, 165, 166, 170, 171, 174, 178, 182, 185, 188, 190, 192, 193, 194, 195, 196, 204, 207, 209, 213, 214, 215, 224, 227, 228, 230, 231, 234, 240, 243, 244, 249, 259, 262, 263, 265, 266, 267], "articl": [0, 51, 52, 84, 87, 187, 189, 190, 195, 240, 264], "titl": [0, 14, 15, 181], "author": [0, 14, 91, 147, 190, 256], "aaron": 0, "christoph": [0, 240], "p": [0, 1, 2, 5, 7, 8, 9, 18, 25, 27, 28, 29, 33, 34, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 82, 84, 87, 91, 93, 94, 95, 100, 101, 105, 107, 108, 109, 110, 112, 113, 116, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 140, 159, 161, 166, 172, 174, 176, 178, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 195, 197, 198, 202, 203, 205, 207, 208, 211, 213, 214, 215, 216, 220, 221, 233, 240, 242, 243, 244, 245, 246, 248, 266, 270], "mateusz": 0, "v": [0, 2, 9, 13, 25, 33, 41, 47, 50, 51, 52, 53, 54, 55, 65, 76, 80, 82, 87, 91, 95, 105, 106, 110, 115, 125, 126, 128, 129, 133, 134, 146, 161, 166, 171, 173, 174, 176, 178, 179, 181, 185, 188, 189, 190, 191, 195, 205, 207, 208, 211, 213, 215, 226, 233, 240, 242, 243, 244, 245, 246, 248], "c": [0, 2, 5, 7, 9, 11, 18, 24, 25, 31, 32, 35, 36, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 93, 94, 95, 100, 102, 104, 106, 107, 108, 113, 117, 119, 120, 121, 124, 125, 126, 128, 130, 134, 140, 141, 142, 145, 147, 150, 155, 158, 160, 161, 166, 171, 174, 178, 179, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 194, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 220, 221, 227, 228, 230, 233, 236, 237, 240, 241, 242, 243, 244, 245, 246, 249, 252, 258, 260, 262, 269, 270, 271], "ert": 0, "k": [0, 2, 7, 15, 18, 25, 31, 32, 33, 34, 35, 37, 41, 42, 45, 46, 49, 50, 51, 52, 54, 55, 56, 57, 59, 64, 69, 76, 78, 81, 82, 84, 87, 91, 108, 117, 123, 125, 126, 128, 135, 149, 150, 153, 157, 159, 161, 170, 176, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 195, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 213, 215, 216, 217, 219, 220, 221, 222, 226, 230, 233, 240, 241, 242, 243, 244, 245, 246, 248, 249, 269, 270], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 1, 2, 7, 8, 13, 18, 25, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 74, 76, 78, 80, 81, 82, 83, 84, 87, 91, 93, 94, 95, 98, 100, 105, 106, 108, 109, 110, 113, 116, 117, 125, 126, 128, 130, 133, 138, 140, 142, 144, 149, 150, 153, 158, 159, 160, 161, 171, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 195, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 226, 229, 230, 233, 236, 240, 241, 242, 243, 244, 245, 260, 262, 266, 270, 271], "matthew": 0, "amit": [0, 214], "sergiu": 0, "jason": [0, 195], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 147], "e": [0, 1, 2, 7, 8, 9, 11, 12, 13, 14, 15, 18, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 87, 91, 93, 94, 95, 100, 101, 105, 108, 110, 112, 113, 124, 125, 128, 129, 130, 133, 140, 141, 145, 150, 151, 153, 156, 158, 160, 161, 166, 167, 171, 175, 176, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 240, 243, 246, 248, 249, 259, 260, 264, 265, 270], "richard": [0, 91], "francesco": 0, "harsh": [0, 214], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 1, 2, 15, 25, 29, 31, 33, 34, 37, 41, 42, 43, 47, 49, 50, 52, 53, 55, 56, 59, 73, 76, 78, 80, 82, 84, 87, 91, 98, 101, 126, 127, 128, 133, 140, 141, 158, 161, 166, 170, 176, 180, 182, 184, 186, 188, 189, 190, 191, 192, 194, 195, 197, 203, 205, 207, 208, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 227, 233, 240, 241, 242, 243, 244, 245, 246, 248, 249], "andi": [0, 127], "rou": 0, "ka": 0, "n": [0, 2, 5, 7, 13, 14, 15, 18, 24, 29, 31, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 47, 49, 50, 52, 53, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 94, 95, 100, 102, 103, 105, 108, 110, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 137, 141, 146, 147, 150, 155, 157, 158, 159, 161, 162, 164, 166, 168, 170, 171, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 213, 214, 215, 218, 220, 221, 224, 227, 233, 235, 236, 240, 241, 242, 243, 244, 248, 260, 266, 269, 270, 271], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 215], "anthoni": 0, "year": [0, 1, 12, 14], "month": 0, "jan": [0, 52], "keyword": [0, 12, 14, 18, 32, 33, 34, 42, 43, 51, 52, 55, 56, 64, 66, 67, 68, 82, 87, 91, 94, 98, 100, 108, 123, 124, 155, 161, 175, 181, 183, 185, 186, 188, 190, 191, 194, 195, 196, 202, 207, 208, 213, 220, 226, 227, 229, 231, 234, 236, 244, 266], "algebra": [0, 2, 7, 15, 19, 22, 28, 34, 42, 51, 52, 55, 57, 69, 72, 73, 74, 76, 78, 81, 82, 86, 88, 91, 92, 93, 112, 122, 128, 129, 177, 180, 183, 184, 186, 187, 188, 189, 191, 192, 195, 197, 205, 208, 209, 211, 214, 250, 251, 254, 256, 257, 261, 262, 264, 266], "system": [0, 1, 2, 4, 5, 8, 9, 10, 11, 13, 15, 18, 19, 21, 22, 26, 28, 42, 51, 52, 53, 57, 76, 79, 80, 81, 82, 87, 92, 93, 94, 97, 99, 100, 104, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 122, 123, 124, 125, 126, 128, 139, 140, 155, 158, 159, 161, 164, 168, 171, 174, 175, 176, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 193, 194, 195, 203, 204, 209, 210, 214, 215, 226, 227, 240, 241, 242, 245, 247, 249, 256, 262, 264, 266, 270, 271], "abstract": [0, 1, 31, 32, 40, 51, 53, 57, 59, 64, 69, 84, 107, 113, 145, 147, 156, 159, 160, 161, 182, 187, 190, 214, 215, 217, 221, 228, 248, 252], "an": [0, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 104, 105, 107, 108, 110, 112, 115, 116, 122, 123, 125, 126, 128, 129, 132, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 154, 155, 156, 158, 159, 161, 162, 163, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 240, 241, 243, 244, 246, 247, 248, 249, 257, 259, 260, 261, 262, 263, 264, 266, 269, 270, 271], "open": [0, 1, 9, 11, 12, 14, 15, 17, 20, 31, 51, 53, 57, 78, 81, 100, 113, 128, 195, 203, 210, 214, 215, 237, 264, 266], "sourc": [0, 9, 13, 14, 15, 18, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 246, 258, 264], "written": [0, 7, 11, 14, 15, 18, 19, 29, 33, 39, 42, 43, 47, 51, 56, 59, 63, 69, 74, 76, 80, 81, 90, 91, 116, 122, 128, 161, 176, 177, 178, 179, 182, 183, 191, 195, 198, 202, 205, 208, 211, 228, 246, 248, 263, 264, 265, 270], "pure": [0, 11, 19, 25, 52, 57, 78, 81, 84, 100, 125, 166, 185, 186, 188, 191, 195, 215, 233], "It": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 25, 26, 27, 28, 31, 32, 33, 39, 42, 43, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 67, 68, 74, 76, 78, 80, 81, 87, 91, 92, 93, 94, 95, 98, 100, 102, 104, 105, 106, 107, 108, 113, 115, 120, 122, 123, 124, 126, 128, 130, 134, 135, 145, 150, 151, 156, 157, 158, 159, 160, 161, 163, 166, 169, 171, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 198, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 226, 227, 228, 229, 230, 231, 234, 240, 242, 243, 244, 246, 248, 249, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270], "built": [0, 2, 4, 9, 11, 14, 15, 26, 28, 34, 51, 57, 78, 113, 128, 183, 186, 195, 196, 200, 211, 214, 215, 221, 230, 233, 234, 264, 265, 269], "focu": [0, 1, 7, 61, 213, 264], "extens": [0, 7, 11, 14, 15, 18, 19, 42, 51, 57, 63, 67, 78, 87, 110, 128, 183, 185, 186, 187, 188, 189, 190, 191, 195, 205, 207, 211, 213, 214, 227, 228, 237, 263, 270], "eas": [0, 113, 179, 181, 195, 198], "through": [0, 2, 7, 12, 14, 18, 20, 31, 33, 42, 43, 45, 50, 51, 52, 55, 56, 59, 61, 62, 63, 64, 65, 67, 76, 80, 81, 87, 91, 94, 95, 98, 105, 108, 113, 115, 122, 126, 132, 133, 171, 181, 182, 188, 190, 195, 201, 205, 207, 211, 213, 214, 215, 216, 227, 233, 240, 241, 246, 249, 261, 262, 263, 268], "both": [0, 1, 2, 4, 7, 8, 11, 12, 14, 15, 18, 19, 24, 25, 31, 32, 33, 43, 46, 47, 49, 50, 51, 52, 56, 57, 59, 66, 75, 76, 78, 81, 82, 87, 91, 93, 94, 95, 100, 105, 107, 108, 115, 116, 117, 125, 133, 134, 145, 151, 158, 161, 166, 171, 174, 178, 179, 181, 182, 183, 185, 186, 188, 190, 191, 193, 194, 195, 197, 202, 203, 204, 205, 207, 208, 211, 213, 214, 216, 220, 226, 228, 233, 234, 240, 241, 260, 263, 264, 265, 270, 271], "interact": [0, 19, 24, 51, 65, 78, 85, 87, 128, 158, 175, 179, 185, 186, 207, 215, 231, 238, 250, 257, 258, 262, 264, 265, 269, 270], "programmat": [0, 4, 214, 244], "applic": [0, 1, 15, 19, 34, 35, 41, 42, 43, 44, 51, 52, 57, 78, 82, 87, 91, 94, 108, 112, 113, 122, 125, 127, 128, 145, 146, 171, 174, 178, 183, 188, 189, 190, 191, 195, 197, 202, 208, 211, 214, 228, 233, 240, 246, 247, 264], "These": [0, 1, 2, 5, 7, 8, 11, 14, 15, 18, 23, 24, 32, 33, 42, 50, 51, 52, 53, 59, 76, 78, 81, 87, 93, 95, 100, 108, 109, 115, 116, 120, 125, 128, 151, 156, 157, 171, 172, 176, 178, 179, 182, 183, 184, 185, 186, 188, 195, 205, 208, 211, 212, 214, 215, 217, 222, 226, 227, 228, 233, 246, 260, 263, 266, 269, 270], "characterist": [0, 53, 69, 87, 178, 184, 186, 188, 189, 211, 213, 266], "have": [0, 2, 4, 5, 7, 8, 9, 12, 13, 14, 15, 18, 20, 25, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 66, 67, 69, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 98, 100, 101, 103, 104, 108, 110, 113, 114, 115, 120, 122, 125, 128, 145, 147, 150, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 200, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 216, 219, 221, 222, 224, 225, 226, 228, 229, 230, 233, 234, 236, 240, 241, 243, 244, 245, 246, 249, 259, 260, 262, 263, 264, 265, 266, 269, 270, 271], "led": 0, "becom": [0, 1, 2, 5, 7, 12, 14, 15, 19, 42, 47, 50, 51, 52, 55, 74, 79, 87, 93, 175, 178, 182, 183, 185, 192, 195, 198, 204, 211, 214, 215, 221, 236, 242, 244, 270], "popular": [0, 11, 52, 92, 128, 264], "librari": [0, 1, 7, 11, 12, 14, 18, 19, 20, 23, 33, 51, 52, 56, 76, 78, 79, 87, 92, 104, 113, 128, 181, 185, 186, 215, 226, 227, 228, 233, 234, 259, 262, 263, 264], "scientif": [0, 20, 51, 128], "ecosystem": 0, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 136, 138, 140, 141, 142, 144, 145, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271], "paper": [0, 14, 91, 115, 179, 190, 191, 204, 205, 208, 211, 215], "present": [0, 1, 2, 5, 11, 15, 31, 32, 35, 38, 42, 43, 45, 49, 51, 54, 78, 87, 91, 94, 98, 100, 108, 115, 161, 163, 171, 173, 175, 176, 181, 182, 188, 189, 190, 194, 195, 208, 214, 228, 234, 237, 242, 243, 244, 248, 271], "architectur": [0, 128, 185, 226], "descript": [0, 1, 12, 14, 15, 22, 23, 32, 34, 41, 59, 78, 91, 133, 151, 158, 169, 178, 179, 180, 195, 219, 226, 228, 230, 231, 250, 267], "its": [0, 1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 19, 25, 27, 28, 29, 32, 33, 34, 35, 39, 41, 42, 43, 50, 51, 52, 53, 56, 57, 59, 61, 63, 67, 69, 76, 78, 79, 81, 82, 84, 87, 91, 93, 94, 95, 100, 104, 105, 108, 110, 113, 115, 116, 122, 125, 126, 128, 129, 134, 140, 146, 147, 149, 150, 155, 156, 159, 161, 166, 168, 171, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 207, 210, 211, 213, 214, 215, 219, 220, 221, 226, 229, 230, 233, 234, 237, 240, 242, 243, 244, 246, 249, 264, 265, 266, 269, 270], "featur": [0, 1, 2, 3, 11, 12, 15, 18, 19, 20, 23, 51, 53, 55, 82, 93, 113, 122, 128, 177, 195, 211, 215, 224, 228, 231, 247, 263, 264, 268, 270], "discuss": [0, 1, 2, 3, 5, 7, 8, 12, 14, 15, 16, 18, 21, 23, 34, 42, 52, 59, 91, 104, 108, 113, 122, 125, 126, 170, 177, 178, 179, 185, 221, 230, 250, 259, 261, 262, 264, 265, 267, 269, 270], "select": [0, 9, 33, 35, 42, 43, 50, 51, 52, 60, 65, 79, 81, 82, 91, 93, 106, 126, 166, 175, 185, 186, 188, 189, 191, 195, 204, 207, 213], "submodul": [0, 11, 12, 14, 33, 104, 182, 186, 188, 190], "The": [0, 2, 5, 6, 8, 9, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 247, 248, 249, 256, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271], "supplementari": 0, "materi": [0, 94, 132, 268], "provid": [0, 1, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 25, 31, 32, 33, 34, 40, 41, 42, 43, 49, 50, 51, 53, 55, 59, 60, 62, 67, 70, 73, 74, 78, 79, 81, 82, 84, 87, 88, 90, 91, 92, 93, 95, 98, 104, 105, 108, 110, 112, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 134, 135, 155, 163, 164, 165, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 198, 200, 203, 204, 205, 207, 211, 212, 213, 214, 215, 216, 220, 221, 226, 227, 228, 230, 231, 233, 234, 236, 240, 242, 243, 244, 246, 247, 249, 260, 264, 265, 266, 270], "addit": [0, 1, 2, 5, 11, 12, 15, 20, 21, 33, 41, 42, 43, 50, 51, 57, 59, 63, 69, 71, 75, 76, 78, 79, 81, 84, 87, 93, 97, 98, 100, 104, 105, 108, 125, 126, 129, 147, 159, 160, 163, 175, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 195, 201, 204, 205, 207, 208, 211, 212, 213, 214, 215, 226, 227, 228, 230, 231, 233, 234, 236, 243, 262, 264, 265, 266, 269, 270], "exampl": [0, 1, 2, 4, 5, 7, 8, 10, 11, 12, 13, 15, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 98, 100, 102, 103, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 163, 165, 167, 168, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 200, 201, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 218, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 246, 247, 248, 249, 251, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 268, 269, 271], "further": [0, 7, 11, 13, 18, 28, 32, 52, 59, 63, 76, 78, 83, 84, 87, 93, 94, 97, 98, 105, 107, 108, 122, 126, 133, 178, 180, 181, 182, 188, 190, 191, 204, 205, 207, 211, 215, 221, 263, 264], "outlin": [0, 7, 11, 12, 18, 49, 78, 182, 211], "detail": [0, 1, 3, 4, 7, 11, 12, 13, 14, 15, 16, 18, 23, 32, 42, 51, 53, 56, 58, 59, 76, 77, 78, 79, 82, 87, 91, 98, 107, 108, 113, 126, 128, 133, 151, 155, 171, 173, 180, 181, 182, 188, 190, 197, 202, 207, 208, 209, 211, 212, 215, 220, 221, 226, 229, 231, 232, 234, 244, 245, 246, 247, 250, 260, 262, 266, 267, 269], "volum": [0, 14, 33, 50, 59, 76, 180, 189, 205, 208, 211, 230, 240, 247], "page": [0, 1, 2, 7, 8, 9, 11, 12, 14, 15, 22, 23, 33, 34, 50, 56, 76, 91, 92, 108, 128, 166, 181, 184, 185, 186, 189, 195, 205, 208, 231, 248, 270], "journal": [0, 14, 50, 56, 91, 101, 189, 207, 230], "issn": 0, "2376": 0, "5992": 0, "url": [0, 52, 231], "bsd": [0, 9, 11, 19, 264], "licens": [0, 9, 11, 19, 264], "so": [0, 1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 40, 42, 43, 45, 47, 49, 51, 52, 55, 57, 59, 61, 63, 64, 65, 67, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 94, 95, 100, 104, 108, 113, 115, 116, 122, 123, 125, 128, 129, 134, 145, 147, 155, 157, 158, 159, 161, 163, 165, 166, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 219, 220, 224, 226, 227, 230, 231, 233, 234, 236, 245, 249, 251, 259, 260, 262, 264, 265, 266, 269, 270, 271], "you": [0, 1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 22, 23, 24, 27, 28, 29, 31, 33, 34, 42, 43, 50, 51, 52, 53, 55, 57, 58, 59, 63, 65, 67, 69, 70, 75, 76, 78, 79, 81, 82, 84, 85, 87, 88, 91, 92, 93, 100, 102, 103, 104, 108, 109, 110, 113, 114, 123, 125, 126, 128, 150, 155, 156, 159, 161, 170, 171, 173, 176, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 196, 198, 202, 203, 207, 208, 211, 212, 213, 214, 215, 219, 220, 221, 224, 226, 227, 228, 229, 231, 233, 234, 237, 243, 244, 245, 246, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271], "free": [0, 1, 19, 20, 31, 32, 33, 38, 41, 42, 47, 51, 63, 78, 82, 84, 87, 91, 94, 95, 98, 101, 122, 130, 150, 168, 171, 177, 181, 182, 186, 187, 188, 190, 191, 195, 197, 203, 205, 207, 208, 211, 213, 214, 221, 233, 264], "whatev": [0, 1, 2, 18, 42, 51, 52, 207, 211, 212, 214, 234], "like": [0, 1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 23, 33, 34, 36, 42, 43, 50, 51, 52, 55, 56, 57, 59, 61, 71, 74, 78, 79, 81, 82, 84, 85, 86, 87, 91, 92, 93, 100, 104, 110, 113, 115, 125, 126, 128, 129, 143, 145, 155, 156, 159, 160, 161, 166, 170, 171, 174, 176, 178, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 194, 195, 198, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 219, 221, 222, 224, 226, 227, 228, 229, 233, 234, 236, 237, 243, 244, 246, 248, 259, 260, 262, 263, 264, 265, 266, 270], "academ": [0, 32, 35, 189], "commerci": [0, 264], "creat": [0, 7, 8, 11, 12, 13, 14, 15, 17, 21, 27, 32, 33, 34, 40, 42, 43, 51, 52, 53, 55, 57, 58, 59, 61, 63, 64, 66, 67, 72, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91, 92, 93, 94, 100, 105, 107, 108, 110, 113, 116, 117, 119, 121, 124, 125, 126, 128, 129, 138, 140, 142, 146, 149, 150, 151, 155, 156, 158, 159, 161, 164, 167, 170, 171, 173, 174, 178, 179, 181, 182, 184, 185, 186, 188, 190, 191, 192, 195, 202, 207, 211, 214, 215, 216, 220, 221, 226, 227, 228, 230, 231, 233, 234, 240, 244, 246, 260, 262, 265, 266, 269, 270, 271], "fork": [0, 1, 13, 15, 115], "deriv": [0, 1, 3, 6, 14, 18, 31, 32, 33, 35, 41, 42, 53, 57, 58, 59, 61, 68, 73, 74, 76, 78, 79, 81, 84, 87, 100, 104, 106, 107, 108, 112, 115, 116, 117, 119, 122, 123, 124, 125, 126, 150, 159, 163, 166, 167, 170, 171, 173, 174, 175, 176, 178, 181, 182, 183, 186, 188, 190, 191, 192, 195, 197, 205, 207, 211, 212, 213, 217, 218, 222, 228, 240, 242, 243, 261, 264, 271], "long": [0, 14, 15, 16, 33, 43, 50, 51, 52, 54, 64, 76, 78, 79, 81, 87, 91, 94, 95, 115, 175, 191, 192, 195, 204, 205, 213, 215, 227, 236, 242, 262, 265], "copi": [0, 1, 2, 7, 9, 13, 34, 43, 44, 51, 67, 87, 91, 92, 184, 186, 188, 190, 194, 195, 202, 213, 226, 233, 236, 269], "statement": [0, 7, 8, 14, 18, 20, 32, 33, 51, 59, 76, 81, 84, 113, 140, 195, 215, 224, 228, 233], "redistribut": [0, 191], "see": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 15, 18, 21, 26, 27, 28, 29, 31, 32, 33, 37, 39, 42, 43, 44, 47, 50, 52, 53, 56, 57, 58, 59, 63, 67, 68, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 92, 93, 98, 104, 107, 108, 118, 120, 123, 125, 126, 130, 133, 136, 137, 146, 150, 151, 155, 156, 157, 158, 160, 161, 164, 166, 171, 175, 178, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 197, 198, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 220, 221, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 240, 241, 249, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271], "file": [0, 2, 9, 11, 12, 13, 14, 15, 33, 87, 113, 128, 150, 195, 202, 205, 207, 224, 226, 227, 228, 234, 237], "That": [0, 2, 7, 8, 12, 15, 18, 51, 52, 57, 81, 87, 122, 158, 163, 169, 178, 179, 182, 183, 185, 186, 188, 190, 201, 202, 211, 213, 215, 227, 228, 234, 259, 262, 265, 270], "said": [0, 12, 25, 29, 33, 37, 91, 166, 176, 178, 179, 183, 211, 214, 215, 240, 246], "although": [0, 2, 4, 5, 7, 11, 12, 14, 15, 18, 43, 51, 52, 57, 63, 75, 76, 79, 81, 82, 84, 87, 91, 94, 104, 115, 128, 182, 185, 186, 188, 190, 191, 203, 204, 207, 208, 213, 227, 233, 234, 262, 265, 270], "requir": [0, 1, 2, 11, 14, 15, 16, 18, 20, 21, 33, 42, 51, 52, 54, 55, 59, 61, 62, 64, 65, 68, 70, 81, 87, 90, 91, 92, 93, 94, 98, 104, 105, 108, 110, 112, 113, 115, 116, 126, 135, 158, 170, 171, 173, 181, 182, 185, 186, 188, 190, 192, 195, 198, 204, 205, 208, 211, 213, 214, 215, 219, 226, 227, 228, 229, 231, 233, 234, 242, 243, 244, 266, 268], "conveni": [0, 1, 2, 9, 24, 31, 33, 43, 51, 52, 56, 59, 78, 81, 93, 113, 128, 170, 173, 178, 179, 181, 182, 183, 184, 185, 186, 190, 193, 202, 203, 207, 213, 219, 220, 227, 229, 230, 234, 246, 260, 262], "pleas": [0, 1, 12, 14, 15, 17, 20, 29, 31, 51, 59, 63, 76, 91, 104, 108, 113, 122, 125, 126, 133, 134, 155, 170, 179, 180, 181, 182, 188, 189, 203, 207, 208, 213, 214, 234, 240, 244, 267, 271], "when": [0, 1, 2, 4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 20, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 42, 43, 44, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 75, 77, 78, 79, 81, 82, 83, 87, 91, 92, 93, 98, 100, 101, 104, 107, 113, 115, 120, 122, 123, 124, 125, 126, 129, 134, 135, 140, 145, 146, 150, 153, 155, 163, 164, 165, 170, 175, 178, 179, 181, 182, 183, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 219, 220, 224, 226, 227, 228, 229, 231, 233, 234, 236, 237, 239, 243, 260, 262, 264, 265, 270, 271], "your": [0, 1, 2, 9, 11, 12, 13, 14, 15, 17, 18, 20, 22, 27, 51, 52, 78, 79, 87, 92, 93, 100, 104, 123, 125, 179, 181, 195, 202, 207, 211, 214, 215, 233, 234, 260, 264, 266, 267, 269, 270], "work": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 18, 20, 26, 28, 31, 32, 33, 42, 43, 44, 51, 52, 55, 59, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 104, 113, 115, 126, 128, 141, 145, 150, 154, 155, 156, 157, 160, 163, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 195, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 221, 226, 227, 228, 230, 233, 234, 235, 236, 243, 244, 257, 262, 263, 264, 265, 266, 269, 270], "also": [0, 1, 2, 5, 7, 8, 9, 11, 12, 15, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 40, 42, 43, 50, 52, 53, 55, 56, 57, 58, 59, 63, 67, 69, 71, 73, 74, 76, 78, 80, 81, 82, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 100, 104, 105, 106, 107, 108, 112, 113, 115, 116, 117, 120, 123, 124, 125, 126, 128, 129, 130, 134, 144, 145, 147, 151, 155, 160, 161, 164, 166, 170, 171, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 240, 242, 243, 244, 245, 246, 248, 249, 259, 260, 262, 264, 265, 266, 269, 270, 271], "consid": [0, 1, 2, 4, 7, 8, 12, 15, 18, 29, 32, 33, 40, 43, 46, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 67, 75, 76, 78, 79, 80, 81, 82, 84, 87, 91, 100, 104, 105, 110, 114, 123, 129, 151, 158, 161, 166, 172, 175, 176, 178, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 198, 202, 207, 208, 211, 212, 213, 214, 215, 226, 228, 233, 242, 244, 246, 248, 249, 262, 266, 270], "contribut": [0, 11, 12, 13, 14, 15, 20, 21, 67, 91, 108, 117, 120, 185, 187, 188, 190, 211, 249], "all": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 98, 100, 101, 105, 106, 107, 108, 110, 112, 113, 115, 117, 122, 123, 125, 128, 129, 135, 140, 141, 145, 155, 157, 158, 159, 161, 163, 164, 165, 166, 168, 169, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 224, 226, 227, 228, 229, 231, 233, 234, 236, 240, 241, 243, 245, 246, 247, 248, 250, 259, 260, 262, 264, 265, 266, 269, 270, 271], "chang": [0, 1, 2, 7, 9, 14, 15, 16, 20, 32, 33, 34, 42, 43, 47, 50, 51, 52, 55, 57, 59, 65, 66, 76, 78, 81, 87, 91, 93, 94, 100, 110, 113, 115, 119, 135, 146, 156, 166, 167, 170, 176, 178, 179, 180, 181, 182, 183, 184, 188, 191, 192, 195, 202, 203, 204, 205, 207, 211, 213, 214, 215, 216, 226, 233, 234, 244, 246, 259, 262, 265, 269], "back": [0, 18, 32, 33, 47, 50, 51, 52, 57, 59, 66, 67, 73, 75, 76, 78, 79, 82, 91, 92, 100, 155, 175, 178, 185, 187, 190, 191, 193, 195, 205, 211, 213, 216, 217], "we": [0, 1, 2, 5, 7, 8, 11, 12, 13, 14, 15, 18, 22, 26, 27, 28, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 64, 69, 74, 75, 76, 78, 79, 80, 81, 82, 87, 88, 90, 91, 100, 103, 104, 105, 106, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 133, 136, 144, 147, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 170, 171, 173, 174, 176, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 215, 219, 221, 226, 227, 228, 230, 231, 233, 234, 240, 243, 244, 245, 246, 248, 249, 259, 260, 262, 264, 265, 266, 269, 270, 271], "can": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 120, 122, 123, 124, 125, 126, 128, 129, 133, 134, 135, 140, 142, 145, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 230, 231, 233, 234, 236, 242, 243, 244, 245, 246, 248, 249, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271], "incorpor": [0, 5, 11, 183, 207], "benefit": [0, 11, 18, 33, 104, 125, 175], "end": [0, 1, 2, 5, 7, 8, 11, 14, 18, 22, 31, 32, 33, 41, 42, 47, 49, 50, 51, 52, 56, 57, 59, 61, 63, 67, 76, 79, 81, 82, 84, 87, 91, 93, 94, 95, 112, 115, 116, 119, 123, 124, 125, 126, 166, 171, 175, 176, 179, 180, 184, 188, 195, 198, 201, 203, 204, 206, 208, 211, 212, 213, 214, 215, 216, 226, 228, 229, 231, 233, 236, 246, 260, 264, 266, 270], "develop": [0, 5, 7, 12, 14, 15, 16, 17, 18, 20, 21, 23, 31, 34, 49, 93, 128, 165, 181, 182, 185, 188, 213, 214, 264, 267], "team": [0, 12], "member": [0, 1, 7, 14, 32, 40, 42, 52, 74, 182, 203, 220], "list": [0, 3, 7, 11, 12, 14, 15, 20, 25, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 100, 105, 107, 108, 112, 115, 116, 119, 123, 124, 128, 129, 134, 145, 147, 150, 151, 155, 156, 158, 159, 161, 163, 171, 174, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 259, 263, 264, 266, 269, 270, 271], "github": [0, 1, 9, 11, 12, 13, 15, 20, 31, 51, 67, 78, 87, 165, 203, 214, 266], "found": [0, 7, 8, 9, 11, 12, 14, 15, 31, 34, 42, 43, 45, 47, 49, 51, 52, 53, 61, 62, 67, 76, 78, 87, 91, 100, 106, 107, 108, 109, 125, 128, 165, 178, 182, 183, 184, 185, 190, 191, 192, 195, 197, 198, 201, 202, 205, 208, 211, 212, 213, 214, 215, 219, 233, 234, 236, 237, 269], "zotero": 0, "codebas": [1, 7, 12, 185, 224], "polici": [1, 15, 16, 21, 229, 231], "well": [1, 2, 5, 7, 12, 14, 15, 18, 20, 29, 31, 32, 33, 34, 35, 43, 50, 51, 56, 57, 59, 78, 82, 85, 87, 101, 104, 113, 115, 116, 117, 125, 151, 160, 163, 164, 170, 178, 180, 181, 182, 184, 185, 186, 188, 190, 195, 202, 203, 204, 205, 207, 211, 213, 214, 226, 227, 243, 244, 248, 262, 264, 265, 270], "instruct": [1, 2, 5, 9, 11, 13, 14, 15, 17, 23, 33, 195, 213, 227, 228], "contributor": [1, 9, 11, 15, 18], "how": [1, 2, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 22, 32, 33, 42, 43, 50, 51, 58, 59, 63, 74, 77, 78, 81, 82, 84, 87, 91, 93, 104, 108, 113, 114, 119, 123, 124, 126, 128, 132, 133, 149, 153, 156, 157, 158, 163, 164, 171, 178, 181, 182, 185, 186, 188, 190, 194, 195, 198, 202, 203, 205, 207, 208, 209, 211, 212, 215, 221, 226, 227, 228, 229, 231, 233, 234, 244, 260, 262, 264, 265, 266, 267, 269, 270], "thing": [1, 2, 7, 8, 11, 12, 14, 15, 18, 29, 33, 41, 42, 43, 51, 53, 63, 79, 80, 81, 82, 87, 92, 104, 110, 113, 125, 128, 145, 161, 166, 178, 179, 192, 194, 202, 203, 204, 207, 211, 214, 219, 229, 231, 233, 259, 260, 262, 264, 265, 266, 269, 270], "In": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 50, 51, 52, 53, 55, 56, 57, 59, 64, 66, 67, 68, 69, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 95, 100, 104, 107, 108, 113, 116, 117, 122, 123, 124, 125, 126, 128, 129, 147, 149, 150, 151, 156, 160, 161, 164, 166, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 219, 221, 224, 226, 228, 230, 231, 233, 234, 237, 240, 243, 244, 246, 248, 259, 262, 263, 264, 265, 266, 269, 270, 271], "particular": [1, 2, 7, 8, 12, 14, 22, 29, 34, 42, 51, 52, 55, 59, 62, 76, 78, 81, 84, 87, 91, 94, 122, 145, 156, 183, 184, 185, 186, 188, 190, 191, 201, 203, 205, 207, 208, 211, 213, 214, 226, 228, 230, 266, 268, 270], "last": [1, 2, 4, 5, 7, 8, 15, 16, 18, 26, 27, 28, 32, 33, 34, 41, 42, 43, 47, 50, 51, 52, 55, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 100, 112, 133, 166, 180, 181, 182, 183, 185, 186, 188, 191, 194, 195, 202, 203, 208, 211, 213, 214, 215, 216, 221, 224, 226, 227, 228, 229, 231, 233, 234, 236, 260, 262, 265, 266], "least": [1, 7, 11, 12, 15, 29, 31, 33, 42, 51, 57, 63, 75, 76, 78, 87, 91, 92, 108, 141, 155, 163, 182, 183, 185, 186, 188, 190, 191, 202, 204, 207, 211, 213, 214, 215, 228, 270], "after": [1, 2, 9, 12, 13, 14, 15, 20, 25, 27, 28, 32, 34, 39, 42, 43, 47, 49, 50, 51, 52, 53, 57, 66, 68, 73, 78, 82, 87, 91, 93, 94, 100, 123, 125, 128, 130, 134, 146, 158, 166, 170, 176, 179, 184, 188, 190, 191, 192, 193, 195, 196, 201, 208, 211, 212, 213, 214, 216, 226, 229, 234, 236, 240, 242, 246, 259, 260, 262, 266, 270], "major": [1, 9, 11, 12, 15, 61, 104, 220, 264, 270], "releas": [1, 9, 15, 51, 78, 82, 93, 125, 181, 220, 231, 234, 265], "includ": [1, 2, 7, 9, 11, 12, 14, 15, 17, 18, 20, 21, 23, 28, 29, 31, 32, 33, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 63, 69, 76, 78, 81, 82, 84, 86, 87, 91, 92, 93, 102, 104, 112, 113, 115, 116, 117, 122, 123, 125, 128, 141, 145, 150, 155, 158, 159, 169, 176, 179, 183, 186, 187, 188, 190, 191, 194, 195, 196, 201, 202, 203, 205, 207, 210, 211, 212, 213, 215, 218, 221, 224, 226, 228, 229, 230, 231, 233, 240, 241, 243, 248, 250, 260, 264, 265, 266, 270, 271], "period": [1, 12, 14, 31, 51, 52, 57, 76, 91, 125, 135, 157, 164, 190, 195, 198, 201, 210, 214, 215, 233], "mai": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 18, 20, 22, 24, 29, 31, 32, 33, 34, 42, 43, 44, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 68, 76, 78, 79, 81, 82, 83, 87, 88, 90, 91, 93, 106, 108, 109, 113, 116, 122, 125, 147, 156, 161, 162, 163, 168, 171, 174, 176, 178, 181, 182, 183, 184, 188, 190, 195, 196, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 246, 248, 259, 260, 262, 265, 266, 270, 271], "remov": [1, 7, 12, 26, 27, 42, 45, 49, 51, 55, 57, 66, 67, 76, 81, 82, 87, 91, 94, 105, 119, 121, 125, 145, 161, 186, 188, 191, 193, 194, 195, 207, 208, 211, 213, 214, 216, 217, 227, 228, 229, 231, 233, 234, 259, 270], "updat": [1, 2, 12, 20, 51, 116, 141, 151, 154, 155, 157, 180, 188, 191, 195, 208, 221, 231], "replac": [1, 2, 7, 12, 14, 31, 33, 42, 50, 51, 52, 55, 56, 57, 59, 61, 65, 78, 81, 82, 87, 91, 92, 93, 104, 106, 128, 150, 156, 171, 182, 188, 191, 192, 196, 202, 204, 205, 207, 211, 213, 214, 221, 222, 233, 234, 236, 259, 268], "continu": [1, 5, 8, 12, 14, 15, 18, 31, 33, 41, 43, 45, 51, 56, 57, 59, 76, 79, 82, 91, 97, 98, 156, 159, 175, 186, 188, 191, 208, 210, 211, 219, 261], "dure": [1, 2, 12, 24, 33, 51, 52, 82, 87, 91, 93, 105, 108, 128, 129, 178, 190, 204, 213, 214, 231, 233], "sympydeprecationwarn": [1, 12, 224, 226, 229, 231], "messag": [1, 12, 52, 79, 229, 231], "whenev": [1, 2, 11, 12, 18, 49, 76, 78, 87, 168, 181, 182, 183, 197, 202, 205, 215, 260, 262, 265], "recommend": [1, 2, 7, 9, 13, 14, 18, 20, 22, 32, 33, 51, 52, 55, 82, 104, 123, 128, 155, 171, 178, 183, 184, 185, 186, 192, 208, 211, 214, 220, 224, 231, 243, 244, 268, 271], "doe": [1, 4, 7, 8, 11, 14, 15, 16, 18, 20, 23, 24, 27, 28, 31, 32, 33, 34, 42, 43, 47, 49, 50, 51, 52, 53, 55, 57, 59, 61, 62, 64, 65, 67, 76, 78, 81, 82, 87, 90, 91, 93, 102, 104, 106, 113, 115, 119, 141, 145, 151, 155, 157, 160, 170, 178, 179, 181, 183, 184, 185, 186, 188, 190, 191, 192, 195, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 220, 221, 224, 226, 228, 230, 233, 234, 236, 240, 241, 244, 259, 260, 262, 265, 266, 269, 270, 271], "describ": [1, 2, 7, 8, 12, 14, 15, 18, 32, 34, 41, 42, 43, 45, 46, 49, 50, 51, 52, 56, 59, 61, 66, 67, 76, 78, 82, 87, 90, 91, 100, 104, 108, 110, 112, 113, 116, 117, 119, 121, 122, 123, 124, 125, 126, 140, 161, 165, 166, 170, 171, 176, 178, 179, 182, 185, 188, 190, 196, 202, 205, 207, 208, 211, 214, 215, 219, 228, 233, 234, 240, 241, 246, 260], "below": [1, 2, 7, 9, 11, 12, 14, 15, 18, 20, 31, 32, 33, 41, 42, 43, 51, 52, 56, 58, 59, 60, 61, 67, 68, 74, 76, 78, 82, 87, 90, 91, 93, 94, 95, 100, 105, 108, 112, 113, 115, 116, 117, 118, 123, 124, 125, 128, 155, 161, 166, 171, 179, 180, 181, 182, 184, 191, 195, 196, 198, 204, 207, 208, 211, 212, 214, 215, 226, 228, 233, 234, 236, 244, 246, 249, 250, 266, 270], "each": [1, 2, 7, 9, 11, 12, 18, 28, 29, 31, 32, 33, 34, 35, 42, 43, 47, 51, 52, 53, 54, 55, 56, 57, 59, 61, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 94, 98, 100, 106, 107, 108, 113, 115, 116, 119, 121, 123, 126, 145, 158, 161, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 193, 195, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 226, 228, 230, 233, 234, 236, 240, 241, 242, 244, 246, 248, 260, 263, 265, 270, 271], "given": [1, 2, 5, 7, 9, 11, 12, 15, 18, 25, 27, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 78, 80, 81, 82, 84, 87, 90, 91, 93, 94, 98, 101, 105, 106, 110, 112, 113, 116, 126, 134, 151, 156, 158, 166, 167, 169, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 220, 221, 224, 226, 228, 230, 233, 234, 236, 237, 238, 240, 242, 244, 246, 248, 259, 265, 268, 270, 271], "add": [1, 2, 4, 7, 11, 12, 13, 14, 25, 27, 31, 33, 40, 42, 47, 52, 55, 58, 66, 68, 76, 80, 84, 87, 91, 94, 105, 113, 128, 139, 145, 155, 160, 161, 164, 178, 179, 181, 184, 185, 186, 188, 190, 191, 192, 195, 196, 205, 207, 208, 211, 212, 214, 215, 217, 219, 220, 221, 229, 234, 238, 251, 260, 262, 265, 269, 270], "filter": [1, 4, 12, 51, 52, 76, 133, 191, 224, 226, 231, 233], "modul": [1, 2, 4, 7, 11, 12, 13, 14, 15, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 41, 43, 51, 52, 54, 56, 57, 59, 63, 67, 71, 74, 77, 78, 79, 81, 84, 85, 86, 87, 92, 93, 94, 96, 98, 101, 104, 113, 114, 118, 122, 123, 124, 128, 130, 133, 135, 136, 148, 151, 164, 165, 166, 167, 176, 179, 181, 186, 187, 189, 192, 193, 195, 199, 202, 205, 209, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 242, 244, 246, 247, 248, 249, 250, 256, 258, 259, 262, 264, 270, 271], "For": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 65, 66, 69, 72, 74, 75, 76, 77, 80, 81, 82, 87, 91, 92, 93, 94, 95, 100, 102, 106, 108, 109, 113, 116, 122, 123, 124, 125, 126, 128, 130, 144, 145, 150, 154, 156, 158, 159, 160, 161, 163, 166, 167, 171, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 216, 219, 220, 221, 222, 226, 227, 228, 230, 231, 233, 234, 237, 238, 240, 241, 244, 246, 248, 249, 259, 260, 262, 265, 266, 270, 271], "except": [1, 2, 5, 7, 8, 11, 12, 14, 18, 31, 33, 42, 43, 51, 52, 55, 57, 59, 76, 78, 86, 91, 107, 120, 167, 180, 182, 185, 186, 187, 190, 191, 192, 193, 195, 204, 207, 208, 211, 212, 214, 219, 224, 226, 228, 229, 232, 233, 234, 243, 246, 258, 259, 262, 265, 266], "filterwarn": [1, 12], "ignor": [1, 2, 18, 33, 42, 51, 52, 56, 57, 61, 66, 76, 81, 87, 91, 100, 106, 115, 158, 161, 171, 181, 191, 195, 196, 207, 213, 227, 270], "error": [1, 7, 8, 9, 11, 12, 14, 15, 24, 31, 33, 40, 43, 50, 51, 52, 57, 58, 61, 66, 76, 78, 87, 90, 91, 93, 113, 179, 180, 183, 185, 186, 188, 192, 195, 197, 203, 211, 212, 213, 214, 215, 226, 227, 228, 231, 233, 236, 240, 251, 259], "make": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 24, 27, 28, 29, 31, 33, 34, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 59, 63, 67, 78, 79, 81, 87, 90, 91, 92, 93, 94, 95, 108, 112, 113, 115, 119, 120, 123, 125, 126, 128, 141, 158, 163, 175, 178, 181, 184, 185, 186, 188, 190, 191, 192, 194, 195, 198, 203, 204, 205, 207, 211, 212, 213, 214, 219, 221, 224, 226, 227, 228, 229, 231, 233, 234, 243, 248, 249, 262, 263, 264, 265, 266, 270], "rais": [1, 2, 7, 8, 12, 18, 26, 28, 31, 33, 40, 43, 51, 52, 53, 55, 57, 60, 61, 64, 66, 67, 68, 76, 78, 82, 84, 87, 88, 90, 91, 98, 100, 135, 147, 176, 179, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 197, 203, 207, 210, 211, 212, 213, 214, 215, 219, 221, 224, 226, 228, 231, 233, 234, 236, 237, 246, 266], "want": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 18, 20, 29, 31, 33, 34, 35, 43, 51, 52, 58, 63, 65, 67, 70, 76, 78, 82, 84, 87, 88, 91, 92, 98, 100, 103, 109, 113, 128, 144, 154, 155, 158, 161, 164, 166, 173, 174, 178, 179, 181, 183, 184, 185, 188, 190, 191, 192, 194, 195, 196, 202, 203, 205, 207, 208, 211, 212, 213, 214, 215, 221, 224, 226, 228, 230, 233, 234, 244, 246, 249, 259, 260, 262, 264, 265, 266, 267, 269, 270], "aren": [1, 12, 18, 33, 51, 113, 194, 214], "omit": [1, 7, 14, 18, 33, 43, 50, 51, 52, 76, 78, 81, 87, 163, 195, 196, 203, 205, 213, 219, 228, 233, 260], "regex": 1, "match": [1, 2, 7, 11, 12, 14, 18, 42, 43, 50, 51, 64, 76, 78, 82, 87, 112, 137, 162, 170, 171, 184, 191, 207, 208, 211, 212, 215, 224, 226, 228, 233, 234, 245, 260], "categori": [1, 23, 182, 250, 257], "here": [1, 5, 7, 8, 12, 14, 15, 18, 20, 27, 28, 33, 34, 35, 40, 41, 42, 43, 49, 50, 51, 52, 53, 55, 56, 57, 59, 67, 68, 69, 73, 74, 76, 78, 81, 82, 87, 90, 91, 92, 93, 94, 100, 104, 108, 113, 114, 115, 119, 120, 121, 123, 125, 126, 128, 129, 151, 156, 161, 170, 175, 176, 178, 179, 181, 182, 185, 186, 188, 190, 191, 192, 195, 196, 202, 204, 205, 207, 208, 211, 213, 214, 215, 219, 220, 227, 228, 230, 231, 233, 234, 244, 246, 248, 259, 260, 262, 264, 265, 266, 268, 269, 270], "regular": [1, 2, 7, 8, 12, 34, 39, 51, 52, 55, 59, 67, 73, 74, 78, 91, 113, 155, 185, 192, 211, 221, 226, 269, 270], "about": [1, 2, 5, 7, 8, 12, 13, 14, 15, 18, 20, 25, 26, 28, 29, 32, 33, 42, 43, 44, 45, 51, 55, 57, 59, 61, 62, 63, 65, 66, 67, 71, 73, 77, 78, 80, 87, 91, 94, 95, 100, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 125, 126, 156, 158, 159, 161, 165, 170, 171, 178, 179, 180, 182, 184, 185, 190, 192, 195, 197, 202, 207, 208, 209, 211, 215, 219, 220, 226, 227, 228, 229, 230, 231, 240, 241, 243, 246, 247, 259, 261, 262, 264, 265, 266, 270], "might": [1, 2, 7, 8, 12, 14, 18, 31, 51, 55, 57, 64, 73, 76, 84, 87, 91, 93, 104, 113, 114, 128, 141, 171, 178, 181, 185, 186, 191, 192, 195, 196, 203, 204, 205, 207, 208, 213, 214, 215, 227, 228, 231, 233, 236, 259, 262, 264, 265, 267, 270], "lead": [1, 7, 8, 18, 50, 51, 57, 61, 78, 81, 87, 91, 102, 109, 145, 171, 179, 183, 186, 188, 190, 191, 192, 195, 202, 204, 207, 211, 214, 228, 231, 236, 263, 270], "becaus": [1, 2, 7, 8, 9, 11, 12, 14, 15, 18, 20, 24, 29, 33, 43, 50, 51, 52, 57, 63, 67, 68, 76, 78, 81, 85, 87, 91, 93, 113, 116, 141, 149, 161, 163, 166, 178, 181, 182, 184, 185, 186, 188, 190, 191, 192, 194, 195, 198, 202, 205, 207, 208, 211, 212, 213, 214, 224, 226, 227, 229, 233, 234, 236, 243, 260, 262, 264, 265, 266, 269, 270, 271], "against": [1, 7, 18, 52, 94, 113, 227], "start": [1, 2, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 23, 32, 33, 35, 40, 41, 42, 43, 47, 50, 51, 52, 53, 59, 81, 82, 84, 87, 90, 91, 92, 94, 95, 113, 115, 123, 124, 156, 157, 160, 164, 178, 179, 181, 185, 188, 190, 191, 195, 198, 201, 203, 204, 205, 208, 211, 213, 214, 215, 216, 219, 226, 227, 233, 235, 236, 245, 259, 262, 264], "typic": [1, 11, 12, 18, 47, 59, 76, 91, 100, 105, 110, 114, 170, 179, 181, 183, 188, 192, 205, 227, 228, 244], "span": [1, 14, 80, 87, 94, 95, 190, 195, 231, 266], "multipl": [1, 2, 7, 11, 12, 14, 18, 27, 28, 29, 31, 32, 33, 34, 40, 42, 43, 47, 50, 51, 52, 56, 57, 59, 61, 66, 69, 71, 76, 78, 80, 81, 82, 84, 87, 88, 91, 93, 97, 100, 104, 115, 122, 128, 129, 145, 146, 147, 151, 158, 160, 163, 166, 167, 168, 171, 174, 178, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 195, 200, 201, 203, 204, 205, 207, 208, 211, 212, 214, 215, 216, 219, 221, 224, 228, 229, 230, 231, 233, 234, 236, 240, 244, 259, 260, 262, 263, 265, 266, 271], "line": [1, 2, 5, 7, 12, 14, 20, 32, 33, 42, 43, 47, 52, 61, 62, 63, 65, 66, 67, 68, 73, 76, 78, 79, 80, 87, 91, 94, 98, 101, 113, 115, 120, 141, 171, 175, 176, 178, 180, 181, 195, 198, 205, 207, 211, 215, 216, 224, 226, 227, 228, 231, 234, 236, 246, 249, 262], "should": [1, 2, 4, 7, 8, 9, 11, 13, 14, 15, 16, 18, 23, 24, 26, 28, 31, 32, 33, 34, 42, 43, 44, 45, 47, 50, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 87, 91, 93, 94, 98, 100, 104, 113, 115, 116, 123, 125, 126, 128, 129, 130, 141, 145, 149, 151, 153, 155, 156, 159, 161, 163, 164, 166, 167, 171, 175, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 194, 195, 197, 198, 201, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 219, 220, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 240, 243, 251, 259, 260, 262, 263, 266], "don": [1, 2, 8, 12, 18, 28, 33, 76, 87, 92, 93, 104, 113, 170, 178, 179, 185, 195, 205, 214, 224, 229, 248, 259, 260, 264, 265, 270], "same": [1, 2, 5, 7, 8, 9, 12, 14, 15, 18, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 42, 43, 47, 50, 51, 52, 53, 56, 58, 59, 61, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 100, 101, 104, 105, 111, 113, 116, 119, 120, 125, 126, 145, 147, 155, 158, 159, 161, 163, 164, 166, 168, 169, 170, 171, 173, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 220, 221, 222, 224, 226, 228, 229, 230, 231, 233, 234, 236, 240, 241, 243, 244, 248, 260, 262, 265, 266, 269, 270], "unrel": [1, 51, 58, 183, 262], "pattern": [1, 2, 7, 11, 18, 51, 76, 78, 81, 82, 93, 155, 185, 205, 207, 211, 213, 260, 265], "instead": [1, 2, 7, 8, 9, 11, 12, 14, 15, 18, 24, 26, 28, 32, 33, 42, 44, 47, 51, 53, 54, 55, 56, 59, 78, 79, 81, 82, 84, 85, 87, 91, 98, 101, 103, 112, 113, 115, 116, 125, 128, 159, 163, 165, 171, 175, 176, 178, 179, 182, 185, 186, 188, 190, 191, 193, 195, 197, 205, 207, 211, 213, 214, 215, 219, 220, 221, 224, 229, 230, 231, 234, 238, 246, 249, 259, 260, 262, 264, 265, 266, 270, 271], "turn": [1, 7, 15, 33, 51, 57, 59, 66, 76, 85, 120, 123, 176, 182, 190, 192, 195, 202, 203, 205, 207, 208, 211, 226, 233, 248, 262, 264], "do": [1, 2, 5, 7, 8, 10, 11, 12, 14, 15, 18, 20, 23, 24, 27, 28, 29, 31, 32, 33, 34, 43, 47, 50, 51, 52, 53, 54, 57, 59, 61, 63, 66, 67, 70, 76, 78, 79, 81, 82, 84, 85, 87, 88, 91, 92, 97, 100, 104, 108, 110, 112, 113, 114, 116, 120, 123, 128, 133, 136, 141, 145, 150, 153, 155, 157, 163, 165, 166, 169, 170, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 198, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 217, 220, 221, 224, 226, 227, 229, 231, 233, 234, 236, 242, 244, 245, 246, 248, 259, 260, 262, 263, 264, 265, 266, 268, 270], "abov": [1, 2, 5, 8, 9, 11, 12, 14, 15, 18, 31, 32, 33, 34, 35, 41, 42, 43, 47, 50, 51, 55, 56, 59, 61, 64, 67, 68, 76, 78, 81, 82, 87, 91, 92, 93, 95, 100, 104, 108, 110, 112, 113, 115, 116, 117, 122, 124, 125, 126, 129, 156, 158, 161, 171, 176, 178, 179, 181, 182, 183, 185, 186, 188, 190, 191, 192, 194, 195, 196, 202, 205, 207, 208, 211, 213, 214, 215, 219, 220, 227, 228, 234, 243, 244, 245, 246, 249, 262, 264, 265, 266, 270], "appli": [1, 8, 15, 18, 21, 25, 26, 27, 28, 29, 33, 42, 43, 44, 49, 50, 51, 52, 53, 54, 57, 58, 61, 66, 67, 69, 77, 78, 81, 82, 83, 87, 91, 93, 94, 95, 100, 101, 105, 106, 115, 117, 123, 125, 127, 138, 142, 145, 146, 150, 153, 154, 158, 161, 171, 179, 181, 183, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 206, 207, 211, 212, 213, 214, 215, 216, 219, 226, 229, 233, 240, 241, 244, 266, 269, 270], "If": [1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 40, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 94, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 123, 124, 125, 126, 128, 129, 134, 138, 142, 145, 151, 155, 156, 157, 158, 159, 161, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 240, 242, 244, 246, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "pytest": [1, 11, 12, 223, 229, 231, 234, 258], "capabl": [1, 7, 31, 33, 51, 55, 63, 76, 91, 94, 95, 122, 128, 181, 192, 195, 214, 263, 264, 270, 271], "either": [1, 2, 7, 8, 9, 11, 14, 15, 18, 25, 29, 31, 32, 35, 43, 50, 51, 52, 55, 56, 57, 59, 66, 68, 74, 76, 78, 79, 81, 82, 87, 91, 100, 105, 108, 109, 112, 113, 124, 126, 128, 145, 151, 158, 161, 163, 175, 179, 181, 183, 184, 185, 186, 188, 190, 191, 195, 197, 202, 203, 204, 205, 208, 211, 212, 213, 214, 215, 216, 219, 220, 227, 233, 234, 240, 248, 262, 265, 266], "them": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 24, 27, 29, 32, 33, 40, 42, 43, 50, 51, 52, 53, 55, 56, 59, 62, 67, 69, 71, 73, 74, 76, 80, 81, 84, 87, 90, 91, 92, 104, 108, 110, 113, 115, 116, 117, 122, 123, 125, 126, 128, 134, 138, 154, 155, 161, 163, 166, 169, 171, 176, 178, 179, 182, 183, 185, 186, 188, 190, 191, 192, 194, 195, 196, 202, 203, 204, 205, 207, 208, 211, 213, 214, 216, 217, 226, 228, 230, 233, 242, 259, 260, 262, 264, 265, 270], "w": [1, 2, 33, 35, 41, 50, 51, 52, 53, 54, 57, 59, 76, 78, 81, 87, 88, 107, 110, 120, 126, 127, 130, 135, 146, 150, 159, 174, 176, 177, 180, 181, 183, 184, 188, 189, 190, 191, 192, 196, 202, 203, 205, 207, 208, 211, 212, 214, 215, 226, 234, 236, 246, 271], "pythonwarn": 1, "environ": [1, 9, 11, 16, 17, 21, 51, 79, 175, 195, 215, 226, 236, 262, 264, 269], "variabl": [1, 3, 5, 8, 10, 11, 14, 15, 18, 23, 24, 25, 26, 28, 29, 31, 33, 34, 46, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 68, 70, 76, 78, 79, 81, 82, 87, 93, 94, 95, 98, 100, 112, 113, 119, 121, 128, 129, 135, 150, 155, 159, 161, 164, 170, 171, 173, 176, 183, 185, 186, 188, 190, 191, 192, 195, 196, 201, 202, 207, 208, 210, 211, 212, 213, 214, 222, 226, 228, 229, 230, 234, 240, 242, 243, 245, 246, 248, 257, 260, 262, 264, 266, 271], "NOT": [1, 81, 100, 141, 145, 160, 163, 224, 227], "blog": [1, 18, 33, 56, 82, 208, 214], "post": [1, 7, 33, 45, 51, 195, 196, 207, 226, 265], "ned": 1, "batcheld": 1, "issu": [1, 2, 8, 12, 15, 17, 18, 20, 24, 31, 50, 51, 68, 78, 81, 87, 92, 109, 122, 141, 177, 180, 189, 190, 192, 195, 203, 204, 213, 214, 226, 228, 230, 231, 233, 236, 261, 262, 265, 270], "why": [1, 2, 7, 12, 33, 51, 179, 186, 192, 202, 205, 209, 234, 263, 265, 266], "old": [1, 2, 12, 21, 51, 52, 53, 79, 125, 130, 165, 166, 175, 181, 182, 186, 187, 195, 196, 207, 211, 214, 216, 234, 259], "defin": [1, 2, 5, 7, 8, 12, 14, 15, 24, 25, 27, 28, 31, 33, 34, 35, 41, 42, 43, 46, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 74, 76, 78, 79, 82, 84, 87, 91, 95, 98, 104, 105, 107, 110, 112, 113, 115, 119, 121, 122, 126, 128, 129, 132, 138, 140, 142, 147, 150, 156, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 197, 198, 201, 202, 203, 205, 207, 208, 211, 213, 214, 215, 216, 220, 221, 227, 228, 229, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 248, 249, 262, 264, 270], "pars": [1, 43, 51, 84, 113, 192, 194, 250, 258], "parse_mathematica": [1, 11, 93], "more": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 20, 24, 28, 29, 31, 32, 33, 34, 37, 41, 42, 43, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 73, 76, 78, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 98, 100, 104, 108, 109, 113, 115, 116, 118, 120, 122, 123, 124, 125, 126, 128, 130, 133, 145, 149, 150, 155, 158, 159, 160, 161, 166, 170, 171, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207, 208, 211, 212, 213, 214, 215, 226, 228, 229, 230, 233, 234, 236, 240, 243, 247, 259, 260, 262, 263, 265, 266, 268, 269, 270, 271], "comprehens": [1, 7, 19, 189, 203, 215, 259], "additional_transl": 1, "paramet": [1, 2, 12, 15, 25, 26, 28, 31, 33, 34, 42, 43, 47, 49, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 74, 76, 78, 79, 81, 82, 84, 87, 88, 90, 91, 93, 94, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 128, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 163, 171, 172, 173, 174, 175, 176, 179, 180, 181, 183, 184, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 224, 226, 227, 228, 230, 231, 233, 234, 240, 241, 242, 243, 244, 249, 260, 265], "avail": [1, 2, 7, 9, 11, 13, 15, 20, 23, 32, 33, 42, 43, 50, 51, 56, 59, 78, 87, 92, 93, 113, 125, 128, 185, 186, 188, 191, 195, 196, 201, 203, 205, 207, 208, 213, 214, 215, 216, 220, 221, 226, 233, 234, 239, 240, 257, 262, 269], "translat": [1, 11, 33, 42, 51, 60, 62, 66, 68, 92, 93, 100, 103, 107, 108, 119, 121, 126, 178, 181, 195, 211, 213, 227, 228, 234, 236, 244], "rule": [1, 5, 7, 12, 15, 18, 33, 42, 43, 50, 51, 59, 74, 76, 78, 81, 82, 87, 94, 107, 113, 142, 145, 166, 171, 176, 179, 180, 192, 194, 195, 196, 201, 205, 206, 207, 211, 221, 233, 234, 246, 247, 262, 265], "convert": [1, 2, 7, 8, 9, 11, 12, 18, 25, 29, 33, 35, 43, 47, 51, 52, 55, 56, 57, 65, 66, 68, 71, 72, 75, 79, 81, 82, 87, 90, 91, 93, 100, 155, 158, 164, 165, 166, 168, 174, 181, 182, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 203, 204, 205, 207, 208, 212, 214, 215, 216, 217, 220, 226, 227, 233, 234, 236, 238, 242, 261, 262, 265, 270], "ones": [1, 11, 12, 18, 20, 33, 42, 47, 51, 76, 78, 81, 82, 84, 87, 90, 91, 113, 134, 155, 161, 184, 188, 198, 208, 211, 216, 222, 228, 236, 240, 244, 266, 269], "specifi": [1, 7, 14, 15, 18, 32, 33, 34, 46, 50, 51, 52, 53, 54, 57, 59, 60, 64, 67, 76, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 100, 105, 108, 112, 113, 115, 116, 117, 119, 122, 123, 124, 125, 126, 128, 129, 145, 150, 155, 156, 158, 159, 164, 170, 171, 173, 174, 176, 178, 179, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 197, 198, 201, 202, 203, 205, 207, 211, 212, 213, 214, 215, 216, 220, 221, 222, 226, 227, 228, 233, 234, 240, 241, 242, 245, 248, 257, 266], "convers": [1, 7, 14, 15, 33, 51, 71, 93, 125, 165, 183, 184, 185, 186, 188, 190, 192, 195, 208, 220, 227, 240], "sub": [1, 2, 7, 8, 14, 18, 33, 50, 57, 59, 60, 61, 62, 63, 64, 65, 67, 78, 81, 82, 84, 87, 91, 93, 94, 95, 100, 104, 106, 113, 115, 116, 119, 120, 125, 128, 158, 159, 164, 171, 180, 182, 184, 185, 186, 191, 195, 202, 203, 207, 208, 211, 212, 213, 215, 226, 227, 229, 251, 259, 260, 262], "output": [1, 2, 5, 7, 11, 14, 15, 18, 32, 33, 51, 52, 59, 75, 78, 79, 81, 82, 84, 87, 91, 92, 93, 97, 100, 108, 112, 113, 120, 125, 128, 129, 133, 134, 145, 157, 161, 170, 171, 174, 175, 176, 179, 185, 188, 191, 195, 196, 205, 207, 208, 209, 210, 211, 213, 215, 220, 226, 227, 228, 230, 233, 234, 240, 262, 264, 265, 266, 269, 270, 271], "fail": [1, 7, 8, 9, 11, 12, 14, 15, 18, 33, 42, 43, 47, 50, 51, 55, 57, 75, 76, 78, 79, 87, 88, 91, 93, 115, 151, 156, 175, 181, 184, 185, 186, 188, 190, 191, 195, 202, 205, 211, 213, 215, 224, 226, 233, 234, 266], "recogn": [1, 2, 51, 52, 56, 66, 91, 94, 101, 183, 186, 194, 203, 204, 213, 220, 262], "logic": [1, 7, 18, 21, 26, 27, 28, 29, 32, 51, 53, 76, 78, 91, 153, 155, 156, 160, 195, 197, 203, 211, 215, 233, 262, 263, 264, 266], "mean": [1, 2, 7, 8, 11, 12, 14, 15, 18, 29, 34, 43, 50, 51, 52, 53, 69, 76, 78, 79, 81, 82, 85, 87, 91, 104, 161, 163, 166, 171, 175, 178, 181, 182, 183, 185, 188, 190, 194, 195, 205, 207, 208, 211, 213, 214, 215, 216, 217, 219, 220, 226, 233, 244, 259, 260, 262, 264, 265, 266, 270, 271], "form": [1, 5, 7, 12, 15, 18, 25, 28, 29, 30, 31, 33, 34, 41, 42, 43, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 67, 71, 73, 74, 76, 78, 80, 82, 84, 86, 87, 91, 93, 94, 95, 97, 100, 104, 105, 107, 108, 109, 112, 113, 115, 116, 119, 121, 122, 123, 124, 126, 128, 129, 138, 141, 142, 143, 145, 155, 156, 159, 161, 163, 166, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 204, 205, 207, 208, 212, 213, 214, 215, 218, 220, 221, 226, 227, 233, 240, 242, 243, 245, 246, 248, 253, 254, 260, 264, 265, 266, 269, 270, 271], "similar": [1, 2, 5, 7, 12, 13, 18, 43, 50, 51, 52, 55, 56, 57, 59, 62, 67, 68, 72, 81, 87, 92, 100, 113, 115, 116, 125, 126, 159, 176, 178, 179, 183, 185, 186, 188, 192, 202, 204, 205, 207, 211, 213, 216, 221, 224, 227, 230, 231, 240, 241, 243, 244, 248, 259, 264, 265, 266, 268, 270], "full": [1, 2, 7, 12, 14, 15, 17, 18, 19, 28, 31, 33, 42, 43, 51, 55, 59, 63, 64, 78, 84, 87, 93, 123, 124, 171, 185, 188, 189, 191, 195, 197, 207, 208, 264, 270], "return": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 93, 94, 98, 100, 101, 102, 103, 105, 106, 108, 109, 110, 112, 113, 115, 116, 120, 123, 125, 126, 128, 130, 132, 133, 134, 135, 137, 138, 142, 145, 146, 147, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 242, 244, 246, 259, 260, 265, 266, 269, 270, 271], "encod": [1, 12, 35, 43, 49, 52, 81, 187, 195, 226, 230, 233], "node": [1, 31, 45, 51, 78, 93, 106, 137, 162, 171, 180, 185, 195, 202, 214, 219, 230, 252, 265, 269], "syntax": [1, 2, 12, 14, 15, 18, 26, 28, 43, 51, 78, 93, 113, 128, 158, 181, 185, 194, 195, 207, 213, 217, 236, 252, 260, 262, 264, 269, 271], "tree": [1, 4, 10, 42, 45, 51, 93, 106, 113, 153, 156, 171, 187, 191, 202, 204, 207, 214, 217, 219, 230, 233, 236, 252, 258, 261], "suppos": [1, 8, 18, 43, 50, 51, 52, 76, 182, 184, 188, 190, 191, 195, 202, 205, 211, 213, 224, 233, 244, 249, 262, 264, 270], "maximum": [1, 2, 31, 33, 34, 42, 43, 51, 57, 78, 87, 91, 94, 115, 158, 166, 181, 186, 188, 191, 195, 202, 203, 207, 208, 211, 214, 215, 230, 233], "valu": [1, 2, 5, 7, 11, 12, 14, 15, 18, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 102, 105, 107, 108, 109, 110, 112, 113, 115, 125, 128, 130, 134, 137, 140, 145, 147, 150, 153, 155, 156, 157, 158, 161, 162, 164, 165, 166, 171, 172, 174, 176, 178, 179, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 201, 202, 203, 204, 207, 208, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 226, 228, 229, 233, 234, 236, 242, 244, 246, 249, 260, 262, 265], "multipli": [1, 2, 25, 29, 33, 42, 51, 62, 66, 73, 80, 82, 87, 91, 108, 116, 124, 125, 126, 138, 147, 161, 166, 167, 182, 183, 184, 186, 188, 190, 191, 195, 197, 204, 205, 208, 211, 216, 233, 243, 262, 265], "minimum": [1, 12, 31, 33, 42, 43, 45, 47, 51, 52, 55, 57, 87, 104, 108, 115, 145, 170, 181, 183, 188, 214, 215, 229, 260], "previou": [1, 12, 14, 18, 35, 40, 41, 42, 43, 46, 51, 57, 78, 82, 90, 105, 125, 163, 178, 179, 188, 201, 208, 212, 216, 233, 234, 263, 265, 270], "wai": [1, 2, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 18, 24, 32, 34, 35, 40, 42, 43, 44, 47, 51, 53, 56, 59, 67, 71, 75, 76, 78, 80, 84, 87, 90, 91, 93, 94, 104, 108, 110, 112, 113, 116, 118, 119, 122, 125, 141, 155, 158, 159, 164, 166, 169, 170, 171, 173, 174, 176, 178, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 202, 205, 207, 208, 211, 212, 214, 216, 217, 220, 221, 224, 228, 230, 233, 234, 237, 240, 243, 244, 245, 246, 248, 259, 260, 262, 263, 264, 265, 270, 271], "wa": [1, 2, 7, 11, 12, 18, 40, 42, 43, 45, 51, 52, 53, 59, 64, 87, 91, 93, 104, 105, 113, 115, 116, 125, 126, 156, 166, 178, 179, 180, 182, 188, 190, 191, 192, 194, 195, 204, 205, 207, 211, 213, 215, 224, 226, 229, 231, 233, 234, 260, 262, 264, 265, 268], "x": [1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 42, 43, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 128, 129, 133, 135, 136, 137, 138, 139, 141, 142, 145, 150, 151, 156, 158, 159, 160, 161, 162, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 226, 227, 228, 229, 231, 233, 234, 236, 240, 242, 243, 244, 245, 246, 248, 249, 259, 260, 262, 264, 265, 266, 269, 270, 271], "max": [1, 33, 42, 43, 51, 58, 59, 61, 78, 87, 91, 93, 94, 181, 190, 191, 195, 202, 204, 205, 234], "min": [1, 43, 47, 51, 56, 58, 87, 93, 181, 190, 195, 201, 211], "21": [1, 14, 37, 42, 51, 54, 56, 64, 65, 73, 87, 91, 93, 94, 126, 181, 186, 188, 189, 190, 192, 194, 195, 201, 211, 213, 215, 216, 270], "now": [1, 2, 5, 7, 8, 9, 10, 11, 13, 15, 18, 20, 32, 33, 43, 51, 52, 59, 62, 67, 68, 73, 75, 76, 80, 87, 91, 100, 105, 112, 113, 117, 120, 122, 128, 129, 164, 166, 171, 175, 178, 179, 182, 183, 185, 188, 191, 192, 196, 203, 204, 205, 207, 208, 211, 213, 214, 215, 216, 221, 226, 227, 234, 244, 245, 262, 264, 265, 270, 271], "number": [1, 4, 7, 11, 12, 13, 14, 15, 18, 25, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 56, 57, 59, 61, 64, 65, 66, 67, 68, 70, 77, 78, 79, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 95, 98, 100, 101, 102, 104, 108, 109, 112, 113, 116, 125, 126, 128, 134, 137, 140, 141, 144, 145, 146, 147, 149, 150, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 191, 192, 195, 197, 201, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 216, 220, 221, 226, 228, 230, 233, 236, 240, 242, 243, 245, 246, 248, 251, 259, 260, 262, 264, 265, 266, 270], "just": [1, 2, 7, 8, 10, 12, 14, 15, 18, 20, 29, 32, 33, 42, 49, 51, 52, 53, 74, 76, 78, 79, 80, 81, 87, 91, 92, 102, 104, 105, 110, 113, 116, 120, 125, 126, 128, 141, 146, 151, 161, 166, 170, 175, 176, 178, 182, 184, 185, 186, 188, 190, 194, 195, 202, 203, 204, 205, 207, 211, 214, 224, 226, 228, 229, 231, 245, 246, 248, 259, 260, 262, 263, 264, 265, 266, 270, 271], "wrapper": [1, 11, 18, 27, 29, 33, 43, 51, 59, 87, 125, 173, 175, 184, 185, 188, 195, 202, 211, 214, 215, 227, 231, 233], "around": [1, 2, 8, 11, 12, 14, 15, 18, 20, 31, 40, 43, 51, 52, 53, 55, 57, 60, 67, 71, 90, 91, 105, 122, 125, 129, 179, 185, 188, 190, 195, 197, 202, 206, 208, 211, 214, 215, 226, 240, 241, 260, 262, 264], "other": [1, 2, 4, 5, 8, 9, 11, 12, 13, 14, 15, 19, 21, 25, 29, 32, 33, 34, 42, 43, 44, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 76, 78, 81, 82, 84, 87, 91, 92, 93, 94, 95, 100, 104, 105, 107, 113, 114, 116, 117, 122, 125, 126, 128, 130, 133, 134, 135, 145, 156, 158, 159, 160, 161, 164, 166, 167, 168, 170, 171, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 196, 197, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 221, 222, 224, 227, 228, 229, 230, 233, 234, 240, 242, 243, 246, 248, 250, 259, 260, 262, 264, 265, 266, 270], "is_perfect_squar": 1, "ntheori": [1, 29, 42, 51, 52, 188, 191, 208, 233, 255], "primetest": [1, 51, 91], "is_squar": [1, 51, 82, 91], "is_prim": [1, 7, 51, 182], "isprim": [1, 29, 52, 91], "final": [1, 7, 12, 14, 15, 18, 32, 43, 50, 51, 57, 59, 76, 78, 81, 87, 91, 95, 98, 107, 108, 115, 119, 121, 122, 123, 126, 141, 153, 156, 158, 159, 161, 163, 164, 166, 171, 178, 179, 182, 185, 188, 190, 197, 203, 204, 205, 207, 208, 211, 213, 214, 221, 234, 263, 264, 265], "divid": [1, 42, 50, 51, 52, 67, 87, 91, 165, 166, 183, 185, 186, 188, 190, 191, 195, 211, 230, 265], "check": [1, 2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 27, 28, 31, 32, 33, 37, 40, 42, 43, 44, 49, 50, 51, 52, 56, 59, 63, 74, 76, 80, 81, 82, 84, 87, 88, 91, 100, 105, 106, 113, 125, 128, 141, 149, 161, 163, 164, 169, 176, 177, 181, 182, 184, 185, 186, 188, 190, 191, 197, 203, 205, 207, 211, 212, 213, 214, 215, 219, 220, 224, 226, 228, 231, 233, 242, 246, 262, 270], "specif": [1, 7, 9, 13, 14, 15, 18, 42, 43, 51, 52, 53, 59, 63, 78, 80, 82, 87, 105, 107, 108, 112, 113, 122, 128, 130, 166, 179, 181, 182, 186, 188, 190, 191, 194, 195, 196, 201, 207, 208, 211, 212, 213, 215, 221, 226, 227, 228, 233, 252, 266, 270], "bottom_up": 1, "interactive_travers": 1, "postorder_travers": [1, 265], "preorder_travers": [1, 265], "differ": [1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 18, 21, 23, 24, 32, 33, 34, 40, 41, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 62, 64, 66, 67, 71, 73, 75, 76, 78, 79, 80, 81, 84, 87, 91, 92, 93, 94, 98, 104, 105, 110, 113, 115, 118, 122, 125, 126, 129, 133, 134, 146, 147, 155, 156, 159, 161, 163, 166, 170, 171, 172, 174, 175, 176, 179, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202, 203, 204, 207, 208, 211, 212, 213, 214, 215, 216, 219, 221, 224, 226, 227, 228, 229, 230, 231, 233, 234, 240, 242, 246, 247, 248, 251, 261, 262, 264, 265, 266, 269, 270], "top": [1, 12, 14, 15, 33, 50, 51, 52, 67, 68, 78, 81, 87, 94, 95, 112, 156, 163, 185, 195, 205, 211, 228, 229, 234, 249, 265], "level": [1, 2, 7, 8, 12, 14, 15, 33, 42, 49, 51, 57, 59, 78, 81, 87, 91, 104, 116, 128, 156, 161, 166, 170, 173, 179, 181, 184, 185, 187, 193, 195, 204, 208, 214, 215, 219, 227, 228, 233, 265, 266, 268], "namespac": [1, 11, 14, 24, 33, 34, 51, 186, 208, 211, 212, 226, 228, 229, 234], "gener": [1, 2, 5, 7, 8, 9, 12, 16, 18, 20, 23, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 65, 67, 69, 74, 76, 78, 79, 80, 81, 84, 87, 91, 92, 93, 100, 104, 105, 107, 108, 109, 112, 113, 115, 116, 117, 119, 121, 122, 124, 125, 126, 128, 129, 133, 144, 145, 146, 147, 150, 155, 156, 159, 160, 161, 166, 168, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 201, 204, 205, 207, 208, 209, 211, 212, 213, 215, 220, 221, 227, 228, 230, 231, 232, 233, 234, 240, 243, 244, 246, 247, 248, 260, 262, 263, 264, 265, 266, 270, 271], "ani": [1, 2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 26, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 66, 67, 68, 76, 78, 79, 81, 82, 85, 87, 88, 91, 93, 94, 95, 100, 102, 105, 108, 109, 110, 112, 113, 122, 124, 125, 126, 129, 130, 134, 147, 150, 155, 156, 159, 161, 163, 166, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 196, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 217, 220, 221, 226, 227, 229, 230, 231, 233, 234, 240, 243, 244, 245, 246, 248, 249, 259, 260, 262, 265, 266, 269, 270, 271], "name": [1, 2, 7, 9, 11, 12, 13, 14, 15, 18, 24, 27, 28, 32, 33, 34, 38, 41, 44, 47, 50, 51, 52, 53, 57, 58, 59, 61, 64, 76, 78, 79, 80, 84, 87, 91, 93, 94, 105, 107, 110, 112, 113, 115, 128, 132, 141, 156, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 179, 181, 182, 183, 185, 186, 188, 190, 192, 195, 201, 205, 207, 208, 211, 212, 214, 215, 220, 221, 224, 226, 227, 228, 229, 234, 236, 237, 238, 240, 243, 246, 259, 262, 265, 266, 270], "reli": [1, 2, 11, 33, 87, 92, 97, 188, 194, 195, 202, 207, 214, 229, 234, 266], "due": [1, 5, 9, 14, 18, 31, 33, 41, 42, 51, 53, 68, 87, 91, 113, 115, 125, 134, 161, 176, 179, 185, 191, 195, 198, 208, 210, 212, 215, 231, 242, 248, 270], "intern": [1, 2, 7, 8, 12, 31, 33, 34, 42, 51, 54, 55, 56, 59, 67, 68, 71, 77, 83, 87, 91, 95, 98, 115, 125, 134, 155, 156, 166, 182, 184, 186, 187, 189, 191, 193, 195, 205, 207, 209, 212, 213, 214, 215, 219, 221, 224, 228, 230, 233, 265, 269], "refactor": [1, 211, 219, 230], "tr": [1, 34, 42, 195, 204], "quantum": [1, 102, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 180, 256], "onli": [1, 2, 4, 5, 7, 8, 9, 12, 14, 15, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 68, 69, 74, 76, 78, 79, 80, 81, 82, 87, 88, 91, 92, 93, 98, 100, 106, 113, 115, 116, 118, 119, 121, 123, 125, 126, 129, 134, 136, 155, 156, 160, 161, 163, 165, 166, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 216, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 240, 242, 244, 246, 248, 249, 259, 260, 262, 263, 265, 266, 270, 271], "better": [1, 2, 7, 8, 9, 11, 12, 14, 18, 32, 33, 43, 51, 55, 59, 78, 81, 100, 113, 141, 165, 169, 181, 184, 185, 186, 198, 202, 203, 204, 205, 211, 212, 213, 214, 215, 227, 233, 234, 264, 270], "than": [1, 2, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 24, 29, 33, 34, 36, 42, 43, 44, 50, 51, 52, 55, 56, 57, 59, 60, 65, 66, 67, 69, 73, 76, 78, 80, 81, 82, 84, 87, 88, 90, 91, 92, 93, 98, 100, 104, 108, 112, 113, 116, 119, 135, 141, 155, 158, 159, 161, 170, 179, 180, 183, 184, 185, 186, 188, 191, 192, 193, 195, 198, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 222, 227, 228, 230, 233, 234, 236, 237, 259, 260, 262, 263, 264, 265, 266, 268, 270], "ever": [1, 18, 57, 179, 182, 191, 205, 211, 228, 231, 265], "intend": [1, 7, 11, 12, 14, 51, 52, 62, 71, 76, 91, 93, 106, 156, 185, 186, 190, 193, 208, 211, 212, 224, 229, 259], "support": [1, 2, 11, 12, 13, 14, 15, 18, 20, 25, 26, 27, 28, 31, 32, 33, 43, 51, 55, 58, 59, 61, 75, 78, 84, 87, 91, 92, 93, 94, 95, 97, 100, 104, 113, 128, 156, 171, 178, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 200, 201, 202, 203, 207, 211, 212, 213, 214, 215, 216, 220, 224, 226, 227, 228, 234, 244, 246, 260, 262, 265, 269], "necessari": [1, 2, 7, 9, 11, 12, 14, 16, 18, 31, 32, 42, 43, 51, 61, 76, 78, 81, 87, 91, 108, 115, 122, 181, 183, 185, 190, 191, 198, 204, 207, 211, 212, 213, 214, 215, 216, 221, 226, 228, 233, 234, 240, 263, 268], "remain": [1, 12, 18, 27, 28, 33, 42, 43, 45, 47, 51, 52, 57, 76, 82, 91, 93, 101, 113, 160, 176, 178, 179, 190, 191, 192, 201, 204, 205, 211, 212, 215, 217, 221, 230, 233, 234, 243, 248, 259, 262, 264, 265, 266], "helper": [1, 31, 33, 42, 46, 49, 51, 76, 79, 80, 146, 148, 157, 192, 202, 205, 208, 211, 212, 214, 227, 258], "place": [1, 2, 7, 15, 16, 18, 32, 43, 44, 51, 52, 57, 67, 83, 87, 90, 91, 93, 100, 128, 129, 189, 190, 195, 196, 202, 204, 207, 211, 230, 233, 259, 266, 270], "were": [1, 2, 7, 12, 15, 18, 32, 43, 45, 51, 52, 57, 68, 76, 82, 87, 91, 92, 93, 104, 112, 125, 170, 176, 179, 182, 188, 189, 190, 191, 194, 195, 196, 204, 207, 213, 233, 234, 236, 262, 264, 265, 269, 270], "order": [1, 2, 5, 7, 8, 11, 12, 14, 15, 19, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 64, 67, 68, 70, 73, 76, 78, 79, 80, 81, 82, 87, 88, 91, 92, 93, 94, 95, 100, 101, 104, 108, 112, 113, 114, 115, 123, 124, 125, 126, 134, 138, 142, 145, 155, 156, 157, 158, 159, 160, 161, 166, 170, 171, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 201, 203, 206, 207, 208, 212, 213, 214, 215, 216, 217, 220, 221, 222, 226, 227, 228, 230, 233, 234, 236, 240, 241, 243, 244, 249, 260, 262, 263, 265, 269, 270, 271], "default_sort_kei": [1, 32, 40, 219], "addition": [1, 11, 14, 51, 123, 159, 179, 188, 195, 215, 224, 231, 243], "two": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 25, 31, 32, 33, 34, 36, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 94, 95, 97, 100, 101, 104, 105, 107, 108, 120, 122, 123, 125, 126, 133, 134, 135, 140, 141, 145, 147, 150, 151, 156, 157, 158, 159, 160, 161, 163, 166, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 220, 230, 233, 234, 240, 242, 244, 245, 246, 248, 259, 260, 263, 265, 266, 270], "meant": [1, 2, 7, 14, 15, 18, 33, 51, 59, 64, 78, 91, 113, 128, 181, 186, 203, 207, 212, 244, 265], "repres": [1, 2, 4, 7, 8, 11, 18, 25, 27, 29, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 56, 57, 59, 61, 62, 64, 66, 67, 68, 73, 74, 77, 78, 80, 81, 82, 84, 87, 91, 93, 94, 95, 97, 98, 100, 105, 107, 108, 110, 112, 113, 115, 116, 117, 120, 122, 123, 124, 125, 126, 128, 130, 132, 133, 135, 147, 148, 150, 154, 155, 158, 159, 161, 163, 166, 167, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 193, 195, 197, 198, 201, 202, 203, 205, 207, 208, 211, 213, 214, 215, 217, 219, 220, 221, 228, 230, 233, 234, 240, 242, 246, 248, 260, 262, 264, 265, 270, 271], "index": [1, 2, 9, 11, 18, 25, 33, 38, 40, 42, 43, 47, 50, 51, 52, 53, 57, 59, 62, 67, 76, 78, 81, 82, 84, 87, 90, 91, 100, 112, 113, 128, 129, 130, 132, 134, 135, 145, 154, 156, 158, 161, 166, 171, 181, 182, 186, 190, 191, 192, 195, 200, 201, 205, 213, 215, 216, 218, 219, 221, 222, 227], "matrixel": [1, 33], "howev": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 26, 28, 33, 42, 43, 47, 50, 51, 52, 53, 56, 57, 59, 61, 76, 78, 81, 82, 87, 91, 92, 93, 94, 113, 125, 129, 161, 179, 181, 182, 183, 185, 186, 188, 190, 191, 192, 194, 195, 196, 202, 203, 204, 205, 207, 211, 212, 213, 214, 226, 227, 234, 243, 244, 248, 259, 262, 264, 266, 270, 271], "without": [1, 2, 7, 11, 12, 14, 15, 18, 20, 27, 29, 30, 33, 50, 51, 52, 53, 55, 59, 76, 78, 79, 82, 84, 87, 100, 101, 113, 118, 120, 124, 125, 161, 166, 170, 171, 172, 178, 181, 184, 185, 188, 191, 195, 197, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 217, 220, 221, 224, 226, 227, 228, 231, 233, 234, 236, 242, 245, 266, 270], "matrixsymbol": [1, 4, 7, 29, 30, 33, 51, 82, 84, 87, 195, 215, 217], "diff": [1, 5, 14, 18, 31, 33, 56, 57, 58, 59, 68, 73, 84, 87, 104, 106, 116, 128, 159, 171, 173, 175, 176, 179, 181, 186, 191, 194, 195, 205, 211, 212, 213, 216, 217, 222, 243, 246, 260, 264, 271], "ad": [1, 7, 9, 14, 15, 25, 32, 33, 35, 41, 42, 51, 52, 62, 66, 73, 76, 80, 91, 93, 104, 105, 113, 114, 128, 135, 163, 166, 172, 180, 181, 190, 192, 194, 195, 197, 205, 208, 211, 214, 215, 217, 220, 221, 226, 242, 262], "solv": [1, 2, 5, 7, 12, 14, 18, 21, 33, 35, 47, 50, 51, 59, 64, 76, 78, 82, 83, 87, 94, 96, 108, 109, 113, 116, 119, 121, 122, 123, 125, 128, 164, 184, 187, 188, 192, 193, 194, 197, 207, 208, 209, 210, 211, 212, 215, 256, 260, 261, 264, 266, 269], "veri": [1, 2, 4, 7, 10, 11, 12, 14, 18, 33, 47, 51, 52, 55, 56, 61, 63, 69, 73, 76, 78, 81, 87, 91, 100, 104, 113, 116, 128, 133, 166, 178, 179, 182, 185, 188, 190, 191, 192, 194, 195, 196, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 226, 227, 228, 234, 259, 262, 265, 270], "problem": [1, 2, 5, 7, 8, 15, 18, 22, 35, 45, 47, 51, 52, 63, 76, 78, 82, 87, 91, 94, 96, 101, 104, 113, 116, 117, 120, 122, 123, 170, 178, 179, 182, 183, 187, 188, 205, 207, 208, 211, 214, 230, 233, 247, 256, 260, 262, 266], "layer": [1, 100, 188, 234], "structur": [1, 4, 7, 15, 18, 30, 32, 33, 39, 42, 43, 49, 51, 76, 78, 81, 82, 87, 94, 95, 112, 122, 159, 161, 181, 182, 185, 188, 190, 191, 192, 207, 209, 211, 213, 214, 215, 219, 220, 228, 230, 233, 234, 262, 270], "alreadi": [1, 2, 7, 11, 12, 18, 20, 42, 43, 51, 52, 60, 61, 64, 65, 67, 76, 78, 82, 88, 91, 101, 105, 113, 125, 130, 156, 158, 161, 176, 178, 179, 181, 184, 185, 188, 190, 194, 198, 204, 205, 207, 211, 214, 215, 221, 244, 246, 260, 262, 263, 264, 268, 269, 270, 271], "allow": [1, 2, 7, 11, 12, 15, 18, 29, 32, 33, 34, 35, 42, 44, 47, 50, 51, 52, 55, 59, 61, 62, 63, 76, 79, 81, 82, 84, 85, 87, 91, 92, 93, 95, 108, 113, 115, 122, 125, 126, 128, 133, 145, 161, 165, 166, 167, 179, 181, 182, 185, 186, 188, 190, 191, 192, 195, 200, 202, 203, 204, 207, 208, 211, 213, 214, 215, 216, 220, 226, 229, 231, 233, 234, 244, 262, 265], "one": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 24, 25, 28, 29, 31, 32, 33, 35, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 104, 105, 107, 108, 113, 114, 116, 125, 126, 128, 130, 133, 134, 135, 141, 146, 155, 159, 161, 163, 164, 166, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 219, 221, 222, 226, 227, 228, 230, 233, 234, 236, 240, 244, 246, 248, 259, 260, 262, 264, 265, 266, 268, 269, 270], "desir": [1, 2, 5, 14, 18, 24, 42, 43, 51, 52, 54, 55, 56, 57, 61, 65, 67, 81, 82, 87, 90, 91, 92, 108, 109, 110, 112, 122, 125, 146, 171, 178, 179, 184, 186, 188, 190, 191, 192, 195, 196, 198, 203, 207, 211, 213, 214, 227, 229, 230, 233, 246, 259], "g": [1, 2, 7, 8, 9, 11, 12, 13, 15, 18, 31, 32, 33, 34, 36, 39, 41, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 67, 68, 69, 71, 74, 77, 78, 80, 81, 82, 87, 91, 93, 94, 100, 101, 105, 110, 112, 113, 115, 116, 117, 119, 120, 121, 125, 126, 128, 129, 141, 145, 150, 156, 158, 159, 161, 164, 166, 167, 171, 176, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 207, 208, 211, 212, 213, 214, 215, 216, 219, 220, 221, 226, 227, 228, 229, 231, 233, 234, 235, 236, 248, 260, 265, 269, 270, 271], "introduct": [1, 3, 6, 15, 23, 38, 42, 43, 122, 177, 186, 187, 188, 189, 195, 208, 211, 214, 247, 251, 252, 253, 257, 263, 269], "encourag": [1, 14, 32, 123, 124, 190], "imprecis": 1, "think": [1, 7, 8, 14, 18, 20, 31, 42, 115, 166, 230, 234, 262, 270], "request": [1, 7, 9, 11, 12, 14, 15, 17, 20, 31, 51, 55, 67, 76, 91, 113, 161, 188, 191, 219, 227], "free_symbol": [1, 33, 51, 60, 78, 82, 150, 168, 171, 191, 201, 208], "sinc": [1, 2, 4, 5, 7, 8, 18, 26, 31, 33, 34, 42, 43, 44, 47, 48, 49, 51, 52, 54, 56, 58, 59, 60, 61, 63, 64, 67, 69, 75, 76, 78, 80, 81, 82, 87, 91, 103, 115, 126, 128, 137, 161, 162, 166, 170, 176, 179, 182, 183, 185, 186, 188, 190, 191, 195, 198, 203, 204, 205, 207, 208, 211, 213, 214, 215, 221, 225, 229, 230, 231, 233, 234, 238, 243, 245, 246, 248, 259, 264, 266, 269, 270, 271], "get": [1, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 27, 28, 31, 32, 33, 35, 40, 41, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 59, 64, 74, 76, 78, 80, 84, 87, 91, 93, 94, 98, 100, 103, 113, 116, 123, 124, 125, 128, 133, 134, 141, 145, 150, 155, 156, 157, 158, 163, 166, 179, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 221, 222, 227, 233, 234, 235, 237, 240, 243, 259, 262, 264, 265, 266, 269, 270, 271], "incorrectli": [1, 14, 18, 60, 61, 87, 183], "atomicexpr": 1, "concept": [1, 7, 42, 115, 179, 185, 187, 190, 195, 214, 219, 248, 263, 268], "misappli": 1, "point": [1, 2, 5, 7, 11, 12, 14, 15, 19, 20, 25, 31, 33, 34, 42, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 73, 74, 75, 76, 78, 87, 91, 94, 95, 98, 105, 107, 108, 109, 110, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 141, 163, 166, 172, 176, 177, 179, 181, 182, 185, 186, 188, 190, 191, 195, 197, 201, 202, 203, 211, 213, 214, 215, 227, 230, 233, 234, 236, 240, 242, 244, 245, 246, 247, 248, 249, 251, 259, 260, 262, 265], "noth": [1, 32, 42, 51, 64, 78, 145, 161, 182, 186, 194, 195, 207, 211, 213, 224, 226, 234, 236, 262], "anywher": [1, 7, 11, 12, 14, 33, 51, 59, 65, 161, 236, 264], "els": [1, 2, 7, 8, 11, 12, 18, 33, 41, 43, 47, 51, 52, 59, 61, 65, 67, 68, 76, 78, 81, 87, 91, 100, 161, 171, 181, 186, 190, 191, 195, 196, 203, 207, 211, 214, 219, 221, 226, 233, 236, 240, 242, 259, 265], "context": [1, 7, 12, 14, 15, 18, 26, 27, 28, 51, 53, 59, 78, 81, 113, 166, 185, 188, 190, 203, 224, 226, 231, 240], "differenti": [1, 14, 15, 22, 31, 51, 56, 57, 59, 68, 69, 71, 74, 100, 107, 108, 112, 113, 115, 116, 119, 122, 123, 124, 125, 128, 129, 150, 156, 170, 171, 173, 174, 176, 179, 182, 188, 192, 194, 195, 200, 205, 207, 209, 211, 212, 240, 246, 247, 250, 257, 260, 261, 264], "which": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 87, 90, 91, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 110, 112, 113, 115, 117, 120, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 147, 150, 156, 157, 158, 159, 161, 165, 166, 167, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 219, 221, 226, 227, 228, 229, 230, 231, 233, 234, 236, 240, 241, 244, 248, 249, 251, 259, 260, 262, 263, 264, 265, 266, 267, 269, 270, 271], "suggest": [1, 15, 34, 42, 78, 87, 91, 113, 193, 266], "someth": [1, 2, 7, 8, 12, 14, 15, 18, 31, 33, 51, 52, 55, 61, 76, 81, 82, 87, 91, 104, 113, 114, 128, 154, 167, 170, 181, 185, 186, 194, 202, 203, 207, 211, 214, 226, 228, 234, 259, 262, 264, 265, 268], "confirm": [1, 12, 42, 91, 211], "fact": [1, 7, 8, 14, 18, 28, 29, 51, 56, 59, 69, 76, 91, 115, 125, 166, 182, 183, 185, 188, 190, 192, 194, 205, 207, 211, 214, 226, 234, 248, 259, 262, 263, 264, 265, 270], "introduc": [1, 8, 23, 47, 50, 51, 59, 76, 87, 92, 95, 113, 115, 119, 120, 121, 124, 161, 166, 179, 186, 187, 192, 195, 202, 205, 208, 215, 231, 263, 266, 268, 270], "21494": 1, "size": [1, 5, 33, 34, 35, 40, 42, 43, 44, 45, 46, 47, 51, 52, 54, 56, 79, 82, 84, 87, 90, 91, 98, 115, 123, 124, 125, 134, 156, 157, 175, 181, 184, 188, 195, 207, 208, 211, 215, 233, 260], "die": [1, 190, 215], "easili": [1, 7, 15, 18, 19, 20, 51, 52, 74, 76, 87, 91, 92, 123, 159, 178, 191, 194, 195, 200, 207, 208, 211, 213, 214, 227, 264], "implement": [1, 4, 8, 11, 14, 15, 18, 21, 25, 26, 27, 28, 31, 32, 33, 34, 36, 41, 42, 43, 48, 51, 52, 54, 56, 57, 59, 62, 64, 71, 72, 74, 75, 77, 78, 81, 82, 83, 87, 91, 92, 93, 104, 113, 122, 130, 132, 133, 136, 145, 146, 154, 155, 157, 165, 170, 172, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 199, 202, 203, 204, 207, 208, 211, 212, 213, 214, 215, 219, 220, 230, 232, 233, 234, 237, 247, 250, 258, 260, 264, 270], "rang": [1, 5, 14, 18, 31, 33, 40, 41, 42, 43, 45, 47, 51, 52, 56, 57, 59, 65, 82, 87, 91, 95, 98, 102, 130, 161, 181, 185, 186, 187, 188, 190, 191, 192, 197, 198, 201, 204, 207, 211, 214, 215, 216, 220, 226, 233, 259, 270], "numpi": [1, 11, 14, 18, 20, 33, 51, 74, 79, 86, 92, 98, 113, 128, 145, 155, 184, 195, 215, 220, 227, 228, 234, 259, 262], "arrai": [1, 18, 22, 33, 42, 43, 47, 48, 52, 59, 78, 82, 84, 87, 91, 92, 98, 128, 158, 181, 184, 186, 191, 195, 214, 215, 218, 220, 221, 222, 227, 228, 230, 234, 266], "shape": [1, 14, 33, 67, 82, 84, 87, 89, 90, 98, 100, 112, 113, 171, 181, 182, 184, 195, 198, 205, 215, 216, 217, 219, 220, 221, 234, 269], "histor": [1, 18, 52, 211, 215], "length": [1, 14, 33, 35, 41, 42, 43, 45, 49, 51, 52, 54, 56, 57, 59, 60, 64, 66, 67, 68, 81, 82, 87, 90, 91, 94, 95, 104, 108, 112, 116, 117, 126, 130, 134, 158, 163, 164, 166, 171, 174, 179, 190, 191, 195, 201, 205, 207, 211, 213, 215, 226, 227, 233, 236, 240, 241, 249], "behavior": [1, 2, 11, 12, 18, 42, 51, 59, 78, 93, 103, 104, 122, 125, 156, 182, 183, 190, 191, 195, 196, 200, 202, 204, 207, 224, 227, 229, 233, 234, 262], "confus": [1, 7, 12, 15, 51, 56, 81, 134, 179, 183, 191, 214, 259, 260, 262], "21563": 1, "revert": [1, 186, 191], "sample_it": [1, 215], "consequ": [1, 18, 29, 51, 183, 185, 262, 270], "class": [1, 2, 6, 7, 8, 12, 15, 16, 18, 25, 26, 27, 28, 29, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 76, 78, 79, 80, 81, 84, 86, 93, 94, 97, 98, 100, 105, 107, 108, 109, 110, 112, 113, 116, 117, 122, 126, 128, 129, 130, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 169, 170, 174, 175, 177, 182, 185, 186, 187, 188, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 205, 209, 211, 212, 213, 214, 215, 218, 220, 221, 222, 226, 227, 228, 229, 230, 231, 233, 234, 238, 243, 244, 246, 247, 249, 251, 252, 255, 257, 258, 260, 262, 265, 270], "subclass": [1, 7, 18, 27, 28, 33, 51, 58, 62, 64, 78, 81, 130, 136, 145, 149, 150, 151, 156, 158, 159, 181, 182, 184, 185, 186, 190, 191, 195, 215, 226, 227, 228, 231, 234, 240, 243, 265], "domain": [1, 5, 11, 14, 18, 31, 32, 51, 52, 54, 56, 57, 59, 70, 72, 73, 76, 78, 84, 87, 88, 91, 97, 100, 113, 128, 182, 184, 187, 188, 190, 192, 193, 209, 210, 211, 213, 215, 266, 271], "element": [1, 2, 4, 7, 15, 25, 28, 32, 33, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 74, 76, 78, 80, 81, 82, 83, 84, 87, 90, 91, 92, 94, 95, 100, 101, 110, 128, 130, 133, 147, 158, 166, 174, 177, 179, 181, 182, 183, 184, 186, 187, 188, 191, 193, 194, 195, 201, 202, 203, 205, 207, 208, 211, 213, 214, 215, 216, 220, 227, 229, 230, 233, 234, 235, 242, 260, 265, 266, 269, 270], "break": [1, 12, 14, 18, 21, 32, 33, 43, 51, 52, 91, 178, 192, 195, 203, 233], "kei": [1, 2, 23, 26, 29, 32, 40, 42, 43, 51, 52, 53, 56, 67, 80, 82, 87, 90, 91, 94, 112, 113, 122, 153, 156, 161, 179, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 207, 211, 212, 213, 215, 219, 230, 233, 234, 236, 266, 267, 270], "invari": [1, 15, 18, 42, 47, 97, 100, 180, 186, 190, 191, 205, 211], "kind": [1, 6, 7, 8, 14, 15, 18, 32, 33, 53, 56, 59, 71, 78, 82, 94, 108, 113, 124, 176, 183, 185, 186, 191, 196, 197, 203, 211, 212, 215, 233, 246, 248, 251, 260, 270], "limit": [1, 2, 10, 12, 20, 21, 29, 31, 33, 50, 51, 53, 55, 56, 57, 59, 60, 63, 71, 73, 78, 79, 81, 87, 91, 98, 122, 126, 150, 156, 159, 175, 181, 186, 188, 191, 192, 195, 198, 199, 201, 203, 207, 208, 210, 211, 212, 213, 215, 220, 227, 230, 233, 234, 236, 239, 240, 249, 261, 262, 264, 266], "improv": [1, 8, 11, 12, 18, 51, 76, 122, 181, 185, 188, 189, 191, 192, 194, 196, 211, 214, 220, 251, 260, 266], "part": [1, 7, 8, 11, 12, 14, 15, 18, 25, 30, 42, 43, 50, 51, 52, 56, 57, 59, 67, 74, 76, 78, 81, 82, 84, 91, 100, 104, 105, 107, 108, 112, 113, 115, 120, 122, 126, 128, 145, 157, 161, 170, 179, 183, 185, 186, 188, 190, 191, 192, 194, 195, 196, 203, 205, 207, 208, 211, 213, 226, 228, 230, 233, 260, 265, 270], "document": [1, 6, 16, 18, 21, 27, 28, 29, 42, 47, 51, 52, 57, 58, 59, 63, 73, 76, 77, 79, 84, 87, 92, 95, 104, 108, 122, 123, 124, 126, 128, 136, 150, 156, 170, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 191, 195, 205, 209, 211, 213, 214, 224, 226, 228, 229, 231, 233, 240, 246, 247, 250, 260, 262, 263, 269, 270], "normal": [1, 2, 7, 8, 15, 18, 25, 28, 33, 42, 50, 51, 55, 57, 61, 64, 65, 66, 78, 79, 81, 85, 86, 87, 91, 93, 102, 104, 107, 113, 115, 120, 128, 134, 145, 155, 158, 159, 160, 161, 162, 166, 169, 171, 179, 182, 185, 186, 187, 188, 190, 191, 195, 196, 198, 203, 204, 208, 211, 215, 220, 226, 231, 233, 240, 254], "ha": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 16, 18, 22, 23, 29, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 74, 76, 78, 80, 81, 82, 84, 87, 88, 90, 91, 92, 94, 95, 100, 101, 105, 107, 108, 113, 115, 116, 122, 126, 128, 134, 135, 145, 146, 155, 158, 163, 166, 170, 171, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 202, 203, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 226, 227, 228, 229, 230, 231, 233, 236, 240, 241, 243, 244, 246, 248, 249, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "domainmatrix": [1, 83, 87, 187, 190, 193], "anyon": [1, 14, 15, 191, 195, 268, 269], "switch": [1, 42, 49, 78, 91, 100, 188, 191], "shown": [1, 7, 8, 12, 14, 18, 40, 43, 50, 51, 55, 59, 76, 93, 95, 98, 100, 104, 108, 110, 116, 117, 123, 124, 126, 170, 171, 178, 179, 181, 184, 185, 186, 191, 195, 211, 215, 231, 233, 243, 244, 263], "21402": 1, "api": [1, 7, 14, 15, 21, 33, 51, 63, 71, 77, 92, 93, 99, 128, 157, 170, 181, 188, 208, 209, 210, 232, 234, 237, 243, 244, 254, 256, 263, 264, 267], "later": [1, 5, 12, 33, 42, 76, 82, 104, 109, 110, 115, 116, 117, 123, 125, 126, 128, 135, 170, 178, 185, 188, 194, 195, 196, 205, 207, 211, 230, 243, 259, 260, 262, 264, 265, 270], "earlier": [1, 104, 192, 196, 205, 207, 234, 244, 246, 265], "possibl": [1, 7, 8, 9, 14, 18, 19, 20, 31, 33, 34, 35, 40, 42, 43, 45, 46, 47, 49, 51, 52, 56, 57, 59, 61, 63, 65, 66, 68, 73, 75, 76, 78, 80, 81, 82, 84, 87, 91, 101, 102, 104, 115, 124, 126, 155, 157, 161, 163, 164, 165, 166, 174, 176, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 207, 208, 211, 212, 213, 214, 215, 216, 221, 226, 228, 229, 230, 231, 233, 234, 243, 244, 246, 260, 261, 262, 265, 270], "put": [1, 2, 5, 12, 14, 18, 33, 47, 48, 51, 52, 53, 57, 81, 82, 87, 133, 138, 142, 157, 158, 191, 195, 196, 204, 205, 207, 211, 216, 222, 227, 266, 270], "could": [1, 2, 5, 7, 18, 28, 33, 44, 51, 63, 76, 78, 81, 110, 113, 122, 125, 161, 164, 166, 182, 184, 185, 188, 190, 192, 195, 203, 205, 207, 211, 212, 213, 214, 215, 216, 219, 220, 227, 231, 244, 245, 262, 265, 270], "arbitrari": [1, 2, 7, 11, 14, 18, 19, 31, 36, 43, 44, 50, 51, 52, 55, 56, 59, 62, 63, 65, 81, 82, 87, 95, 126, 147, 150, 179, 181, 182, 185, 186, 188, 190, 192, 207, 211, 212, 213, 221, 231, 234, 240, 241, 259, 260, 265, 270, 271], "realli": [1, 5, 7, 8, 12, 18, 51, 63, 91, 115, 163, 185, 194, 196, 202, 204, 205, 207, 211, 227, 236, 262, 264], "traceback": [1, 2, 4, 7, 8, 18, 26, 27, 28, 33, 34, 43, 51, 52, 55, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 93, 100, 180, 182, 185, 186, 188, 191, 194, 202, 203, 211, 213, 214, 224, 226, 227, 229, 231, 233, 234, 236, 262, 266], "most": [1, 2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 20, 26, 27, 28, 31, 32, 33, 34, 42, 43, 50, 51, 52, 55, 61, 63, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 100, 104, 108, 113, 120, 125, 126, 129, 163, 170, 174, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 202, 203, 205, 208, 211, 212, 213, 214, 215, 224, 227, 228, 229, 230, 231, 233, 234, 236, 242, 244, 259, 262, 264, 265, 266, 268, 269, 270], "recent": [1, 2, 4, 7, 8, 12, 18, 26, 27, 28, 33, 34, 43, 51, 52, 55, 59, 61, 78, 81, 82, 83, 84, 85, 87, 89, 90, 93, 100, 180, 182, 185, 186, 188, 191, 194, 202, 203, 211, 213, 214, 224, 227, 229, 231, 233, 234, 236, 262, 266], "typeerror": [1, 2, 8, 18, 26, 27, 28, 43, 51, 61, 66, 81, 83, 85, 89, 100, 135, 202, 203, 227, 234], "unsupport": [1, 2, 4, 100, 195], "operand": [1, 2, 43, 51, 172, 190, 242], "type": [1, 2, 4, 7, 8, 14, 16, 18, 27, 28, 31, 42, 43, 47, 50, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 69, 76, 78, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 95, 98, 100, 104, 108, 113, 128, 133, 147, 155, 156, 157, 159, 171, 174, 175, 177, 179, 181, 182, 185, 186, 189, 190, 191, 192, 193, 195, 196, 197, 203, 204, 205, 207, 208, 209, 210, 213, 219, 220, 221, 224, 226, 227, 228, 233, 234, 236, 243, 246, 249, 252, 257, 260, 262, 264, 265, 266, 269, 270, 271], "dict": [1, 2, 7, 33, 43, 52, 53, 67, 68, 81, 82, 87, 91, 93, 108, 109, 141, 153, 156, 167, 169, 171, 181, 184, 185, 186, 188, 190, 191, 192, 193, 195, 207, 208, 211, 212, 213, 214, 215, 219, 226, 227, 233, 240, 271], "main": [1, 2, 11, 13, 14, 15, 28, 29, 33, 51, 57, 76, 82, 87, 90, 113, 120, 159, 165, 175, 179, 181, 182, 186, 187, 195, 202, 211, 214, 220, 227, 270, 271], "reason": [1, 7, 8, 12, 15, 18, 33, 43, 49, 51, 55, 59, 76, 79, 85, 87, 108, 109, 113, 115, 119, 122, 125, 132, 166, 175, 179, 185, 188, 189, 192, 195, 203, 205, 207, 211, 213, 214, 224, 230, 231, 233, 234, 259, 260, 264, 265, 266], "solve_lin_si": [1, 187], "heurisch": [1, 78], "smith_normal_form": [1, 88, 184], "newmatrix": 1, "rather": [1, 2, 5, 7, 8, 11, 12, 14, 15, 18, 24, 29, 33, 34, 42, 43, 44, 51, 55, 62, 67, 69, 76, 81, 82, 84, 87, 91, 93, 112, 119, 128, 141, 155, 159, 161, 170, 178, 182, 185, 188, 191, 193, 198, 205, 208, 210, 211, 214, 215, 230, 233, 234, 237, 248, 262, 264, 265], "holonom": [1, 72, 75, 114, 115, 116, 122, 123, 124, 250, 257], "polymatrix": 1, "risch": [1, 78, 260], "broken": [1, 40, 51, 178, 195, 211, 236], "20780": 1, "20759": 1, "20621": 1, "19882": 1, "18844": 1, "solut": [1, 2, 5, 8, 9, 18, 22, 33, 47, 51, 52, 57, 59, 61, 69, 73, 74, 75, 78, 87, 91, 97, 104, 108, 113, 116, 122, 125, 130, 166, 170, 182, 188, 189, 190, 191, 192, 193, 194, 203, 208, 209, 210, 211, 212, 213, 256, 271], "case": [1, 2, 5, 7, 8, 11, 12, 14, 15, 21, 31, 32, 33, 34, 36, 39, 42, 43, 47, 50, 51, 52, 53, 55, 56, 57, 59, 63, 66, 67, 68, 69, 73, 76, 78, 81, 82, 84, 87, 88, 91, 92, 93, 95, 100, 104, 107, 108, 113, 115, 116, 117, 124, 126, 128, 134, 145, 151, 156, 158, 160, 161, 166, 167, 174, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 200, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 216, 219, 221, 224, 226, 228, 229, 231, 233, 234, 235, 236, 237, 240, 242, 243, 260, 264, 265, 266, 269, 270, 271], "pr": [1, 12, 50, 186, 188, 189, 191, 214], "depend": [1, 2, 7, 16, 18, 19, 20, 21, 31, 33, 34, 42, 43, 50, 51, 52, 53, 56, 57, 59, 63, 68, 75, 76, 78, 79, 80, 87, 91, 92, 93, 98, 102, 105, 108, 109, 112, 113, 115, 116, 122, 123, 133, 134, 135, 150, 159, 161, 163, 166, 175, 176, 181, 183, 186, 187, 188, 190, 191, 192, 195, 196, 201, 205, 207, 208, 211, 212, 213, 214, 215, 226, 227, 228, 229, 233, 234, 246, 248, 249, 262, 264], "21441": 1, "21427": 1, "21496": 1, "potenti": [1, 7, 63, 84, 87, 91, 108, 109, 110, 112, 121, 122, 172, 177, 185, 190, 202, 205, 207, 211, 213, 229, 230, 242, 247, 248], "impact": 1, "downstream": [1, 7], "altern": [1, 2, 8, 9, 12, 14, 18, 20, 33, 39, 42, 43, 50, 51, 55, 57, 58, 59, 82, 84, 88, 92, 113, 123, 125, 171, 178, 180, 181, 183, 184, 185, 190, 191, 195, 200, 202, 204, 213, 214, 216, 233, 262, 264, 266], "goal": [1, 32, 104, 129, 190, 192, 226, 227, 229, 263, 264], "perhap": [1, 33, 51, 81, 91, 146, 185, 213, 228, 259], "tableform": [1, 236], "isn": [1, 18, 78, 104, 113, 214, 264], "clear": [1, 7, 14, 27, 41, 51, 76, 80, 105, 178, 179, 181, 186, 188, 191, 205, 213, 214, 221, 226, 230, 248, 262], "what": [1, 2, 4, 5, 7, 8, 14, 15, 16, 18, 22, 23, 31, 33, 43, 45, 50, 51, 52, 53, 57, 58, 61, 62, 66, 76, 78, 80, 87, 91, 93, 105, 108, 110, 113, 116, 128, 160, 161, 164, 166, 171, 178, 179, 186, 187, 188, 191, 194, 195, 196, 202, 204, 205, 207, 208, 209, 211, 213, 220, 224, 226, 228, 229, 234, 243, 244, 249, 260, 262, 263, 265, 269, 270], "advis": [1, 7, 32, 113], "know": [1, 2, 7, 8, 12, 14, 15, 18, 26, 28, 32, 43, 51, 52, 55, 63, 68, 76, 78, 87, 91, 110, 113, 129, 155, 159, 163, 164, 166, 170, 171, 178, 179, 181, 191, 192, 194, 195, 205, 207, 211, 213, 214, 215, 229, 233, 234, 244, 259, 260, 262, 263, 264, 265, 268, 270], "usecas": 1, "unclear": [1, 7, 104], "write": [1, 5, 7, 8, 12, 16, 21, 23, 24, 33, 40, 51, 52, 58, 59, 76, 78, 84, 128, 141, 178, 179, 183, 188, 190, 195, 204, 205, 208, 211, 214, 220, 226, 227, 228, 234, 263, 264, 265, 270], "our": [1, 5, 15, 17, 18, 20, 33, 51, 59, 76, 87, 91, 166, 178, 179, 181, 182, 184, 190, 191, 192, 195, 202, 205, 208, 211, 214, 226, 259, 262, 263, 265, 270], "mail": [1, 12, 20, 195, 263], "line2dbaseseri": [1, 181], "coordin": [1, 25, 33, 52, 53, 57, 59, 60, 62, 66, 68, 84, 87, 94, 98, 102, 107, 108, 109, 112, 113, 114, 115, 117, 119, 122, 123, 124, 127, 129, 137, 139, 158, 159, 162, 170, 171, 172, 173, 174, 176, 179, 182, 190, 191, 203, 211, 240, 241, 242, 245, 247, 249, 257], "y": [1, 2, 4, 7, 8, 12, 14, 18, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 76, 78, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 95, 98, 100, 105, 106, 107, 110, 113, 115, 116, 117, 119, 120, 121, 126, 128, 129, 138, 139, 142, 145, 150, 156, 158, 159, 161, 162, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 227, 228, 231, 233, 234, 236, 240, 242, 243, 244, 245, 246, 248, 249, 259, 260, 262, 264, 265, 269, 270, 271], "segment": [1, 14, 42, 61, 63, 64, 65, 66, 67, 68, 178, 181, 211, 226], "matplotlib": [1, 9, 11, 14, 15, 20, 74, 79, 98, 128, 141, 175, 181, 269], "linecollect": [1, 181], "bokeh": 1, "plotli": 1, "mayavi": 1, "k3d": 1, "insid": [1, 2, 15, 18, 42, 43, 48, 51, 61, 62, 67, 94, 104, 106, 116, 125, 160, 161, 166, 175, 179, 191, 195, 203, 205, 208, 213, 214, 215, 217, 219, 230, 265, 266], "matplotlibbackend": [1, 181], "note": [1, 2, 5, 7, 8, 9, 11, 14, 15, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 47, 49, 50, 52, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 76, 78, 79, 81, 82, 84, 87, 91, 93, 100, 101, 105, 106, 107, 108, 109, 112, 113, 115, 116, 119, 126, 128, 134, 137, 145, 155, 156, 158, 160, 161, 162, 164, 170, 171, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 220, 221, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 244, 246, 248, 257, 259, 260, 261, 263, 264, 265, 266, 270], "previous": [1, 11, 12, 50, 120, 176, 194, 207, 215, 246], "get_point": [1, 181], "alwai": [1, 2, 7, 8, 12, 14, 15, 18, 20, 25, 32, 42, 43, 50, 51, 52, 53, 55, 57, 59, 61, 63, 66, 67, 75, 76, 78, 81, 82, 87, 90, 91, 100, 101, 112, 113, 115, 116, 120, 129, 161, 163, 166, 167, 176, 178, 182, 183, 185, 186, 188, 190, 191, 195, 196, 197, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 222, 226, 228, 233, 234, 240, 241, 246, 260, 262, 263, 264, 265, 270], "uniformli": [1, 5, 42, 67, 68, 94, 98, 181, 229], "correctli": [1, 8, 9, 11, 12, 14, 15, 18, 31, 55, 76, 79, 87, 113, 115, 125, 195, 202, 208, 211], "avoid": [1, 8, 15, 16, 18, 33, 34, 51, 52, 57, 76, 78, 81, 87, 90, 93, 116, 125, 155, 178, 179, 183, 185, 191, 195, 196, 203, 207, 211, 213, 215, 219, 228, 231, 234, 262, 263], "adapt": [1, 98, 181, 201, 213, 233, 239], "get_data": [1, 181, 237], "dft": [1, 54, 103], "fourier": [1, 51, 59, 78, 103, 154, 199], "as_explicit": [1, 84, 87, 103, 217], "sqrt": [1, 7, 14, 18, 25, 29, 30, 31, 33, 51, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 75, 76, 78, 79, 82, 83, 87, 91, 93, 94, 100, 102, 115, 130, 132, 134, 135, 140, 145, 155, 156, 158, 159, 161, 162, 164, 171, 176, 179, 180, 183, 185, 186, 188, 190, 191, 194, 195, 196, 201, 204, 205, 207, 208, 210, 211, 213, 214, 215, 233, 234, 236, 240, 248, 249, 259, 264, 269, 270, 271], "exp": [1, 2, 7, 18, 25, 31, 33, 41, 50, 51, 53, 55, 56, 58, 59, 69, 70, 73, 76, 78, 82, 84, 87, 91, 102, 137, 140, 156, 162, 180, 185, 186, 191, 192, 195, 197, 202, 205, 207, 211, 212, 213, 214, 215, 216, 233, 249, 260, 264, 266, 271], "pi": [1, 2, 4, 7, 14, 18, 24, 25, 26, 28, 29, 30, 31, 33, 43, 50, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 70, 76, 78, 87, 91, 102, 115, 128, 130, 132, 133, 134, 135, 137, 145, 156, 158, 159, 162, 164, 171, 180, 181, 183, 185, 186, 191, 195, 198, 202, 203, 204, 205, 207, 210, 211, 213, 214, 215, 233, 240, 242, 249, 259, 264, 270], "contain": [1, 2, 3, 8, 9, 11, 12, 14, 15, 18, 24, 26, 27, 31, 32, 33, 34, 42, 43, 47, 49, 50, 53, 54, 55, 57, 59, 60, 62, 64, 65, 66, 67, 68, 77, 78, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 96, 98, 99, 101, 105, 108, 109, 110, 112, 115, 116, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 148, 151, 153, 156, 158, 161, 170, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 195, 196, 197, 202, 203, 205, 207, 208, 209, 211, 212, 213, 214, 215, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 240, 242, 250, 251, 260, 262, 266, 270], "discret": [1, 31, 33, 34, 41, 43, 51, 52, 59, 91, 161, 166, 197, 200, 211, 213, 214, 251, 259], "transform": [1, 25, 30, 33, 47, 50, 51, 52, 53, 55, 56, 59, 66, 77, 84, 87, 98, 100, 115, 133, 154, 156, 158, 163, 183, 186, 188, 190, 191, 197, 202, 203, 204, 207, 208, 211, 212, 213, 214, 215, 220, 228, 234, 240, 246, 247, 251, 258, 264], "mathemat": [1, 4, 7, 11, 12, 15, 16, 18, 19, 23, 27, 28, 31, 33, 34, 37, 41, 43, 50, 51, 52, 53, 56, 57, 58, 59, 64, 65, 76, 78, 81, 84, 87, 91, 92, 93, 100, 101, 104, 116, 127, 166, 176, 178, 179, 182, 183, 185, 186, 189, 194, 195, 203, 204, 208, 211, 214, 215, 220, 227, 228, 234, 240, 243, 246, 248, 259, 262, 263, 264, 265, 268, 270], "locat": [1, 15, 43, 51, 65, 87, 91, 94, 95, 107, 116, 125, 129, 174, 176, 190, 191, 195, 207, 215, 229, 238, 240, 243, 245, 247, 248], "furthermor": [1, 12, 18, 29, 51, 52, 81, 190, 204, 262, 264, 265], "unevalu": [1, 7, 8, 18, 27, 28, 31, 43, 50, 51, 57, 59, 68, 78, 91, 100, 138, 142, 149, 150, 161, 191, 194, 202, 203, 207, 211, 213, 214, 215, 260, 264, 265, 271], "represent": [1, 18, 25, 32, 33, 34, 42, 45, 51, 52, 59, 63, 71, 73, 75, 76, 78, 80, 81, 82, 83, 84, 90, 91, 97, 98, 103, 104, 105, 112, 122, 125, 126, 130, 150, 155, 156, 158, 159, 161, 163, 170, 175, 176, 178, 181, 182, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 205, 207, 208, 211, 214, 215, 220, 221, 236, 240, 242, 249, 260, 262, 265], "21626": 1, "expos": [1, 32, 215], "mutat": [1, 100, 184, 186, 215], "flat": [1, 65, 82, 227], "cannot": [1, 2, 4, 8, 11, 12, 14, 15, 18, 20, 26, 27, 28, 29, 30, 31, 33, 43, 48, 50, 51, 53, 55, 56, 57, 61, 63, 64, 66, 68, 73, 78, 80, 83, 85, 87, 89, 91, 100, 156, 164, 166, 178, 179, 181, 186, 188, 190, 191, 192, 195, 202, 203, 207, 208, 210, 211, 213, 214, 215, 216, 224, 226, 227, 228, 233, 237, 240, 241, 264, 265, 266, 270, 271], "itself": [1, 11, 12, 14, 15, 18, 29, 40, 42, 43, 49, 51, 53, 56, 64, 68, 73, 91, 108, 112, 113, 126, 151, 158, 176, 178, 181, 182, 185, 188, 190, 191, 195, 203, 204, 207, 214, 219, 220, 221, 228, 230, 233, 248, 264], "todok": [1, 82], "read": [1, 12, 14, 15, 17, 18, 43, 57, 76, 91, 95, 128, 178, 179, 184, 185, 186, 192, 195, 208, 221, 222, 230, 237, 263, 269, 270], "technic": [1, 15, 18, 32, 51, 128, 147, 182, 211, 228, 233, 246, 262, 265], "thei": [1, 2, 7, 8, 11, 12, 14, 15, 18, 20, 29, 32, 33, 34, 39, 41, 42, 43, 49, 50, 51, 52, 53, 56, 57, 59, 61, 64, 65, 66, 67, 68, 73, 76, 78, 79, 81, 82, 84, 85, 87, 90, 91, 93, 104, 108, 110, 112, 113, 115, 120, 122, 123, 124, 125, 128, 129, 135, 140, 145, 150, 153, 158, 163, 164, 166, 167, 171, 174, 175, 176, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 195, 196, 201, 202, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 221, 224, 226, 228, 230, 233, 234, 236, 240, 246, 248, 260, 262, 263, 264, 265, 266, 270], "underscor": [1, 12, 14, 51, 87, 211, 221, 229], "prior": [1, 12, 20, 174, 191, 207, 266], "result": [1, 2, 4, 5, 7, 8, 9, 11, 14, 18, 25, 26, 27, 28, 29, 31, 32, 33, 41, 42, 43, 47, 50, 51, 52, 53, 55, 57, 59, 63, 68, 69, 73, 75, 76, 78, 80, 81, 82, 84, 87, 90, 91, 92, 93, 94, 100, 101, 104, 105, 106, 109, 113, 116, 122, 125, 128, 146, 153, 155, 156, 158, 160, 161, 163, 164, 166, 170, 171, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 219, 220, 222, 226, 227, 228, 230, 231, 233, 234, 236, 240, 242, 244, 262, 264, 265, 266, 270], "ey": [1, 82, 83, 84, 85, 86, 87, 89, 184, 190, 208, 216, 221, 236, 266], "z": [1, 2, 7, 14, 18, 29, 30, 33, 34, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 63, 64, 65, 66, 67, 76, 78, 81, 82, 84, 87, 93, 94, 95, 102, 105, 106, 107, 110, 113, 115, 116, 117, 119, 120, 121, 125, 126, 128, 129, 130, 139, 141, 145, 155, 156, 158, 162, 166, 170, 171, 172, 173, 174, 176, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 219, 220, 221, 227, 228, 234, 240, 242, 243, 244, 245, 246, 248, 249, 259, 260, 262, 264, 265, 269, 270, 271], "true": [1, 2, 4, 7, 8, 10, 11, 14, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 76, 78, 79, 81, 82, 83, 84, 87, 88, 91, 93, 94, 95, 98, 100, 101, 102, 103, 104, 106, 108, 109, 113, 115, 116, 128, 132, 133, 142, 145, 146, 153, 155, 156, 159, 160, 161, 164, 170, 171, 172, 173, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 226, 227, 228, 229, 231, 233, 234, 236, 240, 242, 243, 244, 245, 246, 249, 259, 260, 262, 264, 265, 266, 269, 270, 271], "design": [1, 4, 8, 11, 12, 14, 18, 22, 29, 34, 41, 51, 87, 90, 93, 128, 129, 185, 189, 195, 200, 205, 211, 214, 264, 265, 269], "converg": [1, 33, 50, 55, 59, 77, 78, 91, 130, 191, 198, 202, 205, 260], "legacy_matrix": [1, 78], "singl": [1, 5, 7, 9, 12, 15, 18, 24, 32, 33, 35, 42, 51, 52, 56, 57, 59, 64, 65, 67, 68, 69, 76, 78, 81, 82, 87, 90, 93, 100, 101, 106, 107, 116, 141, 145, 147, 155, 158, 161, 168, 171, 174, 181, 182, 184, 185, 186, 188, 190, 191, 195, 196, 197, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 220, 226, 228, 230, 233, 234, 236, 260, 262, 265, 266, 271], "combin": [1, 2, 14, 18, 32, 51, 55, 56, 59, 71, 78, 80, 81, 82, 91, 95, 100, 112, 122, 129, 140, 147, 155, 156, 158, 159, 160, 164, 166, 167, 182, 183, 185, 186, 188, 190, 191, 195, 196, 204, 205, 207, 208, 211, 213, 215, 216, 230, 233, 259, 262, 265], "whole": [1, 7, 14, 51, 53, 59, 78, 95, 102, 181, 182, 190, 191, 195, 198, 203, 205, 211, 214, 233], "left": [1, 5, 7, 12, 15, 18, 22, 31, 33, 34, 42, 43, 47, 51, 52, 53, 56, 57, 59, 67, 68, 74, 76, 78, 79, 81, 82, 87, 90, 91, 100, 105, 112, 126, 133, 140, 145, 149, 150, 153, 158, 171, 176, 180, 181, 182, 184, 191, 192, 193, 194, 195, 197, 198, 202, 203, 204, 205, 207, 211, 212, 213, 214, 215, 226, 227, 228, 230, 233, 246, 260, 264, 266, 270], "intact": [1, 12, 33, 227], "theano": [1, 11, 128, 269], "discontinu": [1, 31, 55, 57, 59, 78, 94, 198], "project": [1, 13, 15, 16, 21, 23, 33, 64, 65, 66, 80, 87, 127, 227, 228, 240], "aesara": [1, 11, 33, 128, 251, 258], "renam": [1, 12, 33, 78], "aesaracod": [1, 11, 33, 92, 195], "correspond": [1, 5, 7, 8, 12, 14, 15, 18, 31, 32, 33, 34, 41, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 57, 61, 62, 64, 65, 66, 67, 74, 76, 80, 81, 82, 87, 90, 91, 94, 95, 100, 106, 108, 112, 113, 115, 116, 129, 133, 137, 151, 155, 156, 158, 162, 163, 166, 171, 174, 176, 180, 181, 183, 184, 185, 186, 188, 190, 191, 195, 201, 202, 205, 207, 208, 211, 212, 213, 214, 215, 217, 219, 220, 221, 228, 229, 230, 231, 233, 234, 236, 240, 241, 243, 244, 246, 248, 265, 271], "theano_cod": 1, "aesara_cod": [1, 195], "theanoprint": 1, "aesaraprint": [1, 195], "predic": [1, 21, 26, 27, 31, 93, 191, 207, 233, 251], "experienc": [1, 34], "big": [1, 2, 5, 7, 35, 51, 53, 91, 128, 141, 180, 194, 195, 202, 236, 260, 262], "registr": 1, "done": [1, 2, 5, 12, 14, 18, 27, 28, 30, 31, 32, 33, 42, 44, 49, 51, 52, 53, 56, 59, 62, 63, 76, 78, 82, 87, 91, 113, 115, 120, 126, 128, 147, 156, 157, 158, 161, 163, 164, 171, 176, 178, 179, 181, 182, 184, 188, 192, 194, 195, 196, 204, 207, 208, 211, 213, 214, 215, 220, 221, 226, 227, 230, 234, 243, 244, 259, 262, 264, 265, 266], "add_handl": 1, "remove_handl": [1, 26], "multipledispatch": [1, 26], "instanc": [1, 4, 7, 8, 10, 12, 14, 15, 18, 26, 27, 28, 30, 32, 33, 42, 44, 46, 51, 53, 55, 56, 57, 59, 64, 67, 68, 69, 74, 75, 78, 79, 82, 84, 87, 91, 93, 94, 101, 105, 108, 112, 113, 129, 134, 141, 145, 151, 155, 156, 158, 160, 161, 171, 173, 175, 176, 181, 185, 186, 190, 191, 192, 193, 195, 203, 205, 207, 211, 213, 214, 215, 219, 220, 221, 226, 227, 228, 230, 233, 234, 240, 241, 242, 243, 244, 246, 248, 259, 260, 265, 270, 271], "regist": [1, 26, 27, 28, 52, 157], "register_mani": [1, 27, 28], "must": [1, 2, 7, 8, 11, 12, 13, 14, 25, 26, 27, 28, 33, 42, 43, 45, 47, 49, 50, 51, 52, 53, 56, 57, 59, 61, 64, 67, 70, 73, 74, 76, 78, 81, 82, 83, 84, 87, 90, 91, 94, 95, 98, 100, 101, 108, 109, 113, 115, 122, 123, 124, 125, 126, 128, 141, 156, 158, 161, 170, 171, 179, 180, 181, 182, 183, 186, 188, 190, 191, 195, 196, 203, 204, 205, 207, 208, 211, 213, 214, 215, 219, 220, 226, 227, 228, 229, 230, 231, 233, 234, 237, 262, 264, 265, 269, 270], "askprimehandl": 1, "staticmethod": [1, 226], "def": [1, 2, 5, 7, 8, 12, 14, 15, 18, 27, 28, 32, 51, 56, 63, 81, 87, 91, 93, 120, 156, 185, 191, 195, 204, 207, 214, 229, 231, 233, 234, 237, 259, 262, 265, 266, 270], "integ": [1, 2, 7, 11, 14, 15, 18, 22, 26, 27, 28, 31, 33, 34, 40, 42, 43, 44, 45, 47, 50, 52, 53, 54, 55, 56, 58, 59, 61, 64, 75, 76, 78, 79, 80, 81, 82, 84, 87, 88, 91, 93, 94, 100, 102, 150, 155, 157, 158, 159, 161, 163, 171, 173, 175, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 200, 201, 202, 204, 205, 207, 208, 211, 213, 214, 215, 219, 220, 221, 227, 228, 230, 233, 236, 260, 262, 265, 269, 270], "register_handl": [1, 26], "prime": [1, 7, 26, 27, 28, 42, 49, 50, 51, 52, 54, 56, 59, 91, 132, 182, 183, 185, 186, 187, 188, 191, 205, 207, 208, 215, 230], "definit": [1, 2, 8, 14, 25, 28, 33, 34, 42, 43, 48, 50, 51, 53, 54, 56, 57, 59, 64, 67, 71, 74, 76, 78, 82, 83, 84, 87, 91, 93, 115, 119, 120, 126, 163, 166, 169, 171, 178, 179, 182, 183, 186, 191, 192, 195, 202, 215, 216, 227, 228, 229, 233, 234, 240, 243, 244, 245, 246, 260, 270], "Not": [1, 8, 18, 51, 56, 81, 100, 195, 214, 215, 233, 264, 271], "exist": [1, 5, 7, 12, 18, 31, 32, 35, 42, 51, 55, 61, 63, 66, 67, 68, 69, 77, 78, 81, 87, 91, 151, 176, 179, 181, 182, 183, 184, 188, 190, 195, 202, 203, 205, 208, 211, 213, 214, 226, 234, 244, 264, 266, 271], "primepred": [1, 29], "q": [1, 2, 4, 7, 24, 25, 26, 27, 28, 29, 30, 33, 43, 47, 50, 51, 52, 59, 68, 73, 74, 76, 78, 80, 82, 87, 91, 93, 94, 100, 101, 108, 109, 112, 113, 115, 116, 121, 123, 124, 125, 128, 129, 130, 141, 155, 161, 164, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 185, 186, 188, 190, 191, 192, 194, 195, 197, 205, 208, 211, 213, 215, 220, 221, 236, 240, 242, 243, 245, 248, 266, 270], "_": [1, 2, 5, 12, 13, 14, 15, 18, 27, 28, 32, 39, 40, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 64, 65, 66, 67, 76, 78, 81, 82, 83, 84, 85, 87, 89, 91, 93, 100, 123, 126, 128, 140, 166, 170, 175, 178, 180, 186, 191, 194, 195, 196, 198, 202, 203, 204, 205, 207, 208, 211, 212, 213, 216, 233, 242, 244, 269], "20209": 1, "stochast": 1, "process": [1, 2, 7, 14, 15, 16, 21, 30, 33, 42, 43, 49, 51, 52, 57, 59, 67, 76, 78, 87, 91, 100, 109, 113, 115, 120, 123, 125, 128, 181, 182, 188, 195, 196, 203, 207, 211, 213, 226, 230, 270], "timestamp": 1, "wienerprocess": [1, 215], "posit": [1, 2, 7, 8, 12, 18, 26, 27, 28, 30, 32, 33, 34, 35, 40, 42, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 59, 61, 63, 64, 67, 76, 78, 80, 81, 82, 83, 87, 88, 90, 91, 94, 95, 100, 102, 107, 110, 113, 115, 116, 119, 121, 125, 126, 128, 130, 133, 135, 139, 156, 159, 161, 172, 173, 174, 176, 178, 179, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 200, 201, 203, 204, 205, 207, 208, 211, 213, 214, 215, 216, 221, 233, 240, 242, 243, 244, 246, 248, 249, 266, 270, 271], "would": [1, 2, 5, 7, 8, 10, 12, 13, 14, 15, 18, 20, 22, 32, 33, 34, 40, 42, 43, 50, 51, 52, 56, 63, 67, 76, 78, 82, 87, 91, 93, 94, 100, 101, 102, 104, 106, 113, 116, 125, 128, 156, 158, 161, 166, 170, 171, 176, 178, 181, 184, 185, 186, 188, 191, 192, 194, 195, 196, 198, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 219, 220, 226, 228, 230, 233, 234, 236, 237, 244, 245, 246, 248, 259, 260, 262, 264, 265, 266, 269, 270, 271], "normaldistribut": [1, 215], "made": [1, 2, 7, 12, 15, 18, 45, 47, 51, 52, 57, 60, 61, 64, 67, 68, 78, 81, 87, 91, 93, 113, 125, 128, 179, 182, 186, 188, 190, 191, 196, 202, 203, 204, 207, 211, 213, 214, 215, 228, 233, 236, 248, 265], "store": [1, 2, 7, 9, 13, 32, 33, 41, 42, 51, 73, 75, 84, 87, 91, 93, 108, 110, 112, 113, 126, 155, 161, 174, 178, 179, 181, 182, 185, 190, 191, 192, 202, 205, 216, 219, 220, 228, 229, 230, 233, 244, 246, 265], "basic": [1, 7, 11, 12, 13, 14, 15, 18, 23, 25, 27, 32, 33, 34, 39, 42, 46, 49, 50, 54, 57, 67, 69, 74, 75, 76, 81, 82, 85, 86, 88, 100, 107, 113, 123, 124, 126, 128, 129, 135, 145, 159, 166, 169, 176, 177, 179, 181, 182, 184, 186, 187, 188, 190, 192, 193, 195, 196, 202, 207, 208, 211, 212, 213, 214, 215, 226, 228, 233, 234, 238, 245, 246, 247, 253, 260, 261, 262, 263, 268], "20078": 1, "misspel": 1, "correct": [1, 2, 8, 12, 14, 15, 18, 33, 40, 42, 48, 50, 51, 55, 57, 75, 76, 78, 87, 91, 100, 113, 125, 178, 179, 188, 191, 202, 208, 211, 213, 214, 219, 227, 233, 262, 269], "spell": [1, 14, 211], "absorbing_prob": [1, 215], "absorb": [1, 76, 211, 215, 260], "probabilit": [1, 215], "es": 1, "standard": [1, 2, 7, 11, 15, 18, 33, 51, 55, 57, 59, 74, 76, 78, 79, 80, 81, 85, 87, 91, 92, 93, 103, 138, 142, 171, 176, 182, 185, 186, 188, 195, 198, 203, 207, 208, 211, 214, 215, 228, 234, 237, 243, 248, 259, 262, 270], "shutil": 1, "power": [1, 2, 25, 30, 33, 41, 42, 43, 52, 54, 55, 57, 73, 74, 76, 78, 80, 82, 84, 91, 92, 100, 113, 128, 133, 144, 147, 160, 163, 166, 167, 171, 182, 183, 185, 186, 187, 188, 190, 191, 195, 196, 199, 202, 204, 206, 208, 211, 213, 214, 215, 219, 228, 233, 251, 253, 259, 260, 261, 262, 263, 265, 266, 269], "sever": [1, 4, 7, 11, 12, 13, 14, 18, 20, 33, 36, 42, 43, 50, 51, 55, 56, 58, 59, 63, 76, 78, 91, 106, 166, 168, 181, 183, 185, 188, 190, 194, 195, 196, 202, 203, 211, 215, 226, 228, 238, 250, 262, 266, 269], "immut": [1, 51, 83, 86, 89, 179, 186, 211, 216, 254, 259, 266], "rest": [1, 12, 76, 79, 81, 85, 95, 102, 113, 116, 122, 166, 182, 185, 215, 233, 262, 263, 270], "coordsystem": [1, 53], "explicit": [1, 7, 18, 43, 50, 51, 55, 67, 68, 78, 90, 91, 112, 113, 116, 125, 129, 179, 182, 191, 194, 195, 197, 203, 205, 211, 212, 213, 214, 218, 230], "appropi": 1, "patch": [1, 53, 195], "real": [1, 2, 4, 5, 7, 8, 18, 25, 27, 28, 30, 31, 33, 43, 51, 52, 53, 55, 56, 57, 58, 59, 63, 67, 68, 73, 76, 78, 81, 82, 84, 87, 91, 93, 102, 113, 128, 130, 133, 134, 141, 159, 173, 180, 183, 186, 187, 190, 191, 192, 195, 196, 198, 202, 205, 207, 210, 211, 213, 214, 215, 220, 224, 228, 237, 264, 270, 271], "similarli": [1, 7, 47, 51, 52, 59, 63, 87, 94, 95, 100, 108, 126, 181, 182, 185, 190, 192, 202, 203, 205, 211, 226, 234, 244, 245, 266], "manifold": [1, 53], "track": [1, 2, 42, 51, 55, 59, 112, 126, 145, 179, 202, 221, 260], "separ": [1, 2, 5, 8, 12, 14, 18, 32, 39, 51, 52, 57, 59, 76, 78, 87, 101, 112, 125, 126, 129, 134, 158, 161, 170, 171, 181, 183, 186, 188, 191, 192, 195, 204, 207, 208, 212, 214, 219, 224, 226, 230, 234, 236, 240, 262], "coord_system": 1, "connect_to": 1, "coord_tuple_transform_to": [1, 53], "constructor": [1, 18, 27, 28, 32, 33, 38, 42, 43, 44, 51, 58, 59, 80, 85, 87, 116, 154, 155, 159, 163, 181, 182, 184, 185, 186, 187, 195, 203, 211, 220, 228, 243, 261, 265], "docstr": [1, 2, 12, 16, 18, 21, 23, 32, 33, 44, 51, 73, 76, 78, 87, 91, 96, 99, 101, 122, 126, 131, 148, 154, 155, 157, 177, 191, 198, 201, 202, 204, 207, 211, 212, 213, 214, 220, 221, 226, 229, 234, 236, 247, 250], "str": [1, 18, 27, 32, 33, 34, 43, 51, 52, 53, 55, 60, 61, 64, 67, 68, 79, 81, 84, 91, 93, 98, 108, 110, 128, 145, 155, 161, 171, 173, 174, 181, 186, 190, 195, 207, 211, 215, 231, 233, 234, 236, 240], "wrong": [1, 12, 15, 42, 51, 52, 59, 61, 87, 171, 185, 209, 211, 229, 262, 266], "right": [1, 2, 5, 9, 12, 14, 15, 18, 22, 31, 33, 34, 42, 43, 47, 51, 52, 54, 56, 57, 59, 67, 68, 76, 78, 81, 82, 87, 90, 91, 93, 94, 95, 100, 108, 112, 113, 125, 126, 128, 129, 133, 140, 145, 147, 149, 150, 155, 158, 161, 171, 176, 179, 180, 181, 182, 184, 190, 192, 193, 195, 197, 198, 202, 203, 205, 211, 212, 214, 215, 226, 228, 230, 233, 246, 260, 264, 266, 270], "unord": [1, 2, 51, 91, 186, 214, 233, 234], "imposs": [1, 12, 14, 18, 51, 185, 204, 211, 212, 224, 262, 270], "lambidfi": 1, "thu": [1, 2, 5, 11, 12, 29, 36, 42, 43, 51, 52, 53, 57, 59, 74, 76, 78, 82, 85, 87, 90, 91, 101, 112, 116, 122, 125, 166, 171, 183, 188, 190, 192, 196, 202, 205, 207, 228, 233, 234, 244, 245, 262, 265, 270, 271], "guess": [1, 32, 52, 55, 76, 79, 175, 188, 191, 205, 208, 265], "incorrect": [1, 8, 12, 15, 18, 42, 51, 61, 91, 98, 174, 186, 211, 214, 227, 230, 231], "mul": [1, 2, 4, 14, 18, 25, 76, 78, 82, 91, 141, 145, 155, 156, 184, 185, 186, 190, 191, 195, 196, 197, 204, 207, 211, 212, 213, 214, 219, 251, 265], "pow": [1, 2, 14, 25, 30, 33, 52, 57, 76, 82, 91, 160, 184, 185, 186, 191, 195, 197, 204, 207, 213, 214, 265, 269], "construct": [1, 5, 27, 28, 32, 33, 38, 51, 53, 57, 59, 61, 65, 67, 79, 84, 87, 92, 95, 104, 108, 110, 113, 115, 146, 150, 159, 160, 163, 167, 182, 185, 186, 188, 190, 191, 195, 208, 213, 215, 216, 218, 220, 228, 230, 231, 243, 245, 246, 262, 265, 266, 270], "directli": [1, 2, 5, 7, 8, 11, 12, 14, 18, 20, 27, 28, 31, 32, 33, 42, 50, 51, 53, 57, 62, 82, 84, 87, 91, 113, 147, 159, 164, 171, 174, 181, 182, 185, 186, 190, 191, 203, 204, 205, 207, 208, 211, 212, 214, 215, 226, 227, 228, 229, 230, 231, 260, 271], "superclass": [1, 7, 50, 51, 78, 84, 186], "scalar": [1, 25, 51, 53, 66, 80, 82, 84, 87, 92, 110, 113, 160, 171, 172, 173, 177, 179, 182, 184, 188, 195, 211, 216, 228, 234, 240, 241, 242, 243, 244, 245, 247, 249], "numer": [1, 2, 5, 7, 11, 14, 22, 29, 31, 33, 50, 51, 56, 59, 63, 67, 71, 74, 87, 91, 93, 97, 98, 100, 108, 109, 113, 115, 122, 125, 129, 133, 140, 143, 158, 165, 170, 179, 181, 185, 186, 188, 189, 190, 191, 194, 195, 204, 205, 207, 211, 213, 214, 220, 226, 227, 233, 234, 251, 259, 262, 266, 270], "sin": [1, 2, 7, 14, 15, 18, 20, 22, 25, 31, 33, 50, 51, 53, 55, 56, 58, 59, 60, 61, 65, 69, 70, 73, 74, 75, 76, 78, 79, 82, 87, 92, 93, 102, 105, 106, 107, 112, 113, 115, 117, 119, 120, 121, 125, 128, 133, 135, 159, 171, 173, 174, 176, 178, 179, 180, 181, 183, 185, 191, 192, 194, 195, 196, 197, 198, 202, 203, 204, 205, 207, 210, 211, 213, 214, 216, 222, 228, 234, 240, 241, 242, 243, 244, 249, 259, 260, 262, 264, 265, 270, 271], "boolean": [1, 18, 21, 26, 27, 28, 29, 30, 31, 33, 51, 57, 61, 65, 66, 67, 68, 79, 82, 87, 88, 91, 94, 98, 100, 146, 171, 173, 175, 181, 184, 186, 188, 190, 192, 195, 207, 211, 213, 215, 233, 242, 253, 266], "sens": [1, 5, 7, 18, 25, 29, 31, 32, 51, 53, 56, 59, 76, 81, 108, 115, 166, 171, 179, 182, 188, 190, 204, 205, 207, 214, 215, 227, 228, 233, 248, 270], "exponenti": [1, 2, 7, 25, 33, 42, 47, 51, 52, 56, 58, 78, 81, 82, 87, 91, 93, 147, 163, 192, 207, 214, 215, 261, 262, 266], "complex": [1, 2, 4, 7, 14, 18, 25, 28, 30, 31, 33, 42, 51, 52, 54, 55, 56, 58, 59, 63, 73, 76, 82, 83, 87, 91, 92, 93, 98, 100, 104, 113, 128, 130, 134, 144, 147, 149, 150, 161, 170, 171, 179, 183, 184, 186, 187, 190, 191, 195, 196, 200, 205, 207, 211, 213, 214, 215, 228, 236, 270, 271], "manual": [1, 9, 11, 12, 15, 18, 33, 34, 42, 55, 61, 78, 79, 93, 100, 112, 113, 125, 129, 181, 188, 195, 211, 213, 214, 229, 260, 270], "trick": [1, 2, 47, 205, 221], "treat": [1, 7, 8, 18, 41, 42, 49, 51, 56, 59, 66, 67, 87, 93, 110, 113, 134, 171, 176, 183, 185, 186, 188, 190, 191, 192, 194, 195, 202, 203, 205, 207, 208, 211, 219, 227, 230, 246, 262, 266], "cdot": [1, 7, 34, 50, 56, 59, 69, 73, 74, 76, 82, 84, 87, 91, 101, 103, 126, 166, 176, 178, 179, 180, 182, 183, 191, 198, 202, 205, 211, 213, 216, 217, 245, 246, 264, 265, 270], "try": [1, 2, 7, 8, 14, 15, 16, 18, 43, 50, 51, 55, 59, 61, 66, 76, 78, 81, 84, 87, 90, 91, 151, 153, 160, 161, 181, 185, 190, 195, 200, 202, 203, 204, 205, 207, 208, 211, 213, 234, 236, 259, 262, 265, 266, 270], "attributeerror": [1, 7, 51, 87, 214, 234, 266], "as_coeff_mul": [1, 51, 76, 84], "tri": [1, 2, 7, 32, 51, 59, 67, 76, 78, 115, 125, 156, 182, 183, 190, 195, 197, 207, 211, 212, 214, 226, 262, 270], "follow": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 26, 28, 31, 32, 33, 34, 40, 41, 42, 43, 44, 47, 50, 51, 52, 55, 56, 57, 59, 63, 65, 67, 74, 75, 76, 78, 81, 82, 84, 87, 91, 92, 94, 95, 107, 108, 113, 115, 122, 123, 124, 125, 126, 128, 130, 134, 153, 156, 158, 161, 164, 166, 171, 176, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 193, 194, 195, 196, 197, 202, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 219, 220, 221, 226, 229, 230, 233, 234, 237, 243, 244, 246, 259, 260, 262, 263, 265, 266, 270, 271], "benchmark": [1, 115, 127], "random": [1, 11, 14, 35, 40, 42, 43, 49, 52, 61, 64, 65, 86, 87, 91, 145, 157, 181, 188, 195, 225, 226, 229, 233, 251, 257, 262, 266, 270], "runtest": [1, 226], "tmpfile": 1, "random_complex_numb": 1, "verify_numer": 1, "test_derivative_numer": 1, "_randrang": [1, 52], "_randint": [1, 188], "explicitli": [1, 7, 12, 18, 33, 42, 43, 51, 52, 54, 57, 59, 64, 68, 84, 87, 92, 100, 113, 170, 171, 181, 183, 185, 186, 188, 191, 195, 207, 211, 231, 262, 266, 269, 271], "as_poli": [1, 51, 183, 191], "as_expr": [1, 51, 87, 185, 190, 191, 192, 266], "combintor": 1, "control": [1, 2, 7, 11, 13, 18, 32, 34, 51, 52, 55, 76, 81, 82, 125, 128, 141, 145, 156, 157, 161, 165, 191, 192, 196, 203, 208, 214, 233, 256, 257, 259], "whether": [1, 7, 8, 9, 12, 18, 31, 32, 33, 37, 42, 50, 51, 52, 58, 59, 63, 66, 78, 79, 81, 82, 87, 91, 104, 109, 112, 113, 149, 168, 173, 179, 181, 184, 185, 186, 190, 191, 195, 198, 202, 203, 207, 208, 211, 213, 214, 215, 216, 226, 228, 233, 234, 240, 242, 262, 266], "cycl": [1, 15, 33, 39, 42, 43, 49, 51, 54, 56, 82, 91, 135, 203, 233], "bad": [1, 9, 50, 91, 163, 195], "global": [1, 12, 14, 26, 27, 28, 31, 33, 34, 51, 63, 76, 93, 145, 151, 171, 173, 181, 182, 185, 186, 188, 195, 208, 211, 212, 215, 226, 228, 229, 234, 242], "perm_cycl": [1, 43, 195], "printer": [1, 18, 43, 51, 59, 79, 87, 92, 175, 220, 227, 228, 234, 252, 258, 261, 265], "easiest": [1, 2, 13, 15, 51, 182, 185, 208, 234, 244, 259, 265, 270], "configur": [1, 11, 12, 13, 43, 81, 100, 108, 116, 119, 121, 122, 123, 125, 187, 195], "init_print": [1, 20, 33, 43, 55, 78, 79, 87, 95, 175, 182, 183, 194, 260, 264, 266, 269, 270, 271], "current": [1, 2, 7, 12, 15, 25, 28, 31, 32, 33, 34, 35, 42, 45, 46, 48, 49, 50, 51, 53, 57, 59, 61, 63, 66, 71, 74, 76, 78, 80, 82, 87, 91, 93, 94, 97, 104, 113, 122, 155, 160, 161, 165, 169, 179, 181, 182, 183, 184, 186, 188, 191, 192, 194, 195, 196, 202, 205, 207, 208, 210, 211, 212, 213, 214, 215, 221, 226, 227, 228, 230, 243, 266, 271], "take": [1, 2, 5, 7, 8, 11, 12, 13, 15, 18, 28, 31, 33, 34, 36, 41, 42, 46, 50, 51, 52, 53, 57, 59, 63, 64, 74, 78, 80, 81, 82, 87, 91, 92, 93, 94, 100, 104, 108, 110, 112, 113, 115, 125, 126, 128, 130, 144, 147, 150, 151, 155, 157, 158, 159, 160, 161, 163, 166, 169, 170, 171, 172, 173, 175, 178, 179, 181, 182, 183, 184, 185, 186, 188, 191, 192, 195, 198, 201, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 217, 220, 226, 227, 229, 230, 233, 234, 240, 241, 242, 259, 260, 262, 264, 265, 266, 270], "parse_expr": [1, 7, 11, 93], "problemat": [1, 18, 185], "few": [1, 7, 9, 11, 12, 29, 41, 43, 51, 52, 78, 79, 91, 92, 115, 122, 164, 170, 175, 178, 179, 182, 190, 195, 203, 204, 205, 211, 214, 215, 228, 233, 270], "affect": [1, 7, 18, 50, 51, 87, 170, 191, 214, 244], "perform": [1, 2, 4, 5, 7, 11, 18, 30, 32, 33, 34, 42, 43, 46, 50, 51, 52, 54, 55, 57, 64, 68, 75, 78, 85, 87, 91, 92, 106, 108, 115, 116, 122, 125, 126, 128, 145, 146, 155, 158, 161, 176, 179, 183, 184, 185, 188, 190, 191, 196, 197, 198, 202, 207, 208, 211, 213, 214, 215, 216, 227, 233, 240, 241, 243, 246, 251, 259, 260, 264, 265, 270], "18056": 1, "15416": 1, "where": [1, 2, 5, 7, 8, 9, 12, 13, 14, 15, 18, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 64, 66, 67, 68, 69, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 87, 91, 94, 97, 100, 104, 107, 108, 109, 110, 112, 113, 115, 124, 125, 126, 128, 129, 135, 145, 150, 156, 158, 160, 161, 162, 163, 164, 171, 174, 176, 178, 179, 180, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 216, 219, 221, 226, 227, 228, 229, 233, 234, 236, 240, 246, 248, 260, 262, 264, 266, 270, 271], "caus": [1, 12, 15, 18, 20, 51, 52, 55, 57, 87, 113, 120, 125, 178, 195, 204, 211, 212, 213, 230, 231, 266], "up": [1, 5, 7, 8, 9, 11, 12, 18, 20, 28, 31, 33, 42, 43, 45, 51, 52, 53, 55, 56, 57, 59, 60, 67, 68, 72, 76, 78, 79, 81, 82, 87, 91, 92, 94, 102, 104, 110, 112, 115, 119, 121, 125, 126, 128, 129, 141, 156, 158, 174, 180, 181, 182, 185, 186, 190, 192, 195, 196, 197, 202, 204, 205, 207, 208, 211, 212, 213, 214, 227, 228, 229, 230, 231, 234, 261, 262, 265, 266, 268], "100x": 1, "slowdown": [1, 55], "automat": [1, 2, 7, 9, 11, 12, 14, 15, 32, 33, 34, 43, 51, 53, 54, 55, 56, 57, 59, 64, 66, 70, 76, 79, 81, 91, 93, 94, 108, 113, 115, 120, 147, 149, 150, 159, 161, 174, 178, 181, 182, 185, 186, 187, 190, 191, 192, 195, 198, 201, 202, 204, 205, 207, 208, 211, 213, 214, 220, 221, 226, 227, 228, 231, 244, 249, 260, 262, 264, 265, 269, 270, 271], "doesn": [1, 2, 12, 14, 18, 33, 75, 113, 116, 125, 128, 179, 183, 192, 194, 204, 207, 214, 271], "significantli": [1, 33, 55, 104, 123, 186, 197, 227, 230], "slower": [1, 18, 47, 87, 185, 190, 234, 259], "direct": [1, 6, 12, 14, 15, 25, 27, 28, 32, 36, 39, 42, 47, 50, 51, 53, 55, 57, 60, 64, 65, 66, 67, 81, 82, 87, 94, 95, 104, 105, 107, 115, 116, 120, 128, 147, 171, 176, 178, 179, 182, 184, 185, 188, 192, 202, 205, 221, 224, 233, 240, 244, 245, 248], "happen": [1, 5, 7, 8, 12, 14, 18, 25, 33, 43, 50, 51, 55, 63, 66, 75, 156, 160, 166, 182, 188, 190, 191, 194, 203, 207, 211, 215, 234, 244, 262, 269, 270], "occur": [1, 2, 14, 42, 43, 51, 55, 59, 68, 76, 82, 93, 104, 125, 170, 171, 178, 190, 198, 207, 212, 213, 216, 226, 233, 265], "_sympifi": [1, 51, 84, 265], "equival": [1, 2, 7, 8, 12, 18, 25, 29, 33, 34, 41, 42, 47, 51, 52, 55, 57, 59, 76, 78, 87, 91, 93, 97, 98, 100, 113, 122, 144, 155, 158, 161, 164, 171, 175, 179, 181, 182, 183, 185, 186, 190, 191, 195, 202, 203, 207, 211, 213, 214, 216, 217, 220, 221, 230, 234, 236, 237, 253], "strict": [1, 42, 43, 51, 55, 56, 82, 87, 188, 191, 213, 233, 236, 270], "lot": [1, 42, 51, 69, 76, 78, 87, 113, 128, 181, 194, 198, 208, 214, 226, 270], "harder": [1, 7, 14, 51, 76, 185, 226], "secur": 1, "eval": [1, 7, 14, 27, 28, 33, 51, 57, 59, 147, 161, 186, 191, 195, 228, 259], "__repr__": [1, 195], "com": [1, 9, 11, 12, 13, 14, 15, 18, 20, 25, 29, 31, 42, 44, 45, 51, 52, 54, 55, 56, 57, 59, 61, 67, 68, 76, 78, 82, 87, 91, 98, 180, 189, 198, 200, 203, 204, 207, 208, 211, 214, 215, 233, 236, 266], "pull": [1, 9, 11, 12, 13, 14, 15, 17, 18, 20, 33, 51, 56, 59, 160, 196, 207, 211, 214, 266, 270], "12524": 1, "begin": [1, 2, 7, 14, 18, 22, 51, 52, 56, 57, 59, 76, 82, 84, 87, 91, 116, 123, 124, 125, 126, 157, 166, 171, 179, 180, 184, 195, 205, 208, 211, 212, 214, 215, 226, 236, 262, 264, 266, 270], "usual": [1, 2, 5, 7, 11, 32, 34, 42, 50, 51, 52, 69, 76, 78, 87, 122, 147, 159, 166, 176, 178, 179, 182, 183, 185, 186, 188, 194, 195, 196, 202, 205, 211, 214, 215, 216, 220, 221, 228, 230, 234, 240, 248, 259, 262, 265, 269, 270], "custom": [1, 14, 19, 21, 33, 43, 51, 55, 58, 79, 82, 87, 106, 107, 170, 175, 176, 197, 201, 208, 215, 221, 227, 234, 240, 248, 257, 264, 266], "repr": [1, 33, 78, 155, 185, 190, 195, 226, 269], "anyth": [1, 2, 12, 14, 15, 18, 31, 33, 51, 52, 62, 66, 87, 113, 135, 145, 192, 195, 201, 203, 207, 211, 213, 227, 233, 236, 262], "look": [1, 2, 7, 8, 12, 14, 15, 18, 24, 32, 33, 42, 51, 56, 57, 59, 72, 87, 91, 108, 113, 115, 122, 145, 155, 156, 159, 174, 181, 185, 186, 190, 195, 197, 198, 202, 205, 207, 208, 211, 212, 226, 230, 234, 236, 244, 260, 265, 268, 269], "valid": [1, 7, 8, 11, 14, 15, 18, 26, 28, 30, 31, 32, 33, 44, 50, 51, 56, 57, 67, 77, 87, 91, 106, 108, 113, 115, 126, 130, 134, 153, 158, 168, 171, 175, 179, 185, 188, 191, 194, 195, 203, 207, 208, 211, 213, 214, 215, 234, 266, 270], "identifi": [1, 7, 8, 14, 31, 44, 51, 54, 55, 78, 87, 123, 149, 150, 182, 185, 186, 196, 204, 207, 211, 212, 213, 214, 215, 234, 237], "There": [1, 2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 18, 33, 34, 42, 43, 44, 45, 48, 50, 51, 52, 55, 56, 59, 75, 76, 78, 79, 80, 81, 84, 87, 91, 94, 95, 100, 104, 112, 122, 123, 125, 134, 151, 156, 170, 171, 175, 178, 179, 181, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 203, 204, 205, 207, 208, 211, 213, 214, 215, 220, 229, 230, 233, 234, 236, 244, 259, 260, 262, 264, 265, 269, 270], "plenti": 1, "firstli": [1, 7, 12, 18, 205], "alongsid": [1, 12, 18, 84], "unchang": [1, 12, 18, 42, 43, 51, 78, 87, 100, 191, 195, 201, 204, 207, 214, 259], "_sympy_": [1, 51], "dictionari": [1, 11, 32, 33, 40, 42, 43, 49, 51, 56, 65, 67, 80, 82, 87, 90, 91, 93, 94, 106, 108, 109, 112, 113, 115, 116, 119, 123, 125, 151, 161, 171, 179, 181, 183, 186, 188, 190, 191, 193, 195, 202, 207, 208, 211, 212, 213, 214, 215, 219, 221, 226, 230, 233, 234, 240, 259, 266], "disabl": [1, 51, 52, 76, 78, 91, 188, 191, 195, 203, 211, 213, 224, 226, 229, 233], "int": [1, 2, 7, 8, 11, 14, 15, 18, 25, 31, 33, 43, 51, 52, 53, 56, 57, 59, 60, 67, 76, 78, 79, 81, 82, 87, 88, 91, 93, 98, 100, 141, 145, 146, 155, 171, 173, 174, 175, 180, 181, 185, 186, 190, 191, 192, 195, 197, 198, 200, 211, 212, 215, 227, 231, 233, 236, 262, 264, 265, 269, 270], "dx": [1, 5, 15, 18, 31, 33, 47, 51, 53, 55, 59, 68, 70, 73, 74, 75, 76, 78, 87, 94, 103, 108, 109, 150, 179, 191, 192, 198, 208, 211, 212, 216, 260, 264, 269, 271], "constant": [1, 31, 33, 50, 51, 55, 57, 59, 75, 76, 78, 94, 95, 100, 112, 113, 115, 128, 129, 138, 142, 148, 164, 165, 167, 168, 169, 172, 174, 176, 181, 183, 186, 188, 190, 191, 192, 195, 197, 202, 205, 207, 208, 211, 212, 213, 214, 215, 226, 228, 233, 234, 242, 246, 249, 260, 266, 271], "equal": [1, 3, 7, 8, 14, 18, 25, 29, 32, 33, 34, 40, 41, 42, 43, 47, 49, 50, 52, 53, 55, 56, 57, 59, 64, 65, 66, 67, 68, 70, 76, 81, 82, 84, 87, 91, 94, 100, 101, 105, 108, 110, 115, 123, 124, 145, 146, 161, 166, 171, 174, 179, 182, 183, 184, 185, 186, 188, 190, 191, 193, 195, 201, 203, 205, 208, 211, 212, 213, 214, 215, 221, 226, 227, 228, 233, 236, 240, 244, 249, 260, 263, 271], "lh": [1, 33, 41, 51, 193, 195, 211, 213, 214, 245], "tensexpr": [1, 101, 221], "substitute_indic": 1, "danger": [1, 183], "tensor_head": [1, 101, 221], "had": [1, 18, 43, 51, 52, 87, 91, 113, 125, 190, 191, 192, 195, 203, 205, 211, 213, 214, 229, 234, 259, 262, 265, 266], "purpos": [1, 6, 7, 13, 14, 15, 16, 18, 32, 33, 42, 48, 51, 52, 78, 87, 113, 128, 166, 170, 179, 185, 188, 192, 194, 195, 202, 211, 214, 220, 230, 232, 234, 243, 244, 260, 270], "shorter": [1, 51, 61, 104, 123, 170, 182, 186, 195, 228, 236], "creation": [1, 2, 18, 51, 53, 87, 105, 110, 119, 122, 123, 124, 125, 135, 145, 149, 150, 151, 161, 178, 179, 195, 215, 220, 228, 234], "l": [1, 2, 14, 31, 32, 33, 34, 40, 42, 43, 50, 52, 59, 62, 63, 64, 65, 66, 68, 69, 74, 76, 78, 80, 83, 84, 87, 91, 94, 95, 100, 102, 107, 108, 110, 112, 113, 116, 117, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 133, 159, 162, 163, 164, 166, 178, 179, 180, 182, 184, 186, 188, 189, 195, 197, 198, 204, 205, 208, 211, 213, 215, 219, 220, 221, 222, 226, 228, 233, 249, 270], "_dummy_fmt": 1, "l_": [1, 78, 87], "d": [1, 2, 5, 9, 14, 15, 18, 25, 32, 35, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 56, 59, 61, 65, 69, 74, 76, 78, 80, 81, 82, 83, 84, 87, 88, 90, 91, 93, 94, 108, 128, 130, 133, 134, 140, 150, 158, 160, 161, 166, 170, 171, 173, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 195, 197, 201, 205, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 221, 233, 236, 240, 241, 242, 243, 244, 248, 256, 266, 271], "obsolet": 1, "format": [1, 5, 9, 12, 16, 32, 43, 52, 73, 74, 78, 81, 87, 90, 91, 94, 112, 129, 134, 145, 155, 181, 184, 185, 190, 191, 193, 195, 205, 211, 214, 226, 236, 240, 243, 263, 266, 269], "dummy_nam": [1, 221], "clearer": [1, 243], "ambigu": [1, 2, 15, 51, 149, 155, 207, 219, 224], "symmetri": [1, 14, 39, 44, 47, 59, 82, 140, 180, 211, 219, 221, 259, 270], "metric_symmetri": [1, 221], "set_metr": [1, 221], "delta": [1, 2, 33, 35, 45, 56, 59, 74, 76, 80, 98, 125, 133, 161, 195, 202, 208, 211, 215, 216, 221], "epsilon": [1, 2, 50, 52, 59, 76, 78, 132, 195, 221], "respect": [1, 2, 13, 14, 18, 26, 28, 29, 31, 32, 33, 34, 41, 42, 43, 46, 47, 49, 50, 51, 53, 57, 59, 61, 63, 67, 68, 73, 74, 76, 78, 81, 82, 84, 87, 91, 93, 94, 95, 100, 105, 106, 107, 110, 116, 124, 126, 128, 135, 150, 163, 164, 165, 170, 171, 174, 176, 179, 180, 181, 182, 185, 188, 190, 191, 192, 195, 197, 198, 201, 203, 207, 211, 212, 213, 214, 215, 216, 220, 221, 226, 228, 240, 241, 242, 243, 244, 245, 246, 247, 248, 260, 270], "prefer": [1, 7, 9, 11, 14, 18, 33, 43, 50, 51, 59, 91, 93, 113, 161, 166, 181, 184, 186, 188, 190, 195, 203, 207, 211, 213, 220, 226, 228, 231, 234, 264, 266], "over": [1, 2, 4, 12, 15, 18, 25, 31, 32, 33, 34, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 65, 67, 74, 76, 80, 81, 84, 87, 88, 91, 94, 95, 102, 113, 128, 129, 140, 156, 159, 161, 165, 166, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 198, 200, 202, 207, 208, 210, 211, 213, 214, 215, 216, 219, 220, 229, 233, 234, 240, 242, 246, 249, 264, 268, 270], "latter": [1, 4, 18, 33, 42, 51, 56, 59, 76, 91, 182, 186, 190, 195, 205, 208, 221, 228, 233, 234, 262], "extra": [1, 9, 33, 51, 52, 91, 92, 120, 166, 176, 187, 188, 195, 205, 211, 226, 227, 228, 246], "involv": [1, 2, 5, 7, 28, 30, 42, 50, 51, 52, 56, 63, 64, 76, 78, 91, 100, 105, 108, 113, 140, 150, 156, 158, 168, 178, 179, 182, 183, 186, 188, 190, 191, 192, 196, 197, 202, 203, 204, 205, 207, 208, 211, 213, 216, 234, 270], "obscur": [1, 7], "young": [1, 94, 221], "tableau": 1, "Is": [1, 12, 43, 61, 62, 64, 65, 66, 67, 91, 192, 214], "favor": 1, "consist": [1, 5, 7, 14, 15, 32, 42, 43, 47, 51, 52, 56, 57, 59, 61, 67, 69, 76, 81, 94, 126, 135, 155, 161, 166, 169, 174, 181, 183, 185, 186, 188, 203, 211, 213, 214, 215, 219, 224, 227, 228, 233, 263, 265], "tensorindex": [1, 221], "tensor_indic": [1, 101, 221], "denot": [1, 2, 5, 42, 43, 51, 53, 59, 73, 74, 76, 78, 80, 81, 82, 87, 91, 93, 100, 166, 171, 176, 181, 182, 183, 188, 190, 198, 202, 203, 205, 211, 215, 220, 221, 240, 241, 243, 244, 246, 248], "set_dimens": 1, "unit_system": [1, 168], "set_quantity_dimens": [1, 164], "set_global_dimens": 1, "set_scale_factor": 1, "set_quantity_scale_factor": [1, 164], "set_global_relative_scale_factor": [1, 168], "get_dimensional_expr": 1, "associ": [1, 7, 15, 32, 34, 49, 51, 52, 58, 59, 73, 74, 76, 80, 126, 128, 151, 159, 170, 171, 178, 179, 183, 184, 185, 186, 188, 190, 195, 203, 205, 208, 221, 235], "unitsystem": [1, 169], "dimension": [1, 31, 33, 35, 53, 63, 64, 65, 66, 67, 84, 87, 95, 101, 128, 135, 137, 147, 163, 165, 176, 177, 181, 182, 188, 190, 191, 194, 195, 213, 214, 216, 217, 221, 227, 248, 271], "_collect_factor_and_dimens": 1, "motiv": [1, 18], "emptyset": [1, 7, 31, 32, 81, 195, 214, 240, 271], "is_empti": [1, 7, 43], "none": [1, 7, 8, 14, 15, 18, 25, 26, 27, 28, 29, 31, 32, 33, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 100, 105, 106, 107, 108, 109, 112, 113, 130, 132, 134, 135, 141, 146, 151, 156, 158, 161, 163, 167, 168, 169, 171, 173, 174, 175, 179, 180, 181, 182, 184, 185, 186, 188, 190, 191, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 226, 227, 228, 229, 233, 234, 236, 239, 240, 242, 266, 270, 271], "unknown": [1, 4, 7, 8, 18, 25, 51, 52, 95, 146, 193, 210, 211, 212, 213, 214, 233, 271], "empti": [1, 7, 27, 31, 32, 33, 34, 42, 46, 50, 51, 63, 66, 67, 68, 81, 82, 87, 91, 108, 125, 156, 169, 186, 190, 191, 195, 201, 202, 203, 205, 211, 213, 214, 226, 228, 233, 236, 265], "individu": [1, 7, 18, 51, 57, 62, 67, 68, 80, 82, 84, 87, 100, 126, 133, 151, 155, 180, 203, 211, 226, 266], "themselv": [1, 11, 15, 18, 29, 32, 43, 47, 49, 51, 78, 91, 122, 165, 185, 186, 190, 201, 215, 221, 230, 233, 236, 270], "But": [1, 2, 11, 12, 15, 18, 50, 51, 59, 65, 75, 82, 87, 91, 149, 150, 161, 166, 171, 182, 183, 188, 192, 202, 204, 205, 207, 208, 211, 213, 214, 220, 230, 233, 234, 242, 260, 262, 264, 265, 270], "exactli": [1, 2, 12, 14, 15, 18, 29, 35, 42, 51, 54, 55, 87, 93, 107, 126, 180, 205, 207, 211, 214, 216, 230, 233, 234, 260, 262, 264, 269, 270], "denest": [1, 51, 191, 206, 213, 233], "On": [1, 7, 9, 28, 44, 51, 53, 59, 78, 81, 91, 113, 166, 176, 185, 188, 189, 190, 191, 211, 213, 230, 234, 246, 248], "hand": [1, 5, 7, 14, 18, 32, 33, 43, 44, 51, 57, 59, 78, 81, 82, 87, 91, 94, 108, 112, 113, 125, 129, 133, 150, 153, 171, 176, 179, 180, 182, 185, 186, 188, 190, 193, 205, 214, 226, 228, 230, 234, 237, 246, 248, 264], "anoth": [1, 2, 4, 5, 7, 8, 12, 14, 15, 18, 29, 32, 33, 43, 48, 50, 51, 52, 53, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 76, 78, 84, 87, 91, 94, 95, 110, 150, 166, 168, 171, 174, 178, 179, 181, 183, 185, 186, 188, 190, 191, 192, 195, 196, 202, 203, 205, 211, 213, 214, 215, 227, 228, 234, 240, 243, 244, 248, 259, 262, 264, 265, 270, 271], "path": [1, 9, 13, 14, 42, 67, 73, 100, 120, 176, 178, 204, 207, 211, 214, 226, 227, 230, 231, 233, 236, 237, 238, 246], "particl": [1, 105, 107, 108, 113, 116, 117, 122, 123, 125, 128, 129, 137, 140, 147, 148, 159, 161, 164, 166, 178, 221], "rigidbodi": [1, 105, 108, 112, 115, 119, 120, 121, 122, 126, 128], "potential_energi": [1, 108, 121, 122, 126], "energi": [1, 102, 105, 108, 110, 113, 121, 122, 137, 162, 166, 176, 221, 246, 256], "setter": [1, 113, 128], "getter": [1, 51, 113, 128], "set_": 1, "fix": [1, 12, 14, 17, 33, 42, 44, 47, 49, 52, 59, 63, 80, 94, 95, 105, 107, 110, 115, 128, 145, 150, 154, 157, 161, 166, 171, 174, 178, 179, 181, 185, 188, 190, 191, 192, 195, 201, 205, 213, 215, 233, 240, 241], "set_condit": 1, "And": [1, 2, 8, 12, 18, 22, 27, 42, 43, 50, 51, 52, 59, 76, 81, 82, 87, 90, 107, 133, 179, 181, 183, 191, 192, 195, 203, 207, 208, 214, 215, 234, 244, 270], "17749": 1, "side": [1, 2, 5, 7, 33, 42, 43, 51, 63, 67, 78, 87, 91, 94, 100, 108, 112, 125, 126, 129, 149, 150, 166, 171, 180, 182, 188, 190, 193, 195, 212, 214, 215, 219, 226, 228, 249, 260], "unpack": [1, 51, 82, 87, 233, 234], "expand": [1, 2, 5, 7, 14, 33, 53, 55, 56, 57, 59, 76, 78, 82, 100, 113, 115, 128, 142, 150, 153, 160, 161, 183, 185, 187, 188, 190, 191, 192, 198, 202, 204, 205, 207, 211, 214, 215, 219, 227, 234, 245, 251, 259, 264], "intermedi": [1, 23, 33, 34, 74, 82, 113, 115, 119, 145, 155, 163, 164, 171, 174, 178, 214, 228, 267], "befor": [1, 2, 7, 8, 12, 14, 18, 20, 33, 42, 43, 45, 47, 51, 52, 53, 59, 79, 82, 87, 91, 93, 94, 95, 104, 109, 113, 115, 116, 119, 120, 125, 128, 130, 161, 170, 175, 179, 183, 185, 190, 191, 195, 196, 202, 203, 207, 208, 211, 213, 214, 215, 222, 226, 229, 233, 234, 243, 263, 264, 265, 270], "satisfi": [1, 7, 11, 15, 28, 29, 31, 34, 39, 42, 47, 51, 52, 56, 59, 61, 74, 76, 80, 81, 87, 91, 109, 125, 145, 150, 182, 183, 188, 190, 191, 195, 201, 202, 203, 208, 211, 212, 213, 214, 215, 221, 265, 270], "emul": [1, 207, 214, 216, 234], "is_deriv": [1, 51], "as_finite_differ": [1, 31, 51, 260], "17881": 1, "get_matrix": [1, 221], "__getitem__": [1, 51, 82, 220], "__iter__": [1, 43, 51, 207], "_components_data_full_destroi": 1, "__pow__": [1, 82, 186, 192], "flaw": 1, "replace_with_arrai": [1, 221, 222], "cach": [1, 7, 56, 76, 182, 191, 195, 224, 229, 230, 251], "actual": [1, 2, 5, 7, 8, 9, 11, 12, 14, 15, 18, 32, 33, 34, 40, 42, 49, 51, 52, 59, 63, 76, 78, 80, 84, 87, 91, 100, 104, 113, 115, 123, 124, 125, 175, 182, 185, 190, 195, 203, 205, 207, 208, 211, 214, 222, 226, 227, 230, 231, 233, 234, 264], "safe": [1, 91, 185, 191, 213, 219, 260], "squar": [1, 2, 7, 25, 28, 33, 42, 51, 52, 57, 67, 68, 76, 78, 82, 83, 87, 90, 91, 94, 100, 102, 123, 124, 147, 163, 171, 180, 184, 186, 187, 188, 190, 191, 192, 195, 203, 206, 208, 211, 214, 215, 264], "jordan": [1, 76, 82, 87, 193, 213, 214], "block": [1, 12, 14, 33, 40, 42, 52, 82, 86, 87, 112, 113, 115, 117, 171, 179, 184, 208, 234, 243], "band": [1, 82, 90], "eigenvalu": [1, 82, 87, 113, 115, 155, 158, 264], "elif": [1, 7, 8, 18], "lower": [1, 7, 14, 28, 31, 33, 42, 43, 50, 51, 53, 59, 60, 62, 67, 68, 78, 82, 83, 84, 87, 98, 103, 107, 161, 174, 180, 182, 184, 186, 188, 191, 195, 204, 205, 207, 211, 220, 221, 230, 240, 260, 268], "inspect": [1, 7, 87, 190, 201, 232, 234, 258], "getsourc": [1, 234, 238], "obj": [1, 7, 14, 51, 186, 191, 195, 229], "ipython": [1, 2, 11, 14, 20, 79, 128, 175, 234, 238, 239, 268, 269], "jupyt": [1, 11, 18, 234, 238], "absolut": [1, 9, 29, 30, 33, 50, 51, 57, 66, 76, 78, 82, 87, 102, 159, 186, 190, 191, 205, 207, 210, 215, 226, 248, 249, 250], "natur": [1, 2, 7, 12, 25, 29, 33, 34, 42, 51, 52, 56, 57, 85, 91, 113, 163, 165, 166, 182, 185, 186, 188, 190, 192, 195, 204, 208, 214, 215, 233, 249, 265, 270], "time": [1, 2, 5, 7, 8, 9, 11, 12, 15, 24, 28, 29, 33, 42, 43, 47, 51, 52, 56, 59, 74, 76, 81, 82, 87, 88, 90, 91, 92, 93, 97, 98, 100, 104, 108, 109, 112, 113, 115, 116, 119, 120, 122, 123, 124, 125, 126, 128, 129, 135, 145, 150, 158, 159, 163, 164, 166, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 188, 189, 190, 191, 192, 194, 195, 202, 203, 204, 205, 207, 211, 213, 215, 224, 226, 227, 232, 233, 234, 246, 248, 258, 260, 264, 265, 266], "sum": [1, 5, 7, 33, 40, 43, 50, 51, 54, 56, 59, 64, 66, 74, 76, 78, 80, 81, 82, 84, 87, 91, 110, 123, 140, 144, 147, 155, 158, 160, 161, 180, 182, 183, 185, 186, 190, 191, 192, 195, 197, 198, 200, 202, 204, 205, 207, 208, 211, 213, 214, 215, 216, 217, 219, 221, 230, 233, 251, 270], "meter": [1, 94, 95, 132, 135, 164, 166, 167, 168], "second": [1, 2, 5, 7, 8, 12, 15, 18, 24, 28, 31, 33, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 64, 65, 67, 78, 87, 91, 92, 94, 95, 98, 100, 101, 104, 105, 107, 108, 113, 116, 119, 121, 122, 124, 126, 132, 134, 135, 138, 142, 147, 150, 155, 156, 158, 159, 164, 166, 168, 170, 171, 172, 178, 179, 181, 184, 185, 188, 189, 190, 191, 195, 197, 205, 207, 208, 211, 213, 214, 215, 216, 217, 233, 234, 240, 242, 243, 244, 256, 259, 264, 265, 266], "si": [1, 18, 59, 75, 76, 134, 163, 164, 166, 167, 168, 195], "cg": [1, 140, 158], "At": [1, 7, 11, 18, 31, 47, 57, 59, 78, 91, 94, 95, 104, 166, 170, 179, 190, 205, 234], "aris": [1, 7, 8, 51, 56, 76, 78, 158, 179, 185, 190], "scale": [1, 60, 61, 62, 66, 67, 68, 79, 94, 141, 162, 164, 166, 168, 169, 175, 179, 181, 198, 215, 246, 248], "factor": [1, 2, 11, 34, 42, 43, 50, 51, 52, 55, 56, 57, 59, 76, 78, 87, 91, 94, 100, 128, 130, 138, 142, 145, 157, 161, 166, 167, 168, 182, 185, 186, 187, 189, 190, 191, 198, 204, 205, 207, 208, 213, 215, 219, 230, 243, 246, 264, 266], "while": [1, 2, 7, 12, 14, 18, 19, 22, 32, 33, 34, 42, 43, 44, 47, 50, 51, 52, 53, 55, 56, 61, 65, 67, 75, 81, 82, 87, 91, 92, 93, 94, 105, 109, 113, 116, 125, 145, 166, 171, 176, 182, 190, 193, 195, 211, 214, 226, 228, 230, 233, 248, 259, 265, 266], "kilomet": [1, 167, 168], "1000": [1, 2, 33, 35, 51, 52, 55, 84, 91, 128, 166, 167, 168, 180, 194, 195, 204], "rel": [1, 14, 15, 32, 33, 41, 42, 43, 44, 48, 49, 50, 52, 55, 62, 76, 91, 105, 107, 110, 117, 125, 126, 133, 160, 171, 174, 178, 179, 182, 184, 185, 188, 190, 203, 205, 210, 213, 215, 226, 233, 243, 244, 248, 264], "being": [1, 2, 7, 8, 12, 15, 29, 31, 33, 42, 43, 49, 50, 51, 52, 57, 59, 61, 63, 64, 67, 68, 76, 81, 82, 87, 88, 91, 94, 95, 104, 112, 113, 115, 125, 126, 128, 129, 157, 166, 173, 176, 178, 179, 180, 181, 182, 184, 185, 190, 191, 192, 195, 204, 205, 207, 208, 211, 212, 213, 214, 215, 221, 224, 230, 231, 233, 234, 236, 240, 244, 248, 264, 266], "manag": [1, 12, 20, 27, 28, 93, 141, 188, 207, 221, 224, 226, 231], "dimensionsystem": [1, 163], "14318": 1, "duplic": [1, 2, 42, 45, 52, 57, 59, 87, 91, 203, 211, 233, 263], "common": [1, 2, 3, 7, 8, 14, 15, 18, 21, 22, 23, 28, 31, 33, 42, 43, 51, 52, 57, 62, 65, 68, 78, 84, 86, 87, 91, 92, 98, 100, 105, 107, 109, 122, 126, 128, 133, 166, 171, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 197, 203, 204, 205, 206, 208, 211, 215, 227, 228, 231, 233, 234, 246, 248, 251, 254, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270], "flatten": [1, 32, 51, 185, 217, 222, 233, 234], "neither": [1, 7, 8, 29, 51, 135, 156, 181, 191, 202, 203, 204, 211, 221, 234, 240, 248, 270], "regardless": [1, 12, 14, 18, 43, 51, 78, 91, 188, 203, 207, 233, 243, 248, 270], "much": [1, 5, 7, 8, 12, 14, 18, 32, 33, 36, 47, 55, 59, 73, 76, 78, 125, 169, 170, 178, 179, 180, 182, 185, 188, 191, 202, 205, 207, 211, 212, 213, 214, 228, 230, 262, 264, 270], "less": [1, 5, 14, 15, 29, 33, 34, 42, 43, 50, 51, 52, 55, 56, 57, 59, 65, 66, 67, 82, 87, 91, 98, 100, 113, 115, 161, 185, 188, 190, 191, 204, 205, 207, 208, 211, 213, 214, 215, 226, 228], "polymorph": 1, "input": [1, 2, 14, 15, 18, 21, 25, 31, 34, 47, 51, 52, 54, 55, 56, 57, 65, 78, 80, 81, 87, 91, 93, 97, 98, 100, 104, 109, 112, 113, 115, 116, 125, 128, 129, 134, 157, 171, 173, 174, 185, 186, 188, 191, 192, 193, 194, 195, 196, 203, 207, 208, 209, 211, 213, 215, 217, 227, 228, 230, 231, 233, 234, 236, 259, 265, 266, 270], "17": [1, 14, 40, 42, 43, 51, 52, 55, 56, 57, 61, 64, 67, 76, 87, 91, 100, 185, 186, 190, 191, 194, 195, 202, 204, 208, 211, 216, 230, 234, 264], "As": [1, 4, 5, 8, 14, 18, 24, 33, 42, 43, 51, 52, 55, 56, 57, 59, 75, 76, 81, 87, 90, 91, 93, 112, 113, 115, 116, 125, 126, 161, 166, 178, 182, 183, 185, 186, 188, 192, 194, 195, 202, 203, 205, 211, 214, 215, 233, 234, 243, 244, 259, 260, 262, 264, 265, 266, 269, 270], "2d": [1, 11, 64, 65, 67, 77, 94, 95, 139, 171, 181, 195, 208, 220, 264], "3d": [1, 11, 25, 35, 64, 65, 94, 139, 162, 176, 181, 243, 245, 246, 247, 248], "anymor": [1, 181], "effect": [1, 11, 14, 18, 20, 42, 44, 51, 68, 76, 78, 82, 87, 94, 113, 115, 125, 133, 161, 171, 181, 185, 188, 192, 194, 211, 262], "temporarili": [1, 51], "substitut": [1, 2, 5, 8, 9, 33, 51, 52, 57, 59, 76, 78, 87, 92, 93, 100, 108, 109, 113, 115, 116, 125, 150, 159, 161, 164, 171, 173, 174, 192, 193, 196, 197, 202, 205, 207, 208, 211, 212, 213, 214, 234, 242, 261, 262], "term": [1, 2, 5, 7, 15, 18, 33, 42, 51, 52, 53, 55, 56, 57, 59, 70, 74, 75, 76, 78, 81, 82, 87, 91, 95, 98, 100, 106, 108, 115, 116, 119, 122, 123, 125, 126, 140, 145, 157, 158, 161, 163, 166, 171, 173, 176, 178, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 219, 220, 233, 240, 242, 246, 251, 260, 262, 264, 265, 270], "point3d": [1, 64, 65, 66, 134], "p1": [1, 34, 42, 43, 47, 50, 61, 63, 64, 65, 66, 67, 100, 105, 107, 116, 128, 130, 174, 181, 185, 186, 188, 192, 204, 215, 216], "p2": [1, 8, 42, 43, 50, 61, 63, 64, 65, 66, 67, 100, 105, 107, 128, 174, 181, 185, 186, 188, 192, 204, 215], "run": [2, 5, 7, 9, 12, 14, 15, 16, 18, 19, 34, 42, 43, 45, 51, 52, 76, 87, 92, 93, 108, 115, 128, 161, 175, 181, 182, 195, 205, 207, 211, 212, 213, 223, 227, 229, 230, 233, 234, 258, 262, 269], "under": [2, 7, 8, 9, 11, 12, 14, 19, 27, 28, 30, 31, 33, 34, 41, 42, 47, 49, 59, 69, 76, 78, 80, 87, 91, 93, 94, 95, 130, 156, 180, 182, 183, 190, 191, 195, 202, 203, 205, 208, 211, 213, 214, 215, 221, 224, 264, 270], "program": [2, 7, 11, 15, 33, 35, 43, 128, 166, 180, 228, 230, 262, 264, 268, 270], "languag": [2, 5, 11, 15, 18, 19, 33, 57, 87, 93, 104, 113, 128, 195, 200, 215, 227, 228, 262, 264, 266, 268, 270], "some": [2, 5, 7, 8, 9, 11, 12, 14, 18, 20, 24, 29, 32, 33, 34, 39, 42, 43, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 63, 67, 76, 78, 80, 81, 82, 84, 87, 91, 92, 93, 98, 101, 104, 105, 110, 112, 113, 114, 115, 116, 117, 122, 123, 125, 126, 129, 141, 146, 150, 158, 161, 166, 167, 170, 172, 176, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 197, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 240, 241, 242, 244, 246, 250, 259, 260, 262, 264, 265, 266, 268, 269, 270], "behav": [2, 29, 31, 51, 52, 57, 59, 91, 191, 203, 207, 213, 216, 222, 266], "independ": [2, 18, 29, 31, 33, 42, 50, 51, 53, 59, 68, 76, 78, 80, 87, 100, 108, 109, 113, 115, 116, 123, 125, 159, 166, 176, 181, 183, 185, 190, 191, 197, 198, 205, 207, 208, 211, 212, 213, 214, 215, 221, 226, 227, 246, 264, 265], "mapl": [2, 78, 211, 258, 264], "mathematica": [2, 33, 43, 93, 258, 264, 266], "encount": [2, 5, 15, 51, 78, 87, 153, 183, 188, 191, 213, 214, 228, 240, 266], "faq": 2, "tutori": [2, 5, 6, 9, 15, 20, 67, 113, 128, 183, 194, 195, 209, 211, 234, 262, 265, 267, 268, 269, 270, 271], "remaind": [2, 50, 51, 52, 91, 183, 185, 186, 189, 191, 211], "doc": [2, 11, 12, 14, 15, 16, 23, 33, 42, 50, 51, 67, 79, 126, 163, 185, 187, 208, 211, 226, 227, 229, 231, 233, 240, 244], "offici": [2, 9, 20, 51, 104, 128, 170, 179, 214, 234, 268], "familiar": [2, 18, 78, 113, 126, 145, 192, 260, 262, 268], "java": 2, "4": [2, 3, 5, 7, 8, 11, 15, 18, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 73, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 98, 100, 101, 102, 106, 113, 115, 116, 117, 119, 120, 121, 122, 125, 126, 128, 129, 130, 133, 137, 140, 145, 155, 156, 158, 159, 160, 161, 162, 164, 170, 171, 172, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 220, 221, 226, 227, 230, 233, 234, 240, 242, 243, 244, 246, 248, 249, 259, 260, 262, 264, 265, 266, 270, 271], "minut": [2, 104, 115, 170], "doctest": [2, 12, 14, 15, 18, 44, 59, 87, 91, 115, 150, 161, 185, 191, 211, 226, 229, 231, 269], "skip": [2, 9, 11, 12, 14, 32, 35, 51, 82, 87, 91, 171, 190, 194, 195, 197, 211, 213, 224, 226, 260, 268, 269], "test": [2, 6, 8, 12, 14, 15, 16, 18, 28, 29, 31, 32, 33, 38, 42, 43, 50, 51, 52, 58, 61, 66, 76, 82, 84, 87, 91, 141, 150, 154, 155, 156, 164, 179, 185, 186, 187, 188, 190, 192, 203, 205, 208, 211, 212, 213, 214, 224, 227, 228, 229, 230, 231, 233, 234, 236, 250, 253, 258, 262, 264, 265], "eq": [2, 7, 14, 18, 29, 31, 33, 57, 61, 64, 68, 76, 81, 164, 181, 182, 186, 191, 193, 195, 197, 201, 203, 204, 207, 208, 210, 211, 212, 213, 214, 215, 227, 228, 234, 240, 262, 264, 271], "assum": [2, 4, 7, 11, 14, 18, 28, 33, 34, 35, 40, 42, 50, 51, 52, 53, 57, 59, 61, 68, 69, 76, 78, 87, 91, 94, 100, 112, 113, 118, 123, 124, 125, 126, 128, 134, 156, 160, 161, 171, 174, 176, 182, 183, 185, 188, 191, 193, 195, 202, 203, 205, 207, 208, 211, 212, 214, 215, 219, 220, 221, 228, 233, 236, 242, 244, 248, 263, 265, 268, 270, 271], "zero": [2, 7, 8, 12, 18, 25, 28, 30, 33, 41, 42, 43, 47, 50, 54, 55, 56, 57, 59, 61, 65, 66, 67, 76, 78, 80, 81, 82, 84, 86, 87, 90, 91, 93, 94, 99, 100, 107, 110, 113, 115, 117, 120, 123, 124, 128, 133, 155, 159, 161, 163, 174, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 190, 191, 193, 195, 198, 202, 203, 205, 207, 208, 211, 212, 213, 214, 215, 216, 231, 233, 234, 243, 245, 246, 265, 271], "subtract": [2, 33, 43, 51, 55, 66, 91, 100, 107, 163, 183, 184, 185, 186, 188, 190, 191, 265, 270], "proper": [2, 42, 51, 78, 91, 104, 113, 170, 185, 186, 190, 195, 203, 211, 216, 227, 228, 246, 266], "abc": [2, 4, 12, 14, 18, 25, 26, 27, 28, 29, 30, 31, 33, 40, 42, 44, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 74, 75, 76, 78, 79, 81, 82, 84, 87, 90, 92, 98, 100, 102, 132, 134, 136, 137, 142, 159, 161, 162, 182, 184, 186, 188, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 227, 228, 229, 230, 231, 233, 234, 236, 240, 242, 243, 244, 249, 251, 262, 265, 269], "import": [2, 4, 5, 7, 8, 11, 12, 16, 18, 20, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 249, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271], "print": [2, 5, 7, 8, 10, 12, 14, 15, 20, 26, 27, 28, 29, 31, 32, 34, 35, 40, 42, 43, 50, 51, 52, 55, 56, 57, 59, 78, 80, 81, 84, 87, 88, 91, 92, 93, 95, 100, 108, 113, 115, 122, 127, 133, 141, 154, 155, 159, 161, 171, 177, 179, 181, 184, 185, 186, 190, 191, 201, 202, 204, 205, 207, 211, 213, 220, 222, 226, 228, 233, 234, 236, 238, 240, 243, 250, 252, 258, 260, 261, 262, 263, 264, 265, 266, 270], "1": [2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 140, 143, 144, 145, 146, 147, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 238, 240, 242, 243, 244, 246, 249, 256, 259, 260, 262, 264, 265, 266, 269, 270, 271], "2": [2, 3, 4, 5, 7, 8, 15, 18, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 115, 116, 117, 119, 120, 121, 123, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 147, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 217, 220, 221, 222, 224, 226, 227, 228, 229, 230, 233, 234, 236, 240, 241, 242, 243, 244, 245, 246, 248, 249, 259, 260, 262, 264, 265, 266, 269, 270, 271], "fals": [2, 7, 8, 15, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 76, 78, 79, 81, 82, 83, 84, 87, 88, 91, 93, 94, 95, 98, 100, 102, 103, 106, 108, 109, 110, 113, 115, 119, 120, 121, 123, 124, 125, 126, 129, 133, 145, 146, 150, 153, 158, 159, 160, 161, 164, 168, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 207, 208, 210, 211, 212, 213, 214, 215, 220, 221, 224, 226, 227, 228, 229, 233, 234, 236, 240, 242, 262, 265, 266, 269], "simplifi": [2, 5, 7, 8, 12, 14, 18, 26, 28, 30, 31, 50, 51, 53, 55, 56, 57, 59, 63, 68, 73, 76, 78, 81, 82, 83, 84, 87, 94, 100, 101, 106, 109, 116, 119, 120, 121, 125, 133, 140, 145, 160, 161, 168, 171, 176, 182, 190, 192, 194, 196, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 215, 229, 231, 234, 243, 245, 251, 252, 259, 261, 262, 264, 265, 266], "trigsimp": [2, 25, 51, 87, 107, 113, 120, 171, 204, 243], "equat": [2, 5, 15, 21, 31, 33, 47, 50, 51, 53, 57, 59, 61, 64, 65, 69, 73, 74, 75, 76, 79, 82, 87, 94, 100, 102, 104, 107, 108, 109, 112, 113, 115, 116, 117, 119, 121, 122, 127, 128, 129, 130, 134, 165, 170, 174, 175, 178, 179, 180, 181, 182, 187, 188, 189, 190, 193, 194, 195, 201, 205, 207, 209, 210, 212, 220, 240, 244, 245, 249, 260, 261, 264], "reduc": [2, 8, 15, 26, 28, 30, 34, 47, 51, 52, 54, 56, 57, 59, 66, 67, 76, 78, 87, 91, 100, 101, 125, 143, 161, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 201, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 233, 266], "0": [2, 5, 7, 8, 12, 14, 18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 105, 106, 107, 108, 110, 113, 115, 116, 117, 119, 121, 123, 124, 125, 126, 128, 129, 130, 133, 134, 135, 137, 140, 145, 146, 147, 150, 155, 156, 157, 158, 159, 160, 161, 162, 166, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 226, 227, 229, 230, 231, 233, 234, 235, 240, 241, 242, 243, 244, 245, 246, 249, 259, 260, 262, 264, 265, 266, 269, 270, 271], "co": [2, 14, 18, 22, 25, 31, 33, 50, 51, 53, 55, 56, 58, 59, 60, 61, 64, 65, 67, 69, 73, 74, 75, 76, 78, 82, 87, 91, 93, 105, 106, 107, 113, 115, 117, 119, 120, 121, 125, 128, 133, 135, 171, 173, 174, 176, 178, 179, 180, 181, 185, 188, 191, 192, 194, 195, 196, 197, 198, 202, 203, 204, 205, 207, 211, 213, 214, 215, 216, 222, 234, 240, 241, 242, 243, 244, 249, 259, 260, 262, 264, 270, 271], "sai": [2, 5, 7, 12, 15, 34, 41, 50, 51, 52, 80, 104, 108, 113, 122, 128, 166, 178, 179, 182, 183, 184, 188, 190, 194, 195, 202, 205, 208, 211, 213, 214, 215, 234, 250, 259, 264, 270], "unequ": [2, 94, 195], "rememb": [2, 12, 14, 18, 81, 87, 101, 104, 128, 178, 179, 195, 207, 213, 216, 234, 265, 270], "fill": [2, 6, 42, 52, 82, 84, 87, 90, 161, 181, 226, 229, 233, 236, 266], "alter": [2, 34, 42, 51, 171, 185, 195, 197, 214], "afterward": [2, 33, 51, 110, 116], "liter": [2, 14, 18, 33, 41, 51, 79, 81, 93, 161, 168, 207], "still": [2, 7, 11, 12, 14, 15, 18, 20, 24, 32, 43, 50, 51, 52, 59, 63, 78, 82, 87, 113, 161, 179, 181, 182, 183, 188, 190, 195, 202, 204, 205, 207, 211, 213, 214, 220, 226, 233, 246, 266], "quantiti": [2, 43, 51, 56, 59, 63, 68, 95, 104, 108, 120, 126, 140, 163, 165, 169, 176, 178, 179, 190, 207, 215, 243, 247, 248, 256], "set": [2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 24, 27, 28, 31, 32, 33, 34, 39, 40, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 66, 68, 69, 70, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 100, 104, 108, 112, 113, 115, 116, 121, 123, 124, 125, 128, 129, 145, 151, 156, 161, 163, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 188, 190, 191, 194, 195, 196, 197, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 219, 220, 221, 224, 226, 227, 228, 229, 233, 234, 240, 242, 244, 250, 253, 259, 261, 270], "simultan": [2, 51, 64, 82, 91, 181, 204], "string": [2, 11, 12, 14, 15, 18, 21, 26, 32, 33, 35, 40, 51, 52, 53, 54, 55, 58, 64, 74, 79, 80, 81, 84, 87, 91, 93, 94, 98, 104, 105, 107, 110, 132, 141, 145, 155, 159, 163, 169, 170, 171, 174, 175, 176, 181, 184, 186, 190, 195, 196, 202, 207, 211, 215, 216, 219, 220, 221, 226, 227, 228, 233, 234, 236, 238, 240, 241, 243, 261, 262, 265, 269], "refer": [2, 5, 8, 11, 12, 13, 15, 18, 20, 21, 27, 28, 29, 31, 33, 35, 37, 39, 40, 42, 43, 44, 45, 49, 52, 54, 56, 57, 59, 61, 66, 67, 68, 71, 73, 77, 79, 80, 81, 86, 88, 92, 94, 98, 100, 101, 103, 105, 107, 108, 110, 112, 113, 115, 122, 123, 126, 128, 129, 130, 131, 132, 134, 138, 140, 142, 143, 144, 147, 149, 150, 158, 159, 161, 165, 170, 171, 172, 173, 174, 176, 178, 185, 187, 192, 195, 197, 198, 200, 203, 206, 207, 209, 211, 212, 213, 215, 221, 230, 232, 233, 234, 236, 240, 243, 244, 248, 251, 254, 255, 256, 257, 258, 262, 266, 267, 270], "object": [2, 3, 6, 7, 8, 11, 12, 14, 15, 18, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 50, 51, 53, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 76, 78, 81, 82, 84, 85, 87, 92, 93, 94, 95, 98, 100, 101, 104, 105, 108, 109, 110, 112, 113, 116, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 135, 136, 144, 145, 147, 155, 156, 160, 161, 163, 164, 167, 168, 170, 171, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 195, 197, 198, 201, 202, 203, 204, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 226, 227, 228, 229, 230, 233, 234, 237, 238, 242, 243, 244, 249, 250, 259, 260, 262, 264, 265, 266, 269, 270], "var": [2, 31, 33, 50, 55, 56, 74, 78, 81, 87, 100, 171, 181, 190, 194, 195, 207, 208, 234, 271], "rate": [2, 115, 178, 215, 246, 260], "short_lif": 2, "80": [2, 9, 12, 14, 18, 31, 42, 51, 54, 78, 87, 91, 94, 95, 98, 191, 194, 211, 215, 231, 233], "haven": 2, "160": [2, 94, 189], "need": [2, 4, 5, 7, 8, 9, 11, 12, 14, 15, 18, 20, 22, 24, 25, 27, 28, 31, 32, 33, 36, 42, 43, 47, 49, 50, 51, 52, 53, 57, 59, 62, 66, 67, 74, 75, 76, 78, 79, 82, 87, 91, 92, 93, 95, 100, 104, 108, 110, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 129, 130, 141, 145, 153, 159, 164, 165, 170, 171, 175, 178, 179, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 202, 203, 205, 207, 208, 210, 211, 213, 214, 215, 219, 220, 221, 222, 224, 227, 228, 229, 230, 231, 233, 236, 240, 243, 245, 246, 249, 259, 260, 262, 265, 266, 268, 270], "indent": [2, 14, 236], "bodi": [2, 33, 76, 93, 103, 104, 107, 108, 110, 112, 113, 115, 116, 117, 119, 122, 123, 128, 129, 164, 170, 171, 174, 178, 179, 240, 241, 247], "inform": [2, 4, 7, 8, 9, 11, 12, 14, 15, 28, 29, 32, 33, 34, 37, 42, 43, 49, 51, 52, 56, 59, 63, 76, 78, 80, 84, 87, 92, 95, 105, 106, 108, 112, 113, 115, 122, 123, 125, 126, 128, 129, 156, 161, 166, 170, 171, 175, 179, 181, 185, 190, 191, 195, 196, 202, 205, 207, 208, 209, 213, 214, 215, 219, 220, 221, 226, 227, 228, 229, 230, 240, 244, 246, 270], "ctimesd": 2, "circular": [2, 7, 98, 133, 188], "relationship": [2, 7, 33, 51, 56, 58, 78, 91, 145, 171, 176, 179, 185, 213], "runtimeerror": [2, 31, 203, 214, 233], "call": [2, 4, 5, 7, 8, 11, 12, 14, 15, 18, 22, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 40, 41, 42, 43, 49, 51, 52, 54, 55, 56, 58, 59, 61, 66, 67, 69, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 100, 104, 113, 115, 116, 125, 126, 151, 153, 156, 161, 166, 171, 176, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 197, 202, 203, 205, 207, 208, 210, 211, 213, 214, 215, 217, 219, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 240, 242, 243, 246, 248, 260, 262, 264, 265, 266, 269, 270, 271], "compileflag": [2, 226], "glob": [2, 226], "recurs": [2, 4, 7, 18, 31, 51, 56, 76, 78, 81, 82, 91, 115, 181, 188, 191, 192, 195, 196, 199, 200, 202, 207, 213, 214, 219, 224, 226, 230, 231, 233, 261, 270], "depth": [2, 3, 14, 15, 17, 42, 51, 115, 181, 182, 195, 257], "exceed": [2, 115], "yet": [2, 7, 12, 13, 18, 26, 28, 31, 32, 55, 56, 78, 125, 141, 182, 185, 186, 190, 192, 194, 203, 211, 214, 260], "stdin": [2, 229, 231], "nameerror": [2, 79, 229, 262], "isympi": [2, 10, 11, 79], "command": [2, 9, 11, 13, 14, 20, 33, 55, 79, 113, 123, 128, 175, 181, 195, 226, 227, 269], "give": [2, 7, 8, 11, 12, 14, 18, 26, 28, 33, 34, 40, 42, 43, 44, 45, 50, 51, 52, 53, 56, 57, 59, 61, 63, 64, 66, 67, 75, 76, 78, 79, 81, 84, 87, 90, 91, 92, 94, 100, 113, 128, 140, 155, 156, 158, 159, 163, 164, 166, 167, 169, 171, 174, 176, 178, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 192, 195, 196, 197, 198, 202, 203, 204, 205, 207, 208, 211, 213, 214, 215, 226, 227, 228, 233, 243, 248, 262, 263, 265, 270, 271], "default": [2, 7, 11, 12, 14, 15, 18, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 41, 42, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 73, 78, 79, 81, 82, 84, 87, 88, 91, 92, 93, 94, 95, 98, 100, 102, 104, 105, 106, 107, 108, 109, 113, 125, 134, 151, 153, 156, 158, 159, 161, 167, 170, 171, 173, 174, 175, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 202, 203, 204, 207, 208, 211, 212, 213, 214, 215, 220, 221, 226, 227, 228, 230, 231, 233, 234, 236, 240, 259, 260, 264, 266, 269, 270], "__future__": [2, 5, 262, 269], "divis": [2, 18, 51, 87, 91, 163, 182, 185, 186, 187, 188, 191, 193, 195, 211, 213, 226, 234, 262, 265, 269], "cl": [2, 7, 18, 33, 42, 51, 78, 82, 161, 174, 186, 190, 211, 220, 229, 233, 245, 260, 269, 271], "dir": [2, 51, 94, 197, 202, 233], "u": [2, 25, 31, 32, 42, 50, 51, 52, 54, 65, 68, 73, 76, 78, 84, 87, 91, 107, 108, 109, 112, 113, 115, 116, 119, 123, 125, 126, 128, 129, 134, 145, 150, 174, 176, 178, 181, 183, 184, 188, 190, 195, 205, 207, 208, 211, 212, 213, 214, 215, 220, 246], "__builtins__": 2, "__doc__": [2, 14], "__file__": [2, 237], "__name__": [2, 195, 237], "__package__": 2, "_greek": 2, "_latin": 2, "alpha": [2, 15, 42, 51, 59, 78, 80, 133, 137, 140, 158, 174, 178, 179, 180, 186, 188, 190, 191, 194, 195, 207, 211, 215], "beta": [2, 14, 33, 42, 51, 58, 78, 158, 171, 180, 190, 192, 195, 211, 215], "chi": [2, 59, 76, 133, 195, 205, 215, 221], "eta": [2, 59, 76, 190, 195, 211, 212, 215], "gamma": [2, 14, 15, 18, 50, 51, 53, 55, 56, 58, 76, 78, 103, 128, 158, 179, 180, 195, 205, 207, 211, 215, 256, 270], "iota": [2, 195], "kappa": [2, 195, 215], "mu": [2, 59, 76, 91, 101, 103, 132, 195, 215, 221], "nu": [2, 15, 59, 78, 91, 162, 183, 195, 207, 215, 221, 264], "omega": [2, 33, 34, 42, 76, 91, 105, 110, 112, 126, 129, 135, 137, 162, 171, 174, 175, 178, 180, 195, 202, 215], "omicron": [2, 195], "phi": [2, 42, 51, 52, 56, 59, 76, 80, 87, 91, 102, 128, 135, 144, 146, 180, 182, 190, 195, 211, 240, 249], "psi": [2, 59, 76, 133, 144, 145, 151, 159, 190, 195, 221], "rho": [2, 53, 76, 87, 91, 155, 195, 215, 221, 249], "sigma": [2, 43, 74, 76, 82, 87, 195, 198, 215], "tau": [2, 33, 76, 78, 87, 190, 195, 211], "theta": [2, 51, 53, 57, 59, 76, 79, 87, 93, 102, 112, 129, 133, 171, 179, 180, 186, 190, 195, 198, 203, 214, 215, 240, 241, 244, 246, 249], "upsilon": [2, 195], "xi": [2, 18, 53, 76, 195, 211, 212, 213], "zeta": [2, 50, 51, 55, 56, 58, 186, 190, 195, 202, 215], "assumpt": [2, 6, 8, 14, 21, 26, 27, 29, 30, 32, 33, 42, 43, 45, 50, 53, 55, 57, 58, 78, 81, 82, 87, 88, 100, 104, 128, 168, 173, 184, 195, 203, 204, 207, 211, 213, 214, 220, 228, 233, 250, 251, 270], "lastli": [2, 78, 95, 129, 211], "those": [2, 7, 8, 11, 14, 24, 29, 32, 33, 34, 42, 43, 49, 50, 51, 52, 55, 64, 65, 76, 78, 81, 87, 90, 91, 104, 115, 120, 134, 158, 170, 173, 175, 178, 179, 181, 185, 186, 188, 190, 191, 193, 194, 195, 201, 203, 207, 211, 212, 213, 214, 215, 221, 224, 226, 230, 233, 240, 242, 262, 264, 270], "imaginari": [2, 7, 12, 14, 18, 25, 28, 30, 51, 55, 57, 59, 82, 128, 185, 186, 191, 195, 196, 203, 207, 214], "unit": [2, 18, 25, 28, 32, 51, 52, 56, 64, 65, 66, 78, 87, 91, 94, 98, 100, 102, 103, 113, 126, 128, 137, 162, 163, 164, 168, 170, 171, 176, 179, 181, 183, 186, 188, 190, 191, 193, 195, 203, 205, 208, 214, 216, 240, 241, 243, 248, 249, 256], "base": [2, 7, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 27, 28, 31, 33, 34, 40, 41, 42, 47, 48, 49, 51, 52, 54, 56, 57, 58, 59, 62, 64, 67, 74, 78, 79, 80, 81, 83, 84, 87, 91, 92, 97, 105, 107, 113, 115, 128, 129, 130, 139, 141, 145, 146, 150, 156, 157, 159, 161, 163, 166, 167, 169, 171, 173, 175, 176, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 195, 197, 199, 202, 203, 204, 205, 207, 208, 209, 211, 213, 215, 219, 220, 221, 226, 227, 228, 229, 230, 231, 233, 234, 235, 240, 242, 243, 246, 257, 265, 270], "logarithm": [2, 15, 25, 31, 33, 51, 52, 57, 58, 76, 78, 87, 91, 186, 188, 192, 195, 205, 207, 214, 215, 261], "sympifi": [2, 7, 8, 33, 55, 61, 81, 126, 134, 159, 161, 171, 172, 185, 186, 251, 259, 265], "evalf": [2, 7, 11, 14, 33, 50, 55, 56, 57, 59, 70, 73, 74, 82, 87, 93, 113, 115, 128, 143, 186, 191, 202, 203, 207, 215, 227, 234, 251, 261], "log": [2, 14, 15, 18, 20, 25, 31, 33, 42, 50, 51, 55, 56, 58, 59, 69, 73, 75, 76, 78, 82, 87, 91, 181, 186, 195, 197, 202, 205, 207, 211, 214, 215, 222, 260, 270, 271], "hold": [2, 18, 28, 32, 42, 47, 51, 52, 53, 57, 59, 73, 76, 87, 90, 93, 100, 102, 107, 109, 110, 126, 157, 191, 205, 207, 211, 215, 228, 270], "ask": [2, 4, 7, 8, 11, 14, 27, 28, 29, 30, 51, 63, 76, 113, 166, 182, 201, 207, 214, 233, 262], "mnemon": [2, 204, 233], "osineq": 2, "Or": [2, 8, 9, 15, 42, 51, 52, 53, 59, 76, 81, 91, 110, 182, 192, 194, 195, 207, 214, 215, 226, 234, 246, 265, 268], "lowercas": [2, 211, 226, 260], "letter": [2, 15, 24, 44, 51, 52, 91, 161, 195, 233, 260, 262], "prevent": [2, 12, 33, 51, 88, 91, 104, 184, 186, 191, 195, 207, 215, 224, 231, 261], "overrid": [2, 33, 51, 60, 61, 67, 93, 159, 195, 220, 227, 228, 233, 234], "care": [2, 8, 18, 42, 51, 59, 78, 87, 94, 104, 113, 125, 171, 179, 185, 190, 207, 208, 211, 213, 214, 219, 222, 227, 259, 262, 264], "notic": [2, 18, 42, 43, 49, 51, 87, 149, 170, 185, 205, 221, 222, 233, 234, 262, 264, 265, 270], "warn": [2, 3, 12, 14, 18, 51, 52, 66, 93, 171, 179, 183, 211, 213, 224, 226, 228, 232, 233, 258, 266], "No": [2, 11, 14, 15, 32, 51, 59, 66, 81, 91, 101, 113, 156, 181, 191, 197, 198, 207, 208, 213, 214, 215, 220, 224, 230, 231, 233, 259, 271], "5": [2, 3, 7, 15, 18, 22, 25, 27, 28, 29, 31, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 98, 100, 102, 103, 105, 110, 113, 115, 119, 120, 121, 122, 123, 130, 134, 155, 156, 159, 161, 168, 170, 172, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 220, 221, 226, 227, 233, 234, 240, 242, 244, 246, 248, 249, 259, 260, 262, 265, 266, 269, 270], "15": [2, 14, 18, 31, 37, 40, 42, 47, 49, 51, 52, 54, 55, 56, 59, 61, 64, 65, 67, 68, 76, 78, 81, 82, 83, 87, 88, 91, 94, 134, 180, 181, 183, 184, 185, 186, 190, 191, 192, 194, 195, 197, 201, 202, 204, 207, 208, 212, 213, 214, 215, 216, 233, 259, 260, 265, 266], "reimport": 2, "restor": [2, 185, 207], "everyth": [2, 12, 15, 18, 33, 51, 53, 59, 78, 85, 102, 125, 157, 158, 181, 195, 265, 269], "__": [2, 59, 78, 195, 215, 220], "instal": [2, 11, 13, 15, 19, 21, 23, 55, 92, 185, 186, 195, 227, 234, 258, 263, 269], "press": [2, 32, 34, 35, 43, 52, 78, 82, 180, 189, 208, 213], "tab": [2, 9, 47, 128], "autocomplet": 2, "complet": [2, 7, 11, 12, 14, 21, 23, 28, 33, 51, 52, 53, 55, 57, 58, 59, 67, 76, 78, 87, 91, 104, 108, 109, 116, 122, 128, 147, 150, 151, 179, 188, 191, 192, 196, 202, 207, 208, 211, 214, 215, 226, 228, 236, 264, 265, 270], "consol": [2, 11, 12, 51, 79, 175, 181, 269], "best": [2, 12, 16, 20, 33, 51, 59, 76, 78, 92, 160, 181, 192, 195, 204, 205, 207, 211, 214, 219, 227, 262, 263, 269, 270], "lose": [2, 182], "abil": [2, 7, 31, 87, 122, 190, 194, 211, 214, 264, 270], "past": [2, 57, 91, 194, 195, 269], "callabl": [2, 11, 33, 42, 87, 93, 146, 190, 195, 196, 207, 224, 227, 228, 233, 234, 235], "f1": [2, 42, 76, 78, 87, 100, 105, 113, 120, 128, 181, 186, 188, 191, 195, 197, 213], "f2": [2, 51, 76, 87, 100, 105, 113, 120, 128, 164, 181, 188, 191, 195, 197, 213], "own": [2, 11, 13, 14, 18, 27, 35, 42, 43, 51, 67, 95, 113, 128, 190, 195, 202, 207, 211, 230, 233, 234, 264], "ensur": [2, 12, 18, 20, 51, 52, 55, 83, 87, 126, 190, 191, 195, 209, 226, 231, 234], "6": [2, 3, 5, 25, 27, 28, 31, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 73, 74, 76, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 98, 100, 101, 102, 115, 119, 120, 121, 130, 134, 140, 158, 170, 171, 179, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 197, 200, 201, 202, 203, 204, 207, 208, 212, 213, 214, 215, 216, 226, 227, 230, 233, 234, 240, 242, 244, 249, 260, 266, 270, 271], "accuraci": [2, 5, 31, 51, 191, 251, 266], "2000000000000002": 2, "py3k": 2, "precis": [2, 7, 8, 11, 12, 14, 18, 33, 42, 51, 54, 55, 56, 59, 67, 78, 87, 91, 98, 126, 180, 182, 185, 186, 190, 191, 192, 195, 202, 207, 208, 213, 214, 227, 228, 236, 259, 270], "20000000000000": 2, "core": [2, 4, 7, 8, 11, 12, 13, 14, 18, 21, 23, 29, 31, 33, 42, 52, 57, 58, 60, 68, 82, 86, 91, 93, 159, 160, 183, 185, 186, 187, 188, 190, 191, 192, 195, 202, 203, 207, 208, 211, 215, 225, 226, 227, 233, 234, 238, 250, 251, 262, 265], "awar": [2, 8, 11, 12, 14, 31, 51, 55, 81, 87, 205, 215, 234], "chanc": [2, 8, 12, 51, 79, 205, 215, 265], "sympyifi": 2, "With": [2, 8, 12, 20, 33, 50, 51, 55, 76, 91, 116, 117, 124, 125, 134, 158, 161, 179, 181, 182, 183, 185, 186, 193, 194, 195, 202, 207, 213, 216, 233, 264, 265], "shorthand": [2, 7, 18, 51, 81, 155, 190, 203, 224], "worri": [2, 51, 265], "mistak": [2, 15, 42, 234], "reus": [2, 18, 33, 161, 264], "obtain": [2, 5, 15, 27, 28, 32, 34, 35, 42, 43, 44, 47, 51, 52, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 73, 76, 78, 80, 82, 87, 90, 91, 97, 100, 122, 124, 126, 134, 156, 161, 166, 182, 183, 186, 188, 190, 191, 194, 196, 203, 204, 205, 207, 208, 211, 212, 213, 214, 233, 236, 243, 244], "7": [2, 3, 7, 11, 14, 18, 22, 25, 27, 28, 31, 33, 35, 37, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 66, 67, 73, 76, 78, 81, 82, 84, 85, 87, 91, 93, 94, 96, 98, 100, 115, 121, 123, 124, 128, 161, 166, 168, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 197, 198, 201, 202, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 216, 220, 221, 226, 227, 230, 233, 234, 240, 249, 260, 265, 266, 269], "22": [2, 14, 42, 51, 54, 55, 56, 59, 87, 91, 94, 95, 126, 189, 194, 207, 208, 213, 215], "142857142857143": 2, "One": [2, 4, 7, 18, 31, 32, 33, 41, 43, 50, 56, 57, 59, 70, 73, 75, 76, 78, 81, 87, 91, 94, 95, 113, 126, 128, 137, 166, 186, 188, 189, 191, 194, 197, 203, 207, 213, 214, 215, 216, 221, 234, 246, 259, 260, 262, 265, 266, 270], "again": [2, 5, 8, 9, 12, 43, 51, 66, 91, 113, 115, 126, 156, 157, 171, 178, 182, 183, 190, 198, 205, 211, 224, 243, 262, 270], "quot": [2, 14, 33, 81, 195, 236], "achiev": [2, 18, 51, 55, 59, 84, 91, 113, 128, 194, 202, 205, 207, 214, 229, 244], "receiv": [2, 51, 52, 91, 105, 156, 190, 220], "fraction": [2, 51, 52, 55, 57, 67, 78, 87, 91, 106, 167, 185, 186, 187, 188, 189, 192, 195, 197, 208, 211, 213, 261], "invalid": [2, 15, 51, 52, 93, 115, 185, 188, 203], "keep": [2, 4, 12, 14, 18, 19, 47, 51, 52, 55, 56, 59, 76, 87, 108, 126, 145, 161, 181, 184, 185, 186, 191, 202, 203, 205, 207, 211, 213, 221, 248, 260, 265], "digit": [2, 14, 33, 51, 52, 54, 55, 61, 78, 81, 91, 122, 171, 185, 191, 202, 207, 233, 259], "calcul": [2, 5, 7, 11, 25, 31, 34, 43, 49, 51, 52, 53, 54, 55, 57, 59, 61, 63, 64, 65, 67, 68, 78, 82, 84, 87, 91, 94, 95, 102, 104, 105, 108, 112, 115, 116, 130, 133, 134, 137, 140, 156, 157, 158, 159, 161, 162, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 185, 186, 188, 190, 191, 192, 197, 202, 211, 215, 219, 227, 228, 234, 240, 242, 246, 247, 248, 266, 269], "signific": [2, 7, 12, 33, 51, 52, 55, 78, 87, 104, 126, 155, 185, 214, 234, 265], "first": [2, 5, 7, 8, 9, 11, 13, 14, 15, 16, 18, 20, 32, 33, 34, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 75, 76, 78, 80, 81, 82, 87, 90, 91, 94, 95, 100, 101, 106, 107, 108, 112, 113, 115, 116, 117, 122, 125, 126, 129, 133, 134, 138, 142, 145, 150, 151, 154, 155, 156, 157, 158, 160, 161, 164, 166, 171, 174, 178, 179, 181, 182, 184, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198, 201, 202, 204, 205, 207, 208, 211, 212, 213, 214, 215, 219, 221, 224, 226, 227, 228, 229, 233, 234, 236, 244, 249, 259, 260, 262, 264, 265, 266, 268, 270, 271], "mind": [2, 4, 7, 14, 51, 87, 126, 181, 202, 203, 248, 265], "indic": [2, 4, 7, 12, 14, 31, 32, 33, 34, 35, 40, 42, 43, 44, 46, 47, 49, 50, 51, 54, 55, 56, 59, 61, 66, 67, 76, 78, 81, 82, 84, 87, 90, 91, 101, 112, 116, 145, 156, 158, 159, 161, 166, 170, 171, 180, 184, 185, 186, 190, 191, 192, 195, 202, 203, 204, 206, 207, 208, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 233, 266], "appear": [2, 14, 15, 32, 33, 35, 40, 42, 51, 52, 56, 57, 60, 61, 64, 67, 70, 74, 76, 78, 82, 87, 91, 93, 113, 116, 145, 161, 163, 166, 181, 183, 185, 188, 190, 191, 195, 204, 207, 211, 212, 213, 215, 219, 221, 226, 233, 234, 240, 244], "interpret": [2, 8, 21, 33, 42, 50, 51, 56, 59, 64, 67, 78, 82, 84, 87, 91, 93, 104, 166, 181, 183, 190, 191, 195, 202, 208, 213, 214, 215, 220, 226, 227, 230, 236, 266], "exact": [2, 7, 12, 18, 29, 50, 51, 52, 55, 61, 66, 73, 76, 78, 82, 87, 94, 128, 155, 185, 186, 188, 191, 202, 207, 211, 213, 226, 236, 262, 264, 269], "100": [2, 18, 33, 35, 40, 50, 51, 52, 55, 59, 67, 74, 81, 82, 87, 91, 94, 181, 185, 190, 192, 194, 195, 202, 213, 214, 233, 259], "000000000000": 2, "00": [2, 51, 91, 145, 155, 208, 233], "null": [2, 51, 87], "12": [2, 14, 18, 25, 31, 32, 33, 37, 39, 40, 42, 43, 44, 47, 49, 50, 51, 52, 54, 56, 57, 59, 61, 64, 65, 67, 76, 78, 82, 87, 88, 91, 94, 95, 98, 100, 102, 115, 126, 158, 171, 180, 183, 184, 185, 188, 190, 191, 192, 194, 195, 201, 203, 204, 208, 210, 211, 215, 216, 227, 230, 233, 242, 266, 270], "34": [2, 33, 43, 56, 64, 87, 91, 143, 189, 194, 201, 207, 208], "3400000000000": 2, "25": [2, 14, 42, 43, 52, 54, 56, 59, 61, 64, 66, 83, 87, 90, 91, 94, 95, 100, 110, 174, 180, 188, 190, 191, 194, 195, 201, 202, 204, 208, 210, 211, 212, 215, 227], "250": [2, 91, 208], "143": [2, 140, 180], "next": [2, 5, 7, 18, 24, 33, 34, 35, 40, 42, 43, 45, 46, 51, 52, 57, 76, 78, 81, 87, 91, 104, 105, 108, 116, 117, 119, 121, 122, 129, 178, 179, 182, 186, 190, 191, 195, 203, 205, 208, 211, 230, 231, 233, 263, 264, 265], "20": [2, 14, 29, 33, 40, 42, 43, 50, 51, 52, 55, 56, 59, 67, 68, 78, 87, 91, 94, 95, 100, 110, 166, 168, 181, 185, 189, 190, 191, 192, 194, 195, 201, 202, 203, 204, 207, 208, 211, 214, 215, 240, 260], "appar": [2, 51, 236, 270], "non": [2, 7, 11, 12, 18, 24, 29, 31, 34, 41, 44, 50, 51, 52, 56, 57, 58, 59, 60, 61, 64, 65, 66, 78, 80, 81, 82, 83, 84, 87, 88, 90, 104, 108, 110, 115, 116, 120, 123, 124, 128, 145, 150, 160, 161, 163, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 198, 202, 203, 205, 207, 208, 210, 211, 213, 214, 215, 216, 219, 220, 221, 226, 228, 233, 236, 246, 265, 270, 271], "repeat": [2, 9, 42, 45, 50, 51, 57, 59, 78, 80, 82, 87, 91, 93, 145, 147, 161, 181, 182, 183, 188, 190, 191, 195, 201, 211, 215, 219, 220, 227, 229, 233, 270], "binari": [2, 8, 18, 29, 33, 35, 46, 51, 52, 78, 81, 91, 92, 155, 167, 182, 185, 191, 208, 227, 230, 233], "decim": [2, 18, 33, 51, 54, 55, 91, 93, 98, 185, 191, 264], "accur": [2, 5, 12, 18, 31, 42, 51, 55, 56, 73, 78, 97, 181, 202, 259, 266], "too": [2, 14, 18, 42, 43, 51, 57, 59, 61, 64, 66, 76, 81, 90, 91, 92, 123, 130, 202, 203, 207, 208, 211, 213, 214, 215, 226, 227, 242, 243], "far": [2, 32, 51, 65, 78, 182, 185, 195, 205, 234, 259, 260, 262], "142857": 2, "25000000000000000000": 2, "14285278320312500000": 2, "realiz": [2, 36, 42, 53, 81, 91, 116, 182, 183, 188, 215], "displai": [2, 7, 8, 14, 15, 51, 52, 55, 76, 80, 94, 95, 98, 132, 165, 171, 174, 175, 181, 185, 186, 195, 203, 219, 226], "onc": [2, 7, 8, 9, 12, 18, 33, 35, 42, 47, 51, 52, 56, 59, 67, 76, 78, 92, 95, 106, 107, 122, 125, 166, 171, 173, 179, 181, 183, 185, 191, 195, 196, 204, 205, 207, 211, 214, 221, 233, 243, 259, 260, 270, 271], "subsequ": [2, 14, 51, 57, 171, 186, 188, 191, 230, 233, 243, 246], "pad": [2, 33, 52, 53, 54, 66, 91], "inexact": [2, 51, 186], "low": [2, 7, 8, 33, 51, 52, 59, 91, 185, 188, 193, 195, 207, 227, 228, 233], "higher": [2, 5, 31, 33, 51, 53, 55, 59, 62, 87, 174, 180, 182, 185, 188, 191, 197, 198, 202, 204, 207, 211, 213, 216, 234, 260], "engin": [2, 127, 128, 177, 211, 269], "increas": [2, 31, 32, 43, 49, 50, 51, 54, 55, 59, 82, 91, 92, 104, 114, 145, 170, 171, 173, 178, 179, 185, 188, 190, 191, 197, 200, 204, 211, 215, 231, 233], "2000061035": 2, "maintain": [2, 51, 52, 91, 95, 195, 203, 204, 211, 214, 230], "highest": [2, 33, 45, 80, 104, 182, 191, 198, 208, 211], "simpl": [2, 5, 7, 14, 18, 19, 20, 32, 33, 42, 50, 51, 55, 59, 63, 67, 69, 76, 78, 80, 87, 91, 92, 94, 95, 100, 101, 104, 107, 108, 110, 112, 115, 116, 117, 119, 121, 122, 125, 129, 135, 149, 150, 158, 159, 160, 171, 178, 179, 185, 186, 187, 191, 192, 195, 197, 202, 204, 205, 207, 208, 211, 214, 221, 227, 228, 233, 237, 239, 240, 241, 242, 246, 259, 262, 265, 266, 270], "hopefulli": [2, 6, 76], "understand": [2, 7, 8, 14, 18, 51, 52, 76, 113, 122, 123, 124, 128, 166, 178, 181, 184, 185, 190, 205, 208, 227, 234, 261, 262, 269, 270], "complic": [2, 7, 14, 18, 33, 42, 50, 52, 53, 55, 56, 57, 59, 76, 78, 84, 122, 123, 161, 179, 185, 188, 192, 194, 205, 207, 214, 215, 219, 220, 228, 230, 234, 236, 260, 262, 265, 266], "even": [2, 4, 7, 12, 14, 15, 18, 26, 27, 28, 30, 33, 34, 39, 42, 43, 50, 51, 52, 55, 56, 57, 59, 63, 67, 76, 78, 81, 82, 87, 90, 91, 101, 113, 122, 146, 157, 164, 166, 171, 180, 183, 184, 185, 186, 188, 190, 191, 192, 195, 196, 202, 203, 204, 205, 207, 208, 211, 213, 214, 222, 226, 248, 259, 260, 262, 264, 265, 270, 271], "though": [2, 7, 8, 14, 18, 24, 34, 51, 52, 53, 63, 67, 76, 78, 82, 87, 91, 104, 108, 115, 123, 125, 156, 170, 171, 178, 179, 183, 185, 186, 191, 192, 204, 205, 207, 211, 212, 213, 214, 226, 246, 260, 265, 270], "simplif": [2, 7, 11, 26, 28, 30, 31, 33, 51, 53, 56, 57, 76, 82, 87, 93, 106, 113, 125, 128, 145, 161, 171, 191, 196, 206, 211, 213, 214, 250, 251, 253, 259, 261, 263, 264], "unsimplifi": [2, 204], "ident": [2, 12, 18, 29, 32, 34, 41, 42, 43, 49, 51, 52, 56, 57, 67, 74, 80, 82, 84, 87, 101, 103, 126, 145, 147, 150, 166, 182, 183, 184, 188, 189, 190, 191, 195, 204, 207, 211, 214, 219, 221, 226, 233, 234, 236, 244, 262, 266, 270], "12345678901234567890": 2, "big_trig_ident": 2, "ab": [2, 30, 33, 34, 50, 51, 52, 55, 56, 58, 59, 63, 74, 76, 81, 82, 87, 102, 128, 161, 183, 186, 190, 191, 195, 208, 210, 213, 214, 215, 221, 230, 233, 236, 245, 270], "gave": [2, 51, 233], "larg": [2, 7, 11, 12, 14, 42, 43, 51, 52, 61, 76, 78, 90, 91, 104, 109, 125, 128, 141, 166, 170, 180, 185, 186, 188, 191, 194, 195, 196, 202, 205, 207, 215, 220, 227, 234, 236, 242, 259, 264, 270], "approxim": [2, 3, 6, 14, 31, 42, 50, 51, 52, 55, 59, 61, 67, 76, 78, 87, 91, 95, 97, 130, 164, 181, 185, 186, 191, 198, 202, 205, 215, 252, 260, 264], "three": [2, 5, 7, 12, 18, 21, 25, 29, 33, 42, 43, 44, 47, 51, 52, 56, 59, 61, 65, 66, 67, 76, 80, 81, 82, 94, 95, 112, 118, 119, 120, 134, 156, 158, 163, 171, 174, 178, 179, 180, 181, 182, 183, 186, 188, 191, 195, 205, 207, 208, 213, 214, 215, 226, 240, 241, 246, 249, 262, 265, 270], "pass": [2, 4, 7, 8, 11, 12, 13, 14, 18, 24, 25, 28, 31, 32, 33, 42, 43, 51, 52, 53, 55, 57, 58, 59, 61, 64, 65, 67, 78, 79, 81, 82, 84, 87, 88, 91, 93, 94, 98, 100, 105, 112, 113, 116, 128, 129, 133, 150, 151, 155, 156, 158, 159, 171, 175, 181, 182, 184, 185, 186, 188, 190, 191, 193, 195, 196, 202, 203, 207, 208, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 226, 227, 228, 229, 231, 233, 234, 236, 239, 240, 259, 260, 265, 269, 270, 271], "By": [2, 7, 11, 18, 26, 28, 33, 41, 50, 51, 53, 55, 56, 59, 65, 66, 70, 74, 76, 81, 82, 87, 90, 91, 92, 93, 94, 95, 98, 105, 156, 161, 181, 183, 185, 186, 188, 190, 191, 192, 194, 195, 197, 202, 204, 207, 208, 211, 213, 214, 215, 219, 221, 222, 226, 229, 233, 234, 246, 259, 264, 265, 270], "re": [2, 12, 18, 30, 31, 33, 42, 43, 51, 52, 55, 58, 59, 76, 78, 87, 171, 173, 176, 182, 188, 195, 196, 197, 203, 204, 205, 211, 226, 242, 244, 260, 262, 265], "gain": [2, 52, 100, 123, 124, 128], "impress": 2, "91": [2, 34, 189, 194, 201, 215], "compar": [2, 7, 31, 33, 43, 48, 51, 57, 68, 81, 87, 91, 92, 115, 140, 164, 168, 185, 188, 191, 192, 195, 200, 202, 207, 211, 214, 216, 220, 226, 233, 262, 265, 270], "4e": [2, 213], "nearli": [2, 91, 204], "modifi": [2, 15, 32, 33, 42, 51, 57, 59, 91, 93, 124, 133, 181, 188, 190, 191, 192, 195, 207, 213, 214, 215, 226, 229, 230, 233, 234, 259, 264, 266], "origin": [2, 5, 7, 13, 20, 25, 42, 43, 44, 47, 50, 51, 52, 55, 56, 57, 59, 60, 62, 64, 66, 76, 78, 82, 87, 91, 98, 100, 101, 116, 125, 128, 153, 156, 166, 172, 176, 181, 182, 186, 190, 191, 194, 195, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 221, 226, 233, 234, 240, 242, 243, 244, 245, 246, 248, 249, 270], "snippet": [2, 33], "demonstr": [2, 7, 14, 15, 18, 42, 43, 51, 78, 91, 105, 107, 113, 116, 117, 125, 182, 185, 245, 270], "expr": [2, 7, 12, 14, 18, 27, 28, 30, 31, 33, 43, 50, 53, 55, 57, 59, 61, 73, 76, 78, 81, 84, 87, 92, 93, 100, 104, 106, 113, 125, 138, 142, 144, 146, 150, 153, 156, 158, 159, 161, 168, 171, 173, 175, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 202, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 227, 228, 229, 231, 234, 240, 241, 242, 243, 244, 246, 251, 259, 260, 262, 264, 265, 269, 270, 271], "expr_modifi": 2, "__main__": [2, 33, 266], "show": [2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 18, 33, 43, 50, 51, 55, 57, 74, 76, 78, 87, 91, 94, 95, 98, 104, 113, 118, 126, 128, 156, 160, 164, 166, 171, 178, 179, 181, 182, 185, 186, 188, 190, 191, 195, 196, 198, 202, 203, 204, 205, 207, 208, 211, 213, 215, 216, 224, 227, 228, 231, 233, 234, 262, 264, 266, 269], "unlik": [2, 7, 8, 11, 14, 30, 52, 78, 87, 91, 93, 113, 178, 188, 195, 208, 211, 214, 230, 231, 262, 264, 265, 266, 269], "high": [2, 5, 7, 14, 15, 33, 51, 55, 56, 79, 91, 128, 175, 185, 190, 193, 195, 208, 213, 256, 266], "declar": [2, 7, 33, 64, 76, 87, 93, 101, 113, 115, 128, 140, 184, 195, 202, 205, 210, 211, 212, 215, 228], "asid": [2, 81, 211, 212, 264], "impli": [2, 7, 15, 25, 29, 33, 42, 81, 161, 181, 186, 188, 195, 203, 205, 211, 216, 219, 220, 233, 246], "wish": [2, 11, 14, 18, 20, 33, 51, 52, 55, 76, 91, 156, 170, 179, 230, 234, 260, 264, 266, 271], "mani": [2, 5, 7, 8, 11, 12, 14, 18, 20, 31, 32, 33, 34, 39, 42, 47, 51, 52, 53, 55, 57, 59, 63, 76, 78, 81, 82, 87, 91, 92, 108, 109, 113, 115, 122, 124, 125, 128, 145, 161, 169, 179, 182, 184, 185, 186, 188, 190, 199, 202, 203, 205, 207, 208, 211, 212, 213, 214, 215, 219, 228, 233, 259, 260, 262, 263, 264, 265, 269, 270, 271], "parenthes": [2, 14, 51, 93, 104, 149, 150, 179, 195, 219, 236], "preced": [2, 14, 15, 34, 43, 51, 52, 55, 56, 141, 207, 234], "expect": [2, 7, 14, 15, 18, 32, 34, 36, 51, 57, 59, 63, 81, 91, 92, 100, 113, 155, 185, 188, 190, 192, 193, 202, 207, 210, 214, 215, 224, 226, 227, 230, 233, 234, 264, 265], "shell": [2, 9, 79, 128, 194], "2x": [2, 51, 59, 76, 93, 207, 208, 214, 215, 259, 262, 270], "syntaxerror": [2, 93], "pprint": [2, 18, 31, 32, 53, 59, 78, 87, 91, 100, 133, 180, 195, 196, 203, 207, 211, 212, 214, 215, 233, 269], "asin": [2, 58, 59, 65, 192, 195, 205, 207, 211, 215, 270], "aco": [2, 14, 25, 58, 64, 67, 115, 128, 134, 171, 195, 211, 240, 270], "arcsin": [2, 57, 192, 195, 215], "arcco": [2, 57, 195], "method": [2, 6, 7, 9, 11, 12, 14, 15, 19, 27, 28, 29, 31, 32, 33, 34, 35, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 67, 70, 73, 75, 76, 78, 80, 82, 83, 84, 87, 91, 92, 93, 94, 95, 96, 97, 100, 101, 104, 107, 112, 113, 117, 118, 122, 127, 128, 135, 138, 140, 142, 150, 151, 156, 158, 161, 163, 168, 169, 170, 171, 173, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 196, 197, 198, 200, 201, 202, 203, 207, 208, 209, 211, 213, 215, 216, 218, 220, 221, 222, 226, 228, 230, 233, 234, 240, 243, 246, 249, 250, 259, 260, 261, 262, 265, 270], "root": [2, 7, 18, 22, 31, 33, 50, 51, 52, 58, 59, 73, 74, 75, 76, 78, 80, 83, 87, 91, 128, 166, 180, 182, 183, 186, 187, 190, 192, 194, 195, 205, 206, 211, 213, 214, 215, 226, 230, 233, 264, 266, 269, 271], "expon": [2, 30, 33, 38, 51, 52, 57, 58, 59, 76, 78, 84, 91, 98, 100, 167, 183, 184, 185, 187, 191, 192, 195, 204, 207, 211, 214, 219, 230, 270], "half": [2, 18, 33, 52, 56, 57, 59, 61, 67, 78, 80, 87, 91, 93, 94, 130, 133, 158, 180, 186, 188, 190, 191, 203, 204, 205, 207, 215, 226, 233], "neg": [2, 7, 8, 14, 28, 30, 33, 34, 46, 50, 51, 56, 57, 59, 61, 63, 64, 67, 76, 78, 80, 81, 82, 87, 90, 91, 94, 95, 97, 98, 100, 161, 171, 183, 184, 186, 188, 190, 191, 192, 195, 201, 203, 204, 205, 207, 208, 211, 213, 214, 215], "denomin": [2, 51, 55, 59, 78, 91, 100, 106, 183, 185, 186, 188, 190, 191, 194, 195, 204, 205, 207, 208, 211, 213, 270], "find": [2, 5, 6, 14, 18, 22, 25, 28, 31, 33, 34, 42, 45, 46, 47, 50, 51, 55, 57, 59, 61, 63, 64, 65, 68, 73, 76, 78, 80, 87, 91, 93, 106, 114, 120, 126, 128, 130, 146, 153, 155, 156, 157, 161, 164, 166, 178, 181, 182, 183, 184, 185, 186, 187, 188, 192, 194, 195, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 213, 214, 215, 221, 230, 233, 234, 236, 240, 249, 260, 262, 264, 266, 271], "wild": [2, 207, 233], "interest": [2, 18, 47, 51, 53, 56, 57, 67, 76, 78, 87, 91, 114, 115, 161, 166, 179, 182, 186, 190, 191, 192, 194, 202, 205, 207, 208, 213, 214, 227, 228, 244, 260, 263, 265, 266, 267, 270], "appropri": [2, 5, 11, 14, 15, 42, 51, 57, 66, 87, 104, 115, 150, 151, 161, 171, 178, 184, 185, 191, 192, 195, 201, 202, 207, 208, 213, 215, 220, 228, 244, 269], "sq": [2, 208], "lambda": [2, 18, 27, 28, 31, 33, 42, 43, 52, 53, 57, 78, 82, 83, 84, 87, 90, 91, 93, 113, 124, 125, 128, 129, 146, 181, 188, 190, 191, 195, 196, 203, 204, 207, 211, 213, 214, 215, 216, 224, 233, 234, 240, 241, 244, 259, 266], "is_pow": [2, 33, 51, 57], "is_rat": [2, 7, 190, 233], "link": [2, 12, 14, 15, 16, 22, 33, 52, 61, 67, 78, 101, 107, 122, 227, 230, 231, 268], "bracket": [2, 18, 43, 51, 59, 159, 161, 171, 195], "item": [2, 14, 15, 33, 40, 41, 43, 51, 56, 62, 68, 82, 87, 91, 108, 181, 185, 188, 191, 195, 203, 211, 212, 215, 226, 227, 230, 233, 234, 270], "mutabl": [2, 34, 51, 83, 84, 85, 94, 186, 195, 196, 207, 216, 266], "been": [2, 7, 12, 18, 31, 33, 34, 42, 43, 44, 47, 50, 51, 52, 63, 76, 78, 87, 91, 92, 93, 108, 113, 115, 122, 125, 126, 134, 146, 156, 158, 166, 170, 176, 177, 178, 179, 182, 185, 186, 190, 192, 193, 195, 197, 202, 205, 207, 212, 213, 214, 216, 225, 226, 228, 229, 231, 233, 236, 243, 246, 262, 263, 265, 266, 270], "access": [2, 7, 11, 14, 15, 18, 26, 27, 28, 33, 51, 59, 80, 81, 84, 87, 92, 95, 100, 101, 107, 108, 112, 113, 129, 170, 171, 176, 179, 181, 185, 186, 188, 190, 207, 211, 215, 216, 219, 227, 228, 243, 246, 265, 269], "space": [2, 14, 18, 31, 32, 33, 51, 52, 53, 60, 61, 62, 64, 66, 67, 80, 87, 93, 94, 102, 108, 109, 110, 130, 132, 135, 145, 148, 150, 156, 158, 165, 171, 174, 176, 179, 180, 181, 182, 190, 206, 214, 215, 226, 230, 240, 241, 243, 244, 245, 246, 248, 249, 262, 265], "notat": [2, 5, 39, 43, 44, 50, 51, 52, 56, 59, 76, 84, 87, 93, 100, 159, 170, 171, 175, 179, 182, 195, 202, 206, 207, 214, 220, 221, 233, 246, 260], "curli": [2, 113, 195], "short": [2, 12, 15, 24, 34, 41, 43, 47, 51, 52, 53, 54, 57, 85, 91, 104, 147, 166, 170, 179, 182, 189, 216, 226, 236, 265, 269], "twice": [2, 12, 33, 51, 53, 65, 91, 171, 173, 178, 195, 230, 231, 240, 241, 260], "sometim": [2, 7, 12, 14, 15, 18, 32, 33, 51, 56, 59, 75, 76, 100, 122, 125, 153, 161, 179, 182, 185, 190, 195, 197, 202, 204, 208, 211, 213, 224, 233, 259, 266], "comma": [2, 14, 15, 33, 51, 195, 234, 262], "integr": [2, 4, 20, 22, 25, 31, 43, 50, 51, 53, 56, 57, 58, 69, 70, 71, 74, 80, 82, 87, 90, 91, 100, 102, 108, 113, 122, 128, 147, 156, 159, 162, 165, 170, 172, 176, 180, 182, 185, 186, 187, 188, 191, 192, 195, 197, 198, 205, 211, 212, 215, 228, 236, 240, 242, 243, 246, 247, 251, 261, 264, 269], "sequenc": [2, 15, 31, 33, 35, 38, 41, 42, 43, 47, 49, 50, 51, 52, 54, 56, 59, 61, 64, 65, 66, 67, 68, 71, 75, 81, 82, 84, 87, 90, 91, 128, 134, 160, 161, 186, 189, 191, 195, 197, 199, 202, 204, 205, 207, 208, 211, 212, 214, 221, 224, 227, 228, 233, 235, 236], "usag": [2, 7, 8, 14, 15, 18, 24, 27, 53, 57, 78, 122, 158, 176, 181, 182, 187, 188, 195, 203, 205, 208, 211, 212, 216, 230, 234, 235, 246, 247, 257, 265], "out": [2, 7, 8, 15, 18, 32, 33, 42, 43, 51, 52, 53, 56, 59, 67, 76, 78, 84, 87, 91, 94, 100, 101, 113, 115, 116, 119, 128, 138, 142, 153, 156, 158, 160, 161, 182, 183, 185, 186, 190, 191, 192, 193, 195, 196, 202, 205, 207, 211, 216, 226, 228, 233, 234, 262, 264, 265, 269, 270], "suppli": [2, 31, 32, 33, 42, 43, 51, 53, 61, 65, 87, 91, 105, 108, 110, 115, 116, 119, 123, 124, 134, 161, 170, 174, 179, 181, 190, 192, 197, 204, 211, 227, 233, 234, 240, 241, 244], "kwarg": [2, 13, 27, 28, 29, 33, 42, 43, 50, 51, 52, 53, 57, 59, 61, 62, 64, 65, 66, 67, 68, 73, 76, 78, 82, 83, 84, 85, 87, 89, 90, 98, 100, 106, 108, 116, 130, 139, 141, 145, 146, 150, 152, 154, 155, 157, 158, 159, 171, 174, 175, 181, 184, 186, 191, 195, 197, 201, 202, 203, 207, 211, 212, 213, 215, 216, 221, 226, 227, 229, 234, 236, 244], "pair": [2, 5, 14, 32, 33, 42, 43, 51, 52, 57, 63, 68, 75, 87, 91, 113, 116, 151, 153, 155, 156, 161, 170, 182, 185, 188, 190, 191, 196, 201, 202, 204, 205, 207, 208, 211, 214, 215, 228, 233, 243, 259, 266], "accord": [2, 15, 33, 39, 42, 43, 47, 50, 51, 52, 59, 81, 84, 87, 91, 93, 114, 122, 155, 161, 181, 186, 188, 190, 192, 208, 213, 214, 221, 226, 228, 233, 248], "auto": [2, 16, 31, 51, 52, 79, 181, 188, 191, 195, 207, 211, 215], "powsimp": [2, 51, 57, 204], "option": [2, 9, 12, 13, 14, 15, 16, 18, 26, 28, 31, 33, 42, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 64, 65, 67, 68, 70, 78, 79, 82, 84, 87, 88, 91, 92, 93, 94, 98, 100, 104, 105, 106, 107, 108, 109, 112, 128, 134, 145, 150, 151, 153, 156, 158, 163, 170, 171, 175, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202, 203, 204, 207, 208, 211, 212, 213, 214, 215, 220, 221, 226, 227, 228, 231, 233, 234, 240, 263, 269, 270], "wiki": [2, 7, 12, 13, 14, 15, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 98, 100, 103, 130, 132, 133, 134, 136, 137, 138, 142, 143, 144, 147, 149, 150, 159, 161, 165, 171, 173, 177, 181, 191, 198, 202, 203, 204, 208, 211, 214, 215, 228, 233, 240, 241, 245, 247, 249, 266], "info": [2, 15, 100, 195, 211, 212], "everywher": [2, 12, 51, 59, 76, 100, 176, 248], "deep": [2, 18, 51, 57, 81, 82, 191, 202, 207, 215, 265], "forc": [2, 5, 8, 11, 18, 51, 55, 57, 61, 67, 76, 78, 81, 94, 95, 105, 108, 112, 115, 116, 117, 118, 119, 122, 123, 124, 125, 128, 149, 150, 164, 176, 179, 181, 183, 185, 204, 207, 208, 213, 226, 246, 248, 269, 270], "measur": [2, 25, 57, 59, 67, 83, 104, 141, 150, 155, 163, 166, 168, 170, 171, 174, 176, 179, 191, 203, 204, 207, 215, 239, 240, 242, 243, 245, 246, 248], "count_op": [2, 204, 207], "explan": [2, 7, 12, 15, 21, 25, 26, 27, 28, 29, 30, 32, 33, 36, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 57, 59, 63, 73, 74, 76, 78, 82, 87, 91, 100, 103, 105, 106, 107, 108, 110, 120, 130, 132, 135, 138, 140, 142, 144, 156, 161, 180, 181, 182, 184, 186, 190, 191, 193, 197, 198, 200, 201, 202, 203, 205, 207, 208, 211, 213, 215, 216, 220, 221, 226, 229, 231, 234, 267], "strictli": [2, 4, 6, 7, 29, 31, 51, 59, 87, 91, 100, 188, 207, 213], "radic": [2, 51, 52, 87, 182, 190, 191, 207, 213, 214], "join": [2, 43, 51, 52, 64, 82, 94, 95, 195, 207, 211, 216, 233, 237], "autoexpand": [2, 207], "longer": [2, 6, 12, 14, 51, 61, 91, 116, 125, 183, 188, 195, 204, 207, 233, 236, 262, 270], "won": [2, 12, 18, 33, 207, 214, 265], "violat": [2, 113, 180, 192, 207], "code": [2, 5, 7, 8, 9, 14, 16, 17, 18, 19, 20, 21, 24, 34, 38, 42, 45, 46, 51, 52, 53, 55, 59, 63, 76, 78, 79, 87, 91, 92, 93, 105, 113, 115, 120, 122, 126, 128, 129, 155, 161, 170, 175, 178, 180, 181, 182, 183, 185, 188, 194, 205, 207, 211, 213, 214, 215, 220, 223, 224, 226, 227, 228, 231, 232, 233, 234, 243, 258, 262, 264, 267, 269], "py": [2, 7, 11, 12, 13, 14, 20, 32, 51, 62, 76, 78, 87, 139, 141, 181, 184, 186, 192, 195, 202, 205, 211, 212, 221, 224, 226, 231, 234], "naiv": [2, 4, 42, 48, 51, 76, 82, 87, 166, 205, 213, 214, 221], "strategi": [2, 34, 51, 78, 188, 189, 202, 205, 207, 212], "futur": [2, 7, 8, 12, 33, 34, 51, 76, 78, 82, 87, 93, 112, 115, 122, 125, 161, 165, 177, 181, 183, 194, 195, 207, 211, 220, 226, 229, 231, 234, 257, 265, 271], "version": [2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 23, 26, 32, 33, 42, 43, 49, 51, 52, 57, 59, 64, 78, 81, 82, 83, 85, 87, 89, 91, 103, 105, 113, 145, 159, 163, 171, 180, 181, 182, 185, 186, 188, 190, 191, 195, 198, 207, 213, 215, 225, 226, 228, 229, 230, 231, 233, 234, 238, 240, 245, 262, 265, 266], "algorithm": [2, 7, 11, 14, 31, 35, 36, 38, 41, 42, 43, 45, 47, 49, 50, 51, 52, 55, 56, 57, 63, 68, 76, 78, 81, 84, 87, 88, 91, 101, 125, 148, 166, 171, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 196, 199, 200, 203, 204, 206, 207, 208, 211, 213, 214, 215, 221, 230, 233, 252, 260, 265, 266, 270], "determin": [2, 5, 7, 8, 12, 15, 18, 26, 28, 29, 30, 31, 33, 34, 35, 42, 51, 52, 53, 54, 55, 57, 61, 62, 64, 66, 67, 78, 79, 80, 84, 87, 91, 93, 94, 95, 100, 106, 109, 110, 112, 121, 126, 129, 140, 153, 155, 157, 158, 161, 164, 166, 171, 176, 181, 182, 183, 184, 188, 190, 195, 201, 202, 203, 205, 207, 208, 210, 211, 213, 214, 215, 219, 231, 233, 240, 246, 249, 262, 270], "radsimp": [2, 51, 206], "togeth": [2, 5, 33, 42, 51, 55, 80, 87, 91, 122, 147, 158, 166, 179, 182, 186, 188, 190, 191, 194, 195, 207, 211, 213, 215, 226, 227, 233, 264, 270], "logcombin": [2, 206, 211, 214], "robust": [2, 48, 51, 55, 187, 207, 211], "poli": [2, 11, 50, 51, 52, 56, 57, 59, 60, 67, 73, 78, 82, 84, 87, 91, 128, 182, 183, 187, 188, 190, 191, 192, 194, 197, 210, 211, 213, 214, 226], "cancel": [2, 5, 18, 33, 51, 55, 59, 67, 76, 78, 87, 91, 100, 101, 185, 186, 188, 191, 194, 207, 213, 264], "section": [3, 7, 9, 12, 15, 16, 18, 21, 25, 32, 34, 42, 43, 50, 51, 52, 54, 58, 59, 61, 67, 76, 81, 82, 87, 94, 95, 107, 113, 126, 164, 166, 170, 176, 179, 182, 185, 188, 190, 195, 198, 202, 205, 211, 221, 230, 231, 233, 243, 244, 245, 246, 250, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271], "special": [3, 7, 11, 14, 18, 24, 25, 43, 51, 52, 54, 55, 56, 58, 66, 69, 76, 78, 82, 87, 128, 145, 150, 176, 182, 185, 187, 188, 189, 190, 195, 204, 205, 207, 211, 212, 213, 215, 226, 227, 228, 231, 233, 234, 243, 246, 248, 252, 253, 260, 261, 265], "topic": [3, 21, 23, 33, 122, 126, 177, 178, 179, 180, 182, 184, 185, 190, 214, 262, 267], "sympi": [3, 7, 8, 10, 11, 12, 15, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 247, 248, 249, 250, 252, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271], "pitfal": [3, 18, 23, 179, 185, 262, 267, 270], "content": [3, 16, 33, 51, 52, 86, 183, 186, 188, 191, 194, 195, 223, 228, 231, 232, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263], "gotcha": [3, 21, 23, 51, 122, 179, 234, 263, 271], "sign": [3, 12, 14, 15, 25, 30, 33, 47, 51, 52, 56, 58, 61, 67, 76, 78, 87, 91, 94, 95, 100, 115, 134, 146, 171, 176, 178, 180, 188, 195, 200, 202, 207, 208, 213, 233, 246, 249, 263], "express": [3, 4, 7, 8, 11, 12, 14, 15, 18, 22, 23, 26, 27, 28, 29, 30, 31, 43, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 64, 66, 67, 71, 74, 75, 76, 78, 79, 82, 85, 86, 87, 90, 91, 92, 94, 100, 101, 103, 104, 109, 110, 113, 116, 122, 123, 124, 125, 126, 128, 129, 136, 140, 144, 145, 149, 150, 153, 156, 158, 159, 160, 161, 163, 164, 166, 168, 170, 171, 174, 175, 176, 177, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 227, 228, 229, 230, 231, 234, 236, 240, 241, 243, 245, 246, 247, 248, 252, 253, 254, 258, 260, 261, 262, 263, 264, 266, 269, 270, 271], "help": [3, 7, 12, 13, 14, 15, 24, 33, 41, 51, 59, 76, 78, 87, 91, 92, 98, 113, 128, 136, 146, 179, 181, 190, 192, 195, 204, 205, 208, 211, 212, 215, 226, 227, 228, 234, 256, 263, 266], "from": [3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 259, 260, 262, 264, 265, 266, 269, 270, 271], "within": [3, 7, 11, 15, 31, 32, 33, 51, 57, 64, 67, 81, 82, 84, 91, 92, 94, 119, 156, 170, 171, 178, 179, 183, 185, 191, 193, 203, 211, 213, 214, 215, 226, 227, 236], "finit": [3, 6, 7, 28, 33, 37, 38, 39, 42, 50, 51, 52, 54, 55, 78, 80, 81, 147, 171, 180, 183, 186, 187, 189, 191, 192, 195, 197, 198, 201, 203, 208, 210, 211, 214, 233, 240, 241, 251, 261, 264, 270], "classif": [3, 6, 51, 211, 212], "activ": [3, 12, 13, 115, 181, 224, 229, 231], "deprec": [3, 14, 16, 21, 26, 43, 51, 64, 78, 82, 103, 125, 191, 195, 215, 221, 224, 225, 229, 231, 234, 238], "silenc": [3, 12, 224, 231], "11": [3, 7, 14, 27, 28, 33, 42, 45, 47, 49, 51, 52, 54, 56, 59, 63, 64, 65, 67, 68, 76, 78, 81, 82, 83, 87, 91, 93, 96, 100, 113, 115, 126, 145, 155, 180, 181, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 202, 204, 208, 211, 213, 214, 215, 216, 227, 233, 243], "9": [3, 14, 20, 31, 33, 39, 41, 42, 43, 47, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 64, 65, 67, 73, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 98, 100, 101, 102, 103, 113, 115, 117, 128, 130, 134, 166, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 201, 203, 204, 205, 207, 208, 211, 213, 214, 215, 216, 226, 230, 233, 240, 242, 264, 266, 271], "8": [3, 5, 14, 20, 25, 26, 31, 33, 35, 42, 43, 44, 47, 49, 51, 52, 54, 55, 56, 57, 59, 61, 64, 65, 67, 73, 76, 78, 80, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 98, 100, 102, 115, 128, 133, 134, 145, 181, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 197, 198, 201, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 220, 226, 228, 230, 233, 240, 242, 243, 249, 259, 260, 264, 266, 270], "classifi": [4, 87, 185, 211, 212, 214, 215], "function": [4, 5, 7, 8, 10, 11, 12, 15, 16, 19, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 42, 43, 46, 47, 49, 52, 53, 54, 55, 56, 60, 61, 62, 63, 68, 71, 72, 75, 77, 78, 79, 80, 82, 84, 86, 90, 92, 94, 96, 97, 98, 100, 101, 102, 106, 107, 110, 111, 112, 113, 116, 117, 118, 122, 123, 124, 128, 133, 134, 135, 136, 140, 145, 146, 147, 150, 155, 156, 157, 158, 159, 160, 161, 164, 170, 171, 174, 175, 177, 179, 180, 182, 187, 188, 189, 190, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271], "isinst": [4, 7, 18, 33, 51, 82, 84, 100, 185, 186, 195, 196, 207, 216, 219, 228, 265], "distinguish": [4, 7, 8, 32, 42, 55, 80, 113, 160, 166, 182], "between": [4, 8, 11, 12, 18, 32, 33, 41, 42, 43, 45, 49, 51, 53, 56, 59, 61, 63, 64, 65, 66, 67, 68, 78, 80, 81, 84, 85, 87, 91, 92, 93, 97, 98, 100, 107, 110, 112, 113, 119, 121, 125, 126, 128, 129, 130, 133, 134, 140, 147, 149, 150, 151, 155, 158, 159, 160, 161, 164, 165, 166, 171, 172, 173, 174, 176, 178, 179, 181, 182, 184, 187, 188, 190, 195, 197, 207, 211, 212, 213, 214, 215, 216, 229, 234, 240, 242, 243, 246, 248, 262], "matrix": [4, 5, 7, 22, 25, 28, 33, 40, 43, 51, 52, 53, 59, 66, 76, 78, 80, 82, 85, 86, 89, 90, 92, 93, 100, 101, 103, 105, 107, 108, 109, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 128, 129, 130, 133, 134, 136, 144, 145, 150, 155, 156, 158, 160, 161, 163, 166, 170, 171, 179, 180, 182, 184, 188, 190, 193, 195, 196, 203, 205, 207, 208, 213, 214, 216, 217, 219, 220, 221, 222, 227, 228, 233, 234, 236, 240, 241, 242, 244, 248, 254, 261, 264, 265, 270, 271], "former": [4, 33, 51, 56, 113, 188, 190, 191, 208, 233], "retriev": [4, 49, 82, 191, 207, 221], "properti": [4, 12, 18, 21, 27, 28, 31, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 74, 76, 78, 82, 84, 87, 91, 94, 95, 97, 100, 105, 107, 108, 110, 112, 126, 128, 130, 132, 135, 136, 139, 140, 145, 146, 147, 149, 150, 157, 159, 161, 163, 166, 168, 169, 171, 172, 173, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 194, 197, 198, 201, 202, 203, 205, 208, 211, 214, 215, 220, 221, 226, 228, 229, 240, 242, 243, 244, 246, 248, 266], "numberkind": [4, 82, 203], "matrixkind": [4, 51, 86, 203], "guarante": [4, 7, 33, 42, 43, 51, 63, 76, 78, 87, 185, 188, 190, 191, 211, 213, 214, 231, 236, 266, 270], "catch": [4, 51, 211, 226, 266], "build": [4, 14, 15, 16, 21, 23, 27, 28, 33, 51, 53, 59, 81, 128, 155, 166, 171, 179, 182, 187, 190, 191, 192, 202, 215, 243, 259, 262, 265], "argument": [4, 7, 8, 11, 12, 13, 14, 18, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 68, 76, 78, 79, 81, 82, 84, 87, 90, 91, 93, 94, 98, 100, 108, 112, 113, 123, 124, 128, 135, 138, 142, 144, 147, 150, 155, 156, 158, 159, 160, 161, 169, 175, 176, 180, 181, 182, 183, 185, 186, 188, 190, 191, 194, 195, 196, 197, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 215, 219, 220, 226, 227, 228, 229, 230, 231, 233, 234, 236, 243, 244, 246, 259, 260, 265, 266, 270], "theori": [4, 18, 28, 34, 40, 41, 42, 43, 49, 51, 52, 56, 59, 80, 88, 91, 108, 113, 125, 127, 140, 158, 161, 171, 174, 184, 188, 189, 190, 194, 208, 230, 240, 257, 264], "compat": [4, 9, 11, 12, 33, 51, 59, 79, 82, 87, 92, 104, 163, 168, 175, 181, 184, 186, 190, 191, 195, 215, 218, 219, 222, 226, 228, 234], "is_subset": [4, 203], "valueerror": [4, 7, 26, 28, 31, 33, 34, 43, 51, 52, 60, 61, 64, 66, 67, 78, 82, 84, 87, 90, 91, 94, 98, 100, 135, 174, 176, 180, 182, 184, 188, 190, 203, 211, 213, 214, 233, 236, 246], "odd": [4, 7, 26, 28, 30, 39, 43, 51, 52, 56, 57, 59, 81, 90, 91, 101, 190, 195, 213], "head": [4, 14, 32, 51, 215, 221, 236, 265], "appliedpred": [4, 26, 27, 28], "attribut": [4, 7, 14, 18, 27, 28, 32, 33, 42, 43, 51, 59, 60, 61, 64, 65, 66, 67, 84, 87, 93, 95, 100, 105, 107, 108, 109, 110, 112, 119, 126, 129, 150, 155, 159, 166, 170, 171, 176, 179, 181, 182, 185, 186, 190, 195, 203, 207, 208, 220, 221, 227, 229, 233, 234, 237, 243, 265], "advanc": [4, 6, 15, 18, 23, 27, 42, 51, 55, 56, 87, 88, 122, 126, 177, 181, 184, 185, 187, 189, 190, 197, 204, 211, 226, 227, 228, 233, 259, 261, 263, 267, 268, 269, 270], "manipul": [4, 5, 7, 11, 32, 33, 34, 42, 51, 59, 76, 86, 91, 92, 113, 122, 126, 159, 178, 184, 185, 186, 189, 194, 195, 197, 204, 207, 209, 218, 233, 250, 253, 257, 259, 260, 261, 262, 263, 264, 266, 269, 270], "quit": [5, 18, 59, 87, 91, 115, 178, 181, 192, 194, 205, 213, 248, 262, 265], "analysi": [5, 33, 34, 42, 51, 52, 57, 97, 115, 125, 126, 129, 165, 182, 191, 205, 208, 215], "physic": [5, 11, 14, 33, 44, 87, 91, 94, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 180, 189, 215, 230, 233, 246, 264, 270], "vari": [5, 31, 33, 51, 65, 67, 98, 104, 108, 126, 159, 179, 202, 213, 233, 246], "hope": [5, 42, 104, 182], "practic": [5, 7, 13, 16, 40, 42, 52, 61, 125, 128, 181, 182, 183, 185, 190, 192, 219, 262, 263], "research": [5, 43, 192, 207], "who": [5, 11, 12, 14, 18, 23, 52, 53, 128, 179, 188, 195, 263], "abl": [5, 7, 11, 12, 14, 18, 32, 33, 42, 47, 51, 52, 53, 62, 70, 78, 84, 87, 91, 97, 113, 123, 125, 126, 128, 129, 182, 185, 192, 211, 214, 226, 243, 264, 269, 271], "effici": [5, 7, 31, 33, 35, 42, 47, 51, 54, 55, 56, 67, 68, 84, 87, 91, 92, 100, 108, 128, 180, 183, 184, 185, 186, 188, 191, 192, 193, 194, 207, 208, 213, 227, 234, 259, 265, 266, 270], "formula": [5, 14, 31, 45, 50, 51, 55, 56, 59, 64, 77, 81, 87, 91, 180, 182, 188, 191, 195, 197, 201, 204, 207, 208, 211, 264, 270], "variou": [5, 11, 14, 15, 18, 31, 33, 35, 42, 50, 51, 56, 71, 76, 78, 81, 110, 140, 144, 145, 156, 158, 170, 182, 183, 186, 187, 188, 190, 196, 202, 205, 208, 211, 212, 214, 228, 270], "establish": [5, 47, 76, 107, 117, 205], "state": [5, 7, 42, 49, 51, 59, 91, 94, 100, 102, 108, 109, 112, 115, 116, 129, 133, 137, 138, 140, 141, 142, 144, 145, 146, 150, 153, 155, 156, 157, 158, 160, 161, 191, 195, 204, 205, 207, 215, 230, 256, 266], "envis": 5, "sampl": [5, 11, 16, 42, 54, 98, 145, 181, 195, 215, 260, 264], "along": [5, 18, 33, 42, 51, 52, 53, 57, 59, 60, 61, 65, 66, 69, 71, 74, 76, 82, 84, 87, 94, 95, 103, 104, 107, 108, 115, 116, 119, 120, 121, 123, 124, 125, 128, 130, 158, 170, 171, 176, 179, 181, 184, 185, 190, 191, 211, 214, 242, 246, 248], "small": [5, 33, 34, 42, 43, 51, 55, 56, 78, 81, 87, 91, 100, 116, 120, 128, 158, 180, 181, 188, 189, 190, 207, 208, 213, 233, 259, 262, 264], "x_": [5, 33, 41, 51, 52, 56, 93, 186, 188, 191, 197, 208, 211, 216], "via": [5, 9, 11, 18, 20, 26, 27, 28, 42, 43, 51, 56, 59, 76, 78, 81, 87, 91, 92, 93, 94, 171, 180, 182, 186, 188, 190, 191, 194, 214, 224, 227, 228, 240, 248, 265], "taylor": [5, 51, 57, 113, 125, 128, 186, 188, 191, 192, 202, 211], "seri": [5, 14, 31, 32, 33, 34, 41, 42, 50, 51, 53, 55, 56, 57, 59, 71, 74, 75, 76, 80, 91, 97, 100, 113, 119, 121, 128, 174, 178, 187, 188, 195, 200, 201, 205, 211, 214, 251, 257, 261], "expans": [5, 14, 18, 33, 51, 53, 56, 57, 59, 71, 78, 87, 91, 125, 140, 142, 191, 192, 197, 198, 199, 204, 206, 211, 213, 214, 251, 261, 270], "let": [5, 7, 8, 18, 31, 33, 42, 47, 51, 52, 61, 69, 74, 76, 80, 84, 87, 88, 91, 93, 105, 113, 128, 166, 171, 178, 182, 183, 184, 188, 190, 191, 192, 195, 202, 205, 207, 208, 211, 213, 214, 221, 224, 227, 231, 234, 244, 245, 249, 259, 262, 264, 265, 270], "Then": [5, 7, 9, 13, 42, 47, 50, 51, 76, 80, 87, 91, 106, 108, 110, 119, 121, 122, 126, 130, 158, 166, 178, 182, 183, 185, 188, 190, 192, 195, 202, 205, 207, 208, 211, 213, 234], "frac": [5, 7, 18, 31, 50, 51, 52, 53, 56, 58, 59, 76, 78, 87, 91, 93, 100, 116, 126, 164, 175, 176, 178, 179, 180, 184, 188, 191, 195, 197, 198, 202, 205, 208, 211, 212, 214, 215, 216, 233, 246, 248, 260, 264, 265, 269, 270], "df": [5, 53, 211], "coeffici": [5, 7, 14, 28, 31, 33, 50, 51, 53, 55, 56, 59, 64, 69, 70, 73, 74, 76, 80, 81, 84, 87, 88, 91, 101, 108, 113, 134, 148, 158, 166, 180, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 197, 198, 201, 202, 205, 207, 208, 210, 211, 212, 213, 214, 215, 221, 227, 243, 246, 265, 270], "c_": [5, 22, 52, 74, 76, 179, 183, 211], "grid": [5, 31, 32, 98, 181], "f_": [5, 51, 56, 59, 78, 123, 124, 125, 188, 194, 195, 205, 211], "constraint": [5, 87, 95, 100, 108, 109, 112, 113, 115, 116, 118, 122, 123, 124, 125, 128, 192], "subset": [5, 7, 15, 18, 31, 32, 35, 38, 42, 43, 49, 56, 57, 63, 74, 76, 78, 80, 91, 182, 184, 188, 190, 195, 203, 233], "formul": [5, 116, 122, 123, 124, 161, 179], "assess": 5, "brute": [5, 204, 208], "frequent": [5, 42, 190, 202, 214], "cover": [5, 21, 91, 93, 104, 113, 170, 178, 221, 228, 260, 262], "introductori": [5, 185, 186, 191], "treatment": [5, 76, 191], "shall": [5, 42, 76, 113, 128, 202, 205, 265], "job": [5, 18, 43, 141, 192, 195], "evalu": [5, 7, 8, 11, 14, 21, 22, 26, 27, 28, 31, 33, 51, 53, 56, 57, 59, 62, 66, 67, 71, 76, 78, 81, 84, 87, 91, 92, 93, 100, 104, 106, 113, 122, 125, 126, 136, 138, 140, 142, 147, 150, 158, 161, 180, 181, 185, 186, 188, 189, 191, 195, 196, 201, 202, 203, 205, 207, 208, 211, 213, 214, 215, 217, 227, 228, 229, 234, 246, 251, 259, 260, 261, 262, 264, 266], "truncat": [5, 43, 51, 87, 91, 95, 166, 181, 192, 194, 197, 198], "approx": [5, 22, 51, 78], "lowest": [5, 33, 42, 47, 91, 182, 197, 214], "decid": [5, 7, 8, 12, 14, 18, 32, 50, 82, 104, 125, 154, 165, 185, 188, 190, 191, 195, 211, 214, 228, 266], "2h": 5, "elimin": [5, 33, 47, 51, 81, 83, 87, 104, 186, 193, 194, 196, 198, 206, 211, 213, 214, 221, 228, 266], "print_funct": 5, "x0": [5, 31, 33, 41, 51, 59, 70, 72, 74, 75, 91, 133, 185, 196, 197, 202, 207, 211, 213, 215, 233, 260], "x_0": [5, 41, 42, 52, 73, 74, 75, 188, 197, 208, 211, 215, 260], "fi": 5, "fip1": 5, "fip2": 5, "c_0": [5, 52, 74], "c_1": [5, 52, 74, 76, 202, 205, 211], "c_2": [5, 76, 202, 211], "2f": [5, 271], "factori": [5, 14, 18, 50, 51, 55, 58, 59, 87, 91, 93, 180, 186, 188, 190, 191, 195, 197, 207, 213, 215, 228, 229, 233, 234, 270], "vector": [5, 14, 25, 29, 33, 35, 38, 42, 43, 53, 59, 64, 65, 66, 73, 74, 80, 82, 87, 92, 94, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 120, 121, 123, 124, 125, 126, 128, 129, 133, 134, 147, 156, 158, 163, 166, 173, 174, 175, 182, 187, 190, 195, 205, 211, 213, 215, 220, 221, 226, 227, 241, 245, 250, 254, 256, 266], "c_i": [5, 76, 202, 205, 211], "nth": [5, 51, 56, 59, 80, 91, 186, 191, 192, 201, 207, 211, 215], "degre": [5, 34, 42, 49, 50, 56, 59, 67, 78, 82, 87, 94, 98, 100, 107, 108, 113, 114, 116, 122, 129, 133, 179, 182, 183, 186, 188, 190, 191, 194, 198, 201, 204, 205, 207, 208, 211, 213, 215, 240], "polynomi": [5, 7, 14, 15, 22, 29, 42, 50, 51, 52, 55, 56, 58, 69, 70, 71, 72, 74, 78, 81, 82, 84, 87, 91, 95, 100, 126, 128, 182, 184, 189, 193, 197, 202, 204, 205, 207, 208, 209, 210, 211, 214, 226, 250, 257, 261, 266, 271], "x_i": [5, 18, 41, 59, 78, 87, 183, 186, 188, 191, 192, 195, 214], "m11": [5, 215], "m12": [5, 215], "m13": 5, "m21": [5, 215], "m22": [5, 215], "m23": 5, "m31": 5, "m32": 5, "m33": [5, 91], "3x3": [5, 66, 87, 244], "invert": [5, 28, 51, 52, 82, 84, 87, 100, 116, 163, 183, 185, 186, 190, 191, 211, 213, 214, 221, 266], "inv": [5, 43, 83, 87, 108, 115, 119, 120, 128, 150, 184, 211], "center": [5, 15, 31, 42, 50, 51, 61, 65, 67, 68, 78, 87, 105, 107, 110, 113, 115, 119, 121, 126, 128, 134, 178, 181, 190, 195, 203, 249], "fim1": 5, "serv": [5, 15, 18, 27, 28, 33, 48, 51, 58, 74, 190, 211, 212, 236, 263], "wherea": [5, 7, 29, 33, 52, 61, 67, 76, 81, 100, 166, 182, 185, 191, 195, 213, 214, 233, 270], "bit": [5, 9, 18, 32, 33, 35, 51, 52, 54, 81, 82, 87, 91, 155, 166, 182, 191, 205, 208, 214, 226, 233, 243, 244, 269], "question": [5, 7, 12, 14, 15, 19, 50, 53, 61, 68, 76, 78, 81, 91, 104, 163, 166, 170, 182, 185, 190, 205, 214, 233, 236], "eight": [5, 195], "dfdxcheck": 5, "c1": [5, 14, 52, 61, 68, 82, 84, 147, 161, 203, 208, 211, 213, 245, 271], "c3": [5, 54, 80, 82, 84, 91, 211, 215, 245, 271], "c5": [5, 211], "120": [5, 50, 51, 56, 57, 73, 91, 94, 95, 192, 194, 195, 197, 211, 260], "c7": [5, 42], "5040": [5, 56, 73, 191, 192], "inde": [5, 12, 18, 39, 42, 50, 76, 182, 205, 211, 222, 226, 264], "quickli": [5, 18, 42, 43, 51, 52, 55, 91, 188, 191, 204, 214, 230], "tediou": [5, 78], "attempt": [5, 8, 18, 33, 42, 47, 49, 51, 55, 56, 63, 76, 78, 87, 91, 104, 106, 156, 185, 190, 197, 202, 204, 207, 208, 211, 213, 214, 215, 226, 262, 270], "certainli": [5, 63, 93, 230], "seen": [5, 7, 14, 25, 43, 76, 78, 93, 112, 166, 178, 182, 185, 188, 191, 211, 213, 214, 231, 233, 243, 262, 265, 269], "fine": [5, 18, 51, 55, 79, 175, 185, 195, 207], "until": [5, 7, 12, 24, 43, 45, 51, 52, 61, 78, 87, 91, 125, 179, 188, 191, 204, 211, 262], "data": [5, 33, 42, 51, 52, 59, 78, 87, 92, 98, 108, 140, 181, 182, 185, 186, 188, 191, 192, 195, 207, 220, 221, 226, 228, 230, 233, 237], "handl": [5, 7, 8, 15, 18, 31, 39, 43, 51, 57, 78, 79, 81, 86, 91, 92, 93, 94, 101, 104, 113, 125, 141, 144, 150, 151, 156, 185, 191, 192, 201, 207, 209, 211, 213, 216, 219, 227, 233, 234, 236, 251, 265, 270], "devis": 5, "backward": [5, 11, 16, 31, 51, 82, 87, 195, 233, 270], "approach": [5, 9, 32, 50, 51, 78, 100, 116, 122, 185, 188, 189, 192, 203, 212, 213, 215, 227, 230, 233, 260, 266], "xn": [5, 18, 186], "x_n": [5, 18, 34, 41, 52, 73, 87, 183, 186, 188, 191, 208, 214], "fn": [5, 78, 87, 182, 191], "fnm1": 5, "fnm2": 5, "dth": 5, "Of": [5, 7, 50, 76, 87, 211, 214, 233, 270], "cours": [5, 7, 35, 42, 50, 59, 76, 78, 87, 88, 91, 176, 184, 185, 189, 190, 202, 204, 205, 246, 270], "fortran": [5, 11, 18, 31, 92, 93, 104, 128, 180, 228, 252, 258, 269], "etc": [5, 7, 8, 28, 31, 33, 47, 51, 52, 56, 57, 69, 80, 81, 86, 91, 113, 132, 141, 145, 158, 161, 165, 173, 176, 178, 179, 181, 182, 183, 185, 188, 190, 195, 196, 203, 204, 205, 207, 211, 214, 215, 219, 227, 228, 233, 244, 248], "discrit": 5, "bengt": [5, 31], "fornberg": [5, 31], "weight": [5, 51, 59, 66, 68, 78, 80, 87, 145, 207, 251, 260], "collect": [6, 9, 11, 15, 32, 33, 42, 51, 68, 78, 91, 94, 100, 112, 120, 128, 161, 168, 180, 186, 191, 204, 205, 211, 215, 226, 233, 251], "gap": [6, 42, 91, 113, 192], "matur": [6, 7, 213, 214], "matric": [6, 7, 11, 14, 29, 33, 51, 52, 78, 88, 90, 100, 107, 108, 109, 113, 116, 125, 128, 130, 133, 134, 136, 144, 145, 155, 160, 171, 179, 180, 184, 190, 195, 196, 203, 205, 207, 208, 211, 213, 214, 216, 218, 228, 229, 256, 261, 263, 264], "func": [6, 12, 14, 18, 27, 31, 33, 51, 53, 56, 59, 70, 72, 78, 91, 150, 171, 188, 191, 195, 196, 207, 211, 212, 213, 224, 229, 231, 233, 234, 236, 239], "explain": [7, 11, 12, 14, 15, 32, 47, 51, 59, 69, 74, 182, 185, 188, 190, 192, 202], "often": [7, 8, 12, 14, 18, 32, 33, 34, 41, 51, 59, 61, 63, 76, 78, 87, 91, 92, 100, 122, 125, 170, 178, 179, 182, 183, 185, 188, 191, 196, 202, 203, 208, 211, 215, 233, 259, 264, 265, 266, 270], "new": [7, 9, 11, 12, 13, 15, 18, 23, 27, 28, 32, 33, 34, 42, 43, 50, 51, 52, 53, 59, 64, 67, 76, 78, 79, 82, 87, 91, 94, 100, 105, 113, 119, 121, 126, 127, 128, 130, 151, 157, 158, 161, 163, 166, 167, 169, 171, 174, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 195, 202, 205, 207, 208, 211, 213, 214, 215, 216, 226, 227, 231, 234, 240, 241, 243, 247, 259, 262, 265, 266, 268], "elsewher": [7, 56, 80, 115, 184, 226], "wide": [7, 13, 79, 87, 128, 175, 185, 191, 195, 215], "concret": [7, 32, 43, 51, 56, 57, 78, 80, 87, 91, 113, 166, 186, 190, 195, 251], "seem": [7, 18, 75, 76, 113, 166, 182, 207, 211, 270], "obviou": [7, 8, 18, 42, 50, 182, 185, 194, 208, 264], "situat": [7, 55, 76, 179, 211, 213, 215, 231, 262], "surpris": [7, 214], "refus": [7, 270], "everi": [7, 11, 12, 14, 18, 27, 28, 29, 32, 37, 39, 42, 43, 51, 52, 66, 80, 82, 87, 91, 100, 126, 176, 178, 179, 181, 182, 183, 185, 186, 188, 190, 195, 200, 203, 205, 207, 208, 211, 214, 215, 217, 243, 246, 248, 263, 265, 266, 270], "roughli": [7, 51, 52, 92, 114, 211, 234], "known": [7, 8, 14, 18, 28, 32, 33, 34, 40, 42, 43, 51, 52, 55, 56, 59, 61, 64, 69, 76, 78, 79, 88, 91, 98, 100, 101, 103, 105, 110, 125, 164, 171, 178, 184, 185, 186, 190, 191, 195, 198, 201, 203, 204, 205, 207, 209, 210, 211, 212, 213, 215, 233, 234, 240, 246, 248, 270], "tell": [7, 8, 14, 15, 33, 43, 52, 55, 59, 82, 93, 112, 166, 185, 190, 194, 202, 205, 211, 227, 262], "infinit": [7, 18, 28, 50, 51, 52, 55, 56, 57, 64, 65, 78, 87, 91, 100, 118, 147, 166, 182, 190, 195, 196, 197, 200, 201, 202, 203, 207, 208, 209, 210, 213, 220, 233, 270, 271], "good": [7, 12, 15, 18, 33, 51, 52, 55, 63, 76, 87, 91, 115, 125, 128, 182, 185, 186, 195, 202, 204, 205, 207, 211, 233, 259, 263, 266], "idea": [7, 8, 12, 18, 36, 42, 49, 51, 52, 63, 69, 76, 78, 91, 101, 113, 161, 165, 166, 182, 184, 185, 204, 207, 208, 211, 214, 228, 234, 270], "queri": [7, 8, 18, 26, 29, 30, 31, 33, 51, 63, 191, 207, 215, 251], "is_posit": [7, 8, 18, 51, 173, 186], "is_neg": [7, 18, 186], "fuzzi": [7, 18, 21], "interprett": 7, "unknow": 7, "resolv": [7, 8, 51, 204, 207], "undecid": [7, 18, 87, 185, 214, 266], "answer": [7, 12, 18, 42, 51, 55, 73, 76, 78, 81, 87, 91, 166, 188, 192, 204, 205, 207, 213, 215, 230, 236, 264, 266, 270], "hard": [7, 12, 16, 43, 52, 87, 91, 113, 161, 185, 195, 202, 211, 214, 262, 264], "fast": [7, 11, 33, 51, 78, 86, 87, 91, 133, 186, 187, 188, 189, 190, 191, 192, 198, 202, 211, 213, 230, 233, 234], "heurist": [7, 43, 76, 78, 82, 188, 189, 202, 204, 207, 209, 213, 214, 226, 260, 270], "conclud": [7, 59, 74, 115, 176, 202, 213, 248], "particularli": [7, 55, 78, 185, 186, 205, 270, 271], "mix": [7, 24, 50, 57, 82, 87, 93, 170, 185, 186, 191, 195, 214, 217, 219, 221, 234], "expr2": [7, 12, 100, 181, 265], "ideal": [7, 33, 88, 110, 113, 122, 171, 178, 184, 186, 187, 188, 189, 190, 191, 192, 207, 214, 240], "fulli": [7, 12, 14, 21, 42, 51, 68, 78, 81, 93, 95, 113, 128, 161, 178, 185, 186, 192, 202, 215, 221, 237], "primarili": [7, 11, 33, 51, 91, 94, 160, 191, 193, 227, 230, 236, 243], "slow": [7, 18, 47, 51, 55, 78, 92, 104, 115, 133, 170, 179, 185, 186, 195, 196, 197, 198, 207, 211, 213, 214, 226, 227, 270], "down": [7, 9, 12, 14, 21, 84, 102, 115, 116, 178, 179, 181, 186, 197, 203, 205, 207, 211, 230, 266, 270], "indetermin": [7, 8, 51, 87, 188, 200, 213], "never": [7, 18, 51, 57, 78, 163, 191, 192, 195, 203, 213, 215, 224, 243, 262, 263], "contradict": 7, "infer": [7, 27, 28, 43, 51, 78, 185, 194, 200, 205, 211, 227, 253], "bug": [7, 12, 14, 18, 20, 31, 52, 77, 185, 203, 211, 214, 262], "prepar": [7, 108, 193], "presum": [7, 76, 185, 205, 228], "plain": [7, 12, 14, 79, 175, 191, 195], "singletonregistri": [7, 51], "implicitli": [7, 8, 18, 43, 51, 78, 182, 185, 213], "x1": [7, 18, 41, 51, 56, 128, 133, 185, 186, 196, 197, 207, 211, 213, 215, 233], "x2": [7, 41, 51, 56, 128, 133, 185, 197, 211, 213, 215], "distinct": [7, 12, 15, 18, 33, 42, 43, 51, 52, 56, 64, 76, 81, 87, 91, 112, 178, 185, 190, 191, 195, 203, 205, 270], "posifi": [7, 206], "unless": [7, 11, 14, 18, 26, 28, 31, 33, 42, 50, 51, 52, 56, 59, 66, 67, 76, 87, 90, 134, 178, 179, 183, 185, 190, 191, 195, 200, 203, 204, 211, 213, 226, 230, 233, 234, 236, 240, 248, 260, 266, 270], "_x": [7, 18, 87, 126, 175, 178, 179, 186, 192, 207, 211, 227], "rep": [7, 42, 47, 51, 145, 182, 184, 185, 186, 189, 190, 191, 204, 207, 236], "map": [7, 18, 31, 32, 33, 41, 42, 43, 51, 52, 63, 67, 74, 76, 78, 81, 82, 91, 98, 108, 116, 139, 150, 151, 156, 171, 179, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 202, 207, 211, 212, 213, 214, 215, 219, 220, 227, 230, 233, 234, 236, 240], "otherwis": [7, 8, 11, 12, 18, 31, 32, 33, 42, 43, 47, 50, 51, 52, 55, 57, 59, 60, 61, 64, 65, 66, 67, 76, 78, 80, 81, 83, 87, 90, 91, 93, 98, 100, 102, 105, 112, 113, 146, 151, 157, 174, 177, 178, 182, 186, 188, 190, 191, 193, 195, 197, 198, 200, 201, 203, 207, 208, 211, 212, 213, 214, 215, 216, 224, 226, 228, 233, 234, 259, 260, 269], "assign": [7, 15, 32, 33, 34, 47, 51, 67, 78, 80, 81, 87, 93, 108, 113, 119, 128, 166, 176, 179, 181, 183, 188, 195, 213, 214, 221, 228, 243, 246, 262], "feel": [7, 20, 128, 129, 207, 211], "among": [7, 32, 33, 34, 35, 42, 43, 52, 79, 92, 191, 211, 216, 219, 221, 243], "discourag": [7, 51, 207], "behaviour": [7, 76, 81, 105, 188, 192, 198, 201], "symbolc": 7, "implicit": [7, 33, 49, 51, 93, 112, 129, 181, 211, 213, 217, 220, 227, 228, 240, 242, 249, 262], "unusu": [7, 14, 115, 226], "tailor": 7, "necessarili": [7, 12, 14, 29, 51, 52, 53, 76, 78, 81, 182, 183, 190, 191, 193, 207, 211, 213, 214], "is_integ": [7, 18, 51, 173, 195, 220], "assumptions0": [7, 51], "commut": [7, 25, 28, 32, 42, 43, 47, 51, 53, 74, 78, 87, 138, 145, 148, 149, 150, 160, 161, 166, 173, 179, 183, 186, 187, 188, 189, 191, 195, 202, 203, 205, 211, 221, 265], "extended_neg": [7, 51], "extended_nonneg": [7, 51], "extended_nonposit": [7, 51], "extended_nonzero": [7, 51, 195], "extended_posit": [7, 51], "extended_r": [7, 29, 51, 195, 210, 214], "hermitian": [7, 28, 51, 82, 83, 87, 144, 150, 161, 195], "irrat": [7, 28, 31, 51, 91, 185, 191, 195, 203, 264], "noninteg": [7, 29, 51, 185, 195], "nonneg": [7, 18, 28, 51, 52, 53, 56, 59, 84, 128, 183, 185, 208, 215, 270], "nonposit": [7, 28, 51, 128], "nonzero": [7, 18, 28, 30, 50, 51, 66, 87, 102, 183, 184, 185, 186, 195, 198, 214], "ration": [7, 18, 26, 28, 31, 33, 50, 55, 56, 57, 59, 61, 64, 66, 68, 72, 76, 78, 79, 84, 87, 91, 93, 100, 130, 163, 180, 183, 187, 188, 189, 190, 192, 195, 199, 200, 204, 205, 207, 208, 209, 210, 213, 214, 215, 233, 240, 261, 262, 265, 269], "transcendent": [7, 28, 51, 59, 78, 185, 190, 195, 213, 214, 266, 271], "tabl": [7, 14, 34, 42, 51, 56, 59, 72, 77, 78, 87, 91, 107, 128, 180, 190, 217, 253], "oo": [7, 8, 14, 29, 31, 50, 51, 55, 56, 57, 59, 64, 76, 78, 81, 87, 100, 102, 147, 159, 162, 186, 188, 191, 200, 201, 202, 203, 207, 210, 211, 213, 214, 215, 220, 233, 236, 260, 264], "zoo": [7, 29, 51, 56, 57, 59, 78, 202, 204, 207], "field": [7, 25, 29, 33, 51, 52, 53, 59, 69, 78, 133, 134, 173, 177, 182, 183, 184, 186, 187, 189, 191, 192, 193, 208, 213, 226, 240, 242, 244, 245, 247, 249], "oper": [7, 8, 11, 13, 14, 18, 23, 25, 29, 33, 42, 43, 44, 50, 51, 52, 53, 54, 55, 57, 59, 61, 69, 71, 74, 76, 81, 82, 84, 86, 91, 93, 100, 101, 104, 108, 109, 116, 120, 125, 128, 133, 137, 138, 142, 144, 145, 146, 147, 152, 153, 156, 158, 159, 160, 161, 170, 171, 173, 177, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 198, 200, 203, 204, 206, 207, 211, 213, 214, 217, 218, 219, 220, 226, 227, 230, 233, 234, 240, 247, 250, 256, 261, 262, 263, 265, 270], "antihermitian": [7, 28, 51], "mathbb": [7, 18, 29, 34, 42, 50, 51, 52, 57, 59, 76, 82, 87, 125, 180, 182, 183, 185, 186, 188, 190, 191, 194, 202, 203, 205, 208, 214, 215, 270], "iy": [7, 57, 76, 203, 214], "overlin": [7, 15, 59], "extend": [7, 14, 15, 18, 19, 28, 33, 42, 43, 51, 52, 56, 63, 76, 78, 87, 91, 128, 169, 175, 181, 183, 186, 188, 190, 191, 192, 195, 202, 204, 208, 210, 211, 214, 215, 216, 228, 230, 262, 264], "cup": [7, 191, 203, 214], "infti": [7, 14, 29, 50, 51, 52, 56, 57, 59, 76, 78, 182, 191, 198, 202, 205, 211, 214, 215, 260, 264, 270], "pm": [7, 50, 76, 78, 183, 194, 202, 208, 211], "yi": 7, "ne": [7, 52, 57, 64, 76, 91, 183, 185, 188, 205, 211, 215], "composit": [7, 28, 32, 40, 42, 43, 51, 52, 69, 71, 78, 91, 94, 186, 188, 191, 194, 207, 214, 229], "2k": [7, 51, 76, 91, 208], "pariti": [7, 43], "product": [7, 25, 36, 39, 42, 43, 47, 49, 50, 51, 52, 53, 55, 56, 59, 61, 64, 66, 67, 74, 76, 78, 80, 81, 82, 84, 87, 91, 92, 100, 101, 102, 104, 115, 126, 128, 136, 140, 141, 144, 146, 147, 148, 150, 153, 155, 156, 158, 159, 161, 166, 167, 170, 171, 173, 177, 178, 179, 180, 182, 183, 184, 186, 188, 190, 191, 192, 195, 196, 197, 200, 203, 204, 207, 208, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 227, 230, 233, 240, 243, 247], "ge": [7, 15, 56, 57, 59, 76, 82, 87, 91, 180, 183, 188, 205, 233], "le": [7, 34, 47, 59, 76, 82, 91, 121, 188, 205, 215], "en": [7, 14, 15, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 79, 80, 81, 82, 84, 87, 91, 98, 100, 103, 130, 132, 133, 134, 136, 137, 138, 142, 143, 144, 147, 149, 150, 159, 161, 171, 173, 177, 191, 192, 198, 202, 203, 204, 211, 214, 215, 228, 233, 234, 240, 241, 245, 247, 249, 266], "wikipedia": [7, 14, 18, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 67, 68, 69, 78, 80, 81, 82, 84, 87, 91, 98, 100, 103, 130, 132, 133, 134, 136, 137, 138, 142, 143, 144, 147, 149, 150, 159, 161, 164, 171, 173, 177, 191, 198, 202, 203, 204, 211, 214, 215, 228, 233, 240, 241, 245, 247, 249, 264, 266, 268], "commutative_properti": [7, 51], "infin": [7, 29, 50, 56, 57, 59, 64, 76, 78, 87, 134, 186, 188, 191, 195, 200, 201, 202, 203, 207, 210, 211, 215], "skew": [7, 74, 91, 215], "hermitian_matrix": 7, "complex_numb": [7, 29, 51], "algebraic_numb": [7, 29, 51], "transcendental_numb": [7, 51], "extended_real_number_lin": 7, "real_numb": [7, 29], "imaginary_numb": [7, 29, 51], "rational_numb": [7, 29], "irrational_numb": [7, 29, 51], "parity_": [7, 51], "prime_numb": [7, 51, 91], "composite_numb": [7, 51], "positive_real_numb": 7, "negative_numb": [7, 51], "beyond": [7, 11, 19, 45, 67, 91, 125, 182, 185, 204, 207, 266], "immedi": [7, 12, 42, 51, 76, 81, 161, 182, 185, 227, 234], "redund": [7, 12, 42, 49, 81, 87, 211, 228], "simpli": [7, 8, 9, 11, 12, 15, 29, 34, 50, 51, 53, 57, 61, 82, 84, 87, 91, 93, 94, 101, 105, 113, 115, 125, 151, 156, 166, 176, 179, 185, 192, 203, 204, 205, 211, 214, 231, 234, 246], "is_real": [7, 18, 51, 53, 57, 58, 87, 173, 195, 220], "inconsist": [7, 18, 26, 28, 50, 166, 171, 174, 178, 207, 211, 214], "inconsistentassumpt": 7, "worth": [7, 12, 18, 171, 244, 246], "deal": [7, 33, 50, 51, 55, 63, 71, 76, 78, 97, 104, 108, 109, 113, 176, 178, 179, 183, 188, 191, 208, 209, 213, 224, 234, 236, 243, 248, 262, 264, 270], "reserv": [7, 113, 221, 228, 266], "is_zero_matrix": [7, 82, 184], "is_zero": [7, 12, 18, 66, 87, 182, 186, 191, 231, 266], "generalis": [7, 59, 76, 182], "gaussian": [7, 59, 78, 87, 91, 131, 187, 188, 191, 208, 213, 215, 256, 266], "notion": [7, 32, 166, 169, 182, 214, 243, 248], "likewis": [7, 14, 32, 116], "scheme": [7, 9, 12, 43, 50, 55, 180, 181, 188, 191, 220], "chain": [7, 18, 33, 42, 47, 51, 59, 68, 92, 178, 190, 215], "superset": [7, 31, 40, 46, 54, 128, 185, 203, 213], "vanilla": 7, "attach": [7, 45, 76, 92, 94, 108, 179, 227, 229, 234], "belong": [7, 15, 29, 32, 42, 47, 51, 74, 87, 161, 171, 178, 181, 182, 184, 185, 188, 190, 191, 202, 203, 207, 208, 214, 221], "is_commut": [7, 78, 150, 159, 233], "is_complex": [7, 51], "is_finit": [7, 51], "permit": [7, 43, 53, 57, 81, 91, 181], "formal": [7, 32, 50, 51, 59, 76, 81, 130, 166, 185, 187, 188, 199, 202], "littl": [7, 18, 32, 43, 61, 87, 91, 92, 115, 166, 189, 191, 195, 205, 207, 215, 230, 243], "difficult": [7, 15, 51, 87, 113, 192, 205, 211, 212, 214, 227, 249, 264, 270], "suit": [7, 11, 12, 15, 18, 32, 181, 191, 224, 226], "n1": [7, 33, 42, 51, 52, 113, 128, 130, 134, 170, 208, 215, 240], "n2": [7, 33, 42, 51, 52, 128, 130, 134, 208, 215], "misunderstand": 7, "is_nonneg": [7, 18, 186], "intent": [7, 33, 50, 51, 93, 228], "meaning": [7, 26, 28, 32, 52], "alon": [7, 52, 79, 188, 211, 213, 220, 233, 264, 265], "suffici": [7, 12, 14, 32, 33, 42, 43, 47, 51, 87, 166, 198, 202, 211, 215, 230, 270], "tempt": [7, 18, 51, 91], "meet": [7, 52, 202], "criteria": [7, 51, 265], "bear": [7, 15], "ordinari": [7, 8, 11, 22, 31, 33, 42, 51, 55, 57, 59, 69, 73, 74, 78, 88, 100, 122, 182, 184, 185, 194, 201, 209, 211, 216, 230, 264, 270], "noncommut": [7, 51, 74, 265], "entir": [7, 11, 12, 19, 42, 51, 52, 55, 59, 65, 67, 76, 90, 106, 126, 171, 182, 184, 190, 203, 220, 229, 231, 264, 270], "Such": [7, 12, 14, 33, 51, 67, 116, 182, 183, 190, 196, 204, 205, 207, 259, 265], "finiteset": [7, 31, 32, 214, 215, 271], "intersect": [7, 14, 31, 32, 42, 61, 62, 64, 65, 66, 67, 68, 134, 182, 191, 195, 201, 202, 214, 257], "s1": [7, 42, 50, 64, 67, 74, 100, 172, 182, 191, 198, 208, 233, 242], "s2": [7, 42, 43, 50, 64, 67, 100, 172, 182, 191, 198, 202, 208, 233, 242], "bool": [7, 21, 31, 33, 47, 49, 51, 52, 54, 57, 78, 79, 81, 82, 84, 87, 91, 93, 109, 145, 173, 175, 181, 190, 191, 193, 195, 196, 197, 202, 203, 207, 210, 213, 215, 227, 228, 233, 234, 240, 242, 262], "plai": [7, 50, 115, 123, 208, 262, 264, 265], "role": [7, 57, 193], "connect": [7, 45, 52, 53, 66, 67, 87, 92, 94, 105, 107, 115, 117, 182, 183, 184, 193, 211, 215, 233, 240], "is_finite_set": 7, "zero_matrix": 7, "setsymbol": 7, "concern": [7, 14, 31, 34, 50, 55, 91, 176, 181, 183, 184, 185, 194, 195, 196, 207, 208, 213, 227, 228, 230, 236], "semant": [7, 12, 84], "aspect": [7, 15, 87, 185], "is_numb": [7, 51, 59, 78], "is_compar": [7, 51], "capitalis": 7, "float": [7, 11, 18, 19, 33, 42, 57, 59, 66, 68, 78, 79, 82, 87, 91, 93, 98, 100, 128, 134, 175, 181, 185, 186, 195, 207, 213, 215, 226, 234, 236, 251, 259, 262], "faster": [7, 11, 33, 36, 51, 59, 82, 91, 92, 104, 106, 108, 109, 125, 184, 185, 186, 188, 190, 191, 192, 196, 198, 202, 207, 208, 211, 212, 214, 227, 230], "expr1": [7, 12, 100, 181, 213, 265], "4142135623731": [7, 195, 213], "primari": [7, 11, 12, 14, 15, 18, 51, 63, 81, 179, 182, 228, 234], "predict": [7, 161, 207, 233], "inequ": [7, 8, 18, 22, 51, 181, 188, 203, 205, 209], "expreal": 7, "restrict": [7, 18, 33, 40, 51, 52, 59, 87, 94, 95, 161, 182, 185, 190, 192, 210], "fuzzy_and": [7, 8, 18], "fuzzy_or": [7, 8], "is_extended_nonneg": 7, "classmethod": [7, 18, 25, 27, 28, 33, 35, 40, 42, 43, 45, 46, 51, 57, 58, 59, 66, 82, 87, 100, 147, 158, 159, 161, 184, 186, 190, 191, 195, 203, 221, 226], "is_extended_r": 7, "is_infinit": 7, "is_extended_neg": 7, "is_extended_posit": [7, 8], "self": [7, 14, 18, 25, 27, 28, 32, 33, 42, 43, 48, 50, 51, 53, 57, 60, 61, 62, 64, 65, 66, 67, 78, 82, 87, 91, 105, 115, 156, 161, 171, 173, 174, 182, 184, 186, 188, 190, 191, 195, 197, 202, 203, 221, 240], "arg": [7, 15, 18, 25, 27, 28, 29, 30, 31, 32, 33, 35, 42, 43, 45, 48, 50, 51, 52, 53, 55, 56, 58, 59, 61, 62, 64, 66, 67, 68, 73, 76, 78, 81, 82, 83, 84, 85, 87, 89, 91, 93, 100, 130, 136, 139, 141, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 171, 175, 179, 181, 184, 186, 188, 190, 191, 192, 195, 197, 198, 201, 202, 203, 204, 207, 211, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 233, 234, 236, 240, 241], "_eval_is_finit": 7, "is_extended_nonposit": 7, "_eval_is_algebra": 7, "is_nonzero": [7, 66], "_eval_is_integ": 7, "_eval_is_zero": [7, 18], "pick": [7, 17, 52, 56, 125, 155, 157, 270], "__new__": [7, 18, 33, 42, 51, 265], "verifi": [7, 20, 31, 42, 48, 52, 53, 113, 182, 188, 194, 211, 213, 214, 216, 217, 247, 270], "importantli": [7, 18, 192, 230], "reject": [7, 8, 91, 208, 236], "_eval_is_": 7, "is_algebra": [7, 51, 186], "minim": [7, 14, 18, 31, 42, 43, 47, 50, 51, 52, 76, 78, 81, 91, 105, 116, 130, 184, 185, 186, 187, 188, 191, 194, 204, 207, 208, 213, 233, 237], "interfer": [7, 195], "determinist": [7, 42, 78, 91, 188, 189], "reach": [7, 91, 100, 190, 191, 211], "advantag": [7, 13, 18, 28, 31, 33, 51, 52, 78, 81, 87, 91, 97, 165, 184, 185, 192, 203, 208, 211, 214, 230, 262, 264, 266, 270], "leav": [7, 18, 33, 51, 78, 87, 91, 109, 122, 145, 161, 202, 230, 259, 265, 270], "claus": [7, 81], "flow": [7, 190], "condit": [7, 8, 33, 42, 51, 53, 57, 59, 69, 70, 73, 74, 75, 77, 78, 81, 87, 91, 93, 94, 95, 100, 106, 109, 115, 122, 125, 128, 130, 174, 180, 192, 195, 198, 205, 208, 210, 211, 213, 214, 215, 220, 253, 270], "inner": [7, 50, 76, 87, 144, 147, 148, 153, 155, 156, 159, 161, 171, 174, 184, 190, 197, 240], "optimis": [7, 211], "elementari": [7, 8, 14, 18, 42, 51, 52, 55, 58, 59, 73, 76, 78, 82, 87, 91, 126, 154, 157, 187, 191, 192, 199, 233, 234, 243, 253], "stage": [7, 32, 50, 91, 202, 270], "briefli": [7, 183, 188], "canon": [7, 14, 33, 35, 40, 42, 43, 47, 51, 52, 53, 57, 67, 76, 81, 87, 91, 93, 108, 138, 142, 161, 163, 166, 168, 188, 196, 203, 204, 207, 213, 215, 221, 233, 270], "readi": [7, 12, 112, 185, 195, 211], "managedproperti": [7, 51], "metaclass": [7, 51], "relev": [7, 12, 14, 15, 33, 49, 64, 79, 80, 105, 108, 110, 115, 166, 175, 179, 185, 205, 211, 212, 221, 226, 247], "default_assumpt": 7, "initi": [7, 15, 27, 42, 46, 51, 52, 53, 56, 59, 67, 69, 70, 73, 74, 75, 76, 79, 91, 93, 95, 98, 100, 105, 108, 110, 112, 113, 115, 116, 121, 123, 124, 125, 128, 129, 133, 141, 150, 172, 173, 175, 179, 180, 188, 190, 191, 195, 201, 205, 207, 211, 213, 214, 220, 228, 235, 236, 240, 241, 242, 243, 244], "_ask": 7, "_eval_i": 7, "enumer": [7, 35, 38, 40, 43, 46, 54, 58, 76, 81, 91, 190, 191, 205, 230, 233], "randomis": [7, 223, 258], "unresolv": 7, "factrul": 7, "_assume_rul": 7, "preprocess": [7, 78, 193], "defined_fact": 7, "full_impl": 7, "defaultdict": [7, 51, 233], "precomput": [7, 56, 91, 234], "static": [7, 25, 33, 42, 43, 45, 51, 57, 64, 65, 66, 67, 84, 95, 115, 122, 181, 195, 201, 203, 215, 227], "knowabl": 7, "stdfactkb": 7, "whose": [7, 15, 18, 32, 34, 35, 40, 43, 50, 51, 52, 57, 61, 65, 67, 68, 74, 78, 81, 87, 91, 110, 123, 133, 156, 166, 172, 173, 176, 179, 183, 184, 186, 190, 191, 202, 203, 207, 211, 212, 213, 215, 221, 226, 230, 233, 234, 240, 242, 244, 246], "_eval_is_r": [7, 18, 191], "_assumpt": [7, 51], "share": [7, 12, 18, 52, 91, 186, 190, 195, 215, 228], "amongst": [7, 213], "exhaust": [7, 12, 23, 205, 233, 263], "indirectli": 7, "execut": [7, 20, 33, 79, 82, 128, 181, 195, 211, 214, 224, 226, 228, 229, 234, 236, 239, 250, 264, 269], "manifest": [7, 183], "jointli": 7, "fundament": [7, 18, 31, 34, 41, 69, 76, 78, 87, 166, 185, 190, 208, 211, 215, 266], "theoret": [7, 32, 34, 42, 52, 189, 190, 205, 262], "upon": [7, 33, 51, 91, 112, 115, 123, 124, 125, 128, 155, 161, 176, 178, 179, 203, 211, 220, 227, 246, 270], "relat": [8, 11, 12, 14, 15, 26, 28, 29, 31, 34, 35, 41, 42, 49, 53, 56, 57, 58, 67, 73, 76, 78, 82, 87, 91, 103, 116, 119, 122, 128, 130, 135, 143, 145, 171, 174, 177, 178, 180, 181, 182, 188, 190, 191, 192, 194, 195, 199, 201, 202, 205, 207, 208, 210, 211, 213, 214, 215, 233, 247, 251, 253, 270], "isposit": 8, "xpo": 8, "xneg": 8, "mayb": [8, 9], "strictgreaterthan": 8, "analogu": [8, 29, 50, 65, 185, 186], "piecewis": [8, 18, 33, 50, 58, 59, 78, 94, 159, 195, 197, 198, 213, 214, 215, 234, 260], "nonetyp": [8, 33], "consider": [8, 12, 51, 92, 104, 185, 194, 203, 208, 211, 243], "quirk": 8, "did": [8, 11, 15, 51, 78, 91, 104, 119, 166, 188, 192, 203, 213, 224, 234, 262, 264, 270], "both_posit": 8, "falsei": 8, "both_positive_bett": 8, "negat": [8, 18, 29, 51, 57, 81, 100, 171, 184, 186, 188, 191], "branch": [8, 13, 31, 51, 56, 57, 58, 59, 77, 192, 205, 214, 265, 270], "fuzzy_not": [8, 18], "both_positive_best": 8, "simpler": [8, 18, 51, 55, 59, 75, 76, 119, 179, 188, 204, 205, 207, 211, 213, 214, 270], "silent": [8, 55, 91, 227], "easier": [8, 12, 51, 95, 113, 115, 178, 186, 190, 192, 205, 211, 214, 228, 234, 243, 264, 270, 271], "carefulli": [8, 51, 171, 188, 197], "truth": [8, 26, 27, 28, 29, 30, 51, 82, 207, 253], "bitwis": [8, 54, 81], "produc": [8, 11, 14, 15, 18, 32, 42, 51, 52, 64, 78, 81, 87, 171, 185, 190, 191, 195, 202, 211, 212, 213, 215, 224, 226, 230, 231, 233, 269], "footnot": [8, 166, 265, 266, 269], "machin": [9, 11, 13, 14, 196, 207, 211, 259], "imag": [9, 11, 42, 118, 128, 130, 134, 182, 186, 188, 195, 203, 214], "os": [9, 226, 236, 237], "choos": [9, 14, 42, 47, 51, 53, 56, 87, 91, 95, 98, 116, 126, 161, 165, 171, 178, 179, 187, 191, 192, 195, 202, 204, 205, 211, 212, 215, 226, 231, 270], "cd": [9, 13, 14, 214, 233], "dockerfil": 9, "htmldoc": 9, "sympy_htmldoc": 9, "apt": [9, 13], "python3": [9, 11, 33, 93, 195, 226], "sphinx": [9, 12, 15, 16, 57, 211, 226, 231], "texliv": [9, 11, 195], "dvipng": 9, "librsvg2": 9, "bin": [9, 10, 11, 13, 14, 79, 195, 226, 233], "imagemagick": 9, "docbook2x": 9, "graphviz": [9, 15, 265, 269], "pip": [9, 11, 20, 93], "txt": [9, 195], "mpmath": [9, 11, 13, 18, 19, 33, 56, 59, 87, 92, 128, 185, 186, 195, 203, 213, 229, 234], "packag": [9, 11, 20, 22, 79, 92, 93, 97, 122, 128, 175, 195, 226, 237, 245, 246, 264], "rpm": 9, "distribut": [9, 11, 20, 42, 49, 51, 59, 67, 78, 94, 95, 160, 183, 186, 187, 191, 195, 221], "prerequisit": 9, "dnf": [9, 81], "medium": [9, 18, 130, 131, 134, 135, 145, 188, 256], "tool": [9, 15, 18, 19, 42, 79, 86, 87, 92, 100, 128, 179, 182, 187, 188, 195, 206, 227, 233, 239, 247, 252, 254], "homebrew": 9, "brew": 9, "sh": 9, "docbook": 9, "librsvg": 9, "conda": [9, 11, 13, 20, 93], "forg": [9, 11, 93], "success": [9, 15, 32, 42, 51, 59, 76, 78, 91, 115, 171, 182, 188, 190, 203, 204, 211, 213, 214, 215, 233, 240, 241], "tricki": [9, 51, 76], "subsystem": [9, 195], "linux": [9, 20], "workaround": [9, 234], "microsoftdoc": 9, "wsl": 9, "blob": [9, 78], "win10": 9, "md": [9, 12, 15, 224, 231], "prompt": [9, 14], "transfer": [9, 97, 98, 100, 130, 214], "termin": [9, 42, 51, 57, 79, 91, 175, 195, 202, 226, 269], "html": [9, 11, 12, 14, 15, 29, 33, 35, 43, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 68, 78, 79, 87, 91, 98, 189, 195, 198, 200, 203, 204, 208, 211, 215, 227, 229, 231, 233, 234, 266], "directori": [9, 11, 14, 15, 20, 28, 33, 211, 226, 227, 236], "folder": 9, "prepend": [9, 32, 42, 87, 100, 168, 221], "mnt": 9, "navig": 9, "cygwin": 9, "msys2": 9, "virtual": [9, 12, 16, 20, 51, 67, 179, 263], "partial": [9, 31, 42, 49, 50, 51, 53, 55, 56, 57, 91, 93, 128, 155, 171, 174, 176, 186, 187, 189, 192, 195, 197, 204, 207, 209, 211, 212, 216, 222, 240, 246, 260, 270], "workflow": [9, 11, 13, 17, 23, 128, 185, 228, 234], "viabl": [9, 52], "64": [9, 36, 42, 91, 127, 180, 194, 204, 213, 215, 226, 233, 236, 269], "chocolatei": 9, "choco": 9, "rsvg": 9, "chose": [9, 52], "rm": [9, 33], "Be": [9, 12, 14, 18, 31, 51, 81, 87, 188, 211, 214, 222, 234], "sure": [9, 12, 14, 15, 18, 33, 42, 51, 63, 112, 113, 141, 166, 191, 192, 202, 211, 213, 214, 227, 233, 262, 265, 270], "filesystem": 9, "makefil": 9, "subdirectori": 9, "svg": [9, 79, 175], "_build": [9, 14], "web": [9, 15, 52, 63, 128, 177, 189, 208], "browser": 9, "drop": [9, 57, 78, 92, 119, 186, 188], "menu": 9, "told": 9, "load": [9, 33, 51, 79, 94, 95, 105, 108, 112, 117, 129, 141, 175], "ll": [9, 32, 49, 87, 116, 178, 179, 224], "step": [9, 12, 13, 16, 18, 23, 31, 33, 42, 46, 47, 50, 51, 52, 59, 75, 76, 78, 87, 91, 92, 99, 108, 119, 122, 123, 128, 129, 163, 174, 179, 181, 185, 186, 188, 191, 195, 196, 197, 200, 203, 204, 205, 207, 208, 209, 211, 213, 215, 220, 227, 233, 234, 260], "reload": 9, "monitor": 9, "detect": [9, 11, 24, 31, 84, 87, 91, 181, 185, 195, 211, 212, 214, 216, 233, 251, 269], "procedur": [9, 34, 36, 42, 48, 49, 50, 78, 87, 108, 126, 188, 190, 207, 208, 213, 214, 240, 266], "8000": [9, 94], "localhost": 9, "port": [9, 93, 115, 133], "finish": [9, 33, 34, 155, 229, 267], "stop": [9, 12, 33, 34, 43, 51, 87, 91, 181, 201, 203, 211, 215], "ctrl": 9, "detach": 9, "mode": [9, 10, 51, 79, 93, 133, 156, 175, 191, 195, 226, 237, 257], "livehtml": 9, "action": [9, 11, 15, 42, 80, 153, 156, 166, 191, 207, 214], "99": [9, 33, 51, 52, 87, 91, 188, 189], "math": [9, 11, 14, 18, 25, 29, 32, 34, 42, 51, 59, 61, 78, 87, 91, 92, 113, 122, 176, 181, 186, 189, 194, 195, 211, 212, 215, 227, 228, 234, 244, 245, 246, 247, 248, 252, 259, 260, 264], "doubl": [9, 14, 15, 31, 33, 47, 51, 52, 58, 87, 93, 107, 121, 122, 178, 185, 195, 204, 205, 228, 270], "backtick": [9, 14, 15], "render": [9, 11, 14, 15, 33, 51, 79, 175, 181, 195, 269], "resourc": [9, 14, 15, 18, 87, 189, 211, 227, 237], "style": [9, 16, 21, 32, 51, 79, 155, 175, 181, 195, 214, 269], "guid": [9, 11, 16, 17, 18, 20, 32, 51, 58, 113, 125, 195, 221, 254, 256, 263, 267, 268], "tip": [9, 14, 21, 51, 125, 211, 212, 270], "xelatex": 9, "latexmk": 9, "chrome": 9, "chromium": 9, "xetex": 9, "font": [9, 79, 175, 195], "lmodern": 9, "cask": 9, "tap": 9, "dejavu": 9, "strawberryperl": 9, "miktex": [9, 11], "dejavufont": 9, "appdata": 9, "microsoft": 9, "click": 9, "dev": [9, 11, 12, 13, 231], "sympy_debug": [10, 78, 236], "unix": [10, 226, 227], "window": [10, 236, 257], "nice": [10, 12, 14, 20, 51, 63, 87, 91, 113, 125, 128, 181, 195, 205, 236, 265], "enabl": [11, 15, 18, 20, 51, 78, 79, 91, 95, 113, 115, 161, 171, 175, 195, 211, 215, 226, 231, 234, 266, 269, 270], "certain": [11, 15, 18, 20, 30, 32, 33, 42, 49, 51, 55, 59, 67, 76, 78, 91, 93, 125, 171, 172, 182, 185, 188, 190, 195, 196, 202, 205, 207, 208, 211, 214, 215, 217, 228, 229, 234, 240, 242, 248, 270], "mention": [11, 12, 14, 18, 42, 76, 78, 100, 115, 129, 130, 176, 205, 208, 211, 215, 243, 244, 245, 246, 266], "incomplet": [11, 14, 15, 51, 56, 59, 183, 185, 191, 197, 213, 214], "webpag": [11, 15], "io": [11, 15, 79, 195, 234], "arithmet": [11, 19, 33, 51, 52, 55, 82, 87, 91, 150, 157, 180, 181, 182, 184, 185, 186, 188, 189, 193, 196], "hood": 11, "importerror": 11, "extern": [11, 20, 79, 93, 98, 115, 122, 175, 185, 186, 196, 203, 207, 215, 226, 227], "latest": [11, 13, 20, 32, 229, 231, 234], "git": [11, 16, 19], "repositori": [11, 13, 15, 20], "vast": [11, 78, 187], "wrap": [11, 12, 14, 26, 27, 28, 29, 33, 40, 51, 57, 79, 92, 175, 179, 181, 184, 185, 188, 195, 198, 214, 220, 227, 231, 234, 236, 265], "ci": [11, 15, 59, 76, 195, 269], "local": [11, 24, 26, 27, 28, 51, 53, 76, 93, 119, 121, 173, 182, 188, 213, 226], "gmpy2": [11, 185, 186], "gmp": 11, "speed": [11, 14, 28, 33, 42, 51, 52, 55, 82, 91, 92, 102, 107, 108, 109, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 128, 129, 132, 135, 170, 171, 174, 179, 180, 192, 195, 196, 202, 207, 211, 227, 230, 233, 265, 266], "experi": [11, 115, 214, 215], "interfac": [11, 15, 31, 51, 79, 107, 122, 130, 156, 175, 177, 179, 185, 188, 193, 214, 227, 228, 257], "notebook": [11, 18, 20, 79, 175, 234, 268, 269], "init_sess": [11, 79, 269], "flag": [11, 12, 18, 31, 33, 42, 43, 47, 49, 51, 64, 66, 78, 81, 82, 83, 87, 91, 113, 145, 181, 186, 188, 191, 192, 195, 196, 197, 203, 207, 208, 211, 213, 214, 221, 226, 227, 233, 236, 259, 270], "auto_symbol": [11, 79, 93], "auto_int_to_integ": [11, 79], "qt": 11, "mathjax": [11, 15, 79, 175, 269], "preview": [11, 32, 229, 258], "save": [11, 31, 51, 87, 91, 181, 194, 213, 230], "viewer": [11, 15, 32, 195, 229], "parser": [11, 84, 93, 122, 128, 226], "mathematca": 11, "maxima": [11, 93, 214], "parse_maxima": [11, 93], "antlr": [11, 93, 113], "runtim": [11, 33, 51, 109, 258], "autolev": [11, 115, 122], "antlr4": [11, 93], "compil": [11, 33, 79, 92, 104, 128, 175, 195, 207, 220, 226, 227, 228, 250, 264], "clang": [11, 93], "bind": [11, 33, 195, 227], "parse_c": 11, "lfortran": [11, 93], "dpll": 11, "sat": [11, 27], "solver": [11, 14, 27, 59, 87, 91, 112, 122, 128, 129, 184, 187, 207, 208, 212, 226, 250, 251, 261, 263], "pycosat": 11, "pysat": 11, "minisat": 11, "minisat22": 11, "heavi": [11, 215, 265], "rudimentari": [11, 18, 188], "text": [11, 12, 14, 15, 18, 20, 33, 42, 52, 56, 57, 59, 69, 76, 79, 82, 87, 91, 126, 166, 175, 181, 182, 195, 202, 208, 211, 214, 215, 226], "pyglet": [11, 195, 257], "pygletplot": [11, 181], "vehicl": 11, "principl": [11, 52, 82, 91, 132, 182, 183, 188, 204, 213], "third": [11, 12, 33, 42, 43, 51, 59, 61, 65, 100, 158, 164, 178, 183, 191, 205, 211, 214, 215, 231, 233, 247, 260, 265], "scipi": [11, 33, 51, 59, 104, 128, 155, 195, 215, 227, 234, 259, 268], "cupi": [11, 92], "cuda": [11, 92], "gpu": [11, 92, 128], "jax": [11, 92, 234], "xla": [11, 92], "tpu": [11, 92], "tensorflow": [11, 234], "learn": [11, 13, 15, 22, 87, 126, 179, 204, 214, 259, 262, 263, 264, 268], "numexpr": [11, 234], "subpackag": [11, 250], "f2py": [11, 33, 92, 227, 228], "ufuncifi": [11, 33, 227, 251], "cython": [11, 33, 92, 128, 227], "codegen": [11, 18, 92, 195, 227, 232, 252, 258], "llvm": 11, "gcc": [11, 228], "ifort": 11, "therefor": [11, 12, 14, 18, 34, 42, 47, 51, 55, 59, 67, 80, 91, 100, 176, 179, 180, 181, 185, 188, 191, 195, 211, 214, 215, 216, 221, 240, 241, 243, 244, 246, 248], "aeseara": 11, "graph": [11, 14, 43, 59, 80, 87, 92, 184, 195, 214, 233, 265, 269], "llvmlite": 11, "llvmjitcod": 11, "jit": [11, 204], "llvm_callabl": 11, "tensorflow_cod": 11, "wurlitz": 11, "captur": [11, 51, 233], "stat": [11, 250, 257], "pymc": [11, 215], "use_symengin": 11, "mechan": [11, 18, 21, 51, 74, 78, 94, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 143, 147, 150, 156, 158, 159, 160, 163, 170, 171, 177, 180, 256, 257], "liealgebra": [11, 80], "matchpi": 11, "softwar": [11, 15, 78, 189, 264], "_sage_": 11, "import_modul": 11, "runner": [11, 226], "script": [11, 13, 14, 24, 59, 175, 227], "cloudpickl": 11, "pickl": 11, "util": [11, 12, 13, 14, 15, 31, 38, 40, 42, 43, 56, 57, 62, 63, 64, 67, 81, 82, 86, 91, 92, 131, 165, 168, 184, 187, 188, 192, 195, 207, 208, 209, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 252, 256], "test_pickl": 11, "pdf": [11, 15, 16, 23, 31, 32, 42, 52, 54, 56, 73, 78, 87, 91, 94, 95, 98, 181, 189, 194, 195, 198, 204, 207, 208, 211, 215, 233, 240], "view": [11, 14, 16, 33, 34, 51, 87, 94, 163, 166, 179, 181, 188, 195, 211, 214, 228, 230, 233], "host": [11, 15], "onlin": [11, 14, 108, 208, 233], "sympy_benchmark": 11, "readm": 11, "yourself": [11, 18, 33, 115, 229, 260], "reproduc": [11, 191, 226, 270], "asv": 11, "airspe": 11, "veloc": [11, 104, 105, 107, 108, 110, 115, 116, 119, 120, 121, 125, 126, 128, 135, 163, 166, 170, 171, 174, 176, 179, 246, 248], "properli": [12, 18, 32, 51, 57, 63, 76, 87, 109, 113, 123, 138, 142, 145, 159, 183, 185, 195, 211, 214, 224, 228, 234, 266, 271], "someon": [12, 211, 230, 263], "screen": [12, 79, 175, 179, 226, 269], "opportun": [12, 14, 207], "lightli": 12, "pain": 12, "frustrat": 12, "go": [12, 13, 14, 15, 18, 20, 32, 33, 42, 52, 57, 76, 108, 113, 115, 126, 128, 129, 155, 166, 174, 181, 190, 191, 202, 205, 211, 262, 264, 265, 268, 270], "seek": [12, 213], "stabl": [12, 14, 18, 51, 79, 87, 93, 100, 259], "supplant": 12, "newer": [12, 178, 213], "solveset": [12, 18, 128, 193, 209, 210, 213, 271], "superior": [12, 195], "older": [12, 15, 74, 113, 185, 195, 213], "cogniz": 12, "attr": [12, 33], "unsur": [12, 14], "mark": [12, 14, 15, 98, 134, 146, 208, 224, 229, 231], "privat": [12, 14, 51, 52, 113, 181, 228], "experiment": [12, 207, 258], "unnecessari": [12, 14, 15, 29, 33, 191, 194, 215, 226, 263], "usabl": [12, 185, 186, 195, 214, 264], "breakag": 12, "serious": 12, "taken": [12, 33, 34, 39, 42, 49, 50, 51, 56, 57, 59, 68, 82, 91, 100, 102, 104, 105, 125, 128, 158, 164, 171, 174, 180, 181, 185, 190, 191, 198, 202, 204, 205, 214, 215, 220, 228, 233, 240], "commun": [12, 15, 20, 180, 211, 213, 215, 266], "count": [12, 15, 43, 50, 51, 52, 56, 61, 81, 87, 90, 91, 156, 191, 203, 204, 207, 214, 215, 221, 230, 233], "basi": [12, 51, 53, 80, 84, 87, 105, 119, 121, 146, 155, 156, 158, 161, 163, 166, 169, 170, 171, 176, 178, 180, 182, 184, 186, 187, 191, 194, 205, 207, 213, 214, 216, 221, 242, 243, 246, 268], "constitut": [12, 15, 78, 91, 195], "codifi": 12, "clean": [12, 226], "categor": [12, 87, 182], "guidelin": [12, 16, 23, 211], "convent": [12, 14, 15, 17, 18, 42, 43, 47, 50, 51, 52, 56, 57, 59, 61, 66, 76, 78, 81, 93, 94, 95, 100, 103, 115, 128, 130, 134, 155, 156, 158, 163, 164, 176, 181, 195, 211, 212, 214, 215, 221, 248, 262, 270], "prefix": [12, 33, 51, 87, 91, 165, 168, 169, 185, 188, 192, 208, 211, 227, 228, 233, 256], "univers": [12, 33, 180, 189, 203, 208, 213, 214], "adher": [12, 15, 76], "despit": [12, 51, 270], "harm": 12, "peopl": [12, 14, 23, 54, 59, 78, 87, 166, 215], "upgrad": [12, 24], "fire": 12, "uncondition": 12, "defeat": [12, 211], "heavili": [12, 202, 212], "easi": [12, 19, 21, 39, 43, 51, 59, 76, 92, 110, 116, 122, 178, 182, 185, 190, 195, 202, 205, 208, 211, 214, 219, 220, 221, 259, 260, 262, 263, 264, 265, 266, 269], "account": [12, 57, 87, 198, 207, 211], "nonetheless": [12, 52, 163, 207, 211], "deprecat": 12, "come": [12, 20, 42, 47, 49, 50, 51, 57, 59, 76, 78, 87, 92, 104, 113, 115, 123, 164, 179, 182, 185, 188, 190, 191, 205, 208, 211, 214, 224, 226, 231, 234, 262, 264, 265, 268, 270], "especi": [12, 14, 18, 50, 87, 104, 113, 128, 155, 170, 179, 207, 211, 213, 226, 259, 260], "migrat": 12, "lengthen": 12, "impos": [12, 95], "mainten": [12, 28], "burden": [12, 195], "schedul": 12, "Being": [12, 47, 61, 67, 185], "assur": [12, 91, 191], "secondli": [12, 18, 205], "rigor": [12, 59, 179, 228], "surfac": [12, 57, 59, 65, 76, 95, 130, 134, 161, 181, 207, 240, 247], "enough": [12, 14, 42, 51, 55, 78, 87, 90, 91, 100, 113, 128, 186, 188, 195, 211, 260, 262], "backport": 12, "extrem": [12, 42, 55, 61, 67, 78, 84, 125, 179, 207, 215], "model": [12, 55, 81, 91, 100, 109, 115, 116, 117, 118, 133, 191, 204, 215], "temptat": [12, 204, 270], "fudg": 12, "earli": [12, 51, 91, 150, 208], "acceler": [12, 92, 110, 115, 119, 121, 125, 126, 128, 164, 171, 174, 176, 199, 230, 248], "myst": [12, 15], "checkbox": 12, "tag": [12, 195, 213], "nest": [12, 51, 53, 57, 59, 78, 82, 100, 183, 185, 188, 195, 205, 207, 210, 214, 215, 216, 217, 219, 222, 233, 234, 265], "per": [12, 52, 87, 92, 135, 171, 176, 181, 186, 191, 192, 240, 243, 245, 248], "sympy_deprecation_warn": [12, 224, 229, 231], "multilin": [12, 195], "deprecated_since_vers": [12, 224, 229, 231], "active_deprecations_target": [12, 224, 229, 231], "target": [12, 14, 31, 32, 33, 51, 91, 106, 141, 145, 146, 204, 207, 210, 213, 214, 224, 227, 228, 231, 270], "stacklevel": [12, 224, 229, 231], "visual": [12, 51, 91, 95, 100, 122, 194, 207], "src": [12, 14, 15, 93, 211, 226, 231], "cross": [12, 15, 16, 51, 61, 67, 82, 87, 94, 95, 107, 120, 126, 128, 141, 171, 177, 178, 179, 208, 240, 243, 245, 246], "xyz": [12, 63, 93, 94, 171, 179, 240, 241, 244], "header": [12, 33, 227, 228], "warns_deprecated_sympi": [12, 224, 229, 231], "merg": [12, 33, 42, 43, 51, 169, 195, 203, 215, 226, 233, 234], "decor": [12, 18, 42, 51, 59, 224, 226, 231, 232, 235, 236, 258], "emit": [12, 195, 224, 231], "assert": [12, 32, 40, 41, 42, 43, 51, 61, 63, 93, 125, 203, 211, 212, 224, 231, 233], "behavior1": 12, "behavior2": 12, "ignore_warn": [12, 224, 229, 231, 234], "trigger": [12, 18, 43, 93, 161, 224], "somewher": [12, 14, 15, 33], "paragraph": [12, 14, 15, 18, 32], "metadata": [12, 32, 229, 231], "rst": [12, 14, 15, 34, 211, 226], "markdown": [12, 16], "markup": [12, 195], "clearli": [12, 14, 18, 91, 179, 185, 205, 266], "delin": 12, "newlin": [12, 87, 236], "charact": [12, 14, 15, 51, 52, 76, 79, 93, 141, 171, 175, 195, 211, 226, 228, 231, 236, 262, 264, 269], "larger": [12, 15, 18, 33, 42, 43, 50, 51, 52, 59, 76, 84, 87, 91, 116, 120, 186, 192, 196, 202, 207, 213, 228, 230, 262, 270], "simplify_thi": [12, 14, 229], "ref": [12, 42, 57, 87, 98, 128, 200, 215, 229, 266], "is_this_zero": [12, 231], "summar": [12, 226, 270], "fit": [12, 32, 76, 87, 90, 91, 179, 195, 211, 236, 265], "word": [12, 15, 18, 29, 38, 47, 50, 51, 52, 57, 59, 81, 100, 113, 126, 182, 185, 190, 207, 208, 211, 213, 228, 240, 244, 262], "uniqu": [12, 31, 32, 34, 42, 45, 47, 51, 52, 53, 56, 59, 66, 69, 74, 78, 80, 81, 87, 91, 107, 150, 159, 171, 179, 182, 183, 185, 188, 190, 196, 200, 207, 208, 211, 213, 214, 215, 219, 228, 233, 236, 243, 248, 262, 265], "across": [12, 15, 42, 49, 51, 62, 78, 95, 160, 161, 168, 181, 195, 230, 232, 233, 234, 268], "__init__": [12, 14, 18, 51, 108, 190, 240, 241, 265], "func_nam": [12, 33, 57, 82, 236], "simplfiy_thi": 12, "trivial": [12, 34, 42, 47, 50, 51, 52, 57, 66, 81, 84, 87, 91, 123, 161, 182, 183, 188, 191, 205, 208, 211, 214, 219], "dozen": [12, 18, 270], "search": [12, 14, 31, 42, 43, 47, 49, 51, 57, 87, 91, 113, 182, 190, 191, 204, 205, 207, 209, 212, 215, 227], "upcom": 12, "bot": 12, "push": [13, 76], "handbook": [13, 14, 34, 41, 42, 49, 59, 91], "internet": 13, "nn": 13, "brows": 13, "clone": [13, 20, 188], "download": [13, 15, 20, 32, 73, 189, 204, 211, 215, 240, 264], "77": [13, 40, 59, 87, 91, 194, 195, 228], "mib": 13, "remot": [13, 51], "collabor": 13, "upstream": 13, "fetch": 13, "checkout": [13, 32], "isol": [13, 31, 57, 186, 190, 191, 192, 213, 228], "flake8": 13, "usernam": 13, "consult": [13, 34], "test_bas": [13, 226], "similari": 13, "qualiti": [13, 92, 195], "code_qu": 13, "fdiff": [14, 18, 33, 51, 57, 58, 59], "argindex": [14, 18, 33, 51, 57, 58, 59], "heavisid": [14, 58, 76, 78, 195], "diracdelta": [14, 58, 78, 156, 161, 195], "scope": [14, 33, 122, 125, 224, 270], "od": [14, 18, 74, 108, 112, 122, 128, 209, 212, 271], "aim": [14, 15, 19, 69, 76, 166, 182, 205, 211, 214, 263, 264], "comment": [14, 15, 33, 42, 113, 115, 192, 195, 228, 233], "distract": 14, "consum": [14, 33, 59, 109, 125], "human": [14, 76, 163, 191, 195], "beings": 14, "english": [14, 52], "reader": [14, 15, 18, 32, 34, 126, 182, 230, 263, 268], "machineri": [14, 51, 190, 234], "platform": [14, 51, 161, 179, 211, 227], "restructuredtext": [14, 15], "concis": [14, 128], "quick": [14, 15, 18, 51, 87, 91, 207, 213, 234], "tripl": [14, 68, 87, 179, 180, 182, 190, 236], "raw": [14, 15, 33, 51, 52, 57, 92, 93, 155, 160, 185, 186, 191, 203, 207, 269], "backslash": [14, 51, 195], "blank": [14, 93, 109, 181], "close": [14, 33, 50, 51, 55, 56, 59, 67, 69, 76, 78, 80, 100, 181, 182, 183, 189, 190, 203, 213, 214, 228, 260, 270], "rare": [14, 18, 51, 211, 215, 224, 262], "underlin": [14, 15], "numpydoc": [14, 15], "review": [14, 15, 127], "plural": [14, 15], "clutter": 14, "amount": [14, 32, 51, 52, 63, 122, 171, 176, 179, 188, 198, 226, 240, 241], "notifi": 14, "awai": [14, 32, 34, 52, 94, 95, 115, 190, 195], "label": [14, 32, 33, 45, 51, 61, 74, 78, 134, 141, 145, 150, 159, 161, 181, 195, 196, 198, 207, 220, 221, 269], "elabor": [14, 21, 23, 176, 246], "suffic": [14, 183], "clarifi": 14, "thought": [14, 51, 202, 211, 262, 265], "perfect": [14, 18, 42, 51, 91, 208, 214, 264, 265], "test_": [14, 226], "coverage_doctest": 14, "coverag": 14, "6868680200532414": 14, "dsolv": [14, 212, 213, 260, 264, 271], "hint": [14, 18, 32, 35, 42, 51, 54, 57, 78, 82, 87, 91, 100, 128, 138, 142, 158, 160, 161, 171, 191, 202, 205, 209, 213, 270], "1st_exact": 14, "readabl": [14, 24, 32, 79, 104, 191, 194, 195, 202, 204, 237], "accept": [14, 18, 32, 33, 42, 51, 57, 65, 78, 81, 82, 84, 87, 90, 93, 113, 155, 171, 175, 181, 190, 191, 194, 195, 196, 203, 205, 207, 213, 227, 234, 240, 241, 244, 266], "30": [14, 25, 31, 33, 37, 51, 52, 54, 55, 56, 59, 65, 67, 78, 82, 87, 88, 91, 94, 95, 113, 134, 184, 186, 190, 191, 195, 201, 204, 207, 215, 216, 270], "13": [14, 25, 33, 40, 42, 47, 51, 52, 54, 56, 59, 63, 64, 65, 66, 76, 81, 87, 91, 95, 98, 100, 113, 126, 181, 188, 190, 191, 192, 194, 195, 201, 208, 210, 212, 213, 215, 216, 226, 227, 249], "14": [14, 33, 40, 42, 46, 47, 49, 51, 52, 56, 57, 59, 76, 87, 88, 91, 92, 94, 98, 113, 180, 181, 184, 186, 188, 189, 190, 191, 192, 194, 195, 204, 207, 208, 211, 213, 215, 216, 260], "16": [14, 25, 31, 33, 42, 43, 46, 50, 51, 52, 56, 59, 60, 61, 65, 76, 78, 81, 87, 88, 90, 91, 95, 176, 183, 184, 185, 188, 189, 190, 191, 194, 195, 201, 203, 204, 205, 208, 215, 216, 233, 240, 248, 266], "18": [14, 42, 43, 54, 56, 59, 61, 64, 67, 83, 87, 91, 95, 98, 100, 102, 172, 180, 188, 189, 194, 195, 203, 204, 208, 211, 213, 214, 215, 216, 242], "19": [14, 42, 51, 54, 59, 61, 64, 67, 87, 91, 93, 94, 186, 190, 191, 194, 204, 208, 210, 213, 227, 259], "23": [14, 31, 42, 43, 51, 54, 57, 59, 65, 67, 87, 91, 94, 126, 186, 191, 194, 201, 208, 233], "24": [14, 25, 31, 39, 43, 44, 51, 54, 56, 59, 65, 73, 78, 87, 91, 94, 95, 98, 100, 158, 168, 180, 186, 188, 190, 191, 192, 194, 197, 202, 208, 211, 215, 230, 233, 249, 260, 266], "26": [14, 40, 51, 52, 54, 63, 87, 91, 94, 95, 191, 208, 215], "27": [14, 33, 34, 42, 46, 56, 61, 87, 91, 94, 95, 100, 102, 188, 213], "28": [14, 33, 42, 50, 54, 55, 59, 87, 91, 115, 204, 208, 211, 265], "29": [14, 25, 40, 42, 43, 51, 52, 54, 56, 57, 64, 65, 87, 91, 100, 150, 185, 203, 215], "enclos": [14, 61, 62, 67, 90, 101, 195, 205, 234], "colon": [14, 51], "absent": [14, 35], "signatur": [14, 18, 27, 28, 43, 51, 87, 228, 229, 233, 234], "brace": [14, 56, 113, 195], "opt_cs": 14, "optim": [14, 33, 35, 42, 55, 91, 104, 128, 141, 145, 191, 195, 196, 204, 207, 215, 227], "fragment": [14, 52], "embed": [14, 15, 19, 31, 43, 51, 79, 190], "hyperlink": 14, "classnam": 14, "erf": [14, 59, 76, 78, 195, 205, 215], "gauss": [14, 59, 78, 87, 130, 183, 190, 193, 213, 214], "erfc": [14, 59, 76, 195, 215], "complementari": [14, 59, 100], "erfi": [14, 59, 76, 195], "erf2": [14, 59, 195], "erfinv": [14, 59, 195, 215], "invers": [14, 25, 42, 43, 51, 52, 53, 58, 59, 77, 78, 84, 87, 91, 108, 150, 154, 155, 158, 163, 166, 182, 183, 184, 186, 188, 191, 192, 195, 197, 205, 207, 211, 213, 214, 215, 233, 266, 270], "erfcinv": [14, 59, 195], "erf2inv": [14, 59, 195], "besselj": [14, 59, 73, 195, 207, 211, 264], "besselbas": [14, 59], "bessel": [14, 15, 57, 58, 69, 78, 191, 207, 211, 215, 264], "bess": [14, 59, 195, 207, 211, 215], "besselk": [14, 59, 195, 215], "cite": [14, 21], "citat": [14, 50, 189], "augment": [14, 33, 87, 108, 123, 124, 128, 193, 213, 214, 231, 234, 271], "freeli": [14, 24, 85, 182], "wolfram": [14, 29, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 78, 87, 91, 93, 189, 195, 197, 198, 200, 203, 208, 215, 233, 266], "mathworld": [14, 29, 44, 45, 51, 52, 54, 56, 57, 59, 61, 67, 78, 87, 91, 189, 198, 203, 208, 215, 233], "nist": [14, 56, 57, 59, 166], "dlmf": [14, 56, 57, 59], "suffer": 14, "rot": [14, 67, 158], "publish": [14, 76, 205], "clickabl": 14, "kozen89": [14, 188, 189], "kozen": [14, 189], "landau": [14, 189, 260], "decomposit": [14, 42, 49, 83, 84, 87, 184, 186, 187, 188, 189, 197, 270], "1989": [14, 189, 213], "pp": [14, 42, 43, 49, 50, 51, 52, 56, 57, 78, 82, 87, 116, 125, 180, 183, 188, 189, 211, 212, 215], "445": [14, 189], "456": [14, 51, 189], "abramowitz": [14, 59], "milton": [14, 59], "stegun": [14, 59], "iren": [14, 59], "chapter": [14, 42, 59, 91, 113, 189], "ed": [14, 43, 59, 87, 189, 213, 215], "1965": [14, 59, 82], "luke": [14, 59, 76, 205], "Their": [14, 51, 59, 76, 181, 185, 188, 205], "1969": [14, 52, 59, 76, 189, 205], "bessel_funct": [14, 59], "typefunct": [14, 59], "mathrm": [14, 20, 41, 50, 51, 52, 59, 76, 78, 87, 186, 188, 195, 203, 205, 211, 214, 215, 258, 260, 264], "plane": [14, 25, 51, 59, 61, 63, 64, 66, 67, 77, 78, 98, 115, 133, 134, 178, 179, 203, 214, 249, 270], "pole": [14, 59, 76, 99, 100, 134, 202, 205, 211], "obei": [14, 59, 180, 195, 205], "mirror": [14, 59, 78, 134], "conjug": [14, 29, 40, 41, 42, 51, 58, 59, 82, 87, 102, 130, 144, 147, 161, 191, 195, 211, 221], "polygamma": [14, 56, 59, 195], "eulergamma": [14, 55, 56, 59], "40": [14, 33, 54, 56, 59, 61, 68, 82, 87, 91, 94, 181, 192, 194, 195, 215, 236, 259], "288037795340032417959588909060233922890": [14, 59], "49801566811835604271": [14, 59], "15494982830181068512": [14, 59], "lowergamma": [14, 59, 215], "uppergamma": [14, 56, 59, 195, 215], "upper": [14, 28, 50, 52, 55, 59, 60, 67, 68, 82, 83, 84, 87, 90, 91, 98, 107, 154, 161, 180, 184, 186, 188, 190, 191, 195, 205, 213, 220, 240], "loggamma": [14, 15, 59, 195], "digamma": [14, 56, 59, 195], "trigamma": [14, 59, 195], "euler": [14, 31, 32, 50, 51, 52, 55, 58, 59, 67, 73, 79, 91, 158, 171, 175, 179, 180, 195, 211, 215, 240, 241], "gamma_funct": [14, 59], "gov": [14, 56, 57, 59], "gammafunct": [14, 59], "gammabetaerf": [14, 56, 59], "inlin": [14, 79, 175, 195, 228], "pretti": [14, 18, 32, 33, 59, 78, 79, 87, 91, 95, 100, 115, 175, 205, 207, 214, 248, 258, 261, 264, 266, 270], "literatur": [14, 76, 165, 187], "illumin": 14, "tone": 14, "narr": [14, 16, 263], "excerpt": 14, "geometri": [14, 60, 61, 62, 64, 65, 66, 67, 68, 78, 122, 134, 187, 242, 249, 250, 257, 264], "autofunct": 14, "convex_hul": [14, 63, 67, 68], "are_similar": [14, 62, 63, 68], "autoclass": 14, "linearent": [14, 61, 64, 65, 66, 67], "rai": [14, 61, 63, 64, 65, 67, 68, 130, 134], "curv": [14, 32, 53, 63, 78, 91, 94, 130, 181, 182, 211, 240, 249, 260], "ellips": [14, 62, 63, 67, 133, 181, 195, 269], "circl": [14, 18, 51, 61, 62, 63, 65, 66, 67, 68, 76, 134, 141, 181, 214, 240, 242, 249], "polygon": [14, 61, 62, 63, 68, 77, 181, 249], "regularpolygon": [14, 62, 63, 67, 181], "triangl": [14, 18, 32, 56, 62, 63, 67, 68, 78, 82, 91, 180, 181, 242, 249], "cumbersom": 14, "viewcod": 14, "qualifi": [14, 237], "trigonometr": [14, 18, 51, 58, 78, 192, 198, 206, 210, 211, 214, 234, 251, 261, 271], "trail": [14, 43, 91, 186, 188, 191, 231, 236], "www": [14, 15, 25, 31, 42, 43, 52, 54, 56, 59, 73, 78, 79, 91, 98, 175, 189, 194, 195, 204, 207, 208, 211, 215, 233, 266, 269], "master": [14, 15, 20, 78, 226], "dynamicsymbol": [14, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 128, 129, 171, 174, 175, 176, 177, 178, 179], "sine": [14, 18, 51, 57, 59, 76, 78, 135, 192, 198, 204, 259], "troubleshoot": [14, 125], "referencefram": [14, 105, 106, 108, 110, 113, 115, 116, 119, 120, 121, 123, 124, 125, 126, 128, 129, 172, 173, 174, 175, 176, 177, 178], "frame": [14, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 119, 121, 123, 124, 125, 126, 128, 129, 170, 171, 172, 173, 174, 176, 177, 178, 230, 240, 246], "notimplementederror": [14, 31, 50, 61, 64, 68, 78, 87, 98, 184, 190, 194, 203, 210, 211, 212, 213, 214], "outsid": [14, 29, 42, 51, 59, 62, 67, 82, 91, 104, 166, 179, 191, 207, 260, 265], "plot": [14, 18, 20, 60, 61, 63, 64, 67, 74, 79, 87, 94, 95, 99, 128, 145, 148, 154, 198, 250, 256, 257, 264, 269], "ahead": [14, 91], "submit": 14, "matrixcommon": [14, 84, 86, 87], "dyadic": [14, 54, 105, 110, 113, 115, 119, 121, 122, 128, 173, 175, 177, 242, 247], "shorten": 14, "highli": [15, 51, 55, 97, 185, 191, 200, 228], "teach": [15, 43, 52, 215], "conduct": 15, "survei": 15, "commonli": [15, 43, 56, 59, 78, 87, 104, 178, 183, 211, 246], "offer": [15, 32, 33, 42, 51, 92, 104, 128, 170, 179, 185, 190, 230, 247], "bring": [15, 76, 108, 120, 184, 198, 207, 266], "greater": [15, 29, 43, 51, 57, 59, 76, 80, 91, 100, 188, 191, 194, 202, 207, 211, 213, 215, 230, 233, 246, 260], "clariti": [15, 42, 174], "mission": [15, 32, 85], "ca": [15, 19, 20, 52, 59, 78, 194, 195, 233], "dedic": [15, 33, 187, 228, 244, 246], "essenti": [15, 35, 46, 51, 55, 57, 58, 59, 76, 110, 115, 176, 177, 179, 182, 183, 186, 190, 202, 205, 243, 246, 247, 248], "deviat": [15, 134, 215], "docutil": 15, "sourceforg": [15, 32], "net": [15, 32, 67, 189, 211, 215, 233], "ext": [15, 182, 186], "autodoc": 15, "graphic": [15, 98], "linkcod": 15, "readthedoc": [15, 79, 234], "sphinx_math_dollar": 15, "delimit": [15, 51, 195], "dollar": [15, 264], "sphinxext": 15, "plot_direct": 15, "figur": [15, 51, 52, 61, 62, 64, 66, 67, 78, 95, 113, 156, 178, 179, 180, 181, 192, 195, 249, 270], "devel": [15, 180], "supersed": [15, 113, 128], "pep": [15, 33, 51, 81], "257": [15, 91, 213], "four": [15, 33, 43, 51, 55, 59, 81, 84, 91, 101, 126, 134, 171, 181, 182, 188, 191, 195, 203, 208, 211, 213, 215, 216, 240, 241, 244], "websit": [15, 268], "advertis": 15, "site": [15, 91, 229], "upload": [15, 91], "spars": [15, 84, 86, 87, 155, 184, 187, 190, 191, 192, 215, 216, 254, 265], "substanti": [15, 92], "edit": [15, 78, 87, 91, 188, 189, 191], "resid": 15, "standalon": [15, 128], "restructur": 15, "surround": [15, 51, 68, 134, 203, 236], "strip": [15, 52, 78, 91, 188, 231, 236], "unimport": 15, "bullet": 15, "whitespac": [15, 51, 231], "meta": [15, 51, 211, 212], "stackexchang": [15, 61], "5020": 15, "wikibook": [15, 78, 79], "overleaf": 15, "mathematical_express": 15, "verbatim": 15, "_rewrit": 15, "_expand": 15, "sentenc": [15, 81], "thumb": [15, 81, 233], "greek": [15, 24, 51, 91, 93, 182, 195], "\u03b1": [15, 180, 194], "italic": 15, "emphasi": [15, 185], "asterisk": 15, "stirl": [15, 43, 58, 233], "permut": [15, 34, 36, 38, 39, 41, 44, 47, 48, 49, 52, 56, 59, 82, 84, 87, 109, 161, 180, 184, 186, 191, 208, 216, 217, 221, 233, 270], "partit": [15, 38, 42, 58, 91, 116, 125, 127, 215, 230, 232], "consecut": [15, 33, 42, 47, 50, 52, 56, 67, 207, 213], "group": [15, 32, 37, 38, 43, 44, 47, 48, 49, 51, 54, 56, 80, 81, 91, 140, 149, 150, 161, 180, 181, 182, 190, 191, 207, 211, 213, 214, 221, 233], "pairwis": [15, 29, 32, 51, 56, 68, 87, 91, 208, 213], "ital": [15, 195], "talk": [15, 52, 182, 190, 243], "referenc": [15, 16, 35, 40, 91, 112, 115, 158, 190], "american": [15, 37, 52], "color": [15, 79, 98, 175, 195, 226, 233, 257, 269], "colour": 15, "quotat": 15, "line_color": [15, 181, 198], "aesthet": [15, 181], "ariti": [15, 181], "unrestrict": [15, 40, 233], "necklac": [15, 233], "bracelet": [15, 233], "revers": [15, 35, 40, 43, 50, 51, 52, 57, 78, 79, 81, 87, 91, 100, 160, 171, 175, 182, 184, 188, 191, 192, 195, 196, 203, 207, 211, 233, 270], "person": 15, "chebyshev": [15, 31, 51, 78, 188, 191], "pafnuti": 15, "lvovich": 15, "tchebychev": 15, "transliter": 15, "russian": 15, "chebyshevt": [15, 59, 195], "orthogonalpolynomi": 15, "t_n": [15, 56, 59, 78, 188, 244], "tens": 15, "inclus": [15, 50, 154, 182, 201, 202, 203, 214], "pronoun": 15, "gender": 15, "neutral": 15, "he": [15, 56, 76, 188], "she": [15, 214], "extran": [15, 211], "belittl": 15, "obvious": [15, 34, 42, 164, 178, 185, 205], "straightforward": [15, 18, 42, 52, 87, 205], "unwelcom": 15, "judgement": 15, "phrase": [15, 52], "friendli": [15, 33, 76, 228], "toc": 16, "setup": [16, 21, 23, 33, 51, 116, 117, 130, 171, 188, 191, 193, 194, 205, 226, 227, 229, 239, 269], "rebuild": [16, 18, 51, 191, 265], "live": [16, 24, 34, 128, 190, 208], "server": 16, "debug": [16, 21, 23, 33, 51, 78, 115, 150, 226, 227, 236], "incompat": 16, "combinatori": [18, 35, 43, 50, 51, 58, 59, 197, 206, 233, 235, 270], "primepi": [18, 91], "matrixexpr": [18, 82, 84, 85], "dig": [18, 33, 265], "th": [18, 25, 34, 42, 43, 49, 52, 53, 55, 56, 57, 59, 80, 81, 87, 91, 108, 186, 188, 190, 191, 197, 200, 205, 208, 211, 213, 215, 216, 221], "undefin": [18, 27, 28, 31, 51, 57, 58, 59, 78, 84, 93, 105, 179, 190, 201, 202, 205, 234, 260, 271], "handler": [18, 21, 26, 27, 28, 29, 30, 51, 58, 87], "spectrum": 18, "matter": [18, 31, 40, 43, 50, 51, 56, 76, 78, 126, 202, 233, 264, 265], "use_unicod": [18, 31, 32, 33, 55, 59, 78, 79, 87, 95, 100, 133, 175, 180, 182, 183, 194, 195, 196, 214, 215, 260, 264, 266, 269, 270, 271], "neq": [18, 51, 57, 59, 76, 78, 82, 166, 179, 180, 188, 191, 208, 211, 213, 270], "lambdifi": [18, 33, 59, 115, 195, 213, 227, 232, 251, 258, 261], "np": [18, 58, 74, 91, 113, 227, 234], "arang": [18, 227, 259], "ultim": [18, 57, 166], "cosin": [18, 51, 57, 59, 66, 78, 105, 107, 171, 179, 191, 192, 198, 204, 215, 240, 270], "todai": [18, 182], "operatornam": [18, 56, 57, 59, 76, 78, 180, 183, 191, 195, 198, 203, 205, 213], "modern": [18, 33, 182, 189, 195], "recal": [18, 51, 87, 188, 190, 205, 262, 264, 265, 271], "redefin": [18, 43, 51, 123, 125, 183, 234], "antipattern": [18, 263], "stai": [18, 190], "trig": [18, 51, 78, 191, 195, 204, 207, 270], "wouldn": 18, "cheap": [18, 51, 91], "expens": [18, 51, 125, 204, 211, 212, 213, 229, 266], "as_two_term": [18, 51], "split": [18, 33, 51, 52, 55, 76, 78, 93, 188, 190, 193, 194, 195, 215, 221, 226, 233, 238, 265, 270], "hadn": 18, "wors": [18, 81, 207], "expand_trig": [18, 259], "mid": [18, 34, 52, 55, 95, 203, 208], "troubl": [18, 59], "bigger": [18, 33, 51, 56, 205, 211, 270], "deduc": [18, 33, 76, 81, 205, 264], "disallow": [18, 51, 191, 196, 207, 229], "goe": [18, 87, 202, 205, 214, 262, 265], "great": [18, 130, 192, 195, 208, 234], "simplest": [18, 32, 81, 87, 91, 92, 180, 181, 192, 196, 204, 207, 211, 260, 270], "is_": [18, 21, 51], "\u03c0": [18, 55, 133, 195, 214, 260, 264, 270, 271], "as_independ": [18, 51, 214], "coeff": [18, 51, 53, 81, 128, 186, 190, 191, 201, 207, 211, 213, 221, 270], "apart": [18, 25, 42, 47, 51, 55, 57, 78, 176, 183, 186, 188, 191, 194, 197, 208, 214, 221, 244, 246, 265], "subexpress": [18, 33, 51, 82, 104, 106, 190, 191, 195, 202, 206, 214, 228, 234, 251, 259], "is_even": [18, 39, 42, 43], "nonreal": [18, 213], "cosh": [18, 51, 58, 59, 70, 76, 192, 195, 196, 205, 207, 213, 266, 270], "5919532755215": 18, "_eval_is_nonneg": 18, "exercis": [18, 42, 230, 263, 270], "_eval_is_posit": 18, "iff": [18, 29, 43, 52, 81, 87, 179, 182, 190, 205, 208, 226], "as_add": [18, 51], "pi_": 18, "fuzzy_": 18, "deduct": [18, 33], "somehow": 18, "subtl": [18, 204], "nontrivi": [18, 42, 51, 91], "_eval_evalf": [18, 191], "prec": [18, 51, 61, 67, 91, 98, 180, 186, 191, 192, 207, 213], "dp": [18, 33, 51, 54, 59, 91, 185, 186, 213, 229], "53": [18, 52, 54, 87, 130, 183, 185, 186], "459697694131860": 18, "hook": [18, 92, 195], "_eval_rewrit": [18, 51], "rewritten": [18, 51, 56, 57, 59, 78, 113, 158, 202, 207, 211, 213, 270], "caller": 18, "ve": [18, 115], "nonintegr": 18, "isint": 18, "xy": [18, 31, 32, 65, 87, 110, 179, 181, 182, 188, 195, 207, 214, 249, 265, 270], "happi": 18, "demand": [18, 24], "_eval_expand_": 18, "expand_": 18, "predefin": [18, 53, 128, 185, 195, 196, 207, 214, 221, 240, 244, 252], "expand_log": [18, 33, 207], "_eval_expand_trig": 18, "sophist": [18, 92, 213], "x_1": [18, 34, 41, 42, 52, 56, 73, 87, 156, 183, 186, 188, 191, 197, 208, 214], "ldot": [18, 34, 41, 42, 50, 51, 52, 56, 59, 76, 91, 95, 166, 182, 183, 186, 188, 190, 195, 198, 202, 205, 208, 213, 216, 270], "x_k": [18, 52, 188], "_eval_deriv": [18, 51, 59], "dy": [18, 33, 53, 68, 87, 94, 103, 128, 191, 195, 208, 211, 212, 260], "dz": [18, 94, 103, 205], "argumentindexerror": 18, "linear": [18, 22, 32, 33, 43, 50, 51, 52, 54, 55, 59, 64, 71, 74, 76, 78, 80, 82, 84, 86, 94, 97, 100, 107, 108, 110, 115, 116, 117, 122, 123, 127, 128, 133, 155, 158, 159, 174, 181, 182, 186, 187, 188, 190, 191, 193, 201, 203, 205, 212, 213, 214, 233, 254, 271], "varion": 18, "middl": [18, 59, 67, 76, 87, 95, 141, 181, 205, 270], "iverson": 18, "printmethod": [18, 195], "latexprint": [18, 258], "_latex": [18, 195], "_print": [18, 195], "_m": [18, 59], "_n": [18, 52, 56, 59, 78, 205, 214], "arcversin": 18, "aversin": 18, "tupl": [18, 25, 27, 28, 31, 32, 33, 34, 42, 43, 50, 52, 53, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 73, 76, 78, 82, 87, 90, 91, 93, 94, 95, 98, 105, 108, 110, 112, 123, 124, 126, 128, 130, 145, 146, 147, 150, 155, 158, 159, 160, 161, 171, 174, 179, 181, 182, 184, 185, 186, 187, 188, 192, 193, 195, 196, 197, 201, 203, 207, 208, 211, 212, 213, 214, 215, 216, 220, 221, 226, 227, 228, 229, 233, 234, 236, 240, 243, 260, 265, 266, 269], "im": [18, 30, 51, 58, 76, 85, 182, 195, 196, 203, 211, 266], "sinh": [18, 31, 51, 55, 58, 59, 70, 76, 192, 195, 196, 205, 270], "expand_complex": 18, "analog": [18, 44, 50, 52, 56, 126, 178, 179, 182, 183, 184, 188, 200, 216, 233], "vers": 18, "geometr": [18, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 87, 130, 179, 182, 189, 215, 257, 266], "angl": [18, 25, 57, 59, 60, 61, 62, 64, 65, 66, 67, 102, 107, 112, 113, 115, 116, 117, 125, 130, 133, 134, 135, 158, 166, 171, 178, 179, 180, 195, 204, 214, 240, 241, 244, 270], "horizont": [18, 32, 61, 64, 66, 82, 133, 181, 184, 195], "distanc": [18, 32, 35, 43, 61, 64, 65, 66, 67, 94, 95, 103, 104, 107, 116, 117, 130, 134, 164, 174, 176, 248], "rightmost": [18, 161], "scientificamerican": 18, "uniti": [18, 57, 59, 76, 156, 190], "secret": [18, 52], "teacher": 18, "taught": [18, 78], "nr": 18, "sake": [18, 56, 208], "simplic": [18, 205, 207, 211, 213], "divisor": [18, 29, 42, 51, 52, 87, 91, 182, 183, 185, 186, 188, 189, 190, 191, 194], "hardwar": [18, 33], "round": [18, 31, 33, 51, 55, 56, 57, 87, 134, 190, 191, 202, 204, 215], "contrast": [18, 50, 51, 116, 185, 205, 211, 264], "regard": [18, 34, 52, 59, 79, 129, 161, 182, 183, 197, 213, 214], "vriabl": 18, "c99codeprint": [18, 33, 195], "cxx11codeprint": [18, 195], "cfunction": [18, 252], "e2": [18, 31, 51, 54, 61, 68, 78, 87, 91, 98, 113, 185, 190, 202, 211, 214, 215, 233], "93accumulate_oper": 18, "fused_multipli": 18, "93add": 18, "ccode": [18, 33, 195, 220, 228], "cxxcode": [18, 33, 195], "_ccode": [18, 195], "_y": [18, 126, 175, 178, 179], "_z": [18, 78, 126, 178, 179, 215], "_cxxcode": [18, 195], "std": [18, 195, 215], "28318530717959": 18, "trigonometricfunct": 18, "inversetrigonometricfunct": 18, "reciprocaltrigonometricfunct": 18, "bypass": [18, 211], "fragil": 18, "tend": [18, 24, 33, 51, 188, 190, 200, 202, 205, 263, 270], "prone": [18, 33, 51], "move": [18, 42, 43, 51, 52, 65, 67, 94, 107, 115, 116, 122, 149, 174, 178, 179, 206, 207, 216, 225, 246], "speech": 19, "beer": 19, "lightweight": [19, 33, 190, 264], "anaconda": 19, "pypi": 20, "continuum": [20, 256], "analyt": [20, 56, 59, 76, 87, 122, 211, 256, 260], "qtconsol": [20, 269], "nicer": [20, 51, 120], "setupegg": 20, "enthought": 20, "canopi": 20, "activepython": 20, "spack": 20, "freshli": 20, "starter": 20, "sy": [20, 33, 53, 113, 128, 195, 226, 237, 245, 262], "wherev": [20, 113, 207, 214, 243], "visit": [20, 35, 42, 51, 56, 267], "chat": 20, "gitter": [20, 266], "excel": [20, 55, 190, 268], "ticket": 20, "area": [21, 51, 61, 63, 67, 68, 94, 95, 247], "deeper": [21, 219, 265], "explor": [21, 123, 124, 181, 190, 230, 270], "implic": [21, 51, 81, 188], "vs": [21, 187, 195, 226], "nonlinear": [22, 50, 128, 191, 213, 214], "diophantin": [22, 91, 188, 209], "739085133215161": [22, 213], "9y": 22, "3x": [22, 51, 93, 188, 214, 262], "cc": [22, 52, 67, 180, 183, 185, 187, 191, 266], "4xy": [22, 176, 248], "8y": 22, "7y": [22, 208], "colloqui": 22, "terminolog": [22, 221], "central": [23, 42, 48, 59, 61, 67, 105, 110, 126, 181, 190, 208, 215], "task": [23, 57, 122, 128, 185, 190, 260, 267], "export": [24, 195], "latin": 24, "slightli": [24, 33, 47, 91, 93, 115, 181, 182, 186, 188, 191, 195, 205, 207], "clunki": 24, "collid": [24, 221], "win": 24, "session": [24, 33, 51, 63, 78, 175, 179, 185, 231, 258, 262, 269], "throwawai": 24, "surviv": 24, "foo": [24, 31, 33, 51, 156, 175, 233, 236], "report": [24, 31, 42, 64, 82, 91, 192, 203, 214, 226, 266, 271], "stick": 24, "clash": [24, 51, 87], "_clash1": [24, 51], "_clash2": [24, 51], "multi": [24, 51, 52, 114, 122, 128, 141, 145, 155, 181, 195, 214], "_clash": [24, 51], "union": [24, 29, 31, 33, 40, 42, 49, 81, 93, 182, 190, 195, 201, 202, 210, 214, 215, 233], "sympif": [24, 51], "real_field": 25, "instanti": [25, 32, 33, 43, 51, 59, 64, 66, 67, 84, 87, 151, 159, 171, 181, 182, 186, 190, 215, 240, 243], "q1": [25, 87, 104, 113, 115, 116, 117, 119, 120, 121, 123, 124, 125, 129, 170, 171, 173, 174, 175, 178, 179, 185, 240, 241], "q2": [25, 104, 113, 115, 116, 117, 119, 120, 121, 123, 124, 129, 170, 171, 173, 174, 175, 178, 179, 185, 240, 241], "r1": [25, 61, 64, 80, 94, 95, 134, 171, 176, 191, 240], "euclideanspac": 25, "realnormedalgebra": 25, "r2": [25, 53, 64, 80, 82, 94, 95, 134, 171, 191, 195, 207, 240], "q3": [25, 104, 115, 117, 119, 120, 121, 123, 171, 173, 174, 179, 240, 241], "axi": [25, 44, 56, 57, 61, 62, 64, 65, 67, 73, 76, 78, 84, 87, 94, 98, 103, 107, 113, 115, 116, 119, 120, 121, 125, 128, 129, 130, 133, 134, 158, 171, 173, 174, 176, 178, 179, 181, 186, 214, 240, 241, 244, 246, 249], "bi": [25, 51, 57, 59, 78, 179, 202, 211], "cj": 25, "dk": [25, 94, 190], "atan2": [25, 30, 53, 58, 135, 195, 240], "atan": [25, 30, 53, 55, 58, 62, 67, 75, 78, 116, 129, 130, 192, 195, 197], "arc_coplanar": 25, "arc": [25, 57, 270], "orient": [25, 63, 67, 82, 113, 115, 116, 119, 126, 128, 171, 174, 176, 178, 179, 188, 233, 240, 247, 248], "coplanar": [25, 65, 179], "ax": [25, 52, 55, 61, 64, 76, 83, 87, 94, 98, 107, 133, 158, 171, 179, 180, 181, 184, 192, 208, 211, 214, 216, 217, 220, 240, 241, 243, 246, 248, 270], "parallel": [25, 61, 64, 65, 67, 78, 97, 100, 103, 178, 179, 188, 245, 249], "vector_coplanar": 25, "is_pur": 25, "mathbf": [25, 84, 122, 123, 124, 126, 166, 170, 171, 175, 176, 178, 179, 195, 205, 216, 243, 244, 246, 248, 249], "versor": 25, "0i": 25, "0j": [25, 185], "0k": 25, "vector_part": 25, "from_axis_angl": 25, "rotat": [25, 39, 42, 44, 51, 60, 61, 62, 64, 66, 67, 82, 87, 94, 95, 107, 115, 117, 119, 121, 126, 129, 145, 158, 171, 174, 176, 178, 179, 180, 181, 233, 240, 241, 244, 246, 248], "radian": [25, 57, 60, 61, 62, 64, 65, 66, 87, 98, 113, 134, 135, 171], "from_rotation_matrix": 25, "orthogon": [25, 28, 58, 66, 80, 87, 159, 171, 179, 187, 240, 241, 247], "det": [25, 87, 88, 128, 179, 184, 266], "index_vector": 25, "mod": [25, 52, 57, 81, 87, 88, 91, 157, 182, 184, 185, 186, 188, 190, 191, 195, 197, 205, 208, 251], "magnitud": [25, 33, 50, 51, 55, 59, 92, 94, 95, 98, 116, 128, 159, 168, 171, 176, 179, 181, 240, 246, 248], "norm": [25, 87, 159, 171, 186, 188, 190, 191], "indefinit": [25, 57, 75, 76, 78, 87, 186, 188, 189, 191, 200, 260], "scalar_part": 25, "is_zero_quaternion": 25, "mensor": 25, "60": [25, 37, 42, 44, 50, 51, 56, 59, 78, 87, 91, 94, 95, 194, 195, 208, 211, 233], "anti": [25, 29, 47, 57, 78, 82, 133, 138, 221], "pth": 25, "668": 25, "224": [25, 164, 189], "336": 25, "448": 25, "pow_cos_sin": 25, "900": 25, "1800": [25, 52], "2700": [25, 94], "3600": [25, 56], "rotate_point": 25, "pin": [25, 94, 95, 107], "to_axis_angl": 25, "to_rotation_matrix": 25, "assumptionkei": 26, "proposit": [26, 28, 81], "is_tru": [26, 28, 29], "assumptionscontext": [26, 27, 28], "global_assumpt": [26, 27, 28], "discern": [26, 28], "refin": [26, 28, 51, 82, 182, 186, 190, 191, 207, 228], "progress": [26, 28, 91, 228], "inherit": [26, 51, 58, 81, 84, 85, 107, 150, 159, 180, 195, 215, 220, 228, 229], "askhandl": 26, "mere": [27, 28, 33, 55, 156], "thin": [27, 87, 118, 130], "dispatch": [27, 28, 29, 51, 52, 156, 195, 214, 230], "undefinedpred": [27, 28], "sexi": [27, 28], "sexyprimepred": [27, 28], "sexyprim": [27, 28], "int1": [27, 28], "int2": [27, 28], "sort": [27, 28, 32, 33, 40, 43, 47, 76, 78, 81, 87, 90, 91, 101, 104, 108, 145, 161, 166, 170, 181, 188, 191, 192, 202, 207, 208, 211, 212, 213, 219, 221, 226, 228, 233, 243, 251, 262, 264, 265], "assump": [27, 28], "r3": [27, 80, 94, 95, 207], "predicate_": [27, 28], "mathematical_log": [27, 28], "r4": [27, 80, 94], "sexy_prim": [27, 28], "resolut": [27, 28, 208], "askpredicatehandl": [27, 28], "r5": [28, 207], "r6": 28, "tautolog": 28, "calculu": [28, 51, 56, 78, 87, 128, 176, 177, 204, 215, 245, 246, 247, 250, 251, 261, 263, 268], "symmetr": [28, 30, 34, 39, 42, 43, 47, 67, 82, 83, 84, 87, 91, 170, 180, 186, 188, 191, 194, 203, 205, 221, 233], "unitari": [28, 78, 91, 145, 150], "triangular": [28, 82, 83, 87, 184, 190, 213, 215, 249], "diagon": [28, 56, 82, 83, 84, 87, 90, 112, 133, 184, 217, 218], "rank": [28, 33, 34, 35, 40, 42, 43, 45, 46, 47, 66, 80, 87, 88, 171, 173, 182, 184, 186, 188, 190, 216, 220, 221, 266], "singular": [28, 33, 43, 51, 55, 57, 58, 73, 74, 76, 78, 87, 94, 96, 125, 171, 182, 189, 202, 211, 214, 240, 251, 260], "notabl": [28, 33, 54, 59, 76, 92, 185], "truth_maintenance_system": 28, "istruepred": 29, "gt": [29, 33, 215, 233], "istruehandl": 29, "commutativepred": 29, "commutativehandl": 29, "finitepred": 29, "nor": [29, 31, 51, 81, 91, 135, 181, 191, 202, 204, 211, 221, 240], "nan": [29, 30, 57, 59, 106, 207, 215, 260], "bound": [29, 33, 34, 50, 51, 60, 61, 62, 64, 66, 67, 78, 91, 159, 186, 188, 190, 191, 195, 201, 211, 213, 214, 215, 220, 230, 236, 240], "finitehandl": 29, "r7": 29, "infinitepred": 29, "infinitehandl": 29, "symmetricpred": 29, "transpos": [29, 32, 82, 84, 87, 100, 128, 144, 171, 179, 184, 190, 208, 216, 221, 222, 266], "symmetrichandl": 29, "r8": 29, "symmetric_matrix": 29, "invertiblepred": 29, "fullrank": [29, 33], "invertiblehandl": 29, "r9": 29, "invertible_matrix": 29, "orthogonalpred": 29, "tm": [29, 134], "mm": [29, 32, 91, 108, 115, 119, 120, 159, 184], "orthogonalhandl": 29, "r10": 29, "orthogonal_matrix": 29, "unitarypred": 29, "unitaryhandl": 29, "r11": 29, "unitary_matrix": 29, "positivedefinitepred": 29, "tmz": 29, "column": [29, 32, 33, 34, 79, 81, 82, 84, 87, 88, 90, 100, 108, 112, 115, 126, 156, 163, 171, 175, 180, 184, 190, 195, 211, 214, 220, 240], "positive_definit": 29, "positivedefinitehandl": 29, "r12": 29, "definite_matrix": 29, "uppertriangularpred": 29, "m_": [29, 124, 188], "ij": [29, 161, 166, 215], "zeromatrix": [29, 84], "upper_triangular": [29, 82], "uppertriangularhandl": 29, "r13": 29, "uppertriangularmatrix": 29, "lowertriangularpred": 29, "lower_triangular": [29, 82], "lowertriangularhandl": 29, "r14": 29, "lowertriangularmatrix": 29, "diagonalpred": 29, "diagonalhandl": 29, "r15": 29, "diagonal_matrix": 29, "fullrankpred": 29, "row": [29, 32, 33, 34, 40, 43, 51, 56, 82, 83, 84, 87, 88, 90, 91, 100, 112, 113, 115, 126, 128, 129, 156, 171, 179, 184, 190, 195, 205, 214, 215, 220, 234, 240, 241], "linearli": [29, 33, 59, 75, 87, 188, 211, 213, 221], "fullrankhandl": 29, "squarepred": 29, "squarehandl": 29, "r16": 29, "square_matrix": 29, "integerelementspred": 29, "integer_el": 29, "integerelementshandl": 29, "realelementspred": 29, "real_el": 29, "realelementshandl": 29, "complexelementspred": 29, "complex_el": 29, "complexelementshandl": 29, "singularpred": 29, "singularhandl": 29, "fore": 29, "r17": 29, "singularmatrix": 29, "normalpred": 29, "normalhandl": 29, "r18": 29, "normal_matrix": 29, "triangularpred": 29, "triangularhandl": 29, "r19": 29, "triangular_matrix": 29, "unittriangularpred": 29, "1s": [29, 56, 80, 184], "unit_triangular": 29, "unittriangularhandl": 29, "evenpred": 29, "evenhandl": 29, "oddpred": 29, "oddhandl": 29, "primehandl": 29, "subject": [29, 61, 67, 95, 104, 129, 190], "compositepred": 29, "compositehandl": 29, "positivepred": 29, "interv": [29, 31, 42, 51, 55, 57, 59, 60, 61, 64, 67, 76, 78, 81, 91, 147, 156, 186, 188, 190, 191, 198, 201, 210, 214, 215, 257, 271], "positivehandl": 29, "negativepred": 29, "negativehandl": 29, "zeropred": 29, "zerohandl": 29, "nonzeropred": 29, "nonzerohandl": 29, "nonpositivepred": 29, "nonpositivehandl": 29, "nonnegativepred": 29, "nonnegativehandl": 29, "integerpred": 29, "integerhandl": 29, "r20": 29, "rationalpred": 29, "rationalhandl": 29, "r21": 29, "irrationalpred": 29, "ratio": [29, 41, 42, 50, 51, 55, 56, 59, 61, 64, 65, 66, 67, 83, 91, 100, 134, 166, 195, 204, 207, 213], "irrationalhandl": 29, "r22": 29, "realpred": 29, "disjoint": [29, 32, 40, 43, 191, 203, 233], "realhandl": 29, "r23": 29, "extendedrealpred": 29, "extendedrealhandl": 29, "hermitianpred": 29, "hermitianhandl": 29, "r24": 29, "hermitianoper": [29, 150], "complexpred": 29, "complexhandl": 29, "r25": 29, "imaginarypred": 29, "imaginaryhandl": 29, "r26": 29, "antihermitianpred": 29, "antihermitianhandl": 29, "r27": 29, "algebraicpred": 29, "askalgebraicpredicatehandl": 29, "r28": 29, "algebraichandl": 29, "transcendentalpred": 29, "transcedent": 29, "refine_pow": 30, "refine_ab": 30, "refine_arg": 30, "refine_atan2": 30, "refine_im": 30, "refine_matrixel": 30, "refine_r": 30, "refine_sign": 30, "lagrang": [31, 51, 118, 122, 191, 208], "lagrangian": [31, 108, 116, 121, 122, 124, 125], "euler_equ": 31, "r29": 31, "iter": [31, 33, 40, 42, 43, 46, 47, 51, 52, 53, 54, 56, 59, 67, 81, 91, 105, 106, 108, 109, 112, 125, 129, 146, 161, 174, 181, 182, 183, 184, 186, 188, 191, 195, 196, 197, 198, 201, 207, 208, 211, 213, 214, 215, 216, 219, 227, 228, 229, 230, 232, 234, 240, 244, 258], "eqn": [31, 214], "93lagrange_equ": 31, "decreas": [31, 33, 43, 188], "monoton": [31, 33, 68], "is_decreas": 31, "lopen": [31, 51, 203, 210, 215], "ropen": [31, 57, 203, 215], "is_increas": 31, "72": [31, 51, 64, 87, 91, 94, 180, 194], "is_monoton": 31, "is_strictly_decreas": 31, "is_strictly_increas": 31, "monotonicity_help": 31, "held": [31, 52, 125, 219, 270], "univari": [31, 50, 51, 57, 74, 78, 182, 183, 185, 186, 187, 189, 190, 191, 192, 197, 210, 213, 215], "r30": 31, "mathematical_singular": 31, "interpol": [31, 60, 128, 188, 191], "finite_diff_weight": [31, 51, 260], "estim": [31, 50, 51, 55, 76, 260], "apply_finite_diff": [31, 51, 260], "differentiate_finit": [31, 51, 260], "finite_diff": [31, 51], "x_list": [31, 260], "y_list": [31, 260], "cube": [31, 33, 35, 42, 44, 57, 78, 188, 189, 208, 214, 249], "xlist": 31, "55271367880050e": 31, "indexedbas": [31, 33, 50, 51, 195, 213, 219, 220, 227], "idx": [31, 33, 195, 219, 220, 227], "zip": [31, 41, 52, 81, 91, 191, 201, 208, 211, 230, 233], "extract": [31, 51, 78, 82, 84, 87, 91, 101, 115, 122, 170, 179, 188, 190, 191, 213, 214, 215, 226, 228, 233], "region": [31, 59, 68, 78, 181, 203, 211, 214, 215, 240, 242, 249], "bewar": [31, 59], "rung": [31, 73], "phenomenon": [31, 166, 188, 198, 265], "90": [31, 42, 49, 59, 82, 87, 93, 94, 104, 113, 129, 195, 197, 207, 215, 228], "finitediff": 31, "wrt": [31, 33, 51, 53, 59, 68, 87, 113, 128, 171, 172, 188, 191, 240, 241, 242, 246], "arbitrarili": [31, 51, 64, 91, 188, 190, 202, 205, 211, 212, 215], "len": [31, 39, 40, 41, 42, 43, 47, 49, 51, 52, 56, 59, 66, 76, 81, 116, 130, 134, 145, 155, 191, 207, 211, 220, 233], "nearest": [31, 190], "furthest": [31, 52], "sublist": [31, 47, 52, 78, 158, 260], "fd": [31, 33, 161], "0th": [31, 43, 52, 59], "1st": [31, 43, 91, 100, 211, 212, 236, 260], "classic": [31, 57, 59, 87, 147, 163, 171, 179, 182, 256], "forward": [31, 33, 82, 100, 115, 122, 154, 178, 207, 226], "pai": 31, "attent": [31, 42, 57], "gridpoint": 31, "plan": [31, 104, 186, 209, 269], "mycoeff": 31, "3rd": [31, 43, 57, 91, 128, 191, 213, 216, 233], "2nd": [31, 43, 52, 91, 100, 128, 211, 216, 233], "cost": [31, 33, 91, 116, 214, 264], "yield": [31, 33, 42, 51, 52, 59, 75, 76, 91, 94, 100, 106, 155, 183, 188, 190, 191, 196, 197, 202, 203, 204, 207, 208, 213, 230, 233, 266], "poorer": 31, "grand": 31, "r31": 31, "51": [31, 87, 91], "184": [31, 211], "1988": [31, 140, 158, 188, 189], "699": 31, "706": [31, 87], "1090": [31, 191], "s0025": [31, 91], "5718": [31, 91], "0935077": 31, "continuous_domain": [31, 210], "tan": [31, 51, 56, 58, 78, 93, 106, 119, 120, 121, 125, 192, 194, 195, 202, 204, 211, 214, 270], "function_rang": 31, "OR": [31, 54, 81, 188], "critic": [31, 134, 178, 190, 214], "is_convex": [31, 67], "sym": [31, 41, 42, 47, 51, 56, 171, 195, 198, 203, 207, 208, 213, 215, 221, 233, 270], "convex": [31, 67, 68, 78], "unspecifi": [31, 51, 66, 260], "multivari": [31, 51, 59, 182, 183, 185, 186, 187, 189, 191, 192, 202, 207, 213, 214, 215, 270], "concav": [31, 130], "logartihm": 31, "r32": 31, "convex_funct": 31, "r33": 31, "ifp": 31, "illinoi": 31, "edu": [31, 35, 42, 43, 52, 54, 56, 78, 87, 91, 189, 194, 204, 207, 208, 211, 215, 240], "angelia": 31, "l3_convfunc": 31, "r34": 31, "logarithmically_convex_funct": 31, "r35": 31, "logarithmically_concave_funct": 31, "r36": 31, "concave_funct": 31, "lcim": 31, "mixtur": [31, 33, 68, 182, 228], "incommensur": 31, "not_empty_in": [31, 214], "finset_intersect": 31, "finite_set": [31, 203], "tracker": [31, 203, 214, 266], "aperiod": 31, "smallest": [31, 45, 57, 64, 66, 73, 81, 87, 91, 158, 171, 186, 231, 233], "verif": [31, 184, 213], "reliabl": [31, 51, 211, 231, 260], "henc": [31, 33, 41, 42, 51, 53, 57, 59, 63, 76, 79, 81, 91, 176, 181, 182, 183, 188, 195, 205, 208, 212, 214, 226, 230, 244, 245, 246, 265, 270], "stationary_point": 31, "stationari": [31, 215], "tikz": 32, "joyofcat": 32, "adamek": 32, "herrlich": 32, "strecker": 32, "joi": 32, "cat": [32, 170], "book": [32, 42, 52, 57, 108, 113, 126, 127, 146, 189, 194, 195, 263], "katmat": 32, "uni": [32, 78, 233], "bremen": 32, "de": [32, 52, 91, 166, 180, 181, 192, 197, 208, 209, 211, 233], "acc": [32, 128, 174, 178], "pre": [32, 33, 51, 180, 181, 196, 204, 207, 213, 214, 226, 244, 248, 265], "embryon": 32, "morphism": [32, 182], "codomain": [32, 182, 190], "arrow": [32, 80, 94, 181, 195], "namedmorph": 32, "prohibit": [32, 43, 44, 171], "identitymorph": 32, "compositemorph": 32, "compos": [32, 51, 52, 116, 125, 163, 165, 166, 178, 182, 186, 190, 191, 192, 195, 197, 207], "circ": [32, 51, 62, 68, 76, 84], "compon": [32, 33, 47, 51, 53, 66, 78, 84, 87, 101, 110, 122, 126, 133, 158, 163, 170, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 191, 193, 215, 217, 220, 221, 230, 233, 240, 242, 245, 246], "new_nam": 32, "forget": [32, 270], "act": [32, 41, 42, 43, 47, 51, 59, 67, 80, 81, 87, 94, 105, 107, 112, 113, 117, 124, 133, 145, 150, 153, 154, 203, 214, 216, 244, 248, 259], "id_a": 32, "id_b": 32, "commutative_diagram": 32, "quadrupl": [32, 191], "mbox": 32, "hom": 32, "id": [32, 47, 57], "rightarrow": [32, 43, 47, 52, 56, 57, 59, 73, 74, 76, 78, 81, 82, 91, 181, 190, 202, 214, 233, 260], "law": [32, 122, 164, 179, 183], "monoid": 32, "pare1970": 32, "accompani": 32, "premis": 32, "conclus": [32, 51], "carri": [32, 33, 51, 153, 159, 166, 182, 185, 188, 190, 192, 193, 234], "premises_kei": 32, "et": [32, 78, 140, 188, 191, 192, 204, 207], "pareigi": 32, "functor": 32, "1970": [32, 87], "is_subdiagram": 32, "subdiagram": 32, "d1": [32, 47, 171, 182, 202, 215, 240], "subdiagram_from_object": 32, "preserv": [32, 33, 42, 51, 87, 159, 186, 191, 196, 197, 207], "veryuniqu": 32, "diagram_draw": 32, "diagramgrid": 32, "analys": [32, 98, 100, 128, 215], "drawn": [32, 42, 80, 181, 185, 193], "moprhism": 32, "strive": 32, "nevertheless": 32, "laid": [32, 113, 158], "width": [32, 33, 79, 175, 181, 191, 195, 226], "height": [32, 33, 67, 84, 130, 181, 182, 195, 202, 249], "emploi": [32, 50, 55, 78, 91, 191, 194, 209, 211, 215], "lai": 32, "layout": 32, "sequenti": [32, 35, 52, 57, 240, 241], "test_draw": 32, "five": [32, 40, 76, 195, 208], "lemma": [32, 42, 76, 183], "fivelemma": 32, "five_lemma": 32, "arrowstringdescript": 32, "curving_amount": 32, "looping_start": 32, "looping_end": 32, "horizontal_direct": 32, "vertical_direct": 32, "label_posit": 32, "pic": 32, "princip": [32, 52, 57, 59, 76, 78, 88, 102, 115, 134, 182, 183, 184, 185, 186, 188, 190, 191, 192], "offset": [32, 33, 51, 56, 59, 220], "cell": 32, "vertic": [32, 35, 44, 45, 61, 62, 64, 66, 67, 68, 78, 80, 82, 87, 95, 112, 117, 133, 141, 180, 181, 184, 190, 195, 203, 233, 249], "disregard": 32, "unexplain": 32, "astr": 32, "dr": [32, 53, 195, 211], "12mm": 32, "loop": [32, 33, 91, 100, 171, 181, 192, 195, 211, 230, 233, 265], "correspondingli": 32, "label_displac": 32, "arrow_styl": 32, "dash": 32, "xypicdiagramdraw": 32, "formatt": 32, "utilis": 32, "xypic": 32, "drawer": 32, "xymatrix": 32, "ld": 32, "arrow_formatt": 32, "therebi": 32, "default_arrow_formatt": 32, "farther": 32, "centr": [32, 48, 181], "default_formatt": 32, "45": [32, 51, 56, 67, 87, 91, 191, 192, 208], "_3mm": 32, "default_curving_amount": 32, "cm": [32, 128, 215], "_1cm": 32, "default_curving_step": 32, "h1": [32, 110], "1cm": 32, "rr": [32, 51, 69, 184, 185, 187, 191, 192], "h_": [32, 42, 47, 59, 78], "_2cm": 32, "mask": [32, 195], "diagram_format": 32, "proceed": [32, 34, 76, 78, 127, 189, 205], "xypic_draw_diagram": 32, "shortcut": [32, 51, 83, 179, 195, 203, 207, 270], "insert": [32, 34, 82, 93, 94, 156, 161, 195, 215, 236], "preview_diagram": 32, "png": [32, 79, 87, 94, 95, 98, 175, 181, 195, 198], "varieti": [33, 34, 43, 51, 92, 95, 126, 182, 189, 191, 215, 233], "brief": [33, 214, 226, 248], "fab": [33, 195], "cse_main": [33, 196, 207], "cse": [33, 92, 104, 150, 196, 228, 234], "meat": 33, "pycod": [33, 195], "lambdarepr": [33, 195, 234], "aesara_funct": [33, 92, 195], "float80": [33, 195], "assign_to": [33, 195], "type_alias": [33, 195], "0l": [33, 195], "powl": [33, 195], "c99": [33, 195, 228], "expm1": [33, 195], "ternari": [33, 51, 195, 208], "lack": [33, 53, 55, 110, 195, 260], "thrown": [33, 195], "fcode": [33, 195], "contract": [33, 53, 101, 161, 195, 204, 217, 218, 219, 220, 221, 222], "len_i": [33, 195], "mat_1": 33, "mat_2": 33, "jscode": [33, 195], "rh": [33, 41, 43, 51, 82, 83, 87, 108, 113, 119, 120, 121, 184, 193, 195, 197, 211, 213, 214, 245], "user_funct": [33, 195], "argument_test": [33, 195], "cfunction_str": [33, 195], "octav": [33, 128, 228, 258], "custom_funct": [33, 195], "existing_octave_fcn": [33, 195], "is_matrix": [33, 195], "my_mat_fcn": [33, 195], "my_fcn": [33, 195], "mat": [33, 84, 130, 155, 195], "octave_cod": [33, 195], "summat": [33, 50, 51, 55, 56, 59, 161, 189, 195, 198, 207, 215, 216, 219, 220, 221, 227], "mathematica_cod": [33, 195], "g1": [33, 36, 41, 42, 76, 87, 100], "g2": [33, 36, 41, 42, 76, 80, 87, 100], "gamma_1": [33, 103], "gamma_2": [33, 103], "\u03b3\u2081": 33, "\u03b3\u2082": 33, "\u03b2": [33, 180], "h_i": [33, 47], "c89": [33, 195, 228], "julia_cod": [33, 195], "rust_cod": [33, 195], "powi": [33, 195], "make_routin": [33, 228], "f95": [33, 227, 228], "matlab": [33, 104, 128, 228, 258, 266], "breadth": [33, 51, 215], "c_name": [33, 228], "c_code": [33, 228], "h_name": [33, 228], "c_header": [33, 228], "volume_result": 33, "ifndef": [33, 228], "project__test__h": [33, 228], "endif": [33, 228], "preprocessor": [33, 196, 207, 228], "global_var": [33, 228], "insensit": [33, 87, 128, 195, 226, 228], "argument_sequ": [33, 228], "routin": [33, 40, 50, 51, 52, 53, 76, 81, 82, 87, 91, 133, 161, 184, 188, 191, 194, 195, 196, 207, 208, 211, 212, 213, 214, 227, 232, 233, 246], "name_expr": [33, 228], "to_fil": [33, 228], "f_name": [33, 228], "f_code": [33, 228], "choic": [33, 43, 59, 76, 78, 92, 125, 157, 166, 170, 171, 178, 186, 188, 191, 195, 207, 211, 233, 264], "hydrogen": [33, 256], "r_nl": [33, 102, 162], "my_routin": 33, "result_var": [33, 228], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 33, "__________": [33, 183], "\u212f": [33, 133, 180, 195, 260, 264, 266, 270, 271], "assoc_laguerr": [33, 59, 195], "fcn": [33, 228], "result_5397460570204848505": [33, 228], "out_8598435338387848786": [33, 228], "examin": [33, 52, 150, 226, 228, 270], "inputargu": [33, 228], "outputargu": [33, 228], "inoutargu": [33, 228], "disk": [33, 52, 203, 214, 234], "binary_funct": [33, 92, 227], "tensor": [33, 38, 53, 58, 87, 101, 110, 126, 140, 146, 147, 148, 158, 161, 170, 171, 195, 216, 217, 219, 220, 227, 234, 243, 244, 250, 254], "binary_func": [33, 227], "servic": [33, 215], "tempdir": [33, 227], "qho_1d": [33, 137], "psi_n": [33, 137], "y_": [33, 59, 76, 102, 180], "qho": 33, "tmp": 33, "reveal": [33, 91, 214, 265], "subroutin": [33, 42, 157, 188], "autofunc": 33, "dimens": [33, 35, 52, 53, 59, 60, 62, 64, 65, 66, 68, 80, 82, 84, 87, 90, 94, 101, 116, 135, 145, 147, 150, 155, 164, 165, 168, 169, 171, 181, 184, 195, 208, 211, 213, 215, 216, 220, 221, 228, 240, 242, 244, 256], "hbar": [33, 137, 143, 156, 162, 166, 168, 180], "05457162d": 33, "14159265358979d0": 33, "0d0": [33, 195], "74126166983329d": 33, "33": [33, 51, 54, 87, 126, 134, 188, 192, 195, 215], "verbos": [33, 51, 82, 91, 195, 226, 227, 269], "mute": [33, 227], "backend": [33, 79, 92, 93, 98, 117, 175, 192, 227, 234, 257], "auxiliari": [33, 78, 108, 113, 123, 211, 227], "function_nam": [33, 227], "sympy_express": [33, 227], "mandatori": [33, 195, 227], "illustr": [33, 87, 114, 116, 166, 185, 198, 202], "psi_nl": 33, "766": 33, "incur": [33, 92], "get_numpy_arrai": 33, "tight": 33, "temp": [33, 115], "alloc": [33, 57], "walk": [33, 35, 153, 156, 205], "memori": [33, 51, 91, 191, 216, 227, 230], "fuse": 33, "wise": [33, 34, 57, 82, 184, 188, 195, 201, 227], "unabl": [33, 64, 68, 93, 213, 240, 259, 260], "fortun": [33, 92, 116, 191, 192], "reconnect": 33, "autom": [33, 57, 92, 204, 227, 264], "ideolog": [33, 214], "fashion": [33, 51, 84, 115, 123, 124, 126, 179, 182, 233], "broadcast": [33, 92, 195, 220, 227], "outperform": 33, "jensen": 33, "quantit": [33, 163], "leverag": [33, 92, 195], "ufunc": [33, 92, 227, 234], "fn_numpi": 33, "fn_fortran": 33, "linspac": [33, 74, 92, 113, 128], "xx": [33, 87, 110, 179, 233], "21306132": 33, "98101184": 33, "44626032": 33, "timeit": [33, 192], "10000": [33, 55, 91, 92, 94, 213], "18891601900395472": 33, "004707066000264604": 33, "facil": 33, "comparison": [33, 50, 51, 81, 87, 113, 182, 190, 194, 213, 226, 233], "thereof": [33, 51, 182, 188, 190], "optims_c99": 33, "log1p": [33, 195], "expm1_opt": 33, "log1p_opt": 33, "exp2_opt": 33, "log2_opt": 33, "log2const_opt": 33, "funcminusoneoptim": 33, "func_m_1": 33, "opportunist": 33, "replaceoptim": 33, "toward": [33, 51, 59, 182, 202, 214], "catastroph": 33, "smaller": [33, 42, 43, 51, 52, 59, 67, 78, 84, 91, 123, 183, 185, 188, 191, 198, 204, 205, 213, 233, 259, 270], "replace_in_add": 33, "cost_funct": 33, "prioriti": [33, 74, 104, 113, 179, 234], "__call__": [33, 43, 51, 190], "exp2": [33, 195], "create_expand_pow_optim": 33, "base_req": 33, "is_symbol": [33, 82], "expand_opt": 33, "opt2": 33, "is_funct": 33, "log2": [33, 195], "matin_opt": 33, "matinv_opt": 33, "matrixsolv": [33, 195], "matrix_nod": 33, "numpyprint": 33, "doprint": [33, 195], "linalg": 33, "seriesapprox": 33, "reltol": 33, "max_ord": 33, "n_point_check": 33, "threshold": [33, 91], "largest": [33, 43, 45, 51, 57, 59, 87, 90, 91, 141, 182, 186, 213, 233], "series_approx2": 33, "1e": [33, 51, 55, 87, 98, 130, 191, 213], "series_approx3": 33, "series_approx8": 33, "sumapprox": 33, "neglect": 33, "2000": [33, 37, 78, 91, 189], "sum_approx3": 33, "sum_approx2": 33, "sum_approx1": 33, "token": [33, 76, 79, 93], "diagram": [33, 40, 80, 94, 116, 117, 122, 141, 220, 244, 257, 265], "codegenast": 33, "assignmentbas": 33, "augmentedassign": 33, "addaugmentedassign": 33, "subaugmentedassign": 33, "mulaugmentedassign": 33, "divaugmentedassign": 33, "modaugmentedassign": 33, "codeblock": [33, 93], "quotedstr": 33, "intbasetyp": 33, "_sizedinttyp": 33, "signedinttyp": 33, "unsignedinttyp": 33, "floatbasetyp": 33, "floattyp": 33, "complexbasetyp": 33, "complextyp": 33, "pointer": [33, 228, 229], "functionprototyp": 33, "functiondefinit": [33, 93], "stream": [33, 52, 196, 207, 233], "functioncal": 33, "breaktoken": 33, "continuetoken": 33, "nonetoken": 33, "float32": [33, 92, 93, 234], "float64": [33, 92, 215], "codeprint": 33, "underli": [33, 43, 49, 51, 80, 87, 98, 113, 156, 169, 213, 214, 215], "complex_": 33, "bool_": 33, "intc": [33, 93], "intp": 33, "unsign": [33, 56, 207], "int8": 33, "int16": 33, "int32": 33, "int64": [33, 215], "uint8": 33, "uint16": 33, "uint32": 33, "uint64": 33, "x86": 33, "amd64": 33, "complex64": 33, "complex128": 33, "newton": [33, 59, 122, 164, 168, 188, 192], "aug_assign": 33, "tol": [33, 51, 186], "val": [33, 51, 63, 186, 190, 234], "whl": 33, "py_str": 33, "inf": [33, 43, 51, 87, 186, 191, 203, 211, 215], "exec": [33, 51, 79, 234], "1121416371": 33, "909672693737": 33, "867263818209": 33, "865477135298": 33, "865474033111": 33, "1g": 33, "3e": 33, "2003": [33, 180, 189, 195, 208], "source_format": [33, 195], "align": [33, 61, 87, 107, 179, 180, 195, 226], "op": [33, 51, 87, 150, 161, 174, 178, 204, 233, 234], "parametr": [33, 59, 60, 64, 87, 181, 208, 214, 240, 242, 249], "volatil": 33, "binop": 33, "exit": [33, 91, 226], "premad": 33, "break_": 33, "lift": [33, 47, 57, 59, 76, 186, 188, 191], "left_hand_sid": 33, "topological_sort": [33, 233], "postprocess": [33, 191, 196, 207], "topolog": [33, 51, 53, 76, 184, 203, 233], "continue_": 33, "untyp": 33, "compliant": 33, "ok": [33, 43, 195, 211], "elem": [33, 42, 182], "ijk": [33, 220], "stride": [33, 220], "lmn": 33, "cast_nocheck": 33, "alia": [33, 44, 51, 61, 67, 82, 83, 85, 89, 145, 154, 161, 182, 185, 186, 190, 194, 203, 226, 236, 270], "nbit": 33, "storag": [33, 51, 87, 155, 180, 188], "nmant": 33, "mantissa": 33, "nexp": 33, "half_precis": 33, "f16": 33, "65504": 33, "tini": [33, 51], "ep": [33, 42, 50, 186, 190, 191], "decimal_dig": 33, "cast_check": 33, "1e5": 33, "cast": [33, 84, 262], "subnorm": [33, 42], "loss": [33, 76, 161, 227, 245], "idempot": 33, "loos": [33, 51, 206], "overflow": [33, 230], "max_expon": 33, "min_expon": 33, "for_i": 33, "for_ji": 33, "for_kji": 33, "function_arg": [33, 226], "fcall": 33, "bar": [33, 59, 150, 156, 236], "baz": 33, "return_typ": 33, "fp": [33, 34, 51, 191, 197], "from_functionprototyp": 33, "prototyp": [33, 92, 228], "value_const": 33, "pointer_const": 33, "attr_param": 33, "looking_for": 33, "as_declar": 33, "formatstr": 33, "5g": 33, "stdout": [33, 226], "stderr": 33, "atom": [33, 43, 78, 81, 82, 102, 162, 185, 192, 195, 213, 214, 220], "oppos": [33, 234, 260], "_field": 33, "_construct_": 33, "not_in_arg": 33, "exclud": [33, 50, 51, 78, 87, 106, 128, 183, 186, 188, 191, 201, 211, 213, 226, 229, 233], "float16": 33, "inttyp": 33, "super": [33, 59, 186, 195, 240, 241], "from_expr": [33, 191], "toler": [33, 51, 55, 186, 207, 213], "42": [33, 40, 51, 54, 56, 64, 65, 67, 82, 83, 85, 87, 89, 91, 186, 208, 226], "v6": 33, "123456": [33, 51, 91], "v10": 33, "12345": [33, 55], "67894": 33, "boost_mp50": 33, "boost": 33, "multiprecis": [33, 185], "cpp_dec_float_50": 33, "r37": 33, "rtol": 33, "atol": 33, "precision_target": 33, "256": [33, 42, 91, 191, 195], "v18": 33, "123456789012345646": 33, "123456789012345649": 33, "Will": [33, 87, 93, 190, 195, 226], "decl1": 33, "decl2": 33, "alt": 33, "secondarili": [33, 191], "mathcin": 33, "cbrt": [33, 58, 195], "minu": [33, 50, 51, 176, 188, 195, 246], "0e": [33, 51], "fma": [33, 195], "cpu": [33, 92, 128], "hypot": [33, 195], "hypotenus": [33, 67], "log10": [33, 195], "ten": [33, 92], "plu": [33, 50, 87, 93, 128, 141, 195, 205, 234], "famili": [33, 35, 69, 78, 183], "commaoper": 33, "goto": 33, "preincrement": 33, "postdecr": 33, "decrement": [33, 206, 230], "postincr": 33, "increment": [33, 42, 43, 44, 50, 67, 91, 206, 215], "predecr": 33, "alignof": 33, "sizeof": 33, "struct": 33, "dsign": 33, "arrayconstructor": 33, "ac": [33, 43, 63, 110, 126, 138, 208, 215, 233, 236], "95": [33, 49, 91, 188, 195, 211, 213, 228], "do1": 33, "1d0": 33, "do2": 33, "extent": 33, "intent_out": 33, "dim": [33, 53, 66, 92, 163, 169, 195, 218, 221], "arr": 33, "fortranreturn": 33, "aid": [33, 115], "implieddoloop": 33, "idl": 33, "signallib": 33, "prog": [33, 140], "myprogram": 33, "mysub": 33, "subroutinecal": 33, "passs": 33, "inout": 33, "bind_c": 33, "sum_": [33, 50, 51, 52, 56, 59, 76, 78, 82, 84, 91, 192, 197, 198, 205, 211, 215], "cmplx": [33, 195], "intent_in": 33, "intrins": 33, "isign": 33, "lbound": 33, "lb": [33, 73, 230], "literal_dp": 33, "num": [33, 42, 51, 91, 100, 186, 207, 211, 230, 236], "literal_sp": 33, "reshap": [33, 82, 113, 128, 216, 222, 233], "arrayexpr": 33, "shp": 33, "metric": [33, 43, 47, 53, 101, 207, 211, 214, 221], "snr": 33, "convolution2d": 33, "use_renam": 33, "ren": 33, "thingi": 33, "newtons_method": 33, "itermax": 33, "counter": [33, 51, 57, 63, 82, 95], "raphson": 33, "criterion": [33, 42, 127, 183, 188], "dummi": [33, 47, 50, 57, 76, 78, 87, 113, 128, 156, 161, 185, 186, 190, 191, 192, 201, 202, 203, 205, 207, 211, 214, 219, 221, 224, 228, 233, 234], "netwon": 33, "algo": [33, 43], "r38": 33, "27s_method": 33, "newtons_method_funct": 33, "param": [33, 53, 87, 208], "render_as_modul": 33, "py_mod": 33, "865474033102": 33, "render_as_source_fil": 33, "printer_set": 33, "fcodeprint": [33, 195], "fpgroup": [34, 42], "studi": [34, 41, 50, 53, 87, 179, 182, 188, 191, 208, 215], "combinator": [34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 84, 91, 197, 216, 221, 230, 233, 251, 264, 270], "free_group": [34, 41, 42], "vfree_group": 34, "xfree_group": 34, "fp_group": [34, 42], "coset_enumeration_r": 34, "fall": [34, 50, 51, 56, 79, 175, 190, 195, 208, 212, 215], "famou": [34, 59, 78, 91, 208], "langl": [34, 42, 140, 180], "rangl": [34, 42, 140, 158, 180], "gen0": 34, "gen1": 34, "gen_": 34, "freegroup": 34, "x_2": [34, 41, 56, 73, 156, 183, 188, 191, 197, 208, 214], "x_3": [34, 41, 73, 156], "s_1": 34, "r_1": [34, 182, 192], "s_2": 34, "r_2": 34, "s_k": 34, "r_k": [34, 154], "s_i": [34, 47, 78, 80], "r_i": [34, 192], "reduct": [34, 87, 109, 188, 190, 206, 208], "techniqu": [34, 46, 76, 78, 195, 197, 207, 211, 214, 266], "ho05": [34, 41], "cdhw73": 34, "hav91": 34, "coset_enumeration_c": 34, "coset_enumer": 34, "relator_bas": 34, "coset_table_bas": 34, "total": [34, 40, 42, 51, 56, 67, 80, 81, 82, 84, 115, 116, 123, 130, 134, 140, 145, 158, 167, 180, 186, 188, 191, 204, 207, 211, 219, 221, 249], "influenc": [34, 94, 182, 183], "coset_table_max_limit": 34, "4096000": 34, "safeti": [34, 43, 85], "max_coset": 34, "cox": [34, 189, 191], "c_r": [34, 205], "50": [34, 42, 54, 55, 56, 59, 67, 87, 91, 94, 95, 134, 191, 195, 204, 213], "max_stack_s": 34, "500": [34, 55, 110], "deduction_stack": 34, "stack": [34, 68, 82, 128, 184, 190, 195, 224, 230, 266], "occurr": [34, 51, 91, 113, 171, 207, 215], "exce": [34, 91, 221], "modest": 34, "low_index_subgroup": 34, "conjugaci": [34, 42], "coset_t": [34, 42], "reidemeister_present": 34, "y_1": [34, 208, 215], "y_2": [34, 208, 215], "john": [34, 42, 59, 191, 208, 211], "cannon": 34, "lucien": 34, "dimino": [34, 42], "georg": [34, 182, 211, 233], "hava": 34, "jane": 34, "watson": [34, 207], "comp": [34, 211], "463": [34, 127], "490": [34, 43], "1973": [34, 52, 177], "derek": [34, 41], "holt": [34, 41, 42, 49], "chapman": [34, 41], "hall": [34, 41, 215], "crc": [34, 41, 43], "2005": [34, 41, 78, 91, 191], "xvi": [34, 41], "514": [34, 41, 189], "symposium": [34, 76, 188, 189, 205], "issac": [34, 78, 189, 213], "bonn": 34, "1991": [34, 189], "191": [34, 214], "199": 34, "acm": [34, 50, 76, 78, 189, 205, 211, 213], "graycod": 35, "kw_arg": [35, 45, 161, 220, 221], "hamiltonian": [35, 152], "edg": [35, 44, 45, 80, 184, 195, 214, 233, 269], "hamilton": [35, 82], "vertex": [35, 45, 62, 67, 78, 184], "000": [35, 55, 78, 81, 155, 233], "110": [35, 81, 211, 213, 227, 233], "010": [35, 81, 233], "011": [35, 81, 155, 233], "111": [35, 54, 61, 81, 91, 233], "101": [35, 81, 91, 155, 233], "001": [35, 55, 81, 130, 233], "delet": [35, 80, 82, 87, 192, 236, 270], "statist": [35, 52, 59, 215, 226, 264], "manner": [35, 52, 59, 125, 159, 176, 208, 211, 216, 233, 248], "generate_grai": 35, "0000": 35, "0001": [35, 55], "0011": [35, 46], "0010": 35, "0110": 35, "0111": [35, 155], "0101": [35, 155], "0100": 35, "1100": 35, "1101": 35, "1111": 35, "1110": 35, "1010": 35, "1011": 35, "1001": 35, "r39": 35, "nijenhui": 35, "wilf": [35, 50, 213], "1978": [35, 42, 166, 189], "r40": 35, "knuth": [35, 43, 230], "2011": [35, 43, 76, 91, 177, 204], "art": [35, 43, 182, 195, 197, 230, 257], "vol": [35, 43, 52, 56, 59, 76, 87, 101, 190, 191, 205, 230, 233], "addison": [35, 43, 91, 189], "weslei": [35, 43, 91, 189], "r41": 35, "reflect": [35, 39, 43, 51, 61, 62, 67, 80, 130, 133, 134, 171], "brgc": 35, "6th": [35, 91], "unrank": [35, 40, 42, 43, 45], "r42": 35, "statweb": 35, "stanford": 35, "susan": 35, "s208": 35, "node12": 35, "tail": [35, 50, 51, 186, 215], "00010": 35, "random_bitstr": 35, "bitlist": [35, 46], "gray_to_bin": 35, "endian": 35, "bin_to_grai": 35, "get_subset_from_bitstr": 35, "bitstr": 35, "graycode_subset": 35, "group_construct": 36, "directproduct": [36, 39], "__mul__": [36, 42, 82, 87, 186, 190], "shift": [36, 42, 43, 45, 52, 59, 62, 66, 68, 81, 181, 186, 188, 191, 198, 205, 213, 215], "gn": 36, "named_group": [36, 39, 41, 42, 48, 49], "cyclicgroup": [36, 39, 42], "perm_group": [36, 41, 42, 43, 48, 49], "permutationgroup": [36, 39, 41, 42, 43, 48, 49], "group_numb": 37, "is_nilpotent_numb": 37, "r43": 37, "randprim": [37, 91], "pakianathan": 37, "shankar": 37, "monthli": [37, 52, 87], "107": [37, 189], "631": 37, "634": 37, "is_abelian_numb": 37, "r44": 37, "is_cyclic_numb": 37, "r45": 37, "polyhedron": [38, 42, 78, 233], "prufer": 38, "grai": [38, 46, 79, 130, 175, 181], "nilpot": [38, 42, 87], "abelian": [38, 39, 42, 80, 166, 182], "cyclic": [38, 39, 42, 43, 44, 54, 82, 91, 221, 233], "canonic": [38, 51, 204, 221], "coset": [38, 42, 47, 190], "todd": 38, "coxet": [38, 80], "subgroup": [38, 42, 43, 47, 49, 80, 91], "bibliographi": 38, "polycycl": [38, 42], "collector": 38, "symmetricgroup": [39, 41, 42, 48, 49], "transposit": [39, 42, 43, 52, 82, 84, 217], "is_group": [39, 42], "generate_schreier_sim": [39, 42], "af": [39, 42, 48, 128], "dihedralgroup": [39, 42, 49], "alternatinggroup": [39, 42, 48], "r46": 39, "symmetric_group": 39, "generators_and_rel": 39, "dihedr": [39, 43], "d_n": [39, 80, 191], "gon": 39, "bab": 39, "generate_dimino": [39, 42], "perm": [39, 41, 42, 43, 44, 49, 56, 82, 84, 87, 216], "cyclic_form": [39, 43, 44], "r47": 39, "dihedral_group": 39, "31": [39, 51, 54, 55, 67, 91, 126, 180, 191, 208], "ex": [39, 78, 101, 112, 185, 187, 190, 191, 221, 229], "r48": 39, "armstrong": 39, "abeliangroup": [39, 42], "cyclic_ord": 39, "theorem": [39, 52, 59, 61, 67, 77, 78, 82, 87, 91, 103, 104, 115, 161, 170, 178, 182, 185, 188, 202, 205, 208, 214, 247, 257], "r49": 39, "groupprop": [39, 42], "subwiki": [39, 42], "structure_theorem_for_finitely_generated_abelian_group": 39, "multiset_partit": [40, 56, 76, 230, 233], "rg": 40, "growth": [40, 91, 188, 260], "from_rg": 40, "abcd": [40, 44, 161, 233, 236], "cbead": 40, "sort_kei": [40, 51, 211], "ti": [40, 43, 51, 91], "integerpartit": [40, 233], "summand": [40, 190], "r50": 40, "partition_": [40, 56], "28number_theori": 40, "as_dict": [40, 185, 191], "as_ferr": 40, "char": 40, "ferrer": 40, "next_lex": [40, 43], "lexic": [40, 141, 233], "prev_lex": 40, "random_integer_partit": 40, "seed": [40, 42, 51, 52, 61, 64, 65, 87, 91, 188, 215, 226, 233], "85": [40, 55, 56, 87, 91, 115, 159, 180, 215], "rgs_gener": 40, "37": [40, 52, 57, 61, 87, 91, 95, 195, 208], "52": [40, 56, 91, 94, 95, 180, 194, 208, 211, 233, 260], "151": 40, "203": [40, 56], "rgs_enum": 40, "rgs_unrank": 40, "rgs_rank": 40, "pcgroup": 41, "pcg": 41, "pc_seri": [41, 42], "polycyl": 41, "pc_present": 41, "pc_sequenc": [41, 42], "miss": [41, 42, 68, 195, 213, 228, 270], "adjac": [41, 42, 43, 51, 100, 133, 184, 233], "der": [41, 42], "relative_ord": [41, 42], "polycyclic_group": [41, 42], "gen": [41, 42, 47, 48, 49, 51, 87, 182, 185, 186, 188, 190, 191, 192, 193, 201, 207, 210, 213], "is_ident": [41, 43, 51], "poss": [41, 115, 179], "pc_group": 41, "a_j": [41, 59, 76, 166, 188, 197, 205], "notin": [41, 76, 203], "_order": 41, "minimal_uncollected_subword": 41, "subword_index": 41, "i_1": [41, 161, 191, 216], "a_1": [41, 42, 52, 59, 73, 76, 82, 87, 101, 161, 166, 183, 188, 205, 208, 211, 213, 215, 270], "i_r": 41, "a_r": [41, 205], "i_2": [41, 161, 191], "s_": [41, 47, 113, 188], "s_j": [41, 80, 188], "x3": [41, 51, 56, 185, 211, 215], "collected_word": 41, "free_to_perm": 41, "bottom": [41, 42, 51, 52, 67, 82, 87, 90, 112, 190, 195, 204, 249], "pictur": [41, 195], "x_3x_2": 41, "x_3x_1": 41, "x_2x_1": 41, "x_3x_0": 41, "x_2x_0": 41, "x_1x_0": 41, "varii": 41, "derived_seri": [41, 42], "pc_resent": 41, "k_arrai": 41, "array_form": [41, 43, 44], "v_arrai": 41, "e_1": [41, 87, 182, 188, 191], "e_n": [41, 56, 80, 87, 137, 182, 191], "exponent_vector": 41, "leading_expon": 41, "dup": [42, 186, 187], "pn": [42, 116, 125], "motion": [42, 104, 108, 109, 112, 115, 116, 117, 119, 121, 122, 123, 124, 125, 128, 129, 174, 175, 178, 179, 215], "front": [42, 51, 115, 130, 160, 186, 188, 191, 195, 207, 270], "face": [42, 44, 64, 78, 113, 188, 192, 195, 208, 249, 266], "rubik": 42, "3674160": 42, "pgroup": [42, 44], "corner": [42, 44, 82, 191, 211, 214, 234], "reset": [42, 44, 181, 188, 191, 226, 229, 231], "p10": 42, "make_perm": 42, "r51": 42, "eick": [42, 49], "brien": [42, 49], "r52": 42, "seress": 42, "r53": 42, "schreier_vector": 42, "r54": 42, "nielsen_transform": 42, "product_replacement_algorithm": 42, "r55": 42, "frank": [42, 43, 87], "celler": 42, "charl": 42, "leedham": 42, "green": [42, 181], "scott": 42, "murrai": 42, "alic": [42, 52], "niemey": 42, "r56": 42, "block_": 42, "28permutation_group_theori": 42, "r57": 42, "algorithmist": 42, "php": [42, 59, 91, 208, 215], "union_find": 42, "r58": 42, "multiply_transitive_group": 42, "r59": 42, "center_": 42, "28group_theori": 42, "centralizer_and_norm": 42, "derived_subgroup": 42, "nilpotent_group": 42, "colost": 42, "hulpk": 42, "cgt": 42, "cgtnote": 42, "__contains__": 42, "__weakref__": [42, 82], "weak": [42, 51, 82, 185, 188], "_coset_repres": 42, "hg": 42, "transvers": [42, 47, 49, 134, 135], "coset_transvers": 42, "_distinct_primes_lemma": 42, "_element": 42, "_eval_is_alt_sym_monte_carlo": 42, "05": [42, 73, 98, 177, 180], "mont": 42, "carlo": 42, "candidat": 42, "randomli": [42, 51, 52, 91, 155], "n_ep": 42, "_check_cycles_alt_sym": [42, 49], "_eval_is_alt_sym_na": 42, "only_sym": 42, "only_alt": 42, "_p_elements_group": 42, "_random_pr_init": 42, "_random_prec_n": 42, "modif": [42, 57, 87, 214, 215, 230], "69": [42, 87, 213, 230], "71": [42, 67, 87, 164], "_random_gen": 42, "append": [42, 51, 52, 87, 95, 128, 156, 181, 186, 195, 216, 228, 229, 233, 270], "accumul": [42, 226, 230], "random_pr": 42, "chosen": [42, 43, 52, 53, 64, 65, 87, 91, 94, 107, 129, 163, 166, 181, 182, 186, 188, 190, 195, 202, 205, 211, 215, 226, 240], "gh": [42, 183, 214, 221], "eventu": [42, 59, 78, 181, 182, 202, 228, 233], "_sylow_alt_sym": 42, "sylow": 42, "p_1": [42, 47, 52, 69, 91, 178, 205, 208], "p_2": [42, 52, 69, 91, 178, 205], "p_p": 42, "sylow_subgroup": 42, "is_alt_sym": [42, 49], "_union_find_merg": 42, "parent": [42, 51, 74, 107, 171, 174, 181, 185, 186, 190, 226, 230, 240, 243, 244], "not_rep": 42, "atkinson": 42, "83": [42, 194], "87": [42, 57, 87, 91], "minimal_block": 42, "_union_find_rep": 42, "r60": 42, "r66": 42, "compress": [42, 87, 90], "r62": 42, "r68": [42, 43], "_verifi": 42, "_h": [42, 214], "gens_k": 42, "rels_k": 42, "gens_h": 42, "stabil": [42, 47, 49, 55, 100, 125, 219], "inject": [42, 51, 182, 186, 191, 266], "homomorph": [42, 187], "rels_h": 42, "strong_present": 42, "abelian_invari": 42, "isomorph": [42, 45, 182, 185, 188, 190], "t_1": [42, 56, 208], "t_2": [42, 56, 208], "t_r": [42, 126, 221], "542": 42, "adopt": [42, 221], "schreier": [42, 47, 49], "sim": [42, 47, 49, 76], "b_1": [42, 49, 59, 73, 76, 182, 205, 208, 211, 270], "b_2": [42, 49, 59, 73, 205, 211], "dot": [42, 43, 47, 49, 52, 64, 66, 73, 82, 87, 100, 115, 116, 119, 120, 121, 123, 124, 125, 126, 128, 145, 171, 175, 177, 178, 179, 180, 182, 183, 188, 191, 195, 214, 215, 233, 240, 243, 245, 246], "b_k": [42, 49, 52, 56, 59, 197, 198], "strong": [42, 47, 48, 49, 91, 92], "89": [42, 49, 78], "55": [42, 54, 56, 87, 180, 181, 191, 208], "57": [42, 87, 91, 215], "strong_gen": [42, 48, 49], "basic_transvers": [42, 49], "basic_orbit": [42, 49], "basic_stabil": 42, "baseswap": 42, "po": [42, 76, 81, 82, 110, 126, 128, 186, 213], "strong_gens_distr": [42, 49], "swap": [42, 43, 44, 82, 87, 141, 145, 154, 215, 233], "orbit": [42, 49, 161, 162, 164], "b_": [42, 47, 49, 51, 56, 59, 76, 84, 100, 197, 205, 208, 216], "b_i": [42, 47, 49, 76, 182, 205], "la": [42, 128, 166], "vega": 42, "testutil": [42, 48, 49], "_verify_bsg": [42, 48, 49], "schreier_sim": [42, 48, 49], "bsg": [42, 47, 49, 221], "102": [42, 87], "98": [42, 52, 127, 191, 211], "pseudocod": 42, "beta_": 42, "g_": [42, 49, 50, 59, 76, 208], "foral": [42, 50, 53, 166], "zg": 42, "gz": 42, "c_g": 42, "gs": [42, 76], "sg": [42, 215, 221], "is_subgroup": 42, "subgroup_search": 42, "hgh": 42, "closur": [42, 48, 74, 141, 190, 203], "composition_seri": 42, "h_0": [42, 47], "h_1": [42, 47, 214], "h_2": [42, 214], "1024": [42, 195, 215], "512": [42, 59], "128": [42, 56, 59, 61, 91, 189, 195], "32": [42, 54, 57, 59, 61, 87, 91, 98, 126, 189, 191, 192, 204, 205, 208, 215, 226], "243": [42, 59, 213], "81": [42, 56, 61, 82, 87, 91, 113, 115, 180, 194], "conjugacy_class": 42, "xax": 42, "s_3": 42, "s3": [42, 50, 100, 198, 208], "feasibl": [42, 100], "resiz": [42, 43, 82, 84], "coset_factor": 42, "factor_index": 42, "_basic_orbit": 42, "u1": [42, 91, 113, 115, 116, 117, 119, 120, 123, 125, 128, 171, 173, 174, 175, 178, 211], "u2": [42, 90, 91, 113, 115, 116, 117, 119, 120, 123, 128, 171, 174, 178, 211], "_strip": [42, 49], "coset_rank": 42, "lexicograph": [42, 43, 46, 47, 51, 188, 191, 233], "coset_unrank": 42, "standardis": [42, 185], "subsect": [42, 246], "compris": [42, 52, 84, 110, 126, 129, 191, 233], "g_0": [42, 208], "g_1": [42, 191, 202, 208, 211], "g_2": [42, 80, 202, 211], "g_i": [42, 202], "g_k": 42, "tetrahedron": [42, 44], "r64": 42, "axiom": [42, 182], "doy": 42, "sc": [42, 78], "thesi": [42, 51, 202, 240], "generator_product": 42, "sn": [42, 43, 50, 73], "is_abelian": 42, "_random_prec": 42, "probabl": [42, 51, 56, 59, 63, 91, 113, 155, 159, 205, 211, 214, 215, 227, 262, 268], "transit": [42, 128, 188, 215], "82": [42, 78, 87, 215], "proport": [42, 52, 202], "226": 42, "227": 42, "is_altern": 42, "quicker": [42, 91], "taxonomi": 42, "is_cycl": 42, "p_": [42, 47, 51, 78, 166, 208, 211, 216], "p_i": [42, 47, 91], "equiv": [42, 52, 56, 91, 190, 205, 208], "pmod": [42, 51, 52, 56, 87, 205], "p_j": [42, 47], "r65": 42, "35": [42, 45, 54, 56, 64, 65, 78, 87, 91, 115, 190, 195, 208, 211, 215], "rose": 42, "is_elementari": 42, "is_nilpot": [42, 87], "solvabl": [42, 208, 211, 214, 271], "lower_central_seri": 42, "is_solv": 42, "is_norm": [42, 159], "gr": 42, "is_perfect": [42, 91], "is_polycycl": 42, "is_primit": [42, 186, 191], "primit": [42, 51, 52, 59, 91, 155, 159, 182, 183, 185, 186, 188, 190, 191, 194, 195, 208, 260], "cardin": [42, 43, 46, 182, 203], "badli": 42, "random_stab": 42, "g3": [42, 100], "s5": 42, "is_symmetr": [42, 82], "is_transit": 42, "is_trivi": 42, "cba": [42, 216, 233], "mainli": [42, 59, 87, 92, 166, 175, 188, 205, 208, 211], "max_div": 42, "siev": [42, 91], "nonempti": 42, "gb": 42, "moreov": [42, 52, 76, 165, 176, 182, 183, 188, 196, 244], "congruenc": [42, 51, 91, 205, 208], "p_0": [42, 47, 69, 205, 208], "maxim": [42, 52, 80, 182, 186, 190, 202, 204], "intransit": 42, "normal_closur": 42, "adjoin": [42, 183], "yx": [42, 179], "73": [42, 50, 51, 64, 91, 211], "74": [42, 56, 91], "orb": 42, "78": [42, 65, 87, 91, 95, 166, 211, 215], "orbit_transvers": 42, "orbit_rep": 42, "send": [42, 51, 52, 57, 91, 182, 211, 213], "proof": [42, 45, 76, 78, 214], "79": [42, 43, 95], "pointwise_stabil": 42, "pointwis": [42, 49], "p_k": [42, 91], "p20": 42, "stab": 42, "schreier_sims_increment": [42, 49], "polycyclicgroup": 42, "eliminate_gen": 42, "gen_count": 42, "b1": [42, 47, 59, 91, 94, 95, 105, 113, 128, 171, 186, 195, 205, 208, 211, 245], "b_r": 42, "slp_dict": 42, "seq": [42, 51, 54, 87, 186, 188, 191, 201, 213, 233], "93": [42, 189], "schreier_sims_random": [42, 49], "consec_succ": 42, "consec": 42, "_succ": 42, "97": [42, 52, 91, 188], "sift": [42, 49, 233], "amend": 42, "decompos": [42, 43, 49, 51, 53, 57, 62, 87, 91, 145, 154, 155, 157, 186, 191, 194, 215], "unsuccess": [42, 49], "accordingli": [42, 183, 190], "halt": 42, "signifi": [42, 51, 191, 215], "g_t": 42, "leq": [42, 50, 52, 59, 76, 87, 91, 188, 190, 201, 202, 208, 215], "prop": [42, 190], "init_subgroup": 42, "supergroup": 42, "sought": [42, 91, 146, 156, 207, 214], "prune": 42, "prop_even": 42, "lengthi": 42, "114": [42, 91], "117": [42, 59], "terribl": 42, "crucial": [42, 50, 185], "len1": 42, "len2": 42, "len3": 42, "transitivity_degre": 42, "fold": [42, 51, 57, 195, 202, 207], "a_2": [42, 52, 73, 87, 188, 205, 208, 211, 215, 270], "a_k": [42, 52, 192, 198, 213], "arrang": [43, 100, 108, 126, 128, 204, 208, 221], "r69": 43, "reorder": [43, 50, 161, 191, 211, 215, 233], "pretty_print": [43, 79, 110, 115, 119, 120, 121, 123, 124, 126, 129, 171, 173, 174, 175, 178, 179, 195], "enter": [43, 51, 52, 56, 64, 91, 93, 94, 108, 112, 115, 123, 195, 205, 213, 226, 265, 269], "understood": [43, 91, 166, 182, 186], "economi": 43, "caution": [43, 51, 57, 207], "singleton": [43, 81, 199, 214, 251, 253, 265], "indexerror": [43, 87, 191], "autos": [43, 90], "watch": 43, "print_cycl": 43, "econom": [43, 78, 233], "retain": [43, 51, 57, 59, 78, 93, 191, 196, 204, 207], "biject": [43, 45, 52, 82, 182], "full_cyclic_form": 43, "rmul": 43, "unrank_lex": 43, "r73": 43, "zo42": 43, "from_sequ": 43, "a1": [43, 47, 51, 79, 82, 91, 95, 113, 128, 135, 211, 215, 216, 245, 270], "a2": [43, 47, 51, 80, 82, 91, 95, 113, 128, 135, 184, 215, 216, 245, 270], "a3": [43, 47, 51, 80, 82, 128, 245, 270], "perfectli": [43, 50, 51, 52, 188, 191, 194], "skiena": 43, "ma": [43, 50, 117], "1990": [43, 76, 205, 240], "r70": 43, "wendi": 43, "myrvold": 43, "ruskei": 43, "2001": [43, 91, 189], "lett": 43, "septemb": [43, 230], "281": 43, "284": [43, 91], "1016": 43, "s0020": 43, "0190": 43, "01": [43, 51, 55, 113, 155, 189, 207, 233], "00141": 43, "r71": 43, "kreher": 43, "stinson": 43, "1999": [43, 87, 189, 194, 211], "r72": 43, "graham": [43, 56, 57, 91], "patashnik": 43, "foundat": [43, 189, 190], "1994": [43, 188, 189, 191], "product_and_invers": 43, "r74": 43, "lehmer_cod": 43, "appliedpermut": 43, "magic": [43, 207, 226, 262], "attatch": 43, "_array_form": 43, "ascent": 43, "ie": [43, 208], "descent": 43, "fg": [43, 53, 211, 214], "gf": [43, 52, 182, 184, 185, 187, 188, 190], "r75": 43, "commutes_with": [43, 221], "cycle_structur": 43, "from_inversion_vector": 43, "get_adjacency_dist": 43, "n_adj": 43, "reev": 43, "colin": 43, "landscap": 43, "annal": 43, "86": [43, 87, 127, 194, 204], "473": 43, "josephu": 43, "get_precedence_matrix": 43, "get_precedence_dist": 43, "get_adjacency_matrix": 43, "get_positional_dist": 43, "subscript": [43, 186, 195, 205, 208, 233], "inversion_vector": 43, "lesser": [43, 191], "lie": [43, 53, 65, 66, 67, 191, 209, 215, 250, 257], "lehmer": 43, "ith": [43, 80, 91, 186, 192, 214, 215], "variat": [43, 51, 188, 202, 211, 232], "r76": 43, "eng": 43, "chula": 43, "piak": 43, "algo2008": 43, "htm": [43, 59, 78, 208], "is_singleton": 43, "is_odd": 43, "shuffl": [43, 87, 270], "012345": 43, "345": 43, "253": 43, "2531": 43, "25314": 43, "253140": 43, "r77": 43, "flavius_josephu": 43, "r78": 43, "josephus_problem": 43, "r79": 43, "wou": 43, "burtonl": 43, "trim": [43, 125], "unmov": 43, "mul_inv": 43, "next_nonlex": 43, "nonlex": 43, "rank_nonlex": 43, "unrank_nonlex": 43, "next_trotterjohnson": [43, 233], "trotter": 43, "johnson": [43, 87], "generate_bel": [43, 233], "rank_trotterjohnson": 43, "unrank_trotterjohnson": 43, "_af_par": 43, "pseudo": [43, 87, 91, 186, 188, 191], "inv_perm": 43, "enforc": [43, 115], "rmul_with_af": 43, "ascend": [43, 233], "r80": 43, "transposition_": 43, "28mathemat": [43, 51, 203], "flexibl": [43, 51, 113, 128, 178, 181, 185, 214, 260], "investig": [43, 76, 180, 182, 205, 233, 262], "cn": [43, 195, 269], "2n": [43, 50, 56, 59, 78, 82, 101, 124, 180, 198, 205], "dn": [43, 215], "klein": 43, "s4": [43, 100], "polyhedr": 44, "psg": 44, "platon": 44, "solid": [44, 65, 181, 249], "tetrahedr": 44, "octahedr": 44, "icosahedr": 44, "r81": 44, "polyhedralgroup": 44, "polyhedra": [44, 77], "shadow": 44, "h5": 44, "heinz": 45, "caylei": [45, 82], "r82": 45, "labeledtre": 45, "tree_repr": 45, "prufer_rank": 45, "prev": 45, "36": [45, 52, 56, 67, 78, 82, 87, 91, 95, 191, 195, 208, 211, 215, 249], "prufer_repr": 45, "record": [45, 51, 190, 226], "to_pruf": 45, "778": 45, "779": 45, "777": [45, 54], "1296": 45, "to_tre": 45, "r83": 45, "hamberg": 45, "erlend": 45, "2010": [45, 212, 233], "06": [45, 51, 115, 180, 215], "compact": [45, 51, 97, 128, 159, 175, 191, 195, 213, 230], "next_binari": 46, "prev_binari": 46, "bitlist_from_subset": 46, "subset_from_bitlist": 46, "superset_s": 46, "iterate_binari": 46, "iterate_graycod": 46, "prev_grai": 46, "next_grai": 46, "next_lexicograph": 46, "prev_lexicograph": 46, "rank_binari": 46, "unrank_binari": 46, "rank_grai": 46, "unrank_grai": 46, "rank_lexicograph": 46, "43": [46, 87, 91, 94, 95, 215, 270], "super_set": 46, "subset_indic": 46, "ksubset": 46, "itertool": [46, 233], "tensor_can": [47, 221], "msym": 47, "contravari": [47, 87, 221, 222], "covari": [47, 53, 87, 215, 221, 222], "d0": 47, "base_i": 47, "gens_i": 47, "n_i": [47, 188, 213], "sym_i": 47, "failur": [47, 55, 68, 76, 91, 215, 226, 270], "canonicalize_na": 47, "exchang": [47, 52, 87, 180, 184, 233], "anticommut": [47, 148, 150, 160, 161, 221], "canonical_fre": 47, "slot": [47, 145, 216, 220, 221, 265], "residu": [47, 52, 91, 188, 199, 205], "tensor_gen": 47, "list_free_indic": 47, "double_coset_can_rep": 47, "reintroduc": 47, "a_": [47, 51, 52, 59, 76, 80, 82, 84, 100, 101, 126, 197, 205, 208, 211, 213, 215, 216], "antisymmetr": [47, 53, 82, 161, 221], "d2": [47, 171, 182, 202, 215, 233, 240], "ord": [47, 52, 87], "t_c": 47, "get_symmetric_group_sg": [47, 221], "bsgs_direct_product": 47, "base2a": 47, "gens2a": 47, "t0": 47, "t1": [47, 67, 68, 91, 105, 110, 208, 215], "a_m": [47, 211], "a_n": [47, 52, 59, 76, 80, 166, 183, 188, 198, 208, 211, 270], "_a": [47, 59, 161, 191], "_b": [47, 59, 161], "base_f": 47, "gens_f": 47, "base1": 47, "gens1": 47, "base_a": 47, "gens_a": 47, "sgen": 47, "s_transvers": 47, "butler": [47, 221], "portug": [47, 221], "grow": [47, 51, 76, 87, 91, 185, 188], "computation": [47, 108, 109], "absenc": [47, 81], "observ": [47, 73, 76, 150, 179, 182, 205, 208, 211, 215, 248, 270], "opposit": [47, 67, 81, 82, 105, 107, 183, 186, 203, 207, 214, 222, 233, 240, 241, 270], "ind": [47, 197, 221], "d3": [47, 202], "a0": [47, 211, 270], "a4": [47, 51, 80, 128, 270], "a5": [47, 51], "interchang": [47, 50, 76, 211], "leftrightarrow": 47, "_af_rmul": 47, "t_": [47, 56], "b0": [47, 59, 186, 205, 211], "d_": [47, 205], "p0": [47, 61, 190, 211], "dbase": 47, "recomput": [47, 191], "d_i": [47, 76, 166], "s_0": 47, "d_0": [47, 52], "b_0": [47, 52, 56, 205, 208, 211], "b_j": [47, 49, 59, 76, 205], "sx": 47, "trace": [47, 82, 84, 101, 128, 188, 195, 215, 216, 217, 219, 233, 266], "h_n": [47, 59, 78, 214], "tab1": 47, "get_transvers": 47, "antisym": 47, "base2": 47, "gens2": 47, "_cmp_perm_list": 48, "hashabl": [48, 76, 233], "ls1": 48, "ls2": 48, "_naive_list_centr": 48, "_verify_centr": 48, "_verify_normal_closur": 48, "_base_ord": 49, "base_ord": 49, "backtrack": 49, "108": [49, 91, 95], "132": [49, 56, 171], "r84": 49, "_distribute_gens_by_bas": 49, "membership": [49, 190, 203], "_strong_gens_from_distr": 49, "_orbits_transversals_from_bsg": 49, "_handle_precomputed_bsg": 49, "transversals_onli": 49, "slp": 49, "_remove_gen": 49, "new_gen": 49, "r85": 49, "r86": 49, "recurr": [50, 56, 73, 87, 190, 201, 207, 209, 211, 215, 235], "annihil": [50, 69, 70, 74, 137, 161, 213], "is_hypergeometr": 50, "binomi": [50, 55, 58, 59, 91, 191, 195, 200, 207, 211, 215, 233, 270], "rf": [50, 56, 191], "ff": [50, 52, 56, 180, 183, 184, 185, 190, 191], "speci": [50, 51], "rise": [50, 56, 59, 180, 207, 211, 215, 243], "knowledg": [50, 51, 52, 190, 211, 265, 268], "hypersimp": [50, 206], "quotient": [50, 51, 54, 57, 91, 182, 183, 185, 187, 188, 191, 205, 207, 211], "dummy_vari": 50, "stand": [50, 51, 128, 183, 185, 186, 192], "karr": 50, "quad": [50, 51, 53, 55, 59, 78, 82], "exclus": [50, 51, 81, 87, 188, 262], "emphas": 50, "typeset": [50, 195], "doit": [50, 51, 53, 56, 57, 59, 78, 84, 100, 138, 140, 142, 153, 155, 158, 159, 161, 171, 180, 191, 197, 202, 207, 211, 212, 215, 217, 240, 242, 243, 245, 246, 260, 265], "seemingli": [50, 214], "nonsens": [50, 59], "r87": 50, "michael": [50, 189, 194], "april": 50, "1981": [50, 189], "305": 50, "350": [50, 110], "dl": [50, 179, 189], "cfm": [50, 189], "doid": [50, 189], "322248": 50, "322255": 50, "r88": 50, "capit": [50, 52, 100, 211], "sigma_not": 50, "r89": 50, "empty_sum": 50, "euler_maclaurin": [50, 55], "eval_integr": 50, "maclaurin": [50, 55], "endpoint": [50, 51, 55, 176, 203, 246], "28333333333333": 50, "sstr": [50, 175, 195], "full_prec": [50, 195], "26629073187415": 50, "0175000000000000": 50, "soon": [50, 51, 113, 166, 192], "eval_zeta_funct": 50, "is_absolutely_converg": 50, "sequence_term": 50, "is_converg": 50, "r90": 50, "absolute_converg": 50, "prod_": [50, 56, 59, 76, 91, 166, 205], "respons": [50, 51, 99, 100, 113, 181, 228], "diverg": [50, 59, 130, 240, 247], "dirichlet": [50, 59, 215], "r91": 50, "convergence_test": 50, "reverse_ord": 50, "selector": [50, 82, 207, 233], "handi": [50, 51, 87, 195, 265], "s0": [50, 74, 76, 133], "expr_with_intlimit": [50, 78], "exprwithintlimit": [50, 78], "reorder_limit": 50, "r92": 50, "walli": 50, "w2": [50, 135], "w2e": 50, "risingfactori": [50, 58, 59, 195, 197], "combsimp": [50, 51, 56], "pe": 50, "gammasimp": [50, 51, 207], "rewrit": [50, 51, 53, 56, 57, 59, 76, 78, 81, 94, 100, 158, 191, 202, 203, 204, 207, 211, 212, 213, 214, 215, 251, 252, 264, 266], "r93": 50, "r94": 50, "capital_pi_not": 50, "r95": 50, "empty_product": 50, "r96": 50, "infinite_product": 50, "r97": 50, "expr_with_limit": [50, 78], "exprwithlimit": [50, 78], "change_index": 50, "trafo": 50, "newvar": 50, "mapsto": [50, 76, 82, 190], "p3": [50, 61, 63, 64, 66, 67, 100, 181, 185, 204, 215], "has_empty_sequ": [50, 78], "has_reversed_limit": [50, 78], "has_finite_limit": [50, 78], "____": [50, 55, 78, 133, 183, 196, 215, 233, 271], "___": [50, 55, 78, 79, 87, 183, 207, 215, 220, 233, 269], "rubric": [50, 51], "_____": [50, 215], "gosper": 50, "gosper_norm": 50, "monic": [50, 182, 183, 186, 188, 190, 191, 194], "gcd": [50, 51, 52, 87, 91, 157, 185, 186, 187, 189, 190, 191, 195, 207, 208], "gosper_term": 50, "s_n": [50, 191], "f_k": [50, 123, 188], "g_n": [50, 56, 191], "f_n": [50, 56, 59, 182, 188, 191, 211], "gosper_sum": 50, "r98": 50, "marko": 50, "petkovsek": [50, 213], "herbert": 50, "doron": 50, "zeilberg": [50, 213], "ak": [50, 197], "peter": [50, 56, 91, 127, 177, 233], "ltd": 50, "welleslei": 50, "usa": [50, 189], "1997": [50, 76, 91, 189, 205], "convert_xor": [51, 93], "09": [51, 98], "2e": 51, "xor": [51, 54, 81, 93, 195, 262], "sympifyerror": 51, "coerc": [51, 125, 188], "cooper": 51, "sage": [51, 91, 180, 264], "shouldn": [51, 192], "unsanit": [51, 234, 259], "bitcount": 51, "improperli": 51, "unbound": [51, 220], "ns": 51, "fallback": [51, 79, 161, 175, 185, 195, 213], "ast": [51, 195, 252], "00000000000000": [51, 55, 162, 195, 215], "mylist1": 51, "mylist": 51, "mylist2": 51, "xxx": [51, 78, 87, 233, 235], "autosimplif": [51, 204, 207], "kern": 51, "r101": 51, "7649": 51, "r100": 51, "r104": 51, "r102": 51, "r103": 51, "r105": 51, "r106": 51, "r107": 51, "r99": 51, "recreat": 51, "isfinit": 51, "__cacheit": 51, "maxsiz": 51, "noqa": [51, 79, 186, 229], "f811": 51, "sympy_use_cach": 51, "cot": [51, 58, 59, 93, 192, 195, 204], "_arg": [51, 57], "as_mut": [51, 83, 84], "as_content_primit": [51, 87, 183, 191], "stub": 51, "as_dummi": [51, 78], "_0": [51, 76, 82, 87, 191, 234], "_r": [51, 161, 205, 214], "bound_symbol": [51, 78], "besid": [51, 188, 213], "typeinfo": 51, "truli": [51, 59, 166], "piec": [51, 55, 205, 228], "scan": 51, "appliedundef": 51, "canonical_vari": 51, "class_kei": 51, "sorted_class": 51, "dummy_eq": 51, "eg": [51, 113, 168, 214], "fromit": 51, "has_fre": 51, "exp_polar": [51, 58, 59, 205], "dif": 51, "_prec": 51, "xreplac": [51, 82, 87, 171], "q_": [51, 175, 208, 211], "r_": [51, 102, 162, 192], "repl_dict": 51, "rcall": [51, 53], "simul": [51, 113, 128, 194], "abus": [51, 221], "succe": [51, 76, 81, 91, 151, 190, 202], "newtyp": 51, "intuit": [51, 166, 199, 211], "is_mul": 51, "is_add": [51, 214], "mysin": [51, 234, 259], "_eval_rewrite_as_": 51, "_eval_rewrite_as_co": 51, "tie": [51, 233], "delai": [51, 98, 125, 204, 226, 260], "unsort": [51, 104, 170], "333333333333333333333": 51, "333333333333333314830": 51, "wildcard": [51, 207], "registri": 51, "metaprogram": 51, "address": [51, 195, 214], "mostli": [51, 57, 78, 87, 128, 156, 178, 182, 194, 195, 205, 213, 269], "__truediv__": [51, 186], "class_nam": 51, "mysingleton": 51, "_eval_is_g": 51, "_eval_is_eq": 51, "args_cnc": 51, "cset": 51, "split_1": 51, "suppress": [51, 93, 224, 231], "as_coeff_add": 51, "dep": [51, 211], "as_coeff_expon": 51, "as_coeffici": 51, "zz": [51, 56, 73, 74, 78, 84, 87, 88, 91, 110, 179, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 210], "coeff_monomi": [51, 191], "polytool": [51, 191, 214], "monomi": [51, 78, 81, 91, 183, 185, 186, 187, 188, 194, 195, 270], "as_coefficients_dict": 51, "inquiri": 51, "121": [51, 56, 91, 100, 171, 213], "84": [51, 55, 91], "separatevar": [51, 206, 211], "n3": [51, 113], "as_leading_term": [51, 202], "logx": [51, 202], "cdir": 51, "_eval_as_leading_term": 51, "as_numer_denom": [51, 213], "as_ordered_factor": 51, "as_ordered_term": 51, "as_powers_dict": 51, "lost": 51, "as_real_imag": [51, 57, 82, 196], "as_term": 51, "aseri": 51, "hir": 51, "asymptot": [51, 76, 100, 260], "hierarch": 51, "normalis": [51, 197], "induc": [51, 82, 190, 204, 233], "gruntz": [51, 197], "majorli": 51, "mrv": [51, 202], "overal": [51, 168, 181, 213], "rapidli": [51, 55, 76, 202], "till": [51, 94, 95, 113, 211], "r108": 51, "dominik": [51, 197], "proc": [51, 213], "1993": [51, 189], "symp": 51, "239": 51, "244": [51, 188], "r109": 51, "p90": 51, "r110": 51, "asymptotic_expans": 51, "_first": [51, 57], "distribute_order_term": [51, 207], "compute_leading_term": 51, "could_extract_minus_sign": 51, "signsimp": [51, 120, 207], "failing_express": 51, "modulu": [51, 52, 54, 59, 61, 67, 82, 91, 94, 95, 182, 186, 188, 190, 191, 194, 214], "power_bas": [51, 82], "power_exp": [51, 82], "multinomi": [51, 82, 91, 215], "expr_free_symbol": 51, "extract_addit": 51, "extract_multipl": 51, "extract_branch_factor": 51, "allow_half": 51, "fourier_seri": [51, 198], "hyper": [51, 56, 59, 70, 73, 195, 197, 205, 207, 213, 215, 270], "geto": 51, "getn": 51, "is_algebraic_expr": 51, "is_rational_funct": 51, "r111": 51, "algebraic_express": 51, "is_const": 51, "constanc": 51, "agre": [51, 52, 59, 66, 76, 205], "decis": [51, 57, 78, 204, 213, 228], "test_expr": 51, "prove": [51, 76, 78, 87, 182, 202, 211, 245], "failing_numb": 51, "is_meromorph": 51, "meromorph": [51, 59], "multivalu": [51, 57], "cut": [51, 56, 57, 59, 67, 76, 182, 205, 230, 236, 270], "hit": [51, 265], "is_polynomi": 51, "rational_funct": 51, "leadterm": 51, "xlim": [51, 181], "lseri": 51, "exaxmpl": 51, "nseri": 51, "_eval_nseri": 51, "innermost": 51, "disadvantag": 51, "met": [51, 208, 214, 229, 270], "nsimplifi": [51, 55, 206], "ratsimp": [51, 206], "removeo": [51, 128, 195, 260], "chop": [51, 55, 59, 82, 87, 213, 259], "123": [51, 56, 61, 81, 158, 171, 233, 240, 241], "lazi": [51, 84, 191], "smooth": [51, 55, 91, 197], "taylor_term": [51, 57], "previous_term": [51, 57], "dummy_index": 51, "temporari": [51, 227], "_dummy_10": 51, "contigu": [51, 205, 228], "x4": [51, 56, 185], "x5": [51, 56, 185], "x6": [51, 185], "x7": [51, 185], "x8": [51, 185], "x9": [51, 185], "x50": 51, "x51": 51, "y0": [51, 70, 72, 74, 211], "y1": [51, 128], "y2": [51, 128, 185], "y3": [51, 185], "y4": 51, "xa": [51, 183, 188], "xb": [51, 236], "xc": [51, 160, 236], "disambigu": 51, "x01": 51, "x02": 51, "x11": 51, "x12": 51, "escap": [51, 93, 181, 195, 236], "newli": [51, 76, 205], "undefinedfunct": [51, 173, 195, 227, 234], "f821": [51, 229], "cofactor": [51, 87, 186, 188, 191], "lcm": [51, 91, 186, 187, 188, 191, 195], "50000000000000": [51, 55], "100000000000000000000": 51, "1e20": 51, "00000000000000e": 51, "23456789123456789": 51, "23456789123457": 51, "00100": 51, "sent": [51, 78, 207], "789": [51, 91], "123_456": 51, "123456789": 51, "12e": 51, "012": 51, "60e2": 51, "6000": 51, "600e": 51, "125": [51, 55, 78, 91, 186, 201, 208], "099609": 51, "12500": 51, "12500000000000000000": 51, "closest": [51, 64], "5404319552844595": 51, "54": [51, 87, 95, 188, 194, 233], "29999999999999998890": 51, "30000000000000000000": 51, "_mpf_": [51, 185], "4915": 51, "70": [51, 52, 68, 78, 87, 91, 194, 195, 208, 215, 236], "307": 51, "mpf": [51, 185, 186], "is_float": 51, "unprejud": 51, "3602879701896397": 51, "18014398509481984": [51, 207], "limit_denomin": 51, "320": 51, "75": [51, 54, 215, 240], "use_tri": [51, 91], "use_rho": [51, 91], "use_pm1": [51, 91], "factorint": [51, 91, 190, 191, 230], "trial": [51, 91, 188, 200, 204, 211, 215], "max_denomin": 51, "1000000": [51, 91], "141592653589793": 51, "311": [51, 91], "discard": [51, 190, 195, 214], "99999999999999999999": 51, "hookrightarrow": 51, "minpoli": [51, 185, 186, 190], "dmp": [51, 182, 186, 187, 191], "complexrootof": [51, 87, 186, 191, 211], "anp": [51, 185, 186, 190, 191], "to_list": [51, 184, 186], "crootof": [51, 191, 211, 213], "minpoly_of_el": 51, "414213562": 51, "scratch": [51, 166], "6x": [51, 188], "to_number_field": [51, 190], "to_root": 51, "primitive_el": [51, 185, 186, 190], "knew": [51, 270], "golden": [51, 55, 91], "5th": [51, 128, 188, 190], "cyclotom": [51, 186, 187, 188, 189, 190, 191], "cyclotomic_poli": [51, 190, 191], "61803398874989": 51, "2i": 51, "a6": 51, "a6_wrong": 51, "309016994374947": 51, "951056516295154": 51, "field_el": 51, "is_alias": 51, "is_primitive_el": 51, "native_coeff": 51, "nativ": [51, 100, 186, 191, 226], "to_algebraic_integ": 51, "to_primitive_el": 51, "Its": [51, 57, 67, 128, 159, 188, 195, 203], "a_prim": 51, "number_cl": 51, "greatest": [51, 56, 61, 91, 183, 185, 186, 188, 189, 191, 194], "euclid": [51, 188, 189], "r112": 51, "euclidean_algorithm": 51, "r113": 51, "r114": 51, "1_": 51, "28number": 51, "r115": 51, "88": [51, 87, 91], "921_": 51, "r116": 51, "one_half": 51, "holder": 51, "ieee": [51, 52], "754": 51, "r117": 51, "affin": [51, 52, 66, 182], "compactif": 51, "r118": 51, "tild": [51, 57, 216], "undetermin": [51, 87, 191, 197, 211, 213], "phase": [51, 78, 98, 130, 133, 135, 145, 146, 214], "718281828": 51, "napier": 51, "r119": 51, "e_": [51, 56, 87], "28mathematical_const": 51, "r120": 51, "imaginary_unit": [51, 195], "141592654": 51, "circumfer": [51, 61], "diamet": [51, 61], "is_irr": 51, "r121": 51, "mascheroni": [51, 59], "5772157": 51, "recur": 51, "harmon": [51, 58, 91, 102, 140, 180, 195, 256], "lim": [51, 202, 260], "limits_": [51, 180, 197, 264], "ln": [51, 57, 78, 195, 197, 211, 215, 270], "r122": 51, "93mascheroni_const": 51, "91596559": 51, "r123": 51, "27s_constant": 51, "r124": 51, "golden_ratio": 51, "tribonacci": [51, 58], "fibonacci": [51, 55, 58, 91], "predetermin": [51, 226], "8392867552141611326": 51, "r125": 51, "generalizations_of_fibonacci_numb": [51, 56], "tribonacci_numb": [51, 56], "modulo": [51, 52, 88, 91, 157, 182, 184, 185, 186, 188, 190, 191, 192, 194, 195, 198, 207], "r126": 51, "modular_multiplicative_invers": 51, "r127": 51, "extended_euclidean_algorithm": 51, "oscil": [51, 256], "conform": [51, 214, 219, 220], "r128": 51, "r129": 51, "zero_to_the_power_of_zero": 51, "r130": 51, "indeterminate_form": 51, "as_base_exp": [51, 57, 58, 233], "floor": [51, 58, 91, 185, 186, 195, 215], "geq": [51, 52, 59, 87, 191, 208, 215, 270], "factor_": [51, 52, 91, 191, 208], "perfect_pow": [51, 91], "infix": 51, "matmul": [51, 84, 184], "as_coef_mul": 51, "undesir": [51, 104, 113, 125, 183, 186, 205], "4596": 51, "compound": [51, 117, 159, 199, 253], "5728": 51, "suspect": [51, 91], "5706": 51, "moot": 51, "off": [51, 61, 76, 82, 90, 92, 115, 145, 182, 191, 195, 211, 226, 237, 240, 264], "nb": 51, "sensit": [51, 100, 128, 181, 188, 207, 226], "assocop": 51, "quadrat": [51, 52, 78, 91, 182, 186, 190, 191, 208, 213, 215], "matadd": [51, 84, 195], "as_coef_add": 51, "extract_leading_ord": 51, "commutative_part": 51, "noncommutative_part": 51, "order_symbol": 51, "subprocess": [51, 195, 226, 227], "dividend": [51, 186], "rop": 51, "validrelationoper": 51, "rel_op": 51, "fourth": [51, 52, 183, 211, 260], "my_equ": 51, "my_inequ": 51, "reversedsign": 51, "_eval_eq": 51, "respond": 51, "boolalg": [51, 81], "client": [51, 230], "counterpart": [51, 52, 211, 260], "litter": 51, "oddbal": 51, "minor": [51, 61, 87, 195, 226], "caveat": [51, 191, 251, 258, 262], "succinctli": 51, "coupl": [51, 87, 125, 140, 155, 158], "annoy": 51, "succinct": 51, "occasion": 51, "r131": 51, "operar": 51, "circuit": [51, 145, 148], "greaterthanobject": 51, "__bool__": 51, "335": 51, "march": 51, "2012": 51, "r132": 51, "r133": 51, "r134": 51, "mdarg": 51, "fgh": 51, "vsin": 51, "vdiff": 51, "narg": [51, 188], "naturals0": [51, 195, 214, 215], "evalul": 51, "fairli": [51, 59, 76, 115, 122, 170, 182], "conserv": [51, 108, 124, 172, 242, 247, 248], "136": [51, 87], "indirect": [51, 53, 59, 91, 161, 211], "fx": [51, 53, 181, 211, 212], "fxx": 51, "insconsist": 51, "presenc": [51, 57, 81, 112, 116, 125, 211, 219], "nonvanish": 51, "_diff_wrt": 51, "_sort_variable_count": 51, "vc": 51, "vsort": 51, "collaps": [51, 155, 207], "vsort0": 51, "vi": 51, "dfx": 51, "equidist": 51, "sq2": 51, "xl": 51, "d2fdxdy": 51, "doit_numer": 51, "z0": [51, 202], "unifi": [51, 129, 184, 186, 187, 188, 190, 191, 203], "zeroth": [51, 190], "idiff": [51, 68], "r135": 51, "legaci": [51, 78, 87, 215], "v5_2": 51, "infunct": 51, "algebraiccomput": 51, "f_real": [51, 58], "f_real_inherit": [51, 58], "is_singular": [51, 58, 74], "holomorph": [51, 58, 76], "superfici": 51, "unexpect": [51, 226], "ss": [51, 186], "denom": [51, 185, 186, 190, 207], "_eval_expand_bas": 51, "_eval_expand_complex": 51, "shut": [51, 191], "unwant": [51, 213, 233], "alphabet": [51, 52, 100, 166, 183, 208, 228], "expand_hint": 51, "_eval_expand_hint": 51, "liabl": [51, 81], "metahint": 51, "myclass": 51, "_eval_expand_doubl": 51, "hyperexpand": [51, 59, 73, 76, 205], "div": [51, 183, 185, 186, 191, 195, 207, 265], "horner": [51, 128, 188, 191], "untouch": 51, "dkei": 51, "mixin": [51, 233], "maxn": [51, 55, 82], "subresult": [51, 186, 189, 191], "000100000000000000": 51, "maxprec": 51, "quadratur": [51, 55, 78, 211], "tanh": [51, 55, 58, 78, 192, 195, 207, 270], "oscillatori": [51, 55, 200], "osc": [51, 55], "advers": 51, "1e16": 51, "291": 51, "builtin": [51, 186, 195, 203, 236, 269], "speedup": [51, 87, 92, 188, 192, 234], "framework": [51, 113, 220, 226, 228, 234], "slice": [51, 81, 82, 87, 93, 186, 191, 201, 203, 207, 216, 233], "parametris": [51, 203], "element_kind": [51, 82, 203], "tuple_count": 51, "setkind": [51, 82, 253], "isprimit": 51, "_gcd_term": 51, "terms_gcd": [51, 186, 191], "entiti": [51, 61, 64, 65, 67, 68, 76, 113, 126, 176, 214, 248, 257, 266], "arguement": 51, "broad": [51, 265], "lex": [51, 79, 175, 183, 185, 186, 188, 191, 192, 194, 195, 207], "grlex": [51, 79, 175, 186, 191, 194, 195], "grevlex": [51, 79, 175, 183, 188, 191, 194, 195], "rev": 51, "unaffect": [51, 214], "_node": 51, "fastest": [51, 56, 78, 91, 92, 192], "undecor": 51, "ineffici": [51, 87, 185], "breaker": 51, "hash": [51, 186, 188, 196, 207, 211, 226, 228], "collis": [51, 90], "wast": [51, 88, 184], "candid": [51, 87, 91, 188, 207], "rng": 51, "getstat": 51, "intention": 51, "tn": 51, "td": [51, 195, 269], "randrang": 51, "999": [51, 55], "238": [51, 91], "randint": [51, 87, 188], "ri": [51, 195], "rv": [51, 204, 215, 233], "nonbas": 51, "postord": 51, "descend": [51, 182, 190, 228], "children": [51, 52, 185, 230], "subtre": [51, 195, 230], "educ": [52, 87], "cryptograph": 52, "encrypt": 52, "hide": [52, 195], "cipher": 52, "vigener": 52, "hill": [52, 59, 108, 127, 171, 177, 240], "bifid": 52, "rsa": 52, "kid": 52, "feedback": [52, 97, 100, 263], "elgam": 52, "plaintext": [52, 195], "ciphertext": 52, "monoalphabet": 52, "polyalphabet": 52, "crypto": 52, "az": [52, 208], "uppercas": [52, 205], "hello": [52, 233], "world": [52, 116, 125, 233], "helloworld": 52, "check_and_join": 52, "padded_kei": 52, "puppi": 52, "opqrstuvwxi": 52, "puyoqrstvwx": 52, "artist": 52, "aphras": 52, "ara": 52, "hp": 52, "cycle_list": 52, "encipher_shift": 52, "msg": [52, 78], "decipher_shift": 52, "gonavybeatarmi": 52, "ct": [52, 80, 188], "hpobwzcfbubsnz": 52, "deciph": 52, "l1": [52, 61, 63, 64, 107, 110, 126, 186, 188, 191, 208, 215], "l2": [52, 63, 64, 107, 110, 147, 163, 186, 188, 215], "caesar": 52, "juliu": 52, "suetoniu": 52, "protect": [52, 195], "militari": 52, "nephew": 52, "augustu": 52, "reportedli": 52, "r136": 52, "caesar_ciph": 52, "r137": 52, "caesarsmethod": 52, "encipher_rot13": 52, "rot13": 52, "caeser": 52, "midwai": 52, "decipher_rot13": 52, "r138": 52, "decrypt": 52, "tbanilorngnezl": 52, "encipher_affin": 52, "_invers": 52, "cx": [52, 95], "recov": [52, 78, 166, 188, 190, 191, 208, 211], "decipher_affin": 52, "r139": 52, "affine_ciph": 52, "reciph": 52, "navi": 52, "beat": 52, "armi": 52, "trobmvenbgbalv": 52, "encipher_atbash": 52, "enciph": 52, "atbash": 52, "hebrew": 52, "decipher_atbash": 52, "tlmzebyvzgzinb": 52, "r140": 52, "encipher_substitut": 52, "oeyag": 52, "034": 52, "60n": 52, "v4b3": 52, "rm4": 52, "immateri": 52, "anyv": 52, "wherebi": 52, "r141": 52, "substitution_ciph": 52, "encipher_vigener": 52, "me": [52, 113, 128, 171, 195, 217], "mondai": 52, "qrgkkthrzqebpr": 52, "krypto": 52, "sculptur": 52, "cia": 52, "headquart": 52, "r143": 52, "decipher_vigener": 52, "alp": 52, "palimpsest": 52, "emufphzlrfaxyusdjkzldkrnshgnfivj": 52, "betweensubtleshadingandtheabsenc": 52, "blais": 52, "sixteenth": 52, "centuri": [52, 182], "diplomat": 52, "accid": [52, 234], "invent": [52, 190, 213, 264], "giovan": 52, "batista": 52, "belaso": 52, "1553": 52, "civil": [52, 94], "war": 52, "confederaci": 52, "brass": 52, "nsa": 52, "museum": 52, "fort": 52, "mead": 52, "r142": 52, "sender": 52, "assembl": [52, 76, 115, 202], "concaten": [52, 82], "frequenc": [52, 78, 98, 100, 135, 137, 145, 162], "kasiski": 52, "discov": [52, 76, 104, 219, 266], "babbag": 52, "unbreak": 52, "ye": [52, 81, 211], "gonavybeatarmyyesyoucan": 52, "gold": 52, "auto_kei": 52, "goldbuggonavybeatarmyy": 52, "mcydwshkogamkzcelyfgayr": 52, "pt": [52, 60, 61, 62, 64, 65, 66, 67, 201], "vigenere_ciph": 52, "archiv": [52, 127, 208], "20071116100808": 52, "r144": 52, "filebox": 52, "vt": 52, "batman": 52, "goo": 52, "gl": 52, "ijr22d": 52, "decod": 52, "qrgk": 52, "kt": [52, 117], "hrzqe": 52, "bpr": 52, "meetmeonmondai": 52, "encipher_hil": 52, "z_": [52, 207], "r145": 52, "lester": 52, "1920": 52, "r146": 52, "polygraph": 52, "bare": [52, 108], "ceil": [52, 58, 91, 107, 195], "l_1": [52, 56, 101, 180, 205, 221], "l_t": 52, "c_t": 52, "l_i": [52, 180, 205], "decipher_hil": 52, "hill_ciph": 52, "june": [52, 87], "juli": [52, 208], "1929": 52, "306": 52, "312": [52, 171, 213, 240, 241], "ueqdueodoctcwq": 52, "st": [52, 78, 161], "hjeb": 52, "stqq": 52, "ispk": 52, "stzz": 52, "hd": 52, "ormv": 52, "IS": 52, "uiki": 52, "encipher_bifid": 52, "polybiu": 52, "printabl": 52, "bifid5": 52, "decipher_bifid": 52, "encipher_bifid5": 52, "encipher_bifid6": 52, "r147": 52, "bifid_ciph": 52, "ieilhhfstsfqy": 52, "ieilh": 52, "hfst": 52, "fqyej": 52, "bmtwmg": 52, "bio": 52, "gold_bug": 52, "hg2sfuei7t": 52, "pug": 52, "heldo": 52, "wor6d": 52, "bifid5_squar": 52, "5x5": 52, "cap": [52, 55, 161, 203, 214], "tradition": [52, 59], "decipher_bifid5": 52, "round_trip": 52, "josi": 52, "osi": 52, "iosi": 52, "qiq": 52, "1901": 52, "felix": 52, "delastel": 52, "onto": [52, 64, 65, 66, 76, 80, 87, 90, 92, 190], "helen": 52, "cryptanalysi": 52, "german": 52, "fridai": 52, "ieilehfstsfxe": 52, "okai": 52, "decipher_bifid6": 52, "8am": 52, "kfkljjhf5mmmktfrgpl": 52, "meetmeonmondayat8am": 52, "bifid6_squar": 52, "6x6": 52, "rsa_public_kei": 52, "totient": [52, 91], "carmichael": [52, 91], "p_n": [52, 56, 59, 78], "multiprim": 52, "land": 52, "rad": [52, 98, 113, 190], "reduced_toti": [52, 91], "uniquenss": 52, "rsa_private_kei": 52, "e_0": 52, "canonicalz": 52, "61": [52, 56, 67, 87, 91, 197], "3233": 52, "797": 52, "1577": 52, "multipow": 52, "cryptosystem": 52, "coprim": [52, 78, 91, 157, 188, 208], "30030": 52, "becam": [52, 122], "hardest": 52, "claim": [52, 179, 205, 214], "encipher_rsa": 52, "decipher_rsa": 52, "r148": 52, "rsa_": 52, "28cryptosystem": 52, "r149": 52, "cacr": 52, "uwaterloo": 52, "techreport": 52, "2006": [52, 204], "cacr2006": 52, "r150": 52, "springer": [52, 78, 91, 188, 189, 211], "1007": 52, "2fbfb0055738": 52, "r151": 52, "itii": 52, "manuscript": 52, "1381": 52, "2753": 52, "413": 52, "1193": 52, "823": 52, "r152": 52, "r153": 52, "r154": 52, "r155": 52, "bmod": [52, 195], "vice": [52, 78, 91, 94, 151, 171, 182, 186, 243, 244, 262], "versa": [52, 78, 91, 94, 151, 171, 182, 186, 243, 244, 262], "asymmetr": [52, 67], "puk": 52, "prk": 52, "chines": [52, 91, 188], "k_1": [52, 91, 188, 205], "k_2": 52, "k_n": [52, 188], "p_3": [52, 178], "k_3": 52, "moduli": [52, 91, 188], "2048": [52, 91, 195], "overhead": [52, 92, 192], "modular": [52, 91, 157, 187, 189, 214], "crt": [52, 91, 188], "overcompens": 52, "theorit": 52, "new_msg": 52, "kid_rsa_public_kei": 52, "grade": [52, 79, 175, 191], "school": [52, 204], "bob": [52, 107], "369": 52, "58": [52, 87, 221], "kid_rsa_private_kei": 52, "encipher_kid_rsa": 52, "200": [52, 82, 87, 91, 94, 98, 240], "161": 52, "decipher_kid_rsa": 52, "pub": [52, 240], "pri": 52, "encode_mors": 52, "sep": [52, 195, 212, 226], "mors": 52, "attack": 52, "flank": 52, "r156": 52, "morse_cod": 52, "decode_mors": 52, "word_sep": 52, "mc": [52, 117], "east": 52, "r157": 52, "lfsr_sequenc": 52, "lfsr": 52, "c_k": 52, "golomb": [52, 91], "g157": 52, "autocorrel": 52, "lim_": [52, 57, 59, 76, 78, 202, 260, 264], "balanc": [52, 127, 182, 215, 226], "solomon": 52, "aegean": 52, "park": 52, "laguna": 52, "1967": [52, 189], "lfsr_autocorrel": 52, "lfsr_connection_polynomi": 52, "massei": 52, "m158": 52, "jame": [52, 188], "synthesi": 52, "bch": 52, "tran": 52, "122": [52, 54, 59], "127": [52, 91], "elgamal_public_kei": 52, "elgamal_private_kei": 52, "1031": 52, "636": 52, "212": [52, 78, 189], "mathmat": 52, "dlp": 52, "is_primitive_root": [52, 91], "encipher_elgam": 52, "c2": [52, 61, 68, 82, 84, 147, 161, 203, 211, 213, 215, 242, 245, 271], "encryp": 52, "decipher_elgam": 52, "eucliden": 52, "dh_public_kei": 52, "dh_private_kei": 52, "_p": [52, 161, 186, 188, 190, 202, 205, 213], "_g": 52, "diffi": 52, "hellman": [52, 91], "publicli": 52, "secretli": 52, "dh_shared_kei": 52, "sk": 52, "gm_public_kei": 52, "goldwass": 52, "micali": 52, "gm_private_kei": 52, "b_n": [52, 56, 80, 182, 198], "jacobi_symbol": [52, 91], "reconstruct": [52, 87, 188, 265], "residuos": 52, "entropi": [52, 215], "encipher_gm": 52, "public_kei": 52, "gm": [52, 164], "decipher_gm": 52, "encipher_railf": 52, "rail": 52, "railfenc": 52, "horel": 52, "ollwd": 52, "r160": 52, "rail_fence_ciph": 52, "decipher_railf": 52, "diffgeom": 53, "resembl": [53, 59, 78, 220], "euclidean": [53, 64, 66, 171, 186, 188, 191], "r161": 53, "chart": [53, 181], "parameter": [53, 60, 61, 64, 67, 208], "r162": 53, "sussman": 53, "wisdom": 53, "farr": 53, "2013": [53, 63, 82, 268], "tranform": 53, "cartesian": [53, 94, 129, 134, 148, 151, 156, 176, 181, 182, 203, 214, 233, 243, 244, 246, 247], "polar": [53, 57, 59, 61, 67, 77, 94, 102, 131, 181, 203, 207, 214, 256], "relation_dict": 53, "car2d": 53, "pol": 53, "coordinatesymbol": 53, "jacobian": [53, 87, 125, 213], "jacobian_determin": 53, "r163": 53, "coordinate_system": 53, "base_oneform": 53, "coord_index": 53, "oneform": 53, "base_scalar": 53, "basescalarfield": 53, "base_vector": [53, 240], "coord_funct": 53, "to_si": 53, "coord": [53, 66, 68, 104, 159, 174], "immutabledensematrix": [53, 82, 83, 84, 85, 215, 234], "rn": 53, "r2_r": 53, "r2_p": 53, "jacobian_matrix": 53, "point_to_coord": 53, "coord_si": [53, 242], "imbu": 53, "difficulti": [53, 114], "arriv": [53, 188, 205, 207, 211, 215, 270], "inappropri": 53, "poin": 53, "unappropri": 53, "fy": [53, 181, 212], "ftheta": 53, "basevectorfield": 53, "point_p": 53, "point_r": 53, "s_field": 53, "dxi": 53, "v1": [53, 64, 87, 110, 128, 171, 172, 174, 215, 234, 240, 242, 243, 244, 245], "v2": [53, 64, 87, 110, 171, 172, 174, 234, 240, 242, 243, 244, 245], "v_1": [53, 190, 213], "v_2": [53, 190], "e_x": [53, 221], "e_i": [53, 182, 205, 221], "e_r": 53, "c_xy": 53, "c_xr": 53, "unfortun": [53, 55, 92, 194, 208], "e_rho": 53, "form_field": 53, "exterior": [53, 67], "dg": 53, "tensorproduct": [53, 158, 160, 216, 217], "multilinear": 53, "wedg": [53, 76], "tp1": 53, "tp": [53, 133, 160, 186], "wedgeproduct": 53, "wp1": 53, "liederiv": 53, "v_field": 53, "transport": 53, "pushforward": 53, "e_theta": 53, "basecovarderivativeop": 53, "christoffel": 53, "metric_to_christoffel_2nd": 53, "ch": [53, 87, 208], "cvd": 53, "covarderivativeop": 53, "intcurve_seri": 53, "vector_field": [53, 246], "start_point": 53, "dt": [53, 59, 116, 128, 170, 171, 173, 178, 179, 211, 270], "f_i": [53, 76, 87, 188, 192], "movement": 53, "intcurve_diffequ": 53, "init_cond": 53, "f_1": [53, 56, 59, 76, 100, 109, 112, 129, 182, 188, 191, 211], "f_0": [53, 56, 109, 188], "vectors_in_basi": 53, "kept": [53, 163, 179, 233, 265], "twoform_to_matrix": 53, "twoform": 53, "e_j": 53, "metric_to_christoffel_1st": 53, "levi": [53, 59, 215, 221], "civita": [53, 59, 221], "metric_to_riemann_compon": 53, "riemann": [53, 56, 57, 58, 76, 182, 207, 221], "non_trivial_metr": 53, "dtheta": 53, "drho": 53, "metric_to_ricci_compon": 53, "ricci": 53, "fft": [54, 128], "ifft": 54, "ntt": 54, "intt": 54, "fwht": 54, "ifwht": 54, "mobius_transform": 54, "inverse_mobius_transform": 54, "convolution_fft": 54, "convolution_ntt": 54, "convolution_fwht": 54, "convolution_subset": 54, "covering_product": 54, "intersecting_product": 54, "radix": 54, "r164": 54, "coolei": 54, "93tukey_fft_algorithm": 54, "r165": 54, "fastfouriertransform": 54, "r166": 54, "r167": 54, "ring": [54, 74, 87, 88, 178, 183, 184, 187, 188, 190, 191, 192, 193, 194, 195, 233], "pz": [54, 98, 221], "643": [54, 91], "767": 54, "387": 54, "415": 54, "384": 54, "353": [54, 87], "r168": 54, "apfloat": 54, "r169": 54, "numbertheoretictransform": 54, "r170": 54, "discrete_fourier_transform_": 54, "r171": 54, "r172": 54, "r173": 54, "wht": 54, "r174": 54, "hadamard_transform": 54, "r175": 54, "fast_walsh": 54, "93hadamard_transform": 54, "r176": 54, "r177": 54, "mobiu": [54, 91], "lattic": [54, 208], "bitmask": 54, "r178": 54, "b6bius_inversion_formula": 54, "r179": 54, "csail": 54, "mit": 54, "rrw": 54, "conv": 54, "r180": 54, "arxiv": [54, 87, 102, 233], "1211": 54, "0189": 54, "r181": 54, "r182": 54, "r183": 54, "888": 54, "444": 54, "1283": 54, "19351": 54, "14219": 54, "15502": 54, "44": [54, 56, 87, 91, 204, 215], "41": [54, 61, 87, 91, 186, 208], "63": [54, 87, 91], "r184": 54, "convolution_theorem": 54, "r185": 54, "333": [54, 91], "555": 54, "222": 54, "666": 54, "15555": 54, "19404": 54, "r186": 54, "r187": 54, "56": [54, 78, 91, 191], "68": [54, 79, 87, 91, 208], "48": [54, 61, 95, 208, 213, 215, 260], "2057": 54, "1870": 54, "r188": 54, "radioeng": 54, "cz": [54, 208], "fulltext": 54, "2002": [54, 182, 189, 192], "02_03_40_42": 54, "r189": 54, "r190": 54, "r191": 54, "AND": [54, 81, 247], "327": [54, 211], "r192": 54, "44288293815837": 55, "4429": 55, "4428829381583662470158809900606936986146216893757": 55, "28902548222223624241": 55, "091999668350375232456": 55, "14159265358979": [55, 59, 213], "333333333333333": [55, 185, 207], "1415926535": 55, "7182818284": 55, "100000": [55, 91, 98], "951": 55, "95678796130331164628399634646042209010610577945815": 55, "gmpy": [55, 185, 186, 269], "googl": [55, 180, 181, 214], "100000000000000": 55, "1000000000": 55, "125000000000000000000000000000": 55, "100000000000000005551115123126": 55, "100000000000000000000000000000": 55, "1415": 55, "uncertainti": [55, 166], "003": 55, "31417": 55, "propag": [55, 64, 132, 135], "5000": [55, 94], "50000000000000000000000000000": 55, "varphi": [55, 59, 190, 195, 211], "erron": 55, "goldenratio": [55, 196, 207], "34665576869e": 55, "208": [55, 191], "64613129282185e": 55, "60123853010113e": 55, "210": [55, 91, 208], "thousand": [55, 91, 259], "precisionexhaust": 55, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 55, "binet": 55, "104": 55, "1336": 55, "portion": [55, 67, 82, 87], "meaningless": 55, "012297": 55, "9562288417661": 55, "956": 55, "29128599706266": 55, "2912859970626635404072825905956005414986193682745": 55, "14159265358979323846264338328": 55, "integrand": [55, 59, 75, 76, 78, 205], "struggl": [55, 194], "346": 55, "34635637913639": 55, "dealt": [55, 76], "504067061906928": 55, "50406706190692837199": 55, "wrap_lin": [55, 78, 79, 87, 95, 175, 182, 183, 194, 195, 211], "intgrl": 55, "extrapol": [55, 202], "richardson": [55, 202, 214], "slowli": [55, 202], "64493406684823": 55, "577215664901533": 55, "57721566490153286060651209008240243104215933593992": 55, "10000000": [55, 191], "20000000": [55, 191], "693147255559946": 55, "tune": [55, 79, 175, 195], "worthwhil": 55, "hypergeometr": [55, 56, 58, 69, 71, 75, 76, 189, 199, 206, 211, 213, 215, 251, 270], "ramanujan": [55, 56, 91], "9801": 55, "1103": 55, "26390": 55, "396": [55, 113], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 55, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 55, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 55, "355": [55, 91, 189], "113": [55, 91, 208], "33333": [55, 78], "635": 55, "504": [55, 189], "130198866629986772369127970337": 55, "49": [55, 56, 91, 95, 188, 208], "___________": [55, 95, 211], "k_sym": 56, "binom": [56, 91, 215, 270], "dotsc": [56, 197], "j_1": [56, 140, 141, 158, 180, 197, 216], "j_2": [56, 140, 141, 158, 180, 197], "dotsb": [56, 197], "atop": [56, 59, 197, 205], "2j_2": [56, 197], "3j_2": [56, 197], "j_": [56, 59, 76, 78, 158, 197, 205, 264], "877": 56, "4140": 56, "21147": 56, "115975": 56, "846749014511809332450147": 56, "r193": 56, "bell_numb": 56, "r194": 56, "bellnumb": 56, "r195": 56, "bellpolynomi": 56, "6k": 56, "66": [56, 82, 87, 195], "1000001": 56, "r196": 56, "bernoulli_numb": 56, "r197": 56, "bernoulli_polynomi": 56, "r198": 56, "bernoullinumb": 56, "r199": 56, "bernoullipolynomi": 56, "_k": [56, 59, 78, 180, 190, 215], "expand_func": [56, 59], "6435": 56, "pascal": [56, 91], "4th": [56, 57, 73, 87, 91, 128], "195": 56, "r200": 56, "johndcook": 56, "binomial_coeffici": [56, 91], "c_n": [56, 59, 80, 211], "429": [56, 195], "1430": 56, "4862": 56, "39764993382373624267": 56, "020884341620842555705": 56, "r201": 56, "catalan_numb": 56, "r202": 56, "catalannumb": [56, 195], "r203": 56, "r204": 56, "geomet": [56, 182], "mathcircl": 56, "2j": [56, 188, 215], "r209": 56, "e_k": [56, 188], "1385": 56, "2702765": 56, "4096": 56, "r205": 56, "euler_numb": 56, "r206": 56, "eulernumb": 56, "r207": 56, "alternating_permut": 56, "r208": 56, "alternatingpermut": 56, "ii": [56, 78, 91, 191, 195, 211], "swing": 56, "derang": [56, 233], "r211": 56, "generate_derang": [56, 233], "r210": 56, "r212": 56, "double_factori": 56, "texttt": [56, 203], "r213": 56, "r214": 56, "paul": [56, 230], "235": 56, "268": 56, "1995": [56, 189, 207, 213], "f_z": [56, 176, 246], "f_2": [56, 76, 100, 109, 112, 129, 188, 205, 211], "r216": 56, "fibonacci_numb": 56, "r217": 56, "fibonaccinumb": 56, "t_0": [56, 208], "149": [56, 91], "r218": 56, "r219": 56, "tribonaccinumb": 56, "r220": 56, "oei": [56, 91], "a000073": 56, "137": [56, 87, 102], "205": [56, 76, 205], "144": [56, 78, 180], "5269": 56, "761": 56, "280": 56, "83711": 56, "27720": 56, "30247": 56, "9900": 56, "983697455232980674869851942390639915940": 56, "r221": 56, "harmonic_numb": 56, "r222": 56, "harmonicnumb": [56, 195], "r223": 56, "harmonicnumber2": 56, "l_0": [56, 101, 221, 222], "47": [56, 59, 87, 91, 102, 134, 166, 194], "76": [56, 87, 91, 188, 191], "r224": 56, "lucas_numb": 56, "r225": 56, "lucasnumb": 56, "2t": 56, "r226": 56, "genocchi_numb": 56, "r227": 56, "genocchinumb": 56, "irrelev": 56, "r228": 56, "number_theori": 56, "r229": 56, "pentagonal_number_theorem": 56, "pochhamm": [56, 195, 207], "r230": 56, "r231": 56, "pochhammer_symbol": 56, "274": 56, "225": [56, 91, 189], "511": 56, "9330": 56, "34105": 56, "42525": 56, "22827": 56, "5880": 56, "750": 56, "r232": 56, "stirling_numbers_of_the_first_kind": 56, "r233": 56, "stirling_numbers_of_the_second_kind": 56, "multiset": [56, 76, 230, 233], "babi": [56, 91, 233], "aa": [56, 180], "bb": [56, 180, 207, 233], "multiset_combin": [56, 233], "aab": [56, 233], "aabc": 56, "aaaabbbbcccc": 56, "m_1": [56, 100, 140, 158, 180, 208], "m_2": [56, 112, 129, 140, 158, 180], "m_k": 56, "r234": 56, "r235": 56, "tinyurl": 56, "cep849r": 56, "ba": [56, 233], "multiset_permut": [56, 233], "r236": 56, "aabbc": 56, "mississippi": [56, 233], "609": 56, "1521": 56, "1768": 56, "1224": [56, 91], "579": 56, "197": 56, "r237": 56, "undergradu": 56, "csse": 56, "uwa": 56, "au": 56, "cits7209": 56, "707106781186548": 57, "negativeon": [57, 265], "tangent": [57, 61, 63, 67, 78, 192, 211], "643501108793284": 57, "r238": 57, "ib": [57, 117], "complex_conjug": 57, "r242": 57, "r239": 57, "trigonometric_funct": 57, "r240": 57, "r241": 57, "elementaryfunct": 57, "trigonometryangl": 57, "r243": 57, "r244": 57, "r245": 57, "r246": 57, "r247": 57, "r248": 57, "cotang": [57, 192], "r249": 57, "r250": 57, "r251": 57, "secant": [57, 191], "r252": 57, "r253": 57, "r254": 57, "cosec": 57, "r255": 57, "r256": 57, "r257": 57, "unnorm": [57, 59], "qquad": [57, 166, 188], "jn": [57, 59, 158, 191, 195, 264], "spheric": [57, 58, 102, 140, 180, 181, 191, 240, 243, 244, 264], "r258": 57, "sinc_funct": 57, "r259": 57, "inverse_trigonometric_funct": 57, "r260": 57, "r261": 57, "r262": 57, "r263": 57, "r264": 57, "r265": 57, "r266": 57, "r267": 57, "arctan": [57, 192, 195], "r268": 57, "r269": 57, "arccot": [57, 195], "r273": 57, "r270": 57, "r271": 57, "r272": 57, "arcsec": [57, 195], "r274": 57, "r275": 57, "r276": 57, "arccsc": [57, 195], "quadrant": [57, 186, 214], "clock": [57, 204], "reurn": 57, "r277": 57, "r278": 57, "r279": 57, "arctan2": 57, "r280": 57, "hyperbolic_funct": 57, "r281": 57, "r282": 57, "arcsech": [57, 195], "imaginaryunit": [57, 195], "r283": 57, "r284": 57, "r285": 57, "arccsch": [57, 195], "567": 57, "r286": 57, "r287": 57, "ceilingfunct": 57, "r288": 57, "r289": 57, "floorfunct": 57, "r290": 57, "lfloor": [57, 186, 214, 215], "rfloor": [57, 186, 214, 215], "fractional_part": 57, "r291": 57, "fractionalpart": 57, "lambert": [57, 78, 192], "r292": 57, "w_k": 57, "635564016364870": 57, "34747534407696": 57, "41624341514535": 57, "lambert_w_funct": 57, "mathcal": [57, 76, 100, 126, 158, 180, 203], "cond": [57, 76, 78, 203], "piecewise_fold": 57, "folded_cond": 57, "ITE": [57, 81], "_eval_integr": [57, 78], "piecewise_integr": 57, "as_expr_set_pair": 57, "antideriv": [57, 59, 78, 211, 260], "conflict": [57, 91, 100, 113, 228], "supremum": [57, 203], "r293": 57, "directed_complete_partial_ord": 57, "r294": 57, "lattice_": 57, "28order": 57, "global_paramet": 57, "rootof": [57, 191], "rootoftool": [57, 87, 191], "integer_nthroot": [57, 91], "r295": 57, "square_root": 57, "r296": 57, "r297": 57, "root_of_un": 57, "r298": 57, "principal_valu": [57, 78], "r299": 57, "cuberoot": 57, "powdenest": 57, "misc": [57, 82, 236, 251], "r300": 57, "r301": 57, "r302": 57, "cube_root": 57, "r303": 57, "polar_lift": [58, 59, 207], "periodic_argu": 58, "principal_branch": [58, 76], "sec": [58, 78, 98, 190, 195, 204, 270], "csc": [58, 93, 195, 204], "acot": [58, 195], "asec": [58, 195], "acsc": [58, 195], "hyperbol": [58, 59, 192, 214, 266, 270], "hyperbolicfunct": 58, "coth": [58, 195, 207], "sech": [58, 195], "csch": [58, 195], "asinh": [58, 195], "acosh": [58, 195], "atanh": [58, 192, 195, 205], "acoth": [58, 195], "asech": [58, 195], "acsch": [58, 195], "roundfunct": 58, "lambertw": [58, 192, 195, 213, 214, 271], "exprcondpair": 58, "miscellan": [58, 232, 257, 258], "identityfunct": 58, "real_root": [58, 191, 213], "bell": [58, 145, 197, 233], "bernoulli": [58, 59, 195, 213, 215], "catalan": [58, 195], "subfactori": [58, 195, 233], "factorial2": [58, 162, 195], "fallingfactori": [58, 195], "luca": [58, 91, 195, 201], "genocchi": 58, "multifactori": 58, "nc": 58, "nt": [58, 233], "fresnel": [58, 134, 195, 205], "airi": [58, 78, 211], "spline": 58, "ellipt": [58, 61, 91, 182], "mathieu": [58, 195], "delta_funct": [59, 78], "int_": [59, 75, 76, 78, 198, 260, 264], "sum_i": [59, 202], "is_simpl": 59, "tensor_funct": 59, "kroneckerdelta": [59, 84, 161, 195, 207], "r304": 59, "deltafunct": [59, 78], "h0": 59, "electron": [59, 102, 204], "signal": [59, 81, 91, 98, 100, 128, 188, 265], "improp": [59, 78], "convolut": [59, 197, 251], "r305": 59, "heavisidestepfunct": 59, "r306": 59, "iv": [59, 192], "105": [59, 91, 191, 208], "parg": 59, "singularity_funct": 59, "singularityfunct": [59, 78, 94], "macaulai": 59, "heavisidediracdelta": 59, "r307": 59, "r308": 59, "r309": 59, "r310": 59, "r311": 59, "setminu": [59, 76], "17805383034794561964694160130": 59, "65092319930185633889": 59, "8724366472624298171": 59, "r312": 59, "r313": 59, "r314": 59, "loggammafunct": 59, "r315": 59, "19093197": 59, "5173168": 59, "ni": [59, 91], "r316": 59, "polygamma_funct": 59, "r317": 59, "polygammafunct": 59, "r318": 59, "r319": 59, "polygamma2": 59, "r320": 59, "digamma_funct": 59, "r321": 59, "digammafunct": 59, "r322": 59, "r323": 59, "trigamma_funct": 59, "r324": 59, "trigammafunct": 59, "r325": 59, "int_x": 59, "_1f_1": 59, "confluent": [59, 205], "xt": 59, "expint": [59, 195], "r326": 59, "incomplete_gamma_funct": 59, "upper_incomplete_gamma_funct": 59, "r327": 59, "r328": 59, "r329": 59, "gamma2": 59, "r330": 59, "gamma3": 59, "r331": 59, "exponential_integr": 59, "relation_with_other_funct": 59, "int_0": [59, 76, 78, 260, 270], "r332": 59, "lower_incomplete_gamma_funct": 59, "r333": 59, "r334": 59, "r335": 59, "r336": 59, "multigamma": 59, "gamma_p": 59, "r337": 59, "multivariate_gamma_funct": 59, "beta_funct": 59, "eulerian": 59, "02671848900111377452242355235388489324562": 59, "2112723729365330143": 59, "7655283165378005676": 59, "r338": 59, "r339": 59, "betafunct": 59, "r340": 59, "error_funct": 59, "999999984582742099719981147840": 59, "1296959": 59, "73071763923152794095062": 59, "r341": 59, "r342": 59, "r343": 59, "r344": 59, "0000000154172579002800188521596734869": 59, "r345": 59, "r346": 59, "r347": 59, "r348": 59, "5648024145755525987042919132": 59, "995322265018952734162069256367": 59, "r349": 59, "r350": 59, "r351": 59, "r352": 59, "179143454621291692285822705344": 59, "r353": 59, "inverse_funct": 59, "r354": 59, "inverseerf": [59, 195], "r355": 59, "r356": 59, "inverseerfc": [59, 195], "r357": 59, "inverseerf2": 59, "fresnelintegr": 59, "343415678363698242195300815958": 59, "fresnelc": [59, 195, 205], "r358": 59, "fresnel_integr": 59, "r359": 59, "r360": 59, "r361": 59, "r362": 59, "wrench": 59, "jr": 59, "vicki": 59, "allei": 59, "488253406075340754500223503357": 59, "r363": 59, "r364": 59, "r365": 59, "r366": 59, "r367": 59, "ei": [59, 76, 190, 195, 205, 211], "background": [59, 79, 122, 175, 178, 268], "cauchi": [59, 76, 78, 186, 211, 215], "219383934395520": 59, "21938393439552": 59, "shi": [59, 76, 195, 205], "e1": [59, 61, 68, 113, 185, 190, 202, 211, 214], "li": [59, 67, 78, 91, 161, 195, 249], "r368": 59, "r369": 59, "r370": 59, "sfu": [59, 78], "cbm": [59, 78], "aand": [59, 78], "page_228": 59, "int_1": [59, 76], "zt": [59, 76], "unbranch": [59, 76], "meijerg": [59, 70, 76, 78, 195, 215, 270], "postiv": 59, "r371": 59, "r372": 59, "expintegral": [59, 195], "r373": 59, "04516378011749278484458888919": 59, "0652795784357498247001125598": 59, "08346052231061726610939702133": 59, "soldner": 59, "findroot": [59, 213], "45136923488338": 59, "r374": 59, "logarithmic_integr": 59, "r375": 59, "logarithmicintegr": 59, "r376": 59, "r377": 59, "soldnersconst": 59, "92242131492155809316615998938": 59, "r378": 59, "r379": 59, "r380": 59, "r381": 59, "trigonometric_integr": 59, "_1": [59, 87, 171, 205, 234], "somewhat": [59, 78, 113, 186], "r382": 59, "r383": 59, "r384": 59, "laurent": [59, 186, 192, 211], "j_n": [59, 158], "r385": 59, "r386": 59, "r387": 59, "r388": 59, "yn": [59, 195, 201], "r389": 59, "i_": [59, 76, 205, 215, 216], "iz": 59, "r390": 59, "k_": [59, 76, 123, 124], "r391": 59, "hankel1": [59, 195], "hankel": [59, 78], "iy_": 59, "hankel2": [59, 195], "r392": 59, "hankelh1": [59, 195], "r393": 59, "hankelh2": [59, 195], "2z": [59, 214, 215], "orthopoli": [59, 191], "spherical_bessel_fn": [59, 191], "3j": [59, 140, 180], "099419756723640344491": 59, "054525080242173562897": 59, "r394": 59, "y_n": [59, 208], "18525034196069722536": 59, "014895573969924817587": 59, "r395": 59, "jn_zero": 59, "besseljzero": 59, "sph_jn": 59, "7635": 59, "095": 59, "323": [59, 91], "515": 59, "marcumq": 59, "marcum": 59, "q_m": 59, "r396": 59, "marcum_q": 59, "r397": 59, "airybas": 59, "airyai": [59, 195, 211], "ai": [59, 91], "airyaiprim": [59, 195], "22740742820168557599192443603787379946077222541710": 59, "airybi": [59, 195, 211], "airybiprim": [59, 195], "r398": 59, "airy_funct": 59, "r399": 59, "r400": 59, "encyclopediaofmath": 59, "r401": 59, "airyfunct": 59, "41230258795639848808323405461146104203453483447240": 59, "r402": 59, "r403": 59, "r404": 59, "r405": 59, "61825902074169104140626429133247528291577794512415": 59, "r406": 59, "r407": 59, "r408": 59, "r409": 59, "27879516692116952268509756941098324140300059345163": 59, "r410": 59, "r411": 59, "r412": 59, "r413": 59, "bspline": 59, "bspline_basi": 59, "knot": 59, "cubic": [59, 182, 191, 208, 213], "bspline_basis_set": 59, "r414": 59, "interpolating_splin": 59, "131": [59, 171], "39": [59, 91, 194], "interpolating_poli": [59, 191], "zeta_funct": 59, "hurwitz": 59, "admit": [59, 211], "circumst": [59, 190, 264], "lerch": 59, "transcend": 59, "lerchphi": [59, 195], "dirichlet_eta": [59, 195], "20205690315959": 59, "polylog": [59, 195], "r415": 59, "r416": 59, "hurwitz_zeta_funct": 59, "r417": 59, "dirichlet_eta_funct": 59, "polylogarithm": 59, "_s": [59, 161], "sheet": [59, 204], "phi_0": 59, "ze": 59, "r418": 59, "bateman": 59, "erdelyi": 59, "1953": [59, 190], "york": [59, 76, 127, 205, 213], "mcgraw": [59, 108, 127, 171, 177, 240], "r419": 59, "r420": 59, "lerch_transcend": 59, "stieltj": [59, 195], "gamma_": [59, 101, 103], "r421": 59, "stieltjes_const": 59, "ap": [59, 63, 205], "bq": [59, 183, 184, 205], "a_p": [59, 76, 205, 270], "b_q": [59, 76, 205, 270], "_pf_q": [59, 205, 211, 270], "unicod": [59, 79, 87, 175, 195, 226, 264], "r422": 59, "r423": 59, "generalized_hypergeometric_funct": 59, "convergence_stat": 59, "radius_of_converg": 59, "radiu": [59, 61, 65, 67, 119, 121, 130, 134, 181, 214, 215, 249], "meijer": [59, 69, 71, 77, 78, 260, 270], "mellin": [59, 77, 78], "barn": 59, "b_m": [59, 76, 213], "confusingli": 59, "int_l": [59, 76, 205], "contour": [59, 61, 76, 181, 205], "__1": 59, "subvector": 59, "aother": 59, "bm": 59, "bother": [59, 265], "slater": [59, 205], "allow_hyp": [59, 207], "subsum": 59, "r424": 59, "r425": 59, "meijer_g": 59, "get_period": [59, 76], "appellf1": [59, 195], "b2": [59, 91, 94, 95, 105, 113, 128, 171, 184, 186, 195, 205, 208, 211, 245], "appel": 59, "0063339426292673": 59, "172870711": 59, "659936": 59, "15605338197184": 59, "r426": 59, "appell_seri": 59, "r427": 59, "hypergeometricfunct": 59, "elliptic_integr": 59, "elliptic_k": [59, 195], "tfrac": [59, 211, 215], "eccentr": [59, 61], "50923695405127": 59, "625146415202697": 59, "elliptic_f": [59, 195], "r428": 59, "r429": 59, "ellipticintegr": 59, "elliptick": [59, 195], "909449841483": 59, "74720545502474": 59, "r430": 59, "r431": 59, "ellipticf": 59, "elliptic_": [59, 61, 195], "55203744279187": 59, "290764986058437": 59, "991052601328069": 59, "81879421395609": 59, "r432": 59, "r433": 59, "elliptice2": 59, "r434": 59, "elliptic": [59, 195], "elliptic_pi": [59, 195], "50232379629182": 59, "760939574180767": 59, "29136443417283": 59, "32555634906645": 59, "r435": 59, "r436": 59, "ellipticpi3": 59, "r437": 59, "ellipticpi": [59, 195], "mathieu_funct": 59, "mathieubas": 59, "mathieusprim": [59, 195], "mathieuc": [59, 195], "mathieucprim": [59, 195], "r438": 59, "r439": 59, "r440": 59, "r441": 59, "mathieuandspheroidalfunct": 59, "r442": 59, "r443": 59, "r444": 59, "r445": 59, "r446": 59, "r447": 59, "r448": 59, "r449": 59, "r450": 59, "r451": 59, "r452": 59, "r453": 59, "chebyshevu": [59, 195], "chebyshevt_root": 59, "chebyshevu_root": 59, "assoc_legendr": [59, 195], "jacobi_poli": [59, 191], "gegenbauer_poli": [59, 191], "chebyshevt_poli": [59, 191], "chebyshevu_poli": [59, 191], "hermite_poli": [59, 191], "legendre_poli": [59, 191], "laguerre_poli": [59, 191], "r454": 59, "jacobi_polynomi": 59, "r455": 59, "jacobipolynomi": 59, "r456": 59, "jacobip": [59, 195], "jacobi_norm": 59, "normilz": 59, "p_m": 59, "delta_": [59, 158, 166], "r457": 59, "r458": 59, "r459": 59, "r460": 59, "gegenbauer_polynomi": 59, "r461": 59, "gegenbauerpolynomi": 59, "r462": 59, "gegenbauerc3": 59, "r463": 59, "chebyshev_polynomi": 59, "r464": 59, "chebyshevpolynomialofthefirstkind": 59, "r465": 59, "chebyshevpolynomialofthesecondkind": 59, "r466": 59, "r467": 59, "u_n": [59, 78, 188, 190], "r468": 59, "r469": 59, "r470": 59, "r471": 59, "r472": 59, "chebyshev_root": 59, "r473": 59, "legendre_polynomi": 59, "r474": 59, "legendrepolynomi": 59, "r475": 59, "legendrep": [59, 195], "r476": 59, "legendrep2": 59, "r477": 59, "associated_legendre_polynomi": 59, "r478": 59, "r479": 59, "r480": 59, "r481": 59, "hermite_polynomi": 59, "r482": 59, "hermitepolynomi": 59, "r483": 59, "hermiteh": [59, 195], "l_n": [59, 78], "r484": 59, "laguerre_polynomi": 59, "r485": 59, "laguerrepolynomi": 59, "r486": 59, "laguerrel": [59, 195], "r487": 59, "laguerrel3": 59, "r488": 59, "generalized_laguerre_polynomi": 59, "r489": 59, "associatedlaguerrepolynomi": 59, "r490": 59, "r491": 59, "spherical_harmon": 59, "ynm": [59, 180], "ynm_c": 59, "znm": 59, "r492": 59, "r493": 59, "sphericalharmon": 59, "r494": 59, "sphericalharmonici": 59, "r495": 59, "r496": 59, "r497": 59, "r498": 59, "z_n": [59, 189], "r499": 59, "r500": 59, "r501": 59, "eijk": 59, "levicivita": [59, 87], "eval_levicivita": 59, "pseudotensor": 59, "delta_rang": [59, 161], "kroneck": [59, 160, 161, 216, 221], "r502": 59, "kronecker_delta": [59, 161], "indices_contain_equal_inform": [59, 161], "fermi": [59, 161], "above_fermi": [59, 161], "below_fermi": [59, 161], "is_above_fermi": [59, 161], "is_below_fermi": [59, 161], "is_only_below_fermi": [59, 161], "is_only_above_fermi": [59, 161], "killable_index": [59, 161], "preferred_index": [59, 161], "point2d": [60, 61, 62, 63, 64, 66, 67, 68], "arbitrary_point": [60, 61, 62, 63, 64, 65, 67], "polyfunc": [60, 191], "ambient_dimens": [60, 62, 64, 66], "plot_interv": [60, 61, 64, 67], "lower_bound": [60, 61, 64, 67], "upper_bound": [60, 61, 64, 67], "counterclockwis": [60, 61, 62, 66, 95], "geometryent": [60, 61, 62, 64, 66, 67, 68], "hradiu": 61, "vradiu": 61, "geometryerror": [61, 64, 67, 68], "radii": 61, "foci": 61, "periapsi": 61, "apoapsi": 61, "focus_dist": 61, "shortest": [61, 64, 67, 178, 201, 207, 211, 233], "auxiliary_circl": 61, "xmin": [61, 62, 64, 66, 67, 181], "ymin": [61, 62, 64, 66, 67, 181], "xmax": [61, 62, 64, 66, 67, 181], "ymax": [61, 62, 64, 66, 67, 181], "rectangl": [61, 62, 64, 66, 67, 181, 191], "director_circl": 61, "perpendicular": [61, 64, 65, 67, 80, 120, 134, 179], "director": 61, "130": 61, "r503": 61, "encloses_point": [61, 62, 67], "border": [61, 67], "_slope": 61, "slope": [61, 62, 64, 67, 94, 95, 98], "eq1": [61, 211, 213, 214], "eq2": [61, 81, 211, 214], "r504": 61, "108270": 61, "r505": 61, "equation_of_a_shifted_ellips": 61, "evolut": 61, "focal": [61, 130, 134], "100500": 61, "363": [61, 91, 189], "175": [61, 87, 188, 189], "is_tang": [61, 63], "tangent_lin": 61, "normal_lin": 61, "line2d": [61, 64, 67], "quartic": [61, 191, 213], "2020": [61, 140], "polar_second_moment_of_area": [61, 67], "moment": [61, 67, 94, 95, 115, 122, 124, 170, 181, 191, 208, 215], "constitu": [61, 67, 110, 171, 201, 240], "planar": [61, 67, 95, 134], "resist": [61, 67, 94, 95, 204], "deflect": [61, 67, 94, 95], "bend": [61, 67, 94, 96], "r506": 61, "polar_moment_of_inertia": [61, 67], "random_point": [61, 64, 65], "arb": 61, "364": 61, "notimpl": [61, 190], "second_moment_of_area": [61, 67], "centroid": [61, 67, 68, 94], "i_xx": [61, 67], "i_yi": [61, 67], "i_xi": [61, 67], "ellis": 61, "r507": 61, "list_of_second_moments_of_area": 61, "section_modulu": [61, 67], "sympify": [61, 67, 94, 105, 110, 132, 135, 173], "farthest": [61, 67], "s_x": [61, 67], "s_y": [61, 67], "r508": 61, "semilatus_rectum": 61, "semi": [61, 64, 91], "latu": 61, "rectum": 61, "chord": 61, "conic": [61, 208, 240], "directrix": 61, "r509": 61, "semilatusrectum": 61, "r510": 61, "latus_rectum": 61, "collinear": [61, 63, 65, 66, 67, 181], "gx": 61, "hy": 61, "synonym": [61, 190], "p4": [61, 64, 66, 67, 181], "boundari": [62, 64, 94, 95, 174, 192, 203, 211, 215], "t2": [62, 67, 68, 91, 105, 110, 208, 215, 221], "ordering_of_class": 62, "is_similar": [62, 64, 67, 68], "uniform": [62, 181, 215], "enlarg": 62, "shrink": [62, 76], "parameter_valu": [62, 65], "pent": 62, "rpent": 62, "rcirc": 62, "entity1": 63, "entity2": 63, "zp": 63, "is_collinear": [63, 66], "segment2d": [63, 64, 67, 68], "wikipappu": 63, "bc": [63, 233, 236, 245], "subs_point": 63, "p11": 63, "p12": 63, "p13": 63, "p21": 63, "p22": 63, "p23": 63, "ll1": 63, "ll2": 63, "ll3": 63, "ll4": 63, "ll5": 63, "ll6": 63, "pp1": 63, "pp2": 63, "pp3": 63, "encyclopedia": [63, 177], "apr": 63, "s_hexagon_theorem": 63, "clockwis": [63, 78, 82, 94, 95], "overlap": [63, 68, 90, 182, 203, 236], "infanc": 63, "geometryresult": 63, "fair": [63, 215], "angle_between": [64, 65, 67, 171], "reflex": 64, "eman": 64, "readili": [64, 87], "sw": 64, "obtus": 64, "smallest_angle_between": 64, "line3d": [64, 65, 66], "is_perpendicular": [64, 65, 66, 67], "ray2d": [64, 67], "closing_angl": 64, "are_concurr": [64, 65], "concurr": [64, 65, 192], "l3": [64, 188], "l4": 64, "bisector": [64, 67], "p5": [64, 66, 67, 181], "p6": [64, 67, 181], "p7": [64, 67, 181], "segment3d": [64, 65], "direction_ratio": [64, 66], "is_parallel": [64, 65], "parallel_lin": 64, "perpendicular_lin": [64, 65], "perpendicular_seg": 64, "enpoint": 64, "reform": 64, "432": [64, 190], "92": [64, 189, 211, 215], "ccw": [64, 67], "ray3d": [64, 65, 134], "xdirect": 64, "ydirect": 64, "midpoint": [64, 66, 67, 78, 181, 245], "170": [64, 215], "341": 64, "perpendicular_bisector": 64, "linearentity2d": 64, "linearentity3d": [64, 65], "direction_cosin": [64, 66], "zdirect": 64, "normal_vector": [65, 134], "proce": [65, 125, 188, 190, 205, 213], "147": 65, "321": 65, "is_coplanar": 65, "perpendicualar": 65, "parallel_plan": 65, "on_circl": 65, "off_circl": 65, "perpendicular_plan": 65, "pt1": 65, "projection_lin": 65, "on_morph": 66, "affine_rank": 66, "are_coplanar": 66, "canberra_dist": 66, "canberra": 66, "geometricent": 66, "taxicab_dist": 66, "is_concycl": 66, "concycl": 66, "fewer": [66, 67, 125, 215, 260], "is_scalar_multipl": 66, "ambient": 66, "orthogonal_direct": 66, "taxicab": 66, "_nocheck": 66, "are_collinear": 66, "4x4": [66, 90, 133, 215], "travers": [67, 91, 106, 191, 204, 220, 230, 251, 265], "unrot": 67, "circumscrib": 67, "spin": [67, 102, 115, 147, 148, 156], "perimet": [67, 247], "contact": [67, 115, 118, 119, 120, 121, 178, 219], "38": [67, 87, 91, 195, 208, 210, 215], "cut_sect": 67, "upper_polygon": 67, "lower_polygon": 67, "upper_seg": 67, "lower_seg": 67, "r511": 67, "r512": 67, "paulbourk": 67, "polygonmesh": 67, "insidepoli": 67, "first_moment_of_area": 67, "q_x": [67, 178], "q_y": [67, 178], "625": [67, 249], "3125": [67, 215], "525": 67, "3000": [67, 94], "r513": 67, "skyciv": 67, "beam": [67, 130, 133, 256], "bmd": 67, "r514": 67, "mechanicalc": 67, "poly1": 67, "poly2": 67, "interior": [67, 191, 203], "180": [67, 179, 189], "r515": 67, "r516": 67, "r517": 67, "apothem": 67, "interior_angl": 67, "exterior_angl": 67, "circumcircl": 67, "incircl": 67, "inradiu": 67, "inscrib": 67, "circumcent": 67, "circumradiu": 67, "leg": 67, "square_in_unit_circl": 67, "kite": 67, "asa": 67, "sa": [67, 191], "sss": 67, "altitud": 67, "orthocent": 67, "exradii": 67, "median": [67, 215, 257], "medial": 67, "nine_point_circl": 67, "straight": [67, 73, 98, 116, 178, 211], "eulerlin": 67, "equilater": 67, "coincid": [67, 87, 90, 107, 113, 182, 240, 244, 262], "excent": 67, "excircl": 67, "touch": [67, 115, 204], "r518": 67, "ly": [67, 87, 186], "exradiu": 67, "r519": 67, "r520": 67, "incent": 67, "is_equilater": 67, "is_isoscel": 67, "is_right": 67, "is_scalen": 67, "nine": [67, 195], "feet": 67, "real_num": 68, "hull": 68, "r521": 68, "graham_scan": 68, "r522": 68, "andrew": 68, "1979": [68, 166], "geomalgorithm": 68, "a10": 68, "_hull": 68, "t3": [68, 208], "mass": [68, 102, 103, 104, 105, 107, 108, 112, 113, 115, 116, 117, 119, 121, 122, 123, 124, 128, 129, 137, 162, 164, 165, 166, 176, 178, 226, 247, 248], "averag": [68, 78, 91, 188, 215], "qq": [69, 70, 72, 73, 74, 78, 182, 183, 184, 185, 187, 188, 190, 191, 192], "p_r": 69, "holonomic_funct": 69, "from_hyp": [70, 73], "holonomicfunct": [70, 71, 73], "from_meijerg": [70, 73], "initcond": [70, 72, 73], "expr_to_holonom": [70, 73, 74, 75], "lenic": [70, 72], "ground": [70, 115, 118, 119, 120, 121, 182, 185, 186, 188, 190, 191, 213, 269], "meijerint": [70, 72, 76, 78], "_rewrite1": [70, 76], "_convert_poly_rat_alg": [70, 72], "_create_t": [70, 72], "differentialoper": [71, 73, 150], "differentialoperatoralgebra": 71, "_create_lookup_t": [72, 76], "old_poly_r": [73, 74, 182, 185, 186], "to_expr": [73, 74, 75, 100], "to_sequ": 73, "n_0": [73, 188, 213, 214], "indici": [73, 74, 75, 211], "c_j": [73, 76, 205], "holonomicsequ": 73, "r523": 73, "hal": 73, "inria": [73, 78], "fr": [73, 78, 91, 108, 113, 115, 116, 119, 120, 123, 125, 128, 215], "00070025": 73, "r524": 73, "risc": [73, 211, 240], "jku": [73, 211, 240], "risc_2244": 73, "diplform": 73, "_recur": 73, "rk4": 73, "kutta": 73, "71828182845905": 73, "10517083333333": 73, "22140257085069": 73, "34985849706254": 73, "49182424008069": 73, "64872063859684": 73, "82211796209193": 73, "01375162659678": 73, "22553956329232": 73, "45960141378007": 73, "71827974413517": 73, "331": 73, "4641": 73, "61051": 73, "771561": 73, "9487171": 73, "14358881": 73, "357947691": 73, "5937424601": 73, "to_hyp": 73, "as_list": [73, 191], "to_meijerg": 73, "homogen": [74, 78, 87, 100, 186, 188, 191, 208, 211, 212, 215], "1_0": 74, "1_1": 74, "0_0": 74, "0_1": 74, "pyplot": [74, 128], "plt": [74, 128], "list_of_poli": 74, "weyl": [74, 80], "Ore": 74, "dxa": 74, "endomorph": [74, 190], "frobeniu": [75, 87, 91, 188, 189], "subtleti": 76, "recast": [76, 207, 213, 214], "branchpoint": 76, "crude": [76, 115, 181], "decre": 76, "biholomorph": 76, "mutual": [76, 179], "neighbourhood": 76, "evid": [76, 108, 120, 205], "peculiar": [76, 179], "throughout": [76, 81, 188, 198, 214, 262], "_split_mul": 76, "_mytyp": 76, "inequival": 76, "_mul_as_two_part": 76, "bx": [76, 215, 221], "twist": 76, "recognis": [76, 185, 205, 207], "anywai": [76, 207, 211], "analyitc": 76, "_rewrite_singl": 76, "_rewrite2": 76, "_rewrite_saxena_1": 76, "_rewrite_saxena": 76, "blogpost": 76, "remedi": 76, "exploit": [76, 227], "transpar": [76, 79, 175], "nessgrh": 76, "wordpress": [76, 208], "07": 76, "stade": 76, "c_u": 76, "d_1": [76, 166, 191, 215], "d_v": 76, "amalgam": 76, "prudnikov1990": [76, 205], "luke1969": [76, 205], "c_3": [76, 211], "c_4": 76, "visibl": [76, 181], "fulfil": [76, 180], "vee": [76, 81], "lceil": 76, "rceil": 76, "d_j": [76, 166, 205], "lambda_c": [76, 124], "lambda_": 76, "z_0": [76, 207], "z_1": 76, "a_i": [76, 166, 171, 179, 183, 188, 205], "c_5": 76, "c_6": 76, "c_7": 76, "c_8": 76, "lvert": 76, "rvert": 76, "c_9": 76, "versatil": 76, "bz": [76, 208, 221], "deform": [76, 95], "encircl": 76, "appeal": 76, "fox": 76, "obstacl": 76, "identif": [76, 214], "domin": [76, 82, 200, 202], "iT": 76, "omega_": 76, "disguis": 76, "meijerint_indefinit": 76, "meijerint_definit": 76, "meijerint_invers": 76, "kelli": [76, 205], "roach": [76, 205], "211": [76, 91, 191, 205, 211], "prudnikov": [76, 205], "yu": [76, 180, 205], "brychkov": [76, 205], "marichev": [76, 205], "gordon": [76, 140, 205], "breach": [76, 205], "_coeffexpvalueerror": 76, "_get_coeff_exp": 76, "_check_anteced": 76, "_check_antecedents_1": 76, "mt": 76, "_check_antecedents_invers": 76, "anteced": [76, 202], "_condsimp": 76, "hoc": 76, "simp": [76, 115, 171], "_dummi": 76, "_dummy_": 76, "_eval_cond": 76, "_expon": 76, "_find_splitting_point": 76, "fsp": 76, "_flip_g": 76, "_function": 76, "_guess_expans": 76, "sensibl": [76, 78], "_inflate_fox_h": 76, "_inflate_g": 76, "_int0oo": 76, "_int0oo_1": 76, "_int_invers": 76, "_is_analyt": 76, "almost": [76, 85, 93, 163, 181, 182, 186, 191, 192, 211, 215, 229, 230, 233, 264], "_meijerint_definite_2": 76, "expand_mul": 76, "trigexpand": 76, "_meijerint_definite_3": 76, "_meijerint_definite_4": 76, "only_doubl": 76, "_meijerint_indefinite_1": 76, "_mul_arg": 76, "_my_principal_branch": 76, "full_pb": 76, "nearer": 76, "superflu": 76, "opaqu": [76, 195], "fac": 76, "_rewrite_invers": 76, "costli": [76, 116, 266], "tx": [76, 268], "overview": [77, 183, 214, 247, 248], "argand": [77, 214], "lookup": [77, 78, 87, 91, 205], "laplac": [77, 78, 97, 98, 100, 215], "todo": [77, 139, 141, 145, 146, 150, 151, 153, 154, 155, 156, 157, 188, 195, 202, 220], "polytop": 77, "happili": [78, 219], "nonelementari": 78, "mellin_transform": 78, "bilater": 78, "mellintransform": 78, "integraltransform": 78, "nocond": 78, "inverse_mellin_transform": 78, "laplace_transform": [78, 100], "fourier_transform": 78, "hankel_transform": 78, "inverse_hankel_transform": 78, "suitabl": [78, 84, 93, 183, 185, 188, 190, 195, 205, 208, 211, 214, 216, 263], "inversemellintransform": 78, "attemp": 78, "laplacetransform": 78, "inverse_laplace_transform": 78, "singularit": [78, 125], "inverselaplacetransform": 78, "_fast_inverse_laplac": 78, "rootsum": [78, 191, 197], "fouriertransform": 78, "_fourier_transform": 78, "inverse_fourier_transform": 78, "sine_transform": 78, "inverse_sine_transform": 78, "cosine_transform": 78, "inverse_cosine_transform": 78, "bixk": 78, "inversefouriertransform": 78, "sinetransform": 78, "inversesinetransform": 78, "cosinetransform": 78, "inversecosinetransform": 78, "hankeltransform": 78, "ht": 78, "inversehankeltransform": 78, "_compute_transform": 78, "_as_integr": 78, "integraltransformerror": 78, "_name": 78, "_collapse_extra": 78, "needev": 78, "function_vari": 78, "transform_vari": 78, "lazard": [78, 188, 191], "rioboo": 78, "trager": 78, "horowitz": 78, "ostrogradski": 78, "ratint": 78, "rationaltool": [78, 191], "ratint_logpart": 78, "ratint_ratpart": 78, "r525": 78, "bronstein": [78, 189, 191, 197, 213], "verlag": [78, 189], "deg": [78, 98, 113, 183, 188, 190, 191], "q_i": [78, 109, 125], "_t": [78, 113, 128, 161, 170, 171, 174, 205, 215], "trigintegr": 78, "trigonometri": 78, "r526": 78, "integration_techniqu": 78, "deltaintegr": 78, "couldn": 78, "didn": [78, 87, 125], "singularityintegr": 78, "risch_integr": 78, "nonelementaryintegr": 78, "proven": [78, 91, 245, 262], "handle_first": 78, "separate_integr": 78, "rewrite_complex": 78, "forthcom": 78, "5109": 78, "outer": [78, 110, 126, 128, 144, 149, 150, 171, 174, 177, 179, 197, 203, 219, 240, 242, 243], "pop": [78, 208], "manualintegr": 78, "integral_step": 78, "student": [78, 204, 208, 215], "_i": [78, 161, 166, 192], "namedtupl": 78, "substep": 78, "sympy_gamma": 78, "app": 78, "intstep": 78, "urul": 78, "u_var": 78, "_u": [78, 161], "u_func": 78, "arctanrul": 78, "trigrul": 78, "rewriterul": 78, "addrul": 78, "powerrul": 78, "constanttimesrul": 78, "constantrul": 78, "norman": 78, "slowest": [78, 92], "retri": [78, 91], "degree_offset": 78, "unnecessary_permut": 78, "_try_heurisch": 78, "manuel": [78, 200], "poor": [78, 92], "man": [78, 189], "whittak": 78, "r527": 78, "sop": [78, 81], "cafe": 78, "pmint": 78, "r528": 78, "gedd": [78, 189], "stefanu": 78, "217": [78, 189], "r529": 78, "davenport": [78, 188, 189], "eurocam": 78, "lnc": [78, 189, 213], "157": [78, 91, 95, 189], "r530": 78, "iii": [78, 195, 211], "sigsam": 78, "bulletin": 78, "1982": [78, 180], "r531": 78, "transact": [78, 189], "1985": [78, 108, 127, 171, 240], "356": [78, 190, 213], "362": 78, "huge": [78, 91, 191, 231], "entail": 78, "delic": [78, 182], "albeit": [78, 243], "mimic": [78, 79, 175, 234], "moder": 78, "irrespect": [78, 208, 211, 236], "line_integr": 78, "as_sum": 78, "subinterv": 78, "trapezoid": [78, 87, 215], "730": 78, "809": 78, "decai": 78, "r532": 78, "riemann_sum": 78, "r533": 78, "cauchy_principal_valu": 78, "r534": 78, "cauchyprincipalvalu": 78, "int_a": 78, "uvar": 78, "ui": [78, 91], "accomplish": [78, 125, 128, 246], "3aissu": 78, "3aopen": 78, "3aintegr": 78, "gauss_legendr": 78, "n_digit": 78, "legendr": [78, 91, 191, 195, 208], "r535": 78, "w_i": [78, 130, 191, 211], "7746": 78, "55556": 78, "88889": 78, "86114": 78, "33998": 78, "34785": 78, "65215": 78, "gauss_laguerr": 78, "gauss_gen_laguerr": 78, "gauss_hermit": 78, "gauss_chebyshev_t": 78, "gauss_chebyshev_u": 78, "gauss_jacobi": 78, "gauss_lobatto": 78, "gaussian_quadratur": 78, "r536": 78, "fsu": 78, "jburkardt": 78, "cpp_src": 78, "legendre_rul": 78, "laguerr": [78, 191, 195], "r537": 78, "41577": 78, "2943": 78, "2899": 78, "71109": 78, "27852": 78, "010389": 78, "22285": 78, "1889": 78, "9927": 78, "7751": 78, "8375": 78, "983": 78, "45896": 78, "417": [78, 207], "11337": 78, "010399": 78, "00026102": 78, "9855e": 78, "93laguerre_quadratur": 78, "r538": 78, "laguerre_rul": 78, "hermit": [78, 82, 87, 88, 184, 190, 191, 195, 215], "r539": 78, "2247": 78, "29541": 78, "1816": 78, "3506": 78, "3358": 78, "43608": 78, "00453": 78, "15707": 78, "72463": 78, "hermite_quadratur": 78, "r540": 78, "hermite_rul": 78, "r541": 78, "gen_hermite_rul": 78, "r542": 78, "19016": 78, "7845": 78, "5253": 78, "4493": 78, "31413": 78, "00906": 78, "97851": 78, "9904": 78, "3193": 78, "712": 78, "53087": 78, "67721": 78, "11895": 78, "0023152": 78, "r543": 78, "gen_laguerre_rul": 78, "r544": 78, "86602": 78, "0472": 78, "96593": 78, "70711": 78, "25882": 78, "5236": 78, "93gauss_quadratur": 78, "r545": 78, "chebyshev1_rul": 78, "r546": 78, "3927": 78, "7854": 78, "90097": 78, "62349": 78, "22252": 78, "084489": 78, "27433": 78, "42658": 78, "r547": 78, "chebyshev2_rul": 78, "jacobi": [78, 91, 102, 191, 195], "r548": 78, "7063": 78, "0973": 78, "33795": 78, "87174": 78, "5917": 78, "2093": 78, "050584": 78, "22169": 78, "39439": 78, "93jacobi_quadratur": 78, "r549": 78, "jacobi_rul": 78, "r550": 78, "gegenbauer_rul": 78, "lobatto": 78, "r551": 78, "3333": 78, "44721": 78, "16667": 78, "83333": 78, "93lobatto_rul": 78, "r552": 78, "page_888": 78, "intpoli": 78, "chin": 78, "al": [78, 113, 140, 188, 204, 207], "2015": [78, 214], "unit_cub": 78, "polytope_integr": 78, "eric": [78, 189], "jean": 78, "lasserr": 78, "sukumar": 78, "nonconvex": 78, "967": 78, "981": 78, "dilbert": 78, "engr": 78, "ucdavi": 78, "suku": 78, "max_degre": [78, 191], "689": [78, 95], "21875": 78, "octahedron": 78, "trivari": 78, "enable_automatic_int_sympif": 79, "enable_automatic_symbol": 79, "init_ipython_sess": 79, "argv": [79, 226], "init_python_sess": 79, "use_latex": [79, 175, 269], "quiet": 79, "str_printer": [79, 175], "latex_print": [79, 175], "pylab": 79, "stringifi": [79, 175], "sstrrepr": [79, 175, 195], "lexograph": [79, 175], "gui": [79, 175], "statu": 79, "\u03b8": [79, 107, 133, 214], "int_to_integ": 79, "decistmt": 79, "f401": 79, "0x12": 79, "num_column": [79, 175, 195, 211], "no_glob": [79, 175], "ip": [79, 149, 155, 175], "forecolor": [79, 175], "backcolor": [79, 175], "fontsiz": [79, 175, 195], "10pt": [79, 175, 195], "latex_mod": [79, 175], "print_builtin": [79, 175], "interactiveconsol": [79, 175], "preambl": [79, 175, 195], "handwritten": [79, 175], "ctan": [79, 175], "pkg": [79, 175], "dvi": [79, 175, 195], "foreground": [79, 175], "black": [79, 146, 157, 175, 195, 269], "white": [79, 175, 215], "documentclass": [79, 175, 195], "dpi": [79, 175], "u03b8": 79, "dvip": 79, "r553": 79, "r554": 79, "the_68_standard_colors_known_to_dvip": 79, "config": 79, "root_system": 80, "rootsystem": 80, "cartantyp": 80, "cartan": 80, "subalgebra": 80, "adjoint": [80, 82, 87, 138, 142], "hyperplan": 80, "k_y": 80, "r555": 80, "r556": 80, "humphrei": 80, "add_as_root": 80, "root1": 80, "root2": 80, "add_simple_root": 80, "newroot": 80, "all_root": [80, 91, 191], "cartan_matrix": 80, "dynkin_diagram": 80, "dynkin": 80, "root_spac": 80, "simple_root": 80, "type_a": 80, "typea": 80, "basic_root": 80, "iin": 80, "jth": [80, 214], "ijth": 80, "cartan_typ": 80, "highest_root": 80, "lie_algebra": 80, "positive_root": 80, "type_b": 80, "typeb": 80, "b4": 80, "b3": [80, 113, 128, 171, 245], "type_c": 80, "typec": 80, "c4": [80, 82, 84, 211], "type_d": 80, "d4": [80, 215], "dmension": 80, "type_": 80, "e6": 80, "type_f": 80, "typef": 80, "f_4": [80, 109], "f4": [80, 181], "type_g": 80, "typeg": 80, "weyl_group": 80, "weylgroup": 80, "semisimpl": 80, "isometri": 80, "coxeter_diagram": 80, "undirect": [80, 233], "s_is_j": 80, "delete_doubl": 80, "element_ord": 80, "weylelt": 80, "group_nam": 80, "group_ord": 80, "192": 80, "matrix_form": 80, "cartantype_gener": 80, "standard_cartan": 80, "dynkindiagram": 80, "cartanmatrix": 80, "sopform": 81, "minterm": 81, "dontcar": 81, "simplified_pair": 81, "combo": 81, "outcom": [81, 164, 215], "r557": 81, "quin": 81, "mccluskey_algorithm": 81, "posform": 81, "r558": 81, "anfform": 81, "truthvalu": 81, "anf": 81, "funciton": 81, "zhegalkin": 81, "r559": 81, "zhegalkin_polynomi": 81, "as_set": 81, "booleantru": 81, "doubt": [81, 113], "greet": 81, "booleanfals": 81, "universalset": 81, "nand": 81, "xnor": 81, "gate": [81, 141, 146, 148, 154, 155, 157], "perspect": [81, 91, 100, 166, 181, 228, 244, 248], "multiplex": 81, "conjunct": [81, 181, 205, 226, 270], "disjunct": 81, "to_anf": 81, "oplu": [81, 145], "to_cnf": 81, "cnf": 81, "mccluskei": 81, "to_dnf": 81, "to_nnf": 81, "nnf": 81, "is_anf": 81, "is_cnf": 81, "is_dnf": 81, "is_nnf": 81, "gateinputcount": 81, "simplify_log": 81, "fewest": [81, 155], "bool_map": 81, "bool1": 81, "bool2": 81, "function1": 81, "function2": 81, "distribute_and_over_or": 81, "distribute_or_over_and": 81, "distribute_xor_over_and": 81, "eliminate_impl": 81, "truth_tabl": 81, "ibin": [81, 233], "integer_to_term": 81, "0001111011": [81, 233], "1101111000": [81, 233], "term_to_integ": 81, "bool_maxterm": 81, "maxterm": 81, "complement": [81, 84, 191, 214], "r560": 81, "canonical_normal_form": 81, "indexing_maxterm": 81, "bool_minterm": 81, "patter": 81, "r561": 81, "indexing_minterm": 81, "bool_monomi": 81, "enumar": 81, "anf_coeff": 81, "to_int_repr": 81, "all_model": 81, "unsatisfi": 81, "use_model": 81, "unsat": 81, "matrixbas": [82, 83, 84, 86, 184], "dirac": [82, 87, 98, 102, 103, 159, 195], "__abs__": [82, 186], "__add__": [82, 186, 190], "shapeerror": [82, 84, 87], "__len__": 82, "96": [82, 87, 215], "mismatch": 82, "matrix_multiply_elementwis": [82, 87], "applyfunc": [82, 83, 87, 120, 171, 216], "col": [82, 84, 87, 90, 100, 128, 184, 190, 266], "col_del": [82, 87, 266], "col_join": [82, 87, 115], "col_insert": [82, 266], "row_insert": [82, 266], "row_join": [82, 87, 115], "companion": [82, 84], "c0": [82, 84, 202, 211, 213], "sparsematrix": [82, 86, 87, 90, 196, 207], "diag": [82, 84, 87, 90, 128, 184, 221, 266], "immutablematrix": [82, 84, 86, 100, 171, 215, 240, 242, 266], "dens": [82, 84, 86, 87, 184, 187, 190, 191, 216, 254, 265], "blockmatrix": [82, 84, 87], "sparsetool": [82, 90], "kth": [82, 91], "rowslist": [82, 184], "colslist": 82, "submatrix": [82, 87, 188, 215], "get_diag_block": [82, 84, 87], "decoupl": 82, "hstack": [82, 184], "is_anti_symmetr": 82, "is_diagon": [82, 87], "is_low": [82, 184], "is_upp": [82, 184], "matrixeigen": [82, 86], "is_diagonaliz": [82, 87], "is_hermitian": [82, 87], "is_lower_hessenberg": 82, "hessenberg": [82, 87], "superdiagon": 82, "is_upper_hessenberg": 82, "is_strongly_diagonally_domin": 82, "strongli": [82, 87, 184, 233], "m1": [82, 87, 91, 95, 132, 140, 158, 160, 164, 208, 211, 216, 221], "subdiagon": [82, 87], "is_weakly_diagonally_domin": 82, "weakli": [82, 233], "vacuou": 82, "jordan_block": [82, 87], "eigenv": [82, 87, 113, 115, 128, 155, 264, 266], "insuffici": 82, "rectangular": [82, 87, 203, 214, 243], "r562": 82, "jordan_matrix": [82, 211], "dotprodsimp": 82, "blowup": 82, "multiply_elementwis": [82, 87], "hadamard": [82, 84, 87, 145, 146, 157, 195], "elementwis": [82, 84, 87, 216], "300": [82, 87, 91, 94, 176, 181, 192, 248], "bmatrix": [82, 84, 87, 116, 123, 124, 125, 126, 171, 179, 208], "a_0": [82, 87, 198, 208, 211, 216, 270], "vdot": [82, 84, 87, 166], "alpha_0": 82, "alpha_1": [82, 91, 190], "alpha_": [82, 180], "permute_col": 82, "permute_row": 82, "mulsimp": 82, "rmultipli": 82, "__rmul__": 82, "rot90": 82, "anticlockwis": 82, "row_del": [82, 87, 266], "todod": 82, "tolist": [82, 216], "vec": [82, 87, 128, 171, 180, 188, 245, 246, 248], "vech": 82, "check_symmetri": 82, "vstack": [82, 184], "wilkinson": 82, "w_": [82, 190], "wminu": 82, "wplu": 82, "r563": 82, "mathwork": [82, 98, 215, 266], "cleve": 82, "04": [82, 215], "r564": 82, "claredon": 82, "oxford": 82, "662": 82, "intm": 82, "undefinedkind": [82, 203], "tuplekind": [82, 203], "mutabledensematrix": [83, 184, 236], "densematrix": [83, 87], "ldldecomposit": [83, 87], "ldl": [83, 87], "choleski": [83, 87], "ludecomposit": [83, 84, 87, 266], "qrdecomposit": [83, 87], "as_immut": 83, "lower_triangular_solv": [83, 87], "upper_triangular_solv": [83, 87], "gauss_jordan_solv": [83, 87], "cholesky_solv": [83, 87], "diagonal_solv": [83, 87], "ldlsolv": [83, 87], "lusolv": [83, 87, 109, 125, 129, 213, 266], "qrsolv": [83, 87], "pinv_solv": [83, 87], "permutedim": [84, 216, 217], "arraytensorproduct": [84, 217], "from_index_summ": 84, "first_index": 84, "last_index": 84, "longrightarrow": 84, "matpow": [84, 195], "hadamardproduct": [84, 195], "hadamard_product": 84, "hadamardpow": [84, 195], "ddot": [84, 87, 116, 124, 175, 178, 195, 270], "functionmatrix": 84, "lamda": [84, 195, 203, 215, 266], "lazili": [84, 201], "342923500": 84, "permutationmatrix": [84, 87], "matrixpermut": 84, "companionmatrix": 84, "matrixset": [84, 203], "submatric": [84, 87, 184, 215], "block_collaps": 84, "dat": [84, 233], "irregular": [84, 87], "ldudecomposit": 84, "ldu": 84, "2x2": [84, 90, 130, 184, 211], "noninvertiblematrixerror": [84, 266], "udldecomposit": 84, "lu": [84, 87, 184, 189], "udl": 84, "schur": 84, "penros": [84, 87], "pinv": [84, 87], "r565": 84, "schur_compl": 84, "blockdiagmatrix": [84, 87], "diag_block": 84, "alias": [85, 186], "bridg": [85, 113, 234], "tension": 85, "matrixdetermin": 86, "matrixreduct": 86, "matrixsubspac": 86, "matrixcalculu": 86, "immutablesparsematrix": 86, "gramschmidt": 87, "m2": [87, 91, 95, 110, 132, 140, 158, 160, 164, 190, 208, 211, 216, 221], "126": [87, 91, 194], "150": [87, 100, 208], "v3": [87, 171, 174, 245], "glue": 87, "m3": [87, 140, 208, 216], "adj": 87, "qr": 87, "cheat": 87, "soln": 87, "gram": [87, 166, 168], "schmidt": 87, "out1": 87, "out2": 87, "1692": 87, "1551": 87, "423": 87, "6707": 87, "spot": [87, 129], "eigenvector": [87, 113, 155, 156, 180], "nullspac": [87, 184], "adjug": 87, "berkowitz": 87, "bareiss": 87, "cofactor_matrix": 87, "charpoli": [87, 184, 266], "_simplifi": 87, "purepoli": [87, 191], "samuelson": 87, "minor_submatrix": 87, "iszerofunc": [87, 266], "barei": 87, "det_lu": 87, "functiontyp": 87, "_iszero": [87, 266], "_is_zero_after_expand_mul": 87, "unrecogn": 87, "nonsquarematrixerror": [87, 211], "i3": [87, 101, 113, 128, 221], "perman": 87, "ryser": 87, "450": 87, "r566": 87, "prof": 87, "ben": 87, "berkelei": 87, "bernd": 87, "ban275": 87, "r567": 87, "permanent_": 87, "r568": 87, "r569": 87, "0904": 87, "3251": 87, "echelon_form": [87, 266], "with_pivot": 87, "echelon": [87, 184, 214, 266], "elementary_col_op": 87, "kn": [87, 94, 95], "col1": 87, "col2": 87, "km": [87, 91, 104, 108, 115, 116, 119, 120, 123, 125, 128, 167], "elementary_row_op": 87, "row1": 87, "row2": 87, "is_echelon": [87, 266], "rref": [87, 184], "pivot": [87, 184, 266], "normalize_last": 87, "rref_matrix": [87, 184], "rref_pivot": [87, 184], "301369863013699": 87, "712328767123288": 87, "noramlize_last": 87, "subspac": [87, 190], "columnspac": [87, 184], "rowspac": [87, 184], "orthonorm": [87, 128, 156, 179, 243], "rankcheck": 87, "r570": 87, "93schmidt_process": 87, "eigen": [87, 137], "bidiagonal_decomposit": 87, "ubv": 87, "bidiagon": 87, "hang": [87, 116, 120, 211, 212], "bidiagn": 87, "r571": 87, "golub": 87, "van": [87, 91, 189], "loan": 87, "r572": 87, "vslobodi": 87, "household": 87, "r573": 87, "r574": 87, "reals_onli": 87, "throw": [87, 93, 113, 190, 208, 214], "error_when_incomplet": 87, "eig": [87, 113, 128], "matrixerror": 87, "got": [87, 182, 185, 188, 191, 194, 226, 227, 233, 234, 262, 264, 265], "abel": 87, "ruffini": 87, "eigenvect": [87, 113, 128, 155, 266], "tidi": 87, "artifact": 87, "ret": 87, "eigenspac": 87, "rag": 87, "a_3": 87, "diagonaliz": [87, 266], "is_indefinit": 87, "semidefinit": [87, 215], "plot3d": [87, 181], "is_positive_definit": 87, "is_positive_semidefinit": 87, "hire": [87, 94, 95, 98, 181, 198], "is_negative_definit": 87, "is_negative_semidefinit": 87, "defer": [87, 237], "r575": 87, "definiteness_of_a_matrix": 87, "r576": 87, "positivedefinitematrix": 87, "r577": 87, "amer": 87, "259": 87, "264": [87, 213], "r578": 87, "r579": 87, "r580": 87, "r581": 87, "r582": 87, "r583": 87, "r584": 87, "r585": 87, "r586": 87, "r587": 87, "r588": 87, "r589": 87, "jordan_form": 87, "calc_transform": 87, "left_eigenvect": 87, "singular_valu": 87, "condition_numb": 87, "hessian": 87, "wronskian": [87, 211], "simpfunc": 87, "permutebkwd": 87, "permutefwd": 87, "lucombin": 87, "defici": [87, 91, 214], "matrixi": 87, "ludecomposition_simpl": [87, 266], "ludecompositionff": 87, "pa": [87, 108, 110, 123, 126, 129], "r590": 87, "zhou": 87, "jeffrei": [87, 207], "frontier": [87, 203], "china": 87, "67": [87, 189], "2008": [87, 180, 189, 191, 195], "row_swap": 87, "compres": 87, "permute_backward": 87, "permute_forward": 87, "u_": 87, "intiuit": 87, "lu_": 87, "_find_reasonable_pivot": 87, "lu_solv": [87, 184], "qr_solv": 87, "augument": 87, "167": 87, "158": [87, 95], "27261": 87, "30625": 87, "348": 87, "1914": 87, "6125": 87, "30589": 87, "198": 87, "1225": 87, "q_aug": 87, "r_aug": 87, "analytic_func": 87, "connected_compon": [87, 233], "connected_components_decomposit": 87, "relax": [87, 93], "3x1": 87, "1x3": 87, "conjugate_convent": 87, "dual": [87, 153, 159], "anti_symmetr": 87, "speak": [87, 190, 246], "freevar": 87, "underdetermin": [87, 213, 214], "free_var_index": 87, "sol": [87, 208, 211, 212, 213], "tau0": [87, 214, 215], "tau1": 87, "taus_zero": 87, "sol_uniqu": 87, "r591": 87, "gaussian_elimin": 87, "try_block_diag": 87, "inverse_g": [87, 266], "inverse_lu": [87, 266], "inverse_adj": [87, 266], "inverse_ch": 87, "inverse_ldl": 87, "inverse_qr": 87, "inv_mod": 87, "cof": 87, "inverse_block": 87, "blockwis": 87, "ntop": 87, "key2bound": 87, "key2ij": 87, "reciproc": [87, 215, 270], "fro": 87, "sing": 87, "spectral": 87, "rd": [87, 113, 195], "pseudoinvers": 87, "r592": 87, "penrose_pseudoinvers": 87, "arbitrary_matrix": 87, "wn_m": 87, "_w0_0": 87, "_w1_0": 87, "_w2_0": 87, "59": [87, 211], "r593": 87, "obtaining_all_solutions_of_a_linear_system": 87, "print_nonzero": [87, 233], "symb": [87, 195], "rank_decomposit": 87, "r594": 87, "rank_factor": 87, "r595": 87, "piziak": 87, "odel": 87, "magazin": 87, "193": [87, 98], "2307": 87, "2690882": 87, "singular_value_decomposit": 87, "condens": [87, 214], "orthogn": 87, "v_aug": 87, "u_aug": 87, "s_aug": 87, "gj": 87, "solve_least_squar": 87, "strongly_connected_compon": [87, 184, 233], "62": [87, 188], "strongly_connected_components_decomposit": 87, "rowstart": 87, "rowend": 87, "rowsep": 87, "colsep": 87, "strprinter": [87, 175, 258], "upper_hessenberg_decomposit": 87, "213": 87, "134": 87, "216": [87, 188], "hessenbergdecomposit": 87, "jordan_cel": 87, "varlist": 87, "r596": 87, "hessian_matrix": 87, "vlist": 87, "r597": 87, "casoratian": 87, "kernel": [87, 182, 188, 190, 213], "vanish": [87, 161, 188, 191, 194, 211, 240], "rsolve_hyp": [87, 213], "randmatrix": 87, "percent": [87, 214], "prng": 87, "percentag": [87, 91], "46": [87, 94, 166, 194, 213, 215], "list2numpi": 87, "dtype": [87, 92, 182, 184, 185, 186, 195, 234], "matrix2numpi": 87, "symarrai": 87, "ndarrai": [87, 215, 221, 227], "prefix_i1_i2_": 87, "_2": [87, 170, 171, 211], "a_0_0": 87, "a_0_1": 87, "a_0_2": 87, "a_1_0": 87, "a_1_1": 87, "a_1_2": 87, "a_0_0_0": 87, "a_0_0_1": 87, "a_0_1_0": 87, "a_0_1_1": 87, "a_0_2_0": 87, "a_0_2_1": 87, "a_1_0_0": 87, "a_1_0_1": 87, "a_1_1_0": 87, "a_1_1_1": 87, "a_1_2_0": 87, "a_1_2_1": 87, "rot_axis1": 87, "rot_axis2": 87, "rot_axis3": 87, "a2idx": 87, "normalform": [88, 184], "hermite_normal_form": [88, 184, 190], "check_rank": [88, 184], "hnf": [88, 184, 190], "explos": [88, 184], "believ": [88, 91, 184], "dmdomainerror": [88, 184], "dmshapeerror": [88, 184], "r598": 88, "cohen": [88, 184, 189, 190], "mutablesparsematrix": 89, "_doktocsr": 90, "csr": 90, "ja": 90, "ia": 90, "_csrtodok": 90, "dok": 90, "1x1": [90, 215], "vert": [90, 176, 179, 248], "saw": [90, 185, 270], "dynam": [91, 97, 98, 100, 104, 106, 108, 109, 112, 115, 122, 123, 124, 125, 126, 127, 128, 129, 170, 171, 173, 174, 178, 179, 230, 231, 240], "eratosthen": 91, "_reset": [91, 191], "_list": 91, "extend_to_no": 91, "mobiusrang": 91, "primerang": 91, "10th": 91, "totientrang": 91, "1e11": 91, "50000": 91, "primal": [91, 182], "1299709": 91, "r599": 91, "prime_number_theorem": 91, "table_of_": 91, "cf": [91, 188], "28x": 91, "2c_x_": 91, "2f_log_x": 91, "2c_and_li": 91, "r600": 91, "approximations_for_the_nth_prime_numb": 91, "r601": 91, "27_number": 91, "arr1": 91, "arr2": 91, "prevprim": 91, "9th": 91, "nextprim": 91, "occupi": [91, 161, 221], "conjectur": [91, 188], "twin": 91, "bertrand": 91, "brocard": 91, "primori": 91, "r602": 91, "r603": 91, "utm": 91, "postul": 91, "r604": 91, "s_postul": 91, "primefactor": 91, "argu": 91, "cycle_length": 91, "nmax": 91, "brent": [91, 230], "floyd": 91, "cycle_detect": 91, "17737": 91, "20000": 91, "compositepi": 91, "831": 91, "smoothness_p": 91, "sm": [91, 113, 128, 182], "psm": 91, "govern": 91, "10431": 91, "annot": [91, 181, 195], "21477639576571": 91, "4410317": 91, "1787": 91, "4869863": 91, "2434931": 91, "multiplicity_in_factori": 91, "nfac": 91, "52818775009509558395695966887": 91, "is2pow": 91, "pollard_rho": 91, "1234": [91, 208], "max_step": 91, "pollard": [91, 211], "leader": 91, "16843009": 91, "32767": 91, "4i": 91, "3i": 91, "2489": 91, "1482": 91, "285": [91, 213], "leadup": 91, "r605": 91, "crandal": 91, "carl": [91, 230], "pomer": [91, 230], "229": 91, "231": [91, 171], "pollard_pm1": 91, "ilcm": 91, "likelihood": 91, "1009": 91, "igcd": [91, 183], "am": [91, 166, 195], "255": 91, "crack": 91, "617": 91, "1786": 91, "worst": [91, 191, 211], "scenario": [91, 215], "divisisor": 91, "realist": 91, "r606": 91, "236": 91, "r607": 91, "washington": 91, "2007": [91, 127, 230], "spring": [91, 105, 108, 113, 117], "ent": 91, "node81": 91, "r608": 91, "toronto": 91, "yuvalf": 91, "use_ecm": 91, "65537": [91, 194], "1407633717262338957430697921446883": 91, "991": 91, "202916782076162456022877024859": 91, "4200": 91, "1764": 91, "toggl": [91, 181], "12345678910111213141516": 91, "2507191691": 91, "1231026625769": 91, "factorrat": 91, "rat": 91, "987": 91, "10000000001": 91, "99009901": 91, "divisor_count": 91, "tim": [91, 233], "stackoverflow": [91, 233, 236], "1010381": 91, "proper_divisor": 91, "proper_divisor_count": 91, "udivisor": 91, "udivisor_count": 91, "r609": 91, "unitary_divisor": 91, "r610": 91, "unitarydivisor": 91, "r611": 91, "unitarydivisorfunct": 91, "antidivisor": 91, "r612": 91, "margin": [91, 100, 181, 215], "antidivisor_count": 91, "a066272": 91, "a066272a": 91, "r613": 91, "r614": 91, "27s_totient_funct": 91, "r615": 91, "totientfunct": 91, "r616": 91, "carmichael_funct": 91, "r617": 91, "carmichaelfunct": 91, "divisor_sigma": 91, "sigma_k": 91, "m_i": [91, 188], "m_ik": 91, "r618": 91, "divisor_funct": 91, "udivisor_sigma": 91, "47450": 91, "152": 91, "r619": 91, "core_t": 91, "core_2": 91, "squarefre": [91, 190], "cubefre": 91, "9424": 91, "1178": 91, "379238": 91, "square_factor": 91, "r620": 91, "free_integ": 91, "squarefree_cor": 91, "primenu": 91, "r621": 91, "primeomega": 91, "r622": 91, "mersenne_prime_expon": 91, "mersenn": 91, "4423": 91, "r623": 91, "perfectnumb": 91, "r624": 91, "perfect_numb": 91, "is_mersenne_prim": 91, "r625": 91, "mersenneprim": 91, "abund": 91, "is_abund": 91, "r626": 91, "abundantnumb": 91, "is_defici": 91, "r627": 91, "deficientnumb": 91, "is_amic": 91, "amic": 91, "220": [91, 191], "r628": 91, "amicable_numb": 91, "symmetric_residu": 91, "v_i": [91, 190, 213], "65": [91, 100, 188, 215], "639985": [91, 188], "912285": [91, 188], "954": 91, "gf_crt": [91, 188], "solve_congru": [91, 188], "programm": [91, 195], "galoistool": [91, 188], "crt1": 91, "4536": 91, "252": 91, "756": 91, "crt2": 91, "remainder_modulus_pair": 91, "mi": [91, 195], "k1": [91, 128, 159, 185, 186, 188], "k2": [91, 128, 185], "c_kn": 91, "binomial_coefficients_list": 91, "multinomial_coeffici": 91, "k_m": 91, "k_i": [91, 188, 205], "yann": 91, "laigl": 91, "chapui": 91, "permiss": [91, 180], "multinomial_coefficients_iter": 91, "_tupl": 91, "m53": 91, "partitions_": 91, "npartit": 91, "hardi": 91, "rademach": [91, 215], "r629": 91, "1958": [91, 180], "partitionfunctionp": 91, "is_euler_pseudoprim": 91, "pseudoprim": 91, "r630": 91, "euler_pseudoprim": 91, "prep": [91, 211, 212], "r631": 91, "mersenneforum": 91, "showpost": 91, "110896": 91, "mr": 91, "miller": 91, "rabin": 91, "wit": 91, "1373651": 91, "479001599": 91, "r632": 91, "135": 91, "138": 91, "93rabin_primality_test": 91, "deterministic_vari": 91, "is_lucas_prp": 91, "selfridg": 91, "377": 91, "1159": 91, "1829": 91, "3827": 91, "5459": 91, "5777": 91, "9071": 91, "9179": 91, "bailli": 91, "wagstaff": 91, "1980": [91, 233], "mpq": [91, 185, 187], "lucaspseudoprim": 91, "a217120": 91, "lucas_pseudoprim": 91, "is_strong_lucas_prp": 91, "bpsw": 91, "10877": 91, "16109": 91, "18971": 91, "a217255": 91, "psw_primality_test": 91, "is_extra_strong_lucas_prp": 91, "grantham": 91, "mo": [91, 128, 195], "jone": [91, 133], "preprint": 91, "a217719": 91, "perl": 91, "counterexampl": [91, 270], "989": 91, "3239": 91, "jon": 91, "mcom": 91, "234": 91, "01197": 91, "bisect": [91, 191, 213], "1e3": 91, "1e23": [91, 236], "near_int": 91, "strong_pseudoprim": 91, "is_gaussian_prim": 91, "r633": 91, "gaussian_prim": 91, "residue_ntheori": 91, "n_order": 91, "cong": [91, 188], "primitive_root": [91, 190], "r634": 91, "stein": [91, 211], "r635": 91, "hackman": 91, "2009": [91, 180], "sqrt_mod": 91, "sqrt_mod_it": 91, "quadratic_residu": 91, "nthroot_mod": 91, "109": [91, 189, 208], "is_nthpow_residu": 91, "r636": 91, "is_quad_residu": 91, "legendre_symbol": 91, "genfrac": 91, "nonresidu": 91, "alpha_2": [91, 190], "alpha_k": 91, "discrete_log": 91, "prime_ord": 91, "giant": [91, 214], "pohlig": 91, "r637": 91, "discretelogarithm": 91, "r638": 91, "cryptographi": [91, 250, 257], "menez": 91, "vanston": 91, "continued_fract": 91, "continued_fraction_period": 91, "continued_fraction_reduc": 91, "continued_fraction_converg": 91, "continued_fraction_iter": 91, "106": 91, "103993": 91, "33102": 91, "104348": 91, "33215": 91, "208341": 91, "66317": 91, "292": 91, "r639": 91, "discrimin": [91, 186, 188, 190, 191], "r640": 91, "periodic_continued_fract": 91, "r641": 91, "rosen": 91, "379": [91, 191], "381": 91, "januari": 91, "1992": [91, 189, 213], "233": [91, 189, 211], "718281835": 91, "287": 91, "count_digit": 91, "1111339": 91, "0xfa": 91, "c77": 91, "is_palindrom": [91, 233], "palindrom": 91, "0o121": 91, "oct": 91, "0o171": 91, "fermion": [91, 161], "r642": 91, "b6bius_funct": 91, "r643": 91, "thoma": [91, 127], "koshi": 91, "egyptian_fract": 91, "greedi": [91, 188, 204, 207], "egyptian": 91, "r644": 91, "jewett": 91, "takenouchi": 91, "3192": 91, "1118": 91, "2580": 91, "sylvest": [91, 188], "r645": 91, "seldom": 91, "blow": 91, "doubli": 91, "exhibit": [91, 180, 190, 204], "singli": 91, "tendenc": 91, "r646": 91, "1921": 91, "golumb": 91, "1962": 91, "propos": 91, "bleicher": 91, "1972": 91, "r647": 91, "420": [91, 208], "140": 91, "574": 91, "2788": 91, "6460": 91, "11590": 91, "33062": 91, "113820": 91, "greedy_algorithm_for_egyptian_fract": 91, "ic": [91, 211], "uci": 91, "eppstein": 91, "numth": 91, "egypt": 91, "ami": 91, "ektf": 91, "hu": 91, "finalpdf": 91, "ami_42_from129to134": 91, "bbp_pi": 91, "pi_hex_digit": 91, "hex": 91, "3243f6a8885a30": 91, "324": [91, 189], "r648": 91, "numberworld": 91, "subexponenti": 91, "comfort": [91, 92], "15154262241479": 91, "15423094826093": 91, "799333555511111": 91, "809709509409109": 91, "888888877777777": 91, "914148152112161": 91, "factoris": [91, 185, 186, 211], "max_curv": 91, "lenstra": 91, "repeatedli": [91, 101, 227], "ecm_one_factor": 91, "pseudorandom": [91, 233], "25645121643901801": 91, "5394769": 91, "4753701529": 91, "9804659461513846513": 91, "4641991": 91, "2112166839943": 91, "7060005655815754299976961394452809": 91, "6988699669998001": 91, "1010203040506070809": 91, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 91, "2709077133180915240135586837960864768806330782747": 91, "248": 91, "prime_bound": 91, "error_term": 91, "siq": 91, "modn": 91, "mulipl": 91, "r649": 91, "semanticscholar": 91, "5c52": 91, "8a975c1405bd35c65993abf5a4edb667c1db": 91, "r650": 91, "rieselprim": 91, "ziki": 91, "initializing_quadratic_siev": 91, "5915587277": 91, "3267000013": 91, "facilit": [92, 122, 132, 177, 226], "ship": 92, "000507214304613640": 92, "microsecond": 92, "000507214304614": 92, "hundr": [92, 264], "nanosecond": 92, "84147098": [92, 234, 259], "84119981": 92, "84092844": 92, "05426074": 92, "05433146": 92, "05440211": 92, "confer": [92, 268], "nano": 92, "manufactur": 92, "asnumpi": 92, "compliat": 92, "jnp": 92, "asarrai": 92, "84147096": 92, "8411998": 92, "05426079": 92, "05433151": 92, "autowrap": [92, 220, 228, 232, 252, 258], "implemented_funct": [92, 227, 234], "effort": [92, 186, 188], "50u": 92, "1u": 92, "10n": 92, "sympy_pars": 93, "local_dict": 93, "lambda_not": 93, "repeated_decim": 93, "auto_numb": 93, "factorial_not": 93, "global_dict": 93, "standard_transform": 93, "implicit_multiplication_appl": 93, "implicit_appl": 93, "implicit_multipl": 93, "convert_equals_sign": 93, "function_exponenti": 93, "stringify_expr": 93, "eval_expr": 93, "name_dict": 93, "fullform": 93, "setdelai": 93, "datatyp": [93, 186, 195, 228], "split_symbol": 93, "split_symbols_custom": 93, "_token_splitt": 93, "can_split": 93, "unsplitt": 93, "10sin": 93, "3xyz": 93, "2111": 93, "latex2sympi": 93, "typograph": 93, "parse_latex": 93, "stricter": 93, "liber": [93, 104, 264], "618": 93, "latexparsingerror": 93, "sym_expr": 93, "sympyexpress": 93, "source_cod": 93, "return_expr": 93, "definiton": 93, "src2": 93, "convert_to_expr": 93, "convert_to_c": 93, "src3": 93, "convert_to_python": 93, "src_code": 93, "filenam": [93, 195, 226, 227, 228, 236], "convert_to_fortran": 93, "pip3": 93, "python2": 93, "channel": 93, "continuum_mechan": [94, 95], "elastic_modulu": 94, "second_mo": 94, "base_char": 94, "withstand": [94, 95], "character": [94, 95, 176, 179, 202, 215, 221, 248], "profil": 94, "shear": [94, 95], "downward": [94, 95, 190], "apply_load": [94, 95], "bc_deflect": [94, 95], "boundary_condit": 94, "solve_for_reaction_load": [94, 95], "shear_forc": [94, 95], "bending_mo": [94, 95], "applied_load": 94, "nm": [94, 95, 159, 216], "pointload": [94, 95], "ramp": [94, 95, 99], "parabol": 94, "apply_support": 94, "loc": 94, "freedom": [94, 107, 108, 114, 116, 122, 215], "roller": [94, 95], "upward": [94, 190], "r_10": 94, "r_30": 94, "4000": [94, 95], "bc_slope": [94, 95], "cross_sect": 94, "elast": [94, 95], "12000": 94, "draw": [94, 141, 195, 215, 257], "pictori": 94, "positv": 94, "ild_moment": 94, "ild_react": 94, "reaction": [94, 95], "ild_shear": 94, "axial": [94, 130], "hing": [94, 95], "cantilev": [94, 95], "inertia": [94, 95, 103, 104, 105, 112, 113, 115, 117, 119, 120, 121, 122, 128, 171, 177, 178, 179, 190], "666666666666667": [94, 95], "max_bmoment": 94, "max_deflect": 94, "max_shear_forc": 94, "plot_bending_mo": [94, 95], "gpa": 94, "400": [94, 181, 191], "13750": 94, "31250": 94, "plot_deflect": [94, 95], "00138541666666667": 94, "86458333333333e": 94, "04166666666667e": 94, "20833333333333e": 94, "51041666666667e": 94, "plot_ild_mo": 94, "solve_for_ild_mo": 94, "1kn": 94, "r_0": 94, "r_8": 94, "solve_for_ild_react": 94, "plot_ild_react": 94, "5kn": 94, "r_7": 94, "plotgrid": [94, 257], "plot_ild_shear": 94, "solve_for_ild_shear": 94, "plot_loading_result": [94, 95], "subplot": [94, 181], "plot_shear_forc": [94, 95], "plot_shear_stress": 94, "stress": 94, "6875": 94, "2500": 94, "15625": [94, 168], "plot_slop": [94, 95], "59375e": 94, "125e": 94, "08333333333333e": 94, "0001953125": 94, "point_cflexur": 94, "overhang": [94, 95], "10kn": 94, "20kn": [94, 95], "3kn": 94, "reaction_load": [94, 95], "remove_load": [94, 105], "shear_stress": 94, "beam3d": 94, "shear_modulu": 94, "apply_moment_load": 94, "solve_slope_deflect": 94, "r651": 94, "home": [94, 190, 208, 215, 226], "aau": 94, "jc": 94, "femtesemest": 94, "beams3d": 94, "axial_forc": 94, "axial_stress": 94, "load_vector": 94, "max_bending_mo": 94, "16000": 94, "495": 94, "10793": 94, "6400": 94, "301": [94, 205, 208], "560": 94, "2400": 94, "moment_load_vector": 94, "40000": 94, "4013": 94, "90300": 94, "1520": 94, "903": 94, "1600": [94, 95], "172": 94, "polar_mo": 94, "i1": [94, 101, 113, 128, 221], "1350": 94, "torsional_mo": 94, "torsion": 94, "_________________": 95, "________________": [95, 211], "_______________v": 95, "_______________": 95, "equilibrium": [95, 115, 125], "20e9": 95, "25e": 95, "______________________________________________": 95, "_______________________________________________": 95, "r\u2081": 95, "r\u2082": 95, "______________________": 95, "________________________": 95, "8kn": 95, "_____________": 95, "1m": 95, "3m": 95, "2m": 95, "5m": [95, 230], "679": 95, "12kn": 95, "________________________________": 95, "____________________________________________________": 95, "o____________________________________________________": 95, "4m": 95, "concentr": [95, 215], "_____________________________________": 95, "m\u2081": 95, "m\u2082": 95, "connector": 95, "_____________________": 95, "_______________________": 95, "_____________________o_______________________": 95, "oooo": [95, 233], "r\u2083": 95, "_______i_______": 95, "flexur": 95, "rigid": [95, 105, 108, 110, 113, 115, 117, 122, 128, 171, 178], "____________": 95, "____________o________________________": 95, "a\u2081": [95, 270], "a\u2082": [95, 270], "six": [95, 195, 208, 214, 215], "lti": [97, 98, 99], "transferfunct": [97, 98, 100], "interconnect": [97, 100], "mimo": [97, 100], "transferfunctionmatrix": [97, 100], "mimoseri": [97, 100], "mimoparallel": [97, 100], "mimofeedback": [97, 100], "control_plot": 98, "pole_zero_plot": 98, "pole_color": 98, "blue": [98, 181, 195], "pole_markers": 98, "zero_color": 98, "orang": 98, "zero_markers": 98, "show_ax": 98, "marker": [98, 181], "sisolineartimeinvari": [98, 100], "markers": 98, "tf1": [98, 100], "pole_zero_numerical_data": 98, "r652": 98, "93zero_plot": 98, "siso": [98, 100], "8660254j": 98, "bode_plot": 98, "initial_exp": 98, "final_exp": 98, "freq_unit": 98, "phase_unit": 98, "semilog": 98, "hz": 98, "hertz": 98, "bode_magnitude_plot": 98, "bode_phase_plot": 98, "bode_magnitude_numerical_data": 98, "5148378120533502e": 98, "68437": 98, "36188804005": 98, "020599914256786": 98, "0205999155219505": 98, "4117304087953": 98, "00000000260573": 98, "bode_phase_numerical_data": 98, "4472354033813751e": 98, "035581932165858e": 98, "47577": 98, "3248186011": 98, "67884": 98, "09326036123": 98, "5000000000291665e": 98, "6180885085e": 98, "08895483066e": 98, "1415085799262523": 98, "14155265358979": 98, "impulse_response_plot": 98, "lower_limit": [98, 260], "upper_limit": [98, 260], "step_response_plot": 98, "ramp_response_plot": 98, "r653": 98, "impulse_response_numerical_data": 98, "nb_of_point": [98, 181], "lineover1drangeseri": [98, 181], "amplitud": [98, 135], "06616480200395854": 98, "854500743565858": 98, "9999999799999999": 98, "7042848373025861": 98, "170748906965121e": 98, "1901263495547205e": 98, "r654": 98, "step_response_numerical_data": 98, "025413462339411542": 98, "0484508722725343": 98, "670250533855183": 98, "844291913708725": 98, "023844582399907256": 98, "042894276802320226": 98, "828770759094287e": 98, "456457160755703e": 98, "mx": [98, 141, 202], "r655": 98, "ramp_funct": 98, "ramp_response_numerical_data": 98, "12166980856813935": 98, "861246379582118": 98, "4504508011325967e": 98, "006046440489058766": 98, "12499999999568202": 98, "12499999999661349": 98, "bode": 99, "impuls": [99, 100], "den": [100, 186, 207, 211], "superscript": [100, 195], "tf2": 100, "tf3": 100, "tf4": 100, "tf5": 100, "tf6": 100, "500000000000000": 100, "tf7": 100, "tf8": 100, "tf9": 100, "tf10": 100, "tf11": 100, "tf12": 100, "r656": 100, "transfer_funct": 100, "r657": 100, "dc_gain": 100, "dc": [100, 124], "from_rational_express": 100, "zerodivisionerror": [100, 186, 224, 234], "complexinfin": 100, "tf": [100, 234], "is_biprop": 100, "is_prop": 100, "is_stabl": 100, "is_strictly_prop": 100, "sys1": 100, "sys2": 100, "feedforward": 100, "fed": 100, "sit": [100, 179], "plant": 100, "compulsori": 100, "tf_1": 100, "tf_2": 100, "tf_3": 100, "tf_4": 100, "tfm_1": 100, "num_input": 100, "num_output": 100, "tfm_2": 100, "tf_5": 100, "tf_6": 100, "tf_7": 100, "tf_8": 100, "tfm_3": 100, "tfm_4": 100, "tfm_5": 100, "tfm_6": 100, "tf_9": 100, "tf_10": 100, "tfm_7": 100, "tfm_8": 100, "tfm_9": 100, "tfm_10": 100, "tfm_11": 100, "tfm_12": 100, "elem_pol": 100, "elem_zero": 100, "from_matrix": [100, 184], "m_tf": 100, "tfm": 100, "tfm1": 100, "tfm2": 100, "g4": 100, "tfm3": 100, "mimolineartimeinvari": 100, "mat_a": 100, "mat_b": 100, "mat_c": 100, "tfm_a": 100, "tfm_b": 100, "tfm_c": 100, "expr_1": 100, "expr_2": 100, "expr_3": 100, "expr_4": 100, "plant_mat": 100, "controller_mat": 100, "neg_feedback": 100, "hep": 101, "gamma_matric": [101, 103], "gammamatrix": 101, "lorentzindex": 101, "gammamatrixhead": 101, "extract_type_ten": 101, "gamma_trac": 101, "i0": [101, 133, 221], "i2": [101, 113, 128, 221], "i4": [101, 221], "i5": 101, "ps": 101, "qs": [101, 108, 255], "kahane_simplifi": 101, "spinor": 101, "behind": [101, 113, 125, 165, 184, 204, 207, 211, 214, 256, 262], "rearrang": [101, 108, 123, 124, 145, 211], "ta": [101, 204], "tb": [101, 204, 226], "tc": [101, 186, 191, 204], "joseph": [101, 189], "kahan": 101, "octob": 101, "1968": 101, "simplify_gpgp": 101, "e_nl": [102, 162], "hartre": 102, "helium": 102, "2209": 102, "e_nl_dirac": 102, "spin_up": 102, "035999037000": 102, "relativist": 102, "angular": [102, 105, 107, 110, 115, 116, 117, 119, 121, 122, 125, 128, 130, 134, 135, 137, 140, 158, 162, 171, 174, 180], "momentum": [102, 110, 113, 122, 128, 139, 140, 158, 162, 180, 221], "light": [102, 133, 166, 175, 182], "035999037": 102, "1012": 102, "3627": 102, "500006656595360": 102, "125002080189006": 102, "125000416028342": 102, "0555562951740285": 102, "0555558020932949": 102, "0555556377366884": 102, "psi_nlm": 102, "wave": [102, 131, 132, 133, 198, 256], "psi_": [102, 137], "nlm": 102, "radial": [102, 116, 162], "nl": [102, 162], "magnet": [102, 132, 176, 248], "azimuth": 102, "wf": [102, 115], "abs_sqrd": 102, "silver": 102, "94": [102, 189], "141": 102, "4418": 102, "mdft": 103, "mgamma": 103, "gamma_5": 103, "gamma_0": 103, "gamma_3": 103, "r658": 103, "msigma": 103, "pauli": [103, 256], "sigma_i": [103, 215], "r659": 103, "pauli_matric": [103, 136], "pat_matrix": 103, "unansw": [104, 170], "kane": [104, 113, 118, 122, 127, 128, 170, 171, 240], "q1d": [104, 113, 115, 116, 119, 120, 121, 123, 124, 125, 126, 170, 175, 179], "q2d": [104, 113, 115, 116, 119, 120, 121, 123, 124, 174, 175], "q3d": [104, 119, 120, 121, 123], "kinemat": [104, 107, 108, 112, 113, 115, 116, 117, 119, 121, 123, 125, 126, 128, 129, 171, 177, 179], "dyad": [104, 128, 243], "mprint": [104, 119, 120, 121, 122, 123], "mpprint": [104, 122, 123], "mlatex": [104, 122], "sub_dict": [104, 106, 115], "msub": [104, 122, 125], "cleaner": [104, 128, 211], "gsl": [104, 228], "lsoda": 104, "penalti": 104, "masscent": [105, 107, 110, 126, 128], "central_inertia": [105, 110, 117], "possess": [105, 126, 221], "name_of_bodi": 105, "ixx": [105, 110, 171], "body_inertia": 105, "torqu": [105, 108, 112, 117, 123, 124, 128], "ang_vel_in": [105, 107, 113, 119, 120, 128, 171, 178], "set_ang_vel": [105, 110, 113, 115, 119, 120, 125, 126, 128, 129, 171, 173, 174, 178], "apply_forc": [105, 117], "reaction_bodi": [105, 117], "reaction_point": 105, "oppposit": 105, "desri": 105, "force1": 105, "b_masscent": 105, "b_frame": 105, "newtonion": 105, "spring_forc": 105, "n_frame": 105, "apply_torqu": [105, 117], "torquess": 105, "torque1": 105, "b1_frame": 105, "b2_frame": 105, "clear_load": 105, "dcm": [105, 107, 113, 115, 128, 171, 178, 179, 240], "orient_axi": [105, 171, 173], "kinetic_energi": [105, 122, 126, 128], "kinet": [105, 108, 110, 122], "inerti": [105, 108, 110, 115, 116, 119, 123, 124, 126, 128], "set_vel": [105, 108, 110, 113, 115, 116, 119, 120, 121, 123, 124, 125, 126, 128, 129, 174, 178], "b_ixx": 105, "b_mass": 105, "masscenter_vel": [105, 107], "smart": [106, 125, 202, 208, 211], "sub1": [106, 195], "sub2": [106, 195], "reference_fram": [106, 171], "child": [107, 185, 230], "parent_joint_po": [107, 117], "child_joint_po": [107, 117], "parent_axi": [107, 117], "child_axi": [107, 117], "_generate_coordin": 107, "_generate_spe": 107, "_orient_fram": 107, "_set_angular_veloc": 107, "_set_linar_veloc": 107, "rotation_axi": 107, "parent_point": 107, "child_point": 107, "kde": [107, 116, 125], "revolut": 107, "\u03c9": 107, "pc": [107, 192], "pc_p_joint": 107, "pc_c_joint": 107, "p_frame": 107, "c_frame": 107, "theta_pc": 107, "omega_pc": 107, "pos_from": [107, 113, 115, 116, 128, 174, 178], "pendulum": [107, 112, 114, 117, 122, 125, 129, 178], "upper_bob": 107, "lower_bob": 107, "ceiling_joint": 107, "pendulum_joint": 107, "theta_p1": 107, "theta_p2": 107, "u_fram": 107, "l_frame": 107, "omega_p1": 107, "omega_p2": 107, "vel": [107, 113, 115, 116, 120, 128, 174, 178, 246], "prismat": 107, "slide": 107, "x_pc": 107, "v_pc": 107, "wall": [107, 117], "part1": 107, "part2": 107, "j1": [107, 117, 140, 158], "j2": [107, 117, 140, 158], "x_j1": 107, "w_frame": 107, "x_j2": 107, "p1_frame": 107, "v_j1": 107, "kanesmethod": [108, 113, 115, 116, 117, 119, 120, 123, 125, 128], "q_ind": [108, 109, 113, 115, 116, 119, 120, 123, 125, 128], "u_ind": [108, 109, 113, 115, 116, 119, 120, 123, 125, 128], "kd_eq": [108, 113, 115, 116, 119, 120, 125, 128], "q_depend": [108, 115, 116, 123, 128], "configuration_constraint": [108, 115, 116, 123], "u_depend": [108, 115, 116, 123, 128], "velocity_constraint": [108, 115, 116, 123, 128], "acceleration_constraint": 108, "u_auxiliari": [108, 120, 123, 128], "forcelist": [108, 113, 116, 119, 120, 124, 125, 128], "levinson": [108, 127, 171, 240], "udot": [108, 115], "damper": [108, 113, 117], "qd": [108, 115, 123, 174], "ud": [108, 123], "kd": [108, 115, 119, 120, 123], "fl": [108, 115, 123, 124, 128, 189], "bl": [108, 115, 123, 128], "frstar": [108, 113, 115, 116, 119, 120, 123, 125, 128], "kanes_equ": [108, 113, 115, 116, 119, 120, 123, 125, 128], "mass_matrix": [108, 112, 115, 119, 120, 123, 124, 129], "a_and_b": [108, 109, 116], "mass_matrix_ful": [108, 113, 117, 123, 124], "forcing_ful": [108, 113, 117, 123, 124], "auxiliary_eq": [108, 120], "constrain": [108, 116, 124, 128], "kindiffdict": [108, 115, 119, 120, 123, 128], "new_method": [108, 116], "intens": [108, 109, 130, 133], "perm_mat": [108, 109, 125], "op_point": [108, 109, 116, 125], "beforehand": [108, 228], "inv_method": 108, "to_linear": [108, 125], "recalcul": [108, 191], "hol_coneq": [108, 116, 124], "nonhol_coneq": [108, 116, 124], "nonconserv": 108, "form_lagranges_equ": [108, 116, 121, 124, 125], "qdot": [108, 115, 174], "qdoubledot": 108, "lam": [108, 109, 129], "lagranges_equ": 108, "qd_ind": [108, 125], "q_dep": [108, 123, 125], "qd_dep": [108, 125], "solve_multipli": [108, 116], "sol_typ": 108, "array_lik": 108, "f_3": [109, 112, 129, 211], "f_c": [109, 116], "f_v": [109, 116], "f_a": 109, "q_d": 109, "u_i": [109, 125, 178, 188], "u_d": [109, 128], "q_op": [109, 116], "u_op": [109, 116], "qd_op": 109, "ud_op": [109, 116], "spatial": [110, 135, 171, 195], "init_vprint": [110, 111, 126, 129, 171, 173, 174, 177, 178, 179], "locatenew": [110, 115, 116, 119, 120, 121, 125, 126, 128, 129, 172, 174, 176, 178], "parallel_axi": 110, "inertia_tupl": 110, "mv": 110, "iyi": [110, 171], "izz": [110, 171], "ixi": [110, 171], "iyz": [110, 171], "izx": 110, "yy": [110, 179, 211], "yz": [110, 179, 181], "zx": [110, 179], "pos_vec": 110, "px": [110, 151, 156, 221], "body1": 110, "body2": 110, "body3": 110, "h2": 110, "multibodi": [110, 113, 122, 127, 128, 129, 178], "vprint": [111, 170, 174, 177, 179], "vpprint": [111, 170, 177, 179], "vlatex": [111, 170, 171, 177, 179], "coord_stat": 112, "right_hand_sid": 112, "coordinate_deriv": [112, 129], "alg_con": [112, 129], "output_eqn": 112, "coord_idx": [112, 129], "speed_idx": [112, 129], "m_3": [112, 129, 140, 180], "exogen": [112, 129], "ref_fram": 112, "graviti": [112, 113, 116, 117, 119, 121, 128, 176, 248], "theta_dot": 112, "kin_explicit_rh": [112, 129], "dyn_implicit_mat": [112, 129], "dyn_implicit_rh": [112, 129], "symsystem": 112, "dae": [112, 129], "adjust": [112, 198, 202], "comb_implicit_mat": [112, 129], "comb_implicit_rh": [112, 129], "kinema": 112, "comb_explicit_rh": [112, 129], "compute_explicit_form": 112, "awhil": 112, "constant_symbol": 112, "dynamic_symbol": 112, "motiongenesi": [113, 128], "double_pendulum": 113, "motionvari": [113, 128], "newtonian": [113, 128], "simprot": [113, 128], "n_a": 113, "n_b": 113, "w_a_n": 113, "w_b_n": [113, 128], "p_o_p": 113, "p_p_r": 113, "v_o_n": [113, 128], "v2pt": [113, 128], "v_p_n": 113, "v_r_n": 113, "force_p": 113, "force_r": 113, "tfinal": 113, "integstp": 113, "some_filenam": 113, "parse_autolev": 113, "sympy_cod": 113, "include_numer": 113, "include_pydi": 113, "pydi": [113, 128, 171], "u1d": [113, 115, 116, 119, 120, 123], "u2d": [113, 115, 116, 119, 120, 123], "frame_n": 113, "frame_a": 113, "frame_b": 113, "point_o": 113, "particle_p": 113, "p_pt": 113, "particle_r": 113, "r_pt": 113, "set_po": [113, 174, 178], "v2pt_theori": [113, 115, 119, 120, 121, 125, 126, 128, 129, 174, 178], "initial_condit": [113, 128], "overwritten": 113, "e2row": 113, "eigvec": [113, 128], "eigenvec": 113, "deg2rad": 113, "0174533": 113, "wo": 113, "coef": [113, 128], "u3": [113, 115, 117, 119, 120, 123, 128, 174, 178], "strai": 113, "reassign": 113, "inher": [113, 234, 262], "rhs_x": 113, "i_b_bo": 113, "body_b": 113, "body_b_f": 113, "b_cm": 113, "b_f": 113, "scene": [113, 207, 262], "i_c_d": 113, "i_p_q": 113, "i_b_o": 113, "e3": [113, 202, 211], "i_p_o": 113, "e4": [113, 202], "p_so_o": 113, "nicheck": 113, "plug": [113, 166], "hurdl": 113, "gitlab": 113, "repo": 113, "ch4": 113, "ch5": 113, "ch6": 113, "cst": 113, "grammar": [113, 207], "roll": [114, 115, 122, 178, 215], "disc": [114, 122, 178], "bicycl": [114, 122, 127], "nonminim": [114, 122, 125], "meijaard2007": [115, 127], "steer": [115, 127], "purposefulli": 115, "mechanics_print": [115, 119, 120, 121, 122, 123, 124], "yaw": 115, "ang": 115, "rear": 115, "wheel": 115, "pitch": 115, "q4": [115, 123, 173], "q5": [115, 173], "q4d": [115, 123], "q5d": 115, "u4": [115, 120, 123, 128], "u5": [115, 120], "u6": [115, 120], "u3d": [115, 119, 120], "u4d": 115, "u5d": 115, "u6d": 115, "explanatori": 115, "wfrad": 115, "wrrad": 115, "htangl": 115, "forkoffset": 115, "forklength": 115, "framelength": 115, "forkcg1": 115, "forkcg3": 115, "framecg1": 115, "framecg3": 115, "iwr11": 115, "iwr22": 115, "iwf11": 115, "iwf22": 115, "iframe11": 115, "iframe22": 115, "iframe33": 115, "iframe31": 115, "ifork11": 115, "ifork22": 115, "ifork33": 115, "ifork31": 115, "mframe": 115, "mfork": 115, "mwf": 115, "mwr": 115, "wr": 115, "tempfram": 115, "tempfork": 115, "orientnew": [115, 116, 119, 120, 121, 125, 129, 171, 173, 174, 176, 178, 179], "wr_cont": 115, "wr_mc": 115, "frame_mc": 115, "fork_mc": 115, "wf_mc": 115, "wf_cont": 115, "flip": [115, 146, 155, 215], "frame_i": 115, "fork_i": 115, "wr_i": 115, "wf_i": 115, "bodyfram": 115, "bodyfork": 115, "bodywr": 115, "bodywf": 115, "nonholonom": 115, "closer": [115, 214, 265], "slip": [115, 118, 120, 178], "replic": 115, "conlist_spe": 115, "conlist_coord": 115, "gravit": [115, 119, 164, 176, 248], "aforement": [115, 176, 208, 246], "paperradrear": 115, "paperradfront": 115, "hta": 115, "trailpap": 115, "08": 115, "rake": 115, "paperwb": 115, "02": 115, "paperframecgx": 115, "paperframecgz": 115, "paperforkcgx": 115, "paperforkcgz": 115, "framecgnorm": 115, "framecgpar": 115, "tempa": 115, "tempb": 115, "tempc": 115, "paperforkl": 115, "forkcgnorm": 115, "forkcgpar": 115, "upright": 115, "val_dict": 115, "0603": 115, "1405": 115, "05892": 115, "00708": 115, "00756": 115, "kdd": [115, 119, 120], "centripet": 115, "corioli": 115, "forcing_lin": 115, "mm_full": 115, "_k_kqdot": 115, "xdot": 115, "lean": [115, 119, 121], "amat": 115, "eom": [116, 117, 125], "q_1": [116, 117, 125, 141, 178, 191, 208], "q_2": [116, 117, 125, 178], "u_1": [116, 117, 178, 190, 211], "u_2": [116, 117, 178, 190, 211], "theta1": 116, "dq_dict": 116, "presimplifi": 116, "inp_vec": [116, 125], "lagrangesmethod": [116, 121, 122, 124, 125], "lag": [116, 121, 125], "lm": [116, 124, 125, 188, 191], "lag_eq": [116, 125], "lam_op": 116, "jointsmethod": 117, "ngle": 117, "q_3": [117, 178], "u_3": [117, 178], "pinjoint": [117, 122], "prismaticjoint": [117, 122], "mb": [117, 128], "ibzz": 117, "joint": [117, 122], "compound_pend": 117, "simple_pend": 117, "slider": 117, "rev1": 117, "rev2": 117, "j3": [117, 140, 158], "form_eom": 117, "w_r_n_qd": [119, 120], "dmc": [119, 120, 121], "uv": [119, 120, 161], "bodyd": [119, 120, 121], "bodylist": [119, 120], "revisit": [120, 178], "kane1985": [120, 123, 126, 127], "thorough": [120, 125, 208], "simplifc": 120, "f3": [120, 181, 195], "necessit": 120, "factor_term": [120, 191, 204, 207], "simplify_auxiliary_eq": 120, "lrh": 121, "planet": 122, "robot": 122, "fascin": 122, "trajectori": 122, "challeng": 122, "came": [122, 265], "tackl": [122, 228], "organ": 122, "amen": 122, "arduou": 122, "momenta": [122, 140], "symbolicsystem": 122, "rough": [122, 166], "inertia_of_point_mass": 122, "linear_momentum": [122, 126, 128], "angular_momentum": [122, 126, 128], "kanemethod": 122, "find_dynamicsymbol": 122, "f_h": 123, "nh": 123, "ku": [123, 195], "k_d": 123, "f_d": [123, 124, 188], "dnh": 123, "f_r": [123, 125, 188], "speed_con": 123, "coord_con": 123, "u_dep": 123, "m_d": 124, "lam1": 124, "0_": 125, "blajer1994": [125, 127], "brought": [125, 215], "vel_p": 125, "a_op": 125, "b_op": 125, "m_op": 125, "a_lin": 125, "hasn": 125, "wikidyad": [126, 177], "wikidyadicproduct": [126, 177], "juxtaposit": [126, 170, 243], "hat": [126, 170, 171, 175, 176, 178, 179, 243, 244, 246, 248, 249], "otim": [126, 216], "l_p": 126, "likins1973": [126, 177], "l_b": 126, "requisit": 126, "t_p": 126, "t_b": 126, "t_t": 126, "virtu": [126, 128], "blajer": 127, "wojciech": 127, "werner": 127, "schiehlen": 127, "walter": 127, "schirm": 127, "kane1983": [127, 179], "likin": [127, 177], "david": [127, 191], "spacecraft": 127, "1983": [127, 230], "meijaard": 127, "jim": 127, "papadopoulo": 127, "ruina": 127, "schwab": 127, "royal": 127, "societi": [127, 208], "2084": 127, "1955": 127, "982": 127, "lectur": [128, 189, 215], "rigibodi": 128, "proprietari": 128, "k3": [128, 185], "k4": 128, "b11": 128, "b12": 128, "b21": 128, "b22": 128, "xd": 128, "xd2": 128, "y1d": 128, "y2d": 128, "tina": 128, "overwrit": [128, 170], "dt2": 128, "dy2": 128, "ty": 128, "linsolv": [128, 193, 209, 213, 271], "nonlinsolv": [128, 209, 213, 271], "nsolv": [128, 213], "rowmatrix": 128, "colmatrix": 128, "diagmat": 128, "eigval": 128, "row_matrix": 128, "col_matrix": 128, "ao": 128, "i12": 128, "i23": 128, "i31": 128, "bf": 128, "p_o_q": 128, "mag": 128, "unitvec": 128, "qo": 128, "p_p_q": 128, "partial_veloc": [128, 171, 174], "a_o_n": 128, "set_acc": [128, 174, 178], "qb": [128, 183], "qbd": 128, "alf_b_n": 128, "set_ang_acc": [128, 171], "ang_acc_in": [128, 171], "force_o": 128, "torque_a": 128, "qa": 128, "qad": 128, "a_b": 128, "v1pt": 128, "v1pt_theori": [128, 174, 178], "a1pt": 128, "a1pt_theori": [128, 174], "a2pt": 128, "a2pt_theori": [128, 174, 178], "angvel": 128, "force_vector": 128, "center_of_mass": 128, "kindiff": 128, "ke": 128, "configura": 128, "tion_constraint": 128, "pendent": 128, "velocity_con": 128, "traint": 128, "acceleration_": 128, "u_auxilia": 128, "ry": 128, "matlplotlib": 128, "stiff": 128, "damp": 128, "legend": [128, 181, 198], "introspect": 128, "rich": [128, 207], "media": [128, 134], "histori": 128, "esqu": 128, "cpython": 128, "pertin": [129, 182, 190], "alg_con_ful": 129, "symsystem1": 129, "symsystem2": 129, "symsystem3": 129, "raytransfermatrix": 130, "geometricrai": 130, "beamparamet": 130, "geometric_conj": 130, "gauss_conj": 130, "conjugate_gauss_beam": 130, "lens": 130, "gaussopt": 130, "wavelen": 130, "z_r": 130, "wavelength": [130, 135], "waist": 130, "rayleigh": [130, 215], "refract": [130, 132, 134, 135], "530e": 130, "88679245283019": 130, "92753330865999": 130, "w_0": [130, 208], "00100000000000000": 130, "freespac": 130, "fs": 130, "00101413072159615": 130, "00210803120913829": 130, "r660": 130, "complex_beam_paramet": 130, "r661": 130, "gaussian_beam": 130, "spread": [130, 195, 215, 230], "00053": 130, "goui": 130, "curvatur": [130, 134], "55998576005696": 130, "2809": 130, "peak": 130, "waist_approximation_limit": 130, "paraxi": [130, 134], "06e": 130, "curvedmirror": 130, "curvedrefract": 130, "flatmirror": 130, "flatrefract": 130, "2x1": 130, "thinlen": 130, "r662": 130, "ray_transfer_matrix_analysi": 130, "waist_in": 130, "waist_out": 130, "s_in": 130, "s_out": 130, "w_o": 130, "gaussian_conj": 130, "z_r_in": 130, "incid": [130, 134], "z_r_out": 130, "emerg": [130, 183], "geometric_conj_ab": 130, "geometric_conj_af": 130, "geometric_conj_bf": 130, "rayleigh2waist": 130, "waist2rayleigh": 130, "optic": [132, 133, 134, 135, 256], "permitt": 132, "permeabl": 132, "fermat": 132, "electr": [132, 134, 176, 246, 248], "electromagnet": [132, 176, 221, 248], "intrinsic_imped": 132, "149896229": [132, 135], "kilogram": [132, 164, 166, 168], "1250000": 132, "amper": 132, "refractive_index": 132, "299792458": [132, 135, 168], "r663": 132, "optical_medium": 132, "travel": [132, 135, 176, 246, 248], "stoke": [133, 247], "mueller": 133, "jones_vector": 133, "stokes_vector": 133, "half_wave_retard": 133, "polarizing_beam_splitt": 133, "jones_2_stok": 133, "\u2148": [133, 180, 194, 195, 214, 271], "\u03c7": 133, "\u03c8": 133, "i\u2080": 133, "plate": 133, "hwp": 133, "splitter": 133, "transmit": [133, 134], "pb": 133, "transmitted_port": 133, "reflected_port": 133, "transmitted_pow": 133, "reflected_pow": 133, "r664": 133, "jones_calculu": 133, "r665": 133, "mueller_calculu": 133, "r666": 133, "stokes_paramet": 133, "retard": 133, "poincar\u00e9": 133, "sphere": [133, 240, 249], "tilt": 133, "mayor": 133, "linear_polar": 133, "transmiss": [133, 134], "mueller_matrix": 133, "quarter_wave_retard": 133, "quarter": 133, "phase_retard": 133, "\u03b4": 133, "rs": [133, 192, 228], "ts": [133, 215], "phia": 133, "phib": 133, "4x1": [133, 215], "phi_a": 133, "phi_b": 133, "qwp": 133, "reflective_filt": 133, "unpolar": 133, "transmissive_filt": 133, "attenu": 133, "transmitt": 133, "ndf": 133, "refraction_angl": 134, "fresnel_coeffici": 134, "brewster_angl": 134, "critical_angl": 134, "lens_makers_formula": 134, "mirror_formula": 134, "lens_formula": 134, "hyperfocal_dist": 134, "transverse_magnif": 134, "medium1": 134, "medium2": 134, "brewster": 134, "926093295503462": 134, "onset": 134, "850908514477849": 134, "02005": 134, "angle_of_incid": 134, "polaris": 134, "te": 134, "undergo": 134, "317843553417859": 134, "348645229818821": 134, "658921776708929": 134, "651354770181179": 134, "235625382192159": 134, "971843958291041": 134, "816477005968898": 134, "577377951366403": 134, "r667": 134, "fresnel_equ": 134, "coc": 134, "0033": 134, "focal_length": 134, "n_len": 134, "n_surr": 134, "thick": 134, "1515151515151": 134, "0000000000000": 134, "3418463277618": 134, "41152": 134, "magnif": 134, "twave": 135, "time_period": 135, "wavenumb": 135, "phi1": 135, "phi2": 135, "w1": [135, 207], "w3": [135, 195], "superposit": [135, 146, 157, 182], "angular_veloc": 135, "tempor": 135, "r668": 136, "paulialgebra": 136, "evaluate_pauli_product": 136, "paulimatric": 136, "sigma3": 136, "nodal": [137, 162, 182], "hw": [137, 162], "coherent_st": 137, "coher": [137, 163, 169], "1d": [137, 139, 152, 171, 220], "wavefunct": [137, 150, 159, 162, 256], "r669": 138, "__cmp__": [138, 142, 161], "dagger": [138, 142, 148, 150, 153, 155, 160, 161], "operatorset": [139, 151], "positionbra3d": 139, "eigenbra": [139, 152, 158], "positionket3d": 139, "eigenket": [139, 152, 158], "positionstate3d": 139, "eigenst": [139, 151, 156, 158, 159], "position_x": 139, "position_i": 139, "position_z": 139, "pxbra": [139, 151], "pxket": [139, 151, 156], "pxop": [139, 151, 156], "xbra": [139, 151, 156], "xket": [139, 151, 156], "xop": [139, 151, 156], "yop": 139, "zop": 139, "uncoupl": [140, 158], "r670": 140, "j_3": [140, 158, 180], "r671": 140, "wigner3j": [140, 180], "wigner": [140, 158, 215, 256], "varshalovich": [140, 158], "zyla": 140, "theor": 140, "phy": [140, 166, 180], "083c01": 140, "r672": 140, "w3j": 140, "715": [140, 180, 195], "wigner6j": [140, 180], "j12": [140, 158], "j23": 140, "6j": [140, 180], "wigner9j": [140, 180], "j4": 140, "j34": 140, "j13": 140, "j24": 140, "9j": [140, 180], "cg_simp": 140, "r673": 140, "clebsh": 140, "rethink": 141, "figsiz": 141, "circuitplot": 141, "nqubit": [141, 145, 146, 155], "control_lin": 141, "gate_idx": [141, 145], "min_wir": 141, "max_wir": 141, "control_point": 141, "wire_idx": 141, "not_point": 141, "one_qubit_box": 141, "box": [141, 146, 148, 157, 159, 249], "qubit": [141, 145, 146, 147, 148, 154], "swap_point": 141, "two_qubit_box": 141, "createcg": 141, "latexnam": 141, "mock": 141, "mz": 141, "circuit_plot": 141, "min_qubit": [141, 145], "autogener": 141, "wire": 141, "q_0": [141, 208], "j_0": 141, "r674": 142, "comm": [142, 161, 221], "plank": 143, "r675": 143, "05457162000000e": 143, "planck_const": 143, "hermetian": 144, "r676": 144, "r677": 144, "ket": [144, 149, 150, 151, 153, 155, 156, 159, 161], "bra": [144, 149, 150, 151, 153, 155, 156, 159, 161], "innerproduct": [144, 149, 150, 156, 158, 161], "outerproduct": [144, 150], "seamlessli": 144, "hermitian_adjoint": 144, "hermitian_transpos": 144, "_apply_operators_qubit": 145, "gate_sort": 145, "gate_simp": 145, "ugat": 145, "cgate": 145, "control_valu": 145, "cnot": 145, "eval_control": 145, "plot_gat": 145, "circ_plot": 145, "simplify_cg": 145, "cphase": 145, "cnotgat": 145, "qappli": [145, 146, 148, 150, 155], "get_target_matrix": 145, "represen": 145, "hadamardg": 145, "identityg": 145, "onequbitg": 145, "phaseg": 145, "swapgat": 145, "target1": 145, "target2": 145, "tgate": 145, "twoqubitg": 145, "xgate": 145, "ygate": 145, "zgate": 145, "bubbl": 145, "random_circuit": 145, "ngate": 145, "gate_spac": 145, "mermin": 146, "_represent_zg": 146, "oracleg": 146, "oracl": 146, "intqubit": [146, 155], "search_funct": 146, "wgate": 146, "apply_grov": 146, "grover_iter": 146, "qstate": 146, "wv": 146, "superposition_basi": 146, "numqubit": 146, "basis_st": 146, "matt": 147, "complexspac": 147, "directsumhilbertspac": 147, "r678": 147, "hilbertspac": 147, "fockspac": 147, "hs": 147, "hilbert_spac": [147, 150, 159], "direct_sum": 147, "quantiz": [147, 256], "r679": 147, "mess": [147, 211, 214, 270], "fock_spac": 147, "r680": 147, "tensorpowerhilbertspac": 147, "r681": 147, "tensor_product": 147, "tensorproducthilbertspac": 147, "r682": 147, "clebsch": [148, 158, 180], "gordan": [148, 158, 180], "hilbert": [148, 150, 156], "grover": 148, "qft": [148, 157], "shor": 148, "brabas": [149, 150, 156, 159], "ketbas": [149, 150, 156, 159], "r683": 149, "inner_product": 149, "apply_oper": [150, 161], "identityoper": 150, "r684": 150, "r685": 150, "polymoni": 150, "operator_": 150, "28physic": 150, "old_assumpt": 150, "r686": 150, "outer_product": 150, "unitaryoper": 150, "operators_to_st": 151, "state_to_oper": 151, "_operators_to_st": 151, "state_map": 151, "_state_to_oper": 151, "statebas": [151, 156, 159], "piab": 152, "piabbra": 152, "piabhamiltonian": 152, "piabket": 152, "ip_doit": 153, "smarter": [154, 204], "rk": 154, "iqft": 154, "rkgate": 154, "qtf": 154, "povm": 155, "as_int": [155, 236], "qubit_valu": 155, "intqubitbra": 155, "00001": 155, "qubitbra": 155, "matrix_to_dens": 155, "matrix_to_qubit": 155, "measure_al": 155, "ensembl": 155, "measure_all_oneshot": 155, "oneshot": 155, "measure_parti": 155, "measure_partial_oneshot": 155, "qubit_to_matrix": 155, "enumerate_st": 156, "_enumerate_st": 156, "foo_1": 156, "foo_2": 156, "foo_3": 156, "test2": 156, "bar_4": 156, "bar_5": 156, "bar_10": 156, "get_basi": 156, "replace_non": 156, "operator_to_st": 156, "qexpr": 156, "integrate_result": 156, "orig_expr": 156, "x_ket": 156, "x_op": 156, "rep_expect": 156, "px_2": 156, "px_1": 156, "rep_innerproduct": 156, "_repres": 156, "_represent_foobasi": 156, "foobasi": 156, "_represent_szop": 156, "szupket": 156, "szop": 156, "sz": 156, "cmod": 157, "reformat": 157, "period_find": 157, "momemtum": 158, "j2op": 158, "jxbra": 158, "jx": 158, "jzket": 158, "jxbracoupl": 158, "jcoupl": 158, "jzketcoupl": 158, "jxket": 158, "jxketcoupl": 158, "jybra": 158, "jy": 158, "jybracoupl": 158, "jyket": 158, "jyketcoupl": 158, "jzbra": 158, "jz": 158, "jzbracoupl": 158, "j_4": [158, 180], "argular": 158, "jzop": 158, "passiv": 158, "r687": 158, "wignerd": 158, "mp": [158, 213, 229], "jm": 158, "jj": 158, "r688": 158, "jcoupling_list": 158, "coupledspinst": 158, "spinstat": 158, "r689": 159, "dual_class": 159, "mn": [159, 195, 215], "ket_not": 159, "r690": 159, "k0": [159, 186, 188, 215], "orthogonalbra": 159, "orthogonalket": 159, "orthogonalst": 159, "_eval_adjoint": 159, "timedepbra": 159, "timedepst": 159, "timedepket": 159, "prob": [159, 215], "412214747707527": 159, "matrix_tensor_product": 160, "axb": 160, "xdagger": 160, "axc": 160, "bxc": 160, "tensor_product_simp": 160, "cxd": 160, "boson": 161, "fetter": 161, "welecka": 161, "secondqu": 161, "annihilateboson": 161, "fockstateket": 161, "bket": 161, "fockstatebosonket": 161, "annihilatefermion": 161, "createboson": 161, "is_only_q_annihil": 161, "destroi": [161, 204], "quasi": 161, "hole": 161, "is_only_q_cr": 161, "is_q_annihil": 161, "is_q_creat": 161, "antisymmetrictensor": 161, "bbra": 161, "fockstatebosonbra": 161, "bd": 161, "bosonicbasi": 161, "fock": 161, "NO": 161, "createfermion": 161, "wick": 161, "fbra": 161, "fockstatefermionbra": 161, "fket": 161, "fockstatefermionket": 161, "fixedbosonicbasi": 161, "n_particl": 161, "n_level": 161, "fockstat": 161, "occup": 161, "bosonbra": 161, "fockstatebra": 161, "fermi_level": 161, "r691": 161, "textwrap": [161, 236], "_q": 161, "get_subno": 161, "fermionicoper": 161, "has_q_annihil": 161, "q_annihil": 161, "has_q_creat": 161, "leftmost": 161, "q_creator": 161, "iter_q_annihil": 161, "iter_q_cr": 161, "0x": 161, "permutationoper": 161, "get_permut": 161, "varbosonicbasi": 161, "n_max": 161, "creator": 161, "evaluate_delta": 161, "einstein": [161, 221], "d_ij": 161, "_j": [161, 166, 180, 197], "d_ip": 161, "d_qp": 161, "matrix_rep": 161, "simplify_index_permut": 161, "permutation_oper": 161, "schemat": [161, 166], "abij": 161, "abji": 161, "baij": 161, "baji": 161, "permutlist": 161, "substitute_dummi": 161, "new_indic": 161, "pretty_indic": 161, "_get_ordered_dummi": 161, "_c": 161, "_d": 161, "index_group": 161, "string_of_lett": 161, "my_dummi": 161, "_v": [161, 179], "_p_0": 161, "_p_1": 161, "keep_only_fully_contract": 161, "sho": 162, "isotrop": 162, "mk": [163, 166], "legal": 163, "temperatur": [163, 176, 248], "dimensions": 163, "dimsys_si": [163, 164], "get_dimensional_depend": [163, 164], "has_integer_pow": 163, "dim_si": 163, "base_dim": 163, "derived_dim": 163, "dimensional_depend": 163, "can_transf_matrix": 163, "useless": [163, 186, 188], "inv_can_transf_matrix": 163, "dim_can_vector": 163, "dim_vector": 163, "is_consist": [163, 169], "is_dimensionless": 163, "list_can_dim": 163, "print_dim_bas": 163, "gravitational_const": [164, 168], "equivalent_dim": 164, "grav_eq": 164, "kepler": [164, 240], "venu": 164, "701": 164, "dai": [164, 168, 211], "venus_a": 164, "108208000e3": 164, "solar": 164, "solar_mass": 164, "9891e30": 164, "convert_to": [164, 168, 184, 190], "5112118495813": 164, "659097795948": 164, "astrophys": 164, "ill": 164, "astrophysicist": 165, "ua": [165, 183], "earth": [165, 176, 248], "sun": 165, "theoricist": 165, "philosophi": [165, 211, 214, 256], "mole": 166, "dimensionless": 166, "unavoid": 166, "d_3": 166, "d_2": [166, 191, 215], "underbrac": [166, 178], "countabl": [166, 214], "pmatrix": 166, "kg": [166, 249], "glu": 166, "men": 166, "heat": 166, "joul": 166, "calori": 166, "stori": 166, "chemistri": 166, "page52": 166, "1952": 166, "page78": 166, "deboer79": 166, "boer": 166, "818": 166, "levyleblond77": 166, "l\u00e9vy": 166, "leblond": 166, "conceptu": [166, 182, 248], "rivista": 166, "del": [166, 230, 247, 270], "nuovo": [166, 180], "cimento": [166, 180], "1977": 166, "187": [166, 189], "214": 166, "anticip": 166, "bin_prefix": 167, "abbrev": [167, 168, 195], "latex_repr": [167, 168], "encapsul": [167, 188, 214, 228], "kilo": 167, "scale_factor": 168, "pretty_unicode_repr": 168, "pretty_ascii_repr": 168, "mathml_presentation_repr": 168, "is_prefix": 168, "abbrevi": [168, 183, 195, 214, 216], "speed_of_light": 168, "reference_quant": 168, "target_unit": 168, "mile": 168, "atomic_mass_const": 168, "centimet": 168, "25146": 168, "609344": 168, "86400": 168, "660539060e": 168, "300000": 168, "planck": 168, "62963087839509e": 168, "base_unit": 169, "descr": 169, "dimension_system": 169, "derived_unit": 169, "overridden": [169, 182, 197, 270], "get_units_non_prefix": 169, "to_matrix": [170, 171, 179, 184, 190, 240, 242, 244], "rigidli": 170, "entireti": 170, "hidden": 170, "_str": 170, "otherfram": [171, 240], "n_alpha_b": 171, "ny": 171, "_3": 171, "rot_typ": [171, 174, 176], "rot_ord": [171, 174, 241], "orient_body_fix": 171, "orient_space_fix": 171, "orient_quaternion": 171, "tait": [171, 240, 241], "bryan": [171, 240, 241], "quaternion": [171, 174, 179, 240, 241, 251], "userwarn": [171, 224, 231, 266], "rotation_ord": [171, 240, 241], "xzx": 171, "zxz": [171, 179, 240, 241], "xyx": [171, 240, 241], "yzy": 171, "zyz": 171, "yxy": [171, 179], "yzx": [171, 179], "zxy": 171, "xzy": 171, "zyx": 171, "yxz": 171, "orient_explicit": 171, "lambda_x": [171, 240, 241], "lambda_i": [171, 240, 241], "lambda_z": [171, 240, 241], "q0": [171, 211, 240, 241], "newnam": 171, "gen_spe": [171, 174], "variable_map": 171, "a_x": [171, 179, 195], "b_x": [171, 173, 179, 221], "b_y": [171, 173, 179, 221], "a_z": [171, 179], "b_z": [171, 179, 221], "inlist": 171, "var_in_dcm": 171, "reexpress": [171, 244], "time_deriv": [171, 176, 177], "free_dynamicsymbol": 171, "codirect": 171, "dyadic_tensor": [171, 240], "frame1": 171, "frame2": [171, 173], "second_reference_fram": 171, "ixz": 171, "inertia_dyad": 171, "pertain": [172, 177], "fieldfunct": [172, 176], "vect": [172, 240, 242], "r_x": [172, 176], "r_y": [172, 176], "r_z": [172, 176], "scalar_field": [172, 176, 240, 242, 246], "grad_field": [172, 242], "point1": [172, 242], "point2": [172, 242], "sympyfi": [172, 173, 174, 242], "position2": [172, 242], "vectfield": [172, 176, 242, 246], "solenoid": [172, 242, 247], "q6": 173, "vec1": 173, "vec2": 173, "coordinatesym": [173, 177], "n_x": 173, "rotating_reference_fram": 173, "time_derivatives_in_the_two_fram": 173, "otherpoint": 174, "outfram": 174, "interfram": 174, "fixedfram": 174, "get_motion_param": 174, "vectori": [174, 176, 243, 248], "timevalue1": 174, "timevalue2": 174, "313": 174, "vel_vec": 174, "q1dd": 175, "q2dd": 175, "charg": [176, 248], "displac": [176, 178, 248], "depict": [176, 214, 248], "temper": 176, "electric_potenti": [176, 246], "r1_x": 176, "r1_y": 176, "infinitesim": [176, 246], "nabla": [176, 240, 245, 246], "f_y": [176, 246], "f_x": [176, 214, 246], "sink": [176, 246], "irrot": [176, 246], "is_conserv": [176, 246, 247], "is_solenoid": [176, 246, 247], "scalar_potenti": [176, 246, 247], "conservative_field": [176, 246], "scalar_potential_differ": [176, 246, 247], "aug": [177, 214], "dyadic_product": [177, 247], "inc": [177, 189], "kinematic_equ": 177, "w_x": 178, "w_y": 178, "w_z": 178, "w_1": [178, 190], "w_2": [178, 190], "w_3": 178, "textrm": [178, 179, 203], "u_x": 178, "sp": 178, "oq": 178, "qp": 178, "rod": 178, "went": 178, "parallelogram": 179, "c_x": 179, "c_y": 179, "c_z": 179, "train": 179, "friend": 179, "xz": [179, 181], "zy": 179, "undergon": [179, 214], "vastli": 179, "wait": 179, "mold": 179, "bp": [179, 211], "bpp": 179, "zzx": 179, "multifram": 179, "direction": 179, "racah": 180, "gaunt": 180, "rasch03": 180, "regge58": 180, "regg": 180, "544": 180, "regge59": 180, "116": [180, 189], "1959": 180, "edmonds74": 180, "edmond": 180, "princeton": [180, 215], "1957": 180, "rasch": 180, "siam": [180, 233], "sci": 180, "1416": 180, "1428": 180, "liberatodebrito82": 180, "liberato": 180, "brito": 180, "forum": [180, 214], "m4nzdu": 180, "7o38": 180, "jen": 180, "03": [180, 215], "oscar": 180, "gerardo": 180, "lazo": 180, "arjona": 180, "jyr2000": 180, "gmail": 180, "clebsch_gordan": 180, "2j_3": 180, "dot_rot_grad_ynm": 180, "gradient": [180, 181, 240, 247, 248], "_l": 180, "l_2": 180, "l_3": 180, "drastic": 180, "2l_1": 180, "2l_2": 180, "2l_3": 180, "1200": 180, "00689500421922113448": 180, "inflect": 180, "unsuit": 180, "dd": [180, 200], "ee": [180, 190], "j_5": 180, "j_6": 180, "richer": 180, "wigner_3j": 180, "wigner_6j": 180, "wigner_9j": 180, "j_7": 180, "j_8": 180, "j_9": 180, "05555555": 180, "1666666": 180, "wigner_d": 180, "j_z": 180, "j_y": 180, "\u03b3": [180, 260, 270], "wigner_d_smal": 180, "textbackend": 181, "plot_parametr": 181, "plot_implicit": 181, "plot3d_parametric_lin": 181, "plot3d_parametric_surfac": 181, "xlabel": 181, "ylabel": 181, "zlabel": 181, "aspect_ratio": 181, "ylim": 181, "axis_cent": 181, "xscale": 181, "yscale": 181, "autoscal": 181, "textplot": 181, "_seri": [181, 192], "baseseri": 181, "nonparametr": 181, "cylindr": [181, 246], "basebackend": 181, "parametric2dlineseri": 181, "parametric3dlineseri": 181, "red": 181, "cyan": 181, "grayscal": 181, "integers_onli": 181, "surfaceover2drangeseri": 181, "parametricsurfaceseri": 181, "surface_color": 181, "range1": 181, "range2": 181, "fill_between": 181, "inch": 181, "expr_x": 181, "expr_i": 181, "canva": 181, "range_x": 181, "range_i": 181, "nb_of_points_x": 181, "nb_of_points_i": 181, "expr_z": 181, "range_u": 181, "range_v": 181, "nb_of_points_u": 181, "nb_of_points_v": 181, "x_var": 181, "y_var": 181, "mesh": 181, "p8": 181, "p9": 181, "nrow": [181, 184], "ncolumn": 181, "stuff": [181, 226, 228, 236], "is_2dlin": 181, "oblig": 181, "only_integ": 181, "get_seg": 181, "get_color_arrai": 181, "var_start_end": 181, "r692": 181, "luiz": 181, "henriqu": 181, "figueiredo": 181, "r693": 181, "line3dbaseseri": 181, "surfacebaseseri": 181, "var_start_end_x": 181, "var_start_end_i": 181, "var_start_end_u": 181, "var_start_end_v": 181, "implicitseri": 181, "has_equ": 181, "use_interval_math": 181, "centric": 181, "get_mesh": 181, "process_seri": 181, "_process_seri": 181, "keyboard": 181, "mous": 181, "pyglet_plot": 181, "screenshot": 181, "camera": 181, "zoom": 181, "numpad": 181, "ordin": [181, 211, 236], "f5": 181, "f6": 181, "f8": 181, "drag": 181, "button": [181, 227], "curvilinear": [181, 243, 244, 247], "__setitem__": 181, "zfade4": 181, "key1": 181, "value1": 181, "key2": 181, "value2": 181, "unbound_theta": 181, "wirefram": 181, "saddl": 181, "fz": 181, "_______________________________________________________": 181, "mediterranean": 182, "cultur": 182, "arab": 182, "lighten": 182, "tapestri": 182, "woven": 182, "european": 182, "soil": 182, "plausibl": 182, "teeter": 182, "totter": 182, "outweigh": 182, "excit": 182, "amus": 182, "kempf": 182, "1944": 182, "20th": 182, "dedekind": 182, "intim": 182, "disciplin": 182, "toolset": 182, "atiyah69": [182, 189], "gear": 182, "greuel2008": [182, 189], "interspers": 182, "lr": 182, "ilex": 182, "\u211a": [182, 195], "localis": 182, "abridg": 182, "free_modul": [182, 186], "quotient_r": [182, 186], "overload": [182, 185, 186, 243, 265], "polynomialr": [182, 186, 187, 193], "domain_or_r": [182, 186], "quotientr": [182, 186], "base_id": [182, 186], "elbow": 182, "room": 182, "componentwis": [182, 195], "inclin": 182, "biproduct": 182, "quotient_modul": 182, "is_submodul": 182, "multiply_id": 182, "identity_hom": 182, "freemodul": 182, "freemoduleel": 182, "conicis": 182, "_contain": 182, "_syzygi": 182, "_in_terms_of_gener": 182, "_intersect": 182, "_module_quoti": 182, "reduce_el": [182, 190], "represantit": 182, "in_terms_of_gener": 182, "inclusion_hom": 182, "rela": 182, "relb": 182, "is_full_modul": 182, "module_quoti": 182, "opt": [182, 188, 207, 266], "coincis": 182, "syzygy_modul": 182, "r_n": 182, "_contains_elem": 182, "_contains_id": 182, "_quotient": 182, "_union": 182, "_product": 182, "is_whole_r": 182, "is_maxim": 182, "is_primari": 182, "is_rad": 182, "is_princip": 182, "xj": 182, "satur": 182, "subquoti": 182, "quotientmodul": 182, "subquotientmodul": 182, "killed_modul": 182, "quotientmoduleel": 182, "kill": [182, 186, 226], "quotient_hom": 182, "ker": 182, "surject": 182, "cokernel": 182, "coker": 182, "meaningfulli": 182, "restrict_domain": 182, "homomoprh": 182, "modulehomomorph": [182, 190], "_ker": 182, "_img": 182, "_kernel": 182, "_imag": 182, "_restrict_domain": 182, "_restrict_codomain": 182, "_quotient_domain": 182, "_quotient_codomain": 182, "_appli": 182, "_mul_scalar": 182, "_compos": 182, "_add": [182, 201], "is_inject": 182, "quotient_domain": 182, "is_isomorph": 182, "preimag": 182, "restrict_codomain": 182, "is_surject": 182, "quotient_codomain": 182, "induct": 182, "monogen": 182, "monogenicfiniteextens": [182, 186], "finiteextens": 182, "sqrt2": [182, 185], "_5": 182, "extensionel": [182, 186], "notinvert": [182, 188, 191], "nu_1": 183, "nu_2": 183, "nu_n": 183, "nu_i": 183, "customarili": 183, "irreduc": [183, 186, 188, 190, 191, 194, 215, 221, 270], "endow": 183, "resp": [183, 186, 211], "divmod": [183, 185, 186], "cb": [183, 233], "sqf_list": [183, 186, 191], "sqf": [183, 186, 191, 208], "buchberg": [183, 188, 189, 191], "groebnerbasi": [183, 191, 194], "solve_poly_system": [183, 191, 213, 214], "fmt": [184, 186, 190], "matrix1": 184, "driectli": 184, "dmnonsquarematrixerror": 184, "zz_i": [184, 185, 187], "from_dict_sympi": 184, "ncol": 184, "elemsdict": 184, "from_list_sympi": 184, "from_list": [184, 186, 191, 192], "construct_domain": [184, 185, 186, 191], "from_rep": 184, "drep": 184, "dm": [184, 190], "ownership": 184, "scc": 184, "substract": 184, "to_dens": 184, "to_field": [184, 186, 191], "to_spars": 184, "aq": 184, "ccc": [184, 214], "from_ddm": 184, "domainerror": [184, 188, 191], "to_ddm": 184, "r694": 184, "pythonmpq": [185, 186], "srepr": [185, 258, 265], "leaf": [185, 195, 204, 265], "strength": 185, "richardon": 185, "dup_factor_list": 185, "factortool": [185, 188], "dup_": [185, 188], "dmp_": [185, 188], "prod": [185, 192, 204], "z1": [185, 186, 213], "is_field": [185, 186], "quo": [185, 186, 188, 191], "rem": [185, 186, 188, 191], "exquo": [185, 186, 191], "exactquotientfail": [185, 186, 188, 191], "mpz": [185, 186], "of_typ": [185, 186], "z1_sympi": 185, "to_sympi": [185, 186], "from_sympi": [185, 186], "forth": [185, 190], "z_sympi": 185, "z_zz": 185, "coercionfail": [185, 188], "sum_domain": 185, "expressions_sympi": 185, "expressions_dom": 185, "result_dom": 185, "e_dom": 185, "result_sympi": 185, "qq_i": [185, 187], "gaussianinteg": [185, 186], "gaussianrationalfield": [185, 186], "gaussianr": [185, 186], "galoi": [185, 188, 190], "finitefield": [185, 186], "pythonfinitefield": [185, 186], "gmpyfinitefield": [185, 186], "welcom": [185, 211, 263], "realel": [185, 186], "complexel": [185, 186], "mpc": 185, "xr": [185, 193], "zc": 185, "1j": 185, "_mpc_": 185, "realfield": [185, 186], "rr100": 185, "33333333333333333333333333333": 185, "hack": [185, 211, 224], "algebraic_field": [185, 186, 188, 190], "algebraicfield": [185, 186, 188, 190], "sqrt3": 185, "x_dom": 185, "p_expr": [185, 186], "polyel": [185, 186, 188, 192, 193, 195], "p_dom": 185, "unexpand": [185, 194, 204, 227], "xk": [185, 186, 197], "yk": [185, 186], "poly_r": [185, 186], "old_polynomialr": 185, "globalpolynomialr": 185, "polyclass": [185, 186, 191], "yr": [185, 193], "broader": 185, "get_field": [185, 186], "frac_field": [185, 186], "rationalfield": [185, 186], "old_frac_field": [185, 186], "fractionfield": [185, 186], "old_fractionfield": 185, "xf": 185, "yf": 185, "fracfield": [185, 186], "expressiondomain": [185, 186], "elements_sympi": 185, "elements_k": 185, "convert_from": [185, 186], "num_zz": 185, "num_qq": 185, "domainel": [185, 186, 193], "encompass": 185, "all_coeff": [185, 186, 191], "dom": [185, 186, 188, 203], "strang": 185, "hybrid": 185, "unreli": 185, "usefulli": 186, "pythonr": [186, 193], "p_domain": 186, "ez": [186, 221], "get_r": 186, "has_assoc_field": 186, "has_assoc_r": 186, "alg_field_from_poli": [186, 190], "root_index": 186, "almosteq": 186, "cyclotomic_field": [186, 190], "zeta7": 186, "zeta_": 186, "lexord": [186, 191], "from_algebraicfield": 186, "from_complexfield": 186, "from_expressiondomain": 186, "from_expressionrawdomain": 186, "from_ff": 186, "modularinteg": 186, "from_ff_gmpi": 186, "from_ff_python": 186, "from_fractionfield": 186, "from_globalpolynomialr": 186, "from_monogenicfiniteextens": 186, "from_polynomialr": 186, "from_qq_gmpi": 186, "from_qq_python": 186, "from_realfield": 186, "from_zz_gmpi": 186, "from_zz_python": 186, "gcdex": [186, 191], "get_exact": 186, "half_gcdex": [186, 191], "is_pid": 186, "is_r": 186, "is_nonposit": 186, "is_on": [186, 191], "rersiv": 186, "__neg__": 186, "__pos__": 186, "__sub__": 186, "q_domain": 186, "q_expr": 186, "x_domain": 186, "alg": [186, 190, 194], "trait": 186, "is_unit": 186, "__divmod__": 186, "__floordiv__": 186, "__mod__": [186, 190], "simpledomain": 186, "compositedomain": 186, "from_qq": 186, "from_zz": 186, "gmpyinteg": 186, "pythoninteg": 186, "gmpyrationalfield": 186, "pythonrationalfield": 186, "from_gaussianrationalfield": 186, "gaussianel": 186, "gaussiandomain": 186, "qq_python": 186, "zz_python": 186, "z2": 186, "z3": 186, "z4": 186, "from_gaussianinteg": 186, "as_algebraicfield": 186, "orig_ext": 186, "algebraicnumb": [186, 190, 194], "integral_basi": [186, 190], "maximal_ord": [186, 190], "zeta5": 186, "primes_abov": [186, 190], "primeid": [186, 190], "to_alg_num": [186, 190], "legibl": 186, "to_rat": 186, "mpelement": 186, "complexfield": 186, "lc": [186, 188, 191], "domain_or_field": 186, "dmf": 186, "coercibl": 186, "monomialord": [186, 191], "xring": 186, "vring": 186, "sring": [186, 192, 193], "polyr": [186, 187, 188, 193], "factor_list": [186, 191, 270], "add_gen": 186, "drop_to_ground": 186, "monomial_basi": 186, "206": [186, 191], "744": 186, "945": [186, 192], "is_monomi": [186, 191], "const": 186, "coeffcient": [186, 188], "inplac": 186, "shallow": [186, 202], "zero_monom": 186, "fv": 186, "clo": 186, "p64": 186, "qv": 186, "f0": 186, "imul_num": 186, "itercoeff": 186, "itermonom": 186, "iterterm": 186, "leading_expv": 186, "leading_monom": 186, "leading_term": 186, "listcoeff": 186, "listmonom": 186, "listterm": 186, "monom": [186, 191], "strip_zero": 186, "tail_degre": 186, "xfield": 186, "vfield": [186, 245], "sfield": [186, 245], "fracel": [186, 195], "lev": 186, "add_ground": [186, 191], "all_monom": [186, 191], "all_term": [186, 191], "cauchy_lower_bound": 186, "cauchy_upper_bound": 186, "clear_denom": [186, 191], "count_complex_root": 186, "sup": [186, 191, 195, 202, 203], "count_real_root": 186, "deflat": [186, 191], "y_i": [186, 188, 190, 191, 211], "x_j": [186, 188, 191], "degree_list": [186, 191], "eject": [186, 191], "exquo_ground": [186, 191], "factor_list_includ": [186, 191], "from_dict": [186, 191], "from_sympy_list": 186, "gff_list": [186, 191], "homogeneous_ord": [186, 191, 208], "is_cyclotom": [186, 191], "is_ground": [186, 191], "is_homogen": [186, 191], "is_irreduc": [186, 191], "is_linear": [186, 191], "is_mon": [186, 191], "is_quadrat": [186, 191], "is_sqf": [186, 191], "l1_norm": [186, 191], "l2_norm_squar": 186, "max_norm": [186, 191], "mignotte_sep_bound_squar": 186, "mignott": [186, 188], "mul_ground": [186, 191], "pdiv": [186, 191], "pexquo": [186, 191], "pquo": [186, 191], "prem": [186, 191], "quo_ground": [186, 191], "refine_root": [186, 190, 191], "includepr": [186, 188, 191], "sqf_list_includ": [186, 191], "sqf_norm": [186, 191], "sqf_part": [186, 191], "sqr": [186, 191], "sturm": [186, 191], "sub_ground": [186, 191], "to_dict": 186, "to_exact": [186, 191], "to_r": [186, 191], "to_sympy_dict": 186, "to_sympy_list": 186, "to_tupl": 186, "total_degre": [186, 191, 208], "trunc": [186, 191, 194], "frac_unifi": 186, "half_per": 186, "poly_unifi": 186, "gr\u00f6bner": 187, "groebner": [187, 189, 190, 191, 194, 207, 213, 214], "wester": 187, "dispers": [187, 189, 215], "agca": 187, "syzygi": 187, "undocu": 187, "rs_seri": 187, "eqs_to_matrix": 187, "sympy_eqs_to_r": 187, "_solve_lin_si": 187, "_solve_lin_sys_compon": 187, "ddm": 187, "sdm": [187, 188], "adic": [187, 189], "valuat": [187, 211], "subfield": 187, "l0": 188, "focus": 188, "legitim": 188, "uninterest": 188, "bulk": [188, 205], "x_u": 188, "dup__": 188, "densebas": 188, "dmp_lc": 188, "poly_lc": 188, "dmp_tc": 188, "poly_tc": 188, "dmp_ground_lc": 188, "dmp_ground_tc": 188, "dmp_true_lt": 188, "n_1": [188, 213, 215], "n_k": 188, "dmp_degre": 188, "dmp_degree_in": 188, "dmp_degree_list": 188, "dmp_strip": 188, "dmp_valid": 188, "dup_revers": 188, "dmp_copi": 188, "dmp_to_tupl": 188, "dmp_normal": 188, "dmp_convert": 188, "to_domain": 188, "dmp_from_sympi": 188, "dmp_nth": 188, "dmp_ground_nth": 188, "dmp_zero_p": 188, "dmp_zero": 188, "dmp_one_p": 188, "dmp_one": 188, "dmp_ground_p": 188, "dmp_ground": 188, "dmp_negative_p": 188, "dmp_positive_p": 188, "dmp_from_dict": 188, "dmp_to_dict": 188, "dmp_swap": 188, "dmp_permut": 188, "dmp_nest": 188, "dmp_rais": 188, "dmp_deflat": 188, "dmp_multi_defl": 188, "dmp_inflat": 188, "dmp_exclud": 188, "dmp_includ": 188, "dmp_inject": 188, "dmp_eject": 188, "dmp_terms_gcd": 188, "dmp_list_term": 188, "dmp_apply_pair": 188, "dmp_slice": 188, "dup_random": 188, "densearith": 188, "dmp_add_term": 188, "dmp_sub_term": 188, "dmp_mul_term": 188, "dmp_add_ground": 188, "dmp_sub_ground": 188, "dmp_mul_ground": 188, "dmp_quo_ground": 188, "dmp_exquo_ground": 188, "dup_lshift": 188, "dup_rshift": 188, "dmp_ab": 188, "dmp_neg": 188, "dmp_add": 188, "dmp_sub": 188, "dmp_add_mul": 188, "dmp_sub_mul": 188, "dmp_mul": 188, "dmp_sqr": 188, "dmp_pow": 188, "dmp_pdiv": 188, "dmp_prem": 188, "dmp_pquo": 188, "dmp_pexquo": 188, "dmp_rr_div": 188, "dmp_ff_div": 188, "dmp_div": 188, "dmp_rem": 188, "dmp_quo": 188, "dmp_exquo": 188, "dmp_max_norm": 188, "dmp_l1_norm": 188, "dmp_expand": 188, "densetool": 188, "dmp_integr": 188, "dmp_integrate_in": 188, "dmp_diff": 188, "dmp_diff_in": 188, "dmp_eval": 188, "dmp_eval_in": 188, "dmp_eval_tail": 188, "dmp_diff_eval_in": 188, "dmp_trunc": 188, "dmp_ground_trunc": 188, "dup_mon": 188, "dmp_ground_mon": 188, "dup_cont": 188, "dmp_ground_cont": 188, "dup_primit": 188, "dmp_ground_primit": 188, "dup_extract": 188, "dmp_ground_extract": 188, "dup_real_imag": 188, "bivari": [188, 194, 215], "dup_mirror": 188, "dup_scal": 188, "dup_shift": 188, "dup_transform": 188, "dmp_compos": 188, "dup_decompos": 188, "t_m": 188, "r695": 188, "dmp_lift": 188, "dup_sign_vari": 188, "dmp_clear_denom": 188, "k_0": 188, "dmp_revert": 188, "gf_": 188, "justifi": 188, "necess": 188, "u_0": 188, "m_0": [188, 208], "m_n": 188, "gf_crt1": 188, "9215": 188, "9405": 188, "9603": 188, "gf_crt2": 188, "gf_int": 188, "gf_degre": 188, "gf_lc": 188, "gf_tc": 188, "gf_strip": 188, "gf_trunc": 188, "gf_normal": 188, "gf_from_dict": 188, "gf_to_dict": 188, "gf_from_int_poli": 188, "gf_to_int_poli": 188, "gf_neg": 188, "gf_add_ground": 188, "gf_sub_ground": 188, "gf_mul_ground": 188, "gf_quo_ground": 188, "gf_add": 188, "gf_sub": 188, "gf_mul": 188, "gf_sqr": 188, "gf_add_mul": 188, "gf_sub_mul": 188, "gf_expand": 188, "gf_div": 188, "r696": 188, "monagan93": [188, 189], "r697": 188, "gathen99": [188, 189], "gf_rem": 188, "gf_quo": 188, "gf_exquo": 188, "gf_lshift": 188, "gf_rshift": 188, "gf_pow": 188, "gf_pow_mod": 188, "r698": 188, "gf_gcd": 188, "gf_lcm": 188, "gf_cofactor": 188, "gf_gcdex": 188, "eea": 188, "r699": 188, "gf_monic": 188, "gf_diff": 188, "gf_eval": 188, "gf_multi_ev": 188, "gf_compos": 188, "gf_compose_mod": 188, "gf_trace_map": 188, "r700": 188, "gathen92": [188, 189], "gf_random": 188, "gf_irreduc": 188, "gf_irreducible_p": 188, "gf_sqf_p": 188, "gf_sqf_part": 188, "gf_sqf_list": 188, "e_2": [188, 191], "f_j": [188, 205], "gf_sqf": 188, "r701": 188, "geddes92": [188, 189], "gf_qmatrix": 188, "berlekamp": 188, "gf_qbasi": 188, "gf_berlekamp": 188, "gf_zassenhau": 188, "gf_shoup": 188, "gf_factor_sqf": 188, "gf_factor": 188, "e_d": 188, "cantor": 188, "zassenhau": [188, 190], "shoup": [188, 189], "kaltofen": [188, 189], "gathen": [188, 189], "gf_factor_method": 188, "r702": 188, "gf_valu": 188, "2204": 188, "gf_csolv": 188, "congruent": [188, 205, 208], "189": 188, "112": [188, 192], "139": 188, "r703": 188, "ivan": 188, "niven": 188, "zuckerman": 188, "montgomeri": 188, "infeas": [188, 191], "sdm_": 188, "distributedmodul": 188, "sdm_monomial_mul": 188, "sdm_monomial_deg": 188, "f_5": 188, "sdm_monomial_divid": 188, "sdm_lc": 188, "sdm_to_dict": 188, "sdm_from_dict": 188, "dic": 188, "sdm_add": 188, "2f_1": 188, "3f_1": 188, "yf_1": 188, "xf_1": 188, "sdm_lm": 188, "sdm_lt": 188, "sdm_mul_term": 188, "2xy": [188, 264], "4y": [188, 214, 259], "8xy": 188, "2y": [188, 208, 211, 214, 264], "sdm_zero": 188, "sdm_deg": 188, "sdm_from_vector": 188, "sdm_to_vector": 188, "variant": [188, 211, 214], "qg": 188, "remark": [188, 194, 205, 211], "uf": 188, "vg": 188, "zout": 188, "euclidtool": 188, "dmp_half_gcdex": 188, "dmp_gcdex": 188, "dmp_invert": 188, "dmp_euclidean_pr": 188, "dmp_primitive_pr": 188, "exceedingli": 188, "collin": [188, 189], "collins67": [188, 189], "subdomain": 188, "2l": 188, "remainin": 188, "subdetermin": 188, "n_2": [188, 215], "n_": [188, 208], "abnorm": 188, "gamma_i": 188, "brown": [188, 189, 215], "traub": [188, 189], "browntraub71": [188, 189], "brown78": [188, 189], "discoveri": [188, 266], "dmp_inner_subresult": 188, "729": 188, "sre": 188, "dmp_subresult": 188, "dmp_prs_result": 188, "dmp_zz_modular_result": 188, "dmp_zz_collins_result": 188, "dmp_qq_collins_result": 188, "dmp_result": 188, "dmp_discrimin": 188, "dmp_rr_prs_gcd": 188, "cff": [188, 191], "cfg": [188, 191], "dmp_ff_prs_gcd": 188, "dmp_zz_heu_gcd": 188, "r704": 188, "liao95": [188, 189], "dmp_qq_heu_gcd": 188, "dmp_inner_gcd": 188, "dmp_gcd": 188, "dmp_lcm": 188, "dmp_content": 188, "dmp_primit": 188, "dmp_cancel": 188, "dmp_trial_divis": 188, "dmp_zz_mignotte_bound": 188, "dup_zz_hensel_step": 188, "hensel": 188, "r705": 188, "dup_zz_hensel_lift": 188, "f_list": 188, "multifactor": 188, "r706": 188, "dup_zz_zassenhau": 188, "dup_zz_irreducible_p": 188, "eisenstein": 188, "dup_cyclotomic_p": 188, "bradford": 188, "russel": 188, "251": 188, "berlin": 188, "heidelberg": 188, "dup_zz_cyclotomic_poli": 188, "dup_zz_cyclotomic_factor": 188, "r707": 188, "weisstein09": [188, 189], "dup_zz_factor_sqf": 188, "dup_zz_factor": 188, "r708": 188, "dmp_zz_wang_non_divisor": 188, "wang": [188, 189], "eez": 188, "dmp_zz_wang_test_point": 188, "dmp_zz_wang_lead_coeff": 188, "dmp_zz_diophantin": 188, "dmp_zz_wang_hensel_lift": 188, "dmp_zz_wang": 188, "enhanc": [188, 215], "r709": 188, "wang78": [188, 189], "r710": 188, "dmp_zz_factor": 188, "r711": 188, "dmp_ext_factor": 188, "dup_gf_factor": 188, "dmp_factor_list": 188, "dmp_factor_list_includ": 188, "dmp_irreducible_p": 188, "groebnertool": 188, "polyconfig": [188, 191], "f5b": [188, 191], "spoli": 188, "red_groebn": 188, "beckerweispfenning93": 188, "is_groebn": 188, "is_minim": 188, "is_reduc": 188, "fglmtool": 188, "matrix_fglm": 188, "o_to": 188, "o_from": 188, "r712": 188, "fauger": [188, 191], "gianni": [188, 191, 213], "mora": [188, 189, 191, 213], "sdm_spoli": 188, "phantom": 188, "sca": 188, "defn": 188, "sdm_ecart": 188, "ecart": 188, "sdm_nf_mora": 188, "nf": 188, "sdm_groebner": 188, "sugar": [188, 189, 220], "giovini": [188, 189], "polyopt": [188, 192], "build_opt": 188, "polyerror": [188, 191], "basepolynomialerror": 188, "operationnotsupport": 188, "heuristicgcdfail": 188, "homomorphismfail": 188, "isomorphismfail": [188, 190], "extraneousfactor": 188, "evaluationfail": 188, "refinementfail": 188, "notrevers": [188, 191], "notalgebra": 188, "polynomialerror": [188, 191], "unificationfail": [188, 190], "generatorsneed": 188, "computationfail": 188, "exc": 188, "generatorserror": 188, "univariatepolynomialerror": 188, "multivariatepolynomialerror": [188, 191], "polificationfail": 188, "orig": 188, "optionerror": 188, "flagerror": 188, "modulargcd": 188, "modgcd_univari": 188, "monagan00": [188, 189], "modgcd_bivari": 188, "modgcd_multivari": 188, "_modgcd_multivariate_p": 188, "brown71": [188, 189], "degbound": 188, "contbound": 188, "func_field_modgcd": 188, "reconstuct": 188, "z_p": 188, "spuriou": [188, 213], "hoeij04": [188, 189], "scarc": 188, "hsin": 189, "chao": 189, "liao": 189, "fateman": 189, "montreal": 189, "quebec": 189, "canada": 189, "240": [189, 197, 242], "247": [189, 213], "von": [189, 215], "zur": 189, "gerhard": 189, "cambridg": [189, 208], "weisstein": 189, "cyclotomicpolynomi": 189, "1215": 189, "1231": 189, "czapor": 189, "labahn": 189, "monagan": [189, 207], "disco": 189, "721": 189, "kaltofen98": 189, "subquadrat": 189, "223": 189, "1998": [189, 208], "1179": 189, "1197": 189, "shoup95": 189, "397": 189, "shoup91": 189, "cox97": [189, 191], "shea": [189, 191], "ajwa95": 189, "ajwa": 189, "liu": 189, "cites": [189, 207], "ist": [189, 204, 207], "psu": [189, 204, 207], "mycites": 189, "login": 189, "bose03": 189, "bose": 189, "guiver": 189, "multidimension": [189, 226, 251], "giovini91": 189, "bronstein93": [189, 191], "salvi": [189, 192], "kiev": 189, "ukrain": 189, "buchberger01": [189, 191], "theorist": 189, "moreno": 189, "diaz": 189, "freir": 189, "eurocast": 189, "februari": 189, "davenport88": 189, "siret": 189, "tournier": 189, "london": [189, 208], "124": [189, 259], "greuel": 189, "pfister": 189, "atiyah": 189, "macdonald": 189, "142": 189, "1971": [189, 211], "505": 189, "237": 189, "249": 189, "wittkopf": 189, "478": 189, "hoeij": 189, "2004": [189, 208], "297": [189, 191], "304": [189, 191], "wang81": 189, "symsac": 189, "hoeij02": 189, "manwright94": [189, 191], "yiu": 189, "kwong": 189, "franci": 189, "wright": 189, "190347": 189, "190413": 189, "koepf98": [189, 191], "koepf": [189, 197, 207], "vieweg": 189, "abramov71": [189, 191], "abramov": [189, 213], "ussr": 189, "330": 189, "man93": [189, 191], "376": 189, "sciencedirect": 189, "pii": 189, "s0747717183710539": 189, "kapur1994": 189, "deepak": 189, "kapur": 189, "tushar": 189, "saxena": 189, "yang": 189, "dixon": 189, "researchg": [189, 215], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 189, "palancz08": 189, "pal\u00e1ncz": 189, "zaletnyik": 189, "jl": [189, 228], "awang": 189, "ew": 189, "grafarend": 189, "geodet": 189, "geodesi": 189, "225607735_dixon_result": 189, "s_solution_of_systems_of_geodetic_polynomial_equ": 189, "bruce97": 189, "bruce": 189, "randal": 189, "donald": [189, 230], "mundi": 189, "artifici": [189, 198], "intellig": [189, 207, 211, 270], "orlando": 189, "www2": 189, "duke": 189, "donaldlab": 189, "symbolicnumericalcomput": 189, "045": 189, "087": 189, "stiller96": 189, "stiller": 189, "1996": [189, 205, 213, 240], "citeseerx": [189, 204], "viewdoc": [189, 204, 207], "590": 189, "2021": 189, "rep1": [189, 204], "cohen93": [189, 190], "henri": 189, "olga": 190, "tausski": 190, "zimmer": 190, "pohst": 190, "articul": 190, "numberfield": 190, "mathfrak": 190, "regul": 190, "alpha_m": 190, "round_two": 190, "prime_decomp": 190, "prime_valu": 190, "minimal_polynomi": 190, "field_isomorph": 190, "nilrad": 190, "z_k": 190, "zk": 190, "ordinarili": 190, "503": 190, "r713": 190, "r714": 190, "powerbasisel": 190, "ramif": 190, "as_submodul": 190, "bundl": 190, "test_factor": 190, "deliber": 190, "is_inert": 190, "inert": [190, 211], "reduce_anp": 190, "elt": 190, "reduce_alg_num": 190, "field_gen": 190, "just_gen": 190, "reagent": 190, "kummer": 190, "1847": 190, "ueber": 190, "zerlegung": 190, "crell": 190, "r715": 190, "_minpoly_compos": 190, "stall": 190, "alli": 190, "monomorph": 190, "alpha_i": 190, "alpha_n": 190, "lincomb": 190, "primtiiv": 190, "meanwhil": 190, "moduleel": 190, "powerbasi": 190, "submodule_from_matrix": 190, "ancestor": 190, "to_col": 190, "nca": 190, "_mult_tab": 190, "successfulli": 190, "moduleendomorph": 190, "innerendomorph": 190, "endomorphismr": 190, "spec": [190, 191], "i_n": [190, 191, 216], "include_self": 190, "basis_el": 190, "element_from_r": 190, "endomorphism_r": 190, "is_compat_col": 190, "mult_tab": 190, "mult": 190, "closurefailur": 190, "nearest_common_ancestor": 190, "number_field": 190, "power_basis_ancestor": 190, "incom": 190, "halv": 190, "submodule_from_gen": 190, "over_power_basi": 190, "starts_with_un": 190, "hnf_modulu": 190, "whole_submodul": 190, "element_from_anp": 190, "element_from_alg_num": 190, "element_from_poli": 190, "qq_matrix": 190, "basis_element_pullback": 190, "discard_befor": 190, "structureerror": 190, "cohen00": 190, "make_mod_elt": 190, "qq_col": 190, "from_int_list": 190, "is_compat": 190, "reduced_mod_p": 190, "to_ancestor": 190, "anc": 190, "to_par": 190, "to_anp": 190, "inner_endomorph": 190, "event": [190, 215], "find_min_poli": 190, "missingunityerror": 190, "is_int": 190, "get_num_denom": 190, "extract_fundamental_discrimin": 190, "r716": 190, "algintpow": 190, "zeta_pow": 190, "r717": 190, "coeff_search": 190, "supplement_a_subspac": 190, "dmrankerror": 190, "v_n": 190, "w_r": 190, "w_j": 190, "u_j": 190, "r718": 190, "poly_from_expr": 191, "parallel_poly_from_expr": 191, "lt": [191, 236], "mod_invers": 191, "exprtool": [191, 251], "gcd_term": 191, "gcd_list": 191, "lcm_list": 191, "destruct": 191, "2079": 191, "1401": 191, "2715": 191, "6720": 191, "1092": 191, "gff": 191, "check_sqf": 191, "count_root": 191, "nroot": [191, 213], "maxstep": 191, "cleanup": 191, "73205080756888": 191, "73205080756887729352744634151": 191, "ground_root": 191, "nth_power_roots_poli": 191, "r_f": 191, "r_g": 191, "_signsimp": 191, "q_n": 191, "is_zero_dimension": [191, 214], "donal": 191, "230": [191, 213], "ec": 191, "em": 191, "di": 191, "dispersionset": 191, "gp": [191, 211], "free_symbols_in_domain": 191, "from_poli": 191, "get_domain": 191, "get_modulu": 191, "has_only_gen": 191, "vincent": [191, 233], "akrita": 191, "strzebonski": 191, "va": 191, "alkiviadi": 191, "adam": 191, "panagioti": 191, "vigkla": 191, "265": 191, "279": 191, "polnomi": 191, "is_multivari": 191, "is_univari": 191, "ltrim": 191, "rerun": [191, 226], "_only_": 191, "sturmian": 191, "subresultants_qq_zz": 191, "suffix": [191, 228], "_pg": 191, "_amv": 191, "rem_z": 191, "premultipli": 191, "rat_clear_denom": 191, "_ignor": 191, "retract": 191, "same_root": 191, "r0": 191, "set_domain": 191, "set_modulu": 191, "termwis": 191, "fglm": 191, "r719": 191, "horner_schem": 191, "equispac": 191, "viet": 191, "itermonomi": 191, "min_degre": 191, "gib": 191, "monomial_kei": 191, "monomial_count": 191, "gradedlexord": 191, "reversedgradedlexord": 191, "clear_cach": 191, "_get_interv": 191, "165": [191, 215, 233], "169": 191, "eval_approx": 191, "evalf_r": 191, "eval_r": 191, "69629": 191, "71318": 191, "805": 191, "3275": 191, "65536": [191, 194, 195], "414645": 191, "131072": 191, "6545": 191, "104755": 191, "2097152": 191, "6634255": 191, "_all_root": 191, "use_cach": 191, "_complexes_index": 191, "_complexes_sort": 191, "_count_root": 191, "_ensure_complexes_init": 191, "_ensure_reals_init": 191, "_eval_is_imaginari": 191, "_get_complex": 191, "_get_complexes_sqf": 191, "currentfactor": 191, "_get_real": 191, "_get_reals_sqf": 191, "_get_root": 191, "_indexed_root": 191, "_new": 191, "_postprocess_root": 191, "_preprocess_root": 191, "heroic": [191, 213], "_real_root": 191, "_reals_index": 191, "_reals_sort": 191, "_refine_complex": 191, "ay": [191, 208, 236, 270], "_roots_trivi": 191, "_set_interv": 191, "861136": 191, "86113631159405258": 191, "polyroot": 191, "quintic": [191, 213], "unread": [191, 231], "casu": 191, "irreducibili": 191, "unsolvablefactorerror": [191, 213], "inexpress": 191, "unsolv": [191, 214], "r720": 191, "cubic_funct": 191, "trigonometric_": 191, "28and_hyperbol": 191, "29_method": 191, "specialpoli": 191, "swinnerton_dyer_poli": 191, "swinnerton": 191, "dyer": 191, "symmetric_poli": 191, "random_poli": 191, "gegenbau": [191, 195], "partfrac": [191, 197], "undertermin": 191, "_w": [191, 202], "apart_list": 191, "assemble_partfrac_list": 191, "bunch": 191, "pfd": 191, "r721": 191, "partial_list": 191, "reassembl": 191, "pfda": 191, "r722": 191, "r723": 191, "r724": 191, "r725": 191, "r726": 191, "r727": 191, "r728": 191, "r729": 191, "widen": 192, "ring_seri": 192, "rs_sin": 192, "166666666666667": 192, "puiseux": 192, "rs_co": 192, "rs_tan": 192, "took": [192, 204], "eleg": [192, 194], "rs_exp": 192, "everyon": 192, "blazingli": 192, "ms": 192, "promin": 192, "gradual": 192, "rs_": 192, "rs_log": 192, "rs_lambertw": 192, "rs_atan": 192, "arctang": 192, "rs_asin": 192, "_tan1": 192, "rs_cot": 192, "rs_cos_sin": 192, "rs_atanh": 192, "rs_sinh": 192, "rs_cosh": 192, "rs_tanh": 192, "rs_hadamard_exp": 192, "inver": 192, "rs_mul": 192, "rs_squar": 192, "rs_pow": 192, "rs_series_invers": 192, "rs_series_revers": 192, "a_kx_k": 192, "ar_i": 192, "ar_": 192, "ae": 192, "rs_trunc": 192, "rs_nth_root": 192, "160249952256379": 192, "44224957030741": 192, "rs_sub": 192, "rs_diff": 192, "rs_integr": 192, "rs_newton": 192, "rs_compose_add": 192, "r730": 192, "bostan": 192, "flajolet": 192, "schost": 192, "4579": 192, "institut": 192, "nation": 192, "recherch": 192, "informatiqu": 192, "automatiqu": 192, "rs_is_puiseux": 192, "rs_puiseux": 192, "rs_puiseux2": 192, "rs_series_from_list": 192, "concur": 192, "rs_fun": 192, "_tan": 192, "_nth": 192, "_root": 192, "_fun": 192, "mul_xin": 192, "pow_xin": 192, "_raw": 193, "unkown": 193, "eqs_r": 193, "eqs_coeff": 193, "eqs_rh": 193, "critiqu": 194, "wester1999": 194, "systemat": 194, "153": 194, "\u2124": [194, 195, 214, 271], "unm": 194, "driver": [195, 227], "adequ": 195, "emptyprint": 195, "_sympystr": 195, "mathml": 195, "inconveni": 195, "_print_": 195, "expr_class": 195, "hierarchi": [195, 215], "_print_rat": 195, "_print_numb": 195, "_print_atom": 195, "_print_bas": 195, "print_latex": 195, "mylatexprint": 195, "_print_deriv": 195, "print_my_latex": 195, "modop": 195, "subcompon": 195, "outermost": [195, 203, 207, 219], "modopmodewrong": 195, "modopnestedwrong": 195, "modopsettingswrong": 195, "subobject": 195, "infrastructur": [195, 212], "printer_exampl": 195, "set_global_set": 195, "stringpict": 195, "pretty_symbolog": 195, "prettyform": 195, "hline": 195, "vline": 195, "ascii": [195, 257], "_pretti": 195, "use_unicode_sqrt_char": 195, "root_not": 195, "mat_symbol_styl": 195, "prettifi": 195, "unambigu": [195, 211, 236], "bold": 195, "c89codeprint": 195, "print_ccod": 195, "tgamma": 195, "known_functions_c89": 195, "known_functions_c99": 195, "fmax": 195, "fmin": 195, "lgamma": 195, "indent_cod": 195, "functionclass": [195, 234], "cfunction_format": 195, "derefer": 195, "dereferenc": 195, "symbols_to_declar": 195, "not_supported_funct": 195, "code_text": 195, "m_sqrt2": 195, "math_macro": 195, "m_sqrt2l": 195, "cxx": 195, "cxx98codeprint": 195, "print_rcod": 195, "rcode": 195, "known_funct": 195, "_rcode": 195, "rfunction_str": 195, "rfunction_format": 195, "ifels": 195, "tweak": [195, 213], "type_map": 195, "name_mangl": 195, "mangl": 195, "floor1": 195, "floor2": 195, "print_fcod": 195, "_fcode": 195, "conjg": 195, "32768": 195, "7182818284590452d0": 195, "1415926535897932d0": 195, "718281828459045235360287d0": 195, "141592653589793238462643d0": 195, "869604401089358618834491d0": 195, "mygamma": 195, "allow_unknown_funct": 195, "coshintegr": 195, "cosintegr": 195, "expintegralei": 195, "factorialpow": 195, "heavisidetheta": 195, "sinhintegr": 195, "sinintegr": 195, "arccosh": 195, "arccoth": 195, "arcsinh": 195, "arctanh": 195, "dirichleteta": 195, "gegenbauerc": 195, "hypergeometricpfq": 195, "sphericalbesselj": 195, "logintegr": 195, "lucasl": 195, "riemann_xi": 195, "riemannxi": 195, "stieltjesgamma": 195, "sphericalbess": 195, "mcodeprint": 195, "_mcode": 195, "mcode": 195, "maplecodeprint": 195, "_mapl": 195, "maple_cod": 195, "print_maple_cod": 195, "javascriptcodeprint": 195, "_javascript": 195, "js_function_str": 195, "known_fcns_src1": 195, "known_fcns_src2": 195, "conj": 195, "juliacodeprint": 195, "_julia": 195, "harmless": [195, 266], "cosmet": 195, "pw": 195, "existing_julia_fcn": 195, "coshint": 195, "cosint": 195, "sinhint": 195, "sinint": 195, "bincoeff": 195, "logint": 195, "gammaln": 195, "octavecodeprint": 195, "_octav": 195, "recip": [195, 233], "powf": 195, "signum": 195, "rustcodeprint": 195, "_rust_cod": 195, "7_f64": 195, "_aesara": 195, "tensorvari": 195, "floatx": 195, "squeez": 195, "dim_handl": 195, "gtkmathview": 195, "widget": 195, "print_gtk": 195, "libgtkmathview": 195, "start_view": 195, "_lambdacod": 195, "accepted_latex_funct": 195, "parenthesize_sup": 195, "fold_frac_pow": 195, "fold_func_bracket": 195, "fold_short_frac": 195, "inv_trig_styl": 195, "itex": 195, "ln_notat": 195, "long_frac_ratio": 195, "mat_delim": 195, "mat_str": 195, "mul_symbol": 195, "symbol_nam": 195, "gothic_re_im": 195, "decimal_separ": 195, "diff_oper": 195, "smallmatrix": [195, 264], "amsmath": 195, "fracton": 195, "semicolon": 195, "monospac": 195, "mathtt": 195, "mathml2": 195, "mathmlprinterbas": 195, "mathmlcontentprint": 195, "mathmlpresentationprint": 195, "chapter4": 195, "_mathml_cont": 195, "mathml_tag": 195, "chapter3": 195, "_mathml_present": 195, "utf": 195, "mul_symbol_mathml_numb": 195, "xb7": 195, "print_mathml": [195, 269], "mrow": 195, "mpmathprint": 195, "fully_qualified_modul": 195, "print_python": 195, "textual": 195, "reprprint": 195, "_sympyrepr": 195, "reprifi": 195, "sympy_integ": 195, "displayhook": [195, 226], "pprint_nod": 195, "nb2": 195, "print_nod": 195, "asssumpt": 195, "determinisit": 195, "backtrac": 195, "print_tre": 195, "outputbuff": 195, "dvioption": 195, "outputtexfil": 195, "extra_preambl": 195, "latex_set": 195, "postscript": 195, "tex": 195, "eulervm": 195, "sty": 195, "debian": 195, "ubuntu": 195, "unset": [195, 207], "gimp": 195, "evinc": 195, "kdvi": 195, "xdvi": 195, "gracefulli": [195, 219], "generet": 195, "bytesio": 195, "usepackag": 195, "amsfont": 195, "renewcommand": 195, "popen": 195, "phidd": 195, "bitmap": 195, "split_super_sub": 195, "var_sub1__sup_sub2": 195, "assignmenterror": 195, "bitwiseand": 195, "bitwiseor": 195, "bitwisexor": 195, "precedence_valu": 195, "kroneckerproduct": 195, "negativeinfin": 195, "tensadd": [195, 221], "tensmul": [195, 221], "precedence_funct": 195, "precedence_float": 195, "precedence_fracel": 195, "precedence_integ": 195, "precedence_mul": 195, "precedence_polyel": 195, "precedence_r": 195, "unevaluatedexpr": [195, 265], "precedence_unevaluatedexpr": 195, "databas": [195, 205], "pretty_use_unicod": 195, "pretty_try_use_unicod": 195, "xstr": 195, "greek_lett": 195, "digit_2txt": 195, "ONE": 195, "seven": 195, "symb_2txt": 195, "parenthesi": [195, 219], "\u2080": 195, "\u2081": 195, "\u2082": 195, "\u2083": 195, "\u2084": 195, "\u2085": 195, "\u2086": 195, "\u2087": 195, "\u2088": 195, "\u2089": 195, "\u2090": 195, "\u1d66": 195, "\u1d6a": 195, "\u2091": 195, "\u1d67": 195, "\u2095": 195, "\u1d62": 195, "\u2096": 195, "\u2097": 195, "\u2098": 195, "\u2099": 195, "\u2092": 195, "\u209a": 195, "\u1d69": 195, "\u1d63": 195, "\u1d68": 195, "\u209b": 195, "\u209c": 195, "\u1d64": 195, "\u1d65": 195, "\u2093": 195, "\u2070": 195, "\u00b9": 195, "\u00b2": 195, "\u00b3": 195, "\u2074": 195, "\u2075": 195, "\u2076": 195, "\u2077": 195, "\u2078": 195, "\u2079": 195, "\u2071": 195, "\u207f": 195, "xobj": 195, "vobj": 195, "hobj": 195, "vf": 195, "\u00bd": 195, "\u2153": 195, "\u00bc": 195, "\u2155": 195, "\u2159": 195, "\u215b": 195, "\u2154": 195, "\u2156": 195, "\u00be": 195, "\u2157": 195, "\u215c": 195, "\u2158": 195, "\u215a": 195, "\u215d": 195, "\u215e": 195, "xsym": 195, "symbolog": 195, "atoms_t": 195, "\u2102": [195, 271], "emptysequ": [195, 201], "exp1": 195, "\u2115": 195, "\u2115\u2080": 195, "\u211d": [195, 271], "symmetricdiffer": [195, 214], "pretty_atom": 195, "atom_nam": 195, "pretty_symbol": 195, "symb_nam": 195, "bold_nam": 195, "stylis": 195, "_print_meijerg": 195, "_print_hyp": 195, "jurjen": 195, "bo": 195, "hate": 195, "spammer": 195, "pietjepuk314": 195, "oc": [195, 245], "oohai": 195, "gedg": 195, "email": 195, "my": [195, 259], "mun": 195, "terminal_str": 195, "baselin": 195, "leftslash": 195, "slash": [195, 226], "paren": 195, "ifascii_nougli": 195, "line_break": 195, "ugli": 195, "terminal_width": 195, "wider": 195, "maxdepth": 195, "labelfunc": 195, "digraph": [195, 233, 269], "rankdir": [195, 269], "_sparse_": 196, "flavor": 196, "________": [196, 215, 233], "x\u2080": 196, "greatli": 196, "numbered_symbol": [196, 207, 211, 233], "postprocessor": [196, 207], "reduced_expr": [196, 207], "formalpowerseri": 197, "coeff_bel": 197, "formalpowerseriescompos": 197, "r731": 197, "comtet": 197, "loui": 197, "reidel": 197, "1974": 197, "720": [197, 211, 233], "formalpowerseriesinvers": 197, "r732": 197, "upto": [197, 202, 211], "formalpowerseriesproduct": 197, "rational_algorithm": 197, "compute_fp": 197, "hyper_algorithm": 197, "omposit": 197, "bell_seq": 197, "finiteformalpowerseri": 197, "rational_independ": 197, "ra": 197, "admiss": [197, 200], "r733": 197, "r734": 197, "simpled": 197, "exp_r": 197, "explik": 197, "hyper_r": 197, "rsolve_hypergeometr": 197, "r735": 197, "r736": 197, "solve_d": 197, "fourierseri": 198, "scalex": 198, "shiftx": 198, "sigma_approxim": 198, "gibb": 198, "bigl": 198, "bigr": 198, "lanczo": 198, "r737": 198, "gibbs_phenomenon": 198, "r738": 198, "sawtooth": 198, "bn": 198, "r739": 198, "limitseq": 200, "difference_delta": 200, "r740": 200, "differencedelta": 200, "limit_seq": [200, 202], "safeguard": 200, "r741": 200, "kauer": 200, "seqper": 201, "seqformula": 201, "seqbas": 201, "coeff_mul": 201, "find_linear_recurr": 201, "gfvar": 201, "seqadd": 201, "seqmul": 201, "_mul": 201, "recursiveseq": 201, "fib": 201, "invok": [202, 226, 227], "workhors": 202, "succ": [202, 215], "asymp": 202, "exposit": 202, "gloss": 202, "wsym": 202, "test_rewrite1": 202, "build_expression_tre": 202, "mrv_leadterm": 202, "e0": 202, "calculate_seri": 202, "limitinf": 202, "leadsimp": 202, "constantli": 202, "subsset": 202, "mrv_max1": 202, "mrv_max3": 202, "expsf": 202, "expsg": 202, "expsboth": 202, "o2": 202, "do_sub": 202, "r742": 202, "7048138294": 202, "7182818285": 202, "6349839002": 202, "6449340668": 202, "shank": 202, "6881721793": 202, "6931396564": 202, "6931471806": 202, "6931471805599453094172321215": 202, "r743": 202, "residue_theorem": 202, "neighborhood": 203, "rim": 203, "affirm": 203, "infimum": 203, "is_clos": 203, "closed": 203, "is_disjoint": 203, "r744": 203, "disjoint_set": 203, "is_open": 203, "is_proper_subset": 203, "is_proper_superset": 203, "left_open": 203, "is_superset": 203, "isdisjoint": 203, "issubset": 203, "issuperset": 203, "fancyset": 203, "lebesgu": 203, "r745": 203, "power_set": 203, "symmetric_differ": 203, "r746": 203, "right_open": 203, "mpi": 203, "r747": 203, "interval_": 203, "as_rel": 203, "is_left_unbound": 203, "is_right_unbound": 203, "r748": 203, "r749": 203, "union_": 203, "28set_theori": 203, "r750": 203, "intersection_": 203, "coin": [203, 215], "r751": 203, "cartesian_product": 203, "is_iter": 203, "r752": 203, "complementset": 203, "r753": 203, "disjoint_union": 203, "r754": 203, "empty_set": 203, "r755": 203, "universal_set": 203, "flambda": 203, "square_iter": 203, "base_set": 203, "cartesiancomplexregion": 203, "polarcomplexregion": 203, "unit_disk": 203, "upper_half_unit_disk": 203, "a_interv": 203, "b_interv": 203, "from_real": 203, "pset": 203, "rset": 203, "thetaset": 203, "upper_half_plan": 203, "normalize_theta_set": 203, "r756": 203, "r757": 203, "axiom_of_power_set": 203, "varnoth": 203, "sin_sol": 203, "r758": 203, "element_": 203, "tr0": 204, "tr1": 204, "tr2": 204, "tr2i": 204, "tr3": 204, "tr4": 204, "tr5": 204, "tr6": 204, "tr7": 204, "tr8": 204, "tr9": 204, "tr10": 204, "tr10i": 204, "tr11": 204, "tr12": 204, "tr12i": 204, "tr13": 204, "trmorri": 204, "tr14": 204, "tr15": 204, "tr16": 204, "tr22": 204, "tr111": 204, "ctr1": 204, "ctr4": 204, "rl1": 204, "rl2": 204, "deem": 204, "932": 204, "016": 204, "serendipit": 204, "dead": 204, "newa": 204, "lucki": 204, "sqt": 204, "_tr56": 204, "un": [204, 205], "r759": 204, "morri": 204, "27s_law": 204, "trpower": 204, "r760": 204, "list_of_trigonometric_ident": 204, "reduction_formula": 204, "ctr2": 204, "ctr3": 204, "r761": 204, "657": 204, "2478": 204, "dimitar": 204, "vlahovski": 204, "technolog": 204, "xiuqin": 204, "zhong": 204, "zhenb": 204, "zeng": 204, "1169": 204, "1177": 204, "sosmath": 204, "trig5": 204, "symplifi": [205, 207], "roach1996": 205, "roach1997": 205, "p_q": 205, "reachabl": [205, 215], "f_q": 205, "undo": [205, 270], "whenc": 205, "game": 205, "twofold": 205, "incongru": 205, "wlog": 205, "alpha_r": 205, "beta_r": 205, "blindli": 205, "messi": 205, "k_u": 205, "l_v": 205, "k_j": 205, "c_w": 205, "r_j": 205, "l_u": 205, "res_": 205, "delta_i": 205, "add_formula": 205, "addb": 205, "sum_0": 205, "test_hyperexpand": 205, "test_formula": 205, "typo": 205, "suboptim": 205, "imath": 205, "b1prime": 205, "vital": [205, 215], "308": 205, "nthroot": 206, "kroneckersimp": 206, "besselsimp": 206, "hypersimilar": 206, "epath": 206, "hongguang": [206, 251], "fu": [206, 207, 251], "unmodifi": 207, "my_measur": 207, "boolian": 207, "max_len": 207, "surd": 207, "strigonometr": 207, "399": 207, "rational_convers": 207, "base10": 207, "6004799503160655": 207, "nfloat": 207, "eq_x": 207, "max_term": 207, "polish": 207, "expand_power_bas": 207, "rcollect": 207, "analyz": [207, 220], "r762": 207, "pearc": 207, "summari": [207, 226, 250], "163": 207, "6984": 207, "trigsimp_groebn": 207, "bb1": 207, "be1": 207, "bb2": 207, "be2": 207, "bei": 207, "max_it": 207, "unrad": [207, 213], "r763": 207, "ibm": 207, "fagin": 207, "symb85": 207, "r764": 207, "cybertest": 207, "opt_sub": 207, "as_unevaluated_bas": 207, "hyperegeometr": 207, "epathtool": 207, "ebnf": 207, "za": [207, 215], "xml": 207, "xpath": 207, "hasattr": [207, 229], "diophantu": 208, "mathematician": [208, 214], "citi": 208, "alexandria": 208, "father": 208, "hi": 208, "arithmetica": 208, "a_1x_1": 208, "a_2x_2": 208, "a_nx_n": 208, "bxy": 208, "cy": 208, "dxy": 208, "eyz": 208, "fzx": 208, "pythagorean": 208, "3y": 208, "4ac": 208, "9369318": 208, "920": 208, "5y": 208, "BY": 208, "t4": 208, "t5": 208, "providean": 208, "eqyptian": 208, "thilinaatsympi": 208, "andreescu": 208, "titu": 208, "andrica": 208, "dorin": 208, "cucurezeanu": 208, "ion": 208, "diophantineequ": 208, "alpertron": 208, "20160323033111": 208, "jpr2718": 208, "ax2p": 208, "permute_sign": [208, 233], "signed_permut": [208, 233], "_dict": 208, "r765": 208, "r766": 208, "pell": 208, "lmm": 208, "r767": 208, "393": 208, "13y": 208, "986": 208, "49299": 208, "1570": 208, "robertson": 208, "20160323033128": 208, "r768": 208, "nitaj": 208, "r769": 208, "numbertheori": 208, "r770": 208, "r771": 208, "676": 208, "884": 208, "fxz": 208, "3xy": 208, "r772": 208, "fxy": 208, "gyz": 208, "hxz": 208, "r773": 208, "cremona": 208, "rusin": 208, "2x_": 208, "m4": 208, "general_sum_of_squar": 208, "8m": 208, "r774": 208, "2345": 208, "proofwiki": 208, "integer_as_sum_of_three_squar": 208, "general_sum_of_even_pow": 208, "1729": 208, "stopiter": 208, "r775": 208, "44542": 208, "207": 208, "schorn": 208, "3456": 208, "1294585930293": 208, "2161": 208, "1137796": 208, "r776": 208, "evenli": 208, "var_t": 208, "r777": 208, "ur": 208, "dv": 208, "vr": 208, "r778": 208, "r779": 208, "nigel": 208, "y_0": [208, 211], "4x": [208, 214, 259], "5x": 208, "r780": 208, "r781": 208, "eprint": 208, "nottingham": 208, "uk": 208, "kvxefz87": 208, "r782": 208, "cuhk": 208, "hk": 208, "wkshum": 208, "404": 208, "r783": 208, "mordel": 208, "r784": 208, "r785": 208, "r786": 208, "r787": 208, "legrang": 208, "csusm": 208, "aitken_html": 208, "symbols_seq": 208, "dict_iter": 208, "r788": 208, "r789": 208, "inhomogen": [208, 211, 213], "r790": 208, "thue": 208, "riccati": 209, "pde": [209, 211], "deutil": [209, 211, 212], "linear_eq_to_matrix": [209, 211], "transolv": 209, "solve_rational_inequ": 210, "solve_poly_inequ": 210, "reduce_rational_inequ": 210, "reduce_abs_inequ": 210, "reduce_inequ": 210, "solve_univariate_inequ": [210, 214], "solvifi": [210, 214], "autodetect": [211, 212], "ode_ord": [211, 212, 213], "best_hint": 211, "all_integr": [211, 212], "_integr": [211, 212], "unevaluat": 211, "test_od": 211, "ode_": 211, "hintnam": [211, 212], "classify_sysod": 211, "ode_hintnam": 211, "tough": 211, "nth_linear_homogeneous_constant_coeff_integr": 211, "nth_linear": 211, "indep": 211, "indep_div_dep": 211, "undetermined_coeffici": 211, "_best": 211, "nth_algebraic_integr": 211, "separable_integr": 211, "1st_exact_integr": 211, "1st_linear_integr": 211, "bernoulli_integr": 211, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 211, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 211, "nth_linear_constant_coeff_variation_of_parameters_integr": 211, "solve_for_func": [211, 212], "homogeneouscoeffsubsdepdivindep": 211, "homogeneouscoeffsubsindepdivdep": 211, "varepsilon": 211, "genform": [211, 212], "starrett": 211, "symbolnam": 211, "startnumb": 211, "endnumb": 211, "renumb": 211, "absorpt": 211, "assist": 211, "2nd_hypergeometric_integr": 211, "almost_linear_integr": 211, "linear_coefficients_integr": 211, "separable_reduced_integr": 211, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 211, "liouville_integr": 211, "2nd_nonlinear_autonomous_conserv": 211, "2nd_nonlinear_autonomous_conserved_integr": 211, "newconst": 211, "ode_sol_simpl": 211, "trysolv": 211, "sola": 211, "solb": 211, "listofsolut": 211, "ode_problem": 211, "firstexact": 211, "exact_differential_equ": 211, "tenenbaum": 211, "dover": 211, "1963": 211, "homogeneouscoeffbest": 211, "ode_1st_homogeneous_coeff_best_integr": 211, "homogeneous_differential_equ": 211, "firstlinear": 211, "linear_differential_equ": 211, "first_order_equ": 211, "rationalriccati": 211, "atleast": 211, "riccati_equ": 211, "thieu": 211, "vo": 211, "www3": [211, 240], "risc_5387": 211, "phdthesisthieu": 211, "secondlinearairi": 211, "secondlinearbessel": 211, "math24": 211, "bernoulli_differential_equ": 211, "goldstein": 211, "braun": 211, "maplesoft": 211, "aspx": 211, "odeadvisor": 211, "riccatispeci": 211, "__________________": 211, "eqworld": 211, "ipmnet": 211, "ru": 211, "ode0106": 211, "ode0123": 211, "nthlinearconstantcoeffhomogen": 211, "nth_linear_constant_coeff_homogeneous_integr": 211, "nonhomogeneous_equation_with_constant_coeffici": 211, "nthlinearconstantcoeffundeterminedcoeffici": 211, "method_of_undetermined_coeffici": 211, "221": 211, "nthlinearconstantcoeffvariationofparamet": 211, "cramer": 211, "variation_of_paramet": 211, "planetmath": 211, "variationofparamet": 211, "nthlineareulereqhomogen": 211, "equidimension": 211, "nth_linear_euler_eq_homogeneous_integr": 211, "sollist": 211, "93euler_equ": 211, "bender": 211, "orszag": 211, "scientist": 211, "nthlineareulereqnonhomogeneousvariationofparamet": 211, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 211, "nthalgebra": 211, "nthorderreduc": 211, "caught": 211, "fault": 211, "almostlinear": 211, "first_linear": 211, "joel": 211, "mose": 211, "stormi": 211, "decad": 211, "august": [211, 230], "558": 211, "linearcoeffici": 211, "separablereduc": 211, "liegroup": 211, "ds": 211, "secondhypergeometr": 211, "2f1": 211, "1f1": 211, "0f1": 211, "liouvillian": 211, "pfq": 211, "chan": 211, "cheb": 211, "terrab": 211, "ode_1st_power_seri": 211, "travi": [211, 226], "walker": 211, "ode_2nd_power_series_ordinari": 211, "lamar": 211, "seriessolut": 211, "simmon": 211, "176": 211, "ode_2nd_power_series_regular": 211, "lie_heuristic_abaco1_simpl": 211, "duart": 211, "da": 211, "mota": 211, "lie_heuristic_abaco1_product": 211, "roch": 211, "lie_heuristic_bivari": 211, "329": 211, "lie_heuristic_chi": 211, "lie_heuristic_abaco2_similar": 211, "lie_heuristic_function_sum": 211, "lie_heuristic_abaco2_unique_unknown": 211, "lie_heuristic_abaco2_unique_gener": 211, "lie_heuristic_linear": 211, "gy": 211, "bh": 211, "impract": 211, "val_inf": 211, "ybar": 211, "numa": 211, "dena": 211, "numi": 211, "deni": 211, "sol1": 211, "sol2": 211, "part_sol": 211, "haaheim": 211, "gensol": 211, "_linear_2eq_order1_type6": 211, "_linear_2eq_order1_type7": 211, "fgp": 211, "ag": 211, "bg": 211, "linear_ode_to_matrix": 211, "odeordererror": 211, "odenonlinearerror": 211, "eqs_mat": 211, "r791": 211, "matrix_differential_equ": 211, "canonical_od": 211, "canonical_eq": 211, "canonical_system": 211, "linodesolve_typ": 211, "type1": 211, "type2": 211, "type3": 211, "type4": 211, "type5": 211, "type6": 211, "type_of_equ": 211, "a_t": 211, "a_non_commut": 211, "matrix_exp_jordan_form": 211, "expj": 211, "matrix_exp": 211, "defect": 211, "p_invers": 211, "r792": 211, "defective_matrix": 211, "r793": 211, "r794": 211, "jordan_normal_form": 211, "comupt": 211, "r795": 211, "r796": 211, "matrix_exponenti": 211, "follw": 211, "antiderv": 211, "subscheck": 211, "system_info": 211, "sol_vector": 211, "sol_vector_evalu": 211, "_nonlinear_2eq_order1_type1": 211, "_nonlinear_2eq_order1_type2": 211, "_nonlinear_2eq_order1_type3": 211, "autonom": 211, "_nonlinear_2eq_order1_type4": 211, "_nonlinear_2eq_order1_type5": 211, "clairaut": 211, "envelop": 211, "_nonlinear_3eq_order1_type1": 211, "enspac": [211, 214], "sysod": 211, "sode0401": 211, "_nonlinear_3eq_order1_type2": 211, "sode0402": 211, "_nonlinear_3eq_order1_type3": 211, "sode0404": 211, "_nonlinear_3eq_order1_type4": 211, "sode0405": 211, "_nonlinear_3eq_order1_type5": 211, "sode0406": 211, "_handle_integr": 211, "gather": 211, "unhind": 211, "wolphramalpha": 211, "detool": 211, "hint_integr": 211, "alphanumer": 211, "hinder": 211, "matching_hint": 211, "matchdict": 211, "1st_homogeneous_coeff": 211, "your_hint": 211, "xfail": [211, 224, 226], "fun": [212, 263], "uxt": 212, "uxi": 212, "solvefun": 212, "test_pd": 212, "pde_hintnam": 212, "ux": 212, "uy": 212, "allhint": 212, "1st_linear_constant_coeff_homogen": 212, "_preprocess": 212, "inabl": 212, "_xi_1": 212, "viktor": 212, "grigoryan": 212, "124a": 212, "substack": 212, "1st_linear_constant_coeff_integr": 212, "du": 212, "inspir": [212, 266], "pde_hint": 212, "checksol": 213, "ect": 213, "elim": 213, "dicontinu": 213, "052": 213, "cov": 213, "pval": 213, "xval": 213, "rsolv": 213, "solve_linear": 213, "solve_linear_system": 213, "overdetermin": [213, 214], "msymbol": 213, "degener": [213, 214], "solve_linear_system_lu": 213, "solve_undetermined_coeff": 213, "equ": 213, "obligatori": 213, "19287309935246": 213, "27844411169911": 213, "73908513321516064165531208767387340401341175890076": 213, "steep": 213, "39267e": 213, "1684e": 213, "588469032184": 213, "315": 213, "730061685774": 213, "46792545969349058": 213, "inconclus": 213, "init": 213, "dissimilar": 213, "v_0": 213, "n_m": 213, "v_m": 213, "rsolve_poli": 213, "rsolve_ratio": 213, "r797": 213, "levelt": 213, "290": [213, 242], "296": 213, "r798": 213, "r799": 213, "revis": 213, "r800": 213, "289": 213, "alembertian": 213, "r801": 213, "r802": 213, "polysi": 213, "solve_triangul": 213, "kalkbrenn": 213, "patrizia": 213, "teo": 213, "aaecc": 213, "minima": 214, "conditionset": [214, 215, 271], "productset": 214, "imageset": [214, 271], "complexregion": 214, "uncount": 214, "bizarr": 214, "her": 214, "sol_f": 214, "solveset_r": 214, "solveset_complex": 214, "methodolog": [214, 263], "_solve_real_trig": 214, "invert_r": 214, "invert_complex": 214, "_solve_rad": 214, "_solve_ab": 214, "_solve_as_r": 214, "_solve_as_poly_r": 214, "_solve_as_poly_complex": 214, "_solve_as_poli": 214, "gsoc": 214, "2014": [214, 215], "iamit": 214, "2948": 214, "6659": 214, "7523": 214, "sibx0afl3q": 214, "9696": 214, "27s_theorem": 214, "inftyright": 214, "nright": 214, "0right": 214, "domain_check": 214, "3z": 214, "9z": 214, "nonlinearerror": 214, "4z": 214, "cccc": 214, "eq3": 214, "eq4": 214, "391": 214, "_solve_system": 214, "_solve_using_known_valu": 214, "_transolv": 214, "_tsolv": 214, "tsolv": 214, "outright": 214, "tractabl": 214, "interf": 214, "add_typ": 214, "_is_exponenti": 214, "new_eq": 214, "_solve_exponenti": 214, "_is_class": 214, "_solve_class": 214, "_solve_expo": 214, "9x": 214, "solve_expo": 214, "log_b": 214, "_solve_logarithm": 214, "solve_log": 214, "_is_logarithm": 214, "prebuilt": 215, "finiterv": 215, "varianc": 215, "densiti": [215, 226, 249], "dice": 215, "continuousrv": 215, "continuousdistributionhandmad": 215, "dist": 215, "discreterv": 215, "discretedistributionhandmad": 215, "pmf": 215, "finitedistributionhandmad": 215, "discreteuniform": 215, "randomsymbol": 215, "r803": 215, "discrete_uniform_distribut": 215, "r804": 215, "discreteuniformdistribut": 215, "d6": 215, "diedistribut": 215, "toss": 215, "r805": 215, "bernoulli_distribut": 215, "r806": 215, "bernoullidistribut": 215, "numeb": 215, "unfair": 215, "r807": 215, "coin_flip": 215, "binomialdistribut": 215, "r808": 215, "binomial_distribut": 215, "r809": 215, "betabinomi": 215, "r810": 215, "r811": 215, "betabinomialdistribut": 215, "popul": 215, "marbl": 215, "r812": 215, "hypergeometric_distribut": 215, "r813": 215, "hypergeometricdistribut": 215, "700000000000000": 215, "r814": 215, "rademacher_distribut": 215, "r815": 215, "geometric_distribut": 215, "r816": 215, "geometricdistribut": 215, "r817": 215, "hermite_distribut": 215, "poisson": 215, "r818": 215, "poisson_distribut": 215, "r819": 215, "poissondistribut": 215, "r820": 215, "logarithmic_distribut": 215, "r821": 215, "logarithmicdistribut": 215, "negativebinomi": 215, "r822": 215, "negative_binomial_distribut": 215, "r823": 215, "negativebinomialdistribut": 215, "skellam": 215, "mu1": 215, "mu2": 215, "mu_1": 215, "mu_2": 215, "i_k": 215, "r824": 215, "skellam_distribut": 215, "yulesimon": 215, "yule": 215, "simon": 215, "r825": 215, "93simon_distribut": 215, "8100": 215, "r826": 215, "zeta_distribut": 215, "cdf": 215, "r827": 215, "arcsine_distribut": 215, "benini": 215, "r828": 215, "benini_distribut": 215, "r829": 215, "v8": 215, "beninidistribut": 215, "r830": 215, "beta_distribut": 215, "r831": 215, "betadistribut": 215, "betanoncentr": 215, "noncentr": 215, "r832": 215, "noncentral_beta_distribut": 215, "r833": 215, "noncentralbetadistribut": 215, "betaprim": 215, "r834": 215, "beta_prime_distribut": 215, "r835": 215, "betaprimedistribut": 215, "boundedpareto": 215, "pareto": 215, "r836": 215, "pareto_distribut": 215, "bounded_pareto_distribut": 215, "r837": 215, "cauchy_distribut": 215, "r838": 215, "cauchydistribut": 215, "r839": 215, "chi_distribut": 215, "r840": 215, "chidistribut": 215, "chinoncentr": 215, "r841": 215, "noncentral_chi_distribut": 215, "chisquar": 215, "r842": 215, "chi_squared_distribut": 215, "r843": 215, "squareddistribut": 215, "dagum": 215, "r844": 215, "dagum_distribut": 215, "erlang": 215, "r845": 215, "erlang_distribut": 215, "r846": 215, "erlangdistribut": 215, "exgaussian": 215, "emg": 215, "r847": 215, "exponentially_modified_gaussian_distribut": 215, "quantil": 215, "r848": 215, "exponential_distribut": 215, "r849": 215, "exponentialdistribut": 215, "fdistribut": 215, "______________________________": 215, "r850": 215, "r851": 215, "fisherz": 215, "fisher": 215, "2d_1": 215, "d_1z": 215, "d_1e": 215, "r852": 215, "27s_z": 215, "r853": 215, "fishersz": 215, "frechet": 215, "r854": 215, "a9chet_distribut": 215, "r855": 215, "gamma_distribut": 215, "r856": 215, "gammadistribut": 215, "gammainvers": 215, "r857": 215, "gompertz": 215, "r858": 215, "gompertz_distribut": 215, "gumbel": 215, "dfrac": 215, "r859": 215, "gumbeldistribut": 215, "r860": 215, "gumbel_distribut": 215, "r861": 215, "mathwav": 215, "easyfit": 215, "gumbel_max": 215, "r862": 215, "gumbel_min": 215, "kumaraswami": 215, "r863": 215, "kumaraswamy_distribut": 215, "r864": 215, "laplace_distribut": 215, "r865": 215, "laplacedistribut": 215, "r866": 215, "a9vy_distribut": 215, "r867": 215, "levydistribut": 215, "logist": 215, "r868": 215, "logistic_distribut": 215, "r869": 215, "logisticdistribut": 215, "loglogist": 215, "unimod": 215, "r870": 215, "lognorm": 215, "r871": 215, "r872": 215, "lognormaldistribut": 215, "lomax": 215, "r873": 215, "lomax_distribut": 215, "maxwel": 215, "2a": 215, "r874": 215, "maxwell_distribut": 215, "r875": 215, "maxwelldistribut": 215, "moyal": 215, "r876": 215, "moyaldistribut": 215, "r877": 215, "rice": 215, "dobelman": 215, "textfil": 215, "distributionshandbook": 215, "nakagami": 215, "r878": 215, "nakagami_distribut": 215, "marginal_distribut": 215, "r879": 215, "normal_distribut": 215, "r880": 215, "normaldistributionfunct": 215, "xm": 215, "x_m": 215, "r881": 215, "r882": 215, "paretodistribut": 215, "powerfunct": 215, "paramat": 215, "r883": 215, "power_func": 215, "quadraticu": 215, "r884": 215, "quadratic_distribut": 215, "raisedcosin": 215, "2s": 215, "r885": 215, "raised_cosine_distribut": 215, "r886": 215, "rayleigh_distribut": 215, "r887": 215, "rayleighdistribut": 215, "r888": 215, "reciprocal_distribut": 215, "studentt": 215, "r889": 215, "student_t": 215, "r890": 215, "studentst": 215, "shiftedgompertz": 215, "r891": 215, "shifted_gompertz_distribut": 215, "r892": 215, "trapezoidal_distribut": 215, "r893": 215, "triangular_distribut": 215, "r894": 215, "triangulardistribut": 215, "r895": 215, "uniform_distribution_": 215, "28continu": 215, "r896": 215, "uniformdistribut": 215, "uniformsum": 215, "irwin": 215, "r897": 215, "uniform_sum_distribut": 215, "r898": 215, "uniformsumdistribut": 215, "vonmis": 215, "mise": 215, "i_0": 215, "r899": 215, "von_mises_distribut": 215, "r900": 215, "vonmisesdistribut": 215, "wald": 215, "gaussianinvers": 215, "r901": 215, "inverse_gaussian_distribut": 215, "r902": 215, "inversegaussiandistribut": 215, "weibul": 215, "geq0": 215, "r903": 215, "weibull_distribut": 215, "r904": 215, "weibulldistribut": 215, "wignersemicircl": 215, "semicircl": 215, "frac2": 215, "r905": 215, "wigner_semicircle_distribut": 215, "r906": 215, "wignerssemicirclelaw": 215, "jointrv": 215, "_set": 215, "multivariatenorm": 215, "noninvert": 215, "ob": 215, "r907": 215, "multivariate_normal_distribut": 215, "multivariatelaplac": 215, "r908": 215, "multivariate_laplace_distribut": 215, "generalizedmultivariateloggamma": 215, "joint_rv_typ": 215, "gd": 215, "y_3": 215, "gmvlg": 215, "generalizedmultivariateloggammaomega": 215, "r909": 215, "generalized_multivariate_log": 215, "r910": 215, "234137346_on_a_multivariate_log": 215, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 215, "correl": 215, "gmvlgo": 215, "r911": 215, "r912": 215, "r913": 215, "multinomial_distribut": 215, "r914": 215, "multinomialdistribut": 215, "multivariatebeta": 215, "r915": 215, "dirichlet_distribut": 215, "r916": 215, "dirichletdistribut": 215, "multivariateewen": 215, "ewen": 215, "r917": 215, "27s_sampling_formula": 215, "r918": 215, "rutger": 215, "hcrane": 215, "sts529": 215, "multivariatet": 215, "negativemultinomi": 215, "n_c": 215, "r919": 215, "negative_multinomial_distribut": 215, "r920": 215, "normalgamma": 215, "r921": 215, "discretemarkovchain": 215, "state_spac": 215, "trans_prob": 215, "markov": 215, "characteris": 215, "transitionmatrixof": 215, "ys": 215, "transition_prob": 215, "sunni": 215, "cloudi": 215, "raini": 215, "randomindexedsymbol": 215, "409": 215, "6963328": 215, "3096": 215, "query_gt": 215, "64705": 215, "r922": 215, "markov_chain": 215, "time_markov_chain": 215, "r923": 215, "dartmouth": 215, "teaching_aid": 215, "books_articl": 215, "probability_book": 215, "chapter11": 215, "canonical_form": 215, "transient": 215, "p_new": 215, "new_matrix": 215, "communication_class": 215, "r924": 215, "onlinelibrari": 215, "wilei": 215, "1002": 215, "9780470316887": 215, "app1": 215, "r925": 215, "columbia": 215, "ww2040": 215, "6711f12": 215, "lect1023big": 215, "is_recurr": 215, "tarjan": [215, 233], "r926": 215, "4701sum07": 215, "4701": 215, "mcii": 215, "r927": 215, "ceca": 215, "clemson": 215, "shierd": 215, "shier": 215, "r928": 215, "ujcont": 215, "uj": 215, "7506": 215, "content1": 215, "r929": 215, "econ": 215, "dtmc": 215, "reccur": 215, "r930": 215, "absorbing_markov_chain": 215, "r931": 215, "brandei": 215, "igusa": 215, "math56as08": 215, "math56a_s08_notes015": 215, "fixed_row_vector": 215, "stationary_distribut": 215, "fundamental_matrix": 215, "r932": 215, "lip": 215, "limiting_distribut": 215, "condition_set": 215, "wm": 215, "r933": 215, "probabilitycours": 215, "11_2_6_stationary_and_limiting_distribut": 215, "r934": 215, "galton": 215, "uchicago": 215, "yibi": 215, "stat317": 215, "lecture4_6up": 215, "continuousmarkovchain": 215, "gen_mat": 215, "generator_matrix": 215, "45279": 215, "58602": 215, "37933": 215, "34211": 215, "7143": 215, "4002723175": 215, "6832579186": 215, "r935": 215, "r936": 215, "biu": 215, "il": 215, "amirgi": 215, "ctmcnote": 215, "bernoulliprocess": 215, "processs": 215, "joint_distribut": 215, "jointdistributionhandmad": 215, "r937": 215, "bernoulli_process": 215, "r938": 215, "mathc": 215, "clarku": 215, "djoyc": 215, "ma217": 215, "given_condit": 215, "poissonprocess": 215, "648": 215, "r939": 215, "11_0_0_intro": 215, "r940": 215, "poisson_point_process": 215, "wiener": 215, "brownian": 215, "scottish": 215, "botanist": 215, "r941": 215, "11_4_0_brownian_motion_wiener_process": 215, "r942": 215, "wiener_process": 215, "gammaprocess": 215, "jump": [215, 270], "472": 215, "r943": 215, "gamma_process": 215, "matrixgamma": 215, "scale_matrix": 215, "r944": 215, "matrix_gamma_distribut": 215, "wishart": 215, "r945": 215, "wishart_distribut": 215, "matrixnorm": 215, "location_matrix": 215, "scale_matrix_1": 215, "scale_matrix_2": 215, "r946": 215, "matrix_normal_distribut": 215, "compound_rv": 215, "compounddistribut": 215, "crv_type": 215, "r947": 215, "compound_probability_distribut": 215, "numsampl": 215, "evaluate_integr": 215, "r948": 215, "entropy_": 215, "information_theori": 215, "r949": 215, "crmarsh": 215, "charles_marsh_continuous_entropi": 215, "r950": 215, "uconn": 215, "kconrad": 215, "blurb": 215, "entropypost": 215, "arg1": 215, "arg2": 215, "cexpr": 215, "coskew": 215, "sigma_": 215, "r951": 215, "r952": 215, "probability_distribut": 215, "randomst": 215, "die_rol": 215, "samp": 215, "pspace": 215, "samp_list": 215, "sam": 215, "42519758": 215, "40207856": 215, "94991743": 215, "85819627": 215, "83403519": 215, "9412172": 215, "85768055": 215, "38954165": 215, "11163337": 215, "3176591": 215, "79115232": 215, "63232916": 215, "01747268": 215, "96716083": 215, "sampling_p": 215, "sampling_": 215, "factorial_mo": 215, "r953": 215, "r954": 215, "factorialmo": 215, "kurtosi": 215, "outlier": 215, "sigma_x": 215, "r955": 215, "r956": 215, "asymmetri": 215, "pearson": 215, "sampling_dens": 215, "centralmo": 215, "cmoment": 215, "expectationmatrix": 215, "randommatrixsymbol": 215, "n11": 215, "n12": 215, "n21": 215, "n22": 215, "variancematrix": 215, "crosscovariancematrix": 215, "randomdomain": 215, "probabilist": 215, "singledomain": 215, "singlepspac": 215, "productdomain": 215, "productpspac": 215, "adject": 215, "conditionaldomain": 215, "frv": 215, "finitedomain": 215, "finitepspac": 215, "crv": 215, "continuousdomain": 215, "continuouspspac": 215, "diepspac": 215, "singlefinitepspac": 215, "normalpspac": 215, "singlecontinuouspspac": 215, "frv_type": 215, "randomvari": 215, "tactic": 215, "random_symbol": 215, "rs_swap": 215, "pspace1": 215, "pspace2": 215, "immutabledensendimarrai": 216, "tomatrix": 216, "j_m": 216, "i_a": 216, "i_b": 216, "sum_k": 216, "tensorcontract": [216, 217], "tensordiagon": [216, 217], "derive_by_arrai": 216, "sum_m": 216, "immutablesparsendimarrai": 216, "mutabledensendimarrai": 216, "mutablesparsendimarrai": 216, "index_order_old": 216, "index_order_new": 216, "cab": 216, "contraction_ax": 216, "diagonal_ax": 216, "arraycontract": 217, "arraydiagon": 217, "arraysymbol": 217, "convert_indexed_to_arrai": 217, "arrayadd": 217, "convert_matrix_to_arrai": 217, "convert_array_to_matrix": 217, "expr_tr": 217, "array_der": 217, "index_method": 219, "get_contraction_structur": [219, 220], "deepest": 219, "nested_contract": 219, "get_indic": [219, 220, 221, 222], "indexconformanceexcept": 219, "______": 220, "stem": 220, "dim1": 220, "dim2": 220, "qwerti": 220, "a_ij": 220, "b_ij": 220, "syntact": 220, "a_real": 220, "c_inherit": 220, "c_explicit": 220, "unrol": 220, "tensorindextyp": [221, 222], "eps_dim": 221, "metric_nam": 221, "metirc": 221, "su": 221, "lorentz": 221, "tensor_index_typ": 221, "is_up": 221, "tensor_inde_typ": 221, "typ": 221, "tensorhead": [221, 222], "index_typ": 221, "tensorsymmetri": 221, "monoterm": 221, "_tensormanag": 221, "set_comm": 221, "asym2": 221, "fully_symmetr": 221, "tensori": [221, 222], "repl": 221, "e_z": 221, "no_symmetri": 221, "p_x": 221, "p_y": 221, "p_z": 221, "ipos1": 221, "ipos2": 221, "icomp1": 221, "icomp2": 221, "nameless": 221, "replacement_dict": 221, "free_arg": 221, "addend": 221, "canon_bp": 221, "contract_metr": 221, "contract_al": 221, "ipo": 221, "icomp": 221, "nonrep": 221, "dum": 221, "ext_rank": 221, "is_canon_bp": 221, "m0": 221, "get_free_indic": [221, 222], "perm2tensor": 221, "tid": 221, "sorted_compon": 221, "riemann_cyclic_replac": 221, "riemann_cycl": 221, "cadabra": 221, "multiterm": 221, "bianchi": 221, "sym2": 221, "direct_product": 221, "monotorem": 221, "tableaux": 221, "tensortyp": 221, "repetit": [221, 233], "tensormanag": 221, "comm_i2symbol": 221, "comm_symbols2i": 221, "get_comm": 221, "gcomm": 221, "ghcomm": 221, "toper": 222, "partialderiv": 222, "valenc": 222, "uncontract": 222, "compa": 222, "compb": 222, "derivand": 222, "xpass": [224, 226], "nocache_fail": 224, "expectedexcept": 224, "assertionerror": 224, "exceptioninfo": 224, "abort": 224, "9999": 224, "warningcl": [224, 231], "test_stacklevel": 224, "randtest": 225, "portabl": [226, 227], "pytestreport": 226, "force_color": 226, "readlin": 226, "sympydoctestfind": 226, "doctestpars": 226, "exclude_empti": 226, "sympydoctestrunn": 226, "checker": 226, "optionflag": 226, "5140": 226, "doctestrunn": 226, "clear_glob": 226, "writer": 226, "garbag": 226, "check_output": 226, "report_": 226, "sympyoutputcheck": 226, "outputcheck": 226, "stdlib": 226, "testrunn": 226, "sympytestresult": 226, "convert_to_native_path": 226, "lst": 226, "blacklist": 226, "get_sympy_dir": 226, "raise_on_deprec": 226, "deprecationwarn": [226, 231], "run_all_test": 226, "test_arg": 226, "test_kwarg": 226, "doctest_arg": 226, "doctest_kwarg": 226, "examples_arg": 226, "examples_kwarg": 226, "run_in_subprocess_with_hash_random": 226, "function_kwarg": 226, "virtualenv": 226, "pythonhashse": 226, "_test": 226, "split_list": 226, "sympytestfil": 226, "module_rel": 226, "extraglob": 226, "raise_on_error": 226, "basenam": [226, 227, 228], "slate": 226, "dont_accept_true_for_1": 226, "dont_accept_blanklin": 226, "normalize_whitespac": 226, "ellipsi": 226, "ignore_exception_detail": 226, "report_udiff": 226, "report_cdiff": 226, "report_ndiff": 226, "report_only_first_failur": 226, "mortem": 226, "tomfooleri": 226, "testmod": 226, "tester": 226, "fiddl": [226, 270], "timeout": 226, "keyboardinterrupt": 226, "interrupt": 226, "_basic": 226, "kw": 226, "test_equ": 226, "pdb": 226, "pipe": 226, "time_bal": 226, "tandem": 227, "matvec": 227, "codewrapp": 227, "distutil": 227, "fwrap": 227, "swig": 227, "binary_cal": 227, "22925376": 227, "25165824": 227, "_imp_": [227, 234], "filepath": 227, "cythoncodewrapp": 227, "dump_pyx": 227, "dummywrapp": 227, "f2pycodewrapp": 227, "ufuncifycodewrapp": 227, "dump_c": [227, 228], "funcnam": 227, "code_gen": [227, 228], "argument_tupl": 227, "include_dir": 227, "library_dir": 227, "extra_compile_arg": 227, "extra_link_arg": 227, "symfunc": [227, 234], "funtion_nam": 227, "ndimension": 227, "f_fortran": 227, "f_cython": 227, "r957": 227, "fortran77": 228, "fortran90": 228, "julia": [228, 258], "rust": [228, 258], "mileston": 228, "unsurmount": 228, "pyf": 228, "inputoutput": 228, "tcc": 228, "libtcc": 228, "date": 228, "hostnam": 228, "sha1": 228, "ccodegen": 228, "preprocessor_stat": 228, "dump_h": 228, "guard": 228, "get_prototyp": 228, "codegenerror": 228, "function_prototyp": 228, "dump_cod": 228, "cname": 228, "fname": 228, "pynam": 228, "jlname": 228, "octnam": 228, "rsname": 228, "fcodegen": 228, "f90": 228, "dump_f95": 228, "get_interfac": 228, "juliacodegen": 228, "dump_jl": 228, "octavecodegen": 228, "dump_m": 228, "returnvalu": 228, "destin": 228, "local_var": 228, "result_vari": 228, "ot": 228, "unnam": 228, "rustcodegen": 228, "dump_r": 228, "f_result": 228, "myfcn": 228, "fcn2": 228, "myfcn_result": 228, "void": 228, "get_default_datatyp": 228, "complex_allow": 228, "agnost": 228, "conserve_mpmath_dp": 229, "doctest_depends_on": 229, "disable_view": 229, "python_vers": 229, "memoize_properti": 229, "propfunc": 229, "no_attrs_in_subclass": 229, "__all__": 229, "some_funct": 229, "thread": 229, "xthread": 229, "threaded_factori": 229, "use_add": 229, "multiset_partitions_taocp": 230, "visitor": 230, "pstack": 230, "lpart": 230, "topmost": 230, "partcompon": 230, "peek": [230, 270], "unpredict": 230, "list_visitor": 230, "abb": [230, 233], "factoring_visitor": 230, "multisetpartitiontravers": 230, "aocp": 230, "count_partit": 230, "127750": 230, "686": 230, "4a": 230, "factorisatio": 230, "oppenheim": 230, "numerorum": 230, "canfield": 230, "erdo": 230, "OF": 230, "yorgei": 230, "monad": 230, "persist": 230, "288716": 230, "memoiz": [230, 232, 258], "dramat": 230, "hypothet": 230, "borrow": 230, "coalesc": 230, "_rang": 230, "stretch": 230, "brain": 230, "histogram": 230, "enum_al": 230, "enum_larg": 230, "enum_rang": 230, "enum_smal": 230, "ub": 230, "parti": 231, "catch_warn": 231, "simplefilt": 231, "dedent": [231, 236], "enum": [232, 258], "pkgdata": [232, 258], "kbin": 233, "partion": 233, "bcd": 233, "notiter": 233, "binary_partit": 233, "r958": 233, "taocp": 233, "nx": 233, "common_prefix": 233, "common_suffix": 233, "unhash": 233, "r959": 233, "connected_component_": 233, "graph_theori": 233, "r960": 233, "27s_strongly_connected_components_algorithm": 233, "dict_merg": 233, "filter_symbol": 233, "ls": 233, "myop": 233, "kog": 233, "informatik": 233, "hamburg": 233, "mein": 233, "python_trick": 233, "neighbor": 233, "xxxxxx": 233, "xxxx": 233, "r961": 233, "method_ring": 233, "r962": 233, "4856615": 233, "4857018": 233, "r963": 233, "programminggeek": 233, "r964": 233, "steinhau": 233, "93johnson": 233, "93trotter_algorithm": 233, "r965": 233, "involut": 233, "eco": 233, "vajnovszki": 233, "dmtc": 233, "generate_involut": 233, "r966": 233, "permutationinvolut": 233, "generate_oriented_forest": 233, "forest": 233, "acycl": 233, "r967": 233, "beyer": 233, "hedetniemi": 233, "novemb": 233, "r968": 233, "1633833": 233, "has_dup": 233, "has_varieti": 233, "iproduct": 233, "abcbb": 233, "is_sequ": 233, "generatortyp": 233, "_iter": 233, "ordered_flag": 233, "least_rot": 233, "rotate_left": 233, "r969": 233, "lexicographically_minimal_string_rot": 233, "minlex": 233, "acb": 233, "11010011000": 233, "00011010011": 233, "00011001011": 233, "aaa": 233, "abi": 233, "bby": 233, "abracadabra": 233, "banana": 233, "multiset_derang": 233, "uniq": 233, "1233": 233, "3312": 233, "3321": 233, "aba": 233, "baa": 233, "bead": 233, "ooo": 233, "r970": 233, "ordered_partit": 233, "r971": 233, "jeromekelleh": 233, "r972": 233, "jerom": 233, "kelleh": 233, "barri": 233, "sullivan": 233, "0909": 233, "2331v2": 233, "r973": 233, "activest": 233, "218332": 233, "postfix": 233, "random_derang": 233, "reseed": 233, "templat": 233, "rotate_right": 233, "roundrobin": 233, "ef": 233, "credit": [233, 256], "sakki": 233, "keyfunc": 233, "subgraph": 233, "r974": 233, "r975": 233, "longest": 233, "r976": 233, "unflatten": 233, "afunc": 234, "lam_f": 234, "lambdastr": 234, "dummifi": 234, "use_imp": 234, "custom_sin": 234, "38177329": 234, "49315059": 234, "8414709848078965": 234, "eager": 234, "enable_eager_execut": 234, "eagertensor": 234, "__class__": 234, "placehold": 234, "user_guid": 234, "array2mat": 234, "runtimewarn": 234, "sin_cos_sympi": 234, "sin_co": 234, "sin_cos_numpi": 234, "38177329068": 234, "module_dictionari": 234, "_lambdifygener": 234, "__globals__": 234, "lambdaprint": [234, 258], "90929743": [234, 259], "assoc_recurrence_memo": 235, "base_seq": 235, "memo": 235, "pn0": 235, "recurrence_memo": 235, "specfun": 235, "__index__": 236, "sanit": 236, "99999999999999991611392": 236, "debug_decor": 236, "fillded": 236, "strline": 236, "rawlin": 236, "find_execut": 236, "pathsep": 236, "strictlessthan": 236, "pastabl": 236, "bee": 236, "spamham": 236, "sha": 236, "spam": 236, "egg": 236, "md5": 236, "eggsham": 236, "r977": 236, "6116978": 236, "roken": 236, "deletechar": 236, "multicharact": 236, "oldchar": 236, "newchar": 236, "acquir": 237, "getresourc": 237, "idiom": [237, 262, 263], "pkgname": 237, "pkgpath": 237, "dirnam": 237, "normpath": 237, "rb": 237, "__loader__": 237, "stringio": 237, "get_resourc": 237, "ioerror": 237, "mydata": 237, "mypkgdata": 237, "jpg": 237, "get_class": 238, "lookup_view": 238, "get_mod_func": 238, "callback": 238, "timeutil": 239, "coordsysrect": 240, "rotation_matrix": [240, 241, 244], "vector_nam": 240, "variable_nam": [240, 246], "latex_vect": 240, "pretty_vect": 240, "latex_scalar": 240, "pretty_scalar": 240, "new_system": 240, "create_new": [240, 244], "transformation_to_par": 240, "transformation_from_par": 240, "locate_new": [240, 242, 243, 244, 245, 246], "position_wrt": [240, 243, 244, 245], "orient_new": [240, 241], "axisorient": [240, 244, 247], "axis_orient": [240, 244], "bodyorient": [240, 244, 247], "body_orient": [240, 241, 244], "spaceorient": [240, 244, 247], "space_orient": [240, 241], "quaternionorient": [240, 244, 247], "q_orient": [240, 241], "orient_new_axi": [240, 242, 244], "orient_new_bodi": [240, 244], "angle1": [240, 241], "angle2": [240, 241], "angle3": [240, 241], "euler_angl": [240, 241], "orient_new_quaternion": [240, 244], "orient_new_spac": [240, 244], "coordsyrect": 240, "v_a": 240, "v_b": 240, "scalar_map": 240, "basevector": [240, 243, 244], "delop": [240, 245, 246], "r978": 240, "r979": 240, "basedyad": [240, 243], "second_system": 240, "deloper": [240, 247], "curl": [240, 247, 249], "parabola": 240, "rational_parametr": 240, "singular_point": 240, "regular_point": 240, "reg_point": 240, "implict": 240, "cubic_curv": 240, "calulc": 240, "hoffmann": 240, "purdu": 240, "lib": 240, "cgi": 240, "viewcont": 240, "1827": 240, "cstech": 240, "erik": 240, "hillgart": 240, "diploma": 240, "linz": 240, "universitat": 240, "availa": 240, "risc_1355": 240, "20point": 240, "20on": 240, "20conic": 240, "semispher": [240, 249], "coordsys3d": [241, 242, 243, 245, 246, 247, 249], "axis_orienter1": 241, "axis_orienter2": 241, "axis_orienter3": 241, "body_orienter1": 241, "body_orienter2": 241, "body_orienter3": 241, "system2": 242, "parametricregion": [242, 247, 249], "implicitregion": [242, 247, 249], "essenc": 243, "vectormul": 243, "vectoradd": 243, "ofcours": 243, "vectorzero": 243, "expressli": 243, "express_coordin": [243, 244], "dyadicmul": 243, "dyadicadd": 243, "cleanest": 244, "orient_new_": 244, "attain": 244, "basescalar": [244, 246], "oabc": 245, "oa": 245, "pq": 245, "sr": 245, "wikidel": 245, "ffield": 245, "gradient_field": 246, "instantan": 246, "directional_deriv": 246, "lame": 246, "quadrilater": 247, "flux": 247, "parametricintegr": 247, "matrix_to_vector": 247, "vector_integr": [247, 249], "dyadicproduct": 247, "quantifi": 248, "throughtout": 248, "necesssari": 249, "param_circl": 249, "implicit_circl": 249, "obextj": 249, "solidspher": 249, "lamina": 249, "\ud835\udc45": 249, "cylind": 249, "vectorfield": 249, "hemispher": 249, "top_fac": 249, "bottom_fac": 249, "27_theorem": 249, "cone": 249, "divergence_theorem": 249, "12288": 249, "subcategori": 250, "cnode": 252, "cxxnode": 252, "fnode": 252, "pyutil": 252, "cutil": 252, "futil": 252, "ecm": 255, "copyright": 256, "pappu": 257, "hexagon": 257, "prettyprint": 258, "rcodeprint": 258, "javascript": [258, 269], "gtk": 258, "mathmlprint": 258, "pythoncodeprint": 258, "pythonprint": 258, "dotprint": [258, 265, 269], "str_expr": 259, "82842712474619": 259, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 259, "0874989834394464": 259, "roundoff": 259, "14112001": 259, "7568025": 259, "95892427": 259, "2794155": 259, "6569866": 259, "98935825": 259, "41211849": 259, "0998334166468": 259, "sympy_nam": 259, "numerical_funct": 259, "rephras": 260, "oh": 260, "integration_vari": 260, "dfdx": 260, "equidistantli": 260, "d2fdx2": 260, "django": 262, "oop": 262, "crazi": 262, "abcdef": 262, "reevalu": 262, "infal": 262, "insight": 263, "entertain": 263, "preliminari": 263, "82842712475": 264, "cass": 264, "wrote": [264, 265], "theme": 264, "expanded_expr": 264, "whet": 264, "appetit": 264, "c\u2082": [264, 271], "c\u2081": [264, 271], "\u03bd": 264, "sell": 264, "battl": 264, "confid": 264, "gigabyt": 264, "tear": 265, "rebuilt": 265, "stopper": 265, "uexpr": 265, "unevalutedexpr": 265, "downsid": 266, "algebraic_multipl": 266, "pdp": 266, "\u03bb": 266, "undertest": 266, "underevalu": 266, "my_iszero": 266, "stronger": 266, "tradeoff": 266, "wonder": 266, "5b7c3e8ee5b40332abdb206c": 266, "15141": 266, "19548": 266, "10120": 266, "10279": 266, "constant_problem": 266, "possiblezeroq": 266, "mupad_ref": 266, "iszero": 266, "congratul": 267, "decent": 268, "austin": 268, "video": 268, "bvar": 269, "unnecessarili": 270, "whittl": 270, "catchal": 270, "sound": 270, "collected_expr": 270, "cdot1": 270, "undertak": 270, "undon": 270, "cdot2": 270, "nck": 270, "pronounc": 270, "_2f_1": 270, "cfrac": 270, "list_to_frac": 270, "a\u2080": 270, "a\u2083": 270, "a\u2084": 270, "pointless": 270, "orig_frac": 270, "diffeq": 271}, "objects": {"": [[23, 0, 0, "-", "sympy"]], "sympy": [[24, 0, 0, "-", "abc"], [25, 0, 0, "-", "algebras"], [28, 0, 0, "-", "assumptions"], [31, 0, 0, "-", "calculus"], [32, 0, 0, "-", "categories"], [53, 0, 0, "-", "diffgeom"], [54, 0, 0, "-", "discrete"], [58, 0, 0, "-", "functions"], [71, 0, 0, "-", "holonomic"], [78, 0, 0, "-", "integrals"], [79, 0, 0, "-", "interactive"], [80, 0, 0, "-", "liealgebras"], [81, 0, 0, "-", "logic"], [86, 0, 0, "-", "matrices"], [93, 0, 0, "-", "parsing"], [256, 0, 0, "-", "physics"], [191, 0, 0, "-", "polys"], [213, 0, 0, "-", "solvers"], [215, 0, 0, "-", "stats"], [218, 0, 0, "-", "tensor"], [223, 0, 0, "-", "testing"], [232, 0, 0, "-", "utilities"], [247, 0, 0, "-", "vector"]], "sympy.algebras": [[25, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[25, 2, 1, "", "add"], [25, 2, 1, "", "angle"], [25, 2, 1, "", "arc_coplanar"], [25, 2, 1, "", "axis"], [25, 2, 1, "", "exp"], [25, 2, 1, "", "from_axis_angle"], [25, 2, 1, "", "from_rotation_matrix"], [25, 2, 1, "", "index_vector"], [25, 2, 1, "", "integrate"], [25, 2, 1, "", "inverse"], [25, 2, 1, "", "is_pure"], [25, 2, 1, "", "is_zero_quaternion"], [25, 2, 1, "", "mensor"], [25, 2, 1, "", "mul"], [25, 2, 1, "", "norm"], [25, 2, 1, "", "normalize"], [25, 2, 1, "", "orthogonal"], [25, 2, 1, "", "parallel"], [25, 2, 1, "", "pow"], [25, 2, 1, "", "pow_cos_sin"], [25, 2, 1, "", "rotate_point"], [25, 2, 1, "", "scalar_part"], [25, 2, 1, "", "to_axis_angle"], [25, 2, 1, "", "to_rotation_matrix"], [25, 2, 1, "", "vector_coplanar"], [25, 2, 1, "", "vector_part"]], "sympy.assumptions": [[26, 0, 0, "-", "ask"], [27, 0, 0, "-", "assume"], [29, 0, 0, "-", "predicates"], [30, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[26, 1, 1, "", "AssumptionKeys"], [26, 3, 1, "", "ask"], [26, 3, 1, "", "register_handler"], [26, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[27, 1, 1, "", "AppliedPredicate"], [27, 1, 1, "", "AssumptionsContext"], [27, 1, 1, "", "Predicate"], [27, 1, 1, "", "UndefinedPredicate"], [27, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[27, 4, 1, "", "arg"], [27, 4, 1, "", "arguments"], [27, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[27, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[27, 2, 1, "", "eval"], [27, 5, 1, "", "handler"], [27, 2, 1, "", "register"], [27, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[29, 1, 1, "", "FinitePredicate"], [29, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[29, 1, 1, "", "CommutativePredicate"], [29, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[29, 1, 1, "", "ComplexElementsPredicate"], [29, 1, 1, "", "DiagonalPredicate"], [29, 1, 1, "", "FullRankPredicate"], [29, 1, 1, "", "IntegerElementsPredicate"], [29, 1, 1, "", "InvertiblePredicate"], [29, 1, 1, "", "LowerTriangularPredicate"], [29, 1, 1, "", "NormalPredicate"], [29, 1, 1, "", "OrthogonalPredicate"], [29, 1, 1, "", "PositiveDefinitePredicate"], [29, 1, 1, "", "RealElementsPredicate"], [29, 1, 1, "", "SingularPredicate"], [29, 1, 1, "", "SquarePredicate"], [29, 1, 1, "", "SymmetricPredicate"], [29, 1, 1, "", "TriangularPredicate"], [29, 1, 1, "", "UnitTriangularPredicate"], [29, 1, 1, "", "UnitaryPredicate"], [29, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[29, 1, 1, "", "CompositePredicate"], [29, 1, 1, "", "EvenPredicate"], [29, 1, 1, "", "OddPredicate"], [29, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[29, 1, 1, "", "NegativePredicate"], [29, 1, 1, "", "NonNegativePredicate"], [29, 1, 1, "", "NonPositivePredicate"], [29, 1, 1, "", "NonZeroPredicate"], [29, 1, 1, "", "PositivePredicate"], [29, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[29, 1, 1, "", "AlgebraicPredicate"], [29, 1, 1, "", "AntihermitianPredicate"], [29, 1, 1, "", "ComplexPredicate"], [29, 1, 1, "", "ExtendedRealPredicate"], [29, 1, 1, "", "HermitianPredicate"], [29, 1, 1, "", "ImaginaryPredicate"], [29, 1, 1, "", "IntegerPredicate"], [29, 1, 1, "", "IrrationalPredicate"], [29, 1, 1, "", "RationalPredicate"], [29, 1, 1, "", "RealPredicate"], [29, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[29, 5, 1, "", "AlgebraicHandler"], [29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[29, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[30, 3, 1, "", "refine"], [30, 3, 1, "", "refine_Pow"], [30, 3, 1, "", "refine_abs"], [30, 3, 1, "", "refine_arg"], [30, 3, 1, "", "refine_atan2"], [30, 3, 1, "", "refine_im"], [30, 3, 1, "", "refine_matrixelement"], [30, 3, 1, "", "refine_re"], [30, 3, 1, "", "refine_sign"]], "sympy.calculus": [[31, 0, 0, "-", "euler"], [31, 0, 0, "-", "finite_diff"], [31, 0, 0, "-", "singularities"], [31, 0, 0, "-", "util"]], "sympy.calculus.euler": [[31, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[31, 3, 1, "", "apply_finite_diff"], [31, 3, 1, "", "differentiate_finite"], [31, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[31, 3, 1, "", "is_decreasing"], [31, 3, 1, "", "is_increasing"], [31, 3, 1, "", "is_monotonic"], [31, 3, 1, "", "is_strictly_decreasing"], [31, 3, 1, "", "is_strictly_increasing"], [31, 3, 1, "", "monotonicity_helper"], [31, 3, 1, "", "singularities"]], "sympy.calculus.util": [[31, 3, 1, "", "continuous_domain"], [31, 3, 1, "", "function_range"], [31, 3, 1, "", "is_convex"], [31, 3, 1, "", "lcim"], [31, 3, 1, "", "maximum"], [31, 3, 1, "", "minimum"], [31, 3, 1, "", "not_empty_in"], [31, 3, 1, "", "periodicity"], [31, 3, 1, "", "stationary_points"]], "sympy.categories": [[32, 1, 1, "", "Category"], [32, 1, 1, "", "CompositeMorphism"], [32, 1, 1, "", "Diagram"], [32, 1, 1, "", "IdentityMorphism"], [32, 1, 1, "", "Morphism"], [32, 1, 1, "", "NamedMorphism"], [32, 1, 1, "", "Object"], [32, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[32, 4, 1, "", "commutative_diagrams"], [32, 4, 1, "", "name"], [32, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[32, 4, 1, "", "codomain"], [32, 4, 1, "", "components"], [32, 4, 1, "", "domain"], [32, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[32, 4, 1, "", "conclusions"], [32, 2, 1, "", "hom"], [32, 2, 1, "", "is_subdiagram"], [32, 4, 1, "", "objects"], [32, 4, 1, "", "premises"], [32, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[32, 4, 1, "", "codomain"], [32, 2, 1, "", "compose"], [32, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[32, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[32, 1, 1, "", "ArrowStringDescription"], [32, 1, 1, "", "DiagramGrid"], [32, 1, 1, "", "XypicDiagramDrawer"], [32, 3, 1, "", "preview_diagram"], [32, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[32, 4, 1, "", "height"], [32, 4, 1, "", "morphisms"], [32, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[32, 2, 1, "", "draw"]], "sympy.codegen": [[33, 0, 0, "-", "algorithms"], [33, 0, 0, "-", "approximations"], [33, 0, 0, "-", "ast"], [33, 0, 0, "-", "cfunctions"], [33, 0, 0, "-", "cnodes"], [33, 0, 0, "-", "cutils"], [33, 0, 0, "-", "cxxnodes"], [33, 0, 0, "-", "fnodes"], [33, 0, 0, "-", "futils"], [33, 0, 0, "-", "matrix_nodes"], [33, 0, 0, "-", "pyutils"], [33, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[33, 3, 1, "", "newtons_method"], [33, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[33, 1, 1, "", "SeriesApprox"], [33, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[33, 1, 1, "", "Assignment"], [33, 1, 1, "", "AssignmentBase"], [33, 1, 1, "", "Attribute"], [33, 1, 1, "", "AugmentedAssignment"], [33, 1, 1, "", "BreakToken"], [33, 1, 1, "", "CodeBlock"], [33, 1, 1, "", "Comment"], [33, 1, 1, "", "ComplexType"], [33, 1, 1, "", "ContinueToken"], [33, 1, 1, "", "Declaration"], [33, 1, 1, "", "Element"], [33, 1, 1, "", "FloatBaseType"], [33, 1, 1, "", "FloatType"], [33, 1, 1, "", "For"], [33, 1, 1, "", "FunctionCall"], [33, 1, 1, "", "FunctionDefinition"], [33, 1, 1, "", "FunctionPrototype"], [33, 1, 1, "", "IntBaseType"], [33, 1, 1, "", "Node"], [33, 1, 1, "", "NoneToken"], [33, 1, 1, "", "Pointer"], [33, 1, 1, "", "Print"], [33, 1, 1, "", "QuotedString"], [33, 1, 1, "", "Return"], [33, 1, 1, "", "Scope"], [33, 1, 1, "", "SignedIntType"], [33, 1, 1, "", "Stream"], [33, 1, 1, "", "String"], [33, 1, 1, "", "Token"], [33, 1, 1, "", "Type"], [33, 1, 1, "", "UnsignedIntType"], [33, 1, 1, "", "Variable"], [33, 1, 1, "", "While"], [33, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[33, 2, 1, "", "cse"], [33, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[33, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[33, 2, 1, "", "cast_nocheck"], [33, 4, 1, "", "decimal_dig"], [33, 4, 1, "", "dig"], [33, 4, 1, "", "eps"], [33, 4, 1, "", "max"], [33, 4, 1, "", "max_exponent"], [33, 4, 1, "", "min_exponent"], [33, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[33, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[33, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[33, 2, 1, "", "cast_check"], [33, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[33, 2, 1, "", "as_Declaration"], [33, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[33, 1, 1, "", "Cbrt"], [33, 1, 1, "", "Sqrt"], [33, 1, 1, "", "exp2"], [33, 1, 1, "", "expm1"], [33, 1, 1, "", "fma"], [33, 1, 1, "", "hypot"], [33, 1, 1, "", "log10"], [33, 1, 1, "", "log1p"], [33, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[33, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[33, 1, 1, "", "CommaOperator"], [33, 1, 1, "", "Label"], [33, 1, 1, "", "PostDecrement"], [33, 1, 1, "", "PostIncrement"], [33, 1, 1, "", "PreDecrement"], [33, 1, 1, "", "PreIncrement"], [33, 3, 1, "", "alignof"], [33, 1, 1, "", "goto"], [33, 3, 1, "", "sizeof"], [33, 1, 1, "", "struct"], [33, 1, 1, "", "union"]], "sympy.codegen.cutils": [[33, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[33, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[33, 1, 1, "", "ArrayConstructor"], [33, 1, 1, "", "Do"], [33, 1, 1, "", "Extent"], [33, 1, 1, "", "FortranReturn"], [33, 1, 1, "", "GoTo"], [33, 1, 1, "", "ImpliedDoLoop"], [33, 1, 1, "", "Module"], [33, 1, 1, "", "Program"], [33, 1, 1, "", "Subroutine"], [33, 1, 1, "", "SubroutineCall"], [33, 3, 1, "", "allocated"], [33, 3, 1, "", "array"], [33, 3, 1, "", "bind_C"], [33, 1, 1, "", "cmplx"], [33, 3, 1, "", "dimension"], [33, 1, 1, "", "dsign"], [33, 1, 1, "", "isign"], [33, 1, 1, "", "kind"], [33, 3, 1, "", "lbound"], [33, 1, 1, "", "literal_dp"], [33, 1, 1, "", "literal_sp"], [33, 1, 1, "", "merge"], [33, 3, 1, "", "reshape"], [33, 3, 1, "", "shape"], [33, 3, 1, "", "size"], [33, 1, 1, "", "use"], [33, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[33, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[33, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[33, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[33, 1, 1, "", "FuncMinusOneOptim"], [33, 1, 1, "", "Optimization"], [33, 1, 1, "", "ReplaceOptim"], [33, 3, 1, "", "create_expand_pow_optimization"], [33, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[33, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[43, 0, 0, "-", "generators"], [35, 0, 0, "-", "graycode"], [36, 0, 0, "-", "group_constructs"], [37, 0, 0, "-", "group_numbers"], [39, 0, 0, "-", "named_groups"], [40, 0, 0, "-", "partitions"], [42, 0, 0, "-", "perm_groups"], [43, 0, 0, "-", "permutations"], [44, 0, 0, "-", "polyhedron"], [45, 0, 0, "-", "prufer"], [46, 0, 0, "-", "subsets"], [47, 0, 0, "-", "tensor_can"], [48, 0, 0, "-", "testutil"], [49, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[43, 2, 1, "", "alternating"], [43, 2, 1, "", "cyclic"], [43, 2, 1, "", "dihedral"], [43, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[35, 1, 1, "", "GrayCode"], [35, 2, 1, "", "bin_to_gray"], [35, 2, 1, "", "get_subset_from_bitstring"], [35, 2, 1, "", "gray_to_bin"], [35, 2, 1, "", "graycode_subsets"], [35, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[35, 4, 1, "", "current"], [35, 2, 1, "", "generate_gray"], [35, 4, 1, "", "n"], [35, 2, 1, "", "next"], [35, 4, 1, "", "rank"], [35, 4, 1, "", "selections"], [35, 2, 1, "", "skip"], [35, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[36, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[37, 3, 1, "", "is_abelian_number"], [37, 3, 1, "", "is_cyclic_number"], [37, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[39, 3, 1, "", "AbelianGroup"], [39, 3, 1, "", "AlternatingGroup"], [39, 3, 1, "", "CyclicGroup"], [39, 3, 1, "", "DihedralGroup"], [39, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[40, 1, 1, "", "IntegerPartition"], [40, 1, 1, "", "Partition"], [40, 3, 1, "", "RGS_enum"], [40, 3, 1, "", "RGS_generalized"], [40, 3, 1, "", "RGS_rank"], [40, 3, 1, "", "RGS_unrank"], [40, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[40, 2, 1, "", "as_dict"], [40, 2, 1, "", "as_ferrers"], [40, 4, 1, "", "conjugate"], [40, 2, 1, "", "next_lex"], [40, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[40, 4, 1, "", "RGS"], [40, 2, 1, "", "from_rgs"], [40, 4, 1, "", "partition"], [40, 4, 1, "", "rank"], [40, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[42, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[42, 2, 1, "", "__contains__"], [42, 2, 1, "", "__mul__"], [42, 2, 1, "", "__new__"], [42, 5, 1, "", "__weakref__"], [42, 2, 1, "", "_coset_representative"], [42, 2, 1, "", "_distinct_primes_lemma"], [42, 4, 1, "", "_elements"], [42, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [42, 2, 1, "", "_eval_is_alt_sym_naive"], [42, 2, 1, "", "_p_elements_group"], [42, 2, 1, "", "_random_pr_init"], [42, 2, 1, "", "_sylow_alt_sym"], [42, 2, 1, "", "_union_find_merge"], [42, 2, 1, "", "_union_find_rep"], [42, 2, 1, "", "_verify"], [42, 2, 1, "", "abelian_invariants"], [42, 4, 1, "", "base"], [42, 2, 1, "", "baseswap"], [42, 4, 1, "", "basic_orbits"], [42, 4, 1, "", "basic_stabilizers"], [42, 4, 1, "", "basic_transversals"], [42, 2, 1, "", "center"], [42, 2, 1, "", "centralizer"], [42, 2, 1, "", "commutator"], [42, 2, 1, "", "composition_series"], [42, 2, 1, "", "conjugacy_class"], [42, 2, 1, "", "conjugacy_classes"], [42, 2, 1, "", "contains"], [42, 2, 1, "", "coset_factor"], [42, 2, 1, "", "coset_rank"], [42, 2, 1, "", "coset_table"], [42, 2, 1, "", "coset_transversal"], [42, 2, 1, "", "coset_unrank"], [42, 4, 1, "", "degree"], [42, 2, 1, "", "derived_series"], [42, 2, 1, "", "derived_subgroup"], [42, 4, 1, "", "elements"], [42, 2, 1, "", "equals"], [42, 2, 1, "", "generate"], [42, 2, 1, "", "generate_dimino"], [42, 2, 1, "", "generate_schreier_sims"], [42, 2, 1, "", "generator_product"], [42, 4, 1, "", "generators"], [42, 4, 1, "", "identity"], [42, 2, 1, "", "index"], [42, 4, 1, "", "is_abelian"], [42, 2, 1, "", "is_alt_sym"], [42, 4, 1, "", "is_alternating"], [42, 4, 1, "", "is_cyclic"], [42, 2, 1, "", "is_elementary"], [42, 4, 1, "", "is_nilpotent"], [42, 2, 1, "", "is_normal"], [42, 4, 1, "", "is_perfect"], [42, 4, 1, "", "is_polycyclic"], [42, 2, 1, "", "is_primitive"], [42, 4, 1, "", "is_solvable"], [42, 2, 1, "", "is_subgroup"], [42, 4, 1, "", "is_symmetric"], [42, 2, 1, "", "is_transitive"], [42, 4, 1, "", "is_trivial"], [42, 2, 1, "", "lower_central_series"], [42, 2, 1, "", "make_perm"], [42, 4, 1, "", "max_div"], [42, 2, 1, "", "minimal_block"], [42, 2, 1, "", "minimal_blocks"], [42, 2, 1, "", "normal_closure"], [42, 2, 1, "", "orbit"], [42, 2, 1, "", "orbit_rep"], [42, 2, 1, "", "orbit_transversal"], [42, 2, 1, "", "orbits"], [42, 2, 1, "", "order"], [42, 2, 1, "", "pointwise_stabilizer"], [42, 2, 1, "", "polycyclic_group"], [42, 2, 1, "", "presentation"], [42, 2, 1, "", "random"], [42, 2, 1, "", "random_pr"], [42, 2, 1, "", "random_stab"], [42, 2, 1, "", "schreier_sims"], [42, 2, 1, "", "schreier_sims_incremental"], [42, 2, 1, "", "schreier_sims_random"], [42, 2, 1, "", "schreier_vector"], [42, 2, 1, "", "stabilizer"], [42, 4, 1, "", "strong_gens"], [42, 2, 1, "", "strong_presentation"], [42, 2, 1, "", "subgroup"], [42, 2, 1, "", "subgroup_search"], [42, 2, 1, "", "sylow_subgroup"], [42, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[43, 1, 1, "", "Cycle"], [43, 1, 1, "", "Permutation"], [43, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[43, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[43, 2, 1, "", "apply"], [43, 4, 1, "", "array_form"], [43, 2, 1, "", "ascents"], [43, 2, 1, "", "atoms"], [43, 4, 1, "", "cardinality"], [43, 2, 1, "", "commutator"], [43, 2, 1, "", "commutes_with"], [43, 4, 1, "", "cycle_structure"], [43, 4, 1, "", "cycles"], [43, 4, 1, "", "cyclic_form"], [43, 2, 1, "", "descents"], [43, 2, 1, "", "from_inversion_vector"], [43, 2, 1, "", "from_sequence"], [43, 4, 1, "", "full_cyclic_form"], [43, 2, 1, "", "get_adjacency_distance"], [43, 2, 1, "", "get_adjacency_matrix"], [43, 2, 1, "", "get_positional_distance"], [43, 2, 1, "", "get_precedence_distance"], [43, 2, 1, "", "get_precedence_matrix"], [43, 2, 1, "", "index"], [43, 2, 1, "", "inversion_vector"], [43, 2, 1, "", "inversions"], [43, 4, 1, "", "is_Empty"], [43, 4, 1, "", "is_Identity"], [43, 4, 1, "", "is_Singleton"], [43, 4, 1, "", "is_even"], [43, 4, 1, "", "is_odd"], [43, 2, 1, "", "josephus"], [43, 2, 1, "", "length"], [43, 2, 1, "", "list"], [43, 2, 1, "", "max"], [43, 2, 1, "", "min"], [43, 2, 1, "", "mul_inv"], [43, 2, 1, "", "next_lex"], [43, 2, 1, "", "next_nonlex"], [43, 2, 1, "", "next_trotterjohnson"], [43, 2, 1, "", "order"], [43, 2, 1, "", "parity"], [43, 2, 1, "", "random"], [43, 2, 1, "", "rank"], [43, 2, 1, "", "rank_nonlex"], [43, 2, 1, "", "rank_trotterjohnson"], [43, 2, 1, "", "resize"], [43, 2, 1, "", "rmul"], [43, 2, 1, "", "rmul_with_af"], [43, 2, 1, "", "runs"], [43, 2, 1, "", "signature"], [43, 4, 1, "", "size"], [43, 2, 1, "", "support"], [43, 2, 1, "", "transpositions"], [43, 2, 1, "", "unrank_lex"], [43, 2, 1, "", "unrank_nonlex"], [43, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[44, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[44, 4, 1, "", "array_form"], [44, 4, 1, "", "corners"], [44, 4, 1, "", "cyclic_form"], [44, 4, 1, "", "edges"], [44, 4, 1, "", "faces"], [44, 4, 1, "", "pgroup"], [44, 2, 1, "", "reset"], [44, 2, 1, "", "rotate"], [44, 4, 1, "", "size"], [44, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[45, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[45, 2, 1, "", "edges"], [45, 2, 1, "", "next"], [45, 4, 1, "", "nodes"], [45, 2, 1, "", "prev"], [45, 2, 1, "", "prufer_rank"], [45, 4, 1, "", "prufer_repr"], [45, 4, 1, "", "rank"], [45, 4, 1, "", "size"], [45, 2, 1, "", "to_prufer"], [45, 2, 1, "", "to_tree"], [45, 4, 1, "", "tree_repr"], [45, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[46, 1, 1, "", "Subset"], [46, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[46, 2, 1, "", "bitlist_from_subset"], [46, 4, 1, "", "cardinality"], [46, 2, 1, "", "iterate_binary"], [46, 2, 1, "", "iterate_graycode"], [46, 2, 1, "", "next_binary"], [46, 2, 1, "", "next_gray"], [46, 2, 1, "", "next_lexicographic"], [46, 2, 1, "", "prev_binary"], [46, 2, 1, "", "prev_gray"], [46, 2, 1, "", "prev_lexicographic"], [46, 4, 1, "", "rank_binary"], [46, 4, 1, "", "rank_gray"], [46, 4, 1, "", "rank_lexicographic"], [46, 4, 1, "", "size"], [46, 4, 1, "", "subset"], [46, 2, 1, "", "subset_from_bitlist"], [46, 2, 1, "", "subset_indices"], [46, 4, 1, "", "superset"], [46, 4, 1, "", "superset_size"], [46, 2, 1, "", "unrank_binary"], [46, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[47, 3, 1, "", "bsgs_direct_product"], [47, 3, 1, "", "canonicalize"], [47, 3, 1, "", "double_coset_can_rep"], [47, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[48, 3, 1, "", "_cmp_perm_lists"], [48, 3, 1, "", "_naive_list_centralizer"], [48, 3, 1, "", "_verify_bsgs"], [48, 3, 1, "", "_verify_centralizer"], [48, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[49, 3, 1, "", "_base_ordering"], [49, 3, 1, "", "_check_cycles_alt_sym"], [49, 3, 1, "", "_distribute_gens_by_base"], [49, 3, 1, "", "_handle_precomputed_bsgs"], [49, 3, 1, "", "_orbits_transversals_from_bsgs"], [49, 3, 1, "", "_remove_gens"], [49, 3, 1, "", "_strip"], [49, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[50, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[50, 2, 1, "", "change_index"], [50, 4, 1, "", "has_empty_sequence"], [50, 2, 1, "", "index"], [50, 2, 1, "", "reorder"], [50, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[78, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[78, 4, 1, "", "bound_symbols"], [78, 4, 1, "", "free_symbols"], [78, 4, 1, "", "function"], [78, 4, 1, "", "has_finite_limits"], [78, 4, 1, "", "has_reversed_limits"], [78, 4, 1, "", "is_number"], [78, 4, 1, "", "limits"], [78, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[50, 3, 1, "", "gosper_normal"], [50, 3, 1, "", "gosper_sum"], [50, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[50, 1, 1, "", "Product"], [50, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[50, 2, 1, "", "is_convergent"], [50, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[50, 1, 1, "", "Sum"], [50, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[50, 2, 1, "", "euler_maclaurin"], [50, 2, 1, "", "eval_zeta_function"], [50, 2, 1, "", "is_absolutely_convergent"], [50, 2, 1, "", "is_convergent"], [50, 2, 1, "", "reverse_order"]], "sympy.core": [[51, 0, 0, "-", "add"], [51, 0, 0, "-", "assumptions"], [51, 0, 0, "-", "basic"], [51, 0, 0, "-", "cache"], [51, 0, 0, "-", "containers"], [51, 0, 0, "-", "core"], [51, 0, 0, "-", "evalf"], [51, 0, 0, "-", "expr"], [51, 0, 0, "-", "exprtools"], [51, 0, 0, "-", "function"], [51, 0, 0, "-", "kind"], [51, 0, 0, "-", "mod"], [51, 0, 0, "-", "mul"], [51, 0, 0, "-", "multidimensional"], [51, 0, 0, "-", "numbers"], [51, 0, 0, "-", "power"], [51, 0, 0, "-", "random"], [51, 0, 0, "-", "relational"], [51, 0, 0, "-", "singleton"], [51, 0, 0, "-", "symbol"], [51, 0, 0, "-", "sympify"], [51, 0, 0, "-", "traversal"]], "sympy.core.add": [[51, 1, 1, "", "Add"]], "sympy.core.add.Add": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_add"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_numer_denom"], [51, 2, 1, "", "as_real_imag"], [51, 2, 1, "", "as_two_terms"], [51, 2, 1, "", "class_key"], [51, 2, 1, "", "extract_leading_order"], [51, 2, 1, "", "flatten"], [51, 2, 1, "", "primitive"]], "sympy.core.basic": [[51, 1, 1, "", "Atom"], [51, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[51, 4, 1, "", "args"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_dummy"], [51, 4, 1, "", "assumptions0"], [51, 2, 1, "", "atoms"], [51, 4, 1, "", "canonical_variables"], [51, 2, 1, "", "class_key"], [51, 2, 1, "", "compare"], [51, 2, 1, "", "count"], [51, 2, 1, "", "count_ops"], [51, 2, 1, "", "doit"], [51, 2, 1, "", "dummy_eq"], [51, 2, 1, "", "find"], [51, 4, 1, "", "free_symbols"], [51, 2, 1, "", "fromiter"], [51, 4, 1, "", "func"], [51, 2, 1, "", "has"], [51, 2, 1, "", "has_free"], [51, 4, 1, "", "is_comparable"], [51, 2, 1, "", "match"], [51, 2, 1, "", "matches"], [51, 2, 1, "", "rcall"], [51, 2, 1, "", "refine"], [51, 2, 1, "", "replace"], [51, 2, 1, "", "rewrite"], [51, 2, 1, "", "simplify"], [51, 2, 1, "", "sort_key"], [51, 2, 1, "", "subs"], [51, 2, 1, "", "xreplace"]], "sympy.core.cache": [[51, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[51, 1, 1, "", "Dict"], [51, 1, 1, "", "Tuple"], [51, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[51, 2, 1, "", "get"], [51, 2, 1, "", "items"], [51, 2, 1, "", "keys"], [51, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[51, 2, 1, "", "index"], [51, 4, 1, "", "kind"], [51, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[51, 1, 1, "", "EvalfMixin"], [51, 3, 1, "", "N"], [51, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[51, 2, 1, "", "evalf"], [51, 2, 1, "", "n"]], "sympy.core.expr": [[51, 1, 1, "", "AtomicExpr"], [51, 1, 1, "", "Expr"], [51, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[51, 2, 1, "", "apart"], [51, 2, 1, "", "args_cnc"], [51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_coeff_add"], [51, 2, 1, "", "as_coeff_exponent"], [51, 2, 1, "", "as_coeff_mul"], [51, 2, 1, "", "as_coefficient"], [51, 2, 1, "", "as_coefficients_dict"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_expr"], [51, 2, 1, "", "as_independent"], [51, 2, 1, "", "as_leading_term"], [51, 2, 1, "", "as_numer_denom"], [51, 2, 1, "", "as_ordered_factors"], [51, 2, 1, "", "as_ordered_terms"], [51, 2, 1, "", "as_poly"], [51, 2, 1, "", "as_powers_dict"], [51, 2, 1, "", "as_real_imag"], [51, 2, 1, "", "as_terms"], [51, 2, 1, "", "aseries"], [51, 2, 1, "", "cancel"], [51, 2, 1, "", "coeff"], [51, 2, 1, "", "collect"], [51, 2, 1, "", "combsimp"], [51, 2, 1, "", "compute_leading_term"], [51, 2, 1, "", "conjugate"], [51, 2, 1, "", "could_extract_minus_sign"], [51, 2, 1, "", "count_ops"], [51, 2, 1, "", "equals"], [51, 2, 1, "", "expand"], [51, 4, 1, "", "expr_free_symbols"], [51, 2, 1, "", "extract_additively"], [51, 2, 1, "", "extract_branch_factor"], [51, 2, 1, "", "extract_multiplicatively"], [51, 2, 1, "", "factor"], [51, 2, 1, "", "fourier_series"], [51, 2, 1, "", "fps"], [51, 2, 1, "", "gammasimp"], [51, 2, 1, "", "getO"], [51, 2, 1, "", "getn"], [51, 2, 1, "", "integrate"], [51, 2, 1, "", "invert"], [51, 2, 1, "", "is_algebraic_expr"], [51, 2, 1, "", "is_constant"], [51, 2, 1, "", "is_meromorphic"], [51, 4, 1, "", "is_number"], [51, 2, 1, "", "is_polynomial"], [51, 2, 1, "", "is_rational_function"], [51, 2, 1, "", "leadterm"], [51, 2, 1, "", "limit"], [51, 2, 1, "", "lseries"], [51, 2, 1, "", "normal"], [51, 2, 1, "", "nseries"], [51, 2, 1, "", "nsimplify"], [51, 2, 1, "", "powsimp"], [51, 2, 1, "", "primitive"], [51, 2, 1, "", "radsimp"], [51, 2, 1, "", "ratsimp"], [51, 2, 1, "", "removeO"], [51, 2, 1, "", "round"], [51, 2, 1, "", "separate"], [51, 2, 1, "", "series"], [51, 2, 1, "", "taylor_term"], [51, 2, 1, "", "together"], [51, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[51, 3, 1, "", "factor_terms"], [51, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[51, 1, 1, "", "Derivative"], [51, 1, 1, "", "Function"], [51, 1, 1, "", "FunctionClass"], [51, 1, 1, "", "Lambda"], [51, 1, 1, "", "PoleError"], [51, 1, 1, "", "Subs"], [51, 1, 1, "", "WildFunction"], [51, 3, 1, "", "count_ops"], [51, 3, 1, "", "diff"], [51, 3, 1, "", "expand"], [51, 3, 1, "", "expand_complex"], [51, 3, 1, "", "expand_func"], [51, 3, 1, "", "expand_log"], [51, 3, 1, "", "expand_mul"], [51, 3, 1, "", "expand_multinomial"], [51, 3, 1, "", "expand_power_base"], [51, 3, 1, "", "expand_power_exp"], [51, 3, 1, "", "expand_trig"], [51, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[51, 4, 1, "", "_diff_wrt"], [51, 2, 1, "", "_sort_variable_count"], [51, 2, 1, "", "as_finite_difference"], [51, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[51, 2, 1, "", "as_base_exp"], [51, 2, 1, "", "fdiff"], [51, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[51, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[51, 4, 1, "", "bound_symbols"], [51, 4, 1, "", "expr"], [51, 4, 1, "", "is_identity"], [51, 4, 1, "", "signature"], [51, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[51, 4, 1, "", "bound_symbols"], [51, 4, 1, "", "expr"], [51, 4, 1, "", "point"], [51, 4, 1, "", "variables"]], "sympy.core.kind": [[51, 5, 1, "", "BooleanKind"], [51, 1, 1, "", "Kind"], [51, 5, 1, "", "NumberKind"], [51, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[51, 1, 1, "", "Mod"]], "sympy.core.mul": [[51, 1, 1, "", "Mul"], [51, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "as_ordered_factors"], [51, 2, 1, "", "as_two_terms"], [51, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[51, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[51, 1, 1, "", "AlgebraicNumber"], [51, 1, 1, "", "Catalan"], [51, 1, 1, "", "ComplexInfinity"], [51, 1, 1, "", "EulerGamma"], [51, 1, 1, "", "Exp1"], [51, 1, 1, "", "Float"], [51, 1, 1, "", "GoldenRatio"], [51, 1, 1, "", "Half"], [51, 1, 1, "", "ImaginaryUnit"], [51, 1, 1, "", "Infinity"], [51, 1, 1, "", "Integer"], [51, 1, 1, "", "NaN"], [51, 1, 1, "", "NegativeInfinity"], [51, 1, 1, "", "NegativeOne"], [51, 1, 1, "", "Number"], [51, 1, 1, "", "NumberSymbol"], [51, 1, 1, "", "One"], [51, 1, 1, "", "Pi"], [51, 1, 1, "", "Rational"], [51, 5, 1, "", "RealNumber"], [51, 1, 1, "", "TribonacciConstant"], [51, 1, 1, "", "Zero"], [51, 3, 1, "", "igcd"], [51, 3, 1, "", "ilcm"], [51, 3, 1, "", "mod_inverse"], [51, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[51, 2, 1, "", "__new__"], [51, 2, 1, "", "as_expr"], [51, 2, 1, "", "as_poly"], [51, 2, 1, "", "coeffs"], [51, 2, 1, "", "field_element"], [51, 4, 1, "", "is_aliased"], [51, 4, 1, "", "is_primitive_element"], [51, 2, 1, "", "minpoly_of_element"], [51, 2, 1, "", "native_coeffs"], [51, 2, 1, "", "primitive_element"], [51, 2, 1, "", "to_algebraic_integer"], [51, 2, 1, "", "to_primitive_element"], [51, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "cofactors"], [51, 2, 1, "", "gcd"], [51, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[51, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[51, 2, 1, "", "as_coeff_Add"], [51, 2, 1, "", "as_coeff_Mul"], [51, 2, 1, "", "as_content_primitive"], [51, 2, 1, "", "factors"], [51, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[51, 1, 1, "", "Pow"], [51, 3, 1, "", "integer_log"], [51, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[51, 2, 1, "", "as_base_exp"], [51, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[51, 3, 1, "", "_randint"], [51, 3, 1, "", "_randrange"], [51, 3, 1, "", "random_complex_number"], [51, 3, 1, "", "test_derivative_numerically"], [51, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[51, 5, 1, "", "Eq"], [51, 1, 1, "", "Equality"], [51, 5, 1, "", "Ge"], [51, 1, 1, "", "GreaterThan"], [51, 5, 1, "", "Gt"], [51, 5, 1, "", "Le"], [51, 1, 1, "", "LessThan"], [51, 5, 1, "", "Lt"], [51, 5, 1, "", "Ne"], [51, 5, 1, "", "Rel"], [51, 1, 1, "", "Relational"], [51, 1, 1, "", "StrictGreaterThan"], [51, 1, 1, "", "StrictLessThan"], [51, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[51, 2, 1, "", "as_poly"], [51, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[51, 4, 1, "", "canonical"], [51, 2, 1, "", "equals"], [51, 4, 1, "", "lhs"], [51, 4, 1, "", "negated"], [51, 4, 1, "", "reversed"], [51, 4, 1, "", "reversedsign"], [51, 4, 1, "", "rhs"], [51, 4, 1, "", "strict"], [51, 4, 1, "", "weak"]], "sympy.core.singleton": [[51, 1, 1, "", "Singleton"], [51, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[51, 3, 1, "", "default_sort_key"], [51, 3, 1, "", "ordered"]], "sympy.core.symbol": [[51, 1, 1, "", "Dummy"], [51, 1, 1, "", "Symbol"], [51, 1, 1, "", "Wild"], [51, 3, 1, "", "symbols"], [51, 3, 1, "", "var"]], "sympy.core.sympify": [[51, 3, 1, "", "sympify"]], "sympy.core.traversal": [[51, 3, 1, "", "bottom_up"], [51, 3, 1, "", "postorder_traversal"], [51, 3, 1, "", "preorder_traversal"], [51, 3, 1, "", "use"], [51, 3, 1, "", "walk"]], "sympy.crypto": [[52, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[52, 3, 1, "", "AZ"], [52, 3, 1, "", "bifid5_square"], [52, 3, 1, "", "bifid6_square"], [52, 3, 1, "", "check_and_join"], [52, 3, 1, "", "cycle_list"], [52, 3, 1, "", "decipher_affine"], [52, 3, 1, "", "decipher_atbash"], [52, 3, 1, "", "decipher_bifid"], [52, 3, 1, "", "decipher_bifid5"], [52, 3, 1, "", "decipher_bifid6"], [52, 3, 1, "", "decipher_elgamal"], [52, 3, 1, "", "decipher_gm"], [52, 3, 1, "", "decipher_hill"], [52, 3, 1, "", "decipher_kid_rsa"], [52, 3, 1, "", "decipher_railfence"], [52, 3, 1, "", "decipher_rot13"], [52, 3, 1, "", "decipher_rsa"], [52, 3, 1, "", "decipher_shift"], [52, 3, 1, "", "decipher_vigenere"], [52, 3, 1, "", "decode_morse"], [52, 3, 1, "", "dh_private_key"], [52, 3, 1, "", "dh_public_key"], [52, 3, 1, "", "dh_shared_key"], [52, 3, 1, "", "elgamal_private_key"], [52, 3, 1, "", "elgamal_public_key"], [52, 3, 1, "", "encipher_affine"], [52, 3, 1, "", "encipher_atbash"], [52, 3, 1, "", "encipher_bifid"], [52, 3, 1, "", "encipher_bifid5"], [52, 3, 1, "", "encipher_bifid6"], [52, 3, 1, "", "encipher_elgamal"], [52, 3, 1, "", "encipher_gm"], [52, 3, 1, "", "encipher_hill"], [52, 3, 1, "", "encipher_kid_rsa"], [52, 3, 1, "", "encipher_railfence"], [52, 3, 1, "", "encipher_rot13"], [52, 3, 1, "", "encipher_rsa"], [52, 3, 1, "", "encipher_shift"], [52, 3, 1, "", "encipher_substitution"], [52, 3, 1, "", "encipher_vigenere"], [52, 3, 1, "", "encode_morse"], [52, 3, 1, "", "gm_private_key"], [52, 3, 1, "", "gm_public_key"], [52, 3, 1, "", "kid_rsa_private_key"], [52, 3, 1, "", "kid_rsa_public_key"], [52, 3, 1, "", "lfsr_autocorrelation"], [52, 3, 1, "", "lfsr_connection_polynomial"], [52, 3, 1, "", "lfsr_sequence"], [52, 3, 1, "", "padded_key"], [52, 3, 1, "", "rsa_private_key"], [52, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[53, 1, 1, "", "BaseCovarDerivativeOp"], [53, 1, 1, "", "BaseScalarField"], [53, 1, 1, "", "BaseVectorField"], [53, 1, 1, "", "Commutator"], [53, 1, 1, "", "CoordSystem"], [53, 1, 1, "", "CoordinateSymbol"], [53, 1, 1, "", "CovarDerivativeOp"], [53, 1, 1, "", "Differential"], [53, 1, 1, "", "LieDerivative"], [53, 1, 1, "", "Manifold"], [53, 1, 1, "", "Patch"], [53, 1, 1, "", "Point"], [53, 1, 1, "", "TensorProduct"], [53, 1, 1, "", "WedgeProduct"], [53, 3, 1, "", "intcurve_diffequ"], [53, 3, 1, "", "intcurve_series"], [53, 3, 1, "", "metric_to_Christoffel_1st"], [53, 3, 1, "", "metric_to_Christoffel_2nd"], [53, 3, 1, "", "metric_to_Ricci_components"], [53, 3, 1, "", "metric_to_Riemann_components"], [53, 3, 1, "", "twoform_to_matrix"], [53, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[53, 2, 1, "", "base_oneform"], [53, 2, 1, "", "base_oneforms"], [53, 2, 1, "", "base_scalar"], [53, 2, 1, "", "base_scalars"], [53, 2, 1, "", "base_vector"], [53, 2, 1, "", "base_vectors"], [53, 2, 1, "", "coord_function"], [53, 2, 1, "", "coord_functions"], [53, 2, 1, "", "coord_tuple_transform_to"], [53, 2, 1, "", "jacobian"], [53, 2, 1, "", "jacobian_determinant"], [53, 2, 1, "", "jacobian_matrix"], [53, 2, 1, "", "point"], [53, 2, 1, "", "point_to_coords"], [53, 2, 1, "", "transform"], [53, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[53, 2, 1, "", "coords"]], "sympy.discrete": [[54, 0, 0, "-", "convolutions"], [54, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[54, 3, 1, "", "convolution"], [54, 3, 1, "", "convolution_fft"], [54, 3, 1, "", "convolution_fwht"], [54, 3, 1, "", "convolution_ntt"], [54, 3, 1, "", "convolution_subset"], [54, 3, 1, "", "covering_product"], [54, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[54, 3, 1, "", "fft"], [54, 3, 1, "", "fwht"], [54, 3, 1, "", "ifft"], [54, 3, 1, "", "ifwht"], [54, 3, 1, "", "intt"], [54, 3, 1, "", "inverse_mobius_transform"], [54, 3, 1, "", "mobius_transform"], [54, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[186, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[56, 1, 1, "", "FallingFactorial"], [56, 1, 1, "", "MultiFactorial"], [56, 1, 1, "", "RisingFactorial"], [56, 1, 1, "", "binomial"], [56, 1, 1, "", "factorial"], [56, 1, 1, "", "factorial2"], [56, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[56, 1, 1, "", "bell"], [56, 1, 1, "", "bernoulli"], [56, 1, 1, "", "catalan"], [56, 1, 1, "", "euler"], [56, 1, 1, "", "fibonacci"], [56, 1, 1, "", "genocchi"], [56, 1, 1, "", "harmonic"], [56, 1, 1, "", "lucas"], [56, 3, 1, "", "nC"], [56, 3, 1, "", "nP"], [56, 3, 1, "", "nT"], [56, 1, 1, "", "partition"], [56, 3, 1, "", "stirling"], [56, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[57, 1, 1, "", "Abs"], [57, 1, 1, "", "arg"], [57, 1, 1, "", "conjugate"], [57, 1, 1, "", "im"], [57, 1, 1, "", "periodic_argument"], [57, 1, 1, "", "polar_lift"], [57, 1, 1, "", "principal_branch"], [57, 1, 1, "", "re"], [57, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[57, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[57, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[57, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[57, 1, 1, "", "LambertW"], [57, 1, 1, "", "exp"], [57, 1, 1, "", "exp_polar"], [57, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[57, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[57, 2, 1, "", "as_real_imag"], [57, 4, 1, "", "base"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[57, 2, 1, "", "as_base_exp"], [57, 2, 1, "", "as_real_imag"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "inverse"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[57, 1, 1, "", "HyperbolicFunction"], [57, 1, 1, "", "acosh"], [57, 1, 1, "", "acoth"], [57, 1, 1, "", "acsch"], [57, 1, 1, "", "asech"], [57, 1, 1, "", "asinh"], [57, 1, 1, "", "atanh"], [57, 1, 1, "", "cosh"], [57, 1, 1, "", "coth"], [57, 1, 1, "", "csch"], [57, 1, 1, "", "sech"], [57, 1, 1, "", "sinh"], [57, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[57, 2, 1, "", "fdiff"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[57, 2, 1, "", "as_real_imag"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "inverse"], [57, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[57, 1, 1, "", "RoundFunction"], [57, 1, 1, "", "ceiling"], [57, 1, 1, "", "floor"], [57, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[57, 1, 1, "", "IdentityFunction"], [57, 1, 1, "", "Max"], [57, 1, 1, "", "Min"], [57, 3, 1, "", "cbrt"], [57, 3, 1, "", "real_root"], [57, 3, 1, "", "root"], [57, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[57, 1, 1, "", "ExprCondPair"], [57, 1, 1, "", "Piecewise"], [57, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[57, 4, 1, "", "cond"], [57, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[57, 2, 1, "", "_eval_integral"], [57, 2, 1, "", "as_expr_set_pairs"], [57, 2, 1, "", "doit"], [57, 2, 1, "", "eval"], [57, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[57, 1, 1, "", "acos"], [57, 1, 1, "", "acot"], [57, 1, 1, "", "acsc"], [57, 1, 1, "", "asec"], [57, 1, 1, "", "asin"], [57, 1, 1, "", "atan"], [57, 1, 1, "", "atan2"], [57, 1, 1, "", "cos"], [57, 1, 1, "", "cot"], [57, 1, 1, "", "csc"], [57, 1, 1, "", "sec"], [57, 1, 1, "", "sin"], [57, 1, 1, "", "sinc"], [57, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[57, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[57, 2, 1, "", "inverse"]], "sympy.functions.special": [[59, 0, 0, "-", "bessel"], [59, 0, 0, "-", "beta_functions"], [59, 0, 0, "-", "elliptic_integrals"], [59, 0, 0, "-", "error_functions"], [59, 0, 0, "-", "gamma_functions"], [59, 0, 0, "-", "mathieu_functions"], [59, 0, 0, "-", "polynomials"], [59, 0, 0, "-", "singularity_functions"], [59, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[59, 1, 1, "", "AiryBase"], [59, 1, 1, "", "BesselBase"], [59, 1, 1, "", "airyai"], [59, 1, 1, "", "airyaiprime"], [59, 1, 1, "", "airybi"], [59, 1, 1, "", "airybiprime"], [59, 1, 1, "", "besseli"], [59, 1, 1, "", "besselj"], [59, 1, 1, "", "besselk"], [59, 1, 1, "", "bessely"], [59, 1, 1, "", "hankel1"], [59, 1, 1, "", "hankel2"], [59, 1, 1, "", "jn"], [59, 3, 1, "", "jn_zeros"], [59, 1, 1, "", "marcumq"], [59, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[59, 4, 1, "", "argument"], [59, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[59, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[59, 3, 1, "", "bspline_basis"], [59, 3, 1, "", "bspline_basis_set"], [59, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[59, 1, 1, "", "DiracDelta"], [59, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"], [59, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"], [59, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[59, 1, 1, "", "elliptic_e"], [59, 1, 1, "", "elliptic_f"], [59, 1, 1, "", "elliptic_k"], [59, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[59, 1, 1, "", "Chi"], [59, 1, 1, "", "Ci"], [59, 3, 1, "", "E1"], [59, 1, 1, "", "Ei"], [59, 1, 1, "", "FresnelIntegral"], [59, 1, 1, "", "Li"], [59, 1, 1, "", "Shi"], [59, 1, 1, "", "Si"], [59, 1, 1, "", "erf"], [59, 1, 1, "", "erf2"], [59, 1, 1, "", "erf2inv"], [59, 1, 1, "", "erfc"], [59, 1, 1, "", "erfcinv"], [59, 1, 1, "", "erfi"], [59, 1, 1, "", "erfinv"], [59, 1, 1, "", "expint"], [59, 1, 1, "", "fresnelc"], [59, 1, 1, "", "fresnels"], [59, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[59, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[59, 1, 1, "", "digamma"], [59, 1, 1, "", "gamma"], [59, 1, 1, "", "loggamma"], [59, 1, 1, "", "lowergamma"], [59, 1, 1, "", "multigamma"], [59, 1, 1, "", "polygamma"], [59, 1, 1, "", "trigamma"], [59, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[59, 1, 1, "", "appellf1"], [59, 1, 1, "", "hyper"], [59, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[59, 4, 1, "", "ap"], [59, 4, 1, "", "argument"], [59, 4, 1, "", "bq"], [59, 4, 1, "", "convergence_statement"], [59, 4, 1, "", "eta"], [59, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[59, 4, 1, "", "an"], [59, 4, 1, "", "aother"], [59, 4, 1, "", "ap"], [59, 4, 1, "", "argument"], [59, 4, 1, "", "bm"], [59, 4, 1, "", "bother"], [59, 4, 1, "", "bq"], [59, 4, 1, "", "delta"], [59, 2, 1, "", "get_period"], [59, 2, 1, "", "integrand"], [59, 4, 1, "", "is_number"], [59, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[59, 1, 1, "", "MathieuBase"], [59, 1, 1, "", "mathieuc"], [59, 1, 1, "", "mathieucprime"], [59, 1, 1, "", "mathieus"], [59, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[59, 1, 1, "", "assoc_laguerre"], [59, 1, 1, "", "assoc_legendre"], [59, 1, 1, "", "chebyshevt"], [59, 1, 1, "", "chebyshevt_root"], [59, 1, 1, "", "chebyshevu"], [59, 1, 1, "", "chebyshevu_root"], [59, 1, 1, "", "gegenbauer"], [59, 1, 1, "", "hermite"], [59, 1, 1, "", "jacobi"], [59, 3, 1, "", "jacobi_normalized"], [59, 1, 1, "", "laguerre"], [59, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[59, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[59, 2, 1, "", "eval"], [59, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[59, 1, 1, "", "Ynm"], [59, 3, 1, "", "Ynm_c"], [59, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[59, 3, 1, "", "Eijk"], [59, 1, 1, "", "KroneckerDelta"], [59, 1, 1, "", "LeviCivita"], [59, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[59, 2, 1, "", "eval"], [59, 4, 1, "", "indices_contain_equal_information"], [59, 4, 1, "", "is_above_fermi"], [59, 4, 1, "", "is_below_fermi"], [59, 4, 1, "", "is_only_above_fermi"], [59, 4, 1, "", "is_only_below_fermi"], [59, 4, 1, "", "killable_index"], [59, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[59, 1, 1, "", "dirichlet_eta"], [59, 1, 1, "", "lerchphi"], [59, 1, 1, "", "polylog"], [59, 1, 1, "", "stieltjes"], [59, 1, 1, "", "zeta"]], "sympy.geometry": [[60, 0, 0, "-", "curve"], [61, 0, 0, "-", "ellipse"], [62, 0, 0, "-", "entity"], [64, 0, 0, "-", "line"], [65, 0, 0, "-", "plane"], [66, 0, 0, "-", "point"], [67, 0, 0, "-", "polygon"], [68, 0, 0, "-", "util"]], "sympy.geometry.curve": [[60, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[60, 4, 1, "", "ambient_dimension"], [60, 2, 1, "", "arbitrary_point"], [60, 4, 1, "", "free_symbols"], [60, 4, 1, "", "functions"], [60, 4, 1, "", "length"], [60, 4, 1, "", "limits"], [60, 4, 1, "", "parameter"], [60, 2, 1, "", "plot_interval"], [60, 2, 1, "", "rotate"], [60, 2, 1, "", "scale"], [60, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[61, 1, 1, "", "Circle"], [61, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[61, 4, 1, "", "circumference"], [61, 2, 1, "", "equation"], [61, 2, 1, "", "intersection"], [61, 4, 1, "", "radius"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "scale"], [61, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[61, 4, 1, "", "apoapsis"], [61, 2, 1, "", "arbitrary_point"], [61, 4, 1, "", "area"], [61, 2, 1, "", "auxiliary_circle"], [61, 4, 1, "", "bounds"], [61, 4, 1, "", "center"], [61, 4, 1, "", "circumference"], [61, 2, 1, "", "director_circle"], [61, 4, 1, "", "eccentricity"], [61, 2, 1, "", "encloses_point"], [61, 2, 1, "", "equation"], [61, 2, 1, "", "evolute"], [61, 4, 1, "", "foci"], [61, 4, 1, "", "focus_distance"], [61, 4, 1, "", "hradius"], [61, 2, 1, "", "intersection"], [61, 2, 1, "", "is_tangent"], [61, 4, 1, "", "major"], [61, 4, 1, "", "minor"], [61, 2, 1, "", "normal_lines"], [61, 4, 1, "", "periapsis"], [61, 2, 1, "", "plot_interval"], [61, 2, 1, "", "polar_second_moment_of_area"], [61, 2, 1, "", "random_point"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "rotate"], [61, 2, 1, "", "scale"], [61, 2, 1, "", "second_moment_of_area"], [61, 2, 1, "", "section_modulus"], [61, 4, 1, "", "semilatus_rectum"], [61, 2, 1, "", "tangent_lines"], [61, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[62, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[62, 4, 1, "", "ambient_dimension"], [62, 4, 1, "", "bounds"], [62, 2, 1, "", "encloses"], [62, 2, 1, "", "intersection"], [62, 2, 1, "", "is_similar"], [62, 2, 1, "", "parameter_value"], [62, 2, 1, "", "reflect"], [62, 2, 1, "", "rotate"], [62, 2, 1, "", "scale"], [62, 2, 1, "", "translate"]], "sympy.geometry.line": [[64, 1, 1, "", "Line"], [64, 1, 1, "", "Line2D"], [64, 1, 1, "", "Line3D"], [64, 1, 1, "", "LinearEntity"], [64, 1, 1, "", "LinearEntity2D"], [64, 1, 1, "", "LinearEntity3D"], [64, 1, 1, "", "Ray"], [64, 1, 1, "", "Ray2D"], [64, 1, 1, "", "Ray3D"], [64, 1, 1, "", "Segment"], [64, 1, 1, "", "Segment2D"], [64, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[64, 4, 1, "", "coefficients"], [64, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[64, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[64, 4, 1, "", "ambient_dimension"], [64, 2, 1, "", "angle_between"], [64, 2, 1, "", "arbitrary_point"], [64, 2, 1, "", "are_concurrent"], [64, 2, 1, "", "bisectors"], [64, 2, 1, "", "contains"], [64, 4, 1, "", "direction"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "is_parallel"], [64, 2, 1, "", "is_perpendicular"], [64, 2, 1, "", "is_similar"], [64, 4, 1, "", "length"], [64, 4, 1, "", "p1"], [64, 4, 1, "", "p2"], [64, 2, 1, "", "parallel_line"], [64, 2, 1, "", "perpendicular_line"], [64, 2, 1, "", "perpendicular_segment"], [64, 4, 1, "", "points"], [64, 2, 1, "", "projection"], [64, 2, 1, "", "random_point"], [64, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[64, 4, 1, "", "bounds"], [64, 2, 1, "", "perpendicular_line"], [64, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[64, 4, 1, "", "direction_cosine"], [64, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "plot_interval"], [64, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[64, 2, 1, "", "closing_angle"], [64, 4, 1, "", "xdirection"], [64, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[64, 4, 1, "", "xdirection"], [64, 4, 1, "", "ydirection"], [64, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[64, 2, 1, "", "contains"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 4, 1, "", "length"], [64, 4, 1, "", "midpoint"], [64, 2, 1, "", "perpendicular_bisector"], [64, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[65, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[65, 2, 1, "", "angle_between"], [65, 2, 1, "", "arbitrary_point"], [65, 2, 1, "", "are_concurrent"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "equals"], [65, 2, 1, "", "equation"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "is_coplanar"], [65, 2, 1, "", "is_parallel"], [65, 2, 1, "", "is_perpendicular"], [65, 4, 1, "", "normal_vector"], [65, 4, 1, "", "p1"], [65, 2, 1, "", "parallel_plane"], [65, 2, 1, "", "parameter_value"], [65, 2, 1, "", "perpendicular_line"], [65, 2, 1, "", "perpendicular_plane"], [65, 2, 1, "", "projection"], [65, 2, 1, "", "projection_line"], [65, 2, 1, "", "random_point"]], "sympy.geometry.point": [[66, 1, 1, "", "Point"], [66, 1, 1, "", "Point2D"], [66, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[66, 2, 1, "", "affine_rank"], [66, 4, 1, "", "ambient_dimension"], [66, 2, 1, "", "are_coplanar"], [66, 2, 1, "", "canberra_distance"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "dot"], [66, 2, 1, "", "equals"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "is_collinear"], [66, 2, 1, "", "is_concyclic"], [66, 4, 1, "", "is_nonzero"], [66, 2, 1, "", "is_scalar_multiple"], [66, 4, 1, "", "is_zero"], [66, 4, 1, "", "length"], [66, 2, 1, "", "midpoint"], [66, 4, 1, "", "origin"], [66, 4, 1, "", "orthogonal_direction"], [66, 2, 1, "", "project"], [66, 2, 1, "", "taxicab_distance"], [66, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[66, 4, 1, "", "bounds"], [66, 4, 1, "", "coordinates"], [66, 2, 1, "", "rotate"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "transform"], [66, 2, 1, "", "translate"], [66, 4, 1, "", "x"], [66, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[66, 2, 1, "", "are_collinear"], [66, 4, 1, "", "coordinates"], [66, 2, 1, "", "direction_cosine"], [66, 2, 1, "", "direction_ratio"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "transform"], [66, 2, 1, "", "translate"], [66, 4, 1, "", "x"], [66, 4, 1, "", "y"], [66, 4, 1, "", "z"]], "sympy.geometry.polygon": [[67, 1, 1, "", "Polygon"], [67, 1, 1, "", "RegularPolygon"], [67, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[67, 4, 1, "", "angles"], [67, 2, 1, "", "arbitrary_point"], [67, 4, 1, "", "area"], [67, 2, 1, "", "bisectors"], [67, 4, 1, "", "bounds"], [67, 4, 1, "", "centroid"], [67, 2, 1, "", "cut_section"], [67, 2, 1, "", "distance"], [67, 2, 1, "", "encloses_point"], [67, 2, 1, "", "first_moment_of_area"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "is_convex"], [67, 4, 1, "", "perimeter"], [67, 2, 1, "", "plot_interval"], [67, 2, 1, "", "polar_second_moment_of_area"], [67, 2, 1, "", "second_moment_of_area"], [67, 2, 1, "", "section_modulus"], [67, 4, 1, "", "sides"], [67, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[67, 4, 1, "", "angles"], [67, 4, 1, "", "apothem"], [67, 4, 1, "", "area"], [67, 4, 1, "", "args"], [67, 4, 1, "", "center"], [67, 4, 1, "", "centroid"], [67, 4, 1, "", "circumcenter"], [67, 4, 1, "", "circumcircle"], [67, 4, 1, "", "circumradius"], [67, 2, 1, "", "encloses_point"], [67, 4, 1, "", "exterior_angle"], [67, 4, 1, "", "incircle"], [67, 4, 1, "", "inradius"], [67, 4, 1, "", "interior_angle"], [67, 4, 1, "", "length"], [67, 4, 1, "", "radius"], [67, 2, 1, "", "reflect"], [67, 2, 1, "", "rotate"], [67, 4, 1, "", "rotation"], [67, 2, 1, "", "scale"], [67, 2, 1, "", "spin"], [67, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[67, 4, 1, "", "altitudes"], [67, 2, 1, "", "bisectors"], [67, 4, 1, "", "circumcenter"], [67, 4, 1, "", "circumcircle"], [67, 4, 1, "", "circumradius"], [67, 4, 1, "", "eulerline"], [67, 4, 1, "", "excenters"], [67, 4, 1, "", "exradii"], [67, 4, 1, "", "incenter"], [67, 4, 1, "", "incircle"], [67, 4, 1, "", "inradius"], [67, 2, 1, "", "is_equilateral"], [67, 2, 1, "", "is_isosceles"], [67, 2, 1, "", "is_right"], [67, 2, 1, "", "is_scalene"], [67, 2, 1, "", "is_similar"], [67, 4, 1, "", "medial"], [67, 4, 1, "", "medians"], [67, 4, 1, "", "nine_point_circle"], [67, 4, 1, "", "orthocenter"], [67, 4, 1, "", "vertices"]], "sympy.geometry.util": [[68, 3, 1, "", "are_similar"], [68, 3, 1, "", "centroid"], [68, 3, 1, "", "convex_hull"], [68, 3, 1, "", "idiff"], [68, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[74, 1, 1, "", "DifferentialOperator"], [74, 1, 1, "", "DifferentialOperatorAlgebra"], [74, 3, 1, "", "DifferentialOperators"], [74, 1, 1, "", "HolonomicFunction"], [72, 3, 1, "", "_convert_poly_rat_alg"], [72, 3, 1, "", "_create_table"], [70, 3, 1, "", "expr_to_holonomic"], [70, 3, 1, "", "from_hyper"], [70, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[74, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[73, 2, 1, "", "composition"], [73, 2, 1, "", "diff"], [73, 2, 1, "", "evalf"], [73, 2, 1, "", "integrate"], [73, 2, 1, "", "series"], [73, 2, 1, "", "to_expr"], [73, 2, 1, "", "to_hyper"], [73, 2, 1, "", "to_meijerg"], [73, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[78, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[78, 3, 1, "", "components"], [78, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[78, 1, 1, "", "Integral"], [78, 3, 1, "", "integrate"], [78, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[78, 2, 1, "", "as_sum"], [78, 2, 1, "", "doit"], [78, 4, 1, "", "free_symbols"], [78, 6, 1, "", "is_commutative"], [78, 2, 1, "", "principal_value"], [78, 2, 1, "", "transform"]], "sympy.integrals": [[78, 0, 0, "-", "intpoly"], [76, 0, 0, "-", "meijerint"], [76, 0, 0, "-", "meijerint_doc"], [78, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[78, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[78, 3, 1, "", "integral_steps"], [78, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[76, 7, 1, "", "_CoeffExpValueError"], [76, 3, 1, "", "_check_antecedents"], [76, 3, 1, "", "_check_antecedents_1"], [76, 3, 1, "", "_check_antecedents_inversion"], [76, 3, 1, "", "_condsimp"], [76, 3, 1, "", "_create_lookup_table"], [76, 3, 1, "", "_dummy"], [76, 3, 1, "", "_dummy_"], [76, 3, 1, "", "_eval_cond"], [76, 3, 1, "", "_exponents"], [76, 3, 1, "", "_find_splitting_points"], [76, 3, 1, "", "_flip_g"], [76, 3, 1, "", "_functions"], [76, 3, 1, "", "_get_coeff_exp"], [76, 3, 1, "", "_guess_expansion"], [76, 3, 1, "", "_inflate_fox_h"], [76, 3, 1, "", "_inflate_g"], [76, 3, 1, "", "_int0oo"], [76, 3, 1, "", "_int0oo_1"], [76, 3, 1, "", "_int_inversion"], [76, 3, 1, "", "_is_analytic"], [76, 3, 1, "", "_meijerint_definite_2"], [76, 3, 1, "", "_meijerint_definite_3"], [76, 3, 1, "", "_meijerint_definite_4"], [76, 3, 1, "", "_meijerint_indefinite_1"], [76, 3, 1, "", "_mul_args"], [76, 3, 1, "", "_mul_as_two_parts"], [76, 3, 1, "", "_my_principal_branch"], [76, 3, 1, "", "_mytype"], [76, 3, 1, "", "_rewrite1"], [76, 3, 1, "", "_rewrite2"], [76, 3, 1, "", "_rewrite_inversion"], [76, 3, 1, "", "_rewrite_saxena"], [76, 3, 1, "", "_rewrite_saxena_1"], [76, 3, 1, "", "_rewrite_single"], [76, 3, 1, "", "_split_mul"], [76, 3, 1, "", "meijerint_definite"], [76, 3, 1, "", "meijerint_indefinite"], [76, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[78, 3, 1, "", "gauss_chebyshev_t"], [78, 3, 1, "", "gauss_chebyshev_u"], [78, 3, 1, "", "gauss_gen_laguerre"], [78, 3, 1, "", "gauss_hermite"], [78, 3, 1, "", "gauss_jacobi"], [78, 3, 1, "", "gauss_laguerre"], [78, 3, 1, "", "gauss_legendre"], [78, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[78, 3, 1, "", "ratint"], [78, 3, 1, "", "ratint_logpart"], [78, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[78, 1, 1, "", "NonElementaryIntegral"], [78, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[78, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[78, 1, 1, "", "CosineTransform"], [78, 1, 1, "", "FourierTransform"], [78, 1, 1, "", "HankelTransform"], [78, 1, 1, "", "IntegralTransform"], [78, 7, 1, "", "IntegralTransformError"], [78, 1, 1, "", "InverseCosineTransform"], [78, 1, 1, "", "InverseFourierTransform"], [78, 1, 1, "", "InverseHankelTransform"], [78, 1, 1, "", "InverseLaplaceTransform"], [78, 1, 1, "", "InverseMellinTransform"], [78, 1, 1, "", "InverseSineTransform"], [78, 1, 1, "", "LaplaceTransform"], [78, 1, 1, "", "MellinTransform"], [78, 1, 1, "", "SineTransform"], [78, 3, 1, "", "_fast_inverse_laplace"], [78, 3, 1, "", "_fourier_transform"], [78, 3, 1, "", "cosine_transform"], [78, 3, 1, "", "fourier_transform"], [78, 3, 1, "", "hankel_transform"], [78, 3, 1, "", "inverse_cosine_transform"], [78, 3, 1, "", "inverse_fourier_transform"], [78, 3, 1, "", "inverse_hankel_transform"], [78, 3, 1, "", "inverse_laplace_transform"], [78, 3, 1, "", "inverse_mellin_transform"], [78, 3, 1, "", "inverse_sine_transform"], [78, 3, 1, "", "laplace_transform"], [78, 3, 1, "", "mellin_transform"], [78, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[78, 2, 1, "", "doit"], [78, 4, 1, "", "function"], [78, 4, 1, "", "function_variable"], [78, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[78, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[79, 0, 0, "-", "printing"], [79, 0, 0, "-", "session"]], "sympy.interactive.printing": [[79, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[79, 3, 1, "", "enable_automatic_int_sympification"], [79, 3, 1, "", "enable_automatic_symbols"], [79, 3, 1, "", "init_ipython_session"], [79, 3, 1, "", "init_python_session"], [79, 3, 1, "", "init_session"], [79, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[80, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[80, 1, 1, "", "CartanType_generator"], [80, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[80, 2, 1, "", "rank"], [80, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[80, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[80, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[80, 2, 1, "", "add_as_roots"], [80, 2, 1, "", "add_simple_roots"], [80, 2, 1, "", "all_roots"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dynkin_diagram"], [80, 2, 1, "", "root_space"], [80, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[80, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "highest_root"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[80, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[80, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[80, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "lie_algebra"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[80, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[80, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[80, 2, 1, "", "basic_root"], [80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[80, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[80, 2, 1, "", "basis"], [80, 2, 1, "", "cartan_matrix"], [80, 2, 1, "", "dimension"], [80, 2, 1, "", "positive_roots"], [80, 2, 1, "", "roots"], [80, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[80, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[80, 2, 1, "", "coxeter_diagram"], [80, 2, 1, "", "delete_doubles"], [80, 2, 1, "", "element_order"], [80, 2, 1, "", "generators"], [80, 2, 1, "", "group_name"], [80, 2, 1, "", "group_order"], [80, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[81, 3, 1, "", "ANFform"], [81, 1, 1, "", "And"], [81, 1, 1, "", "Boolean"], [81, 1, 1, "", "BooleanFalse"], [81, 1, 1, "", "BooleanTrue"], [81, 1, 1, "", "Equivalent"], [81, 1, 1, "", "Exclusive"], [81, 1, 1, "", "ITE"], [81, 1, 1, "", "Implies"], [81, 1, 1, "", "Nand"], [81, 1, 1, "", "Nor"], [81, 1, 1, "", "Not"], [81, 1, 1, "", "Or"], [81, 3, 1, "", "POSform"], [81, 3, 1, "", "SOPform"], [81, 1, 1, "", "Xnor"], [81, 1, 1, "", "Xor"], [81, 3, 1, "", "anf_coeffs"], [81, 3, 1, "", "bool_map"], [81, 3, 1, "", "bool_maxterm"], [81, 3, 1, "", "bool_minterm"], [81, 3, 1, "", "bool_monomial"], [81, 3, 1, "", "distribute_and_over_or"], [81, 3, 1, "", "distribute_or_over_and"], [81, 3, 1, "", "distribute_xor_over_and"], [81, 3, 1, "", "eliminate_implications"], [81, 3, 1, "", "gateinputcount"], [81, 3, 1, "", "integer_to_term"], [81, 3, 1, "", "is_anf"], [81, 3, 1, "", "is_cnf"], [81, 3, 1, "", "is_dnf"], [81, 3, 1, "", "is_nnf"], [81, 3, 1, "", "simplify_logic"], [81, 3, 1, "", "term_to_integer"], [81, 3, 1, "", "to_anf"], [81, 3, 1, "", "to_cnf"], [81, 3, 1, "", "to_dnf"], [81, 3, 1, "", "to_int_repr"], [81, 3, 1, "", "to_nnf"], [81, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[81, 2, 1, "", "as_set"], [81, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[81, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[81, 2, 1, "", "as_set"]], "sympy.logic": [[81, 0, 0, "-", "inference"]], "sympy.logic.inference": [[81, 3, 1, "", "satisfiable"]], "sympy.matrices": [[82, 0, 0, "-", "common"], [84, 0, 0, "-", "expressions"], [85, 0, 0, "-", "immutable"], [87, 0, 0, "-", "matrices"], [89, 0, 0, "-", "sparse"], [90, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[82, 1, 1, "", "MatrixCommon"], [82, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[82, 4, 1, "", "C"], [82, 4, 1, "", "H"], [82, 4, 1, "", "T"], [82, 2, 1, "", "__abs__"], [82, 2, 1, "", "__add__"], [82, 2, 1, "", "__getitem__"], [82, 2, 1, "", "__len__"], [82, 2, 1, "", "__mul__"], [82, 2, 1, "", "__pow__"], [82, 5, 1, "", "__weakref__"], [82, 2, 1, "", "adjoint"], [82, 2, 1, "", "applyfunc"], [82, 2, 1, "", "as_real_imag"], [82, 2, 1, "", "atoms"], [82, 2, 1, "", "col"], [82, 2, 1, "", "col_del"], [82, 2, 1, "", "col_insert"], [82, 2, 1, "", "col_join"], [82, 2, 1, "", "companion"], [82, 2, 1, "", "conjugate"], [82, 2, 1, "", "diag"], [82, 2, 1, "", "diagonal"], [82, 2, 1, "", "evalf"], [82, 2, 1, "", "expand"], [82, 2, 1, "", "extract"], [82, 2, 1, "", "eye"], [82, 4, 1, "", "free_symbols"], [82, 2, 1, "", "get_diag_blocks"], [82, 2, 1, "", "has"], [82, 2, 1, "", "hstack"], [82, 2, 1, "", "is_anti_symmetric"], [82, 2, 1, "", "is_diagonal"], [82, 4, 1, "", "is_hermitian"], [82, 4, 1, "", "is_lower"], [82, 4, 1, "", "is_lower_hessenberg"], [82, 4, 1, "", "is_square"], [82, 4, 1, "", "is_strongly_diagonally_dominant"], [82, 2, 1, "", "is_symbolic"], [82, 2, 1, "", "is_symmetric"], [82, 4, 1, "", "is_upper"], [82, 4, 1, "", "is_upper_hessenberg"], [82, 4, 1, "", "is_weakly_diagonally_dominant"], [82, 4, 1, "", "is_zero_matrix"], [82, 2, 1, "", "jordan_block"], [82, 2, 1, "", "lower_triangular"], [82, 2, 1, "", "multiply"], [82, 2, 1, "", "multiply_elementwise"], [82, 2, 1, "", "n"], [82, 2, 1, "", "ones"], [82, 2, 1, "", "permute"], [82, 2, 1, "", "permute_cols"], [82, 2, 1, "", "permute_rows"], [82, 2, 1, "", "pow"], [82, 2, 1, "", "refine"], [82, 2, 1, "", "replace"], [82, 2, 1, "", "reshape"], [82, 2, 1, "", "rmultiply"], [82, 2, 1, "", "rot90"], [82, 2, 1, "", "row"], [82, 2, 1, "", "row_del"], [82, 2, 1, "", "row_insert"], [82, 2, 1, "", "row_join"], [82, 4, 1, "", "shape"], [82, 2, 1, "", "simplify"], [82, 2, 1, "", "subs"], [82, 2, 1, "", "todod"], [82, 2, 1, "", "todok"], [82, 2, 1, "", "tolist"], [82, 2, 1, "", "trace"], [82, 2, 1, "", "transpose"], [82, 2, 1, "", "upper_triangular"], [82, 2, 1, "", "values"], [82, 2, 1, "", "vec"], [82, 2, 1, "", "vech"], [82, 2, 1, "", "vstack"], [82, 2, 1, "", "wilkinson"], [82, 2, 1, "", "xreplace"], [82, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[83, 1, 1, "", "DenseMatrix"], [87, 3, 1, "", "GramSchmidt"], [83, 5, 1, "", "Matrix"], [83, 1, 1, "", "MutableDenseMatrix"], [87, 3, 1, "", "casoratian"], [87, 3, 1, "", "diag"], [87, 3, 1, "", "eye"], [87, 3, 1, "", "hessian"], [87, 3, 1, "", "jordan_cell"], [87, 3, 1, "", "list2numpy"], [87, 3, 1, "", "matrix2numpy"], [87, 3, 1, "", "matrix_multiply_elementwise"], [87, 3, 1, "", "ones"], [87, 3, 1, "", "randMatrix"], [87, 3, 1, "", "rot_axis1"], [87, 3, 1, "", "rot_axis2"], [87, 3, 1, "", "rot_axis3"], [87, 3, 1, "", "symarray"], [87, 3, 1, "", "wronskian"], [87, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[83, 2, 1, "", "LDLdecomposition"], [83, 2, 1, "", "as_immutable"], [83, 2, 1, "", "as_mutable"], [83, 2, 1, "", "cholesky"], [83, 2, 1, "", "lower_triangular_solve"], [83, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[83, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[84, 1, 1, "", "CompanionMatrix"], [84, 1, 1, "", "FunctionMatrix"], [84, 1, 1, "", "HadamardPower"], [84, 1, 1, "", "HadamardProduct"], [84, 1, 1, "", "Identity"], [84, 1, 1, "", "Inverse"], [84, 1, 1, "", "MatAdd"], [84, 1, 1, "", "MatMul"], [84, 1, 1, "", "MatPow"], [84, 1, 1, "", "MatrixExpr"], [84, 1, 1, "", "MatrixPermute"], [84, 1, 1, "", "MatrixSet"], [84, 1, 1, "", "MatrixSymbol"], [84, 1, 1, "", "PermutationMatrix"], [84, 1, 1, "", "Trace"], [84, 1, 1, "", "Transpose"], [84, 1, 1, "", "ZeroMatrix"], [84, 0, 0, "-", "blockmatrix"]], "sympy.matrices.expressions.MatrixExpr": [[84, 4, 1, "", "T"], [84, 2, 1, "", "as_coeff_Mul"], [84, 2, 1, "", "as_explicit"], [84, 2, 1, "", "as_mutable"], [84, 2, 1, "", "equals"], [84, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[84, 1, 1, "", "BlockDiagMatrix"], [84, 1, 1, "", "BlockMatrix"], [84, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[84, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[84, 2, 1, "", "LDUdecomposition"], [84, 2, 1, "", "LUdecomposition"], [84, 2, 1, "", "UDLdecomposition"], [84, 2, 1, "", "schur"], [84, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[85, 1, 1, "", "ImmutableDenseMatrix"], [85, 5, 1, "", "ImmutableMatrix"], [89, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[87, 1, 1, "", "MatrixBase"], [87, 1, 1, "", "MatrixCalculus"], [87, 1, 1, "", "MatrixDeterminant"], [87, 1, 1, "", "MatrixEigen"], [87, 1, 1, "", "MatrixError"], [87, 1, 1, "", "MatrixReductions"], [87, 1, 1, "", "MatrixSubspaces"], [87, 1, 1, "", "NonSquareMatrixError"], [87, 1, 1, "", "ShapeError"], [87, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[87, 4, 1, "", "D"], [87, 2, 1, "", "LDLdecomposition"], [87, 2, 1, "", "LDLsolve"], [87, 2, 1, "", "LUdecomposition"], [87, 2, 1, "", "LUdecompositionFF"], [87, 2, 1, "", "LUdecomposition_Simple"], [87, 2, 1, "", "LUsolve"], [87, 2, 1, "", "QRdecomposition"], [87, 2, 1, "", "QRsolve"], [87, 2, 1, "", "add"], [87, 2, 1, "", "analytic_func"], [87, 2, 1, "", "cholesky"], [87, 2, 1, "", "cholesky_solve"], [87, 2, 1, "", "condition_number"], [87, 2, 1, "", "connected_components"], [87, 2, 1, "", "connected_components_decomposition"], [87, 2, 1, "", "copy"], [87, 2, 1, "", "cross"], [87, 2, 1, "", "diagonal_solve"], [87, 2, 1, "", "dot"], [87, 2, 1, "", "dual"], [87, 2, 1, "", "exp"], [87, 2, 1, "", "gauss_jordan_solve"], [87, 2, 1, "", "inv"], [87, 2, 1, "", "inv_mod"], [87, 2, 1, "", "inverse_ADJ"], [87, 2, 1, "", "inverse_BLOCK"], [87, 2, 1, "", "inverse_CH"], [87, 2, 1, "", "inverse_GE"], [87, 2, 1, "", "inverse_LDL"], [87, 2, 1, "", "inverse_LU"], [87, 2, 1, "", "inverse_QR"], [87, 2, 1, "", "irregular"], [87, 2, 1, "", "is_nilpotent"], [87, 2, 1, "", "key2bounds"], [87, 2, 1, "", "key2ij"], [87, 2, 1, "", "log"], [87, 2, 1, "", "lower_triangular_solve"], [87, 2, 1, "", "norm"], [87, 2, 1, "", "normalized"], [87, 2, 1, "", "pinv"], [87, 2, 1, "", "pinv_solve"], [87, 2, 1, "", "print_nonzero"], [87, 2, 1, "", "project"], [87, 2, 1, "", "rank_decomposition"], [87, 2, 1, "", "singular_value_decomposition"], [87, 2, 1, "", "solve"], [87, 2, 1, "", "solve_least_squares"], [87, 2, 1, "", "strongly_connected_components"], [87, 2, 1, "", "strongly_connected_components_decomposition"], [87, 2, 1, "", "table"], [87, 2, 1, "", "upper_hessenberg_decomposition"], [87, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[87, 2, 1, "", "diff"], [87, 2, 1, "", "integrate"], [87, 2, 1, "", "jacobian"], [87, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[87, 2, 1, "", "adjugate"], [87, 2, 1, "", "charpoly"], [87, 2, 1, "", "cofactor"], [87, 2, 1, "", "cofactor_matrix"], [87, 2, 1, "", "det"], [87, 2, 1, "", "minor"], [87, 2, 1, "", "minor_submatrix"], [87, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[87, 2, 1, "", "bidiagonal_decomposition"], [87, 2, 1, "", "bidiagonalize"], [87, 2, 1, "", "diagonalize"], [87, 2, 1, "", "eigenvals"], [87, 2, 1, "", "eigenvects"], [87, 2, 1, "", "is_diagonalizable"], [87, 4, 1, "", "is_indefinite"], [87, 4, 1, "", "is_negative_definite"], [87, 4, 1, "", "is_negative_semidefinite"], [87, 4, 1, "", "is_positive_definite"], [87, 4, 1, "", "is_positive_semidefinite"], [87, 2, 1, "", "jordan_form"], [87, 2, 1, "", "left_eigenvects"], [87, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[87, 2, 1, "", "echelon_form"], [87, 2, 1, "", "elementary_col_op"], [87, 2, 1, "", "elementary_row_op"], [87, 4, 1, "", "is_echelon"], [87, 2, 1, "", "rank"], [87, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[87, 2, 1, "", "columnspace"], [87, 2, 1, "", "nullspace"], [87, 2, 1, "", "orthogonalize"], [87, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[88, 3, 1, "", "hermite_normal_form"], [88, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[89, 1, 1, "", "MutableSparseMatrix"], [89, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[90, 2, 1, "", "_csrtodok"], [90, 2, 1, "", "_doktocsr"], [90, 2, 1, "", "banded"]], "sympy.ntheory": [[91, 0, 0, "-", "bbp_pi"], [91, 0, 0, "-", "continued_fraction"], [91, 0, 0, "-", "digits"], [91, 0, 0, "-", "ecm"], [91, 0, 0, "-", "egyptian_fraction"], [91, 0, 0, "-", "factor_"], [91, 0, 0, "-", "generate"], [91, 1, 1, "", "mobius"], [91, 0, 0, "-", "modular"], [91, 0, 0, "-", "multinomial"], [91, 0, 0, "-", "partitions_"], [91, 0, 0, "-", "primetest"], [91, 0, 0, "-", "qs"], [91, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[91, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[91, 3, 1, "", "continued_fraction"], [91, 3, 1, "", "continued_fraction_convergents"], [91, 3, 1, "", "continued_fraction_iterator"], [91, 3, 1, "", "continued_fraction_periodic"], [91, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[91, 3, 1, "", "count_digits"], [91, 3, 1, "", "digits"], [91, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[91, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[91, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[91, 3, 1, "", "abundance"], [91, 3, 1, "", "antidivisor_count"], [91, 3, 1, "", "antidivisors"], [91, 3, 1, "", "core"], [91, 3, 1, "", "digits"], [91, 3, 1, "", "divisor_count"], [91, 1, 1, "", "divisor_sigma"], [91, 3, 1, "", "divisors"], [91, 3, 1, "", "factorint"], [91, 3, 1, "", "factorrat"], [91, 3, 1, "", "is_abundant"], [91, 3, 1, "", "is_amicable"], [91, 3, 1, "", "is_deficient"], [91, 3, 1, "", "is_mersenne_prime"], [91, 3, 1, "", "is_perfect"], [91, 3, 1, "", "mersenne_prime_exponent"], [91, 3, 1, "", "multiplicity"], [91, 3, 1, "", "perfect_power"], [91, 3, 1, "", "pollard_pm1"], [91, 3, 1, "", "pollard_rho"], [91, 3, 1, "", "primefactors"], [91, 1, 1, "", "primenu"], [91, 1, 1, "", "primeomega"], [91, 3, 1, "", "proper_divisor_count"], [91, 3, 1, "", "proper_divisors"], [91, 1, 1, "", "reduced_totient"], [91, 3, 1, "", "smoothness"], [91, 3, 1, "", "smoothness_p"], [91, 1, 1, "", "totient"], [91, 3, 1, "", "trailing"], [91, 3, 1, "", "udivisor_count"], [91, 1, 1, "", "udivisor_sigma"], [91, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[91, 1, 1, "", "Sieve"], [91, 3, 1, "", "composite"], [91, 3, 1, "", "compositepi"], [91, 3, 1, "", "cycle_length"], [91, 3, 1, "", "nextprime"], [91, 3, 1, "", "prevprime"], [91, 3, 1, "", "prime"], [91, 3, 1, "", "primepi"], [91, 3, 1, "", "primerange"], [91, 3, 1, "", "primorial"], [91, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[91, 2, 1, "", "extend"], [91, 2, 1, "", "extend_to_no"], [91, 2, 1, "", "mobiusrange"], [91, 2, 1, "", "primerange"], [91, 2, 1, "", "search"], [91, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[91, 3, 1, "", "crt"], [91, 3, 1, "", "crt1"], [91, 3, 1, "", "crt2"], [91, 3, 1, "", "solve_congruence"], [91, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[91, 3, 1, "", "binomial_coefficients"], [91, 3, 1, "", "binomial_coefficients_list"], [91, 3, 1, "", "multinomial_coefficients"], [91, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[91, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[91, 3, 1, "", "is_euler_pseudoprime"], [91, 3, 1, "", "is_extra_strong_lucas_prp"], [91, 3, 1, "", "is_gaussian_prime"], [91, 3, 1, "", "is_lucas_prp"], [91, 3, 1, "", "is_square"], [91, 3, 1, "", "is_strong_lucas_prp"], [91, 3, 1, "", "isprime"], [91, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[91, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[91, 3, 1, "", "discrete_log"], [91, 3, 1, "", "is_nthpow_residue"], [91, 3, 1, "", "is_primitive_root"], [91, 3, 1, "", "is_quad_residue"], [91, 3, 1, "", "jacobi_symbol"], [91, 3, 1, "", "legendre_symbol"], [91, 3, 1, "", "n_order"], [91, 3, 1, "", "nthroot_mod"], [91, 3, 1, "", "primitive_root"], [91, 3, 1, "", "quadratic_residues"], [91, 3, 1, "", "sqrt_mod"], [91, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[93, 1, 1, "", "LaTeXParsingError"], [93, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[93, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[93, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[93, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[93, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[93, 2, 1, "", "convert_to_c"], [93, 2, 1, "", "convert_to_expr"], [93, 2, 1, "", "convert_to_fortran"], [93, 2, 1, "", "convert_to_python"], [93, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[93, 3, 1, "", "auto_number"], [93, 3, 1, "", "auto_symbol"], [93, 3, 1, "", "convert_xor"], [93, 3, 1, "", "eval_expr"], [93, 3, 1, "", "factorial_notation"], [93, 3, 1, "", "function_exponentiation"], [93, 3, 1, "", "implicit_application"], [93, 3, 1, "", "implicit_multiplication"], [93, 3, 1, "", "implicit_multiplication_application"], [93, 3, 1, "", "lambda_notation"], [93, 3, 1, "", "parse_expr"], [93, 3, 1, "", "rationalize"], [93, 3, 1, "", "repeated_decimals"], [93, 3, 1, "", "split_symbols"], [93, 3, 1, "", "split_symbols_custom"], [93, 6, 1, "", "standard_transformations"], [93, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[94, 0, 0, "-", "beam"]], "sympy.physics.continuum_mechanics.beam": [[94, 1, 1, "", "Beam"], [94, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[94, 4, 1, "", "applied_loads"], [94, 2, 1, "", "apply_load"], [94, 2, 1, "", "apply_support"], [94, 4, 1, "", "area"], [94, 2, 1, "", "bending_moment"], [94, 4, 1, "", "boundary_conditions"], [94, 4, 1, "", "cross_section"], [94, 2, 1, "", "deflection"], [94, 2, 1, "", "draw"], [94, 4, 1, "", "elastic_modulus"], [94, 4, 1, "", "ild_moment"], [94, 4, 1, "", "ild_reactions"], [94, 4, 1, "", "ild_shear"], [94, 2, 1, "", "join"], [94, 4, 1, "", "length"], [94, 4, 1, "", "load"], [94, 2, 1, "", "max_bmoment"], [94, 2, 1, "", "max_deflection"], [94, 2, 1, "", "max_shear_force"], [94, 2, 1, "", "plot_bending_moment"], [94, 2, 1, "", "plot_deflection"], [94, 2, 1, "", "plot_ild_moment"], [94, 2, 1, "", "plot_ild_reactions"], [94, 2, 1, "", "plot_ild_shear"], [94, 2, 1, "", "plot_loading_results"], [94, 2, 1, "", "plot_shear_force"], [94, 2, 1, "", "plot_shear_stress"], [94, 2, 1, "", "plot_slope"], [94, 2, 1, "", "point_cflexure"], [94, 4, 1, "", "reaction_loads"], [94, 2, 1, "", "remove_load"], [94, 4, 1, "", "second_moment"], [94, 2, 1, "", "shear_force"], [94, 2, 1, "", "shear_stress"], [94, 2, 1, "", "slope"], [94, 2, 1, "", "solve_for_ild_moment"], [94, 2, 1, "", "solve_for_ild_reactions"], [94, 2, 1, "", "solve_for_ild_shear"], [94, 2, 1, "", "solve_for_reaction_loads"], [94, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[94, 2, 1, "", "apply_load"], [94, 2, 1, "", "apply_moment_load"], [94, 4, 1, "", "area"], [94, 2, 1, "", "axial_force"], [94, 2, 1, "", "axial_stress"], [94, 2, 1, "", "bending_moment"], [94, 4, 1, "", "boundary_conditions"], [94, 2, 1, "", "deflection"], [94, 4, 1, "", "load_vector"], [94, 2, 1, "", "max_bending_moment"], [94, 2, 1, "", "max_bmoment"], [94, 2, 1, "", "max_deflection"], [94, 2, 1, "", "max_shear_force"], [94, 4, 1, "", "moment_load_vector"], [94, 2, 1, "", "plot_bending_moment"], [94, 2, 1, "", "plot_deflection"], [94, 2, 1, "", "plot_loading_results"], [94, 2, 1, "", "plot_shear_force"], [94, 2, 1, "", "plot_shear_stress"], [94, 2, 1, "", "plot_slope"], [94, 2, 1, "", "polar_moment"], [94, 4, 1, "", "second_moment"], [94, 2, 1, "", "shear_force"], [94, 4, 1, "", "shear_modulus"], [94, 2, 1, "", "shear_stress"], [94, 2, 1, "", "slope"], [94, 2, 1, "", "solve_for_reaction_loads"], [94, 2, 1, "", "torsional_moment"]], "sympy.physics": [[99, 0, 0, "-", "control"], [102, 0, 0, "-", "hydrogen"], [103, 0, 0, "-", "matrices"], [122, 0, 0, "-", "mechanics"], [136, 0, 0, "-", "paulialgebra"], [137, 0, 0, "-", "qho_1d"], [161, 0, 0, "-", "secondquant"], [162, 0, 0, "-", "sho"], [177, 0, 0, "-", "vector"], [180, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[98, 2, 1, "", "bode_magnitude_numerical_data"], [98, 2, 1, "", "bode_magnitude_plot"], [98, 2, 1, "", "bode_phase_numerical_data"], [98, 2, 1, "", "bode_phase_plot"], [98, 2, 1, "", "bode_plot"], [98, 2, 1, "", "impulse_response_numerical_data"], [98, 2, 1, "", "impulse_response_plot"], [98, 2, 1, "", "pole_zero_numerical_data"], [98, 2, 1, "", "pole_zero_plot"], [98, 2, 1, "", "ramp_response_numerical_data"], [98, 2, 1, "", "ramp_response_plot"], [98, 2, 1, "", "step_response_numerical_data"], [98, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[100, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[100, 1, 1, "", "Feedback"], [100, 1, 1, "", "MIMOFeedback"], [100, 1, 1, "", "MIMOParallel"], [100, 1, 1, "", "MIMOSeries"], [100, 1, 1, "", "Parallel"], [100, 1, 1, "", "Series"], [100, 1, 1, "", "TransferFunction"], [100, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "sensitivity"], [100, 4, 1, "", "sign"], [100, 4, 1, "", "sys1"], [100, 4, 1, "", "sys2"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "sensitivity"], [100, 4, 1, "", "sign"], [100, 4, 1, "", "sys1"], [100, 4, 1, "", "sys2"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "num_inputs"], [100, 4, 1, "", "num_outputs"], [100, 4, 1, "", "shape"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "num_inputs"], [100, 4, 1, "", "num_outputs"], [100, 4, 1, "", "shape"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "is_biproper"], [100, 4, 1, "", "is_proper"], [100, 4, 1, "", "is_strictly_proper"], [100, 2, 1, "", "to_expr"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "is_biproper"], [100, 4, 1, "", "is_proper"], [100, 4, 1, "", "is_strictly_proper"], [100, 2, 1, "", "to_expr"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[100, 2, 1, "", "dc_gain"], [100, 4, 1, "", "den"], [100, 2, 1, "", "expand"], [100, 2, 1, "", "from_rational_expression"], [100, 4, 1, "", "is_biproper"], [100, 4, 1, "", "is_proper"], [100, 2, 1, "", "is_stable"], [100, 4, 1, "", "is_strictly_proper"], [100, 4, 1, "", "num"], [100, 2, 1, "", "poles"], [100, 2, 1, "", "to_expr"], [100, 4, 1, "", "var"], [100, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[100, 2, 1, "", "elem_poles"], [100, 2, 1, "", "elem_zeros"], [100, 2, 1, "", "expand"], [100, 2, 1, "", "from_Matrix"], [100, 4, 1, "", "num_inputs"], [100, 4, 1, "", "num_outputs"], [100, 4, 1, "", "shape"], [100, 2, 1, "", "transpose"], [100, 4, 1, "", "var"]], "sympy.physics.hep": [[101, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[101, 3, 1, "", "extract_type_tens"], [101, 3, 1, "", "gamma_trace"], [101, 3, 1, "", "kahane_simplify"], [101, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[102, 3, 1, "", "E_nl"], [102, 3, 1, "", "E_nl_dirac"], [102, 3, 1, "", "Psi_nlm"], [102, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[103, 3, 1, "", "mdft"], [103, 3, 1, "", "mgamma"], [103, 3, 1, "", "msigma"], [103, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[105, 0, 0, "-", "body"], [106, 3, 1, "", "find_dynamicsymbols"], [107, 0, 0, "-", "joint"], [108, 0, 0, "-", "kane"], [108, 0, 0, "-", "lagrange"], [109, 0, 0, "-", "linearize"], [106, 3, 1, "", "msubs"], [110, 0, 0, "-", "particle"], [110, 0, 0, "-", "rigidbody"], [112, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[105, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[105, 2, 1, "", "ang_vel_in"], [105, 2, 1, "", "apply_force"], [105, 2, 1, "", "apply_torque"], [105, 2, 1, "", "clear_loads"], [105, 2, 1, "", "dcm"], [105, 2, 1, "", "kinetic_energy"], [105, 2, 1, "", "masscenter_vel"], [105, 2, 1, "", "remove_load"], [105, 4, 1, "", "x"], [105, 4, 1, "", "y"], [105, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[110, 3, 1, "", "Lagrangian"], [110, 3, 1, "", "angular_momentum"], [110, 3, 1, "", "inertia"], [110, 3, 1, "", "inertia_of_point_mass"], [110, 3, 1, "", "kinetic_energy"], [110, 3, 1, "", "linear_momentum"], [110, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[107, 1, 1, "", "Joint"], [107, 1, 1, "", "PinJoint"], [107, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[107, 4, 1, "", "child"], [107, 4, 1, "", "child_axis"], [107, 4, 1, "", "child_point"], [107, 4, 1, "", "coordinates"], [107, 4, 1, "", "kdes"], [107, 4, 1, "", "parent"], [107, 4, 1, "", "parent_axis"], [107, 4, 1, "", "parent_point"], [107, 4, 1, "", "speeds"]], "sympy.physics.mechanics.kane": [[108, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[108, 4, 1, "", "auxiliary_eqs"], [108, 4, 1, "", "forcing"], [108, 4, 1, "", "forcing_full"], [108, 2, 1, "", "kanes_equations"], [108, 2, 1, "", "kindiffdict"], [108, 2, 1, "", "linearize"], [108, 4, 1, "", "mass_matrix"], [108, 4, 1, "", "mass_matrix_full"], [108, 2, 1, "", "rhs"], [108, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[108, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[108, 4, 1, "", "forcing"], [108, 4, 1, "", "forcing_full"], [108, 2, 1, "", "form_lagranges_equations"], [108, 2, 1, "", "linearize"], [108, 4, 1, "", "mass_matrix"], [108, 4, 1, "", "mass_matrix_full"], [108, 2, 1, "", "rhs"], [108, 2, 1, "", "solve_multipliers"], [108, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[109, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[109, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[110, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[110, 2, 1, "", "angular_momentum"], [110, 2, 1, "", "kinetic_energy"], [110, 2, 1, "", "linear_momentum"], [110, 4, 1, "", "mass"], [110, 2, 1, "", "parallel_axis"], [110, 4, 1, "", "point"], [110, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[110, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[110, 2, 1, "", "angular_momentum"], [110, 4, 1, "", "central_inertia"], [110, 2, 1, "", "kinetic_energy"], [110, 2, 1, "", "linear_momentum"], [110, 2, 1, "", "parallel_axis"], [110, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[112, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[112, 4, 1, "", "alg_con"], [112, 4, 1, "", "bodies"], [112, 4, 1, "", "comb_explicit_rhs"], [112, 4, 1, "", "comb_implicit_mat"], [112, 4, 1, "", "comb_implicit_rhs"], [112, 2, 1, "", "compute_explicit_form"], [112, 2, 1, "", "constant_symbols"], [112, 4, 1, "", "coordinates"], [112, 4, 1, "", "dyn_implicit_mat"], [112, 4, 1, "", "dyn_implicit_rhs"], [112, 2, 1, "", "dynamic_symbols"], [112, 4, 1, "", "kin_explicit_rhs"], [112, 4, 1, "", "loads"], [112, 4, 1, "", "speeds"], [112, 4, 1, "", "states"]], "sympy.physics.optics": [[130, 0, 0, "-", "gaussopt"], [132, 0, 0, "-", "medium"], [133, 0, 0, "-", "polarization"], [134, 0, 0, "-", "utils"], [135, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[130, 1, 1, "", "BeamParameter"], [130, 1, 1, "", "CurvedMirror"], [130, 1, 1, "", "CurvedRefraction"], [130, 1, 1, "", "FlatMirror"], [130, 1, 1, "", "FlatRefraction"], [130, 1, 1, "", "FreeSpace"], [130, 1, 1, "", "GeometricRay"], [130, 1, 1, "", "RayTransferMatrix"], [130, 1, 1, "", "ThinLens"], [130, 3, 1, "", "conjugate_gauss_beams"], [130, 3, 1, "", "gaussian_conj"], [130, 3, 1, "", "geometric_conj_ab"], [130, 3, 1, "", "geometric_conj_af"], [130, 3, 1, "", "geometric_conj_bf"], [130, 3, 1, "", "rayleigh2waist"], [130, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[130, 4, 1, "", "divergence"], [130, 4, 1, "", "gouy"], [130, 4, 1, "", "q"], [130, 4, 1, "", "radius"], [130, 4, 1, "", "w"], [130, 4, 1, "", "w_0"], [130, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[130, 4, 1, "", "angle"], [130, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[130, 4, 1, "", "A"], [130, 4, 1, "", "B"], [130, 4, 1, "", "C"], [130, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[132, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[132, 4, 1, "", "refractive_index"], [132, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[133, 3, 1, "", "half_wave_retarder"], [133, 3, 1, "", "jones_2_stokes"], [133, 3, 1, "", "jones_vector"], [133, 3, 1, "", "linear_polarizer"], [133, 3, 1, "", "mueller_matrix"], [133, 3, 1, "", "phase_retarder"], [133, 3, 1, "", "polarizing_beam_splitter"], [133, 3, 1, "", "quarter_wave_retarder"], [133, 3, 1, "", "reflective_filter"], [133, 3, 1, "", "stokes_vector"], [133, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[134, 3, 1, "", "brewster_angle"], [134, 3, 1, "", "critical_angle"], [134, 3, 1, "", "deviation"], [134, 3, 1, "", "fresnel_coefficients"], [134, 3, 1, "", "hyperfocal_distance"], [134, 3, 1, "", "lens_formula"], [134, 3, 1, "", "lens_makers_formula"], [134, 3, 1, "", "mirror_formula"], [134, 3, 1, "", "refraction_angle"], [134, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[135, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[135, 4, 1, "", "amplitude"], [135, 4, 1, "", "angular_velocity"], [135, 4, 1, "", "frequency"], [135, 4, 1, "", "n"], [135, 4, 1, "", "phase"], [135, 4, 1, "", "speed"], [135, 4, 1, "", "time_period"], [135, 4, 1, "", "wavelength"], [135, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[136, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[137, 3, 1, "", "E_n"], [137, 3, 1, "", "coherent_state"], [137, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[138, 0, 0, "-", "anticommutator"], [139, 0, 0, "-", "cartesian"], [140, 0, 0, "-", "cg"], [141, 0, 0, "-", "circuitplot"], [142, 0, 0, "-", "commutator"], [143, 0, 0, "-", "constants"], [144, 0, 0, "-", "dagger"], [145, 0, 0, "-", "gate"], [146, 0, 0, "-", "grover"], [147, 0, 0, "-", "hilbert"], [149, 0, 0, "-", "innerproduct"], [150, 0, 0, "-", "operator"], [151, 0, 0, "-", "operatorset"], [152, 0, 0, "-", "piab"], [153, 0, 0, "-", "qapply"], [154, 0, 0, "-", "qft"], [155, 0, 0, "-", "qubit"], [156, 0, 0, "-", "represent"], [157, 0, 0, "-", "shor"], [158, 0, 0, "-", "spin"], [159, 0, 0, "-", "state"], [160, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[138, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[138, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[139, 1, 1, "", "PositionBra3D"], [139, 1, 1, "", "PositionKet3D"], [139, 1, 1, "", "PositionState3D"], [139, 1, 1, "", "PxBra"], [139, 1, 1, "", "PxKet"], [139, 1, 1, "", "PxOp"], [139, 1, 1, "", "XBra"], [139, 1, 1, "", "XKet"], [139, 1, 1, "", "XOp"], [139, 1, 1, "", "YOp"], [139, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[139, 4, 1, "", "position_x"], [139, 4, 1, "", "position_y"], [139, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[139, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[139, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[139, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[139, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[140, 1, 1, "", "CG"], [140, 1, 1, "", "Wigner3j"], [140, 1, 1, "", "Wigner6j"], [140, 1, 1, "", "Wigner9j"], [140, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[141, 1, 1, "", "CircuitPlot"], [141, 3, 1, "", "CreateCGate"], [141, 1, 1, "", "Mx"], [141, 1, 1, "", "Mz"], [141, 3, 1, "", "circuit_plot"], [141, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[141, 2, 1, "", "control_line"], [141, 2, 1, "", "control_point"], [141, 2, 1, "", "not_point"], [141, 2, 1, "", "one_qubit_box"], [141, 2, 1, "", "swap_point"], [141, 2, 1, "", "two_qubit_box"], [141, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[142, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[142, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[143, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[144, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[145, 1, 1, "", "CGate"], [145, 1, 1, "", "CGateS"], [145, 5, 1, "", "CNOT"], [145, 1, 1, "", "CNotGate"], [145, 1, 1, "", "Gate"], [145, 5, 1, "", "H"], [145, 1, 1, "", "HadamardGate"], [145, 1, 1, "", "IdentityGate"], [145, 1, 1, "", "OneQubitGate"], [145, 5, 1, "", "Phase"], [145, 1, 1, "", "PhaseGate"], [145, 5, 1, "", "S"], [145, 5, 1, "", "SWAP"], [145, 1, 1, "", "SwapGate"], [145, 5, 1, "", "T"], [145, 1, 1, "", "TGate"], [145, 1, 1, "", "TwoQubitGate"], [145, 1, 1, "", "UGate"], [145, 5, 1, "", "X"], [145, 1, 1, "", "XGate"], [145, 5, 1, "", "Y"], [145, 1, 1, "", "YGate"], [145, 5, 1, "", "Z"], [145, 1, 1, "", "ZGate"], [145, 3, 1, "", "gate_simp"], [145, 3, 1, "", "gate_sort"], [145, 3, 1, "", "normalized"], [145, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[145, 4, 1, "", "controls"], [145, 2, 1, "", "decompose"], [145, 2, 1, "", "eval_controls"], [145, 4, 1, "", "gate"], [145, 4, 1, "", "min_qubits"], [145, 4, 1, "", "nqubits"], [145, 2, 1, "", "plot_gate"], [145, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[145, 4, 1, "", "controls"], [145, 4, 1, "", "gate"], [145, 4, 1, "", "min_qubits"], [145, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[145, 2, 1, "", "get_target_matrix"], [145, 4, 1, "", "min_qubits"], [145, 4, 1, "", "nqubits"], [145, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[145, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[145, 2, 1, "", "get_target_matrix"], [145, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[146, 1, 1, "", "OracleGate"], [146, 1, 1, "", "WGate"], [146, 3, 1, "", "apply_grover"], [146, 3, 1, "", "grover_iteration"], [146, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[146, 4, 1, "", "search_function"], [146, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[147, 1, 1, "", "ComplexSpace"], [147, 1, 1, "", "DirectSumHilbertSpace"], [147, 1, 1, "", "FockSpace"], [147, 1, 1, "", "HilbertSpace"], [147, 1, 1, "", "L2"], [147, 1, 1, "", "TensorPowerHilbertSpace"], [147, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[147, 2, 1, "", "eval"], [147, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[147, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[147, 2, 1, "", "eval"], [147, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[149, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[150, 1, 1, "", "DifferentialOperator"], [150, 1, 1, "", "HermitianOperator"], [150, 1, 1, "", "IdentityOperator"], [150, 1, 1, "", "Operator"], [150, 1, 1, "", "OuterProduct"], [150, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[150, 4, 1, "", "expr"], [150, 4, 1, "", "free_symbols"], [150, 4, 1, "", "function"], [150, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[150, 4, 1, "", "bra"], [150, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[151, 3, 1, "", "operators_to_state"], [151, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[152, 1, 1, "", "PIABBra"], [152, 1, 1, "", "PIABHamiltonian"], [152, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[153, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[154, 1, 1, "", "IQFT"], [154, 1, 1, "", "QFT"], [154, 5, 1, "", "Rk"], [154, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[154, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[154, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[155, 1, 1, "", "IntQubit"], [155, 1, 1, "", "IntQubitBra"], [155, 1, 1, "", "Qubit"], [155, 1, 1, "", "QubitBra"], [155, 3, 1, "", "matrix_to_density"], [155, 3, 1, "", "matrix_to_qubit"], [155, 3, 1, "", "measure_all"], [155, 3, 1, "", "measure_all_oneshot"], [155, 3, 1, "", "measure_partial"], [155, 3, 1, "", "measure_partial_oneshot"], [155, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[156, 3, 1, "", "enumerate_states"], [156, 3, 1, "", "get_basis"], [156, 3, 1, "", "integrate_result"], [156, 3, 1, "", "rep_expectation"], [156, 3, 1, "", "rep_innerproduct"], [156, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[157, 1, 1, "", "CMod"], [157, 3, 1, "", "period_find"], [157, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[157, 4, 1, "", "N"], [157, 4, 1, "", "a"], [157, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[158, 1, 1, "", "J2Op"], [158, 1, 1, "", "JxBra"], [158, 1, 1, "", "JxBraCoupled"], [158, 1, 1, "", "JxKet"], [158, 1, 1, "", "JxKetCoupled"], [158, 1, 1, "", "JyBra"], [158, 1, 1, "", "JyBraCoupled"], [158, 1, 1, "", "JyKet"], [158, 1, 1, "", "JyKetCoupled"], [158, 1, 1, "", "JzBra"], [158, 1, 1, "", "JzBraCoupled"], [158, 1, 1, "", "JzKet"], [158, 1, 1, "", "JzKetCoupled"], [158, 1, 1, "", "JzOp"], [158, 1, 1, "", "Rotation"], [158, 1, 1, "", "WignerD"], [158, 3, 1, "", "couple"], [158, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[158, 2, 1, "", "D"], [158, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[159, 1, 1, "", "Bra"], [159, 1, 1, "", "BraBase"], [159, 1, 1, "", "Ket"], [159, 1, 1, "", "KetBase"], [159, 1, 1, "", "OrthogonalBra"], [159, 1, 1, "", "OrthogonalKet"], [159, 1, 1, "", "OrthogonalState"], [159, 1, 1, "", "State"], [159, 1, 1, "", "StateBase"], [159, 1, 1, "", "TimeDepBra"], [159, 1, 1, "", "TimeDepKet"], [159, 1, 1, "", "TimeDepState"], [159, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[159, 4, 1, "", "dual"], [159, 2, 1, "", "dual_class"], [159, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[159, 4, 1, "", "label"], [159, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[159, 4, 1, "", "expr"], [159, 4, 1, "", "is_commutative"], [159, 4, 1, "", "is_normalized"], [159, 4, 1, "", "limits"], [159, 4, 1, "", "norm"], [159, 2, 1, "", "normalize"], [159, 2, 1, "", "prob"], [159, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[160, 1, 1, "", "TensorProduct"], [160, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[161, 1, 1, "", "AnnihilateBoson"], [161, 1, 1, "", "AnnihilateFermion"], [161, 1, 1, "", "AntiSymmetricTensor"], [161, 5, 1, "", "B"], [161, 5, 1, "", "BBra"], [161, 5, 1, "", "BKet"], [161, 5, 1, "", "Bd"], [161, 1, 1, "", "BosonicBasis"], [161, 1, 1, "", "Commutator"], [161, 1, 1, "", "CreateBoson"], [161, 1, 1, "", "CreateFermion"], [161, 1, 1, "", "Dagger"], [161, 5, 1, "", "F"], [161, 5, 1, "", "FBra"], [161, 5, 1, "", "FKet"], [161, 5, 1, "", "Fd"], [161, 1, 1, "", "FixedBosonicBasis"], [161, 1, 1, "", "FockState"], [161, 1, 1, "", "FockStateBosonBra"], [161, 1, 1, "", "FockStateBosonKet"], [161, 1, 1, "", "FockStateBra"], [161, 1, 1, "", "FockStateFermionBra"], [161, 1, 1, "", "FockStateFermionKet"], [161, 1, 1, "", "FockStateKet"], [161, 1, 1, "", "InnerProduct"], [161, 1, 1, "", "KroneckerDelta"], [161, 1, 1, "", "NO"], [161, 1, 1, "", "PermutationOperator"], [161, 1, 1, "", "VarBosonicBasis"], [161, 3, 1, "", "apply_operators"], [161, 3, 1, "", "contraction"], [161, 3, 1, "", "evaluate_deltas"], [161, 3, 1, "", "matrix_rep"], [161, 3, 1, "", "simplify_index_permutations"], [161, 3, 1, "", "substitute_dummies"], [161, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[161, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[161, 2, 1, "", "apply_operator"], [161, 4, 1, "", "is_only_q_annihilator"], [161, 4, 1, "", "is_only_q_creator"], [161, 4, 1, "", "is_q_annihilator"], [161, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[161, 2, 1, "", "doit"], [161, 4, 1, "", "lower"], [161, 4, 1, "", "symbol"], [161, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[161, 2, 1, "", "doit"], [161, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[161, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[161, 2, 1, "", "apply_operator"], [161, 4, 1, "", "is_only_q_annihilator"], [161, 4, 1, "", "is_only_q_creator"], [161, 4, 1, "", "is_q_annihilator"], [161, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[161, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[161, 2, 1, "", "index"], [161, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[161, 4, 1, "", "bra"], [161, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[161, 2, 1, "", "eval"], [161, 4, 1, "", "indices_contain_equal_information"], [161, 4, 1, "", "is_above_fermi"], [161, 4, 1, "", "is_below_fermi"], [161, 4, 1, "", "is_only_above_fermi"], [161, 4, 1, "", "is_only_below_fermi"], [161, 4, 1, "", "killable_index"], [161, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[161, 2, 1, "", "doit"], [161, 2, 1, "", "get_subNO"], [161, 4, 1, "", "has_q_annihilators"], [161, 4, 1, "", "has_q_creators"], [161, 2, 1, "", "iter_q_annihilators"], [161, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[161, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[161, 2, 1, "", "index"], [161, 2, 1, "", "state"]], "sympy.physics.sho": [[162, 3, 1, "", "E_nl"], [162, 3, 1, "", "R_nl"]], "sympy.physics.units": [[163, 0, 0, "-", "dimensions"], [167, 0, 0, "-", "prefixes"], [168, 0, 0, "-", "quantities"], [169, 0, 0, "-", "unitsystem"], [168, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[163, 1, 1, "", "Dimension"], [163, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[163, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[163, 4, 1, "", "can_transf_matrix"], [163, 4, 1, "", "dim"], [163, 2, 1, "", "dim_can_vector"], [163, 2, 1, "", "dim_vector"], [163, 4, 1, "", "inv_can_transf_matrix"], [163, 4, 1, "", "is_consistent"], [163, 2, 1, "", "is_dimensionless"], [163, 4, 1, "", "list_can_dims"], [163, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[167, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[168, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[168, 4, 1, "", "abbrev"], [168, 2, 1, "", "convert_to"], [168, 4, 1, "", "free_symbols"], [168, 4, 1, "", "is_prefixed"], [168, 4, 1, "", "scale_factor"], [168, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[169, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[169, 4, 1, "", "dim"], [169, 2, 1, "", "extend"], [169, 2, 1, "", "get_units_non_prefixed"], [169, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[168, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[171, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[171, 2, 1, "", "applyfunc"], [171, 2, 1, "", "cross"], [171, 2, 1, "", "doit"], [171, 2, 1, "", "dot"], [171, 2, 1, "", "dt"], [171, 2, 1, "", "express"], [171, 4, 1, "", "func"], [171, 2, 1, "", "simplify"], [171, 2, 1, "", "subs"], [171, 2, 1, "", "to_matrix"], [171, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[173, 3, 1, "", "dynamicsymbols"], [174, 0, 0, "-", "functions"], [174, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[172, 3, 1, "", "curl"], [172, 3, 1, "", "divergence"], [172, 3, 1, "", "gradient"], [172, 3, 1, "", "is_conservative"], [172, 3, 1, "", "is_solenoidal"], [172, 3, 1, "", "scalar_potential"], [172, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[171, 1, 1, "", "CoordinateSym"], [171, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[171, 2, 1, "", "ang_acc_in"], [171, 2, 1, "", "ang_vel_in"], [171, 2, 1, "", "dcm"], [171, 2, 1, "", "orient"], [171, 2, 1, "", "orient_axis"], [171, 2, 1, "", "orient_body_fixed"], [171, 2, 1, "", "orient_explicit"], [171, 2, 1, "", "orient_quaternion"], [171, 2, 1, "", "orient_space_fixed"], [171, 2, 1, "", "orientnew"], [171, 2, 1, "", "partial_velocity"], [171, 2, 1, "", "set_ang_acc"], [171, 2, 1, "", "set_ang_vel"], [171, 2, 1, "", "variable_map"], [171, 4, 1, "", "x"], [171, 4, 1, "", "y"], [171, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[173, 3, 1, "", "cross"], [173, 3, 1, "", "dot"], [173, 3, 1, "", "express"], [174, 3, 1, "", "get_motion_params"], [174, 3, 1, "", "kinematic_equations"], [173, 3, 1, "", "outer"], [174, 3, 1, "", "partial_velocity"], [173, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[174, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[174, 2, 1, "", "a1pt_theory"], [174, 2, 1, "", "a2pt_theory"], [174, 2, 1, "", "acc"], [174, 2, 1, "", "locatenew"], [174, 2, 1, "", "partial_velocity"], [174, 2, 1, "", "pos_from"], [174, 2, 1, "", "set_acc"], [174, 2, 1, "", "set_pos"], [174, 2, 1, "", "set_vel"], [174, 2, 1, "", "v1pt_theory"], [174, 2, 1, "", "v2pt_theory"], [174, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[175, 3, 1, "", "init_vprinting"], [175, 3, 1, "", "vlatex"], [175, 3, 1, "", "vpprint"], [175, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[171, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[171, 2, 1, "", "angle_between"], [171, 2, 1, "", "applyfunc"], [171, 2, 1, "", "cross"], [171, 2, 1, "", "diff"], [171, 2, 1, "", "doit"], [171, 2, 1, "", "dot"], [171, 2, 1, "", "dt"], [171, 2, 1, "", "express"], [171, 2, 1, "", "free_dynamicsymbols"], [171, 2, 1, "", "free_symbols"], [171, 4, 1, "", "func"], [171, 2, 1, "", "magnitude"], [171, 2, 1, "", "normalize"], [171, 2, 1, "", "outer"], [171, 2, 1, "", "separate"], [171, 2, 1, "", "simplify"], [171, 2, 1, "", "subs"], [171, 2, 1, "", "to_matrix"], [171, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[180, 3, 1, "", "clebsch_gordan"], [180, 3, 1, "", "dot_rot_grad_Ynm"], [180, 3, 1, "", "gaunt"], [180, 3, 1, "", "racah"], [180, 3, 1, "", "wigner_3j"], [180, 3, 1, "", "wigner_6j"], [180, 3, 1, "", "wigner_9j"], [180, 3, 1, "", "wigner_d"], [180, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[181, 0, 0, "-", "plot"], [181, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[181, 1, 1, "", "BaseBackend"], [181, 1, 1, "", "BaseSeries"], [181, 1, 1, "", "Line2DBaseSeries"], [181, 1, 1, "", "Line3DBaseSeries"], [181, 1, 1, "", "LineOver1DRangeSeries"], [181, 1, 1, "", "MatplotlibBackend"], [181, 1, 1, "", "Parametric2DLineSeries"], [181, 1, 1, "", "Parametric3DLineSeries"], [181, 1, 1, "", "ParametricSurfaceSeries"], [181, 1, 1, "", "Plot"], [181, 1, 1, "", "PlotGrid"], [181, 1, 1, "", "SurfaceBaseSeries"], [181, 1, 1, "", "SurfaceOver2DRangeSeries"], [181, 1, 1, "", "TextBackend"], [181, 3, 1, "", "plot"], [181, 3, 1, "", "plot3d"], [181, 3, 1, "", "plot3d_parametric_line"], [181, 3, 1, "", "plot3d_parametric_surface"], [181, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[181, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[181, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[181, 2, 1, "", "get_segments"], [181, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[181, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[181, 2, 1, "", "append"], [181, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[181, 1, 1, "", "ImplicitSeries"], [181, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[181, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[182, 1, 1, "", "ExtensionElement"], [182, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[182, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[182, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[182, 1, 1, "", "ModuleHomomorphism"], [182, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[182, 2, 1, "", "image"], [182, 2, 1, "", "is_injective"], [182, 2, 1, "", "is_isomorphism"], [182, 2, 1, "", "is_surjective"], [182, 2, 1, "", "is_zero"], [182, 2, 1, "", "kernel"], [182, 2, 1, "", "quotient_codomain"], [182, 2, 1, "", "quotient_domain"], [182, 2, 1, "", "restrict_codomain"], [182, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[182, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[182, 2, 1, "", "contains"], [182, 2, 1, "", "depth"], [182, 2, 1, "", "height"], [182, 2, 1, "", "intersect"], [182, 2, 1, "", "is_maximal"], [182, 2, 1, "", "is_primary"], [182, 2, 1, "", "is_prime"], [182, 2, 1, "", "is_principal"], [182, 2, 1, "", "is_radical"], [182, 2, 1, "", "is_whole_ring"], [182, 2, 1, "", "is_zero"], [182, 2, 1, "", "product"], [182, 2, 1, "", "quotient"], [182, 2, 1, "", "radical"], [182, 2, 1, "", "reduce_element"], [182, 2, 1, "", "saturate"], [182, 2, 1, "", "subset"], [182, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[182, 1, 1, "", "FreeModule"], [182, 1, 1, "", "FreeModuleElement"], [182, 1, 1, "", "Module"], [182, 1, 1, "", "QuotientModule"], [182, 1, 1, "", "QuotientModuleElement"], [182, 1, 1, "", "SubModule"], [182, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[182, 2, 1, "", "basis"], [182, 2, 1, "", "convert"], [182, 5, 1, "", "dtype"], [182, 2, 1, "", "identity_hom"], [182, 2, 1, "", "is_submodule"], [182, 2, 1, "", "is_zero"], [182, 2, 1, "", "multiply_ideal"], [182, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[182, 2, 1, "", "contains"], [182, 2, 1, "", "convert"], [182, 2, 1, "", "identity_hom"], [182, 2, 1, "", "is_submodule"], [182, 2, 1, "", "is_zero"], [182, 2, 1, "", "multiply_ideal"], [182, 2, 1, "", "quotient_module"], [182, 2, 1, "", "submodule"], [182, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[182, 2, 1, "", "convert"], [182, 5, 1, "", "dtype"], [182, 2, 1, "", "identity_hom"], [182, 2, 1, "", "is_submodule"], [182, 2, 1, "", "is_zero"], [182, 2, 1, "", "quotient_hom"], [182, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[182, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[182, 2, 1, "", "convert"], [182, 2, 1, "", "identity_hom"], [182, 2, 1, "", "in_terms_of_generators"], [182, 2, 1, "", "inclusion_hom"], [182, 2, 1, "", "intersect"], [182, 2, 1, "", "is_full_module"], [182, 2, 1, "", "is_submodule"], [182, 2, 1, "", "is_zero"], [182, 2, 1, "", "module_quotient"], [182, 2, 1, "", "multiply_ideal"], [182, 2, 1, "", "quotient_module"], [182, 2, 1, "", "reduce_element"], [182, 2, 1, "", "submodule"], [182, 2, 1, "", "syzygy_module"], [182, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[182, 2, 1, "", "is_full_module"], [182, 2, 1, "", "quotient_hom"]], "sympy.polys.constructor": [[191, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[188, 3, 1, "", "dmp_abs"], [188, 3, 1, "", "dmp_add"], [188, 3, 1, "", "dmp_add_ground"], [188, 3, 1, "", "dmp_add_mul"], [188, 3, 1, "", "dmp_add_term"], [188, 3, 1, "", "dmp_div"], [188, 3, 1, "", "dmp_expand"], [188, 3, 1, "", "dmp_exquo"], [188, 3, 1, "", "dmp_exquo_ground"], [188, 3, 1, "", "dmp_ff_div"], [188, 3, 1, "", "dmp_l1_norm"], [188, 3, 1, "", "dmp_max_norm"], [188, 3, 1, "", "dmp_mul"], [188, 3, 1, "", "dmp_mul_ground"], [188, 3, 1, "", "dmp_mul_term"], [188, 3, 1, "", "dmp_neg"], [188, 3, 1, "", "dmp_pdiv"], [188, 3, 1, "", "dmp_pexquo"], [188, 3, 1, "", "dmp_pow"], [188, 3, 1, "", "dmp_pquo"], [188, 3, 1, "", "dmp_prem"], [188, 3, 1, "", "dmp_quo"], [188, 3, 1, "", "dmp_quo_ground"], [188, 3, 1, "", "dmp_rem"], [188, 3, 1, "", "dmp_rr_div"], [188, 3, 1, "", "dmp_sqr"], [188, 3, 1, "", "dmp_sub"], [188, 3, 1, "", "dmp_sub_ground"], [188, 3, 1, "", "dmp_sub_mul"], [188, 3, 1, "", "dmp_sub_term"], [188, 3, 1, "", "dup_lshift"], [188, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[188, 3, 1, "", "dmp_LC"], [188, 3, 1, "", "dmp_TC"], [188, 3, 1, "", "dmp_apply_pairs"], [188, 3, 1, "", "dmp_convert"], [188, 3, 1, "", "dmp_copy"], [188, 3, 1, "", "dmp_deflate"], [188, 3, 1, "", "dmp_degree"], [188, 3, 1, "", "dmp_degree_in"], [188, 3, 1, "", "dmp_degree_list"], [188, 3, 1, "", "dmp_eject"], [188, 3, 1, "", "dmp_exclude"], [188, 3, 1, "", "dmp_from_dict"], [188, 3, 1, "", "dmp_from_sympy"], [188, 3, 1, "", "dmp_ground"], [188, 3, 1, "", "dmp_ground_LC"], [188, 3, 1, "", "dmp_ground_TC"], [188, 3, 1, "", "dmp_ground_nth"], [188, 3, 1, "", "dmp_ground_p"], [188, 3, 1, "", "dmp_grounds"], [188, 3, 1, "", "dmp_include"], [188, 3, 1, "", "dmp_inflate"], [188, 3, 1, "", "dmp_inject"], [188, 3, 1, "", "dmp_list_terms"], [188, 3, 1, "", "dmp_multi_deflate"], [188, 3, 1, "", "dmp_negative_p"], [188, 3, 1, "", "dmp_nest"], [188, 3, 1, "", "dmp_normal"], [188, 3, 1, "", "dmp_nth"], [188, 3, 1, "", "dmp_one"], [188, 3, 1, "", "dmp_one_p"], [188, 3, 1, "", "dmp_permute"], [188, 3, 1, "", "dmp_positive_p"], [188, 3, 1, "", "dmp_raise"], [188, 3, 1, "", "dmp_slice"], [188, 3, 1, "", "dmp_strip"], [188, 3, 1, "", "dmp_swap"], [188, 3, 1, "", "dmp_terms_gcd"], [188, 3, 1, "", "dmp_to_dict"], [188, 3, 1, "", "dmp_to_tuple"], [188, 3, 1, "", "dmp_true_LT"], [188, 3, 1, "", "dmp_validate"], [188, 3, 1, "", "dmp_zero"], [188, 3, 1, "", "dmp_zero_p"], [188, 3, 1, "", "dmp_zeros"], [188, 3, 1, "", "dup_random"], [188, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[188, 3, 1, "", "dmp_clear_denoms"], [188, 3, 1, "", "dmp_compose"], [188, 3, 1, "", "dmp_diff"], [188, 3, 1, "", "dmp_diff_eval_in"], [188, 3, 1, "", "dmp_diff_in"], [188, 3, 1, "", "dmp_eval"], [188, 3, 1, "", "dmp_eval_in"], [188, 3, 1, "", "dmp_eval_tail"], [188, 3, 1, "", "dmp_ground_content"], [188, 3, 1, "", "dmp_ground_extract"], [188, 3, 1, "", "dmp_ground_monic"], [188, 3, 1, "", "dmp_ground_primitive"], [188, 3, 1, "", "dmp_ground_trunc"], [188, 3, 1, "", "dmp_integrate"], [188, 3, 1, "", "dmp_integrate_in"], [188, 3, 1, "", "dmp_lift"], [188, 3, 1, "", "dmp_revert"], [188, 3, 1, "", "dmp_trunc"], [188, 3, 1, "", "dup_content"], [188, 3, 1, "", "dup_decompose"], [188, 3, 1, "", "dup_extract"], [188, 3, 1, "", "dup_mirror"], [188, 3, 1, "", "dup_monic"], [188, 3, 1, "", "dup_primitive"], [188, 3, 1, "", "dup_real_imag"], [188, 3, 1, "", "dup_scale"], [188, 3, 1, "", "dup_shift"], [188, 3, 1, "", "dup_sign_variations"], [188, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[191, 3, 1, "", "dispersion"], [191, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[188, 3, 1, "", "sdm_LC"], [188, 3, 1, "", "sdm_LM"], [188, 3, 1, "", "sdm_LT"], [188, 3, 1, "", "sdm_add"], [188, 3, 1, "", "sdm_deg"], [188, 3, 1, "", "sdm_ecart"], [188, 3, 1, "", "sdm_from_dict"], [188, 3, 1, "", "sdm_from_vector"], [188, 3, 1, "", "sdm_groebner"], [188, 3, 1, "", "sdm_monomial_deg"], [188, 3, 1, "", "sdm_monomial_divides"], [188, 3, 1, "", "sdm_monomial_mul"], [188, 3, 1, "", "sdm_mul_term"], [188, 3, 1, "", "sdm_nf_mora"], [188, 3, 1, "", "sdm_spoly"], [188, 3, 1, "", "sdm_to_dict"], [188, 3, 1, "", "sdm_to_vector"], [188, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[186, 1, 1, "", "AlgebraicField"], [186, 1, 1, "", "ComplexField"], [186, 1, 1, "", "ExpressionDomain"], [186, 1, 1, "", "FiniteField"], [186, 1, 1, "", "FractionField"], [186, 1, 1, "", "GMPYFiniteField"], [186, 1, 1, "", "GMPYIntegerRing"], [186, 1, 1, "", "GMPYRationalField"], [186, 1, 1, "", "IntegerRing"], [186, 1, 1, "", "PolynomialRing"], [186, 1, 1, "", "PythonFiniteField"], [186, 1, 1, "", "PythonIntegerRing"], [186, 1, 1, "", "PythonRationalField"], [186, 1, 1, "", "RationalField"], [186, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[186, 2, 1, "", "algebraic_field"], [186, 2, 1, "", "denom"], [186, 2, 1, "", "discriminant"], [186, 5, 1, "", "dtype"], [186, 5, 1, "", "ext"], [186, 2, 1, "", "from_AlgebraicField"], [186, 2, 1, "", "from_GaussianIntegerRing"], [186, 2, 1, "", "from_GaussianRationalField"], [186, 2, 1, "", "from_QQ"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "integral_basis"], [186, 2, 1, "", "is_negative"], [186, 2, 1, "", "is_nonnegative"], [186, 2, 1, "", "is_nonpositive"], [186, 2, 1, "", "is_positive"], [186, 2, 1, "", "maximal_order"], [186, 5, 1, "", "mod"], [186, 2, 1, "", "numer"], [186, 5, 1, "", "orig_ext"], [186, 2, 1, "", "primes_above"], [186, 2, 1, "", "to_alg_num"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[186, 2, 1, "", "almosteq"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "gcd"], [186, 2, 1, "", "get_exact"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "is_negative"], [186, 2, 1, "", "is_nonnegative"], [186, 2, 1, "", "is_nonpositive"], [186, 2, 1, "", "is_positive"], [186, 2, 1, "", "lcm"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[186, 1, 1, "", "Expression"], [186, 2, 1, "", "denom"], [186, 5, 1, "", "dtype"], [186, 2, 1, "", "from_ExpressionDomain"], [186, 2, 1, "", "from_FractionField"], [186, 2, 1, "", "from_GaussianIntegerRing"], [186, 2, 1, "", "from_GaussianRationalField"], [186, 2, 1, "", "from_PolynomialRing"], [186, 2, 1, "", "from_QQ"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "get_field"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "is_negative"], [186, 2, 1, "", "is_nonnegative"], [186, 2, 1, "", "is_nonpositive"], [186, 2, 1, "", "is_positive"], [186, 2, 1, "", "numer"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[186, 2, 1, "", "characteristic"], [186, 2, 1, "", "from_FF"], [186, 2, 1, "", "from_FF_gmpy"], [186, 2, 1, "", "from_FF_python"], [186, 2, 1, "", "from_QQ"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "get_field"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[186, 2, 1, "", "denom"], [186, 2, 1, "", "factorial"], [186, 2, 1, "", "from_AlgebraicField"], [186, 2, 1, "", "from_ComplexField"], [186, 2, 1, "", "from_FractionField"], [186, 2, 1, "", "from_GaussianIntegerRing"], [186, 2, 1, "", "from_GaussianRationalField"], [186, 2, 1, "", "from_PolynomialRing"], [186, 2, 1, "", "from_QQ"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "is_negative"], [186, 2, 1, "", "is_nonnegative"], [186, 2, 1, "", "is_nonpositive"], [186, 2, 1, "", "is_positive"], [186, 2, 1, "", "numer"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[186, 2, 1, "", "factorial"], [186, 2, 1, "", "from_FF_gmpy"], [186, 2, 1, "", "from_FF_python"], [186, 2, 1, "", "from_QQ"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "gcd"], [186, 2, 1, "", "gcdex"], [186, 2, 1, "", "lcm"], [186, 2, 1, "", "sqrt"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[186, 2, 1, "", "denom"], [186, 2, 1, "", "div"], [186, 2, 1, "", "exquo"], [186, 2, 1, "", "factorial"], [186, 2, 1, "", "from_GaussianRationalField"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "numer"], [186, 2, 1, "", "quo"], [186, 2, 1, "", "rem"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[186, 2, 1, "", "algebraic_field"], [186, 2, 1, "", "factorial"], [186, 2, 1, "", "from_AlgebraicField"], [186, 2, 1, "", "from_FF"], [186, 2, 1, "", "from_FF_gmpy"], [186, 2, 1, "", "from_FF_python"], [186, 2, 1, "", "from_QQ"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "gcd"], [186, 2, 1, "", "gcdex"], [186, 2, 1, "", "get_field"], [186, 2, 1, "", "lcm"], [186, 2, 1, "", "log"], [186, 2, 1, "", "sqrt"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[186, 2, 1, "", "factorial"], [186, 2, 1, "", "from_AlgebraicField"], [186, 2, 1, "", "from_ComplexField"], [186, 2, 1, "", "from_FractionField"], [186, 2, 1, "", "from_GaussianIntegerRing"], [186, 2, 1, "", "from_GaussianRationalField"], [186, 2, 1, "", "from_GlobalPolynomialRing"], [186, 2, 1, "", "from_PolynomialRing"], [186, 2, 1, "", "from_QQ"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "gcd"], [186, 2, 1, "", "gcdex"], [186, 2, 1, "", "get_field"], [186, 2, 1, "", "is_negative"], [186, 2, 1, "", "is_nonnegative"], [186, 2, 1, "", "is_nonpositive"], [186, 2, 1, "", "is_positive"], [186, 2, 1, "", "is_unit"], [186, 2, 1, "", "lcm"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[186, 2, 1, "", "algebraic_field"], [186, 2, 1, "", "denom"], [186, 2, 1, "", "div"], [186, 2, 1, "", "exquo"], [186, 2, 1, "", "from_AlgebraicField"], [186, 2, 1, "", "from_GaussianRationalField"], [186, 2, 1, "", "from_QQ"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "numer"], [186, 2, 1, "", "quo"], [186, 2, 1, "", "rem"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[186, 2, 1, "", "almosteq"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "gcd"], [186, 2, 1, "", "get_exact"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "lcm"], [186, 2, 1, "", "to_rational"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[186, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[186, 2, 1, "", "drop"], [186, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[186, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[186, 2, 1, "", "abs"], [186, 2, 1, "", "add"], [186, 2, 1, "", "alg_field_from_poly"], [186, 2, 1, "", "algebraic_field"], [186, 2, 1, "", "almosteq"], [186, 2, 1, "", "characteristic"], [186, 2, 1, "", "cofactors"], [186, 2, 1, "", "convert"], [186, 2, 1, "", "convert_from"], [186, 2, 1, "", "cyclotomic_field"], [186, 2, 1, "", "denom"], [186, 2, 1, "", "div"], [186, 2, 1, "", "drop"], [186, 5, 1, "", "dtype"], [186, 2, 1, "", "evalf"], [186, 2, 1, "", "exquo"], [186, 2, 1, "", "frac_field"], [186, 2, 1, "", "from_AlgebraicField"], [186, 2, 1, "", "from_ComplexField"], [186, 2, 1, "", "from_ExpressionDomain"], [186, 2, 1, "", "from_ExpressionRawDomain"], [186, 2, 1, "", "from_FF"], [186, 2, 1, "", "from_FF_gmpy"], [186, 2, 1, "", "from_FF_python"], [186, 2, 1, "", "from_FractionField"], [186, 2, 1, "", "from_GlobalPolynomialRing"], [186, 2, 1, "", "from_MonogenicFiniteExtension"], [186, 2, 1, "", "from_PolynomialRing"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_RealField"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "gcd"], [186, 2, 1, "", "gcdex"], [186, 2, 1, "", "get_exact"], [186, 2, 1, "", "get_field"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "half_gcdex"], [186, 5, 1, "", "has_assoc_Field"], [186, 5, 1, "", "has_assoc_Ring"], [186, 2, 1, "", "inject"], [186, 2, 1, "", "invert"], [186, 5, 1, "", "is_Field"], [186, 5, 1, "", "is_PID"], [186, 5, 1, "", "is_Ring"], [186, 2, 1, "", "is_negative"], [186, 2, 1, "", "is_nonnegative"], [186, 2, 1, "", "is_nonpositive"], [186, 2, 1, "", "is_one"], [186, 2, 1, "", "is_positive"], [186, 2, 1, "", "is_zero"], [186, 2, 1, "", "lcm"], [186, 2, 1, "", "log"], [186, 2, 1, "", "map"], [186, 2, 1, "", "mul"], [186, 2, 1, "", "n"], [186, 2, 1, "", "neg"], [186, 2, 1, "", "numer"], [186, 2, 1, "", "of_type"], [186, 2, 1, "", "old_frac_field"], [186, 2, 1, "", "old_poly_ring"], [186, 5, 1, "", "one"], [186, 2, 1, "", "poly_ring"], [186, 2, 1, "", "pos"], [186, 2, 1, "", "pow"], [186, 2, 1, "", "quo"], [186, 2, 1, "", "rem"], [186, 2, 1, "", "revert"], [186, 2, 1, "", "sqrt"], [186, 2, 1, "", "sub"], [186, 2, 1, "", "to_sympy"], [186, 4, 1, "", "tp"], [186, 2, 1, "", "unify"], [186, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[186, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[186, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[186, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[186, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[186, 2, 1, "", "div"], [186, 2, 1, "", "exquo"], [186, 2, 1, "", "gcd"], [186, 2, 1, "", "get_field"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "is_unit"], [186, 2, 1, "", "lcm"], [186, 2, 1, "", "quo"], [186, 2, 1, "", "rem"], [186, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[186, 1, 1, "", "GaussianDomain"], [186, 1, 1, "", "GaussianElement"], [186, 1, 1, "", "GaussianInteger"], [186, 1, 1, "", "GaussianIntegerRing"], [186, 1, 1, "", "GaussianRational"], [186, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[186, 2, 1, "", "from_AlgebraicField"], [186, 2, 1, "", "from_QQ"], [186, 2, 1, "", "from_QQ_gmpy"], [186, 2, 1, "", "from_QQ_python"], [186, 2, 1, "", "from_ZZ"], [186, 2, 1, "", "from_ZZ_gmpy"], [186, 2, 1, "", "from_ZZ_python"], [186, 2, 1, "", "from_sympy"], [186, 2, 1, "", "inject"], [186, 2, 1, "", "is_negative"], [186, 2, 1, "", "is_nonnegative"], [186, 2, 1, "", "is_nonpositive"], [186, 2, 1, "", "is_positive"], [186, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[186, 2, 1, "", "new"], [186, 2, 1, "", "parent"], [186, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[186, 5, 1, "", "dtype"], [186, 2, 1, "", "from_GaussianIntegerRing"], [186, 2, 1, "", "from_GaussianRationalField"], [186, 2, 1, "", "gcd"], [186, 2, 1, "", "get_field"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "lcm"], [186, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[186, 2, 1, "", "as_AlgebraicField"], [186, 2, 1, "", "denom"], [186, 5, 1, "", "dtype"], [186, 2, 1, "", "from_GaussianIntegerRing"], [186, 2, 1, "", "from_GaussianRationalField"], [186, 2, 1, "", "get_field"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[186, 1, 1, "", "ComplexElement"], [186, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[186, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[186, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[186, 2, 1, "", "denom"], [186, 2, 1, "", "div"], [186, 2, 1, "", "exquo"], [186, 2, 1, "", "free_module"], [186, 2, 1, "", "get_ring"], [186, 2, 1, "", "ideal"], [186, 2, 1, "", "invert"], [186, 2, 1, "", "numer"], [186, 2, 1, "", "quo"], [186, 2, 1, "", "quotient_ring"], [186, 2, 1, "", "rem"], [186, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[186, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[186, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[188, 3, 1, "", "dmp_cancel"], [188, 3, 1, "", "dmp_content"], [188, 3, 1, "", "dmp_discriminant"], [188, 3, 1, "", "dmp_euclidean_prs"], [188, 3, 1, "", "dmp_ff_prs_gcd"], [188, 3, 1, "", "dmp_gcd"], [188, 3, 1, "", "dmp_gcdex"], [188, 3, 1, "", "dmp_half_gcdex"], [188, 3, 1, "", "dmp_inner_gcd"], [188, 3, 1, "", "dmp_inner_subresultants"], [188, 3, 1, "", "dmp_invert"], [188, 3, 1, "", "dmp_lcm"], [188, 3, 1, "", "dmp_primitive"], [188, 3, 1, "", "dmp_primitive_prs"], [188, 3, 1, "", "dmp_prs_resultant"], [188, 3, 1, "", "dmp_qq_collins_resultant"], [188, 3, 1, "", "dmp_qq_heu_gcd"], [188, 3, 1, "", "dmp_resultant"], [188, 3, 1, "", "dmp_rr_prs_gcd"], [188, 3, 1, "", "dmp_subresultants"], [188, 3, 1, "", "dmp_zz_collins_resultant"], [188, 3, 1, "", "dmp_zz_heu_gcd"], [188, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[188, 3, 1, "", "dmp_ext_factor"], [188, 3, 1, "", "dmp_factor_list"], [188, 3, 1, "", "dmp_factor_list_include"], [188, 3, 1, "", "dmp_irreducible_p"], [188, 3, 1, "", "dmp_trial_division"], [188, 3, 1, "", "dmp_zz_diophantine"], [188, 3, 1, "", "dmp_zz_factor"], [188, 3, 1, "", "dmp_zz_mignotte_bound"], [188, 3, 1, "", "dmp_zz_wang"], [188, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [188, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [188, 3, 1, "", "dmp_zz_wang_non_divisors"], [188, 3, 1, "", "dmp_zz_wang_test_points"], [188, 3, 1, "", "dup_cyclotomic_p"], [188, 3, 1, "", "dup_gf_factor"], [188, 3, 1, "", "dup_zz_cyclotomic_factor"], [188, 3, 1, "", "dup_zz_cyclotomic_poly"], [188, 3, 1, "", "dup_zz_factor"], [188, 3, 1, "", "dup_zz_factor_sqf"], [188, 3, 1, "", "dup_zz_hensel_lift"], [188, 3, 1, "", "dup_zz_hensel_step"], [188, 3, 1, "", "dup_zz_irreducible_p"], [188, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[188, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[186, 1, 1, "", "FracElement"], [186, 1, 1, "", "FracField"], [186, 3, 1, "", "field"], [186, 3, 1, "", "sfield"], [186, 3, 1, "", "vfield"], [186, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[186, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[188, 3, 1, "", "gf_LC"], [188, 3, 1, "", "gf_Qbasis"], [188, 3, 1, "", "gf_Qmatrix"], [188, 3, 1, "", "gf_TC"], [188, 3, 1, "", "gf_add"], [188, 3, 1, "", "gf_add_ground"], [188, 3, 1, "", "gf_add_mul"], [188, 3, 1, "", "gf_berlekamp"], [188, 3, 1, "", "gf_cofactors"], [188, 3, 1, "", "gf_compose"], [188, 3, 1, "", "gf_compose_mod"], [188, 3, 1, "", "gf_crt"], [188, 3, 1, "", "gf_crt1"], [188, 3, 1, "", "gf_crt2"], [188, 3, 1, "", "gf_csolve"], [188, 3, 1, "", "gf_degree"], [188, 3, 1, "", "gf_diff"], [188, 3, 1, "", "gf_div"], [188, 3, 1, "", "gf_eval"], [188, 3, 1, "", "gf_expand"], [188, 3, 1, "", "gf_exquo"], [188, 3, 1, "", "gf_factor"], [188, 3, 1, "", "gf_factor_sqf"], [188, 3, 1, "", "gf_from_dict"], [188, 3, 1, "", "gf_from_int_poly"], [188, 3, 1, "", "gf_gcd"], [188, 3, 1, "", "gf_gcdex"], [188, 3, 1, "", "gf_int"], [188, 3, 1, "", "gf_irreducible"], [188, 3, 1, "", "gf_irreducible_p"], [188, 3, 1, "", "gf_lcm"], [188, 3, 1, "", "gf_lshift"], [188, 3, 1, "", "gf_monic"], [188, 3, 1, "", "gf_mul"], [188, 3, 1, "", "gf_mul_ground"], [188, 3, 1, "", "gf_multi_eval"], [188, 3, 1, "", "gf_neg"], [188, 3, 1, "", "gf_normal"], [188, 3, 1, "", "gf_pow"], [188, 3, 1, "", "gf_pow_mod"], [188, 3, 1, "", "gf_quo"], [188, 3, 1, "", "gf_quo_ground"], [188, 3, 1, "", "gf_random"], [188, 3, 1, "", "gf_rem"], [188, 3, 1, "", "gf_rshift"], [188, 3, 1, "", "gf_shoup"], [188, 3, 1, "", "gf_sqf_list"], [188, 3, 1, "", "gf_sqf_p"], [188, 3, 1, "", "gf_sqf_part"], [188, 3, 1, "", "gf_sqr"], [188, 3, 1, "", "gf_strip"], [188, 3, 1, "", "gf_sub"], [188, 3, 1, "", "gf_sub_ground"], [188, 3, 1, "", "gf_sub_mul"], [188, 3, 1, "", "gf_to_dict"], [188, 3, 1, "", "gf_to_int_poly"], [188, 3, 1, "", "gf_trace_map"], [188, 3, 1, "", "gf_trunc"], [188, 3, 1, "", "gf_value"], [188, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[188, 3, 1, "", "groebner"], [188, 3, 1, "", "is_groebner"], [188, 3, 1, "", "is_minimal"], [188, 3, 1, "", "is_reduced"], [188, 3, 1, "", "red_groebner"], [188, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[184, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[184, 2, 1, "", "add"], [184, 2, 1, "", "charpoly"], [184, 2, 1, "", "det"], [184, 2, 1, "", "hstack"], [184, 2, 1, "", "inv"], [184, 2, 1, "", "is_lower"], [184, 2, 1, "", "is_upper"], [184, 2, 1, "", "is_zero_matrix"], [184, 2, 1, "", "lu"], [184, 2, 1, "", "lu_solve"], [184, 2, 1, "", "matmul"], [184, 2, 1, "", "neg"], [184, 2, 1, "", "rref"], [184, 2, 1, "", "scc"], [184, 2, 1, "", "sub"], [184, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[184, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[184, 2, 1, "", "add"], [184, 2, 1, "", "charpoly"], [184, 2, 1, "", "columnspace"], [184, 2, 1, "", "convert_to"], [184, 2, 1, "", "det"], [184, 2, 1, "", "diag"], [184, 2, 1, "", "eye"], [184, 2, 1, "", "from_Matrix"], [184, 2, 1, "", "from_dict_sympy"], [184, 2, 1, "", "from_list"], [184, 2, 1, "", "from_list_sympy"], [184, 2, 1, "", "from_rep"], [184, 2, 1, "", "hstack"], [184, 2, 1, "", "inv"], [184, 4, 1, "", "is_lower"], [184, 4, 1, "", "is_upper"], [184, 2, 1, "", "lu"], [184, 2, 1, "", "lu_solve"], [184, 2, 1, "", "matmul"], [184, 2, 1, "", "mul"], [184, 2, 1, "", "neg"], [184, 2, 1, "", "nullspace"], [184, 2, 1, "", "ones"], [184, 2, 1, "", "pow"], [184, 2, 1, "", "rowspace"], [184, 2, 1, "", "rref"], [184, 2, 1, "", "scc"], [184, 2, 1, "", "sub"], [184, 2, 1, "", "to_Matrix"], [184, 2, 1, "", "to_dense"], [184, 2, 1, "", "to_field"], [184, 2, 1, "", "to_sparse"], [184, 2, 1, "", "transpose"], [184, 2, 1, "", "unify"], [184, 2, 1, "", "vstack"], [184, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[184, 3, 1, "", "hermite_normal_form"], [184, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[184, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[184, 2, 1, "", "add"], [184, 2, 1, "", "charpoly"], [184, 2, 1, "", "convert_to"], [184, 2, 1, "", "copy"], [184, 2, 1, "", "det"], [184, 2, 1, "", "eye"], [184, 2, 1, "", "from_ddm"], [184, 2, 1, "", "from_list"], [184, 2, 1, "", "hstack"], [184, 2, 1, "", "inv"], [184, 2, 1, "", "is_lower"], [184, 2, 1, "", "is_upper"], [184, 2, 1, "", "is_zero_matrix"], [184, 2, 1, "", "lu"], [184, 2, 1, "", "lu_solve"], [184, 2, 1, "", "matmul"], [184, 2, 1, "", "mul"], [184, 2, 1, "", "neg"], [184, 2, 1, "", "new"], [184, 2, 1, "", "nullspace"], [184, 2, 1, "", "rref"], [184, 2, 1, "", "scc"], [184, 2, 1, "", "sub"], [184, 2, 1, "", "to_ddm"], [184, 2, 1, "", "to_list"], [184, 2, 1, "", "transpose"], [184, 2, 1, "", "vstack"], [184, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[188, 3, 1, "", "_modgcd_multivariate_p"], [188, 3, 1, "", "func_field_modgcd"], [188, 3, 1, "", "modgcd_bivariate"], [188, 3, 1, "", "modgcd_multivariate"], [188, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[191, 1, 1, "", "Monomial"], [191, 3, 1, "", "itermonomials"], [191, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[191, 2, 1, "", "as_expr"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[190, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[190, 3, 1, "", "minimal_polynomial"], [190, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[190, 0, 0, "-", "modules"], [190, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[190, 1, 1, "", "EndomorphismRing"], [190, 1, 1, "", "InnerEndomorphism"], [190, 1, 1, "", "Module"], [190, 1, 1, "", "ModuleElement"], [190, 1, 1, "", "ModuleEndomorphism"], [190, 1, 1, "", "ModuleHomomorphism"], [190, 1, 1, "", "PowerBasis"], [190, 1, 1, "", "PowerBasisElement"], [190, 1, 1, "", "Submodule"], [190, 3, 1, "", "find_min_poly"], [190, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "inner_endomorphism"], [190, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[190, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[190, 2, 1, "", "__call__"], [190, 2, 1, "", "ancestors"], [190, 2, 1, "", "basis_elements"], [190, 2, 1, "", "element_from_rational"], [190, 2, 1, "", "endomorphism_ring"], [190, 2, 1, "", "is_compat_col"], [190, 2, 1, "", "mult_tab"], [190, 4, 1, "", "n"], [190, 2, 1, "", "nearest_common_ancestor"], [190, 4, 1, "", "number_field"], [190, 2, 1, "", "one"], [190, 4, 1, "", "parent"], [190, 2, 1, "", "power_basis_ancestor"], [190, 2, 1, "", "represent"], [190, 2, 1, "", "starts_with_unity"], [190, 2, 1, "", "submodule_from_gens"], [190, 2, 1, "", "submodule_from_matrix"], [190, 2, 1, "", "whole_submodule"], [190, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[190, 4, 1, "", "QQ_col"], [190, 2, 1, "", "__add__"], [190, 2, 1, "", "__init__"], [190, 2, 1, "", "__mod__"], [190, 2, 1, "", "__mul__"], [190, 2, 1, "", "column"], [190, 2, 1, "", "equiv"], [190, 2, 1, "", "from_int_list"], [190, 2, 1, "", "is_compat"], [190, 4, 1, "", "n"], [190, 2, 1, "", "over_power_basis"], [190, 2, 1, "", "reduced"], [190, 2, 1, "", "reduced_mod_p"], [190, 2, 1, "", "to_ancestor"], [190, 2, 1, "", "to_parent"], [190, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[190, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "kernel"], [190, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "element_from_ANP"], [190, 2, 1, "", "element_from_alg_num"], [190, 2, 1, "", "element_from_poly"], [190, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[190, 4, 1, "", "T"], [190, 2, 1, "", "as_expr"], [190, 4, 1, "", "generator"], [190, 4, 1, "", "is_rational"], [190, 2, 1, "", "norm"], [190, 2, 1, "", "numerator"], [190, 2, 1, "", "poly"], [190, 2, 1, "", "to_ANP"], [190, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[190, 4, 1, "", "QQ_matrix"], [190, 2, 1, "", "__init__"], [190, 2, 1, "", "add"], [190, 2, 1, "", "basis_element_pullbacks"], [190, 2, 1, "", "discard_before"], [190, 2, 1, "", "mul"], [190, 2, 1, "", "reduce_element"], [190, 2, 1, "", "reduced"], [190, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[190, 1, 1, "", "PrimeIdeal"], [190, 3, 1, "", "prime_decomp"], [190, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[190, 2, 1, "", "__add__"], [190, 2, 1, "", "__init__"], [190, 2, 1, "", "__mul__"], [190, 2, 1, "", "as_submodule"], [190, 4, 1, "", "is_inert"], [190, 2, 1, "", "reduce_ANP"], [190, 2, 1, "", "reduce_alg_num"], [190, 2, 1, "", "reduce_element"], [190, 2, 1, "", "repr"], [190, 2, 1, "", "test_factor"], [190, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[190, 3, 1, "", "field_isomorphism"], [190, 3, 1, "", "primitive_element"], [190, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[190, 1, 1, "", "AlgIntPowers"], [190, 3, 1, "", "coeff_search"], [190, 3, 1, "", "extract_fundamental_discriminant"], [190, 3, 1, "", "get_num_denom"], [190, 3, 1, "", "is_int"], [190, 3, 1, "", "is_rat"], [190, 3, 1, "", "isolate"], [190, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[190, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[191, 1, 1, "", "GradedLexOrder"], [191, 1, 1, "", "LexOrder"], [191, 1, 1, "", "MonomialOrder"], [191, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[191, 3, 1, "", "chebyshevt_poly"], [191, 3, 1, "", "chebyshevu_poly"], [191, 3, 1, "", "gegenbauer_poly"], [191, 3, 1, "", "hermite_poly"], [191, 3, 1, "", "jacobi_poly"], [191, 3, 1, "", "laguerre_poly"], [191, 3, 1, "", "legendre_poly"], [191, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[191, 3, 1, "", "apart"], [191, 3, 1, "", "apart_list"], [191, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[186, 1, 1, "", "ANP"], [186, 1, 1, "", "DMF"], [186, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[186, 2, 1, "", "LC"], [186, 2, 1, "", "TC"], [186, 4, 1, "", "is_ground"], [186, 4, 1, "", "is_one"], [186, 4, 1, "", "is_zero"], [186, 2, 1, "", "pow"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_list"], [186, 2, 1, "", "to_sympy_dict"], [186, 2, 1, "", "to_sympy_list"], [186, 2, 1, "", "to_tuple"], [186, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[186, 2, 1, "", "add"], [186, 2, 1, "", "cancel"], [186, 2, 1, "", "denom"], [186, 2, 1, "", "exquo"], [186, 2, 1, "", "frac_unify"], [186, 2, 1, "", "half_per"], [186, 2, 1, "", "invert"], [186, 4, 1, "", "is_one"], [186, 4, 1, "", "is_zero"], [186, 2, 1, "", "mul"], [186, 2, 1, "", "neg"], [186, 2, 1, "", "numer"], [186, 2, 1, "", "per"], [186, 2, 1, "", "poly_unify"], [186, 2, 1, "", "pow"], [186, 2, 1, "", "quo"], [186, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[186, 2, 1, "", "LC"], [186, 2, 1, "", "TC"], [186, 2, 1, "", "abs"], [186, 2, 1, "", "add"], [186, 2, 1, "", "add_ground"], [186, 2, 1, "", "all_coeffs"], [186, 2, 1, "", "all_monoms"], [186, 2, 1, "", "all_terms"], [186, 2, 1, "", "cancel"], [186, 2, 1, "", "cauchy_lower_bound"], [186, 2, 1, "", "cauchy_upper_bound"], [186, 2, 1, "", "clear_denoms"], [186, 2, 1, "", "coeffs"], [186, 2, 1, "", "cofactors"], [186, 2, 1, "", "compose"], [186, 2, 1, "", "content"], [186, 2, 1, "", "convert"], [186, 2, 1, "", "count_complex_roots"], [186, 2, 1, "", "count_real_roots"], [186, 2, 1, "", "decompose"], [186, 2, 1, "", "deflate"], [186, 2, 1, "", "degree"], [186, 2, 1, "", "degree_list"], [186, 2, 1, "", "diff"], [186, 2, 1, "", "discriminant"], [186, 2, 1, "", "div"], [186, 2, 1, "", "eject"], [186, 2, 1, "", "eval"], [186, 2, 1, "", "exclude"], [186, 2, 1, "", "exquo"], [186, 2, 1, "", "exquo_ground"], [186, 2, 1, "", "factor_list"], [186, 2, 1, "", "factor_list_include"], [186, 2, 1, "", "from_dict"], [186, 2, 1, "", "from_list"], [186, 2, 1, "", "from_sympy_list"], [186, 2, 1, "", "gcd"], [186, 2, 1, "", "gcdex"], [186, 2, 1, "", "gff_list"], [186, 2, 1, "", "half_gcdex"], [186, 2, 1, "", "homogeneous_order"], [186, 2, 1, "", "homogenize"], [186, 2, 1, "", "inject"], [186, 2, 1, "", "integrate"], [186, 2, 1, "", "intervals"], [186, 2, 1, "", "invert"], [186, 4, 1, "", "is_cyclotomic"], [186, 4, 1, "", "is_ground"], [186, 4, 1, "", "is_homogeneous"], [186, 4, 1, "", "is_irreducible"], [186, 4, 1, "", "is_linear"], [186, 4, 1, "", "is_monic"], [186, 4, 1, "", "is_monomial"], [186, 4, 1, "", "is_one"], [186, 4, 1, "", "is_primitive"], [186, 4, 1, "", "is_quadratic"], [186, 4, 1, "", "is_sqf"], [186, 4, 1, "", "is_zero"], [186, 2, 1, "", "l1_norm"], [186, 2, 1, "", "l2_norm_squared"], [186, 2, 1, "", "lcm"], [186, 2, 1, "", "lift"], [186, 2, 1, "", "max_norm"], [186, 2, 1, "", "mignotte_sep_bound_squared"], [186, 2, 1, "", "monic"], [186, 2, 1, "", "monoms"], [186, 2, 1, "", "mul"], [186, 2, 1, "", "mul_ground"], [186, 2, 1, "", "neg"], [186, 2, 1, "", "norm"], [186, 2, 1, "", "nth"], [186, 2, 1, "", "pdiv"], [186, 2, 1, "", "per"], [186, 2, 1, "", "permute"], [186, 2, 1, "", "pexquo"], [186, 2, 1, "", "pow"], [186, 2, 1, "", "pquo"], [186, 2, 1, "", "prem"], [186, 2, 1, "", "primitive"], [186, 2, 1, "", "quo"], [186, 2, 1, "", "quo_ground"], [186, 2, 1, "", "refine_root"], [186, 2, 1, "", "rem"], [186, 2, 1, "", "resultant"], [186, 2, 1, "", "revert"], [186, 2, 1, "", "shift"], [186, 2, 1, "", "slice"], [186, 2, 1, "", "sqf_list"], [186, 2, 1, "", "sqf_list_include"], [186, 2, 1, "", "sqf_norm"], [186, 2, 1, "", "sqf_part"], [186, 2, 1, "", "sqr"], [186, 2, 1, "", "sturm"], [186, 2, 1, "", "sub"], [186, 2, 1, "", "sub_ground"], [186, 2, 1, "", "subresultants"], [186, 2, 1, "", "terms"], [186, 2, 1, "", "terms_gcd"], [186, 2, 1, "", "to_dict"], [186, 2, 1, "", "to_exact"], [186, 2, 1, "", "to_field"], [186, 2, 1, "", "to_list"], [186, 2, 1, "", "to_ring"], [186, 2, 1, "", "to_sympy_dict"], [186, 2, 1, "", "to_sympy_list"], [186, 2, 1, "", "to_tuple"], [186, 2, 1, "", "total_degree"], [186, 2, 1, "", "transform"], [186, 2, 1, "", "trunc"], [186, 2, 1, "", "unify"]], "sympy.polys": [[188, 0, 0, "-", "polyconfig"], [188, 0, 0, "-", "polyoptions"], [193, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[188, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[188, 1, 1, "", "BasePolynomialError"], [188, 1, 1, "", "CoercionFailed"], [188, 1, 1, "", "ComputationFailed"], [188, 1, 1, "", "DomainError"], [188, 1, 1, "", "EvaluationFailed"], [188, 1, 1, "", "ExactQuotientFailed"], [188, 1, 1, "", "ExtraneousFactors"], [188, 1, 1, "", "FlagError"], [188, 1, 1, "", "GeneratorsError"], [188, 1, 1, "", "GeneratorsNeeded"], [188, 1, 1, "", "HeuristicGCDFailed"], [188, 1, 1, "", "HomomorphismFailed"], [188, 1, 1, "", "IsomorphismFailed"], [188, 1, 1, "", "MultivariatePolynomialError"], [188, 1, 1, "", "NotAlgebraic"], [188, 1, 1, "", "NotInvertible"], [188, 1, 1, "", "NotReversible"], [188, 1, 1, "", "OperationNotSupported"], [188, 1, 1, "", "OptionError"], [188, 1, 1, "", "PolificationFailed"], [188, 1, 1, "", "PolynomialError"], [188, 1, 1, "", "RefinementFailed"], [188, 1, 1, "", "UnificationFailed"], [188, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[191, 3, 1, "", "horner"], [191, 3, 1, "", "interpolate"], [191, 3, 1, "", "symmetrize"], [191, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[188, 1, 1, "", "Options"], [188, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[188, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[191, 3, 1, "", "roots"]], "sympy.polys.polytools": [[191, 1, 1, "", "GroebnerBasis"], [191, 3, 1, "", "LC"], [191, 3, 1, "", "LM"], [191, 3, 1, "", "LT"], [191, 1, 1, "", "Poly"], [191, 1, 1, "", "PurePoly"], [191, 3, 1, "", "cancel"], [191, 3, 1, "", "cofactors"], [191, 3, 1, "", "compose"], [191, 3, 1, "", "content"], [191, 3, 1, "", "count_roots"], [191, 3, 1, "", "decompose"], [191, 3, 1, "", "degree"], [191, 3, 1, "", "degree_list"], [191, 3, 1, "", "discriminant"], [191, 3, 1, "", "div"], [191, 3, 1, "", "exquo"], [191, 3, 1, "", "factor"], [191, 3, 1, "", "factor_list"], [191, 3, 1, "", "gcd"], [191, 3, 1, "", "gcd_list"], [191, 3, 1, "", "gcdex"], [191, 3, 1, "", "gff"], [191, 3, 1, "", "gff_list"], [191, 3, 1, "", "groebner"], [191, 3, 1, "", "ground_roots"], [191, 3, 1, "", "half_gcdex"], [191, 3, 1, "", "intervals"], [191, 3, 1, "", "invert"], [191, 3, 1, "", "is_zero_dimensional"], [191, 3, 1, "", "lcm"], [191, 3, 1, "", "lcm_list"], [191, 3, 1, "", "monic"], [191, 3, 1, "", "nroots"], [191, 3, 1, "", "nth_power_roots_poly"], [191, 3, 1, "", "parallel_poly_from_expr"], [191, 3, 1, "", "pdiv"], [191, 3, 1, "", "pexquo"], [191, 3, 1, "", "poly"], [191, 3, 1, "", "poly_from_expr"], [191, 3, 1, "", "pquo"], [191, 3, 1, "", "prem"], [191, 3, 1, "", "primitive"], [191, 3, 1, "", "quo"], [191, 3, 1, "", "real_roots"], [191, 3, 1, "", "reduced"], [191, 3, 1, "", "refine_root"], [191, 3, 1, "", "rem"], [191, 3, 1, "", "resultant"], [191, 3, 1, "", "sqf"], [191, 3, 1, "", "sqf_list"], [191, 3, 1, "", "sqf_norm"], [191, 3, 1, "", "sqf_part"], [191, 3, 1, "", "sturm"], [191, 3, 1, "", "subresultants"], [191, 3, 1, "", "terms_gcd"], [191, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[191, 2, 1, "", "contains"], [191, 2, 1, "", "fglm"], [191, 4, 1, "", "is_zero_dimensional"], [191, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[191, 2, 1, "", "EC"], [191, 2, 1, "", "EM"], [191, 2, 1, "", "ET"], [191, 2, 1, "", "LC"], [191, 2, 1, "", "LM"], [191, 2, 1, "", "LT"], [191, 2, 1, "", "TC"], [191, 2, 1, "", "abs"], [191, 2, 1, "", "add"], [191, 2, 1, "", "add_ground"], [191, 2, 1, "", "all_coeffs"], [191, 2, 1, "", "all_monoms"], [191, 2, 1, "", "all_roots"], [191, 2, 1, "", "all_terms"], [191, 2, 1, "", "as_dict"], [191, 2, 1, "", "as_expr"], [191, 2, 1, "", "as_list"], [191, 2, 1, "", "as_poly"], [191, 2, 1, "", "cancel"], [191, 2, 1, "", "clear_denoms"], [191, 2, 1, "", "coeff_monomial"], [191, 2, 1, "", "coeffs"], [191, 2, 1, "", "cofactors"], [191, 2, 1, "", "compose"], [191, 2, 1, "", "content"], [191, 2, 1, "", "count_roots"], [191, 2, 1, "", "decompose"], [191, 2, 1, "", "deflate"], [191, 2, 1, "", "degree"], [191, 2, 1, "", "degree_list"], [191, 2, 1, "", "diff"], [191, 2, 1, "", "discriminant"], [191, 2, 1, "", "dispersion"], [191, 2, 1, "", "dispersionset"], [191, 2, 1, "", "div"], [191, 4, 1, "", "domain"], [191, 2, 1, "", "eject"], [191, 2, 1, "", "eval"], [191, 2, 1, "", "exclude"], [191, 2, 1, "", "exquo"], [191, 2, 1, "", "exquo_ground"], [191, 2, 1, "", "factor_list"], [191, 2, 1, "", "factor_list_include"], [191, 4, 1, "", "free_symbols"], [191, 4, 1, "", "free_symbols_in_domain"], [191, 2, 1, "", "from_dict"], [191, 2, 1, "", "from_expr"], [191, 2, 1, "", "from_list"], [191, 2, 1, "", "from_poly"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "gcdex"], [191, 4, 1, "", "gen"], [191, 2, 1, "", "get_domain"], [191, 2, 1, "", "get_modulus"], [191, 2, 1, "", "gff_list"], [191, 2, 1, "", "ground_roots"], [191, 2, 1, "", "half_gcdex"], [191, 2, 1, "", "has_only_gens"], [191, 2, 1, "", "homogeneous_order"], [191, 2, 1, "", "homogenize"], [191, 2, 1, "", "inject"], [191, 2, 1, "", "integrate"], [191, 2, 1, "", "intervals"], [191, 2, 1, "", "invert"], [191, 4, 1, "", "is_cyclotomic"], [191, 4, 1, "", "is_ground"], [191, 4, 1, "", "is_homogeneous"], [191, 4, 1, "", "is_irreducible"], [191, 4, 1, "", "is_linear"], [191, 4, 1, "", "is_monic"], [191, 4, 1, "", "is_monomial"], [191, 4, 1, "", "is_multivariate"], [191, 4, 1, "", "is_one"], [191, 4, 1, "", "is_primitive"], [191, 4, 1, "", "is_quadratic"], [191, 4, 1, "", "is_sqf"], [191, 4, 1, "", "is_univariate"], [191, 4, 1, "", "is_zero"], [191, 2, 1, "", "l1_norm"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "length"], [191, 2, 1, "", "lift"], [191, 2, 1, "", "ltrim"], [191, 2, 1, "", "match"], [191, 2, 1, "", "max_norm"], [191, 2, 1, "", "monic"], [191, 2, 1, "", "monoms"], [191, 2, 1, "", "mul"], [191, 2, 1, "", "mul_ground"], [191, 2, 1, "", "neg"], [191, 2, 1, "", "new"], [191, 2, 1, "", "norm"], [191, 2, 1, "", "nroots"], [191, 2, 1, "", "nth"], [191, 2, 1, "", "nth_power_roots_poly"], [191, 4, 1, "", "one"], [191, 2, 1, "", "pdiv"], [191, 2, 1, "", "per"], [191, 2, 1, "", "pexquo"], [191, 2, 1, "", "pow"], [191, 2, 1, "", "pquo"], [191, 2, 1, "", "prem"], [191, 2, 1, "", "primitive"], [191, 2, 1, "", "quo"], [191, 2, 1, "", "quo_ground"], [191, 2, 1, "", "rat_clear_denoms"], [191, 2, 1, "", "real_roots"], [191, 2, 1, "", "refine_root"], [191, 2, 1, "", "rem"], [191, 2, 1, "", "reorder"], [191, 2, 1, "", "replace"], [191, 2, 1, "", "resultant"], [191, 2, 1, "", "retract"], [191, 2, 1, "", "revert"], [191, 2, 1, "", "root"], [191, 2, 1, "", "same_root"], [191, 2, 1, "", "set_domain"], [191, 2, 1, "", "set_modulus"], [191, 2, 1, "", "shift"], [191, 2, 1, "", "slice"], [191, 2, 1, "", "sqf_list"], [191, 2, 1, "", "sqf_list_include"], [191, 2, 1, "", "sqf_norm"], [191, 2, 1, "", "sqf_part"], [191, 2, 1, "", "sqr"], [191, 2, 1, "", "sturm"], [191, 2, 1, "", "sub"], [191, 2, 1, "", "sub_ground"], [191, 2, 1, "", "subresultants"], [191, 2, 1, "", "terms"], [191, 2, 1, "", "terms_gcd"], [191, 2, 1, "", "termwise"], [191, 2, 1, "", "to_exact"], [191, 2, 1, "", "to_field"], [191, 2, 1, "", "to_ring"], [191, 2, 1, "", "total_degree"], [191, 2, 1, "", "transform"], [191, 2, 1, "", "trunc"], [191, 2, 1, "", "unify"], [191, 4, 1, "", "unit"], [191, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[191, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[191, 3, 1, "", "together"]], "sympy.polys.ring_series": [[192, 3, 1, "", "_tan1"], [192, 3, 1, "", "mul_xin"], [192, 3, 1, "", "pow_xin"], [192, 3, 1, "", "rs_LambertW"], [192, 3, 1, "", "rs_asin"], [192, 3, 1, "", "rs_atan"], [192, 3, 1, "", "rs_atanh"], [192, 3, 1, "", "rs_compose_add"], [192, 3, 1, "", "rs_cos"], [192, 3, 1, "", "rs_cos_sin"], [192, 3, 1, "", "rs_cosh"], [192, 3, 1, "", "rs_cot"], [192, 3, 1, "", "rs_diff"], [192, 3, 1, "", "rs_exp"], [192, 3, 1, "", "rs_fun"], [192, 3, 1, "", "rs_hadamard_exp"], [192, 3, 1, "", "rs_integrate"], [192, 3, 1, "", "rs_is_puiseux"], [192, 3, 1, "", "rs_log"], [192, 3, 1, "", "rs_mul"], [192, 3, 1, "", "rs_newton"], [192, 3, 1, "", "rs_nth_root"], [192, 3, 1, "", "rs_pow"], [192, 3, 1, "", "rs_puiseux"], [192, 3, 1, "", "rs_puiseux2"], [192, 3, 1, "", "rs_series_from_list"], [192, 3, 1, "", "rs_series_inversion"], [192, 3, 1, "", "rs_series_reversion"], [192, 3, 1, "", "rs_sin"], [192, 3, 1, "", "rs_sinh"], [192, 3, 1, "", "rs_square"], [192, 3, 1, "", "rs_subs"], [192, 3, 1, "", "rs_tan"], [192, 3, 1, "", "rs_tanh"], [192, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[186, 1, 1, "", "PolyElement"], [186, 1, 1, "", "PolyRing"], [186, 3, 1, "", "ring"], [186, 3, 1, "", "sring"], [186, 3, 1, "", "vring"], [186, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[186, 2, 1, "", "almosteq"], [186, 2, 1, "", "cancel"], [186, 2, 1, "", "coeff"], [186, 2, 1, "", "coeffs"], [186, 2, 1, "", "const"], [186, 2, 1, "", "content"], [186, 2, 1, "", "copy"], [186, 2, 1, "", "degree"], [186, 2, 1, "", "degrees"], [186, 2, 1, "", "diff"], [186, 2, 1, "", "div"], [186, 2, 1, "", "imul_num"], [186, 2, 1, "", "itercoeffs"], [186, 2, 1, "", "itermonoms"], [186, 2, 1, "", "iterterms"], [186, 2, 1, "", "leading_expv"], [186, 2, 1, "", "leading_monom"], [186, 2, 1, "", "leading_term"], [186, 2, 1, "", "listcoeffs"], [186, 2, 1, "", "listmonoms"], [186, 2, 1, "", "listterms"], [186, 2, 1, "", "monic"], [186, 2, 1, "", "monoms"], [186, 2, 1, "", "primitive"], [186, 2, 1, "", "square"], [186, 2, 1, "", "strip_zero"], [186, 2, 1, "", "tail_degree"], [186, 2, 1, "", "tail_degrees"], [186, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[186, 2, 1, "", "add"], [186, 2, 1, "", "add_gens"], [186, 2, 1, "", "compose"], [186, 2, 1, "", "drop"], [186, 2, 1, "", "drop_to_ground"], [186, 2, 1, "", "index"], [186, 2, 1, "", "monomial_basis"], [186, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[191, 1, 1, "", "ComplexRootOf"], [191, 1, 1, "", "RootOf"], [191, 1, 1, "", "RootSum"], [191, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[191, 2, 1, "", "_all_roots"], [191, 2, 1, "", "_complexes_index"], [191, 2, 1, "", "_complexes_sorted"], [191, 2, 1, "", "_count_roots"], [191, 2, 1, "", "_ensure_complexes_init"], [191, 2, 1, "", "_ensure_reals_init"], [191, 2, 1, "", "_eval_evalf"], [191, 2, 1, "", "_eval_is_imaginary"], [191, 2, 1, "", "_eval_is_real"], [191, 2, 1, "", "_get_complexes"], [191, 2, 1, "", "_get_complexes_sqf"], [191, 2, 1, "", "_get_interval"], [191, 2, 1, "", "_get_reals"], [191, 2, 1, "", "_get_reals_sqf"], [191, 2, 1, "", "_get_roots"], [191, 2, 1, "", "_indexed_root"], [191, 2, 1, "", "_new"], [191, 2, 1, "", "_postprocess_root"], [191, 2, 1, "", "_preprocess_roots"], [191, 2, 1, "", "_real_roots"], [191, 2, 1, "", "_reals_index"], [191, 2, 1, "", "_reals_sorted"], [191, 2, 1, "", "_refine_complexes"], [191, 2, 1, "", "_reset"], [191, 2, 1, "", "_roots_trivial"], [191, 2, 1, "", "_set_interval"], [191, 2, 1, "", "all_roots"], [191, 2, 1, "", "clear_cache"], [191, 2, 1, "", "eval_approx"], [191, 2, 1, "", "eval_rational"], [191, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[191, 2, 1, "", "new"]], "sympy.polys.solvers": [[193, 3, 1, "", "_solve_lin_sys"], [193, 3, 1, "", "_solve_lin_sys_component"], [193, 3, 1, "", "eqs_to_matrix"], [193, 3, 1, "", "solve_lin_sys"], [193, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[191, 3, 1, "", "cyclotomic_poly"], [191, 3, 1, "", "interpolating_poly"], [191, 3, 1, "", "random_poly"], [191, 3, 1, "", "swinnerton_dyer_poly"], [191, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[195, 0, 0, "-", "aesaracode"], [195, 0, 0, "-", "c"], [195, 0, 0, "-", "codeprinter"], [195, 0, 0, "-", "conventions"], [195, 0, 0, "-", "cxx"], [195, 0, 0, "-", "fortran"], [195, 0, 0, "-", "gtk"], [195, 0, 0, "-", "jscode"], [195, 0, 0, "-", "julia"], [195, 0, 0, "-", "lambdarepr"], [195, 0, 0, "-", "latex"], [195, 0, 0, "-", "maple"], [195, 0, 0, "-", "mathematica"], [195, 0, 0, "-", "mathml"], [195, 0, 0, "-", "octave"], [195, 0, 0, "-", "precedence"], [195, 0, 0, "-", "pretty"], [195, 0, 0, "-", "preview"], [195, 0, 0, "-", "printer"], [195, 0, 0, "-", "pycode"], [195, 0, 0, "-", "python"], [195, 0, 0, "-", "rcode"], [195, 0, 0, "-", "repr"], [195, 0, 0, "-", "rust"], [195, 0, 0, "-", "str"], [195, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[195, 1, 1, "", "AesaraPrinter"], [195, 3, 1, "", "aesara_code"], [195, 3, 1, "", "aesara_function"], [195, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[195, 2, 1, "", "doprint"], [195, 5, 1, "", "printmethod"]], "sympy.printing.c": [[195, 1, 1, "", "C89CodePrinter"], [195, 1, 1, "", "C99CodePrinter"], [195, 3, 1, "", "ccode"], [195, 6, 1, "", "known_functions_C89"], [195, 6, 1, "", "known_functions_C99"], [195, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[195, 2, 1, "", "indent_code"], [195, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[195, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[195, 7, 1, "", "AssignmentError"], [195, 1, 1, "", "CodePrinter"], [195, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[195, 2, 1, "", "doprint"], [195, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[195, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[195, 1, 1, "", "CXX11CodePrinter"], [195, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[195, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[195, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[195, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[195, 1, 1, "", "FCodePrinter"], [195, 3, 1, "", "fcode"], [195, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[195, 2, 1, "", "indent_code"], [195, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[195, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[195, 1, 1, "", "JavascriptCodePrinter"], [195, 3, 1, "", "jscode"], [195, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[195, 2, 1, "", "indent_code"], [195, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[195, 1, 1, "", "JuliaCodePrinter"], [195, 3, 1, "", "julia_code"], [195, 6, 1, "", "known_fcns_src1"], [195, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[195, 2, 1, "", "indent_code"], [195, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[195, 1, 1, "", "LambdaPrinter"], [195, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[195, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[195, 1, 1, "", "LatexPrinter"], [195, 6, 1, "", "accepted_latex_functions"], [195, 3, 1, "", "latex"], [195, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[195, 2, 1, "", "parenthesize_super"], [195, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[195, 1, 1, "", "MapleCodePrinter"], [195, 3, 1, "", "maple_code"], [195, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[195, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[195, 1, 1, "", "MCodePrinter"], [195, 6, 1, "", "known_functions"], [195, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[195, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[195, 1, 1, "", "MathMLContentPrinter"], [195, 1, 1, "", "MathMLPresentationPrinter"], [195, 1, 1, "", "MathMLPrinterBase"], [195, 3, 1, "", "mathml"], [195, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[195, 2, 1, "", "mathml_tag"], [195, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[195, 2, 1, "", "mathml_tag"], [195, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[195, 2, 1, "", "doprint"]], "sympy.printing.octave": [[195, 1, 1, "", "OctaveCodePrinter"], [195, 6, 1, "", "known_fcns_src1"], [195, 6, 1, "", "known_fcns_src2"], [195, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[195, 2, 1, "", "indent_code"], [195, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[195, 6, 1, "", "PRECEDENCE"], [195, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [195, 6, 1, "", "PRECEDENCE_VALUES"], [195, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[195, 0, 0, "-", "pretty"], [195, 0, 0, "-", "pretty_symbology"], [195, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[195, 1, 1, "", "PrettyPrinter"], [195, 3, 1, "", "pretty"], [195, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[195, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[195, 3, 1, "", "G"], [195, 3, 1, "", "U"], [195, 3, 1, "", "VF"], [195, 3, 1, "", "annotated"], [195, 6, 1, "", "atoms_table"], [195, 6, 1, "", "digit_2txt"], [195, 6, 1, "", "frac"], [195, 3, 1, "", "g"], [195, 6, 1, "", "greek_letters"], [195, 3, 1, "", "hobj"], [195, 3, 1, "", "pretty_atom"], [195, 3, 1, "", "pretty_symbol"], [195, 3, 1, "", "pretty_try_use_unicode"], [195, 3, 1, "", "pretty_use_unicode"], [195, 6, 1, "", "root"], [195, 6, 1, "", "sub"], [195, 6, 1, "", "sup"], [195, 6, 1, "", "symb_2txt"], [195, 3, 1, "", "vobj"], [195, 3, 1, "", "xobj"], [195, 3, 1, "", "xstr"], [195, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[195, 1, 1, "", "prettyForm"], [195, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[195, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[195, 2, 1, "", "above"], [195, 2, 1, "", "below"], [195, 2, 1, "", "height"], [195, 2, 1, "", "left"], [195, 2, 1, "", "leftslash"], [195, 2, 1, "", "next"], [195, 2, 1, "", "parens"], [195, 2, 1, "", "render"], [195, 2, 1, "", "right"], [195, 2, 1, "", "root"], [195, 2, 1, "", "stack"], [195, 2, 1, "", "terminal_width"], [195, 2, 1, "", "width"]], "sympy.printing.preview": [[195, 3, 1, "", "preview"]], "sympy.printing.printer": [[195, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[195, 2, 1, "", "_print"], [195, 2, 1, "", "doprint"], [195, 5, 1, "", "printmethod"], [195, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[195, 1, 1, "", "MpmathPrinter"], [195, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[195, 1, 1, "", "RCodePrinter"], [195, 6, 1, "", "known_functions"], [195, 3, 1, "", "print_rcode"], [195, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[195, 2, 1, "", "indent_code"], [195, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[195, 1, 1, "", "ReprPrinter"], [195, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[195, 2, 1, "", "emptyPrinter"], [195, 5, 1, "", "printmethod"], [195, 2, 1, "", "reprify"]], "sympy.printing.rust": [[195, 1, 1, "", "RustCodePrinter"], [195, 6, 1, "", "known_functions"], [195, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[195, 2, 1, "", "indent_code"], [195, 5, 1, "", "printmethod"]], "sympy.printing.str": [[195, 1, 1, "", "StrPrinter"], [195, 3, 1, "", "sstr"], [195, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[195, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[195, 3, 1, "", "pprint_nodes"], [195, 3, 1, "", "print_node"], [195, 3, 1, "", "print_tree"], [195, 3, 1, "", "tree"]], "sympy.series.acceleration": [[202, 3, 1, "", "richardson"], [202, 3, 1, "", "shanks"]], "sympy.series.formal": [[197, 1, 1, "", "FiniteFormalPowerSeries"], [197, 1, 1, "", "FormalPowerSeries"], [197, 1, 1, "", "FormalPowerSeriesCompose"], [197, 1, 1, "", "FormalPowerSeriesInverse"], [197, 1, 1, "", "FormalPowerSeriesProduct"], [197, 3, 1, "", "compute_fps"], [197, 3, 1, "", "exp_re"], [197, 3, 1, "", "fps"], [197, 3, 1, "", "hyper_algorithm"], [197, 3, 1, "", "hyper_re"], [197, 3, 1, "", "rational_algorithm"], [197, 3, 1, "", "rational_independent"], [197, 3, 1, "", "rsolve_hypergeometric"], [197, 3, 1, "", "simpleDE"], [197, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[197, 2, 1, "", "coeff_bell"], [197, 2, 1, "", "compose"], [197, 4, 1, "", "infinite"], [197, 2, 1, "", "integrate"], [197, 2, 1, "", "inverse"], [197, 2, 1, "", "polynomial"], [197, 2, 1, "", "product"], [197, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[197, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[197, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[197, 4, 1, "", "function"]], "sympy.series.fourier": [[198, 1, 1, "", "FourierSeries"], [198, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[198, 2, 1, "", "scale"], [198, 2, 1, "", "scalex"], [198, 2, 1, "", "shift"], [198, 2, 1, "", "shiftx"], [198, 2, 1, "", "sigma_approximation"], [198, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[202, 1, 1, "", "SubsSet"], [202, 3, 1, "", "build_expression_tree"], [202, 3, 1, "", "calculate_series"], [202, 3, 1, "", "compare"], [202, 3, 1, "", "gruntz"], [202, 3, 1, "", "limitinf"], [202, 3, 1, "", "mrv"], [202, 3, 1, "", "mrv_leadterm"], [202, 3, 1, "", "mrv_max1"], [202, 3, 1, "", "mrv_max3"], [202, 3, 1, "", "rewrite"], [202, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[202, 2, 1, "", "copy"], [202, 2, 1, "", "do_subs"], [202, 2, 1, "", "meets"], [202, 2, 1, "", "union"]], "sympy.series.limits": [[202, 1, 1, "", "Limit"], [202, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[202, 2, 1, "", "doit"]], "sympy.series.limitseq": [[200, 3, 1, "", "difference_delta"], [200, 3, 1, "", "dominant"], [200, 3, 1, "", "limit_seq"]], "sympy.series.order": [[202, 1, 1, "", "Order"]], "sympy.series.order.Order": [[202, 2, 1, "", "contains"]], "sympy.series.residues": [[202, 3, 1, "", "residue"]], "sympy.series.sequences": [[201, 1, 1, "", "EmptySequence"], [201, 1, 1, "", "RecursiveSeq"], [201, 1, 1, "", "SeqAdd"], [201, 1, 1, "", "SeqBase"], [201, 1, 1, "", "SeqFormula"], [201, 1, 1, "", "SeqMul"], [201, 1, 1, "", "SeqPer"], [201, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[201, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[201, 4, 1, "", "initial"], [201, 4, 1, "", "interval"], [201, 4, 1, "", "n"], [201, 4, 1, "", "recurrence"], [201, 4, 1, "", "start"], [201, 4, 1, "", "stop"], [201, 4, 1, "", "y"], [201, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[201, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[201, 2, 1, "", "coeff"], [201, 2, 1, "", "coeff_mul"], [201, 2, 1, "", "find_linear_recurrence"], [201, 4, 1, "", "free_symbols"], [201, 4, 1, "", "gen"], [201, 4, 1, "", "interval"], [201, 4, 1, "", "length"], [201, 4, 1, "", "start"], [201, 4, 1, "", "stop"], [201, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[201, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[201, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[201, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[202, 3, 1, "", "series"]], "sympy.sets": [[203, 0, 0, "-", "conditionset"], [203, 0, 0, "-", "fancysets"], [203, 0, 0, "-", "powerset"], [203, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[203, 1, 1, "", "ConditionSet"], [203, 1, 1, "", "Contains"], [203, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[203, 1, 1, "", "CartesianComplexRegion"], [203, 1, 1, "", "ComplexRegion"], [203, 1, 1, "", "Complexes"], [203, 1, 1, "", "ImageSet"], [203, 1, 1, "", "Integers"], [203, 1, 1, "", "Naturals"], [203, 1, 1, "", "Naturals0"], [203, 1, 1, "", "PolarComplexRegion"], [203, 1, 1, "", "Range"], [203, 1, 1, "", "Rationals"], [203, 1, 1, "", "Reals"], [203, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[203, 4, 1, "", "a_interval"], [203, 4, 1, "", "b_interval"], [203, 2, 1, "", "from_real"], [203, 4, 1, "", "psets"], [203, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[203, 2, 1, "", "as_relational"], [203, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[203, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[203, 1, 1, "", "Complement"], [203, 1, 1, "", "DisjointUnion"], [203, 1, 1, "", "EmptySet"], [203, 1, 1, "", "FiniteSet"], [203, 1, 1, "", "Intersection"], [203, 1, 1, "", "Interval"], [203, 1, 1, "", "ProductSet"], [203, 1, 1, "", "Set"], [203, 1, 1, "", "SymmetricDifference"], [203, 1, 1, "", "Union"], [203, 1, 1, "", "UniversalSet"], [203, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[203, 2, 1, "", "as_relational"], [203, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[203, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[203, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[203, 2, 1, "", "Lopen"], [203, 2, 1, "", "Ropen"], [203, 2, 1, "", "as_relational"], [203, 4, 1, "", "end"], [203, 4, 1, "", "is_left_unbounded"], [203, 4, 1, "", "is_right_unbounded"], [203, 4, 1, "", "left_open"], [203, 2, 1, "", "open"], [203, 4, 1, "", "right_open"], [203, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[203, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[203, 4, 1, "", "boundary"], [203, 4, 1, "", "closure"], [203, 2, 1, "", "complement"], [203, 2, 1, "", "contains"], [203, 4, 1, "", "inf"], [203, 4, 1, "", "interior"], [203, 2, 1, "", "intersect"], [203, 2, 1, "", "intersection"], [203, 4, 1, "", "is_closed"], [203, 2, 1, "", "is_disjoint"], [203, 4, 1, "", "is_open"], [203, 2, 1, "", "is_proper_subset"], [203, 2, 1, "", "is_proper_superset"], [203, 2, 1, "", "is_subset"], [203, 2, 1, "", "is_superset"], [203, 2, 1, "", "isdisjoint"], [203, 2, 1, "", "issubset"], [203, 2, 1, "", "issuperset"], [203, 4, 1, "", "kind"], [203, 4, 1, "", "measure"], [203, 2, 1, "", "powerset"], [203, 4, 1, "", "sup"], [203, 2, 1, "", "symmetric_difference"], [203, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[203, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[203, 2, 1, "", "as_relational"]], "sympy.simplify": [[207, 0, 0, "-", "combsimp"], [207, 0, 0, "-", "cse_main"], [207, 0, 0, "-", "epathtools"], [207, 0, 0, "-", "hyperexpand"], [205, 0, 0, "-", "hyperexpand_doc"], [207, 0, 0, "-", "powsimp"], [207, 0, 0, "-", "radsimp"], [207, 0, 0, "-", "ratsimp"], [2, 0, 0, "-", "simplify"], [207, 0, 0, "-", "sqrtdenest"], [207, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[207, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[207, 3, 1, "", "cse"], [207, 3, 1, "", "opt_cse"], [207, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[207, 1, 1, "", "EPath"], [207, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[207, 2, 1, "", "apply"], [207, 2, 1, "", "select"]], "sympy.simplify.fu": [[204, 3, 1, "", "TR0"], [204, 3, 1, "", "TR1"], [204, 3, 1, "", "TR10"], [204, 3, 1, "", "TR10i"], [204, 3, 1, "", "TR11"], [204, 3, 1, "", "TR111"], [204, 3, 1, "", "TR12"], [204, 3, 1, "", "TR12i"], [204, 3, 1, "", "TR13"], [204, 3, 1, "", "TR14"], [204, 3, 1, "", "TR15"], [204, 3, 1, "", "TR16"], [204, 3, 1, "", "TR2"], [204, 3, 1, "", "TR22"], [204, 3, 1, "", "TR2i"], [204, 3, 1, "", "TR3"], [204, 3, 1, "", "TR4"], [204, 3, 1, "", "TR5"], [204, 3, 1, "", "TR6"], [204, 3, 1, "", "TR7"], [204, 3, 1, "", "TR8"], [204, 3, 1, "", "TR9"], [204, 3, 1, "", "TRmorrie"], [204, 3, 1, "", "TRpower"], [204, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[207, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[207, 3, 1, "", "powdenest"], [207, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[207, 3, 1, "", "collect"], [207, 3, 1, "", "collect_const"], [207, 3, 1, "", "collect_sqrt"], [207, 3, 1, "", "fraction"], [207, 3, 1, "", "rad_rationalize"], [207, 3, 1, "", "radsimp"], [207, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[207, 3, 1, "", "ratsimp"], [207, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[207, 3, 1, "", "besselsimp"], [207, 3, 1, "", "hypersimilar"], [207, 3, 1, "", "hypersimp"], [207, 3, 1, "", "kroneckersimp"], [207, 3, 1, "", "logcombine"], [207, 3, 1, "", "nsimplify"], [207, 3, 1, "", "nthroot"], [207, 3, 1, "", "posify"], [207, 3, 1, "", "separatevars"], [207, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[207, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[207, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[213, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[208, 1, 1, "", "BinaryQuadratic"], [208, 1, 1, "", "CubicThue"], [208, 1, 1, "", "DiophantineEquationType"], [208, 1, 1, "", "DiophantineSolutionSet"], [208, 1, 1, "", "GeneralPythagorean"], [208, 1, 1, "", "GeneralSumOfEvenPowers"], [208, 1, 1, "", "GeneralSumOfSquares"], [208, 1, 1, "", "HomogeneousGeneralQuadratic"], [208, 1, 1, "", "HomogeneousTernaryQuadratic"], [208, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [208, 1, 1, "", "InhomogeneousGeneralQuadratic"], [208, 1, 1, "", "InhomogeneousTernaryQuadratic"], [208, 1, 1, "", "Linear"], [208, 3, 1, "", "PQa"], [208, 1, 1, "", "Univariate"], [208, 3, 1, "", "base_solution_linear"], [208, 3, 1, "", "classify_diop"], [208, 3, 1, "", "cornacchia"], [208, 3, 1, "", "descent"], [208, 3, 1, "", "diop_DN"], [208, 3, 1, "", "diop_bf_DN"], [208, 3, 1, "", "diop_general_pythagorean"], [208, 3, 1, "", "diop_general_sum_of_even_powers"], [208, 3, 1, "", "diop_general_sum_of_squares"], [208, 3, 1, "", "diop_linear"], [208, 3, 1, "", "diop_quadratic"], [208, 3, 1, "", "diop_solve"], [208, 3, 1, "", "diop_ternary_quadratic"], [208, 3, 1, "", "diop_ternary_quadratic_normal"], [208, 3, 1, "", "diophantine"], [208, 3, 1, "", "divisible"], [208, 3, 1, "", "equivalent"], [208, 3, 1, "", "find_DN"], [208, 3, 1, "", "gaussian_reduce"], [208, 3, 1, "", "holzer"], [208, 3, 1, "", "ldescent"], [208, 3, 1, "", "merge_solution"], [208, 3, 1, "", "parametrize_ternary_quadratic"], [208, 3, 1, "", "partition"], [208, 3, 1, "", "power_representation"], [208, 3, 1, "", "prime_as_sum_of_two_squares"], [208, 3, 1, "", "reconstruct"], [208, 3, 1, "", "sqf_normal"], [208, 3, 1, "", "square_factor"], [208, 3, 1, "", "sum_of_four_squares"], [208, 3, 1, "", "sum_of_powers"], [208, 3, 1, "", "sum_of_squares"], [208, 3, 1, "", "sum_of_three_squares"], [208, 3, 1, "", "transformation_to_DN"], [208, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[208, 2, 1, "", "matches"]], "sympy.solvers": [[210, 0, 0, "-", "inequalities"], [211, 0, 0, "-", "ode"], [212, 0, 0, "-", "pde"], [213, 0, 0, "-", "recurr"], [214, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[210, 3, 1, "", "reduce_abs_inequalities"], [210, 3, 1, "", "reduce_abs_inequality"], [210, 3, 1, "", "reduce_inequalities"], [210, 3, 1, "", "reduce_rational_inequalities"], [210, 3, 1, "", "solve_poly_inequalities"], [210, 3, 1, "", "solve_poly_inequality"], [210, 3, 1, "", "solve_rational_inequalities"], [210, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[211, 6, 1, "", "allhints"], [211, 3, 1, "", "checkinfsol"], [211, 3, 1, "", "checkodesol"], [211, 3, 1, "", "classify_ode"], [211, 3, 1, "", "constantsimp"], [211, 3, 1, "", "dsolve"], [211, 3, 1, "", "homogeneous_order"], [211, 3, 1, "", "infinitesimals"], [211, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[211, 3, 1, "", "lie_heuristic_abaco1_product"], [211, 3, 1, "", "lie_heuristic_abaco1_simple"], [211, 3, 1, "", "lie_heuristic_abaco2_similar"], [211, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [211, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [211, 3, 1, "", "lie_heuristic_bivariate"], [211, 3, 1, "", "lie_heuristic_chi"], [211, 3, 1, "", "lie_heuristic_function_sum"], [211, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[211, 3, 1, "", "_handle_Integral"], [211, 3, 1, "", "_linear_2eq_order1_type6"], [211, 3, 1, "", "_linear_2eq_order1_type7"], [211, 3, 1, "", "_nonlinear_2eq_order1_type1"], [211, 3, 1, "", "_nonlinear_2eq_order1_type2"], [211, 3, 1, "", "_nonlinear_2eq_order1_type3"], [211, 3, 1, "", "_nonlinear_2eq_order1_type4"], [211, 3, 1, "", "_nonlinear_2eq_order1_type5"], [211, 3, 1, "", "_nonlinear_3eq_order1_type1"], [211, 3, 1, "", "_nonlinear_3eq_order1_type2"], [211, 3, 1, "", "_nonlinear_3eq_order1_type3"], [211, 3, 1, "", "_nonlinear_3eq_order1_type4"], [211, 3, 1, "", "_nonlinear_3eq_order1_type5"], [211, 3, 1, "", "constant_renumber"], [211, 3, 1, "", "ode_1st_power_series"], [211, 3, 1, "", "ode_2nd_power_series_ordinary"], [211, 3, 1, "", "ode_2nd_power_series_regular"], [211, 3, 1, "", "ode_sol_simplicity"], [211, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[211, 3, 1, "", "compute_m_ybar"], [211, 3, 1, "", "construct_c"], [211, 3, 1, "", "construct_d"], [211, 3, 1, "", "get_gen_sol_from_part_sol"], [211, 3, 1, "", "rational_laurent_series"], [211, 3, 1, "", "remove_redundant_sols"], [211, 3, 1, "", "riccati_inverse_normal"], [211, 3, 1, "", "riccati_normal"], [211, 3, 1, "", "riccati_reduced"], [211, 3, 1, "", "solve_aux_eq"], [211, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[211, 1, 1, "", "AlmostLinear"], [211, 1, 1, "", "Bernoulli"], [211, 1, 1, "", "Factorable"], [211, 1, 1, "", "FirstExact"], [211, 1, 1, "", "FirstLinear"], [211, 1, 1, "", "HomogeneousCoeffBest"], [211, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [211, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [211, 1, 1, "", "LieGroup"], [211, 1, 1, "", "LinearCoefficients"], [211, 1, 1, "", "Liouville"], [211, 1, 1, "", "NthAlgebraic"], [211, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [211, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [211, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [211, 1, 1, "", "NthLinearEulerEqHomogeneous"], [211, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [211, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [211, 1, 1, "", "NthOrderReducible"], [211, 1, 1, "", "RationalRiccati"], [211, 1, 1, "", "RiccatiSpecial"], [211, 1, 1, "", "SecondHypergeometric"], [211, 1, 1, "", "SecondLinearAiry"], [211, 1, 1, "", "SecondLinearBessel"], [211, 1, 1, "", "Separable"], [211, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[211, 3, 1, "", "canonical_odes"], [211, 3, 1, "", "dsolve_system"], [211, 3, 1, "", "linear_ode_to_matrix"], [211, 3, 1, "", "linodesolve"], [211, 3, 1, "", "linodesolve_type"], [211, 3, 1, "", "matrix_exp"], [211, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[212, 3, 1, "", "checkpdesol"], [212, 3, 1, "", "classify_pde"], [212, 3, 1, "", "pde_1st_linear_constant_coeff"], [212, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [212, 3, 1, "", "pde_1st_linear_variable_coeff"], [212, 3, 1, "", "pde_separate"], [212, 3, 1, "", "pde_separate_add"], [212, 3, 1, "", "pde_separate_mul"], [212, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[213, 3, 1, "", "solve_poly_system"], [213, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[213, 3, 1, "", "rsolve"], [213, 3, 1, "", "rsolve_hyper"], [213, 3, 1, "", "rsolve_poly"], [213, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[213, 3, 1, "", "checksol"], [213, 3, 1, "", "nsolve"], [213, 3, 1, "", "solve"], [213, 3, 1, "", "solve_linear"], [213, 3, 1, "", "solve_linear_system"], [213, 3, 1, "", "solve_linear_system_LU"], [213, 3, 1, "", "solve_undetermined_coeffs"], [213, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[214, 3, 1, "", "_is_exponential"], [214, 3, 1, "", "_is_logarithmic"], [214, 3, 1, "", "_solve_exponential"], [214, 3, 1, "", "_solve_logarithm"], [214, 3, 1, "", "_transolve"], [214, 3, 1, "", "domain_check"], [214, 3, 1, "", "invert_complex"], [214, 3, 1, "", "invert_real"], [214, 3, 1, "", "linear_eq_to_matrix"], [214, 3, 1, "", "linsolve"], [214, 3, 1, "", "nonlinsolve"], [214, 3, 1, "", "solveset"], [214, 3, 1, "", "solveset_complex"], [214, 3, 1, "", "solveset_real"], [214, 3, 1, "", "solvify"]], "sympy.stats": [[215, 3, 1, "", "Arcsin"], [215, 3, 1, "", "Benini"], [215, 3, 1, "", "Bernoulli"], [215, 1, 1, "", "BernoulliProcess"], [215, 3, 1, "", "Beta"], [215, 3, 1, "", "BetaBinomial"], [215, 3, 1, "", "BetaNoncentral"], [215, 3, 1, "", "BetaPrime"], [215, 3, 1, "", "Binomial"], [215, 3, 1, "", "BoundedPareto"], [215, 3, 1, "", "Cauchy"], [215, 1, 1, "", "CentralMoment"], [215, 3, 1, "", "Chi"], [215, 3, 1, "", "ChiNoncentral"], [215, 3, 1, "", "ChiSquared"], [215, 3, 1, "", "Coin"], [215, 1, 1, "", "ContinuousMarkovChain"], [215, 3, 1, "", "ContinuousRV"], [215, 1, 1, "", "Covariance"], [215, 1, 1, "", "CrossCovarianceMatrix"], [215, 3, 1, "", "Dagum"], [215, 3, 1, "", "Die"], [215, 1, 1, "", "DiscreteMarkovChain"], [215, 3, 1, "", "DiscreteUniform"], [215, 3, 1, "", "E"], [215, 3, 1, "", "Erlang"], [215, 3, 1, "", "ExGaussian"], [215, 1, 1, "", "Expectation"], [215, 1, 1, "", "ExpectationMatrix"], [215, 3, 1, "", "Exponential"], [215, 3, 1, "", "FDistribution"], [215, 3, 1, "", "FiniteRV"], [215, 3, 1, "", "FisherZ"], [215, 3, 1, "", "Frechet"], [215, 3, 1, "", "Gamma"], [215, 3, 1, "", "GammaInverse"], [215, 1, 1, "", "GammaProcess"], [215, 3, 1, "", "GeneralizedMultivariateLogGamma"], [215, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [215, 3, 1, "", "Geometric"], [215, 3, 1, "", "Gompertz"], [215, 3, 1, "", "Gumbel"], [215, 3, 1, "", "Hermite"], [215, 3, 1, "", "Hypergeometric"], [215, 3, 1, "", "JointRV"], [215, 3, 1, "", "Kumaraswamy"], [215, 3, 1, "", "Laplace"], [215, 3, 1, "", "Levy"], [215, 3, 1, "", "LogLogistic"], [215, 3, 1, "", "LogNormal"], [215, 3, 1, "", "Logarithmic"], [215, 3, 1, "", "Logistic"], [215, 3, 1, "", "Lomax"], [215, 3, 1, "", "MatrixGamma"], [215, 3, 1, "", "MatrixNormal"], [215, 3, 1, "", "Maxwell"], [215, 1, 1, "", "Moment"], [215, 3, 1, "", "Moyal"], [215, 3, 1, "", "Multinomial"], [215, 3, 1, "", "MultivariateBeta"], [215, 3, 1, "", "MultivariateEwens"], [215, 3, 1, "", "MultivariateLaplace"], [215, 3, 1, "", "MultivariateNormal"], [215, 3, 1, "", "MultivariateT"], [215, 3, 1, "", "Nakagami"], [215, 3, 1, "", "NegativeBinomial"], [215, 3, 1, "", "NegativeMultinomial"], [215, 3, 1, "", "Normal"], [215, 3, 1, "", "NormalGamma"], [215, 3, 1, "", "P"], [215, 3, 1, "", "Pareto"], [215, 3, 1, "", "Poisson"], [215, 1, 1, "", "PoissonProcess"], [215, 3, 1, "", "PowerFunction"], [215, 1, 1, "", "Probability"], [215, 3, 1, "", "QuadraticU"], [215, 3, 1, "", "Rademacher"], [215, 3, 1, "", "RaisedCosine"], [215, 3, 1, "", "Rayleigh"], [215, 3, 1, "", "Reciprocal"], [215, 3, 1, "", "ShiftedGompertz"], [215, 3, 1, "", "Skellam"], [215, 3, 1, "", "StudentT"], [215, 3, 1, "", "Trapezoidal"], [215, 3, 1, "", "Triangular"], [215, 3, 1, "", "Uniform"], [215, 3, 1, "", "UniformSum"], [215, 1, 1, "", "Variance"], [215, 1, 1, "", "VarianceMatrix"], [215, 3, 1, "", "VonMises"], [215, 3, 1, "", "Wald"], [215, 3, 1, "", "Weibull"], [215, 1, 1, "", "WienerProcess"], [215, 3, 1, "", "WignerSemicircle"], [215, 3, 1, "", "Wishart"], [215, 3, 1, "", "YuleSimon"], [215, 3, 1, "", "Zeta"], [215, 3, 1, "", "cmoment"], [215, 3, 1, "", "correlation"], [215, 3, 1, "", "coskewness"], [215, 3, 1, "", "covariance"], [215, 0, 0, "-", "crv"], [215, 0, 0, "-", "crv_types"], [215, 3, 1, "", "density"], [215, 3, 1, "", "entropy"], [215, 3, 1, "", "factorial_moment"], [215, 0, 0, "-", "frv"], [215, 0, 0, "-", "frv_types"], [215, 3, 1, "", "given"], [215, 3, 1, "", "kurtosis"], [215, 3, 1, "", "marginal_distribution"], [215, 3, 1, "", "median"], [215, 3, 1, "", "moment"], [215, 3, 1, "", "quantile"], [215, 0, 0, "-", "rv"], [215, 3, 1, "", "sample"], [215, 3, 1, "", "sample_iter"], [215, 3, 1, "", "skewness"], [215, 3, 1, "", "std"], [215, 3, 1, "", "variance"], [215, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[215, 2, 1, "", "expectation"], [215, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[215, 2, 1, "", "absorbing_probabilities"], [215, 2, 1, "", "canonical_form"], [215, 2, 1, "", "communication_classes"], [215, 2, 1, "", "decompose"], [215, 2, 1, "", "fixed_row_vector"], [215, 2, 1, "", "fundamental_matrix"], [215, 4, 1, "", "limiting_distribution"], [215, 2, 1, "", "sample"], [215, 2, 1, "", "stationary_distribution"], [215, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[215, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[215, 1, 1, "", "ContinuousDomain"], [215, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[215, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[215, 3, 1, "", "Die"], [215, 3, 1, "", "Normal"]], "sympy.stats.frv": [[215, 1, 1, "", "FiniteDomain"], [215, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[215, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[215, 1, 1, "", "ConditionalDomain"], [215, 1, 1, "", "PSpace"], [215, 1, 1, "", "ProductDomain"], [215, 1, 1, "", "ProductPSpace"], [215, 1, 1, "", "RandomDomain"], [215, 1, 1, "", "RandomSymbol"], [215, 1, 1, "", "SingleDomain"], [215, 1, 1, "", "SinglePSpace"], [215, 3, 1, "", "pspace"], [215, 3, 1, "", "random_symbols"], [215, 3, 1, "", "rs_swap"], [215, 3, 1, "", "sampling_E"], [215, 3, 1, "", "sampling_P"], [215, 3, 1, "", "sampling_density"]], "sympy.tensor": [[216, 0, 0, "-", "array"], [219, 0, 0, "-", "index_methods"], [220, 0, 0, "-", "indexed"], [221, 0, 0, "-", "tensor"], [222, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[216, 1, 1, "", "ImmutableDenseNDimArray"], [216, 1, 1, "", "ImmutableSparseNDimArray"], [216, 1, 1, "", "MutableDenseNDimArray"], [216, 1, 1, "", "MutableSparseNDimArray"], [216, 3, 1, "", "derive_by_array"], [217, 0, 0, "-", "expressions"], [216, 3, 1, "", "permutedims"], [216, 3, 1, "", "tensorcontraction"], [216, 3, 1, "", "tensordiagonal"], [216, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[219, 3, 1, "", "get_contraction_structure"], [219, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[220, 1, 1, "", "Idx"], [220, 1, 1, "", "Indexed"], [220, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[220, 4, 1, "", "label"], [220, 4, 1, "", "lower"], [220, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[220, 4, 1, "", "base"], [220, 4, 1, "", "indices"], [220, 4, 1, "", "ranges"], [220, 4, 1, "", "rank"], [220, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[220, 4, 1, "", "label"], [220, 4, 1, "", "offset"], [220, 4, 1, "", "shape"], [220, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[221, 1, 1, "", "TensAdd"], [221, 1, 1, "", "TensExpr"], [221, 1, 1, "", "TensMul"], [221, 1, 1, "", "TensorHead"], [221, 1, 1, "", "TensorIndex"], [221, 1, 1, "", "TensorIndexType"], [221, 1, 1, "", "TensorSymmetry"], [221, 1, 1, "", "TensorType"], [221, 1, 1, "", "_TensorManager"], [221, 3, 1, "", "canon_bp"], [221, 3, 1, "", "riemann_cyclic"], [221, 3, 1, "", "riemann_cyclic_replace"], [221, 3, 1, "", "tensor_heads"], [221, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[221, 2, 1, "", "canon_bp"], [221, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[221, 2, 1, "", "get_matrix"], [221, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[221, 2, 1, "", "canon_bp"], [221, 2, 1, "", "contract_metric"], [221, 2, 1, "", "get_free_indices"], [221, 2, 1, "", "get_indices"], [221, 2, 1, "", "perm2tensor"], [221, 2, 1, "", "sorted_components"], [221, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[221, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[221, 2, 1, "", "direct_product"], [221, 2, 1, "", "fully_symmetric"], [221, 2, 1, "", "no_symmetry"], [221, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[221, 2, 1, "", "clear"], [221, 2, 1, "", "comm_i2symbol"], [221, 2, 1, "", "comm_symbols2i"], [221, 2, 1, "", "get_comm"], [221, 2, 1, "", "set_comm"], [221, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[222, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[224, 0, 0, "-", "pytest"], [225, 0, 0, "-", "randtest"], [226, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[224, 3, 1, "", "SKIP"], [224, 3, 1, "", "nocache_fail"], [224, 3, 1, "", "raises"], [224, 3, 1, "", "warns"], [224, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[226, 1, 1, "", "PyTestReporter"], [226, 1, 1, "", "Reporter"], [226, 1, 1, "", "SymPyDocTestFinder"], [226, 1, 1, "", "SymPyDocTestRunner"], [226, 1, 1, "", "SymPyOutputChecker"], [226, 1, 1, "", "SymPyTestResults"], [226, 3, 1, "", "convert_to_native_paths"], [226, 3, 1, "", "doctest"], [226, 3, 1, "", "get_sympy_dir"], [226, 3, 1, "", "raise_on_deprecated"], [226, 3, 1, "", "run_all_tests"], [226, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [226, 3, 1, "", "split_list"], [226, 3, 1, "", "sympytestfile"], [226, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[226, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[226, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[226, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[226, 5, 1, "", "attempted"], [226, 5, 1, "", "failed"]], "sympy.utilities": [[227, 0, 0, "-", "autowrap"], [228, 0, 0, "-", "codegen"], [229, 0, 0, "-", "decorator"], [230, 0, 0, "-", "enumerative"], [231, 0, 0, "-", "exceptions"], [233, 0, 0, "-", "iterables"], [234, 0, 0, "-", "lambdify"], [235, 0, 0, "-", "memoization"], [236, 0, 0, "-", "misc"], [237, 0, 0, "-", "pkgdata"], [238, 0, 0, "-", "source"], [239, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[227, 1, 1, "", "CodeWrapper"], [227, 1, 1, "", "CythonCodeWrapper"], [227, 1, 1, "", "DummyWrapper"], [227, 1, 1, "", "F2PyCodeWrapper"], [227, 1, 1, "", "UfuncifyCodeWrapper"], [227, 3, 1, "", "autowrap"], [227, 3, 1, "", "binary_function"], [227, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[227, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[227, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[228, 1, 1, "", "Argument"], [228, 1, 1, "", "CCodeGen"], [228, 1, 1, "", "CodeGen"], [228, 1, 1, "", "DataType"], [228, 1, 1, "", "FCodeGen"], [228, 1, 1, "", "JuliaCodeGen"], [228, 1, 1, "", "OctaveCodeGen"], [228, 1, 1, "", "OutputArgument"], [228, 1, 1, "", "Result"], [228, 1, 1, "", "Routine"], [228, 1, 1, "", "RustCodeGen"], [228, 3, 1, "", "codegen"], [228, 3, 1, "", "get_default_datatype"], [228, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[228, 2, 1, "", "dump_c"], [228, 2, 1, "", "dump_h"], [228, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[228, 2, 1, "", "dump_code"], [228, 2, 1, "", "routine"], [228, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[228, 2, 1, "", "dump_f95"], [228, 2, 1, "", "dump_h"], [228, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[228, 2, 1, "", "dump_jl"], [228, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[228, 2, 1, "", "dump_m"], [228, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[228, 4, 1, "", "result_variables"], [228, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[228, 2, 1, "", "dump_rs"], [228, 2, 1, "", "get_prototype"], [228, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[229, 3, 1, "", "conserve_mpmath_dps"], [229, 3, 1, "", "deprecated"], [229, 3, 1, "", "doctest_depends_on"], [229, 3, 1, "", "memoize_property"], [229, 1, 1, "", "no_attrs_in_subclass"], [229, 3, 1, "", "public"], [229, 3, 1, "", "threaded"], [229, 3, 1, "", "threaded_factory"], [229, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[230, 1, 1, "", "MultisetPartitionTraverser"], [230, 3, 1, "", "factoring_visitor"], [230, 3, 1, "", "list_visitor"], [230, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[230, 2, 1, "", "count_partitions"], [230, 2, 1, "", "enum_all"], [230, 2, 1, "", "enum_large"], [230, 2, 1, "", "enum_range"], [230, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[231, 7, 1, "", "SymPyDeprecationWarning"], [231, 3, 1, "", "ignore_warnings"], [231, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[233, 1, 1, "", "NotIterable"], [233, 3, 1, "", "binary_partitions"], [233, 3, 1, "", "bracelets"], [233, 3, 1, "", "capture"], [233, 3, 1, "", "common_prefix"], [233, 3, 1, "", "common_suffix"], [233, 3, 1, "", "connected_components"], [233, 3, 1, "", "dict_merge"], [233, 3, 1, "", "filter_symbols"], [233, 3, 1, "", "flatten"], [233, 3, 1, "", "generate_bell"], [233, 3, 1, "", "generate_derangements"], [233, 3, 1, "", "generate_involutions"], [233, 3, 1, "", "generate_oriented_forest"], [233, 3, 1, "", "group"], [233, 3, 1, "", "has_dups"], [233, 3, 1, "", "has_variety"], [233, 3, 1, "", "ibin"], [233, 3, 1, "", "iproduct"], [233, 3, 1, "", "is_palindromic"], [233, 3, 1, "", "is_sequence"], [233, 3, 1, "", "iterable"], [233, 3, 1, "", "kbins"], [233, 3, 1, "", "least_rotation"], [233, 3, 1, "", "minlex"], [233, 3, 1, "", "multiset"], [233, 3, 1, "", "multiset_combinations"], [233, 3, 1, "", "multiset_derangements"], [233, 3, 1, "", "multiset_partitions"], [233, 3, 1, "", "multiset_permutations"], [233, 3, 1, "", "necklaces"], [233, 3, 1, "", "numbered_symbols"], [233, 3, 1, "", "ordered_partitions"], [233, 3, 1, "", "partitions"], [233, 3, 1, "", "permute_signs"], [233, 3, 1, "", "postfixes"], [233, 3, 1, "", "prefixes"], [233, 3, 1, "", "random_derangement"], [233, 3, 1, "", "reshape"], [233, 3, 1, "", "rotate_left"], [233, 3, 1, "", "rotate_right"], [233, 3, 1, "", "rotations"], [233, 3, 1, "", "roundrobin"], [233, 3, 1, "", "runs"], [233, 3, 1, "", "sift"], [233, 3, 1, "", "signed_permutations"], [233, 3, 1, "", "strongly_connected_components"], [233, 3, 1, "", "subsets"], [233, 3, 1, "", "take"], [233, 3, 1, "", "topological_sort"], [233, 3, 1, "", "unflatten"], [233, 3, 1, "", "uniq"], [233, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[234, 3, 1, "", "implemented_function"], [234, 3, 1, "", "lambdastr"], [234, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[235, 3, 1, "", "assoc_recurrence_memo"], [235, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[236, 3, 1, "", "as_int"], [236, 3, 1, "", "debug"], [236, 3, 1, "", "debug_decorator"], [236, 3, 1, "", "filldedent"], [236, 3, 1, "", "find_executable"], [236, 3, 1, "", "func_name"], [236, 3, 1, "", "ordinal"], [236, 3, 1, "", "rawlines"], [236, 3, 1, "", "replace"], [236, 3, 1, "", "strlines"], [236, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[237, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[238, 3, 1, "", "get_class"], [238, 3, 1, "", "get_mod_func"], [238, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[239, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[240, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "create_new"], [240, 2, 1, "", "locate_new"], [240, 2, 1, "", "orient_new"], [240, 2, 1, "", "orient_new_axis"], [240, 2, 1, "", "orient_new_body"], [240, 2, 1, "", "orient_new_quaternion"], [240, 2, 1, "", "orient_new_space"], [240, 2, 1, "", "position_wrt"], [240, 2, 1, "", "rotation_matrix"], [240, 2, 1, "", "scalar_map"]], "sympy.vector": [[242, 3, 1, "", "curl"], [242, 3, 1, "", "divergence"], [242, 3, 1, "", "express"], [242, 3, 1, "", "gradient"], [242, 3, 1, "", "is_conservative"], [242, 3, 1, "", "is_solenoidal"], [242, 3, 1, "", "matrix_to_vector"], [242, 3, 1, "", "scalar_potential"], [242, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[240, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[240, 2, 1, "", "cross"], [240, 2, 1, "", "dot"], [240, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[240, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[240, 4, 1, "", "components"], [240, 2, 1, "", "cross"], [240, 2, 1, "", "dot"], [240, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[240, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[240, 2, 1, "", "multiplicity"], [240, 2, 1, "", "rational_parametrization"], [240, 2, 1, "", "regular_point"], [240, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[240, 1, 1, "", "ParametricIntegral"], [242, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[241, 1, 1, "", "AxisOrienter"], [241, 1, 1, "", "BodyOrienter"], [241, 1, 1, "", "Orienter"], [241, 1, 1, "", "QuaternionOrienter"], [241, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[241, 2, 1, "", "__init__"], [241, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[241, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[241, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[241, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[241, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[240, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[240, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[240, 4, 1, "", "components"], [240, 2, 1, "", "cross"], [240, 2, 1, "", "dot"], [240, 2, 1, "", "magnitude"], [240, 2, 1, "", "normalize"], [240, 2, 1, "", "outer"], [240, 2, 1, "", "projection"], [240, 2, 1, "", "separate"], [240, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 2, 4, 5, 6, 9, 13, 14, 16, 20, 23, 33, 57, 74, 93, 128, 176, 185, 240, 242, 243, 246, 259, 261, 264], "list": [1, 2], "activ": 1, "deprec": [1, 12], "silenc": 1, "warn": [1, 231], "version": 1, "1": [1, 14, 76, 95, 113, 125, 137, 211], "11": [1, 95], "new": [1, 244], "mathematica": [1, 195], "code": [1, 11, 12, 13, 15, 33, 35, 104, 179, 195, 238, 250, 252], "parser": [1, 113], "redund": 1, "static": 1, "method": [1, 5, 18, 20, 108, 116, 119, 120, 121, 123, 124, 125, 195, 212, 214, 219, 244, 266], "carmichael": 1, "10": [1, 9, 95], "some": [1, 128, 214], "travers": [1, 51], "function": [1, 2, 14, 18, 33, 41, 50, 51, 57, 58, 59, 69, 70, 73, 74, 76, 81, 87, 91, 93, 95, 104, 126, 148, 151, 172, 173, 176, 181, 183, 185, 186, 191, 194, 195, 205, 207, 208, 211, 212, 216, 242, 246, 269, 270], "have": [1, 194], "been": 1, "move": [1, 205], "core": [1, 51, 84], "trace": 1, "The": [1, 7, 12, 18, 34, 41, 76, 125, 166, 177, 190, 202, 205, 245, 246, 264], "compat": [1, 217], "submodul": [1, 63], "9": [1, 95], "expr_free_symbol": 1, "stat": [1, 215], "sampl": [1, 14], "numsampl": 1, "n": [1, 51, 211, 216, 217], "poli": [1, 184, 185, 186, 193], "solver": [1, 193, 209, 210, 211, 213, 214, 271], "rawmatrix": 1, "non": 1, "expr": [1, 51], "object": [1, 4, 220], "matrix": [1, 29, 83, 84, 87, 88, 125, 211, 215, 266], "get_seg": 1, "attribut": [1, 34, 41], "plot": [1, 11, 98, 141, 181], "mdft": 1, "physic": [1, 101, 104, 114, 123, 124, 125, 126, 127, 128, 129, 168, 170, 176, 177, 178, 179, 250, 256], "matric": [1, 5, 82, 83, 84, 85, 86, 87, 89, 101, 103, 217, 250, 254, 266], "privat": 1, "sparsematrix": [1, 89], "_smat": 1, "densematrix": 1, "_mat": 1, "laplace_transform": 1, "nocond": 1, "fals": 1, "8": [1, 95], "print": [1, 11, 18, 33, 79, 104, 111, 170, 175, 195, 269], "theanocod": 1, "assumpt": [1, 4, 7, 18, 28, 51], "handler": [1, 7], "askhandl": 1, "relat": [1, 2, 7, 51, 59, 81, 176, 179, 203, 246], "7": [1, 95, 211], "call": 1, "stochasticprocess": 1, "distribut": [1, 188, 215], "randomindexedsymbol": 1, "discretemarkovchain": 1, "absorbing_probabilit": 1, "util": [1, 33, 48, 49, 68, 87, 134, 190, 213, 232, 239, 250, 258], "misc": [1, 28], "find_execut": 1, "mutabl": 1, "diffgeom": 1, "unicod": [1, 269], "argument": [1, 2, 214], "pretti": [1, 195, 269], "stringpict": 1, "prettyform": 1, "pretty_symbolog": 1, "xstr": 1, "pass": 1, "lambdifi": [1, 11, 92, 234, 259], "set": [1, 4, 29, 63, 179, 203, 214, 269], "oper": [1, 2, 73, 87, 139, 148, 150, 151, 172, 176, 179, 205, 216, 222, 243, 245, 246, 259, 266], "longer": 1, "accept": 1, "arg": [1, 57, 265], "6": [1, 14, 95, 211], "variou": [1, 194], "test": [1, 11, 13, 48, 81, 194, 223, 225, 226, 266], "randtest": 1, "mix": 1, "polynomi": [1, 59, 73, 183, 185, 186, 187, 188, 190, 191, 192, 194, 213, 270], "express": [1, 2, 33, 63, 70, 73, 81, 84, 93, 106, 173, 185, 194, 217, 242, 244, 259, 265], "binari": 1, "print_cycl": 1, "flag": 1, "combinator": [1, 38], "permut": [1, 42, 43], "us": [1, 5, 11, 15, 33, 51, 54, 75, 76, 92, 95, 121, 125, 126, 179, 181, 192, 214, 244], "integr": [1, 11, 55, 59, 73, 75, 76, 77, 78, 104, 183, 190, 249, 260], "string": [1, 7, 259], "fallback": 1, "sympifi": [1, 51], "creat": [1, 2, 18, 87], "an": [1, 63, 113, 166, 205, 214, 265], "indefinit": 1, "eq": [1, 51], "5": [1, 14, 95, 211], "tensor": [1, 47, 59, 160, 218, 221, 222], "fun_ev": 1, "__call__": 1, "tensortyp": 1, "dummy_fmt": 1, "tensorindextyp": 1, "metric": 1, "get_kronecker_delta": 1, "get_epsilon": 1, "tensorsymmetri": 1, "tensorhead": 1, "unit": [1, 29, 165, 166, 167, 169], "quantiti": [1, 164, 166, 168, 244], "is_emptyset": 1, "productset": [1, 203], "iter": [1, 203, 233], "set_potential_energi": 1, "mechan": [1, 7, 96, 104, 114, 122, 123, 124, 125, 126, 127, 128, 129, 148, 215], "condit": [1, 76, 203], "conditionset": [1, 203], "max_degre": 1, "get_upper_degre": 1, "properti": [1, 7, 182], "multivariate_result": 1, "dixonresult": 1, "rh": 1, "default": 1, "0": 1, "tupl": [1, 2, 51, 191], "first": [1, 12], "lambda": [1, 51], "evalu": [1, 2, 18, 55, 73, 128, 265], "differentiate_finit": 1, "4": [1, 14, 95, 211], "data": 1, "clear_cach": 1, "clear_subproduct": 1, "keyword": [1, 2], "is_diagonaliz": 1, "row": [1, 266], "col": 1, "jordan_block": 1, "3": [1, 14, 78, 95, 113, 162, 211], "sourc": [1, 2, 11, 238], "dimens": [1, 63, 163, 166], "scale_factor": 1, "quanit": 1, "import": [1, 14], "classof": 1, "a2idx": 1, "from": [1, 2, 194, 217], "2": [1, 14, 76, 95, 113, 125, 211], "dot": [1, 173, 269], "product": [1, 54, 149, 160, 216, 245], "column": [1, 266], "vector": [1, 41, 51, 122, 170, 171, 172, 176, 177, 178, 179, 188, 240, 242, 243, 244, 246, 247, 248, 249], "geometri": [1, 53, 63, 182], "line3d": 1, "equat": [1, 22, 123, 124, 125, 164, 183, 208, 211, 213, 214, 271], "need": [1, 166], "k": [1, 186], "gotcha": [2, 7, 113, 262], "pitfal": 2, "introduct": [2, 5, 25, 32, 33, 34, 41, 53, 63, 81, 113, 128, 166, 176, 178, 181, 182, 183, 190, 194, 248, 264], "equal": [2, 51, 262], "sign": [2, 57, 262], "singl": [2, 14], "doubl": [2, 56], "variabl": [2, 181, 215, 244], "assign": 2, "doe": [2, 12, 214], "between": [2, 7, 168, 185], "symbol": [2, 7, 8, 18, 51, 70, 125, 129, 180, 185, 191, 194, 214, 262, 264], "python": [2, 33], "number": [2, 29, 37, 51, 54, 55, 76, 185, 190, 194, 250, 255], "vs": [2, 8, 185], "float": [2, 51, 55], "ration": [2, 29, 51, 185, 186, 191, 194, 197, 203, 211, 270], "immut": [2, 85], "mathemat": [2, 14, 128], "invers": [2, 18, 57, 76], "trig": 2, "sqrt": [2, 57], "special": [2, 6, 33, 59, 191, 203, 270], "dictionari": 2, "get": [2, 11, 13, 19], "help": 2, "within": 2, "explan": [3, 14, 23], "classif": 4, "class": [4, 14, 32, 33, 50, 53, 82, 83, 85, 87, 89, 91, 125, 171, 181, 184, 190, 195, 207, 208, 216, 240, 241], "kind": [4, 51], "func": [4, 265], "finit": [5, 29, 31, 34, 182, 185, 188, 190, 194, 205, 215, 260], "differ": [5, 7, 31, 128, 185, 244, 260], "approxim": [5, 33], "deriv": [5, 51, 179, 216, 246, 260], "A": [5, 115, 118, 119, 120, 121, 125, 264, 271], "direct": [5, 246], "topic": [6, 104, 170, 250, 257], "old": [7, 185], "system": [7, 98, 117, 129, 163, 165, 166, 169, 211, 213, 243, 244, 246, 248], "appli": [7, 76, 205], "input": [7, 214], "predic": [7, 28, 29], "refer": [7, 14, 23, 25, 32, 50, 51, 53, 63, 69, 76, 78, 82, 83, 84, 85, 87, 89, 91, 93, 127, 133, 136, 166, 177, 179, 180, 181, 182, 184, 186, 188, 190, 191, 202, 204, 205, 208, 214, 227, 228, 247, 250], "abov": 7, "definit": [7, 18, 29, 69], "implic": 7, "interpret": 7, "other": [7, 18, 20, 70, 176, 244], "is_": 7, "implement": [7, 76, 176, 195, 205, 227, 228, 243, 246], "limit": [7, 75, 113, 200, 202, 260], "combin": [7, 73], "fuzzi": 8, "boolean": [8, 81], "three": [8, 63], "valu": 8, "bool": 8, "logic": [8, 11, 81, 250, 253], "build": [9, 11], "document": [9, 11, 12, 14, 15, 23], "requir": [9, 12], "depend": [9, 11, 125, 185, 244], "docker": 9, "debian": 9, "ubuntu": 9, "fedora": 9, "mac": 9, "window": [9, 181], "doc": [9, 186], "local": 9, "instal": [9, 20, 93, 268], "logo": 9, "view": 9, "auto": 9, "rebuild": 9, "live": 9, "server": 9, "pdf": 9, "debug": 10, "hard": 11, "option": [11, 188], "recommend": [11, 15], "interact": [11, 79, 181], "pars": [11, 93], "gener": [11, 14, 15, 41, 43, 185, 190, 214, 245, 250, 252], "autowrap": [11, 33, 227], "printer": [11, 33, 195, 269], "onli": [11, 214], "statist": 11, "symengin": 11, "backend": [11, 181], "experiment": [11, 93], "rubi": 11, "sage": 11, "develop": [11, 13, 51], "run": [11, 13, 20, 226], "benchmark": 11, "polici": 12, "what": [12, 125, 184, 185, 214, 264, 267], "try": 12, "avoid": 12, "backward": 12, "incompat": 12, "chang": 12, "place": 12, "when": [12, 76], "public": 12, "api": [12, 23, 72, 76, 78, 100, 122, 177, 214, 227, 228, 247, 250], "Not": 12, "purpos": 12, "technic": 12, "possibl": [12, 266], "how": [12, 21, 23, 76, 179, 214], "long": 12, "should": [12, 92], "last": 12, "checklist": 12, "ad": 12, "releas": 12, "note": [12, 18, 51, 63, 125, 202, 204, 262, 271], "entri": [12, 87], "environ": 13, "setup": 13, "git": [13, 20], "virtual": 13, "docstr": [14, 15, 94, 105, 106, 107, 108, 109, 110, 111, 112, 172, 173, 174, 175, 233, 240, 241, 242], "style": [14, 15], "guid": [14, 15, 21, 23, 122, 177, 247], "guidelin": [14, 15], "format": [14, 15], "section": 14, "sentenc": 14, "summari": 14, "exampl": [14, 18, 24, 51, 63, 75, 78, 91, 95, 101, 114, 125, 129, 133, 164, 166, 179, 194, 195, 202, 205, 215, 216, 217, 220, 245, 264, 270], "paramet": [14, 205, 214], "see": [14, 51, 245], "also": [14, 51], "ar": [14, 179, 185, 214], "best": [14, 15, 18], "practic": [14, 15, 18], "write": [14, 15, 18], "sphinx": 14, "cross": [14, 173], "referenc": 14, "type": [15, 33, 59, 172, 211, 214, 215], "narr": 15, "markdown": 15, "prefer": 15, "math": [15, 33], "latex": [15, 93, 269], "head": 15, "spell": 15, "punctuat": 15, "capit": 15, "tone": 15, "contribut": [16, 17, 192], "make": 17, "custom": [18, 181, 195], "easi": 18, "case": [18, 214], "fulli": 18, "defin": 18, "automat": [18, 194], "eval": 18, "remind": 18, "kei": [18, 128, 265], "point": [18, 55, 66, 104, 170, 174, 178, 243], "numer": [18, 55, 73, 78, 92, 104, 128], "evalf": [18, 51, 92, 259], "rewrit": [18, 33, 196, 270], "simplif": [18, 55, 81, 204, 207, 270], "doit": 18, "expand": [18, 51, 194, 196, 270], "differenti": [18, 53, 73, 104, 213, 214, 271], "as_real_imag": 18, "miscellan": [18, 57, 63, 236], "_eval_": 18, "complet": [18, 113], "versin": 18, "divid": 18, "fuse": 18, "multipli": 18, "add": [18, 51], "fma": 18, "addit": [18, 73], "tip": [18, 259, 260, 262, 265, 266], "start": 19, "anaconda": 20, "mpmath": 20, "question": 20, "solv": [22, 95, 183, 190, 213, 214, 271], "welcom": 23, "s": [23, 51, 108, 116, 119, 120, 121, 123, 124, 125, 146, 157, 194, 204, 213, 214, 244, 249, 267], "tutori": [23, 208, 263], "abc": 24, "caveat": [24, 93], "algebra": [25, 29, 80, 87, 136, 179, 182, 185, 190, 194, 213, 271], "quaternion": 25, "ask": 26, "assum": 27, "queri": 28, "content": [28, 38, 58, 71, 77, 187, 199, 209, 218], "perform": 28, "improv": [28, 113], "common": [29, 82, 104, 170, 194, 195, 196, 207], "tautolog": 29, "commut": [29, 142, 182], "calculu": [29, 31, 179, 260], "infinit": [29, 214], "symmetr": 29, "invert": 29, "orthogon": [29, 59, 191, 246], "unitari": 29, "posit": 29, "upper": 29, "triangular": 29, "lower": 29, "diagon": [29, 216, 266], "full": 29, "rank": 29, "squar": [29, 183, 207], "integ": [29, 51, 57, 185, 203], "element": [29, 125, 185, 190], "real": [29, 185, 203], "complex": [29, 57, 185, 203], "singular": [29, 31, 59, 95], "normal": [29, 88, 184, 194], "theori": [29, 32, 250, 255], "even": 29, "odd": 29, "prime": [29, 190], "composit": [29, 73], "order": [29, 51, 191, 202, 205, 211], "neg": 29, "zero": [29, 51, 98, 188, 194, 266], "nonzero": 29, "nonposit": 29, "nonneg": 29, "irrat": 29, "extend": [29, 205], "hermitian": 29, "imaginari": 29, "antihermitian": 29, "transcendent": 29, "refin": 30, "weight": 31, "categori": 32, "base": [32, 53, 182, 183, 194, 201, 214], "diagram": 32, "draw": 32, "codegen": [33, 228], "tool": [33, 90, 207], "simplifi": [33, 188, 206, 207, 270], "abstract": [33, 96, 99, 101, 122, 131, 148, 177, 186], "syntax": 33, "tree": [33, 185, 195, 265], "ast": [33, 113], "predefin": 33, "node": 33, "c": [33, 195], "cfunction": 33, "specif": 33, "cnode": 33, "cxxnode": 33, "fortran": [33, 195], "fnode": 33, "algorithm": [33, 34, 146, 157, 188, 191, 197, 202, 205], "pyutil": 33, "cutil": 33, "futil": 33, "present": [34, 41], "group": [34, 36, 39, 41, 42, 166], "overview": [34, 41, 76], "facil": 34, "construct": [34, 41, 217], "free": [34, 183], "word": [34, 41], "coset": 34, "enumer": [34, 56], "todd": 34, "coxet": 34, "cosett": 34, "compress": 34, "standard": 34, "subgroup": 34, "index": [34, 41, 217, 220], "low": 34, "reidemeist": 34, "schreier": 34, "bibliographi": [34, 41], "grai": 35, "constructor": [36, 191, 266], "nilpot": 37, "abelian": 37, "cyclic": 37, "name": 39, "partit": [40, 56, 208, 233], "polycycl": 41, "polycyclicgroup": 41, "collector": 41, "comput": [41, 76, 92, 148, 194, 264], "minim": [41, 190], "uncollect": 41, "subword": 41, "collect": [41, 196, 207, 270], "expon": [41, 194], "depth": [41, 63], "lead": 41, "polyhedron": 44, "prufer": 45, "sequenc": [45, 73, 188, 200, 201], "subset": [46, 54], "canonic": 47, "concret": 50, "hypergeometr": [50, 59, 70, 73, 197, 205, 207], "term": [50, 194, 196, 202], "cach": 51, "cacheit": 51, "basic": [51, 55, 87, 172, 183, 185, 191, 203, 243, 250, 251, 259, 266], "atom": 51, "singleton": [51, 201, 203], "unevaluatedexpr": 51, "atomicexpr": 51, "wild": 51, "dummi": 51, "var": 51, "algebraicnumb": 51, "numbersymbol": 51, "realnumb": 51, "igcd": 51, "ilcm": 51, "seterr": 51, "One": 51, "negativeon": 51, "half": 51, "nan": [51, 125], "infin": 51, "negativeinfin": 51, "complexinfin": 51, "exp1": 51, "imaginaryunit": 51, "pi": 51, "eulergamma": 51, "catalan": [51, 56], "goldenratio": 51, "tribonacciconst": 51, "mod_invers": 51, "power": [51, 192, 197, 203, 207, 264, 270], "pow": 51, "integer_nthroot": 51, "integer_log": 51, "mul": 51, "prod": 51, "mod": 51, "rel": 51, "ne": 51, "lt": 51, "le": 51, "gt": 51, "ge": 51, "greaterthan": 51, "lessthan": 51, "unequ": 51, "strictgreaterthan": 51, "strictlessthan": 51, "multidimension": 51, "wildfunct": 51, "diff": 51, "functionclass": 51, "sub": [51, 92], "poleerror": 51, "count_op": 51, "expand_mul": 51, "expand_log": [51, 270], "expand_func": [51, 270], "expand_trig": [51, 270], "expand_complex": 51, "expand_multinomi": 51, "expand_power_exp": [51, 270], "expand_power_bas": [51, 270], "nfloat": 51, "evalfmixin": 51, "precisionexhaust": 51, "contain": 51, "tuplekind": 51, "dict": 51, "exprtool": 51, "gcd_term": 51, "factor_term": 51, "numberkind": 51, "undefinedkind": 51, "booleankind": 51, "sort": 51, "default_sort_kei": 51, "random": [51, 215], "random_complex_numb": 51, "verify_numer": 51, "test_derivative_numer": 51, "_randrang": 51, "_randint": 51, "bottom_up": 51, "postorder_travers": 51, "preorder_travers": 51, "walk": [51, 265], "cryptographi": 52, "discret": [54, 215], "transform": [54, 76, 78, 93, 244], "fast": 54, "fourier": [54, 198], "theoret": 54, "walsh": 54, "hadamard": 54, "m\u00f6biu": 54, "convolut": 54, "cover": 54, "intersect": [54, 63, 203], "accuraci": 55, "error": [55, 59], "handl": [55, 214], "sum": 55, "combinatori": [56, 207], "bell": 56, "bernoulli": [56, 211], "binomi": 56, "euler": 56, "factori": [56, 183], "subfactori": 56, "factorial2": 56, "fallingfactori": 56, "fibonacci": 56, "tribonacci": 56, "harmon": [56, 59, 137, 162], "luca": 56, "genocchi": 56, "multifactori": 56, "risingfactori": 56, "stirl": 56, "nc": 56, "np": 56, "nt": 56, "elementari": [57, 182, 201, 203], "re": 57, "im": 57, "ab": 57, "conjug": 57, "polar_lift": 57, "periodic_argu": 57, "principal_branch": 57, "trigonometr": [57, 59, 204, 207, 270], "sin": 57, "co": 57, "tan": 57, "cot": 57, "sec": 57, "csc": 57, "sinc": 57, "asin": 57, "aco": 57, "atan": 57, "acot": 57, "asec": 57, "acsc": 57, "atan2": 57, "hyperbol": 57, "hyperbolicfunct": 57, "sinh": 57, "cosh": 57, "tanh": 57, "coth": 57, "sech": 57, "csch": 57, "asinh": 57, "acosh": 57, "atanh": 57, "acoth": 57, "asech": 57, "acsch": 57, "ceil": 57, "floor": 57, "roundfunct": 57, "frac": 57, "exponenti": [57, 59, 211, 270], "exp": 57, "lambertw": 57, "log": 57, "exp_polar": 57, "piecewis": 57, "exprcondpair": 57, "identityfunct": 57, "min": 57, "max": 57, "root": [57, 191, 207], "cbrt": 57, "real_root": 57, "diracdelta": 59, "heavisid": 59, "gamma": [59, 101], "beta": 59, "fresnel": 59, "logarithm": [59, 270], "bessel": 59, "airi": 59, "b": 59, "spline": 59, "riemann": 59, "zeta": 59, "ellipt": 59, "mathieu": 59, "jacobi": 59, "gegenbau": 59, "chebyshev": 59, "legendr": 59, "hermit": 59, "laguerr": 59, "spheric": 59, "curv": 60, "ellips": 61, "entiti": [62, 63, 181], "avail": 63, "usag": [63, 113, 129, 185, 245], "median": 63, "pappu": 63, "hexagon": 63, "theorem": [63, 76, 249], "futur": [63, 104, 113, 170], "work": [63, 194], "truth": [63, 81], "beyond": 63, "visual": [63, 128], "line": 64, "plane": [65, 76], "polygon": [67, 78], "about": [69, 214, 244, 271], "holonom": [69, 70, 71, 73, 74, 117], "convert": [70, 73, 185, 211, 259], "represent": [70, 74, 166, 179, 185], "meijer": [70, 73, 76, 205], "g": [70, 73, 76, 205], "intern": [72, 76, 78, 185, 188, 190, 208, 211], "multipl": [73, 179, 190], "seri": [73, 181, 192, 197, 198, 199, 202, 260], "expans": [73, 202, 205, 207, 260], "linear": [73, 87, 104, 109, 125, 126, 166, 194, 208, 211], "holonomicfunct": 74, "differentialoper": 74, "differentialoperatoralgebra": 74, "current": 75, "polar": [76, 133], "branch": 76, "repres": [76, 156, 185, 190], "argand": 76, "tabl": [76, 81, 205], "lookup": 76, "mellin": 76, "converg": 76, "laplac": 76, "thi": [76, 214], "valid": 76, "exist": 76, "formula": [76, 205], "todo": 78, "bug": 78, "over": [78, 194, 203], "polytop": 78, "For": 78, "2d": 78, "polyhedra": 78, "session": 79, "lie": [80, 211], "form": [81, 88, 125, 184, 211, 217], "equival": [81, 128, 208], "manipul": [81, 87, 106, 187, 188, 191, 192, 214, 265], "infer": 81, "matrixcommon": 82, "matrixkind": 82, "dens": [83, 185, 186, 188], "immutablematrix": [83, 85], "block": 84, "matrixdetermin": 87, "matrixreduct": 87, "matrixsubspac": 87, "matrixeigen": 87, "matrixcalculu": 87, "matrixbas": 87, "except": [87, 93, 188, 231], "numpi": 87, "spars": [89, 90, 185, 186, 188], "immutablesparsematrix": 89, "ntheori": 91, "ecm": 91, "qs": 91, "ufuncifi": 92, "aesara": [92, 195], "so": 92, "which": [92, 195], "i": 92, "mathrm": [93, 269], "runtim": 93, "beam": [94, 95, 96], "bend": 95, "problem": [95, 190, 245], "continuum": 96, "control": [97, 98, 99, 100, 181], "pole": 98, "bode": 98, "impuls": 98, "respons": [98, 195], "step": [98, 214], "ramp": 98, "modul": [99, 131, 170, 177, 182, 183, 184, 185, 188, 190, 191, 208, 211, 212, 214, 227], "lti": 100, "high": 101, "energi": [101, 126], "hydrogen": 102, "wavefunct": 102, "potenti": [104, 125, 126, 170, 176, 246], "issu": [104, 113, 125, 170, 266], "advanc": [104, 170, 194, 265, 266], "featur": [104, 170, 261], "choic": 104, "coordin": [104, 116, 125, 181, 243, 244, 246, 248], "speed": [104, 125], "substitut": [104, 170, 259], "acceler": [104, 170, 178, 202], "interfac": [104, 170, 181, 215], "output": [104, 214], "bodi": [105, 126, 249], "msub": 106, "find_dynamicsymbol": 106, "joint": [107, 215], "pinjoint": 107, "prismaticjoint": 107, "kane": [108, 116, 119, 120, 123, 125], "lagrang": [108, 116, 121, 124, 125], "kanemethod": 108, "lagrangesmethod": 108, "mass": [110, 126, 249], "inertia": [110, 126, 170], "particl": [110, 126, 152], "rigidbodi": 110, "inertia_of_point_mass": 110, "linear_momentum": 110, "angular_momentum": 110, "kinetic_energi": 110, "potential_energi": 110, "lagrangian": [110, 126], "mechanics_print": 111, "mprint": 111, "mpprint": 111, "mlatex": 111, "symbolicsystem": [112, 129], "autolev": [113, 128], "dynam": 113, "onlin": 113, "fix": 113, "switch": 113, "bicycl": 115, "nonminim": 116, "pendulum": 116, "multi": 117, "degre": 117, "freedom": 117, "roll": [118, 119, 120, 121], "disc": [118, 119, 120, 121], "constraint": 120, "forc": 120, "classic": [122, 188], "structur": [123, 124, 166, 208], "background": 125, "directli": [125, 244], "new_method": 125, "kwarg": 125, "a_and_b": 125, "true": 125, "slow": 125, "ha": 125, "zoo": 125, "oo": 125, "further": [125, 262], "rigid": 126, "dyadic": [126, 170, 171, 240, 243, 244], "momentum": 126, "angular": [126, 178], "momenta": 126, "kinet": 126, "user": [128, 208, 211, 212], "rough": 128, "link": 128, "gaussian": [130, 185, 186, 194], "optic": [130, 131], "medium": 132, "wave": 135, "pauli": 136, "quantum": [137, 148, 162], "oscil": [137, 162], "d": [137, 162], "anticommut": 138, "cartesian": 139, "state": [139, 148, 151, 159], "clebsch": 140, "gordan": 140, "coeffici": [140, 188], "circuit": 141, "constant": [143, 166], "dagger": 144, "gate": 145, "grover": 146, "hilbert": 147, "space": [147, 166, 205], "analyt": 148, "solut": [148, 214, 245], "inner": 149, "helper": [151, 195], "box": 152, "qappli": 153, "qft": 154, "qubit": 155, "shor": 157, "spin": 158, "second": 161, "quantiz": 161, "dimension": 164, "analysi": 164, "philosophi": 166, "behind": 166, "literatur": [166, 189, 194], "prefix": 167, "convers": 168, "referencefram": [170, 171, 179], "dynamicsymbol": [170, 173], "essenti": [171, 173, 240, 242], "coordinatesym": 171, "field": [172, 176, 185, 188, 190, 194, 246, 248], "curl": [172, 176, 242, 246], "diverg": [172, 176, 242, 246, 249], "gradient": [172, 176, 242, 246], "scalar_potenti": [172, 242], "scalar_potential_differ": [172, 242], "check": 172, "is_conserv": [172, 242], "is_solenoid": [172, 242], "outer": 173, "time_deriv": 173, "kinemat": [174, 178], "kinematic_equ": 174, "init_vprint": 175, "vprint": 175, "vpprint": 175, "vlatex": 175, "scalar": [176, 246, 248], "conserv": [176, 246], "solenoid": [176, 246], "veloc": 178, "altern": 179, "basi": [179, 188, 190], "frame": 179, "wigner": 180, "credit": 180, "copyright": 180, "author": 180, "plotgrid": 181, "pyglet": 181, "mode": 181, "specifi": 181, "interv": [181, 203], "color": 181, "geometr": 181, "ascii": [181, 269], "art": 181, "agca": 182, "ring": [182, 185, 186], "ideal": 182, "homomorph": [182, 190], "syzygi": 182, "extens": [182, 194], "concept": 183, "divis": [183, 208], "domain": [183, 185, 186, 191, 194, 214], "euclidean": 183, "gcd": [183, 188, 194], "lcm": 183, "factor": [183, 188, 194, 211, 270], "groebner": [183, 188], "introduc": [184, 185], "domainmatrix": 184, "ddm": 184, "sdm": 184, "dup": 185, "dmp": 185, "polyr": 185, "polynomialr": 185, "choos": 185, "unifi": 185, "gf": 186, "p": [186, 190], "zz": 186, "qq": 186, "mpq": 186, "zz_i": 186, "qq_i": 186, "rr": 186, "cc": 186, "x": 186, "ex": 186, "quotient": 186, "level": 188, "multivari": [188, 194], "univari": [188, 194, 208], "remaind": 188, "subresult": 188, "configur": 188, "modular": 188, "undocu": 188, "main": 190, "decomposit": [190, 191, 194], "adic": 190, "valuat": 190, "find": [190, 191], "subfield": 190, "As": 190, "arithmet": 190, "extra": 191, "monomi": 191, "encod": 191, "formal": [191, 197], "partial": [191, 194, 213, 214], "fraction": [191, 194, 207, 270], "dispers": 191, "rs_seri": 192, "solve_lin_si": 193, "eqs_to_matrix": 193, "sympy_eqs_to_r": 193, "_solve_lin_si": 193, "_solve_lin_sys_compon": 193, "wester": 194, "articl": 194, "simpl": 194, "result": 194, "support": 194, "back": 194, "cyclotom": 194, "reduc": 194, "gr\u00f6bner": 194, "mistak": 195, "prettyprint": 195, "rcodeprint": 195, "mapl": 195, "javascript": 195, "julia": 195, "octav": 195, "matlab": 195, "rust": 195, "gtk": 195, "lambdaprint": 195, "latexprint": 195, "mathmlprint": 195, "pythoncodeprint": 195, "pythonprint": 195, "srepr": [195, 269], "strprinter": 195, "preview": 195, "codeprint": 195, "preced": 195, "dotprint": 195, "subexpress": [196, 207], "detect": 196, "compound": [201, 203, 215], "recurs": [201, 265], "gruntz": 202, "more": [202, 244, 264], "intuit": 202, "residu": 202, "finiteset": 203, "union": 203, "complement": 203, "symmetricdiffer": 203, "disjointunion": 203, "emptyset": 203, "universalset": 203, "natur": 203, "naturals0": 203, "imageset": 203, "rang": 203, "complexregion": 203, "powerset": 203, "setkind": 203, "hongguang": 204, "fu": 204, "rule": [204, 245], "notat": 205, "increment": 205, "decrement": 205, "indic": 205, "reduct": 205, "around": 205, "loos": 205, "end": 205, "confluenc": 205, "separatevar": 207, "nthroot": 207, "kroneckersimp": 207, "besselsimp": 207, "hypersimp": 207, "hypersimilar": 207, "nsimplifi": 207, "posifi": 207, "logcombin": [207, 270], "radsimp": 207, "rad_ration": 207, "collect_sqrt": 207, "collect_const": 207, "ratsimp": 207, "ratsimpmodprim": 207, "trigsimp": [207, 270], "powsimp": [207, 270], "powdenest": [207, 270], "combsimp": [207, 270], "denest": 207, "sqrtdenest": 207, "elimin": 207, "cse": 207, "opt_cs": 207, "tree_cs": 207, "hyperexpand": [207, 270], "epath": 207, "diophantin": [208, 213, 214], "classify_diop": 208, "diop_solv": 208, "diop_linear": 208, "base_solution_linear": 208, "diop_quadrat": 208, "diop_dn": 208, "cornacchia": 208, "diop_bf_dn": 208, "transformation_to_dn": 208, "transformation_to_norm": 208, "find_dn": 208, "diop_ternary_quadrat": 208, "square_factor": 208, "descent": 208, "diop_general_pythagorean": 208, "diop_general_sum_of_squar": 208, "diop_general_sum_of_even_pow": 208, "power_represent": 208, "sum_of_three_squar": 208, "sum_of_four_squar": 208, "sum_of_pow": 208, "sum_of_squar": 208, "merge_solut": 208, "pqa": 208, "parametrize_ternary_quadrat": 208, "diop_ternary_quadratic_norm": 208, "ldescent": 208, "gaussian_reduc": 208, "holzer": 208, "prime_as_sum_of_two_squar": 208, "sqf_normal": 208, "reconstruct": 208, "diophantinesolutionset": 208, "diophantineequationtyp": 208, "binaryquadrat": 208, "inhomogeneousternaryquadrat": 208, "homogeneousternaryquadraticnorm": 208, "homogeneousternaryquadrat": 208, "inhomogeneousgeneralquadrat": 208, "homogeneousgeneralquadrat": 208, "generalsumofsquar": 208, "generalpythagorean": 208, "cubicthu": 208, "generalsumofevenpow": 208, "inequ": [210, 213, 214], "od": [211, 213, 214], "dsolv": 211, "dsolve_system": 211, "classify_od": 211, "checkodesol": 211, "homogeneous_ord": 211, "infinitesim": 211, "checkinfsol": 211, "constantsimp": 211, "hint": [211, 212], "allhint": 211, "odesimp": 211, "constant_renumb": 211, "sol_simpl": 211, "1st_exact": 211, "1st_homogeneous_coeff_best": 211, "1st_homogeneous_coeff_subs_dep_div_indep": 211, "1st_homogeneous_coeff_subs_indep_div_dep": 211, "1st_linear": 211, "1st_rational_riccati": 211, "2nd_linear_airi": 211, "2nd_linear_bessel": 211, "liouvil": 211, "riccati_special_minus2": 211, "nth_linear_constant_coeff_homogen": 211, "nth_linear_constant_coeff_undetermined_coeffici": 211, "nth_linear_constant_coeff_variation_of_paramet": 211, "nth_linear_euler_eq_homogen": 211, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 211, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 211, "nth_algebra": 211, "nth_order_reduc": 211, "separ": 211, "almost_linear": 211, "linear_coeffici": 211, "separable_reduc": 211, "lie_group": 211, "2nd_hypergeometr": 211, "1st_power_seri": 211, "2nd_power_series_ordinari": 211, "2nd_power_series_regular": 211, "heurist": 211, "abaco1_simpl": 211, "abaco1_product": 211, "bivari": 211, "chi": 211, "abaco2_similar": 211, "function_sum": 211, "abaco2_unique_unknown": 211, "abaco2_unique_gener": 211, "riccati": 211, "riccati_norm": 211, "riccati_inverse_norm": 211, "riccati_reduc": 211, "construct_c": 211, "construct_d": 211, "rational_laurent_seri": 211, "compute_m_ybar": 211, "solve_aux_eq": 211, "remove_redundant_sol": 211, "get_gen_sol_from_part_sol": 211, "solve_riccati": 211, "canon": 211, "linodesolv": 211, "inform": [211, 212], "jordan": 211, "nonlinear": 211, "pde": [212, 213, 214], "pde_separ": 212, "pde_separate_add": 212, "pde_separate_mul": 212, "pdsolv": 212, "classify_pd": 212, "checkpdesol": 212, "pde_1st_linear_constant_coeff_homogen": 212, "pde_1st_linear_constant_coeff": 212, "pde_1st_linear_variable_coeff": 212, "ordinari": [213, 214], "deutil": 213, "recurr": 213, "de": [213, 214], "solveset": 214, "wrong": 214, "why": [214, 264], "do": 214, "we": 214, "emploi": 214, "return": 214, "ensur": 214, "ani": 214, "search": 214, "deal": 214, "where": 214, "known": 214, "plan": 214, "linear_eq_to_matrix": 214, "linsolv": 214, "nonlinsolv": 214, "transolv": 214, "continu": [215, 270], "stochast": 215, "process": 215, "dim": [216, 217], "arrai": [216, 217], "contract": 216, "explicit": 217, "pytest": 224, "randomis": 225, "detail": [227, 228, 243], "routin": 228, "decor": 229, "enum": 230, "variat": 233, "memoiz": 235, "pkgdata": 237, "inspect": 238, "time": 239, "coordsys3d": [240, 244], "del": [240, 245, 246], "parametricregion": 240, "implicitregion": 240, "parametricintegr": 240, "orient": [241, 244], "axisorient": 241, "bodyorient": 241, "spaceorient": 241, "quaternionorient": 241, "matrix_to_vector": 242, "vector_integr": 242, "locat": 244, "orient_new": 244, "AND": 244, "quadrilater": 245, "third": 245, "curvilinear": 246, "applic": 249, "calcul": 249, "perimet": 249, "surfac": 249, "area": 249, "volum": 249, "flux": 249, "verifi": 249, "stoke": 249, "quick": [259, 260, 262, 265, 266], "two": 262, "final": 262, "read": 262, "interest": 264, "understand": 265, "through": 265, "invari": 265, "prevent": 265, "shape": 266, "access": 266, "delet": 266, "insert": 266, "determin": 266, "rref": 266, "nullspac": 266, "columnspac": 266, "eigenvalu": 266, "eigenvector": 266, "next": 267, "preliminari": 268, "exercis": 268, "up": 269, "str": 269, "mathml": 269, "cancel": 270, "apart": 270, "gammasimp": 270}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})