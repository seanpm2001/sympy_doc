Search.setIndex({"docnames": ["citing", "contributing/build-docs", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/dev-setup", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/make-a-contribution", "explanation/active-deprecations", "explanation/glossary", "explanation/gotchas", "explanation/index", "explanation/solve_output", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/custom-functions", "guides/index", "guides/solving/index", "guides/solving/solve-equation-algebraically", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/four_bar_linkage_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/joints", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers"], "filenames": ["citing.md", "contributing/build-docs.rst", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/dev-setup.rst", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.rst", "contributing/make-a-contribution.rst", "explanation/active-deprecations.md", "explanation/glossary.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/solve_output.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/custom-functions.md", "guides/index.rst", "guides/solving/index.md", "guides/solving/solve-equation-algebraically.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/four_bar_linkage_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/joints.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst"], "titles": ["Citing SymPy", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Docstring Style Guide", "Contributing", "Making a Contribution", "List of active deprecations", "Glossary", "Gotchas and Pitfalls", "Explanations", "Solve Output by Type", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Writing Custom Functions", "How-to Guides", "Solve Equations", "Solve an equation algebraically", "Welcome to SymPy\u2019s documentation!", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joints Framework (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "A four bar linkage", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Joints Framework in Physics/Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 16, 19, 20, 23, 25, 26, 29, 30, 33, 34, 35, 36, 43, 44, 45, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 66, 76, 78, 80, 82, 83, 84, 86, 89, 93, 95, 96, 97, 101, 103, 104, 106, 108, 110, 111, 129, 130, 133, 143, 147, 160, 169, 171, 175, 181, 184, 186, 188, 190, 191, 193, 195, 196, 197, 199, 200, 207, 208, 210, 213, 216, 217, 218, 219, 220, 221, 224, 225, 229, 231, 232, 235, 236, 238, 239, 245, 246, 248, 249, 251, 253, 254, 265, 266, 268, 269, 271, 272, 275, 276, 277], "public": [0, 6, 35, 53, 54, 75, 190, 191, 193, 194, 198, 213, 216, 220, 234, 245], "us": [0, 1, 2, 4, 5, 6, 8, 11, 12, 14, 15, 17, 18, 19, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 133, 134, 135, 138, 139, 141, 143, 145, 146, 147, 150, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 245, 247, 248, 250, 251, 253, 254, 256, 257, 262, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "meurer": 0, "A": [0, 3, 4, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 95, 96, 97, 99, 101, 103, 107, 108, 109, 110, 111, 112, 113, 116, 117, 120, 121, 126, 128, 131, 132, 133, 134, 135, 138, 140, 143, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 245, 246, 248, 249, 250, 251, 253, 254, 261, 267, 269, 271, 272, 276], "smith": [0, 10, 90, 189], "cp": [0, 45, 94, 188], "paprocki": 0, "m": [0, 1, 10, 12, 16, 18, 20, 27, 31, 35, 36, 41, 42, 44, 45, 49, 52, 53, 54, 55, 56, 58, 61, 63, 65, 69, 70, 78, 80, 82, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 103, 105, 106, 108, 110, 111, 112, 113, 115, 116, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 142, 149, 163, 164, 167, 169, 171, 181, 185, 187, 188, 189, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 210, 212, 213, 216, 218, 219, 220, 221, 222, 225, 226, 232, 233, 235, 238, 240, 245, 247, 249, 253, 254, 266, 272, 275, 276, 277], "\u010dert\u00edk": 0, "o": [0, 1, 6, 11, 12, 16, 18, 26, 34, 35, 44, 45, 51, 53, 54, 59, 61, 63, 64, 66, 67, 69, 75, 78, 93, 97, 108, 111, 113, 115, 116, 128, 129, 130, 131, 133, 134, 156, 166, 177, 179, 181, 183, 193, 194, 196, 197, 200, 202, 207, 210, 216, 220, 225, 231, 238, 241, 242, 247, 250, 266], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 219], "ivanov": 0, "": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 80, 81, 82, 83, 84, 86, 87, 89, 92, 93, 94, 95, 96, 97, 101, 103, 105, 107, 108, 110, 113, 116, 118, 122, 126, 131, 133, 137, 138, 139, 145, 146, 148, 150, 152, 153, 156, 160, 161, 163, 164, 166, 169, 171, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 231, 232, 233, 234, 235, 236, 238, 239, 241, 245, 246, 250, 251, 252, 253, 256, 264, 265, 266, 268, 269, 270, 271, 272, 276, 277], "moor": [0, 86, 89], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 4, 6, 7, 10, 11, 12, 19, 20, 27, 30, 31, 33, 35, 36, 37, 44, 45, 46, 47, 49, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 78, 80, 82, 83, 84, 85, 86, 89, 93, 94, 95, 99, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 120, 121, 128, 129, 130, 131, 133, 134, 138, 140, 146, 150, 162, 164, 166, 168, 169, 171, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 203, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 226, 229, 231, 234, 238, 239, 245, 247, 249, 253, 265, 266, 270, 271, 272, 275, 276, 277], "vig": 0, "granger": [0, 152], "BE": 0, "muller": 0, "rp": [0, 69, 138], "bonazzi": 0, "f": [0, 1, 6, 10, 11, 12, 16, 20, 23, 33, 34, 35, 36, 43, 44, 45, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 71, 76, 77, 78, 80, 82, 84, 86, 89, 93, 94, 95, 97, 101, 110, 111, 115, 121, 126, 128, 129, 133, 135, 139, 140, 151, 152, 155, 164, 166, 169, 176, 180, 181, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 225, 226, 231, 232, 233, 234, 235, 238, 239, 241, 250, 251, 254, 265, 266, 271, 275, 276, 277], "gupta": [0, 219], "h": [0, 12, 16, 33, 34, 35, 36, 37, 44, 49, 52, 53, 54, 58, 61, 75, 78, 80, 84, 85, 89, 90, 95, 103, 113, 131, 135, 138, 150, 152, 155, 160, 164, 171, 185, 186, 187, 188, 189, 193, 194, 195, 196, 199, 200, 208, 212, 216, 218, 219, 220, 221, 226, 233, 254, 266, 275], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 152], "mj": 0, "terrel": 0, "ar": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 141, 143, 145, 147, 150, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 235, 236, 237, 238, 239, 241, 245, 246, 247, 248, 249, 250, 251, 253, 255, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 146, 147, 149, 150, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 256, 265, 266, 268, 269, 271, 272, 274, 275, 276, 277], "kulal": 0, "cimrman": 0, "r": [0, 1, 6, 7, 10, 12, 16, 18, 20, 27, 34, 35, 36, 37, 44, 45, 53, 54, 55, 57, 58, 59, 66, 67, 69, 71, 75, 76, 78, 80, 89, 93, 95, 97, 99, 103, 105, 108, 111, 112, 113, 115, 116, 118, 120, 123, 124, 125, 130, 131, 132, 133, 134, 135, 138, 162, 163, 166, 167, 169, 176, 177, 179, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 207, 208, 210, 212, 213, 216, 218, 219, 220, 226, 231, 233, 235, 245, 247, 249, 250, 251, 254, 276], "scopatz": 0, "2017": [0, 185], "symbol": [0, 3, 6, 7, 10, 11, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 43, 45, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 83, 84, 86, 89, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 131, 133, 135, 138, 139, 140, 141, 143, 145, 146, 148, 150, 152, 154, 155, 158, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 232, 238, 239, 245, 246, 247, 249, 250, 251, 254, 256, 261, 265, 266, 269, 271, 272, 275, 276, 277], "comput": [0, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 25, 27, 33, 35, 36, 37, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 72, 75, 76, 77, 79, 80, 82, 84, 86, 89, 90, 92, 93, 95, 97, 101, 103, 107, 110, 111, 112, 115, 116, 118, 119, 123, 126, 133, 150, 151, 152, 160, 165, 166, 168, 170, 171, 175, 177, 181, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 202, 203, 205, 207, 208, 209, 210, 212, 213, 216, 218, 219, 220, 222, 232, 235, 238, 239, 245, 246, 247, 248, 249, 250, 251, 253, 256, 261, 265, 266, 268, 269, 272, 276], "python": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 15, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 33, 45, 53, 54, 57, 59, 65, 81, 83, 84, 86, 89, 93, 94, 95, 96, 107, 116, 133, 176, 186, 187, 188, 190, 191, 197, 199, 200, 208, 212, 216, 219, 221, 231, 232, 233, 234, 235, 238, 239, 241, 245, 257, 268, 269, 270, 271, 272, 274, 275, 276], "peerj": 0, "scienc": [0, 45, 78, 89, 132, 133, 187, 194, 210, 266], "3": [0, 4, 5, 7, 12, 14, 16, 18, 19, 20, 22, 23, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 106, 109, 113, 115, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130, 133, 134, 135, 137, 139, 143, 145, 146, 147, 151, 155, 160, 161, 163, 165, 166, 169, 172, 173, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 225, 226, 227, 231, 232, 234, 235, 236, 238, 239, 241, 243, 245, 246, 247, 248, 249, 251, 253, 254, 261, 265, 266, 268, 270, 271, 272, 275, 276, 277], "e103": 0, "http": [0, 1, 3, 4, 5, 6, 7, 10, 18, 20, 25, 27, 29, 30, 31, 33, 34, 35, 37, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 69, 70, 71, 75, 78, 80, 81, 82, 83, 84, 86, 89, 93, 96, 101, 103, 105, 106, 135, 137, 138, 139, 141, 142, 143, 147, 148, 149, 152, 154, 155, 164, 166, 176, 178, 180, 182, 185, 194, 196, 199, 200, 203, 205, 207, 208, 209, 212, 213, 216, 219, 220, 232, 233, 234, 236, 238, 239, 241, 245, 246, 250, 252, 254, 272, 275], "doi": [0, 6, 33, 45, 89, 194, 209, 212, 220], "org": [0, 3, 6, 7, 12, 18, 20, 27, 29, 30, 31, 33, 34, 35, 41, 42, 44, 45, 52, 53, 54, 55, 56, 58, 59, 61, 63, 65, 69, 70, 71, 80, 81, 82, 83, 84, 86, 89, 93, 101, 103, 105, 106, 135, 137, 138, 139, 141, 142, 143, 147, 148, 149, 152, 154, 155, 164, 166, 176, 178, 180, 182, 194, 196, 200, 203, 207, 208, 209, 213, 216, 219, 220, 232, 233, 234, 236, 238, 245, 246, 250, 252, 254, 272, 275], "10": [0, 3, 6, 12, 20, 25, 27, 33, 35, 42, 44, 45, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 66, 67, 69, 70, 78, 80, 81, 83, 84, 86, 89, 90, 93, 94, 95, 96, 98, 99, 101, 103, 104, 109, 113, 116, 118, 127, 133, 135, 139, 150, 160, 161, 172, 176, 177, 178, 179, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 203, 206, 207, 208, 209, 212, 213, 216, 219, 220, 221, 230, 231, 236, 238, 239, 241, 245, 247, 265, 272, 276], "7717": 0, "c": [0, 1, 3, 11, 12, 16, 18, 20, 26, 27, 33, 34, 37, 38, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 76, 78, 80, 82, 83, 84, 86, 89, 93, 94, 95, 96, 97, 99, 103, 105, 107, 109, 110, 111, 116, 121, 123, 124, 125, 129, 130, 131, 133, 135, 139, 145, 146, 147, 150, 152, 155, 160, 163, 165, 166, 171, 176, 179, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 225, 226, 232, 233, 235, 238, 241, 242, 245, 246, 247, 248, 249, 250, 251, 254, 257, 263, 266, 268, 275, 276, 277], "103": [0, 44], "bibtex": 0, "entri": [0, 10, 31, 36, 43, 45, 51, 54, 65, 78, 82, 84, 85, 86, 88, 92, 111, 116, 118, 131, 138, 189, 193, 195, 196, 210, 220, 239], "latex": [0, 1, 3, 6, 11, 20, 25, 61, 81, 175, 176, 180, 184, 186, 191, 200, 263, 270, 271], "user": [0, 1, 3, 4, 5, 6, 7, 10, 11, 15, 17, 18, 20, 34, 35, 36, 44, 45, 52, 53, 54, 55, 61, 65, 78, 82, 86, 89, 95, 96, 97, 101, 103, 107, 116, 126, 129, 131, 134, 154, 155, 164, 170, 171, 175, 176, 179, 183, 187, 190, 193, 195, 197, 198, 199, 200, 201, 209, 212, 214, 218, 219, 220, 229, 232, 233, 235, 236, 239, 245, 248, 249, 254, 265, 268, 269, 271, 272, 273], "articl": [0, 53, 54, 86, 89, 192, 194, 195, 200, 245, 270], "titl": [0, 6, 7, 186], "author": [0, 6, 93, 152, 195, 261], "aaron": 0, "christoph": [0, 245], "p": [0, 1, 10, 11, 12, 16, 18, 19, 20, 27, 29, 30, 31, 35, 36, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 70, 75, 76, 78, 80, 84, 86, 89, 93, 95, 96, 97, 99, 103, 104, 108, 110, 111, 112, 113, 115, 116, 120, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 145, 164, 166, 171, 177, 179, 181, 183, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 200, 202, 203, 207, 208, 210, 212, 213, 216, 218, 219, 220, 221, 225, 226, 238, 245, 247, 248, 249, 250, 251, 253, 272, 276], "mateusz": 0, "v": [0, 1, 5, 14, 23, 27, 35, 43, 49, 52, 53, 54, 55, 56, 57, 67, 78, 82, 84, 89, 93, 97, 108, 109, 110, 113, 118, 130, 131, 133, 134, 138, 139, 151, 166, 171, 176, 178, 179, 181, 183, 184, 186, 192, 193, 194, 195, 196, 200, 210, 212, 213, 216, 218, 220, 231, 238, 245, 247, 248, 249, 250, 251, 253], "ert": 0, "k": [0, 7, 12, 14, 18, 20, 27, 33, 34, 35, 36, 37, 39, 43, 44, 47, 48, 51, 52, 53, 54, 56, 57, 58, 59, 61, 66, 71, 78, 80, 83, 84, 86, 89, 93, 110, 111, 121, 128, 130, 131, 133, 140, 154, 155, 158, 162, 164, 166, 175, 181, 185, 187, 189, 190, 192, 193, 194, 195, 196, 197, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 216, 218, 220, 221, 222, 224, 225, 226, 227, 231, 235, 238, 245, 246, 247, 248, 249, 250, 251, 253, 254, 275, 276], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 5, 10, 11, 12, 14, 18, 19, 20, 27, 34, 35, 36, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 76, 78, 80, 82, 83, 84, 85, 86, 89, 93, 95, 96, 97, 99, 101, 103, 108, 109, 110, 111, 112, 113, 116, 120, 121, 130, 131, 133, 135, 138, 143, 145, 147, 149, 154, 155, 158, 163, 164, 165, 166, 176, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 231, 234, 235, 238, 241, 245, 246, 247, 248, 249, 250, 266, 268, 272, 276, 277], "matthew": 0, "amit": [0, 219], "sergiu": 0, "jason": [0, 200], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 152], "e": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 18, 19, 20, 26, 27, 31, 33, 34, 35, 36, 42, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 70, 75, 76, 78, 80, 82, 83, 84, 89, 93, 95, 96, 97, 99, 103, 104, 108, 111, 113, 115, 116, 129, 130, 133, 134, 135, 138, 145, 146, 150, 155, 156, 158, 161, 163, 165, 166, 171, 172, 176, 180, 181, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 245, 248, 251, 253, 254, 265, 266, 270, 271, 276], "richard": [0, 93], "francesco": 0, "harsh": [0, 219], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 7, 10, 12, 27, 31, 33, 35, 36, 39, 43, 44, 45, 49, 51, 52, 54, 55, 57, 58, 61, 75, 78, 80, 82, 84, 86, 89, 93, 101, 104, 110, 131, 132, 133, 138, 145, 146, 163, 166, 171, 175, 181, 185, 187, 189, 191, 193, 194, 195, 196, 197, 199, 200, 202, 208, 210, 212, 213, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 232, 238, 245, 246, 247, 248, 249, 250, 251, 253, 254], "andi": [0, 132], "rou": 0, "ka": 0, "n": [0, 5, 6, 7, 11, 12, 16, 18, 20, 23, 26, 31, 33, 35, 36, 37, 39, 41, 42, 43, 44, 45, 47, 49, 51, 52, 54, 55, 57, 58, 59, 61, 63, 66, 67, 68, 69, 70, 75, 76, 78, 80, 82, 83, 84, 86, 89, 90, 93, 95, 96, 97, 99, 103, 105, 106, 108, 110, 111, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 137, 139, 140, 142, 146, 151, 152, 155, 160, 162, 163, 164, 166, 167, 169, 171, 173, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 218, 219, 220, 223, 225, 226, 229, 232, 238, 240, 241, 245, 246, 247, 248, 249, 253, 266, 272, 275, 276, 277], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 220], "anthoni": 0, "year": [0, 4, 6, 10], "month": 0, "jan": [0, 54], "keyword": [0, 4, 6, 11, 14, 20, 34, 35, 36, 44, 45, 53, 54, 57, 58, 66, 68, 69, 70, 84, 89, 93, 96, 101, 103, 111, 128, 129, 160, 166, 180, 186, 188, 190, 191, 193, 195, 196, 199, 200, 201, 207, 212, 213, 218, 225, 231, 232, 234, 236, 239, 241, 249, 272], "algebra": [0, 7, 11, 12, 14, 18, 22, 30, 36, 44, 53, 54, 57, 59, 71, 74, 75, 76, 78, 80, 83, 84, 88, 90, 93, 94, 95, 115, 126, 133, 134, 182, 185, 188, 189, 191, 192, 193, 194, 196, 197, 200, 202, 210, 213, 214, 216, 219, 255, 256, 259, 261, 262, 267, 268, 270, 272], "system": [0, 1, 2, 3, 5, 7, 10, 11, 12, 14, 15, 16, 19, 20, 22, 28, 30, 44, 53, 54, 55, 59, 78, 81, 82, 83, 84, 89, 94, 95, 96, 99, 100, 102, 103, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 131, 133, 144, 145, 160, 163, 164, 166, 169, 173, 176, 179, 180, 181, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 198, 199, 200, 208, 209, 214, 215, 219, 220, 231, 232, 245, 246, 247, 250, 252, 254, 261, 268, 270, 272, 276, 277], "abstract": [0, 10, 33, 34, 42, 53, 55, 59, 61, 66, 71, 86, 110, 116, 150, 152, 161, 164, 165, 166, 187, 192, 195, 219, 220, 222, 226, 233, 253, 257], "an": [0, 1, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 107, 108, 110, 111, 113, 115, 118, 120, 126, 128, 130, 131, 133, 134, 137, 138, 139, 143, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 159, 160, 161, 163, 164, 166, 167, 168, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 245, 246, 248, 249, 251, 252, 253, 254, 262, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277], "open": [0, 1, 3, 4, 6, 7, 9, 10, 23, 25, 33, 53, 55, 59, 80, 83, 103, 116, 119, 133, 200, 208, 215, 219, 220, 242, 270, 272], "sourc": [0, 1, 5, 6, 7, 11, 20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 99, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 176, 177, 178, 179, 180, 181, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 251, 263, 270], "written": [0, 3, 6, 7, 11, 18, 20, 31, 35, 41, 44, 45, 49, 53, 58, 61, 65, 71, 76, 78, 82, 83, 92, 93, 120, 126, 133, 166, 181, 182, 183, 184, 187, 188, 196, 200, 203, 207, 210, 213, 216, 233, 251, 253, 269, 270, 271, 276], "pure": [0, 3, 11, 23, 27, 54, 59, 80, 83, 86, 103, 130, 171, 190, 191, 193, 196, 200, 220, 238], "It": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 16, 18, 19, 20, 23, 25, 27, 28, 29, 30, 33, 34, 35, 41, 44, 45, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 69, 70, 76, 78, 80, 82, 83, 89, 93, 94, 95, 96, 97, 99, 101, 103, 105, 107, 108, 109, 110, 111, 116, 118, 124, 126, 127, 128, 129, 131, 133, 135, 139, 140, 150, 155, 156, 161, 162, 163, 164, 165, 166, 168, 171, 174, 176, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 200, 203, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 239, 245, 247, 248, 249, 251, 253, 254, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276], "built": [0, 1, 3, 6, 7, 11, 12, 15, 28, 30, 36, 53, 59, 80, 116, 133, 188, 191, 200, 201, 205, 216, 219, 220, 226, 235, 238, 239, 270, 271, 275], "focu": [0, 10, 18, 63, 218, 270], "extens": [0, 3, 6, 7, 18, 20, 44, 53, 59, 65, 69, 80, 89, 113, 133, 188, 190, 191, 192, 193, 194, 195, 196, 200, 210, 212, 216, 218, 219, 232, 233, 242, 269, 276], "eas": [0, 116, 184, 186, 200, 203], "through": [0, 4, 6, 11, 12, 18, 20, 23, 25, 33, 35, 44, 45, 47, 52, 53, 54, 57, 58, 61, 63, 64, 65, 66, 67, 69, 78, 82, 83, 89, 93, 96, 97, 101, 108, 111, 116, 118, 126, 131, 137, 138, 176, 186, 187, 193, 195, 200, 206, 210, 212, 216, 218, 219, 220, 221, 232, 238, 245, 246, 251, 254, 267, 268, 269, 274], "both": [0, 3, 4, 6, 7, 10, 11, 12, 15, 18, 19, 20, 23, 26, 27, 33, 34, 35, 45, 48, 49, 51, 52, 53, 54, 58, 59, 61, 68, 77, 78, 80, 83, 84, 89, 93, 95, 96, 97, 103, 108, 110, 111, 118, 120, 121, 127, 130, 138, 139, 150, 156, 163, 166, 171, 176, 179, 183, 184, 186, 187, 188, 190, 191, 193, 195, 196, 198, 199, 200, 202, 207, 208, 209, 210, 212, 213, 216, 218, 219, 221, 225, 231, 233, 238, 239, 245, 246, 266, 269, 270, 271, 276, 277], "interact": [0, 11, 14, 23, 26, 53, 67, 80, 87, 89, 133, 163, 180, 184, 190, 191, 212, 220, 236, 243, 255, 262, 263, 268, 270, 271, 275, 276], "programmat": [0, 11, 14, 15, 219, 249], "applic": [0, 7, 10, 23, 36, 37, 43, 44, 45, 46, 53, 54, 59, 80, 84, 89, 93, 96, 99, 111, 115, 116, 126, 130, 132, 133, 150, 151, 176, 179, 183, 188, 193, 194, 195, 196, 200, 202, 207, 213, 216, 219, 233, 238, 245, 251, 252, 270], "These": [0, 3, 6, 7, 10, 11, 12, 13, 14, 16, 18, 19, 20, 24, 26, 34, 35, 44, 52, 53, 54, 55, 61, 78, 80, 83, 89, 95, 97, 103, 111, 112, 118, 120, 124, 127, 130, 133, 156, 161, 162, 176, 177, 181, 183, 184, 187, 188, 189, 190, 191, 193, 200, 210, 213, 216, 217, 219, 220, 222, 227, 231, 232, 233, 238, 251, 266, 269, 272, 275, 276], "characterist": [0, 55, 71, 89, 183, 189, 191, 193, 194, 216, 218, 272], "have": [0, 1, 4, 5, 6, 7, 11, 12, 15, 16, 18, 19, 20, 25, 27, 29, 30, 31, 33, 34, 35, 36, 37, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 68, 69, 71, 76, 77, 78, 80, 82, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 97, 101, 103, 104, 106, 107, 110, 111, 113, 116, 117, 118, 124, 126, 127, 130, 133, 150, 152, 155, 159, 161, 163, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 202, 203, 205, 207, 208, 209, 210, 212, 213, 216, 218, 219, 220, 221, 224, 226, 227, 229, 230, 231, 233, 234, 235, 238, 239, 241, 245, 246, 248, 249, 250, 251, 254, 265, 266, 268, 269, 270, 271, 272, 275, 276, 277], "led": 0, "becom": [0, 4, 6, 7, 10, 11, 12, 16, 18, 44, 49, 52, 53, 54, 57, 76, 81, 89, 95, 180, 183, 187, 188, 190, 197, 200, 203, 209, 216, 219, 220, 226, 241, 247, 249, 276], "popular": [0, 3, 54, 94, 133, 270], "librari": [0, 3, 4, 6, 10, 11, 18, 20, 24, 25, 35, 53, 54, 58, 78, 80, 81, 89, 94, 107, 116, 133, 186, 190, 191, 220, 231, 232, 233, 238, 239, 265, 268, 269, 270], "scientif": [0, 11, 25, 53, 133], "ecosystem": 0, "thi": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 143, 145, 146, 147, 149, 150, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277], "paper": [0, 6, 93, 118, 184, 195, 196, 209, 210, 213, 216, 220], "present": [0, 3, 7, 10, 11, 12, 16, 33, 34, 37, 40, 44, 45, 47, 51, 53, 56, 80, 89, 93, 96, 99, 101, 103, 111, 118, 166, 168, 176, 178, 180, 181, 186, 187, 193, 194, 195, 199, 200, 213, 219, 233, 239, 242, 247, 248, 249, 253, 277], "architectur": [0, 133, 190, 231], "descript": [0, 4, 6, 7, 10, 22, 24, 34, 36, 43, 61, 80, 93, 138, 156, 163, 174, 183, 184, 185, 200, 224, 231, 233, 235, 236, 255, 273], "its": [0, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 27, 29, 30, 31, 34, 35, 36, 37, 41, 43, 44, 45, 52, 53, 54, 55, 58, 59, 61, 63, 65, 69, 71, 78, 80, 81, 83, 84, 86, 89, 93, 95, 96, 97, 99, 103, 107, 108, 111, 113, 116, 118, 119, 120, 126, 127, 130, 131, 133, 134, 139, 145, 151, 152, 154, 155, 160, 161, 164, 166, 171, 173, 176, 177, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 212, 215, 216, 218, 219, 220, 224, 225, 226, 231, 234, 235, 238, 239, 242, 245, 247, 248, 249, 251, 254, 270, 271, 272, 275, 276], "featur": [0, 3, 4, 7, 10, 12, 13, 20, 24, 25, 53, 55, 57, 84, 95, 116, 126, 133, 182, 200, 216, 220, 229, 233, 236, 252, 264, 269, 270, 274, 276], "discuss": [0, 4, 6, 7, 10, 12, 13, 14, 16, 18, 19, 20, 24, 36, 44, 54, 61, 93, 107, 111, 116, 126, 130, 131, 175, 182, 183, 184, 190, 226, 235, 255, 265, 267, 268, 270, 271, 273, 275, 276], "select": [0, 1, 13, 14, 24, 35, 37, 44, 45, 52, 53, 54, 62, 67, 81, 83, 84, 93, 95, 109, 131, 171, 180, 190, 191, 193, 194, 196, 200, 209, 212, 218], "submodul": [0, 3, 4, 6, 11, 35, 107, 187, 191, 193, 195], "The": [0, 1, 3, 5, 6, 7, 8, 11, 12, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 252, 253, 254, 261, 265, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277], "supplementari": 0, "materi": [0, 96, 137, 274], "provid": [0, 1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 24, 27, 33, 34, 35, 36, 42, 43, 44, 45, 51, 52, 53, 55, 57, 61, 62, 64, 69, 72, 75, 76, 80, 81, 83, 84, 86, 89, 90, 92, 93, 94, 95, 97, 99, 101, 107, 108, 111, 113, 115, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 133, 134, 139, 140, 160, 168, 169, 170, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 203, 205, 208, 209, 210, 212, 216, 217, 218, 219, 220, 221, 225, 226, 231, 232, 233, 235, 236, 238, 239, 241, 245, 247, 248, 249, 251, 252, 254, 266, 270, 271, 272, 276], "addit": [0, 3, 4, 7, 10, 11, 12, 14, 16, 25, 35, 43, 44, 45, 52, 53, 59, 61, 65, 71, 73, 77, 78, 80, 81, 83, 86, 89, 95, 100, 101, 103, 107, 108, 111, 130, 131, 134, 152, 164, 165, 168, 180, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 200, 206, 209, 210, 212, 213, 216, 217, 218, 219, 220, 231, 232, 233, 235, 236, 238, 239, 241, 248, 268, 270, 271, 272, 275, 276], "exampl": [0, 2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 16, 18, 19, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 98, 99, 101, 103, 105, 106, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 201, 202, 203, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 251, 252, 253, 254, 256, 260, 261, 262, 265, 266, 267, 268, 269, 271, 272, 274, 275, 277], "further": [0, 3, 5, 18, 20, 30, 34, 54, 59, 61, 65, 78, 80, 85, 86, 89, 95, 96, 100, 101, 108, 110, 111, 126, 131, 138, 183, 185, 186, 187, 193, 195, 196, 209, 210, 212, 216, 220, 226, 269, 270], "outlin": [0, 3, 4, 18, 20, 51, 80, 187, 216], "detail": [0, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 24, 34, 44, 53, 55, 58, 60, 61, 78, 79, 80, 81, 84, 89, 93, 101, 110, 111, 116, 131, 133, 138, 156, 160, 176, 178, 185, 186, 187, 193, 195, 202, 207, 212, 213, 214, 216, 217, 220, 225, 226, 231, 234, 236, 237, 239, 249, 250, 251, 252, 255, 266, 268, 272, 273, 275], "volum": [0, 6, 35, 52, 61, 78, 185, 194, 210, 213, 216, 235, 245, 252], "page": [0, 1, 3, 4, 6, 7, 10, 11, 12, 18, 19, 22, 23, 24, 35, 36, 52, 58, 78, 93, 94, 111, 133, 171, 186, 189, 190, 191, 194, 200, 210, 213, 236, 253, 276], "journal": [0, 6, 52, 58, 93, 104, 194, 212, 235], "issn": 0, "2376": 0, "5992": 0, "url": [0, 54, 236], "bsd": [0, 1, 3, 270], "licens": [0, 1, 3, 270], "so": [0, 3, 4, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 41, 42, 44, 45, 47, 49, 51, 53, 54, 57, 59, 61, 63, 65, 66, 67, 69, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 89, 90, 93, 95, 96, 97, 103, 107, 111, 116, 118, 120, 126, 128, 130, 133, 134, 139, 150, 152, 160, 162, 163, 164, 166, 168, 170, 171, 175, 176, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 224, 225, 229, 231, 232, 235, 236, 238, 239, 241, 250, 254, 256, 265, 266, 268, 270, 271, 272, 275, 276, 277], "you": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 15, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 33, 35, 36, 44, 45, 52, 53, 54, 55, 57, 59, 60, 61, 65, 67, 69, 71, 72, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 93, 94, 95, 103, 105, 106, 107, 111, 112, 113, 116, 117, 127, 128, 130, 131, 133, 155, 160, 161, 164, 166, 175, 176, 178, 181, 183, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 200, 201, 203, 207, 208, 212, 213, 216, 217, 218, 219, 220, 224, 225, 226, 229, 231, 232, 233, 234, 236, 238, 239, 242, 248, 249, 250, 251, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277], "free": [0, 10, 11, 25, 33, 34, 35, 40, 43, 44, 49, 53, 65, 80, 84, 86, 89, 93, 96, 97, 101, 104, 126, 135, 155, 173, 176, 182, 186, 187, 191, 192, 193, 195, 196, 200, 202, 208, 210, 212, 213, 216, 218, 219, 226, 238, 270], "howev": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 28, 30, 35, 44, 45, 49, 52, 53, 54, 55, 58, 59, 61, 63, 78, 80, 83, 84, 89, 93, 94, 95, 96, 99, 116, 130, 134, 166, 184, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 207, 208, 209, 210, 212, 216, 217, 218, 219, 231, 232, 239, 248, 249, 253, 265, 268, 270, 272, 276, 277], "like": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 18, 19, 20, 24, 25, 35, 36, 38, 44, 45, 52, 53, 54, 57, 58, 59, 61, 63, 73, 76, 80, 81, 83, 84, 86, 87, 88, 89, 93, 94, 95, 99, 103, 107, 113, 116, 118, 127, 130, 131, 133, 134, 148, 150, 160, 161, 164, 165, 166, 171, 175, 176, 179, 181, 183, 186, 187, 188, 190, 191, 192, 193, 195, 196, 198, 199, 200, 203, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 226, 227, 229, 231, 232, 233, 234, 238, 239, 241, 242, 248, 249, 251, 253, 265, 266, 268, 269, 270, 271, 272, 276], "academ": [0, 34, 37, 194], "commerci": [0, 270], "creat": [0, 3, 4, 5, 6, 7, 9, 11, 18, 19, 23, 29, 34, 35, 36, 42, 44, 45, 53, 54, 55, 57, 59, 60, 61, 63, 65, 66, 68, 69, 74, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 95, 96, 99, 103, 108, 110, 111, 113, 116, 119, 120, 121, 123, 125, 127, 129, 130, 131, 133, 134, 143, 145, 147, 151, 154, 155, 156, 160, 161, 163, 164, 166, 169, 172, 175, 176, 178, 179, 183, 184, 186, 187, 189, 190, 191, 193, 195, 196, 197, 200, 207, 212, 216, 219, 220, 221, 225, 226, 231, 232, 233, 235, 236, 238, 239, 245, 249, 251, 266, 268, 271, 272, 275, 276, 277], "fork": [0, 5, 7, 10, 118], "deriv": [0, 6, 10, 11, 17, 20, 23, 33, 34, 35, 37, 43, 44, 55, 59, 60, 61, 63, 70, 75, 76, 78, 80, 81, 83, 86, 89, 99, 103, 107, 109, 110, 111, 115, 118, 120, 121, 123, 126, 128, 129, 130, 131, 155, 164, 168, 171, 172, 175, 176, 178, 179, 180, 181, 183, 186, 187, 188, 191, 193, 195, 196, 197, 200, 202, 210, 212, 216, 217, 218, 222, 223, 227, 233, 245, 247, 248, 267, 270, 277], "long": [0, 6, 7, 8, 35, 45, 52, 53, 54, 56, 66, 78, 80, 81, 83, 89, 93, 96, 97, 118, 180, 196, 197, 200, 209, 210, 218, 220, 232, 241, 247, 268, 271], "copi": [0, 1, 5, 10, 12, 18, 36, 45, 46, 53, 69, 89, 93, 94, 189, 191, 193, 195, 199, 200, 207, 218, 231, 238, 241, 275], "statement": [0, 6, 18, 19, 20, 25, 34, 35, 53, 61, 78, 83, 86, 116, 145, 200, 220, 229, 233, 238], "redistribut": [0, 196], "see": [0, 1, 3, 4, 7, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 24, 28, 29, 30, 31, 33, 34, 35, 39, 41, 44, 45, 46, 49, 52, 54, 55, 58, 59, 60, 61, 65, 69, 70, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 89, 90, 93, 94, 95, 101, 107, 110, 111, 122, 124, 128, 130, 131, 135, 138, 141, 142, 151, 155, 156, 160, 161, 162, 163, 165, 166, 169, 171, 176, 180, 183, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 202, 203, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 225, 226, 229, 231, 232, 233, 234, 235, 236, 239, 240, 245, 246, 254, 265, 266, 268, 270, 271, 272, 274, 275, 276, 277], "file": [0, 1, 3, 4, 5, 6, 7, 11, 12, 35, 89, 116, 133, 155, 200, 207, 210, 212, 229, 231, 232, 233, 239, 242], "That": [0, 4, 7, 11, 12, 18, 19, 20, 53, 54, 59, 83, 89, 126, 163, 168, 174, 183, 184, 187, 188, 190, 191, 193, 195, 206, 207, 216, 220, 232, 233, 239, 265, 268, 271, 276], "said": [0, 4, 11, 27, 31, 35, 39, 93, 171, 181, 183, 184, 188, 216, 219, 220, 245, 251], "although": [0, 3, 4, 6, 7, 11, 12, 15, 16, 18, 20, 45, 53, 54, 59, 65, 77, 78, 81, 83, 84, 86, 89, 93, 96, 107, 118, 133, 187, 190, 191, 193, 195, 196, 208, 209, 212, 213, 218, 232, 238, 239, 268, 271, 276], "requir": [0, 3, 6, 7, 8, 10, 11, 12, 20, 25, 35, 44, 53, 54, 56, 57, 61, 63, 64, 66, 67, 70, 72, 83, 89, 92, 93, 94, 95, 96, 101, 107, 108, 111, 113, 115, 116, 118, 120, 131, 140, 163, 175, 176, 178, 186, 187, 190, 191, 193, 195, 197, 200, 203, 209, 210, 213, 216, 218, 219, 220, 224, 231, 232, 233, 234, 236, 238, 239, 247, 248, 249, 272, 274], "conveni": [0, 1, 10, 11, 12, 23, 26, 33, 35, 45, 53, 54, 58, 61, 80, 83, 95, 116, 133, 175, 178, 183, 184, 186, 187, 188, 189, 190, 191, 195, 198, 207, 208, 212, 218, 224, 225, 232, 234, 235, 239, 251, 266, 268], "pleas": [0, 4, 6, 7, 9, 10, 23, 25, 31, 33, 53, 61, 65, 78, 93, 107, 111, 116, 126, 130, 131, 138, 139, 160, 175, 184, 185, 186, 187, 193, 194, 208, 212, 213, 218, 219, 239, 245, 249, 273, 277], "when": [0, 1, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 23, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 44, 45, 46, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 77, 79, 80, 81, 83, 84, 85, 89, 93, 94, 95, 99, 101, 103, 104, 107, 110, 116, 118, 124, 126, 128, 129, 130, 131, 134, 139, 140, 145, 150, 151, 155, 158, 160, 168, 169, 170, 175, 180, 183, 184, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 224, 225, 229, 231, 232, 233, 234, 236, 238, 239, 241, 242, 244, 248, 266, 268, 270, 271, 276, 277], "your": [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 20, 22, 25, 29, 53, 54, 80, 81, 89, 94, 95, 103, 107, 128, 130, 184, 186, 200, 207, 212, 216, 219, 220, 238, 239, 266, 270, 272, 273, 275, 276], "work": [0, 1, 3, 4, 6, 10, 11, 12, 15, 16, 18, 19, 20, 25, 28, 30, 33, 34, 35, 44, 45, 46, 53, 54, 57, 61, 78, 80, 82, 83, 84, 86, 89, 90, 93, 95, 107, 110, 116, 118, 127, 131, 133, 146, 150, 155, 159, 160, 161, 162, 165, 168, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 200, 207, 208, 209, 210, 212, 213, 216, 218, 219, 220, 226, 231, 232, 233, 235, 238, 239, 240, 241, 248, 249, 262, 268, 269, 270, 271, 272, 275, 276], "also": [0, 1, 3, 4, 7, 8, 10, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 42, 44, 45, 52, 54, 55, 57, 58, 59, 60, 61, 65, 69, 71, 73, 75, 76, 78, 80, 82, 83, 84, 87, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 107, 108, 109, 110, 111, 115, 116, 118, 119, 120, 121, 124, 127, 128, 129, 130, 131, 133, 134, 135, 139, 149, 150, 152, 156, 160, 165, 166, 169, 171, 175, 176, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 231, 232, 233, 234, 235, 236, 239, 241, 245, 247, 248, 249, 250, 251, 253, 254, 265, 266, 268, 270, 271, 272, 275, 276, 277], "consid": [0, 4, 7, 10, 11, 12, 15, 18, 19, 20, 23, 31, 34, 35, 42, 45, 48, 52, 53, 54, 56, 57, 58, 59, 61, 63, 65, 69, 77, 78, 80, 81, 82, 83, 84, 86, 89, 93, 103, 107, 108, 113, 117, 128, 134, 156, 163, 166, 171, 177, 180, 181, 183, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 203, 207, 212, 213, 216, 217, 218, 219, 220, 231, 233, 238, 247, 249, 251, 253, 254, 268, 272, 276], "contribut": [0, 3, 4, 5, 6, 7, 25, 69, 93, 111, 121, 124, 190, 192, 193, 195, 216, 254, 273], "all": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 78, 80, 82, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 108, 109, 110, 111, 113, 115, 116, 118, 119, 121, 126, 128, 130, 133, 134, 140, 145, 146, 150, 160, 162, 163, 164, 166, 168, 169, 170, 171, 173, 174, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 226, 227, 229, 231, 232, 233, 234, 236, 238, 239, 241, 245, 246, 248, 250, 251, 252, 253, 255, 265, 266, 268, 270, 271, 272, 275, 276, 277], "chang": [0, 1, 6, 7, 8, 10, 11, 12, 18, 25, 34, 35, 36, 44, 45, 49, 52, 53, 54, 57, 59, 61, 67, 68, 78, 80, 83, 89, 93, 95, 96, 99, 103, 113, 116, 118, 123, 140, 151, 161, 171, 172, 175, 181, 183, 184, 185, 186, 187, 188, 189, 193, 196, 197, 200, 207, 208, 209, 210, 212, 216, 218, 219, 220, 221, 231, 238, 239, 249, 251, 265, 268, 271, 275], "back": [0, 20, 23, 34, 35, 49, 52, 53, 54, 59, 61, 68, 69, 75, 77, 78, 80, 81, 84, 93, 94, 103, 160, 180, 183, 190, 192, 195, 196, 198, 200, 210, 216, 218, 221, 222], "we": [0, 3, 4, 5, 6, 7, 10, 12, 16, 18, 19, 20, 22, 23, 28, 29, 30, 33, 34, 35, 36, 37, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 66, 71, 76, 77, 78, 80, 81, 82, 83, 84, 89, 90, 92, 93, 103, 106, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 138, 141, 149, 152, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 171, 175, 176, 178, 179, 181, 183, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 220, 224, 226, 231, 232, 233, 235, 236, 238, 239, 245, 248, 249, 250, 251, 253, 254, 265, 266, 268, 270, 271, 272, 275, 276, 277], "can": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 134, 138, 139, 140, 145, 147, 150, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 235, 236, 238, 239, 241, 247, 248, 249, 250, 251, 253, 254, 265, 266, 268, 270, 271, 272, 274, 275, 276, 277], "incorpor": [0, 3, 16, 188, 212], "u": [0, 12, 16, 18, 19, 20, 23, 27, 33, 34, 35, 44, 49, 52, 53, 54, 56, 67, 70, 75, 78, 80, 86, 89, 93, 108, 110, 111, 112, 115, 116, 118, 120, 123, 126, 128, 130, 131, 133, 134, 138, 139, 150, 155, 161, 171, 179, 181, 183, 186, 187, 188, 189, 193, 195, 196, 199, 200, 207, 210, 212, 213, 216, 217, 218, 219, 220, 225, 239, 251, 268, 270, 271, 272], "benefit": [0, 3, 20, 35, 107, 130, 180], "end": [0, 3, 6, 10, 12, 16, 18, 19, 20, 22, 33, 34, 35, 43, 44, 49, 51, 52, 53, 54, 58, 59, 61, 63, 65, 69, 78, 81, 83, 84, 86, 89, 93, 95, 96, 97, 99, 115, 118, 120, 123, 128, 129, 130, 131, 171, 176, 180, 181, 184, 185, 189, 193, 200, 203, 206, 208, 209, 211, 213, 216, 217, 218, 219, 220, 221, 231, 233, 234, 236, 238, 241, 251, 266, 270, 272, 276], "develop": [0, 4, 6, 7, 8, 9, 11, 16, 18, 20, 24, 25, 33, 36, 51, 95, 133, 170, 186, 187, 190, 193, 218, 219, 270, 273], "team": [0, 4], "member": [0, 6, 10, 18, 34, 42, 44, 54, 76, 99, 187, 208, 225], "list": [0, 3, 4, 6, 7, 13, 18, 23, 25, 27, 30, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 78, 80, 81, 82, 83, 84, 86, 89, 92, 93, 94, 95, 96, 103, 108, 110, 111, 115, 118, 120, 123, 127, 128, 129, 133, 134, 139, 150, 152, 155, 156, 160, 161, 163, 164, 166, 168, 176, 179, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 265, 269, 270, 272, 275, 276, 277], "github": [0, 1, 3, 4, 5, 7, 10, 23, 25, 33, 53, 69, 80, 89, 170, 208, 219, 272], "found": [0, 1, 3, 4, 6, 7, 18, 19, 23, 33, 36, 44, 45, 47, 49, 51, 53, 54, 55, 63, 64, 69, 78, 80, 89, 93, 103, 109, 110, 111, 112, 130, 133, 170, 183, 187, 188, 190, 195, 196, 197, 200, 202, 203, 206, 207, 210, 213, 216, 217, 218, 219, 220, 224, 238, 239, 241, 242, 275], "zotero": 0, "start": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 24, 25, 34, 35, 37, 42, 43, 44, 45, 49, 52, 53, 54, 55, 61, 83, 84, 86, 89, 92, 93, 94, 96, 97, 99, 116, 118, 128, 129, 161, 162, 165, 169, 183, 184, 186, 190, 193, 195, 196, 200, 203, 206, 208, 209, 210, 213, 216, 218, 219, 220, 221, 224, 231, 232, 238, 240, 241, 250, 264, 265, 268, 270], "either": [1, 3, 6, 7, 10, 11, 12, 18, 19, 20, 23, 27, 31, 33, 34, 37, 45, 52, 53, 54, 57, 58, 59, 61, 68, 70, 76, 78, 80, 81, 83, 84, 89, 93, 103, 108, 111, 112, 115, 116, 129, 131, 133, 150, 156, 163, 166, 168, 180, 184, 186, 188, 189, 190, 191, 193, 195, 196, 200, 202, 207, 208, 209, 210, 213, 216, 217, 218, 219, 220, 221, 224, 225, 232, 238, 239, 245, 253, 268, 271, 272], "machin": [1, 3, 5, 6, 201, 212, 216, 265], "imag": [1, 3, 44, 122, 127, 133, 135, 139, 187, 191, 193, 200, 208, 219], "contain": [1, 3, 4, 6, 7, 10, 11, 12, 14, 19, 20, 23, 26, 28, 29, 33, 34, 35, 36, 44, 45, 49, 51, 52, 55, 56, 57, 59, 61, 62, 64, 66, 67, 68, 69, 70, 79, 80, 82, 83, 84, 86, 89, 92, 93, 94, 95, 96, 98, 101, 102, 104, 108, 111, 112, 113, 115, 118, 120, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 153, 156, 158, 161, 163, 166, 175, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 200, 201, 202, 207, 208, 210, 212, 213, 214, 216, 217, 218, 219, 220, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 247, 255, 256, 266, 268, 272, 276], "them": [1, 3, 4, 5, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 23, 26, 29, 31, 34, 35, 42, 44, 45, 52, 53, 54, 55, 57, 58, 61, 64, 69, 71, 73, 75, 76, 78, 82, 83, 86, 89, 92, 93, 94, 107, 111, 113, 116, 118, 120, 121, 126, 128, 130, 131, 133, 139, 143, 159, 160, 166, 168, 171, 174, 176, 181, 183, 184, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 207, 208, 209, 210, 212, 213, 216, 218, 219, 221, 222, 231, 233, 235, 238, 247, 265, 266, 268, 270, 271, 276], "If": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 42, 44, 45, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 78, 80, 81, 82, 83, 84, 86, 89, 90, 92, 93, 94, 95, 96, 101, 103, 104, 106, 107, 108, 109, 111, 112, 113, 115, 116, 117, 128, 129, 130, 131, 133, 134, 139, 143, 147, 150, 156, 160, 161, 162, 163, 164, 166, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 245, 247, 249, 251, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "instead": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 23, 26, 28, 30, 34, 35, 44, 46, 49, 53, 55, 56, 57, 58, 61, 80, 81, 83, 84, 86, 87, 89, 93, 101, 104, 106, 115, 116, 118, 120, 130, 133, 164, 168, 170, 176, 180, 181, 183, 184, 187, 190, 191, 193, 195, 196, 198, 200, 202, 210, 212, 216, 218, 219, 220, 224, 225, 226, 229, 234, 235, 236, 238, 239, 243, 251, 254, 265, 266, 268, 270, 271, 272, 276, 277], "follow": [1, 3, 4, 6, 7, 10, 12, 14, 16, 18, 19, 20, 23, 25, 28, 30, 33, 34, 35, 36, 42, 43, 44, 45, 46, 49, 52, 53, 54, 57, 58, 59, 61, 65, 67, 69, 76, 77, 78, 80, 83, 84, 86, 89, 93, 94, 96, 97, 99, 110, 111, 116, 118, 126, 127, 128, 129, 130, 131, 133, 135, 139, 158, 161, 163, 166, 169, 171, 176, 181, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 198, 199, 200, 201, 202, 207, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 231, 234, 235, 238, 239, 242, 248, 249, 251, 265, 266, 268, 269, 271, 272, 276, 277], "specif": [1, 5, 6, 7, 10, 11, 18, 20, 21, 24, 44, 45, 53, 54, 55, 61, 65, 80, 82, 84, 89, 108, 110, 111, 115, 116, 126, 133, 135, 171, 184, 186, 187, 191, 193, 195, 196, 199, 200, 201, 206, 212, 213, 216, 217, 218, 220, 226, 231, 232, 233, 238, 257, 272, 276], "instruct": [1, 3, 5, 6, 7, 9, 10, 12, 16, 21, 24, 35, 200, 218, 232, 233], "below": [1, 3, 4, 6, 7, 10, 12, 18, 20, 23, 25, 33, 34, 35, 43, 44, 45, 53, 54, 58, 60, 61, 62, 63, 69, 70, 76, 78, 80, 84, 89, 92, 93, 95, 96, 97, 103, 108, 111, 115, 116, 118, 120, 121, 122, 127, 128, 129, 130, 133, 160, 166, 171, 176, 184, 185, 186, 187, 189, 196, 200, 201, 203, 209, 212, 213, 216, 217, 218, 219, 220, 231, 233, 238, 239, 241, 249, 251, 254, 255, 272, 276], "mai": [1, 3, 4, 5, 6, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 31, 33, 34, 35, 36, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 61, 63, 65, 66, 68, 69, 70, 78, 80, 81, 83, 84, 85, 89, 90, 92, 93, 95, 99, 109, 111, 112, 116, 120, 126, 130, 152, 161, 166, 167, 168, 173, 176, 179, 181, 183, 186, 187, 188, 189, 193, 195, 200, 201, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 251, 253, 265, 266, 268, 271, 272, 276, 277], "choos": [1, 6, 23, 44, 49, 53, 55, 58, 89, 93, 97, 101, 120, 131, 166, 170, 176, 183, 184, 192, 196, 197, 200, 207, 209, 210, 216, 217, 220, 231, 236, 276], "cd": [1, 5, 6, 219, 238], "dockerfil": 1, "htmldoc": 1, "sympy_htmldoc": 1, "option": [1, 4, 5, 6, 7, 8, 12, 20, 28, 30, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 66, 67, 69, 70, 72, 80, 81, 84, 86, 89, 90, 93, 94, 95, 96, 101, 103, 107, 108, 109, 110, 111, 112, 115, 133, 139, 150, 155, 156, 158, 161, 163, 168, 175, 176, 180, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 225, 226, 231, 232, 233, 236, 238, 239, 245, 269, 275, 276], "now": [1, 2, 3, 5, 7, 10, 12, 16, 18, 19, 20, 25, 34, 35, 45, 53, 54, 61, 64, 69, 70, 75, 77, 78, 82, 89, 93, 103, 108, 115, 116, 119, 121, 124, 126, 133, 134, 169, 171, 176, 180, 183, 184, 187, 188, 190, 193, 196, 197, 201, 208, 209, 210, 212, 213, 216, 218, 219, 220, 221, 226, 231, 232, 239, 249, 250, 268, 270, 271, 276, 277], "skip": [1, 3, 4, 6, 12, 34, 37, 53, 84, 89, 93, 176, 195, 199, 200, 202, 216, 218, 229, 231, 266, 274, 275], "down": [1, 4, 6, 18, 86, 105, 118, 120, 183, 184, 186, 191, 202, 208, 210, 212, 216, 235, 272, 276], "section": [1, 4, 7, 8, 11, 18, 20, 21, 27, 34, 36, 44, 45, 52, 53, 54, 56, 60, 61, 63, 69, 78, 83, 84, 89, 96, 97, 110, 116, 131, 169, 171, 175, 181, 184, 187, 190, 193, 195, 200, 203, 207, 210, 216, 226, 235, 236, 238, 248, 249, 250, 251, 255, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277], "For": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 18, 19, 20, 21, 23, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 67, 68, 71, 74, 76, 77, 78, 79, 82, 83, 84, 89, 93, 94, 95, 96, 97, 103, 105, 109, 110, 111, 112, 116, 120, 126, 127, 128, 129, 130, 131, 133, 135, 149, 150, 155, 159, 161, 163, 164, 165, 166, 168, 171, 172, 176, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 216, 218, 219, 220, 221, 224, 225, 226, 227, 231, 232, 233, 235, 236, 238, 239, 242, 243, 245, 246, 249, 251, 253, 254, 265, 266, 268, 271, 272, 276, 277], "apt": [1, 5], "get": [1, 2, 4, 6, 7, 8, 10, 15, 16, 18, 19, 20, 23, 25, 26, 29, 30, 33, 34, 35, 37, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 57, 58, 59, 61, 66, 76, 78, 80, 82, 86, 89, 93, 95, 96, 101, 103, 106, 116, 119, 120, 128, 129, 130, 133, 138, 139, 146, 150, 155, 160, 161, 162, 163, 168, 171, 184, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 226, 227, 232, 238, 239, 240, 242, 245, 248, 265, 268, 270, 271, 272, 275, 276, 277], "python3": [1, 3, 35, 95, 200, 231], "sphinx": [1, 4, 7, 8, 59, 216, 231, 236], "texliv": [1, 3, 200], "recommend": [1, 5, 6, 10, 11, 12, 13, 18, 20, 22, 23, 24, 25, 34, 35, 53, 54, 57, 84, 107, 128, 133, 160, 176, 183, 188, 189, 190, 191, 197, 213, 216, 219, 225, 229, 236, 248, 249, 274, 277], "dvipng": 1, "librsvg2": 1, "bin": [1, 2, 3, 5, 6, 81, 200, 231, 238], "imagemagick": 1, "docbook2x": 1, "graphviz": [1, 7, 271, 275], "pip": [1, 3, 25, 95], "txt": [1, 200], "mpmath": [1, 3, 5, 11, 20, 35, 58, 61, 89, 94, 133, 190, 191, 200, 208, 218, 234, 239], "error": [1, 3, 4, 6, 7, 10, 14, 18, 19, 26, 33, 35, 42, 45, 52, 53, 54, 59, 60, 63, 68, 78, 80, 89, 92, 93, 95, 116, 184, 185, 188, 190, 191, 193, 197, 200, 202, 208, 216, 217, 218, 219, 220, 231, 232, 233, 236, 238, 241, 245, 256, 265], "packag": [1, 3, 22, 25, 81, 94, 95, 100, 126, 133, 180, 200, 231, 242, 250, 251, 270], "matplotlib": [1, 3, 6, 7, 10, 25, 76, 81, 101, 133, 146, 180, 186, 275], "mayb": [1, 19], "other": [1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 19, 21, 23, 27, 31, 34, 35, 36, 44, 45, 46, 49, 50, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 80, 83, 84, 86, 89, 93, 94, 95, 96, 97, 103, 107, 108, 110, 116, 117, 120, 121, 126, 127, 130, 131, 133, 135, 138, 139, 140, 150, 161, 163, 164, 165, 166, 169, 171, 172, 173, 175, 176, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 226, 227, 229, 232, 233, 234, 235, 238, 239, 245, 247, 248, 251, 253, 255, 265, 266, 268, 270, 271, 272, 276], "rpm": 1, "base": [1, 3, 4, 5, 6, 7, 9, 11, 12, 18, 20, 25, 29, 30, 33, 35, 36, 42, 43, 44, 49, 50, 51, 53, 54, 56, 58, 59, 60, 61, 64, 66, 69, 76, 80, 81, 82, 83, 85, 86, 89, 93, 94, 100, 108, 110, 116, 118, 133, 134, 135, 144, 146, 150, 151, 155, 161, 162, 164, 166, 168, 171, 172, 174, 176, 178, 180, 181, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 200, 202, 204, 207, 208, 209, 210, 212, 213, 214, 216, 218, 220, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 239, 240, 245, 247, 248, 251, 262, 271, 276], "distribut": [1, 3, 25, 44, 51, 53, 61, 69, 80, 96, 97, 165, 188, 191, 192, 196, 200, 226], "prerequisit": 1, "dnf": [1, 83], "scheme": [1, 4, 18, 45, 52, 57, 185, 186, 193, 196, 225], "medium": [1, 20, 135, 136, 139, 140, 150, 193, 261], "tool": [1, 7, 11, 20, 44, 81, 88, 89, 94, 103, 133, 184, 187, 192, 193, 200, 211, 232, 238, 244, 252, 257, 259], "first": [1, 3, 5, 6, 7, 8, 11, 12, 16, 18, 19, 20, 23, 25, 34, 35, 36, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 66, 67, 69, 70, 77, 78, 80, 82, 83, 84, 89, 92, 93, 96, 97, 103, 104, 109, 110, 111, 115, 116, 118, 119, 120, 121, 126, 127, 130, 131, 134, 138, 139, 143, 147, 150, 155, 156, 159, 160, 161, 162, 163, 165, 166, 169, 171, 176, 179, 183, 184, 186, 187, 189, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 206, 207, 209, 210, 212, 213, 216, 217, 218, 219, 220, 224, 226, 229, 231, 232, 233, 234, 238, 239, 241, 249, 254, 265, 266, 268, 270, 271, 272, 274, 276, 277], "homebrew": 1, "brew": 1, "sh": 1, "Then": [1, 5, 11, 16, 18, 44, 49, 52, 53, 78, 82, 89, 93, 109, 111, 113, 123, 125, 126, 131, 135, 163, 171, 183, 187, 188, 190, 193, 195, 197, 200, 207, 210, 212, 213, 216, 218, 239], "docbook": 1, "librsvg": 1, "conda": [1, 3, 5, 25, 95], "Or": [1, 7, 12, 19, 23, 44, 53, 54, 55, 61, 78, 83, 93, 113, 187, 197, 199, 200, 212, 219, 220, 231, 239, 251, 271, 274], "forg": [1, 3, 95], "make": [1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 18, 19, 20, 26, 29, 30, 31, 33, 35, 36, 43, 44, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 69, 80, 81, 83, 89, 92, 93, 94, 95, 96, 97, 99, 111, 115, 116, 118, 119, 123, 124, 128, 130, 131, 133, 146, 163, 168, 180, 183, 186, 189, 190, 191, 193, 195, 196, 197, 199, 200, 203, 208, 209, 210, 212, 216, 217, 218, 219, 224, 226, 229, 231, 232, 233, 234, 236, 238, 239, 248, 253, 254, 268, 269, 270, 271, 272, 276], "success": [1, 7, 34, 44, 53, 61, 78, 80, 93, 118, 176, 187, 193, 195, 208, 209, 216, 219, 220, 238, 245, 246], "tricki": [1, 53, 78], "becaus": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 23, 25, 26, 31, 35, 45, 52, 53, 54, 59, 65, 69, 70, 78, 80, 83, 87, 89, 93, 95, 116, 120, 146, 154, 166, 168, 171, 183, 186, 187, 189, 190, 191, 193, 195, 196, 197, 199, 200, 203, 207, 210, 212, 213, 216, 217, 218, 219, 229, 231, 232, 234, 238, 239, 241, 248, 266, 268, 270, 271, 272, 275, 276, 277], "some": [1, 3, 4, 6, 11, 12, 16, 18, 19, 20, 23, 25, 26, 31, 34, 35, 36, 41, 44, 45, 51, 52, 53, 54, 57, 58, 59, 61, 63, 64, 65, 69, 78, 80, 82, 83, 84, 86, 89, 93, 94, 95, 101, 104, 107, 108, 113, 115, 116, 117, 118, 119, 120, 121, 126, 128, 130, 131, 134, 146, 151, 155, 163, 166, 171, 172, 175, 177, 181, 183, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 200, 202, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247, 249, 251, 255, 265, 266, 268, 270, 271, 272, 274, 275, 276], "avail": [1, 3, 5, 7, 10, 11, 12, 18, 24, 25, 34, 35, 44, 45, 52, 53, 58, 61, 80, 89, 94, 95, 116, 130, 133, 190, 191, 193, 196, 200, 201, 206, 208, 210, 212, 213, 218, 219, 220, 221, 225, 226, 231, 238, 239, 244, 245, 262, 268, 275], "subsystem": [1, 200], "linux": [1, 25], "possibl": [1, 6, 10, 11, 14, 18, 19, 20, 25, 33, 35, 36, 37, 42, 44, 45, 47, 48, 49, 53, 54, 58, 59, 61, 63, 65, 67, 68, 70, 75, 77, 78, 80, 82, 83, 84, 86, 89, 93, 104, 105, 107, 118, 129, 131, 160, 162, 166, 168, 171, 179, 181, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 206, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 221, 226, 231, 233, 234, 235, 236, 238, 239, 248, 249, 251, 267, 268, 271, 276], "workaround": [1, 239], "solut": [1, 10, 11, 12, 14, 16, 19, 20, 22, 35, 49, 53, 54, 59, 61, 63, 71, 75, 76, 77, 80, 89, 93, 100, 107, 111, 116, 120, 126, 130, 135, 171, 175, 187, 193, 194, 195, 196, 197, 198, 199, 208, 213, 214, 215, 216, 217, 218, 261, 277], "shell": [1, 12, 81, 133, 199], "after": [1, 4, 5, 6, 7, 10, 12, 25, 27, 29, 30, 34, 36, 41, 44, 45, 49, 51, 52, 53, 54, 55, 59, 68, 70, 75, 80, 84, 89, 93, 95, 96, 103, 127, 128, 130, 133, 135, 139, 151, 163, 171, 175, 181, 184, 189, 193, 195, 196, 197, 198, 200, 201, 206, 213, 216, 217, 218, 219, 221, 231, 234, 239, 241, 245, 247, 251, 265, 266, 268, 272, 276], "tutori": [1, 7, 11, 12, 16, 17, 25, 69, 116, 133, 188, 199, 200, 214, 216, 239, 268, 271, 273, 274, 275, 276, 277], "com": [1, 3, 4, 5, 6, 7, 10, 20, 25, 27, 31, 33, 44, 46, 47, 53, 54, 56, 57, 58, 59, 61, 63, 69, 70, 78, 80, 84, 89, 93, 101, 185, 194, 203, 205, 208, 209, 212, 213, 216, 219, 220, 238, 241, 272], "microsoftdoc": 1, "wsl": 1, "blob": [1, 80], "win10": 1, "md": [1, 4, 7, 229, 236], "In": [1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 25, 31, 33, 34, 35, 36, 37, 42, 43, 44, 45, 52, 53, 54, 55, 57, 58, 59, 61, 66, 68, 69, 70, 71, 78, 80, 81, 82, 83, 84, 86, 89, 90, 93, 95, 97, 99, 103, 107, 110, 111, 116, 119, 120, 121, 126, 127, 128, 129, 130, 131, 133, 134, 152, 154, 155, 156, 161, 165, 166, 169, 171, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 226, 229, 231, 233, 235, 236, 238, 239, 242, 245, 248, 249, 251, 253, 265, 268, 269, 270, 271, 272, 275, 276, 277], "command": [1, 3, 5, 6, 11, 12, 25, 35, 57, 81, 116, 128, 133, 180, 186, 200, 231, 232, 275], "prompt": [1, 6, 11], "run": [1, 4, 6, 7, 8, 11, 12, 16, 18, 20, 36, 44, 45, 47, 53, 54, 78, 89, 94, 95, 111, 118, 133, 166, 180, 186, 187, 200, 210, 212, 216, 217, 218, 228, 232, 234, 235, 238, 239, 263, 268, 275], "transfer": [1, 100, 101, 103, 135, 219], "termin": [1, 44, 53, 59, 81, 93, 180, 200, 207, 231, 275], "abov": [1, 3, 4, 6, 7, 10, 12, 14, 16, 19, 20, 33, 34, 35, 36, 37, 43, 44, 45, 49, 52, 53, 57, 58, 61, 63, 66, 69, 70, 78, 80, 83, 84, 89, 93, 94, 95, 97, 103, 107, 111, 113, 115, 116, 118, 119, 120, 121, 126, 127, 129, 130, 131, 134, 161, 163, 166, 176, 181, 183, 184, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 207, 210, 212, 213, 216, 218, 219, 220, 224, 225, 232, 233, 239, 248, 249, 250, 251, 254, 268, 270, 271, 272, 276], "html": [1, 3, 4, 6, 7, 31, 35, 37, 45, 46, 47, 53, 54, 56, 58, 59, 61, 63, 69, 70, 80, 81, 89, 93, 101, 194, 200, 203, 205, 208, 209, 213, 216, 220, 232, 234, 236, 238, 239, 272], "note": [1, 3, 6, 7, 10, 11, 12, 14, 16, 18, 19, 22, 27, 28, 30, 31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 49, 51, 52, 54, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 78, 80, 81, 83, 84, 86, 89, 93, 95, 103, 104, 108, 109, 110, 111, 112, 115, 116, 118, 120, 123, 127, 131, 133, 139, 142, 150, 160, 161, 163, 165, 166, 167, 169, 175, 176, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 206, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 225, 226, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 249, 251, 253, 262, 265, 266, 267, 269, 270, 271, 272, 276], "via": [1, 3, 11, 16, 20, 25, 28, 29, 30, 44, 45, 53, 58, 61, 78, 80, 83, 89, 93, 94, 95, 96, 176, 185, 187, 191, 193, 195, 196, 199, 200, 219, 229, 232, 233, 245, 253, 271], "want": [1, 3, 4, 5, 6, 10, 11, 12, 15, 16, 18, 19, 20, 23, 25, 31, 33, 35, 36, 37, 45, 53, 54, 60, 65, 67, 69, 72, 78, 80, 84, 86, 89, 90, 93, 94, 101, 103, 106, 112, 116, 133, 149, 159, 160, 163, 166, 169, 171, 178, 179, 183, 184, 186, 188, 189, 190, 193, 195, 196, 197, 199, 200, 201, 207, 208, 210, 212, 213, 216, 217, 218, 219, 220, 226, 229, 231, 233, 235, 238, 239, 249, 251, 254, 265, 266, 268, 270, 271, 272, 273, 275, 276], "directori": [1, 3, 6, 7, 25, 30, 35, 216, 231, 232, 241], "folder": 1, "prepend": [1, 34, 44, 89, 103, 173, 226], "mnt": 1, "path": [1, 5, 6, 10, 44, 69, 75, 103, 124, 181, 183, 209, 212, 216, 219, 231, 232, 235, 236, 238, 241, 242, 243, 251], "navig": 1, "method": [1, 3, 4, 6, 7, 11, 12, 17, 18, 23, 29, 30, 31, 33, 34, 35, 36, 37, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 72, 75, 77, 78, 80, 82, 84, 85, 86, 89, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 110, 115, 116, 119, 121, 122, 126, 127, 132, 133, 140, 143, 145, 147, 155, 156, 161, 163, 166, 168, 173, 174, 175, 176, 178, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 201, 202, 203, 205, 206, 207, 208, 212, 213, 214, 216, 218, 220, 221, 223, 225, 226, 227, 231, 233, 235, 238, 239, 245, 248, 251, 254, 255, 265, 266, 267, 268, 271, 276], "better": [1, 3, 4, 6, 10, 11, 12, 18, 19, 20, 34, 35, 45, 53, 57, 61, 80, 83, 103, 116, 146, 170, 174, 186, 189, 190, 191, 203, 207, 208, 209, 210, 216, 217, 218, 219, 220, 232, 238, 239, 270, 276], "compat": [1, 3, 4, 15, 35, 53, 61, 81, 84, 89, 94, 107, 168, 173, 180, 186, 189, 191, 195, 196, 200, 220, 223, 224, 227, 231, 233, 239], "than": [1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 20, 23, 26, 31, 35, 36, 38, 44, 45, 46, 52, 53, 54, 57, 58, 59, 61, 62, 67, 68, 69, 71, 75, 78, 80, 82, 83, 84, 86, 89, 90, 92, 93, 94, 95, 99, 101, 103, 107, 111, 115, 116, 120, 123, 140, 146, 160, 163, 164, 166, 175, 184, 185, 188, 189, 190, 191, 193, 196, 197, 198, 200, 203, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 227, 232, 233, 235, 238, 239, 241, 242, 265, 266, 268, 269, 270, 271, 272, 274, 276], "cygwin": 1, "msys2": 1, "more": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 30, 31, 33, 34, 35, 36, 39, 43, 44, 45, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 75, 78, 80, 83, 84, 86, 87, 89, 90, 92, 93, 94, 95, 101, 103, 107, 111, 112, 116, 118, 120, 122, 124, 126, 128, 129, 130, 131, 133, 135, 138, 150, 154, 155, 160, 163, 164, 165, 166, 171, 175, 176, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 212, 213, 216, 217, 218, 219, 220, 231, 233, 234, 235, 238, 239, 241, 245, 248, 252, 265, 266, 268, 269, 271, 272, 274, 275, 276, 277], "virtual": [1, 4, 8, 25, 53, 69, 184, 269], "partial": [1, 11, 33, 44, 51, 52, 53, 55, 57, 58, 59, 93, 95, 133, 160, 176, 179, 181, 191, 192, 194, 197, 200, 202, 209, 212, 214, 216, 217, 221, 227, 245, 251, 266, 276], "need": [1, 3, 4, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 29, 30, 33, 34, 35, 38, 44, 45, 49, 51, 52, 53, 54, 55, 59, 61, 64, 68, 69, 76, 77, 78, 80, 81, 84, 89, 93, 94, 95, 97, 99, 103, 107, 111, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 146, 150, 158, 164, 169, 170, 175, 176, 180, 183, 184, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 207, 208, 210, 212, 213, 215, 216, 218, 219, 220, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 238, 241, 245, 248, 250, 251, 254, 265, 266, 268, 271, 272, 274, 276], "environ": [1, 3, 8, 9, 10, 11, 53, 81, 180, 200, 220, 231, 241, 268, 270, 275], "workflow": [1, 3, 5, 8, 9, 24, 133, 190, 233, 239, 273], "onli": [1, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 69, 70, 71, 76, 78, 80, 81, 82, 83, 84, 89, 90, 93, 94, 95, 99, 101, 103, 109, 110, 116, 118, 119, 120, 122, 123, 125, 127, 128, 130, 131, 134, 139, 141, 160, 161, 165, 166, 168, 170, 171, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 245, 247, 249, 251, 253, 254, 265, 266, 268, 269, 271, 272, 276, 277], "viabl": [1, 54], "64": [1, 38, 44, 93, 132, 185, 199, 209, 218, 220, 231, 238, 241, 275], "bit": [1, 16, 20, 34, 35, 37, 53, 54, 56, 83, 84, 89, 93, 160, 171, 187, 196, 210, 213, 219, 231, 238, 248, 249, 275], "chocolatei": 1, "choco": 1, "rsvg": 1, "convert": [1, 3, 4, 10, 11, 12, 14, 18, 19, 20, 27, 31, 35, 37, 45, 49, 53, 54, 57, 58, 59, 67, 68, 70, 73, 74, 77, 81, 83, 84, 89, 92, 93, 95, 103, 160, 163, 169, 170, 171, 173, 179, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 208, 209, 210, 212, 213, 217, 219, 220, 221, 222, 225, 231, 232, 238, 239, 241, 243, 247, 267, 268, 271, 276], "chose": [1, 54], "rm": [1, 35], "absolut": [1, 10, 31, 32, 35, 52, 53, 59, 68, 78, 80, 84, 89, 105, 164, 191, 195, 196, 210, 212, 215, 220, 231, 253, 254, 255], "Be": [1, 4, 6, 20, 33, 53, 83, 89, 193, 216, 219, 227, 239], "sure": [1, 4, 6, 7, 20, 35, 44, 53, 65, 115, 116, 146, 171, 196, 197, 207, 216, 218, 219, 232, 238, 268, 271, 276], "substitut": [1, 10, 11, 12, 16, 19, 35, 53, 54, 59, 61, 78, 80, 89, 94, 95, 103, 111, 112, 116, 118, 120, 130, 155, 164, 166, 169, 176, 178, 179, 197, 198, 201, 202, 207, 210, 212, 213, 216, 217, 218, 219, 239, 247, 267, 268], "actual": [1, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 34, 35, 36, 42, 44, 51, 53, 54, 61, 65, 78, 80, 82, 86, 89, 93, 103, 107, 116, 118, 128, 129, 130, 180, 187, 190, 195, 200, 208, 210, 212, 213, 216, 219, 227, 231, 232, 235, 236, 238, 239, 270], "filesystem": 1, "from": [1, 3, 4, 5, 6, 7, 11, 14, 15, 16, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 265, 266, 268, 270, 271, 272, 275, 276, 277], "ani": [1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 18, 19, 20, 25, 28, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 65, 68, 69, 70, 78, 80, 81, 83, 84, 87, 89, 90, 93, 95, 96, 97, 99, 103, 105, 108, 110, 111, 112, 113, 115, 116, 126, 129, 130, 131, 134, 135, 139, 152, 155, 160, 161, 164, 166, 168, 171, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 200, 201, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 222, 225, 226, 231, 232, 234, 235, 236, 238, 239, 245, 248, 249, 250, 251, 253, 254, 265, 266, 268, 271, 272, 275, 276, 277], "makefil": 1, "subdirectori": 1, "ha": [1, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 31, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 76, 78, 80, 82, 83, 84, 86, 89, 90, 92, 93, 94, 96, 97, 99, 103, 104, 108, 110, 111, 116, 118, 120, 126, 127, 131, 133, 139, 140, 150, 151, 160, 163, 168, 171, 175, 176, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 205, 207, 208, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 231, 232, 233, 234, 235, 236, 238, 241, 245, 246, 248, 249, 251, 253, 254, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "collect": [1, 3, 7, 17, 34, 35, 44, 53, 70, 80, 93, 96, 103, 115, 124, 133, 166, 173, 185, 191, 196, 209, 210, 216, 220, 231, 238, 256], "offici": [1, 12, 25, 53, 107, 133, 175, 184, 219, 239, 274], "which": [1, 2, 3, 4, 6, 7, 10, 11, 12, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 68, 69, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 89, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 121, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 139, 140, 152, 155, 161, 162, 163, 164, 166, 170, 171, 172, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 224, 226, 231, 232, 233, 234, 235, 236, 238, 239, 241, 245, 246, 249, 253, 254, 256, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277], "gener": [1, 4, 8, 10, 11, 12, 14, 16, 18, 19, 20, 23, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 67, 69, 71, 76, 78, 80, 81, 82, 83, 86, 89, 93, 94, 95, 103, 107, 108, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130, 131, 133, 134, 138, 149, 150, 151, 152, 155, 160, 161, 164, 165, 166, 171, 173, 175, 176, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 206, 209, 210, 212, 213, 214, 216, 217, 218, 220, 225, 226, 232, 233, 235, 236, 237, 238, 239, 245, 248, 249, 251, 252, 253, 266, 268, 269, 270, 271, 272, 276, 277], "svg": [1, 81, 180], "store": [1, 5, 10, 12, 18, 34, 35, 43, 44, 53, 75, 77, 86, 89, 93, 95, 111, 113, 115, 116, 131, 160, 166, 179, 183, 184, 186, 187, 190, 195, 196, 197, 207, 210, 221, 224, 225, 233, 234, 235, 238, 249, 251, 271], "_build": [1, 6], "same": [1, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 23, 27, 28, 29, 30, 31, 33, 34, 35, 42, 43, 44, 45, 49, 52, 53, 54, 55, 58, 60, 61, 63, 66, 67, 68, 69, 70, 75, 76, 78, 80, 82, 83, 84, 86, 89, 93, 95, 96, 97, 103, 104, 107, 108, 114, 116, 120, 123, 124, 130, 131, 150, 152, 160, 163, 164, 166, 168, 169, 171, 173, 174, 175, 176, 178, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 225, 226, 227, 229, 231, 233, 234, 235, 236, 238, 239, 241, 245, 246, 248, 249, 253, 266, 268, 271, 272, 275, 276], "inform": [1, 3, 4, 6, 7, 11, 12, 15, 18, 19, 23, 24, 30, 31, 34, 35, 36, 39, 44, 45, 51, 53, 54, 58, 61, 65, 78, 80, 82, 86, 89, 94, 97, 108, 109, 111, 115, 116, 118, 126, 127, 128, 130, 131, 133, 134, 161, 166, 171, 175, 176, 180, 184, 186, 190, 195, 196, 200, 201, 207, 210, 212, 213, 214, 218, 219, 220, 224, 225, 226, 231, 232, 233, 234, 235, 245, 249, 251, 276], "onc": [1, 4, 11, 12, 18, 19, 20, 35, 37, 44, 49, 53, 54, 58, 61, 69, 78, 80, 94, 97, 109, 110, 126, 130, 171, 176, 178, 184, 186, 188, 190, 196, 200, 201, 209, 210, 212, 216, 219, 226, 238, 248, 265, 266, 276, 277], "under": [1, 3, 4, 6, 11, 12, 18, 19, 29, 30, 32, 33, 35, 36, 43, 44, 49, 51, 61, 71, 78, 80, 82, 89, 93, 95, 96, 97, 135, 161, 185, 187, 188, 195, 196, 200, 207, 208, 210, 213, 216, 218, 219, 220, 226, 229, 270, 276], "prefer": [1, 3, 6, 10, 11, 18, 20, 35, 45, 52, 53, 61, 93, 95, 116, 166, 171, 186, 189, 191, 193, 195, 200, 208, 212, 216, 218, 225, 231, 233, 236, 239, 270, 272], "web": [1, 7, 54, 65, 133, 182, 194, 213], "browser": 1, "drop": [1, 59, 80, 94, 123, 191, 193], "menu": 1, "index": [1, 3, 10, 12, 20, 27, 35, 40, 42, 44, 45, 49, 52, 53, 54, 55, 59, 61, 64, 69, 78, 80, 83, 84, 86, 89, 92, 93, 103, 115, 116, 133, 134, 135, 137, 139, 140, 150, 159, 161, 163, 166, 171, 176, 186, 187, 191, 195, 196, 197, 200, 205, 206, 210, 218, 220, 221, 223, 224, 226, 227, 232], "given": [1, 3, 4, 7, 10, 11, 12, 14, 16, 18, 20, 27, 29, 30, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 80, 82, 83, 84, 86, 89, 92, 93, 95, 96, 99, 101, 104, 108, 109, 113, 115, 116, 120, 131, 139, 156, 161, 163, 171, 172, 174, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 225, 226, 229, 231, 233, 235, 238, 239, 241, 242, 243, 245, 247, 249, 251, 253, 265, 271, 274, 276, 277], "told": 1, "how": [1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 34, 35, 44, 45, 52, 53, 59, 60, 61, 65, 76, 79, 80, 83, 84, 86, 89, 93, 95, 107, 111, 116, 117, 123, 128, 129, 131, 133, 137, 138, 154, 158, 161, 162, 163, 168, 169, 176, 183, 186, 187, 190, 191, 193, 195, 199, 200, 203, 207, 208, 210, 212, 213, 214, 216, 217, 218, 220, 226, 231, 232, 233, 234, 236, 238, 239, 249, 266, 268, 270, 271, 272, 273, 275, 276], "load": [1, 35, 53, 81, 96, 97, 99, 108, 110, 111, 115, 119, 121, 134, 146, 180], "ll": [1, 34, 51, 89, 120, 183, 184, 229], "manual": [1, 3, 4, 7, 10, 11, 20, 35, 36, 44, 57, 63, 80, 81, 95, 103, 115, 116, 119, 130, 134, 186, 193, 200, 216, 218, 219, 234, 266, 276], "repeat": [1, 11, 12, 44, 47, 52, 53, 59, 61, 80, 82, 84, 89, 93, 95, 150, 152, 166, 186, 187, 188, 193, 195, 196, 200, 206, 216, 220, 224, 225, 232, 234, 238, 276], "step": [1, 4, 5, 20, 21, 24, 33, 35, 44, 48, 49, 52, 53, 54, 61, 77, 78, 80, 89, 93, 94, 102, 111, 123, 126, 128, 133, 134, 168, 179, 184, 186, 190, 191, 193, 196, 200, 201, 202, 205, 208, 209, 210, 212, 213, 214, 216, 218, 220, 225, 232, 238, 239, 266], "reload": 1, "There": [1, 3, 4, 5, 6, 7, 10, 11, 12, 15, 18, 19, 20, 23, 35, 36, 44, 45, 46, 47, 50, 52, 53, 54, 57, 58, 61, 77, 78, 80, 81, 82, 83, 86, 89, 93, 96, 97, 99, 103, 107, 115, 126, 128, 130, 139, 156, 161, 175, 176, 180, 183, 184, 186, 190, 191, 192, 193, 195, 196, 197, 200, 201, 202, 208, 209, 210, 212, 213, 216, 218, 219, 220, 225, 234, 235, 238, 239, 241, 249, 265, 266, 268, 270, 271, 275, 276], "altern": [1, 4, 6, 10, 11, 12, 19, 20, 23, 25, 35, 41, 44, 45, 52, 53, 57, 59, 60, 61, 84, 86, 90, 94, 116, 128, 130, 176, 183, 185, 186, 188, 189, 190, 195, 196, 200, 205, 207, 209, 218, 219, 221, 238, 268, 270, 272], "approach": [1, 16, 23, 34, 52, 53, 80, 103, 120, 126, 190, 193, 194, 197, 208, 217, 218, 220, 232, 235, 238, 266, 272], "set": [1, 2, 3, 4, 6, 7, 11, 12, 14, 16, 17, 18, 19, 26, 29, 30, 33, 34, 35, 36, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 66, 68, 70, 71, 72, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 95, 96, 97, 103, 107, 110, 111, 115, 116, 118, 119, 120, 125, 128, 129, 130, 133, 134, 150, 156, 161, 166, 168, 171, 173, 174, 175, 176, 178, 179, 180, 181, 183, 186, 187, 188, 189, 190, 193, 195, 196, 199, 200, 201, 202, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 224, 225, 226, 229, 231, 232, 233, 234, 238, 239, 245, 247, 249, 255, 258, 265, 267, 276], "up": [1, 3, 4, 10, 11, 16, 18, 19, 20, 25, 30, 33, 35, 44, 45, 47, 53, 54, 55, 57, 58, 59, 61, 62, 69, 70, 74, 78, 80, 81, 83, 84, 89, 93, 94, 96, 105, 107, 113, 115, 118, 119, 123, 125, 130, 131, 133, 134, 146, 161, 163, 179, 185, 186, 187, 190, 191, 195, 197, 200, 201, 202, 207, 209, 210, 212, 213, 216, 217, 218, 219, 232, 233, 234, 235, 236, 239, 267, 268, 271, 272, 274], "monitor": 1, "automat": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 23, 34, 35, 36, 45, 53, 55, 56, 57, 58, 59, 61, 66, 68, 72, 78, 81, 83, 93, 95, 96, 111, 116, 118, 124, 152, 154, 155, 164, 166, 179, 183, 186, 187, 190, 191, 192, 195, 196, 197, 200, 203, 206, 207, 209, 210, 212, 213, 216, 218, 219, 225, 226, 231, 232, 233, 236, 249, 254, 266, 268, 270, 271, 275, 276, 277], "detect": [1, 3, 26, 33, 86, 89, 93, 186, 190, 200, 216, 217, 219, 221, 238, 256, 275], "procedur": [1, 36, 38, 44, 50, 51, 52, 80, 89, 111, 131, 193, 195, 212, 213, 218, 219, 245, 272], "again": [1, 4, 12, 16, 19, 45, 53, 68, 93, 116, 118, 131, 161, 162, 176, 183, 187, 188, 195, 203, 210, 216, 229, 248, 268, 276], "whether": [1, 4, 10, 11, 18, 19, 20, 23, 33, 34, 35, 39, 44, 52, 53, 54, 60, 61, 65, 68, 80, 81, 83, 84, 89, 93, 99, 107, 112, 115, 116, 154, 173, 178, 184, 186, 189, 190, 191, 195, 196, 200, 203, 207, 208, 212, 213, 216, 218, 219, 220, 221, 231, 233, 238, 239, 245, 247, 268, 272], "8000": [1, 96], "80": [1, 4, 6, 12, 20, 33, 44, 53, 56, 80, 89, 93, 96, 97, 101, 196, 199, 216, 220, 236, 238], "localhost": 1, "differ": [1, 4, 6, 7, 10, 11, 12, 14, 15, 17, 19, 20, 23, 26, 34, 35, 36, 42, 43, 44, 45, 49, 52, 53, 54, 55, 57, 58, 59, 61, 64, 66, 68, 69, 73, 75, 77, 78, 80, 81, 82, 83, 86, 89, 93, 94, 95, 96, 101, 107, 108, 113, 116, 118, 122, 126, 130, 131, 134, 138, 139, 151, 152, 160, 161, 164, 166, 168, 171, 175, 176, 177, 179, 180, 181, 184, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 226, 229, 231, 232, 233, 234, 235, 236, 238, 239, 245, 247, 251, 252, 253, 256, 267, 268, 270, 271, 272, 275, 276], "port": [1, 95, 118, 138], "finish": [1, 35, 36, 160, 234, 273], "stop": [1, 4, 35, 36, 45, 53, 89, 93, 186, 206, 208, 216, 220], "ctrl": 1, "detach": 1, "mode": [1, 2, 53, 81, 95, 138, 161, 180, 196, 200, 231, 242, 262], "d": [1, 6, 7, 10, 11, 12, 16, 20, 27, 34, 37, 42, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 61, 63, 67, 71, 76, 78, 80, 82, 83, 84, 85, 86, 89, 90, 92, 93, 95, 96, 99, 111, 133, 135, 138, 139, 145, 155, 163, 165, 166, 171, 175, 176, 178, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 202, 206, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 224, 226, 238, 241, 245, 246, 247, 248, 249, 253, 261, 272, 277], "name": [1, 3, 4, 5, 6, 7, 10, 11, 12, 18, 20, 26, 29, 30, 34, 35, 36, 40, 43, 46, 49, 52, 53, 54, 55, 59, 60, 61, 63, 66, 78, 80, 81, 82, 86, 89, 93, 95, 96, 99, 108, 110, 113, 115, 116, 118, 133, 137, 146, 161, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 184, 186, 187, 188, 190, 191, 193, 195, 197, 200, 206, 210, 212, 213, 216, 217, 219, 220, 225, 226, 229, 231, 232, 233, 234, 239, 241, 242, 243, 245, 248, 251, 265, 268, 271, 272, 276], "livehtml": 1, "simpli": [1, 3, 4, 7, 18, 19, 31, 36, 52, 53, 55, 59, 63, 84, 86, 89, 93, 95, 96, 99, 104, 108, 116, 118, 130, 156, 161, 171, 181, 184, 190, 197, 208, 209, 210, 216, 219, 236, 238, 239, 251], "should": [1, 3, 5, 6, 7, 8, 10, 11, 12, 15, 18, 19, 20, 23, 26, 28, 30, 33, 34, 35, 36, 44, 45, 46, 47, 49, 52, 53, 54, 56, 57, 59, 61, 63, 64, 65, 66, 67, 68, 70, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 89, 93, 95, 96, 101, 103, 107, 116, 118, 120, 128, 130, 131, 133, 134, 135, 146, 150, 154, 156, 158, 160, 161, 164, 166, 168, 169, 171, 172, 176, 180, 183, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 199, 200, 202, 203, 206, 207, 208, 209, 210, 212, 213, 216, 218, 219, 220, 224, 225, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 245, 248, 256, 265, 266, 268, 269, 272], "new": [1, 3, 4, 5, 7, 11, 18, 20, 24, 29, 30, 34, 35, 36, 44, 45, 52, 53, 54, 55, 61, 66, 69, 78, 80, 81, 84, 89, 93, 96, 99, 103, 108, 116, 123, 125, 131, 132, 133, 135, 156, 162, 163, 166, 168, 171, 172, 174, 176, 179, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 200, 207, 210, 212, 213, 216, 218, 219, 220, 221, 231, 232, 236, 239, 245, 246, 248, 252, 264, 265, 268, 271, 272, 274], "tab": [1, 12, 49, 133], "show": [1, 3, 4, 6, 7, 12, 15, 16, 17, 18, 19, 20, 35, 45, 52, 53, 57, 59, 76, 78, 80, 89, 93, 96, 97, 101, 107, 116, 122, 127, 131, 133, 161, 165, 169, 171, 176, 183, 184, 186, 187, 190, 191, 193, 195, 196, 200, 201, 203, 207, 208, 209, 210, 212, 213, 216, 218, 220, 221, 229, 232, 233, 236, 238, 239, 268, 270, 272, 275], "necessari": [1, 3, 4, 6, 8, 10, 12, 18, 20, 24, 33, 34, 44, 45, 53, 63, 78, 80, 83, 89, 93, 111, 118, 126, 186, 188, 190, 195, 196, 203, 209, 212, 216, 217, 218, 219, 220, 221, 226, 231, 233, 238, 239, 245, 269, 274], "major": [1, 3, 4, 7, 10, 63, 107, 225, 270, 276], "contributor": [1, 3, 7, 10, 20], "action": [1, 3, 7, 44, 82, 158, 161, 171, 196, 212, 219], "pull": [1, 3, 4, 5, 6, 7, 9, 10, 20, 25, 35, 53, 58, 61, 165, 201, 212, 216, 219, 272, 276], "request": [1, 3, 4, 6, 7, 9, 10, 18, 25, 33, 53, 57, 69, 78, 93, 116, 166, 193, 196, 224, 232], "each": [1, 3, 4, 10, 11, 12, 14, 18, 20, 23, 24, 30, 31, 33, 34, 35, 36, 37, 44, 45, 49, 53, 54, 55, 56, 57, 58, 59, 61, 63, 68, 69, 70, 75, 76, 78, 80, 82, 83, 84, 86, 89, 93, 96, 99, 101, 103, 109, 110, 111, 116, 118, 120, 123, 125, 127, 128, 131, 150, 163, 166, 175, 176, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 198, 200, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 231, 233, 235, 238, 239, 241, 245, 246, 247, 249, 251, 253, 266, 269, 271, 276, 277], "releas": [1, 7, 10, 53, 80, 84, 95, 130, 186, 225, 236, 239, 271], "includ": [1, 3, 4, 6, 7, 9, 10, 11, 12, 18, 20, 25, 30, 31, 33, 34, 35, 45, 49, 52, 53, 54, 55, 57, 58, 59, 61, 65, 71, 78, 80, 83, 84, 86, 88, 89, 93, 94, 95, 105, 107, 115, 116, 118, 120, 121, 126, 128, 130, 133, 146, 150, 155, 160, 163, 164, 174, 181, 184, 188, 191, 192, 193, 195, 196, 199, 200, 201, 206, 207, 208, 210, 212, 215, 216, 217, 218, 220, 223, 226, 229, 231, 233, 234, 235, 236, 238, 245, 246, 248, 253, 255, 266, 270, 271, 272, 276, 277], "fail": [1, 3, 4, 6, 7, 10, 18, 19, 20, 35, 44, 45, 49, 52, 53, 57, 59, 77, 78, 80, 81, 89, 90, 93, 95, 118, 156, 161, 180, 186, 189, 190, 191, 193, 195, 196, 200, 207, 210, 216, 218, 220, 229, 231, 238, 239, 272], "99": [1, 35, 53, 54, 89, 93, 193, 194], "time": [1, 3, 4, 7, 10, 11, 12, 16, 18, 19, 26, 30, 31, 35, 44, 45, 49, 53, 54, 58, 61, 76, 78, 83, 84, 89, 90, 92, 93, 94, 95, 100, 101, 103, 107, 111, 112, 115, 116, 118, 120, 123, 124, 126, 128, 129, 130, 131, 133, 134, 140, 150, 155, 163, 164, 168, 169, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 193, 194, 195, 196, 197, 199, 200, 207, 208, 209, 210, 212, 216, 218, 220, 229, 231, 232, 237, 238, 239, 251, 253, 263, 266, 270, 271, 272], "due": [1, 6, 10, 16, 20, 33, 35, 43, 44, 53, 55, 70, 89, 93, 99, 116, 118, 130, 139, 166, 181, 184, 190, 196, 200, 203, 213, 215, 217, 220, 236, 247, 253, 276], "bad": [1, 10, 52, 93, 168, 200], "math": [1, 3, 6, 20, 27, 31, 34, 36, 44, 53, 61, 63, 80, 89, 93, 94, 116, 126, 181, 186, 191, 194, 199, 200, 216, 217, 220, 232, 233, 239, 249, 250, 251, 252, 253, 257, 265, 266, 270], "format": [1, 4, 8, 10, 11, 14, 16, 34, 45, 54, 75, 76, 80, 83, 89, 92, 93, 96, 115, 134, 139, 150, 160, 186, 189, 190, 195, 196, 198, 200, 210, 216, 219, 231, 241, 245, 248, 269, 272, 275], "doubl": [1, 6, 7, 33, 35, 49, 53, 54, 60, 89, 95, 110, 125, 126, 183, 190, 200, 209, 210, 233, 276], "check": [1, 3, 4, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 29, 30, 33, 34, 35, 39, 42, 44, 45, 46, 51, 52, 53, 54, 58, 61, 65, 76, 78, 82, 83, 84, 86, 89, 90, 93, 103, 108, 109, 116, 130, 133, 146, 154, 166, 168, 169, 174, 181, 182, 186, 187, 189, 190, 191, 193, 195, 196, 202, 208, 210, 212, 216, 217, 218, 219, 220, 224, 225, 229, 231, 233, 236, 238, 247, 251, 268, 276], "ad": [1, 6, 7, 10, 18, 23, 27, 34, 35, 37, 43, 44, 53, 54, 64, 68, 75, 78, 82, 93, 95, 99, 107, 108, 116, 117, 133, 140, 168, 171, 177, 185, 186, 195, 197, 199, 200, 202, 210, 213, 216, 219, 220, 222, 225, 226, 231, 247, 268], "correctli": [1, 3, 4, 6, 7, 10, 19, 20, 33, 57, 78, 81, 89, 116, 118, 130, 200, 207, 213, 216], "backtick": [1, 6, 7], "code": [1, 6, 8, 9, 11, 12, 16, 18, 19, 20, 25, 26, 36, 40, 44, 47, 48, 53, 54, 55, 57, 61, 65, 78, 80, 81, 89, 93, 94, 95, 108, 116, 118, 124, 126, 127, 131, 133, 134, 160, 166, 175, 180, 183, 185, 186, 187, 188, 190, 193, 199, 210, 212, 216, 218, 219, 220, 225, 228, 229, 231, 232, 233, 236, 237, 238, 239, 248, 263, 268, 270, 273, 275], "singl": [1, 4, 7, 10, 11, 16, 18, 20, 23, 26, 34, 35, 37, 44, 53, 54, 58, 59, 61, 66, 67, 69, 70, 71, 78, 80, 83, 84, 89, 92, 95, 103, 104, 109, 110, 120, 127, 146, 150, 152, 160, 163, 166, 173, 176, 179, 186, 187, 189, 190, 191, 193, 195, 196, 200, 201, 202, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 225, 231, 233, 235, 238, 239, 241, 266, 268, 271, 272, 277], "render": [1, 3, 6, 7, 35, 53, 81, 180, 186, 200, 275], "resourc": [1, 6, 7, 20, 89, 194, 216, 232, 242], "style": [1, 8, 34, 53, 81, 160, 180, 186, 200, 219, 275], "guid": [1, 3, 8, 9, 11, 13, 20, 25, 34, 53, 60, 116, 130, 200, 226, 259, 261, 269, 273, 274], "tip": [1, 6, 53, 130, 216, 217, 276], "few": [1, 3, 4, 10, 11, 18, 31, 43, 45, 53, 54, 80, 81, 93, 94, 118, 126, 169, 175, 180, 183, 184, 187, 195, 200, 208, 209, 210, 216, 219, 220, 233, 238, 276], "extra": [1, 10, 35, 53, 54, 93, 94, 124, 171, 181, 192, 193, 200, 210, 216, 231, 232, 233, 251], "xelatex": 1, "latexmk": 1, "chrome": 1, "chromium": 1, "On": [1, 10, 18, 30, 46, 53, 55, 61, 80, 83, 93, 116, 171, 181, 190, 193, 194, 195, 196, 216, 218, 235, 239, 251, 253], "xetex": 1, "font": [1, 81, 180, 200], "lmodern": 1, "cask": 1, "tap": 1, "dejavu": 1, "strawberryperl": 1, "miktex": [1, 3], "dejavufont": 1, "appdata": 1, "microsoft": 1, "right": [1, 4, 6, 7, 10, 12, 16, 20, 22, 33, 35, 36, 44, 45, 49, 53, 54, 56, 58, 59, 61, 69, 70, 78, 80, 83, 84, 89, 92, 93, 95, 96, 97, 103, 111, 115, 116, 130, 131, 133, 134, 138, 145, 150, 152, 154, 155, 160, 163, 166, 176, 181, 184, 185, 186, 187, 189, 195, 197, 198, 200, 202, 203, 207, 208, 210, 216, 217, 219, 220, 231, 233, 235, 238, 251, 266, 270, 272, 276], "click": 1, "result": [1, 3, 6, 10, 11, 12, 14, 15, 16, 18, 19, 20, 27, 28, 29, 30, 31, 33, 34, 35, 43, 44, 45, 49, 52, 53, 54, 55, 57, 59, 61, 65, 70, 71, 75, 77, 78, 80, 82, 83, 84, 86, 89, 92, 93, 94, 95, 96, 103, 104, 107, 108, 109, 112, 116, 120, 126, 130, 133, 151, 158, 160, 161, 163, 165, 166, 168, 169, 171, 175, 176, 184, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 227, 231, 232, 233, 235, 236, 238, 239, 241, 245, 247, 249, 268, 270, 271, 272, 276], "version": [1, 3, 4, 5, 6, 7, 12, 18, 19, 20, 24, 25, 28, 34, 35, 44, 45, 51, 53, 54, 59, 61, 66, 80, 83, 84, 85, 87, 89, 91, 93, 106, 108, 116, 150, 164, 168, 176, 185, 186, 187, 190, 191, 193, 195, 196, 200, 203, 212, 218, 220, 230, 231, 233, 234, 235, 236, 238, 239, 243, 245, 250, 268, 271, 272], "where": [1, 4, 5, 6, 7, 10, 11, 12, 16, 18, 19, 20, 23, 26, 27, 31, 33, 34, 35, 36, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 66, 68, 69, 70, 71, 75, 76, 77, 78, 80, 82, 83, 84, 85, 86, 89, 93, 96, 99, 100, 103, 107, 110, 111, 112, 113, 115, 116, 118, 129, 130, 131, 133, 134, 140, 150, 155, 161, 163, 165, 166, 167, 168, 169, 176, 179, 181, 183, 184, 185, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 200, 201, 202, 203, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 224, 226, 231, 232, 233, 234, 238, 239, 241, 245, 251, 253, 266, 268, 270, 272, 276, 277], "g": [1, 3, 4, 5, 7, 10, 12, 18, 19, 20, 33, 34, 35, 36, 38, 41, 43, 44, 45, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 69, 70, 71, 73, 76, 79, 80, 82, 83, 84, 89, 93, 95, 96, 103, 104, 108, 113, 115, 116, 118, 120, 121, 123, 124, 125, 130, 131, 133, 134, 146, 150, 155, 161, 163, 164, 166, 169, 171, 172, 176, 181, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 231, 232, 233, 234, 236, 238, 239, 240, 241, 253, 266, 271, 275, 276, 277], "1": [1, 3, 4, 7, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 145, 148, 149, 150, 151, 152, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 245, 247, 248, 249, 251, 254, 261, 265, 266, 268, 270, 271, 272, 275, 276, 277], "dev": [1, 3, 4, 5, 236], "sympi": [2, 3, 4, 7, 8, 9, 11, 13, 14, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 252, 253, 254, 255, 257, 263, 264, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277], "sympy_debug": [2, 80, 241], "variabl": [2, 3, 6, 7, 10, 11, 14, 16, 19, 20, 26, 27, 28, 30, 31, 33, 35, 36, 48, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 70, 72, 78, 80, 81, 83, 84, 89, 95, 96, 97, 99, 101, 103, 115, 116, 123, 125, 133, 134, 140, 155, 160, 164, 166, 169, 175, 176, 178, 181, 188, 190, 191, 193, 195, 196, 197, 200, 201, 206, 207, 212, 213, 215, 216, 217, 218, 219, 227, 231, 233, 234, 235, 239, 245, 247, 248, 250, 251, 253, 262, 266, 268, 270, 272, 277], "instanc": [2, 4, 6, 7, 10, 11, 15, 18, 19, 20, 28, 29, 30, 32, 34, 35, 44, 46, 48, 53, 55, 57, 58, 59, 61, 66, 69, 70, 71, 76, 77, 80, 81, 84, 86, 89, 93, 95, 96, 104, 108, 111, 115, 116, 134, 139, 146, 150, 156, 160, 161, 163, 165, 166, 176, 178, 180, 181, 186, 190, 191, 195, 196, 197, 198, 200, 208, 210, 212, 216, 218, 219, 220, 224, 225, 226, 231, 232, 233, 235, 238, 239, 245, 246, 247, 248, 249, 251, 253, 265, 266, 271, 276, 277], "unix": [2, 231, 232], "would": [2, 4, 5, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 22, 23, 25, 34, 35, 36, 42, 44, 45, 52, 53, 54, 58, 59, 65, 69, 78, 80, 84, 89, 93, 95, 96, 103, 104, 105, 107, 109, 116, 120, 130, 133, 161, 163, 166, 171, 175, 176, 181, 183, 186, 189, 190, 191, 193, 196, 197, 199, 200, 201, 203, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 224, 225, 231, 233, 235, 238, 239, 241, 242, 249, 250, 251, 253, 265, 266, 268, 270, 271, 272, 275, 276, 277], "do": [2, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 21, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 45, 49, 52, 53, 54, 55, 56, 59, 61, 63, 65, 68, 69, 72, 78, 80, 81, 83, 84, 86, 87, 89, 90, 93, 94, 100, 103, 107, 110, 111, 113, 115, 116, 117, 119, 120, 124, 127, 128, 133, 138, 141, 146, 150, 155, 158, 160, 162, 168, 170, 171, 174, 175, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 203, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 222, 225, 226, 229, 231, 232, 234, 236, 238, 239, 241, 247, 249, 250, 251, 253, 265, 266, 268, 269, 270, 271, 272, 274, 276], "true": [2, 3, 6, 10, 11, 12, 14, 15, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 78, 80, 81, 83, 84, 85, 86, 89, 90, 93, 95, 96, 97, 101, 103, 104, 105, 106, 107, 109, 111, 112, 116, 118, 120, 133, 137, 138, 147, 150, 151, 158, 160, 161, 164, 165, 166, 169, 175, 176, 177, 178, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 229, 231, 232, 233, 234, 236, 238, 239, 241, 245, 247, 248, 249, 250, 251, 254, 265, 266, 268, 270, 271, 272, 275, 276, 277], "isympi": [2, 3, 11, 12, 81], "window": [2, 241, 262], "just": [2, 4, 6, 7, 10, 11, 12, 18, 19, 20, 23, 25, 31, 34, 35, 44, 51, 53, 54, 55, 59, 76, 78, 80, 81, 82, 83, 89, 93, 94, 105, 107, 108, 113, 116, 120, 124, 130, 131, 133, 146, 151, 156, 166, 171, 175, 180, 181, 183, 187, 189, 190, 191, 193, 195, 199, 200, 207, 208, 209, 210, 212, 216, 219, 229, 231, 233, 234, 236, 250, 251, 253, 265, 266, 268, 269, 270, 271, 272, 276, 277], "limit": [2, 4, 10, 12, 23, 25, 31, 33, 35, 52, 53, 55, 57, 58, 59, 61, 62, 65, 73, 75, 80, 81, 83, 89, 93, 101, 126, 131, 155, 161, 164, 180, 186, 191, 193, 196, 197, 200, 203, 204, 206, 208, 212, 213, 215, 216, 217, 218, 220, 225, 232, 235, 238, 239, 241, 244, 245, 254, 267, 268, 270, 272], "function": [2, 3, 4, 7, 8, 11, 14, 15, 16, 18, 19, 21, 22, 24, 28, 29, 30, 32, 33, 34, 36, 44, 45, 48, 49, 51, 54, 55, 56, 57, 58, 62, 63, 64, 65, 70, 73, 74, 77, 79, 80, 81, 82, 84, 86, 88, 92, 94, 96, 98, 100, 101, 103, 104, 105, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 126, 128, 129, 133, 138, 139, 140, 141, 145, 150, 151, 152, 155, 160, 161, 162, 163, 164, 165, 166, 169, 175, 176, 179, 180, 182, 184, 185, 187, 192, 193, 194, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 218, 219, 220, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 244, 245, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277], "nice": [2, 4, 6, 25, 53, 65, 89, 93, 116, 130, 133, 186, 200, 210, 241, 271], "print": [2, 4, 6, 7, 11, 12, 16, 18, 19, 23, 25, 28, 29, 30, 31, 33, 34, 36, 37, 42, 44, 45, 52, 53, 54, 57, 58, 59, 61, 80, 82, 83, 86, 89, 90, 93, 94, 95, 97, 103, 111, 116, 118, 126, 132, 138, 146, 159, 160, 164, 166, 176, 182, 184, 186, 189, 190, 191, 195, 196, 206, 207, 209, 210, 212, 216, 218, 225, 227, 231, 233, 238, 239, 241, 243, 245, 248, 255, 257, 263, 266, 267, 268, 269, 270, 271, 272, 276], "tree": [2, 10, 11, 15, 44, 47, 53, 95, 109, 116, 158, 161, 176, 192, 196, 207, 209, 212, 219, 222, 224, 235, 238, 241, 257, 263, 267], "veri": [2, 3, 4, 6, 10, 11, 12, 14, 15, 18, 20, 35, 49, 53, 54, 57, 58, 63, 65, 71, 75, 78, 80, 83, 89, 93, 103, 107, 116, 120, 133, 138, 171, 183, 184, 187, 190, 193, 195, 196, 197, 199, 200, 201, 207, 208, 209, 210, 212, 213, 216, 218, 219, 220, 231, 232, 233, 239, 265, 268, 271, 276], "sever": [3, 4, 5, 6, 10, 11, 15, 18, 20, 23, 25, 35, 38, 44, 45, 52, 53, 57, 58, 60, 61, 65, 78, 80, 93, 109, 127, 171, 173, 186, 188, 190, 193, 195, 199, 200, 201, 207, 208, 216, 220, 231, 233, 243, 255, 268, 272, 275], "instal": [3, 5, 7, 11, 12, 57, 94, 190, 191, 200, 232, 239, 263, 269, 275], "enabl": [3, 7, 11, 20, 25, 53, 80, 81, 93, 97, 116, 118, 166, 176, 180, 200, 216, 220, 231, 236, 239, 272, 275, 276], "certain": [3, 7, 11, 20, 25, 32, 34, 35, 44, 51, 53, 57, 61, 69, 78, 80, 93, 95, 130, 176, 177, 187, 190, 193, 195, 200, 201, 207, 210, 212, 213, 216, 218, 219, 220, 222, 233, 234, 239, 245, 247, 253, 276], "most": [3, 4, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 23, 25, 28, 29, 30, 33, 34, 35, 36, 44, 45, 52, 53, 54, 57, 59, 63, 65, 80, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 103, 107, 111, 116, 124, 130, 131, 134, 168, 175, 179, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 207, 208, 210, 213, 216, 217, 218, 219, 220, 229, 232, 233, 234, 235, 236, 238, 239, 241, 247, 249, 265, 268, 270, 271, 272, 274, 275, 276], "mention": [3, 4, 6, 20, 44, 78, 80, 103, 118, 134, 135, 181, 210, 213, 216, 220, 248, 249, 250, 251, 272], "except": [3, 4, 6, 10, 11, 12, 16, 18, 19, 20, 33, 35, 44, 45, 53, 54, 57, 59, 61, 78, 80, 88, 93, 110, 124, 172, 185, 187, 190, 191, 192, 195, 196, 197, 198, 200, 209, 212, 213, 216, 217, 219, 224, 229, 231, 233, 234, 237, 238, 239, 248, 251, 263, 265, 268, 271, 272], "unless": [3, 6, 11, 18, 20, 23, 28, 30, 33, 35, 44, 52, 53, 54, 58, 61, 68, 69, 78, 89, 92, 139, 183, 184, 188, 190, 195, 196, 200, 205, 208, 209, 216, 218, 231, 235, 238, 239, 241, 245, 253, 266, 272, 276], "thei": [3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 23, 25, 31, 34, 35, 36, 41, 43, 44, 45, 51, 52, 53, 54, 55, 58, 59, 61, 63, 66, 67, 68, 69, 70, 75, 78, 80, 81, 83, 84, 86, 87, 89, 92, 93, 95, 107, 110, 111, 113, 115, 116, 118, 124, 126, 128, 129, 130, 133, 134, 140, 145, 150, 155, 158, 163, 168, 169, 171, 172, 176, 179, 180, 181, 184, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 200, 201, 206, 207, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 226, 229, 231, 233, 235, 238, 239, 241, 245, 251, 253, 266, 268, 269, 270, 271, 272, 276], "intend": [3, 4, 6, 10, 14, 18, 53, 54, 64, 73, 78, 93, 95, 109, 161, 190, 191, 195, 198, 213, 216, 217, 229, 234, 265], "part": [3, 4, 6, 7, 10, 11, 18, 19, 20, 27, 32, 44, 45, 52, 53, 54, 58, 59, 61, 69, 76, 78, 80, 83, 84, 86, 93, 103, 107, 108, 110, 111, 115, 116, 118, 124, 126, 127, 131, 133, 150, 162, 166, 175, 184, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 208, 210, 212, 213, 216, 218, 231, 233, 235, 238, 266, 271, 276], "those": [3, 6, 11, 12, 14, 18, 19, 23, 26, 31, 34, 35, 36, 44, 45, 51, 52, 53, 54, 57, 66, 67, 78, 80, 83, 89, 92, 93, 107, 118, 124, 139, 163, 175, 178, 180, 183, 184, 186, 190, 191, 193, 195, 196, 198, 199, 200, 206, 208, 212, 216, 217, 218, 219, 220, 226, 229, 231, 235, 238, 245, 247, 268, 270, 276], "everi": [3, 4, 6, 11, 18, 20, 23, 24, 29, 30, 31, 34, 39, 41, 44, 45, 53, 54, 68, 82, 84, 89, 93, 103, 131, 181, 183, 184, 186, 187, 188, 190, 191, 193, 195, 200, 205, 208, 210, 212, 213, 216, 219, 220, 222, 248, 251, 253, 269, 271, 272, 276], "doe": [3, 6, 7, 8, 10, 11, 15, 18, 19, 20, 24, 25, 26, 29, 30, 33, 34, 35, 36, 44, 45, 49, 51, 52, 53, 54, 55, 57, 59, 61, 63, 64, 66, 67, 69, 78, 80, 83, 84, 89, 92, 93, 95, 105, 107, 109, 116, 118, 123, 127, 146, 150, 156, 160, 162, 165, 175, 183, 184, 186, 188, 189, 190, 191, 193, 195, 196, 197, 200, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 225, 226, 229, 231, 233, 235, 238, 239, 241, 245, 246, 249, 265, 266, 268, 271, 272, 275, 276, 277], "themselv": [3, 7, 10, 20, 31, 34, 45, 49, 51, 53, 80, 93, 126, 127, 170, 190, 191, 195, 206, 220, 226, 235, 238, 241, 276], "incomplet": [3, 6, 7, 53, 58, 61, 188, 190, 196, 202, 218, 219], "main": [3, 5, 6, 7, 10, 12, 30, 31, 35, 53, 59, 78, 84, 89, 92, 116, 124, 164, 170, 180, 184, 186, 187, 191, 192, 200, 207, 216, 219, 225, 232, 276, 277], "webpag": [3, 7], "complet": [3, 4, 6, 11, 12, 18, 23, 30, 35, 53, 54, 55, 57, 59, 60, 61, 69, 78, 80, 89, 93, 107, 111, 112, 120, 126, 133, 152, 155, 156, 184, 193, 196, 197, 201, 207, 212, 213, 216, 219, 220, 231, 233, 241, 270, 271, 276], "io": [3, 7, 81, 200, 239], "one": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 24, 26, 27, 30, 31, 33, 34, 35, 37, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 66, 67, 69, 70, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 110, 111, 116, 117, 120, 130, 131, 133, 135, 138, 139, 140, 146, 151, 160, 164, 166, 168, 169, 171, 174, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 226, 227, 231, 232, 233, 235, 238, 239, 241, 245, 249, 251, 253, 264, 265, 266, 268, 270, 271, 272, 274, 275, 276], "arbitrari": [3, 6, 10, 11, 12, 18, 20, 23, 33, 38, 45, 46, 52, 53, 54, 57, 58, 61, 64, 65, 67, 83, 84, 89, 97, 127, 131, 152, 155, 184, 186, 187, 190, 191, 193, 195, 197, 212, 216, 217, 218, 226, 236, 239, 245, 246, 265, 266, 271, 276, 277], "precis": [3, 4, 6, 11, 12, 18, 19, 20, 23, 35, 44, 53, 56, 57, 58, 61, 69, 80, 89, 93, 101, 131, 185, 187, 190, 191, 195, 196, 197, 200, 207, 212, 213, 218, 219, 232, 233, 241, 265, 276], "arithmet": [3, 35, 53, 54, 57, 84, 89, 93, 155, 162, 185, 186, 187, 189, 190, 191, 193, 194, 198, 201], "hood": [3, 11], "whenev": [3, 4, 10, 11, 12, 20, 51, 78, 80, 89, 173, 186, 187, 188, 202, 207, 210, 220, 266, 268, 271], "calcul": [3, 12, 16, 18, 27, 33, 36, 45, 51, 53, 54, 55, 56, 57, 59, 61, 63, 65, 66, 67, 69, 70, 80, 84, 86, 89, 93, 96, 97, 105, 107, 108, 110, 111, 115, 118, 119, 120, 135, 138, 139, 142, 145, 161, 162, 163, 164, 166, 167, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 190, 191, 193, 195, 196, 197, 202, 207, 216, 220, 224, 232, 233, 239, 245, 247, 251, 252, 253, 272, 275], "float": [3, 11, 18, 20, 35, 44, 59, 61, 68, 70, 80, 81, 84, 89, 93, 95, 101, 103, 133, 139, 180, 186, 190, 191, 200, 212, 218, 220, 231, 239, 241, 256, 265, 268], "point": [3, 4, 6, 7, 10, 11, 12, 16, 18, 23, 25, 27, 33, 35, 36, 44, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 75, 76, 77, 78, 80, 89, 93, 96, 97, 99, 101, 108, 110, 111, 112, 113, 115, 116, 118, 120, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 146, 168, 171, 177, 181, 182, 184, 186, 187, 190, 191, 193, 195, 196, 200, 202, 206, 207, 208, 216, 218, 219, 220, 232, 235, 238, 239, 241, 245, 247, 249, 250, 251, 252, 253, 254, 256, 265, 266, 268, 271], "valu": [3, 4, 6, 7, 10, 11, 12, 16, 18, 20, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45, 49, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 78, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 105, 108, 110, 111, 112, 113, 115, 116, 118, 130, 133, 135, 139, 142, 145, 150, 152, 155, 158, 160, 161, 162, 163, 166, 167, 169, 170, 171, 176, 177, 179, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 200, 201, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 231, 233, 234, 238, 239, 241, 247, 249, 251, 254, 266, 268, 271], "evalf": [3, 6, 11, 12, 18, 35, 52, 57, 58, 59, 61, 72, 75, 76, 84, 89, 95, 116, 118, 133, 148, 191, 196, 207, 208, 212, 220, 232, 239, 256, 267], "cannot": [3, 4, 6, 7, 10, 11, 12, 15, 19, 20, 25, 28, 29, 30, 31, 32, 33, 35, 45, 50, 52, 53, 55, 57, 58, 59, 63, 65, 66, 68, 70, 75, 80, 82, 85, 87, 89, 91, 93, 103, 161, 169, 171, 183, 184, 186, 191, 193, 195, 196, 197, 200, 207, 208, 212, 213, 215, 216, 218, 219, 220, 221, 229, 231, 232, 233, 238, 242, 245, 246, 270, 271, 272, 276, 277], "without": [3, 4, 6, 7, 10, 11, 12, 18, 20, 25, 29, 31, 32, 35, 52, 53, 54, 55, 57, 61, 78, 80, 81, 84, 86, 89, 103, 104, 116, 122, 124, 129, 130, 166, 171, 175, 176, 177, 183, 186, 189, 190, 193, 196, 200, 202, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 222, 225, 226, 229, 231, 232, 233, 236, 238, 239, 241, 247, 250, 272, 276], "import": [3, 4, 8, 11, 12, 14, 15, 16, 18, 19, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 254, 265, 266, 268, 270, 271, 272, 274, 275, 276, 277], "importerror": 3, "extern": [3, 25, 81, 95, 99, 101, 118, 126, 180, 190, 191, 201, 208, 212, 220, 231, 232], "doc": [3, 4, 6, 7, 8, 12, 24, 35, 44, 52, 53, 69, 81, 131, 168, 190, 192, 213, 216, 231, 232, 234, 236, 238, 245, 249], "latest": [3, 5, 25, 34, 234, 236, 239], "mean": [3, 4, 6, 7, 10, 11, 12, 18, 19, 20, 31, 36, 45, 52, 53, 54, 55, 71, 78, 80, 81, 83, 84, 87, 89, 93, 107, 166, 168, 171, 176, 180, 183, 186, 187, 188, 190, 193, 195, 199, 200, 210, 212, 213, 216, 218, 219, 220, 221, 222, 224, 225, 231, 238, 249, 265, 266, 268, 270, 271, 272, 276, 277], "did": [3, 7, 19, 53, 80, 93, 107, 123, 171, 193, 197, 208, 218, 229, 239, 268, 270, 276], "explain": [3, 4, 6, 7, 18, 34, 49, 53, 61, 71, 76, 127, 187, 190, 193, 195, 197, 207], "ones": [3, 4, 10, 20, 25, 35, 44, 49, 53, 78, 80, 83, 84, 86, 89, 92, 93, 116, 139, 160, 166, 189, 193, 203, 213, 216, 221, 227, 233, 241, 245, 249, 272, 275], "typic": [3, 4, 10, 11, 20, 49, 59, 61, 78, 93, 103, 108, 113, 117, 175, 184, 186, 188, 193, 197, 210, 232, 233, 249], "directli": [3, 4, 6, 10, 11, 12, 16, 18, 19, 20, 25, 29, 30, 33, 34, 35, 44, 52, 53, 55, 59, 64, 84, 86, 89, 93, 116, 152, 164, 169, 176, 179, 186, 187, 189, 190, 191, 195, 196, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 231, 232, 233, 234, 235, 236, 266, 277], "git": [3, 8], "repositori": [3, 5, 7, 25], "vast": [3, 80, 192], "wrap": [3, 4, 6, 28, 29, 30, 31, 35, 42, 53, 59, 81, 94, 180, 184, 186, 189, 190, 193, 200, 203, 219, 225, 232, 236, 239, 241, 271], "addition": [3, 6, 10, 53, 128, 164, 184, 193, 200, 220, 229, 236, 248], "ci": [3, 7, 61, 78, 200, 275], "wish": [3, 6, 12, 20, 25, 35, 53, 54, 57, 78, 93, 161, 175, 184, 235, 239, 266, 270, 272, 277], "local": [3, 26, 28, 29, 30, 53, 55, 78, 95, 123, 125, 178, 187, 193, 218, 231], "improv": [3, 4, 10, 19, 20, 53, 78, 126, 186, 190, 193, 194, 196, 197, 199, 201, 216, 219, 225, 256, 266, 272], "perform": [3, 10, 11, 12, 15, 16, 18, 20, 32, 34, 35, 36, 44, 45, 48, 52, 53, 54, 56, 57, 59, 66, 70, 77, 80, 87, 89, 93, 94, 109, 111, 118, 120, 126, 130, 131, 133, 150, 151, 160, 163, 166, 181, 184, 188, 189, 190, 193, 195, 196, 201, 202, 203, 207, 212, 213, 216, 218, 219, 220, 221, 232, 238, 245, 246, 248, 251, 256, 265, 266, 270, 271, 276], "gmpy2": [3, 190, 191], "wrapper": [3, 10, 11, 20, 29, 31, 35, 45, 53, 61, 89, 130, 178, 180, 189, 190, 193, 200, 207, 216, 219, 220, 232, 236, 238], "gmp": 3, "multipl": [3, 4, 6, 10, 11, 12, 14, 18, 20, 23, 29, 30, 31, 33, 34, 35, 36, 42, 44, 45, 49, 52, 53, 54, 58, 59, 61, 63, 68, 71, 73, 78, 80, 82, 83, 84, 86, 89, 90, 93, 95, 100, 103, 107, 118, 126, 133, 134, 150, 151, 152, 156, 163, 165, 168, 171, 172, 173, 176, 179, 183, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 200, 205, 206, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 226, 229, 233, 234, 235, 236, 238, 239, 241, 245, 249, 265, 266, 268, 269, 271, 272, 277], "larg": [3, 4, 6, 12, 18, 44, 45, 53, 54, 63, 78, 80, 92, 93, 107, 112, 130, 133, 146, 171, 175, 185, 190, 191, 193, 196, 199, 200, 201, 207, 210, 212, 220, 225, 232, 239, 241, 247, 265, 270, 276], "integ": [3, 6, 7, 10, 11, 12, 18, 20, 22, 23, 28, 29, 30, 33, 35, 36, 42, 44, 45, 46, 47, 49, 52, 54, 55, 56, 57, 58, 60, 61, 63, 66, 77, 78, 80, 81, 82, 83, 84, 86, 89, 90, 93, 95, 96, 103, 105, 155, 160, 162, 163, 164, 166, 168, 176, 178, 180, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 205, 206, 207, 209, 210, 212, 213, 216, 218, 219, 220, 224, 225, 226, 232, 233, 235, 238, 241, 266, 268, 271, 275, 276], "faster": [3, 18, 35, 38, 53, 61, 84, 93, 94, 107, 109, 111, 112, 130, 189, 190, 191, 193, 195, 196, 197, 201, 203, 207, 212, 213, 216, 217, 219, 232, 235], "int": [3, 6, 7, 10, 11, 12, 18, 19, 20, 27, 33, 35, 45, 53, 54, 55, 58, 59, 61, 62, 69, 78, 80, 81, 83, 84, 89, 90, 93, 95, 101, 103, 146, 150, 151, 160, 176, 178, 179, 180, 185, 186, 190, 191, 195, 196, 197, 200, 202, 203, 205, 216, 217, 220, 232, 236, 238, 241, 268, 270, 271, 275, 276], "core": [3, 4, 5, 6, 11, 12, 15, 18, 19, 20, 31, 33, 35, 44, 54, 59, 60, 62, 70, 84, 88, 93, 95, 164, 165, 188, 190, 191, 192, 193, 195, 196, 197, 200, 207, 208, 212, 213, 216, 220, 230, 231, 232, 238, 239, 243, 255, 256, 268, 271], "oper": [3, 5, 6, 11, 18, 19, 20, 27, 31, 35, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 61, 63, 71, 73, 76, 78, 83, 84, 86, 88, 93, 95, 103, 104, 107, 111, 112, 120, 124, 130, 133, 138, 142, 143, 147, 149, 150, 151, 152, 157, 158, 161, 163, 164, 165, 166, 175, 176, 178, 182, 187, 188, 189, 190, 191, 193, 195, 196, 197, 200, 203, 205, 208, 209, 211, 212, 216, 218, 219, 222, 223, 224, 225, 231, 232, 235, 238, 239, 245, 252, 255, 261, 267, 268, 269, 271, 276], "poli": [3, 11, 12, 52, 53, 54, 58, 59, 61, 62, 69, 75, 80, 84, 86, 89, 93, 133, 187, 188, 192, 193, 195, 196, 197, 199, 202, 215, 216, 218, 219, 231], "refer": [3, 4, 5, 7, 11, 12, 16, 19, 20, 21, 25, 29, 30, 31, 33, 35, 37, 39, 41, 42, 44, 45, 46, 47, 51, 54, 56, 58, 59, 61, 63, 68, 69, 70, 73, 75, 79, 81, 82, 83, 88, 90, 94, 96, 101, 103, 104, 106, 108, 110, 111, 113, 115, 116, 118, 126, 128, 131, 133, 134, 135, 136, 137, 139, 143, 145, 147, 148, 149, 152, 154, 155, 163, 164, 166, 170, 175, 176, 177, 178, 179, 181, 183, 190, 192, 197, 200, 202, 203, 205, 208, 211, 212, 214, 216, 217, 218, 220, 226, 235, 237, 238, 239, 241, 245, 248, 249, 253, 256, 259, 260, 261, 262, 263, 268, 272, 273, 276], "domain": [3, 6, 10, 11, 16, 20, 33, 34, 53, 54, 56, 58, 59, 61, 72, 74, 75, 78, 80, 86, 89, 90, 93, 100, 103, 116, 133, 187, 189, 192, 193, 195, 197, 198, 214, 215, 216, 218, 220, 272, 277], "No": [3, 6, 7, 12, 34, 53, 61, 68, 83, 93, 104, 116, 161, 186, 196, 202, 203, 212, 213, 218, 219, 220, 225, 229, 235, 236, 238, 265, 277], "mani": [3, 4, 6, 11, 12, 14, 16, 18, 19, 20, 23, 25, 33, 34, 35, 36, 41, 44, 49, 53, 54, 55, 57, 59, 61, 65, 78, 80, 83, 84, 89, 93, 94, 111, 112, 116, 118, 126, 129, 130, 133, 150, 166, 174, 184, 187, 189, 190, 191, 193, 195, 204, 207, 208, 210, 212, 213, 216, 217, 218, 219, 220, 224, 233, 238, 265, 266, 268, 269, 270, 271, 275, 276, 277], "algorithm": [3, 6, 11, 12, 18, 23, 33, 37, 38, 40, 43, 44, 45, 47, 49, 51, 52, 53, 54, 57, 58, 59, 65, 70, 78, 80, 83, 86, 89, 90, 93, 104, 130, 153, 171, 176, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 201, 204, 205, 208, 209, 211, 212, 213, 216, 218, 219, 220, 226, 235, 238, 257, 266, 271, 272, 276], "simplif": [3, 11, 12, 18, 28, 30, 32, 33, 35, 53, 55, 58, 59, 78, 84, 89, 95, 109, 116, 130, 133, 150, 166, 176, 196, 201, 211, 216, 218, 219, 255, 256, 258, 265, 267, 269, 270], "factor": [3, 10, 11, 12, 36, 44, 45, 52, 53, 54, 57, 58, 59, 61, 78, 80, 89, 93, 96, 103, 133, 135, 143, 147, 150, 162, 166, 171, 172, 173, 187, 190, 191, 192, 194, 195, 196, 203, 209, 210, 212, 213, 218, 220, 224, 235, 248, 251, 270, 272], "matric": [3, 6, 11, 17, 18, 31, 35, 53, 54, 80, 90, 92, 103, 110, 111, 112, 116, 120, 130, 133, 135, 138, 139, 141, 149, 150, 160, 165, 176, 184, 185, 189, 195, 200, 201, 208, 210, 212, 213, 216, 218, 219, 221, 223, 233, 234, 261, 267, 269, 270], "thu": [3, 4, 10, 11, 12, 16, 23, 31, 38, 44, 45, 53, 54, 55, 59, 61, 76, 78, 80, 84, 87, 89, 92, 93, 104, 115, 120, 126, 130, 171, 176, 188, 193, 195, 197, 201, 207, 210, 212, 233, 238, 239, 249, 250, 268, 271, 276, 277], "speed": [3, 6, 30, 35, 44, 53, 54, 57, 84, 93, 94, 105, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 133, 134, 137, 140, 175, 176, 179, 184, 185, 197, 200, 201, 207, 212, 216, 232, 235, 238, 271, 272], "non": [3, 4, 11, 12, 18, 20, 26, 31, 33, 36, 43, 46, 52, 53, 54, 58, 59, 60, 61, 62, 63, 66, 67, 68, 80, 82, 83, 84, 85, 86, 89, 90, 92, 107, 111, 113, 118, 120, 124, 128, 129, 133, 150, 155, 165, 166, 168, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 203, 207, 208, 210, 212, 213, 215, 216, 218, 219, 220, 221, 224, 225, 226, 231, 233, 238, 241, 251, 271, 276, 277], "who": [3, 4, 6, 16, 20, 54, 55, 133, 184, 193, 200, 269], "abl": [3, 4, 6, 11, 16, 18, 20, 34, 35, 44, 49, 53, 54, 55, 64, 72, 80, 86, 89, 93, 100, 116, 128, 130, 131, 133, 134, 187, 190, 197, 216, 219, 231, 248, 270, 275, 277], "experi": [3, 118, 219, 220], "design": [3, 4, 6, 10, 11, 13, 15, 19, 20, 22, 24, 31, 36, 43, 53, 89, 92, 95, 133, 134, 190, 194, 200, 205, 210, 216, 219, 270, 271, 275], "interfac": [3, 7, 11, 23, 33, 53, 81, 110, 126, 135, 161, 180, 182, 184, 190, 193, 198, 219, 232, 233, 262], "ipython": [3, 6, 10, 11, 12, 25, 81, 133, 180, 239, 243, 244, 274, 275], "jupyt": [3, 10, 11, 20, 239, 243], "notebook": [3, 11, 20, 25, 81, 180, 239, 274, 275], "init_sess": [3, 81, 275], "usual": [3, 10, 11, 12, 16, 18, 34, 36, 44, 52, 53, 54, 71, 78, 80, 89, 126, 152, 164, 171, 181, 183, 184, 187, 188, 190, 191, 193, 199, 200, 201, 207, 210, 216, 219, 220, 221, 225, 226, 233, 235, 239, 245, 253, 265, 268, 271, 275, 276], "flag": [3, 4, 14, 20, 33, 35, 44, 45, 49, 51, 53, 66, 68, 80, 83, 84, 85, 89, 93, 116, 150, 186, 191, 193, 196, 197, 200, 201, 202, 208, 212, 213, 216, 218, 219, 226, 231, 232, 238, 241, 265, 276], "auto_symbol": [3, 81, 95], "auto_int_to_integ": [3, 81], "qt": 3, "consol": [3, 4, 12, 53, 81, 180, 186, 275], "express": [3, 4, 6, 7, 11, 14, 15, 18, 19, 20, 22, 28, 29, 30, 31, 32, 33, 45, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 66, 68, 69, 73, 76, 77, 78, 80, 81, 84, 87, 88, 89, 92, 93, 94, 96, 103, 104, 106, 107, 112, 113, 116, 120, 126, 128, 129, 130, 131, 133, 134, 141, 145, 149, 150, 154, 155, 158, 161, 163, 164, 165, 166, 168, 169, 171, 173, 175, 176, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 239, 241, 245, 246, 248, 250, 251, 252, 253, 257, 258, 259, 263, 266, 267, 268, 269, 270, 272, 275, 276, 277], "mathjax": [3, 7, 81, 180, 275], "preview": [3, 34, 234, 263], "save": [3, 11, 33, 53, 89, 93, 186, 199, 218, 235], "viewer": [3, 7, 34, 200, 234], "parser": [3, 86, 95, 126, 133, 231], "modul": [3, 4, 5, 6, 7, 10, 11, 12, 15, 18, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 43, 45, 53, 54, 56, 58, 59, 61, 65, 69, 73, 76, 79, 80, 81, 83, 86, 87, 88, 89, 94, 95, 96, 98, 99, 101, 104, 107, 116, 117, 122, 126, 128, 129, 133, 135, 138, 140, 141, 153, 156, 169, 170, 171, 172, 181, 184, 186, 191, 192, 194, 197, 198, 200, 204, 207, 210, 214, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 247, 249, 251, 252, 253, 254, 255, 261, 263, 265, 268, 270, 276, 277], "parse_expr": [3, 10, 18, 95], "mathematca": 3, "parse_mathematica": [3, 10, 95], "maxima": [3, 23, 95, 219], "parse_maxima": [3, 95], "antlr": [3, 95, 116], "runtim": [3, 11, 35, 53, 112, 263], "autolev": [3, 118, 126], "call": [3, 4, 6, 7, 11, 12, 15, 16, 18, 19, 20, 22, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 42, 43, 44, 45, 51, 53, 54, 56, 57, 58, 60, 61, 63, 68, 69, 71, 76, 78, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 95, 96, 97, 103, 107, 116, 118, 120, 127, 130, 131, 156, 158, 161, 166, 171, 176, 181, 183, 184, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 207, 208, 210, 212, 213, 215, 216, 218, 219, 220, 222, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 245, 247, 248, 251, 253, 266, 268, 270, 271, 272, 275, 276, 277], "antlr4": [3, 95], "awar": [3, 4, 6, 11, 12, 19, 33, 53, 57, 83, 89, 210, 220, 239], "must": [3, 4, 5, 6, 10, 11, 12, 18, 19, 27, 28, 29, 30, 35, 44, 45, 47, 49, 51, 52, 53, 54, 55, 58, 59, 61, 63, 66, 69, 72, 75, 76, 78, 80, 83, 84, 85, 86, 89, 92, 93, 96, 97, 99, 101, 103, 104, 111, 112, 116, 118, 126, 128, 129, 130, 131, 133, 146, 161, 163, 166, 175, 176, 184, 185, 186, 187, 188, 191, 193, 195, 196, 200, 201, 208, 209, 210, 212, 213, 216, 218, 219, 220, 224, 225, 231, 232, 233, 234, 235, 236, 238, 239, 242, 268, 270, 271, 275, 276], "match": [3, 4, 6, 10, 12, 18, 20, 44, 45, 52, 53, 66, 78, 80, 84, 89, 115, 142, 167, 175, 176, 189, 196, 212, 213, 216, 217, 220, 229, 231, 233, 238, 239, 250, 266], "wa": [3, 4, 10, 12, 14, 18, 20, 42, 44, 45, 47, 53, 54, 55, 61, 66, 89, 93, 95, 107, 108, 116, 118, 120, 130, 131, 161, 171, 183, 184, 185, 187, 193, 195, 196, 197, 199, 200, 209, 210, 212, 216, 218, 220, 229, 231, 234, 236, 238, 239, 266, 268, 270, 271, 274], "compil": [3, 35, 81, 94, 107, 133, 180, 200, 212, 225, 231, 232, 233, 255, 270], "4": [3, 7, 12, 14, 16, 18, 19, 20, 22, 23, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 75, 76, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 103, 104, 105, 109, 116, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 133, 134, 135, 138, 142, 145, 150, 160, 161, 163, 164, 165, 166, 167, 169, 175, 176, 177, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 225, 226, 231, 232, 235, 238, 239, 245, 247, 248, 249, 251, 253, 254, 265, 266, 268, 270, 271, 272, 276, 277], "clang": [3, 95], "bind": [3, 35, 200, 232], "parse_c": 3, "lfortran": [3, 95], "fortran": [3, 11, 16, 20, 33, 94, 95, 107, 133, 185, 233, 257, 263, 275], "satisfi": [3, 7, 10, 18, 23, 30, 31, 33, 36, 41, 44, 49, 53, 54, 58, 61, 63, 76, 78, 82, 83, 89, 93, 112, 130, 150, 155, 187, 188, 193, 195, 196, 200, 206, 207, 208, 213, 216, 217, 218, 219, 220, 226, 271, 276], "implement": [3, 6, 7, 10, 11, 13, 15, 19, 20, 23, 24, 27, 28, 29, 30, 33, 34, 35, 36, 38, 43, 44, 45, 50, 53, 54, 56, 58, 59, 61, 64, 66, 73, 74, 76, 77, 79, 80, 83, 84, 85, 89, 93, 94, 95, 107, 116, 126, 135, 137, 138, 141, 150, 151, 159, 160, 162, 170, 175, 177, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 204, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 224, 225, 235, 237, 238, 239, 242, 252, 255, 263, 266, 270, 276], "dpll": 3, "But": [3, 4, 7, 10, 11, 12, 20, 52, 53, 61, 67, 77, 84, 89, 93, 154, 155, 166, 171, 176, 187, 188, 193, 197, 207, 209, 210, 212, 213, 216, 218, 219, 225, 235, 238, 239, 247, 266, 268, 270, 271, 276], "sat": [3, 29], "solver": [3, 6, 11, 29, 61, 89, 93, 115, 126, 133, 134, 189, 192, 212, 213, 217, 231, 255, 256, 267, 269], "ask": [3, 6, 11, 12, 15, 18, 19, 29, 30, 31, 32, 53, 65, 78, 116, 171, 187, 206, 212, 219, 238, 268], "pycosat": 3, "forc": [3, 12, 16, 19, 20, 53, 57, 59, 63, 69, 78, 80, 83, 96, 97, 99, 108, 110, 111, 115, 118, 120, 121, 122, 123, 126, 128, 129, 130, 133, 154, 155, 169, 181, 184, 186, 188, 190, 209, 212, 213, 218, 231, 251, 253, 275, 276], "pysat": 3, "minisat": 3, "minisat22": 3, "heavi": [3, 220, 271], "primarili": [3, 11, 18, 35, 53, 59, 93, 96, 165, 196, 198, 232, 235, 241, 248], "support": [3, 4, 5, 6, 7, 10, 11, 12, 20, 25, 27, 28, 29, 30, 33, 34, 35, 45, 53, 57, 60, 61, 63, 77, 80, 86, 89, 93, 94, 95, 96, 97, 99, 100, 103, 107, 116, 133, 161, 176, 183, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 200, 205, 206, 207, 208, 212, 216, 217, 218, 219, 220, 221, 225, 229, 231, 232, 233, 239, 249, 251, 266, 268, 271, 275], "give": [3, 4, 6, 12, 14, 18, 19, 20, 28, 30, 35, 36, 42, 44, 45, 46, 47, 52, 53, 54, 55, 58, 59, 61, 63, 65, 66, 68, 69, 77, 78, 80, 81, 83, 86, 89, 92, 93, 94, 96, 99, 103, 116, 133, 145, 160, 161, 163, 164, 168, 169, 171, 172, 174, 176, 179, 181, 183, 184, 185, 186, 187, 188, 190, 191, 193, 195, 196, 197, 200, 201, 202, 203, 207, 208, 209, 210, 212, 213, 216, 218, 219, 220, 231, 232, 233, 238, 248, 253, 268, 269, 271, 276, 277], "rudimentari": [3, 20, 193], "text": [3, 4, 6, 7, 11, 20, 25, 35, 44, 54, 58, 59, 61, 71, 78, 81, 84, 89, 93, 131, 171, 180, 186, 187, 200, 207, 213, 216, 219, 220, 231], "pyglet": [3, 200, 262], "pygletplot": [3, 186], "2d": [3, 10, 66, 67, 69, 79, 96, 97, 99, 144, 176, 186, 200, 213, 225, 270], "3d": [3, 10, 27, 37, 66, 67, 96, 144, 167, 181, 186, 248, 250, 251, 252, 253], "evalu": [3, 6, 11, 16, 18, 19, 22, 28, 29, 30, 33, 35, 53, 55, 58, 59, 61, 64, 68, 69, 73, 78, 80, 83, 86, 89, 93, 94, 95, 103, 107, 109, 116, 126, 130, 131, 141, 143, 145, 147, 152, 155, 163, 166, 185, 186, 190, 191, 193, 194, 196, 200, 201, 206, 207, 208, 210, 212, 213, 216, 218, 219, 220, 222, 232, 233, 234, 239, 251, 256, 265, 266, 267, 268, 270, 272], "numer": [3, 6, 10, 11, 12, 14, 16, 18, 22, 23, 31, 33, 35, 52, 53, 58, 61, 65, 69, 73, 76, 89, 93, 95, 99, 100, 101, 103, 110, 111, 112, 116, 118, 126, 130, 134, 138, 145, 148, 163, 170, 175, 184, 186, 190, 191, 193, 194, 195, 196, 199, 200, 209, 210, 212, 216, 218, 219, 225, 231, 232, 238, 239, 256, 265, 268, 272, 276], "variou": [3, 6, 7, 11, 16, 20, 23, 33, 35, 37, 44, 52, 53, 58, 73, 78, 80, 83, 113, 145, 149, 150, 161, 163, 175, 187, 188, 191, 192, 193, 195, 201, 207, 210, 213, 216, 217, 219, 233, 276], "primari": [3, 4, 6, 7, 18, 20, 53, 65, 83, 184, 187, 233, 239], "vehicl": 3, "between": [3, 4, 11, 15, 19, 20, 23, 34, 35, 43, 44, 45, 47, 51, 53, 55, 58, 61, 63, 65, 66, 67, 68, 69, 70, 80, 82, 83, 86, 87, 89, 93, 94, 95, 99, 100, 101, 103, 110, 113, 115, 116, 119, 123, 125, 127, 130, 131, 133, 134, 135, 138, 139, 145, 152, 154, 155, 156, 160, 163, 164, 165, 166, 169, 170, 171, 176, 177, 178, 179, 181, 183, 184, 186, 187, 189, 192, 193, 195, 200, 202, 212, 216, 217, 218, 219, 220, 221, 234, 239, 245, 247, 248, 251, 253, 268], "standard": [3, 7, 10, 11, 12, 18, 20, 23, 35, 53, 57, 59, 61, 76, 78, 80, 81, 82, 83, 87, 89, 93, 94, 95, 106, 143, 147, 176, 181, 187, 190, 191, 193, 200, 203, 208, 212, 213, 216, 219, 220, 233, 239, 242, 248, 253, 265, 268, 276], "wai": [3, 4, 5, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 26, 34, 36, 37, 42, 44, 45, 46, 49, 53, 55, 58, 61, 69, 73, 77, 78, 80, 82, 86, 89, 92, 93, 95, 96, 99, 107, 111, 113, 115, 116, 120, 122, 123, 126, 130, 146, 160, 163, 164, 169, 171, 174, 175, 176, 178, 179, 181, 183, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 207, 210, 212, 213, 216, 217, 219, 221, 222, 225, 226, 229, 233, 235, 238, 239, 242, 245, 248, 249, 250, 251, 253, 265, 266, 268, 269, 270, 271, 276, 277], "principl": [3, 54, 84, 93, 137, 187, 188, 193, 209, 218], "pass": [3, 4, 5, 6, 11, 12, 14, 15, 18, 19, 20, 26, 27, 30, 33, 34, 35, 44, 45, 53, 54, 55, 57, 59, 60, 61, 63, 66, 67, 69, 80, 81, 83, 84, 86, 89, 90, 93, 95, 96, 101, 103, 108, 115, 116, 120, 133, 134, 138, 155, 156, 160, 161, 163, 164, 176, 180, 186, 187, 189, 190, 191, 193, 195, 196, 198, 200, 201, 207, 208, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 231, 232, 233, 234, 236, 238, 239, 241, 244, 245, 265, 266, 271, 275, 276, 277], "appropri": [3, 6, 7, 12, 16, 23, 44, 53, 59, 68, 89, 107, 118, 155, 156, 166, 176, 183, 189, 190, 196, 197, 200, 206, 207, 212, 213, 218, 220, 225, 233, 249, 275], "namespac": [3, 6, 10, 26, 35, 36, 53, 191, 213, 216, 217, 231, 233, 234, 239], "dictionari": [3, 10, 11, 23, 34, 35, 42, 44, 45, 51, 53, 58, 67, 69, 82, 84, 89, 92, 93, 95, 96, 109, 111, 112, 115, 116, 118, 120, 123, 128, 130, 156, 166, 176, 184, 186, 188, 191, 193, 195, 196, 198, 200, 207, 212, 213, 216, 217, 218, 219, 220, 224, 226, 231, 235, 238, 239, 245, 265, 272], "third": [3, 4, 14, 35, 44, 45, 53, 61, 63, 67, 103, 163, 169, 183, 188, 196, 210, 216, 219, 220, 236, 238, 252, 266, 271], "argument": [3, 4, 5, 6, 11, 15, 18, 19, 20, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 45, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 69, 70, 78, 80, 81, 83, 84, 86, 89, 92, 93, 95, 96, 101, 103, 111, 115, 116, 128, 129, 133, 140, 143, 147, 149, 152, 155, 160, 161, 163, 164, 165, 166, 174, 180, 181, 185, 186, 187, 188, 190, 191, 193, 195, 196, 199, 200, 201, 202, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 224, 225, 231, 232, 233, 234, 235, 236, 238, 239, 241, 248, 249, 251, 265, 266, 271, 272, 276], "default": [3, 4, 6, 7, 11, 12, 18, 20, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 43, 44, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 75, 80, 81, 83, 84, 86, 89, 90, 93, 94, 95, 96, 97, 99, 101, 103, 105, 107, 108, 109, 110, 111, 112, 116, 130, 139, 156, 158, 161, 163, 164, 166, 172, 175, 176, 178, 179, 180, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 225, 226, 231, 232, 233, 235, 236, 238, 239, 241, 245, 265, 266, 270, 272, 275, 276], "translat": [3, 10, 35, 44, 53, 62, 64, 68, 70, 94, 95, 103, 106, 110, 111, 123, 125, 131, 183, 186, 200, 216, 218, 232, 233, 239, 241, 249], "numpi": [3, 6, 10, 11, 20, 25, 35, 53, 76, 81, 88, 94, 101, 116, 133, 150, 160, 189, 200, 220, 225, 232, 233, 239, 265, 268], "By": [3, 12, 18, 20, 23, 28, 30, 35, 43, 52, 53, 55, 57, 58, 61, 67, 68, 72, 76, 78, 83, 84, 89, 92, 93, 94, 95, 96, 97, 101, 108, 161, 166, 186, 188, 190, 191, 193, 195, 196, 197, 199, 200, 202, 207, 209, 212, 213, 216, 218, 219, 220, 224, 226, 227, 231, 234, 238, 239, 251, 265, 270, 271, 276], "produc": [3, 6, 7, 11, 19, 20, 23, 34, 44, 53, 54, 66, 80, 83, 89, 176, 190, 195, 196, 200, 207, 216, 217, 218, 220, 229, 231, 235, 236, 238, 275], "behavior": [3, 4, 10, 11, 12, 20, 44, 53, 61, 80, 95, 106, 107, 126, 130, 161, 187, 188, 195, 196, 200, 201, 205, 207, 209, 212, 229, 232, 234, 238, 239, 268], "backward": [3, 8, 16, 33, 53, 84, 89, 200, 238, 276], "scipi": [3, 11, 35, 53, 61, 107, 133, 160, 200, 220, 232, 239, 265, 274], "special": [3, 6, 11, 13, 18, 20, 26, 27, 45, 53, 54, 56, 57, 58, 60, 68, 71, 78, 80, 84, 89, 133, 150, 155, 181, 187, 190, 192, 193, 194, 195, 200, 209, 210, 212, 216, 217, 218, 220, 231, 232, 233, 236, 238, 239, 248, 251, 253, 257, 258, 266, 267, 271], "cupi": [3, 94], "cuda": [3, 94], "gpu": [3, 94, 133], "jax": [3, 94, 239], "xla": [3, 94], "program": [3, 7, 12, 18, 35, 37, 45, 133, 171, 185, 233, 235, 268, 270, 274, 276], "tpu": [3, 94], "compatibli": 3, "tensorflow": [3, 239], "learn": [3, 5, 7, 22, 89, 131, 184, 209, 219, 265, 268, 269, 270, 274], "numexpr": [3, 239], "fast": [3, 18, 35, 53, 80, 88, 89, 93, 138, 191, 192, 193, 194, 195, 196, 197, 203, 207, 216, 218, 235, 238, 239], "alreadi": [3, 4, 10, 12, 18, 20, 23, 25, 44, 45, 53, 54, 62, 63, 66, 67, 69, 78, 80, 84, 90, 93, 99, 104, 108, 116, 130, 135, 161, 163, 166, 181, 183, 184, 186, 189, 190, 193, 195, 199, 203, 209, 210, 212, 216, 219, 220, 226, 249, 251, 266, 268, 269, 270, 274, 275, 276, 277], "number": [3, 4, 5, 6, 7, 10, 11, 14, 15, 18, 20, 23, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 58, 59, 61, 63, 66, 67, 68, 69, 70, 72, 79, 80, 81, 82, 83, 84, 86, 89, 90, 92, 93, 94, 95, 97, 99, 101, 103, 104, 105, 107, 111, 112, 115, 116, 120, 130, 131, 133, 139, 142, 145, 146, 149, 150, 151, 152, 154, 155, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 174, 175, 176, 179, 180, 181, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 196, 197, 200, 202, 206, 207, 208, 209, 210, 212, 213, 216, 218, 219, 220, 221, 225, 226, 231, 233, 235, 238, 241, 245, 247, 248, 250, 251, 253, 256, 265, 266, 268, 270, 271, 272, 276], "languag": [3, 7, 11, 12, 16, 20, 35, 59, 89, 95, 107, 116, 133, 200, 205, 220, 232, 233, 268, 270, 272, 274, 276], "valid": [3, 6, 7, 10, 18, 19, 20, 28, 30, 32, 33, 34, 35, 46, 52, 53, 58, 59, 69, 79, 89, 93, 109, 110, 111, 116, 118, 131, 135, 139, 158, 163, 173, 176, 180, 184, 190, 193, 196, 199, 200, 208, 212, 213, 216, 218, 219, 220, 239, 272, 276], "rather": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 26, 31, 35, 36, 44, 45, 46, 53, 57, 59, 64, 69, 71, 78, 83, 84, 86, 89, 93, 95, 115, 123, 133, 146, 160, 164, 166, 175, 183, 187, 190, 193, 196, 198, 203, 210, 213, 215, 216, 219, 220, 235, 238, 239, 242, 253, 268, 270, 271], "string": [3, 4, 6, 7, 11, 12, 20, 28, 34, 35, 37, 42, 53, 54, 55, 56, 57, 60, 66, 76, 81, 82, 83, 86, 89, 93, 95, 96, 99, 101, 107, 108, 110, 113, 137, 146, 150, 160, 164, 168, 174, 175, 176, 179, 180, 181, 186, 189, 191, 195, 200, 201, 207, 212, 216, 220, 221, 224, 225, 226, 231, 232, 233, 238, 239, 241, 243, 245, 246, 248, 267, 268, 271, 275], "repres": [3, 10, 11, 12, 15, 18, 19, 20, 27, 29, 31, 34, 35, 36, 37, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 58, 59, 61, 63, 64, 66, 68, 69, 70, 75, 76, 79, 80, 82, 83, 84, 86, 89, 93, 95, 96, 97, 100, 101, 103, 108, 110, 111, 113, 115, 116, 118, 119, 120, 121, 124, 126, 128, 129, 130, 131, 133, 135, 137, 138, 140, 152, 153, 155, 159, 160, 163, 164, 166, 168, 171, 172, 173, 174, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 198, 200, 202, 203, 206, 207, 208, 210, 212, 213, 216, 218, 219, 220, 222, 224, 225, 226, 233, 235, 238, 239, 245, 247, 251, 253, 266, 268, 270, 271, 276, 277], "take": [3, 4, 5, 7, 10, 11, 12, 16, 18, 19, 20, 23, 30, 33, 35, 36, 38, 43, 44, 48, 52, 53, 54, 55, 59, 61, 65, 66, 76, 80, 82, 83, 84, 89, 93, 94, 95, 96, 99, 103, 107, 111, 113, 115, 116, 118, 130, 131, 133, 135, 149, 152, 155, 156, 160, 162, 163, 164, 165, 166, 168, 171, 174, 175, 176, 177, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 193, 196, 197, 200, 203, 206, 207, 208, 209, 210, 212, 213, 216, 218, 219, 220, 222, 225, 231, 232, 234, 235, 238, 239, 245, 246, 247, 265, 266, 268, 270, 271, 272, 276], "within": [3, 7, 11, 18, 33, 34, 35, 53, 59, 66, 69, 83, 84, 86, 93, 94, 96, 123, 161, 175, 176, 183, 184, 188, 190, 196, 198, 208, 216, 218, 219, 220, 231, 232, 241], "case": [3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 23, 33, 34, 35, 36, 38, 41, 44, 45, 49, 52, 53, 54, 55, 57, 58, 59, 61, 65, 68, 69, 70, 71, 75, 78, 80, 83, 84, 86, 89, 90, 93, 94, 95, 97, 103, 107, 110, 111, 116, 118, 119, 120, 121, 127, 129, 131, 133, 139, 150, 156, 161, 163, 165, 166, 171, 172, 179, 183, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 224, 226, 229, 231, 233, 234, 236, 238, 239, 240, 241, 242, 245, 247, 248, 266, 270, 271, 272, 275, 276, 277], "subpackag": [3, 255], "f2py": [3, 35, 94, 232, 233], "ufuncifi": [3, 35, 232, 256], "cython": [3, 35, 94, 133, 232], "codegen": [3, 20, 94, 200, 232, 237, 257, 263], "relat": [3, 4, 6, 7, 11, 19, 28, 30, 31, 33, 36, 37, 43, 44, 51, 55, 58, 59, 60, 69, 75, 78, 80, 84, 89, 93, 99, 106, 120, 123, 126, 127, 133, 135, 140, 148, 150, 176, 179, 182, 183, 185, 186, 187, 193, 195, 196, 197, 199, 200, 204, 206, 207, 210, 212, 213, 215, 216, 218, 219, 220, 238, 252, 256, 258, 276], "reli": [3, 10, 12, 35, 89, 94, 100, 193, 199, 200, 207, 212, 219, 234, 239, 272], "llvm": 3, "gcc": [3, 233], "ifort": 3, "therefor": [3, 4, 6, 20, 23, 36, 44, 49, 53, 57, 61, 69, 82, 93, 103, 181, 184, 185, 186, 190, 193, 196, 200, 216, 219, 220, 221, 226, 245, 246, 248, 249, 251, 253], "aesara": [3, 10, 35, 133, 256, 263], "aesaracod": [3, 10, 35, 94, 200], "aeseara": 3, "previous": [3, 4, 10, 52, 124, 181, 199, 212, 220, 251], "theano": [3, 10, 133, 275], "return": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 78, 80, 82, 83, 84, 85, 86, 89, 90, 92, 93, 95, 96, 99, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 124, 128, 130, 131, 133, 135, 137, 138, 139, 140, 142, 143, 147, 150, 151, 152, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 243, 245, 247, 249, 251, 265, 266, 271, 272, 275, 276, 277], "graph": [3, 6, 11, 45, 61, 82, 89, 94, 189, 200, 219, 238, 271, 275], "object": [3, 4, 6, 7, 11, 12, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 48, 52, 53, 55, 58, 59, 61, 63, 64, 65, 66, 68, 69, 70, 78, 80, 83, 84, 86, 87, 89, 94, 95, 96, 97, 101, 103, 104, 107, 108, 110, 111, 112, 113, 115, 116, 120, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 139, 140, 141, 149, 150, 152, 160, 161, 165, 166, 168, 169, 172, 173, 175, 176, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 200, 202, 203, 206, 207, 208, 209, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 231, 232, 233, 234, 235, 238, 239, 242, 243, 247, 248, 249, 254, 255, 265, 266, 268, 270, 271, 272, 275, 276], "llvmlite": 3, "llvmjitcod": 3, "jit": [3, 209], "around": [3, 4, 6, 7, 10, 11, 12, 19, 20, 25, 33, 42, 45, 53, 54, 55, 57, 59, 62, 69, 73, 92, 93, 99, 108, 126, 130, 134, 184, 190, 193, 195, 200, 202, 207, 211, 213, 216, 219, 220, 231, 245, 246, 266, 268, 270], "llvm_callabl": 3, "callabl": [3, 12, 35, 44, 89, 95, 151, 195, 200, 201, 212, 229, 232, 233, 238, 239, 240], "unlik": [3, 6, 11, 12, 18, 19, 32, 54, 80, 89, 93, 95, 116, 183, 193, 200, 213, 216, 219, 235, 236, 268, 270, 271, 272, 275], "two": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 27, 33, 34, 35, 36, 38, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 78, 80, 82, 83, 84, 86, 89, 93, 94, 96, 97, 99, 100, 103, 104, 107, 108, 110, 111, 119, 124, 126, 127, 128, 130, 131, 138, 139, 140, 145, 146, 150, 152, 155, 156, 161, 162, 163, 164, 165, 166, 168, 171, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 222, 225, 235, 238, 239, 245, 247, 249, 250, 251, 253, 265, 266, 269, 271, 272, 276], "tensorflow_cod": 3, "order": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 23, 30, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 63, 66, 69, 70, 72, 75, 78, 80, 81, 82, 83, 84, 89, 90, 93, 94, 95, 96, 97, 103, 104, 107, 111, 115, 116, 117, 118, 119, 127, 128, 129, 130, 131, 139, 143, 147, 150, 160, 161, 162, 163, 164, 165, 166, 171, 175, 176, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 199, 200, 201, 202, 203, 204, 206, 208, 211, 212, 213, 217, 218, 219, 220, 221, 222, 225, 226, 227, 231, 232, 233, 235, 238, 239, 241, 245, 246, 248, 249, 254, 266, 268, 269, 271, 275, 276, 277], "assum": [3, 6, 11, 12, 15, 18, 20, 23, 30, 35, 36, 37, 42, 44, 52, 53, 54, 55, 59, 61, 63, 70, 71, 78, 80, 89, 93, 96, 99, 103, 115, 116, 122, 128, 129, 130, 131, 133, 139, 161, 165, 166, 176, 179, 181, 187, 188, 190, 193, 196, 198, 200, 207, 208, 210, 212, 213, 216, 217, 219, 220, 224, 225, 226, 233, 238, 241, 247, 249, 253, 269, 271, 274, 276, 277], "wurlitz": 3, "allow": [3, 4, 7, 10, 11, 12, 18, 20, 31, 34, 35, 36, 37, 44, 46, 49, 52, 53, 54, 57, 59, 61, 63, 64, 65, 78, 81, 83, 84, 86, 87, 89, 93, 94, 95, 97, 111, 116, 118, 126, 130, 131, 133, 138, 150, 166, 170, 171, 172, 184, 186, 187, 190, 191, 193, 195, 196, 197, 200, 205, 207, 208, 209, 212, 213, 216, 218, 219, 220, 221, 225, 231, 234, 236, 238, 239, 249, 268, 271], "captur": [3, 53, 238], "output": [3, 6, 7, 10, 12, 13, 16, 18, 20, 23, 34, 35, 53, 54, 61, 77, 80, 81, 83, 84, 86, 89, 93, 94, 95, 100, 103, 111, 115, 116, 124, 130, 133, 134, 138, 139, 150, 162, 166, 175, 176, 179, 180, 181, 184, 190, 193, 196, 200, 201, 210, 212, 213, 214, 215, 216, 218, 220, 225, 231, 232, 233, 235, 238, 239, 245, 268, 270, 271, 272, 275, 276, 277], "suit": [3, 4, 7, 18, 20, 23, 34, 186, 196, 229, 231], "stat": [3, 255, 262], "sampl": [3, 8, 16, 44, 56, 101, 150, 186, 200, 220, 266, 270], "At": [3, 10, 18, 20, 23, 33, 49, 59, 61, 80, 93, 96, 97, 107, 171, 175, 184, 195, 210, 239], "least": [3, 4, 7, 10, 14, 18, 31, 33, 35, 44, 53, 59, 65, 77, 78, 80, 89, 93, 94, 111, 146, 160, 168, 187, 188, 190, 191, 193, 195, 196, 207, 209, 212, 216, 218, 219, 220, 233, 276], "random": [3, 6, 10, 37, 42, 44, 45, 51, 54, 63, 66, 67, 88, 89, 93, 150, 162, 186, 193, 200, 230, 231, 234, 238, 256, 262, 268, 272, 276], "pymc": [3, 220], "manipul": [3, 11, 15, 16, 18, 34, 35, 36, 44, 53, 59, 61, 78, 88, 93, 94, 116, 126, 131, 164, 183, 189, 190, 191, 194, 199, 200, 202, 209, 212, 214, 223, 238, 255, 258, 262, 265, 266, 267, 268, 269, 270, 272, 275, 276], "use_symengin": 3, "physic": [3, 6, 16, 35, 46, 89, 93, 96, 97, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 185, 194, 220, 235, 238, 251, 270, 276], "mechan": [3, 20, 53, 76, 80, 96, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 148, 152, 155, 161, 163, 164, 165, 168, 175, 176, 182, 185, 261, 262], "liealgebra": [3, 82], "thing": [3, 4, 6, 7, 10, 11, 12, 13, 18, 19, 20, 24, 31, 35, 43, 44, 45, 53, 55, 65, 81, 82, 83, 84, 89, 94, 107, 113, 116, 130, 133, 150, 166, 171, 183, 184, 197, 199, 207, 208, 209, 212, 216, 219, 224, 234, 236, 238, 265, 266, 268, 270, 271, 272, 275, 276], "configur": [3, 4, 5, 10, 45, 83, 103, 110, 111, 119, 120, 123, 125, 126, 128, 130, 192, 200], "otherwis": [3, 4, 14, 18, 19, 20, 33, 34, 35, 44, 45, 49, 52, 53, 54, 57, 59, 61, 62, 63, 66, 67, 68, 69, 78, 80, 82, 83, 85, 89, 92, 93, 95, 101, 103, 105, 108, 115, 116, 151, 156, 162, 179, 182, 183, 187, 191, 193, 195, 196, 198, 200, 202, 203, 205, 206, 208, 212, 213, 216, 217, 218, 219, 220, 221, 229, 231, 233, 238, 239, 265, 266, 275], "ordinari": [3, 18, 19, 22, 33, 35, 44, 53, 57, 59, 61, 71, 75, 76, 80, 90, 103, 126, 187, 189, 190, 199, 206, 214, 216, 221, 235, 270, 276], "x": [3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 42, 44, 45, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 92, 93, 94, 95, 96, 97, 99, 101, 103, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 138, 140, 141, 142, 143, 144, 146, 147, 150, 155, 156, 161, 163, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 231, 232, 233, 234, 236, 238, 239, 241, 245, 247, 248, 249, 250, 251, 253, 254, 265, 266, 268, 270, 271, 272, 275, 276, 277], "still": [3, 4, 6, 7, 11, 12, 18, 20, 25, 26, 34, 45, 52, 53, 54, 61, 65, 80, 84, 89, 116, 166, 184, 186, 187, 188, 193, 195, 200, 207, 209, 210, 212, 216, 218, 219, 225, 231, 238, 251, 272], "matchpi": 3, "pattern": [3, 10, 11, 12, 18, 20, 53, 78, 80, 83, 84, 95, 160, 190, 210, 212, 216, 218, 266, 271], "anywher": [3, 4, 6, 10, 18, 35, 53, 61, 67, 166, 241, 270], "els": [3, 4, 10, 11, 12, 18, 19, 20, 35, 43, 45, 49, 53, 54, 61, 63, 67, 69, 70, 78, 80, 83, 89, 93, 103, 166, 176, 186, 191, 195, 196, 200, 201, 208, 212, 216, 218, 219, 224, 226, 231, 238, 241, 245, 247, 265, 271], "mathemat": [3, 4, 7, 8, 10, 11, 15, 18, 20, 23, 24, 29, 30, 33, 35, 36, 39, 43, 45, 52, 53, 54, 55, 58, 59, 60, 61, 66, 67, 78, 80, 83, 86, 89, 93, 94, 95, 103, 104, 107, 120, 132, 171, 181, 183, 184, 187, 188, 190, 191, 194, 199, 200, 208, 209, 213, 216, 219, 220, 225, 232, 233, 239, 245, 248, 251, 253, 265, 268, 269, 270, 271, 274, 276], "softwar": [3, 7, 80, 194, 270], "itself": [3, 4, 6, 7, 10, 11, 20, 31, 42, 44, 45, 51, 53, 55, 58, 59, 66, 70, 75, 93, 111, 115, 116, 131, 156, 163, 181, 183, 186, 187, 190, 193, 195, 196, 200, 208, 209, 212, 219, 224, 225, 226, 233, 235, 238, 253, 270], "_sage_": 3, "basic": [3, 4, 5, 6, 7, 10, 11, 18, 20, 27, 29, 34, 35, 36, 41, 44, 48, 51, 52, 56, 59, 69, 71, 76, 77, 78, 83, 84, 87, 88, 90, 103, 110, 116, 128, 129, 131, 133, 134, 140, 150, 164, 171, 174, 181, 182, 184, 186, 187, 189, 191, 192, 193, 195, 197, 198, 200, 201, 207, 212, 213, 216, 217, 218, 219, 220, 231, 233, 238, 239, 243, 250, 251, 252, 258, 266, 267, 268, 269, 274], "beyond": [3, 18, 47, 69, 93, 130, 187, 190, 209, 212, 272], "control": [3, 5, 10, 12, 14, 18, 20, 34, 36, 53, 54, 57, 78, 83, 84, 130, 133, 146, 150, 161, 162, 166, 170, 196, 197, 201, 208, 213, 219, 238, 261, 262, 265], "pytest": [3, 4, 10, 228, 234, 236, 239, 263], "entir": [3, 4, 18, 44, 53, 54, 57, 61, 67, 69, 78, 92, 109, 127, 131, 176, 187, 189, 195, 208, 225, 234, 236, 270, 276], "import_modul": 3, "own": [3, 5, 6, 12, 20, 29, 37, 44, 45, 53, 69, 97, 116, 133, 195, 200, 207, 212, 216, 235, 238, 239, 270], "runner": [3, 231], "access": [3, 6, 7, 11, 12, 18, 20, 28, 29, 30, 35, 53, 61, 82, 83, 86, 89, 94, 97, 103, 104, 110, 111, 115, 116, 134, 175, 176, 181, 184, 186, 190, 191, 193, 195, 212, 216, 220, 221, 224, 232, 233, 248, 251, 271, 275], "script": [3, 5, 6, 11, 26, 61, 180, 232], "cloudpickl": 3, "effect": [3, 6, 10, 20, 25, 44, 46, 53, 70, 78, 80, 84, 89, 96, 116, 118, 130, 138, 166, 176, 186, 190, 193, 197, 199, 216, 268], "pickl": 3, "util": [3, 4, 5, 6, 7, 23, 33, 40, 42, 44, 45, 58, 59, 64, 65, 66, 69, 83, 84, 88, 93, 94, 136, 170, 173, 189, 192, 193, 197, 200, 212, 213, 214, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 257, 261], "test_pickl": 3, "py": [3, 4, 5, 6, 12, 18, 25, 34, 53, 64, 78, 80, 89, 144, 146, 186, 189, 191, 197, 200, 207, 210, 216, 217, 226, 229, 231, 236, 239], "pdf": [3, 7, 8, 24, 33, 34, 44, 54, 56, 58, 75, 80, 89, 93, 96, 97, 101, 186, 194, 199, 200, 203, 209, 212, 213, 216, 220, 238, 245], "view": [3, 6, 8, 11, 35, 36, 53, 89, 96, 168, 171, 184, 186, 193, 200, 216, 219, 233, 235, 238], "host": [3, 7], "onlin": [3, 6, 111, 213, 238], "sympy_benchmark": 3, "readm": 3, "yourself": [3, 20, 35, 118, 234, 266], "reproduc": [3, 196, 231, 276], "add": [3, 4, 5, 6, 10, 11, 12, 15, 18, 27, 29, 33, 35, 42, 44, 49, 54, 57, 60, 68, 70, 78, 82, 86, 89, 93, 96, 99, 108, 116, 133, 144, 150, 160, 165, 166, 169, 183, 184, 186, 189, 190, 191, 193, 195, 196, 197, 200, 201, 210, 212, 213, 216, 217, 219, 220, 222, 224, 225, 226, 234, 239, 243, 256, 266, 268, 271, 275, 276], "asv": 3, "airspe": 3, "veloc": [3, 107, 108, 110, 111, 113, 118, 119, 120, 123, 124, 125, 127, 130, 131, 133, 140, 168, 171, 175, 176, 179, 181, 184, 251, 253], "describ": [4, 6, 7, 10, 12, 18, 19, 20, 34, 36, 43, 44, 45, 47, 48, 51, 52, 53, 54, 58, 61, 63, 68, 69, 78, 80, 84, 89, 92, 93, 103, 107, 110, 111, 113, 115, 116, 119, 120, 121, 123, 125, 126, 128, 129, 130, 131, 145, 166, 170, 171, 175, 176, 181, 183, 184, 187, 190, 193, 195, 201, 207, 210, 212, 213, 216, 219, 220, 224, 233, 238, 239, 245, 246, 251, 266], "properli": [4, 11, 20, 34, 53, 59, 65, 78, 89, 112, 116, 128, 143, 147, 150, 164, 188, 190, 200, 216, 219, 229, 233, 239, 272, 277], "current": [4, 7, 10, 12, 18, 27, 30, 33, 34, 35, 36, 37, 44, 47, 48, 50, 51, 52, 53, 55, 59, 61, 63, 65, 68, 73, 76, 78, 80, 82, 84, 89, 93, 95, 96, 100, 107, 110, 116, 126, 160, 165, 166, 170, 174, 184, 186, 187, 188, 189, 191, 193, 196, 197, 199, 200, 201, 207, 210, 212, 213, 215, 216, 217, 218, 219, 220, 226, 231, 232, 233, 235, 248, 272, 277], "activ": [4, 5, 13, 118, 186, 229, 234, 236], "updat": [4, 10, 12, 25, 53, 120, 146, 156, 159, 160, 162, 185, 193, 196, 200, 213, 226, 236], "continu": [4, 6, 7, 10, 16, 19, 20, 33, 35, 43, 45, 47, 53, 58, 59, 61, 78, 81, 84, 93, 100, 101, 161, 164, 180, 191, 193, 196, 213, 215, 216, 224, 267], "someon": [4, 216, 235, 269], "warn": [4, 6, 12, 20, 53, 54, 68, 95, 176, 184, 188, 216, 218, 229, 231, 233, 237, 238, 263, 272], "screen": [4, 11, 81, 180, 184, 231, 275], "indic": [4, 6, 12, 15, 18, 23, 33, 34, 35, 36, 37, 42, 44, 45, 46, 48, 49, 51, 52, 53, 56, 57, 58, 61, 63, 68, 69, 78, 80, 83, 84, 86, 89, 92, 93, 104, 115, 120, 150, 161, 163, 164, 166, 171, 175, 176, 185, 189, 190, 191, 195, 196, 197, 200, 207, 208, 209, 211, 212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 238, 272], "remov": [4, 10, 18, 28, 29, 44, 47, 51, 53, 57, 59, 68, 69, 78, 83, 84, 89, 93, 96, 99, 108, 123, 125, 130, 150, 166, 191, 193, 196, 198, 199, 200, 212, 213, 216, 218, 219, 221, 222, 232, 233, 234, 236, 238, 239, 265, 276], "futur": [4, 12, 18, 19, 35, 36, 53, 78, 80, 84, 89, 95, 115, 118, 126, 130, 166, 170, 182, 186, 188, 199, 200, 212, 216, 225, 231, 234, 236, 239, 262, 271, 277], "chanc": [4, 12, 19, 53, 81, 210, 220, 271], "break": [4, 6, 10, 20, 34, 35, 45, 53, 54, 93, 183, 197, 200, 208, 238], "opportun": [4, 6, 212], "messag": [4, 10, 54, 81, 234, 236], "wrong": [4, 7, 10, 44, 53, 54, 61, 63, 89, 176, 190, 214, 216, 234, 268, 272], "answer": [4, 18, 20, 23, 44, 53, 57, 75, 78, 80, 83, 89, 93, 171, 193, 197, 209, 210, 212, 218, 220, 235, 241, 270, 272, 276], "made": [4, 7, 10, 11, 12, 18, 20, 47, 49, 53, 54, 59, 62, 63, 66, 69, 70, 80, 83, 89, 93, 95, 116, 130, 133, 184, 187, 191, 193, 195, 196, 201, 207, 208, 209, 212, 216, 218, 219, 220, 233, 238, 241, 253, 271], "lightli": 4, "fix": [4, 6, 9, 10, 35, 44, 46, 49, 51, 54, 61, 65, 82, 96, 97, 99, 108, 110, 113, 118, 133, 150, 155, 159, 162, 166, 171, 176, 179, 183, 184, 186, 190, 193, 195, 196, 197, 200, 206, 210, 218, 220, 238, 245, 246], "worth": [4, 18, 20, 176, 249, 251], "pain": 4, "frustrat": 4, "go": [4, 5, 6, 7, 20, 25, 34, 35, 44, 54, 59, 78, 111, 116, 118, 131, 133, 134, 160, 171, 179, 186, 195, 196, 207, 210, 216, 268, 270, 271, 274, 276], "seek": [4, 218], "stabl": [4, 6, 20, 53, 81, 89, 95, 99, 103, 265], "done": [4, 6, 10, 11, 12, 16, 20, 29, 30, 32, 33, 34, 35, 44, 46, 51, 53, 54, 55, 58, 61, 64, 65, 78, 80, 84, 89, 93, 116, 118, 124, 131, 133, 152, 161, 162, 163, 166, 168, 169, 176, 181, 183, 184, 186, 187, 189, 193, 197, 199, 200, 201, 209, 212, 213, 216, 218, 219, 220, 225, 226, 231, 232, 235, 239, 248, 249, 265, 268, 270, 271, 272], "exist": [4, 10, 11, 16, 18, 20, 33, 34, 37, 44, 53, 57, 63, 65, 68, 69, 70, 71, 79, 80, 83, 89, 93, 99, 156, 181, 184, 186, 187, 188, 189, 193, 195, 200, 207, 208, 210, 213, 216, 218, 219, 231, 239, 249, 270, 272, 277], "necessarili": [4, 6, 18, 31, 53, 54, 55, 78, 80, 83, 187, 188, 195, 196, 198, 212, 216, 218, 219], "supplant": 4, "old": [4, 10, 11, 12, 53, 54, 55, 81, 130, 135, 170, 171, 180, 186, 187, 191, 192, 200, 201, 212, 216, 219, 221, 265], "sometim": [4, 6, 7, 11, 12, 18, 20, 34, 35, 53, 58, 61, 77, 78, 103, 126, 130, 158, 166, 184, 187, 190, 195, 200, 202, 207, 209, 213, 216, 218, 229, 238, 265, 272], "alongsid": [4, 10, 20, 86], "newer": [4, 11, 183, 218], "solveset": [4, 20, 133, 198, 214, 215, 218, 277], "superior": [4, 200], "replac": [4, 6, 10, 11, 12, 18, 33, 35, 44, 52, 53, 54, 57, 58, 59, 61, 63, 67, 80, 83, 84, 89, 93, 94, 95, 107, 109, 133, 155, 161, 176, 187, 193, 196, 197, 201, 207, 209, 210, 212, 216, 218, 219, 226, 227, 238, 239, 241, 265, 274], "older": [4, 7, 11, 76, 116, 190, 200, 218], "solv": [4, 6, 10, 11, 12, 13, 16, 18, 20, 21, 35, 37, 49, 52, 53, 61, 66, 78, 80, 84, 85, 89, 96, 98, 99, 110, 111, 112, 116, 119, 120, 123, 125, 126, 128, 130, 133, 169, 189, 192, 193, 197, 198, 199, 202, 212, 213, 214, 215, 216, 217, 220, 261, 266, 267, 270, 272, 275], "remain": [4, 10, 11, 20, 29, 30, 35, 44, 45, 47, 49, 53, 54, 59, 78, 84, 93, 95, 104, 116, 165, 181, 183, 184, 195, 196, 197, 206, 209, 210, 216, 217, 220, 222, 226, 235, 238, 239, 248, 253, 265, 268, 270, 271, 272], "intact": [4, 10, 35, 232], "cogniz": 4, "properti": [4, 11, 15, 20, 29, 30, 33, 34, 35, 36, 37, 41, 42, 44, 45, 46, 47, 48, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 78, 80, 84, 86, 89, 93, 96, 97, 99, 100, 103, 108, 110, 111, 113, 115, 131, 133, 135, 137, 140, 141, 144, 145, 150, 151, 152, 154, 155, 162, 164, 166, 168, 171, 173, 174, 176, 177, 178, 181, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 199, 202, 203, 206, 207, 208, 210, 213, 216, 219, 220, 225, 226, 231, 233, 234, 245, 247, 248, 249, 251, 253, 272], "attr": [4, 35], "imposs": [4, 6, 10, 11, 20, 53, 190, 209, 216, 217, 229, 268, 276], "later": [4, 10, 16, 35, 44, 78, 84, 107, 112, 113, 118, 120, 121, 128, 130, 131, 133, 140, 175, 183, 190, 193, 199, 200, 201, 210, 212, 216, 235, 248, 265, 266, 268, 270, 271, 276], "unsur": [4, 6], "about": [4, 5, 6, 7, 10, 11, 12, 13, 16, 18, 19, 20, 24, 25, 27, 28, 30, 31, 34, 35, 44, 45, 46, 47, 53, 57, 59, 61, 63, 64, 65, 67, 68, 69, 73, 75, 79, 80, 82, 89, 93, 96, 97, 103, 107, 108, 109, 110, 111, 112, 113, 115, 116, 120, 130, 131, 161, 163, 164, 166, 170, 175, 176, 183, 184, 185, 187, 189, 190, 195, 197, 200, 202, 207, 212, 213, 214, 216, 220, 224, 225, 231, 232, 233, 234, 235, 236, 245, 246, 248, 251, 252, 265, 267, 268, 270, 271, 272, 276], "mark": [4, 6, 7, 101, 139, 151, 213, 229, 234, 236], "explicitli": [4, 10, 11, 18, 20, 35, 44, 45, 53, 54, 56, 59, 61, 66, 70, 86, 89, 94, 103, 116, 175, 176, 186, 188, 190, 191, 193, 196, 200, 212, 216, 236, 268, 272, 275, 277], "privat": [4, 6, 53, 54, 116, 186, 233], "experiment": [4, 212, 263], "With": [4, 12, 19, 25, 35, 52, 53, 57, 78, 93, 119, 120, 121, 127, 129, 130, 139, 163, 166, 184, 186, 187, 188, 190, 191, 198, 199, 200, 207, 212, 221, 238, 270, 271], "being": [4, 7, 10, 11, 12, 14, 18, 19, 31, 33, 35, 44, 45, 51, 52, 53, 54, 59, 61, 63, 65, 66, 69, 70, 78, 83, 84, 89, 90, 93, 96, 97, 99, 107, 115, 116, 118, 130, 131, 133, 134, 162, 171, 178, 181, 183, 184, 185, 186, 187, 189, 190, 195, 196, 197, 200, 209, 210, 212, 213, 216, 217, 218, 219, 220, 226, 229, 235, 236, 238, 239, 241, 245, 249, 253, 270, 272], "decid": [4, 6, 16, 18, 19, 20, 34, 52, 84, 107, 130, 159, 170, 190, 193, 195, 196, 200, 216, 219, 233, 272], "reason": [4, 7, 10, 11, 14, 18, 19, 20, 35, 45, 51, 53, 57, 61, 78, 81, 87, 89, 111, 112, 116, 118, 123, 126, 130, 137, 171, 180, 184, 190, 193, 194, 197, 200, 208, 210, 212, 216, 218, 219, 229, 235, 236, 238, 239, 265, 266, 270, 271, 272], "confus": [4, 7, 10, 11, 18, 53, 58, 83, 139, 184, 188, 196, 219, 265, 266, 268], "unnecessari": [4, 6, 7, 31, 35, 196, 199, 220, 231, 269], "redund": [4, 18, 44, 51, 83, 89, 216, 233], "usabl": [4, 190, 191, 200, 219, 270], "breakag": 4, "serious": 4, "taken": [4, 11, 35, 36, 41, 44, 51, 52, 53, 58, 59, 61, 70, 84, 93, 103, 105, 107, 108, 130, 133, 163, 169, 176, 179, 185, 186, 190, 195, 196, 203, 207, 209, 210, 219, 220, 225, 233, 238, 245], "commun": [4, 7, 25, 185, 216, 218, 220, 272], "inde": [4, 16, 20, 41, 44, 52, 78, 187, 210, 216, 227, 231, 270], "second": [4, 7, 10, 11, 12, 16, 18, 19, 20, 23, 26, 30, 33, 35, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 66, 67, 69, 80, 89, 93, 94, 96, 97, 101, 103, 104, 107, 108, 110, 111, 116, 120, 123, 125, 126, 127, 129, 131, 137, 139, 140, 143, 147, 152, 155, 160, 161, 163, 164, 169, 171, 173, 175, 176, 177, 183, 184, 186, 189, 190, 193, 194, 195, 196, 200, 202, 210, 212, 213, 216, 218, 219, 220, 221, 222, 238, 239, 245, 247, 248, 249, 261, 265, 270, 271, 272], "know": [4, 6, 7, 10, 11, 12, 18, 19, 20, 28, 30, 34, 45, 53, 54, 57, 65, 70, 78, 80, 89, 93, 113, 116, 134, 160, 164, 168, 169, 171, 175, 176, 183, 184, 186, 196, 197, 199, 200, 210, 212, 216, 218, 219, 220, 234, 238, 239, 249, 265, 266, 268, 269, 270, 271, 274, 276], "count": [4, 7, 11, 45, 52, 53, 54, 58, 63, 83, 89, 92, 93, 161, 196, 208, 209, 212, 219, 220, 226, 235, 238], "basi": [4, 53, 55, 82, 86, 89, 108, 123, 125, 151, 160, 161, 163, 166, 168, 171, 174, 175, 176, 181, 183, 185, 187, 189, 191, 192, 196, 199, 210, 212, 218, 219, 221, 226, 247, 248, 251, 274], "exact": [4, 11, 12, 18, 20, 31, 52, 53, 54, 57, 63, 68, 75, 78, 80, 84, 89, 96, 133, 160, 190, 191, 193, 196, 207, 212, 216, 218, 231, 241, 268, 270, 275], "rule": [4, 7, 10, 16, 18, 20, 35, 44, 45, 52, 53, 61, 76, 78, 80, 83, 84, 89, 96, 110, 116, 147, 150, 171, 176, 181, 184, 185, 197, 199, 200, 201, 206, 210, 211, 212, 216, 226, 238, 239, 251, 252, 268, 271], "doesn": [4, 6, 10, 12, 20, 35, 77, 116, 120, 130, 133, 184, 188, 197, 199, 209, 212, 219, 277], "constitut": [4, 7, 11, 80, 93, 200], "yet": [4, 5, 10, 12, 18, 20, 28, 30, 33, 34, 57, 58, 80, 130, 146, 187, 190, 191, 195, 197, 199, 208, 216, 219, 266], "fulli": [4, 6, 18, 44, 53, 70, 80, 83, 95, 97, 116, 133, 166, 183, 190, 191, 197, 207, 220, 226, 242], "codifi": 4, "clean": [4, 231], "distinct": [4, 7, 11, 14, 18, 20, 35, 44, 45, 53, 54, 58, 66, 78, 83, 89, 93, 115, 183, 190, 195, 196, 200, 208, 210, 276], "well": [4, 6, 7, 10, 11, 12, 14, 16, 18, 20, 25, 31, 33, 34, 35, 36, 37, 45, 52, 53, 58, 59, 61, 80, 84, 87, 89, 99, 104, 107, 116, 118, 120, 121, 130, 156, 165, 168, 169, 175, 183, 185, 186, 187, 189, 190, 191, 193, 195, 200, 207, 208, 209, 210, 212, 216, 218, 219, 231, 232, 248, 249, 253, 268, 270, 271, 276], "categor": [4, 89, 187], "issu": [4, 7, 9, 10, 11, 12, 19, 20, 23, 25, 26, 33, 52, 53, 70, 80, 83, 89, 94, 112, 126, 146, 182, 185, 194, 195, 197, 200, 208, 209, 218, 219, 231, 233, 235, 236, 238, 241, 267, 268, 271, 276], "here": [4, 6, 7, 10, 11, 14, 16, 18, 19, 20, 23, 24, 25, 29, 30, 35, 36, 37, 42, 43, 44, 45, 51, 52, 53, 54, 55, 57, 58, 59, 61, 69, 70, 71, 75, 76, 78, 80, 83, 84, 89, 92, 93, 94, 95, 96, 99, 103, 107, 111, 116, 117, 118, 123, 124, 125, 128, 130, 131, 133, 134, 156, 161, 166, 175, 180, 181, 183, 184, 186, 187, 190, 191, 193, 195, 196, 197, 200, 201, 207, 209, 210, 212, 213, 216, 218, 219, 220, 224, 225, 232, 233, 235, 236, 238, 239, 249, 251, 253, 264, 265, 266, 268, 270, 271, 272, 274, 275, 276], "guidelin": [4, 8, 216], "exhaust": [4, 18, 210, 238, 269], "alwai": [4, 6, 7, 10, 11, 12, 18, 19, 20, 25, 27, 34, 44, 45, 52, 53, 54, 55, 57, 59, 61, 63, 65, 68, 69, 77, 78, 80, 83, 84, 89, 92, 93, 99, 103, 104, 115, 116, 118, 120, 124, 134, 166, 168, 171, 172, 181, 183, 187, 188, 190, 191, 193, 195, 196, 200, 201, 202, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 227, 231, 233, 238, 239, 245, 246, 251, 266, 268, 269, 270, 271, 276], "posit": [4, 10, 11, 12, 18, 19, 20, 23, 28, 29, 30, 32, 34, 35, 36, 37, 42, 44, 45, 46, 48, 49, 52, 53, 54, 55, 57, 58, 59, 61, 63, 65, 66, 69, 78, 80, 82, 83, 84, 85, 89, 90, 92, 93, 96, 97, 99, 103, 105, 110, 113, 116, 118, 120, 123, 125, 127, 130, 131, 133, 135, 138, 140, 144, 161, 164, 166, 177, 178, 179, 181, 183, 184, 187, 188, 189, 190, 191, 193, 195, 196, 197, 200, 205, 206, 208, 209, 210, 212, 213, 216, 218, 219, 220, 221, 226, 238, 245, 247, 248, 249, 251, 253, 254, 272, 276, 277], "convent": [4, 6, 7, 9, 20, 44, 45, 49, 52, 53, 54, 58, 59, 61, 63, 68, 78, 80, 83, 95, 96, 97, 99, 103, 106, 118, 133, 135, 139, 160, 161, 163, 168, 169, 181, 186, 200, 216, 217, 219, 220, 226, 253, 268, 276], "defin": [4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 26, 27, 29, 30, 33, 35, 36, 37, 43, 44, 45, 48, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 76, 78, 80, 81, 84, 86, 89, 93, 97, 101, 107, 108, 110, 113, 115, 116, 118, 119, 123, 125, 126, 127, 131, 133, 134, 137, 143, 145, 147, 152, 155, 161, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 202, 203, 206, 207, 208, 210, 212, 213, 216, 218, 219, 220, 221, 225, 226, 232, 233, 234, 239, 240, 241, 245, 246, 247, 248, 249, 250, 251, 253, 254, 268, 270, 276], "And": [4, 10, 12, 19, 20, 22, 29, 44, 45, 52, 53, 54, 61, 78, 83, 84, 89, 92, 110, 127, 138, 184, 186, 188, 196, 197, 200, 208, 212, 213, 219, 220, 238, 239, 249, 276], "aren": [4, 10, 11, 20, 35, 53, 116, 199, 219], "don": [4, 10, 12, 19, 20, 30, 35, 78, 89, 94, 95, 107, 116, 175, 183, 184, 190, 200, 210, 219, 229, 234, 253, 265, 266, 270, 271, 276], "form": [4, 7, 10, 11, 16, 18, 20, 27, 30, 31, 32, 33, 35, 36, 43, 44, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 69, 73, 75, 76, 78, 80, 82, 84, 86, 88, 89, 93, 95, 96, 97, 99, 100, 103, 107, 108, 110, 111, 112, 115, 116, 118, 120, 123, 125, 126, 127, 128, 129, 131, 133, 134, 143, 146, 147, 148, 150, 160, 161, 164, 166, 168, 171, 174, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 209, 210, 212, 213, 217, 218, 219, 220, 223, 225, 226, 231, 232, 238, 245, 247, 248, 250, 251, 253, 258, 259, 266, 270, 271, 272, 275, 276, 277], "equival": [4, 10, 11, 12, 14, 18, 19, 20, 27, 31, 35, 36, 43, 44, 49, 53, 54, 57, 59, 61, 78, 80, 89, 93, 95, 100, 101, 103, 116, 126, 149, 160, 163, 166, 169, 176, 180, 184, 186, 187, 188, 190, 191, 195, 196, 200, 207, 208, 212, 216, 218, 219, 221, 222, 225, 226, 235, 239, 241, 242, 258], "intern": [4, 10, 11, 12, 18, 19, 33, 35, 36, 44, 53, 56, 57, 58, 61, 69, 70, 73, 79, 85, 89, 93, 97, 99, 101, 118, 130, 139, 160, 161, 171, 187, 189, 191, 192, 194, 196, 198, 200, 210, 212, 214, 217, 218, 219, 220, 224, 226, 229, 233, 235, 238, 271, 275], "Such": [4, 6, 18, 35, 53, 69, 120, 187, 188, 195, 201, 209, 210, 212, 265, 271], "prefix": [4, 35, 53, 89, 93, 170, 173, 174, 190, 193, 197, 213, 216, 232, 233, 238, 261], "underscor": [4, 6, 10, 53, 89, 216, 226, 234], "_": [4, 5, 6, 7, 10, 12, 14, 16, 20, 29, 30, 34, 41, 42, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 66, 67, 68, 69, 78, 80, 83, 84, 85, 86, 87, 89, 91, 93, 95, 103, 128, 131, 133, 145, 166, 171, 175, 180, 183, 185, 191, 196, 199, 200, 201, 203, 207, 208, 209, 210, 212, 213, 216, 217, 218, 221, 238, 247, 249, 275], "univers": [4, 11, 35, 185, 194, 208, 213, 218, 219], "adher": [4, 7, 78], "codebas": [4, 10, 18, 190, 229], "anyth": [4, 6, 7, 10, 12, 20, 33, 35, 53, 54, 64, 68, 89, 116, 140, 150, 197, 200, 206, 208, 212, 216, 218, 232, 238, 241, 268], "were": [4, 7, 10, 11, 12, 14, 18, 20, 34, 45, 47, 53, 54, 59, 70, 78, 84, 89, 93, 94, 95, 107, 115, 130, 175, 181, 184, 187, 193, 194, 195, 196, 199, 200, 201, 209, 212, 218, 238, 239, 241, 268, 270, 271, 275, 276], "incorrect": [4, 7, 10, 19, 20, 44, 53, 63, 93, 101, 179, 191, 216, 219, 232, 235, 236], "bug": [4, 6, 18, 20, 23, 25, 33, 54, 79, 190, 208, 216, 219, 268], "despit": [4, 53, 276], "sai": [4, 7, 11, 12, 16, 18, 36, 43, 52, 53, 54, 82, 107, 111, 116, 126, 133, 171, 183, 184, 187, 188, 189, 193, 195, 199, 200, 207, 210, 213, 216, 218, 219, 220, 239, 265, 270, 276], "befor": [4, 6, 10, 11, 12, 18, 19, 20, 23, 25, 35, 44, 45, 47, 49, 53, 54, 55, 61, 81, 84, 89, 93, 95, 96, 97, 107, 112, 116, 118, 119, 120, 123, 124, 130, 133, 135, 166, 175, 180, 184, 188, 190, 195, 196, 200, 201, 207, 208, 212, 213, 216, 218, 219, 220, 227, 231, 234, 238, 239, 248, 269, 270, 271, 276], "recent": [4, 10, 12, 15, 18, 19, 20, 23, 28, 29, 30, 35, 36, 45, 53, 54, 57, 61, 63, 80, 83, 84, 85, 86, 87, 89, 91, 92, 95, 103, 185, 187, 190, 191, 193, 196, 199, 207, 208, 216, 218, 219, 229, 232, 234, 236, 238, 239, 241, 268, 272], "best": [4, 8, 12, 23, 24, 25, 35, 53, 61, 78, 80, 94, 165, 186, 197, 200, 209, 210, 212, 216, 219, 224, 232, 264, 268, 269, 275, 276], "determin": [4, 7, 11, 12, 14, 16, 18, 19, 20, 23, 28, 30, 31, 32, 33, 35, 36, 37, 44, 53, 54, 55, 56, 57, 59, 63, 64, 66, 68, 69, 80, 81, 82, 86, 89, 93, 95, 96, 97, 103, 109, 112, 113, 115, 125, 131, 134, 145, 158, 160, 162, 163, 166, 169, 171, 176, 181, 186, 187, 188, 189, 193, 195, 200, 206, 207, 208, 210, 212, 213, 215, 216, 218, 219, 220, 224, 236, 238, 245, 251, 254, 268, 276], "someth": [4, 6, 7, 10, 11, 12, 18, 19, 20, 33, 35, 53, 54, 57, 63, 78, 83, 84, 89, 93, 107, 116, 117, 133, 159, 172, 175, 186, 190, 191, 199, 207, 208, 212, 216, 219, 231, 233, 239, 265, 268, 270, 271, 274], "re": [4, 12, 20, 32, 33, 35, 44, 45, 53, 54, 57, 60, 61, 78, 80, 89, 176, 178, 181, 187, 193, 200, 201, 202, 208, 209, 210, 216, 218, 231, 247, 249, 266, 268, 271], "harm": 4, "even": [4, 6, 7, 11, 12, 15, 18, 20, 28, 29, 30, 32, 35, 36, 41, 44, 45, 52, 53, 54, 57, 58, 59, 61, 65, 69, 78, 80, 83, 84, 89, 92, 93, 104, 116, 126, 151, 162, 169, 171, 176, 185, 188, 189, 190, 191, 193, 195, 196, 197, 200, 201, 207, 208, 209, 210, 212, 213, 216, 218, 219, 227, 231, 253, 265, 266, 268, 270, 271, 276, 277], "might": [4, 6, 10, 11, 12, 14, 18, 19, 20, 33, 53, 57, 59, 66, 75, 78, 86, 89, 93, 95, 107, 116, 117, 133, 146, 176, 183, 186, 190, 191, 196, 197, 200, 201, 208, 209, 210, 212, 213, 218, 219, 220, 232, 233, 236, 238, 241, 265, 268, 270, 271, 273, 276], "while": [4, 6, 10, 11, 12, 18, 20, 22, 23, 34, 35, 36, 44, 45, 46, 49, 52, 53, 54, 55, 57, 58, 59, 63, 67, 69, 77, 83, 84, 89, 93, 94, 95, 96, 99, 108, 112, 116, 120, 130, 150, 171, 176, 181, 187, 195, 198, 200, 216, 219, 231, 233, 235, 238, 253, 265, 271, 272], "peopl": [4, 6, 56, 61, 80, 89, 171, 220], "upgrad": [4, 26], "immedi": [4, 18, 44, 53, 78, 83, 166, 187, 190, 232, 239], "fire": 4, "uncondition": 4, "correct": [4, 6, 7, 10, 12, 19, 20, 35, 42, 44, 50, 52, 53, 57, 59, 77, 78, 80, 89, 93, 103, 116, 130, 183, 184, 193, 196, 207, 213, 216, 218, 219, 224, 232, 238, 268, 275], "question": [4, 6, 7, 16, 18, 52, 55, 63, 70, 78, 80, 83, 93, 107, 168, 171, 175, 187, 190, 195, 210, 219, 238, 241], "read": [4, 6, 7, 9, 10, 20, 45, 59, 78, 93, 97, 133, 183, 184, 189, 190, 191, 197, 200, 213, 226, 227, 235, 242, 269, 275, 276], "previou": [4, 6, 10, 20, 37, 42, 43, 44, 45, 48, 53, 59, 80, 84, 92, 108, 130, 168, 183, 184, 193, 206, 213, 217, 221, 238, 269, 271, 276], "unchang": [4, 10, 11, 20, 44, 45, 53, 80, 89, 103, 196, 200, 206, 209, 212, 219, 265], "dure": [4, 10, 12, 26, 35, 53, 54, 84, 89, 93, 95, 108, 111, 133, 134, 183, 195, 209, 218, 219, 236, 238], "period": [4, 6, 10, 23, 33, 53, 54, 59, 78, 93, 130, 140, 162, 169, 195, 200, 203, 206, 215, 219, 220, 238], "silenc": [4, 229, 236], "filterwarn": [4, 10], "caus": [4, 7, 10, 11, 20, 25, 53, 54, 57, 59, 89, 116, 124, 130, 183, 200, 209, 216, 217, 218, 235, 236, 272], "anoth": [4, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 23, 31, 34, 35, 45, 50, 52, 53, 54, 55, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 78, 80, 86, 89, 93, 96, 97, 113, 127, 155, 171, 173, 176, 179, 183, 184, 186, 188, 190, 191, 193, 195, 196, 197, 200, 201, 207, 208, 210, 216, 218, 219, 220, 232, 233, 239, 245, 248, 249, 253, 265, 268, 270, 271, 276, 277], "over": [4, 7, 8, 10, 12, 15, 20, 24, 27, 33, 34, 35, 36, 44, 45, 48, 52, 53, 54, 55, 56, 57, 58, 67, 69, 76, 78, 82, 83, 86, 89, 90, 93, 96, 97, 105, 116, 133, 134, 145, 161, 164, 166, 170, 171, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 203, 205, 207, 212, 213, 215, 216, 218, 219, 220, 221, 224, 225, 234, 238, 239, 245, 247, 251, 254, 270, 274, 276], "defeat": [4, 216], "three": [4, 11, 12, 14, 16, 18, 20, 27, 31, 35, 44, 45, 46, 49, 53, 54, 58, 61, 63, 67, 68, 69, 78, 82, 83, 84, 96, 97, 115, 119, 122, 123, 124, 139, 161, 163, 168, 176, 179, 183, 184, 185, 186, 187, 188, 191, 193, 196, 200, 210, 212, 213, 218, 219, 220, 231, 245, 246, 251, 254, 268, 271, 276], "natur": [4, 10, 12, 18, 27, 31, 35, 36, 44, 53, 54, 58, 59, 87, 93, 116, 168, 170, 171, 187, 190, 191, 193, 195, 197, 200, 209, 213, 219, 220, 238, 254, 271, 276], "heavili": [4, 207, 217], "consider": [4, 19, 53, 94, 107, 190, 199, 208, 213, 216, 248], "easi": [4, 11, 41, 45, 53, 61, 78, 94, 113, 120, 126, 183, 187, 190, 195, 200, 207, 210, 213, 216, 219, 224, 225, 226, 265, 266, 268, 269, 270, 271, 272, 275], "account": [4, 11, 59, 89, 203, 212, 216], "nonetheless": [4, 54, 168, 212, 216], "deprecat": 4, "won": [4, 12, 20, 35, 212, 219, 271], "until": [4, 16, 18, 23, 26, 45, 47, 53, 54, 63, 80, 89, 93, 130, 184, 193, 196, 209, 216, 268], "come": [4, 25, 44, 49, 51, 52, 53, 59, 61, 78, 80, 89, 94, 107, 116, 118, 128, 169, 184, 187, 190, 193, 195, 196, 210, 213, 216, 219, 229, 231, 236, 239, 268, 270, 271, 274, 276], "minimum": [4, 10, 23, 33, 35, 44, 45, 47, 49, 53, 54, 57, 59, 89, 107, 111, 118, 150, 175, 186, 188, 193, 219, 220, 234, 266], "longer": [4, 6, 12, 17, 53, 63, 93, 120, 130, 188, 193, 200, 209, 212, 238, 241, 268, 276], "especi": [4, 6, 20, 23, 52, 89, 107, 116, 133, 160, 175, 184, 212, 216, 218, 231, 265, 266], "hard": [4, 8, 11, 18, 45, 54, 89, 93, 116, 166, 190, 200, 207, 216, 219, 268, 270], "migrat": 4, "lengthen": 4, "impos": [4, 97], "signific": [4, 12, 18, 35, 53, 54, 57, 80, 89, 107, 131, 160, 190, 219, 239, 271], "mainten": [4, 30], "burden": [4, 200], "keep": [4, 6, 12, 15, 20, 49, 53, 54, 57, 58, 61, 78, 89, 111, 119, 127, 131, 150, 166, 186, 189, 190, 191, 196, 207, 208, 210, 212, 216, 218, 226, 253, 266, 271], "firstli": [4, 10, 18, 20, 210], "regular": [4, 10, 12, 18, 19, 36, 41, 53, 54, 57, 61, 69, 75, 76, 80, 93, 116, 160, 190, 197, 216, 226, 231, 275, 276], "schedul": 4, "Being": [4, 49, 63, 69, 190], "assur": [4, 93, 196], "suffici": [4, 6, 18, 34, 35, 44, 45, 49, 53, 89, 171, 203, 207, 216, 220, 235, 276], "regardless": [4, 6, 10, 20, 45, 53, 80, 93, 193, 208, 212, 238, 248, 253, 276], "often": [4, 6, 11, 18, 19, 20, 34, 35, 36, 43, 53, 61, 63, 65, 78, 80, 89, 93, 94, 103, 126, 130, 175, 183, 184, 187, 188, 190, 193, 196, 201, 207, 208, 213, 216, 220, 238, 265, 270, 271, 272, 276], "happen": [4, 6, 10, 11, 16, 18, 19, 20, 23, 27, 35, 45, 52, 53, 57, 65, 68, 77, 161, 165, 171, 187, 193, 195, 196, 199, 208, 212, 216, 220, 239, 249, 268, 275, 276], "secondli": [4, 20, 210], "rigor": [4, 61, 184, 233], "semant": [4, 11, 18, 86], "surfac": [4, 59, 61, 67, 78, 97, 135, 139, 166, 186, 212, 245, 252], "enough": [4, 6, 23, 44, 53, 57, 80, 89, 92, 93, 103, 116, 133, 191, 193, 200, 216, 266, 268], "encod": [4, 10, 37, 45, 51, 54, 83, 192, 200, 231, 235, 238], "backport": 4, "prior": [4, 10, 25, 179, 196, 212, 272], "extrem": [4, 44, 57, 63, 69, 80, 86, 99, 130, 184, 212, 220], "accur": [4, 12, 16, 20, 33, 44, 53, 57, 58, 75, 80, 100, 186, 207, 265, 272], "model": [4, 11, 57, 83, 93, 103, 112, 118, 120, 121, 122, 138, 196, 209, 220], "final": [4, 6, 7, 10, 18, 20, 34, 45, 52, 53, 59, 61, 78, 80, 83, 89, 93, 97, 101, 110, 111, 118, 123, 125, 126, 128, 131, 146, 158, 161, 163, 164, 166, 168, 169, 171, 176, 183, 184, 187, 190, 193, 195, 202, 208, 209, 210, 212, 213, 216, 218, 219, 226, 238, 239, 269, 270, 271], "temptat": [4, 209, 276], "fudg": 4, "earli": [4, 53, 93, 155, 213], "acceler": [4, 94, 113, 118, 123, 125, 130, 131, 133, 169, 176, 179, 181, 204, 235, 253], "myst": [4, 7], "checkbox": 4, "tag": [4, 200, 218], "nest": [4, 53, 55, 59, 61, 80, 84, 103, 188, 190, 193, 200, 210, 212, 215, 219, 220, 221, 222, 224, 227, 238, 239, 271], "ensur": [4, 12, 20, 25, 53, 54, 57, 85, 89, 131, 195, 196, 200, 214, 231, 236, 239], "realli": [4, 10, 11, 16, 18, 19, 20, 53, 65, 93, 118, 168, 190, 199, 201, 207, 209, 210, 212, 216, 232, 241, 268, 270], "per": [4, 54, 89, 94, 99, 140, 176, 181, 186, 191, 196, 197, 245, 248, 250, 253], "everywher": [4, 11, 12, 53, 61, 78, 103, 181, 253], "doctest": [4, 6, 7, 12, 20, 46, 61, 89, 93, 118, 155, 166, 190, 196, 216, 231, 234, 236, 275], "sympy_deprecation_warn": [4, 229, 234, 236], "write": [4, 8, 10, 11, 16, 18, 19, 21, 26, 35, 42, 53, 54, 60, 61, 78, 80, 86, 133, 146, 183, 184, 188, 193, 195, 200, 209, 210, 213, 216, 219, 225, 231, 232, 233, 239, 269, 270, 271, 276], "multilin": [4, 200], "deprecated_since_vers": [4, 229, 234, 236], "active_deprecations_target": [4, 229, 234, 236], "target": [4, 6, 11, 33, 34, 35, 53, 93, 109, 146, 150, 151, 209, 212, 215, 218, 219, 229, 232, 233, 236, 276], "stacklevel": [4, 229, 234, 236], "line": [4, 6, 10, 11, 12, 16, 18, 25, 34, 35, 44, 45, 49, 54, 63, 64, 65, 67, 68, 69, 70, 75, 78, 80, 81, 82, 89, 93, 96, 101, 104, 116, 118, 124, 146, 176, 180, 181, 183, 185, 186, 200, 203, 210, 212, 216, 220, 221, 229, 231, 232, 233, 236, 239, 241, 251, 254, 268], "visual": [4, 53, 93, 97, 103, 126, 199, 212], "confirm": [4, 10, 44, 93, 216], "look": [4, 6, 7, 10, 12, 18, 19, 20, 26, 34, 35, 44, 53, 58, 59, 61, 74, 89, 93, 111, 116, 118, 126, 150, 160, 161, 164, 179, 186, 190, 191, 195, 200, 202, 203, 207, 210, 212, 213, 216, 217, 231, 235, 239, 241, 249, 266, 271, 274, 275], "good": [4, 7, 11, 18, 20, 23, 35, 53, 54, 57, 65, 78, 89, 93, 118, 130, 133, 187, 190, 191, 200, 207, 209, 210, 212, 216, 238, 265, 269, 272], "top": [4, 6, 7, 10, 11, 35, 52, 53, 54, 69, 70, 80, 83, 89, 96, 97, 115, 161, 168, 190, 200, 210, 216, 233, 234, 239, 254, 271], "relev": [4, 6, 7, 18, 35, 51, 66, 81, 82, 108, 111, 113, 118, 171, 180, 184, 190, 210, 216, 217, 226, 231, 252], "docstr": [4, 8, 10, 12, 20, 34, 35, 46, 53, 75, 78, 80, 89, 93, 98, 102, 104, 126, 131, 136, 153, 159, 160, 162, 182, 196, 203, 206, 207, 209, 212, 216, 217, 218, 219, 225, 226, 231, 234, 239, 241, 252, 255], "src": [4, 6, 7, 95, 216, 231, 236], "explan": [4, 7, 12, 14, 18, 21, 27, 28, 29, 30, 31, 32, 34, 35, 38, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 59, 61, 65, 75, 76, 78, 80, 84, 89, 93, 103, 106, 108, 109, 110, 111, 113, 124, 135, 137, 140, 143, 145, 147, 149, 161, 166, 185, 186, 187, 189, 191, 195, 196, 198, 202, 203, 205, 206, 207, 208, 210, 212, 213, 216, 218, 220, 221, 225, 226, 231, 234, 236, 239, 273], "cross": [4, 7, 8, 11, 53, 63, 69, 84, 89, 96, 97, 110, 124, 131, 133, 146, 176, 182, 183, 184, 213, 219, 245, 248, 250, 251], "xyz": [4, 65, 95, 96, 176, 184, 245, 246, 249], "header": [4, 35, 232, 233], "why": [4, 10, 12, 18, 35, 53, 184, 191, 197, 207, 210, 214, 239, 269, 271, 272], "test": [4, 6, 7, 8, 11, 12, 17, 19, 20, 30, 31, 33, 34, 35, 40, 44, 45, 52, 53, 54, 60, 63, 68, 78, 84, 86, 89, 93, 146, 155, 159, 160, 161, 169, 184, 190, 191, 192, 193, 195, 197, 208, 210, 213, 216, 217, 218, 219, 229, 232, 233, 234, 235, 236, 238, 239, 241, 255, 258, 263, 268, 270, 271], "warns_deprecated_sympi": [4, 229, 234, 236], "pr": [4, 10, 52, 191, 193, 194, 196, 219], "merg": [4, 35, 44, 45, 53, 174, 200, 208, 220, 231, 238, 239], "wiki": [4, 5, 6, 7, 8, 12, 18, 20, 24, 27, 29, 30, 31, 33, 34, 35, 41, 42, 44, 45, 52, 53, 54, 55, 56, 58, 59, 61, 63, 65, 69, 70, 71, 80, 81, 82, 83, 84, 86, 89, 93, 101, 103, 106, 135, 137, 138, 139, 141, 142, 143, 147, 148, 149, 152, 154, 155, 164, 166, 170, 176, 178, 182, 186, 196, 203, 207, 208, 209, 213, 216, 219, 220, 233, 238, 245, 246, 250, 252, 254, 272, 273], "decor": [4, 20, 44, 53, 61, 229, 231, 236, 237, 240, 241, 263], "sympydeprecationwarn": [4, 10, 229, 231, 234, 236], "class": [4, 7, 8, 10, 11, 12, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 36, 37, 42, 43, 44, 45, 46, 47, 48, 49, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 76, 78, 80, 81, 82, 83, 86, 88, 95, 96, 99, 100, 101, 103, 108, 110, 111, 112, 113, 115, 116, 120, 121, 126, 127, 131, 133, 134, 135, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 179, 180, 182, 187, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 210, 214, 216, 217, 218, 219, 220, 223, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 239, 243, 248, 249, 251, 252, 254, 255, 256, 257, 260, 262, 263, 266, 268, 271, 276], "context": [4, 6, 7, 10, 14, 18, 20, 28, 29, 30, 53, 55, 61, 80, 83, 116, 171, 190, 193, 195, 208, 229, 231, 236, 245], "manag": [4, 10, 25, 29, 30, 95, 146, 193, 212, 226, 229, 231, 236], "filter": [4, 10, 15, 23, 53, 54, 78, 138, 196, 229, 231, 236, 238], "emit": [4, 200, 229, 236], "assert": [4, 34, 42, 43, 44, 45, 53, 63, 65, 95, 130, 208, 216, 217, 229, 236, 238], "separ": [4, 6, 10, 11, 12, 16, 19, 20, 34, 41, 53, 54, 59, 61, 78, 80, 89, 104, 115, 130, 131, 134, 139, 163, 166, 175, 176, 186, 188, 191, 193, 196, 197, 200, 209, 212, 213, 217, 219, 224, 229, 231, 235, 239, 241, 245, 268], "block": [4, 6, 10, 35, 42, 44, 54, 84, 88, 89, 115, 116, 118, 121, 176, 184, 189, 213, 239, 248], "behavior1": 4, "behavior2": 4, "everyth": [4, 7, 12, 20, 35, 53, 55, 61, 80, 87, 105, 130, 162, 163, 186, 200, 271, 275], "ignore_warn": [4, 229, 234, 236, 239], "prevent": [4, 12, 35, 53, 59, 90, 93, 107, 189, 191, 196, 200, 212, 220, 229, 236, 267], "trigger": [4, 20, 45, 95, 166, 229], "twice": [4, 12, 35, 53, 55, 67, 93, 176, 178, 183, 200, 235, 236, 245, 246, 266], "similar": [4, 5, 10, 12, 16, 18, 20, 45, 52, 53, 54, 57, 58, 59, 61, 64, 69, 70, 74, 83, 89, 94, 103, 116, 118, 120, 130, 131, 164, 181, 183, 184, 188, 190, 191, 193, 197, 207, 209, 210, 212, 216, 218, 221, 226, 229, 232, 235, 236, 245, 246, 248, 249, 253, 265, 270, 271, 272, 274, 276], "somewher": [4, 6, 7, 11, 35], "sign": [4, 6, 7, 11, 27, 32, 35, 49, 53, 54, 58, 60, 63, 69, 78, 80, 89, 93, 96, 97, 99, 103, 118, 139, 151, 176, 181, 183, 185, 193, 200, 205, 207, 212, 213, 218, 238, 251, 254, 269], "readi": [4, 18, 115, 190, 200, 216], "paragraph": [4, 6, 7, 20, 34], "metadata": [4, 34, 234, 236], "link": [4, 6, 7, 11, 12, 22, 35, 54, 63, 69, 80, 104, 110, 119, 126, 127, 232, 235, 236, 274], "rememb": [4, 6, 12, 20, 83, 89, 104, 107, 133, 183, 184, 200, 212, 218, 221, 239, 271, 276], "shown": [4, 6, 10, 11, 18, 19, 20, 42, 45, 52, 53, 57, 59, 61, 78, 95, 97, 101, 103, 107, 111, 113, 119, 120, 121, 127, 128, 129, 131, 175, 176, 183, 184, 186, 189, 190, 191, 196, 200, 216, 220, 236, 238, 248, 249, 269], "plain": [4, 6, 18, 81, 180, 196, 200], "rst": [4, 6, 7, 11, 36, 216, 231], "markdown": [4, 8, 11], "markup": [4, 200], "clearli": [4, 6, 20, 93, 184, 190, 210, 272], "delin": 4, "newlin": [4, 89, 241], "charact": [4, 6, 7, 53, 54, 78, 81, 95, 146, 176, 180, 200, 216, 231, 233, 236, 241, 268, 270, 275], "full": [4, 6, 7, 8, 9, 10, 12, 14, 18, 20, 24, 30, 33, 35, 44, 45, 53, 57, 61, 65, 66, 80, 86, 89, 95, 128, 129, 176, 190, 193, 194, 196, 200, 202, 212, 213, 270, 273, 276], "abc": [4, 6, 12, 14, 15, 20, 23, 27, 28, 29, 30, 31, 32, 33, 35, 42, 44, 46, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 76, 77, 78, 80, 81, 83, 84, 86, 89, 92, 94, 101, 103, 105, 137, 139, 141, 142, 147, 164, 166, 167, 187, 189, 191, 193, 195, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 232, 233, 234, 235, 236, 238, 239, 241, 245, 247, 248, 249, 254, 256, 268, 271, 275], "func": [4, 6, 11, 17, 20, 29, 33, 35, 53, 55, 58, 61, 72, 74, 80, 93, 155, 176, 193, 196, 200, 201, 212, 216, 217, 218, 229, 234, 236, 238, 239, 241, 244], "larger": [4, 7, 11, 20, 35, 44, 45, 52, 53, 54, 61, 78, 86, 89, 93, 120, 124, 191, 197, 201, 207, 212, 218, 233, 235, 268, 276], "easier": [4, 11, 19, 53, 97, 116, 118, 183, 191, 195, 197, 210, 216, 219, 233, 239, 248, 270, 276, 277], "exactli": [4, 6, 7, 10, 11, 12, 20, 31, 37, 44, 53, 56, 57, 89, 95, 110, 131, 185, 210, 212, 216, 219, 221, 235, 238, 239, 266, 268, 270, 275, 276], "direct": [4, 6, 7, 10, 11, 17, 27, 29, 30, 34, 38, 41, 44, 49, 52, 53, 55, 57, 59, 62, 66, 67, 68, 69, 83, 84, 89, 96, 97, 99, 107, 108, 110, 118, 120, 124, 133, 152, 176, 181, 183, 184, 187, 189, 190, 193, 197, 207, 210, 226, 229, 238, 245, 249, 250, 253], "syntax": [4, 6, 7, 10, 11, 12, 20, 28, 30, 45, 53, 80, 95, 116, 133, 163, 186, 190, 199, 200, 212, 218, 222, 241, 257, 266, 268, 270, 275, 277], "paramet": [4, 7, 10, 11, 12, 27, 28, 30, 33, 35, 36, 44, 45, 49, 51, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 76, 78, 80, 81, 83, 84, 86, 89, 90, 92, 93, 95, 96, 99, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 133, 135, 137, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 151, 154, 155, 156, 158, 160, 161, 163, 164, 165, 166, 167, 168, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 191, 193, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 226, 229, 231, 232, 233, 235, 236, 238, 239, 245, 246, 247, 248, 249, 254, 266, 271], "short": [4, 7, 12, 26, 36, 43, 45, 49, 53, 54, 55, 56, 59, 87, 93, 107, 152, 171, 175, 184, 187, 194, 221, 231, 241, 271, 275], "renam": [4, 10, 35, 80], "rest": [4, 10, 78, 81, 83, 87, 97, 105, 116, 120, 126, 171, 187, 190, 220, 238, 268, 269, 276], "left": [4, 7, 10, 16, 18, 20, 22, 33, 35, 36, 44, 45, 49, 53, 54, 55, 58, 59, 61, 69, 70, 76, 78, 80, 81, 83, 84, 89, 92, 93, 103, 108, 115, 131, 138, 145, 150, 154, 155, 158, 163, 176, 181, 185, 186, 187, 189, 196, 197, 198, 199, 200, 202, 203, 207, 208, 209, 210, 212, 216, 217, 218, 219, 220, 231, 232, 233, 235, 238, 251, 266, 270, 272, 276], "imaginari": [4, 6, 12, 18, 20, 23, 27, 30, 32, 53, 57, 59, 61, 84, 133, 190, 191, 196, 200, 201, 208, 212, 219], "simplify_thi": [4, 6, 234], "expr": [4, 6, 11, 12, 18, 20, 23, 29, 30, 32, 33, 35, 45, 52, 55, 57, 59, 61, 63, 75, 78, 80, 83, 86, 89, 94, 95, 103, 107, 109, 116, 130, 143, 147, 149, 151, 155, 158, 161, 163, 164, 166, 173, 176, 178, 180, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 200, 201, 202, 203, 205, 207, 209, 212, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 232, 233, 234, 236, 239, 245, 246, 247, 248, 249, 251, 256, 265, 266, 268, 270, 271, 275, 276, 277], "simplifi": [4, 6, 11, 12, 16, 18, 19, 20, 28, 30, 32, 33, 52, 53, 55, 57, 58, 59, 61, 65, 70, 75, 78, 80, 83, 84, 85, 86, 89, 96, 103, 104, 109, 112, 119, 120, 123, 124, 125, 130, 138, 145, 150, 165, 166, 173, 176, 181, 187, 195, 197, 199, 201, 206, 207, 208, 209, 210, 213, 216, 217, 218, 219, 220, 234, 236, 239, 248, 250, 256, 257, 265, 267, 268, 270, 271, 272], "def": [4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 29, 30, 34, 53, 58, 65, 83, 89, 93, 95, 124, 161, 190, 196, 200, 209, 212, 219, 234, 236, 238, 239, 242, 265, 268, 271, 272, 276], "ref": [4, 44, 59, 89, 101, 133, 205, 220, 234, 272], "is_this_zero": [4, 236], "y": [4, 6, 10, 11, 12, 14, 15, 18, 19, 20, 22, 23, 26, 28, 29, 30, 31, 32, 33, 35, 36, 44, 45, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 78, 80, 81, 82, 83, 84, 85, 86, 89, 93, 94, 95, 96, 97, 99, 101, 103, 108, 109, 110, 113, 116, 118, 119, 120, 121, 123, 124, 125, 127, 131, 133, 134, 143, 144, 147, 150, 155, 161, 163, 164, 166, 167, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 232, 233, 236, 238, 239, 241, 245, 247, 248, 249, 250, 251, 253, 254, 265, 266, 268, 270, 271, 275, 276, 277], "0": [4, 6, 11, 12, 14, 16, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 116, 118, 119, 120, 121, 123, 125, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 142, 145, 150, 151, 152, 155, 160, 161, 162, 163, 164, 165, 166, 167, 171, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 234, 235, 236, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 254, 265, 266, 268, 270, 271, 272, 275, 276, 277], "zero": [4, 11, 12, 14, 18, 19, 20, 27, 30, 32, 35, 43, 44, 45, 49, 52, 56, 57, 58, 59, 61, 63, 67, 68, 69, 78, 80, 82, 83, 84, 86, 88, 89, 92, 93, 95, 96, 102, 103, 110, 113, 116, 118, 121, 124, 128, 129, 133, 138, 160, 164, 166, 168, 179, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 198, 200, 203, 207, 208, 210, 212, 213, 216, 217, 218, 219, 220, 221, 236, 238, 239, 248, 250, 251, 271, 277], "is_zero": [4, 18, 20, 68, 89, 187, 191, 196, 236, 272], "mail": [4, 10, 23, 25, 200, 269], "summar": [4, 231, 276], "idea": [4, 11, 18, 19, 20, 38, 44, 51, 53, 54, 65, 71, 78, 80, 93, 104, 116, 166, 170, 171, 187, 189, 190, 209, 212, 213, 216, 219, 233, 239, 276], "fit": [4, 11, 34, 78, 89, 92, 93, 184, 200, 216, 241, 271], "put": [4, 6, 10, 11, 12, 16, 20, 35, 49, 50, 53, 54, 55, 59, 83, 84, 89, 138, 143, 147, 162, 163, 196, 200, 201, 209, 210, 212, 216, 221, 227, 232, 272, 276], "word": [4, 7, 11, 20, 31, 40, 49, 52, 53, 54, 59, 61, 83, 103, 116, 131, 187, 190, 195, 212, 213, 216, 218, 233, 245, 249, 268], "global": [4, 6, 10, 28, 29, 30, 33, 35, 36, 53, 65, 78, 95, 150, 156, 176, 178, 186, 187, 190, 191, 193, 200, 213, 216, 217, 220, 231, 233, 234, 239, 247], "uniqu": [4, 11, 33, 34, 36, 44, 47, 49, 53, 54, 55, 58, 61, 68, 71, 76, 80, 82, 83, 89, 93, 110, 155, 164, 176, 184, 187, 188, 190, 193, 195, 201, 205, 212, 213, 216, 218, 219, 220, 224, 233, 238, 241, 248, 253, 268, 271], "across": [4, 7, 44, 51, 53, 64, 80, 97, 165, 166, 173, 186, 200, 235, 237, 238, 239, 274], "level": [4, 6, 7, 10, 11, 12, 18, 19, 23, 35, 44, 51, 53, 59, 61, 80, 83, 89, 93, 107, 120, 133, 161, 166, 171, 175, 178, 184, 186, 189, 190, 192, 198, 200, 209, 213, 219, 220, 224, 232, 233, 238, 271, 272, 274], "correspond": [4, 6, 7, 10, 16, 18, 19, 20, 33, 34, 35, 36, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 59, 63, 64, 66, 67, 68, 69, 76, 78, 82, 83, 84, 89, 92, 93, 96, 97, 103, 109, 111, 115, 116, 118, 120, 134, 138, 142, 156, 160, 161, 163, 167, 168, 171, 176, 179, 181, 185, 186, 188, 189, 190, 191, 193, 195, 196, 200, 206, 207, 210, 212, 213, 216, 217, 218, 219, 220, 222, 224, 225, 226, 233, 234, 235, 236, 238, 239, 241, 245, 246, 248, 249, 251, 253, 271, 277], "share": [4, 18, 20, 54, 93, 191, 195, 200, 220, 233], "__init__": [4, 6, 20, 53, 111, 195, 245, 246, 271], "func_nam": [4, 35, 59, 84, 241], "help": [4, 5, 6, 7, 18, 26, 35, 43, 53, 61, 78, 80, 89, 93, 94, 101, 116, 133, 141, 151, 184, 186, 195, 197, 200, 209, 210, 213, 216, 217, 220, 231, 232, 233, 239, 261, 269, 272], "rais": [4, 10, 12, 14, 18, 19, 20, 28, 30, 33, 35, 42, 45, 53, 54, 55, 57, 59, 62, 63, 66, 68, 69, 70, 78, 80, 84, 86, 89, 90, 92, 93, 101, 103, 140, 152, 181, 184, 187, 188, 189, 190, 191, 193, 195, 196, 197, 200, 202, 208, 212, 215, 216, 217, 218, 219, 220, 224, 226, 229, 231, 233, 236, 238, 239, 241, 242, 251, 272], "been": [4, 12, 18, 20, 33, 35, 36, 44, 45, 46, 49, 52, 53, 54, 59, 65, 78, 80, 89, 93, 94, 95, 111, 116, 118, 126, 130, 131, 139, 151, 161, 163, 171, 175, 181, 182, 183, 184, 187, 190, 191, 195, 197, 198, 200, 202, 207, 210, 212, 217, 218, 219, 221, 230, 231, 233, 234, 236, 238, 241, 248, 251, 268, 269, 271, 272, 276], "simplfiy_thi": 4, "ident": [4, 11, 12, 20, 31, 34, 36, 43, 44, 45, 51, 53, 54, 58, 59, 69, 76, 82, 84, 86, 89, 104, 106, 131, 150, 152, 155, 171, 187, 188, 189, 193, 194, 195, 196, 200, 209, 212, 216, 219, 224, 226, 231, 238, 239, 241, 249, 268, 272, 276], "much": [4, 6, 10, 16, 18, 19, 20, 34, 35, 38, 49, 57, 61, 75, 78, 80, 130, 174, 175, 183, 184, 185, 187, 190, 193, 196, 207, 210, 212, 216, 217, 218, 219, 233, 235, 268, 270, 276], "trivial": [4, 36, 44, 49, 52, 53, 54, 59, 68, 83, 86, 89, 93, 128, 166, 187, 188, 193, 196, 210, 213, 216, 219, 224], "furthermor": [4, 10, 20, 31, 53, 54, 83, 195, 209, 268, 270, 271], "particular": [4, 6, 10, 11, 12, 18, 19, 22, 31, 36, 44, 53, 54, 57, 61, 64, 78, 80, 83, 86, 89, 93, 96, 99, 126, 150, 161, 188, 189, 190, 191, 193, 195, 196, 206, 208, 210, 212, 213, 216, 218, 219, 231, 233, 235, 272, 274, 276], "expr1": [4, 18, 103, 186, 218, 271], "expr2": [4, 18, 103, 186, 271], "dozen": [4, 11, 20, 276], "search": [4, 6, 33, 44, 45, 49, 51, 53, 59, 89, 93, 116, 187, 195, 196, 200, 209, 210, 212, 214, 217, 220, 232], "upcom": 4, "bot": 4, "push": [5, 78], "respect": [5, 6, 10, 11, 12, 20, 28, 30, 31, 33, 34, 35, 36, 43, 44, 45, 48, 49, 51, 52, 53, 55, 59, 61, 63, 65, 69, 70, 75, 76, 78, 80, 83, 84, 86, 89, 93, 95, 96, 97, 99, 103, 108, 109, 110, 113, 120, 127, 129, 131, 133, 140, 155, 168, 169, 170, 175, 176, 179, 181, 184, 185, 186, 187, 190, 193, 195, 196, 197, 200, 202, 203, 206, 208, 212, 216, 217, 218, 219, 220, 221, 225, 226, 231, 233, 245, 246, 247, 248, 249, 250, 251, 252, 253, 266, 276], "handbook": [5, 6, 36, 43, 44, 51, 61, 93], "internet": 5, "practic": [5, 8, 16, 18, 23, 42, 44, 54, 63, 130, 133, 186, 187, 188, 190, 195, 197, 224, 268, 269], "project": [5, 7, 10, 35, 66, 67, 68, 82, 89, 132, 232, 233, 245], "purpos": [5, 6, 7, 8, 10, 11, 17, 18, 20, 34, 35, 44, 50, 53, 54, 80, 89, 116, 133, 171, 175, 184, 190, 193, 197, 199, 200, 207, 216, 219, 225, 235, 237, 239, 248, 249, 266, 276], "nn": 5, "brows": 5, "clone": [5, 25, 193], "download": [5, 7, 25, 34, 75, 194, 209, 216, 220, 245, 270], "origin": [5, 11, 12, 16, 18, 25, 27, 44, 45, 46, 49, 52, 53, 54, 57, 58, 59, 61, 62, 64, 66, 68, 78, 80, 84, 89, 93, 101, 103, 104, 120, 130, 133, 158, 161, 171, 177, 181, 186, 187, 191, 195, 196, 199, 200, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 226, 231, 238, 239, 245, 247, 248, 249, 250, 251, 253, 254, 276], "77": [5, 42, 61, 89, 93, 199, 200, 233], "mib": 5, "remot": [5, 53], "collabor": 5, "upstream": 5, "fetch": 5, "branch": [5, 19, 33, 53, 58, 59, 60, 61, 79, 197, 210, 219, 271, 276], "checkout": [5, 34], "advantag": [5, 14, 18, 20, 30, 33, 35, 53, 54, 80, 83, 89, 93, 100, 170, 189, 190, 197, 208, 213, 216, 219, 235, 268, 270, 272, 276], "isol": [5, 33, 59, 191, 195, 196, 197, 218, 233], "wide": [5, 18, 81, 89, 133, 180, 190, 196, 200, 220], "flake8": 5, "usernam": 5, "easiest": [5, 7, 10, 11, 12, 53, 187, 190, 213, 239, 249, 265, 271, 276], "consult": [5, 36], "kwarg": [5, 12, 29, 30, 31, 35, 44, 45, 52, 53, 54, 55, 59, 61, 63, 64, 66, 67, 68, 69, 70, 75, 78, 80, 84, 85, 86, 87, 89, 91, 92, 101, 103, 109, 111, 120, 135, 144, 146, 150, 151, 155, 157, 159, 160, 162, 163, 164, 176, 179, 180, 186, 189, 191, 196, 200, 202, 206, 207, 208, 212, 216, 217, 218, 220, 221, 226, 231, 232, 234, 241, 249], "test_bas": [5, 231], "similari": 5, "qualiti": [5, 94, 200], "code_qu": 5, "liter": [6, 12, 20, 35, 43, 53, 81, 83, 95, 166, 173, 212], "occur": [6, 10, 11, 12, 44, 45, 53, 57, 61, 70, 78, 84, 95, 107, 130, 175, 176, 183, 195, 203, 212, 217, 218, 221, 231, 238, 271], "definit": [6, 10, 11, 12, 19, 27, 30, 35, 36, 44, 45, 50, 52, 53, 55, 56, 58, 59, 61, 66, 69, 73, 76, 78, 80, 84, 85, 86, 89, 93, 95, 118, 123, 124, 131, 168, 171, 174, 176, 183, 184, 187, 188, 191, 196, 197, 200, 207, 220, 221, 232, 233, 234, 238, 239, 245, 248, 249, 250, 251, 266, 276], "__doc__": [6, 12], "attribut": [6, 11, 15, 18, 20, 29, 30, 34, 35, 44, 45, 53, 61, 62, 63, 66, 67, 68, 69, 86, 89, 95, 97, 103, 108, 110, 111, 112, 113, 115, 123, 131, 134, 155, 160, 164, 171, 175, 176, 181, 184, 186, 187, 190, 191, 195, 200, 208, 212, 213, 225, 226, 232, 234, 238, 239, 242, 248, 271], "fdiff": [6, 20, 35, 53, 59, 60, 61], "self": [6, 18, 20, 27, 29, 30, 34, 35, 44, 45, 50, 52, 53, 55, 59, 62, 63, 64, 66, 67, 68, 69, 80, 84, 89, 93, 108, 118, 161, 166, 176, 178, 179, 187, 189, 191, 193, 195, 196, 200, 202, 207, 208, 226, 245], "argindex": [6, 20, 35, 53, 59, 60, 61], "heavisid": [6, 60, 78, 80, 200], "diff": [6, 10, 11, 16, 20, 23, 33, 35, 58, 59, 60, 61, 70, 75, 86, 89, 107, 109, 119, 120, 133, 164, 176, 178, 180, 181, 184, 186, 191, 196, 199, 200, 210, 216, 217, 218, 221, 222, 227, 248, 251, 266, 270, 277], "diracdelta": [6, 60, 80, 161, 166, 200], "what": [6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 24, 33, 35, 45, 47, 52, 53, 54, 55, 59, 60, 63, 64, 68, 78, 80, 82, 89, 93, 95, 108, 111, 113, 116, 120, 127, 133, 165, 166, 169, 171, 176, 183, 184, 191, 192, 193, 196, 199, 200, 201, 207, 209, 210, 212, 213, 214, 216, 218, 225, 229, 231, 233, 234, 239, 248, 249, 254, 266, 268, 269, 271, 275, 276], "scope": [6, 35, 126, 130, 229, 276], "high": [6, 7, 12, 16, 18, 23, 35, 53, 57, 58, 81, 93, 133, 180, 190, 195, 198, 200, 213, 218, 261, 272], "od": [6, 11, 20, 76, 111, 115, 126, 133, 214, 217, 277], "seen": [6, 16, 18, 27, 45, 78, 80, 95, 99, 115, 127, 171, 183, 187, 190, 193, 196, 216, 219, 236, 238, 248, 268, 271, 275], "hand": [6, 10, 16, 18, 20, 34, 35, 45, 46, 53, 59, 61, 80, 83, 84, 89, 93, 96, 111, 115, 116, 130, 134, 138, 155, 158, 176, 181, 184, 185, 187, 190, 191, 193, 195, 198, 210, 219, 231, 233, 235, 239, 242, 251, 253, 270], "less": [6, 7, 10, 11, 16, 31, 35, 36, 44, 45, 52, 53, 54, 57, 58, 59, 61, 67, 68, 69, 84, 89, 93, 101, 103, 116, 118, 166, 190, 193, 195, 196, 209, 210, 212, 213, 216, 218, 219, 220, 231, 233], "understand": [6, 12, 18, 19, 20, 53, 54, 78, 116, 126, 128, 129, 133, 171, 183, 186, 189, 190, 195, 210, 213, 232, 239, 267, 268, 275, 276], "clear": [6, 10, 18, 29, 43, 53, 78, 82, 108, 183, 184, 186, 191, 193, 196, 210, 218, 219, 226, 231, 235, 253, 268], "begin": [6, 10, 12, 18, 20, 22, 53, 54, 58, 59, 61, 78, 84, 86, 89, 93, 120, 128, 129, 130, 131, 162, 171, 176, 184, 185, 189, 200, 210, 213, 216, 217, 219, 220, 231, 241, 268, 270, 272, 276], "convers": [6, 7, 10, 18, 35, 53, 73, 95, 130, 170, 188, 189, 190, 191, 193, 195, 197, 200, 213, 225, 232, 245], "aim": [6, 7, 71, 78, 171, 187, 210, 216, 219, 269, 270], "comment": [6, 7, 35, 44, 116, 118, 197, 200, 233, 238], "distract": 6, "input": [6, 7, 10, 11, 12, 20, 23, 27, 33, 36, 49, 53, 54, 56, 57, 58, 59, 67, 80, 82, 83, 89, 93, 95, 100, 101, 103, 107, 112, 115, 116, 118, 119, 120, 130, 133, 134, 139, 162, 176, 178, 179, 190, 191, 193, 196, 197, 198, 199, 200, 201, 208, 212, 213, 214, 216, 218, 220, 222, 232, 233, 235, 236, 238, 239, 241, 265, 271, 272, 276], "consum": [6, 35, 61, 112, 130], "human": [6, 14, 78, 168, 196, 200], "beings": 6, "english": [6, 54], "likewis": [6, 18, 34, 119, 120], "reader": [6, 7, 20, 34, 36, 131, 187, 200, 235, 269, 274], "machineri": [6, 53, 195, 239], "mind": [6, 12, 15, 18, 23, 53, 89, 131, 186, 207, 208, 253, 271], "platform": [6, 53, 166, 184, 216, 232], "anyon": [6, 7, 10, 24, 196, 200, 264, 274, 275], "restructuredtext": [6, 7], "extend": [6, 7, 18, 20, 30, 35, 44, 45, 53, 54, 58, 65, 78, 80, 89, 93, 133, 174, 180, 186, 188, 191, 193, 195, 196, 197, 200, 207, 209, 213, 215, 216, 219, 220, 221, 233, 235, 268, 270], "concis": [6, 133], "quick": [6, 7, 20, 53, 89, 93, 212, 218, 239], "depth": [6, 7, 9, 12, 13, 24, 44, 53, 118, 186, 187, 200, 262], "tripl": [6, 70, 89, 184, 185, 187, 195, 241], "quot": [6, 12, 35, 83, 200, 241], "raw": [6, 7, 35, 53, 54, 59, 94, 95, 160, 165, 190, 191, 196, 208, 212, 275], "backslash": [6, 53, 200], "blank": [6, 95, 112, 186], "close": [6, 11, 35, 52, 53, 57, 58, 61, 69, 71, 78, 80, 82, 103, 119, 186, 187, 188, 194, 195, 208, 218, 219, 233, 266, 276], "rare": [6, 20, 53, 216, 220, 229, 268], "underlin": [6, 7], "numpydoc": [6, 7], "build": [6, 7, 8, 15, 29, 30, 35, 53, 55, 61, 83, 133, 160, 171, 176, 184, 187, 192, 195, 196, 197, 207, 220, 248, 265, 268, 271], "consist": [6, 7, 10, 11, 16, 18, 34, 44, 45, 49, 53, 54, 58, 59, 61, 63, 69, 71, 78, 83, 96, 99, 127, 131, 140, 160, 166, 171, 174, 179, 186, 188, 190, 191, 193, 208, 216, 218, 219, 220, 224, 229, 232, 233, 238, 269, 271], "review": [6, 7, 132], "head": [6, 15, 34, 53, 218, 220, 226, 241, 271], "plural": [6, 7], "length": [6, 10, 35, 37, 43, 44, 45, 47, 51, 53, 54, 56, 58, 59, 61, 62, 66, 68, 69, 70, 83, 84, 89, 92, 93, 96, 97, 107, 111, 115, 119, 120, 121, 131, 135, 139, 163, 168, 169, 171, 176, 179, 184, 195, 196, 200, 206, 210, 212, 216, 220, 231, 232, 238, 241, 245, 246, 254], "equal": [6, 10, 11, 14, 18, 19, 20, 27, 31, 34, 35, 36, 42, 43, 44, 45, 49, 51, 52, 54, 55, 57, 58, 59, 61, 66, 67, 68, 69, 70, 72, 78, 83, 84, 86, 89, 93, 96, 99, 103, 104, 108, 111, 113, 118, 128, 129, 150, 151, 166, 171, 176, 179, 184, 187, 188, 189, 190, 191, 193, 195, 196, 198, 200, 206, 208, 210, 213, 216, 217, 218, 219, 220, 226, 231, 232, 233, 238, 241, 245, 249, 254, 266, 269, 277], "clutter": 6, "harder": [6, 10, 18, 53, 78, 190, 231], "minim": [6, 18, 20, 33, 44, 45, 49, 52, 53, 54, 78, 80, 83, 93, 108, 120, 135, 189, 190, 191, 192, 193, 196, 199, 209, 212, 213, 218, 238, 242], "amount": [6, 34, 53, 54, 65, 126, 176, 181, 184, 193, 203, 231, 245, 246], "deprec": [6, 8, 13, 28, 45, 53, 66, 80, 84, 106, 130, 196, 200, 220, 226, 229, 230, 234, 236, 239, 243], "notifi": 6, "awai": [6, 34, 36, 54, 96, 97, 99, 118, 195, 200], "encourag": [6, 10, 34, 128, 129, 195], "label": [6, 34, 35, 47, 53, 63, 76, 80, 99, 139, 146, 150, 155, 164, 166, 186, 200, 201, 203, 212, 225, 226, 275], "elabor": [6, 21, 181, 251], "suffic": [6, 188, 218], "clarifi": 6, "complic": [6, 12, 14, 18, 20, 35, 44, 52, 54, 55, 57, 58, 59, 61, 78, 80, 86, 126, 128, 166, 184, 190, 193, 197, 199, 210, 212, 219, 220, 224, 225, 233, 235, 239, 241, 266, 268, 271, 272], "demonstr": [6, 7, 12, 18, 20, 23, 44, 45, 53, 80, 93, 108, 110, 116, 120, 121, 130, 187, 190, 250, 276], "api": [6, 7, 10, 18, 21, 35, 53, 65, 73, 79, 94, 95, 102, 133, 162, 175, 186, 193, 213, 214, 215, 237, 239, 242, 248, 249, 259, 261, 269, 270, 273], "simpl": [6, 11, 12, 16, 18, 20, 23, 25, 34, 35, 44, 52, 53, 57, 61, 65, 69, 71, 78, 80, 82, 89, 93, 94, 96, 97, 103, 104, 107, 110, 111, 113, 115, 118, 120, 121, 123, 125, 126, 130, 134, 140, 154, 155, 163, 164, 165, 176, 183, 184, 190, 191, 192, 196, 197, 200, 202, 207, 209, 210, 212, 213, 216, 219, 226, 232, 233, 238, 242, 244, 245, 246, 247, 251, 265, 268, 271, 272, 276], "too": [6, 12, 20, 44, 45, 53, 59, 61, 63, 66, 68, 78, 83, 92, 93, 94, 128, 135, 207, 208, 212, 213, 216, 218, 219, 220, 231, 232, 247, 248], "thought": [6, 11, 53, 207, 216, 268, 271], "perfect": [6, 20, 44, 53, 93, 213, 219, 270, 271], "tell": [6, 7, 18, 19, 23, 35, 45, 54, 57, 61, 84, 95, 115, 171, 190, 195, 199, 207, 210, 216, 232, 268], "think": [6, 10, 11, 18, 19, 20, 23, 25, 33, 44, 118, 171, 235, 239, 268, 276], "test_": [6, 231], "coverage_doctest": 6, "coverag": 6, "6868680200532414": 6, "dsolv": [6, 11, 217, 218, 266, 270, 277], "co": [6, 12, 20, 22, 27, 33, 35, 52, 53, 55, 57, 58, 60, 61, 62, 63, 66, 67, 69, 71, 75, 76, 77, 78, 80, 84, 89, 93, 95, 108, 109, 110, 116, 118, 119, 121, 123, 124, 125, 130, 133, 138, 140, 176, 178, 179, 181, 183, 184, 185, 186, 190, 193, 196, 197, 199, 200, 201, 202, 203, 207, 208, 209, 210, 212, 216, 218, 219, 220, 221, 227, 239, 245, 246, 247, 248, 249, 254, 265, 266, 268, 270, 276, 277], "sin": [6, 7, 10, 11, 12, 18, 20, 22, 23, 25, 27, 33, 35, 52, 53, 55, 57, 58, 60, 61, 62, 63, 67, 71, 72, 75, 76, 77, 78, 80, 81, 84, 89, 94, 95, 105, 108, 109, 110, 115, 116, 118, 119, 121, 123, 124, 125, 130, 133, 138, 140, 164, 176, 178, 179, 181, 183, 184, 185, 186, 188, 190, 196, 197, 199, 200, 201, 202, 203, 207, 208, 209, 210, 212, 215, 216, 218, 219, 221, 227, 233, 239, 245, 246, 247, 248, 249, 254, 265, 266, 268, 270, 271, 276, 277], "hint": [6, 20, 34, 37, 44, 53, 56, 59, 80, 84, 89, 93, 103, 133, 143, 147, 163, 165, 166, 176, 196, 207, 210, 214, 218, 276], "1st_exact": 6, "eq": [6, 11, 12, 14, 18, 20, 31, 33, 35, 59, 63, 66, 70, 78, 83, 169, 186, 187, 191, 196, 198, 200, 202, 206, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 232, 233, 239, 245, 268, 270, 277], "c1": [6, 16, 54, 63, 70, 84, 86, 152, 166, 208, 213, 216, 218, 250, 277], "comma": [6, 7, 12, 35, 53, 200, 239, 268], "readabl": [6, 26, 34, 81, 107, 196, 199, 200, 207, 209, 242], "accept": [6, 11, 20, 34, 35, 44, 53, 59, 67, 80, 83, 84, 86, 89, 92, 95, 116, 160, 176, 180, 186, 195, 196, 199, 200, 201, 208, 210, 212, 218, 232, 239, 245, 246, 249, 272], "rang": [6, 10, 11, 16, 20, 23, 33, 35, 42, 43, 44, 45, 47, 49, 53, 54, 58, 59, 61, 67, 84, 89, 93, 97, 101, 105, 135, 166, 186, 190, 191, 192, 193, 195, 196, 197, 202, 203, 206, 209, 212, 216, 219, 220, 221, 225, 231, 238, 265, 276], "30": [6, 27, 33, 35, 39, 53, 54, 56, 57, 58, 61, 67, 69, 80, 84, 89, 90, 93, 96, 97, 116, 139, 189, 191, 195, 196, 200, 206, 209, 212, 220, 221, 276], "7": [6, 12, 18, 20, 22, 23, 27, 29, 30, 33, 35, 37, 39, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 75, 78, 80, 83, 84, 86, 87, 89, 93, 95, 96, 98, 101, 103, 118, 125, 128, 129, 133, 166, 171, 173, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 225, 226, 231, 232, 235, 238, 239, 245, 254, 266, 271, 272, 275], "8": [6, 16, 25, 27, 28, 33, 35, 37, 44, 45, 46, 49, 51, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 69, 75, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 101, 103, 105, 118, 133, 138, 139, 150, 186, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 202, 203, 206, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 225, 231, 233, 235, 238, 245, 247, 248, 254, 265, 266, 270, 272, 276], "9": [6, 14, 25, 33, 35, 41, 43, 44, 45, 49, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 66, 67, 69, 75, 78, 80, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 98, 101, 103, 104, 105, 106, 116, 118, 121, 133, 135, 139, 171, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 206, 208, 209, 210, 212, 213, 216, 218, 219, 220, 221, 231, 235, 238, 245, 247, 270, 272, 277], "11": [6, 18, 29, 30, 35, 44, 47, 49, 51, 53, 54, 56, 58, 61, 65, 66, 67, 69, 70, 78, 80, 83, 84, 85, 89, 93, 95, 98, 103, 116, 118, 131, 150, 160, 185, 186, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 207, 209, 213, 216, 218, 219, 220, 221, 232, 238, 248], "12": [6, 12, 20, 27, 33, 34, 35, 39, 41, 42, 44, 45, 46, 49, 51, 52, 53, 54, 56, 58, 59, 61, 63, 66, 67, 69, 78, 80, 84, 89, 90, 93, 96, 97, 101, 103, 105, 118, 119, 131, 163, 176, 185, 188, 189, 190, 193, 195, 196, 197, 199, 200, 206, 208, 209, 213, 215, 216, 220, 221, 232, 235, 238, 247, 272, 276], "13": [6, 27, 35, 42, 44, 49, 53, 54, 56, 58, 61, 65, 66, 67, 68, 78, 83, 89, 93, 97, 101, 103, 116, 131, 186, 193, 195, 196, 197, 199, 200, 206, 213, 215, 217, 218, 220, 221, 231, 232, 254], "14": [6, 35, 42, 44, 48, 49, 51, 53, 54, 58, 59, 61, 78, 89, 90, 93, 94, 96, 101, 116, 185, 186, 189, 191, 193, 194, 195, 196, 197, 199, 200, 209, 212, 213, 216, 218, 220, 221, 266], "15": [6, 12, 20, 33, 39, 42, 44, 49, 51, 53, 54, 56, 57, 58, 61, 63, 66, 67, 69, 70, 78, 80, 83, 84, 85, 89, 90, 93, 96, 139, 185, 186, 188, 189, 190, 191, 195, 196, 197, 199, 200, 202, 206, 207, 209, 212, 213, 217, 218, 219, 220, 221, 238, 265, 266, 271, 272], "16": [6, 27, 33, 35, 44, 45, 48, 52, 53, 54, 58, 61, 62, 63, 67, 78, 80, 83, 89, 90, 92, 93, 97, 181, 188, 189, 190, 193, 194, 195, 196, 199, 200, 206, 208, 209, 210, 213, 220, 221, 238, 245, 253, 272], "17": [6, 10, 42, 44, 45, 53, 54, 57, 58, 59, 63, 66, 69, 78, 89, 93, 103, 190, 191, 195, 196, 199, 200, 207, 209, 213, 216, 221, 235, 239, 270], "18": [6, 44, 45, 56, 58, 61, 63, 66, 69, 85, 89, 93, 97, 101, 103, 105, 177, 185, 193, 194, 199, 200, 208, 209, 213, 216, 218, 219, 220, 221, 247], "19": [6, 44, 53, 56, 61, 63, 66, 69, 89, 93, 95, 96, 191, 195, 196, 199, 209, 213, 215, 218, 232, 265], "20": [6, 12, 31, 35, 42, 44, 45, 52, 53, 54, 57, 58, 61, 69, 70, 80, 89, 93, 96, 97, 103, 113, 171, 173, 186, 190, 194, 195, 196, 197, 199, 200, 206, 207, 208, 209, 212, 213, 216, 219, 220, 245, 266], "21": [6, 10, 39, 44, 53, 56, 58, 66, 67, 75, 89, 93, 95, 96, 131, 186, 191, 193, 194, 195, 197, 199, 200, 206, 216, 220, 221, 276], "22": [6, 12, 44, 53, 56, 57, 58, 61, 89, 93, 96, 97, 131, 194, 199, 212, 213, 218, 220], "23": [6, 33, 44, 45, 53, 56, 59, 61, 67, 69, 89, 93, 96, 131, 191, 196, 199, 206, 213, 238], "24": [6, 27, 33, 41, 45, 46, 53, 56, 58, 61, 67, 75, 80, 89, 93, 96, 97, 101, 103, 163, 173, 185, 191, 193, 195, 196, 197, 199, 202, 207, 213, 216, 220, 235, 238, 254, 266, 272], "25": [6, 12, 44, 45, 54, 56, 58, 61, 63, 66, 68, 85, 89, 92, 93, 96, 97, 103, 113, 179, 185, 193, 195, 196, 199, 200, 206, 207, 209, 213, 215, 216, 217, 220, 232], "26": [6, 42, 53, 54, 56, 65, 89, 93, 96, 97, 196, 213, 220], "27": [6, 23, 35, 36, 44, 48, 58, 63, 89, 93, 96, 97, 103, 105, 193, 218], "28": [6, 35, 44, 52, 56, 57, 61, 89, 93, 118, 209, 213, 216, 271], "29": [6, 27, 42, 44, 45, 53, 54, 56, 58, 59, 66, 67, 89, 93, 103, 155, 190, 208, 220], "assumpt": [6, 11, 12, 17, 19, 21, 23, 28, 29, 31, 32, 34, 35, 44, 45, 47, 52, 55, 57, 59, 60, 80, 83, 84, 89, 90, 103, 107, 133, 173, 178, 189, 200, 208, 209, 212, 216, 218, 219, 225, 233, 238, 255, 256, 276], "parenthes": [6, 12, 53, 95, 107, 154, 155, 184, 200, 224, 241], "type": [6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 23, 29, 30, 33, 44, 45, 49, 52, 53, 54, 55, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 71, 78, 80, 81, 82, 83, 84, 85, 86, 89, 93, 94, 95, 96, 97, 99, 101, 103, 107, 111, 116, 127, 133, 138, 152, 160, 161, 162, 164, 176, 179, 180, 182, 184, 186, 187, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202, 208, 209, 210, 212, 213, 214, 215, 218, 224, 225, 226, 229, 231, 232, 233, 238, 239, 241, 248, 251, 254, 257, 262, 266, 268, 270, 271, 272, 275, 276, 277], "enclos": [6, 63, 64, 69, 92, 104, 200, 210, 239], "colon": [6, 53], "preced": [6, 7, 12, 36, 45, 53, 54, 57, 58, 146, 212, 239], "space": [6, 12, 20, 33, 34, 35, 53, 54, 55, 62, 63, 64, 66, 68, 69, 82, 89, 95, 96, 105, 111, 112, 113, 135, 137, 140, 150, 153, 155, 161, 163, 170, 176, 179, 181, 184, 185, 186, 187, 195, 211, 219, 220, 231, 235, 245, 246, 248, 249, 250, 251, 253, 254, 268, 271], "omit": [6, 10, 18, 20, 35, 45, 52, 53, 54, 78, 80, 83, 89, 168, 200, 201, 208, 210, 218, 224, 233, 238, 266], "absent": [6, 37], "specifi": [6, 7, 10, 14, 18, 20, 23, 34, 35, 36, 48, 52, 53, 54, 55, 56, 59, 61, 62, 66, 69, 78, 80, 82, 83, 84, 86, 89, 93, 95, 96, 97, 103, 108, 111, 115, 116, 118, 120, 121, 123, 126, 128, 129, 130, 131, 133, 134, 150, 155, 160, 161, 163, 164, 169, 175, 176, 178, 179, 181, 183, 184, 187, 188, 189, 190, 191, 193, 195, 196, 197, 200, 202, 203, 206, 207, 208, 210, 212, 216, 217, 218, 219, 220, 221, 225, 226, 227, 231, 232, 233, 238, 239, 245, 246, 247, 250, 253, 262, 272], "displai": [6, 7, 12, 18, 19, 53, 54, 57, 78, 82, 96, 97, 101, 137, 170, 176, 179, 180, 186, 190, 191, 200, 208, 224, 231], "signatur": [6, 20, 29, 30, 45, 53, 89, 233, 234, 238, 239], "brace": [6, 58, 116, 200], "appear": [6, 7, 11, 12, 14, 34, 35, 37, 42, 44, 53, 54, 58, 59, 62, 63, 66, 69, 72, 76, 78, 80, 84, 89, 93, 95, 116, 120, 150, 166, 168, 171, 186, 188, 190, 193, 195, 196, 200, 209, 212, 216, 217, 218, 220, 224, 226, 231, 238, 239, 245, 249], "shape": [6, 10, 35, 69, 84, 86, 89, 91, 92, 101, 103, 110, 115, 116, 176, 186, 187, 189, 200, 203, 210, 220, 221, 222, 224, 225, 226, 239, 275], "combin": [6, 10, 12, 20, 34, 53, 57, 58, 61, 73, 80, 82, 83, 84, 93, 97, 103, 115, 119, 126, 134, 145, 152, 160, 161, 163, 164, 165, 169, 171, 172, 187, 188, 190, 191, 193, 195, 196, 200, 201, 209, 210, 212, 213, 216, 218, 220, 221, 235, 238, 265, 268, 271], "incorrectli": [6, 10, 20, 62, 63, 89, 188], "opt_cs": 6, "canon": [6, 11, 18, 35, 37, 42, 44, 45, 49, 53, 54, 55, 59, 69, 78, 83, 89, 93, 95, 111, 143, 147, 166, 168, 171, 173, 193, 201, 208, 209, 212, 218, 220, 226, 238, 276], "find": [6, 11, 12, 14, 16, 17, 20, 22, 23, 27, 30, 33, 35, 36, 44, 47, 48, 49, 52, 53, 57, 59, 61, 63, 65, 66, 67, 70, 75, 78, 80, 82, 89, 93, 95, 109, 117, 124, 131, 133, 135, 151, 158, 160, 161, 162, 166, 169, 171, 183, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 200, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 218, 219, 220, 226, 235, 238, 239, 241, 245, 254, 266, 268, 270, 272, 277], "optim": [6, 11, 35, 37, 44, 57, 93, 107, 133, 146, 150, 196, 200, 201, 209, 212, 220, 232], "mul": [6, 10, 11, 12, 15, 20, 27, 78, 80, 84, 93, 146, 150, 160, 161, 189, 190, 191, 195, 196, 200, 201, 202, 209, 212, 216, 217, 218, 219, 224, 256, 271], "pow": [6, 10, 11, 12, 27, 32, 35, 54, 59, 78, 84, 93, 165, 189, 190, 191, 196, 200, 202, 209, 212, 218, 219, 271, 275], "neg": [6, 11, 12, 18, 19, 23, 30, 32, 35, 36, 48, 52, 53, 58, 59, 61, 63, 65, 66, 69, 78, 80, 82, 83, 84, 89, 92, 93, 96, 97, 99, 100, 101, 103, 166, 176, 188, 189, 191, 193, 195, 196, 197, 200, 206, 208, 209, 210, 212, 213, 216, 218, 219, 220], "coeffici": [6, 14, 16, 18, 30, 33, 35, 52, 53, 55, 57, 58, 61, 66, 71, 72, 75, 76, 78, 82, 83, 86, 89, 90, 93, 104, 111, 116, 139, 153, 163, 171, 185, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 206, 207, 210, 212, 213, 215, 216, 217, 218, 219, 220, 226, 232, 248, 251, 271, 276], "none": [6, 7, 10, 11, 18, 19, 20, 27, 28, 29, 30, 31, 33, 34, 35, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 75, 76, 78, 80, 81, 83, 84, 86, 89, 90, 93, 94, 95, 96, 103, 108, 109, 110, 111, 112, 115, 116, 135, 137, 139, 140, 146, 151, 156, 161, 163, 166, 168, 172, 173, 174, 176, 178, 179, 180, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 244, 245, 247, 272, 276, 277], "process": [6, 7, 10, 11, 12, 18, 32, 35, 44, 45, 51, 53, 54, 59, 61, 69, 78, 80, 89, 93, 103, 112, 116, 118, 124, 127, 128, 130, 133, 186, 187, 193, 200, 201, 208, 212, 216, 218, 231, 235, 276], "concern": [6, 11, 18, 33, 36, 52, 57, 93, 181, 186, 188, 189, 190, 199, 200, 201, 212, 213, 218, 232, 233, 235, 241], "item": [6, 7, 11, 12, 14, 35, 42, 43, 45, 53, 58, 64, 70, 84, 89, 93, 111, 186, 190, 193, 196, 200, 208, 216, 217, 220, 231, 232, 235, 238, 239, 276], "fragment": [6, 54], "desir": [6, 10, 12, 16, 20, 23, 26, 44, 45, 53, 54, 56, 57, 58, 59, 63, 67, 69, 83, 84, 89, 92, 93, 94, 111, 112, 113, 115, 126, 130, 151, 176, 183, 184, 189, 191, 193, 195, 196, 197, 200, 201, 203, 208, 212, 216, 218, 219, 232, 234, 235, 238, 251, 265], "span": [6, 10, 82, 89, 96, 97, 195, 200, 236, 272], "subsequ": [6, 12, 53, 59, 176, 191, 193, 196, 235, 238, 248, 251], "indent": [6, 12, 241], "embed": [6, 7, 33, 45, 53, 81, 195], "hyperlink": 6, "classnam": 6, "erf": [6, 61, 78, 80, 200, 210, 220], "gauss": [6, 61, 80, 89, 135, 188, 195, 198, 218, 219], "erfc": [6, 61, 78, 200, 220], "complementari": [6, 61, 103], "erfi": [6, 61, 78, 200], "erf2": [6, 61, 200], "erfinv": [6, 61, 200, 220], "invers": [6, 27, 44, 45, 53, 54, 55, 60, 61, 79, 80, 86, 89, 93, 110, 111, 155, 159, 160, 163, 168, 171, 187, 188, 189, 191, 193, 196, 197, 200, 202, 210, 212, 216, 218, 219, 220, 238, 272, 276], "erfcinv": [6, 61, 200], "erf2inv": [6, 61, 200], "besselj": [6, 61, 75, 200, 212, 216, 270], "besselbas": [6, 61], "bessel": [6, 7, 59, 60, 71, 80, 196, 212, 216, 220, 270], "kind": [6, 7, 10, 11, 17, 18, 19, 20, 34, 35, 55, 58, 61, 73, 80, 84, 96, 99, 111, 116, 129, 181, 188, 190, 191, 196, 201, 202, 208, 216, 217, 220, 238, 251, 253, 256, 266, 276], "bess": [6, 61, 200, 212, 216, 220], "besselk": [6, 61, 200, 220], "cite": [6, 21], "citat": [6, 52, 194], "meant": [6, 7, 10, 12, 18, 20, 35, 53, 61, 66, 80, 93, 116, 133, 186, 191, 208, 212, 217, 249, 271], "augment": [6, 35, 89, 111, 128, 129, 133, 198, 218, 219, 236, 239, 277], "freeli": [6, 26, 87, 187], "wikipedia": [6, 11, 18, 20, 27, 29, 30, 31, 33, 34, 35, 41, 42, 44, 45, 52, 53, 54, 55, 56, 58, 59, 61, 63, 65, 69, 70, 71, 80, 82, 83, 84, 86, 89, 93, 101, 103, 106, 135, 137, 138, 139, 141, 142, 143, 147, 148, 149, 152, 154, 155, 164, 166, 169, 176, 178, 182, 196, 203, 207, 208, 209, 216, 219, 220, 233, 238, 245, 246, 250, 252, 254, 270, 272, 274], "wolfram": [6, 31, 46, 47, 53, 54, 56, 58, 59, 61, 63, 69, 80, 89, 93, 95, 194, 200, 202, 203, 205, 208, 213, 220, 238, 272], "mathworld": [6, 11, 31, 46, 47, 53, 54, 56, 58, 59, 61, 63, 69, 80, 89, 93, 194, 203, 208, 213, 220, 238], "nist": [6, 58, 59, 61, 171], "digit": [6, 11, 12, 35, 53, 54, 56, 57, 63, 80, 83, 93, 126, 176, 190, 196, 207, 212, 238, 265], "dlmf": [6, 58, 59, 61], "suffer": 6, "rot": [6, 69, 163], "publish": [6, 78, 210], "identifi": [6, 10, 18, 19, 33, 46, 53, 56, 57, 80, 89, 99, 128, 154, 155, 187, 190, 191, 201, 209, 212, 216, 217, 219, 220, 239, 242], "clickabl": 6, "kozen89": [6, 193, 194], "kozen": [6, 194], "landau": [6, 194, 266], "polynomi": [6, 7, 11, 16, 18, 22, 23, 31, 44, 52, 53, 54, 57, 58, 60, 71, 72, 73, 74, 76, 80, 83, 84, 86, 89, 93, 97, 103, 131, 133, 187, 189, 194, 198, 202, 207, 209, 210, 212, 213, 214, 215, 216, 219, 231, 255, 262, 267, 272, 277], "decomposit": [6, 44, 51, 85, 86, 89, 189, 191, 192, 193, 194, 202, 276], "1989": [6, 194, 218], "pp": [6, 44, 45, 51, 52, 53, 54, 58, 59, 80, 84, 89, 120, 130, 185, 188, 193, 194, 216, 217, 220], "445": [6, 194], "456": [6, 53, 194], "abramowitz": [6, 61], "milton": [6, 61], "stegun": [6, 61], "iren": [6, 61], "chapter": [6, 44, 61, 93, 116, 194], "formula": [6, 16, 33, 47, 52, 53, 57, 58, 59, 61, 66, 79, 83, 89, 93, 185, 187, 193, 196, 200, 202, 206, 209, 212, 213, 216, 270, 276], "tabl": [6, 18, 36, 44, 53, 58, 61, 74, 79, 80, 89, 93, 110, 133, 185, 195, 222, 258], "ed": [6, 45, 61, 89, 194, 218, 220], "1965": [6, 61, 84], "luke": [6, 61, 78, 210], "l": [6, 10, 12, 33, 34, 35, 36, 42, 44, 45, 52, 54, 61, 64, 65, 66, 67, 68, 70, 71, 76, 78, 80, 82, 85, 86, 89, 93, 96, 97, 103, 105, 110, 111, 113, 115, 116, 119, 120, 121, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 138, 164, 167, 168, 169, 171, 183, 184, 185, 187, 189, 191, 193, 194, 200, 202, 203, 209, 210, 213, 216, 218, 220, 224, 225, 226, 227, 231, 233, 238, 254, 276], "Their": [6, 53, 61, 78, 186, 190, 193, 210], "approxim": [6, 12, 17, 33, 44, 52, 53, 54, 57, 61, 63, 69, 78, 80, 89, 93, 97, 100, 135, 169, 186, 190, 191, 196, 203, 207, 210, 220, 257, 266, 270], "1969": [6, 54, 61, 78, 194, 210], "en": [6, 7, 18, 20, 27, 29, 30, 31, 33, 34, 35, 41, 42, 44, 45, 52, 53, 54, 55, 56, 58, 59, 61, 63, 65, 69, 70, 71, 80, 81, 82, 83, 84, 86, 89, 93, 101, 103, 106, 135, 137, 138, 139, 141, 142, 143, 147, 148, 149, 152, 154, 155, 164, 166, 176, 178, 182, 196, 197, 203, 207, 208, 209, 216, 219, 220, 233, 238, 239, 245, 246, 250, 252, 254, 272], "bessel_funct": [6, 61], "typefunct": [6, 61], "gamma": [6, 7, 12, 20, 52, 53, 55, 57, 58, 60, 78, 80, 106, 133, 163, 184, 185, 200, 210, 212, 216, 220, 261, 276], "infti": [6, 11, 18, 31, 52, 53, 54, 58, 59, 61, 78, 80, 187, 196, 203, 207, 210, 216, 219, 220, 266, 270, 276], "mathrm": [6, 25, 43, 52, 53, 54, 61, 78, 80, 89, 191, 193, 200, 208, 210, 216, 219, 220, 263, 266, 270], "factori": [6, 16, 20, 52, 53, 57, 60, 61, 89, 93, 95, 185, 191, 193, 195, 196, 200, 202, 212, 218, 220, 233, 234, 238, 239, 276], "z": [6, 10, 11, 12, 14, 18, 20, 31, 32, 35, 36, 44, 45, 52, 53, 54, 55, 56, 58, 59, 61, 65, 66, 67, 68, 69, 78, 80, 83, 84, 86, 89, 95, 96, 97, 105, 108, 109, 110, 113, 116, 118, 119, 120, 121, 123, 124, 125, 130, 131, 133, 134, 135, 144, 146, 150, 160, 161, 163, 167, 171, 175, 176, 177, 178, 179, 181, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 207, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 232, 233, 239, 245, 247, 248, 249, 250, 251, 253, 254, 265, 266, 268, 270, 271, 275, 276, 277], "whole": [6, 10, 18, 53, 55, 61, 80, 97, 105, 186, 187, 195, 196, 200, 203, 208, 210, 216, 219, 238], "complex": [6, 10, 11, 12, 15, 18, 20, 23, 27, 30, 32, 33, 35, 44, 53, 54, 56, 57, 58, 60, 61, 65, 75, 78, 84, 85, 89, 93, 94, 95, 101, 103, 107, 116, 133, 135, 139, 149, 152, 154, 155, 166, 175, 176, 184, 188, 189, 191, 192, 195, 196, 200, 201, 205, 210, 212, 216, 218, 219, 220, 233, 241, 276, 277], "plane": [6, 27, 53, 61, 63, 65, 66, 68, 69, 79, 80, 101, 118, 138, 139, 183, 184, 208, 219, 254, 276], "pole": [6, 11, 61, 78, 102, 103, 139, 207, 210, 216], "pi": [6, 10, 11, 12, 15, 18, 20, 23, 26, 27, 28, 30, 31, 32, 33, 35, 45, 52, 55, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 72, 78, 80, 89, 93, 105, 118, 133, 135, 137, 138, 139, 140, 142, 150, 161, 163, 164, 167, 169, 176, 185, 186, 188, 190, 191, 196, 200, 203, 207, 208, 209, 210, 212, 215, 216, 218, 219, 220, 238, 245, 247, 254, 265, 270, 276], "oo": [6, 11, 14, 18, 19, 31, 33, 52, 53, 57, 58, 59, 61, 66, 78, 80, 83, 89, 103, 105, 152, 164, 167, 191, 193, 196, 205, 206, 207, 208, 212, 215, 216, 218, 219, 220, 225, 238, 241, 266, 270], "known": [6, 11, 18, 19, 20, 30, 34, 35, 36, 42, 44, 45, 53, 54, 57, 58, 61, 63, 66, 71, 78, 80, 81, 90, 93, 101, 103, 104, 106, 108, 113, 130, 169, 176, 183, 189, 190, 191, 195, 196, 200, 203, 206, 208, 209, 210, 212, 214, 215, 216, 217, 218, 220, 238, 239, 245, 251, 253, 276], "sqrt": [6, 10, 11, 14, 18, 20, 22, 23, 27, 31, 32, 33, 35, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 77, 78, 80, 81, 84, 85, 89, 93, 95, 96, 99, 103, 105, 118, 135, 137, 139, 140, 145, 150, 160, 161, 163, 164, 166, 167, 169, 176, 181, 184, 185, 188, 190, 191, 193, 195, 196, 199, 200, 201, 206, 209, 210, 212, 213, 215, 216, 218, 219, 220, 238, 239, 241, 245, 253, 254, 265, 270, 275, 276, 277], "obei": [6, 61, 185, 200, 210], "mirror": [6, 61, 80, 139], "symmetri": [6, 10, 41, 46, 49, 61, 84, 145, 185, 216, 224, 226, 265, 276], "conjug": [6, 31, 42, 43, 44, 53, 60, 61, 84, 89, 105, 135, 149, 152, 166, 196, 200, 216, 226], "differenti": [6, 7, 10, 11, 22, 33, 53, 58, 59, 61, 70, 71, 73, 76, 103, 110, 111, 115, 116, 118, 120, 123, 126, 127, 128, 129, 130, 133, 134, 155, 161, 175, 176, 178, 179, 181, 184, 187, 193, 197, 199, 200, 205, 210, 212, 214, 216, 217, 245, 251, 252, 255, 262, 266, 267, 270], "polygamma": [6, 58, 61, 200], "seri": [6, 16, 33, 34, 35, 36, 43, 44, 52, 53, 55, 57, 58, 59, 61, 73, 76, 77, 78, 82, 93, 100, 103, 116, 123, 125, 133, 179, 183, 192, 193, 200, 205, 206, 210, 216, 219, 256, 262, 267], "expans": [6, 16, 20, 35, 53, 55, 58, 59, 61, 73, 80, 89, 93, 130, 145, 147, 196, 197, 202, 203, 204, 209, 211, 216, 218, 219, 256, 267, 276], "eulergamma": [6, 57, 58, 61], "40": [6, 35, 56, 58, 61, 63, 70, 84, 89, 93, 96, 186, 197, 199, 200, 220, 241, 265], "288037795340032417959588909060233922890": [6, 61], "49801566811835604271": [6, 61], "15494982830181068512": [6, 61], "lowergamma": [6, 61, 220], "lower": [6, 10, 11, 18, 30, 33, 35, 44, 45, 52, 53, 55, 61, 62, 64, 69, 70, 80, 84, 85, 86, 89, 101, 106, 110, 166, 179, 185, 187, 189, 191, 193, 196, 200, 209, 210, 212, 216, 225, 226, 235, 245, 266, 274], "uppergamma": [6, 58, 61, 200, 220], "upper": [6, 30, 52, 54, 57, 61, 62, 69, 70, 84, 85, 86, 89, 92, 93, 101, 110, 159, 166, 185, 189, 191, 193, 195, 196, 200, 210, 218, 225, 245], "loggamma": [6, 7, 61, 200], "log": [6, 7, 12, 20, 25, 27, 33, 35, 44, 52, 53, 57, 58, 60, 61, 71, 75, 77, 78, 80, 84, 89, 93, 186, 191, 200, 202, 207, 210, 212, 216, 219, 220, 227, 266, 276, 277], "digamma": [6, 58, 61, 200], "trigamma": [6, 61, 200], "beta": [6, 12, 35, 44, 53, 60, 80, 163, 176, 185, 195, 197, 200, 216, 220], "euler": [6, 33, 34, 52, 53, 54, 57, 60, 61, 69, 75, 81, 93, 163, 176, 180, 184, 185, 200, 216, 220, 245, 246], "gamma_funct": [6, 61], "gov": [6, 58, 59, 61], "gammafunct": [6, 61], "gammabetaerf": [6, 58, 61], "unusu": [6, 18, 118, 231], "inlin": [6, 81, 180, 200, 233], "pretti": [6, 11, 20, 34, 35, 61, 80, 81, 89, 93, 97, 103, 118, 180, 210, 212, 219, 253, 263, 267, 270, 272, 276], "As": [6, 10, 15, 16, 19, 20, 26, 35, 44, 45, 53, 54, 57, 58, 59, 61, 77, 78, 83, 89, 92, 93, 95, 115, 116, 118, 120, 127, 130, 131, 166, 171, 183, 187, 188, 190, 191, 193, 197, 199, 200, 207, 208, 210, 216, 219, 220, 238, 239, 248, 249, 265, 266, 268, 270, 271, 272, 275, 276], "literatur": [6, 11, 78, 170, 192], "fact": [6, 10, 11, 18, 19, 20, 23, 30, 31, 53, 58, 61, 71, 78, 93, 99, 118, 130, 171, 187, 188, 190, 193, 195, 197, 199, 210, 212, 216, 219, 231, 239, 253, 265, 268, 269, 270, 271, 276], "eval": [6, 10, 18, 29, 30, 35, 53, 59, 61, 152, 166, 191, 196, 200, 233, 265], "illumin": 6, "tone": 6, "narr": [6, 8, 269], "excerpt": 6, "geometri": [6, 62, 63, 64, 66, 67, 68, 69, 70, 80, 126, 139, 192, 247, 254, 255, 262, 270], "autofunct": 6, "intersect": [6, 18, 23, 33, 34, 44, 63, 64, 66, 67, 68, 69, 70, 139, 187, 196, 200, 206, 207, 219, 262], "convex_hul": [6, 65, 69, 70], "are_similar": [6, 64, 65, 70], "autoclass": 6, "linearent": [6, 63, 66, 67, 68, 69], "rai": [6, 63, 65, 66, 67, 69, 70, 135, 139], "segment": [6, 10, 44, 63, 65, 66, 67, 68, 69, 70, 183, 186, 216, 231], "curv": [6, 34, 55, 65, 80, 93, 96, 135, 186, 187, 216, 245, 254, 266], "ellips": [6, 64, 65, 69, 138, 186, 200, 275], "circl": [6, 20, 53, 63, 64, 65, 67, 68, 69, 70, 78, 139, 146, 186, 219, 245, 247, 254], "polygon": [6, 63, 64, 65, 70, 79, 186, 254], "regularpolygon": [6, 64, 65, 69, 186], "triangl": [6, 20, 34, 58, 64, 65, 69, 70, 80, 84, 93, 185, 186, 247, 254], "rel": [6, 7, 10, 34, 35, 43, 44, 45, 46, 50, 51, 52, 54, 57, 64, 78, 93, 108, 110, 113, 121, 130, 131, 138, 165, 176, 179, 183, 184, 187, 189, 190, 193, 195, 208, 210, 215, 218, 220, 231, 238, 248, 249, 253, 270], "cumbersom": 6, "viewcod": 6, "aco": [6, 12, 27, 60, 66, 69, 118, 133, 139, 176, 200, 216, 245, 276], "obj": [6, 10, 18, 53, 191, 196, 200, 234], "qualifi": [6, 242], "elementari": [6, 18, 19, 20, 44, 53, 54, 57, 60, 61, 75, 78, 80, 84, 89, 93, 131, 159, 162, 192, 196, 197, 204, 238, 239, 248, 258], "trigonometr": [6, 20, 53, 60, 80, 197, 203, 211, 215, 216, 219, 239, 256, 267, 277], "trail": [6, 45, 93, 191, 193, 196, 236, 241], "pair": [6, 12, 16, 34, 35, 44, 45, 53, 54, 59, 65, 70, 77, 89, 93, 116, 120, 156, 158, 160, 161, 166, 175, 187, 190, 193, 195, 196, 201, 206, 207, 209, 210, 212, 213, 216, 219, 220, 233, 238, 248, 265, 272], "www": [6, 7, 27, 33, 44, 45, 54, 56, 58, 61, 75, 80, 81, 93, 101, 180, 194, 199, 200, 209, 212, 213, 216, 220, 238, 272, 275], "master": [6, 7, 25, 80, 231], "usag": [6, 7, 11, 12, 18, 19, 20, 26, 29, 55, 59, 80, 126, 163, 181, 186, 187, 192, 193, 200, 208, 210, 213, 216, 217, 221, 235, 239, 240, 251, 252, 262, 271], "expect": [6, 7, 12, 18, 20, 23, 34, 36, 38, 53, 59, 61, 65, 83, 93, 94, 103, 116, 160, 190, 193, 195, 197, 198, 207, 212, 215, 219, 220, 229, 231, 232, 235, 238, 239, 270, 271], "vector": [6, 16, 27, 31, 35, 37, 40, 44, 45, 55, 61, 66, 67, 68, 75, 76, 82, 84, 89, 94, 96, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 138, 139, 152, 161, 163, 168, 171, 178, 179, 180, 187, 192, 195, 200, 210, 216, 218, 220, 225, 226, 231, 232, 246, 250, 255, 259, 261, 272], "dynamicsymbol": [6, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 176, 179, 180, 181, 182, 183, 184], "custom": [6, 10, 21, 35, 45, 53, 57, 60, 81, 84, 89, 109, 110, 175, 180, 181, 202, 206, 213, 220, 226, 232, 239, 245, 253, 262, 270, 272], "sine": [6, 20, 53, 59, 61, 78, 80, 140, 197, 203, 209, 265], "expand": [6, 10, 11, 12, 16, 18, 35, 55, 57, 58, 59, 61, 78, 80, 84, 103, 116, 118, 133, 147, 155, 158, 165, 166, 188, 190, 192, 193, 195, 196, 197, 203, 207, 209, 210, 212, 216, 219, 220, 224, 232, 239, 250, 256, 265, 270], "troubleshoot": [6, 130], "spell": [6, 10, 11, 216], "try": [6, 7, 8, 10, 11, 12, 18, 19, 20, 45, 52, 53, 57, 61, 63, 68, 78, 80, 83, 86, 89, 92, 93, 156, 158, 165, 166, 186, 190, 195, 200, 205, 207, 208, 209, 210, 212, 213, 216, 218, 239, 241, 265, 268, 271, 272, 276], "referencefram": [6, 108, 109, 110, 111, 113, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 133, 134, 177, 178, 179, 180, 181, 182, 183], "though": [6, 11, 12, 18, 19, 20, 26, 36, 53, 54, 55, 65, 69, 78, 80, 84, 89, 93, 107, 111, 118, 128, 130, 161, 175, 176, 183, 184, 188, 190, 191, 196, 197, 209, 210, 212, 216, 217, 218, 219, 231, 251, 266, 271, 276], "frame": [6, 107, 108, 109, 110, 111, 113, 115, 116, 118, 119, 120, 121, 123, 125, 127, 128, 129, 130, 131, 133, 134, 175, 176, 177, 178, 179, 181, 182, 183, 235, 245, 251], "notimplementederror": [6, 33, 52, 63, 66, 70, 80, 89, 101, 189, 195, 199, 208, 215, 216, 217, 218, 219], "outsid": [6, 23, 31, 44, 53, 61, 64, 69, 84, 93, 107, 171, 184, 196, 212, 266, 271], "plot": [6, 20, 25, 62, 63, 65, 66, 69, 76, 81, 89, 96, 97, 102, 133, 150, 153, 159, 203, 255, 261, 262, 270, 275], "ahead": [6, 93], "submit": 6, "sub": [6, 10, 11, 12, 14, 18, 19, 20, 23, 35, 52, 59, 61, 62, 63, 64, 65, 66, 67, 69, 80, 83, 84, 86, 89, 93, 95, 96, 97, 103, 107, 109, 116, 118, 119, 120, 123, 124, 130, 133, 163, 164, 169, 176, 185, 187, 189, 190, 191, 196, 200, 207, 208, 212, 213, 216, 217, 218, 220, 231, 232, 234, 256, 265, 266, 268], "common": [6, 7, 10, 11, 12, 18, 19, 20, 22, 23, 30, 33, 35, 44, 45, 53, 54, 59, 64, 67, 70, 80, 86, 88, 89, 93, 94, 101, 103, 108, 110, 112, 119, 126, 131, 133, 138, 171, 176, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 202, 208, 209, 210, 211, 213, 216, 220, 232, 233, 236, 238, 239, 251, 253, 256, 259, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276], "matrixcommon": [6, 86, 88, 89], "dyadic": [6, 56, 108, 113, 116, 118, 123, 125, 126, 133, 178, 180, 182, 247, 252], "shorten": 6, "highli": [7, 53, 57, 100, 190, 196, 205, 233], "aspect": [7, 18, 89, 190], "teach": [7, 45, 54, 220], "conduct": 7, "accord": [7, 12, 35, 41, 44, 45, 49, 52, 53, 54, 61, 83, 86, 89, 93, 95, 117, 126, 160, 166, 186, 191, 193, 195, 197, 213, 218, 219, 226, 231, 233, 238, 253], "survei": 7, "commonli": [7, 11, 45, 58, 61, 80, 89, 107, 183, 188, 216, 251], "encount": [7, 12, 16, 53, 80, 89, 158, 188, 193, 196, 218, 219, 233, 245, 272], "problem": [7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 37, 47, 49, 53, 54, 65, 78, 80, 84, 89, 93, 96, 98, 99, 104, 107, 116, 120, 121, 124, 126, 128, 175, 183, 184, 187, 188, 192, 193, 210, 212, 213, 216, 219, 235, 238, 252, 261, 266, 268, 272], "offer": [7, 34, 35, 44, 53, 94, 107, 133, 175, 184, 190, 195, 235, 252], "bring": [7, 78, 111, 124, 189, 203, 212, 272], "greater": [7, 23, 31, 45, 53, 59, 61, 78, 82, 93, 103, 193, 196, 199, 207, 212, 216, 218, 220, 235, 238, 251, 266], "clariti": [7, 44, 179], "mission": [7, 34, 87], "ca": [7, 25, 54, 61, 80, 199, 200, 238], "dedic": [7, 35, 192, 233, 249, 251], "essenti": [7, 37, 48, 53, 57, 59, 60, 61, 78, 113, 118, 181, 182, 184, 187, 188, 191, 195, 207, 210, 248, 251, 252, 253], "element": [7, 10, 11, 12, 15, 18, 27, 30, 34, 35, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 69, 76, 78, 80, 82, 83, 84, 85, 86, 89, 92, 93, 94, 96, 97, 103, 104, 113, 133, 135, 138, 152, 163, 171, 179, 182, 184, 186, 187, 188, 189, 191, 192, 193, 196, 198, 199, 200, 206, 207, 208, 210, 212, 213, 216, 218, 219, 220, 221, 225, 232, 234, 235, 238, 239, 240, 247, 266, 271, 272, 275, 276], "deviat": [7, 139, 220], "advanc": [7, 15, 17, 20, 29, 44, 53, 57, 58, 89, 90, 126, 131, 182, 186, 189, 190, 192, 194, 195, 202, 209, 216, 231, 232, 233, 238, 265, 267, 269, 273, 274, 275, 276], "docutil": 7, "sourceforg": [7, 34], "net": [7, 34, 69, 194, 216, 220, 238], "ext": [7, 187, 191], "autodoc": 7, "associ": [7, 10, 11, 18, 34, 36, 51, 53, 54, 60, 61, 75, 76, 78, 82, 131, 133, 156, 164, 175, 176, 183, 184, 188, 189, 190, 191, 193, 195, 200, 208, 210, 213, 226, 240], "graphic": [7, 101], "info": [7, 12, 103, 200, 216, 217], "bear": [7, 18], "linkcod": 7, "readthedoc": [7, 81, 239], "subset": [7, 16, 18, 20, 33, 34, 37, 40, 44, 45, 51, 58, 59, 65, 76, 78, 80, 82, 93, 187, 189, 193, 195, 200, 208, 238], "modifi": [7, 11, 12, 34, 35, 44, 53, 59, 61, 93, 95, 129, 138, 186, 193, 195, 196, 197, 200, 212, 218, 219, 220, 231, 234, 235, 238, 239, 265, 270, 272], "sphinx_math_dollar": 7, "delimit": [7, 53, 200], "dollar": [7, 270], "2": [7, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 222, 225, 226, 227, 229, 231, 232, 233, 234, 235, 238, 239, 241, 245, 246, 247, 248, 249, 250, 251, 253, 254, 265, 266, 268, 270, 271, 272, 275, 276, 277], "sphinxext": 7, "plot_direct": 7, "figur": [7, 53, 54, 63, 64, 66, 68, 69, 80, 97, 116, 161, 183, 184, 185, 186, 197, 200, 254, 276], "devel": [7, 185], "supersed": [7, 116, 133], "pep": [7, 35, 53, 83], "257": [7, 93, 218], "our": [7, 9, 10, 16, 20, 25, 35, 53, 61, 78, 89, 93, 119, 171, 183, 184, 186, 187, 189, 195, 196, 197, 200, 207, 210, 213, 216, 219, 231, 265, 268, 269, 271, 276], "introduct": [7, 10, 17, 40, 44, 45, 126, 182, 191, 192, 193, 194, 200, 213, 216, 219, 252, 256, 257, 258, 262, 269, 275], "four": [7, 35, 45, 53, 57, 61, 83, 86, 93, 99, 104, 117, 126, 131, 139, 176, 186, 187, 193, 196, 200, 208, 213, 216, 218, 220, 221, 245, 246, 249], "locat": [7, 10, 45, 53, 67, 89, 93, 96, 97, 99, 110, 120, 130, 134, 179, 181, 195, 196, 200, 212, 220, 234, 243, 245, 248, 250, 252, 253], "websit": [7, 274], "advertis": 7, "serv": [7, 11, 16, 20, 29, 30, 35, 50, 53, 60, 76, 195, 216, 217, 241, 269], "initi": [7, 11, 18, 29, 44, 48, 53, 54, 55, 58, 61, 69, 71, 72, 75, 76, 77, 78, 81, 93, 95, 97, 99, 101, 103, 108, 111, 113, 115, 116, 118, 120, 125, 128, 129, 130, 133, 134, 138, 146, 155, 177, 178, 180, 184, 185, 193, 195, 196, 200, 206, 210, 212, 216, 218, 219, 225, 233, 240, 241, 245, 246, 247, 248, 249], "obtain": [7, 11, 12, 14, 16, 23, 29, 30, 34, 36, 37, 44, 45, 46, 49, 53, 54, 56, 57, 58, 59, 61, 63, 64, 66, 67, 69, 75, 78, 80, 82, 84, 89, 92, 93, 100, 103, 126, 129, 131, 139, 161, 166, 171, 187, 188, 191, 193, 195, 196, 199, 201, 208, 209, 210, 212, 213, 216, 217, 218, 219, 238, 241, 248, 249], "technic": [7, 10, 13, 20, 24, 34, 53, 133, 152, 187, 216, 233, 238, 251, 268, 271], "place": [7, 8, 10, 11, 12, 18, 20, 23, 24, 34, 45, 46, 53, 54, 59, 69, 85, 89, 92, 93, 95, 103, 133, 134, 194, 195, 200, 201, 207, 209, 212, 216, 235, 238, 264, 265, 272, 276], "site": [7, 93, 234], "upload": [7, 93], "belong": [7, 18, 31, 34, 44, 49, 53, 76, 89, 166, 176, 183, 186, 187, 189, 190, 193, 195, 196, 207, 208, 212, 213, 219, 226], "insid": [7, 10, 11, 12, 20, 44, 45, 50, 53, 63, 64, 69, 96, 107, 109, 120, 130, 165, 166, 171, 180, 184, 196, 200, 208, 210, 213, 218, 219, 220, 222, 224, 235, 271, 272], "spars": [7, 11, 86, 88, 89, 160, 189, 192, 195, 196, 197, 220, 221, 259, 271], "substanti": [7, 94], "edit": [7, 80, 89, 93, 193, 194, 196], "arg": [7, 11, 18, 20, 23, 27, 29, 30, 31, 32, 33, 34, 35, 37, 44, 45, 47, 50, 52, 53, 54, 55, 57, 58, 60, 61, 63, 64, 66, 68, 69, 70, 75, 78, 80, 83, 84, 85, 86, 87, 89, 91, 93, 95, 103, 135, 141, 144, 146, 149, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 176, 180, 184, 186, 189, 191, 193, 195, 196, 197, 200, 202, 203, 206, 207, 208, 209, 212, 216, 218, 219, 220, 221, 225, 226, 231, 232, 233, 234, 238, 239, 241, 245, 246], "invari": [7, 10, 20, 44, 49, 100, 103, 185, 191, 195, 196, 210, 216], "polici": [7, 8, 10, 234, 236], "5": [7, 12, 14, 18, 20, 22, 23, 27, 29, 30, 31, 33, 35, 36, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 103, 105, 106, 108, 113, 116, 118, 119, 123, 124, 125, 126, 128, 135, 139, 160, 161, 164, 166, 173, 175, 177, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 225, 226, 231, 232, 238, 239, 245, 247, 249, 251, 253, 254, 265, 266, 268, 271, 272, 275, 276], "center": [7, 16, 33, 44, 52, 53, 63, 67, 69, 70, 80, 89, 108, 110, 113, 116, 118, 123, 125, 127, 131, 133, 139, 183, 186, 195, 200, 208, 254], "resid": 7, "standalon": [7, 133], "restructur": 7, "appli": [7, 10, 11, 19, 20, 27, 28, 29, 30, 31, 35, 44, 45, 46, 51, 52, 53, 54, 55, 56, 59, 60, 63, 68, 69, 71, 79, 80, 83, 84, 85, 89, 93, 95, 96, 97, 99, 103, 104, 108, 109, 118, 121, 128, 130, 132, 143, 147, 150, 151, 155, 158, 159, 163, 166, 176, 184, 186, 188, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 206, 207, 208, 209, 211, 212, 216, 217, 218, 219, 220, 221, 224, 231, 234, 238, 245, 246, 249, 272, 275, 276], "surround": [7, 53, 70, 139, 208, 241], "nu": [7, 12, 61, 80, 93, 167, 188, 200, 212, 220, 226, 270], "equat": [7, 11, 12, 14, 16, 21, 33, 35, 49, 52, 53, 55, 59, 61, 63, 66, 67, 71, 75, 76, 77, 78, 81, 84, 89, 96, 99, 103, 105, 107, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 125, 126, 127, 132, 133, 134, 135, 139, 170, 175, 179, 180, 183, 184, 185, 186, 187, 192, 193, 194, 195, 198, 199, 200, 206, 210, 212, 214, 215, 217, 225, 245, 249, 250, 254, 266, 267, 270], "strip": [7, 54, 80, 93, 193, 236, 241], "out": [7, 12, 18, 19, 20, 34, 35, 44, 45, 53, 54, 55, 58, 61, 69, 78, 80, 86, 89, 93, 96, 103, 104, 116, 118, 120, 123, 133, 143, 147, 158, 161, 163, 165, 166, 187, 188, 190, 191, 195, 196, 197, 198, 200, 201, 207, 210, 212, 216, 221, 231, 233, 238, 239, 268, 270, 271, 275, 276], "unimport": 7, "bullet": 7, "avoid": [7, 8, 10, 11, 19, 20, 35, 36, 53, 54, 59, 78, 80, 83, 89, 92, 95, 120, 130, 160, 183, 184, 188, 190, 196, 200, 201, 208, 212, 216, 218, 220, 224, 233, 236, 239, 268, 269], "whitespac": [7, 53, 236], "invalid": [7, 12, 23, 53, 54, 95, 118, 190, 193, 208], "dx": [7, 10, 11, 16, 20, 33, 35, 49, 53, 55, 57, 61, 70, 72, 75, 76, 77, 78, 80, 89, 96, 106, 111, 112, 155, 184, 196, 197, 203, 213, 216, 217, 221, 266, 270, 275, 277], "meta": [7, 53, 216, 217], "stackexchang": [7, 63], "5020": 7, "wikibook": [7, 80, 81], "overleaf": 7, "mathematical_express": 7, "verbatim": 7, "_rewrit": 7, "_expand": 7, "difficult": [7, 18, 53, 89, 116, 197, 210, 216, 217, 219, 232, 254, 270, 276], "sentenc": [7, 83], "thumb": [7, 83, 238], "greek": [7, 11, 26, 53, 93, 95, 187, 200], "letter": [7, 11, 12, 26, 46, 53, 54, 93, 166, 200, 238, 266, 268], "\u03b1": [7, 185, 199], "alpha": [7, 12, 44, 53, 61, 80, 82, 138, 142, 145, 163, 179, 183, 184, 185, 191, 193, 195, 196, 199, 200, 212, 216, 220], "logarithm": [7, 12, 27, 33, 35, 53, 54, 59, 60, 78, 80, 89, 93, 191, 193, 197, 200, 210, 212, 219, 220, 267], "italic": 7, "emphasi": [7, 190], "asterisk": 7, "stirl": [7, 45, 60, 238], "fals": [7, 11, 12, 18, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 78, 80, 81, 83, 84, 85, 86, 89, 90, 93, 95, 96, 97, 101, 103, 105, 106, 109, 111, 112, 113, 116, 118, 119, 123, 124, 125, 127, 128, 129, 130, 131, 134, 138, 150, 151, 155, 158, 163, 164, 165, 166, 169, 173, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 225, 226, 229, 231, 232, 233, 234, 238, 239, 241, 245, 247, 268, 271, 272, 275], "permut": [7, 36, 38, 40, 41, 43, 46, 49, 50, 51, 54, 58, 61, 84, 86, 89, 112, 166, 185, 189, 191, 196, 213, 221, 222, 226, 238, 276], "cycl": [7, 10, 35, 41, 44, 45, 51, 53, 56, 58, 84, 93, 140, 208, 238], "partit": [7, 40, 44, 60, 93, 120, 130, 132, 220, 235, 237], "reduc": [7, 12, 19, 23, 28, 30, 32, 36, 49, 53, 54, 56, 58, 59, 61, 68, 69, 78, 80, 89, 93, 103, 104, 130, 148, 166, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 206, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 238, 272], "ge": [7, 18, 58, 59, 61, 78, 84, 89, 93, 185, 188, 193, 210, 238], "consecut": [7, 35, 44, 49, 52, 54, 58, 69, 212, 218], "group": [7, 34, 39, 40, 45, 46, 49, 50, 51, 53, 56, 58, 82, 83, 93, 145, 154, 155, 166, 185, 186, 187, 195, 196, 212, 216, 218, 219, 226, 238], "pairwis": [7, 31, 34, 53, 58, 70, 89, 93, 213, 218], "ital": [7, 200], "last": [7, 8, 10, 12, 14, 15, 16, 18, 19, 20, 23, 28, 29, 30, 34, 35, 36, 43, 44, 45, 49, 52, 53, 54, 57, 63, 80, 83, 84, 85, 86, 87, 89, 91, 92, 93, 95, 103, 115, 127, 138, 171, 185, 186, 187, 188, 190, 191, 193, 196, 199, 200, 207, 208, 213, 216, 218, 219, 220, 221, 226, 229, 231, 232, 233, 234, 236, 238, 239, 241, 266, 268, 271, 272], "talk": [7, 13, 24, 54, 187, 195, 248], "handl": [7, 16, 18, 19, 20, 33, 41, 45, 53, 59, 80, 81, 83, 88, 93, 94, 95, 96, 104, 107, 116, 130, 146, 149, 155, 156, 161, 190, 196, 197, 206, 212, 214, 216, 218, 221, 224, 232, 238, 239, 241, 256, 271, 276], "referenc": [7, 8, 37, 42, 93, 115, 118, 163, 195], "overlin": [7, 18, 61], "normal": [7, 10, 12, 18, 19, 20, 23, 27, 30, 35, 44, 52, 53, 57, 59, 63, 66, 67, 68, 80, 81, 83, 87, 88, 89, 93, 95, 105, 107, 110, 116, 118, 124, 133, 139, 150, 160, 163, 164, 165, 166, 167, 171, 174, 176, 184, 187, 190, 191, 192, 193, 195, 196, 200, 201, 203, 208, 209, 213, 216, 220, 225, 231, 236, 238, 245, 259], "assign": [7, 18, 34, 35, 36, 49, 53, 69, 80, 82, 83, 89, 95, 111, 116, 123, 133, 171, 181, 184, 186, 188, 193, 200, 218, 219, 226, 233, 248, 251, 268], "structur": [7, 10, 11, 15, 18, 20, 32, 34, 35, 41, 44, 45, 51, 53, 78, 80, 83, 84, 89, 96, 97, 99, 115, 126, 164, 166, 186, 187, 190, 193, 195, 196, 197, 212, 214, 216, 218, 219, 220, 224, 225, 233, 235, 238, 239, 268, 276], "suggest": [7, 10, 36, 44, 80, 89, 93, 116, 198, 272], "american": [7, 39, 54], "color": [7, 81, 101, 180, 200, 231, 238, 262, 275], "colour": 7, "quotat": 7, "line_color": [7, 186, 203], "aesthet": [7, 11, 186], "ariti": [7, 186], "term": [7, 10, 11, 12, 16, 18, 20, 35, 44, 53, 54, 55, 57, 58, 59, 61, 72, 76, 77, 78, 80, 83, 84, 89, 93, 97, 101, 103, 109, 111, 118, 120, 123, 126, 128, 130, 131, 145, 150, 162, 163, 166, 168, 171, 176, 178, 181, 183, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 200, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 216, 217, 218, 219, 220, 224, 225, 238, 245, 247, 251, 256, 266, 268, 270, 271, 276], "unrestrict": [7, 42, 238], "necklac": [7, 238], "bracelet": [7, 238], "impli": [7, 11, 12, 18, 27, 31, 35, 44, 83, 99, 166, 186, 191, 193, 200, 208, 210, 216, 218, 221, 224, 225, 238, 251], "turn": [7, 10, 11, 18, 35, 53, 59, 61, 68, 78, 87, 124, 128, 181, 187, 195, 197, 200, 207, 208, 210, 212, 213, 216, 231, 238, 253, 268, 270], "sequenc": [7, 12, 33, 35, 37, 40, 43, 44, 45, 49, 51, 52, 53, 54, 56, 58, 61, 63, 66, 67, 68, 69, 70, 73, 77, 83, 84, 86, 89, 92, 93, 133, 139, 165, 166, 191, 194, 196, 200, 202, 204, 207, 209, 210, 212, 213, 216, 217, 219, 226, 229, 232, 233, 238, 240, 241], "revers": [7, 37, 42, 45, 52, 53, 54, 59, 80, 81, 83, 89, 93, 103, 165, 176, 180, 187, 189, 193, 196, 197, 200, 201, 208, 212, 216, 238, 276], "ambigu": [7, 10, 12, 14, 53, 154, 160, 212, 224, 229], "person": [7, 11], "chebyshev": [7, 33, 53, 80, 193, 196], "pafnuti": 7, "lvovich": 7, "tchebychev": 7, "whose": [7, 11, 18, 20, 34, 36, 37, 42, 45, 52, 53, 54, 59, 63, 67, 69, 70, 76, 80, 83, 89, 93, 113, 128, 138, 161, 171, 177, 178, 181, 184, 188, 189, 191, 195, 196, 207, 208, 212, 216, 217, 218, 220, 226, 231, 235, 238, 239, 245, 247, 249, 251], "transliter": 7, "russian": 7, "chebyshevt": [7, 61, 200], "orthogonalpolynomi": 7, "t_n": [7, 58, 61, 80, 193, 249], "tens": 7, "inclus": [7, 52, 99, 159, 187, 206, 207, 208, 219], "pronoun": 7, "gender": 7, "neutral": 7, "he": [7, 58, 78, 193], "she": [7, 219], "extran": [7, 216], "belittl": 7, "obvious": [7, 36, 44, 169, 183, 190, 210], "easili": [7, 10, 18, 20, 25, 53, 54, 76, 78, 89, 93, 94, 128, 164, 183, 196, 199, 200, 205, 212, 213, 216, 218, 219, 232, 270], "straightforward": [7, 20, 44, 54, 89, 210], "unwelcom": 7, "judgement": 7, "phrase": [7, 11, 54], "friendli": [7, 35, 78, 233], "mistak": [7, 12, 23, 44, 239], "goe": [8, 20, 24, 89, 207, 210, 219, 268, 271], "content": [8, 13, 35, 53, 54, 88, 188, 191, 193, 196, 199, 200, 228, 233, 236, 237, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269], "setup": [8, 35, 53, 119, 120, 121, 127, 135, 176, 193, 196, 198, 199, 210, 231, 232, 234, 244, 275], "depend": [8, 10, 11, 12, 14, 18, 20, 23, 25, 33, 35, 36, 44, 45, 52, 53, 54, 55, 58, 59, 61, 65, 70, 77, 78, 80, 81, 82, 89, 93, 94, 95, 101, 105, 108, 111, 112, 115, 116, 118, 120, 126, 128, 138, 139, 140, 155, 164, 166, 168, 171, 180, 181, 186, 188, 191, 192, 193, 195, 196, 197, 200, 201, 206, 210, 212, 213, 216, 217, 218, 219, 220, 231, 232, 233, 234, 238, 239, 251, 253, 254, 268, 270], "document": [8, 10, 11, 17, 20, 29, 30, 31, 44, 49, 53, 54, 59, 60, 61, 65, 75, 78, 79, 81, 86, 89, 94, 97, 107, 111, 126, 128, 129, 131, 133, 141, 155, 161, 175, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 193, 196, 200, 210, 214, 216, 218, 219, 229, 231, 233, 234, 236, 238, 245, 251, 252, 255, 266, 268, 269, 275, 276], "auto": [8, 12, 33, 53, 54, 81, 186, 193, 196, 200, 212, 216, 220], "rebuild": [8, 11, 20, 53, 196, 271], "live": [8, 26, 36, 133, 195, 213], "server": 8, "debug": [8, 35, 53, 80, 118, 155, 231, 232, 241], "incompat": 8, "pick": [9, 18, 54, 58, 130, 160, 162, 276], "ignor": [10, 12, 14, 20, 35, 44, 53, 54, 58, 59, 63, 68, 78, 83, 89, 93, 103, 109, 118, 163, 166, 176, 186, 196, 200, 201, 212, 218, 219, 232, 276], "regex": 10, "categori": [10, 187, 255, 262], "lead": [10, 11, 18, 19, 20, 52, 53, 59, 63, 80, 83, 89, 93, 105, 112, 150, 176, 184, 188, 191, 193, 195, 196, 197, 200, 207, 209, 212, 216, 219, 233, 236, 241, 269, 276], "against": [10, 18, 20, 54, 96, 116, 232], "unrel": [10, 53, 60, 188, 268], "capabl": [10, 11, 18, 33, 35, 53, 57, 65, 78, 93, 96, 97, 126, 133, 186, 197, 200, 219, 269, 270, 276, 277], "w": [10, 12, 35, 37, 43, 52, 53, 54, 55, 56, 59, 61, 78, 80, 83, 89, 90, 110, 113, 124, 131, 132, 135, 140, 151, 155, 164, 179, 181, 182, 185, 186, 188, 189, 193, 194, 195, 196, 197, 201, 207, 208, 210, 212, 213, 216, 217, 219, 220, 231, 239, 241, 251, 277], "pythonwarn": 10, "NOT": [10, 83, 103, 146, 150, 165, 168, 229, 232], "blog": [10, 20, 35, 58, 84, 213, 219], "post": [10, 18, 23, 35, 47, 53, 200, 201, 212, 231, 271], "ned": 10, "batcheld": 10, "pars": [10, 45, 53, 86, 116, 127, 197, 199, 255, 263], "comprehens": [10, 18, 23, 194, 208, 220, 265], "additional_transl": 10, "recogn": [10, 12, 53, 54, 58, 68, 93, 96, 104, 188, 191, 199, 208, 209, 218, 225, 268], "logic": [10, 11, 18, 20, 28, 29, 30, 31, 34, 53, 55, 78, 80, 93, 158, 160, 161, 165, 200, 202, 208, 216, 220, 238, 268, 269, 270, 272], "node": [10, 11, 33, 47, 53, 80, 95, 99, 109, 142, 167, 176, 185, 190, 200, 207, 219, 224, 235, 257, 271, 275], "suppos": [10, 19, 20, 45, 52, 53, 54, 78, 187, 189, 193, 195, 196, 200, 207, 210, 216, 218, 229, 238, 249, 254, 268, 270, 276], "maximum": [10, 12, 23, 33, 35, 36, 44, 45, 53, 59, 80, 89, 93, 96, 118, 163, 171, 186, 191, 193, 196, 200, 207, 208, 212, 213, 216, 219, 220, 235, 238], "multipli": [10, 12, 27, 31, 35, 44, 53, 64, 68, 75, 82, 84, 89, 93, 111, 120, 129, 130, 131, 143, 152, 166, 171, 172, 187, 188, 189, 191, 193, 195, 196, 200, 202, 209, 210, 213, 216, 221, 238, 248, 268, 271], "max": [10, 35, 44, 45, 53, 60, 61, 63, 80, 89, 93, 95, 96, 186, 195, 196, 200, 207, 209, 210, 239], "min": [10, 45, 49, 53, 58, 60, 89, 95, 186, 195, 200, 206, 216], "is_perfect_squar": 10, "ntheori": [10, 31, 44, 53, 54, 193, 196, 213, 238, 260], "primetest": [10, 53, 93], "is_squar": [10, 53, 84, 93], "is_prim": [10, 18, 53, 187], "isprim": [10, 31, 54, 93], "divid": [10, 11, 44, 52, 53, 54, 69, 89, 93, 170, 171, 188, 190, 191, 193, 195, 196, 200, 216, 235, 271], "bottom_up": 10, "interactive_travers": 10, "postorder_travers": [10, 271], "preorder_travers": [10, 271], "refactor": [10, 216, 224, 235], "tr": [10, 36, 44, 200, 209], "quantum": [10, 105, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 185, 261], "ever": [10, 11, 20, 59, 184, 187, 196, 210, 216, 233, 236, 271], "helper": [10, 33, 35, 44, 48, 51, 53, 78, 81, 82, 151, 153, 162, 197, 207, 210, 213, 216, 217, 219, 232, 263], "default_sort_kei": [10, 34, 42, 224], "matrixel": [10, 35], "matrixsymbol": [10, 15, 18, 31, 32, 35, 53, 84, 86, 89, 200, 220, 222], "layer": [10, 103, 193, 239], "imprecis": 10, "free_symbol": [10, 11, 35, 53, 62, 80, 84, 155, 173, 176, 196, 206, 213], "sinc": [10, 11, 12, 14, 15, 16, 18, 19, 20, 28, 33, 35, 36, 44, 45, 46, 49, 50, 51, 53, 54, 56, 58, 60, 61, 62, 63, 65, 66, 69, 71, 77, 78, 80, 82, 83, 84, 89, 93, 106, 118, 131, 133, 142, 166, 167, 171, 175, 181, 184, 187, 188, 190, 191, 193, 195, 196, 200, 203, 208, 209, 210, 212, 213, 216, 218, 219, 220, 226, 230, 234, 235, 236, 238, 239, 243, 248, 250, 251, 253, 265, 270, 272, 275, 276, 277], "atomicexpr": 10, "concept": [10, 11, 18, 44, 118, 184, 190, 192, 195, 200, 219, 224, 253, 269, 274], "misappli": 10, "noth": [10, 34, 44, 53, 66, 80, 150, 166, 187, 191, 199, 200, 212, 216, 218, 229, 231, 239, 241, 268], "introduc": [10, 19, 49, 52, 53, 61, 78, 89, 94, 97, 116, 118, 123, 124, 125, 129, 166, 171, 184, 191, 192, 197, 200, 207, 210, 213, 220, 236, 269, 272, 274, 276], "21494": 10, "size": [10, 16, 35, 36, 37, 42, 44, 45, 46, 47, 48, 49, 53, 54, 56, 58, 81, 84, 86, 89, 92, 93, 101, 118, 128, 129, 130, 139, 161, 162, 180, 186, 189, 193, 200, 212, 213, 216, 220, 238, 266], "die": [10, 195, 220], "arrai": [10, 20, 22, 35, 44, 45, 49, 50, 54, 61, 80, 84, 86, 89, 93, 94, 101, 133, 163, 186, 189, 191, 196, 200, 219, 220, 223, 225, 226, 227, 232, 233, 235, 239, 272], "histor": [10, 11, 14, 20, 54, 216, 220], "21563": 10, "revert": [10, 191, 196], "sample_it": [10, 220], "consequ": [10, 20, 31, 53, 188, 190, 268, 276], "subclass": [10, 11, 18, 20, 29, 30, 35, 53, 60, 64, 66, 80, 83, 135, 141, 150, 154, 155, 156, 161, 163, 164, 186, 187, 189, 190, 191, 195, 196, 200, 220, 231, 232, 233, 236, 239, 245, 248, 271], "kei": [10, 11, 12, 14, 28, 31, 34, 42, 44, 45, 53, 54, 55, 58, 69, 82, 84, 89, 92, 93, 96, 115, 116, 126, 158, 161, 166, 184, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 212, 216, 217, 218, 220, 224, 235, 238, 239, 241, 272, 273, 276], "domainmatrix": [10, 85, 89, 192, 195, 198], "switch": [10, 44, 51, 80, 93, 103, 193, 196], "21402": 10, "earlier": [10, 107, 197, 201, 210, 212, 239, 249, 251, 271], "could": [10, 11, 12, 16, 18, 20, 23, 30, 35, 46, 53, 65, 78, 80, 83, 113, 116, 126, 130, 166, 169, 171, 187, 190, 193, 195, 197, 200, 208, 210, 212, 216, 217, 218, 219, 220, 221, 224, 225, 232, 236, 249, 250, 268, 271, 276], "traceback": [10, 12, 15, 18, 19, 20, 23, 28, 29, 30, 35, 36, 45, 53, 54, 57, 63, 80, 83, 84, 85, 86, 87, 89, 91, 92, 95, 103, 185, 187, 190, 191, 193, 196, 199, 207, 208, 216, 218, 219, 229, 231, 232, 234, 236, 238, 239, 241, 268, 272], "typeerror": [10, 12, 19, 20, 23, 28, 29, 30, 45, 53, 63, 68, 83, 85, 87, 91, 103, 140, 207, 208, 232, 239], "unsupport": [10, 12, 15, 103, 200], "operand": [10, 12, 45, 53, 177, 195, 247], "dict": [10, 12, 14, 18, 35, 45, 54, 55, 69, 70, 83, 84, 89, 93, 95, 111, 112, 146, 158, 161, 172, 174, 176, 186, 189, 190, 191, 193, 195, 196, 197, 198, 200, 212, 213, 216, 217, 218, 219, 220, 224, 231, 232, 238, 245, 277], "solve_lin_si": [10, 192], "heurisch": [10, 80], "smith_normal_form": [10, 90, 189], "newmatrix": 10, "holonom": [10, 74, 77, 117, 118, 119, 120, 126, 128, 129, 255, 262], "polymatrix": 10, "risch": [10, 80, 266], "broken": [10, 42, 53, 183, 200, 216, 241], "20780": 10, "20759": 10, "20621": 10, "19882": 10, "18844": 10, "21441": 10, "21427": 10, "21496": 10, "potenti": [10, 18, 65, 86, 89, 93, 111, 112, 113, 115, 125, 126, 177, 182, 190, 195, 207, 210, 212, 216, 234, 235, 247, 252, 253], "impact": 10, "downstream": [10, 18], "goal": [10, 11, 34, 107, 134, 195, 197, 231, 232, 234, 269, 270], "perhap": [10, 14, 35, 53, 83, 93, 151, 190, 218, 233, 265], "tableform": [10, 218, 241], "isn": [10, 20, 80, 107, 116, 219, 270], "advis": [10, 18, 34, 116], "usecas": 10, "unclear": [10, 18, 107], "line2dbaseseri": [10, 186], "coordin": [10, 27, 35, 54, 55, 59, 61, 62, 64, 68, 70, 86, 89, 96, 99, 101, 105, 110, 111, 112, 115, 116, 117, 118, 119, 121, 123, 126, 127, 128, 129, 132, 134, 142, 144, 163, 164, 167, 175, 176, 177, 178, 179, 181, 184, 187, 195, 196, 208, 216, 245, 246, 247, 250, 252, 254, 262], "linecollect": [10, 186], "bokeh": 10, "plotli": 10, "mayavi": 10, "k3d": 10, "matplotlibbackend": [10, 186], "get_point": [10, 186], "uniformli": [10, 16, 44, 69, 70, 96, 101, 186, 234], "adapt": [10, 101, 186, 206, 218, 238, 244], "get_data": [10, 186, 242], "dft": [10, 56, 106], "fourier": [10, 53, 61, 80, 106, 159, 204], "as_explicit": [10, 86, 89, 106, 222], "exp": [10, 11, 12, 14, 18, 20, 27, 33, 35, 43, 52, 53, 55, 57, 58, 60, 61, 71, 72, 75, 78, 80, 84, 86, 89, 93, 105, 142, 145, 161, 167, 185, 190, 191, 196, 197, 200, 202, 207, 210, 212, 216, 217, 218, 219, 220, 221, 238, 254, 266, 270, 272, 277], "discret": [10, 33, 35, 36, 43, 45, 53, 54, 61, 93, 166, 171, 202, 205, 216, 218, 219, 256, 265], "transform": [10, 11, 27, 32, 35, 49, 52, 53, 54, 55, 57, 58, 61, 68, 79, 86, 89, 101, 103, 118, 138, 159, 161, 163, 168, 188, 191, 193, 195, 196, 202, 207, 208, 209, 212, 213, 216, 217, 218, 219, 220, 225, 233, 239, 245, 251, 252, 256, 263, 270], "unevalu": [10, 11, 18, 19, 20, 29, 30, 33, 45, 52, 53, 59, 61, 70, 80, 93, 103, 143, 147, 154, 155, 166, 196, 199, 207, 208, 212, 216, 218, 219, 220, 266, 270, 271, 277], "represent": [10, 11, 20, 23, 27, 34, 35, 36, 44, 47, 53, 54, 59, 61, 65, 73, 75, 77, 78, 80, 82, 83, 84, 85, 86, 92, 93, 100, 101, 106, 107, 108, 115, 126, 130, 131, 135, 155, 160, 161, 163, 164, 166, 168, 175, 180, 181, 183, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 210, 212, 213, 216, 219, 220, 225, 226, 241, 245, 247, 254, 266, 268, 271], "21626": 10, "expos": [10, 34, 220], "mutat": [10, 103, 189, 191, 220], "flat": [10, 67, 84, 232], "todok": [10, 84], "ey": [10, 84, 85, 86, 87, 88, 89, 91, 189, 195, 221, 241, 272], "converg": [10, 35, 52, 57, 61, 79, 80, 93, 135, 196, 203, 207, 210, 266], "legacy_matrix": [10, 80], "discontinu": [10, 33, 57, 59, 61, 80, 96, 203, 218], "theano_cod": 10, "aesara_cod": [10, 200], "theanoprint": 10, "aesaraprint": [10, 200], "predic": [10, 11, 28, 29, 33, 95, 196, 212, 238, 256], "experienc": [10, 36], "big": [10, 12, 16, 18, 37, 53, 55, 93, 133, 146, 185, 199, 200, 207, 241, 266, 268], "registr": 10, "add_handl": 10, "remove_handl": [10, 28], "multipledispatch": [10, 28], "regist": [10, 28, 29, 30, 54, 162], "register_mani": [10, 29, 30], "askprimehandl": 10, "staticmethod": [10, 231], "register_handl": [10, 28], "prime": [10, 18, 28, 29, 30, 44, 51, 52, 53, 54, 56, 58, 61, 93, 137, 187, 188, 190, 191, 192, 193, 196, 210, 212, 213, 220, 235], "Not": [10, 11, 19, 20, 53, 58, 83, 103, 200, 219, 220, 238, 270, 277], "primepred": [10, 31], "q": [10, 11, 12, 15, 18, 26, 27, 28, 29, 30, 31, 32, 35, 45, 49, 52, 53, 54, 61, 70, 75, 76, 78, 80, 82, 84, 89, 95, 96, 103, 104, 110, 111, 112, 115, 116, 118, 120, 125, 128, 129, 130, 133, 134, 135, 146, 160, 166, 169, 176, 177, 178, 179, 180, 181, 183, 186, 187, 188, 190, 191, 193, 195, 196, 197, 199, 200, 202, 210, 213, 216, 218, 220, 225, 226, 241, 245, 247, 248, 250, 253, 260, 272, 276], "20209": 10, "stochast": 10, "timestamp": 10, "wienerprocess": [10, 220], "normaldistribut": [10, 220], "20078": 10, "misspel": 10, "absorbing_prob": [10, 220], "absorb": [10, 11, 78, 216, 220, 266], "probabilit": [10, 220], "shutil": 10, "power": [10, 12, 27, 32, 35, 43, 44, 45, 54, 56, 57, 59, 75, 76, 78, 80, 82, 84, 86, 93, 94, 103, 116, 133, 138, 149, 152, 165, 168, 171, 172, 176, 187, 188, 190, 191, 192, 193, 195, 196, 200, 201, 204, 207, 209, 211, 213, 216, 218, 219, 220, 224, 233, 238, 256, 258, 265, 266, 267, 268, 269, 271, 272, 275], "immut": [10, 11, 53, 85, 88, 91, 184, 191, 216, 221, 259, 265, 272], "coordsystem": [10, 55], "explicit": [10, 11, 18, 20, 23, 45, 52, 53, 57, 69, 70, 80, 92, 93, 115, 116, 120, 130, 134, 184, 187, 196, 199, 200, 202, 208, 210, 216, 217, 218, 219, 223, 235], "appropi": 10, "patch": [10, 55, 200], "real": [10, 11, 12, 15, 16, 18, 19, 20, 23, 27, 29, 30, 32, 33, 35, 45, 53, 54, 55, 57, 58, 59, 60, 61, 65, 69, 70, 75, 78, 80, 83, 84, 86, 89, 93, 95, 99, 105, 116, 133, 135, 138, 139, 146, 164, 178, 185, 188, 191, 192, 195, 196, 197, 200, 201, 203, 207, 210, 212, 215, 216, 218, 219, 220, 225, 229, 233, 242, 270, 276, 277], "similarli": [10, 18, 49, 53, 54, 61, 65, 89, 96, 97, 103, 111, 131, 186, 187, 190, 195, 197, 207, 208, 210, 216, 231, 239, 249, 250, 272], "manifold": [10, 55], "track": [10, 12, 44, 53, 57, 61, 115, 127, 131, 150, 184, 207, 226, 266], "coord_system": 10, "connect_to": 10, "coord_tuple_transform_to": [10, 55], "constructor": [10, 11, 20, 29, 30, 34, 35, 40, 44, 45, 46, 53, 60, 61, 82, 87, 89, 120, 159, 160, 164, 168, 186, 187, 189, 190, 191, 192, 200, 208, 216, 225, 233, 248, 267, 271], "str": [10, 11, 20, 29, 34, 35, 36, 45, 53, 54, 55, 57, 62, 63, 66, 69, 70, 81, 83, 86, 93, 95, 101, 110, 111, 113, 133, 150, 160, 166, 176, 178, 179, 186, 191, 195, 200, 212, 216, 220, 236, 238, 239, 241, 245], "unord": [10, 12, 53, 93, 191, 219, 238, 239], "lambidfi": 10, "guess": [10, 14, 34, 54, 57, 78, 81, 180, 193, 196, 210, 213, 271], "construct": [10, 16, 29, 30, 34, 35, 40, 53, 55, 59, 61, 63, 67, 69, 81, 86, 89, 94, 97, 107, 111, 113, 116, 118, 151, 155, 164, 165, 168, 172, 187, 190, 191, 193, 195, 196, 200, 213, 218, 220, 221, 223, 225, 233, 235, 236, 248, 250, 251, 268, 271, 272, 276], "superclass": [10, 11, 18, 52, 53, 80, 86, 191], "scalar": [10, 27, 53, 55, 68, 82, 84, 86, 89, 94, 113, 116, 165, 176, 177, 178, 182, 184, 187, 189, 193, 200, 216, 221, 233, 239, 245, 246, 247, 248, 249, 250, 252, 254], "boolean": [10, 11, 20, 21, 28, 29, 30, 31, 32, 33, 35, 53, 59, 63, 67, 68, 69, 70, 81, 84, 89, 90, 93, 96, 101, 103, 151, 176, 178, 180, 186, 189, 191, 193, 195, 197, 200, 212, 216, 218, 220, 238, 247, 258, 272], "sens": [10, 11, 16, 18, 20, 27, 31, 33, 34, 53, 55, 58, 61, 78, 83, 111, 118, 171, 176, 184, 187, 193, 195, 209, 210, 212, 219, 220, 232, 233, 238, 253, 276], "exponenti": [10, 12, 18, 27, 35, 44, 49, 53, 54, 58, 60, 80, 83, 84, 89, 93, 95, 152, 168, 197, 212, 219, 220, 267, 268, 272], "trick": [10, 11, 12, 49, 210, 226], "treat": [10, 11, 18, 19, 20, 43, 44, 51, 53, 58, 61, 68, 69, 89, 95, 113, 116, 139, 176, 181, 188, 190, 191, 193, 195, 196, 197, 199, 200, 207, 208, 210, 212, 213, 216, 218, 224, 232, 235, 251, 268, 272], "cdot": [10, 18, 36, 52, 58, 61, 71, 75, 76, 78, 84, 86, 89, 93, 104, 106, 131, 171, 181, 183, 184, 185, 187, 188, 196, 203, 207, 210, 216, 218, 221, 222, 250, 251, 270, 271, 276], "attributeerror": [10, 18, 53, 89, 219, 239, 272], "as_coeff_mul": [10, 53, 78, 86], "tri": [10, 11, 12, 18, 23, 34, 53, 61, 69, 78, 80, 118, 130, 161, 187, 188, 195, 200, 202, 212, 216, 217, 219, 231, 268, 276], "benchmark": [10, 118, 132], "runtest": [10, 231], "tmpfile": 10, "random_complex_numb": 10, "verify_numer": 10, "test_derivative_numer": 10, "_randrang": [10, 54], "_randint": [10, 193], "as_poli": [10, 53, 188, 196], "as_expr": [10, 53, 89, 190, 195, 196, 197, 272], "combintor": 10, "perm_cycl": [10, 45, 200], "printer": [10, 11, 20, 45, 53, 61, 81, 89, 94, 180, 225, 232, 233, 239, 257, 263, 267, 271], "init_print": [10, 25, 35, 45, 57, 80, 81, 89, 97, 180, 187, 188, 199, 266, 270, 272, 275, 276, 277], "problemat": [10, 20, 190], "affect": [10, 18, 20, 52, 53, 89, 175, 196, 218, 219, 249], "18056": 10, "15416": 10, "100x": 10, "slowdown": [10, 57], "significantli": [10, 35, 57, 107, 128, 191, 202, 232, 235], "slower": [10, 20, 49, 89, 190, 195, 239, 265], "_sympifi": [10, 53, 86, 271], "strict": [10, 11, 44, 45, 53, 57, 58, 84, 89, 193, 196, 218, 219, 238, 241, 276], "lot": [10, 44, 53, 71, 78, 80, 89, 116, 133, 186, 199, 203, 213, 219, 231, 276], "secur": 10, "whatev": [10, 12, 20, 44, 53, 54, 212, 216, 217, 219, 239], "__repr__": [10, 200], "12524": 10, "repr": [10, 35, 80, 160, 190, 195, 200, 231, 275], "plenti": 10, "_sympy_": [10, 53], "disabl": [10, 11, 53, 54, 78, 80, 93, 193, 196, 200, 208, 216, 218, 229, 231, 234, 238], "constant": [10, 11, 33, 35, 52, 53, 57, 59, 61, 77, 78, 80, 96, 97, 103, 115, 116, 118, 133, 134, 143, 147, 153, 169, 170, 172, 173, 174, 177, 179, 181, 186, 188, 191, 193, 195, 196, 197, 200, 202, 207, 210, 212, 213, 216, 217, 218, 219, 220, 231, 233, 238, 239, 247, 251, 254, 266, 272, 277], "lh": [10, 14, 35, 43, 53, 198, 200, 216, 218, 219, 250], "tensexpr": [10, 104, 226], "substitute_indic": 10, "danger": [10, 188], "tensor_head": [10, 104, 226], "had": [10, 20, 23, 45, 53, 54, 89, 93, 116, 130, 195, 196, 197, 200, 208, 210, 216, 218, 219, 234, 239, 265, 268, 271, 272], "shorter": [10, 53, 63, 107, 128, 175, 187, 191, 200, 233, 241], "creation": [10, 12, 20, 53, 55, 89, 108, 113, 123, 126, 127, 128, 129, 130, 140, 150, 154, 155, 156, 166, 183, 184, 200, 220, 225, 233, 239], "_dummy_fmt": 10, "l_": [10, 80, 89], "obsolet": 10, "dummy_nam": [10, 226], "clearer": [10, 248], "metric_symmetri": [10, 226], "set_metr": [10, 226], "delta": [10, 12, 35, 37, 47, 58, 61, 76, 78, 82, 101, 130, 138, 166, 200, 207, 213, 216, 220, 221, 226], "epsilon": [10, 12, 52, 54, 61, 78, 80, 137, 200, 226], "latter": [10, 15, 20, 35, 44, 53, 58, 61, 78, 93, 187, 191, 195, 200, 210, 213, 226, 233, 238, 239, 268], "involv": [10, 12, 16, 18, 23, 30, 32, 44, 52, 53, 54, 58, 65, 66, 78, 80, 93, 103, 108, 111, 116, 145, 155, 161, 163, 173, 183, 184, 187, 188, 191, 193, 195, 196, 197, 201, 202, 207, 208, 209, 210, 212, 213, 216, 218, 221, 239, 276], "obscur": [10, 18], "young": [10, 96, 226], "tableau": 10, "favor": 10, "tensorindex": [10, 226], "tensor_indic": [10, 104, 226], "denot": [10, 11, 12, 16, 44, 45, 53, 55, 61, 75, 76, 78, 80, 82, 83, 84, 89, 93, 95, 103, 171, 176, 181, 186, 187, 188, 193, 195, 203, 207, 208, 210, 216, 220, 225, 226, 245, 246, 248, 249, 251, 253], "set_dimens": 10, "unit_system": [10, 173], "set_quantity_dimens": [10, 169], "set_global_dimens": 10, "set_scale_factor": 10, "set_quantity_scale_factor": [10, 169], "set_global_relative_scale_factor": [10, 173], "get_dimensional_expr": 10, "unitsystem": [10, 174], "dimension": [10, 33, 35, 37, 55, 65, 66, 67, 68, 69, 86, 89, 97, 104, 133, 140, 142, 152, 168, 170, 181, 182, 186, 187, 193, 195, 196, 199, 200, 218, 219, 221, 222, 226, 232, 253, 277], "_collect_factor_and_dimens": 10, "motiv": [10, 13, 20, 24], "emptyset": [10, 18, 23, 33, 34, 83, 200, 219, 245, 277], "is_empti": [10, 18, 45], "unknown": [10, 11, 15, 18, 19, 20, 27, 53, 54, 97, 151, 198, 215, 216, 217, 218, 219, 238, 277], "empti": [10, 11, 18, 23, 29, 33, 34, 35, 36, 44, 48, 52, 53, 65, 68, 69, 70, 83, 84, 89, 93, 111, 130, 161, 174, 191, 195, 196, 200, 206, 207, 208, 210, 216, 218, 219, 231, 233, 238, 241, 271], "individu": [10, 18, 20, 53, 59, 64, 69, 70, 82, 84, 86, 89, 103, 131, 138, 156, 160, 185, 208, 216, 231, 272], "denest": [10, 53, 196, 211, 218, 238], "particl": [10, 108, 110, 111, 116, 120, 121, 126, 128, 130, 133, 134, 142, 145, 152, 153, 164, 166, 169, 171, 183, 226], "rigidbodi": [10, 108, 111, 115, 118, 123, 124, 125, 126, 131, 133], "potential_energi": [10, 110, 111, 125, 126, 131], "energi": [10, 105, 108, 111, 113, 116, 125, 126, 142, 167, 171, 181, 226, 251, 261], "setter": [10, 116, 133], "getter": [10, 53, 116, 133], "set_": 10, "set_condit": 10, "17749": 10, "side": [10, 12, 16, 18, 35, 44, 45, 53, 65, 69, 80, 89, 93, 96, 103, 111, 115, 130, 131, 134, 154, 155, 171, 176, 185, 187, 193, 195, 198, 200, 217, 219, 220, 224, 231, 233, 254, 266], "unpack": [10, 53, 84, 89, 238, 239], "intermedi": [10, 11, 35, 36, 76, 84, 116, 118, 123, 150, 160, 168, 169, 176, 179, 183, 219, 233, 273], "emul": [10, 212, 219, 221, 239], "is_deriv": [10, 53], "as_finite_differ": [10, 33, 53, 266], "17881": 10, "get_matrix": [10, 226], "__getitem__": [10, 53, 84, 225], "__iter__": [10, 45, 53, 212], "_components_data_full_destroi": 10, "__pow__": [10, 84, 191, 197], "flaw": 10, "replace_with_arrai": [10, 226, 227], "cach": [10, 18, 58, 78, 187, 196, 200, 229, 234, 235, 256], "safe": [10, 93, 190, 196, 218, 224, 266], "squar": [10, 12, 18, 23, 27, 30, 35, 44, 53, 54, 59, 69, 70, 78, 80, 84, 85, 89, 92, 93, 96, 103, 105, 128, 129, 152, 168, 176, 185, 189, 191, 192, 193, 195, 196, 197, 200, 208, 211, 213, 216, 219, 220, 270], "jordan": [10, 78, 84, 89, 198, 218, 219], "band": [10, 84, 92], "eigenvalu": [10, 84, 89, 116, 118, 160, 163, 270], "elif": [10, 18, 19, 20, 59], "inspect": [10, 18, 89, 195, 206, 237, 239, 263], "getsourc": [10, 239, 243], "sum": [10, 16, 18, 35, 42, 45, 52, 53, 56, 58, 61, 66, 68, 76, 78, 80, 82, 83, 84, 86, 89, 93, 99, 113, 128, 145, 149, 152, 160, 163, 165, 166, 185, 187, 188, 190, 191, 195, 196, 197, 200, 202, 203, 205, 207, 209, 210, 212, 213, 216, 218, 219, 220, 221, 222, 224, 226, 235, 238, 256, 276], "meter": [10, 96, 97, 137, 140, 169, 171, 172, 173], "si": [10, 20, 61, 77, 78, 139, 168, 169, 171, 172, 173, 200], "cg": [10, 145, 163], "aris": [10, 18, 19, 53, 58, 78, 80, 163, 184, 190, 195], "scale": [10, 62, 63, 64, 68, 69, 70, 81, 96, 146, 167, 169, 171, 173, 174, 180, 184, 186, 203, 220, 251, 253], "kilomet": [10, 172, 173], "1000": [10, 12, 35, 37, 53, 54, 57, 86, 93, 133, 171, 172, 173, 185, 199, 200, 209], "dimensionsystem": [10, 168], "14318": 10, "duplic": [10, 12, 44, 47, 54, 59, 61, 89, 93, 208, 216, 238, 269], "flatten": [10, 34, 53, 190, 222, 227, 238, 239], "neither": [10, 18, 19, 31, 53, 140, 161, 186, 196, 207, 208, 209, 216, 226, 239, 245, 253, 276], "polymorph": 10, "anymor": [10, 186], "temporarili": [10, 53], "point3d": [10, 66, 67, 68, 139], "p1": [10, 36, 44, 45, 49, 52, 63, 65, 66, 67, 68, 69, 103, 108, 110, 120, 133, 135, 179, 186, 190, 191, 193, 197, 209, 220, 221], "p2": [10, 19, 44, 45, 52, 63, 65, 66, 67, 68, 69, 103, 108, 110, 133, 179, 186, 190, 191, 193, 197, 209, 220], "throughout": [11, 78, 83, 193, 203, 219, 268], "elsewher": [11, 18, 58, 82, 118, 189, 231], "termnam": 11, "antideriv": [11, 59, 61, 80, 216, 266], "frac": [11, 16, 18, 20, 33, 52, 53, 54, 55, 58, 60, 61, 78, 80, 89, 93, 95, 103, 120, 131, 169, 180, 181, 183, 184, 185, 189, 193, 196, 200, 202, 203, 207, 210, 213, 216, 217, 219, 220, 221, 238, 251, 253, 266, 270, 271, 275, 276], "indefinit": [11, 27, 59, 77, 78, 80, 89, 191, 193, 194, 196, 205, 266], "integr": [11, 12, 15, 22, 25, 27, 33, 45, 52, 53, 55, 58, 59, 60, 71, 72, 73, 76, 82, 84, 89, 92, 93, 103, 105, 111, 116, 126, 133, 152, 161, 164, 167, 170, 175, 177, 181, 185, 187, 190, 191, 192, 193, 196, 197, 200, 202, 203, 210, 216, 217, 220, 233, 241, 245, 247, 248, 251, 252, 256, 267, 270, 275], "primit": [11, 44, 53, 54, 61, 93, 160, 164, 187, 188, 190, 191, 193, 195, 196, 199, 200, 213, 266], "terminologi": [11, 22, 226], "tupl": [11, 20, 27, 29, 30, 33, 34, 35, 36, 44, 45, 52, 54, 55, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 75, 78, 80, 84, 89, 92, 93, 95, 96, 97, 101, 108, 110, 111, 113, 115, 128, 129, 131, 133, 135, 150, 151, 152, 155, 160, 163, 164, 165, 166, 176, 179, 184, 186, 187, 189, 190, 191, 192, 193, 197, 198, 200, 201, 202, 206, 208, 212, 213, 216, 217, 218, 219, 220, 221, 225, 226, 231, 232, 233, 234, 238, 239, 241, 245, 248, 266, 271, 272, 275], "subexpress": [11, 20, 35, 53, 59, 84, 107, 109, 195, 196, 200, 207, 211, 219, 233, 239, 256, 265], "togeth": [11, 12, 16, 35, 44, 53, 57, 82, 89, 93, 126, 152, 163, 171, 184, 187, 191, 193, 195, 196, 199, 200, 212, 216, 218, 220, 231, 232, 238, 270, 276], "walk": [11, 35, 37, 158, 161, 210], "extract": [11, 23, 33, 53, 80, 84, 86, 89, 93, 104, 118, 126, 175, 184, 193, 195, 196, 218, 219, 220, 231, 233, 238], "rebuilt": [11, 271], "atom": [11, 35, 45, 80, 83, 84, 105, 167, 190, 197, 200, 218, 219, 225], "queri": [11, 18, 19, 20, 28, 31, 32, 33, 35, 53, 65, 196, 212, 220, 256], "is_real": [11, 18, 20, 23, 53, 55, 59, 60, 89, 178, 200, 225], "restrict": [11, 18, 20, 35, 42, 53, 54, 61, 89, 96, 97, 166, 187, 190, 195, 197, 215], "never": [11, 18, 20, 53, 59, 80, 168, 196, 197, 200, 208, 218, 220, 229, 248, 268, 269], "is_": [11, 20, 53], "leav": [11, 18, 20, 35, 53, 80, 89, 93, 112, 126, 150, 166, 207, 235, 265, 271, 276], "recurs": [11, 12, 15, 18, 20, 33, 53, 58, 78, 80, 83, 84, 93, 118, 186, 193, 196, 197, 200, 201, 204, 205, 207, 212, 218, 219, 224, 229, 231, 235, 236, 238, 267, 276], "canonic": [11, 40, 53, 209, 226], "excess": 11, "discourag": [11, 18, 53, 212], "expens": [11, 20, 53, 130, 209, 216, 217, 218, 234, 272], "matrix": [11, 15, 16, 18, 22, 27, 30, 35, 42, 45, 53, 54, 55, 61, 68, 78, 80, 82, 84, 87, 88, 91, 92, 94, 95, 103, 104, 106, 108, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 133, 134, 135, 138, 139, 141, 149, 150, 155, 160, 161, 163, 165, 166, 168, 171, 175, 176, 184, 185, 187, 189, 193, 195, 198, 200, 201, 208, 210, 212, 213, 218, 219, 221, 222, 224, 225, 226, 227, 232, 233, 238, 239, 241, 245, 246, 247, 249, 253, 259, 267, 270, 271, 276, 277], "sympifi": [11, 12, 18, 19, 35, 57, 63, 83, 131, 139, 164, 166, 176, 177, 190, 191, 256, 265, 271], "bound": [11, 31, 35, 36, 52, 53, 62, 63, 64, 66, 68, 69, 80, 93, 164, 191, 193, 195, 196, 200, 206, 216, 218, 219, 220, 225, 235, 241, 245], "dummi": [11, 35, 49, 52, 59, 78, 80, 89, 116, 133, 161, 166, 190, 191, 195, 196, 197, 206, 207, 208, 210, 212, 216, 219, 224, 226, 229, 233, 238, 239], "ration": [11, 18, 20, 28, 30, 33, 35, 52, 57, 58, 59, 61, 63, 66, 68, 70, 74, 78, 80, 81, 86, 89, 93, 95, 103, 135, 168, 185, 188, 192, 193, 194, 195, 197, 200, 204, 205, 209, 210, 212, 213, 214, 215, 218, 219, 220, 238, 245, 267, 268, 271, 275], "unequ": [11, 12, 14, 96, 200], "accident": 11, "clash": [11, 26, 53, 89], "contrast": [11, 20, 52, 53, 120, 190, 210, 216, 270], "_eval_": 11, "_eval_deriv": [11, 20, 53, 61], "overrid": [11, 12, 35, 53, 62, 63, 69, 95, 164, 200, 225, 232, 233, 238, 239], "pre": [11, 34, 35, 53, 185, 186, 201, 209, 212, 218, 219, 231, 249, 253, 271], "dispatch": [11, 29, 30, 31, 53, 54, 161, 200, 219, 235], "shorthand": [11, 12, 18, 20, 53, 83, 160, 195, 208, 229], "stand": [11, 52, 53, 133, 188, 190, 191, 197], "reserv": [11, 18, 116, 226, 233, 272], "smaller": [11, 35, 44, 45, 53, 54, 61, 69, 80, 86, 93, 128, 188, 190, 193, 196, 203, 209, 210, 218, 238, 265, 276], "children": [11, 53, 54, 190, 235], "leaf": [11, 190, 200, 209, 271], "strictli": [11, 12, 15, 17, 18, 31, 33, 53, 61, 89, 93, 103, 193, 212, 218], "dag": 11, "map": [11, 18, 20, 33, 34, 35, 43, 44, 45, 53, 54, 65, 69, 76, 78, 80, 83, 84, 93, 101, 111, 120, 144, 155, 156, 161, 176, 184, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 207, 212, 216, 217, 218, 219, 220, 224, 225, 232, 235, 238, 239, 241, 245], "colloqui": [11, 22], "lambda": [11, 12, 20, 29, 30, 33, 35, 44, 45, 54, 55, 59, 80, 84, 85, 86, 89, 92, 93, 95, 116, 129, 130, 133, 134, 151, 186, 193, 195, 196, 200, 201, 208, 209, 212, 216, 218, 219, 220, 221, 229, 238, 239, 245, 246, 249, 265, 272], "zeta": [11, 12, 52, 53, 57, 58, 60, 191, 195, 200, 207, 220], "hyper": [11, 53, 58, 61, 72, 75, 200, 202, 210, 212, 218, 220, 276], "primepi": [11, 20, 93], "divisor_sigma": [11, 93], "undefin": [11, 20, 23, 29, 30, 33, 53, 59, 60, 61, 80, 86, 95, 108, 184, 195, 206, 207, 210, 239, 266, 277], "interchang": [11, 49, 52, 78, 216], "memori": [11, 35, 53, 93, 196, 221, 232, 235], "maintain": [11, 12, 53, 54, 93, 97, 200, 208, 209, 216, 219, 235], "mental": 11, "hidden": [11, 175], "state": [11, 16, 18, 44, 51, 53, 61, 93, 96, 103, 105, 110, 111, 112, 115, 118, 120, 134, 138, 142, 143, 145, 146, 147, 149, 150, 151, 155, 158, 160, 161, 162, 163, 165, 166, 196, 200, 209, 210, 212, 220, 235, 261, 272], "hashabl": [11, 50, 78, 238], "repl": [11, 226], "execut": [11, 18, 25, 35, 81, 84, 133, 186, 200, 216, 219, 229, 231, 233, 234, 239, 241, 244, 255, 270, 275], "idiom": [11, 242, 268, 269], "anti": [11, 27, 31, 49, 59, 80, 84, 138, 143, 226], "frown": 11, "upon": [11, 18, 35, 53, 93, 115, 118, 128, 129, 130, 133, 160, 166, 181, 183, 184, 208, 216, 225, 232, 251, 276], "lowercas": [11, 12, 216, 231, 266], "is_integ": [11, 18, 20, 53, 178, 200, 225], "capit": [11, 52, 54, 103, 216], "wherea": [11, 16, 18, 31, 35, 54, 63, 69, 78, 83, 103, 171, 187, 190, 196, 200, 218, 219, 238, 276], "is_capit": 11, "unneed": 11, "achiev": [11, 12, 20, 53, 57, 61, 86, 93, 116, 133, 199, 207, 210, 212, 219, 234, 249], "isinst": [11, 15, 18, 20, 35, 53, 84, 86, 103, 190, 191, 200, 201, 212, 221, 224, 233, 271], "ship": [11, 94], "session": [11, 26, 35, 53, 65, 80, 180, 184, 190, 236, 263, 268, 275], "sort": [11, 29, 30, 34, 35, 42, 45, 49, 78, 80, 83, 89, 92, 93, 104, 107, 111, 150, 166, 171, 175, 186, 193, 196, 197, 207, 212, 213, 216, 217, 218, 224, 226, 231, 233, 238, 248, 256, 268, 270, 271], "numberkind": [11, 15, 84, 208], "matrixkind": [11, 15, 53, 88, 208], "booleankind": 11, "ring": [11, 56, 76, 89, 90, 183, 188, 189, 192, 193, 195, 196, 197, 198, 199, 200, 238], "classif": [11, 17, 53, 216, 217], "lamda": [11, 86, 200, 208, 220, 272], "\u03bb": [11, 272], "lambdifi": [11, 20, 35, 61, 118, 200, 218, 232, 237, 256, 263, 267], "matrixexpr": [11, 20, 84, 86, 87], "mutabl": [11, 12, 36, 53, 85, 86, 87, 96, 191, 200, 201, 212, 221, 272], "dens": [11, 84, 86, 88, 89, 189, 192, 195, 196, 221, 259, 271], "underli": [11, 35, 45, 51, 53, 82, 89, 101, 116, 161, 174, 218, 219, 220], "quit": [11, 16, 20, 61, 89, 93, 118, 183, 186, 197, 199, 210, 218, 238, 253, 268, 271], "rung": [11, 33, 75], "kutta": [11, 75], "condit": [11, 18, 19, 35, 44, 53, 55, 59, 61, 71, 72, 75, 76, 77, 79, 80, 83, 89, 93, 95, 96, 97, 99, 103, 109, 112, 118, 126, 130, 133, 135, 179, 185, 197, 200, 203, 210, 213, 215, 216, 218, 219, 220, 225, 258, 276], "loss": [11, 35, 78, 166, 232, 250], "stabil": [11, 44, 49, 51, 57, 103, 130, 224], "focus": [11, 193], "is_numb": [11, 18, 53, 61, 80], "infin": [11, 18, 31, 52, 58, 59, 61, 66, 78, 80, 89, 139, 191, 193, 196, 200, 205, 206, 207, 208, 212, 215, 216, 220], "resembl": [11, 55, 61, 80, 225], "zoo": [11, 14, 18, 31, 53, 58, 59, 61, 80, 207, 209, 212], "data": [11, 16, 35, 44, 53, 54, 61, 80, 89, 94, 101, 111, 145, 186, 187, 190, 191, 193, 196, 197, 200, 212, 225, 226, 231, 233, 235, 238, 242], "effici": [11, 16, 18, 33, 35, 37, 44, 49, 53, 56, 57, 58, 69, 70, 86, 89, 93, 94, 103, 111, 133, 185, 188, 189, 190, 191, 193, 196, 197, 198, 199, 212, 213, 218, 232, 239, 265, 271, 272, 276], "act": [11, 34, 43, 44, 45, 49, 53, 61, 69, 82, 83, 89, 96, 99, 108, 110, 115, 116, 121, 129, 138, 150, 155, 158, 159, 208, 219, 221, 249, 253, 265], "pprint": [11, 12, 20, 23, 33, 34, 55, 61, 80, 89, 93, 103, 138, 185, 200, 201, 208, 212, 216, 217, 219, 220, 238, 275], "inequ": [11, 18, 19, 20, 22, 53, 186, 193, 208, 210, 214], "neq": [11, 20, 53, 59, 61, 78, 80, 84, 171, 184, 185, 193, 196, 213, 216, 218, 276], "ne": [11, 14, 18, 54, 59, 66, 78, 93, 188, 190, 193, 210, 216, 220], "hold": [11, 12, 20, 30, 34, 44, 49, 53, 54, 55, 59, 61, 75, 78, 89, 92, 95, 103, 105, 110, 112, 113, 131, 162, 196, 210, 212, 216, 220, 233, 276], "singleton": [11, 45, 83, 204, 219, 256, 258, 271], "gotcha": [11, 13, 53, 126, 184, 239, 269, 277], "somehow": [11, 20], "simpler": [11, 19, 20, 53, 57, 61, 77, 78, 123, 184, 193, 209, 210, 212, 216, 218, 219, 276], "adject": [11, 220], "heurist": [11, 18, 45, 78, 80, 84, 193, 194, 207, 209, 212, 214, 218, 219, 231, 266, 276], "appar": [11, 12, 53, 241, 276], "commut": [11, 18, 27, 30, 34, 44, 45, 49, 53, 55, 76, 80, 89, 143, 150, 153, 154, 155, 165, 166, 171, 178, 184, 188, 191, 192, 193, 194, 196, 200, 207, 208, 210, 216, 226, 271], "law": [11, 34, 126, 169, 184, 188], "child": [11, 110, 127, 190, 235], "xreplac": [11, 53, 84, 89, 176], "knowledg": [11, 52, 53, 54, 195, 216, 271, 274], "round": [11, 20, 33, 35, 53, 57, 58, 59, 89, 139, 195, 196, 207, 209, 220], "analyt": [11, 25, 58, 61, 78, 89, 126, 216, 261, 266], "implicitli": [11, 18, 19, 20, 45, 53, 80, 187, 190, 218], "independ": [11, 12, 20, 31, 33, 35, 44, 52, 53, 55, 61, 70, 78, 80, 82, 89, 103, 111, 112, 116, 118, 120, 128, 130, 164, 171, 181, 186, 188, 190, 195, 196, 202, 203, 210, 212, 213, 216, 217, 218, 219, 220, 226, 231, 232, 251, 270, 271], "nativ": [11, 53, 103, 191, 196, 231], "parsabl": 11, "iter": [11, 23, 33, 35, 42, 44, 45, 48, 49, 53, 54, 55, 56, 58, 61, 69, 83, 93, 108, 109, 110, 111, 112, 115, 130, 134, 151, 166, 179, 186, 187, 188, 189, 191, 193, 196, 200, 201, 202, 203, 206, 212, 213, 216, 218, 219, 220, 221, 224, 232, 233, 234, 235, 237, 239, 245, 249, 263], "fuzzi": [11, 18, 20, 21], "noncomput": 11, "philosoph": 11, "OR": [11, 33, 56, 83, 193], "One": [11, 12, 15, 18, 20, 33, 34, 35, 43, 45, 52, 58, 59, 61, 72, 75, 77, 78, 80, 83, 89, 93, 96, 97, 116, 131, 133, 142, 171, 191, 193, 194, 196, 199, 202, 208, 212, 218, 219, 220, 221, 226, 239, 251, 265, 266, 268, 271, 272, 276], "care": [11, 12, 19, 20, 44, 53, 61, 80, 89, 96, 107, 116, 130, 176, 184, 190, 195, 212, 213, 216, 218, 219, 224, 227, 232, 265, 268, 270], "falsi": 11, "is_posit": [11, 18, 19, 20, 53, 178, 191], "unevaluatedexpr": [11, 200, 271], "surpris": [11, 18, 219], "north": 11, "riemann": [11, 55, 58, 59, 60, 78, 187, 212, 226], "sphere": [11, 138, 245, 254], "behav": [12, 31, 33, 53, 54, 59, 61, 93, 196, 208, 212, 218, 221, 227, 272], "mapl": [12, 80, 216, 263, 270], "mathematica": [12, 35, 45, 95, 263, 270, 272], "faq": 12, "introductori": [12, 16, 24, 25, 133, 190, 191, 196], "remaind": [12, 52, 53, 54, 93, 188, 190, 191, 194, 196, 216], "familiar": [12, 20, 80, 116, 131, 150, 197, 266, 268, 274], "java": 12, "minut": [12, 107, 118, 175], "subtract": [12, 35, 45, 53, 57, 68, 93, 103, 110, 168, 188, 189, 190, 191, 193, 195, 196, 271, 276], "proper": [12, 44, 53, 80, 93, 107, 116, 175, 190, 191, 195, 200, 208, 216, 221, 232, 233, 251, 272], "trigsimp": [12, 27, 53, 89, 110, 116, 124, 176, 209, 248], "fill": [12, 17, 44, 54, 84, 86, 89, 92, 166, 186, 231, 234, 238, 241, 272], "alter": [12, 36, 44, 53, 176, 190, 200, 202, 219], "afterward": [12, 35, 53, 113, 120], "quantiti": [12, 45, 53, 58, 61, 65, 70, 97, 107, 111, 124, 131, 145, 168, 170, 174, 181, 183, 184, 195, 212, 220, 248, 252, 253, 261], "simultan": [12, 53, 59, 66, 84, 93, 186, 209], "var": [12, 33, 35, 52, 57, 58, 76, 80, 83, 89, 103, 176, 186, 195, 199, 200, 212, 213, 239, 277], "rate": [12, 118, 183, 220, 251, 266], "short_lif": 12, "haven": 12, "160": [12, 96, 194], "bodi": [12, 35, 78, 95, 106, 107, 110, 111, 113, 115, 116, 118, 119, 120, 121, 123, 126, 127, 128, 133, 134, 169, 175, 176, 179, 183, 184, 245, 246, 252], "ctimesd": 12, "circular": [12, 18, 101, 138, 193], "relationship": [12, 14, 18, 35, 53, 58, 60, 80, 93, 127, 150, 176, 181, 184, 190, 218], "runtimeerror": [12, 33, 208, 219, 238], "compileflag": [12, 231], "glob": [12, 231], "exceed": [12, 118], "stdin": [12, 234, 236], "nameerror": [12, 81, 234, 268], "__future__": [12, 16, 268, 275], "divis": [12, 20, 53, 89, 93, 168, 187, 190, 191, 192, 193, 196, 198, 200, 216, 218, 231, 239, 268, 271, 275], "cl": [12, 18, 20, 35, 44, 53, 80, 84, 166, 179, 191, 195, 216, 225, 234, 238, 250, 266, 275, 277], "dir": [12, 53, 96, 202, 207, 238], "__builtins__": 12, "__file__": [12, 242], "__name__": [12, 200, 242], "__package__": 12, "_greek": 12, "_latin": 12, "chi": [12, 61, 78, 138, 200, 210, 220, 226], "eta": [12, 61, 78, 195, 200, 216, 217, 220], "iota": [12, 200], "kappa": [12, 200, 220], "mu": [12, 61, 78, 93, 104, 106, 137, 200, 220, 226], "omega": [12, 35, 36, 44, 78, 93, 108, 113, 115, 131, 134, 140, 142, 167, 176, 179, 180, 183, 185, 200, 207, 220], "omicron": [12, 200], "phi": [12, 44, 53, 54, 58, 61, 78, 82, 89, 93, 105, 133, 140, 149, 151, 185, 187, 195, 200, 216, 245, 254], "psi": [12, 61, 78, 138, 149, 150, 156, 164, 195, 200, 226], "rho": [12, 55, 78, 89, 93, 119, 160, 200, 220, 226, 254], "sigma": [12, 45, 76, 78, 84, 89, 200, 203, 220], "tau": [12, 35, 78, 80, 89, 195, 200, 216], "theta": [12, 53, 55, 59, 61, 78, 81, 89, 95, 105, 115, 134, 138, 176, 184, 185, 191, 195, 200, 203, 208, 219, 220, 245, 246, 249, 251, 254], "upsilon": [12, 200], "xi": [12, 20, 55, 78, 200, 216, 217, 218], "lastli": [12, 80, 97, 134, 216], "unit": [12, 20, 27, 30, 34, 53, 54, 58, 66, 67, 68, 80, 89, 93, 96, 101, 103, 105, 106, 116, 131, 133, 142, 167, 168, 169, 173, 175, 176, 181, 184, 186, 188, 191, 193, 195, 196, 198, 200, 208, 210, 213, 219, 221, 245, 246, 248, 253, 254, 261], "mnemon": [12, 209, 238], "osineq": 12, "notic": [12, 20, 44, 45, 51, 53, 89, 154, 175, 190, 210, 226, 227, 238, 239, 268, 270, 271, 276], "reimport": 12, "restor": [12, 190, 212], "__": [12, 61, 80, 200, 220, 225], "press": [12, 34, 36, 37, 45, 54, 80, 84, 185, 194, 213, 218], "autocomplet": 12, "lose": [12, 187], "abil": [12, 18, 33, 89, 126, 195, 199, 216, 219, 270, 276], "past": [12, 59, 93, 199, 200, 275], "f1": [12, 44, 78, 80, 89, 103, 108, 116, 124, 133, 186, 191, 193, 196, 200, 202, 218], "f2": [12, 53, 78, 89, 103, 108, 116, 124, 133, 169, 186, 193, 196, 200, 202, 218], "6": [12, 14, 16, 27, 29, 30, 33, 35, 36, 37, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 68, 69, 75, 76, 78, 80, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 101, 103, 104, 105, 118, 119, 123, 124, 125, 135, 139, 145, 163, 175, 176, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 202, 205, 206, 207, 208, 209, 212, 213, 217, 218, 219, 220, 221, 231, 232, 235, 238, 239, 245, 247, 249, 254, 266, 272, 276, 277], "accuraci": [12, 16, 33, 53, 196, 256, 272], "2000000000000002": 12, "py3k": 12, "20000000000000": 12, "sympyifi": 12, "worri": [12, 53, 271], "reus": [12, 20, 35, 166, 270], "142857142857143": 12, "receiv": [12, 53, 54, 93, 108, 161, 195, 225], "fraction": [12, 53, 54, 57, 59, 69, 80, 89, 93, 109, 172, 190, 191, 192, 193, 194, 197, 200, 202, 213, 216, 218, 267], "interpret": [12, 19, 35, 44, 52, 53, 58, 59, 61, 66, 69, 80, 84, 86, 89, 93, 95, 107, 171, 186, 188, 195, 196, 200, 207, 213, 218, 219, 220, 225, 231, 232, 235, 241, 272], "100": [12, 20, 35, 37, 42, 52, 53, 54, 57, 61, 69, 76, 83, 84, 89, 93, 96, 186, 190, 195, 197, 199, 200, 207, 218, 219, 238, 265], "000000000000": 12, "00": [12, 53, 93, 150, 160, 213, 238], "null": [12, 53, 89], "34": [12, 35, 45, 58, 66, 89, 93, 148, 194, 199, 206, 212, 213], "3400000000000": 12, "250": [12, 93, 213], "143": [12, 145, 185], "next": [12, 16, 18, 20, 26, 35, 36, 37, 42, 44, 45, 47, 48, 53, 54, 59, 78, 80, 83, 89, 93, 107, 108, 111, 119, 120, 121, 123, 125, 126, 127, 134, 183, 184, 187, 191, 195, 196, 200, 208, 210, 213, 216, 235, 236, 238, 269, 270, 271], "binari": [12, 19, 20, 31, 35, 37, 48, 53, 54, 80, 83, 93, 94, 160, 172, 187, 190, 196, 213, 232, 235, 238], "decim": [12, 20, 35, 53, 56, 57, 93, 95, 101, 190, 196, 270], "far": [12, 34, 53, 67, 80, 187, 190, 200, 210, 239, 265, 266, 268], "142857": 12, "25000000000000000000": 12, "14285278320312500000": 12, "realiz": [12, 38, 44, 55, 83, 93, 120, 187, 188, 193, 220], "pad": [12, 35, 54, 55, 56, 68, 93], "inexact": [12, 53, 191], "low": [12, 18, 19, 35, 53, 54, 61, 93, 190, 193, 198, 200, 212, 232, 233, 238], "higher": [12, 16, 33, 35, 53, 55, 57, 61, 64, 89, 179, 185, 187, 190, 193, 196, 202, 203, 207, 209, 212, 216, 218, 221, 239, 266], "engin": [12, 99, 132, 133, 182, 216, 275], "increas": [12, 33, 34, 45, 51, 52, 53, 56, 57, 61, 84, 93, 94, 107, 117, 150, 175, 176, 178, 183, 184, 190, 193, 195, 196, 202, 205, 209, 216, 220, 236, 238], "2000061035": 12, "highest": [12, 35, 47, 82, 107, 187, 196, 203, 213, 216], "hopefulli": [12, 17, 78], "unsimplifi": [12, 209], "12345678901234567890": 12, "big_trig_ident": 12, "ab": [12, 32, 35, 36, 52, 53, 54, 57, 58, 60, 61, 65, 76, 78, 83, 84, 89, 99, 105, 133, 166, 188, 191, 195, 196, 200, 213, 215, 218, 219, 220, 226, 235, 238, 241, 250, 276], "gave": [12, 53, 238], "gain": [12, 54, 103, 128, 129, 133], "impress": 12, "91": [12, 36, 194, 199, 206, 220], "compar": [12, 18, 33, 35, 45, 50, 53, 59, 70, 83, 89, 93, 94, 118, 145, 169, 173, 190, 193, 196, 197, 200, 205, 207, 212, 216, 219, 221, 225, 231, 238, 268, 271, 276], "4e": [12, 218], "nearli": [12, 93, 209], "snippet": [12, 35], "expr_modifi": 12, "__main__": [12, 35, 272], "declar": [12, 18, 23, 35, 66, 78, 89, 95, 104, 116, 118, 133, 145, 189, 200, 207, 210, 215, 216, 217, 220, 233], "asid": [12, 83, 216, 217, 270], "2x": [12, 53, 61, 78, 95, 212, 213, 219, 220, 265, 268, 276], "syntaxerror": [12, 95], "asin": [12, 60, 61, 67, 197, 200, 210, 212, 216, 220, 276], "arcsin": [12, 59, 197, 200, 220], "arcco": [12, 59, 200], "root": [12, 18, 20, 22, 23, 33, 35, 52, 53, 54, 60, 61, 75, 76, 77, 78, 80, 82, 85, 89, 93, 133, 171, 185, 187, 188, 191, 192, 195, 197, 199, 200, 210, 211, 216, 218, 219, 220, 231, 235, 238, 270, 272, 275, 277], "expon": [12, 32, 35, 40, 53, 54, 59, 60, 61, 78, 80, 86, 93, 101, 103, 172, 188, 189, 190, 192, 196, 197, 200, 209, 212, 216, 219, 224, 235, 276], "half": [12, 20, 35, 54, 58, 59, 61, 63, 69, 80, 82, 89, 93, 95, 96, 135, 138, 163, 185, 191, 193, 195, 196, 208, 209, 210, 212, 220, 231, 238], "denomin": [12, 53, 57, 61, 80, 93, 103, 109, 188, 190, 191, 193, 195, 196, 199, 200, 209, 210, 212, 213, 216, 218, 276], "wild": [12, 212, 238], "interest": [12, 14, 20, 49, 53, 55, 58, 59, 69, 78, 80, 89, 93, 117, 118, 166, 171, 184, 187, 191, 195, 196, 197, 199, 207, 210, 212, 213, 218, 219, 232, 233, 249, 266, 269, 271, 272, 273, 276], "sq": [12, 213], "is_pow": [12, 35, 53, 59], "is_rat": [12, 18, 195, 238], "bracket": [12, 20, 45, 53, 61, 164, 166, 176, 200], "notat": [12, 16, 23, 41, 45, 46, 52, 53, 54, 58, 61, 78, 86, 89, 95, 103, 164, 175, 176, 180, 184, 187, 200, 207, 211, 212, 219, 225, 226, 238, 251, 266], "curli": [12, 116, 200], "suppli": [12, 33, 34, 35, 44, 45, 53, 55, 63, 67, 89, 93, 108, 111, 113, 118, 120, 123, 128, 129, 139, 166, 175, 179, 184, 186, 195, 197, 202, 209, 216, 232, 238, 239, 245, 246, 249], "powsimp": [12, 53, 59, 209], "deep": [12, 20, 53, 59, 83, 84, 196, 207, 212, 220, 271], "measur": [12, 27, 59, 61, 69, 85, 107, 146, 155, 160, 168, 171, 173, 175, 176, 179, 181, 184, 196, 208, 209, 212, 220, 244, 245, 247, 248, 250, 251, 253], "count_op": [12, 209, 212], "radic": [12, 53, 54, 89, 187, 195, 196, 212, 218, 219], "join": [12, 45, 53, 54, 66, 84, 96, 97, 200, 212, 216, 218, 221, 238, 242], "autoexpand": [12, 212], "violat": [12, 116, 185, 197, 212], "naiv": [12, 15, 44, 50, 53, 78, 84, 89, 171, 210, 218, 219, 226], "strategi": [12, 36, 53, 80, 193, 194, 207, 210, 212, 217], "radsimp": [12, 53, 211], "logcombin": [12, 211, 216, 219], "robust": [12, 50, 53, 57, 192, 212, 216], "cancel": [12, 16, 20, 35, 53, 57, 61, 69, 78, 80, 89, 93, 103, 104, 190, 191, 193, 196, 199, 212, 218, 270], "topic": [13, 21, 24, 35, 126, 131, 182, 183, 184, 185, 187, 189, 190, 195, 219, 268, 273], "behind": [13, 24, 104, 116, 130, 170, 189, 209, 212, 216, 219, 261, 268], "decis": [13, 24, 53, 59, 80, 209, 218, 233], "opinion": [13, 24], "pitfal": [13, 20, 184, 190, 268, 273, 276], "glossari": 13, "seem": [14, 18, 20, 77, 78, 116, 171, 187, 212, 216, 276], "unwieldi": 14, "arbitrarili": [14, 33, 53, 66, 93, 193, 195, 207, 210, 216, 217, 220], "six": [14, 97, 200, 213, 219, 220], "bias": 14, "toward": [14, 35, 53, 61, 187, 207, 219], "enter": [14, 45, 53, 54, 58, 66, 93, 95, 96, 111, 115, 118, 128, 200, 210, 218, 231, 271, 275], "attempt": [14, 16, 19, 20, 35, 44, 49, 51, 53, 57, 58, 65, 78, 80, 89, 93, 107, 109, 161, 190, 195, 202, 207, 209, 212, 213, 216, 218, 219, 220, 231, 268, 276], "unambigu": [14, 200, 216, 241], "univari": [14, 33, 52, 53, 59, 76, 80, 187, 188, 190, 191, 192, 194, 195, 196, 197, 202, 215, 218, 220], "linear": [14, 20, 22, 34, 35, 45, 52, 53, 54, 56, 57, 61, 66, 73, 76, 78, 80, 82, 84, 86, 88, 96, 100, 103, 110, 111, 113, 118, 120, 121, 126, 128, 132, 133, 138, 160, 163, 164, 179, 186, 187, 191, 192, 193, 195, 196, 198, 206, 208, 210, 217, 218, 219, 238, 259, 277], "undetermin": [14, 53, 89, 196, 202, 216, 218], "nonlinear": [14, 22, 52, 133, 196, 218, 219], "sol": [14, 89, 213, 216, 217, 218], "insuffici": [14, 84], "elimin": [14, 16, 35, 49, 53, 83, 85, 89, 107, 191, 198, 199, 201, 203, 211, 216, 218, 219, 226, 233, 272], "nsolv": [14, 133, 218], "z_eq": 14, "zsol": 14, "906425478894557": 14, "sol0": 14, "90642547889456": 14, "reduce_inequ": [14, 215, 218], "rh": [14, 35, 43, 45, 53, 84, 85, 89, 110, 111, 116, 123, 124, 125, 189, 198, 200, 202, 216, 218, 219, 250], "classifi": [15, 89, 190, 216, 217, 219, 220], "distinguish": [15, 18, 19, 34, 44, 57, 82, 116, 165, 171, 187], "former": [15, 35, 53, 58, 116, 193, 195, 196, 213, 238], "retriev": [15, 51, 84, 196, 212, 226], "guarante": [15, 18, 35, 44, 45, 53, 65, 78, 80, 89, 190, 193, 195, 196, 216, 218, 219, 236, 241, 272, 276], "catch": [15, 53, 216, 231, 272], "theori": [15, 20, 30, 36, 42, 43, 44, 45, 51, 53, 54, 58, 61, 82, 90, 93, 111, 116, 130, 132, 145, 163, 166, 176, 179, 189, 193, 194, 195, 199, 213, 235, 245, 262, 270], "is_subset": [15, 208], "valueerror": [15, 18, 28, 30, 33, 35, 36, 45, 53, 54, 62, 63, 66, 68, 69, 80, 84, 86, 89, 92, 93, 96, 101, 103, 140, 179, 181, 185, 187, 189, 193, 195, 208, 216, 218, 219, 238, 241, 251], "odd": [15, 18, 28, 30, 32, 41, 45, 53, 54, 58, 59, 61, 83, 92, 93, 104, 195, 200, 218], "appliedpred": [15, 28, 29, 30], "analysi": [16, 35, 36, 44, 53, 54, 59, 100, 118, 130, 131, 134, 170, 187, 196, 210, 213, 220], "vari": [16, 33, 35, 53, 67, 69, 101, 107, 111, 131, 164, 184, 207, 218, 238, 251], "hope": [16, 44, 107, 187], "research": [16, 45, 197, 212], "establish": [16, 49, 78, 110, 121, 210], "envis": 16, "along": [16, 20, 35, 44, 53, 54, 55, 59, 61, 62, 63, 67, 68, 71, 73, 76, 78, 84, 86, 89, 96, 97, 99, 106, 107, 110, 111, 118, 120, 123, 124, 125, 127, 128, 129, 130, 133, 135, 163, 175, 176, 181, 184, 186, 189, 190, 195, 196, 216, 219, 247, 251, 253], "small": [16, 35, 36, 44, 45, 53, 57, 58, 80, 83, 89, 93, 103, 120, 124, 133, 163, 185, 186, 193, 194, 195, 212, 213, 218, 238, 265, 268, 270], "x_": [16, 35, 43, 53, 54, 58, 95, 191, 193, 196, 202, 213, 216, 221], "taylor": [16, 53, 59, 116, 130, 133, 191, 193, 196, 197, 207, 216], "let": [16, 18, 19, 20, 33, 35, 44, 49, 53, 54, 63, 71, 76, 78, 82, 86, 89, 90, 93, 95, 108, 116, 133, 171, 176, 183, 187, 188, 189, 193, 195, 196, 197, 200, 207, 210, 212, 213, 216, 218, 219, 226, 229, 232, 236, 239, 249, 250, 254, 265, 268, 270, 271, 276], "df": [16, 55, 216], "c_": [16, 22, 54, 76, 78, 184, 188, 216], "grid": [16, 33, 34, 101, 186], "f_": [16, 53, 58, 61, 80, 128, 129, 130, 193, 199, 200, 210, 216], "constraint": [16, 89, 97, 103, 110, 111, 112, 115, 116, 118, 119, 120, 122, 126, 128, 129, 130, 133, 197], "formul": [16, 110, 119, 120, 126, 128, 129, 166, 184], "assess": 16, "brute": [16, 209, 213], "frequent": [16, 44, 195, 207, 219], "cover": [16, 59, 93, 95, 107, 116, 175, 183, 226, 233, 266, 268], "treatment": [16, 78, 196], "shall": [16, 44, 78, 116, 133, 207, 210, 271], "job": [16, 20, 45, 146, 197, 200], "truncat": [16, 45, 53, 89, 93, 97, 171, 186, 197, 199, 202, 203], "approx": [16, 22, 53, 80], "lowest": [16, 35, 44, 49, 93, 187, 202, 219], "2h": 16, "print_funct": 16, "x0": [16, 33, 35, 43, 53, 61, 72, 74, 76, 77, 93, 138, 190, 201, 202, 207, 212, 216, 218, 220, 238, 266], "x_0": [16, 43, 44, 54, 75, 76, 77, 193, 202, 213, 216, 220, 266], "fi": 16, "fip1": 16, "fip2": 16, "c_0": [16, 54, 76], "c_1": [16, 54, 76, 78, 207, 210, 216], "c_2": [16, 78, 207, 216], "2f": [16, 277], "c_i": [16, 78, 207, 210, 216], "nth": [16, 53, 58, 61, 82, 93, 191, 196, 197, 206, 212, 216, 220], "degre": [16, 36, 44, 51, 52, 58, 61, 69, 80, 84, 89, 96, 99, 101, 103, 110, 111, 116, 117, 120, 126, 134, 138, 184, 187, 188, 191, 193, 195, 196, 199, 203, 206, 209, 210, 212, 213, 216, 218, 220, 245], "x_i": [16, 20, 43, 61, 80, 89, 188, 191, 193, 196, 197, 200, 219], "m11": [16, 220], "m12": [16, 220], "m13": 16, "m21": [16, 220], "m22": [16, 220], "m23": 16, "m31": 16, "m32": 16, "m33": [16, 93], "3x3": [16, 68, 89, 249], "invert": [16, 30, 53, 54, 84, 86, 89, 103, 120, 168, 188, 190, 191, 195, 196, 216, 218, 219, 226, 272], "inv": [16, 45, 85, 89, 110, 111, 118, 123, 124, 133, 155, 189, 216], "fim1": 16, "eight": [16, 200], "dfdxcheck": 16, "c3": [16, 56, 82, 84, 86, 93, 216, 220, 250, 277], "c5": [16, 216], "120": [16, 52, 53, 58, 59, 75, 93, 96, 97, 197, 199, 200, 202, 216, 266], "c7": [16, 44], "5040": [16, 58, 75, 196, 197], "quickli": [16, 20, 44, 45, 53, 54, 57, 93, 193, 196, 209, 219, 235], "tediou": [16, 80], "certainli": [16, 65, 95, 235], "fine": [16, 20, 53, 57, 81, 180, 190, 200, 212], "devis": 16, "xn": [16, 20, 191], "x_n": [16, 20, 36, 43, 54, 75, 89, 188, 191, 193, 196, 213, 219], "fn": [16, 80, 89, 187, 196], "fnm1": 16, "fnm2": 16, "dth": 16, "Of": [16, 18, 52, 78, 89, 216, 219, 238, 276], "cours": [16, 18, 37, 44, 52, 61, 78, 80, 89, 90, 93, 181, 189, 190, 194, 195, 207, 209, 210, 251, 276], "etc": [16, 18, 19, 30, 33, 35, 49, 53, 54, 58, 59, 71, 82, 83, 88, 93, 116, 137, 146, 150, 163, 166, 170, 178, 181, 183, 184, 186, 187, 188, 190, 193, 195, 200, 201, 208, 209, 210, 212, 216, 219, 220, 224, 232, 233, 238, 249, 253], "discrit": 16, "bengt": [16, 33], "fornberg": [16, 33], "weight": [16, 53, 61, 68, 70, 80, 82, 89, 150, 212, 256, 266], "gap": [17, 44, 93, 116, 197], "matur": [17, 18, 218, 219], "finit": [17, 18, 23, 30, 35, 39, 40, 41, 44, 52, 53, 54, 56, 57, 80, 82, 83, 152, 176, 185, 188, 191, 192, 194, 196, 197, 200, 202, 203, 206, 208, 213, 215, 216, 219, 238, 245, 246, 256, 267, 270, 276], "concret": [18, 34, 45, 53, 58, 59, 80, 82, 89, 93, 116, 171, 191, 195, 200, 256], "obviou": [18, 19, 20, 44, 52, 187, 190, 199, 213, 270], "situat": [18, 57, 78, 184, 216, 218, 220, 236, 268], "refus": [18, 276], "roughli": [18, 53, 54, 94, 117, 216, 239], "possibli": [18, 35, 45, 51, 53, 78, 80, 93, 169, 170, 193, 207, 208, 218, 233, 266, 272], "infinit": [18, 20, 30, 52, 53, 54, 57, 58, 59, 66, 67, 80, 89, 93, 103, 122, 152, 171, 187, 195, 200, 201, 202, 205, 206, 207, 208, 212, 213, 214, 215, 218, 225, 238, 276, 277], "is_neg": [18, 20, 191], "interprett": 18, "unknow": 18, "resolv": [18, 19, 23, 53, 209, 212, 218], "undecid": [18, 20, 23, 89, 190, 219, 272], "conclud": [18, 61, 76, 118, 181, 207, 218, 253], "particularli": [18, 57, 80, 190, 191, 210, 276, 277], "mix": [18, 26, 52, 59, 84, 89, 95, 175, 190, 191, 196, 200, 219, 222, 224, 226, 239], "ideal": [18, 35, 90, 113, 116, 126, 176, 183, 189, 191, 192, 193, 194, 195, 196, 197, 212, 219, 245], "slow": [18, 20, 49, 53, 57, 80, 94, 107, 118, 138, 175, 184, 190, 191, 200, 201, 202, 203, 212, 216, 218, 219, 231, 232, 276], "indetermin": [18, 19, 53, 89, 193, 205, 218], "contradict": 18, "infer": [18, 29, 30, 45, 53, 80, 190, 199, 205, 210, 216, 232, 258], "prepar": [18, 111, 198], "presum": [18, 78, 190, 210, 233], "singletonregistri": [18, 53], "x1": [18, 20, 43, 53, 58, 133, 138, 190, 191, 201, 202, 212, 216, 218, 220, 238], "x2": [18, 43, 53, 58, 133, 138, 190, 202, 216, 218, 220], "posifi": [18, 211], "_x": [18, 20, 89, 131, 180, 183, 184, 191, 197, 212, 216, 232], "rep": [18, 44, 49, 53, 150, 187, 189, 190, 191, 194, 195, 196, 209, 212, 241], "feel": [18, 25, 133, 134, 212, 216, 218], "among": [18, 34, 35, 36, 37, 44, 45, 54, 81, 94, 196, 216, 221, 224, 226, 248], "behaviour": [18, 78, 83, 108, 193, 197, 203, 206], "symbolc": 18, "implicit": [18, 35, 51, 53, 95, 115, 134, 186, 216, 218, 222, 225, 232, 233, 245, 247, 254, 268], "tailor": 18, "assumptions0": [18, 53], "extended_neg": [18, 53], "extended_nonneg": [18, 53], "extended_nonposit": [18, 53], "extended_nonzero": [18, 53, 200], "extended_posit": [18, 53], "extended_r": [18, 31, 53, 200, 215, 219], "hermitian": [18, 30, 53, 84, 85, 89, 149, 155, 166, 200], "irrat": [18, 30, 33, 53, 93, 190, 196, 200, 208, 270], "noninteg": [18, 31, 53, 190, 200], "nonneg": [18, 20, 30, 53, 54, 55, 58, 61, 86, 133, 188, 190, 213, 220, 276], "nonposit": [18, 30, 53, 133], "nonzero": [18, 20, 30, 32, 52, 53, 68, 89, 105, 188, 189, 190, 191, 200, 203, 219], "transcendent": [18, 30, 53, 61, 80, 190, 195, 200, 218, 219, 272, 277], "field": [18, 27, 31, 35, 53, 54, 55, 61, 71, 80, 138, 139, 178, 182, 187, 188, 189, 191, 192, 194, 196, 197, 198, 213, 218, 231, 245, 247, 249, 250, 252, 254], "antihermitian": [18, 30, 53], "mathbb": [18, 20, 31, 36, 44, 52, 53, 54, 59, 61, 78, 84, 89, 130, 185, 187, 188, 190, 191, 193, 195, 196, 199, 207, 208, 210, 213, 219, 220, 276], "ii": [18, 58, 59, 78, 80, 93, 196, 200, 208, 216, 219], "cup": [18, 196, 208, 219], "pm": [18, 52, 78, 80, 188, 199, 207, 213, 216], "yi": 18, "composit": [18, 30, 34, 42, 44, 45, 53, 54, 71, 73, 80, 93, 96, 191, 193, 196, 199, 212, 219, 234], "2k": [18, 53, 78, 93, 213], "pariti": [18, 45], "product": [18, 27, 38, 41, 44, 45, 49, 51, 52, 53, 54, 55, 57, 58, 61, 63, 66, 68, 69, 76, 78, 80, 82, 83, 84, 86, 89, 93, 94, 103, 104, 105, 107, 118, 131, 133, 141, 145, 146, 149, 151, 152, 153, 155, 158, 160, 161, 163, 164, 166, 171, 172, 175, 176, 178, 182, 183, 184, 185, 187, 188, 189, 191, 193, 195, 196, 197, 200, 201, 202, 205, 208, 209, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 232, 235, 238, 245, 248, 252], "le": [18, 36, 49, 61, 78, 84, 93, 125, 193, 210, 220], "commutative_properti": [18, 53], "skew": [18, 76, 93, 220], "hermitian_matrix": 18, "complex_numb": [18, 31, 53], "algebraic_numb": [18, 31, 53], "transcendental_numb": [18, 53], "extended_real_number_lin": 18, "real_numb": [18, 31], "imaginary_numb": [18, 31, 53], "rational_numb": [18, 31], "irrational_numb": [18, 31, 53], "parity_": [18, 53], "prime_numb": [18, 53, 93], "composite_numb": [18, 53], "positive_real_numb": 18, "negative_numb": [18, 53], "inconsist": [18, 20, 28, 30, 52, 171, 176, 179, 183, 212, 216, 219], "inconsistentassumpt": 18, "deal": [18, 35, 52, 53, 57, 65, 73, 78, 80, 100, 107, 111, 112, 116, 181, 183, 184, 188, 193, 196, 213, 214, 218, 229, 239, 241, 248, 253, 268, 270, 276], "is_zero_matrix": [18, 84, 189], "generalis": [18, 61, 78, 187], "gaussian": [18, 61, 80, 89, 93, 136, 192, 193, 196, 213, 218, 220, 261, 272], "notion": [18, 34, 171, 174, 187, 219, 248, 253], "chain": [18, 20, 35, 44, 49, 53, 61, 70, 94, 183, 195, 220], "superset": [18, 33, 42, 48, 56, 133, 190, 208, 218], "vanilla": 18, "attach": [18, 47, 78, 94, 96, 111, 184, 232, 234, 239], "is_commut": [18, 80, 155, 164, 238], "is_complex": [18, 53], "is_finit": [18, 53], "permit": [18, 45, 55, 59, 83, 93, 186], "formal": [18, 34, 52, 53, 61, 78, 83, 135, 171, 190, 192, 193, 204, 207], "littl": [18, 20, 34, 45, 63, 89, 93, 94, 118, 171, 194, 196, 200, 210, 212, 220, 235, 248], "n1": [18, 35, 44, 53, 54, 116, 133, 135, 139, 175, 213, 220, 245], "n2": [18, 35, 44, 53, 54, 133, 135, 139, 213, 220], "misunderstand": 18, "is_nonneg": [18, 20, 191], "intent": [18, 35, 52, 53, 95, 233], "meaning": [18, 28, 30, 34, 54], "alon": [18, 54, 81, 193, 216, 218, 225, 238, 270, 271], "tempt": [18, 20, 53, 93], "meet": [18, 54, 207], "criteria": [18, 53, 271], "noncommut": [18, 53, 76, 271], "finiteset": [18, 23, 33, 34, 219, 220, 277], "s1": [18, 44, 52, 66, 69, 76, 103, 177, 187, 196, 203, 213, 238, 247], "s2": [18, 44, 45, 52, 66, 69, 103, 177, 187, 196, 203, 207, 213, 238, 247], "bool": [18, 33, 35, 49, 51, 53, 54, 56, 59, 80, 81, 83, 84, 86, 89, 93, 95, 112, 150, 178, 180, 186, 195, 196, 198, 200, 201, 202, 207, 208, 212, 215, 220, 232, 233, 238, 239, 245, 247, 268], "plai": [18, 52, 118, 128, 213, 268, 270, 271], "role": [18, 59, 198], "connect": [18, 47, 54, 55, 68, 69, 89, 94, 96, 99, 108, 110, 118, 121, 127, 187, 188, 189, 198, 216, 220, 238, 245], "is_finite_set": 18, "zero_matrix": 18, "setsymbol": 18, "is_compar": [18, 53], "capitalis": 18, "4142135623731": [18, 200, 218], "predict": [18, 166, 212, 238], "expreal": 18, "fuzzy_and": [18, 19, 20], "fuzzy_or": [18, 19], "is_extended_nonneg": 18, "classmethod": [18, 20, 27, 29, 30, 35, 37, 42, 44, 45, 47, 48, 53, 59, 60, 61, 68, 84, 89, 103, 152, 163, 164, 166, 189, 191, 195, 196, 200, 208, 226, 231], "is_extended_r": 18, "is_infinit": 18, "is_extended_neg": 18, "is_extended_posit": [18, 19], "_eval_is_finit": 18, "is_extended_nonposit": 18, "_eval_is_algebra": 18, "is_nonzero": [18, 68], "_eval_is_integ": 18, "_eval_is_zero": [18, 20], "__new__": [18, 20, 35, 44, 53, 271], "verifi": [18, 25, 33, 44, 50, 54, 55, 116, 187, 193, 199, 216, 218, 219, 221, 222, 252, 276], "importantli": [18, 20, 197, 235], "reject": [18, 19, 93, 213, 241], "_eval_is_": 18, "is_algebra": [18, 53, 191], "interfer": [18, 200], "determinist": [18, 44, 80, 93, 193, 194], "reach": [18, 93, 103, 195, 196, 216], "claus": [18, 83], "flow": [18, 195], "inner": [18, 52, 78, 89, 149, 152, 153, 158, 160, 161, 164, 166, 176, 179, 189, 195, 202, 245], "optimis": [18, 216], "stage": [18, 34, 52, 93, 207, 276], "briefli": [18, 188, 193], "managedproperti": [18, 53], "metaclass": [18, 53], "default_assumpt": 18, "_ask": 18, "_eval_i": 18, "enumer": [18, 24, 37, 40, 42, 45, 48, 56, 60, 78, 83, 93, 195, 196, 210, 235, 238], "randomis": [18, 228, 263], "unresolv": 18, "factrul": 18, "_assume_rul": 18, "preprocess": [18, 80, 198], "defined_fact": 18, "full_impl": 18, "defaultdict": [18, 53, 238], "precomput": [18, 58, 93, 239], "static": [18, 27, 35, 44, 45, 47, 53, 59, 66, 67, 68, 69, 86, 97, 118, 126, 186, 200, 206, 208, 220, 232], "knowabl": 18, "stdfactkb": 18, "_eval_is_r": [18, 20, 196], "_assumpt": [18, 53], "amongst": [18, 218], "indirectli": 18, "manifest": [18, 188], "jointli": 18, "fundament": [18, 20, 33, 36, 43, 71, 78, 80, 89, 171, 190, 195, 213, 216, 220, 272], "theoret": [18, 34, 36, 44, 54, 194, 195, 210, 268], "isposit": 19, "xpo": 19, "xneg": 19, "strictgreaterthan": 19, "analogu": [19, 31, 52, 67, 190, 191], "piecewis": [19, 20, 35, 52, 60, 61, 80, 96, 164, 200, 202, 203, 218, 219, 220, 239, 266], "nonetyp": [19, 35], "quirk": 19, "both_posit": 19, "falsei": 19, "both_positive_bett": 19, "negat": [19, 20, 31, 53, 59, 83, 103, 176, 189, 191, 193, 196], "fuzzy_not": [19, 20], "both_positive_best": 19, "silent": [19, 57, 93, 232], "carefulli": [19, 53, 176, 193, 202], "truth": [19, 28, 29, 30, 31, 32, 53, 84, 212, 258], "bitwis": [19, 56, 83], "footnot": [19, 171, 271, 272, 275], "combinatori": [20, 37, 45, 52, 53, 60, 61, 202, 211, 238, 240, 276], "dig": [20, 35, 271], "th": [20, 27, 36, 44, 45, 51, 54, 55, 57, 58, 59, 61, 82, 83, 89, 93, 111, 191, 193, 195, 196, 202, 205, 210, 213, 216, 218, 220, 221, 226], "handler": [20, 28, 29, 30, 31, 32, 53, 60, 89], "spectrum": 20, "matter": [20, 33, 42, 45, 52, 53, 58, 78, 80, 131, 207, 238, 270, 271], "use_unicod": [20, 33, 34, 35, 57, 61, 80, 81, 89, 97, 103, 138, 180, 185, 187, 188, 199, 200, 201, 219, 220, 266, 270, 272, 275, 276, 277], "np": [20, 60, 76, 93, 116, 232, 239], "arang": [20, 232, 265], "ultim": [20, 59, 171], "cosin": [20, 53, 59, 61, 68, 80, 108, 110, 176, 184, 196, 197, 203, 209, 220, 245, 276], "todai": [20, 187], "operatornam": [20, 58, 59, 61, 78, 80, 185, 188, 196, 200, 203, 208, 210, 218], "modern": [20, 35, 187, 194, 200], "recal": [20, 53, 89, 193, 195, 210, 268, 270, 271, 277], "redefin": [20, 45, 53, 128, 130, 188, 239], "antipattern": [20, 269], "stai": [20, 195], "trig": [20, 53, 80, 196, 200, 209, 212, 276], "wouldn": 20, "cheap": [20, 53, 93], "as_two_term": [20, 53], "split": [20, 35, 53, 54, 57, 78, 80, 95, 193, 195, 198, 199, 200, 218, 220, 226, 231, 238, 243, 271, 276], "hadn": 20, "wors": [20, 83, 212], "expand_trig": [20, 265], "mid": [20, 36, 54, 57, 97, 208, 213], "troubl": [20, 61], "bigger": [20, 35, 53, 58, 210, 216, 276], "deduc": [20, 35, 78, 83, 210, 270], "disallow": [20, 53, 196, 201, 212, 234], "great": [20, 135, 197, 200, 213, 239], "simplest": [20, 34, 83, 89, 93, 94, 185, 186, 197, 201, 209, 212, 216, 266, 276], "\u03c0": [20, 57, 138, 200, 219, 266, 270, 276, 277], "as_independ": [20, 53, 219], "coeff": [20, 53, 55, 83, 133, 191, 195, 196, 206, 212, 216, 218, 226, 276], "apart": [20, 27, 44, 49, 53, 57, 59, 80, 181, 188, 191, 193, 196, 199, 202, 213, 219, 226, 249, 251, 271], "is_even": [20, 41, 44, 45], "nonreal": [20, 218], "cosh": [20, 53, 60, 61, 72, 78, 197, 200, 201, 210, 212, 218, 272, 276], "5919532755215": 20, "_eval_is_nonneg": 20, "exercis": [20, 44, 235, 269, 276], "_eval_is_posit": 20, "as_add": [20, 53], "pi_": 20, "fuzzy_": 20, "deduct": [20, 35], "subtl": [20, 209], "nontrivi": [20, 44, 53, 93], "_eval_evalf": [20, 196], "prec": [20, 53, 63, 69, 93, 101, 185, 191, 196, 197, 212, 218], "dp": [20, 35, 53, 56, 61, 93, 190, 191, 218, 234], "53": [20, 54, 56, 89, 135, 188, 190, 191], "459697694131860": 20, "hook": [20, 94, 200], "_eval_rewrit": [20, 53], "rewritten": [20, 53, 58, 59, 61, 80, 116, 163, 207, 212, 216, 218, 276], "caller": 20, "ve": [20, 118], "nonintegr": 20, "iff": [20, 31, 45, 54, 83, 89, 184, 187, 195, 210, 213, 231], "isint": 20, "xy": [20, 33, 34, 67, 89, 113, 184, 186, 187, 193, 200, 212, 219, 254, 271, 276], "happi": 20, "demand": [20, 26], "_eval_expand_": 20, "expand_": 20, "predefin": [20, 55, 133, 190, 200, 201, 212, 219, 226, 245, 249, 257], "expand_log": [20, 35, 212], "_eval_expand_trig": 20, "sophist": [20, 94, 218], "x_1": [20, 36, 43, 44, 54, 58, 75, 89, 161, 188, 191, 193, 196, 202, 213, 219], "ldot": [20, 36, 43, 44, 52, 53, 54, 58, 61, 78, 93, 97, 171, 187, 188, 191, 193, 195, 200, 203, 207, 210, 213, 218, 221, 276], "x_k": [20, 54, 193], "dy": [20, 35, 55, 70, 89, 96, 106, 133, 196, 200, 213, 216, 217, 266], "dz": [20, 96, 106, 210], "argumentindexerror": 20, "varion": 20, "middl": [20, 61, 69, 78, 89, 97, 146, 186, 210, 276], "iverson": 20, "printmethod": [20, 200], "latexprint": [20, 263], "_latex": [20, 200], "_print": [20, 200], "_m": [20, 61], "_n": [20, 54, 58, 61, 80, 210, 219], "arcversin": 20, "aversin": 20, "im": [20, 32, 53, 60, 78, 87, 187, 200, 201, 208, 216, 272], "sinh": [20, 33, 53, 57, 60, 61, 72, 78, 197, 200, 201, 210, 276], "expand_complex": 20, "analog": [20, 46, 52, 54, 58, 131, 183, 184, 187, 188, 189, 193, 205, 221, 238], "vers": 20, "geometr": [20, 55, 62, 63, 64, 65, 66, 67, 68, 69, 70, 89, 135, 184, 187, 194, 220, 262, 272], "angl": [20, 27, 59, 61, 62, 63, 64, 66, 67, 68, 69, 99, 105, 110, 115, 116, 118, 119, 120, 121, 130, 135, 138, 139, 140, 163, 171, 176, 183, 184, 185, 200, 209, 219, 245, 246, 249, 276], "horizont": [20, 34, 63, 66, 68, 84, 99, 138, 186, 189, 200], "distanc": [20, 34, 37, 45, 63, 66, 67, 68, 69, 96, 97, 106, 107, 110, 120, 121, 127, 135, 139, 169, 179, 181, 253], "rightmost": [20, 166], "scientificamerican": 20, "uniti": [20, 59, 61, 78, 161, 195], "secret": [20, 54], "teacher": 20, "taught": [20, 80], "nr": 20, "sake": [20, 58, 213], "simplic": [20, 210, 212, 216, 218], "divisor": [20, 31, 44, 53, 54, 89, 93, 187, 188, 190, 191, 193, 194, 195, 196, 199], "hardwar": [20, 35], "regard": [20, 36, 54, 61, 81, 134, 166, 187, 188, 202, 218, 219], "c99codeprint": [20, 35, 200], "cxx11codeprint": [20, 200], "cfunction": [20, 257], "e2": [20, 33, 53, 56, 63, 70, 80, 89, 93, 101, 116, 190, 195, 207, 216, 219, 220, 238], "93accumulate_oper": 20, "fused_multipli": 20, "93add": 20, "ccode": [20, 35, 200, 225, 233], "cxxcode": [20, 35, 200], "_ccode": [20, 200], "_y": [20, 131, 180, 183, 184], "_z": [20, 80, 131, 183, 184, 220], "_cxxcode": [20, 200], "std": [20, 200, 220], "28318530717959": 20, "trigonometricfunct": 20, "inversetrigonometricfunct": 20, "reciprocaltrigonometricfunct": 20, "bypass": [20, 216], "fragil": 20, "tend": [20, 26, 35, 53, 193, 195, 205, 207, 210, 269, 276], "prone": [20, 35, 53], "move": [20, 44, 45, 53, 54, 67, 69, 96, 110, 118, 120, 126, 154, 179, 183, 184, 211, 212, 221, 230, 251], "task": [21, 24, 59, 126, 127, 133, 190, 195, 266, 273], "deeper": [21, 224, 271], "explor": [21, 128, 129, 186, 195, 235, 276], "diophantin": [22, 93, 193, 214], "739085133215161": [22, 218], "9y": 22, "3x": [22, 53, 95, 193, 219, 268], "cc": [22, 54, 69, 185, 188, 190, 192, 196, 272], "4xy": [22, 181, 253], "8y": 22, "7y": [22, 213], "yield": [23, 33, 35, 44, 53, 54, 61, 77, 78, 93, 96, 103, 109, 160, 188, 193, 195, 196, 201, 202, 207, 208, 209, 212, 213, 218, 235, 238, 272], "rearrang": [23, 104, 111, 128, 129, 150, 216], "eqn": [23, 33, 219], "solutions_set": 23, "solution_set": 23, "256": [23, 35, 44, 93, 196, 200], "techniqu": [23, 36, 48, 78, 80, 200, 202, 212, 216, 219, 272], "solution_outside_2_3": 23, "interv": [23, 31, 33, 44, 53, 57, 59, 61, 62, 63, 66, 69, 78, 80, 83, 93, 152, 161, 191, 193, 195, 196, 203, 206, 215, 219, 220, 262, 277], "calculu": [23, 30, 53, 58, 80, 89, 133, 181, 182, 209, 220, 250, 251, 252, 255, 256, 267, 269, 274], "critic": [23, 33, 139, 183, 195, 219], "minima": [23, 219], "critical_point": 23, "point1": [23, 177, 247], "point2": [23, 177, 247], "curvatur": [23, 135, 139], "solution_list": 23, "membership": [23, 51, 195, 208], "candid": [23, 53, 89, 93, 193, 212], "solution_set_arg": 23, "exclud": [23, 35, 52, 53, 80, 89, 109, 133, 188, 191, 193, 196, 206, 216, 218, 231, 234, 238], "risk": 23, "central": [24, 44, 50, 61, 63, 69, 108, 113, 131, 186, 195, 213, 220], "pypi": 25, "continuum": [25, 261], "qtconsol": [25, 275], "nicer": [25, 53, 124], "setupegg": 25, "enthought": 25, "canopi": 25, "activepython": 25, "spack": 25, "freshli": 25, "starter": 25, "sy": [25, 35, 55, 116, 133, 200, 231, 242, 250, 268], "wherev": [25, 116, 212, 219, 248], "visit": [25, 37, 44, 53, 58, 273], "chat": 25, "gitter": [25, 272], "excel": [25, 57, 195, 274], "ticket": 25, "export": [26, 200], "latin": 26, "slightli": [26, 35, 49, 93, 95, 118, 186, 187, 191, 193, 196, 200, 210, 212], "clunki": 26, "collid": [26, 226], "win": 26, "throwawai": 26, "surviv": 26, "foo": [26, 33, 35, 53, 161, 180, 238, 241], "report": [26, 33, 44, 53, 66, 84, 93, 197, 208, 219, 231, 272, 277], "stick": 26, "_clash1": [26, 53], "_clash2": [26, 53], "multi": [26, 53, 54, 117, 126, 133, 146, 150, 160, 186, 200, 219], "_clash": [26, 53], "union": [26, 31, 33, 35, 42, 44, 51, 83, 95, 187, 195, 200, 206, 207, 215, 219, 220, 238], "sympif": [26, 53], "real_field": 27, "instanti": [27, 34, 35, 45, 53, 61, 66, 68, 69, 86, 89, 156, 164, 176, 186, 187, 191, 195, 220, 245, 248], "q1": [27, 89, 107, 116, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 134, 175, 176, 178, 179, 180, 183, 184, 190, 245, 246], "q2": [27, 107, 116, 118, 119, 120, 121, 123, 124, 125, 128, 129, 134, 175, 176, 178, 179, 180, 183, 184, 190, 245, 246], "r1": [27, 63, 66, 82, 96, 97, 139, 176, 181, 196, 245], "euclideanspac": 27, "realnormedalgebra": 27, "r2": [27, 55, 66, 82, 84, 96, 97, 139, 176, 196, 200, 212, 245], "q3": [27, 107, 118, 119, 121, 123, 124, 125, 128, 176, 178, 179, 184, 245, 246], "axi": [27, 46, 58, 59, 63, 64, 66, 67, 69, 75, 78, 80, 86, 89, 96, 101, 106, 110, 116, 118, 120, 123, 124, 125, 127, 130, 133, 134, 135, 138, 139, 163, 176, 178, 179, 181, 183, 184, 186, 191, 219, 245, 246, 249, 251, 254], "bi": [27, 53, 59, 61, 80, 184, 207, 216], "cj": 27, "dk": [27, 96, 195], "atan2": [27, 32, 55, 60, 140, 200, 245], "atan": [27, 32, 55, 57, 60, 64, 69, 77, 80, 120, 134, 135, 197, 200, 202], "arc_coplanar": 27, "arc": [27, 59, 276], "orient": [27, 65, 69, 84, 116, 118, 120, 123, 127, 131, 133, 176, 179, 181, 183, 184, 193, 238, 245, 252, 253], "coplanar": [27, 67, 184], "ax": [27, 54, 57, 63, 66, 78, 85, 89, 96, 101, 110, 138, 163, 176, 184, 185, 186, 189, 197, 213, 216, 219, 221, 222, 225, 245, 246, 248, 251, 253, 276], "parallel": [27, 63, 66, 67, 69, 80, 100, 103, 106, 127, 183, 184, 193, 250, 254], "vector_coplanar": 27, "is_pur": 27, "mathbf": [27, 86, 126, 128, 129, 131, 171, 175, 176, 180, 181, 183, 184, 200, 210, 221, 248, 249, 251, 253, 254], "versor": 27, "0i": 27, "0j": [27, 190], "0k": 27, "vector_part": 27, "from_axis_angl": 27, "rotat": [27, 41, 44, 46, 53, 62, 63, 64, 66, 68, 69, 84, 89, 96, 97, 110, 118, 121, 123, 125, 131, 134, 150, 163, 176, 179, 181, 183, 184, 185, 186, 238, 245, 246, 249, 251, 253], "radian": [27, 59, 62, 63, 64, 66, 67, 68, 89, 101, 116, 139, 140, 176], "from_rotation_matrix": 27, "orthogon": [27, 30, 60, 68, 82, 89, 164, 176, 184, 192, 245, 246, 252], "det": [27, 89, 90, 133, 184, 189, 272], "index_vector": 27, "mod": [27, 54, 59, 83, 89, 90, 93, 162, 187, 189, 190, 191, 193, 195, 196, 200, 202, 210, 213, 256], "magnitud": [27, 35, 52, 53, 57, 61, 94, 96, 97, 99, 101, 120, 133, 164, 173, 176, 181, 184, 186, 245, 251, 253], "norm": [27, 89, 164, 176, 191, 193, 195, 196], "scalar_part": 27, "is_zero_quaternion": 27, "mensor": 27, "60": [27, 39, 44, 46, 52, 53, 58, 61, 80, 89, 93, 96, 97, 199, 200, 213, 216, 238], "pth": 27, "668": 27, "224": [27, 169, 194], "336": 27, "448": 27, "pow_cos_sin": 27, "900": 27, "1800": [27, 54], "2700": [27, 96], "3600": [27, 58], "rotate_point": 27, "pin": [27, 96, 97, 99, 110], "to_axis_angl": 27, "to_rotation_matrix": 27, "assumptionkei": 28, "proposit": [28, 30, 83], "is_tru": [28, 30, 31], "assumptionscontext": [28, 29, 30], "global_assumpt": [28, 29, 30], "discern": [28, 30], "refin": [28, 30, 53, 84, 187, 191, 195, 196, 212, 233], "progress": [28, 30, 93, 233], "inherit": [28, 53, 60, 83, 86, 87, 110, 155, 164, 185, 200, 220, 225, 233, 234], "askhandl": 28, "mere": [29, 30, 35, 57, 161], "thin": [29, 89, 122, 135], "undefinedpred": [29, 30], "sexi": [29, 30], "sexyprimepred": [29, 30], "sexyprim": [29, 30], "int1": [29, 30], "int2": [29, 30], "assump": [29, 30], "r3": [29, 82, 96, 97, 212], "predicate_": [29, 30], "mathematical_log": [29, 30], "r4": [29, 82, 96], "sexy_prim": [29, 30], "resolut": [29, 30, 213], "askpredicatehandl": [29, 30], "r5": [30, 212], "r6": 30, "tautolog": 30, "symmetr": [30, 32, 36, 41, 44, 45, 49, 69, 84, 85, 86, 89, 93, 175, 185, 191, 193, 196, 199, 208, 210, 226, 238], "unitari": [30, 80, 93, 150, 155], "triangular": [30, 84, 85, 89, 189, 195, 218, 220, 254], "diagon": [30, 58, 84, 85, 86, 89, 92, 115, 138, 189, 222, 223], "rank": [30, 35, 36, 37, 42, 44, 45, 47, 48, 49, 68, 82, 89, 90, 176, 178, 187, 189, 191, 193, 195, 221, 225, 226, 272], "singular": [30, 35, 45, 53, 57, 59, 60, 75, 76, 78, 80, 89, 96, 98, 130, 176, 187, 194, 207, 216, 219, 245, 256, 266], "notabl": [30, 35, 56, 61, 78, 94, 190], "truth_maintenance_system": 30, "istruepred": 31, "gt": [31, 35, 220, 238], "istruehandl": 31, "commutativepred": 31, "commutativehandl": 31, "finitepred": 31, "nor": [31, 33, 53, 83, 93, 140, 186, 196, 207, 209, 216, 226, 245], "nan": [31, 32, 59, 61, 109, 212, 220, 266], "finitehandl": 31, "r7": 31, "infinitepred": 31, "infinitehandl": 31, "symmetricpred": 31, "transpos": [31, 34, 84, 86, 89, 103, 133, 149, 176, 184, 189, 195, 213, 221, 226, 227, 272], "symmetrichandl": 31, "r8": 31, "symmetric_matrix": 31, "invertiblepred": 31, "fullrank": [31, 35], "invertiblehandl": 31, "r9": 31, "invertible_matrix": 31, "orthogonalpred": 31, "tm": [31, 139], "mm": [31, 34, 93, 111, 118, 123, 124, 164, 189], "orthogonalhandl": 31, "r10": 31, "orthogonal_matrix": 31, "unitarypred": 31, "unitaryhandl": 31, "r11": 31, "unitary_matrix": 31, "positivedefinitepred": 31, "tmz": 31, "column": [31, 34, 35, 36, 81, 83, 84, 86, 89, 90, 92, 103, 111, 115, 118, 131, 161, 168, 176, 180, 185, 189, 195, 200, 216, 219, 225, 245], "positive_definit": 31, "positivedefinitehandl": 31, "r12": 31, "definite_matrix": 31, "uppertriangularpred": 31, "m_": [31, 129, 193], "ij": [31, 166, 171, 220], "zeromatrix": [31, 86], "upper_triangular": [31, 84], "uppertriangularhandl": 31, "r13": 31, "uppertriangularmatrix": 31, "lowertriangularpred": 31, "lower_triangular": [31, 84], "lowertriangularhandl": 31, "r14": 31, "lowertriangularmatrix": 31, "diagonalpred": 31, "diagonalhandl": 31, "r15": 31, "diagonal_matrix": 31, "fullrankpred": 31, "row": [31, 34, 35, 36, 42, 45, 53, 58, 84, 85, 86, 89, 90, 92, 93, 103, 115, 116, 118, 131, 133, 134, 161, 176, 184, 189, 195, 200, 210, 219, 220, 225, 239, 245, 246], "linearli": [31, 35, 61, 77, 89, 193, 216, 218, 226], "fullrankhandl": 31, "squarepred": 31, "squarehandl": 31, "r16": 31, "square_matrix": 31, "integerelementspred": 31, "integer_el": 31, "integerelementshandl": 31, "realelementspred": 31, "real_el": 31, "realelementshandl": 31, "complexelementspred": 31, "complex_el": 31, "complexelementshandl": 31, "singularpred": 31, "singularhandl": 31, "fore": 31, "r17": 31, "singularmatrix": 31, "normalpred": 31, "normalhandl": 31, "r18": 31, "normal_matrix": 31, "triangularpred": 31, "triangularhandl": 31, "r19": 31, "triangular_matrix": 31, "unittriangularpred": 31, "unit_triangular": 31, "unittriangularhandl": 31, "evenpred": 31, "evenhandl": 31, "oddpred": 31, "oddhandl": 31, "primehandl": 31, "subject": [31, 63, 69, 97, 107, 134, 195], "compositepred": 31, "compositehandl": 31, "positivepred": 31, "positivehandl": 31, "negativepred": 31, "negativehandl": 31, "zeropred": 31, "zerohandl": 31, "nonzeropred": 31, "nonzerohandl": 31, "nonpositivepred": 31, "nonpositivehandl": 31, "nonnegativepred": 31, "nonnegativehandl": 31, "integerpred": 31, "integerhandl": 31, "r20": 31, "rationalpred": 31, "rationalhandl": 31, "r21": 31, "irrationalpred": 31, "ratio": [31, 43, 44, 52, 53, 57, 58, 61, 63, 66, 67, 68, 69, 85, 93, 103, 139, 171, 200, 209, 212, 218], "irrationalhandl": 31, "r22": 31, "realpred": 31, "disjoint": [31, 34, 42, 45, 196, 208, 238], "realhandl": 31, "r23": 31, "extendedrealpred": 31, "extendedrealhandl": 31, "hermitianpred": 31, "hermitianhandl": 31, "r24": 31, "hermitianoper": [31, 155], "complexpred": 31, "complexhandl": 31, "r25": 31, "imaginarypred": 31, "imaginaryhandl": 31, "r26": 31, "antihermitianpred": 31, "antihermitianhandl": 31, "r27": 31, "algebraicpred": 31, "askalgebraicpredicatehandl": 31, "r28": 31, "algebraichandl": 31, "transcendentalpred": 31, "transcedent": 31, "refine_pow": 32, "refine_ab": 32, "refine_arg": 32, "refine_atan2": 32, "refine_im": 32, "refine_matrixel": 32, "refine_r": 32, "refine_sign": 32, "lagrang": [33, 53, 110, 122, 126, 196, 213], "lagrangian": [33, 111, 120, 125, 126, 129, 130], "euler_equ": 33, "r29": 33, "93lagrange_equ": 33, "decreas": [33, 35, 45, 193], "monoton": [33, 35, 70], "is_decreas": 33, "lopen": [33, 53, 208, 215, 220], "ropen": [33, 59, 208, 220], "is_increas": 33, "72": [33, 53, 66, 89, 93, 96, 185, 199], "is_monoton": 33, "is_strictly_decreas": 33, "is_strictly_increas": 33, "monotonicity_help": 33, "held": [33, 54, 130, 224, 276], "r30": 33, "mathematical_singular": 33, "interpol": [33, 62, 133, 193, 196], "finite_diff_weight": [33, 53, 266], "estim": [33, 52, 53, 57, 78, 266], "apply_finite_diff": [33, 53, 266], "differentiate_finit": [33, 53, 266], "finite_diff": [33, 53], "x_list": [33, 266], "y_list": [33, 266], "cube": [33, 35, 37, 44, 46, 59, 80, 193, 194, 213, 219, 254], "xlist": 33, "55271367880050e": 33, "indexedbas": [33, 35, 52, 53, 200, 218, 224, 225, 232], "idx": [33, 35, 200, 224, 225, 232], "zip": [33, 43, 54, 83, 93, 196, 206, 213, 216, 235, 238], "region": [33, 61, 70, 80, 186, 208, 216, 219, 220, 245, 247, 254], "bewar": [33, 61], "phenomenon": [33, 171, 193, 203, 271], "90": [33, 44, 51, 61, 84, 89, 95, 96, 99, 107, 116, 134, 200, 202, 212, 220, 233], "finitediff": 33, "wrt": [33, 35, 53, 55, 61, 70, 89, 116, 133, 176, 177, 193, 196, 245, 246, 247, 251], "len": [33, 41, 42, 43, 44, 45, 49, 51, 53, 54, 58, 61, 68, 78, 83, 120, 135, 139, 150, 160, 196, 212, 216, 225, 238], "nearest": [33, 195], "furthest": [33, 54], "sublist": [33, 49, 54, 80, 163, 266], "fd": [33, 35, 166], "0th": [33, 45, 54, 61], "1st": [33, 45, 93, 103, 216, 217, 241, 266], "classic": [33, 59, 61, 89, 152, 168, 176, 184, 187, 261], "forward": [33, 35, 84, 103, 118, 126, 159, 183, 212, 231], "pai": 33, "attent": [33, 44, 59], "gridpoint": 33, "plan": [33, 107, 191, 214, 275], "mycoeff": 33, "3rd": [33, 45, 59, 93, 133, 196, 218, 221, 238], "2nd": [33, 45, 54, 93, 103, 133, 216, 221, 238], "cost": [33, 35, 93, 120, 219, 270], "poorer": 33, "grand": 33, "r31": 33, "51": [33, 89, 93], "184": [33, 216], "1988": [33, 145, 163, 193, 194], "699": 33, "706": [33, 89], "1090": [33, 196], "s0025": [33, 93], "5718": [33, 93], "0935077": 33, "continuous_domain": [33, 215], "tan": [33, 53, 58, 60, 80, 95, 109, 123, 124, 125, 130, 197, 199, 200, 207, 209, 216, 219, 276], "function_rang": 33, "is_convex": [33, 69], "sym": [33, 43, 44, 49, 53, 58, 176, 200, 203, 208, 212, 213, 218, 220, 226, 238, 276], "convex": [33, 69, 70, 80], "unspecifi": [33, 53, 68, 266], "multivari": [33, 53, 61, 187, 188, 190, 191, 192, 194, 196, 197, 207, 212, 218, 219, 220, 276], "concav": [33, 135], "r32": 33, "convex_funct": 33, "r33": 33, "ifp": 33, "illinoi": 33, "edu": [33, 37, 44, 45, 54, 56, 58, 80, 89, 93, 194, 199, 209, 212, 213, 216, 220, 245], "angelia": 33, "l3_convfunc": 33, "r34": 33, "logarithmically_convex_funct": 33, "r35": 33, "logarithmically_concave_funct": 33, "r36": 33, "concave_funct": 33, "lcim": 33, "mixtur": [33, 35, 70, 187, 233], "incommensur": 33, "not_empty_in": [33, 219], "finset_intersect": 33, "finite_set": [33, 208], "tracker": [33, 208, 219, 272], "aperiod": 33, "smallest": [33, 47, 59, 66, 68, 75, 83, 89, 93, 163, 176, 191, 236, 238], "verif": [33, 189, 218], "reliabl": [33, 53, 216, 236, 266], "henc": [33, 35, 43, 44, 53, 55, 59, 61, 65, 78, 81, 83, 93, 99, 181, 186, 187, 188, 193, 200, 210, 213, 217, 219, 231, 235, 249, 250, 251, 271, 276], "stationary_point": 33, "stationari": [33, 220], "tikz": 34, "joyofcat": 34, "adamek": 34, "herrlich": 34, "strecker": 34, "joi": 34, "cat": [34, 175], "book": [34, 44, 54, 59, 111, 116, 119, 127, 131, 132, 151, 194, 199, 200, 269], "katmat": 34, "uni": [34, 80, 238], "bremen": 34, "de": [34, 54, 93, 171, 185, 186, 197, 202, 213, 214, 216, 238], "acc": [34, 133, 179, 183], "embryon": 34, "morphism": [34, 187], "codomain": [34, 187, 195], "arrow": [34, 82, 96, 186, 200], "namedmorph": 34, "prohibit": [34, 45, 46, 176], "identitymorph": 34, "compositemorph": 34, "compos": [34, 53, 54, 120, 130, 168, 170, 171, 183, 187, 191, 195, 196, 197, 200, 202, 212], "circ": [34, 53, 64, 70, 78, 86], "compon": [34, 35, 49, 53, 55, 68, 80, 86, 89, 104, 113, 126, 131, 138, 163, 168, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 198, 220, 222, 225, 226, 235, 238, 245, 247, 250, 251], "new_nam": 34, "forget": [34, 276], "id_a": 34, "id_b": 34, "commutative_diagram": 34, "quadrupl": [34, 196], "mbox": 34, "hom": 34, "id": [34, 49, 59], "rightarrow": [34, 45, 49, 54, 58, 59, 61, 75, 76, 78, 80, 83, 84, 93, 186, 195, 207, 219, 238, 266], "monoid": 34, "pare1970": 34, "accompani": 34, "premis": 34, "conclus": [34, 53], "carri": [34, 35, 53, 158, 164, 171, 187, 190, 193, 195, 197, 198, 239], "premises_kei": 34, "et": [34, 80, 145, 193, 196, 197, 209, 212], "pareigi": 34, "functor": 34, "1970": [34, 89], "is_subdiagram": 34, "subdiagram": 34, "d1": [34, 49, 176, 187, 207, 220, 245], "subdiagram_from_object": 34, "preserv": [34, 35, 44, 53, 89, 164, 191, 196, 201, 202, 212], "veryuniqu": 34, "diagram_draw": 34, "diagramgrid": 34, "analys": [34, 101, 103, 133, 220], "drawn": [34, 44, 82, 186, 190, 198], "moprhism": 34, "strive": 34, "nevertheless": 34, "laid": [34, 116, 163], "width": [34, 35, 81, 180, 186, 196, 200, 231], "height": [34, 35, 69, 86, 135, 186, 187, 200, 207, 254], "emploi": [34, 52, 57, 80, 93, 196, 199, 214, 216, 220], "lai": 34, "layout": 34, "sequenti": [34, 37, 54, 59, 245, 246], "test_draw": 34, "five": [34, 42, 78, 99, 200, 213], "lemma": [34, 44, 78, 188], "fivelemma": 34, "five_lemma": 34, "arrowstringdescript": 34, "curving_amount": 34, "looping_start": 34, "looping_end": 34, "horizontal_direct": 34, "vertical_direct": 34, "label_posit": 34, "pic": 34, "princip": [34, 54, 59, 61, 78, 80, 90, 105, 118, 139, 187, 188, 189, 190, 191, 193, 195, 196, 197], "offset": [34, 35, 53, 58, 61, 225], "cell": 34, "vertic": [34, 37, 46, 47, 63, 64, 66, 68, 69, 70, 80, 82, 84, 89, 97, 115, 121, 138, 146, 185, 186, 189, 195, 200, 208, 238, 254], "disregard": 34, "unexplain": 34, "astr": 34, "dr": [34, 55, 200, 216], "12mm": 34, "loop": [34, 35, 93, 103, 119, 176, 186, 197, 200, 216, 235, 238, 271], "correspondingli": 34, "label_displac": 34, "arrow_styl": 34, "dash": 34, "xypicdiagramdraw": 34, "formatt": 34, "utilis": 34, "xypic": 34, "drawer": 34, "xymatrix": 34, "ld": 34, "arrow_formatt": 34, "therebi": 34, "default_arrow_formatt": 34, "farther": 34, "centr": [34, 50, 186], "default_formatt": 34, "45": [34, 53, 58, 69, 89, 93, 99, 196, 197, 213], "_3mm": 34, "default_curving_amount": 34, "cm": [34, 133, 220], "_1cm": 34, "default_curving_step": 34, "h1": [34, 113], "1cm": 34, "rr": [34, 53, 71, 189, 190, 192, 196, 197], "h_": [34, 44, 49, 61, 80], "_2cm": 34, "mask": [34, 200], "diagram_format": 34, "proceed": [34, 36, 78, 80, 132, 194, 210], "xypic_draw_diagram": 34, "shortcut": [34, 53, 85, 184, 200, 208, 212, 276], "insert": [34, 36, 84, 95, 96, 161, 166, 200, 220, 241], "preview_diagram": 34, "png": [34, 81, 89, 96, 97, 101, 180, 186, 200, 203], "varieti": [35, 36, 45, 53, 94, 97, 131, 187, 194, 196, 220, 238], "brief": [35, 219, 231, 253], "fab": [35, 200], "cse_main": [35, 201, 212], "cse": [35, 94, 107, 155, 201, 233, 239], "meat": 35, "lightweight": [35, 195, 270], "pycod": [35, 200], "lambdarepr": [35, 200, 239], "aesara_funct": [35, 94, 200], "float80": [35, 200], "assign_to": [35, 200], "type_alias": [35, 200], "0l": [35, 200], "powl": [35, 200], "c99": [35, 200, 233], "expm1": [35, 200], "ternari": [35, 53, 200, 213], "lack": [35, 55, 57, 113, 200, 266], "thrown": [35, 200], "fcode": [35, 200], "contract": [35, 55, 104, 166, 200, 209, 222, 223, 224, 225, 226, 227], "len_i": [35, 200], "mat_1": 35, "mat_2": 35, "jscode": [35, 200], "user_funct": [35, 200], "argument_test": [35, 200], "cfunction_str": [35, 200], "octav": [35, 133, 233, 263], "custom_funct": [35, 200], "existing_octave_fcn": [35, 200], "is_matrix": [35, 200], "my_mat_fcn": [35, 200], "my_fcn": [35, 200], "mat": [35, 86, 135, 160, 200], "octave_cod": [35, 200], "summat": [35, 52, 53, 57, 58, 61, 166, 194, 200, 203, 212, 220, 221, 224, 225, 226, 232], "mathematica_cod": [35, 200], "g1": [35, 38, 43, 44, 78, 89, 103], "g2": [35, 38, 43, 44, 78, 82, 89, 103], "gamma_1": [35, 106], "gamma_2": [35, 106], "\u03b3\u2081": 35, "\u03b3\u2082": 35, "\u03b2": [35, 185], "h_i": [35, 49], "c89": [35, 200, 233], "julia_cod": [35, 200], "rust_cod": [35, 200], "powi": [35, 200], "make_routin": [35, 233], "f95": [35, 232, 233], "matlab": [35, 107, 133, 233, 263, 272], "breadth": [35, 53, 220], "c_name": [35, 233], "c_code": [35, 233], "h_name": [35, 233], "c_header": [35, 233], "volume_result": 35, "ifndef": [35, 233], "project__test__h": [35, 233], "endif": [35, 233], "preprocessor": [35, 201, 212, 233], "global_var": [35, 233], "insensit": [35, 89, 133, 200, 231, 233], "argument_sequ": [35, 233], "routin": [35, 42, 52, 53, 54, 55, 78, 83, 84, 89, 93, 138, 166, 189, 193, 196, 199, 200, 201, 212, 213, 216, 217, 218, 219, 232, 237, 238, 251], "name_expr": [35, 233], "to_fil": [35, 233], "f_name": [35, 233], "f_code": [35, 233], "choic": [35, 45, 61, 78, 80, 94, 130, 162, 171, 175, 176, 183, 191, 193, 196, 200, 212, 216, 238, 270], "hydrogen": [35, 261], "r_nl": [35, 105, 167], "my_routin": 35, "result_var": [35, 233], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 35, "__________": [35, 188], "\u212f": [35, 138, 185, 200, 266, 270, 272, 276, 277], "assoc_laguerr": [35, 61, 200], "fcn": [35, 233], "result_5397460570204848505": [35, 233], "out_8598435338387848786": [35, 233], "examin": [35, 54, 155, 231, 233, 276], "inputargu": [35, 233], "outputargu": [35, 233], "inoutargu": [35, 233], "disk": [35, 54, 208, 219, 239], "binary_funct": [35, 94, 232], "tensor": [35, 40, 55, 60, 89, 104, 113, 131, 145, 151, 152, 153, 163, 166, 175, 176, 200, 221, 222, 224, 225, 232, 239, 248, 249, 255, 259], "binary_func": [35, 232], "servic": [35, 220], "tempdir": [35, 232], "qho_1d": [35, 142], "psi_n": [35, 142], "y_": [35, 61, 78, 105, 185], "qho": 35, "tmp": 35, "reveal": [35, 93, 219, 271], "subroutin": [35, 44, 162, 193], "autofunc": 35, "dimens": [35, 37, 54, 55, 61, 62, 64, 66, 67, 68, 70, 82, 84, 86, 89, 92, 96, 104, 120, 140, 150, 152, 155, 160, 169, 170, 173, 174, 176, 186, 189, 200, 213, 216, 218, 220, 221, 225, 226, 233, 245, 247, 249, 261], "hbar": [35, 142, 148, 161, 167, 171, 173, 185], "05457162d": 35, "14159265358979d0": 35, "0d0": [35, 200], "74126166983329d": 35, "33": [35, 53, 56, 89, 131, 139, 193, 197, 200, 220], "verbos": [35, 53, 84, 93, 200, 231, 232, 275], "mute": [35, 232], "backend": [35, 81, 94, 95, 101, 119, 121, 127, 180, 197, 232, 239, 262], "auxiliari": [35, 80, 111, 116, 128, 216, 232], "function_nam": [35, 232], "sympy_express": [35, 232], "mandatori": [35, 200, 232], "illustr": [35, 89, 117, 120, 171, 190, 203, 207], "psi_nl": 35, "766": 35, "incur": [35, 94], "get_numpy_arrai": 35, "tight": 35, "temp": [35, 118], "alloc": [35, 59], "fuse": 35, "wise": [35, 36, 59, 84, 189, 193, 200, 206, 232], "unabl": [35, 66, 70, 95, 218, 245, 265, 266], "fortun": [35, 94, 120, 196, 197], "reconnect": 35, "autom": [35, 59, 94, 209, 232, 270], "ideologi": [35, 219], "fashion": [35, 53, 59, 86, 118, 128, 129, 131, 184, 187, 238], "broadcast": [35, 94, 200, 225, 232], "outperform": 35, "jensen": 35, "quantit": [35, 168], "leverag": [35, 94, 200], "ufunc": [35, 94, 232, 239], "fn_numpi": 35, "fn_fortran": 35, "linspac": [35, 76, 94, 116, 133], "xx": [35, 89, 113, 184, 238], "21306132": 35, "98101184": 35, "44626032": 35, "timeit": [35, 197], "10000": [35, 57, 93, 94, 96, 218], "18891601900395472": 35, "004707066000264604": 35, "facil": 35, "comparison": [35, 52, 53, 83, 89, 116, 187, 195, 199, 218, 231, 238], "thereof": [35, 53, 187, 193, 195], "optims_c99": 35, "log1p": [35, 200], "expm1_opt": 35, "log1p_opt": 35, "exp2_opt": 35, "log2_opt": 35, "log2const_opt": 35, "funcminusoneoptim": 35, "func_m_1": 35, "opportunist": 35, "replaceoptim": 35, "catastroph": 35, "replace_in_add": 35, "cost_funct": 35, "prioriti": [35, 76, 107, 116, 184, 239], "__call__": [35, 45, 53, 195], "exp2": [35, 200], "create_expand_pow_optim": 35, "base_req": 35, "is_symbol": [35, 84], "expand_opt": 35, "opt2": 35, "is_funct": 35, "log2": [35, 200], "matin_opt": 35, "matinv_opt": 35, "matrixsolv": [35, 200], "matrix_nod": 35, "numpyprint": 35, "doprint": [35, 200], "linalg": 35, "seriesapprox": 35, "reltol": 35, "max_ord": 35, "n_point_check": 35, "threshold": [35, 93], "largest": [35, 45, 47, 53, 59, 61, 89, 92, 93, 146, 187, 191, 218, 238], "series_approx2": 35, "1e": [35, 53, 57, 89, 101, 135, 196, 218], "series_approx3": 35, "series_approx8": 35, "sumapprox": 35, "neglect": 35, "2000": [35, 39, 80, 93, 194], "sum_approx3": 35, "sum_approx2": 35, "sum_approx1": 35, "token": [35, 78, 81, 95], "diagram": [35, 42, 82, 96, 119, 120, 121, 126, 146, 225, 249, 262, 271], "codegenast": 35, "assignmentbas": 35, "augmentedassign": 35, "addaugmentedassign": 35, "subaugmentedassign": 35, "mulaugmentedassign": 35, "divaugmentedassign": 35, "modaugmentedassign": 35, "codeblock": [35, 95], "quotedstr": 35, "intbasetyp": 35, "_sizedinttyp": 35, "signedinttyp": 35, "unsignedinttyp": 35, "floatbasetyp": 35, "floattyp": 35, "complexbasetyp": 35, "complextyp": 35, "pointer": [35, 233, 234], "functionprototyp": 35, "functiondefinit": [35, 95], "stream": [35, 54, 201, 212, 238], "functioncal": 35, "breaktoken": 35, "continuetoken": 35, "nonetoken": 35, "float32": [35, 94, 95, 239], "float64": [35, 94, 220], "codeprint": 35, "complex_": 35, "bool_": 35, "intc": [35, 95], "intp": 35, "unsign": [35, 58, 212], "int8": 35, "int16": 35, "int32": 35, "int64": [35, 220], "uint8": 35, "uint16": 35, "uint32": 35, "uint64": 35, "x86": 35, "amd64": 35, "complex64": 35, "complex128": 35, "newton": [35, 61, 126, 169, 173, 193, 197], "aug_assign": 35, "tol": [35, 53, 191], "val": [35, 53, 65, 191, 195, 239], "whl": 35, "py_str": 35, "inf": [35, 45, 53, 89, 191, 196, 208, 216, 220], "exec": [35, 53, 81, 239], "1121416371": 35, "909672693737": 35, "867263818209": 35, "865477135298": 35, "865474033111": 35, "1g": 35, "3e": 35, "2003": [35, 185, 194, 200, 213], "source_format": [35, 200], "align": [35, 63, 89, 110, 127, 184, 185, 200, 218, 231], "op": [35, 53, 89, 155, 166, 179, 183, 209, 238, 239], "parametr": [35, 61, 62, 66, 89, 186, 213, 219, 245, 247, 254], "volatil": 35, "binop": 35, "exit": [35, 93, 231], "premad": 35, "break_": 35, "lift": [35, 49, 59, 61, 78, 191, 193, 196], "left_hand_sid": 35, "topological_sort": [35, 238], "postprocess": [35, 196, 201, 212], "topolog": [35, 53, 55, 189, 238], "continue_": 35, "untyp": 35, "compliant": 35, "ok": [35, 45, 200, 216], "elem": [35, 44, 187], "ijk": [35, 225], "stride": [35, 225], "lmn": 35, "cast_nocheck": 35, "alia": [35, 46, 53, 63, 69, 84, 85, 87, 91, 150, 159, 166, 187, 190, 191, 195, 199, 208, 231, 241, 276], "nbit": 35, "storag": [35, 53, 89, 160, 185, 193], "nmant": 35, "mantissa": 35, "nexp": 35, "half_precis": 35, "f16": 35, "65504": 35, "tini": [35, 53], "ep": [35, 44, 52, 191, 195, 196], "decimal_dig": 35, "cast_check": 35, "1e5": 35, "cast": [35, 86, 268], "subnorm": [35, 44], "idempot": 35, "loos": [35, 53, 211], "overflow": [35, 235], "max_expon": 35, "min_expon": 35, "for_i": 35, "for_ji": 35, "for_kji": 35, "function_arg": [35, 231], "fcall": 35, "bar": [35, 61, 117, 126, 155, 161, 241], "baz": 35, "return_typ": 35, "fp": [35, 36, 53, 196, 202], "from_functionprototyp": 35, "prototyp": [35, 94, 233], "value_const": 35, "pointer_const": 35, "attr_param": 35, "looking_for": 35, "as_declar": 35, "formatstr": 35, "5g": 35, "stdout": [35, 231], "stderr": 35, "oppos": [35, 239, 266], "_field": 35, "_construct_": 35, "not_in_arg": 35, "float16": 35, "inttyp": 35, "super": [35, 61, 191, 200, 245, 246], "from_expr": [35, 196], "toler": [35, 53, 57, 191, 212, 218], "42": [35, 42, 53, 56, 58, 66, 67, 69, 84, 85, 87, 89, 91, 93, 191, 213, 231], "v6": 35, "123456": [35, 53, 93], "v10": 35, "12345": [35, 57], "67894": 35, "boost_mp50": 35, "boost": 35, "multiprecis": [35, 190], "cpp_dec_float_50": 35, "r37": 35, "rtol": 35, "atol": 35, "precision_target": 35, "v18": 35, "123456789012345646": 35, "123456789012345649": 35, "Will": [35, 89, 95, 195, 200, 231], "decl1": 35, "decl2": 35, "alt": 35, "secondarili": [35, 196], "mathcin": 35, "cbrt": [35, 60, 200], "minu": [35, 52, 53, 181, 193, 200, 251], "0e": [35, 53], "fma": [35, 200], "cpu": [35, 94, 133], "hypot": [35, 200], "hypotenus": [35, 69], "log10": [35, 200], "ten": [35, 94], "plu": [35, 52, 89, 95, 133, 146, 200, 210, 239], "famili": [35, 37, 71, 80, 188], "commaoper": 35, "goto": 35, "preincrement": 35, "postdecr": 35, "decrement": [35, 211, 235], "postincr": 35, "increment": [35, 44, 45, 46, 52, 69, 93, 211, 220], "predecr": 35, "alignof": 35, "sizeof": 35, "struct": 35, "dsign": 35, "arrayconstructor": 35, "ac": [35, 45, 65, 99, 113, 131, 143, 213, 220, 238, 241], "95": [35, 51, 93, 193, 200, 216, 218, 233], "do1": 35, "1d0": 35, "do2": 35, "extent": 35, "intent_out": 35, "dim": [35, 55, 68, 94, 168, 174, 200, 223, 226], "arr": 35, "fortranreturn": 35, "aid": [35, 118], "implieddoloop": 35, "idl": 35, "signallib": 35, "prog": [35, 145], "myprogram": 35, "mysub": 35, "subroutinecal": 35, "passs": 35, "inout": 35, "bind_c": 35, "sum_": [35, 52, 53, 54, 58, 61, 78, 80, 84, 86, 93, 197, 202, 203, 210, 216, 220], "cmplx": [35, 200], "intent_in": 35, "intrins": 35, "isign": 35, "lbound": 35, "lb": [35, 75, 235], "literal_dp": 35, "num": [35, 44, 53, 93, 103, 191, 212, 216, 235, 241], "literal_sp": 35, "reshap": [35, 84, 116, 133, 221, 227, 238], "arrayexpr": 35, "shp": 35, "metric": [35, 45, 49, 55, 104, 212, 216, 219, 226], "snr": 35, "convolution2d": 35, "use_renam": 35, "ren": 35, "thingi": 35, "newtons_method": 35, "itermax": 35, "counter": [35, 53, 59, 65, 84, 97, 99], "raphson": 35, "criterion": [35, 44, 132, 188, 193], "netwon": 35, "algo": [35, 45], "r38": 35, "27s_method": 35, "newtons_method_funct": 35, "param": [35, 55, 89, 213], "render_as_modul": 35, "py_mod": 35, "865474033102": 35, "render_as_source_fil": 35, "printer_set": 35, "fcodeprint": [35, 200], "fpgroup": [36, 44], "studi": [36, 43, 52, 55, 89, 184, 187, 193, 196, 213, 220], "combinator": [36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 86, 93, 202, 221, 226, 235, 238, 256, 270, 276], "free_group": [36, 43, 44], "vfree_group": 36, "xfree_group": 36, "fp_group": [36, 44], "coset_enumeration_r": 36, "fall": [36, 52, 53, 58, 81, 180, 195, 200, 213, 217, 220], "famou": [36, 61, 80, 93, 213], "langl": [36, 44, 145, 185], "rangl": [36, 44, 145, 163, 185], "gen0": 36, "gen1": 36, "gen_": 36, "freegroup": 36, "x_2": [36, 43, 58, 75, 161, 188, 193, 196, 202, 213, 219], "x_3": [36, 43, 75, 161], "s_1": 36, "r_1": [36, 187, 197], "s_2": 36, "r_2": 36, "s_k": 36, "r_k": [36, 159], "s_i": [36, 49, 80, 82], "r_i": [36, 197], "reduct": [36, 89, 112, 193, 195, 211, 213], "ho05": [36, 43], "cdhw73": 36, "hav91": 36, "coset_enumeration_c": 36, "coset_enumer": 36, "relator_bas": 36, "coset_table_bas": 36, "total": [36, 42, 44, 53, 58, 69, 82, 83, 84, 86, 118, 120, 128, 135, 139, 145, 150, 163, 172, 185, 191, 193, 196, 209, 212, 216, 224, 226, 254], "influenc": [36, 96, 187, 188], "coset_table_max_limit": 36, "4096000": 36, "safeti": [36, 45, 87], "max_coset": 36, "cox": [36, 194, 196], "c_r": [36, 210], "50": [36, 44, 56, 57, 58, 61, 69, 89, 93, 96, 97, 139, 196, 200, 209, 218], "max_stack_s": 36, "500": [36, 57, 113], "deduction_stack": 36, "stack": [36, 70, 84, 133, 189, 195, 200, 229, 235, 272], "occurr": [36, 53, 93, 116, 176, 212, 220], "exce": [36, 93, 226], "modest": 36, "low_index_subgroup": 36, "conjugaci": [36, 44], "coset_t": [36, 44], "reidemeister_present": 36, "y_1": [36, 213, 220], "y_2": [36, 213, 220], "john": [36, 44, 61, 196, 213, 216], "cannon": 36, "lucien": 36, "dimino": [36, 44], "georg": [36, 187, 216, 238], "hava": 36, "jane": 36, "watson": [36, 212], "comp": [36, 216], "463": [36, 132], "490": [36, 45], "1973": [36, 54, 182], "derek": [36, 43], "holt": [36, 43, 44, 51], "chapman": [36, 43], "hall": [36, 43, 220], "crc": [36, 43, 45], "2005": [36, 43, 80, 93, 196], "xvi": [36, 43], "514": [36, 43, 194], "symposium": [36, 78, 193, 194, 210], "issac": [36, 80, 194, 218], "bonn": 36, "1991": [36, 194], "191": [36, 219], "199": 36, "acm": [36, 52, 78, 80, 194, 210, 216, 218], "graycod": 37, "kw_arg": [37, 47, 166, 225, 226], "hamiltonian": [37, 157], "edg": [37, 46, 47, 82, 189, 200, 219, 238, 275], "hamilton": [37, 84], "vertex": [37, 47, 64, 69, 80, 189], "000": [37, 57, 80, 83, 160, 238], "110": [37, 83, 216, 218, 232, 238], "010": [37, 83, 238], "011": [37, 83, 160, 238], "111": [37, 56, 63, 83, 93, 238], "101": [37, 83, 93, 160, 238], "001": [37, 57, 83, 135, 238], "delet": [37, 82, 84, 89, 197, 241, 276], "statist": [37, 54, 61, 220, 231, 270], "manner": [37, 54, 61, 130, 164, 181, 213, 216, 221, 238, 253], "generate_grai": 37, "0000": 37, "0001": [37, 57], "0011": [37, 48], "0010": 37, "0110": 37, "0111": [37, 160], "0101": [37, 160], "0100": 37, "1100": 37, "1101": 37, "1111": 37, "1110": 37, "1010": 37, "1011": 37, "1001": 37, "r39": 37, "nijenhui": 37, "wilf": [37, 52, 218], "1978": [37, 44, 171, 194], "r40": 37, "knuth": [37, 45, 235], "2011": [37, 45, 78, 93, 182, 209], "art": [37, 45, 187, 200, 202, 235, 262], "vol": [37, 45, 54, 58, 61, 78, 89, 104, 195, 196, 210, 235, 238], "addison": [37, 45, 93, 194], "weslei": [37, 45, 93, 194], "r41": 37, "reflect": [37, 41, 45, 53, 63, 64, 69, 82, 99, 135, 138, 139, 176], "brgc": 37, "6th": [37, 93], "unrank": [37, 42, 44, 45, 47], "r42": 37, "statweb": 37, "stanford": 37, "susan": 37, "s208": 37, "node12": 37, "tail": [37, 52, 53, 191, 220], "00010": 37, "random_bitstr": 37, "bitlist": [37, 48], "gray_to_bin": 37, "endian": 37, "bin_to_grai": 37, "get_subset_from_bitstr": 37, "bitstr": 37, "graycode_subset": 37, "group_construct": 38, "directproduct": [38, 41], "__mul__": [38, 44, 84, 89, 191, 195], "shift": [38, 44, 45, 47, 54, 61, 64, 68, 70, 83, 186, 191, 193, 196, 203, 210, 218, 220], "gn": 38, "named_group": [38, 41, 43, 44, 50, 51], "cyclicgroup": [38, 41, 44], "perm_group": [38, 43, 44, 45, 50, 51], "permutationgroup": [38, 41, 43, 44, 45, 50, 51], "group_numb": 39, "is_nilpotent_numb": 39, "r43": 39, "randprim": [39, 93], "pakianathan": 39, "shankar": 39, "monthli": [39, 54, 89], "107": [39, 194], "631": 39, "634": 39, "is_abelian_numb": 39, "r44": 39, "is_cyclic_numb": 39, "r45": 39, "polyhedron": [40, 44, 80, 238], "prufer": 40, "grai": [40, 48, 81, 135, 180, 186], "nilpot": [40, 44, 89], "abelian": [40, 41, 44, 82, 171, 187], "cyclic": [40, 41, 44, 45, 46, 56, 84, 93, 226, 238], "coset": [40, 44, 49, 195], "todd": 40, "coxet": [40, 82], "subgroup": [40, 44, 45, 49, 51, 82, 93], "bibliographi": 40, "polycycl": [40, 44], "collector": 40, "symmetricgroup": [41, 43, 44, 50, 51], "transposit": [41, 44, 45, 54, 84, 86, 222], "is_group": [41, 44], "generate_schreier_sim": [41, 44], "af": [41, 44, 50, 133], "dihedralgroup": [41, 44, 51], "alternatinggroup": [41, 44, 50], "r46": 41, "symmetric_group": 41, "generators_and_rel": 41, "dihedr": [41, 45], "d_n": [41, 82, 196], "gon": 41, "bab": 41, "generate_dimino": [41, 44], "perm": [41, 43, 44, 45, 46, 51, 58, 84, 86, 89, 221], "cyclic_form": [41, 45, 46], "r47": 41, "dihedral_group": 41, "31": [41, 53, 56, 57, 69, 93, 131, 185, 196, 213], "ex": [41, 80, 104, 115, 190, 192, 195, 196, 226, 234], "r48": 41, "armstrong": 41, "abeliangroup": [41, 44], "cyclic_ord": 41, "theorem": [41, 54, 61, 63, 69, 79, 80, 84, 89, 93, 106, 107, 118, 166, 175, 183, 187, 190, 193, 207, 210, 213, 219, 252, 262], "r49": 41, "groupprop": [41, 44], "subwiki": [41, 44], "structure_theorem_for_finitely_generated_abelian_group": 41, "multiset_partit": [42, 58, 78, 235, 238], "rg": 42, "growth": [42, 93, 193, 266], "from_rg": 42, "abcd": [42, 46, 166, 238, 241], "cbead": 42, "sort_kei": [42, 53, 216], "ti": [42, 45, 53, 93], "integerpartit": [42, 238], "summand": [42, 195], "r50": 42, "partition_": [42, 58], "28number_theori": 42, "as_dict": [42, 190, 196], "as_ferr": 42, "char": 42, "ferrer": 42, "next_lex": [42, 45], "lexic": [42, 146, 238], "prev_lex": 42, "random_integer_partit": 42, "seed": [42, 44, 53, 54, 63, 66, 67, 89, 93, 193, 220, 231, 238], "85": [42, 57, 58, 89, 93, 118, 164, 185, 220], "rgs_gener": 42, "37": [42, 54, 59, 63, 89, 93, 97, 200, 213], "52": [42, 58, 93, 96, 97, 185, 199, 213, 216, 238, 266], "151": 42, "203": [42, 58], "rgs_enum": 42, "rgs_unrank": 42, "rgs_rank": 42, "pcgroup": 43, "pcg": 43, "pc_seri": [43, 44], "polycyl": 43, "pc_present": 43, "pc_sequenc": [43, 44], "miss": [43, 44, 70, 200, 218, 233, 276], "adjac": [43, 44, 45, 53, 103, 138, 189, 238], "der": [43, 44], "relative_ord": [43, 44], "polycyclic_group": [43, 44], "gen": [43, 44, 49, 50, 51, 53, 89, 187, 190, 191, 193, 195, 196, 197, 198, 206, 212, 215, 218], "is_ident": [43, 45, 53], "poss": [43, 118, 184], "pc_group": 43, "a_j": [43, 61, 78, 171, 193, 202, 210], "notin": [43, 78, 208], "_order": 43, "minimal_uncollected_subword": 43, "subword_index": 43, "i_1": [43, 166, 196, 221], "a_1": [43, 44, 54, 61, 75, 78, 84, 89, 104, 166, 171, 188, 193, 210, 213, 216, 218, 220, 276], "i_r": 43, "a_r": [43, 210], "i_2": [43, 166, 196], "s_": [43, 49, 116, 193], "s_j": [43, 82, 193], "x3": [43, 53, 58, 190, 216, 220], "collected_word": 43, "free_to_perm": 43, "bottom": [43, 44, 53, 54, 69, 84, 89, 92, 115, 195, 200, 209, 254], "pictur": [43, 200], "x_3x_2": 43, "x_3x_1": 43, "x_2x_1": 43, "x_3x_0": 43, "x_2x_0": 43, "x_1x_0": 43, "varii": 43, "derived_seri": [43, 44], "pc_resent": 43, "k_arrai": 43, "array_form": [43, 45, 46], "v_arrai": 43, "e_1": [43, 89, 187, 193, 196], "e_n": [43, 58, 82, 89, 142, 187, 196], "exponent_vector": 43, "leading_expon": 43, "dup": [44, 191, 192], "pn": [44, 120, 130], "motion": [44, 107, 110, 111, 112, 115, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 133, 134, 179, 180, 183, 184, 220], "front": [44, 53, 118, 119, 135, 165, 191, 193, 196, 200, 212, 276], "face": [44, 46, 66, 80, 116, 193, 197, 200, 213, 254, 272], "rubik": 44, "3674160": 44, "pgroup": [44, 46], "corner": [44, 46, 84, 196, 216, 219, 239], "reset": [44, 46, 186, 193, 196, 231, 234, 236], "p10": 44, "make_perm": 44, "r51": 44, "eick": [44, 51], "brien": [44, 51], "r52": 44, "seress": 44, "r53": 44, "schreier_vector": 44, "r54": 44, "nielsen_transform": 44, "product_replacement_algorithm": 44, "r55": 44, "frank": [44, 45, 89], "celler": 44, "charl": 44, "leedham": 44, "green": [44, 127, 186], "scott": 44, "murrai": 44, "alic": [44, 54], "niemey": 44, "r56": 44, "block_": 44, "28permutation_group_theori": 44, "r57": 44, "algorithmist": 44, "php": [44, 61, 93, 213, 220], "union_find": 44, "r58": 44, "multiply_transitive_group": 44, "r59": 44, "center_": 44, "28group_theori": 44, "centralizer_and_norm": 44, "derived_subgroup": 44, "nilpotent_group": 44, "colost": 44, "hulpk": 44, "cgt": 44, "cgtnote": 44, "__contains__": 44, "__weakref__": [44, 84], "weak": [44, 53, 84, 190, 193], "_coset_repres": 44, "hg": 44, "transvers": [44, 49, 51, 139, 140], "coset_transvers": 44, "_distinct_primes_lemma": 44, "_element": 44, "_eval_is_alt_sym_monte_carlo": 44, "05": [44, 75, 101, 182, 185], "mont": 44, "carlo": 44, "candidat": 44, "randomli": [44, 53, 54, 93, 160], "n_ep": 44, "_check_cycles_alt_sym": [44, 51], "_eval_is_alt_sym_na": 44, "only_sym": 44, "only_alt": 44, "_p_elements_group": 44, "_random_pr_init": 44, "_random_prec_n": 44, "modif": [44, 59, 89, 219, 220, 235], "69": [44, 89, 218, 235], "71": [44, 69, 89, 169], "_random_gen": 44, "append": [44, 53, 54, 89, 97, 133, 161, 186, 191, 200, 218, 221, 233, 234, 238, 276], "accumul": [44, 231, 235], "random_pr": 44, "chosen": [44, 45, 54, 55, 66, 67, 89, 93, 96, 110, 134, 168, 171, 186, 187, 191, 193, 195, 200, 207, 210, 216, 220, 231, 245], "gh": [44, 188, 219, 226], "eventu": [44, 61, 80, 186, 187, 207, 233, 238], "_sylow_alt_sym": 44, "sylow": 44, "p_1": [44, 49, 54, 71, 93, 183, 210, 213], "p_2": [44, 54, 71, 93, 183, 210], "p_p": 44, "sylow_subgroup": 44, "is_alt_sym": [44, 51], "_union_find_merg": 44, "parent": [44, 53, 76, 110, 127, 176, 179, 186, 190, 191, 195, 231, 235, 245, 248, 249], "not_rep": 44, "atkinson": 44, "83": [44, 199], "87": [44, 59, 89, 93], "minimal_block": 44, "_union_find_rep": 44, "r60": 44, "r66": 44, "compress": [44, 89, 92, 99], "r62": 44, "r68": [44, 45], "_verifi": 44, "_h": [44, 219], "gens_k": 44, "rels_k": 44, "gens_h": 44, "inject": [44, 53, 187, 191, 196, 272], "homomorph": [44, 192], "rels_h": 44, "strong_present": 44, "abelian_invari": 44, "isomorph": [44, 47, 187, 190, 193, 195], "t_1": [44, 58, 213], "t_2": [44, 58, 213], "t_r": [44, 131, 226], "542": 44, "adopt": [44, 226], "schreier": [44, 49, 51], "sim": [44, 49, 51, 78], "b_1": [44, 51, 61, 75, 78, 187, 210, 213, 216, 276], "b_2": [44, 51, 61, 75, 210, 216], "dot": [44, 45, 49, 51, 54, 66, 68, 75, 84, 89, 103, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 133, 150, 176, 180, 182, 183, 184, 185, 187, 188, 193, 196, 200, 219, 220, 238, 245, 248, 250, 251], "b_k": [44, 51, 54, 58, 61, 202, 203], "strong": [44, 49, 50, 51, 93, 94], "89": [44, 51, 80], "55": [44, 56, 58, 89, 185, 186, 196, 213], "57": [44, 89, 93, 220], "strong_gen": [44, 50, 51], "basic_transvers": [44, 51], "basic_orbit": [44, 51], "basic_stabil": 44, "baseswap": 44, "po": [44, 78, 83, 84, 113, 131, 133, 191, 218], "strong_gens_distr": [44, 51], "swap": [44, 45, 46, 84, 89, 146, 150, 159, 220, 238], "orbit": [44, 51, 166, 167, 169], "b_": [44, 49, 51, 53, 58, 61, 78, 86, 103, 202, 210, 213, 221], "b_i": [44, 49, 51, 78, 187, 210], "la": [44, 133, 171], "vega": 44, "testutil": [44, 50, 51], "_verify_bsg": [44, 50, 51], "schreier_sim": [44, 50, 51], "bsg": [44, 49, 51, 226], "102": [44, 89], "98": [44, 54, 132, 196, 216], "pseudocod": 44, "beta_": 44, "g_": [44, 51, 52, 61, 78, 213], "foral": [44, 52, 55, 171], "zg": 44, "gz": 44, "c_g": 44, "sg": [44, 220, 226], "is_subgroup": 44, "subgroup_search": 44, "hgh": 44, "closur": [44, 50, 76, 146, 195, 208], "composition_seri": 44, "h_0": [44, 49], "h_1": [44, 49, 219], "h_2": [44, 219], "1024": [44, 200, 220], "512": [44, 61], "128": [44, 58, 61, 63, 93, 194, 200], "32": [44, 56, 59, 61, 63, 89, 93, 101, 131, 194, 196, 197, 209, 210, 213, 220, 231], "243": [44, 61, 218], "81": [44, 58, 63, 84, 89, 93, 116, 118, 185, 199], "conjugacy_class": 44, "xax": 44, "s_3": 44, "s3": [44, 52, 103, 203, 213], "feasibl": [44, 103], "resiz": [44, 45, 84, 86], "coset_factor": 44, "factor_index": 44, "_basic_orbit": 44, "u1": [44, 93, 116, 118, 119, 120, 121, 123, 124, 127, 128, 130, 133, 176, 178, 179, 180, 183, 216], "u2": [44, 92, 93, 116, 118, 119, 120, 121, 123, 124, 128, 133, 176, 179, 183, 216], "_strip": [44, 51], "coset_rank": 44, "lexicograph": [44, 45, 48, 49, 53, 193, 196, 238], "coset_unrank": 44, "standardis": [44, 190], "subsect": [44, 251], "compris": [44, 54, 86, 113, 131, 134, 196, 238], "g_0": [44, 213], "g_1": [44, 196, 207, 213, 216], "g_2": [44, 82, 207, 216], "g_i": [44, 207], "g_k": 44, "tetrahedron": [44, 46], "r64": 44, "axiom": [44, 187], "doy": 44, "sc": [44, 80], "thesi": [44, 53, 207, 245], "generator_product": 44, "sn": [44, 45, 52, 75], "is_abelian": 44, "_random_prec": 44, "probabl": [44, 53, 58, 61, 65, 93, 116, 160, 164, 210, 216, 219, 220, 232, 268, 274], "transit": [44, 133, 193, 220], "82": [44, 80, 89, 220], "proport": [44, 54, 207], "226": 44, "227": 44, "is_altern": 44, "quicker": [44, 93], "taxonomi": 44, "is_cycl": 44, "p_": [44, 49, 53, 80, 171, 213, 216, 221], "p_i": [44, 49, 93], "equiv": [44, 54, 58, 93, 195, 210, 213], "pmod": [44, 53, 54, 58, 89, 210], "p_j": [44, 49], "r65": 44, "35": [44, 47, 56, 58, 66, 67, 80, 89, 93, 118, 195, 200, 213, 216, 220], "rose": 44, "is_elementari": 44, "is_nilpot": [44, 89], "solvabl": [44, 99, 213, 216, 219, 277], "lower_central_seri": 44, "is_solv": 44, "is_norm": [44, 164], "gr": 44, "is_perfect": [44, 93], "is_polycycl": 44, "is_primit": [44, 191, 196], "cardin": [44, 45, 48, 187, 208], "badli": 44, "random_stab": 44, "g3": [44, 103], "s5": 44, "is_symmetr": [44, 84], "is_transit": 44, "is_trivi": 44, "cba": [44, 221, 238], "mainli": [44, 61, 89, 94, 171, 180, 193, 210, 213, 216], "max_div": 44, "siev": [44, 93], "nonempti": 44, "gb": 44, "moreov": [44, 54, 78, 170, 181, 187, 188, 193, 201, 249], "congruenc": [44, 53, 93, 210, 213], "p_0": [44, 49, 71, 210, 213], "maxim": [44, 54, 82, 187, 191, 195, 207, 209], "intransit": 44, "normal_closur": 44, "adjoin": [44, 188], "yx": [44, 184], "73": [44, 52, 53, 66, 93, 216], "74": [44, 58, 93], "orb": 44, "78": [44, 67, 89, 93, 97, 171, 216, 220], "orbit_transvers": 44, "orbit_rep": 44, "send": [44, 53, 54, 59, 93, 187, 216, 218], "proof": [44, 47, 78, 80, 219], "79": [44, 45, 97], "pointwise_stabil": 44, "pointwis": [44, 51], "p_k": [44, 93], "p20": 44, "stab": 44, "schreier_sims_increment": [44, 51], "polycyclicgroup": 44, "eliminate_gen": 44, "gen_count": 44, "b1": [44, 49, 61, 93, 96, 97, 108, 116, 133, 176, 191, 200, 210, 213, 216, 250], "b_r": 44, "slp_dict": 44, "seq": [44, 53, 56, 89, 191, 193, 196, 206, 218, 238], "93": [44, 194], "schreier_sims_random": [44, 51], "consec_succ": 44, "consec": 44, "_succ": 44, "97": [44, 54, 93, 193], "sift": [44, 51, 238], "amend": 44, "decompos": [44, 45, 51, 53, 55, 59, 64, 89, 93, 150, 159, 160, 162, 191, 196, 199, 220], "unsuccess": [44, 51], "accordingli": [44, 188, 195], "halt": 44, "signifi": [44, 53, 196, 220], "g_t": 44, "leq": [44, 52, 54, 61, 78, 89, 93, 193, 195, 206, 207, 213, 220], "prop": [44, 195], "init_subgroup": 44, "supergroup": 44, "sought": [44, 93, 151, 161, 212, 218, 219], "prune": 44, "prop_even": 44, "lengthi": 44, "114": [44, 93], "117": [44, 61], "terribl": 44, "crucial": [44, 52, 190], "len1": 44, "len2": 44, "len3": 44, "transitivity_degre": 44, "fold": [44, 53, 59, 200, 207, 212], "a_2": [44, 54, 75, 89, 193, 210, 213, 216, 220, 276], "a_k": [44, 54, 197, 203, 218], "arrang": [45, 103, 111, 131, 133, 209, 213, 226], "r69": 45, "reorder": [45, 52, 59, 166, 196, 216, 220, 238], "pretty_print": [45, 81, 113, 118, 119, 123, 124, 125, 127, 128, 129, 131, 134, 176, 178, 179, 180, 183, 184, 200], "understood": [45, 93, 171, 187, 191], "economi": 45, "caution": [45, 53, 59, 212], "indexerror": [45, 89, 196], "autos": [45, 92], "watch": 45, "print_cycl": 45, "econom": [45, 80, 238], "retain": [45, 53, 59, 61, 80, 95, 196, 201, 209, 212], "biject": [45, 47, 54, 84, 187], "full_cyclic_form": 45, "rmul": 45, "unrank_lex": 45, "r73": 45, "zo42": 45, "from_sequ": 45, "a1": [45, 49, 53, 81, 84, 93, 97, 116, 133, 140, 216, 220, 221, 250, 276], "a2": [45, 49, 53, 82, 84, 93, 97, 116, 133, 140, 189, 220, 221, 250, 276], "a3": [45, 49, 53, 82, 84, 133, 250, 276], "perfectli": [45, 52, 53, 54, 193, 196, 199], "skiena": 45, "ma": [45, 52, 121], "1990": [45, 78, 210, 245], "r70": 45, "wendi": 45, "myrvold": 45, "ruskei": 45, "2001": [45, 93, 194], "lett": 45, "septemb": [45, 235], "281": 45, "284": [45, 93], "1016": 45, "s0020": 45, "0190": 45, "01": [45, 53, 57, 116, 160, 194, 212, 238], "00141": 45, "r71": 45, "kreher": 45, "stinson": 45, "1999": [45, 89, 194, 199, 216], "r72": 45, "graham": [45, 58, 59, 93], "patashnik": 45, "foundat": [45, 194, 195], "1994": [45, 193, 194, 196], "product_and_invers": 45, "r74": 45, "lehmer_cod": 45, "appliedpermut": 45, "magic": [45, 212, 231, 268], "attatch": 45, "_array_form": 45, "ascent": 45, "ie": [45, 213], "descent": 45, "fg": [45, 55, 216, 219], "gf": [45, 54, 187, 189, 190, 192, 193, 195], "r75": 45, "commutes_with": [45, 226], "cycle_structur": 45, "from_inversion_vector": 45, "get_adjacency_dist": 45, "n_adj": 45, "reev": 45, "colin": 45, "landscap": 45, "annal": 45, "86": [45, 89, 132, 199, 209], "473": 45, "josephu": 45, "get_precedence_matrix": 45, "get_precedence_dist": 45, "get_adjacency_matrix": 45, "get_positional_dist": 45, "subscript": [45, 191, 200, 210, 213, 238], "inversion_vector": 45, "lesser": [45, 99, 196], "lie": [45, 55, 67, 68, 69, 196, 214, 220, 255, 262], "lehmer": 45, "ith": [45, 82, 93, 191, 197, 219, 220], "variat": [45, 53, 193, 207, 216, 237], "r76": 45, "eng": 45, "chula": 45, "piak": 45, "algo2008": 45, "htm": [45, 61, 80, 213], "is_singleton": 45, "is_odd": 45, "shuffl": [45, 89, 276], "012345": 45, "345": 45, "253": 45, "2531": 45, "25314": 45, "253140": 45, "r77": 45, "flavius_josephu": 45, "r78": 45, "josephus_problem": 45, "r79": 45, "wou": 45, "burtonl": 45, "trim": [45, 130], "unmov": 45, "mul_inv": 45, "next_nonlex": 45, "nonlex": 45, "rank_nonlex": 45, "unrank_nonlex": 45, "next_trotterjohnson": [45, 238], "trotter": 45, "johnson": [45, 89], "generate_bel": [45, 238], "rank_trotterjohnson": 45, "unrank_trotterjohnson": 45, "_af_par": 45, "pseudo": [45, 89, 93, 191, 193, 196], "inv_perm": 45, "enforc": [45, 118], "rmul_with_af": 45, "ascend": [45, 238], "r80": 45, "transposition_": 45, "28mathemat": [45, 53, 208], "flexibl": [45, 53, 116, 133, 183, 186, 190, 219, 266], "investig": [45, 78, 185, 187, 210, 238, 268], "cn": [45, 200, 275], "2n": [45, 52, 58, 61, 80, 84, 99, 104, 129, 185, 203, 210], "dn": [45, 220], "klein": 45, "s4": [45, 103], "polyhedr": 46, "psg": 46, "platon": 46, "solid": [46, 67, 186, 254], "tetrahedr": 46, "octahedr": 46, "icosahedr": 46, "r81": 46, "polyhedralgroup": 46, "polyhedra": [46, 79], "shadow": 46, "h5": 46, "heinz": 47, "caylei": [47, 84], "r82": 47, "labeledtre": 47, "tree_repr": 47, "prufer_rank": 47, "prev": 47, "36": [47, 54, 58, 69, 80, 84, 89, 93, 97, 196, 200, 213, 216, 220, 254], "prufer_repr": 47, "record": [47, 53, 195, 231], "to_pruf": 47, "778": 47, "779": 47, "777": [47, 56], "1296": 47, "to_tre": 47, "r83": 47, "hamberg": 47, "erlend": 47, "2010": [47, 217, 238], "06": [47, 53, 118, 185, 220], "compact": [47, 53, 100, 133, 164, 180, 196, 200, 218, 235], "next_binari": 48, "prev_binari": 48, "bitlist_from_subset": 48, "subset_from_bitlist": 48, "superset_s": 48, "iterate_binari": 48, "iterate_graycod": 48, "prev_grai": 48, "next_grai": 48, "next_lexicograph": 48, "prev_lexicograph": 48, "rank_binari": 48, "unrank_binari": 48, "rank_grai": 48, "unrank_grai": 48, "rank_lexicograph": 48, "43": [48, 89, 93, 96, 97, 220, 276], "super_set": 48, "subset_indic": 48, "ksubset": 48, "itertool": [48, 238], "tensor_can": [49, 226], "msym": 49, "contravari": [49, 89, 226, 227], "covari": [49, 55, 89, 220, 226, 227], "d0": 49, "base_i": 49, "gens_i": 49, "n_i": [49, 193, 218], "sym_i": 49, "failur": [49, 57, 70, 78, 93, 220, 231, 276], "canonicalize_na": 49, "exchang": [49, 54, 89, 185, 189, 238], "anticommut": [49, 153, 155, 165, 166, 226], "canonical_fre": 49, "slot": [49, 150, 221, 225, 226, 271], "residu": [49, 54, 93, 193, 204, 210], "tensor_gen": 49, "list_free_indic": 49, "double_coset_can_rep": 49, "reintroduc": 49, "a_": [49, 53, 54, 61, 78, 82, 84, 86, 103, 104, 131, 202, 210, 213, 216, 218, 220, 221], "antisymmetr": [49, 55, 84, 166, 226], "d2": [49, 176, 187, 207, 220, 238, 245], "ord": [49, 54, 89], "t_c": 49, "get_symmetric_group_sg": [49, 226], "bsgs_direct_product": 49, "base2a": 49, "gens2a": 49, "t0": 49, "t1": [49, 69, 70, 93, 108, 113, 213, 220], "a_m": [49, 216], "a_n": [49, 54, 61, 78, 82, 171, 188, 193, 203, 213, 216, 276], "_a": [49, 61, 166, 196], "_b": [49, 61, 166], "base_f": 49, "gens_f": 49, "base1": 49, "gens1": 49, "base_a": 49, "gens_a": 49, "sgen": 49, "s_transvers": 49, "butler": [49, 226], "portug": [49, 226], "grow": [49, 53, 78, 89, 93, 190, 193], "computation": [49, 59, 111, 112], "absenc": [49, 83], "observ": [49, 75, 78, 155, 184, 187, 210, 213, 216, 220, 253, 276], "opposit": [49, 69, 83, 84, 108, 110, 188, 191, 208, 212, 219, 227, 238, 245, 246, 276], "ind": [49, 202, 226], "d3": [49, 207], "a0": [49, 216, 276], "a4": [49, 53, 82, 133, 276], "a5": [49, 53], "leftrightarrow": 49, "_af_rmul": 49, "t_": [49, 58], "b0": [49, 61, 191, 210, 216], "d_": [49, 210], "p0": [49, 63, 195, 216], "dbase": 49, "recomput": [49, 196], "d_i": [49, 78, 171], "s_0": 49, "d_0": [49, 54], "b_0": [49, 54, 58, 210, 213, 216], "b_j": [49, 51, 61, 78, 210], "sx": 49, "trace": [49, 84, 86, 104, 133, 193, 200, 220, 221, 222, 224, 238, 272], "h_n": [49, 61, 80, 219], "tab1": 49, "get_transvers": 49, "antisym": 49, "base2": 49, "gens2": 49, "_cmp_perm_list": 50, "ls1": 50, "ls2": 50, "_naive_list_centr": 50, "_verify_centr": 50, "_verify_normal_closur": 50, "_base_ord": 51, "base_ord": 51, "backtrack": 51, "108": [51, 93, 97], "132": [51, 58, 176], "r84": 51, "_distribute_gens_by_bas": 51, "_strong_gens_from_distr": 51, "_orbits_transversals_from_bsg": 51, "_handle_precomputed_bsg": 51, "transversals_onli": 51, "slp": 51, "_remove_gen": 51, "new_gen": 51, "r85": 51, "r86": 51, "recurr": [52, 58, 75, 89, 195, 206, 212, 214, 216, 220, 240], "annihil": [52, 71, 72, 76, 142, 166, 218], "is_hypergeometr": 52, "binomi": [52, 57, 60, 61, 93, 196, 200, 205, 212, 216, 220, 238, 276], "rf": [52, 58, 196], "ff": [52, 54, 58, 185, 188, 189, 190, 195, 196], "speci": [52, 53], "rise": [52, 58, 61, 185, 212, 216, 220, 248], "hypersimp": [52, 211], "quotient": [52, 53, 56, 59, 93, 187, 188, 190, 192, 193, 196, 210, 212, 216], "dummy_vari": 52, "karr": 52, "quad": [52, 53, 55, 57, 61, 80, 84], "exclus": [52, 53, 59, 83, 89, 193, 268], "emphas": 52, "typeset": [52, 200], "doit": [52, 53, 55, 58, 59, 61, 80, 86, 103, 143, 145, 147, 158, 160, 163, 164, 166, 176, 185, 196, 202, 207, 212, 216, 217, 220, 222, 245, 247, 248, 250, 251, 266, 271], "seemingli": [52, 219], "nonsens": [52, 61], "r87": 52, "michael": [52, 194, 199], "april": 52, "1981": [52, 194], "305": 52, "350": [52, 113], "dl": [52, 184, 194], "cfm": [52, 194], "doid": [52, 194], "322248": 52, "322255": 52, "r88": 52, "sigma_not": 52, "r89": 52, "empty_sum": 52, "euler_maclaurin": [52, 57], "eval_integr": 52, "maclaurin": [52, 57], "endpoint": [52, 53, 57, 181, 208, 251], "28333333333333": 52, "sstr": [52, 180, 200], "full_prec": [52, 200], "26629073187415": 52, "0175000000000000": 52, "soon": [52, 53, 116, 171, 197], "eval_zeta_funct": 52, "is_absolutely_converg": 52, "sequence_term": 52, "is_converg": 52, "r90": 52, "absolute_converg": 52, "analogi": [52, 193], "prod_": [52, 58, 61, 78, 93, 171, 210], "respons": [52, 53, 102, 103, 116, 186, 233], "diverg": [52, 61, 135, 245, 252], "dirichlet": [52, 61, 220], "r91": 52, "convergence_test": 52, "reverse_ord": 52, "selector": [52, 84, 212, 238], "handi": [52, 53, 89, 200, 271], "s0": [52, 76, 78, 138], "expr_with_intlimit": [52, 80], "exprwithintlimit": [52, 80], "reorder_limit": 52, "r92": 52, "walli": 52, "w2": [52, 140], "w2e": 52, "risingfactori": [52, 60, 61, 200, 202], "combsimp": [52, 53, 58], "pe": 52, "gammasimp": [52, 53, 212], "rewrit": [52, 53, 55, 58, 59, 61, 78, 80, 83, 96, 103, 163, 196, 207, 208, 209, 212, 216, 217, 218, 219, 220, 256, 257, 270, 272], "r93": 52, "r94": 52, "capital_pi_not": 52, "r95": 52, "empty_product": 52, "r96": 52, "infinite_product": 52, "r97": 52, "expr_with_limit": [52, 80], "exprwithlimit": [52, 80], "change_index": 52, "trafo": 52, "newvar": 52, "mapsto": [52, 78, 84, 195], "p3": [52, 63, 65, 66, 68, 69, 103, 186, 190, 209, 220], "has_empty_sequ": [52, 80], "has_reversed_limit": [52, 80], "has_finite_limit": [52, 80], "____": [52, 57, 80, 138, 188, 201, 220, 238, 277], "___": [52, 57, 80, 81, 89, 188, 212, 220, 225, 238, 275], "rubric": [52, 53], "_____": [52, 220], "gosper": 52, "gosper_norm": 52, "monic": [52, 187, 188, 191, 193, 195, 196, 199], "gcd": [52, 53, 54, 89, 93, 162, 190, 191, 192, 194, 195, 196, 200, 212, 213], "gosper_term": 52, "s_n": [52, 196], "f_k": [52, 128, 193], "g_n": [52, 58, 196], "f_n": [52, 58, 61, 187, 193, 196, 216], "gosper_sum": 52, "r98": 52, "marko": 52, "petkovsek": [52, 218], "herbert": 52, "doron": 52, "zeilberg": [52, 218], "ak": [52, 202], "peter": [52, 58, 93, 132, 182, 238], "ltd": 52, "welleslei": 52, "usa": [52, 194], "1997": [52, 78, 93, 194, 210], "convert_xor": [53, 95], "09": [53, 101], "2e": 53, "xor": [53, 56, 83, 95, 200, 268], "sympifyerror": 53, "coerc": [53, 130, 193], "cooper": 53, "sage": [53, 93, 185, 270], "shouldn": [53, 197], "unsanit": [53, 239, 265], "bitcount": 53, "improperli": 53, "unbound": [53, 225], "23903": 53, "fallback": [53, 81, 166, 180, 190, 200, 218], "ast": [53, 200, 257], "00000000000000": [53, 57, 167, 200, 220], "mylist1": 53, "mylist": 53, "mylist2": 53, "xxx": [53, 80, 89, 238, 240], "autosimplif": [53, 209, 212], "kern": 53, "r101": 53, "7649": 53, "r100": 53, "r104": 53, "r102": 53, "r103": 53, "r105": 53, "r106": 53, "r107": 53, "r99": 53, "recreat": 53, "isfinit": 53, "__cacheit": 53, "maxsiz": 53, "noqa": [53, 81, 191, 234], "f811": 53, "sympy_use_cach": 53, "cot": [53, 60, 61, 95, 197, 200, 209], "_arg": [53, 59], "as_mut": [53, 85, 86], "as_content_primit": [53, 89, 188, 196], "stub": 53, "as_dummi": [53, 80], "_0": [53, 78, 84, 89, 196, 239], "_r": [53, 166, 210, 219], "bound_symbol": [53, 80], "besid": [53, 193, 218], "typeinfo": 53, "truli": [53, 61, 171], "piec": [53, 57, 210, 233], "scan": 53, "appliedundef": 53, "canonical_vari": 53, "class_kei": 53, "sorted_class": 53, "dummy_eq": 53, "eg": [53, 116, 173, 219], "fromit": 53, "has_fre": 53, "has_xfre": 53, "exp_polar": [53, 60, 61, 210], "dif": 53, "_prec": 53, "q_": [53, 180, 213, 216], "r_": [53, 105, 167, 197], "repl_dict": 53, "rcall": [53, 55], "simul": [53, 116, 133, 199], "abus": [53, 226], "succe": [53, 78, 83, 93, 156, 195, 207, 218], "newtyp": 53, "intuit": [53, 171, 204, 216], "is_mul": 53, "is_add": [53, 219], "mysin": [53, 239, 265], "_eval_rewrite_as_": 53, "_eval_rewrite_as_co": 53, "tie": [53, 238], "delai": [53, 101, 130, 209, 231, 266], "unsort": [53, 107, 175], "333333333333333333333": 53, "333333333333333314830": 53, "wildcard": [53, 212], "registri": 53, "metaprogram": 53, "address": [53, 200, 219], "mostli": [53, 59, 80, 89, 133, 161, 183, 187, 199, 200, 210, 218, 275], "__truediv__": [53, 191], "class_nam": 53, "mysingleton": 53, "_eval_is_g": 53, "_eval_is_eq": 53, "args_cnc": 53, "cset": 53, "split_1": 53, "suppress": [53, 95, 229, 236], "as_coeff_add": 53, "dep": [53, 216], "as_coeff_expon": 53, "as_coeffici": 53, "zz": [53, 58, 75, 76, 80, 86, 89, 90, 93, 113, 184, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 215], "coeff_monomi": [53, 196], "polytool": [53, 196, 219], "monomi": [53, 80, 83, 93, 188, 190, 191, 192, 193, 199, 200, 276], "as_coefficients_dict": 53, "inquiri": 53, "121": [53, 58, 93, 103, 176, 218], "84": [53, 57, 93], "separatevar": [53, 211, 216], "n3": [53, 116], "as_leading_term": [53, 207], "logx": [53, 207], "cdir": 53, "_eval_as_leading_term": 53, "as_numer_denom": [53, 218], "as_ordered_factor": 53, "as_ordered_term": 53, "as_powers_dict": 53, "lost": 53, "as_real_imag": [53, 59, 84, 201], "as_term": 53, "aseri": 53, "hir": 53, "asymptot": [53, 78, 103, 266], "hierarch": 53, "normalis": [53, 202], "induc": [53, 84, 195, 209, 238], "gruntz": [53, 202], "majorli": 53, "mrv": [53, 207], "overal": [53, 173, 186, 218], "rapidli": [53, 57, 78, 207], "till": [53, 96, 97, 116, 216], "r108": 53, "dominik": [53, 202], "proc": [53, 218], "1993": [53, 194], "symp": 53, "239": 53, "244": [53, 193], "r109": 53, "p90": 53, "r110": 53, "asymptotic_expans": 53, "_first": [53, 59], "distribute_order_term": [53, 212], "compute_leading_term": 53, "could_extract_minus_sign": 53, "signsimp": [53, 124, 212], "failing_express": 53, "modulu": [53, 54, 56, 61, 63, 69, 84, 93, 96, 97, 187, 191, 193, 195, 196, 199, 219], "power_bas": [53, 84], "power_exp": [53, 84], "multinomi": [53, 84, 93, 220], "expr_free_symbol": 53, "extract_addit": 53, "extract_multipl": 53, "extract_branch_factor": 53, "allow_half": 53, "fourier_seri": [53, 203], "geto": 53, "getn": 53, "is_algebraic_expr": 53, "is_rational_funct": 53, "r111": 53, "algebraic_express": 53, "is_const": 53, "constanc": 53, "agre": [53, 54, 61, 68, 78, 210], "test_expr": 53, "prove": [53, 78, 80, 89, 187, 207, 216, 250], "failing_numb": 53, "is_meromorph": 53, "meromorph": [53, 61], "multivalu": [53, 59], "cut": [53, 58, 59, 61, 69, 78, 187, 210, 235, 241, 276], "hit": [53, 271], "is_polynomi": 53, "rational_funct": 53, "leadterm": 53, "xlim": [53, 186], "lseri": 53, "exaxmpl": 53, "nseri": 53, "_eval_nseri": 53, "innermost": 53, "disadvantag": 53, "met": [53, 99, 213, 219, 234, 276], "nsimplifi": [53, 57, 211], "ratsimp": [53, 211], "removeo": [53, 133, 200, 266], "chop": [53, 57, 61, 84, 89, 218, 265], "123": [53, 58, 63, 83, 163, 176, 238, 245, 246], "lazi": [53, 86, 196], "smooth": [53, 57, 93, 202], "taylor_term": [53, 59], "previous_term": [53, 59], "dummy_index": 53, "temporari": [53, 232], "_dummy_10": 53, "contigu": [53, 210, 233], "x4": [53, 58, 190], "x5": [53, 58, 190], "x6": [53, 190], "x7": [53, 190], "x8": [53, 190], "x9": [53, 190], "x50": 53, "x51": 53, "y0": [53, 72, 74, 76, 216], "y1": [53, 133], "y2": [53, 133, 190], "y3": [53, 190], "y4": 53, "xa": [53, 188, 193], "xb": [53, 241], "xc": [53, 165, 241], "disambigu": 53, "x01": 53, "x02": 53, "x11": 53, "x12": 53, "escap": [53, 95, 186, 200, 241], "newli": [53, 78, 210], "undefinedfunct": [53, 178, 200, 232, 239], "f821": [53, 234], "cofactor": [53, 89, 191, 193, 196], "lcm": [53, 93, 191, 192, 193, 196, 200], "50000000000000": [53, 57], "100000000000000000000": 53, "1e20": 53, "00000000000000e": 53, "23456789123456789": 53, "23456789123457": 53, "00100": 53, "sent": [53, 80, 212], "789": [53, 93], "123_456": 53, "123456789": 53, "12e": 53, "012": 53, "60e2": 53, "6000": 53, "600e": 53, "125": [53, 57, 80, 93, 191, 206, 213], "099609": 53, "12500": 53, "12500000000000000000": 53, "closest": [53, 66], "5404319552844595": 53, "54": [53, 89, 97, 193, 199, 238], "29999999999999998890": 53, "30000000000000000000": 53, "_mpf_": [53, 190], "4915": 53, "70": [53, 54, 70, 80, 89, 93, 199, 200, 213, 220, 241], "307": 53, "mpf": [53, 190, 191], "is_float": 53, "unprejud": 53, "3602879701896397": 53, "18014398509481984": [53, 212], "limit_denomin": 53, "320": 53, "75": [53, 56, 220, 245], "use_tri": [53, 93], "use_rho": [53, 93], "use_pm1": [53, 93], "factorint": [53, 93, 195, 196, 235], "trial": [53, 93, 193, 205, 209, 216, 220], "max_denomin": 53, "1000000": [53, 93], "141592653589793": 53, "311": [53, 93], "discard": [53, 195, 200, 219], "99999999999999999999": 53, "hookrightarrow": 53, "minpoli": [53, 190, 191, 195], "dmp": [53, 187, 191, 192, 196], "complexrootof": [53, 89, 191, 196, 216], "anp": [53, 190, 191, 195, 196], "to_list": [53, 189, 191], "crootof": [53, 196, 216, 218], "minpoly_of_el": 53, "414213562": 53, "scratch": [53, 171], "6x": [53, 193], "to_number_field": [53, 195], "to_root": 53, "primitive_el": [53, 190, 191, 195], "knew": [53, 276], "golden": [53, 57, 93], "5th": [53, 133, 193, 195], "cyclotom": [53, 191, 192, 193, 194, 195, 196], "cyclotomic_poli": [53, 195, 196], "61803398874989": 53, "2i": 53, "a6": 53, "a6_wrong": 53, "309016994374947": 53, "951056516295154": 53, "field_el": 53, "is_alias": 53, "is_primitive_el": 53, "native_coeff": 53, "to_algebraic_integ": 53, "to_primitive_el": 53, "Its": [53, 59, 69, 133, 164, 193, 200, 208], "a_prim": 53, "number_cl": 53, "greatest": [53, 58, 63, 93, 188, 190, 191, 193, 194, 196, 199], "euclid": [53, 193, 194], "r112": 53, "euclidean_algorithm": 53, "r113": 53, "r114": 53, "1_": 53, "28number": 53, "r115": 53, "88": [53, 89, 93], "921_": 53, "r116": 53, "one_half": 53, "holder": 53, "ieee": [53, 54], "754": 53, "r117": 53, "affin": [53, 54, 68, 187], "compactif": 53, "r118": 53, "tild": [53, 59, 221], "phase": [53, 80, 101, 135, 138, 140, 150, 151, 219], "718281828": 53, "napier": 53, "r119": 53, "e_": [53, 58, 89], "28mathematical_const": 53, "r120": 53, "imaginary_unit": [53, 200], "141592654": 53, "circumfer": [53, 63], "diamet": [53, 63], "area": [53, 63, 65, 69, 70, 96, 97, 252], "is_irr": 53, "r121": 53, "mascheroni": [53, 61], "5772157": 53, "recur": 53, "harmon": [53, 60, 93, 105, 145, 185, 200, 261], "lim": [53, 207, 266], "limits_": [53, 185, 202, 270], "ln": [53, 59, 80, 200, 202, 216, 220, 276], "r122": 53, "93mascheroni_const": 53, "91596559": 53, "r123": 53, "27s_constant": 53, "r124": 53, "golden_ratio": 53, "tribonacci": [53, 60], "fibonacci": [53, 57, 60, 93], "predetermin": [53, 231], "8392867552141611326": 53, "r125": 53, "generalizations_of_fibonacci_numb": [53, 58], "tribonacci_numb": [53, 58], "modulo": [53, 54, 90, 93, 162, 187, 189, 190, 191, 193, 195, 196, 197, 199, 200, 203, 212], "r126": 53, "modular_multiplicative_invers": 53, "r127": 53, "extended_euclidean_algorithm": 53, "oscil": [53, 261], "conform": [53, 219, 224, 225], "r128": 53, "r129": 53, "zero_to_the_power_of_zero": 53, "r130": 53, "indeterminate_form": 53, "as_base_exp": [53, 59, 60, 238], "floor": [53, 60, 93, 190, 191, 200, 220], "geq": [53, 54, 61, 89, 196, 213, 220, 276], "factor_": [53, 54, 93, 196, 213], "perfect_pow": [53, 93], "infix": 53, "matmul": [53, 86, 189], "as_coef_mul": 53, "undesir": [53, 107, 116, 130, 188, 191, 210], "4596": 53, "compound": [53, 121, 164, 204, 258], "5728": 53, "suspect": [53, 93], "5706": 53, "moot": 53, "off": [53, 63, 78, 84, 92, 94, 118, 127, 150, 187, 196, 200, 216, 231, 242, 245, 270], "nb": 53, "sensit": [53, 103, 133, 186, 193, 212, 231], "assocop": 53, "quadrat": [53, 54, 80, 93, 187, 191, 195, 196, 213, 218, 220], "matadd": [53, 86, 200], "as_coef_add": 53, "extract_leading_ord": 53, "commutative_part": 53, "noncommutative_part": 53, "order_symbol": 53, "subprocess": [53, 200, 231, 232], "dividend": [53, 191], "rop": 53, "validrelationoper": 53, "rel_op": 53, "fourth": [53, 54, 188, 216, 266], "my_equ": 53, "my_inequ": 53, "reversedsign": 53, "_eval_eq": 53, "respond": 53, "boolalg": [53, 83], "client": [53, 235], "counterpart": [53, 54, 216, 266], "litter": 53, "oddbal": 53, "minor": [53, 63, 89, 200, 231], "caveat": [53, 196, 256, 263, 268], "succinctli": 53, "coupl": [53, 89, 130, 145, 160, 163], "annoy": 53, "succinct": 53, "occasion": 53, "r131": 53, "operar": 53, "circuit": [53, 150, 153], "greaterthanobject": 53, "__bool__": 53, "335": 53, "march": 53, "2012": 53, "r132": 53, "r133": 53, "r134": 53, "mdarg": 53, "fgh": 53, "vsin": 53, "vdiff": 53, "narg": [53, 193], "naturals0": [53, 200, 219, 220], "evalul": 53, "fairli": [53, 61, 78, 118, 126, 175, 187], "conserv": [53, 111, 129, 177, 247, 252, 253], "136": [53, 89], "indirect": [53, 55, 61, 93, 166, 216], "implic": [53, 83, 193], "fx": [53, 55, 186, 216, 217], "fxx": 53, "insconsist": 53, "presenc": [53, 59, 83, 99, 115, 120, 130, 216, 224], "nonvanish": 53, "_diff_wrt": 53, "_sort_variable_count": 53, "vc": 53, "vsort": 53, "collaps": [53, 160, 212], "vsort0": 53, "vi": 53, "dfx": 53, "equidist": 53, "sq2": 53, "xl": 53, "d2fdxdy": 53, "doit_numer": 53, "z0": [53, 207], "unifi": [53, 134, 189, 191, 192, 193, 195, 196, 208], "zeroth": [53, 195], "idiff": [53, 70], "r135": 53, "legaci": [53, 80, 89, 220], "v5_2": 53, "infunct": 53, "algebraiccomput": 53, "f_real": [53, 60], "f_real_inherit": [53, 60], "is_singular": [53, 60, 76], "holomorph": [53, 60, 78], "superfici": 53, "unexpect": [53, 231], "ss": [53, 191], "denom": [53, 190, 191, 195, 212], "_eval_expand_bas": 53, "_eval_expand_complex": 53, "shut": [53, 196], "unwant": [53, 218, 238], "alphabet": [53, 54, 103, 171, 188, 213, 233], "expand_hint": 53, "_eval_expand_hint": 53, "liabl": [53, 83], "metahint": 53, "myclass": 53, "_eval_expand_doubl": 53, "hyperexpand": [53, 61, 75, 78, 210], "div": [53, 188, 190, 191, 196, 200, 212, 271], "horner": [53, 133, 193, 196], "untouch": 53, "dkei": 53, "mixin": [53, 238], "maxn": [53, 57, 84], "subresult": [53, 191, 194, 196], "000100000000000000": 53, "maxprec": 53, "quadratur": [53, 57, 80, 216], "tanh": [53, 57, 60, 80, 197, 200, 212, 276], "oscillatori": [53, 57, 205], "osc": [53, 57], "advers": 53, "1e16": 53, "291": 53, "builtin": [53, 191, 200, 208, 241, 275], "speedup": [53, 89, 94, 193, 197, 239], "framework": [53, 116, 126, 225, 231, 233, 239], "slice": [53, 83, 84, 89, 95, 191, 196, 206, 208, 212, 221, 238], "parametris": [53, 208], "element_kind": [53, 84, 208], "tuple_count": 53, "setkind": [53, 84, 258], "isprimit": 53, "_gcd_term": 53, "terms_gcd": [53, 191, 196], "entiti": [53, 63, 66, 67, 69, 70, 78, 116, 131, 181, 219, 253, 262, 272], "arguement": 53, "broad": [53, 271], "lex": [53, 81, 180, 188, 190, 191, 193, 196, 197, 199, 200, 212], "grlex": [53, 81, 180, 191, 196, 199, 200], "grevlex": [53, 81, 180, 188, 193, 196, 199, 200], "rev": 53, "unaffect": [53, 219], "_node": 53, "fastest": [53, 58, 80, 93, 94, 197], "undecor": 53, "ineffici": [53, 89, 190], "breaker": 53, "hash": [53, 191, 193, 201, 212, 216, 231, 233], "collis": [53, 92], "wast": [53, 90, 189], "rng": 53, "getstat": 53, "intention": 53, "tn": 53, "td": [53, 200, 275], "randrang": 53, "999": [53, 57], "238": [53, 93], "randint": [53, 89, 193], "ri": [53, 200], "rv": [53, 209, 220, 238], "nonbas": 53, "postord": 53, "descend": [53, 187, 195, 233], "subtre": [53, 200, 235], "educ": [54, 89], "cryptograph": 54, "encrypt": 54, "hide": [54, 200], "cipher": 54, "vigener": 54, "hill": [54, 61, 111, 132, 176, 182, 245], "bifid": 54, "rsa": 54, "kid": 54, "feedback": [54, 100, 103, 269], "elgam": 54, "plaintext": [54, 200], "ciphertext": 54, "monoalphabet": 54, "polyalphabet": 54, "crypto": 54, "az": [54, 213], "uppercas": [54, 210], "hello": [54, 238], "world": [54, 99, 120, 130, 238], "helloworld": 54, "check_and_join": 54, "padded_kei": 54, "puppi": 54, "opqrstuvwxi": 54, "puyoqrstvwx": 54, "artist": 54, "aphras": 54, "ara": 54, "hp": 54, "cycle_list": 54, "encipher_shift": 54, "msg": [54, 80], "decipher_shift": 54, "gonavybeatarmi": 54, "ct": [54, 82, 193], "hpobwzcfbubsnz": 54, "deciph": 54, "l1": [54, 63, 65, 66, 110, 113, 119, 131, 191, 193, 196, 213, 220], "l2": [54, 65, 66, 110, 113, 119, 152, 168, 191, 193, 220], "caesar": 54, "juliu": 54, "suetoniu": 54, "protect": [54, 200], "militari": 54, "nephew": 54, "augustu": 54, "reportedli": 54, "r136": 54, "caesar_ciph": 54, "r137": 54, "caesarsmethod": 54, "encipher_rot13": 54, "rot13": 54, "caeser": 54, "midwai": 54, "decipher_rot13": 54, "r138": 54, "decrypt": 54, "tbanilorngnezl": 54, "encipher_affin": 54, "_invers": 54, "cx": [54, 97], "recov": [54, 80, 171, 193, 195, 196, 213, 216], "decipher_affin": 54, "r139": 54, "affine_ciph": 54, "reciph": 54, "navi": 54, "beat": 54, "armi": 54, "trobmvenbgbalv": 54, "encipher_atbash": 54, "enciph": 54, "atbash": 54, "hebrew": 54, "decipher_atbash": 54, "tlmzebyvzgzinb": 54, "r140": 54, "encipher_substitut": 54, "oeyag": 54, "034": 54, "60n": 54, "v4b3": 54, "rm4": 54, "immateri": 54, "anyv": 54, "wherebi": 54, "r141": 54, "substitution_ciph": 54, "encipher_vigener": 54, "me": [54, 116, 133, 176, 200, 222], "mondai": 54, "qrgkkthrzqebpr": 54, "krypto": 54, "sculptur": 54, "cia": 54, "headquart": 54, "r143": 54, "decipher_vigener": 54, "alp": 54, "palimpsest": 54, "emufphzlrfaxyusdjkzldkrnshgnfivj": 54, "betweensubtleshadingandtheabsenc": 54, "blais": 54, "sixteenth": 54, "centuri": [54, 187], "diplomat": 54, "accid": [54, 239], "invent": [54, 195, 218, 270], "giovan": 54, "batista": 54, "belaso": 54, "1553": 54, "civil": [54, 96], "war": 54, "confederaci": 54, "brass": 54, "nsa": 54, "museum": 54, "fort": 54, "mead": 54, "r142": 54, "sender": 54, "assembl": [54, 78, 207], "concaten": [54, 84], "frequenc": [54, 80, 101, 103, 140, 142, 150, 167], "kasiski": 54, "discov": [54, 78, 107, 224, 272], "babbag": 54, "unbreak": 54, "ye": [54, 83, 216], "gonavybeatarmyyesyoucan": 54, "gold": 54, "auto_kei": 54, "goldbuggonavybeatarmyy": 54, "mcydwshkogamkzcelyfgayr": 54, "pt": [54, 62, 63, 64, 66, 67, 68, 69, 206], "vigenere_ciph": 54, "archiv": [54, 132, 213], "20071116100808": 54, "r144": 54, "filebox": 54, "vt": 54, "batman": 54, "goo": 54, "gl": 54, "ijr22d": 54, "decod": 54, "qrgk": 54, "kt": [54, 121], "hrzqe": 54, "bpr": 54, "meetmeonmondai": 54, "encipher_hil": 54, "z_": [54, 212], "r145": 54, "lester": 54, "1920": 54, "r146": 54, "polygraph": 54, "bare": [54, 111], "ceil": [54, 60, 93, 110, 200], "l_1": [54, 58, 104, 185, 210, 226], "l_t": 54, "c_t": 54, "l_i": [54, 185, 210], "decipher_hil": 54, "hill_ciph": 54, "june": [54, 89], "juli": [54, 213], "1929": 54, "306": 54, "312": [54, 176, 218, 245, 246], "ueqdueodoctcwq": 54, "st": [54, 80, 166], "hjeb": 54, "stqq": 54, "ispk": 54, "stzz": 54, "hd": 54, "ormv": 54, "uiki": 54, "encipher_bifid": 54, "polybiu": 54, "printabl": 54, "bifid5": 54, "decipher_bifid": 54, "encipher_bifid5": 54, "encipher_bifid6": 54, "r147": 54, "bifid_ciph": 54, "ieilhhfstsfqy": 54, "ieilh": 54, "hfst": 54, "fqyej": 54, "bmtwmg": 54, "bio": 54, "gold_bug": 54, "hg2sfuei7t": 54, "pug": 54, "heldo": 54, "wor6d": 54, "bifid5_squar": 54, "5x5": 54, "cap": [54, 57, 166, 208, 219], "tradition": [54, 61], "decipher_bifid5": 54, "round_trip": 54, "josi": 54, "osi": 54, "iosi": 54, "qiq": 54, "1901": 54, "felix": 54, "delastel": 54, "onto": [54, 66, 67, 68, 78, 82, 89, 92, 94, 195], "helen": 54, "cryptanalysi": 54, "german": 54, "fridai": 54, "ieilehfstsfxe": 54, "okai": 54, "decipher_bifid6": 54, "8am": 54, "kfkljjhf5mmmktfrgpl": 54, "meetmeonmondayat8am": 54, "bifid6_squar": 54, "6x6": 54, "rsa_public_kei": 54, "totient": [54, 93], "carmichael": [54, 93], "p_n": [54, 58, 61, 80], "multiprim": 54, "land": 54, "rad": [54, 101, 116, 195], "reduced_toti": [54, 93], "uniquenss": 54, "rsa_private_kei": 54, "e_0": 54, "canonicalz": 54, "61": [54, 58, 69, 89, 93, 202], "3233": 54, "797": 54, "1577": 54, "multipow": 54, "cryptosystem": 54, "coprim": [54, 80, 93, 162, 193, 213], "30030": 54, "becam": [54, 126], "hardest": 54, "claim": [54, 184, 210, 219], "encipher_rsa": 54, "decipher_rsa": 54, "r148": 54, "rsa_": 54, "28cryptosystem": 54, "r149": 54, "cacr": 54, "uwaterloo": 54, "techreport": 54, "2006": [54, 209], "cacr2006": 54, "r150": 54, "springer": [54, 80, 93, 193, 194, 216], "1007": 54, "2fbfb0055738": 54, "r151": 54, "itii": 54, "manuscript": 54, "1381": 54, "2753": 54, "413": 54, "1193": 54, "823": 54, "r152": 54, "r153": 54, "r154": 54, "r155": 54, "bmod": [54, 200], "vice": [54, 80, 93, 96, 156, 176, 187, 191, 248, 249, 268], "versa": [54, 80, 93, 96, 156, 176, 187, 191, 248, 249, 268], "asymmetr": [54, 69], "puk": 54, "prk": 54, "chines": [54, 93, 193], "k_1": [54, 93, 193, 210], "k_2": 54, "k_n": [54, 193], "p_3": [54, 183], "k_3": 54, "moduli": [54, 93, 193], "2048": [54, 93, 200], "overhead": [54, 94, 197], "modular": [54, 93, 162, 192, 194, 219], "crt": [54, 93, 193], "overcompens": 54, "theorit": 54, "new_msg": 54, "kid_rsa_public_kei": 54, "grade": [54, 81, 180, 196], "school": [54, 209], "bob": [54, 110], "369": 54, "58": [54, 89, 226], "kid_rsa_private_kei": 54, "encipher_kid_rsa": 54, "200": [54, 84, 89, 93, 96, 101, 245], "161": 54, "decipher_kid_rsa": 54, "pub": [54, 245], "pri": 54, "encode_mors": 54, "sep": [54, 200, 217, 231], "mors": 54, "attack": 54, "flank": 54, "r156": 54, "morse_cod": 54, "decode_mors": 54, "word_sep": 54, "mc": [54, 121], "east": 54, "r157": 54, "lfsr_sequenc": 54, "lfsr": 54, "c_k": 54, "golomb": [54, 93], "g157": 54, "autocorrel": 54, "lim_": [54, 59, 61, 78, 80, 207, 266, 270], "balanc": [54, 132, 187, 220, 231], "solomon": 54, "aegean": 54, "park": 54, "laguna": 54, "1967": [54, 194], "lfsr_autocorrel": 54, "lfsr_connection_polynomi": 54, "massei": 54, "m158": 54, "jame": [54, 193], "synthesi": 54, "bch": 54, "tran": 54, "122": [54, 56, 61], "127": [54, 93], "elgamal_public_kei": 54, "elgamal_private_kei": 54, "1031": 54, "636": 54, "212": [54, 80, 194], "mathmat": 54, "dlp": 54, "is_primitive_root": [54, 93], "encipher_elgam": 54, "c2": [54, 63, 70, 84, 86, 152, 166, 208, 216, 220, 247, 250, 277], "encryp": 54, "decipher_elgam": 54, "eucliden": 54, "dh_public_kei": 54, "dh_private_kei": 54, "_p": [54, 166, 191, 193, 195, 207, 210, 218], "_g": 54, "diffi": 54, "hellman": [54, 93], "publicli": 54, "secretli": 54, "dh_shared_kei": 54, "sk": 54, "gm_public_kei": 54, "goldwass": 54, "micali": 54, "gm_private_kei": 54, "b_n": [54, 58, 82, 187, 203], "jacobi_symbol": [54, 93], "reconstruct": [54, 89, 193, 271], "residuos": 54, "entropi": [54, 220], "encipher_gm": 54, "public_kei": 54, "gm": [54, 169], "decipher_gm": 54, "encipher_railf": 54, "rail": 54, "railfenc": 54, "horel": 54, "ollwd": 54, "r160": 54, "rail_fence_ciph": 54, "decipher_railf": 54, "diffgeom": 55, "euclidean": [55, 66, 68, 176, 191, 193, 196], "r161": 55, "chart": [55, 186], "parameter": [55, 62, 63, 66, 69, 213], "r162": 55, "sussman": 55, "wisdom": 55, "farr": 55, "2013": [55, 65, 84, 274], "tranform": 55, "cartesian": [55, 96, 134, 139, 153, 156, 161, 181, 186, 187, 208, 219, 238, 248, 249, 251, 252], "polar": [55, 59, 61, 63, 69, 79, 96, 105, 136, 186, 208, 212, 219, 261], "relation_dict": 55, "car2d": 55, "pol": 55, "coordinatesymbol": 55, "jacobian": [55, 89, 130, 218], "jacobian_determin": 55, "r163": 55, "coordinate_system": 55, "base_oneform": 55, "coord_index": 55, "oneform": 55, "base_scalar": 55, "basescalarfield": 55, "base_vector": [55, 245], "coord_funct": 55, "to_si": 55, "coord": [55, 68, 70, 107, 164, 179], "immutabledensematrix": [55, 84, 85, 86, 87, 220], "rn": 55, "r2_r": 55, "r2_p": 55, "jacobian_matrix": 55, "point_to_coord": 55, "coord_si": [55, 247], "imbu": 55, "difficulti": [55, 117], "arriv": [55, 193, 210, 212, 216, 220, 276], "inappropri": 55, "poin": 55, "unappropri": 55, "fy": [55, 186, 217], "ftheta": 55, "basevectorfield": 55, "point_p": 55, "point_r": 55, "s_field": 55, "dxi": 55, "v1": [55, 66, 89, 113, 133, 176, 177, 179, 220, 239, 245, 247, 248, 249, 250], "v2": [55, 66, 89, 113, 176, 177, 179, 239, 245, 247, 248, 249, 250], "v_1": [55, 195, 218], "v_2": [55, 195], "e_x": [55, 226], "e_i": [55, 187, 210, 226], "e_r": 55, "c_xy": 55, "c_xr": 55, "unfortun": [55, 57, 94, 199, 213], "e_rho": 55, "form_field": 55, "exterior": [55, 69], "dg": 55, "tensorproduct": [55, 163, 165, 221, 222], "multilinear": 55, "wedg": [55, 78], "tp1": 55, "tp": [55, 138, 165, 191], "wedgeproduct": 55, "wp1": 55, "liederiv": 55, "v_field": 55, "transport": 55, "pushforward": 55, "e_theta": 55, "basecovarderivativeop": 55, "christoffel": 55, "metric_to_christoffel_2nd": 55, "ch": [55, 89, 213], "cvd": 55, "covarderivativeop": 55, "intcurve_seri": 55, "vector_field": [55, 251], "start_point": 55, "dt": [55, 61, 120, 133, 175, 176, 178, 183, 184, 216, 276], "f_i": [55, 78, 89, 193, 197], "movement": 55, "intcurve_diffequ": 55, "init_cond": 55, "f_1": [55, 58, 61, 78, 103, 112, 115, 134, 187, 193, 196, 216], "f_0": [55, 58, 112, 193], "vectors_in_basi": 55, "kept": [55, 168, 184, 238, 271], "twoform_to_matrix": 55, "twoform": 55, "e_j": 55, "metric_to_christoffel_1st": 55, "levi": [55, 61, 220, 226], "civita": [55, 61, 226], "metric_to_riemann_compon": 55, "non_trivial_metr": 55, "dtheta": 55, "drho": 55, "metric_to_ricci_compon": 55, "ricci": 55, "fft": [56, 133], "ifft": 56, "ntt": 56, "intt": 56, "fwht": 56, "ifwht": 56, "mobius_transform": 56, "inverse_mobius_transform": 56, "convolution_fft": 56, "convolution_ntt": 56, "convolution_fwht": 56, "convolution_subset": 56, "covering_product": 56, "intersecting_product": 56, "radix": 56, "r164": 56, "coolei": 56, "93tukey_fft_algorithm": 56, "r165": 56, "fastfouriertransform": 56, "r166": 56, "r167": 56, "pz": [56, 101, 226], "643": [56, 93], "767": 56, "387": 56, "415": 56, "384": 56, "353": [56, 89], "r168": 56, "apfloat": 56, "r169": 56, "numbertheoretictransform": 56, "r170": 56, "discrete_fourier_transform_": 56, "r171": 56, "r172": 56, "r173": 56, "wht": 56, "r174": 56, "hadamard_transform": 56, "r175": 56, "fast_walsh": 56, "93hadamard_transform": 56, "r176": 56, "r177": 56, "mobiu": [56, 93], "lattic": [56, 213], "bitmask": 56, "r178": 56, "b6bius_inversion_formula": 56, "r179": 56, "csail": 56, "mit": 56, "rrw": 56, "conv": 56, "r180": 56, "arxiv": [56, 89, 105, 238], "1211": 56, "0189": 56, "r181": 56, "r182": 56, "r183": 56, "888": 56, "444": 56, "1283": 56, "19351": 56, "14219": 56, "15502": 56, "44": [56, 58, 89, 93, 209, 220], "41": [56, 63, 89, 93, 191, 213], "63": [56, 89, 93], "r184": 56, "convolution_theorem": 56, "r185": 56, "333": [56, 93], "555": 56, "222": 56, "666": 56, "15555": 56, "19404": 56, "r186": 56, "r187": 56, "56": [56, 80, 93, 196], "68": [56, 81, 89, 93, 213], "48": [56, 63, 97, 213, 218, 220, 266], "2057": 56, "1870": 56, "r188": 56, "radioeng": 56, "cz": [56, 213], "fulltext": 56, "2002": [56, 187, 194, 197], "02_03_40_42": 56, "r189": 56, "r190": 56, "r191": 56, "AND": [56, 83, 252], "327": [56, 216], "r192": 56, "44288293815837": 57, "4429": 57, "4428829381583662470158809900606936986146216893757": 57, "28902548222223624241": 57, "091999668350375232456": 57, "14159265358979": [57, 61, 218], "333333333333333": [57, 190, 212], "1415926535": 57, "7182818284": 57, "100000": [57, 93, 101], "951": 57, "95678796130331164628399634646042209010610577945815": 57, "gmpy": [57, 190, 191, 275], "googl": [57, 185, 186, 219], "100000000000000": 57, "1000000000": 57, "125000000000000000000000000000": 57, "100000000000000005551115123126": 57, "100000000000000000000000000000": 57, "1415": 57, "uncertainti": [57, 171], "003": 57, "31417": 57, "propag": [57, 66, 137, 140], "5000": [57, 96], "50000000000000000000000000000": 57, "varphi": [57, 61, 195, 200, 216], "erron": 57, "goldenratio": [57, 201, 212], "34665576869e": 57, "208": [57, 196], "64613129282185e": 57, "60123853010113e": 57, "210": [57, 93, 213], "thousand": [57, 93, 265], "precisionexhaust": 57, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 57, "binet": 57, "104": 57, "1336": 57, "portion": [57, 69, 84, 89], "meaningless": 57, "012297": 57, "9562288417661": 57, "956": 57, "29128599706266": 57, "2912859970626635404072825905956005414986193682745": 57, "14159265358979323846264338328": 57, "integrand": [57, 61, 77, 78, 80, 210], "struggl": [57, 199], "346": 57, "34635637913639": 57, "dealt": [57, 78], "504067061906928": 57, "50406706190692837199": 57, "wrap_lin": [57, 80, 81, 89, 97, 180, 187, 188, 199, 200, 216], "intgrl": 57, "extrapol": [57, 207], "richardson": [57, 207, 219], "slowli": [57, 207], "64493406684823": 57, "577215664901533": 57, "57721566490153286060651209008240243104215933593992": 57, "10000000": [57, 196], "20000000": [57, 196], "693147255559946": 57, "tune": [57, 81, 180, 200], "worthwhil": 57, "hypergeometr": [57, 58, 60, 71, 73, 77, 78, 194, 204, 211, 216, 218, 220, 256, 276], "ramanujan": [57, 58, 93], "9801": 57, "1103": 57, "26390": 57, "396": [57, 116], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 57, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 57, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 57, "355": [57, 93, 194], "113": [57, 93, 213], "33333": [57, 80], "635": 57, "504": [57, 194], "130198866629986772369127970337": 57, "49": [57, 58, 93, 97, 193, 213], "___________": [57, 97, 216], "k_sym": 58, "binom": [58, 93, 220, 276], "dotsc": [58, 202], "j_1": [58, 145, 146, 163, 185, 202, 221], "j_2": [58, 145, 146, 163, 185, 202], "dotsb": [58, 202], "atop": [58, 61, 202, 210], "2j_2": [58, 202], "3j_2": [58, 202], "j_": [58, 61, 78, 80, 163, 202, 210, 270], "877": 58, "4140": 58, "21147": 58, "115975": 58, "846749014511809332450147": 58, "r193": 58, "bell_numb": 58, "r194": 58, "bellnumb": 58, "r195": 58, "bellpolynomi": 58, "6k": 58, "66": [58, 84, 89, 200], "1000001": 58, "r196": 58, "bernoulli_numb": 58, "r197": 58, "bernoulli_polynomi": 58, "r198": 58, "bernoullinumb": 58, "r199": 58, "bernoullipolynomi": 58, "_k": [58, 61, 80, 185, 195, 220], "expand_func": [58, 61], "6435": 58, "pascal": [58, 93], "4th": [58, 59, 75, 89, 93, 133], "195": 58, "r200": 58, "johndcook": 58, "binomial_coeffici": [58, 93], "c_n": [58, 61, 82, 216], "429": [58, 200], "1430": 58, "4862": 58, "39764993382373624267": 58, "020884341620842555705": 58, "r201": 58, "catalan_numb": 58, "r202": 58, "catalannumb": [58, 200], "r203": 58, "r204": 58, "geomet": [58, 187], "mathcircl": 58, "2j": [58, 193, 220], "r209": 58, "e_k": [58, 193], "1385": 58, "2702765": 58, "4096": 58, "r205": 58, "euler_numb": 58, "r206": 58, "eulernumb": 58, "r207": 58, "alternating_permut": 58, "r208": 58, "alternatingpermut": 58, "swing": 58, "derang": [58, 238], "r211": 58, "generate_derang": [58, 238], "r210": 58, "r212": 58, "double_factori": 58, "texttt": [58, 208], "r213": 58, "r214": 58, "paul": [58, 235], "235": 58, "268": 58, "1995": [58, 194, 212, 218], "f_z": [58, 181, 251], "f_2": [58, 78, 103, 112, 115, 134, 193, 210, 216], "r216": 58, "fibonacci_numb": 58, "r217": 58, "fibonaccinumb": 58, "t_0": [58, 213], "149": [58, 93], "r218": 58, "r219": 58, "tribonaccinumb": 58, "r220": 58, "oei": [58, 93], "a000073": 58, "137": [58, 89, 105], "205": [58, 78, 210], "144": [58, 80, 185], "5269": 58, "761": 58, "280": 58, "83711": 58, "27720": 58, "30247": 58, "9900": 58, "983697455232980674869851942390639915940": 58, "r221": 58, "harmonic_numb": 58, "r222": 58, "harmonicnumb": [58, 200], "r223": 58, "harmonicnumber2": 58, "l_0": [58, 104, 226, 227], "47": [58, 61, 89, 93, 105, 139, 171, 199], "76": [58, 89, 93, 193, 196], "r224": 58, "lucas_numb": 58, "r225": 58, "lucasnumb": 58, "2t": 58, "r226": 58, "genocchi_numb": 58, "r227": 58, "genocchinumb": 58, "irrelev": 58, "r228": 58, "number_theori": 58, "r229": 58, "pentagonal_number_theorem": 58, "pochhamm": [58, 200, 212], "r230": 58, "r231": 58, "pochhammer_symbol": 58, "274": 58, "225": [58, 93, 194], "511": 58, "9330": 58, "34105": 58, "42525": 58, "22827": 58, "5880": 58, "750": 58, "r232": 58, "stirling_numbers_of_the_first_kind": 58, "r233": 58, "stirling_numbers_of_the_second_kind": 58, "multiset": [58, 78, 235, 238], "babi": [58, 93, 238], "aa": [58, 185], "bb": [58, 185, 212, 238], "multiset_combin": [58, 238], "aab": [58, 238], "aabc": 58, "aaaabbbbcccc": 58, "m_1": [58, 103, 145, 163, 185, 213], "m_2": [58, 115, 134, 145, 163, 185], "m_k": 58, "r234": 58, "r235": 58, "tinyurl": 58, "cep849r": 58, "ba": [58, 238], "multiset_permut": [58, 238], "r236": 58, "aabbc": 58, "mississippi": [58, 238], "609": 58, "1521": 58, "1768": 58, "1224": [58, 93], "579": 58, "197": 58, "r237": 58, "undergradu": 58, "csse": 58, "uwa": 58, "au": 58, "cits7209": 58, "707106781186548": 59, "negativeon": [59, 271], "tangent": [59, 63, 65, 69, 80, 197, 216], "643501108793284": 59, "r238": 59, "ib": [59, 121], "complex_conjug": 59, "r242": 59, "r239": 59, "trigonometric_funct": 59, "r240": 59, "r241": 59, "elementaryfunct": 59, "trigonometryangl": 59, "r243": 59, "r244": 59, "r245": 59, "r246": 59, "r247": 59, "r248": 59, "cotang": [59, 197], "r249": 59, "r250": 59, "r251": 59, "secant": [59, 196], "r252": 59, "r253": 59, "r254": 59, "cosec": 59, "r255": 59, "r256": 59, "r257": 59, "unnorm": [59, 61], "qquad": [59, 171, 193], "jn": [59, 61, 163, 196, 200, 270], "spheric": [59, 60, 105, 145, 185, 186, 196, 245, 248, 249, 270], "r258": 59, "sinc_funct": 59, "r259": 59, "inverse_trigonometric_funct": 59, "r260": 59, "r261": 59, "r262": 59, "r263": 59, "r264": 59, "r265": 59, "r266": 59, "r267": 59, "arctan": [59, 197, 200], "r268": 59, "r269": 59, "arccot": [59, 200], "r273": 59, "r270": 59, "r271": 59, "r272": 59, "arcsec": [59, 200], "r274": 59, "r275": 59, "r276": 59, "arccsc": [59, 200], "quadrant": [59, 191, 219], "clock": [59, 209], "reurn": 59, "r277": 59, "r278": 59, "r279": 59, "arctan2": 59, "r280": 59, "hyperbolic_funct": 59, "r281": 59, "r282": 59, "arcsech": [59, 200], "imaginaryunit": [59, 200], "r283": 59, "r284": 59, "r285": 59, "arccsch": [59, 200], "567": 59, "r286": 59, "r287": 59, "ceilingfunct": 59, "r288": 59, "r289": 59, "floorfunct": 59, "r290": 59, "lfloor": [59, 191, 219, 220], "rfloor": [59, 191, 219, 220], "fractional_part": 59, "r291": 59, "fractionalpart": 59, "lambert": [59, 80, 197], "r292": 59, "w_k": 59, "635564016364870": 59, "34747534407696": 59, "41624341514535": 59, "lambert_w_funct": 59, "mathcal": [59, 78, 103, 131, 163, 185, 208], "cond": [59, 78, 80, 208], "piecewise_fold": 59, "folded_cond": 59, "ITE": [59, 83], "piecewise_exclus": 59, "_eval_integr": [59, 80], "piecewise_integr": 59, "as_expr_set_pair": 59, "skip_nan": 59, "mutual": [59, 78, 184], "conjunct": [59, 83, 186, 210, 231, 276], "conflict": [59, 93, 103, 116, 233], "supremum": [59, 208], "r293": 59, "directed_complete_partial_ord": 59, "r294": 59, "lattice_": 59, "28order": 59, "global_paramet": 59, "rootof": [59, 196], "rootoftool": [59, 89, 196], "integer_nthroot": [59, 93], "r295": 59, "square_root": 59, "r296": 59, "r297": 59, "root_of_un": 59, "r298": 59, "principal_valu": [59, 80], "r299": 59, "cuberoot": 59, "powdenest": 59, "misc": [59, 84, 241, 256], "r300": 59, "r301": 59, "r302": 59, "cube_root": 59, "r303": 59, "polar_lift": [60, 61, 212], "periodic_argu": 60, "principal_branch": [60, 78], "sec": [60, 80, 101, 195, 200, 209, 276], "csc": [60, 95, 200, 209], "acot": [60, 200], "asec": [60, 200], "acsc": [60, 200], "hyperbol": [60, 61, 197, 219, 272, 276], "hyperbolicfunct": 60, "coth": [60, 200, 212], "sech": [60, 200], "csch": [60, 200], "asinh": [60, 200], "acosh": [60, 200], "atanh": [60, 197, 200, 210], "acoth": [60, 200], "asech": [60, 200], "acsch": [60, 200], "roundfunct": 60, "lambertw": [60, 197, 200, 218, 219, 277], "exprcondpair": 60, "miscellan": [60, 237, 262, 263], "identityfunct": 60, "real_root": [60, 196, 218], "bell": [60, 150, 202, 238], "bernoulli": [60, 61, 200, 218, 220], "catalan": [60, 200], "subfactori": [60, 200, 238], "factorial2": [60, 167, 200], "fallingfactori": [60, 200], "luca": [60, 93, 200, 206], "genocchi": 60, "multifactori": 60, "nc": 60, "nt": [60, 238], "fresnel": [60, 139, 200, 210], "airi": [60, 80, 216], "spline": 60, "ellipt": [60, 63, 93, 187], "mathieu": [60, 200], "delta_funct": [61, 80], "int_": [61, 77, 78, 80, 203, 266, 270], "sum_i": [61, 207], "is_simpl": 61, "tensor_funct": 61, "kroneckerdelta": [61, 86, 166, 200, 212], "r304": 61, "deltafunct": [61, 80], "h0": 61, "electron": [61, 105, 209], "signal": [61, 83, 93, 101, 103, 133, 193, 271], "improp": [61, 80], "convolut": [61, 202, 256], "r305": 61, "heavisidestepfunct": 61, "r306": 61, "iv": [61, 197], "105": [61, 93, 196, 213], "parg": 61, "singularity_funct": 61, "singularityfunct": [61, 80, 96], "macaulai": 61, "heavisidediracdelta": 61, "r307": 61, "r308": 61, "r309": 61, "r310": 61, "r311": 61, "setminu": [61, 78], "17805383034794561964694160130": 61, "65092319930185633889": 61, "8724366472624298171": 61, "r312": 61, "r313": 61, "r314": 61, "loggammafunct": 61, "r315": 61, "19093197": 61, "5173168": 61, "ni": [61, 93], "r316": 61, "polygamma_funct": 61, "r317": 61, "polygammafunct": 61, "r318": 61, "r319": 61, "polygamma2": 61, "r320": 61, "digamma_funct": 61, "r321": 61, "digammafunct": 61, "r322": 61, "r323": 61, "trigamma_funct": 61, "r324": 61, "trigammafunct": 61, "r325": 61, "int_x": 61, "_1f_1": 61, "confluent": [61, 210], "xt": 61, "expint": [61, 200], "r326": 61, "incomplete_gamma_funct": 61, "upper_incomplete_gamma_funct": 61, "r327": 61, "r328": 61, "r329": 61, "gamma2": 61, "r330": 61, "gamma3": 61, "r331": 61, "exponential_integr": 61, "relation_with_other_funct": 61, "int_0": [61, 78, 80, 266, 276], "r332": 61, "lower_incomplete_gamma_funct": 61, "r333": 61, "r334": 61, "r335": 61, "r336": 61, "multigamma": 61, "gamma_p": 61, "r337": 61, "multivariate_gamma_funct": 61, "beta_funct": 61, "eulerian": 61, "02671848900111377452242355235388489324562": 61, "2112723729365330143": 61, "7655283165378005676": 61, "r338": 61, "r339": 61, "betafunct": 61, "r340": 61, "error_funct": 61, "999999984582742099719981147840": 61, "1296959": 61, "73071763923152794095062": 61, "r341": 61, "r342": 61, "r343": 61, "r344": 61, "0000000154172579002800188521596734869": 61, "r345": 61, "r346": 61, "r347": 61, "r348": 61, "5648024145755525987042919132": 61, "995322265018952734162069256367": 61, "r349": 61, "r350": 61, "r351": 61, "r352": 61, "179143454621291692285822705344": 61, "r353": 61, "inverse_funct": 61, "r354": 61, "inverseerf": [61, 200], "r355": 61, "r356": 61, "inverseerfc": [61, 200], "r357": 61, "inverseerf2": 61, "fresnelintegr": 61, "343415678363698242195300815958": 61, "fresnelc": [61, 200, 210], "r358": 61, "fresnel_integr": 61, "r359": 61, "r360": 61, "r361": 61, "r362": 61, "wrench": 61, "jr": 61, "vicki": 61, "allei": 61, "488253406075340754500223503357": 61, "r363": 61, "r364": 61, "r365": 61, "r366": 61, "r367": 61, "ei": [61, 78, 195, 200, 210, 213, 216, 226], "background": [61, 81, 126, 180, 183, 274], "cauchi": [61, 78, 80, 191, 216, 220], "219383934395520": 61, "21938393439552": 61, "shi": [61, 78, 200, 210], "e1": [61, 63, 70, 116, 190, 195, 207, 216, 219], "li": [61, 69, 80, 93, 166, 200, 254], "r368": 61, "r369": 61, "r370": 61, "sfu": [61, 80], "cbm": [61, 80], "aand": [61, 80], "page_228": 61, "int_1": [61, 78], "zt": [61, 78], "unbranch": [61, 78], "meijerg": [61, 72, 78, 80, 200, 220, 276], "postiv": 61, "r371": 61, "r372": 61, "expintegral": [61, 200], "r373": 61, "04516378011749278484458888919": 61, "0652795784357498247001125598": 61, "08346052231061726610939702133": 61, "soldner": 61, "findroot": [61, 218], "45136923488338": 61, "r374": 61, "logarithmic_integr": 61, "r375": 61, "logarithmicintegr": 61, "r376": 61, "r377": 61, "soldnersconst": 61, "92242131492155809316615998938": 61, "r378": 61, "r379": 61, "r380": 61, "r381": 61, "trigonometric_integr": 61, "_1": [61, 89, 176, 210, 239], "somewhat": [61, 80, 116, 191], "r382": 61, "r383": 61, "r384": 61, "laurent": [61, 191, 197, 216], "j_n": [61, 163], "r385": 61, "r386": 61, "r387": 61, "r388": 61, "yn": [61, 200, 206], "r389": 61, "i_": [61, 78, 210, 220, 221], "iz": 61, "r390": 61, "k_": [61, 78, 128, 129], "r391": 61, "hankel1": [61, 200], "hankel": [61, 80], "iy_": 61, "hankel2": [61, 200], "r392": 61, "hankelh1": [61, 200], "r393": 61, "hankelh2": [61, 200], "2z": [61, 219, 220], "orthopoli": [61, 196], "spherical_bessel_fn": [61, 196], "3j": [61, 145, 185], "099419756723640344491": 61, "054525080242173562897": 61, "r394": 61, "y_n": [61, 213], "18525034196069722536": 61, "014895573969924817587": 61, "r395": 61, "jn_zero": 61, "besseljzero": 61, "sph_jn": 61, "7635": 61, "095": 61, "323": [61, 93], "515": 61, "marcumq": 61, "marcum": 61, "q_m": 61, "r396": 61, "marcum_q": 61, "r397": 61, "airybas": 61, "airyai": [61, 200, 216], "ai": [61, 93, 196, 213, 241, 276], "airyaiprim": [61, 200], "22740742820168557599192443603787379946077222541710": 61, "airybi": [61, 200, 216], "airybiprim": [61, 200], "r398": 61, "airy_funct": 61, "r399": 61, "r400": 61, "encyclopediaofmath": 61, "r401": 61, "airyfunct": 61, "41230258795639848808323405461146104203453483447240": 61, "r402": 61, "r403": 61, "r404": 61, "r405": 61, "61825902074169104140626429133247528291577794512415": 61, "r406": 61, "r407": 61, "r408": 61, "r409": 61, "27879516692116952268509756941098324140300059345163": 61, "r410": 61, "r411": 61, "r412": 61, "r413": 61, "bspline": 61, "bspline_basi": 61, "knot": 61, "cubic": [61, 187, 196, 213, 218], "bspline_basis_set": 61, "r414": 61, "interpolating_splin": 61, "131": [61, 176], "39": [61, 93, 199], "interpolating_poli": [61, 196], "zeta_funct": 61, "hurwitz": 61, "admit": [61, 216], "circumst": [61, 195, 270], "lerch": 61, "transcend": 61, "lerchphi": [61, 200], "dirichlet_eta": [61, 200], "20205690315959": 61, "polylog": [61, 200], "r415": 61, "r416": 61, "hurwitz_zeta_funct": 61, "r417": 61, "dirichlet_eta_funct": 61, "polylogarithm": 61, "sheet": [61, 209], "phi_0": 61, "ze": 61, "r418": 61, "bateman": 61, "erdelyi": 61, "1953": [61, 195], "york": [61, 78, 132, 210, 218], "mcgraw": [61, 111, 132, 176, 182, 245], "r419": 61, "r420": 61, "lerch_transcend": 61, "stieltj": [61, 200], "gamma_": [61, 104, 106], "r421": 61, "stieltjes_const": 61, "ap": [61, 65, 210], "bq": [61, 188, 189, 210], "a_p": [61, 78, 210, 276], "b_q": [61, 78, 210, 276], "_pf_q": [61, 210, 216, 276], "unicod": [61, 81, 89, 180, 200, 231, 270], "r422": 61, "r423": 61, "generalized_hypergeometric_funct": 61, "convergence_stat": 61, "radius_of_converg": 61, "radiu": [61, 63, 67, 69, 123, 125, 135, 139, 186, 219, 220, 254], "meijer": [61, 71, 73, 79, 80, 266, 276], "mellin": [61, 79, 80], "barn": 61, "b_m": [61, 78, 218], "confusingli": 61, "int_l": [61, 78, 210], "contour": [61, 63, 78, 186, 210], "__1": 61, "subvector": 61, "aother": 61, "bm": 61, "bother": [61, 271], "slater": [61, 210], "allow_hyp": [61, 212], "subsum": 61, "r424": 61, "r425": 61, "meijer_g": 61, "get_period": [61, 78], "appellf1": [61, 200], "b2": [61, 93, 96, 97, 108, 116, 133, 176, 189, 191, 200, 210, 213, 216, 250], "appel": 61, "0063339426292673": 61, "172870711": 61, "659936": 61, "15605338197184": 61, "r426": 61, "appell_seri": 61, "r427": 61, "hypergeometricfunct": 61, "elliptic_integr": 61, "elliptic_k": [61, 200], "tfrac": [61, 216, 220], "eccentr": [61, 63], "50923695405127": 61, "625146415202697": 61, "elliptic_f": [61, 200], "r428": 61, "r429": 61, "ellipticintegr": 61, "elliptick": [61, 200], "909449841483": 61, "74720545502474": 61, "r430": 61, "r431": 61, "ellipticf": 61, "elliptic_": [61, 63, 200], "55203744279187": 61, "290764986058437": 61, "991052601328069": 61, "81879421395609": 61, "r432": 61, "r433": 61, "elliptice2": 61, "r434": 61, "elliptic": [61, 200], "elliptic_pi": [61, 200], "50232379629182": 61, "760939574180767": 61, "29136443417283": 61, "32555634906645": 61, "r435": 61, "r436": 61, "ellipticpi3": 61, "r437": 61, "ellipticpi": [61, 200], "mathieu_funct": 61, "mathieubas": 61, "mathieusprim": [61, 200], "mathieuc": [61, 200], "mathieucprim": [61, 200], "r438": 61, "r439": 61, "r440": 61, "r441": 61, "mathieuandspheroidalfunct": 61, "r442": 61, "r443": 61, "r444": 61, "r445": 61, "r446": 61, "r447": 61, "r448": 61, "r449": 61, "r450": 61, "r451": 61, "r452": 61, "r453": 61, "chebyshevu": [61, 200], "chebyshevt_root": 61, "chebyshevu_root": 61, "assoc_legendr": [61, 200], "jacobi_poli": [61, 196], "gegenbauer_poli": [61, 196], "chebyshevt_poli": [61, 196], "chebyshevu_poli": [61, 196], "hermite_poli": [61, 196], "legendre_poli": [61, 196], "laguerre_poli": [61, 196], "r454": 61, "jacobi_polynomi": 61, "r455": 61, "jacobipolynomi": 61, "r456": 61, "jacobip": [61, 200], "jacobi_norm": 61, "normilz": 61, "p_m": 61, "delta_": [61, 163, 171], "r457": 61, "r458": 61, "r459": 61, "r460": 61, "gegenbauer_polynomi": 61, "r461": 61, "gegenbauerpolynomi": 61, "r462": 61, "gegenbauerc3": 61, "r463": 61, "chebyshev_polynomi": 61, "r464": 61, "chebyshevpolynomialofthefirstkind": 61, "r465": 61, "chebyshevpolynomialofthesecondkind": 61, "r466": 61, "r467": 61, "u_n": [61, 80, 193, 195], "r468": 61, "r469": 61, "r470": 61, "r471": 61, "r472": 61, "chebyshev_root": 61, "r473": 61, "legendre_polynomi": 61, "r474": 61, "legendrepolynomi": 61, "r475": 61, "legendrep": [61, 200], "r476": 61, "legendrep2": 61, "r477": 61, "associated_legendre_polynomi": 61, "r478": 61, "r479": 61, "r480": 61, "r481": 61, "hermite_polynomi": 61, "r482": 61, "hermitepolynomi": 61, "r483": 61, "hermiteh": [61, 200], "l_n": [61, 80], "r484": 61, "laguerre_polynomi": 61, "r485": 61, "laguerrepolynomi": 61, "r486": 61, "laguerrel": [61, 200], "r487": 61, "laguerrel3": 61, "r488": 61, "generalized_laguerre_polynomi": 61, "r489": 61, "associatedlaguerrepolynomi": 61, "r490": 61, "r491": 61, "spherical_harmon": 61, "ynm": [61, 185], "ynm_c": 61, "znm": 61, "r492": 61, "r493": 61, "sphericalharmon": 61, "r494": 61, "sphericalharmonici": 61, "r495": 61, "r496": 61, "r497": 61, "r498": 61, "z_n": [61, 194], "r499": 61, "r500": 61, "r501": 61, "eijk": 61, "levicivita": [61, 89], "eval_levicivita": 61, "pseudotensor": 61, "delta_rang": [61, 166], "kroneck": [61, 165, 166, 221, 226], "r502": 61, "kronecker_delta": [61, 166], "indices_contain_equal_inform": [61, 166], "fermi": [61, 166], "above_fermi": [61, 166], "below_fermi": [61, 166], "is_above_fermi": [61, 166], "is_below_fermi": [61, 166], "is_only_below_fermi": [61, 166], "is_only_above_fermi": [61, 166], "killable_index": [61, 166], "preferred_index": [61, 166], "point2d": [62, 63, 64, 65, 66, 68, 69, 70], "arbitrary_point": [62, 63, 64, 65, 66, 67, 69], "polyfunc": [62, 196], "ambient_dimens": [62, 64, 66, 68], "plot_interv": [62, 63, 66, 69], "lower_bound": [62, 63, 66, 69], "upper_bound": [62, 63, 66, 69], "counterclockwis": [62, 63, 64, 68, 97], "geometryent": [62, 63, 64, 66, 68, 69, 70], "hradiu": 63, "vradiu": 63, "geometryerror": [63, 66, 69, 70], "radii": 63, "foci": 63, "periapsi": 63, "apoapsi": 63, "focus_dist": 63, "shortest": [63, 66, 69, 183, 206, 212, 216, 238], "auxiliary_circl": 63, "xmin": [63, 64, 66, 68, 69, 186], "ymin": [63, 64, 66, 68, 69, 186], "xmax": [63, 64, 66, 68, 69, 186], "ymax": [63, 64, 66, 68, 69, 186], "rectangl": [63, 64, 66, 68, 69, 186, 196], "director_circl": 63, "perpendicular": [63, 66, 67, 69, 82, 124, 139, 184], "director": 63, "130": 63, "r503": 63, "encloses_point": [63, 64, 69], "border": [63, 69], "_slope": 63, "slope": [63, 64, 66, 69, 96, 97, 101], "eq1": [63, 216, 218, 219], "eq2": [63, 83, 216, 219], "r504": 63, "108270": 63, "r505": 63, "equation_of_a_shifted_ellips": 63, "evolut": 63, "focal": [63, 135, 139], "100500": 63, "363": [63, 93, 194], "175": [63, 89, 193, 194], "is_tang": [63, 65], "tangent_lin": 63, "normal_lin": 63, "line2d": [63, 66, 69], "quartic": [63, 196, 218], "2020": [63, 145], "polar_second_moment_of_area": [63, 69], "moment": [63, 69, 96, 97, 118, 126, 129, 175, 186, 196, 213, 220], "constitu": [63, 69, 113, 176, 206, 245], "planar": [63, 69, 97, 139], "resist": [63, 69, 96, 97, 209], "deflect": [63, 69, 96, 97], "bend": [63, 69, 96, 98], "r506": 63, "polar_moment_of_inertia": [63, 69], "random_point": [63, 66, 67], "arb": 63, "364": 63, "notimpl": [63, 195], "second_moment_of_area": [63, 69], "centroid": [63, 69, 70, 96], "i_xx": [63, 69], "i_yi": [63, 69], "i_xi": [63, 69], "ellis": 63, "r507": 63, "list_of_second_moments_of_area": 63, "section_modulu": [63, 69], "sympify": [63, 69, 96, 99, 108, 113, 137, 140, 178], "farthest": [63, 69], "s_x": [63, 69], "s_y": [63, 69], "r508": 63, "semilatus_rectum": 63, "semi": [63, 66, 93], "latu": 63, "rectum": 63, "chord": 63, "conic": [63, 213, 245], "directrix": 63, "r509": 63, "semilatusrectum": 63, "r510": 63, "latus_rectum": 63, "collinear": [63, 65, 67, 68, 69, 186], "gx": 63, "hy": 63, "synonym": [63, 195], "p4": [63, 66, 68, 69, 186], "boundari": [64, 66, 96, 97, 179, 197, 208, 216, 220], "t2": [64, 69, 70, 93, 108, 113, 213, 220, 226], "ordering_of_class": 64, "is_similar": [64, 66, 69, 70], "uniform": [64, 186, 218, 220], "enlarg": 64, "shrink": [64, 78], "parameter_valu": [64, 67], "pent": 64, "rpent": 64, "rcirc": 64, "entity1": 65, "entity2": 65, "zp": 65, "is_collinear": [65, 68], "segment2d": [65, 66, 69, 70], "wikipappu": 65, "bc": [65, 99, 238, 241, 250], "subs_point": 65, "p11": 65, "p12": 65, "p13": 65, "p21": 65, "p22": 65, "p23": 65, "ll1": 65, "ll2": 65, "ll3": 65, "ll4": 65, "ll5": 65, "ll6": 65, "pp1": 65, "pp2": 65, "pp3": 65, "encyclopedia": [65, 182], "apr": 65, "s_hexagon_theorem": 65, "clockwis": [65, 80, 84, 96, 97, 99], "overlap": [65, 70, 92, 187, 208, 241], "infanc": 65, "geometryresult": 65, "fair": [65, 220], "angle_between": [66, 67, 69, 176], "reflex": 66, "eman": 66, "readili": [66, 89], "sw": 66, "obtus": 66, "smallest_angle_between": 66, "line3d": [66, 67, 68], "is_perpendicular": [66, 67, 68, 69], "ray2d": [66, 69], "closing_angl": 66, "are_concurr": [66, 67], "concurr": [66, 67, 197], "l3": [66, 119, 193], "l4": [66, 119], "bisector": [66, 69], "p5": [66, 68, 69, 186], "p6": [66, 69, 186], "p7": [66, 69, 186], "segment3d": [66, 67], "direction_ratio": [66, 68], "is_parallel": [66, 67], "parallel_lin": 66, "perpendicular_lin": [66, 67], "perpendicular_seg": 66, "enpoint": 66, "reform": 66, "432": [66, 195], "92": [66, 194, 216, 220], "ccw": [66, 69], "ray3d": [66, 67, 139], "xdirect": 66, "ydirect": 66, "midpoint": [66, 68, 69, 80, 186, 250], "170": [66, 220], "341": 66, "perpendicular_bisector": 66, "linearentity2d": 66, "linearentity3d": [66, 67], "direction_cosin": [66, 68], "zdirect": 66, "normal_vector": [67, 139], "proce": [67, 130, 193, 195, 210, 218], "147": 67, "321": 67, "is_coplanar": 67, "perpendicualar": 67, "parallel_plan": 67, "on_circl": 67, "off_circl": 67, "perpendicular_plan": 67, "pt1": 67, "projection_lin": 67, "on_morph": 68, "affine_rank": 68, "are_coplanar": 68, "canberra_dist": 68, "canberra": 68, "geometricent": 68, "taxicab_dist": 68, "is_concycl": 68, "concycl": 68, "fewer": [68, 69, 130, 220, 266], "is_scalar_multipl": 68, "ambient": 68, "orthogonal_direct": 68, "taxicab": 68, "_nocheck": 68, "are_collinear": 68, "4x4": [68, 92, 138, 220], "travers": [69, 93, 109, 196, 209, 225, 235, 256, 271], "unrot": 69, "circumscrib": 69, "spin": [69, 105, 118, 152, 153, 161], "perimet": [69, 252], "contact": [69, 118, 122, 123, 124, 125, 183, 224], "38": [69, 89, 93, 200, 213, 215, 220], "cut_sect": 69, "upper_polygon": 69, "lower_polygon": 69, "upper_seg": 69, "lower_seg": 69, "r511": 69, "r512": 69, "paulbourk": 69, "polygonmesh": 69, "insidepoli": 69, "first_moment_of_area": 69, "q_x": [69, 183], "q_y": [69, 183], "625": [69, 254], "3125": [69, 220], "525": 69, "3000": [69, 96], "r513": 69, "skyciv": 69, "beam": [69, 99, 135, 138, 261], "bmd": 69, "r514": 69, "mechanicalc": 69, "poly1": 69, "poly2": 69, "interior": [69, 196, 208], "180": [69, 184, 194], "r515": 69, "r516": 69, "r517": 69, "apothem": 69, "interior_angl": 69, "exterior_angl": 69, "circumcircl": 69, "incircl": 69, "inradiu": 69, "inscrib": 69, "circumcent": 69, "circumradiu": 69, "leg": 69, "square_in_unit_circl": 69, "kite": 69, "asa": 69, "sa": [69, 196], "sss": 69, "altitud": 69, "orthocent": 69, "exradii": 69, "median": [69, 220, 262], "medial": 69, "nine_point_circl": 69, "straight": [69, 75, 101, 120, 183, 216], "eulerlin": 69, "equilater": 69, "coincid": [69, 89, 92, 110, 116, 187, 245, 249, 268], "excent": 69, "excircl": 69, "touch": [69, 118, 209], "r518": 69, "ly": [69, 89, 191], "exradiu": 69, "r519": 69, "r520": 69, "incent": 69, "is_equilater": 69, "is_isoscel": 69, "is_right": 69, "is_scalen": 69, "nine": [69, 200], "feet": 69, "real_num": 70, "hull": 70, "r521": 70, "graham_scan": 70, "r522": 70, "andrew": 70, "1979": [70, 171], "geomalgorithm": 70, "a10": 70, "_hull": 70, "t3": [70, 213], "mass": [70, 105, 106, 107, 108, 110, 111, 115, 116, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 133, 134, 142, 167, 169, 170, 171, 181, 183, 231, 252, 253], "averag": [70, 80, 93, 193, 220], "qq": [71, 72, 74, 75, 76, 80, 187, 188, 189, 190, 192, 193, 195, 196, 197], "p_r": 71, "holonomic_funct": 71, "from_hyp": [72, 75], "holonomicfunct": [72, 73, 75], "from_meijerg": [72, 75], "initcond": [72, 74, 75], "expr_to_holonom": [72, 75, 76, 77], "lenic": [72, 74], "ground": [72, 118, 122, 123, 124, 125, 187, 190, 191, 193, 195, 196, 218, 275], "meijerint": [72, 74, 78, 80], "_rewrite1": [72, 78], "_convert_poly_rat_alg": [72, 74], "_create_t": [72, 74], "differentialoper": [73, 75, 155], "differentialoperatoralgebra": 73, "_create_lookup_t": [74, 78], "old_poly_r": [75, 76, 187, 190, 191], "to_expr": [75, 76, 77, 103], "to_sequ": 75, "n_0": [75, 193, 218, 219], "indici": [75, 76, 77, 216], "c_j": [75, 78, 210], "holonomicsequ": 75, "r523": 75, "hal": 75, "inria": [75, 80], "fr": [75, 80, 93, 111, 116, 118, 120, 123, 124, 128, 130, 133, 220], "00070025": 75, "r524": 75, "risc": [75, 216, 245], "jku": [75, 216, 245], "risc_2244": 75, "diplform": 75, "_recur": 75, "rk4": 75, "71828182845905": 75, "10517083333333": 75, "22140257085069": 75, "34985849706254": 75, "49182424008069": 75, "64872063859684": 75, "82211796209193": 75, "01375162659678": 75, "22553956329232": 75, "45960141378007": 75, "71827974413517": 75, "331": 75, "4641": 75, "61051": 75, "771561": 75, "9487171": 75, "14358881": 75, "357947691": 75, "5937424601": 75, "to_hyp": 75, "as_list": [75, 196], "to_meijerg": 75, "homogen": [76, 80, 89, 103, 191, 193, 196, 213, 216, 217, 220], "1_0": 76, "1_1": 76, "0_0": 76, "0_1": 76, "pyplot": [76, 133], "plt": [76, 133], "list_of_poli": 76, "weyl": [76, 82], "Ore": 76, "dxa": 76, "endomorph": [76, 195], "frobeniu": [77, 89, 93, 193, 194], "subtleti": 78, "recast": [78, 212, 218, 219], "branchpoint": 78, "crude": [78, 118, 186], "decre": 78, "biholomorph": 78, "topologi": [78, 208], "neighbourhood": 78, "evid": [78, 111, 124, 210], "peculiar": [78, 184], "_split_mul": 78, "_mytyp": 78, "inequival": 78, "_mul_as_two_part": 78, "bx": [78, 220, 226], "twist": 78, "recognis": [78, 190, 210, 212], "anywai": [78, 212, 216], "analyitc": 78, "_rewrite_singl": 78, "_rewrite2": 78, "_rewrite_saxena_1": 78, "_rewrite_saxena": 78, "blogpost": 78, "remedi": 78, "exploit": [78, 232], "transpar": [78, 81, 180], "nessgrh": 78, "wordpress": [78, 213], "07": 78, "stade": 78, "c_u": 78, "d_1": [78, 171, 196, 220], "d_v": 78, "amalgam": 78, "prudnikov1990": [78, 210], "luke1969": [78, 210], "c_3": [78, 216], "c_4": 78, "visibl": [78, 186], "fulfil": [78, 185], "vee": [78, 83], "lceil": 78, "rceil": 78, "d_j": [78, 171, 210], "lambda_c": [78, 129], "lambda_": 78, "z_0": [78, 212], "z_1": 78, "a_i": [78, 171, 176, 184, 188, 193, 210], "c_5": 78, "c_6": 78, "c_7": 78, "c_8": 78, "lvert": 78, "rvert": 78, "c_9": 78, "versatil": 78, "bz": [78, 213, 226], "deform": [78, 97], "encircl": 78, "appeal": 78, "fox": 78, "obstacl": 78, "identif": [78, 219], "domin": [78, 84, 205, 207], "iT": 78, "omega_": 78, "disguis": 78, "meijerint_indefinit": 78, "meijerint_definit": 78, "meijerint_invers": 78, "kelli": [78, 210], "roach": [78, 210], "211": [78, 93, 196, 210, 216], "prudnikov": [78, 210], "yu": [78, 185, 210], "brychkov": [78, 210], "marichev": [78, 210], "gordon": [78, 145, 210], "breach": [78, 210], "_coeffexpvalueerror": 78, "_get_coeff_exp": 78, "_check_anteced": 78, "_check_antecedents_1": 78, "mt": 78, "_check_antecedents_invers": 78, "anteced": [78, 207], "_condsimp": 78, "hoc": 78, "simp": [78, 118, 176], "_dummi": 78, "_dummy_": 78, "_eval_cond": 78, "_expon": 78, "_find_splitting_point": 78, "fsp": 78, "_flip_g": 78, "_function": 78, "_guess_expans": 78, "sensibl": [78, 80], "_inflate_fox_h": 78, "_inflate_g": 78, "_int0oo": 78, "_int0oo_1": 78, "_int_invers": 78, "_is_analyt": 78, "almost": [78, 87, 95, 168, 186, 187, 191, 196, 197, 216, 220, 234, 235, 238, 270], "_meijerint_definite_2": 78, "expand_mul": 78, "trigexpand": 78, "_meijerint_definite_3": 78, "_meijerint_definite_4": 78, "only_doubl": 78, "_meijerint_indefinite_1": 78, "_mul_arg": 78, "_my_principal_branch": 78, "full_pb": 78, "nearer": 78, "superflu": 78, "opaqu": [78, 200], "fac": 78, "_rewrite_invers": 78, "costli": [78, 120, 272], "tx": [78, 274], "overview": [79, 188, 219, 252, 253], "argand": [79, 219], "lookup": [79, 80, 89, 93, 210], "laplac": [79, 80, 100, 101, 103, 220], "todo": [79, 144, 146, 150, 151, 155, 156, 158, 159, 160, 161, 162, 193, 200, 207, 225], "polytop": 79, "happili": [80, 224], "nonelementari": 80, "mellin_transform": 80, "bilater": 80, "mellintransform": 80, "integraltransform": 80, "nocond": 80, "inverse_mellin_transform": 80, "laplace_transform": [80, 103], "fourier_transform": 80, "hankel_transform": 80, "inverse_hankel_transform": 80, "suitabl": [80, 86, 95, 188, 190, 193, 195, 200, 210, 213, 216, 219, 221, 269], "inversemellintransform": 80, "attemp": 80, "laplacetransform": 80, "inverse_laplace_transform": 80, "singularit": [80, 130], "inverselaplacetransform": 80, "_fast_inverse_laplac": 80, "rootsum": [80, 196, 202], "fouriertransform": 80, "_fourier_transform": 80, "inverse_fourier_transform": 80, "sine_transform": 80, "inverse_sine_transform": 80, "cosine_transform": 80, "inverse_cosine_transform": 80, "bixk": 80, "inversefouriertransform": 80, "sinetransform": 80, "inversesinetransform": 80, "cosinetransform": 80, "inversecosinetransform": 80, "hankeltransform": 80, "ht": 80, "inversehankeltransform": 80, "_compute_transform": 80, "_as_integr": 80, "integraltransformerror": 80, "_name": 80, "_collapse_extra": 80, "needev": 80, "function_vari": 80, "transform_vari": 80, "lazard": [80, 193, 196], "rioboo": 80, "trager": 80, "horowitz": 80, "ostrogradski": 80, "ratint": 80, "rationaltool": [80, 196], "ratint_logpart": 80, "ratint_ratpart": 80, "r525": 80, "bronstein": [80, 194, 196, 202, 218], "verlag": [80, 194], "deg": [80, 101, 116, 188, 193, 195, 196], "q_i": [80, 112, 130], "_t": [80, 116, 119, 133, 166, 175, 176, 179, 210, 220], "trigintegr": 80, "trigonometri": 80, "r526": 80, "integration_techniqu": 80, "deltaintegr": 80, "couldn": 80, "didn": [80, 89, 130], "singularityintegr": 80, "risch_integr": 80, "nonelementaryintegr": 80, "proven": [80, 93, 250, 268], "handle_first": 80, "separate_integr": 80, "rewrite_complex": 80, "forthcom": 80, "5109": 80, "outer": [80, 113, 131, 133, 149, 154, 155, 176, 179, 182, 184, 202, 208, 224, 245, 247, 248], "pop": [80, 213], "manualintegr": 80, "integral_step": 80, "student": [80, 209, 213, 220], "_i": [80, 166, 171, 197], "namedtupl": 80, "substep": 80, "sympy_gamma": 80, "app": 80, "intstep": 80, "urul": 80, "u_var": 80, "_u": [80, 166], "u_func": 80, "arctanrul": 80, "trigrul": 80, "rewriterul": 80, "addrul": 80, "powerrul": 80, "constanttimesrul": 80, "constantrul": 80, "norman": 80, "slowest": [80, 94], "retri": [80, 93], "degree_offset": 80, "unnecessary_permut": 80, "_try_heurisch": 80, "manuel": [80, 205], "poor": [80, 94], "man": [80, 194], "whittak": 80, "r527": 80, "sop": [80, 83], "cafe": 80, "pmint": 80, "r528": 80, "gedd": [80, 194], "stefanu": 80, "217": [80, 194], "r529": 80, "davenport": [80, 193, 194], "eurocam": 80, "lnc": [80, 194, 218], "157": [80, 93, 97, 194], "r530": 80, "iii": [80, 200, 216], "sigsam": 80, "bulletin": 80, "1982": [80, 185], "r531": 80, "transact": [80, 194], "1985": [80, 111, 132, 176, 245], "356": [80, 195, 218], "362": 80, "huge": [80, 93, 196, 236], "entail": 80, "delic": [80, 187], "albeit": [80, 248], "mimic": [80, 81, 180, 239], "moder": 80, "irrespect": [80, 213, 216, 241], "line_integr": 80, "as_sum": 80, "subinterv": 80, "trapezoid": [80, 89, 220], "730": 80, "809": 80, "decai": 80, "r532": 80, "riemann_sum": 80, "r533": 80, "cauchy_principal_valu": 80, "r534": 80, "cauchyprincipalvalu": 80, "int_a": 80, "uvar": 80, "ui": [80, 93, 217], "accomplish": [80, 130, 133, 251], "3aissu": 80, "3aopen": 80, "3aintegr": 80, "gauss_legendr": 80, "n_digit": 80, "legendr": [80, 93, 196, 200, 213], "r535": 80, "w_i": [80, 135, 196, 216], "7746": 80, "55556": 80, "88889": 80, "86114": 80, "33998": 80, "34785": 80, "65215": 80, "gauss_laguerr": 80, "gauss_gen_laguerr": 80, "gauss_hermit": 80, "gauss_chebyshev_t": 80, "gauss_chebyshev_u": 80, "gauss_jacobi": 80, "gauss_lobatto": 80, "gaussian_quadratur": 80, "r536": 80, "fsu": 80, "jburkardt": 80, "cpp_src": 80, "legendre_rul": 80, "laguerr": [80, 196, 200], "r537": 80, "41577": 80, "2943": 80, "2899": 80, "71109": 80, "27852": 80, "010389": 80, "22285": 80, "1889": 80, "9927": 80, "7751": 80, "8375": 80, "983": 80, "45896": 80, "417": [80, 212], "11337": 80, "010399": 80, "00026102": 80, "9855e": 80, "93laguerre_quadratur": 80, "r538": 80, "laguerre_rul": 80, "hermit": [80, 84, 89, 90, 189, 195, 196, 200, 220], "r539": 80, "2247": 80, "29541": 80, "1816": 80, "3506": 80, "3358": 80, "43608": 80, "00453": 80, "15707": 80, "72463": 80, "hermite_quadratur": 80, "r540": 80, "hermite_rul": 80, "r541": 80, "gen_hermite_rul": 80, "r542": 80, "19016": 80, "7845": 80, "5253": 80, "4493": 80, "31413": 80, "00906": 80, "97851": 80, "9904": 80, "3193": 80, "712": 80, "53087": 80, "67721": 80, "11895": 80, "0023152": 80, "r543": 80, "gen_laguerre_rul": 80, "r544": 80, "86602": 80, "0472": 80, "96593": 80, "70711": 80, "25882": 80, "5236": 80, "93gauss_quadratur": 80, "r545": 80, "chebyshev1_rul": 80, "r546": 80, "3927": 80, "7854": 80, "90097": 80, "62349": 80, "22252": 80, "084489": 80, "27433": 80, "42658": 80, "r547": 80, "chebyshev2_rul": 80, "jacobi": [80, 93, 105, 196, 200], "r548": 80, "7063": 80, "0973": 80, "33795": 80, "87174": 80, "5917": 80, "2093": 80, "050584": 80, "22169": 80, "39439": 80, "93jacobi_quadratur": 80, "r549": 80, "jacobi_rul": 80, "r550": 80, "gegenbauer_rul": 80, "lobatto": 80, "r551": 80, "3333": 80, "44721": 80, "16667": 80, "83333": 80, "93lobatto_rul": 80, "r552": 80, "page_888": 80, "intpoli": 80, "chin": 80, "al": [80, 116, 145, 193, 209, 212], "2015": [80, 219], "unit_cub": 80, "polytope_integr": 80, "eric": [80, 194], "jean": 80, "lasserr": 80, "sukumar": 80, "nonconvex": 80, "967": 80, "981": 80, "dilbert": 80, "engr": 80, "ucdavi": 80, "suku": 80, "max_degre": [80, 196], "689": [80, 97], "21875": 80, "octahedron": 80, "trivari": 80, "enable_automatic_int_sympif": 81, "enable_automatic_symbol": 81, "init_ipython_sess": 81, "argv": [81, 231], "init_python_sess": 81, "use_latex": [81, 180, 275], "quiet": 81, "str_printer": [81, 180], "latex_print": [81, 180], "pylab": 81, "stringifi": [81, 180], "sstrrepr": [81, 180, 200], "lexograph": [81, 180], "gui": [81, 180], "statu": 81, "\u03b8": [81, 110, 138, 219], "int_to_integ": 81, "decistmt": 81, "f401": 81, "0x12": 81, "num_column": [81, 180, 200, 216], "no_glob": [81, 180], "ip": [81, 154, 160, 180], "forecolor": [81, 180], "backcolor": [81, 180], "fontsiz": [81, 180, 200], "10pt": [81, 180, 200], "latex_mod": [81, 180], "print_builtin": [81, 180], "interactiveconsol": [81, 180], "preambl": [81, 180, 200], "handwritten": [81, 180], "ctan": [81, 180], "pkg": [81, 180], "dvi": [81, 180, 200], "foreground": [81, 180], "black": [81, 151, 162, 180, 200, 275], "white": [81, 180, 220], "documentclass": [81, 180, 200], "dpi": [81, 180], "u03b8": 81, "dvip": 81, "r553": 81, "r554": 81, "the_68_standard_colors_known_to_dvip": 81, "config": 81, "root_system": 82, "rootsystem": 82, "cartantyp": 82, "cartan": 82, "subalgebra": 82, "adjoint": [82, 84, 89, 143, 147], "hyperplan": 82, "k_y": 82, "r555": 82, "r556": 82, "humphrei": 82, "add_as_root": 82, "root1": 82, "root2": 82, "add_simple_root": 82, "newroot": 82, "all_root": [82, 93, 196], "cartan_matrix": 82, "dynkin_diagram": 82, "dynkin": 82, "root_spac": 82, "simple_root": 82, "type_a": 82, "typea": 82, "basic_root": 82, "iin": 82, "jth": [82, 219], "ijth": 82, "cartan_typ": 82, "highest_root": 82, "lie_algebra": 82, "positive_root": 82, "type_b": 82, "typeb": 82, "b4": 82, "b3": [82, 116, 133, 176, 250], "type_c": 82, "typec": 82, "c4": [82, 84, 86, 216], "type_d": 82, "d4": [82, 220], "dmension": 82, "type_": 82, "e6": 82, "type_f": 82, "typef": 82, "f_4": [82, 112], "f4": [82, 186], "type_g": 82, "typeg": 82, "weyl_group": 82, "weylgroup": 82, "semisimpl": 82, "isometri": 82, "coxeter_diagram": 82, "undirect": [82, 238], "s_is_j": 82, "delete_doubl": 82, "element_ord": 82, "weylelt": 82, "group_nam": 82, "group_ord": 82, "192": 82, "matrix_form": 82, "cartantype_gener": 82, "standard_cartan": 82, "dynkindiagram": 82, "cartanmatrix": 82, "sopform": 83, "minterm": 83, "dontcar": 83, "simplified_pair": 83, "combo": 83, "outcom": [83, 169, 220], "r557": 83, "quin": 83, "mccluskey_algorithm": 83, "posform": 83, "r558": 83, "anfform": 83, "truthvalu": 83, "anf": 83, "funciton": 83, "zhegalkin": 83, "r559": 83, "zhegalkin_polynomi": 83, "as_set": 83, "booleantru": 83, "doubt": [83, 116], "greet": 83, "booleanfals": 83, "universalset": 83, "nand": 83, "xnor": 83, "gate": [83, 146, 151, 153, 159, 160, 162], "perspect": [83, 93, 103, 171, 186, 233, 249, 253], "multiplex": 83, "disjunct": 83, "to_anf": 83, "oplu": [83, 150], "to_cnf": 83, "cnf": 83, "mccluskei": 83, "to_dnf": 83, "to_nnf": 83, "nnf": 83, "is_anf": 83, "is_cnf": 83, "is_dnf": 83, "is_nnf": 83, "gateinputcount": 83, "simplify_log": 83, "fewest": [83, 160], "bool_map": 83, "bool1": 83, "bool2": 83, "function1": 83, "function2": 83, "distribute_and_over_or": 83, "distribute_or_over_and": 83, "distribute_xor_over_and": 83, "eliminate_impl": 83, "truth_tabl": 83, "ibin": [83, 238], "integer_to_term": 83, "0001111011": [83, 238], "1101111000": [83, 238], "term_to_integ": 83, "bool_maxterm": 83, "maxterm": 83, "complement": [83, 86, 196, 219], "r560": 83, "canonical_normal_form": 83, "indexing_maxterm": 83, "bool_minterm": 83, "patter": 83, "r561": 83, "indexing_minterm": 83, "bool_monomi": 83, "enumar": 83, "anf_coeff": 83, "to_int_repr": 83, "all_model": 83, "unsatisfi": 83, "use_model": 83, "unsat": 83, "matrixbas": [84, 85, 86, 88, 189], "dirac": [84, 89, 101, 105, 106, 164, 200], "__abs__": [84, 191], "__add__": [84, 191, 195], "shapeerror": [84, 86, 89], "__len__": 84, "96": [84, 89, 220], "mismatch": 84, "matrix_multiply_elementwis": [84, 89], "applyfunc": [84, 85, 89, 124, 176, 221], "col": [84, 86, 89, 92, 103, 133, 189, 195, 272], "col_del": [84, 89, 272], "col_join": [84, 89, 118], "col_insert": [84, 272], "row_insert": [84, 272], "row_join": [84, 89, 118], "companion": [84, 86], "c0": [84, 86, 207, 216, 218], "sparsematrix": [84, 88, 89, 92, 201, 212], "diag": [84, 86, 89, 92, 133, 189, 226, 272], "immutablematrix": [84, 86, 88, 103, 176, 220, 245, 247, 272], "blockmatrix": [84, 86, 89], "sparsetool": [84, 92], "kth": [84, 93], "rowslist": [84, 189], "colslist": 84, "submatrix": [84, 89, 193, 220], "get_diag_block": [84, 86, 89], "decoupl": 84, "hstack": [84, 189], "is_anti_symmetr": 84, "is_diagon": [84, 89], "is_low": [84, 189], "is_upp": [84, 189], "matrixeigen": [84, 88], "is_diagonaliz": [84, 89], "is_hermitian": [84, 89], "is_lower_hessenberg": 84, "hessenberg": [84, 89], "superdiagon": 84, "is_upper_hessenberg": 84, "is_strongly_diagonally_domin": 84, "strongli": [84, 89, 189, 238], "m1": [84, 89, 93, 97, 137, 145, 163, 165, 169, 213, 216, 221, 226], "subdiagon": [84, 89], "is_weakly_diagonally_domin": 84, "weakli": [84, 238], "vacuou": 84, "jordan_block": [84, 89], "eigenv": [84, 89, 116, 118, 133, 160, 270, 272], "rectangular": [84, 89, 208, 219, 248], "r562": 84, "jordan_matrix": [84, 216], "dotprodsimp": 84, "blowup": 84, "multiply_elementwis": [84, 89], "hadamard": [84, 86, 89, 150, 151, 162, 200], "elementwis": [84, 86, 89, 221], "300": [84, 89, 93, 96, 181, 186, 197, 253], "bmatrix": [84, 86, 89, 120, 128, 129, 130, 131, 176, 184, 213], "a_0": [84, 89, 203, 213, 216, 221, 276], "vdot": [84, 86, 89, 171], "alpha_0": 84, "alpha_1": [84, 93, 195], "alpha_": [84, 185], "permute_col": 84, "permute_row": 84, "mulsimp": 84, "rmultipli": 84, "__rmul__": 84, "rot90": 84, "anticlockwis": 84, "row_del": [84, 89, 272], "todod": 84, "tolist": [84, 221], "vec": [84, 89, 133, 176, 185, 193, 250, 251, 253], "vech": 84, "check_symmetri": 84, "vstack": [84, 189], "wilkinson": 84, "w_": [84, 195], "wminu": 84, "wplu": 84, "r563": 84, "mathwork": [84, 101, 220, 272], "cleve": 84, "04": [84, 220], "r564": 84, "claredon": 84, "oxford": 84, "662": 84, "intm": 84, "undefinedkind": [84, 208], "tuplekind": [84, 208], "mutabledensematrix": [85, 189, 241], "densematrix": [85, 89], "ldldecomposit": [85, 89], "ldl": [85, 89], "choleski": [85, 89], "ludecomposit": [85, 86, 89, 272], "qrdecomposit": [85, 89], "as_immut": 85, "lower_triangular_solv": [85, 89], "upper_triangular_solv": [85, 89], "gauss_jordan_solv": [85, 89], "cholesky_solv": [85, 89], "diagonal_solv": [85, 89], "ldlsolv": [85, 89], "lusolv": [85, 89, 110, 112, 130, 134, 218, 272], "qrsolv": [85, 89], "pinv_solv": [85, 89], "permutedim": [86, 221, 222], "arraytensorproduct": [86, 222], "from_index_summ": 86, "first_index": 86, "last_index": 86, "longrightarrow": 86, "matpow": [86, 200], "hadamardproduct": [86, 200], "hadamard_product": 86, "hadamardpow": [86, 200], "ddot": [86, 89, 120, 129, 180, 183, 200, 276], "functionmatrix": 86, "lazili": [86, 206], "342923500": 86, "permutationmatrix": [86, 89], "matrixpermut": 86, "companionmatrix": 86, "matrixset": [86, 208], "submatric": [86, 89, 189, 220], "block_collaps": 86, "dat": [86, 238], "irregular": [86, 89], "ldudecomposit": 86, "ldu": 86, "2x2": [86, 92, 135, 189, 216], "noninvertiblematrixerror": [86, 272], "udldecomposit": 86, "lu": [86, 89, 189, 194], "udl": 86, "schur": 86, "penros": [86, 89], "pinv": [86, 89], "r565": 86, "schur_compl": 86, "blockdiagmatrix": [86, 89], "diag_block": 86, "alias": [87, 191], "bridg": [87, 99, 116, 239], "tension": 87, "matrixdetermin": 88, "matrixreduct": 88, "matrixsubspac": 88, "matrixcalculu": 88, "immutablesparsematrix": 88, "gramschmidt": 89, "m2": [89, 93, 97, 113, 137, 145, 163, 165, 169, 195, 213, 216, 221, 226], "126": [89, 93, 199], "150": [89, 103, 213], "v3": [89, 176, 179, 250], "glue": 89, "m3": [89, 145, 213, 221], "adj": 89, "qr": 89, "cheat": 89, "soln": 89, "gram": [89, 171, 173], "schmidt": 89, "out1": 89, "out2": 89, "1692": 89, "1551": 89, "423": 89, "6707": 89, "spot": [89, 134], "eigenvector": [89, 116, 160, 161, 185], "nullspac": [89, 189], "adjug": 89, "berkowitz": 89, "bareiss": 89, "cofactor_matrix": 89, "charpoli": [89, 189, 272], "_simplifi": 89, "purepoli": [89, 196], "samuelson": 89, "minor_submatrix": 89, "iszerofunc": [89, 272], "barei": 89, "det_lu": 89, "functiontyp": 89, "_iszero": [89, 272], "_is_zero_after_expand_mul": 89, "unrecogn": 89, "nonsquarematrixerror": [89, 216], "i3": [89, 104, 116, 133, 226], "perman": 89, "ryser": 89, "450": 89, "r566": 89, "prof": 89, "ben": 89, "berkelei": 89, "bernd": 89, "ban275": 89, "r567": 89, "permanent_": 89, "r568": 89, "r569": 89, "0904": 89, "3251": 89, "echelon_form": [89, 272], "with_pivot": 89, "echelon": [89, 189, 219, 272], "elementary_col_op": 89, "kn": [89, 96, 97], "col1": 89, "col2": 89, "km": [89, 93, 107, 111, 118, 120, 123, 124, 128, 130, 133, 172], "elementary_row_op": 89, "row1": 89, "row2": 89, "is_echelon": [89, 272], "rref": [89, 189], "pivot": [89, 189, 272], "normalize_last": 89, "rref_matrix": [89, 189], "rref_pivot": [89, 189], "301369863013699": 89, "712328767123288": 89, "noramlize_last": 89, "subspac": [89, 195], "columnspac": [89, 189], "rowspac": [89, 189], "orthonorm": [89, 133, 161, 184, 248], "rankcheck": 89, "r570": 89, "93schmidt_process": 89, "eigen": [89, 142], "bidiagonal_decomposit": 89, "ubv": 89, "bidiagon": 89, "hang": [89, 120, 124, 216, 217], "bidiagn": 89, "r571": 89, "golub": 89, "van": [89, 93, 194], "loan": 89, "r572": 89, "vslobodi": 89, "household": 89, "r573": 89, "r574": 89, "reals_onli": 89, "throw": [89, 95, 116, 195, 213, 219], "error_when_incomplet": 89, "eig": [89, 116, 133], "matrixerror": 89, "got": [89, 187, 190, 193, 196, 199, 231, 232, 238, 239, 268, 270, 271], "abel": 89, "ruffini": 89, "eigenvect": [89, 116, 133, 160, 272], "tidi": 89, "artifact": 89, "ret": 89, "eigenspac": 89, "rag": 89, "a_3": 89, "diagonaliz": [89, 272], "is_indefinit": 89, "semidefinit": [89, 220], "plot3d": [89, 186], "is_positive_definit": 89, "is_positive_semidefinit": 89, "hire": [89, 96, 97, 101, 186, 203], "is_negative_definit": 89, "is_negative_semidefinit": 89, "defer": [89, 242], "r575": 89, "definiteness_of_a_matrix": 89, "r576": 89, "positivedefinitematrix": 89, "r577": 89, "amer": 89, "259": 89, "264": [89, 218], "r578": 89, "r579": 89, "r580": 89, "r581": 89, "r582": 89, "r583": 89, "r584": 89, "r585": 89, "r586": 89, "r587": 89, "r588": 89, "r589": 89, "jordan_form": 89, "calc_transform": 89, "left_eigenvect": 89, "singular_valu": 89, "condition_numb": 89, "hessian": 89, "wronskian": [89, 216], "simpfunc": 89, "permutebkwd": 89, "permutefwd": 89, "lucombin": 89, "defici": [89, 93, 219], "matrixi": 89, "ludecomposition_simpl": [89, 272], "ludecompositionff": 89, "pa": [89, 111, 113, 128, 131, 134], "r590": 89, "zhou": 89, "jeffrei": [89, 212], "frontier": [89, 208], "china": 89, "67": [89, 194], "2008": [89, 185, 194, 196, 200], "row_swap": 89, "compres": 89, "permute_backward": 89, "permute_forward": 89, "u_": 89, "intiuit": 89, "lu_": 89, "_find_reasonable_pivot": 89, "lu_solv": [89, 189], "qr_solv": 89, "augument": 89, "167": 89, "158": [89, 97], "27261": 89, "30625": 89, "348": 89, "1914": 89, "6125": 89, "30589": 89, "198": 89, "1225": 89, "q_aug": 89, "r_aug": 89, "analytic_func": 89, "connected_compon": [89, 238], "connected_components_decomposit": 89, "relax": [89, 95], "3x1": 89, "1x3": 89, "conjugate_convent": 89, "dual": [89, 158, 164], "anti_symmetr": 89, "speak": [89, 195, 251], "freevar": 89, "underdetermin": [89, 218, 219], "free_var_index": 89, "tau0": [89, 219, 220], "tau1": 89, "taus_zero": 89, "sol_uniqu": 89, "r591": 89, "gaussian_elimin": 89, "try_block_diag": 89, "inverse_g": [89, 272], "inverse_lu": [89, 272], "inverse_adj": [89, 272], "inverse_ch": 89, "inverse_ldl": 89, "inverse_qr": 89, "inv_mod": 89, "cof": 89, "inverse_block": 89, "blockwis": 89, "ntop": 89, "key2bound": 89, "key2ij": 89, "reciproc": [89, 220, 276], "fro": 89, "sing": 89, "spectral": 89, "rd": [89, 116, 200], "pseudoinvers": 89, "r592": 89, "penrose_pseudoinvers": 89, "arbitrary_matrix": 89, "wn_m": 89, "_w0_0": 89, "_w1_0": 89, "_w2_0": 89, "59": [89, 216], "r593": 89, "obtaining_all_solutions_of_a_linear_system": 89, "print_nonzero": [89, 238], "symb": [89, 200], "rank_decomposit": 89, "r594": 89, "rank_factor": 89, "r595": 89, "piziak": 89, "odel": 89, "magazin": 89, "193": [89, 101], "2307": 89, "2690882": 89, "singular_value_decomposit": 89, "condens": [89, 219], "orthogn": 89, "v_aug": 89, "u_aug": 89, "s_aug": 89, "gj": 89, "solve_least_squar": 89, "strongly_connected_compon": [89, 189, 238], "62": [89, 193], "strongly_connected_components_decomposit": 89, "rowstart": 89, "rowend": 89, "rowsep": 89, "colsep": 89, "strprinter": [89, 180, 263], "upper_hessenberg_decomposit": 89, "213": 89, "134": 89, "216": [89, 193], "hessenbergdecomposit": 89, "jordan_cel": 89, "varlist": 89, "r596": 89, "hessian_matrix": 89, "vlist": 89, "r597": 89, "casoratian": 89, "kernel": [89, 187, 193, 195, 218], "vanish": [89, 166, 193, 196, 199, 216, 245], "rsolve_hyp": [89, 218], "randmatrix": 89, "percent": [89, 219], "prng": 89, "percentag": [89, 93], "46": [89, 96, 171, 199, 218, 220], "list2numpi": 89, "dtype": [89, 94, 187, 189, 190, 191, 200, 239], "matrix2numpi": 89, "symarrai": 89, "ndarrai": [89, 220, 226, 232], "prefix_i1_i2_": 89, "_2": [89, 175, 176, 216], "a_0_0": 89, "a_0_1": 89, "a_0_2": 89, "a_1_0": 89, "a_1_1": 89, "a_1_2": 89, "a_0_0_0": 89, "a_0_0_1": 89, "a_0_1_0": 89, "a_0_1_1": 89, "a_0_2_0": 89, "a_0_2_1": 89, "a_1_0_0": 89, "a_1_0_1": 89, "a_1_1_0": 89, "a_1_1_1": 89, "a_1_2_0": 89, "a_1_2_1": 89, "rot_axis1": 89, "rot_axis2": 89, "rot_axis3": 89, "a2idx": 89, "normalform": [90, 189], "hermite_normal_form": [90, 189, 195], "check_rank": [90, 189], "hnf": [90, 189, 195], "explos": [90, 189], "believ": [90, 93, 189], "dmdomainerror": [90, 189], "dmshapeerror": [90, 189], "r598": 90, "cohen": [90, 189, 194, 195], "mutablesparsematrix": 91, "_doktocsr": 92, "csr": 92, "ja": 92, "ia": 92, "_csrtodok": 92, "dok": 92, "1x1": [92, 220], "vert": [92, 181, 184, 253], "saw": [92, 190, 276], "dynam": [93, 100, 101, 103, 107, 109, 111, 112, 115, 118, 126, 128, 129, 130, 131, 132, 133, 134, 175, 176, 178, 179, 183, 184, 235, 236, 245], "eratosthen": 93, "_reset": [93, 196], "_list": 93, "extend_to_no": 93, "mobiusrang": 93, "primerang": 93, "10th": 93, "totientrang": 93, "1e11": 93, "50000": 93, "primal": [93, 187], "1299709": 93, "r599": 93, "prime_number_theorem": 93, "table_of_": 93, "cf": [93, 193], "28x": 93, "2c_x_": 93, "2f_log_x": 93, "2c_and_li": 93, "r600": 93, "approximations_for_the_nth_prime_numb": 93, "r601": 93, "27_number": 93, "arr1": 93, "arr2": 93, "prevprim": 93, "9th": 93, "nextprim": 93, "occupi": [93, 166, 226], "conjectur": [93, 193], "twin": 93, "bertrand": 93, "brocard": 93, "primori": 93, "r602": 93, "r603": 93, "utm": 93, "postul": 93, "r604": 93, "s_postul": 93, "primefactor": 93, "argu": 93, "cycle_length": 93, "nmax": 93, "brent": [93, 235], "floyd": 93, "cycle_detect": 93, "17737": 93, "20000": 93, "compositepi": 93, "831": 93, "smoothness_p": 93, "sm": [93, 116, 133, 187], "psm": 93, "govern": 93, "10431": 93, "annot": [93, 186, 200], "21477639576571": 93, "4410317": 93, "1787": 93, "4869863": 93, "2434931": 93, "multiplicity_in_factori": 93, "nfac": 93, "52818775009509558395695966887": 93, "is2pow": 93, "pollard_rho": 93, "1234": [93, 213], "max_step": 93, "pollard": [93, 216], "leader": 93, "16843009": 93, "32767": 93, "4i": 93, "3i": 93, "2489": 93, "1482": 93, "285": [93, 218], "leadup": 93, "r605": 93, "crandal": 93, "carl": [93, 235], "pomer": [93, 235], "229": 93, "231": [93, 176], "pollard_pm1": 93, "ilcm": 93, "likelihood": 93, "1009": 93, "igcd": [93, 188], "am": [93, 171, 200], "255": 93, "crack": 93, "617": 93, "1786": 93, "worst": [93, 196, 216], "scenario": [93, 220], "divisisor": 93, "realist": 93, "r606": 93, "236": 93, "r607": 93, "washington": 93, "2007": [93, 132, 235], "spring": [93, 108, 110, 111, 116, 121], "ent": 93, "node81": 93, "r608": 93, "toronto": 93, "yuvalf": 93, "use_ecm": 93, "65537": [93, 199], "1407633717262338957430697921446883": 93, "991": 93, "202916782076162456022877024859": 93, "4200": 93, "1764": 93, "toggl": [93, 186], "12345678910111213141516": 93, "2507191691": 93, "1231026625769": 93, "factorrat": 93, "rat": 93, "987": 93, "10000000001": 93, "99009901": 93, "divisor_count": 93, "tim": [93, 238], "stackoverflow": [93, 238, 241], "1010381": 93, "proper_divisor": 93, "proper_divisor_count": 93, "udivisor": 93, "udivisor_count": 93, "r609": 93, "unitary_divisor": 93, "r610": 93, "unitarydivisor": 93, "r611": 93, "unitarydivisorfunct": 93, "antidivisor": 93, "r612": 93, "margin": [93, 103, 186, 220], "antidivisor_count": 93, "a066272": 93, "a066272a": 93, "r613": 93, "r614": 93, "27s_totient_funct": 93, "r615": 93, "totientfunct": 93, "r616": 93, "carmichael_funct": 93, "r617": 93, "carmichaelfunct": 93, "sigma_k": 93, "m_i": [93, 193], "m_ik": 93, "r618": 93, "divisor_funct": 93, "udivisor_sigma": 93, "47450": 93, "152": 93, "r619": 93, "core_t": 93, "core_2": 93, "squarefre": [93, 195], "cubefre": 93, "9424": 93, "1178": 93, "379238": 93, "square_factor": 93, "r620": 93, "free_integ": 93, "squarefree_cor": 93, "primenu": 93, "r621": 93, "primeomega": 93, "r622": 93, "mersenne_prime_expon": 93, "mersenn": 93, "4423": 93, "r623": 93, "perfectnumb": 93, "r624": 93, "perfect_numb": 93, "is_mersenne_prim": 93, "r625": 93, "mersenneprim": 93, "abund": 93, "is_abund": 93, "r626": 93, "abundantnumb": 93, "is_defici": 93, "r627": 93, "deficientnumb": 93, "is_amic": 93, "amic": 93, "220": [93, 196], "r628": 93, "amicable_numb": 93, "symmetric_residu": 93, "v_i": [93, 195, 218], "65": [93, 103, 193, 220], "639985": [93, 193], "912285": [93, 193], "954": 93, "gf_crt": [93, 193], "solve_congru": [93, 193], "programm": [93, 200], "galoistool": [93, 193], "crt1": 93, "4536": 93, "252": 93, "756": 93, "crt2": 93, "remainder_modulus_pair": 93, "mi": [93, 200], "k1": [93, 133, 164, 190, 191, 193], "k2": [93, 133, 190], "c_kn": 93, "binomial_coefficients_list": 93, "multinomial_coeffici": 93, "k_m": 93, "k_i": [93, 193, 210], "yann": 93, "laigl": 93, "chapui": 93, "permiss": [93, 185], "multinomial_coefficients_iter": 93, "_tupl": 93, "m53": 93, "partitions_": 93, "npartit": 93, "hardi": 93, "rademach": [93, 220], "r629": 93, "1958": [93, 185], "partitionfunctionp": 93, "is_euler_pseudoprim": 93, "pseudoprim": 93, "r630": 93, "euler_pseudoprim": 93, "prep": [93, 216, 217], "r631": 93, "mersenneforum": 93, "showpost": 93, "110896": 93, "mr": 93, "miller": 93, "rabin": 93, "wit": 93, "1373651": 93, "479001599": 93, "r632": 93, "135": 93, "138": 93, "93rabin_primality_test": 93, "deterministic_vari": 93, "is_lucas_prp": 93, "selfridg": 93, "377": 93, "1159": 93, "1829": 93, "3827": 93, "5459": 93, "5777": 93, "9071": 93, "9179": 93, "bailli": 93, "wagstaff": 93, "1980": [93, 238], "mpq": [93, 190, 192], "lucaspseudoprim": 93, "a217120": 93, "lucas_pseudoprim": 93, "is_strong_lucas_prp": 93, "bpsw": 93, "10877": 93, "16109": 93, "18971": 93, "a217255": 93, "psw_primality_test": 93, "is_extra_strong_lucas_prp": 93, "grantham": 93, "mo": [93, 133, 200], "jone": [93, 138], "preprint": 93, "a217719": 93, "perl": 93, "counterexampl": [93, 276], "989": 93, "3239": 93, "jon": 93, "mcom": 93, "234": 93, "01197": 93, "bisect": [93, 196, 218], "1e3": 93, "1e23": [93, 241], "near_int": 93, "strong_pseudoprim": 93, "is_gaussian_prim": 93, "r633": 93, "gaussian_prim": 93, "residue_ntheori": 93, "n_order": 93, "cong": [93, 193], "primitive_root": [93, 195], "r634": 93, "stein": [93, 216], "r635": 93, "hackman": 93, "2009": [93, 185], "sqrt_mod": 93, "sqrt_mod_it": 93, "quadratic_residu": 93, "nthroot_mod": 93, "109": [93, 194, 213], "is_nthpow_residu": 93, "r636": 93, "is_quad_residu": 93, "legendre_symbol": 93, "genfrac": 93, "nonresidu": 93, "alpha_2": [93, 195], "alpha_k": 93, "discrete_log": 93, "prime_ord": 93, "giant": [93, 219], "pohlig": 93, "r637": 93, "discretelogarithm": 93, "r638": 93, "cryptographi": [93, 255, 262], "menez": 93, "vanston": 93, "continued_fract": 93, "continued_fraction_period": 93, "continued_fraction_reduc": 93, "continued_fraction_converg": 93, "continued_fraction_iter": 93, "106": 93, "103993": 93, "33102": 93, "104348": 93, "33215": 93, "208341": 93, "66317": 93, "292": 93, "r639": 93, "discrimin": [93, 191, 193, 195, 196], "r640": 93, "periodic_continued_fract": 93, "r641": 93, "rosen": 93, "379": [93, 196], "381": 93, "januari": 93, "1992": [93, 194, 218], "233": [93, 194, 216], "718281835": 93, "287": 93, "count_digit": 93, "1111339": 93, "0xfa": 93, "c77": 93, "is_palindrom": [93, 238], "palindrom": 93, "0o121": 93, "oct": 93, "0o171": 93, "fermion": [93, 166], "r642": 93, "b6bius_funct": 93, "r643": 93, "thoma": [93, 132], "koshi": 93, "egyptian_fract": 93, "greedi": [93, 193, 209, 212], "egyptian": 93, "r644": 93, "jewett": 93, "takenouchi": 93, "3192": 93, "1118": 93, "2580": 93, "sylvest": [93, 193], "r645": 93, "seldom": 93, "blow": 93, "doubli": 93, "exhibit": [93, 185, 195, 209], "singli": 93, "tendenc": 93, "r646": 93, "1921": 93, "golumb": 93, "1962": 93, "propos": 93, "bleicher": 93, "1972": 93, "r647": 93, "420": [93, 213], "140": 93, "574": 93, "2788": 93, "6460": 93, "11590": 93, "33062": 93, "113820": 93, "greedy_algorithm_for_egyptian_fract": 93, "ic": [93, 216], "uci": 93, "eppstein": 93, "numth": 93, "egypt": 93, "ami": 93, "ektf": 93, "hu": 93, "finalpdf": 93, "ami_42_from129to134": 93, "bbp_pi": 93, "pi_hex_digit": 93, "hex": 93, "3243f6a8885a30": 93, "324": [93, 194], "r648": 93, "numberworld": 93, "subexponenti": 93, "comfort": [93, 94], "15154262241479": 93, "15423094826093": 93, "799333555511111": 93, "809709509409109": 93, "888888877777777": 93, "914148152112161": 93, "factoris": [93, 190, 191, 216], "max_curv": 93, "lenstra": 93, "repeatedli": [93, 104, 232], "ecm_one_factor": 93, "pseudorandom": [93, 238], "25645121643901801": 93, "5394769": 93, "4753701529": 93, "9804659461513846513": 93, "4641991": 93, "2112166839943": 93, "7060005655815754299976961394452809": 93, "6988699669998001": 93, "1010203040506070809": 93, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 93, "2709077133180915240135586837960864768806330782747": 93, "248": 93, "prime_bound": 93, "error_term": 93, "siq": 93, "modn": 93, "mulipl": 93, "r649": 93, "semanticscholar": 93, "5c52": 93, "8a975c1405bd35c65993abf5a4edb667c1db": 93, "r650": 93, "rieselprim": 93, "ziki": 93, "initializing_quadratic_siev": 93, "5915587277": 93, "3267000013": 93, "facilit": [94, 126, 137, 182, 231], "000507214304613640": 94, "microsecond": 94, "000507214304614": 94, "hundr": [94, 270], "nanosecond": 94, "84147098": [94, 239, 265], "84119981": 94, "84092844": 94, "05426074": 94, "05433146": 94, "05440211": 94, "confer": [94, 274], "nano": 94, "manufactur": 94, "asnumpi": 94, "compliat": 94, "jnp": 94, "asarrai": 94, "84147096": 94, "8411998": 94, "05426079": 94, "05433151": 94, "autowrap": [94, 225, 233, 237, 257, 263], "implemented_funct": [94, 232, 239], "effort": [94, 191, 193], "50u": 94, "1u": 94, "10n": 94, "sympy_pars": 95, "local_dict": 95, "lambda_not": 95, "repeated_decim": 95, "auto_numb": 95, "factorial_not": 95, "global_dict": 95, "standard_transform": 95, "implicit_multiplication_appl": 95, "implicit_appl": 95, "implicit_multipl": 95, "convert_equals_sign": 95, "function_exponenti": 95, "stringify_expr": 95, "eval_expr": 95, "name_dict": 95, "fullform": 95, "setdelai": 95, "datatyp": [95, 191, 200, 233], "split_symbol": 95, "split_symbols_custom": 95, "_token_splitt": 95, "can_split": 95, "unsplitt": 95, "10sin": 95, "3xyz": 95, "2111": 95, "latex2sympi": 95, "typograph": 95, "parse_latex": 95, "stricter": 95, "liber": [95, 107, 270], "618": 95, "latexparsingerror": 95, "sym_expr": 95, "sympyexpress": 95, "source_cod": 95, "return_expr": 95, "definiton": 95, "src2": 95, "convert_to_expr": 95, "convert_to_c": 95, "src3": 95, "convert_to_python": 95, "src_code": 95, "filenam": [95, 200, 231, 232, 233, 241], "convert_to_fortran": 95, "continuum_mechan": [96, 97, 99], "elastic_modulu": 96, "second_mo": 96, "base_char": 96, "withstand": [96, 97], "character": [96, 97, 181, 184, 207, 220, 226, 253], "profil": 96, "shear": [96, 97], "downward": [96, 97, 99, 195], "apply_load": [96, 97, 99], "bc_deflect": [96, 97], "boundary_condit": 96, "solve_for_reaction_load": [96, 97], "shear_forc": [96, 97], "bending_mo": [96, 97], "applied_load": 96, "nm": [96, 97, 164, 221], "pointload": [96, 97], "ramp": [96, 97, 102], "parabol": 96, "apply_support": [96, 99], "loc": 96, "freedom": [96, 110, 111, 117, 120, 126, 220], "roller": [96, 97, 99], "upward": [96, 195], "r_10": 96, "r_30": 96, "4000": [96, 97], "bc_slope": [96, 97], "cross_sect": 96, "elast": [96, 97], "12000": 96, "draw": [96, 146, 200, 220, 262], "pictori": 96, "positv": 96, "ild_moment": 96, "ild_react": 96, "reaction": [96, 97, 99], "ild_shear": 96, "axial": [96, 135], "hing": [96, 97], "cantilev": [96, 97], "inertia": [96, 97, 106, 107, 108, 115, 116, 118, 119, 121, 123, 124, 125, 126, 133, 176, 182, 183, 184, 195], "666666666666667": [96, 97], "max_bmoment": 96, "max_deflect": 96, "max_shear_forc": 96, "plot_bending_mo": [96, 97], "gpa": 96, "400": [96, 186, 196], "13750": 96, "31250": 96, "plot_deflect": [96, 97], "00138541666666667": 96, "86458333333333e": 96, "04166666666667e": 96, "20833333333333e": 96, "51041666666667e": 96, "plot_ild_mo": 96, "solve_for_ild_mo": 96, "1kn": 96, "r_0": 96, "r_8": 96, "solve_for_ild_react": 96, "plot_ild_react": 96, "5kn": 96, "r_7": 96, "plotgrid": [96, 262], "plot_ild_shear": 96, "solve_for_ild_shear": 96, "plot_loading_result": [96, 97], "subplot": [96, 186], "plot_shear_forc": [96, 97], "plot_shear_stress": 96, "stress": 96, "6875": 96, "2500": 96, "15625": [96, 173], "plot_slop": [96, 97], "59375e": 96, "125e": 96, "08333333333333e": 96, "0001953125": 96, "point_cflexur": 96, "overhang": [96, 97], "10kn": 96, "20kn": [96, 97], "3kn": 96, "reaction_load": [96, 97, 99], "remove_load": [96, 99, 108], "shear_stress": 96, "beam3d": 96, "shear_modulu": 96, "apply_moment_load": 96, "solve_slope_deflect": 96, "r651": 96, "home": [96, 195, 213, 220, 231], "aau": 96, "jc": 96, "femtesemest": 96, "beams3d": 96, "axial_forc": 96, "axial_stress": 96, "load_vector": 96, "max_bending_mo": 96, "16000": 96, "495": 96, "10793": 96, "6400": 96, "301": [96, 210, 213], "560": 96, "2400": 96, "moment_load_vector": 96, "40000": 96, "4013": 96, "90300": 96, "1520": 96, "903": 96, "1600": [96, 97], "172": 96, "polar_mo": 96, "i1": [96, 104, 116, 133, 226], "1350": 96, "torsional_mo": 96, "torsion": 96, "_________________": 97, "________________": [97, 216], "_______________v": 97, "_______________": 97, "equilibrium": [97, 99, 118, 130], "20e9": 97, "25e": 97, "______________________________________________": 97, "_______________________________________________": 97, "r\u2081": 97, "r\u2082": 97, "______________________": 97, "________________________": 97, "8kn": 97, "_____________": 97, "1m": 97, "3m": 97, "2m": 97, "5m": [97, 235], "679": 97, "12kn": 97, "________________________________": 97, "____________________________________________________": 97, "o____________________________________________________": 97, "4m": 97, "concentr": [97, 220], "_____________________________________": 97, "m\u2081": 97, "m\u2082": 97, "connector": 97, "_____________________": 97, "_______________________": 97, "_____________________o_______________________": 97, "oooo": [97, 238], "r\u2083": 97, "_______i_______": 97, "flexur": 97, "rigid": [97, 99, 108, 111, 113, 116, 118, 121, 126, 133, 176, 183], "____________": 97, "____________o________________________": 97, "a\u2081": [97, 276], "a\u2082": [97, 276], "assembli": [99, 118], "joint": [99, 119, 121, 126], "add_nod": 99, "node_1": 99, "node_2": 99, "node_3": 99, "node_4": 99, "add_memb": 99, "member_1": 99, "member_2": 99, "member_3": 99, "member_4": 99, "member_5": 99, "270": 99, "360": 99, "change_member_label": 99, "new_label": 99, "change_node_label": 99, "bc_new": 99, "internal_forc": 99, "member_label": 99, "node_label": 99, "node_posit": 99, "remove_memb": 99, "remove_nod": 99, "remove_support": 99, "unstabl": 99, "revolv": 99, "tensil": 99, "r_node_1_x": 99, "r_node_1_i": 99, "66666666666667": 99, "r_node_2_i": 99, "33333333333333": 99, "66666666666666": 99, "lti": [100, 101, 102], "transferfunct": [100, 101, 103], "interconnect": [100, 103, 110], "mimo": [100, 103], "transferfunctionmatrix": [100, 103], "mimoseri": [100, 103], "mimoparallel": [100, 103], "mimofeedback": [100, 103], "control_plot": 101, "pole_zero_plot": 101, "pole_color": 101, "blue": [101, 127, 186, 200], "pole_markers": 101, "zero_color": 101, "orang": 101, "zero_markers": 101, "show_ax": 101, "marker": [101, 186], "sisolineartimeinvari": [101, 103], "markers": 101, "tf1": [101, 103], "pole_zero_numerical_data": 101, "r652": 101, "93zero_plot": 101, "siso": [101, 103], "8660254j": 101, "bode_plot": 101, "initial_exp": 101, "final_exp": 101, "freq_unit": 101, "phase_unit": 101, "semilog": 101, "hz": 101, "hertz": 101, "bode_magnitude_plot": 101, "bode_phase_plot": 101, "bode_magnitude_numerical_data": 101, "5148378120533502e": 101, "68437": 101, "36188804005": 101, "020599914256786": 101, "0205999155219505": 101, "4117304087953": 101, "00000000260573": 101, "bode_phase_numerical_data": 101, "4472354033813751e": 101, "035581932165858e": 101, "47577": 101, "3248186011": 101, "67884": 101, "09326036123": 101, "5000000000291665e": 101, "6180885085e": 101, "08895483066e": 101, "1415085799262523": 101, "14155265358979": 101, "impulse_response_plot": 101, "lower_limit": [101, 266], "upper_limit": [101, 266], "step_response_plot": 101, "ramp_response_plot": 101, "r653": 101, "impulse_response_numerical_data": 101, "nb_of_point": [101, 186], "lineover1drangeseri": [101, 186], "amplitud": [101, 140], "06616480200395854": 101, "854500743565858": 101, "9999999799999999": 101, "7042848373025861": 101, "170748906965121e": 101, "1901263495547205e": 101, "r654": 101, "step_response_numerical_data": 101, "025413462339411542": 101, "0484508722725343": 101, "670250533855183": 101, "844291913708725": 101, "023844582399907256": 101, "042894276802320226": 101, "828770759094287e": 101, "456457160755703e": 101, "mx": [101, 146, 207], "r655": 101, "ramp_funct": 101, "ramp_response_numerical_data": 101, "12166980856813935": 101, "861246379582118": 101, "4504508011325967e": 101, "006046440489058766": 101, "12499999999568202": 101, "12499999999661349": 101, "bode": 102, "impuls": [102, 103], "den": [103, 191, 212, 216], "superscript": [103, 200], "tf2": 103, "tf3": 103, "tf4": 103, "tf5": 103, "tf6": 103, "500000000000000": 103, "tf7": 103, "tf8": 103, "tf9": 103, "tf10": 103, "tf11": 103, "tf12": 103, "r656": 103, "transfer_funct": 103, "r657": 103, "dc_gain": 103, "dc": [103, 129], "from_rational_express": 103, "zerodivisionerror": [103, 191, 229, 239], "complexinfin": 103, "tf": [103, 239], "is_biprop": 103, "is_prop": 103, "is_stabl": 103, "is_strictly_prop": 103, "sys1": 103, "sys2": 103, "feedforward": 103, "fed": 103, "sit": [103, 184], "plant": 103, "compulsori": 103, "tf_1": 103, "tf_2": 103, "tf_3": 103, "tf_4": 103, "tfm_1": 103, "num_input": 103, "num_output": 103, "tfm_2": 103, "tf_5": 103, "tf_6": 103, "tf_7": 103, "tf_8": 103, "tfm_3": 103, "tfm_4": 103, "tfm_5": 103, "tfm_6": 103, "tf_9": 103, "tf_10": 103, "tfm_7": 103, "tfm_8": 103, "tfm_9": 103, "tfm_10": 103, "tfm_11": 103, "tfm_12": 103, "elem_pol": 103, "elem_zero": 103, "from_matrix": [103, 189], "m_tf": 103, "tfm": 103, "tfm1": 103, "tfm2": 103, "g4": 103, "tfm3": 103, "mimolineartimeinvari": 103, "mat_a": 103, "mat_b": 103, "mat_c": 103, "tfm_a": 103, "tfm_b": 103, "tfm_c": 103, "expr_1": 103, "expr_2": 103, "expr_3": 103, "expr_4": 103, "plant_mat": 103, "controller_mat": 103, "neg_feedback": 103, "hep": 104, "gamma_matric": [104, 106], "gammamatrix": 104, "lorentzindex": 104, "gammamatrixhead": 104, "extract_type_ten": 104, "gamma_trac": 104, "i0": [104, 138, 226], "i2": [104, 116, 133, 226], "i4": [104, 226], "i5": 104, "kahane_simplifi": 104, "spinor": 104, "ta": [104, 209], "tb": [104, 209, 231], "tc": [104, 191, 196, 209], "joseph": [104, 194], "kahan": 104, "octob": 104, "1968": 104, "simplify_gpgp": 104, "e_nl": [105, 167], "hartre": 105, "helium": 105, "2209": 105, "e_nl_dirac": 105, "spin_up": 105, "035999037000": 105, "relativist": 105, "angular": [105, 108, 110, 113, 118, 119, 120, 121, 123, 125, 126, 130, 133, 135, 139, 140, 142, 145, 163, 167, 176, 179, 185], "momentum": [105, 113, 116, 126, 133, 144, 145, 163, 167, 185, 226], "light": [105, 138, 171, 180, 187], "035999037": 105, "1012": 105, "3627": 105, "500006656595360": 105, "125002080189006": 105, "125000416028342": 105, "0555562951740285": 105, "0555558020932949": 105, "0555556377366884": 105, "psi_nlm": 105, "wave": [105, 136, 137, 138, 203, 261], "psi_": [105, 142], "nlm": 105, "radial": [105, 120, 167], "nl": [105, 167], "magnet": [105, 137, 181, 253], "azimuth": 105, "wf": [105, 118], "abs_sqrd": 105, "silver": 105, "94": [105, 194], "141": 105, "4418": 105, "mdft": 106, "mgamma": 106, "gamma_5": 106, "gamma_0": 106, "gamma_3": 106, "r658": 106, "msigma": 106, "pauli": [106, 261], "sigma_i": [106, 220], "r659": 106, "pauli_matric": [106, 141], "pat_matrix": 106, "unansw": [107, 175], "kane": [107, 110, 116, 122, 126, 127, 132, 133, 175, 176, 245], "q1d": [107, 116, 118, 120, 123, 124, 125, 128, 129, 130, 131, 175, 180, 184], "q2d": [107, 116, 118, 120, 123, 124, 125, 128, 129, 179, 180], "q3d": [107, 123, 124, 125, 128], "kinemat": [107, 110, 111, 115, 116, 118, 119, 120, 121, 123, 125, 127, 128, 130, 131, 133, 134, 176, 182, 184], "dyad": [107, 133, 248], "mprint": [107, 123, 124, 125, 126, 128], "mpprint": [107, 126, 128], "mlatex": [107, 126], "sub_dict": [107, 109, 118], "msub": [107, 126, 130], "cleaner": [107, 133, 216], "gsl": [107, 233], "lsoda": 107, "penalti": 107, "masscent": [108, 110, 113, 119, 127, 131, 133], "central_inertia": [108, 113, 119, 121], "possess": [108, 131, 226], "name_of_bodi": 108, "ixx": [108, 113, 176], "body_inertia": 108, "torqu": [108, 111, 115, 121, 128, 129, 133], "ang_vel_in": [108, 110, 116, 123, 124, 133, 176, 183], "set_ang_vel": [108, 113, 116, 118, 123, 124, 130, 131, 133, 134, 176, 178, 179, 183], "apply_forc": [108, 110, 121], "reaction_bodi": [108, 110, 121], "reaction_point": 108, "oppposit": 108, "desri": 108, "force1": 108, "b_masscent": 108, "b_frame": 108, "newtonion": [108, 110], "spring_forc": 108, "n_frame": 108, "apply_torqu": [108, 121], "torquess": 108, "torque1": 108, "b1_frame": 108, "b2_frame": 108, "clear_load": 108, "dcm": [108, 110, 116, 118, 133, 176, 183, 184, 245], "orient_axi": [108, 176, 178], "kinetic_energi": [108, 126, 131, 133], "kinet": [108, 111, 113, 126], "inerti": [108, 110, 111, 113, 118, 120, 123, 128, 129, 131, 133], "set_vel": [108, 111, 113, 116, 118, 120, 123, 124, 125, 128, 129, 130, 131, 133, 134, 179, 183], "b_ixx": 108, "b_mass": [108, 110], "masscenter_vel": [108, 110], "smart": [109, 130, 207, 213, 216], "sub1": [109, 200], "sub2": [109, 200], "reference_fram": [109, 176], "parent_joint_po": [110, 119, 121, 127], "child_joint_po": [110, 119, 121, 127], "parent_axi": [110, 119, 121, 127], "child_axi": [110, 119, 121, 127], "_generate_coordin": 110, "_generate_spe": 110, "_orient_fram": 110, "_set_angular_veloc": 110, "_set_linar_veloc": 110, "rotation_axi": 110, "parent_point": [110, 127], "child_point": [110, 127], "kde": [110, 119, 120, 127, 130], "revolut": 110, "\u03c9": 110, "pc": [110, 197], "pc_p_joint": 110, "pc_c_joint": 110, "p_frame": 110, "c_frame": 110, "theta_pc": 110, "omega_pc": 110, "pos_from": [110, 116, 118, 119, 120, 127, 133, 179, 183], "pendulum": [110, 115, 117, 121, 126, 130, 134, 183], "upper_bob": 110, "lower_bob": 110, "ceiling_joint": 110, "pendulum_joint": 110, "theta_p1": 110, "theta_p2": 110, "u_fram": 110, "l_frame": 110, "omega_p1": 110, "omega_p2": 110, "vel": [110, 116, 118, 120, 124, 127, 133, 179, 183, 251], "prismat": 110, "slide": 110, "x_pc": 110, "v_pc": 110, "wall": [110, 121], "part1": 110, "part2": 110, "j1": [110, 119, 121, 145, 163], "j2": [110, 119, 121, 145, 163], "x_j1": 110, "w_frame": 110, "x_j2": 110, "p1_frame": 110, "v_j1": 110, "damper": [110, 111, 116, 121], "form_eom": [110, 121, 127], "mass_matrix_ful": [110, 111, 116, 121, 128, 129], "forcing_ful": [110, 111, 116, 121, 128, 129], "mass_matrix": [110, 111, 115, 118, 123, 124, 128, 129, 134], "kanesmethod": [110, 111, 116, 118, 119, 120, 121, 123, 124, 127, 128, 130, 133], "lagrangesmethod": [110, 120, 125, 126, 129, 130], "qd": [110, 111, 118, 128, 179], "inv_method": [110, 111], "solveabl": 110, "q_ind": [111, 112, 116, 118, 119, 120, 123, 124, 128, 130, 133], "u_ind": [111, 112, 116, 118, 119, 120, 123, 124, 128, 130, 133], "kd_eq": [111, 116, 118, 119, 120, 123, 124, 130, 133], "q_depend": [111, 118, 119, 120, 128, 133], "configuration_constraint": [111, 118, 119, 120, 128], "u_depend": [111, 118, 119, 120, 128, 133], "velocity_constraint": [111, 118, 119, 120, 128, 133], "acceleration_constraint": 111, "u_auxiliari": [111, 124, 128, 133], "forcelist": [111, 116, 119, 120, 123, 124, 129, 130, 133], "levinson": [111, 132, 176, 245], "udot": [111, 118], "ud": [111, 128], "kd": [111, 118, 123, 124, 128], "fl": [111, 118, 128, 129, 133, 194], "bl": [111, 118, 128, 133], "frstar": [111, 116, 118, 120, 123, 124, 128, 130, 133], "kanes_equ": [111, 116, 118, 120, 123, 124, 128, 130, 133], "a_and_b": [111, 112, 120], "auxiliary_eq": [111, 124], "constrain": [111, 120, 129, 133], "kindiffdict": [111, 118, 123, 124, 128, 133], "new_method": [111, 120], "intens": [111, 112, 135, 138], "perm_mat": [111, 112, 130], "op_point": [111, 112, 120, 130], "beforehand": [111, 233], "to_linear": [111, 130], "recalcul": [111, 196], "hol_coneq": [111, 120, 129], "nonhol_coneq": [111, 120, 129], "nonconserv": 111, "form_lagranges_equ": [111, 120, 125, 129, 130], "qdot": [111, 118, 119, 179], "qdoubledot": 111, "lam": [111, 112, 134], "lagranges_equ": 111, "qd_ind": [111, 130], "q_dep": [111, 128, 130], "qd_dep": [111, 130], "solve_multipli": [111, 120], "sol_typ": 111, "array_lik": 111, "f_3": [112, 115, 134, 216], "f_c": [112, 120], "f_v": [112, 120], "f_a": 112, "q_d": 112, "u_i": [112, 130, 183, 193], "u_d": [112, 133], "q_op": [112, 120], "u_op": [112, 120], "qd_op": 112, "ud_op": [112, 120], "spatial": [113, 140, 176, 200], "init_vprint": [113, 114, 131, 134, 176, 178, 179, 182, 183, 184], "locatenew": [113, 118, 120, 123, 124, 125, 130, 131, 133, 134, 177, 179, 181, 183], "parallel_axi": 113, "inertia_tupl": 113, "mv": 113, "iyi": [113, 176], "izz": [113, 176], "ixi": [113, 176], "iyz": [113, 176], "izx": 113, "yy": [113, 184, 216], "yz": [113, 184, 186], "zx": [113, 184], "pos_vec": 113, "px": [113, 156, 161, 226], "body1": 113, "body2": 113, "body3": 113, "h2": 113, "multibodi": [113, 116, 126, 132, 133, 134, 183], "vprint": [114, 175, 179, 182, 184], "vpprint": [114, 175, 182, 184], "vlatex": [114, 175, 176, 182, 184], "coord_stat": 115, "right_hand_sid": 115, "coordinate_deriv": [115, 134], "alg_con": [115, 134], "output_eqn": 115, "coord_idx": [115, 134], "speed_idx": [115, 134], "m_3": [115, 134, 145, 185], "exogen": [115, 134], "ref_fram": 115, "graviti": [115, 116, 120, 121, 123, 125, 133, 181, 253], "theta_dot": 115, "kin_explicit_rh": [115, 134], "dyn_implicit_mat": [115, 134], "dyn_implicit_rh": [115, 134], "symsystem": 115, "dae": [115, 134], "adjust": [115, 203, 207], "comb_implicit_mat": [115, 134], "comb_implicit_rh": [115, 134], "kinema": 115, "comb_explicit_rh": [115, 134], "compute_explicit_form": 115, "awhil": 115, "constant_symbol": 115, "dynamic_symbol": 115, "motiongenesi": [116, 133], "double_pendulum": 116, "motionvari": [116, 133], "newtonian": [116, 133], "simprot": [116, 133], "n_a": 116, "n_b": 116, "w_a_n": 116, "w_b_n": [116, 133], "p_o_p": 116, "p_p_r": 116, "v_o_n": [116, 133], "v2pt": [116, 133], "v_p_n": 116, "v_r_n": 116, "force_p": 116, "force_r": 116, "tfinal": 116, "integstp": 116, "some_filenam": 116, "parse_autolev": 116, "sympy_cod": 116, "include_numer": 116, "include_pydi": 116, "pydi": [116, 133, 176], "u1d": [116, 118, 120, 123, 124, 128], "u2d": [116, 118, 120, 123, 124, 128], "frame_n": 116, "frame_a": 116, "frame_b": 116, "point_o": 116, "particle_p": 116, "p_pt": 116, "particle_r": 116, "r_pt": 116, "set_po": [116, 179, 183], "v2pt_theori": [116, 118, 123, 124, 125, 130, 131, 133, 134, 179, 183], "initial_condit": [116, 133], "overwritten": 116, "e2row": 116, "eigvec": [116, 133], "eigenvec": 116, "deg2rad": 116, "0174533": 116, "wo": 116, "coef": [116, 133], "u3": [116, 118, 119, 121, 123, 124, 128, 133, 179, 183], "strai": 116, "reassign": 116, "inher": [116, 239, 268], "rhs_x": 116, "i_b_bo": 116, "body_b": 116, "body_b_f": 116, "b_cm": 116, "b_f": 116, "scene": [116, 212, 268], "i_c_d": 116, "i_p_q": 116, "i_b_o": 116, "e3": [116, 207, 216], "i_p_o": 116, "e4": [116, 207], "p_so_o": 116, "nicheck": 116, "plug": [116, 171], "hurdl": 116, "gitlab": 116, "repo": 116, "ch4": 116, "ch5": 116, "ch6": 116, "cst": 116, "grammar": [116, 212], "roll": [117, 118, 126, 183, 220], "disc": [117, 126, 183], "bicycl": [117, 126, 132], "nonminim": [117, 126, 130], "linkag": [117, 126], "meijaard2007": [118, 132], "steer": [118, 132], "purposefulli": 118, "mechanics_print": [118, 119, 123, 124, 125, 126, 127, 128, 129], "yaw": 118, "ang": 118, "rear": 118, "wheel": 118, "pitch": 118, "q4": [118, 128, 178], "q5": [118, 178], "q4d": [118, 128], "q5d": 118, "u4": [118, 124, 128, 133], "u5": [118, 124], "u6": [118, 124], "u3d": [118, 123, 124], "u4d": 118, "u5d": 118, "u6d": 118, "explanatori": 118, "wfrad": 118, "wrrad": 118, "htangl": 118, "forkoffset": 118, "forklength": 118, "framelength": 118, "forkcg1": 118, "forkcg3": 118, "framecg1": 118, "framecg3": 118, "iwr11": 118, "iwr22": 118, "iwf11": 118, "iwf22": 118, "iframe11": 118, "iframe22": 118, "iframe33": 118, "iframe31": 118, "ifork11": 118, "ifork22": 118, "ifork33": 118, "ifork31": 118, "mframe": 118, "mfork": 118, "mwf": 118, "mwr": 118, "wr": 118, "tempfram": 118, "tempfork": 118, "orientnew": [118, 120, 123, 124, 125, 130, 134, 176, 178, 179, 181, 183, 184], "wr_cont": 118, "wr_mc": 118, "frame_mc": 118, "fork_mc": 118, "wf_mc": 118, "wf_cont": 118, "flip": [118, 151, 160, 220], "frame_i": 118, "fork_i": 118, "wr_i": 118, "wf_i": 118, "bodyfram": 118, "bodyfork": 118, "bodywr": 118, "bodywf": 118, "nonholonom": 118, "closer": [118, 219, 271], "slip": [118, 122, 124, 183], "replic": 118, "conlist_spe": 118, "conlist_coord": 118, "gravit": [118, 123, 169, 181, 253], "aforement": [118, 181, 213, 251], "paperradrear": 118, "paperradfront": 118, "hta": 118, "trailpap": 118, "08": 118, "rake": 118, "paperwb": 118, "02": 118, "paperframecgx": 118, "paperframecgz": 118, "paperforkcgx": 118, "paperforkcgz": 118, "framecgnorm": 118, "framecgpar": 118, "tempa": 118, "tempb": 118, "tempc": 118, "paperforkl": 118, "forkcgnorm": 118, "forkcgpar": 118, "upright": 118, "val_dict": 118, "0603": 118, "1405": 118, "05892": 118, "00708": 118, "00756": 118, "kdd": [118, 123, 124], "centripet": 118, "corioli": 118, "forcing_lin": 118, "mm_full": 118, "_k_kqdot": 118, "xdot": 118, "lean": [118, 123, 125], "amat": 118, "summari": [119, 212, 231, 255], "jointsmethod": [119, 121, 126], "q_1": [119, 120, 121, 127, 130, 146, 183, 196, 213], "q_2": [119, 120, 121, 130, 183], "q_3": [119, 121, 183], "u_1": [119, 120, 121, 127, 183, 195, 216], "u_2": [119, 120, 121, 183, 195, 216], "u_3": [119, 121, 183], "densiti": [119, 220, 231, 254], "link1": 119, "link2": 119, "link3": 119, "link4": 119, "joint1": 119, "pinjoint": [119, 121], "joint2": 119, "joint3": 119, "j3": [119, 121, 145, 163], "fh": 119, "fhd": 119, "_method": 119, "_form_eom": 119, "eom": [120, 121, 130], "theta1": 120, "dq_dict": 120, "presimplifi": 120, "inp_vec": [120, 130], "lag": [120, 125, 130], "lm": [120, 129, 130, 193, 196], "lag_eq": [120, 130], "lam_op": 120, "prismaticjoint": [121, 127], "mb": [121, 133], "ibzz": 121, "compound_pend": 121, "simple_pend": 121, "slider": [121, 127], "rev1": 121, "rev2": 121, "w_r_n_qd": [123, 124], "dmc": [123, 124, 125], "uv": [123, 124, 166], "bodyd": [123, 124, 125], "bodylist": [123, 124], "revisit": [124, 183], "kane1985": [124, 128, 131, 132], "thorough": [124, 130, 213], "simplifc": 124, "f3": [124, 186, 200], "necessit": 124, "factor_term": [124, 196, 209, 212], "simplify_auxiliary_eq": 124, "lrh": 125, "planet": 126, "robot": 126, "fascin": 126, "trajectori": 126, "challeng": 126, "came": [126, 271], "tackl": [126, 233], "organ": 126, "amen": 126, "arduou": 126, "momenta": [126, 145], "symbolicsystem": 126, "rough": [126, 171], "inertia_of_point_mass": 126, "linear_momentum": [126, 131, 133], "angular_momentum": [126, 131, 133], "kanemethod": 126, "find_dynamicsymbol": 126, "red": [127, 186], "parent_fram": 127, "child_fram": 127, "child_mass": 127, "f_h": 128, "nh": 128, "ku": [128, 200], "k_d": 128, "f_d": [128, 129, 193], "dnh": 128, "f_r": [128, 130, 193], "speed_con": 128, "coord_con": 128, "u_dep": 128, "m_d": 129, "lam1": 129, "0_": 130, "blajer1994": [130, 132], "brought": [130, 220], "vel_p": 130, "a_op": 130, "b_op": 130, "m_op": 130, "a_lin": 130, "hasn": 130, "wikidyad": [131, 182], "wikidyadicproduct": [131, 182], "juxtaposit": [131, 175, 248], "hat": [131, 175, 176, 180, 181, 183, 184, 248, 249, 251, 253, 254], "otim": [131, 221], "l_p": 131, "likins1973": [131, 182], "l_b": 131, "requisit": 131, "t_p": 131, "t_b": 131, "t_t": 131, "virtu": [131, 133], "blajer": 132, "wojciech": 132, "werner": 132, "schiehlen": 132, "walter": 132, "schirm": 132, "kane1983": [132, 184], "likin": [132, 182], "david": [132, 196], "spacecraft": 132, "1983": [132, 235], "meijaard": 132, "jim": 132, "papadopoulo": 132, "ruina": 132, "schwab": 132, "royal": 132, "societi": [132, 213], "2084": 132, "1955": 132, "982": 132, "lectur": [133, 194, 220], "rigibodi": 133, "proprietari": 133, "k3": [133, 190], "k4": 133, "b11": 133, "b12": 133, "b21": 133, "b22": 133, "xd": 133, "xd2": 133, "y1d": 133, "y2d": 133, "tina": 133, "overwrit": [133, 175], "dt2": 133, "dy2": 133, "ty": 133, "linsolv": [133, 198, 214, 218, 277], "nonlinsolv": [133, 214, 218, 277], "rowmatrix": 133, "colmatrix": 133, "diagmat": 133, "eigval": 133, "row_matrix": 133, "col_matrix": 133, "ao": 133, "i12": 133, "i23": 133, "i31": 133, "bf": 133, "p_o_q": 133, "mag": 133, "unitvec": 133, "qo": 133, "p_p_q": 133, "partial_veloc": [133, 176, 179], "a_o_n": 133, "set_acc": [133, 179, 183], "qb": [133, 188], "qbd": 133, "alf_b_n": 133, "set_ang_acc": [133, 176], "ang_acc_in": [133, 176], "force_o": 133, "torque_a": 133, "qa": 133, "qad": 133, "a_b": 133, "v1pt": 133, "v1pt_theori": [133, 179, 183], "a1pt": 133, "a1pt_theori": [133, 179], "a2pt": 133, "a2pt_theori": [133, 179, 183], "angvel": 133, "force_vector": 133, "center_of_mass": 133, "kindiff": 133, "ke": 133, "configura": 133, "tion_constraint": 133, "pendent": 133, "velocity_con": 133, "traint": 133, "acceleration_": 133, "u_auxilia": 133, "ry": 133, "matlplotlib": 133, "stiff": 133, "damp": 133, "legend": [133, 186, 203], "introspect": 133, "rich": [133, 212], "media": [133, 139], "histori": 133, "esqu": 133, "cpython": 133, "pertin": [134, 187, 195], "alg_con_ful": 134, "symsystem1": 134, "symsystem2": 134, "symsystem3": 134, "raytransfermatrix": 135, "geometricrai": 135, "beamparamet": 135, "geometric_conj": 135, "gauss_conj": 135, "conjugate_gauss_beam": 135, "lens": 135, "gaussopt": 135, "wavelen": 135, "z_r": 135, "wavelength": [135, 140], "waist": 135, "rayleigh": [135, 220], "refract": [135, 137, 139, 140], "530e": 135, "88679245283019": 135, "92753330865999": 135, "w_0": [135, 213], "00100000000000000": 135, "freespac": 135, "00101413072159615": 135, "00210803120913829": 135, "r660": 135, "complex_beam_paramet": 135, "r661": 135, "gaussian_beam": 135, "spread": [135, 200, 220, 235], "00053": 135, "goui": 135, "55998576005696": 135, "2809": 135, "peak": 135, "waist_approximation_limit": 135, "paraxi": [135, 139], "06e": 135, "curvedmirror": 135, "curvedrefract": 135, "flatmirror": 135, "flatrefract": 135, "2x1": 135, "thinlen": 135, "r662": 135, "ray_transfer_matrix_analysi": 135, "waist_in": 135, "waist_out": 135, "s_in": 135, "s_out": 135, "w_o": 135, "gaussian_conj": 135, "z_r_in": 135, "incid": [135, 139], "z_r_out": 135, "emerg": [135, 188], "geometric_conj_ab": 135, "geometric_conj_af": 135, "geometric_conj_bf": 135, "rayleigh2waist": 135, "waist2rayleigh": 135, "optic": [137, 138, 139, 140, 261], "permitt": 137, "permeabl": 137, "fermat": 137, "electr": [137, 139, 181, 251, 253], "electromagnet": [137, 181, 226, 253], "intrinsic_imped": 137, "149896229": [137, 140], "kilogram": [137, 169, 171, 173], "1250000": 137, "amper": 137, "refractive_index": 137, "299792458": [137, 140, 173], "r663": 137, "optical_medium": 137, "travel": [137, 140, 181, 251, 253], "stoke": [138, 252], "mueller": 138, "jones_vector": 138, "stokes_vector": 138, "half_wave_retard": 138, "polarizing_beam_splitt": 138, "jones_2_stok": 138, "\u2148": [138, 185, 199, 200, 219, 277], "\u03c7": 138, "\u03c8": 138, "i\u2080": 138, "plate": 138, "hwp": 138, "splitter": 138, "transmit": [138, 139], "pb": 138, "transmitted_port": 138, "reflected_port": 138, "transmitted_pow": 138, "reflected_pow": 138, "r664": 138, "jones_calculu": 138, "r665": 138, "mueller_calculu": 138, "r666": 138, "stokes_paramet": 138, "retard": 138, "poincar\u00e9": 138, "tilt": 138, "mayor": 138, "linear_polar": 138, "transmiss": [138, 139], "mueller_matrix": 138, "quarter_wave_retard": 138, "quarter": 138, "phase_retard": 138, "\u03b4": 138, "phia": 138, "phib": 138, "4x1": [138, 220], "phi_a": 138, "phi_b": 138, "qwp": 138, "reflective_filt": 138, "unpolar": 138, "transmissive_filt": 138, "attenu": 138, "transmitt": 138, "ndf": 138, "refraction_angl": 139, "fresnel_coeffici": 139, "brewster_angl": 139, "critical_angl": 139, "lens_makers_formula": 139, "mirror_formula": 139, "lens_formula": 139, "hyperfocal_dist": 139, "transverse_magnif": 139, "medium1": 139, "medium2": 139, "brewster": 139, "926093295503462": 139, "onset": 139, "850908514477849": 139, "02005": 139, "angle_of_incid": 139, "polaris": 139, "te": 139, "undergo": 139, "317843553417859": 139, "348645229818821": 139, "658921776708929": 139, "651354770181179": 139, "235625382192159": 139, "971843958291041": 139, "816477005968898": 139, "577377951366403": 139, "r667": 139, "fresnel_equ": 139, "coc": 139, "0033": 139, "focal_length": 139, "n_len": 139, "n_surr": 139, "thick": 139, "1515151515151": 139, "0000000000000": 139, "3418463277618": 139, "41152": 139, "magnif": 139, "twave": 140, "time_period": 140, "wavenumb": 140, "phi1": 140, "phi2": 140, "w1": [140, 212], "w3": [140, 200], "superposit": [140, 151, 162, 187], "angular_veloc": 140, "tempor": 140, "r668": 141, "paulialgebra": 141, "evaluate_pauli_product": 141, "paulimatric": 141, "sigma3": 141, "nodal": [142, 167, 187], "hw": [142, 167], "coherent_st": 142, "coher": [142, 168, 174], "1d": [142, 144, 157, 176, 225], "wavefunct": [142, 155, 164, 167, 261], "r669": 143, "__cmp__": [143, 147, 166], "dagger": [143, 147, 153, 155, 158, 160, 165, 166], "operatorset": [144, 156], "positionbra3d": 144, "eigenbra": [144, 157, 163], "positionket3d": 144, "eigenket": [144, 157, 163], "positionstate3d": 144, "eigenst": [144, 156, 161, 163, 164], "position_x": 144, "position_i": 144, "position_z": 144, "pxbra": [144, 156], "pxket": [144, 156, 161], "pxop": [144, 156, 161], "xbra": [144, 156, 161], "xket": [144, 156, 161], "xop": [144, 156, 161], "yop": 144, "zop": 144, "uncoupl": [145, 163], "r670": 145, "j_3": [145, 163, 185], "r671": 145, "wigner3j": [145, 185], "wigner": [145, 163, 220, 261], "varshalovich": [145, 163], "zyla": 145, "theor": 145, "phy": [145, 171, 185], "083c01": 145, "r672": 145, "w3j": 145, "715": [145, 185, 200], "wigner6j": [145, 185], "j12": [145, 163], "j23": 145, "6j": [145, 185], "wigner9j": [145, 185], "j4": 145, "j34": 145, "j13": 145, "j24": 145, "9j": [145, 185], "cg_simp": 145, "r673": 145, "clebsh": 145, "rethink": 146, "figsiz": 146, "circuitplot": 146, "nqubit": [146, 150, 151, 160], "control_lin": 146, "gate_idx": [146, 150], "min_wir": 146, "max_wir": 146, "control_point": 146, "wire_idx": 146, "not_point": 146, "one_qubit_box": 146, "box": [146, 151, 153, 162, 164, 254], "qubit": [146, 150, 151, 152, 153, 159], "swap_point": 146, "two_qubit_box": 146, "createcg": 146, "latexnam": 146, "mock": 146, "mz": 146, "circuit_plot": 146, "min_qubit": [146, 150], "autogener": 146, "wire": 146, "q_0": [146, 213], "j_0": 146, "r674": 147, "comm": [147, 166, 226], "plank": 148, "r675": 148, "05457162000000e": 148, "planck_const": 148, "hermetian": 149, "r676": 149, "r677": 149, "ket": [149, 154, 155, 156, 158, 160, 161, 164, 166], "bra": [149, 154, 155, 156, 158, 160, 161, 164, 166], "innerproduct": [149, 154, 155, 161, 163, 166], "outerproduct": [149, 155], "seamlessli": 149, "hermitian_adjoint": 149, "hermitian_transpos": 149, "_apply_operators_qubit": 150, "gate_sort": 150, "gate_simp": 150, "ugat": 150, "cgate": 150, "control_valu": 150, "cnot": 150, "eval_control": 150, "plot_gat": 150, "circ_plot": 150, "simplify_cg": 150, "cphase": 150, "cnotgat": 150, "qappli": [150, 151, 153, 155, 160], "get_target_matrix": 150, "represen": 150, "hadamardg": 150, "identityg": 150, "onequbitg": 150, "phaseg": 150, "swapgat": 150, "target1": 150, "target2": 150, "tgate": 150, "twoqubitg": 150, "xgate": 150, "ygate": 150, "zgate": 150, "bubbl": 150, "random_circuit": 150, "ngate": 150, "gate_spac": 150, "mermin": 151, "_represent_zg": 151, "oracleg": 151, "oracl": 151, "intqubit": [151, 160], "search_funct": 151, "wgate": 151, "apply_grov": 151, "grover_iter": 151, "qstate": 151, "wv": 151, "superposition_basi": 151, "numqubit": 151, "basis_st": 151, "matt": 152, "complexspac": 152, "directsumhilbertspac": 152, "r678": 152, "hilbertspac": 152, "fockspac": 152, "hilbert_spac": [152, 155, 164], "direct_sum": 152, "quantiz": [152, 261], "r679": 152, "mess": [152, 216, 219, 276], "fock_spac": 152, "r680": 152, "tensorpowerhilbertspac": 152, "r681": 152, "tensor_product": 152, "tensorproducthilbertspac": 152, "r682": 152, "clebsch": [153, 163, 185], "gordan": [153, 163, 185], "hilbert": [153, 155, 161], "grover": 153, "qft": [153, 162], "shor": 153, "brabas": [154, 155, 161, 164], "ketbas": [154, 155, 161, 164], "r683": 154, "inner_product": 154, "apply_oper": [155, 166], "identityoper": 155, "r684": 155, "r685": 155, "polymoni": 155, "operator_": 155, "28physic": 155, "old_assumpt": 155, "r686": 155, "outer_product": 155, "unitaryoper": 155, "operators_to_st": 156, "state_to_oper": 156, "_operators_to_st": 156, "state_map": 156, "_state_to_oper": 156, "statebas": [156, 161, 164], "piab": 157, "piabbra": 157, "piabhamiltonian": 157, "piabket": 157, "ip_doit": 158, "smarter": [159, 209], "rk": 159, "iqft": 159, "rkgate": 159, "qtf": 159, "povm": 160, "as_int": [160, 241], "qubit_valu": 160, "intqubitbra": 160, "00001": 160, "qubitbra": 160, "matrix_to_dens": 160, "matrix_to_qubit": 160, "measure_al": 160, "ensembl": 160, "measure_all_oneshot": 160, "oneshot": 160, "measure_parti": 160, "measure_partial_oneshot": 160, "qubit_to_matrix": 160, "enumerate_st": 161, "_enumerate_st": 161, "foo_1": 161, "foo_2": 161, "foo_3": 161, "test2": 161, "bar_4": 161, "bar_5": 161, "bar_10": 161, "get_basi": 161, "replace_non": 161, "operator_to_st": 161, "qexpr": 161, "integrate_result": 161, "orig_expr": 161, "x_ket": 161, "x_op": 161, "rep_expect": 161, "px_2": 161, "px_1": 161, "rep_innerproduct": 161, "_repres": 161, "_represent_foobasi": 161, "foobasi": 161, "_represent_szop": 161, "szupket": 161, "szop": 161, "sz": 161, "cmod": 162, "reformat": 162, "period_find": 162, "momemtum": 163, "j2op": 163, "jxbra": 163, "jx": 163, "jzket": 163, "jxbracoupl": 163, "jcoupl": 163, "jzketcoupl": 163, "jxket": 163, "jxketcoupl": 163, "jybra": 163, "jy": 163, "jybracoupl": 163, "jyket": 163, "jyketcoupl": 163, "jzbra": 163, "jz": 163, "jzbracoupl": 163, "j_4": [163, 185], "argular": 163, "jzop": 163, "passiv": 163, "r687": 163, "wignerd": 163, "mp": [163, 218, 234], "jm": 163, "jj": 163, "r688": 163, "jcoupling_list": 163, "coupledspinst": 163, "spinstat": 163, "r689": 164, "dual_class": 164, "mn": [164, 200, 220], "ket_not": 164, "r690": 164, "k0": [164, 191, 193, 220], "orthogonalbra": 164, "orthogonalket": 164, "orthogonalst": 164, "_eval_adjoint": 164, "timedepbra": 164, "timedepst": 164, "timedepket": 164, "prob": [164, 220], "412214747707527": 164, "matrix_tensor_product": 165, "axb": 165, "xdagger": 165, "axc": 165, "bxc": 165, "tensor_product_simp": 165, "cxd": 165, "boson": 166, "fetter": 166, "welecka": 166, "secondqu": 166, "annihilateboson": 166, "fockstateket": 166, "bket": 166, "fockstatebosonket": 166, "annihilatefermion": 166, "createboson": 166, "is_only_q_annihil": 166, "destroi": [166, 209], "quasi": 166, "hole": 166, "is_only_q_cr": 166, "is_q_annihil": 166, "is_q_creat": 166, "antisymmetrictensor": 166, "bbra": 166, "fockstatebosonbra": 166, "bd": 166, "bosonicbasi": 166, "fock": 166, "NO": 166, "createfermion": 166, "wick": 166, "fbra": 166, "fockstatefermionbra": 166, "fket": 166, "fockstatefermionket": 166, "fixedbosonicbasi": 166, "n_particl": 166, "n_level": 166, "fockstat": 166, "occup": 166, "bosonbra": 166, "fockstatebra": 166, "fermi_level": 166, "r691": 166, "textwrap": [166, 241], "_q": 166, "get_subno": 166, "fermionicoper": 166, "has_q_annihil": 166, "q_annihil": 166, "has_q_creat": 166, "leftmost": 166, "q_creator": 166, "iter_q_annihil": 166, "iter_q_cr": 166, "0x": 166, "permutationoper": 166, "get_permut": 166, "varbosonicbasi": 166, "n_max": 166, "creator": 166, "evaluate_delta": 166, "einstein": [166, 226], "d_ij": 166, "_j": [166, 171, 185, 202], "d_ip": 166, "d_qp": 166, "matrix_rep": 166, "simplify_index_permut": 166, "permutation_oper": 166, "schemat": [166, 171], "abij": 166, "abji": 166, "baij": 166, "baji": 166, "permutlist": 166, "substitute_dummi": 166, "new_indic": 166, "pretty_indic": 166, "_get_ordered_dummi": 166, "_c": 166, "_d": 166, "index_group": 166, "string_of_lett": 166, "my_dummi": 166, "_v": [166, 184], "_p_0": 166, "_p_1": 166, "keep_only_fully_contract": 166, "sho": 167, "isotrop": 167, "mk": [168, 171], "legal": 168, "temperatur": [168, 181, 253], "dimensions": 168, "dimsys_si": [168, 169], "get_dimensional_depend": [168, 169], "has_integer_pow": 168, "dim_si": 168, "base_dim": 168, "derived_dim": 168, "dimensional_depend": 168, "can_transf_matrix": 168, "useless": [168, 191, 193], "inv_can_transf_matrix": 168, "dim_can_vector": 168, "dim_vector": 168, "is_consist": [168, 174], "is_dimensionless": 168, "list_can_dim": 168, "print_dim_bas": 168, "gravitational_const": [169, 173], "equivalent_dim": 169, "grav_eq": 169, "kepler": [169, 245], "venu": 169, "701": 169, "dai": [169, 173, 216], "venus_a": 169, "108208000e3": 169, "solar": 169, "solar_mass": 169, "9891e30": 169, "convert_to": [169, 173, 189, 195], "5112118495813": 169, "659097795948": 169, "astrophys": 169, "ill": 169, "astrophysicist": 170, "ua": [170, 188], "earth": [170, 181, 253], "sun": 170, "theoricist": 170, "philosophi": [170, 216, 219, 261], "mole": 171, "dimensionless": 171, "unavoid": 171, "d_3": 171, "d_2": [171, 196, 220], "underbrac": [171, 183], "countabl": [171, 219], "pmatrix": 171, "kg": [171, 254], "glu": 171, "men": 171, "heat": 171, "joul": 171, "calori": 171, "stori": 171, "chemistri": 171, "page52": 171, "1952": 171, "page78": 171, "deboer79": 171, "boer": 171, "818": 171, "levyleblond77": 171, "l\u00e9vy": 171, "leblond": 171, "conceptu": [171, 187, 253], "rivista": 171, "del": [171, 235, 252, 276], "nuovo": [171, 185], "cimento": [171, 185], "1977": 171, "187": [171, 194], "214": 171, "anticip": 171, "bin_prefix": 172, "abbrev": [172, 173, 200], "latex_repr": [172, 173], "encapsul": [172, 193, 219, 233], "kilo": 172, "scale_factor": 173, "pretty_unicode_repr": 173, "pretty_ascii_repr": 173, "mathml_presentation_repr": 173, "is_prefix": 173, "abbrevi": [173, 188, 200, 219, 221], "speed_of_light": 173, "reference_quant": 173, "target_unit": 173, "mile": 173, "atomic_mass_const": 173, "centimet": 173, "25146": 173, "609344": 173, "86400": 173, "660539060e": 173, "300000": 173, "planck": 173, "62963087839509e": 173, "base_unit": 174, "descr": 174, "dimension_system": 174, "derived_unit": 174, "overridden": [174, 187, 202, 276], "get_units_non_prefix": 174, "to_matrix": [175, 176, 184, 189, 195, 245, 247, 249], "rigidli": 175, "entireti": 175, "_str": 175, "otherfram": [176, 245], "n_alpha_b": 176, "ny": 176, "_3": 176, "rot_typ": [176, 179, 181], "rot_ord": [176, 179, 246], "orient_body_fix": 176, "orient_space_fix": 176, "orient_quaternion": 176, "tait": [176, 245, 246], "bryan": [176, 245, 246], "quaternion": [176, 179, 184, 245, 246, 256], "userwarn": [176, 229, 236, 272], "rotation_ord": [176, 245, 246], "xzx": 176, "zxz": [176, 184, 245, 246], "xyx": [176, 245, 246], "yzy": 176, "zyz": 176, "yxy": [176, 184], "yzx": [176, 184], "zxy": 176, "xzy": 176, "zyx": 176, "yxz": 176, "orient_explicit": 176, "lambda_x": [176, 245, 246], "lambda_i": [176, 245, 246], "lambda_z": [176, 245, 246], "q0": [176, 216, 245, 246], "newnam": 176, "gen_spe": [176, 179], "variable_map": 176, "a_x": [176, 184, 200], "b_x": [176, 178, 184, 226], "b_y": [176, 178, 184, 226], "a_z": [176, 184], "b_z": [176, 184, 226], "inlist": 176, "var_in_dcm": 176, "reexpress": [176, 249], "time_deriv": [176, 181, 182], "free_dynamicsymbol": 176, "codirect": 176, "dyadic_tensor": [176, 245], "frame1": 176, "frame2": [176, 178], "second_reference_fram": 176, "ixz": 176, "inertia_dyad": 176, "pertain": [177, 182], "fieldfunct": [177, 181], "vect": [177, 245, 247], "r_x": [177, 181], "r_y": [177, 181], "r_z": [177, 181], "scalar_field": [177, 181, 245, 247, 251], "grad_field": [177, 247], "sympyfi": [177, 178, 179, 247], "position2": [177, 247], "vectfield": [177, 181, 247, 251], "solenoid": [177, 247, 252], "q6": 178, "vec1": 178, "vec2": 178, "coordinatesym": [178, 182], "n_x": 178, "rotating_reference_fram": 178, "time_derivatives_in_the_two_fram": 178, "otherpoint": 179, "outfram": 179, "interfram": 179, "fixedfram": 179, "get_motion_param": 179, "vectori": [179, 181, 248, 253], "timevalue1": 179, "timevalue2": 179, "313": 179, "vel_vec": 179, "q1dd": 180, "q2dd": 180, "charg": [181, 253], "displac": [181, 183, 253], "depict": [181, 219, 253], "temper": 181, "electric_potenti": [181, 251], "r1_x": 181, "r1_y": 181, "infinitesim": [181, 251], "nabla": [181, 245, 250, 251], "f_y": [181, 251], "f_x": [181, 219, 251], "sink": [181, 251], "irrot": [181, 251], "is_conserv": [181, 251, 252], "is_solenoid": [181, 251, 252], "scalar_potenti": [181, 251, 252], "conservative_field": [181, 251], "scalar_potential_differ": [181, 251, 252], "aug": [182, 219], "dyadic_product": [182, 252], "inc": [182, 194], "kinematic_equ": 182, "w_x": 183, "w_y": 183, "w_z": 183, "w_1": [183, 195], "w_2": [183, 195], "w_3": 183, "textrm": [183, 184, 208], "u_x": 183, "sp": 183, "oq": 183, "qp": 183, "rod": 183, "went": 183, "parallelogram": 184, "c_x": 184, "c_y": 184, "c_z": 184, "train": 184, "friend": 184, "xz": [184, 186], "zy": 184, "undergon": [184, 219], "vastli": 184, "wait": 184, "mold": 184, "bp": [184, 216], "bpp": 184, "zzx": 184, "multifram": 184, "direction": 184, "racah": 185, "gaunt": 185, "rasch03": 185, "regge58": 185, "regg": 185, "544": 185, "regge59": 185, "116": [185, 194], "1959": 185, "edmonds74": 185, "edmond": 185, "princeton": [185, 220], "1957": 185, "rasch": 185, "siam": [185, 238], "sci": 185, "1416": 185, "1428": 185, "liberatodebrito82": 185, "liberato": 185, "brito": 185, "forum": [185, 219], "m4nzdu": 185, "7o38": 185, "jen": 185, "03": [185, 220], "oscar": 185, "gerardo": 185, "lazo": 185, "arjona": 185, "jyr2000": 185, "gmail": 185, "clebsch_gordan": 185, "2j_3": 185, "dot_rot_grad_ynm": 185, "gradient": [185, 186, 245, 252, 253], "_l": 185, "l_2": 185, "l_3": 185, "drastic": 185, "2l_1": 185, "2l_2": 185, "2l_3": 185, "1200": 185, "00689500421922113448": 185, "inflect": 185, "unsuit": 185, "dd": [185, 205], "ee": [185, 195], "j_5": 185, "j_6": 185, "richer": 185, "wigner_3j": 185, "wigner_6j": 185, "wigner_9j": 185, "j_7": 185, "j_8": 185, "j_9": 185, "05555555": 185, "1666666": 185, "wigner_d": 185, "j_z": 185, "j_y": 185, "\u03b3": [185, 266, 276], "wigner_d_smal": 185, "textbackend": 186, "plot_parametr": 186, "plot_implicit": 186, "plot3d_parametric_lin": 186, "plot3d_parametric_surfac": 186, "xlabel": 186, "ylabel": 186, "zlabel": 186, "aspect_ratio": 186, "ylim": 186, "axis_cent": 186, "xscale": 186, "yscale": 186, "autoscal": 186, "textplot": 186, "_seri": [186, 197], "baseseri": 186, "nonparametr": 186, "cylindr": [186, 251], "basebackend": 186, "parametric2dlineseri": 186, "parametric3dlineseri": 186, "cyan": 186, "grayscal": 186, "integers_onli": 186, "surfaceover2drangeseri": 186, "parametricsurfaceseri": 186, "surface_color": 186, "range1": 186, "range2": 186, "fill_between": 186, "inch": 186, "expr_x": 186, "expr_i": 186, "canva": 186, "range_x": 186, "range_i": 186, "nb_of_points_x": 186, "nb_of_points_i": 186, "expr_z": 186, "range_u": 186, "range_v": 186, "nb_of_points_u": 186, "nb_of_points_v": 186, "x_var": 186, "y_var": 186, "mesh": 186, "p8": 186, "p9": 186, "nrow": [186, 189], "ncolumn": 186, "stuff": [186, 231, 233, 241], "is_2dlin": 186, "oblig": 186, "only_integ": 186, "get_seg": 186, "get_color_arrai": 186, "var_start_end": 186, "r692": 186, "luiz": 186, "henriqu": 186, "figueiredo": 186, "r693": 186, "line3dbaseseri": 186, "surfacebaseseri": 186, "var_start_end_x": 186, "var_start_end_i": 186, "var_start_end_u": 186, "var_start_end_v": 186, "implicitseri": 186, "has_equ": 186, "use_interval_math": 186, "centric": 186, "get_mesh": 186, "process_seri": 186, "_process_seri": 186, "keyboard": 186, "mous": 186, "pyglet_plot": 186, "screenshot": 186, "camera": 186, "zoom": 186, "numpad": 186, "ordin": [186, 216, 241], "f5": 186, "f6": 186, "f8": 186, "drag": 186, "button": [186, 232], "curvilinear": [186, 248, 249, 252], "__setitem__": 186, "zfade4": 186, "key1": 186, "value1": 186, "key2": 186, "value2": 186, "unbound_theta": 186, "wirefram": 186, "saddl": 186, "fz": 186, "_______________________________________________________": 186, "mediterranean": 187, "cultur": 187, "arab": 187, "lighten": 187, "tapestri": 187, "woven": 187, "european": 187, "soil": 187, "plausibl": 187, "teeter": 187, "totter": 187, "outweigh": 187, "excit": 187, "amus": 187, "kempf": 187, "1944": 187, "20th": 187, "dedekind": 187, "intim": 187, "disciplin": 187, "toolset": 187, "atiyah69": [187, 194], "gear": 187, "greuel2008": [187, 194], "interspers": 187, "lr": 187, "ilex": 187, "\u211a": [187, 200], "localis": 187, "abridg": 187, "free_modul": [187, 191], "quotient_r": [187, 191], "overload": [187, 190, 191, 248, 271], "polynomialr": [187, 191, 192, 198], "domain_or_r": [187, 191], "quotientr": [187, 191], "base_id": [187, 191], "elbow": 187, "room": 187, "componentwis": [187, 200], "inclin": 187, "biproduct": 187, "quotient_modul": 187, "is_submodul": 187, "multiply_id": 187, "identity_hom": 187, "freemodul": 187, "freemoduleel": 187, "conicis": 187, "_contain": 187, "_syzygi": 187, "_in_terms_of_gener": 187, "_intersect": 187, "_module_quoti": 187, "reduce_el": [187, 195], "represantit": 187, "in_terms_of_gener": 187, "inclusion_hom": 187, "rela": 187, "relb": 187, "is_full_modul": 187, "module_quoti": 187, "opt": [187, 193, 212, 272], "coincis": 187, "syzygy_modul": 187, "r_n": 187, "_contains_elem": 187, "_contains_id": 187, "_quotient": 187, "_union": 187, "_product": 187, "is_whole_r": 187, "is_maxim": 187, "is_primari": 187, "is_rad": 187, "is_princip": 187, "xj": 187, "satur": 187, "subquoti": 187, "quotientmodul": 187, "subquotientmodul": 187, "killed_modul": 187, "quotientmoduleel": 187, "kill": [187, 191, 231], "quotient_hom": 187, "ker": 187, "surject": 187, "cokernel": 187, "coker": 187, "meaningfulli": 187, "restrict_domain": 187, "homomoprh": 187, "modulehomomorph": [187, 195], "_ker": 187, "_img": 187, "_kernel": 187, "_imag": 187, "_restrict_domain": 187, "_restrict_codomain": 187, "_quotient_domain": 187, "_quotient_codomain": 187, "_appli": 187, "_mul_scalar": 187, "_compos": 187, "_add": [187, 206], "is_inject": 187, "quotient_domain": 187, "is_isomorph": 187, "preimag": 187, "restrict_codomain": 187, "is_surject": 187, "quotient_codomain": 187, "induct": 187, "monogen": 187, "monogenicfiniteextens": [187, 191], "finiteextens": 187, "sqrt2": [187, 190], "_5": 187, "extensionel": [187, 191], "notinvert": [187, 193, 196], "nu_1": 188, "nu_2": 188, "nu_n": 188, "nu_i": 188, "customarili": 188, "irreduc": [188, 191, 193, 195, 196, 199, 220, 226, 276], "endow": 188, "resp": [188, 191, 216], "divmod": [188, 190, 191], "cb": [188, 238], "sqf_list": [188, 191, 196], "sqf": [188, 191, 196, 213], "buchberg": [188, 193, 194, 196], "groebnerbasi": [188, 196, 199], "solve_poly_system": [188, 196, 218, 219], "fmt": [189, 191, 195], "matrix1": 189, "dmnonsquarematrixerror": 189, "zz_i": [189, 190, 192], "from_dict_sympi": 189, "ncol": 189, "elemsdict": 189, "from_list_sympi": 189, "from_list": [189, 191, 196, 197], "construct_domain": [189, 190, 191, 196], "from_rep": 189, "drep": 189, "dm": [189, 195], "ownership": 189, "scc": 189, "substract": 189, "to_dens": 189, "to_field": [189, 191, 196], "to_spars": 189, "aq": 189, "ccc": [189, 219], "from_ddm": 189, "domainerror": [189, 193, 196], "to_ddm": 189, "r694": 189, "pythonmpq": [190, 191], "srepr": [190, 263, 271], "strength": 190, "richardon": 190, "dup_factor_list": 190, "factortool": [190, 193], "dup_": [190, 193], "dmp_": [190, 193], "prod": [190, 197, 209], "z1": [190, 191, 218], "is_field": [190, 191], "quo": [190, 191, 193, 196], "rem": [190, 191, 193, 196], "exquo": [190, 191, 196], "exactquotientfail": [190, 191, 193, 196], "mpz": [190, 191], "of_typ": [190, 191], "z1_sympi": 190, "to_sympi": [190, 191], "from_sympi": [190, 191], "forth": [190, 195], "z_sympi": 190, "z_zz": 190, "coercionfail": [190, 193], "sum_domain": 190, "expressions_sympi": 190, "expressions_dom": 190, "result_dom": 190, "e_dom": 190, "result_sympi": 190, "qq_i": [190, 192], "gaussianinteg": [190, 191], "gaussianrationalfield": [190, 191], "gaussianr": [190, 191], "galoi": [190, 193, 195], "finitefield": [190, 191], "pythonfinitefield": [190, 191], "gmpyfinitefield": [190, 191], "welcom": [190, 216, 269], "realel": [190, 191], "complexel": [190, 191], "mpc": 190, "xr": [190, 198], "zc": 190, "1j": 190, "_mpc_": 190, "realfield": [190, 191], "rr100": 190, "33333333333333333333333333333": 190, "hack": [190, 216, 229], "algebraic_field": [190, 191, 193, 195], "algebraicfield": [190, 191, 193, 195], "sqrt3": 190, "x_dom": 190, "p_expr": [190, 191], "polyel": [190, 191, 193, 197, 198, 200], "p_dom": 190, "unexpand": [190, 199, 209, 232], "xk": [190, 191, 202], "yk": [190, 191], "poly_r": [190, 191], "old_polynomialr": 190, "globalpolynomialr": 190, "polyclass": [190, 191, 196], "yr": [190, 198], "broader": 190, "get_field": [190, 191], "frac_field": [190, 191], "rationalfield": [190, 191], "old_frac_field": [190, 191], "fractionfield": [190, 191], "old_fractionfield": 190, "xf": 190, "yf": 190, "fracfield": [190, 191], "expressiondomain": [190, 191], "elements_sympi": 190, "elements_k": 190, "convert_from": [190, 191], "num_zz": 190, "num_qq": 190, "domainel": [190, 191, 198], "encompass": 190, "all_coeff": [190, 191, 196], "dom": [190, 191, 193, 208], "strang": 190, "hybrid": 190, "unreli": 190, "usefulli": 191, "pythonr": [191, 198], "p_domain": 191, "ez": [191, 226], "get_r": 191, "has_assoc_field": 191, "has_assoc_r": 191, "alg_field_from_poli": [191, 195], "root_index": 191, "almosteq": 191, "cyclotomic_field": [191, 195], "zeta7": 191, "zeta_": 191, "lexord": [191, 196], "from_algebraicfield": 191, "from_complexfield": 191, "from_expressiondomain": 191, "from_expressionrawdomain": 191, "from_ff": 191, "modularinteg": 191, "from_ff_gmpi": 191, "from_ff_python": 191, "from_fractionfield": 191, "from_globalpolynomialr": 191, "from_monogenicfiniteextens": 191, "from_polynomialr": 191, "from_qq_gmpi": 191, "from_qq_python": 191, "from_realfield": 191, "from_zz_gmpi": 191, "from_zz_python": 191, "gcdex": [191, 196], "get_exact": 191, "half_gcdex": [191, 196], "is_pid": 191, "is_r": 191, "is_nonposit": 191, "is_on": [191, 196], "rersiv": 191, "__neg__": 191, "__pos__": 191, "__sub__": 191, "q_domain": 191, "q_expr": 191, "x_domain": 191, "alg": [191, 195, 199], "trait": 191, "is_unit": 191, "__divmod__": 191, "__floordiv__": 191, "__mod__": [191, 195], "simpledomain": 191, "compositedomain": 191, "from_qq": 191, "from_zz": 191, "gmpyinteg": 191, "pythoninteg": 191, "gmpyrationalfield": 191, "pythonrationalfield": 191, "from_gaussianrationalfield": 191, "gaussianel": 191, "gaussiandomain": 191, "qq_python": 191, "zz_python": 191, "z2": 191, "z3": 191, "z4": 191, "from_gaussianinteg": 191, "as_algebraicfield": 191, "orig_ext": 191, "algebraicnumb": [191, 195, 199], "integral_basi": [191, 195], "maximal_ord": [191, 195], "zeta5": 191, "primes_abov": [191, 195], "primeid": [191, 195], "to_alg_num": [191, 195], "legibl": 191, "to_rat": 191, "mpelement": 191, "complexfield": 191, "lc": [191, 193, 196], "domain_or_field": 191, "dmf": 191, "coercibl": 191, "monomialord": [191, 196], "xring": 191, "vring": 191, "sring": [191, 197, 198], "polyr": [191, 192, 193, 198], "factor_list": [191, 196, 276], "add_gen": 191, "drop_to_ground": 191, "monomial_basi": 191, "206": [191, 196], "744": 191, "945": [191, 197], "is_monomi": [191, 196], "const": 191, "coeffcient": [191, 193], "inplac": 191, "shallow": [191, 207], "zero_monom": 191, "fv": 191, "clo": 191, "p64": 191, "qv": 191, "f0": 191, "imul_num": 191, "itercoeff": 191, "itermonom": 191, "iterterm": 191, "leading_expv": 191, "leading_monom": 191, "leading_term": 191, "listcoeff": 191, "listmonom": 191, "listterm": 191, "monom": [191, 196], "strip_zero": 191, "tail_degre": 191, "xfield": 191, "vfield": [191, 250], "sfield": [191, 250], "fracel": [191, 200], "lev": 191, "add_ground": [191, 196], "all_monom": [191, 196], "all_term": [191, 196], "cauchy_lower_bound": 191, "cauchy_upper_bound": 191, "clear_denom": [191, 196], "count_complex_root": 191, "sup": [191, 196, 200, 207, 208], "count_real_root": 191, "deflat": [191, 196], "y_i": [191, 193, 195, 196, 216], "x_j": [191, 193, 196], "degree_list": [191, 196], "eject": [191, 196], "exquo_ground": [191, 196], "factor_list_includ": [191, 196], "from_dict": [191, 196], "from_sympy_list": 191, "gff_list": [191, 196], "homogeneous_ord": [191, 196, 213], "is_cyclotom": [191, 196], "is_ground": [191, 196], "is_homogen": [191, 196], "is_irreduc": [191, 196], "is_linear": [191, 196], "is_mon": [191, 196], "is_quadrat": [191, 196], "is_sqf": [191, 196], "l1_norm": [191, 196], "l2_norm_squar": 191, "max_norm": [191, 196], "mignotte_sep_bound_squar": 191, "mignott": [191, 193], "mul_ground": [191, 196], "pdiv": [191, 196], "pexquo": [191, 196], "pquo": [191, 196], "prem": [191, 196], "quo_ground": [191, 196], "refine_root": [191, 195, 196], "includepr": [191, 193, 196], "sqf_list_includ": [191, 196], "sqf_norm": [191, 196], "sqf_part": [191, 196], "sqr": [191, 196], "sturm": [191, 196], "sub_ground": [191, 196], "to_dict": 191, "to_exact": [191, 196], "to_r": [191, 196], "to_sympy_dict": 191, "to_sympy_list": 191, "to_tupl": 191, "total_degre": [191, 196, 213], "trunc": [191, 196, 199], "frac_unifi": 191, "half_per": 191, "poly_unifi": 191, "gr\u00f6bner": 192, "groebner": [192, 194, 195, 196, 199, 212, 218, 219], "wester": 192, "dispers": [192, 194, 220], "agca": 192, "syzygi": 192, "undocu": 192, "rs_seri": 192, "eqs_to_matrix": 192, "sympy_eqs_to_r": 192, "_solve_lin_si": 192, "_solve_lin_sys_compon": 192, "ddm": 192, "sdm": [192, 193], "adic": [192, 194], "valuat": [192, 216], "subfield": 192, "l0": 193, "legitim": 193, "uninterest": 193, "bulk": [193, 210], "x_u": 193, "dup__": 193, "densebas": 193, "dmp_lc": 193, "poly_lc": 193, "dmp_tc": 193, "poly_tc": 193, "dmp_ground_lc": 193, "dmp_ground_tc": 193, "dmp_true_lt": 193, "n_1": [193, 218, 220], "n_k": 193, "dmp_degre": 193, "dmp_degree_in": 193, "dmp_degree_list": 193, "dmp_strip": 193, "dmp_valid": 193, "dup_revers": 193, "dmp_copi": 193, "dmp_to_tupl": 193, "dmp_normal": 193, "dmp_convert": 193, "to_domain": 193, "dmp_from_sympi": 193, "dmp_nth": 193, "dmp_ground_nth": 193, "dmp_zero_p": 193, "dmp_zero": 193, "dmp_one_p": 193, "dmp_one": 193, "dmp_ground_p": 193, "dmp_ground": 193, "dmp_negative_p": 193, "dmp_positive_p": 193, "dmp_from_dict": 193, "dmp_to_dict": 193, "dmp_swap": 193, "dmp_permut": 193, "dmp_nest": 193, "dmp_rais": 193, "dmp_deflat": 193, "dmp_multi_defl": 193, "dmp_inflat": 193, "dmp_exclud": 193, "dmp_includ": 193, "dmp_inject": 193, "dmp_eject": 193, "dmp_terms_gcd": 193, "dmp_list_term": 193, "dmp_apply_pair": 193, "dmp_slice": 193, "dup_random": 193, "densearith": 193, "dmp_add_term": 193, "dmp_sub_term": 193, "dmp_mul_term": 193, "dmp_add_ground": 193, "dmp_sub_ground": 193, "dmp_mul_ground": 193, "dmp_quo_ground": 193, "dmp_exquo_ground": 193, "dup_lshift": 193, "dup_rshift": 193, "dmp_ab": 193, "dmp_neg": 193, "dmp_add": 193, "dmp_sub": 193, "dmp_add_mul": 193, "dmp_sub_mul": 193, "dmp_mul": 193, "dmp_sqr": 193, "dmp_pow": 193, "dmp_pdiv": 193, "dmp_prem": 193, "dmp_pquo": 193, "dmp_pexquo": 193, "dmp_rr_div": 193, "dmp_ff_div": 193, "dmp_div": 193, "dmp_rem": 193, "dmp_quo": 193, "dmp_exquo": 193, "dmp_max_norm": 193, "dmp_l1_norm": 193, "dmp_expand": 193, "densetool": 193, "dmp_integr": 193, "dmp_integrate_in": 193, "dmp_diff": 193, "dmp_diff_in": 193, "dmp_eval": 193, "dmp_eval_in": 193, "dmp_eval_tail": 193, "dmp_diff_eval_in": 193, "dmp_trunc": 193, "dmp_ground_trunc": 193, "dup_mon": 193, "dmp_ground_mon": 193, "dup_cont": 193, "dmp_ground_cont": 193, "dup_primit": 193, "dmp_ground_primit": 193, "dup_extract": 193, "dmp_ground_extract": 193, "dup_real_imag": 193, "bivari": [193, 199, 220], "dup_mirror": 193, "dup_scal": 193, "dup_shift": 193, "dup_transform": 193, "dmp_compos": 193, "dup_decompos": 193, "t_m": 193, "r695": 193, "dmp_lift": 193, "dup_sign_vari": 193, "dmp_clear_denom": 193, "k_0": 193, "dmp_revert": 193, "gf_": 193, "justifi": 193, "necess": 193, "u_0": 193, "m_0": [193, 213], "m_n": 193, "gf_crt1": 193, "9215": 193, "9405": 193, "9603": 193, "gf_crt2": 193, "gf_int": 193, "gf_degre": 193, "gf_lc": 193, "gf_tc": 193, "gf_strip": 193, "gf_trunc": 193, "gf_normal": 193, "gf_from_dict": 193, "gf_to_dict": 193, "gf_from_int_poli": 193, "gf_to_int_poli": 193, "gf_neg": 193, "gf_add_ground": 193, "gf_sub_ground": 193, "gf_mul_ground": 193, "gf_quo_ground": 193, "gf_add": 193, "gf_sub": 193, "gf_mul": 193, "gf_sqr": 193, "gf_add_mul": 193, "gf_sub_mul": 193, "gf_expand": 193, "gf_div": 193, "r696": 193, "monagan93": [193, 194], "r697": 193, "gathen99": [193, 194], "gf_rem": 193, "gf_quo": 193, "gf_exquo": 193, "gf_lshift": 193, "gf_rshift": 193, "gf_pow": 193, "gf_pow_mod": 193, "r698": 193, "gf_gcd": 193, "gf_lcm": 193, "gf_cofactor": 193, "gf_gcdex": 193, "eea": 193, "r699": 193, "gf_monic": 193, "gf_diff": 193, "gf_eval": 193, "gf_multi_ev": 193, "gf_compos": 193, "gf_compose_mod": 193, "gf_trace_map": 193, "r700": 193, "gathen92": [193, 194], "gf_random": 193, "gf_irreduc": 193, "gf_irreducible_p": 193, "gf_sqf_p": 193, "gf_sqf_part": 193, "gf_sqf_list": 193, "e_2": [193, 196], "f_j": [193, 210], "gf_sqf": 193, "r701": 193, "geddes92": [193, 194], "gf_qmatrix": 193, "berlekamp": 193, "gf_qbasi": 193, "gf_berlekamp": 193, "gf_zassenhau": 193, "gf_shoup": 193, "gf_factor_sqf": 193, "gf_factor": 193, "e_d": 193, "cantor": 193, "zassenhau": [193, 195], "shoup": [193, 194], "kaltofen": [193, 194], "gathen": [193, 194], "gf_factor_method": 193, "r702": 193, "gf_valu": 193, "2204": 193, "gf_csolv": 193, "congruent": [193, 210, 213], "189": 193, "112": [193, 197], "139": 193, "r703": 193, "ivan": 193, "niven": 193, "zuckerman": 193, "montgomeri": 193, "infeas": [193, 196], "sdm_": 193, "distributedmodul": 193, "sdm_monomial_mul": 193, "sdm_monomial_deg": 193, "f_5": 193, "sdm_monomial_divid": 193, "sdm_lc": 193, "sdm_to_dict": 193, "sdm_from_dict": 193, "dic": 193, "sdm_add": 193, "2f_1": 193, "3f_1": 193, "yf_1": 193, "xf_1": 193, "sdm_lm": 193, "sdm_lt": 193, "sdm_mul_term": 193, "2xy": [193, 270], "4y": [193, 219, 265], "8xy": 193, "2y": [193, 213, 216, 219, 270], "sdm_zero": 193, "sdm_deg": 193, "sdm_from_vector": 193, "sdm_to_vector": 193, "variant": [193, 216, 219], "qg": 193, "remark": [193, 199, 210, 216], "uf": 193, "vg": 193, "zout": 193, "euclidtool": 193, "dmp_half_gcdex": 193, "dmp_gcdex": 193, "dmp_invert": 193, "dmp_euclidean_pr": 193, "dmp_primitive_pr": 193, "exceedingli": 193, "collin": [193, 194], "collins67": [193, 194], "subdomain": 193, "2l": 193, "remainin": 193, "subdetermin": 193, "n_2": [193, 220], "n_": [193, 213], "abnorm": 193, "gamma_i": 193, "brown": [193, 194, 220], "traub": [193, 194], "browntraub71": [193, 194], "brown78": [193, 194], "discoveri": [193, 272], "dmp_inner_subresult": 193, "729": 193, "sre": 193, "dmp_subresult": 193, "dmp_prs_result": 193, "dmp_zz_modular_result": 193, "dmp_zz_collins_result": 193, "dmp_qq_collins_result": 193, "dmp_result": 193, "dmp_discrimin": 193, "dmp_rr_prs_gcd": 193, "cff": [193, 196], "cfg": [193, 196], "dmp_ff_prs_gcd": 193, "dmp_zz_heu_gcd": 193, "r704": 193, "liao95": [193, 194], "dmp_qq_heu_gcd": 193, "dmp_inner_gcd": 193, "dmp_gcd": 193, "dmp_lcm": 193, "dmp_content": 193, "dmp_primit": 193, "dmp_cancel": 193, "dmp_trial_divis": 193, "dmp_zz_mignotte_bound": 193, "dup_zz_hensel_step": 193, "hensel": 193, "r705": 193, "dup_zz_hensel_lift": 193, "f_list": 193, "multifactor": 193, "r706": 193, "dup_zz_zassenhau": 193, "dup_zz_irreducible_p": 193, "eisenstein": 193, "dup_cyclotomic_p": 193, "bradford": 193, "russel": 193, "251": 193, "berlin": 193, "heidelberg": 193, "dup_zz_cyclotomic_poli": 193, "dup_zz_cyclotomic_factor": 193, "r707": 193, "weisstein09": [193, 194], "dup_zz_factor_sqf": 193, "dup_zz_factor": 193, "r708": 193, "dmp_zz_wang_non_divisor": 193, "wang": [193, 194], "eez": 193, "dmp_zz_wang_test_point": 193, "dmp_zz_wang_lead_coeff": 193, "dmp_zz_diophantin": 193, "dmp_zz_wang_hensel_lift": 193, "dmp_zz_wang": 193, "enhanc": [193, 220], "r709": 193, "wang78": [193, 194], "r710": 193, "dmp_zz_factor": 193, "r711": 193, "dmp_ext_factor": 193, "dup_gf_factor": 193, "dmp_factor_list": 193, "dmp_factor_list_includ": 193, "dmp_irreducible_p": 193, "groebnertool": 193, "polyconfig": [193, 196], "f5b": [193, 196], "spoli": 193, "red_groebn": 193, "beckerweispfenning93": 193, "is_groebn": 193, "is_minim": 193, "is_reduc": 193, "fglmtool": 193, "matrix_fglm": 193, "o_to": 193, "o_from": 193, "r712": 193, "fauger": [193, 196], "gianni": [193, 196, 218], "mora": [193, 194, 196, 218], "sdm_spoli": 193, "phantom": 193, "sca": 193, "defn": 193, "sdm_ecart": 193, "ecart": 193, "sdm_nf_mora": 193, "nf": 193, "sdm_groebner": 193, "sugar": [193, 194, 225], "giovini": [193, 194], "polyopt": [193, 197], "build_opt": 193, "polyerror": [193, 196], "basepolynomialerror": 193, "operationnotsupport": 193, "heuristicgcdfail": 193, "homomorphismfail": 193, "isomorphismfail": [193, 195], "extraneousfactor": 193, "evaluationfail": 193, "refinementfail": 193, "notrevers": [193, 196], "notalgebra": 193, "polynomialerror": [193, 196], "unificationfail": [193, 195], "generatorsneed": 193, "computationfail": 193, "exc": 193, "generatorserror": 193, "univariatepolynomialerror": 193, "multivariatepolynomialerror": [193, 196], "polificationfail": 193, "orig": 193, "optionerror": 193, "flagerror": 193, "modulargcd": 193, "modgcd_univari": 193, "monagan00": [193, 194], "modgcd_bivari": 193, "modgcd_multivari": 193, "_modgcd_multivariate_p": 193, "brown71": [193, 194], "degbound": 193, "contbound": 193, "func_field_modgcd": 193, "reconstuct": 193, "z_p": 193, "spuriou": [193, 218], "hoeij04": [193, 194], "scarc": 193, "hsin": 194, "chao": 194, "liao": 194, "fateman": 194, "montreal": 194, "quebec": 194, "canada": 194, "240": [194, 202, 247], "247": [194, 218], "von": [194, 220], "zur": 194, "gerhard": 194, "cambridg": [194, 213], "weisstein": 194, "cyclotomicpolynomi": 194, "1215": 194, "1231": 194, "czapor": 194, "labahn": 194, "monagan": [194, 212], "disco": 194, "721": 194, "kaltofen98": 194, "subquadrat": 194, "223": 194, "1998": [194, 213], "1179": 194, "1197": 194, "shoup95": 194, "397": 194, "shoup91": 194, "cox97": [194, 196], "shea": [194, 196], "ajwa95": 194, "ajwa": 194, "liu": 194, "cites": [194, 212], "ist": [194, 209, 212], "psu": [194, 209, 212], "mycites": 194, "login": 194, "bose03": 194, "bose": 194, "guiver": 194, "multidimension": [194, 231, 256], "giovini91": 194, "bronstein93": [194, 196], "salvi": [194, 197], "kiev": 194, "ukrain": 194, "buchberger01": [194, 196], "theorist": 194, "moreno": 194, "diaz": 194, "freir": 194, "eurocast": 194, "februari": 194, "davenport88": 194, "siret": 194, "tournier": 194, "london": [194, 213], "124": [194, 265], "greuel": 194, "pfister": 194, "atiyah": 194, "macdonald": 194, "142": 194, "1971": [194, 216], "505": 194, "237": 194, "249": 194, "wittkopf": 194, "478": 194, "hoeij": 194, "2004": [194, 213], "297": [194, 196], "304": [194, 196], "wang81": 194, "symsac": 194, "hoeij02": 194, "manwright94": [194, 196], "yiu": 194, "kwong": 194, "franci": 194, "wright": 194, "190347": 194, "190413": 194, "koepf98": [194, 196], "koepf": [194, 202, 212], "vieweg": 194, "abramov71": [194, 196], "abramov": [194, 218], "ussr": 194, "330": 194, "man93": [194, 196], "376": 194, "sciencedirect": 194, "pii": 194, "s0747717183710539": 194, "kapur1994": 194, "deepak": 194, "kapur": 194, "tushar": 194, "saxena": 194, "yang": 194, "dixon": 194, "researchg": [194, 220], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 194, "palancz08": 194, "pal\u00e1ncz": 194, "zaletnyik": 194, "jl": [194, 233], "awang": 194, "ew": 194, "grafarend": 194, "geodet": 194, "geodesi": 194, "225607735_dixon_result": 194, "s_solution_of_systems_of_geodetic_polynomial_equ": 194, "bruce97": 194, "bruce": 194, "randal": 194, "donald": [194, 235], "mundi": 194, "artifici": [194, 203], "intellig": [194, 212, 216, 276], "orlando": 194, "www2": 194, "duke": 194, "donaldlab": 194, "symbolicnumericalcomput": 194, "045": 194, "087": 194, "stiller96": 194, "stiller": 194, "1996": [194, 210, 218, 245], "citeseerx": [194, 209], "viewdoc": [194, 209, 212], "590": 194, "2021": 194, "rep1": [194, 209], "cohen93": [194, 195], "henri": 194, "olga": 195, "tausski": 195, "zimmer": 195, "pohst": 195, "articul": 195, "numberfield": 195, "mathfrak": 195, "regul": 195, "alpha_m": 195, "round_two": 195, "prime_decomp": 195, "prime_valu": 195, "minimal_polynomi": 195, "field_isomorph": 195, "nilrad": 195, "z_k": 195, "zk": 195, "ordinarili": 195, "503": 195, "r713": 195, "r714": 195, "powerbasisel": 195, "ramif": 195, "as_submodul": 195, "bundl": 195, "test_factor": 195, "deliber": 195, "is_inert": 195, "inert": [195, 216], "reduce_anp": 195, "elt": 195, "reduce_alg_num": 195, "field_gen": 195, "just_gen": 195, "reagent": 195, "kummer": 195, "1847": 195, "ueber": 195, "zerlegung": 195, "crell": 195, "r715": 195, "_minpoly_compos": 195, "stall": 195, "alli": 195, "monomorph": 195, "alpha_i": 195, "alpha_n": 195, "lincomb": 195, "primtiiv": 195, "meanwhil": 195, "moduleel": 195, "powerbasi": 195, "submodule_from_matrix": 195, "ancestor": 195, "to_col": 195, "nca": 195, "_mult_tab": 195, "successfulli": 195, "moduleendomorph": 195, "innerendomorph": 195, "endomorphismr": 195, "spec": [195, 196], "i_n": [195, 196, 221], "include_self": 195, "basis_el": 195, "element_from_r": 195, "endomorphism_r": 195, "is_compat_col": 195, "mult_tab": 195, "mult": 195, "closurefailur": 195, "nearest_common_ancestor": 195, "number_field": 195, "power_basis_ancestor": 195, "incom": 195, "halv": 195, "submodule_from_gen": 195, "over_power_basi": 195, "starts_with_un": 195, "hnf_modulu": 195, "whole_submodul": 195, "element_from_anp": 195, "element_from_alg_num": 195, "element_from_poli": 195, "qq_matrix": 195, "basis_element_pullback": 195, "discard_befor": 195, "structureerror": 195, "cohen00": 195, "make_mod_elt": 195, "qq_col": 195, "from_int_list": 195, "is_compat": 195, "reduced_mod_p": 195, "to_ancestor": 195, "anc": 195, "to_par": 195, "to_anp": 195, "inner_endomorph": 195, "event": [195, 220], "find_min_poli": 195, "missingunityerror": 195, "is_int": 195, "get_num_denom": 195, "extract_fundamental_discrimin": 195, "r716": 195, "algintpow": 195, "zeta_pow": 195, "r717": 195, "coeff_search": 195, "supplement_a_subspac": 195, "dmrankerror": 195, "v_n": 195, "w_r": 195, "w_j": 195, "u_j": 195, "r718": 195, "poly_from_expr": 196, "parallel_poly_from_expr": 196, "lt": [196, 241], "mod_invers": 196, "exprtool": [196, 256], "gcd_term": 196, "gcd_list": 196, "lcm_list": 196, "destruct": 196, "2079": 196, "1401": 196, "2715": 196, "6720": 196, "1092": 196, "gff": 196, "check_sqf": 196, "count_root": 196, "nroot": [196, 218], "maxstep": 196, "cleanup": 196, "73205080756888": 196, "73205080756887729352744634151": 196, "ground_root": 196, "nth_power_roots_poli": 196, "r_f": 196, "r_g": 196, "_signsimp": 196, "q_n": 196, "is_zero_dimension": [196, 219], "donal": 196, "230": [196, 218], "ec": 196, "em": 196, "di": 196, "dispersionset": 196, "gp": [196, 216], "free_symbols_in_domain": 196, "from_poli": 196, "get_domain": 196, "get_modulu": 196, "has_only_gen": 196, "vincent": [196, 238], "akrita": 196, "strzebonski": 196, "va": 196, "alkiviadi": 196, "adam": 196, "panagioti": 196, "vigkla": 196, "265": 196, "279": 196, "polnomi": 196, "is_multivari": 196, "is_univari": 196, "ltrim": 196, "rerun": [196, 231], "_only_": 196, "sturmian": 196, "subresultants_qq_zz": 196, "suffix": [196, 233], "_pg": 196, "_amv": 196, "rem_z": 196, "premultipli": 196, "rat_clear_denom": 196, "_ignor": 196, "retract": 196, "same_root": 196, "r0": 196, "set_domain": 196, "set_modulu": 196, "termwis": 196, "fglm": 196, "r719": 196, "horner_schem": 196, "equispac": 196, "viet": 196, "itermonomi": 196, "min_degre": 196, "gib": 196, "monomial_kei": 196, "monomial_count": 196, "gradedlexord": 196, "reversedgradedlexord": 196, "clear_cach": 196, "_get_interv": 196, "165": [196, 220, 238], "169": 196, "eval_approx": 196, "evalf_r": 196, "eval_r": 196, "69629": 196, "71318": 196, "805": 196, "3275": 196, "65536": [196, 199, 200], "414645": 196, "131072": 196, "6545": 196, "104755": 196, "2097152": 196, "6634255": 196, "_all_root": 196, "use_cach": 196, "_complexes_index": 196, "_complexes_sort": 196, "_count_root": 196, "_ensure_complexes_init": 196, "_ensure_reals_init": 196, "_eval_is_imaginari": 196, "_get_complex": 196, "_get_complexes_sqf": 196, "currentfactor": 196, "_get_real": 196, "_get_reals_sqf": 196, "_get_root": 196, "_indexed_root": 196, "_new": 196, "_postprocess_root": 196, "_preprocess_root": 196, "heroic": [196, 218], "_real_root": 196, "_reals_index": 196, "_reals_sort": 196, "_refine_complex": 196, "_roots_trivi": 196, "_set_interv": 196, "861136": 196, "86113631159405258": 196, "polyroot": 196, "quintic": [196, 218], "unread": [196, 236], "casu": 196, "irreducibili": 196, "unsolvablefactorerror": [196, 218], "inexpress": 196, "unsolv": [196, 219], "r720": 196, "cubic_funct": 196, "trigonometric_": 196, "28and_hyperbol": 196, "29_method": 196, "specialpoli": 196, "swinnerton_dyer_poli": 196, "swinnerton": 196, "dyer": 196, "symmetric_poli": 196, "random_poli": 196, "gegenbau": [196, 200], "partfrac": [196, 202], "undertermin": 196, "_w": [196, 207], "apart_list": 196, "assemble_partfrac_list": 196, "bunch": 196, "pfd": 196, "r721": 196, "partial_list": 196, "reassembl": 196, "pfda": 196, "r722": 196, "r723": 196, "r724": 196, "r725": 196, "r726": 196, "r727": 196, "r728": 196, "r729": 196, "widen": 197, "ring_seri": 197, "rs_sin": 197, "166666666666667": 197, "puiseux": 197, "rs_co": 197, "rs_tan": 197, "took": [197, 209], "eleg": [197, 199], "rs_exp": 197, "everyon": 197, "blazingli": 197, "promin": 197, "gradual": 197, "rs_": 197, "rs_log": 197, "rs_lambertw": 197, "rs_atan": 197, "arctang": 197, "rs_asin": 197, "_tan1": 197, "rs_cot": 197, "rs_cos_sin": 197, "rs_atanh": 197, "rs_sinh": 197, "rs_cosh": 197, "rs_tanh": 197, "rs_hadamard_exp": 197, "inver": 197, "rs_mul": 197, "rs_squar": 197, "rs_pow": 197, "rs_series_invers": 197, "rs_series_revers": 197, "a_kx_k": 197, "ar_i": 197, "ar_": 197, "ae": 197, "rs_trunc": 197, "rs_nth_root": 197, "160249952256379": 197, "44224957030741": 197, "rs_sub": 197, "rs_diff": 197, "rs_integr": 197, "rs_newton": 197, "rs_compose_add": 197, "r730": 197, "bostan": 197, "flajolet": 197, "schost": 197, "4579": 197, "institut": 197, "nation": 197, "recherch": 197, "informatiqu": 197, "automatiqu": 197, "rs_is_puiseux": 197, "rs_puiseux": 197, "rs_puiseux2": 197, "rs_series_from_list": 197, "concur": 197, "rs_fun": 197, "_tan": 197, "_nth": 197, "_root": 197, "_fun": 197, "mul_xin": 197, "pow_xin": 197, "_raw": 198, "unkown": 198, "eqs_r": 198, "eqs_coeff": 198, "eqs_rh": 198, "critiqu": 199, "wester1999": 199, "systemat": 199, "153": 199, "\u2124": [199, 200, 219, 277], "unm": 199, "driver": [200, 232], "adequ": 200, "emptyprint": 200, "_sympystr": 200, "mathml": 200, "inconveni": 200, "_print_": 200, "expr_class": 200, "hierarchi": [200, 220], "_print_rat": 200, "_print_numb": 200, "_print_atom": 200, "_print_bas": 200, "print_latex": 200, "mylatexprint": 200, "_print_deriv": 200, "print_my_latex": 200, "modop": 200, "subcompon": 200, "outermost": [200, 208, 212, 224], "modopmodewrong": 200, "modopnestedwrong": 200, "modopsettingswrong": 200, "subobject": 200, "infrastructur": [200, 217], "printer_exampl": 200, "set_global_set": 200, "stringpict": 200, "pretty_symbologi": 200, "prettyform": 200, "hline": 200, "vline": 200, "ascii": [200, 262], "_pretti": 200, "use_unicode_sqrt_char": 200, "root_not": 200, "mat_symbol_styl": 200, "prettifi": 200, "bold": 200, "c89codeprint": 200, "print_ccod": 200, "tgamma": 200, "known_functions_c89": 200, "known_functions_c99": 200, "fmax": 200, "fmin": 200, "lgamma": 200, "indent_cod": 200, "functionclass": [200, 239], "cfunction_format": 200, "derefer": 200, "dereferenc": 200, "symbols_to_declar": 200, "not_supported_funct": 200, "code_text": 200, "m_sqrt2": 200, "math_macro": 200, "m_sqrt2l": 200, "cxx": 200, "cxx98codeprint": 200, "print_rcod": 200, "rcode": 200, "known_funct": 200, "_rcode": 200, "rfunction_str": 200, "rfunction_format": 200, "ifels": 200, "tweak": [200, 218], "type_map": 200, "name_mangl": 200, "mangl": 200, "floor1": 200, "floor2": 200, "print_fcod": 200, "_fcode": 200, "conjg": 200, "32768": 200, "7182818284590452d0": 200, "1415926535897932d0": 200, "718281828459045235360287d0": 200, "141592653589793238462643d0": 200, "869604401089358618834491d0": 200, "mygamma": 200, "allow_unknown_funct": 200, "coshintegr": 200, "cosintegr": 200, "expintegralei": 200, "factorialpow": 200, "heavisidetheta": 200, "sinhintegr": 200, "sinintegr": 200, "arccosh": 200, "arccoth": 200, "arcsinh": 200, "arctanh": 200, "dirichleteta": 200, "gegenbauerc": 200, "hypergeometricpfq": 200, "sphericalbesselj": 200, "logintegr": 200, "lucasl": 200, "riemann_xi": 200, "riemannxi": 200, "stieltjesgamma": 200, "sphericalbess": 200, "mcodeprint": 200, "_mcode": 200, "mcode": 200, "maplecodeprint": 200, "_mapl": 200, "maple_cod": 200, "print_maple_cod": 200, "javascriptcodeprint": 200, "_javascript": 200, "js_function_str": 200, "known_fcns_src1": 200, "known_fcns_src2": 200, "conj": 200, "juliacodeprint": 200, "_julia": 200, "harmless": [200, 272], "cosmet": 200, "pw": 200, "existing_julia_fcn": 200, "coshint": 200, "cosint": 200, "sinhint": 200, "sinint": 200, "bincoeff": 200, "logint": 200, "gammaln": 200, "octavecodeprint": 200, "_octav": 200, "recip": [200, 238], "powf": 200, "signum": 200, "rustcodeprint": 200, "_rust_cod": 200, "7_f64": 200, "_aesara": 200, "tensorvari": 200, "floatx": 200, "squeez": 200, "dim_handl": 200, "gtkmathview": 200, "widget": 200, "print_gtk": 200, "libgtkmathview": 200, "start_view": 200, "_lambdacod": 200, "accepted_latex_funct": 200, "parenthesize_sup": 200, "fold_frac_pow": 200, "fold_func_bracket": 200, "fold_short_frac": 200, "inv_trig_styl": 200, "itex": 200, "ln_notat": 200, "long_frac_ratio": 200, "mat_delim": 200, "mat_str": 200, "mul_symbol": 200, "symbol_nam": 200, "gothic_re_im": 200, "decimal_separ": 200, "diff_oper": 200, "smallmatrix": [200, 270], "amsmath": 200, "fracton": 200, "semicolon": 200, "monospac": 200, "mathtt": 200, "mathml2": 200, "mathmlprinterbas": 200, "mathmlcontentprint": 200, "mathmlpresentationprint": 200, "chapter4": 200, "_mathml_cont": 200, "mathml_tag": 200, "chapter3": 200, "_mathml_present": 200, "utf": 200, "mul_symbol_mathml_numb": 200, "xb7": 200, "print_mathml": [200, 275], "mrow": 200, "mpmathprint": 200, "fully_qualified_modul": 200, "print_python": 200, "textual": 200, "reprprint": 200, "_sympyrepr": 200, "reprifi": 200, "sympy_integ": 200, "displayhook": [200, 231], "pprint_nod": 200, "nb2": 200, "print_nod": 200, "asssumpt": 200, "determinisit": 200, "backtrac": 200, "print_tre": 200, "outputbuff": 200, "dvioption": 200, "outputtexfil": 200, "extra_preambl": 200, "latex_set": 200, "postscript": 200, "tex": 200, "eulervm": 200, "sty": 200, "debian": 200, "ubuntu": 200, "unset": [200, 212], "gimp": 200, "evinc": 200, "kdvi": 200, "xdvi": 200, "xdg": 200, "system_default_view": 200, "gracefulli": [200, 224], "generet": 200, "bytesio": 200, "usepackag": 200, "amsfont": 200, "renewcommand": 200, "popen": 200, "phidd": 200, "bitmap": 200, "split_super_sub": 200, "var_sub1__sup_sub2": 200, "assignmenterror": 200, "bitwiseand": 200, "bitwiseor": 200, "bitwisexor": 200, "precedence_valu": 200, "kroneckerproduct": 200, "negativeinfin": 200, "tensadd": [200, 226], "tensmul": [200, 226], "precedence_funct": 200, "precedence_float": 200, "precedence_fracel": 200, "precedence_integ": 200, "precedence_mul": 200, "precedence_polyel": 200, "precedence_r": 200, "precedence_unevaluatedexpr": 200, "databas": [200, 210], "pretty_use_unicod": 200, "pretty_try_use_unicod": 200, "xstr": 200, "greek_lett": 200, "digit_2txt": 200, "ONE": 200, "seven": 200, "symb_2txt": 200, "parenthesi": [200, 224], "\u2080": 200, "\u2081": 200, "\u2082": 200, "\u2083": 200, "\u2084": 200, "\u2085": 200, "\u2086": 200, "\u2087": 200, "\u2088": 200, "\u2089": 200, "\u2090": 200, "\u1d66": 200, "\u1d6a": 200, "\u2091": 200, "\u1d67": 200, "\u2095": 200, "\u1d62": 200, "\u2096": 200, "\u2097": 200, "\u2098": 200, "\u2099": 200, "\u2092": 200, "\u209a": 200, "\u1d69": 200, "\u1d63": 200, "\u1d68": 200, "\u209b": 200, "\u209c": 200, "\u1d64": 200, "\u1d65": 200, "\u2093": 200, "\u2070": 200, "\u00b9": 200, "\u00b2": 200, "\u00b3": 200, "\u2074": 200, "\u2075": 200, "\u2076": 200, "\u2077": 200, "\u2078": 200, "\u2079": 200, "\u2071": 200, "\u207f": 200, "xobj": 200, "vobj": 200, "hobj": 200, "vf": 200, "\u00bd": 200, "\u2153": 200, "\u00bc": 200, "\u2155": 200, "\u2159": 200, "\u215b": 200, "\u2154": 200, "\u2156": 200, "\u00be": 200, "\u2157": 200, "\u215c": 200, "\u2158": 200, "\u215a": 200, "\u215d": 200, "\u215e": 200, "xsym": 200, "symbologi": 200, "atoms_t": 200, "\u2102": [200, 277], "emptysequ": [200, 206], "exp1": 200, "\u2115": 200, "\u2115\u2080": 200, "\u211d": [200, 277], "symmetricdiffer": [200, 219], "pretty_atom": 200, "atom_nam": 200, "pretty_symbol": 200, "symb_nam": 200, "bold_nam": 200, "stylis": 200, "_print_meijerg": 200, "_print_hyp": 200, "jurjen": 200, "bo": 200, "hate": 200, "spammer": 200, "pietjepuk314": 200, "oc": [200, 250], "oohai": 200, "gedg": 200, "email": 200, "my": [200, 265], "mun": 200, "terminal_str": 200, "baselin": 200, "leftslash": 200, "slash": [200, 231], "paren": 200, "ifascii_nougli": 200, "line_break": 200, "ugli": 200, "terminal_width": 200, "wider": 200, "maxdepth": 200, "labelfunc": 200, "digraph": [200, 238, 275], "rankdir": [200, 275], "_sparse_": 201, "flavor": 201, "________": [201, 220, 238], "x\u2080": 201, "greatli": 201, "numbered_symbol": [201, 212, 216, 238], "postprocessor": [201, 212], "reduced_expr": [201, 212], "formalpowerseri": 202, "coeff_bel": 202, "formalpowerseriescompos": 202, "r731": 202, "comtet": 202, "loui": 202, "reidel": 202, "1974": 202, "720": [202, 216, 238], "formalpowerseriesinvers": 202, "r732": 202, "upto": [202, 207, 216], "formalpowerseriesproduct": 202, "rational_algorithm": 202, "compute_fp": 202, "hyper_algorithm": 202, "omposit": 202, "bell_seq": 202, "finiteformalpowerseri": 202, "rational_independ": 202, "ra": 202, "admiss": [202, 205], "r733": 202, "r734": 202, "simpled": 202, "exp_r": 202, "explik": 202, "hyper_r": 202, "rsolve_hypergeometr": 202, "r735": 202, "r736": 202, "solve_d": 202, "fourierseri": 203, "scalex": 203, "shiftx": 203, "sigma_approxim": 203, "gibb": 203, "bigl": 203, "bigr": 203, "lanczo": 203, "r737": 203, "gibbs_phenomenon": 203, "r738": 203, "sawtooth": 203, "bn": 203, "r739": 203, "limitseq": 205, "difference_delta": 205, "r740": 205, "differencedelta": 205, "limit_seq": [205, 207], "safeguard": 205, "r741": 205, "kauer": 205, "seqper": 206, "seqformula": 206, "seqbas": 206, "coeff_mul": 206, "find_linear_recurr": 206, "gfvar": 206, "seqadd": 206, "seqmul": 206, "_mul": 206, "recursiveseq": 206, "fib": 206, "invok": [207, 231, 232], "workhors": 207, "succ": [207, 220], "asymp": 207, "exposit": 207, "gloss": 207, "wsym": 207, "test_rewrite1": 207, "build_expression_tre": 207, "mrv_leadterm": 207, "e0": 207, "calculate_seri": 207, "limitinf": 207, "leadsimp": 207, "constantli": 207, "subsset": 207, "mrv_max1": 207, "mrv_max3": 207, "expsf": 207, "expsg": 207, "expsboth": 207, "o2": 207, "do_sub": 207, "r742": 207, "7048138294": 207, "7182818285": 207, "6349839002": 207, "6449340668": 207, "shank": 207, "6881721793": 207, "6931396564": 207, "6931471806": 207, "6931471805599453094172321215": 207, "r743": 207, "residue_theorem": 207, "neighborhood": 208, "rim": 208, "affirm": 208, "infimum": 208, "is_clos": 208, "closed": 208, "is_disjoint": 208, "r744": 208, "disjoint_set": 208, "is_open": 208, "is_proper_subset": 208, "is_proper_superset": 208, "left_open": 208, "is_superset": 208, "isdisjoint": 208, "issubset": 208, "issuperset": 208, "fancyset": 208, "lebesgu": 208, "r745": 208, "power_set": 208, "symmetric_differ": 208, "r746": 208, "right_open": 208, "mpi": 208, "r747": 208, "interval_": 208, "as_rel": 208, "is_left_unbound": 208, "is_right_unbound": 208, "r748": 208, "r749": 208, "union_": 208, "28set_theori": 208, "r750": 208, "intersection_": 208, "coin": [208, 220], "r751": 208, "cartesian_product": 208, "is_iter": 208, "r752": 208, "complementset": 208, "r753": 208, "disjoint_union": 208, "r754": 208, "empty_set": 208, "r755": 208, "universal_set": 208, "flambda": 208, "square_iter": 208, "base_set": 208, "cartesiancomplexregion": 208, "polarcomplexregion": 208, "unit_disk": 208, "upper_half_unit_disk": 208, "a_interv": 208, "b_interv": 208, "from_real": 208, "pset": 208, "rset": 208, "thetaset": 208, "upper_half_plan": 208, "normalize_theta_set": 208, "r756": 208, "r757": 208, "axiom_of_power_set": 208, "varnoth": 208, "sin_sol": 208, "r758": 208, "element_": 208, "tr0": 209, "tr1": 209, "tr2": 209, "tr2i": 209, "tr3": 209, "tr4": 209, "tr5": 209, "tr6": 209, "tr7": 209, "tr8": 209, "tr9": 209, "tr10": 209, "tr10i": 209, "tr11": 209, "tr12": 209, "tr12i": 209, "tr13": 209, "trmorri": 209, "tr14": 209, "tr15": 209, "tr16": 209, "tr22": 209, "tr111": 209, "ctr1": 209, "ctr4": 209, "rl1": 209, "rl2": 209, "deem": 209, "932": 209, "016": 209, "serendipit": 209, "dead": 209, "newa": 209, "lucki": 209, "sqt": 209, "_tr56": 209, "un": [209, 210], "r759": 209, "morri": 209, "27s_law": 209, "trpower": 209, "r760": 209, "list_of_trigonometric_ident": 209, "reduction_formula": 209, "ctr2": 209, "ctr3": 209, "r761": 209, "657": 209, "2478": 209, "dimitar": 209, "vlahovski": 209, "technolog": 209, "xiuqin": 209, "zhong": 209, "zhenb": 209, "zeng": 209, "1169": 209, "1177": 209, "sosmath": 209, "trig5": 209, "symplifi": [210, 212], "roach1996": 210, "roach1997": 210, "p_q": 210, "reachabl": [210, 220], "f_q": 210, "undo": [210, 276], "whenc": 210, "game": 210, "twofold": 210, "incongru": 210, "wlog": 210, "alpha_r": 210, "beta_r": 210, "blindli": 210, "messi": 210, "k_u": 210, "l_v": 210, "k_j": 210, "c_w": 210, "r_j": 210, "l_u": 210, "res_": 210, "delta_i": 210, "add_formula": 210, "addb": 210, "sum_0": 210, "test_hyperexpand": 210, "test_formula": 210, "typo": 210, "suboptim": 210, "imath": 210, "b1prime": 210, "vital": [210, 220], "308": 210, "nthroot": 211, "kroneckersimp": 211, "besselsimp": 211, "hypersimilar": 211, "epath": 211, "hongguang": [211, 256], "fu": [211, 212, 256], "unmodifi": 212, "my_measur": 212, "boolian": 212, "max_len": 212, "surd": 212, "strigonometr": 212, "399": 212, "rational_convers": 212, "base10": 212, "6004799503160655": 212, "nfloat": 212, "eq_x": 212, "max_term": 212, "polish": 212, "expand_power_bas": 212, "rcollect": 212, "analyz": [212, 225], "r762": 212, "pearc": 212, "163": 212, "6984": 212, "trigsimp_groebn": 212, "bb1": 212, "be1": 212, "bb2": 212, "be2": 212, "bei": 212, "max_it": 212, "unrad": [212, 218], "r763": 212, "ibm": 212, "fagin": 212, "symb85": 212, "r764": 212, "cybertest": 212, "opt_sub": 212, "as_unevaluated_bas": 212, "hyperegeometr": 212, "epathtool": 212, "ebnf": 212, "za": [212, 220], "xml": 212, "xpath": 212, "hasattr": [212, 234], "diophantu": 213, "mathematician": [213, 219], "citi": 213, "alexandria": 213, "father": 213, "hi": 213, "arithmetica": 213, "a_1x_1": 213, "a_2x_2": 213, "a_nx_n": 213, "bxy": 213, "cy": 213, "dxy": 213, "eyz": 213, "fzx": 213, "pythagorean": 213, "3y": 213, "4ac": 213, "9369318": 213, "920": 213, "5y": 213, "BY": 213, "t4": 213, "t5": 213, "providean": 213, "eqyptian": 213, "thilinaatsympi": 213, "andreescu": 213, "titu": 213, "andrica": 213, "dorin": 213, "cucurezeanu": 213, "ion": 213, "diophantineequ": 213, "alpertron": 213, "20160323033111": 213, "jpr2718": 213, "ax2p": 213, "permute_sign": [213, 238], "signed_permut": [213, 238], "_dict": 213, "r765": 213, "r766": 213, "pell": 213, "lmm": 213, "r767": 213, "393": 213, "13y": 213, "986": 213, "49299": 213, "1570": 213, "robertson": 213, "20160323033128": 213, "r768": 213, "nitaj": 213, "r769": 213, "numbertheori": 213, "r770": 213, "r771": 213, "676": 213, "884": 213, "fxz": 213, "3xy": 213, "r772": 213, "fxy": 213, "gyz": 213, "hxz": 213, "r773": 213, "cremona": 213, "rusin": 213, "2x_": 213, "m4": 213, "general_sum_of_squar": 213, "8m": 213, "r774": 213, "2345": 213, "proofwiki": 213, "integer_as_sum_of_three_squar": 213, "general_sum_of_even_pow": 213, "1729": 213, "stopiter": 213, "r775": 213, "44542": 213, "207": 213, "schorn": 213, "3456": 213, "1294585930293": 213, "2161": 213, "1137796": 213, "r776": 213, "evenli": 213, "var_t": 213, "r777": 213, "ur": 213, "dv": 213, "vr": 213, "r778": 213, "r779": 213, "nigel": 213, "y_0": [213, 216], "4x": [213, 219, 265], "5x": 213, "r780": 213, "r781": 213, "eprint": 213, "nottingham": 213, "uk": 213, "kvxefz87": 213, "r782": 213, "cuhk": 213, "hk": 213, "wkshum": 213, "404": 213, "r783": 213, "mordel": 213, "r784": 213, "r785": 213, "r786": 213, "r787": 213, "legrang": 213, "csusm": 213, "aitken_html": 213, "symbols_seq": 213, "dict_iter": 213, "r788": 213, "r789": 213, "inhomogen": [213, 216, 218], "r790": 213, "thue": 213, "riccati": 214, "pde": [214, 216], "deutil": [214, 216, 217], "linear_eq_to_matrix": [214, 216], "transolv": 214, "solve_rational_inequ": 215, "solve_poly_inequ": 215, "reduce_rational_inequ": 215, "reduce_abs_inequ": 215, "solve_univariate_inequ": [215, 219], "solvifi": [215, 219], "autodetect": [216, 217], "ode_ord": [216, 217, 218], "best_hint": 216, "all_integr": [216, 217], "_integr": [216, 217], "unevaluat": 216, "test_od": 216, "ode_": 216, "hintnam": [216, 217], "classify_sysod": 216, "ode_hintnam": 216, "tough": 216, "nth_linear_homogeneous_constant_coeff_integr": 216, "nth_linear": 216, "indep": 216, "indep_div_dep": 216, "undetermined_coeffici": 216, "_best": 216, "nth_algebraic_integr": 216, "separable_integr": 216, "1st_exact_integr": 216, "1st_linear_integr": 216, "bernoulli_integr": 216, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 216, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 216, "nth_linear_constant_coeff_variation_of_parameters_integr": 216, "solve_for_func": [216, 217], "homogeneouscoeffsubsdepdivindep": 216, "homogeneouscoeffsubsindepdivdep": 216, "varepsilon": 216, "genform": [216, 217], "starrett": 216, "symbolnam": 216, "startnumb": 216, "endnumb": 216, "renumb": 216, "absorpt": 216, "assist": 216, "2nd_hypergeometric_integr": 216, "almost_linear_integr": 216, "linear_coefficients_integr": 216, "separable_reduced_integr": 216, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 216, "liouville_integr": 216, "2nd_nonlinear_autonomous_conserv": 216, "2nd_nonlinear_autonomous_conserved_integr": 216, "newconst": 216, "ode_sol_simpl": 216, "trysolv": 216, "sola": 216, "solb": 216, "listofsolut": 216, "ode_problem": 216, "firstexact": 216, "exact_differential_equ": 216, "tenenbaum": 216, "dover": 216, "1963": 216, "homogeneouscoeffbest": 216, "ode_1st_homogeneous_coeff_best_integr": 216, "homogeneous_differential_equ": 216, "firstlinear": 216, "linear_differential_equ": 216, "first_order_equ": 216, "rationalriccati": 216, "atleast": 216, "riccati_equ": 216, "thieu": 216, "vo": 216, "www3": [216, 245], "risc_5387": 216, "phdthesisthieu": 216, "secondlinearairi": 216, "secondlinearbessel": 216, "math24": 216, "bernoulli_differential_equ": 216, "goldstein": 216, "braun": 216, "maplesoft": 216, "aspx": 216, "odeadvisor": 216, "riccatispeci": 216, "__________________": 216, "eqworld": 216, "ipmnet": 216, "ru": 216, "ode0106": 216, "ode0123": 216, "nthlinearconstantcoeffhomogen": 216, "nth_linear_constant_coeff_homogeneous_integr": 216, "nonhomogeneous_equation_with_constant_coeffici": 216, "nthlinearconstantcoeffundeterminedcoeffici": 216, "method_of_undetermined_coeffici": 216, "221": 216, "nthlinearconstantcoeffvariationofparamet": 216, "cramer": 216, "variation_of_paramet": 216, "planetmath": 216, "variationofparamet": 216, "nthlineareulereqhomogen": 216, "equidimension": 216, "nth_linear_euler_eq_homogeneous_integr": 216, "sollist": 216, "93euler_equ": 216, "bender": 216, "orszag": 216, "scientist": 216, "nthlineareulereqnonhomogeneousvariationofparamet": 216, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 216, "nthalgebra": 216, "nthorderreduc": 216, "caught": 216, "fault": 216, "almostlinear": 216, "first_linear": 216, "joel": 216, "mose": 216, "stormi": 216, "decad": 216, "august": [216, 235], "558": 216, "linearcoeffici": 216, "separablereduc": 216, "liegroup": 216, "secondhypergeometr": 216, "2f1": 216, "1f1": 216, "0f1": 216, "liouvillian": 216, "pfq": 216, "chan": 216, "cheb": 216, "terrab": 216, "ode_1st_power_seri": 216, "travi": [216, 231], "walker": 216, "ode_2nd_power_series_ordinari": 216, "lamar": 216, "seriessolut": 216, "simmon": 216, "176": 216, "ode_2nd_power_series_regular": 216, "lie_heuristic_abaco1_simpl": 216, "duart": 216, "da": 216, "mota": 216, "lie_heuristic_abaco1_product": 216, "roch": 216, "lie_heuristic_bivari": 216, "329": 216, "lie_heuristic_chi": 216, "lie_heuristic_abaco2_similar": 216, "lie_heuristic_function_sum": 216, "lie_heuristic_abaco2_unique_unknown": 216, "lie_heuristic_abaco2_unique_gener": 216, "lie_heuristic_linear": 216, "gy": 216, "bh": 216, "impract": 216, "val_inf": 216, "ybar": 216, "numa": 216, "dena": 216, "numi": 216, "deni": 216, "sol1": 216, "sol2": 216, "part_sol": 216, "haaheim": 216, "gensol": 216, "_linear_2eq_order1_type6": 216, "_linear_2eq_order1_type7": 216, "fgp": 216, "ag": 216, "bg": 216, "linear_ode_to_matrix": 216, "odeordererror": 216, "odenonlinearerror": 216, "eqs_mat": 216, "r791": 216, "matrix_differential_equ": 216, "canonical_od": 216, "canonical_eq": 216, "canonical_system": 216, "linodesolve_typ": 216, "type1": 216, "type2": 216, "type3": 216, "type4": 216, "type5": 216, "type6": 216, "type_of_equ": 216, "a_t": 216, "a_non_commut": 216, "matrix_exp_jordan_form": 216, "expj": 216, "matrix_exp": 216, "defect": 216, "p_invers": 216, "r792": 216, "defective_matrix": 216, "r793": 216, "r794": 216, "jordan_normal_form": 216, "comupt": 216, "r795": 216, "r796": 216, "matrix_exponenti": 216, "follw": 216, "antiderv": 216, "subscheck": 216, "system_info": 216, "sol_vector": 216, "sol_vector_evalu": 216, "_nonlinear_2eq_order1_type1": 216, "_nonlinear_2eq_order1_type2": 216, "_nonlinear_2eq_order1_type3": 216, "autonom": 216, "_nonlinear_2eq_order1_type4": 216, "_nonlinear_2eq_order1_type5": 216, "clairaut": 216, "envelop": 216, "_nonlinear_3eq_order1_type1": 216, "enspac": [216, 219], "sysod": 216, "sode0401": 216, "_nonlinear_3eq_order1_type2": 216, "sode0402": 216, "_nonlinear_3eq_order1_type3": 216, "sode0404": 216, "_nonlinear_3eq_order1_type4": 216, "sode0405": 216, "_nonlinear_3eq_order1_type5": 216, "sode0406": 216, "_handle_integr": 216, "gather": 216, "unhind": 216, "wolphramalpha": 216, "detool": 216, "hint_integr": 216, "alphanumer": 216, "hinder": 216, "matching_hint": 216, "matchdict": 216, "1st_homogeneous_coeff": 216, "your_hint": 216, "xfail": [216, 229, 231], "fun": [217, 269], "uxt": 217, "uxi": 217, "solvefun": 217, "test_pd": 217, "pde_hintnam": 217, "ux": 217, "allhint": 217, "1st_linear_constant_coeff_homogen": 217, "_preprocess": 217, "inabl": 217, "_xi_1": 217, "viktor": 217, "grigoryan": 217, "124a": 217, "substack": 217, "1st_linear_constant_coeff_integr": 217, "du": 217, "inspir": [217, 272], "pde_hint": 217, "checksol": 218, "ect": 218, "attain": [218, 249], "star": 218, "052": 218, "cov": 218, "pval": 218, "xval": 218, "rsolv": 218, "solve_linear": 218, "solve_linear_system": 218, "overdetermin": [218, 219], "msymbol": 218, "degener": [218, 219], "solve_linear_system_lu": 218, "solve_undetermined_coeff": 218, "equ": 218, "obligatori": 218, "19287309935246": 218, "27844411169911": 218, "73908513321516064165531208767387340401341175890076": 218, "steep": 218, "39267e": 218, "1684e": 218, "588469032184": 218, "315": 218, "730061685774": 218, "46792545969349058": 218, "inconclus": 218, "init": 218, "dissimilar": 218, "v_0": 218, "n_m": 218, "v_m": 218, "rsolve_poli": 218, "rsolve_ratio": 218, "r797": 218, "levelt": 218, "290": [218, 247], "296": 218, "r798": 218, "r799": 218, "revis": 218, "r800": 218, "289": 218, "alembertian": 218, "r801": 218, "r802": 218, "polysi": 218, "solve_triangul": 218, "kalkbrenn": 218, "patrizia": 218, "teo": 218, "aaecc": 218, "conditionset": [219, 220, 277], "productset": 219, "imageset": [219, 277], "complexregion": 219, "uncount": 219, "bizarr": 219, "her": 219, "sol_f": 219, "solveset_r": 219, "solveset_complex": 219, "methodologi": [219, 269], "_solve_real_trig": 219, "invert_r": 219, "invert_complex": 219, "_solve_rad": 219, "_solve_ab": 219, "_solve_as_r": 219, "_solve_as_poly_r": 219, "_solve_as_poly_complex": 219, "_solve_as_poli": 219, "gsoc": 219, "2014": [219, 220], "iamit": 219, "2948": 219, "6659": 219, "7523": 219, "sibx0afl3q": 219, "9696": 219, "27s_theorem": 219, "inftyright": 219, "nright": 219, "0right": 219, "domain_check": 219, "3z": 219, "9z": 219, "nonlinearerror": 219, "4z": 219, "cccc": 219, "eq3": 219, "eq4": 219, "391": 219, "_solve_system": 219, "_solve_using_known_valu": 219, "_transolv": 219, "_tsolv": 219, "tsolv": 219, "outright": 219, "tractabl": 219, "interf": 219, "add_typ": 219, "_is_exponenti": 219, "new_eq": 219, "_solve_exponenti": 219, "_is_class": 219, "_solve_class": 219, "_solve_expo": 219, "9x": 219, "solve_expo": 219, "log_b": 219, "_solve_logarithm": 219, "solve_log": 219, "_is_logarithm": 219, "prebuilt": 220, "finiterv": 220, "varianc": 220, "dice": 220, "continuousrv": 220, "continuousdistributionhandmad": 220, "dist": 220, "discreterv": 220, "discretedistributionhandmad": 220, "pmf": 220, "finitedistributionhandmad": 220, "discreteuniform": 220, "randomsymbol": 220, "r803": 220, "discrete_uniform_distribut": 220, "r804": 220, "discreteuniformdistribut": 220, "d6": 220, "diedistribut": 220, "toss": 220, "r805": 220, "bernoulli_distribut": 220, "r806": 220, "bernoullidistribut": 220, "numeb": 220, "unfair": 220, "r807": 220, "coin_flip": 220, "binomialdistribut": 220, "r808": 220, "binomial_distribut": 220, "r809": 220, "betabinomi": 220, "r810": 220, "r811": 220, "betabinomialdistribut": 220, "popul": 220, "marbl": 220, "r812": 220, "hypergeometric_distribut": 220, "r813": 220, "hypergeometricdistribut": 220, "700000000000000": 220, "r814": 220, "rademacher_distribut": 220, "r815": 220, "geometric_distribut": 220, "r816": 220, "geometricdistribut": 220, "r817": 220, "hermite_distribut": 220, "poisson": 220, "r818": 220, "poisson_distribut": 220, "r819": 220, "poissondistribut": 220, "r820": 220, "logarithmic_distribut": 220, "r821": 220, "logarithmicdistribut": 220, "negativebinomi": 220, "r822": 220, "negative_binomial_distribut": 220, "r823": 220, "negativebinomialdistribut": 220, "skellam": 220, "mu1": 220, "mu2": 220, "mu_1": 220, "mu_2": 220, "i_k": 220, "r824": 220, "skellam_distribut": 220, "yulesimon": 220, "yule": 220, "simon": 220, "r825": 220, "93simon_distribut": 220, "8100": 220, "r826": 220, "zeta_distribut": 220, "cdf": 220, "r827": 220, "arcsine_distribut": 220, "benini": 220, "r828": 220, "benini_distribut": 220, "r829": 220, "v8": 220, "beninidistribut": 220, "r830": 220, "beta_distribut": 220, "r831": 220, "betadistribut": 220, "betanoncentr": 220, "noncentr": 220, "r832": 220, "noncentral_beta_distribut": 220, "r833": 220, "noncentralbetadistribut": 220, "betaprim": 220, "r834": 220, "beta_prime_distribut": 220, "r835": 220, "betaprimedistribut": 220, "boundedpareto": 220, "pareto": 220, "r836": 220, "pareto_distribut": 220, "bounded_pareto_distribut": 220, "r837": 220, "cauchy_distribut": 220, "r838": 220, "cauchydistribut": 220, "r839": 220, "chi_distribut": 220, "r840": 220, "chidistribut": 220, "chinoncentr": 220, "r841": 220, "noncentral_chi_distribut": 220, "chisquar": 220, "r842": 220, "chi_squared_distribut": 220, "r843": 220, "squareddistribut": 220, "dagum": 220, "r844": 220, "dagum_distribut": 220, "erlang": 220, "r845": 220, "erlang_distribut": 220, "r846": 220, "erlangdistribut": 220, "exgaussian": 220, "emg": 220, "r847": 220, "exponentially_modified_gaussian_distribut": 220, "quantil": 220, "r848": 220, "exponential_distribut": 220, "r849": 220, "exponentialdistribut": 220, "fdistribut": 220, "______________________________": 220, "r850": 220, "r851": 220, "fisherz": 220, "fisher": 220, "2d_1": 220, "d_1z": 220, "d_1e": 220, "r852": 220, "27s_z": 220, "r853": 220, "fishersz": 220, "frechet": 220, "r854": 220, "a9chet_distribut": 220, "r855": 220, "gamma_distribut": 220, "r856": 220, "gammadistribut": 220, "gammainvers": 220, "r857": 220, "gompertz": 220, "r858": 220, "gompertz_distribut": 220, "gumbel": 220, "dfrac": 220, "r859": 220, "gumbeldistribut": 220, "r860": 220, "gumbel_distribut": 220, "r861": 220, "mathwav": 220, "easyfit": 220, "gumbel_max": 220, "r862": 220, "gumbel_min": 220, "kumaraswami": 220, "r863": 220, "kumaraswamy_distribut": 220, "r864": 220, "laplace_distribut": 220, "r865": 220, "laplacedistribut": 220, "r866": 220, "a9vy_distribut": 220, "r867": 220, "levydistribut": 220, "logist": 220, "r868": 220, "logistic_distribut": 220, "r869": 220, "logisticdistribut": 220, "loglogist": 220, "unimod": 220, "r870": 220, "lognorm": 220, "r871": 220, "r872": 220, "lognormaldistribut": 220, "lomax": 220, "r873": 220, "lomax_distribut": 220, "maxwel": 220, "2a": 220, "r874": 220, "maxwell_distribut": 220, "r875": 220, "maxwelldistribut": 220, "moyal": 220, "r876": 220, "moyaldistribut": 220, "r877": 220, "rice": 220, "dobelman": 220, "textfil": 220, "distributionshandbook": 220, "nakagami": 220, "r878": 220, "nakagami_distribut": 220, "marginal_distribut": 220, "r879": 220, "normal_distribut": 220, "r880": 220, "normaldistributionfunct": 220, "xm": 220, "x_m": 220, "r881": 220, "r882": 220, "paretodistribut": 220, "powerfunct": 220, "paramat": 220, "r883": 220, "power_func": 220, "quadraticu": 220, "r884": 220, "quadratic_distribut": 220, "raisedcosin": 220, "r885": 220, "raised_cosine_distribut": 220, "r886": 220, "rayleigh_distribut": 220, "r887": 220, "rayleighdistribut": 220, "r888": 220, "reciprocal_distribut": 220, "studentt": 220, "r889": 220, "student_t": 220, "r890": 220, "studentst": 220, "shiftedgompertz": 220, "r891": 220, "shifted_gompertz_distribut": 220, "r892": 220, "trapezoidal_distribut": 220, "r893": 220, "triangular_distribut": 220, "r894": 220, "triangulardistribut": 220, "r895": 220, "uniform_distribution_": 220, "28continu": 220, "r896": 220, "uniformdistribut": 220, "uniformsum": 220, "irwin": 220, "r897": 220, "uniform_sum_distribut": 220, "r898": 220, "uniformsumdistribut": 220, "vonmis": 220, "mise": 220, "i_0": 220, "r899": 220, "von_mises_distribut": 220, "r900": 220, "vonmisesdistribut": 220, "wald": 220, "gaussianinvers": 220, "r901": 220, "inverse_gaussian_distribut": 220, "r902": 220, "inversegaussiandistribut": 220, "weibul": 220, "geq0": 220, "r903": 220, "weibull_distribut": 220, "r904": 220, "weibulldistribut": 220, "wignersemicircl": 220, "semicircl": 220, "frac2": 220, "r905": 220, "wigner_semicircle_distribut": 220, "r906": 220, "wignerssemicirclelaw": 220, "jointrv": 220, "_set": 220, "multivariatenorm": 220, "noninvert": 220, "ob": 220, "r907": 220, "multivariate_normal_distribut": 220, "multivariatelaplac": 220, "r908": 220, "multivariate_laplace_distribut": 220, "generalizedmultivariateloggamma": 220, "joint_rv_typ": 220, "gd": 220, "y_3": 220, "gmvlg": 220, "generalizedmultivariateloggammaomega": 220, "r909": 220, "generalized_multivariate_log": 220, "r910": 220, "234137346_on_a_multivariate_log": 220, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 220, "correl": 220, "gmvlgo": 220, "r911": 220, "r912": 220, "r913": 220, "multinomial_distribut": 220, "r914": 220, "multinomialdistribut": 220, "multivariatebeta": 220, "r915": 220, "dirichlet_distribut": 220, "r916": 220, "dirichletdistribut": 220, "multivariateewen": 220, "ewen": 220, "r917": 220, "27s_sampling_formula": 220, "r918": 220, "rutger": 220, "hcrane": 220, "sts529": 220, "multivariatet": 220, "negativemultinomi": 220, "n_c": 220, "r919": 220, "negative_multinomial_distribut": 220, "r920": 220, "normalgamma": 220, "r921": 220, "discretemarkovchain": 220, "state_spac": 220, "trans_prob": 220, "markov": 220, "characteris": 220, "transitionmatrixof": 220, "transition_prob": 220, "sunni": 220, "cloudi": 220, "raini": 220, "randomindexedsymbol": 220, "409": 220, "6963328": 220, "3096": 220, "query_gt": 220, "64705": 220, "r922": 220, "markov_chain": 220, "time_markov_chain": 220, "r923": 220, "dartmouth": 220, "teaching_aid": 220, "books_articl": 220, "probability_book": 220, "chapter11": 220, "canonical_form": 220, "transient": 220, "p_new": 220, "new_matrix": 220, "communication_class": 220, "r924": 220, "onlinelibrari": 220, "wilei": 220, "1002": 220, "9780470316887": 220, "app1": 220, "r925": 220, "columbia": 220, "ww2040": 220, "6711f12": 220, "lect1023big": 220, "is_recurr": 220, "tarjan": [220, 238], "r926": 220, "4701sum07": 220, "4701": 220, "mcii": 220, "r927": 220, "ceca": 220, "clemson": 220, "shierd": 220, "shier": 220, "r928": 220, "ujcont": 220, "uj": 220, "7506": 220, "content1": 220, "r929": 220, "econ": 220, "dtmc": 220, "reccur": 220, "r930": 220, "absorbing_markov_chain": 220, "r931": 220, "brandei": 220, "igusa": 220, "math56as08": 220, "math56a_s08_notes015": 220, "fixed_row_vector": 220, "stationary_distribut": 220, "fundamental_matrix": 220, "r932": 220, "lip": 220, "limiting_distribut": 220, "condition_set": 220, "wm": 220, "r933": 220, "probabilitycours": 220, "11_2_6_stationary_and_limiting_distribut": 220, "r934": 220, "galton": 220, "uchicago": 220, "yibi": 220, "stat317": 220, "lecture4_6up": 220, "continuousmarkovchain": 220, "gen_mat": 220, "generator_matrix": 220, "45279": 220, "58602": 220, "37933": 220, "34211": 220, "7143": 220, "4002723175": 220, "6832579186": 220, "r935": 220, "r936": 220, "biu": 220, "il": 220, "amirgi": 220, "ctmcnote": 220, "bernoulliprocess": 220, "processs": 220, "joint_distribut": 220, "jointdistributionhandmad": 220, "r937": 220, "bernoulli_process": 220, "r938": 220, "mathc": 220, "clarku": 220, "djoyc": 220, "ma217": 220, "given_condit": 220, "poissonprocess": 220, "648": 220, "r939": 220, "11_0_0_intro": 220, "r940": 220, "poisson_point_process": 220, "wiener": 220, "brownian": 220, "scottish": 220, "botanist": 220, "r941": 220, "11_4_0_brownian_motion_wiener_process": 220, "r942": 220, "wiener_process": 220, "gammaprocess": 220, "jump": [220, 276], "472": 220, "r943": 220, "gamma_process": 220, "matrixgamma": 220, "scale_matrix": 220, "r944": 220, "matrix_gamma_distribut": 220, "wishart": 220, "r945": 220, "wishart_distribut": 220, "matrixnorm": 220, "location_matrix": 220, "scale_matrix_1": 220, "scale_matrix_2": 220, "r946": 220, "matrix_normal_distribut": 220, "compound_rv": 220, "compounddistribut": 220, "crv_type": 220, "r947": 220, "compound_probability_distribut": 220, "numsampl": 220, "evaluate_integr": 220, "r948": 220, "entropy_": 220, "information_theori": 220, "r949": 220, "crmarsh": 220, "charles_marsh_continuous_entropi": 220, "r950": 220, "uconn": 220, "kconrad": 220, "blurb": 220, "entropypost": 220, "arg1": 220, "arg2": 220, "cexpr": 220, "coskew": 220, "sigma_": 220, "r951": 220, "r952": 220, "probability_distribut": 220, "randomst": 220, "die_rol": 220, "samp": 220, "pspace": 220, "samp_list": 220, "sam": 220, "42519758": 220, "40207856": 220, "94991743": 220, "85819627": 220, "83403519": 220, "9412172": 220, "85768055": 220, "38954165": 220, "11163337": 220, "3176591": 220, "79115232": 220, "63232916": 220, "01747268": 220, "96716083": 220, "sampling_p": 220, "sampling_": 220, "factorial_mo": 220, "r953": 220, "r954": 220, "factorialmo": 220, "kurtosi": 220, "outlier": 220, "sigma_x": 220, "r955": 220, "r956": 220, "asymmetri": 220, "pearson": 220, "sampling_dens": 220, "centralmo": 220, "cmoment": 220, "expectationmatrix": 220, "randommatrixsymbol": 220, "n11": 220, "n12": 220, "n21": 220, "n22": 220, "variancematrix": 220, "crosscovariancematrix": 220, "randomdomain": 220, "probabilist": 220, "singledomain": 220, "singlepspac": 220, "productdomain": 220, "productpspac": 220, "conditionaldomain": 220, "frv": 220, "finitedomain": 220, "finitepspac": 220, "crv": 220, "continuousdomain": 220, "continuouspspac": 220, "diepspac": 220, "singlefinitepspac": 220, "normalpspac": 220, "singlecontinuouspspac": 220, "frv_type": 220, "randomvari": 220, "tactic": 220, "random_symbol": 220, "rs_swap": 220, "pspace1": 220, "pspace2": 220, "immutabledensendimarrai": 221, "tomatrix": 221, "j_m": 221, "i_a": 221, "i_b": 221, "sum_k": 221, "tensorcontract": [221, 222], "tensordiagon": [221, 222], "derive_by_arrai": 221, "sum_m": 221, "immutablesparsendimarrai": 221, "mutabledensendimarrai": 221, "mutablesparsendimarrai": 221, "index_order_old": 221, "index_order_new": 221, "cab": 221, "contraction_ax": 221, "diagonal_ax": 221, "arraycontract": 222, "arraydiagon": 222, "arraysymbol": 222, "convert_indexed_to_arrai": 222, "arrayadd": 222, "convert_matrix_to_arrai": 222, "convert_array_to_matrix": 222, "expr_tr": 222, "array_der": 222, "index_method": 224, "get_contraction_structur": [224, 225], "deepest": 224, "nested_contract": 224, "get_indic": [224, 225, 226, 227], "indexconformanceexcept": 224, "______": 225, "stem": 225, "dim1": 225, "dim2": 225, "qwerti": 225, "a_ij": 225, "b_ij": 225, "syntact": 225, "a_real": 225, "c_inherit": 225, "c_explicit": 225, "unrol": 225, "tensorindextyp": [226, 227], "eps_dim": 226, "metric_nam": 226, "su": 226, "lorentz": 226, "tensor_index_typ": 226, "is_up": 226, "tensor_inde_typ": 226, "typ": 226, "tensorhead": [226, 227], "index_typ": 226, "tensorsymmetri": 226, "monoterm": 226, "_tensormanag": 226, "set_comm": 226, "asym2": 226, "fully_symmetr": 226, "tensori": [226, 227], "e_z": 226, "no_symmetri": 226, "p_x": 226, "p_y": 226, "p_z": 226, "ipos1": 226, "ipos2": 226, "icomp1": 226, "icomp2": 226, "nameless": 226, "replacement_dict": 226, "free_arg": 226, "addend": 226, "canon_bp": 226, "contract_metr": 226, "contract_al": 226, "ipo": 226, "icomp": 226, "nonrep": 226, "dum": 226, "ext_rank": 226, "is_canon_bp": 226, "m0": 226, "get_free_indic": [226, 227], "perm2tensor": 226, "tid": 226, "sorted_compon": 226, "riemann_cyclic_replac": 226, "riemann_cycl": 226, "cadabra": 226, "multiterm": 226, "bianchi": 226, "sym2": 226, "direct_product": 226, "monotorem": 226, "tableaux": 226, "tensortyp": 226, "repetit": [226, 238], "tensormanag": 226, "comm_i2symbol": 226, "comm_symbols2i": 226, "get_comm": 226, "gcomm": 226, "ghcomm": 226, "toper": 227, "partialderiv": 227, "valenc": 227, "uncontract": 227, "compa": 227, "compb": 227, "derivand": 227, "xpass": [229, 231], "nocache_fail": 229, "expectedexcept": 229, "assertionerror": 229, "exceptioninfo": 229, "abort": 229, "9999": 229, "warningcl": [229, 236], "test_stacklevel": 229, "randtest": 230, "portabl": [231, 232], "pytestreport": 231, "force_color": 231, "readlin": 231, "sympydoctestfind": 231, "doctestpars": 231, "exclude_empti": 231, "sympydoctestrunn": 231, "checker": 231, "optionflag": 231, "5140": 231, "doctestrunn": 231, "clear_glob": 231, "writer": 231, "garbag": 231, "check_output": 231, "report_": 231, "sympyoutputcheck": 231, "outputcheck": 231, "stdlib": 231, "testrunn": 231, "sympytestresult": 231, "convert_to_native_path": 231, "lst": 231, "blacklist": 231, "get_sympy_dir": 231, "raise_on_deprec": 231, "deprecationwarn": [231, 236], "run_all_test": 231, "test_arg": 231, "test_kwarg": 231, "doctest_arg": 231, "doctest_kwarg": 231, "examples_arg": 231, "examples_kwarg": 231, "run_in_subprocess_with_hash_random": 231, "function_kwarg": 231, "virtualenv": 231, "pythonhashse": 231, "_test": 231, "split_list": 231, "sympytestfil": 231, "module_rel": 231, "extraglob": 231, "raise_on_error": 231, "basenam": [231, 232, 233], "slate": 231, "dont_accept_true_for_1": 231, "dont_accept_blanklin": 231, "normalize_whitespac": 231, "ellipsi": 231, "ignore_exception_detail": 231, "report_udiff": 231, "report_cdiff": 231, "report_ndiff": 231, "report_only_first_failur": 231, "mortem": 231, "tomfooleri": 231, "testmod": 231, "tester": 231, "fiddl": [231, 276], "timeout": 231, "keyboardinterrupt": 231, "interrupt": 231, "_basic": 231, "kw": 231, "test_equ": 231, "pdb": 231, "pipe": 231, "time_bal": 231, "tandem": 232, "matvec": 232, "codewrapp": 232, "distutil": 232, "fwrap": 232, "swig": 232, "binary_cal": 232, "22925376": 232, "25165824": 232, "_imp_": [232, 239], "filepath": 232, "cythoncodewrapp": 232, "dump_pyx": 232, "dummywrapp": 232, "f2pycodewrapp": 232, "ufuncifycodewrapp": 232, "dump_c": [232, 233], "funcnam": 232, "code_gen": [232, 233], "argument_tupl": 232, "include_dir": 232, "library_dir": 232, "extra_compile_arg": 232, "extra_link_arg": 232, "symfunc": [232, 239], "funtion_nam": 232, "ndimension": 232, "f_fortran": 232, "f_cython": 232, "r957": 232, "fortran77": 233, "fortran90": 233, "julia": [233, 263], "rust": [233, 263], "mileston": 233, "unsurmount": 233, "pyf": 233, "inputoutput": 233, "tcc": 233, "libtcc": 233, "date": 233, "hostnam": 233, "sha1": 233, "ccodegen": 233, "preprocessor_stat": 233, "dump_h": 233, "guard": 233, "get_prototyp": 233, "codegenerror": 233, "function_prototyp": 233, "dump_cod": 233, "cname": 233, "fname": 233, "pynam": 233, "jlname": 233, "octnam": 233, "rsname": 233, "fcodegen": 233, "f90": 233, "dump_f95": 233, "get_interfac": 233, "juliacodegen": 233, "dump_jl": 233, "octavecodegen": 233, "dump_m": 233, "returnvalu": 233, "destin": 233, "local_var": 233, "result_vari": 233, "ot": 233, "unnam": 233, "rustcodegen": 233, "dump_r": 233, "f_result": 233, "myfcn": 233, "fcn2": 233, "myfcn_result": 233, "void": 233, "get_default_datatyp": 233, "complex_allow": 233, "agnost": 233, "conserve_mpmath_dp": 234, "doctest_depends_on": 234, "disable_view": 234, "python_vers": 234, "memoize_properti": 234, "propfunc": 234, "no_attrs_in_subclass": 234, "__all__": 234, "some_funct": 234, "thread": 234, "xthread": 234, "threaded_factori": 234, "use_add": 234, "multiset_partitions_taocp": 235, "visitor": 235, "pstack": 235, "lpart": 235, "topmost": 235, "partcompon": 235, "peek": [235, 276], "unpredict": 235, "list_visitor": 235, "abb": [235, 238], "factoring_visitor": 235, "multisetpartitiontravers": 235, "aocp": 235, "count_partit": 235, "127750": 235, "686": 235, "4a": 235, "factorisatio": 235, "oppenheim": 235, "numerorum": 235, "canfield": 235, "erdo": 235, "OF": 235, "yorgei": 235, "monad": 235, "persist": 235, "288716": 235, "memoiz": [235, 237, 263], "dramat": 235, "hypothet": 235, "borrow": 235, "coalesc": 235, "_rang": 235, "stretch": 235, "brain": 235, "histogram": 235, "enum_al": 235, "enum_larg": 235, "enum_rang": 235, "enum_smal": 235, "ub": 235, "parti": 236, "catch_warn": 236, "simplefilt": 236, "dedent": [236, 241], "enum": [237, 263], "pkgdata": [237, 263], "kbin": 238, "partion": 238, "ordered_partit": 238, "bcd": 238, "notiter": 238, "binary_partit": 238, "r958": 238, "taocp": 238, "nx": 238, "common_prefix": 238, "common_suffix": 238, "unhash": 238, "r959": 238, "connected_component_": 238, "graph_theori": 238, "r960": 238, "27s_strongly_connected_components_algorithm": 238, "dict_merg": 238, "filter_symbol": 238, "myop": 238, "kog": 238, "informatik": 238, "hamburg": 238, "mein": 238, "python_trick": 238, "neighbor": 238, "xxxxxx": 238, "xxxx": 238, "r961": 238, "method_ring": 238, "r962": 238, "4856615": 238, "4857018": 238, "r963": 238, "programminggeek": 238, "r964": 238, "steinhau": 238, "93johnson": 238, "93trotter_algorithm": 238, "r965": 238, "involut": 238, "eco": 238, "vajnovszki": 238, "dmtc": 238, "generate_involut": 238, "r966": 238, "permutationinvolut": 238, "generate_oriented_forest": 238, "forest": 238, "acycl": 238, "r967": 238, "beyer": 238, "hedetniemi": 238, "novemb": 238, "r968": 238, "1633833": 238, "has_dup": 238, "has_varieti": 238, "iproduct": 238, "abcbb": 238, "is_sequ": 238, "generatortyp": 238, "_iter": 238, "ordered_flag": 238, "least_rot": 238, "rotate_left": 238, "r969": 238, "lexicographically_minimal_string_rot": 238, "minlex": 238, "acb": 238, "11010011000": 238, "00011010011": 238, "00011001011": 238, "aaa": 238, "abi": 238, "bby": 238, "abracadabra": 238, "banana": 238, "multiset_derang": 238, "uniq": 238, "1233": 238, "3312": 238, "3321": 238, "aba": 238, "baa": 238, "bead": 238, "ooo": 238, "r970": 238, "r971": 238, "jeromekelleh": 238, "r972": 238, "jerom": 238, "kelleh": 238, "barri": 238, "sullivan": 238, "0909": 238, "2331v2": 238, "r973": 238, "activest": 238, "218332": 238, "postfix": 238, "random_derang": 238, "reseed": 238, "templat": 238, "rotate_right": 238, "roundrobin": 238, "ef": 238, "credit": [238, 261], "sakki": 238, "keyfunc": 238, "subgraph": 238, "r974": 238, "r975": 238, "longest": 238, "r976": 238, "unflatten": 238, "afunc": 239, "lam_f": 239, "lambdastr": 239, "dummifi": 239, "use_imp": 239, "custom_sin": 239, "38177329": 239, "49315059": 239, "8414709848078965": 239, "eager": 239, "enable_eager_execut": 239, "eagertensor": 239, "__class__": 239, "placehold": 239, "user_guid": 239, "runtimewarn": 239, "sin_cos_sympi": 239, "sin_co": 239, "sin_cos_numpi": 239, "38177329068": 239, "module_dictionari": 239, "_lambdifygener": 239, "__globals__": 239, "lambdaprint": [239, 263], "90929743": [239, 265], "assoc_recurrence_memo": 240, "base_seq": 240, "memo": 240, "pn0": 240, "recurrence_memo": 240, "specfun": 240, "__index__": 241, "sanit": 241, "99999999999999991611392": 241, "debug_decor": 241, "fillded": 241, "strline": 241, "rawlin": 241, "find_execut": 241, "pathsep": 241, "strictlessthan": 241, "pastabl": 241, "bee": 241, "spamham": 241, "sha": 241, "spam": 241, "egg": 241, "md5": 241, "eggsham": 241, "r977": 241, "6116978": 241, "roken": 241, "deletechar": 241, "multicharact": 241, "oldchar": 241, "newchar": 241, "acquir": 242, "getresourc": 242, "pkgname": 242, "pkgpath": 242, "dirnam": 242, "normpath": 242, "rb": 242, "__loader__": 242, "stringio": 242, "get_resourc": 242, "ioerror": 242, "mydata": 242, "mypkgdata": 242, "jpg": 242, "get_class": 243, "lookup_view": 243, "get_mod_func": 243, "callback": 243, "timeutil": 244, "coordsysrect": 245, "rotation_matrix": [245, 246, 249], "vector_nam": 245, "variable_nam": [245, 251], "latex_vect": 245, "pretty_vect": 245, "latex_scalar": 245, "pretty_scalar": 245, "new_system": 245, "create_new": [245, 249], "transformation_to_par": 245, "transformation_from_par": 245, "locate_new": [245, 247, 248, 249, 250, 251], "position_wrt": [245, 248, 249, 250], "orient_new": [245, 246], "axisorient": [245, 249, 252], "axis_orient": [245, 249], "bodyorient": [245, 249, 252], "body_orient": [245, 246, 249], "spaceorient": [245, 249, 252], "space_orient": [245, 246], "quaternionorient": [245, 249, 252], "q_orient": [245, 246], "orient_new_axi": [245, 247, 249], "orient_new_bodi": [245, 249], "angle1": [245, 246], "angle2": [245, 246], "angle3": [245, 246], "euler_angl": [245, 246], "orient_new_quaternion": [245, 249], "orient_new_spac": [245, 249], "coordsyrect": 245, "v_a": 245, "v_b": 245, "scalar_map": 245, "basevector": [245, 248, 249], "delop": [245, 250, 251], "r978": 245, "r979": 245, "basedyad": [245, 248], "second_system": 245, "deloper": [245, 252], "curl": [245, 252, 254], "parabola": 245, "rational_parametr": 245, "singular_point": 245, "regular_point": 245, "reg_point": 245, "implict": 245, "cubic_curv": 245, "calulc": 245, "hoffmann": 245, "purdu": 245, "lib": 245, "cgi": 245, "viewcont": 245, "1827": 245, "cstech": 245, "erik": 245, "hillgart": 245, "diploma": 245, "linz": 245, "universitat": 245, "availa": 245, "risc_1355": 245, "20point": 245, "20on": 245, "20conic": 245, "semispher": [245, 254], "coordsys3d": [246, 247, 248, 250, 251, 252, 254], "axis_orienter1": 246, "axis_orienter2": 246, "axis_orienter3": 246, "body_orienter1": 246, "body_orienter2": 246, "body_orienter3": 246, "system2": 247, "parametricregion": [247, 252, 254], "implicitregion": [247, 252, 254], "essenc": 248, "vectormul": 248, "vectoradd": 248, "ofcours": 248, "vectorzero": 248, "expressli": 248, "express_coordin": [248, 249], "dyadicmul": 248, "dyadicadd": 248, "cleanest": 249, "orient_new_": 249, "basescalar": [249, 251], "oabc": 250, "oa": 250, "pq": 250, "sr": 250, "wikidel": 250, "ffield": 250, "gradient_field": 251, "instantan": 251, "directional_deriv": 251, "lame": 251, "quadrilater": 252, "flux": 252, "parametricintegr": 252, "matrix_to_vector": 252, "vector_integr": [252, 254], "dyadicproduct": 252, "quantifi": 253, "throughtout": 253, "necesssari": 254, "param_circl": 254, "implicit_circl": 254, "obextj": 254, "solidspher": 254, "lamina": 254, "\ud835\udc45": 254, "cylind": 254, "vectorfield": 254, "hemispher": 254, "top_fac": 254, "bottom_fac": 254, "27_theorem": 254, "cone": 254, "divergence_theorem": 254, "12288": 254, "subcategori": 255, "cnode": 257, "cxxnode": 257, "fnode": 257, "pyutil": 257, "cutil": 257, "futil": 257, "ecm": 260, "copyright": 261, "truss": 261, "pappu": 262, "hexagon": 262, "prettyprint": 263, "rcodeprint": 263, "javascript": [263, 275], "gtk": 263, "mathmlprint": 263, "pythoncodeprint": 263, "pythonprint": 263, "dotprint": [263, 271, 275], "str_expr": 265, "82842712474619": 265, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 265, "0874989834394464": 265, "roundoff": 265, "14112001": 265, "7568025": 265, "95892427": 265, "2794155": 265, "6569866": 265, "98935825": 265, "41211849": 265, "0998334166468": 265, "sympy_nam": 265, "numerical_funct": 265, "rephras": 266, "oh": 266, "integration_vari": 266, "dfdx": 266, "equidistantli": 266, "d2fdx2": 266, "django": 268, "oop": 268, "crazi": 268, "abcdef": 268, "reevalu": 268, "infal": 268, "insight": 269, "entertain": 269, "preliminari": 269, "82842712475": 270, "cass": 270, "wrote": [270, 271], "theme": 270, "expanded_expr": 270, "whet": 270, "appetit": 270, "c\u2082": [270, 277], "c\u2081": [270, 277], "\u03bd": 270, "sell": 270, "battl": 270, "confid": 270, "gigabyt": 270, "tear": 271, "stopper": 271, "uexpr": 271, "unevalutedexpr": 271, "downsid": 272, "algebraic_multipl": 272, "pdp": 272, "undertest": 272, "underevalu": 272, "my_iszero": 272, "stronger": 272, "tradeoff": 272, "wonder": 272, "5b7c3e8ee5b40332abdb206c": 272, "15141": 272, "19548": 272, "10120": 272, "10279": 272, "constant_problem": 272, "possiblezeroq": 272, "mupad_ref": 272, "iszero": 272, "congratul": 273, "decent": 274, "austin": 274, "video": 274, "bvar": 275, "unnecessarili": 276, "whittl": 276, "catchal": 276, "sound": 276, "collected_expr": 276, "cdot1": 276, "undertak": 276, "undon": 276, "cdot2": 276, "nck": 276, "pronounc": 276, "_2f_1": 276, "cfrac": 276, "list_to_frac": 276, "a\u2080": 276, "a\u2083": 276, "a\u2084": 276, "pointless": 276, "orig_frac": 276, "diffeq": 277}, "objects": {"": [[24, 0, 0, "-", "sympy"]], "sympy": [[26, 0, 0, "-", "abc"], [27, 0, 0, "-", "algebras"], [30, 0, 0, "-", "assumptions"], [33, 0, 0, "-", "calculus"], [34, 0, 0, "-", "categories"], [55, 0, 0, "-", "diffgeom"], [56, 0, 0, "-", "discrete"], [60, 0, 0, "-", "functions"], [73, 0, 0, "-", "holonomic"], [80, 0, 0, "-", "integrals"], [81, 0, 0, "-", "interactive"], [82, 0, 0, "-", "liealgebras"], [83, 0, 0, "-", "logic"], [88, 0, 0, "-", "matrices"], [95, 0, 0, "-", "parsing"], [261, 0, 0, "-", "physics"], [196, 0, 0, "-", "polys"], [218, 0, 0, "-", "solvers"], [220, 0, 0, "-", "stats"], [223, 0, 0, "-", "tensor"], [228, 0, 0, "-", "testing"], [237, 0, 0, "-", "utilities"], [252, 0, 0, "-", "vector"]], "sympy.algebras": [[27, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[27, 2, 1, "", "add"], [27, 2, 1, "", "angle"], [27, 2, 1, "", "arc_coplanar"], [27, 2, 1, "", "axis"], [27, 2, 1, "", "exp"], [27, 2, 1, "", "from_axis_angle"], [27, 2, 1, "", "from_rotation_matrix"], [27, 2, 1, "", "index_vector"], [27, 2, 1, "", "integrate"], [27, 2, 1, "", "inverse"], [27, 2, 1, "", "is_pure"], [27, 2, 1, "", "is_zero_quaternion"], [27, 2, 1, "", "mensor"], [27, 2, 1, "", "mul"], [27, 2, 1, "", "norm"], [27, 2, 1, "", "normalize"], [27, 2, 1, "", "orthogonal"], [27, 2, 1, "", "parallel"], [27, 2, 1, "", "pow"], [27, 2, 1, "", "pow_cos_sin"], [27, 2, 1, "", "rotate_point"], [27, 2, 1, "", "scalar_part"], [27, 2, 1, "", "to_axis_angle"], [27, 2, 1, "", "to_rotation_matrix"], [27, 2, 1, "", "vector_coplanar"], [27, 2, 1, "", "vector_part"]], "sympy.assumptions": [[28, 0, 0, "-", "ask"], [29, 0, 0, "-", "assume"], [31, 0, 0, "-", "predicates"], [32, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[28, 1, 1, "", "AssumptionKeys"], [28, 3, 1, "", "ask"], [28, 3, 1, "", "register_handler"], [28, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[29, 1, 1, "", "AppliedPredicate"], [29, 1, 1, "", "AssumptionsContext"], [29, 1, 1, "", "Predicate"], [29, 1, 1, "", "UndefinedPredicate"], [29, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[29, 4, 1, "", "arg"], [29, 4, 1, "", "arguments"], [29, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[29, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[29, 2, 1, "", "eval"], [29, 5, 1, "", "handler"], [29, 2, 1, "", "register"], [29, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[31, 1, 1, "", "FinitePredicate"], [31, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[31, 1, 1, "", "CommutativePredicate"], [31, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[31, 1, 1, "", "ComplexElementsPredicate"], [31, 1, 1, "", "DiagonalPredicate"], [31, 1, 1, "", "FullRankPredicate"], [31, 1, 1, "", "IntegerElementsPredicate"], [31, 1, 1, "", "InvertiblePredicate"], [31, 1, 1, "", "LowerTriangularPredicate"], [31, 1, 1, "", "NormalPredicate"], [31, 1, 1, "", "OrthogonalPredicate"], [31, 1, 1, "", "PositiveDefinitePredicate"], [31, 1, 1, "", "RealElementsPredicate"], [31, 1, 1, "", "SingularPredicate"], [31, 1, 1, "", "SquarePredicate"], [31, 1, 1, "", "SymmetricPredicate"], [31, 1, 1, "", "TriangularPredicate"], [31, 1, 1, "", "UnitTriangularPredicate"], [31, 1, 1, "", "UnitaryPredicate"], [31, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[31, 1, 1, "", "CompositePredicate"], [31, 1, 1, "", "EvenPredicate"], [31, 1, 1, "", "OddPredicate"], [31, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[31, 1, 1, "", "NegativePredicate"], [31, 1, 1, "", "NonNegativePredicate"], [31, 1, 1, "", "NonPositivePredicate"], [31, 1, 1, "", "NonZeroPredicate"], [31, 1, 1, "", "PositivePredicate"], [31, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[31, 1, 1, "", "AlgebraicPredicate"], [31, 1, 1, "", "AntihermitianPredicate"], [31, 1, 1, "", "ComplexPredicate"], [31, 1, 1, "", "ExtendedRealPredicate"], [31, 1, 1, "", "HermitianPredicate"], [31, 1, 1, "", "ImaginaryPredicate"], [31, 1, 1, "", "IntegerPredicate"], [31, 1, 1, "", "IrrationalPredicate"], [31, 1, 1, "", "RationalPredicate"], [31, 1, 1, "", "RealPredicate"], [31, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[31, 5, 1, "", "AlgebraicHandler"], [31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[31, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[32, 3, 1, "", "refine"], [32, 3, 1, "", "refine_Pow"], [32, 3, 1, "", "refine_abs"], [32, 3, 1, "", "refine_arg"], [32, 3, 1, "", "refine_atan2"], [32, 3, 1, "", "refine_im"], [32, 3, 1, "", "refine_matrixelement"], [32, 3, 1, "", "refine_re"], [32, 3, 1, "", "refine_sign"]], "sympy.calculus": [[33, 0, 0, "-", "euler"], [33, 0, 0, "-", "finite_diff"], [33, 0, 0, "-", "singularities"], [33, 0, 0, "-", "util"]], "sympy.calculus.euler": [[33, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[33, 3, 1, "", "apply_finite_diff"], [33, 3, 1, "", "differentiate_finite"], [33, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[33, 3, 1, "", "is_decreasing"], [33, 3, 1, "", "is_increasing"], [33, 3, 1, "", "is_monotonic"], [33, 3, 1, "", "is_strictly_decreasing"], [33, 3, 1, "", "is_strictly_increasing"], [33, 3, 1, "", "monotonicity_helper"], [33, 3, 1, "", "singularities"]], "sympy.calculus.util": [[33, 3, 1, "", "continuous_domain"], [33, 3, 1, "", "function_range"], [33, 3, 1, "", "is_convex"], [33, 3, 1, "", "lcim"], [33, 3, 1, "", "maximum"], [33, 3, 1, "", "minimum"], [33, 3, 1, "", "not_empty_in"], [33, 3, 1, "", "periodicity"], [33, 3, 1, "", "stationary_points"]], "sympy.categories": [[34, 1, 1, "", "Category"], [34, 1, 1, "", "CompositeMorphism"], [34, 1, 1, "", "Diagram"], [34, 1, 1, "", "IdentityMorphism"], [34, 1, 1, "", "Morphism"], [34, 1, 1, "", "NamedMorphism"], [34, 1, 1, "", "Object"], [34, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[34, 4, 1, "", "commutative_diagrams"], [34, 4, 1, "", "name"], [34, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[34, 4, 1, "", "codomain"], [34, 4, 1, "", "components"], [34, 4, 1, "", "domain"], [34, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[34, 4, 1, "", "conclusions"], [34, 2, 1, "", "hom"], [34, 2, 1, "", "is_subdiagram"], [34, 4, 1, "", "objects"], [34, 4, 1, "", "premises"], [34, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[34, 4, 1, "", "codomain"], [34, 2, 1, "", "compose"], [34, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[34, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[34, 1, 1, "", "ArrowStringDescription"], [34, 1, 1, "", "DiagramGrid"], [34, 1, 1, "", "XypicDiagramDrawer"], [34, 3, 1, "", "preview_diagram"], [34, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[34, 4, 1, "", "height"], [34, 4, 1, "", "morphisms"], [34, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[34, 2, 1, "", "draw"]], "sympy.codegen": [[35, 0, 0, "-", "algorithms"], [35, 0, 0, "-", "approximations"], [35, 0, 0, "-", "ast"], [35, 0, 0, "-", "cfunctions"], [35, 0, 0, "-", "cnodes"], [35, 0, 0, "-", "cutils"], [35, 0, 0, "-", "cxxnodes"], [35, 0, 0, "-", "fnodes"], [35, 0, 0, "-", "futils"], [35, 0, 0, "-", "matrix_nodes"], [35, 0, 0, "-", "pyutils"], [35, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[35, 3, 1, "", "newtons_method"], [35, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[35, 1, 1, "", "SeriesApprox"], [35, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[35, 1, 1, "", "Assignment"], [35, 1, 1, "", "AssignmentBase"], [35, 1, 1, "", "Attribute"], [35, 1, 1, "", "AugmentedAssignment"], [35, 1, 1, "", "BreakToken"], [35, 1, 1, "", "CodeBlock"], [35, 1, 1, "", "Comment"], [35, 1, 1, "", "ComplexType"], [35, 1, 1, "", "ContinueToken"], [35, 1, 1, "", "Declaration"], [35, 1, 1, "", "Element"], [35, 1, 1, "", "FloatBaseType"], [35, 1, 1, "", "FloatType"], [35, 1, 1, "", "For"], [35, 1, 1, "", "FunctionCall"], [35, 1, 1, "", "FunctionDefinition"], [35, 1, 1, "", "FunctionPrototype"], [35, 1, 1, "", "IntBaseType"], [35, 1, 1, "", "Node"], [35, 1, 1, "", "NoneToken"], [35, 1, 1, "", "Pointer"], [35, 1, 1, "", "Print"], [35, 1, 1, "", "QuotedString"], [35, 1, 1, "", "Return"], [35, 1, 1, "", "Scope"], [35, 1, 1, "", "SignedIntType"], [35, 1, 1, "", "Stream"], [35, 1, 1, "", "String"], [35, 1, 1, "", "Token"], [35, 1, 1, "", "Type"], [35, 1, 1, "", "UnsignedIntType"], [35, 1, 1, "", "Variable"], [35, 1, 1, "", "While"], [35, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[35, 2, 1, "", "cse"], [35, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[35, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[35, 2, 1, "", "cast_nocheck"], [35, 4, 1, "", "decimal_dig"], [35, 4, 1, "", "dig"], [35, 4, 1, "", "eps"], [35, 4, 1, "", "max"], [35, 4, 1, "", "max_exponent"], [35, 4, 1, "", "min_exponent"], [35, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[35, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[35, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[35, 2, 1, "", "cast_check"], [35, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[35, 2, 1, "", "as_Declaration"], [35, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[35, 1, 1, "", "Cbrt"], [35, 1, 1, "", "Sqrt"], [35, 1, 1, "", "exp2"], [35, 1, 1, "", "expm1"], [35, 1, 1, "", "fma"], [35, 1, 1, "", "hypot"], [35, 1, 1, "", "log10"], [35, 1, 1, "", "log1p"], [35, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[35, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[35, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[35, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[35, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[35, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[35, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[35, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[35, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[35, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[35, 1, 1, "", "CommaOperator"], [35, 1, 1, "", "Label"], [35, 1, 1, "", "PostDecrement"], [35, 1, 1, "", "PostIncrement"], [35, 1, 1, "", "PreDecrement"], [35, 1, 1, "", "PreIncrement"], [35, 3, 1, "", "alignof"], [35, 1, 1, "", "goto"], [35, 3, 1, "", "sizeof"], [35, 1, 1, "", "struct"], [35, 1, 1, "", "union"]], "sympy.codegen.cutils": [[35, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[35, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[35, 1, 1, "", "ArrayConstructor"], [35, 1, 1, "", "Do"], [35, 1, 1, "", "Extent"], [35, 1, 1, "", "FortranReturn"], [35, 1, 1, "", "GoTo"], [35, 1, 1, "", "ImpliedDoLoop"], [35, 1, 1, "", "Module"], [35, 1, 1, "", "Program"], [35, 1, 1, "", "Subroutine"], [35, 1, 1, "", "SubroutineCall"], [35, 3, 1, "", "allocated"], [35, 3, 1, "", "array"], [35, 3, 1, "", "bind_C"], [35, 1, 1, "", "cmplx"], [35, 3, 1, "", "dimension"], [35, 1, 1, "", "dsign"], [35, 1, 1, "", "isign"], [35, 1, 1, "", "kind"], [35, 3, 1, "", "lbound"], [35, 1, 1, "", "literal_dp"], [35, 1, 1, "", "literal_sp"], [35, 1, 1, "", "merge"], [35, 3, 1, "", "reshape"], [35, 3, 1, "", "shape"], [35, 3, 1, "", "size"], [35, 1, 1, "", "use"], [35, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[35, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[35, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[35, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[35, 1, 1, "", "FuncMinusOneOptim"], [35, 1, 1, "", "Optimization"], [35, 1, 1, "", "ReplaceOptim"], [35, 3, 1, "", "create_expand_pow_optimization"], [35, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[35, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[45, 0, 0, "-", "generators"], [37, 0, 0, "-", "graycode"], [38, 0, 0, "-", "group_constructs"], [39, 0, 0, "-", "group_numbers"], [41, 0, 0, "-", "named_groups"], [42, 0, 0, "-", "partitions"], [44, 0, 0, "-", "perm_groups"], [45, 0, 0, "-", "permutations"], [46, 0, 0, "-", "polyhedron"], [47, 0, 0, "-", "prufer"], [48, 0, 0, "-", "subsets"], [49, 0, 0, "-", "tensor_can"], [50, 0, 0, "-", "testutil"], [51, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[45, 2, 1, "", "alternating"], [45, 2, 1, "", "cyclic"], [45, 2, 1, "", "dihedral"], [45, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[37, 1, 1, "", "GrayCode"], [37, 2, 1, "", "bin_to_gray"], [37, 2, 1, "", "get_subset_from_bitstring"], [37, 2, 1, "", "gray_to_bin"], [37, 2, 1, "", "graycode_subsets"], [37, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[37, 4, 1, "", "current"], [37, 2, 1, "", "generate_gray"], [37, 4, 1, "", "n"], [37, 2, 1, "", "next"], [37, 4, 1, "", "rank"], [37, 4, 1, "", "selections"], [37, 2, 1, "", "skip"], [37, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[38, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[39, 3, 1, "", "is_abelian_number"], [39, 3, 1, "", "is_cyclic_number"], [39, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[41, 3, 1, "", "AbelianGroup"], [41, 3, 1, "", "AlternatingGroup"], [41, 3, 1, "", "CyclicGroup"], [41, 3, 1, "", "DihedralGroup"], [41, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[42, 1, 1, "", "IntegerPartition"], [42, 1, 1, "", "Partition"], [42, 3, 1, "", "RGS_enum"], [42, 3, 1, "", "RGS_generalized"], [42, 3, 1, "", "RGS_rank"], [42, 3, 1, "", "RGS_unrank"], [42, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[42, 2, 1, "", "as_dict"], [42, 2, 1, "", "as_ferrers"], [42, 4, 1, "", "conjugate"], [42, 2, 1, "", "next_lex"], [42, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[42, 4, 1, "", "RGS"], [42, 2, 1, "", "from_rgs"], [42, 4, 1, "", "partition"], [42, 4, 1, "", "rank"], [42, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[44, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[44, 2, 1, "", "__contains__"], [44, 2, 1, "", "__mul__"], [44, 2, 1, "", "__new__"], [44, 5, 1, "", "__weakref__"], [44, 2, 1, "", "_coset_representative"], [44, 2, 1, "", "_distinct_primes_lemma"], [44, 4, 1, "", "_elements"], [44, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [44, 2, 1, "", "_eval_is_alt_sym_naive"], [44, 2, 1, "", "_p_elements_group"], [44, 2, 1, "", "_random_pr_init"], [44, 2, 1, "", "_sylow_alt_sym"], [44, 2, 1, "", "_union_find_merge"], [44, 2, 1, "", "_union_find_rep"], [44, 2, 1, "", "_verify"], [44, 2, 1, "", "abelian_invariants"], [44, 4, 1, "", "base"], [44, 2, 1, "", "baseswap"], [44, 4, 1, "", "basic_orbits"], [44, 4, 1, "", "basic_stabilizers"], [44, 4, 1, "", "basic_transversals"], [44, 2, 1, "", "center"], [44, 2, 1, "", "centralizer"], [44, 2, 1, "", "commutator"], [44, 2, 1, "", "composition_series"], [44, 2, 1, "", "conjugacy_class"], [44, 2, 1, "", "conjugacy_classes"], [44, 2, 1, "", "contains"], [44, 2, 1, "", "coset_factor"], [44, 2, 1, "", "coset_rank"], [44, 2, 1, "", "coset_table"], [44, 2, 1, "", "coset_transversal"], [44, 2, 1, "", "coset_unrank"], [44, 4, 1, "", "degree"], [44, 2, 1, "", "derived_series"], [44, 2, 1, "", "derived_subgroup"], [44, 4, 1, "", "elements"], [44, 2, 1, "", "equals"], [44, 2, 1, "", "generate"], [44, 2, 1, "", "generate_dimino"], [44, 2, 1, "", "generate_schreier_sims"], [44, 2, 1, "", "generator_product"], [44, 4, 1, "", "generators"], [44, 4, 1, "", "identity"], [44, 2, 1, "", "index"], [44, 4, 1, "", "is_abelian"], [44, 2, 1, "", "is_alt_sym"], [44, 4, 1, "", "is_alternating"], [44, 4, 1, "", "is_cyclic"], [44, 2, 1, "", "is_elementary"], [44, 4, 1, "", "is_nilpotent"], [44, 2, 1, "", "is_normal"], [44, 4, 1, "", "is_perfect"], [44, 4, 1, "", "is_polycyclic"], [44, 2, 1, "", "is_primitive"], [44, 4, 1, "", "is_solvable"], [44, 2, 1, "", "is_subgroup"], [44, 4, 1, "", "is_symmetric"], [44, 2, 1, "", "is_transitive"], [44, 4, 1, "", "is_trivial"], [44, 2, 1, "", "lower_central_series"], [44, 2, 1, "", "make_perm"], [44, 4, 1, "", "max_div"], [44, 2, 1, "", "minimal_block"], [44, 2, 1, "", "minimal_blocks"], [44, 2, 1, "", "normal_closure"], [44, 2, 1, "", "orbit"], [44, 2, 1, "", "orbit_rep"], [44, 2, 1, "", "orbit_transversal"], [44, 2, 1, "", "orbits"], [44, 2, 1, "", "order"], [44, 2, 1, "", "pointwise_stabilizer"], [44, 2, 1, "", "polycyclic_group"], [44, 2, 1, "", "presentation"], [44, 2, 1, "", "random"], [44, 2, 1, "", "random_pr"], [44, 2, 1, "", "random_stab"], [44, 2, 1, "", "schreier_sims"], [44, 2, 1, "", "schreier_sims_incremental"], [44, 2, 1, "", "schreier_sims_random"], [44, 2, 1, "", "schreier_vector"], [44, 2, 1, "", "stabilizer"], [44, 4, 1, "", "strong_gens"], [44, 2, 1, "", "strong_presentation"], [44, 2, 1, "", "subgroup"], [44, 2, 1, "", "subgroup_search"], [44, 2, 1, "", "sylow_subgroup"], [44, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[45, 1, 1, "", "Cycle"], [45, 1, 1, "", "Permutation"], [45, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[45, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[45, 2, 1, "", "apply"], [45, 4, 1, "", "array_form"], [45, 2, 1, "", "ascents"], [45, 2, 1, "", "atoms"], [45, 4, 1, "", "cardinality"], [45, 2, 1, "", "commutator"], [45, 2, 1, "", "commutes_with"], [45, 4, 1, "", "cycle_structure"], [45, 4, 1, "", "cycles"], [45, 4, 1, "", "cyclic_form"], [45, 2, 1, "", "descents"], [45, 2, 1, "", "from_inversion_vector"], [45, 2, 1, "", "from_sequence"], [45, 4, 1, "", "full_cyclic_form"], [45, 2, 1, "", "get_adjacency_distance"], [45, 2, 1, "", "get_adjacency_matrix"], [45, 2, 1, "", "get_positional_distance"], [45, 2, 1, "", "get_precedence_distance"], [45, 2, 1, "", "get_precedence_matrix"], [45, 2, 1, "", "index"], [45, 2, 1, "", "inversion_vector"], [45, 2, 1, "", "inversions"], [45, 4, 1, "", "is_Empty"], [45, 4, 1, "", "is_Identity"], [45, 4, 1, "", "is_Singleton"], [45, 4, 1, "", "is_even"], [45, 4, 1, "", "is_odd"], [45, 2, 1, "", "josephus"], [45, 2, 1, "", "length"], [45, 2, 1, "", "list"], [45, 2, 1, "", "max"], [45, 2, 1, "", "min"], [45, 2, 1, "", "mul_inv"], [45, 2, 1, "", "next_lex"], [45, 2, 1, "", "next_nonlex"], [45, 2, 1, "", "next_trotterjohnson"], [45, 2, 1, "", "order"], [45, 2, 1, "", "parity"], [45, 2, 1, "", "random"], [45, 2, 1, "", "rank"], [45, 2, 1, "", "rank_nonlex"], [45, 2, 1, "", "rank_trotterjohnson"], [45, 2, 1, "", "resize"], [45, 2, 1, "", "rmul"], [45, 2, 1, "", "rmul_with_af"], [45, 2, 1, "", "runs"], [45, 2, 1, "", "signature"], [45, 4, 1, "", "size"], [45, 2, 1, "", "support"], [45, 2, 1, "", "transpositions"], [45, 2, 1, "", "unrank_lex"], [45, 2, 1, "", "unrank_nonlex"], [45, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[46, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[46, 4, 1, "", "array_form"], [46, 4, 1, "", "corners"], [46, 4, 1, "", "cyclic_form"], [46, 4, 1, "", "edges"], [46, 4, 1, "", "faces"], [46, 4, 1, "", "pgroup"], [46, 2, 1, "", "reset"], [46, 2, 1, "", "rotate"], [46, 4, 1, "", "size"], [46, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[47, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[47, 2, 1, "", "edges"], [47, 2, 1, "", "next"], [47, 4, 1, "", "nodes"], [47, 2, 1, "", "prev"], [47, 2, 1, "", "prufer_rank"], [47, 4, 1, "", "prufer_repr"], [47, 4, 1, "", "rank"], [47, 4, 1, "", "size"], [47, 2, 1, "", "to_prufer"], [47, 2, 1, "", "to_tree"], [47, 4, 1, "", "tree_repr"], [47, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[48, 1, 1, "", "Subset"], [48, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[48, 2, 1, "", "bitlist_from_subset"], [48, 4, 1, "", "cardinality"], [48, 2, 1, "", "iterate_binary"], [48, 2, 1, "", "iterate_graycode"], [48, 2, 1, "", "next_binary"], [48, 2, 1, "", "next_gray"], [48, 2, 1, "", "next_lexicographic"], [48, 2, 1, "", "prev_binary"], [48, 2, 1, "", "prev_gray"], [48, 2, 1, "", "prev_lexicographic"], [48, 4, 1, "", "rank_binary"], [48, 4, 1, "", "rank_gray"], [48, 4, 1, "", "rank_lexicographic"], [48, 4, 1, "", "size"], [48, 4, 1, "", "subset"], [48, 2, 1, "", "subset_from_bitlist"], [48, 2, 1, "", "subset_indices"], [48, 4, 1, "", "superset"], [48, 4, 1, "", "superset_size"], [48, 2, 1, "", "unrank_binary"], [48, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[49, 3, 1, "", "bsgs_direct_product"], [49, 3, 1, "", "canonicalize"], [49, 3, 1, "", "double_coset_can_rep"], [49, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[50, 3, 1, "", "_cmp_perm_lists"], [50, 3, 1, "", "_naive_list_centralizer"], [50, 3, 1, "", "_verify_bsgs"], [50, 3, 1, "", "_verify_centralizer"], [50, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[51, 3, 1, "", "_base_ordering"], [51, 3, 1, "", "_check_cycles_alt_sym"], [51, 3, 1, "", "_distribute_gens_by_base"], [51, 3, 1, "", "_handle_precomputed_bsgs"], [51, 3, 1, "", "_orbits_transversals_from_bsgs"], [51, 3, 1, "", "_remove_gens"], [51, 3, 1, "", "_strip"], [51, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[52, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[52, 2, 1, "", "change_index"], [52, 4, 1, "", "has_empty_sequence"], [52, 2, 1, "", "index"], [52, 2, 1, "", "reorder"], [52, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[80, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[80, 4, 1, "", "bound_symbols"], [80, 4, 1, "", "free_symbols"], [80, 4, 1, "", "function"], [80, 4, 1, "", "has_finite_limits"], [80, 4, 1, "", "has_reversed_limits"], [80, 4, 1, "", "is_number"], [80, 4, 1, "", "limits"], [80, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[52, 3, 1, "", "gosper_normal"], [52, 3, 1, "", "gosper_sum"], [52, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[52, 1, 1, "", "Product"], [52, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[52, 2, 1, "", "is_convergent"], [52, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[52, 1, 1, "", "Sum"], [52, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[52, 2, 1, "", "euler_maclaurin"], [52, 2, 1, "", "eval_zeta_function"], [52, 2, 1, "", "is_absolutely_convergent"], [52, 2, 1, "", "is_convergent"], [52, 2, 1, "", "reverse_order"]], "sympy.core": [[53, 0, 0, "-", "add"], [53, 0, 0, "-", "assumptions"], [53, 0, 0, "-", "basic"], [53, 0, 0, "-", "cache"], [53, 0, 0, "-", "containers"], [53, 0, 0, "-", "core"], [53, 0, 0, "-", "evalf"], [53, 0, 0, "-", "expr"], [53, 0, 0, "-", "exprtools"], [53, 0, 0, "-", "function"], [53, 0, 0, "-", "kind"], [53, 0, 0, "-", "mod"], [53, 0, 0, "-", "mul"], [53, 0, 0, "-", "multidimensional"], [53, 0, 0, "-", "numbers"], [53, 0, 0, "-", "power"], [53, 0, 0, "-", "random"], [53, 0, 0, "-", "relational"], [53, 0, 0, "-", "singleton"], [53, 0, 0, "-", "symbol"], [53, 0, 0, "-", "sympify"], [53, 0, 0, "-", "traversal"]], "sympy.core.add": [[53, 1, 1, "", "Add"]], "sympy.core.add.Add": [[53, 2, 1, "", "as_coeff_Add"], [53, 2, 1, "", "as_coeff_add"], [53, 2, 1, "", "as_content_primitive"], [53, 2, 1, "", "as_numer_denom"], [53, 2, 1, "", "as_real_imag"], [53, 2, 1, "", "as_two_terms"], [53, 2, 1, "", "class_key"], [53, 2, 1, "", "extract_leading_order"], [53, 2, 1, "", "flatten"], [53, 2, 1, "", "primitive"]], "sympy.core.basic": [[53, 1, 1, "", "Atom"], [53, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[53, 4, 1, "", "args"], [53, 2, 1, "", "as_content_primitive"], [53, 2, 1, "", "as_dummy"], [53, 4, 1, "", "assumptions0"], [53, 2, 1, "", "atoms"], [53, 4, 1, "", "canonical_variables"], [53, 2, 1, "", "class_key"], [53, 2, 1, "", "compare"], [53, 2, 1, "", "count"], [53, 2, 1, "", "count_ops"], [53, 2, 1, "", "doit"], [53, 2, 1, "", "dummy_eq"], [53, 2, 1, "", "find"], [53, 4, 1, "", "free_symbols"], [53, 2, 1, "", "fromiter"], [53, 4, 1, "", "func"], [53, 2, 1, "", "has"], [53, 2, 1, "", "has_free"], [53, 2, 1, "", "has_xfree"], [53, 4, 1, "", "is_comparable"], [53, 2, 1, "", "match"], [53, 2, 1, "", "matches"], [53, 2, 1, "", "rcall"], [53, 2, 1, "", "refine"], [53, 2, 1, "", "replace"], [53, 2, 1, "", "rewrite"], [53, 2, 1, "", "simplify"], [53, 2, 1, "", "sort_key"], [53, 2, 1, "", "subs"], [53, 2, 1, "", "xreplace"]], "sympy.core.cache": [[53, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[53, 1, 1, "", "Dict"], [53, 1, 1, "", "Tuple"], [53, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[53, 2, 1, "", "get"], [53, 2, 1, "", "items"], [53, 2, 1, "", "keys"], [53, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[53, 2, 1, "", "index"], [53, 4, 1, "", "kind"], [53, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[53, 1, 1, "", "EvalfMixin"], [53, 3, 1, "", "N"], [53, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[53, 2, 1, "", "evalf"], [53, 2, 1, "", "n"]], "sympy.core.expr": [[53, 1, 1, "", "AtomicExpr"], [53, 1, 1, "", "Expr"], [53, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[53, 2, 1, "", "apart"], [53, 2, 1, "", "args_cnc"], [53, 2, 1, "", "as_coeff_Add"], [53, 2, 1, "", "as_coeff_Mul"], [53, 2, 1, "", "as_coeff_add"], [53, 2, 1, "", "as_coeff_exponent"], [53, 2, 1, "", "as_coeff_mul"], [53, 2, 1, "", "as_coefficient"], [53, 2, 1, "", "as_coefficients_dict"], [53, 2, 1, "", "as_content_primitive"], [53, 2, 1, "", "as_expr"], [53, 2, 1, "", "as_independent"], [53, 2, 1, "", "as_leading_term"], [53, 2, 1, "", "as_numer_denom"], [53, 2, 1, "", "as_ordered_factors"], [53, 2, 1, "", "as_ordered_terms"], [53, 2, 1, "", "as_poly"], [53, 2, 1, "", "as_powers_dict"], [53, 2, 1, "", "as_real_imag"], [53, 2, 1, "", "as_terms"], [53, 2, 1, "", "aseries"], [53, 2, 1, "", "cancel"], [53, 2, 1, "", "coeff"], [53, 2, 1, "", "collect"], [53, 2, 1, "", "combsimp"], [53, 2, 1, "", "compute_leading_term"], [53, 2, 1, "", "conjugate"], [53, 2, 1, "", "could_extract_minus_sign"], [53, 2, 1, "", "count_ops"], [53, 2, 1, "", "equals"], [53, 2, 1, "", "expand"], [53, 4, 1, "", "expr_free_symbols"], [53, 2, 1, "", "extract_additively"], [53, 2, 1, "", "extract_branch_factor"], [53, 2, 1, "", "extract_multiplicatively"], [53, 2, 1, "", "factor"], [53, 2, 1, "", "fourier_series"], [53, 2, 1, "", "fps"], [53, 2, 1, "", "gammasimp"], [53, 2, 1, "", "getO"], [53, 2, 1, "", "getn"], [53, 2, 1, "", "integrate"], [53, 2, 1, "", "invert"], [53, 2, 1, "", "is_algebraic_expr"], [53, 2, 1, "", "is_constant"], [53, 2, 1, "", "is_meromorphic"], [53, 4, 1, "", "is_number"], [53, 2, 1, "", "is_polynomial"], [53, 2, 1, "", "is_rational_function"], [53, 2, 1, "", "leadterm"], [53, 2, 1, "", "limit"], [53, 2, 1, "", "lseries"], [53, 2, 1, "", "normal"], [53, 2, 1, "", "nseries"], [53, 2, 1, "", "nsimplify"], [53, 2, 1, "", "powsimp"], [53, 2, 1, "", "primitive"], [53, 2, 1, "", "radsimp"], [53, 2, 1, "", "ratsimp"], [53, 2, 1, "", "removeO"], [53, 2, 1, "", "round"], [53, 2, 1, "", "separate"], [53, 2, 1, "", "series"], [53, 2, 1, "", "taylor_term"], [53, 2, 1, "", "together"], [53, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[53, 3, 1, "", "factor_terms"], [53, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[53, 1, 1, "", "Derivative"], [53, 1, 1, "", "Function"], [53, 1, 1, "", "FunctionClass"], [53, 1, 1, "", "Lambda"], [53, 1, 1, "", "PoleError"], [53, 1, 1, "", "Subs"], [53, 1, 1, "", "WildFunction"], [53, 3, 1, "", "count_ops"], [53, 3, 1, "", "diff"], [53, 3, 1, "", "expand"], [53, 3, 1, "", "expand_complex"], [53, 3, 1, "", "expand_func"], [53, 3, 1, "", "expand_log"], [53, 3, 1, "", "expand_mul"], [53, 3, 1, "", "expand_multinomial"], [53, 3, 1, "", "expand_power_base"], [53, 3, 1, "", "expand_power_exp"], [53, 3, 1, "", "expand_trig"], [53, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[53, 4, 1, "", "_diff_wrt"], [53, 2, 1, "", "_sort_variable_count"], [53, 2, 1, "", "as_finite_difference"], [53, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[53, 2, 1, "", "as_base_exp"], [53, 2, 1, "", "fdiff"], [53, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[53, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[53, 4, 1, "", "bound_symbols"], [53, 4, 1, "", "expr"], [53, 4, 1, "", "is_identity"], [53, 4, 1, "", "signature"], [53, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[53, 4, 1, "", "bound_symbols"], [53, 4, 1, "", "expr"], [53, 4, 1, "", "point"], [53, 4, 1, "", "variables"]], "sympy.core.kind": [[53, 5, 1, "", "BooleanKind"], [53, 1, 1, "", "Kind"], [53, 5, 1, "", "NumberKind"], [53, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[53, 1, 1, "", "Mod"]], "sympy.core.mul": [[53, 1, 1, "", "Mul"], [53, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[53, 2, 1, "", "as_coeff_Mul"], [53, 2, 1, "", "as_content_primitive"], [53, 2, 1, "", "as_ordered_factors"], [53, 2, 1, "", "as_two_terms"], [53, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[53, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[53, 1, 1, "", "AlgebraicNumber"], [53, 1, 1, "", "Catalan"], [53, 1, 1, "", "ComplexInfinity"], [53, 1, 1, "", "EulerGamma"], [53, 1, 1, "", "Exp1"], [53, 1, 1, "", "Float"], [53, 1, 1, "", "GoldenRatio"], [53, 1, 1, "", "Half"], [53, 1, 1, "", "ImaginaryUnit"], [53, 1, 1, "", "Infinity"], [53, 1, 1, "", "Integer"], [53, 1, 1, "", "NaN"], [53, 1, 1, "", "NegativeInfinity"], [53, 1, 1, "", "NegativeOne"], [53, 1, 1, "", "Number"], [53, 1, 1, "", "NumberSymbol"], [53, 1, 1, "", "One"], [53, 1, 1, "", "Pi"], [53, 1, 1, "", "Rational"], [53, 5, 1, "", "RealNumber"], [53, 1, 1, "", "TribonacciConstant"], [53, 1, 1, "", "Zero"], [53, 3, 1, "", "igcd"], [53, 3, 1, "", "ilcm"], [53, 3, 1, "", "mod_inverse"], [53, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[53, 2, 1, "", "__new__"], [53, 2, 1, "", "as_expr"], [53, 2, 1, "", "as_poly"], [53, 2, 1, "", "coeffs"], [53, 2, 1, "", "field_element"], [53, 4, 1, "", "is_aliased"], [53, 4, 1, "", "is_primitive_element"], [53, 2, 1, "", "minpoly_of_element"], [53, 2, 1, "", "native_coeffs"], [53, 2, 1, "", "primitive_element"], [53, 2, 1, "", "to_algebraic_integer"], [53, 2, 1, "", "to_primitive_element"], [53, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[53, 2, 1, "", "as_coeff_Add"], [53, 2, 1, "", "as_coeff_Mul"], [53, 2, 1, "", "cofactors"], [53, 2, 1, "", "gcd"], [53, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[53, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[53, 2, 1, "", "as_coeff_Add"], [53, 2, 1, "", "as_coeff_Mul"], [53, 2, 1, "", "as_content_primitive"], [53, 2, 1, "", "factors"], [53, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[53, 1, 1, "", "Pow"], [53, 3, 1, "", "integer_log"], [53, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[53, 2, 1, "", "as_base_exp"], [53, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[53, 3, 1, "", "_randint"], [53, 3, 1, "", "_randrange"], [53, 3, 1, "", "random_complex_number"], [53, 3, 1, "", "test_derivative_numerically"], [53, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[53, 5, 1, "", "Eq"], [53, 1, 1, "", "Equality"], [53, 5, 1, "", "Ge"], [53, 1, 1, "", "GreaterThan"], [53, 5, 1, "", "Gt"], [53, 5, 1, "", "Le"], [53, 1, 1, "", "LessThan"], [53, 5, 1, "", "Lt"], [53, 5, 1, "", "Ne"], [53, 5, 1, "", "Rel"], [53, 1, 1, "", "Relational"], [53, 1, 1, "", "StrictGreaterThan"], [53, 1, 1, "", "StrictLessThan"], [53, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[53, 2, 1, "", "as_poly"], [53, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[53, 4, 1, "", "canonical"], [53, 2, 1, "", "equals"], [53, 4, 1, "", "lhs"], [53, 4, 1, "", "negated"], [53, 4, 1, "", "reversed"], [53, 4, 1, "", "reversedsign"], [53, 4, 1, "", "rhs"], [53, 4, 1, "", "strict"], [53, 4, 1, "", "weak"]], "sympy.core.singleton": [[53, 1, 1, "", "Singleton"], [53, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[53, 3, 1, "", "default_sort_key"], [53, 3, 1, "", "ordered"]], "sympy.core.symbol": [[53, 1, 1, "", "Dummy"], [53, 1, 1, "", "Symbol"], [53, 1, 1, "", "Wild"], [53, 3, 1, "", "symbols"], [53, 3, 1, "", "var"]], "sympy.core.sympify": [[53, 3, 1, "", "sympify"]], "sympy.core.traversal": [[53, 3, 1, "", "bottom_up"], [53, 3, 1, "", "postorder_traversal"], [53, 3, 1, "", "preorder_traversal"], [53, 3, 1, "", "use"], [53, 3, 1, "", "walk"]], "sympy.crypto": [[54, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[54, 3, 1, "", "AZ"], [54, 3, 1, "", "bifid5_square"], [54, 3, 1, "", "bifid6_square"], [54, 3, 1, "", "check_and_join"], [54, 3, 1, "", "cycle_list"], [54, 3, 1, "", "decipher_affine"], [54, 3, 1, "", "decipher_atbash"], [54, 3, 1, "", "decipher_bifid"], [54, 3, 1, "", "decipher_bifid5"], [54, 3, 1, "", "decipher_bifid6"], [54, 3, 1, "", "decipher_elgamal"], [54, 3, 1, "", "decipher_gm"], [54, 3, 1, "", "decipher_hill"], [54, 3, 1, "", "decipher_kid_rsa"], [54, 3, 1, "", "decipher_railfence"], [54, 3, 1, "", "decipher_rot13"], [54, 3, 1, "", "decipher_rsa"], [54, 3, 1, "", "decipher_shift"], [54, 3, 1, "", "decipher_vigenere"], [54, 3, 1, "", "decode_morse"], [54, 3, 1, "", "dh_private_key"], [54, 3, 1, "", "dh_public_key"], [54, 3, 1, "", "dh_shared_key"], [54, 3, 1, "", "elgamal_private_key"], [54, 3, 1, "", "elgamal_public_key"], [54, 3, 1, "", "encipher_affine"], [54, 3, 1, "", "encipher_atbash"], [54, 3, 1, "", "encipher_bifid"], [54, 3, 1, "", "encipher_bifid5"], [54, 3, 1, "", "encipher_bifid6"], [54, 3, 1, "", "encipher_elgamal"], [54, 3, 1, "", "encipher_gm"], [54, 3, 1, "", "encipher_hill"], [54, 3, 1, "", "encipher_kid_rsa"], [54, 3, 1, "", "encipher_railfence"], [54, 3, 1, "", "encipher_rot13"], [54, 3, 1, "", "encipher_rsa"], [54, 3, 1, "", "encipher_shift"], [54, 3, 1, "", "encipher_substitution"], [54, 3, 1, "", "encipher_vigenere"], [54, 3, 1, "", "encode_morse"], [54, 3, 1, "", "gm_private_key"], [54, 3, 1, "", "gm_public_key"], [54, 3, 1, "", "kid_rsa_private_key"], [54, 3, 1, "", "kid_rsa_public_key"], [54, 3, 1, "", "lfsr_autocorrelation"], [54, 3, 1, "", "lfsr_connection_polynomial"], [54, 3, 1, "", "lfsr_sequence"], [54, 3, 1, "", "padded_key"], [54, 3, 1, "", "rsa_private_key"], [54, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[55, 1, 1, "", "BaseCovarDerivativeOp"], [55, 1, 1, "", "BaseScalarField"], [55, 1, 1, "", "BaseVectorField"], [55, 1, 1, "", "Commutator"], [55, 1, 1, "", "CoordSystem"], [55, 1, 1, "", "CoordinateSymbol"], [55, 1, 1, "", "CovarDerivativeOp"], [55, 1, 1, "", "Differential"], [55, 1, 1, "", "LieDerivative"], [55, 1, 1, "", "Manifold"], [55, 1, 1, "", "Patch"], [55, 1, 1, "", "Point"], [55, 1, 1, "", "TensorProduct"], [55, 1, 1, "", "WedgeProduct"], [55, 3, 1, "", "intcurve_diffequ"], [55, 3, 1, "", "intcurve_series"], [55, 3, 1, "", "metric_to_Christoffel_1st"], [55, 3, 1, "", "metric_to_Christoffel_2nd"], [55, 3, 1, "", "metric_to_Ricci_components"], [55, 3, 1, "", "metric_to_Riemann_components"], [55, 3, 1, "", "twoform_to_matrix"], [55, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[55, 2, 1, "", "base_oneform"], [55, 2, 1, "", "base_oneforms"], [55, 2, 1, "", "base_scalar"], [55, 2, 1, "", "base_scalars"], [55, 2, 1, "", "base_vector"], [55, 2, 1, "", "base_vectors"], [55, 2, 1, "", "coord_function"], [55, 2, 1, "", "coord_functions"], [55, 2, 1, "", "coord_tuple_transform_to"], [55, 2, 1, "", "jacobian"], [55, 2, 1, "", "jacobian_determinant"], [55, 2, 1, "", "jacobian_matrix"], [55, 2, 1, "", "point"], [55, 2, 1, "", "point_to_coords"], [55, 2, 1, "", "transform"], [55, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[55, 2, 1, "", "coords"]], "sympy.discrete": [[56, 0, 0, "-", "convolutions"], [56, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[56, 3, 1, "", "convolution"], [56, 3, 1, "", "convolution_fft"], [56, 3, 1, "", "convolution_fwht"], [56, 3, 1, "", "convolution_ntt"], [56, 3, 1, "", "convolution_subset"], [56, 3, 1, "", "covering_product"], [56, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[56, 3, 1, "", "fft"], [56, 3, 1, "", "fwht"], [56, 3, 1, "", "ifft"], [56, 3, 1, "", "ifwht"], [56, 3, 1, "", "intt"], [56, 3, 1, "", "inverse_mobius_transform"], [56, 3, 1, "", "mobius_transform"], [56, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[191, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[58, 1, 1, "", "FallingFactorial"], [58, 1, 1, "", "MultiFactorial"], [58, 1, 1, "", "RisingFactorial"], [58, 1, 1, "", "binomial"], [58, 1, 1, "", "factorial"], [58, 1, 1, "", "factorial2"], [58, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[58, 1, 1, "", "bell"], [58, 1, 1, "", "bernoulli"], [58, 1, 1, "", "catalan"], [58, 1, 1, "", "euler"], [58, 1, 1, "", "fibonacci"], [58, 1, 1, "", "genocchi"], [58, 1, 1, "", "harmonic"], [58, 1, 1, "", "lucas"], [58, 3, 1, "", "nC"], [58, 3, 1, "", "nP"], [58, 3, 1, "", "nT"], [58, 1, 1, "", "partition"], [58, 3, 1, "", "stirling"], [58, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[59, 1, 1, "", "Abs"], [59, 1, 1, "", "arg"], [59, 1, 1, "", "conjugate"], [59, 1, 1, "", "im"], [59, 1, 1, "", "periodic_argument"], [59, 1, 1, "", "polar_lift"], [59, 1, 1, "", "principal_branch"], [59, 1, 1, "", "re"], [59, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[59, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[59, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[59, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[59, 1, 1, "", "LambertW"], [59, 1, 1, "", "exp"], [59, 1, 1, "", "exp_polar"], [59, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[59, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[59, 2, 1, "", "as_real_imag"], [59, 4, 1, "", "base"], [59, 2, 1, "", "fdiff"], [59, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[59, 2, 1, "", "as_base_exp"], [59, 2, 1, "", "as_real_imag"], [59, 2, 1, "", "fdiff"], [59, 2, 1, "", "inverse"], [59, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[59, 1, 1, "", "HyperbolicFunction"], [59, 1, 1, "", "acosh"], [59, 1, 1, "", "acoth"], [59, 1, 1, "", "acsch"], [59, 1, 1, "", "asech"], [59, 1, 1, "", "asinh"], [59, 1, 1, "", "atanh"], [59, 1, 1, "", "cosh"], [59, 1, 1, "", "coth"], [59, 1, 1, "", "csch"], [59, 1, 1, "", "sech"], [59, 1, 1, "", "sinh"], [59, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[59, 2, 1, "", "fdiff"], [59, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[59, 2, 1, "", "as_real_imag"], [59, 2, 1, "", "fdiff"], [59, 2, 1, "", "inverse"], [59, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[59, 1, 1, "", "RoundFunction"], [59, 1, 1, "", "ceiling"], [59, 1, 1, "", "floor"], [59, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[59, 1, 1, "", "IdentityFunction"], [59, 1, 1, "", "Max"], [59, 1, 1, "", "Min"], [59, 3, 1, "", "cbrt"], [59, 3, 1, "", "real_root"], [59, 3, 1, "", "root"], [59, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[59, 1, 1, "", "ExprCondPair"], [59, 1, 1, "", "Piecewise"], [59, 3, 1, "", "piecewise_exclusive"], [59, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[59, 4, 1, "", "cond"], [59, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[59, 2, 1, "", "_eval_integral"], [59, 2, 1, "", "as_expr_set_pairs"], [59, 2, 1, "", "doit"], [59, 2, 1, "", "eval"], [59, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[59, 1, 1, "", "acos"], [59, 1, 1, "", "acot"], [59, 1, 1, "", "acsc"], [59, 1, 1, "", "asec"], [59, 1, 1, "", "asin"], [59, 1, 1, "", "atan"], [59, 1, 1, "", "atan2"], [59, 1, 1, "", "cos"], [59, 1, 1, "", "cot"], [59, 1, 1, "", "csc"], [59, 1, 1, "", "sec"], [59, 1, 1, "", "sin"], [59, 1, 1, "", "sinc"], [59, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[59, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[59, 2, 1, "", "inverse"]], "sympy.functions.special": [[61, 0, 0, "-", "bessel"], [61, 0, 0, "-", "beta_functions"], [61, 0, 0, "-", "elliptic_integrals"], [61, 0, 0, "-", "error_functions"], [61, 0, 0, "-", "gamma_functions"], [61, 0, 0, "-", "mathieu_functions"], [61, 0, 0, "-", "polynomials"], [61, 0, 0, "-", "singularity_functions"], [61, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[61, 1, 1, "", "AiryBase"], [61, 1, 1, "", "BesselBase"], [61, 1, 1, "", "airyai"], [61, 1, 1, "", "airyaiprime"], [61, 1, 1, "", "airybi"], [61, 1, 1, "", "airybiprime"], [61, 1, 1, "", "besseli"], [61, 1, 1, "", "besselj"], [61, 1, 1, "", "besselk"], [61, 1, 1, "", "bessely"], [61, 1, 1, "", "hankel1"], [61, 1, 1, "", "hankel2"], [61, 1, 1, "", "jn"], [61, 3, 1, "", "jn_zeros"], [61, 1, 1, "", "marcumq"], [61, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[61, 4, 1, "", "argument"], [61, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[61, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[61, 3, 1, "", "bspline_basis"], [61, 3, 1, "", "bspline_basis_set"], [61, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[61, 1, 1, "", "DiracDelta"], [61, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[61, 2, 1, "", "eval"], [61, 2, 1, "", "fdiff"], [61, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[61, 2, 1, "", "eval"], [61, 2, 1, "", "fdiff"], [61, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[61, 1, 1, "", "elliptic_e"], [61, 1, 1, "", "elliptic_f"], [61, 1, 1, "", "elliptic_k"], [61, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[61, 1, 1, "", "Chi"], [61, 1, 1, "", "Ci"], [61, 3, 1, "", "E1"], [61, 1, 1, "", "Ei"], [61, 1, 1, "", "FresnelIntegral"], [61, 1, 1, "", "Li"], [61, 1, 1, "", "Shi"], [61, 1, 1, "", "Si"], [61, 1, 1, "", "erf"], [61, 1, 1, "", "erf2"], [61, 1, 1, "", "erf2inv"], [61, 1, 1, "", "erfc"], [61, 1, 1, "", "erfcinv"], [61, 1, 1, "", "erfi"], [61, 1, 1, "", "erfinv"], [61, 1, 1, "", "expint"], [61, 1, 1, "", "fresnelc"], [61, 1, 1, "", "fresnels"], [61, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[61, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[61, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[61, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[61, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[61, 1, 1, "", "digamma"], [61, 1, 1, "", "gamma"], [61, 1, 1, "", "loggamma"], [61, 1, 1, "", "lowergamma"], [61, 1, 1, "", "multigamma"], [61, 1, 1, "", "polygamma"], [61, 1, 1, "", "trigamma"], [61, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[61, 1, 1, "", "appellf1"], [61, 1, 1, "", "hyper"], [61, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[61, 4, 1, "", "ap"], [61, 4, 1, "", "argument"], [61, 4, 1, "", "bq"], [61, 4, 1, "", "convergence_statement"], [61, 4, 1, "", "eta"], [61, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[61, 4, 1, "", "an"], [61, 4, 1, "", "aother"], [61, 4, 1, "", "ap"], [61, 4, 1, "", "argument"], [61, 4, 1, "", "bm"], [61, 4, 1, "", "bother"], [61, 4, 1, "", "bq"], [61, 4, 1, "", "delta"], [61, 2, 1, "", "get_period"], [61, 2, 1, "", "integrand"], [61, 4, 1, "", "is_number"], [61, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[61, 1, 1, "", "MathieuBase"], [61, 1, 1, "", "mathieuc"], [61, 1, 1, "", "mathieucprime"], [61, 1, 1, "", "mathieus"], [61, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[61, 1, 1, "", "assoc_laguerre"], [61, 1, 1, "", "assoc_legendre"], [61, 1, 1, "", "chebyshevt"], [61, 1, 1, "", "chebyshevt_root"], [61, 1, 1, "", "chebyshevu"], [61, 1, 1, "", "chebyshevu_root"], [61, 1, 1, "", "gegenbauer"], [61, 1, 1, "", "hermite"], [61, 1, 1, "", "jacobi"], [61, 3, 1, "", "jacobi_normalized"], [61, 1, 1, "", "laguerre"], [61, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[61, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[61, 2, 1, "", "eval"], [61, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[61, 1, 1, "", "Ynm"], [61, 3, 1, "", "Ynm_c"], [61, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[61, 3, 1, "", "Eijk"], [61, 1, 1, "", "KroneckerDelta"], [61, 1, 1, "", "LeviCivita"], [61, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[61, 2, 1, "", "eval"], [61, 4, 1, "", "indices_contain_equal_information"], [61, 4, 1, "", "is_above_fermi"], [61, 4, 1, "", "is_below_fermi"], [61, 4, 1, "", "is_only_above_fermi"], [61, 4, 1, "", "is_only_below_fermi"], [61, 4, 1, "", "killable_index"], [61, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[61, 1, 1, "", "dirichlet_eta"], [61, 1, 1, "", "lerchphi"], [61, 1, 1, "", "polylog"], [61, 1, 1, "", "stieltjes"], [61, 1, 1, "", "zeta"]], "sympy.geometry": [[62, 0, 0, "-", "curve"], [63, 0, 0, "-", "ellipse"], [64, 0, 0, "-", "entity"], [66, 0, 0, "-", "line"], [67, 0, 0, "-", "plane"], [68, 0, 0, "-", "point"], [69, 0, 0, "-", "polygon"], [70, 0, 0, "-", "util"]], "sympy.geometry.curve": [[62, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[62, 4, 1, "", "ambient_dimension"], [62, 2, 1, "", "arbitrary_point"], [62, 4, 1, "", "free_symbols"], [62, 4, 1, "", "functions"], [62, 4, 1, "", "length"], [62, 4, 1, "", "limits"], [62, 4, 1, "", "parameter"], [62, 2, 1, "", "plot_interval"], [62, 2, 1, "", "rotate"], [62, 2, 1, "", "scale"], [62, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[63, 1, 1, "", "Circle"], [63, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[63, 4, 1, "", "circumference"], [63, 2, 1, "", "equation"], [63, 2, 1, "", "intersection"], [63, 4, 1, "", "radius"], [63, 2, 1, "", "reflect"], [63, 2, 1, "", "scale"], [63, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[63, 4, 1, "", "apoapsis"], [63, 2, 1, "", "arbitrary_point"], [63, 4, 1, "", "area"], [63, 2, 1, "", "auxiliary_circle"], [63, 4, 1, "", "bounds"], [63, 4, 1, "", "center"], [63, 4, 1, "", "circumference"], [63, 2, 1, "", "director_circle"], [63, 4, 1, "", "eccentricity"], [63, 2, 1, "", "encloses_point"], [63, 2, 1, "", "equation"], [63, 2, 1, "", "evolute"], [63, 4, 1, "", "foci"], [63, 4, 1, "", "focus_distance"], [63, 4, 1, "", "hradius"], [63, 2, 1, "", "intersection"], [63, 2, 1, "", "is_tangent"], [63, 4, 1, "", "major"], [63, 4, 1, "", "minor"], [63, 2, 1, "", "normal_lines"], [63, 4, 1, "", "periapsis"], [63, 2, 1, "", "plot_interval"], [63, 2, 1, "", "polar_second_moment_of_area"], [63, 2, 1, "", "random_point"], [63, 2, 1, "", "reflect"], [63, 2, 1, "", "rotate"], [63, 2, 1, "", "scale"], [63, 2, 1, "", "second_moment_of_area"], [63, 2, 1, "", "section_modulus"], [63, 4, 1, "", "semilatus_rectum"], [63, 2, 1, "", "tangent_lines"], [63, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[64, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[64, 4, 1, "", "ambient_dimension"], [64, 4, 1, "", "bounds"], [64, 2, 1, "", "encloses"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "is_similar"], [64, 2, 1, "", "parameter_value"], [64, 2, 1, "", "reflect"], [64, 2, 1, "", "rotate"], [64, 2, 1, "", "scale"], [64, 2, 1, "", "translate"]], "sympy.geometry.line": [[66, 1, 1, "", "Line"], [66, 1, 1, "", "Line2D"], [66, 1, 1, "", "Line3D"], [66, 1, 1, "", "LinearEntity"], [66, 1, 1, "", "LinearEntity2D"], [66, 1, 1, "", "LinearEntity3D"], [66, 1, 1, "", "Ray"], [66, 1, 1, "", "Ray2D"], [66, 1, 1, "", "Ray3D"], [66, 1, 1, "", "Segment"], [66, 1, 1, "", "Segment2D"], [66, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[66, 2, 1, "", "contains"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "equals"], [66, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[66, 4, 1, "", "coefficients"], [66, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[66, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[66, 4, 1, "", "ambient_dimension"], [66, 2, 1, "", "angle_between"], [66, 2, 1, "", "arbitrary_point"], [66, 2, 1, "", "are_concurrent"], [66, 2, 1, "", "bisectors"], [66, 2, 1, "", "contains"], [66, 4, 1, "", "direction"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "is_parallel"], [66, 2, 1, "", "is_perpendicular"], [66, 2, 1, "", "is_similar"], [66, 4, 1, "", "length"], [66, 4, 1, "", "p1"], [66, 4, 1, "", "p2"], [66, 2, 1, "", "parallel_line"], [66, 2, 1, "", "perpendicular_line"], [66, 2, 1, "", "perpendicular_segment"], [66, 4, 1, "", "points"], [66, 2, 1, "", "projection"], [66, 2, 1, "", "random_point"], [66, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[66, 4, 1, "", "bounds"], [66, 2, 1, "", "perpendicular_line"], [66, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[66, 4, 1, "", "direction_cosine"], [66, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[66, 2, 1, "", "contains"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "equals"], [66, 2, 1, "", "plot_interval"], [66, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[66, 2, 1, "", "closing_angle"], [66, 4, 1, "", "xdirection"], [66, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[66, 4, 1, "", "xdirection"], [66, 4, 1, "", "ydirection"], [66, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[66, 2, 1, "", "contains"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "equals"], [66, 4, 1, "", "length"], [66, 4, 1, "", "midpoint"], [66, 2, 1, "", "perpendicular_bisector"], [66, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[67, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[67, 2, 1, "", "angle_between"], [67, 2, 1, "", "arbitrary_point"], [67, 2, 1, "", "are_concurrent"], [67, 2, 1, "", "distance"], [67, 2, 1, "", "equals"], [67, 2, 1, "", "equation"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "is_coplanar"], [67, 2, 1, "", "is_parallel"], [67, 2, 1, "", "is_perpendicular"], [67, 4, 1, "", "normal_vector"], [67, 4, 1, "", "p1"], [67, 2, 1, "", "parallel_plane"], [67, 2, 1, "", "parameter_value"], [67, 2, 1, "", "perpendicular_line"], [67, 2, 1, "", "perpendicular_plane"], [67, 2, 1, "", "projection"], [67, 2, 1, "", "projection_line"], [67, 2, 1, "", "random_point"]], "sympy.geometry.point": [[68, 1, 1, "", "Point"], [68, 1, 1, "", "Point2D"], [68, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[68, 2, 1, "", "affine_rank"], [68, 4, 1, "", "ambient_dimension"], [68, 2, 1, "", "are_coplanar"], [68, 2, 1, "", "canberra_distance"], [68, 2, 1, "", "distance"], [68, 2, 1, "", "dot"], [68, 2, 1, "", "equals"], [68, 2, 1, "", "intersection"], [68, 2, 1, "", "is_collinear"], [68, 2, 1, "", "is_concyclic"], [68, 4, 1, "", "is_nonzero"], [68, 2, 1, "", "is_scalar_multiple"], [68, 4, 1, "", "is_zero"], [68, 4, 1, "", "length"], [68, 2, 1, "", "midpoint"], [68, 4, 1, "", "origin"], [68, 4, 1, "", "orthogonal_direction"], [68, 2, 1, "", "project"], [68, 2, 1, "", "taxicab_distance"], [68, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[68, 4, 1, "", "bounds"], [68, 4, 1, "", "coordinates"], [68, 2, 1, "", "rotate"], [68, 2, 1, "", "scale"], [68, 2, 1, "", "transform"], [68, 2, 1, "", "translate"], [68, 4, 1, "", "x"], [68, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[68, 2, 1, "", "are_collinear"], [68, 4, 1, "", "coordinates"], [68, 2, 1, "", "direction_cosine"], [68, 2, 1, "", "direction_ratio"], [68, 2, 1, "", "intersection"], [68, 2, 1, "", "scale"], [68, 2, 1, "", "transform"], [68, 2, 1, "", "translate"], [68, 4, 1, "", "x"], [68, 4, 1, "", "y"], [68, 4, 1, "", "z"]], "sympy.geometry.polygon": [[69, 1, 1, "", "Polygon"], [69, 1, 1, "", "RegularPolygon"], [69, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[69, 4, 1, "", "angles"], [69, 2, 1, "", "arbitrary_point"], [69, 4, 1, "", "area"], [69, 2, 1, "", "bisectors"], [69, 4, 1, "", "bounds"], [69, 4, 1, "", "centroid"], [69, 2, 1, "", "cut_section"], [69, 2, 1, "", "distance"], [69, 2, 1, "", "encloses_point"], [69, 2, 1, "", "first_moment_of_area"], [69, 2, 1, "", "intersection"], [69, 2, 1, "", "is_convex"], [69, 4, 1, "", "perimeter"], [69, 2, 1, "", "plot_interval"], [69, 2, 1, "", "polar_second_moment_of_area"], [69, 2, 1, "", "second_moment_of_area"], [69, 2, 1, "", "section_modulus"], [69, 4, 1, "", "sides"], [69, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[69, 4, 1, "", "angles"], [69, 4, 1, "", "apothem"], [69, 4, 1, "", "area"], [69, 4, 1, "", "args"], [69, 4, 1, "", "center"], [69, 4, 1, "", "centroid"], [69, 4, 1, "", "circumcenter"], [69, 4, 1, "", "circumcircle"], [69, 4, 1, "", "circumradius"], [69, 2, 1, "", "encloses_point"], [69, 4, 1, "", "exterior_angle"], [69, 4, 1, "", "incircle"], [69, 4, 1, "", "inradius"], [69, 4, 1, "", "interior_angle"], [69, 4, 1, "", "length"], [69, 4, 1, "", "radius"], [69, 2, 1, "", "reflect"], [69, 2, 1, "", "rotate"], [69, 4, 1, "", "rotation"], [69, 2, 1, "", "scale"], [69, 2, 1, "", "spin"], [69, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[69, 4, 1, "", "altitudes"], [69, 2, 1, "", "bisectors"], [69, 4, 1, "", "circumcenter"], [69, 4, 1, "", "circumcircle"], [69, 4, 1, "", "circumradius"], [69, 4, 1, "", "eulerline"], [69, 4, 1, "", "excenters"], [69, 4, 1, "", "exradii"], [69, 4, 1, "", "incenter"], [69, 4, 1, "", "incircle"], [69, 4, 1, "", "inradius"], [69, 2, 1, "", "is_equilateral"], [69, 2, 1, "", "is_isosceles"], [69, 2, 1, "", "is_right"], [69, 2, 1, "", "is_scalene"], [69, 2, 1, "", "is_similar"], [69, 4, 1, "", "medial"], [69, 4, 1, "", "medians"], [69, 4, 1, "", "nine_point_circle"], [69, 4, 1, "", "orthocenter"], [69, 4, 1, "", "vertices"]], "sympy.geometry.util": [[70, 3, 1, "", "are_similar"], [70, 3, 1, "", "centroid"], [70, 3, 1, "", "convex_hull"], [70, 3, 1, "", "idiff"], [70, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[76, 1, 1, "", "DifferentialOperator"], [76, 1, 1, "", "DifferentialOperatorAlgebra"], [76, 3, 1, "", "DifferentialOperators"], [76, 1, 1, "", "HolonomicFunction"], [74, 3, 1, "", "_convert_poly_rat_alg"], [74, 3, 1, "", "_create_table"], [72, 3, 1, "", "expr_to_holonomic"], [72, 3, 1, "", "from_hyper"], [72, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[76, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[75, 2, 1, "", "composition"], [75, 2, 1, "", "diff"], [75, 2, 1, "", "evalf"], [75, 2, 1, "", "integrate"], [75, 2, 1, "", "series"], [75, 2, 1, "", "to_expr"], [75, 2, 1, "", "to_hyper"], [75, 2, 1, "", "to_meijerg"], [75, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[80, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[80, 3, 1, "", "components"], [80, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[80, 1, 1, "", "Integral"], [80, 3, 1, "", "integrate"], [80, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[80, 2, 1, "", "as_sum"], [80, 2, 1, "", "doit"], [80, 4, 1, "", "free_symbols"], [80, 6, 1, "", "is_commutative"], [80, 2, 1, "", "principal_value"], [80, 2, 1, "", "transform"]], "sympy.integrals": [[80, 0, 0, "-", "intpoly"], [78, 0, 0, "-", "meijerint"], [78, 0, 0, "-", "meijerint_doc"], [80, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[80, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[80, 3, 1, "", "integral_steps"], [80, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[78, 7, 1, "", "_CoeffExpValueError"], [78, 3, 1, "", "_check_antecedents"], [78, 3, 1, "", "_check_antecedents_1"], [78, 3, 1, "", "_check_antecedents_inversion"], [78, 3, 1, "", "_condsimp"], [78, 3, 1, "", "_create_lookup_table"], [78, 3, 1, "", "_dummy"], [78, 3, 1, "", "_dummy_"], [78, 3, 1, "", "_eval_cond"], [78, 3, 1, "", "_exponents"], [78, 3, 1, "", "_find_splitting_points"], [78, 3, 1, "", "_flip_g"], [78, 3, 1, "", "_functions"], [78, 3, 1, "", "_get_coeff_exp"], [78, 3, 1, "", "_guess_expansion"], [78, 3, 1, "", "_inflate_fox_h"], [78, 3, 1, "", "_inflate_g"], [78, 3, 1, "", "_int0oo"], [78, 3, 1, "", "_int0oo_1"], [78, 3, 1, "", "_int_inversion"], [78, 3, 1, "", "_is_analytic"], [78, 3, 1, "", "_meijerint_definite_2"], [78, 3, 1, "", "_meijerint_definite_3"], [78, 3, 1, "", "_meijerint_definite_4"], [78, 3, 1, "", "_meijerint_indefinite_1"], [78, 3, 1, "", "_mul_args"], [78, 3, 1, "", "_mul_as_two_parts"], [78, 3, 1, "", "_my_principal_branch"], [78, 3, 1, "", "_mytype"], [78, 3, 1, "", "_rewrite1"], [78, 3, 1, "", "_rewrite2"], [78, 3, 1, "", "_rewrite_inversion"], [78, 3, 1, "", "_rewrite_saxena"], [78, 3, 1, "", "_rewrite_saxena_1"], [78, 3, 1, "", "_rewrite_single"], [78, 3, 1, "", "_split_mul"], [78, 3, 1, "", "meijerint_definite"], [78, 3, 1, "", "meijerint_indefinite"], [78, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[80, 3, 1, "", "gauss_chebyshev_t"], [80, 3, 1, "", "gauss_chebyshev_u"], [80, 3, 1, "", "gauss_gen_laguerre"], [80, 3, 1, "", "gauss_hermite"], [80, 3, 1, "", "gauss_jacobi"], [80, 3, 1, "", "gauss_laguerre"], [80, 3, 1, "", "gauss_legendre"], [80, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[80, 3, 1, "", "ratint"], [80, 3, 1, "", "ratint_logpart"], [80, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[80, 1, 1, "", "NonElementaryIntegral"], [80, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[80, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[80, 1, 1, "", "CosineTransform"], [80, 1, 1, "", "FourierTransform"], [80, 1, 1, "", "HankelTransform"], [80, 1, 1, "", "IntegralTransform"], [80, 7, 1, "", "IntegralTransformError"], [80, 1, 1, "", "InverseCosineTransform"], [80, 1, 1, "", "InverseFourierTransform"], [80, 1, 1, "", "InverseHankelTransform"], [80, 1, 1, "", "InverseLaplaceTransform"], [80, 1, 1, "", "InverseMellinTransform"], [80, 1, 1, "", "InverseSineTransform"], [80, 1, 1, "", "LaplaceTransform"], [80, 1, 1, "", "MellinTransform"], [80, 1, 1, "", "SineTransform"], [80, 3, 1, "", "_fast_inverse_laplace"], [80, 3, 1, "", "_fourier_transform"], [80, 3, 1, "", "cosine_transform"], [80, 3, 1, "", "fourier_transform"], [80, 3, 1, "", "hankel_transform"], [80, 3, 1, "", "inverse_cosine_transform"], [80, 3, 1, "", "inverse_fourier_transform"], [80, 3, 1, "", "inverse_hankel_transform"], [80, 3, 1, "", "inverse_laplace_transform"], [80, 3, 1, "", "inverse_mellin_transform"], [80, 3, 1, "", "inverse_sine_transform"], [80, 3, 1, "", "laplace_transform"], [80, 3, 1, "", "mellin_transform"], [80, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[80, 2, 1, "", "doit"], [80, 4, 1, "", "function"], [80, 4, 1, "", "function_variable"], [80, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[80, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[81, 0, 0, "-", "printing"], [81, 0, 0, "-", "session"]], "sympy.interactive.printing": [[81, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[81, 3, 1, "", "enable_automatic_int_sympification"], [81, 3, 1, "", "enable_automatic_symbols"], [81, 3, 1, "", "init_ipython_session"], [81, 3, 1, "", "init_python_session"], [81, 3, 1, "", "init_session"], [81, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[82, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[82, 1, 1, "", "CartanType_generator"], [82, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[82, 2, 1, "", "rank"], [82, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[82, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[82, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[82, 2, 1, "", "add_as_roots"], [82, 2, 1, "", "add_simple_roots"], [82, 2, 1, "", "all_roots"], [82, 2, 1, "", "cartan_matrix"], [82, 2, 1, "", "dynkin_diagram"], [82, 2, 1, "", "root_space"], [82, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[82, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[82, 2, 1, "", "basic_root"], [82, 2, 1, "", "basis"], [82, 2, 1, "", "cartan_matrix"], [82, 2, 1, "", "dimension"], [82, 2, 1, "", "highest_root"], [82, 2, 1, "", "lie_algebra"], [82, 2, 1, "", "positive_roots"], [82, 2, 1, "", "roots"], [82, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[82, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[82, 2, 1, "", "basic_root"], [82, 2, 1, "", "basis"], [82, 2, 1, "", "cartan_matrix"], [82, 2, 1, "", "dimension"], [82, 2, 1, "", "lie_algebra"], [82, 2, 1, "", "positive_roots"], [82, 2, 1, "", "roots"], [82, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[82, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[82, 2, 1, "", "basic_root"], [82, 2, 1, "", "basis"], [82, 2, 1, "", "cartan_matrix"], [82, 2, 1, "", "dimension"], [82, 2, 1, "", "lie_algebra"], [82, 2, 1, "", "positive_roots"], [82, 2, 1, "", "roots"], [82, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[82, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[82, 2, 1, "", "basic_root"], [82, 2, 1, "", "basis"], [82, 2, 1, "", "cartan_matrix"], [82, 2, 1, "", "dimension"], [82, 2, 1, "", "lie_algebra"], [82, 2, 1, "", "positive_roots"], [82, 2, 1, "", "roots"], [82, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[82, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[82, 2, 1, "", "basic_root"], [82, 2, 1, "", "basis"], [82, 2, 1, "", "cartan_matrix"], [82, 2, 1, "", "dimension"], [82, 2, 1, "", "positive_roots"], [82, 2, 1, "", "roots"], [82, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[82, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[82, 2, 1, "", "basic_root"], [82, 2, 1, "", "basis"], [82, 2, 1, "", "cartan_matrix"], [82, 2, 1, "", "dimension"], [82, 2, 1, "", "positive_roots"], [82, 2, 1, "", "roots"], [82, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[82, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[82, 2, 1, "", "basis"], [82, 2, 1, "", "cartan_matrix"], [82, 2, 1, "", "dimension"], [82, 2, 1, "", "positive_roots"], [82, 2, 1, "", "roots"], [82, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[82, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[82, 2, 1, "", "coxeter_diagram"], [82, 2, 1, "", "delete_doubles"], [82, 2, 1, "", "element_order"], [82, 2, 1, "", "generators"], [82, 2, 1, "", "group_name"], [82, 2, 1, "", "group_order"], [82, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[83, 3, 1, "", "ANFform"], [83, 1, 1, "", "And"], [83, 1, 1, "", "Boolean"], [83, 1, 1, "", "BooleanFalse"], [83, 1, 1, "", "BooleanTrue"], [83, 1, 1, "", "Equivalent"], [83, 1, 1, "", "Exclusive"], [83, 1, 1, "", "ITE"], [83, 1, 1, "", "Implies"], [83, 1, 1, "", "Nand"], [83, 1, 1, "", "Nor"], [83, 1, 1, "", "Not"], [83, 1, 1, "", "Or"], [83, 3, 1, "", "POSform"], [83, 3, 1, "", "SOPform"], [83, 1, 1, "", "Xnor"], [83, 1, 1, "", "Xor"], [83, 3, 1, "", "anf_coeffs"], [83, 3, 1, "", "bool_map"], [83, 3, 1, "", "bool_maxterm"], [83, 3, 1, "", "bool_minterm"], [83, 3, 1, "", "bool_monomial"], [83, 3, 1, "", "distribute_and_over_or"], [83, 3, 1, "", "distribute_or_over_and"], [83, 3, 1, "", "distribute_xor_over_and"], [83, 3, 1, "", "eliminate_implications"], [83, 3, 1, "", "gateinputcount"], [83, 3, 1, "", "integer_to_term"], [83, 3, 1, "", "is_anf"], [83, 3, 1, "", "is_cnf"], [83, 3, 1, "", "is_dnf"], [83, 3, 1, "", "is_nnf"], [83, 3, 1, "", "simplify_logic"], [83, 3, 1, "", "term_to_integer"], [83, 3, 1, "", "to_anf"], [83, 3, 1, "", "to_cnf"], [83, 3, 1, "", "to_dnf"], [83, 3, 1, "", "to_int_repr"], [83, 3, 1, "", "to_nnf"], [83, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[83, 2, 1, "", "as_set"], [83, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[83, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[83, 2, 1, "", "as_set"]], "sympy.logic": [[83, 0, 0, "-", "inference"]], "sympy.logic.inference": [[83, 3, 1, "", "satisfiable"]], "sympy.matrices": [[84, 0, 0, "-", "common"], [86, 0, 0, "-", "expressions"], [87, 0, 0, "-", "immutable"], [89, 0, 0, "-", "matrices"], [91, 0, 0, "-", "sparse"], [92, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[84, 1, 1, "", "MatrixCommon"], [84, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[84, 4, 1, "", "C"], [84, 4, 1, "", "H"], [84, 4, 1, "", "T"], [84, 2, 1, "", "__abs__"], [84, 2, 1, "", "__add__"], [84, 2, 1, "", "__getitem__"], [84, 2, 1, "", "__len__"], [84, 2, 1, "", "__mul__"], [84, 2, 1, "", "__pow__"], [84, 5, 1, "", "__weakref__"], [84, 2, 1, "", "adjoint"], [84, 2, 1, "", "applyfunc"], [84, 2, 1, "", "as_real_imag"], [84, 2, 1, "", "atoms"], [84, 2, 1, "", "col"], [84, 2, 1, "", "col_del"], [84, 2, 1, "", "col_insert"], [84, 2, 1, "", "col_join"], [84, 2, 1, "", "companion"], [84, 2, 1, "", "conjugate"], [84, 2, 1, "", "diag"], [84, 2, 1, "", "diagonal"], [84, 2, 1, "", "evalf"], [84, 2, 1, "", "expand"], [84, 2, 1, "", "extract"], [84, 2, 1, "", "eye"], [84, 4, 1, "", "free_symbols"], [84, 2, 1, "", "get_diag_blocks"], [84, 2, 1, "", "has"], [84, 2, 1, "", "hstack"], [84, 2, 1, "", "is_anti_symmetric"], [84, 2, 1, "", "is_diagonal"], [84, 4, 1, "", "is_hermitian"], [84, 4, 1, "", "is_lower"], [84, 4, 1, "", "is_lower_hessenberg"], [84, 4, 1, "", "is_square"], [84, 4, 1, "", "is_strongly_diagonally_dominant"], [84, 2, 1, "", "is_symbolic"], [84, 2, 1, "", "is_symmetric"], [84, 4, 1, "", "is_upper"], [84, 4, 1, "", "is_upper_hessenberg"], [84, 4, 1, "", "is_weakly_diagonally_dominant"], [84, 4, 1, "", "is_zero_matrix"], [84, 2, 1, "", "jordan_block"], [84, 2, 1, "", "lower_triangular"], [84, 2, 1, "", "multiply"], [84, 2, 1, "", "multiply_elementwise"], [84, 2, 1, "", "n"], [84, 2, 1, "", "ones"], [84, 2, 1, "", "permute"], [84, 2, 1, "", "permute_cols"], [84, 2, 1, "", "permute_rows"], [84, 2, 1, "", "pow"], [84, 2, 1, "", "refine"], [84, 2, 1, "", "replace"], [84, 2, 1, "", "reshape"], [84, 2, 1, "", "rmultiply"], [84, 2, 1, "", "rot90"], [84, 2, 1, "", "row"], [84, 2, 1, "", "row_del"], [84, 2, 1, "", "row_insert"], [84, 2, 1, "", "row_join"], [84, 4, 1, "", "shape"], [84, 2, 1, "", "simplify"], [84, 2, 1, "", "subs"], [84, 2, 1, "", "todod"], [84, 2, 1, "", "todok"], [84, 2, 1, "", "tolist"], [84, 2, 1, "", "trace"], [84, 2, 1, "", "transpose"], [84, 2, 1, "", "upper_triangular"], [84, 2, 1, "", "values"], [84, 2, 1, "", "vec"], [84, 2, 1, "", "vech"], [84, 2, 1, "", "vstack"], [84, 2, 1, "", "wilkinson"], [84, 2, 1, "", "xreplace"], [84, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[85, 1, 1, "", "DenseMatrix"], [89, 3, 1, "", "GramSchmidt"], [85, 5, 1, "", "Matrix"], [85, 1, 1, "", "MutableDenseMatrix"], [89, 3, 1, "", "casoratian"], [89, 3, 1, "", "diag"], [89, 3, 1, "", "eye"], [89, 3, 1, "", "hessian"], [89, 3, 1, "", "jordan_cell"], [89, 3, 1, "", "list2numpy"], [89, 3, 1, "", "matrix2numpy"], [89, 3, 1, "", "matrix_multiply_elementwise"], [89, 3, 1, "", "ones"], [89, 3, 1, "", "randMatrix"], [89, 3, 1, "", "rot_axis1"], [89, 3, 1, "", "rot_axis2"], [89, 3, 1, "", "rot_axis3"], [89, 3, 1, "", "symarray"], [89, 3, 1, "", "wronskian"], [89, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[85, 2, 1, "", "LDLdecomposition"], [85, 2, 1, "", "as_immutable"], [85, 2, 1, "", "as_mutable"], [85, 2, 1, "", "cholesky"], [85, 2, 1, "", "lower_triangular_solve"], [85, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[85, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[86, 1, 1, "", "CompanionMatrix"], [86, 1, 1, "", "FunctionMatrix"], [86, 1, 1, "", "HadamardPower"], [86, 1, 1, "", "HadamardProduct"], [86, 1, 1, "", "Identity"], [86, 1, 1, "", "Inverse"], [86, 1, 1, "", "MatAdd"], [86, 1, 1, "", "MatMul"], [86, 1, 1, "", "MatPow"], [86, 1, 1, "", "MatrixExpr"], [86, 1, 1, "", "MatrixPermute"], [86, 1, 1, "", "MatrixSet"], [86, 1, 1, "", "MatrixSymbol"], [86, 1, 1, "", "PermutationMatrix"], [86, 1, 1, "", "Trace"], [86, 1, 1, "", "Transpose"], [86, 1, 1, "", "ZeroMatrix"], [86, 0, 0, "-", "blockmatrix"]], "sympy.matrices.expressions.MatrixExpr": [[86, 4, 1, "", "T"], [86, 2, 1, "", "as_coeff_Mul"], [86, 2, 1, "", "as_explicit"], [86, 2, 1, "", "as_mutable"], [86, 2, 1, "", "equals"], [86, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[86, 1, 1, "", "BlockDiagMatrix"], [86, 1, 1, "", "BlockMatrix"], [86, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[86, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[86, 2, 1, "", "LDUdecomposition"], [86, 2, 1, "", "LUdecomposition"], [86, 2, 1, "", "UDLdecomposition"], [86, 2, 1, "", "schur"], [86, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[87, 1, 1, "", "ImmutableDenseMatrix"], [87, 5, 1, "", "ImmutableMatrix"], [91, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[89, 1, 1, "", "MatrixBase"], [89, 1, 1, "", "MatrixCalculus"], [89, 1, 1, "", "MatrixDeterminant"], [89, 1, 1, "", "MatrixEigen"], [89, 1, 1, "", "MatrixError"], [89, 1, 1, "", "MatrixReductions"], [89, 1, 1, "", "MatrixSubspaces"], [89, 1, 1, "", "NonSquareMatrixError"], [89, 1, 1, "", "ShapeError"], [89, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[89, 4, 1, "", "D"], [89, 2, 1, "", "LDLdecomposition"], [89, 2, 1, "", "LDLsolve"], [89, 2, 1, "", "LUdecomposition"], [89, 2, 1, "", "LUdecompositionFF"], [89, 2, 1, "", "LUdecomposition_Simple"], [89, 2, 1, "", "LUsolve"], [89, 2, 1, "", "QRdecomposition"], [89, 2, 1, "", "QRsolve"], [89, 2, 1, "", "add"], [89, 2, 1, "", "analytic_func"], [89, 2, 1, "", "cholesky"], [89, 2, 1, "", "cholesky_solve"], [89, 2, 1, "", "condition_number"], [89, 2, 1, "", "connected_components"], [89, 2, 1, "", "connected_components_decomposition"], [89, 2, 1, "", "copy"], [89, 2, 1, "", "cross"], [89, 2, 1, "", "diagonal_solve"], [89, 2, 1, "", "dot"], [89, 2, 1, "", "dual"], [89, 2, 1, "", "exp"], [89, 2, 1, "", "gauss_jordan_solve"], [89, 2, 1, "", "inv"], [89, 2, 1, "", "inv_mod"], [89, 2, 1, "", "inverse_ADJ"], [89, 2, 1, "", "inverse_BLOCK"], [89, 2, 1, "", "inverse_CH"], [89, 2, 1, "", "inverse_GE"], [89, 2, 1, "", "inverse_LDL"], [89, 2, 1, "", "inverse_LU"], [89, 2, 1, "", "inverse_QR"], [89, 2, 1, "", "irregular"], [89, 2, 1, "", "is_nilpotent"], [89, 2, 1, "", "key2bounds"], [89, 2, 1, "", "key2ij"], [89, 2, 1, "", "log"], [89, 2, 1, "", "lower_triangular_solve"], [89, 2, 1, "", "norm"], [89, 2, 1, "", "normalized"], [89, 2, 1, "", "pinv"], [89, 2, 1, "", "pinv_solve"], [89, 2, 1, "", "print_nonzero"], [89, 2, 1, "", "project"], [89, 2, 1, "", "rank_decomposition"], [89, 2, 1, "", "singular_value_decomposition"], [89, 2, 1, "", "solve"], [89, 2, 1, "", "solve_least_squares"], [89, 2, 1, "", "strongly_connected_components"], [89, 2, 1, "", "strongly_connected_components_decomposition"], [89, 2, 1, "", "table"], [89, 2, 1, "", "upper_hessenberg_decomposition"], [89, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[89, 2, 1, "", "diff"], [89, 2, 1, "", "integrate"], [89, 2, 1, "", "jacobian"], [89, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[89, 2, 1, "", "adjugate"], [89, 2, 1, "", "charpoly"], [89, 2, 1, "", "cofactor"], [89, 2, 1, "", "cofactor_matrix"], [89, 2, 1, "", "det"], [89, 2, 1, "", "minor"], [89, 2, 1, "", "minor_submatrix"], [89, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[89, 2, 1, "", "bidiagonal_decomposition"], [89, 2, 1, "", "bidiagonalize"], [89, 2, 1, "", "diagonalize"], [89, 2, 1, "", "eigenvals"], [89, 2, 1, "", "eigenvects"], [89, 2, 1, "", "is_diagonalizable"], [89, 4, 1, "", "is_indefinite"], [89, 4, 1, "", "is_negative_definite"], [89, 4, 1, "", "is_negative_semidefinite"], [89, 4, 1, "", "is_positive_definite"], [89, 4, 1, "", "is_positive_semidefinite"], [89, 2, 1, "", "jordan_form"], [89, 2, 1, "", "left_eigenvects"], [89, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[89, 2, 1, "", "echelon_form"], [89, 2, 1, "", "elementary_col_op"], [89, 2, 1, "", "elementary_row_op"], [89, 4, 1, "", "is_echelon"], [89, 2, 1, "", "rank"], [89, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[89, 2, 1, "", "columnspace"], [89, 2, 1, "", "nullspace"], [89, 2, 1, "", "orthogonalize"], [89, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[90, 3, 1, "", "hermite_normal_form"], [90, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[91, 1, 1, "", "MutableSparseMatrix"], [91, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[92, 2, 1, "", "_csrtodok"], [92, 2, 1, "", "_doktocsr"], [92, 2, 1, "", "banded"]], "sympy.ntheory": [[93, 0, 0, "-", "bbp_pi"], [93, 0, 0, "-", "continued_fraction"], [93, 0, 0, "-", "digits"], [93, 0, 0, "-", "ecm"], [93, 0, 0, "-", "egyptian_fraction"], [93, 0, 0, "-", "factor_"], [93, 0, 0, "-", "generate"], [93, 1, 1, "", "mobius"], [93, 0, 0, "-", "modular"], [93, 0, 0, "-", "multinomial"], [93, 0, 0, "-", "partitions_"], [93, 0, 0, "-", "primetest"], [93, 0, 0, "-", "qs"], [93, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[93, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[93, 3, 1, "", "continued_fraction"], [93, 3, 1, "", "continued_fraction_convergents"], [93, 3, 1, "", "continued_fraction_iterator"], [93, 3, 1, "", "continued_fraction_periodic"], [93, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[93, 3, 1, "", "count_digits"], [93, 3, 1, "", "digits"], [93, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[93, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[93, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[93, 3, 1, "", "abundance"], [93, 3, 1, "", "antidivisor_count"], [93, 3, 1, "", "antidivisors"], [93, 3, 1, "", "core"], [93, 3, 1, "", "digits"], [93, 3, 1, "", "divisor_count"], [93, 1, 1, "", "divisor_sigma"], [93, 3, 1, "", "divisors"], [93, 3, 1, "", "factorint"], [93, 3, 1, "", "factorrat"], [93, 3, 1, "", "is_abundant"], [93, 3, 1, "", "is_amicable"], [93, 3, 1, "", "is_deficient"], [93, 3, 1, "", "is_mersenne_prime"], [93, 3, 1, "", "is_perfect"], [93, 3, 1, "", "mersenne_prime_exponent"], [93, 3, 1, "", "multiplicity"], [93, 3, 1, "", "perfect_power"], [93, 3, 1, "", "pollard_pm1"], [93, 3, 1, "", "pollard_rho"], [93, 3, 1, "", "primefactors"], [93, 1, 1, "", "primenu"], [93, 1, 1, "", "primeomega"], [93, 3, 1, "", "proper_divisor_count"], [93, 3, 1, "", "proper_divisors"], [93, 1, 1, "", "reduced_totient"], [93, 3, 1, "", "smoothness"], [93, 3, 1, "", "smoothness_p"], [93, 1, 1, "", "totient"], [93, 3, 1, "", "trailing"], [93, 3, 1, "", "udivisor_count"], [93, 1, 1, "", "udivisor_sigma"], [93, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[93, 1, 1, "", "Sieve"], [93, 3, 1, "", "composite"], [93, 3, 1, "", "compositepi"], [93, 3, 1, "", "cycle_length"], [93, 3, 1, "", "nextprime"], [93, 3, 1, "", "prevprime"], [93, 3, 1, "", "prime"], [93, 3, 1, "", "primepi"], [93, 3, 1, "", "primerange"], [93, 3, 1, "", "primorial"], [93, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[93, 2, 1, "", "extend"], [93, 2, 1, "", "extend_to_no"], [93, 2, 1, "", "mobiusrange"], [93, 2, 1, "", "primerange"], [93, 2, 1, "", "search"], [93, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[93, 3, 1, "", "crt"], [93, 3, 1, "", "crt1"], [93, 3, 1, "", "crt2"], [93, 3, 1, "", "solve_congruence"], [93, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[93, 3, 1, "", "binomial_coefficients"], [93, 3, 1, "", "binomial_coefficients_list"], [93, 3, 1, "", "multinomial_coefficients"], [93, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[93, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[93, 3, 1, "", "is_euler_pseudoprime"], [93, 3, 1, "", "is_extra_strong_lucas_prp"], [93, 3, 1, "", "is_gaussian_prime"], [93, 3, 1, "", "is_lucas_prp"], [93, 3, 1, "", "is_square"], [93, 3, 1, "", "is_strong_lucas_prp"], [93, 3, 1, "", "isprime"], [93, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[93, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[93, 3, 1, "", "discrete_log"], [93, 3, 1, "", "is_nthpow_residue"], [93, 3, 1, "", "is_primitive_root"], [93, 3, 1, "", "is_quad_residue"], [93, 3, 1, "", "jacobi_symbol"], [93, 3, 1, "", "legendre_symbol"], [93, 3, 1, "", "n_order"], [93, 3, 1, "", "nthroot_mod"], [93, 3, 1, "", "primitive_root"], [93, 3, 1, "", "quadratic_residues"], [93, 3, 1, "", "sqrt_mod"], [93, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[95, 1, 1, "", "LaTeXParsingError"], [95, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[95, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[95, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[95, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[95, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[95, 2, 1, "", "convert_to_c"], [95, 2, 1, "", "convert_to_expr"], [95, 2, 1, "", "convert_to_fortran"], [95, 2, 1, "", "convert_to_python"], [95, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[95, 3, 1, "", "auto_number"], [95, 3, 1, "", "auto_symbol"], [95, 3, 1, "", "convert_xor"], [95, 3, 1, "", "eval_expr"], [95, 3, 1, "", "factorial_notation"], [95, 3, 1, "", "function_exponentiation"], [95, 3, 1, "", "implicit_application"], [95, 3, 1, "", "implicit_multiplication"], [95, 3, 1, "", "implicit_multiplication_application"], [95, 3, 1, "", "lambda_notation"], [95, 3, 1, "", "parse_expr"], [95, 3, 1, "", "rationalize"], [95, 3, 1, "", "repeated_decimals"], [95, 3, 1, "", "split_symbols"], [95, 3, 1, "", "split_symbols_custom"], [95, 6, 1, "", "standard_transformations"], [95, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[96, 0, 0, "-", "beam"], [99, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[96, 1, 1, "", "Beam"], [96, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[96, 4, 1, "", "applied_loads"], [96, 2, 1, "", "apply_load"], [96, 2, 1, "", "apply_support"], [96, 4, 1, "", "area"], [96, 2, 1, "", "bending_moment"], [96, 4, 1, "", "boundary_conditions"], [96, 4, 1, "", "cross_section"], [96, 2, 1, "", "deflection"], [96, 2, 1, "", "draw"], [96, 4, 1, "", "elastic_modulus"], [96, 4, 1, "", "ild_moment"], [96, 4, 1, "", "ild_reactions"], [96, 4, 1, "", "ild_shear"], [96, 2, 1, "", "join"], [96, 4, 1, "", "length"], [96, 4, 1, "", "load"], [96, 2, 1, "", "max_bmoment"], [96, 2, 1, "", "max_deflection"], [96, 2, 1, "", "max_shear_force"], [96, 2, 1, "", "plot_bending_moment"], [96, 2, 1, "", "plot_deflection"], [96, 2, 1, "", "plot_ild_moment"], [96, 2, 1, "", "plot_ild_reactions"], [96, 2, 1, "", "plot_ild_shear"], [96, 2, 1, "", "plot_loading_results"], [96, 2, 1, "", "plot_shear_force"], [96, 2, 1, "", "plot_shear_stress"], [96, 2, 1, "", "plot_slope"], [96, 2, 1, "", "point_cflexure"], [96, 4, 1, "", "reaction_loads"], [96, 2, 1, "", "remove_load"], [96, 4, 1, "", "second_moment"], [96, 2, 1, "", "shear_force"], [96, 2, 1, "", "shear_stress"], [96, 2, 1, "", "slope"], [96, 2, 1, "", "solve_for_ild_moment"], [96, 2, 1, "", "solve_for_ild_reactions"], [96, 2, 1, "", "solve_for_ild_shear"], [96, 2, 1, "", "solve_for_reaction_loads"], [96, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[96, 2, 1, "", "apply_load"], [96, 2, 1, "", "apply_moment_load"], [96, 4, 1, "", "area"], [96, 2, 1, "", "axial_force"], [96, 2, 1, "", "axial_stress"], [96, 2, 1, "", "bending_moment"], [96, 4, 1, "", "boundary_conditions"], [96, 2, 1, "", "deflection"], [96, 4, 1, "", "load_vector"], [96, 2, 1, "", "max_bending_moment"], [96, 2, 1, "", "max_bmoment"], [96, 2, 1, "", "max_deflection"], [96, 2, 1, "", "max_shear_force"], [96, 4, 1, "", "moment_load_vector"], [96, 2, 1, "", "plot_bending_moment"], [96, 2, 1, "", "plot_deflection"], [96, 2, 1, "", "plot_loading_results"], [96, 2, 1, "", "plot_shear_force"], [96, 2, 1, "", "plot_shear_stress"], [96, 2, 1, "", "plot_slope"], [96, 2, 1, "", "polar_moment"], [96, 4, 1, "", "second_moment"], [96, 2, 1, "", "shear_force"], [96, 4, 1, "", "shear_modulus"], [96, 2, 1, "", "shear_stress"], [96, 2, 1, "", "slope"], [96, 2, 1, "", "solve_for_reaction_loads"], [96, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.truss": [[99, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[99, 2, 1, "", "add_member"], [99, 2, 1, "", "add_node"], [99, 2, 1, "", "apply_load"], [99, 2, 1, "", "apply_support"], [99, 2, 1, "", "change_member_label"], [99, 2, 1, "", "change_node_label"], [99, 4, 1, "", "internal_forces"], [99, 4, 1, "", "loads"], [99, 4, 1, "", "member_labels"], [99, 4, 1, "", "members"], [99, 4, 1, "", "node_labels"], [99, 4, 1, "", "node_positions"], [99, 4, 1, "", "nodes"], [99, 4, 1, "", "reaction_loads"], [99, 2, 1, "", "remove_load"], [99, 2, 1, "", "remove_member"], [99, 2, 1, "", "remove_node"], [99, 2, 1, "", "remove_support"], [99, 2, 1, "", "solve"], [99, 4, 1, "", "supports"]], "sympy.physics": [[102, 0, 0, "-", "control"], [105, 0, 0, "-", "hydrogen"], [106, 0, 0, "-", "matrices"], [126, 0, 0, "-", "mechanics"], [141, 0, 0, "-", "paulialgebra"], [142, 0, 0, "-", "qho_1d"], [166, 0, 0, "-", "secondquant"], [167, 0, 0, "-", "sho"], [182, 0, 0, "-", "vector"], [185, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[101, 2, 1, "", "bode_magnitude_numerical_data"], [101, 2, 1, "", "bode_magnitude_plot"], [101, 2, 1, "", "bode_phase_numerical_data"], [101, 2, 1, "", "bode_phase_plot"], [101, 2, 1, "", "bode_plot"], [101, 2, 1, "", "impulse_response_numerical_data"], [101, 2, 1, "", "impulse_response_plot"], [101, 2, 1, "", "pole_zero_numerical_data"], [101, 2, 1, "", "pole_zero_plot"], [101, 2, 1, "", "ramp_response_numerical_data"], [101, 2, 1, "", "ramp_response_plot"], [101, 2, 1, "", "step_response_numerical_data"], [101, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[103, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[103, 1, 1, "", "Feedback"], [103, 1, 1, "", "MIMOFeedback"], [103, 1, 1, "", "MIMOParallel"], [103, 1, 1, "", "MIMOSeries"], [103, 1, 1, "", "Parallel"], [103, 1, 1, "", "Series"], [103, 1, 1, "", "TransferFunction"], [103, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[103, 2, 1, "", "doit"], [103, 4, 1, "", "sensitivity"], [103, 4, 1, "", "sign"], [103, 4, 1, "", "sys1"], [103, 4, 1, "", "sys2"], [103, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[103, 2, 1, "", "doit"], [103, 4, 1, "", "sensitivity"], [103, 4, 1, "", "sign"], [103, 4, 1, "", "sys1"], [103, 4, 1, "", "sys2"], [103, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[103, 2, 1, "", "doit"], [103, 4, 1, "", "num_inputs"], [103, 4, 1, "", "num_outputs"], [103, 4, 1, "", "shape"], [103, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[103, 2, 1, "", "doit"], [103, 4, 1, "", "num_inputs"], [103, 4, 1, "", "num_outputs"], [103, 4, 1, "", "shape"], [103, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[103, 2, 1, "", "doit"], [103, 4, 1, "", "is_biproper"], [103, 4, 1, "", "is_proper"], [103, 4, 1, "", "is_strictly_proper"], [103, 2, 1, "", "to_expr"], [103, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[103, 2, 1, "", "doit"], [103, 4, 1, "", "is_biproper"], [103, 4, 1, "", "is_proper"], [103, 4, 1, "", "is_strictly_proper"], [103, 2, 1, "", "to_expr"], [103, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[103, 2, 1, "", "dc_gain"], [103, 4, 1, "", "den"], [103, 2, 1, "", "expand"], [103, 2, 1, "", "from_rational_expression"], [103, 4, 1, "", "is_biproper"], [103, 4, 1, "", "is_proper"], [103, 2, 1, "", "is_stable"], [103, 4, 1, "", "is_strictly_proper"], [103, 4, 1, "", "num"], [103, 2, 1, "", "poles"], [103, 2, 1, "", "to_expr"], [103, 4, 1, "", "var"], [103, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[103, 2, 1, "", "elem_poles"], [103, 2, 1, "", "elem_zeros"], [103, 2, 1, "", "expand"], [103, 2, 1, "", "from_Matrix"], [103, 4, 1, "", "num_inputs"], [103, 4, 1, "", "num_outputs"], [103, 4, 1, "", "shape"], [103, 2, 1, "", "transpose"], [103, 4, 1, "", "var"]], "sympy.physics.hep": [[104, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[104, 3, 1, "", "extract_type_tens"], [104, 3, 1, "", "gamma_trace"], [104, 3, 1, "", "kahane_simplify"], [104, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[105, 3, 1, "", "E_nl"], [105, 3, 1, "", "E_nl_dirac"], [105, 3, 1, "", "Psi_nlm"], [105, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[106, 3, 1, "", "mdft"], [106, 3, 1, "", "mgamma"], [106, 3, 1, "", "msigma"], [106, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[108, 0, 0, "-", "body"], [109, 3, 1, "", "find_dynamicsymbols"], [110, 0, 0, "-", "joint"], [110, 0, 0, "-", "jointsmethod"], [111, 0, 0, "-", "kane"], [111, 0, 0, "-", "lagrange"], [112, 0, 0, "-", "linearize"], [109, 3, 1, "", "msubs"], [113, 0, 0, "-", "particle"], [113, 0, 0, "-", "rigidbody"], [115, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[108, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[108, 2, 1, "", "ang_vel_in"], [108, 2, 1, "", "apply_force"], [108, 2, 1, "", "apply_torque"], [108, 2, 1, "", "clear_loads"], [108, 2, 1, "", "dcm"], [108, 2, 1, "", "kinetic_energy"], [108, 2, 1, "", "masscenter_vel"], [108, 2, 1, "", "remove_load"], [108, 4, 1, "", "x"], [108, 4, 1, "", "y"], [108, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[113, 3, 1, "", "Lagrangian"], [113, 3, 1, "", "angular_momentum"], [113, 3, 1, "", "inertia"], [113, 3, 1, "", "inertia_of_point_mass"], [113, 3, 1, "", "kinetic_energy"], [113, 3, 1, "", "linear_momentum"], [113, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[110, 1, 1, "", "Joint"], [110, 1, 1, "", "PinJoint"], [110, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[110, 4, 1, "", "child"], [110, 4, 1, "", "child_axis"], [110, 4, 1, "", "child_point"], [110, 4, 1, "", "coordinates"], [110, 4, 1, "", "kdes"], [110, 4, 1, "", "parent"], [110, 4, 1, "", "parent_axis"], [110, 4, 1, "", "parent_point"], [110, 4, 1, "", "speeds"]], "sympy.physics.mechanics.jointsmethod": [[110, 1, 1, "", "JointsMethod"]], "sympy.physics.mechanics.jointsmethod.JointsMethod": [[110, 4, 1, "", "bodies"], [110, 4, 1, "", "forcing"], [110, 4, 1, "", "forcing_full"], [110, 2, 1, "", "form_eoms"], [110, 4, 1, "", "kdes"], [110, 4, 1, "", "loads"], [110, 4, 1, "", "mass_matrix"], [110, 4, 1, "", "mass_matrix_full"], [110, 4, 1, "", "method"], [110, 4, 1, "", "q"], [110, 2, 1, "", "rhs"], [110, 4, 1, "", "u"]], "sympy.physics.mechanics.kane": [[111, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[111, 4, 1, "", "auxiliary_eqs"], [111, 4, 1, "", "forcing"], [111, 4, 1, "", "forcing_full"], [111, 2, 1, "", "kanes_equations"], [111, 2, 1, "", "kindiffdict"], [111, 2, 1, "", "linearize"], [111, 4, 1, "", "mass_matrix"], [111, 4, 1, "", "mass_matrix_full"], [111, 2, 1, "", "rhs"], [111, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[111, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[111, 4, 1, "", "forcing"], [111, 4, 1, "", "forcing_full"], [111, 2, 1, "", "form_lagranges_equations"], [111, 2, 1, "", "linearize"], [111, 4, 1, "", "mass_matrix"], [111, 4, 1, "", "mass_matrix_full"], [111, 2, 1, "", "rhs"], [111, 2, 1, "", "solve_multipliers"], [111, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[112, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[112, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[113, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[113, 2, 1, "", "angular_momentum"], [113, 2, 1, "", "kinetic_energy"], [113, 2, 1, "", "linear_momentum"], [113, 4, 1, "", "mass"], [113, 2, 1, "", "parallel_axis"], [113, 4, 1, "", "point"], [113, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[113, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[113, 2, 1, "", "angular_momentum"], [113, 4, 1, "", "central_inertia"], [113, 2, 1, "", "kinetic_energy"], [113, 2, 1, "", "linear_momentum"], [113, 2, 1, "", "parallel_axis"], [113, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[115, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[115, 4, 1, "", "alg_con"], [115, 4, 1, "", "bodies"], [115, 4, 1, "", "comb_explicit_rhs"], [115, 4, 1, "", "comb_implicit_mat"], [115, 4, 1, "", "comb_implicit_rhs"], [115, 2, 1, "", "compute_explicit_form"], [115, 2, 1, "", "constant_symbols"], [115, 4, 1, "", "coordinates"], [115, 4, 1, "", "dyn_implicit_mat"], [115, 4, 1, "", "dyn_implicit_rhs"], [115, 2, 1, "", "dynamic_symbols"], [115, 4, 1, "", "kin_explicit_rhs"], [115, 4, 1, "", "loads"], [115, 4, 1, "", "speeds"], [115, 4, 1, "", "states"]], "sympy.physics.optics": [[135, 0, 0, "-", "gaussopt"], [137, 0, 0, "-", "medium"], [138, 0, 0, "-", "polarization"], [139, 0, 0, "-", "utils"], [140, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[135, 1, 1, "", "BeamParameter"], [135, 1, 1, "", "CurvedMirror"], [135, 1, 1, "", "CurvedRefraction"], [135, 1, 1, "", "FlatMirror"], [135, 1, 1, "", "FlatRefraction"], [135, 1, 1, "", "FreeSpace"], [135, 1, 1, "", "GeometricRay"], [135, 1, 1, "", "RayTransferMatrix"], [135, 1, 1, "", "ThinLens"], [135, 3, 1, "", "conjugate_gauss_beams"], [135, 3, 1, "", "gaussian_conj"], [135, 3, 1, "", "geometric_conj_ab"], [135, 3, 1, "", "geometric_conj_af"], [135, 3, 1, "", "geometric_conj_bf"], [135, 3, 1, "", "rayleigh2waist"], [135, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[135, 4, 1, "", "divergence"], [135, 4, 1, "", "gouy"], [135, 4, 1, "", "q"], [135, 4, 1, "", "radius"], [135, 4, 1, "", "w"], [135, 4, 1, "", "w_0"], [135, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[135, 4, 1, "", "angle"], [135, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[135, 4, 1, "", "A"], [135, 4, 1, "", "B"], [135, 4, 1, "", "C"], [135, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[137, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[137, 4, 1, "", "refractive_index"], [137, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[138, 3, 1, "", "half_wave_retarder"], [138, 3, 1, "", "jones_2_stokes"], [138, 3, 1, "", "jones_vector"], [138, 3, 1, "", "linear_polarizer"], [138, 3, 1, "", "mueller_matrix"], [138, 3, 1, "", "phase_retarder"], [138, 3, 1, "", "polarizing_beam_splitter"], [138, 3, 1, "", "quarter_wave_retarder"], [138, 3, 1, "", "reflective_filter"], [138, 3, 1, "", "stokes_vector"], [138, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[139, 3, 1, "", "brewster_angle"], [139, 3, 1, "", "critical_angle"], [139, 3, 1, "", "deviation"], [139, 3, 1, "", "fresnel_coefficients"], [139, 3, 1, "", "hyperfocal_distance"], [139, 3, 1, "", "lens_formula"], [139, 3, 1, "", "lens_makers_formula"], [139, 3, 1, "", "mirror_formula"], [139, 3, 1, "", "refraction_angle"], [139, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[140, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[140, 4, 1, "", "amplitude"], [140, 4, 1, "", "angular_velocity"], [140, 4, 1, "", "frequency"], [140, 4, 1, "", "n"], [140, 4, 1, "", "phase"], [140, 4, 1, "", "speed"], [140, 4, 1, "", "time_period"], [140, 4, 1, "", "wavelength"], [140, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[141, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[142, 3, 1, "", "E_n"], [142, 3, 1, "", "coherent_state"], [142, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[143, 0, 0, "-", "anticommutator"], [144, 0, 0, "-", "cartesian"], [145, 0, 0, "-", "cg"], [146, 0, 0, "-", "circuitplot"], [147, 0, 0, "-", "commutator"], [148, 0, 0, "-", "constants"], [149, 0, 0, "-", "dagger"], [150, 0, 0, "-", "gate"], [151, 0, 0, "-", "grover"], [152, 0, 0, "-", "hilbert"], [154, 0, 0, "-", "innerproduct"], [155, 0, 0, "-", "operator"], [156, 0, 0, "-", "operatorset"], [157, 0, 0, "-", "piab"], [158, 0, 0, "-", "qapply"], [159, 0, 0, "-", "qft"], [160, 0, 0, "-", "qubit"], [161, 0, 0, "-", "represent"], [162, 0, 0, "-", "shor"], [163, 0, 0, "-", "spin"], [164, 0, 0, "-", "state"], [165, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[143, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[143, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[144, 1, 1, "", "PositionBra3D"], [144, 1, 1, "", "PositionKet3D"], [144, 1, 1, "", "PositionState3D"], [144, 1, 1, "", "PxBra"], [144, 1, 1, "", "PxKet"], [144, 1, 1, "", "PxOp"], [144, 1, 1, "", "XBra"], [144, 1, 1, "", "XKet"], [144, 1, 1, "", "XOp"], [144, 1, 1, "", "YOp"], [144, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[144, 4, 1, "", "position_x"], [144, 4, 1, "", "position_y"], [144, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[144, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[144, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[144, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[144, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[145, 1, 1, "", "CG"], [145, 1, 1, "", "Wigner3j"], [145, 1, 1, "", "Wigner6j"], [145, 1, 1, "", "Wigner9j"], [145, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[146, 1, 1, "", "CircuitPlot"], [146, 3, 1, "", "CreateCGate"], [146, 1, 1, "", "Mx"], [146, 1, 1, "", "Mz"], [146, 3, 1, "", "circuit_plot"], [146, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[146, 2, 1, "", "control_line"], [146, 2, 1, "", "control_point"], [146, 2, 1, "", "not_point"], [146, 2, 1, "", "one_qubit_box"], [146, 2, 1, "", "swap_point"], [146, 2, 1, "", "two_qubit_box"], [146, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[147, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[147, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[148, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[149, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[150, 1, 1, "", "CGate"], [150, 1, 1, "", "CGateS"], [150, 5, 1, "", "CNOT"], [150, 1, 1, "", "CNotGate"], [150, 1, 1, "", "Gate"], [150, 5, 1, "", "H"], [150, 1, 1, "", "HadamardGate"], [150, 1, 1, "", "IdentityGate"], [150, 1, 1, "", "OneQubitGate"], [150, 5, 1, "", "Phase"], [150, 1, 1, "", "PhaseGate"], [150, 5, 1, "", "S"], [150, 5, 1, "", "SWAP"], [150, 1, 1, "", "SwapGate"], [150, 5, 1, "", "T"], [150, 1, 1, "", "TGate"], [150, 1, 1, "", "TwoQubitGate"], [150, 1, 1, "", "UGate"], [150, 5, 1, "", "X"], [150, 1, 1, "", "XGate"], [150, 5, 1, "", "Y"], [150, 1, 1, "", "YGate"], [150, 5, 1, "", "Z"], [150, 1, 1, "", "ZGate"], [150, 3, 1, "", "gate_simp"], [150, 3, 1, "", "gate_sort"], [150, 3, 1, "", "normalized"], [150, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[150, 4, 1, "", "controls"], [150, 2, 1, "", "decompose"], [150, 2, 1, "", "eval_controls"], [150, 4, 1, "", "gate"], [150, 4, 1, "", "min_qubits"], [150, 4, 1, "", "nqubits"], [150, 2, 1, "", "plot_gate"], [150, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[150, 4, 1, "", "controls"], [150, 4, 1, "", "gate"], [150, 4, 1, "", "min_qubits"], [150, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[150, 2, 1, "", "get_target_matrix"], [150, 4, 1, "", "min_qubits"], [150, 4, 1, "", "nqubits"], [150, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[150, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[150, 2, 1, "", "get_target_matrix"], [150, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[151, 1, 1, "", "OracleGate"], [151, 1, 1, "", "WGate"], [151, 3, 1, "", "apply_grover"], [151, 3, 1, "", "grover_iteration"], [151, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[151, 4, 1, "", "search_function"], [151, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[152, 1, 1, "", "ComplexSpace"], [152, 1, 1, "", "DirectSumHilbertSpace"], [152, 1, 1, "", "FockSpace"], [152, 1, 1, "", "HilbertSpace"], [152, 1, 1, "", "L2"], [152, 1, 1, "", "TensorPowerHilbertSpace"], [152, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[152, 2, 1, "", "eval"], [152, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[152, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[152, 2, 1, "", "eval"], [152, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[154, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[155, 1, 1, "", "DifferentialOperator"], [155, 1, 1, "", "HermitianOperator"], [155, 1, 1, "", "IdentityOperator"], [155, 1, 1, "", "Operator"], [155, 1, 1, "", "OuterProduct"], [155, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[155, 4, 1, "", "expr"], [155, 4, 1, "", "free_symbols"], [155, 4, 1, "", "function"], [155, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[155, 4, 1, "", "bra"], [155, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[156, 3, 1, "", "operators_to_state"], [156, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[157, 1, 1, "", "PIABBra"], [157, 1, 1, "", "PIABHamiltonian"], [157, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[158, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[159, 1, 1, "", "IQFT"], [159, 1, 1, "", "QFT"], [159, 5, 1, "", "Rk"], [159, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[159, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[159, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[160, 1, 1, "", "IntQubit"], [160, 1, 1, "", "IntQubitBra"], [160, 1, 1, "", "Qubit"], [160, 1, 1, "", "QubitBra"], [160, 3, 1, "", "matrix_to_density"], [160, 3, 1, "", "matrix_to_qubit"], [160, 3, 1, "", "measure_all"], [160, 3, 1, "", "measure_all_oneshot"], [160, 3, 1, "", "measure_partial"], [160, 3, 1, "", "measure_partial_oneshot"], [160, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[161, 3, 1, "", "enumerate_states"], [161, 3, 1, "", "get_basis"], [161, 3, 1, "", "integrate_result"], [161, 3, 1, "", "rep_expectation"], [161, 3, 1, "", "rep_innerproduct"], [161, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[162, 1, 1, "", "CMod"], [162, 3, 1, "", "period_find"], [162, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[162, 4, 1, "", "N"], [162, 4, 1, "", "a"], [162, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[163, 1, 1, "", "J2Op"], [163, 1, 1, "", "JxBra"], [163, 1, 1, "", "JxBraCoupled"], [163, 1, 1, "", "JxKet"], [163, 1, 1, "", "JxKetCoupled"], [163, 1, 1, "", "JyBra"], [163, 1, 1, "", "JyBraCoupled"], [163, 1, 1, "", "JyKet"], [163, 1, 1, "", "JyKetCoupled"], [163, 1, 1, "", "JzBra"], [163, 1, 1, "", "JzBraCoupled"], [163, 1, 1, "", "JzKet"], [163, 1, 1, "", "JzKetCoupled"], [163, 1, 1, "", "JzOp"], [163, 1, 1, "", "Rotation"], [163, 1, 1, "", "WignerD"], [163, 3, 1, "", "couple"], [163, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[163, 2, 1, "", "D"], [163, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[164, 1, 1, "", "Bra"], [164, 1, 1, "", "BraBase"], [164, 1, 1, "", "Ket"], [164, 1, 1, "", "KetBase"], [164, 1, 1, "", "OrthogonalBra"], [164, 1, 1, "", "OrthogonalKet"], [164, 1, 1, "", "OrthogonalState"], [164, 1, 1, "", "State"], [164, 1, 1, "", "StateBase"], [164, 1, 1, "", "TimeDepBra"], [164, 1, 1, "", "TimeDepKet"], [164, 1, 1, "", "TimeDepState"], [164, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[164, 4, 1, "", "dual"], [164, 2, 1, "", "dual_class"], [164, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[164, 4, 1, "", "label"], [164, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[164, 4, 1, "", "expr"], [164, 4, 1, "", "is_commutative"], [164, 4, 1, "", "is_normalized"], [164, 4, 1, "", "limits"], [164, 4, 1, "", "norm"], [164, 2, 1, "", "normalize"], [164, 2, 1, "", "prob"], [164, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[165, 1, 1, "", "TensorProduct"], [165, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[166, 1, 1, "", "AnnihilateBoson"], [166, 1, 1, "", "AnnihilateFermion"], [166, 1, 1, "", "AntiSymmetricTensor"], [166, 5, 1, "", "B"], [166, 5, 1, "", "BBra"], [166, 5, 1, "", "BKet"], [166, 5, 1, "", "Bd"], [166, 1, 1, "", "BosonicBasis"], [166, 1, 1, "", "Commutator"], [166, 1, 1, "", "CreateBoson"], [166, 1, 1, "", "CreateFermion"], [166, 1, 1, "", "Dagger"], [166, 5, 1, "", "F"], [166, 5, 1, "", "FBra"], [166, 5, 1, "", "FKet"], [166, 5, 1, "", "Fd"], [166, 1, 1, "", "FixedBosonicBasis"], [166, 1, 1, "", "FockState"], [166, 1, 1, "", "FockStateBosonBra"], [166, 1, 1, "", "FockStateBosonKet"], [166, 1, 1, "", "FockStateBra"], [166, 1, 1, "", "FockStateFermionBra"], [166, 1, 1, "", "FockStateFermionKet"], [166, 1, 1, "", "FockStateKet"], [166, 1, 1, "", "InnerProduct"], [166, 1, 1, "", "KroneckerDelta"], [166, 1, 1, "", "NO"], [166, 1, 1, "", "PermutationOperator"], [166, 1, 1, "", "VarBosonicBasis"], [166, 3, 1, "", "apply_operators"], [166, 3, 1, "", "contraction"], [166, 3, 1, "", "evaluate_deltas"], [166, 3, 1, "", "matrix_rep"], [166, 3, 1, "", "simplify_index_permutations"], [166, 3, 1, "", "substitute_dummies"], [166, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[166, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[166, 2, 1, "", "apply_operator"], [166, 4, 1, "", "is_only_q_annihilator"], [166, 4, 1, "", "is_only_q_creator"], [166, 4, 1, "", "is_q_annihilator"], [166, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[166, 4, 1, "", "lower"], [166, 4, 1, "", "symbol"], [166, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[166, 2, 1, "", "doit"], [166, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[166, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[166, 2, 1, "", "apply_operator"], [166, 4, 1, "", "is_only_q_annihilator"], [166, 4, 1, "", "is_only_q_creator"], [166, 4, 1, "", "is_q_annihilator"], [166, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[166, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[166, 2, 1, "", "index"], [166, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[166, 4, 1, "", "bra"], [166, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[166, 2, 1, "", "eval"], [166, 4, 1, "", "indices_contain_equal_information"], [166, 4, 1, "", "is_above_fermi"], [166, 4, 1, "", "is_below_fermi"], [166, 4, 1, "", "is_only_above_fermi"], [166, 4, 1, "", "is_only_below_fermi"], [166, 4, 1, "", "killable_index"], [166, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[166, 2, 1, "", "doit"], [166, 2, 1, "", "get_subNO"], [166, 4, 1, "", "has_q_annihilators"], [166, 4, 1, "", "has_q_creators"], [166, 2, 1, "", "iter_q_annihilators"], [166, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[166, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[166, 2, 1, "", "index"], [166, 2, 1, "", "state"]], "sympy.physics.sho": [[167, 3, 1, "", "E_nl"], [167, 3, 1, "", "R_nl"]], "sympy.physics.units": [[168, 0, 0, "-", "dimensions"], [172, 0, 0, "-", "prefixes"], [173, 0, 0, "-", "quantities"], [174, 0, 0, "-", "unitsystem"], [173, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[168, 1, 1, "", "Dimension"], [168, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[168, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[168, 4, 1, "", "can_transf_matrix"], [168, 4, 1, "", "dim"], [168, 2, 1, "", "dim_can_vector"], [168, 2, 1, "", "dim_vector"], [168, 4, 1, "", "inv_can_transf_matrix"], [168, 4, 1, "", "is_consistent"], [168, 2, 1, "", "is_dimensionless"], [168, 4, 1, "", "list_can_dims"], [168, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[172, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[173, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[173, 4, 1, "", "abbrev"], [173, 2, 1, "", "convert_to"], [173, 4, 1, "", "free_symbols"], [173, 4, 1, "", "is_prefixed"], [173, 4, 1, "", "scale_factor"], [173, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[174, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[174, 4, 1, "", "dim"], [174, 2, 1, "", "extend"], [174, 2, 1, "", "get_units_non_prefixed"], [174, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[173, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[176, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[176, 2, 1, "", "applyfunc"], [176, 2, 1, "", "cross"], [176, 2, 1, "", "doit"], [176, 2, 1, "", "dot"], [176, 2, 1, "", "dt"], [176, 2, 1, "", "express"], [176, 4, 1, "", "func"], [176, 2, 1, "", "simplify"], [176, 2, 1, "", "subs"], [176, 2, 1, "", "to_matrix"], [176, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[178, 3, 1, "", "dynamicsymbols"], [179, 0, 0, "-", "functions"], [179, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[177, 3, 1, "", "curl"], [177, 3, 1, "", "divergence"], [177, 3, 1, "", "gradient"], [177, 3, 1, "", "is_conservative"], [177, 3, 1, "", "is_solenoidal"], [177, 3, 1, "", "scalar_potential"], [177, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[176, 1, 1, "", "CoordinateSym"], [176, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[176, 2, 1, "", "ang_acc_in"], [176, 2, 1, "", "ang_vel_in"], [176, 2, 1, "", "dcm"], [176, 2, 1, "", "orient"], [176, 2, 1, "", "orient_axis"], [176, 2, 1, "", "orient_body_fixed"], [176, 2, 1, "", "orient_explicit"], [176, 2, 1, "", "orient_quaternion"], [176, 2, 1, "", "orient_space_fixed"], [176, 2, 1, "", "orientnew"], [176, 2, 1, "", "partial_velocity"], [176, 2, 1, "", "set_ang_acc"], [176, 2, 1, "", "set_ang_vel"], [176, 2, 1, "", "variable_map"], [176, 4, 1, "", "x"], [176, 4, 1, "", "y"], [176, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[178, 3, 1, "", "cross"], [178, 3, 1, "", "dot"], [178, 3, 1, "", "express"], [179, 3, 1, "", "get_motion_params"], [179, 3, 1, "", "kinematic_equations"], [178, 3, 1, "", "outer"], [179, 3, 1, "", "partial_velocity"], [178, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[179, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[179, 2, 1, "", "a1pt_theory"], [179, 2, 1, "", "a2pt_theory"], [179, 2, 1, "", "acc"], [179, 2, 1, "", "locatenew"], [179, 2, 1, "", "partial_velocity"], [179, 2, 1, "", "pos_from"], [179, 2, 1, "", "set_acc"], [179, 2, 1, "", "set_pos"], [179, 2, 1, "", "set_vel"], [179, 2, 1, "", "v1pt_theory"], [179, 2, 1, "", "v2pt_theory"], [179, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[180, 3, 1, "", "init_vprinting"], [180, 3, 1, "", "vlatex"], [180, 3, 1, "", "vpprint"], [180, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[176, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[176, 2, 1, "", "angle_between"], [176, 2, 1, "", "applyfunc"], [176, 2, 1, "", "cross"], [176, 2, 1, "", "diff"], [176, 2, 1, "", "doit"], [176, 2, 1, "", "dot"], [176, 2, 1, "", "dt"], [176, 2, 1, "", "express"], [176, 2, 1, "", "free_dynamicsymbols"], [176, 2, 1, "", "free_symbols"], [176, 4, 1, "", "func"], [176, 2, 1, "", "magnitude"], [176, 2, 1, "", "normalize"], [176, 2, 1, "", "outer"], [176, 2, 1, "", "separate"], [176, 2, 1, "", "simplify"], [176, 2, 1, "", "subs"], [176, 2, 1, "", "to_matrix"], [176, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[185, 3, 1, "", "clebsch_gordan"], [185, 3, 1, "", "dot_rot_grad_Ynm"], [185, 3, 1, "", "gaunt"], [185, 3, 1, "", "racah"], [185, 3, 1, "", "wigner_3j"], [185, 3, 1, "", "wigner_6j"], [185, 3, 1, "", "wigner_9j"], [185, 3, 1, "", "wigner_d"], [185, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[186, 0, 0, "-", "plot"], [186, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[186, 1, 1, "", "BaseBackend"], [186, 1, 1, "", "BaseSeries"], [186, 1, 1, "", "Line2DBaseSeries"], [186, 1, 1, "", "Line3DBaseSeries"], [186, 1, 1, "", "LineOver1DRangeSeries"], [186, 1, 1, "", "MatplotlibBackend"], [186, 1, 1, "", "Parametric2DLineSeries"], [186, 1, 1, "", "Parametric3DLineSeries"], [186, 1, 1, "", "ParametricSurfaceSeries"], [186, 1, 1, "", "Plot"], [186, 1, 1, "", "PlotGrid"], [186, 1, 1, "", "SurfaceBaseSeries"], [186, 1, 1, "", "SurfaceOver2DRangeSeries"], [186, 1, 1, "", "TextBackend"], [186, 3, 1, "", "plot"], [186, 3, 1, "", "plot3d"], [186, 3, 1, "", "plot3d_parametric_line"], [186, 3, 1, "", "plot3d_parametric_surface"], [186, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[186, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[186, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[186, 2, 1, "", "get_segments"], [186, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[186, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[186, 2, 1, "", "append"], [186, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[186, 1, 1, "", "ImplicitSeries"], [186, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[186, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[187, 1, 1, "", "ExtensionElement"], [187, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[187, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[187, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[187, 1, 1, "", "ModuleHomomorphism"], [187, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[187, 2, 1, "", "image"], [187, 2, 1, "", "is_injective"], [187, 2, 1, "", "is_isomorphism"], [187, 2, 1, "", "is_surjective"], [187, 2, 1, "", "is_zero"], [187, 2, 1, "", "kernel"], [187, 2, 1, "", "quotient_codomain"], [187, 2, 1, "", "quotient_domain"], [187, 2, 1, "", "restrict_codomain"], [187, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[187, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[187, 2, 1, "", "contains"], [187, 2, 1, "", "depth"], [187, 2, 1, "", "height"], [187, 2, 1, "", "intersect"], [187, 2, 1, "", "is_maximal"], [187, 2, 1, "", "is_primary"], [187, 2, 1, "", "is_prime"], [187, 2, 1, "", "is_principal"], [187, 2, 1, "", "is_radical"], [187, 2, 1, "", "is_whole_ring"], [187, 2, 1, "", "is_zero"], [187, 2, 1, "", "product"], [187, 2, 1, "", "quotient"], [187, 2, 1, "", "radical"], [187, 2, 1, "", "reduce_element"], [187, 2, 1, "", "saturate"], [187, 2, 1, "", "subset"], [187, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[187, 1, 1, "", "FreeModule"], [187, 1, 1, "", "FreeModuleElement"], [187, 1, 1, "", "Module"], [187, 1, 1, "", "QuotientModule"], [187, 1, 1, "", "QuotientModuleElement"], [187, 1, 1, "", "SubModule"], [187, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[187, 2, 1, "", "basis"], [187, 2, 1, "", "convert"], [187, 5, 1, "", "dtype"], [187, 2, 1, "", "identity_hom"], [187, 2, 1, "", "is_submodule"], [187, 2, 1, "", "is_zero"], [187, 2, 1, "", "multiply_ideal"], [187, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[187, 2, 1, "", "contains"], [187, 2, 1, "", "convert"], [187, 2, 1, "", "identity_hom"], [187, 2, 1, "", "is_submodule"], [187, 2, 1, "", "is_zero"], [187, 2, 1, "", "multiply_ideal"], [187, 2, 1, "", "quotient_module"], [187, 2, 1, "", "submodule"], [187, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[187, 2, 1, "", "convert"], [187, 5, 1, "", "dtype"], [187, 2, 1, "", "identity_hom"], [187, 2, 1, "", "is_submodule"], [187, 2, 1, "", "is_zero"], [187, 2, 1, "", "quotient_hom"], [187, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[187, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[187, 2, 1, "", "convert"], [187, 2, 1, "", "identity_hom"], [187, 2, 1, "", "in_terms_of_generators"], [187, 2, 1, "", "inclusion_hom"], [187, 2, 1, "", "intersect"], [187, 2, 1, "", "is_full_module"], [187, 2, 1, "", "is_submodule"], [187, 2, 1, "", "is_zero"], [187, 2, 1, "", "module_quotient"], [187, 2, 1, "", "multiply_ideal"], [187, 2, 1, "", "quotient_module"], [187, 2, 1, "", "reduce_element"], [187, 2, 1, "", "submodule"], [187, 2, 1, "", "syzygy_module"], [187, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[187, 2, 1, "", "is_full_module"], [187, 2, 1, "", "quotient_hom"]], "sympy.polys.constructor": [[196, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[193, 3, 1, "", "dmp_abs"], [193, 3, 1, "", "dmp_add"], [193, 3, 1, "", "dmp_add_ground"], [193, 3, 1, "", "dmp_add_mul"], [193, 3, 1, "", "dmp_add_term"], [193, 3, 1, "", "dmp_div"], [193, 3, 1, "", "dmp_expand"], [193, 3, 1, "", "dmp_exquo"], [193, 3, 1, "", "dmp_exquo_ground"], [193, 3, 1, "", "dmp_ff_div"], [193, 3, 1, "", "dmp_l1_norm"], [193, 3, 1, "", "dmp_max_norm"], [193, 3, 1, "", "dmp_mul"], [193, 3, 1, "", "dmp_mul_ground"], [193, 3, 1, "", "dmp_mul_term"], [193, 3, 1, "", "dmp_neg"], [193, 3, 1, "", "dmp_pdiv"], [193, 3, 1, "", "dmp_pexquo"], [193, 3, 1, "", "dmp_pow"], [193, 3, 1, "", "dmp_pquo"], [193, 3, 1, "", "dmp_prem"], [193, 3, 1, "", "dmp_quo"], [193, 3, 1, "", "dmp_quo_ground"], [193, 3, 1, "", "dmp_rem"], [193, 3, 1, "", "dmp_rr_div"], [193, 3, 1, "", "dmp_sqr"], [193, 3, 1, "", "dmp_sub"], [193, 3, 1, "", "dmp_sub_ground"], [193, 3, 1, "", "dmp_sub_mul"], [193, 3, 1, "", "dmp_sub_term"], [193, 3, 1, "", "dup_lshift"], [193, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[193, 3, 1, "", "dmp_LC"], [193, 3, 1, "", "dmp_TC"], [193, 3, 1, "", "dmp_apply_pairs"], [193, 3, 1, "", "dmp_convert"], [193, 3, 1, "", "dmp_copy"], [193, 3, 1, "", "dmp_deflate"], [193, 3, 1, "", "dmp_degree"], [193, 3, 1, "", "dmp_degree_in"], [193, 3, 1, "", "dmp_degree_list"], [193, 3, 1, "", "dmp_eject"], [193, 3, 1, "", "dmp_exclude"], [193, 3, 1, "", "dmp_from_dict"], [193, 3, 1, "", "dmp_from_sympy"], [193, 3, 1, "", "dmp_ground"], [193, 3, 1, "", "dmp_ground_LC"], [193, 3, 1, "", "dmp_ground_TC"], [193, 3, 1, "", "dmp_ground_nth"], [193, 3, 1, "", "dmp_ground_p"], [193, 3, 1, "", "dmp_grounds"], [193, 3, 1, "", "dmp_include"], [193, 3, 1, "", "dmp_inflate"], [193, 3, 1, "", "dmp_inject"], [193, 3, 1, "", "dmp_list_terms"], [193, 3, 1, "", "dmp_multi_deflate"], [193, 3, 1, "", "dmp_negative_p"], [193, 3, 1, "", "dmp_nest"], [193, 3, 1, "", "dmp_normal"], [193, 3, 1, "", "dmp_nth"], [193, 3, 1, "", "dmp_one"], [193, 3, 1, "", "dmp_one_p"], [193, 3, 1, "", "dmp_permute"], [193, 3, 1, "", "dmp_positive_p"], [193, 3, 1, "", "dmp_raise"], [193, 3, 1, "", "dmp_slice"], [193, 3, 1, "", "dmp_strip"], [193, 3, 1, "", "dmp_swap"], [193, 3, 1, "", "dmp_terms_gcd"], [193, 3, 1, "", "dmp_to_dict"], [193, 3, 1, "", "dmp_to_tuple"], [193, 3, 1, "", "dmp_true_LT"], [193, 3, 1, "", "dmp_validate"], [193, 3, 1, "", "dmp_zero"], [193, 3, 1, "", "dmp_zero_p"], [193, 3, 1, "", "dmp_zeros"], [193, 3, 1, "", "dup_random"], [193, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[193, 3, 1, "", "dmp_clear_denoms"], [193, 3, 1, "", "dmp_compose"], [193, 3, 1, "", "dmp_diff"], [193, 3, 1, "", "dmp_diff_eval_in"], [193, 3, 1, "", "dmp_diff_in"], [193, 3, 1, "", "dmp_eval"], [193, 3, 1, "", "dmp_eval_in"], [193, 3, 1, "", "dmp_eval_tail"], [193, 3, 1, "", "dmp_ground_content"], [193, 3, 1, "", "dmp_ground_extract"], [193, 3, 1, "", "dmp_ground_monic"], [193, 3, 1, "", "dmp_ground_primitive"], [193, 3, 1, "", "dmp_ground_trunc"], [193, 3, 1, "", "dmp_integrate"], [193, 3, 1, "", "dmp_integrate_in"], [193, 3, 1, "", "dmp_lift"], [193, 3, 1, "", "dmp_revert"], [193, 3, 1, "", "dmp_trunc"], [193, 3, 1, "", "dup_content"], [193, 3, 1, "", "dup_decompose"], [193, 3, 1, "", "dup_extract"], [193, 3, 1, "", "dup_mirror"], [193, 3, 1, "", "dup_monic"], [193, 3, 1, "", "dup_primitive"], [193, 3, 1, "", "dup_real_imag"], [193, 3, 1, "", "dup_scale"], [193, 3, 1, "", "dup_shift"], [193, 3, 1, "", "dup_sign_variations"], [193, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[196, 3, 1, "", "dispersion"], [196, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[193, 3, 1, "", "sdm_LC"], [193, 3, 1, "", "sdm_LM"], [193, 3, 1, "", "sdm_LT"], [193, 3, 1, "", "sdm_add"], [193, 3, 1, "", "sdm_deg"], [193, 3, 1, "", "sdm_ecart"], [193, 3, 1, "", "sdm_from_dict"], [193, 3, 1, "", "sdm_from_vector"], [193, 3, 1, "", "sdm_groebner"], [193, 3, 1, "", "sdm_monomial_deg"], [193, 3, 1, "", "sdm_monomial_divides"], [193, 3, 1, "", "sdm_monomial_mul"], [193, 3, 1, "", "sdm_mul_term"], [193, 3, 1, "", "sdm_nf_mora"], [193, 3, 1, "", "sdm_spoly"], [193, 3, 1, "", "sdm_to_dict"], [193, 3, 1, "", "sdm_to_vector"], [193, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[191, 1, 1, "", "AlgebraicField"], [191, 1, 1, "", "ComplexField"], [191, 1, 1, "", "ExpressionDomain"], [191, 1, 1, "", "FiniteField"], [191, 1, 1, "", "FractionField"], [191, 1, 1, "", "GMPYFiniteField"], [191, 1, 1, "", "GMPYIntegerRing"], [191, 1, 1, "", "GMPYRationalField"], [191, 1, 1, "", "IntegerRing"], [191, 1, 1, "", "PolynomialRing"], [191, 1, 1, "", "PythonFiniteField"], [191, 1, 1, "", "PythonIntegerRing"], [191, 1, 1, "", "PythonRationalField"], [191, 1, 1, "", "RationalField"], [191, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[191, 2, 1, "", "algebraic_field"], [191, 2, 1, "", "denom"], [191, 2, 1, "", "discriminant"], [191, 5, 1, "", "dtype"], [191, 5, 1, "", "ext"], [191, 2, 1, "", "from_AlgebraicField"], [191, 2, 1, "", "from_GaussianIntegerRing"], [191, 2, 1, "", "from_GaussianRationalField"], [191, 2, 1, "", "from_QQ"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "integral_basis"], [191, 2, 1, "", "is_negative"], [191, 2, 1, "", "is_nonnegative"], [191, 2, 1, "", "is_nonpositive"], [191, 2, 1, "", "is_positive"], [191, 2, 1, "", "maximal_order"], [191, 5, 1, "", "mod"], [191, 2, 1, "", "numer"], [191, 5, 1, "", "orig_ext"], [191, 2, 1, "", "primes_above"], [191, 2, 1, "", "to_alg_num"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[191, 2, 1, "", "almosteq"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "get_exact"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "is_negative"], [191, 2, 1, "", "is_nonnegative"], [191, 2, 1, "", "is_nonpositive"], [191, 2, 1, "", "is_positive"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[191, 1, 1, "", "Expression"], [191, 2, 1, "", "denom"], [191, 5, 1, "", "dtype"], [191, 2, 1, "", "from_ExpressionDomain"], [191, 2, 1, "", "from_FractionField"], [191, 2, 1, "", "from_GaussianIntegerRing"], [191, 2, 1, "", "from_GaussianRationalField"], [191, 2, 1, "", "from_PolynomialRing"], [191, 2, 1, "", "from_QQ"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "get_field"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "is_negative"], [191, 2, 1, "", "is_nonnegative"], [191, 2, 1, "", "is_nonpositive"], [191, 2, 1, "", "is_positive"], [191, 2, 1, "", "numer"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[191, 2, 1, "", "characteristic"], [191, 2, 1, "", "from_FF"], [191, 2, 1, "", "from_FF_gmpy"], [191, 2, 1, "", "from_FF_python"], [191, 2, 1, "", "from_QQ"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "get_field"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[191, 2, 1, "", "denom"], [191, 2, 1, "", "factorial"], [191, 2, 1, "", "from_AlgebraicField"], [191, 2, 1, "", "from_ComplexField"], [191, 2, 1, "", "from_FractionField"], [191, 2, 1, "", "from_GaussianIntegerRing"], [191, 2, 1, "", "from_GaussianRationalField"], [191, 2, 1, "", "from_PolynomialRing"], [191, 2, 1, "", "from_QQ"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "is_negative"], [191, 2, 1, "", "is_nonnegative"], [191, 2, 1, "", "is_nonpositive"], [191, 2, 1, "", "is_positive"], [191, 2, 1, "", "numer"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[191, 2, 1, "", "factorial"], [191, 2, 1, "", "from_FF_gmpy"], [191, 2, 1, "", "from_FF_python"], [191, 2, 1, "", "from_QQ"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "gcdex"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "sqrt"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[191, 2, 1, "", "denom"], [191, 2, 1, "", "div"], [191, 2, 1, "", "exquo"], [191, 2, 1, "", "factorial"], [191, 2, 1, "", "from_GaussianRationalField"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "numer"], [191, 2, 1, "", "quo"], [191, 2, 1, "", "rem"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[191, 2, 1, "", "algebraic_field"], [191, 2, 1, "", "factorial"], [191, 2, 1, "", "from_AlgebraicField"], [191, 2, 1, "", "from_FF"], [191, 2, 1, "", "from_FF_gmpy"], [191, 2, 1, "", "from_FF_python"], [191, 2, 1, "", "from_QQ"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "gcdex"], [191, 2, 1, "", "get_field"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "log"], [191, 2, 1, "", "sqrt"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[191, 2, 1, "", "factorial"], [191, 2, 1, "", "from_AlgebraicField"], [191, 2, 1, "", "from_ComplexField"], [191, 2, 1, "", "from_FractionField"], [191, 2, 1, "", "from_GaussianIntegerRing"], [191, 2, 1, "", "from_GaussianRationalField"], [191, 2, 1, "", "from_GlobalPolynomialRing"], [191, 2, 1, "", "from_PolynomialRing"], [191, 2, 1, "", "from_QQ"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "gcdex"], [191, 2, 1, "", "get_field"], [191, 2, 1, "", "is_negative"], [191, 2, 1, "", "is_nonnegative"], [191, 2, 1, "", "is_nonpositive"], [191, 2, 1, "", "is_positive"], [191, 2, 1, "", "is_unit"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[191, 2, 1, "", "algebraic_field"], [191, 2, 1, "", "denom"], [191, 2, 1, "", "div"], [191, 2, 1, "", "exquo"], [191, 2, 1, "", "from_AlgebraicField"], [191, 2, 1, "", "from_GaussianRationalField"], [191, 2, 1, "", "from_QQ"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "numer"], [191, 2, 1, "", "quo"], [191, 2, 1, "", "rem"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[191, 2, 1, "", "almosteq"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "get_exact"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "to_rational"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[191, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[191, 2, 1, "", "drop"], [191, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[191, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[191, 2, 1, "", "abs"], [191, 2, 1, "", "add"], [191, 2, 1, "", "alg_field_from_poly"], [191, 2, 1, "", "algebraic_field"], [191, 2, 1, "", "almosteq"], [191, 2, 1, "", "characteristic"], [191, 2, 1, "", "cofactors"], [191, 2, 1, "", "convert"], [191, 2, 1, "", "convert_from"], [191, 2, 1, "", "cyclotomic_field"], [191, 2, 1, "", "denom"], [191, 2, 1, "", "div"], [191, 2, 1, "", "drop"], [191, 5, 1, "", "dtype"], [191, 2, 1, "", "evalf"], [191, 2, 1, "", "exquo"], [191, 2, 1, "", "frac_field"], [191, 2, 1, "", "from_AlgebraicField"], [191, 2, 1, "", "from_ComplexField"], [191, 2, 1, "", "from_ExpressionDomain"], [191, 2, 1, "", "from_ExpressionRawDomain"], [191, 2, 1, "", "from_FF"], [191, 2, 1, "", "from_FF_gmpy"], [191, 2, 1, "", "from_FF_python"], [191, 2, 1, "", "from_FractionField"], [191, 2, 1, "", "from_GlobalPolynomialRing"], [191, 2, 1, "", "from_MonogenicFiniteExtension"], [191, 2, 1, "", "from_PolynomialRing"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_RealField"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "gcdex"], [191, 2, 1, "", "get_exact"], [191, 2, 1, "", "get_field"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "half_gcdex"], [191, 5, 1, "", "has_assoc_Field"], [191, 5, 1, "", "has_assoc_Ring"], [191, 2, 1, "", "inject"], [191, 2, 1, "", "invert"], [191, 5, 1, "", "is_Field"], [191, 5, 1, "", "is_PID"], [191, 5, 1, "", "is_Ring"], [191, 2, 1, "", "is_negative"], [191, 2, 1, "", "is_nonnegative"], [191, 2, 1, "", "is_nonpositive"], [191, 2, 1, "", "is_one"], [191, 2, 1, "", "is_positive"], [191, 2, 1, "", "is_zero"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "log"], [191, 2, 1, "", "map"], [191, 2, 1, "", "mul"], [191, 2, 1, "", "n"], [191, 2, 1, "", "neg"], [191, 2, 1, "", "numer"], [191, 2, 1, "", "of_type"], [191, 2, 1, "", "old_frac_field"], [191, 2, 1, "", "old_poly_ring"], [191, 5, 1, "", "one"], [191, 2, 1, "", "poly_ring"], [191, 2, 1, "", "pos"], [191, 2, 1, "", "pow"], [191, 2, 1, "", "quo"], [191, 2, 1, "", "rem"], [191, 2, 1, "", "revert"], [191, 2, 1, "", "sqrt"], [191, 2, 1, "", "sub"], [191, 2, 1, "", "to_sympy"], [191, 4, 1, "", "tp"], [191, 2, 1, "", "unify"], [191, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[191, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[191, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[191, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[191, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[191, 2, 1, "", "div"], [191, 2, 1, "", "exquo"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "get_field"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "is_unit"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "quo"], [191, 2, 1, "", "rem"], [191, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[191, 1, 1, "", "GaussianDomain"], [191, 1, 1, "", "GaussianElement"], [191, 1, 1, "", "GaussianInteger"], [191, 1, 1, "", "GaussianIntegerRing"], [191, 1, 1, "", "GaussianRational"], [191, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[191, 2, 1, "", "from_AlgebraicField"], [191, 2, 1, "", "from_QQ"], [191, 2, 1, "", "from_QQ_gmpy"], [191, 2, 1, "", "from_QQ_python"], [191, 2, 1, "", "from_ZZ"], [191, 2, 1, "", "from_ZZ_gmpy"], [191, 2, 1, "", "from_ZZ_python"], [191, 2, 1, "", "from_sympy"], [191, 2, 1, "", "inject"], [191, 2, 1, "", "is_negative"], [191, 2, 1, "", "is_nonnegative"], [191, 2, 1, "", "is_nonpositive"], [191, 2, 1, "", "is_positive"], [191, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[191, 2, 1, "", "new"], [191, 2, 1, "", "parent"], [191, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[191, 5, 1, "", "dtype"], [191, 2, 1, "", "from_GaussianIntegerRing"], [191, 2, 1, "", "from_GaussianRationalField"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "get_field"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[191, 2, 1, "", "as_AlgebraicField"], [191, 2, 1, "", "denom"], [191, 5, 1, "", "dtype"], [191, 2, 1, "", "from_GaussianIntegerRing"], [191, 2, 1, "", "from_GaussianRationalField"], [191, 2, 1, "", "get_field"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[191, 1, 1, "", "ComplexElement"], [191, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[191, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[191, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[191, 2, 1, "", "denom"], [191, 2, 1, "", "div"], [191, 2, 1, "", "exquo"], [191, 2, 1, "", "free_module"], [191, 2, 1, "", "get_ring"], [191, 2, 1, "", "ideal"], [191, 2, 1, "", "invert"], [191, 2, 1, "", "numer"], [191, 2, 1, "", "quo"], [191, 2, 1, "", "quotient_ring"], [191, 2, 1, "", "rem"], [191, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[191, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[191, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[193, 3, 1, "", "dmp_cancel"], [193, 3, 1, "", "dmp_content"], [193, 3, 1, "", "dmp_discriminant"], [193, 3, 1, "", "dmp_euclidean_prs"], [193, 3, 1, "", "dmp_ff_prs_gcd"], [193, 3, 1, "", "dmp_gcd"], [193, 3, 1, "", "dmp_gcdex"], [193, 3, 1, "", "dmp_half_gcdex"], [193, 3, 1, "", "dmp_inner_gcd"], [193, 3, 1, "", "dmp_inner_subresultants"], [193, 3, 1, "", "dmp_invert"], [193, 3, 1, "", "dmp_lcm"], [193, 3, 1, "", "dmp_primitive"], [193, 3, 1, "", "dmp_primitive_prs"], [193, 3, 1, "", "dmp_prs_resultant"], [193, 3, 1, "", "dmp_qq_collins_resultant"], [193, 3, 1, "", "dmp_qq_heu_gcd"], [193, 3, 1, "", "dmp_resultant"], [193, 3, 1, "", "dmp_rr_prs_gcd"], [193, 3, 1, "", "dmp_subresultants"], [193, 3, 1, "", "dmp_zz_collins_resultant"], [193, 3, 1, "", "dmp_zz_heu_gcd"], [193, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[193, 3, 1, "", "dmp_ext_factor"], [193, 3, 1, "", "dmp_factor_list"], [193, 3, 1, "", "dmp_factor_list_include"], [193, 3, 1, "", "dmp_irreducible_p"], [193, 3, 1, "", "dmp_trial_division"], [193, 3, 1, "", "dmp_zz_diophantine"], [193, 3, 1, "", "dmp_zz_factor"], [193, 3, 1, "", "dmp_zz_mignotte_bound"], [193, 3, 1, "", "dmp_zz_wang"], [193, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [193, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [193, 3, 1, "", "dmp_zz_wang_non_divisors"], [193, 3, 1, "", "dmp_zz_wang_test_points"], [193, 3, 1, "", "dup_cyclotomic_p"], [193, 3, 1, "", "dup_gf_factor"], [193, 3, 1, "", "dup_zz_cyclotomic_factor"], [193, 3, 1, "", "dup_zz_cyclotomic_poly"], [193, 3, 1, "", "dup_zz_factor"], [193, 3, 1, "", "dup_zz_factor_sqf"], [193, 3, 1, "", "dup_zz_hensel_lift"], [193, 3, 1, "", "dup_zz_hensel_step"], [193, 3, 1, "", "dup_zz_irreducible_p"], [193, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[193, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[191, 1, 1, "", "FracElement"], [191, 1, 1, "", "FracField"], [191, 3, 1, "", "field"], [191, 3, 1, "", "sfield"], [191, 3, 1, "", "vfield"], [191, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[191, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[193, 3, 1, "", "gf_LC"], [193, 3, 1, "", "gf_Qbasis"], [193, 3, 1, "", "gf_Qmatrix"], [193, 3, 1, "", "gf_TC"], [193, 3, 1, "", "gf_add"], [193, 3, 1, "", "gf_add_ground"], [193, 3, 1, "", "gf_add_mul"], [193, 3, 1, "", "gf_berlekamp"], [193, 3, 1, "", "gf_cofactors"], [193, 3, 1, "", "gf_compose"], [193, 3, 1, "", "gf_compose_mod"], [193, 3, 1, "", "gf_crt"], [193, 3, 1, "", "gf_crt1"], [193, 3, 1, "", "gf_crt2"], [193, 3, 1, "", "gf_csolve"], [193, 3, 1, "", "gf_degree"], [193, 3, 1, "", "gf_diff"], [193, 3, 1, "", "gf_div"], [193, 3, 1, "", "gf_eval"], [193, 3, 1, "", "gf_expand"], [193, 3, 1, "", "gf_exquo"], [193, 3, 1, "", "gf_factor"], [193, 3, 1, "", "gf_factor_sqf"], [193, 3, 1, "", "gf_from_dict"], [193, 3, 1, "", "gf_from_int_poly"], [193, 3, 1, "", "gf_gcd"], [193, 3, 1, "", "gf_gcdex"], [193, 3, 1, "", "gf_int"], [193, 3, 1, "", "gf_irreducible"], [193, 3, 1, "", "gf_irreducible_p"], [193, 3, 1, "", "gf_lcm"], [193, 3, 1, "", "gf_lshift"], [193, 3, 1, "", "gf_monic"], [193, 3, 1, "", "gf_mul"], [193, 3, 1, "", "gf_mul_ground"], [193, 3, 1, "", "gf_multi_eval"], [193, 3, 1, "", "gf_neg"], [193, 3, 1, "", "gf_normal"], [193, 3, 1, "", "gf_pow"], [193, 3, 1, "", "gf_pow_mod"], [193, 3, 1, "", "gf_quo"], [193, 3, 1, "", "gf_quo_ground"], [193, 3, 1, "", "gf_random"], [193, 3, 1, "", "gf_rem"], [193, 3, 1, "", "gf_rshift"], [193, 3, 1, "", "gf_shoup"], [193, 3, 1, "", "gf_sqf_list"], [193, 3, 1, "", "gf_sqf_p"], [193, 3, 1, "", "gf_sqf_part"], [193, 3, 1, "", "gf_sqr"], [193, 3, 1, "", "gf_strip"], [193, 3, 1, "", "gf_sub"], [193, 3, 1, "", "gf_sub_ground"], [193, 3, 1, "", "gf_sub_mul"], [193, 3, 1, "", "gf_to_dict"], [193, 3, 1, "", "gf_to_int_poly"], [193, 3, 1, "", "gf_trace_map"], [193, 3, 1, "", "gf_trunc"], [193, 3, 1, "", "gf_value"], [193, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[193, 3, 1, "", "groebner"], [193, 3, 1, "", "is_groebner"], [193, 3, 1, "", "is_minimal"], [193, 3, 1, "", "is_reduced"], [193, 3, 1, "", "red_groebner"], [193, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[189, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[189, 2, 1, "", "add"], [189, 2, 1, "", "charpoly"], [189, 2, 1, "", "det"], [189, 2, 1, "", "hstack"], [189, 2, 1, "", "inv"], [189, 2, 1, "", "is_lower"], [189, 2, 1, "", "is_upper"], [189, 2, 1, "", "is_zero_matrix"], [189, 2, 1, "", "lu"], [189, 2, 1, "", "lu_solve"], [189, 2, 1, "", "matmul"], [189, 2, 1, "", "neg"], [189, 2, 1, "", "rref"], [189, 2, 1, "", "scc"], [189, 2, 1, "", "sub"], [189, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[189, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[189, 2, 1, "", "add"], [189, 2, 1, "", "charpoly"], [189, 2, 1, "", "columnspace"], [189, 2, 1, "", "convert_to"], [189, 2, 1, "", "det"], [189, 2, 1, "", "diag"], [189, 2, 1, "", "eye"], [189, 2, 1, "", "from_Matrix"], [189, 2, 1, "", "from_dict_sympy"], [189, 2, 1, "", "from_list"], [189, 2, 1, "", "from_list_sympy"], [189, 2, 1, "", "from_rep"], [189, 2, 1, "", "hstack"], [189, 2, 1, "", "inv"], [189, 4, 1, "", "is_lower"], [189, 4, 1, "", "is_upper"], [189, 2, 1, "", "lu"], [189, 2, 1, "", "lu_solve"], [189, 2, 1, "", "matmul"], [189, 2, 1, "", "mul"], [189, 2, 1, "", "neg"], [189, 2, 1, "", "nullspace"], [189, 2, 1, "", "ones"], [189, 2, 1, "", "pow"], [189, 2, 1, "", "rowspace"], [189, 2, 1, "", "rref"], [189, 2, 1, "", "scc"], [189, 2, 1, "", "sub"], [189, 2, 1, "", "to_Matrix"], [189, 2, 1, "", "to_dense"], [189, 2, 1, "", "to_field"], [189, 2, 1, "", "to_sparse"], [189, 2, 1, "", "transpose"], [189, 2, 1, "", "unify"], [189, 2, 1, "", "vstack"], [189, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[189, 3, 1, "", "hermite_normal_form"], [189, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[189, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[189, 2, 1, "", "add"], [189, 2, 1, "", "charpoly"], [189, 2, 1, "", "convert_to"], [189, 2, 1, "", "copy"], [189, 2, 1, "", "det"], [189, 2, 1, "", "eye"], [189, 2, 1, "", "from_ddm"], [189, 2, 1, "", "from_list"], [189, 2, 1, "", "hstack"], [189, 2, 1, "", "inv"], [189, 2, 1, "", "is_lower"], [189, 2, 1, "", "is_upper"], [189, 2, 1, "", "is_zero_matrix"], [189, 2, 1, "", "lu"], [189, 2, 1, "", "lu_solve"], [189, 2, 1, "", "matmul"], [189, 2, 1, "", "mul"], [189, 2, 1, "", "neg"], [189, 2, 1, "", "new"], [189, 2, 1, "", "nullspace"], [189, 2, 1, "", "rref"], [189, 2, 1, "", "scc"], [189, 2, 1, "", "sub"], [189, 2, 1, "", "to_ddm"], [189, 2, 1, "", "to_list"], [189, 2, 1, "", "transpose"], [189, 2, 1, "", "vstack"], [189, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[193, 3, 1, "", "_modgcd_multivariate_p"], [193, 3, 1, "", "func_field_modgcd"], [193, 3, 1, "", "modgcd_bivariate"], [193, 3, 1, "", "modgcd_multivariate"], [193, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[196, 1, 1, "", "Monomial"], [196, 3, 1, "", "itermonomials"], [196, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[196, 2, 1, "", "as_expr"], [196, 2, 1, "", "gcd"], [196, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[195, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[195, 3, 1, "", "minimal_polynomial"], [195, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[195, 0, 0, "-", "modules"], [195, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[195, 1, 1, "", "EndomorphismRing"], [195, 1, 1, "", "InnerEndomorphism"], [195, 1, 1, "", "Module"], [195, 1, 1, "", "ModuleElement"], [195, 1, 1, "", "ModuleEndomorphism"], [195, 1, 1, "", "ModuleHomomorphism"], [195, 1, 1, "", "PowerBasis"], [195, 1, 1, "", "PowerBasisElement"], [195, 1, 1, "", "Submodule"], [195, 3, 1, "", "find_min_poly"], [195, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "inner_endomorphism"], [195, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[195, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[195, 2, 1, "", "__call__"], [195, 2, 1, "", "ancestors"], [195, 2, 1, "", "basis_elements"], [195, 2, 1, "", "element_from_rational"], [195, 2, 1, "", "endomorphism_ring"], [195, 2, 1, "", "is_compat_col"], [195, 2, 1, "", "mult_tab"], [195, 4, 1, "", "n"], [195, 2, 1, "", "nearest_common_ancestor"], [195, 4, 1, "", "number_field"], [195, 2, 1, "", "one"], [195, 4, 1, "", "parent"], [195, 2, 1, "", "power_basis_ancestor"], [195, 2, 1, "", "represent"], [195, 2, 1, "", "starts_with_unity"], [195, 2, 1, "", "submodule_from_gens"], [195, 2, 1, "", "submodule_from_matrix"], [195, 2, 1, "", "whole_submodule"], [195, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[195, 4, 1, "", "QQ_col"], [195, 2, 1, "", "__add__"], [195, 2, 1, "", "__init__"], [195, 2, 1, "", "__mod__"], [195, 2, 1, "", "__mul__"], [195, 2, 1, "", "column"], [195, 2, 1, "", "equiv"], [195, 2, 1, "", "from_int_list"], [195, 2, 1, "", "is_compat"], [195, 4, 1, "", "n"], [195, 2, 1, "", "over_power_basis"], [195, 2, 1, "", "reduced"], [195, 2, 1, "", "reduced_mod_p"], [195, 2, 1, "", "to_ancestor"], [195, 2, 1, "", "to_parent"], [195, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[195, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "kernel"], [195, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "element_from_ANP"], [195, 2, 1, "", "element_from_alg_num"], [195, 2, 1, "", "element_from_poly"], [195, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[195, 4, 1, "", "T"], [195, 2, 1, "", "as_expr"], [195, 4, 1, "", "generator"], [195, 4, 1, "", "is_rational"], [195, 2, 1, "", "norm"], [195, 2, 1, "", "numerator"], [195, 2, 1, "", "poly"], [195, 2, 1, "", "to_ANP"], [195, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[195, 4, 1, "", "QQ_matrix"], [195, 2, 1, "", "__init__"], [195, 2, 1, "", "add"], [195, 2, 1, "", "basis_element_pullbacks"], [195, 2, 1, "", "discard_before"], [195, 2, 1, "", "mul"], [195, 2, 1, "", "reduce_element"], [195, 2, 1, "", "reduced"], [195, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[195, 1, 1, "", "PrimeIdeal"], [195, 3, 1, "", "prime_decomp"], [195, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[195, 2, 1, "", "__add__"], [195, 2, 1, "", "__init__"], [195, 2, 1, "", "__mul__"], [195, 2, 1, "", "as_submodule"], [195, 4, 1, "", "is_inert"], [195, 2, 1, "", "reduce_ANP"], [195, 2, 1, "", "reduce_alg_num"], [195, 2, 1, "", "reduce_element"], [195, 2, 1, "", "repr"], [195, 2, 1, "", "test_factor"], [195, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[195, 3, 1, "", "field_isomorphism"], [195, 3, 1, "", "primitive_element"], [195, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[195, 1, 1, "", "AlgIntPowers"], [195, 3, 1, "", "coeff_search"], [195, 3, 1, "", "extract_fundamental_discriminant"], [195, 3, 1, "", "get_num_denom"], [195, 3, 1, "", "is_int"], [195, 3, 1, "", "is_rat"], [195, 3, 1, "", "isolate"], [195, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[195, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[196, 1, 1, "", "GradedLexOrder"], [196, 1, 1, "", "LexOrder"], [196, 1, 1, "", "MonomialOrder"], [196, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[196, 3, 1, "", "chebyshevt_poly"], [196, 3, 1, "", "chebyshevu_poly"], [196, 3, 1, "", "gegenbauer_poly"], [196, 3, 1, "", "hermite_poly"], [196, 3, 1, "", "jacobi_poly"], [196, 3, 1, "", "laguerre_poly"], [196, 3, 1, "", "legendre_poly"], [196, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[196, 3, 1, "", "apart"], [196, 3, 1, "", "apart_list"], [196, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[191, 1, 1, "", "ANP"], [191, 1, 1, "", "DMF"], [191, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[191, 2, 1, "", "LC"], [191, 2, 1, "", "TC"], [191, 4, 1, "", "is_ground"], [191, 4, 1, "", "is_one"], [191, 4, 1, "", "is_zero"], [191, 2, 1, "", "pow"], [191, 2, 1, "", "to_dict"], [191, 2, 1, "", "to_list"], [191, 2, 1, "", "to_sympy_dict"], [191, 2, 1, "", "to_sympy_list"], [191, 2, 1, "", "to_tuple"], [191, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[191, 2, 1, "", "add"], [191, 2, 1, "", "cancel"], [191, 2, 1, "", "denom"], [191, 2, 1, "", "exquo"], [191, 2, 1, "", "frac_unify"], [191, 2, 1, "", "half_per"], [191, 2, 1, "", "invert"], [191, 4, 1, "", "is_one"], [191, 4, 1, "", "is_zero"], [191, 2, 1, "", "mul"], [191, 2, 1, "", "neg"], [191, 2, 1, "", "numer"], [191, 2, 1, "", "per"], [191, 2, 1, "", "poly_unify"], [191, 2, 1, "", "pow"], [191, 2, 1, "", "quo"], [191, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[191, 2, 1, "", "LC"], [191, 2, 1, "", "TC"], [191, 2, 1, "", "abs"], [191, 2, 1, "", "add"], [191, 2, 1, "", "add_ground"], [191, 2, 1, "", "all_coeffs"], [191, 2, 1, "", "all_monoms"], [191, 2, 1, "", "all_terms"], [191, 2, 1, "", "cancel"], [191, 2, 1, "", "cauchy_lower_bound"], [191, 2, 1, "", "cauchy_upper_bound"], [191, 2, 1, "", "clear_denoms"], [191, 2, 1, "", "coeffs"], [191, 2, 1, "", "cofactors"], [191, 2, 1, "", "compose"], [191, 2, 1, "", "content"], [191, 2, 1, "", "convert"], [191, 2, 1, "", "count_complex_roots"], [191, 2, 1, "", "count_real_roots"], [191, 2, 1, "", "decompose"], [191, 2, 1, "", "deflate"], [191, 2, 1, "", "degree"], [191, 2, 1, "", "degree_list"], [191, 2, 1, "", "diff"], [191, 2, 1, "", "discriminant"], [191, 2, 1, "", "div"], [191, 2, 1, "", "eject"], [191, 2, 1, "", "eval"], [191, 2, 1, "", "exclude"], [191, 2, 1, "", "exquo"], [191, 2, 1, "", "exquo_ground"], [191, 2, 1, "", "factor_list"], [191, 2, 1, "", "factor_list_include"], [191, 2, 1, "", "from_dict"], [191, 2, 1, "", "from_list"], [191, 2, 1, "", "from_sympy_list"], [191, 2, 1, "", "gcd"], [191, 2, 1, "", "gcdex"], [191, 2, 1, "", "gff_list"], [191, 2, 1, "", "half_gcdex"], [191, 2, 1, "", "homogeneous_order"], [191, 2, 1, "", "homogenize"], [191, 2, 1, "", "inject"], [191, 2, 1, "", "integrate"], [191, 2, 1, "", "intervals"], [191, 2, 1, "", "invert"], [191, 4, 1, "", "is_cyclotomic"], [191, 4, 1, "", "is_ground"], [191, 4, 1, "", "is_homogeneous"], [191, 4, 1, "", "is_irreducible"], [191, 4, 1, "", "is_linear"], [191, 4, 1, "", "is_monic"], [191, 4, 1, "", "is_monomial"], [191, 4, 1, "", "is_one"], [191, 4, 1, "", "is_primitive"], [191, 4, 1, "", "is_quadratic"], [191, 4, 1, "", "is_sqf"], [191, 4, 1, "", "is_zero"], [191, 2, 1, "", "l1_norm"], [191, 2, 1, "", "l2_norm_squared"], [191, 2, 1, "", "lcm"], [191, 2, 1, "", "lift"], [191, 2, 1, "", "max_norm"], [191, 2, 1, "", "mignotte_sep_bound_squared"], [191, 2, 1, "", "monic"], [191, 2, 1, "", "monoms"], [191, 2, 1, "", "mul"], [191, 2, 1, "", "mul_ground"], [191, 2, 1, "", "neg"], [191, 2, 1, "", "norm"], [191, 2, 1, "", "nth"], [191, 2, 1, "", "pdiv"], [191, 2, 1, "", "per"], [191, 2, 1, "", "permute"], [191, 2, 1, "", "pexquo"], [191, 2, 1, "", "pow"], [191, 2, 1, "", "pquo"], [191, 2, 1, "", "prem"], [191, 2, 1, "", "primitive"], [191, 2, 1, "", "quo"], [191, 2, 1, "", "quo_ground"], [191, 2, 1, "", "refine_root"], [191, 2, 1, "", "rem"], [191, 2, 1, "", "resultant"], [191, 2, 1, "", "revert"], [191, 2, 1, "", "shift"], [191, 2, 1, "", "slice"], [191, 2, 1, "", "sqf_list"], [191, 2, 1, "", "sqf_list_include"], [191, 2, 1, "", "sqf_norm"], [191, 2, 1, "", "sqf_part"], [191, 2, 1, "", "sqr"], [191, 2, 1, "", "sturm"], [191, 2, 1, "", "sub"], [191, 2, 1, "", "sub_ground"], [191, 2, 1, "", "subresultants"], [191, 2, 1, "", "terms"], [191, 2, 1, "", "terms_gcd"], [191, 2, 1, "", "to_dict"], [191, 2, 1, "", "to_exact"], [191, 2, 1, "", "to_field"], [191, 2, 1, "", "to_list"], [191, 2, 1, "", "to_ring"], [191, 2, 1, "", "to_sympy_dict"], [191, 2, 1, "", "to_sympy_list"], [191, 2, 1, "", "to_tuple"], [191, 2, 1, "", "total_degree"], [191, 2, 1, "", "transform"], [191, 2, 1, "", "trunc"], [191, 2, 1, "", "unify"]], "sympy.polys": [[193, 0, 0, "-", "polyconfig"], [193, 0, 0, "-", "polyoptions"], [198, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[193, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[193, 1, 1, "", "BasePolynomialError"], [193, 1, 1, "", "CoercionFailed"], [193, 1, 1, "", "ComputationFailed"], [193, 1, 1, "", "DomainError"], [193, 1, 1, "", "EvaluationFailed"], [193, 1, 1, "", "ExactQuotientFailed"], [193, 1, 1, "", "ExtraneousFactors"], [193, 1, 1, "", "FlagError"], [193, 1, 1, "", "GeneratorsError"], [193, 1, 1, "", "GeneratorsNeeded"], [193, 1, 1, "", "HeuristicGCDFailed"], [193, 1, 1, "", "HomomorphismFailed"], [193, 1, 1, "", "IsomorphismFailed"], [193, 1, 1, "", "MultivariatePolynomialError"], [193, 1, 1, "", "NotAlgebraic"], [193, 1, 1, "", "NotInvertible"], [193, 1, 1, "", "NotReversible"], [193, 1, 1, "", "OperationNotSupported"], [193, 1, 1, "", "OptionError"], [193, 1, 1, "", "PolificationFailed"], [193, 1, 1, "", "PolynomialError"], [193, 1, 1, "", "RefinementFailed"], [193, 1, 1, "", "UnificationFailed"], [193, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[196, 3, 1, "", "horner"], [196, 3, 1, "", "interpolate"], [196, 3, 1, "", "symmetrize"], [196, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[193, 1, 1, "", "Options"], [193, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[193, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[196, 3, 1, "", "roots"]], "sympy.polys.polytools": [[196, 1, 1, "", "GroebnerBasis"], [196, 3, 1, "", "LC"], [196, 3, 1, "", "LM"], [196, 3, 1, "", "LT"], [196, 1, 1, "", "Poly"], [196, 1, 1, "", "PurePoly"], [196, 3, 1, "", "cancel"], [196, 3, 1, "", "cofactors"], [196, 3, 1, "", "compose"], [196, 3, 1, "", "content"], [196, 3, 1, "", "count_roots"], [196, 3, 1, "", "decompose"], [196, 3, 1, "", "degree"], [196, 3, 1, "", "degree_list"], [196, 3, 1, "", "discriminant"], [196, 3, 1, "", "div"], [196, 3, 1, "", "exquo"], [196, 3, 1, "", "factor"], [196, 3, 1, "", "factor_list"], [196, 3, 1, "", "gcd"], [196, 3, 1, "", "gcd_list"], [196, 3, 1, "", "gcdex"], [196, 3, 1, "", "gff"], [196, 3, 1, "", "gff_list"], [196, 3, 1, "", "groebner"], [196, 3, 1, "", "ground_roots"], [196, 3, 1, "", "half_gcdex"], [196, 3, 1, "", "intervals"], [196, 3, 1, "", "invert"], [196, 3, 1, "", "is_zero_dimensional"], [196, 3, 1, "", "lcm"], [196, 3, 1, "", "lcm_list"], [196, 3, 1, "", "monic"], [196, 3, 1, "", "nroots"], [196, 3, 1, "", "nth_power_roots_poly"], [196, 3, 1, "", "parallel_poly_from_expr"], [196, 3, 1, "", "pdiv"], [196, 3, 1, "", "pexquo"], [196, 3, 1, "", "poly"], [196, 3, 1, "", "poly_from_expr"], [196, 3, 1, "", "pquo"], [196, 3, 1, "", "prem"], [196, 3, 1, "", "primitive"], [196, 3, 1, "", "quo"], [196, 3, 1, "", "real_roots"], [196, 3, 1, "", "reduced"], [196, 3, 1, "", "refine_root"], [196, 3, 1, "", "rem"], [196, 3, 1, "", "resultant"], [196, 3, 1, "", "sqf"], [196, 3, 1, "", "sqf_list"], [196, 3, 1, "", "sqf_norm"], [196, 3, 1, "", "sqf_part"], [196, 3, 1, "", "sturm"], [196, 3, 1, "", "subresultants"], [196, 3, 1, "", "terms_gcd"], [196, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[196, 2, 1, "", "contains"], [196, 2, 1, "", "fglm"], [196, 4, 1, "", "is_zero_dimensional"], [196, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[196, 2, 1, "", "EC"], [196, 2, 1, "", "EM"], [196, 2, 1, "", "ET"], [196, 2, 1, "", "LC"], [196, 2, 1, "", "LM"], [196, 2, 1, "", "LT"], [196, 2, 1, "", "TC"], [196, 2, 1, "", "abs"], [196, 2, 1, "", "add"], [196, 2, 1, "", "add_ground"], [196, 2, 1, "", "all_coeffs"], [196, 2, 1, "", "all_monoms"], [196, 2, 1, "", "all_roots"], [196, 2, 1, "", "all_terms"], [196, 2, 1, "", "as_dict"], [196, 2, 1, "", "as_expr"], [196, 2, 1, "", "as_list"], [196, 2, 1, "", "as_poly"], [196, 2, 1, "", "cancel"], [196, 2, 1, "", "clear_denoms"], [196, 2, 1, "", "coeff_monomial"], [196, 2, 1, "", "coeffs"], [196, 2, 1, "", "cofactors"], [196, 2, 1, "", "compose"], [196, 2, 1, "", "content"], [196, 2, 1, "", "count_roots"], [196, 2, 1, "", "decompose"], [196, 2, 1, "", "deflate"], [196, 2, 1, "", "degree"], [196, 2, 1, "", "degree_list"], [196, 2, 1, "", "diff"], [196, 2, 1, "", "discriminant"], [196, 2, 1, "", "dispersion"], [196, 2, 1, "", "dispersionset"], [196, 2, 1, "", "div"], [196, 4, 1, "", "domain"], [196, 2, 1, "", "eject"], [196, 2, 1, "", "eval"], [196, 2, 1, "", "exclude"], [196, 2, 1, "", "exquo"], [196, 2, 1, "", "exquo_ground"], [196, 2, 1, "", "factor_list"], [196, 2, 1, "", "factor_list_include"], [196, 4, 1, "", "free_symbols"], [196, 4, 1, "", "free_symbols_in_domain"], [196, 2, 1, "", "from_dict"], [196, 2, 1, "", "from_expr"], [196, 2, 1, "", "from_list"], [196, 2, 1, "", "from_poly"], [196, 2, 1, "", "gcd"], [196, 2, 1, "", "gcdex"], [196, 4, 1, "", "gen"], [196, 2, 1, "", "get_domain"], [196, 2, 1, "", "get_modulus"], [196, 2, 1, "", "gff_list"], [196, 2, 1, "", "ground_roots"], [196, 2, 1, "", "half_gcdex"], [196, 2, 1, "", "has_only_gens"], [196, 2, 1, "", "homogeneous_order"], [196, 2, 1, "", "homogenize"], [196, 2, 1, "", "inject"], [196, 2, 1, "", "integrate"], [196, 2, 1, "", "intervals"], [196, 2, 1, "", "invert"], [196, 4, 1, "", "is_cyclotomic"], [196, 4, 1, "", "is_ground"], [196, 4, 1, "", "is_homogeneous"], [196, 4, 1, "", "is_irreducible"], [196, 4, 1, "", "is_linear"], [196, 4, 1, "", "is_monic"], [196, 4, 1, "", "is_monomial"], [196, 4, 1, "", "is_multivariate"], [196, 4, 1, "", "is_one"], [196, 4, 1, "", "is_primitive"], [196, 4, 1, "", "is_quadratic"], [196, 4, 1, "", "is_sqf"], [196, 4, 1, "", "is_univariate"], [196, 4, 1, "", "is_zero"], [196, 2, 1, "", "l1_norm"], [196, 2, 1, "", "lcm"], [196, 2, 1, "", "length"], [196, 2, 1, "", "lift"], [196, 2, 1, "", "ltrim"], [196, 2, 1, "", "match"], [196, 2, 1, "", "max_norm"], [196, 2, 1, "", "monic"], [196, 2, 1, "", "monoms"], [196, 2, 1, "", "mul"], [196, 2, 1, "", "mul_ground"], [196, 2, 1, "", "neg"], [196, 2, 1, "", "new"], [196, 2, 1, "", "norm"], [196, 2, 1, "", "nroots"], [196, 2, 1, "", "nth"], [196, 2, 1, "", "nth_power_roots_poly"], [196, 4, 1, "", "one"], [196, 2, 1, "", "pdiv"], [196, 2, 1, "", "per"], [196, 2, 1, "", "pexquo"], [196, 2, 1, "", "pow"], [196, 2, 1, "", "pquo"], [196, 2, 1, "", "prem"], [196, 2, 1, "", "primitive"], [196, 2, 1, "", "quo"], [196, 2, 1, "", "quo_ground"], [196, 2, 1, "", "rat_clear_denoms"], [196, 2, 1, "", "real_roots"], [196, 2, 1, "", "refine_root"], [196, 2, 1, "", "rem"], [196, 2, 1, "", "reorder"], [196, 2, 1, "", "replace"], [196, 2, 1, "", "resultant"], [196, 2, 1, "", "retract"], [196, 2, 1, "", "revert"], [196, 2, 1, "", "root"], [196, 2, 1, "", "same_root"], [196, 2, 1, "", "set_domain"], [196, 2, 1, "", "set_modulus"], [196, 2, 1, "", "shift"], [196, 2, 1, "", "slice"], [196, 2, 1, "", "sqf_list"], [196, 2, 1, "", "sqf_list_include"], [196, 2, 1, "", "sqf_norm"], [196, 2, 1, "", "sqf_part"], [196, 2, 1, "", "sqr"], [196, 2, 1, "", "sturm"], [196, 2, 1, "", "sub"], [196, 2, 1, "", "sub_ground"], [196, 2, 1, "", "subresultants"], [196, 2, 1, "", "terms"], [196, 2, 1, "", "terms_gcd"], [196, 2, 1, "", "termwise"], [196, 2, 1, "", "to_exact"], [196, 2, 1, "", "to_field"], [196, 2, 1, "", "to_ring"], [196, 2, 1, "", "total_degree"], [196, 2, 1, "", "transform"], [196, 2, 1, "", "trunc"], [196, 2, 1, "", "unify"], [196, 4, 1, "", "unit"], [196, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[196, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[196, 3, 1, "", "together"]], "sympy.polys.ring_series": [[197, 3, 1, "", "_tan1"], [197, 3, 1, "", "mul_xin"], [197, 3, 1, "", "pow_xin"], [197, 3, 1, "", "rs_LambertW"], [197, 3, 1, "", "rs_asin"], [197, 3, 1, "", "rs_atan"], [197, 3, 1, "", "rs_atanh"], [197, 3, 1, "", "rs_compose_add"], [197, 3, 1, "", "rs_cos"], [197, 3, 1, "", "rs_cos_sin"], [197, 3, 1, "", "rs_cosh"], [197, 3, 1, "", "rs_cot"], [197, 3, 1, "", "rs_diff"], [197, 3, 1, "", "rs_exp"], [197, 3, 1, "", "rs_fun"], [197, 3, 1, "", "rs_hadamard_exp"], [197, 3, 1, "", "rs_integrate"], [197, 3, 1, "", "rs_is_puiseux"], [197, 3, 1, "", "rs_log"], [197, 3, 1, "", "rs_mul"], [197, 3, 1, "", "rs_newton"], [197, 3, 1, "", "rs_nth_root"], [197, 3, 1, "", "rs_pow"], [197, 3, 1, "", "rs_puiseux"], [197, 3, 1, "", "rs_puiseux2"], [197, 3, 1, "", "rs_series_from_list"], [197, 3, 1, "", "rs_series_inversion"], [197, 3, 1, "", "rs_series_reversion"], [197, 3, 1, "", "rs_sin"], [197, 3, 1, "", "rs_sinh"], [197, 3, 1, "", "rs_square"], [197, 3, 1, "", "rs_subs"], [197, 3, 1, "", "rs_tan"], [197, 3, 1, "", "rs_tanh"], [197, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[191, 1, 1, "", "PolyElement"], [191, 1, 1, "", "PolyRing"], [191, 3, 1, "", "ring"], [191, 3, 1, "", "sring"], [191, 3, 1, "", "vring"], [191, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[191, 2, 1, "", "almosteq"], [191, 2, 1, "", "cancel"], [191, 2, 1, "", "coeff"], [191, 2, 1, "", "coeffs"], [191, 2, 1, "", "const"], [191, 2, 1, "", "content"], [191, 2, 1, "", "copy"], [191, 2, 1, "", "degree"], [191, 2, 1, "", "degrees"], [191, 2, 1, "", "diff"], [191, 2, 1, "", "div"], [191, 2, 1, "", "imul_num"], [191, 2, 1, "", "itercoeffs"], [191, 2, 1, "", "itermonoms"], [191, 2, 1, "", "iterterms"], [191, 2, 1, "", "leading_expv"], [191, 2, 1, "", "leading_monom"], [191, 2, 1, "", "leading_term"], [191, 2, 1, "", "listcoeffs"], [191, 2, 1, "", "listmonoms"], [191, 2, 1, "", "listterms"], [191, 2, 1, "", "monic"], [191, 2, 1, "", "monoms"], [191, 2, 1, "", "primitive"], [191, 2, 1, "", "square"], [191, 2, 1, "", "strip_zero"], [191, 2, 1, "", "tail_degree"], [191, 2, 1, "", "tail_degrees"], [191, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[191, 2, 1, "", "add"], [191, 2, 1, "", "add_gens"], [191, 2, 1, "", "compose"], [191, 2, 1, "", "drop"], [191, 2, 1, "", "drop_to_ground"], [191, 2, 1, "", "index"], [191, 2, 1, "", "monomial_basis"], [191, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[196, 1, 1, "", "ComplexRootOf"], [196, 1, 1, "", "RootOf"], [196, 1, 1, "", "RootSum"], [196, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[196, 2, 1, "", "_all_roots"], [196, 2, 1, "", "_complexes_index"], [196, 2, 1, "", "_complexes_sorted"], [196, 2, 1, "", "_count_roots"], [196, 2, 1, "", "_ensure_complexes_init"], [196, 2, 1, "", "_ensure_reals_init"], [196, 2, 1, "", "_eval_evalf"], [196, 2, 1, "", "_eval_is_imaginary"], [196, 2, 1, "", "_eval_is_real"], [196, 2, 1, "", "_get_complexes"], [196, 2, 1, "", "_get_complexes_sqf"], [196, 2, 1, "", "_get_interval"], [196, 2, 1, "", "_get_reals"], [196, 2, 1, "", "_get_reals_sqf"], [196, 2, 1, "", "_get_roots"], [196, 2, 1, "", "_indexed_root"], [196, 2, 1, "", "_new"], [196, 2, 1, "", "_postprocess_root"], [196, 2, 1, "", "_preprocess_roots"], [196, 2, 1, "", "_real_roots"], [196, 2, 1, "", "_reals_index"], [196, 2, 1, "", "_reals_sorted"], [196, 2, 1, "", "_refine_complexes"], [196, 2, 1, "", "_reset"], [196, 2, 1, "", "_roots_trivial"], [196, 2, 1, "", "_set_interval"], [196, 2, 1, "", "all_roots"], [196, 2, 1, "", "clear_cache"], [196, 2, 1, "", "eval_approx"], [196, 2, 1, "", "eval_rational"], [196, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[196, 2, 1, "", "new"]], "sympy.polys.solvers": [[198, 3, 1, "", "_solve_lin_sys"], [198, 3, 1, "", "_solve_lin_sys_component"], [198, 3, 1, "", "eqs_to_matrix"], [198, 3, 1, "", "solve_lin_sys"], [198, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[196, 3, 1, "", "cyclotomic_poly"], [196, 3, 1, "", "interpolating_poly"], [196, 3, 1, "", "random_poly"], [196, 3, 1, "", "swinnerton_dyer_poly"], [196, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[200, 0, 0, "-", "aesaracode"], [200, 0, 0, "-", "c"], [200, 0, 0, "-", "codeprinter"], [200, 0, 0, "-", "conventions"], [200, 0, 0, "-", "cxx"], [200, 0, 0, "-", "fortran"], [200, 0, 0, "-", "gtk"], [200, 0, 0, "-", "jscode"], [200, 0, 0, "-", "julia"], [200, 0, 0, "-", "lambdarepr"], [200, 0, 0, "-", "latex"], [200, 0, 0, "-", "maple"], [200, 0, 0, "-", "mathematica"], [200, 0, 0, "-", "mathml"], [200, 0, 0, "-", "octave"], [200, 0, 0, "-", "precedence"], [200, 0, 0, "-", "pretty"], [200, 0, 0, "-", "preview"], [200, 0, 0, "-", "printer"], [200, 0, 0, "-", "pycode"], [200, 0, 0, "-", "python"], [200, 0, 0, "-", "rcode"], [200, 0, 0, "-", "repr"], [200, 0, 0, "-", "rust"], [200, 0, 0, "-", "str"], [200, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[200, 1, 1, "", "AesaraPrinter"], [200, 3, 1, "", "aesara_code"], [200, 3, 1, "", "aesara_function"], [200, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[200, 2, 1, "", "doprint"], [200, 5, 1, "", "printmethod"]], "sympy.printing.c": [[200, 1, 1, "", "C89CodePrinter"], [200, 1, 1, "", "C99CodePrinter"], [200, 3, 1, "", "ccode"], [200, 6, 1, "", "known_functions_C89"], [200, 6, 1, "", "known_functions_C99"], [200, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[200, 2, 1, "", "indent_code"], [200, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[200, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[200, 7, 1, "", "AssignmentError"], [200, 1, 1, "", "CodePrinter"], [200, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[200, 2, 1, "", "doprint"], [200, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[200, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[200, 1, 1, "", "CXX11CodePrinter"], [200, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[200, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[200, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[200, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[200, 1, 1, "", "FCodePrinter"], [200, 3, 1, "", "fcode"], [200, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[200, 2, 1, "", "indent_code"], [200, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[200, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[200, 1, 1, "", "JavascriptCodePrinter"], [200, 3, 1, "", "jscode"], [200, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[200, 2, 1, "", "indent_code"], [200, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[200, 1, 1, "", "JuliaCodePrinter"], [200, 3, 1, "", "julia_code"], [200, 6, 1, "", "known_fcns_src1"], [200, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[200, 2, 1, "", "indent_code"], [200, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[200, 1, 1, "", "LambdaPrinter"], [200, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[200, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[200, 1, 1, "", "LatexPrinter"], [200, 6, 1, "", "accepted_latex_functions"], [200, 3, 1, "", "latex"], [200, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[200, 2, 1, "", "parenthesize_super"], [200, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[200, 1, 1, "", "MapleCodePrinter"], [200, 3, 1, "", "maple_code"], [200, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[200, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[200, 1, 1, "", "MCodePrinter"], [200, 6, 1, "", "known_functions"], [200, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[200, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[200, 1, 1, "", "MathMLContentPrinter"], [200, 1, 1, "", "MathMLPresentationPrinter"], [200, 1, 1, "", "MathMLPrinterBase"], [200, 3, 1, "", "mathml"], [200, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[200, 2, 1, "", "mathml_tag"], [200, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[200, 2, 1, "", "mathml_tag"], [200, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[200, 2, 1, "", "doprint"]], "sympy.printing.octave": [[200, 1, 1, "", "OctaveCodePrinter"], [200, 6, 1, "", "known_fcns_src1"], [200, 6, 1, "", "known_fcns_src2"], [200, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[200, 2, 1, "", "indent_code"], [200, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[200, 6, 1, "", "PRECEDENCE"], [200, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [200, 6, 1, "", "PRECEDENCE_VALUES"], [200, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[200, 0, 0, "-", "pretty"], [200, 0, 0, "-", "pretty_symbology"], [200, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[200, 1, 1, "", "PrettyPrinter"], [200, 3, 1, "", "pretty"], [200, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[200, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[200, 3, 1, "", "G"], [200, 3, 1, "", "U"], [200, 3, 1, "", "VF"], [200, 3, 1, "", "annotated"], [200, 6, 1, "", "atoms_table"], [200, 6, 1, "", "digit_2txt"], [200, 6, 1, "", "frac"], [200, 3, 1, "", "g"], [200, 6, 1, "", "greek_letters"], [200, 3, 1, "", "hobj"], [200, 3, 1, "", "pretty_atom"], [200, 3, 1, "", "pretty_symbol"], [200, 3, 1, "", "pretty_try_use_unicode"], [200, 3, 1, "", "pretty_use_unicode"], [200, 6, 1, "", "root"], [200, 6, 1, "", "sub"], [200, 6, 1, "", "sup"], [200, 6, 1, "", "symb_2txt"], [200, 3, 1, "", "vobj"], [200, 3, 1, "", "xobj"], [200, 3, 1, "", "xstr"], [200, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[200, 1, 1, "", "prettyForm"], [200, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[200, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[200, 2, 1, "", "above"], [200, 2, 1, "", "below"], [200, 2, 1, "", "height"], [200, 2, 1, "", "left"], [200, 2, 1, "", "leftslash"], [200, 2, 1, "", "next"], [200, 2, 1, "", "parens"], [200, 2, 1, "", "render"], [200, 2, 1, "", "right"], [200, 2, 1, "", "root"], [200, 2, 1, "", "stack"], [200, 2, 1, "", "terminal_width"], [200, 2, 1, "", "width"]], "sympy.printing.preview": [[200, 3, 1, "", "preview"]], "sympy.printing.printer": [[200, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[200, 2, 1, "", "_print"], [200, 2, 1, "", "doprint"], [200, 5, 1, "", "printmethod"], [200, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[200, 1, 1, "", "MpmathPrinter"], [200, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[200, 1, 1, "", "RCodePrinter"], [200, 6, 1, "", "known_functions"], [200, 3, 1, "", "print_rcode"], [200, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[200, 2, 1, "", "indent_code"], [200, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[200, 1, 1, "", "ReprPrinter"], [200, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[200, 2, 1, "", "emptyPrinter"], [200, 5, 1, "", "printmethod"], [200, 2, 1, "", "reprify"]], "sympy.printing.rust": [[200, 1, 1, "", "RustCodePrinter"], [200, 6, 1, "", "known_functions"], [200, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[200, 2, 1, "", "indent_code"], [200, 5, 1, "", "printmethod"]], "sympy.printing.str": [[200, 1, 1, "", "StrPrinter"], [200, 3, 1, "", "sstr"], [200, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[200, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[200, 3, 1, "", "pprint_nodes"], [200, 3, 1, "", "print_node"], [200, 3, 1, "", "print_tree"], [200, 3, 1, "", "tree"]], "sympy.series.acceleration": [[207, 3, 1, "", "richardson"], [207, 3, 1, "", "shanks"]], "sympy.series.formal": [[202, 1, 1, "", "FiniteFormalPowerSeries"], [202, 1, 1, "", "FormalPowerSeries"], [202, 1, 1, "", "FormalPowerSeriesCompose"], [202, 1, 1, "", "FormalPowerSeriesInverse"], [202, 1, 1, "", "FormalPowerSeriesProduct"], [202, 3, 1, "", "compute_fps"], [202, 3, 1, "", "exp_re"], [202, 3, 1, "", "fps"], [202, 3, 1, "", "hyper_algorithm"], [202, 3, 1, "", "hyper_re"], [202, 3, 1, "", "rational_algorithm"], [202, 3, 1, "", "rational_independent"], [202, 3, 1, "", "rsolve_hypergeometric"], [202, 3, 1, "", "simpleDE"], [202, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[202, 2, 1, "", "coeff_bell"], [202, 2, 1, "", "compose"], [202, 4, 1, "", "infinite"], [202, 2, 1, "", "integrate"], [202, 2, 1, "", "inverse"], [202, 2, 1, "", "polynomial"], [202, 2, 1, "", "product"], [202, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[202, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[202, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[202, 4, 1, "", "function"]], "sympy.series.fourier": [[203, 1, 1, "", "FourierSeries"], [203, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[203, 2, 1, "", "scale"], [203, 2, 1, "", "scalex"], [203, 2, 1, "", "shift"], [203, 2, 1, "", "shiftx"], [203, 2, 1, "", "sigma_approximation"], [203, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[207, 1, 1, "", "SubsSet"], [207, 3, 1, "", "build_expression_tree"], [207, 3, 1, "", "calculate_series"], [207, 3, 1, "", "compare"], [207, 3, 1, "", "gruntz"], [207, 3, 1, "", "limitinf"], [207, 3, 1, "", "mrv"], [207, 3, 1, "", "mrv_leadterm"], [207, 3, 1, "", "mrv_max1"], [207, 3, 1, "", "mrv_max3"], [207, 3, 1, "", "rewrite"], [207, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[207, 2, 1, "", "copy"], [207, 2, 1, "", "do_subs"], [207, 2, 1, "", "meets"], [207, 2, 1, "", "union"]], "sympy.series.limits": [[207, 1, 1, "", "Limit"], [207, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[207, 2, 1, "", "doit"]], "sympy.series.limitseq": [[205, 3, 1, "", "difference_delta"], [205, 3, 1, "", "dominant"], [205, 3, 1, "", "limit_seq"]], "sympy.series.order": [[207, 1, 1, "", "Order"]], "sympy.series.order.Order": [[207, 2, 1, "", "contains"]], "sympy.series.residues": [[207, 3, 1, "", "residue"]], "sympy.series.sequences": [[206, 1, 1, "", "EmptySequence"], [206, 1, 1, "", "RecursiveSeq"], [206, 1, 1, "", "SeqAdd"], [206, 1, 1, "", "SeqBase"], [206, 1, 1, "", "SeqFormula"], [206, 1, 1, "", "SeqMul"], [206, 1, 1, "", "SeqPer"], [206, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[206, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[206, 4, 1, "", "initial"], [206, 4, 1, "", "interval"], [206, 4, 1, "", "n"], [206, 4, 1, "", "recurrence"], [206, 4, 1, "", "start"], [206, 4, 1, "", "stop"], [206, 4, 1, "", "y"], [206, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[206, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[206, 2, 1, "", "coeff"], [206, 2, 1, "", "coeff_mul"], [206, 2, 1, "", "find_linear_recurrence"], [206, 4, 1, "", "free_symbols"], [206, 4, 1, "", "gen"], [206, 4, 1, "", "interval"], [206, 4, 1, "", "length"], [206, 4, 1, "", "start"], [206, 4, 1, "", "stop"], [206, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[206, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[206, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[206, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[207, 3, 1, "", "series"]], "sympy.sets": [[208, 0, 0, "-", "conditionset"], [208, 0, 0, "-", "fancysets"], [208, 0, 0, "-", "powerset"], [208, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[208, 1, 1, "", "ConditionSet"], [208, 1, 1, "", "Contains"], [208, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[208, 1, 1, "", "CartesianComplexRegion"], [208, 1, 1, "", "ComplexRegion"], [208, 1, 1, "", "Complexes"], [208, 1, 1, "", "ImageSet"], [208, 1, 1, "", "Integers"], [208, 1, 1, "", "Naturals"], [208, 1, 1, "", "Naturals0"], [208, 1, 1, "", "PolarComplexRegion"], [208, 1, 1, "", "Range"], [208, 1, 1, "", "Rationals"], [208, 1, 1, "", "Reals"], [208, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[208, 4, 1, "", "a_interval"], [208, 4, 1, "", "b_interval"], [208, 2, 1, "", "from_real"], [208, 4, 1, "", "psets"], [208, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[208, 2, 1, "", "as_relational"], [208, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[208, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[208, 1, 1, "", "Complement"], [208, 1, 1, "", "DisjointUnion"], [208, 1, 1, "", "EmptySet"], [208, 1, 1, "", "FiniteSet"], [208, 1, 1, "", "Intersection"], [208, 1, 1, "", "Interval"], [208, 1, 1, "", "ProductSet"], [208, 1, 1, "", "Set"], [208, 1, 1, "", "SymmetricDifference"], [208, 1, 1, "", "Union"], [208, 1, 1, "", "UniversalSet"], [208, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[208, 2, 1, "", "as_relational"], [208, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[208, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[208, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[208, 2, 1, "", "Lopen"], [208, 2, 1, "", "Ropen"], [208, 2, 1, "", "as_relational"], [208, 4, 1, "", "end"], [208, 4, 1, "", "is_left_unbounded"], [208, 4, 1, "", "is_right_unbounded"], [208, 4, 1, "", "left_open"], [208, 2, 1, "", "open"], [208, 4, 1, "", "right_open"], [208, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[208, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[208, 4, 1, "", "boundary"], [208, 4, 1, "", "closure"], [208, 2, 1, "", "complement"], [208, 2, 1, "", "contains"], [208, 4, 1, "", "inf"], [208, 4, 1, "", "interior"], [208, 2, 1, "", "intersect"], [208, 2, 1, "", "intersection"], [208, 4, 1, "", "is_closed"], [208, 2, 1, "", "is_disjoint"], [208, 4, 1, "", "is_open"], [208, 2, 1, "", "is_proper_subset"], [208, 2, 1, "", "is_proper_superset"], [208, 2, 1, "", "is_subset"], [208, 2, 1, "", "is_superset"], [208, 2, 1, "", "isdisjoint"], [208, 2, 1, "", "issubset"], [208, 2, 1, "", "issuperset"], [208, 4, 1, "", "kind"], [208, 4, 1, "", "measure"], [208, 2, 1, "", "powerset"], [208, 4, 1, "", "sup"], [208, 2, 1, "", "symmetric_difference"], [208, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[208, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[208, 2, 1, "", "as_relational"]], "sympy.simplify": [[212, 0, 0, "-", "combsimp"], [212, 0, 0, "-", "cse_main"], [212, 0, 0, "-", "epathtools"], [212, 0, 0, "-", "hyperexpand"], [210, 0, 0, "-", "hyperexpand_doc"], [212, 0, 0, "-", "powsimp"], [212, 0, 0, "-", "radsimp"], [212, 0, 0, "-", "ratsimp"], [12, 0, 0, "-", "simplify"], [212, 0, 0, "-", "sqrtdenest"], [212, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[212, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[212, 3, 1, "", "cse"], [212, 3, 1, "", "opt_cse"], [212, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[212, 1, 1, "", "EPath"], [212, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[212, 2, 1, "", "apply"], [212, 2, 1, "", "select"]], "sympy.simplify.fu": [[209, 3, 1, "", "TR0"], [209, 3, 1, "", "TR1"], [209, 3, 1, "", "TR10"], [209, 3, 1, "", "TR10i"], [209, 3, 1, "", "TR11"], [209, 3, 1, "", "TR111"], [209, 3, 1, "", "TR12"], [209, 3, 1, "", "TR12i"], [209, 3, 1, "", "TR13"], [209, 3, 1, "", "TR14"], [209, 3, 1, "", "TR15"], [209, 3, 1, "", "TR16"], [209, 3, 1, "", "TR2"], [209, 3, 1, "", "TR22"], [209, 3, 1, "", "TR2i"], [209, 3, 1, "", "TR3"], [209, 3, 1, "", "TR4"], [209, 3, 1, "", "TR5"], [209, 3, 1, "", "TR6"], [209, 3, 1, "", "TR7"], [209, 3, 1, "", "TR8"], [209, 3, 1, "", "TR9"], [209, 3, 1, "", "TRmorrie"], [209, 3, 1, "", "TRpower"], [209, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[212, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[212, 3, 1, "", "powdenest"], [212, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[212, 3, 1, "", "collect"], [212, 3, 1, "", "collect_const"], [212, 3, 1, "", "collect_sqrt"], [212, 3, 1, "", "fraction"], [212, 3, 1, "", "rad_rationalize"], [212, 3, 1, "", "radsimp"], [212, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[212, 3, 1, "", "ratsimp"], [212, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[212, 3, 1, "", "besselsimp"], [212, 3, 1, "", "hypersimilar"], [212, 3, 1, "", "hypersimp"], [212, 3, 1, "", "kroneckersimp"], [212, 3, 1, "", "logcombine"], [212, 3, 1, "", "nsimplify"], [212, 3, 1, "", "nthroot"], [212, 3, 1, "", "posify"], [212, 3, 1, "", "separatevars"], [212, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[212, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[212, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[218, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[213, 1, 1, "", "BinaryQuadratic"], [213, 1, 1, "", "CubicThue"], [213, 1, 1, "", "DiophantineEquationType"], [213, 1, 1, "", "DiophantineSolutionSet"], [213, 1, 1, "", "GeneralPythagorean"], [213, 1, 1, "", "GeneralSumOfEvenPowers"], [213, 1, 1, "", "GeneralSumOfSquares"], [213, 1, 1, "", "HomogeneousGeneralQuadratic"], [213, 1, 1, "", "HomogeneousTernaryQuadratic"], [213, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [213, 1, 1, "", "InhomogeneousGeneralQuadratic"], [213, 1, 1, "", "InhomogeneousTernaryQuadratic"], [213, 1, 1, "", "Linear"], [213, 3, 1, "", "PQa"], [213, 1, 1, "", "Univariate"], [213, 3, 1, "", "base_solution_linear"], [213, 3, 1, "", "classify_diop"], [213, 3, 1, "", "cornacchia"], [213, 3, 1, "", "descent"], [213, 3, 1, "", "diop_DN"], [213, 3, 1, "", "diop_bf_DN"], [213, 3, 1, "", "diop_general_pythagorean"], [213, 3, 1, "", "diop_general_sum_of_even_powers"], [213, 3, 1, "", "diop_general_sum_of_squares"], [213, 3, 1, "", "diop_linear"], [213, 3, 1, "", "diop_quadratic"], [213, 3, 1, "", "diop_solve"], [213, 3, 1, "", "diop_ternary_quadratic"], [213, 3, 1, "", "diop_ternary_quadratic_normal"], [213, 3, 1, "", "diophantine"], [213, 3, 1, "", "divisible"], [213, 3, 1, "", "equivalent"], [213, 3, 1, "", "find_DN"], [213, 3, 1, "", "gaussian_reduce"], [213, 3, 1, "", "holzer"], [213, 3, 1, "", "ldescent"], [213, 3, 1, "", "merge_solution"], [213, 3, 1, "", "parametrize_ternary_quadratic"], [213, 3, 1, "", "partition"], [213, 3, 1, "", "power_representation"], [213, 3, 1, "", "prime_as_sum_of_two_squares"], [213, 3, 1, "", "reconstruct"], [213, 3, 1, "", "sqf_normal"], [213, 3, 1, "", "square_factor"], [213, 3, 1, "", "sum_of_four_squares"], [213, 3, 1, "", "sum_of_powers"], [213, 3, 1, "", "sum_of_squares"], [213, 3, 1, "", "sum_of_three_squares"], [213, 3, 1, "", "transformation_to_DN"], [213, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[213, 2, 1, "", "matches"]], "sympy.solvers": [[215, 0, 0, "-", "inequalities"], [216, 0, 0, "-", "ode"], [217, 0, 0, "-", "pde"], [218, 0, 0, "-", "recurr"], [219, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[215, 3, 1, "", "reduce_abs_inequalities"], [215, 3, 1, "", "reduce_abs_inequality"], [215, 3, 1, "", "reduce_inequalities"], [215, 3, 1, "", "reduce_rational_inequalities"], [215, 3, 1, "", "solve_poly_inequalities"], [215, 3, 1, "", "solve_poly_inequality"], [215, 3, 1, "", "solve_rational_inequalities"], [215, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[216, 6, 1, "", "allhints"], [216, 3, 1, "", "checkinfsol"], [216, 3, 1, "", "checkodesol"], [216, 3, 1, "", "classify_ode"], [216, 3, 1, "", "constantsimp"], [216, 3, 1, "", "dsolve"], [216, 3, 1, "", "homogeneous_order"], [216, 3, 1, "", "infinitesimals"], [216, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[216, 3, 1, "", "lie_heuristic_abaco1_product"], [216, 3, 1, "", "lie_heuristic_abaco1_simple"], [216, 3, 1, "", "lie_heuristic_abaco2_similar"], [216, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [216, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [216, 3, 1, "", "lie_heuristic_bivariate"], [216, 3, 1, "", "lie_heuristic_chi"], [216, 3, 1, "", "lie_heuristic_function_sum"], [216, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[216, 3, 1, "", "_handle_Integral"], [216, 3, 1, "", "_linear_2eq_order1_type6"], [216, 3, 1, "", "_linear_2eq_order1_type7"], [216, 3, 1, "", "_nonlinear_2eq_order1_type1"], [216, 3, 1, "", "_nonlinear_2eq_order1_type2"], [216, 3, 1, "", "_nonlinear_2eq_order1_type3"], [216, 3, 1, "", "_nonlinear_2eq_order1_type4"], [216, 3, 1, "", "_nonlinear_2eq_order1_type5"], [216, 3, 1, "", "_nonlinear_3eq_order1_type1"], [216, 3, 1, "", "_nonlinear_3eq_order1_type2"], [216, 3, 1, "", "_nonlinear_3eq_order1_type3"], [216, 3, 1, "", "_nonlinear_3eq_order1_type4"], [216, 3, 1, "", "_nonlinear_3eq_order1_type5"], [216, 3, 1, "", "constant_renumber"], [216, 3, 1, "", "ode_1st_power_series"], [216, 3, 1, "", "ode_2nd_power_series_ordinary"], [216, 3, 1, "", "ode_2nd_power_series_regular"], [216, 3, 1, "", "ode_sol_simplicity"], [216, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[216, 3, 1, "", "compute_m_ybar"], [216, 3, 1, "", "construct_c"], [216, 3, 1, "", "construct_d"], [216, 3, 1, "", "get_gen_sol_from_part_sol"], [216, 3, 1, "", "rational_laurent_series"], [216, 3, 1, "", "remove_redundant_sols"], [216, 3, 1, "", "riccati_inverse_normal"], [216, 3, 1, "", "riccati_normal"], [216, 3, 1, "", "riccati_reduced"], [216, 3, 1, "", "solve_aux_eq"], [216, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[216, 1, 1, "", "AlmostLinear"], [216, 1, 1, "", "Bernoulli"], [216, 1, 1, "", "Factorable"], [216, 1, 1, "", "FirstExact"], [216, 1, 1, "", "FirstLinear"], [216, 1, 1, "", "HomogeneousCoeffBest"], [216, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [216, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [216, 1, 1, "", "LieGroup"], [216, 1, 1, "", "LinearCoefficients"], [216, 1, 1, "", "Liouville"], [216, 1, 1, "", "NthAlgebraic"], [216, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [216, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [216, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [216, 1, 1, "", "NthLinearEulerEqHomogeneous"], [216, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [216, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [216, 1, 1, "", "NthOrderReducible"], [216, 1, 1, "", "RationalRiccati"], [216, 1, 1, "", "RiccatiSpecial"], [216, 1, 1, "", "SecondHypergeometric"], [216, 1, 1, "", "SecondLinearAiry"], [216, 1, 1, "", "SecondLinearBessel"], [216, 1, 1, "", "Separable"], [216, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[216, 3, 1, "", "canonical_odes"], [216, 3, 1, "", "dsolve_system"], [216, 3, 1, "", "linear_ode_to_matrix"], [216, 3, 1, "", "linodesolve"], [216, 3, 1, "", "linodesolve_type"], [216, 3, 1, "", "matrix_exp"], [216, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[217, 3, 1, "", "checkpdesol"], [217, 3, 1, "", "classify_pde"], [217, 3, 1, "", "pde_1st_linear_constant_coeff"], [217, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [217, 3, 1, "", "pde_1st_linear_variable_coeff"], [217, 3, 1, "", "pde_separate"], [217, 3, 1, "", "pde_separate_add"], [217, 3, 1, "", "pde_separate_mul"], [217, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[218, 3, 1, "", "solve_poly_system"], [218, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[218, 3, 1, "", "rsolve"], [218, 3, 1, "", "rsolve_hyper"], [218, 3, 1, "", "rsolve_poly"], [218, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[218, 3, 1, "", "checksol"], [218, 3, 1, "", "nsolve"], [218, 3, 1, "", "solve"], [218, 3, 1, "", "solve_linear"], [218, 3, 1, "", "solve_linear_system"], [218, 3, 1, "", "solve_linear_system_LU"], [218, 3, 1, "", "solve_undetermined_coeffs"], [218, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[219, 3, 1, "", "_is_exponential"], [219, 3, 1, "", "_is_logarithmic"], [219, 3, 1, "", "_solve_exponential"], [219, 3, 1, "", "_solve_logarithm"], [219, 3, 1, "", "_transolve"], [219, 3, 1, "", "domain_check"], [219, 3, 1, "", "invert_complex"], [219, 3, 1, "", "invert_real"], [219, 3, 1, "", "linear_eq_to_matrix"], [219, 3, 1, "", "linsolve"], [219, 3, 1, "", "nonlinsolve"], [219, 3, 1, "", "solveset"], [219, 3, 1, "", "solveset_complex"], [219, 3, 1, "", "solveset_real"], [219, 3, 1, "", "solvify"]], "sympy.stats": [[220, 3, 1, "", "Arcsin"], [220, 3, 1, "", "Benini"], [220, 3, 1, "", "Bernoulli"], [220, 1, 1, "", "BernoulliProcess"], [220, 3, 1, "", "Beta"], [220, 3, 1, "", "BetaBinomial"], [220, 3, 1, "", "BetaNoncentral"], [220, 3, 1, "", "BetaPrime"], [220, 3, 1, "", "Binomial"], [220, 3, 1, "", "BoundedPareto"], [220, 3, 1, "", "Cauchy"], [220, 1, 1, "", "CentralMoment"], [220, 3, 1, "", "Chi"], [220, 3, 1, "", "ChiNoncentral"], [220, 3, 1, "", "ChiSquared"], [220, 3, 1, "", "Coin"], [220, 1, 1, "", "ContinuousMarkovChain"], [220, 3, 1, "", "ContinuousRV"], [220, 1, 1, "", "Covariance"], [220, 1, 1, "", "CrossCovarianceMatrix"], [220, 3, 1, "", "Dagum"], [220, 3, 1, "", "Die"], [220, 1, 1, "", "DiscreteMarkovChain"], [220, 3, 1, "", "DiscreteUniform"], [220, 3, 1, "", "E"], [220, 3, 1, "", "Erlang"], [220, 3, 1, "", "ExGaussian"], [220, 1, 1, "", "Expectation"], [220, 1, 1, "", "ExpectationMatrix"], [220, 3, 1, "", "Exponential"], [220, 3, 1, "", "FDistribution"], [220, 3, 1, "", "FiniteRV"], [220, 3, 1, "", "FisherZ"], [220, 3, 1, "", "Frechet"], [220, 3, 1, "", "Gamma"], [220, 3, 1, "", "GammaInverse"], [220, 1, 1, "", "GammaProcess"], [220, 3, 1, "", "GeneralizedMultivariateLogGamma"], [220, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [220, 3, 1, "", "Geometric"], [220, 3, 1, "", "Gompertz"], [220, 3, 1, "", "Gumbel"], [220, 3, 1, "", "Hermite"], [220, 3, 1, "", "Hypergeometric"], [220, 3, 1, "", "JointRV"], [220, 3, 1, "", "Kumaraswamy"], [220, 3, 1, "", "Laplace"], [220, 3, 1, "", "Levy"], [220, 3, 1, "", "LogLogistic"], [220, 3, 1, "", "LogNormal"], [220, 3, 1, "", "Logarithmic"], [220, 3, 1, "", "Logistic"], [220, 3, 1, "", "Lomax"], [220, 3, 1, "", "MatrixGamma"], [220, 3, 1, "", "MatrixNormal"], [220, 3, 1, "", "Maxwell"], [220, 1, 1, "", "Moment"], [220, 3, 1, "", "Moyal"], [220, 3, 1, "", "Multinomial"], [220, 3, 1, "", "MultivariateBeta"], [220, 3, 1, "", "MultivariateEwens"], [220, 3, 1, "", "MultivariateLaplace"], [220, 3, 1, "", "MultivariateNormal"], [220, 3, 1, "", "MultivariateT"], [220, 3, 1, "", "Nakagami"], [220, 3, 1, "", "NegativeBinomial"], [220, 3, 1, "", "NegativeMultinomial"], [220, 3, 1, "", "Normal"], [220, 3, 1, "", "NormalGamma"], [220, 3, 1, "", "P"], [220, 3, 1, "", "Pareto"], [220, 3, 1, "", "Poisson"], [220, 1, 1, "", "PoissonProcess"], [220, 3, 1, "", "PowerFunction"], [220, 1, 1, "", "Probability"], [220, 3, 1, "", "QuadraticU"], [220, 3, 1, "", "Rademacher"], [220, 3, 1, "", "RaisedCosine"], [220, 3, 1, "", "Rayleigh"], [220, 3, 1, "", "Reciprocal"], [220, 3, 1, "", "ShiftedGompertz"], [220, 3, 1, "", "Skellam"], [220, 3, 1, "", "StudentT"], [220, 3, 1, "", "Trapezoidal"], [220, 3, 1, "", "Triangular"], [220, 3, 1, "", "Uniform"], [220, 3, 1, "", "UniformSum"], [220, 1, 1, "", "Variance"], [220, 1, 1, "", "VarianceMatrix"], [220, 3, 1, "", "VonMises"], [220, 3, 1, "", "Wald"], [220, 3, 1, "", "Weibull"], [220, 1, 1, "", "WienerProcess"], [220, 3, 1, "", "WignerSemicircle"], [220, 3, 1, "", "Wishart"], [220, 3, 1, "", "YuleSimon"], [220, 3, 1, "", "Zeta"], [220, 3, 1, "", "cmoment"], [220, 3, 1, "", "correlation"], [220, 3, 1, "", "coskewness"], [220, 3, 1, "", "covariance"], [220, 0, 0, "-", "crv"], [220, 0, 0, "-", "crv_types"], [220, 3, 1, "", "density"], [220, 3, 1, "", "entropy"], [220, 3, 1, "", "factorial_moment"], [220, 0, 0, "-", "frv"], [220, 0, 0, "-", "frv_types"], [220, 3, 1, "", "given"], [220, 3, 1, "", "kurtosis"], [220, 3, 1, "", "marginal_distribution"], [220, 3, 1, "", "median"], [220, 3, 1, "", "moment"], [220, 3, 1, "", "quantile"], [220, 0, 0, "-", "rv"], [220, 3, 1, "", "sample"], [220, 3, 1, "", "sample_iter"], [220, 3, 1, "", "skewness"], [220, 3, 1, "", "std"], [220, 3, 1, "", "variance"], [220, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[220, 2, 1, "", "expectation"], [220, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[220, 2, 1, "", "absorbing_probabilities"], [220, 2, 1, "", "canonical_form"], [220, 2, 1, "", "communication_classes"], [220, 2, 1, "", "decompose"], [220, 2, 1, "", "fixed_row_vector"], [220, 2, 1, "", "fundamental_matrix"], [220, 4, 1, "", "limiting_distribution"], [220, 2, 1, "", "sample"], [220, 2, 1, "", "stationary_distribution"], [220, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[220, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[220, 1, 1, "", "ContinuousDomain"], [220, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[220, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[220, 3, 1, "", "Die"], [220, 3, 1, "", "Normal"]], "sympy.stats.frv": [[220, 1, 1, "", "FiniteDomain"], [220, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[220, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[220, 1, 1, "", "ConditionalDomain"], [220, 1, 1, "", "PSpace"], [220, 1, 1, "", "ProductDomain"], [220, 1, 1, "", "ProductPSpace"], [220, 1, 1, "", "RandomDomain"], [220, 1, 1, "", "RandomSymbol"], [220, 1, 1, "", "SingleDomain"], [220, 1, 1, "", "SinglePSpace"], [220, 3, 1, "", "pspace"], [220, 3, 1, "", "random_symbols"], [220, 3, 1, "", "rs_swap"], [220, 3, 1, "", "sampling_E"], [220, 3, 1, "", "sampling_P"], [220, 3, 1, "", "sampling_density"]], "sympy.tensor": [[221, 0, 0, "-", "array"], [224, 0, 0, "-", "index_methods"], [225, 0, 0, "-", "indexed"], [226, 0, 0, "-", "tensor"], [227, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[221, 1, 1, "", "ImmutableDenseNDimArray"], [221, 1, 1, "", "ImmutableSparseNDimArray"], [221, 1, 1, "", "MutableDenseNDimArray"], [221, 1, 1, "", "MutableSparseNDimArray"], [221, 3, 1, "", "derive_by_array"], [222, 0, 0, "-", "expressions"], [221, 3, 1, "", "permutedims"], [221, 3, 1, "", "tensorcontraction"], [221, 3, 1, "", "tensordiagonal"], [221, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[224, 3, 1, "", "get_contraction_structure"], [224, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[225, 1, 1, "", "Idx"], [225, 1, 1, "", "Indexed"], [225, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[225, 4, 1, "", "label"], [225, 4, 1, "", "lower"], [225, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[225, 4, 1, "", "base"], [225, 4, 1, "", "indices"], [225, 4, 1, "", "ranges"], [225, 4, 1, "", "rank"], [225, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[225, 4, 1, "", "label"], [225, 4, 1, "", "offset"], [225, 4, 1, "", "shape"], [225, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[226, 1, 1, "", "TensAdd"], [226, 1, 1, "", "TensExpr"], [226, 1, 1, "", "TensMul"], [226, 1, 1, "", "TensorHead"], [226, 1, 1, "", "TensorIndex"], [226, 1, 1, "", "TensorIndexType"], [226, 1, 1, "", "TensorSymmetry"], [226, 1, 1, "", "TensorType"], [226, 1, 1, "", "_TensorManager"], [226, 3, 1, "", "canon_bp"], [226, 3, 1, "", "riemann_cyclic"], [226, 3, 1, "", "riemann_cyclic_replace"], [226, 3, 1, "", "tensor_heads"], [226, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[226, 2, 1, "", "canon_bp"], [226, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[226, 2, 1, "", "get_matrix"], [226, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[226, 2, 1, "", "canon_bp"], [226, 2, 1, "", "contract_metric"], [226, 2, 1, "", "get_free_indices"], [226, 2, 1, "", "get_indices"], [226, 2, 1, "", "perm2tensor"], [226, 2, 1, "", "sorted_components"], [226, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[226, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[226, 2, 1, "", "direct_product"], [226, 2, 1, "", "fully_symmetric"], [226, 2, 1, "", "no_symmetry"], [226, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[226, 2, 1, "", "clear"], [226, 2, 1, "", "comm_i2symbol"], [226, 2, 1, "", "comm_symbols2i"], [226, 2, 1, "", "get_comm"], [226, 2, 1, "", "set_comm"], [226, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[227, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[229, 0, 0, "-", "pytest"], [230, 0, 0, "-", "randtest"], [231, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[229, 3, 1, "", "SKIP"], [229, 3, 1, "", "nocache_fail"], [229, 3, 1, "", "raises"], [229, 3, 1, "", "warns"], [229, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[231, 1, 1, "", "PyTestReporter"], [231, 1, 1, "", "Reporter"], [231, 1, 1, "", "SymPyDocTestFinder"], [231, 1, 1, "", "SymPyDocTestRunner"], [231, 1, 1, "", "SymPyOutputChecker"], [231, 1, 1, "", "SymPyTestResults"], [231, 3, 1, "", "convert_to_native_paths"], [231, 3, 1, "", "doctest"], [231, 3, 1, "", "get_sympy_dir"], [231, 3, 1, "", "raise_on_deprecated"], [231, 3, 1, "", "run_all_tests"], [231, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [231, 3, 1, "", "split_list"], [231, 3, 1, "", "sympytestfile"], [231, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[231, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[231, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[231, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[231, 5, 1, "", "attempted"], [231, 5, 1, "", "failed"]], "sympy.utilities": [[232, 0, 0, "-", "autowrap"], [233, 0, 0, "-", "codegen"], [234, 0, 0, "-", "decorator"], [235, 0, 0, "-", "enumerative"], [236, 0, 0, "-", "exceptions"], [238, 0, 0, "-", "iterables"], [239, 0, 0, "-", "lambdify"], [240, 0, 0, "-", "memoization"], [241, 0, 0, "-", "misc"], [242, 0, 0, "-", "pkgdata"], [243, 0, 0, "-", "source"], [244, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[232, 1, 1, "", "CodeWrapper"], [232, 1, 1, "", "CythonCodeWrapper"], [232, 1, 1, "", "DummyWrapper"], [232, 1, 1, "", "F2PyCodeWrapper"], [232, 1, 1, "", "UfuncifyCodeWrapper"], [232, 3, 1, "", "autowrap"], [232, 3, 1, "", "binary_function"], [232, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[232, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[232, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[233, 1, 1, "", "Argument"], [233, 1, 1, "", "CCodeGen"], [233, 1, 1, "", "CodeGen"], [233, 1, 1, "", "DataType"], [233, 1, 1, "", "FCodeGen"], [233, 1, 1, "", "JuliaCodeGen"], [233, 1, 1, "", "OctaveCodeGen"], [233, 1, 1, "", "OutputArgument"], [233, 1, 1, "", "Result"], [233, 1, 1, "", "Routine"], [233, 1, 1, "", "RustCodeGen"], [233, 3, 1, "", "codegen"], [233, 3, 1, "", "get_default_datatype"], [233, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[233, 2, 1, "", "dump_c"], [233, 2, 1, "", "dump_h"], [233, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[233, 2, 1, "", "dump_code"], [233, 2, 1, "", "routine"], [233, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[233, 2, 1, "", "dump_f95"], [233, 2, 1, "", "dump_h"], [233, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[233, 2, 1, "", "dump_jl"], [233, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[233, 2, 1, "", "dump_m"], [233, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[233, 4, 1, "", "result_variables"], [233, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[233, 2, 1, "", "dump_rs"], [233, 2, 1, "", "get_prototype"], [233, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[234, 3, 1, "", "conserve_mpmath_dps"], [234, 3, 1, "", "deprecated"], [234, 3, 1, "", "doctest_depends_on"], [234, 3, 1, "", "memoize_property"], [234, 1, 1, "", "no_attrs_in_subclass"], [234, 3, 1, "", "public"], [234, 3, 1, "", "threaded"], [234, 3, 1, "", "threaded_factory"], [234, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[235, 1, 1, "", "MultisetPartitionTraverser"], [235, 3, 1, "", "factoring_visitor"], [235, 3, 1, "", "list_visitor"], [235, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[235, 2, 1, "", "count_partitions"], [235, 2, 1, "", "enum_all"], [235, 2, 1, "", "enum_large"], [235, 2, 1, "", "enum_range"], [235, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[236, 7, 1, "", "SymPyDeprecationWarning"], [236, 3, 1, "", "ignore_warnings"], [236, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[238, 1, 1, "", "NotIterable"], [238, 3, 1, "", "binary_partitions"], [238, 3, 1, "", "bracelets"], [238, 3, 1, "", "capture"], [238, 3, 1, "", "common_prefix"], [238, 3, 1, "", "common_suffix"], [238, 3, 1, "", "connected_components"], [238, 3, 1, "", "dict_merge"], [238, 3, 1, "", "filter_symbols"], [238, 3, 1, "", "flatten"], [238, 3, 1, "", "generate_bell"], [238, 3, 1, "", "generate_derangements"], [238, 3, 1, "", "generate_involutions"], [238, 3, 1, "", "generate_oriented_forest"], [238, 3, 1, "", "group"], [238, 3, 1, "", "has_dups"], [238, 3, 1, "", "has_variety"], [238, 3, 1, "", "ibin"], [238, 3, 1, "", "iproduct"], [238, 3, 1, "", "is_palindromic"], [238, 3, 1, "", "is_sequence"], [238, 3, 1, "", "iterable"], [238, 3, 1, "", "kbins"], [238, 3, 1, "", "least_rotation"], [238, 3, 1, "", "minlex"], [238, 3, 1, "", "multiset"], [238, 3, 1, "", "multiset_combinations"], [238, 3, 1, "", "multiset_derangements"], [238, 3, 1, "", "multiset_partitions"], [238, 3, 1, "", "multiset_permutations"], [238, 3, 1, "", "necklaces"], [238, 3, 1, "", "numbered_symbols"], [238, 3, 1, "", "ordered_partitions"], [238, 3, 1, "", "partitions"], [238, 3, 1, "", "permute_signs"], [238, 3, 1, "", "postfixes"], [238, 3, 1, "", "prefixes"], [238, 3, 1, "", "random_derangement"], [238, 3, 1, "", "reshape"], [238, 3, 1, "", "rotate_left"], [238, 3, 1, "", "rotate_right"], [238, 3, 1, "", "rotations"], [238, 3, 1, "", "roundrobin"], [238, 3, 1, "", "runs"], [238, 3, 1, "", "sift"], [238, 3, 1, "", "signed_permutations"], [238, 3, 1, "", "strongly_connected_components"], [238, 3, 1, "", "subsets"], [238, 3, 1, "", "take"], [238, 3, 1, "", "topological_sort"], [238, 3, 1, "", "unflatten"], [238, 3, 1, "", "uniq"], [238, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[239, 3, 1, "", "implemented_function"], [239, 3, 1, "", "lambdastr"], [239, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[240, 3, 1, "", "assoc_recurrence_memo"], [240, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[241, 3, 1, "", "as_int"], [241, 3, 1, "", "debug"], [241, 3, 1, "", "debug_decorator"], [241, 3, 1, "", "filldedent"], [241, 3, 1, "", "find_executable"], [241, 3, 1, "", "func_name"], [241, 3, 1, "", "ordinal"], [241, 3, 1, "", "rawlines"], [241, 3, 1, "", "replace"], [241, 3, 1, "", "strlines"], [241, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[242, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[243, 3, 1, "", "get_class"], [243, 3, 1, "", "get_mod_func"], [243, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[244, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[245, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[245, 2, 1, "", "__init__"], [245, 2, 1, "", "create_new"], [245, 2, 1, "", "locate_new"], [245, 2, 1, "", "orient_new"], [245, 2, 1, "", "orient_new_axis"], [245, 2, 1, "", "orient_new_body"], [245, 2, 1, "", "orient_new_quaternion"], [245, 2, 1, "", "orient_new_space"], [245, 2, 1, "", "position_wrt"], [245, 2, 1, "", "rotation_matrix"], [245, 2, 1, "", "scalar_map"]], "sympy.vector": [[247, 3, 1, "", "curl"], [247, 3, 1, "", "divergence"], [247, 3, 1, "", "express"], [247, 3, 1, "", "gradient"], [247, 3, 1, "", "is_conservative"], [247, 3, 1, "", "is_solenoidal"], [247, 3, 1, "", "matrix_to_vector"], [247, 3, 1, "", "scalar_potential"], [247, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[245, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[245, 2, 1, "", "cross"], [245, 2, 1, "", "dot"], [245, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[245, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[245, 4, 1, "", "components"], [245, 2, 1, "", "cross"], [245, 2, 1, "", "dot"], [245, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[245, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[245, 2, 1, "", "multiplicity"], [245, 2, 1, "", "rational_parametrization"], [245, 2, 1, "", "regular_point"], [245, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[245, 1, 1, "", "ParametricIntegral"], [247, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[246, 1, 1, "", "AxisOrienter"], [246, 1, 1, "", "BodyOrienter"], [246, 1, 1, "", "Orienter"], [246, 1, 1, "", "QuaternionOrienter"], [246, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[246, 2, 1, "", "__init__"], [246, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[246, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[246, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[246, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[246, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[245, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[245, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[245, 4, 1, "", "components"], [245, 2, 1, "", "cross"], [245, 2, 1, "", "dot"], [245, 2, 1, "", "magnitude"], [245, 2, 1, "", "normalize"], [245, 2, 1, "", "outer"], [245, 2, 1, "", "projection"], [245, 2, 1, "", "separate"], [245, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 5, 6, 10, 12, 15, 16, 17, 23, 24, 25, 35, 59, 76, 95, 133, 181, 190, 245, 247, 248, 251, 265, 267, 270], "build": [1, 3], "document": [1, 3, 4, 6, 7, 24], "requir": [1, 4], "depend": [1, 3, 130, 190, 249], "docker": 1, "debian": 1, "ubuntu": 1, "fedora": 1, "mac": 1, "window": [1, 186], "10": [1, 10, 97], "doc": [1, 191], "local": 1, "instal": [1, 24, 25, 95, 274], "logo": 1, "view": 1, "auto": 1, "rebuild": 1, "live": 1, "server": 1, "pdf": 1, "debug": 2, "hard": 3, "option": [3, 23, 193], "recommend": [3, 7], "interact": [3, 81, 186], "us": [3, 7, 10, 16, 23, 35, 53, 56, 77, 78, 94, 97, 125, 130, 131, 184, 186, 197, 219, 249], "print": [3, 10, 20, 35, 81, 107, 114, 175, 180, 200, 275], "pars": [3, 95], "logic": [3, 19, 83, 255, 258], "plot": [3, 10, 101, 146, 186], "lambdifi": [3, 10, 94, 239, 265], "code": [3, 4, 5, 7, 10, 35, 37, 107, 184, 200, 243, 255, 257], "gener": [3, 6, 7, 43, 45, 190, 195, 219, 250, 255, 257], "autowrap": [3, 35, 232], "printer": [3, 35, 200, 275], "test": [3, 5, 10, 50, 83, 199, 228, 230, 231, 272], "onli": [3, 219], "statist": 3, "symengin": 3, "backend": [3, 186], "experiment": [3, 95], "rubi": 3, "integr": [3, 10, 57, 61, 75, 77, 78, 79, 80, 107, 188, 195, 254, 266], "sage": 3, "develop": [3, 5, 53], "get": [3, 5, 12], "sourc": [3, 10, 12, 243], "run": [3, 5, 25, 231], "benchmark": 3, "deprec": [4, 10], "polici": 4, "what": [4, 130, 189, 190, 219, 270, 273], "i": [4, 12, 78, 94, 130, 189, 200, 219, 270], "try": 4, "avoid": 4, "backward": 4, "incompat": 4, "chang": 4, "first": [4, 10], "place": 4, "when": [4, 78], "doe": [4, 12, 219], "public": 4, "api": [4, 24, 74, 78, 80, 103, 126, 182, 219, 232, 233, 252, 255], "Not": [4, 23], "The": [4, 10, 18, 20, 36, 43, 78, 130, 171, 182, 195, 207, 210, 250, 251, 270], "purpos": 4, "technic": 4, "possibl": [4, 23, 272], "how": [4, 21, 24, 78, 184, 219], "long": 4, "should": [4, 94], "last": 4, "checklist": 4, "ad": 4, "releas": 4, "note": [4, 20, 53, 65, 130, 207, 209, 268, 277], "entri": [4, 89], "environ": 5, "setup": 5, "git": [5, 25], "virtual": 5, "docstr": [6, 7, 96, 99, 108, 109, 110, 111, 112, 113, 114, 115, 177, 178, 179, 180, 238, 245, 246, 247], "style": [6, 7], "guid": [6, 7, 21, 24, 126, 182, 252], "guidelin": [6, 7], "format": [6, 7, 23], "section": 6, "1": [6, 10, 78, 97, 116, 130, 142, 216], "singl": [6, 12, 14], "sentenc": 6, "summari": 6, "2": [6, 10, 78, 97, 116, 130, 216], "explan": [6, 13, 24], "3": [6, 10, 80, 97, 116, 167, 216], "exampl": [6, 20, 26, 53, 65, 77, 80, 93, 97, 104, 117, 130, 134, 138, 169, 171, 184, 199, 200, 207, 210, 220, 221, 222, 225, 250, 270, 276], "4": [6, 10, 97, 216], "paramet": [6, 210, 219], "5": [6, 10, 97, 216], "see": [6, 53, 238, 250], "also": [6, 53, 238], "6": [6, 10, 97, 216], "refer": [6, 18, 24, 27, 34, 52, 53, 55, 65, 71, 78, 80, 84, 85, 86, 87, 89, 91, 93, 95, 132, 138, 141, 171, 182, 184, 185, 186, 187, 189, 191, 193, 195, 196, 207, 209, 210, 213, 219, 232, 233, 252, 255], "sampl": [6, 10], "class": [6, 15, 34, 35, 52, 55, 84, 85, 87, 89, 91, 93, 130, 176, 186, 189, 195, 200, 212, 213, 221, 245, 246], "ar": [6, 184, 190, 219], "mathemat": [6, 12, 133], "function": [6, 10, 12, 20, 23, 35, 43, 52, 53, 59, 60, 61, 71, 72, 75, 76, 78, 83, 89, 93, 95, 97, 107, 131, 153, 156, 177, 178, 181, 186, 188, 190, 191, 196, 199, 200, 210, 212, 213, 216, 217, 221, 247, 251, 275, 276], "best": [6, 7, 20], "practic": [6, 7, 20], "write": [6, 7, 20], "import": [6, 10], "sphinx": 6, "cross": [6, 178], "referenc": 6, "type": [7, 14, 35, 61, 177, 216, 219, 220], "narr": 7, "markdown": 7, "prefer": 7, "math": [7, 35], "latex": [7, 95, 275], "head": 7, "spell": 7, "punctuat": 7, "capit": 7, "tone": 7, "contribut": [8, 9, 24, 197], "make": [9, 23], "list": [10, 12, 14], "activ": 10, "silenc": 10, "warn": [10, 236], "version": 10, "12": 10, "11": [10, 97], "new": [10, 249], "mathematica": [10, 200], "parser": [10, 116], "redund": 10, "static": 10, "method": [10, 16, 20, 25, 111, 120, 123, 124, 125, 128, 129, 130, 200, 217, 219, 224, 249, 272], "carmichael": 10, "check": [10, 23, 177], "argument": [10, 12, 219], "hadamardproduct": 10, "matadd": 10, "matmul": 10, "some": [10, 133, 219], "travers": [10, 53], "have": [10, 23, 199], "been": 10, "move": [10, 210], "core": [10, 53, 86], "trace": 10, "compat": [10, 222], "submodul": [10, 65], "9": [10, 97], "expr_free_symbol": 10, "stat": [10, 220], "numsampl": 10, "n": [10, 53, 216, 221, 222], "poli": [10, 189, 190, 191, 198], "solver": [10, 198, 214, 215, 216, 218, 219, 277], "rawmatrix": 10, "non": 10, "expr": [10, 53], "object": [10, 15, 225], "matrix": [10, 31, 85, 86, 89, 90, 130, 216, 220, 272], "get_seg": 10, "attribut": [10, 36, 43], "mdft": 10, "physic": [10, 104, 107, 117, 127, 128, 129, 130, 131, 132, 133, 134, 173, 175, 181, 182, 183, 184, 255, 261], "matric": [10, 16, 84, 85, 86, 87, 88, 89, 91, 104, 106, 222, 255, 259, 272], "privat": 10, "sparsematrix": [10, 91], "_smat": 10, "densematrix": 10, "_mat": 10, "laplace_transform": 10, "nocond": 10, "fals": [10, 23], "8": [10, 97], "theanocod": 10, "assumpt": [10, 15, 18, 20, 30, 53], "handler": [10, 18], "askhandl": 10, "relat": [10, 12, 14, 18, 53, 61, 83, 181, 184, 208, 251], "7": [10, 97, 216], "call": [10, 23], "stochasticprocess": 10, "distribut": [10, 193, 220], "randomindexedsymbol": 10, "discretemarkovchain": 10, "absorbing_probabilit": 10, "util": [10, 35, 50, 51, 70, 89, 139, 195, 218, 237, 244, 255, 263], "misc": [10, 30], "find_execut": 10, "mutabl": 10, "diffgeom": 10, "unicod": [10, 275], "pretti": [10, 200, 275], "stringpict": 10, "prettyform": 10, "pretty_symbologi": 10, "xstr": 10, "pass": 10, "set": [10, 15, 23, 31, 65, 184, 208, 219, 275], "oper": [10, 12, 75, 89, 144, 153, 155, 156, 177, 181, 184, 210, 221, 227, 248, 250, 251, 265, 272], "longer": 10, "accept": 10, "arg": [10, 59, 271], "variou": [10, 199], "randtest": 10, "mix": 10, "polynomi": [10, 61, 75, 188, 190, 191, 192, 193, 195, 196, 197, 199, 218, 276], "express": [10, 12, 23, 35, 65, 72, 75, 83, 86, 95, 109, 178, 190, 199, 222, 247, 249, 265, 271], "binari": 10, "print_cycl": 10, "flag": 10, "combinator": [10, 40], "permut": [10, 44, 45], "string": [10, 18, 265], "fallback": 10, "sympifi": [10, 53], "creat": [10, 12, 20, 89], "an": [10, 23, 65, 116, 171, 210, 219, 271], "indefinit": 10, "eq": [10, 23, 53], "tensor": [10, 49, 61, 165, 223, 226, 227], "fun_ev": 10, "__call__": 10, "tensortyp": 10, "dummy_fmt": 10, "tensorindextyp": 10, "metric": 10, "get_kronecker_delta": 10, "get_epsilon": 10, "tensorsymmetri": 10, "tensorhead": 10, "unit": [10, 31, 170, 171, 172, 174], "quantiti": [10, 169, 171, 173, 249], "is_emptyset": 10, "productset": [10, 208], "iter": [10, 208, 238], "set_potential_energi": 10, "mechan": [10, 18, 98, 107, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 153, 220], "condit": [10, 78, 208], "conditionset": [10, 208], "max_degre": 10, "get_upper_degre": 10, "properti": [10, 18, 187], "multivariate_result": 10, "dixonresult": 10, "rh": 10, "default": 10, "0": 10, "tupl": [10, 12, 14, 53, 196], "lambda": [10, 53], "evalu": [10, 12, 20, 57, 75, 133, 271], "differentiate_finit": 10, "data": 10, "clear_cach": 10, "clear_subproduct": 10, "keyword": [10, 12], "is_diagonaliz": 10, "row": [10, 272], "col": 10, "jordan_block": 10, "dimens": [10, 65, 168, 171], "scale_factor": 10, "quanit": 10, "classof": 10, "a2idx": 10, "from": [10, 12, 23, 199, 222], "dot": [10, 178, 275], "product": [10, 56, 154, 165, 221, 250], "column": [10, 272], "vector": [10, 43, 53, 126, 175, 176, 177, 181, 182, 183, 184, 193, 245, 247, 248, 249, 251, 252, 253, 254], "geometri": [10, 55, 65, 187], "line3d": 10, "equat": [10, 22, 23, 128, 129, 130, 169, 188, 213, 216, 218, 219, 277], "need": [10, 171], "k": [10, 191], "glossari": 11, "gotcha": [12, 18, 116, 268], "pitfal": 12, "introduct": [12, 16, 27, 34, 35, 36, 43, 55, 65, 83, 116, 133, 171, 181, 183, 186, 187, 188, 195, 199, 253, 270], "equal": [12, 23, 53, 268], "sign": [12, 59, 268], "doubl": [12, 58], "variabl": [12, 23, 186, 220, 249], "assign": 12, "between": [12, 18, 173, 190], "symbol": [12, 18, 19, 20, 53, 72, 130, 134, 185, 190, 196, 199, 219, 268, 270], "python": [12, 35], "number": [12, 31, 39, 53, 56, 57, 78, 190, 195, 199, 255, 260], "v": [12, 19, 190], "float": [12, 53, 57], "ration": [12, 31, 53, 190, 191, 196, 199, 202, 208, 216, 276], "immut": [12, 87], "invers": [12, 20, 59, 78], "trig": 12, "sqrt": [12, 59], "special": [12, 17, 35, 61, 196, 208, 276], "dictionari": [12, 14], "help": 12, "within": 12, "solv": [14, 22, 23, 97, 188, 195, 218, 219, 277], "output": [14, 107, 219], "empti": 14, "Of": 14, "valu": [14, 19], "boolean": [14, 19, 83], "classif": 15, "kind": [15, 53], "func": [15, 271], "finit": [16, 31, 33, 36, 187, 190, 193, 195, 199, 210, 220, 266], "differ": [16, 18, 33, 133, 190, 249, 266], "approxim": [16, 35], "deriv": [16, 53, 184, 221, 251, 266], "A": [16, 118, 119, 122, 123, 124, 125, 130, 270, 277], "direct": [16, 251], "topic": [17, 107, 175, 255, 262], "old": [18, 190], "system": [18, 101, 121, 134, 168, 170, 171, 174, 216, 218, 248, 249, 251, 253], "appli": [18, 78, 210], "input": [18, 219], "predic": [18, 30, 31], "abov": 18, "definit": [18, 20, 31, 71], "implic": 18, "interpret": 18, "other": [18, 20, 25, 72, 181, 249], "is_": 18, "implement": [18, 78, 181, 200, 210, 232, 233, 248, 251], "limit": [18, 77, 116, 205, 207, 266], "combin": [18, 75], "fuzzi": 19, "three": [19, 65], "bool": 19, "custom": [20, 186, 200], "easi": 20, "case": [20, 219], "fulli": 20, "defin": 20, "automat": [20, 199], "eval": 20, "remind": 20, "kei": [20, 133, 271], "point": [20, 57, 68, 107, 175, 179, 183, 248], "numer": [20, 57, 75, 80, 94, 107, 133], "evalf": [20, 53, 94, 265], "rewrit": [20, 35, 201, 276], "simplif": [20, 57, 83, 209, 212, 276], "doit": 20, "expand": [20, 53, 199, 201, 276], "differenti": [20, 55, 75, 107, 218, 219, 277], "as_real_imag": 20, "miscellan": [20, 59, 65, 241], "_eval_": 20, "complet": [20, 116], "versin": 20, "divid": 20, "fuse": 20, "multipli": 20, "add": [20, 53], "fma": 20, "addit": [20, 75], "tip": [20, 265, 266, 268, 271, 272], "algebra": [23, 27, 31, 82, 89, 141, 184, 187, 190, 195, 199, 218, 277], "guidanc": 23, "includ": 23, "ensur": [23, 219], "consist": 23, "dict": [23, 53], "true": [23, 130], "solveset": [23, 219], "your": 23, "zero": [23, 31, 53, 101, 193, 199, 272], "put": 23, "form": [23, 83, 90, 130, 189, 216, 222], "restrict": 23, "domain": [23, 188, 190, 191, 196, 199, 219], "solut": [23, 153, 219, 250], "explicitli": 23, "repres": [23, 78, 161, 190, 195], "infinit": [23, 31, 219], "result": [23, 199], "substitut": [23, 107, 175, 265], "cannot": 23, "necessarili": 23, "interrog": 23, "programmat": 23, "can": 23, "speed": [23, 107, 130], "up": [23, 275], "ani": [23, 219], "denomin": 23, "do": [23, 219], "simplifi": [23, 35, 193, 211, 212, 276], "all": 23, "which": [23, 94, 200], "analyt": [23, 153], "welcom": 24, "": [24, 53, 111, 120, 123, 124, 125, 128, 129, 130, 151, 162, 199, 209, 218, 219, 249, 254, 273], "tutori": [24, 213, 264, 269], "anaconda": 25, "mpmath": 25, "question": 25, "abc": 26, "caveat": [26, 95], "quaternion": 27, "ask": 28, "assum": 29, "queri": 30, "content": [30, 40, 60, 73, 79, 192, 204, 214, 223], "perform": 30, "improv": [30, 116], "common": [31, 84, 107, 175, 199, 200, 201, 212], "tautolog": 31, "commut": [31, 147, 187], "calculu": [31, 33, 184, 266], "symmetr": 31, "invert": 31, "orthogon": [31, 61, 196, 251], "unitari": 31, "posit": 31, "upper": 31, "triangular": 31, "lower": 31, "diagon": [31, 221, 272], "full": 31, "rank": 31, "squar": [31, 188, 212], "integ": [31, 53, 59, 190, 208], "element": [31, 130, 190, 195], "real": [31, 190, 208], "complex": [31, 59, 190, 208], "singular": [31, 33, 61, 97], "normal": [31, 90, 189, 199], "theori": [31, 34, 255, 260], "even": 31, "odd": 31, "prime": [31, 195], "composit": [31, 75], "order": [31, 53, 196, 207, 210, 216], "neg": 31, "nonzero": 31, "nonposit": 31, "nonneg": 31, "irrat": 31, "extend": [31, 210], "hermitian": 31, "imaginari": 31, "antihermitian": 31, "transcendent": 31, "refin": 32, "weight": 33, "categori": 34, "base": [34, 55, 187, 188, 199, 206, 219], "diagram": 34, "draw": 34, "codegen": [35, 233], "tool": [35, 92, 212], "abstract": [35, 98, 102, 104, 126, 136, 153, 182, 191], "syntax": 35, "tree": [35, 190, 200, 271], "ast": [35, 116], "predefin": 35, "node": 35, "c": [35, 200], "cfunction": 35, "specif": 35, "cnode": 35, "cxxnode": 35, "fortran": [35, 200], "fnode": 35, "algorithm": [35, 36, 151, 162, 193, 196, 202, 207, 210], "pyutil": 35, "cutil": 35, "futil": 35, "present": [36, 43], "group": [36, 38, 41, 43, 44, 171], "overview": [36, 43, 78], "facil": 36, "construct": [36, 43, 222], "free": [36, 188], "word": [36, 43], "coset": 36, "enumer": [36, 58], "todd": 36, "coxet": 36, "cosett": 36, "compress": 36, "standard": 36, "subgroup": 36, "index": [36, 43, 222, 225], "low": 36, "reidemeist": 36, "schreier": 36, "bibliographi": [36, 43], "grai": 37, "constructor": [38, 196, 272], "nilpot": 39, "abelian": 39, "cyclic": 39, "name": 41, "partit": [42, 58, 213, 238], "polycycl": 43, "polycyclicgroup": 43, "collector": 43, "comput": [43, 78, 94, 153, 199, 270], "minim": [43, 195], "uncollect": 43, "subword": 43, "collect": [43, 201, 212, 276], "expon": [43, 199], "depth": [43, 65], "lead": 43, "polyhedron": 46, "prufer": 47, "sequenc": [47, 75, 193, 205, 206], "subset": [48, 56], "canonic": 49, "concret": 52, "hypergeometr": [52, 61, 72, 75, 202, 210, 212], "term": [52, 199, 201, 207], "cach": 53, "cacheit": 53, "basic": [53, 57, 89, 177, 188, 190, 196, 208, 248, 255, 256, 265, 272], "atom": 53, "singleton": [53, 206, 208], "unevaluatedexpr": 53, "atomicexpr": 53, "wild": 53, "dummi": 53, "var": 53, "algebraicnumb": 53, "numbersymbol": 53, "realnumb": 53, "igcd": 53, "ilcm": 53, "seterr": 53, "One": 53, "negativeon": 53, "half": 53, "nan": [53, 130], "infin": 53, "negativeinfin": 53, "complexinfin": 53, "exp1": 53, "imaginaryunit": 53, "pi": 53, "eulergamma": 53, "catalan": [53, 58], "goldenratio": 53, "tribonacciconst": 53, "mod_invers": 53, "power": [53, 197, 202, 208, 212, 270, 276], "pow": 53, "integer_nthroot": 53, "integer_log": 53, "mul": 53, "prod": 53, "mod": 53, "rel": 53, "ne": 53, "lt": 53, "le": 53, "gt": 53, "ge": 53, "greaterthan": 53, "lessthan": 53, "unequ": 53, "strictgreaterthan": 53, "strictlessthan": 53, "multidimension": 53, "wildfunct": 53, "diff": 53, "functionclass": 53, "sub": [53, 94], "poleerror": 53, "count_op": 53, "expand_mul": 53, "expand_log": [53, 276], "expand_func": [53, 276], "expand_trig": [53, 276], "expand_complex": 53, "expand_multinomi": 53, "expand_power_exp": [53, 276], "expand_power_bas": [53, 276], "nfloat": 53, "evalfmixin": 53, "precisionexhaust": 53, "contain": 53, "tuplekind": 53, "exprtool": 53, "gcd_term": 53, "factor_term": 53, "numberkind": 53, "undefinedkind": 53, "booleankind": 53, "sort": 53, "default_sort_kei": 53, "random": [53, 220], "random_complex_numb": 53, "verify_numer": 53, "test_derivative_numer": 53, "_randrang": 53, "_randint": 53, "bottom_up": 53, "postorder_travers": 53, "preorder_travers": 53, "walk": [53, 271], "cryptographi": 54, "discret": [56, 220], "transform": [56, 78, 80, 95, 249], "fast": 56, "fourier": [56, 203], "theoret": 56, "walsh": 56, "hadamard": 56, "m\u00f6biu": 56, "convolut": 56, "cover": 56, "intersect": [56, 65, 208], "accuraci": 57, "error": [57, 61], "handl": [57, 219], "sum": 57, "combinatori": [58, 212], "bell": 58, "bernoulli": [58, 216], "binomi": 58, "euler": 58, "factori": [58, 188], "subfactori": 58, "factorial2": 58, "fallingfactori": 58, "fibonacci": 58, "tribonacci": 58, "harmon": [58, 61, 142, 167], "luca": 58, "genocchi": 58, "multifactori": 58, "risingfactori": 58, "stirl": 58, "nc": 58, "np": 58, "nt": 58, "elementari": [59, 187, 206, 208], "re": 59, "im": 59, "ab": 59, "conjug": 59, "polar_lift": 59, "periodic_argu": 59, "principal_branch": 59, "trigonometr": [59, 61, 209, 212, 276], "sin": 59, "co": 59, "tan": 59, "cot": 59, "sec": 59, "csc": 59, "sinc": 59, "asin": 59, "aco": 59, "atan": 59, "acot": 59, "asec": 59, "acsc": 59, "atan2": 59, "hyperbol": 59, "hyperbolicfunct": 59, "sinh": 59, "cosh": 59, "tanh": 59, "coth": 59, "sech": 59, "csch": 59, "asinh": 59, "acosh": 59, "atanh": 59, "acoth": 59, "asech": 59, "acsch": 59, "ceil": 59, "floor": 59, "roundfunct": 59, "frac": 59, "exponenti": [59, 61, 216, 276], "exp": 59, "lambertw": 59, "log": 59, "exp_polar": 59, "piecewis": 59, "exprcondpair": 59, "identityfunct": 59, "min": 59, "max": 59, "root": [59, 196, 212], "cbrt": 59, "real_root": 59, "diracdelta": 61, "heavisid": 61, "gamma": [61, 104], "beta": 61, "fresnel": 61, "logarithm": [61, 276], "bessel": 61, "airi": 61, "b": 61, "spline": 61, "riemann": 61, "zeta": 61, "ellipt": 61, "mathieu": 61, "jacobi": 61, "gegenbau": 61, "chebyshev": 61, "legendr": 61, "hermit": 61, "laguerr": 61, "spheric": 61, "curv": 62, "ellips": 63, "entiti": [64, 65, 186], "avail": 65, "usag": [65, 116, 134, 190, 250], "median": 65, "pappu": 65, "hexagon": 65, "theorem": [65, 78, 254], "futur": [65, 107, 116, 175], "work": [65, 199], "truth": [65, 83], "beyond": 65, "visual": [65, 133], "line": 66, "plane": [67, 78], "polygon": [69, 80], "about": [71, 219, 249, 277], "holonom": [71, 72, 73, 75, 76, 121], "convert": [72, 75, 190, 216, 265], "represent": [72, 76, 171, 184, 190], "meijer": [72, 75, 78, 210], "g": [72, 75, 78, 210], "intern": [74, 78, 80, 190, 193, 195, 213, 216], "multipl": [75, 184, 195], "seri": [75, 186, 197, 202, 203, 204, 207, 266], "expans": [75, 207, 210, 212, 266], "linear": [75, 89, 107, 112, 130, 131, 171, 199, 213, 216], "holonomicfunct": 76, "differentialoper": 76, "differentialoperatoralgebra": 76, "current": 77, "polar": [78, 138], "branch": 78, "argand": 78, "tabl": [78, 83, 210], "lookup": 78, "mellin": 78, "converg": 78, "laplac": 78, "thi": [78, 219], "valid": 78, "exist": 78, "formula": [78, 210], "todo": 80, "bug": 80, "over": [80, 199, 208], "polytop": 80, "For": 80, "2d": 80, "polyhedra": 80, "session": 81, "lie": [82, 216], "equival": [83, 133, 213], "manipul": [83, 89, 109, 192, 193, 196, 197, 219, 271], "infer": 83, "matrixcommon": 84, "matrixkind": 84, "dens": [85, 190, 191, 193], "immutablematrix": [85, 87], "block": 86, "matrixdetermin": 89, "matrixreduct": 89, "matrixsubspac": 89, "matrixeigen": 89, "matrixcalculu": 89, "matrixbas": 89, "except": [89, 95, 193, 236], "numpi": 89, "spars": [91, 92, 190, 191, 193], "immutablesparsematrix": 91, "ntheori": 93, "ecm": 93, "q": 93, "ufuncifi": 94, "aesara": [94, 200], "so": 94, "mathrm": [95, 275], "runtim": 95, "beam": [96, 97, 98], "bend": 97, "problem": [97, 195, 250], "continuum": 98, "truss": [98, 99], "control": [100, 101, 102, 103, 186], "pole": 101, "bode": 101, "impuls": 101, "respons": [101, 200], "step": [101, 219], "ramp": 101, "modul": [102, 136, 175, 182, 187, 188, 189, 190, 193, 195, 196, 213, 216, 217, 219, 232], "lti": 103, "high": 104, "energi": [104, 131], "hydrogen": 105, "wavefunct": 105, "potenti": [107, 130, 131, 175, 181, 251], "issu": [107, 116, 130, 175, 272], "advanc": [107, 175, 199, 271, 272], "featur": [107, 175, 267], "choic": 107, "coordin": [107, 120, 130, 186, 248, 249, 251, 253], "acceler": [107, 175, 183, 207], "interfac": [107, 175, 186, 220], "bodi": [108, 131, 254], "msub": 109, "find_dynamicsymbol": 109, "joint": [110, 127, 220], "framework": [110, 127], "pinjoint": 110, "prismaticjoint": 110, "jointsmethod": [110, 127], "kane": [111, 120, 123, 124, 128, 130], "lagrang": [111, 120, 125, 129, 130], "kanemethod": 111, "lagrangesmethod": 111, "mass": [113, 131, 254], "inertia": [113, 131, 175], "particl": [113, 131, 157], "rigidbodi": 113, "inertia_of_point_mass": 113, "linear_momentum": 113, "angular_momentum": 113, "kinetic_energi": 113, "potential_energi": 113, "lagrangian": [113, 131], "mechanics_print": 114, "mprint": 114, "mpprint": 114, "mlatex": 114, "symbolicsystem": [115, 134], "autolev": [116, 133], "dynam": 116, "onlin": 116, "fix": 116, "switch": 116, "bicycl": 118, "four": 119, "bar": 119, "linkag": 119, "nonminim": 120, "pendulum": 120, "multi": 121, "degre": 121, "freedom": 121, "roll": [122, 123, 124, 125], "disc": [122, 123, 124, 125], "constraint": 124, "forc": 124, "classic": [126, 193], "structur": [128, 129, 171, 213], "background": 130, "directli": [130, 249], "new_method": 130, "kwarg": 130, "a_and_b": 130, "slow": 130, "ha": 130, "zoo": 130, "oo": 130, "further": [130, 268], "rigid": 131, "dyadic": [131, 175, 176, 245, 248, 249], "momentum": 131, "angular": [131, 183], "momenta": 131, "kinet": 131, "user": [133, 213, 216, 217], "rough": 133, "link": 133, "gaussian": [135, 190, 191, 199], "optic": [135, 136], "medium": 137, "wave": 140, "pauli": 141, "quantum": [142, 153, 167], "oscil": [142, 167], "d": [142, 167], "anticommut": 143, "cartesian": 144, "state": [144, 153, 156, 164], "clebsch": 145, "gordan": 145, "coeffici": [145, 193], "circuit": 146, "constant": [148, 171], "dagger": 149, "gate": 150, "grover": 151, "hilbert": 152, "space": [152, 171, 210], "inner": 154, "helper": [156, 200], "box": 157, "qappli": 158, "qft": 159, "qubit": 160, "shor": 162, "spin": 163, "second": 166, "quantiz": 166, "dimension": 169, "analysi": 169, "philosophi": 171, "behind": 171, "literatur": [171, 194, 199], "prefix": 172, "convers": 173, "referencefram": [175, 176, 184], "dynamicsymbol": [175, 178], "essenti": [176, 178, 245, 247], "coordinatesym": 176, "field": [177, 181, 190, 193, 195, 199, 251, 253], "curl": [177, 181, 247, 251], "diverg": [177, 181, 247, 251, 254], "gradient": [177, 181, 247, 251], "scalar_potenti": [177, 247], "scalar_potential_differ": [177, 247], "is_conserv": [177, 247], "is_solenoid": [177, 247], "outer": 178, "time_deriv": 178, "kinemat": [179, 183], "kinematic_equ": 179, "init_vprint": 180, "vprint": 180, "vpprint": 180, "vlatex": 180, "scalar": [181, 251, 253], "conserv": [181, 251], "solenoid": [181, 251], "veloc": 183, "altern": 184, "basi": [184, 193, 195], "frame": 184, "wigner": 185, "credit": 185, "copyright": 185, "author": 185, "plotgrid": 186, "pyglet": 186, "mode": 186, "specifi": 186, "interv": [186, 208], "color": 186, "geometr": 186, "ascii": [186, 275], "art": 186, "agca": 187, "ring": [187, 190, 191], "ideal": 187, "homomorph": [187, 195], "syzygi": 187, "extens": [187, 199], "concept": 188, "divis": [188, 213], "euclidean": 188, "gcd": [188, 193, 199], "lcm": 188, "factor": [188, 193, 199, 216, 276], "groebner": [188, 193], "introduc": [189, 190], "domainmatrix": 189, "ddm": 189, "sdm": 189, "dup": 190, "dmp": 190, "polyr": 190, "polynomialr": 190, "choos": 190, "unifi": 190, "gf": 191, "p": [191, 195], "zz": 191, "qq": 191, "mpq": 191, "zz_i": 191, "qq_i": 191, "rr": 191, "cc": 191, "x": 191, "ex": 191, "quotient": 191, "level": 193, "multivari": [193, 199], "univari": [193, 199, 213], "remaind": 193, "subresult": 193, "configur": 193, "modular": 193, "undocu": 193, "main": 195, "decomposit": [195, 196, 199], "adic": 195, "valuat": 195, "find": [195, 196], "subfield": 195, "As": 195, "arithmet": 195, "extra": 196, "monomi": 196, "encod": 196, "formal": [196, 202], "partial": [196, 199, 218, 219], "fraction": [196, 199, 212, 276], "dispers": 196, "rs_seri": 197, "solve_lin_si": 198, "eqs_to_matrix": 198, "sympy_eqs_to_r": 198, "_solve_lin_si": 198, "_solve_lin_sys_compon": 198, "wester": 199, "articl": 199, "simpl": 199, "support": 199, "back": 199, "cyclotom": 199, "reduc": 199, "gr\u00f6bner": 199, "mistak": 200, "prettyprint": 200, "rcodeprint": 200, "mapl": 200, "javascript": 200, "julia": 200, "octav": 200, "matlab": 200, "rust": 200, "gtk": 200, "lambdaprint": 200, "latexprint": 200, "mathmlprint": 200, "pythoncodeprint": 200, "pythonprint": 200, "srepr": [200, 275], "strprinter": 200, "preview": 200, "codeprint": 200, "preced": 200, "dotprint": 200, "subexpress": [201, 212], "detect": 201, "compound": [206, 208, 220], "recurs": [206, 271], "gruntz": 207, "more": [207, 249, 270], "intuit": 207, "residu": 207, "finiteset": 208, "union": 208, "complement": 208, "symmetricdiffer": 208, "disjointunion": 208, "emptyset": 208, "universalset": 208, "natur": 208, "naturals0": 208, "imageset": 208, "rang": 208, "complexregion": 208, "powerset": 208, "setkind": 208, "hongguang": 209, "fu": 209, "rule": [209, 250], "notat": 210, "increment": 210, "decrement": 210, "indic": 210, "reduct": 210, "around": 210, "loos": 210, "end": 210, "confluenc": 210, "separatevar": 212, "nthroot": 212, "kroneckersimp": 212, "besselsimp": 212, "hypersimp": 212, "hypersimilar": 212, "nsimplifi": 212, "posifi": 212, "logcombin": [212, 276], "radsimp": 212, "rad_ration": 212, "collect_sqrt": 212, "collect_const": 212, "ratsimp": 212, "ratsimpmodprim": 212, "trigsimp": [212, 276], "powsimp": [212, 276], "powdenest": [212, 276], "combsimp": [212, 276], "denest": 212, "sqrtdenest": 212, "elimin": 212, "cse": 212, "opt_cs": 212, "tree_cs": 212, "hyperexpand": [212, 276], "epath": 212, "diophantin": [213, 218, 219], "classify_diop": 213, "diop_solv": 213, "diop_linear": 213, "base_solution_linear": 213, "diop_quadrat": 213, "diop_dn": 213, "cornacchia": 213, "diop_bf_dn": 213, "transformation_to_dn": 213, "transformation_to_norm": 213, "find_dn": 213, "diop_ternary_quadrat": 213, "square_factor": 213, "descent": 213, "diop_general_pythagorean": 213, "diop_general_sum_of_squar": 213, "diop_general_sum_of_even_pow": 213, "power_represent": 213, "sum_of_three_squar": 213, "sum_of_four_squar": 213, "sum_of_pow": 213, "sum_of_squar": 213, "merge_solut": 213, "pqa": 213, "parametrize_ternary_quadrat": 213, "diop_ternary_quadratic_norm": 213, "ldescent": 213, "gaussian_reduc": 213, "holzer": 213, "prime_as_sum_of_two_squar": 213, "sqf_normal": 213, "reconstruct": 213, "diophantinesolutionset": 213, "diophantineequationtyp": 213, "binaryquadrat": 213, "inhomogeneousternaryquadrat": 213, "homogeneousternaryquadraticnorm": 213, "homogeneousternaryquadrat": 213, "inhomogeneousgeneralquadrat": 213, "homogeneousgeneralquadrat": 213, "generalsumofsquar": 213, "generalpythagorean": 213, "cubicthu": 213, "generalsumofevenpow": 213, "inequ": [215, 218, 219], "od": [216, 218, 219], "dsolv": 216, "dsolve_system": 216, "classify_od": 216, "checkodesol": 216, "homogeneous_ord": 216, "infinitesim": 216, "checkinfsol": 216, "constantsimp": 216, "hint": [216, 217], "allhint": 216, "odesimp": 216, "constant_renumb": 216, "sol_simpl": 216, "1st_exact": 216, "1st_homogeneous_coeff_best": 216, "1st_homogeneous_coeff_subs_dep_div_indep": 216, "1st_homogeneous_coeff_subs_indep_div_dep": 216, "1st_linear": 216, "1st_rational_riccati": 216, "2nd_linear_airi": 216, "2nd_linear_bessel": 216, "liouvil": 216, "riccati_special_minus2": 216, "nth_linear_constant_coeff_homogen": 216, "nth_linear_constant_coeff_undetermined_coeffici": 216, "nth_linear_constant_coeff_variation_of_paramet": 216, "nth_linear_euler_eq_homogen": 216, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 216, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 216, "nth_algebra": 216, "nth_order_reduc": 216, "separ": 216, "almost_linear": 216, "linear_coeffici": 216, "separable_reduc": 216, "lie_group": 216, "2nd_hypergeometr": 216, "1st_power_seri": 216, "2nd_power_series_ordinari": 216, "2nd_power_series_regular": 216, "heurist": 216, "abaco1_simpl": 216, "abaco1_product": 216, "bivari": 216, "chi": 216, "abaco2_similar": 216, "function_sum": 216, "abaco2_unique_unknown": 216, "abaco2_unique_gener": 216, "riccati": 216, "riccati_norm": 216, "riccati_inverse_norm": 216, "riccati_reduc": 216, "construct_c": 216, "construct_d": 216, "rational_laurent_seri": 216, "compute_m_ybar": 216, "solve_aux_eq": 216, "remove_redundant_sol": 216, "get_gen_sol_from_part_sol": 216, "solve_riccati": 216, "canon": 216, "linodesolv": 216, "inform": [216, 217], "jordan": 216, "nonlinear": 216, "pde": [217, 218, 219], "pde_separ": 217, "pde_separate_add": 217, "pde_separate_mul": 217, "pdsolv": 217, "classify_pd": 217, "checkpdesol": 217, "pde_1st_linear_constant_coeff_homogen": 217, "pde_1st_linear_constant_coeff": 217, "pde_1st_linear_variable_coeff": 217, "ordinari": [218, 219], "deutil": 218, "recurr": 218, "de": [218, 219], "wrong": 219, "why": [219, 270], "we": 219, "emploi": 219, "return": 219, "search": 219, "deal": 219, "where": 219, "known": 219, "plan": 219, "linear_eq_to_matrix": 219, "linsolv": 219, "nonlinsolv": 219, "transolv": 219, "continu": [220, 276], "stochast": 220, "process": 220, "dim": [221, 222], "arrai": [221, 222], "contract": 221, "explicit": 222, "pytest": 229, "randomis": 230, "detail": [232, 233, 248], "routin": 233, "decor": 234, "enum": 235, "variat": 238, "memoiz": 240, "pkgdata": 242, "inspect": 243, "time": 244, "coordsys3d": [245, 249], "del": [245, 250, 251], "parametricregion": 245, "implicitregion": 245, "parametricintegr": 245, "orient": [246, 249], "axisorient": 246, "bodyorient": 246, "spaceorient": 246, "quaternionorient": 246, "matrix_to_vector": 247, "vector_integr": 247, "locat": 249, "orient_new": 249, "AND": 249, "quadrilater": 250, "third": 250, "curvilinear": 251, "applic": 254, "calcul": 254, "perimet": 254, "surfac": 254, "area": 254, "volum": 254, "flux": 254, "verifi": 254, "stoke": 254, "introductori": [264, 269], "quick": [265, 266, 268, 271, 272], "two": 268, "final": 268, "read": 268, "interest": 270, "understand": 271, "through": 271, "invari": 271, "prevent": 271, "shape": 272, "access": 272, "delet": 272, "insert": 272, "determin": 272, "rref": 272, "nullspac": 272, "columnspac": 272, "eigenvalu": 272, "eigenvector": 272, "next": 273, "preliminari": 274, "exercis": 274, "str": 275, "mathml": 275, "cancel": 276, "apart": 276, "gammasimp": 276}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})