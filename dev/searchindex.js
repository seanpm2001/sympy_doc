Search.setIndex({"docnames": ["citing", "contributing/build-docs", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/dev-setup", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/make-a-contribution", "explanation/active-deprecations", "explanation/glossary", "explanation/gotchas", "explanation/index", "explanation/solve_output", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/custom-functions", "guides/index", "guides/solving/index", "guides/solving/solve-equation-algebraically", "guides/solving/solving-guidance", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/four_bar_linkage_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/joints", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers"], "filenames": ["citing.md", "contributing/build-docs.rst", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/dev-setup.rst", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.rst", "contributing/make-a-contribution.rst", "explanation/active-deprecations.md", "explanation/glossary.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/solve_output.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/custom-functions.md", "guides/index.rst", "guides/solving/index.md", "guides/solving/solve-equation-algebraically.md", "guides/solving/solving-guidance.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/four_bar_linkage_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/joints.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst"], "titles": ["Citing SymPy", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Docstring Style Guide", "Contributing", "Making a Contribution", "List of active deprecations", "Glossary", "Gotchas and Pitfalls", "Explanations", "Solve Output by Type", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Writing Custom Functions", "How-to Guides", "Solve Equations", "Solve an Equation Algebraically", "Solving Guidance", "Welcome to SymPy\u2019s documentation!", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joints Framework (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "A four bar linkage", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Joints Framework in Physics/Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 16, 19, 20, 23, 24, 26, 27, 30, 31, 34, 35, 36, 37, 44, 45, 46, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 67, 77, 79, 81, 83, 84, 85, 87, 90, 94, 96, 97, 98, 102, 104, 105, 107, 109, 111, 112, 130, 131, 134, 144, 148, 161, 170, 172, 176, 182, 185, 187, 189, 191, 192, 194, 196, 197, 198, 200, 201, 208, 209, 211, 214, 217, 218, 219, 220, 221, 222, 225, 226, 230, 232, 233, 236, 237, 239, 240, 246, 247, 249, 250, 252, 254, 255, 266, 267, 269, 270, 272, 273, 276, 277, 278], "public": [0, 6, 36, 54, 55, 76, 191, 192, 194, 195, 199, 214, 217, 221, 235, 246], "us": [0, 1, 2, 4, 5, 6, 8, 11, 12, 14, 15, 17, 18, 19, 20, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 134, 135, 136, 139, 140, 142, 144, 146, 147, 148, 151, 153, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 248, 249, 251, 252, 254, 255, 257, 258, 263, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "meurer": 0, "A": [0, 3, 4, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 25, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 96, 97, 98, 100, 102, 104, 108, 109, 110, 111, 112, 113, 114, 117, 118, 121, 122, 127, 129, 132, 133, 134, 135, 136, 139, 141, 144, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 246, 247, 249, 250, 251, 252, 254, 255, 262, 268, 270, 272, 273, 277], "smith": [0, 10, 91, 190], "cp": [0, 46, 95, 189], "paprocki": 0, "m": [0, 1, 10, 12, 16, 18, 20, 28, 32, 36, 37, 42, 43, 45, 46, 50, 53, 54, 55, 56, 57, 59, 62, 64, 66, 70, 71, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 104, 106, 107, 109, 111, 112, 113, 114, 116, 117, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 143, 150, 164, 165, 168, 170, 172, 182, 186, 188, 189, 190, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 211, 213, 214, 217, 219, 220, 221, 222, 223, 226, 227, 233, 234, 236, 239, 241, 246, 248, 250, 254, 255, 267, 273, 276, 277, 278], "\u010dert\u00edk": 0, "o": [0, 1, 6, 11, 12, 16, 18, 27, 35, 36, 45, 46, 52, 54, 55, 60, 62, 64, 65, 67, 68, 70, 76, 79, 94, 98, 109, 112, 114, 116, 117, 129, 130, 131, 132, 134, 135, 157, 167, 178, 180, 182, 184, 194, 195, 197, 198, 201, 203, 208, 211, 217, 221, 226, 232, 239, 242, 243, 248, 251, 267], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 220], "ivanov": 0, "": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 79, 81, 82, 83, 84, 85, 87, 88, 90, 93, 94, 95, 96, 97, 98, 102, 104, 106, 108, 109, 111, 114, 117, 119, 123, 127, 132, 134, 138, 139, 140, 146, 147, 149, 151, 153, 154, 157, 161, 162, 164, 165, 167, 170, 172, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 221, 227, 232, 233, 234, 235, 236, 237, 239, 240, 242, 246, 247, 251, 252, 253, 254, 257, 265, 266, 267, 269, 270, 271, 272, 273, 277, 278], "moor": [0, 87, 90], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 4, 6, 7, 10, 11, 12, 19, 20, 28, 31, 32, 34, 36, 37, 38, 45, 46, 47, 48, 50, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 78, 79, 81, 83, 84, 85, 86, 87, 90, 94, 95, 96, 100, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 122, 129, 130, 131, 132, 134, 135, 139, 141, 147, 151, 163, 165, 167, 169, 170, 172, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 204, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 227, 230, 232, 235, 239, 240, 246, 248, 250, 254, 266, 267, 271, 272, 273, 276, 277, 278], "vig": 0, "granger": [0, 153], "BE": 0, "muller": 0, "rp": [0, 70, 139], "bonazzi": 0, "f": [0, 1, 6, 10, 11, 12, 16, 20, 23, 34, 35, 36, 37, 44, 45, 46, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 72, 77, 78, 79, 81, 83, 85, 87, 90, 94, 95, 96, 98, 102, 111, 112, 116, 122, 127, 129, 130, 134, 136, 140, 141, 152, 153, 156, 165, 167, 170, 177, 181, 182, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 200, 201, 203, 204, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 226, 227, 232, 233, 234, 235, 236, 239, 240, 242, 251, 252, 255, 266, 267, 272, 276, 277, 278], "gupta": [0, 220], "h": [0, 12, 16, 34, 35, 36, 37, 38, 45, 50, 53, 54, 55, 59, 62, 76, 79, 81, 85, 86, 90, 91, 96, 104, 114, 132, 136, 139, 151, 153, 156, 161, 165, 172, 186, 187, 188, 189, 190, 194, 195, 196, 197, 200, 201, 209, 213, 217, 219, 220, 221, 222, 227, 234, 255, 267, 276], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 153], "mj": 0, "terrel": 0, "ar": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 144, 146, 148, 151, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 254, 256, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 150, 151, 153, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 266, 267, 269, 270, 272, 273, 275, 276, 277, 278], "kulal": 0, "cimrman": 0, "r": [0, 1, 6, 7, 10, 12, 16, 18, 20, 28, 35, 36, 37, 38, 45, 46, 54, 55, 56, 58, 59, 60, 67, 68, 70, 72, 76, 77, 79, 81, 90, 94, 96, 98, 100, 104, 106, 109, 112, 113, 114, 116, 117, 119, 121, 124, 125, 126, 131, 132, 133, 134, 135, 136, 139, 163, 164, 167, 168, 170, 177, 178, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 208, 209, 211, 213, 214, 217, 219, 220, 221, 227, 232, 234, 236, 246, 248, 250, 251, 252, 255, 277], "scopatz": 0, "2017": [0, 186], "symbol": [0, 3, 6, 7, 10, 11, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 44, 46, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 81, 82, 84, 85, 87, 90, 94, 95, 96, 97, 98, 100, 101, 102, 104, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 132, 134, 136, 139, 140, 141, 142, 144, 146, 147, 149, 151, 153, 155, 156, 159, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 233, 239, 240, 246, 247, 248, 250, 251, 252, 255, 257, 262, 266, 267, 270, 272, 273, 276, 277, 278], "comput": [0, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 26, 28, 34, 36, 37, 38, 41, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 69, 73, 76, 77, 78, 80, 81, 83, 85, 87, 90, 91, 93, 94, 96, 98, 102, 104, 108, 111, 112, 113, 116, 117, 119, 120, 124, 127, 134, 151, 152, 153, 161, 166, 167, 169, 171, 172, 176, 178, 182, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 206, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 223, 233, 236, 239, 240, 246, 247, 248, 249, 250, 251, 252, 254, 257, 262, 266, 267, 269, 270, 273, 277], "python": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 15, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 34, 46, 54, 55, 58, 60, 66, 82, 84, 85, 87, 90, 94, 95, 96, 97, 108, 117, 134, 177, 187, 188, 189, 191, 192, 198, 200, 201, 209, 213, 217, 220, 222, 232, 233, 234, 235, 236, 239, 240, 242, 246, 258, 269, 270, 271, 272, 273, 275, 276, 277], "peerj": 0, "scienc": [0, 46, 79, 90, 133, 134, 188, 195, 211, 267], "3": [0, 4, 5, 7, 12, 14, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 31, 32, 33, 34, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 109, 110, 114, 116, 119, 120, 121, 122, 124, 125, 126, 127, 130, 131, 134, 135, 136, 138, 140, 144, 146, 147, 148, 152, 156, 161, 162, 164, 166, 167, 170, 173, 174, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 232, 233, 235, 236, 237, 239, 240, 242, 244, 246, 247, 248, 249, 250, 252, 254, 255, 262, 266, 267, 269, 271, 272, 273, 276, 277, 278], "e103": 0, "http": [0, 1, 3, 4, 5, 6, 7, 10, 18, 20, 26, 28, 30, 31, 32, 34, 35, 36, 38, 42, 43, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 70, 71, 72, 76, 79, 81, 82, 83, 84, 85, 87, 90, 94, 97, 102, 104, 106, 107, 136, 138, 139, 140, 142, 143, 144, 148, 149, 150, 153, 155, 156, 165, 167, 177, 179, 181, 183, 186, 195, 197, 200, 201, 204, 206, 208, 209, 210, 213, 214, 217, 220, 221, 233, 234, 235, 237, 239, 240, 242, 246, 247, 251, 253, 255, 273, 276], "doi": [0, 6, 34, 46, 90, 195, 210, 213, 221], "org": [0, 3, 6, 7, 12, 18, 20, 28, 30, 31, 32, 34, 35, 36, 42, 43, 45, 46, 53, 54, 55, 56, 57, 59, 60, 62, 64, 66, 70, 71, 72, 81, 82, 83, 84, 85, 87, 90, 94, 102, 104, 106, 107, 136, 138, 139, 140, 142, 143, 144, 148, 149, 150, 153, 155, 156, 165, 167, 177, 179, 181, 183, 195, 197, 201, 204, 208, 209, 210, 214, 217, 220, 221, 233, 234, 235, 237, 239, 246, 247, 251, 253, 255, 273, 276], "10": [0, 3, 6, 12, 20, 24, 26, 28, 34, 36, 43, 45, 46, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 67, 68, 70, 71, 79, 81, 82, 84, 85, 87, 90, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 110, 114, 117, 119, 128, 134, 136, 140, 151, 161, 162, 173, 177, 178, 179, 180, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 204, 207, 208, 209, 210, 213, 214, 217, 220, 221, 222, 231, 232, 237, 239, 240, 242, 246, 248, 266, 273, 277], "7717": 0, "c": [0, 1, 3, 11, 12, 16, 18, 20, 27, 28, 34, 35, 38, 39, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 59, 60, 62, 63, 64, 66, 67, 68, 70, 71, 77, 79, 81, 83, 84, 85, 87, 90, 94, 95, 96, 97, 98, 100, 104, 106, 108, 110, 111, 112, 117, 122, 124, 125, 126, 130, 131, 132, 134, 136, 140, 146, 147, 148, 151, 153, 156, 161, 164, 166, 167, 172, 177, 180, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 226, 227, 233, 234, 236, 239, 242, 243, 246, 247, 248, 249, 250, 251, 252, 255, 258, 264, 267, 269, 276, 277, 278], "103": [0, 45], "bibtex": 0, "entri": [0, 10, 32, 37, 44, 46, 52, 55, 66, 79, 83, 85, 86, 87, 89, 93, 112, 117, 119, 132, 139, 190, 194, 196, 197, 211, 221, 240], "latex": [0, 1, 3, 6, 11, 20, 24, 26, 62, 82, 176, 177, 181, 185, 187, 192, 201, 264, 271, 272], "user": [0, 1, 3, 4, 5, 6, 7, 10, 11, 15, 17, 18, 20, 35, 36, 37, 45, 46, 53, 54, 55, 56, 62, 66, 79, 83, 87, 90, 96, 97, 98, 102, 104, 108, 117, 127, 130, 132, 135, 155, 156, 165, 171, 172, 176, 177, 180, 184, 188, 191, 194, 196, 198, 199, 200, 201, 202, 210, 213, 215, 219, 220, 221, 230, 233, 234, 236, 237, 240, 246, 249, 250, 255, 266, 269, 270, 272, 273, 274], "articl": [0, 54, 55, 87, 90, 193, 195, 196, 201, 246, 271], "titl": [0, 6, 7, 187], "author": [0, 6, 94, 153, 196, 262], "aaron": 0, "christoph": [0, 246], "p": [0, 1, 10, 11, 12, 16, 18, 19, 20, 28, 30, 31, 32, 36, 37, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 68, 69, 70, 71, 76, 77, 79, 81, 85, 87, 90, 94, 96, 97, 98, 100, 104, 105, 109, 111, 112, 113, 114, 116, 117, 121, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 146, 165, 167, 172, 178, 180, 182, 184, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 201, 203, 204, 208, 209, 211, 213, 214, 217, 219, 220, 221, 222, 226, 227, 239, 246, 248, 249, 250, 251, 252, 254, 273, 277], "mateusz": 0, "v": [0, 1, 5, 14, 23, 24, 28, 36, 44, 50, 53, 54, 55, 56, 57, 58, 62, 68, 79, 83, 85, 90, 94, 98, 109, 110, 111, 114, 119, 131, 132, 134, 135, 139, 140, 152, 167, 172, 177, 179, 180, 182, 184, 185, 187, 193, 194, 195, 196, 197, 201, 211, 213, 214, 217, 219, 221, 232, 239, 246, 248, 249, 250, 251, 252, 254], "ert": 0, "k": [0, 7, 12, 14, 18, 20, 28, 34, 35, 36, 37, 38, 40, 44, 45, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 62, 67, 72, 79, 81, 84, 85, 87, 90, 94, 111, 112, 122, 129, 131, 132, 134, 141, 155, 156, 159, 163, 165, 167, 176, 182, 186, 188, 190, 191, 193, 194, 195, 196, 197, 198, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 217, 219, 221, 222, 223, 225, 226, 227, 228, 232, 236, 239, 246, 247, 248, 249, 250, 251, 252, 254, 255, 276, 277], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 5, 10, 11, 12, 14, 18, 19, 20, 28, 35, 36, 37, 38, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 77, 79, 81, 83, 84, 85, 86, 87, 90, 94, 96, 97, 98, 100, 102, 104, 109, 110, 111, 112, 113, 114, 117, 121, 122, 131, 132, 134, 136, 139, 144, 146, 148, 150, 155, 156, 159, 164, 165, 166, 167, 177, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 232, 235, 236, 239, 242, 246, 247, 248, 249, 250, 251, 267, 269, 273, 277, 278], "matthew": 0, "amit": [0, 220], "sergiu": 0, "jason": [0, 201], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 153], "e": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 18, 19, 20, 24, 27, 28, 32, 34, 35, 36, 37, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 76, 77, 79, 81, 83, 84, 85, 90, 94, 96, 97, 98, 100, 104, 105, 109, 112, 114, 116, 117, 130, 131, 134, 135, 136, 139, 146, 147, 151, 156, 157, 159, 162, 164, 166, 167, 172, 173, 177, 181, 182, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 246, 249, 252, 254, 255, 266, 267, 271, 272, 277], "richard": [0, 94], "francesco": 0, "harsh": [0, 220], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 7, 10, 12, 28, 32, 34, 36, 37, 40, 44, 45, 46, 50, 52, 53, 55, 56, 58, 59, 62, 76, 79, 81, 83, 85, 87, 90, 94, 102, 105, 111, 132, 133, 134, 139, 146, 147, 164, 167, 172, 176, 182, 186, 188, 190, 192, 194, 195, 196, 197, 198, 200, 201, 203, 209, 211, 213, 214, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 233, 239, 246, 247, 248, 249, 250, 251, 252, 254, 255], "andi": [0, 133], "rou": 0, "ka": 0, "n": [0, 5, 6, 7, 11, 12, 16, 18, 20, 23, 27, 32, 34, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 50, 52, 53, 55, 56, 58, 59, 60, 62, 64, 67, 68, 69, 70, 71, 76, 77, 79, 81, 83, 84, 85, 87, 90, 91, 94, 96, 97, 98, 100, 104, 106, 107, 109, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 138, 140, 141, 143, 147, 152, 153, 156, 161, 163, 164, 165, 167, 168, 170, 172, 174, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 219, 220, 221, 224, 226, 227, 230, 233, 239, 241, 242, 246, 247, 248, 249, 250, 254, 267, 273, 276, 277, 278], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 221], "anthoni": 0, "year": [0, 4, 6, 10], "month": 0, "jan": [0, 55], "keyword": [0, 4, 6, 11, 14, 20, 35, 36, 37, 45, 46, 54, 55, 58, 59, 67, 69, 70, 71, 85, 90, 94, 97, 102, 104, 112, 129, 130, 161, 167, 181, 187, 189, 191, 192, 194, 196, 197, 200, 201, 202, 208, 213, 214, 219, 226, 232, 233, 235, 237, 240, 242, 250, 273], "algebra": [0, 7, 11, 12, 14, 18, 22, 24, 31, 37, 45, 54, 55, 58, 60, 72, 75, 76, 77, 79, 81, 84, 85, 89, 91, 94, 95, 96, 116, 127, 134, 135, 183, 186, 189, 190, 192, 193, 194, 195, 197, 198, 201, 203, 211, 214, 215, 217, 220, 256, 257, 260, 262, 263, 268, 269, 271, 273], "system": [0, 1, 2, 3, 5, 7, 10, 11, 12, 14, 15, 16, 19, 20, 22, 29, 31, 45, 54, 55, 56, 60, 79, 82, 83, 84, 85, 90, 95, 96, 97, 100, 101, 103, 104, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 134, 145, 146, 161, 164, 165, 167, 170, 174, 177, 180, 181, 182, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 199, 200, 201, 209, 210, 215, 216, 220, 221, 232, 233, 246, 247, 248, 251, 253, 255, 262, 269, 271, 273, 277, 278], "abstract": [0, 10, 34, 35, 43, 54, 56, 60, 62, 67, 72, 87, 111, 117, 151, 153, 162, 165, 166, 167, 188, 193, 196, 220, 221, 223, 227, 234, 254, 258], "an": [0, 1, 3, 4, 6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 108, 109, 111, 112, 114, 116, 119, 121, 127, 129, 131, 132, 134, 135, 138, 139, 140, 144, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 160, 161, 162, 164, 165, 167, 168, 169, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 246, 247, 249, 250, 252, 253, 254, 255, 263, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278], "open": [0, 1, 3, 4, 6, 7, 9, 10, 23, 26, 34, 54, 56, 60, 81, 84, 104, 117, 120, 134, 201, 209, 216, 220, 221, 243, 271, 273], "sourc": [0, 1, 5, 6, 7, 11, 20, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 186, 187, 188, 190, 191, 192, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 252, 264, 271], "written": [0, 3, 6, 7, 11, 18, 20, 32, 36, 42, 45, 46, 50, 54, 59, 62, 66, 72, 77, 79, 83, 84, 93, 94, 121, 127, 134, 167, 182, 183, 184, 185, 188, 189, 197, 201, 204, 208, 211, 214, 217, 234, 252, 254, 270, 271, 272, 277], "pure": [0, 3, 11, 23, 28, 55, 60, 81, 84, 87, 104, 131, 172, 191, 192, 194, 197, 201, 221, 239], "It": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 16, 18, 19, 20, 23, 26, 28, 29, 30, 31, 34, 35, 36, 42, 45, 46, 48, 49, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 70, 71, 77, 79, 81, 83, 84, 90, 94, 95, 96, 97, 98, 100, 102, 104, 106, 108, 109, 110, 111, 112, 117, 119, 125, 127, 128, 129, 130, 132, 134, 136, 140, 141, 151, 156, 157, 162, 163, 164, 165, 166, 167, 169, 172, 175, 177, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 201, 204, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 232, 233, 234, 235, 236, 237, 240, 246, 248, 249, 250, 252, 254, 255, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277], "built": [0, 1, 3, 6, 7, 11, 12, 15, 29, 31, 37, 54, 60, 81, 117, 134, 189, 192, 201, 202, 206, 217, 220, 221, 227, 236, 239, 240, 271, 272, 276], "focu": [0, 10, 18, 64, 219, 271], "extens": [0, 3, 6, 7, 18, 20, 45, 54, 59, 60, 66, 70, 81, 90, 114, 134, 189, 191, 192, 193, 194, 195, 196, 197, 201, 211, 213, 217, 219, 220, 233, 234, 243, 270, 277], "eas": [0, 117, 185, 187, 201, 204], "through": [0, 4, 6, 11, 12, 18, 20, 23, 24, 26, 34, 36, 45, 46, 48, 53, 54, 55, 58, 59, 62, 64, 65, 66, 67, 68, 70, 79, 83, 84, 90, 94, 97, 98, 102, 109, 112, 117, 119, 127, 132, 138, 139, 177, 187, 188, 194, 196, 201, 207, 211, 213, 217, 219, 220, 221, 222, 233, 239, 246, 247, 252, 255, 268, 269, 270, 275], "both": [0, 3, 4, 6, 7, 10, 11, 12, 15, 18, 19, 20, 23, 27, 28, 34, 35, 36, 46, 49, 50, 52, 53, 54, 55, 59, 60, 62, 69, 78, 79, 81, 84, 85, 90, 94, 96, 97, 98, 104, 109, 111, 112, 119, 121, 122, 128, 131, 139, 140, 151, 157, 164, 167, 172, 177, 180, 184, 185, 187, 188, 189, 191, 192, 194, 196, 197, 199, 200, 201, 203, 208, 209, 210, 211, 213, 214, 217, 219, 220, 222, 226, 232, 234, 239, 240, 246, 247, 267, 270, 271, 272, 277, 278], "interact": [0, 11, 14, 23, 27, 54, 68, 81, 88, 90, 134, 164, 181, 185, 191, 192, 213, 221, 237, 244, 256, 263, 264, 269, 271, 272, 276, 277], "programmat": [0, 11, 14, 15, 24, 220, 250], "applic": [0, 7, 10, 23, 37, 38, 44, 45, 46, 47, 54, 55, 60, 81, 85, 90, 94, 97, 100, 112, 116, 117, 127, 131, 133, 134, 151, 152, 177, 180, 184, 189, 194, 195, 196, 197, 201, 203, 208, 214, 217, 220, 234, 239, 246, 252, 253, 271], "These": [0, 3, 6, 7, 10, 11, 12, 13, 14, 16, 18, 19, 20, 24, 25, 27, 35, 36, 45, 53, 54, 55, 56, 62, 79, 81, 84, 90, 96, 98, 104, 112, 113, 119, 121, 125, 128, 131, 134, 157, 162, 163, 177, 178, 182, 184, 185, 188, 189, 190, 191, 192, 194, 197, 201, 211, 214, 217, 218, 220, 221, 223, 228, 232, 233, 234, 239, 252, 267, 270, 273, 276, 277], "characterist": [0, 56, 72, 90, 184, 190, 192, 194, 195, 217, 219, 273], "have": [0, 1, 4, 5, 6, 7, 11, 12, 15, 16, 18, 19, 20, 24, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 69, 70, 72, 77, 78, 79, 81, 83, 84, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 102, 104, 105, 107, 108, 111, 112, 114, 117, 118, 119, 125, 127, 128, 131, 134, 151, 153, 156, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 203, 204, 206, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 222, 225, 227, 228, 230, 231, 232, 234, 235, 236, 239, 240, 242, 246, 247, 249, 250, 251, 252, 255, 266, 267, 269, 270, 271, 272, 273, 276, 277, 278], "led": 0, "becom": [0, 4, 6, 7, 10, 11, 12, 16, 18, 45, 50, 53, 54, 55, 58, 77, 82, 90, 96, 181, 184, 188, 189, 191, 198, 201, 204, 210, 217, 220, 221, 227, 242, 248, 250, 277], "popular": [0, 3, 55, 95, 134, 271], "librari": [0, 3, 4, 6, 10, 11, 18, 20, 25, 26, 36, 54, 55, 59, 79, 81, 82, 90, 95, 108, 117, 134, 187, 191, 192, 221, 232, 233, 234, 239, 240, 266, 269, 270, 271], "scientif": [0, 11, 26, 54, 134], "ecosystem": 0, "thi": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142, 144, 146, 147, 148, 150, 151, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278], "paper": [0, 6, 94, 119, 185, 196, 197, 210, 211, 214, 217, 221], "present": [0, 3, 7, 10, 11, 12, 16, 34, 35, 38, 41, 45, 46, 48, 52, 54, 57, 81, 90, 94, 97, 100, 102, 104, 112, 119, 167, 169, 177, 179, 181, 182, 187, 188, 194, 195, 196, 200, 201, 214, 220, 234, 240, 243, 248, 249, 250, 254, 278], "architectur": [0, 134, 191, 232], "descript": [0, 4, 6, 7, 10, 22, 25, 35, 37, 44, 62, 81, 94, 139, 157, 164, 175, 184, 185, 186, 201, 225, 232, 234, 236, 237, 256, 274], "its": [0, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 24, 28, 30, 31, 32, 35, 36, 37, 38, 42, 44, 45, 46, 53, 54, 55, 56, 59, 60, 62, 64, 66, 70, 72, 79, 81, 82, 84, 85, 87, 90, 94, 96, 97, 98, 100, 104, 108, 109, 112, 114, 117, 119, 120, 121, 127, 128, 131, 132, 134, 135, 140, 146, 152, 153, 155, 156, 161, 162, 165, 167, 172, 174, 177, 178, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 213, 216, 217, 219, 220, 221, 225, 226, 227, 232, 235, 236, 239, 240, 243, 246, 248, 249, 250, 252, 255, 271, 272, 273, 276, 277], "featur": [0, 3, 4, 7, 10, 12, 13, 20, 25, 26, 54, 56, 58, 85, 96, 117, 127, 134, 183, 201, 217, 221, 230, 234, 237, 253, 265, 270, 271, 275, 277], "discuss": [0, 4, 6, 7, 10, 12, 13, 14, 16, 18, 19, 20, 25, 37, 45, 55, 62, 94, 108, 112, 117, 127, 131, 132, 176, 183, 184, 185, 191, 227, 236, 256, 266, 268, 269, 271, 272, 274, 276, 277], "select": [0, 1, 13, 14, 25, 36, 38, 45, 46, 53, 54, 55, 63, 68, 82, 84, 85, 94, 96, 110, 132, 172, 181, 191, 192, 194, 195, 197, 201, 210, 213, 219], "submodul": [0, 3, 4, 6, 11, 36, 108, 188, 192, 194, 196], "The": [0, 1, 3, 5, 6, 7, 8, 11, 12, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 253, 254, 255, 262, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278], "supplementari": 0, "materi": [0, 97, 138, 275], "provid": [0, 1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 22, 25, 28, 34, 35, 36, 37, 43, 44, 45, 46, 52, 53, 54, 56, 58, 62, 63, 65, 70, 73, 76, 77, 81, 82, 84, 85, 87, 90, 91, 93, 94, 95, 96, 98, 100, 102, 108, 109, 112, 114, 116, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 134, 135, 140, 141, 161, 169, 170, 171, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 204, 206, 209, 210, 211, 213, 217, 218, 219, 220, 221, 222, 226, 227, 232, 233, 234, 236, 237, 239, 240, 242, 246, 248, 249, 250, 252, 253, 255, 267, 271, 272, 273, 277], "addit": [0, 3, 4, 7, 10, 11, 12, 14, 16, 26, 36, 44, 45, 46, 53, 54, 60, 62, 66, 72, 74, 78, 79, 81, 82, 84, 87, 90, 96, 101, 102, 104, 108, 109, 112, 131, 132, 135, 153, 165, 166, 169, 181, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 201, 207, 210, 211, 213, 214, 217, 218, 219, 220, 221, 232, 233, 234, 236, 237, 239, 240, 242, 249, 269, 271, 272, 273, 276, 277], "exampl": [0, 2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 16, 18, 19, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 102, 104, 106, 107, 109, 110, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 161, 162, 164, 165, 166, 167, 168, 169, 171, 173, 174, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 202, 203, 204, 206, 207, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 224, 225, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 252, 253, 254, 255, 257, 261, 262, 263, 266, 267, 268, 269, 270, 272, 273, 275, 276, 278], "further": [0, 3, 5, 18, 20, 31, 35, 55, 60, 62, 66, 79, 81, 86, 87, 90, 96, 97, 101, 102, 109, 111, 112, 127, 132, 139, 184, 186, 187, 188, 194, 196, 197, 210, 211, 213, 217, 221, 227, 270, 271], "outlin": [0, 3, 4, 18, 20, 52, 81, 188, 217], "detail": [0, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 18, 20, 25, 35, 45, 54, 56, 59, 61, 62, 79, 80, 81, 82, 85, 90, 94, 102, 111, 112, 117, 132, 134, 139, 157, 161, 177, 179, 186, 187, 188, 194, 196, 203, 208, 213, 214, 215, 217, 218, 221, 226, 227, 232, 235, 237, 238, 240, 250, 251, 252, 253, 256, 267, 269, 273, 274, 276], "volum": [0, 6, 36, 53, 62, 79, 186, 195, 211, 214, 217, 236, 246, 253], "page": [0, 1, 3, 4, 6, 7, 10, 11, 12, 18, 19, 22, 23, 25, 36, 37, 53, 59, 79, 94, 95, 112, 134, 172, 187, 190, 191, 192, 195, 201, 211, 214, 237, 254, 277], "journal": [0, 6, 53, 59, 94, 105, 195, 213, 236], "issn": 0, "2376": 0, "5992": 0, "url": [0, 55, 237], "bsd": [0, 1, 3, 271], "licens": [0, 1, 3, 271], "so": [0, 3, 4, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 43, 45, 46, 48, 50, 52, 54, 55, 58, 60, 62, 64, 66, 67, 68, 70, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 90, 91, 94, 96, 97, 98, 104, 108, 112, 117, 119, 121, 127, 129, 131, 134, 135, 140, 151, 153, 161, 163, 164, 165, 167, 169, 171, 172, 176, 177, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 225, 226, 230, 232, 233, 236, 237, 239, 240, 242, 251, 255, 257, 266, 267, 269, 271, 272, 273, 276, 277, 278], "you": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 15, 19, 20, 22, 23, 25, 26, 27, 30, 31, 32, 34, 36, 37, 45, 46, 53, 54, 55, 56, 58, 60, 61, 62, 66, 68, 70, 72, 73, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 94, 95, 96, 104, 106, 107, 108, 112, 113, 114, 117, 118, 128, 129, 131, 132, 134, 156, 161, 162, 165, 167, 176, 177, 179, 182, 184, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 201, 202, 204, 208, 209, 213, 214, 217, 218, 219, 220, 221, 225, 226, 227, 230, 232, 233, 234, 235, 237, 239, 240, 243, 249, 250, 251, 252, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278], "free": [0, 10, 11, 26, 34, 35, 36, 41, 44, 45, 50, 54, 66, 81, 85, 87, 90, 94, 97, 98, 102, 105, 127, 136, 156, 174, 177, 183, 187, 188, 192, 193, 194, 196, 197, 201, 203, 209, 211, 213, 214, 217, 219, 220, 227, 239, 271], "howev": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 29, 31, 36, 45, 46, 50, 53, 54, 55, 56, 59, 60, 62, 64, 79, 81, 84, 85, 90, 94, 95, 96, 97, 100, 117, 131, 135, 167, 185, 187, 188, 189, 191, 192, 194, 196, 197, 198, 200, 201, 202, 208, 209, 210, 211, 213, 217, 218, 219, 220, 232, 233, 240, 249, 250, 254, 266, 269, 271, 273, 277, 278], "like": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 18, 19, 20, 24, 25, 26, 36, 37, 39, 45, 46, 53, 54, 55, 58, 59, 60, 62, 64, 74, 77, 81, 82, 84, 85, 87, 88, 89, 90, 94, 95, 96, 100, 104, 108, 114, 117, 119, 128, 131, 132, 134, 135, 149, 151, 161, 162, 165, 166, 167, 172, 176, 177, 180, 182, 184, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 200, 201, 204, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 227, 228, 230, 232, 233, 234, 235, 239, 240, 242, 243, 249, 250, 252, 254, 266, 267, 269, 270, 271, 272, 273, 277], "academ": [0, 35, 38, 195], "commerci": [0, 271], "creat": [0, 3, 4, 5, 6, 7, 9, 11, 18, 19, 23, 24, 30, 35, 36, 37, 43, 45, 46, 54, 55, 56, 58, 60, 61, 62, 64, 66, 67, 69, 70, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 100, 104, 109, 111, 112, 114, 117, 120, 121, 122, 124, 126, 128, 130, 131, 132, 134, 135, 144, 146, 148, 152, 155, 156, 157, 161, 162, 164, 165, 167, 170, 173, 176, 177, 179, 180, 184, 185, 187, 188, 190, 191, 192, 194, 196, 197, 198, 201, 208, 213, 217, 220, 221, 222, 226, 227, 232, 233, 234, 236, 237, 239, 240, 246, 250, 252, 267, 269, 272, 273, 276, 277, 278], "fork": [0, 5, 7, 10, 119], "deriv": [0, 6, 10, 11, 17, 20, 23, 34, 35, 36, 38, 44, 45, 56, 60, 61, 62, 64, 71, 76, 77, 79, 81, 82, 84, 87, 90, 100, 104, 108, 110, 111, 112, 116, 119, 121, 122, 124, 127, 129, 130, 131, 132, 156, 165, 169, 172, 173, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 192, 194, 196, 197, 198, 201, 203, 211, 213, 217, 218, 219, 223, 224, 228, 234, 246, 248, 249, 268, 271, 278], "long": [0, 6, 7, 8, 24, 36, 46, 53, 54, 55, 57, 67, 79, 81, 82, 84, 90, 94, 97, 98, 119, 181, 197, 198, 201, 210, 211, 219, 221, 233, 242, 248, 269, 272], "copi": [0, 1, 5, 10, 12, 18, 37, 46, 47, 54, 70, 90, 94, 95, 190, 192, 194, 196, 200, 201, 208, 219, 232, 239, 242, 276], "statement": [0, 6, 18, 19, 20, 26, 35, 36, 54, 62, 79, 84, 87, 117, 146, 201, 221, 230, 234, 239], "redistribut": [0, 197], "see": [0, 1, 3, 4, 7, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 25, 29, 30, 31, 32, 34, 35, 36, 40, 42, 45, 46, 47, 50, 53, 55, 56, 59, 60, 61, 62, 66, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 90, 91, 94, 95, 96, 102, 108, 111, 112, 123, 125, 129, 131, 132, 136, 139, 142, 143, 152, 156, 157, 161, 162, 163, 164, 166, 167, 170, 172, 177, 181, 184, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 203, 204, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 226, 227, 230, 232, 233, 234, 235, 236, 237, 240, 241, 246, 247, 255, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278], "file": [0, 1, 3, 4, 5, 6, 7, 11, 12, 36, 90, 117, 134, 156, 201, 208, 211, 213, 230, 232, 233, 234, 240, 243], "That": [0, 4, 7, 11, 12, 18, 19, 20, 54, 55, 60, 84, 90, 127, 164, 169, 175, 184, 185, 188, 189, 191, 192, 194, 196, 207, 208, 217, 221, 233, 234, 240, 266, 269, 272, 277], "said": [0, 4, 11, 28, 32, 36, 40, 94, 172, 182, 184, 185, 189, 217, 220, 221, 246, 252], "although": [0, 3, 4, 6, 7, 11, 12, 15, 16, 18, 20, 46, 54, 55, 60, 66, 78, 79, 82, 84, 85, 87, 90, 94, 97, 108, 119, 134, 188, 191, 192, 194, 196, 197, 209, 210, 213, 214, 219, 233, 239, 240, 269, 272, 277], "requir": [0, 3, 6, 7, 8, 10, 11, 12, 20, 24, 26, 36, 45, 54, 55, 57, 58, 62, 64, 65, 67, 68, 71, 73, 84, 90, 93, 94, 95, 96, 97, 102, 108, 109, 112, 114, 116, 117, 119, 121, 132, 141, 164, 176, 177, 179, 187, 188, 191, 192, 194, 196, 198, 201, 204, 210, 211, 214, 217, 219, 220, 221, 225, 232, 233, 234, 235, 237, 239, 240, 248, 249, 250, 273, 275], "conveni": [0, 1, 10, 11, 12, 23, 24, 27, 34, 36, 46, 54, 55, 59, 62, 81, 84, 96, 117, 134, 176, 179, 184, 185, 187, 188, 189, 190, 191, 192, 196, 199, 208, 209, 213, 219, 225, 226, 233, 235, 236, 240, 252, 267, 269], "pleas": [0, 4, 6, 7, 9, 10, 23, 26, 32, 34, 54, 62, 66, 79, 94, 108, 112, 117, 127, 131, 132, 139, 140, 161, 176, 185, 186, 187, 188, 194, 195, 209, 213, 214, 219, 220, 240, 246, 250, 274, 278], "when": [0, 1, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 23, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 78, 80, 81, 82, 84, 85, 86, 90, 94, 95, 96, 100, 102, 104, 105, 108, 111, 117, 119, 125, 127, 129, 130, 131, 132, 135, 140, 141, 146, 151, 152, 156, 159, 161, 169, 170, 171, 176, 181, 184, 185, 187, 188, 189, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 225, 226, 230, 232, 233, 234, 235, 237, 239, 240, 242, 243, 245, 249, 267, 269, 271, 272, 277, 278], "your": [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 20, 22, 24, 26, 30, 54, 55, 81, 82, 90, 95, 96, 104, 108, 129, 131, 185, 187, 201, 208, 213, 217, 220, 221, 239, 240, 267, 271, 273, 274, 276, 277], "work": [0, 1, 3, 4, 6, 10, 11, 12, 15, 16, 18, 19, 20, 26, 29, 31, 34, 35, 36, 45, 46, 47, 54, 55, 58, 62, 79, 81, 83, 84, 85, 87, 90, 91, 94, 96, 108, 111, 117, 119, 128, 132, 134, 147, 151, 156, 160, 161, 162, 163, 166, 169, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 201, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 227, 232, 233, 234, 236, 239, 240, 241, 242, 249, 250, 263, 269, 270, 271, 272, 273, 276, 277], "also": [0, 1, 3, 4, 7, 8, 10, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 43, 45, 46, 53, 55, 56, 58, 59, 60, 61, 62, 66, 70, 72, 74, 76, 77, 79, 81, 83, 84, 85, 88, 90, 91, 94, 95, 96, 97, 98, 100, 101, 102, 104, 108, 109, 110, 111, 112, 116, 117, 119, 120, 121, 122, 125, 128, 129, 130, 131, 132, 134, 135, 136, 140, 150, 151, 153, 157, 161, 166, 167, 170, 172, 176, 177, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 240, 242, 246, 248, 249, 250, 251, 252, 254, 255, 266, 267, 269, 271, 272, 273, 276, 277, 278], "consid": [0, 4, 7, 10, 11, 12, 15, 18, 19, 20, 23, 24, 32, 35, 36, 43, 46, 49, 53, 54, 55, 57, 58, 59, 60, 62, 64, 66, 70, 78, 79, 81, 82, 83, 84, 85, 87, 90, 94, 104, 108, 109, 114, 118, 129, 135, 157, 164, 167, 172, 178, 181, 182, 184, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 204, 208, 213, 214, 217, 218, 219, 220, 221, 232, 234, 239, 248, 250, 252, 254, 255, 269, 273, 277], "contribut": [0, 3, 4, 5, 6, 7, 26, 70, 94, 112, 122, 125, 191, 193, 194, 196, 217, 255, 274], "all": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 79, 81, 83, 84, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 109, 110, 111, 112, 114, 116, 117, 119, 120, 122, 127, 129, 131, 134, 135, 141, 146, 147, 151, 161, 163, 164, 165, 167, 169, 170, 171, 172, 174, 175, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 227, 228, 230, 232, 233, 234, 235, 237, 239, 240, 242, 246, 247, 249, 251, 252, 253, 254, 256, 266, 267, 269, 271, 272, 273, 276, 277, 278], "chang": [0, 1, 6, 7, 8, 10, 11, 12, 18, 26, 35, 36, 37, 45, 46, 50, 53, 54, 55, 58, 59, 60, 62, 68, 69, 79, 81, 84, 90, 94, 96, 97, 100, 104, 114, 117, 119, 124, 141, 152, 162, 172, 173, 176, 182, 184, 185, 186, 187, 188, 189, 190, 194, 197, 198, 201, 208, 209, 210, 211, 213, 217, 219, 220, 221, 222, 232, 239, 240, 250, 252, 266, 269, 272, 276], "back": [0, 20, 23, 35, 36, 50, 53, 54, 55, 60, 62, 69, 70, 76, 78, 79, 81, 82, 85, 94, 95, 104, 161, 181, 184, 191, 193, 196, 197, 199, 201, 211, 217, 219, 222, 223], "we": [0, 3, 4, 5, 6, 7, 10, 12, 16, 18, 19, 20, 22, 24, 29, 30, 31, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 67, 72, 77, 78, 79, 81, 82, 83, 84, 85, 90, 91, 93, 94, 104, 107, 108, 109, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 139, 142, 150, 153, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 172, 176, 177, 179, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 221, 225, 227, 232, 233, 234, 236, 237, 239, 240, 246, 249, 250, 251, 252, 254, 255, 266, 267, 269, 271, 272, 273, 276, 277, 278], "can": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 146, 148, 151, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 236, 237, 239, 240, 242, 248, 249, 250, 251, 252, 254, 255, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278], "incorpor": [0, 3, 16, 189, 213], "u": [0, 12, 16, 18, 19, 20, 23, 28, 34, 35, 36, 45, 50, 53, 54, 55, 57, 68, 71, 76, 79, 81, 87, 90, 94, 109, 111, 112, 113, 116, 117, 119, 121, 124, 127, 129, 131, 132, 134, 135, 139, 140, 151, 156, 162, 172, 180, 182, 184, 187, 188, 189, 190, 194, 196, 197, 200, 201, 208, 211, 213, 214, 217, 218, 219, 220, 221, 226, 240, 252, 269, 271, 272, 273], "benefit": [0, 3, 20, 36, 108, 131, 181], "end": [0, 3, 6, 10, 12, 16, 18, 19, 20, 22, 34, 35, 36, 44, 45, 50, 52, 53, 54, 55, 59, 60, 62, 64, 66, 70, 79, 82, 84, 85, 87, 90, 94, 96, 97, 98, 100, 116, 119, 121, 124, 129, 130, 131, 132, 172, 177, 181, 182, 185, 186, 190, 194, 201, 204, 207, 209, 210, 212, 214, 217, 218, 219, 220, 221, 222, 232, 234, 235, 237, 239, 242, 252, 267, 271, 273, 277], "develop": [0, 4, 6, 7, 8, 9, 11, 16, 18, 20, 25, 26, 34, 37, 52, 96, 134, 171, 187, 188, 191, 194, 219, 220, 271, 274], "team": [0, 4], "member": [0, 6, 10, 18, 35, 43, 45, 55, 77, 100, 188, 209, 226], "list": [0, 3, 4, 6, 7, 13, 18, 23, 24, 26, 28, 31, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 81, 82, 83, 84, 85, 87, 90, 93, 94, 95, 96, 97, 104, 109, 111, 112, 116, 119, 121, 124, 128, 129, 130, 134, 135, 140, 151, 153, 156, 157, 161, 162, 164, 165, 167, 169, 177, 180, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 266, 270, 271, 273, 276, 277, 278], "github": [0, 1, 3, 4, 5, 7, 10, 23, 26, 34, 54, 70, 81, 90, 171, 209, 220, 273], "found": [0, 1, 3, 4, 6, 7, 18, 19, 23, 34, 37, 45, 46, 48, 50, 52, 54, 55, 56, 64, 65, 70, 79, 81, 90, 94, 104, 110, 111, 112, 113, 131, 134, 171, 184, 188, 189, 191, 196, 197, 198, 201, 203, 204, 207, 208, 211, 214, 217, 218, 219, 220, 221, 225, 239, 240, 242, 243, 276], "zotero": 0, "start": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 20, 25, 26, 35, 36, 38, 43, 44, 45, 46, 50, 53, 54, 55, 56, 62, 84, 85, 87, 90, 93, 94, 95, 97, 98, 100, 117, 119, 129, 130, 162, 163, 166, 170, 184, 185, 187, 191, 194, 196, 197, 201, 204, 207, 209, 210, 211, 214, 217, 219, 220, 221, 222, 225, 232, 233, 239, 241, 242, 251, 265, 266, 269, 271], "either": [1, 3, 6, 7, 10, 11, 12, 18, 19, 20, 23, 28, 32, 34, 35, 38, 46, 53, 54, 55, 58, 59, 60, 62, 69, 71, 77, 79, 81, 82, 84, 85, 90, 94, 104, 109, 112, 113, 116, 117, 130, 132, 134, 151, 157, 164, 167, 169, 181, 185, 187, 189, 190, 191, 192, 194, 196, 197, 201, 203, 208, 209, 210, 211, 214, 217, 218, 219, 220, 221, 222, 225, 226, 233, 239, 240, 246, 254, 269, 272, 273], "machin": [1, 3, 5, 6, 202, 213, 217, 266], "imag": [1, 3, 45, 123, 128, 134, 136, 140, 188, 192, 194, 201, 209, 220], "contain": [1, 3, 4, 6, 7, 10, 11, 12, 14, 19, 20, 23, 24, 27, 29, 30, 34, 35, 36, 37, 45, 46, 50, 52, 53, 56, 57, 58, 60, 62, 63, 65, 67, 68, 69, 70, 71, 80, 81, 83, 84, 85, 87, 90, 93, 94, 95, 96, 97, 99, 102, 103, 105, 109, 112, 113, 114, 116, 119, 121, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 154, 157, 159, 162, 164, 167, 176, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 201, 202, 203, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 221, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 248, 256, 257, 267, 269, 273, 277], "them": [1, 3, 4, 5, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 23, 24, 27, 30, 32, 35, 36, 43, 45, 46, 53, 54, 55, 56, 58, 59, 62, 65, 70, 72, 74, 76, 77, 79, 83, 84, 87, 90, 93, 94, 95, 108, 112, 114, 117, 119, 121, 122, 127, 129, 131, 132, 134, 140, 144, 160, 161, 167, 169, 172, 175, 177, 182, 184, 185, 188, 189, 191, 192, 194, 196, 197, 198, 200, 201, 202, 208, 209, 210, 211, 213, 214, 217, 219, 220, 222, 223, 232, 234, 236, 239, 248, 266, 267, 269, 271, 272, 277], "If": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 43, 45, 46, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 93, 94, 95, 96, 97, 102, 104, 105, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 129, 130, 131, 132, 134, 135, 140, 144, 148, 151, 157, 161, 162, 163, 164, 165, 167, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 246, 248, 250, 252, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "instead": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 23, 24, 27, 29, 31, 35, 36, 45, 47, 50, 54, 56, 57, 58, 59, 62, 81, 82, 84, 85, 87, 88, 90, 94, 102, 105, 107, 116, 117, 119, 121, 131, 134, 165, 169, 171, 177, 181, 182, 184, 185, 188, 191, 192, 194, 196, 197, 199, 201, 203, 211, 213, 217, 219, 220, 221, 225, 226, 227, 230, 235, 236, 237, 239, 240, 244, 252, 255, 266, 267, 269, 271, 272, 273, 277, 278], "follow": [1, 3, 4, 6, 7, 10, 12, 14, 16, 18, 19, 20, 23, 24, 26, 29, 31, 34, 35, 36, 37, 43, 44, 45, 46, 47, 50, 53, 54, 55, 58, 59, 60, 62, 66, 68, 70, 77, 78, 79, 81, 84, 85, 87, 90, 94, 95, 97, 98, 100, 111, 112, 117, 119, 127, 128, 129, 130, 131, 132, 134, 136, 140, 159, 162, 164, 167, 170, 172, 177, 182, 184, 185, 186, 187, 188, 189, 194, 195, 196, 197, 199, 200, 201, 202, 203, 208, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 232, 235, 236, 239, 240, 243, 249, 250, 252, 266, 267, 269, 270, 272, 273, 277, 278], "specif": [1, 5, 6, 7, 10, 11, 18, 20, 21, 25, 45, 46, 54, 55, 56, 62, 66, 81, 83, 85, 90, 109, 111, 112, 116, 117, 127, 134, 136, 172, 185, 187, 188, 192, 194, 196, 197, 200, 201, 202, 207, 213, 214, 217, 218, 219, 221, 227, 232, 233, 234, 239, 258, 273, 277], "instruct": [1, 3, 5, 6, 7, 9, 10, 12, 16, 21, 25, 36, 201, 219, 233, 234], "below": [1, 3, 4, 6, 7, 10, 12, 18, 20, 23, 24, 26, 34, 35, 36, 44, 45, 46, 54, 55, 59, 61, 62, 63, 64, 70, 71, 77, 79, 81, 85, 90, 93, 94, 96, 97, 98, 104, 109, 112, 116, 117, 119, 121, 122, 123, 128, 129, 130, 131, 134, 161, 167, 172, 177, 185, 186, 187, 188, 190, 197, 201, 202, 204, 210, 213, 214, 217, 218, 219, 220, 221, 232, 234, 239, 240, 242, 250, 252, 255, 256, 273, 277], "mai": [1, 3, 4, 5, 6, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 32, 34, 35, 36, 37, 45, 46, 47, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 69, 70, 71, 79, 81, 82, 84, 85, 86, 90, 91, 93, 94, 96, 100, 110, 112, 113, 117, 121, 127, 131, 153, 162, 167, 168, 169, 174, 177, 180, 182, 184, 187, 188, 189, 190, 194, 196, 200, 201, 202, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 252, 254, 266, 267, 269, 272, 273, 277, 278], "choos": [1, 6, 23, 45, 50, 54, 56, 59, 90, 94, 98, 102, 121, 132, 167, 171, 177, 184, 185, 193, 197, 198, 201, 208, 210, 211, 217, 218, 221, 232, 237, 277], "cd": [1, 5, 6, 220, 239], "dockerfil": 1, "htmldoc": 1, "sympy_htmldoc": 1, "option": [1, 4, 5, 6, 7, 8, 12, 20, 29, 31, 34, 36, 45, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 67, 68, 70, 71, 73, 81, 82, 85, 87, 90, 91, 94, 95, 96, 97, 102, 104, 108, 109, 110, 111, 112, 113, 116, 134, 140, 151, 156, 157, 159, 162, 164, 169, 176, 177, 181, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 226, 227, 232, 233, 234, 237, 239, 240, 246, 270, 276, 277], "now": [1, 2, 3, 5, 7, 10, 12, 16, 18, 19, 20, 26, 35, 36, 46, 54, 55, 59, 62, 65, 70, 71, 76, 78, 79, 83, 90, 94, 104, 109, 116, 117, 120, 122, 125, 127, 134, 135, 170, 172, 177, 181, 184, 185, 188, 189, 191, 194, 197, 198, 202, 209, 210, 211, 213, 214, 217, 219, 220, 221, 222, 227, 232, 233, 240, 250, 251, 269, 271, 272, 277, 278], "skip": [1, 3, 4, 6, 12, 35, 38, 54, 85, 90, 94, 177, 196, 200, 201, 203, 217, 219, 230, 232, 267, 275, 276], "down": [1, 4, 6, 18, 59, 87, 106, 119, 121, 184, 185, 187, 192, 203, 209, 211, 213, 217, 236, 273, 277], "section": [1, 4, 7, 8, 11, 18, 20, 21, 28, 35, 37, 45, 46, 53, 54, 55, 57, 61, 62, 64, 70, 79, 84, 85, 90, 97, 98, 111, 117, 132, 170, 172, 176, 182, 185, 188, 191, 194, 196, 201, 204, 208, 211, 217, 227, 236, 237, 239, 249, 250, 251, 252, 256, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278], "Forapt": [1, 5], "get": [1, 2, 4, 6, 7, 8, 10, 15, 16, 18, 19, 20, 23, 26, 27, 30, 31, 34, 35, 36, 38, 43, 44, 46, 47, 49, 50, 53, 54, 55, 56, 58, 59, 60, 62, 67, 77, 79, 81, 83, 87, 90, 94, 96, 97, 102, 104, 107, 117, 120, 121, 129, 130, 131, 134, 139, 140, 147, 151, 156, 161, 162, 163, 164, 169, 172, 185, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 227, 228, 233, 239, 240, 241, 243, 246, 249, 266, 269, 271, 272, 273, 276, 277, 278], "python3": [1, 3, 36, 96, 201, 232], "sphinx": [1, 4, 7, 8, 60, 217, 232, 237], "texliv": [1, 3, 201], "recommend": [1, 5, 6, 10, 11, 12, 13, 18, 20, 22, 23, 24, 25, 26, 35, 36, 54, 55, 58, 85, 108, 129, 134, 161, 177, 184, 189, 190, 191, 192, 198, 214, 217, 220, 226, 230, 237, 249, 250, 275, 278], "dvipng": 1, "librsvg2": 1, "bin": [1, 2, 3, 5, 6, 82, 201, 232, 239], "imagemagick": 1, "docbook2x": 1, "graphviz": [1, 7, 272, 276], "pip": [1, 3, 26, 96], "txt": [1, 201], "mpmath": [1, 3, 5, 11, 20, 36, 59, 62, 90, 95, 134, 191, 192, 201, 209, 219, 235, 240], "error": [1, 3, 4, 6, 7, 10, 14, 18, 19, 23, 24, 27, 34, 36, 43, 46, 53, 54, 55, 60, 61, 64, 69, 79, 81, 90, 93, 94, 96, 117, 185, 186, 189, 191, 192, 194, 198, 201, 203, 209, 217, 218, 219, 220, 221, 232, 233, 234, 237, 239, 242, 246, 257, 266], "packag": [1, 3, 22, 26, 82, 95, 96, 101, 127, 134, 181, 201, 232, 243, 251, 252, 271], "matplotlib": [1, 3, 6, 7, 10, 26, 77, 82, 102, 134, 147, 181, 187, 276], "mayb": [1, 19], "other": [1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 19, 21, 23, 24, 28, 32, 35, 36, 37, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 79, 81, 84, 85, 87, 90, 94, 95, 96, 97, 98, 104, 108, 109, 111, 117, 118, 121, 122, 127, 128, 131, 132, 134, 136, 139, 140, 141, 151, 162, 164, 165, 166, 167, 170, 172, 173, 174, 176, 177, 179, 180, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 201, 202, 203, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 227, 228, 230, 233, 234, 235, 236, 239, 240, 246, 248, 249, 252, 254, 256, 266, 267, 269, 271, 272, 273, 277], "rpm": 1, "base": [1, 3, 4, 5, 6, 7, 9, 11, 12, 18, 20, 26, 30, 31, 34, 36, 37, 43, 44, 45, 50, 51, 52, 54, 55, 57, 59, 60, 61, 62, 65, 67, 70, 77, 81, 82, 83, 84, 86, 87, 90, 94, 95, 101, 109, 111, 117, 119, 134, 135, 136, 145, 147, 151, 152, 156, 162, 163, 165, 167, 169, 172, 173, 175, 177, 179, 181, 182, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 205, 208, 209, 210, 211, 213, 214, 215, 217, 219, 221, 225, 226, 227, 232, 233, 234, 235, 236, 237, 239, 240, 241, 246, 248, 249, 252, 263, 272, 277], "distribut": [1, 3, 26, 45, 52, 54, 62, 70, 81, 97, 98, 166, 189, 192, 193, 197, 201, 227], "prerequisit": 1, "dnf": [1, 84], "scheme": [1, 4, 18, 46, 53, 58, 186, 187, 194, 197, 226], "medium": [1, 20, 136, 137, 140, 141, 151, 194, 262], "tool": [1, 7, 11, 20, 45, 82, 89, 90, 95, 104, 134, 185, 188, 193, 194, 201, 212, 233, 239, 245, 253, 258, 260], "first": [1, 3, 5, 6, 7, 8, 11, 12, 16, 18, 19, 20, 23, 26, 35, 36, 37, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 67, 68, 70, 71, 78, 79, 81, 83, 84, 85, 90, 93, 94, 97, 98, 104, 105, 110, 111, 112, 116, 117, 119, 120, 121, 122, 127, 128, 131, 132, 135, 139, 140, 144, 148, 151, 156, 157, 160, 161, 162, 163, 164, 166, 167, 170, 172, 177, 180, 184, 185, 187, 188, 190, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 221, 225, 227, 230, 232, 233, 234, 235, 239, 240, 242, 250, 255, 266, 267, 269, 271, 272, 273, 275, 277, 278], "homebrew": 1, "brew": 1, "sh": 1, "Then": [1, 5, 11, 16, 18, 45, 50, 53, 54, 79, 83, 90, 94, 110, 112, 114, 124, 126, 127, 132, 136, 164, 172, 184, 188, 189, 191, 194, 196, 198, 201, 208, 211, 213, 214, 217, 219, 240], "docbook": 1, "librsvg": 1, "conda": [1, 3, 5, 26, 96], "Or": [1, 7, 12, 19, 23, 45, 54, 55, 56, 62, 79, 84, 94, 114, 188, 198, 200, 201, 213, 220, 221, 232, 240, 252, 272, 275], "forg": [1, 3, 96], "make": [1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 18, 19, 20, 27, 30, 31, 32, 34, 36, 37, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 62, 66, 70, 81, 82, 84, 90, 93, 94, 95, 96, 97, 98, 100, 112, 116, 117, 119, 120, 124, 125, 129, 131, 132, 134, 147, 164, 169, 181, 184, 187, 190, 191, 192, 194, 196, 197, 198, 200, 201, 204, 209, 210, 211, 213, 217, 218, 219, 220, 225, 227, 230, 232, 233, 234, 235, 237, 239, 240, 249, 254, 255, 269, 270, 271, 272, 273, 277], "success": [1, 7, 35, 45, 54, 62, 79, 81, 94, 119, 177, 188, 194, 196, 209, 210, 217, 220, 221, 239, 246, 247], "tricki": [1, 54, 79], "becaus": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 23, 24, 26, 27, 32, 36, 46, 53, 54, 55, 60, 66, 70, 71, 79, 81, 84, 88, 90, 94, 96, 117, 121, 147, 155, 167, 169, 172, 184, 187, 188, 190, 191, 192, 194, 196, 197, 198, 200, 201, 204, 208, 211, 213, 214, 217, 218, 219, 220, 230, 232, 233, 235, 239, 240, 242, 249, 267, 269, 271, 272, 273, 276, 277, 278], "some": [1, 3, 4, 6, 11, 12, 16, 18, 19, 20, 23, 24, 26, 27, 32, 35, 36, 37, 42, 45, 46, 52, 53, 54, 55, 58, 59, 60, 62, 64, 65, 66, 70, 79, 81, 83, 84, 85, 87, 90, 94, 95, 96, 102, 105, 108, 109, 114, 116, 117, 118, 119, 120, 121, 122, 127, 129, 131, 132, 135, 147, 152, 156, 164, 167, 172, 173, 176, 178, 182, 184, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 201, 203, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 246, 247, 248, 250, 252, 256, 266, 267, 269, 271, 272, 273, 275, 276, 277], "avail": [1, 3, 5, 7, 10, 11, 12, 18, 24, 25, 26, 35, 36, 45, 46, 53, 54, 59, 62, 81, 90, 95, 96, 117, 131, 134, 191, 192, 194, 197, 201, 202, 207, 209, 211, 213, 214, 219, 220, 221, 222, 226, 227, 232, 239, 240, 245, 246, 263, 269, 276], "subsystem": [1, 201], "linux": [1, 26], "possibl": [1, 6, 10, 11, 14, 18, 19, 20, 26, 34, 36, 37, 38, 43, 45, 46, 48, 49, 50, 54, 55, 59, 60, 62, 64, 66, 68, 69, 71, 76, 78, 79, 81, 83, 84, 85, 87, 90, 94, 105, 106, 108, 119, 130, 132, 161, 163, 167, 169, 172, 180, 182, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 207, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 222, 227, 232, 234, 235, 236, 237, 239, 240, 249, 250, 252, 268, 269, 272, 277], "workaround": [1, 240], "solut": [1, 10, 11, 12, 14, 16, 19, 20, 22, 36, 50, 54, 55, 60, 62, 64, 72, 76, 77, 78, 81, 90, 94, 101, 108, 112, 117, 121, 127, 131, 136, 172, 176, 188, 194, 195, 196, 197, 198, 199, 200, 209, 214, 215, 216, 217, 218, 219, 262, 278], "shell": [1, 12, 82, 134, 200], "after": [1, 4, 5, 6, 7, 10, 12, 26, 28, 30, 31, 35, 37, 42, 45, 46, 50, 52, 53, 54, 55, 56, 60, 69, 71, 76, 81, 85, 90, 94, 96, 97, 104, 128, 129, 131, 134, 136, 140, 152, 164, 172, 176, 182, 185, 190, 194, 196, 197, 198, 199, 201, 202, 207, 214, 217, 218, 219, 220, 222, 232, 235, 240, 242, 246, 248, 252, 266, 267, 269, 273, 277], "tutori": [1, 7, 11, 12, 16, 17, 26, 70, 117, 134, 189, 200, 201, 215, 217, 240, 269, 272, 274, 275, 276, 277, 278], "com": [1, 3, 4, 5, 6, 7, 10, 20, 26, 28, 32, 34, 45, 47, 48, 54, 55, 57, 58, 59, 60, 62, 64, 70, 71, 79, 81, 85, 90, 94, 102, 186, 195, 204, 206, 209, 210, 213, 214, 217, 220, 221, 239, 242, 273], "microsoftdoc": 1, "wsl": 1, "blob": [1, 81], "win10": 1, "md": [1, 4, 7, 230, 237], "In": [1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 24, 26, 32, 34, 35, 36, 37, 38, 43, 44, 45, 46, 53, 54, 55, 56, 58, 59, 60, 62, 67, 69, 70, 71, 72, 79, 81, 82, 83, 84, 85, 87, 90, 91, 94, 96, 98, 100, 104, 108, 111, 112, 117, 120, 121, 122, 127, 128, 129, 130, 131, 132, 134, 135, 153, 155, 156, 157, 162, 166, 167, 170, 172, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 227, 230, 232, 234, 236, 237, 239, 240, 243, 246, 249, 250, 252, 254, 266, 269, 270, 271, 272, 273, 276, 277, 278], "command": [1, 3, 5, 6, 11, 12, 26, 36, 58, 82, 117, 129, 134, 181, 187, 201, 232, 233, 276], "prompt": [1, 6, 11], "run": [1, 4, 6, 7, 8, 11, 12, 16, 18, 20, 37, 45, 46, 48, 54, 55, 79, 90, 95, 96, 112, 119, 134, 167, 181, 187, 188, 201, 211, 213, 217, 218, 219, 229, 233, 235, 236, 239, 240, 264, 269, 276], "transfer": [1, 101, 102, 104, 136, 220], "termin": [1, 45, 54, 60, 82, 94, 181, 201, 208, 232, 276], "abov": [1, 3, 4, 6, 7, 10, 12, 14, 16, 19, 20, 24, 34, 35, 36, 37, 38, 44, 45, 46, 50, 53, 54, 58, 59, 62, 64, 67, 70, 71, 79, 81, 84, 85, 90, 94, 95, 96, 98, 104, 108, 112, 114, 116, 117, 119, 120, 121, 122, 127, 128, 130, 131, 132, 135, 162, 164, 167, 177, 182, 184, 185, 187, 188, 189, 191, 192, 194, 196, 197, 198, 200, 201, 202, 208, 211, 213, 214, 217, 219, 220, 221, 225, 226, 233, 234, 240, 249, 250, 251, 252, 255, 269, 271, 272, 273, 277], "html": [1, 3, 4, 6, 7, 32, 36, 38, 46, 47, 48, 54, 55, 57, 59, 60, 62, 64, 70, 71, 81, 82, 90, 94, 102, 195, 201, 204, 206, 209, 210, 214, 217, 221, 233, 235, 237, 239, 240, 273], "note": [1, 3, 6, 7, 10, 11, 12, 14, 16, 18, 19, 22, 28, 29, 31, 32, 33, 34, 35, 36, 37, 44, 45, 46, 47, 50, 52, 53, 55, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 79, 81, 82, 84, 85, 87, 90, 94, 96, 104, 105, 109, 110, 111, 112, 113, 116, 117, 119, 121, 124, 128, 132, 134, 140, 143, 151, 161, 162, 164, 166, 167, 168, 170, 176, 177, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 207, 209, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 226, 227, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 250, 252, 254, 263, 266, 267, 268, 270, 271, 272, 273, 277], "via": [1, 3, 11, 16, 20, 24, 26, 29, 30, 31, 45, 46, 54, 59, 62, 79, 81, 84, 90, 94, 95, 96, 97, 177, 186, 188, 192, 194, 196, 197, 200, 201, 220, 230, 233, 234, 246, 254, 272], "want": [1, 3, 4, 5, 6, 10, 11, 12, 15, 16, 18, 19, 20, 23, 24, 26, 32, 34, 36, 37, 38, 46, 54, 55, 61, 66, 68, 70, 73, 79, 81, 85, 87, 90, 91, 94, 95, 102, 104, 107, 113, 117, 134, 150, 160, 161, 164, 167, 170, 172, 179, 180, 184, 185, 187, 189, 190, 191, 194, 196, 197, 198, 200, 201, 202, 208, 209, 211, 213, 214, 217, 218, 219, 220, 221, 227, 230, 232, 234, 236, 239, 240, 250, 252, 255, 266, 267, 269, 271, 272, 273, 274, 276, 277], "directori": [1, 3, 6, 7, 26, 31, 36, 217, 232, 233, 242], "folder": 1, "prepend": [1, 35, 45, 90, 104, 174, 201, 227], "mnt": 1, "path": [1, 5, 6, 10, 45, 70, 76, 104, 125, 182, 184, 210, 213, 217, 220, 232, 233, 236, 237, 239, 242, 243, 244, 252], "navig": 1, "method": [1, 3, 4, 6, 7, 11, 12, 17, 18, 23, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 70, 73, 76, 78, 79, 81, 83, 85, 86, 87, 90, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 108, 111, 116, 117, 120, 122, 123, 127, 128, 133, 134, 141, 144, 146, 148, 156, 157, 162, 164, 167, 169, 174, 175, 176, 177, 179, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 202, 203, 204, 206, 207, 208, 209, 213, 214, 215, 217, 219, 221, 222, 224, 226, 227, 228, 232, 234, 236, 239, 240, 246, 249, 252, 255, 256, 266, 267, 268, 269, 272, 277], "better": [1, 3, 4, 6, 10, 11, 12, 18, 19, 20, 35, 36, 46, 54, 58, 62, 81, 84, 104, 117, 147, 171, 175, 187, 190, 191, 192, 204, 208, 209, 210, 211, 217, 218, 219, 220, 221, 233, 239, 240, 271, 277], "compat": [1, 3, 4, 15, 36, 54, 62, 82, 85, 90, 95, 108, 169, 174, 181, 187, 190, 192, 196, 197, 201, 221, 224, 225, 228, 232, 234, 240], "than": [1, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 20, 23, 24, 27, 32, 36, 37, 39, 45, 46, 47, 53, 54, 55, 58, 59, 60, 62, 63, 68, 69, 70, 72, 76, 79, 81, 83, 84, 85, 87, 90, 91, 93, 94, 95, 96, 100, 102, 104, 108, 112, 116, 117, 121, 124, 141, 147, 161, 164, 165, 167, 176, 185, 186, 189, 190, 191, 192, 194, 197, 198, 199, 201, 204, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 228, 233, 234, 236, 239, 240, 242, 243, 266, 267, 269, 270, 271, 272, 273, 275, 277], "cygwin": 1, "msys2": 1, "more": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 31, 32, 34, 35, 36, 37, 40, 44, 45, 46, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 76, 79, 81, 84, 85, 87, 88, 90, 91, 93, 94, 95, 96, 102, 104, 108, 112, 113, 117, 119, 121, 123, 125, 127, 129, 130, 131, 132, 134, 136, 139, 151, 155, 156, 161, 164, 165, 166, 167, 172, 176, 177, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 213, 214, 217, 218, 219, 220, 221, 232, 234, 235, 236, 239, 240, 242, 246, 249, 253, 266, 267, 269, 270, 272, 273, 275, 276, 277, 278], "virtual": [1, 4, 8, 26, 54, 70, 185, 270], "partial": [1, 11, 34, 45, 52, 53, 54, 56, 58, 59, 60, 94, 96, 134, 161, 177, 180, 182, 192, 193, 195, 198, 201, 203, 210, 213, 215, 217, 218, 222, 228, 246, 252, 267, 277], "need": [1, 3, 4, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 26, 27, 28, 30, 31, 34, 35, 36, 39, 45, 46, 50, 52, 53, 54, 55, 56, 60, 62, 65, 69, 70, 77, 78, 79, 81, 82, 85, 90, 94, 95, 96, 98, 100, 104, 108, 112, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 147, 151, 159, 165, 170, 171, 176, 177, 181, 184, 185, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 208, 209, 211, 213, 214, 216, 217, 219, 220, 221, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 239, 242, 246, 249, 251, 252, 255, 266, 267, 269, 272, 273, 275, 277], "environ": [1, 3, 8, 9, 10, 11, 54, 82, 181, 201, 221, 232, 242, 269, 271, 276], "workflow": [1, 3, 5, 8, 9, 25, 134, 191, 234, 240, 274], "onli": [1, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 70, 71, 72, 77, 79, 81, 82, 83, 84, 85, 90, 91, 94, 95, 96, 100, 102, 104, 110, 111, 117, 119, 120, 121, 123, 124, 126, 128, 129, 131, 132, 135, 140, 142, 161, 162, 166, 167, 169, 171, 172, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 246, 248, 250, 252, 254, 255, 266, 267, 269, 270, 272, 273, 277, 278], "viabl": [1, 55], "64": [1, 39, 45, 94, 133, 186, 200, 210, 219, 221, 232, 239, 242, 276], "bit": [1, 16, 20, 35, 36, 38, 54, 55, 57, 84, 85, 90, 94, 161, 172, 188, 197, 211, 214, 220, 232, 239, 249, 250, 276], "chocolatei": 1, "choco": 1, "rsvg": 1, "convert": [1, 3, 4, 10, 11, 12, 14, 18, 19, 20, 28, 32, 36, 38, 46, 50, 54, 55, 58, 59, 60, 68, 69, 71, 74, 75, 78, 82, 84, 85, 90, 93, 94, 96, 104, 161, 164, 170, 171, 172, 174, 180, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 209, 210, 211, 213, 214, 218, 220, 221, 222, 223, 226, 232, 233, 239, 240, 242, 244, 248, 268, 269, 272, 277], "chose": [1, 55], "rm": [1, 36], "absolut": [1, 10, 32, 33, 36, 53, 54, 60, 62, 69, 79, 81, 85, 90, 106, 165, 192, 196, 197, 211, 213, 216, 221, 232, 254, 255, 256], "Be": [1, 4, 6, 20, 34, 54, 84, 90, 194, 217, 220, 228, 240], "sure": [1, 4, 6, 7, 20, 36, 45, 54, 66, 116, 117, 147, 172, 197, 198, 208, 217, 219, 220, 233, 239, 269, 272, 277], "substitut": [1, 10, 11, 12, 16, 19, 24, 36, 54, 55, 60, 62, 79, 81, 90, 95, 96, 104, 112, 113, 117, 119, 121, 131, 156, 165, 167, 170, 177, 179, 180, 198, 199, 202, 203, 208, 211, 213, 214, 217, 218, 219, 220, 240, 248, 268, 269], "actual": [1, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 35, 36, 37, 43, 45, 52, 54, 55, 62, 66, 79, 81, 83, 87, 90, 94, 104, 108, 117, 119, 129, 130, 131, 181, 188, 191, 196, 201, 209, 211, 213, 214, 217, 220, 228, 232, 233, 236, 237, 239, 240, 271], "filesystem": 1, "from": [1, 3, 4, 5, 6, 7, 11, 14, 15, 16, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 266, 267, 269, 271, 272, 273, 276, 277, 278], "ani": [1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 18, 19, 20, 23, 26, 29, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 69, 70, 71, 79, 81, 82, 84, 85, 88, 90, 91, 94, 96, 97, 98, 100, 104, 106, 109, 111, 112, 113, 114, 116, 117, 127, 130, 131, 132, 135, 136, 140, 153, 156, 161, 162, 165, 167, 169, 172, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 201, 202, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 223, 226, 227, 232, 233, 235, 236, 237, 239, 240, 246, 249, 250, 251, 252, 254, 255, 266, 267, 269, 272, 273, 276, 277, 278], "makefil": 1, "subdirectori": 1, "ha": [1, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 24, 32, 34, 35, 36, 37, 38, 43, 44, 45, 46, 48, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 77, 79, 81, 83, 84, 85, 87, 90, 91, 93, 94, 95, 97, 98, 100, 104, 105, 109, 111, 112, 117, 119, 121, 127, 128, 132, 134, 140, 141, 151, 152, 161, 164, 169, 172, 176, 177, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 206, 208, 209, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 232, 233, 234, 235, 236, 237, 239, 242, 246, 247, 249, 250, 252, 254, 255, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "collect": [1, 3, 7, 17, 35, 36, 45, 54, 71, 81, 94, 97, 104, 116, 125, 134, 167, 174, 186, 192, 197, 210, 211, 217, 221, 232, 239, 257], "offici": [1, 12, 26, 54, 108, 134, 176, 185, 220, 240, 275], "which": [1, 2, 3, 4, 6, 7, 10, 11, 12, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 69, 70, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 90, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 116, 117, 119, 120, 122, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 140, 141, 153, 156, 162, 163, 164, 165, 167, 171, 172, 173, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 225, 227, 232, 233, 234, 235, 236, 237, 239, 240, 242, 246, 247, 250, 254, 255, 257, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 278], "gener": [1, 4, 8, 10, 11, 12, 14, 16, 18, 19, 20, 23, 24, 26, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 68, 70, 72, 77, 79, 81, 82, 83, 84, 87, 90, 94, 95, 96, 104, 108, 109, 111, 112, 113, 116, 117, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 132, 134, 135, 139, 150, 151, 152, 153, 156, 161, 162, 165, 166, 167, 172, 174, 176, 177, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 207, 210, 211, 213, 214, 215, 217, 218, 219, 221, 226, 227, 233, 234, 236, 237, 238, 239, 240, 246, 249, 250, 252, 253, 254, 267, 269, 270, 271, 272, 273, 277, 278], "svg": [1, 82, 181], "store": [1, 5, 10, 12, 18, 35, 36, 44, 45, 54, 76, 78, 87, 90, 94, 96, 109, 112, 114, 116, 117, 132, 161, 167, 180, 184, 185, 187, 188, 191, 196, 197, 198, 208, 211, 222, 225, 226, 234, 235, 236, 239, 250, 252, 272], "_build": [1, 6], "same": [1, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 23, 28, 29, 30, 31, 32, 34, 35, 36, 43, 44, 45, 46, 50, 53, 54, 55, 56, 59, 61, 62, 64, 67, 68, 69, 70, 71, 76, 77, 79, 81, 83, 84, 85, 87, 90, 94, 96, 97, 98, 104, 105, 108, 109, 115, 117, 121, 124, 125, 131, 132, 151, 153, 161, 164, 165, 167, 169, 170, 172, 174, 175, 176, 177, 179, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 226, 227, 228, 230, 232, 234, 235, 236, 237, 239, 240, 242, 246, 247, 249, 250, 254, 267, 269, 272, 273, 276, 277], "inform": [1, 3, 4, 6, 7, 11, 12, 15, 18, 19, 24, 25, 31, 32, 35, 36, 37, 40, 45, 46, 52, 54, 55, 59, 62, 66, 79, 81, 83, 87, 90, 95, 98, 109, 110, 112, 116, 117, 119, 127, 128, 129, 131, 132, 134, 135, 162, 167, 172, 176, 177, 181, 185, 187, 191, 196, 197, 201, 202, 208, 211, 213, 214, 215, 219, 220, 221, 225, 226, 227, 232, 233, 234, 235, 236, 246, 250, 252, 277], "onc": [1, 4, 11, 12, 18, 19, 20, 36, 38, 45, 50, 54, 55, 59, 62, 70, 79, 81, 95, 98, 110, 111, 127, 131, 172, 177, 179, 185, 187, 189, 191, 197, 201, 202, 210, 211, 213, 217, 220, 227, 239, 249, 266, 267, 277, 278], "under": [1, 3, 4, 6, 11, 12, 18, 19, 30, 31, 33, 34, 36, 37, 44, 45, 50, 52, 62, 72, 79, 81, 83, 90, 94, 96, 97, 98, 136, 162, 186, 188, 189, 196, 197, 201, 208, 209, 211, 214, 217, 219, 220, 221, 227, 230, 271, 277], "prefer": [1, 3, 6, 10, 11, 18, 20, 36, 46, 53, 54, 62, 94, 96, 117, 167, 172, 187, 190, 192, 194, 196, 201, 209, 213, 217, 219, 226, 232, 234, 237, 240, 271, 273], "web": [1, 7, 55, 66, 134, 183, 195, 214], "browser": 1, "drop": [1, 60, 81, 95, 124, 192, 194], "menu": 1, "index": [1, 3, 10, 12, 20, 24, 28, 36, 41, 43, 45, 46, 50, 53, 54, 55, 56, 59, 60, 62, 65, 70, 79, 81, 84, 85, 87, 90, 93, 94, 104, 116, 117, 134, 135, 136, 138, 140, 141, 151, 160, 162, 164, 167, 172, 177, 187, 188, 192, 196, 197, 198, 201, 206, 207, 211, 219, 221, 222, 224, 225, 227, 228, 233], "given": [1, 3, 4, 7, 10, 11, 12, 14, 16, 18, 20, 28, 30, 31, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 81, 83, 84, 85, 87, 90, 93, 94, 96, 97, 100, 102, 105, 109, 110, 114, 116, 117, 121, 132, 140, 157, 162, 164, 172, 173, 175, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 226, 227, 230, 232, 234, 236, 239, 240, 242, 243, 244, 246, 248, 250, 252, 254, 266, 272, 275, 277, 278], "told": 1, "how": [1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 35, 36, 45, 46, 53, 54, 60, 61, 62, 66, 77, 80, 81, 84, 85, 87, 90, 94, 96, 97, 108, 112, 117, 118, 124, 129, 130, 132, 134, 138, 139, 155, 159, 162, 163, 164, 169, 170, 177, 184, 187, 188, 191, 192, 194, 196, 200, 201, 204, 208, 209, 211, 213, 214, 215, 217, 218, 219, 221, 227, 232, 233, 234, 235, 237, 239, 240, 250, 267, 269, 271, 272, 273, 274, 276, 277], "load": [1, 36, 54, 82, 97, 98, 100, 109, 111, 112, 116, 120, 122, 135, 147, 181], "ll": [1, 35, 52, 90, 121, 184, 185, 230], "manual": [1, 3, 4, 7, 10, 11, 20, 36, 37, 45, 58, 64, 81, 82, 96, 104, 116, 117, 120, 131, 135, 187, 194, 201, 217, 219, 220, 235, 267, 277], "repeat": [1, 11, 12, 45, 48, 53, 54, 60, 62, 81, 83, 85, 90, 94, 96, 151, 153, 167, 187, 188, 189, 194, 196, 197, 201, 207, 217, 221, 225, 226, 233, 235, 239, 277], "step": [1, 4, 5, 20, 21, 25, 34, 36, 45, 49, 50, 53, 54, 55, 62, 78, 79, 81, 90, 94, 95, 103, 112, 124, 127, 129, 134, 135, 169, 180, 185, 187, 191, 192, 194, 197, 201, 202, 203, 206, 209, 210, 211, 213, 214, 215, 217, 219, 221, 226, 233, 239, 240, 267], "reload": 1, "There": [1, 3, 4, 5, 6, 7, 10, 11, 12, 15, 18, 19, 20, 23, 36, 37, 45, 46, 47, 48, 51, 53, 54, 55, 58, 59, 62, 78, 79, 81, 82, 83, 84, 87, 90, 94, 97, 98, 100, 104, 108, 116, 127, 129, 131, 140, 157, 162, 176, 177, 181, 184, 185, 187, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 209, 210, 211, 213, 214, 217, 219, 220, 221, 226, 235, 236, 239, 240, 242, 250, 266, 267, 269, 271, 272, 276, 277], "altern": [1, 4, 6, 10, 11, 12, 19, 20, 23, 26, 36, 42, 45, 46, 53, 54, 58, 59, 60, 61, 62, 85, 87, 91, 95, 117, 129, 131, 177, 184, 186, 187, 189, 190, 191, 196, 197, 201, 206, 208, 210, 219, 220, 222, 239, 269, 271, 273], "approach": [1, 16, 23, 24, 35, 53, 54, 81, 104, 121, 127, 191, 194, 195, 198, 209, 218, 219, 221, 233, 236, 239, 267, 273], "set": [1, 2, 3, 4, 6, 7, 11, 12, 14, 16, 17, 18, 19, 24, 27, 30, 31, 34, 35, 36, 37, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 67, 69, 71, 72, 73, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 104, 108, 111, 112, 116, 117, 119, 120, 121, 126, 129, 130, 131, 134, 135, 151, 157, 162, 167, 169, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 194, 196, 197, 200, 201, 202, 203, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 225, 226, 227, 230, 232, 233, 234, 235, 239, 240, 246, 248, 250, 256, 259, 266, 268, 277], "up": [1, 3, 4, 10, 11, 16, 18, 19, 20, 26, 31, 34, 36, 45, 46, 48, 54, 55, 56, 58, 59, 60, 62, 63, 70, 71, 75, 79, 81, 82, 84, 85, 90, 94, 95, 97, 106, 108, 114, 116, 119, 120, 124, 126, 131, 132, 134, 135, 147, 162, 164, 180, 186, 187, 188, 191, 192, 196, 198, 201, 202, 203, 208, 210, 211, 213, 214, 217, 218, 219, 220, 233, 234, 235, 236, 237, 240, 268, 269, 272, 273, 275], "monitor": 1, "automat": [1, 3, 4, 6, 7, 10, 11, 12, 14, 18, 23, 24, 35, 36, 37, 46, 54, 56, 57, 58, 59, 60, 62, 67, 69, 73, 79, 82, 84, 94, 96, 97, 112, 117, 119, 125, 153, 155, 156, 165, 167, 180, 184, 187, 188, 191, 192, 193, 196, 197, 198, 201, 204, 207, 208, 210, 211, 213, 214, 217, 219, 220, 226, 227, 232, 233, 234, 237, 250, 255, 267, 269, 271, 272, 276, 277, 278], "detect": [1, 3, 27, 34, 87, 90, 94, 187, 191, 201, 217, 218, 220, 222, 239, 257, 276], "procedur": [1, 37, 39, 45, 51, 52, 53, 81, 90, 112, 132, 194, 196, 213, 214, 219, 220, 246, 273], "again": [1, 4, 12, 16, 19, 46, 54, 69, 94, 117, 119, 132, 162, 163, 177, 184, 188, 189, 196, 204, 211, 217, 230, 249, 269, 277], "whether": [1, 4, 10, 11, 18, 19, 20, 24, 34, 35, 36, 40, 45, 53, 54, 55, 61, 62, 66, 69, 81, 82, 84, 85, 90, 94, 100, 108, 113, 116, 117, 155, 174, 179, 185, 187, 190, 191, 192, 196, 197, 201, 204, 208, 209, 213, 214, 217, 219, 220, 221, 222, 232, 234, 239, 240, 246, 248, 269, 273], "8000": [1, 97], "80": [1, 4, 6, 12, 20, 34, 45, 54, 57, 81, 90, 94, 97, 98, 102, 197, 200, 217, 221, 237, 239], "localhost": 1, "differ": [1, 4, 6, 7, 10, 11, 12, 14, 15, 17, 19, 20, 23, 27, 35, 36, 37, 43, 44, 45, 46, 50, 53, 54, 55, 56, 58, 59, 60, 62, 65, 67, 69, 70, 74, 76, 78, 79, 81, 82, 83, 84, 87, 90, 94, 95, 96, 97, 102, 108, 109, 114, 117, 119, 123, 127, 131, 132, 135, 139, 140, 152, 153, 161, 162, 165, 167, 169, 172, 176, 177, 178, 180, 181, 182, 185, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 222, 225, 227, 230, 232, 233, 234, 235, 236, 237, 239, 240, 246, 248, 252, 253, 254, 257, 268, 269, 271, 272, 273, 276, 277], "port": [1, 96, 119, 139], "finish": [1, 36, 37, 161, 235, 274], "stop": [1, 4, 36, 37, 46, 54, 90, 94, 187, 207, 209, 217, 221], "ctrl": 1, "detach": 1, "mode": [1, 2, 54, 82, 96, 139, 162, 181, 197, 201, 232, 243, 263], "d": [1, 6, 7, 10, 11, 12, 16, 20, 28, 35, 38, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 59, 62, 64, 68, 72, 77, 79, 81, 83, 84, 85, 86, 87, 90, 91, 93, 94, 96, 97, 100, 112, 134, 136, 139, 140, 146, 156, 164, 166, 167, 172, 176, 177, 179, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 203, 207, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 225, 227, 239, 242, 246, 247, 248, 249, 250, 254, 262, 273, 278], "name": [1, 3, 4, 5, 6, 7, 10, 11, 12, 18, 20, 27, 30, 31, 35, 36, 37, 41, 44, 47, 50, 53, 54, 55, 56, 59, 60, 61, 62, 64, 67, 79, 81, 82, 83, 87, 90, 94, 96, 97, 100, 109, 111, 114, 116, 117, 119, 134, 138, 147, 162, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 185, 187, 188, 189, 191, 192, 194, 196, 198, 201, 207, 211, 213, 214, 217, 218, 220, 221, 226, 227, 230, 232, 233, 234, 235, 240, 242, 243, 244, 246, 249, 252, 266, 269, 272, 273, 277], "livehtml": 1, "simpli": [1, 3, 4, 7, 18, 19, 32, 37, 53, 54, 56, 60, 64, 85, 87, 90, 94, 96, 97, 100, 105, 109, 117, 119, 131, 157, 162, 172, 182, 185, 191, 197, 198, 209, 210, 211, 217, 220, 237, 239, 240, 252], "should": [1, 3, 5, 6, 7, 8, 10, 11, 12, 15, 18, 19, 20, 24, 27, 29, 31, 34, 35, 36, 37, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 71, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 90, 94, 96, 97, 102, 104, 108, 117, 119, 121, 129, 131, 132, 134, 135, 136, 147, 151, 155, 157, 159, 161, 162, 165, 167, 169, 170, 172, 173, 177, 181, 184, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 200, 201, 203, 204, 207, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 225, 226, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 246, 249, 257, 266, 267, 269, 270, 273], "new": [1, 3, 4, 5, 7, 11, 18, 20, 25, 30, 31, 35, 36, 37, 45, 46, 53, 54, 55, 56, 62, 67, 70, 79, 81, 82, 85, 90, 94, 97, 100, 104, 109, 117, 124, 126, 132, 133, 134, 136, 157, 163, 164, 167, 169, 172, 173, 175, 177, 180, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 201, 208, 211, 213, 214, 217, 219, 220, 221, 222, 232, 233, 237, 240, 246, 247, 249, 253, 265, 266, 269, 272, 273, 275], "tab": [1, 10, 12, 50, 134], "show": [1, 3, 4, 6, 7, 12, 15, 16, 17, 18, 19, 20, 36, 46, 53, 54, 58, 60, 77, 79, 81, 90, 94, 97, 98, 102, 108, 117, 123, 128, 132, 134, 162, 166, 170, 172, 177, 184, 185, 187, 188, 191, 192, 194, 196, 197, 201, 202, 204, 208, 209, 210, 211, 213, 214, 217, 219, 221, 222, 230, 233, 234, 237, 239, 240, 269, 271, 273, 276], "necessari": [1, 3, 4, 6, 8, 10, 12, 18, 20, 25, 34, 35, 45, 46, 54, 64, 79, 81, 84, 90, 94, 112, 119, 127, 187, 189, 191, 196, 197, 201, 204, 210, 213, 217, 218, 219, 220, 221, 222, 227, 232, 234, 239, 240, 246, 270, 275], "major": [1, 3, 4, 7, 10, 24, 64, 108, 226, 271, 277], "contributor": [1, 3, 7, 10, 20], "action": [1, 3, 7, 45, 83, 159, 162, 172, 197, 213, 220], "pull": [1, 3, 4, 5, 6, 7, 9, 10, 20, 26, 36, 54, 59, 62, 166, 202, 213, 217, 220, 273, 277], "request": [1, 3, 4, 6, 7, 9, 10, 18, 26, 34, 54, 58, 70, 79, 94, 117, 167, 194, 197, 225, 233], "each": [1, 3, 4, 10, 11, 12, 14, 18, 20, 23, 25, 31, 32, 34, 35, 36, 37, 38, 45, 46, 50, 54, 55, 56, 57, 58, 59, 60, 62, 64, 69, 70, 71, 76, 77, 79, 81, 83, 84, 85, 87, 90, 94, 97, 100, 102, 104, 110, 111, 112, 117, 119, 121, 124, 126, 128, 129, 132, 151, 164, 167, 176, 177, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 199, 201, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 230, 232, 234, 236, 239, 240, 242, 246, 247, 248, 250, 252, 254, 267, 270, 272, 277, 278], "releas": [1, 7, 10, 54, 81, 85, 96, 131, 187, 226, 237, 240, 272], "includ": [1, 3, 4, 6, 7, 9, 10, 11, 12, 18, 20, 23, 26, 31, 32, 34, 35, 36, 46, 50, 53, 54, 55, 56, 58, 59, 60, 62, 66, 72, 79, 81, 84, 85, 87, 89, 90, 94, 95, 96, 106, 108, 116, 117, 119, 121, 122, 127, 129, 131, 134, 147, 151, 156, 161, 164, 165, 175, 182, 185, 189, 192, 193, 194, 196, 197, 200, 201, 202, 207, 208, 209, 211, 213, 216, 217, 218, 219, 221, 224, 227, 230, 232, 234, 235, 236, 237, 239, 246, 247, 249, 254, 256, 267, 271, 272, 273, 277, 278], "fail": [1, 3, 4, 6, 7, 10, 18, 19, 20, 36, 45, 46, 50, 53, 54, 58, 60, 78, 79, 81, 82, 90, 91, 94, 96, 119, 157, 162, 181, 187, 190, 191, 192, 194, 196, 197, 201, 208, 211, 217, 219, 221, 230, 232, 239, 240, 273], "99": [1, 36, 54, 55, 90, 94, 194, 195], "time": [1, 3, 4, 7, 10, 11, 12, 16, 18, 19, 24, 27, 31, 32, 36, 45, 46, 50, 54, 55, 59, 62, 77, 79, 84, 85, 90, 91, 93, 94, 95, 96, 101, 102, 104, 108, 112, 113, 116, 117, 119, 121, 124, 125, 127, 129, 130, 131, 132, 134, 135, 141, 151, 156, 164, 165, 169, 170, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 194, 195, 196, 197, 198, 200, 201, 208, 209, 210, 211, 213, 217, 219, 221, 230, 232, 233, 238, 239, 240, 252, 254, 264, 267, 271, 272, 273], "due": [1, 6, 10, 16, 20, 34, 36, 44, 45, 54, 56, 71, 90, 94, 97, 100, 117, 119, 131, 140, 167, 182, 185, 191, 197, 201, 204, 214, 216, 218, 221, 237, 248, 254, 277], "bad": [1, 10, 53, 94, 169, 201], "math": [1, 3, 6, 20, 24, 28, 32, 35, 37, 45, 54, 59, 62, 64, 81, 90, 94, 95, 117, 127, 182, 187, 192, 195, 200, 201, 217, 218, 221, 233, 234, 240, 250, 251, 252, 253, 254, 258, 266, 267, 271], "format": [1, 4, 8, 10, 11, 14, 16, 23, 35, 46, 55, 76, 77, 81, 84, 90, 93, 94, 97, 116, 135, 140, 151, 161, 187, 190, 191, 196, 197, 199, 201, 211, 217, 220, 232, 242, 246, 249, 270, 273, 276], "doubl": [1, 6, 7, 34, 36, 50, 54, 55, 61, 90, 96, 111, 126, 127, 184, 191, 201, 210, 211, 234, 277], "check": [1, 3, 4, 6, 7, 11, 12, 14, 15, 16, 18, 19, 20, 24, 30, 31, 34, 35, 36, 40, 43, 45, 46, 47, 52, 53, 54, 55, 59, 62, 66, 77, 79, 83, 84, 85, 87, 90, 91, 94, 104, 109, 110, 117, 131, 134, 147, 155, 167, 169, 170, 175, 182, 183, 187, 188, 190, 191, 192, 194, 196, 197, 203, 209, 211, 213, 217, 218, 219, 220, 221, 225, 226, 230, 232, 234, 237, 239, 248, 252, 269, 277], "ad": [1, 6, 7, 10, 18, 23, 28, 35, 36, 38, 44, 45, 54, 55, 65, 69, 76, 79, 83, 94, 96, 100, 108, 109, 117, 118, 134, 141, 169, 172, 178, 186, 187, 196, 198, 200, 201, 203, 211, 214, 217, 220, 221, 223, 226, 227, 232, 248, 269], "correctli": [1, 3, 4, 6, 7, 10, 19, 20, 34, 58, 79, 82, 90, 117, 119, 131, 201, 208, 214, 217], "backtick": [1, 6, 7], "code": [1, 6, 8, 9, 11, 12, 16, 18, 19, 20, 24, 26, 27, 37, 41, 45, 48, 49, 54, 55, 56, 58, 62, 66, 79, 81, 82, 90, 94, 95, 96, 109, 117, 119, 125, 127, 128, 132, 134, 135, 161, 167, 176, 181, 184, 186, 187, 188, 189, 191, 194, 200, 211, 213, 217, 219, 220, 221, 226, 229, 230, 232, 233, 234, 237, 238, 239, 240, 249, 264, 269, 271, 274, 276], "singl": [1, 4, 7, 10, 11, 16, 18, 20, 27, 35, 36, 38, 45, 54, 55, 59, 60, 62, 67, 68, 70, 71, 72, 79, 81, 84, 85, 90, 93, 96, 104, 105, 110, 111, 121, 128, 147, 151, 153, 161, 164, 167, 174, 177, 180, 187, 188, 190, 191, 192, 194, 196, 197, 201, 202, 203, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 226, 232, 234, 236, 239, 240, 242, 267, 269, 272, 273, 278], "render": [1, 3, 6, 7, 36, 54, 82, 181, 187, 201, 276], "resourc": [1, 6, 7, 20, 90, 195, 217, 233, 243], "style": [1, 8, 35, 54, 82, 161, 181, 187, 201, 220, 276], "guid": [1, 3, 8, 9, 11, 13, 20, 22, 26, 35, 54, 61, 117, 131, 201, 227, 260, 262, 270, 274, 275], "tip": [1, 6, 54, 131, 217, 218, 277], "few": [1, 3, 4, 10, 11, 18, 24, 32, 44, 46, 54, 55, 81, 82, 94, 95, 119, 127, 170, 176, 181, 184, 185, 188, 196, 201, 209, 210, 211, 217, 220, 221, 234, 239, 277], "extra": [1, 10, 36, 54, 55, 94, 95, 125, 172, 182, 193, 194, 201, 211, 217, 232, 233, 234, 252], "xelatex": 1, "latexmk": 1, "chrome": 1, "chromium": 1, "On": [1, 10, 18, 31, 47, 54, 56, 62, 81, 84, 94, 117, 172, 182, 191, 194, 195, 196, 197, 217, 219, 236, 240, 252, 254], "xetex": 1, "font": [1, 82, 181, 201], "lmodern": 1, "cask": 1, "tap": 1, "dejavu": 1, "strawberryperl": 1, "miktex": [1, 3], "dejavufont": 1, "appdata": 1, "microsoft": 1, "right": [1, 4, 6, 7, 10, 12, 16, 20, 22, 34, 36, 37, 45, 46, 50, 54, 55, 57, 59, 60, 62, 70, 71, 79, 81, 84, 85, 90, 93, 94, 96, 97, 98, 104, 112, 116, 117, 131, 132, 134, 135, 139, 146, 151, 153, 155, 156, 161, 164, 167, 177, 182, 185, 186, 187, 188, 190, 196, 197, 198, 199, 201, 203, 204, 208, 209, 211, 217, 218, 220, 221, 232, 234, 236, 239, 252, 267, 271, 273, 277], "click": 1, "result": [1, 3, 6, 10, 11, 12, 14, 15, 16, 18, 19, 20, 24, 28, 29, 30, 31, 32, 34, 35, 36, 44, 45, 46, 50, 53, 54, 55, 56, 58, 60, 62, 66, 71, 72, 76, 78, 79, 81, 83, 84, 85, 87, 90, 93, 94, 95, 96, 97, 104, 105, 108, 109, 110, 113, 117, 121, 127, 131, 134, 152, 159, 161, 162, 164, 166, 167, 169, 170, 172, 176, 177, 185, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 228, 232, 233, 234, 236, 237, 239, 240, 242, 246, 248, 250, 269, 271, 272, 273, 277], "version": [1, 3, 4, 5, 6, 7, 12, 18, 19, 20, 24, 25, 26, 29, 35, 36, 45, 46, 52, 54, 55, 59, 60, 62, 67, 81, 84, 85, 86, 88, 90, 92, 94, 107, 109, 117, 151, 165, 169, 177, 186, 187, 188, 191, 192, 194, 196, 197, 201, 204, 213, 219, 221, 231, 232, 234, 235, 236, 237, 239, 240, 244, 246, 251, 269, 272, 273], "where": [1, 4, 5, 6, 7, 10, 11, 12, 16, 18, 19, 20, 23, 24, 27, 28, 32, 34, 35, 36, 37, 43, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 67, 69, 70, 71, 72, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 90, 94, 97, 100, 101, 104, 108, 111, 112, 113, 114, 116, 117, 119, 130, 131, 132, 134, 135, 141, 151, 156, 162, 164, 166, 167, 168, 169, 170, 177, 180, 182, 184, 185, 186, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 225, 227, 232, 233, 234, 235, 239, 240, 242, 246, 252, 254, 267, 269, 271, 273, 277, 278], "g": [1, 3, 4, 5, 7, 10, 12, 18, 19, 20, 24, 34, 35, 36, 37, 39, 42, 44, 45, 46, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 70, 71, 72, 74, 77, 80, 81, 83, 84, 85, 90, 94, 96, 97, 104, 105, 109, 114, 116, 117, 119, 121, 122, 124, 125, 126, 131, 132, 134, 135, 147, 151, 156, 162, 164, 165, 167, 170, 172, 173, 177, 182, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 232, 233, 234, 235, 237, 239, 240, 241, 242, 254, 267, 272, 276, 277, 278], "1": [1, 3, 4, 7, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 146, 149, 150, 151, 152, 153, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 244, 246, 248, 249, 250, 252, 255, 262, 266, 267, 269, 271, 272, 273, 276, 277, 278], "dev": [1, 3, 4, 5, 237], "sympi": [2, 3, 4, 7, 8, 9, 11, 13, 14, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 253, 254, 255, 256, 258, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278], "sympy_debug": [2, 81, 242], "variabl": [2, 3, 6, 7, 10, 11, 14, 16, 19, 20, 23, 27, 28, 29, 31, 32, 34, 36, 37, 49, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 71, 73, 79, 81, 82, 84, 85, 90, 96, 97, 98, 100, 102, 104, 116, 117, 124, 126, 134, 135, 141, 156, 161, 165, 167, 170, 176, 177, 179, 182, 189, 191, 192, 194, 196, 197, 198, 201, 202, 207, 208, 213, 214, 216, 217, 218, 219, 220, 228, 232, 234, 235, 236, 240, 246, 248, 249, 251, 252, 254, 263, 267, 269, 271, 273, 278], "instanc": [2, 4, 6, 7, 10, 11, 15, 18, 19, 20, 29, 30, 31, 33, 35, 36, 45, 47, 49, 54, 56, 58, 59, 60, 62, 67, 70, 71, 72, 77, 78, 81, 82, 85, 87, 90, 94, 96, 97, 105, 109, 112, 116, 117, 135, 140, 147, 151, 157, 161, 162, 164, 166, 167, 177, 179, 181, 182, 187, 191, 192, 196, 197, 198, 199, 201, 209, 211, 213, 217, 219, 220, 221, 225, 226, 227, 232, 233, 234, 236, 239, 240, 246, 247, 248, 249, 250, 252, 254, 266, 267, 272, 277, 278], "unix": [2, 232, 233], "would": [2, 4, 5, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 22, 23, 26, 35, 36, 37, 43, 45, 46, 53, 54, 55, 59, 60, 66, 70, 79, 81, 85, 90, 94, 96, 97, 104, 105, 106, 108, 110, 117, 121, 131, 134, 162, 164, 167, 172, 176, 177, 182, 184, 187, 190, 191, 192, 194, 197, 198, 200, 201, 202, 204, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 225, 226, 232, 234, 236, 239, 240, 242, 243, 250, 251, 252, 254, 266, 267, 269, 271, 272, 273, 276, 277, 278], "do": [2, 3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 46, 50, 53, 54, 55, 56, 57, 60, 62, 64, 66, 69, 70, 73, 79, 81, 82, 84, 85, 87, 88, 90, 91, 94, 95, 101, 104, 108, 111, 112, 114, 116, 117, 118, 120, 121, 125, 128, 129, 134, 139, 142, 147, 151, 156, 159, 161, 163, 169, 171, 172, 175, 176, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 204, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 223, 226, 227, 230, 232, 233, 235, 237, 239, 240, 242, 248, 250, 251, 252, 254, 266, 267, 269, 270, 271, 272, 273, 275, 277], "true": [2, 3, 6, 10, 11, 12, 14, 15, 18, 19, 20, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 79, 81, 82, 84, 85, 86, 87, 90, 91, 94, 96, 97, 98, 102, 104, 105, 106, 107, 108, 110, 112, 113, 117, 119, 121, 134, 138, 139, 148, 151, 152, 159, 161, 162, 165, 166, 167, 170, 176, 177, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 232, 233, 234, 235, 237, 239, 240, 242, 246, 248, 249, 250, 251, 252, 255, 266, 267, 269, 271, 272, 273, 276, 277, 278], "isympi": [2, 3, 11, 12, 82], "window": [2, 242, 263], "just": [2, 4, 6, 7, 10, 11, 12, 18, 19, 20, 23, 26, 32, 35, 36, 45, 52, 54, 55, 56, 60, 77, 79, 81, 82, 83, 84, 90, 94, 95, 106, 108, 109, 114, 117, 121, 125, 131, 132, 134, 147, 152, 157, 167, 172, 176, 181, 182, 184, 188, 190, 191, 192, 194, 196, 200, 201, 208, 209, 210, 211, 213, 217, 220, 230, 232, 234, 235, 237, 251, 252, 254, 266, 267, 269, 270, 271, 272, 273, 277, 278], "limit": [2, 4, 10, 12, 23, 24, 26, 32, 34, 36, 53, 54, 56, 58, 59, 60, 62, 63, 66, 74, 76, 81, 82, 84, 90, 94, 102, 127, 132, 156, 162, 165, 181, 187, 192, 194, 197, 198, 201, 204, 205, 207, 209, 213, 214, 216, 217, 218, 219, 221, 226, 233, 236, 239, 240, 242, 245, 246, 255, 268, 269, 271, 273], "function": [2, 3, 4, 7, 8, 11, 14, 15, 16, 18, 19, 21, 22, 23, 25, 29, 30, 31, 33, 34, 35, 37, 45, 46, 49, 50, 52, 55, 56, 57, 58, 59, 63, 64, 65, 66, 71, 74, 75, 78, 80, 81, 82, 83, 85, 87, 89, 93, 95, 97, 99, 101, 102, 104, 105, 106, 110, 111, 114, 115, 116, 117, 120, 121, 122, 123, 127, 129, 130, 134, 139, 140, 141, 142, 146, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 167, 170, 176, 177, 180, 181, 183, 185, 186, 188, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278], "nice": [2, 4, 6, 26, 54, 66, 90, 94, 117, 131, 134, 187, 201, 211, 242, 272], "print": [2, 4, 6, 7, 11, 12, 16, 18, 19, 23, 26, 29, 30, 31, 32, 34, 35, 37, 38, 43, 45, 46, 53, 54, 55, 58, 59, 60, 62, 81, 83, 84, 87, 90, 91, 94, 95, 96, 98, 104, 112, 117, 119, 127, 133, 139, 147, 160, 161, 165, 167, 177, 183, 185, 187, 190, 191, 192, 196, 197, 207, 208, 210, 211, 213, 217, 219, 226, 228, 232, 234, 239, 240, 242, 244, 246, 249, 256, 258, 264, 267, 268, 269, 270, 271, 272, 273, 277], "tree": [2, 10, 11, 15, 45, 48, 54, 96, 110, 117, 159, 162, 177, 193, 197, 208, 210, 213, 220, 223, 225, 236, 239, 242, 258, 264, 268], "veri": [2, 3, 4, 6, 10, 11, 12, 14, 15, 18, 20, 36, 50, 54, 55, 58, 59, 64, 66, 72, 76, 79, 81, 84, 90, 94, 104, 108, 117, 121, 134, 139, 172, 184, 185, 188, 191, 194, 196, 197, 198, 200, 201, 202, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 232, 233, 234, 240, 266, 269, 272, 277], "sever": [3, 4, 5, 6, 10, 11, 15, 18, 20, 23, 26, 36, 39, 45, 46, 53, 54, 58, 59, 61, 62, 66, 79, 81, 94, 110, 128, 172, 174, 187, 189, 191, 194, 196, 200, 201, 202, 208, 209, 217, 221, 232, 234, 244, 256, 269, 273, 276], "instal": [3, 5, 7, 11, 12, 58, 95, 191, 192, 201, 233, 240, 264, 270, 276], "enabl": [3, 7, 11, 20, 26, 54, 81, 82, 94, 98, 117, 119, 167, 177, 181, 201, 217, 221, 232, 237, 240, 273, 276, 277], "certain": [3, 7, 11, 20, 24, 26, 33, 35, 36, 45, 52, 54, 58, 62, 70, 79, 81, 94, 96, 131, 177, 178, 188, 191, 194, 196, 201, 202, 208, 211, 213, 214, 217, 219, 220, 221, 223, 234, 235, 240, 246, 248, 254, 277], "most": [3, 4, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 23, 24, 26, 29, 30, 31, 34, 35, 36, 37, 45, 46, 53, 54, 55, 58, 60, 64, 66, 81, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 104, 108, 112, 117, 125, 131, 132, 135, 169, 176, 180, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 208, 209, 211, 214, 217, 218, 219, 220, 221, 230, 233, 234, 235, 236, 237, 239, 240, 242, 248, 250, 266, 269, 271, 272, 273, 275, 276, 277], "mention": [3, 4, 6, 20, 45, 79, 81, 104, 119, 135, 136, 182, 211, 214, 217, 221, 249, 250, 251, 252, 273], "except": [3, 4, 6, 10, 11, 12, 16, 18, 19, 20, 24, 34, 36, 45, 46, 54, 55, 58, 59, 60, 62, 79, 81, 89, 94, 111, 125, 173, 186, 188, 191, 192, 193, 196, 197, 198, 199, 201, 210, 213, 214, 217, 218, 220, 225, 230, 232, 234, 235, 238, 239, 240, 249, 252, 264, 266, 269, 272, 273], "unless": [3, 6, 11, 18, 20, 29, 31, 34, 36, 45, 53, 54, 55, 59, 62, 69, 70, 79, 90, 93, 140, 184, 185, 189, 191, 196, 197, 201, 206, 209, 210, 217, 219, 232, 236, 239, 240, 242, 246, 254, 267, 273, 277], "thei": [3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 20, 24, 26, 32, 35, 36, 37, 42, 44, 45, 46, 52, 53, 54, 55, 56, 59, 60, 62, 64, 67, 68, 69, 70, 71, 76, 79, 81, 82, 84, 85, 87, 88, 90, 93, 94, 96, 108, 111, 112, 114, 116, 117, 119, 125, 127, 129, 130, 131, 134, 135, 141, 146, 151, 156, 159, 164, 169, 170, 172, 173, 177, 180, 181, 182, 185, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 199, 201, 202, 207, 208, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 227, 230, 232, 234, 236, 239, 240, 242, 246, 252, 254, 267, 269, 270, 271, 272, 273, 277], "intend": [3, 4, 6, 10, 14, 18, 54, 55, 65, 74, 79, 94, 96, 110, 162, 191, 192, 196, 199, 214, 217, 218, 230, 235, 266], "part": [3, 4, 6, 7, 10, 11, 18, 19, 20, 28, 33, 45, 46, 53, 54, 55, 59, 60, 62, 70, 77, 79, 81, 84, 85, 87, 94, 104, 108, 109, 111, 112, 116, 117, 119, 125, 127, 128, 132, 134, 151, 163, 167, 176, 185, 189, 191, 192, 194, 196, 197, 198, 200, 201, 202, 209, 211, 213, 214, 217, 219, 232, 234, 236, 239, 267, 272, 277], "those": [3, 6, 11, 12, 14, 18, 19, 23, 24, 27, 32, 35, 36, 37, 45, 46, 52, 53, 54, 55, 58, 67, 68, 79, 81, 84, 90, 93, 94, 108, 119, 125, 140, 164, 176, 179, 181, 184, 185, 187, 191, 192, 194, 196, 197, 199, 200, 201, 207, 209, 213, 217, 218, 219, 220, 221, 227, 230, 232, 236, 239, 246, 248, 269, 271, 277], "everi": [3, 4, 6, 11, 18, 20, 23, 25, 30, 31, 32, 35, 40, 42, 45, 46, 54, 55, 69, 83, 85, 90, 94, 104, 132, 182, 184, 185, 187, 188, 189, 191, 192, 194, 196, 201, 206, 209, 211, 213, 214, 217, 220, 221, 223, 249, 252, 254, 270, 272, 273, 277], "doe": [3, 6, 7, 8, 10, 11, 15, 18, 19, 20, 24, 25, 26, 27, 30, 31, 34, 35, 36, 37, 45, 46, 50, 52, 53, 54, 55, 56, 58, 60, 62, 64, 65, 67, 68, 70, 79, 81, 84, 85, 90, 93, 94, 96, 106, 108, 110, 117, 119, 124, 128, 147, 151, 157, 161, 163, 166, 176, 184, 185, 187, 189, 190, 191, 192, 194, 196, 197, 198, 201, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 226, 227, 230, 232, 234, 236, 239, 240, 242, 246, 247, 250, 266, 267, 269, 272, 273, 276, 277, 278], "themselv": [3, 7, 10, 20, 32, 35, 46, 50, 52, 54, 81, 94, 127, 128, 171, 191, 192, 196, 207, 221, 227, 236, 239, 242, 277], "incomplet": [3, 6, 7, 54, 59, 62, 189, 191, 197, 201, 203, 219, 220], "main": [3, 5, 6, 7, 10, 12, 31, 32, 36, 54, 60, 79, 85, 90, 93, 117, 125, 165, 171, 181, 185, 187, 188, 192, 193, 201, 208, 217, 220, 226, 233, 277, 278], "webpag": [3, 7], "complet": [3, 4, 6, 10, 11, 12, 18, 23, 31, 36, 54, 55, 56, 58, 60, 61, 62, 70, 79, 81, 90, 94, 108, 112, 113, 121, 127, 134, 153, 156, 157, 185, 194, 197, 198, 202, 208, 213, 214, 217, 220, 221, 232, 234, 242, 271, 272, 277], "io": [3, 7, 82, 201, 240], "one": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 25, 27, 28, 31, 32, 34, 35, 36, 38, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 70, 71, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90, 93, 94, 95, 96, 97, 98, 101, 102, 104, 105, 108, 109, 111, 112, 117, 118, 121, 131, 132, 134, 136, 139, 140, 141, 147, 152, 161, 165, 167, 169, 170, 172, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 227, 228, 232, 233, 234, 236, 239, 240, 242, 246, 250, 252, 254, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277], "arbitrari": [3, 6, 10, 11, 12, 18, 20, 23, 24, 34, 39, 46, 47, 53, 54, 55, 58, 59, 62, 65, 66, 68, 84, 85, 90, 98, 128, 132, 153, 156, 185, 187, 188, 191, 192, 194, 196, 198, 213, 217, 218, 219, 227, 237, 240, 246, 247, 266, 267, 272, 277, 278], "precis": [3, 4, 6, 11, 12, 18, 19, 20, 23, 36, 45, 54, 57, 58, 59, 62, 70, 81, 90, 94, 102, 132, 186, 188, 191, 192, 196, 197, 198, 201, 208, 213, 214, 219, 220, 233, 234, 242, 266, 277], "arithmet": [3, 36, 54, 55, 58, 85, 90, 94, 156, 163, 186, 187, 188, 190, 191, 192, 194, 195, 199, 202], "hood": [3, 11], "whenev": [3, 4, 10, 11, 12, 20, 52, 79, 81, 90, 174, 187, 188, 189, 203, 208, 211, 221, 267, 269, 272], "calcul": [3, 12, 16, 18, 28, 34, 37, 46, 52, 54, 55, 56, 57, 58, 60, 62, 64, 66, 67, 68, 70, 71, 81, 85, 87, 90, 94, 97, 98, 106, 108, 109, 111, 112, 116, 119, 120, 121, 136, 139, 140, 143, 146, 162, 163, 164, 165, 167, 168, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 191, 192, 194, 196, 197, 198, 203, 208, 217, 221, 225, 233, 234, 240, 246, 248, 252, 253, 254, 273, 276], "float": [3, 11, 18, 20, 36, 45, 60, 62, 69, 71, 81, 82, 85, 90, 94, 96, 102, 104, 134, 140, 181, 187, 191, 192, 201, 213, 219, 221, 232, 240, 242, 257, 266, 269], "point": [3, 4, 6, 7, 10, 11, 12, 16, 18, 23, 26, 28, 34, 36, 37, 45, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 76, 77, 78, 79, 81, 90, 94, 97, 98, 100, 102, 109, 111, 112, 113, 114, 116, 117, 119, 121, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 147, 169, 172, 178, 182, 183, 185, 187, 188, 191, 192, 194, 196, 197, 201, 203, 207, 208, 209, 217, 219, 220, 221, 233, 236, 239, 240, 242, 246, 248, 250, 251, 252, 253, 254, 255, 257, 266, 267, 269, 272], "valu": [3, 4, 6, 7, 10, 11, 12, 16, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 45, 46, 50, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 109, 111, 112, 113, 114, 116, 117, 119, 131, 134, 136, 140, 143, 146, 151, 153, 156, 159, 161, 162, 163, 164, 167, 168, 170, 171, 172, 177, 178, 180, 182, 184, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 198, 199, 201, 202, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 232, 234, 235, 239, 240, 242, 248, 250, 252, 255, 267, 269, 272], "evalf": [3, 6, 11, 12, 18, 24, 36, 53, 58, 59, 60, 62, 73, 76, 77, 85, 90, 96, 117, 119, 134, 149, 192, 197, 201, 208, 209, 213, 221, 233, 240, 257, 268], "cannot": [3, 4, 6, 7, 10, 11, 12, 15, 19, 20, 26, 29, 30, 31, 32, 33, 34, 36, 46, 51, 53, 54, 56, 58, 60, 64, 66, 67, 69, 71, 76, 81, 83, 86, 88, 90, 92, 94, 104, 162, 170, 172, 184, 185, 187, 192, 194, 196, 197, 198, 201, 208, 209, 213, 214, 216, 217, 219, 220, 221, 222, 230, 232, 233, 234, 239, 243, 246, 247, 271, 272, 273, 277, 278], "without": [3, 4, 6, 7, 10, 11, 12, 18, 20, 26, 30, 32, 33, 36, 53, 54, 55, 56, 58, 62, 79, 81, 82, 85, 87, 90, 104, 105, 117, 123, 125, 130, 131, 167, 172, 176, 177, 178, 184, 187, 190, 191, 194, 197, 201, 203, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 223, 226, 227, 230, 232, 233, 234, 237, 239, 240, 242, 248, 251, 273, 277], "import": [3, 4, 8, 11, 12, 14, 15, 16, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 255, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278], "importerror": 3, "extern": [3, 26, 82, 96, 100, 102, 119, 127, 181, 191, 192, 202, 209, 213, 221, 232, 233], "doc": [3, 4, 6, 7, 8, 12, 25, 36, 45, 53, 54, 70, 82, 132, 169, 191, 193, 214, 217, 232, 233, 235, 237, 239, 246, 250], "latest": [3, 5, 26, 35, 235, 237, 240], "mean": [3, 4, 6, 7, 10, 11, 12, 18, 19, 20, 32, 37, 46, 53, 54, 55, 56, 72, 79, 81, 82, 84, 85, 88, 90, 94, 97, 108, 167, 169, 172, 177, 181, 184, 187, 188, 189, 191, 194, 196, 200, 201, 211, 213, 214, 217, 219, 220, 221, 222, 223, 225, 226, 232, 239, 250, 266, 267, 269, 271, 272, 273, 277, 278], "did": [3, 7, 19, 54, 81, 94, 108, 124, 172, 194, 198, 209, 219, 230, 240, 269, 271, 277], "explain": [3, 4, 6, 7, 18, 24, 35, 50, 54, 62, 72, 77, 128, 188, 191, 194, 196, 198, 208], "ones": [3, 4, 10, 20, 26, 36, 45, 50, 54, 79, 81, 84, 85, 87, 90, 93, 94, 117, 140, 161, 167, 190, 194, 204, 214, 217, 222, 228, 234, 242, 246, 250, 273, 276], "typic": [3, 4, 10, 11, 20, 50, 60, 79, 94, 104, 109, 114, 118, 176, 185, 187, 189, 194, 198, 211, 233, 234, 250], "directli": [3, 4, 6, 10, 11, 12, 16, 18, 19, 20, 26, 30, 31, 34, 35, 36, 45, 53, 54, 56, 60, 65, 85, 87, 90, 94, 117, 153, 165, 170, 177, 180, 187, 188, 190, 191, 192, 196, 197, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 232, 233, 234, 235, 236, 237, 267, 278], "git": [3, 8], "repositori": [3, 5, 7, 26], "vast": [3, 24, 81, 193], "wrap": [3, 4, 6, 29, 30, 31, 32, 36, 43, 54, 60, 82, 95, 181, 185, 187, 190, 191, 194, 201, 204, 220, 226, 233, 237, 240, 242, 272], "addition": [3, 6, 10, 54, 129, 165, 185, 194, 201, 221, 230, 237, 249], "ci": [3, 7, 62, 79, 201, 276], "wish": [3, 6, 12, 20, 26, 36, 54, 55, 58, 79, 94, 162, 176, 185, 236, 240, 267, 271, 273, 278], "local": [3, 27, 29, 30, 31, 54, 56, 79, 96, 124, 126, 179, 188, 194, 219, 232], "improv": [3, 4, 10, 19, 20, 54, 79, 127, 187, 191, 194, 195, 197, 198, 200, 202, 217, 220, 226, 257, 267, 273], "perform": [3, 10, 11, 12, 15, 16, 18, 20, 33, 35, 36, 37, 45, 46, 49, 53, 54, 55, 57, 58, 60, 67, 71, 78, 81, 88, 90, 94, 95, 110, 112, 119, 121, 127, 131, 132, 134, 151, 152, 161, 164, 167, 182, 185, 189, 190, 191, 194, 196, 197, 202, 203, 204, 208, 213, 214, 217, 219, 220, 221, 222, 233, 239, 246, 247, 249, 252, 257, 266, 267, 271, 272, 277], "gmpy2": [3, 191, 192], "wrapper": [3, 10, 11, 20, 30, 32, 36, 46, 54, 62, 90, 131, 179, 181, 190, 191, 194, 201, 208, 217, 220, 221, 233, 237, 239], "gmp": 3, "multipl": [3, 4, 6, 10, 11, 12, 14, 18, 20, 23, 24, 30, 31, 32, 34, 35, 36, 37, 43, 45, 46, 50, 53, 54, 55, 59, 60, 62, 64, 69, 72, 74, 79, 81, 83, 84, 85, 87, 90, 91, 94, 96, 101, 104, 108, 119, 127, 134, 135, 151, 152, 153, 157, 164, 166, 169, 172, 173, 174, 177, 180, 184, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 201, 206, 207, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 227, 230, 234, 235, 236, 237, 239, 240, 242, 246, 250, 266, 267, 269, 270, 272, 273, 278], "larg": [3, 4, 6, 12, 18, 45, 46, 54, 55, 64, 79, 81, 93, 94, 108, 113, 131, 134, 147, 172, 176, 186, 191, 192, 194, 197, 200, 201, 202, 208, 211, 213, 221, 226, 233, 240, 242, 248, 266, 271, 277], "integ": [3, 6, 7, 10, 11, 12, 18, 20, 22, 23, 29, 30, 31, 34, 36, 37, 43, 45, 46, 47, 48, 50, 53, 55, 56, 57, 58, 59, 61, 62, 64, 67, 78, 79, 81, 82, 83, 84, 85, 87, 90, 91, 94, 96, 97, 104, 106, 156, 161, 163, 164, 165, 167, 169, 177, 179, 181, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 206, 207, 208, 210, 211, 213, 214, 217, 219, 220, 221, 225, 226, 227, 233, 234, 236, 239, 242, 267, 269, 272, 276, 277], "faster": [3, 18, 36, 39, 54, 62, 85, 94, 95, 108, 110, 112, 113, 131, 190, 191, 192, 194, 196, 197, 198, 202, 204, 208, 213, 214, 217, 218, 220, 233, 236], "int": [3, 6, 7, 10, 11, 12, 18, 19, 20, 28, 34, 36, 46, 54, 55, 56, 59, 60, 62, 63, 70, 79, 81, 82, 84, 85, 90, 91, 94, 96, 102, 104, 147, 151, 152, 161, 177, 179, 180, 181, 186, 187, 191, 192, 196, 197, 198, 201, 203, 204, 206, 217, 218, 221, 233, 237, 239, 242, 269, 271, 272, 276, 277], "core": [3, 4, 5, 6, 11, 12, 15, 18, 19, 20, 32, 34, 36, 45, 55, 60, 61, 63, 71, 85, 89, 94, 96, 165, 166, 189, 191, 192, 193, 194, 196, 197, 198, 201, 208, 209, 213, 214, 217, 221, 231, 232, 233, 239, 240, 244, 256, 257, 269, 272], "oper": [3, 5, 6, 11, 18, 19, 20, 24, 28, 32, 36, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 62, 64, 72, 74, 77, 79, 84, 85, 87, 89, 94, 96, 104, 105, 108, 112, 113, 121, 125, 131, 134, 139, 143, 144, 148, 150, 151, 152, 153, 158, 159, 162, 164, 165, 166, 167, 176, 177, 179, 183, 188, 189, 190, 191, 192, 194, 196, 197, 198, 201, 204, 206, 209, 210, 212, 213, 217, 219, 220, 223, 224, 225, 226, 232, 233, 236, 239, 240, 246, 253, 256, 262, 268, 269, 270, 272, 277], "poli": [3, 11, 12, 53, 54, 55, 59, 60, 62, 63, 70, 76, 81, 85, 87, 90, 94, 134, 188, 189, 193, 194, 196, 197, 198, 200, 203, 216, 217, 219, 220, 232], "refer": [3, 4, 5, 7, 11, 12, 16, 19, 20, 21, 23, 24, 26, 30, 31, 32, 34, 36, 38, 40, 42, 43, 45, 46, 47, 48, 52, 55, 57, 59, 60, 62, 64, 69, 70, 71, 74, 76, 80, 82, 83, 84, 89, 91, 95, 97, 102, 104, 105, 107, 109, 111, 112, 114, 116, 117, 119, 127, 129, 132, 134, 135, 136, 137, 138, 140, 144, 146, 148, 149, 150, 153, 155, 156, 164, 165, 167, 171, 176, 177, 178, 179, 180, 182, 184, 191, 193, 198, 201, 203, 204, 206, 209, 212, 213, 215, 217, 218, 219, 221, 227, 236, 238, 239, 240, 242, 246, 249, 250, 254, 257, 260, 261, 262, 263, 264, 269, 273, 274, 277], "domain": [3, 6, 10, 11, 16, 20, 34, 35, 54, 55, 57, 59, 60, 62, 73, 75, 76, 79, 81, 87, 90, 91, 94, 101, 104, 117, 134, 188, 190, 193, 194, 196, 198, 199, 215, 216, 217, 219, 221, 273, 278], "No": [3, 6, 7, 12, 24, 35, 54, 62, 69, 84, 94, 105, 117, 162, 187, 197, 203, 204, 213, 214, 219, 220, 221, 226, 230, 236, 237, 239, 266, 278], "mani": [3, 4, 6, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 26, 34, 35, 36, 37, 42, 45, 50, 54, 55, 56, 58, 60, 62, 66, 79, 81, 84, 85, 90, 94, 95, 112, 113, 117, 119, 127, 130, 131, 134, 151, 167, 175, 185, 188, 190, 191, 192, 194, 196, 205, 208, 209, 211, 213, 214, 217, 218, 219, 220, 221, 225, 234, 239, 266, 267, 269, 270, 271, 272, 276, 277, 278], "algorithm": [3, 6, 11, 12, 18, 23, 24, 34, 38, 39, 41, 44, 45, 46, 48, 50, 52, 53, 54, 55, 58, 59, 60, 66, 71, 79, 81, 84, 87, 90, 91, 94, 105, 131, 154, 172, 177, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 202, 205, 206, 209, 210, 212, 213, 214, 217, 219, 220, 221, 227, 236, 239, 258, 267, 272, 273, 277], "simplif": [3, 11, 12, 18, 29, 31, 33, 34, 36, 54, 56, 59, 60, 79, 85, 90, 96, 110, 117, 131, 134, 151, 167, 177, 197, 202, 212, 217, 219, 220, 256, 257, 259, 266, 268, 270, 271], "factor": [3, 10, 11, 12, 37, 45, 46, 53, 54, 55, 58, 59, 60, 62, 79, 81, 90, 94, 97, 104, 134, 136, 144, 148, 151, 163, 167, 172, 173, 174, 188, 191, 192, 193, 195, 196, 197, 204, 210, 211, 213, 214, 219, 221, 225, 236, 249, 252, 271, 273], "matric": [3, 6, 11, 17, 18, 32, 36, 54, 55, 81, 91, 93, 104, 111, 112, 113, 117, 121, 131, 134, 136, 139, 140, 142, 150, 151, 161, 166, 177, 185, 186, 190, 196, 201, 202, 209, 211, 213, 214, 217, 219, 220, 222, 224, 234, 235, 262, 268, 270, 271], "thu": [3, 4, 10, 11, 12, 16, 23, 32, 39, 45, 46, 54, 55, 56, 60, 62, 77, 79, 81, 85, 88, 90, 93, 94, 105, 116, 121, 127, 131, 172, 177, 189, 194, 196, 198, 202, 208, 211, 213, 234, 239, 240, 250, 251, 269, 272, 277, 278], "speed": [3, 6, 31, 36, 45, 54, 55, 58, 85, 94, 95, 106, 111, 112, 113, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 134, 135, 138, 141, 176, 177, 180, 185, 186, 198, 201, 202, 208, 213, 217, 233, 236, 239, 272, 273], "non": [3, 4, 11, 12, 18, 20, 24, 27, 32, 34, 37, 44, 47, 53, 54, 55, 59, 60, 61, 62, 63, 64, 67, 68, 69, 81, 83, 84, 85, 86, 87, 90, 91, 93, 108, 112, 114, 119, 121, 125, 129, 130, 134, 151, 156, 166, 167, 169, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 204, 208, 209, 211, 213, 214, 216, 217, 219, 220, 221, 222, 225, 226, 227, 232, 234, 239, 242, 252, 272, 277, 278], "who": [3, 4, 6, 16, 20, 55, 56, 134, 185, 194, 201, 270], "abl": [3, 4, 6, 11, 16, 18, 20, 35, 36, 45, 50, 54, 55, 56, 65, 73, 81, 87, 90, 94, 101, 117, 129, 131, 132, 134, 135, 188, 191, 198, 217, 220, 232, 249, 271, 276, 278], "experi": [3, 119, 220, 221], "design": [3, 4, 6, 10, 11, 13, 15, 19, 20, 22, 25, 32, 37, 44, 54, 90, 93, 96, 134, 135, 191, 195, 201, 206, 211, 217, 220, 271, 272, 276], "interfac": [3, 7, 11, 23, 34, 54, 82, 111, 127, 136, 162, 181, 183, 185, 191, 194, 199, 220, 233, 234, 263], "ipython": [3, 6, 10, 11, 12, 26, 82, 134, 181, 240, 244, 245, 275, 276], "jupyt": [3, 10, 11, 20, 240, 244], "notebook": [3, 11, 20, 26, 82, 181, 240, 275, 276], "init_sess": [3, 82, 276], "usual": [3, 10, 11, 12, 16, 18, 35, 37, 45, 53, 54, 55, 72, 79, 81, 90, 127, 153, 165, 172, 182, 184, 185, 188, 189, 191, 192, 194, 200, 201, 202, 208, 211, 217, 220, 221, 222, 226, 227, 234, 236, 240, 246, 254, 266, 269, 272, 276, 277], "flag": [3, 4, 14, 20, 34, 36, 45, 46, 50, 52, 54, 67, 69, 81, 84, 85, 86, 90, 94, 117, 151, 187, 192, 194, 197, 198, 201, 202, 203, 209, 213, 214, 217, 219, 220, 227, 232, 233, 239, 242, 266, 277], "auto_symbol": [3, 82, 96], "auto_int_to_integ": [3, 82], "qt": 3, "consol": [3, 4, 12, 54, 82, 181, 187, 276], "express": [3, 4, 6, 7, 11, 14, 15, 18, 19, 20, 22, 24, 29, 30, 31, 32, 33, 34, 46, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 69, 70, 74, 77, 78, 79, 81, 82, 85, 88, 89, 90, 93, 94, 95, 97, 104, 105, 107, 108, 109, 113, 114, 117, 121, 127, 129, 130, 131, 132, 134, 135, 142, 146, 150, 151, 155, 156, 159, 162, 164, 165, 166, 167, 169, 170, 172, 174, 176, 177, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 201, 202, 204, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 240, 242, 246, 247, 249, 251, 252, 253, 254, 258, 259, 260, 264, 267, 268, 269, 270, 271, 273, 276, 277, 278], "mathjax": [3, 7, 82, 181, 276], "preview": [3, 35, 235, 264], "save": [3, 11, 34, 54, 90, 94, 187, 200, 219, 236], "viewer": [3, 7, 35, 201, 235], "parser": [3, 87, 96, 127, 134, 232], "modul": [3, 4, 5, 6, 7, 11, 12, 15, 18, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 44, 46, 54, 55, 57, 59, 60, 62, 66, 70, 74, 77, 80, 81, 82, 84, 87, 88, 89, 90, 95, 96, 97, 99, 100, 102, 105, 108, 117, 118, 123, 127, 129, 130, 134, 136, 139, 141, 142, 154, 157, 170, 171, 172, 173, 182, 185, 187, 192, 193, 195, 198, 199, 201, 205, 208, 211, 215, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 248, 250, 252, 253, 254, 255, 256, 262, 264, 266, 269, 271, 277, 278], "parse_expr": [3, 10, 18, 24, 96], "mathematca": 3, "parse_mathematica": [3, 10, 96], "maxima": [3, 23, 96, 220], "parse_maxima": [3, 96], "antlr": [3, 96, 117], "runtim": [3, 11, 36, 54, 113, 264], "autolev": [3, 119, 127], "call": [3, 4, 6, 7, 11, 12, 15, 16, 18, 19, 20, 22, 23, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 43, 44, 45, 46, 52, 54, 55, 57, 58, 59, 61, 62, 64, 69, 70, 72, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 96, 97, 98, 104, 108, 117, 119, 121, 128, 131, 132, 157, 159, 162, 167, 172, 177, 182, 184, 185, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 208, 209, 211, 213, 214, 216, 217, 219, 220, 221, 223, 225, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 246, 248, 249, 252, 254, 267, 269, 271, 272, 273, 276, 277, 278], "antlr4": [3, 96], "awar": [3, 4, 6, 11, 12, 19, 34, 54, 58, 84, 90, 211, 221, 240], "must": [3, 4, 5, 6, 10, 11, 12, 18, 19, 28, 29, 30, 31, 36, 45, 46, 48, 50, 52, 53, 54, 55, 56, 59, 60, 62, 64, 67, 70, 73, 76, 77, 79, 81, 84, 85, 86, 87, 90, 93, 94, 97, 98, 100, 102, 104, 105, 112, 113, 117, 119, 127, 129, 130, 131, 132, 134, 147, 162, 164, 167, 176, 177, 185, 186, 187, 188, 189, 192, 194, 196, 197, 201, 202, 209, 210, 211, 213, 214, 217, 219, 220, 221, 225, 226, 232, 233, 234, 235, 236, 237, 239, 240, 243, 269, 271, 272, 276, 277], "match": [3, 4, 6, 10, 12, 18, 20, 45, 46, 53, 54, 62, 67, 79, 81, 85, 90, 116, 143, 168, 176, 177, 190, 197, 213, 214, 217, 218, 219, 221, 230, 232, 234, 239, 240, 251, 267], "wa": [3, 4, 10, 12, 14, 18, 20, 43, 45, 46, 48, 54, 55, 56, 62, 67, 90, 94, 96, 108, 109, 117, 119, 121, 131, 132, 162, 172, 184, 185, 186, 188, 194, 196, 197, 198, 200, 201, 210, 211, 213, 217, 219, 221, 230, 232, 235, 237, 239, 240, 267, 269, 271, 272, 275], "compil": [3, 36, 82, 95, 108, 134, 181, 201, 213, 226, 232, 233, 234, 256, 271], "4": [3, 7, 12, 14, 16, 18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 104, 105, 106, 110, 117, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132, 134, 135, 136, 139, 143, 146, 151, 161, 162, 164, 165, 166, 167, 168, 170, 176, 177, 178, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 223, 226, 227, 232, 233, 236, 239, 240, 246, 248, 249, 250, 252, 254, 255, 266, 267, 269, 271, 272, 273, 277, 278], "clang": [3, 96], "bind": [3, 36, 201, 233], "parse_c": 3, "lfortran": [3, 96], "fortran": [3, 11, 16, 20, 34, 95, 96, 108, 134, 186, 234, 258, 264, 276], "satisfi": [3, 7, 10, 18, 23, 31, 32, 34, 37, 42, 45, 50, 54, 55, 59, 62, 64, 77, 79, 83, 84, 90, 94, 113, 131, 151, 156, 188, 189, 194, 196, 197, 201, 207, 208, 209, 214, 217, 218, 219, 220, 221, 227, 272, 277], "implement": [3, 6, 7, 10, 11, 13, 15, 19, 20, 23, 24, 25, 28, 29, 30, 31, 34, 35, 36, 37, 39, 44, 45, 46, 51, 54, 55, 57, 59, 60, 62, 65, 67, 74, 75, 77, 78, 80, 81, 84, 85, 86, 90, 94, 95, 96, 108, 117, 127, 136, 138, 139, 142, 151, 152, 160, 161, 163, 171, 176, 178, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 205, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 225, 226, 236, 238, 239, 240, 243, 253, 256, 264, 267, 271, 277], "dpll": 3, "But": [3, 4, 7, 10, 11, 12, 20, 24, 53, 54, 62, 68, 78, 85, 90, 94, 155, 156, 167, 172, 177, 188, 189, 194, 198, 208, 210, 211, 213, 214, 217, 219, 220, 226, 236, 239, 240, 248, 267, 269, 271, 272, 277], "sat": [3, 30], "solver": [3, 6, 11, 30, 62, 90, 94, 116, 127, 134, 135, 190, 193, 201, 213, 214, 218, 232, 256, 257, 268, 270], "ask": [3, 6, 11, 12, 15, 18, 19, 30, 31, 32, 33, 54, 66, 79, 117, 172, 188, 207, 213, 220, 239, 269], "pycosat": 3, "forc": [3, 12, 16, 19, 20, 54, 58, 60, 64, 70, 79, 81, 84, 97, 98, 100, 109, 111, 112, 116, 119, 121, 122, 123, 124, 127, 129, 130, 131, 134, 155, 156, 170, 182, 185, 187, 189, 191, 210, 213, 214, 219, 232, 252, 254, 276, 277], "pysat": 3, "minisat": 3, "minisat22": 3, "heavi": [3, 221, 272], "primarili": [3, 11, 18, 36, 54, 60, 94, 97, 166, 197, 199, 233, 236, 242, 249], "support": [3, 4, 5, 6, 7, 10, 11, 12, 20, 26, 28, 29, 30, 31, 34, 35, 36, 46, 54, 58, 61, 62, 64, 78, 81, 87, 90, 94, 95, 96, 97, 98, 100, 101, 104, 108, 117, 134, 162, 177, 184, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 206, 207, 208, 209, 213, 217, 218, 219, 220, 221, 222, 226, 230, 232, 233, 234, 240, 250, 252, 267, 269, 272, 276], "give": [3, 4, 6, 12, 14, 18, 19, 20, 23, 24, 29, 31, 36, 37, 43, 45, 46, 47, 48, 53, 54, 55, 56, 59, 60, 62, 64, 66, 67, 69, 70, 78, 79, 81, 82, 84, 87, 90, 93, 94, 95, 97, 100, 104, 117, 134, 146, 161, 162, 164, 165, 169, 170, 172, 173, 175, 177, 180, 182, 184, 185, 186, 187, 188, 189, 191, 192, 194, 196, 197, 198, 201, 202, 203, 204, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 232, 233, 234, 239, 249, 254, 269, 270, 272, 277, 278], "rudimentari": [3, 20, 194], "text": [3, 4, 6, 7, 11, 20, 26, 36, 45, 55, 59, 60, 62, 72, 79, 82, 85, 90, 94, 132, 172, 181, 187, 188, 201, 208, 214, 217, 220, 221, 232], "pyglet": [3, 201, 263], "pygletplot": [3, 187], "2d": [3, 10, 67, 68, 70, 80, 97, 98, 100, 145, 177, 187, 201, 214, 226, 271], "3d": [3, 10, 28, 38, 67, 68, 97, 145, 168, 182, 187, 249, 251, 252, 253, 254], "evalu": [3, 6, 11, 16, 18, 19, 22, 24, 29, 30, 31, 34, 36, 54, 56, 59, 60, 62, 65, 69, 70, 74, 79, 81, 84, 87, 90, 94, 95, 96, 104, 108, 110, 117, 127, 131, 132, 142, 144, 146, 148, 153, 156, 164, 167, 186, 187, 191, 192, 194, 195, 197, 201, 202, 207, 208, 209, 211, 213, 214, 217, 219, 220, 221, 223, 233, 234, 235, 240, 252, 257, 266, 267, 268, 269, 271, 273], "numer": [3, 6, 10, 11, 12, 14, 16, 18, 22, 23, 32, 34, 36, 53, 54, 59, 62, 66, 70, 74, 77, 90, 94, 96, 100, 101, 102, 104, 111, 112, 113, 117, 119, 127, 131, 135, 139, 146, 149, 164, 171, 176, 185, 187, 191, 192, 194, 195, 196, 197, 200, 201, 210, 211, 213, 217, 219, 220, 226, 232, 233, 239, 240, 257, 266, 269, 273, 277], "variou": [3, 6, 7, 11, 16, 20, 34, 36, 38, 45, 53, 54, 59, 74, 79, 81, 84, 114, 146, 150, 151, 162, 164, 176, 188, 189, 192, 193, 194, 196, 202, 208, 211, 214, 217, 218, 220, 234, 277], "primari": [3, 4, 6, 7, 18, 20, 54, 66, 84, 185, 188, 234, 240], "vehicl": 3, "between": [3, 4, 11, 15, 19, 20, 23, 35, 36, 44, 45, 46, 48, 52, 54, 56, 59, 62, 64, 66, 67, 68, 69, 70, 71, 81, 83, 84, 87, 88, 90, 94, 95, 96, 100, 101, 102, 104, 111, 114, 116, 117, 120, 124, 126, 128, 131, 132, 134, 135, 136, 139, 140, 146, 153, 155, 156, 157, 161, 164, 165, 166, 167, 170, 171, 172, 177, 178, 179, 180, 182, 184, 185, 187, 188, 190, 193, 194, 196, 197, 201, 203, 213, 217, 218, 219, 220, 221, 222, 235, 240, 246, 248, 249, 252, 254, 269], "standard": [3, 7, 10, 11, 12, 18, 20, 23, 24, 36, 54, 58, 60, 62, 77, 79, 81, 82, 83, 84, 88, 90, 94, 95, 96, 107, 144, 148, 177, 182, 188, 191, 192, 194, 201, 204, 209, 213, 214, 217, 220, 221, 234, 240, 243, 249, 254, 266, 269, 277], "wai": [3, 4, 5, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 27, 35, 37, 38, 43, 45, 46, 47, 50, 54, 56, 59, 62, 70, 74, 78, 79, 81, 83, 87, 90, 93, 94, 96, 97, 100, 108, 112, 114, 116, 117, 121, 123, 124, 127, 131, 147, 161, 164, 165, 170, 172, 175, 176, 177, 179, 180, 182, 184, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 208, 211, 213, 214, 217, 218, 220, 222, 223, 226, 227, 230, 234, 236, 239, 240, 243, 246, 249, 250, 251, 252, 254, 266, 267, 269, 270, 271, 272, 277, 278], "principl": [3, 55, 85, 94, 138, 188, 189, 194, 210, 219], "pass": [3, 4, 5, 6, 11, 12, 14, 15, 18, 19, 20, 24, 27, 28, 31, 34, 35, 36, 45, 46, 54, 55, 56, 58, 60, 61, 62, 64, 67, 68, 70, 81, 82, 84, 85, 87, 90, 91, 94, 96, 97, 102, 104, 109, 116, 117, 121, 134, 135, 139, 156, 157, 161, 162, 164, 165, 177, 181, 187, 188, 190, 191, 192, 194, 196, 197, 199, 201, 202, 208, 209, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 230, 232, 233, 234, 235, 237, 239, 240, 242, 245, 246, 266, 267, 272, 276, 277, 278], "appropri": [3, 6, 7, 12, 16, 23, 45, 54, 60, 69, 90, 108, 119, 156, 157, 167, 177, 184, 190, 191, 197, 198, 201, 207, 208, 213, 214, 219, 221, 226, 234, 250, 276], "namespac": [3, 6, 10, 27, 36, 37, 54, 192, 214, 217, 218, 232, 234, 235, 240], "dictionari": [3, 10, 11, 24, 35, 36, 43, 45, 46, 52, 54, 59, 68, 70, 83, 85, 90, 93, 94, 96, 97, 110, 112, 113, 116, 117, 119, 121, 124, 129, 131, 157, 167, 177, 185, 187, 189, 192, 194, 196, 197, 199, 201, 208, 213, 214, 217, 218, 219, 220, 221, 225, 227, 232, 236, 239, 240, 246, 266, 273], "third": [3, 4, 14, 36, 45, 46, 54, 62, 64, 68, 104, 164, 170, 184, 189, 197, 211, 217, 220, 221, 237, 239, 253, 267, 272], "argument": [3, 4, 5, 6, 11, 15, 18, 19, 20, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 70, 71, 79, 81, 82, 84, 85, 87, 90, 93, 94, 96, 97, 102, 104, 112, 116, 117, 129, 130, 134, 141, 144, 148, 150, 153, 156, 161, 162, 164, 165, 166, 167, 175, 181, 182, 186, 187, 188, 189, 191, 192, 194, 196, 197, 200, 201, 202, 203, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 225, 226, 232, 233, 234, 235, 236, 237, 239, 240, 242, 249, 250, 252, 266, 267, 272, 273, 277], "default": [3, 4, 6, 7, 11, 12, 18, 20, 23, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 44, 45, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 76, 81, 82, 84, 85, 87, 90, 91, 94, 95, 96, 97, 98, 100, 102, 104, 106, 108, 109, 110, 111, 112, 113, 117, 131, 140, 157, 159, 162, 164, 165, 167, 173, 176, 177, 179, 180, 181, 186, 187, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 226, 227, 232, 233, 234, 236, 237, 239, 240, 242, 246, 266, 267, 271, 273, 276, 277], "translat": [3, 10, 36, 45, 54, 63, 65, 69, 71, 95, 96, 104, 107, 111, 112, 124, 126, 132, 184, 187, 201, 217, 219, 233, 234, 240, 242, 250], "numpi": [3, 6, 10, 11, 20, 26, 36, 54, 77, 82, 89, 95, 102, 117, 134, 151, 161, 190, 201, 221, 226, 233, 234, 240, 266, 269], "By": [3, 12, 18, 20, 23, 29, 31, 36, 44, 53, 54, 56, 58, 59, 62, 68, 69, 73, 77, 79, 84, 85, 90, 93, 94, 95, 96, 97, 98, 102, 109, 162, 167, 187, 189, 191, 192, 194, 196, 197, 198, 200, 201, 203, 208, 210, 213, 214, 217, 219, 220, 221, 225, 227, 228, 232, 235, 239, 240, 252, 266, 271, 272, 277], "produc": [3, 6, 7, 11, 19, 20, 24, 35, 45, 54, 55, 67, 81, 84, 90, 177, 191, 196, 197, 201, 208, 217, 218, 219, 221, 230, 232, 236, 237, 239, 276], "behavior": [3, 4, 10, 11, 12, 20, 45, 54, 59, 62, 81, 96, 107, 108, 127, 131, 162, 188, 189, 196, 197, 201, 202, 206, 208, 210, 213, 230, 233, 235, 239, 240, 269], "backward": [3, 8, 16, 34, 54, 85, 90, 201, 239, 277], "scipi": [3, 11, 36, 54, 62, 108, 134, 161, 201, 221, 233, 240, 266, 275], "special": [3, 6, 11, 13, 18, 20, 24, 27, 28, 46, 54, 55, 57, 58, 59, 61, 69, 72, 79, 81, 85, 90, 134, 151, 156, 182, 188, 191, 193, 194, 195, 196, 201, 210, 211, 213, 217, 218, 219, 221, 232, 233, 234, 237, 239, 240, 249, 252, 254, 258, 259, 267, 268, 272], "cupi": [3, 95], "cuda": [3, 95], "gpu": [3, 95, 134], "jax": [3, 95, 240], "xla": [3, 95], "program": [3, 7, 12, 18, 36, 38, 46, 134, 172, 186, 234, 236, 269, 271, 275, 277], "tpu": [3, 95], "compatibli": 3, "tensorflow": [3, 240], "learn": [3, 5, 7, 22, 24, 90, 132, 185, 210, 220, 266, 269, 270, 271, 275], "numexpr": [3, 240], "fast": [3, 18, 36, 54, 81, 89, 90, 94, 139, 192, 193, 194, 195, 196, 197, 198, 204, 208, 217, 219, 236, 239, 240], "alreadi": [3, 4, 10, 12, 18, 20, 23, 24, 26, 45, 46, 54, 55, 63, 64, 67, 68, 70, 79, 81, 85, 91, 94, 100, 105, 109, 117, 131, 136, 162, 164, 167, 182, 184, 185, 187, 190, 191, 194, 196, 200, 204, 210, 211, 213, 217, 220, 221, 227, 250, 252, 267, 269, 270, 271, 275, 276, 277, 278], "number": [3, 4, 5, 6, 7, 10, 11, 14, 15, 18, 20, 23, 24, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 62, 64, 67, 68, 69, 70, 71, 73, 80, 81, 82, 83, 84, 85, 87, 90, 91, 93, 94, 95, 96, 98, 100, 102, 104, 105, 106, 108, 112, 113, 116, 117, 121, 131, 132, 134, 140, 143, 146, 147, 150, 151, 152, 153, 155, 156, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 197, 198, 201, 203, 207, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 222, 226, 227, 232, 234, 236, 239, 242, 246, 248, 249, 251, 252, 254, 257, 266, 267, 269, 271, 272, 273, 277], "languag": [3, 7, 11, 12, 16, 20, 36, 60, 90, 96, 108, 117, 134, 201, 206, 221, 233, 234, 269, 271, 273, 275, 277], "valid": [3, 6, 7, 10, 18, 19, 20, 29, 31, 33, 34, 35, 36, 47, 53, 54, 59, 60, 70, 80, 90, 94, 110, 111, 112, 117, 119, 132, 136, 140, 159, 164, 174, 177, 181, 185, 191, 194, 197, 200, 201, 209, 213, 214, 217, 219, 220, 221, 240, 273, 277], "rather": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 24, 27, 32, 36, 37, 45, 46, 47, 54, 58, 60, 65, 70, 72, 79, 84, 85, 87, 90, 94, 96, 116, 124, 134, 147, 161, 165, 167, 176, 184, 188, 191, 194, 197, 199, 204, 211, 214, 216, 217, 220, 221, 236, 239, 240, 243, 254, 269, 271, 272], "string": [3, 4, 6, 7, 11, 12, 20, 29, 35, 36, 38, 43, 54, 55, 56, 57, 58, 61, 67, 77, 82, 83, 84, 87, 90, 94, 96, 97, 100, 102, 108, 109, 111, 114, 138, 147, 151, 161, 165, 169, 175, 176, 177, 180, 181, 182, 187, 190, 192, 196, 201, 202, 208, 213, 217, 221, 222, 225, 226, 227, 232, 233, 234, 239, 240, 242, 244, 246, 247, 249, 268, 269, 272, 276], "repres": [3, 10, 11, 12, 15, 18, 19, 20, 28, 30, 32, 35, 36, 37, 38, 43, 44, 45, 46, 47, 49, 50, 53, 54, 55, 56, 59, 60, 62, 64, 65, 67, 69, 70, 71, 76, 77, 80, 81, 83, 84, 85, 87, 90, 94, 96, 97, 98, 101, 102, 104, 109, 111, 112, 114, 116, 117, 119, 120, 121, 122, 125, 127, 129, 130, 131, 132, 134, 136, 138, 139, 141, 153, 154, 156, 160, 161, 164, 165, 167, 169, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 199, 201, 203, 204, 207, 208, 209, 211, 213, 214, 217, 219, 220, 221, 223, 225, 226, 227, 234, 236, 239, 240, 246, 248, 252, 254, 267, 269, 271, 272, 277, 278], "take": [3, 4, 5, 7, 10, 11, 12, 16, 18, 19, 20, 23, 31, 34, 36, 37, 39, 44, 45, 49, 53, 54, 55, 56, 60, 62, 66, 67, 77, 81, 83, 84, 85, 90, 94, 95, 96, 97, 100, 104, 108, 112, 114, 116, 117, 119, 131, 132, 134, 136, 150, 153, 156, 157, 161, 163, 164, 165, 166, 167, 169, 172, 175, 176, 177, 178, 179, 181, 184, 185, 187, 188, 189, 190, 191, 192, 194, 197, 198, 201, 204, 207, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 223, 226, 232, 233, 235, 236, 239, 240, 246, 247, 248, 266, 267, 269, 271, 272, 273, 277], "within": [3, 7, 11, 18, 34, 35, 36, 54, 60, 67, 70, 84, 85, 87, 94, 95, 97, 124, 162, 176, 177, 184, 185, 189, 191, 197, 199, 209, 217, 219, 220, 221, 232, 233, 242], "case": [3, 4, 6, 7, 10, 11, 12, 16, 18, 19, 23, 24, 34, 35, 36, 37, 39, 42, 45, 46, 50, 53, 54, 55, 56, 58, 59, 60, 62, 66, 69, 70, 71, 72, 76, 79, 81, 84, 85, 87, 90, 91, 94, 95, 96, 98, 104, 108, 111, 112, 117, 119, 120, 121, 122, 128, 130, 132, 134, 140, 151, 157, 162, 164, 166, 167, 172, 173, 180, 184, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 206, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 225, 227, 230, 232, 234, 235, 237, 239, 240, 241, 242, 243, 246, 248, 249, 267, 271, 272, 273, 276, 277, 278], "subpackag": [3, 256], "f2py": [3, 36, 95, 233, 234], "ufuncifi": [3, 36, 233, 257], "cython": [3, 36, 95, 134, 233], "codegen": [3, 20, 95, 201, 233, 238, 258, 264], "relat": [3, 4, 6, 7, 11, 19, 29, 31, 32, 34, 37, 38, 44, 45, 52, 56, 59, 60, 61, 70, 76, 79, 81, 85, 90, 94, 100, 107, 121, 124, 127, 128, 134, 136, 141, 149, 151, 177, 180, 183, 184, 186, 187, 188, 194, 196, 197, 198, 200, 201, 205, 207, 208, 211, 213, 214, 216, 217, 219, 220, 221, 239, 253, 257, 259, 277], "reli": [3, 10, 12, 36, 90, 95, 101, 194, 200, 201, 208, 213, 220, 235, 240, 273], "llvm": 3, "gcc": [3, 234], "ifort": 3, "therefor": [3, 4, 6, 20, 23, 37, 45, 50, 54, 58, 62, 70, 83, 94, 104, 182, 185, 186, 187, 191, 194, 197, 201, 217, 220, 221, 222, 227, 246, 247, 249, 250, 252, 254], "aesara": [3, 10, 36, 134, 257, 264], "aesaracod": [3, 10, 36, 95, 201], "aeseara": 3, "previous": [3, 4, 10, 53, 125, 182, 200, 213, 221, 252], "theano": [3, 10, 134, 276], "return": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 24, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 81, 83, 84, 85, 86, 87, 90, 91, 93, 94, 96, 97, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 125, 129, 131, 132, 134, 136, 138, 139, 140, 141, 143, 144, 148, 151, 152, 153, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 244, 246, 248, 250, 252, 266, 267, 272, 273, 276, 277, 278], "graph": [3, 6, 11, 46, 62, 83, 90, 95, 190, 201, 220, 239, 272, 276], "object": [3, 4, 6, 7, 11, 12, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 53, 54, 56, 59, 60, 62, 64, 65, 66, 67, 69, 70, 71, 79, 81, 84, 85, 87, 88, 90, 95, 96, 97, 98, 102, 104, 105, 108, 109, 111, 112, 113, 114, 116, 117, 121, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 150, 151, 153, 161, 162, 166, 167, 169, 170, 173, 174, 176, 177, 180, 181, 184, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 201, 203, 204, 207, 208, 209, 210, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 232, 233, 234, 235, 236, 239, 240, 243, 244, 248, 249, 250, 255, 256, 266, 267, 269, 271, 272, 273, 276, 277], "llvmlite": 3, "llvmjitcod": 3, "jit": [3, 210], "around": [3, 4, 6, 7, 10, 11, 12, 19, 20, 26, 34, 43, 46, 54, 55, 56, 58, 60, 63, 70, 74, 93, 94, 100, 109, 127, 131, 135, 185, 191, 194, 196, 201, 203, 208, 212, 214, 217, 220, 221, 232, 246, 247, 267, 269, 271], "llvm_callabl": 3, "callabl": [3, 12, 36, 45, 90, 96, 152, 196, 201, 202, 213, 230, 233, 234, 239, 240, 241], "unlik": [3, 6, 11, 12, 18, 19, 33, 55, 81, 90, 94, 96, 117, 184, 194, 201, 214, 217, 220, 236, 237, 269, 271, 272, 273, 276], "two": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 20, 23, 28, 34, 35, 36, 37, 39, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 81, 83, 84, 85, 87, 90, 94, 95, 97, 98, 100, 101, 104, 105, 108, 109, 111, 112, 120, 125, 127, 128, 129, 131, 132, 139, 140, 141, 146, 147, 151, 153, 156, 157, 162, 163, 164, 165, 166, 167, 169, 172, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 226, 236, 239, 240, 246, 248, 250, 251, 252, 254, 266, 267, 270, 272, 273, 277], "tensorflow_cod": 3, "order": [3, 4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 62, 64, 67, 70, 71, 73, 76, 79, 81, 82, 83, 84, 85, 90, 91, 94, 95, 96, 97, 98, 104, 105, 108, 112, 116, 117, 118, 119, 120, 128, 129, 130, 131, 132, 140, 144, 148, 151, 161, 162, 163, 164, 165, 166, 167, 172, 176, 177, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 207, 209, 212, 213, 214, 218, 219, 220, 221, 222, 223, 226, 227, 228, 232, 233, 234, 236, 239, 240, 242, 246, 247, 249, 250, 255, 267, 269, 270, 272, 276, 277, 278], "assum": [3, 6, 11, 12, 15, 18, 20, 23, 31, 36, 37, 38, 43, 45, 53, 54, 55, 56, 59, 60, 62, 64, 71, 72, 79, 81, 90, 94, 97, 100, 104, 116, 117, 123, 129, 130, 131, 132, 134, 140, 162, 166, 167, 177, 180, 182, 188, 189, 191, 194, 197, 199, 201, 208, 209, 211, 213, 214, 217, 218, 220, 221, 225, 226, 227, 234, 239, 242, 248, 250, 254, 270, 272, 275, 277, 278], "wurlitz": 3, "allow": [3, 4, 7, 10, 11, 12, 18, 20, 32, 35, 36, 37, 38, 45, 47, 50, 53, 54, 55, 58, 60, 62, 64, 65, 66, 79, 82, 84, 85, 87, 88, 90, 94, 95, 96, 98, 112, 117, 119, 127, 131, 132, 134, 139, 151, 167, 171, 172, 173, 185, 187, 188, 191, 192, 194, 196, 197, 198, 201, 206, 208, 209, 210, 213, 214, 217, 219, 220, 221, 222, 226, 232, 235, 237, 239, 240, 250, 269, 272], "captur": [3, 54, 239], "output": [3, 6, 7, 10, 12, 13, 16, 18, 20, 23, 24, 35, 36, 54, 55, 62, 78, 81, 82, 84, 85, 87, 90, 94, 95, 96, 101, 104, 112, 116, 117, 125, 131, 134, 135, 139, 140, 151, 163, 167, 176, 177, 180, 181, 182, 185, 191, 194, 197, 201, 202, 211, 213, 214, 215, 216, 217, 219, 221, 226, 232, 233, 234, 236, 239, 240, 246, 269, 271, 272, 273, 276, 277, 278], "suit": [3, 4, 7, 18, 20, 23, 35, 187, 197, 230, 232], "stat": [3, 256, 263], "sampl": [3, 8, 16, 45, 57, 102, 151, 187, 201, 221, 267, 271], "At": [3, 10, 18, 20, 23, 34, 50, 60, 62, 81, 94, 97, 98, 108, 172, 176, 185, 196, 211, 240], "least": [3, 4, 7, 10, 14, 18, 32, 34, 36, 45, 54, 60, 66, 78, 79, 81, 90, 94, 95, 112, 147, 161, 169, 188, 189, 191, 192, 194, 196, 197, 208, 210, 213, 217, 219, 220, 221, 234, 277], "random": [3, 6, 10, 38, 43, 45, 46, 52, 55, 64, 67, 68, 89, 90, 94, 151, 163, 187, 194, 201, 231, 232, 235, 239, 257, 263, 269, 273, 277], "pymc": [3, 221], "manipul": [3, 11, 15, 16, 18, 35, 36, 37, 45, 54, 60, 62, 79, 89, 94, 95, 117, 127, 132, 165, 184, 190, 191, 192, 195, 200, 201, 203, 210, 213, 215, 224, 239, 256, 259, 263, 266, 267, 268, 269, 270, 271, 273, 276, 277], "use_symengin": 3, "physic": [3, 6, 16, 36, 47, 90, 94, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 186, 195, 221, 236, 239, 252, 271, 277], "mechan": [3, 20, 54, 77, 81, 97, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 149, 153, 156, 162, 164, 165, 166, 169, 176, 177, 183, 186, 262, 263], "liealgebra": [3, 83], "thing": [3, 4, 6, 7, 10, 11, 12, 13, 18, 19, 20, 25, 32, 36, 44, 45, 46, 54, 56, 66, 82, 83, 84, 85, 90, 95, 108, 114, 117, 131, 134, 151, 167, 172, 184, 185, 198, 200, 208, 209, 210, 213, 217, 220, 225, 235, 237, 239, 266, 267, 269, 271, 272, 273, 276, 277], "configur": [3, 4, 5, 10, 46, 84, 104, 111, 112, 120, 121, 124, 126, 127, 129, 131, 193, 201], "otherwis": [3, 4, 14, 18, 19, 20, 34, 35, 36, 45, 46, 50, 53, 54, 55, 58, 60, 62, 63, 64, 67, 68, 69, 70, 79, 81, 83, 84, 86, 90, 93, 94, 96, 102, 104, 106, 109, 116, 117, 152, 157, 163, 180, 183, 184, 188, 192, 194, 196, 197, 199, 201, 203, 204, 206, 207, 209, 213, 214, 217, 218, 219, 220, 221, 222, 230, 232, 234, 239, 240, 266, 267, 276], "ordinari": [3, 18, 19, 22, 34, 36, 45, 54, 58, 59, 60, 62, 72, 76, 77, 81, 91, 104, 127, 188, 190, 191, 200, 207, 215, 217, 222, 236, 271, 277], "x": [3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 45, 46, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 93, 94, 95, 96, 97, 98, 100, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 139, 141, 142, 143, 144, 145, 147, 148, 151, 156, 157, 162, 164, 165, 166, 167, 168, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 232, 233, 234, 235, 237, 239, 240, 242, 246, 248, 249, 250, 251, 252, 254, 255, 266, 267, 269, 271, 272, 273, 276, 277, 278], "still": [3, 4, 6, 7, 11, 12, 18, 20, 26, 27, 35, 46, 53, 54, 55, 62, 66, 81, 85, 90, 117, 167, 185, 187, 188, 189, 194, 196, 201, 208, 210, 211, 213, 217, 219, 220, 226, 232, 239, 252, 273], "matchpi": 3, "pattern": [3, 10, 11, 12, 18, 20, 54, 79, 81, 84, 85, 96, 161, 191, 211, 213, 217, 219, 267, 272], "anywher": [3, 4, 6, 10, 18, 36, 54, 62, 68, 167, 242, 271], "els": [3, 4, 10, 11, 12, 18, 19, 20, 36, 44, 46, 50, 54, 55, 62, 64, 68, 70, 71, 79, 81, 84, 90, 94, 104, 167, 177, 187, 192, 196, 197, 201, 202, 209, 213, 217, 219, 220, 225, 227, 232, 239, 242, 246, 248, 266, 272], "mathemat": [3, 4, 7, 8, 10, 11, 15, 18, 20, 23, 24, 25, 30, 31, 34, 36, 37, 40, 44, 46, 53, 54, 55, 56, 59, 60, 61, 62, 67, 68, 79, 81, 84, 87, 90, 94, 95, 96, 104, 105, 108, 121, 133, 172, 182, 184, 185, 188, 189, 191, 192, 195, 200, 201, 209, 210, 214, 217, 220, 221, 226, 233, 234, 240, 246, 249, 252, 254, 266, 269, 270, 271, 272, 275, 277], "softwar": [3, 7, 81, 195, 271], "itself": [3, 4, 6, 7, 10, 11, 20, 32, 43, 45, 46, 52, 54, 56, 59, 60, 67, 71, 76, 94, 112, 116, 117, 132, 157, 164, 182, 184, 187, 188, 191, 194, 196, 197, 201, 209, 210, 213, 220, 225, 226, 227, 234, 236, 239, 254, 271], "_sage_": 3, "basic": [3, 4, 5, 6, 7, 10, 11, 18, 20, 24, 28, 30, 35, 36, 37, 42, 45, 49, 52, 53, 57, 60, 70, 72, 77, 78, 79, 84, 85, 88, 89, 91, 104, 111, 117, 129, 130, 132, 134, 135, 141, 151, 165, 172, 175, 182, 183, 185, 187, 188, 190, 192, 193, 194, 196, 198, 199, 201, 202, 208, 213, 214, 217, 218, 219, 220, 221, 232, 234, 239, 240, 244, 251, 252, 253, 259, 267, 268, 269, 270, 275], "beyond": [3, 18, 48, 70, 94, 131, 188, 191, 210, 213, 273], "control": [3, 5, 10, 12, 14, 18, 20, 35, 37, 54, 55, 58, 79, 84, 85, 131, 134, 147, 151, 162, 163, 167, 171, 197, 198, 202, 209, 214, 220, 239, 262, 263, 266], "pytest": [3, 4, 10, 229, 235, 237, 240, 264], "entir": [3, 4, 18, 45, 54, 55, 58, 59, 62, 68, 70, 79, 93, 110, 128, 132, 177, 188, 190, 196, 209, 226, 235, 237, 271, 277], "import_modul": 3, "own": [3, 5, 6, 12, 20, 30, 38, 45, 46, 54, 70, 98, 117, 134, 196, 201, 208, 213, 217, 236, 239, 240, 271], "runner": [3, 232], "access": [3, 6, 7, 11, 12, 18, 20, 29, 30, 31, 36, 54, 62, 83, 84, 87, 90, 95, 98, 104, 105, 111, 112, 116, 117, 135, 176, 177, 182, 185, 187, 191, 192, 194, 196, 213, 217, 221, 222, 225, 233, 234, 249, 252, 272, 276], "script": [3, 5, 6, 11, 27, 62, 181, 233], "cloudpickl": 3, "effect": [3, 6, 10, 20, 26, 45, 47, 54, 71, 79, 81, 85, 90, 97, 117, 119, 131, 139, 167, 177, 187, 191, 194, 198, 200, 217, 269], "pickl": 3, "util": [3, 4, 5, 6, 7, 23, 34, 41, 43, 45, 46, 59, 60, 65, 66, 67, 70, 84, 85, 89, 94, 95, 137, 171, 174, 190, 193, 194, 198, 201, 213, 214, 215, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 258, 262], "test_pickl": 3, "py": [3, 4, 5, 6, 12, 18, 26, 35, 54, 65, 79, 81, 90, 145, 147, 187, 190, 192, 198, 201, 208, 211, 217, 218, 227, 230, 232, 237, 240], "pdf": [3, 7, 8, 25, 34, 35, 45, 55, 57, 59, 76, 81, 90, 94, 97, 98, 102, 187, 195, 200, 201, 204, 210, 213, 214, 217, 221, 239, 246], "view": [3, 6, 8, 11, 24, 36, 37, 54, 90, 97, 169, 172, 185, 187, 194, 201, 217, 220, 234, 236, 239], "host": [3, 7], "onlin": [3, 6, 112, 214, 239], "sympy_benchmark": 3, "readm": 3, "yourself": [3, 20, 24, 36, 119, 235, 267], "reproduc": [3, 197, 232, 277], "add": [3, 4, 5, 6, 10, 11, 12, 15, 18, 28, 30, 34, 36, 43, 45, 50, 55, 58, 61, 69, 71, 79, 83, 87, 90, 94, 97, 100, 109, 117, 134, 145, 151, 161, 166, 167, 170, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 201, 202, 211, 213, 214, 217, 218, 220, 221, 223, 225, 226, 227, 235, 240, 244, 257, 267, 269, 272, 276, 277], "asv": 3, "airspe": 3, "veloc": [3, 108, 109, 111, 112, 114, 119, 120, 121, 124, 125, 126, 128, 131, 132, 134, 141, 169, 172, 176, 177, 180, 182, 185, 252, 254], "describ": [4, 6, 7, 10, 12, 18, 19, 20, 35, 37, 44, 45, 46, 48, 49, 52, 53, 54, 55, 59, 62, 64, 69, 70, 79, 81, 85, 90, 93, 94, 104, 108, 111, 112, 114, 116, 117, 120, 121, 122, 124, 126, 127, 129, 130, 131, 132, 146, 167, 171, 172, 176, 177, 182, 184, 185, 188, 191, 194, 196, 202, 208, 211, 213, 214, 217, 220, 221, 225, 234, 239, 240, 246, 247, 252, 267], "properli": [4, 11, 20, 35, 54, 60, 66, 79, 90, 113, 117, 129, 144, 148, 151, 165, 189, 191, 201, 217, 220, 230, 234, 240, 273, 278], "current": [4, 7, 10, 12, 18, 28, 31, 34, 35, 36, 37, 38, 45, 48, 49, 51, 52, 53, 54, 56, 60, 62, 64, 66, 69, 74, 77, 79, 81, 83, 85, 90, 94, 96, 97, 101, 108, 111, 117, 127, 161, 166, 167, 171, 175, 185, 187, 188, 189, 190, 192, 194, 197, 198, 200, 201, 202, 208, 211, 213, 214, 216, 217, 218, 219, 220, 221, 227, 232, 233, 234, 236, 249, 273, 278], "activ": [4, 5, 13, 119, 187, 230, 235, 237], "updat": [4, 10, 12, 26, 54, 121, 147, 157, 160, 161, 163, 186, 194, 197, 201, 214, 227, 237], "continu": [4, 6, 7, 10, 16, 19, 20, 34, 36, 44, 46, 48, 54, 59, 60, 62, 79, 82, 85, 94, 101, 102, 162, 165, 181, 192, 194, 197, 214, 216, 217, 225, 268], "someon": [4, 217, 236, 270], "warn": [4, 6, 12, 20, 54, 55, 69, 96, 177, 185, 189, 201, 217, 219, 230, 232, 234, 238, 239, 264, 273], "screen": [4, 11, 82, 181, 185, 232, 276], "indic": [4, 6, 12, 15, 18, 23, 34, 35, 36, 37, 38, 43, 45, 46, 47, 49, 50, 52, 53, 54, 57, 58, 59, 62, 64, 69, 70, 79, 81, 84, 85, 87, 90, 93, 94, 105, 116, 121, 151, 162, 164, 165, 167, 172, 176, 177, 186, 190, 191, 192, 196, 197, 198, 201, 208, 209, 210, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 239, 273], "remov": [4, 10, 18, 29, 30, 45, 48, 52, 54, 58, 60, 69, 70, 79, 84, 85, 90, 94, 97, 100, 109, 124, 126, 131, 151, 167, 192, 194, 197, 199, 200, 201, 213, 214, 217, 219, 220, 222, 223, 233, 234, 235, 237, 239, 240, 266, 277], "futur": [4, 12, 18, 19, 36, 37, 54, 79, 81, 85, 90, 96, 116, 119, 127, 131, 167, 171, 183, 187, 189, 200, 201, 213, 217, 226, 232, 235, 237, 240, 263, 272, 278], "chanc": [4, 12, 19, 54, 82, 211, 221, 272], "break": [4, 6, 10, 20, 35, 36, 46, 54, 55, 94, 184, 198, 201, 209, 239], "opportun": [4, 6, 213], "messag": [4, 10, 55, 82, 235, 237], "wrong": [4, 7, 10, 45, 54, 55, 62, 64, 90, 177, 191, 215, 217, 235, 269, 273], "answer": [4, 18, 20, 45, 54, 58, 76, 79, 81, 84, 90, 94, 172, 194, 198, 210, 211, 213, 219, 221, 236, 242, 271, 273, 277], "made": [4, 7, 10, 11, 12, 18, 20, 48, 50, 54, 55, 60, 63, 64, 67, 70, 71, 81, 84, 90, 94, 96, 117, 131, 134, 185, 188, 192, 194, 196, 197, 201, 202, 208, 209, 210, 213, 217, 219, 220, 221, 234, 239, 242, 254, 272], "lightli": 4, "fix": [4, 6, 9, 10, 36, 45, 47, 50, 52, 55, 59, 62, 66, 83, 97, 98, 100, 109, 111, 114, 119, 134, 151, 156, 160, 163, 167, 172, 177, 180, 184, 185, 187, 191, 194, 196, 197, 198, 201, 207, 211, 219, 221, 239, 246, 247], "worth": [4, 18, 20, 177, 250, 252], "pain": 4, "frustrat": 4, "go": [4, 5, 6, 7, 20, 26, 35, 36, 45, 55, 59, 60, 79, 112, 117, 119, 132, 134, 135, 161, 172, 180, 187, 196, 197, 208, 211, 217, 269, 271, 272, 275, 277], "seek": [4, 219], "stabl": [4, 6, 20, 54, 82, 90, 96, 100, 104, 266], "done": [4, 6, 10, 11, 12, 16, 20, 30, 31, 33, 34, 35, 36, 45, 47, 52, 54, 55, 56, 59, 62, 65, 66, 79, 81, 85, 90, 94, 117, 119, 125, 132, 134, 153, 162, 163, 164, 167, 169, 170, 177, 182, 184, 185, 187, 188, 190, 194, 197, 198, 200, 201, 202, 210, 213, 214, 217, 219, 220, 221, 226, 227, 232, 233, 236, 240, 249, 250, 266, 269, 271, 272, 273], "exist": [4, 10, 11, 16, 18, 20, 24, 34, 35, 38, 45, 54, 58, 64, 66, 69, 70, 71, 72, 80, 81, 84, 90, 94, 100, 157, 182, 185, 187, 188, 189, 190, 194, 196, 201, 208, 209, 211, 214, 217, 219, 220, 232, 240, 250, 271, 273, 278], "necessarili": [4, 6, 18, 32, 54, 55, 56, 79, 81, 84, 188, 189, 196, 197, 199, 213, 217, 219, 220], "supplant": 4, "old": [4, 10, 11, 12, 54, 55, 56, 82, 131, 136, 171, 172, 181, 187, 188, 192, 193, 201, 202, 213, 217, 220, 222, 266], "sometim": [4, 6, 7, 11, 12, 18, 20, 35, 36, 54, 59, 62, 78, 79, 104, 127, 131, 159, 167, 185, 188, 191, 196, 201, 203, 208, 210, 214, 217, 219, 230, 239, 266, 273], "alongsid": [4, 10, 20, 87], "newer": [4, 11, 184, 219], "solveset": [4, 20, 24, 134, 199, 215, 216, 219, 278], "superior": [4, 201], "replac": [4, 6, 10, 11, 12, 18, 34, 36, 45, 53, 54, 55, 58, 59, 60, 62, 64, 68, 81, 84, 85, 90, 94, 95, 96, 108, 110, 134, 156, 162, 177, 188, 194, 197, 198, 202, 208, 210, 211, 213, 217, 219, 220, 227, 228, 239, 240, 242, 266, 275], "older": [4, 7, 11, 77, 117, 191, 201, 219], "solv": [4, 6, 10, 11, 12, 13, 16, 18, 20, 21, 36, 38, 50, 53, 54, 62, 67, 79, 81, 85, 86, 90, 97, 99, 100, 111, 112, 113, 117, 120, 121, 124, 126, 127, 129, 131, 134, 170, 190, 193, 194, 198, 199, 200, 201, 203, 213, 214, 215, 216, 217, 218, 221, 262, 267, 268, 271, 273, 276], "remain": [4, 10, 11, 20, 30, 31, 36, 45, 46, 48, 50, 54, 55, 60, 79, 85, 94, 96, 105, 117, 166, 182, 184, 185, 196, 197, 198, 207, 210, 211, 217, 218, 219, 221, 223, 227, 236, 239, 240, 249, 254, 266, 269, 271, 272, 273], "intact": [4, 10, 36, 233], "cogniz": 4, "properti": [4, 11, 15, 20, 30, 31, 34, 35, 36, 37, 38, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 56, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 77, 79, 81, 85, 87, 90, 94, 97, 98, 100, 101, 104, 109, 111, 112, 114, 116, 132, 134, 136, 138, 141, 142, 145, 146, 151, 152, 153, 155, 156, 163, 165, 167, 169, 172, 174, 175, 177, 178, 179, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 200, 203, 204, 207, 208, 209, 211, 214, 217, 220, 221, 226, 227, 232, 234, 235, 246, 248, 249, 250, 252, 254, 273], "attr": [4, 36], "imposs": [4, 6, 10, 11, 20, 54, 191, 210, 217, 218, 230, 269, 277], "later": [4, 10, 16, 36, 45, 79, 85, 108, 113, 114, 119, 121, 122, 129, 131, 132, 134, 141, 176, 184, 191, 194, 200, 201, 202, 211, 213, 217, 236, 249, 266, 267, 269, 271, 272, 277], "unsur": [4, 6], "about": [4, 5, 6, 7, 10, 11, 12, 13, 16, 18, 19, 20, 24, 25, 26, 28, 29, 31, 32, 35, 36, 45, 46, 47, 48, 54, 58, 60, 62, 64, 65, 66, 68, 69, 70, 74, 76, 80, 81, 83, 90, 94, 97, 98, 104, 108, 109, 110, 111, 112, 113, 114, 116, 117, 121, 131, 132, 162, 164, 165, 167, 171, 176, 177, 184, 185, 186, 188, 190, 191, 196, 198, 201, 203, 208, 213, 214, 215, 217, 221, 225, 226, 232, 233, 234, 235, 236, 237, 246, 247, 249, 252, 253, 266, 268, 269, 271, 272, 273, 277], "mark": [4, 6, 7, 102, 140, 152, 214, 230, 235, 237], "explicitli": [4, 10, 11, 18, 20, 36, 45, 46, 54, 55, 57, 60, 62, 67, 71, 87, 90, 95, 104, 117, 176, 177, 187, 189, 191, 192, 194, 197, 201, 213, 217, 219, 237, 269, 273, 276, 278], "privat": [4, 6, 54, 55, 117, 187, 234], "experiment": [4, 213, 264], "With": [4, 12, 19, 26, 36, 53, 54, 58, 79, 94, 120, 121, 122, 128, 130, 131, 140, 164, 167, 185, 187, 188, 189, 191, 192, 199, 200, 201, 208, 213, 222, 239, 271, 272], "being": [4, 7, 10, 11, 12, 14, 18, 19, 32, 34, 36, 45, 46, 52, 53, 54, 55, 59, 60, 62, 64, 66, 67, 70, 71, 79, 84, 85, 90, 91, 94, 97, 98, 100, 108, 116, 117, 119, 131, 132, 134, 135, 163, 172, 179, 182, 184, 185, 186, 187, 188, 190, 191, 196, 197, 198, 200, 201, 210, 211, 213, 214, 217, 218, 219, 220, 221, 227, 230, 236, 237, 239, 240, 242, 246, 250, 254, 271, 273], "decid": [4, 6, 16, 18, 19, 20, 35, 53, 85, 108, 131, 160, 171, 191, 194, 196, 197, 201, 217, 220, 234, 273], "reason": [4, 7, 10, 11, 14, 18, 19, 20, 36, 46, 52, 54, 58, 62, 79, 82, 88, 90, 112, 113, 117, 119, 124, 127, 131, 138, 172, 181, 185, 191, 194, 195, 198, 201, 209, 211, 213, 217, 220, 230, 236, 237, 239, 240, 266, 267, 271, 272, 273], "confus": [4, 7, 10, 11, 18, 54, 59, 84, 140, 185, 189, 197, 220, 266, 267, 269], "unnecessari": [4, 6, 7, 32, 36, 197, 200, 221, 232, 270], "redund": [4, 18, 45, 52, 84, 90, 217, 234], "usabl": [4, 191, 192, 201, 220, 271], "breakag": 4, "serious": 4, "taken": [4, 11, 36, 37, 42, 45, 52, 53, 54, 59, 60, 62, 71, 85, 94, 104, 106, 108, 109, 131, 134, 164, 170, 177, 180, 186, 187, 191, 196, 197, 201, 204, 208, 210, 211, 220, 221, 226, 234, 239, 246], "commun": [4, 7, 26, 186, 217, 219, 221, 273], "inde": [4, 16, 20, 42, 45, 53, 79, 188, 211, 217, 228, 232, 271], "second": [4, 7, 10, 11, 12, 16, 18, 19, 20, 23, 24, 27, 31, 34, 36, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 67, 68, 70, 81, 90, 94, 95, 97, 98, 102, 104, 105, 108, 109, 111, 112, 117, 121, 124, 126, 127, 128, 130, 132, 138, 140, 141, 144, 148, 153, 156, 161, 162, 164, 165, 170, 172, 174, 176, 177, 178, 184, 185, 187, 190, 191, 194, 195, 196, 197, 201, 203, 211, 213, 214, 217, 219, 220, 221, 222, 223, 239, 240, 246, 248, 249, 250, 262, 266, 271, 272, 273], "know": [4, 6, 7, 10, 11, 12, 18, 19, 20, 24, 29, 31, 35, 46, 54, 55, 58, 66, 71, 79, 81, 90, 94, 114, 117, 135, 161, 165, 169, 170, 172, 176, 177, 184, 185, 187, 197, 198, 200, 201, 211, 213, 217, 219, 220, 221, 235, 239, 240, 250, 266, 267, 269, 270, 271, 272, 275, 277], "count": [4, 7, 11, 46, 53, 54, 55, 59, 64, 84, 90, 93, 94, 162, 197, 209, 210, 213, 220, 221, 227, 236, 239], "basi": [4, 54, 56, 83, 87, 90, 109, 124, 126, 152, 161, 162, 164, 167, 169, 172, 175, 176, 177, 182, 184, 186, 188, 190, 192, 193, 197, 200, 211, 213, 219, 220, 222, 227, 248, 249, 252, 275], "exact": [4, 11, 12, 18, 20, 32, 53, 54, 55, 58, 64, 69, 76, 79, 81, 85, 90, 97, 134, 161, 191, 192, 194, 197, 208, 213, 217, 219, 232, 242, 269, 271, 276], "rule": [4, 7, 10, 16, 18, 20, 36, 45, 46, 53, 54, 62, 77, 79, 81, 84, 85, 90, 97, 111, 117, 148, 151, 172, 177, 182, 185, 186, 198, 200, 201, 202, 207, 211, 212, 213, 217, 227, 239, 240, 252, 253, 269, 272], "doesn": [4, 6, 10, 12, 20, 36, 78, 117, 121, 131, 134, 185, 189, 198, 200, 210, 213, 220, 278], "constitut": [4, 7, 11, 81, 94, 201], "yet": [4, 5, 10, 12, 18, 20, 29, 31, 34, 35, 58, 81, 131, 147, 188, 191, 192, 196, 198, 200, 209, 217, 220, 267], "fulli": [4, 6, 18, 45, 54, 71, 81, 84, 96, 98, 117, 134, 167, 184, 191, 192, 198, 208, 221, 227, 243], "codifi": 4, "clean": [4, 232], "distinct": [4, 7, 11, 14, 18, 20, 36, 45, 46, 54, 55, 59, 67, 79, 84, 90, 94, 116, 184, 191, 196, 197, 201, 209, 211, 277], "well": [4, 6, 7, 10, 11, 12, 14, 16, 18, 20, 26, 32, 34, 35, 36, 37, 38, 46, 53, 54, 59, 60, 62, 81, 85, 88, 90, 100, 105, 108, 117, 119, 121, 122, 131, 157, 166, 169, 170, 176, 184, 186, 187, 188, 190, 191, 192, 194, 196, 201, 208, 209, 210, 211, 213, 217, 219, 220, 232, 233, 249, 250, 254, 269, 271, 272, 277], "categor": [4, 90, 188], "issu": [4, 7, 9, 10, 11, 12, 19, 20, 23, 26, 27, 34, 53, 54, 71, 81, 84, 90, 95, 113, 127, 147, 183, 186, 195, 196, 198, 201, 209, 210, 219, 220, 232, 234, 236, 237, 239, 242, 268, 269, 272, 277], "here": [4, 6, 7, 10, 11, 14, 16, 18, 19, 20, 23, 25, 26, 30, 31, 36, 37, 38, 43, 44, 45, 46, 52, 53, 54, 55, 56, 58, 59, 60, 62, 70, 71, 72, 76, 77, 79, 81, 84, 85, 90, 93, 94, 95, 96, 97, 100, 104, 108, 112, 117, 118, 119, 124, 125, 126, 129, 131, 132, 134, 135, 157, 162, 167, 176, 181, 182, 184, 185, 187, 188, 191, 192, 194, 196, 197, 198, 201, 202, 208, 210, 211, 213, 214, 217, 219, 220, 221, 225, 226, 233, 234, 236, 237, 239, 240, 250, 252, 254, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277], "guidelin": [4, 8, 24, 217], "exhaust": [4, 18, 211, 239, 270], "alwai": [4, 6, 7, 10, 11, 12, 18, 19, 20, 26, 28, 35, 45, 46, 53, 54, 55, 56, 58, 60, 62, 64, 66, 69, 70, 78, 79, 81, 84, 85, 90, 93, 94, 100, 104, 105, 116, 117, 119, 121, 125, 135, 167, 169, 172, 173, 182, 184, 188, 189, 191, 192, 194, 196, 197, 201, 202, 203, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 228, 232, 234, 239, 240, 246, 247, 252, 267, 269, 270, 271, 272, 277], "posit": [4, 10, 11, 12, 18, 19, 20, 23, 29, 30, 31, 33, 35, 36, 37, 38, 43, 45, 46, 47, 49, 50, 53, 54, 55, 56, 58, 59, 60, 62, 64, 66, 67, 70, 79, 81, 83, 84, 85, 86, 90, 91, 93, 94, 97, 98, 100, 104, 106, 111, 114, 117, 119, 121, 124, 126, 128, 131, 132, 134, 136, 139, 141, 145, 162, 165, 167, 178, 179, 180, 182, 184, 185, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 206, 207, 209, 210, 211, 213, 214, 217, 219, 220, 221, 222, 227, 239, 246, 248, 249, 250, 252, 254, 255, 273, 277, 278], "convent": [4, 6, 7, 9, 20, 45, 46, 50, 53, 54, 55, 59, 60, 62, 64, 69, 79, 81, 84, 96, 97, 98, 100, 104, 107, 119, 134, 136, 140, 161, 162, 164, 169, 170, 182, 187, 201, 217, 218, 220, 221, 227, 254, 269, 277], "defin": [4, 6, 7, 10, 11, 12, 14, 16, 18, 19, 24, 27, 28, 30, 31, 34, 36, 37, 38, 44, 45, 46, 49, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 77, 79, 81, 82, 85, 87, 90, 94, 98, 102, 108, 109, 111, 114, 116, 117, 119, 120, 124, 126, 127, 128, 132, 134, 135, 138, 144, 146, 148, 153, 156, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 203, 204, 207, 208, 209, 211, 213, 214, 217, 219, 220, 221, 222, 226, 227, 233, 234, 235, 240, 241, 242, 246, 247, 248, 249, 250, 251, 252, 254, 255, 269, 271, 277], "And": [4, 10, 12, 19, 20, 22, 30, 45, 46, 53, 54, 55, 62, 79, 84, 85, 90, 93, 111, 128, 139, 185, 187, 189, 197, 198, 201, 209, 213, 214, 219, 220, 221, 239, 240, 250, 277], "aren": [4, 10, 11, 20, 36, 54, 117, 200, 220], "don": [4, 10, 12, 19, 20, 31, 36, 79, 90, 95, 96, 108, 117, 176, 184, 185, 191, 201, 211, 220, 230, 235, 254, 266, 267, 271, 272, 277], "form": [4, 7, 10, 11, 16, 18, 20, 28, 31, 32, 33, 34, 36, 37, 44, 45, 46, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 70, 74, 76, 77, 79, 81, 83, 85, 87, 89, 90, 94, 96, 97, 98, 100, 101, 104, 108, 109, 111, 112, 113, 116, 117, 119, 121, 124, 126, 127, 128, 129, 130, 132, 134, 135, 144, 147, 148, 149, 151, 161, 162, 165, 167, 169, 172, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 210, 211, 213, 214, 218, 219, 220, 221, 224, 226, 227, 232, 233, 239, 246, 248, 249, 251, 252, 254, 259, 260, 267, 271, 272, 273, 276, 277, 278], "equival": [4, 10, 11, 12, 14, 18, 19, 20, 28, 32, 36, 37, 44, 45, 50, 54, 55, 58, 60, 62, 79, 81, 90, 94, 96, 101, 102, 104, 117, 127, 150, 161, 164, 167, 170, 177, 181, 185, 187, 188, 189, 191, 192, 196, 197, 201, 208, 209, 213, 217, 219, 220, 222, 223, 226, 227, 236, 240, 242, 243, 259], "intern": [4, 10, 11, 12, 18, 19, 34, 36, 37, 45, 54, 57, 58, 59, 62, 70, 71, 74, 80, 86, 90, 94, 98, 100, 102, 119, 131, 140, 161, 162, 172, 188, 190, 192, 193, 195, 197, 199, 201, 211, 213, 215, 218, 219, 220, 221, 225, 227, 230, 234, 236, 239, 272, 276], "Such": [4, 6, 18, 36, 54, 70, 121, 188, 189, 196, 202, 210, 211, 213, 266, 272], "prefix": [4, 36, 54, 90, 94, 171, 174, 175, 191, 194, 198, 201, 214, 217, 233, 234, 239, 262], "underscor": [4, 6, 10, 54, 90, 217, 227, 235], "_": [4, 5, 6, 7, 10, 12, 14, 16, 20, 30, 31, 35, 42, 43, 45, 46, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 67, 68, 69, 70, 79, 81, 84, 85, 86, 87, 88, 90, 92, 94, 96, 104, 129, 132, 134, 146, 167, 172, 176, 181, 184, 186, 192, 197, 200, 201, 202, 204, 208, 209, 210, 211, 213, 214, 217, 218, 219, 222, 239, 248, 250, 276], "univers": [4, 11, 36, 186, 195, 209, 214, 219, 220], "adher": [4, 7, 79], "codebas": [4, 10, 18, 191, 230], "anyth": [4, 6, 7, 10, 12, 20, 34, 36, 54, 55, 65, 69, 90, 117, 141, 151, 198, 201, 207, 209, 213, 217, 219, 233, 239, 242, 269], "were": [4, 7, 10, 11, 12, 14, 18, 20, 35, 46, 48, 54, 55, 60, 71, 79, 85, 90, 94, 95, 96, 108, 116, 131, 176, 182, 185, 188, 194, 195, 196, 197, 200, 201, 202, 210, 213, 219, 239, 240, 242, 269, 271, 272, 276, 277], "incorrect": [4, 7, 10, 19, 20, 45, 54, 64, 94, 102, 180, 192, 217, 220, 233, 236, 237], "bug": [4, 6, 18, 20, 23, 26, 34, 55, 80, 191, 209, 217, 220, 269], "despit": [4, 24, 54, 277], "sai": [4, 7, 11, 12, 16, 18, 37, 44, 53, 54, 55, 83, 108, 112, 117, 127, 134, 172, 184, 185, 188, 189, 190, 194, 196, 200, 201, 208, 211, 214, 217, 219, 220, 221, 240, 266, 271, 277], "befor": [4, 6, 10, 11, 12, 18, 19, 20, 24, 26, 36, 45, 46, 48, 50, 54, 55, 56, 62, 82, 85, 90, 94, 96, 97, 98, 108, 113, 117, 119, 120, 121, 124, 125, 131, 134, 136, 167, 176, 181, 185, 189, 191, 196, 197, 201, 202, 208, 209, 213, 214, 217, 219, 220, 221, 228, 232, 235, 239, 240, 249, 270, 271, 272, 277], "recent": [4, 10, 12, 15, 18, 19, 20, 23, 24, 29, 30, 31, 36, 37, 46, 54, 55, 58, 62, 64, 81, 84, 85, 86, 87, 88, 90, 92, 93, 96, 104, 186, 188, 191, 192, 194, 197, 200, 208, 209, 217, 219, 220, 230, 233, 235, 237, 239, 240, 242, 269, 273], "best": [4, 8, 12, 23, 25, 26, 36, 54, 62, 79, 81, 95, 166, 187, 198, 201, 210, 211, 213, 217, 220, 225, 233, 265, 269, 270, 276, 277], "determin": [4, 7, 11, 12, 14, 16, 18, 19, 20, 23, 29, 31, 32, 33, 34, 36, 37, 38, 45, 54, 55, 56, 57, 58, 60, 64, 65, 67, 69, 70, 81, 82, 83, 87, 90, 94, 96, 97, 98, 104, 110, 113, 114, 116, 126, 132, 135, 146, 159, 161, 163, 164, 167, 170, 172, 177, 182, 187, 188, 189, 190, 194, 196, 201, 207, 208, 209, 211, 213, 214, 216, 217, 219, 220, 221, 225, 237, 239, 246, 252, 255, 269, 277], "someth": [4, 6, 7, 10, 11, 12, 18, 19, 20, 24, 34, 36, 54, 55, 58, 64, 79, 84, 85, 90, 94, 108, 117, 118, 134, 160, 173, 176, 187, 191, 192, 200, 208, 209, 213, 217, 220, 232, 234, 240, 266, 269, 271, 272, 275], "re": [4, 12, 20, 33, 34, 36, 45, 46, 54, 55, 58, 61, 62, 79, 81, 90, 177, 179, 182, 188, 194, 201, 202, 203, 209, 210, 211, 217, 219, 232, 248, 250, 267, 269, 272], "harm": 4, "even": [4, 6, 7, 11, 12, 15, 18, 20, 24, 29, 30, 31, 33, 36, 37, 42, 45, 46, 53, 54, 55, 58, 59, 60, 62, 66, 70, 79, 81, 84, 85, 90, 93, 94, 105, 117, 127, 152, 163, 170, 172, 177, 186, 189, 190, 191, 192, 194, 196, 197, 198, 201, 202, 209, 210, 211, 213, 214, 217, 219, 220, 228, 232, 254, 266, 267, 269, 271, 272, 277, 278], "might": [4, 6, 10, 11, 12, 14, 18, 19, 20, 34, 54, 58, 60, 67, 76, 79, 87, 90, 94, 96, 108, 117, 118, 134, 147, 177, 184, 187, 191, 192, 197, 198, 201, 202, 209, 210, 211, 213, 214, 219, 220, 221, 233, 234, 237, 239, 242, 266, 269, 271, 272, 274, 277], "while": [4, 6, 10, 11, 12, 18, 20, 22, 24, 35, 36, 37, 45, 46, 47, 50, 53, 54, 55, 56, 58, 59, 60, 64, 68, 70, 78, 84, 85, 90, 94, 95, 96, 97, 100, 109, 113, 117, 121, 131, 151, 172, 177, 182, 188, 196, 199, 201, 217, 220, 232, 234, 236, 239, 254, 266, 272, 273], "peopl": [4, 6, 57, 62, 81, 90, 172, 221], "upgrad": [4, 27], "immedi": [4, 18, 45, 54, 79, 84, 167, 188, 191, 233, 240], "fire": 4, "uncondition": 4, "correct": [4, 6, 7, 10, 12, 19, 20, 36, 43, 45, 51, 53, 54, 58, 60, 78, 79, 81, 90, 94, 104, 117, 131, 184, 185, 194, 197, 208, 214, 217, 219, 220, 225, 233, 239, 269, 276], "question": [4, 6, 7, 16, 18, 53, 56, 64, 71, 79, 81, 84, 94, 108, 169, 172, 176, 188, 191, 196, 211, 220, 239, 242], "read": [4, 6, 7, 9, 10, 20, 24, 46, 60, 79, 94, 98, 134, 184, 185, 190, 191, 192, 198, 201, 214, 227, 228, 236, 243, 270, 276, 277], "previou": [4, 6, 10, 20, 38, 43, 44, 45, 46, 49, 54, 59, 60, 81, 85, 93, 109, 131, 169, 184, 185, 194, 207, 214, 218, 222, 239, 270, 272, 277], "unchang": [4, 10, 11, 20, 45, 46, 54, 81, 90, 104, 197, 201, 207, 210, 213, 220, 266], "dure": [4, 10, 12, 27, 36, 54, 55, 85, 90, 94, 96, 109, 112, 134, 135, 184, 196, 201, 210, 219, 220, 237, 239], "period": [4, 6, 10, 23, 34, 54, 55, 60, 79, 94, 131, 141, 163, 170, 196, 201, 204, 207, 216, 220, 221, 239], "silenc": [4, 230, 237], "filterwarn": [4, 10], "caus": [4, 7, 10, 11, 20, 26, 54, 55, 58, 60, 90, 117, 125, 131, 184, 201, 210, 217, 218, 219, 236, 237, 273], "anoth": [4, 6, 7, 10, 11, 12, 15, 16, 18, 19, 20, 23, 32, 35, 36, 46, 51, 53, 54, 55, 56, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 79, 81, 87, 90, 94, 97, 98, 109, 114, 128, 156, 172, 174, 177, 180, 184, 185, 187, 189, 191, 192, 194, 196, 197, 198, 201, 202, 208, 209, 211, 217, 219, 220, 221, 233, 234, 240, 246, 249, 250, 254, 266, 269, 271, 272, 277, 278], "over": [4, 7, 8, 10, 12, 15, 20, 25, 28, 34, 35, 36, 37, 45, 46, 49, 53, 54, 55, 56, 57, 58, 59, 68, 70, 77, 79, 83, 84, 87, 90, 91, 94, 97, 98, 106, 117, 134, 135, 146, 162, 165, 167, 171, 172, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 204, 206, 208, 213, 214, 216, 217, 219, 220, 221, 222, 225, 226, 235, 239, 240, 246, 248, 252, 255, 271, 275, 277], "defeat": [4, 217], "three": [4, 11, 12, 14, 16, 18, 20, 28, 32, 36, 45, 46, 47, 50, 54, 55, 59, 62, 64, 68, 69, 70, 79, 83, 84, 85, 97, 98, 116, 120, 123, 124, 125, 140, 162, 164, 169, 177, 180, 184, 185, 186, 187, 188, 189, 192, 194, 197, 201, 211, 213, 214, 219, 220, 221, 232, 246, 247, 252, 255, 269, 272, 277], "natur": [4, 10, 12, 18, 28, 32, 36, 37, 45, 54, 55, 59, 60, 88, 94, 117, 169, 171, 172, 188, 191, 192, 194, 196, 198, 201, 210, 214, 220, 221, 239, 255, 272, 277], "heavili": [4, 208, 218], "consider": [4, 19, 54, 95, 108, 191, 200, 209, 214, 217, 249], "easi": [4, 11, 42, 46, 54, 62, 79, 95, 114, 121, 127, 184, 188, 191, 196, 201, 208, 211, 214, 217, 220, 225, 226, 227, 266, 267, 269, 270, 271, 272, 273, 276], "account": [4, 11, 60, 90, 204, 213, 217], "nonetheless": [4, 55, 169, 213, 217], "deprecat": 4, "won": [4, 12, 20, 36, 213, 220, 272], "until": [4, 16, 18, 23, 27, 46, 48, 54, 55, 64, 81, 90, 94, 131, 185, 194, 197, 210, 217, 269], "come": [4, 26, 45, 50, 52, 53, 54, 60, 62, 79, 81, 90, 95, 108, 117, 119, 129, 170, 185, 188, 191, 194, 196, 197, 211, 214, 217, 220, 230, 232, 237, 240, 269, 271, 272, 275, 277], "minimum": [4, 10, 23, 34, 36, 45, 46, 48, 50, 54, 55, 58, 60, 90, 108, 112, 119, 151, 176, 187, 189, 194, 220, 221, 235, 267], "longer": [4, 6, 12, 17, 54, 64, 94, 121, 131, 189, 194, 201, 210, 213, 239, 242, 269, 277], "especi": [4, 6, 20, 24, 53, 90, 108, 117, 134, 161, 176, 185, 213, 217, 219, 232, 266, 267], "hard": [4, 8, 11, 18, 46, 55, 90, 94, 117, 167, 191, 201, 208, 217, 220, 269, 271], "migrat": 4, "lengthen": 4, "impos": [4, 98], "signific": [4, 12, 18, 36, 54, 55, 58, 81, 90, 108, 132, 161, 191, 220, 240, 272], "mainten": [4, 31], "burden": [4, 201], "keep": [4, 6, 12, 15, 20, 50, 54, 55, 58, 59, 62, 79, 90, 112, 120, 128, 132, 151, 167, 187, 190, 191, 192, 197, 208, 209, 211, 213, 217, 219, 227, 254, 267, 272], "firstli": [4, 10, 18, 20, 211], "regular": [4, 10, 12, 18, 19, 37, 42, 54, 55, 58, 62, 70, 76, 77, 81, 94, 117, 161, 191, 198, 217, 227, 232, 276, 277], "schedul": 4, "Being": [4, 50, 64, 70, 191], "assur": [4, 94, 197], "suffici": [4, 6, 18, 35, 36, 45, 46, 50, 54, 90, 172, 204, 208, 217, 221, 236, 277], "regardless": [4, 6, 10, 20, 46, 54, 81, 94, 194, 209, 213, 239, 249, 254, 277], "often": [4, 6, 11, 18, 19, 20, 35, 36, 37, 44, 54, 62, 64, 66, 79, 81, 90, 94, 95, 104, 127, 131, 176, 184, 185, 188, 189, 191, 194, 197, 202, 208, 209, 214, 217, 221, 239, 266, 271, 272, 273, 277], "happen": [4, 6, 10, 11, 16, 18, 19, 20, 23, 28, 36, 46, 53, 54, 58, 66, 69, 78, 162, 166, 172, 188, 194, 196, 197, 200, 209, 213, 217, 221, 240, 250, 269, 276, 277], "secondli": [4, 20, 211], "rigor": [4, 62, 185, 234], "semant": [4, 11, 18, 87, 219], "surfac": [4, 60, 62, 68, 79, 98, 136, 140, 167, 187, 213, 246, 253], "enough": [4, 6, 23, 45, 54, 58, 81, 90, 93, 94, 104, 117, 134, 192, 194, 201, 217, 267, 269], "encod": [4, 10, 38, 46, 52, 55, 84, 193, 201, 232, 236, 239], "backport": 4, "prior": [4, 10, 26, 180, 197, 213, 273], "extrem": [4, 45, 58, 64, 70, 81, 87, 100, 131, 185, 213, 221], "accur": [4, 12, 16, 20, 34, 45, 54, 58, 59, 76, 81, 101, 187, 208, 266, 273], "model": [4, 11, 58, 84, 94, 104, 113, 119, 121, 122, 123, 139, 197, 210, 221], "final": [4, 6, 7, 10, 18, 20, 35, 46, 53, 54, 60, 62, 79, 81, 84, 90, 94, 98, 102, 111, 112, 119, 124, 126, 127, 129, 132, 147, 159, 162, 164, 165, 167, 169, 170, 172, 177, 184, 185, 188, 191, 194, 196, 203, 209, 210, 211, 213, 214, 217, 219, 220, 227, 239, 240, 270, 271, 272], "temptat": [4, 210, 277], "fudg": 4, "earli": [4, 54, 94, 156, 214], "acceler": [4, 95, 114, 119, 124, 126, 131, 132, 134, 170, 177, 180, 182, 205, 236, 254], "myst": [4, 7], "checkbox": 4, "tag": [4, 201, 219], "nest": [4, 54, 56, 60, 62, 81, 85, 104, 189, 191, 194, 201, 211, 213, 216, 220, 221, 222, 223, 225, 228, 239, 240, 272], "ensur": [4, 12, 20, 23, 26, 54, 55, 58, 86, 90, 132, 196, 197, 201, 215, 232, 237, 240], "realli": [4, 10, 11, 16, 18, 19, 20, 54, 66, 94, 119, 169, 191, 200, 202, 208, 210, 211, 213, 217, 233, 242, 269, 271], "per": [4, 55, 90, 95, 100, 141, 177, 182, 187, 192, 197, 198, 246, 249, 251, 254], "everywher": [4, 11, 12, 54, 62, 79, 104, 182, 254], "doctest": [4, 6, 7, 12, 20, 47, 62, 90, 94, 119, 156, 167, 191, 197, 217, 232, 235, 237, 276], "sympy_deprecation_warn": [4, 230, 235, 237], "write": [4, 8, 10, 11, 16, 18, 19, 21, 27, 36, 43, 54, 55, 61, 62, 79, 81, 87, 134, 147, 184, 185, 189, 194, 196, 201, 210, 211, 214, 217, 220, 226, 232, 233, 234, 240, 270, 271, 272, 277], "multilin": [4, 201], "deprecated_since_vers": [4, 230, 235, 237], "active_deprecations_target": [4, 230, 235, 237], "target": [4, 6, 11, 34, 35, 36, 54, 94, 110, 147, 151, 152, 210, 213, 216, 219, 220, 230, 233, 234, 237, 277], "stacklevel": [4, 230, 235, 237], "line": [4, 6, 10, 11, 12, 16, 18, 26, 35, 36, 45, 46, 50, 55, 64, 65, 66, 68, 69, 70, 71, 76, 79, 81, 82, 83, 90, 94, 97, 102, 105, 117, 119, 125, 147, 177, 181, 182, 184, 186, 187, 201, 204, 211, 213, 217, 221, 222, 230, 232, 233, 234, 237, 240, 242, 252, 255, 269], "visual": [4, 54, 94, 98, 104, 127, 200, 213], "confirm": [4, 10, 45, 94, 217], "look": [4, 6, 7, 10, 12, 18, 19, 20, 27, 35, 36, 45, 54, 59, 60, 62, 75, 90, 94, 112, 117, 119, 127, 151, 161, 162, 165, 180, 187, 191, 192, 196, 201, 203, 204, 208, 211, 213, 214, 217, 218, 232, 236, 240, 242, 250, 267, 272, 275, 276], "good": [4, 7, 11, 18, 20, 24, 36, 54, 55, 58, 66, 79, 90, 94, 119, 131, 134, 188, 191, 192, 201, 208, 210, 211, 213, 217, 239, 266, 270, 273], "top": [4, 6, 7, 10, 11, 36, 53, 54, 55, 70, 71, 81, 84, 90, 97, 98, 116, 162, 169, 191, 201, 211, 217, 234, 235, 240, 255, 272], "relev": [4, 6, 7, 18, 36, 52, 67, 82, 83, 109, 112, 114, 119, 172, 181, 185, 191, 211, 217, 218, 227, 232, 253], "docstr": [4, 8, 10, 12, 20, 35, 36, 47, 54, 76, 79, 81, 90, 94, 99, 103, 105, 127, 132, 137, 154, 160, 161, 163, 183, 197, 204, 207, 208, 210, 213, 217, 218, 219, 220, 226, 227, 232, 235, 240, 242, 253, 256], "src": [4, 6, 7, 96, 217, 232, 237], "explan": [4, 7, 12, 14, 18, 21, 28, 29, 30, 31, 32, 33, 35, 36, 39, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 60, 62, 66, 76, 77, 79, 81, 85, 90, 94, 104, 107, 109, 110, 111, 112, 114, 125, 136, 138, 141, 144, 146, 148, 150, 162, 167, 186, 187, 188, 190, 192, 196, 197, 199, 203, 204, 206, 207, 208, 209, 211, 213, 214, 217, 219, 221, 222, 226, 227, 232, 235, 237, 240, 274], "cross": [4, 7, 8, 11, 54, 64, 70, 85, 90, 97, 98, 111, 125, 132, 134, 147, 177, 183, 184, 185, 214, 220, 246, 249, 251, 252], "xyz": [4, 66, 96, 97, 177, 185, 246, 247, 250], "header": [4, 36, 233, 234], "why": [4, 10, 12, 18, 36, 54, 185, 192, 198, 208, 211, 215, 240, 270, 272, 273], "test": [4, 6, 7, 8, 11, 12, 17, 19, 20, 31, 32, 34, 35, 36, 41, 45, 46, 53, 54, 55, 61, 64, 69, 79, 85, 87, 90, 94, 147, 156, 160, 161, 162, 170, 185, 191, 192, 193, 194, 196, 198, 209, 211, 214, 217, 218, 219, 220, 230, 233, 234, 235, 236, 237, 239, 240, 242, 256, 259, 264, 269, 271, 272], "warns_deprecated_sympi": [4, 230, 235, 237], "pr": [4, 10, 53, 192, 194, 195, 197, 220], "merg": [4, 36, 45, 46, 54, 175, 201, 209, 221, 232, 239, 240], "wiki": [4, 5, 6, 7, 8, 12, 18, 20, 25, 28, 30, 31, 32, 34, 35, 36, 42, 43, 45, 46, 53, 54, 55, 56, 57, 59, 60, 62, 64, 66, 70, 71, 72, 81, 82, 83, 84, 85, 87, 90, 94, 102, 104, 107, 136, 138, 139, 140, 142, 143, 144, 148, 149, 150, 153, 155, 156, 165, 167, 171, 177, 179, 183, 187, 197, 204, 208, 209, 210, 214, 217, 220, 221, 234, 239, 246, 247, 251, 253, 255, 273, 274], "decor": [4, 20, 45, 54, 62, 230, 232, 237, 238, 241, 242, 264], "sympydeprecationwarn": [4, 10, 230, 232, 235, 237], "class": [4, 7, 8, 10, 11, 12, 17, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 81, 82, 83, 84, 87, 89, 96, 97, 100, 101, 102, 104, 109, 111, 112, 113, 114, 116, 117, 121, 122, 127, 128, 132, 134, 135, 136, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 180, 181, 183, 188, 191, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 211, 215, 217, 218, 219, 220, 221, 224, 226, 227, 228, 232, 233, 234, 235, 236, 237, 239, 240, 244, 249, 250, 252, 253, 255, 256, 257, 258, 261, 263, 264, 267, 269, 272, 277], "context": [4, 6, 7, 10, 14, 18, 20, 29, 30, 31, 54, 56, 62, 81, 84, 117, 172, 191, 194, 196, 209, 230, 232, 237, 246], "manag": [4, 10, 26, 30, 31, 96, 147, 194, 213, 227, 230, 232, 237], "filter": [4, 10, 15, 23, 54, 55, 79, 139, 197, 230, 232, 237, 239], "emit": [4, 201, 230, 237], "assert": [4, 35, 43, 44, 45, 46, 54, 64, 66, 96, 131, 201, 209, 217, 218, 230, 237, 239], "separ": [4, 6, 10, 11, 12, 16, 19, 20, 35, 42, 54, 55, 60, 62, 79, 81, 90, 105, 116, 131, 132, 135, 140, 164, 167, 176, 177, 187, 189, 192, 194, 197, 198, 201, 210, 213, 214, 218, 220, 225, 230, 232, 236, 240, 242, 246, 269], "block": [4, 6, 10, 24, 36, 43, 45, 55, 85, 89, 90, 116, 117, 119, 122, 177, 185, 190, 214, 240, 249], "behavior1": 4, "behavior2": 4, "everyth": [4, 7, 12, 20, 36, 54, 56, 62, 81, 88, 106, 131, 163, 164, 187, 201, 272, 276], "ignore_warn": [4, 230, 235, 237, 240], "prevent": [4, 12, 23, 24, 36, 54, 60, 91, 94, 108, 190, 192, 197, 201, 213, 221, 230, 237, 268], "trigger": [4, 20, 46, 96, 167, 230], "twice": [4, 12, 36, 54, 56, 68, 94, 177, 179, 184, 197, 201, 236, 237, 246, 247, 267], "similar": [4, 5, 10, 12, 16, 18, 20, 46, 53, 54, 55, 58, 59, 60, 62, 65, 70, 71, 75, 84, 90, 95, 104, 117, 119, 121, 131, 132, 165, 182, 184, 185, 189, 191, 192, 194, 198, 208, 210, 211, 213, 217, 219, 222, 227, 230, 233, 236, 237, 246, 247, 249, 250, 254, 266, 271, 272, 273, 275, 277], "somewher": [4, 6, 7, 11, 36], "sign": [4, 6, 7, 11, 23, 24, 28, 33, 36, 50, 54, 55, 59, 61, 64, 70, 79, 81, 90, 94, 97, 98, 100, 104, 119, 140, 152, 177, 182, 184, 186, 194, 201, 206, 208, 213, 214, 219, 239, 252, 255, 270], "readi": [4, 18, 116, 191, 201, 217], "paragraph": [4, 6, 7, 20, 35], "metadata": [4, 35, 235, 237], "link": [4, 6, 7, 11, 12, 22, 36, 55, 64, 70, 81, 105, 111, 120, 127, 128, 233, 236, 237, 275], "rememb": [4, 6, 12, 20, 84, 90, 105, 108, 134, 184, 185, 201, 213, 219, 222, 240, 272, 277], "shown": [4, 6, 10, 11, 18, 19, 20, 43, 46, 53, 54, 58, 60, 62, 79, 96, 98, 102, 104, 108, 112, 114, 120, 121, 122, 128, 129, 130, 132, 176, 177, 184, 185, 187, 190, 191, 192, 197, 201, 217, 221, 237, 239, 249, 250, 270], "plain": [4, 6, 18, 62, 82, 181, 197, 201], "rst": [4, 6, 7, 11, 37, 217, 232], "markdown": [4, 8, 11], "markup": [4, 201], "clearli": [4, 6, 20, 94, 185, 191, 211, 273], "delin": 4, "newlin": [4, 90, 242], "charact": [4, 6, 7, 54, 55, 79, 82, 96, 147, 177, 181, 201, 217, 232, 234, 237, 242, 269, 271, 276], "full": [4, 6, 7, 8, 9, 10, 12, 14, 18, 20, 25, 31, 34, 36, 45, 46, 54, 58, 62, 66, 67, 81, 87, 90, 96, 129, 130, 177, 191, 194, 195, 197, 201, 203, 213, 214, 271, 274, 277], "abc": [4, 6, 12, 14, 15, 20, 23, 24, 28, 29, 30, 31, 32, 33, 34, 36, 43, 45, 47, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 77, 78, 79, 81, 82, 84, 85, 87, 90, 93, 95, 102, 104, 106, 138, 140, 142, 143, 148, 165, 167, 168, 188, 190, 192, 194, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 226, 228, 233, 234, 235, 236, 237, 239, 240, 242, 246, 248, 249, 250, 255, 257, 269, 272, 276], "func": [4, 6, 11, 17, 20, 30, 34, 36, 54, 56, 59, 62, 73, 75, 81, 94, 156, 177, 194, 197, 201, 202, 213, 217, 218, 219, 230, 235, 237, 239, 240, 242, 245], "larger": [4, 7, 11, 20, 36, 45, 46, 53, 54, 55, 62, 79, 87, 90, 94, 121, 125, 192, 198, 202, 208, 213, 219, 234, 236, 269, 277], "easier": [4, 11, 19, 54, 98, 117, 119, 184, 192, 196, 198, 211, 217, 220, 234, 240, 249, 271, 277, 278], "exactli": [4, 6, 7, 10, 11, 12, 20, 24, 32, 38, 45, 54, 57, 58, 90, 96, 111, 132, 186, 211, 213, 217, 220, 222, 236, 239, 240, 267, 269, 271, 276, 277], "direct": [4, 6, 7, 10, 11, 17, 28, 30, 31, 35, 39, 42, 45, 50, 53, 54, 56, 58, 60, 63, 67, 68, 69, 70, 84, 85, 90, 97, 98, 100, 108, 109, 111, 119, 121, 125, 134, 153, 177, 182, 184, 185, 188, 190, 191, 194, 198, 208, 211, 227, 230, 239, 246, 250, 251, 254], "syntax": [4, 6, 7, 10, 11, 12, 20, 29, 31, 46, 54, 81, 96, 117, 134, 164, 187, 191, 200, 201, 213, 219, 223, 242, 258, 267, 269, 271, 276, 278], "paramet": [4, 7, 10, 11, 12, 28, 29, 31, 34, 36, 37, 45, 46, 50, 52, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 77, 79, 81, 82, 84, 85, 87, 90, 91, 93, 94, 96, 97, 100, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 134, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 150, 151, 152, 155, 156, 157, 159, 161, 162, 164, 165, 166, 167, 168, 169, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 230, 232, 233, 234, 236, 237, 239, 240, 246, 247, 248, 249, 250, 255, 267, 272], "short": [4, 7, 12, 27, 37, 44, 46, 50, 54, 55, 56, 57, 60, 88, 94, 108, 153, 172, 176, 185, 188, 195, 222, 232, 242, 272, 276], "renam": [4, 36, 81], "rest": [4, 10, 79, 82, 84, 88, 98, 106, 117, 121, 127, 172, 188, 191, 221, 239, 269, 270, 277], "left": [4, 7, 10, 16, 18, 20, 22, 34, 36, 37, 45, 46, 50, 54, 55, 56, 59, 60, 62, 70, 71, 77, 79, 81, 82, 84, 85, 90, 93, 94, 104, 109, 116, 132, 139, 146, 151, 155, 156, 159, 164, 177, 182, 186, 187, 188, 190, 197, 198, 199, 200, 201, 203, 204, 208, 209, 210, 211, 213, 217, 218, 219, 220, 221, 232, 233, 234, 236, 239, 252, 267, 271, 273, 277], "imaginari": [4, 6, 12, 18, 20, 23, 28, 31, 33, 54, 58, 60, 62, 85, 134, 191, 192, 197, 201, 202, 209, 213, 220], "simplify_thi": [4, 6, 235], "expr": [4, 6, 11, 12, 18, 20, 23, 24, 30, 31, 33, 34, 36, 46, 53, 56, 58, 60, 62, 64, 76, 79, 81, 84, 87, 90, 95, 96, 104, 108, 110, 117, 131, 144, 148, 150, 152, 156, 159, 162, 164, 165, 167, 174, 177, 179, 181, 187, 189, 190, 191, 192, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 208, 210, 213, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 233, 234, 235, 237, 240, 246, 247, 248, 249, 250, 252, 257, 266, 267, 269, 271, 272, 276, 277, 278], "simplifi": [4, 6, 11, 12, 16, 18, 19, 20, 29, 31, 33, 34, 53, 54, 56, 58, 59, 60, 62, 66, 71, 76, 79, 81, 84, 85, 86, 87, 90, 97, 104, 105, 110, 113, 120, 121, 124, 125, 126, 131, 139, 146, 151, 166, 167, 174, 177, 182, 188, 196, 198, 200, 202, 207, 209, 210, 211, 214, 217, 218, 219, 220, 221, 235, 237, 240, 249, 251, 257, 258, 266, 268, 269, 271, 272, 273], "def": [4, 6, 7, 10, 11, 12, 16, 18, 19, 20, 30, 31, 35, 54, 59, 66, 84, 90, 94, 96, 125, 162, 191, 197, 201, 210, 213, 220, 235, 237, 239, 240, 243, 266, 269, 272, 273, 277], "ref": [4, 45, 60, 90, 102, 134, 206, 221, 235, 273], "is_this_zero": [4, 237], "y": [4, 6, 10, 11, 12, 14, 15, 18, 19, 20, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 36, 37, 45, 46, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 94, 95, 96, 97, 98, 100, 102, 104, 109, 110, 111, 114, 117, 119, 120, 121, 122, 124, 125, 126, 128, 132, 134, 135, 144, 145, 148, 151, 156, 162, 164, 165, 167, 168, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 233, 234, 237, 239, 240, 242, 246, 248, 249, 250, 251, 252, 254, 255, 266, 267, 269, 271, 272, 276, 277, 278], "0": [4, 6, 11, 12, 14, 16, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 117, 119, 120, 121, 122, 124, 126, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 143, 146, 151, 152, 153, 156, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 235, 236, 237, 239, 240, 241, 246, 247, 248, 249, 250, 251, 252, 255, 266, 267, 269, 271, 272, 273, 276, 277, 278], "zero": [4, 11, 12, 14, 18, 19, 20, 28, 31, 33, 36, 44, 45, 46, 50, 53, 57, 58, 59, 60, 62, 64, 68, 69, 70, 79, 81, 83, 84, 85, 87, 89, 90, 93, 94, 96, 97, 103, 104, 111, 114, 117, 119, 122, 125, 129, 130, 134, 139, 161, 165, 167, 169, 180, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 197, 199, 201, 204, 208, 209, 211, 213, 214, 217, 218, 219, 220, 221, 222, 237, 239, 240, 249, 251, 252, 272, 278], "is_zero": [4, 18, 20, 69, 90, 188, 192, 197, 237, 273], "mail": [4, 10, 23, 26, 201, 270], "summar": [4, 232, 277], "idea": [4, 11, 18, 19, 20, 39, 45, 52, 54, 55, 66, 72, 79, 81, 94, 105, 117, 167, 171, 172, 188, 190, 191, 210, 213, 214, 217, 220, 234, 240, 277], "fit": [4, 11, 35, 79, 90, 93, 94, 185, 201, 217, 242, 272], "put": [4, 6, 10, 11, 12, 16, 20, 36, 50, 51, 54, 55, 56, 60, 84, 85, 90, 139, 144, 148, 163, 164, 197, 201, 202, 210, 211, 213, 217, 222, 228, 233, 273, 277], "word": [4, 7, 11, 20, 32, 41, 50, 53, 54, 55, 60, 62, 84, 104, 117, 132, 188, 191, 196, 213, 214, 217, 219, 234, 246, 250, 269], "global": [4, 6, 10, 29, 30, 31, 34, 36, 37, 54, 66, 79, 96, 151, 157, 177, 179, 187, 188, 191, 192, 194, 201, 214, 217, 218, 221, 232, 234, 235, 240, 248], "uniqu": [4, 11, 34, 35, 37, 45, 48, 50, 54, 55, 56, 59, 62, 69, 72, 77, 81, 83, 84, 90, 94, 111, 156, 165, 177, 185, 188, 189, 191, 194, 196, 197, 202, 206, 213, 214, 217, 219, 220, 221, 225, 234, 239, 242, 249, 254, 269, 272], "across": [4, 7, 45, 52, 54, 65, 81, 98, 166, 167, 174, 187, 201, 236, 238, 239, 240, 275], "level": [4, 6, 7, 10, 11, 12, 18, 19, 23, 36, 45, 52, 54, 60, 62, 81, 84, 90, 94, 108, 121, 134, 162, 167, 172, 176, 179, 185, 187, 190, 191, 193, 199, 201, 210, 214, 220, 221, 225, 233, 234, 239, 272, 273, 275], "correspond": [4, 6, 7, 10, 16, 18, 19, 20, 34, 35, 36, 37, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 60, 64, 65, 67, 68, 69, 70, 77, 79, 83, 84, 85, 90, 93, 94, 97, 98, 104, 110, 112, 116, 117, 119, 121, 135, 139, 143, 157, 161, 162, 164, 168, 169, 172, 177, 180, 182, 186, 187, 189, 190, 191, 192, 194, 196, 197, 201, 207, 208, 211, 213, 214, 217, 218, 219, 220, 221, 223, 225, 226, 227, 234, 235, 236, 237, 239, 240, 242, 246, 247, 249, 250, 252, 254, 272, 278], "share": [4, 18, 20, 55, 94, 192, 196, 201, 221, 234], "__init__": [4, 6, 20, 54, 112, 196, 246, 247, 272], "func_nam": [4, 36, 60, 85, 242], "help": [4, 5, 6, 7, 18, 23, 27, 36, 44, 54, 62, 79, 81, 90, 94, 95, 102, 117, 134, 142, 152, 185, 187, 196, 198, 201, 210, 211, 214, 217, 218, 221, 232, 233, 234, 240, 262, 270, 273], "rais": [4, 10, 12, 14, 18, 19, 20, 29, 31, 34, 36, 43, 46, 54, 55, 56, 58, 60, 63, 64, 67, 69, 70, 71, 79, 81, 85, 87, 90, 91, 93, 94, 102, 104, 141, 153, 182, 185, 188, 189, 190, 191, 192, 194, 196, 197, 198, 201, 203, 209, 213, 216, 217, 218, 219, 220, 221, 225, 227, 230, 232, 234, 237, 239, 240, 242, 243, 252, 273], "been": [4, 12, 18, 20, 34, 36, 37, 45, 46, 47, 50, 53, 54, 55, 60, 66, 79, 81, 90, 94, 95, 96, 112, 117, 119, 127, 131, 132, 140, 152, 162, 164, 172, 176, 182, 183, 184, 185, 188, 191, 192, 196, 198, 199, 201, 203, 208, 211, 213, 218, 219, 220, 222, 231, 232, 234, 235, 237, 239, 242, 249, 252, 269, 270, 272, 273, 277], "simplfiy_thi": 4, "ident": [4, 11, 12, 20, 32, 35, 37, 44, 45, 46, 52, 54, 55, 59, 60, 70, 77, 83, 85, 87, 90, 105, 107, 132, 151, 153, 156, 172, 188, 189, 190, 194, 195, 196, 197, 201, 210, 213, 217, 220, 225, 227, 232, 239, 240, 242, 250, 269, 273, 277], "much": [4, 6, 10, 16, 18, 19, 20, 35, 36, 39, 50, 58, 62, 76, 79, 81, 131, 175, 176, 184, 185, 186, 188, 191, 194, 197, 208, 211, 213, 217, 218, 219, 220, 234, 236, 269, 271, 277], "trivial": [4, 37, 45, 50, 53, 54, 55, 60, 69, 84, 87, 90, 94, 129, 167, 188, 189, 194, 197, 211, 214, 217, 220, 225], "furthermor": [4, 10, 20, 32, 54, 55, 84, 196, 210, 269, 271, 272], "particular": [4, 6, 10, 11, 12, 18, 19, 22, 32, 37, 45, 54, 55, 58, 62, 65, 79, 81, 84, 87, 90, 94, 97, 100, 127, 151, 162, 189, 190, 191, 192, 194, 196, 197, 207, 209, 211, 213, 214, 217, 219, 220, 232, 234, 236, 273, 275, 277], "expr1": [4, 18, 104, 187, 219, 272], "expr2": [4, 18, 104, 187, 272], "dozen": [4, 11, 20, 277], "search": [4, 6, 34, 45, 46, 50, 52, 54, 60, 90, 94, 117, 188, 196, 197, 201, 210, 211, 213, 215, 218, 221, 233], "upcom": 4, "bot": 4, "push": [5, 79], "respect": [5, 6, 10, 11, 12, 20, 29, 31, 32, 34, 35, 36, 37, 44, 45, 46, 49, 50, 52, 53, 54, 56, 59, 60, 62, 64, 66, 70, 71, 76, 77, 79, 81, 84, 85, 87, 90, 94, 96, 97, 98, 100, 104, 109, 110, 111, 114, 121, 128, 130, 132, 134, 141, 156, 169, 170, 171, 176, 177, 180, 182, 185, 186, 187, 188, 191, 194, 196, 197, 198, 201, 203, 204, 207, 209, 213, 217, 218, 219, 220, 221, 222, 226, 227, 232, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 267, 277], "handbook": [5, 6, 37, 44, 45, 52, 62, 94], "internet": 5, "practic": [5, 8, 16, 18, 24, 43, 45, 55, 64, 131, 134, 187, 188, 189, 191, 196, 198, 225, 269, 270], "project": [5, 7, 10, 36, 67, 68, 69, 83, 90, 133, 233, 234, 246], "purpos": [5, 6, 7, 8, 10, 11, 17, 18, 20, 35, 36, 45, 51, 54, 55, 81, 90, 117, 134, 172, 176, 185, 191, 194, 198, 200, 201, 208, 217, 220, 226, 236, 238, 240, 249, 250, 267, 277], "nn": 5, "brows": 5, "clone": [5, 26, 194], "download": [5, 7, 26, 35, 76, 195, 210, 217, 221, 246, 271], "origin": [5, 11, 12, 16, 18, 26, 28, 45, 46, 47, 50, 53, 54, 55, 58, 59, 60, 62, 63, 65, 67, 69, 79, 81, 85, 90, 94, 102, 104, 105, 121, 131, 134, 159, 162, 172, 178, 182, 187, 188, 192, 196, 197, 200, 201, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 227, 232, 239, 240, 246, 248, 249, 250, 251, 252, 254, 255, 277], "77": [5, 43, 62, 90, 94, 200, 201, 234], "mib": 5, "remot": [5, 54], "collabor": 5, "upstream": 5, "fetch": 5, "branch": [5, 19, 34, 54, 59, 60, 61, 62, 80, 198, 211, 220, 272, 277], "checkout": [5, 35], "advantag": [5, 14, 18, 20, 31, 34, 36, 54, 55, 59, 81, 84, 90, 94, 101, 171, 190, 191, 198, 209, 214, 217, 220, 236, 269, 271, 273, 277], "isol": [5, 34, 60, 192, 196, 197, 198, 219, 234], "wide": [5, 18, 82, 90, 134, 181, 191, 197, 201, 221], "flake8": 5, "usernam": 5, "easiest": [5, 7, 10, 11, 12, 54, 188, 191, 214, 240, 250, 266, 272, 277], "consult": [5, 37], "kwarg": [5, 12, 30, 31, 32, 36, 45, 46, 53, 54, 55, 56, 60, 62, 64, 65, 67, 68, 69, 70, 71, 76, 79, 81, 85, 86, 87, 88, 90, 92, 93, 102, 104, 110, 112, 121, 136, 145, 147, 151, 152, 156, 158, 160, 161, 163, 164, 165, 177, 180, 181, 187, 190, 192, 197, 201, 203, 207, 208, 209, 213, 217, 218, 219, 221, 222, 227, 232, 233, 235, 242, 250], "test_bas": [5, 232], "similari": 5, "qualiti": [5, 95, 201], "code_qu": 5, "liter": [6, 12, 20, 36, 44, 54, 82, 84, 96, 167, 174, 213], "occur": [6, 10, 11, 12, 45, 46, 54, 58, 62, 71, 79, 85, 96, 108, 131, 176, 177, 184, 196, 204, 213, 218, 219, 222, 232, 239, 272], "definit": [6, 10, 11, 12, 19, 28, 31, 36, 37, 45, 46, 51, 53, 54, 56, 57, 59, 60, 62, 67, 70, 74, 77, 79, 81, 85, 86, 87, 90, 94, 96, 119, 124, 125, 132, 169, 172, 175, 177, 184, 185, 188, 189, 192, 197, 198, 201, 208, 221, 222, 233, 234, 235, 239, 240, 246, 249, 250, 251, 252, 267, 277], "__doc__": [6, 12], "attribut": [6, 11, 15, 18, 20, 30, 31, 35, 36, 45, 46, 54, 62, 63, 64, 67, 68, 69, 70, 87, 90, 96, 98, 104, 109, 111, 112, 113, 114, 116, 124, 132, 135, 156, 161, 165, 172, 176, 177, 182, 185, 187, 188, 191, 192, 196, 201, 209, 213, 214, 226, 227, 233, 235, 239, 240, 243, 249, 272], "fdiff": [6, 20, 36, 54, 60, 61, 62], "self": [6, 18, 20, 28, 30, 31, 35, 36, 45, 46, 51, 53, 54, 56, 60, 63, 64, 65, 67, 68, 69, 70, 81, 85, 90, 94, 109, 119, 162, 167, 177, 179, 180, 188, 190, 192, 194, 196, 197, 201, 203, 208, 209, 227, 246], "argindex": [6, 20, 36, 54, 60, 61, 62], "heavisid": [6, 61, 79, 81, 201], "diff": [6, 10, 11, 16, 20, 23, 34, 36, 59, 60, 61, 62, 71, 76, 87, 90, 108, 110, 120, 121, 134, 165, 177, 179, 181, 182, 185, 187, 192, 197, 200, 201, 211, 217, 218, 219, 222, 223, 228, 249, 252, 267, 271, 278], "diracdelta": [6, 61, 81, 162, 167, 201], "what": [6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 22, 25, 34, 36, 46, 48, 53, 54, 55, 56, 60, 61, 64, 65, 69, 79, 81, 83, 90, 94, 96, 109, 112, 114, 117, 121, 128, 134, 166, 167, 170, 172, 177, 184, 185, 192, 193, 194, 197, 200, 201, 202, 208, 210, 211, 213, 214, 215, 217, 219, 226, 230, 232, 234, 235, 240, 249, 250, 255, 267, 269, 270, 272, 276, 277], "scope": [6, 36, 127, 131, 230, 277], "high": [6, 7, 12, 16, 18, 23, 36, 54, 58, 59, 82, 94, 134, 181, 191, 196, 199, 201, 214, 219, 262, 273], "od": [6, 11, 20, 77, 112, 116, 127, 134, 215, 218, 278], "seen": [6, 16, 18, 28, 46, 79, 81, 96, 100, 116, 128, 172, 184, 188, 191, 194, 197, 217, 220, 237, 239, 249, 269, 272, 276], "hand": [6, 10, 16, 18, 20, 35, 36, 46, 47, 54, 60, 62, 81, 84, 85, 90, 94, 97, 112, 116, 117, 131, 135, 139, 156, 159, 177, 182, 185, 186, 188, 191, 192, 194, 196, 199, 211, 220, 232, 234, 236, 240, 243, 252, 254, 271], "less": [6, 7, 10, 11, 16, 32, 36, 37, 45, 46, 53, 54, 55, 58, 59, 60, 62, 68, 69, 70, 85, 90, 94, 102, 104, 117, 119, 167, 191, 194, 196, 197, 210, 211, 213, 214, 217, 219, 220, 221, 232, 234], "understand": [6, 12, 18, 19, 20, 24, 54, 55, 79, 117, 127, 129, 130, 134, 172, 184, 187, 190, 191, 196, 201, 211, 214, 233, 240, 268, 269, 276, 277], "clear": [6, 10, 18, 30, 44, 54, 79, 83, 109, 184, 185, 187, 192, 194, 197, 211, 219, 220, 227, 232, 236, 254, 269], "begin": [6, 10, 12, 18, 20, 22, 54, 55, 59, 60, 62, 79, 85, 87, 90, 94, 121, 129, 130, 131, 132, 163, 172, 177, 185, 186, 190, 201, 211, 214, 217, 218, 220, 221, 232, 242, 269, 271, 273, 277], "convers": [6, 7, 10, 18, 36, 54, 74, 96, 131, 171, 189, 190, 191, 192, 194, 196, 198, 201, 214, 226, 233, 246], "aim": [6, 7, 72, 79, 172, 188, 211, 217, 220, 270, 271], "comment": [6, 7, 36, 45, 117, 119, 198, 201, 234, 239], "distract": 6, "input": [6, 7, 10, 11, 12, 20, 23, 28, 34, 37, 50, 54, 55, 57, 58, 59, 60, 68, 81, 83, 84, 90, 94, 96, 101, 102, 104, 108, 113, 116, 117, 119, 120, 121, 131, 134, 135, 140, 163, 177, 179, 180, 191, 192, 194, 197, 198, 199, 200, 201, 202, 209, 213, 214, 215, 217, 219, 221, 223, 233, 234, 236, 237, 239, 240, 242, 266, 272, 273, 277], "consum": [6, 36, 62, 113, 131], "human": [6, 14, 79, 169, 197, 201], "beings": 6, "english": [6, 55], "likewis": [6, 18, 35, 97, 120, 121], "reader": [6, 7, 20, 35, 37, 132, 188, 201, 236, 270, 275], "machineri": [6, 54, 196, 240], "mind": [6, 12, 15, 18, 23, 54, 90, 132, 187, 208, 209, 254, 272], "platform": [6, 54, 167, 185, 217, 233], "anyon": [6, 7, 10, 25, 197, 201, 265, 275, 276], "restructuredtext": [6, 7], "extend": [6, 7, 18, 20, 31, 36, 45, 46, 54, 55, 59, 66, 79, 81, 90, 94, 134, 175, 181, 187, 189, 192, 194, 196, 197, 198, 201, 208, 210, 214, 216, 217, 220, 221, 222, 234, 236, 269, 271], "concis": [6, 134], "quick": [6, 7, 20, 54, 90, 94, 213, 219, 240], "depth": [6, 7, 9, 12, 13, 25, 45, 54, 119, 187, 188, 201, 263], "tripl": [6, 71, 90, 185, 186, 188, 196, 242], "quot": [6, 12, 36, 84, 201, 242], "raw": [6, 7, 36, 54, 55, 60, 95, 96, 161, 166, 191, 192, 197, 209, 213, 276], "backslash": [6, 54, 201], "blank": [6, 96, 113, 187], "close": [6, 11, 36, 53, 54, 58, 59, 62, 70, 72, 79, 81, 83, 104, 120, 187, 188, 189, 195, 196, 209, 219, 220, 234, 267, 277], "rare": [6, 20, 54, 217, 221, 230, 269], "underlin": [6, 7], "numpydoc": [6, 7], "build": [6, 7, 8, 15, 30, 31, 36, 54, 56, 62, 84, 134, 161, 172, 177, 185, 188, 193, 196, 197, 198, 208, 221, 249, 266, 269, 272], "consist": [6, 7, 10, 11, 16, 18, 23, 35, 45, 46, 50, 54, 55, 59, 60, 62, 64, 70, 72, 79, 84, 97, 100, 128, 132, 141, 161, 167, 172, 175, 180, 187, 189, 191, 192, 194, 209, 217, 219, 220, 221, 225, 230, 233, 234, 239, 270, 272], "review": [6, 7, 133], "head": [6, 15, 35, 54, 219, 221, 227, 242, 272], "plural": [6, 7], "length": [6, 10, 36, 38, 44, 45, 46, 48, 52, 54, 55, 57, 59, 60, 62, 63, 67, 69, 70, 71, 84, 85, 90, 93, 94, 97, 98, 108, 112, 116, 120, 121, 122, 132, 136, 140, 164, 169, 170, 172, 177, 180, 185, 196, 197, 201, 207, 211, 213, 217, 221, 232, 233, 239, 242, 246, 247, 255], "equal": [6, 10, 11, 14, 18, 19, 20, 24, 28, 32, 35, 36, 37, 43, 44, 45, 46, 50, 52, 53, 55, 56, 58, 59, 60, 62, 67, 68, 69, 70, 71, 73, 79, 84, 85, 87, 90, 94, 97, 100, 104, 105, 109, 112, 114, 119, 129, 130, 151, 152, 167, 172, 177, 180, 185, 188, 189, 190, 191, 192, 194, 196, 197, 199, 201, 207, 209, 211, 214, 217, 218, 219, 220, 221, 227, 232, 233, 234, 239, 242, 246, 250, 255, 267, 270, 278], "clutter": 6, "harder": [6, 10, 18, 54, 79, 191, 232], "minim": [6, 18, 20, 34, 45, 46, 50, 53, 54, 55, 79, 81, 84, 94, 109, 121, 136, 190, 191, 192, 193, 194, 197, 200, 210, 213, 214, 219, 239, 243], "amount": [6, 35, 54, 55, 66, 127, 177, 182, 185, 194, 204, 232, 246, 247], "deprec": [6, 8, 13, 29, 46, 54, 67, 81, 85, 107, 131, 197, 201, 221, 227, 230, 231, 235, 237, 240, 244], "notifi": 6, "awai": [6, 35, 37, 55, 97, 98, 100, 119, 196, 201], "encourag": [6, 10, 35, 129, 130, 196], "label": [6, 35, 36, 48, 54, 64, 77, 81, 100, 140, 147, 151, 156, 165, 167, 187, 201, 202, 204, 213, 226, 227, 276], "elabor": [6, 21, 182, 252], "suffic": [6, 189, 219], "clarifi": 6, "complic": [6, 12, 14, 18, 20, 36, 45, 53, 55, 56, 58, 59, 60, 62, 79, 81, 87, 127, 129, 167, 185, 191, 194, 198, 200, 211, 213, 220, 221, 225, 226, 234, 236, 240, 242, 267, 269, 272, 273], "demonstr": [6, 7, 12, 18, 20, 23, 45, 46, 54, 81, 94, 109, 111, 117, 121, 122, 131, 188, 191, 251, 277], "api": [6, 7, 10, 18, 21, 36, 54, 66, 74, 80, 95, 96, 103, 134, 163, 176, 187, 194, 214, 215, 216, 238, 240, 243, 249, 250, 260, 262, 270, 271, 274], "simpl": [6, 11, 12, 16, 18, 20, 23, 26, 35, 36, 45, 53, 54, 58, 62, 66, 70, 72, 79, 81, 83, 90, 94, 95, 97, 98, 104, 105, 108, 111, 112, 114, 116, 119, 121, 122, 124, 126, 127, 131, 135, 141, 155, 156, 164, 165, 166, 177, 184, 185, 191, 192, 193, 197, 198, 201, 203, 208, 210, 211, 213, 214, 217, 220, 227, 233, 234, 239, 243, 245, 246, 247, 248, 252, 266, 269, 272, 273, 277], "too": [6, 12, 20, 24, 45, 46, 54, 60, 62, 64, 67, 69, 79, 84, 93, 94, 95, 129, 136, 208, 209, 213, 214, 217, 219, 220, 221, 232, 233, 248, 249], "thought": [6, 11, 54, 208, 217, 269, 272], "perfect": [6, 20, 45, 54, 94, 214, 220, 271, 272], "tell": [6, 7, 18, 19, 23, 36, 46, 55, 58, 62, 85, 96, 116, 172, 191, 196, 200, 208, 211, 217, 233, 269], "think": [6, 10, 11, 18, 19, 20, 23, 26, 34, 45, 119, 172, 236, 240, 269, 277], "test_": [6, 232], "coverage_doctest": 6, "coverag": 6, "6868680200532414": 6, "dsolv": [6, 11, 218, 219, 267, 271, 278], "co": [6, 12, 20, 22, 23, 24, 28, 34, 36, 53, 54, 56, 58, 59, 61, 62, 63, 64, 67, 68, 70, 72, 76, 77, 78, 79, 81, 85, 90, 94, 96, 109, 110, 111, 117, 119, 120, 122, 124, 125, 126, 131, 134, 139, 141, 177, 179, 180, 182, 184, 185, 186, 187, 191, 194, 197, 198, 200, 201, 202, 203, 204, 208, 209, 210, 211, 213, 217, 219, 220, 221, 222, 228, 240, 246, 247, 248, 249, 250, 255, 266, 267, 269, 271, 277, 278], "sin": [6, 7, 10, 11, 12, 18, 20, 22, 23, 24, 26, 28, 34, 36, 53, 54, 56, 58, 59, 61, 62, 63, 64, 68, 72, 73, 76, 77, 78, 79, 81, 82, 85, 90, 95, 96, 106, 109, 110, 111, 116, 117, 119, 120, 122, 124, 125, 126, 131, 134, 139, 141, 165, 177, 179, 180, 182, 184, 185, 186, 187, 189, 191, 197, 198, 200, 201, 202, 203, 204, 208, 209, 210, 211, 213, 216, 217, 219, 220, 222, 228, 234, 240, 246, 247, 248, 249, 250, 255, 266, 267, 269, 271, 272, 277, 278], "hint": [6, 20, 35, 38, 45, 54, 57, 60, 81, 85, 90, 94, 104, 134, 144, 148, 164, 166, 167, 177, 197, 208, 211, 215, 219, 277], "1st_exact": 6, "eq": [6, 11, 12, 14, 18, 20, 24, 32, 34, 36, 59, 60, 62, 64, 67, 71, 79, 84, 170, 187, 188, 192, 197, 199, 201, 203, 207, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 233, 234, 240, 246, 269, 271, 278], "c1": [6, 16, 55, 64, 71, 85, 87, 153, 167, 209, 214, 217, 219, 251, 278], "comma": [6, 7, 12, 36, 54, 201, 240, 269], "readabl": [6, 27, 35, 82, 108, 197, 200, 201, 208, 210, 243], "accept": [6, 11, 20, 24, 35, 36, 45, 54, 60, 68, 81, 84, 85, 87, 90, 93, 96, 117, 161, 177, 181, 187, 196, 197, 200, 201, 202, 209, 211, 213, 219, 233, 240, 246, 247, 250, 273], "rang": [6, 10, 11, 16, 20, 23, 34, 36, 43, 44, 45, 46, 48, 50, 54, 55, 59, 60, 62, 68, 85, 90, 94, 98, 102, 106, 136, 167, 187, 191, 192, 193, 194, 196, 197, 198, 203, 204, 207, 210, 213, 217, 220, 221, 222, 226, 232, 239, 266, 277], "30": [6, 28, 34, 36, 40, 54, 55, 57, 58, 59, 62, 68, 70, 81, 85, 90, 91, 94, 97, 98, 117, 140, 190, 192, 196, 197, 201, 207, 210, 213, 221, 222, 277], "7": [6, 12, 18, 20, 22, 28, 30, 31, 34, 36, 38, 40, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 67, 68, 69, 70, 76, 79, 81, 84, 85, 87, 88, 90, 94, 96, 97, 99, 102, 104, 119, 126, 129, 130, 134, 167, 172, 174, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 203, 204, 207, 208, 209, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 226, 227, 232, 233, 236, 239, 240, 246, 255, 267, 272, 273, 276], "8": [6, 16, 26, 28, 29, 34, 36, 38, 45, 46, 47, 50, 52, 54, 55, 57, 58, 59, 60, 62, 64, 67, 68, 70, 76, 79, 81, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 102, 104, 106, 119, 134, 139, 140, 151, 187, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 203, 204, 207, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 226, 232, 234, 236, 239, 246, 248, 249, 255, 266, 267, 271, 273, 277], "9": [6, 14, 24, 26, 34, 36, 42, 44, 45, 46, 50, 52, 53, 54, 55, 57, 59, 60, 62, 63, 64, 67, 68, 70, 76, 79, 81, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 99, 102, 104, 105, 106, 107, 109, 117, 119, 122, 134, 136, 140, 172, 186, 187, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 207, 209, 210, 211, 213, 214, 217, 219, 220, 221, 222, 232, 236, 239, 246, 248, 271, 273, 278], "11": [6, 18, 30, 31, 36, 45, 48, 50, 52, 54, 55, 57, 59, 62, 66, 67, 68, 70, 71, 79, 81, 84, 85, 86, 90, 94, 96, 99, 104, 117, 119, 132, 151, 161, 186, 187, 189, 190, 192, 194, 195, 196, 197, 198, 200, 201, 208, 210, 214, 217, 219, 220, 221, 222, 233, 239, 249], "12": [6, 12, 20, 28, 34, 35, 36, 40, 42, 43, 45, 46, 47, 50, 52, 53, 54, 55, 57, 59, 60, 62, 64, 67, 68, 70, 79, 81, 85, 90, 91, 94, 97, 98, 102, 104, 106, 119, 120, 132, 164, 177, 186, 189, 190, 191, 194, 196, 197, 198, 200, 201, 207, 209, 210, 214, 216, 217, 221, 222, 233, 236, 239, 248, 273, 277], "13": [6, 28, 36, 43, 45, 50, 54, 55, 57, 59, 62, 66, 67, 68, 69, 79, 84, 90, 94, 98, 102, 104, 117, 132, 187, 194, 196, 197, 198, 200, 201, 207, 214, 216, 218, 219, 221, 222, 232, 233, 255], "14": [6, 36, 43, 45, 49, 50, 52, 54, 55, 59, 60, 62, 79, 90, 91, 94, 95, 97, 102, 117, 186, 187, 190, 192, 194, 195, 196, 197, 198, 200, 201, 210, 213, 214, 217, 219, 221, 222, 267], "15": [6, 12, 20, 34, 40, 43, 45, 50, 52, 54, 55, 57, 58, 59, 62, 64, 67, 68, 70, 71, 79, 81, 84, 85, 86, 90, 91, 94, 97, 109, 140, 186, 187, 189, 190, 191, 192, 196, 197, 198, 200, 201, 203, 207, 208, 210, 213, 214, 218, 219, 220, 221, 222, 239, 266, 267, 272, 273], "16": [6, 24, 28, 34, 36, 45, 46, 49, 53, 54, 55, 59, 62, 63, 64, 68, 79, 81, 84, 90, 91, 93, 94, 98, 182, 189, 190, 191, 194, 195, 196, 197, 200, 201, 207, 209, 210, 211, 214, 221, 222, 239, 246, 254, 273], "17": [6, 10, 24, 43, 45, 46, 54, 55, 58, 59, 60, 64, 67, 70, 79, 90, 94, 104, 191, 192, 196, 197, 200, 201, 208, 210, 214, 217, 222, 236, 240, 271], "18": [6, 45, 46, 57, 59, 62, 64, 67, 70, 86, 90, 94, 97, 98, 102, 104, 106, 178, 186, 194, 195, 200, 201, 209, 210, 214, 217, 219, 220, 221, 222, 248], "19": [6, 45, 54, 57, 62, 64, 67, 70, 90, 94, 96, 97, 192, 196, 197, 200, 210, 214, 216, 219, 233, 266], "20": [6, 12, 24, 32, 36, 43, 45, 46, 53, 54, 55, 58, 59, 62, 70, 71, 81, 90, 94, 97, 98, 104, 114, 172, 174, 187, 191, 195, 196, 197, 198, 200, 201, 207, 208, 209, 210, 213, 214, 217, 220, 221, 246, 267], "21": [6, 10, 40, 45, 54, 57, 59, 67, 68, 76, 90, 94, 96, 97, 132, 187, 192, 194, 195, 196, 198, 200, 201, 207, 217, 221, 222, 277], "22": [6, 12, 45, 54, 57, 58, 59, 62, 90, 94, 97, 98, 132, 195, 200, 213, 214, 219, 221], "23": [6, 34, 45, 46, 54, 57, 60, 62, 68, 70, 90, 94, 97, 132, 192, 197, 200, 207, 214, 239], "24": [6, 28, 34, 42, 46, 47, 54, 57, 59, 62, 68, 76, 81, 90, 94, 97, 98, 102, 104, 164, 174, 186, 192, 194, 196, 197, 198, 200, 203, 208, 214, 217, 221, 236, 239, 255, 267, 273], "25": [6, 12, 45, 46, 55, 57, 59, 62, 64, 67, 69, 86, 90, 93, 94, 97, 98, 104, 109, 114, 180, 186, 194, 196, 197, 200, 201, 207, 208, 210, 214, 216, 217, 218, 221, 233], "26": [6, 43, 54, 55, 57, 62, 66, 90, 94, 97, 98, 197, 214, 221], "27": [6, 23, 36, 37, 45, 49, 59, 64, 90, 94, 97, 98, 104, 106, 194, 197, 219], "28": [6, 36, 45, 53, 57, 58, 62, 90, 94, 119, 210, 214, 217, 272], "29": [6, 28, 43, 45, 46, 54, 55, 57, 59, 60, 67, 68, 90, 94, 104, 156, 191, 209, 221], "assumpt": [6, 11, 12, 17, 19, 21, 23, 29, 30, 32, 33, 35, 36, 45, 46, 48, 53, 56, 58, 60, 61, 81, 84, 85, 90, 91, 104, 108, 134, 174, 179, 190, 200, 201, 209, 210, 213, 217, 219, 220, 226, 234, 239, 256, 257, 277], "parenthes": [6, 12, 54, 96, 108, 155, 156, 185, 201, 225, 242], "type": [6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 30, 31, 34, 45, 46, 50, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 67, 68, 69, 72, 79, 81, 82, 83, 84, 85, 86, 87, 90, 94, 95, 96, 97, 98, 100, 102, 104, 108, 112, 117, 128, 134, 139, 153, 161, 162, 163, 165, 177, 180, 181, 183, 185, 187, 188, 191, 192, 195, 196, 197, 198, 199, 201, 202, 203, 209, 210, 211, 213, 214, 215, 216, 219, 225, 226, 227, 230, 232, 233, 234, 239, 240, 242, 249, 252, 255, 258, 263, 267, 269, 271, 272, 273, 276, 277, 278], "enclos": [6, 64, 65, 70, 93, 105, 201, 211, 240], "colon": [6, 54], "preced": [6, 7, 12, 37, 46, 54, 55, 58, 59, 147, 213, 240], "space": [6, 12, 20, 34, 35, 36, 54, 55, 56, 63, 64, 65, 67, 69, 70, 83, 90, 96, 97, 106, 112, 113, 114, 136, 138, 141, 151, 154, 156, 162, 164, 171, 177, 180, 182, 185, 186, 187, 188, 196, 212, 220, 221, 232, 236, 246, 247, 249, 250, 251, 252, 254, 255, 269, 272], "omit": [6, 10, 18, 20, 36, 46, 53, 54, 55, 59, 79, 81, 84, 90, 169, 201, 202, 209, 211, 219, 225, 234, 239, 267], "absent": [6, 38, 219], "specifi": [6, 7, 10, 14, 18, 20, 24, 35, 36, 37, 49, 53, 54, 55, 56, 57, 60, 62, 63, 67, 70, 79, 81, 83, 84, 85, 87, 90, 94, 96, 97, 98, 104, 109, 112, 116, 117, 119, 121, 122, 124, 127, 129, 130, 131, 132, 134, 135, 151, 156, 161, 162, 164, 165, 170, 176, 177, 179, 180, 182, 184, 185, 188, 189, 190, 191, 192, 194, 196, 197, 198, 201, 203, 204, 207, 208, 209, 211, 213, 217, 218, 219, 220, 221, 222, 226, 227, 228, 232, 233, 234, 239, 240, 246, 247, 248, 251, 254, 263, 273], "displai": [6, 7, 12, 18, 19, 54, 55, 58, 79, 83, 97, 98, 102, 138, 171, 177, 180, 181, 187, 191, 192, 201, 209, 225, 232], "signatur": [6, 20, 30, 31, 46, 54, 90, 234, 235, 239, 240], "brace": [6, 59, 117, 201], "appear": [6, 7, 11, 12, 14, 35, 36, 38, 43, 45, 54, 55, 59, 60, 63, 64, 67, 70, 73, 77, 79, 81, 85, 90, 94, 96, 117, 121, 151, 167, 169, 172, 187, 189, 191, 194, 196, 197, 201, 210, 213, 217, 218, 219, 221, 225, 227, 232, 239, 240, 246, 250], "shape": [6, 10, 36, 70, 85, 87, 90, 92, 93, 102, 104, 111, 116, 117, 177, 187, 188, 190, 201, 204, 211, 221, 222, 223, 225, 226, 227, 240, 276], "combin": [6, 10, 12, 20, 35, 54, 58, 59, 62, 74, 81, 83, 84, 85, 94, 98, 104, 116, 120, 127, 135, 146, 153, 161, 162, 164, 165, 166, 170, 172, 173, 188, 189, 191, 192, 194, 196, 197, 201, 202, 210, 211, 213, 214, 217, 219, 221, 222, 236, 239, 266, 269, 272], "incorrectli": [6, 10, 20, 63, 64, 90, 189], "opt_cs": 6, "canon": [6, 11, 18, 36, 38, 43, 45, 46, 50, 54, 55, 56, 60, 70, 79, 84, 90, 94, 96, 112, 144, 148, 167, 169, 172, 174, 194, 202, 209, 210, 213, 219, 221, 227, 239, 277], "find": [6, 11, 12, 14, 16, 17, 20, 22, 23, 24, 28, 31, 34, 36, 37, 45, 48, 49, 50, 53, 54, 58, 60, 62, 64, 66, 67, 68, 71, 76, 79, 81, 83, 90, 94, 96, 110, 118, 125, 132, 134, 136, 152, 159, 161, 162, 163, 167, 170, 172, 184, 187, 188, 189, 190, 191, 192, 193, 194, 198, 200, 201, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 219, 220, 221, 227, 236, 239, 240, 242, 246, 255, 267, 269, 271, 273, 278], "optim": [6, 11, 36, 38, 45, 58, 94, 108, 134, 147, 151, 197, 201, 202, 210, 213, 221, 233], "mul": [6, 10, 11, 12, 15, 20, 28, 79, 81, 85, 94, 147, 151, 161, 162, 190, 191, 192, 196, 197, 201, 202, 203, 210, 213, 217, 218, 219, 220, 225, 257, 272], "pow": [6, 10, 11, 12, 28, 33, 36, 55, 60, 79, 85, 94, 166, 190, 191, 192, 197, 201, 203, 210, 213, 219, 220, 272, 276], "neg": [6, 11, 12, 18, 19, 23, 31, 33, 36, 37, 49, 53, 54, 59, 60, 62, 64, 66, 67, 70, 79, 81, 83, 84, 85, 90, 93, 94, 97, 98, 100, 101, 102, 104, 167, 177, 189, 190, 192, 194, 196, 197, 198, 201, 207, 209, 210, 211, 213, 214, 217, 219, 220, 221], "coeffici": [6, 14, 16, 18, 31, 34, 36, 53, 54, 56, 58, 59, 62, 67, 72, 73, 76, 77, 79, 83, 84, 87, 90, 91, 94, 105, 112, 117, 140, 154, 164, 172, 186, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 204, 207, 208, 211, 213, 214, 216, 217, 218, 219, 220, 221, 227, 233, 249, 252, 272, 277], "none": [6, 7, 10, 11, 18, 19, 20, 28, 29, 30, 31, 32, 34, 35, 36, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 76, 77, 79, 81, 82, 84, 85, 87, 90, 91, 94, 95, 96, 97, 104, 109, 110, 111, 112, 113, 114, 116, 117, 136, 138, 140, 141, 147, 152, 157, 162, 164, 167, 169, 173, 174, 175, 177, 179, 180, 181, 185, 186, 187, 188, 190, 191, 192, 194, 196, 197, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 230, 232, 233, 234, 235, 239, 240, 242, 245, 246, 248, 273, 277, 278], "process": [6, 7, 10, 11, 12, 18, 33, 36, 45, 46, 52, 54, 55, 60, 62, 70, 79, 81, 90, 94, 104, 113, 117, 119, 125, 128, 129, 131, 134, 187, 188, 194, 201, 202, 209, 213, 217, 219, 232, 236, 277], "concern": [6, 11, 18, 34, 37, 53, 58, 94, 182, 187, 189, 190, 191, 200, 201, 202, 213, 214, 219, 233, 234, 236, 242], "item": [6, 7, 11, 12, 14, 36, 43, 44, 46, 54, 59, 65, 71, 85, 90, 94, 112, 187, 191, 194, 197, 201, 209, 217, 218, 221, 232, 233, 236, 239, 240, 277], "fragment": [6, 55], "desir": [6, 10, 12, 16, 20, 24, 27, 45, 46, 54, 55, 57, 58, 59, 60, 64, 68, 70, 84, 85, 90, 93, 94, 95, 112, 113, 114, 116, 127, 131, 152, 177, 184, 185, 190, 192, 194, 196, 197, 198, 201, 202, 204, 209, 213, 217, 219, 220, 233, 235, 236, 239, 252, 266], "span": [6, 10, 83, 90, 97, 98, 196, 201, 237, 273], "subsequ": [6, 12, 54, 60, 177, 192, 194, 197, 236, 239, 249, 252], "indent": [6, 12, 242], "embed": [6, 7, 34, 46, 54, 82, 196], "hyperlink": 6, "classnam": 6, "erf": [6, 62, 79, 81, 201, 211, 221], "gauss": [6, 62, 81, 90, 136, 189, 196, 199, 219, 220], "erfc": [6, 62, 79, 201, 221], "complementari": [6, 62, 104], "erfi": [6, 62, 79, 201], "erf2": [6, 62, 201], "erfinv": [6, 62, 201, 221], "invers": [6, 28, 45, 46, 54, 55, 56, 61, 62, 80, 81, 87, 90, 94, 111, 112, 156, 160, 161, 164, 169, 172, 188, 189, 190, 192, 194, 197, 198, 201, 203, 211, 213, 217, 219, 220, 221, 239, 273, 277], "erfcinv": [6, 62, 201], "erf2inv": [6, 62, 201], "besselj": [6, 62, 76, 201, 213, 217, 271], "besselbas": [6, 62], "bessel": [6, 7, 60, 61, 72, 81, 197, 213, 217, 221, 271], "kind": [6, 7, 10, 11, 17, 18, 19, 20, 35, 36, 56, 59, 62, 74, 81, 85, 97, 100, 112, 117, 130, 182, 189, 191, 192, 197, 202, 203, 209, 217, 218, 221, 239, 252, 254, 257, 267, 277], "bess": [6, 62, 201, 213, 217, 221], "besselk": [6, 62, 201, 221], "cite": [6, 21], "citat": [6, 53, 195], "meant": [6, 7, 10, 12, 18, 20, 36, 54, 62, 67, 81, 94, 117, 134, 187, 192, 209, 213, 218, 250, 272], "augment": [6, 36, 90, 112, 129, 130, 134, 199, 219, 220, 237, 240, 278], "freeli": [6, 27, 88, 188], "wikipedia": [6, 11, 18, 20, 28, 30, 31, 32, 34, 35, 36, 42, 43, 45, 46, 53, 54, 55, 56, 57, 59, 60, 62, 64, 66, 70, 71, 72, 81, 83, 84, 85, 87, 90, 94, 102, 104, 107, 136, 138, 139, 140, 142, 143, 144, 148, 149, 150, 153, 155, 156, 165, 167, 170, 177, 179, 183, 197, 204, 208, 209, 210, 217, 220, 221, 234, 239, 246, 247, 251, 253, 255, 271, 273, 275], "wolfram": [6, 32, 47, 48, 54, 55, 57, 59, 60, 62, 64, 70, 81, 90, 94, 96, 195, 201, 203, 204, 206, 209, 214, 221, 239, 273], "mathworld": [6, 11, 32, 47, 48, 54, 55, 57, 59, 60, 62, 64, 70, 81, 90, 94, 195, 204, 209, 214, 221, 239], "nist": [6, 60, 62, 172], "digit": [6, 11, 12, 36, 54, 55, 57, 58, 64, 81, 84, 94, 127, 177, 191, 197, 208, 213, 239, 266], "dlmf": [6, 60, 62], "suffer": 6, "rot": [6, 70, 164], "publish": [6, 79, 211], "identifi": [6, 10, 18, 19, 34, 47, 54, 57, 58, 81, 90, 100, 129, 155, 156, 188, 191, 192, 202, 210, 213, 217, 218, 220, 221, 240, 243], "clickabl": 6, "kozen89": [6, 194, 195], "kozen": [6, 195], "landau": [6, 195, 267], "polynomi": [6, 7, 11, 16, 18, 22, 24, 32, 45, 53, 54, 55, 58, 59, 61, 72, 73, 74, 75, 77, 81, 84, 85, 87, 90, 94, 98, 104, 132, 134, 188, 190, 195, 199, 203, 208, 210, 211, 213, 214, 215, 216, 217, 220, 232, 256, 263, 268, 273, 278], "decomposit": [6, 45, 52, 86, 87, 90, 190, 192, 193, 194, 195, 203, 277], "1989": [6, 195, 219], "pp": [6, 45, 46, 52, 53, 54, 55, 59, 60, 81, 85, 90, 121, 131, 186, 189, 194, 195, 217, 218, 221], "445": [6, 195], "456": [6, 54, 195], "abramowitz": [6, 62], "milton": [6, 62], "stegun": [6, 62], "iren": [6, 62], "chapter": [6, 45, 62, 94, 117, 195], "formula": [6, 16, 34, 48, 53, 54, 58, 59, 60, 62, 67, 80, 84, 90, 94, 186, 188, 194, 197, 201, 203, 207, 210, 213, 214, 217, 271, 277], "tabl": [6, 18, 37, 45, 54, 59, 62, 75, 80, 81, 90, 94, 111, 134, 186, 196, 223, 259], "ed": [6, 46, 62, 90, 195, 219, 221], "1965": [6, 62, 85], "luke": [6, 62, 79, 211], "l": [6, 10, 12, 34, 35, 36, 37, 43, 45, 46, 53, 55, 62, 65, 66, 67, 68, 69, 71, 72, 77, 79, 81, 83, 86, 87, 90, 94, 97, 98, 104, 106, 111, 112, 114, 116, 117, 120, 121, 122, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 139, 165, 168, 169, 170, 172, 184, 185, 186, 188, 190, 192, 194, 195, 201, 203, 204, 210, 211, 214, 217, 219, 221, 225, 226, 227, 228, 232, 234, 239, 255, 277], "Their": [6, 54, 62, 79, 187, 191, 194, 211], "approxim": [6, 12, 17, 24, 34, 45, 53, 54, 55, 58, 62, 64, 70, 79, 81, 90, 94, 98, 101, 136, 170, 187, 191, 192, 197, 204, 208, 211, 221, 258, 267, 271], "1969": [6, 55, 62, 79, 195, 211], "en": [6, 7, 18, 20, 28, 30, 31, 32, 34, 35, 36, 42, 43, 45, 46, 53, 54, 55, 56, 57, 59, 60, 62, 64, 66, 70, 71, 72, 81, 82, 83, 84, 85, 87, 90, 94, 102, 104, 107, 136, 138, 139, 140, 142, 143, 144, 148, 149, 150, 153, 155, 156, 165, 167, 177, 179, 183, 197, 198, 204, 208, 209, 210, 217, 220, 221, 234, 239, 240, 246, 247, 251, 253, 255, 273], "bessel_funct": [6, 62], "typefunct": [6, 62], "gamma": [6, 7, 12, 20, 53, 54, 56, 58, 59, 61, 79, 81, 107, 134, 164, 185, 186, 201, 211, 213, 217, 221, 262, 277], "infti": [6, 11, 18, 32, 53, 54, 55, 59, 60, 62, 79, 81, 188, 197, 204, 208, 211, 217, 220, 221, 267, 271, 277], "mathrm": [6, 26, 44, 53, 54, 55, 62, 79, 81, 90, 192, 194, 201, 209, 211, 217, 220, 221, 264, 267, 271], "factori": [6, 16, 20, 53, 54, 58, 61, 62, 90, 94, 96, 186, 192, 194, 196, 197, 201, 203, 213, 219, 221, 234, 235, 239, 240, 277], "z": [6, 10, 11, 12, 14, 18, 20, 32, 33, 36, 37, 45, 46, 53, 54, 55, 56, 57, 59, 60, 62, 66, 67, 68, 69, 70, 79, 81, 84, 85, 87, 90, 96, 97, 98, 106, 109, 110, 111, 114, 117, 119, 120, 121, 122, 124, 125, 126, 131, 132, 134, 135, 136, 145, 147, 151, 161, 162, 164, 168, 172, 176, 177, 178, 179, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201, 202, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 233, 234, 240, 246, 248, 249, 250, 251, 252, 254, 255, 266, 267, 269, 271, 272, 276, 277, 278], "whole": [6, 10, 18, 54, 56, 62, 81, 98, 106, 187, 188, 196, 197, 201, 204, 209, 211, 217, 220, 239], "complex": [6, 10, 11, 12, 15, 18, 20, 23, 24, 28, 31, 33, 34, 36, 45, 54, 55, 57, 58, 59, 61, 62, 66, 76, 79, 85, 86, 90, 94, 95, 96, 102, 104, 108, 117, 134, 136, 140, 150, 153, 155, 156, 167, 176, 177, 185, 189, 190, 192, 193, 196, 197, 201, 202, 206, 211, 213, 217, 219, 220, 221, 234, 242, 277, 278], "plane": [6, 28, 54, 62, 64, 66, 67, 69, 70, 80, 81, 102, 119, 139, 140, 184, 185, 209, 220, 255, 277], "pole": [6, 11, 62, 79, 103, 104, 140, 208, 211, 217], "pi": [6, 10, 11, 12, 15, 18, 20, 23, 24, 27, 28, 29, 31, 32, 33, 34, 36, 46, 53, 56, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 73, 79, 81, 90, 94, 106, 119, 134, 136, 138, 139, 140, 141, 143, 151, 162, 164, 165, 168, 170, 177, 186, 187, 189, 191, 192, 197, 201, 204, 208, 209, 210, 211, 213, 216, 217, 219, 220, 221, 239, 246, 248, 255, 266, 271, 277], "oo": [6, 11, 14, 18, 19, 32, 34, 53, 54, 58, 59, 60, 62, 67, 79, 81, 84, 90, 104, 106, 153, 165, 168, 192, 194, 197, 206, 207, 208, 209, 213, 216, 217, 219, 220, 221, 226, 239, 242, 267, 271], "known": [6, 11, 18, 19, 20, 31, 35, 36, 37, 43, 45, 46, 54, 55, 58, 59, 62, 64, 67, 72, 79, 81, 82, 91, 94, 102, 104, 105, 107, 109, 114, 131, 170, 177, 184, 190, 191, 192, 196, 197, 201, 204, 207, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 239, 240, 246, 252, 254, 277], "sqrt": [6, 10, 11, 14, 18, 20, 22, 23, 24, 28, 32, 33, 34, 36, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 77, 78, 79, 81, 82, 85, 86, 90, 94, 96, 97, 100, 104, 106, 119, 136, 138, 140, 141, 146, 151, 161, 162, 164, 165, 167, 168, 170, 177, 182, 185, 186, 189, 191, 192, 194, 196, 197, 200, 201, 202, 207, 210, 211, 213, 214, 216, 217, 219, 220, 221, 239, 240, 242, 246, 254, 255, 266, 271, 276, 277, 278], "obei": [6, 62, 186, 201, 211], "mirror": [6, 62, 81, 140], "symmetri": [6, 10, 42, 47, 50, 62, 85, 146, 186, 217, 225, 227, 266, 277], "conjug": [6, 32, 43, 44, 45, 54, 61, 62, 85, 90, 106, 136, 150, 153, 167, 197, 201, 217, 227], "differenti": [6, 7, 10, 11, 22, 34, 54, 59, 60, 62, 71, 72, 74, 77, 104, 111, 112, 116, 117, 119, 121, 124, 127, 128, 129, 130, 131, 134, 135, 156, 162, 176, 177, 179, 180, 182, 185, 188, 194, 198, 200, 201, 206, 211, 213, 215, 217, 218, 246, 252, 253, 256, 263, 267, 268, 271], "polygamma": [6, 59, 62, 201], "seri": [6, 16, 34, 35, 36, 37, 44, 45, 53, 54, 56, 58, 59, 60, 62, 74, 77, 78, 79, 83, 94, 101, 104, 117, 124, 126, 134, 180, 184, 193, 194, 201, 206, 207, 211, 217, 220, 257, 263, 268], "expans": [6, 16, 20, 36, 54, 56, 59, 60, 62, 74, 81, 90, 94, 131, 146, 148, 197, 198, 203, 204, 205, 210, 212, 217, 219, 220, 257, 268, 277], "eulergamma": [6, 58, 59, 62], "zeta": [6, 11, 12, 53, 54, 58, 59, 61, 192, 196, 201, 208, 221], "40": [6, 24, 36, 57, 59, 62, 64, 71, 85, 90, 94, 97, 187, 198, 200, 201, 221, 242, 266], "288037795340032417959588909060233922890": [6, 62], "49801566811835604271": [6, 62], "15494982830181068512": [6, 62], "lowergamma": [6, 62, 221], "lower": [6, 10, 11, 18, 31, 34, 36, 45, 46, 53, 54, 56, 62, 63, 65, 70, 71, 81, 85, 86, 87, 90, 102, 107, 111, 167, 180, 186, 188, 190, 192, 194, 197, 201, 210, 211, 213, 217, 226, 227, 236, 246, 267, 275], "uppergamma": [6, 59, 62, 201, 221], "upper": [6, 31, 53, 55, 58, 62, 63, 70, 71, 85, 86, 87, 90, 93, 94, 102, 111, 160, 167, 186, 190, 192, 194, 196, 197, 201, 211, 219, 226, 246], "loggamma": [6, 7, 62, 201], "log": [6, 7, 12, 20, 26, 28, 34, 36, 45, 53, 54, 58, 59, 61, 62, 72, 76, 78, 79, 81, 85, 90, 94, 187, 192, 201, 203, 208, 211, 213, 217, 220, 221, 228, 267, 277, 278], "digamma": [6, 59, 62, 201], "trigamma": [6, 62, 201], "beta": [6, 12, 36, 45, 54, 61, 81, 164, 177, 186, 196, 198, 201, 217, 221], "euler": [6, 34, 35, 53, 54, 55, 58, 61, 62, 70, 76, 82, 94, 164, 177, 181, 185, 186, 197, 201, 217, 221, 246, 247], "gamma_funct": [6, 62], "gov": [6, 60, 62], "gammafunct": [6, 62], "gammabetaerf": [6, 59, 62], "unusu": [6, 18, 119, 232], "inlin": [6, 82, 181, 201, 234], "pretti": [6, 11, 20, 35, 36, 62, 81, 82, 90, 94, 98, 104, 119, 181, 211, 213, 220, 254, 264, 268, 271, 273, 277], "As": [6, 10, 15, 16, 19, 20, 27, 36, 45, 46, 54, 55, 58, 59, 60, 62, 78, 79, 84, 90, 93, 94, 96, 116, 117, 119, 121, 128, 131, 132, 167, 172, 184, 188, 189, 191, 192, 194, 197, 198, 200, 201, 208, 209, 211, 217, 220, 221, 239, 240, 249, 250, 266, 267, 269, 271, 272, 273, 276, 277], "literatur": [6, 11, 79, 171, 193], "fact": [6, 10, 11, 18, 19, 20, 23, 31, 32, 54, 59, 62, 72, 79, 94, 100, 119, 131, 172, 188, 189, 191, 194, 196, 198, 200, 211, 213, 217, 220, 232, 240, 254, 266, 269, 270, 271, 272, 277], "eval": [6, 10, 18, 30, 31, 36, 54, 60, 62, 153, 167, 192, 197, 201, 234, 266], "illumin": 6, "tone": 6, "narr": [6, 8, 270], "excerpt": 6, "geometri": [6, 63, 64, 65, 67, 68, 69, 70, 71, 81, 127, 140, 193, 248, 255, 256, 263, 271], "autofunct": 6, "intersect": [6, 18, 23, 34, 35, 45, 64, 65, 67, 68, 69, 70, 71, 140, 188, 197, 201, 207, 208, 220, 263], "convex_hul": [6, 66, 70, 71], "are_similar": [6, 65, 66, 71], "autoclass": 6, "linearent": [6, 64, 67, 68, 69, 70], "rai": [6, 64, 66, 67, 68, 70, 71, 136, 140], "segment": [6, 10, 45, 64, 66, 67, 68, 69, 70, 71, 184, 187, 217, 232], "curv": [6, 35, 56, 66, 81, 94, 97, 136, 187, 188, 217, 246, 255, 267], "ellips": [6, 65, 66, 70, 139, 187, 201, 276], "circl": [6, 20, 54, 64, 65, 66, 68, 69, 70, 71, 79, 140, 147, 187, 220, 246, 248, 255], "polygon": [6, 64, 65, 66, 71, 80, 187, 255], "regularpolygon": [6, 65, 66, 70, 187], "triangl": [6, 20, 35, 59, 65, 66, 70, 71, 81, 85, 94, 186, 187, 248, 255], "rel": [6, 7, 10, 35, 36, 44, 45, 46, 47, 51, 52, 53, 55, 58, 65, 79, 94, 109, 111, 114, 122, 131, 132, 139, 166, 177, 180, 184, 185, 188, 190, 191, 194, 196, 209, 211, 216, 219, 221, 232, 239, 249, 250, 254, 271], "cumbersom": [6, 24], "viewcod": 6, "aco": [6, 12, 28, 61, 67, 70, 119, 134, 140, 177, 201, 217, 246, 277], "obj": [6, 10, 18, 54, 192, 197, 201, 235], "qualifi": [6, 243], "elementari": [6, 18, 19, 20, 45, 54, 55, 58, 61, 62, 76, 79, 81, 85, 90, 94, 132, 160, 163, 193, 197, 198, 205, 239, 240, 249, 259], "trigonometr": [6, 20, 24, 54, 61, 81, 198, 204, 212, 216, 217, 220, 240, 257, 268, 278], "trail": [6, 46, 94, 192, 194, 197, 237, 242], "pair": [6, 12, 16, 35, 36, 45, 46, 54, 55, 60, 66, 71, 78, 90, 94, 117, 121, 157, 159, 161, 162, 167, 176, 188, 191, 194, 196, 197, 202, 207, 208, 210, 211, 213, 214, 217, 220, 221, 234, 239, 249, 266, 273], "www": [6, 7, 28, 34, 45, 46, 55, 57, 59, 62, 76, 81, 82, 94, 102, 181, 195, 200, 201, 210, 213, 214, 217, 221, 239, 273, 276], "master": [6, 7, 26, 81, 232], "usag": [6, 7, 11, 12, 18, 19, 20, 27, 30, 56, 60, 81, 127, 164, 182, 187, 188, 193, 194, 201, 209, 211, 214, 217, 218, 222, 236, 240, 241, 252, 253, 263, 272], "expect": [6, 7, 12, 18, 20, 35, 37, 39, 54, 60, 62, 66, 84, 94, 95, 104, 117, 161, 191, 194, 196, 198, 199, 208, 213, 216, 219, 220, 221, 230, 232, 233, 236, 239, 240, 271, 272], "vector": [6, 16, 28, 32, 36, 38, 41, 45, 46, 56, 62, 67, 68, 69, 76, 77, 83, 85, 90, 95, 97, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 139, 140, 153, 162, 164, 169, 172, 179, 180, 181, 188, 193, 196, 201, 211, 217, 219, 221, 226, 227, 232, 233, 247, 251, 256, 260, 262, 273], "dynamicsymbol": [6, 108, 109, 110, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 177, 180, 181, 182, 183, 184, 185], "custom": [6, 10, 21, 36, 46, 54, 58, 61, 82, 85, 90, 110, 111, 176, 181, 182, 203, 207, 214, 221, 227, 233, 240, 246, 254, 263, 271, 273], "sine": [6, 20, 54, 60, 62, 79, 81, 141, 198, 204, 210, 266], "expand": [6, 10, 11, 12, 16, 18, 36, 56, 58, 59, 60, 62, 79, 81, 85, 104, 117, 119, 134, 148, 156, 159, 166, 167, 189, 191, 193, 194, 196, 197, 198, 201, 204, 208, 210, 211, 213, 217, 220, 221, 225, 233, 240, 251, 257, 266, 271], "troubleshoot": [6, 131], "spell": [6, 10, 11, 217], "try": [6, 7, 8, 10, 11, 12, 18, 19, 20, 24, 46, 53, 54, 58, 62, 64, 69, 79, 81, 84, 87, 90, 93, 94, 157, 159, 166, 167, 187, 191, 196, 201, 206, 208, 209, 210, 211, 213, 214, 217, 219, 240, 242, 266, 269, 272, 273, 277], "referencefram": [6, 109, 110, 111, 112, 114, 117, 119, 120, 121, 124, 125, 126, 129, 130, 131, 132, 134, 135, 178, 179, 180, 181, 182, 183, 184], "though": [6, 11, 12, 18, 19, 20, 24, 27, 37, 54, 55, 56, 66, 70, 79, 81, 85, 90, 94, 108, 112, 119, 129, 131, 162, 176, 177, 184, 185, 189, 191, 192, 197, 198, 210, 211, 213, 217, 218, 219, 220, 232, 252, 267, 272, 277], "frame": [6, 108, 109, 110, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 126, 128, 129, 130, 131, 132, 134, 135, 176, 177, 178, 179, 180, 182, 183, 184, 236, 246, 252], "notimplementederror": [6, 23, 24, 34, 53, 64, 67, 71, 81, 90, 102, 190, 196, 200, 209, 216, 217, 218, 219, 220], "outsid": [6, 23, 32, 45, 54, 62, 65, 70, 85, 94, 108, 172, 185, 197, 213, 267, 272], "plot": [6, 20, 26, 63, 64, 66, 67, 70, 77, 82, 90, 97, 98, 103, 134, 151, 154, 160, 204, 256, 262, 263, 271, 276], "ahead": [6, 94], "submit": 6, "sub": [6, 10, 11, 12, 14, 18, 19, 20, 23, 36, 53, 60, 62, 63, 64, 65, 66, 67, 68, 70, 81, 84, 85, 87, 90, 94, 96, 97, 98, 104, 108, 110, 117, 119, 120, 121, 124, 125, 131, 134, 164, 165, 170, 177, 186, 188, 190, 191, 192, 197, 201, 208, 209, 213, 214, 217, 218, 219, 221, 232, 233, 235, 257, 266, 267, 269], "common": [6, 7, 10, 11, 12, 18, 19, 20, 22, 23, 31, 34, 36, 45, 46, 54, 55, 60, 65, 68, 71, 81, 87, 89, 90, 94, 95, 102, 104, 109, 111, 113, 120, 127, 132, 134, 139, 172, 177, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 203, 209, 210, 211, 212, 214, 217, 221, 233, 234, 237, 239, 240, 252, 254, 257, 260, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277], "matrixcommon": [6, 87, 89, 90], "dyadic": [6, 57, 109, 114, 117, 119, 124, 126, 127, 134, 179, 181, 183, 248, 253], "shorten": 6, "highli": [7, 54, 58, 101, 191, 197, 206, 234], "aspect": [7, 18, 90, 191], "teach": [7, 46, 55, 221], "conduct": 7, "accord": [7, 12, 36, 42, 45, 46, 50, 53, 54, 55, 62, 84, 87, 90, 94, 96, 118, 127, 161, 167, 187, 192, 194, 196, 198, 214, 219, 220, 227, 232, 234, 239, 254], "survei": 7, "commonli": [7, 11, 46, 59, 62, 81, 90, 108, 184, 189, 217, 252], "encount": [7, 12, 16, 54, 81, 90, 159, 189, 194, 197, 219, 220, 234, 246, 273], "problem": [7, 10, 11, 12, 16, 18, 19, 20, 22, 23, 24, 38, 48, 50, 54, 55, 66, 79, 81, 85, 90, 94, 97, 99, 100, 105, 108, 117, 121, 122, 125, 127, 129, 176, 184, 185, 188, 189, 193, 194, 211, 213, 214, 217, 220, 236, 239, 253, 262, 267, 269, 273], "offer": [7, 35, 36, 45, 54, 95, 108, 134, 176, 185, 191, 196, 236, 253], "bring": [7, 79, 112, 125, 190, 204, 213, 273], "greater": [7, 32, 46, 54, 59, 60, 62, 79, 83, 94, 104, 194, 197, 200, 208, 213, 217, 219, 221, 236, 239, 252, 267], "clariti": [7, 45, 180], "mission": [7, 35, 88], "ca": [7, 26, 55, 62, 81, 200, 201, 239], "dedic": [7, 36, 193, 234, 250, 252], "essenti": [7, 38, 49, 54, 58, 60, 61, 62, 79, 114, 119, 182, 183, 185, 188, 189, 192, 196, 208, 211, 249, 252, 253, 254], "element": [7, 10, 11, 12, 15, 18, 28, 31, 35, 36, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 70, 77, 79, 81, 83, 84, 85, 86, 87, 90, 93, 94, 95, 97, 98, 104, 105, 114, 134, 136, 139, 153, 164, 172, 180, 183, 185, 187, 188, 189, 190, 192, 193, 194, 197, 199, 200, 201, 207, 208, 209, 211, 213, 214, 217, 219, 220, 221, 222, 226, 233, 235, 236, 239, 240, 241, 248, 267, 272, 273, 276, 277], "deviat": [7, 140, 221], "advanc": [7, 15, 17, 20, 30, 45, 54, 58, 59, 90, 91, 127, 132, 183, 187, 190, 191, 193, 195, 196, 203, 210, 217, 232, 233, 234, 239, 266, 268, 270, 274, 275, 276, 277], "docutil": 7, "sourceforg": [7, 35], "net": [7, 35, 70, 195, 217, 221, 239], "ext": [7, 188, 192], "autodoc": 7, "associ": [7, 10, 11, 18, 35, 37, 52, 54, 55, 61, 62, 76, 77, 79, 83, 132, 134, 157, 165, 176, 177, 184, 185, 189, 190, 191, 192, 194, 196, 201, 209, 211, 214, 227, 241], "graphic": [7, 102], "info": [7, 12, 104, 201, 217, 218], "bear": [7, 18], "linkcod": 7, "readthedoc": [7, 82, 240], "subset": [7, 16, 18, 20, 34, 35, 38, 41, 45, 46, 52, 59, 60, 66, 77, 79, 81, 83, 94, 188, 190, 194, 196, 201, 209, 239], "modifi": [7, 11, 12, 35, 36, 45, 54, 60, 62, 94, 96, 130, 139, 187, 194, 196, 197, 198, 201, 213, 219, 220, 221, 232, 235, 236, 239, 240, 266, 271, 273], "sphinx_math_dollar": 7, "delimit": [7, 54, 201], "dollar": [7, 271], "2": [7, 11, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 223, 226, 227, 228, 230, 232, 233, 234, 235, 236, 239, 240, 242, 246, 247, 248, 249, 250, 251, 252, 254, 255, 266, 267, 269, 271, 272, 273, 276, 277, 278], "sphinxext": 7, "plot_direct": 7, "figur": [7, 54, 55, 64, 65, 67, 69, 70, 81, 98, 117, 162, 184, 185, 186, 187, 198, 201, 255, 277], "devel": [7, 186], "supersed": [7, 117, 134], "pep": [7, 36, 54, 84], "257": [7, 94, 219], "our": [7, 9, 10, 16, 20, 26, 36, 54, 62, 79, 90, 94, 120, 172, 184, 185, 187, 188, 190, 196, 197, 198, 201, 208, 211, 214, 217, 220, 232, 266, 269, 270, 272, 277], "introduct": [7, 10, 17, 41, 45, 46, 59, 62, 127, 183, 192, 193, 194, 195, 197, 201, 214, 217, 220, 253, 257, 258, 259, 263, 270, 276], "four": [7, 36, 46, 54, 58, 62, 84, 87, 94, 100, 105, 118, 127, 132, 140, 177, 187, 188, 194, 197, 201, 209, 214, 217, 219, 221, 222, 246, 247, 250], "locat": [7, 10, 46, 54, 68, 90, 94, 97, 98, 100, 111, 121, 131, 135, 180, 182, 196, 197, 201, 213, 221, 235, 244, 246, 249, 251, 253, 254], "websit": [7, 275], "advertis": 7, "serv": [7, 11, 16, 20, 30, 31, 36, 51, 54, 61, 77, 196, 217, 218, 242, 270], "initi": [7, 11, 18, 30, 45, 49, 54, 55, 56, 59, 62, 70, 72, 73, 76, 77, 78, 79, 82, 94, 96, 98, 100, 102, 104, 109, 112, 114, 116, 117, 119, 121, 126, 129, 130, 131, 134, 135, 139, 147, 156, 178, 179, 181, 185, 186, 194, 196, 197, 201, 207, 211, 213, 217, 219, 220, 226, 234, 241, 242, 246, 247, 248, 249, 250], "obtain": [7, 11, 12, 14, 16, 23, 24, 30, 31, 35, 37, 38, 45, 46, 47, 50, 54, 55, 57, 58, 59, 60, 62, 64, 65, 67, 68, 70, 76, 79, 81, 83, 85, 90, 93, 94, 101, 104, 127, 130, 132, 140, 162, 167, 172, 188, 189, 192, 194, 196, 197, 200, 202, 209, 210, 211, 213, 214, 217, 218, 219, 220, 239, 242, 249, 250], "technic": [7, 10, 13, 20, 25, 35, 54, 134, 153, 188, 217, 234, 239, 252, 269, 272], "place": [7, 8, 10, 11, 12, 18, 20, 23, 25, 35, 46, 47, 54, 55, 60, 70, 86, 90, 93, 94, 96, 104, 134, 135, 195, 196, 201, 202, 208, 210, 213, 217, 236, 239, 265, 266, 273, 277], "site": [7, 94, 235], "upload": [7, 94], "belong": [7, 18, 32, 35, 45, 50, 54, 77, 90, 167, 177, 184, 187, 188, 190, 191, 194, 196, 197, 208, 209, 213, 214, 220, 227], "insid": [7, 10, 11, 12, 20, 45, 46, 51, 54, 64, 65, 70, 97, 108, 110, 121, 131, 166, 167, 172, 181, 185, 197, 201, 209, 211, 214, 219, 220, 221, 223, 225, 236, 272, 273], "spars": [7, 11, 87, 89, 90, 161, 190, 193, 196, 197, 198, 221, 222, 260, 272], "substanti": [7, 95], "edit": [7, 81, 90, 94, 194, 195, 197], "arg": [7, 11, 18, 20, 23, 28, 30, 31, 32, 33, 34, 35, 36, 38, 45, 46, 48, 51, 53, 54, 55, 56, 58, 59, 61, 62, 64, 65, 67, 69, 70, 71, 76, 79, 81, 84, 85, 86, 87, 88, 90, 92, 94, 96, 104, 136, 142, 145, 147, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 177, 181, 185, 187, 190, 192, 194, 196, 197, 198, 201, 203, 204, 207, 208, 209, 210, 213, 217, 219, 220, 221, 222, 226, 227, 232, 233, 234, 235, 239, 240, 242, 246, 247], "invari": [7, 10, 20, 45, 50, 101, 104, 186, 192, 196, 197, 211, 217], "polici": [7, 8, 10, 235, 237], "5": [7, 12, 14, 18, 20, 22, 23, 24, 28, 30, 31, 32, 34, 36, 37, 38, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 104, 106, 107, 109, 114, 117, 119, 120, 124, 125, 126, 127, 129, 136, 140, 161, 162, 165, 167, 174, 176, 178, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 226, 227, 232, 233, 239, 240, 246, 248, 250, 252, 254, 255, 266, 267, 269, 272, 273, 276, 277], "center": [7, 16, 34, 45, 53, 54, 64, 68, 70, 71, 81, 90, 109, 111, 114, 117, 119, 124, 126, 128, 132, 134, 140, 184, 187, 196, 201, 209, 255], "resid": 7, "standalon": [7, 134], "restructur": 7, "appli": [7, 10, 11, 19, 20, 24, 28, 29, 30, 31, 32, 36, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 61, 64, 69, 70, 72, 80, 81, 84, 85, 86, 90, 94, 96, 97, 98, 100, 104, 105, 109, 110, 119, 122, 129, 131, 133, 144, 148, 151, 152, 156, 159, 160, 164, 167, 177, 185, 187, 189, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 207, 208, 209, 210, 212, 213, 217, 218, 219, 220, 221, 222, 225, 232, 235, 239, 246, 247, 250, 273, 276, 277], "surround": [7, 54, 71, 140, 209, 242], "nu": [7, 12, 62, 81, 94, 168, 189, 201, 213, 221, 227, 271], "equat": [7, 11, 12, 14, 16, 21, 34, 36, 50, 53, 54, 56, 60, 62, 64, 67, 68, 72, 76, 77, 78, 79, 82, 85, 90, 97, 100, 104, 106, 108, 111, 112, 113, 116, 117, 119, 120, 121, 122, 124, 126, 127, 128, 133, 134, 135, 136, 140, 171, 176, 180, 181, 184, 185, 186, 187, 188, 193, 194, 195, 196, 199, 200, 201, 207, 211, 213, 215, 216, 218, 226, 246, 250, 251, 255, 267, 268, 271], "strip": [7, 55, 81, 94, 194, 237, 242], "out": [7, 12, 18, 19, 20, 35, 36, 45, 46, 54, 55, 56, 59, 62, 70, 79, 81, 87, 90, 94, 97, 104, 105, 117, 119, 121, 124, 134, 144, 148, 159, 162, 164, 166, 167, 188, 189, 191, 192, 196, 197, 198, 199, 201, 202, 208, 211, 213, 217, 222, 232, 234, 239, 240, 269, 271, 272, 276, 277], "unimport": 7, "bullet": 7, "avoid": [7, 8, 10, 11, 19, 20, 36, 37, 54, 55, 60, 79, 81, 84, 90, 93, 96, 121, 131, 161, 184, 185, 189, 191, 197, 201, 202, 209, 213, 217, 219, 221, 225, 234, 237, 240, 269, 270], "whitespac": [7, 54, 237], "invalid": [7, 12, 24, 54, 55, 96, 119, 191, 194, 209], "dx": [7, 10, 11, 16, 20, 34, 36, 50, 54, 56, 58, 62, 71, 73, 76, 77, 78, 79, 81, 90, 97, 107, 112, 113, 156, 185, 197, 198, 204, 214, 217, 218, 222, 267, 271, 276, 278], "meta": [7, 54, 217, 218], "stackexchang": [7, 64], "5020": 7, "wikibook": [7, 81, 82], "overleaf": 7, "mathematical_express": 7, "verbatim": [7, 201], "_rewrit": 7, "_expand": 7, "difficult": [7, 18, 24, 54, 90, 117, 198, 211, 217, 218, 220, 233, 255, 271, 277], "sentenc": [7, 84], "thumb": [7, 84, 239], "greek": [7, 11, 27, 54, 94, 96, 188, 201], "letter": [7, 11, 12, 27, 47, 54, 55, 94, 167, 201, 239, 267, 269], "\u03b1": [7, 186, 200], "alpha": [7, 12, 45, 54, 62, 81, 83, 139, 143, 146, 164, 180, 184, 185, 186, 192, 194, 196, 197, 200, 201, 213, 217, 221], "logarithm": [7, 12, 28, 34, 36, 54, 55, 60, 61, 79, 81, 90, 94, 192, 194, 198, 201, 211, 213, 220, 221, 268], "italic": 7, "emphasi": [7, 191], "asterisk": 7, "stirl": [7, 46, 61, 239], "fals": [7, 11, 12, 18, 19, 20, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 79, 81, 82, 84, 85, 86, 87, 90, 91, 94, 96, 97, 98, 102, 104, 106, 107, 110, 112, 113, 114, 117, 119, 120, 124, 125, 126, 128, 129, 130, 131, 132, 135, 139, 151, 152, 156, 159, 164, 165, 166, 167, 170, 174, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 213, 214, 216, 217, 218, 219, 220, 221, 226, 227, 230, 232, 233, 234, 235, 239, 240, 242, 246, 248, 269, 272, 273, 276], "permut": [7, 37, 39, 41, 42, 44, 47, 50, 51, 52, 55, 59, 62, 85, 87, 90, 113, 167, 186, 190, 192, 197, 214, 222, 223, 227, 239, 277], "cycl": [7, 10, 36, 42, 45, 46, 52, 54, 57, 59, 85, 94, 141, 209, 239], "partit": [7, 41, 45, 61, 94, 121, 131, 133, 221, 236, 238], "reduc": [7, 12, 19, 29, 31, 33, 37, 50, 54, 55, 57, 59, 60, 62, 69, 70, 79, 81, 90, 94, 104, 105, 131, 149, 167, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 207, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 239, 273], "ge": [7, 18, 59, 60, 62, 79, 85, 90, 94, 186, 189, 194, 197, 211, 239], "consecut": [7, 36, 45, 50, 53, 55, 59, 70, 213, 219], "group": [7, 35, 40, 41, 46, 47, 50, 51, 52, 54, 57, 59, 83, 84, 94, 146, 155, 156, 167, 186, 187, 188, 196, 197, 213, 217, 219, 220, 227, 239], "pairwis": [7, 32, 35, 54, 59, 71, 90, 94, 214, 219], "ital": [7, 201], "last": [7, 8, 10, 12, 14, 15, 16, 18, 19, 20, 23, 24, 29, 30, 31, 35, 36, 37, 44, 45, 46, 50, 53, 54, 55, 58, 64, 81, 84, 85, 86, 87, 88, 90, 92, 93, 94, 96, 104, 116, 128, 139, 172, 186, 187, 188, 189, 191, 192, 194, 197, 200, 201, 208, 209, 214, 217, 219, 220, 221, 222, 227, 230, 232, 233, 234, 235, 237, 239, 240, 242, 267, 269, 272, 273], "talk": [7, 13, 25, 55, 188, 196, 249], "handl": [7, 16, 18, 19, 20, 34, 42, 46, 54, 60, 81, 82, 84, 89, 94, 95, 96, 97, 105, 108, 117, 131, 147, 150, 156, 157, 162, 191, 197, 198, 207, 213, 215, 217, 219, 222, 225, 233, 239, 240, 242, 257, 272, 277], "referenc": [7, 8, 38, 43, 94, 116, 119, 164, 196], "overlin": [7, 18, 62], "normal": [7, 10, 12, 18, 19, 20, 24, 28, 31, 36, 45, 53, 54, 58, 60, 64, 67, 68, 69, 81, 82, 84, 88, 89, 90, 94, 96, 106, 108, 111, 117, 119, 125, 134, 140, 151, 161, 164, 165, 166, 167, 168, 172, 175, 177, 185, 188, 191, 192, 193, 194, 196, 197, 201, 202, 204, 209, 210, 214, 217, 221, 226, 232, 237, 239, 246, 260], "assign": [7, 18, 35, 36, 37, 50, 54, 59, 70, 81, 83, 84, 90, 96, 112, 117, 124, 134, 172, 182, 185, 187, 189, 194, 201, 219, 220, 227, 234, 249, 252, 269], "structur": [7, 10, 11, 15, 18, 20, 33, 35, 36, 42, 45, 46, 52, 54, 79, 81, 84, 85, 90, 97, 98, 100, 116, 127, 165, 167, 187, 188, 191, 194, 196, 197, 198, 213, 215, 217, 219, 220, 221, 225, 226, 234, 236, 239, 240, 269, 277], "suggest": [7, 10, 22, 37, 45, 81, 90, 94, 117, 199, 273], "american": [7, 40, 55], "color": [7, 82, 102, 181, 201, 232, 239, 263, 276], "colour": 7, "quotat": 7, "line_color": [7, 187, 204], "aesthet": [7, 11, 187], "ariti": [7, 187], "term": [7, 10, 11, 12, 16, 18, 20, 24, 36, 45, 54, 55, 56, 58, 59, 60, 62, 73, 77, 78, 79, 81, 84, 85, 90, 94, 98, 102, 104, 110, 112, 119, 121, 124, 127, 129, 131, 132, 146, 151, 163, 164, 167, 169, 172, 177, 179, 182, 184, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 225, 226, 239, 246, 248, 252, 257, 267, 269, 271, 272, 277], "unrestrict": [7, 43, 239], "necklac": [7, 239], "bracelet": [7, 239], "impli": [7, 11, 12, 18, 28, 32, 36, 45, 84, 100, 167, 187, 192, 194, 201, 209, 211, 217, 219, 222, 225, 226, 239, 252], "turn": [7, 10, 11, 18, 24, 36, 54, 60, 62, 69, 79, 88, 125, 129, 182, 188, 196, 198, 201, 208, 209, 211, 213, 214, 217, 232, 239, 254, 269, 271], "sequenc": [7, 12, 34, 36, 38, 41, 44, 45, 46, 50, 52, 53, 54, 55, 57, 59, 62, 64, 67, 68, 69, 70, 71, 74, 78, 84, 85, 87, 90, 93, 94, 134, 140, 166, 167, 192, 193, 195, 201, 203, 205, 208, 210, 211, 213, 214, 217, 218, 220, 227, 230, 233, 234, 239, 241, 242], "revers": [7, 38, 43, 46, 53, 54, 55, 60, 81, 82, 84, 90, 94, 104, 166, 177, 181, 188, 190, 194, 197, 198, 201, 202, 209, 213, 217, 239, 277], "ambigu": [7, 10, 12, 14, 54, 155, 161, 213, 225, 230], "person": [7, 11], "chebyshev": [7, 34, 54, 81, 194, 197], "pafnuti": 7, "lvovich": 7, "tchebychev": 7, "whose": [7, 10, 11, 18, 20, 35, 37, 38, 43, 46, 53, 54, 55, 60, 64, 68, 70, 71, 77, 81, 84, 90, 94, 114, 129, 139, 162, 172, 178, 179, 182, 185, 189, 190, 192, 196, 197, 208, 209, 213, 217, 218, 219, 221, 227, 232, 236, 239, 240, 246, 248, 250, 252], "transliter": 7, "russian": 7, "chebyshevt": [7, 62, 201], "orthogonalpolynomi": 7, "t_n": [7, 59, 62, 81, 194, 197, 250], "tens": 7, "inclus": [7, 53, 100, 160, 188, 207, 208, 209, 220], "pronoun": 7, "gender": 7, "neutral": 7, "he": [7, 59, 79, 194], "she": [7, 220], "extran": [7, 217], "belittl": 7, "obvious": [7, 37, 45, 170, 184, 191, 211], "easili": [7, 10, 18, 20, 26, 54, 55, 77, 79, 90, 94, 95, 129, 165, 184, 197, 200, 201, 206, 213, 214, 217, 219, 220, 233, 271], "straightforward": [7, 20, 45, 55, 90, 211], "unwelcom": 7, "judgement": 7, "phrase": [7, 11, 55], "friendli": [7, 36, 79, 234], "mistak": [7, 12, 45, 240], "goe": [8, 20, 25, 90, 208, 211, 220, 269, 272], "content": [8, 13, 36, 54, 55, 89, 189, 192, 194, 197, 200, 201, 229, 234, 237, 238, 257, 258, 259, 260, 261, 262, 263, 264, 268, 270], "setup": [8, 36, 54, 120, 121, 122, 128, 136, 177, 194, 197, 199, 200, 211, 232, 233, 235, 245, 276], "depend": [8, 10, 11, 12, 14, 18, 20, 26, 34, 36, 37, 45, 46, 53, 54, 55, 56, 59, 60, 62, 66, 71, 78, 79, 81, 82, 83, 90, 94, 95, 96, 102, 106, 109, 112, 113, 116, 117, 119, 121, 127, 129, 139, 140, 141, 156, 165, 167, 169, 172, 181, 182, 187, 189, 192, 193, 194, 196, 197, 198, 200, 201, 202, 207, 211, 213, 214, 217, 218, 219, 220, 221, 232, 233, 234, 235, 239, 240, 252, 254, 255, 269, 271], "document": [8, 10, 11, 17, 20, 30, 31, 32, 45, 50, 54, 55, 60, 61, 62, 66, 76, 79, 80, 82, 87, 90, 95, 98, 108, 112, 127, 129, 130, 132, 134, 142, 156, 162, 176, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 197, 201, 211, 215, 217, 219, 220, 230, 232, 234, 235, 237, 239, 246, 252, 253, 256, 267, 269, 270, 276, 277], "auto": [8, 12, 34, 54, 55, 82, 187, 194, 197, 201, 213, 217, 221], "rebuild": [8, 11, 20, 54, 197, 272], "live": [8, 27, 37, 134, 196, 214], "server": 8, "debug": [8, 36, 54, 81, 119, 156, 232, 233, 242], "incompat": 8, "pick": [9, 18, 55, 59, 131, 161, 163, 277], "ignor": [10, 12, 14, 20, 36, 45, 54, 55, 59, 60, 64, 69, 79, 84, 90, 94, 104, 110, 119, 164, 167, 177, 187, 197, 201, 202, 213, 219, 220, 233, 277], "regex": 10, "categori": [10, 188, 256, 263], "lead": [10, 11, 18, 19, 20, 24, 53, 54, 60, 64, 81, 84, 90, 94, 106, 113, 151, 177, 185, 189, 192, 194, 196, 197, 198, 201, 208, 210, 213, 217, 220, 234, 237, 242, 270, 277], "against": [10, 18, 20, 24, 55, 97, 117, 233], "unrel": [10, 54, 61, 189, 269], "capabl": [10, 11, 18, 34, 36, 54, 58, 66, 79, 94, 97, 98, 127, 134, 187, 198, 201, 220, 270, 271, 277, 278], "w": [10, 12, 24, 36, 38, 44, 53, 54, 55, 56, 57, 60, 62, 79, 81, 84, 90, 91, 111, 114, 125, 132, 133, 136, 141, 152, 156, 165, 180, 182, 183, 186, 187, 189, 190, 194, 195, 196, 197, 198, 202, 208, 209, 211, 213, 214, 217, 218, 220, 221, 232, 240, 242, 252, 278], "pythonwarn": 10, "NOT": [10, 84, 104, 147, 151, 166, 169, 230, 233], "blog": [10, 20, 36, 59, 85, 214, 220], "post": [10, 18, 23, 36, 48, 54, 201, 202, 213, 232, 272], "ned": 10, "batcheld": 10, "pars": [10, 46, 54, 87, 117, 128, 198, 200, 256, 264], "comprehens": [10, 18, 23, 195, 209, 221, 266], "additional_transl": 10, "recogn": [10, 12, 54, 55, 59, 69, 94, 97, 105, 189, 192, 200, 209, 210, 219, 226, 269], "logic": [10, 11, 18, 20, 29, 30, 31, 32, 35, 54, 56, 79, 81, 94, 159, 161, 162, 166, 201, 203, 209, 217, 221, 239, 269, 270, 271, 273], "node": [10, 11, 34, 48, 54, 81, 96, 100, 110, 143, 168, 177, 186, 191, 201, 208, 220, 225, 236, 258, 272, 276], "suppos": [10, 19, 20, 46, 53, 54, 55, 79, 188, 190, 194, 196, 197, 201, 208, 211, 217, 219, 230, 239, 250, 255, 269, 271, 277], "maximum": [10, 12, 23, 34, 36, 37, 45, 46, 54, 60, 81, 90, 94, 97, 119, 164, 172, 187, 192, 194, 197, 201, 208, 209, 213, 214, 217, 220, 221, 236, 239], "multipli": [10, 12, 28, 32, 36, 45, 54, 65, 69, 76, 83, 85, 90, 94, 112, 121, 130, 131, 132, 144, 153, 167, 172, 173, 188, 189, 190, 192, 194, 196, 197, 201, 203, 210, 211, 214, 217, 222, 239, 249, 269, 272], "max": [10, 36, 45, 46, 54, 61, 62, 64, 81, 90, 94, 96, 97, 187, 196, 197, 201, 208, 210, 211, 240], "min": [10, 46, 50, 54, 59, 61, 90, 96, 187, 196, 201, 207, 217], "is_perfect_squar": 10, "ntheori": [10, 32, 45, 54, 55, 194, 197, 214, 239, 261], "primetest": [10, 54, 94], "is_squar": [10, 54, 85, 94], "is_prim": [10, 18, 54, 188], "isprim": [10, 32, 55, 94], "divid": [10, 11, 45, 53, 54, 55, 70, 90, 94, 171, 172, 189, 191, 192, 194, 196, 197, 201, 217, 236, 272], "bottom_up": 10, "interactive_travers": 10, "postorder_travers": [10, 272], "preorder_travers": [10, 272], "refactor": [10, 217, 225, 236], "tr": [10, 37, 45, 201, 210], "quantum": [10, 106, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 186, 262], "ever": [10, 11, 20, 60, 185, 188, 197, 211, 217, 234, 237, 272], "helper": [10, 34, 36, 45, 49, 52, 54, 79, 82, 83, 152, 154, 163, 198, 208, 211, 214, 217, 218, 220, 233, 264], "default_sort_kei": [10, 35, 43, 225], "matrixel": [10, 36], "matrixsymbol": [10, 15, 18, 32, 33, 36, 54, 85, 87, 90, 201, 221, 223], "layer": [10, 104, 194, 240], "imprecis": 10, "free_symbol": [10, 11, 36, 54, 63, 81, 85, 156, 174, 177, 197, 207, 214], "sinc": [10, 11, 12, 14, 15, 16, 18, 19, 20, 29, 34, 36, 37, 45, 46, 47, 50, 51, 52, 54, 55, 57, 59, 61, 62, 63, 64, 66, 67, 70, 72, 78, 79, 81, 83, 84, 85, 90, 94, 107, 119, 132, 134, 143, 167, 168, 172, 176, 182, 185, 188, 189, 191, 192, 194, 196, 197, 201, 204, 209, 210, 211, 213, 214, 217, 219, 220, 221, 227, 231, 235, 236, 237, 239, 240, 244, 249, 251, 252, 254, 266, 271, 273, 276, 277, 278], "atomicexpr": 10, "concept": [10, 11, 18, 45, 119, 185, 191, 193, 196, 201, 220, 225, 254, 270, 275], "misappli": 10, "noth": [10, 35, 45, 54, 67, 81, 151, 167, 188, 192, 200, 201, 213, 217, 219, 230, 232, 240, 242, 269], "introduc": [10, 19, 50, 53, 54, 62, 79, 90, 95, 98, 117, 119, 124, 125, 126, 130, 167, 172, 185, 192, 193, 197, 198, 201, 208, 211, 214, 221, 237, 270, 273, 275, 277], "21494": 10, "size": [10, 16, 36, 37, 38, 43, 45, 46, 47, 48, 49, 50, 54, 55, 57, 59, 82, 85, 87, 90, 93, 94, 102, 119, 129, 130, 131, 140, 162, 163, 181, 187, 190, 194, 201, 213, 214, 217, 221, 239, 267], "die": [10, 196, 221], "histor": [10, 11, 14, 20, 55, 217, 221], "21563": 10, "revert": [10, 192, 197], "sample_it": [10, 221], "consequ": [10, 20, 32, 54, 189, 191, 269, 277], "subclass": [10, 11, 18, 20, 30, 31, 36, 54, 61, 65, 67, 81, 84, 136, 142, 151, 155, 156, 157, 162, 164, 165, 187, 188, 190, 191, 192, 196, 197, 201, 221, 232, 233, 234, 237, 240, 246, 249, 272], "kei": [10, 11, 12, 14, 29, 32, 35, 43, 45, 46, 54, 55, 56, 59, 70, 83, 85, 90, 93, 94, 97, 116, 117, 127, 159, 162, 167, 185, 187, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 213, 217, 218, 219, 221, 225, 236, 239, 240, 242, 273, 274, 277], "domainmatrix": [10, 86, 90, 193, 196, 199], "switch": [10, 45, 52, 81, 94, 104, 194, 197], "21402": 10, "earlier": [10, 108, 198, 202, 211, 213, 240, 250, 252, 272], "could": [10, 11, 12, 16, 18, 20, 23, 31, 36, 47, 54, 66, 79, 81, 84, 114, 117, 127, 131, 167, 170, 172, 188, 191, 194, 196, 198, 201, 209, 211, 213, 217, 218, 219, 220, 221, 222, 225, 226, 233, 237, 250, 251, 269, 272, 277], "traceback": [10, 12, 15, 18, 19, 20, 23, 24, 29, 30, 31, 36, 37, 46, 54, 55, 58, 64, 81, 84, 85, 86, 87, 88, 90, 92, 93, 96, 104, 186, 188, 191, 192, 194, 197, 200, 208, 209, 217, 219, 220, 230, 232, 233, 235, 237, 239, 240, 242, 269, 273], "typeerror": [10, 12, 19, 20, 23, 29, 30, 31, 46, 54, 64, 69, 84, 86, 88, 92, 104, 141, 208, 209, 233, 240], "unsupport": [10, 12, 15, 104, 201], "operand": [10, 12, 46, 54, 178, 196, 248], "dict": [10, 12, 14, 18, 23, 24, 36, 46, 55, 56, 70, 71, 84, 85, 90, 94, 96, 112, 113, 147, 159, 162, 173, 175, 177, 187, 190, 191, 192, 194, 196, 197, 198, 199, 201, 213, 214, 217, 218, 219, 220, 221, 225, 232, 233, 239, 246, 278], "solve_lin_si": [10, 193], "heurisch": [10, 81], "smith_normal_form": [10, 91, 190], "newmatrix": 10, "holonom": [10, 75, 78, 118, 119, 120, 121, 127, 129, 130, 256, 263], "polymatrix": 10, "risch": [10, 81, 267], "broken": [10, 43, 54, 184, 201, 217, 242], "20780": 10, "20759": 10, "20621": 10, "19882": 10, "18844": 10, "21441": 10, "21427": 10, "21496": 10, "potenti": [10, 18, 66, 87, 90, 94, 112, 113, 114, 116, 126, 127, 178, 183, 191, 196, 201, 208, 211, 213, 217, 235, 236, 248, 253, 254], "impact": 10, "downstream": [10, 18], "goal": [10, 11, 35, 108, 135, 196, 198, 232, 233, 235, 270, 271], "perhap": [10, 14, 36, 54, 84, 94, 152, 191, 219, 234, 266], "tableform": [10, 219, 242], "isn": [10, 20, 81, 108, 117, 220, 271], "advis": [10, 18, 24, 35, 117], "usecas": 10, "unclear": [10, 18, 108], "line2dbaseseri": [10, 187], "coordin": [10, 28, 36, 55, 56, 60, 62, 63, 65, 69, 71, 87, 90, 97, 100, 102, 106, 111, 112, 113, 116, 117, 118, 119, 120, 122, 124, 127, 128, 129, 130, 133, 135, 143, 145, 164, 165, 168, 176, 177, 178, 179, 180, 182, 185, 188, 196, 197, 209, 217, 246, 247, 248, 251, 253, 255, 263], "linecollect": [10, 187], "bokeh": 10, "plotli": 10, "mayavi": 10, "k3d": 10, "matplotlibbackend": [10, 187], "get_point": [10, 187], "uniformli": [10, 16, 45, 70, 71, 97, 102, 187, 235], "adapt": [10, 102, 187, 207, 219, 239, 245], "get_data": [10, 187, 243], "dft": [10, 57, 107], "fourier": [10, 54, 62, 81, 107, 160, 205], "as_explicit": [10, 87, 90, 107, 223], "exp": [10, 11, 12, 14, 18, 20, 24, 28, 34, 36, 44, 53, 54, 56, 58, 59, 61, 62, 72, 73, 76, 79, 81, 85, 87, 90, 94, 106, 143, 146, 162, 168, 186, 191, 192, 197, 198, 201, 203, 208, 211, 213, 217, 218, 219, 220, 221, 222, 239, 255, 267, 271, 273, 278], "discret": [10, 34, 36, 37, 44, 46, 54, 55, 62, 94, 167, 172, 203, 206, 217, 219, 220, 257, 266], "transform": [10, 11, 24, 28, 33, 36, 50, 53, 54, 55, 56, 58, 59, 62, 69, 80, 87, 90, 102, 104, 119, 139, 160, 162, 164, 169, 189, 192, 194, 196, 197, 203, 208, 209, 210, 213, 214, 217, 218, 219, 220, 221, 226, 234, 240, 246, 252, 253, 257, 264, 271], "unevalu": [10, 11, 18, 19, 20, 30, 31, 34, 46, 53, 54, 60, 62, 71, 81, 94, 104, 144, 148, 155, 156, 167, 197, 200, 208, 209, 213, 217, 219, 220, 221, 267, 271, 272, 278], "represent": [10, 11, 20, 23, 28, 35, 36, 37, 45, 48, 54, 55, 60, 62, 66, 74, 76, 78, 79, 81, 83, 84, 85, 86, 87, 93, 94, 101, 102, 107, 108, 109, 116, 127, 131, 132, 136, 156, 161, 162, 164, 165, 167, 169, 176, 181, 182, 184, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 211, 213, 214, 217, 220, 221, 226, 227, 242, 246, 248, 255, 267, 269, 272], "21626": 10, "expos": [10, 35, 221], "mutat": [10, 104, 190, 192, 221], "flat": [10, 68, 85, 233], "todok": [10, 85], "ey": [10, 85, 86, 87, 88, 89, 90, 92, 190, 196, 222, 242, 273], "converg": [10, 36, 53, 58, 62, 80, 81, 94, 136, 197, 204, 208, 211, 267], "legacy_matrix": [10, 81], "discontinu": [10, 34, 58, 60, 62, 81, 97, 204, 219], "theano_cod": 10, "aesara_cod": [10, 201], "theanoprint": 10, "aesaraprint": [10, 201], "predic": [10, 11, 29, 30, 34, 96, 197, 213, 239, 257], "experienc": [10, 37], "big": [10, 12, 16, 18, 38, 54, 56, 94, 134, 147, 186, 200, 201, 208, 242, 267, 269], "registr": 10, "add_handl": 10, "remove_handl": [10, 29], "multipledispatch": [10, 29], "regist": [10, 29, 30, 31, 55, 163], "register_mani": [10, 30, 31], "askprimehandl": 10, "staticmethod": [10, 232], "register_handl": [10, 29], "prime": [10, 18, 29, 30, 31, 45, 52, 53, 54, 55, 57, 59, 62, 94, 138, 188, 189, 191, 192, 193, 194, 197, 211, 213, 214, 221, 236], "Not": [10, 11, 19, 20, 54, 59, 84, 104, 201, 220, 221, 239, 271, 278], "primepred": [10, 32], "q": [10, 11, 12, 15, 18, 27, 28, 29, 30, 31, 32, 33, 36, 46, 50, 53, 54, 55, 62, 71, 76, 77, 79, 81, 83, 85, 90, 96, 97, 104, 105, 111, 112, 113, 116, 117, 119, 121, 126, 129, 130, 131, 134, 135, 136, 147, 161, 167, 170, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 191, 192, 194, 196, 197, 198, 200, 201, 203, 211, 214, 217, 219, 221, 226, 227, 242, 246, 248, 249, 251, 254, 261, 273, 277], "20209": 10, "stochast": 10, "timestamp": 10, "wienerprocess": [10, 221], "normaldistribut": [10, 221], "20078": 10, "misspel": 10, "absorbing_prob": [10, 221], "absorb": [10, 11, 79, 217, 221, 267], "probabilit": [10, 221], "shutil": 10, "power": [10, 12, 28, 33, 36, 44, 45, 46, 55, 57, 58, 60, 76, 77, 79, 81, 83, 85, 87, 94, 95, 104, 117, 134, 139, 150, 153, 166, 169, 172, 173, 177, 188, 189, 191, 192, 193, 194, 196, 197, 200, 201, 202, 205, 208, 210, 212, 214, 217, 219, 220, 221, 225, 234, 239, 257, 259, 266, 267, 268, 269, 270, 272, 273, 276], "immut": [10, 11, 54, 86, 89, 92, 185, 192, 217, 222, 260, 266, 273], "coordsystem": [10, 56], "explicit": [10, 11, 18, 20, 23, 46, 53, 54, 58, 70, 71, 81, 93, 94, 116, 117, 121, 131, 135, 185, 188, 197, 200, 201, 203, 209, 211, 217, 218, 219, 220, 224, 236], "appropi": 10, "patch": [10, 56, 201], "real": [10, 11, 12, 15, 16, 18, 19, 20, 23, 28, 30, 31, 33, 34, 36, 46, 54, 55, 56, 58, 59, 60, 61, 62, 66, 70, 71, 76, 79, 81, 84, 85, 87, 90, 94, 96, 100, 106, 117, 134, 136, 139, 140, 147, 165, 179, 186, 189, 192, 193, 196, 197, 198, 201, 202, 204, 208, 211, 213, 216, 217, 219, 220, 221, 226, 230, 234, 243, 271, 277, 278], "similarli": [10, 18, 50, 54, 55, 62, 66, 90, 97, 98, 104, 112, 132, 187, 188, 191, 196, 198, 208, 209, 211, 217, 232, 240, 250, 251, 273], "manifold": [10, 56], "track": [10, 12, 45, 54, 58, 62, 116, 128, 132, 151, 185, 208, 227, 267], "coord_system": 10, "connect_to": 10, "coord_tuple_transform_to": [10, 56], "constructor": [10, 11, 20, 30, 31, 35, 36, 41, 45, 46, 47, 54, 61, 62, 83, 88, 90, 121, 160, 161, 165, 169, 187, 188, 190, 191, 192, 193, 201, 209, 217, 226, 234, 249, 268, 272], "str": [10, 11, 20, 30, 35, 36, 37, 46, 54, 55, 56, 58, 63, 64, 67, 70, 71, 82, 84, 87, 94, 96, 102, 111, 112, 114, 134, 151, 161, 167, 177, 179, 180, 187, 192, 196, 201, 213, 217, 221, 237, 239, 240, 242, 246], "unord": [10, 12, 54, 94, 192, 220, 239, 240], "lambidfi": 10, "guess": [10, 14, 35, 55, 58, 79, 82, 181, 194, 197, 211, 214, 272], "construct": [10, 16, 30, 31, 35, 36, 41, 54, 56, 60, 62, 64, 68, 70, 82, 87, 90, 95, 98, 108, 109, 112, 114, 117, 119, 152, 156, 165, 166, 169, 173, 188, 191, 192, 194, 196, 197, 201, 214, 219, 221, 222, 224, 226, 234, 236, 237, 249, 251, 252, 269, 272, 273, 277], "superclass": [10, 11, 18, 53, 54, 81, 87, 192], "scalar": [10, 28, 54, 56, 69, 83, 85, 87, 90, 95, 114, 117, 166, 177, 178, 179, 183, 185, 188, 190, 194, 201, 217, 222, 234, 240, 246, 247, 248, 249, 250, 251, 253, 255], "boolean": [10, 11, 20, 21, 29, 30, 31, 32, 33, 34, 36, 54, 60, 64, 68, 69, 70, 71, 82, 85, 90, 91, 94, 97, 102, 104, 152, 177, 179, 181, 187, 190, 192, 194, 196, 198, 201, 213, 217, 219, 221, 239, 248, 259, 273], "sens": [10, 11, 16, 18, 20, 28, 32, 34, 35, 54, 56, 59, 62, 79, 84, 112, 119, 172, 177, 185, 188, 194, 196, 210, 211, 213, 220, 221, 233, 234, 239, 254, 277], "exponenti": [10, 12, 18, 28, 36, 45, 50, 54, 55, 59, 61, 81, 84, 85, 90, 94, 96, 153, 169, 198, 213, 220, 221, 268, 269, 273], "trick": [10, 11, 12, 50, 211, 227], "treat": [10, 11, 18, 19, 20, 44, 45, 52, 54, 59, 62, 69, 70, 90, 96, 114, 117, 140, 177, 182, 189, 191, 192, 194, 196, 197, 198, 200, 201, 208, 209, 211, 213, 214, 217, 219, 225, 233, 236, 252, 269, 273], "cdot": [10, 18, 37, 53, 59, 62, 72, 76, 77, 79, 85, 87, 90, 94, 105, 107, 132, 172, 182, 184, 185, 186, 188, 189, 197, 204, 208, 211, 217, 219, 222, 223, 251, 252, 271, 272, 277], "attributeerror": [10, 18, 54, 90, 220, 240, 273], "as_coeff_mul": [10, 54, 79, 87], "tri": [10, 11, 12, 18, 23, 35, 54, 62, 70, 79, 81, 119, 131, 162, 188, 189, 196, 201, 203, 213, 217, 218, 220, 232, 269, 277], "benchmark": [10, 119, 133], "runtest": [10, 232], "tmpfile": 10, "random_complex_numb": 10, "verify_numer": 10, "test_derivative_numer": 10, "_randrang": [10, 55], "_randint": [10, 194], "as_poli": [10, 54, 189, 197], "as_expr": [10, 54, 90, 191, 196, 197, 198, 273], "combintor": 10, "perm_cycl": [10, 46, 201], "printer": [10, 11, 20, 46, 54, 62, 82, 90, 95, 181, 226, 233, 234, 240, 258, 264, 268, 272], "init_print": [10, 26, 36, 46, 58, 81, 82, 90, 98, 181, 188, 189, 200, 267, 271, 273, 276, 277, 278], "problemat": [10, 20, 191], "affect": [10, 18, 20, 53, 54, 90, 176, 197, 219, 220, 250], "18056": 10, "15416": 10, "100x": 10, "slowdown": [10, 58], "significantli": [10, 36, 58, 108, 129, 192, 203, 233, 236], "slower": [10, 20, 50, 90, 191, 196, 240, 266], "_sympifi": [10, 54, 87, 272], "strict": [10, 11, 45, 46, 54, 58, 59, 85, 90, 194, 197, 219, 220, 239, 242, 277], "lot": [10, 45, 54, 72, 79, 81, 90, 117, 134, 187, 200, 204, 214, 220, 232, 277], "secur": 10, "whatev": [10, 12, 20, 45, 54, 55, 213, 217, 218, 220, 240], "__repr__": [10, 201], "12524": 10, "repr": [10, 36, 81, 161, 191, 196, 201, 232, 276], "plenti": 10, "_sympy_": [10, 54], "disabl": [10, 11, 54, 55, 79, 81, 94, 194, 197, 201, 209, 217, 219, 230, 232, 235, 239], "constant": [10, 11, 34, 36, 53, 54, 58, 60, 62, 78, 79, 81, 97, 98, 104, 116, 117, 119, 134, 135, 144, 148, 154, 170, 171, 173, 174, 175, 178, 180, 182, 187, 189, 192, 194, 196, 197, 198, 201, 203, 208, 211, 213, 214, 217, 218, 219, 220, 221, 232, 234, 239, 240, 248, 252, 255, 267, 273, 278], "lh": [10, 14, 36, 44, 54, 199, 201, 217, 219, 220, 251], "tensexpr": [10, 105, 227], "substitute_indic": 10, "danger": [10, 189], "tensor_head": [10, 105, 227], "had": [10, 20, 23, 46, 54, 55, 90, 94, 117, 131, 196, 197, 198, 201, 209, 211, 217, 219, 220, 235, 240, 266, 269, 272, 273], "shorter": [10, 24, 54, 64, 108, 129, 176, 188, 192, 201, 234, 242], "creation": [10, 12, 20, 54, 56, 90, 109, 114, 124, 127, 128, 129, 130, 131, 141, 151, 155, 156, 157, 167, 184, 185, 201, 221, 226, 234, 240], "_dummy_fmt": 10, "l_": [10, 81, 90], "obsolet": 10, "dummy_nam": [10, 227], "clearer": [10, 249], "metric_symmetri": [10, 227], "set_metr": [10, 227], "delta": [10, 12, 36, 38, 48, 59, 62, 77, 79, 83, 102, 131, 139, 167, 201, 208, 214, 217, 221, 222, 227], "epsilon": [10, 12, 53, 55, 62, 79, 81, 138, 201, 227], "latter": [10, 15, 20, 36, 45, 54, 59, 62, 79, 94, 188, 192, 196, 201, 211, 214, 227, 234, 239, 240, 269], "involv": [10, 12, 16, 18, 23, 31, 33, 45, 53, 54, 55, 59, 66, 67, 79, 81, 94, 104, 109, 112, 117, 146, 156, 162, 164, 174, 184, 185, 188, 189, 192, 194, 196, 197, 198, 202, 203, 208, 209, 210, 211, 213, 214, 217, 219, 222, 240, 277], "obscur": [10, 18], "young": [10, 97, 227], "tableau": 10, "favor": 10, "tensorindex": [10, 227], "tensor_indic": [10, 105, 227], "denot": [10, 11, 12, 16, 45, 46, 54, 56, 62, 76, 77, 79, 81, 83, 84, 85, 90, 94, 96, 104, 172, 177, 182, 187, 188, 189, 194, 196, 204, 208, 209, 211, 217, 221, 226, 227, 246, 247, 249, 250, 252, 254], "set_dimens": 10, "unit_system": [10, 174], "set_quantity_dimens": [10, 170], "set_global_dimens": 10, "set_scale_factor": 10, "set_quantity_scale_factor": [10, 170], "set_global_relative_scale_factor": [10, 174], "get_dimensional_expr": 10, "unitsystem": [10, 175], "dimension": [10, 34, 36, 38, 56, 66, 67, 68, 69, 70, 87, 90, 98, 105, 134, 141, 143, 153, 169, 171, 182, 183, 187, 188, 194, 196, 197, 200, 201, 219, 220, 222, 223, 227, 233, 254, 278], "_collect_factor_and_dimens": 10, "motiv": [10, 13, 20, 25, 197], "emptyset": [10, 18, 23, 34, 35, 84, 201, 220, 246, 278], "is_empti": [10, 18, 46], "unknown": [10, 11, 15, 18, 19, 20, 28, 54, 55, 98, 152, 199, 216, 217, 218, 219, 220, 239, 278], "empti": [10, 11, 18, 23, 30, 34, 35, 36, 37, 45, 49, 53, 54, 66, 69, 70, 71, 84, 85, 90, 94, 112, 131, 162, 175, 192, 196, 197, 201, 207, 208, 209, 211, 217, 219, 220, 232, 234, 239, 242, 272], "individu": [10, 18, 20, 54, 60, 65, 70, 71, 83, 85, 87, 90, 104, 132, 139, 157, 161, 186, 209, 217, 232, 273], "denest": [10, 54, 197, 212, 219, 239], "particl": [10, 109, 111, 112, 117, 121, 122, 127, 129, 131, 134, 135, 143, 146, 153, 154, 165, 167, 170, 172, 184, 227], "rigidbodi": [10, 109, 112, 116, 119, 124, 125, 126, 127, 132, 134], "potential_energi": [10, 111, 112, 126, 127, 132], "energi": [10, 106, 109, 112, 114, 117, 126, 127, 143, 168, 172, 182, 227, 252, 262], "setter": [10, 117, 134], "getter": [10, 54, 117, 134], "set_": 10, "set_condit": 10, "17749": 10, "side": [10, 12, 16, 18, 23, 36, 45, 46, 54, 66, 70, 81, 90, 94, 97, 104, 112, 116, 131, 132, 135, 155, 156, 172, 177, 186, 188, 194, 196, 199, 201, 218, 220, 221, 225, 232, 234, 255, 267], "unpack": [10, 54, 85, 90, 239, 240], "intermedi": [10, 11, 36, 37, 77, 85, 117, 119, 124, 151, 161, 169, 170, 177, 180, 184, 220, 234, 274], "emul": [10, 213, 220, 222, 240], "is_deriv": [10, 54], "as_finite_differ": [10, 34, 54, 267], "17881": 10, "get_matrix": [10, 227], "__getitem__": [10, 54, 85, 226], "__iter__": [10, 46, 54, 213], "_components_data_full_destroi": 10, "__pow__": [10, 85, 192, 198], "flaw": 10, "replace_with_arrai": [10, 227, 228], "cach": [10, 18, 59, 79, 188, 197, 201, 230, 235, 236, 257], "safe": [10, 54, 94, 191, 197, 219, 225, 267], "squar": [10, 12, 18, 23, 24, 28, 31, 36, 45, 54, 55, 60, 70, 71, 79, 81, 85, 86, 90, 93, 94, 97, 104, 106, 129, 130, 153, 169, 177, 186, 190, 192, 193, 194, 196, 197, 198, 201, 209, 212, 214, 217, 220, 221, 271], "jordan": [10, 79, 85, 90, 199, 219, 220], "band": [10, 85, 93], "eigenvalu": [10, 85, 90, 117, 119, 161, 164, 271], "elif": [10, 18, 19, 20, 60], "inspect": [10, 18, 90, 196, 207, 238, 240, 264], "getsourc": [10, 240, 244], "sum": [10, 16, 18, 36, 43, 46, 53, 54, 57, 59, 62, 67, 69, 77, 79, 81, 83, 84, 85, 87, 90, 94, 100, 114, 129, 146, 150, 153, 161, 164, 166, 167, 186, 188, 189, 191, 192, 196, 197, 198, 201, 203, 204, 206, 208, 210, 211, 213, 214, 217, 219, 220, 221, 222, 223, 225, 227, 236, 239, 257, 277], "meter": [10, 97, 98, 138, 141, 170, 172, 173, 174], "si": [10, 20, 62, 78, 79, 140, 169, 170, 172, 173, 174, 201], "cg": [10, 146, 164], "aris": [10, 18, 19, 54, 59, 79, 81, 164, 185, 191, 196], "scale": [10, 63, 64, 65, 69, 70, 71, 82, 97, 147, 168, 170, 172, 174, 175, 181, 185, 187, 197, 204, 221, 252, 254], "kilomet": [10, 173, 174], "1000": [10, 12, 36, 38, 54, 55, 58, 87, 94, 134, 172, 173, 174, 186, 200, 201, 210], "dimensionsystem": [10, 169], "14318": 10, "duplic": [10, 12, 45, 48, 55, 60, 62, 90, 94, 209, 217, 239, 270], "flatten": [10, 35, 54, 191, 223, 228, 239, 240], "neither": [10, 18, 19, 32, 54, 141, 162, 187, 197, 208, 209, 210, 217, 227, 240, 246, 254, 277], "polymorph": 10, "anymor": [10, 187], "temporarili": [10, 54], "point3d": [10, 67, 68, 69, 140], "p1": [10, 37, 45, 46, 50, 53, 64, 66, 67, 68, 69, 70, 104, 109, 111, 121, 134, 136, 180, 187, 191, 192, 194, 198, 210, 221, 222], "p2": [10, 19, 45, 46, 53, 64, 66, 67, 68, 69, 70, 104, 109, 111, 134, 180, 187, 191, 192, 194, 198, 210, 221], "conflict": [10, 60, 94, 104, 117, 234], "throughout": [11, 79, 84, 194, 204, 220, 269], "elsewher": [11, 18, 59, 83, 119, 190, 232], "termnam": 11, "antideriv": [11, 60, 62, 81, 217, 267], "frac": [11, 16, 18, 20, 34, 53, 54, 55, 56, 59, 61, 62, 79, 81, 90, 94, 96, 104, 121, 132, 170, 181, 182, 184, 185, 186, 190, 194, 197, 201, 203, 204, 208, 211, 214, 217, 218, 220, 221, 222, 239, 252, 254, 267, 271, 272, 276, 277], "indefinit": [11, 28, 60, 78, 79, 81, 90, 192, 194, 195, 197, 206, 267], "integr": [11, 12, 15, 22, 26, 28, 34, 46, 53, 54, 56, 59, 60, 61, 72, 73, 74, 77, 83, 85, 90, 93, 94, 104, 106, 112, 117, 127, 134, 153, 162, 165, 168, 171, 176, 178, 182, 186, 188, 191, 192, 193, 194, 197, 198, 201, 203, 204, 211, 217, 218, 221, 234, 242, 246, 248, 249, 252, 253, 257, 268, 271, 276], "primit": [11, 45, 54, 55, 62, 94, 161, 165, 188, 189, 191, 192, 194, 196, 197, 200, 201, 214, 267], "terminologi": [11, 22, 227], "tupl": [11, 20, 28, 30, 31, 34, 35, 36, 37, 45, 46, 53, 55, 56, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 76, 79, 81, 85, 90, 93, 94, 96, 97, 98, 102, 109, 111, 112, 114, 116, 129, 130, 132, 134, 136, 151, 152, 153, 156, 161, 164, 165, 166, 167, 177, 180, 185, 187, 188, 190, 191, 192, 193, 194, 198, 199, 201, 202, 203, 207, 209, 213, 214, 217, 218, 219, 220, 221, 222, 226, 227, 232, 233, 234, 235, 239, 240, 242, 246, 249, 267, 272, 273, 276], "subexpress": [11, 20, 36, 54, 60, 85, 108, 110, 196, 197, 201, 208, 212, 220, 234, 240, 257, 266], "togeth": [11, 12, 16, 36, 45, 54, 58, 83, 90, 94, 127, 153, 164, 172, 185, 188, 192, 194, 196, 197, 200, 201, 213, 217, 219, 221, 232, 233, 239, 271, 277], "walk": [11, 36, 38, 159, 162, 211], "extract": [11, 23, 24, 34, 54, 81, 85, 87, 90, 94, 105, 119, 127, 176, 185, 194, 196, 197, 219, 220, 221, 232, 234, 239], "rebuilt": [11, 272], "atom": [11, 36, 46, 81, 84, 85, 106, 168, 191, 198, 201, 219, 220, 226], "queri": [11, 18, 19, 20, 29, 32, 33, 34, 36, 54, 66, 197, 213, 221, 257], "is_real": [11, 18, 20, 23, 54, 56, 60, 61, 90, 179, 201, 226], "restrict": [11, 18, 20, 36, 43, 54, 55, 62, 90, 97, 98, 167, 188, 191, 196, 198, 216], "never": [11, 18, 20, 54, 60, 81, 169, 197, 198, 201, 209, 219, 221, 230, 249, 269, 270], "is_": [11, 20, 54], "leav": [11, 18, 20, 36, 54, 81, 90, 94, 113, 127, 151, 167, 208, 236, 266, 272, 277], "recurs": [11, 12, 15, 18, 20, 34, 54, 59, 79, 81, 84, 85, 94, 119, 187, 194, 197, 198, 201, 202, 205, 206, 208, 213, 219, 220, 225, 230, 232, 236, 237, 239, 268, 277], "canonic": [11, 41, 54, 210, 227], "excess": 11, "discourag": [11, 18, 54, 213], "expens": [11, 20, 54, 131, 210, 217, 218, 219, 235, 273], "matrix": [11, 15, 16, 18, 22, 28, 31, 36, 43, 46, 54, 55, 56, 62, 69, 79, 81, 83, 85, 88, 89, 92, 93, 95, 96, 104, 105, 107, 109, 111, 112, 113, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 134, 135, 136, 139, 140, 142, 150, 151, 156, 161, 162, 164, 166, 167, 169, 172, 176, 177, 185, 186, 188, 190, 194, 196, 199, 201, 202, 209, 211, 213, 214, 219, 220, 222, 223, 225, 226, 227, 228, 233, 234, 239, 240, 242, 246, 247, 248, 250, 254, 260, 268, 271, 272, 277, 278], "sympifi": [11, 12, 18, 19, 36, 58, 64, 84, 132, 140, 165, 167, 177, 178, 191, 192, 257, 266, 272], "bound": [11, 32, 36, 37, 53, 54, 63, 64, 65, 67, 69, 70, 81, 94, 165, 192, 194, 196, 197, 201, 207, 217, 219, 220, 221, 226, 236, 242, 246], "dummi": [11, 36, 50, 53, 60, 79, 81, 90, 117, 134, 162, 167, 191, 192, 196, 197, 198, 207, 208, 209, 211, 213, 217, 220, 225, 227, 230, 234, 239, 240], "ration": [11, 18, 20, 29, 31, 34, 36, 53, 58, 59, 60, 62, 64, 67, 69, 71, 75, 79, 81, 82, 87, 90, 94, 96, 104, 136, 169, 186, 189, 193, 194, 195, 196, 198, 201, 205, 206, 210, 211, 213, 214, 215, 216, 219, 220, 221, 239, 246, 268, 269, 272, 276], "unequ": [11, 12, 14, 97, 201], "accident": 11, "clash": [11, 27, 54, 90], "contrast": [11, 20, 53, 54, 121, 191, 211, 217, 271], "_eval_": 11, "_eval_deriv": [11, 20, 54, 62], "overrid": [11, 12, 36, 54, 63, 64, 70, 96, 165, 201, 226, 233, 234, 239, 240], "pre": [11, 35, 36, 54, 186, 187, 202, 210, 213, 219, 220, 232, 250, 254, 272], "dispatch": [11, 30, 31, 32, 54, 55, 162, 201, 220, 236], "shorthand": [11, 12, 18, 20, 54, 84, 161, 196, 209, 230], "stand": [11, 53, 54, 134, 189, 191, 192, 198], "reserv": [11, 18, 117, 227, 234, 273], "smaller": [11, 36, 45, 46, 54, 55, 59, 62, 70, 81, 87, 94, 129, 189, 191, 194, 197, 204, 210, 211, 219, 239, 266, 277], "children": [11, 54, 55, 191, 236], "leaf": [11, 191, 201, 210, 272], "strictli": [11, 12, 15, 17, 18, 32, 34, 54, 62, 90, 94, 104, 194, 213, 219], "dag": 11, "map": [11, 18, 20, 34, 35, 36, 44, 45, 46, 54, 55, 66, 70, 77, 79, 81, 84, 85, 94, 102, 112, 121, 145, 156, 157, 162, 177, 185, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 208, 213, 217, 218, 219, 220, 221, 225, 226, 233, 236, 239, 240, 242, 246], "colloqui": [11, 22], "lambda": [11, 12, 20, 30, 31, 34, 36, 45, 46, 55, 56, 60, 81, 85, 86, 87, 90, 93, 94, 96, 117, 130, 131, 134, 135, 152, 187, 194, 196, 197, 201, 202, 209, 210, 213, 217, 219, 220, 221, 222, 230, 239, 240, 246, 247, 250, 266, 273], "hyper": [11, 54, 59, 62, 73, 76, 201, 203, 211, 213, 219, 221, 277], "primepi": [11, 20, 94], "divisor_sigma": [11, 94], "undefin": [11, 20, 23, 30, 31, 34, 54, 60, 61, 62, 81, 87, 96, 109, 185, 196, 207, 208, 211, 240, 267, 278], "interchang": [11, 50, 53, 79, 217], "memori": [11, 36, 54, 94, 197, 222, 233, 236], "maintain": [11, 12, 54, 55, 94, 98, 201, 209, 210, 217, 220, 236], "mental": 11, "hidden": [11, 176], "state": [11, 16, 18, 45, 52, 54, 62, 94, 97, 104, 106, 111, 112, 113, 116, 119, 121, 135, 139, 143, 144, 146, 147, 148, 150, 151, 152, 156, 159, 161, 162, 163, 164, 166, 167, 197, 201, 210, 211, 213, 221, 236, 262, 273], "hashabl": [11, 51, 79, 239], "repl": [11, 227], "execut": [11, 18, 26, 36, 82, 85, 134, 187, 201, 217, 220, 230, 232, 234, 235, 240, 242, 245, 256, 271, 276], "idiom": [11, 243, 269, 270], "anti": [11, 28, 32, 50, 60, 81, 85, 139, 144, 227], "frown": 11, "upon": [11, 18, 36, 54, 94, 116, 119, 129, 130, 131, 134, 161, 167, 182, 184, 185, 209, 217, 226, 233, 252, 277], "lowercas": [11, 12, 217, 232, 267], "is_integ": [11, 18, 20, 54, 179, 201, 226], "capit": [11, 53, 55, 104, 217], "wherea": [11, 16, 18, 32, 36, 55, 64, 70, 79, 84, 104, 172, 188, 191, 197, 201, 219, 220, 239, 277], "is_capit": 11, "unneed": 11, "achiev": [11, 12, 20, 54, 58, 62, 87, 94, 117, 134, 200, 208, 211, 213, 220, 235, 250], "isinst": [11, 15, 18, 20, 36, 54, 85, 87, 104, 191, 192, 201, 202, 213, 222, 225, 234, 272], "ship": [11, 95], "session": [11, 27, 36, 54, 66, 81, 181, 185, 191, 237, 264, 269, 276], "sort": [11, 30, 31, 35, 36, 43, 46, 50, 79, 81, 84, 90, 93, 94, 105, 108, 112, 151, 167, 172, 176, 187, 194, 197, 198, 208, 213, 214, 217, 218, 219, 225, 227, 232, 234, 239, 249, 257, 269, 271, 272], "numberkind": [11, 15, 85, 209], "matrixkind": [11, 15, 54, 89, 209], "booleankind": 11, "ring": [11, 57, 77, 90, 91, 184, 189, 190, 193, 194, 196, 197, 198, 199, 200, 201, 239], "classif": [11, 17, 54, 217, 218], "lamda": [11, 87, 201, 209, 221, 273], "\u03bb": [11, 273], "lambdifi": [11, 20, 36, 62, 119, 201, 219, 233, 238, 257, 264, 268], "matrixexpr": [11, 20, 85, 87, 88], "mutabl": [11, 12, 37, 54, 86, 87, 88, 97, 192, 201, 202, 213, 222, 273], "dens": [11, 85, 87, 89, 90, 190, 193, 196, 197, 222, 260, 272], "underli": [11, 36, 46, 52, 54, 83, 90, 102, 117, 162, 175, 219, 220, 221], "quit": [11, 16, 20, 62, 90, 94, 119, 184, 187, 198, 200, 211, 219, 239, 254, 269, 272], "rung": [11, 34, 76], "kutta": [11, 76], "condit": [11, 18, 19, 36, 45, 54, 56, 60, 62, 72, 73, 76, 77, 78, 80, 81, 84, 90, 94, 96, 97, 98, 100, 104, 110, 113, 119, 127, 131, 134, 136, 180, 186, 198, 201, 204, 211, 214, 216, 217, 219, 220, 221, 226, 259, 277], "loss": [11, 36, 79, 167, 233, 251], "stabil": [11, 45, 50, 52, 58, 104, 131, 225], "focus": [11, 194], "is_numb": [11, 18, 54, 62, 81], "infin": [11, 18, 32, 53, 59, 60, 62, 67, 79, 81, 90, 140, 192, 194, 197, 201, 206, 207, 208, 209, 213, 216, 217, 221], "resembl": [11, 56, 62, 81, 226], "zoo": [11, 14, 18, 32, 54, 59, 60, 62, 81, 208, 210, 213], "data": [11, 16, 36, 45, 54, 55, 62, 81, 90, 95, 102, 112, 146, 187, 188, 191, 192, 194, 197, 198, 201, 213, 226, 227, 232, 234, 236, 239, 243], "effici": [11, 16, 18, 34, 36, 38, 45, 50, 54, 57, 58, 59, 70, 71, 87, 90, 94, 95, 104, 112, 134, 186, 189, 190, 191, 192, 194, 197, 198, 199, 200, 213, 214, 219, 233, 240, 266, 272, 273, 277], "act": [11, 35, 44, 45, 46, 50, 54, 62, 70, 83, 84, 90, 97, 100, 109, 111, 116, 117, 122, 130, 139, 151, 156, 159, 160, 209, 220, 222, 250, 254, 266], "pprint": [11, 12, 20, 23, 34, 35, 56, 62, 81, 90, 94, 104, 139, 186, 201, 202, 209, 213, 217, 218, 220, 221, 239, 276], "inequ": [11, 18, 19, 20, 22, 54, 187, 194, 209, 211, 215], "neq": [11, 20, 54, 60, 62, 79, 81, 85, 172, 185, 186, 194, 197, 214, 217, 219, 277], "ne": [11, 14, 18, 55, 59, 60, 67, 79, 94, 189, 191, 194, 211, 217, 221], "hold": [11, 12, 20, 31, 35, 45, 50, 54, 55, 56, 60, 62, 76, 79, 90, 93, 96, 104, 106, 111, 113, 114, 132, 163, 197, 211, 213, 217, 221, 234, 277], "singleton": [11, 46, 84, 205, 220, 257, 259, 272], "gotcha": [11, 13, 54, 127, 185, 240, 270, 278], "somehow": [11, 20], "simpler": [11, 19, 20, 54, 58, 62, 78, 79, 124, 185, 194, 210, 211, 213, 217, 219, 220, 277], "adject": [11, 221], "heurist": [11, 18, 46, 79, 81, 85, 194, 195, 208, 210, 213, 215, 219, 220, 232, 267, 277], "appar": [11, 12, 54, 242, 277], "commut": [11, 18, 28, 31, 35, 45, 46, 50, 54, 56, 77, 81, 90, 144, 151, 154, 155, 156, 166, 167, 172, 179, 185, 189, 192, 193, 194, 195, 197, 201, 208, 209, 211, 217, 227, 272], "law": [11, 35, 127, 170, 185, 189], "child": [11, 111, 128, 191, 236], "xreplac": [11, 54, 85, 90, 177], "knowledg": [11, 53, 54, 55, 196, 217, 272, 275], "round": [11, 20, 34, 36, 54, 58, 59, 60, 90, 140, 196, 197, 208, 210, 221], "analyt": [11, 26, 59, 62, 79, 90, 127, 217, 262, 267], "implicitli": [11, 18, 19, 20, 46, 54, 81, 188, 191, 219], "independ": [11, 12, 20, 32, 34, 36, 45, 53, 54, 56, 62, 71, 79, 81, 83, 90, 104, 112, 113, 117, 119, 121, 129, 131, 165, 172, 182, 187, 189, 191, 196, 197, 203, 204, 211, 213, 214, 217, 218, 219, 220, 221, 227, 232, 233, 252, 271, 272], "nativ": [11, 54, 104, 192, 197, 232], "parsabl": 11, "iter": [11, 23, 24, 34, 36, 43, 45, 46, 49, 50, 54, 55, 56, 57, 59, 62, 70, 84, 94, 109, 110, 111, 112, 113, 116, 131, 135, 152, 167, 180, 187, 188, 189, 190, 192, 194, 197, 201, 202, 203, 204, 207, 213, 214, 217, 219, 220, 221, 222, 225, 233, 234, 235, 236, 238, 240, 246, 250, 264], "fuzzi": [11, 18, 20, 21], "noncomput": 11, "philosoph": 11, "OR": [11, 34, 57, 84, 194], "One": [11, 12, 15, 18, 20, 34, 35, 36, 44, 46, 53, 59, 60, 62, 73, 76, 78, 79, 81, 84, 90, 94, 97, 98, 117, 132, 134, 143, 172, 192, 194, 195, 197, 200, 203, 209, 213, 219, 220, 221, 222, 227, 240, 252, 266, 267, 269, 272, 273, 277], "care": [11, 12, 19, 20, 45, 54, 62, 81, 90, 97, 108, 117, 131, 177, 185, 191, 196, 213, 214, 217, 219, 220, 225, 228, 233, 266, 269, 271], "falsi": 11, "is_posit": [11, 18, 19, 20, 54, 179, 192], "unevaluatedexpr": [11, 201, 272], "surpris": [11, 18, 220], "north": 11, "riemann": [11, 56, 59, 60, 61, 79, 188, 213, 227], "sphere": [11, 139, 246, 255], "behav": [12, 32, 34, 54, 55, 60, 62, 94, 197, 209, 213, 219, 222, 228, 273], "mapl": [12, 81, 217, 264, 271], "mathematica": [12, 36, 46, 96, 264, 271, 273], "faq": 12, "introductori": [12, 16, 25, 26, 134, 191, 192, 197], "remaind": [12, 53, 54, 55, 94, 189, 191, 192, 195, 197, 217], "familiar": [12, 20, 81, 117, 132, 151, 198, 267, 269, 275], "java": 12, "minut": [12, 108, 119, 176], "subtract": [12, 23, 36, 46, 54, 58, 69, 94, 104, 111, 169, 189, 190, 191, 192, 194, 196, 197, 272, 277], "proper": [12, 45, 54, 81, 94, 108, 117, 176, 191, 192, 196, 201, 209, 217, 222, 233, 234, 252, 273], "trigsimp": [12, 28, 54, 90, 111, 117, 125, 177, 210, 249], "fill": [12, 17, 45, 55, 85, 87, 90, 93, 167, 187, 232, 235, 239, 242, 273], "alter": [12, 37, 45, 54, 177, 191, 201, 203, 220], "afterward": [12, 36, 54, 114, 121], "quantiti": [12, 46, 54, 59, 62, 66, 71, 98, 108, 112, 125, 132, 146, 169, 171, 175, 182, 184, 185, 196, 213, 221, 249, 253, 254, 262], "simultan": [12, 54, 60, 67, 85, 94, 187, 210], "var": [12, 34, 36, 53, 58, 59, 77, 81, 84, 90, 104, 177, 187, 196, 200, 201, 213, 214, 240, 278], "rate": [12, 119, 184, 221, 252, 267], "short_lif": 12, "haven": 12, "160": [12, 97, 195], "bodi": [12, 36, 79, 96, 107, 108, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 127, 128, 129, 134, 135, 170, 176, 177, 180, 184, 185, 246, 247, 253], "ctimesd": 12, "circular": [12, 18, 102, 139, 194], "relationship": [12, 14, 18, 36, 54, 59, 61, 81, 94, 128, 151, 177, 182, 185, 191, 219], "runtimeerror": [12, 34, 209, 220, 239], "compileflag": [12, 232], "glob": [12, 232], "exceed": [12, 119], "stdin": [12, 235, 237], "nameerror": [12, 82, 235, 269], "__future__": [12, 16, 269, 276], "divis": [12, 20, 54, 90, 94, 169, 188, 191, 192, 193, 194, 197, 199, 201, 217, 219, 232, 240, 269, 272, 276], "cl": [12, 18, 20, 36, 45, 54, 81, 85, 167, 180, 192, 196, 217, 226, 235, 239, 251, 267, 276, 278], "dir": [12, 54, 97, 203, 208, 239], "__builtins__": 12, "__file__": [12, 243], "__name__": [12, 201, 243], "__package__": 12, "_greek": 12, "_latin": 12, "chi": [12, 62, 79, 139, 201, 211, 221, 227], "eta": [12, 62, 79, 196, 201, 217, 218, 221], "iota": [12, 201], "kappa": [12, 201, 221], "mu": [12, 62, 79, 94, 105, 107, 138, 201, 221, 227], "omega": [12, 36, 37, 45, 79, 94, 109, 114, 116, 132, 135, 141, 143, 168, 177, 180, 181, 184, 186, 201, 208, 221], "omicron": [12, 201], "phi": [12, 45, 54, 55, 59, 62, 79, 83, 90, 94, 106, 134, 141, 150, 152, 186, 188, 196, 201, 217, 246, 255], "psi": [12, 59, 62, 79, 139, 150, 151, 157, 165, 196, 201, 227], "rho": [12, 56, 79, 90, 94, 120, 161, 201, 221, 227, 255], "sigma": [12, 46, 77, 79, 85, 90, 201, 204, 221], "tau": [12, 36, 79, 81, 90, 196, 201, 217], "theta": [12, 54, 56, 60, 62, 79, 82, 90, 96, 106, 116, 135, 139, 177, 185, 186, 192, 196, 201, 204, 209, 220, 221, 246, 247, 250, 252, 255], "upsilon": [12, 201], "xi": [12, 20, 56, 79, 201, 217, 218, 219], "lastli": [12, 81, 98, 135, 217], "unit": [12, 20, 28, 31, 35, 54, 55, 59, 67, 68, 69, 81, 90, 94, 97, 102, 104, 106, 107, 117, 132, 134, 143, 168, 169, 170, 174, 176, 177, 182, 185, 187, 189, 192, 194, 196, 197, 199, 201, 209, 211, 214, 220, 222, 246, 247, 249, 254, 255, 262], "mnemon": [12, 210, 239], "osineq": 12, "notic": [12, 20, 45, 46, 52, 54, 90, 155, 176, 191, 211, 227, 228, 239, 240, 269, 271, 272, 277], "reimport": 12, "restor": [12, 191, 213], "__": [12, 62, 81, 201, 221, 226], "press": [12, 35, 37, 38, 46, 55, 81, 85, 186, 195, 214, 219], "autocomplet": 12, "lose": [12, 188], "abil": [12, 18, 34, 90, 127, 196, 200, 217, 220, 271, 277], "past": [12, 60, 94, 200, 201, 276], "f1": [12, 45, 79, 81, 90, 104, 109, 117, 125, 134, 187, 192, 194, 197, 201, 203, 219], "f2": [12, 54, 79, 90, 104, 109, 117, 125, 134, 170, 187, 194, 197, 201, 203, 219], "6": [12, 14, 16, 24, 28, 30, 31, 34, 36, 37, 38, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 76, 77, 79, 81, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 104, 105, 106, 119, 120, 124, 125, 126, 136, 140, 146, 164, 176, 177, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 203, 206, 207, 208, 209, 210, 213, 214, 218, 219, 220, 221, 222, 232, 233, 236, 239, 240, 246, 248, 250, 255, 267, 273, 277, 278], "accuraci": [12, 16, 34, 54, 197, 257, 273], "2000000000000002": 12, "py3k": 12, "20000000000000": 12, "sympyifi": 12, "worri": [12, 54, 272], "reus": [12, 20, 36, 167, 271], "142857142857143": 12, "receiv": [12, 24, 54, 55, 94, 109, 162, 196, 226], "fraction": [12, 54, 55, 58, 60, 70, 81, 90, 94, 110, 173, 191, 192, 193, 194, 195, 198, 201, 203, 214, 217, 219, 268], "interpret": [12, 19, 24, 36, 45, 53, 54, 59, 60, 62, 67, 70, 81, 85, 87, 90, 94, 96, 108, 172, 187, 189, 196, 197, 201, 208, 214, 219, 220, 221, 226, 232, 233, 236, 242, 273], "100": [12, 20, 36, 38, 43, 53, 54, 55, 58, 62, 70, 77, 84, 85, 90, 94, 97, 187, 191, 196, 198, 200, 201, 208, 219, 220, 239, 266], "000000000000": 12, "00": [12, 54, 94, 151, 161, 214, 239], "null": [12, 54, 90], "34": [12, 36, 46, 59, 67, 90, 94, 109, 149, 195, 200, 207, 213, 214], "3400000000000": 12, "250": [12, 94, 214], "143": [12, 146, 186], "next": [12, 16, 18, 20, 27, 36, 37, 38, 43, 45, 46, 48, 49, 54, 55, 60, 79, 81, 84, 90, 94, 108, 109, 112, 120, 121, 122, 124, 126, 127, 128, 135, 184, 185, 188, 192, 196, 197, 201, 209, 211, 214, 217, 236, 237, 239, 270, 271, 272], "binari": [12, 19, 20, 32, 36, 38, 49, 54, 55, 81, 84, 94, 95, 161, 173, 188, 191, 197, 214, 233, 236, 239], "decim": [12, 20, 36, 54, 57, 58, 94, 96, 102, 191, 197, 271], "far": [12, 35, 54, 68, 81, 188, 191, 201, 211, 240, 266, 267, 269], "142857": 12, "25000000000000000000": 12, "14285278320312500000": 12, "realiz": [12, 39, 45, 56, 84, 94, 121, 188, 189, 194, 221], "pad": [12, 36, 55, 56, 57, 69, 94], "inexact": [12, 24, 54, 192], "low": [12, 18, 19, 36, 54, 55, 62, 94, 191, 194, 199, 201, 213, 233, 234, 239], "higher": [12, 16, 34, 36, 54, 56, 58, 62, 65, 90, 180, 186, 188, 191, 194, 197, 203, 204, 208, 210, 213, 217, 219, 222, 240, 267], "engin": [12, 100, 133, 134, 183, 217, 276], "increas": [12, 34, 35, 46, 52, 53, 54, 57, 58, 62, 85, 94, 95, 108, 118, 151, 176, 177, 179, 184, 185, 191, 194, 196, 197, 203, 206, 210, 217, 221, 237, 239], "2000061035": 12, "highest": [12, 36, 48, 83, 108, 188, 197, 204, 214, 217], "hopefulli": [12, 17, 79], "unsimplifi": [12, 210], "12345678901234567890": 12, "big_trig_ident": 12, "ab": [12, 33, 36, 37, 53, 54, 55, 58, 59, 61, 62, 66, 77, 79, 84, 85, 90, 100, 106, 134, 167, 189, 192, 196, 197, 201, 214, 216, 219, 220, 221, 227, 236, 239, 242, 251, 277], "gave": [12, 54, 239], "gain": [12, 55, 104, 129, 130, 134], "impress": 12, "91": [12, 37, 195, 200, 207, 221], "compar": [12, 18, 24, 34, 36, 46, 51, 54, 59, 60, 71, 84, 90, 94, 95, 119, 146, 170, 174, 191, 194, 197, 198, 201, 206, 208, 213, 217, 220, 222, 226, 232, 239, 269, 272, 277], "4e": [12, 219], "nearli": [12, 94, 210], "snippet": [12, 36], "expr_modifi": 12, "__main__": [12, 36, 273], "declar": [12, 18, 23, 36, 67, 79, 90, 96, 105, 117, 119, 134, 146, 190, 201, 208, 211, 216, 217, 218, 221, 234], "asid": [12, 84, 217, 218, 271], "2x": [12, 54, 62, 79, 96, 213, 214, 220, 221, 266, 269, 277], "syntaxerror": [12, 96], "asin": [12, 61, 62, 68, 198, 201, 211, 213, 217, 221, 277], "arcsin": [12, 60, 198, 201, 221], "arcco": [12, 60, 201], "root": [12, 18, 20, 22, 23, 24, 34, 36, 53, 54, 55, 61, 62, 76, 77, 78, 79, 81, 83, 86, 90, 94, 134, 172, 186, 188, 189, 192, 193, 196, 198, 200, 201, 211, 212, 217, 219, 220, 221, 232, 236, 239, 271, 273, 276, 278], "expon": [12, 24, 33, 36, 41, 54, 55, 60, 61, 62, 79, 81, 87, 94, 102, 104, 173, 189, 190, 191, 193, 197, 198, 201, 210, 213, 217, 220, 225, 236, 277], "half": [12, 20, 36, 55, 59, 60, 62, 64, 70, 81, 83, 90, 94, 96, 97, 136, 139, 164, 186, 192, 194, 196, 197, 209, 210, 211, 213, 221, 232, 239], "denomin": [12, 54, 58, 62, 81, 94, 104, 110, 189, 191, 192, 194, 196, 197, 200, 201, 210, 211, 213, 214, 217, 219, 277], "wild": [12, 213, 239], "interest": [12, 14, 20, 24, 50, 54, 56, 59, 60, 70, 79, 81, 90, 94, 118, 119, 167, 172, 185, 188, 192, 196, 197, 198, 200, 208, 211, 213, 214, 219, 220, 233, 234, 250, 267, 270, 272, 273, 274, 277], "sq": [12, 214], "is_pow": [12, 36, 54, 60], "is_rat": [12, 18, 196, 239], "bracket": [12, 20, 46, 54, 62, 165, 167, 177, 201], "notat": [12, 16, 23, 24, 42, 46, 47, 53, 54, 55, 59, 62, 79, 87, 90, 96, 104, 165, 176, 177, 181, 185, 188, 201, 208, 212, 213, 220, 226, 227, 239, 252, 267], "curli": [12, 117, 201], "suppli": [12, 34, 35, 36, 45, 46, 54, 56, 64, 68, 90, 94, 109, 112, 114, 119, 121, 124, 129, 130, 140, 167, 176, 180, 185, 187, 196, 198, 203, 210, 217, 233, 239, 240, 246, 247, 250], "powsimp": [12, 54, 60, 210], "deep": [12, 20, 54, 60, 84, 85, 197, 208, 213, 221, 272], "measur": [12, 28, 60, 62, 70, 86, 108, 147, 156, 161, 169, 172, 174, 176, 177, 180, 182, 185, 197, 209, 210, 213, 221, 245, 246, 248, 249, 251, 252, 254], "count_op": [12, 210, 213], "radic": [12, 54, 55, 90, 188, 196, 197, 213, 219, 220], "join": [12, 46, 54, 55, 67, 85, 97, 98, 201, 213, 217, 219, 222, 239, 243], "autoexpand": [12, 213], "violat": [12, 117, 186, 198, 213], "naiv": [12, 15, 45, 51, 54, 79, 85, 90, 172, 211, 219, 220, 227], "strategi": [12, 37, 54, 81, 194, 195, 208, 211, 213, 218], "radsimp": [12, 54, 212], "logcombin": [12, 212, 217, 220], "robust": [12, 51, 54, 58, 193, 213, 217], "cancel": [12, 16, 20, 36, 54, 58, 62, 70, 79, 81, 90, 94, 104, 105, 191, 192, 194, 197, 200, 213, 219, 271], "topic": [13, 21, 25, 36, 127, 132, 183, 184, 185, 186, 188, 190, 191, 196, 220, 269, 274], "behind": [13, 25, 105, 117, 131, 171, 190, 210, 213, 217, 220, 262, 269], "decis": [13, 25, 54, 60, 81, 210, 219, 234], "opinion": [13, 25], "pitfal": [13, 20, 185, 191, 269, 274, 277], "glossari": 13, "seem": [14, 18, 20, 78, 79, 117, 172, 188, 213, 217, 277], "unwieldi": 14, "arbitrarili": [14, 34, 54, 67, 94, 194, 196, 208, 211, 217, 218, 221], "six": [14, 98, 201, 214, 220, 221], "bias": 14, "toward": [14, 36, 54, 62, 188, 208, 220], "enter": [14, 46, 54, 55, 59, 67, 94, 96, 97, 112, 116, 119, 129, 201, 211, 219, 232, 272, 276], "attempt": [14, 16, 19, 20, 24, 36, 45, 50, 52, 54, 58, 59, 66, 79, 81, 90, 94, 108, 110, 162, 191, 196, 201, 203, 210, 213, 214, 217, 219, 220, 221, 232, 269, 277], "unambigu": [14, 201, 217, 242], "univari": [14, 24, 34, 53, 54, 60, 77, 81, 188, 189, 191, 192, 193, 195, 196, 197, 198, 203, 216, 219, 221], "linear": [14, 20, 22, 24, 35, 36, 46, 53, 54, 55, 57, 58, 62, 67, 74, 77, 79, 81, 83, 85, 87, 89, 97, 101, 104, 111, 112, 114, 119, 121, 122, 127, 129, 133, 134, 139, 161, 164, 165, 180, 187, 188, 192, 193, 194, 196, 197, 199, 207, 209, 211, 218, 219, 220, 239, 260, 278], "undetermin": [14, 54, 90, 197, 203, 217, 219], "nonlinear": [14, 22, 24, 53, 134, 197, 219, 220], "sol": [14, 90, 214, 217, 218, 219], "insuffici": [14, 85], "elimin": [14, 16, 36, 50, 54, 84, 86, 90, 108, 192, 199, 200, 202, 204, 212, 217, 219, 220, 227, 234, 273], "nsolv": [14, 24, 134, 219], "z_eq": 14, "zsol": 14, "906425478894557": 14, "sol0": 14, "90642547889456": 14, "reduce_inequ": [14, 216, 219], "rh": [14, 36, 44, 46, 54, 85, 86, 90, 111, 112, 117, 124, 125, 126, 190, 199, 201, 203, 217, 219, 220, 251], "classifi": [15, 90, 191, 217, 218, 220, 221], "distinguish": [15, 18, 19, 35, 45, 58, 83, 117, 166, 172, 188], "former": [15, 36, 54, 59, 117, 194, 196, 197, 214, 239], "retriev": [15, 52, 85, 197, 213, 227], "guarante": [15, 18, 36, 45, 46, 54, 66, 79, 81, 90, 191, 194, 196, 197, 217, 219, 220, 237, 242, 273, 277], "catch": [15, 54, 217, 232, 273], "theori": [15, 20, 31, 37, 43, 44, 45, 46, 52, 54, 55, 59, 62, 83, 91, 94, 112, 117, 131, 133, 146, 164, 167, 177, 180, 190, 194, 195, 196, 200, 214, 236, 246, 263, 271], "is_subset": [15, 209], "valueerror": [15, 18, 29, 31, 34, 36, 37, 46, 54, 55, 63, 64, 67, 69, 70, 81, 85, 87, 90, 93, 94, 97, 102, 104, 141, 180, 182, 186, 188, 190, 194, 196, 209, 217, 219, 220, 239, 242, 252], "odd": [15, 18, 29, 31, 33, 42, 46, 54, 55, 59, 60, 62, 84, 93, 94, 105, 196, 197, 201, 219], "appliedpred": [15, 29, 30, 31], "analysi": [16, 36, 37, 45, 54, 55, 60, 101, 119, 131, 132, 135, 171, 188, 197, 211, 214, 221], "vari": [16, 34, 36, 54, 68, 70, 97, 102, 108, 112, 132, 165, 185, 208, 219, 239, 252], "hope": [16, 45, 108, 188], "research": [16, 46, 198, 213], "establish": [16, 50, 79, 111, 122, 211], "envis": 16, "along": [16, 20, 36, 45, 54, 55, 56, 60, 62, 63, 64, 68, 69, 72, 74, 77, 79, 85, 87, 90, 97, 98, 100, 107, 108, 111, 112, 119, 121, 124, 125, 126, 128, 129, 130, 131, 134, 136, 164, 176, 177, 182, 185, 187, 190, 191, 196, 197, 217, 220, 248, 252, 254], "small": [16, 36, 37, 45, 46, 54, 58, 59, 81, 84, 90, 94, 104, 121, 125, 134, 164, 186, 187, 194, 195, 196, 213, 214, 219, 239, 266, 269, 271], "x_": [16, 36, 44, 54, 55, 59, 96, 192, 194, 197, 203, 214, 217, 222], "taylor": [16, 54, 60, 117, 131, 134, 192, 194, 197, 198, 208, 217], "let": [16, 18, 19, 20, 34, 36, 45, 50, 54, 55, 64, 72, 77, 79, 83, 87, 90, 91, 94, 96, 109, 117, 134, 172, 177, 184, 188, 189, 190, 194, 196, 197, 198, 201, 208, 211, 213, 214, 217, 219, 220, 227, 230, 233, 237, 240, 250, 251, 255, 266, 269, 271, 272, 277], "df": [16, 56, 217], "c_": [16, 22, 55, 77, 79, 185, 189, 217], "grid": [16, 34, 35, 102, 187], "f_": [16, 54, 59, 62, 81, 129, 130, 131, 194, 200, 201, 211, 217], "constraint": [16, 90, 98, 104, 111, 112, 113, 116, 117, 119, 120, 121, 123, 127, 129, 130, 131, 134, 198], "formul": [16, 111, 120, 121, 127, 129, 130, 167, 185], "assess": 16, "brute": [16, 210, 214], "frequent": [16, 45, 196, 208, 220], "cover": [16, 60, 94, 96, 108, 117, 176, 184, 227, 234, 267, 269], "treatment": [16, 79, 197], "shall": [16, 45, 79, 117, 134, 208, 211, 272], "job": [16, 20, 46, 147, 198, 201], "truncat": [16, 46, 54, 90, 94, 98, 172, 187, 198, 200, 203, 204], "approx": [16, 22, 54, 81], "lowest": [16, 36, 45, 50, 94, 188, 203, 220], "2h": 16, "print_funct": 16, "x0": [16, 34, 36, 44, 54, 62, 73, 75, 77, 78, 94, 139, 191, 202, 203, 208, 213, 217, 219, 221, 239, 267], "x_0": [16, 44, 45, 55, 76, 77, 78, 194, 203, 214, 217, 221, 267], "fi": 16, "fip1": 16, "fip2": 16, "c_0": [16, 55, 77], "c_1": [16, 55, 77, 79, 208, 211, 217], "c_2": [16, 79, 208, 217], "2f": [16, 278], "c_i": [16, 79, 208, 211, 217], "nth": [16, 54, 59, 62, 83, 94, 192, 197, 198, 207, 213, 217, 221], "degre": [16, 37, 45, 52, 53, 59, 62, 70, 81, 85, 90, 97, 100, 102, 104, 111, 112, 117, 118, 121, 127, 135, 139, 185, 188, 189, 192, 194, 196, 197, 200, 204, 207, 210, 211, 213, 214, 217, 219, 221, 246], "x_i": [16, 20, 44, 62, 81, 90, 189, 192, 194, 197, 198, 201, 220], "m11": [16, 221], "m12": [16, 221], "m13": 16, "m21": [16, 221], "m22": [16, 221], "m23": 16, "m31": 16, "m32": 16, "m33": [16, 94], "3x3": [16, 69, 90, 250], "invert": [16, 24, 31, 54, 55, 85, 87, 90, 104, 121, 169, 189, 191, 192, 196, 197, 217, 219, 220, 227, 273], "inv": [16, 46, 86, 90, 111, 112, 119, 124, 125, 134, 156, 190, 217], "fim1": 16, "eight": [16, 24, 201], "dfdxcheck": 16, "c3": [16, 57, 83, 85, 87, 94, 217, 221, 251, 278], "c5": [16, 217], "120": [16, 53, 54, 59, 60, 76, 94, 97, 98, 198, 200, 201, 203, 217, 267], "c7": [16, 45], "5040": [16, 59, 76, 197, 198], "quickli": [16, 20, 45, 46, 54, 55, 58, 94, 194, 197, 210, 220, 236], "tediou": [16, 81], "certainli": [16, 66, 96, 236], "fine": [16, 20, 54, 58, 82, 181, 191, 201, 213], "devis": 16, "xn": [16, 20, 192], "x_n": [16, 20, 37, 44, 55, 76, 90, 189, 192, 194, 197, 214, 220], "fn": [16, 81, 90, 188, 197], "fnm1": 16, "fnm2": 16, "dth": 16, "Of": [16, 18, 53, 79, 90, 217, 220, 239, 277], "cours": [16, 18, 38, 45, 53, 62, 79, 81, 90, 91, 94, 182, 190, 191, 195, 196, 208, 210, 211, 252, 277], "etc": [16, 18, 19, 31, 34, 36, 50, 54, 55, 59, 60, 72, 83, 84, 89, 94, 117, 138, 147, 151, 164, 167, 171, 179, 182, 184, 185, 187, 188, 189, 191, 194, 196, 201, 202, 209, 210, 211, 213, 217, 220, 221, 225, 233, 234, 239, 250, 254], "discrit": 16, "bengt": [16, 34], "fornberg": [16, 34], "weight": [16, 54, 62, 69, 71, 81, 83, 90, 151, 213, 257, 267], "gap": [17, 45, 94, 117, 198], "matur": [17, 18, 219, 220], "finit": [17, 18, 23, 31, 36, 40, 41, 42, 45, 53, 54, 55, 57, 58, 81, 83, 84, 153, 177, 186, 189, 192, 193, 195, 197, 198, 201, 203, 204, 207, 209, 214, 216, 217, 220, 239, 246, 247, 257, 268, 271, 277], "concret": [18, 35, 46, 54, 59, 60, 81, 83, 90, 94, 117, 172, 192, 196, 201, 257], "obviou": [18, 19, 20, 45, 53, 188, 191, 200, 214, 271], "situat": [18, 24, 58, 79, 185, 217, 219, 221, 237, 269], "refus": [18, 277], "roughli": [18, 54, 55, 95, 118, 217, 240], "possibli": [18, 36, 46, 52, 54, 79, 81, 94, 170, 171, 194, 208, 209, 219, 234, 267, 273], "infinit": [18, 20, 31, 53, 54, 55, 58, 59, 60, 67, 68, 81, 90, 94, 104, 123, 153, 172, 188, 196, 201, 202, 203, 206, 207, 208, 209, 213, 214, 215, 216, 219, 226, 239, 277, 278], "is_neg": [18, 20, 192], "interprett": 18, "unknow": 18, "resolv": [18, 19, 23, 54, 210, 213, 219], "undecid": [18, 20, 23, 90, 191, 220, 273], "conclud": [18, 62, 77, 119, 182, 208, 219, 254], "particularli": [18, 58, 81, 191, 192, 211, 277, 278], "mix": [18, 27, 53, 60, 85, 90, 96, 176, 191, 192, 197, 201, 220, 223, 225, 227, 240], "ideal": [18, 36, 91, 114, 117, 127, 177, 184, 190, 192, 193, 194, 195, 196, 197, 198, 213, 220, 246], "slow": [18, 20, 50, 54, 58, 81, 95, 108, 119, 139, 176, 185, 191, 192, 201, 202, 203, 204, 213, 217, 219, 220, 232, 233, 277], "indetermin": [18, 19, 54, 90, 194, 206, 219], "contradict": 18, "infer": [18, 30, 31, 46, 54, 81, 191, 200, 201, 206, 211, 217, 233, 259], "prepar": [18, 112, 199], "presum": [18, 79, 191, 211, 234], "singletonregistri": [18, 54], "x1": [18, 20, 44, 54, 59, 134, 139, 191, 192, 202, 203, 213, 217, 219, 221, 239], "x2": [18, 44, 54, 59, 134, 139, 191, 203, 217, 219, 221], "posifi": [18, 212], "_x": [18, 20, 90, 132, 181, 184, 185, 192, 198, 213, 217, 233], "rep": [18, 45, 50, 54, 151, 188, 190, 191, 192, 195, 196, 197, 210, 213, 242], "feel": [18, 26, 134, 135, 213, 217, 219], "among": [18, 35, 36, 37, 38, 45, 46, 55, 82, 95, 197, 217, 222, 225, 227, 249], "behaviour": [18, 79, 84, 109, 194, 198, 204, 207], "symbolc": 18, "implicit": [18, 36, 52, 54, 96, 116, 135, 187, 217, 219, 223, 226, 233, 234, 246, 248, 255, 269], "tailor": 18, "assumptions0": [18, 54], "extended_neg": [18, 54], "extended_nonneg": [18, 54], "extended_nonposit": [18, 54], "extended_nonzero": [18, 54, 201], "extended_posit": [18, 54], "extended_r": [18, 32, 54, 201, 216, 220], "hermitian": [18, 31, 54, 85, 86, 90, 150, 156, 167, 201], "irrat": [18, 31, 34, 54, 94, 191, 197, 201, 209, 271], "noninteg": [18, 32, 54, 191, 201], "nonneg": [18, 20, 31, 54, 55, 56, 59, 62, 87, 134, 189, 191, 197, 214, 221, 277], "nonposit": [18, 31, 54, 59, 62, 134], "nonzero": [18, 20, 31, 33, 53, 54, 69, 90, 106, 189, 190, 191, 192, 201, 204, 220], "transcendent": [18, 23, 24, 31, 54, 62, 81, 191, 196, 201, 219, 220, 273, 278], "field": [18, 28, 32, 36, 54, 55, 56, 62, 72, 81, 139, 140, 179, 183, 188, 189, 190, 192, 193, 195, 197, 198, 199, 214, 219, 232, 246, 248, 250, 251, 253, 255], "antihermitian": [18, 31, 54], "mathbb": [18, 20, 32, 37, 45, 53, 54, 55, 60, 62, 79, 85, 90, 131, 186, 188, 189, 191, 192, 194, 196, 197, 200, 208, 209, 211, 214, 220, 221, 277], "ii": [18, 60, 79, 81, 94, 197, 201, 209, 217, 220], "cup": [18, 197, 209, 220], "pm": [18, 53, 79, 81, 189, 200, 208, 214, 217], "yi": 18, "composit": [18, 31, 35, 43, 45, 46, 54, 55, 72, 74, 81, 94, 97, 192, 194, 197, 200, 213, 220, 235], "2k": [18, 54, 59, 79, 94, 214], "pariti": [18, 46, 197], "product": [18, 28, 39, 42, 45, 46, 50, 52, 53, 54, 55, 56, 58, 59, 62, 64, 67, 69, 70, 77, 79, 81, 83, 84, 85, 87, 90, 94, 95, 104, 105, 106, 108, 119, 132, 134, 142, 146, 147, 150, 152, 153, 154, 156, 159, 161, 162, 164, 165, 167, 172, 173, 176, 177, 179, 183, 184, 185, 186, 188, 189, 190, 192, 194, 196, 197, 198, 201, 202, 203, 206, 209, 210, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 233, 236, 239, 246, 249, 253], "le": [18, 37, 50, 62, 79, 85, 94, 126, 194, 211, 221], "commutative_properti": [18, 54], "skew": [18, 77, 94, 221], "hermitian_matrix": 18, "complex_numb": [18, 32, 54], "algebraic_numb": [18, 32, 54], "transcendental_numb": [18, 54], "extended_real_number_lin": 18, "real_numb": [18, 32], "imaginary_numb": [18, 32, 54], "rational_numb": [18, 32], "irrational_numb": [18, 32, 54], "parity_": [18, 54], "prime_numb": [18, 54, 94], "composite_numb": [18, 54], "positive_real_numb": 18, "negative_numb": [18, 54], "inconsist": [18, 20, 29, 31, 53, 172, 177, 180, 184, 213, 217, 220], "inconsistentassumpt": 18, "deal": [18, 36, 53, 54, 58, 66, 74, 79, 81, 101, 108, 112, 113, 117, 182, 184, 185, 189, 194, 197, 214, 215, 219, 230, 240, 242, 249, 254, 269, 271, 277], "is_zero_matrix": [18, 85, 190], "generalis": [18, 62, 79, 188], "gaussian": [18, 62, 81, 90, 94, 137, 193, 194, 197, 214, 219, 221, 262, 273], "notion": [18, 35, 172, 175, 188, 220, 249, 254], "chain": [18, 20, 36, 45, 50, 54, 62, 71, 95, 184, 196, 221], "superset": [18, 34, 43, 49, 57, 134, 191, 209, 219], "vanilla": 18, "attach": [18, 48, 79, 95, 97, 112, 185, 233, 235, 240], "is_commut": [18, 81, 156, 165, 239], "is_complex": [18, 54], "is_finit": [18, 54], "permit": [18, 46, 56, 60, 84, 94, 187], "formal": [18, 35, 53, 54, 62, 79, 84, 136, 172, 191, 193, 194, 205, 208], "littl": [18, 20, 35, 46, 64, 90, 94, 95, 119, 172, 195, 197, 201, 211, 213, 221, 236, 249], "n1": [18, 36, 45, 54, 55, 117, 134, 136, 140, 176, 214, 221, 246], "n2": [18, 36, 45, 54, 55, 134, 136, 140, 214, 221], "misunderstand": 18, "is_nonneg": [18, 20, 192], "intent": [18, 36, 53, 54, 96, 234], "meaning": [18, 29, 31, 35, 55], "alon": [18, 55, 82, 194, 217, 219, 226, 239, 271, 272], "tempt": [18, 20, 54, 94], "meet": [18, 55, 208], "criteria": [18, 54, 272], "noncommut": [18, 54, 77, 272], "finiteset": [18, 23, 34, 35, 220, 221, 278], "s1": [18, 45, 53, 67, 70, 77, 104, 178, 188, 197, 204, 214, 239, 248], "s2": [18, 45, 46, 53, 67, 70, 104, 178, 188, 197, 204, 208, 214, 239, 248], "bool": [18, 34, 36, 50, 52, 54, 55, 57, 60, 81, 82, 84, 85, 87, 90, 94, 96, 113, 151, 179, 181, 187, 196, 197, 199, 201, 202, 203, 208, 209, 213, 216, 221, 233, 234, 239, 240, 246, 248, 269], "plai": [18, 53, 119, 129, 214, 269, 271, 272], "role": [18, 60, 199], "connect": [18, 48, 55, 56, 69, 70, 90, 95, 97, 100, 109, 111, 119, 122, 128, 188, 189, 190, 199, 217, 221, 239, 246], "is_finite_set": 18, "zero_matrix": 18, "setsymbol": 18, "is_compar": [18, 54], "capitalis": 18, "4142135623731": [18, 201, 219], "predict": [18, 167, 213, 239], "expreal": 18, "fuzzy_and": [18, 19, 20], "fuzzy_or": [18, 19], "is_extended_nonneg": 18, "classmethod": [18, 20, 28, 30, 31, 36, 38, 43, 45, 46, 48, 49, 54, 60, 61, 62, 69, 85, 90, 104, 153, 164, 165, 167, 190, 192, 196, 197, 201, 209, 227, 232], "is_extended_r": 18, "is_infinit": 18, "is_extended_neg": 18, "is_extended_posit": [18, 19], "_eval_is_finit": 18, "is_extended_nonposit": 18, "_eval_is_algebra": 18, "is_nonzero": [18, 69], "_eval_is_integ": 18, "_eval_is_zero": [18, 20], "__new__": [18, 20, 36, 45, 54, 272], "verifi": [18, 26, 34, 45, 51, 55, 56, 117, 188, 194, 200, 217, 219, 220, 222, 223, 253, 277], "importantli": [18, 20, 198, 236], "reject": [18, 19, 94, 214, 242], "_eval_is_": 18, "is_algebra": [18, 54, 192], "interfer": [18, 201], "determinist": [18, 45, 81, 94, 194, 195], "reach": [18, 94, 104, 196, 197, 217], "claus": [18, 84], "flow": [18, 196], "inner": [18, 53, 79, 90, 150, 153, 154, 159, 161, 162, 165, 167, 177, 180, 190, 196, 203, 246], "optimis": [18, 217], "stage": [18, 35, 53, 94, 208, 277], "briefli": [18, 189, 194], "managedproperti": [18, 54], "metaclass": [18, 54], "default_assumpt": 18, "_ask": 18, "_eval_i": 18, "enumer": [18, 25, 38, 41, 43, 46, 49, 57, 61, 79, 84, 94, 196, 197, 211, 236, 239], "randomis": [18, 229, 264], "unresolv": 18, "factrul": 18, "_assume_rul": 18, "preprocess": [18, 81, 199], "defined_fact": 18, "full_impl": 18, "defaultdict": [18, 54, 239], "precomput": [18, 59, 94, 240], "static": [18, 28, 36, 45, 46, 48, 54, 60, 67, 68, 69, 70, 87, 98, 119, 127, 187, 201, 207, 209, 221, 233], "knowabl": 18, "stdfactkb": 18, "_eval_is_r": [18, 20, 197], "_assumpt": [18, 54], "amongst": [18, 219], "indirectli": 18, "manifest": [18, 189], "jointli": 18, "fundament": [18, 20, 34, 37, 44, 72, 79, 81, 90, 172, 191, 196, 214, 217, 221, 273], "theoret": [18, 35, 37, 45, 55, 59, 195, 196, 211, 269], "isposit": 19, "xpo": 19, "xneg": 19, "strictgreaterthan": [19, 201], "analogu": [19, 32, 53, 68, 191, 192], "piecewis": [19, 20, 36, 53, 59, 61, 62, 81, 97, 165, 201, 203, 204, 219, 220, 221, 240, 267], "nonetyp": [19, 36], "quirk": 19, "both_posit": 19, "falsei": 19, "both_positive_bett": 19, "negat": [19, 20, 32, 54, 60, 84, 104, 177, 190, 192, 194, 197], "fuzzy_not": [19, 20], "both_positive_best": 19, "silent": [19, 58, 94, 233], "carefulli": [19, 54, 177, 194, 203], "truth": [19, 29, 30, 31, 32, 33, 54, 85, 213, 259], "bitwis": [19, 57, 84], "footnot": [19, 172, 272, 273, 276], "combinatori": [20, 38, 46, 53, 54, 61, 62, 197, 203, 212, 239, 241, 277], "dig": [20, 36, 272], "th": [20, 28, 37, 45, 46, 52, 55, 56, 58, 59, 60, 62, 83, 84, 90, 94, 112, 192, 194, 196, 197, 203, 206, 211, 214, 217, 219, 221, 222, 227], "handler": [20, 29, 30, 31, 32, 33, 54, 61, 90], "spectrum": 20, "matter": [20, 34, 43, 46, 53, 54, 59, 79, 81, 132, 208, 239, 271, 272], "use_unicod": [20, 34, 35, 36, 58, 62, 81, 82, 90, 98, 104, 139, 181, 186, 188, 189, 200, 201, 202, 220, 221, 267, 271, 273, 276, 277, 278], "np": [20, 61, 77, 94, 117, 233, 240], "arang": [20, 233, 266], "arrai": [20, 22, 36, 45, 46, 50, 51, 55, 62, 81, 85, 87, 90, 94, 95, 102, 134, 164, 187, 190, 192, 197, 201, 220, 221, 224, 226, 227, 228, 233, 234, 236, 240, 273], "ultim": [20, 60, 172], "cosin": [20, 54, 60, 62, 69, 81, 109, 111, 177, 185, 197, 198, 204, 210, 221, 246, 277], "todai": [20, 188], "operatornam": [20, 59, 60, 62, 79, 81, 186, 189, 197, 201, 204, 209, 211, 219], "modern": [20, 36, 188, 195, 201], "recal": [20, 54, 90, 194, 196, 211, 269, 271, 272, 278], "redefin": [20, 46, 54, 129, 131, 189, 240], "antipattern": [20, 270], "stai": [20, 196], "trig": [20, 54, 81, 197, 201, 210, 213, 277], "wouldn": 20, "cheap": [20, 54, 94], "as_two_term": [20, 54], "split": [20, 36, 54, 55, 58, 79, 81, 96, 194, 196, 199, 200, 201, 219, 221, 227, 232, 239, 244, 272, 277], "hadn": 20, "wors": [20, 84, 213], "expand_trig": [20, 266], "mid": [20, 37, 55, 58, 98, 209, 214], "troubl": [20, 62], "bigger": [20, 36, 54, 59, 211, 217, 277], "deduc": [20, 36, 79, 84, 211, 271], "disallow": [20, 54, 197, 202, 213, 235], "great": [20, 136, 198, 201, 214, 240], "simplest": [20, 35, 84, 90, 94, 95, 186, 187, 198, 202, 210, 213, 217, 267, 277], "\u03c0": [20, 58, 139, 201, 220, 267, 271, 277, 278], "as_independ": [20, 54, 220], "coeff": [20, 54, 56, 84, 134, 192, 196, 197, 207, 213, 217, 219, 227, 277], "apart": [20, 28, 45, 50, 54, 58, 60, 81, 182, 189, 192, 194, 197, 200, 203, 214, 220, 227, 250, 252, 272], "is_even": [20, 42, 45, 46], "nonreal": [20, 219], "cosh": [20, 54, 61, 62, 73, 79, 198, 201, 202, 211, 213, 219, 273, 277], "5919532755215": 20, "_eval_is_nonneg": 20, "exercis": [20, 45, 236, 270, 277], "_eval_is_posit": 20, "as_add": [20, 54], "pi_": 20, "fuzzy_": 20, "deduct": [20, 36], "subtl": [20, 210], "nontrivi": [20, 45, 54, 94], "_eval_evalf": [20, 197], "prec": [20, 54, 64, 70, 94, 102, 186, 192, 197, 198, 213, 219], "dp": [20, 36, 54, 57, 62, 94, 191, 192, 219, 235], "53": [20, 55, 57, 90, 136, 189, 191, 192], "459697694131860": 20, "hook": [20, 95, 201], "_eval_rewrit": [20, 54], "rewritten": [20, 54, 59, 60, 62, 81, 117, 164, 208, 213, 217, 219, 277], "caller": 20, "ve": [20, 119], "nonintegr": 20, "iff": [20, 32, 46, 55, 84, 90, 185, 188, 196, 211, 214, 232], "isint": 20, "xy": [20, 34, 35, 68, 90, 114, 185, 187, 188, 194, 201, 213, 220, 255, 272, 277], "happi": 20, "demand": [20, 27], "_eval_expand_": 20, "expand_": 20, "predefin": [20, 56, 134, 191, 201, 202, 213, 220, 227, 246, 250, 258], "expand_log": [20, 36, 213], "_eval_expand_trig": 20, "sophist": [20, 95, 219], "x_1": [20, 37, 44, 45, 55, 59, 76, 90, 162, 189, 192, 194, 197, 203, 214, 220], "ldot": [20, 37, 44, 45, 53, 54, 55, 59, 62, 79, 94, 98, 172, 188, 189, 192, 194, 196, 201, 204, 208, 211, 214, 219, 222, 277], "x_k": [20, 55, 194], "dy": [20, 36, 56, 71, 90, 97, 107, 134, 197, 201, 214, 217, 218, 267], "dz": [20, 97, 107, 211], "argumentindexerror": 20, "varion": 20, "middl": [20, 62, 70, 79, 90, 98, 147, 187, 211, 277], "iverson": 20, "printmethod": [20, 201], "latexprint": [20, 264], "_latex": [20, 201], "_print": [20, 201], "_m": [20, 62], "_n": [20, 55, 59, 62, 81, 197, 211, 220], "arcversin": 20, "aversin": 20, "im": [20, 33, 54, 61, 79, 88, 188, 201, 202, 209, 217, 273], "sinh": [20, 34, 54, 58, 61, 62, 73, 79, 198, 201, 202, 211, 277], "expand_complex": 20, "analog": [20, 47, 53, 55, 59, 132, 184, 185, 188, 189, 190, 194, 206, 222, 239], "vers": 20, "geometr": [20, 56, 63, 64, 65, 66, 67, 68, 69, 70, 71, 90, 136, 185, 188, 195, 221, 263, 273], "angl": [20, 28, 60, 62, 63, 64, 65, 67, 68, 69, 70, 100, 106, 111, 116, 117, 119, 120, 121, 122, 131, 136, 139, 140, 141, 164, 172, 177, 184, 185, 186, 201, 210, 220, 246, 247, 250, 277], "horizont": [20, 24, 35, 64, 67, 69, 85, 100, 139, 187, 190, 201], "distanc": [20, 35, 38, 46, 64, 67, 68, 69, 70, 97, 98, 107, 108, 111, 121, 122, 128, 136, 140, 170, 180, 182, 254], "rightmost": [20, 167], "scientificamerican": 20, "uniti": [20, 60, 62, 79, 162, 196], "secret": [20, 55], "teacher": 20, "taught": [20, 81], "nr": 20, "sake": [20, 59, 214], "simplic": [20, 211, 213, 217], "divisor": [20, 32, 45, 54, 55, 90, 94, 188, 189, 191, 192, 194, 195, 196, 197, 200], "hardwar": [20, 36], "regard": [20, 37, 55, 62, 82, 135, 167, 188, 189, 203, 219, 220], "c99codeprint": [20, 36, 201], "cxx11codeprint": [20, 201], "cfunction": [20, 258], "e2": [20, 34, 54, 57, 64, 71, 81, 90, 94, 102, 117, 191, 196, 208, 217, 220, 221, 239], "93accumulate_oper": 20, "fused_multipli": 20, "93add": 20, "ccode": [20, 36, 201, 226, 234], "cxxcode": [20, 36, 201], "_ccode": [20, 201], "_y": [20, 132, 181, 184, 185], "_z": [20, 81, 132, 184, 185, 221], "_cxxcode": [20, 201], "std": [20, 201, 221], "28318530717959": 20, "trigonometricfunct": 20, "inversetrigonometricfunct": 20, "reciprocaltrigonometricfunct": 20, "bypass": [20, 217], "fragil": 20, "tend": [20, 27, 36, 54, 59, 194, 196, 206, 208, 211, 270, 277], "prone": [20, 36, 54], "move": [20, 45, 46, 54, 55, 68, 70, 97, 111, 119, 121, 127, 155, 180, 184, 185, 212, 213, 222, 231, 252], "task": [21, 22, 25, 60, 127, 128, 134, 191, 196, 267, 274], "deeper": [21, 225, 272], "explor": [21, 129, 130, 187, 196, 236, 277], "diophantin": [22, 94, 194, 215], "739085133215161": [22, 24, 219], "9y": 22, "3x": [22, 54, 96, 194, 220, 269], "cc": [22, 55, 70, 186, 189, 191, 193, 197, 273], "4xy": [22, 182, 254], "8y": 22, "7y": [22, 214], "yield": [23, 34, 36, 45, 54, 55, 59, 62, 78, 79, 94, 97, 104, 110, 161, 189, 194, 196, 197, 202, 203, 208, 209, 210, 213, 214, 219, 236, 239, 273], "rearrang": [23, 105, 112, 129, 130, 151, 217], "eqn": [23, 34, 220], "solutions_set": 23, "solution_set": 23, "256": [23, 36, 45, 94, 197, 201], "techniqu": [23, 37, 49, 79, 81, 201, 203, 213, 217, 220, 273], "solution_outside_2_3": 23, "interv": [23, 32, 34, 45, 54, 58, 60, 62, 63, 64, 67, 70, 79, 81, 84, 94, 153, 162, 192, 194, 196, 197, 204, 207, 216, 220, 221, 263, 278], "calculu": [23, 31, 54, 59, 81, 90, 134, 182, 183, 210, 221, 251, 252, 253, 256, 257, 268, 270, 275], "critic": [23, 34, 140, 184, 196, 220], "minima": [23, 220], "critical_point": 23, "point1": [23, 178, 248], "point2": [23, 178, 248], "curvatur": [23, 136, 140], "solution_list": 23, "membership": [23, 52, 196, 209], "candid": [23, 54, 90, 94, 194, 213], "solution_set_arg": 23, "solvabl": [24, 45, 100, 214, 217, 220, 278], "abel": [24, 90], "ruffini": [24, 90], "theorem": [24, 42, 55, 62, 64, 70, 80, 81, 85, 90, 94, 107, 108, 119, 167, 176, 184, 188, 191, 194, 208, 211, 214, 220, 253, 263], "groebnerbasi": [24, 189, 197, 200], "lambert": [24, 60, 81, 198], "decompos": [24, 45, 46, 52, 54, 56, 60, 65, 90, 94, 151, 160, 161, 163, 192, 197, 200, 221], "reflect": [24, 38, 42, 46, 54, 64, 65, 70, 83, 100, 136, 139, 140, 177], "lack": [24, 36, 56, 58, 114, 201, 267], "crootof": [24, 54, 197, 217, 219], "765": 24, "352": 24, "181": 24, "08": [24, 119], "total": [24, 37, 43, 45, 54, 59, 70, 83, 84, 85, 87, 119, 121, 129, 136, 140, 146, 151, 164, 173, 186, 192, 194, 197, 210, 213, 217, 225, 227, 255], "scroll": 24, "56": [24, 57, 81, 94, 197], "1307": 24, "432": [24, 67, 196], "434607": 24, "144": [24, 59, 81, 186], "0509758447494279": 24, "313552108895239": 24, "14751999969868": 24, "estim": [24, 34, 53, 54, 58, 79, 267], "preserv": [24, 35, 36, 45, 54, 90, 165, 192, 197, 202, 203, 213], "77245385090552": 24, "4142135623730951": 24, "varieti": [24, 36, 37, 46, 54, 95, 98, 132, 188, 195, 197, 221, 239], "exclud": [24, 36, 53, 54, 81, 90, 110, 134, 189, 192, 194, 197, 207, 217, 219, 232, 235, 239], "risk": 24, "parse_latex": [24, 96], "central": [25, 45, 51, 62, 64, 70, 109, 114, 132, 187, 196, 197, 214, 221], "pypi": 26, "continuum": [26, 262], "qtconsol": [26, 276], "nicer": [26, 54, 125], "setupegg": 26, "enthought": 26, "canopi": 26, "activepython": 26, "spack": 26, "freshli": 26, "starter": 26, "sy": [26, 36, 56, 117, 134, 201, 232, 243, 251, 269], "wherev": [26, 117, 213, 220, 249], "visit": [26, 38, 45, 54, 59, 274], "chat": 26, "gitter": [26, 273], "excel": [26, 58, 196, 275], "ticket": 26, "export": [27, 201], "latin": 27, "slightli": [27, 36, 50, 94, 96, 119, 187, 188, 192, 194, 197, 201, 211, 213], "clunki": 27, "collid": [27, 227], "win": 27, "throwawai": 27, "surviv": 27, "foo": [27, 34, 36, 54, 162, 181, 239, 242], "report": [27, 34, 45, 54, 67, 85, 94, 198, 209, 220, 232, 273, 278], "stick": 27, "_clash1": [27, 54], "_clash2": [27, 54], "multi": [27, 54, 55, 118, 127, 134, 147, 151, 161, 187, 201, 220], "_clash": [27, 54], "union": [27, 32, 34, 36, 43, 45, 52, 84, 96, 188, 196, 201, 207, 208, 216, 220, 221, 239], "sympif": [27, 54], "real_field": 28, "instanti": [28, 35, 36, 46, 54, 62, 67, 69, 70, 87, 90, 157, 165, 177, 187, 188, 192, 196, 221, 246, 249], "q1": [28, 90, 108, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 135, 176, 177, 179, 180, 181, 184, 185, 191, 246, 247], "q2": [28, 108, 117, 119, 120, 121, 122, 124, 125, 126, 129, 130, 135, 176, 177, 179, 180, 181, 184, 185, 191, 246, 247], "r1": [28, 64, 67, 83, 97, 98, 140, 177, 182, 197, 246], "euclideanspac": 28, "realnormedalgebra": 28, "r2": [28, 56, 67, 83, 85, 97, 98, 140, 177, 197, 201, 213, 246], "q3": [28, 108, 119, 120, 122, 124, 125, 126, 129, 177, 179, 180, 185, 246, 247], "axi": [28, 47, 59, 60, 64, 65, 67, 68, 70, 76, 79, 81, 87, 90, 97, 102, 107, 111, 117, 119, 121, 124, 125, 126, 128, 131, 134, 135, 136, 139, 140, 164, 177, 179, 180, 182, 184, 185, 187, 192, 220, 246, 247, 250, 252, 255], "bi": [28, 54, 60, 62, 81, 185, 208, 217], "cj": 28, "dk": [28, 97, 196], "atan2": [28, 33, 56, 61, 141, 201, 246], "atan": [28, 33, 56, 58, 61, 65, 70, 78, 81, 121, 135, 136, 198, 201, 203], "arc_coplanar": 28, "arc": [28, 60, 277], "orient": [28, 66, 70, 85, 117, 119, 121, 124, 128, 132, 134, 177, 180, 182, 184, 185, 194, 239, 246, 253, 254], "coplanar": [28, 68, 185], "ax": [28, 55, 58, 64, 67, 79, 86, 90, 97, 102, 111, 139, 164, 177, 185, 186, 187, 190, 198, 214, 217, 220, 222, 223, 226, 246, 247, 249, 252, 254, 277], "parallel": [28, 64, 67, 68, 70, 81, 101, 104, 107, 128, 184, 185, 194, 251, 255], "vector_coplanar": 28, "is_pur": 28, "mathbf": [28, 87, 127, 129, 130, 132, 172, 176, 177, 181, 182, 184, 185, 201, 211, 222, 249, 250, 252, 254, 255], "versor": 28, "0i": 28, "0j": [28, 191], "0k": 28, "vector_part": 28, "from_axis_angl": 28, "rotat": [28, 42, 45, 47, 54, 63, 64, 65, 67, 69, 70, 85, 90, 97, 98, 111, 119, 122, 124, 126, 132, 135, 151, 164, 177, 180, 182, 184, 185, 186, 187, 239, 246, 247, 250, 252, 254], "radian": [28, 60, 63, 64, 65, 67, 68, 69, 90, 102, 117, 140, 141, 177], "from_rotation_matrix": 28, "orthogon": [28, 31, 61, 69, 83, 90, 165, 177, 185, 193, 246, 247, 253], "det": [28, 90, 91, 134, 185, 190, 273], "index_vector": 28, "mod": [28, 55, 60, 84, 90, 91, 94, 163, 188, 190, 191, 192, 194, 196, 197, 201, 203, 211, 214, 257], "magnitud": [28, 36, 53, 54, 58, 62, 95, 97, 98, 100, 102, 121, 134, 165, 174, 177, 182, 185, 187, 246, 252, 254], "norm": [28, 90, 165, 177, 192, 194, 196, 197], "scalar_part": 28, "is_zero_quaternion": 28, "mensor": 28, "60": [28, 40, 45, 47, 53, 54, 59, 62, 81, 90, 94, 97, 98, 200, 201, 214, 217, 239], "pth": 28, "668": 28, "224": [28, 170, 195], "336": 28, "448": 28, "pow_cos_sin": 28, "900": 28, "1800": [28, 55], "2700": [28, 97], "3600": [28, 59], "rotate_point": 28, "pin": [28, 97, 98, 100, 111], "to_axis_angl": 28, "to_rotation_matrix": 28, "assumptionkei": 29, "proposit": [29, 31, 84], "is_tru": [29, 31, 32], "assumptionscontext": [29, 30, 31], "global_assumpt": [29, 30, 31], "discern": [29, 31], "refin": [29, 31, 54, 85, 188, 192, 196, 197, 213, 234], "progress": [29, 31, 94, 234], "inherit": [29, 54, 61, 84, 87, 88, 111, 156, 165, 186, 201, 221, 226, 234, 235], "askhandl": 29, "mere": [30, 31, 36, 58, 162], "thin": [30, 90, 123, 136], "undefinedpred": [30, 31], "sexi": [30, 31], "sexyprimepred": [30, 31], "sexyprim": [30, 31], "int1": [30, 31], "int2": [30, 31], "assump": [30, 31], "r3": [30, 83, 97, 98, 213], "predicate_": [30, 31], "mathematical_log": [30, 31], "r4": [30, 83, 97], "sexy_prim": [30, 31], "resolut": [30, 31, 214], "askpredicatehandl": [30, 31], "r5": [31, 213], "r6": 31, "tautolog": 31, "symmetr": [31, 33, 37, 42, 45, 46, 50, 70, 85, 86, 87, 90, 94, 176, 186, 192, 194, 197, 200, 209, 211, 227, 239], "unitari": [31, 81, 94, 151, 156], "triangular": [31, 85, 86, 90, 190, 196, 219, 221, 255], "diagon": [31, 59, 85, 86, 87, 90, 93, 116, 139, 190, 223, 224], "rank": [31, 36, 37, 38, 43, 45, 46, 48, 49, 50, 69, 83, 90, 91, 177, 179, 188, 190, 192, 194, 196, 222, 226, 227, 273], "singular": [31, 36, 46, 54, 58, 60, 61, 76, 77, 79, 81, 90, 97, 99, 131, 177, 188, 195, 208, 217, 220, 246, 257, 267], "notabl": [31, 36, 57, 62, 79, 95, 191], "truth_maintenance_system": 31, "istruepred": 32, "gt": [32, 36, 221, 239], "istruehandl": 32, "commutativepred": 32, "commutativehandl": 32, "finitepred": 32, "nor": [32, 34, 54, 84, 94, 141, 187, 197, 208, 210, 217, 227, 246], "nan": [32, 33, 60, 62, 110, 213, 221, 267], "finitehandl": 32, "r7": 32, "infinitepred": 32, "infinitehandl": 32, "symmetricpred": 32, "transpos": [32, 35, 85, 87, 90, 104, 134, 150, 177, 185, 190, 196, 214, 222, 227, 228, 273], "symmetrichandl": 32, "r8": 32, "symmetric_matrix": 32, "invertiblepred": 32, "fullrank": [32, 36], "invertiblehandl": 32, "r9": 32, "invertible_matrix": 32, "orthogonalpred": 32, "tm": [32, 140], "mm": [32, 35, 94, 112, 119, 124, 125, 165, 190], "orthogonalhandl": 32, "r10": 32, "orthogonal_matrix": 32, "unitarypred": 32, "unitaryhandl": 32, "r11": 32, "unitary_matrix": 32, "positivedefinitepred": 32, "tmz": 32, "column": [32, 35, 36, 37, 82, 84, 85, 87, 90, 91, 93, 104, 112, 116, 119, 132, 162, 169, 177, 181, 186, 190, 196, 201, 217, 220, 226, 246], "positive_definit": 32, "positivedefinitehandl": 32, "r12": 32, "definite_matrix": 32, "uppertriangularpred": 32, "m_": [32, 130, 194], "ij": [32, 167, 172, 221], "zeromatrix": [32, 87], "upper_triangular": [32, 85], "uppertriangularhandl": 32, "r13": 32, "uppertriangularmatrix": 32, "lowertriangularpred": 32, "lower_triangular": [32, 85], "lowertriangularhandl": 32, "r14": 32, "lowertriangularmatrix": 32, "diagonalpred": 32, "diagonalhandl": 32, "r15": 32, "diagonal_matrix": 32, "fullrankpred": 32, "row": [32, 35, 36, 37, 43, 46, 54, 59, 85, 86, 87, 90, 91, 93, 94, 104, 116, 117, 119, 132, 134, 135, 162, 177, 185, 190, 196, 201, 211, 220, 221, 226, 240, 246, 247], "linearli": [32, 36, 62, 78, 90, 194, 217, 219, 227], "fullrankhandl": 32, "squarepred": 32, "squarehandl": 32, "r16": 32, "square_matrix": 32, "integerelementspred": 32, "integer_el": 32, "integerelementshandl": 32, "realelementspred": 32, "real_el": 32, "realelementshandl": 32, "complexelementspred": 32, "complex_el": 32, "complexelementshandl": 32, "singularpred": 32, "singularhandl": 32, "fore": 32, "r17": 32, "singularmatrix": 32, "normalpred": 32, "normalhandl": 32, "r18": 32, "normal_matrix": 32, "triangularpred": 32, "triangularhandl": 32, "r19": 32, "triangular_matrix": 32, "unittriangularpred": 32, "unit_triangular": 32, "unittriangularhandl": 32, "evenpred": 32, "evenhandl": 32, "oddpred": 32, "oddhandl": 32, "primehandl": 32, "subject": [32, 64, 70, 98, 108, 135, 196], "compositepred": 32, "compositehandl": 32, "positivepred": 32, "positivehandl": 32, "negativepred": 32, "negativehandl": 32, "zeropred": 32, "zerohandl": 32, "nonzeropred": 32, "nonzerohandl": 32, "nonpositivepred": 32, "nonpositivehandl": 32, "nonnegativepred": 32, "nonnegativehandl": 32, "integerpred": 32, "integerhandl": 32, "r20": 32, "rationalpred": 32, "rationalhandl": 32, "r21": 32, "irrationalpred": 32, "ratio": [32, 44, 45, 53, 54, 58, 59, 62, 64, 67, 68, 69, 70, 86, 94, 104, 140, 172, 201, 210, 213, 219], "irrationalhandl": 32, "r22": 32, "realpred": 32, "disjoint": [32, 35, 43, 46, 197, 209, 239], "realhandl": 32, "r23": 32, "extendedrealpred": 32, "extendedrealhandl": 32, "hermitianpred": 32, "hermitianhandl": 32, "r24": 32, "hermitianoper": [32, 156], "complexpred": 32, "complexhandl": 32, "r25": 32, "imaginarypred": 32, "imaginaryhandl": 32, "r26": 32, "antihermitianpred": 32, "antihermitianhandl": 32, "r27": 32, "algebraicpred": 32, "askalgebraicpredicatehandl": 32, "r28": 32, "algebraichandl": 32, "transcendentalpred": 32, "transcedent": 32, "refine_pow": 33, "refine_ab": 33, "refine_arg": 33, "refine_atan2": 33, "refine_im": 33, "refine_matrixel": 33, "refine_r": 33, "refine_sign": 33, "lagrang": [34, 54, 111, 123, 127, 197, 214], "lagrangian": [34, 112, 121, 126, 127, 130, 131], "euler_equ": 34, "r29": 34, "93lagrange_equ": 34, "decreas": [34, 36, 46, 194], "monoton": [34, 36, 71], "is_decreas": 34, "lopen": [34, 54, 209, 216, 221], "ropen": [34, 60, 209, 221], "is_increas": 34, "72": [34, 54, 67, 90, 94, 97, 186, 200], "is_monoton": 34, "is_strictly_decreas": 34, "is_strictly_increas": 34, "monotonicity_help": 34, "held": [34, 55, 131, 225, 277], "r30": 34, "mathematical_singular": 34, "interpol": [34, 59, 63, 134, 194, 197], "finite_diff_weight": [34, 54, 267], "apply_finite_diff": [34, 54, 267], "differentiate_finit": [34, 54, 267], "finite_diff": [34, 54], "x_list": [34, 267], "y_list": [34, 267], "cube": [34, 36, 38, 45, 47, 60, 81, 194, 195, 214, 220, 255], "xlist": 34, "55271367880050e": 34, "indexedbas": [34, 36, 53, 54, 201, 219, 225, 226, 233], "idx": [34, 36, 201, 225, 226, 233], "zip": [34, 44, 55, 84, 94, 197, 207, 214, 217, 236, 239], "region": [34, 62, 71, 81, 187, 209, 217, 220, 221, 246, 248, 255], "bewar": [34, 62], "phenomenon": [34, 172, 194, 204, 272], "90": [34, 45, 52, 62, 85, 90, 96, 97, 100, 108, 117, 135, 201, 203, 213, 221, 234], "finitediff": 34, "wrt": [34, 36, 54, 56, 62, 71, 90, 117, 134, 177, 178, 194, 197, 246, 247, 248, 252], "len": [34, 42, 43, 44, 45, 46, 50, 52, 54, 55, 59, 62, 69, 79, 84, 121, 136, 140, 151, 161, 197, 213, 217, 226, 239], "nearest": [34, 196], "furthest": [34, 55], "sublist": [34, 50, 55, 81, 164, 267], "fd": [34, 36, 167], "0th": [34, 46, 55, 62], "1st": [34, 46, 94, 104, 217, 218, 242, 267], "classic": [34, 60, 62, 90, 153, 169, 177, 185, 188, 262], "forward": [34, 36, 85, 104, 119, 127, 160, 184, 213, 232], "pai": 34, "attent": [34, 45, 60], "gridpoint": 34, "plan": [34, 108, 192, 215, 276], "mycoeff": 34, "3rd": [34, 46, 60, 94, 134, 197, 219, 222, 239], "2nd": [34, 46, 55, 94, 104, 134, 217, 222, 239], "cost": [34, 36, 94, 121, 220, 271], "poorer": 34, "grand": 34, "r31": 34, "51": [34, 90, 94], "184": [34, 217], "1988": [34, 146, 164, 194, 195], "699": 34, "706": [34, 90], "1090": [34, 197], "s0025": [34, 94], "5718": [34, 94], "0935077": 34, "continuous_domain": [34, 216], "tan": [34, 54, 59, 61, 81, 96, 110, 124, 125, 126, 131, 198, 200, 201, 208, 210, 217, 220, 277], "function_rang": 34, "is_convex": [34, 70], "sym": [34, 44, 45, 50, 54, 59, 177, 201, 204, 209, 213, 214, 219, 221, 227, 239, 277], "convex": [34, 70, 71, 81], "unspecifi": [34, 54, 69, 267], "multivari": [34, 54, 62, 188, 189, 191, 192, 193, 195, 197, 198, 208, 213, 219, 220, 221, 277], "concav": [34, 136], "r32": 34, "convex_funct": 34, "r33": 34, "ifp": 34, "illinoi": 34, "edu": [34, 38, 45, 46, 55, 57, 59, 81, 90, 94, 195, 200, 210, 213, 214, 217, 221, 246], "angelia": 34, "l3_convfunc": 34, "r34": 34, "logarithmically_convex_funct": 34, "r35": 34, "logarithmically_concave_funct": 34, "r36": 34, "concave_funct": 34, "lcim": 34, "mixtur": [34, 36, 71, 188, 234], "incommensur": 34, "not_empty_in": [34, 220], "finset_intersect": 34, "finite_set": [34, 209], "tracker": [34, 209, 220, 273], "aperiod": 34, "smallest": [34, 48, 60, 67, 69, 76, 84, 90, 94, 164, 177, 192, 237, 239], "verif": [34, 190, 219], "reliabl": [34, 54, 217, 237, 267], "henc": [34, 36, 44, 45, 54, 56, 60, 62, 66, 79, 82, 84, 94, 100, 182, 187, 188, 189, 194, 201, 211, 214, 218, 220, 232, 236, 250, 251, 252, 272, 277], "stationary_point": 34, "stationari": [34, 221], "tikz": 35, "joyofcat": 35, "adamek": 35, "herrlich": 35, "strecker": 35, "joi": 35, "cat": [35, 176], "book": [35, 45, 55, 60, 112, 117, 120, 128, 132, 133, 152, 195, 200, 201, 270], "katmat": 35, "uni": [35, 81, 239], "bremen": 35, "de": [35, 55, 59, 94, 172, 186, 187, 198, 203, 214, 215, 217, 239], "acc": [35, 134, 180, 184], "embryon": 35, "morphism": [35, 188], "codomain": [35, 188, 196], "arrow": [35, 83, 97, 187, 201], "namedmorph": 35, "prohibit": [35, 46, 47, 177], "identitymorph": 35, "compositemorph": 35, "compos": [35, 54, 55, 121, 131, 169, 171, 172, 184, 188, 192, 196, 197, 198, 201, 203, 213], "circ": [35, 54, 65, 71, 79, 87], "compon": [35, 36, 50, 54, 56, 69, 81, 87, 90, 105, 114, 127, 132, 139, 164, 169, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 199, 221, 223, 226, 227, 236, 239, 246, 248, 251, 252], "new_nam": 35, "forget": [35, 277], "id_a": 35, "id_b": 35, "commutative_diagram": 35, "quadrupl": [35, 197], "mbox": 35, "hom": 35, "id": [35, 50, 60], "rightarrow": [35, 46, 50, 55, 59, 60, 62, 76, 77, 79, 81, 84, 85, 94, 187, 196, 208, 220, 239, 267], "monoid": 35, "pare1970": 35, "accompani": 35, "premis": 35, "conclus": [35, 54], "carri": [35, 36, 54, 159, 165, 172, 188, 191, 194, 196, 198, 199, 240], "premises_kei": 35, "et": [35, 81, 146, 194, 197, 198, 210, 213], "pareigi": 35, "functor": 35, "1970": [35, 90], "is_subdiagram": 35, "subdiagram": 35, "d1": [35, 50, 177, 188, 208, 221, 246], "subdiagram_from_object": 35, "veryuniqu": 35, "diagram_draw": 35, "diagramgrid": 35, "analys": [35, 102, 104, 134, 221], "drawn": [35, 45, 83, 187, 191, 199], "moprhism": 35, "strive": 35, "nevertheless": 35, "laid": [35, 117, 164], "width": [35, 36, 82, 181, 187, 197, 201, 232], "height": [35, 36, 70, 87, 136, 187, 188, 201, 208, 255], "emploi": [35, 53, 58, 81, 94, 197, 200, 215, 217, 221], "lai": 35, "layout": 35, "sequenti": [35, 38, 55, 60, 246, 247], "test_draw": 35, "five": [35, 43, 79, 100, 201, 214], "lemma": [35, 45, 79, 189], "fivelemma": 35, "five_lemma": 35, "arrowstringdescript": 35, "curving_amount": 35, "looping_start": 35, "looping_end": 35, "horizontal_direct": 35, "vertical_direct": 35, "label_posit": 35, "pic": 35, "princip": [35, 55, 60, 62, 79, 81, 91, 106, 119, 140, 188, 189, 190, 191, 192, 194, 196, 197, 198], "offset": [35, 36, 54, 59, 62, 226], "cell": 35, "vertic": [35, 38, 47, 48, 64, 65, 67, 69, 70, 71, 81, 83, 85, 90, 98, 116, 122, 139, 147, 186, 187, 190, 196, 201, 209, 239, 255], "disregard": 35, "unexplain": 35, "astr": 35, "dr": [35, 56, 201, 217], "12mm": 35, "loop": [35, 36, 94, 104, 120, 177, 187, 198, 201, 217, 236, 239, 272], "correspondingli": 35, "label_displac": 35, "arrow_styl": 35, "dash": 35, "xypicdiagramdraw": 35, "formatt": 35, "utilis": 35, "xypic": 35, "drawer": 35, "xymatrix": 35, "ld": 35, "arrow_formatt": 35, "therebi": 35, "default_arrow_formatt": 35, "farther": 35, "centr": [35, 51, 187], "default_formatt": 35, "45": [35, 54, 59, 70, 90, 94, 100, 197, 198, 214], "_3mm": 35, "default_curving_amount": 35, "cm": [35, 134, 221], "_1cm": 35, "default_curving_step": 35, "h1": [35, 114], "1cm": 35, "rr": [35, 54, 72, 190, 191, 193, 197, 198], "h_": [35, 45, 50, 59, 62, 81], "_2cm": 35, "mask": [35, 201], "diagram_format": 35, "proceed": [35, 37, 79, 81, 133, 195, 211], "xypic_draw_diagram": 35, "shortcut": [35, 54, 86, 185, 201, 209, 213, 277], "insert": [35, 37, 85, 96, 97, 162, 167, 201, 221, 242], "preview_diagram": 35, "png": [35, 82, 90, 97, 98, 102, 181, 187, 201, 204], "brief": [36, 220, 232, 254], "fab": [36, 201], "cse_main": [36, 202, 213], "cse": [36, 95, 108, 156, 202, 234, 240], "meat": 36, "lightweight": [36, 196, 271], "pycod": [36, 201], "lambdarepr": [36, 201, 240], "aesara_funct": [36, 95, 201], "float80": [36, 201], "assign_to": [36, 201], "type_alias": [36, 201], "0l": [36, 201], "powl": [36, 201], "c99": [36, 201, 234], "expm1": [36, 201], "ternari": [36, 54, 201, 214], "thrown": [36, 201], "fcode": [36, 201], "contract": [36, 56, 105, 167, 201, 210, 223, 224, 225, 226, 227, 228], "len_i": [36, 201], "mat_1": 36, "mat_2": 36, "jscode": [36, 201], "user_funct": [36, 201], "argument_test": [36, 201], "cfunction_str": [36, 201], "octav": [36, 134, 234, 264], "custom_funct": [36, 201], "existing_octave_fcn": [36, 201], "is_matrix": [36, 201], "my_mat_fcn": [36, 201], "my_fcn": [36, 201], "mat": [36, 87, 136, 161, 201], "octave_cod": [36, 201], "summat": [36, 53, 54, 58, 59, 62, 167, 195, 197, 201, 204, 213, 221, 222, 225, 226, 227, 233], "mathematica_cod": [36, 201], "g1": [36, 39, 44, 45, 79, 90, 104], "g2": [36, 39, 44, 45, 79, 83, 90, 104], "gamma_1": [36, 107], "gamma_2": [36, 107], "\u03b3\u2081": 36, "\u03b3\u2082": 36, "\u03b2": [36, 186], "h_i": [36, 50], "c89": [36, 201, 234], "julia_cod": [36, 201], "rust_cod": [36, 201], "powi": [36, 201], "make_routin": [36, 234], "f95": [36, 233, 234], "matlab": [36, 108, 134, 234, 264, 273], "breadth": [36, 54, 221], "c_name": [36, 234], "c_code": [36, 234], "h_name": [36, 234], "c_header": [36, 234], "volume_result": 36, "ifndef": [36, 234], "project__test__h": [36, 234], "endif": [36, 234], "preprocessor": [36, 202, 213, 234], "global_var": [36, 234], "insensit": [36, 90, 134, 201, 232, 234], "argument_sequ": [36, 234], "routin": [36, 43, 53, 54, 55, 56, 79, 84, 85, 90, 94, 139, 167, 190, 194, 197, 200, 201, 202, 213, 214, 217, 218, 219, 220, 233, 238, 239, 252], "name_expr": [36, 234], "to_fil": [36, 234], "f_name": [36, 234], "f_code": [36, 234], "choic": [36, 46, 59, 62, 79, 81, 95, 131, 163, 172, 176, 177, 184, 192, 194, 197, 201, 213, 217, 239, 271], "hydrogen": [36, 262], "r_nl": [36, 106, 168], "my_routin": 36, "result_var": [36, 234], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 36, "__________": [36, 189], "\u212f": [36, 139, 186, 201, 267, 271, 273, 277, 278], "assoc_laguerr": [36, 62, 201], "fcn": [36, 234], "result_5397460570204848505": [36, 234], "out_8598435338387848786": [36, 234], "examin": [36, 55, 156, 232, 234, 277], "inputargu": [36, 234], "outputargu": [36, 234], "inoutargu": [36, 234], "disk": [36, 55, 209, 220, 240], "binary_funct": [36, 95, 233], "tensor": [36, 41, 56, 61, 90, 105, 114, 132, 146, 152, 153, 154, 164, 167, 176, 177, 201, 222, 223, 225, 226, 233, 240, 249, 250, 256, 260], "binary_func": [36, 233], "servic": [36, 221], "tempdir": [36, 233], "qho_1d": [36, 143], "psi_n": [36, 143], "y_": [36, 62, 79, 106, 186], "qho": 36, "tmp": 36, "reveal": [36, 94, 220, 272], "subroutin": [36, 45, 163, 194], "autofunc": 36, "dimens": [36, 38, 55, 56, 62, 63, 65, 67, 68, 69, 71, 83, 85, 87, 90, 93, 97, 105, 121, 141, 151, 153, 156, 161, 170, 171, 174, 175, 177, 187, 190, 201, 214, 217, 219, 221, 222, 226, 227, 234, 246, 248, 250, 262], "hbar": [36, 143, 149, 162, 168, 172, 174, 186], "05457162d": 36, "14159265358979d0": 36, "0d0": [36, 201], "74126166983329d": 36, "33": [36, 54, 57, 90, 132, 140, 194, 198, 201, 221], "verbos": [36, 54, 85, 94, 201, 232, 233, 276], "mute": [36, 233], "backend": [36, 82, 95, 96, 102, 120, 122, 128, 181, 198, 233, 240, 263], "auxiliari": [36, 81, 112, 117, 129, 217, 233], "function_nam": [36, 233], "sympy_express": [36, 233], "mandatori": [36, 201, 233], "illustr": [36, 90, 118, 121, 172, 191, 204, 208], "psi_nl": 36, "766": 36, "incur": [36, 95], "get_numpy_arrai": 36, "tight": 36, "temp": [36, 119], "alloc": [36, 60], "fuse": 36, "wise": [36, 37, 60, 85, 190, 194, 201, 207, 233], "unabl": [36, 67, 71, 96, 219, 246, 266, 267], "fortun": [36, 95, 121, 197, 198], "reconnect": 36, "autom": [36, 60, 95, 210, 233, 271], "ideologi": [36, 220], "fashion": [36, 54, 60, 87, 119, 129, 130, 132, 185, 188, 239], "broadcast": [36, 95, 201, 226, 233], "outperform": 36, "jensen": 36, "quantit": [36, 169], "leverag": [36, 95, 201], "ufunc": [36, 95, 233, 240], "fn_numpi": 36, "fn_fortran": 36, "linspac": [36, 77, 95, 117, 134], "xx": [36, 90, 114, 185, 239], "21306132": 36, "98101184": 36, "44626032": 36, "timeit": [36, 198], "10000": [36, 58, 94, 95, 97, 219], "18891601900395472": 36, "004707066000264604": 36, "facil": 36, "comparison": [36, 53, 54, 84, 90, 117, 188, 196, 200, 219, 232, 239], "thereof": [36, 54, 188, 194, 196], "optims_c99": 36, "log1p": [36, 201], "expm1_opt": 36, "log1p_opt": 36, "exp2_opt": 36, "log2_opt": 36, "log2const_opt": 36, "funcminusoneoptim": 36, "func_m_1": 36, "opportunist": 36, "replaceoptim": 36, "catastroph": 36, "replace_in_add": 36, "cost_funct": 36, "prioriti": [36, 77, 108, 117, 185, 240], "__call__": [36, 46, 54, 196], "exp2": [36, 201], "create_expand_pow_optim": 36, "base_req": 36, "is_symbol": [36, 85], "expand_opt": 36, "opt2": 36, "is_funct": 36, "log2": [36, 62, 201], "matin_opt": 36, "matinv_opt": 36, "matrixsolv": [36, 201], "matrix_nod": 36, "numpyprint": 36, "doprint": [36, 201], "linalg": 36, "seriesapprox": 36, "reltol": 36, "max_ord": 36, "n_point_check": 36, "threshold": [36, 94], "largest": [36, 46, 48, 54, 60, 62, 90, 93, 94, 147, 188, 192, 219, 239], "series_approx2": 36, "1e": [36, 54, 58, 90, 102, 136, 197, 219], "series_approx3": 36, "series_approx8": 36, "sumapprox": 36, "neglect": 36, "2000": [36, 40, 81, 94, 195], "sum_approx3": 36, "sum_approx2": 36, "sum_approx1": 36, "token": [36, 79, 82, 96], "diagram": [36, 43, 83, 97, 120, 121, 122, 127, 147, 226, 250, 263, 272], "codegenast": 36, "assignmentbas": 36, "augmentedassign": 36, "addaugmentedassign": 36, "subaugmentedassign": 36, "mulaugmentedassign": 36, "divaugmentedassign": 36, "modaugmentedassign": 36, "codeblock": [36, 96], "quotedstr": 36, "intbasetyp": 36, "_sizedinttyp": 36, "signedinttyp": 36, "unsignedinttyp": 36, "floatbasetyp": 36, "floattyp": 36, "complexbasetyp": 36, "complextyp": 36, "pointer": [36, 234, 235], "functionprototyp": 36, "functiondefinit": [36, 96], "stream": [36, 55, 202, 213, 239], "functioncal": 36, "breaktoken": 36, "continuetoken": 36, "nonetoken": 36, "float32": [36, 95, 96, 240], "float64": [36, 95, 221], "codeprint": 36, "complex_": 36, "bool_": 36, "intc": [36, 96], "intp": 36, "unsign": [36, 59, 213], "int8": 36, "int16": 36, "int32": 36, "int64": [36, 221], "uint8": 36, "uint16": 36, "uint32": 36, "uint64": 36, "x86": 36, "amd64": 36, "complex64": 36, "complex128": 36, "newton": [36, 62, 127, 170, 174, 194, 198], "aug_assign": 36, "tol": [36, 54, 192], "val": [36, 54, 66, 192, 196, 240], "whl": 36, "py_str": 36, "inf": [36, 46, 54, 90, 192, 197, 209, 217, 221], "exec": [36, 54, 82, 240], "1121416371": 36, "909672693737": 36, "867263818209": 36, "865477135298": 36, "865474033111": 36, "1g": 36, "3e": 36, "2003": [36, 186, 195, 201, 214], "source_format": [36, 201], "align": [36, 64, 90, 111, 128, 185, 186, 201, 219, 232], "op": [36, 54, 90, 156, 167, 180, 184, 210, 239, 240], "parametr": [36, 62, 63, 67, 90, 187, 214, 220, 246, 248, 255], "volatil": 36, "binop": 36, "exit": [36, 94, 232], "premad": 36, "break_": 36, "lift": [36, 50, 60, 62, 79, 192, 194, 197], "left_hand_sid": 36, "topological_sort": [36, 239], "postprocess": [36, 197, 202, 213], "topolog": [36, 54, 56, 190, 239], "continue_": 36, "untyp": 36, "compliant": 36, "ok": [36, 46, 201, 217], "elem": [36, 45, 188], "ijk": [36, 226], "stride": [36, 226], "lmn": 36, "cast_nocheck": 36, "alia": [36, 47, 54, 64, 70, 85, 86, 88, 92, 151, 160, 167, 188, 191, 192, 196, 200, 209, 232, 242, 277], "nbit": 36, "storag": [36, 54, 90, 161, 186, 194], "nmant": 36, "mantissa": 36, "nexp": 36, "half_precis": 36, "f16": 36, "65504": 36, "tini": [36, 54], "ep": [36, 45, 53, 192, 196, 197], "decimal_dig": 36, "cast_check": 36, "1e5": 36, "cast": [36, 87, 269], "subnorm": [36, 45], "idempot": 36, "loos": [36, 54, 212], "overflow": [36, 236], "max_expon": 36, "min_expon": 36, "for_i": 36, "for_ji": 36, "for_kji": 36, "function_arg": [36, 232], "fcall": 36, "bar": [36, 62, 118, 127, 156, 162, 242], "baz": 36, "return_typ": 36, "fp": [36, 37, 54, 197, 203], "from_functionprototyp": 36, "prototyp": [36, 95, 234], "value_const": 36, "pointer_const": 36, "attr_param": 36, "looking_for": 36, "as_declar": 36, "formatstr": 36, "5g": 36, "stdout": [36, 232], "stderr": 36, "oppos": [36, 240, 267], "_field": 36, "_construct_": 36, "not_in_arg": 36, "float16": 36, "inttyp": 36, "super": [36, 62, 192, 201, 246, 247], "from_expr": [36, 197], "toler": [36, 54, 58, 192, 213, 219], "42": [36, 43, 54, 57, 59, 67, 68, 70, 85, 86, 88, 90, 92, 94, 192, 197, 214, 232], "v6": 36, "123456": [36, 54, 94], "v10": 36, "12345": [36, 58], "67894": 36, "boost_mp50": 36, "boost": 36, "multiprecis": [36, 191], "cpp_dec_float_50": 36, "r37": 36, "rtol": 36, "atol": 36, "precision_target": 36, "v18": 36, "123456789012345646": 36, "123456789012345649": 36, "Will": [36, 90, 96, 196, 201, 232], "decl1": 36, "decl2": 36, "alt": 36, "secondarili": [36, 197], "mathcin": 36, "cbrt": [36, 61, 201], "minu": [36, 53, 54, 182, 194, 201, 252], "0e": [36, 54], "fma": [36, 201], "cpu": [36, 95, 134], "hypot": [36, 201], "hypotenus": [36, 70], "log10": [36, 201], "ten": [36, 95], "plu": [36, 53, 90, 96, 134, 147, 197, 201, 211, 240], "famili": [36, 38, 72, 81, 189], "commaoper": 36, "goto": 36, "preincrement": 36, "postdecr": 36, "decrement": [36, 212, 236], "postincr": 36, "increment": [36, 45, 46, 47, 53, 70, 94, 212, 221], "predecr": 36, "alignof": 36, "sizeof": 36, "struct": 36, "dsign": 36, "arrayconstructor": 36, "ac": [36, 46, 66, 100, 114, 132, 144, 214, 221, 239, 242], "95": [36, 52, 94, 194, 201, 217, 219, 234], "do1": 36, "1d0": 36, "do2": 36, "extent": 36, "intent_out": 36, "dim": [36, 56, 69, 95, 169, 175, 201, 224, 227], "arr": 36, "fortranreturn": 36, "aid": [36, 119], "implieddoloop": 36, "idl": 36, "signallib": 36, "prog": [36, 146], "myprogram": 36, "mysub": 36, "subroutinecal": 36, "passs": 36, "inout": 36, "bind_c": 36, "sum_": [36, 53, 54, 55, 59, 62, 79, 81, 85, 87, 94, 197, 198, 203, 204, 211, 217, 221], "cmplx": [36, 201], "intent_in": 36, "intrins": 36, "isign": 36, "lbound": 36, "lb": [36, 76, 236], "literal_dp": 36, "num": [36, 45, 54, 94, 104, 192, 213, 217, 236, 242], "literal_sp": 36, "reshap": [36, 85, 117, 134, 222, 228, 239], "arrayexpr": 36, "shp": 36, "metric": [36, 46, 50, 56, 105, 213, 217, 220, 227], "snr": 36, "convolution2d": 36, "use_renam": 36, "ren": 36, "thingi": 36, "newtons_method": 36, "itermax": 36, "counter": [36, 54, 60, 66, 85, 98, 100], "raphson": 36, "criterion": [36, 45, 133, 189, 194], "netwon": 36, "algo": [36, 46], "r38": 36, "27s_method": 36, "newtons_method_funct": 36, "param": [36, 56, 90, 214], "render_as_modul": 36, "py_mod": 36, "865474033102": 36, "render_as_source_fil": 36, "printer_set": 36, "fcodeprint": [36, 201], "fpgroup": [37, 45], "studi": [37, 44, 53, 56, 90, 185, 188, 194, 197, 214, 221], "combinator": [37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 87, 94, 203, 222, 227, 236, 239, 257, 271, 277], "free_group": [37, 44, 45], "vfree_group": 37, "xfree_group": 37, "fp_group": [37, 45], "coset_enumeration_r": 37, "fall": [37, 53, 54, 59, 82, 181, 196, 201, 214, 218, 221], "famou": [37, 62, 81, 94, 214], "langl": [37, 45, 146, 186], "rangl": [37, 45, 146, 164, 186], "gen0": 37, "gen1": 37, "gen_": 37, "freegroup": 37, "x_2": [37, 44, 59, 76, 162, 189, 194, 197, 203, 214, 220], "x_3": [37, 44, 76, 162], "s_1": 37, "r_1": [37, 188, 198], "s_2": 37, "r_2": 37, "s_k": 37, "r_k": [37, 160], "s_i": [37, 50, 81, 83], "r_i": [37, 198], "reduct": [37, 90, 113, 194, 196, 212, 214], "ho05": [37, 44], "cdhw73": 37, "hav91": 37, "coset_enumeration_c": 37, "coset_enumer": 37, "relator_bas": 37, "coset_table_bas": 37, "influenc": [37, 97, 188, 189], "coset_table_max_limit": 37, "4096000": 37, "safeti": [37, 46, 88], "max_coset": 37, "cox": [37, 195, 197], "c_r": [37, 211], "50": [37, 45, 57, 58, 59, 62, 70, 90, 94, 97, 98, 140, 197, 201, 210, 219], "max_stack_s": 37, "500": [37, 58, 114], "deduction_stack": 37, "stack": [37, 71, 85, 134, 190, 196, 201, 230, 236, 273], "occurr": [37, 54, 94, 117, 177, 213, 221], "exce": [37, 94, 227], "modest": 37, "low_index_subgroup": 37, "conjugaci": [37, 45], "coset_t": [37, 45], "reidemeister_present": 37, "y_1": [37, 214, 221], "y_2": [37, 214, 221], "john": [37, 45, 62, 197, 214, 217], "cannon": 37, "lucien": 37, "dimino": [37, 45], "georg": [37, 188, 217, 239], "hava": 37, "jane": 37, "watson": [37, 213], "comp": [37, 217], "463": [37, 133], "490": [37, 46], "1973": [37, 55, 183], "derek": [37, 44], "holt": [37, 44, 45, 52], "chapman": [37, 44], "hall": [37, 44, 221], "crc": [37, 44, 46], "2005": [37, 44, 81, 94, 197], "xvi": [37, 44], "514": [37, 44, 195], "symposium": [37, 79, 194, 195, 211], "issac": [37, 81, 195, 219], "bonn": 37, "1991": [37, 195], "191": [37, 220], "199": 37, "acm": [37, 53, 79, 81, 195, 211, 217, 219], "graycod": 38, "kw_arg": [38, 48, 167, 226, 227], "hamiltonian": [38, 158], "edg": [38, 47, 48, 83, 190, 201, 220, 239, 276], "hamilton": [38, 85], "vertex": [38, 48, 65, 70, 81, 190], "000": [38, 58, 81, 84, 161, 239], "110": [38, 84, 217, 219, 233, 239], "010": [38, 84, 239], "011": [38, 84, 161, 239], "111": [38, 57, 64, 84, 94, 239], "101": [38, 62, 84, 94, 161, 239], "001": [38, 58, 84, 136, 239], "delet": [38, 83, 85, 90, 198, 242, 277], "statist": [38, 55, 62, 221, 232, 271], "manner": [38, 55, 62, 131, 165, 182, 214, 217, 222, 239, 254], "generate_grai": 38, "0000": 38, "0001": [38, 58], "0011": [38, 49], "0010": 38, "0110": 38, "0111": [38, 161], "0101": [38, 161], "0100": 38, "1100": 38, "1101": 38, "1111": 38, "1110": 38, "1010": 38, "1011": 38, "1001": 38, "r39": 38, "nijenhui": 38, "wilf": [38, 53, 219], "1978": [38, 45, 172, 195], "r40": 38, "knuth": [38, 46, 236], "2011": [38, 46, 79, 94, 183, 210], "art": [38, 46, 188, 201, 203, 236, 263], "vol": [38, 46, 55, 59, 62, 79, 90, 105, 196, 197, 211, 236, 239], "addison": [38, 46, 94, 195], "weslei": [38, 46, 94, 195], "r41": 38, "brgc": 38, "6th": [38, 94], "unrank": [38, 43, 45, 46, 48], "r42": 38, "statweb": 38, "stanford": 38, "susan": 38, "s208": 38, "node12": 38, "tail": [38, 53, 54, 192, 221], "00010": 38, "random_bitstr": 38, "bitlist": [38, 49], "gray_to_bin": 38, "endian": 38, "bin_to_grai": 38, "get_subset_from_bitstr": 38, "bitstr": 38, "graycode_subset": 38, "group_construct": 39, "directproduct": [39, 42], "__mul__": [39, 45, 85, 90, 192, 196], "shift": [39, 45, 46, 48, 55, 62, 65, 69, 71, 84, 187, 192, 194, 197, 204, 211, 219, 221], "gn": 39, "named_group": [39, 42, 44, 45, 51, 52], "cyclicgroup": [39, 42, 45], "perm_group": [39, 44, 45, 46, 51, 52], "permutationgroup": [39, 42, 44, 45, 46, 51, 52], "group_numb": 40, "is_nilpotent_numb": 40, "r43": 40, "randprim": [40, 94], "pakianathan": 40, "shankar": 40, "monthli": [40, 55, 90], "107": [40, 195], "631": 40, "634": 40, "is_abelian_numb": 40, "r44": 40, "is_cyclic_numb": 40, "r45": 40, "polyhedron": [41, 45, 81, 239], "prufer": 41, "grai": [41, 49, 82, 136, 181, 187], "nilpot": [41, 45, 90], "abelian": [41, 42, 45, 83, 172, 188], "cyclic": [41, 42, 45, 46, 47, 57, 85, 94, 227, 239], "coset": [41, 45, 50, 196], "todd": 41, "coxet": [41, 83], "subgroup": [41, 45, 46, 50, 52, 83, 94], "bibliographi": 41, "polycycl": [41, 45], "collector": 41, "symmetricgroup": [42, 44, 45, 51, 52], "transposit": [42, 45, 46, 55, 85, 87, 223], "is_group": [42, 45], "generate_schreier_sim": [42, 45], "af": [42, 45, 51, 134], "dihedralgroup": [42, 45, 52], "alternatinggroup": [42, 45, 51], "r46": 42, "symmetric_group": 42, "generators_and_rel": 42, "dihedr": [42, 46], "d_n": [42, 83, 197], "gon": 42, "bab": 42, "generate_dimino": [42, 45], "perm": [42, 44, 45, 46, 47, 52, 59, 85, 87, 90, 222], "cyclic_form": [42, 46, 47], "r47": 42, "dihedral_group": 42, "31": [42, 54, 57, 58, 70, 94, 132, 186, 197, 214], "ex": [42, 81, 105, 116, 191, 193, 196, 197, 227, 235], "r48": 42, "armstrong": 42, "abeliangroup": [42, 45], "cyclic_ord": 42, "r49": 42, "groupprop": [42, 45], "subwiki": [42, 45], "structure_theorem_for_finitely_generated_abelian_group": 42, "multiset_partit": [43, 59, 79, 236, 239], "rg": 43, "growth": [43, 94, 194, 267], "from_rg": 43, "abcd": [43, 47, 167, 239, 242], "cbead": 43, "sort_kei": [43, 54, 217], "ti": [43, 46, 54, 94], "integerpartit": [43, 239], "summand": [43, 196], "r50": 43, "partition_": [43, 59], "28number_theori": 43, "as_dict": [43, 191, 197], "as_ferr": 43, "char": 43, "ferrer": 43, "next_lex": [43, 46], "lexic": [43, 147, 239], "prev_lex": 43, "random_integer_partit": 43, "seed": [43, 45, 54, 55, 64, 67, 68, 90, 94, 194, 221, 232, 239], "85": [43, 58, 59, 90, 94, 119, 165, 186, 221], "rgs_gener": 43, "37": [43, 55, 60, 64, 90, 94, 98, 201, 214], "52": [43, 59, 94, 97, 98, 186, 200, 214, 217, 239, 267], "151": 43, "203": [43, 59], "rgs_enum": 43, "rgs_unrank": 43, "rgs_rank": 43, "pcgroup": 44, "pcg": 44, "pc_seri": [44, 45], "polycyl": 44, "pc_present": 44, "pc_sequenc": [44, 45], "miss": [44, 45, 71, 201, 219, 234, 277], "adjac": [44, 45, 46, 54, 59, 104, 139, 190, 239], "der": [44, 45], "relative_ord": [44, 45], "polycyclic_group": [44, 45], "gen": [44, 45, 50, 51, 52, 54, 90, 188, 191, 192, 194, 196, 197, 198, 199, 207, 213, 216, 219], "is_ident": [44, 46, 54], "poss": [44, 119, 185], "pc_group": 44, "a_j": [44, 62, 79, 172, 194, 203, 211], "notin": [44, 79, 209], "_order": 44, "minimal_uncollected_subword": 44, "subword_index": 44, "i_1": [44, 167, 197, 222], "a_1": [44, 45, 55, 62, 76, 79, 85, 90, 105, 167, 172, 189, 194, 211, 214, 217, 221, 277], "i_r": 44, "a_r": [44, 211], "i_2": [44, 167, 197], "s_": [44, 50, 117, 194], "s_j": [44, 83, 194], "x3": [44, 54, 59, 191, 217, 221], "collected_word": 44, "free_to_perm": 44, "bottom": [44, 45, 54, 55, 70, 85, 90, 93, 116, 196, 201, 210, 255], "pictur": [44, 201], "x_3x_2": 44, "x_3x_1": 44, "x_2x_1": 44, "x_3x_0": 44, "x_2x_0": 44, "x_1x_0": 44, "varii": 44, "derived_seri": [44, 45], "pc_resent": 44, "k_arrai": 44, "array_form": [44, 46, 47], "v_arrai": 44, "e_1": [44, 90, 188, 194, 197], "e_n": [44, 59, 83, 90, 143, 188, 197], "exponent_vector": 44, "leading_expon": 44, "dup": [45, 192, 193], "pn": [45, 121, 131], "motion": [45, 108, 111, 112, 113, 116, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 134, 135, 180, 181, 184, 185, 221], "front": [45, 54, 119, 120, 136, 166, 192, 194, 197, 201, 213, 277], "face": [45, 47, 67, 81, 117, 194, 198, 201, 214, 255, 273], "rubik": 45, "3674160": 45, "pgroup": [45, 47], "corner": [45, 47, 85, 197, 217, 220, 240], "reset": [45, 47, 187, 194, 197, 232, 235, 237], "p10": 45, "make_perm": 45, "r51": 45, "eick": [45, 52], "brien": [45, 52], "r52": 45, "seress": 45, "r53": 45, "schreier_vector": 45, "r54": 45, "nielsen_transform": 45, "product_replacement_algorithm": 45, "r55": 45, "frank": [45, 46, 90], "celler": 45, "charl": 45, "leedham": 45, "green": [45, 128, 187], "scott": 45, "murrai": 45, "alic": [45, 55], "niemey": 45, "r56": 45, "block_": 45, "28permutation_group_theori": 45, "r57": 45, "algorithmist": 45, "php": [45, 62, 94, 214, 221], "union_find": 45, "r58": 45, "multiply_transitive_group": 45, "r59": 45, "center_": 45, "28group_theori": 45, "centralizer_and_norm": 45, "derived_subgroup": 45, "nilpotent_group": 45, "colost": 45, "hulpk": 45, "cgt": 45, "cgtnote": 45, "__contains__": 45, "__weakref__": [45, 85], "weak": [45, 54, 85, 191, 194], "_coset_repres": 45, "hg": 45, "transvers": [45, 50, 52, 140, 141], "coset_transvers": 45, "_distinct_primes_lemma": 45, "_element": 45, "_eval_is_alt_sym_monte_carlo": 45, "05": [45, 76, 102, 183, 186], "mont": 45, "carlo": 45, "candidat": 45, "randomli": [45, 54, 55, 94, 161], "n_ep": 45, "_check_cycles_alt_sym": [45, 52], "_eval_is_alt_sym_na": 45, "only_sym": 45, "only_alt": 45, "_p_elements_group": 45, "_random_pr_init": 45, "_random_prec_n": 45, "modif": [45, 60, 90, 220, 221, 236], "69": [45, 90, 219, 236], "71": [45, 70, 90, 170], "_random_gen": 45, "append": [45, 54, 55, 90, 98, 134, 162, 187, 192, 201, 219, 222, 234, 235, 239, 277], "accumul": [45, 232, 236], "random_pr": 45, "chosen": [45, 46, 55, 56, 67, 68, 90, 94, 97, 111, 135, 169, 172, 187, 188, 192, 194, 196, 201, 208, 211, 217, 221, 232, 246], "gh": [45, 189, 220, 227], "eventu": [45, 62, 81, 187, 188, 208, 234, 239], "_sylow_alt_sym": 45, "sylow": 45, "p_1": [45, 50, 55, 72, 94, 184, 211, 214], "p_2": [45, 55, 72, 94, 184, 211], "p_p": 45, "sylow_subgroup": 45, "is_alt_sym": [45, 52], "_union_find_merg": 45, "parent": [45, 54, 77, 111, 128, 177, 180, 187, 191, 192, 196, 232, 236, 246, 249, 250], "not_rep": 45, "atkinson": 45, "83": [45, 200], "87": [45, 60, 90, 94], "minimal_block": 45, "_union_find_rep": 45, "r60": 45, "r66": 45, "compress": [45, 90, 93, 100], "r62": 45, "r68": [45, 46], "_verifi": 45, "_h": [45, 220], "gens_k": 45, "rels_k": 45, "gens_h": 45, "inject": [45, 54, 188, 192, 197, 273], "homomorph": [45, 193], "rels_h": 45, "strong_present": 45, "abelian_invari": 45, "isomorph": [45, 48, 188, 191, 194, 196], "t_1": [45, 59, 214], "t_2": [45, 59, 214], "t_r": [45, 132, 227], "542": 45, "adopt": [45, 227], "schreier": [45, 50, 52], "sim": [45, 50, 52, 79], "b_1": [45, 52, 62, 76, 79, 188, 211, 214, 217, 277], "b_2": [45, 52, 62, 76, 211, 217], "dot": [45, 46, 50, 52, 55, 67, 69, 76, 85, 90, 104, 119, 120, 121, 124, 125, 126, 129, 130, 131, 132, 134, 151, 177, 181, 183, 184, 185, 186, 188, 189, 194, 197, 201, 220, 221, 239, 246, 249, 251, 252], "b_k": [45, 52, 55, 59, 62, 203, 204], "strong": [45, 50, 51, 52, 94, 95], "89": [45, 52, 81], "55": [45, 57, 59, 90, 186, 187, 197, 214], "57": [45, 90, 94, 221], "strong_gen": [45, 51, 52], "basic_transvers": [45, 52], "basic_orbit": [45, 52], "basic_stabil": 45, "baseswap": 45, "po": [45, 79, 84, 85, 114, 132, 134, 192, 219], "strong_gens_distr": [45, 52], "swap": [45, 46, 47, 85, 90, 147, 151, 160, 221, 239], "orbit": [45, 52, 167, 168, 170], "b_": [45, 50, 52, 54, 59, 62, 79, 87, 104, 203, 211, 214, 222], "b_i": [45, 50, 52, 79, 188, 211], "la": [45, 134, 172], "vega": 45, "testutil": [45, 51, 52], "_verify_bsg": [45, 51, 52], "schreier_sim": [45, 51, 52], "bsg": [45, 50, 52, 227], "102": [45, 90], "98": [45, 55, 133, 197, 217], "pseudocod": 45, "beta_": 45, "g_": [45, 52, 53, 62, 79, 214], "foral": [45, 53, 56, 172], "zg": 45, "gz": 45, "c_g": 45, "sg": [45, 221, 227], "is_subgroup": 45, "subgroup_search": 45, "hgh": 45, "closur": [45, 51, 77, 147, 196, 209], "composition_seri": 45, "h_0": [45, 50], "h_1": [45, 50, 220], "h_2": [45, 220], "1024": [45, 201, 221], "512": [45, 62], "128": [45, 59, 62, 64, 94, 195, 201], "32": [45, 57, 60, 62, 64, 90, 94, 102, 132, 195, 197, 198, 210, 211, 214, 221, 232], "243": [45, 62, 219], "81": [45, 59, 64, 85, 90, 94, 117, 119, 186, 200], "conjugacy_class": 45, "xax": 45, "s_3": 45, "s3": [45, 53, 104, 204, 214], "feasibl": [45, 104], "resiz": [45, 46, 85, 87], "coset_factor": 45, "factor_index": 45, "_basic_orbit": 45, "u1": [45, 94, 117, 119, 120, 121, 122, 124, 125, 128, 129, 131, 134, 177, 179, 180, 181, 184, 217], "u2": [45, 93, 94, 117, 119, 120, 121, 122, 124, 125, 129, 134, 177, 180, 184, 217], "_strip": [45, 52], "coset_rank": 45, "lexicograph": [45, 46, 49, 50, 54, 194, 197, 239], "coset_unrank": 45, "standardis": [45, 191], "subsect": [45, 252], "compris": [45, 55, 87, 114, 132, 135, 197, 239], "g_0": [45, 214], "g_1": [45, 197, 208, 214, 217], "g_2": [45, 83, 208, 217], "g_i": [45, 208], "g_k": 45, "tetrahedron": [45, 47], "r64": 45, "axiom": [45, 188], "doy": 45, "sc": [45, 81], "thesi": [45, 54, 208, 246], "generator_product": 45, "sn": [45, 46, 53, 76], "is_abelian": 45, "_random_prec": 45, "probabl": [45, 54, 59, 62, 66, 94, 117, 161, 165, 211, 217, 220, 221, 233, 269, 275], "transit": [45, 134, 194, 221], "82": [45, 81, 90, 221], "proport": [45, 55, 208], "226": 45, "227": 45, "is_altern": 45, "quicker": [45, 94], "taxonomi": 45, "is_cycl": 45, "p_": [45, 50, 54, 81, 172, 214, 217, 222], "p_i": [45, 50, 94], "equiv": [45, 55, 59, 94, 196, 211, 214], "pmod": [45, 54, 55, 59, 90, 211], "p_j": [45, 50], "r65": 45, "35": [45, 48, 57, 59, 67, 68, 81, 90, 94, 119, 196, 201, 214, 217, 221], "rose": 45, "is_elementari": 45, "is_nilpot": [45, 90], "lower_central_seri": 45, "is_solv": 45, "is_norm": [45, 165], "gr": 45, "is_perfect": [45, 94], "is_polycycl": 45, "is_primit": [45, 192, 197], "cardin": [45, 46, 49, 188, 209], "badli": 45, "random_stab": 45, "g3": [45, 104], "s5": 45, "is_symmetr": [45, 85], "is_transit": 45, "is_trivi": 45, "cba": [45, 222, 239], "mainli": [45, 62, 90, 95, 172, 181, 194, 211, 214, 217], "max_div": 45, "siev": [45, 94], "nonempti": 45, "gb": 45, "moreov": [45, 55, 79, 171, 182, 188, 189, 194, 202, 250], "congruenc": [45, 54, 94, 211, 214], "p_0": [45, 50, 72, 211, 214], "maxim": [45, 55, 83, 188, 192, 196, 208, 210], "intransit": 45, "normal_closur": 45, "adjoin": [45, 189], "yx": [45, 185], "73": [45, 53, 54, 67, 94, 217], "74": [45, 59, 94], "orb": 45, "78": [45, 68, 90, 94, 98, 172, 217, 221], "orbit_transvers": 45, "orbit_rep": 45, "send": [45, 54, 55, 60, 94, 188, 217, 219], "proof": [45, 48, 79, 81, 220], "79": [45, 46, 98], "pointwise_stabil": 45, "pointwis": [45, 52], "p_k": [45, 94], "p20": 45, "stab": 45, "schreier_sims_increment": [45, 52], "polycyclicgroup": 45, "eliminate_gen": 45, "gen_count": 45, "b1": [45, 50, 62, 94, 97, 98, 109, 117, 134, 177, 192, 201, 211, 214, 217, 251], "b_r": 45, "slp_dict": 45, "seq": [45, 54, 57, 90, 192, 194, 197, 207, 219, 239], "93": [45, 195], "schreier_sims_random": [45, 52], "consec_succ": 45, "consec": 45, "_succ": 45, "97": [45, 55, 94, 194], "sift": [45, 52, 239], "amend": 45, "unsuccess": [45, 52], "accordingli": [45, 189, 196], "halt": 45, "signifi": [45, 54, 97, 197, 221], "g_t": 45, "leq": [45, 53, 55, 62, 79, 90, 94, 194, 196, 207, 208, 214, 221], "prop": [45, 196], "init_subgroup": 45, "supergroup": 45, "sought": [45, 94, 152, 162, 213, 219, 220], "prune": 45, "prop_even": 45, "lengthi": 45, "114": [45, 94], "117": [45, 62], "terribl": 45, "crucial": [45, 53, 191], "len1": 45, "len2": 45, "len3": 45, "transitivity_degre": 45, "fold": [45, 54, 60, 201, 208, 213], "a_2": [45, 55, 76, 90, 194, 211, 214, 217, 221, 277], "a_k": [45, 55, 198, 204], "arrang": [46, 104, 112, 132, 134, 210, 214, 227], "r69": 46, "reorder": [46, 53, 60, 167, 197, 217, 221, 239], "pretty_print": [46, 82, 114, 119, 120, 124, 125, 126, 128, 129, 130, 132, 135, 177, 179, 180, 181, 184, 185, 201], "understood": [46, 94, 172, 188, 192], "economi": 46, "caution": [46, 54, 60, 201, 213], "indexerror": [46, 90, 197], "autos": [46, 93], "watch": 46, "print_cycl": 46, "econom": [46, 81, 239], "retain": [46, 54, 60, 62, 81, 96, 197, 202, 210, 213], "biject": [46, 48, 55, 85, 188], "full_cyclic_form": 46, "rmul": 46, "unrank_lex": 46, "r73": 46, "zo42": 46, "from_sequ": 46, "a1": [46, 50, 54, 82, 85, 94, 98, 117, 134, 141, 217, 221, 222, 251, 277], "a2": [46, 50, 54, 83, 85, 94, 98, 117, 134, 141, 190, 221, 222, 251, 277], "a3": [46, 50, 54, 83, 85, 134, 251, 277], "perfectli": [46, 53, 54, 55, 194, 197, 200], "skiena": 46, "ma": [46, 53, 122], "1990": [46, 79, 211, 246], "r70": 46, "wendi": 46, "myrvold": 46, "ruskei": 46, "2001": [46, 94, 195], "lett": 46, "septemb": [46, 236], "281": 46, "284": [46, 94], "1016": 46, "s0020": 46, "0190": 46, "01": [46, 54, 58, 117, 161, 195, 213, 239], "00141": 46, "r71": 46, "kreher": 46, "stinson": 46, "1999": [46, 90, 195, 200, 217], "r72": 46, "graham": [46, 59, 60, 94], "patashnik": 46, "foundat": [46, 195, 196], "1994": [46, 194, 195, 197], "product_and_invers": 46, "r74": 46, "lehmer_cod": 46, "appliedpermut": 46, "magic": [46, 213, 232, 269], "attatch": 46, "_array_form": 46, "ascent": 46, "ie": [46, 214], "descent": 46, "fg": [46, 56, 217, 220], "gf": [46, 55, 188, 190, 191, 193, 194, 196], "r75": 46, "commutes_with": [46, 227], "cycle_structur": 46, "from_inversion_vector": 46, "get_adjacency_dist": 46, "n_adj": 46, "reev": 46, "colin": 46, "landscap": 46, "annal": 46, "86": [46, 90, 133, 200, 210], "473": 46, "josephu": 46, "get_precedence_matrix": 46, "get_precedence_dist": 46, "get_adjacency_matrix": 46, "get_positional_dist": 46, "subscript": [46, 192, 201, 211, 214, 239], "inversion_vector": 46, "lesser": [46, 100, 197], "lie": [46, 56, 68, 69, 70, 197, 215, 221, 256, 263], "lehmer": 46, "ith": [46, 83, 94, 192, 198, 220, 221], "variat": [46, 54, 194, 208, 217, 238], "r76": 46, "eng": 46, "chula": 46, "piak": 46, "algo2008": 46, "htm": [46, 62, 81, 214], "is_singleton": 46, "is_odd": 46, "shuffl": [46, 90, 277], "012345": 46, "345": 46, "253": 46, "2531": 46, "25314": 46, "253140": 46, "r77": 46, "flavius_josephu": 46, "r78": 46, "josephus_problem": 46, "r79": 46, "wou": 46, "burtonl": 46, "trim": [46, 131], "unmov": 46, "mul_inv": 46, "next_nonlex": 46, "nonlex": 46, "rank_nonlex": 46, "unrank_nonlex": 46, "next_trotterjohnson": [46, 239], "trotter": 46, "johnson": [46, 90], "generate_bel": [46, 239], "rank_trotterjohnson": 46, "unrank_trotterjohnson": 46, "_af_par": 46, "pseudo": [46, 90, 94, 192, 194, 197], "inv_perm": 46, "enforc": [46, 119], "rmul_with_af": 46, "ascend": [46, 239], "r80": 46, "transposition_": 46, "28mathemat": [46, 54, 209], "flexibl": [46, 54, 117, 134, 184, 187, 191, 220, 267], "investig": [46, 79, 186, 188, 211, 239, 269], "cn": [46, 201, 276], "2n": [46, 53, 59, 62, 81, 85, 100, 105, 130, 186, 204, 211], "dn": [46, 221], "klein": 46, "s4": [46, 104], "polyhedr": 47, "psg": 47, "platon": 47, "solid": [47, 68, 187, 255], "tetrahedr": 47, "octahedr": 47, "icosahedr": 47, "r81": 47, "polyhedralgroup": 47, "polyhedra": [47, 80], "shadow": 47, "h5": 47, "heinz": 48, "caylei": [48, 85], "r82": 48, "labeledtre": 48, "tree_repr": 48, "prufer_rank": 48, "prev": [48, 54], "36": [48, 55, 59, 70, 81, 85, 90, 94, 98, 197, 201, 214, 217, 221, 255], "prufer_repr": 48, "record": [48, 54, 196, 201, 232], "to_pruf": 48, "778": 48, "779": 48, "777": [48, 57], "1296": 48, "to_tre": 48, "r83": 48, "hamberg": 48, "erlend": 48, "2010": [48, 218, 239], "06": [48, 54, 119, 186, 221], "compact": [48, 54, 101, 134, 165, 181, 197, 201, 219, 236], "next_binari": 49, "prev_binari": 49, "bitlist_from_subset": 49, "subset_from_bitlist": 49, "superset_s": 49, "iterate_binari": 49, "iterate_graycod": 49, "prev_grai": 49, "next_grai": 49, "next_lexicograph": 49, "prev_lexicograph": 49, "rank_binari": 49, "unrank_binari": 49, "rank_grai": 49, "unrank_grai": 49, "rank_lexicograph": 49, "43": [49, 90, 94, 97, 98, 221, 277], "super_set": 49, "subset_indic": 49, "ksubset": 49, "itertool": [49, 239], "tensor_can": [50, 227], "msym": 50, "contravari": [50, 90, 227, 228], "covari": [50, 56, 90, 221, 227, 228], "d0": 50, "base_i": 50, "gens_i": 50, "n_i": [50, 194, 219], "sym_i": 50, "failur": [50, 58, 71, 79, 94, 221, 232, 277], "canonicalize_na": 50, "exchang": [50, 55, 90, 186, 190, 239], "anticommut": [50, 154, 156, 166, 167, 227], "canonical_fre": 50, "slot": [50, 151, 222, 226, 227, 272], "residu": [50, 55, 94, 194, 205, 211], "tensor_gen": 50, "list_free_indic": 50, "double_coset_can_rep": 50, "reintroduc": 50, "a_": [50, 54, 55, 62, 79, 83, 85, 87, 104, 105, 132, 203, 211, 214, 217, 219, 221, 222], "antisymmetr": [50, 56, 85, 167, 227], "d2": [50, 177, 188, 208, 221, 239, 246], "ord": [50, 55, 90], "t_c": 50, "get_symmetric_group_sg": [50, 227], "bsgs_direct_product": 50, "base2a": 50, "gens2a": 50, "t0": 50, "t1": [50, 70, 71, 94, 109, 114, 214, 221], "a_m": [50, 217], "a_n": [50, 55, 62, 79, 83, 172, 189, 194, 204, 214, 217, 277], "_a": [50, 62, 167, 197], "_b": [50, 62, 167], "base_f": 50, "gens_f": 50, "base1": 50, "gens1": 50, "base_a": 50, "gens_a": 50, "sgen": 50, "s_transvers": 50, "butler": [50, 227], "portug": [50, 227], "grow": [50, 54, 79, 90, 94, 191, 194], "computation": [50, 60, 112, 113], "absenc": [50, 84], "observ": [50, 76, 79, 156, 185, 188, 211, 214, 217, 221, 254, 277], "opposit": [50, 70, 84, 85, 109, 111, 189, 192, 209, 213, 220, 228, 239, 246, 247, 277], "ind": [50, 203, 227], "d3": [50, 208], "a0": [50, 217, 277], "a4": [50, 54, 83, 134, 277], "a5": [50, 54], "leftrightarrow": 50, "_af_rmul": 50, "t_": [50, 59], "b0": [50, 62, 192, 211, 217], "d_": [50, 211], "p0": [50, 64, 196, 217], "dbase": 50, "recomput": [50, 197], "d_i": [50, 79, 172], "s_0": 50, "d_0": [50, 55], "b_0": [50, 55, 59, 211, 214, 217], "b_j": [50, 52, 62, 79, 211], "sx": 50, "trace": [50, 85, 87, 105, 134, 194, 201, 221, 222, 223, 225, 239, 273], "h_n": [50, 62, 81, 197, 220], "tab1": 50, "get_transvers": 50, "antisym": 50, "base2": 50, "gens2": 50, "_cmp_perm_list": 51, "ls1": 51, "ls2": 51, "_naive_list_centr": 51, "_verify_centr": 51, "_verify_normal_closur": 51, "_base_ord": 52, "base_ord": 52, "backtrack": 52, "108": [52, 94, 98], "132": [52, 59, 177], "r84": 52, "_distribute_gens_by_bas": 52, "_strong_gens_from_distr": 52, "_orbits_transversals_from_bsg": 52, "_handle_precomputed_bsg": 52, "transversals_onli": 52, "slp": 52, "_remove_gen": 52, "new_gen": 52, "r85": 52, "r86": 52, "recurr": [53, 59, 76, 90, 196, 207, 213, 215, 217, 221, 241], "annihil": [53, 72, 73, 77, 143, 167, 219], "is_hypergeometr": 53, "binomi": [53, 58, 61, 62, 94, 197, 201, 206, 213, 217, 221, 239, 277], "rf": [53, 59, 197], "ff": [53, 55, 59, 186, 189, 190, 191, 196, 197], "speci": [53, 54], "rise": [53, 59, 62, 186, 213, 217, 221, 249], "hypersimp": [53, 212], "quotient": [53, 54, 57, 60, 94, 188, 189, 191, 193, 194, 197, 211, 213, 217], "dummy_vari": 53, "karr": 53, "quad": [53, 54, 56, 58, 62, 81, 85], "exclus": [53, 54, 60, 84, 90, 194, 269], "emphas": 53, "typeset": [53, 201], "doit": [53, 54, 56, 59, 60, 62, 81, 87, 104, 144, 146, 148, 159, 161, 164, 165, 167, 177, 186, 197, 203, 208, 213, 217, 218, 221, 223, 246, 248, 249, 251, 252, 267, 272], "seemingli": [53, 220], "nonsens": [53, 62], "r87": 53, "michael": [53, 195, 200], "april": 53, "1981": [53, 195], "305": 53, "350": [53, 114], "dl": [53, 185, 195], "cfm": [53, 195], "doid": [53, 195], "322248": 53, "322255": 53, "r88": 53, "sigma_not": 53, "r89": 53, "empty_sum": 53, "euler_maclaurin": [53, 58], "eval_integr": 53, "maclaurin": [53, 58], "endpoint": [53, 54, 58, 182, 209, 252], "28333333333333": 53, "sstr": [53, 181, 201], "full_prec": [53, 201], "26629073187415": 53, "0175000000000000": 53, "soon": [53, 54, 117, 172, 198], "eval_zeta_funct": 53, "is_absolutely_converg": 53, "sequence_term": 53, "is_converg": 53, "r90": 53, "absolute_converg": 53, "analogi": [53, 194], "prod_": [53, 59, 62, 79, 94, 172, 211], "respons": [53, 54, 103, 104, 117, 187, 234], "diverg": [53, 62, 136, 246, 253], "dirichlet": [53, 62, 221], "r91": 53, "convergence_test": 53, "reverse_ord": 53, "selector": [53, 85, 213, 239], "handi": [53, 54, 90, 201, 272], "s0": [53, 77, 79, 139], "expr_with_intlimit": [53, 81], "exprwithintlimit": [53, 81], "reorder_limit": 53, "r92": 53, "walli": 53, "w2": [53, 141], "w2e": 53, "risingfactori": [53, 61, 62, 201, 203], "combsimp": [53, 54, 59], "pe": 53, "gammasimp": [53, 54, 213], "rewrit": [53, 54, 56, 59, 60, 62, 79, 81, 84, 97, 104, 164, 197, 208, 209, 210, 213, 217, 218, 219, 220, 221, 257, 258, 271, 273], "r93": 53, "r94": 53, "capital_pi_not": 53, "r95": 53, "empty_product": 53, "r96": 53, "infinite_product": 53, "r97": 53, "expr_with_limit": [53, 81], "exprwithlimit": [53, 81], "change_index": 53, "trafo": 53, "newvar": 53, "mapsto": [53, 79, 85, 196], "p3": [53, 64, 66, 67, 69, 70, 104, 187, 191, 210, 221], "has_empty_sequ": [53, 81], "has_reversed_limit": [53, 81], "has_finite_limit": [53, 81], "____": [53, 58, 81, 139, 189, 202, 221, 239, 278], "___": [53, 58, 81, 82, 90, 189, 213, 221, 226, 239, 276], "rubric": [53, 54], "_____": [53, 221], "gosper": 53, "gosper_norm": 53, "monic": [53, 62, 188, 189, 192, 194, 196, 197, 200], "gcd": [53, 54, 55, 90, 94, 163, 191, 192, 193, 195, 196, 197, 201, 213, 214], "gosper_term": 53, "s_n": [53, 197], "f_k": [53, 129, 194], "g_n": [53, 59, 197], "f_n": [53, 59, 62, 188, 194, 197, 217], "gosper_sum": 53, "r98": 53, "marko": 53, "petkovsek": [53, 219], "herbert": 53, "doron": 53, "zeilberg": [53, 219], "ak": [53, 203], "peter": [53, 59, 62, 94, 133, 183, 197, 239], "ltd": 53, "welleslei": 53, "usa": [53, 195], "1997": [53, 79, 94, 195, 211], "convert_xor": [54, 96], "09": [54, 102], "2e": 54, "xor": [54, 57, 84, 96, 201, 269], "sympifyerror": 54, "coerc": [54, 131, 194], "cooper": 54, "sage": [54, 94, 186, 271], "shouldn": [54, 198], "unsanit": [54, 240, 266], "bitcount": 54, "improperli": 54, "unbound": [54, 226], "23903": 54, "fallback": [54, 82, 167, 181, 191, 201, 219], "ast": [54, 201, 258], "00000000000000": [54, 58, 168, 201, 221], "mylist1": 54, "mylist": 54, "mylist2": 54, "xxx": [54, 81, 90, 239, 241], "autosimplif": [54, 210, 213], "kern": 54, "r101": 54, "7649": 54, "r100": 54, "r104": 54, "r102": 54, "r103": 54, "r105": 54, "r106": 54, "r107": 54, "r99": 54, "recreat": 54, "isfinit": 54, "__cacheit": 54, "maxsiz": 54, "noqa": [54, 82, 192, 235], "f811": 54, "sympy_use_cach": 54, "cot": [54, 61, 62, 96, 198, 201, 210], "_arg": [54, 60], "as_mut": [54, 86, 87], "as_content_primit": [54, 90, 189, 197], "stub": 54, "as_dummi": [54, 81], "_0": [54, 59, 79, 85, 90, 197, 240], "_r": [54, 167, 211, 220], "bound_symbol": [54, 81], "besid": [54, 194, 219], "typeinfo": 54, "truli": [54, 62, 172], "piec": [54, 58, 211, 234], "scan": 54, "appliedundef": 54, "canonical_vari": 54, "class_kei": 54, "sorted_class": 54, "dummy_eq": 54, "eg": [54, 117, 174, 220], "fromit": 54, "has_fre": 54, "has_xfre": 54, "exp_polar": [54, 61, 62, 211], "dif": 54, "_prec": 54, "q_": [54, 181, 214, 217], "r_": [54, 106, 168, 198], "repl_dict": 54, "rcall": [54, 56], "simul": [54, 117, 134, 200], "abus": [54, 227], "succe": [54, 79, 84, 94, 157, 196, 219], "newtyp": 54, "intuit": [54, 172, 205, 217], "is_mul": 54, "is_add": [54, 220], "mysin": [54, 240, 266], "_eval_rewrite_as_": 54, "_eval_rewrite_as_co": 54, "tie": [54, 239], "delai": [54, 102, 131, 210, 232, 267], "unsort": [54, 108, 176], "333333333333333333333": 54, "333333333333333314830": 54, "wildcard": [54, 213], "registri": 54, "metaprogram": 54, "address": [54, 201, 220], "mostli": [54, 60, 81, 90, 134, 162, 184, 188, 200, 201, 211, 219, 276], "__truediv__": [54, 192], "class_nam": 54, "mysingleton": 54, "_eval_is_g": 54, "_eval_is_eq": 54, "args_cnc": 54, "cset": 54, "split_1": 54, "suppress": [54, 96, 230, 237], "as_coeff_add": 54, "dep": [54, 217], "as_coeff_expon": 54, "as_coeffici": 54, "zz": [54, 59, 76, 77, 81, 87, 90, 91, 94, 114, 185, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 216], "coeff_monomi": [54, 197], "polytool": [54, 197, 220], "monomi": [54, 81, 84, 94, 189, 191, 192, 193, 194, 200, 201, 277], "as_coefficients_dict": 54, "inquiri": 54, "121": [54, 59, 94, 104, 177, 219], "84": [54, 58, 94], "separatevar": [54, 212, 217], "n3": [54, 117], "as_leading_term": [54, 208], "logx": [54, 208], "cdir": 54, "_eval_as_leading_term": 54, "as_numer_denom": [54, 219], "as_ordered_factor": 54, "as_ordered_term": 54, "as_powers_dict": 54, "lost": 54, "as_real_imag": [54, 60, 85, 202], "as_term": 54, "aseri": 54, "hir": 54, "asymptot": [54, 79, 104, 267], "hierarch": 54, "normalis": [54, 203], "induc": [54, 85, 196, 210, 239], "gruntz": [54, 203], "majorli": 54, "mrv": [54, 208], "overal": [54, 174, 187, 219], "rapidli": [54, 58, 79, 208], "till": [54, 97, 98, 117, 217], "r108": 54, "dominik": [54, 203], "proc": [54, 219], "1993": [54, 195], "symp": 54, "239": 54, "244": [54, 194], "r109": 54, "p90": 54, "r110": 54, "asymptotic_expans": 54, "_first": [54, 60], "distribute_order_term": [54, 213], "compute_leading_term": 54, "could_extract_minus_sign": 54, "signsimp": [54, 125, 213], "failing_express": 54, "modulu": [54, 55, 57, 62, 64, 70, 85, 94, 97, 98, 188, 192, 194, 196, 197, 200, 220], "power_bas": [54, 85], "power_exp": [54, 85], "multinomi": [54, 85, 94, 221], "expr_free_symbol": 54, "extract_addit": 54, "extract_multipl": 54, "extract_branch_factor": 54, "allow_half": 54, "fourier_seri": [54, 204], "geto": 54, "getn": 54, "is_algebraic_expr": 54, "is_rational_funct": 54, "r111": 54, "algebraic_express": 54, "is_const": 54, "constanc": 54, "agre": [54, 55, 62, 69, 79, 211], "test_expr": 54, "prove": [54, 79, 81, 90, 188, 208, 217, 251], "failing_numb": 54, "is_meromorph": 54, "meromorph": [54, 62], "multivalu": [54, 60], "cut": [54, 59, 60, 62, 70, 79, 188, 211, 236, 242, 277], "hit": [54, 272], "is_polynomi": 54, "rational_funct": 54, "leadterm": 54, "xlim": [54, 187], "lseri": 54, "exaxmpl": 54, "nseri": 54, "_eval_nseri": 54, "innermost": 54, "disadvantag": 54, "met": [54, 100, 214, 220, 235, 277], "nsimplifi": [54, 58, 212], "ratsimp": [54, 212], "removeo": [54, 134, 201, 267], "chop": [54, 58, 62, 85, 90, 219, 266], "123": [54, 59, 64, 84, 164, 177, 239, 246, 247], "lazi": [54, 87, 197], "smooth": [54, 58, 94, 203], "taylor_term": [54, 60], "previous_term": [54, 60], "dummy_index": 54, "temporari": [54, 233], "_dummy_10": 54, "contigu": [54, 211, 234], "x4": [54, 59, 191], "x5": [54, 59, 191], "x6": [54, 191], "x7": [54, 191], "x8": [54, 191], "x9": [54, 191], "x50": 54, "x51": 54, "y0": [54, 73, 75, 77, 217], "y1": [54, 134], "y2": [54, 134, 191], "y3": [54, 191], "y4": 54, "xa": [54, 189, 194], "xb": [54, 242], "xc": [54, 166, 242], "disambigu": 54, "x01": 54, "x02": 54, "x11": 54, "x12": 54, "escap": [54, 96, 187, 201, 242], "newli": [54, 79, 211], "undefinedfunct": [54, 179, 201, 233, 240], "f821": [54, 235], "cofactor": [54, 90, 192, 194, 197], "lcm": [54, 94, 192, 193, 194, 197, 201], "50000000000000": [54, 58], "100000000000000000000": 54, "1e20": 54, "00000000000000e": 54, "23456789123456789": 54, "23456789123457": 54, "00100": 54, "sent": [54, 81, 213, 219], "789": [54, 94], "123_456": 54, "123456789": 54, "12e": 54, "012": 54, "60e2": 54, "6000": 54, "600e": 54, "125": [54, 58, 81, 94, 192, 207, 214], "099609": 54, "12500": 54, "12500000000000000000": 54, "closest": [54, 67], "5404319552844595": 54, "54": [54, 90, 98, 194, 200, 239], "29999999999999998890": 54, "30000000000000000000": 54, "_mpf_": [54, 191], "4915": 54, "70": [54, 55, 71, 81, 90, 94, 200, 201, 214, 221, 242], "307": 54, "mpf": [54, 191, 192], "is_float": 54, "unprejud": 54, "3602879701896397": 54, "18014398509481984": [54, 213], "limit_denomin": 54, "320": 54, "75": [54, 57, 221, 246], "use_tri": [54, 94], "use_rho": [54, 94], "use_pm1": [54, 94], "factorint": [54, 94, 196, 197, 236], "trial": [54, 94, 194, 206, 210, 217, 221], "max_denomin": 54, "1000000": [54, 94], "141592653589793": 54, "311": [54, 94], "discard": [54, 196, 201, 220], "99999999999999999999": 54, "hookrightarrow": 54, "minpoli": [54, 191, 192, 196], "dmp": [54, 188, 192, 193, 197], "complexrootof": [54, 90, 192, 197, 217], "anp": [54, 191, 192, 196, 197], "to_list": [54, 190, 192], "minpoly_of_el": 54, "414213562": 54, "scratch": [54, 172], "6x": [54, 194], "to_number_field": [54, 196], "to_root": 54, "primitive_el": [54, 191, 192, 196], "knew": [54, 277], "golden": [54, 58, 94], "5th": [54, 134, 194, 196], "cyclotom": [54, 192, 193, 194, 195, 196, 197], "cyclotomic_poli": [54, 196, 197], "61803398874989": 54, "2i": 54, "a6": 54, "a6_wrong": 54, "309016994374947": 54, "951056516295154": 54, "field_el": 54, "is_alias": 54, "is_primitive_el": 54, "native_coeff": 54, "to_algebraic_integ": 54, "to_primitive_el": 54, "Its": [54, 60, 70, 134, 165, 194, 201, 209], "a_prim": 54, "number_cl": 54, "greatest": [54, 59, 64, 94, 189, 191, 192, 194, 195, 197, 200], "euclid": [54, 194, 195], "r112": 54, "euclidean_algorithm": 54, "r113": 54, "r114": 54, "1_": 54, "28number": 54, "r115": 54, "88": [54, 90, 94], "921_": 54, "r116": 54, "one_half": 54, "holder": 54, "ieee": [54, 55], "754": 54, "r117": 54, "affin": [54, 55, 69, 188], "compactif": 54, "r118": 54, "tild": [54, 60, 222], "phase": [54, 81, 102, 136, 139, 141, 151, 152, 220], "718281828": 54, "napier": 54, "r119": 54, "e_": [54, 59, 90], "28mathematical_const": 54, "r120": 54, "imaginary_unit": [54, 201], "141592654": 54, "circumfer": [54, 64], "diamet": [54, 64], "area": [54, 64, 66, 70, 71, 97, 98, 253], "is_irr": 54, "r121": 54, "mascheroni": [54, 62], "5772157": 54, "recur": 54, "harmon": [54, 61, 94, 106, 146, 186, 201, 262], "lim": [54, 208, 267], "limits_": [54, 186, 203, 271], "ln": [54, 60, 81, 201, 203, 217, 221, 277], "r122": 54, "93mascheroni_const": 54, "91596559": 54, "r123": 54, "27s_constant": 54, "r124": 54, "golden_ratio": 54, "tribonacci": [54, 61], "fibonacci": [54, 58, 61, 94], "predetermin": [54, 232], "8392867552141611326": 54, "r125": 54, "generalizations_of_fibonacci_numb": [54, 59], "tribonacci_numb": [54, 59], "modulo": [54, 55, 91, 94, 163, 188, 190, 191, 192, 194, 196, 197, 198, 200, 201, 204, 213], "r126": 54, "modular_multiplicative_invers": 54, "r127": 54, "extended_euclidean_algorithm": 54, "oscil": [54, 262], "conform": [54, 220, 225, 226], "r128": 54, "r129": 54, "zero_to_the_power_of_zero": 54, "r130": 54, "indeterminate_form": 54, "as_base_exp": [54, 60, 61, 239], "floor": [54, 61, 94, 191, 192, 201, 221], "geq": [54, 55, 62, 90, 197, 214, 221, 277], "factor_": [54, 55, 94, 197, 214], "perfect_pow": [54, 94], "infix": 54, "matmul": [54, 87, 190], "as_coef_mul": 54, "undesir": [54, 108, 117, 131, 189, 192, 211], "4596": 54, "compound": [54, 122, 165, 205, 259], "5728": 54, "suspect": [54, 94], "5706": 54, "moot": 54, "off": [54, 64, 79, 85, 93, 95, 119, 128, 151, 188, 197, 201, 217, 232, 243, 246, 271], "nb": 54, "sensit": [54, 104, 134, 187, 194, 213, 232], "assocop": 54, "quadrat": [54, 55, 81, 94, 188, 192, 196, 197, 214, 219, 221], "matadd": [54, 87, 201], "as_coef_add": 54, "extract_leading_ord": 54, "commutative_part": 54, "noncommutative_part": 54, "order_symbol": 54, "subprocess": [54, 201, 232, 233], "dividend": [54, 192], "rop": 54, "validrelationoper": 54, "rel_op": 54, "fourth": [54, 55, 189, 217, 267], "my_equ": 54, "my_inequ": 54, "reversedsign": 54, "_eval_eq": 54, "respond": 54, "boolalg": [54, 84], "client": [54, 236], "counterpart": [54, 55, 217, 267], "litter": 54, "oddbal": 54, "minor": [54, 64, 90, 201, 232], "caveat": [54, 197, 257, 264, 269], "succinctli": 54, "coupl": [54, 90, 131, 146, 161, 164], "annoy": 54, "succinct": 54, "occasion": 54, "r131": 54, "operar": 54, "circuit": [54, 151, 154], "greaterthanobject": 54, "__bool__": 54, "335": 54, "march": 54, "2012": 54, "r132": 54, "r133": 54, "r134": 54, "mdarg": 54, "fgh": 54, "vsin": 54, "vdiff": 54, "narg": [54, 194], "naturals0": [54, 201, 220, 221], "evalul": 54, "fairli": [54, 62, 79, 119, 127, 176, 188], "conserv": [54, 112, 130, 178, 248, 253, 254], "136": [54, 90], "indirect": [54, 56, 62, 94, 167, 217], "implic": [54, 84, 194], "fx": [54, 56, 187, 217, 218], "fxx": 54, "insconsist": 54, "presenc": [54, 60, 84, 100, 116, 121, 131, 217, 225], "nonvanish": 54, "_diff_wrt": 54, "_sort_variable_count": 54, "vc": 54, "vsort": 54, "collaps": [54, 161, 213], "vsort0": 54, "vi": 54, "dfx": 54, "equidist": 54, "sq2": 54, "xl": 54, "d2fdxdy": 54, "doit_numer": 54, "z0": [54, 208], "unifi": [54, 135, 190, 192, 193, 194, 196, 197, 209], "zeroth": [54, 196], "idiff": [54, 71], "r135": 54, "legaci": [54, 81, 90, 221], "v5_2": 54, "infunct": 54, "algebraiccomput": 54, "f_real": [54, 61], "f_real_inherit": [54, 61], "is_singular": [54, 61, 77], "holomorph": [54, 61, 79], "superfici": 54, "unexpect": [54, 232], "ss": [54, 192], "denom": [54, 191, 192, 196, 213], "_eval_expand_bas": 54, "_eval_expand_complex": 54, "shut": [54, 197], "unwant": [54, 219, 239], "alphabet": [54, 55, 104, 172, 189, 214, 234], "expand_hint": 54, "_eval_expand_hint": 54, "liabl": [54, 84], "metahint": 54, "myclass": 54, "_eval_expand_doubl": 54, "hyperexpand": [54, 62, 76, 79, 211], "div": [54, 189, 191, 192, 197, 201, 213, 272], "horner": [54, 134, 194, 197], "untouch": 54, "unexpand": [54, 191, 200, 210, 233], "dkei": 54, "mixin": [54, 239], "maxn": [54, 58, 85], "subresult": [54, 192, 195, 197], "000100000000000000": 54, "maxprec": 54, "quadratur": [54, 58, 81, 217], "tanh": [54, 58, 61, 81, 198, 201, 213, 277], "oscillatori": [54, 58, 206], "osc": [54, 58], "advers": 54, "1e16": 54, "291": 54, "builtin": [54, 192, 201, 209, 242, 276], "speedup": [54, 90, 95, 194, 198, 240], "framework": [54, 117, 127, 226, 232, 234, 240], "slice": [54, 84, 85, 90, 96, 192, 197, 207, 209, 213, 222, 239], "parametris": [54, 209], "element_kind": [54, 85, 209], "tuple_count": 54, "setkind": [54, 85, 259], "isprimit": 54, "_gcd_term": 54, "terms_gcd": [54, 192, 197], "entiti": [54, 64, 67, 68, 70, 71, 79, 117, 132, 182, 220, 254, 263, 273], "arguement": 54, "broad": [54, 272], "lex": [54, 82, 181, 189, 191, 192, 194, 197, 198, 200, 201, 213], "grlex": [54, 82, 181, 192, 197, 200, 201], "grevlex": [54, 82, 181, 189, 194, 197, 200, 201], "rev": 54, "unaffect": [54, 220], "_node": 54, "fastest": [54, 59, 81, 94, 95, 198], "undecor": 54, "ineffici": [54, 90, 191], "breaker": 54, "hash": [54, 192, 194, 202, 213, 217, 232, 234], "collis": [54, 93, 201], "wast": [54, 91, 190], "rng": 54, "getstat": 54, "intention": 54, "tn": 54, "td": [54, 201, 276], "randrang": 54, "999": [54, 58], "238": [54, 94], "randint": [54, 90, 194], "ri": [54, 201], "rv": [54, 210, 221, 239], "nonbas": 54, "postord": 54, "descend": [54, 188, 196, 234], "subtre": [54, 201, 236], "educ": [55, 90], "cryptograph": 55, "encrypt": 55, "hide": [55, 201], "cipher": 55, "vigener": 55, "hill": [55, 62, 112, 133, 177, 183, 246], "bifid": 55, "rsa": 55, "kid": 55, "feedback": [55, 101, 104, 270], "elgam": 55, "plaintext": [55, 201], "ciphertext": 55, "monoalphabet": 55, "polyalphabet": 55, "crypto": 55, "az": [55, 214], "uppercas": [55, 211], "hello": [55, 239], "world": [55, 100, 121, 131, 239], "helloworld": 55, "check_and_join": 55, "padded_kei": 55, "puppi": 55, "opqrstuvwxi": 55, "puyoqrstvwx": 55, "artist": 55, "aphras": 55, "ara": 55, "hp": 55, "cycle_list": 55, "encipher_shift": 55, "msg": [55, 81], "decipher_shift": 55, "gonavybeatarmi": 55, "ct": [55, 83, 194], "hpobwzcfbubsnz": 55, "deciph": 55, "l1": [55, 64, 66, 67, 111, 114, 120, 132, 192, 194, 197, 214, 221], "l2": [55, 66, 67, 111, 114, 120, 153, 169, 192, 194, 221], "caesar": 55, "juliu": 55, "suetoniu": 55, "protect": [55, 201], "militari": 55, "nephew": 55, "augustu": 55, "reportedli": 55, "r136": 55, "caesar_ciph": 55, "r137": 55, "caesarsmethod": 55, "encipher_rot13": 55, "rot13": 55, "caeser": 55, "midwai": 55, "decipher_rot13": 55, "r138": 55, "decrypt": 55, "tbanilorngnezl": 55, "encipher_affin": 55, "_invers": 55, "cx": [55, 98], "recov": [55, 81, 172, 194, 196, 197, 214, 217], "decipher_affin": 55, "r139": 55, "affine_ciph": 55, "reciph": 55, "navi": 55, "beat": 55, "armi": 55, "trobmvenbgbalv": 55, "encipher_atbash": 55, "enciph": 55, "atbash": 55, "hebrew": 55, "decipher_atbash": 55, "tlmzebyvzgzinb": 55, "r140": 55, "encipher_substitut": 55, "oeyag": 55, "034": 55, "60n": 55, "v4b3": 55, "rm4": 55, "immateri": 55, "anyv": 55, "wherebi": 55, "r141": 55, "substitution_ciph": 55, "encipher_vigener": 55, "me": [55, 117, 134, 177, 201, 223], "mondai": 55, "qrgkkthrzqebpr": 55, "krypto": 55, "sculptur": 55, "cia": 55, "headquart": 55, "r143": 55, "decipher_vigener": 55, "alp": 55, "palimpsest": 55, "emufphzlrfaxyusdjkzldkrnshgnfivj": 55, "betweensubtleshadingandtheabsenc": 55, "blais": 55, "sixteenth": 55, "centuri": [55, 188], "diplomat": 55, "accid": [55, 240], "invent": [55, 196, 219, 271], "giovan": 55, "batista": 55, "belaso": 55, "1553": 55, "civil": [55, 97], "war": 55, "confederaci": 55, "brass": 55, "nsa": 55, "museum": 55, "fort": 55, "mead": 55, "r142": 55, "sender": 55, "assembl": [55, 79, 208], "concaten": [55, 85], "frequenc": [55, 81, 102, 104, 141, 143, 151, 168], "kasiski": 55, "discov": [55, 79, 108, 225, 273], "babbag": 55, "unbreak": 55, "ye": [55, 84, 217], "gonavybeatarmyyesyoucan": 55, "gold": 55, "auto_kei": 55, "goldbuggonavybeatarmyy": 55, "mcydwshkogamkzcelyfgayr": 55, "pt": [55, 63, 64, 65, 67, 68, 69, 70, 207], "vigenere_ciph": 55, "archiv": [55, 133, 214], "20071116100808": 55, "r144": 55, "filebox": 55, "vt": 55, "batman": 55, "goo": 55, "gl": 55, "ijr22d": 55, "decod": 55, "qrgk": 55, "kt": [55, 122], "hrzqe": 55, "bpr": 55, "meetmeonmondai": 55, "encipher_hil": 55, "z_": [55, 213], "r145": 55, "lester": 55, "1920": 55, "r146": 55, "polygraph": 55, "bare": [55, 112], "ceil": [55, 61, 94, 111, 201], "l_1": [55, 59, 105, 186, 211, 227], "l_t": 55, "c_t": 55, "l_i": [55, 186, 211], "decipher_hil": 55, "hill_ciph": 55, "june": [55, 90], "juli": [55, 214], "1929": 55, "306": 55, "312": [55, 177, 219, 246, 247], "ueqdueodoctcwq": 55, "st": [55, 81, 167], "hjeb": 55, "stqq": 55, "ispk": 55, "stzz": 55, "hd": 55, "ormv": 55, "uiki": 55, "encipher_bifid": 55, "polybiu": 55, "printabl": 55, "bifid5": 55, "decipher_bifid": 55, "encipher_bifid5": 55, "encipher_bifid6": 55, "r147": 55, "bifid_ciph": 55, "ieilhhfstsfqy": 55, "ieilh": 55, "hfst": 55, "fqyej": 55, "bmtwmg": 55, "bio": 55, "gold_bug": 55, "hg2sfuei7t": 55, "pug": 55, "heldo": 55, "wor6d": 55, "bifid5_squar": 55, "5x5": 55, "cap": [55, 58, 167, 209, 220], "tradition": [55, 62], "decipher_bifid5": 55, "round_trip": 55, "josi": 55, "osi": 55, "iosi": 55, "qiq": 55, "1901": 55, "felix": 55, "delastel": 55, "onto": [55, 67, 68, 69, 79, 83, 90, 93, 95, 196], "helen": 55, "cryptanalysi": 55, "german": 55, "fridai": 55, "ieilehfstsfxe": 55, "okai": 55, "decipher_bifid6": 55, "8am": 55, "kfkljjhf5mmmktfrgpl": 55, "meetmeonmondayat8am": 55, "bifid6_squar": 55, "6x6": 55, "rsa_public_kei": 55, "totient": [55, 94], "carmichael": [55, 94], "p_n": [55, 59, 62, 81, 197], "multiprim": 55, "land": 55, "rad": [55, 102, 117, 196], "reduced_toti": [55, 94], "uniquenss": 55, "rsa_private_kei": 55, "e_0": 55, "canonicalz": 55, "61": [55, 59, 70, 90, 94, 197, 203], "3233": 55, "797": 55, "1577": 55, "multipow": 55, "cryptosystem": 55, "coprim": [55, 81, 94, 163, 194, 214], "30030": 55, "becam": [55, 127], "hardest": 55, "claim": [55, 185, 211, 220], "encipher_rsa": 55, "decipher_rsa": 55, "r148": 55, "rsa_": 55, "28cryptosystem": 55, "r149": 55, "cacr": 55, "uwaterloo": 55, "techreport": 55, "2006": [55, 210], "cacr2006": 55, "r150": 55, "springer": [55, 81, 94, 194, 195, 217], "1007": 55, "2fbfb0055738": 55, "r151": 55, "itii": 55, "manuscript": 55, "1381": 55, "2753": 55, "413": 55, "1193": 55, "823": 55, "r152": 55, "r153": 55, "r154": 55, "r155": 55, "bmod": [55, 197, 201], "vice": [55, 81, 94, 97, 157, 177, 188, 192, 249, 250, 269], "versa": [55, 81, 94, 97, 157, 177, 188, 192, 249, 250, 269], "asymmetr": [55, 70], "puk": 55, "prk": 55, "chines": [55, 94, 194], "k_1": [55, 94, 194, 211], "k_2": 55, "k_n": [55, 62, 194], "p_3": [55, 184], "k_3": 55, "moduli": [55, 94, 194], "2048": [55, 94, 201], "overhead": [55, 95, 198], "modular": [55, 94, 163, 193, 195, 220], "crt": [55, 94, 194], "overcompens": 55, "theorit": 55, "new_msg": 55, "kid_rsa_public_kei": 55, "grade": [55, 82, 181, 197], "school": [55, 210], "bob": [55, 111], "369": 55, "58": [55, 90, 227], "kid_rsa_private_kei": 55, "encipher_kid_rsa": 55, "200": [55, 85, 90, 94, 97, 102, 246], "161": 55, "decipher_kid_rsa": 55, "pub": [55, 246], "pri": 55, "encode_mors": 55, "sep": [55, 201, 218, 232], "mors": 55, "attack": 55, "flank": 55, "r156": 55, "morse_cod": 55, "decode_mors": 55, "word_sep": 55, "mc": [55, 122], "east": 55, "r157": 55, "lfsr_sequenc": 55, "lfsr": 55, "c_k": 55, "golomb": [55, 94], "g157": 55, "autocorrel": 55, "lim_": [55, 60, 62, 79, 81, 208, 267, 271], "balanc": [55, 133, 188, 221, 232], "solomon": 55, "aegean": 55, "park": 55, "laguna": 55, "1967": [55, 195], "lfsr_autocorrel": 55, "lfsr_connection_polynomi": 55, "massei": 55, "m158": 55, "jame": [55, 194], "synthesi": 55, "bch": 55, "tran": 55, "122": [55, 57, 62], "127": [55, 94], "elgamal_public_kei": 55, "elgamal_private_kei": 55, "1031": 55, "636": 55, "212": [55, 81, 195], "mathmat": 55, "dlp": 55, "is_primitive_root": [55, 94], "encipher_elgam": 55, "c2": [55, 64, 71, 85, 87, 153, 167, 209, 217, 221, 248, 251, 278], "encryp": 55, "decipher_elgam": 55, "eucliden": 55, "dh_public_kei": 55, "dh_private_kei": 55, "_p": [55, 167, 192, 194, 196, 208, 211, 219], "_g": 55, "diffi": 55, "hellman": [55, 94], "publicli": 55, "secretli": 55, "dh_shared_kei": 55, "sk": 55, "gm_public_kei": 55, "goldwass": 55, "micali": 55, "gm_private_kei": 55, "b_n": [55, 59, 83, 188, 204], "jacobi_symbol": [55, 94], "reconstruct": [55, 90, 194, 272], "residuos": 55, "entropi": [55, 221], "encipher_gm": 55, "public_kei": 55, "gm": [55, 170], "decipher_gm": 55, "encipher_railf": 55, "rail": 55, "railfenc": 55, "horel": 55, "ollwd": 55, "r160": 55, "rail_fence_ciph": 55, "decipher_railf": 55, "diffgeom": 56, "euclidean": [56, 67, 69, 177, 192, 194, 197], "r161": 56, "chart": [56, 187], "parameter": [56, 63, 64, 67, 70, 214], "r162": 56, "sussman": 56, "wisdom": 56, "farr": 56, "2013": [56, 66, 85, 275], "tranform": 56, "cartesian": [56, 97, 135, 140, 154, 157, 162, 182, 187, 188, 209, 220, 239, 249, 250, 252, 253], "polar": [56, 60, 62, 64, 70, 80, 97, 106, 137, 187, 209, 213, 220, 262], "relation_dict": 56, "car2d": 56, "pol": 56, "coordinatesymbol": 56, "jacobian": [56, 90, 131, 219], "jacobian_determin": 56, "r163": 56, "coordinate_system": 56, "base_oneform": 56, "coord_index": 56, "oneform": 56, "base_scalar": 56, "basescalarfield": 56, "base_vector": [56, 246], "coord_funct": 56, "to_si": 56, "coord": [56, 69, 71, 108, 165, 180], "immutabledensematrix": [56, 85, 86, 87, 88, 221], "rn": 56, "r2_r": 56, "r2_p": 56, "jacobian_matrix": 56, "point_to_coord": 56, "coord_si": [56, 248], "imbu": 56, "difficulti": [56, 118], "arriv": [56, 194, 211, 213, 217, 221, 277], "inappropri": 56, "poin": 56, "unappropri": 56, "fy": [56, 187, 218], "ftheta": 56, "basevectorfield": 56, "point_p": 56, "point_r": 56, "s_field": 56, "dxi": 56, "v1": [56, 67, 90, 114, 134, 177, 178, 180, 221, 240, 246, 248, 249, 250, 251], "v2": [56, 67, 90, 114, 177, 178, 180, 240, 246, 248, 249, 250, 251], "v_1": [56, 196, 219], "v_2": [56, 196], "e_x": [56, 227], "e_i": [56, 188, 211, 227], "e_r": 56, "c_xy": 56, "c_xr": 56, "unfortun": [56, 58, 95, 200, 214], "e_rho": 56, "form_field": 56, "exterior": [56, 70], "dg": 56, "tensorproduct": [56, 164, 166, 222, 223], "multilinear": 56, "wedg": [56, 79], "tp1": 56, "tp": [56, 139, 166, 192], "wedgeproduct": 56, "wp1": 56, "liederiv": 56, "v_field": 56, "transport": 56, "pushforward": 56, "e_theta": 56, "basecovarderivativeop": 56, "christoffel": 56, "metric_to_christoffel_2nd": 56, "ch": [56, 90, 214], "cvd": 56, "covarderivativeop": 56, "intcurve_seri": 56, "vector_field": [56, 252], "start_point": 56, "dt": [56, 62, 121, 134, 176, 177, 179, 184, 185, 197, 217, 277], "f_i": [56, 79, 90, 194, 198], "movement": 56, "intcurve_diffequ": 56, "init_cond": 56, "f_1": [56, 59, 62, 79, 104, 113, 116, 135, 188, 194, 197, 217], "f_0": [56, 59, 113, 194], "vectors_in_basi": 56, "kept": [56, 169, 185, 239, 272], "twoform_to_matrix": 56, "twoform": 56, "e_j": 56, "metric_to_christoffel_1st": 56, "levi": [56, 62, 221, 227], "civita": [56, 62, 227], "metric_to_riemann_compon": 56, "non_trivial_metr": 56, "dtheta": 56, "drho": 56, "metric_to_ricci_compon": 56, "ricci": 56, "fft": [57, 134], "ifft": 57, "ntt": 57, "intt": 57, "fwht": 57, "ifwht": 57, "mobius_transform": 57, "inverse_mobius_transform": 57, "convolution_fft": 57, "convolution_ntt": 57, "convolution_fwht": 57, "convolution_subset": 57, "covering_product": 57, "intersecting_product": 57, "radix": 57, "r164": 57, "coolei": 57, "93tukey_fft_algorithm": 57, "r165": 57, "fastfouriertransform": 57, "r166": 57, "r167": 57, "pz": [57, 102, 227], "643": [57, 94], "767": 57, "387": 57, "415": 57, "384": 57, "353": [57, 90], "r168": 57, "apfloat": 57, "r169": 57, "numbertheoretictransform": 57, "r170": 57, "discrete_fourier_transform_": 57, "r171": 57, "r172": 57, "r173": 57, "wht": 57, "r174": 57, "hadamard_transform": 57, "r175": 57, "fast_walsh": 57, "93hadamard_transform": 57, "r176": 57, "r177": 57, "mobiu": [57, 94], "lattic": [57, 214], "bitmask": 57, "r178": 57, "b6bius_inversion_formula": 57, "r179": 57, "csail": 57, "mit": 57, "rrw": 57, "conv": 57, "r180": 57, "arxiv": [57, 59, 62, 90, 106, 197, 239], "1211": 57, "0189": 57, "r181": 57, "r182": 57, "r183": 57, "888": 57, "444": 57, "1283": 57, "19351": 57, "14219": 57, "15502": 57, "44": [57, 59, 90, 94, 210, 221], "41": [57, 64, 90, 94, 192, 214], "63": [57, 90, 94], "r184": 57, "convolution_theorem": 57, "r185": 57, "333": [57, 94], "555": 57, "222": 57, "666": 57, "15555": 57, "19404": 57, "r186": 57, "r187": 57, "68": [57, 82, 90, 94, 214], "48": [57, 64, 98, 214, 219, 221, 267], "2057": 57, "1870": 57, "r188": 57, "radioeng": 57, "cz": [57, 214], "fulltext": 57, "2002": [57, 188, 195, 198], "02_03_40_42": 57, "r189": 57, "r190": 57, "r191": 57, "AND": [57, 84, 253], "327": [57, 217], "r192": 57, "44288293815837": 58, "4429": 58, "4428829381583662470158809900606936986146216893757": 58, "28902548222223624241": 58, "091999668350375232456": 58, "14159265358979": [58, 62, 219], "333333333333333": [58, 191, 213], "1415926535": 58, "7182818284": 58, "100000": [58, 94, 102], "951": 58, "95678796130331164628399634646042209010610577945815": 58, "gmpy": [58, 191, 192, 276], "googl": [58, 186, 187, 220], "100000000000000": 58, "1000000000": 58, "125000000000000000000000000000": 58, "100000000000000005551115123126": 58, "100000000000000000000000000000": 58, "1415": 58, "uncertainti": [58, 172], "003": 58, "31417": 58, "propag": [58, 67, 138, 141], "5000": [58, 97], "50000000000000000000000000000": 58, "varphi": [58, 62, 196, 201, 217], "erron": 58, "goldenratio": [58, 202, 213], "34665576869e": 58, "208": [58, 197], "64613129282185e": 58, "60123853010113e": 58, "210": [58, 94, 214], "thousand": [58, 94, 266], "precisionexhaust": 58, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 58, "binet": 58, "104": 58, "1336": 58, "portion": [58, 70, 85, 90], "meaningless": 58, "012297": 58, "9562288417661": 58, "956": 58, "29128599706266": 58, "2912859970626635404072825905956005414986193682745": 58, "14159265358979323846264338328": 58, "integrand": [58, 62, 78, 79, 81, 211], "struggl": [58, 200], "346": 58, "34635637913639": 58, "dealt": [58, 79], "504067061906928": 58, "50406706190692837199": 58, "wrap_lin": [58, 81, 82, 90, 98, 181, 188, 189, 200, 201, 217], "intgrl": 58, "extrapol": [58, 208], "richardson": [58, 208, 220], "slowli": [58, 208], "64493406684823": 58, "577215664901533": 58, "57721566490153286060651209008240243104215933593992": 58, "10000000": [58, 197], "20000000": [58, 197], "693147255559946": 58, "tune": [58, 82, 181, 201], "worthwhil": 58, "hypergeometr": [58, 59, 61, 72, 74, 78, 79, 195, 205, 212, 217, 219, 221, 257, 277], "ramanujan": [58, 59, 94], "9801": 58, "1103": 58, "26390": 58, "396": [58, 117], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 58, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 58, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 58, "355": [58, 94, 195], "113": [58, 94, 214], "33333": [58, 81], "635": 58, "504": [58, 195], "130198866629986772369127970337": 58, "49": [58, 59, 94, 98, 194, 214], "___________": [58, 98, 217], "k_sym": 59, "binom": [59, 94, 221, 277], "dotsc": [59, 203], "j_1": [59, 146, 147, 164, 186, 203, 222], "j_2": [59, 146, 147, 164, 186, 203], "dotsb": [59, 203], "atop": [59, 62, 203, 211], "2j_2": [59, 203], "3j_2": [59, 203], "j_": [59, 62, 79, 81, 164, 203, 211, 271], "877": 59, "4140": 59, "21147": 59, "115975": 59, "846749014511809332450147": 59, "r193": 59, "bell_numb": 59, "r194": 59, "bellnumb": 59, "r195": 59, "bellpolynomi": 59, "hurwitz": [59, 62], "6k": 59, "appel": [59, 62, 193], "confer": [59, 95, 275], "r200": 59, "66": [59, 85, 90, 197, 201], "1000001": 59, "appellseq": [59, 197], "bernoulli_poli": [59, 197], "r196": 59, "bernoulli_numb": 59, "r197": 59, "bernoulli_polynomi": [59, 197], "r198": 59, "bernoullinumb": 59, "r199": 59, "bernoullipolynomi": 59, "luschni": [59, 62, 197], "manifesto": 59, "r201": 59, "2009": [59, 62, 94, 186, 197], "06743": [59, 62, 197], "_k": [59, 62, 81, 186, 196, 221], "expand_func": [59, 62], "6435": 59, "pascal": [59, 94], "4th": [59, 60, 76, 90, 94, 134], "195": 59, "r202": 59, "johndcook": 59, "binomial_coeffici": [59, 94], "c_n": [59, 62, 83, 197, 217], "429": [59, 201], "1430": 59, "4862": 59, "39764993382373624267": 59, "020884341620842555705": 59, "r203": 59, "catalan_numb": 59, "r204": 59, "catalannumb": [59, 201], "r205": 59, "r206": 59, "geomet": [59, 188], "mathcircl": 59, "2j": [59, 194, 221], "1385": [59, 197], "272": [59, 197], "7936": [59, 197], "2702765": 59, "4096": 59, "euler_poli": [59, 197], "r207": 59, "euler_numb": 59, "r208": 59, "eulernumb": 59, "r209": 59, "alternating_permut": 59, "r210": 59, "alternatingpermut": 59, "swing": 59, "derang": [59, 239], "r212": 59, "generate_derang": [59, 239], "r211": 59, "r213": 59, "double_factori": 59, "texttt": [59, 209], "r214": 59, "r215": 59, "paul": [59, 236], "235": 59, "268": 59, "1995": [59, 195, 213, 219], "f_z": [59, 182, 252], "f_2": [59, 79, 104, 113, 116, 135, 194, 211, 217], "r217": 59, "fibonacci_numb": 59, "r218": 59, "fibonaccinumb": 59, "t_0": [59, 214], "149": [59, 94], "r219": 59, "r220": 59, "tribonaccinumb": 59, "r221": 59, "oei": [59, 62, 94, 197], "a000073": 59, "137": [59, 90, 106], "205": [59, 79, 211], "5269": 59, "761": 59, "280": 59, "83711": 59, "27720": 59, "30247": 59, "9900": 59, "983697455232980674869851942390639915940": 59, "r222": 59, "harmonic_numb": 59, "r223": 59, "harmonicnumb": [59, 201], "r224": 59, "harmonicnumber2": 59, "l_0": [59, 105, 227, 228], "47": [59, 62, 90, 94, 106, 140, 172, 200], "76": [59, 62, 90, 94, 194, 197], "r225": 59, "lucas_numb": 59, "r226": 59, "lucasnumb": 59, "2t": 59, "genocchi_poli": [59, 197], "r227": 59, "genocchi_numb": 59, "r228": 59, "genocchinumb": 59, "r229": 59, "mathcal": [59, 60, 79, 104, 132, 164, 186, 197, 209], "a000111": [59, 197], "zigzag": 59, "li": [59, 62, 70, 81, 94, 167, 201, 255], "50521": [59, 197], "691": 59, "2730": 59, "andre_poli": [59, 197], "r230": 59, "r231": 59, "eulerzigzagnumb": 59, "r232": 59, "irrelev": 59, "r233": 59, "number_theori": 59, "r234": 59, "pentagonal_number_theorem": 59, "pochhamm": [59, 201, 213], "r235": 59, "r236": 59, "pochhammer_symbol": 59, "274": 59, "225": [59, 94, 195], "511": 59, "9330": 59, "34105": 59, "42525": 59, "22827": 59, "5880": 59, "750": 59, "r237": 59, "stirling_numbers_of_the_first_kind": 59, "r238": 59, "stirling_numbers_of_the_second_kind": 59, "multiset": [59, 79, 236, 239], "babi": [59, 94, 239], "aa": [59, 186], "bb": [59, 186, 213, 239], "multiset_combin": [59, 239], "aab": [59, 239], "aabc": 59, "aaaabbbbcccc": 59, "m_1": [59, 104, 146, 164, 186, 214], "m_2": [59, 116, 135, 146, 164, 186], "m_k": 59, "r239": 59, "r240": 59, "tinyurl": 59, "cep849r": 59, "ba": [59, 239], "multiset_permut": [59, 239], "r241": 59, "aabbc": 59, "mississippi": [59, 239], "609": 59, "1521": 59, "1768": 59, "1224": [59, 94], "579": 59, "197": 59, "r242": 59, "undergradu": 59, "csse": 59, "uwa": 59, "au": 59, "cits7209": 59, "707106781186548": 60, "negativeon": [60, 272], "tangent": [60, 64, 66, 70, 81, 198, 217], "643501108793284": 60, "r243": 60, "ib": [60, 122], "complex_conjug": 60, "r247": 60, "r244": 60, "trigonometric_funct": 60, "r245": 60, "r246": 60, "elementaryfunct": 60, "trigonometryangl": 60, "r248": 60, "r249": 60, "r250": 60, "r251": 60, "r252": 60, "r253": 60, "cotang": [60, 198], "r254": 60, "r255": 60, "r256": 60, "secant": [60, 197], "r257": 60, "r258": 60, "r259": 60, "cosec": 60, "r260": 60, "r261": 60, "r262": 60, "unnorm": [60, 62], "qquad": [60, 172, 194], "jn": [60, 62, 164, 197, 201, 271], "spheric": [60, 61, 106, 146, 186, 187, 197, 246, 249, 250, 271], "r263": 60, "sinc_funct": 60, "r264": 60, "inverse_trigonometric_funct": 60, "r265": 60, "r266": 60, "r267": 60, "r268": 60, "r269": 60, "r270": 60, "r271": 60, "r272": 60, "arctan": [60, 198, 201], "r273": 60, "r274": 60, "arccot": [60, 201], "r278": 60, "r275": 60, "r276": 60, "r277": 60, "arcsec": [60, 201], "r279": 60, "r280": 60, "r281": 60, "arccsc": [60, 201], "quadrant": [60, 192, 220], "clock": [60, 210], "reurn": 60, "r282": 60, "r283": 60, "r284": 60, "arctan2": [60, 201], "r285": 60, "hyperbolic_funct": 60, "r286": 60, "r287": 60, "arcsech": [60, 201], "imaginaryunit": [60, 201], "r288": 60, "r289": 60, "r290": 60, "arccsch": [60, 201], "567": 60, "r291": 60, "r292": 60, "ceilingfunct": 60, "r293": 60, "r294": 60, "floorfunct": 60, "r295": 60, "lfloor": [60, 192, 220, 221], "rfloor": [60, 192, 220, 221], "fractional_part": 60, "r296": 60, "fractionalpart": 60, "r297": 60, "w_k": 60, "635564016364870": 60, "34747534407696": 60, "41624341514535": 60, "lambert_w_funct": 60, "cond": [60, 79, 81, 209], "piecewise_fold": 60, "folded_cond": 60, "ITE": [60, 84, 201], "piecewise_exclus": 60, "_eval_integr": [60, 81], "piecewise_integr": 60, "as_expr_set_pair": 60, "skip_nan": 60, "mutual": [60, 79, 185], "conjunct": [60, 84, 187, 211, 232, 277], "supremum": [60, 209], "r298": 60, "directed_complete_partial_ord": 60, "r299": 60, "lattice_": 60, "28order": 60, "global_paramet": 60, "rootof": [60, 197], "rootoftool": [60, 90, 197], "integer_nthroot": [60, 94], "r300": 60, "square_root": 60, "r301": 60, "r302": 60, "root_of_un": 60, "r303": 60, "principal_valu": [60, 81], "r304": 60, "cuberoot": 60, "powdenest": 60, "misc": [60, 85, 242, 257], "r305": 60, "r306": 60, "r307": 60, "cube_root": 60, "r308": 60, "polar_lift": [61, 62, 213], "periodic_argu": 61, "principal_branch": [61, 79], "sec": [61, 81, 102, 196, 201, 210, 277], "csc": [61, 96, 201, 210], "acot": [61, 201], "asec": [61, 201], "acsc": [61, 201], "hyperbol": [61, 62, 198, 220, 273, 277], "hyperbolicfunct": 61, "coth": [61, 201, 213], "sech": [61, 201], "csch": [61, 201], "asinh": [61, 201], "acosh": [61, 201], "atanh": [61, 198, 201, 211], "acoth": [61, 201], "asech": [61, 201], "acsch": [61, 201], "roundfunct": 61, "lambertw": [61, 198, 201, 219, 220, 278], "exprcondpair": 61, "miscellan": [61, 238, 263, 264], "identityfunct": 61, "real_root": [61, 197, 219], "bell": [61, 151, 203, 239], "bernoulli": [61, 62, 197, 201, 219, 221], "catalan": [61, 201], "subfactori": [61, 201, 239], "factorial2": [61, 168, 201], "fallingfactori": [61, 201], "luca": [61, 94, 201, 207], "genocchi": [61, 62, 197], "andr": [61, 197], "multifactori": 61, "nc": 61, "nt": [61, 239], "fresnel": [61, 140, 201, 211], "airi": [61, 81, 217], "spline": 61, "ellipt": [61, 64, 94, 188], "mathieu": [61, 201], "delta_funct": [62, 81], "int_": [62, 78, 79, 81, 197, 204, 267, 271], "sum_i": [62, 208], "is_simpl": 62, "tensor_funct": 62, "kroneckerdelta": [62, 87, 167, 201, 213], "r309": 62, "deltafunct": [62, 81], "h0": 62, "electron": [62, 106, 210], "signal": [62, 84, 94, 102, 104, 134, 194, 272], "improp": [62, 81], "convolut": [62, 203, 257], "r310": 62, "heavisidestepfunct": 62, "r311": 62, "iv": [62, 198], "105": [62, 94, 197, 214], "parg": 62, "singularity_funct": 62, "singularityfunct": [62, 81, 97], "macaulai": 62, "heavisidediracdelta": 62, "r312": 62, "r313": 62, "r314": 62, "r315": 62, "r316": 62, "setminu": [62, 79], "17805383034794561964694160130": 62, "65092319930185633889": 62, "8724366472624298171": 62, "r317": 62, "r318": 62, "r319": 62, "loggammafunct": 62, "r320": 62, "espinosa": 62, "moll": 62, "r325": 62, "19093197": 62, "5173168": 62, "ni": [62, 94], "r321": 62, "polygamma_funct": 62, "r322": 62, "polygammafunct": 62, "r323": 62, "r324": 62, "polygamma2": 62, "2004": [62, 195, 214], "115": 62, "r326": 62, "digamma_funct": 62, "r327": 62, "digammafunct": 62, "r328": 62, "r329": 62, "trigamma_funct": 62, "r330": 62, "trigammafunct": 62, "r331": 62, "int_x": 62, "_1f_1": 62, "confluent": [62, 211], "xt": 62, "expint": [62, 201], "r332": 62, "incomplete_gamma_funct": 62, "upper_incomplete_gamma_funct": 62, "r333": 62, "r334": 62, "r335": 62, "gamma2": 62, "r336": 62, "gamma3": 62, "r337": 62, "exponential_integr": 62, "relation_with_other_funct": 62, "int_0": [62, 79, 81, 267, 277], "r338": 62, "lower_incomplete_gamma_funct": 62, "r339": 62, "r340": 62, "r341": 62, "r342": 62, "multigamma": 62, "gamma_p": 62, "r343": 62, "multivariate_gamma_funct": 62, "beta_funct": 62, "eulerian": 62, "02671848900111377452242355235388489324562": 62, "2112723729365330143": 62, "7655283165378005676": 62, "r344": 62, "r345": 62, "betafunct": 62, "r346": 62, "error_funct": 62, "999999984582742099719981147840": 62, "1296959": 62, "73071763923152794095062": 62, "r347": 62, "r348": 62, "r349": 62, "r350": 62, "0000000154172579002800188521596734869": 62, "r351": 62, "r352": 62, "r353": 62, "r354": 62, "5648024145755525987042919132": 62, "995322265018952734162069256367": 62, "r355": 62, "r356": 62, "r357": 62, "r358": 62, "179143454621291692285822705344": 62, "r359": 62, "inverse_funct": 62, "r360": 62, "inverseerf": [62, 201], "r361": 62, "r362": 62, "inverseerfc": [62, 201], "r363": 62, "inverseerf2": 62, "fresnelintegr": 62, "343415678363698242195300815958": 62, "fresnelc": [62, 201, 211], "r364": 62, "fresnel_integr": 62, "r365": 62, "r366": 62, "r367": 62, "r368": 62, "wrench": 62, "jr": 62, "vicki": 62, "allei": 62, "488253406075340754500223503357": 62, "r369": 62, "r370": 62, "r371": 62, "r372": 62, "r373": 62, "ei": [62, 79, 196, 201, 211, 214, 217, 227], "background": [62, 82, 127, 181, 184, 275], "cauchi": [62, 79, 81, 192, 217, 221], "219383934395520": 62, "21938393439552": 62, "shi": [62, 79, 201, 211], "e1": [62, 64, 71, 117, 191, 196, 208, 217, 220], "r374": 62, "r375": 62, "r376": 62, "sfu": [62, 81], "cbm": [62, 81], "aand": [62, 81], "page_228": 62, "int_1": [62, 79], "zt": [62, 79], "unbranch": [62, 79], "meijerg": [62, 73, 79, 81, 201, 221, 277], "postiv": 62, "r377": 62, "r378": 62, "expintegral": [62, 201], "r379": 62, "04516378011749278484458888919": 62, "0652795784357498247001125598": 62, "08346052231061726610939702133": 62, "soldner": 62, "findroot": [62, 219], "45136923488338": 62, "r380": 62, "logarithmic_integr": 62, "r381": 62, "logarithmicintegr": 62, "r382": 62, "r383": 62, "soldnersconst": 62, "92242131492155809316615998938": 62, "r384": 62, "r385": 62, "r386": 62, "r387": 62, "trigonometric_integr": 62, "_1": [62, 90, 177, 211, 240], "somewhat": [62, 81, 117, 192], "r388": 62, "r389": 62, "r390": 62, "laurent": [62, 192, 198, 217], "j_n": [62, 164], "r391": 62, "r392": 62, "r393": 62, "r394": 62, "yn": [62, 201, 207], "r395": 62, "i_": [62, 79, 211, 221, 222], "iz": 62, "r396": 62, "k_": [62, 79, 129, 130], "r397": 62, "hankel1": [62, 201], "hankel": [62, 81], "iy_": 62, "hankel2": [62, 201], "r398": 62, "hankelh1": [62, 201], "r399": 62, "hankelh2": [62, 201], "2z": [62, 220, 221], "orthopoli": [62, 197], "spherical_bessel_fn": [62, 197], "3j": [62, 146, 186], "099419756723640344491": 62, "054525080242173562897": 62, "r400": 62, "y_n": [62, 214], "18525034196069722536": 62, "014895573969924817587": 62, "r401": 62, "jn_zero": 62, "besseljzero": 62, "sph_jn": 62, "7635": 62, "095": 62, "323": [62, 94], "515": 62, "marcumq": 62, "marcum": 62, "q_m": 62, "r402": 62, "marcum_q": 62, "r403": 62, "airybas": 62, "airyai": [62, 201, 217], "ai": [62, 94, 197, 214, 242, 277], "airyaiprim": [62, 201], "22740742820168557599192443603787379946077222541710": 62, "airybi": [62, 201, 217], "airybiprim": [62, 201], "r404": 62, "airy_funct": 62, "r405": 62, "r406": 62, "encyclopediaofmath": 62, "r407": 62, "airyfunct": 62, "41230258795639848808323405461146104203453483447240": 62, "r408": 62, "r409": 62, "r410": 62, "r411": 62, "61825902074169104140626429133247528291577794512415": 62, "r412": 62, "r413": 62, "r414": 62, "r415": 62, "27879516692116952268509756941098324140300059345163": 62, "r416": 62, "r417": 62, "r418": 62, "r419": 62, "bspline": 62, "bspline_basi": 62, "knot": 62, "cubic": [62, 188, 197, 214, 219], "bspline_basis_set": 62, "r420": 62, "interpolating_splin": 62, "131": [62, 177], "39": [62, 94, 200], "interpolating_poli": [62, 197], "zeta_funct": 62, "admit": [62, 217], "lerch": 62, "transcend": 62, "lerchphi": [62, 201], "dirichlet_eta": [62, 201], "20205690315959": 62, "polylog": [62, 201], "r421": 62, "r422": 62, "hurwitz_zeta_funct": 62, "r423": 62, "dirichlet_eta_funct": 62, "r424": 62, "polylogarithm": 62, "sheet": [62, 210], "phi_0": 62, "ze": 62, "r425": 62, "bateman": 62, "erdelyi": 62, "1953": [62, 196], "york": [62, 79, 133, 211, 219], "mcgraw": [62, 112, 133, 177, 183, 246], "r426": 62, "r427": 62, "lerch_transcend": 62, "stieltj": [62, 201], "gamma_": [62, 105, 107], "r428": 62, "stieltjes_const": 62, "ap": [62, 66, 211], "bq": [62, 189, 190, 211], "a_p": [62, 79, 211, 277], "b_q": [62, 79, 211, 277], "_pf_q": [62, 211, 217, 277], "unicod": [62, 82, 90, 181, 201, 232, 271], "r429": 62, "r430": 62, "generalized_hypergeometric_funct": 62, "convergence_stat": 62, "radius_of_converg": 62, "radiu": [62, 64, 68, 70, 124, 126, 136, 140, 187, 220, 221, 255], "meijer": [62, 72, 74, 80, 81, 267, 277], "mellin": [62, 80, 81], "barn": 62, "b_m": [62, 79, 219], "confusingli": 62, "int_l": [62, 79, 211], "contour": [62, 64, 79, 187, 211], "__1": 62, "subvector": 62, "aother": 62, "bm": 62, "bother": [62, 272], "slater": [62, 211], "allow_hyp": [62, 213], "subsum": 62, "r431": 62, "r432": 62, "meijer_g": 62, "get_period": [62, 79], "appellf1": [62, 201], "b2": [62, 94, 97, 98, 109, 117, 134, 177, 190, 192, 201, 211, 214, 217, 251], "0063339426292673": 62, "172870711": 62, "659936": 62, "15605338197184": 62, "r433": 62, "appell_seri": 62, "r434": 62, "hypergeometricfunct": 62, "elliptic_integr": 62, "elliptic_k": [62, 201], "tfrac": [62, 217, 221], "eccentr": [62, 64], "50923695405127": 62, "625146415202697": 62, "elliptic_f": [62, 201], "r435": 62, "r436": 62, "ellipticintegr": 62, "elliptick": [62, 201], "909449841483": 62, "74720545502474": 62, "r437": 62, "r438": 62, "ellipticf": 62, "elliptic_": [62, 64, 201], "55203744279187": 62, "290764986058437": 62, "991052601328069": 62, "81879421395609": 62, "r439": 62, "r440": 62, "elliptice2": 62, "r441": 62, "elliptic": [62, 201], "elliptic_pi": [62, 201], "50232379629182": 62, "760939574180767": 62, "29136443417283": 62, "32555634906645": 62, "r442": 62, "r443": 62, "ellipticpi3": 62, "r444": 62, "ellipticpi": [62, 201], "mathieu_funct": 62, "mathieubas": 62, "mathieusprim": [62, 201], "mathieuc": [62, 201], "mathieucprim": [62, 201], "r445": 62, "r446": 62, "r447": 62, "r448": 62, "mathieuandspheroidalfunct": 62, "r449": 62, "r450": 62, "r451": 62, "r452": 62, "r453": 62, "r454": 62, "r455": 62, "r456": 62, "r457": 62, "r458": 62, "r459": 62, "r460": 62, "chebyshevu": [62, 201], "chebyshevt_root": 62, "chebyshevu_root": 62, "assoc_legendr": [62, 201], "hermite_prob": 62, "jacobi_poli": [62, 197], "gegenbauer_poli": [62, 197], "chebyshevt_poli": [62, 197], "chebyshevu_poli": [62, 197], "hermite_poli": [62, 197], "legendre_poli": [62, 197], "laguerre_poli": [62, 197], "r461": 62, "jacobi_polynomi": 62, "r462": 62, "jacobipolynomi": 62, "r463": 62, "jacobip": [62, 201], "jacobi_norm": 62, "normilz": 62, "p_m": 62, "delta_": [62, 164, 172], "r464": 62, "r465": 62, "r466": 62, "hermite_prob_poli": [62, 197], "r467": 62, "gegenbauer_polynomi": 62, "r468": 62, "gegenbauerpolynomi": 62, "r469": 62, "gegenbauerc3": 62, "r470": 62, "chebyshev_polynomi": 62, "r471": 62, "chebyshevpolynomialofthefirstkind": 62, "r472": 62, "chebyshevpolynomialofthesecondkind": 62, "r473": 62, "r474": 62, "u_n": [62, 81, 194, 196, 197], "r475": 62, "r476": 62, "r477": 62, "r478": 62, "r479": 62, "chebyshev_root": 62, "r480": 62, "legendre_polynomi": 62, "r481": 62, "legendrepolynomi": 62, "r482": 62, "legendrep": [62, 201], "r483": 62, "legendrep2": 62, "r484": 62, "associated_legendre_polynomi": 62, "r485": 62, "r486": 62, "r487": 62, "r488": 62, "hermite_polynomi": 62, "r489": 62, "hermitepolynomi": 62, "r490": 62, "hermiteh": [62, 201], "probabilist": [62, 197, 221], "he_n": [62, 197], "telephon": 62, "a000085": 62, "232": 62, "764": 62, "2620": 62, "9496": 62, "r491": 62, "r492": 62, "l_n": [62, 81, 197], "r493": 62, "laguerre_polynomi": 62, "r494": 62, "laguerrepolynomi": 62, "r495": 62, "laguerrel": [62, 201], "r496": 62, "laguerrel3": 62, "r497": 62, "generalized_laguerre_polynomi": 62, "r498": 62, "associatedlaguerrepolynomi": 62, "r499": 62, "r500": 62, "spherical_harmon": 62, "ynm": [62, 186], "ynm_c": 62, "znm": 62, "r501": 62, "r502": 62, "sphericalharmon": 62, "r503": 62, "sphericalharmonici": 62, "r504": 62, "r505": 62, "r506": 62, "r507": 62, "z_n": [62, 195], "r508": 62, "r509": 62, "r510": 62, "eijk": 62, "levicivita": [62, 90], "eval_levicivita": 62, "pseudotensor": 62, "delta_rang": [62, 167], "kroneck": [62, 166, 167, 222, 227], "r511": 62, "kronecker_delta": [62, 167], "indices_contain_equal_inform": [62, 167], "fermi": [62, 167], "above_fermi": [62, 167], "below_fermi": [62, 167], "is_above_fermi": [62, 167], "is_below_fermi": [62, 167], "is_only_below_fermi": [62, 167], "is_only_above_fermi": [62, 167], "killable_index": [62, 167], "preferred_index": [62, 167], "point2d": [63, 64, 65, 66, 67, 69, 70, 71], "arbitrary_point": [63, 64, 65, 66, 67, 68, 70], "polyfunc": [63, 197], "ambient_dimens": [63, 65, 67, 69], "plot_interv": [63, 64, 67, 70], "lower_bound": [63, 64, 67, 70], "upper_bound": [63, 64, 67, 70], "counterclockwis": [63, 64, 65, 69, 98], "geometryent": [63, 64, 65, 67, 69, 70, 71], "hradiu": 64, "vradiu": 64, "geometryerror": [64, 67, 70, 71], "radii": 64, "foci": 64, "periapsi": 64, "apoapsi": 64, "focus_dist": 64, "shortest": [64, 67, 70, 184, 207, 213, 217, 239], "auxiliary_circl": 64, "xmin": [64, 65, 67, 69, 70, 187], "ymin": [64, 65, 67, 69, 70, 187], "xmax": [64, 65, 67, 69, 70, 187], "ymax": [64, 65, 67, 69, 70, 187], "rectangl": [64, 65, 67, 69, 70, 187, 197], "director_circl": 64, "perpendicular": [64, 67, 68, 70, 83, 125, 140, 185], "director": 64, "130": 64, "r512": 64, "encloses_point": [64, 65, 70], "border": [64, 70], "_slope": 64, "slope": [64, 65, 67, 70, 97, 98, 102], "eq1": [64, 217, 219, 220], "eq2": [64, 84, 217, 220], "r513": 64, "108270": 64, "r514": 64, "equation_of_a_shifted_ellips": 64, "evolut": 64, "focal": [64, 136, 140], "100500": 64, "363": [64, 94, 195], "175": [64, 90, 194, 195], "is_tang": [64, 66], "tangent_lin": 64, "normal_lin": 64, "line2d": [64, 67, 70], "quartic": [64, 197, 219], "2020": [64, 146], "polar_second_moment_of_area": [64, 70], "moment": [64, 70, 97, 98, 119, 127, 130, 176, 187, 197, 214, 221], "constitu": [64, 70, 114, 177, 207, 246], "planar": [64, 70, 98, 140], "resist": [64, 70, 97, 98, 210], "deflect": [64, 70, 97, 98], "bend": [64, 70, 97, 99], "r515": 64, "polar_moment_of_inertia": [64, 70], "random_point": [64, 67, 68], "arb": 64, "364": 64, "notimpl": [64, 196], "second_moment_of_area": [64, 70], "centroid": [64, 70, 71, 97], "i_xx": [64, 70], "i_yi": [64, 70], "i_xi": [64, 70], "ellis": 64, "r516": 64, "list_of_second_moments_of_area": 64, "section_modulu": [64, 70], "sympify": [64, 70, 97, 100, 109, 114, 138, 141, 179], "farthest": [64, 70], "s_x": [64, 70], "s_y": [64, 70], "r517": 64, "semilatus_rectum": 64, "semi": [64, 67, 94], "latu": 64, "rectum": 64, "chord": 64, "conic": [64, 214, 246], "directrix": 64, "r518": 64, "semilatusrectum": 64, "r519": 64, "latus_rectum": 64, "collinear": [64, 66, 68, 69, 70, 187], "gx": 64, "hy": 64, "synonym": [64, 196], "p4": [64, 67, 69, 70, 187], "boundari": [65, 67, 97, 98, 180, 198, 209, 217, 221], "t2": [65, 70, 71, 94, 109, 114, 214, 221, 227], "ordering_of_class": 65, "is_similar": [65, 67, 70, 71], "uniform": [65, 187, 219, 221], "enlarg": 65, "shrink": [65, 79], "parameter_valu": [65, 68], "pent": 65, "rpent": 65, "rcirc": 65, "entity1": 66, "entity2": 66, "zp": 66, "is_collinear": [66, 69], "segment2d": [66, 67, 70, 71], "wikipappu": 66, "bc": [66, 100, 239, 242, 251], "subs_point": 66, "p11": 66, "p12": 66, "p13": 66, "p21": 66, "p22": 66, "p23": 66, "ll1": 66, "ll2": 66, "ll3": 66, "ll4": 66, "ll5": 66, "ll6": 66, "pp1": 66, "pp2": 66, "pp3": 66, "encyclopedia": [66, 183], "apr": 66, "s_hexagon_theorem": 66, "clockwis": [66, 81, 85, 97, 98, 100], "overlap": [66, 71, 93, 188, 209, 242], "infanc": 66, "geometryresult": 66, "fair": [66, 221], "angle_between": [67, 68, 70, 177], "reflex": 67, "eman": 67, "readili": [67, 90], "sw": 67, "obtus": 67, "smallest_angle_between": 67, "line3d": [67, 68, 69], "is_perpendicular": [67, 68, 69, 70], "ray2d": [67, 70], "closing_angl": 67, "are_concurr": [67, 68], "concurr": [67, 68, 198], "l3": [67, 120, 194], "l4": [67, 120], "bisector": [67, 70], "p5": [67, 69, 70, 187], "p6": [67, 70, 187], "p7": [67, 70, 187], "segment3d": [67, 68], "direction_ratio": [67, 69], "is_parallel": [67, 68], "parallel_lin": 67, "perpendicular_lin": [67, 68], "perpendicular_seg": 67, "enpoint": 67, "reform": 67, "92": [67, 195, 217, 221], "ccw": [67, 70], "ray3d": [67, 68, 140], "xdirect": 67, "ydirect": 67, "midpoint": [67, 69, 70, 81, 187, 251], "170": [67, 221], "341": 67, "perpendicular_bisector": 67, "linearentity2d": 67, "linearentity3d": [67, 68], "direction_cosin": [67, 69], "zdirect": 67, "normal_vector": [68, 140], "proce": [68, 131, 194, 196, 211, 219], "147": 68, "321": 68, "is_coplanar": 68, "perpendicualar": 68, "parallel_plan": 68, "on_circl": 68, "off_circl": 68, "perpendicular_plan": 68, "pt1": 68, "projection_lin": 68, "on_morph": 69, "affine_rank": 69, "are_coplanar": 69, "canberra_dist": 69, "canberra": 69, "geometricent": 69, "taxicab_dist": 69, "is_concycl": 69, "concycl": 69, "fewer": [69, 70, 131, 221, 267], "is_scalar_multipl": 69, "ambient": 69, "orthogonal_direct": 69, "taxicab": 69, "_nocheck": 69, "are_collinear": 69, "4x4": [69, 93, 139, 221], "travers": [70, 94, 110, 197, 210, 226, 236, 257, 272], "unrot": 70, "circumscrib": 70, "spin": [70, 106, 119, 153, 154, 162], "perimet": [70, 253], "contact": [70, 119, 123, 124, 125, 126, 184, 225], "38": [70, 90, 94, 201, 214, 216, 221], "cut_sect": 70, "upper_polygon": 70, "lower_polygon": 70, "upper_seg": 70, "lower_seg": 70, "r520": 70, "r521": 70, "paulbourk": 70, "polygonmesh": 70, "insidepoli": 70, "first_moment_of_area": 70, "q_x": [70, 184], "q_y": [70, 184], "625": [70, 255], "3125": [70, 221], "525": 70, "3000": [70, 97], "r522": 70, "skyciv": 70, "beam": [70, 100, 136, 139, 262], "bmd": 70, "r523": 70, "mechanicalc": 70, "poly1": 70, "poly2": 70, "interior": [70, 197, 209], "180": [70, 185, 195], "r524": 70, "r525": 70, "r526": 70, "apothem": 70, "interior_angl": 70, "exterior_angl": 70, "circumcircl": 70, "incircl": 70, "inradiu": 70, "inscrib": 70, "circumcent": 70, "circumradiu": 70, "leg": 70, "square_in_unit_circl": 70, "kite": 70, "asa": 70, "sa": [70, 197], "sss": 70, "altitud": 70, "orthocent": 70, "exradii": 70, "median": [70, 221, 263], "medial": 70, "nine_point_circl": 70, "straight": [70, 76, 102, 121, 184, 217], "eulerlin": 70, "equilater": 70, "coincid": [70, 90, 93, 111, 117, 188, 246, 250, 269], "excent": 70, "excircl": 70, "touch": [70, 119, 210], "r527": 70, "ly": [70, 90, 192], "exradiu": 70, "r528": 70, "r529": 70, "incent": 70, "is_equilater": 70, "is_isoscel": 70, "is_right": 70, "is_scalen": 70, "nine": [70, 201], "feet": 70, "real_num": 71, "hull": 71, "r530": 71, "graham_scan": 71, "r531": 71, "andrew": 71, "1979": [71, 172], "geomalgorithm": 71, "a10": 71, "_hull": 71, "t3": [71, 214], "mass": [71, 106, 107, 108, 109, 111, 112, 116, 117, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 134, 135, 143, 168, 170, 171, 172, 182, 184, 232, 253, 254], "averag": [71, 81, 94, 194, 221], "qq": [72, 73, 75, 76, 77, 81, 188, 189, 190, 191, 193, 194, 196, 197, 198], "p_r": 72, "holonomic_funct": 72, "from_hyp": [73, 76], "holonomicfunct": [73, 74, 76], "from_meijerg": [73, 76], "initcond": [73, 75, 76], "expr_to_holonom": [73, 76, 77, 78], "lenic": [73, 75], "ground": [73, 119, 123, 124, 125, 126, 188, 191, 192, 194, 196, 197, 219, 276], "meijerint": [73, 75, 79, 81], "_rewrite1": [73, 79], "_convert_poly_rat_alg": [73, 75], "_create_t": [73, 75], "differentialoper": [74, 76, 156], "differentialoperatoralgebra": 74, "_create_lookup_t": [75, 79], "old_poly_r": [76, 77, 188, 191, 192], "to_expr": [76, 77, 78, 104], "to_sequ": 76, "n_0": [76, 194, 219, 220], "indici": [76, 77, 78, 217], "c_j": [76, 79, 211], "holonomicsequ": 76, "r532": 76, "hal": 76, "inria": [76, 81], "fr": [76, 81, 94, 112, 117, 119, 121, 124, 125, 129, 131, 134, 221], "00070025": 76, "r533": 76, "risc": [76, 217, 246], "jku": [76, 217, 246], "risc_2244": 76, "diplform": 76, "_recur": 76, "rk4": 76, "71828182845905": 76, "10517083333333": 76, "22140257085069": 76, "34985849706254": 76, "49182424008069": 76, "64872063859684": 76, "82211796209193": 76, "01375162659678": 76, "22553956329232": 76, "45960141378007": 76, "71827974413517": 76, "331": 76, "4641": 76, "61051": 76, "771561": 76, "9487171": 76, "14358881": 76, "357947691": 76, "5937424601": 76, "to_hyp": 76, "as_list": [76, 197], "to_meijerg": 76, "homogen": [77, 81, 90, 104, 192, 194, 197, 214, 217, 218, 221], "1_0": 77, "1_1": 77, "0_0": 77, "0_1": 77, "pyplot": [77, 134], "plt": [77, 134], "list_of_poli": 77, "weyl": [77, 83], "Ore": 77, "dxa": 77, "endomorph": [77, 196], "frobeniu": [78, 90, 94, 194, 195], "subtleti": 79, "recast": [79, 213, 219, 220], "branchpoint": 79, "crude": [79, 119, 187], "decre": 79, "biholomorph": 79, "topologi": [79, 209], "neighbourhood": 79, "evid": [79, 112, 125, 211], "peculiar": [79, 185], "_split_mul": 79, "_mytyp": 79, "inequival": 79, "_mul_as_two_part": 79, "bx": [79, 221, 227], "twist": 79, "recognis": [79, 191, 211, 213], "anywai": [79, 213, 217], "analyitc": 79, "_rewrite_singl": 79, "_rewrite2": 79, "_rewrite_saxena_1": 79, "_rewrite_saxena": 79, "blogpost": 79, "remedi": 79, "exploit": [79, 233], "transpar": [79, 82, 181], "nessgrh": 79, "wordpress": [79, 214], "07": 79, "stade": 79, "c_u": 79, "d_1": [79, 172, 197, 221], "d_v": 79, "amalgam": 79, "prudnikov1990": [79, 211], "luke1969": [79, 211], "c_3": [79, 217], "c_4": 79, "visibl": [79, 187], "fulfil": [79, 186], "vee": [79, 84], "lceil": 79, "rceil": 79, "d_j": [79, 172, 211], "lambda_c": [79, 130], "lambda_": 79, "z_0": [79, 213], "z_1": 79, "a_i": [79, 172, 177, 185, 189, 194, 211], "c_5": 79, "c_6": 79, "c_7": 79, "c_8": 79, "lvert": 79, "rvert": 79, "c_9": 79, "versatil": 79, "bz": [79, 214, 227], "deform": [79, 98], "encircl": 79, "appeal": 79, "fox": 79, "obstacl": 79, "identif": [79, 220], "domin": [79, 85, 206, 208], "iT": 79, "omega_": 79, "disguis": 79, "meijerint_indefinit": 79, "meijerint_definit": 79, "meijerint_invers": 79, "kelli": [79, 211], "roach": [79, 211], "211": [79, 94, 197, 211, 217], "prudnikov": [79, 211], "yu": [79, 186, 211], "brychkov": [79, 211], "marichev": [79, 211], "gordon": [79, 146, 211], "breach": [79, 211], "_coeffexpvalueerror": 79, "_get_coeff_exp": 79, "_check_anteced": 79, "_check_antecedents_1": 79, "mt": 79, "_check_antecedents_invers": 79, "anteced": [79, 208], "_condsimp": 79, "hoc": 79, "simp": [79, 119, 177], "_dummi": 79, "_dummy_": 79, "_eval_cond": 79, "_expon": 79, "_find_splitting_point": 79, "fsp": 79, "_flip_g": 79, "_function": 79, "_guess_expans": 79, "sensibl": [79, 81], "_inflate_fox_h": 79, "_inflate_g": 79, "_int0oo": 79, "_int0oo_1": 79, "_int_invers": 79, "_is_analyt": 79, "almost": [79, 88, 96, 169, 187, 188, 192, 197, 198, 217, 221, 235, 236, 239, 271], "_meijerint_definite_2": 79, "expand_mul": 79, "trigexpand": 79, "_meijerint_definite_3": 79, "_meijerint_definite_4": 79, "only_doubl": 79, "_meijerint_indefinite_1": 79, "_mul_arg": 79, "_my_principal_branch": 79, "full_pb": 79, "nearer": 79, "superflu": 79, "opaqu": [79, 201], "fac": 79, "_rewrite_invers": 79, "costli": [79, 121, 273], "tx": [79, 275], "overview": [80, 189, 220, 253, 254], "argand": [80, 220], "lookup": [80, 81, 90, 94, 211], "laplac": [80, 81, 101, 102, 104, 221], "todo": [80, 145, 147, 151, 152, 156, 157, 159, 160, 161, 162, 163, 194, 201, 208, 226], "polytop": 80, "happili": [81, 225], "nonelementari": 81, "mellin_transform": 81, "bilater": 81, "mellintransform": 81, "integraltransform": 81, "nocond": 81, "inverse_mellin_transform": 81, "laplace_transform": [81, 104], "fourier_transform": 81, "hankel_transform": 81, "inverse_hankel_transform": 81, "suitabl": [81, 87, 96, 189, 191, 194, 196, 201, 211, 214, 217, 220, 222, 270], "inversemellintransform": 81, "attemp": 81, "laplacetransform": 81, "inverse_laplace_transform": 81, "singularit": [81, 131], "inverselaplacetransform": 81, "_fast_inverse_laplac": 81, "rootsum": [81, 197, 203], "fouriertransform": 81, "_fourier_transform": 81, "inverse_fourier_transform": 81, "sine_transform": 81, "inverse_sine_transform": 81, "cosine_transform": 81, "inverse_cosine_transform": 81, "bixk": 81, "inversefouriertransform": 81, "sinetransform": 81, "inversesinetransform": 81, "cosinetransform": 81, "inversecosinetransform": 81, "hankeltransform": 81, "ht": 81, "inversehankeltransform": 81, "_compute_transform": 81, "_as_integr": 81, "integraltransformerror": 81, "_name": 81, "_collapse_extra": 81, "needev": 81, "function_vari": 81, "transform_vari": 81, "lazard": [81, 194, 197], "rioboo": 81, "trager": 81, "horowitz": 81, "ostrogradski": 81, "ratint": 81, "rationaltool": [81, 197], "ratint_logpart": 81, "ratint_ratpart": 81, "r534": 81, "bronstein": [81, 195, 197, 203, 219], "verlag": [81, 195], "deg": [81, 102, 117, 189, 194, 196, 197], "q_i": [81, 113, 131], "_t": [81, 117, 120, 134, 167, 176, 177, 180, 211, 221], "trigintegr": 81, "trigonometri": 81, "r535": 81, "integration_techniqu": 81, "deltaintegr": 81, "couldn": 81, "didn": [81, 90, 131], "singularityintegr": 81, "risch_integr": 81, "nonelementaryintegr": 81, "proven": [81, 94, 251, 269], "handle_first": 81, "separate_integr": 81, "rewrite_complex": 81, "forthcom": 81, "5109": 81, "outer": [81, 114, 132, 134, 150, 155, 156, 177, 180, 183, 185, 203, 209, 225, 246, 248, 249], "pop": [81, 214], "manualintegr": 81, "integral_step": 81, "student": [81, 210, 214, 221], "_i": [81, 167, 172, 198], "namedtupl": 81, "substep": 81, "sympy_gamma": 81, "app": 81, "intstep": 81, "urul": 81, "u_var": 81, "_u": [81, 167], "u_func": 81, "arctanrul": 81, "trigrul": 81, "rewriterul": 81, "addrul": 81, "powerrul": 81, "constanttimesrul": 81, "constantrul": 81, "norman": 81, "slowest": [81, 95], "retri": [81, 94], "degree_offset": 81, "unnecessary_permut": 81, "_try_heurisch": 81, "manuel": [81, 206], "poor": [81, 95], "man": [81, 195], "whittak": 81, "r536": 81, "sop": [81, 84], "cafe": 81, "pmint": 81, "r537": 81, "gedd": [81, 195], "stefanu": 81, "217": [81, 195], "r538": 81, "davenport": [81, 194, 195], "eurocam": 81, "lnc": [81, 195, 219], "157": [81, 94, 98, 195], "r539": 81, "iii": [81, 201, 217], "sigsam": 81, "bulletin": 81, "1982": [81, 186], "r540": 81, "transact": [81, 195], "1985": [81, 112, 133, 177, 246], "356": [81, 196, 219], "362": 81, "huge": [81, 94, 197, 237], "entail": 81, "delic": [81, 188], "albeit": [81, 249], "mimic": [81, 82, 181, 240], "moder": 81, "irrespect": [81, 214, 217, 242], "line_integr": 81, "as_sum": 81, "subinterv": 81, "trapezoid": [81, 90, 221], "730": 81, "809": 81, "decai": 81, "r541": 81, "riemann_sum": 81, "r542": 81, "cauchy_principal_valu": 81, "r543": 81, "cauchyprincipalvalu": 81, "int_a": 81, "uvar": 81, "ui": [81, 94, 218], "accomplish": [81, 131, 134, 252], "3aissu": 81, "3aopen": 81, "3aintegr": 81, "gauss_legendr": 81, "n_digit": 81, "legendr": [81, 94, 197, 201, 214], "r544": 81, "w_i": [81, 136, 197, 217], "7746": 81, "55556": 81, "88889": 81, "86114": 81, "33998": 81, "34785": 81, "65215": 81, "gauss_laguerr": 81, "gauss_gen_laguerr": 81, "gauss_hermit": 81, "gauss_chebyshev_t": 81, "gauss_chebyshev_u": 81, "gauss_jacobi": 81, "gauss_lobatto": 81, "gaussian_quadratur": 81, "r545": 81, "fsu": 81, "jburkardt": 81, "cpp_src": 81, "legendre_rul": 81, "laguerr": [81, 197, 201], "r546": 81, "41577": 81, "2943": 81, "2899": 81, "71109": 81, "27852": 81, "010389": 81, "22285": 81, "1889": 81, "9927": 81, "7751": 81, "8375": 81, "983": 81, "45896": 81, "417": [81, 213], "11337": 81, "010399": 81, "00026102": 81, "9855e": 81, "93laguerre_quadratur": 81, "r547": 81, "laguerre_rul": 81, "hermit": [81, 85, 90, 91, 190, 196, 197, 201, 221], "r548": 81, "2247": 81, "29541": 81, "1816": 81, "3506": 81, "3358": 81, "43608": 81, "00453": 81, "15707": 81, "72463": 81, "hermite_quadratur": 81, "r549": 81, "hermite_rul": 81, "r550": 81, "gen_hermite_rul": 81, "r551": 81, "19016": 81, "7845": 81, "5253": 81, "4493": 81, "31413": 81, "00906": 81, "97851": 81, "9904": 81, "3193": 81, "712": 81, "53087": 81, "67721": 81, "11895": 81, "0023152": 81, "r552": 81, "gen_laguerre_rul": 81, "r553": 81, "86602": 81, "0472": 81, "96593": 81, "70711": 81, "25882": 81, "5236": 81, "93gauss_quadratur": 81, "r554": 81, "chebyshev1_rul": 81, "r555": 81, "3927": 81, "7854": 81, "90097": 81, "62349": 81, "22252": 81, "084489": 81, "27433": 81, "42658": 81, "r556": 81, "chebyshev2_rul": 81, "jacobi": [81, 94, 106, 197, 201], "r557": 81, "7063": 81, "0973": 81, "33795": 81, "87174": 81, "5917": 81, "2093": 81, "050584": 81, "22169": 81, "39439": 81, "93jacobi_quadratur": 81, "r558": 81, "jacobi_rul": 81, "r559": 81, "gegenbauer_rul": 81, "lobatto": 81, "r560": 81, "3333": 81, "44721": 81, "16667": 81, "83333": 81, "93lobatto_rul": 81, "r561": 81, "page_888": 81, "intpoli": 81, "chin": 81, "al": [81, 117, 146, 194, 210, 213], "2015": [81, 220], "unit_cub": 81, "polytope_integr": 81, "eric": [81, 195], "jean": 81, "lasserr": 81, "sukumar": 81, "nonconvex": 81, "967": 81, "981": 81, "dilbert": 81, "engr": 81, "ucdavi": 81, "suku": 81, "max_degre": [81, 197], "689": [81, 98], "21875": 81, "octahedron": 81, "trivari": 81, "enable_automatic_int_sympif": 82, "enable_automatic_symbol": 82, "init_ipython_sess": 82, "argv": [82, 232], "init_python_sess": 82, "use_latex": [82, 181, 276], "quiet": 82, "str_printer": [82, 181], "latex_print": [82, 181], "pylab": 82, "stringifi": [82, 181], "sstrrepr": [82, 181, 201], "lexograph": [82, 181], "gui": [82, 181], "statu": 82, "\u03b8": [82, 111, 139, 220], "int_to_integ": 82, "decistmt": 82, "f401": 82, "0x12": 82, "num_column": [82, 181, 201, 217], "no_glob": [82, 181], "ip": [82, 155, 161, 181], "forecolor": [82, 181], "backcolor": [82, 181], "fontsiz": [82, 181, 201], "10pt": [82, 181, 201], "latex_mod": [82, 181], "print_builtin": [82, 181], "interactiveconsol": [82, 181], "preambl": [82, 181, 201], "handwritten": [82, 181], "ctan": [82, 181], "pkg": [82, 181], "dvi": [82, 181, 201], "foreground": [82, 181], "black": [82, 152, 163, 181, 201, 276], "white": [82, 181, 221], "documentclass": [82, 181, 201], "dpi": [82, 181], "u03b8": 82, "dvip": 82, "r562": 82, "r563": 82, "the_68_standard_colors_known_to_dvip": 82, "config": 82, "root_system": 83, "rootsystem": 83, "cartantyp": 83, "cartan": 83, "subalgebra": 83, "adjoint": [83, 85, 90, 144, 148], "hyperplan": 83, "k_y": 83, "r564": 83, "r565": 83, "humphrei": 83, "add_as_root": 83, "root1": 83, "root2": 83, "add_simple_root": 83, "newroot": 83, "all_root": [83, 94, 197], "cartan_matrix": 83, "dynkin_diagram": 83, "dynkin": 83, "root_spac": 83, "simple_root": 83, "type_a": 83, "typea": 83, "basic_root": 83, "iin": 83, "jth": [83, 220], "ijth": 83, "cartan_typ": 83, "highest_root": 83, "lie_algebra": 83, "positive_root": 83, "type_b": 83, "typeb": 83, "b4": 83, "b3": [83, 117, 134, 177, 251], "type_c": 83, "typec": 83, "c4": [83, 85, 87, 217], "type_d": 83, "d4": [83, 221], "dmension": 83, "type_": 83, "e6": 83, "type_f": 83, "typef": 83, "f_4": [83, 113], "f4": [83, 187], "type_g": 83, "typeg": 83, "weyl_group": 83, "weylgroup": 83, "semisimpl": 83, "isometri": 83, "coxeter_diagram": 83, "undirect": [83, 239], "s_is_j": 83, "delete_doubl": 83, "element_ord": 83, "weylelt": 83, "group_nam": 83, "group_ord": 83, "192": 83, "matrix_form": 83, "cartantype_gener": 83, "standard_cartan": 83, "dynkindiagram": 83, "cartanmatrix": 83, "sopform": 84, "minterm": 84, "dontcar": 84, "simplified_pair": 84, "combo": 84, "outcom": [84, 170, 221], "r566": 84, "quin": 84, "mccluskey_algorithm": 84, "posform": 84, "r567": 84, "anfform": 84, "truthvalu": 84, "anf": 84, "funciton": 84, "zhegalkin": 84, "r568": 84, "zhegalkin_polynomi": 84, "as_set": 84, "booleantru": 84, "doubt": [84, 117], "greet": 84, "booleanfals": 84, "universalset": 84, "nand": 84, "xnor": 84, "gate": [84, 147, 152, 154, 160, 161, 163], "perspect": [84, 94, 104, 172, 187, 234, 250, 254], "multiplex": 84, "disjunct": 84, "to_anf": 84, "oplu": [84, 151], "to_cnf": 84, "cnf": 84, "mccluskei": 84, "to_dnf": 84, "to_nnf": 84, "nnf": 84, "is_anf": 84, "is_cnf": 84, "is_dnf": 84, "is_nnf": 84, "gateinputcount": 84, "simplify_log": 84, "fewest": [84, 161], "bool_map": 84, "bool1": 84, "bool2": 84, "function1": 84, "function2": 84, "distribute_and_over_or": 84, "distribute_or_over_and": 84, "distribute_xor_over_and": 84, "eliminate_impl": 84, "truth_tabl": 84, "ibin": [84, 239], "integer_to_term": 84, "0001111011": [84, 239], "1101111000": [84, 239], "term_to_integ": 84, "bool_maxterm": 84, "maxterm": 84, "complement": [84, 87, 197, 220], "r569": 84, "canonical_normal_form": 84, "indexing_maxterm": 84, "bool_minterm": 84, "patter": 84, "r570": 84, "indexing_minterm": 84, "bool_monomi": 84, "enumar": 84, "anf_coeff": 84, "to_int_repr": 84, "all_model": 84, "unsatisfi": 84, "use_model": 84, "unsat": 84, "matrixbas": [85, 86, 87, 89, 190], "dirac": [85, 90, 102, 106, 107, 165, 201], "__abs__": [85, 192], "__add__": [85, 192, 196], "shapeerror": [85, 87, 90], "__len__": 85, "96": [85, 90, 221], "mismatch": 85, "matrix_multiply_elementwis": [85, 90], "applyfunc": [85, 86, 90, 125, 177, 222], "col": [85, 87, 90, 93, 104, 134, 190, 196, 273], "col_del": [85, 90, 273], "col_join": [85, 90, 119], "col_insert": [85, 273], "row_insert": [85, 273], "row_join": [85, 90, 119], "companion": [85, 87], "c0": [85, 87, 208, 217, 219], "sparsematrix": [85, 89, 90, 93, 202, 213], "diag": [85, 87, 90, 93, 134, 190, 227, 273], "immutablematrix": [85, 87, 89, 104, 177, 221, 246, 248, 273], "blockmatrix": [85, 87, 90], "sparsetool": [85, 93], "kth": [85, 94], "rowslist": [85, 190], "colslist": 85, "submatrix": [85, 90, 194, 221], "get_diag_block": [85, 87, 90], "decoupl": 85, "hstack": [85, 190], "is_anti_symmetr": 85, "is_diagon": [85, 90], "is_low": [85, 190], "is_upp": [85, 190], "matrixeigen": [85, 89], "is_diagonaliz": [85, 90], "is_hermitian": [85, 90], "is_lower_hessenberg": 85, "hessenberg": [85, 90], "superdiagon": 85, "is_upper_hessenberg": 85, "is_strongly_diagonally_domin": 85, "strongli": [85, 90, 190, 239], "m1": [85, 90, 94, 98, 138, 146, 164, 166, 170, 214, 217, 222, 227], "subdiagon": [85, 90], "is_weakly_diagonally_domin": 85, "weakli": [85, 239], "vacuou": 85, "jordan_block": [85, 90], "eigenv": [85, 90, 117, 119, 134, 161, 271, 273], "rectangular": [85, 90, 209, 220, 249], "r571": 85, "jordan_matrix": [85, 217], "dotprodsimp": 85, "blowup": 85, "multiply_elementwis": [85, 90], "hadamard": [85, 87, 90, 151, 152, 163, 201], "elementwis": [85, 87, 90, 222], "300": [85, 90, 94, 97, 182, 187, 198, 254], "bmatrix": [85, 87, 90, 121, 129, 130, 131, 132, 177, 185, 214], "a_0": [85, 90, 204, 214, 217, 222, 277], "vdot": [85, 87, 90, 172], "alpha_0": 85, "alpha_1": [85, 94, 196], "alpha_": [85, 186], "permute_col": 85, "permute_row": 85, "mulsimp": 85, "rmultipli": 85, "__rmul__": 85, "rot90": 85, "anticlockwis": 85, "row_del": [85, 90, 273], "todod": 85, "tolist": [85, 222], "vec": [85, 90, 134, 177, 186, 194, 251, 252, 254], "vech": 85, "check_symmetri": 85, "vstack": [85, 190], "wilkinson": 85, "w_": [85, 196], "wminu": 85, "wplu": 85, "r572": 85, "mathwork": [85, 102, 221, 273], "cleve": 85, "04": [85, 221], "r573": 85, "claredon": 85, "oxford": 85, "662": 85, "intm": 85, "undefinedkind": [85, 209], "tuplekind": [85, 209], "mutabledensematrix": [86, 190, 242], "densematrix": [86, 90], "ldldecomposit": [86, 90], "ldl": [86, 90], "choleski": [86, 90], "ludecomposit": [86, 87, 90, 273], "qrdecomposit": [86, 90], "as_immut": 86, "lower_triangular_solv": [86, 90], "upper_triangular_solv": [86, 90], "gauss_jordan_solv": [86, 90], "cholesky_solv": [86, 90], "diagonal_solv": [86, 90], "ldlsolv": [86, 90], "lusolv": [86, 90, 111, 113, 131, 135, 219, 273], "qrsolv": [86, 90], "pinv_solv": [86, 90], "permutedim": [87, 222, 223], "arraytensorproduct": [87, 223], "from_index_summ": 87, "first_index": 87, "last_index": 87, "longrightarrow": 87, "matpow": [87, 201], "hadamard_product": 87, "aka": 87, "hadamardproduct": [87, 201], "hadamardpow": [87, 201], "ddot": [87, 90, 121, 130, 181, 184, 201, 277], "functionmatrix": 87, "lazili": [87, 207], "342923500": 87, "permutationmatrix": [87, 90], "matrixpermut": 87, "companionmatrix": 87, "matrixset": [87, 209], "submatric": [87, 90, 190, 221], "block_collaps": 87, "dat": [87, 239], "irregular": [87, 90], "ldudecomposit": 87, "ldu": 87, "2x2": [87, 93, 136, 190, 217], "noninvertiblematrixerror": [87, 273], "udldecomposit": 87, "lu": [87, 90, 190, 195], "udl": 87, "schur": 87, "penros": [87, 90], "pinv": [87, 90], "r574": 87, "schur_compl": 87, "blockdiagmatrix": [87, 90], "diag_block": 87, "alias": [88, 192], "bridg": [88, 100, 117, 240], "tension": 88, "matrixdetermin": 89, "matrixreduct": 89, "matrixsubspac": 89, "matrixcalculu": 89, "immutablesparsematrix": 89, "gramschmidt": 90, "m2": [90, 94, 98, 114, 138, 146, 164, 166, 170, 196, 214, 217, 222, 227], "126": [90, 94, 200], "150": [90, 104, 214], "v3": [90, 177, 180, 251], "glue": 90, "m3": [90, 146, 214, 222], "adj": 90, "qr": 90, "cheat": 90, "soln": 90, "gram": [90, 172, 174], "schmidt": 90, "out1": 90, "out2": 90, "1692": 90, "1551": 90, "423": 90, "6707": 90, "spot": [90, 135], "eigenvector": [90, 117, 161, 162, 186], "nullspac": [90, 190], "adjug": 90, "berkowitz": 90, "bareiss": 90, "cofactor_matrix": 90, "charpoli": [90, 190, 273], "_simplifi": 90, "purepoli": [90, 197], "samuelson": 90, "minor_submatrix": 90, "iszerofunc": [90, 273], "barei": 90, "det_lu": 90, "functiontyp": 90, "_iszero": [90, 273], "_is_zero_after_expand_mul": 90, "unrecogn": 90, "nonsquarematrixerror": [90, 217], "i3": [90, 105, 117, 134, 227], "perman": 90, "ryser": 90, "450": 90, "r575": 90, "prof": 90, "ben": 90, "berkelei": 90, "bernd": 90, "ban275": 90, "r576": 90, "permanent_": 90, "r577": 90, "r578": 90, "0904": 90, "3251": 90, "echelon_form": [90, 273], "with_pivot": 90, "echelon": [90, 190, 220, 273], "elementary_col_op": 90, "kn": [90, 97, 98], "col1": 90, "col2": 90, "km": [90, 94, 108, 112, 119, 121, 124, 125, 129, 131, 134, 173], "elementary_row_op": 90, "row1": 90, "row2": 90, "is_echelon": [90, 273], "rref": [90, 190], "pivot": [90, 190, 273], "normalize_last": 90, "rref_matrix": [90, 190], "rref_pivot": [90, 190], "301369863013699": 90, "712328767123288": 90, "noramlize_last": 90, "subspac": [90, 196], "columnspac": [90, 190], "rowspac": [90, 190], "orthonorm": [90, 134, 162, 185, 249], "rankcheck": 90, "r579": 90, "93schmidt_process": 90, "eigen": [90, 143], "bidiagonal_decomposit": 90, "ubv": 90, "bidiagon": 90, "hang": [90, 121, 125, 217, 218], "bidiagn": 90, "r580": 90, "golub": 90, "van": [90, 94, 195], "loan": 90, "r581": 90, "vslobodi": 90, "household": 90, "r582": 90, "r583": 90, "reals_onli": 90, "throw": [90, 96, 117, 196, 214, 220], "error_when_incomplet": 90, "eig": [90, 117, 134], "matrixerror": 90, "got": [90, 188, 191, 194, 197, 200, 232, 233, 239, 240, 269, 271, 272], "eigenvect": [90, 117, 134, 161, 273], "tidi": 90, "artifact": 90, "ret": 90, "eigenspac": 90, "rag": 90, "a_3": 90, "diagonaliz": [90, 273], "is_indefinit": 90, "semidefinit": [90, 221], "plot3d": [90, 187], "is_positive_definit": 90, "is_positive_semidefinit": 90, "hire": [90, 97, 98, 102, 187, 204], "is_negative_definit": 90, "is_negative_semidefinit": 90, "defer": [90, 243], "r584": 90, "definiteness_of_a_matrix": 90, "r585": 90, "positivedefinitematrix": 90, "r586": 90, "amer": 90, "259": 90, "264": [90, 219], "r587": 90, "r588": 90, "r589": 90, "r590": 90, "r591": 90, "r592": 90, "r593": 90, "r594": 90, "r595": 90, "r596": 90, "r597": 90, "r598": 90, "jordan_form": 90, "calc_transform": 90, "left_eigenvect": 90, "singular_valu": 90, "condition_numb": 90, "hessian": 90, "wronskian": [90, 217], "simpfunc": 90, "permutebkwd": 90, "permutefwd": 90, "lucombin": 90, "defici": [90, 94, 220], "matrixi": 90, "ludecomposition_simpl": [90, 273], "ludecompositionff": 90, "pa": [90, 112, 114, 129, 132, 135], "r599": 90, "zhou": 90, "jeffrei": [90, 213], "frontier": [90, 209], "china": 90, "67": [90, 195], "2008": [90, 186, 195, 197, 201], "row_swap": 90, "compres": 90, "permute_backward": 90, "permute_forward": 90, "u_": 90, "intiuit": 90, "lu_": 90, "_find_reasonable_pivot": 90, "lu_solv": [90, 190], "qr_solv": 90, "augument": 90, "167": 90, "158": [90, 98], "27261": 90, "30625": 90, "348": 90, "1914": 90, "6125": 90, "30589": 90, "198": 90, "1225": 90, "q_aug": 90, "r_aug": 90, "analytic_func": 90, "connected_compon": [90, 239], "connected_components_decomposit": 90, "relax": [90, 96], "3x1": 90, "1x3": 90, "conjugate_convent": 90, "dual": [90, 159, 165], "anti_symmetr": 90, "speak": [90, 196, 252], "freevar": 90, "underdetermin": [90, 219, 220], "free_var_index": 90, "tau0": [90, 220, 221], "tau1": 90, "taus_zero": 90, "sol_uniqu": 90, "r600": 90, "gaussian_elimin": 90, "try_block_diag": 90, "inverse_g": [90, 273], "inverse_lu": [90, 273], "inverse_adj": [90, 273], "inverse_ch": 90, "inverse_ldl": 90, "inverse_qr": 90, "inv_mod": 90, "cof": 90, "inverse_block": 90, "blockwis": 90, "ntop": 90, "key2bound": 90, "key2ij": 90, "reciproc": [90, 221, 277], "fro": 90, "sing": 90, "spectral": 90, "rd": [90, 117, 201], "pseudoinvers": 90, "r601": 90, "penrose_pseudoinvers": 90, "arbitrary_matrix": 90, "wn_m": 90, "_w0_0": 90, "_w1_0": 90, "_w2_0": 90, "59": [90, 217], "r602": 90, "obtaining_all_solutions_of_a_linear_system": 90, "print_nonzero": [90, 239], "symb": [90, 201], "rank_decomposit": 90, "r603": 90, "rank_factor": 90, "r604": 90, "piziak": 90, "odel": 90, "magazin": 90, "193": [90, 102], "2307": 90, "2690882": 90, "singular_value_decomposit": 90, "condens": [90, 220], "orthogn": 90, "v_aug": 90, "u_aug": 90, "s_aug": 90, "gj": 90, "solve_least_squar": 90, "strongly_connected_compon": [90, 190, 239], "62": [90, 194], "strongly_connected_components_decomposit": 90, "rowstart": 90, "rowend": 90, "rowsep": 90, "colsep": 90, "strprinter": [90, 181, 264], "upper_hessenberg_decomposit": 90, "213": 90, "134": 90, "216": [90, 194], "hessenbergdecomposit": 90, "jordan_cel": 90, "varlist": 90, "r605": 90, "hessian_matrix": 90, "vlist": 90, "r606": 90, "casoratian": 90, "kernel": [90, 188, 194, 196, 219], "vanish": [90, 167, 194, 197, 200, 217, 246], "rsolve_hyp": [90, 219], "randmatrix": 90, "percent": [90, 220], "prng": 90, "percentag": [90, 94], "46": [90, 97, 172, 200, 219, 221], "list2numpi": 90, "dtype": [90, 95, 188, 190, 191, 192, 201, 240], "matrix2numpi": 90, "symarrai": 90, "ndarrai": [90, 221, 227, 233], "prefix_i1_i2_": 90, "_2": [90, 176, 177, 217], "a_0_0": 90, "a_0_1": 90, "a_0_2": 90, "a_1_0": 90, "a_1_1": 90, "a_1_2": 90, "a_0_0_0": 90, "a_0_0_1": 90, "a_0_1_0": 90, "a_0_1_1": 90, "a_0_2_0": 90, "a_0_2_1": 90, "a_1_0_0": 90, "a_1_0_1": 90, "a_1_1_0": 90, "a_1_1_1": 90, "a_1_2_0": 90, "a_1_2_1": 90, "rot_axis1": 90, "rot_axis2": 90, "rot_axis3": 90, "a2idx": 90, "normalform": [91, 190], "hermite_normal_form": [91, 190, 196], "check_rank": [91, 190], "hnf": [91, 190, 196], "explos": [91, 190], "believ": [91, 94, 190], "dmdomainerror": [91, 190], "dmshapeerror": [91, 190], "r607": 91, "cohen": [91, 190, 195, 196], "mutablesparsematrix": 92, "_doktocsr": 93, "csr": 93, "ja": 93, "ia": 93, "_csrtodok": 93, "dok": 93, "1x1": [93, 221], "vert": [93, 182, 185, 254], "saw": [93, 191, 277], "dynam": [94, 101, 102, 104, 108, 110, 112, 113, 116, 119, 127, 129, 130, 131, 132, 133, 134, 135, 176, 177, 179, 180, 184, 185, 236, 237, 246], "eratosthen": 94, "_reset": [94, 197], "_list": 94, "extend_to_no": 94, "mobiusrang": 94, "primerang": 94, "10th": 94, "totientrang": 94, "1e11": 94, "50000": 94, "primal": [94, 188], "1299709": 94, "r608": 94, "prime_number_theorem": 94, "table_of_": 94, "cf": [94, 194], "28x": 94, "2c_x_": 94, "2f_log_x": 94, "2c_and_li": 94, "r609": 94, "approximations_for_the_nth_prime_numb": 94, "r610": 94, "27_number": 94, "arr1": 94, "arr2": 94, "prevprim": 94, "9th": 94, "nextprim": 94, "occupi": [94, 167, 227], "conjectur": [94, 194], "twin": 94, "bertrand": 94, "brocard": 94, "primori": 94, "r611": 94, "r612": 94, "utm": 94, "postul": 94, "r613": 94, "s_postul": 94, "primefactor": 94, "argu": 94, "cycle_length": 94, "nmax": 94, "brent": [94, 236], "floyd": 94, "cycle_detect": 94, "17737": 94, "20000": 94, "compositepi": 94, "831": 94, "smoothness_p": 94, "sm": [94, 117, 134, 188], "psm": 94, "govern": 94, "10431": 94, "annot": [94, 187, 201], "21477639576571": 94, "4410317": 94, "1787": 94, "4869863": 94, "2434931": 94, "multiplicity_in_factori": 94, "nfac": 94, "52818775009509558395695966887": 94, "is2pow": 94, "pollard_rho": 94, "1234": [94, 214], "max_step": 94, "pollard": [94, 217], "leader": 94, "16843009": 94, "32767": 94, "4i": 94, "3i": 94, "2489": 94, "1482": 94, "285": [94, 219], "leadup": 94, "r614": 94, "crandal": 94, "carl": [94, 236], "pomer": [94, 236], "229": 94, "231": [94, 177], "pollard_pm1": 94, "ilcm": 94, "likelihood": 94, "1009": 94, "igcd": [94, 189], "am": [94, 172, 201], "255": 94, "crack": 94, "617": 94, "1786": 94, "worst": [94, 197, 217], "scenario": [94, 221], "divisisor": 94, "realist": 94, "r615": 94, "236": 94, "r616": 94, "washington": 94, "2007": [94, 133, 236], "spring": [94, 109, 111, 112, 117, 122], "ent": 94, "node81": 94, "r617": 94, "toronto": 94, "yuvalf": 94, "use_ecm": 94, "65537": [94, 200], "1407633717262338957430697921446883": 94, "991": 94, "202916782076162456022877024859": 94, "4200": 94, "1764": 94, "toggl": [94, 187], "12345678910111213141516": 94, "2507191691": 94, "1231026625769": 94, "factorrat": 94, "rat": 94, "987": 94, "10000000001": 94, "99009901": 94, "divisor_count": 94, "tim": [94, 239], "stackoverflow": [94, 239, 242], "1010381": 94, "proper_divisor": 94, "proper_divisor_count": 94, "udivisor": 94, "udivisor_count": 94, "r618": 94, "unitary_divisor": 94, "r619": 94, "unitarydivisor": 94, "r620": 94, "unitarydivisorfunct": 94, "antidivisor": 94, "r621": 94, "margin": [94, 104, 187, 221], "antidivisor_count": 94, "a066272": 94, "a066272a": 94, "r622": 94, "r623": 94, "27s_totient_funct": 94, "r624": 94, "totientfunct": 94, "r625": 94, "carmichael_funct": 94, "r626": 94, "carmichaelfunct": 94, "sigma_k": 94, "m_i": [94, 194], "m_ik": 94, "r627": 94, "divisor_funct": 94, "udivisor_sigma": 94, "47450": 94, "152": 94, "r628": 94, "core_t": 94, "core_2": 94, "squarefre": [94, 196], "cubefre": 94, "9424": 94, "1178": 94, "379238": 94, "square_factor": 94, "r629": 94, "free_integ": 94, "squarefree_cor": 94, "primenu": 94, "r630": 94, "primeomega": 94, "r631": 94, "mersenne_prime_expon": 94, "mersenn": 94, "4423": 94, "r632": 94, "perfectnumb": 94, "r633": 94, "perfect_numb": 94, "is_mersenne_prim": 94, "r634": 94, "mersenneprim": 94, "abund": 94, "is_abund": 94, "r635": 94, "abundantnumb": 94, "is_defici": 94, "r636": 94, "deficientnumb": 94, "is_amic": 94, "amic": 94, "220": [94, 197], "r637": 94, "amicable_numb": 94, "symmetric_residu": 94, "v_i": [94, 196, 219], "65": [94, 104, 194, 221], "639985": [94, 194], "912285": [94, 194], "954": 94, "gf_crt": [94, 194], "solve_congru": [94, 194], "programm": [94, 201], "galoistool": [94, 194], "crt1": 94, "4536": 94, "252": 94, "756": 94, "crt2": 94, "remainder_modulus_pair": 94, "mi": [94, 201], "k1": [94, 134, 165, 191, 192, 194], "k2": [94, 134, 191], "c_kn": 94, "binomial_coefficients_list": 94, "multinomial_coeffici": 94, "k_m": 94, "k_i": [94, 194, 211], "yann": 94, "laigl": 94, "chapui": 94, "permiss": [94, 186], "multinomial_coefficients_iter": 94, "_tupl": 94, "m53": 94, "partitions_": 94, "npartit": 94, "hardi": 94, "rademach": [94, 221], "r638": 94, "1958": [94, 186], "partitionfunctionp": 94, "is_euler_pseudoprim": 94, "pseudoprim": 94, "r639": 94, "euler_pseudoprim": 94, "prep": [94, 217, 218], "r640": 94, "mersenneforum": 94, "showpost": 94, "110896": 94, "mr": 94, "miller": 94, "rabin": 94, "wit": 94, "1373651": 94, "479001599": 94, "r641": 94, "135": 94, "138": 94, "93rabin_primality_test": 94, "deterministic_vari": 94, "is_lucas_prp": 94, "selfridg": 94, "377": 94, "1159": 94, "1829": 94, "3827": 94, "5459": 94, "5777": 94, "9071": 94, "9179": 94, "bailli": 94, "wagstaff": 94, "1980": [94, 239], "mpq": [94, 191, 193], "lucaspseudoprim": 94, "a217120": 94, "lucas_pseudoprim": 94, "is_strong_lucas_prp": 94, "bpsw": 94, "10877": 94, "16109": 94, "18971": 94, "a217255": 94, "psw_primality_test": 94, "is_extra_strong_lucas_prp": 94, "grantham": 94, "mo": [94, 134, 201], "jone": [94, 139], "preprint": 94, "a217719": 94, "perl": 94, "counterexampl": [94, 277], "989": 94, "3239": 94, "jon": 94, "mcom": 94, "234": 94, "01197": 94, "bisect": [94, 197, 219], "1e3": 94, "1e23": [94, 242], "near_int": 94, "strong_pseudoprim": 94, "is_gaussian_prim": 94, "r642": 94, "gaussian_prim": 94, "residue_ntheori": 94, "n_order": 94, "cong": [94, 194], "primitive_root": [94, 196], "r643": 94, "stein": [94, 217], "r644": 94, "hackman": 94, "sqrt_mod": 94, "sqrt_mod_it": 94, "quadratic_residu": 94, "nthroot_mod": 94, "109": [94, 195, 214], "is_nthpow_residu": 94, "r645": 94, "is_quad_residu": 94, "legendre_symbol": 94, "genfrac": 94, "nonresidu": 94, "alpha_2": [94, 196], "alpha_k": 94, "discrete_log": 94, "prime_ord": 94, "giant": [94, 220], "pohlig": 94, "r646": 94, "discretelogarithm": 94, "r647": 94, "cryptographi": [94, 256, 263], "menez": 94, "vanston": 94, "continued_fract": 94, "continued_fraction_period": 94, "continued_fraction_reduc": 94, "continued_fraction_converg": 94, "continued_fraction_iter": 94, "106": 94, "103993": 94, "33102": 94, "104348": 94, "33215": 94, "208341": 94, "66317": 94, "292": 94, "r648": 94, "discrimin": [94, 192, 194, 196, 197], "r649": 94, "periodic_continued_fract": 94, "r650": 94, "rosen": 94, "379": [94, 197], "381": 94, "januari": 94, "1992": [94, 195, 219], "233": [94, 195, 217], "718281835": 94, "287": 94, "count_digit": 94, "1111339": 94, "0xfa": 94, "c77": 94, "is_palindrom": [94, 239], "palindrom": 94, "0o121": 94, "oct": 94, "0o171": 94, "fermion": [94, 167], "r651": 94, "b6bius_funct": 94, "r652": 94, "thoma": [94, 133], "koshi": 94, "egyptian_fract": 94, "greedi": [94, 194, 210, 213], "egyptian": 94, "r653": 94, "jewett": 94, "takenouchi": 94, "3192": 94, "1118": 94, "2580": 94, "sylvest": [94, 194], "r654": 94, "seldom": 94, "blow": 94, "doubli": 94, "exhibit": [94, 186, 196, 210], "singli": 94, "tendenc": 94, "r655": 94, "1921": 94, "golumb": 94, "1962": 94, "propos": 94, "bleicher": 94, "1972": 94, "r656": 94, "420": [94, 214], "140": 94, "574": 94, "2788": 94, "6460": 94, "11590": 94, "33062": 94, "113820": 94, "greedy_algorithm_for_egyptian_fract": 94, "ic": [94, 217], "uci": 94, "eppstein": 94, "numth": 94, "egypt": 94, "ami": 94, "ektf": 94, "hu": 94, "finalpdf": 94, "ami_42_from129to134": 94, "bbp_pi": 94, "pi_hex_digit": 94, "hex": 94, "3243f6a8885a30": 94, "324": [94, 195], "r657": 94, "numberworld": 94, "subexponenti": 94, "comfort": [94, 95], "15154262241479": 94, "15423094826093": 94, "799333555511111": 94, "809709509409109": 94, "888888877777777": 94, "914148152112161": 94, "factoris": [94, 191, 192, 217], "max_curv": 94, "lenstra": 94, "repeatedli": [94, 105, 233], "ecm_one_factor": 94, "pseudorandom": [94, 239], "25645121643901801": 94, "5394769": 94, "4753701529": 94, "9804659461513846513": 94, "4641991": 94, "2112166839943": 94, "7060005655815754299976961394452809": 94, "6988699669998001": 94, "1010203040506070809": 94, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 94, "2709077133180915240135586837960864768806330782747": 94, "248": 94, "prime_bound": 94, "error_term": 94, "siq": 94, "modn": 94, "mulipl": 94, "r658": 94, "semanticscholar": 94, "5c52": 94, "8a975c1405bd35c65993abf5a4edb667c1db": 94, "r659": 94, "rieselprim": 94, "ziki": 94, "initializing_quadratic_siev": 94, "5915587277": 94, "3267000013": 94, "facilit": [95, 127, 138, 183, 232], "000507214304613640": 95, "microsecond": 95, "000507214304614": 95, "hundr": [95, 271], "nanosecond": 95, "84147098": [95, 240, 266], "84119981": 95, "84092844": 95, "05426074": 95, "05433146": 95, "05440211": 95, "nano": 95, "manufactur": 95, "asnumpi": 95, "compliat": 95, "jnp": 95, "asarrai": 95, "84147096": 95, "8411998": 95, "05426079": 95, "05433151": 95, "autowrap": [95, 226, 234, 238, 258, 264], "implemented_funct": [95, 233, 240], "effort": [95, 192, 194], "50u": 95, "1u": 95, "10n": 95, "sympy_pars": 96, "local_dict": 96, "lambda_not": 96, "repeated_decim": 96, "auto_numb": 96, "factorial_not": 96, "global_dict": 96, "standard_transform": 96, "implicit_multiplication_appl": 96, "implicit_appl": 96, "implicit_multipl": 96, "convert_equals_sign": 96, "function_exponenti": 96, "stringify_expr": 96, "eval_expr": 96, "name_dict": 96, "fullform": 96, "setdelai": 96, "datatyp": [96, 192, 201, 234], "split_symbol": 96, "split_symbols_custom": 96, "_token_splitt": 96, "can_split": 96, "unsplitt": 96, "10sin": 96, "3xyz": 96, "2111": 96, "latex2sympi": 96, "typograph": 96, "stricter": 96, "liber": [96, 108, 271], "618": 96, "latexparsingerror": 96, "sym_expr": 96, "sympyexpress": 96, "source_cod": 96, "return_expr": 96, "definiton": 96, "src2": 96, "convert_to_expr": 96, "convert_to_c": 96, "src3": 96, "convert_to_python": 96, "src_code": 96, "filenam": [96, 201, 232, 233, 234, 242], "convert_to_fortran": 96, "continuum_mechan": [97, 98, 100], "elastic_modulu": 97, "second_mo": 97, "base_char": 97, "withstand": [97, 98], "character": [97, 98, 182, 185, 208, 221, 227, 254], "profil": 97, "shear": [97, 98], "downward": [97, 98, 100, 196], "apply_load": [97, 98, 100], "bc_deflect": [97, 98], "boundary_condit": 97, "solve_for_reaction_load": [97, 98], "shear_forc": [97, 98], "bending_mo": [97, 98], "applied_load": 97, "nm": [97, 98, 165, 222], "pointload": [97, 98], "ramp": [97, 98, 103], "parabol": 97, "apply_support": [97, 100], "loc": 97, "freedom": [97, 111, 112, 118, 121, 127, 221], "roller": [97, 98, 100], "upward": [97, 196], "r_10": 97, "r_30": 97, "4000": [97, 98], "bc_slope": [97, 98], "cross_sect": 97, "elast": [97, 98], "12000": 97, "draw": [97, 147, 201, 221, 263], "pictori": 97, "positv": 97, "ild_moment": 97, "ild_react": 97, "reaction": [97, 98, 100], "ild_shear": 97, "axial": [97, 136], "hing": [97, 98], "cantilev": [97, 98], "inertia": [97, 98, 107, 108, 109, 116, 117, 119, 120, 122, 124, 125, 126, 127, 134, 177, 183, 184, 185, 196], "666666666666667": [97, 98], "max_bmoment": 97, "max_deflect": 97, "max_shear_forc": 97, "plot_bending_mo": [97, 98], "gpa": 97, "400": [97, 187, 197], "13750": 97, "31250": 97, "plot_deflect": [97, 98], "00138541666666667": 97, "86458333333333e": 97, "04166666666667e": 97, "20833333333333e": 97, "51041666666667e": 97, "plot_ild_mo": 97, "solve_for_ild_mo": 97, "1kn": 97, "r_0": 97, "r_8": 97, "solve_for_ild_react": 97, "plot_ild_react": 97, "5kn": 97, "r_7": 97, "plotgrid": [97, 263], "plot_ild_shear": 97, "solve_for_ild_shear": 97, "plot_loading_result": [97, 98], "subplot": [97, 187], "plot_shear_forc": [97, 98], "plot_shear_stress": 97, "stress": 97, "6875": 97, "2500": 97, "15625": [97, 174], "plot_slop": [97, 98], "59375e": 97, "125e": 97, "08333333333333e": 97, "0001953125": 97, "point_cflexur": 97, "overhang": [97, 98], "10kn": 97, "20kn": [97, 98], "3kn": 97, "reaction_load": [97, 98, 100], "remove_load": [97, 100, 109], "shear_stress": 97, "beam3d": 97, "shear_modulu": 97, "apply_moment_load": 97, "solve_slope_deflect": 97, "r660": 97, "home": [97, 196, 214, 221, 232], "aau": 97, "jc": 97, "femtesemest": 97, "beams3d": 97, "angular_deflect": 97, "depict": [97, 182, 220, 254], "angular": [97, 106, 109, 111, 114, 119, 120, 121, 122, 124, 126, 127, 131, 134, 136, 140, 141, 143, 146, 164, 168, 177, 180, 186], "axial_forc": 97, "axial_stress": 97, "load_vector": 97, "max_bending_mo": 97, "16000": 97, "495": 97, "10793": 97, "6400": 97, "301": [97, 211, 214], "560": 97, "2400": 97, "moment_load_vector": 97, "40000": 97, "4013": 97, "90300": 97, "1520": 97, "903": 97, "1600": [97, 98], "172": 97, "polar_mo": 97, "i1": [97, 105, 117, 134, 227], "1350": 97, "solve_for_tors": 97, "torsion": 97, "torqu": [97, 109, 112, 116, 122, 129, 130, 134], "torsional_mo": 97, "_________________": 98, "________________": [98, 217], "_______________v": 98, "_______________": 98, "equilibrium": [98, 100, 119, 131], "20e9": 98, "25e": 98, "______________________________________________": 98, "_______________________________________________": 98, "r\u2081": 98, "r\u2082": 98, "______________________": 98, "________________________": 98, "8kn": 98, "_____________": 98, "1m": 98, "3m": 98, "2m": 98, "5m": [98, 236], "679": 98, "12kn": 98, "________________________________": 98, "____________________________________________________": 98, "o____________________________________________________": 98, "4m": 98, "concentr": [98, 221], "_____________________________________": 98, "m\u2081": 98, "m\u2082": 98, "connector": 98, "_____________________": 98, "_______________________": 98, "_____________________o_______________________": 98, "oooo": [98, 239], "r\u2083": 98, "_______i_______": 98, "flexur": 98, "rigid": [98, 100, 109, 112, 114, 117, 119, 122, 127, 134, 177, 184], "____________": 98, "____________o________________________": 98, "a\u2081": [98, 277], "a\u2082": [98, 277], "assembli": [100, 119], "joint": [100, 120, 122, 127], "add_nod": 100, "node_1": 100, "node_2": 100, "node_3": 100, "node_4": 100, "add_memb": 100, "member_1": 100, "member_2": 100, "member_3": 100, "member_4": 100, "member_5": 100, "270": 100, "360": 100, "change_member_label": 100, "new_label": 100, "change_node_label": 100, "bc_new": 100, "internal_forc": 100, "member_label": 100, "node_label": 100, "node_posit": 100, "remove_memb": 100, "remove_nod": 100, "remove_support": 100, "unstabl": 100, "revolv": 100, "tensil": 100, "r_node_1_x": 100, "r_node_1_i": 100, "66666666666667": 100, "r_node_2_i": 100, "33333333333333": 100, "66666666666666": 100, "lti": [101, 102, 103], "transferfunct": [101, 102, 104], "interconnect": [101, 104, 111], "mimo": [101, 104], "transferfunctionmatrix": [101, 104], "mimoseri": [101, 104], "mimoparallel": [101, 104], "mimofeedback": [101, 104], "control_plot": 102, "pole_zero_plot": 102, "pole_color": 102, "blue": [102, 128, 187, 201], "pole_markers": 102, "zero_color": 102, "orang": 102, "zero_markers": 102, "show_ax": 102, "marker": [102, 187], "sisolineartimeinvari": [102, 104], "markers": 102, "tf1": [102, 104], "pole_zero_numerical_data": 102, "r661": 102, "93zero_plot": 102, "siso": [102, 104], "8660254j": 102, "bode_plot": 102, "initial_exp": 102, "final_exp": 102, "freq_unit": 102, "phase_unit": 102, "semilog": 102, "hz": 102, "hertz": 102, "bode_magnitude_plot": 102, "bode_phase_plot": 102, "bode_magnitude_numerical_data": 102, "5148378120533502e": 102, "68437": 102, "36188804005": 102, "020599914256786": 102, "0205999155219505": 102, "4117304087953": 102, "00000000260573": 102, "bode_phase_numerical_data": 102, "4472354033813751e": 102, "035581932165858e": 102, "47577": 102, "3248186011": 102, "67884": 102, "09326036123": 102, "5000000000291665e": 102, "6180885085e": 102, "08895483066e": 102, "1415085799262523": 102, "14155265358979": 102, "impulse_response_plot": 102, "lower_limit": [102, 267], "upper_limit": [102, 267], "step_response_plot": 102, "ramp_response_plot": 102, "r662": 102, "impulse_response_numerical_data": 102, "nb_of_point": [102, 187], "lineover1drangeseri": [102, 187], "amplitud": [102, 141], "06616480200395854": 102, "854500743565858": 102, "9999999799999999": 102, "7042848373025861": 102, "170748906965121e": 102, "1901263495547205e": 102, "r663": 102, "step_response_numerical_data": 102, "025413462339411542": 102, "0484508722725343": 102, "670250533855183": 102, "844291913708725": 102, "023844582399907256": 102, "042894276802320226": 102, "828770759094287e": 102, "456457160755703e": 102, "mx": [102, 147, 208], "r664": 102, "ramp_funct": 102, "ramp_response_numerical_data": 102, "12166980856813935": 102, "861246379582118": 102, "4504508011325967e": 102, "006046440489058766": 102, "12499999999568202": 102, "12499999999661349": 102, "bode": 103, "impuls": [103, 104], "den": [104, 192, 213, 217], "superscript": [104, 201], "tf2": 104, "tf3": 104, "tf4": 104, "tf5": 104, "tf6": 104, "500000000000000": 104, "tf7": 104, "tf8": 104, "tf9": 104, "tf10": 104, "tf11": 104, "tf12": 104, "r665": 104, "transfer_funct": 104, "r666": 104, "dc_gain": 104, "dc": [104, 130], "from_rational_express": 104, "zerodivisionerror": [104, 192, 230, 240], "complexinfin": 104, "tf": [104, 240], "is_biprop": 104, "is_prop": 104, "is_stabl": 104, "is_strictly_prop": 104, "sys1": 104, "sys2": 104, "feedforward": 104, "fed": 104, "sit": [104, 185], "plant": 104, "compulsori": 104, "tf_1": 104, "tf_2": 104, "tf_3": 104, "tf_4": 104, "tfm_1": 104, "num_input": 104, "num_output": 104, "tfm_2": 104, "tf_5": 104, "tf_6": 104, "tf_7": 104, "tf_8": 104, "tfm_3": 104, "tfm_4": 104, "tfm_5": 104, "tfm_6": 104, "tf_9": 104, "tf_10": 104, "tfm_7": 104, "tfm_8": 104, "tfm_9": 104, "tfm_10": 104, "tfm_11": 104, "tfm_12": 104, "elem_pol": 104, "elem_zero": 104, "from_matrix": [104, 190], "m_tf": 104, "tfm": 104, "tfm1": 104, "tfm2": 104, "g4": 104, "tfm3": 104, "mimolineartimeinvari": 104, "mat_a": 104, "mat_b": 104, "mat_c": 104, "tfm_a": 104, "tfm_b": 104, "tfm_c": 104, "expr_1": 104, "expr_2": 104, "expr_3": 104, "expr_4": 104, "plant_mat": 104, "controller_mat": 104, "neg_feedback": 104, "hep": 105, "gamma_matric": [105, 107], "gammamatrix": 105, "lorentzindex": 105, "gammamatrixhead": 105, "extract_type_ten": 105, "gamma_trac": 105, "i0": [105, 139, 227], "i2": [105, 117, 134, 227], "i4": [105, 227], "i5": 105, "kahane_simplifi": 105, "spinor": 105, "ta": [105, 210], "tb": [105, 210, 232], "tc": [105, 192, 197, 210], "joseph": [105, 195], "kahan": 105, "octob": 105, "1968": 105, "simplify_gpgp": 105, "e_nl": [106, 168], "hartre": 106, "helium": 106, "2209": 106, "e_nl_dirac": 106, "spin_up": 106, "035999037000": 106, "relativist": 106, "momentum": [106, 114, 117, 127, 134, 145, 146, 164, 168, 186, 227], "light": [106, 139, 172, 181, 188], "035999037": 106, "1012": 106, "3627": 106, "500006656595360": 106, "125002080189006": 106, "125000416028342": 106, "0555562951740285": 106, "0555558020932949": 106, "0555556377366884": 106, "psi_nlm": 106, "wave": [106, 137, 138, 139, 204, 262], "psi_": [106, 143], "nlm": 106, "radial": [106, 121, 168], "nl": [106, 168], "magnet": [106, 138, 182, 254], "azimuth": 106, "wf": [106, 119], "abs_sqrd": 106, "silver": 106, "94": [106, 195], "141": 106, "4418": 106, "mdft": 107, "mgamma": 107, "gamma_5": 107, "gamma_0": 107, "gamma_3": 107, "r667": 107, "msigma": 107, "pauli": [107, 262], "sigma_i": [107, 221], "r668": 107, "pauli_matric": [107, 142], "pat_matrix": 107, "unansw": [108, 176], "kane": [108, 111, 117, 123, 127, 128, 133, 134, 176, 177, 246], "q1d": [108, 117, 119, 121, 124, 125, 126, 129, 130, 131, 132, 176, 181, 185], "q2d": [108, 117, 119, 121, 124, 125, 126, 129, 130, 180, 181], "q3d": [108, 124, 125, 126, 129], "kinemat": [108, 111, 112, 116, 117, 119, 120, 121, 122, 124, 126, 128, 129, 131, 132, 134, 135, 177, 183, 185], "dyad": [108, 134, 249], "mprint": [108, 124, 125, 126, 127, 129], "mpprint": [108, 127, 129], "mlatex": [108, 127], "sub_dict": [108, 110, 119], "msub": [108, 127, 131], "cleaner": [108, 134, 217], "gsl": [108, 234], "lsoda": 108, "penalti": 108, "masscent": [109, 111, 114, 120, 128, 132, 134], "central_inertia": [109, 114, 120, 122], "possess": [109, 132, 227], "name_of_bodi": 109, "ixx": [109, 114, 177], "body_inertia": 109, "ang_vel_in": [109, 111, 117, 124, 125, 134, 177, 184], "set_ang_vel": [109, 114, 117, 119, 124, 125, 131, 132, 134, 135, 177, 179, 180, 184], "apply_forc": [109, 111, 122], "reaction_bodi": [109, 111, 122], "reaction_point": 109, "oppposit": 109, "desri": 109, "force1": 109, "b_masscent": 109, "b_frame": 109, "newtonion": [109, 111], "spring_forc": 109, "n_frame": 109, "apply_torqu": [109, 122], "torquess": 109, "torque1": 109, "b1_frame": 109, "b2_frame": 109, "clear_load": 109, "dcm": [109, 111, 117, 119, 134, 177, 184, 185, 246], "orient_axi": [109, 177, 179], "kinetic_energi": [109, 127, 132, 134], "kinet": [109, 112, 114, 127], "inerti": [109, 111, 112, 114, 119, 121, 124, 129, 130, 132, 134], "set_vel": [109, 112, 114, 117, 119, 121, 124, 125, 126, 129, 130, 131, 132, 134, 135, 180, 184], "b_ixx": 109, "b_mass": [109, 111], "masscenter_vel": [109, 111], "parallel_axi": [109, 114], "locatenew": [109, 114, 119, 121, 124, 125, 126, 131, 132, 134, 135, 178, 180, 182, 184], "to_matrix": [109, 176, 177, 185, 190, 196, 246, 248, 250], "a_ixx": 109, "a_mass": 109, "a_ixi": 109, "a_izx": 109, "a_iyi": 109, "a_iyz": 109, "a_izz": 109, "smart": [110, 131, 208, 214, 217], "sub1": [110, 201], "sub2": [110, 201], "reference_fram": [110, 177], "parent_joint_po": [111, 120, 122, 128], "child_joint_po": [111, 120, 122, 128], "parent_axi": [111, 120, 122, 128], "child_axi": [111, 120, 122, 128], "_generate_coordin": 111, "_generate_spe": 111, "_orient_fram": 111, "_set_angular_veloc": 111, "_set_linar_veloc": 111, "rotation_axi": 111, "parent_point": [111, 128], "child_point": [111, 128], "kde": [111, 120, 121, 128, 131], "revolut": 111, "\u03c9": 111, "pc": [111, 198], "pc_p_joint": 111, "pc_c_joint": 111, "p_frame": 111, "c_frame": 111, "theta_pc": 111, "omega_pc": 111, "pos_from": [111, 117, 119, 120, 121, 128, 134, 180, 184], "pendulum": [111, 116, 118, 122, 127, 131, 135, 184], "upper_bob": 111, "lower_bob": 111, "ceiling_joint": 111, "pendulum_joint": 111, "theta_p1": 111, "theta_p2": 111, "u_fram": 111, "l_frame": 111, "omega_p1": 111, "omega_p2": 111, "vel": [111, 117, 119, 121, 125, 128, 134, 180, 184, 252], "prismat": 111, "slide": 111, "x_pc": 111, "v_pc": 111, "wall": [111, 122], "part1": 111, "part2": 111, "j1": [111, 120, 122, 146, 164], "j2": [111, 120, 122, 146, 164], "x_j1": 111, "w_frame": 111, "x_j2": 111, "p1_frame": 111, "v_j1": 111, "damper": [111, 112, 117, 122], "form_eom": [111, 122, 128], "mass_matrix_ful": [111, 112, 117, 122, 129, 130], "forcing_ful": [111, 112, 117, 122, 129, 130], "mass_matrix": [111, 112, 116, 119, 124, 125, 129, 130, 135], "kanesmethod": [111, 112, 117, 119, 120, 121, 122, 124, 125, 128, 129, 131, 134], "lagrangesmethod": [111, 121, 126, 127, 130, 131], "qd": [111, 112, 119, 129, 180], "inv_method": [111, 112], "solveabl": 111, "q_ind": [112, 113, 117, 119, 120, 121, 124, 125, 129, 131, 134], "u_ind": [112, 113, 117, 119, 120, 121, 124, 125, 129, 131, 134], "kd_eq": [112, 117, 119, 120, 121, 124, 125, 131, 134], "q_depend": [112, 119, 120, 121, 129, 134], "configuration_constraint": [112, 119, 120, 121, 129], "u_depend": [112, 119, 120, 121, 129, 134], "velocity_constraint": [112, 119, 120, 121, 129, 134], "acceleration_constraint": 112, "u_auxiliari": [112, 125, 129, 134], "forcelist": [112, 117, 120, 121, 124, 125, 130, 131, 134], "levinson": [112, 133, 177, 246], "udot": [112, 119], "ud": [112, 129], "kd": [112, 119, 124, 125, 129], "fl": [112, 119, 129, 130, 134, 195], "bl": [112, 119, 129, 134], "frstar": [112, 117, 119, 121, 124, 125, 129, 131, 134], "kanes_equ": [112, 117, 119, 121, 124, 125, 129, 131, 134], "a_and_b": [112, 113, 121], "auxiliary_eq": [112, 125], "constrain": [112, 121, 130, 134], "kindiffdict": [112, 119, 124, 125, 129, 134], "new_method": [112, 121], "intens": [112, 113, 136, 139], "perm_mat": [112, 113, 131], "op_point": [112, 113, 121, 131], "beforehand": [112, 234], "to_linear": [112, 131], "recalcul": [112, 197], "hol_coneq": [112, 121, 130], "nonhol_coneq": [112, 121, 130], "nonconserv": 112, "form_lagranges_equ": [112, 121, 126, 130, 131], "qdot": [112, 119, 120, 180], "qdoubledot": 112, "lam": [112, 113, 135], "lagranges_equ": 112, "qd_ind": [112, 131], "q_dep": [112, 129, 131], "qd_dep": [112, 131], "solve_multipli": [112, 121], "sol_typ": 112, "array_lik": 112, "f_3": [113, 116, 135, 217], "f_c": [113, 121], "f_v": [113, 121], "f_a": 113, "q_d": 113, "u_i": [113, 131, 184, 194], "u_d": [113, 134], "q_op": [113, 121], "u_op": [113, 121], "qd_op": 113, "ud_op": [113, 121], "spatial": [114, 141, 177, 201], "init_vprint": [114, 115, 132, 135, 177, 179, 180, 183, 184, 185], "inertia_tupl": 114, "mv": 114, "iyi": [114, 177], "izz": [114, 177], "ixi": [114, 177], "iyz": [114, 177], "izx": 114, "yy": [114, 185, 217], "yz": [114, 185, 187], "zx": [114, 185], "pos_vec": 114, "px": [114, 157, 162, 227], "body1": 114, "body2": 114, "body3": 114, "h2": 114, "multibodi": [114, 117, 127, 133, 134, 135, 184], "vprint": [115, 176, 180, 183, 185], "vpprint": [115, 176, 183, 185], "vlatex": [115, 176, 177, 183, 185], "coord_stat": 116, "right_hand_sid": 116, "coordinate_deriv": [116, 135], "alg_con": [116, 135], "output_eqn": 116, "coord_idx": [116, 135], "speed_idx": [116, 135], "m_3": [116, 135, 146, 186], "exogen": [116, 135], "ref_fram": 116, "graviti": [116, 117, 121, 122, 124, 126, 134, 182, 254], "theta_dot": 116, "kin_explicit_rh": [116, 135], "dyn_implicit_mat": [116, 135], "dyn_implicit_rh": [116, 135], "symsystem": 116, "dae": [116, 135], "adjust": [116, 204, 208], "comb_implicit_mat": [116, 135], "comb_implicit_rh": [116, 135], "kinema": 116, "comb_explicit_rh": [116, 135], "compute_explicit_form": 116, "awhil": 116, "constant_symbol": 116, "dynamic_symbol": 116, "motiongenesi": [117, 134], "double_pendulum": 117, "motionvari": [117, 134], "newtonian": [117, 134], "simprot": [117, 134], "n_a": 117, "n_b": 117, "w_a_n": 117, "w_b_n": [117, 134], "p_o_p": 117, "p_p_r": 117, "v_o_n": [117, 134], "v2pt": [117, 134], "v_p_n": 117, "v_r_n": 117, "force_p": 117, "force_r": 117, "tfinal": 117, "integstp": 117, "some_filenam": 117, "parse_autolev": 117, "sympy_cod": 117, "include_numer": 117, "include_pydi": 117, "pydi": [117, 134, 177], "u1d": [117, 119, 121, 124, 125, 129], "u2d": [117, 119, 121, 124, 125, 129], "frame_n": 117, "frame_a": 117, "frame_b": 117, "point_o": 117, "particle_p": 117, "p_pt": 117, "particle_r": 117, "r_pt": 117, "set_po": [117, 180, 184], "v2pt_theori": [117, 119, 124, 125, 126, 131, 132, 134, 135, 180, 184], "initial_condit": [117, 134], "overwritten": 117, "e2row": 117, "eigvec": [117, 134], "eigenvec": 117, "deg2rad": 117, "0174533": 117, "wo": 117, "coef": [117, 134], "u3": [117, 119, 120, 122, 124, 125, 129, 134, 180, 184], "strai": 117, "reassign": 117, "inher": [117, 240, 269], "rhs_x": 117, "i_b_bo": 117, "body_b": 117, "body_b_f": 117, "b_cm": 117, "b_f": 117, "scene": [117, 213, 269], "i_c_d": 117, "i_p_q": 117, "i_b_o": 117, "e3": [117, 208, 217], "i_p_o": 117, "e4": [117, 208], "p_so_o": 117, "nicheck": 117, "plug": [117, 172], "hurdl": 117, "gitlab": 117, "repo": 117, "ch4": 117, "ch5": 117, "ch6": 117, "cst": 117, "grammar": [117, 213], "roll": [118, 119, 127, 184, 221], "disc": [118, 127, 184], "bicycl": [118, 127, 133], "nonminim": [118, 127, 131], "linkag": [118, 127], "meijaard2007": [119, 133], "steer": [119, 133], "purposefulli": 119, "mechanics_print": [119, 120, 124, 125, 126, 127, 128, 129, 130], "yaw": 119, "ang": 119, "rear": 119, "wheel": 119, "pitch": 119, "q4": [119, 129, 179], "q5": [119, 179], "q4d": [119, 129], "q5d": 119, "u4": [119, 125, 129, 134], "u5": [119, 125], "u6": [119, 125], "u3d": [119, 124, 125], "u4d": 119, "u5d": 119, "u6d": 119, "explanatori": 119, "wfrad": 119, "wrrad": 119, "htangl": 119, "forkoffset": 119, "forklength": 119, "framelength": 119, "forkcg1": 119, "forkcg3": 119, "framecg1": 119, "framecg3": 119, "iwr11": 119, "iwr22": 119, "iwf11": 119, "iwf22": 119, "iframe11": 119, "iframe22": 119, "iframe33": 119, "iframe31": 119, "ifork11": 119, "ifork22": 119, "ifork33": 119, "ifork31": 119, "mframe": 119, "mfork": 119, "mwf": 119, "mwr": 119, "wr": 119, "tempfram": 119, "tempfork": 119, "orientnew": [119, 121, 124, 125, 126, 131, 135, 177, 179, 180, 182, 184, 185], "wr_cont": 119, "wr_mc": 119, "frame_mc": 119, "fork_mc": 119, "wf_mc": 119, "wf_cont": 119, "flip": [119, 152, 161, 221], "frame_i": 119, "fork_i": 119, "wr_i": 119, "wf_i": 119, "bodyfram": 119, "bodyfork": 119, "bodywr": 119, "bodywf": 119, "nonholonom": 119, "closer": [119, 220, 272], "slip": [119, 123, 125, 184], "replic": 119, "conlist_spe": 119, "conlist_coord": 119, "gravit": [119, 124, 170, 182, 254], "aforement": [119, 182, 214, 252], "paperradrear": 119, "paperradfront": 119, "hta": 119, "trailpap": 119, "rake": 119, "paperwb": 119, "02": 119, "paperframecgx": 119, "paperframecgz": 119, "paperforkcgx": 119, "paperforkcgz": 119, "framecgnorm": 119, "framecgpar": 119, "tempa": 119, "tempb": 119, "tempc": 119, "paperforkl": 119, "forkcgnorm": 119, "forkcgpar": 119, "upright": 119, "val_dict": 119, "0603": 119, "1405": 119, "05892": 119, "00708": 119, "00756": 119, "kdd": [119, 124, 125], "centripet": 119, "corioli": 119, "forcing_lin": 119, "mm_full": 119, "_k_kqdot": 119, "xdot": 119, "lean": [119, 124, 126], "amat": 119, "summari": [120, 213, 232, 256], "jointsmethod": [120, 122, 127], "q_1": [120, 121, 122, 128, 131, 147, 184, 197, 214], "q_2": [120, 121, 122, 131, 184], "q_3": [120, 122, 184], "u_1": [120, 121, 122, 128, 184, 196, 217], "u_2": [120, 121, 122, 184, 196, 217], "u_3": [120, 122, 184], "densiti": [120, 221, 232, 255], "link1": 120, "link2": 120, "link3": 120, "link4": 120, "joint1": 120, "pinjoint": [120, 122], "joint2": 120, "joint3": 120, "j3": [120, 122, 146, 164], "fh": 120, "fhd": 120, "_method": 120, "_form_eom": 120, "eom": [121, 122, 131], "theta1": 121, "dq_dict": 121, "presimplifi": 121, "inp_vec": [121, 131], "lag": [121, 126, 131], "lm": [121, 130, 131, 194, 197], "lag_eq": [121, 131], "lam_op": 121, "prismaticjoint": [122, 128], "mb": [122, 134], "ibzz": 122, "compound_pend": 122, "simple_pend": 122, "slider": [122, 128], "rev1": 122, "rev2": 122, "w_r_n_qd": [124, 125], "dmc": [124, 125, 126], "uv": [124, 125, 167], "bodyd": [124, 125, 126], "bodylist": [124, 125], "revisit": [125, 184], "kane1985": [125, 129, 132, 133], "thorough": [125, 131, 214], "simplifc": 125, "f3": [125, 187, 201], "necessit": 125, "factor_term": [125, 197, 210, 213], "simplify_auxiliary_eq": 125, "lrh": 126, "planet": 127, "robot": 127, "fascin": 127, "trajectori": 127, "challeng": 127, "came": [127, 272], "tackl": [127, 234], "organ": 127, "amen": 127, "arduou": 127, "momenta": [127, 146], "symbolicsystem": 127, "rough": [127, 172], "inertia_of_point_mass": 127, "linear_momentum": [127, 132, 134], "angular_momentum": [127, 132, 134], "kanemethod": 127, "find_dynamicsymbol": 127, "red": [128, 187], "parent_fram": 128, "child_fram": 128, "child_mass": 128, "f_h": 129, "nh": 129, "ku": [129, 201], "k_d": 129, "f_d": [129, 130, 194], "dnh": 129, "f_r": [129, 131, 194], "speed_con": 129, "coord_con": 129, "u_dep": 129, "m_d": 130, "lam1": 130, "0_": 131, "blajer1994": [131, 133], "brought": [131, 221], "vel_p": 131, "a_op": 131, "b_op": 131, "m_op": 131, "a_lin": 131, "hasn": 131, "wikidyad": [132, 183], "wikidyadicproduct": [132, 183], "juxtaposit": [132, 176, 249], "hat": [132, 176, 177, 181, 182, 184, 185, 249, 250, 252, 254, 255], "otim": [132, 222], "l_p": 132, "likins1973": [132, 183], "l_b": 132, "requisit": 132, "t_p": 132, "t_b": 132, "t_t": 132, "virtu": [132, 134], "blajer": 133, "wojciech": 133, "werner": 133, "schiehlen": 133, "walter": 133, "schirm": 133, "kane1983": [133, 185], "likin": [133, 183], "david": [133, 197], "spacecraft": 133, "1983": [133, 236], "meijaard": 133, "jim": 133, "papadopoulo": 133, "ruina": 133, "schwab": 133, "royal": 133, "societi": [133, 214], "2084": 133, "1955": 133, "982": 133, "lectur": [134, 195, 221], "rigibodi": 134, "proprietari": 134, "k3": [134, 191], "k4": 134, "b11": 134, "b12": 134, "b21": 134, "b22": 134, "xd": 134, "xd2": 134, "y1d": 134, "y2d": 134, "tina": 134, "overwrit": [134, 176], "dt2": 134, "dy2": 134, "ty": 134, "linsolv": [134, 199, 215, 219, 278], "nonlinsolv": [134, 215, 219, 278], "rowmatrix": 134, "colmatrix": 134, "diagmat": 134, "eigval": 134, "row_matrix": 134, "col_matrix": 134, "ao": 134, "i12": 134, "i23": 134, "i31": 134, "bf": 134, "p_o_q": 134, "mag": 134, "unitvec": 134, "qo": 134, "p_p_q": 134, "partial_veloc": [134, 177, 180], "a_o_n": 134, "set_acc": [134, 180, 184], "qb": [134, 189], "qbd": 134, "alf_b_n": 134, "set_ang_acc": [134, 177], "ang_acc_in": [134, 177], "force_o": 134, "torque_a": 134, "qa": 134, "qad": 134, "a_b": 134, "v1pt": 134, "v1pt_theori": [134, 180, 184], "a1pt": 134, "a1pt_theori": [134, 180], "a2pt": 134, "a2pt_theori": [134, 180, 184], "angvel": 134, "force_vector": 134, "center_of_mass": 134, "kindiff": 134, "ke": 134, "configura": 134, "tion_constraint": 134, "pendent": 134, "velocity_con": 134, "traint": 134, "acceleration_": 134, "u_auxilia": 134, "ry": 134, "matlplotlib": 134, "stiff": 134, "damp": 134, "legend": [134, 187, 204], "introspect": 134, "rich": [134, 213], "media": [134, 140], "histori": 134, "esqu": 134, "cpython": 134, "pertin": [135, 188, 196], "alg_con_ful": 135, "symsystem1": 135, "symsystem2": 135, "symsystem3": 135, "raytransfermatrix": 136, "geometricrai": 136, "beamparamet": 136, "geometric_conj": 136, "gauss_conj": 136, "conjugate_gauss_beam": 136, "lens": 136, "gaussopt": 136, "wavelen": 136, "z_r": 136, "wavelength": [136, 141], "waist": 136, "rayleigh": [136, 221], "refract": [136, 138, 140, 141], "530e": 136, "88679245283019": 136, "92753330865999": 136, "w_0": [136, 214], "00100000000000000": 136, "freespac": 136, "00101413072159615": 136, "00210803120913829": 136, "r669": 136, "complex_beam_paramet": 136, "r670": 136, "gaussian_beam": 136, "spread": [136, 201, 221, 236], "00053": 136, "goui": 136, "55998576005696": 136, "2809": 136, "peak": 136, "waist_approximation_limit": 136, "paraxi": [136, 140], "06e": 136, "curvedmirror": 136, "curvedrefract": 136, "flatmirror": 136, "flatrefract": 136, "2x1": 136, "thinlen": 136, "r671": 136, "ray_transfer_matrix_analysi": 136, "waist_in": 136, "waist_out": 136, "s_in": 136, "s_out": 136, "w_o": 136, "gaussian_conj": 136, "z_r_in": 136, "incid": [136, 140], "z_r_out": 136, "emerg": [136, 189], "geometric_conj_ab": 136, "geometric_conj_af": 136, "geometric_conj_bf": 136, "rayleigh2waist": 136, "waist2rayleigh": 136, "optic": [138, 139, 140, 141, 262], "permitt": 138, "permeabl": 138, "fermat": 138, "electr": [138, 140, 182, 252, 254], "electromagnet": [138, 182, 227, 254], "intrinsic_imped": 138, "149896229": [138, 141], "kilogram": [138, 170, 172, 174], "1250000": 138, "amper": 138, "refractive_index": 138, "299792458": [138, 141, 174], "r672": 138, "optical_medium": 138, "travel": [138, 141, 182, 252, 254], "stoke": [139, 253], "mueller": 139, "jones_vector": 139, "stokes_vector": 139, "half_wave_retard": 139, "polarizing_beam_splitt": 139, "jones_2_stok": 139, "\u2148": [139, 186, 200, 201, 220, 278], "\u03c7": 139, "\u03c8": 139, "i\u2080": 139, "plate": 139, "hwp": 139, "splitter": 139, "transmit": [139, 140], "pb": 139, "transmitted_port": 139, "reflected_port": 139, "transmitted_pow": 139, "reflected_pow": 139, "r673": 139, "jones_calculu": 139, "r674": 139, "mueller_calculu": 139, "r675": 139, "stokes_paramet": 139, "retard": 139, "poincar\u00e9": 139, "tilt": 139, "mayor": 139, "linear_polar": 139, "transmiss": [139, 140], "mueller_matrix": 139, "quarter_wave_retard": 139, "quarter": 139, "phase_retard": 139, "\u03b4": 139, "phia": 139, "phib": 139, "4x1": [139, 221], "phi_a": 139, "phi_b": 139, "qwp": 139, "reflective_filt": 139, "unpolar": 139, "transmissive_filt": 139, "attenu": 139, "transmitt": 139, "ndf": 139, "refraction_angl": 140, "fresnel_coeffici": 140, "brewster_angl": 140, "critical_angl": 140, "lens_makers_formula": 140, "mirror_formula": 140, "lens_formula": 140, "hyperfocal_dist": 140, "transverse_magnif": 140, "medium1": 140, "medium2": 140, "brewster": 140, "926093295503462": 140, "onset": 140, "850908514477849": 140, "02005": 140, "angle_of_incid": 140, "polaris": 140, "te": 140, "undergo": 140, "317843553417859": 140, "348645229818821": 140, "658921776708929": 140, "651354770181179": 140, "235625382192159": 140, "971843958291041": 140, "816477005968898": 140, "577377951366403": 140, "r676": 140, "fresnel_equ": 140, "coc": 140, "0033": 140, "focal_length": 140, "n_len": 140, "n_surr": 140, "thick": 140, "1515151515151": 140, "0000000000000": 140, "3418463277618": 140, "41152": 140, "magnif": 140, "twave": 141, "time_period": 141, "wavenumb": 141, "phi1": 141, "phi2": 141, "w1": [141, 213], "w3": [141, 201], "superposit": [141, 152, 163, 188], "angular_veloc": 141, "tempor": 141, "r677": 142, "paulialgebra": 142, "evaluate_pauli_product": 142, "paulimatric": 142, "sigma3": 142, "nodal": [143, 168, 188], "hw": [143, 168], "coherent_st": 143, "coher": [143, 169, 175], "1d": [143, 145, 158, 177, 226], "wavefunct": [143, 156, 165, 168, 262], "r678": 144, "__cmp__": [144, 148, 167], "dagger": [144, 148, 154, 156, 159, 161, 166, 167], "operatorset": [145, 157], "positionbra3d": 145, "eigenbra": [145, 158, 164], "positionket3d": 145, "eigenket": [145, 158, 164], "positionstate3d": 145, "eigenst": [145, 157, 162, 164, 165], "position_x": 145, "position_i": 145, "position_z": 145, "pxbra": [145, 157], "pxket": [145, 157, 162], "pxop": [145, 157, 162], "xbra": [145, 157, 162], "xket": [145, 157, 162], "xop": [145, 157, 162], "yop": 145, "zop": 145, "uncoupl": [146, 164], "r679": 146, "j_3": [146, 164, 186], "r680": 146, "wigner3j": [146, 186], "wigner": [146, 164, 221, 262], "varshalovich": [146, 164], "zyla": 146, "theor": 146, "phy": [146, 172, 186], "083c01": 146, "r681": 146, "w3j": 146, "715": [146, 186, 201], "wigner6j": [146, 186], "j12": [146, 164], "j23": 146, "6j": [146, 186], "wigner9j": [146, 186], "j4": 146, "j34": 146, "j13": 146, "j24": 146, "9j": [146, 186], "cg_simp": 146, "r682": 146, "clebsh": 146, "rethink": 147, "figsiz": 147, "circuitplot": 147, "nqubit": [147, 151, 152, 161], "control_lin": 147, "gate_idx": [147, 151], "min_wir": 147, "max_wir": 147, "control_point": 147, "wire_idx": 147, "not_point": 147, "one_qubit_box": 147, "box": [147, 152, 154, 163, 165, 255], "qubit": [147, 151, 152, 153, 154, 160], "swap_point": 147, "two_qubit_box": 147, "createcg": 147, "latexnam": 147, "mock": 147, "mz": 147, "circuit_plot": 147, "min_qubit": [147, 151], "autogener": 147, "wire": 147, "q_0": [147, 214], "j_0": 147, "r683": 148, "comm": [148, 167, 227], "plank": 149, "r684": 149, "05457162000000e": 149, "planck_const": 149, "hermetian": 150, "r685": 150, "r686": 150, "ket": [150, 155, 156, 157, 159, 161, 162, 165, 167], "bra": [150, 155, 156, 157, 159, 161, 162, 165, 167], "innerproduct": [150, 155, 156, 162, 164, 167], "outerproduct": [150, 156], "seamlessli": 150, "hermitian_adjoint": 150, "hermitian_transpos": 150, "_apply_operators_qubit": 151, "gate_sort": 151, "gate_simp": 151, "ugat": 151, "cgate": 151, "control_valu": 151, "cnot": 151, "eval_control": 151, "plot_gat": 151, "circ_plot": 151, "simplify_cg": 151, "cphase": 151, "cnotgat": 151, "qappli": [151, 152, 154, 156, 161], "get_target_matrix": 151, "represen": 151, "hadamardg": 151, "identityg": 151, "onequbitg": 151, "phaseg": 151, "swapgat": 151, "target1": 151, "target2": 151, "tgate": 151, "twoqubitg": 151, "xgate": 151, "ygate": 151, "zgate": 151, "bubbl": 151, "random_circuit": 151, "ngate": 151, "gate_spac": 151, "mermin": 152, "_represent_zg": 152, "oracleg": 152, "oracl": 152, "intqubit": [152, 161], "search_funct": 152, "wgate": 152, "apply_grov": 152, "grover_iter": 152, "qstate": 152, "wv": 152, "superposition_basi": 152, "numqubit": 152, "basis_st": 152, "matt": 153, "complexspac": 153, "directsumhilbertspac": 153, "r687": 153, "hilbertspac": 153, "fockspac": 153, "hilbert_spac": [153, 156, 165], "direct_sum": 153, "quantiz": [153, 262], "r688": 153, "mess": [153, 217, 220, 277], "fock_spac": 153, "r689": 153, "tensorpowerhilbertspac": 153, "r690": 153, "tensor_product": 153, "tensorproducthilbertspac": 153, "r691": 153, "clebsch": [154, 164, 186], "gordan": [154, 164, 186], "hilbert": [154, 156, 162], "grover": 154, "qft": [154, 163], "shor": 154, "brabas": [155, 156, 162, 165], "ketbas": [155, 156, 162, 165], "r692": 155, "inner_product": 155, "apply_oper": [156, 167], "identityoper": 156, "r693": 156, "r694": 156, "polymoni": 156, "operator_": 156, "28physic": 156, "old_assumpt": 156, "r695": 156, "outer_product": 156, "unitaryoper": 156, "operators_to_st": 157, "state_to_oper": 157, "_operators_to_st": 157, "state_map": 157, "_state_to_oper": 157, "statebas": [157, 162, 165], "piab": 158, "piabbra": 158, "piabhamiltonian": 158, "piabket": 158, "ip_doit": 159, "smarter": [160, 210], "rk": 160, "iqft": 160, "rkgate": 160, "qtf": 160, "povm": 161, "as_int": [161, 242], "qubit_valu": 161, "intqubitbra": 161, "00001": 161, "qubitbra": 161, "matrix_to_dens": 161, "matrix_to_qubit": 161, "measure_al": 161, "ensembl": 161, "measure_all_oneshot": 161, "oneshot": 161, "measure_parti": 161, "measure_partial_oneshot": 161, "qubit_to_matrix": 161, "enumerate_st": 162, "_enumerate_st": 162, "foo_1": 162, "foo_2": 162, "foo_3": 162, "test2": 162, "bar_4": 162, "bar_5": 162, "bar_10": 162, "get_basi": 162, "replace_non": 162, "operator_to_st": 162, "qexpr": 162, "integrate_result": 162, "orig_expr": 162, "x_ket": 162, "x_op": 162, "rep_expect": 162, "px_2": 162, "px_1": 162, "rep_innerproduct": 162, "_repres": 162, "_represent_foobasi": 162, "foobasi": 162, "_represent_szop": 162, "szupket": 162, "szop": 162, "sz": 162, "cmod": 163, "reformat": 163, "period_find": 163, "momemtum": 164, "j2op": 164, "jxbra": 164, "jx": 164, "jzket": 164, "jxbracoupl": 164, "jcoupl": 164, "jzketcoupl": 164, "jxket": 164, "jxketcoupl": 164, "jybra": 164, "jy": 164, "jybracoupl": 164, "jyket": 164, "jyketcoupl": 164, "jzbra": 164, "jz": 164, "jzbracoupl": 164, "j_4": [164, 186], "argular": 164, "jzop": 164, "passiv": 164, "r696": 164, "wignerd": 164, "mp": [164, 219, 235], "jm": 164, "jj": 164, "r697": 164, "jcoupling_list": 164, "coupledspinst": 164, "spinstat": 164, "r698": 165, "dual_class": 165, "mn": [165, 201, 221], "ket_not": 165, "r699": 165, "k0": [165, 192, 194, 221], "orthogonalbra": 165, "orthogonalket": 165, "orthogonalst": 165, "_eval_adjoint": 165, "timedepbra": 165, "timedepst": 165, "timedepket": 165, "prob": [165, 221], "412214747707527": 165, "matrix_tensor_product": 166, "axb": 166, "xdagger": 166, "axc": 166, "bxc": 166, "tensor_product_simp": 166, "cxd": 166, "boson": 167, "fetter": 167, "welecka": 167, "secondqu": 167, "annihilateboson": 167, "fockstateket": 167, "bket": 167, "fockstatebosonket": 167, "annihilatefermion": 167, "createboson": 167, "is_only_q_annihil": 167, "destroi": [167, 210], "quasi": 167, "hole": 167, "is_only_q_cr": 167, "is_q_annihil": 167, "is_q_creat": 167, "antisymmetrictensor": 167, "bbra": 167, "fockstatebosonbra": 167, "bd": 167, "bosonicbasi": 167, "fock": 167, "NO": 167, "createfermion": 167, "wick": 167, "fbra": 167, "fockstatefermionbra": 167, "fket": 167, "fockstatefermionket": 167, "fixedbosonicbasi": 167, "n_particl": 167, "n_level": 167, "fockstat": 167, "occup": 167, "bosonbra": 167, "fockstatebra": 167, "fermi_level": 167, "r700": 167, "textwrap": [167, 242], "_q": 167, "get_subno": 167, "fermionicoper": 167, "has_q_annihil": 167, "q_annihil": 167, "has_q_creat": 167, "leftmost": 167, "q_creator": 167, "iter_q_annihil": 167, "iter_q_cr": 167, "0x": 167, "permutationoper": 167, "get_permut": 167, "varbosonicbasi": 167, "n_max": 167, "creator": 167, "evaluate_delta": 167, "einstein": [167, 227], "d_ij": 167, "_j": [167, 172, 186, 203], "d_ip": 167, "d_qp": 167, "matrix_rep": 167, "simplify_index_permut": 167, "permutation_oper": 167, "schemat": [167, 172], "abij": 167, "abji": 167, "baij": 167, "baji": 167, "permutlist": 167, "substitute_dummi": 167, "new_indic": 167, "pretty_indic": 167, "_get_ordered_dummi": 167, "_c": 167, "_d": 167, "index_group": 167, "string_of_lett": 167, "my_dummi": 167, "_v": [167, 185], "_p_0": 167, "_p_1": 167, "keep_only_fully_contract": 167, "sho": 168, "isotrop": 168, "mk": [169, 172], "legal": 169, "temperatur": [169, 182, 254], "dimensions": 169, "dimsys_si": [169, 170], "get_dimensional_depend": [169, 170], "has_integer_pow": 169, "dim_si": 169, "base_dim": 169, "derived_dim": 169, "dimensional_depend": 169, "can_transf_matrix": 169, "useless": [169, 192, 194], "inv_can_transf_matrix": 169, "dim_can_vector": 169, "dim_vector": 169, "is_consist": [169, 175], "is_dimensionless": 169, "list_can_dim": 169, "print_dim_bas": 169, "gravitational_const": [170, 174], "equivalent_dim": 170, "grav_eq": 170, "kepler": [170, 246], "venu": 170, "701": 170, "dai": [170, 174, 217], "venus_a": 170, "108208000e3": 170, "solar": 170, "solar_mass": 170, "9891e30": 170, "convert_to": [170, 174, 190, 196], "5112118495813": 170, "659097795948": 170, "astrophys": 170, "ill": 170, "astrophysicist": 171, "ua": [171, 189], "earth": [171, 182, 254], "sun": 171, "theoricist": 171, "philosophi": [171, 217, 220, 262], "mole": 172, "dimensionless": 172, "unavoid": 172, "d_3": 172, "d_2": [172, 197, 221], "underbrac": [172, 184], "countabl": [172, 220], "pmatrix": 172, "kg": [172, 255], "glu": 172, "men": 172, "heat": 172, "joul": 172, "calori": 172, "stori": 172, "chemistri": 172, "page52": 172, "1952": 172, "page78": 172, "deboer79": 172, "boer": 172, "818": 172, "levyleblond77": 172, "l\u00e9vy": 172, "leblond": 172, "conceptu": [172, 188, 254], "rivista": 172, "del": [172, 236, 253, 277], "nuovo": [172, 186], "cimento": [172, 186], "1977": 172, "187": [172, 195], "214": 172, "anticip": 172, "bin_prefix": 173, "abbrev": [173, 174, 201], "latex_repr": [173, 174], "encapsul": [173, 194, 220, 234], "kilo": 173, "scale_factor": 174, "pretty_unicode_repr": 174, "pretty_ascii_repr": 174, "mathml_presentation_repr": 174, "is_prefix": 174, "abbrevi": [174, 189, 201, 220, 222], "speed_of_light": 174, "reference_quant": 174, "target_unit": 174, "mile": 174, "atomic_mass_const": 174, "centimet": 174, "25146": 174, "609344": 174, "86400": 174, "660539060e": 174, "300000": 174, "planck": 174, "62963087839509e": 174, "base_unit": 175, "descr": 175, "dimension_system": 175, "derived_unit": 175, "overridden": [175, 188, 203, 277], "get_units_non_prefix": 175, "rigidli": 176, "entireti": 176, "_str": 176, "otherfram": [177, 246], "n_alpha_b": 177, "ny": 177, "_3": 177, "rot_typ": [177, 180, 182], "rot_ord": [177, 180, 247], "orient_body_fix": 177, "orient_space_fix": 177, "orient_quaternion": 177, "tait": [177, 246, 247], "bryan": [177, 246, 247], "quaternion": [177, 180, 185, 246, 247, 257], "userwarn": [177, 230, 237, 273], "rotation_ord": [177, 246, 247], "xzx": 177, "zxz": [177, 185, 246, 247], "xyx": [177, 246, 247], "yzy": 177, "zyz": 177, "yxy": [177, 185], "yzx": [177, 185], "zxy": 177, "xzy": 177, "zyx": 177, "yxz": 177, "orient_explicit": 177, "lambda_x": [177, 246, 247], "lambda_i": [177, 246, 247], "lambda_z": [177, 246, 247], "q0": [177, 217, 246, 247], "newnam": 177, "gen_spe": [177, 180], "variable_map": 177, "a_x": [177, 185, 201], "b_x": [177, 179, 185, 227], "b_y": [177, 179, 185, 227], "a_z": [177, 185], "b_z": [177, 185, 227], "inlist": 177, "var_in_dcm": 177, "reexpress": [177, 250], "time_deriv": [177, 182, 183], "free_dynamicsymbol": 177, "codirect": 177, "dyadic_tensor": [177, 246], "frame1": 177, "frame2": [177, 179], "second_reference_fram": 177, "ixz": 177, "inertia_dyad": 177, "pertain": [178, 183], "fieldfunct": [178, 182], "vect": [178, 246, 248], "r_x": [178, 182], "r_y": [178, 182], "r_z": [178, 182], "scalar_field": [178, 182, 246, 248, 252], "grad_field": [178, 248], "sympyfi": [178, 179, 180, 248], "position2": [178, 248], "vectfield": [178, 182, 248, 252], "solenoid": [178, 248, 253], "q6": 179, "vec1": 179, "vec2": 179, "coordinatesym": [179, 183], "n_x": 179, "rotating_reference_fram": 179, "time_derivatives_in_the_two_fram": 179, "otherpoint": 180, "outfram": 180, "interfram": 180, "fixedfram": 180, "get_motion_param": 180, "vectori": [180, 182, 249, 254], "timevalue1": 180, "timevalue2": 180, "313": 180, "vel_vec": 180, "q1dd": 181, "q2dd": 181, "charg": [182, 254], "displac": [182, 184, 254], "temper": 182, "electric_potenti": [182, 252], "r1_x": 182, "r1_y": 182, "infinitesim": [182, 252], "nabla": [182, 246, 251, 252], "f_y": [182, 252], "f_x": [182, 220, 252], "sink": [182, 252], "irrot": [182, 252], "is_conserv": [182, 252, 253], "is_solenoid": [182, 252, 253], "scalar_potenti": [182, 252, 253], "conservative_field": [182, 252], "scalar_potential_differ": [182, 252, 253], "aug": [183, 220], "dyadic_product": [183, 253], "inc": [183, 195], "kinematic_equ": 183, "w_x": 184, "w_y": 184, "w_z": 184, "w_1": [184, 196], "w_2": [184, 196], "w_3": 184, "textrm": [184, 185, 209], "u_x": 184, "sp": 184, "oq": 184, "qp": 184, "rod": 184, "went": 184, "parallelogram": 185, "c_x": 185, "c_y": 185, "c_z": 185, "train": 185, "friend": 185, "xz": [185, 187], "zy": 185, "undergon": [185, 220], "vastli": 185, "wait": 185, "mold": 185, "bp": [185, 217], "bpp": 185, "zzx": 185, "multifram": 185, "direction": 185, "racah": 186, "gaunt": 186, "rasch03": 186, "regge58": 186, "regg": 186, "544": 186, "regge59": 186, "116": [186, 195], "1959": 186, "edmonds74": 186, "edmond": 186, "princeton": [186, 221], "1957": 186, "rasch": 186, "siam": [186, 239], "sci": 186, "1416": 186, "1428": 186, "liberatodebrito82": 186, "liberato": 186, "brito": 186, "forum": [186, 220], "m4nzdu": 186, "7o38": 186, "jen": 186, "03": [186, 221], "oscar": 186, "gerardo": 186, "lazo": 186, "arjona": 186, "jyr2000": 186, "gmail": 186, "clebsch_gordan": 186, "2j_3": 186, "dot_rot_grad_ynm": 186, "gradient": [186, 187, 246, 253, 254], "_l": 186, "l_2": 186, "l_3": 186, "drastic": 186, "2l_1": 186, "2l_2": 186, "2l_3": 186, "1200": 186, "00689500421922113448": 186, "inflect": 186, "unsuit": 186, "dd": [186, 206], "ee": [186, 196], "j_5": 186, "j_6": 186, "richer": 186, "wigner_3j": 186, "wigner_6j": 186, "wigner_9j": 186, "j_7": 186, "j_8": 186, "j_9": 186, "05555555": 186, "1666666": 186, "wigner_d": 186, "j_z": 186, "j_y": 186, "\u03b3": [186, 267, 277], "wigner_d_smal": 186, "textbackend": 187, "plot_parametr": 187, "plot_implicit": 187, "plot3d_parametric_lin": 187, "plot3d_parametric_surfac": 187, "xlabel": 187, "ylabel": 187, "zlabel": 187, "aspect_ratio": 187, "ylim": 187, "axis_cent": 187, "xscale": 187, "yscale": 187, "autoscal": 187, "textplot": 187, "_seri": [187, 198], "baseseri": 187, "nonparametr": 187, "cylindr": [187, 252], "basebackend": 187, "parametric2dlineseri": 187, "parametric3dlineseri": 187, "cyan": 187, "grayscal": 187, "integers_onli": 187, "surfaceover2drangeseri": 187, "parametricsurfaceseri": 187, "surface_color": 187, "range1": 187, "range2": 187, "fill_between": 187, "inch": 187, "expr_x": 187, "expr_i": 187, "canva": 187, "range_x": 187, "range_i": 187, "nb_of_points_x": 187, "nb_of_points_i": 187, "expr_z": 187, "range_u": 187, "range_v": 187, "nb_of_points_u": 187, "nb_of_points_v": 187, "x_var": 187, "y_var": 187, "mesh": 187, "p8": 187, "p9": 187, "nrow": [187, 190], "ncolumn": 187, "stuff": [187, 232, 234, 242], "is_2dlin": 187, "oblig": 187, "only_integ": 187, "get_seg": 187, "get_color_arrai": 187, "var_start_end": 187, "r701": 187, "luiz": 187, "henriqu": 187, "figueiredo": 187, "r702": 187, "line3dbaseseri": 187, "surfacebaseseri": 187, "var_start_end_x": 187, "var_start_end_i": 187, "var_start_end_u": 187, "var_start_end_v": 187, "implicitseri": 187, "has_equ": 187, "use_interval_math": 187, "centric": 187, "get_mesh": 187, "process_seri": 187, "_process_seri": 187, "keyboard": 187, "mous": 187, "pyglet_plot": 187, "screenshot": 187, "camera": 187, "zoom": 187, "numpad": 187, "ordin": [187, 217, 242], "f5": 187, "f6": 187, "f8": 187, "drag": 187, "button": [187, 233], "curvilinear": [187, 249, 250, 253], "__setitem__": 187, "zfade4": 187, "key1": 187, "value1": 187, "key2": 187, "value2": 187, "unbound_theta": 187, "wirefram": 187, "saddl": 187, "fz": 187, "_______________________________________________________": 187, "mediterranean": 188, "cultur": 188, "arab": 188, "lighten": 188, "tapestri": 188, "woven": 188, "european": 188, "soil": 188, "plausibl": 188, "teeter": 188, "totter": 188, "outweigh": 188, "excit": 188, "amus": 188, "kempf": 188, "1944": 188, "20th": 188, "dedekind": 188, "intim": 188, "disciplin": 188, "toolset": 188, "atiyah69": [188, 195], "gear": 188, "greuel2008": [188, 195], "interspers": 188, "lr": 188, "ilex": 188, "\u211a": [188, 201], "localis": 188, "abridg": 188, "free_modul": [188, 192], "quotient_r": [188, 192], "overload": [188, 191, 192, 249, 272], "polynomialr": [188, 192, 193, 199], "domain_or_r": [188, 192], "quotientr": [188, 192], "base_id": [188, 192], "elbow": 188, "room": 188, "componentwis": [188, 201], "inclin": 188, "biproduct": 188, "quotient_modul": 188, "is_submodul": 188, "multiply_id": 188, "identity_hom": 188, "freemodul": 188, "freemoduleel": 188, "conicis": 188, "_contain": 188, "_syzygi": 188, "_in_terms_of_gener": 188, "_intersect": 188, "_module_quoti": 188, "reduce_el": [188, 196], "represantit": 188, "in_terms_of_gener": 188, "inclusion_hom": 188, "rela": 188, "relb": 188, "is_full_modul": 188, "module_quoti": 188, "opt": [188, 194, 213, 273], "coincis": 188, "syzygy_modul": 188, "r_n": 188, "_contains_elem": 188, "_contains_id": 188, "_quotient": 188, "_union": 188, "_product": 188, "is_whole_r": 188, "is_maxim": 188, "is_primari": 188, "is_rad": 188, "is_princip": 188, "xj": 188, "satur": 188, "subquoti": 188, "quotientmodul": 188, "subquotientmodul": 188, "killed_modul": 188, "quotientmoduleel": 188, "kill": [188, 192, 232], "quotient_hom": 188, "ker": 188, "surject": 188, "cokernel": 188, "coker": 188, "meaningfulli": 188, "restrict_domain": 188, "homomoprh": 188, "modulehomomorph": [188, 196], "_ker": 188, "_img": 188, "_kernel": 188, "_imag": 188, "_restrict_domain": 188, "_restrict_codomain": 188, "_quotient_domain": 188, "_quotient_codomain": 188, "_appli": 188, "_mul_scalar": 188, "_compos": 188, "_add": [188, 207], "is_inject": 188, "quotient_domain": 188, "is_isomorph": 188, "preimag": 188, "restrict_codomain": 188, "is_surject": 188, "quotient_codomain": 188, "induct": 188, "monogen": 188, "monogenicfiniteextens": [188, 192], "finiteextens": 188, "sqrt2": [188, 191], "_5": 188, "extensionel": [188, 192], "notinvert": [188, 194, 197], "nu_1": 189, "nu_2": 189, "nu_n": 189, "nu_i": 189, "customarili": 189, "irreduc": [189, 192, 194, 196, 197, 200, 221, 227, 277], "endow": [189, 197], "resp": [189, 192, 217], "divmod": [189, 191, 192], "cb": [189, 239], "sqf_list": [189, 192, 197], "sqf": [189, 192, 197, 214], "buchberg": [189, 194, 195, 197], "solve_poly_system": [189, 197, 219, 220], "fmt": [190, 192, 196], "matrix1": 190, "dmnonsquarematrixerror": 190, "zz_i": [190, 191, 193], "from_dict_sympi": 190, "ncol": 190, "elemsdict": 190, "from_list_sympi": 190, "from_list": [190, 192, 197, 198], "construct_domain": [190, 191, 192, 197], "from_rep": 190, "drep": 190, "dm": [190, 196], "ownership": 190, "scc": 190, "substract": 190, "to_dens": 190, "to_field": [190, 192, 197], "to_spars": 190, "aq": 190, "ccc": [190, 220], "from_ddm": 190, "domainerror": [190, 194, 197], "to_ddm": 190, "r703": 190, "pythonmpq": [191, 192], "srepr": [191, 264, 272], "strength": 191, "richardon": 191, "dup_factor_list": 191, "factortool": [191, 194], "dup_": [191, 194], "dmp_": [191, 194], "prod": [191, 198, 210], "z1": [191, 192, 219], "is_field": [191, 192], "quo": [191, 192, 194, 197], "rem": [191, 192, 194, 197], "exquo": [191, 192, 197], "exactquotientfail": [191, 192, 194, 197], "mpz": [191, 192], "of_typ": [191, 192], "z1_sympi": 191, "to_sympi": [191, 192], "from_sympi": [191, 192], "forth": [191, 196], "z_sympi": 191, "z_zz": 191, "coercionfail": [191, 194], "sum_domain": 191, "expressions_sympi": 191, "expressions_dom": 191, "result_dom": 191, "e_dom": 191, "result_sympi": 191, "qq_i": [191, 193], "gaussianinteg": [191, 192], "gaussianrationalfield": [191, 192], "gaussianr": [191, 192], "galoi": [191, 194, 196], "finitefield": [191, 192], "pythonfinitefield": [191, 192], "gmpyfinitefield": [191, 192], "welcom": [191, 217, 270], "realel": [191, 192], "complexel": [191, 192], "mpc": 191, "xr": [191, 199], "zc": 191, "1j": 191, "_mpc_": 191, "realfield": [191, 192], "rr100": 191, "33333333333333333333333333333": 191, "hack": [191, 217, 230], "algebraic_field": [191, 192, 194, 196], "algebraicfield": [191, 192, 194, 196], "sqrt3": 191, "x_dom": 191, "p_expr": [191, 192], "polyel": [191, 192, 194, 198, 199, 201], "p_dom": 191, "xk": [191, 192, 203], "yk": [191, 192], "poly_r": [191, 192], "old_polynomialr": 191, "globalpolynomialr": 191, "polyclass": [191, 192, 197], "yr": [191, 199], "broader": 191, "get_field": [191, 192], "frac_field": [191, 192], "rationalfield": [191, 192], "old_frac_field": [191, 192], "fractionfield": [191, 192], "old_fractionfield": 191, "xf": 191, "yf": 191, "fracfield": [191, 192], "expressiondomain": [191, 192], "elements_sympi": 191, "elements_k": 191, "convert_from": [191, 192], "num_zz": 191, "num_qq": 191, "domainel": [191, 192, 199], "encompass": 191, "all_coeff": [191, 192, 197], "dom": [191, 192, 194, 209], "strang": 191, "hybrid": 191, "unreli": 191, "usefulli": 192, "pythonr": [192, 199], "p_domain": 192, "ez": [192, 227], "get_r": 192, "has_assoc_field": 192, "has_assoc_r": 192, "alg_field_from_poli": [192, 196], "root_index": 192, "almosteq": 192, "cyclotomic_field": [192, 196], "zeta7": 192, "zeta_": 192, "lexord": [192, 197], "from_algebraicfield": 192, "from_complexfield": 192, "from_expressiondomain": 192, "from_expressionrawdomain": 192, "from_ff": 192, "modularinteg": 192, "from_ff_gmpi": 192, "from_ff_python": 192, "from_fractionfield": 192, "from_globalpolynomialr": 192, "from_monogenicfiniteextens": 192, "from_polynomialr": 192, "from_qq_gmpi": 192, "from_qq_python": 192, "from_realfield": 192, "from_zz_gmpi": 192, "from_zz_python": 192, "gcdex": [192, 197], "get_exact": 192, "half_gcdex": [192, 197], "is_pid": 192, "is_r": 192, "is_nonposit": 192, "is_on": [192, 197], "rersiv": 192, "__neg__": 192, "__pos__": 192, "__sub__": 192, "q_domain": 192, "q_expr": 192, "x_domain": 192, "alg": [192, 196, 200], "trait": 192, "is_unit": 192, "__divmod__": 192, "__floordiv__": 192, "__mod__": [192, 196], "simpledomain": 192, "compositedomain": 192, "from_qq": 192, "from_zz": 192, "gmpyinteg": 192, "pythoninteg": 192, "gmpyrationalfield": 192, "pythonrationalfield": 192, "from_gaussianrationalfield": 192, "gaussianel": 192, "gaussiandomain": 192, "qq_python": 192, "zz_python": 192, "z2": 192, "z3": 192, "z4": 192, "from_gaussianinteg": 192, "as_algebraicfield": 192, "orig_ext": 192, "algebraicnumb": [192, 196, 200], "integral_basi": [192, 196], "maximal_ord": [192, 196], "zeta5": 192, "primes_abov": [192, 196], "primeid": [192, 196], "to_alg_num": [192, 196], "legibl": 192, "to_rat": 192, "mpelement": 192, "complexfield": 192, "lc": [192, 194, 197], "domain_or_field": 192, "dmf": 192, "coercibl": 192, "monomialord": [192, 197], "xring": 192, "vring": 192, "sring": [192, 198, 199], "polyr": [192, 193, 194, 199], "factor_list": [192, 197, 277], "add_gen": 192, "drop_to_ground": 192, "monomial_basi": 192, "206": [192, 197], "744": 192, "945": [192, 198], "is_monomi": [192, 197], "const": [192, 201], "coeffcient": [192, 194], "inplac": 192, "shallow": [192, 208], "zero_monom": 192, "fv": 192, "clo": 192, "p64": 192, "qv": 192, "f0": 192, "imul_num": 192, "itercoeff": 192, "itermonom": 192, "iterterm": 192, "leading_expv": 192, "leading_monom": 192, "leading_term": 192, "listcoeff": 192, "listmonom": 192, "listterm": 192, "monom": [192, 197], "strip_zero": 192, "tail_degre": 192, "xfield": 192, "vfield": [192, 251], "sfield": [192, 251], "fracel": [192, 201], "lev": 192, "add_ground": [192, 197], "all_monom": [192, 197], "all_term": [192, 197], "cauchy_lower_bound": 192, "cauchy_upper_bound": 192, "clear_denom": [192, 197], "count_complex_root": 192, "sup": [192, 197, 201, 208, 209], "count_real_root": 192, "deflat": [192, 197], "y_i": [192, 194, 196, 197, 217], "x_j": [192, 194, 197], "degree_list": [192, 197], "eject": [192, 197], "exquo_ground": [192, 197], "factor_list_includ": [192, 197], "from_dict": [192, 197], "from_sympy_list": 192, "gff_list": [192, 197], "homogeneous_ord": [192, 197, 214], "is_cyclotom": [192, 197], "is_ground": [192, 197], "is_homogen": [192, 197], "is_irreduc": [192, 197], "is_linear": [192, 197], "is_mon": [192, 197], "is_quadrat": [192, 197], "is_sqf": [192, 197], "l1_norm": [192, 197], "l2_norm_squar": 192, "max_norm": [192, 197], "mignotte_sep_bound_squar": 192, "mignott": [192, 194], "mul_ground": [192, 197], "pdiv": [192, 197], "pexquo": [192, 197], "pquo": [192, 197], "prem": [192, 197], "quo_ground": [192, 197], "refine_root": [192, 196, 197], "includepr": [192, 194, 197], "sqf_list_includ": [192, 197], "sqf_norm": [192, 197], "sqf_part": [192, 197], "sqr": [192, 197], "sturm": [192, 197], "sub_ground": [192, 197], "to_dict": 192, "to_exact": [192, 197], "to_r": [192, 197], "to_sympy_dict": 192, "to_sympy_list": 192, "to_tupl": 192, "total_degre": [192, 197, 214], "trunc": [192, 197, 200], "frac_unifi": 192, "half_per": 192, "poly_unifi": 192, "gr\u00f6bner": 193, "groebner": [193, 195, 196, 197, 200, 213, 219, 220], "wester": 193, "dispers": [193, 195, 221], "agca": 193, "syzygi": 193, "undocu": 193, "rs_seri": 193, "eqs_to_matrix": 193, "sympy_eqs_to_r": 193, "_solve_lin_si": 193, "_solve_lin_sys_compon": 193, "ddm": 193, "sdm": [193, 194], "adic": [193, 195], "valuat": [193, 217], "subfield": 193, "l0": 194, "legitim": 194, "uninterest": 194, "bulk": [194, 211], "x_u": 194, "dup__": 194, "densebas": 194, "dmp_lc": 194, "poly_lc": 194, "dmp_tc": 194, "poly_tc": 194, "dmp_ground_lc": 194, "dmp_ground_tc": 194, "dmp_true_lt": 194, "n_1": [194, 219, 221], "n_k": 194, "dmp_degre": 194, "dmp_degree_in": 194, "dmp_degree_list": 194, "dmp_strip": 194, "dmp_valid": 194, "dup_revers": 194, "dmp_copi": 194, "dmp_to_tupl": 194, "dmp_normal": 194, "dmp_convert": 194, "to_domain": 194, "dmp_from_sympi": 194, "dmp_nth": 194, "dmp_ground_nth": 194, "dmp_zero_p": 194, "dmp_zero": 194, "dmp_one_p": 194, "dmp_one": 194, "dmp_ground_p": 194, "dmp_ground": 194, "dmp_negative_p": 194, "dmp_positive_p": 194, "dmp_from_dict": 194, "dmp_to_dict": 194, "dmp_swap": 194, "dmp_permut": 194, "dmp_nest": 194, "dmp_rais": 194, "dmp_deflat": 194, "dmp_multi_defl": 194, "dmp_inflat": 194, "dmp_exclud": 194, "dmp_includ": 194, "dmp_inject": 194, "dmp_eject": 194, "dmp_terms_gcd": 194, "dmp_list_term": 194, "dmp_apply_pair": 194, "dmp_slice": 194, "dup_random": 194, "densearith": 194, "dmp_add_term": 194, "dmp_sub_term": 194, "dmp_mul_term": 194, "dmp_add_ground": 194, "dmp_sub_ground": 194, "dmp_mul_ground": 194, "dmp_quo_ground": 194, "dmp_exquo_ground": 194, "dup_lshift": 194, "dup_rshift": 194, "dmp_ab": 194, "dmp_neg": 194, "dmp_add": 194, "dmp_sub": 194, "dmp_add_mul": 194, "dmp_sub_mul": 194, "dmp_mul": 194, "dmp_sqr": 194, "dmp_pow": 194, "dmp_pdiv": 194, "dmp_prem": 194, "dmp_pquo": 194, "dmp_pexquo": 194, "dmp_rr_div": 194, "dmp_ff_div": 194, "dmp_div": 194, "dmp_rem": 194, "dmp_quo": 194, "dmp_exquo": 194, "dmp_max_norm": 194, "dmp_l1_norm": 194, "dmp_expand": 194, "densetool": 194, "dmp_integr": 194, "dmp_integrate_in": 194, "dmp_diff": 194, "dmp_diff_in": 194, "dmp_eval": 194, "dmp_eval_in": 194, "dmp_eval_tail": 194, "dmp_diff_eval_in": 194, "dmp_trunc": 194, "dmp_ground_trunc": 194, "dup_mon": 194, "dmp_ground_mon": 194, "dup_cont": 194, "dmp_ground_cont": 194, "dup_primit": 194, "dmp_ground_primit": 194, "dup_extract": 194, "dmp_ground_extract": 194, "dup_real_imag": 194, "bivari": [194, 200, 221], "dup_mirror": 194, "dup_scal": 194, "dup_shift": 194, "dup_transform": 194, "dmp_compos": 194, "dup_decompos": 194, "t_m": 194, "r704": 194, "dmp_lift": 194, "dup_sign_vari": 194, "dmp_clear_denom": 194, "k_0": 194, "dmp_revert": 194, "gf_": 194, "justifi": 194, "necess": 194, "u_0": 194, "m_0": [194, 214], "m_n": 194, "gf_crt1": 194, "9215": 194, "9405": 194, "9603": 194, "gf_crt2": 194, "gf_int": 194, "gf_degre": 194, "gf_lc": 194, "gf_tc": 194, "gf_strip": 194, "gf_trunc": 194, "gf_normal": 194, "gf_from_dict": 194, "gf_to_dict": 194, "gf_from_int_poli": 194, "gf_to_int_poli": 194, "gf_neg": 194, "gf_add_ground": 194, "gf_sub_ground": 194, "gf_mul_ground": 194, "gf_quo_ground": 194, "gf_add": 194, "gf_sub": 194, "gf_mul": 194, "gf_sqr": 194, "gf_add_mul": 194, "gf_sub_mul": 194, "gf_expand": 194, "gf_div": 194, "r705": 194, "monagan93": [194, 195], "r706": 194, "gathen99": [194, 195], "gf_rem": 194, "gf_quo": 194, "gf_exquo": 194, "gf_lshift": 194, "gf_rshift": 194, "gf_pow": 194, "gf_pow_mod": 194, "r707": 194, "gf_gcd": 194, "gf_lcm": 194, "gf_cofactor": 194, "gf_gcdex": 194, "eea": 194, "r708": 194, "gf_monic": 194, "gf_diff": 194, "gf_eval": 194, "gf_multi_ev": 194, "gf_compos": 194, "gf_compose_mod": 194, "gf_trace_map": 194, "r709": 194, "gathen92": [194, 195], "gf_random": 194, "gf_irreduc": 194, "gf_irreducible_p": 194, "gf_sqf_p": 194, "gf_sqf_part": 194, "gf_sqf_list": 194, "e_2": [194, 197], "e_k": 194, "f_j": [194, 211], "gf_sqf": 194, "r710": 194, "geddes92": [194, 195], "gf_qmatrix": 194, "berlekamp": 194, "gf_qbasi": 194, "gf_berlekamp": 194, "gf_zassenhau": 194, "gf_shoup": 194, "gf_factor_sqf": 194, "gf_factor": 194, "e_d": 194, "cantor": 194, "zassenhau": [194, 196], "shoup": [194, 195], "kaltofen": [194, 195], "gathen": [194, 195], "gf_factor_method": 194, "r711": 194, "gf_valu": 194, "2204": 194, "gf_csolv": 194, "congruent": [194, 211, 214], "189": 194, "112": [194, 198], "139": 194, "r712": 194, "ivan": 194, "niven": 194, "zuckerman": 194, "montgomeri": 194, "infeas": [194, 197], "sdm_": 194, "distributedmodul": 194, "sdm_monomial_mul": 194, "sdm_monomial_deg": 194, "f_5": 194, "sdm_monomial_divid": 194, "sdm_lc": 194, "sdm_to_dict": 194, "sdm_from_dict": 194, "dic": 194, "sdm_add": 194, "2f_1": 194, "3f_1": 194, "yf_1": 194, "xf_1": 194, "sdm_lm": 194, "sdm_lt": 194, "sdm_mul_term": 194, "2xy": [194, 271], "4y": [194, 220, 266], "8xy": 194, "2y": [194, 214, 217, 220, 271], "sdm_zero": 194, "sdm_deg": 194, "sdm_from_vector": 194, "sdm_to_vector": 194, "variant": [194, 217, 220], "qg": 194, "remark": [194, 200, 211, 217], "uf": 194, "vg": 194, "zout": 194, "euclidtool": 194, "dmp_half_gcdex": 194, "dmp_gcdex": 194, "dmp_invert": 194, "dmp_euclidean_pr": 194, "dmp_primitive_pr": 194, "exceedingli": 194, "collin": [194, 195], "collins67": [194, 195], "subdomain": 194, "2l": 194, "remainin": 194, "subdetermin": 194, "n_2": [194, 221], "n_": [194, 214], "abnorm": 194, "gamma_i": 194, "brown": [194, 195, 221], "traub": [194, 195], "browntraub71": [194, 195], "brown78": [194, 195], "discoveri": [194, 273], "dmp_inner_subresult": 194, "729": 194, "sre": 194, "dmp_subresult": 194, "dmp_prs_result": 194, "dmp_zz_modular_result": 194, "dmp_zz_collins_result": 194, "dmp_qq_collins_result": 194, "dmp_result": 194, "dmp_discrimin": 194, "dmp_rr_prs_gcd": 194, "cff": [194, 197], "cfg": [194, 197], "dmp_ff_prs_gcd": 194, "dmp_zz_heu_gcd": 194, "r713": 194, "liao95": [194, 195], "dmp_qq_heu_gcd": 194, "dmp_inner_gcd": 194, "dmp_gcd": 194, "dmp_lcm": 194, "dmp_content": 194, "dmp_primit": 194, "dmp_cancel": 194, "dmp_trial_divis": 194, "dmp_zz_mignotte_bound": 194, "dup_zz_hensel_step": 194, "hensel": 194, "r714": 194, "dup_zz_hensel_lift": 194, "f_list": 194, "multifactor": 194, "r715": 194, "dup_zz_zassenhau": 194, "dup_zz_irreducible_p": 194, "eisenstein": 194, "dup_cyclotomic_p": 194, "bradford": 194, "russel": 194, "251": 194, "berlin": 194, "heidelberg": 194, "dup_zz_cyclotomic_poli": 194, "dup_zz_cyclotomic_factor": 194, "r716": 194, "weisstein09": [194, 195], "dup_zz_factor_sqf": 194, "dup_zz_factor": 194, "r717": 194, "dmp_zz_wang_non_divisor": 194, "wang": [194, 195], "eez": 194, "dmp_zz_wang_test_point": 194, "dmp_zz_wang_lead_coeff": 194, "dmp_zz_diophantin": 194, "dmp_zz_wang_hensel_lift": 194, "dmp_zz_wang": 194, "enhanc": [194, 221], "r718": 194, "wang78": [194, 195], "r719": 194, "dmp_zz_factor": 194, "r720": 194, "dmp_ext_factor": 194, "dup_gf_factor": 194, "dmp_factor_list": 194, "dmp_factor_list_includ": 194, "dmp_irreducible_p": 194, "groebnertool": 194, "polyconfig": [194, 197], "f5b": [194, 197], "spoli": 194, "red_groebn": 194, "beckerweispfenning93": 194, "is_groebn": 194, "is_minim": 194, "is_reduc": 194, "fglmtool": 194, "matrix_fglm": 194, "o_to": 194, "o_from": 194, "r721": 194, "fauger": [194, 197], "gianni": [194, 197, 219], "mora": [194, 195, 197, 219], "sdm_spoli": 194, "phantom": 194, "sca": 194, "defn": 194, "sdm_ecart": 194, "ecart": 194, "sdm_nf_mora": 194, "nf": 194, "sdm_groebner": 194, "sugar": [194, 195, 226], "giovini": [194, 195], "polyopt": [194, 198], "build_opt": 194, "polyerror": [194, 197], "basepolynomialerror": 194, "operationnotsupport": 194, "heuristicgcdfail": 194, "homomorphismfail": 194, "isomorphismfail": [194, 196], "extraneousfactor": 194, "evaluationfail": 194, "refinementfail": 194, "notrevers": [194, 197], "notalgebra": 194, "polynomialerror": [194, 197], "unificationfail": [194, 196], "generatorsneed": 194, "computationfail": 194, "exc": 194, "generatorserror": 194, "univariatepolynomialerror": 194, "multivariatepolynomialerror": [194, 197], "polificationfail": 194, "orig": 194, "optionerror": 194, "flagerror": 194, "modulargcd": 194, "modgcd_univari": 194, "monagan00": [194, 195], "modgcd_bivari": 194, "modgcd_multivari": 194, "_modgcd_multivariate_p": 194, "brown71": [194, 195], "degbound": 194, "contbound": 194, "func_field_modgcd": 194, "reconstuct": 194, "z_p": 194, "spuriou": [194, 219], "hoeij04": [194, 195], "scarc": 194, "hsin": 195, "chao": 195, "liao": 195, "fateman": 195, "montreal": 195, "quebec": 195, "canada": 195, "240": [195, 203, 248], "247": [195, 219], "von": [195, 221], "zur": 195, "gerhard": 195, "cambridg": [195, 214], "weisstein": 195, "cyclotomicpolynomi": 195, "1215": 195, "1231": 195, "czapor": 195, "labahn": 195, "monagan": [195, 213], "disco": 195, "721": 195, "kaltofen98": 195, "subquadrat": 195, "223": 195, "1998": [195, 214], "1179": 195, "1197": 195, "shoup95": 195, "397": 195, "shoup91": 195, "cox97": [195, 197], "shea": [195, 197], "ajwa95": 195, "ajwa": 195, "liu": 195, "cites": [195, 213], "ist": [195, 210, 213], "psu": [195, 210, 213], "mycites": 195, "login": 195, "bose03": 195, "bose": 195, "guiver": 195, "multidimension": [195, 232, 257], "giovini91": 195, "bronstein93": [195, 197], "salvi": [195, 198], "kiev": 195, "ukrain": 195, "buchberger01": [195, 197], "theorist": 195, "moreno": 195, "diaz": 195, "freir": 195, "eurocast": 195, "februari": 195, "davenport88": 195, "siret": 195, "tournier": 195, "london": [195, 214], "124": [195, 266], "greuel": 195, "pfister": 195, "atiyah": 195, "macdonald": 195, "142": 195, "1971": [195, 217], "505": 195, "237": 195, "249": 195, "wittkopf": 195, "478": 195, "hoeij": 195, "297": [195, 197], "304": [195, 197], "wang81": 195, "symsac": 195, "hoeij02": 195, "manwright94": [195, 197], "yiu": 195, "kwong": 195, "franci": 195, "wright": 195, "190347": 195, "190413": 195, "koepf98": [195, 197], "koepf": [195, 203, 213], "vieweg": 195, "abramov71": [195, 197], "abramov": [195, 219], "ussr": 195, "330": 195, "man93": [195, 197], "376": 195, "sciencedirect": 195, "pii": 195, "s0747717183710539": 195, "kapur1994": 195, "deepak": 195, "kapur": 195, "tushar": 195, "saxena": 195, "yang": 195, "dixon": 195, "researchg": [195, 221], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 195, "palancz08": 195, "pal\u00e1ncz": 195, "zaletnyik": 195, "jl": [195, 234], "awang": 195, "ew": 195, "grafarend": 195, "geodet": 195, "geodesi": 195, "225607735_dixon_result": 195, "s_solution_of_systems_of_geodetic_polynomial_equ": 195, "bruce97": 195, "bruce": 195, "randal": 195, "donald": [195, 236], "mundi": 195, "artifici": [195, 204], "intellig": [195, 213, 217, 277], "orlando": 195, "www2": 195, "duke": 195, "donaldlab": 195, "symbolicnumericalcomput": 195, "045": 195, "087": 195, "stiller96": 195, "stiller": 195, "1996": [195, 211, 219, 246], "citeseerx": [195, 210], "viewdoc": [195, 210, 213], "590": 195, "2021": 195, "rep1": [195, 210], "cohen93": [195, 196], "henri": 195, "olga": 196, "tausski": 196, "zimmer": 196, "pohst": 196, "articul": 196, "numberfield": 196, "mathfrak": 196, "regul": 196, "alpha_m": 196, "round_two": 196, "prime_decomp": 196, "prime_valu": 196, "minimal_polynomi": 196, "field_isomorph": 196, "nilrad": 196, "z_k": 196, "zk": 196, "ordinarili": 196, "503": 196, "r722": 196, "r723": 196, "powerbasisel": 196, "ramif": 196, "as_submodul": 196, "bundl": 196, "test_factor": 196, "deliber": 196, "is_inert": 196, "inert": [196, 217], "reduce_anp": 196, "elt": 196, "reduce_alg_num": 196, "field_gen": 196, "just_gen": 196, "reagent": 196, "kummer": 196, "1847": 196, "ueber": 196, "zerlegung": 196, "crell": 196, "r724": 196, "_minpoly_compos": 196, "stall": 196, "alli": 196, "monomorph": 196, "alpha_i": 196, "alpha_n": 196, "lincomb": 196, "primtiiv": 196, "meanwhil": 196, "moduleel": 196, "powerbasi": 196, "submodule_from_matrix": 196, "ancestor": 196, "to_col": 196, "nca": 196, "circumst": [196, 271], "_mult_tab": 196, "successfulli": 196, "moduleendomorph": 196, "innerendomorph": 196, "endomorphismr": 196, "spec": [196, 197], "i_n": [196, 197, 222], "include_self": 196, "basis_el": 196, "element_from_r": 196, "endomorphism_r": 196, "is_compat_col": 196, "mult_tab": 196, "mult": 196, "closurefailur": 196, "nearest_common_ancestor": 196, "number_field": 196, "power_basis_ancestor": 196, "incom": 196, "halv": 196, "submodule_from_gen": 196, "over_power_basi": 196, "starts_with_un": 196, "hnf_modulu": 196, "whole_submodul": 196, "element_from_anp": 196, "element_from_alg_num": 196, "element_from_poli": 196, "qq_matrix": 196, "basis_element_pullback": 196, "discard_befor": 196, "structureerror": 196, "cohen00": 196, "make_mod_elt": 196, "qq_col": 196, "from_int_list": 196, "is_compat": 196, "reduced_mod_p": 196, "to_ancestor": 196, "anc": 196, "to_par": 196, "to_anp": 196, "inner_endomorph": 196, "event": [196, 221], "find_min_poli": 196, "missingunityerror": 196, "is_int": 196, "get_num_denom": 196, "extract_fundamental_discrimin": 196, "r725": 196, "algintpow": 196, "zeta_pow": 196, "r726": 196, "coeff_search": 196, "supplement_a_subspac": 196, "dmrankerror": 196, "v_n": 196, "w_r": 196, "w_j": 196, "u_j": 196, "r727": 196, "poly_from_expr": 197, "parallel_poly_from_expr": 197, "lt": [197, 242], "mod_invers": 197, "exprtool": [197, 257], "gcd_term": 197, "gcd_list": 197, "lcm_list": 197, "destruct": 197, "2079": 197, "1401": 197, "2715": 197, "6720": 197, "1092": 197, "gff": 197, "check_sqf": 197, "count_root": 197, "nroot": [197, 219], "maxstep": 197, "cleanup": 197, "73205080756888": 197, "73205080756887729352744634151": 197, "ground_root": 197, "nth_power_roots_poli": 197, "r_f": 197, "r_g": 197, "_signsimp": 197, "q_n": 197, "is_zero_dimension": [197, 220], "donal": 197, "230": [197, 219], "ec": 197, "em": 197, "di": 197, "dispersionset": 197, "gp": [197, 217], "free_symbols_in_domain": 197, "from_poli": 197, "get_domain": 197, "get_modulu": 197, "has_only_gen": 197, "vincent": [197, 239], "akrita": 197, "strzebonski": 197, "va": 197, "alkiviadi": 197, "adam": 197, "panagioti": 197, "vigkla": 197, "265": 197, "279": 197, "polnomi": 197, "is_multivari": 197, "is_univari": 197, "ltrim": 197, "rerun": [197, 232], "_only_": 197, "sturmian": 197, "subresultants_qq_zz": 197, "suffix": [197, 234], "_pg": 197, "_amv": 197, "rem_z": 197, "premultipli": 197, "rat_clear_denom": 197, "_ignor": 197, "retract": 197, "same_root": 197, "r0": 197, "set_domain": 197, "set_modulu": 197, "termwis": 197, "fglm": 197, "r728": 197, "horner_schem": 197, "equispac": 197, "viet": 197, "itermonomi": 197, "min_degre": 197, "gib": 197, "monomial_kei": 197, "monomial_count": 197, "gradedlexord": 197, "reversedgradedlexord": 197, "clear_cach": 197, "_get_interv": 197, "165": [197, 221, 239], "169": 197, "eval_approx": 197, "evalf_r": 197, "eval_r": 197, "69629": 197, "71318": 197, "805": 197, "3275": 197, "65536": [197, 200, 201], "414645": 197, "131072": 197, "6545": 197, "104755": 197, "2097152": 197, "6634255": 197, "_all_root": 197, "use_cach": 197, "_complexes_index": 197, "_complexes_sort": 197, "_count_root": 197, "_ensure_complexes_init": 197, "_ensure_reals_init": 197, "_eval_is_imaginari": 197, "_get_complex": 197, "_get_complexes_sqf": 197, "currentfactor": 197, "_get_real": 197, "_get_reals_sqf": 197, "_get_root": 197, "_indexed_root": 197, "_new": 197, "_postprocess_root": 197, "_preprocess_root": 197, "heroic": [197, 219], "_real_root": 197, "_reals_index": 197, "_reals_sort": 197, "_refine_complex": 197, "_roots_trivi": 197, "_set_interv": 197, "861136": 197, "86113631159405258": 197, "polyroot": 197, "quintic": [197, 219], "unread": [197, 237], "casu": 197, "irreducibili": 197, "unsolvablefactorerror": [197, 219], "inexpress": 197, "unsolv": [197, 220], "r729": 197, "cubic_funct": 197, "trigonometric_": 197, "28and_hyperbol": 197, "29_method": 197, "specialpoli": 197, "swinnerton_dyer_poli": 197, "swinnerton": 197, "dyer": 197, "symmetric_poli": 197, "random_poli": 197, "gegenbau": [197, 201], "jakob": 197, "psum": 197, "3144337": 197, "r730": 197, "bernoulli_c_poli": 197, "reindex": 197, "swiss": 197, "knife": 197, "630": 197, "5124": 197, "12465": 197, "155": 197, "r731": 197, "partfrac": [197, 203], "undertermin": 197, "_w": [197, 208], "apart_list": 197, "assemble_partfrac_list": 197, "bunch": 197, "pfd": 197, "r732": 197, "partial_list": 197, "reassembl": 197, "pfda": 197, "r733": 197, "r734": 197, "r735": 197, "r736": 197, "r737": 197, "r738": 197, "r739": 197, "r740": 197, "widen": 198, "ring_seri": 198, "rs_sin": 198, "166666666666667": 198, "puiseux": 198, "rs_co": 198, "rs_tan": 198, "took": [198, 210], "eleg": [198, 200], "rs_exp": 198, "everyon": 198, "blazingli": 198, "promin": 198, "gradual": 198, "rs_": 198, "rs_log": 198, "rs_lambertw": 198, "rs_atan": 198, "arctang": 198, "rs_asin": 198, "_tan1": 198, "rs_cot": 198, "rs_cos_sin": 198, "rs_atanh": 198, "rs_sinh": 198, "rs_cosh": 198, "rs_tanh": 198, "rs_hadamard_exp": 198, "inver": 198, "rs_mul": 198, "rs_squar": 198, "rs_pow": 198, "rs_series_invers": 198, "rs_series_revers": 198, "a_kx_k": 198, "ar_i": 198, "ar_": 198, "ae": 198, "rs_trunc": 198, "rs_nth_root": 198, "160249952256379": 198, "44224957030741": 198, "rs_sub": 198, "rs_diff": 198, "rs_integr": 198, "rs_newton": 198, "rs_compose_add": 198, "r741": 198, "bostan": 198, "flajolet": 198, "schost": 198, "4579": 198, "institut": 198, "nation": 198, "recherch": 198, "informatiqu": 198, "automatiqu": 198, "rs_is_puiseux": 198, "rs_puiseux": 198, "rs_puiseux2": 198, "rs_series_from_list": 198, "concur": 198, "rs_fun": 198, "_tan": 198, "_nth": 198, "_root": 198, "_fun": 198, "mul_xin": 198, "pow_xin": 198, "_raw": 199, "unkown": 199, "eqs_r": 199, "eqs_coeff": 199, "eqs_rh": 199, "critiqu": 200, "wester1999": 200, "systemat": 200, "153": 200, "\u2124": [200, 201, 220, 278], "unm": 200, "driver": [201, 233], "adequ": 201, "emptyprint": 201, "_sympystr": 201, "mathml": 201, "inconveni": 201, "_print_": 201, "expr_class": 201, "hierarchi": [201, 221], "_print_rat": 201, "_print_numb": 201, "_print_atom": 201, "_print_bas": 201, "print_latex": 201, "mylatexprint": 201, "_print_deriv": 201, "print_my_latex": 201, "modop": 201, "subcompon": 201, "outermost": [201, 209, 213, 225], "modopmodewrong": 201, "modopnestedwrong": 201, "modopsettingswrong": 201, "subobject": 201, "infrastructur": [201, 218], "printer_exampl": 201, "set_global_set": 201, "stringpict": 201, "pretty_symbologi": 201, "prettyform": 201, "hline": 201, "vline": 201, "ascii": [201, 263], "_pretti": 201, "use_unicode_sqrt_char": 201, "root_not": 201, "mat_symbol_styl": 201, "prettifi": 201, "bold": 201, "c89codeprint": 201, "print_ccod": 201, "tgamma": 201, "known_functions_c89": 201, "known_functions_c99": 201, "fmax": 201, "fmin": 201, "lgamma": 201, "indent_cod": 201, "functionclass": [201, 240], "cfunction_format": 201, "derefer": 201, "dereferenc": 201, "symbols_to_declar": 201, "not_supported_funct": 201, "code_text": 201, "m_sqrt2": 201, "math_macro": 201, "m_sqrt2l": 201, "cxx": 201, "cxx98codeprint": 201, "print_rcod": 201, "rcode": 201, "known_funct": 201, "_rcode": 201, "rfunction_str": 201, "rfunction_format": 201, "ifels": 201, "tweak": [201, 219], "type_map": 201, "name_mangl": 201, "mangl": 201, "floor1": 201, "floor2": 201, "print_fcod": 201, "_fcode": 201, "conjg": 201, "32768": 201, "7182818284590452d0": 201, "1415926535897932d0": 201, "718281828459045235360287d0": 201, "141592653589793238462643d0": 201, "869604401089358618834491d0": 201, "mygamma": 201, "allow_unknown_funct": 201, "smtlib": 201, "smtlibprint": 201, "symbol_t": 201, "_smtlib": 201, "_default_set": 201, "known_const": 201, "strictlessthan": [201, 242], "greaterthan": 201, "lessthan": 201, "ite": 201, "known_typ": 201, "smtlib_cod": 201, "auto_assert": 201, "auto_declar": 201, "prefix_express": 201, "suffix_express": 201, "log_warn": 201, "booleanfunct": 201, "dreal": 201, "numbersymbol": 201, "14159": 201, "my_smt_variable_for_pi": 201, "postfix": [201, 239], "riski": 201, "sound": [201, 277], "noop": 201, "pw": 201, "pythontyp": 201, "smt_builtin_func": 201, "existing_smtlib_fcn": 201, "user_def_func": 201, "fun": [201, 218, 270], "coshintegr": 201, "cosintegr": 201, "expintegralei": 201, "factorialpow": 201, "heavisidetheta": 201, "sinhintegr": 201, "sinintegr": 201, "arccosh": 201, "arccoth": 201, "arcsinh": 201, "arctanh": 201, "dirichleteta": 201, "gegenbauerc": 201, "hypergeometricpfq": 201, "sphericalbesselj": 201, "logintegr": 201, "lucasl": 201, "riemann_xi": 201, "riemannxi": 201, "stieltjesgamma": 201, "sphericalbess": 201, "mcodeprint": 201, "_mcode": 201, "mcode": 201, "maplecodeprint": 201, "_mapl": 201, "maple_cod": 201, "print_maple_cod": 201, "javascriptcodeprint": 201, "_javascript": 201, "js_function_str": 201, "known_fcns_src1": 201, "known_fcns_src2": 201, "conj": 201, "juliacodeprint": 201, "_julia": 201, "harmless": [201, 273], "cosmet": 201, "existing_julia_fcn": 201, "coshint": 201, "cosint": 201, "sinhint": 201, "sinint": 201, "bincoeff": 201, "logint": 201, "gammaln": 201, "octavecodeprint": 201, "_octav": 201, "recip": [201, 239], "powf": 201, "signum": 201, "rustcodeprint": 201, "_rust_cod": 201, "7_f64": 201, "_aesara": 201, "tensorvari": 201, "floatx": 201, "squeez": 201, "dim_handl": 201, "gtkmathview": 201, "widget": 201, "print_gtk": 201, "libgtkmathview": 201, "start_view": 201, "_lambdacod": 201, "accepted_latex_funct": 201, "parenthesize_sup": 201, "fold_frac_pow": 201, "fold_func_bracket": 201, "fold_short_frac": 201, "inv_trig_styl": 201, "itex": 201, "ln_notat": 201, "long_frac_ratio": 201, "mat_delim": 201, "mat_str": 201, "mul_symbol": 201, "symbol_nam": 201, "gothic_re_im": 201, "decimal_separ": 201, "diff_oper": 201, "smallmatrix": [201, 271], "amsmath": 201, "fracton": 201, "semicolon": 201, "monospac": 201, "mathtt": 201, "mathml2": 201, "mathmlprinterbas": 201, "mathmlcontentprint": 201, "mathmlpresentationprint": 201, "chapter4": 201, "_mathml_cont": 201, "mathml_tag": 201, "chapter3": 201, "_mathml_present": 201, "utf": 201, "mul_symbol_mathml_numb": 201, "xb7": 201, "print_mathml": [201, 276], "mrow": 201, "mpmathprint": 201, "fully_qualified_modul": 201, "print_python": 201, "textual": 201, "reprprint": 201, "_sympyrepr": 201, "reprifi": 201, "sympy_integ": 201, "displayhook": [201, 232], "pprint_nod": 201, "nb2": 201, "print_nod": 201, "asssumpt": 201, "determinisit": 201, "backtrac": 201, "print_tre": 201, "outputbuff": 201, "dvioption": 201, "outputtexfil": 201, "extra_preambl": 201, "latex_set": 201, "postscript": 201, "tex": 201, "eulervm": 201, "sty": 201, "debian": 201, "ubuntu": 201, "unset": [201, 213], "gimp": 201, "evinc": 201, "kdvi": 201, "xdvi": 201, "xdg": 201, "system_default_view": 201, "gracefulli": [201, 225], "generet": 201, "bytesio": 201, "usepackag": 201, "amsfont": 201, "renewcommand": 201, "popen": 201, "phidd": 201, "bitmap": 201, "split_super_sub": 201, "var_sub1__sup_sub2": 201, "assignmenterror": 201, "bitwiseand": 201, "bitwiseor": 201, "bitwisexor": 201, "precedence_valu": 201, "kroneckerproduct": 201, "negativeinfin": 201, "tensadd": [201, 227], "tensmul": [201, 227], "precedence_funct": 201, "precedence_float": 201, "precedence_fracel": 201, "precedence_integ": 201, "precedence_mul": 201, "precedence_polyel": 201, "precedence_r": 201, "precedence_unevaluatedexpr": 201, "databas": [201, 211], "pretty_use_unicod": 201, "pretty_try_use_unicod": 201, "xstr": 201, "greek_lett": 201, "digit_2txt": 201, "ONE": 201, "seven": 201, "symb_2txt": 201, "parenthesi": [201, 225], "\u2080": 201, "\u2081": 201, "\u2082": 201, "\u2083": 201, "\u2084": 201, "\u2085": 201, "\u2086": 201, "\u2087": 201, "\u2088": 201, "\u2089": 201, "\u2090": 201, "\u1d66": 201, "\u1d6a": 201, "\u2091": 201, "\u1d67": 201, "\u2095": 201, "\u1d62": 201, "\u2096": 201, "\u2097": 201, "\u2098": 201, "\u2099": 201, "\u2092": 201, "\u209a": 201, "\u1d69": 201, "\u1d63": 201, "\u1d68": 201, "\u209b": 201, "\u209c": 201, "\u1d64": 201, "\u1d65": 201, "\u2093": 201, "\u2070": 201, "\u00b9": 201, "\u00b2": 201, "\u00b3": 201, "\u2074": 201, "\u2075": 201, "\u2076": 201, "\u2077": 201, "\u2078": 201, "\u2079": 201, "\u2071": 201, "\u207f": 201, "xobj": 201, "vobj": 201, "hobj": 201, "vf": 201, "\u00bd": 201, "\u2153": 201, "\u00bc": 201, "\u2155": 201, "\u2159": 201, "\u215b": 201, "\u2154": 201, "\u2156": 201, "\u00be": 201, "\u2157": 201, "\u215c": 201, "\u2158": 201, "\u215a": 201, "\u215d": 201, "\u215e": 201, "xsym": 201, "symbologi": 201, "atoms_t": 201, "\u2102": [201, 278], "emptysequ": [201, 207], "exp1": 201, "\u2115": 201, "\u2115\u2080": 201, "\u211d": [201, 278], "symmetricdiffer": [201, 220], "pretty_atom": 201, "atom_nam": 201, "pretty_symbol": 201, "symb_nam": 201, "bold_nam": 201, "stylis": 201, "_print_meijerg": 201, "_print_hyp": 201, "jurjen": 201, "bo": 201, "hate": 201, "spammer": 201, "pietjepuk314": 201, "oc": [201, 251], "oohai": 201, "gedg": 201, "email": 201, "my": [201, 266], "mun": 201, "terminal_str": 201, "baselin": 201, "leftslash": 201, "slash": [201, 232], "paren": 201, "ifascii_nougli": 201, "line_break": 201, "ugli": 201, "terminal_width": 201, "wider": 201, "maxdepth": 201, "labelfunc": 201, "digraph": [201, 239, 276], "rankdir": [201, 276], "_sparse_": 202, "flavor": 202, "________": [202, 221, 239], "x\u2080": 202, "greatli": 202, "numbered_symbol": [202, 213, 217, 239], "postprocessor": [202, 213], "reduced_expr": [202, 213], "formalpowerseri": 203, "coeff_bel": 203, "formalpowerseriescompos": 203, "r742": 203, "comtet": 203, "loui": 203, "reidel": 203, "1974": 203, "720": [203, 217, 239], "formalpowerseriesinvers": 203, "r743": 203, "upto": [203, 208, 217], "formalpowerseriesproduct": 203, "rational_algorithm": 203, "compute_fp": 203, "hyper_algorithm": 203, "omposit": 203, "bell_seq": 203, "finiteformalpowerseri": 203, "rational_independ": 203, "ra": 203, "admiss": [203, 206], "r744": 203, "r745": 203, "simpled": 203, "exp_r": 203, "explik": 203, "hyper_r": 203, "rsolve_hypergeometr": 203, "r746": 203, "r747": 203, "solve_d": 203, "fourierseri": 204, "scalex": 204, "shiftx": 204, "sigma_approxim": 204, "gibb": 204, "bigl": 204, "bigr": 204, "lanczo": 204, "r748": 204, "gibbs_phenomenon": 204, "r749": 204, "sawtooth": 204, "bn": 204, "r750": 204, "limitseq": 206, "difference_delta": 206, "r751": 206, "differencedelta": 206, "limit_seq": [206, 208], "safeguard": 206, "r752": 206, "kauer": 206, "seqper": 207, "seqformula": 207, "seqbas": 207, "coeff_mul": 207, "find_linear_recurr": 207, "gfvar": 207, "seqadd": 207, "seqmul": 207, "_mul": 207, "recursiveseq": 207, "fib": 207, "invok": [208, 232, 233], "workhors": 208, "succ": [208, 221], "asymp": 208, "exposit": 208, "gloss": 208, "wsym": 208, "test_rewrite1": 208, "build_expression_tre": 208, "mrv_leadterm": 208, "e0": 208, "calculate_seri": 208, "limitinf": 208, "constantli": 208, "subsset": 208, "mrv_max1": 208, "mrv_max3": 208, "expsf": 208, "expsg": 208, "expsboth": 208, "o2": 208, "do_sub": 208, "r753": 208, "7048138294": 208, "7182818285": 208, "6349839002": 208, "6449340668": 208, "shank": 208, "6881721793": 208, "6931396564": 208, "6931471806": 208, "6931471805599453094172321215": 208, "r754": 208, "residue_theorem": 208, "neighborhood": 209, "rim": 209, "affirm": 209, "infimum": 209, "is_clos": 209, "closed": 209, "is_disjoint": 209, "r755": 209, "disjoint_set": 209, "is_open": 209, "is_proper_subset": 209, "is_proper_superset": 209, "left_open": 209, "is_superset": 209, "isdisjoint": 209, "issubset": 209, "issuperset": 209, "fancyset": 209, "lebesgu": 209, "r756": 209, "power_set": 209, "symmetric_differ": 209, "r757": 209, "right_open": 209, "mpi": 209, "r758": 209, "interval_": 209, "as_rel": 209, "is_left_unbound": 209, "is_right_unbound": 209, "r759": 209, "r760": 209, "union_": 209, "28set_theori": 209, "r761": 209, "intersection_": 209, "coin": [209, 221], "r762": 209, "cartesian_product": 209, "is_iter": 209, "r763": 209, "complementset": 209, "r764": 209, "disjoint_union": 209, "r765": 209, "empty_set": 209, "r766": 209, "universal_set": 209, "flambda": 209, "square_iter": 209, "base_set": 209, "cartesiancomplexregion": 209, "polarcomplexregion": 209, "unit_disk": 209, "upper_half_unit_disk": 209, "a_interv": 209, "b_interv": 209, "from_real": 209, "pset": 209, "rset": 209, "thetaset": 209, "upper_half_plan": 209, "normalize_theta_set": 209, "r767": 209, "r768": 209, "axiom_of_power_set": 209, "varnoth": 209, "sin_sol": 209, "r769": 209, "element_": 209, "tr0": 210, "tr1": 210, "tr2": 210, "tr2i": 210, "tr3": 210, "tr4": 210, "tr5": 210, "tr6": 210, "tr7": 210, "tr8": 210, "tr9": 210, "tr10": 210, "tr10i": 210, "tr11": 210, "tr12": 210, "tr12i": 210, "tr13": 210, "trmorri": 210, "tr14": 210, "tr15": 210, "tr16": 210, "tr22": 210, "tr111": 210, "ctr1": 210, "ctr4": 210, "rl1": 210, "rl2": 210, "deem": 210, "932": 210, "016": 210, "serendipit": 210, "dead": 210, "newa": 210, "lucki": 210, "sqt": 210, "_tr56": 210, "un": [210, 211], "r770": 210, "morri": 210, "27s_law": 210, "trpower": 210, "r771": 210, "list_of_trigonometric_ident": 210, "reduction_formula": 210, "ctr2": 210, "ctr3": 210, "r772": 210, "657": 210, "2478": 210, "dimitar": 210, "vlahovski": 210, "technolog": 210, "xiuqin": 210, "zhong": 210, "zhenb": 210, "zeng": 210, "1169": 210, "1177": 210, "sosmath": 210, "trig5": 210, "symplifi": [211, 213], "roach1996": 211, "roach1997": 211, "p_q": 211, "reachabl": [211, 221], "f_q": 211, "undo": [211, 277], "whenc": 211, "game": 211, "twofold": 211, "incongru": 211, "wlog": 211, "alpha_r": 211, "beta_r": 211, "blindli": 211, "messi": 211, "k_u": 211, "l_v": 211, "k_j": 211, "c_w": 211, "r_j": 211, "l_u": 211, "res_": 211, "delta_i": 211, "add_formula": 211, "addb": 211, "sum_0": 211, "test_hyperexpand": 211, "test_formula": 211, "typo": 211, "suboptim": 211, "imath": 211, "b1prime": 211, "vital": [211, 221], "308": 211, "nthroot": 212, "kroneckersimp": 212, "besselsimp": 212, "hypersimilar": 212, "epath": 212, "hongguang": [212, 257], "fu": [212, 213, 257], "unmodifi": 213, "my_measur": 213, "boolian": 213, "max_len": 213, "surd": 213, "strigonometr": 213, "399": 213, "rational_convers": 213, "base10": 213, "6004799503160655": 213, "nfloat": 213, "eq_x": 213, "max_term": 213, "polish": 213, "expand_power_bas": 213, "rcollect": 213, "analyz": [213, 226], "r773": 213, "pearc": 213, "163": 213, "6984": 213, "trigsimp_groebn": 213, "bb1": 213, "be1": 213, "bb2": 213, "be2": 213, "bei": 213, "max_it": 213, "unrad": [213, 219], "r774": 213, "ibm": 213, "fagin": 213, "symb85": 213, "r775": 213, "cybertest": 213, "opt_sub": 213, "as_unevaluated_bas": 213, "hyperegeometr": 213, "epathtool": 213, "ebnf": 213, "za": [213, 221], "xml": 213, "xpath": 213, "hasattr": [213, 235], "diophantu": 214, "mathematician": [214, 220], "citi": 214, "alexandria": 214, "father": 214, "hi": 214, "arithmetica": 214, "a_1x_1": 214, "a_2x_2": 214, "a_nx_n": 214, "bxy": 214, "cy": 214, "dxy": 214, "eyz": 214, "fzx": 214, "pythagorean": 214, "3y": 214, "4ac": 214, "9369318": 214, "920": 214, "5y": 214, "BY": 214, "t4": 214, "t5": 214, "providean": 214, "eqyptian": 214, "thilinaatsympi": 214, "andreescu": 214, "titu": 214, "andrica": 214, "dorin": 214, "cucurezeanu": 214, "ion": 214, "diophantineequ": 214, "alpertron": 214, "20160323033111": 214, "jpr2718": 214, "ax2p": 214, "permute_sign": [214, 239], "signed_permut": [214, 239], "_dict": 214, "r776": 214, "r777": 214, "pell": 214, "lmm": 214, "r778": 214, "393": 214, "13y": 214, "986": 214, "49299": 214, "1570": 214, "robertson": 214, "20160323033128": 214, "r779": 214, "nitaj": 214, "r780": 214, "numbertheori": 214, "r781": 214, "r782": 214, "676": 214, "884": 214, "fxz": 214, "3xy": 214, "r783": 214, "fxy": 214, "gyz": 214, "hxz": 214, "r784": 214, "cremona": 214, "rusin": 214, "2x_": 214, "m4": 214, "general_sum_of_squar": 214, "8m": 214, "r785": 214, "2345": 214, "proofwiki": 214, "integer_as_sum_of_three_squar": 214, "general_sum_of_even_pow": 214, "1729": 214, "stopiter": 214, "r786": 214, "44542": 214, "207": 214, "schorn": 214, "3456": 214, "1294585930293": 214, "2161": 214, "1137796": 214, "r787": 214, "evenli": 214, "var_t": 214, "r788": 214, "ur": 214, "dv": 214, "vr": 214, "r789": 214, "r790": 214, "nigel": 214, "y_0": [214, 217], "4x": [214, 220, 266], "5x": 214, "r791": 214, "r792": 214, "eprint": 214, "nottingham": 214, "uk": 214, "kvxefz87": 214, "r793": 214, "cuhk": 214, "hk": 214, "wkshum": 214, "404": 214, "r794": 214, "mordel": 214, "r795": 214, "r796": 214, "r797": 214, "r798": 214, "legrang": 214, "csusm": 214, "aitken_html": 214, "symbols_seq": 214, "dict_iter": 214, "r799": 214, "r800": 214, "inhomogen": [214, 217, 219], "r801": 214, "thue": 214, "riccati": 215, "pde": [215, 217], "deutil": [215, 217, 218], "linear_eq_to_matrix": [215, 217], "transolv": 215, "solve_rational_inequ": 216, "solve_poly_inequ": 216, "reduce_rational_inequ": 216, "reduce_abs_inequ": 216, "solve_univariate_inequ": [216, 220], "solvifi": [216, 220], "autodetect": [217, 218], "ode_ord": [217, 218, 219], "best_hint": 217, "all_integr": [217, 218], "_integr": [217, 218], "unevaluat": 217, "test_od": 217, "ode_": 217, "hintnam": [217, 218], "classify_sysod": 217, "ode_hintnam": 217, "tough": 217, "nth_linear_homogeneous_constant_coeff_integr": 217, "nth_linear": 217, "indep": 217, "indep_div_dep": 217, "undetermined_coeffici": 217, "_best": 217, "nth_algebraic_integr": 217, "separable_integr": 217, "1st_exact_integr": 217, "1st_linear_integr": 217, "bernoulli_integr": 217, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 217, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 217, "nth_linear_constant_coeff_variation_of_parameters_integr": 217, "solve_for_func": [217, 218], "homogeneouscoeffsubsdepdivindep": 217, "homogeneouscoeffsubsindepdivdep": 217, "varepsilon": 217, "genform": [217, 218], "starrett": 217, "symbolnam": 217, "startnumb": 217, "endnumb": 217, "renumb": 217, "absorpt": 217, "assist": 217, "2nd_hypergeometric_integr": 217, "almost_linear_integr": 217, "linear_coefficients_integr": 217, "separable_reduced_integr": 217, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 217, "liouville_integr": 217, "2nd_nonlinear_autonomous_conserv": 217, "2nd_nonlinear_autonomous_conserved_integr": 217, "newconst": 217, "ode_sol_simpl": 217, "trysolv": 217, "sola": 217, "solb": 217, "listofsolut": 217, "ode_problem": 217, "firstexact": 217, "exact_differential_equ": 217, "tenenbaum": 217, "dover": 217, "1963": 217, "homogeneouscoeffbest": 217, "ode_1st_homogeneous_coeff_best_integr": 217, "homogeneous_differential_equ": 217, "firstlinear": 217, "linear_differential_equ": 217, "first_order_equ": 217, "rationalriccati": 217, "atleast": 217, "riccati_equ": 217, "thieu": 217, "vo": 217, "www3": [217, 246], "risc_5387": 217, "phdthesisthieu": 217, "secondlinearairi": 217, "secondlinearbessel": 217, "math24": 217, "bernoulli_differential_equ": 217, "goldstein": 217, "braun": 217, "maplesoft": 217, "aspx": 217, "odeadvisor": 217, "riccatispeci": 217, "__________________": 217, "eqworld": 217, "ipmnet": 217, "ru": 217, "ode0106": 217, "ode0123": 217, "nthlinearconstantcoeffhomogen": 217, "nth_linear_constant_coeff_homogeneous_integr": 217, "nonhomogeneous_equation_with_constant_coeffici": 217, "nthlinearconstantcoeffundeterminedcoeffici": 217, "method_of_undetermined_coeffici": 217, "221": 217, "nthlinearconstantcoeffvariationofparamet": 217, "cramer": 217, "variation_of_paramet": 217, "planetmath": 217, "variationofparamet": 217, "nthlineareulereqhomogen": 217, "equidimension": 217, "nth_linear_euler_eq_homogeneous_integr": 217, "sollist": 217, "93euler_equ": 217, "bender": 217, "orszag": 217, "scientist": 217, "nthlineareulereqnonhomogeneousvariationofparamet": 217, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 217, "nthalgebra": 217, "nthorderreduc": 217, "caught": 217, "fault": 217, "almostlinear": 217, "first_linear": 217, "joel": 217, "mose": 217, "stormi": 217, "decad": 217, "august": [217, 236], "558": 217, "linearcoeffici": 217, "separablereduc": 217, "liegroup": 217, "secondhypergeometr": 217, "2f1": 217, "1f1": 217, "0f1": 217, "liouvillian": 217, "pfq": 217, "chan": 217, "cheb": 217, "terrab": 217, "ode_1st_power_seri": 217, "travi": [217, 232], "walker": 217, "ode_2nd_power_series_ordinari": 217, "lamar": 217, "seriessolut": 217, "simmon": 217, "176": 217, "ode_2nd_power_series_regular": 217, "lie_heuristic_abaco1_simpl": 217, "duart": 217, "da": 217, "mota": 217, "lie_heuristic_abaco1_product": 217, "roch": 217, "lie_heuristic_bivari": 217, "329": 217, "lie_heuristic_chi": 217, "lie_heuristic_abaco2_similar": 217, "lie_heuristic_function_sum": 217, "lie_heuristic_abaco2_unique_unknown": 217, "lie_heuristic_abaco2_unique_gener": 217, "lie_heuristic_linear": 217, "gy": 217, "bh": 217, "impract": 217, "val_inf": 217, "ybar": 217, "numa": 217, "dena": 217, "numi": 217, "deni": 217, "sol1": 217, "sol2": 217, "part_sol": 217, "haaheim": 217, "gensol": 217, "_linear_2eq_order1_type6": 217, "_linear_2eq_order1_type7": 217, "fgp": 217, "ag": 217, "bg": 217, "linear_ode_to_matrix": 217, "odeordererror": 217, "odenonlinearerror": 217, "eqs_mat": 217, "r802": 217, "matrix_differential_equ": 217, "canonical_od": 217, "canonical_eq": 217, "canonical_system": 217, "linodesolve_typ": 217, "type1": 217, "type2": 217, "type3": 217, "type4": 217, "type5": 217, "type6": 217, "type_of_equ": 217, "a_t": 217, "a_non_commut": 217, "matrix_exp_jordan_form": 217, "expj": 217, "matrix_exp": 217, "defect": 217, "p_invers": 217, "r803": 217, "defective_matrix": 217, "r804": 217, "r805": 217, "jordan_normal_form": 217, "comupt": 217, "r806": 217, "r807": 217, "matrix_exponenti": 217, "follw": 217, "antiderv": 217, "subscheck": 217, "system_info": 217, "sol_vector": 217, "sol_vector_evalu": 217, "_nonlinear_2eq_order1_type1": 217, "_nonlinear_2eq_order1_type2": 217, "_nonlinear_2eq_order1_type3": 217, "autonom": 217, "_nonlinear_2eq_order1_type4": 217, "_nonlinear_2eq_order1_type5": 217, "clairaut": 217, "envelop": 217, "_nonlinear_3eq_order1_type1": 217, "enspac": [217, 220], "sysod": 217, "sode0401": 217, "_nonlinear_3eq_order1_type2": 217, "sode0402": 217, "_nonlinear_3eq_order1_type3": 217, "sode0404": 217, "_nonlinear_3eq_order1_type4": 217, "sode0405": 217, "_nonlinear_3eq_order1_type5": 217, "sode0406": 217, "_handle_integr": 217, "gather": 217, "unhind": 217, "wolphramalpha": 217, "detool": 217, "hint_integr": 217, "alphanumer": 217, "hinder": 217, "matching_hint": 217, "matchdict": 217, "1st_homogeneous_coeff": 217, "your_hint": 217, "xfail": [217, 230, 232], "uxt": 218, "uxi": 218, "solvefun": 218, "test_pd": 218, "pde_hintnam": 218, "ux": 218, "allhint": 218, "1st_linear_constant_coeff_homogen": 218, "_preprocess": 218, "inabl": 218, "_xi_1": 218, "viktor": 218, "grigoryan": 218, "124a": 218, "substack": 218, "1st_linear_constant_coeff_integr": 218, "du": 218, "inspir": [218, 273], "pde_hint": 218, "checksol": 219, "ect": 219, "attain": [219, 250], "star": 219, "052": 219, "cov": 219, "pval": 219, "xval": 219, "rsolv": 219, "solve_linear": 219, "solve_linear_system": 219, "overdetermin": [219, 220], "msymbol": 219, "degener": [219, 220], "solve_linear_system_lu": 219, "solve_undetermined_coeff": 219, "equ": 219, "19287309935246": 219, "27844411169911": 219, "73908513321516064165531208767387340401341175890076": 219, "steep": 219, "39267e": 219, "1684e": 219, "588469032184": 219, "315": 219, "730061685774": 219, "46792545969349058": 219, "inconclus": 219, "init": 219, "dissimilar": 219, "v_0": 219, "n_m": 219, "v_m": 219, "rsolve_poli": 219, "rsolve_ratio": 219, "r808": 219, "levelt": 219, "290": [219, 248], "296": 219, "r809": 219, "r810": 219, "revis": 219, "r811": 219, "289": 219, "alembertian": 219, "r812": 219, "r813": 219, "polysi": 219, "solve_triangul": 219, "kalkbrenn": 219, "patrizia": 219, "teo": 219, "aaecc": 219, "conditionset": [220, 221, 278], "productset": 220, "imageset": [220, 278], "complexregion": 220, "uncount": 220, "bizarr": 220, "her": 220, "sol_f": 220, "solveset_r": 220, "solveset_complex": 220, "methodologi": [220, 270], "_solve_real_trig": 220, "invert_r": 220, "invert_complex": 220, "_solve_rad": 220, "_solve_ab": 220, "_solve_as_r": 220, "_solve_as_poly_r": 220, "_solve_as_poly_complex": 220, "_solve_as_poli": 220, "gsoc": 220, "2014": [220, 221], "iamit": 220, "2948": 220, "6659": 220, "7523": 220, "sibx0afl3q": 220, "9696": 220, "27s_theorem": 220, "inftyright": 220, "nright": 220, "0right": 220, "domain_check": 220, "3z": 220, "9z": 220, "nonlinearerror": 220, "4z": 220, "cccc": 220, "eq3": 220, "eq4": 220, "391": 220, "_solve_system": 220, "_solve_using_known_valu": 220, "_transolv": 220, "_tsolv": 220, "tsolv": 220, "outright": 220, "tractabl": 220, "interf": 220, "add_typ": 220, "_is_exponenti": 220, "new_eq": 220, "_solve_exponenti": 220, "_is_class": 220, "_solve_class": 220, "_solve_expo": 220, "9x": 220, "solve_expo": 220, "log_b": 220, "_solve_logarithm": 220, "solve_log": 220, "_is_logarithm": 220, "prebuilt": 221, "finiterv": 221, "varianc": 221, "dice": 221, "continuousrv": 221, "continuousdistributionhandmad": 221, "dist": 221, "discreterv": 221, "discretedistributionhandmad": 221, "pmf": 221, "finitedistributionhandmad": 221, "discreteuniform": 221, "randomsymbol": 221, "r814": 221, "discrete_uniform_distribut": 221, "r815": 221, "discreteuniformdistribut": 221, "d6": 221, "diedistribut": 221, "toss": 221, "r816": 221, "bernoulli_distribut": 221, "r817": 221, "bernoullidistribut": 221, "numeb": 221, "unfair": 221, "r818": 221, "coin_flip": 221, "binomialdistribut": 221, "r819": 221, "binomial_distribut": 221, "r820": 221, "betabinomi": 221, "r821": 221, "r822": 221, "betabinomialdistribut": 221, "popul": 221, "marbl": 221, "r823": 221, "hypergeometric_distribut": 221, "r824": 221, "hypergeometricdistribut": 221, "700000000000000": 221, "r825": 221, "rademacher_distribut": 221, "r826": 221, "geometric_distribut": 221, "r827": 221, "geometricdistribut": 221, "r828": 221, "hermite_distribut": 221, "poisson": 221, "r829": 221, "poisson_distribut": 221, "r830": 221, "poissondistribut": 221, "r831": 221, "logarithmic_distribut": 221, "r832": 221, "logarithmicdistribut": 221, "negativebinomi": 221, "r833": 221, "negative_binomial_distribut": 221, "r834": 221, "negativebinomialdistribut": 221, "skellam": 221, "mu1": 221, "mu2": 221, "mu_1": 221, "mu_2": 221, "i_k": 221, "r835": 221, "skellam_distribut": 221, "yulesimon": 221, "yule": 221, "simon": 221, "r836": 221, "93simon_distribut": 221, "8100": 221, "r837": 221, "zeta_distribut": 221, "cdf": 221, "r838": 221, "arcsine_distribut": 221, "benini": 221, "r839": 221, "benini_distribut": 221, "r840": 221, "v8": 221, "beninidistribut": 221, "r841": 221, "beta_distribut": 221, "r842": 221, "betadistribut": 221, "betanoncentr": 221, "noncentr": 221, "r843": 221, "noncentral_beta_distribut": 221, "r844": 221, "noncentralbetadistribut": 221, "betaprim": 221, "r845": 221, "beta_prime_distribut": 221, "r846": 221, "betaprimedistribut": 221, "boundedpareto": 221, "pareto": 221, "r847": 221, "pareto_distribut": 221, "bounded_pareto_distribut": 221, "r848": 221, "cauchy_distribut": 221, "r849": 221, "cauchydistribut": 221, "r850": 221, "chi_distribut": 221, "r851": 221, "chidistribut": 221, "chinoncentr": 221, "r852": 221, "noncentral_chi_distribut": 221, "chisquar": 221, "r853": 221, "chi_squared_distribut": 221, "r854": 221, "squareddistribut": 221, "dagum": 221, "r855": 221, "dagum_distribut": 221, "erlang": 221, "r856": 221, "erlang_distribut": 221, "r857": 221, "erlangdistribut": 221, "exgaussian": 221, "emg": 221, "r858": 221, "exponentially_modified_gaussian_distribut": 221, "quantil": 221, "r859": 221, "exponential_distribut": 221, "r860": 221, "exponentialdistribut": 221, "fdistribut": 221, "______________________________": 221, "r861": 221, "r862": 221, "fisherz": 221, "fisher": 221, "2d_1": 221, "d_1z": 221, "d_1e": 221, "r863": 221, "27s_z": 221, "r864": 221, "fishersz": 221, "frechet": 221, "r865": 221, "a9chet_distribut": 221, "r866": 221, "gamma_distribut": 221, "r867": 221, "gammadistribut": 221, "gammainvers": 221, "r868": 221, "gompertz": 221, "r869": 221, "gompertz_distribut": 221, "gumbel": 221, "dfrac": 221, "r870": 221, "gumbeldistribut": 221, "r871": 221, "gumbel_distribut": 221, "r872": 221, "mathwav": 221, "easyfit": 221, "gumbel_max": 221, "r873": 221, "gumbel_min": 221, "kumaraswami": 221, "r874": 221, "kumaraswamy_distribut": 221, "r875": 221, "laplace_distribut": 221, "r876": 221, "laplacedistribut": 221, "r877": 221, "a9vy_distribut": 221, "r878": 221, "levydistribut": 221, "logist": 221, "r879": 221, "logistic_distribut": 221, "r880": 221, "logisticdistribut": 221, "loglogist": 221, "unimod": 221, "r881": 221, "lognorm": 221, "r882": 221, "r883": 221, "lognormaldistribut": 221, "lomax": 221, "r884": 221, "lomax_distribut": 221, "maxwel": 221, "2a": 221, "r885": 221, "maxwell_distribut": 221, "r886": 221, "maxwelldistribut": 221, "moyal": 221, "r887": 221, "moyaldistribut": 221, "r888": 221, "rice": 221, "dobelman": 221, "textfil": 221, "distributionshandbook": 221, "nakagami": 221, "r889": 221, "nakagami_distribut": 221, "marginal_distribut": 221, "r890": 221, "normal_distribut": 221, "r891": 221, "normaldistributionfunct": 221, "xm": 221, "x_m": 221, "r892": 221, "r893": 221, "paretodistribut": 221, "powerfunct": 221, "paramat": 221, "r894": 221, "power_func": 221, "quadraticu": 221, "r895": 221, "quadratic_distribut": 221, "raisedcosin": 221, "r896": 221, "raised_cosine_distribut": 221, "r897": 221, "rayleigh_distribut": 221, "r898": 221, "rayleighdistribut": 221, "r899": 221, "reciprocal_distribut": 221, "studentt": 221, "r900": 221, "student_t": 221, "r901": 221, "studentst": 221, "shiftedgompertz": 221, "r902": 221, "shifted_gompertz_distribut": 221, "r903": 221, "trapezoidal_distribut": 221, "r904": 221, "triangular_distribut": 221, "r905": 221, "triangulardistribut": 221, "r906": 221, "uniform_distribution_": 221, "28continu": 221, "r907": 221, "uniformdistribut": 221, "uniformsum": 221, "irwin": 221, "r908": 221, "uniform_sum_distribut": 221, "r909": 221, "uniformsumdistribut": 221, "vonmis": 221, "mise": 221, "i_0": 221, "r910": 221, "von_mises_distribut": 221, "r911": 221, "vonmisesdistribut": 221, "wald": 221, "gaussianinvers": 221, "r912": 221, "inverse_gaussian_distribut": 221, "r913": 221, "inversegaussiandistribut": 221, "weibul": 221, "geq0": 221, "r914": 221, "weibull_distribut": 221, "r915": 221, "weibulldistribut": 221, "wignersemicircl": 221, "semicircl": 221, "frac2": 221, "r916": 221, "wigner_semicircle_distribut": 221, "r917": 221, "wignerssemicirclelaw": 221, "jointrv": 221, "_set": 221, "multivariatenorm": 221, "noninvert": 221, "ob": 221, "r918": 221, "multivariate_normal_distribut": 221, "multivariatelaplac": 221, "r919": 221, "multivariate_laplace_distribut": 221, "generalizedmultivariateloggamma": 221, "joint_rv_typ": 221, "gd": 221, "y_3": 221, "gmvlg": 221, "generalizedmultivariateloggammaomega": 221, "r920": 221, "generalized_multivariate_log": 221, "r921": 221, "234137346_on_a_multivariate_log": 221, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 221, "correl": 221, "gmvlgo": 221, "r922": 221, "r923": 221, "r924": 221, "multinomial_distribut": 221, "r925": 221, "multinomialdistribut": 221, "multivariatebeta": 221, "r926": 221, "dirichlet_distribut": 221, "r927": 221, "dirichletdistribut": 221, "multivariateewen": 221, "ewen": 221, "r928": 221, "27s_sampling_formula": 221, "r929": 221, "rutger": 221, "hcrane": 221, "sts529": 221, "multivariatet": 221, "negativemultinomi": 221, "n_c": 221, "r930": 221, "negative_multinomial_distribut": 221, "r931": 221, "normalgamma": 221, "r932": 221, "discretemarkovchain": 221, "state_spac": 221, "trans_prob": 221, "markov": 221, "characteris": 221, "transitionmatrixof": 221, "transition_prob": 221, "sunni": 221, "cloudi": 221, "raini": 221, "randomindexedsymbol": 221, "409": 221, "6963328": 221, "3096": 221, "query_gt": 221, "64705": 221, "r933": 221, "markov_chain": 221, "time_markov_chain": 221, "r934": 221, "dartmouth": 221, "teaching_aid": 221, "books_articl": 221, "probability_book": 221, "chapter11": 221, "canonical_form": 221, "transient": 221, "p_new": 221, "new_matrix": 221, "communication_class": 221, "r935": 221, "onlinelibrari": 221, "wilei": 221, "1002": 221, "9780470316887": 221, "app1": 221, "r936": 221, "columbia": 221, "ww2040": 221, "6711f12": 221, "lect1023big": 221, "is_recurr": 221, "tarjan": [221, 239], "r937": 221, "4701sum07": 221, "4701": 221, "mcii": 221, "r938": 221, "ceca": 221, "clemson": 221, "shierd": 221, "shier": 221, "r939": 221, "ujcont": 221, "uj": 221, "7506": 221, "content1": 221, "r940": 221, "econ": 221, "dtmc": 221, "reccur": 221, "r941": 221, "absorbing_markov_chain": 221, "r942": 221, "brandei": 221, "igusa": 221, "math56as08": 221, "math56a_s08_notes015": 221, "fixed_row_vector": 221, "stationary_distribut": 221, "fundamental_matrix": 221, "r943": 221, "lip": 221, "limiting_distribut": 221, "condition_set": 221, "wm": 221, "r944": 221, "probabilitycours": 221, "11_2_6_stationary_and_limiting_distribut": 221, "r945": 221, "galton": 221, "uchicago": 221, "yibi": 221, "stat317": 221, "lecture4_6up": 221, "continuousmarkovchain": 221, "gen_mat": 221, "generator_matrix": 221, "45279": 221, "58602": 221, "37933": 221, "34211": 221, "7143": 221, "4002723175": 221, "6832579186": 221, "r946": 221, "r947": 221, "biu": 221, "il": 221, "amirgi": 221, "ctmcnote": 221, "bernoulliprocess": 221, "processs": 221, "joint_distribut": 221, "jointdistributionhandmad": 221, "r948": 221, "bernoulli_process": 221, "r949": 221, "mathc": 221, "clarku": 221, "djoyc": 221, "ma217": 221, "given_condit": 221, "poissonprocess": 221, "648": 221, "r950": 221, "11_0_0_intro": 221, "r951": 221, "poisson_point_process": 221, "wiener": 221, "brownian": 221, "scottish": 221, "botanist": 221, "r952": 221, "11_4_0_brownian_motion_wiener_process": 221, "r953": 221, "wiener_process": 221, "gammaprocess": 221, "jump": [221, 277], "472": 221, "r954": 221, "gamma_process": 221, "matrixgamma": 221, "scale_matrix": 221, "r955": 221, "matrix_gamma_distribut": 221, "wishart": 221, "r956": 221, "wishart_distribut": 221, "matrixnorm": 221, "location_matrix": 221, "scale_matrix_1": 221, "scale_matrix_2": 221, "r957": 221, "matrix_normal_distribut": 221, "compound_rv": 221, "compounddistribut": 221, "crv_type": 221, "r958": 221, "compound_probability_distribut": 221, "numsampl": 221, "evaluate_integr": 221, "r959": 221, "entropy_": 221, "information_theori": 221, "r960": 221, "crmarsh": 221, "charles_marsh_continuous_entropi": 221, "r961": 221, "uconn": 221, "kconrad": 221, "blurb": 221, "entropypost": 221, "arg1": 221, "arg2": 221, "cexpr": 221, "coskew": 221, "sigma_": 221, "r962": 221, "r963": 221, "probability_distribut": 221, "randomst": 221, "die_rol": 221, "samp": 221, "pspace": 221, "samp_list": 221, "sam": 221, "42519758": 221, "40207856": 221, "94991743": 221, "85819627": 221, "83403519": 221, "9412172": 221, "85768055": 221, "38954165": 221, "11163337": 221, "3176591": 221, "79115232": 221, "63232916": 221, "01747268": 221, "96716083": 221, "sampling_p": 221, "sampling_": 221, "factorial_mo": 221, "r964": 221, "r965": 221, "factorialmo": 221, "kurtosi": 221, "outlier": 221, "sigma_x": 221, "r966": 221, "r967": 221, "asymmetri": 221, "pearson": 221, "sampling_dens": 221, "centralmo": 221, "cmoment": 221, "expectationmatrix": 221, "randommatrixsymbol": 221, "n11": 221, "n12": 221, "n21": 221, "n22": 221, "variancematrix": 221, "crosscovariancematrix": 221, "randomdomain": 221, "singledomain": 221, "singlepspac": 221, "productdomain": 221, "productpspac": 221, "conditionaldomain": 221, "frv": 221, "finitedomain": 221, "finitepspac": 221, "crv": 221, "continuousdomain": 221, "continuouspspac": 221, "diepspac": 221, "singlefinitepspac": 221, "normalpspac": 221, "singlecontinuouspspac": 221, "frv_type": 221, "randomvari": 221, "tactic": 221, "random_symbol": 221, "rs_swap": 221, "pspace1": 221, "pspace2": 221, "immutabledensendimarrai": 222, "tomatrix": 222, "j_m": 222, "i_a": 222, "i_b": 222, "sum_k": 222, "tensorcontract": [222, 223], "tensordiagon": [222, 223], "derive_by_arrai": 222, "sum_m": 222, "immutablesparsendimarrai": 222, "mutabledensendimarrai": 222, "mutablesparsendimarrai": 222, "index_order_old": 222, "index_order_new": 222, "cab": 222, "contraction_ax": 222, "diagonal_ax": 222, "arraycontract": 223, "arraydiagon": 223, "arraysymbol": 223, "convert_indexed_to_arrai": 223, "arrayadd": 223, "convert_matrix_to_arrai": 223, "convert_array_to_matrix": 223, "expr_tr": 223, "array_der": 223, "index_method": 225, "get_contraction_structur": [225, 226], "deepest": 225, "nested_contract": 225, "get_indic": [225, 226, 227, 228], "indexconformanceexcept": 225, "______": 226, "stem": 226, "dim1": 226, "dim2": 226, "qwerti": 226, "a_ij": 226, "b_ij": 226, "syntact": 226, "a_real": 226, "c_inherit": 226, "c_explicit": 226, "unrol": 226, "tensorindextyp": [227, 228], "eps_dim": 227, "metric_nam": 227, "su": 227, "lorentz": 227, "tensor_index_typ": 227, "is_up": 227, "tensor_inde_typ": 227, "typ": 227, "tensorhead": [227, 228], "index_typ": 227, "tensorsymmetri": 227, "monoterm": 227, "_tensormanag": 227, "set_comm": 227, "asym2": 227, "fully_symmetr": 227, "tensori": [227, 228], "e_z": 227, "no_symmetri": 227, "p_x": 227, "p_y": 227, "p_z": 227, "ipos1": 227, "ipos2": 227, "icomp1": 227, "icomp2": 227, "nameless": 227, "replacement_dict": 227, "free_arg": 227, "addend": 227, "canon_bp": 227, "contract_metr": 227, "contract_al": 227, "ipo": 227, "icomp": 227, "nonrep": 227, "dum": 227, "ext_rank": 227, "is_canon_bp": 227, "m0": 227, "get_free_indic": [227, 228], "perm2tensor": 227, "tid": 227, "sorted_compon": 227, "riemann_cyclic_replac": 227, "riemann_cycl": 227, "cadabra": 227, "multiterm": 227, "bianchi": 227, "sym2": 227, "direct_product": 227, "monotorem": 227, "tableaux": 227, "tensortyp": 227, "repetit": [227, 239], "tensormanag": 227, "comm_i2symbol": 227, "comm_symbols2i": 227, "get_comm": 227, "gcomm": 227, "ghcomm": 227, "toper": 228, "partialderiv": 228, "valenc": 228, "uncontract": 228, "compa": 228, "compb": 228, "derivand": 228, "xpass": [230, 232], "nocache_fail": 230, "expectedexcept": 230, "assertionerror": 230, "exceptioninfo": 230, "abort": 230, "9999": 230, "warningcl": [230, 237], "test_stacklevel": 230, "randtest": 231, "portabl": [232, 233], "pytestreport": 232, "force_color": 232, "readlin": 232, "sympydoctestfind": 232, "doctestpars": 232, "exclude_empti": 232, "sympydoctestrunn": 232, "checker": 232, "optionflag": 232, "5140": 232, "doctestrunn": 232, "clear_glob": 232, "writer": 232, "garbag": 232, "check_output": 232, "report_": 232, "sympyoutputcheck": 232, "outputcheck": 232, "stdlib": 232, "testrunn": 232, "sympytestresult": 232, "convert_to_native_path": 232, "lst": 232, "blacklist": 232, "get_sympy_dir": 232, "raise_on_deprec": 232, "deprecationwarn": [232, 237], "run_all_test": 232, "test_arg": 232, "test_kwarg": 232, "doctest_arg": 232, "doctest_kwarg": 232, "examples_arg": 232, "examples_kwarg": 232, "run_in_subprocess_with_hash_random": 232, "function_kwarg": 232, "virtualenv": 232, "pythonhashse": 232, "_test": 232, "split_list": 232, "sympytestfil": 232, "module_rel": 232, "extraglob": 232, "raise_on_error": 232, "basenam": [232, 233, 234], "slate": 232, "dont_accept_true_for_1": 232, "dont_accept_blanklin": 232, "normalize_whitespac": 232, "ellipsi": 232, "ignore_exception_detail": 232, "report_udiff": 232, "report_cdiff": 232, "report_ndiff": 232, "report_only_first_failur": 232, "mortem": 232, "tomfooleri": 232, "testmod": 232, "tester": 232, "fiddl": [232, 277], "timeout": 232, "keyboardinterrupt": 232, "interrupt": 232, "_basic": 232, "kw": 232, "test_equ": 232, "pdb": 232, "pipe": 232, "time_bal": 232, "tandem": 233, "matvec": 233, "codewrapp": 233, "distutil": 233, "fwrap": 233, "swig": 233, "binary_cal": 233, "22925376": 233, "25165824": 233, "_imp_": [233, 240], "filepath": 233, "cythoncodewrapp": 233, "dump_pyx": 233, "dummywrapp": 233, "f2pycodewrapp": 233, "ufuncifycodewrapp": 233, "dump_c": [233, 234], "funcnam": 233, "code_gen": [233, 234], "argument_tupl": 233, "include_dir": 233, "library_dir": 233, "extra_compile_arg": 233, "extra_link_arg": 233, "symfunc": [233, 240], "funtion_nam": 233, "ndimension": 233, "f_fortran": 233, "f_cython": 233, "r968": 233, "fortran77": 234, "fortran90": 234, "julia": [234, 264], "rust": [234, 264], "mileston": 234, "unsurmount": 234, "pyf": 234, "inputoutput": 234, "tcc": 234, "libtcc": 234, "date": 234, "hostnam": 234, "sha1": 234, "ccodegen": 234, "preprocessor_stat": 234, "dump_h": 234, "guard": 234, "get_prototyp": 234, "codegenerror": 234, "function_prototyp": 234, "dump_cod": 234, "cname": 234, "fname": 234, "pynam": 234, "jlname": 234, "octnam": 234, "rsname": 234, "fcodegen": 234, "f90": 234, "dump_f95": 234, "get_interfac": 234, "juliacodegen": 234, "dump_jl": 234, "octavecodegen": 234, "dump_m": 234, "returnvalu": 234, "destin": 234, "local_var": 234, "result_vari": 234, "ot": 234, "unnam": 234, "rustcodegen": 234, "dump_r": 234, "f_result": 234, "myfcn": 234, "fcn2": 234, "myfcn_result": 234, "void": 234, "get_default_datatyp": 234, "complex_allow": 234, "agnost": 234, "conserve_mpmath_dp": 235, "doctest_depends_on": 235, "disable_view": 235, "python_vers": 235, "memoize_properti": 235, "propfunc": 235, "no_attrs_in_subclass": 235, "__all__": 235, "some_funct": 235, "thread": 235, "xthread": 235, "threaded_factori": 235, "use_add": 235, "multiset_partitions_taocp": 236, "visitor": 236, "pstack": 236, "lpart": 236, "topmost": 236, "partcompon": 236, "peek": [236, 277], "unpredict": 236, "list_visitor": 236, "abb": [236, 239], "factoring_visitor": 236, "multisetpartitiontravers": 236, "aocp": 236, "count_partit": 236, "127750": 236, "686": 236, "4a": 236, "factorisatio": 236, "oppenheim": 236, "numerorum": 236, "canfield": 236, "erdo": 236, "OF": 236, "yorgei": 236, "monad": 236, "persist": 236, "288716": 236, "memoiz": [236, 238, 264], "dramat": 236, "hypothet": 236, "borrow": 236, "coalesc": 236, "_rang": 236, "stretch": 236, "brain": 236, "histogram": 236, "enum_al": 236, "enum_larg": 236, "enum_rang": 236, "enum_smal": 236, "ub": 236, "parti": 237, "catch_warn": 237, "simplefilt": 237, "dedent": [237, 242], "enum": [238, 264], "pkgdata": [238, 264], "kbin": 239, "partion": 239, "ordered_partit": 239, "bcd": 239, "notiter": 239, "binary_partit": 239, "r969": 239, "taocp": 239, "nx": 239, "common_prefix": 239, "common_suffix": 239, "unhash": 239, "r970": 239, "connected_component_": 239, "graph_theori": 239, "r971": 239, "27s_strongly_connected_components_algorithm": 239, "dict_merg": 239, "filter_symbol": 239, "myop": 239, "kog": 239, "informatik": 239, "hamburg": 239, "mein": 239, "python_trick": 239, "neighbor": 239, "xxxxxx": 239, "xxxx": 239, "r972": 239, "method_ring": 239, "r973": 239, "4856615": 239, "4857018": 239, "r974": 239, "programminggeek": 239, "r975": 239, "steinhau": 239, "93johnson": 239, "93trotter_algorithm": 239, "r976": 239, "involut": 239, "eco": 239, "vajnovszki": 239, "dmtc": 239, "generate_involut": 239, "r977": 239, "permutationinvolut": 239, "generate_oriented_forest": 239, "forest": 239, "acycl": 239, "r978": 239, "beyer": 239, "hedetniemi": 239, "novemb": 239, "r979": 239, "1633833": 239, "has_dup": 239, "has_varieti": 239, "iproduct": 239, "abcbb": 239, "is_sequ": 239, "generatortyp": 239, "_iter": 239, "ordered_flag": 239, "least_rot": 239, "rotate_left": 239, "r980": 239, "lexicographically_minimal_string_rot": 239, "minlex": 239, "acb": 239, "11010011000": 239, "00011010011": 239, "00011001011": 239, "aaa": 239, "abi": 239, "bby": 239, "abracadabra": 239, "banana": 239, "multiset_derang": 239, "uniq": 239, "1233": 239, "3312": 239, "3321": 239, "aba": 239, "baa": 239, "bead": 239, "ooo": 239, "r981": 239, "r982": 239, "jeromekelleh": 239, "r983": 239, "jerom": 239, "kelleh": 239, "barri": 239, "sullivan": 239, "0909": 239, "2331v2": 239, "r984": 239, "activest": 239, "218332": 239, "random_derang": 239, "reseed": 239, "templat": 239, "rotate_right": 239, "roundrobin": 239, "ef": 239, "credit": [239, 262], "sakki": 239, "keyfunc": 239, "subgraph": 239, "r985": 239, "r986": 239, "longest": 239, "r987": 239, "unflatten": 239, "afunc": 240, "lam_f": 240, "lambdastr": 240, "dummifi": 240, "use_imp": 240, "custom_sin": 240, "38177329": 240, "49315059": 240, "8414709848078965": 240, "eager": 240, "enable_eager_execut": 240, "eagertensor": 240, "__class__": 240, "placehold": 240, "user_guid": 240, "runtimewarn": 240, "sin_cos_sympi": 240, "sin_co": 240, "sin_cos_numpi": 240, "38177329068": 240, "module_dictionari": 240, "_lambdifygener": 240, "__globals__": 240, "lambdaprint": [240, 264], "90929743": [240, 266], "assoc_recurrence_memo": 241, "base_seq": 241, "memo": 241, "pn0": 241, "recurrence_memo": 241, "specfun": 241, "__index__": 242, "sanit": 242, "99999999999999991611392": 242, "debug_decor": 242, "fillded": 242, "strline": 242, "rawlin": 242, "find_execut": 242, "pathsep": 242, "pastabl": 242, "bee": 242, "spamham": 242, "sha": 242, "spam": 242, "egg": 242, "md5": 242, "eggsham": 242, "r988": 242, "6116978": 242, "roken": 242, "deletechar": 242, "multicharact": 242, "oldchar": 242, "newchar": 242, "acquir": 243, "getresourc": 243, "pkgname": 243, "pkgpath": 243, "dirnam": 243, "normpath": 243, "rb": 243, "__loader__": 243, "stringio": 243, "get_resourc": 243, "ioerror": 243, "mydata": 243, "mypkgdata": 243, "jpg": 243, "get_class": 244, "lookup_view": 244, "get_mod_func": 244, "callback": 244, "timeutil": 245, "coordsysrect": 246, "rotation_matrix": [246, 247, 250], "vector_nam": 246, "variable_nam": [246, 252], "latex_vect": 246, "pretty_vect": 246, "latex_scalar": 246, "pretty_scalar": 246, "new_system": 246, "create_new": [246, 250], "transformation_to_par": 246, "transformation_from_par": 246, "locate_new": [246, 248, 249, 250, 251, 252], "position_wrt": [246, 249, 250, 251], "orient_new": [246, 247], "axisorient": [246, 250, 253], "axis_orient": [246, 250], "bodyorient": [246, 250, 253], "body_orient": [246, 247, 250], "spaceorient": [246, 250, 253], "space_orient": [246, 247], "quaternionorient": [246, 250, 253], "q_orient": [246, 247], "orient_new_axi": [246, 248, 250], "orient_new_bodi": [246, 250], "angle1": [246, 247], "angle2": [246, 247], "angle3": [246, 247], "euler_angl": [246, 247], "orient_new_quaternion": [246, 250], "orient_new_spac": [246, 250], "coordsyrect": 246, "v_a": 246, "v_b": 246, "scalar_map": 246, "basevector": [246, 249, 250], "delop": [246, 251, 252], "r989": 246, "r990": 246, "basedyad": [246, 249], "second_system": 246, "deloper": [246, 253], "curl": [246, 253, 255], "parabola": 246, "rational_parametr": 246, "singular_point": 246, "regular_point": 246, "reg_point": 246, "implict": 246, "cubic_curv": 246, "calulc": 246, "hoffmann": 246, "purdu": 246, "lib": [246, 264], "cgi": 246, "viewcont": 246, "1827": 246, "cstech": 246, "erik": 246, "hillgart": 246, "diploma": 246, "linz": 246, "universitat": 246, "availa": 246, "risc_1355": 246, "20point": 246, "20on": 246, "20conic": 246, "semispher": [246, 255], "coordsys3d": [247, 248, 249, 251, 252, 253, 255], "axis_orienter1": 247, "axis_orienter2": 247, "axis_orienter3": 247, "body_orienter1": 247, "body_orienter2": 247, "body_orienter3": 247, "system2": 248, "parametricregion": [248, 253, 255], "implicitregion": [248, 253, 255], "essenc": 249, "vectormul": 249, "vectoradd": 249, "ofcours": 249, "vectorzero": 249, "expressli": 249, "express_coordin": [249, 250], "dyadicmul": 249, "dyadicadd": 249, "cleanest": 250, "orient_new_": 250, "basescalar": [250, 252], "oabc": 251, "oa": 251, "pq": 251, "sr": 251, "wikidel": 251, "ffield": 251, "gradient_field": 252, "instantan": 252, "directional_deriv": 252, "lame": 252, "quadrilater": 253, "flux": 253, "parametricintegr": 253, "matrix_to_vector": 253, "vector_integr": [253, 255], "dyadicproduct": 253, "quantifi": 254, "throughtout": 254, "necesssari": 255, "param_circl": 255, "implicit_circl": 255, "obextj": 255, "solidspher": 255, "lamina": 255, "\ud835\udc45": 255, "cylind": 255, "vectorfield": 255, "hemispher": 255, "top_fac": 255, "bottom_fac": 255, "27_theorem": 255, "cone": 255, "divergence_theorem": 255, "12288": 255, "subcategori": 256, "cnode": 258, "cxxnode": 258, "fnode": 258, "pyutil": 258, "cutil": 258, "futil": 258, "ecm": 261, "copyright": 262, "truss": 262, "pappu": 263, "hexagon": 263, "prettyprint": 264, "rcodeprint": 264, "smt": 264, "javascript": [264, 276], "gtk": 264, "mathmlprint": 264, "pythoncodeprint": 264, "pythonprint": 264, "dotprint": [264, 272, 276], "str_expr": 266, "82842712474619": 266, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 266, "0874989834394464": 266, "roundoff": 266, "14112001": 266, "7568025": 266, "95892427": 266, "2794155": 266, "6569866": 266, "98935825": 266, "41211849": 266, "0998334166468": 266, "sympy_nam": 266, "numerical_funct": 266, "rephras": 267, "oh": 267, "integration_vari": 267, "dfdx": 267, "equidistantli": 267, "d2fdx2": 267, "django": 269, "oop": 269, "crazi": 269, "abcdef": 269, "reevalu": 269, "infal": 269, "insight": 270, "entertain": 270, "preliminari": 270, "82842712475": 271, "cass": 271, "wrote": [271, 272], "theme": 271, "expanded_expr": 271, "whet": 271, "appetit": 271, "c\u2082": [271, 278], "c\u2081": [271, 278], "\u03bd": 271, "sell": 271, "battl": 271, "confid": 271, "gigabyt": 271, "tear": 272, "stopper": 272, "uexpr": 272, "unevalutedexpr": 272, "downsid": 273, "algebraic_multipl": 273, "pdp": 273, "undertest": 273, "underevalu": 273, "my_iszero": 273, "stronger": 273, "tradeoff": 273, "wonder": 273, "5b7c3e8ee5b40332abdb206c": 273, "15141": 273, "19548": 273, "10120": 273, "10279": 273, "constant_problem": 273, "possiblezeroq": 273, "mupad_ref": 273, "iszero": 273, "congratul": 274, "decent": 275, "austin": 275, "video": 275, "bvar": 276, "unnecessarili": 277, "whittl": 277, "catchal": 277, "collected_expr": 277, "cdot1": 277, "undertak": 277, "undon": 277, "cdot2": 277, "nck": 277, "pronounc": 277, "_2f_1": 277, "cfrac": 277, "list_to_frac": 277, "a\u2080": 277, "a\u2083": 277, "a\u2084": 277, "pointless": 277, "orig_frac": 277, "diffeq": 278}, "objects": {"": [[25, 0, 0, "-", "sympy"]], "sympy": [[27, 0, 0, "-", "abc"], [28, 0, 0, "-", "algebras"], [31, 0, 0, "-", "assumptions"], [34, 0, 0, "-", "calculus"], [35, 0, 0, "-", "categories"], [56, 0, 0, "-", "diffgeom"], [57, 0, 0, "-", "discrete"], [61, 0, 0, "-", "functions"], [74, 0, 0, "-", "holonomic"], [81, 0, 0, "-", "integrals"], [82, 0, 0, "-", "interactive"], [83, 0, 0, "-", "liealgebras"], [84, 0, 0, "-", "logic"], [89, 0, 0, "-", "matrices"], [96, 0, 0, "-", "parsing"], [262, 0, 0, "-", "physics"], [197, 0, 0, "-", "polys"], [219, 0, 0, "-", "solvers"], [221, 0, 0, "-", "stats"], [224, 0, 0, "-", "tensor"], [229, 0, 0, "-", "testing"], [238, 0, 0, "-", "utilities"], [253, 0, 0, "-", "vector"]], "sympy.algebras": [[28, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[28, 2, 1, "", "add"], [28, 2, 1, "", "angle"], [28, 2, 1, "", "arc_coplanar"], [28, 2, 1, "", "axis"], [28, 2, 1, "", "exp"], [28, 2, 1, "", "from_axis_angle"], [28, 2, 1, "", "from_rotation_matrix"], [28, 2, 1, "", "index_vector"], [28, 2, 1, "", "integrate"], [28, 2, 1, "", "inverse"], [28, 2, 1, "", "is_pure"], [28, 2, 1, "", "is_zero_quaternion"], [28, 2, 1, "", "mensor"], [28, 2, 1, "", "mul"], [28, 2, 1, "", "norm"], [28, 2, 1, "", "normalize"], [28, 2, 1, "", "orthogonal"], [28, 2, 1, "", "parallel"], [28, 2, 1, "", "pow"], [28, 2, 1, "", "pow_cos_sin"], [28, 2, 1, "", "rotate_point"], [28, 2, 1, "", "scalar_part"], [28, 2, 1, "", "to_axis_angle"], [28, 2, 1, "", "to_rotation_matrix"], [28, 2, 1, "", "vector_coplanar"], [28, 2, 1, "", "vector_part"]], "sympy.assumptions": [[29, 0, 0, "-", "ask"], [30, 0, 0, "-", "assume"], [32, 0, 0, "-", "predicates"], [33, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[29, 1, 1, "", "AssumptionKeys"], [29, 3, 1, "", "ask"], [29, 3, 1, "", "register_handler"], [29, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[30, 1, 1, "", "AppliedPredicate"], [30, 1, 1, "", "AssumptionsContext"], [30, 1, 1, "", "Predicate"], [30, 1, 1, "", "UndefinedPredicate"], [30, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[30, 4, 1, "", "arg"], [30, 4, 1, "", "arguments"], [30, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[30, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[30, 2, 1, "", "eval"], [30, 5, 1, "", "handler"], [30, 2, 1, "", "register"], [30, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[32, 1, 1, "", "FinitePredicate"], [32, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[32, 1, 1, "", "CommutativePredicate"], [32, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[32, 1, 1, "", "ComplexElementsPredicate"], [32, 1, 1, "", "DiagonalPredicate"], [32, 1, 1, "", "FullRankPredicate"], [32, 1, 1, "", "IntegerElementsPredicate"], [32, 1, 1, "", "InvertiblePredicate"], [32, 1, 1, "", "LowerTriangularPredicate"], [32, 1, 1, "", "NormalPredicate"], [32, 1, 1, "", "OrthogonalPredicate"], [32, 1, 1, "", "PositiveDefinitePredicate"], [32, 1, 1, "", "RealElementsPredicate"], [32, 1, 1, "", "SingularPredicate"], [32, 1, 1, "", "SquarePredicate"], [32, 1, 1, "", "SymmetricPredicate"], [32, 1, 1, "", "TriangularPredicate"], [32, 1, 1, "", "UnitTriangularPredicate"], [32, 1, 1, "", "UnitaryPredicate"], [32, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[32, 1, 1, "", "CompositePredicate"], [32, 1, 1, "", "EvenPredicate"], [32, 1, 1, "", "OddPredicate"], [32, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[32, 1, 1, "", "NegativePredicate"], [32, 1, 1, "", "NonNegativePredicate"], [32, 1, 1, "", "NonPositivePredicate"], [32, 1, 1, "", "NonZeroPredicate"], [32, 1, 1, "", "PositivePredicate"], [32, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[32, 1, 1, "", "AlgebraicPredicate"], [32, 1, 1, "", "AntihermitianPredicate"], [32, 1, 1, "", "ComplexPredicate"], [32, 1, 1, "", "ExtendedRealPredicate"], [32, 1, 1, "", "HermitianPredicate"], [32, 1, 1, "", "ImaginaryPredicate"], [32, 1, 1, "", "IntegerPredicate"], [32, 1, 1, "", "IrrationalPredicate"], [32, 1, 1, "", "RationalPredicate"], [32, 1, 1, "", "RealPredicate"], [32, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[32, 5, 1, "", "AlgebraicHandler"], [32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[32, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[33, 3, 1, "", "refine"], [33, 3, 1, "", "refine_Pow"], [33, 3, 1, "", "refine_abs"], [33, 3, 1, "", "refine_arg"], [33, 3, 1, "", "refine_atan2"], [33, 3, 1, "", "refine_im"], [33, 3, 1, "", "refine_matrixelement"], [33, 3, 1, "", "refine_re"], [33, 3, 1, "", "refine_sign"]], "sympy.calculus": [[34, 0, 0, "-", "euler"], [34, 0, 0, "-", "finite_diff"], [34, 0, 0, "-", "singularities"], [34, 0, 0, "-", "util"]], "sympy.calculus.euler": [[34, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[34, 3, 1, "", "apply_finite_diff"], [34, 3, 1, "", "differentiate_finite"], [34, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[34, 3, 1, "", "is_decreasing"], [34, 3, 1, "", "is_increasing"], [34, 3, 1, "", "is_monotonic"], [34, 3, 1, "", "is_strictly_decreasing"], [34, 3, 1, "", "is_strictly_increasing"], [34, 3, 1, "", "monotonicity_helper"], [34, 3, 1, "", "singularities"]], "sympy.calculus.util": [[34, 3, 1, "", "continuous_domain"], [34, 3, 1, "", "function_range"], [34, 3, 1, "", "is_convex"], [34, 3, 1, "", "lcim"], [34, 3, 1, "", "maximum"], [34, 3, 1, "", "minimum"], [34, 3, 1, "", "not_empty_in"], [34, 3, 1, "", "periodicity"], [34, 3, 1, "", "stationary_points"]], "sympy.categories": [[35, 1, 1, "", "Category"], [35, 1, 1, "", "CompositeMorphism"], [35, 1, 1, "", "Diagram"], [35, 1, 1, "", "IdentityMorphism"], [35, 1, 1, "", "Morphism"], [35, 1, 1, "", "NamedMorphism"], [35, 1, 1, "", "Object"], [35, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[35, 4, 1, "", "commutative_diagrams"], [35, 4, 1, "", "name"], [35, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[35, 4, 1, "", "codomain"], [35, 4, 1, "", "components"], [35, 4, 1, "", "domain"], [35, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[35, 4, 1, "", "conclusions"], [35, 2, 1, "", "hom"], [35, 2, 1, "", "is_subdiagram"], [35, 4, 1, "", "objects"], [35, 4, 1, "", "premises"], [35, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[35, 4, 1, "", "codomain"], [35, 2, 1, "", "compose"], [35, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[35, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[35, 1, 1, "", "ArrowStringDescription"], [35, 1, 1, "", "DiagramGrid"], [35, 1, 1, "", "XypicDiagramDrawer"], [35, 3, 1, "", "preview_diagram"], [35, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[35, 4, 1, "", "height"], [35, 4, 1, "", "morphisms"], [35, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[35, 2, 1, "", "draw"]], "sympy.codegen": [[36, 0, 0, "-", "algorithms"], [36, 0, 0, "-", "approximations"], [36, 0, 0, "-", "ast"], [36, 0, 0, "-", "cfunctions"], [36, 0, 0, "-", "cnodes"], [36, 0, 0, "-", "cutils"], [36, 0, 0, "-", "cxxnodes"], [36, 0, 0, "-", "fnodes"], [36, 0, 0, "-", "futils"], [36, 0, 0, "-", "matrix_nodes"], [36, 0, 0, "-", "pyutils"], [36, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[36, 3, 1, "", "newtons_method"], [36, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[36, 1, 1, "", "SeriesApprox"], [36, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[36, 1, 1, "", "Assignment"], [36, 1, 1, "", "AssignmentBase"], [36, 1, 1, "", "Attribute"], [36, 1, 1, "", "AugmentedAssignment"], [36, 1, 1, "", "BreakToken"], [36, 1, 1, "", "CodeBlock"], [36, 1, 1, "", "Comment"], [36, 1, 1, "", "ComplexType"], [36, 1, 1, "", "ContinueToken"], [36, 1, 1, "", "Declaration"], [36, 1, 1, "", "Element"], [36, 1, 1, "", "FloatBaseType"], [36, 1, 1, "", "FloatType"], [36, 1, 1, "", "For"], [36, 1, 1, "", "FunctionCall"], [36, 1, 1, "", "FunctionDefinition"], [36, 1, 1, "", "FunctionPrototype"], [36, 1, 1, "", "IntBaseType"], [36, 1, 1, "", "Node"], [36, 1, 1, "", "NoneToken"], [36, 1, 1, "", "Pointer"], [36, 1, 1, "", "Print"], [36, 1, 1, "", "QuotedString"], [36, 1, 1, "", "Return"], [36, 1, 1, "", "Scope"], [36, 1, 1, "", "SignedIntType"], [36, 1, 1, "", "Stream"], [36, 1, 1, "", "String"], [36, 1, 1, "", "Token"], [36, 1, 1, "", "Type"], [36, 1, 1, "", "UnsignedIntType"], [36, 1, 1, "", "Variable"], [36, 1, 1, "", "While"], [36, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[36, 2, 1, "", "cse"], [36, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[36, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[36, 2, 1, "", "cast_nocheck"], [36, 4, 1, "", "decimal_dig"], [36, 4, 1, "", "dig"], [36, 4, 1, "", "eps"], [36, 4, 1, "", "max"], [36, 4, 1, "", "max_exponent"], [36, 4, 1, "", "min_exponent"], [36, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[36, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[36, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[36, 2, 1, "", "cast_check"], [36, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[36, 2, 1, "", "as_Declaration"], [36, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[36, 1, 1, "", "Cbrt"], [36, 1, 1, "", "Sqrt"], [36, 1, 1, "", "exp2"], [36, 1, 1, "", "expm1"], [36, 1, 1, "", "fma"], [36, 1, 1, "", "hypot"], [36, 1, 1, "", "log10"], [36, 1, 1, "", "log1p"], [36, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[36, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[36, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[36, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[36, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[36, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[36, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[36, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[36, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[36, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[36, 1, 1, "", "CommaOperator"], [36, 1, 1, "", "Label"], [36, 1, 1, "", "PostDecrement"], [36, 1, 1, "", "PostIncrement"], [36, 1, 1, "", "PreDecrement"], [36, 1, 1, "", "PreIncrement"], [36, 3, 1, "", "alignof"], [36, 1, 1, "", "goto"], [36, 3, 1, "", "sizeof"], [36, 1, 1, "", "struct"], [36, 1, 1, "", "union"]], "sympy.codegen.cutils": [[36, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[36, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[36, 1, 1, "", "ArrayConstructor"], [36, 1, 1, "", "Do"], [36, 1, 1, "", "Extent"], [36, 1, 1, "", "FortranReturn"], [36, 1, 1, "", "GoTo"], [36, 1, 1, "", "ImpliedDoLoop"], [36, 1, 1, "", "Module"], [36, 1, 1, "", "Program"], [36, 1, 1, "", "Subroutine"], [36, 1, 1, "", "SubroutineCall"], [36, 3, 1, "", "allocated"], [36, 3, 1, "", "array"], [36, 3, 1, "", "bind_C"], [36, 1, 1, "", "cmplx"], [36, 3, 1, "", "dimension"], [36, 1, 1, "", "dsign"], [36, 1, 1, "", "isign"], [36, 1, 1, "", "kind"], [36, 3, 1, "", "lbound"], [36, 1, 1, "", "literal_dp"], [36, 1, 1, "", "literal_sp"], [36, 1, 1, "", "merge"], [36, 3, 1, "", "reshape"], [36, 3, 1, "", "shape"], [36, 3, 1, "", "size"], [36, 1, 1, "", "use"], [36, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[36, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[36, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[36, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[36, 1, 1, "", "FuncMinusOneOptim"], [36, 1, 1, "", "Optimization"], [36, 1, 1, "", "ReplaceOptim"], [36, 3, 1, "", "create_expand_pow_optimization"], [36, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[36, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[46, 0, 0, "-", "generators"], [38, 0, 0, "-", "graycode"], [39, 0, 0, "-", "group_constructs"], [40, 0, 0, "-", "group_numbers"], [42, 0, 0, "-", "named_groups"], [43, 0, 0, "-", "partitions"], [45, 0, 0, "-", "perm_groups"], [46, 0, 0, "-", "permutations"], [47, 0, 0, "-", "polyhedron"], [48, 0, 0, "-", "prufer"], [49, 0, 0, "-", "subsets"], [50, 0, 0, "-", "tensor_can"], [51, 0, 0, "-", "testutil"], [52, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[46, 2, 1, "", "alternating"], [46, 2, 1, "", "cyclic"], [46, 2, 1, "", "dihedral"], [46, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[38, 1, 1, "", "GrayCode"], [38, 2, 1, "", "bin_to_gray"], [38, 2, 1, "", "get_subset_from_bitstring"], [38, 2, 1, "", "gray_to_bin"], [38, 2, 1, "", "graycode_subsets"], [38, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[38, 4, 1, "", "current"], [38, 2, 1, "", "generate_gray"], [38, 4, 1, "", "n"], [38, 2, 1, "", "next"], [38, 4, 1, "", "rank"], [38, 4, 1, "", "selections"], [38, 2, 1, "", "skip"], [38, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[39, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[40, 3, 1, "", "is_abelian_number"], [40, 3, 1, "", "is_cyclic_number"], [40, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[42, 3, 1, "", "AbelianGroup"], [42, 3, 1, "", "AlternatingGroup"], [42, 3, 1, "", "CyclicGroup"], [42, 3, 1, "", "DihedralGroup"], [42, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[43, 1, 1, "", "IntegerPartition"], [43, 1, 1, "", "Partition"], [43, 3, 1, "", "RGS_enum"], [43, 3, 1, "", "RGS_generalized"], [43, 3, 1, "", "RGS_rank"], [43, 3, 1, "", "RGS_unrank"], [43, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[43, 2, 1, "", "as_dict"], [43, 2, 1, "", "as_ferrers"], [43, 4, 1, "", "conjugate"], [43, 2, 1, "", "next_lex"], [43, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[43, 4, 1, "", "RGS"], [43, 2, 1, "", "from_rgs"], [43, 4, 1, "", "partition"], [43, 4, 1, "", "rank"], [43, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[45, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[45, 2, 1, "", "__contains__"], [45, 2, 1, "", "__mul__"], [45, 2, 1, "", "__new__"], [45, 5, 1, "", "__weakref__"], [45, 2, 1, "", "_coset_representative"], [45, 2, 1, "", "_distinct_primes_lemma"], [45, 4, 1, "", "_elements"], [45, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [45, 2, 1, "", "_eval_is_alt_sym_naive"], [45, 2, 1, "", "_p_elements_group"], [45, 2, 1, "", "_random_pr_init"], [45, 2, 1, "", "_sylow_alt_sym"], [45, 2, 1, "", "_union_find_merge"], [45, 2, 1, "", "_union_find_rep"], [45, 2, 1, "", "_verify"], [45, 2, 1, "", "abelian_invariants"], [45, 4, 1, "", "base"], [45, 2, 1, "", "baseswap"], [45, 4, 1, "", "basic_orbits"], [45, 4, 1, "", "basic_stabilizers"], [45, 4, 1, "", "basic_transversals"], [45, 2, 1, "", "center"], [45, 2, 1, "", "centralizer"], [45, 2, 1, "", "commutator"], [45, 2, 1, "", "composition_series"], [45, 2, 1, "", "conjugacy_class"], [45, 2, 1, "", "conjugacy_classes"], [45, 2, 1, "", "contains"], [45, 2, 1, "", "coset_factor"], [45, 2, 1, "", "coset_rank"], [45, 2, 1, "", "coset_table"], [45, 2, 1, "", "coset_transversal"], [45, 2, 1, "", "coset_unrank"], [45, 4, 1, "", "degree"], [45, 2, 1, "", "derived_series"], [45, 2, 1, "", "derived_subgroup"], [45, 4, 1, "", "elements"], [45, 2, 1, "", "equals"], [45, 2, 1, "", "generate"], [45, 2, 1, "", "generate_dimino"], [45, 2, 1, "", "generate_schreier_sims"], [45, 2, 1, "", "generator_product"], [45, 4, 1, "", "generators"], [45, 4, 1, "", "identity"], [45, 2, 1, "", "index"], [45, 4, 1, "", "is_abelian"], [45, 2, 1, "", "is_alt_sym"], [45, 4, 1, "", "is_alternating"], [45, 4, 1, "", "is_cyclic"], [45, 2, 1, "", "is_elementary"], [45, 4, 1, "", "is_nilpotent"], [45, 2, 1, "", "is_normal"], [45, 4, 1, "", "is_perfect"], [45, 4, 1, "", "is_polycyclic"], [45, 2, 1, "", "is_primitive"], [45, 4, 1, "", "is_solvable"], [45, 2, 1, "", "is_subgroup"], [45, 4, 1, "", "is_symmetric"], [45, 2, 1, "", "is_transitive"], [45, 4, 1, "", "is_trivial"], [45, 2, 1, "", "lower_central_series"], [45, 2, 1, "", "make_perm"], [45, 4, 1, "", "max_div"], [45, 2, 1, "", "minimal_block"], [45, 2, 1, "", "minimal_blocks"], [45, 2, 1, "", "normal_closure"], [45, 2, 1, "", "orbit"], [45, 2, 1, "", "orbit_rep"], [45, 2, 1, "", "orbit_transversal"], [45, 2, 1, "", "orbits"], [45, 2, 1, "", "order"], [45, 2, 1, "", "pointwise_stabilizer"], [45, 2, 1, "", "polycyclic_group"], [45, 2, 1, "", "presentation"], [45, 2, 1, "", "random"], [45, 2, 1, "", "random_pr"], [45, 2, 1, "", "random_stab"], [45, 2, 1, "", "schreier_sims"], [45, 2, 1, "", "schreier_sims_incremental"], [45, 2, 1, "", "schreier_sims_random"], [45, 2, 1, "", "schreier_vector"], [45, 2, 1, "", "stabilizer"], [45, 4, 1, "", "strong_gens"], [45, 2, 1, "", "strong_presentation"], [45, 2, 1, "", "subgroup"], [45, 2, 1, "", "subgroup_search"], [45, 2, 1, "", "sylow_subgroup"], [45, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[46, 1, 1, "", "Cycle"], [46, 1, 1, "", "Permutation"], [46, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[46, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[46, 2, 1, "", "apply"], [46, 4, 1, "", "array_form"], [46, 2, 1, "", "ascents"], [46, 2, 1, "", "atoms"], [46, 4, 1, "", "cardinality"], [46, 2, 1, "", "commutator"], [46, 2, 1, "", "commutes_with"], [46, 4, 1, "", "cycle_structure"], [46, 4, 1, "", "cycles"], [46, 4, 1, "", "cyclic_form"], [46, 2, 1, "", "descents"], [46, 2, 1, "", "from_inversion_vector"], [46, 2, 1, "", "from_sequence"], [46, 4, 1, "", "full_cyclic_form"], [46, 2, 1, "", "get_adjacency_distance"], [46, 2, 1, "", "get_adjacency_matrix"], [46, 2, 1, "", "get_positional_distance"], [46, 2, 1, "", "get_precedence_distance"], [46, 2, 1, "", "get_precedence_matrix"], [46, 2, 1, "", "index"], [46, 2, 1, "", "inversion_vector"], [46, 2, 1, "", "inversions"], [46, 4, 1, "", "is_Empty"], [46, 4, 1, "", "is_Identity"], [46, 4, 1, "", "is_Singleton"], [46, 4, 1, "", "is_even"], [46, 4, 1, "", "is_odd"], [46, 2, 1, "", "josephus"], [46, 2, 1, "", "length"], [46, 2, 1, "", "list"], [46, 2, 1, "", "max"], [46, 2, 1, "", "min"], [46, 2, 1, "", "mul_inv"], [46, 2, 1, "", "next_lex"], [46, 2, 1, "", "next_nonlex"], [46, 2, 1, "", "next_trotterjohnson"], [46, 2, 1, "", "order"], [46, 2, 1, "", "parity"], [46, 2, 1, "", "random"], [46, 2, 1, "", "rank"], [46, 2, 1, "", "rank_nonlex"], [46, 2, 1, "", "rank_trotterjohnson"], [46, 2, 1, "", "resize"], [46, 2, 1, "", "rmul"], [46, 2, 1, "", "rmul_with_af"], [46, 2, 1, "", "runs"], [46, 2, 1, "", "signature"], [46, 4, 1, "", "size"], [46, 2, 1, "", "support"], [46, 2, 1, "", "transpositions"], [46, 2, 1, "", "unrank_lex"], [46, 2, 1, "", "unrank_nonlex"], [46, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[47, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[47, 4, 1, "", "array_form"], [47, 4, 1, "", "corners"], [47, 4, 1, "", "cyclic_form"], [47, 4, 1, "", "edges"], [47, 4, 1, "", "faces"], [47, 4, 1, "", "pgroup"], [47, 2, 1, "", "reset"], [47, 2, 1, "", "rotate"], [47, 4, 1, "", "size"], [47, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[48, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[48, 2, 1, "", "edges"], [48, 2, 1, "", "next"], [48, 4, 1, "", "nodes"], [48, 2, 1, "", "prev"], [48, 2, 1, "", "prufer_rank"], [48, 4, 1, "", "prufer_repr"], [48, 4, 1, "", "rank"], [48, 4, 1, "", "size"], [48, 2, 1, "", "to_prufer"], [48, 2, 1, "", "to_tree"], [48, 4, 1, "", "tree_repr"], [48, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[49, 1, 1, "", "Subset"], [49, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[49, 2, 1, "", "bitlist_from_subset"], [49, 4, 1, "", "cardinality"], [49, 2, 1, "", "iterate_binary"], [49, 2, 1, "", "iterate_graycode"], [49, 2, 1, "", "next_binary"], [49, 2, 1, "", "next_gray"], [49, 2, 1, "", "next_lexicographic"], [49, 2, 1, "", "prev_binary"], [49, 2, 1, "", "prev_gray"], [49, 2, 1, "", "prev_lexicographic"], [49, 4, 1, "", "rank_binary"], [49, 4, 1, "", "rank_gray"], [49, 4, 1, "", "rank_lexicographic"], [49, 4, 1, "", "size"], [49, 4, 1, "", "subset"], [49, 2, 1, "", "subset_from_bitlist"], [49, 2, 1, "", "subset_indices"], [49, 4, 1, "", "superset"], [49, 4, 1, "", "superset_size"], [49, 2, 1, "", "unrank_binary"], [49, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[50, 3, 1, "", "bsgs_direct_product"], [50, 3, 1, "", "canonicalize"], [50, 3, 1, "", "double_coset_can_rep"], [50, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[51, 3, 1, "", "_cmp_perm_lists"], [51, 3, 1, "", "_naive_list_centralizer"], [51, 3, 1, "", "_verify_bsgs"], [51, 3, 1, "", "_verify_centralizer"], [51, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[52, 3, 1, "", "_base_ordering"], [52, 3, 1, "", "_check_cycles_alt_sym"], [52, 3, 1, "", "_distribute_gens_by_base"], [52, 3, 1, "", "_handle_precomputed_bsgs"], [52, 3, 1, "", "_orbits_transversals_from_bsgs"], [52, 3, 1, "", "_remove_gens"], [52, 3, 1, "", "_strip"], [52, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[53, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[53, 2, 1, "", "change_index"], [53, 4, 1, "", "has_empty_sequence"], [53, 2, 1, "", "index"], [53, 2, 1, "", "reorder"], [53, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[81, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[81, 4, 1, "", "bound_symbols"], [81, 4, 1, "", "free_symbols"], [81, 4, 1, "", "function"], [81, 4, 1, "", "has_finite_limits"], [81, 4, 1, "", "has_reversed_limits"], [81, 4, 1, "", "is_number"], [81, 4, 1, "", "limits"], [81, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[53, 3, 1, "", "gosper_normal"], [53, 3, 1, "", "gosper_sum"], [53, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[53, 1, 1, "", "Product"], [53, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[53, 2, 1, "", "is_convergent"], [53, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[53, 1, 1, "", "Sum"], [53, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[53, 2, 1, "", "euler_maclaurin"], [53, 2, 1, "", "eval_zeta_function"], [53, 2, 1, "", "is_absolutely_convergent"], [53, 2, 1, "", "is_convergent"], [53, 2, 1, "", "reverse_order"]], "sympy.core": [[54, 0, 0, "-", "add"], [54, 0, 0, "-", "assumptions"], [54, 0, 0, "-", "basic"], [54, 0, 0, "-", "cache"], [54, 0, 0, "-", "containers"], [54, 0, 0, "-", "core"], [54, 0, 0, "-", "evalf"], [54, 0, 0, "-", "expr"], [54, 0, 0, "-", "exprtools"], [54, 0, 0, "-", "function"], [54, 0, 0, "-", "kind"], [54, 0, 0, "-", "mod"], [54, 0, 0, "-", "mul"], [54, 0, 0, "-", "multidimensional"], [54, 0, 0, "-", "numbers"], [54, 0, 0, "-", "power"], [54, 0, 0, "-", "random"], [54, 0, 0, "-", "relational"], [54, 0, 0, "-", "singleton"], [54, 0, 0, "-", "symbol"], [54, 0, 0, "-", "sympify"], [54, 0, 0, "-", "traversal"]], "sympy.core.add": [[54, 1, 1, "", "Add"]], "sympy.core.add.Add": [[54, 2, 1, "", "as_coeff_Add"], [54, 2, 1, "", "as_coeff_add"], [54, 2, 1, "", "as_content_primitive"], [54, 2, 1, "", "as_numer_denom"], [54, 2, 1, "", "as_real_imag"], [54, 2, 1, "", "as_two_terms"], [54, 2, 1, "", "class_key"], [54, 2, 1, "", "extract_leading_order"], [54, 2, 1, "", "flatten"], [54, 2, 1, "", "primitive"]], "sympy.core.basic": [[54, 1, 1, "", "Atom"], [54, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[54, 4, 1, "", "args"], [54, 2, 1, "", "as_content_primitive"], [54, 2, 1, "", "as_dummy"], [54, 4, 1, "", "assumptions0"], [54, 2, 1, "", "atoms"], [54, 4, 1, "", "canonical_variables"], [54, 2, 1, "", "class_key"], [54, 2, 1, "", "compare"], [54, 2, 1, "", "count"], [54, 2, 1, "", "count_ops"], [54, 2, 1, "", "doit"], [54, 2, 1, "", "dummy_eq"], [54, 2, 1, "", "find"], [54, 4, 1, "", "free_symbols"], [54, 2, 1, "", "fromiter"], [54, 4, 1, "", "func"], [54, 2, 1, "", "has"], [54, 2, 1, "", "has_free"], [54, 2, 1, "", "has_xfree"], [54, 4, 1, "", "is_comparable"], [54, 2, 1, "", "match"], [54, 2, 1, "", "matches"], [54, 2, 1, "", "rcall"], [54, 2, 1, "", "refine"], [54, 2, 1, "", "replace"], [54, 2, 1, "", "rewrite"], [54, 2, 1, "", "simplify"], [54, 2, 1, "", "sort_key"], [54, 2, 1, "", "subs"], [54, 2, 1, "", "xreplace"]], "sympy.core.cache": [[54, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[54, 1, 1, "", "Dict"], [54, 1, 1, "", "Tuple"], [54, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[54, 2, 1, "", "get"], [54, 2, 1, "", "items"], [54, 2, 1, "", "keys"], [54, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[54, 2, 1, "", "index"], [54, 4, 1, "", "kind"], [54, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[54, 1, 1, "", "EvalfMixin"], [54, 3, 1, "", "N"], [54, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[54, 2, 1, "", "evalf"], [54, 2, 1, "", "n"]], "sympy.core.expr": [[54, 1, 1, "", "AtomicExpr"], [54, 1, 1, "", "Expr"], [54, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[54, 2, 1, "", "apart"], [54, 2, 1, "", "args_cnc"], [54, 2, 1, "", "as_coeff_Add"], [54, 2, 1, "", "as_coeff_Mul"], [54, 2, 1, "", "as_coeff_add"], [54, 2, 1, "", "as_coeff_exponent"], [54, 2, 1, "", "as_coeff_mul"], [54, 2, 1, "", "as_coefficient"], [54, 2, 1, "", "as_coefficients_dict"], [54, 2, 1, "", "as_content_primitive"], [54, 2, 1, "", "as_expr"], [54, 2, 1, "", "as_independent"], [54, 2, 1, "", "as_leading_term"], [54, 2, 1, "", "as_numer_denom"], [54, 2, 1, "", "as_ordered_factors"], [54, 2, 1, "", "as_ordered_terms"], [54, 2, 1, "", "as_poly"], [54, 2, 1, "", "as_powers_dict"], [54, 2, 1, "", "as_real_imag"], [54, 2, 1, "", "as_terms"], [54, 2, 1, "", "aseries"], [54, 2, 1, "", "cancel"], [54, 2, 1, "", "coeff"], [54, 2, 1, "", "collect"], [54, 2, 1, "", "combsimp"], [54, 2, 1, "", "compute_leading_term"], [54, 2, 1, "", "conjugate"], [54, 2, 1, "", "could_extract_minus_sign"], [54, 2, 1, "", "count_ops"], [54, 2, 1, "", "equals"], [54, 2, 1, "", "expand"], [54, 4, 1, "", "expr_free_symbols"], [54, 2, 1, "", "extract_additively"], [54, 2, 1, "", "extract_branch_factor"], [54, 2, 1, "", "extract_multiplicatively"], [54, 2, 1, "", "factor"], [54, 2, 1, "", "fourier_series"], [54, 2, 1, "", "fps"], [54, 2, 1, "", "gammasimp"], [54, 2, 1, "", "getO"], [54, 2, 1, "", "getn"], [54, 2, 1, "", "integrate"], [54, 2, 1, "", "invert"], [54, 2, 1, "", "is_algebraic_expr"], [54, 2, 1, "", "is_constant"], [54, 2, 1, "", "is_meromorphic"], [54, 4, 1, "", "is_number"], [54, 2, 1, "", "is_polynomial"], [54, 2, 1, "", "is_rational_function"], [54, 2, 1, "", "leadterm"], [54, 2, 1, "", "limit"], [54, 2, 1, "", "lseries"], [54, 2, 1, "", "normal"], [54, 2, 1, "", "nseries"], [54, 2, 1, "", "nsimplify"], [54, 2, 1, "", "powsimp"], [54, 2, 1, "", "primitive"], [54, 2, 1, "", "radsimp"], [54, 2, 1, "", "ratsimp"], [54, 2, 1, "", "removeO"], [54, 2, 1, "", "round"], [54, 2, 1, "", "separate"], [54, 2, 1, "", "series"], [54, 2, 1, "", "taylor_term"], [54, 2, 1, "", "together"], [54, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[54, 3, 1, "", "factor_terms"], [54, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[54, 1, 1, "", "Derivative"], [54, 1, 1, "", "Function"], [54, 1, 1, "", "FunctionClass"], [54, 1, 1, "", "Lambda"], [54, 1, 1, "", "PoleError"], [54, 1, 1, "", "Subs"], [54, 1, 1, "", "WildFunction"], [54, 3, 1, "", "count_ops"], [54, 3, 1, "", "diff"], [54, 3, 1, "", "expand"], [54, 3, 1, "", "expand_complex"], [54, 3, 1, "", "expand_func"], [54, 3, 1, "", "expand_log"], [54, 3, 1, "", "expand_mul"], [54, 3, 1, "", "expand_multinomial"], [54, 3, 1, "", "expand_power_base"], [54, 3, 1, "", "expand_power_exp"], [54, 3, 1, "", "expand_trig"], [54, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[54, 4, 1, "", "_diff_wrt"], [54, 2, 1, "", "_sort_variable_count"], [54, 2, 1, "", "as_finite_difference"], [54, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[54, 2, 1, "", "as_base_exp"], [54, 2, 1, "", "fdiff"], [54, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[54, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[54, 4, 1, "", "bound_symbols"], [54, 4, 1, "", "expr"], [54, 4, 1, "", "is_identity"], [54, 4, 1, "", "signature"], [54, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[54, 4, 1, "", "bound_symbols"], [54, 4, 1, "", "expr"], [54, 4, 1, "", "point"], [54, 4, 1, "", "variables"]], "sympy.core.kind": [[54, 5, 1, "", "BooleanKind"], [54, 1, 1, "", "Kind"], [54, 5, 1, "", "NumberKind"], [54, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[54, 1, 1, "", "Mod"]], "sympy.core.mul": [[54, 1, 1, "", "Mul"], [54, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[54, 2, 1, "", "as_coeff_Mul"], [54, 2, 1, "", "as_content_primitive"], [54, 2, 1, "", "as_ordered_factors"], [54, 2, 1, "", "as_two_terms"], [54, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[54, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[54, 1, 1, "", "AlgebraicNumber"], [54, 1, 1, "", "Catalan"], [54, 1, 1, "", "ComplexInfinity"], [54, 1, 1, "", "EulerGamma"], [54, 1, 1, "", "Exp1"], [54, 1, 1, "", "Float"], [54, 1, 1, "", "GoldenRatio"], [54, 1, 1, "", "Half"], [54, 1, 1, "", "ImaginaryUnit"], [54, 1, 1, "", "Infinity"], [54, 1, 1, "", "Integer"], [54, 1, 1, "", "NaN"], [54, 1, 1, "", "NegativeInfinity"], [54, 1, 1, "", "NegativeOne"], [54, 1, 1, "", "Number"], [54, 1, 1, "", "NumberSymbol"], [54, 1, 1, "", "One"], [54, 1, 1, "", "Pi"], [54, 1, 1, "", "Rational"], [54, 5, 1, "", "RealNumber"], [54, 1, 1, "", "TribonacciConstant"], [54, 1, 1, "", "Zero"], [54, 3, 1, "", "igcd"], [54, 3, 1, "", "ilcm"], [54, 3, 1, "", "mod_inverse"], [54, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[54, 2, 1, "", "__new__"], [54, 2, 1, "", "as_expr"], [54, 2, 1, "", "as_poly"], [54, 2, 1, "", "coeffs"], [54, 2, 1, "", "field_element"], [54, 4, 1, "", "is_aliased"], [54, 4, 1, "", "is_primitive_element"], [54, 2, 1, "", "minpoly_of_element"], [54, 2, 1, "", "native_coeffs"], [54, 2, 1, "", "primitive_element"], [54, 2, 1, "", "to_algebraic_integer"], [54, 2, 1, "", "to_primitive_element"], [54, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[54, 2, 1, "", "as_coeff_Add"], [54, 2, 1, "", "as_coeff_Mul"], [54, 2, 1, "", "cofactors"], [54, 2, 1, "", "gcd"], [54, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[54, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[54, 2, 1, "", "as_coeff_Add"], [54, 2, 1, "", "as_coeff_Mul"], [54, 2, 1, "", "as_content_primitive"], [54, 2, 1, "", "factors"], [54, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[54, 1, 1, "", "Pow"], [54, 3, 1, "", "integer_log"], [54, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[54, 2, 1, "", "as_base_exp"], [54, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[54, 3, 1, "", "_randint"], [54, 3, 1, "", "_randrange"], [54, 3, 1, "", "random_complex_number"], [54, 3, 1, "", "test_derivative_numerically"], [54, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[54, 5, 1, "", "Eq"], [54, 1, 1, "", "Equality"], [54, 5, 1, "", "Ge"], [54, 1, 1, "", "GreaterThan"], [54, 5, 1, "", "Gt"], [54, 5, 1, "", "Le"], [54, 1, 1, "", "LessThan"], [54, 5, 1, "", "Lt"], [54, 5, 1, "", "Ne"], [54, 5, 1, "", "Rel"], [54, 1, 1, "", "Relational"], [54, 1, 1, "", "StrictGreaterThan"], [54, 1, 1, "", "StrictLessThan"], [54, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[54, 2, 1, "", "as_poly"], [54, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[54, 4, 1, "", "canonical"], [54, 2, 1, "", "equals"], [54, 4, 1, "", "lhs"], [54, 4, 1, "", "negated"], [54, 4, 1, "", "reversed"], [54, 4, 1, "", "reversedsign"], [54, 4, 1, "", "rhs"], [54, 4, 1, "", "strict"], [54, 4, 1, "", "weak"]], "sympy.core.singleton": [[54, 1, 1, "", "Singleton"], [54, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[54, 3, 1, "", "default_sort_key"], [54, 3, 1, "", "ordered"]], "sympy.core.symbol": [[54, 1, 1, "", "Dummy"], [54, 1, 1, "", "Symbol"], [54, 1, 1, "", "Wild"], [54, 3, 1, "", "symbols"], [54, 3, 1, "", "var"]], "sympy.core.sympify": [[54, 3, 1, "", "sympify"]], "sympy.core.traversal": [[54, 3, 1, "", "bottom_up"], [54, 3, 1, "", "postorder_traversal"], [54, 3, 1, "", "preorder_traversal"], [54, 3, 1, "", "use"], [54, 3, 1, "", "walk"]], "sympy.crypto": [[55, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[55, 3, 1, "", "AZ"], [55, 3, 1, "", "bifid5_square"], [55, 3, 1, "", "bifid6_square"], [55, 3, 1, "", "check_and_join"], [55, 3, 1, "", "cycle_list"], [55, 3, 1, "", "decipher_affine"], [55, 3, 1, "", "decipher_atbash"], [55, 3, 1, "", "decipher_bifid"], [55, 3, 1, "", "decipher_bifid5"], [55, 3, 1, "", "decipher_bifid6"], [55, 3, 1, "", "decipher_elgamal"], [55, 3, 1, "", "decipher_gm"], [55, 3, 1, "", "decipher_hill"], [55, 3, 1, "", "decipher_kid_rsa"], [55, 3, 1, "", "decipher_railfence"], [55, 3, 1, "", "decipher_rot13"], [55, 3, 1, "", "decipher_rsa"], [55, 3, 1, "", "decipher_shift"], [55, 3, 1, "", "decipher_vigenere"], [55, 3, 1, "", "decode_morse"], [55, 3, 1, "", "dh_private_key"], [55, 3, 1, "", "dh_public_key"], [55, 3, 1, "", "dh_shared_key"], [55, 3, 1, "", "elgamal_private_key"], [55, 3, 1, "", "elgamal_public_key"], [55, 3, 1, "", "encipher_affine"], [55, 3, 1, "", "encipher_atbash"], [55, 3, 1, "", "encipher_bifid"], [55, 3, 1, "", "encipher_bifid5"], [55, 3, 1, "", "encipher_bifid6"], [55, 3, 1, "", "encipher_elgamal"], [55, 3, 1, "", "encipher_gm"], [55, 3, 1, "", "encipher_hill"], [55, 3, 1, "", "encipher_kid_rsa"], [55, 3, 1, "", "encipher_railfence"], [55, 3, 1, "", "encipher_rot13"], [55, 3, 1, "", "encipher_rsa"], [55, 3, 1, "", "encipher_shift"], [55, 3, 1, "", "encipher_substitution"], [55, 3, 1, "", "encipher_vigenere"], [55, 3, 1, "", "encode_morse"], [55, 3, 1, "", "gm_private_key"], [55, 3, 1, "", "gm_public_key"], [55, 3, 1, "", "kid_rsa_private_key"], [55, 3, 1, "", "kid_rsa_public_key"], [55, 3, 1, "", "lfsr_autocorrelation"], [55, 3, 1, "", "lfsr_connection_polynomial"], [55, 3, 1, "", "lfsr_sequence"], [55, 3, 1, "", "padded_key"], [55, 3, 1, "", "rsa_private_key"], [55, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[56, 1, 1, "", "BaseCovarDerivativeOp"], [56, 1, 1, "", "BaseScalarField"], [56, 1, 1, "", "BaseVectorField"], [56, 1, 1, "", "Commutator"], [56, 1, 1, "", "CoordSystem"], [56, 1, 1, "", "CoordinateSymbol"], [56, 1, 1, "", "CovarDerivativeOp"], [56, 1, 1, "", "Differential"], [56, 1, 1, "", "LieDerivative"], [56, 1, 1, "", "Manifold"], [56, 1, 1, "", "Patch"], [56, 1, 1, "", "Point"], [56, 1, 1, "", "TensorProduct"], [56, 1, 1, "", "WedgeProduct"], [56, 3, 1, "", "intcurve_diffequ"], [56, 3, 1, "", "intcurve_series"], [56, 3, 1, "", "metric_to_Christoffel_1st"], [56, 3, 1, "", "metric_to_Christoffel_2nd"], [56, 3, 1, "", "metric_to_Ricci_components"], [56, 3, 1, "", "metric_to_Riemann_components"], [56, 3, 1, "", "twoform_to_matrix"], [56, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[56, 2, 1, "", "base_oneform"], [56, 2, 1, "", "base_oneforms"], [56, 2, 1, "", "base_scalar"], [56, 2, 1, "", "base_scalars"], [56, 2, 1, "", "base_vector"], [56, 2, 1, "", "base_vectors"], [56, 2, 1, "", "coord_function"], [56, 2, 1, "", "coord_functions"], [56, 2, 1, "", "coord_tuple_transform_to"], [56, 2, 1, "", "jacobian"], [56, 2, 1, "", "jacobian_determinant"], [56, 2, 1, "", "jacobian_matrix"], [56, 2, 1, "", "point"], [56, 2, 1, "", "point_to_coords"], [56, 2, 1, "", "transform"], [56, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[56, 2, 1, "", "coords"]], "sympy.discrete": [[57, 0, 0, "-", "convolutions"], [57, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[57, 3, 1, "", "convolution"], [57, 3, 1, "", "convolution_fft"], [57, 3, 1, "", "convolution_fwht"], [57, 3, 1, "", "convolution_ntt"], [57, 3, 1, "", "convolution_subset"], [57, 3, 1, "", "covering_product"], [57, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[57, 3, 1, "", "fft"], [57, 3, 1, "", "fwht"], [57, 3, 1, "", "ifft"], [57, 3, 1, "", "ifwht"], [57, 3, 1, "", "intt"], [57, 3, 1, "", "inverse_mobius_transform"], [57, 3, 1, "", "mobius_transform"], [57, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[192, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[59, 1, 1, "", "FallingFactorial"], [59, 1, 1, "", "MultiFactorial"], [59, 1, 1, "", "RisingFactorial"], [59, 1, 1, "", "binomial"], [59, 1, 1, "", "factorial"], [59, 1, 1, "", "factorial2"], [59, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[59, 1, 1, "", "andre"], [59, 1, 1, "", "bell"], [59, 1, 1, "", "bernoulli"], [59, 1, 1, "", "catalan"], [59, 1, 1, "", "euler"], [59, 1, 1, "", "fibonacci"], [59, 1, 1, "", "genocchi"], [59, 1, 1, "", "harmonic"], [59, 1, 1, "", "lucas"], [59, 3, 1, "", "nC"], [59, 3, 1, "", "nP"], [59, 3, 1, "", "nT"], [59, 1, 1, "", "partition"], [59, 3, 1, "", "stirling"], [59, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[60, 1, 1, "", "Abs"], [60, 1, 1, "", "arg"], [60, 1, 1, "", "conjugate"], [60, 1, 1, "", "im"], [60, 1, 1, "", "periodic_argument"], [60, 1, 1, "", "polar_lift"], [60, 1, 1, "", "principal_branch"], [60, 1, 1, "", "re"], [60, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[60, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[60, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[60, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[60, 1, 1, "", "LambertW"], [60, 1, 1, "", "exp"], [60, 1, 1, "", "exp_polar"], [60, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[60, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[60, 2, 1, "", "as_real_imag"], [60, 4, 1, "", "base"], [60, 2, 1, "", "fdiff"], [60, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[60, 2, 1, "", "as_base_exp"], [60, 2, 1, "", "as_real_imag"], [60, 2, 1, "", "fdiff"], [60, 2, 1, "", "inverse"], [60, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[60, 1, 1, "", "HyperbolicFunction"], [60, 1, 1, "", "acosh"], [60, 1, 1, "", "acoth"], [60, 1, 1, "", "acsch"], [60, 1, 1, "", "asech"], [60, 1, 1, "", "asinh"], [60, 1, 1, "", "atanh"], [60, 1, 1, "", "cosh"], [60, 1, 1, "", "coth"], [60, 1, 1, "", "csch"], [60, 1, 1, "", "sech"], [60, 1, 1, "", "sinh"], [60, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[60, 2, 1, "", "fdiff"], [60, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[60, 2, 1, "", "as_real_imag"], [60, 2, 1, "", "fdiff"], [60, 2, 1, "", "inverse"], [60, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[60, 1, 1, "", "RoundFunction"], [60, 1, 1, "", "ceiling"], [60, 1, 1, "", "floor"], [60, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[60, 1, 1, "", "IdentityFunction"], [60, 1, 1, "", "Max"], [60, 1, 1, "", "Min"], [60, 3, 1, "", "cbrt"], [60, 3, 1, "", "real_root"], [60, 3, 1, "", "root"], [60, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[60, 1, 1, "", "ExprCondPair"], [60, 1, 1, "", "Piecewise"], [60, 3, 1, "", "piecewise_exclusive"], [60, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[60, 4, 1, "", "cond"], [60, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[60, 2, 1, "", "_eval_integral"], [60, 2, 1, "", "as_expr_set_pairs"], [60, 2, 1, "", "doit"], [60, 2, 1, "", "eval"], [60, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[60, 1, 1, "", "acos"], [60, 1, 1, "", "acot"], [60, 1, 1, "", "acsc"], [60, 1, 1, "", "asec"], [60, 1, 1, "", "asin"], [60, 1, 1, "", "atan"], [60, 1, 1, "", "atan2"], [60, 1, 1, "", "cos"], [60, 1, 1, "", "cot"], [60, 1, 1, "", "csc"], [60, 1, 1, "", "sec"], [60, 1, 1, "", "sin"], [60, 1, 1, "", "sinc"], [60, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[60, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[60, 2, 1, "", "inverse"]], "sympy.functions.special": [[62, 0, 0, "-", "bessel"], [62, 0, 0, "-", "beta_functions"], [62, 0, 0, "-", "elliptic_integrals"], [62, 0, 0, "-", "error_functions"], [62, 0, 0, "-", "gamma_functions"], [62, 0, 0, "-", "mathieu_functions"], [62, 0, 0, "-", "polynomials"], [62, 0, 0, "-", "singularity_functions"], [62, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[62, 1, 1, "", "AiryBase"], [62, 1, 1, "", "BesselBase"], [62, 1, 1, "", "airyai"], [62, 1, 1, "", "airyaiprime"], [62, 1, 1, "", "airybi"], [62, 1, 1, "", "airybiprime"], [62, 1, 1, "", "besseli"], [62, 1, 1, "", "besselj"], [62, 1, 1, "", "besselk"], [62, 1, 1, "", "bessely"], [62, 1, 1, "", "hankel1"], [62, 1, 1, "", "hankel2"], [62, 1, 1, "", "jn"], [62, 3, 1, "", "jn_zeros"], [62, 1, 1, "", "marcumq"], [62, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[62, 4, 1, "", "argument"], [62, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[62, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[62, 3, 1, "", "bspline_basis"], [62, 3, 1, "", "bspline_basis_set"], [62, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[62, 1, 1, "", "DiracDelta"], [62, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[62, 2, 1, "", "eval"], [62, 2, 1, "", "fdiff"], [62, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[62, 2, 1, "", "eval"], [62, 2, 1, "", "fdiff"], [62, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[62, 1, 1, "", "elliptic_e"], [62, 1, 1, "", "elliptic_f"], [62, 1, 1, "", "elliptic_k"], [62, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[62, 1, 1, "", "Chi"], [62, 1, 1, "", "Ci"], [62, 3, 1, "", "E1"], [62, 1, 1, "", "Ei"], [62, 1, 1, "", "FresnelIntegral"], [62, 1, 1, "", "Li"], [62, 1, 1, "", "Shi"], [62, 1, 1, "", "Si"], [62, 1, 1, "", "erf"], [62, 1, 1, "", "erf2"], [62, 1, 1, "", "erf2inv"], [62, 1, 1, "", "erfc"], [62, 1, 1, "", "erfcinv"], [62, 1, 1, "", "erfi"], [62, 1, 1, "", "erfinv"], [62, 1, 1, "", "expint"], [62, 1, 1, "", "fresnelc"], [62, 1, 1, "", "fresnels"], [62, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[62, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[62, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[62, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[62, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[62, 1, 1, "", "digamma"], [62, 1, 1, "", "gamma"], [62, 1, 1, "", "loggamma"], [62, 1, 1, "", "lowergamma"], [62, 1, 1, "", "multigamma"], [62, 1, 1, "", "polygamma"], [62, 1, 1, "", "trigamma"], [62, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[62, 1, 1, "", "appellf1"], [62, 1, 1, "", "hyper"], [62, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[62, 4, 1, "", "ap"], [62, 4, 1, "", "argument"], [62, 4, 1, "", "bq"], [62, 4, 1, "", "convergence_statement"], [62, 4, 1, "", "eta"], [62, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[62, 4, 1, "", "an"], [62, 4, 1, "", "aother"], [62, 4, 1, "", "ap"], [62, 4, 1, "", "argument"], [62, 4, 1, "", "bm"], [62, 4, 1, "", "bother"], [62, 4, 1, "", "bq"], [62, 4, 1, "", "delta"], [62, 2, 1, "", "get_period"], [62, 2, 1, "", "integrand"], [62, 4, 1, "", "is_number"], [62, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[62, 1, 1, "", "MathieuBase"], [62, 1, 1, "", "mathieuc"], [62, 1, 1, "", "mathieucprime"], [62, 1, 1, "", "mathieus"], [62, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[62, 1, 1, "", "assoc_laguerre"], [62, 1, 1, "", "assoc_legendre"], [62, 1, 1, "", "chebyshevt"], [62, 1, 1, "", "chebyshevt_root"], [62, 1, 1, "", "chebyshevu"], [62, 1, 1, "", "chebyshevu_root"], [62, 1, 1, "", "gegenbauer"], [62, 1, 1, "", "hermite"], [62, 1, 1, "", "hermite_prob"], [62, 1, 1, "", "jacobi"], [62, 3, 1, "", "jacobi_normalized"], [62, 1, 1, "", "laguerre"], [62, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[62, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[62, 2, 1, "", "eval"], [62, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[62, 1, 1, "", "Ynm"], [62, 3, 1, "", "Ynm_c"], [62, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[62, 3, 1, "", "Eijk"], [62, 1, 1, "", "KroneckerDelta"], [62, 1, 1, "", "LeviCivita"], [62, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[62, 2, 1, "", "eval"], [62, 4, 1, "", "indices_contain_equal_information"], [62, 4, 1, "", "is_above_fermi"], [62, 4, 1, "", "is_below_fermi"], [62, 4, 1, "", "is_only_above_fermi"], [62, 4, 1, "", "is_only_below_fermi"], [62, 4, 1, "", "killable_index"], [62, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[62, 1, 1, "", "dirichlet_eta"], [62, 1, 1, "", "lerchphi"], [62, 1, 1, "", "polylog"], [62, 1, 1, "", "stieltjes"], [62, 1, 1, "", "zeta"]], "sympy.geometry": [[63, 0, 0, "-", "curve"], [64, 0, 0, "-", "ellipse"], [65, 0, 0, "-", "entity"], [67, 0, 0, "-", "line"], [68, 0, 0, "-", "plane"], [69, 0, 0, "-", "point"], [70, 0, 0, "-", "polygon"], [71, 0, 0, "-", "util"]], "sympy.geometry.curve": [[63, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[63, 4, 1, "", "ambient_dimension"], [63, 2, 1, "", "arbitrary_point"], [63, 4, 1, "", "free_symbols"], [63, 4, 1, "", "functions"], [63, 4, 1, "", "length"], [63, 4, 1, "", "limits"], [63, 4, 1, "", "parameter"], [63, 2, 1, "", "plot_interval"], [63, 2, 1, "", "rotate"], [63, 2, 1, "", "scale"], [63, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[64, 1, 1, "", "Circle"], [64, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[64, 4, 1, "", "circumference"], [64, 2, 1, "", "equation"], [64, 2, 1, "", "intersection"], [64, 4, 1, "", "radius"], [64, 2, 1, "", "reflect"], [64, 2, 1, "", "scale"], [64, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[64, 4, 1, "", "apoapsis"], [64, 2, 1, "", "arbitrary_point"], [64, 4, 1, "", "area"], [64, 2, 1, "", "auxiliary_circle"], [64, 4, 1, "", "bounds"], [64, 4, 1, "", "center"], [64, 4, 1, "", "circumference"], [64, 2, 1, "", "director_circle"], [64, 4, 1, "", "eccentricity"], [64, 2, 1, "", "encloses_point"], [64, 2, 1, "", "equation"], [64, 2, 1, "", "evolute"], [64, 4, 1, "", "foci"], [64, 4, 1, "", "focus_distance"], [64, 4, 1, "", "hradius"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "is_tangent"], [64, 4, 1, "", "major"], [64, 4, 1, "", "minor"], [64, 2, 1, "", "normal_lines"], [64, 4, 1, "", "periapsis"], [64, 2, 1, "", "plot_interval"], [64, 2, 1, "", "polar_second_moment_of_area"], [64, 2, 1, "", "random_point"], [64, 2, 1, "", "reflect"], [64, 2, 1, "", "rotate"], [64, 2, 1, "", "scale"], [64, 2, 1, "", "second_moment_of_area"], [64, 2, 1, "", "section_modulus"], [64, 4, 1, "", "semilatus_rectum"], [64, 2, 1, "", "tangent_lines"], [64, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[65, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[65, 4, 1, "", "ambient_dimension"], [65, 4, 1, "", "bounds"], [65, 2, 1, "", "encloses"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "is_similar"], [65, 2, 1, "", "parameter_value"], [65, 2, 1, "", "reflect"], [65, 2, 1, "", "rotate"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "translate"]], "sympy.geometry.line": [[67, 1, 1, "", "Line"], [67, 1, 1, "", "Line2D"], [67, 1, 1, "", "Line3D"], [67, 1, 1, "", "LinearEntity"], [67, 1, 1, "", "LinearEntity2D"], [67, 1, 1, "", "LinearEntity3D"], [67, 1, 1, "", "Ray"], [67, 1, 1, "", "Ray2D"], [67, 1, 1, "", "Ray3D"], [67, 1, 1, "", "Segment"], [67, 1, 1, "", "Segment2D"], [67, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[67, 2, 1, "", "contains"], [67, 2, 1, "", "distance"], [67, 2, 1, "", "equals"], [67, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[67, 4, 1, "", "coefficients"], [67, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[67, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[67, 4, 1, "", "ambient_dimension"], [67, 2, 1, "", "angle_between"], [67, 2, 1, "", "arbitrary_point"], [67, 2, 1, "", "are_concurrent"], [67, 2, 1, "", "bisectors"], [67, 2, 1, "", "contains"], [67, 4, 1, "", "direction"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "is_parallel"], [67, 2, 1, "", "is_perpendicular"], [67, 2, 1, "", "is_similar"], [67, 4, 1, "", "length"], [67, 4, 1, "", "p1"], [67, 4, 1, "", "p2"], [67, 2, 1, "", "parallel_line"], [67, 2, 1, "", "perpendicular_line"], [67, 2, 1, "", "perpendicular_segment"], [67, 4, 1, "", "points"], [67, 2, 1, "", "projection"], [67, 2, 1, "", "random_point"], [67, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[67, 4, 1, "", "bounds"], [67, 2, 1, "", "perpendicular_line"], [67, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[67, 4, 1, "", "direction_cosine"], [67, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[67, 2, 1, "", "contains"], [67, 2, 1, "", "distance"], [67, 2, 1, "", "equals"], [67, 2, 1, "", "plot_interval"], [67, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[67, 2, 1, "", "closing_angle"], [67, 4, 1, "", "xdirection"], [67, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[67, 4, 1, "", "xdirection"], [67, 4, 1, "", "ydirection"], [67, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[67, 2, 1, "", "contains"], [67, 2, 1, "", "distance"], [67, 2, 1, "", "equals"], [67, 4, 1, "", "length"], [67, 4, 1, "", "midpoint"], [67, 2, 1, "", "perpendicular_bisector"], [67, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[68, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[68, 2, 1, "", "angle_between"], [68, 2, 1, "", "arbitrary_point"], [68, 2, 1, "", "are_concurrent"], [68, 2, 1, "", "distance"], [68, 2, 1, "", "equals"], [68, 2, 1, "", "equation"], [68, 2, 1, "", "intersection"], [68, 2, 1, "", "is_coplanar"], [68, 2, 1, "", "is_parallel"], [68, 2, 1, "", "is_perpendicular"], [68, 4, 1, "", "normal_vector"], [68, 4, 1, "", "p1"], [68, 2, 1, "", "parallel_plane"], [68, 2, 1, "", "parameter_value"], [68, 2, 1, "", "perpendicular_line"], [68, 2, 1, "", "perpendicular_plane"], [68, 2, 1, "", "projection"], [68, 2, 1, "", "projection_line"], [68, 2, 1, "", "random_point"]], "sympy.geometry.point": [[69, 1, 1, "", "Point"], [69, 1, 1, "", "Point2D"], [69, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[69, 2, 1, "", "affine_rank"], [69, 4, 1, "", "ambient_dimension"], [69, 2, 1, "", "are_coplanar"], [69, 2, 1, "", "canberra_distance"], [69, 2, 1, "", "distance"], [69, 2, 1, "", "dot"], [69, 2, 1, "", "equals"], [69, 2, 1, "", "intersection"], [69, 2, 1, "", "is_collinear"], [69, 2, 1, "", "is_concyclic"], [69, 4, 1, "", "is_nonzero"], [69, 2, 1, "", "is_scalar_multiple"], [69, 4, 1, "", "is_zero"], [69, 4, 1, "", "length"], [69, 2, 1, "", "midpoint"], [69, 4, 1, "", "origin"], [69, 4, 1, "", "orthogonal_direction"], [69, 2, 1, "", "project"], [69, 2, 1, "", "taxicab_distance"], [69, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[69, 4, 1, "", "bounds"], [69, 4, 1, "", "coordinates"], [69, 2, 1, "", "rotate"], [69, 2, 1, "", "scale"], [69, 2, 1, "", "transform"], [69, 2, 1, "", "translate"], [69, 4, 1, "", "x"], [69, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[69, 2, 1, "", "are_collinear"], [69, 4, 1, "", "coordinates"], [69, 2, 1, "", "direction_cosine"], [69, 2, 1, "", "direction_ratio"], [69, 2, 1, "", "intersection"], [69, 2, 1, "", "scale"], [69, 2, 1, "", "transform"], [69, 2, 1, "", "translate"], [69, 4, 1, "", "x"], [69, 4, 1, "", "y"], [69, 4, 1, "", "z"]], "sympy.geometry.polygon": [[70, 1, 1, "", "Polygon"], [70, 1, 1, "", "RegularPolygon"], [70, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[70, 4, 1, "", "angles"], [70, 2, 1, "", "arbitrary_point"], [70, 4, 1, "", "area"], [70, 2, 1, "", "bisectors"], [70, 4, 1, "", "bounds"], [70, 4, 1, "", "centroid"], [70, 2, 1, "", "cut_section"], [70, 2, 1, "", "distance"], [70, 2, 1, "", "encloses_point"], [70, 2, 1, "", "first_moment_of_area"], [70, 2, 1, "", "intersection"], [70, 2, 1, "", "is_convex"], [70, 4, 1, "", "perimeter"], [70, 2, 1, "", "plot_interval"], [70, 2, 1, "", "polar_second_moment_of_area"], [70, 2, 1, "", "second_moment_of_area"], [70, 2, 1, "", "section_modulus"], [70, 4, 1, "", "sides"], [70, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[70, 4, 1, "", "angles"], [70, 4, 1, "", "apothem"], [70, 4, 1, "", "area"], [70, 4, 1, "", "args"], [70, 4, 1, "", "center"], [70, 4, 1, "", "centroid"], [70, 4, 1, "", "circumcenter"], [70, 4, 1, "", "circumcircle"], [70, 4, 1, "", "circumradius"], [70, 2, 1, "", "encloses_point"], [70, 4, 1, "", "exterior_angle"], [70, 4, 1, "", "incircle"], [70, 4, 1, "", "inradius"], [70, 4, 1, "", "interior_angle"], [70, 4, 1, "", "length"], [70, 4, 1, "", "radius"], [70, 2, 1, "", "reflect"], [70, 2, 1, "", "rotate"], [70, 4, 1, "", "rotation"], [70, 2, 1, "", "scale"], [70, 2, 1, "", "spin"], [70, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[70, 4, 1, "", "altitudes"], [70, 2, 1, "", "bisectors"], [70, 4, 1, "", "circumcenter"], [70, 4, 1, "", "circumcircle"], [70, 4, 1, "", "circumradius"], [70, 4, 1, "", "eulerline"], [70, 4, 1, "", "excenters"], [70, 4, 1, "", "exradii"], [70, 4, 1, "", "incenter"], [70, 4, 1, "", "incircle"], [70, 4, 1, "", "inradius"], [70, 2, 1, "", "is_equilateral"], [70, 2, 1, "", "is_isosceles"], [70, 2, 1, "", "is_right"], [70, 2, 1, "", "is_scalene"], [70, 2, 1, "", "is_similar"], [70, 4, 1, "", "medial"], [70, 4, 1, "", "medians"], [70, 4, 1, "", "nine_point_circle"], [70, 4, 1, "", "orthocenter"], [70, 4, 1, "", "vertices"]], "sympy.geometry.util": [[71, 3, 1, "", "are_similar"], [71, 3, 1, "", "centroid"], [71, 3, 1, "", "convex_hull"], [71, 3, 1, "", "idiff"], [71, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[77, 1, 1, "", "DifferentialOperator"], [77, 1, 1, "", "DifferentialOperatorAlgebra"], [77, 3, 1, "", "DifferentialOperators"], [77, 1, 1, "", "HolonomicFunction"], [75, 3, 1, "", "_convert_poly_rat_alg"], [75, 3, 1, "", "_create_table"], [73, 3, 1, "", "expr_to_holonomic"], [73, 3, 1, "", "from_hyper"], [73, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[77, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[76, 2, 1, "", "composition"], [76, 2, 1, "", "diff"], [76, 2, 1, "", "evalf"], [76, 2, 1, "", "integrate"], [76, 2, 1, "", "series"], [76, 2, 1, "", "to_expr"], [76, 2, 1, "", "to_hyper"], [76, 2, 1, "", "to_meijerg"], [76, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[81, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[81, 3, 1, "", "components"], [81, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[81, 1, 1, "", "Integral"], [81, 3, 1, "", "integrate"], [81, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[81, 2, 1, "", "as_sum"], [81, 2, 1, "", "doit"], [81, 4, 1, "", "free_symbols"], [81, 6, 1, "", "is_commutative"], [81, 2, 1, "", "principal_value"], [81, 2, 1, "", "transform"]], "sympy.integrals": [[81, 0, 0, "-", "intpoly"], [79, 0, 0, "-", "meijerint"], [79, 0, 0, "-", "meijerint_doc"], [81, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[81, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[81, 3, 1, "", "integral_steps"], [81, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[79, 7, 1, "", "_CoeffExpValueError"], [79, 3, 1, "", "_check_antecedents"], [79, 3, 1, "", "_check_antecedents_1"], [79, 3, 1, "", "_check_antecedents_inversion"], [79, 3, 1, "", "_condsimp"], [79, 3, 1, "", "_create_lookup_table"], [79, 3, 1, "", "_dummy"], [79, 3, 1, "", "_dummy_"], [79, 3, 1, "", "_eval_cond"], [79, 3, 1, "", "_exponents"], [79, 3, 1, "", "_find_splitting_points"], [79, 3, 1, "", "_flip_g"], [79, 3, 1, "", "_functions"], [79, 3, 1, "", "_get_coeff_exp"], [79, 3, 1, "", "_guess_expansion"], [79, 3, 1, "", "_inflate_fox_h"], [79, 3, 1, "", "_inflate_g"], [79, 3, 1, "", "_int0oo"], [79, 3, 1, "", "_int0oo_1"], [79, 3, 1, "", "_int_inversion"], [79, 3, 1, "", "_is_analytic"], [79, 3, 1, "", "_meijerint_definite_2"], [79, 3, 1, "", "_meijerint_definite_3"], [79, 3, 1, "", "_meijerint_definite_4"], [79, 3, 1, "", "_meijerint_indefinite_1"], [79, 3, 1, "", "_mul_args"], [79, 3, 1, "", "_mul_as_two_parts"], [79, 3, 1, "", "_my_principal_branch"], [79, 3, 1, "", "_mytype"], [79, 3, 1, "", "_rewrite1"], [79, 3, 1, "", "_rewrite2"], [79, 3, 1, "", "_rewrite_inversion"], [79, 3, 1, "", "_rewrite_saxena"], [79, 3, 1, "", "_rewrite_saxena_1"], [79, 3, 1, "", "_rewrite_single"], [79, 3, 1, "", "_split_mul"], [79, 3, 1, "", "meijerint_definite"], [79, 3, 1, "", "meijerint_indefinite"], [79, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[81, 3, 1, "", "gauss_chebyshev_t"], [81, 3, 1, "", "gauss_chebyshev_u"], [81, 3, 1, "", "gauss_gen_laguerre"], [81, 3, 1, "", "gauss_hermite"], [81, 3, 1, "", "gauss_jacobi"], [81, 3, 1, "", "gauss_laguerre"], [81, 3, 1, "", "gauss_legendre"], [81, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[81, 3, 1, "", "ratint"], [81, 3, 1, "", "ratint_logpart"], [81, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[81, 1, 1, "", "NonElementaryIntegral"], [81, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[81, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[81, 1, 1, "", "CosineTransform"], [81, 1, 1, "", "FourierTransform"], [81, 1, 1, "", "HankelTransform"], [81, 1, 1, "", "IntegralTransform"], [81, 7, 1, "", "IntegralTransformError"], [81, 1, 1, "", "InverseCosineTransform"], [81, 1, 1, "", "InverseFourierTransform"], [81, 1, 1, "", "InverseHankelTransform"], [81, 1, 1, "", "InverseLaplaceTransform"], [81, 1, 1, "", "InverseMellinTransform"], [81, 1, 1, "", "InverseSineTransform"], [81, 1, 1, "", "LaplaceTransform"], [81, 1, 1, "", "MellinTransform"], [81, 1, 1, "", "SineTransform"], [81, 3, 1, "", "_fast_inverse_laplace"], [81, 3, 1, "", "_fourier_transform"], [81, 3, 1, "", "cosine_transform"], [81, 3, 1, "", "fourier_transform"], [81, 3, 1, "", "hankel_transform"], [81, 3, 1, "", "inverse_cosine_transform"], [81, 3, 1, "", "inverse_fourier_transform"], [81, 3, 1, "", "inverse_hankel_transform"], [81, 3, 1, "", "inverse_laplace_transform"], [81, 3, 1, "", "inverse_mellin_transform"], [81, 3, 1, "", "inverse_sine_transform"], [81, 3, 1, "", "laplace_transform"], [81, 3, 1, "", "mellin_transform"], [81, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[81, 2, 1, "", "doit"], [81, 4, 1, "", "function"], [81, 4, 1, "", "function_variable"], [81, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[81, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[82, 0, 0, "-", "printing"], [82, 0, 0, "-", "session"]], "sympy.interactive.printing": [[82, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[82, 3, 1, "", "enable_automatic_int_sympification"], [82, 3, 1, "", "enable_automatic_symbols"], [82, 3, 1, "", "init_ipython_session"], [82, 3, 1, "", "init_python_session"], [82, 3, 1, "", "init_session"], [82, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[83, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[83, 1, 1, "", "CartanType_generator"], [83, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[83, 2, 1, "", "rank"], [83, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[83, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[83, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[83, 2, 1, "", "add_as_roots"], [83, 2, 1, "", "add_simple_roots"], [83, 2, 1, "", "all_roots"], [83, 2, 1, "", "cartan_matrix"], [83, 2, 1, "", "dynkin_diagram"], [83, 2, 1, "", "root_space"], [83, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[83, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[83, 2, 1, "", "basic_root"], [83, 2, 1, "", "basis"], [83, 2, 1, "", "cartan_matrix"], [83, 2, 1, "", "dimension"], [83, 2, 1, "", "highest_root"], [83, 2, 1, "", "lie_algebra"], [83, 2, 1, "", "positive_roots"], [83, 2, 1, "", "roots"], [83, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[83, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[83, 2, 1, "", "basic_root"], [83, 2, 1, "", "basis"], [83, 2, 1, "", "cartan_matrix"], [83, 2, 1, "", "dimension"], [83, 2, 1, "", "lie_algebra"], [83, 2, 1, "", "positive_roots"], [83, 2, 1, "", "roots"], [83, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[83, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[83, 2, 1, "", "basic_root"], [83, 2, 1, "", "basis"], [83, 2, 1, "", "cartan_matrix"], [83, 2, 1, "", "dimension"], [83, 2, 1, "", "lie_algebra"], [83, 2, 1, "", "positive_roots"], [83, 2, 1, "", "roots"], [83, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[83, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[83, 2, 1, "", "basic_root"], [83, 2, 1, "", "basis"], [83, 2, 1, "", "cartan_matrix"], [83, 2, 1, "", "dimension"], [83, 2, 1, "", "lie_algebra"], [83, 2, 1, "", "positive_roots"], [83, 2, 1, "", "roots"], [83, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[83, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[83, 2, 1, "", "basic_root"], [83, 2, 1, "", "basis"], [83, 2, 1, "", "cartan_matrix"], [83, 2, 1, "", "dimension"], [83, 2, 1, "", "positive_roots"], [83, 2, 1, "", "roots"], [83, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[83, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[83, 2, 1, "", "basic_root"], [83, 2, 1, "", "basis"], [83, 2, 1, "", "cartan_matrix"], [83, 2, 1, "", "dimension"], [83, 2, 1, "", "positive_roots"], [83, 2, 1, "", "roots"], [83, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[83, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[83, 2, 1, "", "basis"], [83, 2, 1, "", "cartan_matrix"], [83, 2, 1, "", "dimension"], [83, 2, 1, "", "positive_roots"], [83, 2, 1, "", "roots"], [83, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[83, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[83, 2, 1, "", "coxeter_diagram"], [83, 2, 1, "", "delete_doubles"], [83, 2, 1, "", "element_order"], [83, 2, 1, "", "generators"], [83, 2, 1, "", "group_name"], [83, 2, 1, "", "group_order"], [83, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[84, 3, 1, "", "ANFform"], [84, 1, 1, "", "And"], [84, 1, 1, "", "Boolean"], [84, 1, 1, "", "BooleanFalse"], [84, 1, 1, "", "BooleanTrue"], [84, 1, 1, "", "Equivalent"], [84, 1, 1, "", "Exclusive"], [84, 1, 1, "", "ITE"], [84, 1, 1, "", "Implies"], [84, 1, 1, "", "Nand"], [84, 1, 1, "", "Nor"], [84, 1, 1, "", "Not"], [84, 1, 1, "", "Or"], [84, 3, 1, "", "POSform"], [84, 3, 1, "", "SOPform"], [84, 1, 1, "", "Xnor"], [84, 1, 1, "", "Xor"], [84, 3, 1, "", "anf_coeffs"], [84, 3, 1, "", "bool_map"], [84, 3, 1, "", "bool_maxterm"], [84, 3, 1, "", "bool_minterm"], [84, 3, 1, "", "bool_monomial"], [84, 3, 1, "", "distribute_and_over_or"], [84, 3, 1, "", "distribute_or_over_and"], [84, 3, 1, "", "distribute_xor_over_and"], [84, 3, 1, "", "eliminate_implications"], [84, 3, 1, "", "gateinputcount"], [84, 3, 1, "", "integer_to_term"], [84, 3, 1, "", "is_anf"], [84, 3, 1, "", "is_cnf"], [84, 3, 1, "", "is_dnf"], [84, 3, 1, "", "is_nnf"], [84, 3, 1, "", "simplify_logic"], [84, 3, 1, "", "term_to_integer"], [84, 3, 1, "", "to_anf"], [84, 3, 1, "", "to_cnf"], [84, 3, 1, "", "to_dnf"], [84, 3, 1, "", "to_int_repr"], [84, 3, 1, "", "to_nnf"], [84, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[84, 2, 1, "", "as_set"], [84, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[84, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[84, 2, 1, "", "as_set"]], "sympy.logic": [[84, 0, 0, "-", "inference"]], "sympy.logic.inference": [[84, 3, 1, "", "satisfiable"]], "sympy.matrices": [[85, 0, 0, "-", "common"], [87, 0, 0, "-", "expressions"], [88, 0, 0, "-", "immutable"], [90, 0, 0, "-", "matrices"], [92, 0, 0, "-", "sparse"], [93, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[85, 1, 1, "", "MatrixCommon"], [85, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[85, 4, 1, "", "C"], [85, 4, 1, "", "H"], [85, 4, 1, "", "T"], [85, 2, 1, "", "__abs__"], [85, 2, 1, "", "__add__"], [85, 2, 1, "", "__getitem__"], [85, 2, 1, "", "__len__"], [85, 2, 1, "", "__mul__"], [85, 2, 1, "", "__pow__"], [85, 5, 1, "", "__weakref__"], [85, 2, 1, "", "adjoint"], [85, 2, 1, "", "applyfunc"], [85, 2, 1, "", "as_real_imag"], [85, 2, 1, "", "atoms"], [85, 2, 1, "", "col"], [85, 2, 1, "", "col_del"], [85, 2, 1, "", "col_insert"], [85, 2, 1, "", "col_join"], [85, 2, 1, "", "companion"], [85, 2, 1, "", "conjugate"], [85, 2, 1, "", "diag"], [85, 2, 1, "", "diagonal"], [85, 2, 1, "", "evalf"], [85, 2, 1, "", "expand"], [85, 2, 1, "", "extract"], [85, 2, 1, "", "eye"], [85, 4, 1, "", "free_symbols"], [85, 2, 1, "", "get_diag_blocks"], [85, 2, 1, "", "has"], [85, 2, 1, "", "hstack"], [85, 2, 1, "", "is_anti_symmetric"], [85, 2, 1, "", "is_diagonal"], [85, 4, 1, "", "is_hermitian"], [85, 4, 1, "", "is_lower"], [85, 4, 1, "", "is_lower_hessenberg"], [85, 4, 1, "", "is_square"], [85, 4, 1, "", "is_strongly_diagonally_dominant"], [85, 2, 1, "", "is_symbolic"], [85, 2, 1, "", "is_symmetric"], [85, 4, 1, "", "is_upper"], [85, 4, 1, "", "is_upper_hessenberg"], [85, 4, 1, "", "is_weakly_diagonally_dominant"], [85, 4, 1, "", "is_zero_matrix"], [85, 2, 1, "", "jordan_block"], [85, 2, 1, "", "lower_triangular"], [85, 2, 1, "", "multiply"], [85, 2, 1, "", "multiply_elementwise"], [85, 2, 1, "", "n"], [85, 2, 1, "", "ones"], [85, 2, 1, "", "permute"], [85, 2, 1, "", "permute_cols"], [85, 2, 1, "", "permute_rows"], [85, 2, 1, "", "pow"], [85, 2, 1, "", "refine"], [85, 2, 1, "", "replace"], [85, 2, 1, "", "reshape"], [85, 2, 1, "", "rmultiply"], [85, 2, 1, "", "rot90"], [85, 2, 1, "", "row"], [85, 2, 1, "", "row_del"], [85, 2, 1, "", "row_insert"], [85, 2, 1, "", "row_join"], [85, 4, 1, "", "shape"], [85, 2, 1, "", "simplify"], [85, 2, 1, "", "subs"], [85, 2, 1, "", "todod"], [85, 2, 1, "", "todok"], [85, 2, 1, "", "tolist"], [85, 2, 1, "", "trace"], [85, 2, 1, "", "transpose"], [85, 2, 1, "", "upper_triangular"], [85, 2, 1, "", "values"], [85, 2, 1, "", "vec"], [85, 2, 1, "", "vech"], [85, 2, 1, "", "vstack"], [85, 2, 1, "", "wilkinson"], [85, 2, 1, "", "xreplace"], [85, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[86, 1, 1, "", "DenseMatrix"], [90, 3, 1, "", "GramSchmidt"], [86, 5, 1, "", "Matrix"], [86, 1, 1, "", "MutableDenseMatrix"], [90, 3, 1, "", "casoratian"], [90, 3, 1, "", "diag"], [90, 3, 1, "", "eye"], [90, 3, 1, "", "hessian"], [90, 3, 1, "", "jordan_cell"], [90, 3, 1, "", "list2numpy"], [90, 3, 1, "", "matrix2numpy"], [90, 3, 1, "", "matrix_multiply_elementwise"], [90, 3, 1, "", "ones"], [90, 3, 1, "", "randMatrix"], [90, 3, 1, "", "rot_axis1"], [90, 3, 1, "", "rot_axis2"], [90, 3, 1, "", "rot_axis3"], [90, 3, 1, "", "symarray"], [90, 3, 1, "", "wronskian"], [90, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[86, 2, 1, "", "LDLdecomposition"], [86, 2, 1, "", "as_immutable"], [86, 2, 1, "", "as_mutable"], [86, 2, 1, "", "cholesky"], [86, 2, 1, "", "lower_triangular_solve"], [86, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[86, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[87, 1, 1, "", "CompanionMatrix"], [87, 1, 1, "", "FunctionMatrix"], [87, 1, 1, "", "HadamardPower"], [87, 1, 1, "", "HadamardProduct"], [87, 1, 1, "", "Identity"], [87, 1, 1, "", "Inverse"], [87, 1, 1, "", "MatAdd"], [87, 1, 1, "", "MatMul"], [87, 1, 1, "", "MatPow"], [87, 1, 1, "", "MatrixExpr"], [87, 1, 1, "", "MatrixPermute"], [87, 1, 1, "", "MatrixSet"], [87, 1, 1, "", "MatrixSymbol"], [87, 1, 1, "", "PermutationMatrix"], [87, 1, 1, "", "Trace"], [87, 1, 1, "", "Transpose"], [87, 1, 1, "", "ZeroMatrix"], [87, 0, 0, "-", "blockmatrix"], [87, 3, 1, "", "hadamard_product"]], "sympy.matrices.expressions.MatrixExpr": [[87, 4, 1, "", "T"], [87, 2, 1, "", "as_coeff_Mul"], [87, 2, 1, "", "as_explicit"], [87, 2, 1, "", "as_mutable"], [87, 2, 1, "", "equals"], [87, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[87, 1, 1, "", "BlockDiagMatrix"], [87, 1, 1, "", "BlockMatrix"], [87, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[87, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[87, 2, 1, "", "LDUdecomposition"], [87, 2, 1, "", "LUdecomposition"], [87, 2, 1, "", "UDLdecomposition"], [87, 2, 1, "", "schur"], [87, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[88, 1, 1, "", "ImmutableDenseMatrix"], [88, 5, 1, "", "ImmutableMatrix"], [92, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[90, 1, 1, "", "MatrixBase"], [90, 1, 1, "", "MatrixCalculus"], [90, 1, 1, "", "MatrixDeterminant"], [90, 1, 1, "", "MatrixEigen"], [90, 1, 1, "", "MatrixError"], [90, 1, 1, "", "MatrixReductions"], [90, 1, 1, "", "MatrixSubspaces"], [90, 1, 1, "", "NonSquareMatrixError"], [90, 1, 1, "", "ShapeError"], [90, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[90, 4, 1, "", "D"], [90, 2, 1, "", "LDLdecomposition"], [90, 2, 1, "", "LDLsolve"], [90, 2, 1, "", "LUdecomposition"], [90, 2, 1, "", "LUdecompositionFF"], [90, 2, 1, "", "LUdecomposition_Simple"], [90, 2, 1, "", "LUsolve"], [90, 2, 1, "", "QRdecomposition"], [90, 2, 1, "", "QRsolve"], [90, 2, 1, "", "add"], [90, 2, 1, "", "analytic_func"], [90, 2, 1, "", "cholesky"], [90, 2, 1, "", "cholesky_solve"], [90, 2, 1, "", "condition_number"], [90, 2, 1, "", "connected_components"], [90, 2, 1, "", "connected_components_decomposition"], [90, 2, 1, "", "copy"], [90, 2, 1, "", "cross"], [90, 2, 1, "", "diagonal_solve"], [90, 2, 1, "", "dot"], [90, 2, 1, "", "dual"], [90, 2, 1, "", "exp"], [90, 2, 1, "", "gauss_jordan_solve"], [90, 2, 1, "", "inv"], [90, 2, 1, "", "inv_mod"], [90, 2, 1, "", "inverse_ADJ"], [90, 2, 1, "", "inverse_BLOCK"], [90, 2, 1, "", "inverse_CH"], [90, 2, 1, "", "inverse_GE"], [90, 2, 1, "", "inverse_LDL"], [90, 2, 1, "", "inverse_LU"], [90, 2, 1, "", "inverse_QR"], [90, 2, 1, "", "irregular"], [90, 2, 1, "", "is_nilpotent"], [90, 2, 1, "", "key2bounds"], [90, 2, 1, "", "key2ij"], [90, 2, 1, "", "log"], [90, 2, 1, "", "lower_triangular_solve"], [90, 2, 1, "", "norm"], [90, 2, 1, "", "normalized"], [90, 2, 1, "", "pinv"], [90, 2, 1, "", "pinv_solve"], [90, 2, 1, "", "print_nonzero"], [90, 2, 1, "", "project"], [90, 2, 1, "", "rank_decomposition"], [90, 2, 1, "", "singular_value_decomposition"], [90, 2, 1, "", "solve"], [90, 2, 1, "", "solve_least_squares"], [90, 2, 1, "", "strongly_connected_components"], [90, 2, 1, "", "strongly_connected_components_decomposition"], [90, 2, 1, "", "table"], [90, 2, 1, "", "upper_hessenberg_decomposition"], [90, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[90, 2, 1, "", "diff"], [90, 2, 1, "", "integrate"], [90, 2, 1, "", "jacobian"], [90, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[90, 2, 1, "", "adjugate"], [90, 2, 1, "", "charpoly"], [90, 2, 1, "", "cofactor"], [90, 2, 1, "", "cofactor_matrix"], [90, 2, 1, "", "det"], [90, 2, 1, "", "minor"], [90, 2, 1, "", "minor_submatrix"], [90, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[90, 2, 1, "", "bidiagonal_decomposition"], [90, 2, 1, "", "bidiagonalize"], [90, 2, 1, "", "diagonalize"], [90, 2, 1, "", "eigenvals"], [90, 2, 1, "", "eigenvects"], [90, 2, 1, "", "is_diagonalizable"], [90, 4, 1, "", "is_indefinite"], [90, 4, 1, "", "is_negative_definite"], [90, 4, 1, "", "is_negative_semidefinite"], [90, 4, 1, "", "is_positive_definite"], [90, 4, 1, "", "is_positive_semidefinite"], [90, 2, 1, "", "jordan_form"], [90, 2, 1, "", "left_eigenvects"], [90, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[90, 2, 1, "", "echelon_form"], [90, 2, 1, "", "elementary_col_op"], [90, 2, 1, "", "elementary_row_op"], [90, 4, 1, "", "is_echelon"], [90, 2, 1, "", "rank"], [90, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[90, 2, 1, "", "columnspace"], [90, 2, 1, "", "nullspace"], [90, 2, 1, "", "orthogonalize"], [90, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[91, 3, 1, "", "hermite_normal_form"], [91, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[92, 1, 1, "", "MutableSparseMatrix"], [92, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[93, 2, 1, "", "_csrtodok"], [93, 2, 1, "", "_doktocsr"], [93, 2, 1, "", "banded"]], "sympy.ntheory": [[94, 0, 0, "-", "bbp_pi"], [94, 0, 0, "-", "continued_fraction"], [94, 0, 0, "-", "digits"], [94, 0, 0, "-", "ecm"], [94, 0, 0, "-", "egyptian_fraction"], [94, 0, 0, "-", "factor_"], [94, 0, 0, "-", "generate"], [94, 1, 1, "", "mobius"], [94, 0, 0, "-", "modular"], [94, 0, 0, "-", "multinomial"], [94, 0, 0, "-", "partitions_"], [94, 0, 0, "-", "primetest"], [94, 0, 0, "-", "qs"], [94, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[94, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[94, 3, 1, "", "continued_fraction"], [94, 3, 1, "", "continued_fraction_convergents"], [94, 3, 1, "", "continued_fraction_iterator"], [94, 3, 1, "", "continued_fraction_periodic"], [94, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[94, 3, 1, "", "count_digits"], [94, 3, 1, "", "digits"], [94, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[94, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[94, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[94, 3, 1, "", "abundance"], [94, 3, 1, "", "antidivisor_count"], [94, 3, 1, "", "antidivisors"], [94, 3, 1, "", "core"], [94, 3, 1, "", "digits"], [94, 3, 1, "", "divisor_count"], [94, 1, 1, "", "divisor_sigma"], [94, 3, 1, "", "divisors"], [94, 3, 1, "", "factorint"], [94, 3, 1, "", "factorrat"], [94, 3, 1, "", "is_abundant"], [94, 3, 1, "", "is_amicable"], [94, 3, 1, "", "is_deficient"], [94, 3, 1, "", "is_mersenne_prime"], [94, 3, 1, "", "is_perfect"], [94, 3, 1, "", "mersenne_prime_exponent"], [94, 3, 1, "", "multiplicity"], [94, 3, 1, "", "perfect_power"], [94, 3, 1, "", "pollard_pm1"], [94, 3, 1, "", "pollard_rho"], [94, 3, 1, "", "primefactors"], [94, 1, 1, "", "primenu"], [94, 1, 1, "", "primeomega"], [94, 3, 1, "", "proper_divisor_count"], [94, 3, 1, "", "proper_divisors"], [94, 1, 1, "", "reduced_totient"], [94, 3, 1, "", "smoothness"], [94, 3, 1, "", "smoothness_p"], [94, 1, 1, "", "totient"], [94, 3, 1, "", "trailing"], [94, 3, 1, "", "udivisor_count"], [94, 1, 1, "", "udivisor_sigma"], [94, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[94, 1, 1, "", "Sieve"], [94, 3, 1, "", "composite"], [94, 3, 1, "", "compositepi"], [94, 3, 1, "", "cycle_length"], [94, 3, 1, "", "nextprime"], [94, 3, 1, "", "prevprime"], [94, 3, 1, "", "prime"], [94, 3, 1, "", "primepi"], [94, 3, 1, "", "primerange"], [94, 3, 1, "", "primorial"], [94, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[94, 2, 1, "", "extend"], [94, 2, 1, "", "extend_to_no"], [94, 2, 1, "", "mobiusrange"], [94, 2, 1, "", "primerange"], [94, 2, 1, "", "search"], [94, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[94, 3, 1, "", "crt"], [94, 3, 1, "", "crt1"], [94, 3, 1, "", "crt2"], [94, 3, 1, "", "solve_congruence"], [94, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[94, 3, 1, "", "binomial_coefficients"], [94, 3, 1, "", "binomial_coefficients_list"], [94, 3, 1, "", "multinomial_coefficients"], [94, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[94, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[94, 3, 1, "", "is_euler_pseudoprime"], [94, 3, 1, "", "is_extra_strong_lucas_prp"], [94, 3, 1, "", "is_gaussian_prime"], [94, 3, 1, "", "is_lucas_prp"], [94, 3, 1, "", "is_square"], [94, 3, 1, "", "is_strong_lucas_prp"], [94, 3, 1, "", "isprime"], [94, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[94, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[94, 3, 1, "", "discrete_log"], [94, 3, 1, "", "is_nthpow_residue"], [94, 3, 1, "", "is_primitive_root"], [94, 3, 1, "", "is_quad_residue"], [94, 3, 1, "", "jacobi_symbol"], [94, 3, 1, "", "legendre_symbol"], [94, 3, 1, "", "n_order"], [94, 3, 1, "", "nthroot_mod"], [94, 3, 1, "", "primitive_root"], [94, 3, 1, "", "quadratic_residues"], [94, 3, 1, "", "sqrt_mod"], [94, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[96, 1, 1, "", "LaTeXParsingError"], [96, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[96, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[96, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[96, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[96, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[96, 2, 1, "", "convert_to_c"], [96, 2, 1, "", "convert_to_expr"], [96, 2, 1, "", "convert_to_fortran"], [96, 2, 1, "", "convert_to_python"], [96, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[96, 3, 1, "", "auto_number"], [96, 3, 1, "", "auto_symbol"], [96, 3, 1, "", "convert_xor"], [96, 3, 1, "", "eval_expr"], [96, 3, 1, "", "factorial_notation"], [96, 3, 1, "", "function_exponentiation"], [96, 3, 1, "", "implicit_application"], [96, 3, 1, "", "implicit_multiplication"], [96, 3, 1, "", "implicit_multiplication_application"], [96, 3, 1, "", "lambda_notation"], [96, 3, 1, "", "parse_expr"], [96, 3, 1, "", "rationalize"], [96, 3, 1, "", "repeated_decimals"], [96, 3, 1, "", "split_symbols"], [96, 3, 1, "", "split_symbols_custom"], [96, 6, 1, "", "standard_transformations"], [96, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[97, 0, 0, "-", "beam"], [100, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[97, 1, 1, "", "Beam"], [97, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[97, 4, 1, "", "applied_loads"], [97, 2, 1, "", "apply_load"], [97, 2, 1, "", "apply_support"], [97, 4, 1, "", "area"], [97, 2, 1, "", "bending_moment"], [97, 4, 1, "", "boundary_conditions"], [97, 4, 1, "", "cross_section"], [97, 2, 1, "", "deflection"], [97, 2, 1, "", "draw"], [97, 4, 1, "", "elastic_modulus"], [97, 4, 1, "", "ild_moment"], [97, 4, 1, "", "ild_reactions"], [97, 4, 1, "", "ild_shear"], [97, 2, 1, "", "join"], [97, 4, 1, "", "length"], [97, 4, 1, "", "load"], [97, 2, 1, "", "max_bmoment"], [97, 2, 1, "", "max_deflection"], [97, 2, 1, "", "max_shear_force"], [97, 2, 1, "", "plot_bending_moment"], [97, 2, 1, "", "plot_deflection"], [97, 2, 1, "", "plot_ild_moment"], [97, 2, 1, "", "plot_ild_reactions"], [97, 2, 1, "", "plot_ild_shear"], [97, 2, 1, "", "plot_loading_results"], [97, 2, 1, "", "plot_shear_force"], [97, 2, 1, "", "plot_shear_stress"], [97, 2, 1, "", "plot_slope"], [97, 2, 1, "", "point_cflexure"], [97, 4, 1, "", "reaction_loads"], [97, 2, 1, "", "remove_load"], [97, 4, 1, "", "second_moment"], [97, 2, 1, "", "shear_force"], [97, 2, 1, "", "shear_stress"], [97, 2, 1, "", "slope"], [97, 2, 1, "", "solve_for_ild_moment"], [97, 2, 1, "", "solve_for_ild_reactions"], [97, 2, 1, "", "solve_for_ild_shear"], [97, 2, 1, "", "solve_for_reaction_loads"], [97, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[97, 2, 1, "", "angular_deflection"], [97, 2, 1, "", "apply_load"], [97, 2, 1, "", "apply_moment_load"], [97, 4, 1, "", "area"], [97, 2, 1, "", "axial_force"], [97, 2, 1, "", "axial_stress"], [97, 2, 1, "", "bending_moment"], [97, 4, 1, "", "boundary_conditions"], [97, 2, 1, "", "deflection"], [97, 4, 1, "", "load_vector"], [97, 2, 1, "", "max_bending_moment"], [97, 2, 1, "", "max_bmoment"], [97, 2, 1, "", "max_deflection"], [97, 2, 1, "", "max_shear_force"], [97, 4, 1, "", "moment_load_vector"], [97, 2, 1, "", "plot_bending_moment"], [97, 2, 1, "", "plot_deflection"], [97, 2, 1, "", "plot_loading_results"], [97, 2, 1, "", "plot_shear_force"], [97, 2, 1, "", "plot_shear_stress"], [97, 2, 1, "", "plot_slope"], [97, 2, 1, "", "polar_moment"], [97, 4, 1, "", "second_moment"], [97, 2, 1, "", "shear_force"], [97, 4, 1, "", "shear_modulus"], [97, 2, 1, "", "shear_stress"], [97, 2, 1, "", "slope"], [97, 2, 1, "", "solve_for_reaction_loads"], [97, 2, 1, "", "solve_for_torsion"], [97, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.truss": [[100, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[100, 2, 1, "", "add_member"], [100, 2, 1, "", "add_node"], [100, 2, 1, "", "apply_load"], [100, 2, 1, "", "apply_support"], [100, 2, 1, "", "change_member_label"], [100, 2, 1, "", "change_node_label"], [100, 4, 1, "", "internal_forces"], [100, 4, 1, "", "loads"], [100, 4, 1, "", "member_labels"], [100, 4, 1, "", "members"], [100, 4, 1, "", "node_labels"], [100, 4, 1, "", "node_positions"], [100, 4, 1, "", "nodes"], [100, 4, 1, "", "reaction_loads"], [100, 2, 1, "", "remove_load"], [100, 2, 1, "", "remove_member"], [100, 2, 1, "", "remove_node"], [100, 2, 1, "", "remove_support"], [100, 2, 1, "", "solve"], [100, 4, 1, "", "supports"]], "sympy.physics": [[103, 0, 0, "-", "control"], [106, 0, 0, "-", "hydrogen"], [107, 0, 0, "-", "matrices"], [127, 0, 0, "-", "mechanics"], [142, 0, 0, "-", "paulialgebra"], [143, 0, 0, "-", "qho_1d"], [167, 0, 0, "-", "secondquant"], [168, 0, 0, "-", "sho"], [183, 0, 0, "-", "vector"], [186, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[102, 2, 1, "", "bode_magnitude_numerical_data"], [102, 2, 1, "", "bode_magnitude_plot"], [102, 2, 1, "", "bode_phase_numerical_data"], [102, 2, 1, "", "bode_phase_plot"], [102, 2, 1, "", "bode_plot"], [102, 2, 1, "", "impulse_response_numerical_data"], [102, 2, 1, "", "impulse_response_plot"], [102, 2, 1, "", "pole_zero_numerical_data"], [102, 2, 1, "", "pole_zero_plot"], [102, 2, 1, "", "ramp_response_numerical_data"], [102, 2, 1, "", "ramp_response_plot"], [102, 2, 1, "", "step_response_numerical_data"], [102, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[104, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[104, 1, 1, "", "Feedback"], [104, 1, 1, "", "MIMOFeedback"], [104, 1, 1, "", "MIMOParallel"], [104, 1, 1, "", "MIMOSeries"], [104, 1, 1, "", "Parallel"], [104, 1, 1, "", "Series"], [104, 1, 1, "", "TransferFunction"], [104, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[104, 2, 1, "", "doit"], [104, 4, 1, "", "sensitivity"], [104, 4, 1, "", "sign"], [104, 4, 1, "", "sys1"], [104, 4, 1, "", "sys2"], [104, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[104, 2, 1, "", "doit"], [104, 4, 1, "", "sensitivity"], [104, 4, 1, "", "sign"], [104, 4, 1, "", "sys1"], [104, 4, 1, "", "sys2"], [104, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[104, 2, 1, "", "doit"], [104, 4, 1, "", "num_inputs"], [104, 4, 1, "", "num_outputs"], [104, 4, 1, "", "shape"], [104, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[104, 2, 1, "", "doit"], [104, 4, 1, "", "num_inputs"], [104, 4, 1, "", "num_outputs"], [104, 4, 1, "", "shape"], [104, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[104, 2, 1, "", "doit"], [104, 4, 1, "", "is_biproper"], [104, 4, 1, "", "is_proper"], [104, 4, 1, "", "is_strictly_proper"], [104, 2, 1, "", "to_expr"], [104, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[104, 2, 1, "", "doit"], [104, 4, 1, "", "is_biproper"], [104, 4, 1, "", "is_proper"], [104, 4, 1, "", "is_strictly_proper"], [104, 2, 1, "", "to_expr"], [104, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[104, 2, 1, "", "dc_gain"], [104, 4, 1, "", "den"], [104, 2, 1, "", "expand"], [104, 2, 1, "", "from_rational_expression"], [104, 4, 1, "", "is_biproper"], [104, 4, 1, "", "is_proper"], [104, 2, 1, "", "is_stable"], [104, 4, 1, "", "is_strictly_proper"], [104, 4, 1, "", "num"], [104, 2, 1, "", "poles"], [104, 2, 1, "", "to_expr"], [104, 4, 1, "", "var"], [104, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[104, 2, 1, "", "elem_poles"], [104, 2, 1, "", "elem_zeros"], [104, 2, 1, "", "expand"], [104, 2, 1, "", "from_Matrix"], [104, 4, 1, "", "num_inputs"], [104, 4, 1, "", "num_outputs"], [104, 4, 1, "", "shape"], [104, 2, 1, "", "transpose"], [104, 4, 1, "", "var"]], "sympy.physics.hep": [[105, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[105, 3, 1, "", "extract_type_tens"], [105, 3, 1, "", "gamma_trace"], [105, 3, 1, "", "kahane_simplify"], [105, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[106, 3, 1, "", "E_nl"], [106, 3, 1, "", "E_nl_dirac"], [106, 3, 1, "", "Psi_nlm"], [106, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[107, 3, 1, "", "mdft"], [107, 3, 1, "", "mgamma"], [107, 3, 1, "", "msigma"], [107, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[109, 0, 0, "-", "body"], [110, 3, 1, "", "find_dynamicsymbols"], [111, 0, 0, "-", "joint"], [111, 0, 0, "-", "jointsmethod"], [112, 0, 0, "-", "kane"], [112, 0, 0, "-", "lagrange"], [113, 0, 0, "-", "linearize"], [110, 3, 1, "", "msubs"], [114, 0, 0, "-", "particle"], [114, 0, 0, "-", "rigidbody"], [116, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[109, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[109, 2, 1, "", "ang_vel_in"], [109, 2, 1, "", "apply_force"], [109, 2, 1, "", "apply_torque"], [109, 2, 1, "", "clear_loads"], [109, 2, 1, "", "dcm"], [109, 4, 1, "", "inertia"], [109, 2, 1, "", "kinetic_energy"], [109, 2, 1, "", "masscenter_vel"], [109, 2, 1, "", "parallel_axis"], [109, 2, 1, "", "remove_load"], [109, 4, 1, "", "x"], [109, 4, 1, "", "y"], [109, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[114, 3, 1, "", "Lagrangian"], [114, 3, 1, "", "angular_momentum"], [114, 3, 1, "", "inertia"], [114, 3, 1, "", "inertia_of_point_mass"], [114, 3, 1, "", "kinetic_energy"], [114, 3, 1, "", "linear_momentum"], [114, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[111, 1, 1, "", "Joint"], [111, 1, 1, "", "PinJoint"], [111, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[111, 4, 1, "", "child"], [111, 4, 1, "", "child_axis"], [111, 4, 1, "", "child_point"], [111, 4, 1, "", "coordinates"], [111, 4, 1, "", "kdes"], [111, 4, 1, "", "parent"], [111, 4, 1, "", "parent_axis"], [111, 4, 1, "", "parent_point"], [111, 4, 1, "", "speeds"]], "sympy.physics.mechanics.jointsmethod": [[111, 1, 1, "", "JointsMethod"]], "sympy.physics.mechanics.jointsmethod.JointsMethod": [[111, 4, 1, "", "bodies"], [111, 4, 1, "", "forcing"], [111, 4, 1, "", "forcing_full"], [111, 2, 1, "", "form_eoms"], [111, 4, 1, "", "kdes"], [111, 4, 1, "", "loads"], [111, 4, 1, "", "mass_matrix"], [111, 4, 1, "", "mass_matrix_full"], [111, 4, 1, "", "method"], [111, 4, 1, "", "q"], [111, 2, 1, "", "rhs"], [111, 4, 1, "", "u"]], "sympy.physics.mechanics.kane": [[112, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[112, 4, 1, "", "auxiliary_eqs"], [112, 4, 1, "", "forcing"], [112, 4, 1, "", "forcing_full"], [112, 2, 1, "", "kanes_equations"], [112, 2, 1, "", "kindiffdict"], [112, 2, 1, "", "linearize"], [112, 4, 1, "", "mass_matrix"], [112, 4, 1, "", "mass_matrix_full"], [112, 2, 1, "", "rhs"], [112, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[112, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[112, 4, 1, "", "forcing"], [112, 4, 1, "", "forcing_full"], [112, 2, 1, "", "form_lagranges_equations"], [112, 2, 1, "", "linearize"], [112, 4, 1, "", "mass_matrix"], [112, 4, 1, "", "mass_matrix_full"], [112, 2, 1, "", "rhs"], [112, 2, 1, "", "solve_multipliers"], [112, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[113, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[113, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[114, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[114, 2, 1, "", "angular_momentum"], [114, 2, 1, "", "kinetic_energy"], [114, 2, 1, "", "linear_momentum"], [114, 4, 1, "", "mass"], [114, 2, 1, "", "parallel_axis"], [114, 4, 1, "", "point"], [114, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[114, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[114, 2, 1, "", "angular_momentum"], [114, 4, 1, "", "central_inertia"], [114, 4, 1, "", "frame"], [114, 4, 1, "", "inertia"], [114, 2, 1, "", "kinetic_energy"], [114, 2, 1, "", "linear_momentum"], [114, 4, 1, "", "mass"], [114, 4, 1, "", "masscenter"], [114, 2, 1, "", "parallel_axis"], [114, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[116, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[116, 4, 1, "", "alg_con"], [116, 4, 1, "", "bodies"], [116, 4, 1, "", "comb_explicit_rhs"], [116, 4, 1, "", "comb_implicit_mat"], [116, 4, 1, "", "comb_implicit_rhs"], [116, 2, 1, "", "compute_explicit_form"], [116, 2, 1, "", "constant_symbols"], [116, 4, 1, "", "coordinates"], [116, 4, 1, "", "dyn_implicit_mat"], [116, 4, 1, "", "dyn_implicit_rhs"], [116, 2, 1, "", "dynamic_symbols"], [116, 4, 1, "", "kin_explicit_rhs"], [116, 4, 1, "", "loads"], [116, 4, 1, "", "speeds"], [116, 4, 1, "", "states"]], "sympy.physics.optics": [[136, 0, 0, "-", "gaussopt"], [138, 0, 0, "-", "medium"], [139, 0, 0, "-", "polarization"], [140, 0, 0, "-", "utils"], [141, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[136, 1, 1, "", "BeamParameter"], [136, 1, 1, "", "CurvedMirror"], [136, 1, 1, "", "CurvedRefraction"], [136, 1, 1, "", "FlatMirror"], [136, 1, 1, "", "FlatRefraction"], [136, 1, 1, "", "FreeSpace"], [136, 1, 1, "", "GeometricRay"], [136, 1, 1, "", "RayTransferMatrix"], [136, 1, 1, "", "ThinLens"], [136, 3, 1, "", "conjugate_gauss_beams"], [136, 3, 1, "", "gaussian_conj"], [136, 3, 1, "", "geometric_conj_ab"], [136, 3, 1, "", "geometric_conj_af"], [136, 3, 1, "", "geometric_conj_bf"], [136, 3, 1, "", "rayleigh2waist"], [136, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[136, 4, 1, "", "divergence"], [136, 4, 1, "", "gouy"], [136, 4, 1, "", "q"], [136, 4, 1, "", "radius"], [136, 4, 1, "", "w"], [136, 4, 1, "", "w_0"], [136, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[136, 4, 1, "", "angle"], [136, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[136, 4, 1, "", "A"], [136, 4, 1, "", "B"], [136, 4, 1, "", "C"], [136, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[138, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[138, 4, 1, "", "refractive_index"], [138, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[139, 3, 1, "", "half_wave_retarder"], [139, 3, 1, "", "jones_2_stokes"], [139, 3, 1, "", "jones_vector"], [139, 3, 1, "", "linear_polarizer"], [139, 3, 1, "", "mueller_matrix"], [139, 3, 1, "", "phase_retarder"], [139, 3, 1, "", "polarizing_beam_splitter"], [139, 3, 1, "", "quarter_wave_retarder"], [139, 3, 1, "", "reflective_filter"], [139, 3, 1, "", "stokes_vector"], [139, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[140, 3, 1, "", "brewster_angle"], [140, 3, 1, "", "critical_angle"], [140, 3, 1, "", "deviation"], [140, 3, 1, "", "fresnel_coefficients"], [140, 3, 1, "", "hyperfocal_distance"], [140, 3, 1, "", "lens_formula"], [140, 3, 1, "", "lens_makers_formula"], [140, 3, 1, "", "mirror_formula"], [140, 3, 1, "", "refraction_angle"], [140, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[141, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[141, 4, 1, "", "amplitude"], [141, 4, 1, "", "angular_velocity"], [141, 4, 1, "", "frequency"], [141, 4, 1, "", "n"], [141, 4, 1, "", "phase"], [141, 4, 1, "", "speed"], [141, 4, 1, "", "time_period"], [141, 4, 1, "", "wavelength"], [141, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[142, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[143, 3, 1, "", "E_n"], [143, 3, 1, "", "coherent_state"], [143, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[144, 0, 0, "-", "anticommutator"], [145, 0, 0, "-", "cartesian"], [146, 0, 0, "-", "cg"], [147, 0, 0, "-", "circuitplot"], [148, 0, 0, "-", "commutator"], [149, 0, 0, "-", "constants"], [150, 0, 0, "-", "dagger"], [151, 0, 0, "-", "gate"], [152, 0, 0, "-", "grover"], [153, 0, 0, "-", "hilbert"], [155, 0, 0, "-", "innerproduct"], [156, 0, 0, "-", "operator"], [157, 0, 0, "-", "operatorset"], [158, 0, 0, "-", "piab"], [159, 0, 0, "-", "qapply"], [160, 0, 0, "-", "qft"], [161, 0, 0, "-", "qubit"], [162, 0, 0, "-", "represent"], [163, 0, 0, "-", "shor"], [164, 0, 0, "-", "spin"], [165, 0, 0, "-", "state"], [166, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[144, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[144, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[145, 1, 1, "", "PositionBra3D"], [145, 1, 1, "", "PositionKet3D"], [145, 1, 1, "", "PositionState3D"], [145, 1, 1, "", "PxBra"], [145, 1, 1, "", "PxKet"], [145, 1, 1, "", "PxOp"], [145, 1, 1, "", "XBra"], [145, 1, 1, "", "XKet"], [145, 1, 1, "", "XOp"], [145, 1, 1, "", "YOp"], [145, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[145, 4, 1, "", "position_x"], [145, 4, 1, "", "position_y"], [145, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[145, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[145, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[145, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[145, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[146, 1, 1, "", "CG"], [146, 1, 1, "", "Wigner3j"], [146, 1, 1, "", "Wigner6j"], [146, 1, 1, "", "Wigner9j"], [146, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[147, 1, 1, "", "CircuitPlot"], [147, 3, 1, "", "CreateCGate"], [147, 1, 1, "", "Mx"], [147, 1, 1, "", "Mz"], [147, 3, 1, "", "circuit_plot"], [147, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[147, 2, 1, "", "control_line"], [147, 2, 1, "", "control_point"], [147, 2, 1, "", "not_point"], [147, 2, 1, "", "one_qubit_box"], [147, 2, 1, "", "swap_point"], [147, 2, 1, "", "two_qubit_box"], [147, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[148, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[148, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[149, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[150, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[151, 1, 1, "", "CGate"], [151, 1, 1, "", "CGateS"], [151, 5, 1, "", "CNOT"], [151, 1, 1, "", "CNotGate"], [151, 1, 1, "", "Gate"], [151, 5, 1, "", "H"], [151, 1, 1, "", "HadamardGate"], [151, 1, 1, "", "IdentityGate"], [151, 1, 1, "", "OneQubitGate"], [151, 5, 1, "", "Phase"], [151, 1, 1, "", "PhaseGate"], [151, 5, 1, "", "S"], [151, 5, 1, "", "SWAP"], [151, 1, 1, "", "SwapGate"], [151, 5, 1, "", "T"], [151, 1, 1, "", "TGate"], [151, 1, 1, "", "TwoQubitGate"], [151, 1, 1, "", "UGate"], [151, 5, 1, "", "X"], [151, 1, 1, "", "XGate"], [151, 5, 1, "", "Y"], [151, 1, 1, "", "YGate"], [151, 5, 1, "", "Z"], [151, 1, 1, "", "ZGate"], [151, 3, 1, "", "gate_simp"], [151, 3, 1, "", "gate_sort"], [151, 3, 1, "", "normalized"], [151, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[151, 4, 1, "", "controls"], [151, 2, 1, "", "decompose"], [151, 2, 1, "", "eval_controls"], [151, 4, 1, "", "gate"], [151, 4, 1, "", "min_qubits"], [151, 4, 1, "", "nqubits"], [151, 2, 1, "", "plot_gate"], [151, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[151, 4, 1, "", "controls"], [151, 4, 1, "", "gate"], [151, 4, 1, "", "min_qubits"], [151, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[151, 2, 1, "", "get_target_matrix"], [151, 4, 1, "", "min_qubits"], [151, 4, 1, "", "nqubits"], [151, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[151, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[151, 2, 1, "", "get_target_matrix"], [151, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[152, 1, 1, "", "OracleGate"], [152, 1, 1, "", "WGate"], [152, 3, 1, "", "apply_grover"], [152, 3, 1, "", "grover_iteration"], [152, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[152, 4, 1, "", "search_function"], [152, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[153, 1, 1, "", "ComplexSpace"], [153, 1, 1, "", "DirectSumHilbertSpace"], [153, 1, 1, "", "FockSpace"], [153, 1, 1, "", "HilbertSpace"], [153, 1, 1, "", "L2"], [153, 1, 1, "", "TensorPowerHilbertSpace"], [153, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[153, 2, 1, "", "eval"], [153, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[153, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[153, 2, 1, "", "eval"], [153, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[155, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[156, 1, 1, "", "DifferentialOperator"], [156, 1, 1, "", "HermitianOperator"], [156, 1, 1, "", "IdentityOperator"], [156, 1, 1, "", "Operator"], [156, 1, 1, "", "OuterProduct"], [156, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[156, 4, 1, "", "expr"], [156, 4, 1, "", "free_symbols"], [156, 4, 1, "", "function"], [156, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[156, 4, 1, "", "bra"], [156, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[157, 3, 1, "", "operators_to_state"], [157, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[158, 1, 1, "", "PIABBra"], [158, 1, 1, "", "PIABHamiltonian"], [158, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[159, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[160, 1, 1, "", "IQFT"], [160, 1, 1, "", "QFT"], [160, 5, 1, "", "Rk"], [160, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[160, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[160, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[161, 1, 1, "", "IntQubit"], [161, 1, 1, "", "IntQubitBra"], [161, 1, 1, "", "Qubit"], [161, 1, 1, "", "QubitBra"], [161, 3, 1, "", "matrix_to_density"], [161, 3, 1, "", "matrix_to_qubit"], [161, 3, 1, "", "measure_all"], [161, 3, 1, "", "measure_all_oneshot"], [161, 3, 1, "", "measure_partial"], [161, 3, 1, "", "measure_partial_oneshot"], [161, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[162, 3, 1, "", "enumerate_states"], [162, 3, 1, "", "get_basis"], [162, 3, 1, "", "integrate_result"], [162, 3, 1, "", "rep_expectation"], [162, 3, 1, "", "rep_innerproduct"], [162, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[163, 1, 1, "", "CMod"], [163, 3, 1, "", "period_find"], [163, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[163, 4, 1, "", "N"], [163, 4, 1, "", "a"], [163, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[164, 1, 1, "", "J2Op"], [164, 1, 1, "", "JxBra"], [164, 1, 1, "", "JxBraCoupled"], [164, 1, 1, "", "JxKet"], [164, 1, 1, "", "JxKetCoupled"], [164, 1, 1, "", "JyBra"], [164, 1, 1, "", "JyBraCoupled"], [164, 1, 1, "", "JyKet"], [164, 1, 1, "", "JyKetCoupled"], [164, 1, 1, "", "JzBra"], [164, 1, 1, "", "JzBraCoupled"], [164, 1, 1, "", "JzKet"], [164, 1, 1, "", "JzKetCoupled"], [164, 1, 1, "", "JzOp"], [164, 1, 1, "", "Rotation"], [164, 1, 1, "", "WignerD"], [164, 3, 1, "", "couple"], [164, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[164, 2, 1, "", "D"], [164, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[165, 1, 1, "", "Bra"], [165, 1, 1, "", "BraBase"], [165, 1, 1, "", "Ket"], [165, 1, 1, "", "KetBase"], [165, 1, 1, "", "OrthogonalBra"], [165, 1, 1, "", "OrthogonalKet"], [165, 1, 1, "", "OrthogonalState"], [165, 1, 1, "", "State"], [165, 1, 1, "", "StateBase"], [165, 1, 1, "", "TimeDepBra"], [165, 1, 1, "", "TimeDepKet"], [165, 1, 1, "", "TimeDepState"], [165, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[165, 4, 1, "", "dual"], [165, 2, 1, "", "dual_class"], [165, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[165, 4, 1, "", "label"], [165, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[165, 4, 1, "", "expr"], [165, 4, 1, "", "is_commutative"], [165, 4, 1, "", "is_normalized"], [165, 4, 1, "", "limits"], [165, 4, 1, "", "norm"], [165, 2, 1, "", "normalize"], [165, 2, 1, "", "prob"], [165, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[166, 1, 1, "", "TensorProduct"], [166, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[167, 1, 1, "", "AnnihilateBoson"], [167, 1, 1, "", "AnnihilateFermion"], [167, 1, 1, "", "AntiSymmetricTensor"], [167, 5, 1, "", "B"], [167, 5, 1, "", "BBra"], [167, 5, 1, "", "BKet"], [167, 5, 1, "", "Bd"], [167, 1, 1, "", "BosonicBasis"], [167, 1, 1, "", "Commutator"], [167, 1, 1, "", "CreateBoson"], [167, 1, 1, "", "CreateFermion"], [167, 1, 1, "", "Dagger"], [167, 5, 1, "", "F"], [167, 5, 1, "", "FBra"], [167, 5, 1, "", "FKet"], [167, 5, 1, "", "Fd"], [167, 1, 1, "", "FixedBosonicBasis"], [167, 1, 1, "", "FockState"], [167, 1, 1, "", "FockStateBosonBra"], [167, 1, 1, "", "FockStateBosonKet"], [167, 1, 1, "", "FockStateBra"], [167, 1, 1, "", "FockStateFermionBra"], [167, 1, 1, "", "FockStateFermionKet"], [167, 1, 1, "", "FockStateKet"], [167, 1, 1, "", "InnerProduct"], [167, 1, 1, "", "KroneckerDelta"], [167, 1, 1, "", "NO"], [167, 1, 1, "", "PermutationOperator"], [167, 1, 1, "", "VarBosonicBasis"], [167, 3, 1, "", "apply_operators"], [167, 3, 1, "", "contraction"], [167, 3, 1, "", "evaluate_deltas"], [167, 3, 1, "", "matrix_rep"], [167, 3, 1, "", "simplify_index_permutations"], [167, 3, 1, "", "substitute_dummies"], [167, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[167, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[167, 2, 1, "", "apply_operator"], [167, 4, 1, "", "is_only_q_annihilator"], [167, 4, 1, "", "is_only_q_creator"], [167, 4, 1, "", "is_q_annihilator"], [167, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[167, 4, 1, "", "lower"], [167, 4, 1, "", "symbol"], [167, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[167, 2, 1, "", "doit"], [167, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[167, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[167, 2, 1, "", "apply_operator"], [167, 4, 1, "", "is_only_q_annihilator"], [167, 4, 1, "", "is_only_q_creator"], [167, 4, 1, "", "is_q_annihilator"], [167, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[167, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[167, 2, 1, "", "index"], [167, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[167, 4, 1, "", "bra"], [167, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[167, 2, 1, "", "eval"], [167, 4, 1, "", "indices_contain_equal_information"], [167, 4, 1, "", "is_above_fermi"], [167, 4, 1, "", "is_below_fermi"], [167, 4, 1, "", "is_only_above_fermi"], [167, 4, 1, "", "is_only_below_fermi"], [167, 4, 1, "", "killable_index"], [167, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[167, 2, 1, "", "doit"], [167, 2, 1, "", "get_subNO"], [167, 4, 1, "", "has_q_annihilators"], [167, 4, 1, "", "has_q_creators"], [167, 2, 1, "", "iter_q_annihilators"], [167, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[167, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[167, 2, 1, "", "index"], [167, 2, 1, "", "state"]], "sympy.physics.sho": [[168, 3, 1, "", "E_nl"], [168, 3, 1, "", "R_nl"]], "sympy.physics.units": [[169, 0, 0, "-", "dimensions"], [173, 0, 0, "-", "prefixes"], [174, 0, 0, "-", "quantities"], [175, 0, 0, "-", "unitsystem"], [174, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[169, 1, 1, "", "Dimension"], [169, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[169, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[169, 4, 1, "", "can_transf_matrix"], [169, 4, 1, "", "dim"], [169, 2, 1, "", "dim_can_vector"], [169, 2, 1, "", "dim_vector"], [169, 4, 1, "", "inv_can_transf_matrix"], [169, 4, 1, "", "is_consistent"], [169, 2, 1, "", "is_dimensionless"], [169, 4, 1, "", "list_can_dims"], [169, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[173, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[174, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[174, 4, 1, "", "abbrev"], [174, 2, 1, "", "convert_to"], [174, 4, 1, "", "free_symbols"], [174, 4, 1, "", "is_prefixed"], [174, 4, 1, "", "scale_factor"], [174, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[175, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[175, 4, 1, "", "dim"], [175, 2, 1, "", "extend"], [175, 2, 1, "", "get_units_non_prefixed"], [175, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[174, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[177, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[177, 2, 1, "", "applyfunc"], [177, 2, 1, "", "cross"], [177, 2, 1, "", "doit"], [177, 2, 1, "", "dot"], [177, 2, 1, "", "dt"], [177, 2, 1, "", "express"], [177, 4, 1, "", "func"], [177, 2, 1, "", "simplify"], [177, 2, 1, "", "subs"], [177, 2, 1, "", "to_matrix"], [177, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[179, 3, 1, "", "dynamicsymbols"], [180, 0, 0, "-", "functions"], [180, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[178, 3, 1, "", "curl"], [178, 3, 1, "", "divergence"], [178, 3, 1, "", "gradient"], [178, 3, 1, "", "is_conservative"], [178, 3, 1, "", "is_solenoidal"], [178, 3, 1, "", "scalar_potential"], [178, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[177, 1, 1, "", "CoordinateSym"], [177, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[177, 2, 1, "", "ang_acc_in"], [177, 2, 1, "", "ang_vel_in"], [177, 2, 1, "", "dcm"], [177, 2, 1, "", "orient"], [177, 2, 1, "", "orient_axis"], [177, 2, 1, "", "orient_body_fixed"], [177, 2, 1, "", "orient_explicit"], [177, 2, 1, "", "orient_quaternion"], [177, 2, 1, "", "orient_space_fixed"], [177, 2, 1, "", "orientnew"], [177, 2, 1, "", "partial_velocity"], [177, 2, 1, "", "set_ang_acc"], [177, 2, 1, "", "set_ang_vel"], [177, 2, 1, "", "variable_map"], [177, 4, 1, "", "x"], [177, 4, 1, "", "y"], [177, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[179, 3, 1, "", "cross"], [179, 3, 1, "", "dot"], [179, 3, 1, "", "express"], [180, 3, 1, "", "get_motion_params"], [180, 3, 1, "", "kinematic_equations"], [179, 3, 1, "", "outer"], [180, 3, 1, "", "partial_velocity"], [179, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[180, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[180, 2, 1, "", "a1pt_theory"], [180, 2, 1, "", "a2pt_theory"], [180, 2, 1, "", "acc"], [180, 2, 1, "", "locatenew"], [180, 2, 1, "", "partial_velocity"], [180, 2, 1, "", "pos_from"], [180, 2, 1, "", "set_acc"], [180, 2, 1, "", "set_pos"], [180, 2, 1, "", "set_vel"], [180, 2, 1, "", "v1pt_theory"], [180, 2, 1, "", "v2pt_theory"], [180, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[181, 3, 1, "", "init_vprinting"], [181, 3, 1, "", "vlatex"], [181, 3, 1, "", "vpprint"], [181, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[177, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[177, 2, 1, "", "angle_between"], [177, 2, 1, "", "applyfunc"], [177, 2, 1, "", "cross"], [177, 2, 1, "", "diff"], [177, 2, 1, "", "doit"], [177, 2, 1, "", "dot"], [177, 2, 1, "", "dt"], [177, 2, 1, "", "express"], [177, 2, 1, "", "free_dynamicsymbols"], [177, 2, 1, "", "free_symbols"], [177, 4, 1, "", "func"], [177, 2, 1, "", "magnitude"], [177, 2, 1, "", "normalize"], [177, 2, 1, "", "outer"], [177, 2, 1, "", "separate"], [177, 2, 1, "", "simplify"], [177, 2, 1, "", "subs"], [177, 2, 1, "", "to_matrix"], [177, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[186, 3, 1, "", "clebsch_gordan"], [186, 3, 1, "", "dot_rot_grad_Ynm"], [186, 3, 1, "", "gaunt"], [186, 3, 1, "", "racah"], [186, 3, 1, "", "wigner_3j"], [186, 3, 1, "", "wigner_6j"], [186, 3, 1, "", "wigner_9j"], [186, 3, 1, "", "wigner_d"], [186, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[187, 0, 0, "-", "plot"], [187, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[187, 1, 1, "", "BaseBackend"], [187, 1, 1, "", "BaseSeries"], [187, 1, 1, "", "Line2DBaseSeries"], [187, 1, 1, "", "Line3DBaseSeries"], [187, 1, 1, "", "LineOver1DRangeSeries"], [187, 1, 1, "", "MatplotlibBackend"], [187, 1, 1, "", "Parametric2DLineSeries"], [187, 1, 1, "", "Parametric3DLineSeries"], [187, 1, 1, "", "ParametricSurfaceSeries"], [187, 1, 1, "", "Plot"], [187, 1, 1, "", "PlotGrid"], [187, 1, 1, "", "SurfaceBaseSeries"], [187, 1, 1, "", "SurfaceOver2DRangeSeries"], [187, 1, 1, "", "TextBackend"], [187, 3, 1, "", "plot"], [187, 3, 1, "", "plot3d"], [187, 3, 1, "", "plot3d_parametric_line"], [187, 3, 1, "", "plot3d_parametric_surface"], [187, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[187, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[187, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[187, 2, 1, "", "get_segments"], [187, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[187, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[187, 2, 1, "", "append"], [187, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[187, 1, 1, "", "ImplicitSeries"], [187, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[187, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[188, 1, 1, "", "ExtensionElement"], [188, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[188, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[188, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[188, 1, 1, "", "ModuleHomomorphism"], [188, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[188, 2, 1, "", "image"], [188, 2, 1, "", "is_injective"], [188, 2, 1, "", "is_isomorphism"], [188, 2, 1, "", "is_surjective"], [188, 2, 1, "", "is_zero"], [188, 2, 1, "", "kernel"], [188, 2, 1, "", "quotient_codomain"], [188, 2, 1, "", "quotient_domain"], [188, 2, 1, "", "restrict_codomain"], [188, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[188, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[188, 2, 1, "", "contains"], [188, 2, 1, "", "depth"], [188, 2, 1, "", "height"], [188, 2, 1, "", "intersect"], [188, 2, 1, "", "is_maximal"], [188, 2, 1, "", "is_primary"], [188, 2, 1, "", "is_prime"], [188, 2, 1, "", "is_principal"], [188, 2, 1, "", "is_radical"], [188, 2, 1, "", "is_whole_ring"], [188, 2, 1, "", "is_zero"], [188, 2, 1, "", "product"], [188, 2, 1, "", "quotient"], [188, 2, 1, "", "radical"], [188, 2, 1, "", "reduce_element"], [188, 2, 1, "", "saturate"], [188, 2, 1, "", "subset"], [188, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[188, 1, 1, "", "FreeModule"], [188, 1, 1, "", "FreeModuleElement"], [188, 1, 1, "", "Module"], [188, 1, 1, "", "QuotientModule"], [188, 1, 1, "", "QuotientModuleElement"], [188, 1, 1, "", "SubModule"], [188, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[188, 2, 1, "", "basis"], [188, 2, 1, "", "convert"], [188, 5, 1, "", "dtype"], [188, 2, 1, "", "identity_hom"], [188, 2, 1, "", "is_submodule"], [188, 2, 1, "", "is_zero"], [188, 2, 1, "", "multiply_ideal"], [188, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[188, 2, 1, "", "contains"], [188, 2, 1, "", "convert"], [188, 2, 1, "", "identity_hom"], [188, 2, 1, "", "is_submodule"], [188, 2, 1, "", "is_zero"], [188, 2, 1, "", "multiply_ideal"], [188, 2, 1, "", "quotient_module"], [188, 2, 1, "", "submodule"], [188, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[188, 2, 1, "", "convert"], [188, 5, 1, "", "dtype"], [188, 2, 1, "", "identity_hom"], [188, 2, 1, "", "is_submodule"], [188, 2, 1, "", "is_zero"], [188, 2, 1, "", "quotient_hom"], [188, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[188, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[188, 2, 1, "", "convert"], [188, 2, 1, "", "identity_hom"], [188, 2, 1, "", "in_terms_of_generators"], [188, 2, 1, "", "inclusion_hom"], [188, 2, 1, "", "intersect"], [188, 2, 1, "", "is_full_module"], [188, 2, 1, "", "is_submodule"], [188, 2, 1, "", "is_zero"], [188, 2, 1, "", "module_quotient"], [188, 2, 1, "", "multiply_ideal"], [188, 2, 1, "", "quotient_module"], [188, 2, 1, "", "reduce_element"], [188, 2, 1, "", "submodule"], [188, 2, 1, "", "syzygy_module"], [188, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[188, 2, 1, "", "is_full_module"], [188, 2, 1, "", "quotient_hom"]], "sympy.polys.appellseqs": [[197, 3, 1, "", "andre_poly"], [197, 3, 1, "", "bernoulli_c_poly"], [197, 3, 1, "", "bernoulli_poly"], [197, 3, 1, "", "euler_poly"], [197, 3, 1, "", "genocchi_poly"]], "sympy.polys.constructor": [[197, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[194, 3, 1, "", "dmp_abs"], [194, 3, 1, "", "dmp_add"], [194, 3, 1, "", "dmp_add_ground"], [194, 3, 1, "", "dmp_add_mul"], [194, 3, 1, "", "dmp_add_term"], [194, 3, 1, "", "dmp_div"], [194, 3, 1, "", "dmp_expand"], [194, 3, 1, "", "dmp_exquo"], [194, 3, 1, "", "dmp_exquo_ground"], [194, 3, 1, "", "dmp_ff_div"], [194, 3, 1, "", "dmp_l1_norm"], [194, 3, 1, "", "dmp_max_norm"], [194, 3, 1, "", "dmp_mul"], [194, 3, 1, "", "dmp_mul_ground"], [194, 3, 1, "", "dmp_mul_term"], [194, 3, 1, "", "dmp_neg"], [194, 3, 1, "", "dmp_pdiv"], [194, 3, 1, "", "dmp_pexquo"], [194, 3, 1, "", "dmp_pow"], [194, 3, 1, "", "dmp_pquo"], [194, 3, 1, "", "dmp_prem"], [194, 3, 1, "", "dmp_quo"], [194, 3, 1, "", "dmp_quo_ground"], [194, 3, 1, "", "dmp_rem"], [194, 3, 1, "", "dmp_rr_div"], [194, 3, 1, "", "dmp_sqr"], [194, 3, 1, "", "dmp_sub"], [194, 3, 1, "", "dmp_sub_ground"], [194, 3, 1, "", "dmp_sub_mul"], [194, 3, 1, "", "dmp_sub_term"], [194, 3, 1, "", "dup_lshift"], [194, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[194, 3, 1, "", "dmp_LC"], [194, 3, 1, "", "dmp_TC"], [194, 3, 1, "", "dmp_apply_pairs"], [194, 3, 1, "", "dmp_convert"], [194, 3, 1, "", "dmp_copy"], [194, 3, 1, "", "dmp_deflate"], [194, 3, 1, "", "dmp_degree"], [194, 3, 1, "", "dmp_degree_in"], [194, 3, 1, "", "dmp_degree_list"], [194, 3, 1, "", "dmp_eject"], [194, 3, 1, "", "dmp_exclude"], [194, 3, 1, "", "dmp_from_dict"], [194, 3, 1, "", "dmp_from_sympy"], [194, 3, 1, "", "dmp_ground"], [194, 3, 1, "", "dmp_ground_LC"], [194, 3, 1, "", "dmp_ground_TC"], [194, 3, 1, "", "dmp_ground_nth"], [194, 3, 1, "", "dmp_ground_p"], [194, 3, 1, "", "dmp_grounds"], [194, 3, 1, "", "dmp_include"], [194, 3, 1, "", "dmp_inflate"], [194, 3, 1, "", "dmp_inject"], [194, 3, 1, "", "dmp_list_terms"], [194, 3, 1, "", "dmp_multi_deflate"], [194, 3, 1, "", "dmp_negative_p"], [194, 3, 1, "", "dmp_nest"], [194, 3, 1, "", "dmp_normal"], [194, 3, 1, "", "dmp_nth"], [194, 3, 1, "", "dmp_one"], [194, 3, 1, "", "dmp_one_p"], [194, 3, 1, "", "dmp_permute"], [194, 3, 1, "", "dmp_positive_p"], [194, 3, 1, "", "dmp_raise"], [194, 3, 1, "", "dmp_slice"], [194, 3, 1, "", "dmp_strip"], [194, 3, 1, "", "dmp_swap"], [194, 3, 1, "", "dmp_terms_gcd"], [194, 3, 1, "", "dmp_to_dict"], [194, 3, 1, "", "dmp_to_tuple"], [194, 3, 1, "", "dmp_true_LT"], [194, 3, 1, "", "dmp_validate"], [194, 3, 1, "", "dmp_zero"], [194, 3, 1, "", "dmp_zero_p"], [194, 3, 1, "", "dmp_zeros"], [194, 3, 1, "", "dup_random"], [194, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[194, 3, 1, "", "dmp_clear_denoms"], [194, 3, 1, "", "dmp_compose"], [194, 3, 1, "", "dmp_diff"], [194, 3, 1, "", "dmp_diff_eval_in"], [194, 3, 1, "", "dmp_diff_in"], [194, 3, 1, "", "dmp_eval"], [194, 3, 1, "", "dmp_eval_in"], [194, 3, 1, "", "dmp_eval_tail"], [194, 3, 1, "", "dmp_ground_content"], [194, 3, 1, "", "dmp_ground_extract"], [194, 3, 1, "", "dmp_ground_monic"], [194, 3, 1, "", "dmp_ground_primitive"], [194, 3, 1, "", "dmp_ground_trunc"], [194, 3, 1, "", "dmp_integrate"], [194, 3, 1, "", "dmp_integrate_in"], [194, 3, 1, "", "dmp_lift"], [194, 3, 1, "", "dmp_revert"], [194, 3, 1, "", "dmp_trunc"], [194, 3, 1, "", "dup_content"], [194, 3, 1, "", "dup_decompose"], [194, 3, 1, "", "dup_extract"], [194, 3, 1, "", "dup_mirror"], [194, 3, 1, "", "dup_monic"], [194, 3, 1, "", "dup_primitive"], [194, 3, 1, "", "dup_real_imag"], [194, 3, 1, "", "dup_scale"], [194, 3, 1, "", "dup_shift"], [194, 3, 1, "", "dup_sign_variations"], [194, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[197, 3, 1, "", "dispersion"], [197, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[194, 3, 1, "", "sdm_LC"], [194, 3, 1, "", "sdm_LM"], [194, 3, 1, "", "sdm_LT"], [194, 3, 1, "", "sdm_add"], [194, 3, 1, "", "sdm_deg"], [194, 3, 1, "", "sdm_ecart"], [194, 3, 1, "", "sdm_from_dict"], [194, 3, 1, "", "sdm_from_vector"], [194, 3, 1, "", "sdm_groebner"], [194, 3, 1, "", "sdm_monomial_deg"], [194, 3, 1, "", "sdm_monomial_divides"], [194, 3, 1, "", "sdm_monomial_mul"], [194, 3, 1, "", "sdm_mul_term"], [194, 3, 1, "", "sdm_nf_mora"], [194, 3, 1, "", "sdm_spoly"], [194, 3, 1, "", "sdm_to_dict"], [194, 3, 1, "", "sdm_to_vector"], [194, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[192, 1, 1, "", "AlgebraicField"], [192, 1, 1, "", "ComplexField"], [192, 1, 1, "", "ExpressionDomain"], [192, 1, 1, "", "FiniteField"], [192, 1, 1, "", "FractionField"], [192, 1, 1, "", "GMPYFiniteField"], [192, 1, 1, "", "GMPYIntegerRing"], [192, 1, 1, "", "GMPYRationalField"], [192, 1, 1, "", "IntegerRing"], [192, 1, 1, "", "PolynomialRing"], [192, 1, 1, "", "PythonFiniteField"], [192, 1, 1, "", "PythonIntegerRing"], [192, 1, 1, "", "PythonRationalField"], [192, 1, 1, "", "RationalField"], [192, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[192, 2, 1, "", "algebraic_field"], [192, 2, 1, "", "denom"], [192, 2, 1, "", "discriminant"], [192, 5, 1, "", "dtype"], [192, 5, 1, "", "ext"], [192, 2, 1, "", "from_AlgebraicField"], [192, 2, 1, "", "from_GaussianIntegerRing"], [192, 2, 1, "", "from_GaussianRationalField"], [192, 2, 1, "", "from_QQ"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "integral_basis"], [192, 2, 1, "", "is_negative"], [192, 2, 1, "", "is_nonnegative"], [192, 2, 1, "", "is_nonpositive"], [192, 2, 1, "", "is_positive"], [192, 2, 1, "", "maximal_order"], [192, 5, 1, "", "mod"], [192, 2, 1, "", "numer"], [192, 5, 1, "", "orig_ext"], [192, 2, 1, "", "primes_above"], [192, 2, 1, "", "to_alg_num"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[192, 2, 1, "", "almosteq"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "get_exact"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "is_negative"], [192, 2, 1, "", "is_nonnegative"], [192, 2, 1, "", "is_nonpositive"], [192, 2, 1, "", "is_positive"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[192, 1, 1, "", "Expression"], [192, 2, 1, "", "denom"], [192, 5, 1, "", "dtype"], [192, 2, 1, "", "from_ExpressionDomain"], [192, 2, 1, "", "from_FractionField"], [192, 2, 1, "", "from_GaussianIntegerRing"], [192, 2, 1, "", "from_GaussianRationalField"], [192, 2, 1, "", "from_PolynomialRing"], [192, 2, 1, "", "from_QQ"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "get_field"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "is_negative"], [192, 2, 1, "", "is_nonnegative"], [192, 2, 1, "", "is_nonpositive"], [192, 2, 1, "", "is_positive"], [192, 2, 1, "", "numer"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[192, 2, 1, "", "characteristic"], [192, 2, 1, "", "from_FF"], [192, 2, 1, "", "from_FF_gmpy"], [192, 2, 1, "", "from_FF_python"], [192, 2, 1, "", "from_QQ"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "get_field"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[192, 2, 1, "", "denom"], [192, 2, 1, "", "factorial"], [192, 2, 1, "", "from_AlgebraicField"], [192, 2, 1, "", "from_ComplexField"], [192, 2, 1, "", "from_FractionField"], [192, 2, 1, "", "from_GaussianIntegerRing"], [192, 2, 1, "", "from_GaussianRationalField"], [192, 2, 1, "", "from_PolynomialRing"], [192, 2, 1, "", "from_QQ"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "is_negative"], [192, 2, 1, "", "is_nonnegative"], [192, 2, 1, "", "is_nonpositive"], [192, 2, 1, "", "is_positive"], [192, 2, 1, "", "numer"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[192, 2, 1, "", "factorial"], [192, 2, 1, "", "from_FF_gmpy"], [192, 2, 1, "", "from_FF_python"], [192, 2, 1, "", "from_QQ"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "gcdex"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "sqrt"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[192, 2, 1, "", "denom"], [192, 2, 1, "", "div"], [192, 2, 1, "", "exquo"], [192, 2, 1, "", "factorial"], [192, 2, 1, "", "from_GaussianRationalField"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "numer"], [192, 2, 1, "", "quo"], [192, 2, 1, "", "rem"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[192, 2, 1, "", "algebraic_field"], [192, 2, 1, "", "factorial"], [192, 2, 1, "", "from_AlgebraicField"], [192, 2, 1, "", "from_FF"], [192, 2, 1, "", "from_FF_gmpy"], [192, 2, 1, "", "from_FF_python"], [192, 2, 1, "", "from_QQ"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "gcdex"], [192, 2, 1, "", "get_field"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "log"], [192, 2, 1, "", "sqrt"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[192, 2, 1, "", "factorial"], [192, 2, 1, "", "from_AlgebraicField"], [192, 2, 1, "", "from_ComplexField"], [192, 2, 1, "", "from_FractionField"], [192, 2, 1, "", "from_GaussianIntegerRing"], [192, 2, 1, "", "from_GaussianRationalField"], [192, 2, 1, "", "from_GlobalPolynomialRing"], [192, 2, 1, "", "from_PolynomialRing"], [192, 2, 1, "", "from_QQ"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "gcdex"], [192, 2, 1, "", "get_field"], [192, 2, 1, "", "is_negative"], [192, 2, 1, "", "is_nonnegative"], [192, 2, 1, "", "is_nonpositive"], [192, 2, 1, "", "is_positive"], [192, 2, 1, "", "is_unit"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[192, 2, 1, "", "algebraic_field"], [192, 2, 1, "", "denom"], [192, 2, 1, "", "div"], [192, 2, 1, "", "exquo"], [192, 2, 1, "", "from_AlgebraicField"], [192, 2, 1, "", "from_GaussianRationalField"], [192, 2, 1, "", "from_QQ"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "numer"], [192, 2, 1, "", "quo"], [192, 2, 1, "", "rem"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[192, 2, 1, "", "almosteq"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "get_exact"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "to_rational"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[192, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[192, 2, 1, "", "drop"], [192, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[192, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[192, 2, 1, "", "abs"], [192, 2, 1, "", "add"], [192, 2, 1, "", "alg_field_from_poly"], [192, 2, 1, "", "algebraic_field"], [192, 2, 1, "", "almosteq"], [192, 2, 1, "", "characteristic"], [192, 2, 1, "", "cofactors"], [192, 2, 1, "", "convert"], [192, 2, 1, "", "convert_from"], [192, 2, 1, "", "cyclotomic_field"], [192, 2, 1, "", "denom"], [192, 2, 1, "", "div"], [192, 2, 1, "", "drop"], [192, 5, 1, "", "dtype"], [192, 2, 1, "", "evalf"], [192, 2, 1, "", "exquo"], [192, 2, 1, "", "frac_field"], [192, 2, 1, "", "from_AlgebraicField"], [192, 2, 1, "", "from_ComplexField"], [192, 2, 1, "", "from_ExpressionDomain"], [192, 2, 1, "", "from_ExpressionRawDomain"], [192, 2, 1, "", "from_FF"], [192, 2, 1, "", "from_FF_gmpy"], [192, 2, 1, "", "from_FF_python"], [192, 2, 1, "", "from_FractionField"], [192, 2, 1, "", "from_GlobalPolynomialRing"], [192, 2, 1, "", "from_MonogenicFiniteExtension"], [192, 2, 1, "", "from_PolynomialRing"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_RealField"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "gcdex"], [192, 2, 1, "", "get_exact"], [192, 2, 1, "", "get_field"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "half_gcdex"], [192, 5, 1, "", "has_assoc_Field"], [192, 5, 1, "", "has_assoc_Ring"], [192, 2, 1, "", "inject"], [192, 2, 1, "", "invert"], [192, 5, 1, "", "is_Field"], [192, 5, 1, "", "is_PID"], [192, 5, 1, "", "is_Ring"], [192, 2, 1, "", "is_negative"], [192, 2, 1, "", "is_nonnegative"], [192, 2, 1, "", "is_nonpositive"], [192, 2, 1, "", "is_one"], [192, 2, 1, "", "is_positive"], [192, 2, 1, "", "is_zero"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "log"], [192, 2, 1, "", "map"], [192, 2, 1, "", "mul"], [192, 2, 1, "", "n"], [192, 2, 1, "", "neg"], [192, 2, 1, "", "numer"], [192, 2, 1, "", "of_type"], [192, 2, 1, "", "old_frac_field"], [192, 2, 1, "", "old_poly_ring"], [192, 5, 1, "", "one"], [192, 2, 1, "", "poly_ring"], [192, 2, 1, "", "pos"], [192, 2, 1, "", "pow"], [192, 2, 1, "", "quo"], [192, 2, 1, "", "rem"], [192, 2, 1, "", "revert"], [192, 2, 1, "", "sqrt"], [192, 2, 1, "", "sub"], [192, 2, 1, "", "to_sympy"], [192, 4, 1, "", "tp"], [192, 2, 1, "", "unify"], [192, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[192, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[192, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[192, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[192, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[192, 2, 1, "", "div"], [192, 2, 1, "", "exquo"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "get_field"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "is_unit"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "quo"], [192, 2, 1, "", "rem"], [192, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[192, 1, 1, "", "GaussianDomain"], [192, 1, 1, "", "GaussianElement"], [192, 1, 1, "", "GaussianInteger"], [192, 1, 1, "", "GaussianIntegerRing"], [192, 1, 1, "", "GaussianRational"], [192, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[192, 2, 1, "", "from_AlgebraicField"], [192, 2, 1, "", "from_QQ"], [192, 2, 1, "", "from_QQ_gmpy"], [192, 2, 1, "", "from_QQ_python"], [192, 2, 1, "", "from_ZZ"], [192, 2, 1, "", "from_ZZ_gmpy"], [192, 2, 1, "", "from_ZZ_python"], [192, 2, 1, "", "from_sympy"], [192, 2, 1, "", "inject"], [192, 2, 1, "", "is_negative"], [192, 2, 1, "", "is_nonnegative"], [192, 2, 1, "", "is_nonpositive"], [192, 2, 1, "", "is_positive"], [192, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[192, 2, 1, "", "new"], [192, 2, 1, "", "parent"], [192, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[192, 5, 1, "", "dtype"], [192, 2, 1, "", "from_GaussianIntegerRing"], [192, 2, 1, "", "from_GaussianRationalField"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "get_field"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[192, 2, 1, "", "as_AlgebraicField"], [192, 2, 1, "", "denom"], [192, 5, 1, "", "dtype"], [192, 2, 1, "", "from_GaussianIntegerRing"], [192, 2, 1, "", "from_GaussianRationalField"], [192, 2, 1, "", "get_field"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[192, 1, 1, "", "ComplexElement"], [192, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[192, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[192, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[192, 2, 1, "", "denom"], [192, 2, 1, "", "div"], [192, 2, 1, "", "exquo"], [192, 2, 1, "", "free_module"], [192, 2, 1, "", "get_ring"], [192, 2, 1, "", "ideal"], [192, 2, 1, "", "invert"], [192, 2, 1, "", "numer"], [192, 2, 1, "", "quo"], [192, 2, 1, "", "quotient_ring"], [192, 2, 1, "", "rem"], [192, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[192, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[192, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[194, 3, 1, "", "dmp_cancel"], [194, 3, 1, "", "dmp_content"], [194, 3, 1, "", "dmp_discriminant"], [194, 3, 1, "", "dmp_euclidean_prs"], [194, 3, 1, "", "dmp_ff_prs_gcd"], [194, 3, 1, "", "dmp_gcd"], [194, 3, 1, "", "dmp_gcdex"], [194, 3, 1, "", "dmp_half_gcdex"], [194, 3, 1, "", "dmp_inner_gcd"], [194, 3, 1, "", "dmp_inner_subresultants"], [194, 3, 1, "", "dmp_invert"], [194, 3, 1, "", "dmp_lcm"], [194, 3, 1, "", "dmp_primitive"], [194, 3, 1, "", "dmp_primitive_prs"], [194, 3, 1, "", "dmp_prs_resultant"], [194, 3, 1, "", "dmp_qq_collins_resultant"], [194, 3, 1, "", "dmp_qq_heu_gcd"], [194, 3, 1, "", "dmp_resultant"], [194, 3, 1, "", "dmp_rr_prs_gcd"], [194, 3, 1, "", "dmp_subresultants"], [194, 3, 1, "", "dmp_zz_collins_resultant"], [194, 3, 1, "", "dmp_zz_heu_gcd"], [194, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[194, 3, 1, "", "dmp_ext_factor"], [194, 3, 1, "", "dmp_factor_list"], [194, 3, 1, "", "dmp_factor_list_include"], [194, 3, 1, "", "dmp_irreducible_p"], [194, 3, 1, "", "dmp_trial_division"], [194, 3, 1, "", "dmp_zz_diophantine"], [194, 3, 1, "", "dmp_zz_factor"], [194, 3, 1, "", "dmp_zz_mignotte_bound"], [194, 3, 1, "", "dmp_zz_wang"], [194, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [194, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [194, 3, 1, "", "dmp_zz_wang_non_divisors"], [194, 3, 1, "", "dmp_zz_wang_test_points"], [194, 3, 1, "", "dup_cyclotomic_p"], [194, 3, 1, "", "dup_gf_factor"], [194, 3, 1, "", "dup_zz_cyclotomic_factor"], [194, 3, 1, "", "dup_zz_cyclotomic_poly"], [194, 3, 1, "", "dup_zz_factor"], [194, 3, 1, "", "dup_zz_factor_sqf"], [194, 3, 1, "", "dup_zz_hensel_lift"], [194, 3, 1, "", "dup_zz_hensel_step"], [194, 3, 1, "", "dup_zz_irreducible_p"], [194, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[194, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[192, 1, 1, "", "FracElement"], [192, 1, 1, "", "FracField"], [192, 3, 1, "", "field"], [192, 3, 1, "", "sfield"], [192, 3, 1, "", "vfield"], [192, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[192, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[194, 3, 1, "", "gf_LC"], [194, 3, 1, "", "gf_Qbasis"], [194, 3, 1, "", "gf_Qmatrix"], [194, 3, 1, "", "gf_TC"], [194, 3, 1, "", "gf_add"], [194, 3, 1, "", "gf_add_ground"], [194, 3, 1, "", "gf_add_mul"], [194, 3, 1, "", "gf_berlekamp"], [194, 3, 1, "", "gf_cofactors"], [194, 3, 1, "", "gf_compose"], [194, 3, 1, "", "gf_compose_mod"], [194, 3, 1, "", "gf_crt"], [194, 3, 1, "", "gf_crt1"], [194, 3, 1, "", "gf_crt2"], [194, 3, 1, "", "gf_csolve"], [194, 3, 1, "", "gf_degree"], [194, 3, 1, "", "gf_diff"], [194, 3, 1, "", "gf_div"], [194, 3, 1, "", "gf_eval"], [194, 3, 1, "", "gf_expand"], [194, 3, 1, "", "gf_exquo"], [194, 3, 1, "", "gf_factor"], [194, 3, 1, "", "gf_factor_sqf"], [194, 3, 1, "", "gf_from_dict"], [194, 3, 1, "", "gf_from_int_poly"], [194, 3, 1, "", "gf_gcd"], [194, 3, 1, "", "gf_gcdex"], [194, 3, 1, "", "gf_int"], [194, 3, 1, "", "gf_irreducible"], [194, 3, 1, "", "gf_irreducible_p"], [194, 3, 1, "", "gf_lcm"], [194, 3, 1, "", "gf_lshift"], [194, 3, 1, "", "gf_monic"], [194, 3, 1, "", "gf_mul"], [194, 3, 1, "", "gf_mul_ground"], [194, 3, 1, "", "gf_multi_eval"], [194, 3, 1, "", "gf_neg"], [194, 3, 1, "", "gf_normal"], [194, 3, 1, "", "gf_pow"], [194, 3, 1, "", "gf_pow_mod"], [194, 3, 1, "", "gf_quo"], [194, 3, 1, "", "gf_quo_ground"], [194, 3, 1, "", "gf_random"], [194, 3, 1, "", "gf_rem"], [194, 3, 1, "", "gf_rshift"], [194, 3, 1, "", "gf_shoup"], [194, 3, 1, "", "gf_sqf_list"], [194, 3, 1, "", "gf_sqf_p"], [194, 3, 1, "", "gf_sqf_part"], [194, 3, 1, "", "gf_sqr"], [194, 3, 1, "", "gf_strip"], [194, 3, 1, "", "gf_sub"], [194, 3, 1, "", "gf_sub_ground"], [194, 3, 1, "", "gf_sub_mul"], [194, 3, 1, "", "gf_to_dict"], [194, 3, 1, "", "gf_to_int_poly"], [194, 3, 1, "", "gf_trace_map"], [194, 3, 1, "", "gf_trunc"], [194, 3, 1, "", "gf_value"], [194, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[194, 3, 1, "", "groebner"], [194, 3, 1, "", "is_groebner"], [194, 3, 1, "", "is_minimal"], [194, 3, 1, "", "is_reduced"], [194, 3, 1, "", "red_groebner"], [194, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[190, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[190, 2, 1, "", "add"], [190, 2, 1, "", "charpoly"], [190, 2, 1, "", "det"], [190, 2, 1, "", "hstack"], [190, 2, 1, "", "inv"], [190, 2, 1, "", "is_lower"], [190, 2, 1, "", "is_upper"], [190, 2, 1, "", "is_zero_matrix"], [190, 2, 1, "", "lu"], [190, 2, 1, "", "lu_solve"], [190, 2, 1, "", "matmul"], [190, 2, 1, "", "neg"], [190, 2, 1, "", "rref"], [190, 2, 1, "", "scc"], [190, 2, 1, "", "sub"], [190, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[190, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[190, 2, 1, "", "add"], [190, 2, 1, "", "charpoly"], [190, 2, 1, "", "columnspace"], [190, 2, 1, "", "convert_to"], [190, 2, 1, "", "det"], [190, 2, 1, "", "diag"], [190, 2, 1, "", "eye"], [190, 2, 1, "", "from_Matrix"], [190, 2, 1, "", "from_dict_sympy"], [190, 2, 1, "", "from_list"], [190, 2, 1, "", "from_list_sympy"], [190, 2, 1, "", "from_rep"], [190, 2, 1, "", "hstack"], [190, 2, 1, "", "inv"], [190, 4, 1, "", "is_lower"], [190, 4, 1, "", "is_upper"], [190, 2, 1, "", "lu"], [190, 2, 1, "", "lu_solve"], [190, 2, 1, "", "matmul"], [190, 2, 1, "", "mul"], [190, 2, 1, "", "neg"], [190, 2, 1, "", "nullspace"], [190, 2, 1, "", "ones"], [190, 2, 1, "", "pow"], [190, 2, 1, "", "rowspace"], [190, 2, 1, "", "rref"], [190, 2, 1, "", "scc"], [190, 2, 1, "", "sub"], [190, 2, 1, "", "to_Matrix"], [190, 2, 1, "", "to_dense"], [190, 2, 1, "", "to_field"], [190, 2, 1, "", "to_sparse"], [190, 2, 1, "", "transpose"], [190, 2, 1, "", "unify"], [190, 2, 1, "", "vstack"], [190, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[190, 3, 1, "", "hermite_normal_form"], [190, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[190, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[190, 2, 1, "", "add"], [190, 2, 1, "", "charpoly"], [190, 2, 1, "", "convert_to"], [190, 2, 1, "", "copy"], [190, 2, 1, "", "det"], [190, 2, 1, "", "eye"], [190, 2, 1, "", "from_ddm"], [190, 2, 1, "", "from_list"], [190, 2, 1, "", "hstack"], [190, 2, 1, "", "inv"], [190, 2, 1, "", "is_lower"], [190, 2, 1, "", "is_upper"], [190, 2, 1, "", "is_zero_matrix"], [190, 2, 1, "", "lu"], [190, 2, 1, "", "lu_solve"], [190, 2, 1, "", "matmul"], [190, 2, 1, "", "mul"], [190, 2, 1, "", "neg"], [190, 2, 1, "", "new"], [190, 2, 1, "", "nullspace"], [190, 2, 1, "", "rref"], [190, 2, 1, "", "scc"], [190, 2, 1, "", "sub"], [190, 2, 1, "", "to_ddm"], [190, 2, 1, "", "to_list"], [190, 2, 1, "", "transpose"], [190, 2, 1, "", "vstack"], [190, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[194, 3, 1, "", "_modgcd_multivariate_p"], [194, 3, 1, "", "func_field_modgcd"], [194, 3, 1, "", "modgcd_bivariate"], [194, 3, 1, "", "modgcd_multivariate"], [194, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[197, 1, 1, "", "Monomial"], [197, 3, 1, "", "itermonomials"], [197, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[197, 2, 1, "", "as_expr"], [197, 2, 1, "", "gcd"], [197, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[196, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[196, 3, 1, "", "minimal_polynomial"], [196, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[196, 0, 0, "-", "modules"], [196, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[196, 1, 1, "", "EndomorphismRing"], [196, 1, 1, "", "InnerEndomorphism"], [196, 1, 1, "", "Module"], [196, 1, 1, "", "ModuleElement"], [196, 1, 1, "", "ModuleEndomorphism"], [196, 1, 1, "", "ModuleHomomorphism"], [196, 1, 1, "", "PowerBasis"], [196, 1, 1, "", "PowerBasisElement"], [196, 1, 1, "", "Submodule"], [196, 3, 1, "", "find_min_poly"], [196, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "inner_endomorphism"], [196, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[196, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[196, 2, 1, "", "__call__"], [196, 2, 1, "", "ancestors"], [196, 2, 1, "", "basis_elements"], [196, 2, 1, "", "element_from_rational"], [196, 2, 1, "", "endomorphism_ring"], [196, 2, 1, "", "is_compat_col"], [196, 2, 1, "", "mult_tab"], [196, 4, 1, "", "n"], [196, 2, 1, "", "nearest_common_ancestor"], [196, 4, 1, "", "number_field"], [196, 2, 1, "", "one"], [196, 4, 1, "", "parent"], [196, 2, 1, "", "power_basis_ancestor"], [196, 2, 1, "", "represent"], [196, 2, 1, "", "starts_with_unity"], [196, 2, 1, "", "submodule_from_gens"], [196, 2, 1, "", "submodule_from_matrix"], [196, 2, 1, "", "whole_submodule"], [196, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[196, 4, 1, "", "QQ_col"], [196, 2, 1, "", "__add__"], [196, 2, 1, "", "__init__"], [196, 2, 1, "", "__mod__"], [196, 2, 1, "", "__mul__"], [196, 2, 1, "", "column"], [196, 2, 1, "", "equiv"], [196, 2, 1, "", "from_int_list"], [196, 2, 1, "", "is_compat"], [196, 4, 1, "", "n"], [196, 2, 1, "", "over_power_basis"], [196, 2, 1, "", "reduced"], [196, 2, 1, "", "reduced_mod_p"], [196, 2, 1, "", "to_ancestor"], [196, 2, 1, "", "to_parent"], [196, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[196, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "kernel"], [196, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "element_from_ANP"], [196, 2, 1, "", "element_from_alg_num"], [196, 2, 1, "", "element_from_poly"], [196, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[196, 4, 1, "", "T"], [196, 2, 1, "", "as_expr"], [196, 4, 1, "", "generator"], [196, 4, 1, "", "is_rational"], [196, 2, 1, "", "norm"], [196, 2, 1, "", "numerator"], [196, 2, 1, "", "poly"], [196, 2, 1, "", "to_ANP"], [196, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[196, 4, 1, "", "QQ_matrix"], [196, 2, 1, "", "__init__"], [196, 2, 1, "", "add"], [196, 2, 1, "", "basis_element_pullbacks"], [196, 2, 1, "", "discard_before"], [196, 2, 1, "", "mul"], [196, 2, 1, "", "reduce_element"], [196, 2, 1, "", "reduced"], [196, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[196, 1, 1, "", "PrimeIdeal"], [196, 3, 1, "", "prime_decomp"], [196, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[196, 2, 1, "", "__add__"], [196, 2, 1, "", "__init__"], [196, 2, 1, "", "__mul__"], [196, 2, 1, "", "as_submodule"], [196, 4, 1, "", "is_inert"], [196, 2, 1, "", "reduce_ANP"], [196, 2, 1, "", "reduce_alg_num"], [196, 2, 1, "", "reduce_element"], [196, 2, 1, "", "repr"], [196, 2, 1, "", "test_factor"], [196, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[196, 3, 1, "", "field_isomorphism"], [196, 3, 1, "", "primitive_element"], [196, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[196, 1, 1, "", "AlgIntPowers"], [196, 3, 1, "", "coeff_search"], [196, 3, 1, "", "extract_fundamental_discriminant"], [196, 3, 1, "", "get_num_denom"], [196, 3, 1, "", "is_int"], [196, 3, 1, "", "is_rat"], [196, 3, 1, "", "isolate"], [196, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[196, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[197, 1, 1, "", "GradedLexOrder"], [197, 1, 1, "", "LexOrder"], [197, 1, 1, "", "MonomialOrder"], [197, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[197, 3, 1, "", "chebyshevt_poly"], [197, 3, 1, "", "chebyshevu_poly"], [197, 3, 1, "", "gegenbauer_poly"], [197, 3, 1, "", "hermite_poly"], [197, 3, 1, "", "hermite_prob_poly"], [197, 3, 1, "", "jacobi_poly"], [197, 3, 1, "", "laguerre_poly"], [197, 3, 1, "", "legendre_poly"], [197, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[197, 3, 1, "", "apart"], [197, 3, 1, "", "apart_list"], [197, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[192, 1, 1, "", "ANP"], [192, 1, 1, "", "DMF"], [192, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[192, 2, 1, "", "LC"], [192, 2, 1, "", "TC"], [192, 4, 1, "", "is_ground"], [192, 4, 1, "", "is_one"], [192, 4, 1, "", "is_zero"], [192, 2, 1, "", "pow"], [192, 2, 1, "", "to_dict"], [192, 2, 1, "", "to_list"], [192, 2, 1, "", "to_sympy_dict"], [192, 2, 1, "", "to_sympy_list"], [192, 2, 1, "", "to_tuple"], [192, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[192, 2, 1, "", "add"], [192, 2, 1, "", "cancel"], [192, 2, 1, "", "denom"], [192, 2, 1, "", "exquo"], [192, 2, 1, "", "frac_unify"], [192, 2, 1, "", "half_per"], [192, 2, 1, "", "invert"], [192, 4, 1, "", "is_one"], [192, 4, 1, "", "is_zero"], [192, 2, 1, "", "mul"], [192, 2, 1, "", "neg"], [192, 2, 1, "", "numer"], [192, 2, 1, "", "per"], [192, 2, 1, "", "poly_unify"], [192, 2, 1, "", "pow"], [192, 2, 1, "", "quo"], [192, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[192, 2, 1, "", "LC"], [192, 2, 1, "", "TC"], [192, 2, 1, "", "abs"], [192, 2, 1, "", "add"], [192, 2, 1, "", "add_ground"], [192, 2, 1, "", "all_coeffs"], [192, 2, 1, "", "all_monoms"], [192, 2, 1, "", "all_terms"], [192, 2, 1, "", "cancel"], [192, 2, 1, "", "cauchy_lower_bound"], [192, 2, 1, "", "cauchy_upper_bound"], [192, 2, 1, "", "clear_denoms"], [192, 2, 1, "", "coeffs"], [192, 2, 1, "", "cofactors"], [192, 2, 1, "", "compose"], [192, 2, 1, "", "content"], [192, 2, 1, "", "convert"], [192, 2, 1, "", "count_complex_roots"], [192, 2, 1, "", "count_real_roots"], [192, 2, 1, "", "decompose"], [192, 2, 1, "", "deflate"], [192, 2, 1, "", "degree"], [192, 2, 1, "", "degree_list"], [192, 2, 1, "", "diff"], [192, 2, 1, "", "discriminant"], [192, 2, 1, "", "div"], [192, 2, 1, "", "eject"], [192, 2, 1, "", "eval"], [192, 2, 1, "", "exclude"], [192, 2, 1, "", "exquo"], [192, 2, 1, "", "exquo_ground"], [192, 2, 1, "", "factor_list"], [192, 2, 1, "", "factor_list_include"], [192, 2, 1, "", "from_dict"], [192, 2, 1, "", "from_list"], [192, 2, 1, "", "from_sympy_list"], [192, 2, 1, "", "gcd"], [192, 2, 1, "", "gcdex"], [192, 2, 1, "", "gff_list"], [192, 2, 1, "", "half_gcdex"], [192, 2, 1, "", "homogeneous_order"], [192, 2, 1, "", "homogenize"], [192, 2, 1, "", "inject"], [192, 2, 1, "", "integrate"], [192, 2, 1, "", "intervals"], [192, 2, 1, "", "invert"], [192, 4, 1, "", "is_cyclotomic"], [192, 4, 1, "", "is_ground"], [192, 4, 1, "", "is_homogeneous"], [192, 4, 1, "", "is_irreducible"], [192, 4, 1, "", "is_linear"], [192, 4, 1, "", "is_monic"], [192, 4, 1, "", "is_monomial"], [192, 4, 1, "", "is_one"], [192, 4, 1, "", "is_primitive"], [192, 4, 1, "", "is_quadratic"], [192, 4, 1, "", "is_sqf"], [192, 4, 1, "", "is_zero"], [192, 2, 1, "", "l1_norm"], [192, 2, 1, "", "l2_norm_squared"], [192, 2, 1, "", "lcm"], [192, 2, 1, "", "lift"], [192, 2, 1, "", "max_norm"], [192, 2, 1, "", "mignotte_sep_bound_squared"], [192, 2, 1, "", "monic"], [192, 2, 1, "", "monoms"], [192, 2, 1, "", "mul"], [192, 2, 1, "", "mul_ground"], [192, 2, 1, "", "neg"], [192, 2, 1, "", "norm"], [192, 2, 1, "", "nth"], [192, 2, 1, "", "pdiv"], [192, 2, 1, "", "per"], [192, 2, 1, "", "permute"], [192, 2, 1, "", "pexquo"], [192, 2, 1, "", "pow"], [192, 2, 1, "", "pquo"], [192, 2, 1, "", "prem"], [192, 2, 1, "", "primitive"], [192, 2, 1, "", "quo"], [192, 2, 1, "", "quo_ground"], [192, 2, 1, "", "refine_root"], [192, 2, 1, "", "rem"], [192, 2, 1, "", "resultant"], [192, 2, 1, "", "revert"], [192, 2, 1, "", "shift"], [192, 2, 1, "", "slice"], [192, 2, 1, "", "sqf_list"], [192, 2, 1, "", "sqf_list_include"], [192, 2, 1, "", "sqf_norm"], [192, 2, 1, "", "sqf_part"], [192, 2, 1, "", "sqr"], [192, 2, 1, "", "sturm"], [192, 2, 1, "", "sub"], [192, 2, 1, "", "sub_ground"], [192, 2, 1, "", "subresultants"], [192, 2, 1, "", "terms"], [192, 2, 1, "", "terms_gcd"], [192, 2, 1, "", "to_dict"], [192, 2, 1, "", "to_exact"], [192, 2, 1, "", "to_field"], [192, 2, 1, "", "to_list"], [192, 2, 1, "", "to_ring"], [192, 2, 1, "", "to_sympy_dict"], [192, 2, 1, "", "to_sympy_list"], [192, 2, 1, "", "to_tuple"], [192, 2, 1, "", "total_degree"], [192, 2, 1, "", "transform"], [192, 2, 1, "", "trunc"], [192, 2, 1, "", "unify"]], "sympy.polys": [[194, 0, 0, "-", "polyconfig"], [194, 0, 0, "-", "polyoptions"], [199, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[194, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[194, 1, 1, "", "BasePolynomialError"], [194, 1, 1, "", "CoercionFailed"], [194, 1, 1, "", "ComputationFailed"], [194, 1, 1, "", "DomainError"], [194, 1, 1, "", "EvaluationFailed"], [194, 1, 1, "", "ExactQuotientFailed"], [194, 1, 1, "", "ExtraneousFactors"], [194, 1, 1, "", "FlagError"], [194, 1, 1, "", "GeneratorsError"], [194, 1, 1, "", "GeneratorsNeeded"], [194, 1, 1, "", "HeuristicGCDFailed"], [194, 1, 1, "", "HomomorphismFailed"], [194, 1, 1, "", "IsomorphismFailed"], [194, 1, 1, "", "MultivariatePolynomialError"], [194, 1, 1, "", "NotAlgebraic"], [194, 1, 1, "", "NotInvertible"], [194, 1, 1, "", "NotReversible"], [194, 1, 1, "", "OperationNotSupported"], [194, 1, 1, "", "OptionError"], [194, 1, 1, "", "PolificationFailed"], [194, 1, 1, "", "PolynomialError"], [194, 1, 1, "", "RefinementFailed"], [194, 1, 1, "", "UnificationFailed"], [194, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[197, 3, 1, "", "horner"], [197, 3, 1, "", "interpolate"], [197, 3, 1, "", "symmetrize"], [197, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[194, 1, 1, "", "Options"], [194, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[194, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[197, 3, 1, "", "roots"]], "sympy.polys.polytools": [[197, 1, 1, "", "GroebnerBasis"], [197, 3, 1, "", "LC"], [197, 3, 1, "", "LM"], [197, 3, 1, "", "LT"], [197, 1, 1, "", "Poly"], [197, 1, 1, "", "PurePoly"], [197, 3, 1, "", "cancel"], [197, 3, 1, "", "cofactors"], [197, 3, 1, "", "compose"], [197, 3, 1, "", "content"], [197, 3, 1, "", "count_roots"], [197, 3, 1, "", "decompose"], [197, 3, 1, "", "degree"], [197, 3, 1, "", "degree_list"], [197, 3, 1, "", "discriminant"], [197, 3, 1, "", "div"], [197, 3, 1, "", "exquo"], [197, 3, 1, "", "factor"], [197, 3, 1, "", "factor_list"], [197, 3, 1, "", "gcd"], [197, 3, 1, "", "gcd_list"], [197, 3, 1, "", "gcdex"], [197, 3, 1, "", "gff"], [197, 3, 1, "", "gff_list"], [197, 3, 1, "", "groebner"], [197, 3, 1, "", "ground_roots"], [197, 3, 1, "", "half_gcdex"], [197, 3, 1, "", "intervals"], [197, 3, 1, "", "invert"], [197, 3, 1, "", "is_zero_dimensional"], [197, 3, 1, "", "lcm"], [197, 3, 1, "", "lcm_list"], [197, 3, 1, "", "monic"], [197, 3, 1, "", "nroots"], [197, 3, 1, "", "nth_power_roots_poly"], [197, 3, 1, "", "parallel_poly_from_expr"], [197, 3, 1, "", "pdiv"], [197, 3, 1, "", "pexquo"], [197, 3, 1, "", "poly"], [197, 3, 1, "", "poly_from_expr"], [197, 3, 1, "", "pquo"], [197, 3, 1, "", "prem"], [197, 3, 1, "", "primitive"], [197, 3, 1, "", "quo"], [197, 3, 1, "", "real_roots"], [197, 3, 1, "", "reduced"], [197, 3, 1, "", "refine_root"], [197, 3, 1, "", "rem"], [197, 3, 1, "", "resultant"], [197, 3, 1, "", "sqf"], [197, 3, 1, "", "sqf_list"], [197, 3, 1, "", "sqf_norm"], [197, 3, 1, "", "sqf_part"], [197, 3, 1, "", "sturm"], [197, 3, 1, "", "subresultants"], [197, 3, 1, "", "terms_gcd"], [197, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[197, 2, 1, "", "contains"], [197, 2, 1, "", "fglm"], [197, 4, 1, "", "is_zero_dimensional"], [197, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[197, 2, 1, "", "EC"], [197, 2, 1, "", "EM"], [197, 2, 1, "", "ET"], [197, 2, 1, "", "LC"], [197, 2, 1, "", "LM"], [197, 2, 1, "", "LT"], [197, 2, 1, "", "TC"], [197, 2, 1, "", "abs"], [197, 2, 1, "", "add"], [197, 2, 1, "", "add_ground"], [197, 2, 1, "", "all_coeffs"], [197, 2, 1, "", "all_monoms"], [197, 2, 1, "", "all_roots"], [197, 2, 1, "", "all_terms"], [197, 2, 1, "", "as_dict"], [197, 2, 1, "", "as_expr"], [197, 2, 1, "", "as_list"], [197, 2, 1, "", "as_poly"], [197, 2, 1, "", "cancel"], [197, 2, 1, "", "clear_denoms"], [197, 2, 1, "", "coeff_monomial"], [197, 2, 1, "", "coeffs"], [197, 2, 1, "", "cofactors"], [197, 2, 1, "", "compose"], [197, 2, 1, "", "content"], [197, 2, 1, "", "count_roots"], [197, 2, 1, "", "decompose"], [197, 2, 1, "", "deflate"], [197, 2, 1, "", "degree"], [197, 2, 1, "", "degree_list"], [197, 2, 1, "", "diff"], [197, 2, 1, "", "discriminant"], [197, 2, 1, "", "dispersion"], [197, 2, 1, "", "dispersionset"], [197, 2, 1, "", "div"], [197, 4, 1, "", "domain"], [197, 2, 1, "", "eject"], [197, 2, 1, "", "eval"], [197, 2, 1, "", "exclude"], [197, 2, 1, "", "exquo"], [197, 2, 1, "", "exquo_ground"], [197, 2, 1, "", "factor_list"], [197, 2, 1, "", "factor_list_include"], [197, 4, 1, "", "free_symbols"], [197, 4, 1, "", "free_symbols_in_domain"], [197, 2, 1, "", "from_dict"], [197, 2, 1, "", "from_expr"], [197, 2, 1, "", "from_list"], [197, 2, 1, "", "from_poly"], [197, 2, 1, "", "gcd"], [197, 2, 1, "", "gcdex"], [197, 4, 1, "", "gen"], [197, 2, 1, "", "get_domain"], [197, 2, 1, "", "get_modulus"], [197, 2, 1, "", "gff_list"], [197, 2, 1, "", "ground_roots"], [197, 2, 1, "", "half_gcdex"], [197, 2, 1, "", "has_only_gens"], [197, 2, 1, "", "homogeneous_order"], [197, 2, 1, "", "homogenize"], [197, 2, 1, "", "inject"], [197, 2, 1, "", "integrate"], [197, 2, 1, "", "intervals"], [197, 2, 1, "", "invert"], [197, 4, 1, "", "is_cyclotomic"], [197, 4, 1, "", "is_ground"], [197, 4, 1, "", "is_homogeneous"], [197, 4, 1, "", "is_irreducible"], [197, 4, 1, "", "is_linear"], [197, 4, 1, "", "is_monic"], [197, 4, 1, "", "is_monomial"], [197, 4, 1, "", "is_multivariate"], [197, 4, 1, "", "is_one"], [197, 4, 1, "", "is_primitive"], [197, 4, 1, "", "is_quadratic"], [197, 4, 1, "", "is_sqf"], [197, 4, 1, "", "is_univariate"], [197, 4, 1, "", "is_zero"], [197, 2, 1, "", "l1_norm"], [197, 2, 1, "", "lcm"], [197, 2, 1, "", "length"], [197, 2, 1, "", "lift"], [197, 2, 1, "", "ltrim"], [197, 2, 1, "", "match"], [197, 2, 1, "", "max_norm"], [197, 2, 1, "", "monic"], [197, 2, 1, "", "monoms"], [197, 2, 1, "", "mul"], [197, 2, 1, "", "mul_ground"], [197, 2, 1, "", "neg"], [197, 2, 1, "", "new"], [197, 2, 1, "", "norm"], [197, 2, 1, "", "nroots"], [197, 2, 1, "", "nth"], [197, 2, 1, "", "nth_power_roots_poly"], [197, 4, 1, "", "one"], [197, 2, 1, "", "pdiv"], [197, 2, 1, "", "per"], [197, 2, 1, "", "pexquo"], [197, 2, 1, "", "pow"], [197, 2, 1, "", "pquo"], [197, 2, 1, "", "prem"], [197, 2, 1, "", "primitive"], [197, 2, 1, "", "quo"], [197, 2, 1, "", "quo_ground"], [197, 2, 1, "", "rat_clear_denoms"], [197, 2, 1, "", "real_roots"], [197, 2, 1, "", "refine_root"], [197, 2, 1, "", "rem"], [197, 2, 1, "", "reorder"], [197, 2, 1, "", "replace"], [197, 2, 1, "", "resultant"], [197, 2, 1, "", "retract"], [197, 2, 1, "", "revert"], [197, 2, 1, "", "root"], [197, 2, 1, "", "same_root"], [197, 2, 1, "", "set_domain"], [197, 2, 1, "", "set_modulus"], [197, 2, 1, "", "shift"], [197, 2, 1, "", "slice"], [197, 2, 1, "", "sqf_list"], [197, 2, 1, "", "sqf_list_include"], [197, 2, 1, "", "sqf_norm"], [197, 2, 1, "", "sqf_part"], [197, 2, 1, "", "sqr"], [197, 2, 1, "", "sturm"], [197, 2, 1, "", "sub"], [197, 2, 1, "", "sub_ground"], [197, 2, 1, "", "subresultants"], [197, 2, 1, "", "terms"], [197, 2, 1, "", "terms_gcd"], [197, 2, 1, "", "termwise"], [197, 2, 1, "", "to_exact"], [197, 2, 1, "", "to_field"], [197, 2, 1, "", "to_ring"], [197, 2, 1, "", "total_degree"], [197, 2, 1, "", "transform"], [197, 2, 1, "", "trunc"], [197, 2, 1, "", "unify"], [197, 4, 1, "", "unit"], [197, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[197, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[197, 3, 1, "", "together"]], "sympy.polys.ring_series": [[198, 3, 1, "", "_tan1"], [198, 3, 1, "", "mul_xin"], [198, 3, 1, "", "pow_xin"], [198, 3, 1, "", "rs_LambertW"], [198, 3, 1, "", "rs_asin"], [198, 3, 1, "", "rs_atan"], [198, 3, 1, "", "rs_atanh"], [198, 3, 1, "", "rs_compose_add"], [198, 3, 1, "", "rs_cos"], [198, 3, 1, "", "rs_cos_sin"], [198, 3, 1, "", "rs_cosh"], [198, 3, 1, "", "rs_cot"], [198, 3, 1, "", "rs_diff"], [198, 3, 1, "", "rs_exp"], [198, 3, 1, "", "rs_fun"], [198, 3, 1, "", "rs_hadamard_exp"], [198, 3, 1, "", "rs_integrate"], [198, 3, 1, "", "rs_is_puiseux"], [198, 3, 1, "", "rs_log"], [198, 3, 1, "", "rs_mul"], [198, 3, 1, "", "rs_newton"], [198, 3, 1, "", "rs_nth_root"], [198, 3, 1, "", "rs_pow"], [198, 3, 1, "", "rs_puiseux"], [198, 3, 1, "", "rs_puiseux2"], [198, 3, 1, "", "rs_series_from_list"], [198, 3, 1, "", "rs_series_inversion"], [198, 3, 1, "", "rs_series_reversion"], [198, 3, 1, "", "rs_sin"], [198, 3, 1, "", "rs_sinh"], [198, 3, 1, "", "rs_square"], [198, 3, 1, "", "rs_subs"], [198, 3, 1, "", "rs_tan"], [198, 3, 1, "", "rs_tanh"], [198, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[192, 1, 1, "", "PolyElement"], [192, 1, 1, "", "PolyRing"], [192, 3, 1, "", "ring"], [192, 3, 1, "", "sring"], [192, 3, 1, "", "vring"], [192, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[192, 2, 1, "", "almosteq"], [192, 2, 1, "", "cancel"], [192, 2, 1, "", "coeff"], [192, 2, 1, "", "coeffs"], [192, 2, 1, "", "const"], [192, 2, 1, "", "content"], [192, 2, 1, "", "copy"], [192, 2, 1, "", "degree"], [192, 2, 1, "", "degrees"], [192, 2, 1, "", "diff"], [192, 2, 1, "", "div"], [192, 2, 1, "", "imul_num"], [192, 2, 1, "", "itercoeffs"], [192, 2, 1, "", "itermonoms"], [192, 2, 1, "", "iterterms"], [192, 2, 1, "", "leading_expv"], [192, 2, 1, "", "leading_monom"], [192, 2, 1, "", "leading_term"], [192, 2, 1, "", "listcoeffs"], [192, 2, 1, "", "listmonoms"], [192, 2, 1, "", "listterms"], [192, 2, 1, "", "monic"], [192, 2, 1, "", "monoms"], [192, 2, 1, "", "primitive"], [192, 2, 1, "", "square"], [192, 2, 1, "", "strip_zero"], [192, 2, 1, "", "tail_degree"], [192, 2, 1, "", "tail_degrees"], [192, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[192, 2, 1, "", "add"], [192, 2, 1, "", "add_gens"], [192, 2, 1, "", "compose"], [192, 2, 1, "", "drop"], [192, 2, 1, "", "drop_to_ground"], [192, 2, 1, "", "index"], [192, 2, 1, "", "monomial_basis"], [192, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[197, 1, 1, "", "ComplexRootOf"], [197, 1, 1, "", "RootOf"], [197, 1, 1, "", "RootSum"], [197, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[197, 2, 1, "", "_all_roots"], [197, 2, 1, "", "_complexes_index"], [197, 2, 1, "", "_complexes_sorted"], [197, 2, 1, "", "_count_roots"], [197, 2, 1, "", "_ensure_complexes_init"], [197, 2, 1, "", "_ensure_reals_init"], [197, 2, 1, "", "_eval_evalf"], [197, 2, 1, "", "_eval_is_imaginary"], [197, 2, 1, "", "_eval_is_real"], [197, 2, 1, "", "_get_complexes"], [197, 2, 1, "", "_get_complexes_sqf"], [197, 2, 1, "", "_get_interval"], [197, 2, 1, "", "_get_reals"], [197, 2, 1, "", "_get_reals_sqf"], [197, 2, 1, "", "_get_roots"], [197, 2, 1, "", "_indexed_root"], [197, 2, 1, "", "_new"], [197, 2, 1, "", "_postprocess_root"], [197, 2, 1, "", "_preprocess_roots"], [197, 2, 1, "", "_real_roots"], [197, 2, 1, "", "_reals_index"], [197, 2, 1, "", "_reals_sorted"], [197, 2, 1, "", "_refine_complexes"], [197, 2, 1, "", "_reset"], [197, 2, 1, "", "_roots_trivial"], [197, 2, 1, "", "_set_interval"], [197, 2, 1, "", "all_roots"], [197, 2, 1, "", "clear_cache"], [197, 2, 1, "", "eval_approx"], [197, 2, 1, "", "eval_rational"], [197, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[197, 2, 1, "", "new"]], "sympy.polys.solvers": [[199, 3, 1, "", "_solve_lin_sys"], [199, 3, 1, "", "_solve_lin_sys_component"], [199, 3, 1, "", "eqs_to_matrix"], [199, 3, 1, "", "solve_lin_sys"], [199, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[197, 3, 1, "", "cyclotomic_poly"], [197, 3, 1, "", "interpolating_poly"], [197, 3, 1, "", "random_poly"], [197, 3, 1, "", "swinnerton_dyer_poly"], [197, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[201, 0, 0, "-", "aesaracode"], [201, 0, 0, "-", "c"], [201, 0, 0, "-", "codeprinter"], [201, 0, 0, "-", "conventions"], [201, 0, 0, "-", "cxx"], [201, 0, 0, "-", "fortran"], [201, 0, 0, "-", "gtk"], [201, 0, 0, "-", "jscode"], [201, 0, 0, "-", "julia"], [201, 0, 0, "-", "lambdarepr"], [201, 0, 0, "-", "latex"], [201, 0, 0, "-", "maple"], [201, 0, 0, "-", "mathematica"], [201, 0, 0, "-", "mathml"], [201, 0, 0, "-", "octave"], [201, 0, 0, "-", "precedence"], [201, 0, 0, "-", "pretty"], [201, 0, 0, "-", "preview"], [201, 0, 0, "-", "printer"], [201, 0, 0, "-", "pycode"], [201, 0, 0, "-", "python"], [201, 0, 0, "-", "rcode"], [201, 0, 0, "-", "repr"], [201, 0, 0, "-", "rust"], [201, 0, 0, "-", "smtlib"], [201, 0, 0, "-", "str"], [201, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[201, 1, 1, "", "AesaraPrinter"], [201, 3, 1, "", "aesara_code"], [201, 3, 1, "", "aesara_function"], [201, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[201, 2, 1, "", "doprint"], [201, 5, 1, "", "printmethod"]], "sympy.printing.c": [[201, 1, 1, "", "C89CodePrinter"], [201, 1, 1, "", "C99CodePrinter"], [201, 3, 1, "", "ccode"], [201, 6, 1, "", "known_functions_C89"], [201, 6, 1, "", "known_functions_C99"], [201, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[201, 2, 1, "", "indent_code"], [201, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[201, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[201, 7, 1, "", "AssignmentError"], [201, 1, 1, "", "CodePrinter"], [201, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[201, 2, 1, "", "doprint"], [201, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[201, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[201, 1, 1, "", "CXX11CodePrinter"], [201, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[201, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[201, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[201, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[201, 1, 1, "", "FCodePrinter"], [201, 3, 1, "", "fcode"], [201, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[201, 2, 1, "", "indent_code"], [201, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[201, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[201, 1, 1, "", "JavascriptCodePrinter"], [201, 3, 1, "", "jscode"], [201, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[201, 2, 1, "", "indent_code"], [201, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[201, 1, 1, "", "JuliaCodePrinter"], [201, 3, 1, "", "julia_code"], [201, 6, 1, "", "known_fcns_src1"], [201, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[201, 2, 1, "", "indent_code"], [201, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[201, 1, 1, "", "LambdaPrinter"], [201, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[201, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[201, 1, 1, "", "LatexPrinter"], [201, 6, 1, "", "accepted_latex_functions"], [201, 3, 1, "", "latex"], [201, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[201, 2, 1, "", "parenthesize_super"], [201, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[201, 1, 1, "", "MapleCodePrinter"], [201, 3, 1, "", "maple_code"], [201, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[201, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[201, 1, 1, "", "MCodePrinter"], [201, 6, 1, "", "known_functions"], [201, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[201, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[201, 1, 1, "", "MathMLContentPrinter"], [201, 1, 1, "", "MathMLPresentationPrinter"], [201, 1, 1, "", "MathMLPrinterBase"], [201, 3, 1, "", "mathml"], [201, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[201, 2, 1, "", "mathml_tag"], [201, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[201, 2, 1, "", "mathml_tag"], [201, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[201, 2, 1, "", "doprint"]], "sympy.printing.octave": [[201, 1, 1, "", "OctaveCodePrinter"], [201, 6, 1, "", "known_fcns_src1"], [201, 6, 1, "", "known_fcns_src2"], [201, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[201, 2, 1, "", "indent_code"], [201, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[201, 6, 1, "", "PRECEDENCE"], [201, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [201, 6, 1, "", "PRECEDENCE_VALUES"], [201, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[201, 0, 0, "-", "pretty"], [201, 0, 0, "-", "pretty_symbology"], [201, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[201, 1, 1, "", "PrettyPrinter"], [201, 3, 1, "", "pretty"], [201, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[201, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[201, 3, 1, "", "G"], [201, 3, 1, "", "U"], [201, 3, 1, "", "VF"], [201, 3, 1, "", "annotated"], [201, 6, 1, "", "atoms_table"], [201, 6, 1, "", "digit_2txt"], [201, 6, 1, "", "frac"], [201, 3, 1, "", "g"], [201, 6, 1, "", "greek_letters"], [201, 3, 1, "", "hobj"], [201, 3, 1, "", "pretty_atom"], [201, 3, 1, "", "pretty_symbol"], [201, 3, 1, "", "pretty_try_use_unicode"], [201, 3, 1, "", "pretty_use_unicode"], [201, 6, 1, "", "root"], [201, 6, 1, "", "sub"], [201, 6, 1, "", "sup"], [201, 6, 1, "", "symb_2txt"], [201, 3, 1, "", "vobj"], [201, 3, 1, "", "xobj"], [201, 3, 1, "", "xstr"], [201, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[201, 1, 1, "", "prettyForm"], [201, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[201, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[201, 2, 1, "", "above"], [201, 2, 1, "", "below"], [201, 2, 1, "", "height"], [201, 2, 1, "", "left"], [201, 2, 1, "", "leftslash"], [201, 2, 1, "", "next"], [201, 2, 1, "", "parens"], [201, 2, 1, "", "render"], [201, 2, 1, "", "right"], [201, 2, 1, "", "root"], [201, 2, 1, "", "stack"], [201, 2, 1, "", "terminal_width"], [201, 2, 1, "", "width"]], "sympy.printing.preview": [[201, 3, 1, "", "preview"]], "sympy.printing.printer": [[201, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[201, 2, 1, "", "_print"], [201, 2, 1, "", "doprint"], [201, 5, 1, "", "printmethod"], [201, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[201, 1, 1, "", "MpmathPrinter"], [201, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[201, 1, 1, "", "RCodePrinter"], [201, 6, 1, "", "known_functions"], [201, 3, 1, "", "print_rcode"], [201, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[201, 2, 1, "", "indent_code"], [201, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[201, 1, 1, "", "ReprPrinter"], [201, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[201, 2, 1, "", "emptyPrinter"], [201, 5, 1, "", "printmethod"], [201, 2, 1, "", "reprify"]], "sympy.printing.rust": [[201, 1, 1, "", "RustCodePrinter"], [201, 6, 1, "", "known_functions"], [201, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[201, 2, 1, "", "indent_code"], [201, 5, 1, "", "printmethod"]], "sympy.printing.smtlib": [[201, 1, 1, "", "SMTLibPrinter"], [201, 3, 1, "", "smtlib_code"]], "sympy.printing.smtlib.SMTLibPrinter": [[201, 5, 1, "", "_default_settings"], [201, 5, 1, "", "printmethod"]], "sympy.printing.str": [[201, 1, 1, "", "StrPrinter"], [201, 3, 1, "", "sstr"], [201, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[201, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[201, 3, 1, "", "pprint_nodes"], [201, 3, 1, "", "print_node"], [201, 3, 1, "", "print_tree"], [201, 3, 1, "", "tree"]], "sympy.series.acceleration": [[208, 3, 1, "", "richardson"], [208, 3, 1, "", "shanks"]], "sympy.series.formal": [[203, 1, 1, "", "FiniteFormalPowerSeries"], [203, 1, 1, "", "FormalPowerSeries"], [203, 1, 1, "", "FormalPowerSeriesCompose"], [203, 1, 1, "", "FormalPowerSeriesInverse"], [203, 1, 1, "", "FormalPowerSeriesProduct"], [203, 3, 1, "", "compute_fps"], [203, 3, 1, "", "exp_re"], [203, 3, 1, "", "fps"], [203, 3, 1, "", "hyper_algorithm"], [203, 3, 1, "", "hyper_re"], [203, 3, 1, "", "rational_algorithm"], [203, 3, 1, "", "rational_independent"], [203, 3, 1, "", "rsolve_hypergeometric"], [203, 3, 1, "", "simpleDE"], [203, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[203, 2, 1, "", "coeff_bell"], [203, 2, 1, "", "compose"], [203, 4, 1, "", "infinite"], [203, 2, 1, "", "integrate"], [203, 2, 1, "", "inverse"], [203, 2, 1, "", "polynomial"], [203, 2, 1, "", "product"], [203, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[203, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[203, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[203, 4, 1, "", "function"]], "sympy.series.fourier": [[204, 1, 1, "", "FourierSeries"], [204, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[204, 2, 1, "", "scale"], [204, 2, 1, "", "scalex"], [204, 2, 1, "", "shift"], [204, 2, 1, "", "shiftx"], [204, 2, 1, "", "sigma_approximation"], [204, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[208, 1, 1, "", "SubsSet"], [208, 3, 1, "", "build_expression_tree"], [208, 3, 1, "", "calculate_series"], [208, 3, 1, "", "compare"], [208, 3, 1, "", "gruntz"], [208, 3, 1, "", "limitinf"], [208, 3, 1, "", "mrv"], [208, 3, 1, "", "mrv_leadterm"], [208, 3, 1, "", "mrv_max1"], [208, 3, 1, "", "mrv_max3"], [208, 3, 1, "", "rewrite"], [208, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[208, 2, 1, "", "copy"], [208, 2, 1, "", "do_subs"], [208, 2, 1, "", "meets"], [208, 2, 1, "", "union"]], "sympy.series.limits": [[208, 1, 1, "", "Limit"], [208, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[208, 2, 1, "", "doit"]], "sympy.series.limitseq": [[206, 3, 1, "", "difference_delta"], [206, 3, 1, "", "dominant"], [206, 3, 1, "", "limit_seq"]], "sympy.series.order": [[208, 1, 1, "", "Order"]], "sympy.series.order.Order": [[208, 2, 1, "", "contains"]], "sympy.series.residues": [[208, 3, 1, "", "residue"]], "sympy.series.sequences": [[207, 1, 1, "", "EmptySequence"], [207, 1, 1, "", "RecursiveSeq"], [207, 1, 1, "", "SeqAdd"], [207, 1, 1, "", "SeqBase"], [207, 1, 1, "", "SeqFormula"], [207, 1, 1, "", "SeqMul"], [207, 1, 1, "", "SeqPer"], [207, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[207, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[207, 4, 1, "", "initial"], [207, 4, 1, "", "interval"], [207, 4, 1, "", "n"], [207, 4, 1, "", "recurrence"], [207, 4, 1, "", "start"], [207, 4, 1, "", "stop"], [207, 4, 1, "", "y"], [207, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[207, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[207, 2, 1, "", "coeff"], [207, 2, 1, "", "coeff_mul"], [207, 2, 1, "", "find_linear_recurrence"], [207, 4, 1, "", "free_symbols"], [207, 4, 1, "", "gen"], [207, 4, 1, "", "interval"], [207, 4, 1, "", "length"], [207, 4, 1, "", "start"], [207, 4, 1, "", "stop"], [207, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[207, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[207, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[207, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[208, 3, 1, "", "series"]], "sympy.sets": [[209, 0, 0, "-", "conditionset"], [209, 0, 0, "-", "fancysets"], [209, 0, 0, "-", "powerset"], [209, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[209, 1, 1, "", "ConditionSet"], [209, 1, 1, "", "Contains"], [209, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[209, 1, 1, "", "CartesianComplexRegion"], [209, 1, 1, "", "ComplexRegion"], [209, 1, 1, "", "Complexes"], [209, 1, 1, "", "ImageSet"], [209, 1, 1, "", "Integers"], [209, 1, 1, "", "Naturals"], [209, 1, 1, "", "Naturals0"], [209, 1, 1, "", "PolarComplexRegion"], [209, 1, 1, "", "Range"], [209, 1, 1, "", "Rationals"], [209, 1, 1, "", "Reals"], [209, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[209, 4, 1, "", "a_interval"], [209, 4, 1, "", "b_interval"], [209, 2, 1, "", "from_real"], [209, 4, 1, "", "psets"], [209, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[209, 2, 1, "", "as_relational"], [209, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[209, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[209, 1, 1, "", "Complement"], [209, 1, 1, "", "DisjointUnion"], [209, 1, 1, "", "EmptySet"], [209, 1, 1, "", "FiniteSet"], [209, 1, 1, "", "Intersection"], [209, 1, 1, "", "Interval"], [209, 1, 1, "", "ProductSet"], [209, 1, 1, "", "Set"], [209, 1, 1, "", "SymmetricDifference"], [209, 1, 1, "", "Union"], [209, 1, 1, "", "UniversalSet"], [209, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[209, 2, 1, "", "as_relational"], [209, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[209, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[209, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[209, 2, 1, "", "Lopen"], [209, 2, 1, "", "Ropen"], [209, 2, 1, "", "as_relational"], [209, 4, 1, "", "end"], [209, 4, 1, "", "is_left_unbounded"], [209, 4, 1, "", "is_right_unbounded"], [209, 4, 1, "", "left_open"], [209, 2, 1, "", "open"], [209, 4, 1, "", "right_open"], [209, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[209, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[209, 4, 1, "", "boundary"], [209, 4, 1, "", "closure"], [209, 2, 1, "", "complement"], [209, 2, 1, "", "contains"], [209, 4, 1, "", "inf"], [209, 4, 1, "", "interior"], [209, 2, 1, "", "intersect"], [209, 2, 1, "", "intersection"], [209, 4, 1, "", "is_closed"], [209, 2, 1, "", "is_disjoint"], [209, 4, 1, "", "is_open"], [209, 2, 1, "", "is_proper_subset"], [209, 2, 1, "", "is_proper_superset"], [209, 2, 1, "", "is_subset"], [209, 2, 1, "", "is_superset"], [209, 2, 1, "", "isdisjoint"], [209, 2, 1, "", "issubset"], [209, 2, 1, "", "issuperset"], [209, 4, 1, "", "kind"], [209, 4, 1, "", "measure"], [209, 2, 1, "", "powerset"], [209, 4, 1, "", "sup"], [209, 2, 1, "", "symmetric_difference"], [209, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[209, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[209, 2, 1, "", "as_relational"]], "sympy.simplify": [[213, 0, 0, "-", "combsimp"], [213, 0, 0, "-", "cse_main"], [213, 0, 0, "-", "epathtools"], [213, 0, 0, "-", "hyperexpand"], [211, 0, 0, "-", "hyperexpand_doc"], [213, 0, 0, "-", "powsimp"], [213, 0, 0, "-", "radsimp"], [213, 0, 0, "-", "ratsimp"], [12, 0, 0, "-", "simplify"], [213, 0, 0, "-", "sqrtdenest"], [213, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[213, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[213, 3, 1, "", "cse"], [213, 3, 1, "", "opt_cse"], [213, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[213, 1, 1, "", "EPath"], [213, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[213, 2, 1, "", "apply"], [213, 2, 1, "", "select"]], "sympy.simplify.fu": [[210, 3, 1, "", "TR0"], [210, 3, 1, "", "TR1"], [210, 3, 1, "", "TR10"], [210, 3, 1, "", "TR10i"], [210, 3, 1, "", "TR11"], [210, 3, 1, "", "TR111"], [210, 3, 1, "", "TR12"], [210, 3, 1, "", "TR12i"], [210, 3, 1, "", "TR13"], [210, 3, 1, "", "TR14"], [210, 3, 1, "", "TR15"], [210, 3, 1, "", "TR16"], [210, 3, 1, "", "TR2"], [210, 3, 1, "", "TR22"], [210, 3, 1, "", "TR2i"], [210, 3, 1, "", "TR3"], [210, 3, 1, "", "TR4"], [210, 3, 1, "", "TR5"], [210, 3, 1, "", "TR6"], [210, 3, 1, "", "TR7"], [210, 3, 1, "", "TR8"], [210, 3, 1, "", "TR9"], [210, 3, 1, "", "TRmorrie"], [210, 3, 1, "", "TRpower"], [210, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[213, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[213, 3, 1, "", "powdenest"], [213, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[213, 3, 1, "", "collect"], [213, 3, 1, "", "collect_const"], [213, 3, 1, "", "collect_sqrt"], [213, 3, 1, "", "fraction"], [213, 3, 1, "", "rad_rationalize"], [213, 3, 1, "", "radsimp"], [213, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[213, 3, 1, "", "ratsimp"], [213, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[213, 3, 1, "", "besselsimp"], [213, 3, 1, "", "hypersimilar"], [213, 3, 1, "", "hypersimp"], [213, 3, 1, "", "kroneckersimp"], [213, 3, 1, "", "logcombine"], [213, 3, 1, "", "nsimplify"], [213, 3, 1, "", "nthroot"], [213, 3, 1, "", "posify"], [213, 3, 1, "", "separatevars"], [213, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[213, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[213, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[219, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[214, 1, 1, "", "BinaryQuadratic"], [214, 1, 1, "", "CubicThue"], [214, 1, 1, "", "DiophantineEquationType"], [214, 1, 1, "", "DiophantineSolutionSet"], [214, 1, 1, "", "GeneralPythagorean"], [214, 1, 1, "", "GeneralSumOfEvenPowers"], [214, 1, 1, "", "GeneralSumOfSquares"], [214, 1, 1, "", "HomogeneousGeneralQuadratic"], [214, 1, 1, "", "HomogeneousTernaryQuadratic"], [214, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [214, 1, 1, "", "InhomogeneousGeneralQuadratic"], [214, 1, 1, "", "InhomogeneousTernaryQuadratic"], [214, 1, 1, "", "Linear"], [214, 3, 1, "", "PQa"], [214, 1, 1, "", "Univariate"], [214, 3, 1, "", "base_solution_linear"], [214, 3, 1, "", "classify_diop"], [214, 3, 1, "", "cornacchia"], [214, 3, 1, "", "descent"], [214, 3, 1, "", "diop_DN"], [214, 3, 1, "", "diop_bf_DN"], [214, 3, 1, "", "diop_general_pythagorean"], [214, 3, 1, "", "diop_general_sum_of_even_powers"], [214, 3, 1, "", "diop_general_sum_of_squares"], [214, 3, 1, "", "diop_linear"], [214, 3, 1, "", "diop_quadratic"], [214, 3, 1, "", "diop_solve"], [214, 3, 1, "", "diop_ternary_quadratic"], [214, 3, 1, "", "diop_ternary_quadratic_normal"], [214, 3, 1, "", "diophantine"], [214, 3, 1, "", "divisible"], [214, 3, 1, "", "equivalent"], [214, 3, 1, "", "find_DN"], [214, 3, 1, "", "gaussian_reduce"], [214, 3, 1, "", "holzer"], [214, 3, 1, "", "ldescent"], [214, 3, 1, "", "merge_solution"], [214, 3, 1, "", "parametrize_ternary_quadratic"], [214, 3, 1, "", "partition"], [214, 3, 1, "", "power_representation"], [214, 3, 1, "", "prime_as_sum_of_two_squares"], [214, 3, 1, "", "reconstruct"], [214, 3, 1, "", "sqf_normal"], [214, 3, 1, "", "square_factor"], [214, 3, 1, "", "sum_of_four_squares"], [214, 3, 1, "", "sum_of_powers"], [214, 3, 1, "", "sum_of_squares"], [214, 3, 1, "", "sum_of_three_squares"], [214, 3, 1, "", "transformation_to_DN"], [214, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[214, 2, 1, "", "matches"]], "sympy.solvers": [[216, 0, 0, "-", "inequalities"], [217, 0, 0, "-", "ode"], [218, 0, 0, "-", "pde"], [219, 0, 0, "-", "recurr"], [220, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[216, 3, 1, "", "reduce_abs_inequalities"], [216, 3, 1, "", "reduce_abs_inequality"], [216, 3, 1, "", "reduce_inequalities"], [216, 3, 1, "", "reduce_rational_inequalities"], [216, 3, 1, "", "solve_poly_inequalities"], [216, 3, 1, "", "solve_poly_inequality"], [216, 3, 1, "", "solve_rational_inequalities"], [216, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[217, 6, 1, "", "allhints"], [217, 3, 1, "", "checkinfsol"], [217, 3, 1, "", "checkodesol"], [217, 3, 1, "", "classify_ode"], [217, 3, 1, "", "constantsimp"], [217, 3, 1, "", "dsolve"], [217, 3, 1, "", "homogeneous_order"], [217, 3, 1, "", "infinitesimals"], [217, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[217, 3, 1, "", "lie_heuristic_abaco1_product"], [217, 3, 1, "", "lie_heuristic_abaco1_simple"], [217, 3, 1, "", "lie_heuristic_abaco2_similar"], [217, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [217, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [217, 3, 1, "", "lie_heuristic_bivariate"], [217, 3, 1, "", "lie_heuristic_chi"], [217, 3, 1, "", "lie_heuristic_function_sum"], [217, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[217, 3, 1, "", "_handle_Integral"], [217, 3, 1, "", "_linear_2eq_order1_type6"], [217, 3, 1, "", "_linear_2eq_order1_type7"], [217, 3, 1, "", "_nonlinear_2eq_order1_type1"], [217, 3, 1, "", "_nonlinear_2eq_order1_type2"], [217, 3, 1, "", "_nonlinear_2eq_order1_type3"], [217, 3, 1, "", "_nonlinear_2eq_order1_type4"], [217, 3, 1, "", "_nonlinear_2eq_order1_type5"], [217, 3, 1, "", "_nonlinear_3eq_order1_type1"], [217, 3, 1, "", "_nonlinear_3eq_order1_type2"], [217, 3, 1, "", "_nonlinear_3eq_order1_type3"], [217, 3, 1, "", "_nonlinear_3eq_order1_type4"], [217, 3, 1, "", "_nonlinear_3eq_order1_type5"], [217, 3, 1, "", "constant_renumber"], [217, 3, 1, "", "ode_1st_power_series"], [217, 3, 1, "", "ode_2nd_power_series_ordinary"], [217, 3, 1, "", "ode_2nd_power_series_regular"], [217, 3, 1, "", "ode_sol_simplicity"], [217, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[217, 3, 1, "", "compute_m_ybar"], [217, 3, 1, "", "construct_c"], [217, 3, 1, "", "construct_d"], [217, 3, 1, "", "get_gen_sol_from_part_sol"], [217, 3, 1, "", "rational_laurent_series"], [217, 3, 1, "", "remove_redundant_sols"], [217, 3, 1, "", "riccati_inverse_normal"], [217, 3, 1, "", "riccati_normal"], [217, 3, 1, "", "riccati_reduced"], [217, 3, 1, "", "solve_aux_eq"], [217, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[217, 1, 1, "", "AlmostLinear"], [217, 1, 1, "", "Bernoulli"], [217, 1, 1, "", "Factorable"], [217, 1, 1, "", "FirstExact"], [217, 1, 1, "", "FirstLinear"], [217, 1, 1, "", "HomogeneousCoeffBest"], [217, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [217, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [217, 1, 1, "", "LieGroup"], [217, 1, 1, "", "LinearCoefficients"], [217, 1, 1, "", "Liouville"], [217, 1, 1, "", "NthAlgebraic"], [217, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [217, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [217, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [217, 1, 1, "", "NthLinearEulerEqHomogeneous"], [217, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [217, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [217, 1, 1, "", "NthOrderReducible"], [217, 1, 1, "", "RationalRiccati"], [217, 1, 1, "", "RiccatiSpecial"], [217, 1, 1, "", "SecondHypergeometric"], [217, 1, 1, "", "SecondLinearAiry"], [217, 1, 1, "", "SecondLinearBessel"], [217, 1, 1, "", "Separable"], [217, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[217, 3, 1, "", "canonical_odes"], [217, 3, 1, "", "dsolve_system"], [217, 3, 1, "", "linear_ode_to_matrix"], [217, 3, 1, "", "linodesolve"], [217, 3, 1, "", "linodesolve_type"], [217, 3, 1, "", "matrix_exp"], [217, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[218, 3, 1, "", "checkpdesol"], [218, 3, 1, "", "classify_pde"], [218, 3, 1, "", "pde_1st_linear_constant_coeff"], [218, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [218, 3, 1, "", "pde_1st_linear_variable_coeff"], [218, 3, 1, "", "pde_separate"], [218, 3, 1, "", "pde_separate_add"], [218, 3, 1, "", "pde_separate_mul"], [218, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[219, 3, 1, "", "solve_poly_system"], [219, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[219, 3, 1, "", "rsolve"], [219, 3, 1, "", "rsolve_hyper"], [219, 3, 1, "", "rsolve_poly"], [219, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[219, 3, 1, "", "checksol"], [219, 3, 1, "", "nsolve"], [219, 3, 1, "", "solve"], [219, 3, 1, "", "solve_linear"], [219, 3, 1, "", "solve_linear_system"], [219, 3, 1, "", "solve_linear_system_LU"], [219, 3, 1, "", "solve_undetermined_coeffs"], [219, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[220, 3, 1, "", "_is_exponential"], [220, 3, 1, "", "_is_logarithmic"], [220, 3, 1, "", "_solve_exponential"], [220, 3, 1, "", "_solve_logarithm"], [220, 3, 1, "", "_transolve"], [220, 3, 1, "", "domain_check"], [220, 3, 1, "", "invert_complex"], [220, 3, 1, "", "invert_real"], [220, 3, 1, "", "linear_eq_to_matrix"], [220, 3, 1, "", "linsolve"], [220, 3, 1, "", "nonlinsolve"], [220, 3, 1, "", "solveset"], [220, 3, 1, "", "solveset_complex"], [220, 3, 1, "", "solveset_real"], [220, 3, 1, "", "solvify"]], "sympy.stats": [[221, 3, 1, "", "Arcsin"], [221, 3, 1, "", "Benini"], [221, 3, 1, "", "Bernoulli"], [221, 1, 1, "", "BernoulliProcess"], [221, 3, 1, "", "Beta"], [221, 3, 1, "", "BetaBinomial"], [221, 3, 1, "", "BetaNoncentral"], [221, 3, 1, "", "BetaPrime"], [221, 3, 1, "", "Binomial"], [221, 3, 1, "", "BoundedPareto"], [221, 3, 1, "", "Cauchy"], [221, 1, 1, "", "CentralMoment"], [221, 3, 1, "", "Chi"], [221, 3, 1, "", "ChiNoncentral"], [221, 3, 1, "", "ChiSquared"], [221, 3, 1, "", "Coin"], [221, 1, 1, "", "ContinuousMarkovChain"], [221, 3, 1, "", "ContinuousRV"], [221, 1, 1, "", "Covariance"], [221, 1, 1, "", "CrossCovarianceMatrix"], [221, 3, 1, "", "Dagum"], [221, 3, 1, "", "Die"], [221, 1, 1, "", "DiscreteMarkovChain"], [221, 3, 1, "", "DiscreteUniform"], [221, 3, 1, "", "E"], [221, 3, 1, "", "Erlang"], [221, 3, 1, "", "ExGaussian"], [221, 1, 1, "", "Expectation"], [221, 1, 1, "", "ExpectationMatrix"], [221, 3, 1, "", "Exponential"], [221, 3, 1, "", "FDistribution"], [221, 3, 1, "", "FiniteRV"], [221, 3, 1, "", "FisherZ"], [221, 3, 1, "", "Frechet"], [221, 3, 1, "", "Gamma"], [221, 3, 1, "", "GammaInverse"], [221, 1, 1, "", "GammaProcess"], [221, 3, 1, "", "GeneralizedMultivariateLogGamma"], [221, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [221, 3, 1, "", "Geometric"], [221, 3, 1, "", "Gompertz"], [221, 3, 1, "", "Gumbel"], [221, 3, 1, "", "Hermite"], [221, 3, 1, "", "Hypergeometric"], [221, 3, 1, "", "JointRV"], [221, 3, 1, "", "Kumaraswamy"], [221, 3, 1, "", "Laplace"], [221, 3, 1, "", "Levy"], [221, 3, 1, "", "LogLogistic"], [221, 3, 1, "", "LogNormal"], [221, 3, 1, "", "Logarithmic"], [221, 3, 1, "", "Logistic"], [221, 3, 1, "", "Lomax"], [221, 3, 1, "", "MatrixGamma"], [221, 3, 1, "", "MatrixNormal"], [221, 3, 1, "", "Maxwell"], [221, 1, 1, "", "Moment"], [221, 3, 1, "", "Moyal"], [221, 3, 1, "", "Multinomial"], [221, 3, 1, "", "MultivariateBeta"], [221, 3, 1, "", "MultivariateEwens"], [221, 3, 1, "", "MultivariateLaplace"], [221, 3, 1, "", "MultivariateNormal"], [221, 3, 1, "", "MultivariateT"], [221, 3, 1, "", "Nakagami"], [221, 3, 1, "", "NegativeBinomial"], [221, 3, 1, "", "NegativeMultinomial"], [221, 3, 1, "", "Normal"], [221, 3, 1, "", "NormalGamma"], [221, 3, 1, "", "P"], [221, 3, 1, "", "Pareto"], [221, 3, 1, "", "Poisson"], [221, 1, 1, "", "PoissonProcess"], [221, 3, 1, "", "PowerFunction"], [221, 1, 1, "", "Probability"], [221, 3, 1, "", "QuadraticU"], [221, 3, 1, "", "Rademacher"], [221, 3, 1, "", "RaisedCosine"], [221, 3, 1, "", "Rayleigh"], [221, 3, 1, "", "Reciprocal"], [221, 3, 1, "", "ShiftedGompertz"], [221, 3, 1, "", "Skellam"], [221, 3, 1, "", "StudentT"], [221, 3, 1, "", "Trapezoidal"], [221, 3, 1, "", "Triangular"], [221, 3, 1, "", "Uniform"], [221, 3, 1, "", "UniformSum"], [221, 1, 1, "", "Variance"], [221, 1, 1, "", "VarianceMatrix"], [221, 3, 1, "", "VonMises"], [221, 3, 1, "", "Wald"], [221, 3, 1, "", "Weibull"], [221, 1, 1, "", "WienerProcess"], [221, 3, 1, "", "WignerSemicircle"], [221, 3, 1, "", "Wishart"], [221, 3, 1, "", "YuleSimon"], [221, 3, 1, "", "Zeta"], [221, 3, 1, "", "cmoment"], [221, 3, 1, "", "correlation"], [221, 3, 1, "", "coskewness"], [221, 3, 1, "", "covariance"], [221, 0, 0, "-", "crv"], [221, 0, 0, "-", "crv_types"], [221, 3, 1, "", "density"], [221, 3, 1, "", "entropy"], [221, 3, 1, "", "factorial_moment"], [221, 0, 0, "-", "frv"], [221, 0, 0, "-", "frv_types"], [221, 3, 1, "", "given"], [221, 3, 1, "", "kurtosis"], [221, 3, 1, "", "marginal_distribution"], [221, 3, 1, "", "median"], [221, 3, 1, "", "moment"], [221, 3, 1, "", "quantile"], [221, 0, 0, "-", "rv"], [221, 3, 1, "", "sample"], [221, 3, 1, "", "sample_iter"], [221, 3, 1, "", "skewness"], [221, 3, 1, "", "std"], [221, 3, 1, "", "variance"], [221, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[221, 2, 1, "", "expectation"], [221, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[221, 2, 1, "", "absorbing_probabilities"], [221, 2, 1, "", "canonical_form"], [221, 2, 1, "", "communication_classes"], [221, 2, 1, "", "decompose"], [221, 2, 1, "", "fixed_row_vector"], [221, 2, 1, "", "fundamental_matrix"], [221, 4, 1, "", "limiting_distribution"], [221, 2, 1, "", "sample"], [221, 2, 1, "", "stationary_distribution"], [221, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[221, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[221, 1, 1, "", "ContinuousDomain"], [221, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[221, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[221, 3, 1, "", "Die"], [221, 3, 1, "", "Normal"]], "sympy.stats.frv": [[221, 1, 1, "", "FiniteDomain"], [221, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[221, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[221, 1, 1, "", "ConditionalDomain"], [221, 1, 1, "", "PSpace"], [221, 1, 1, "", "ProductDomain"], [221, 1, 1, "", "ProductPSpace"], [221, 1, 1, "", "RandomDomain"], [221, 1, 1, "", "RandomSymbol"], [221, 1, 1, "", "SingleDomain"], [221, 1, 1, "", "SinglePSpace"], [221, 3, 1, "", "pspace"], [221, 3, 1, "", "random_symbols"], [221, 3, 1, "", "rs_swap"], [221, 3, 1, "", "sampling_E"], [221, 3, 1, "", "sampling_P"], [221, 3, 1, "", "sampling_density"]], "sympy.tensor": [[222, 0, 0, "-", "array"], [225, 0, 0, "-", "index_methods"], [226, 0, 0, "-", "indexed"], [227, 0, 0, "-", "tensor"], [228, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[222, 1, 1, "", "ImmutableDenseNDimArray"], [222, 1, 1, "", "ImmutableSparseNDimArray"], [222, 1, 1, "", "MutableDenseNDimArray"], [222, 1, 1, "", "MutableSparseNDimArray"], [222, 3, 1, "", "derive_by_array"], [223, 0, 0, "-", "expressions"], [222, 3, 1, "", "permutedims"], [222, 3, 1, "", "tensorcontraction"], [222, 3, 1, "", "tensordiagonal"], [222, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[225, 3, 1, "", "get_contraction_structure"], [225, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[226, 1, 1, "", "Idx"], [226, 1, 1, "", "Indexed"], [226, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[226, 4, 1, "", "label"], [226, 4, 1, "", "lower"], [226, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[226, 4, 1, "", "base"], [226, 4, 1, "", "indices"], [226, 4, 1, "", "ranges"], [226, 4, 1, "", "rank"], [226, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[226, 4, 1, "", "label"], [226, 4, 1, "", "offset"], [226, 4, 1, "", "shape"], [226, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[227, 1, 1, "", "TensAdd"], [227, 1, 1, "", "TensExpr"], [227, 1, 1, "", "TensMul"], [227, 1, 1, "", "TensorHead"], [227, 1, 1, "", "TensorIndex"], [227, 1, 1, "", "TensorIndexType"], [227, 1, 1, "", "TensorSymmetry"], [227, 1, 1, "", "TensorType"], [227, 1, 1, "", "_TensorManager"], [227, 3, 1, "", "canon_bp"], [227, 3, 1, "", "riemann_cyclic"], [227, 3, 1, "", "riemann_cyclic_replace"], [227, 3, 1, "", "tensor_heads"], [227, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[227, 2, 1, "", "canon_bp"], [227, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[227, 2, 1, "", "get_matrix"], [227, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[227, 2, 1, "", "canon_bp"], [227, 2, 1, "", "contract_metric"], [227, 2, 1, "", "get_free_indices"], [227, 2, 1, "", "get_indices"], [227, 2, 1, "", "perm2tensor"], [227, 2, 1, "", "sorted_components"], [227, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[227, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[227, 2, 1, "", "direct_product"], [227, 2, 1, "", "fully_symmetric"], [227, 2, 1, "", "no_symmetry"], [227, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[227, 2, 1, "", "clear"], [227, 2, 1, "", "comm_i2symbol"], [227, 2, 1, "", "comm_symbols2i"], [227, 2, 1, "", "get_comm"], [227, 2, 1, "", "set_comm"], [227, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[228, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[230, 0, 0, "-", "pytest"], [231, 0, 0, "-", "randtest"], [232, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[230, 3, 1, "", "SKIP"], [230, 3, 1, "", "nocache_fail"], [230, 3, 1, "", "raises"], [230, 3, 1, "", "warns"], [230, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[232, 1, 1, "", "PyTestReporter"], [232, 1, 1, "", "Reporter"], [232, 1, 1, "", "SymPyDocTestFinder"], [232, 1, 1, "", "SymPyDocTestRunner"], [232, 1, 1, "", "SymPyOutputChecker"], [232, 1, 1, "", "SymPyTestResults"], [232, 3, 1, "", "convert_to_native_paths"], [232, 3, 1, "", "doctest"], [232, 3, 1, "", "get_sympy_dir"], [232, 3, 1, "", "raise_on_deprecated"], [232, 3, 1, "", "run_all_tests"], [232, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [232, 3, 1, "", "split_list"], [232, 3, 1, "", "sympytestfile"], [232, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[232, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[232, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[232, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[232, 5, 1, "", "attempted"], [232, 5, 1, "", "failed"]], "sympy.utilities": [[233, 0, 0, "-", "autowrap"], [234, 0, 0, "-", "codegen"], [235, 0, 0, "-", "decorator"], [236, 0, 0, "-", "enumerative"], [237, 0, 0, "-", "exceptions"], [239, 0, 0, "-", "iterables"], [240, 0, 0, "-", "lambdify"], [241, 0, 0, "-", "memoization"], [242, 0, 0, "-", "misc"], [243, 0, 0, "-", "pkgdata"], [244, 0, 0, "-", "source"], [245, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[233, 1, 1, "", "CodeWrapper"], [233, 1, 1, "", "CythonCodeWrapper"], [233, 1, 1, "", "DummyWrapper"], [233, 1, 1, "", "F2PyCodeWrapper"], [233, 1, 1, "", "UfuncifyCodeWrapper"], [233, 3, 1, "", "autowrap"], [233, 3, 1, "", "binary_function"], [233, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[233, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[233, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[234, 1, 1, "", "Argument"], [234, 1, 1, "", "CCodeGen"], [234, 1, 1, "", "CodeGen"], [234, 1, 1, "", "DataType"], [234, 1, 1, "", "FCodeGen"], [234, 1, 1, "", "JuliaCodeGen"], [234, 1, 1, "", "OctaveCodeGen"], [234, 1, 1, "", "OutputArgument"], [234, 1, 1, "", "Result"], [234, 1, 1, "", "Routine"], [234, 1, 1, "", "RustCodeGen"], [234, 3, 1, "", "codegen"], [234, 3, 1, "", "get_default_datatype"], [234, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[234, 2, 1, "", "dump_c"], [234, 2, 1, "", "dump_h"], [234, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[234, 2, 1, "", "dump_code"], [234, 2, 1, "", "routine"], [234, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[234, 2, 1, "", "dump_f95"], [234, 2, 1, "", "dump_h"], [234, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[234, 2, 1, "", "dump_jl"], [234, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[234, 2, 1, "", "dump_m"], [234, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[234, 4, 1, "", "result_variables"], [234, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[234, 2, 1, "", "dump_rs"], [234, 2, 1, "", "get_prototype"], [234, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[235, 3, 1, "", "conserve_mpmath_dps"], [235, 3, 1, "", "deprecated"], [235, 3, 1, "", "doctest_depends_on"], [235, 3, 1, "", "memoize_property"], [235, 1, 1, "", "no_attrs_in_subclass"], [235, 3, 1, "", "public"], [235, 3, 1, "", "threaded"], [235, 3, 1, "", "threaded_factory"], [235, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[236, 1, 1, "", "MultisetPartitionTraverser"], [236, 3, 1, "", "factoring_visitor"], [236, 3, 1, "", "list_visitor"], [236, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[236, 2, 1, "", "count_partitions"], [236, 2, 1, "", "enum_all"], [236, 2, 1, "", "enum_large"], [236, 2, 1, "", "enum_range"], [236, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[237, 7, 1, "", "SymPyDeprecationWarning"], [237, 3, 1, "", "ignore_warnings"], [237, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[239, 1, 1, "", "NotIterable"], [239, 3, 1, "", "binary_partitions"], [239, 3, 1, "", "bracelets"], [239, 3, 1, "", "capture"], [239, 3, 1, "", "common_prefix"], [239, 3, 1, "", "common_suffix"], [239, 3, 1, "", "connected_components"], [239, 3, 1, "", "dict_merge"], [239, 3, 1, "", "filter_symbols"], [239, 3, 1, "", "flatten"], [239, 3, 1, "", "generate_bell"], [239, 3, 1, "", "generate_derangements"], [239, 3, 1, "", "generate_involutions"], [239, 3, 1, "", "generate_oriented_forest"], [239, 3, 1, "", "group"], [239, 3, 1, "", "has_dups"], [239, 3, 1, "", "has_variety"], [239, 3, 1, "", "ibin"], [239, 3, 1, "", "iproduct"], [239, 3, 1, "", "is_palindromic"], [239, 3, 1, "", "is_sequence"], [239, 3, 1, "", "iterable"], [239, 3, 1, "", "kbins"], [239, 3, 1, "", "least_rotation"], [239, 3, 1, "", "minlex"], [239, 3, 1, "", "multiset"], [239, 3, 1, "", "multiset_combinations"], [239, 3, 1, "", "multiset_derangements"], [239, 3, 1, "", "multiset_partitions"], [239, 3, 1, "", "multiset_permutations"], [239, 3, 1, "", "necklaces"], [239, 3, 1, "", "numbered_symbols"], [239, 3, 1, "", "ordered_partitions"], [239, 3, 1, "", "partitions"], [239, 3, 1, "", "permute_signs"], [239, 3, 1, "", "postfixes"], [239, 3, 1, "", "prefixes"], [239, 3, 1, "", "random_derangement"], [239, 3, 1, "", "reshape"], [239, 3, 1, "", "rotate_left"], [239, 3, 1, "", "rotate_right"], [239, 3, 1, "", "rotations"], [239, 3, 1, "", "roundrobin"], [239, 3, 1, "", "runs"], [239, 3, 1, "", "sift"], [239, 3, 1, "", "signed_permutations"], [239, 3, 1, "", "strongly_connected_components"], [239, 3, 1, "", "subsets"], [239, 3, 1, "", "take"], [239, 3, 1, "", "topological_sort"], [239, 3, 1, "", "unflatten"], [239, 3, 1, "", "uniq"], [239, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[240, 3, 1, "", "implemented_function"], [240, 3, 1, "", "lambdastr"], [240, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[241, 3, 1, "", "assoc_recurrence_memo"], [241, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[242, 3, 1, "", "as_int"], [242, 3, 1, "", "debug"], [242, 3, 1, "", "debug_decorator"], [242, 3, 1, "", "filldedent"], [242, 3, 1, "", "find_executable"], [242, 3, 1, "", "func_name"], [242, 3, 1, "", "ordinal"], [242, 3, 1, "", "rawlines"], [242, 3, 1, "", "replace"], [242, 3, 1, "", "strlines"], [242, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[243, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[244, 3, 1, "", "get_class"], [244, 3, 1, "", "get_mod_func"], [244, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[245, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[246, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[246, 2, 1, "", "__init__"], [246, 2, 1, "", "create_new"], [246, 2, 1, "", "locate_new"], [246, 2, 1, "", "orient_new"], [246, 2, 1, "", "orient_new_axis"], [246, 2, 1, "", "orient_new_body"], [246, 2, 1, "", "orient_new_quaternion"], [246, 2, 1, "", "orient_new_space"], [246, 2, 1, "", "position_wrt"], [246, 2, 1, "", "rotation_matrix"], [246, 2, 1, "", "scalar_map"]], "sympy.vector": [[248, 3, 1, "", "curl"], [248, 3, 1, "", "divergence"], [248, 3, 1, "", "express"], [248, 3, 1, "", "gradient"], [248, 3, 1, "", "is_conservative"], [248, 3, 1, "", "is_solenoidal"], [248, 3, 1, "", "matrix_to_vector"], [248, 3, 1, "", "scalar_potential"], [248, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[246, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[246, 2, 1, "", "cross"], [246, 2, 1, "", "dot"], [246, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[246, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[246, 4, 1, "", "components"], [246, 2, 1, "", "cross"], [246, 2, 1, "", "dot"], [246, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[246, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[246, 2, 1, "", "multiplicity"], [246, 2, 1, "", "rational_parametrization"], [246, 2, 1, "", "regular_point"], [246, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[246, 1, 1, "", "ParametricIntegral"], [248, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[247, 1, 1, "", "AxisOrienter"], [247, 1, 1, "", "BodyOrienter"], [247, 1, 1, "", "Orienter"], [247, 1, 1, "", "QuaternionOrienter"], [247, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[247, 2, 1, "", "__init__"], [247, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[247, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[247, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[247, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[247, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[246, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[246, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[246, 4, 1, "", "components"], [246, 2, 1, "", "cross"], [246, 2, 1, "", "dot"], [246, 2, 1, "", "magnitude"], [246, 2, 1, "", "normalize"], [246, 2, 1, "", "outer"], [246, 2, 1, "", "projection"], [246, 2, 1, "", "separate"], [246, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 5, 6, 10, 12, 15, 16, 17, 23, 25, 26, 36, 60, 77, 96, 134, 182, 191, 246, 248, 249, 252, 266, 268, 271], "build": [1, 3], "document": [1, 3, 4, 6, 7, 25], "requir": [1, 4], "depend": [1, 3, 131, 191, 250], "docker": 1, "debian": 1, "ubuntu": 1, "fedora": 1, "mac": 1, "window": [1, 187], "10": [1, 10, 98], "doc": [1, 192], "local": 1, "instal": [1, 25, 26, 96, 275], "logo": 1, "view": 1, "auto": 1, "rebuild": 1, "live": 1, "server": 1, "pdf": 1, "debug": 2, "hard": 3, "option": [3, 23, 24, 194], "recommend": [3, 7], "interact": [3, 82, 187], "us": [3, 7, 10, 16, 23, 24, 36, 54, 57, 78, 79, 95, 98, 126, 131, 132, 185, 187, 198, 220, 250], "print": [3, 10, 20, 36, 82, 108, 115, 176, 181, 201, 276], "pars": [3, 24, 96], "logic": [3, 19, 84, 256, 259], "plot": [3, 10, 102, 147, 187], "lambdifi": [3, 10, 95, 240, 266], "code": [3, 4, 5, 7, 10, 36, 38, 108, 185, 201, 244, 256, 258], "gener": [3, 6, 7, 44, 46, 191, 196, 220, 251, 256, 258], "autowrap": [3, 36, 233], "printer": [3, 36, 201, 276], "test": [3, 5, 10, 51, 84, 200, 229, 231, 232, 273], "onli": [3, 220], "statist": 3, "symengin": 3, "backend": [3, 187], "experiment": [3, 96], "rubi": 3, "integr": [3, 10, 58, 62, 76, 78, 79, 80, 81, 108, 189, 196, 255, 267], "sage": 3, "develop": [3, 5, 54], "get": [3, 5, 12], "sourc": [3, 10, 12, 244], "run": [3, 5, 26, 232], "benchmark": 3, "deprec": [4, 10], "polici": 4, "what": [4, 131, 190, 191, 220, 271, 274], "i": [4, 12, 79, 95, 131, 190, 201, 220, 271], "try": 4, "avoid": 4, "backward": 4, "incompat": 4, "chang": 4, "first": [4, 10], "place": 4, "when": [4, 24, 79], "doe": [4, 12, 220], "public": 4, "api": [4, 25, 75, 79, 81, 104, 127, 183, 220, 233, 234, 253, 256], "Not": [4, 23, 24], "The": [4, 10, 18, 20, 37, 44, 79, 131, 172, 183, 196, 208, 211, 251, 252, 271], "purpos": 4, "technic": 4, "possibl": [4, 23, 273], "how": [4, 21, 25, 79, 185, 220], "long": 4, "should": [4, 95], "last": 4, "checklist": 4, "ad": 4, "releas": 4, "note": [4, 20, 54, 66, 131, 208, 210, 269, 278], "entri": [4, 90], "environ": 5, "setup": 5, "git": [5, 26], "virtual": 5, "docstr": [6, 7, 97, 100, 109, 110, 111, 112, 113, 114, 115, 116, 178, 179, 180, 181, 239, 246, 247, 248], "style": [6, 7], "guid": [6, 7, 21, 25, 127, 183, 253], "guidelin": [6, 7], "format": [6, 7, 24], "section": 6, "1": [6, 10, 79, 98, 117, 131, 143, 217], "singl": [6, 12, 14], "sentenc": 6, "summari": 6, "2": [6, 10, 79, 98, 117, 131, 217], "explan": [6, 13, 25], "3": [6, 10, 81, 98, 117, 168, 217], "exampl": [6, 20, 27, 54, 66, 78, 81, 94, 98, 105, 118, 131, 135, 139, 170, 172, 185, 200, 201, 208, 211, 221, 222, 223, 226, 251, 271, 277], "4": [6, 10, 98, 217], "paramet": [6, 211, 220], "5": [6, 10, 98, 217], "see": [6, 54, 239, 251], "also": [6, 54, 239], "6": [6, 10, 98, 217], "refer": [6, 18, 25, 28, 35, 53, 54, 56, 66, 72, 79, 81, 85, 86, 87, 88, 90, 92, 94, 96, 133, 139, 142, 172, 183, 185, 186, 187, 188, 190, 192, 194, 196, 197, 208, 210, 211, 214, 220, 233, 234, 253, 256], "sampl": [6, 10], "class": [6, 15, 35, 36, 53, 56, 85, 86, 88, 90, 92, 94, 131, 177, 187, 190, 196, 201, 213, 214, 222, 246, 247], "ar": [6, 185, 191, 220], "mathemat": [6, 12, 134], "function": [6, 10, 12, 20, 24, 36, 44, 53, 54, 60, 61, 62, 72, 73, 76, 77, 79, 84, 90, 94, 96, 98, 108, 132, 154, 157, 178, 179, 182, 187, 189, 191, 192, 197, 200, 201, 211, 213, 214, 217, 218, 222, 248, 252, 276, 277], "best": [6, 7, 20], "practic": [6, 7, 20], "write": [6, 7, 20], "import": [6, 10], "sphinx": 6, "cross": [6, 179], "referenc": 6, "type": [7, 14, 36, 62, 178, 217, 220, 221], "narr": 7, "markdown": 7, "prefer": [7, 24], "math": [7, 36], "latex": [7, 96, 276], "head": 7, "spell": 7, "punctuat": 7, "capit": 7, "tone": 7, "contribut": [8, 9, 25, 198], "make": [9, 23, 24], "list": [10, 12, 14], "activ": 10, "silenc": 10, "warn": [10, 237], "version": 10, "12": 10, "11": [10, 98], "new": [10, 250], "mathematica": [10, 201], "parser": [10, 117], "redund": 10, "static": 10, "method": [10, 16, 20, 26, 112, 121, 124, 125, 126, 129, 130, 131, 201, 218, 220, 225, 250, 273], "carmichael": 10, "check": [10, 178], "argument": [10, 12, 220], "hadamardproduct": 10, "matadd": 10, "matmul": 10, "some": [10, 134, 220], "travers": [10, 54], "have": [10, 23, 200], "been": 10, "move": [10, 211], "core": [10, 54, 87], "trace": 10, "compat": [10, 223], "submodul": [10, 66], "9": [10, 98], "expr_free_symbol": 10, "stat": [10, 221], "numsampl": 10, "n": [10, 54, 217, 222, 223], "poli": [10, 190, 191, 192, 199], "solver": [10, 199, 215, 216, 217, 219, 220, 278], "rawmatrix": 10, "non": 10, "expr": [10, 54], "object": [10, 15, 226], "matrix": [10, 32, 86, 87, 90, 91, 131, 217, 221, 273], "get_seg": 10, "attribut": [10, 37, 44], "mdft": 10, "physic": [10, 105, 108, 118, 128, 129, 130, 131, 132, 133, 134, 135, 174, 176, 182, 183, 184, 185, 256, 262], "matric": [10, 16, 85, 86, 87, 88, 89, 90, 92, 105, 107, 223, 256, 260, 273], "privat": 10, "sparsematrix": [10, 92], "_smat": 10, "densematrix": 10, "_mat": 10, "laplace_transform": 10, "nocond": 10, "fals": 10, "8": [10, 98], "theanocod": 10, "assumpt": [10, 15, 18, 20, 31, 54], "handler": [10, 18], "askhandl": 10, "relat": [10, 12, 14, 18, 54, 62, 84, 182, 185, 209, 252], "7": [10, 98, 217], "call": [10, 24], "stochasticprocess": 10, "distribut": [10, 194, 221], "randomindexedsymbol": 10, "discretemarkovchain": 10, "absorbing_probabilit": 10, "util": [10, 36, 51, 52, 71, 90, 140, 196, 219, 238, 245, 256, 264], "misc": [10, 31], "find_execut": 10, "mutabl": 10, "diffgeom": 10, "unicod": [10, 276], "pretti": [10, 201, 276], "stringpict": 10, "prettyform": 10, "pretty_symbologi": 10, "xstr": 10, "pass": 10, "set": [10, 15, 23, 32, 66, 185, 209, 220, 276], "oper": [10, 12, 76, 90, 145, 154, 156, 157, 178, 182, 185, 211, 222, 228, 249, 251, 252, 266, 273], "longer": 10, "accept": 10, "arg": [10, 60, 272], "variou": [10, 200], "randtest": 10, "mix": 10, "polynomi": [10, 62, 76, 189, 191, 192, 193, 194, 196, 197, 198, 200, 219, 277], "express": [10, 12, 23, 36, 66, 73, 76, 84, 87, 96, 110, 179, 191, 200, 223, 248, 250, 266, 272], "binari": 10, "print_cycl": 10, "flag": 10, "combinator": [10, 41], "permut": [10, 45, 46], "string": [10, 18, 24, 266], "fallback": 10, "sympifi": [10, 54], "creat": [10, 12, 20, 90], "an": [10, 23, 66, 117, 172, 211, 220, 272], "indefinit": 10, "eq": [10, 23, 54], "tensor": [10, 50, 62, 166, 224, 227, 228], "fun_ev": 10, "__call__": 10, "tensortyp": 10, "dummy_fmt": 10, "tensorindextyp": 10, "metric": 10, "get_kronecker_delta": 10, "get_epsilon": 10, "tensorsymmetri": 10, "tensorhead": 10, "unit": [10, 32, 171, 172, 173, 175], "quantiti": [10, 170, 172, 174, 250], "is_emptyset": 10, "productset": [10, 209], "iter": [10, 209, 239], "set_potential_energi": 10, "mechan": [10, 18, 99, 108, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 154, 221], "condit": [10, 79, 209], "conditionset": [10, 209], "max_degre": 10, "get_upper_degre": 10, "properti": [10, 18, 188], "multivariate_result": 10, "dixonresult": 10, "rh": 10, "default": 10, "0": 10, "tupl": [10, 12, 14, 54, 197], "lambda": [10, 54], "evalu": [10, 12, 20, 58, 76, 134, 272], "differentiate_finit": 10, "data": 10, "clear_cach": 10, "clear_subproduct": 10, "keyword": [10, 12], "is_diagonaliz": 10, "row": [10, 273], "col": 10, "jordan_block": 10, "dimens": [10, 66, 169, 172], "scale_factor": 10, "quanit": 10, "classof": 10, "a2idx": 10, "from": [10, 12, 23, 24, 200, 223], "dot": [10, 179, 276], "product": [10, 57, 155, 166, 222, 251], "column": [10, 273], "vector": [10, 44, 54, 127, 176, 177, 178, 182, 183, 184, 185, 194, 246, 248, 249, 250, 252, 253, 254, 255], "geometri": [10, 56, 66, 188], "line3d": 10, "equat": [10, 22, 23, 24, 129, 130, 131, 170, 189, 214, 217, 219, 220, 278], "need": [10, 172], "k": [10, 192], "modul": [10, 103, 137, 176, 183, 188, 189, 190, 191, 194, 196, 197, 214, 217, 218, 220, 233], "arrai": [10, 222, 223], "conv_": 10, "renam": 10, "from_": 10, "glossari": 11, "gotcha": [12, 18, 117, 269], "pitfal": 12, "introduct": [12, 16, 28, 35, 36, 37, 44, 56, 66, 84, 117, 134, 172, 182, 184, 187, 188, 189, 196, 200, 254, 271], "equal": [12, 23, 54, 269], "sign": [12, 60, 269], "doubl": [12, 59], "variabl": [12, 24, 187, 221, 250], "assign": 12, "between": [12, 18, 174, 191], "symbol": [12, 18, 19, 20, 54, 73, 131, 135, 186, 191, 197, 200, 220, 269, 271], "python": [12, 36], "number": [12, 32, 40, 54, 57, 58, 79, 191, 196, 200, 256, 261], "v": [12, 19, 191], "float": [12, 54, 58], "ration": [12, 32, 54, 191, 192, 197, 200, 203, 209, 217, 277], "immut": [12, 88], "invers": [12, 20, 60, 79], "trig": 12, "sqrt": [12, 60], "special": [12, 17, 36, 62, 197, 209, 277], "dictionari": [12, 14], "help": 12, "within": 12, "solv": [14, 22, 23, 24, 98, 189, 196, 219, 220, 278], "output": [14, 108, 220], "empti": 14, "Of": 14, "valu": [14, 19, 24], "boolean": [14, 19, 84], "classif": 15, "kind": [15, 54], "func": [15, 272], "finit": [16, 32, 34, 37, 188, 191, 194, 196, 200, 211, 221, 267], "differ": [16, 18, 34, 134, 191, 250, 267], "approxim": [16, 36], "deriv": [16, 54, 185, 222, 252, 267], "A": [16, 119, 120, 123, 124, 125, 126, 131, 271, 278], "direct": [16, 252], "topic": [17, 108, 176, 256, 263], "old": [18, 191], "system": [18, 102, 122, 135, 169, 171, 172, 175, 217, 219, 249, 250, 252, 254], "appli": [18, 79, 211], "input": [18, 220], "predic": [18, 31, 32], "abov": 18, "definit": [18, 20, 32, 72], "implic": 18, "interpret": 18, "other": [18, 20, 26, 73, 182, 250], "is_": 18, "implement": [18, 79, 182, 201, 211, 233, 234, 249, 252], "limit": [18, 78, 117, 206, 208, 267], "combin": [18, 76], "fuzzi": 19, "three": [19, 66], "bool": 19, "custom": [20, 187, 201], "easi": 20, "case": [20, 220], "fulli": 20, "defin": 20, "automat": [20, 200], "eval": 20, "remind": 20, "kei": [20, 134, 272], "point": [20, 58, 69, 108, 176, 180, 184, 249], "numer": [20, 24, 58, 76, 81, 95, 108, 134], "evalf": [20, 54, 95, 266], "rewrit": [20, 36, 202, 277], "simplif": [20, 58, 84, 210, 213, 277], "doit": 20, "expand": [20, 54, 200, 202, 277], "differenti": [20, 56, 76, 108, 219, 220, 278], "as_real_imag": 20, "miscellan": [20, 60, 66, 242], "_eval_": 20, "complet": [20, 117], "versin": 20, "divid": 20, "fuse": 20, "multipli": 20, "add": [20, 54], "fma": 20, "addit": [20, 76], "tip": [20, 266, 267, 269, 272, 273], "algebra": [23, 28, 32, 83, 90, 142, 185, 188, 191, 196, 200, 219, 278], "guidanc": [23, 24], "your": 23, "Into": 23, "That": [23, 24], "zero": [23, 24, 32, 54, 102, 194, 200, 273], "put": 23, "form": [23, 24, 84, 91, 131, 190, 217, 223], "restrict": 23, "domain": [23, 189, 191, 192, 197, 200, 220], "solut": [23, 24, 154, 220, 251], "explicitli": 23, "repres": [23, 24, 79, 162, 191, 196], "infinit": [23, 32, 220], "result": [23, 200], "substitut": [23, 108, 176, 266], "solveset": [23, 220], "cannot": 23, "necessarili": 23, "Be": 23, "interrog": 23, "programmat": 23, "can": [23, 24], "speed": [23, 24, 108, 131], "up": [23, 24, 276], "all": 23, "With": [23, 24], "No": 23, "close": [23, 24], "which": [23, 95, 201], "you": 24, "might": 24, "exact": 24, "includ": 24, "ensur": [24, 220], "consist": 24, "ani": [24, 220], "denomin": 24, "do": [24, 220], "simplifi": [24, 36, 194, 212, 213, 277], "welcom": 25, "": [25, 54, 112, 121, 124, 125, 126, 129, 130, 131, 152, 163, 200, 210, 219, 220, 250, 255, 274], "tutori": [25, 214, 265, 270], "anaconda": 26, "mpmath": 26, "question": 26, "abc": 27, "caveat": [27, 96], "quaternion": 28, "ask": 29, "assum": 30, "queri": 31, "content": [31, 41, 61, 74, 80, 193, 205, 215, 224], "perform": 31, "improv": [31, 117], "common": [32, 85, 108, 176, 200, 201, 202, 213], "tautolog": 32, "commut": [32, 148, 188], "calculu": [32, 34, 185, 267], "symmetr": 32, "invert": 32, "orthogon": [32, 62, 197, 252], "unitari": 32, "posit": 32, "upper": 32, "triangular": 32, "lower": 32, "diagon": [32, 222, 273], "full": 32, "rank": 32, "squar": [32, 189, 213], "integ": [32, 54, 60, 191, 209], "element": [32, 131, 191, 196], "real": [32, 191, 209], "complex": [32, 60, 191, 209], "singular": [32, 34, 62, 98], "normal": [32, 91, 190, 200], "theori": [32, 35, 256, 261], "even": 32, "odd": 32, "prime": [32, 196], "composit": [32, 76], "order": [32, 54, 197, 208, 211, 217], "neg": 32, "nonzero": 32, "nonposit": 32, "nonneg": 32, "irrat": 32, "extend": [32, 211], "hermitian": 32, "imaginari": 32, "antihermitian": 32, "transcendent": 32, "refin": 33, "weight": 34, "categori": 35, "base": [35, 56, 188, 189, 200, 207, 220], "diagram": 35, "draw": 35, "codegen": [36, 234], "tool": [36, 93, 213], "abstract": [36, 99, 103, 105, 127, 137, 154, 183, 192], "syntax": 36, "tree": [36, 191, 201, 272], "ast": [36, 117], "predefin": 36, "node": 36, "c": [36, 201], "cfunction": 36, "specif": 36, "cnode": 36, "cxxnode": 36, "fortran": [36, 201], "fnode": 36, "algorithm": [36, 37, 152, 163, 194, 197, 203, 208, 211], "pyutil": 36, "cutil": 36, "futil": 36, "present": [37, 44], "group": [37, 39, 42, 44, 45, 172], "overview": [37, 44, 79], "facil": 37, "construct": [37, 44, 223], "free": [37, 189], "word": [37, 44], "coset": 37, "enumer": [37, 59], "todd": 37, "coxet": 37, "cosett": 37, "compress": 37, "standard": 37, "subgroup": 37, "index": [37, 44, 223, 226], "low": 37, "reidemeist": 37, "schreier": 37, "bibliographi": [37, 44], "grai": 38, "constructor": [39, 197, 273], "nilpot": 40, "abelian": 40, "cyclic": 40, "name": 42, "partit": [43, 59, 214, 239], "polycycl": 44, "polycyclicgroup": 44, "collector": 44, "comput": [44, 79, 95, 154, 200, 271], "minim": [44, 196], "uncollect": 44, "subword": 44, "collect": [44, 202, 213, 277], "expon": [44, 200], "depth": [44, 66], "lead": 44, "polyhedron": 47, "prufer": 48, "sequenc": [48, 76, 194, 197, 206, 207], "subset": [49, 57], "canonic": 50, "concret": 53, "hypergeometr": [53, 62, 73, 76, 203, 211, 213], "term": [53, 200, 202, 208], "cach": 54, "cacheit": 54, "basic": [54, 58, 90, 178, 189, 191, 197, 209, 249, 256, 257, 266, 273], "atom": 54, "singleton": [54, 207, 209], "unevaluatedexpr": 54, "atomicexpr": 54, "wild": 54, "dummi": 54, "var": 54, "algebraicnumb": 54, "numbersymbol": 54, "realnumb": 54, "igcd": 54, "ilcm": 54, "seterr": 54, "One": 54, "negativeon": 54, "half": 54, "nan": [54, 131], "infin": 54, "negativeinfin": 54, "complexinfin": 54, "exp1": 54, "imaginaryunit": 54, "pi": 54, "eulergamma": 54, "catalan": [54, 59], "goldenratio": 54, "tribonacciconst": 54, "mod_invers": 54, "power": [54, 198, 203, 209, 213, 271, 277], "pow": 54, "integer_nthroot": 54, "integer_log": 54, "mul": 54, "prod": 54, "mod": 54, "rel": 54, "ne": 54, "lt": 54, "le": 54, "gt": 54, "ge": 54, "greaterthan": 54, "lessthan": 54, "unequ": 54, "strictgreaterthan": 54, "strictlessthan": 54, "multidimension": 54, "wildfunct": 54, "diff": 54, "functionclass": 54, "sub": [54, 95], "poleerror": 54, "count_op": 54, "expand_mul": 54, "expand_log": [54, 277], "expand_func": [54, 277], "expand_trig": [54, 277], "expand_complex": 54, "expand_multinomi": 54, "expand_power_exp": [54, 277], "expand_power_bas": [54, 277], "nfloat": 54, "evalfmixin": 54, "precisionexhaust": 54, "contain": 54, "tuplekind": 54, "dict": 54, "exprtool": 54, "gcd_term": 54, "factor_term": 54, "numberkind": 54, "undefinedkind": 54, "booleankind": 54, "sort": 54, "default_sort_kei": 54, "random": [54, 221], "random_complex_numb": 54, "verify_numer": 54, "test_derivative_numer": 54, "_randrang": 54, "_randint": 54, "bottom_up": 54, "postorder_travers": 54, "preorder_travers": 54, "walk": [54, 272], "cryptographi": 55, "discret": [57, 221], "transform": [57, 79, 81, 96, 250], "fast": 57, "fourier": [57, 204], "theoret": 57, "walsh": 57, "hadamard": 57, "m\u00f6biu": 57, "convolut": 57, "cover": 57, "intersect": [57, 66, 209], "accuraci": 58, "error": [58, 62], "handl": [58, 220], "sum": 58, "combinatori": [59, 213], "bell": 59, "bernoulli": [59, 217], "binomi": 59, "euler": 59, "factori": [59, 189], "subfactori": 59, "factorial2": 59, "fallingfactori": 59, "fibonacci": 59, "tribonacci": 59, "harmon": [59, 62, 143, 168], "luca": 59, "genocchi": 59, "andr": 59, "multifactori": 59, "risingfactori": 59, "stirl": 59, "nc": 59, "np": 59, "nt": 59, "elementari": [60, 188, 207, 209], "re": 60, "im": 60, "ab": 60, "conjug": 60, "polar_lift": 60, "periodic_argu": 60, "principal_branch": 60, "trigonometr": [60, 62, 210, 213, 277], "sin": 60, "co": 60, "tan": 60, "cot": 60, "sec": 60, "csc": 60, "sinc": 60, "asin": 60, "aco": 60, "atan": 60, "acot": 60, "asec": 60, "acsc": 60, "atan2": 60, "hyperbol": 60, "hyperbolicfunct": 60, "sinh": 60, "cosh": 60, "tanh": 60, "coth": 60, "sech": 60, "csch": 60, "asinh": 60, "acosh": 60, "atanh": 60, "acoth": 60, "asech": 60, "acsch": 60, "ceil": 60, "floor": 60, "roundfunct": 60, "frac": 60, "exponenti": [60, 62, 217, 277], "exp": 60, "lambertw": 60, "log": 60, "exp_polar": 60, "piecewis": 60, "exprcondpair": 60, "identityfunct": 60, "min": 60, "max": 60, "root": [60, 197, 213], "cbrt": 60, "real_root": 60, "diracdelta": 62, "heavisid": 62, "gamma": [62, 105], "beta": 62, "fresnel": 62, "logarithm": [62, 277], "bessel": 62, "airi": 62, "b": 62, "spline": 62, "riemann": 62, "zeta": 62, "ellipt": 62, "mathieu": 62, "jacobi": 62, "gegenbau": 62, "chebyshev": 62, "legendr": 62, "hermit": 62, "laguerr": 62, "spheric": 62, "curv": 63, "ellips": 64, "entiti": [65, 66, 187], "avail": 66, "usag": [66, 117, 135, 191, 251], "median": 66, "pappu": 66, "hexagon": 66, "theorem": [66, 79, 255], "futur": [66, 108, 117, 176], "work": [66, 200], "truth": [66, 84], "beyond": 66, "visual": [66, 134], "line": 67, "plane": [68, 79], "polygon": [70, 81], "about": [72, 220, 250, 278], "holonom": [72, 73, 74, 76, 77, 122], "convert": [73, 76, 191, 217, 266], "represent": [73, 77, 172, 185, 191], "meijer": [73, 76, 79, 211], "g": [73, 76, 79, 211], "intern": [75, 79, 81, 191, 194, 196, 214, 217], "multipl": [76, 185, 196], "seri": [76, 187, 198, 203, 204, 205, 208, 267], "expans": [76, 208, 211, 213, 267], "linear": [76, 90, 108, 113, 131, 132, 172, 200, 214, 217], "holonomicfunct": 77, "differentialoper": 77, "differentialoperatoralgebra": 77, "current": 78, "polar": [79, 139], "branch": 79, "argand": 79, "tabl": [79, 84, 211], "lookup": 79, "mellin": 79, "converg": 79, "laplac": 79, "thi": [79, 220], "valid": 79, "exist": 79, "formula": [79, 211], "todo": 81, "bug": 81, "over": [81, 200, 209], "polytop": 81, "For": 81, "2d": 81, "polyhedra": 81, "session": 82, "lie": [83, 217], "equival": [84, 134, 214], "manipul": [84, 90, 110, 193, 194, 197, 198, 220, 272], "infer": 84, "matrixcommon": 85, "matrixkind": 85, "dens": [86, 191, 192, 194], "immutablematrix": [86, 88], "block": 87, "matrixdetermin": 90, "matrixreduct": 90, "matrixsubspac": 90, "matrixeigen": 90, "matrixcalculu": 90, "matrixbas": 90, "except": [90, 96, 194, 237], "numpi": 90, "spars": [92, 93, 191, 192, 194], "immutablesparsematrix": 92, "ntheori": 94, "ecm": 94, "q": 94, "ufuncifi": 95, "aesara": [95, 201], "so": 95, "mathrm": [96, 276], "runtim": 96, "beam": [97, 98, 99], "bend": 98, "problem": [98, 196, 251], "continuum": 99, "truss": [99, 100], "control": [101, 102, 103, 104, 187], "pole": 102, "bode": 102, "impuls": 102, "respons": [102, 201], "step": [102, 220], "ramp": 102, "lti": 104, "high": 105, "energi": [105, 132], "hydrogen": 106, "wavefunct": 106, "potenti": [108, 131, 132, 176, 182, 252], "issu": [108, 117, 131, 176, 273], "advanc": [108, 176, 200, 272, 273], "featur": [108, 176, 268], "choic": 108, "coordin": [108, 121, 131, 187, 249, 250, 252, 254], "acceler": [108, 176, 184, 208], "interfac": [108, 176, 187, 221], "bodi": [109, 132, 255], "msub": 110, "find_dynamicsymbol": 110, "joint": [111, 128, 221], "framework": [111, 128], "pinjoint": 111, "prismaticjoint": 111, "jointsmethod": [111, 128], "kane": [112, 121, 124, 125, 129, 131], "lagrang": [112, 121, 126, 130, 131], "kanemethod": 112, "lagrangesmethod": 112, "mass": [114, 132, 255], "inertia": [114, 132, 176], "particl": [114, 132, 158], "rigidbodi": 114, "inertia_of_point_mass": 114, "linear_momentum": 114, "angular_momentum": 114, "kinetic_energi": 114, "potential_energi": 114, "lagrangian": [114, 132], "mechanics_print": 115, "mprint": 115, "mpprint": 115, "mlatex": 115, "symbolicsystem": [116, 135], "autolev": [117, 134], "dynam": 117, "onlin": 117, "fix": 117, "switch": 117, "bicycl": 119, "four": 120, "bar": 120, "linkag": 120, "nonminim": 121, "pendulum": 121, "multi": 122, "degre": 122, "freedom": 122, "roll": [123, 124, 125, 126], "disc": [123, 124, 125, 126], "constraint": 125, "forc": 125, "classic": [127, 194], "structur": [129, 130, 172, 214], "background": 131, "directli": [131, 250], "new_method": 131, "kwarg": 131, "a_and_b": 131, "true": 131, "slow": 131, "ha": 131, "zoo": 131, "oo": 131, "further": [131, 269], "rigid": 132, "dyadic": [132, 176, 177, 246, 249, 250], "momentum": 132, "angular": [132, 184], "momenta": 132, "kinet": 132, "user": [134, 214, 217, 218], "rough": 134, "link": 134, "gaussian": [136, 191, 192, 200], "optic": [136, 137], "medium": 138, "wave": 141, "pauli": 142, "quantum": [143, 154, 168], "oscil": [143, 168], "d": [143, 168], "anticommut": 144, "cartesian": 145, "state": [145, 154, 157, 165], "clebsch": 146, "gordan": 146, "coeffici": [146, 194], "circuit": 147, "constant": [149, 172], "dagger": 150, "gate": 151, "grover": 152, "hilbert": 153, "space": [153, 172, 211], "analyt": 154, "inner": 155, "helper": [157, 201], "box": 158, "qappli": 159, "qft": 160, "qubit": 161, "shor": 163, "spin": 164, "second": 167, "quantiz": 167, "dimension": 170, "analysi": 170, "philosophi": 172, "behind": 172, "literatur": [172, 195, 200], "prefix": 173, "convers": 174, "referencefram": [176, 177, 185], "dynamicsymbol": [176, 179], "essenti": [177, 179, 246, 248], "coordinatesym": 177, "field": [178, 182, 191, 194, 196, 200, 252, 254], "curl": [178, 182, 248, 252], "diverg": [178, 182, 248, 252, 255], "gradient": [178, 182, 248, 252], "scalar_potenti": [178, 248], "scalar_potential_differ": [178, 248], "is_conserv": [178, 248], "is_solenoid": [178, 248], "outer": 179, "time_deriv": 179, "kinemat": [180, 184], "kinematic_equ": 180, "init_vprint": 181, "vprint": 181, "vpprint": 181, "vlatex": 181, "scalar": [182, 252, 254], "conserv": [182, 252], "solenoid": [182, 252], "veloc": 184, "altern": 185, "basi": [185, 194, 196], "frame": 185, "wigner": 186, "credit": 186, "copyright": 186, "author": 186, "plotgrid": 187, "pyglet": 187, "mode": 187, "specifi": 187, "interv": [187, 209], "color": 187, "geometr": 187, "ascii": [187, 276], "art": 187, "agca": 188, "ring": [188, 191, 192], "ideal": 188, "homomorph": [188, 196], "syzygi": 188, "extens": [188, 200], "concept": 189, "divis": [189, 214], "euclidean": 189, "gcd": [189, 194, 200], "lcm": 189, "factor": [189, 194, 200, 217, 277], "groebner": [189, 194], "introduc": [190, 191], "domainmatrix": 190, "ddm": 190, "sdm": 190, "dup": 191, "dmp": 191, "polyr": 191, "polynomialr": 191, "choos": 191, "unifi": 191, "gf": 192, "p": [192, 196], "zz": 192, "qq": 192, "mpq": 192, "zz_i": 192, "qq_i": 192, "rr": 192, "cc": 192, "x": 192, "ex": 192, "quotient": 192, "level": 194, "multivari": [194, 200], "univari": [194, 200, 214], "remaind": 194, "subresult": 194, "configur": 194, "modular": 194, "undocu": 194, "main": 196, "decomposit": [196, 197, 200], "adic": 196, "valuat": 196, "find": [196, 197], "subfield": 196, "As": 196, "arithmet": 196, "extra": 197, "monomi": 197, "encod": 197, "formal": [197, 203], "appel": 197, "partial": [197, 200, 219, 220], "fraction": [197, 200, 213, 277], "dispers": 197, "rs_seri": 198, "solve_lin_si": 199, "eqs_to_matrix": 199, "sympy_eqs_to_r": 199, "_solve_lin_si": 199, "_solve_lin_sys_compon": 199, "wester": 200, "articl": 200, "simpl": 200, "support": 200, "back": 200, "cyclotom": 200, "reduc": 200, "gr\u00f6bner": 200, "mistak": 201, "prettyprint": 201, "rcodeprint": 201, "smt": 201, "lib": 201, "mapl": 201, "javascript": 201, "julia": 201, "octav": 201, "matlab": 201, "rust": 201, "gtk": 201, "lambdaprint": 201, "latexprint": 201, "mathmlprint": 201, "pythoncodeprint": 201, "pythonprint": 201, "srepr": [201, 276], "strprinter": 201, "preview": 201, "codeprint": 201, "preced": 201, "dotprint": 201, "subexpress": [202, 213], "detect": 202, "compound": [207, 209, 221], "recurs": [207, 272], "gruntz": 208, "more": [208, 250, 271], "intuit": 208, "residu": 208, "finiteset": 209, "union": 209, "complement": 209, "symmetricdiffer": 209, "disjointunion": 209, "emptyset": 209, "universalset": 209, "natur": 209, "naturals0": 209, "imageset": 209, "rang": 209, "complexregion": 209, "powerset": 209, "setkind": 209, "hongguang": 210, "fu": 210, "rule": [210, 251], "notat": 211, "increment": 211, "decrement": 211, "indic": 211, "reduct": 211, "around": 211, "loos": 211, "end": 211, "confluenc": 211, "separatevar": 213, "nthroot": 213, "kroneckersimp": 213, "besselsimp": 213, "hypersimp": 213, "hypersimilar": 213, "nsimplifi": 213, "posifi": 213, "logcombin": [213, 277], "radsimp": 213, "rad_ration": 213, "collect_sqrt": 213, "collect_const": 213, "ratsimp": 213, "ratsimpmodprim": 213, "trigsimp": [213, 277], "powsimp": [213, 277], "powdenest": [213, 277], "combsimp": [213, 277], "denest": 213, "sqrtdenest": 213, "elimin": 213, "cse": 213, "opt_cs": 213, "tree_cs": 213, "hyperexpand": [213, 277], "epath": 213, "diophantin": [214, 219, 220], "classify_diop": 214, "diop_solv": 214, "diop_linear": 214, "base_solution_linear": 214, "diop_quadrat": 214, "diop_dn": 214, "cornacchia": 214, "diop_bf_dn": 214, "transformation_to_dn": 214, "transformation_to_norm": 214, "find_dn": 214, "diop_ternary_quadrat": 214, "square_factor": 214, "descent": 214, "diop_general_pythagorean": 214, "diop_general_sum_of_squar": 214, "diop_general_sum_of_even_pow": 214, "power_represent": 214, "sum_of_three_squar": 214, "sum_of_four_squar": 214, "sum_of_pow": 214, "sum_of_squar": 214, "merge_solut": 214, "pqa": 214, "parametrize_ternary_quadrat": 214, "diop_ternary_quadratic_norm": 214, "ldescent": 214, "gaussian_reduc": 214, "holzer": 214, "prime_as_sum_of_two_squar": 214, "sqf_normal": 214, "reconstruct": 214, "diophantinesolutionset": 214, "diophantineequationtyp": 214, "binaryquadrat": 214, "inhomogeneousternaryquadrat": 214, "homogeneousternaryquadraticnorm": 214, "homogeneousternaryquadrat": 214, "inhomogeneousgeneralquadrat": 214, "homogeneousgeneralquadrat": 214, "generalsumofsquar": 214, "generalpythagorean": 214, "cubicthu": 214, "generalsumofevenpow": 214, "inequ": [216, 219, 220], "od": [217, 219, 220], "dsolv": 217, "dsolve_system": 217, "classify_od": 217, "checkodesol": 217, "homogeneous_ord": 217, "infinitesim": 217, "checkinfsol": 217, "constantsimp": 217, "hint": [217, 218], "allhint": 217, "odesimp": 217, "constant_renumb": 217, "sol_simpl": 217, "1st_exact": 217, "1st_homogeneous_coeff_best": 217, "1st_homogeneous_coeff_subs_dep_div_indep": 217, "1st_homogeneous_coeff_subs_indep_div_dep": 217, "1st_linear": 217, "1st_rational_riccati": 217, "2nd_linear_airi": 217, "2nd_linear_bessel": 217, "liouvil": 217, "riccati_special_minus2": 217, "nth_linear_constant_coeff_homogen": 217, "nth_linear_constant_coeff_undetermined_coeffici": 217, "nth_linear_constant_coeff_variation_of_paramet": 217, "nth_linear_euler_eq_homogen": 217, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 217, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 217, "nth_algebra": 217, "nth_order_reduc": 217, "separ": 217, "almost_linear": 217, "linear_coeffici": 217, "separable_reduc": 217, "lie_group": 217, "2nd_hypergeometr": 217, "1st_power_seri": 217, "2nd_power_series_ordinari": 217, "2nd_power_series_regular": 217, "heurist": 217, "abaco1_simpl": 217, "abaco1_product": 217, "bivari": 217, "chi": 217, "abaco2_similar": 217, "function_sum": 217, "abaco2_unique_unknown": 217, "abaco2_unique_gener": 217, "riccati": 217, "riccati_norm": 217, "riccati_inverse_norm": 217, "riccati_reduc": 217, "construct_c": 217, "construct_d": 217, "rational_laurent_seri": 217, "compute_m_ybar": 217, "solve_aux_eq": 217, "remove_redundant_sol": 217, "get_gen_sol_from_part_sol": 217, "solve_riccati": 217, "canon": 217, "linodesolv": 217, "inform": [217, 218], "jordan": 217, "nonlinear": 217, "pde": [218, 219, 220], "pde_separ": 218, "pde_separate_add": 218, "pde_separate_mul": 218, "pdsolv": 218, "classify_pd": 218, "checkpdesol": 218, "pde_1st_linear_constant_coeff_homogen": 218, "pde_1st_linear_constant_coeff": 218, "pde_1st_linear_variable_coeff": 218, "ordinari": [219, 220], "deutil": 219, "recurr": 219, "de": [219, 220], "wrong": 220, "why": [220, 271], "we": 220, "emploi": 220, "return": 220, "search": 220, "deal": 220, "where": 220, "known": 220, "plan": 220, "linear_eq_to_matrix": 220, "linsolv": 220, "nonlinsolv": 220, "transolv": 220, "continu": [221, 277], "stochast": 221, "process": 221, "dim": [222, 223], "contract": 222, "explicit": 223, "pytest": 230, "randomis": 231, "detail": [233, 234, 249], "routin": 234, "decor": 235, "enum": 236, "variat": 239, "memoiz": 241, "pkgdata": 243, "inspect": 244, "time": 245, "coordsys3d": [246, 250], "del": [246, 251, 252], "parametricregion": 246, "implicitregion": 246, "parametricintegr": 246, "orient": [247, 250], "axisorient": 247, "bodyorient": 247, "spaceorient": 247, "quaternionorient": 247, "matrix_to_vector": 248, "vector_integr": 248, "locat": 250, "orient_new": 250, "AND": 250, "quadrilater": 251, "third": 251, "curvilinear": 252, "applic": 255, "calcul": 255, "perimet": 255, "surfac": 255, "area": 255, "volum": 255, "flux": 255, "verifi": 255, "stoke": 255, "introductori": [265, 270], "quick": [266, 267, 269, 272, 273], "two": 269, "final": 269, "read": 269, "interest": 271, "understand": 272, "through": 272, "invari": 272, "prevent": 272, "shape": 273, "access": 273, "delet": 273, "insert": 273, "determin": 273, "rref": 273, "nullspac": 273, "columnspac": 273, "eigenvalu": 273, "eigenvector": 273, "next": 274, "preliminari": 275, "exercis": 275, "str": 276, "mathml": 276, "cancel": 277, "apart": 277, "gammasimp": 277}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})