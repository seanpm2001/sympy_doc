Search.setIndex({"docnames": ["citing", "contributing/build-docs", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/dev-setup", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/make-a-contribution", "explanation/active-deprecations", "explanation/gotchas", "explanation/index", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/custom-functions", "guides/index", "guides/solving/index", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/four_bar_linkage_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/joints", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers"], "filenames": ["citing.md", "contributing/build-docs.rst", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/dev-setup.rst", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.rst", "contributing/make-a-contribution.rst", "explanation/active-deprecations.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/custom-functions.md", "guides/index.rst", "guides/solving/index.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/four_bar_linkage_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/joints.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst"], "titles": ["Citing SymPy", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Docstring Style Guide", "Contributing", "Making a Contribution", "List of active deprecations", "Gotchas and Pitfalls", "Explanations", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Writing Custom Functions", "How-to Guides", "Solve Equations", "Welcome to SymPy\u2019s documentation!", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joints Framework (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "A four bar linkage", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Joints Framework in Physics/Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 17, 18, 22, 23, 26, 27, 30, 31, 32, 33, 40, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 63, 73, 75, 77, 79, 80, 81, 83, 86, 90, 92, 93, 94, 98, 100, 101, 103, 105, 107, 108, 126, 127, 130, 140, 144, 157, 166, 168, 172, 178, 181, 183, 185, 187, 188, 190, 192, 193, 194, 196, 197, 204, 205, 207, 210, 213, 214, 215, 216, 217, 218, 221, 222, 226, 228, 229, 232, 233, 235, 236, 242, 243, 245, 246, 248, 250, 251, 262, 263, 265, 266, 268, 269, 272, 273, 274], "public": [0, 6, 32, 50, 51, 72, 187, 188, 190, 191, 195, 210, 213, 217, 231, 242], "us": [0, 1, 2, 4, 5, 6, 8, 11, 13, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 130, 131, 132, 135, 136, 138, 140, 142, 143, 144, 147, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 245, 247, 248, 250, 251, 253, 254, 259, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "meurer": 0, "A": [0, 3, 4, 6, 7, 10, 11, 13, 15, 16, 17, 18, 21, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 96, 98, 100, 104, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 123, 125, 128, 129, 130, 131, 132, 135, 137, 140, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 242, 243, 245, 246, 247, 248, 250, 251, 258, 264, 266, 268, 269, 273], "smith": [0, 10, 87, 186], "cp": [0, 42, 91, 185], "paprocki": 0, "m": [0, 1, 10, 11, 14, 16, 18, 24, 28, 32, 33, 38, 39, 41, 42, 46, 49, 50, 51, 52, 53, 55, 58, 60, 62, 66, 67, 75, 77, 79, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 100, 102, 103, 105, 107, 108, 109, 110, 112, 113, 117, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 139, 146, 160, 161, 164, 166, 168, 178, 182, 184, 185, 186, 188, 190, 191, 192, 193, 197, 198, 199, 200, 202, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 218, 219, 222, 223, 229, 230, 232, 235, 237, 242, 244, 246, 250, 251, 263, 269, 272, 273, 274], "\u010dert\u00edk": 0, "o": [0, 6, 11, 14, 16, 23, 31, 32, 41, 42, 48, 50, 51, 56, 58, 60, 61, 63, 64, 66, 72, 75, 90, 94, 105, 108, 110, 112, 113, 125, 126, 127, 128, 130, 131, 153, 163, 174, 176, 178, 180, 190, 191, 193, 194, 197, 199, 204, 207, 213, 217, 222, 235, 244, 247, 263], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 216], "ivanov": 0, "s": [0, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 46, 47, 48, 49, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 72, 73, 75, 77, 78, 79, 80, 81, 83, 84, 86, 89, 90, 91, 92, 93, 94, 98, 100, 102, 104, 105, 107, 110, 113, 115, 119, 123, 128, 130, 134, 135, 136, 142, 143, 145, 147, 149, 150, 153, 157, 158, 160, 161, 163, 166, 168, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 223, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 243, 247, 248, 249, 250, 253, 261, 262, 263, 265, 266, 267, 268, 269, 273, 274], "moor": [0, 83, 86], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 4, 6, 7, 10, 11, 17, 18, 24, 27, 28, 30, 32, 33, 34, 41, 42, 43, 44, 46, 50, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 77, 79, 80, 81, 82, 83, 86, 90, 91, 92, 96, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 125, 126, 127, 128, 130, 131, 135, 137, 143, 147, 159, 161, 163, 165, 166, 168, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 200, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 223, 226, 228, 231, 235, 236, 242, 244, 246, 250, 262, 263, 267, 268, 269, 272, 273, 274], "vig": 0, "granger": [0, 149], "BE": 0, "muller": 0, "rp": [0, 66, 135], "bonazzi": 0, "f": [0, 1, 6, 10, 11, 14, 18, 30, 31, 32, 33, 40, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 68, 73, 74, 75, 77, 79, 81, 83, 86, 90, 91, 92, 94, 98, 107, 108, 112, 118, 123, 125, 126, 130, 132, 136, 137, 148, 149, 152, 161, 163, 166, 173, 177, 178, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 232, 235, 236, 238, 247, 248, 251, 262, 263, 268, 272, 273, 274], "gupta": [0, 216], "h": [0, 11, 14, 30, 31, 32, 33, 34, 41, 46, 49, 50, 51, 55, 58, 72, 75, 77, 81, 82, 86, 87, 92, 100, 110, 128, 132, 135, 147, 149, 152, 157, 161, 168, 182, 183, 184, 185, 186, 190, 191, 192, 193, 196, 197, 205, 209, 213, 215, 216, 217, 218, 223, 230, 251, 263, 272], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 149], "mj": 0, "terrel": 0, "ar": [0, 1, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 138, 140, 142, 144, 147, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 250, 252, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 23, 24, 28, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 65, 66, 72, 73, 75, 77, 79, 80, 81, 82, 83, 86, 89, 90, 92, 93, 94, 96, 100, 101, 102, 103, 105, 108, 110, 113, 115, 120, 121, 122, 126, 127, 128, 130, 132, 135, 136, 138, 146, 147, 152, 153, 158, 160, 161, 163, 168, 169, 172, 173, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 228, 229, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 262, 268, 273], "kulal": 0, "cimrman": 0, "r": [0, 1, 6, 7, 10, 11, 14, 16, 18, 24, 31, 32, 33, 34, 41, 42, 50, 51, 52, 54, 55, 56, 63, 64, 66, 68, 72, 73, 75, 77, 86, 90, 92, 94, 100, 102, 105, 108, 109, 110, 112, 113, 115, 117, 120, 121, 122, 127, 128, 129, 130, 131, 132, 135, 159, 160, 163, 164, 166, 173, 174, 176, 178, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 204, 205, 207, 209, 210, 213, 215, 216, 217, 223, 228, 230, 232, 242, 244, 246, 247, 248, 251, 273], "scopatz": 0, "2017": [0, 182], "symbol": [0, 3, 6, 7, 10, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 40, 42, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 80, 81, 83, 86, 90, 91, 92, 93, 94, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 128, 130, 132, 135, 136, 137, 138, 140, 142, 143, 145, 147, 149, 151, 152, 155, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 229, 235, 236, 242, 243, 244, 246, 247, 248, 251, 253, 258, 262, 263, 266, 268, 269, 272, 273, 274], "comput": [0, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 20, 22, 24, 30, 32, 33, 34, 37, 39, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 65, 69, 72, 73, 74, 76, 77, 79, 81, 83, 86, 87, 89, 90, 92, 94, 98, 100, 104, 107, 108, 109, 112, 113, 115, 116, 120, 123, 130, 147, 148, 149, 157, 162, 163, 165, 167, 168, 172, 174, 178, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 219, 229, 232, 235, 236, 242, 243, 244, 245, 246, 247, 248, 250, 253, 258, 262, 263, 265, 266, 269, 273], "python": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 18, 20, 21, 22, 25, 26, 27, 30, 42, 50, 51, 54, 56, 62, 78, 80, 81, 83, 86, 90, 91, 92, 93, 104, 113, 130, 173, 183, 184, 185, 187, 188, 194, 196, 197, 205, 209, 213, 216, 218, 228, 229, 230, 231, 232, 235, 236, 238, 242, 254, 265, 266, 267, 268, 269, 271, 272, 273], "peerj": 0, "scienc": [0, 42, 75, 86, 129, 130, 184, 191, 207, 263], "3": [0, 4, 5, 7, 11, 12, 14, 16, 17, 18, 20, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 100, 101, 102, 103, 106, 110, 112, 115, 116, 117, 118, 120, 121, 122, 123, 126, 127, 130, 131, 132, 134, 136, 140, 142, 143, 144, 148, 152, 157, 158, 160, 162, 163, 166, 169, 170, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 228, 229, 231, 232, 233, 235, 236, 238, 240, 242, 243, 244, 245, 246, 248, 250, 251, 258, 262, 263, 265, 267, 268, 269, 272, 273, 274], "e103": 0, "http": [0, 1, 3, 4, 5, 6, 7, 10, 16, 18, 22, 24, 26, 27, 28, 30, 31, 32, 34, 38, 39, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 66, 67, 68, 72, 75, 77, 78, 79, 80, 81, 83, 86, 90, 93, 98, 100, 102, 103, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 173, 175, 177, 179, 182, 191, 193, 196, 197, 200, 202, 204, 205, 206, 209, 210, 213, 216, 217, 229, 230, 231, 233, 235, 236, 238, 242, 243, 247, 249, 251, 269, 272], "doi": [0, 6, 30, 42, 86, 191, 206, 209, 217], "org": [0, 3, 6, 7, 11, 16, 18, 24, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 66, 67, 68, 77, 78, 79, 80, 81, 83, 86, 90, 98, 100, 102, 103, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 173, 175, 177, 179, 191, 193, 197, 200, 204, 205, 206, 210, 213, 216, 217, 229, 230, 231, 233, 235, 242, 243, 247, 249, 251, 269, 272], "10": [0, 3, 6, 11, 12, 18, 22, 24, 30, 32, 39, 41, 42, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 63, 64, 66, 67, 75, 77, 78, 80, 81, 83, 86, 87, 90, 91, 92, 93, 95, 96, 98, 100, 101, 106, 110, 113, 115, 124, 130, 132, 136, 147, 157, 158, 169, 173, 174, 175, 176, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 200, 203, 204, 205, 206, 209, 210, 213, 216, 217, 218, 227, 228, 233, 235, 236, 238, 242, 244, 262, 269, 273], "7717": 0, "cs": [0, 90, 190, 191, 192, 197, 217], "103": [0, 41], "bibtex": 0, "entri": [0, 10, 28, 33, 40, 42, 48, 51, 62, 75, 79, 81, 82, 83, 85, 89, 108, 113, 115, 128, 135, 186, 190, 192, 193, 207, 217, 236], "latex": [0, 1, 3, 6, 18, 22, 58, 78, 172, 173, 177, 181, 183, 188, 197, 260, 267, 268], "user": [0, 1, 3, 4, 5, 6, 7, 10, 13, 15, 16, 18, 31, 32, 33, 41, 42, 49, 50, 51, 52, 58, 62, 75, 79, 83, 86, 92, 93, 94, 98, 100, 104, 113, 123, 126, 128, 131, 151, 152, 161, 167, 168, 172, 173, 176, 180, 184, 187, 190, 192, 194, 195, 196, 197, 198, 206, 209, 211, 215, 216, 217, 226, 229, 230, 232, 233, 236, 242, 245, 246, 251, 262, 265, 266, 268, 269, 270], "articl": [0, 50, 51, 83, 86, 189, 191, 192, 197, 242, 267], "titl": [0, 6, 7, 183], "author": [0, 6, 90, 149, 192, 258], "aaron": 0, "christoph": [0, 242], "p": [0, 1, 10, 11, 14, 16, 17, 18, 24, 26, 27, 28, 32, 33, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 67, 72, 73, 75, 77, 81, 83, 86, 90, 92, 93, 94, 96, 100, 101, 105, 107, 108, 109, 110, 112, 113, 117, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 142, 161, 163, 168, 174, 176, 178, 180, 182, 183, 185, 186, 187, 189, 190, 191, 193, 194, 197, 199, 200, 204, 205, 207, 209, 210, 213, 215, 216, 217, 218, 222, 223, 235, 242, 244, 245, 246, 247, 248, 250, 269, 273], "mateusz": 0, "v": [0, 1, 5, 11, 24, 32, 40, 46, 49, 50, 51, 52, 53, 54, 64, 75, 79, 81, 86, 90, 94, 105, 106, 107, 110, 115, 127, 128, 130, 131, 135, 136, 148, 163, 168, 173, 175, 176, 178, 180, 181, 183, 187, 190, 191, 192, 193, 197, 207, 209, 210, 213, 215, 217, 228, 235, 242, 244, 245, 246, 247, 248, 250], "c": [0, 1, 3, 11, 14, 16, 18, 23, 24, 30, 31, 34, 35, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 73, 75, 77, 79, 80, 81, 83, 86, 90, 91, 92, 93, 94, 96, 100, 102, 104, 106, 107, 108, 113, 118, 120, 121, 122, 126, 127, 128, 130, 132, 136, 142, 143, 144, 147, 149, 152, 157, 160, 162, 163, 168, 173, 176, 180, 181, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 222, 223, 229, 230, 232, 235, 238, 239, 242, 243, 244, 245, 246, 247, 248, 251, 254, 260, 263, 265, 272, 273, 274], "ert": 0, "k": [0, 7, 11, 16, 18, 24, 30, 31, 32, 33, 34, 36, 40, 41, 44, 45, 48, 49, 50, 51, 53, 54, 55, 56, 58, 63, 68, 75, 77, 80, 81, 83, 86, 90, 107, 108, 118, 125, 127, 128, 130, 137, 151, 152, 155, 159, 161, 163, 172, 178, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 213, 215, 217, 218, 219, 221, 222, 223, 224, 228, 232, 235, 242, 243, 244, 245, 246, 247, 248, 250, 251, 272, 273], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 5, 10, 11, 16, 17, 18, 24, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 73, 75, 77, 79, 80, 81, 82, 83, 86, 90, 92, 93, 94, 96, 98, 100, 105, 106, 107, 108, 109, 110, 113, 117, 118, 127, 128, 130, 132, 135, 140, 142, 144, 146, 151, 152, 155, 160, 161, 162, 163, 173, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 228, 231, 232, 235, 238, 242, 243, 244, 245, 246, 247, 263, 265, 269, 273, 274], "matthew": 0, "amit": [0, 216], "sergiu": 0, "jason": [0, 197], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 149], "e": [0, 1, 3, 4, 5, 6, 7, 10, 11, 16, 17, 18, 23, 24, 28, 30, 31, 32, 33, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 86, 90, 92, 93, 94, 96, 100, 101, 105, 108, 110, 112, 113, 126, 127, 130, 131, 132, 135, 142, 143, 147, 152, 153, 155, 158, 160, 162, 163, 168, 169, 173, 177, 178, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 242, 245, 248, 250, 251, 262, 263, 267, 268, 273], "richard": [0, 90], "francesco": 0, "harsh": [0, 216], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 7, 10, 11, 24, 28, 30, 32, 33, 36, 40, 41, 42, 46, 48, 49, 51, 52, 54, 55, 58, 72, 75, 77, 79, 81, 83, 86, 90, 98, 101, 107, 128, 129, 130, 135, 142, 143, 160, 163, 168, 172, 178, 182, 184, 186, 188, 190, 191, 192, 193, 194, 196, 197, 199, 205, 207, 209, 210, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 229, 235, 242, 243, 244, 245, 246, 247, 248, 250, 251], "andi": [0, 129], "rou": 0, "ka": 0, "n": [0, 5, 6, 7, 11, 14, 16, 18, 23, 28, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 44, 46, 48, 49, 51, 52, 54, 55, 56, 58, 60, 63, 64, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 83, 86, 87, 90, 92, 93, 94, 100, 102, 103, 105, 107, 108, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 134, 136, 137, 139, 143, 148, 149, 152, 157, 159, 160, 161, 163, 164, 166, 168, 170, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 215, 216, 217, 220, 222, 223, 226, 229, 235, 237, 238, 242, 243, 244, 245, 246, 250, 263, 269, 272, 273, 274], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 217], "anthoni": 0, "year": [0, 4, 6, 10], "month": 0, "jan": [0, 51], "keyword": [0, 4, 6, 18, 31, 32, 33, 41, 42, 50, 51, 54, 55, 63, 65, 66, 67, 81, 86, 90, 93, 98, 100, 108, 125, 126, 157, 163, 177, 183, 185, 187, 188, 190, 192, 193, 196, 197, 198, 204, 209, 210, 215, 222, 228, 229, 231, 233, 236, 238, 246, 269], "algebra": [0, 7, 11, 16, 20, 27, 33, 41, 50, 51, 54, 56, 68, 71, 72, 73, 75, 77, 80, 81, 85, 87, 90, 91, 92, 112, 123, 130, 131, 179, 182, 185, 186, 188, 189, 190, 191, 193, 194, 197, 199, 207, 210, 211, 213, 216, 252, 253, 256, 258, 259, 264, 265, 267, 269], "system": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 17, 18, 19, 20, 25, 27, 41, 50, 51, 52, 56, 75, 78, 79, 80, 81, 86, 91, 92, 93, 97, 99, 100, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 120, 122, 123, 124, 125, 126, 127, 128, 130, 141, 142, 157, 160, 161, 163, 166, 170, 173, 176, 177, 178, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 197, 205, 206, 211, 212, 216, 217, 228, 229, 242, 243, 244, 247, 249, 251, 258, 265, 267, 269, 273, 274], "abstract": [0, 10, 30, 31, 39, 50, 52, 56, 58, 63, 68, 83, 107, 113, 147, 149, 158, 161, 162, 163, 184, 189, 192, 216, 217, 219, 223, 230, 250, 254], "an": [0, 1, 3, 4, 6, 7, 9, 11, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 104, 105, 107, 108, 110, 112, 115, 117, 123, 125, 127, 128, 130, 131, 134, 135, 136, 140, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 160, 161, 163, 164, 165, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 242, 243, 245, 246, 248, 249, 250, 251, 259, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274], "open": [0, 1, 3, 4, 6, 7, 9, 10, 22, 30, 50, 52, 56, 77, 80, 100, 113, 116, 130, 197, 205, 212, 216, 217, 239, 267, 269], "sourc": [0, 1, 5, 6, 7, 18, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 173, 174, 175, 176, 177, 178, 182, 183, 184, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 248, 260, 267], "written": [0, 3, 6, 7, 16, 18, 28, 32, 38, 41, 42, 46, 50, 55, 58, 62, 68, 73, 75, 79, 80, 89, 90, 117, 123, 130, 163, 178, 179, 180, 181, 184, 185, 193, 197, 200, 204, 207, 210, 213, 230, 248, 250, 266, 267, 268, 273], "pure": [0, 3, 24, 51, 56, 77, 80, 83, 100, 127, 168, 187, 188, 190, 193, 197, 217, 235], "It": [0, 1, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 22, 24, 25, 26, 27, 30, 31, 32, 38, 41, 42, 44, 45, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 63, 66, 67, 73, 75, 77, 79, 80, 86, 90, 91, 92, 93, 94, 96, 98, 100, 102, 104, 105, 106, 107, 108, 113, 115, 121, 123, 124, 125, 126, 128, 130, 132, 136, 137, 147, 152, 153, 158, 159, 160, 161, 162, 163, 165, 168, 171, 173, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 200, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 232, 233, 236, 242, 244, 245, 246, 248, 250, 251, 262, 263, 265, 266, 267, 268, 269, 271, 272, 273], "built": [0, 1, 3, 6, 7, 11, 13, 25, 27, 33, 50, 56, 77, 113, 130, 185, 188, 197, 198, 202, 213, 216, 217, 223, 232, 235, 236, 267, 268, 272], "focu": [0, 10, 16, 60, 215, 267], "extens": [0, 3, 6, 7, 16, 18, 41, 50, 56, 62, 66, 77, 86, 110, 130, 185, 187, 188, 189, 190, 191, 192, 193, 197, 207, 209, 213, 215, 216, 229, 230, 239, 266, 273], "eas": [0, 113, 181, 183, 197, 200], "through": [0, 4, 6, 11, 16, 18, 22, 30, 32, 41, 42, 44, 49, 50, 51, 54, 55, 58, 60, 61, 62, 63, 64, 66, 75, 79, 80, 86, 90, 93, 94, 98, 105, 108, 113, 115, 123, 128, 134, 135, 173, 183, 184, 190, 192, 197, 203, 207, 209, 213, 215, 216, 217, 218, 229, 235, 242, 243, 248, 251, 264, 265, 266, 271], "both": [0, 3, 4, 6, 7, 10, 11, 13, 16, 17, 18, 23, 24, 30, 31, 32, 42, 45, 46, 48, 49, 50, 51, 55, 56, 58, 65, 74, 75, 77, 80, 81, 86, 90, 92, 93, 94, 100, 105, 107, 108, 115, 117, 118, 124, 127, 135, 136, 147, 153, 160, 163, 168, 173, 176, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 195, 196, 197, 199, 204, 205, 206, 207, 209, 210, 213, 215, 216, 218, 222, 228, 230, 235, 236, 242, 243, 263, 266, 267, 268, 273, 274], "interact": [0, 23, 50, 64, 77, 84, 86, 130, 160, 177, 181, 187, 188, 209, 217, 233, 240, 252, 259, 260, 265, 267, 268, 272, 273], "programmat": [0, 13, 216, 246], "applic": [0, 7, 10, 33, 34, 40, 41, 42, 43, 50, 51, 56, 77, 81, 86, 90, 93, 96, 108, 112, 113, 123, 127, 129, 130, 147, 148, 173, 176, 180, 185, 190, 191, 192, 193, 197, 199, 204, 210, 213, 216, 230, 235, 242, 248, 249, 267], "These": [0, 3, 6, 7, 10, 11, 12, 14, 16, 17, 18, 21, 23, 31, 32, 41, 49, 50, 51, 52, 58, 75, 77, 80, 86, 92, 94, 100, 108, 109, 115, 117, 121, 124, 127, 130, 153, 158, 159, 173, 174, 178, 180, 181, 184, 185, 186, 187, 188, 190, 197, 207, 210, 213, 214, 216, 217, 219, 224, 228, 229, 230, 235, 248, 263, 266, 269, 272, 273], "characterist": [0, 52, 68, 86, 180, 186, 188, 190, 191, 213, 215, 269], "have": [0, 1, 4, 5, 6, 7, 11, 13, 14, 16, 17, 18, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 61, 65, 66, 68, 73, 74, 75, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 98, 100, 101, 103, 104, 107, 108, 110, 113, 114, 115, 121, 123, 124, 127, 130, 147, 149, 152, 156, 158, 160, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 199, 200, 202, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 221, 223, 224, 226, 227, 228, 230, 231, 232, 235, 236, 238, 242, 243, 245, 246, 247, 248, 251, 262, 263, 265, 266, 267, 268, 269, 272, 273, 274], "led": 0, "becom": [0, 4, 6, 7, 10, 11, 14, 16, 41, 46, 49, 50, 51, 54, 73, 78, 86, 92, 177, 180, 184, 185, 187, 194, 197, 200, 206, 213, 216, 217, 223, 238, 244, 246, 273], "popular": [0, 3, 51, 91, 130, 267], "librari": [0, 3, 4, 6, 10, 16, 18, 21, 22, 32, 50, 51, 55, 75, 77, 78, 86, 91, 104, 113, 130, 183, 187, 188, 217, 228, 229, 230, 235, 236, 262, 265, 266, 267], "scientif": [0, 22, 50, 130], "ecosystem": 0, "thi": [0, 1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 147, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274], "paper": [0, 6, 90, 115, 181, 192, 193, 206, 207, 210, 213, 217], "present": [0, 3, 7, 10, 11, 14, 30, 31, 34, 37, 41, 42, 44, 48, 50, 53, 77, 86, 90, 93, 96, 98, 100, 108, 115, 163, 165, 173, 175, 177, 178, 183, 184, 190, 191, 192, 196, 197, 210, 216, 230, 236, 239, 244, 245, 246, 250, 274], "architectur": [0, 130, 187, 228], "descript": [0, 4, 6, 7, 10, 20, 21, 31, 33, 40, 58, 77, 90, 135, 153, 160, 171, 180, 181, 182, 197, 221, 228, 230, 232, 233, 252, 270], "its": [0, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 24, 26, 27, 28, 31, 32, 33, 34, 38, 40, 41, 42, 49, 50, 51, 52, 55, 56, 58, 60, 62, 66, 68, 75, 77, 78, 80, 81, 83, 86, 90, 92, 93, 94, 96, 100, 104, 105, 108, 110, 113, 115, 116, 117, 123, 124, 127, 128, 130, 131, 136, 142, 148, 149, 151, 152, 157, 158, 161, 163, 168, 170, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 209, 212, 213, 215, 216, 217, 221, 222, 223, 228, 231, 232, 235, 236, 239, 242, 244, 245, 246, 248, 251, 267, 268, 269, 272, 273], "featur": [0, 3, 4, 7, 10, 11, 12, 18, 21, 22, 50, 52, 54, 81, 92, 113, 123, 130, 179, 197, 213, 217, 226, 230, 233, 249, 261, 266, 267, 271, 273], "discuss": [0, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 21, 33, 41, 51, 58, 90, 104, 108, 113, 123, 127, 128, 172, 179, 180, 181, 187, 223, 232, 252, 262, 264, 265, 267, 268, 270, 272, 273], "select": [0, 1, 12, 21, 32, 34, 41, 42, 49, 50, 51, 59, 64, 78, 80, 81, 90, 92, 106, 128, 168, 177, 187, 188, 190, 191, 193, 197, 206, 209, 215], "submodul": [0, 3, 4, 6, 32, 104, 184, 188, 190, 192], "The": [0, 1, 3, 5, 6, 7, 8, 11, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 249, 250, 251, 258, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274], "supplementari": 0, "materi": [0, 93, 134, 271], "provid": [0, 1, 3, 4, 6, 7, 10, 12, 14, 15, 16, 17, 18, 21, 24, 30, 31, 32, 33, 39, 40, 41, 42, 48, 49, 50, 52, 54, 58, 59, 61, 66, 69, 72, 73, 77, 78, 80, 81, 83, 86, 87, 89, 90, 91, 92, 94, 96, 98, 104, 105, 108, 110, 112, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 130, 131, 136, 137, 157, 165, 166, 167, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 200, 202, 205, 206, 207, 209, 213, 214, 215, 216, 217, 218, 222, 223, 228, 229, 230, 232, 233, 235, 236, 238, 242, 244, 245, 246, 248, 249, 251, 263, 267, 268, 269, 273], "addit": [0, 3, 4, 7, 10, 11, 14, 19, 22, 32, 40, 41, 42, 49, 50, 56, 58, 62, 68, 70, 74, 75, 77, 78, 80, 83, 86, 92, 97, 98, 100, 104, 105, 108, 127, 128, 131, 149, 161, 162, 165, 177, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 197, 203, 206, 207, 209, 210, 213, 214, 215, 216, 217, 228, 229, 230, 232, 233, 235, 236, 238, 245, 265, 267, 268, 269, 272, 273], "exampl": [0, 2, 3, 4, 5, 7, 10, 11, 13, 14, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 95, 96, 98, 100, 102, 103, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 167, 169, 170, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 202, 203, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 220, 221, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 248, 249, 250, 251, 253, 257, 258, 259, 262, 263, 264, 265, 266, 268, 269, 271, 272, 274], "further": [0, 3, 5, 16, 18, 27, 31, 51, 58, 62, 75, 77, 82, 83, 86, 92, 93, 97, 98, 105, 107, 108, 123, 128, 135, 180, 182, 183, 184, 190, 192, 193, 206, 207, 209, 213, 217, 223, 266, 267], "outlin": [0, 3, 4, 16, 18, 48, 77, 184, 213], "detail": [0, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 18, 21, 31, 41, 50, 52, 55, 57, 58, 75, 76, 77, 78, 81, 86, 90, 98, 107, 108, 113, 128, 130, 135, 153, 157, 173, 175, 182, 183, 184, 190, 192, 199, 204, 209, 210, 211, 213, 214, 217, 222, 223, 228, 231, 233, 234, 236, 246, 247, 248, 249, 252, 263, 265, 269, 270, 272], "volum": [0, 6, 32, 49, 58, 75, 182, 191, 207, 210, 213, 232, 242, 249], "page": [0, 1, 3, 4, 6, 7, 10, 11, 16, 17, 20, 21, 32, 33, 49, 55, 75, 90, 91, 108, 130, 168, 183, 186, 187, 188, 191, 197, 207, 210, 233, 250, 273], "journal": [0, 6, 49, 55, 90, 101, 191, 209, 232], "issn": 0, "2376": 0, "5992": 0, "url": [0, 51, 233], "bsd": [0, 1, 3, 267], "licens": [0, 1, 3, 267], "so": [0, 3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 20, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 39, 41, 42, 44, 46, 48, 50, 51, 54, 56, 58, 60, 62, 63, 64, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 86, 87, 90, 92, 93, 94, 100, 104, 108, 113, 115, 117, 123, 125, 127, 130, 131, 136, 147, 149, 157, 159, 160, 161, 163, 165, 167, 168, 172, 173, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 221, 222, 226, 228, 229, 232, 233, 235, 236, 238, 247, 251, 253, 262, 263, 265, 267, 268, 269, 272, 273, 274], "you": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 13, 17, 18, 20, 21, 22, 23, 26, 27, 28, 30, 32, 33, 41, 42, 49, 50, 51, 52, 54, 56, 57, 58, 62, 64, 66, 68, 69, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 90, 91, 92, 100, 102, 103, 104, 108, 109, 110, 113, 114, 124, 125, 127, 128, 130, 152, 157, 158, 161, 163, 172, 173, 175, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 198, 200, 204, 205, 209, 210, 213, 214, 215, 216, 217, 221, 222, 223, 226, 228, 229, 230, 231, 233, 235, 236, 239, 245, 246, 247, 248, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274], "free": [0, 10, 22, 30, 31, 32, 37, 40, 41, 46, 50, 62, 77, 81, 83, 86, 90, 93, 94, 98, 101, 123, 132, 152, 170, 173, 179, 183, 184, 188, 189, 190, 192, 193, 197, 199, 205, 207, 209, 210, 213, 215, 216, 223, 235, 267], "whatev": [0, 10, 11, 18, 41, 50, 51, 209, 213, 214, 216, 236], "like": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 21, 22, 32, 33, 35, 41, 42, 49, 50, 51, 54, 55, 56, 58, 60, 70, 73, 77, 78, 80, 81, 83, 84, 85, 86, 90, 91, 92, 96, 100, 104, 110, 113, 115, 124, 127, 128, 130, 131, 145, 147, 157, 158, 161, 162, 163, 168, 172, 173, 176, 178, 180, 183, 184, 185, 187, 188, 189, 190, 192, 193, 195, 196, 197, 200, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 224, 226, 228, 229, 230, 231, 235, 236, 238, 239, 245, 246, 248, 250, 262, 263, 265, 266, 267, 268, 269, 273], "academ": [0, 31, 34, 191], "commerci": [0, 267], "creat": [0, 3, 4, 5, 6, 7, 9, 16, 17, 19, 26, 31, 32, 33, 39, 41, 42, 50, 51, 52, 54, 56, 57, 58, 60, 62, 63, 65, 66, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 96, 100, 105, 107, 108, 110, 113, 116, 117, 118, 120, 122, 124, 126, 127, 128, 130, 131, 140, 142, 144, 148, 151, 152, 153, 157, 158, 160, 161, 163, 166, 169, 172, 173, 175, 176, 180, 181, 183, 184, 186, 187, 188, 190, 192, 193, 194, 197, 204, 209, 213, 216, 217, 218, 222, 223, 228, 229, 230, 232, 233, 235, 236, 242, 246, 248, 263, 265, 268, 269, 272, 273, 274], "fork": [0, 5, 7, 10, 115], "deriv": [0, 6, 10, 12, 15, 18, 30, 31, 32, 34, 40, 41, 52, 56, 57, 58, 60, 67, 72, 73, 75, 77, 78, 80, 83, 86, 100, 104, 106, 107, 108, 112, 115, 117, 118, 120, 123, 125, 126, 127, 128, 152, 161, 165, 168, 169, 172, 173, 175, 176, 177, 178, 180, 183, 184, 185, 188, 190, 192, 193, 194, 197, 199, 207, 209, 213, 214, 215, 219, 220, 224, 230, 242, 244, 245, 264, 267, 274], "long": [0, 6, 7, 8, 32, 42, 49, 50, 51, 53, 63, 75, 77, 78, 80, 86, 90, 93, 94, 115, 177, 193, 194, 197, 206, 207, 215, 217, 229, 238, 244, 265, 268], "copi": [0, 1, 5, 10, 11, 16, 33, 42, 43, 50, 66, 86, 90, 91, 186, 188, 190, 192, 196, 197, 204, 215, 228, 235, 238, 272], "statement": [0, 6, 16, 17, 18, 22, 31, 32, 50, 58, 75, 80, 83, 113, 142, 197, 217, 226, 230, 235], "redistribut": [0, 193], "see": [0, 1, 3, 4, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 30, 31, 32, 36, 38, 41, 42, 43, 46, 49, 51, 52, 55, 56, 57, 58, 62, 66, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 86, 87, 90, 91, 92, 98, 104, 107, 108, 119, 121, 125, 127, 128, 132, 135, 138, 139, 148, 152, 153, 157, 158, 159, 160, 162, 163, 166, 168, 173, 177, 180, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 242, 243, 251, 262, 263, 265, 267, 268, 269, 271, 272, 273, 274], "file": [0, 1, 3, 4, 5, 6, 7, 11, 32, 86, 113, 130, 152, 197, 204, 207, 209, 226, 228, 229, 230, 236, 239], "That": [0, 4, 7, 11, 16, 17, 18, 50, 51, 56, 80, 86, 123, 160, 165, 171, 180, 181, 184, 185, 187, 188, 190, 192, 203, 204, 213, 215, 217, 229, 230, 236, 262, 265, 268, 273], "said": [0, 4, 24, 28, 32, 36, 90, 168, 178, 180, 181, 185, 213, 216, 217, 242, 248], "although": [0, 3, 4, 6, 7, 11, 13, 14, 16, 18, 42, 50, 51, 56, 62, 74, 75, 78, 80, 81, 83, 86, 90, 93, 104, 115, 130, 184, 187, 188, 190, 192, 193, 205, 206, 209, 210, 215, 229, 235, 236, 265, 268, 273], "requir": [0, 3, 6, 7, 8, 10, 11, 18, 22, 32, 41, 50, 51, 53, 54, 58, 60, 61, 63, 64, 67, 69, 80, 86, 89, 90, 91, 92, 93, 98, 104, 105, 108, 110, 112, 113, 115, 117, 128, 137, 160, 172, 173, 175, 183, 184, 187, 188, 190, 192, 194, 197, 200, 206, 207, 210, 213, 215, 216, 217, 221, 228, 229, 230, 231, 233, 235, 236, 244, 245, 246, 269, 271], "conveni": [0, 1, 10, 11, 23, 30, 32, 42, 50, 51, 55, 58, 77, 80, 92, 113, 130, 172, 175, 180, 181, 183, 184, 185, 186, 187, 188, 192, 195, 204, 205, 209, 215, 221, 222, 229, 231, 232, 236, 248, 263, 265], "pleas": [0, 4, 6, 7, 9, 10, 22, 28, 30, 50, 58, 62, 75, 90, 104, 108, 113, 123, 127, 128, 135, 136, 157, 172, 181, 182, 183, 184, 190, 191, 205, 209, 210, 215, 216, 236, 242, 246, 270, 274], "when": [0, 1, 3, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 41, 42, 43, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 74, 76, 77, 78, 80, 81, 82, 86, 90, 91, 92, 98, 100, 101, 104, 107, 113, 115, 121, 123, 125, 126, 127, 128, 131, 136, 137, 142, 147, 148, 152, 155, 157, 165, 166, 167, 172, 177, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 221, 222, 226, 228, 229, 230, 231, 233, 235, 236, 238, 239, 241, 245, 263, 265, 267, 268, 273, 274], "your": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 18, 20, 22, 26, 50, 51, 77, 78, 86, 91, 92, 100, 104, 125, 127, 181, 183, 197, 204, 209, 213, 216, 217, 235, 236, 263, 267, 269, 270, 272, 273], "work": [0, 1, 3, 4, 6, 10, 11, 13, 14, 16, 17, 18, 22, 25, 27, 30, 31, 32, 41, 42, 43, 50, 51, 54, 58, 75, 77, 79, 80, 81, 83, 86, 87, 90, 92, 104, 107, 113, 115, 124, 128, 130, 143, 147, 152, 156, 157, 158, 159, 162, 165, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 197, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 223, 228, 229, 230, 232, 235, 236, 237, 238, 245, 246, 259, 265, 266, 267, 268, 269, 272, 273], "also": [0, 1, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 39, 41, 42, 49, 51, 52, 54, 55, 56, 57, 58, 62, 66, 68, 70, 72, 73, 75, 77, 79, 80, 81, 84, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 100, 104, 105, 106, 107, 108, 112, 113, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 130, 131, 132, 136, 146, 147, 149, 153, 157, 162, 163, 166, 168, 172, 173, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 244, 245, 246, 247, 248, 250, 251, 262, 263, 265, 267, 268, 269, 272, 273, 274], "consid": [0, 4, 7, 10, 11, 13, 16, 17, 18, 28, 31, 32, 39, 42, 45, 49, 50, 51, 53, 54, 55, 56, 58, 60, 62, 66, 74, 75, 77, 78, 79, 80, 81, 83, 86, 90, 100, 104, 105, 110, 114, 125, 131, 153, 160, 163, 168, 174, 177, 178, 180, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 204, 209, 210, 213, 214, 215, 216, 217, 228, 230, 235, 244, 246, 248, 250, 251, 265, 269, 273], "contribut": [0, 3, 4, 5, 6, 7, 22, 66, 90, 108, 118, 121, 187, 189, 190, 192, 213, 251, 270], "all": [0, 1, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 21, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 75, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 105, 106, 107, 108, 110, 112, 113, 115, 116, 118, 123, 125, 127, 130, 131, 137, 142, 143, 147, 157, 159, 160, 161, 163, 165, 166, 167, 168, 170, 171, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 223, 224, 226, 228, 229, 230, 231, 233, 235, 236, 238, 242, 243, 245, 247, 248, 249, 250, 252, 262, 263, 265, 267, 268, 269, 272, 273, 274], "chang": [0, 1, 6, 7, 8, 10, 11, 16, 22, 31, 32, 33, 41, 42, 46, 49, 50, 51, 54, 56, 58, 64, 65, 75, 77, 80, 86, 90, 92, 93, 96, 100, 110, 113, 115, 120, 137, 148, 158, 168, 169, 172, 178, 180, 181, 182, 183, 184, 185, 186, 190, 193, 194, 197, 204, 205, 206, 207, 209, 213, 215, 216, 217, 218, 228, 235, 236, 246, 248, 262, 265, 268, 272], "back": [0, 18, 31, 32, 46, 49, 50, 51, 56, 58, 65, 66, 72, 74, 75, 77, 78, 81, 90, 91, 100, 157, 177, 180, 187, 189, 192, 193, 195, 197, 207, 213, 215, 218, 219], "we": [0, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 20, 25, 26, 27, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 63, 68, 73, 74, 75, 77, 78, 79, 80, 81, 86, 87, 89, 90, 100, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 135, 138, 146, 149, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 172, 173, 175, 176, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 221, 223, 228, 229, 230, 232, 233, 235, 236, 242, 245, 246, 247, 248, 250, 251, 262, 263, 265, 267, 268, 269, 272, 273, 274], "can": [0, 1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 130, 131, 135, 136, 137, 142, 144, 147, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 232, 233, 235, 236, 238, 244, 245, 246, 247, 248, 250, 251, 262, 263, 265, 267, 268, 269, 271, 272, 273, 274], "incorpor": [0, 3, 14, 185, 209], "benefit": [0, 3, 18, 32, 104, 127, 177], "end": [0, 3, 6, 10, 11, 14, 16, 17, 18, 20, 30, 31, 32, 40, 41, 46, 48, 49, 50, 51, 55, 56, 58, 60, 62, 66, 75, 78, 80, 81, 83, 86, 90, 92, 93, 94, 96, 112, 115, 117, 120, 125, 126, 127, 128, 168, 173, 177, 178, 181, 182, 186, 190, 197, 200, 203, 205, 206, 208, 210, 213, 214, 215, 216, 217, 218, 228, 230, 231, 233, 235, 238, 248, 263, 267, 269, 273], "develop": [0, 4, 6, 7, 8, 9, 14, 16, 18, 21, 22, 30, 33, 48, 92, 130, 167, 183, 184, 187, 190, 215, 216, 267, 270], "team": [0, 4], "member": [0, 6, 10, 16, 31, 39, 41, 51, 73, 96, 184, 205, 222], "list": [0, 3, 4, 6, 7, 12, 16, 22, 24, 27, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 78, 79, 80, 81, 83, 86, 89, 90, 91, 92, 93, 100, 105, 107, 108, 112, 115, 117, 120, 124, 125, 126, 130, 131, 136, 147, 149, 152, 153, 157, 158, 160, 161, 163, 165, 173, 176, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 262, 266, 267, 269, 272, 273, 274], "github": [0, 1, 3, 4, 5, 7, 10, 22, 30, 50, 66, 77, 86, 167, 205, 216, 269], "found": [0, 1, 3, 4, 6, 7, 16, 17, 30, 33, 41, 42, 44, 46, 48, 50, 51, 52, 60, 61, 66, 75, 77, 86, 90, 100, 106, 107, 108, 109, 127, 130, 167, 180, 184, 185, 186, 187, 192, 193, 194, 197, 199, 200, 203, 204, 207, 210, 213, 214, 215, 216, 217, 221, 235, 236, 238, 239, 272], "zotero": 0, "start": [1, 2, 3, 4, 5, 6, 7, 10, 11, 18, 21, 22, 31, 32, 34, 39, 40, 41, 42, 46, 49, 50, 51, 52, 58, 80, 81, 83, 86, 89, 90, 91, 93, 94, 96, 113, 115, 125, 126, 158, 159, 162, 166, 180, 181, 183, 187, 190, 192, 193, 197, 200, 203, 205, 206, 207, 210, 213, 215, 216, 217, 218, 221, 228, 229, 235, 237, 238, 247, 261, 262, 265, 267], "either": [1, 3, 6, 7, 10, 11, 16, 17, 18, 24, 28, 30, 31, 34, 42, 49, 50, 51, 54, 55, 56, 58, 65, 67, 73, 75, 77, 78, 80, 81, 86, 90, 100, 105, 108, 109, 112, 113, 126, 128, 130, 147, 153, 160, 163, 165, 177, 181, 183, 185, 186, 187, 188, 190, 192, 193, 197, 199, 204, 205, 206, 207, 210, 213, 214, 215, 216, 217, 218, 221, 222, 229, 235, 236, 242, 250, 265, 268, 269], "machin": [1, 3, 5, 6, 198, 209, 213, 262], "imag": [1, 3, 41, 119, 124, 130, 132, 136, 184, 188, 190, 197, 205, 216], "contain": [1, 3, 4, 6, 7, 10, 11, 17, 18, 23, 25, 26, 30, 31, 32, 33, 41, 42, 46, 48, 49, 52, 53, 54, 56, 58, 59, 61, 63, 64, 65, 66, 67, 76, 77, 79, 80, 81, 83, 86, 89, 90, 91, 92, 93, 95, 98, 99, 101, 105, 108, 109, 110, 112, 115, 117, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 150, 153, 155, 158, 160, 163, 172, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 197, 198, 199, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 217, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 244, 252, 253, 263, 265, 269, 273], "them": [1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 16, 17, 18, 23, 26, 28, 31, 32, 39, 41, 42, 49, 50, 51, 52, 54, 55, 58, 61, 66, 68, 70, 72, 73, 75, 79, 80, 83, 86, 89, 90, 91, 104, 108, 110, 113, 115, 117, 118, 123, 125, 127, 128, 130, 136, 140, 156, 157, 163, 165, 168, 171, 173, 178, 180, 181, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 215, 216, 218, 219, 228, 230, 232, 235, 244, 262, 263, 265, 267, 268, 273], "If": [1, 3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 39, 41, 42, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 78, 79, 80, 81, 83, 86, 87, 89, 90, 91, 92, 93, 98, 100, 101, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 125, 126, 127, 128, 130, 131, 136, 140, 144, 147, 153, 157, 158, 159, 160, 161, 163, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 244, 246, 248, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "instead": [1, 3, 4, 6, 7, 10, 11, 16, 17, 18, 23, 25, 27, 31, 32, 41, 43, 46, 50, 52, 53, 54, 55, 58, 77, 78, 80, 81, 83, 84, 86, 90, 98, 101, 103, 112, 113, 115, 117, 127, 130, 161, 165, 167, 173, 177, 178, 180, 181, 184, 187, 188, 190, 192, 193, 195, 197, 199, 207, 209, 213, 215, 216, 217, 221, 222, 223, 226, 231, 232, 233, 236, 240, 248, 251, 262, 263, 265, 267, 268, 269, 273, 274], "follow": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 22, 25, 27, 30, 31, 32, 33, 39, 40, 41, 42, 43, 46, 49, 50, 51, 54, 55, 56, 58, 62, 64, 66, 73, 74, 75, 77, 80, 81, 83, 86, 90, 91, 93, 94, 107, 108, 113, 115, 123, 124, 125, 126, 127, 128, 130, 132, 136, 155, 158, 160, 163, 166, 168, 173, 178, 180, 181, 182, 183, 184, 185, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 228, 231, 232, 235, 236, 239, 245, 246, 248, 262, 263, 265, 266, 268, 269, 273, 274], "os": [1, 228, 238, 239], "specif": [1, 5, 6, 7, 10, 16, 18, 19, 21, 41, 42, 50, 51, 52, 58, 62, 77, 79, 81, 86, 105, 107, 108, 112, 113, 123, 130, 132, 168, 181, 183, 184, 188, 190, 192, 193, 196, 197, 198, 203, 209, 210, 213, 214, 215, 217, 223, 228, 229, 230, 235, 254, 269, 273], "instruct": [1, 3, 5, 6, 7, 9, 10, 11, 14, 19, 21, 32, 197, 215, 229, 230], "below": [1, 3, 4, 6, 7, 10, 11, 16, 18, 22, 30, 31, 32, 40, 41, 42, 50, 51, 55, 57, 58, 59, 60, 66, 67, 73, 75, 77, 81, 86, 89, 90, 92, 93, 94, 100, 105, 108, 112, 113, 115, 117, 118, 119, 124, 125, 126, 127, 130, 157, 163, 168, 173, 181, 182, 183, 184, 186, 193, 197, 198, 200, 206, 209, 210, 213, 214, 216, 217, 228, 230, 235, 236, 238, 246, 248, 251, 252, 269, 273], "mai": [1, 3, 4, 5, 6, 10, 11, 13, 14, 16, 17, 18, 20, 22, 23, 28, 30, 31, 32, 33, 41, 42, 43, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 63, 65, 66, 67, 75, 77, 78, 80, 81, 82, 86, 87, 89, 90, 92, 106, 108, 109, 113, 117, 123, 127, 149, 158, 163, 164, 165, 170, 173, 176, 178, 180, 183, 184, 185, 186, 190, 192, 197, 198, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 248, 250, 262, 263, 265, 268, 269, 273, 274], "choos": [1, 6, 41, 46, 50, 52, 55, 86, 90, 94, 98, 117, 128, 163, 167, 173, 180, 181, 189, 193, 194, 197, 204, 206, 207, 213, 214, 217, 228, 233, 273], "cd": [1, 5, 6, 216, 235], "dockerfil": 1, "htmldoc": 1, "sympy_htmldoc": 1, "option": [1, 4, 5, 6, 7, 8, 11, 18, 25, 27, 30, 32, 41, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 63, 64, 66, 67, 69, 77, 78, 81, 83, 86, 87, 90, 91, 92, 93, 98, 100, 104, 105, 106, 107, 108, 109, 112, 130, 136, 147, 152, 153, 155, 158, 160, 165, 172, 173, 177, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 222, 223, 228, 229, 230, 233, 235, 236, 242, 266, 272, 273], "now": [1, 2, 3, 5, 7, 10, 11, 14, 16, 17, 18, 22, 31, 32, 42, 50, 51, 58, 61, 66, 67, 72, 74, 75, 79, 86, 90, 100, 105, 112, 113, 116, 118, 121, 123, 130, 131, 166, 168, 173, 177, 180, 181, 184, 185, 187, 190, 193, 194, 198, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 223, 228, 229, 236, 246, 247, 265, 267, 268, 273, 274], "skip": [1, 3, 4, 6, 11, 31, 34, 50, 81, 86, 90, 173, 192, 196, 197, 199, 213, 215, 226, 228, 263, 271, 272], "down": [1, 4, 6, 16, 83, 102, 115, 117, 180, 181, 183, 188, 199, 205, 207, 209, 213, 232, 269, 273], "section": [1, 4, 7, 8, 16, 18, 19, 24, 31, 33, 41, 42, 49, 50, 51, 53, 57, 58, 60, 66, 75, 80, 81, 86, 93, 94, 107, 113, 128, 166, 168, 172, 178, 181, 184, 187, 190, 192, 197, 200, 204, 207, 213, 223, 232, 233, 235, 245, 246, 247, 248, 252, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274], "For": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 16, 17, 18, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 62, 64, 65, 68, 71, 73, 74, 75, 76, 79, 80, 81, 86, 90, 91, 92, 93, 94, 100, 102, 106, 107, 108, 109, 113, 117, 123, 124, 125, 126, 127, 128, 130, 132, 146, 147, 152, 156, 158, 160, 161, 162, 163, 165, 168, 169, 173, 176, 177, 178, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 221, 222, 223, 224, 228, 229, 230, 232, 233, 235, 236, 239, 240, 242, 243, 246, 248, 250, 251, 262, 263, 265, 268, 269, 273, 274], "apt": [1, 5], "get": [1, 2, 4, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 22, 23, 26, 27, 30, 31, 32, 34, 39, 40, 42, 43, 45, 46, 49, 50, 51, 52, 54, 55, 56, 58, 63, 73, 75, 77, 79, 83, 86, 90, 92, 93, 98, 100, 103, 113, 116, 117, 125, 126, 127, 130, 135, 136, 143, 147, 152, 157, 158, 159, 160, 165, 168, 181, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 223, 224, 229, 235, 236, 237, 239, 242, 245, 262, 265, 267, 268, 269, 272, 273, 274], "python3": [1, 3, 32, 92, 197, 228], "sphinx": [1, 4, 7, 8, 56, 213, 228, 233], "texliv": [1, 3, 197], "recommend": [1, 5, 6, 10, 11, 12, 16, 18, 20, 21, 22, 31, 32, 50, 51, 54, 81, 104, 125, 130, 157, 173, 180, 185, 186, 187, 188, 194, 210, 213, 216, 222, 226, 233, 245, 246, 271, 274], "dvipng": 1, "librsvg2": 1, "bin": [1, 2, 3, 5, 6, 78, 197, 228, 235], "imagemagick": 1, "docbook2x": 1, "graphviz": [1, 7, 268, 272], "pip": [1, 3, 22, 92], "txt": [1, 197], "mpmath": [1, 3, 5, 18, 32, 55, 58, 86, 91, 130, 187, 188, 197, 205, 215, 231, 236], "error": [1, 3, 4, 6, 7, 10, 16, 17, 23, 30, 32, 39, 42, 49, 50, 51, 56, 57, 60, 65, 75, 77, 86, 89, 90, 92, 113, 181, 182, 185, 187, 188, 190, 194, 197, 199, 205, 213, 214, 215, 216, 217, 228, 229, 230, 233, 235, 238, 242, 253, 262], "packag": [1, 3, 20, 22, 78, 91, 92, 97, 123, 130, 177, 197, 228, 239, 247, 248, 267], "matplotlib": [1, 3, 6, 7, 10, 22, 73, 78, 98, 130, 143, 177, 183, 272], "mayb": [1, 17], "other": [1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 17, 19, 24, 28, 31, 32, 33, 41, 42, 43, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 75, 77, 80, 81, 83, 86, 90, 91, 92, 93, 94, 100, 104, 105, 107, 113, 114, 117, 118, 123, 124, 127, 128, 130, 132, 135, 136, 137, 147, 158, 160, 161, 162, 163, 166, 168, 169, 170, 172, 173, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 223, 224, 226, 229, 230, 231, 232, 235, 236, 242, 244, 245, 248, 250, 252, 262, 263, 265, 267, 268, 269, 273], "rpm": 1, "base": [1, 3, 4, 5, 6, 7, 9, 11, 16, 18, 22, 26, 27, 30, 32, 33, 39, 40, 41, 46, 47, 48, 50, 51, 53, 55, 56, 57, 58, 61, 63, 66, 73, 77, 78, 79, 80, 82, 83, 86, 90, 91, 97, 105, 107, 113, 115, 130, 131, 132, 141, 143, 147, 148, 152, 158, 159, 161, 163, 165, 168, 169, 171, 173, 175, 177, 178, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 201, 204, 205, 206, 207, 209, 210, 211, 213, 215, 217, 221, 222, 223, 228, 229, 230, 231, 232, 233, 235, 236, 237, 242, 244, 245, 248, 259, 268, 273], "distribut": [1, 3, 22, 41, 48, 50, 58, 66, 77, 93, 94, 162, 185, 188, 189, 193, 197, 223], "prerequisit": 1, "dnf": [1, 80], "scheme": [1, 4, 16, 42, 49, 54, 182, 183, 190, 193, 222], "medium": [1, 18, 132, 133, 136, 137, 147, 190, 258], "tool": [1, 7, 18, 41, 78, 85, 86, 91, 100, 130, 181, 184, 189, 190, 197, 208, 229, 235, 241, 249, 254, 256], "first": [1, 3, 5, 6, 7, 8, 11, 14, 16, 17, 18, 22, 31, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 63, 64, 66, 67, 74, 75, 77, 79, 80, 81, 86, 89, 90, 93, 94, 100, 101, 106, 107, 108, 112, 113, 115, 116, 117, 118, 123, 124, 127, 128, 131, 135, 136, 140, 144, 147, 152, 153, 156, 157, 158, 159, 160, 162, 163, 166, 168, 173, 176, 180, 181, 183, 184, 186, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 203, 204, 206, 207, 209, 210, 213, 214, 215, 216, 217, 221, 223, 226, 228, 229, 230, 231, 235, 236, 238, 246, 251, 262, 263, 265, 267, 268, 269, 271, 273, 274], "homebrew": 1, "brew": 1, "sh": 1, "Then": [1, 5, 14, 16, 41, 46, 49, 50, 75, 79, 86, 90, 106, 108, 110, 120, 122, 123, 128, 132, 160, 168, 180, 184, 185, 187, 190, 192, 194, 197, 204, 207, 209, 210, 213, 215, 236], "docbook": 1, "librsvg": 1, "conda": [1, 3, 5, 22, 92], "Or": [1, 7, 11, 17, 41, 50, 51, 52, 58, 75, 80, 90, 110, 184, 194, 196, 197, 209, 216, 217, 228, 236, 248, 268, 271], "forg": [1, 3, 92], "make": [1, 3, 4, 6, 7, 8, 10, 11, 14, 16, 17, 18, 23, 26, 27, 28, 30, 32, 33, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 58, 62, 66, 77, 78, 80, 86, 89, 90, 91, 92, 93, 94, 96, 108, 112, 113, 115, 116, 120, 121, 125, 127, 128, 130, 143, 160, 165, 177, 180, 183, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 205, 206, 207, 209, 213, 214, 215, 216, 221, 223, 226, 228, 229, 230, 231, 233, 235, 236, 245, 250, 251, 265, 266, 267, 268, 269, 273], "success": [1, 7, 31, 41, 50, 58, 75, 77, 90, 115, 173, 184, 190, 192, 205, 206, 213, 215, 216, 217, 235, 242, 243], "tricki": [1, 50, 75], "becaus": [1, 3, 4, 6, 7, 10, 11, 16, 17, 18, 22, 23, 28, 32, 42, 49, 50, 51, 56, 62, 66, 67, 75, 77, 80, 84, 86, 90, 92, 113, 117, 143, 151, 163, 165, 168, 180, 183, 184, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 204, 207, 209, 210, 213, 214, 215, 216, 226, 228, 229, 231, 235, 236, 238, 245, 263, 265, 267, 268, 269, 272, 273, 274], "some": [1, 3, 4, 6, 11, 14, 16, 17, 18, 22, 23, 28, 31, 32, 33, 38, 41, 42, 48, 49, 50, 51, 54, 55, 56, 58, 60, 61, 62, 66, 75, 77, 79, 80, 81, 83, 86, 90, 91, 92, 98, 101, 104, 105, 110, 112, 113, 114, 115, 116, 117, 118, 123, 125, 127, 128, 131, 143, 148, 152, 160, 163, 168, 169, 172, 174, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 223, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 246, 248, 252, 262, 263, 265, 267, 268, 269, 271, 272, 273], "avail": [1, 3, 5, 7, 10, 11, 16, 21, 22, 31, 32, 41, 42, 49, 50, 55, 58, 77, 86, 91, 92, 113, 127, 130, 187, 188, 190, 193, 197, 198, 203, 205, 207, 209, 210, 215, 216, 217, 218, 222, 223, 228, 235, 236, 241, 242, 259, 265, 272], "howev": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 25, 27, 32, 41, 42, 46, 49, 50, 51, 52, 55, 56, 58, 60, 75, 77, 80, 81, 86, 90, 91, 92, 93, 113, 127, 131, 163, 181, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 204, 205, 206, 207, 209, 213, 214, 215, 216, 228, 229, 236, 245, 246, 250, 262, 265, 267, 269, 273, 274], "subsystem": [1, 197], "linux": [1, 22], "possibl": [1, 6, 10, 16, 17, 18, 22, 30, 32, 33, 34, 39, 41, 42, 44, 45, 46, 48, 50, 51, 55, 56, 58, 60, 62, 64, 65, 67, 72, 74, 75, 77, 79, 80, 81, 83, 86, 90, 101, 102, 104, 115, 126, 128, 157, 159, 163, 165, 166, 167, 168, 176, 178, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 218, 223, 228, 230, 231, 232, 233, 235, 236, 245, 246, 248, 263, 264, 265, 268, 273], "workaround": [1, 236], "solut": [1, 10, 11, 14, 17, 18, 20, 32, 46, 50, 51, 56, 58, 60, 68, 72, 73, 74, 77, 86, 90, 97, 104, 108, 113, 117, 123, 127, 132, 168, 172, 184, 190, 191, 192, 193, 194, 195, 196, 205, 210, 211, 212, 213, 214, 215, 258, 274], "shell": [1, 11, 78, 130, 196], "after": [1, 4, 5, 6, 7, 10, 11, 22, 24, 26, 27, 31, 33, 38, 41, 42, 46, 48, 49, 50, 51, 52, 56, 65, 67, 72, 77, 81, 86, 90, 92, 93, 100, 124, 125, 127, 130, 132, 136, 148, 160, 168, 172, 178, 181, 186, 190, 192, 193, 194, 195, 197, 198, 203, 210, 213, 214, 215, 216, 218, 228, 231, 236, 238, 242, 244, 248, 262, 263, 265, 269, 273], "tutori": [1, 7, 11, 14, 15, 22, 66, 113, 130, 185, 196, 197, 211, 213, 236, 265, 268, 270, 271, 272, 273, 274], "com": [1, 3, 4, 5, 6, 7, 10, 18, 22, 24, 28, 30, 41, 43, 44, 50, 51, 53, 54, 55, 56, 58, 60, 66, 67, 75, 77, 81, 86, 90, 98, 182, 191, 200, 202, 205, 206, 209, 210, 213, 216, 217, 235, 238, 269], "microsoftdoc": 1, "wsl": 1, "blob": [1, 77], "win10": 1, "md": [1, 4, 7, 226, 233], "In": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 22, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42, 49, 50, 51, 52, 54, 55, 56, 58, 63, 65, 66, 67, 68, 75, 77, 78, 79, 80, 81, 83, 86, 87, 90, 92, 94, 96, 100, 104, 107, 108, 113, 116, 117, 118, 123, 124, 125, 126, 127, 128, 130, 131, 149, 151, 152, 153, 158, 162, 163, 166, 168, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 226, 228, 230, 232, 233, 235, 236, 239, 242, 245, 246, 248, 250, 262, 265, 266, 267, 268, 269, 272, 273, 274], "command": [1, 3, 5, 6, 11, 22, 32, 54, 78, 113, 125, 130, 177, 183, 197, 228, 229, 272], "prompt": [1, 6], "run": [1, 4, 6, 7, 8, 11, 14, 16, 18, 33, 41, 42, 44, 50, 51, 75, 86, 91, 92, 108, 115, 130, 163, 177, 183, 184, 197, 207, 209, 213, 214, 215, 225, 229, 231, 232, 235, 236, 260, 265, 272], "transfer": [1, 97, 98, 100, 132, 216], "termin": [1, 41, 50, 56, 78, 90, 177, 197, 204, 228, 272], "abov": [1, 3, 4, 6, 7, 10, 11, 14, 17, 18, 30, 31, 32, 33, 34, 40, 41, 42, 46, 49, 50, 54, 55, 58, 60, 63, 66, 67, 75, 77, 80, 81, 86, 90, 91, 92, 94, 100, 104, 108, 110, 112, 113, 115, 116, 117, 118, 123, 124, 126, 127, 128, 131, 158, 160, 163, 173, 178, 180, 181, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 204, 207, 209, 210, 213, 215, 216, 217, 221, 222, 229, 230, 236, 245, 246, 247, 248, 251, 265, 267, 268, 269, 273], "html": [1, 3, 4, 6, 7, 28, 32, 34, 42, 43, 44, 50, 51, 53, 55, 56, 58, 60, 66, 67, 77, 78, 86, 90, 98, 191, 197, 200, 202, 205, 206, 210, 213, 217, 229, 231, 233, 235, 236, 269], "note": [1, 3, 6, 7, 10, 11, 14, 16, 17, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 40, 41, 42, 43, 46, 48, 49, 51, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 75, 77, 78, 80, 81, 83, 86, 90, 92, 100, 101, 105, 106, 107, 108, 109, 112, 113, 115, 117, 120, 124, 128, 130, 136, 139, 147, 157, 158, 160, 162, 163, 164, 166, 172, 173, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 222, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 246, 248, 250, 259, 262, 263, 264, 266, 267, 268, 269, 273], "via": [1, 3, 14, 18, 22, 25, 26, 27, 41, 42, 50, 55, 58, 75, 77, 80, 86, 90, 91, 92, 93, 173, 182, 184, 188, 190, 192, 193, 196, 216, 226, 229, 230, 242, 250, 268], "want": [1, 3, 4, 5, 6, 10, 11, 13, 14, 16, 17, 18, 22, 28, 30, 32, 33, 34, 42, 50, 51, 57, 62, 64, 66, 69, 75, 77, 81, 83, 86, 87, 90, 91, 98, 100, 103, 109, 113, 130, 146, 156, 157, 160, 163, 166, 168, 175, 176, 180, 181, 183, 185, 186, 187, 190, 192, 193, 194, 196, 197, 198, 204, 205, 207, 209, 210, 213, 214, 215, 216, 217, 223, 226, 228, 230, 232, 235, 236, 246, 248, 251, 262, 263, 265, 267, 268, 269, 270, 272, 273], "directori": [1, 3, 6, 7, 22, 27, 32, 213, 228, 229, 238], "folder": 1, "prepend": [1, 31, 41, 86, 100, 170, 223], "mnt": 1, "path": [1, 5, 6, 10, 41, 66, 72, 100, 121, 178, 180, 206, 209, 213, 216, 228, 229, 232, 233, 235, 238, 239, 240, 248], "navig": 1, "method": [1, 3, 4, 6, 7, 11, 15, 16, 26, 27, 28, 30, 31, 32, 33, 34, 41, 42, 43, 49, 50, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 64, 66, 69, 72, 74, 75, 77, 79, 81, 82, 83, 86, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 104, 107, 112, 113, 116, 118, 119, 123, 124, 129, 130, 137, 140, 142, 144, 152, 153, 158, 160, 163, 165, 170, 171, 172, 173, 175, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 198, 199, 200, 202, 203, 204, 205, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 224, 228, 230, 232, 235, 236, 242, 245, 248, 251, 252, 262, 263, 264, 265, 268, 273], "better": [1, 3, 4, 6, 10, 11, 16, 17, 18, 31, 32, 42, 50, 54, 58, 77, 80, 100, 113, 143, 167, 171, 183, 186, 187, 188, 200, 204, 205, 206, 207, 213, 214, 215, 216, 217, 229, 235, 236, 267, 273], "compat": [1, 3, 4, 13, 32, 50, 58, 78, 81, 86, 91, 104, 165, 170, 177, 183, 186, 188, 192, 193, 197, 217, 220, 221, 224, 228, 230, 236], "than": [1, 3, 4, 6, 7, 10, 11, 14, 15, 16, 17, 18, 23, 28, 32, 33, 35, 41, 42, 43, 49, 50, 51, 54, 55, 56, 58, 59, 64, 65, 66, 68, 72, 75, 77, 79, 80, 81, 83, 86, 87, 89, 90, 91, 92, 98, 100, 104, 108, 112, 113, 117, 120, 137, 143, 157, 160, 161, 163, 172, 181, 182, 185, 186, 187, 188, 190, 193, 194, 195, 197, 200, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 224, 229, 230, 232, 235, 236, 238, 239, 262, 263, 265, 266, 267, 268, 269, 271, 273], "cygwin": 1, "msys2": 1, "more": [1, 3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 27, 28, 30, 31, 32, 33, 36, 40, 41, 42, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 72, 75, 77, 80, 81, 83, 84, 86, 87, 89, 90, 91, 92, 98, 100, 104, 108, 109, 113, 115, 117, 119, 121, 123, 125, 126, 127, 128, 130, 132, 135, 147, 151, 152, 157, 160, 161, 162, 163, 168, 172, 173, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 209, 210, 213, 214, 215, 216, 217, 228, 230, 231, 232, 235, 236, 238, 242, 245, 249, 262, 263, 265, 266, 268, 269, 271, 272, 273, 274], "virtual": [1, 4, 8, 22, 50, 66, 181, 266], "partial": [1, 30, 41, 48, 49, 50, 52, 54, 55, 56, 90, 92, 130, 157, 173, 176, 178, 188, 189, 191, 194, 197, 199, 206, 209, 211, 213, 214, 218, 224, 242, 248, 263, 273], "need": [1, 3, 4, 6, 7, 11, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 30, 31, 32, 35, 41, 42, 46, 48, 49, 50, 51, 52, 56, 58, 61, 65, 66, 73, 74, 75, 77, 78, 81, 86, 90, 91, 92, 94, 100, 104, 108, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 143, 147, 155, 161, 166, 167, 172, 173, 177, 180, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 235, 238, 242, 245, 247, 248, 251, 262, 263, 265, 268, 269, 271, 273], "environ": [1, 3, 8, 9, 10, 50, 78, 177, 197, 217, 228, 238, 265, 267, 272], "workflow": [1, 3, 5, 8, 9, 21, 130, 187, 230, 236, 270], "onli": [1, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 67, 68, 73, 75, 77, 78, 79, 80, 81, 86, 87, 90, 91, 92, 96, 98, 100, 106, 107, 113, 115, 116, 117, 119, 120, 122, 124, 125, 127, 128, 131, 136, 138, 157, 158, 162, 163, 165, 167, 168, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 242, 244, 246, 248, 250, 251, 262, 263, 265, 266, 268, 269, 273, 274], "viabl": [1, 51], "64": [1, 35, 41, 90, 129, 182, 196, 206, 215, 217, 228, 235, 238, 272], "bit": [1, 14, 18, 31, 32, 34, 50, 51, 53, 80, 81, 86, 90, 157, 168, 184, 193, 207, 210, 216, 228, 235, 245, 246, 272], "chocolatei": 1, "choco": 1, "rsvg": 1, "convert": [1, 3, 4, 10, 11, 16, 17, 18, 24, 28, 32, 34, 42, 46, 50, 51, 54, 55, 56, 64, 65, 67, 70, 71, 74, 78, 80, 81, 86, 89, 90, 92, 100, 157, 160, 166, 167, 168, 170, 176, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 205, 206, 207, 209, 210, 214, 216, 217, 218, 219, 222, 228, 229, 235, 236, 238, 240, 244, 264, 265, 268, 273], "chose": [1, 51], "rm": [1, 32], "absolut": [1, 10, 28, 29, 32, 49, 50, 56, 65, 75, 77, 81, 86, 102, 161, 188, 192, 193, 207, 209, 212, 217, 228, 250, 251, 252], "Be": [1, 4, 6, 18, 30, 50, 80, 86, 190, 213, 216, 224, 236], "sure": [1, 4, 6, 7, 18, 32, 41, 50, 62, 112, 113, 143, 168, 193, 194, 204, 213, 215, 216, 229, 235, 265, 268, 273], "substitut": [1, 10, 11, 14, 17, 32, 50, 51, 56, 58, 75, 77, 86, 91, 92, 100, 108, 109, 113, 115, 117, 127, 152, 161, 163, 166, 173, 175, 176, 194, 195, 198, 199, 204, 207, 209, 210, 213, 214, 215, 216, 236, 244, 264, 265], "actual": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 31, 32, 33, 39, 41, 48, 50, 51, 58, 62, 75, 77, 79, 83, 86, 90, 100, 104, 113, 115, 125, 126, 127, 177, 184, 187, 192, 197, 205, 207, 209, 210, 213, 216, 224, 228, 229, 232, 233, 235, 236, 267], "filesystem": 1, "from": [1, 3, 4, 5, 6, 7, 12, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 262, 263, 265, 267, 268, 269, 272, 273, 274], "ani": [1, 3, 4, 5, 6, 7, 10, 11, 13, 16, 17, 18, 22, 25, 27, 28, 29, 30, 31, 32, 33, 39, 40, 41, 42, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62, 65, 66, 67, 75, 77, 78, 80, 81, 84, 86, 87, 90, 92, 93, 94, 96, 100, 102, 105, 107, 108, 109, 110, 112, 113, 123, 126, 127, 128, 131, 132, 136, 149, 152, 157, 158, 161, 163, 165, 168, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 198, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 219, 222, 223, 228, 229, 231, 232, 233, 235, 236, 242, 245, 246, 247, 248, 250, 251, 262, 263, 265, 268, 269, 272, 273, 274], "makefil": 1, "subdirectori": 1, "ha": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 20, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 73, 75, 77, 79, 80, 81, 83, 86, 87, 89, 90, 91, 93, 94, 96, 100, 101, 105, 107, 108, 113, 115, 117, 123, 124, 128, 130, 136, 137, 147, 148, 157, 160, 165, 168, 172, 173, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 202, 204, 205, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 232, 233, 235, 238, 242, 243, 245, 246, 248, 250, 251, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "collect": [1, 3, 7, 15, 31, 32, 41, 50, 67, 77, 90, 93, 100, 112, 121, 130, 163, 170, 182, 188, 193, 206, 207, 213, 217, 228, 235, 253], "offici": [1, 11, 22, 50, 104, 130, 172, 181, 216, 236, 271], "which": [1, 2, 3, 4, 6, 7, 10, 11, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 86, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 118, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 136, 137, 149, 152, 158, 159, 160, 161, 163, 167, 168, 169, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 221, 223, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 243, 246, 250, 251, 253, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274], "gener": [1, 4, 8, 10, 11, 14, 16, 17, 18, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 64, 66, 68, 73, 75, 77, 78, 79, 80, 83, 86, 90, 91, 92, 100, 104, 105, 107, 108, 109, 112, 113, 115, 116, 117, 118, 120, 122, 123, 124, 126, 127, 128, 130, 131, 135, 146, 147, 148, 149, 152, 157, 158, 161, 162, 163, 168, 170, 172, 173, 174, 176, 177, 178, 180, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 203, 206, 207, 209, 210, 211, 213, 214, 215, 217, 222, 223, 229, 230, 232, 233, 234, 235, 236, 242, 245, 246, 248, 249, 250, 263, 265, 266, 267, 268, 269, 273, 274], "svg": [1, 78, 177], "store": [1, 5, 10, 11, 16, 31, 32, 40, 41, 50, 72, 74, 83, 86, 90, 92, 108, 110, 112, 113, 128, 157, 163, 176, 180, 181, 183, 184, 187, 192, 193, 194, 204, 207, 218, 221, 222, 230, 231, 232, 235, 246, 248, 268], "_build": [1, 6], "same": [1, 4, 6, 7, 10, 11, 14, 16, 17, 18, 24, 25, 26, 27, 28, 30, 31, 32, 39, 40, 41, 42, 46, 49, 50, 51, 52, 55, 57, 58, 60, 63, 64, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 83, 86, 90, 92, 93, 94, 100, 101, 104, 105, 111, 113, 117, 120, 121, 127, 128, 147, 149, 157, 160, 161, 163, 165, 166, 168, 170, 171, 172, 173, 175, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 222, 223, 224, 226, 228, 230, 231, 232, 233, 235, 236, 238, 242, 243, 245, 246, 250, 263, 265, 268, 269, 272, 273], "inform": [1, 3, 4, 6, 7, 11, 13, 16, 17, 21, 27, 28, 31, 32, 33, 36, 41, 42, 48, 50, 51, 55, 58, 62, 75, 77, 79, 83, 86, 91, 94, 105, 106, 108, 112, 113, 115, 123, 124, 125, 127, 128, 130, 131, 158, 163, 168, 172, 173, 177, 181, 183, 187, 192, 193, 197, 198, 204, 207, 209, 210, 211, 215, 216, 217, 221, 222, 223, 228, 229, 230, 231, 232, 242, 246, 248, 273], "onc": [1, 4, 11, 16, 17, 18, 32, 34, 41, 46, 50, 51, 55, 58, 66, 75, 77, 91, 94, 106, 107, 123, 127, 168, 173, 175, 181, 183, 185, 187, 193, 197, 198, 206, 207, 209, 213, 216, 223, 235, 245, 262, 263, 273, 274], "under": [1, 3, 4, 6, 11, 16, 17, 26, 27, 29, 30, 32, 33, 40, 41, 46, 48, 58, 68, 75, 77, 79, 86, 90, 92, 93, 94, 132, 158, 182, 184, 185, 192, 193, 197, 204, 205, 207, 210, 213, 215, 216, 217, 223, 226, 267, 273], "prefer": [1, 3, 6, 10, 16, 18, 32, 42, 49, 50, 58, 90, 92, 113, 163, 168, 183, 186, 188, 190, 192, 197, 205, 209, 213, 215, 222, 228, 230, 233, 236, 267, 269], "web": [1, 7, 51, 62, 130, 179, 191, 210], "browser": 1, "drop": [1, 56, 77, 91, 120, 188, 190], "menu": 1, "index": [1, 3, 10, 11, 18, 24, 32, 37, 39, 41, 42, 46, 49, 50, 51, 52, 56, 58, 61, 66, 75, 77, 80, 81, 83, 86, 89, 90, 100, 112, 113, 130, 131, 132, 134, 136, 137, 147, 156, 158, 160, 163, 168, 173, 183, 184, 188, 192, 193, 194, 197, 202, 203, 207, 215, 217, 218, 220, 221, 223, 224, 229], "given": [1, 3, 4, 7, 10, 11, 14, 16, 18, 24, 26, 27, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 77, 79, 80, 81, 83, 86, 89, 90, 92, 93, 96, 98, 101, 105, 106, 110, 112, 113, 117, 128, 136, 153, 158, 160, 168, 169, 171, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 222, 223, 226, 228, 230, 232, 235, 236, 238, 239, 240, 242, 244, 246, 248, 250, 262, 268, 271, 273, 274], "told": 1, "how": [1, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 31, 32, 41, 42, 49, 50, 57, 58, 62, 73, 76, 77, 80, 81, 83, 86, 90, 92, 104, 108, 113, 114, 120, 125, 126, 128, 130, 134, 135, 151, 155, 158, 159, 160, 165, 166, 173, 180, 183, 184, 187, 188, 190, 192, 196, 197, 200, 204, 205, 207, 209, 210, 211, 213, 214, 217, 223, 228, 229, 230, 231, 233, 235, 236, 246, 263, 265, 267, 268, 269, 270, 272, 273], "load": [1, 32, 50, 78, 93, 94, 96, 105, 107, 108, 112, 116, 118, 131, 143, 177], "ll": [1, 31, 48, 86, 117, 180, 181, 226], "manual": [1, 3, 4, 7, 10, 18, 32, 33, 41, 54, 60, 77, 78, 92, 100, 112, 113, 116, 127, 131, 183, 190, 197, 213, 215, 216, 231, 263, 273], "repeat": [1, 11, 41, 44, 49, 50, 56, 58, 77, 79, 81, 86, 90, 92, 147, 149, 163, 183, 184, 185, 190, 192, 193, 197, 203, 213, 217, 221, 222, 229, 231, 235, 273], "step": [1, 4, 5, 18, 19, 21, 30, 32, 41, 45, 46, 49, 50, 51, 58, 74, 75, 77, 86, 90, 91, 99, 108, 120, 123, 125, 130, 131, 165, 176, 181, 183, 187, 188, 190, 193, 197, 198, 199, 202, 205, 206, 207, 209, 210, 211, 213, 215, 217, 222, 229, 235, 236, 263], "reload": 1, "There": [1, 3, 4, 5, 6, 7, 10, 11, 13, 16, 17, 18, 32, 33, 41, 42, 43, 44, 47, 49, 50, 51, 54, 55, 58, 74, 75, 77, 78, 79, 80, 83, 86, 90, 93, 94, 96, 100, 104, 112, 123, 125, 127, 136, 153, 158, 172, 173, 177, 180, 181, 183, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 205, 206, 207, 209, 210, 213, 215, 216, 217, 222, 231, 232, 235, 236, 238, 246, 262, 263, 265, 267, 268, 272, 273], "altern": [1, 4, 6, 10, 11, 17, 18, 22, 32, 38, 41, 42, 49, 50, 54, 56, 57, 58, 81, 83, 87, 91, 113, 125, 127, 173, 180, 182, 183, 185, 186, 187, 192, 193, 197, 202, 204, 206, 215, 216, 218, 235, 265, 267, 269], "approach": [1, 14, 31, 49, 50, 77, 100, 117, 123, 187, 190, 191, 194, 205, 214, 215, 217, 229, 232, 235, 263, 269], "set": [1, 2, 3, 4, 6, 7, 11, 14, 15, 16, 17, 23, 26, 27, 30, 31, 32, 33, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 63, 65, 67, 68, 69, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 100, 104, 107, 108, 112, 113, 115, 116, 117, 122, 125, 126, 127, 130, 131, 147, 153, 158, 163, 165, 168, 170, 171, 172, 173, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 190, 192, 193, 196, 197, 198, 199, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 221, 222, 223, 226, 228, 229, 230, 231, 235, 236, 242, 244, 246, 252, 255, 262, 264, 273], "up": [1, 3, 4, 10, 14, 16, 17, 18, 22, 27, 30, 32, 41, 42, 44, 50, 51, 52, 54, 55, 56, 58, 59, 66, 67, 71, 75, 77, 78, 80, 81, 86, 90, 91, 93, 102, 104, 110, 112, 115, 116, 120, 122, 127, 128, 130, 131, 143, 158, 160, 176, 182, 183, 184, 187, 188, 192, 194, 197, 198, 199, 204, 206, 207, 209, 210, 213, 214, 215, 216, 229, 230, 231, 232, 233, 236, 264, 265, 268, 269, 271], "monitor": 1, "automat": [1, 3, 4, 6, 7, 10, 11, 16, 31, 32, 33, 42, 50, 52, 53, 54, 55, 56, 58, 63, 65, 69, 75, 78, 80, 90, 92, 93, 108, 113, 115, 121, 149, 151, 152, 161, 163, 176, 180, 183, 184, 187, 188, 189, 192, 193, 194, 197, 200, 203, 204, 206, 207, 209, 210, 213, 215, 216, 222, 223, 228, 229, 230, 233, 246, 251, 263, 265, 267, 268, 272, 273, 274], "detect": [1, 3, 23, 30, 83, 86, 90, 183, 187, 197, 213, 214, 216, 218, 235, 253, 272], "procedur": [1, 33, 35, 41, 47, 48, 49, 77, 86, 108, 128, 190, 192, 209, 210, 215, 216, 242, 269], "again": [1, 4, 11, 14, 17, 42, 50, 65, 90, 113, 115, 128, 158, 159, 173, 180, 184, 185, 192, 200, 207, 213, 226, 245, 265, 273], "whether": [1, 4, 10, 16, 17, 18, 30, 31, 32, 36, 41, 49, 50, 51, 57, 58, 62, 65, 77, 78, 80, 81, 86, 90, 104, 109, 112, 113, 151, 170, 175, 181, 183, 186, 187, 188, 192, 193, 197, 200, 204, 205, 209, 210, 213, 215, 216, 217, 218, 228, 230, 235, 236, 242, 244, 265, 269], "8000": [1, 93], "80": [1, 4, 6, 11, 18, 30, 41, 50, 53, 77, 86, 90, 93, 94, 98, 193, 196, 213, 217, 233, 235], "localhost": 1, "differ": [1, 4, 6, 7, 10, 11, 12, 13, 15, 17, 18, 19, 23, 31, 32, 33, 39, 40, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 58, 61, 63, 65, 66, 70, 72, 74, 75, 77, 78, 79, 80, 83, 86, 90, 91, 92, 93, 98, 104, 105, 110, 113, 115, 119, 123, 127, 128, 131, 135, 136, 148, 149, 157, 158, 161, 163, 165, 168, 172, 173, 174, 176, 177, 178, 181, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 226, 228, 229, 230, 231, 232, 233, 235, 236, 242, 244, 248, 249, 250, 253, 264, 265, 267, 268, 269, 272, 273], "port": [1, 92, 115, 135], "finish": [1, 32, 33, 157, 231, 270], "stop": [1, 4, 32, 33, 42, 50, 86, 90, 183, 203, 205, 213, 217], "ctrl": 1, "detach": 1, "mode": [1, 2, 50, 78, 92, 135, 158, 177, 193, 197, 228, 239, 259], "d": [1, 6, 7, 10, 11, 14, 18, 24, 31, 34, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 55, 58, 60, 64, 68, 73, 75, 77, 79, 80, 81, 82, 83, 86, 87, 89, 90, 92, 93, 96, 108, 130, 132, 135, 136, 142, 152, 160, 162, 163, 168, 172, 173, 175, 180, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 199, 203, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 221, 223, 235, 238, 242, 243, 244, 245, 246, 250, 258, 269, 274], "name": [1, 3, 4, 5, 6, 7, 10, 11, 16, 18, 23, 26, 27, 31, 32, 33, 37, 40, 43, 46, 49, 50, 51, 52, 56, 57, 58, 60, 63, 75, 77, 78, 79, 83, 86, 90, 92, 93, 96, 105, 107, 110, 112, 113, 115, 130, 134, 143, 158, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 183, 184, 185, 187, 188, 190, 192, 194, 197, 203, 207, 209, 210, 213, 214, 216, 217, 222, 223, 226, 228, 229, 230, 231, 236, 238, 239, 240, 242, 245, 248, 262, 265, 268, 269, 273], "livehtml": 1, "simpli": [1, 3, 4, 7, 16, 17, 28, 33, 49, 50, 52, 56, 60, 81, 83, 86, 90, 92, 93, 101, 105, 113, 115, 127, 153, 158, 168, 178, 181, 187, 194, 205, 206, 207, 213, 216, 233, 236, 248], "should": [1, 3, 5, 6, 7, 8, 10, 11, 13, 16, 17, 18, 23, 25, 27, 30, 31, 32, 33, 41, 42, 43, 44, 46, 49, 50, 51, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 86, 90, 92, 93, 98, 100, 104, 113, 115, 117, 125, 127, 128, 130, 131, 132, 143, 147, 151, 153, 155, 157, 158, 161, 163, 165, 166, 168, 169, 173, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 196, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 221, 222, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 245, 253, 262, 263, 265, 266, 269], "new": [1, 3, 4, 5, 7, 16, 18, 21, 26, 27, 31, 32, 33, 41, 42, 49, 50, 51, 52, 58, 63, 66, 75, 77, 78, 81, 86, 90, 93, 96, 100, 105, 113, 120, 122, 128, 129, 130, 132, 153, 159, 160, 163, 165, 168, 169, 171, 173, 176, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 197, 204, 207, 209, 210, 213, 215, 216, 217, 218, 228, 229, 233, 236, 242, 243, 245, 249, 261, 262, 265, 268, 269, 271], "tab": [1, 11, 46, 130], "show": [1, 3, 4, 6, 7, 11, 13, 14, 15, 16, 17, 18, 32, 42, 49, 50, 54, 56, 73, 75, 77, 86, 90, 93, 94, 98, 104, 113, 119, 124, 128, 130, 158, 162, 166, 168, 173, 180, 181, 183, 184, 187, 188, 190, 192, 193, 197, 198, 200, 204, 205, 206, 207, 209, 210, 213, 215, 217, 218, 226, 229, 230, 233, 235, 236, 265, 267, 269, 272], "necessari": [1, 3, 4, 6, 8, 10, 11, 16, 18, 21, 30, 31, 41, 42, 50, 60, 75, 77, 80, 86, 90, 108, 115, 123, 183, 185, 187, 192, 193, 200, 206, 209, 213, 214, 215, 216, 217, 218, 223, 228, 230, 235, 236, 242, 266, 271], "major": [1, 3, 4, 7, 10, 60, 104, 222, 267, 273], "contributor": [1, 3, 7, 10, 18], "action": [1, 3, 7, 41, 79, 155, 158, 168, 193, 209, 216], "pull": [1, 3, 4, 5, 6, 7, 9, 10, 18, 22, 32, 50, 55, 58, 162, 198, 209, 213, 216, 269, 273], "request": [1, 3, 4, 6, 7, 9, 10, 16, 22, 30, 50, 54, 66, 75, 90, 113, 163, 190, 193, 221, 229], "each": [1, 3, 4, 10, 11, 16, 18, 21, 27, 28, 30, 31, 32, 33, 34, 41, 42, 46, 50, 51, 52, 53, 54, 55, 56, 58, 60, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 83, 86, 90, 93, 98, 100, 106, 107, 108, 113, 115, 117, 120, 122, 124, 125, 128, 147, 160, 163, 172, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 195, 197, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 230, 232, 235, 236, 238, 242, 243, 244, 246, 248, 250, 263, 266, 268, 273, 274], "releas": [1, 7, 10, 50, 77, 81, 92, 127, 183, 222, 233, 236, 268], "includ": [1, 3, 4, 6, 7, 9, 10, 11, 16, 18, 22, 27, 28, 30, 31, 32, 42, 46, 49, 50, 51, 52, 54, 55, 56, 58, 62, 68, 75, 77, 80, 81, 83, 85, 86, 90, 91, 92, 102, 104, 112, 113, 115, 117, 118, 123, 125, 127, 130, 143, 147, 152, 157, 160, 161, 171, 178, 181, 185, 188, 189, 190, 192, 193, 196, 197, 198, 203, 204, 205, 207, 209, 212, 213, 214, 215, 217, 220, 223, 226, 228, 230, 231, 232, 233, 235, 242, 243, 245, 250, 252, 263, 267, 268, 269, 273, 274], "fail": [1, 3, 4, 6, 7, 10, 16, 17, 18, 32, 41, 42, 46, 49, 50, 54, 56, 74, 75, 77, 78, 86, 87, 90, 92, 115, 153, 158, 177, 183, 186, 187, 188, 190, 192, 193, 197, 204, 207, 213, 215, 217, 226, 228, 235, 236, 269], "99": [1, 32, 50, 51, 86, 90, 190, 191], "time": [1, 3, 4, 7, 10, 11, 14, 16, 17, 23, 27, 28, 32, 41, 42, 46, 50, 51, 55, 58, 73, 75, 80, 81, 86, 87, 89, 90, 91, 92, 97, 98, 100, 104, 108, 109, 112, 113, 115, 117, 120, 121, 123, 125, 126, 127, 128, 130, 131, 137, 147, 152, 160, 161, 165, 166, 168, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 190, 191, 192, 193, 194, 196, 197, 204, 205, 206, 207, 209, 213, 215, 217, 226, 228, 229, 234, 235, 236, 248, 250, 260, 263, 267, 268, 269], "due": [1, 6, 10, 14, 18, 30, 32, 40, 41, 50, 52, 67, 86, 90, 113, 115, 127, 136, 163, 178, 181, 187, 193, 197, 200, 210, 212, 214, 217, 233, 244, 250, 273], "bad": [1, 10, 49, 90, 165, 197], "math": [1, 3, 6, 18, 24, 28, 31, 33, 41, 50, 58, 60, 77, 86, 90, 91, 113, 123, 178, 183, 188, 191, 196, 197, 213, 214, 217, 229, 230, 236, 246, 247, 248, 249, 250, 254, 262, 263, 267], "format": [1, 4, 8, 10, 14, 31, 42, 51, 72, 73, 77, 80, 86, 89, 90, 93, 112, 131, 136, 147, 157, 183, 186, 187, 192, 193, 195, 197, 207, 213, 216, 228, 238, 242, 245, 266, 269, 272], "doubl": [1, 6, 7, 30, 32, 46, 50, 51, 57, 86, 92, 107, 122, 123, 180, 187, 197, 206, 207, 230, 273], "check": [1, 3, 4, 6, 7, 11, 13, 14, 16, 17, 18, 26, 27, 30, 31, 32, 36, 39, 41, 42, 43, 48, 49, 50, 51, 55, 58, 62, 73, 75, 79, 80, 81, 83, 86, 87, 90, 100, 105, 106, 113, 127, 130, 143, 151, 163, 165, 166, 171, 178, 179, 183, 184, 186, 187, 188, 190, 192, 193, 199, 205, 207, 209, 213, 214, 215, 216, 217, 221, 222, 226, 228, 230, 233, 235, 244, 248, 265, 273], "ad": [1, 6, 7, 10, 16, 24, 31, 32, 34, 40, 41, 50, 51, 61, 65, 72, 75, 79, 90, 92, 96, 104, 105, 113, 114, 130, 137, 165, 168, 174, 182, 183, 192, 194, 196, 197, 199, 207, 210, 213, 216, 217, 219, 222, 223, 228, 244, 265], "correctli": [1, 3, 4, 6, 7, 10, 17, 18, 30, 54, 75, 78, 86, 113, 115, 127, 197, 204, 210, 213], "backtick": [1, 6, 7], "code": [1, 6, 8, 9, 11, 14, 16, 17, 18, 22, 23, 33, 37, 41, 44, 45, 50, 51, 52, 54, 58, 62, 75, 77, 78, 86, 90, 91, 92, 105, 113, 115, 121, 123, 124, 128, 130, 131, 157, 163, 172, 177, 180, 182, 183, 184, 185, 187, 190, 196, 207, 209, 213, 215, 216, 217, 222, 225, 226, 228, 229, 230, 233, 234, 235, 236, 245, 260, 265, 267, 270, 272], "singl": [1, 4, 7, 10, 14, 16, 18, 23, 31, 32, 34, 41, 50, 51, 55, 56, 58, 63, 64, 66, 67, 68, 75, 77, 80, 81, 86, 89, 92, 100, 101, 106, 107, 117, 124, 143, 147, 149, 157, 160, 163, 170, 173, 176, 183, 184, 186, 187, 188, 190, 192, 193, 197, 198, 199, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 222, 228, 230, 232, 235, 236, 238, 263, 265, 268, 269, 274], "render": [1, 3, 6, 7, 32, 50, 78, 177, 183, 197, 272], "resourc": [1, 6, 7, 18, 86, 191, 213, 229, 239], "style": [1, 8, 31, 50, 78, 157, 177, 183, 197, 216, 272], "guid": [1, 3, 8, 9, 12, 18, 22, 31, 50, 57, 113, 127, 197, 223, 256, 258, 266, 270, 271], "tip": [1, 6, 19, 50, 127, 213, 214, 273], "few": [1, 3, 4, 10, 16, 28, 40, 42, 50, 51, 77, 78, 90, 91, 115, 123, 166, 172, 177, 180, 181, 184, 192, 197, 205, 206, 207, 213, 216, 217, 230, 235, 273], "extra": [1, 10, 32, 50, 51, 90, 91, 121, 168, 178, 189, 190, 197, 207, 213, 228, 229, 230, 248], "xelatex": 1, "latexmk": 1, "chrome": 1, "chromium": 1, "On": [1, 10, 16, 27, 43, 50, 52, 58, 77, 80, 90, 113, 168, 178, 187, 190, 191, 192, 193, 213, 215, 232, 236, 248, 250], "xetex": 1, "font": [1, 78, 177, 197], "lmodern": 1, "cask": 1, "tap": 1, "dejavu": 1, "strawberryperl": 1, "miktex": [1, 3], "dejavufont": 1, "appdata": 1, "microsoft": 1, "right": [1, 4, 6, 7, 10, 11, 14, 18, 20, 30, 32, 33, 41, 42, 46, 50, 51, 53, 55, 56, 58, 66, 67, 75, 77, 80, 81, 86, 89, 90, 92, 93, 94, 100, 108, 112, 113, 127, 128, 130, 131, 135, 142, 147, 149, 151, 152, 157, 160, 163, 173, 178, 181, 182, 183, 184, 186, 192, 194, 195, 197, 199, 200, 204, 205, 207, 213, 214, 216, 217, 228, 230, 232, 235, 248, 263, 267, 269, 273], "click": 1, "result": [1, 3, 6, 10, 11, 13, 14, 16, 17, 18, 24, 25, 26, 27, 28, 30, 31, 32, 40, 41, 42, 46, 49, 50, 51, 52, 54, 56, 58, 62, 67, 68, 72, 74, 75, 77, 79, 80, 81, 83, 86, 89, 90, 91, 92, 93, 100, 101, 104, 105, 106, 109, 113, 117, 123, 127, 130, 148, 155, 157, 158, 160, 162, 163, 165, 166, 168, 172, 173, 181, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 228, 229, 230, 232, 233, 235, 236, 238, 242, 244, 246, 265, 267, 268, 269, 273], "version": [1, 3, 4, 5, 6, 7, 11, 12, 16, 17, 18, 21, 22, 25, 31, 32, 41, 42, 48, 50, 51, 56, 58, 63, 77, 80, 81, 82, 84, 86, 88, 90, 103, 105, 113, 147, 161, 165, 173, 182, 183, 184, 187, 188, 190, 192, 193, 197, 200, 209, 215, 217, 227, 228, 230, 231, 232, 233, 235, 236, 240, 242, 247, 265, 268, 269], "where": [1, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 23, 24, 28, 30, 31, 32, 33, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 63, 65, 66, 67, 68, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 86, 90, 93, 97, 100, 104, 107, 108, 109, 110, 112, 113, 115, 126, 127, 128, 130, 131, 137, 147, 152, 158, 160, 162, 163, 164, 165, 166, 173, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 221, 223, 228, 229, 230, 231, 235, 236, 238, 242, 248, 250, 263, 265, 267, 269, 273, 274], "g": [1, 3, 4, 5, 7, 10, 11, 16, 17, 18, 30, 31, 32, 33, 35, 38, 40, 41, 42, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 66, 67, 68, 70, 73, 76, 77, 79, 80, 81, 86, 90, 92, 93, 100, 101, 105, 110, 112, 113, 115, 117, 118, 120, 121, 122, 127, 128, 130, 131, 143, 147, 152, 158, 160, 161, 163, 166, 168, 169, 173, 178, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 228, 229, 230, 231, 233, 235, 236, 237, 238, 250, 263, 268, 272, 273, 274], "1": [1, 3, 4, 7, 11, 12, 13, 14, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 142, 145, 146, 147, 148, 149, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 240, 242, 244, 245, 246, 248, 251, 258, 262, 263, 265, 267, 268, 269, 272, 273, 274], "dev": [1, 3, 4, 5, 233], "sympi": [2, 3, 4, 7, 8, 9, 12, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 251, 252, 254, 260, 261, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274], "sympy_debug": [2, 77, 238], "variabl": [2, 3, 6, 7, 10, 12, 14, 17, 18, 23, 24, 25, 27, 28, 30, 32, 33, 45, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 67, 69, 75, 77, 78, 80, 81, 86, 92, 93, 94, 98, 100, 112, 113, 120, 122, 130, 131, 137, 152, 157, 161, 163, 166, 172, 173, 175, 178, 185, 187, 188, 190, 192, 193, 194, 197, 198, 203, 204, 209, 210, 212, 213, 214, 215, 216, 224, 228, 230, 231, 232, 236, 242, 244, 245, 247, 248, 250, 259, 263, 265, 267, 269, 274], "instanc": [2, 4, 6, 7, 10, 13, 16, 17, 18, 25, 26, 27, 29, 31, 32, 41, 43, 45, 50, 52, 54, 55, 56, 58, 63, 66, 67, 68, 73, 74, 77, 78, 81, 83, 86, 90, 92, 93, 101, 105, 108, 112, 113, 131, 136, 143, 147, 153, 157, 158, 160, 162, 163, 173, 175, 177, 178, 183, 187, 188, 192, 193, 194, 195, 197, 205, 207, 209, 213, 215, 216, 217, 221, 222, 223, 228, 229, 230, 232, 235, 236, 242, 243, 244, 245, 246, 248, 250, 262, 263, 268, 273, 274], "unix": [2, 228, 229], "would": [2, 4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 20, 22, 31, 32, 33, 39, 41, 42, 49, 50, 51, 55, 62, 66, 75, 77, 81, 86, 90, 92, 93, 100, 101, 102, 104, 106, 113, 117, 127, 130, 158, 160, 163, 168, 172, 173, 178, 180, 183, 186, 187, 188, 190, 193, 194, 196, 197, 198, 200, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 221, 222, 228, 230, 232, 235, 236, 238, 239, 246, 247, 248, 250, 262, 263, 265, 267, 268, 269, 272, 273, 274], "do": [2, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 19, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 42, 46, 49, 50, 51, 52, 53, 56, 58, 60, 62, 65, 66, 69, 75, 77, 78, 80, 81, 83, 84, 86, 87, 90, 91, 97, 100, 104, 107, 108, 110, 112, 113, 114, 116, 117, 121, 124, 125, 130, 135, 138, 143, 147, 152, 155, 157, 159, 165, 167, 168, 171, 172, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 200, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 219, 222, 223, 226, 228, 229, 231, 233, 235, 236, 238, 244, 246, 247, 248, 250, 262, 263, 265, 266, 267, 268, 269, 271, 273], "true": [2, 3, 6, 10, 11, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 75, 77, 78, 80, 81, 82, 83, 86, 87, 90, 92, 93, 94, 98, 100, 101, 102, 103, 104, 106, 108, 109, 113, 115, 117, 130, 134, 135, 144, 147, 148, 155, 157, 158, 161, 162, 163, 166, 172, 173, 174, 175, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 228, 229, 230, 231, 233, 235, 236, 238, 242, 244, 245, 246, 247, 248, 251, 262, 263, 265, 267, 268, 269, 272, 273, 274], "isympi": [2, 3, 11, 78], "window": [2, 238, 259], "just": [2, 4, 6, 7, 10, 11, 16, 17, 18, 22, 28, 31, 32, 41, 48, 50, 51, 52, 73, 75, 77, 78, 79, 80, 86, 90, 91, 102, 104, 105, 110, 113, 117, 121, 127, 128, 130, 143, 148, 153, 163, 168, 172, 177, 178, 180, 184, 186, 187, 188, 190, 192, 196, 197, 204, 205, 206, 207, 209, 213, 216, 226, 228, 230, 231, 233, 247, 248, 250, 262, 263, 265, 266, 267, 268, 269, 273, 274], "limit": [2, 4, 10, 11, 19, 22, 28, 30, 32, 49, 50, 52, 54, 55, 56, 58, 59, 62, 70, 72, 77, 78, 80, 86, 90, 98, 123, 128, 152, 158, 161, 177, 183, 188, 190, 193, 194, 197, 200, 201, 203, 205, 209, 210, 212, 213, 214, 215, 217, 222, 229, 232, 235, 236, 238, 241, 242, 251, 264, 265, 267, 269], "function": [2, 3, 4, 7, 8, 13, 14, 16, 17, 19, 20, 21, 25, 26, 27, 29, 30, 31, 33, 41, 42, 45, 46, 48, 51, 52, 53, 54, 55, 59, 60, 61, 62, 67, 70, 71, 74, 76, 77, 78, 79, 81, 83, 85, 89, 91, 93, 95, 97, 98, 100, 101, 102, 106, 107, 110, 111, 112, 113, 116, 117, 118, 119, 123, 125, 126, 130, 135, 136, 137, 138, 142, 147, 148, 149, 152, 157, 158, 159, 160, 161, 162, 163, 166, 172, 173, 176, 177, 179, 181, 182, 184, 189, 190, 191, 192, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 215, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274], "nice": [2, 4, 6, 22, 50, 62, 86, 90, 113, 127, 130, 183, 197, 207, 238, 268], "print": [2, 4, 6, 7, 11, 14, 16, 17, 22, 25, 26, 27, 28, 30, 31, 33, 34, 39, 41, 42, 49, 50, 51, 54, 55, 56, 58, 77, 79, 80, 83, 86, 87, 90, 91, 92, 94, 100, 108, 113, 115, 123, 129, 135, 143, 156, 157, 161, 163, 173, 179, 181, 183, 186, 187, 188, 192, 193, 203, 204, 206, 207, 209, 213, 215, 222, 224, 228, 230, 235, 236, 238, 240, 242, 245, 252, 254, 260, 263, 264, 265, 266, 267, 268, 269, 273], "tree": [2, 10, 13, 41, 44, 50, 92, 106, 113, 155, 158, 173, 189, 193, 204, 206, 209, 216, 219, 221, 232, 235, 238, 254, 260, 264], "veri": [2, 3, 4, 6, 10, 11, 13, 16, 18, 32, 46, 50, 51, 54, 55, 60, 62, 68, 72, 75, 77, 80, 86, 90, 100, 104, 113, 117, 130, 135, 168, 180, 181, 184, 187, 190, 192, 193, 194, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 228, 229, 230, 236, 262, 265, 268, 273], "sever": [3, 4, 5, 6, 10, 13, 16, 18, 22, 32, 35, 41, 42, 49, 50, 54, 55, 57, 58, 62, 75, 77, 90, 106, 124, 168, 170, 183, 185, 187, 190, 192, 196, 197, 198, 204, 205, 213, 217, 228, 230, 240, 252, 265, 269, 272], "instal": [3, 5, 7, 11, 54, 91, 187, 188, 197, 229, 236, 260, 266, 272], "enabl": [3, 7, 18, 22, 50, 77, 78, 90, 94, 113, 115, 163, 173, 177, 197, 213, 217, 228, 233, 236, 269, 272, 273], "certain": [3, 7, 18, 22, 29, 31, 32, 41, 48, 50, 54, 58, 66, 75, 77, 90, 92, 127, 173, 174, 184, 187, 190, 192, 197, 198, 204, 207, 209, 210, 213, 216, 217, 219, 230, 231, 236, 242, 244, 250, 273], "most": [3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 22, 25, 26, 27, 30, 31, 32, 33, 41, 42, 49, 50, 51, 54, 60, 62, 77, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 100, 104, 108, 113, 121, 127, 128, 131, 165, 172, 176, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 204, 205, 207, 210, 213, 214, 215, 216, 217, 226, 229, 230, 231, 232, 233, 235, 236, 238, 244, 246, 262, 265, 267, 268, 269, 271, 272, 273], "mention": [3, 4, 6, 18, 41, 75, 77, 100, 115, 131, 132, 178, 207, 210, 213, 217, 245, 246, 247, 248, 269], "except": [3, 4, 6, 10, 11, 14, 16, 17, 18, 30, 32, 41, 42, 50, 51, 54, 56, 58, 75, 77, 85, 90, 107, 121, 169, 182, 184, 187, 188, 189, 192, 193, 194, 195, 197, 206, 209, 210, 213, 214, 216, 221, 226, 228, 230, 231, 234, 235, 236, 245, 248, 260, 262, 265, 268, 269], "unless": [3, 6, 16, 18, 25, 27, 30, 32, 41, 49, 50, 51, 55, 58, 65, 66, 75, 86, 89, 136, 180, 181, 185, 187, 192, 193, 197, 202, 205, 206, 213, 215, 228, 232, 235, 236, 238, 242, 250, 263, 269, 273], "thei": [3, 4, 6, 7, 10, 11, 16, 17, 18, 22, 28, 31, 32, 33, 38, 40, 41, 42, 48, 49, 50, 51, 52, 55, 56, 58, 60, 63, 64, 65, 66, 67, 72, 75, 77, 78, 80, 81, 83, 84, 86, 89, 90, 92, 104, 107, 108, 110, 112, 113, 115, 121, 123, 125, 126, 127, 130, 131, 137, 142, 147, 152, 155, 160, 165, 166, 168, 169, 173, 176, 177, 178, 181, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 197, 198, 203, 204, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 223, 226, 228, 230, 232, 235, 236, 238, 242, 248, 250, 263, 265, 266, 267, 268, 269, 273], "intend": [3, 4, 6, 10, 16, 50, 51, 61, 70, 75, 90, 92, 106, 158, 187, 188, 192, 195, 210, 213, 214, 226, 231, 262], "part": [3, 4, 6, 7, 10, 16, 17, 18, 24, 29, 41, 42, 49, 50, 51, 55, 56, 58, 66, 73, 75, 77, 80, 81, 83, 90, 100, 104, 105, 107, 108, 112, 113, 115, 121, 123, 124, 128, 130, 147, 159, 163, 172, 181, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 205, 207, 209, 210, 213, 215, 228, 230, 232, 235, 263, 268, 273], "those": [3, 6, 11, 16, 17, 23, 28, 31, 32, 33, 41, 42, 48, 49, 50, 51, 54, 63, 64, 75, 77, 80, 86, 89, 90, 104, 115, 121, 136, 160, 172, 175, 177, 180, 181, 183, 187, 188, 190, 192, 193, 195, 196, 197, 203, 205, 209, 213, 214, 215, 216, 217, 223, 226, 228, 232, 235, 242, 244, 265, 267, 273], "everi": [3, 4, 6, 16, 18, 21, 26, 27, 28, 31, 36, 38, 41, 42, 50, 51, 65, 79, 81, 86, 90, 100, 128, 178, 180, 181, 183, 184, 185, 187, 188, 190, 192, 197, 202, 205, 207, 209, 210, 213, 216, 217, 219, 245, 248, 250, 266, 268, 269, 273], "doe": [3, 6, 7, 8, 10, 13, 16, 17, 18, 21, 22, 23, 26, 27, 30, 31, 32, 33, 41, 42, 46, 48, 49, 50, 51, 52, 54, 56, 58, 60, 61, 63, 64, 66, 75, 77, 80, 81, 86, 89, 90, 92, 102, 104, 106, 113, 115, 120, 124, 143, 147, 153, 157, 159, 162, 172, 180, 181, 183, 185, 186, 187, 188, 190, 192, 193, 194, 197, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 222, 223, 226, 228, 230, 232, 235, 236, 238, 242, 243, 246, 262, 263, 265, 268, 269, 272, 273, 274], "themselv": [3, 7, 10, 18, 28, 31, 42, 46, 48, 50, 77, 90, 123, 124, 167, 187, 188, 192, 203, 217, 223, 232, 235, 238, 273], "incomplet": [3, 6, 7, 50, 55, 58, 185, 187, 193, 199, 215, 216], "main": [3, 5, 6, 7, 10, 11, 27, 28, 32, 50, 56, 75, 81, 86, 89, 113, 121, 161, 167, 177, 181, 183, 184, 188, 189, 197, 204, 213, 216, 222, 229, 273, 274], "webpag": [3, 7], "complet": [3, 4, 6, 11, 16, 19, 27, 32, 50, 51, 52, 54, 56, 57, 58, 66, 75, 77, 86, 90, 104, 108, 109, 117, 123, 130, 149, 152, 153, 181, 190, 193, 194, 198, 204, 209, 210, 213, 216, 217, 228, 230, 238, 267, 268, 273], "io": [3, 7, 78, 197, 236], "one": [3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 21, 23, 24, 27, 28, 30, 31, 32, 34, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 66, 67, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 85, 86, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 104, 105, 107, 108, 113, 114, 117, 127, 128, 130, 132, 135, 136, 137, 143, 148, 157, 161, 163, 165, 166, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 224, 228, 229, 230, 232, 235, 236, 238, 242, 246, 248, 250, 261, 262, 263, 265, 267, 268, 269, 271, 272, 273], "arbitrari": [3, 6, 10, 11, 16, 18, 30, 35, 42, 43, 49, 50, 51, 54, 55, 58, 61, 62, 64, 80, 81, 86, 94, 124, 128, 149, 152, 181, 183, 184, 187, 188, 190, 192, 194, 209, 213, 214, 215, 223, 233, 236, 242, 243, 262, 263, 268, 273, 274], "precis": [3, 4, 6, 11, 16, 17, 18, 32, 41, 50, 53, 54, 55, 58, 66, 77, 86, 90, 98, 128, 182, 184, 187, 188, 192, 193, 194, 197, 204, 209, 210, 215, 216, 229, 230, 238, 262, 273], "arithmet": [3, 32, 50, 51, 54, 81, 86, 90, 152, 159, 182, 183, 184, 186, 187, 188, 190, 191, 195, 198], "hood": 3, "whenev": [3, 4, 10, 11, 18, 48, 75, 77, 86, 170, 183, 184, 185, 199, 204, 207, 217, 263, 265, 268], "calcul": [3, 11, 14, 16, 24, 30, 33, 42, 48, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 67, 77, 81, 83, 86, 90, 93, 94, 102, 104, 105, 107, 108, 112, 115, 116, 117, 132, 135, 136, 139, 142, 158, 159, 160, 161, 163, 164, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 187, 188, 190, 192, 193, 194, 199, 204, 213, 217, 221, 229, 230, 236, 242, 244, 248, 249, 250, 269, 272], "float": [3, 16, 18, 32, 41, 56, 58, 65, 67, 77, 78, 81, 86, 90, 92, 98, 100, 130, 136, 177, 183, 187, 188, 197, 209, 215, 217, 228, 236, 238, 253, 262, 265], "point": [3, 4, 6, 7, 10, 11, 14, 16, 22, 24, 30, 32, 33, 41, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 72, 73, 74, 75, 77, 86, 90, 93, 94, 96, 98, 105, 107, 108, 109, 110, 112, 113, 115, 117, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 143, 165, 168, 174, 178, 179, 181, 183, 184, 187, 188, 190, 192, 193, 197, 199, 203, 204, 205, 213, 215, 216, 217, 229, 232, 235, 236, 238, 242, 244, 246, 247, 248, 249, 250, 251, 253, 262, 263, 265, 268], "valu": [3, 4, 6, 7, 10, 11, 14, 16, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 78, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 102, 105, 107, 108, 109, 110, 112, 113, 115, 127, 130, 132, 136, 139, 142, 147, 149, 152, 155, 157, 158, 159, 160, 163, 164, 166, 167, 168, 173, 174, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 228, 230, 231, 235, 236, 238, 244, 246, 248, 251, 263, 265, 268], "evalf": [3, 6, 11, 16, 32, 49, 54, 55, 56, 58, 69, 72, 73, 81, 86, 92, 113, 115, 130, 145, 188, 193, 204, 205, 209, 217, 229, 236, 253, 264], "cannot": [3, 4, 6, 7, 10, 11, 13, 17, 18, 22, 25, 26, 27, 28, 29, 30, 32, 42, 47, 49, 50, 52, 54, 55, 56, 60, 62, 63, 65, 67, 72, 77, 79, 82, 84, 86, 88, 90, 100, 158, 166, 168, 180, 181, 183, 188, 190, 192, 193, 194, 197, 204, 205, 209, 210, 212, 213, 215, 216, 217, 218, 226, 228, 229, 230, 235, 239, 242, 243, 267, 268, 269, 273, 274], "without": [3, 4, 6, 7, 10, 11, 16, 18, 22, 26, 28, 29, 32, 49, 50, 51, 52, 54, 58, 75, 77, 78, 81, 83, 86, 100, 101, 113, 119, 121, 126, 127, 163, 168, 172, 173, 174, 180, 183, 186, 187, 190, 193, 197, 199, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 219, 222, 223, 226, 228, 229, 230, 233, 235, 236, 238, 244, 247, 269, 273], "import": [3, 4, 8, 11, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 262, 263, 265, 267, 268, 269, 271, 272, 273, 274], "importerror": 3, "extern": [3, 22, 78, 92, 96, 98, 115, 123, 177, 187, 188, 198, 205, 209, 217, 228, 229], "doc": [3, 4, 6, 7, 8, 11, 21, 32, 41, 49, 50, 66, 78, 128, 165, 187, 189, 210, 213, 228, 229, 231, 233, 235, 242, 246], "latest": [3, 5, 22, 31, 231, 233, 236], "mean": [3, 4, 6, 7, 10, 11, 16, 17, 18, 28, 33, 42, 49, 50, 51, 52, 68, 75, 77, 78, 80, 81, 84, 86, 90, 104, 163, 165, 168, 173, 177, 180, 183, 184, 185, 187, 190, 192, 196, 197, 207, 209, 210, 213, 215, 216, 217, 218, 219, 221, 222, 228, 235, 246, 262, 263, 265, 267, 268, 269, 273, 274], "did": [3, 7, 17, 50, 77, 90, 104, 120, 168, 190, 194, 205, 215, 226, 236, 265, 267, 273], "explain": [3, 4, 6, 7, 16, 31, 46, 50, 58, 68, 73, 124, 184, 187, 190, 192, 194, 204], "ones": [3, 4, 10, 18, 22, 32, 41, 46, 50, 75, 77, 80, 81, 83, 86, 89, 90, 113, 136, 157, 163, 186, 190, 200, 210, 213, 218, 224, 230, 238, 242, 246, 269, 272], "typic": [3, 4, 10, 18, 46, 58, 75, 90, 100, 105, 110, 114, 172, 181, 183, 185, 190, 194, 207, 229, 230, 246], "directli": [3, 4, 6, 10, 11, 14, 16, 17, 18, 22, 26, 27, 30, 31, 32, 41, 49, 50, 52, 56, 61, 81, 83, 86, 90, 113, 149, 161, 166, 173, 176, 183, 184, 187, 188, 192, 193, 205, 206, 207, 209, 210, 213, 214, 216, 217, 228, 229, 230, 231, 232, 233, 263, 274], "git": [3, 8], "repositori": [3, 5, 7, 22], "vast": [3, 77, 189], "wrap": [3, 4, 6, 25, 26, 27, 28, 32, 39, 50, 56, 78, 91, 177, 181, 183, 186, 187, 190, 197, 200, 216, 222, 229, 233, 236, 238, 268], "addition": [3, 6, 10, 50, 125, 161, 181, 190, 197, 217, 226, 233, 245], "ci": [3, 7, 58, 75, 197, 272], "wish": [3, 6, 11, 18, 22, 32, 50, 51, 54, 75, 90, 158, 172, 181, 232, 236, 263, 267, 269, 274], "local": [3, 23, 25, 26, 27, 50, 52, 75, 92, 120, 122, 175, 184, 190, 215, 228], "improv": [3, 4, 10, 17, 18, 50, 75, 123, 183, 187, 190, 191, 193, 194, 196, 198, 213, 216, 222, 253, 263, 269], "perform": [3, 10, 11, 13, 14, 16, 18, 29, 31, 32, 33, 41, 42, 45, 49, 50, 51, 53, 54, 56, 63, 67, 74, 77, 84, 86, 90, 91, 106, 108, 115, 117, 123, 127, 128, 130, 147, 148, 157, 160, 163, 178, 181, 185, 186, 187, 190, 192, 193, 198, 199, 200, 204, 209, 210, 213, 215, 216, 217, 218, 229, 235, 242, 243, 245, 248, 253, 262, 263, 267, 268, 273], "gmpy2": [3, 187, 188], "wrapper": [3, 10, 18, 26, 28, 32, 42, 50, 58, 86, 127, 175, 177, 186, 187, 190, 197, 204, 213, 216, 217, 229, 233, 235], "gmp": 3, "multipl": [3, 4, 6, 10, 11, 16, 18, 26, 27, 28, 30, 31, 32, 33, 39, 41, 42, 46, 49, 50, 51, 55, 56, 58, 60, 65, 68, 70, 75, 77, 79, 80, 81, 83, 86, 87, 90, 92, 97, 100, 104, 115, 123, 130, 131, 147, 148, 149, 153, 160, 162, 165, 168, 169, 170, 173, 176, 180, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 197, 202, 203, 205, 206, 207, 209, 210, 213, 214, 216, 217, 218, 221, 223, 226, 230, 231, 232, 233, 235, 236, 238, 242, 246, 262, 263, 265, 266, 268, 269, 274], "larg": [3, 4, 6, 11, 16, 41, 42, 50, 51, 60, 75, 77, 89, 90, 104, 109, 127, 130, 143, 168, 172, 182, 187, 188, 190, 193, 196, 197, 198, 204, 207, 209, 217, 222, 229, 236, 238, 244, 262, 267, 273], "integ": [3, 6, 7, 10, 11, 16, 18, 20, 25, 26, 27, 30, 32, 33, 39, 41, 42, 43, 44, 46, 49, 51, 52, 53, 54, 55, 57, 58, 60, 63, 74, 75, 77, 78, 79, 80, 81, 83, 86, 87, 90, 92, 93, 100, 102, 152, 157, 159, 160, 161, 163, 165, 173, 175, 177, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 206, 207, 209, 210, 213, 215, 216, 217, 221, 222, 223, 229, 230, 232, 235, 238, 263, 265, 268, 272, 273], "faster": [3, 16, 32, 35, 50, 58, 81, 90, 91, 104, 106, 108, 109, 127, 186, 187, 188, 190, 192, 193, 194, 198, 200, 204, 209, 210, 213, 214, 216, 229, 232], "int": [3, 6, 7, 10, 11, 16, 17, 18, 24, 30, 32, 42, 50, 51, 52, 55, 56, 58, 59, 66, 75, 77, 78, 80, 81, 86, 87, 90, 92, 98, 100, 143, 147, 148, 157, 173, 175, 176, 177, 182, 183, 187, 188, 192, 193, 194, 197, 199, 200, 202, 213, 214, 217, 229, 233, 235, 238, 265, 267, 268, 272, 273], "core": [3, 4, 5, 6, 11, 13, 16, 17, 18, 28, 30, 32, 41, 51, 56, 57, 59, 67, 81, 85, 90, 92, 161, 162, 185, 187, 188, 189, 190, 192, 193, 194, 197, 204, 205, 209, 210, 213, 217, 227, 228, 229, 235, 236, 240, 252, 253, 265, 268], "oper": [3, 5, 6, 16, 17, 18, 24, 28, 32, 41, 42, 43, 49, 50, 51, 52, 53, 54, 56, 58, 60, 68, 70, 73, 75, 80, 81, 83, 85, 90, 92, 100, 101, 104, 108, 109, 117, 121, 127, 130, 135, 139, 140, 144, 146, 147, 148, 149, 154, 155, 158, 160, 161, 162, 163, 172, 173, 175, 179, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 200, 202, 205, 206, 208, 209, 213, 215, 216, 219, 220, 221, 222, 228, 229, 232, 235, 236, 242, 249, 252, 258, 264, 265, 266, 268, 273], "poli": [3, 11, 49, 50, 51, 55, 56, 58, 59, 66, 72, 77, 81, 83, 86, 90, 130, 184, 185, 189, 190, 192, 193, 194, 196, 199, 212, 213, 215, 216, 228], "refer": [3, 4, 5, 7, 11, 14, 17, 18, 19, 22, 26, 27, 28, 30, 32, 34, 36, 38, 39, 41, 42, 43, 44, 48, 51, 53, 55, 56, 58, 60, 65, 66, 67, 70, 72, 76, 78, 79, 80, 85, 87, 91, 93, 98, 100, 101, 103, 105, 107, 108, 110, 112, 113, 115, 123, 125, 128, 130, 131, 132, 133, 134, 136, 140, 142, 144, 145, 146, 149, 151, 152, 160, 161, 163, 167, 172, 173, 174, 175, 176, 178, 180, 187, 189, 194, 197, 199, 200, 202, 205, 208, 209, 211, 213, 214, 215, 217, 223, 232, 234, 235, 236, 238, 242, 245, 246, 250, 253, 256, 257, 258, 259, 260, 265, 269, 270, 273], "domain": [3, 6, 10, 14, 18, 30, 31, 50, 51, 53, 55, 56, 58, 69, 71, 72, 75, 77, 83, 86, 87, 90, 97, 100, 113, 130, 184, 186, 189, 190, 192, 194, 195, 211, 212, 213, 215, 217, 269, 274], "No": [3, 6, 7, 11, 31, 50, 58, 65, 80, 90, 101, 113, 158, 183, 193, 199, 200, 209, 210, 215, 216, 217, 222, 226, 232, 233, 235, 262, 274], "mani": [3, 4, 6, 11, 14, 16, 17, 18, 22, 30, 31, 32, 33, 38, 41, 46, 50, 51, 52, 54, 56, 58, 62, 75, 77, 80, 81, 86, 90, 91, 108, 109, 113, 115, 123, 126, 127, 130, 147, 163, 171, 181, 184, 186, 187, 188, 190, 192, 201, 204, 205, 207, 209, 210, 213, 214, 215, 216, 217, 221, 230, 235, 262, 263, 265, 266, 267, 268, 272, 273, 274], "algorithm": [3, 6, 11, 16, 30, 34, 35, 37, 40, 41, 42, 44, 46, 48, 49, 50, 51, 54, 55, 56, 62, 67, 75, 77, 80, 83, 86, 87, 90, 101, 127, 150, 168, 173, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 198, 201, 202, 205, 206, 208, 209, 210, 213, 215, 216, 217, 223, 232, 235, 254, 263, 268, 269, 273], "simplif": [3, 11, 16, 25, 27, 29, 30, 32, 50, 52, 55, 56, 75, 81, 86, 92, 106, 113, 127, 130, 147, 163, 173, 193, 198, 208, 213, 215, 216, 252, 253, 255, 262, 264, 266, 267], "factor": [3, 10, 11, 33, 41, 42, 49, 50, 51, 54, 55, 56, 58, 75, 77, 86, 90, 93, 100, 130, 132, 140, 144, 147, 159, 163, 168, 169, 170, 184, 187, 188, 189, 191, 192, 193, 200, 206, 207, 209, 210, 215, 217, 221, 232, 245, 248, 267, 269], "matric": [3, 6, 15, 16, 28, 32, 50, 51, 77, 87, 89, 100, 107, 108, 109, 113, 117, 127, 130, 132, 135, 136, 138, 146, 147, 157, 162, 173, 181, 182, 186, 192, 197, 198, 205, 207, 209, 210, 213, 215, 216, 218, 220, 230, 231, 258, 264, 266, 267], "thu": [3, 4, 10, 11, 14, 28, 35, 41, 42, 50, 51, 52, 56, 58, 73, 75, 77, 81, 84, 86, 89, 90, 101, 112, 117, 123, 127, 168, 173, 185, 190, 192, 194, 198, 204, 207, 209, 230, 235, 236, 246, 247, 265, 268, 273, 274], "speed": [3, 6, 27, 32, 41, 50, 51, 54, 81, 90, 91, 102, 107, 108, 109, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 130, 131, 134, 137, 172, 173, 176, 181, 182, 194, 197, 198, 204, 209, 213, 229, 232, 235, 268, 269], "non": [3, 4, 11, 16, 18, 23, 28, 30, 33, 40, 43, 49, 50, 51, 55, 56, 57, 58, 59, 60, 63, 64, 65, 77, 79, 80, 81, 82, 83, 86, 87, 89, 104, 108, 110, 115, 117, 121, 125, 126, 130, 147, 152, 162, 163, 165, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 200, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 223, 228, 230, 235, 238, 248, 268, 273, 274], "who": [3, 4, 6, 14, 18, 51, 52, 130, 181, 190, 197, 266], "abl": [3, 4, 6, 14, 16, 18, 31, 32, 41, 46, 50, 51, 52, 61, 69, 77, 83, 86, 90, 97, 113, 125, 127, 128, 130, 131, 184, 187, 194, 213, 216, 228, 245, 267, 272, 274], "experi": [3, 115, 216, 217], "design": [3, 4, 6, 10, 12, 13, 17, 18, 20, 21, 28, 33, 40, 50, 86, 89, 92, 130, 131, 187, 191, 197, 202, 207, 213, 216, 267, 268, 272], "interfac": [3, 7, 30, 50, 78, 107, 123, 132, 158, 177, 179, 181, 187, 190, 195, 216, 229, 230, 259], "ipython": [3, 6, 10, 11, 22, 78, 130, 177, 236, 240, 241, 271, 272], "jupyt": [3, 10, 18, 236, 240], "notebook": [3, 18, 22, 78, 177, 236, 271, 272], "init_sess": [3, 78, 272], "usual": [3, 10, 11, 14, 16, 31, 33, 41, 49, 50, 51, 68, 75, 77, 86, 123, 149, 161, 168, 178, 180, 181, 184, 185, 187, 188, 190, 196, 197, 198, 204, 207, 213, 216, 217, 218, 222, 223, 230, 232, 236, 242, 250, 262, 265, 268, 272, 273], "flag": [3, 4, 18, 30, 32, 41, 42, 46, 48, 50, 63, 65, 77, 80, 81, 82, 86, 90, 113, 147, 183, 188, 190, 193, 194, 197, 198, 199, 205, 209, 210, 213, 215, 216, 223, 228, 229, 235, 238, 262, 273], "auto_symbol": [3, 78, 92], "auto_int_to_integ": [3, 78], "qt": 3, "consol": [3, 4, 11, 50, 78, 177, 183, 272], "express": [3, 4, 6, 7, 12, 13, 16, 17, 18, 20, 25, 26, 27, 28, 29, 30, 42, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 63, 65, 66, 70, 73, 74, 75, 77, 78, 81, 84, 85, 86, 89, 90, 91, 93, 100, 101, 103, 104, 109, 110, 113, 117, 123, 125, 126, 127, 128, 130, 131, 138, 142, 146, 147, 151, 152, 155, 158, 160, 161, 162, 163, 165, 166, 168, 170, 172, 173, 176, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 197, 198, 200, 202, 203, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 236, 238, 242, 243, 245, 247, 248, 249, 250, 254, 255, 256, 260, 263, 264, 265, 266, 267, 269, 272, 273, 274], "mathjax": [3, 7, 78, 177, 272], "preview": [3, 31, 231, 260], "save": [3, 30, 50, 86, 90, 183, 196, 215, 232], "viewer": [3, 7, 31, 197, 231], "parser": [3, 83, 92, 123, 130, 228], "modul": [3, 4, 5, 6, 7, 10, 11, 13, 16, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 40, 42, 50, 51, 53, 55, 56, 58, 62, 66, 70, 73, 76, 77, 78, 80, 83, 84, 85, 86, 91, 92, 93, 95, 96, 98, 101, 104, 113, 114, 119, 123, 125, 126, 130, 132, 135, 137, 138, 150, 153, 166, 167, 168, 169, 178, 181, 183, 188, 189, 191, 194, 195, 197, 201, 204, 207, 211, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 244, 246, 248, 249, 250, 251, 252, 258, 260, 262, 265, 267, 273, 274], "parse_expr": [3, 10, 16, 92], "mathematca": 3, "parse_mathematica": [3, 10, 92], "maxima": [3, 92, 216], "parse_maxima": [3, 92], "antlr": [3, 92, 113], "runtim": [3, 32, 50, 109, 260], "autolev": [3, 115, 123], "call": [3, 4, 6, 7, 11, 13, 14, 16, 17, 18, 20, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 48, 50, 51, 53, 54, 55, 57, 58, 60, 65, 66, 68, 73, 75, 77, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 92, 93, 94, 100, 104, 113, 115, 117, 124, 127, 128, 153, 155, 158, 163, 168, 173, 178, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 219, 221, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 242, 244, 245, 248, 250, 263, 265, 267, 268, 269, 272, 273, 274], "antlr4": [3, 92], "awar": [3, 4, 6, 11, 17, 30, 50, 54, 80, 86, 207, 217, 236], "must": [3, 4, 5, 6, 10, 11, 16, 17, 24, 25, 26, 27, 32, 41, 42, 44, 46, 48, 49, 50, 51, 52, 55, 56, 58, 60, 63, 66, 69, 72, 73, 75, 77, 80, 81, 82, 83, 86, 89, 90, 93, 94, 96, 98, 100, 101, 108, 109, 113, 115, 123, 125, 126, 127, 128, 130, 143, 158, 160, 163, 172, 173, 181, 182, 183, 184, 185, 188, 190, 192, 193, 197, 198, 205, 206, 207, 209, 210, 213, 215, 216, 217, 221, 222, 228, 229, 230, 231, 232, 233, 235, 236, 239, 265, 267, 268, 272, 273], "match": [3, 4, 6, 10, 11, 16, 18, 41, 42, 49, 50, 63, 75, 77, 81, 86, 112, 139, 164, 172, 173, 186, 193, 209, 210, 213, 214, 217, 226, 228, 230, 235, 236, 247, 263], "wa": [3, 4, 10, 11, 16, 18, 39, 41, 42, 44, 50, 51, 52, 58, 63, 86, 90, 92, 104, 105, 113, 115, 117, 127, 128, 158, 168, 180, 181, 182, 184, 190, 192, 193, 194, 196, 197, 206, 207, 209, 213, 215, 217, 226, 228, 231, 233, 235, 236, 263, 265, 267, 268, 271], "compil": [3, 32, 78, 91, 104, 130, 177, 197, 209, 222, 228, 229, 230, 252, 267], "4": [3, 7, 11, 12, 14, 16, 17, 18, 20, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 100, 101, 102, 106, 113, 115, 116, 117, 118, 120, 121, 122, 123, 127, 128, 130, 131, 132, 135, 139, 142, 147, 157, 158, 160, 161, 162, 163, 164, 166, 172, 173, 174, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 222, 223, 228, 229, 232, 235, 236, 242, 244, 245, 246, 248, 250, 251, 262, 263, 265, 267, 268, 269, 273, 274], "clang": [3, 92], "bind": [3, 32, 197, 229], "parse_c": 3, "lfortran": [3, 92], "fortran": [3, 14, 18, 30, 91, 92, 104, 130, 182, 230, 254, 260, 272], "satisfi": [3, 7, 10, 16, 27, 28, 30, 33, 38, 41, 46, 50, 51, 55, 58, 60, 73, 75, 79, 80, 86, 90, 109, 127, 147, 152, 184, 185, 190, 192, 193, 197, 203, 204, 205, 210, 213, 214, 215, 216, 217, 223, 268, 273], "implement": [3, 6, 7, 10, 12, 13, 17, 18, 19, 21, 24, 25, 26, 27, 30, 31, 32, 33, 35, 40, 41, 42, 47, 50, 51, 53, 55, 56, 58, 61, 63, 70, 71, 73, 74, 76, 77, 80, 81, 82, 86, 90, 91, 92, 104, 113, 123, 132, 134, 135, 138, 147, 148, 156, 157, 159, 167, 172, 174, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 201, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 221, 222, 232, 234, 235, 236, 239, 249, 252, 260, 263, 267, 273], "dpll": 3, "But": [3, 4, 7, 10, 11, 18, 49, 50, 58, 64, 74, 81, 86, 90, 151, 152, 163, 168, 173, 184, 185, 190, 194, 204, 206, 207, 209, 210, 213, 215, 216, 222, 232, 235, 236, 244, 263, 265, 267, 268, 273], "sat": [3, 26], "solver": [3, 6, 26, 58, 86, 90, 112, 123, 130, 131, 186, 189, 209, 210, 214, 228, 252, 253, 264, 266], "ask": [3, 6, 11, 13, 16, 17, 26, 27, 28, 29, 50, 62, 75, 113, 168, 184, 203, 209, 216, 235, 265], "pycosat": 3, "forc": [3, 11, 14, 17, 18, 50, 54, 56, 60, 66, 75, 77, 80, 93, 94, 96, 105, 107, 108, 112, 115, 117, 118, 119, 120, 123, 125, 126, 127, 130, 151, 152, 166, 178, 181, 183, 185, 187, 206, 209, 210, 215, 228, 248, 250, 272, 273], "pysat": 3, "minisat": 3, "minisat22": 3, "heavi": [3, 217, 268], "primarili": [3, 16, 32, 50, 90, 93, 162, 193, 195, 229, 232, 238, 245], "support": [3, 4, 5, 6, 7, 10, 11, 18, 22, 24, 25, 26, 27, 30, 31, 32, 42, 50, 54, 57, 58, 60, 74, 77, 83, 86, 90, 91, 92, 93, 94, 96, 97, 100, 104, 113, 130, 158, 173, 180, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 202, 203, 204, 205, 209, 213, 214, 215, 216, 217, 218, 222, 226, 228, 229, 230, 236, 246, 248, 263, 265, 268, 272], "give": [3, 4, 6, 11, 16, 17, 18, 25, 27, 32, 33, 39, 41, 42, 43, 44, 49, 50, 51, 52, 55, 56, 58, 60, 62, 63, 65, 66, 74, 75, 77, 78, 80, 83, 86, 89, 90, 91, 93, 100, 113, 130, 142, 157, 158, 160, 161, 165, 166, 168, 169, 171, 173, 176, 178, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 197, 198, 199, 200, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 228, 229, 230, 235, 245, 250, 265, 266, 268, 273, 274], "rudimentari": [3, 18, 190], "text": [3, 4, 6, 7, 18, 22, 32, 41, 51, 55, 56, 58, 68, 75, 78, 81, 86, 90, 128, 168, 177, 183, 184, 197, 204, 210, 213, 216, 217, 228], "pyglet": [3, 197, 259], "pygletplot": [3, 183], "2d": [3, 10, 63, 64, 66, 76, 93, 94, 96, 141, 173, 183, 197, 210, 222, 267], "3d": [3, 10, 24, 34, 63, 64, 93, 141, 164, 178, 183, 245, 247, 248, 249, 250], "evalu": [3, 6, 14, 16, 17, 19, 20, 25, 26, 27, 30, 32, 50, 52, 55, 56, 58, 61, 65, 66, 70, 75, 77, 80, 83, 86, 90, 91, 92, 100, 104, 106, 113, 123, 127, 128, 138, 140, 142, 144, 149, 152, 160, 163, 182, 183, 187, 188, 190, 191, 193, 197, 198, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 219, 229, 230, 231, 236, 248, 253, 262, 263, 264, 265, 267, 269], "numer": [3, 6, 10, 11, 14, 16, 20, 28, 30, 32, 49, 50, 55, 58, 62, 66, 70, 73, 86, 90, 92, 96, 97, 98, 100, 107, 108, 109, 113, 115, 123, 127, 131, 135, 142, 145, 160, 167, 172, 181, 183, 187, 188, 190, 191, 192, 193, 196, 197, 206, 207, 209, 213, 215, 216, 222, 228, 229, 235, 236, 253, 262, 265, 269, 273], "variou": [3, 6, 7, 14, 18, 30, 32, 34, 41, 49, 50, 55, 70, 75, 77, 80, 110, 142, 146, 147, 158, 160, 172, 184, 185, 188, 189, 190, 192, 198, 204, 207, 210, 213, 214, 216, 230, 273], "primari": [3, 4, 6, 7, 16, 18, 50, 62, 80, 181, 184, 230, 236], "vehicl": 3, "between": [3, 4, 13, 17, 18, 31, 32, 40, 41, 42, 44, 48, 50, 52, 55, 58, 60, 62, 63, 64, 65, 66, 67, 77, 79, 80, 83, 84, 86, 90, 91, 92, 96, 97, 98, 100, 107, 110, 112, 113, 116, 120, 122, 124, 127, 128, 130, 131, 132, 135, 136, 142, 149, 151, 152, 153, 157, 160, 161, 162, 163, 166, 167, 168, 173, 174, 175, 176, 178, 180, 181, 183, 184, 186, 189, 190, 192, 197, 199, 209, 213, 214, 215, 216, 217, 218, 231, 236, 242, 244, 245, 248, 250, 265], "standard": [3, 7, 10, 11, 16, 18, 32, 50, 54, 56, 58, 73, 75, 77, 78, 79, 80, 84, 86, 90, 91, 92, 103, 140, 144, 173, 178, 184, 187, 188, 190, 197, 200, 205, 209, 210, 213, 216, 217, 230, 236, 239, 245, 250, 262, 265, 273], "wai": [3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 23, 31, 33, 34, 39, 41, 42, 43, 46, 50, 52, 55, 58, 66, 70, 74, 75, 77, 79, 83, 86, 89, 90, 92, 93, 96, 104, 108, 110, 112, 113, 117, 119, 120, 123, 127, 143, 157, 160, 161, 166, 168, 171, 172, 173, 175, 176, 178, 180, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 204, 207, 209, 210, 213, 214, 216, 218, 219, 222, 223, 226, 230, 232, 235, 236, 239, 242, 245, 246, 247, 248, 250, 262, 263, 265, 266, 267, 268, 273, 274], "principl": [3, 51, 81, 90, 134, 184, 185, 190, 206, 215], "pass": [3, 4, 5, 6, 11, 13, 16, 17, 18, 23, 24, 27, 30, 31, 32, 41, 42, 50, 51, 52, 54, 56, 57, 58, 60, 63, 64, 66, 77, 78, 80, 81, 83, 86, 87, 90, 92, 93, 98, 100, 105, 112, 113, 117, 130, 131, 135, 152, 153, 157, 158, 160, 161, 173, 177, 183, 184, 186, 187, 188, 190, 192, 193, 195, 197, 198, 204, 205, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 233, 235, 236, 238, 241, 242, 262, 263, 268, 272, 273, 274], "appropri": [3, 6, 7, 11, 14, 41, 50, 56, 65, 86, 104, 115, 152, 153, 163, 173, 180, 186, 187, 193, 194, 197, 203, 204, 209, 210, 215, 217, 222, 230, 246, 272], "namespac": [3, 6, 10, 23, 32, 33, 50, 188, 210, 213, 214, 228, 230, 231, 236], "dictionari": [3, 10, 31, 32, 39, 41, 42, 48, 50, 55, 64, 66, 79, 81, 86, 89, 90, 92, 93, 106, 108, 109, 112, 113, 115, 117, 120, 125, 127, 153, 163, 173, 181, 183, 185, 188, 190, 192, 193, 195, 197, 204, 209, 210, 213, 214, 215, 216, 217, 221, 223, 228, 232, 235, 236, 242, 262, 269], "third": [3, 4, 32, 41, 42, 50, 58, 60, 64, 100, 160, 166, 180, 185, 193, 207, 213, 216, 217, 233, 235, 249, 263, 268], "argument": [3, 4, 5, 6, 13, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 66, 67, 75, 77, 78, 80, 81, 83, 86, 89, 90, 92, 93, 98, 100, 108, 112, 113, 125, 126, 130, 137, 140, 144, 146, 149, 152, 157, 158, 160, 161, 162, 163, 171, 177, 178, 182, 183, 184, 185, 187, 188, 190, 192, 193, 196, 197, 198, 199, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 221, 222, 228, 229, 230, 231, 232, 233, 235, 236, 238, 245, 246, 248, 262, 263, 268, 269, 273], "default": [3, 4, 6, 7, 11, 16, 18, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 40, 41, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 72, 77, 78, 80, 81, 83, 86, 87, 90, 91, 92, 93, 94, 98, 100, 102, 104, 105, 106, 107, 108, 109, 113, 127, 136, 153, 155, 158, 160, 161, 163, 169, 172, 173, 175, 176, 177, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 222, 223, 228, 229, 230, 232, 233, 235, 236, 238, 242, 262, 263, 267, 269, 272, 273], "translat": [3, 10, 32, 41, 50, 59, 61, 65, 67, 91, 92, 100, 103, 107, 108, 120, 122, 128, 180, 183, 197, 213, 215, 229, 230, 236, 238, 246], "numpi": [3, 6, 10, 18, 22, 32, 50, 73, 78, 85, 91, 98, 113, 130, 147, 157, 186, 197, 217, 222, 229, 230, 236, 262, 265], "By": [3, 11, 16, 18, 25, 27, 32, 40, 49, 50, 52, 54, 55, 58, 64, 65, 69, 73, 75, 80, 81, 86, 89, 90, 91, 92, 93, 94, 98, 105, 158, 163, 183, 185, 187, 188, 190, 192, 193, 194, 196, 197, 199, 204, 206, 209, 210, 213, 215, 216, 217, 221, 223, 224, 228, 231, 235, 236, 248, 262, 267, 268, 273], "produc": [3, 6, 7, 17, 18, 31, 41, 50, 51, 63, 77, 80, 86, 173, 187, 192, 193, 197, 204, 213, 214, 215, 217, 226, 228, 232, 233, 235, 272], "behavior": [3, 4, 10, 11, 18, 41, 50, 58, 77, 92, 103, 104, 123, 127, 158, 184, 185, 192, 193, 197, 198, 202, 204, 206, 209, 226, 229, 231, 235, 236, 265], "backward": [3, 8, 14, 30, 50, 81, 86, 197, 235, 273], "scipi": [3, 32, 50, 58, 104, 130, 157, 197, 217, 229, 236, 262, 271], "special": [3, 6, 12, 16, 18, 23, 24, 42, 50, 51, 53, 54, 55, 57, 65, 68, 75, 77, 81, 86, 130, 147, 152, 178, 184, 187, 189, 190, 191, 192, 197, 206, 207, 209, 213, 214, 215, 217, 228, 229, 230, 233, 235, 236, 245, 248, 250, 254, 255, 263, 264, 268], "cupi": [3, 91], "cuda": [3, 91], "gpu": [3, 91, 130], "jax": [3, 91, 236], "xla": [3, 91], "program": [3, 7, 11, 16, 32, 34, 42, 130, 168, 182, 230, 232, 265, 267, 271, 273], "tpu": [3, 91], "tensorflow": [3, 236], "learn": [3, 5, 7, 20, 86, 128, 181, 206, 216, 262, 265, 266, 267, 271], "numexpr": [3, 236], "fast": [3, 16, 32, 50, 77, 85, 86, 90, 135, 188, 189, 190, 191, 192, 193, 194, 200, 204, 213, 215, 232, 235, 236], "alreadi": [3, 4, 10, 11, 16, 18, 22, 41, 42, 50, 51, 59, 60, 63, 64, 66, 75, 77, 81, 87, 90, 96, 101, 105, 113, 127, 132, 158, 160, 163, 178, 180, 181, 183, 186, 187, 190, 192, 196, 200, 206, 207, 209, 213, 216, 217, 223, 246, 248, 263, 265, 266, 267, 271, 272, 273, 274], "number": [3, 4, 5, 6, 7, 10, 13, 16, 18, 24, 26, 27, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 55, 56, 58, 60, 63, 64, 65, 66, 67, 69, 76, 77, 78, 79, 80, 81, 83, 86, 87, 89, 90, 91, 92, 94, 98, 100, 101, 102, 104, 108, 109, 112, 113, 117, 127, 128, 130, 136, 139, 142, 143, 146, 147, 148, 149, 151, 152, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 193, 194, 197, 199, 203, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 222, 223, 228, 230, 232, 235, 238, 242, 244, 245, 247, 248, 250, 253, 262, 263, 265, 267, 268, 269, 273], "languag": [3, 7, 11, 14, 18, 32, 56, 86, 92, 104, 113, 130, 197, 202, 217, 229, 230, 265, 267, 269, 271, 273], "valid": [3, 6, 7, 10, 16, 17, 18, 25, 27, 29, 30, 31, 32, 43, 49, 50, 55, 56, 66, 76, 86, 90, 106, 107, 108, 113, 115, 128, 132, 136, 155, 160, 170, 173, 177, 181, 187, 190, 193, 196, 197, 205, 209, 210, 213, 215, 216, 217, 236, 269, 273], "rather": [3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 23, 28, 32, 33, 41, 42, 43, 50, 54, 61, 66, 68, 75, 80, 81, 83, 86, 90, 92, 112, 120, 130, 143, 157, 161, 163, 172, 180, 184, 187, 190, 193, 195, 200, 207, 210, 212, 213, 216, 217, 232, 235, 236, 239, 250, 265, 267, 268], "string": [3, 4, 6, 7, 11, 18, 19, 25, 31, 32, 34, 39, 50, 51, 52, 53, 54, 57, 63, 73, 78, 79, 80, 83, 86, 90, 92, 93, 96, 98, 104, 105, 107, 110, 134, 143, 147, 157, 161, 165, 171, 172, 173, 176, 177, 178, 183, 186, 188, 192, 197, 198, 204, 209, 213, 217, 218, 221, 222, 223, 228, 229, 230, 235, 236, 238, 240, 242, 243, 245, 264, 265, 268, 272], "repres": [3, 10, 11, 13, 16, 17, 18, 24, 26, 28, 31, 32, 33, 34, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 55, 56, 58, 60, 61, 63, 65, 66, 67, 72, 73, 76, 77, 79, 80, 81, 83, 86, 90, 92, 93, 94, 97, 98, 100, 105, 107, 108, 110, 112, 113, 115, 116, 117, 118, 121, 123, 125, 126, 127, 128, 130, 132, 134, 135, 137, 149, 150, 152, 156, 157, 160, 161, 163, 165, 168, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 195, 197, 199, 200, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 219, 221, 222, 223, 230, 232, 235, 236, 242, 244, 248, 250, 263, 265, 267, 268, 273, 274], "take": [3, 4, 5, 7, 10, 11, 14, 16, 17, 18, 27, 30, 32, 33, 35, 40, 41, 45, 49, 50, 51, 52, 56, 58, 62, 63, 73, 77, 79, 80, 81, 86, 90, 91, 92, 93, 96, 100, 104, 108, 110, 112, 113, 115, 127, 128, 130, 132, 146, 149, 152, 153, 157, 159, 160, 161, 162, 163, 165, 168, 171, 172, 173, 174, 175, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 193, 194, 197, 200, 203, 204, 205, 206, 207, 209, 210, 213, 215, 216, 217, 219, 222, 228, 229, 231, 232, 235, 236, 242, 243, 244, 262, 263, 265, 267, 268, 269, 273], "within": [3, 7, 12, 16, 30, 31, 32, 50, 56, 63, 66, 80, 81, 83, 90, 91, 93, 120, 158, 172, 173, 180, 181, 185, 187, 193, 195, 205, 213, 215, 216, 217, 228, 229, 238], "case": [3, 4, 6, 7, 10, 11, 14, 16, 17, 19, 30, 31, 32, 33, 35, 38, 41, 42, 46, 49, 50, 51, 52, 54, 55, 56, 58, 62, 65, 66, 67, 68, 72, 75, 77, 80, 81, 83, 86, 87, 90, 91, 92, 94, 100, 104, 107, 108, 113, 115, 116, 117, 118, 124, 126, 128, 130, 136, 147, 153, 158, 160, 162, 163, 168, 169, 176, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 221, 223, 226, 228, 230, 231, 233, 235, 236, 237, 238, 239, 242, 244, 245, 263, 267, 268, 269, 272, 273, 274], "subpackag": [3, 252], "f2py": [3, 32, 91, 229, 230], "ufuncifi": [3, 32, 229, 253], "cython": [3, 32, 91, 130, 229], "codegen": [3, 18, 91, 197, 229, 234, 254, 260], "relat": [3, 4, 6, 7, 17, 25, 27, 28, 30, 33, 34, 40, 41, 48, 52, 55, 56, 57, 66, 72, 75, 77, 81, 86, 90, 96, 103, 117, 120, 123, 124, 130, 132, 137, 145, 147, 173, 176, 179, 180, 182, 183, 184, 190, 192, 193, 194, 196, 197, 201, 203, 204, 207, 209, 210, 212, 213, 215, 216, 217, 235, 249, 253, 255, 273], "reli": [3, 10, 11, 32, 86, 91, 97, 190, 196, 197, 204, 209, 216, 231, 236, 269], "llvm": 3, "gcc": [3, 230], "ifort": 3, "therefor": [3, 4, 6, 18, 33, 41, 46, 50, 54, 58, 66, 79, 90, 100, 178, 181, 182, 183, 187, 190, 193, 197, 213, 216, 217, 218, 223, 242, 243, 245, 246, 248, 250], "aesara": [3, 10, 32, 130, 253, 260], "aesaracod": [3, 10, 32, 91, 197], "aeseara": 3, "previous": [3, 4, 10, 49, 121, 178, 196, 209, 217, 248], "theano": [3, 10, 130, 272], "return": [3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 79, 80, 81, 82, 83, 86, 87, 89, 90, 92, 93, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 121, 125, 127, 128, 130, 132, 134, 135, 136, 137, 139, 140, 144, 147, 148, 149, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 242, 244, 246, 248, 262, 263, 268, 269, 272, 273, 274], "graph": [3, 6, 42, 58, 79, 86, 91, 186, 197, 216, 235, 268, 272], "object": [3, 4, 6, 7, 11, 12, 15, 16, 17, 18, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 49, 50, 52, 55, 56, 58, 60, 61, 62, 63, 65, 66, 67, 75, 77, 80, 81, 83, 84, 86, 91, 92, 93, 94, 98, 100, 101, 104, 105, 107, 108, 109, 110, 112, 113, 117, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 137, 138, 146, 147, 149, 157, 158, 162, 163, 165, 166, 169, 170, 172, 173, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 197, 199, 200, 203, 204, 205, 206, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 228, 229, 230, 231, 232, 235, 236, 239, 240, 244, 245, 246, 251, 252, 262, 263, 265, 267, 268, 269, 272, 273], "llvmlite": 3, "llvmjitcod": 3, "jit": [3, 206], "around": [3, 4, 6, 7, 10, 11, 17, 18, 22, 30, 39, 42, 50, 51, 52, 54, 56, 59, 66, 70, 89, 90, 105, 123, 127, 131, 181, 187, 190, 192, 197, 199, 204, 208, 210, 213, 216, 217, 228, 242, 243, 263, 265, 267], "llvm_callabl": 3, "callabl": [3, 11, 32, 41, 86, 92, 148, 192, 197, 198, 209, 226, 229, 230, 235, 236, 237], "unlik": [3, 6, 11, 16, 17, 29, 51, 77, 86, 90, 92, 113, 180, 190, 197, 210, 213, 216, 232, 233, 265, 267, 268, 269, 272], "two": [3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 24, 30, 31, 32, 33, 35, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 75, 77, 79, 80, 81, 83, 86, 90, 91, 93, 94, 96, 97, 100, 101, 104, 105, 107, 108, 116, 121, 123, 124, 125, 127, 128, 135, 136, 137, 142, 143, 147, 149, 152, 153, 158, 159, 160, 161, 162, 163, 165, 168, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 219, 222, 232, 235, 236, 242, 244, 246, 247, 248, 250, 262, 263, 266, 268, 269, 273], "tensorflow_cod": 3, "order": [3, 4, 6, 7, 10, 11, 14, 16, 17, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 63, 66, 67, 69, 72, 75, 77, 78, 79, 80, 81, 86, 87, 90, 91, 92, 93, 94, 100, 101, 104, 108, 112, 113, 114, 115, 116, 124, 125, 126, 127, 128, 136, 140, 144, 147, 157, 158, 159, 160, 161, 162, 163, 168, 172, 173, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 208, 209, 210, 214, 215, 216, 217, 218, 219, 222, 223, 224, 228, 229, 230, 232, 235, 236, 238, 242, 243, 245, 246, 251, 263, 265, 266, 268, 272, 273, 274], "assum": [3, 6, 11, 13, 16, 18, 27, 32, 33, 34, 39, 41, 49, 50, 51, 52, 56, 58, 60, 67, 68, 75, 77, 86, 90, 93, 100, 112, 113, 119, 125, 126, 127, 128, 130, 136, 158, 162, 163, 173, 176, 178, 184, 185, 187, 190, 193, 195, 197, 204, 205, 207, 209, 210, 213, 214, 216, 217, 221, 222, 223, 230, 235, 238, 244, 246, 250, 266, 268, 271, 273, 274], "wurlitz": 3, "allow": [3, 4, 7, 10, 11, 16, 18, 28, 31, 32, 33, 34, 41, 43, 46, 49, 50, 51, 54, 58, 60, 61, 62, 75, 78, 80, 81, 83, 84, 86, 90, 91, 92, 94, 108, 113, 115, 123, 127, 128, 130, 135, 147, 163, 167, 168, 169, 181, 183, 184, 187, 188, 190, 192, 193, 194, 197, 202, 204, 205, 206, 209, 210, 213, 215, 216, 217, 218, 222, 228, 231, 233, 235, 236, 246, 265, 268], "captur": [3, 50, 235], "output": [3, 6, 7, 10, 11, 14, 16, 18, 31, 32, 50, 51, 58, 74, 77, 78, 80, 81, 83, 86, 90, 91, 92, 97, 100, 108, 112, 113, 121, 127, 130, 131, 135, 136, 147, 159, 163, 172, 173, 176, 177, 178, 181, 187, 190, 193, 197, 198, 207, 209, 210, 211, 212, 213, 215, 217, 222, 228, 229, 230, 232, 235, 236, 242, 265, 267, 268, 269, 272, 273, 274], "suit": [3, 4, 7, 16, 18, 31, 183, 193, 226, 228], "stat": [3, 252, 259], "sampl": [3, 8, 14, 41, 53, 98, 147, 183, 197, 217, 263, 267], "At": [3, 10, 16, 18, 30, 46, 56, 58, 77, 90, 93, 94, 104, 168, 172, 181, 192, 207, 236], "least": [3, 4, 7, 10, 16, 28, 30, 32, 41, 50, 56, 62, 74, 75, 77, 86, 90, 91, 108, 143, 157, 165, 184, 185, 187, 188, 190, 192, 193, 204, 206, 209, 213, 215, 216, 217, 230, 273], "random": [3, 6, 10, 34, 39, 41, 42, 48, 51, 60, 63, 64, 85, 86, 90, 147, 159, 183, 190, 197, 227, 228, 231, 235, 253, 259, 265, 269, 273], "pymc": [3, 217], "manipul": [3, 13, 14, 16, 31, 32, 33, 41, 50, 58, 75, 85, 90, 91, 113, 123, 128, 161, 180, 186, 187, 188, 191, 196, 197, 199, 206, 209, 211, 220, 235, 252, 255, 259, 262, 263, 264, 265, 266, 267, 269, 272, 273], "use_symengin": 3, "physic": [3, 6, 14, 32, 43, 86, 90, 93, 94, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 182, 191, 217, 232, 235, 248, 267, 273], "mechan": [3, 18, 19, 50, 73, 77, 93, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 145, 149, 152, 158, 160, 161, 162, 165, 172, 173, 179, 182, 258, 259], "liealgebra": [3, 79], "thing": [3, 4, 6, 7, 10, 11, 12, 16, 17, 18, 21, 28, 32, 40, 41, 42, 50, 52, 62, 78, 79, 80, 81, 86, 91, 104, 110, 113, 127, 130, 147, 163, 168, 180, 181, 194, 196, 204, 205, 206, 209, 213, 216, 221, 231, 233, 235, 262, 263, 265, 267, 268, 269, 272, 273], "configur": [3, 4, 5, 10, 42, 80, 100, 107, 108, 116, 117, 120, 122, 123, 125, 127, 189, 197], "otherwis": [3, 4, 16, 17, 18, 30, 31, 32, 41, 42, 46, 49, 50, 51, 54, 56, 58, 59, 60, 63, 64, 65, 66, 75, 77, 79, 80, 82, 86, 89, 90, 92, 98, 100, 102, 105, 112, 113, 148, 153, 159, 176, 179, 180, 184, 188, 190, 192, 193, 195, 197, 199, 200, 202, 203, 205, 209, 210, 213, 214, 215, 216, 217, 218, 226, 228, 230, 235, 236, 262, 263, 272], "ordinari": [3, 16, 17, 20, 30, 32, 41, 50, 54, 56, 58, 68, 72, 73, 77, 87, 100, 123, 184, 186, 187, 196, 203, 211, 213, 218, 232, 267, 273], "x": [3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 39, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 96, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 135, 137, 138, 139, 140, 141, 143, 144, 147, 152, 153, 158, 160, 161, 162, 163, 164, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 228, 229, 230, 231, 233, 235, 236, 238, 242, 244, 245, 246, 247, 248, 250, 251, 262, 263, 265, 267, 268, 269, 272, 273, 274], "still": [3, 4, 6, 7, 11, 16, 18, 22, 23, 31, 42, 49, 50, 51, 58, 62, 77, 81, 86, 113, 163, 181, 183, 184, 185, 190, 192, 197, 204, 206, 207, 209, 213, 215, 216, 222, 228, 235, 248, 269], "matchpi": 3, "pattern": [3, 10, 11, 16, 18, 50, 75, 77, 80, 81, 92, 157, 187, 207, 209, 213, 215, 263, 268], "anywher": [3, 4, 6, 10, 16, 32, 50, 58, 64, 163, 238, 267], "els": [3, 4, 10, 11, 16, 17, 18, 32, 40, 42, 46, 50, 51, 58, 60, 64, 66, 67, 75, 77, 80, 86, 90, 100, 163, 173, 183, 188, 192, 193, 197, 198, 205, 209, 213, 216, 221, 223, 228, 235, 238, 242, 244, 262, 268], "mathemat": [3, 4, 7, 8, 10, 13, 16, 18, 21, 26, 27, 30, 32, 33, 36, 40, 42, 49, 50, 51, 52, 55, 56, 57, 58, 63, 64, 75, 77, 80, 83, 86, 90, 91, 92, 100, 101, 104, 117, 129, 168, 178, 180, 181, 184, 185, 187, 188, 191, 196, 197, 205, 206, 210, 213, 216, 217, 222, 229, 230, 236, 242, 245, 248, 250, 262, 265, 266, 267, 268, 271, 273], "softwar": [3, 7, 77, 191, 267], "itself": [3, 4, 6, 7, 10, 18, 28, 39, 41, 42, 48, 50, 52, 55, 63, 67, 72, 90, 108, 112, 113, 128, 153, 160, 178, 180, 183, 184, 187, 190, 192, 193, 197, 205, 206, 209, 216, 221, 222, 223, 230, 232, 235, 250, 267], "_sage_": 3, "basic": [3, 4, 5, 6, 7, 10, 16, 18, 24, 26, 31, 32, 33, 38, 41, 45, 48, 49, 53, 56, 66, 68, 73, 74, 75, 80, 81, 84, 85, 87, 100, 107, 113, 125, 126, 128, 130, 131, 137, 147, 161, 168, 171, 178, 179, 181, 183, 184, 186, 188, 189, 190, 192, 194, 195, 197, 198, 204, 209, 210, 213, 214, 215, 216, 217, 228, 230, 235, 236, 240, 247, 248, 249, 255, 263, 264, 265, 266, 271], "beyond": [3, 16, 44, 66, 90, 127, 184, 187, 206, 209, 269], "control": [3, 5, 10, 11, 16, 18, 31, 33, 50, 51, 54, 75, 80, 81, 127, 130, 143, 147, 158, 159, 163, 167, 193, 194, 198, 205, 210, 216, 235, 258, 259, 262], "pytest": [3, 4, 10, 225, 231, 233, 236, 260], "entir": [3, 4, 16, 41, 50, 51, 54, 58, 64, 66, 75, 89, 106, 124, 128, 173, 184, 186, 192, 205, 222, 231, 233, 267, 273], "import_modul": 3, "own": [3, 5, 6, 11, 18, 26, 34, 41, 42, 50, 66, 94, 113, 130, 192, 197, 204, 209, 213, 232, 235, 236, 267], "runner": [3, 228], "access": [3, 6, 7, 11, 16, 18, 25, 26, 27, 32, 50, 58, 79, 80, 83, 86, 91, 94, 100, 101, 107, 108, 112, 113, 131, 172, 173, 178, 181, 183, 187, 188, 190, 192, 209, 213, 217, 218, 221, 229, 230, 245, 248, 268, 272], "script": [3, 5, 6, 23, 58, 177, 229], "cloudpickl": 3, "effect": [3, 6, 10, 18, 22, 41, 43, 50, 67, 75, 77, 81, 86, 93, 113, 115, 127, 135, 163, 173, 183, 187, 190, 194, 196, 213, 265], "pickl": 3, "util": [3, 4, 5, 6, 7, 30, 37, 39, 41, 42, 55, 56, 61, 62, 63, 66, 80, 81, 85, 90, 91, 133, 167, 170, 186, 189, 190, 194, 197, 209, 210, 211, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 254, 258], "test_pickl": 3, "py": [3, 4, 5, 6, 11, 16, 22, 31, 50, 61, 75, 77, 86, 141, 143, 183, 186, 188, 194, 197, 204, 207, 213, 214, 223, 226, 228, 233, 236], "pdf": [3, 7, 8, 21, 30, 31, 41, 51, 53, 55, 72, 77, 86, 90, 93, 94, 98, 183, 191, 196, 197, 200, 206, 209, 210, 213, 217, 235, 242], "view": [3, 6, 8, 32, 33, 50, 86, 93, 165, 168, 181, 183, 190, 197, 213, 216, 230, 232, 235], "host": [3, 7], "onlin": [3, 6, 108, 210, 235], "sympy_benchmark": 3, "readm": 3, "yourself": [3, 18, 32, 115, 231, 263], "reproduc": [3, 193, 228, 273], "add": [3, 4, 5, 6, 10, 11, 13, 16, 24, 26, 30, 32, 39, 41, 46, 51, 54, 57, 65, 67, 75, 79, 83, 86, 90, 93, 96, 105, 113, 130, 141, 147, 157, 162, 163, 166, 180, 181, 183, 186, 187, 188, 190, 192, 193, 194, 197, 198, 207, 209, 210, 213, 214, 216, 217, 219, 221, 222, 223, 231, 236, 240, 253, 263, 265, 268, 272, 273], "asv": 3, "airspe": 3, "veloc": [3, 104, 105, 107, 108, 110, 115, 116, 117, 120, 121, 122, 124, 127, 128, 130, 137, 165, 168, 172, 173, 176, 178, 181, 248, 250], "describ": [4, 6, 7, 10, 11, 16, 17, 18, 31, 33, 40, 41, 42, 44, 45, 48, 49, 50, 51, 55, 58, 60, 65, 66, 75, 77, 81, 86, 89, 90, 100, 104, 107, 108, 110, 112, 113, 116, 117, 118, 120, 122, 123, 125, 126, 127, 128, 142, 163, 167, 168, 172, 173, 178, 180, 181, 184, 187, 190, 192, 198, 204, 207, 209, 210, 213, 216, 217, 221, 230, 235, 236, 242, 243, 248, 263], "properli": [4, 18, 31, 50, 56, 62, 75, 86, 109, 113, 125, 140, 144, 147, 161, 185, 187, 197, 213, 216, 226, 230, 236, 269, 274], "current": [4, 7, 10, 11, 16, 24, 27, 30, 31, 32, 33, 34, 41, 44, 45, 47, 48, 49, 50, 52, 56, 58, 60, 62, 65, 70, 73, 75, 77, 79, 81, 86, 90, 92, 93, 97, 104, 107, 113, 123, 157, 162, 163, 167, 171, 181, 183, 184, 185, 186, 188, 190, 193, 194, 196, 197, 198, 204, 207, 209, 210, 212, 213, 214, 215, 216, 217, 223, 228, 229, 230, 232, 245, 269, 274], "activ": [4, 5, 12, 115, 183, 226, 231, 233], "updat": [4, 10, 11, 22, 50, 117, 143, 153, 156, 157, 159, 182, 190, 193, 197, 210, 223, 233], "continu": [4, 6, 7, 10, 14, 17, 18, 30, 32, 40, 42, 44, 50, 55, 56, 58, 75, 78, 81, 90, 97, 98, 158, 161, 177, 188, 190, 193, 210, 212, 213, 221, 264], "someon": [4, 213, 232, 266], "warn": [4, 6, 11, 12, 18, 50, 51, 65, 92, 173, 181, 185, 213, 215, 226, 228, 230, 234, 235, 260, 269], "screen": [4, 78, 177, 181, 228, 272], "indic": [4, 6, 11, 13, 16, 30, 31, 32, 33, 34, 39, 41, 42, 43, 45, 46, 48, 49, 50, 53, 54, 55, 58, 60, 65, 66, 75, 77, 80, 81, 83, 86, 89, 90, 101, 112, 117, 147, 158, 160, 161, 163, 168, 172, 173, 182, 186, 187, 188, 192, 193, 194, 197, 204, 205, 206, 208, 209, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 235, 269], "remov": [4, 10, 16, 25, 26, 41, 44, 48, 50, 54, 56, 65, 66, 75, 80, 81, 86, 90, 93, 96, 105, 120, 122, 127, 147, 163, 188, 190, 193, 195, 196, 197, 209, 210, 213, 215, 216, 218, 219, 229, 230, 231, 233, 235, 236, 262, 273], "futur": [4, 11, 16, 17, 32, 33, 50, 75, 77, 81, 86, 92, 112, 115, 123, 127, 163, 167, 179, 183, 185, 196, 197, 209, 213, 222, 228, 231, 233, 236, 259, 268, 274], "chanc": [4, 11, 17, 50, 78, 207, 217, 268], "break": [4, 6, 10, 18, 31, 32, 42, 50, 51, 90, 180, 194, 197, 205, 235], "opportun": [4, 6, 209], "messag": [4, 10, 51, 78, 231, 233], "wrong": [4, 7, 10, 41, 50, 51, 58, 60, 86, 173, 187, 211, 213, 231, 265, 269], "answer": [4, 16, 18, 41, 50, 54, 72, 75, 77, 80, 86, 90, 168, 190, 194, 206, 207, 209, 215, 217, 232, 238, 267, 269, 273], "made": [4, 7, 10, 11, 16, 18, 44, 46, 50, 51, 56, 59, 60, 63, 66, 67, 77, 80, 86, 90, 92, 113, 127, 130, 181, 184, 188, 190, 192, 193, 198, 204, 205, 206, 209, 213, 215, 216, 217, 230, 235, 238, 250, 268], "lightli": 4, "fix": [4, 6, 9, 10, 32, 41, 43, 46, 48, 51, 58, 62, 79, 93, 94, 96, 105, 107, 110, 115, 130, 147, 152, 156, 159, 163, 168, 173, 176, 180, 181, 183, 187, 190, 192, 193, 194, 197, 203, 207, 215, 217, 235, 242, 243], "worth": [4, 16, 18, 173, 246, 248], "pain": 4, "frustrat": 4, "go": [4, 5, 6, 7, 18, 22, 31, 32, 41, 51, 56, 75, 108, 113, 115, 128, 130, 131, 157, 168, 176, 183, 192, 193, 204, 207, 213, 265, 267, 268, 271, 273], "seek": [4, 215], "stabl": [4, 6, 18, 50, 78, 86, 92, 100, 262], "done": [4, 6, 10, 11, 14, 18, 26, 27, 29, 30, 31, 32, 41, 43, 48, 50, 51, 52, 55, 58, 61, 62, 75, 77, 81, 86, 90, 113, 115, 121, 128, 130, 149, 158, 159, 160, 163, 165, 166, 173, 178, 180, 181, 183, 184, 186, 190, 194, 196, 197, 198, 206, 209, 210, 213, 215, 216, 217, 222, 223, 228, 229, 232, 236, 245, 246, 262, 265, 267, 268, 269], "exist": [4, 10, 14, 16, 18, 30, 31, 34, 41, 50, 54, 60, 62, 65, 66, 67, 68, 76, 77, 80, 86, 90, 96, 153, 178, 181, 183, 184, 185, 186, 190, 192, 197, 204, 205, 207, 210, 213, 215, 216, 228, 236, 246, 267, 269, 274], "necessarili": [4, 6, 16, 28, 50, 51, 52, 75, 77, 80, 184, 185, 192, 193, 195, 209, 213, 215, 216], "supplant": 4, "old": [4, 10, 11, 19, 50, 51, 52, 78, 127, 132, 167, 168, 177, 183, 184, 188, 189, 197, 198, 209, 213, 216, 218, 262], "sometim": [4, 6, 7, 11, 16, 18, 31, 32, 50, 55, 58, 74, 75, 100, 123, 127, 155, 163, 181, 184, 187, 192, 197, 199, 204, 206, 210, 213, 215, 226, 235, 262, 269], "alongsid": [4, 10, 18, 83], "newer": [4, 180, 215], "solveset": [4, 18, 130, 195, 211, 212, 215, 274], "superior": [4, 197], "replac": [4, 6, 10, 11, 16, 30, 32, 41, 49, 50, 51, 54, 55, 56, 58, 60, 64, 77, 80, 81, 86, 90, 91, 92, 104, 106, 130, 152, 158, 173, 184, 190, 193, 194, 198, 204, 206, 207, 209, 213, 215, 216, 223, 224, 235, 236, 238, 262, 271], "older": [4, 7, 73, 113, 187, 197, 215], "solv": [4, 6, 10, 11, 14, 16, 18, 19, 32, 34, 46, 49, 50, 58, 63, 75, 77, 81, 82, 86, 93, 95, 96, 107, 108, 109, 113, 116, 117, 120, 122, 123, 125, 127, 130, 166, 186, 189, 190, 194, 195, 196, 199, 209, 210, 211, 212, 213, 214, 217, 258, 263, 264, 267, 269, 272], "remain": [4, 10, 18, 26, 27, 32, 41, 42, 44, 46, 50, 51, 56, 75, 81, 90, 92, 101, 113, 162, 178, 180, 181, 192, 193, 194, 203, 206, 207, 213, 214, 217, 219, 223, 232, 235, 236, 245, 250, 262, 265, 267, 268, 269], "intact": [4, 10, 32, 229], "cogniz": 4, "properti": [4, 13, 18, 19, 26, 27, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 73, 75, 77, 81, 83, 86, 90, 93, 94, 96, 97, 100, 105, 107, 108, 110, 112, 128, 130, 132, 134, 137, 138, 141, 142, 147, 148, 149, 151, 152, 159, 161, 163, 165, 168, 170, 171, 173, 174, 175, 178, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 196, 199, 200, 203, 204, 205, 207, 210, 213, 216, 217, 222, 223, 228, 230, 231, 242, 244, 245, 246, 248, 250, 269], "attr": [4, 32], "imposs": [4, 6, 10, 18, 50, 187, 206, 213, 214, 226, 265, 273], "later": [4, 10, 14, 32, 41, 75, 81, 104, 109, 110, 115, 117, 118, 125, 127, 128, 130, 137, 172, 180, 187, 190, 196, 197, 198, 207, 209, 213, 232, 245, 262, 263, 265, 267, 268, 273], "unsur": [4, 6], "about": [4, 5, 6, 7, 10, 11, 12, 14, 16, 17, 18, 21, 22, 24, 25, 27, 28, 31, 32, 41, 42, 43, 44, 50, 54, 56, 58, 60, 61, 62, 64, 65, 66, 70, 72, 76, 77, 79, 86, 90, 93, 94, 100, 104, 105, 106, 107, 108, 109, 110, 112, 113, 117, 127, 128, 158, 160, 161, 163, 167, 172, 173, 180, 181, 182, 184, 186, 187, 192, 194, 197, 199, 204, 209, 210, 211, 213, 217, 221, 222, 228, 229, 230, 231, 232, 233, 242, 243, 245, 248, 249, 262, 264, 265, 267, 268, 269, 273], "mark": [4, 6, 7, 98, 136, 148, 210, 226, 231, 233], "explicitli": [4, 10, 16, 18, 32, 41, 42, 50, 51, 53, 56, 58, 63, 67, 83, 86, 91, 100, 113, 172, 173, 183, 185, 187, 188, 190, 193, 197, 209, 213, 233, 265, 269, 272, 274], "privat": [4, 6, 50, 51, 113, 183, 230], "experiment": [4, 209, 260], "With": [4, 11, 17, 22, 32, 49, 50, 54, 75, 90, 116, 117, 118, 124, 126, 127, 136, 160, 163, 181, 183, 184, 185, 187, 188, 195, 196, 197, 204, 209, 215, 218, 235, 267, 268], "being": [4, 7, 10, 11, 16, 17, 28, 30, 32, 41, 42, 48, 49, 50, 51, 56, 58, 60, 62, 63, 66, 67, 75, 80, 81, 86, 87, 90, 93, 94, 96, 104, 112, 113, 115, 127, 128, 130, 131, 159, 168, 175, 178, 180, 181, 182, 183, 184, 186, 187, 192, 193, 194, 197, 206, 207, 209, 210, 213, 214, 215, 216, 217, 223, 226, 232, 233, 235, 236, 238, 242, 246, 250, 267, 269], "decid": [4, 6, 14, 16, 17, 18, 31, 49, 81, 104, 127, 156, 167, 187, 190, 192, 193, 197, 213, 216, 230, 269], "reason": [4, 7, 10, 16, 17, 18, 32, 42, 48, 50, 54, 58, 75, 78, 84, 86, 108, 109, 113, 115, 120, 123, 127, 134, 168, 177, 181, 187, 190, 191, 194, 197, 205, 207, 209, 213, 215, 216, 226, 232, 233, 235, 236, 262, 263, 267, 268, 269], "confus": [4, 7, 10, 16, 50, 55, 80, 136, 181, 185, 193, 216, 262, 263, 265], "unnecessari": [4, 6, 7, 28, 32, 193, 196, 217, 228, 266], "redund": [4, 16, 41, 48, 80, 86, 213, 230], "usabl": [4, 187, 188, 197, 216, 267], "breakag": 4, "serious": 4, "taken": [4, 32, 33, 38, 41, 48, 49, 50, 55, 56, 58, 67, 81, 90, 100, 102, 104, 105, 127, 130, 160, 166, 173, 176, 182, 183, 187, 192, 193, 200, 204, 206, 207, 216, 217, 222, 230, 235, 242], "commun": [4, 7, 22, 182, 213, 215, 217, 269], "inde": [4, 14, 18, 38, 41, 49, 75, 184, 207, 213, 224, 228, 267], "second": [4, 7, 10, 11, 14, 16, 17, 18, 23, 27, 30, 32, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 60, 63, 64, 66, 77, 86, 90, 91, 93, 94, 98, 100, 101, 104, 105, 107, 108, 113, 117, 120, 122, 123, 124, 126, 128, 134, 136, 137, 140, 144, 149, 152, 157, 158, 160, 161, 166, 168, 170, 172, 173, 174, 180, 181, 183, 186, 187, 190, 191, 192, 193, 197, 199, 207, 209, 210, 213, 215, 216, 217, 218, 219, 235, 236, 242, 244, 245, 246, 258, 262, 267, 268, 269], "know": [4, 6, 7, 10, 11, 16, 17, 18, 25, 27, 31, 42, 50, 51, 54, 62, 67, 75, 77, 86, 90, 110, 113, 131, 157, 161, 165, 166, 168, 172, 173, 180, 181, 183, 193, 194, 196, 197, 207, 209, 213, 215, 216, 217, 231, 235, 236, 246, 262, 263, 265, 266, 267, 268, 271, 273], "Is": [4, 10, 42, 60, 61, 63, 64, 65, 66, 90, 194, 216], "count": [4, 7, 42, 49, 50, 51, 55, 60, 80, 86, 89, 90, 158, 193, 205, 206, 209, 216, 217, 223, 232, 235], "basi": [4, 50, 52, 79, 83, 86, 105, 120, 122, 148, 157, 158, 160, 163, 165, 168, 171, 172, 173, 178, 180, 182, 184, 186, 188, 189, 193, 196, 207, 209, 215, 216, 218, 223, 244, 245, 248, 271], "exact": [4, 11, 16, 18, 28, 49, 50, 51, 54, 60, 65, 72, 75, 77, 81, 86, 93, 130, 157, 187, 188, 190, 193, 204, 209, 213, 215, 228, 238, 265, 267, 272], "rule": [4, 7, 10, 14, 16, 18, 32, 41, 42, 49, 50, 58, 73, 75, 77, 80, 81, 86, 93, 107, 113, 144, 147, 168, 173, 178, 181, 182, 194, 196, 197, 198, 203, 207, 208, 209, 213, 223, 235, 236, 248, 249, 265, 268], "doesn": [4, 6, 10, 11, 18, 32, 74, 113, 117, 127, 130, 181, 185, 194, 196, 206, 209, 216, 274], "constitut": [4, 7, 77, 90, 197], "yet": [4, 5, 10, 11, 16, 18, 25, 27, 30, 31, 54, 55, 77, 127, 143, 184, 187, 188, 192, 194, 196, 205, 213, 216, 263], "fulli": [4, 6, 16, 19, 41, 50, 67, 77, 80, 92, 94, 113, 130, 163, 180, 187, 188, 194, 204, 217, 223, 239], "codifi": 4, "clean": [4, 228], "distinct": [4, 7, 16, 18, 32, 41, 42, 50, 51, 55, 63, 75, 80, 86, 90, 112, 180, 187, 192, 193, 197, 205, 207, 273], "well": [4, 6, 7, 10, 11, 14, 16, 18, 22, 28, 30, 31, 32, 33, 34, 42, 49, 50, 55, 56, 58, 77, 81, 84, 86, 101, 104, 113, 115, 117, 118, 127, 153, 162, 165, 166, 172, 180, 182, 183, 184, 186, 187, 188, 190, 192, 197, 204, 205, 206, 207, 209, 213, 215, 216, 228, 229, 245, 246, 250, 265, 267, 268, 273], "categor": [4, 86, 184], "issu": [4, 7, 9, 10, 11, 17, 18, 22, 23, 30, 49, 50, 67, 77, 80, 86, 91, 109, 123, 143, 179, 182, 191, 192, 194, 197, 205, 206, 215, 216, 228, 230, 232, 233, 235, 238, 264, 265, 268, 273], "here": [4, 6, 7, 10, 14, 16, 17, 18, 21, 22, 26, 27, 32, 33, 34, 39, 40, 41, 42, 48, 49, 50, 51, 52, 54, 55, 56, 58, 66, 67, 68, 72, 73, 75, 77, 80, 81, 86, 89, 90, 91, 92, 93, 96, 100, 104, 108, 113, 114, 115, 120, 121, 122, 125, 127, 128, 130, 131, 153, 158, 163, 172, 177, 178, 180, 181, 183, 184, 187, 188, 190, 192, 193, 194, 197, 198, 204, 206, 207, 209, 210, 213, 215, 216, 217, 221, 222, 229, 230, 232, 233, 235, 236, 246, 248, 250, 261, 262, 263, 265, 267, 268, 269, 271, 272, 273], "guidelin": [4, 8, 213], "exhaust": [4, 16, 207, 235, 266], "alwai": [4, 6, 7, 10, 11, 16, 17, 18, 22, 24, 31, 41, 42, 49, 50, 51, 52, 54, 56, 58, 60, 62, 65, 66, 74, 75, 77, 80, 81, 86, 89, 90, 96, 100, 101, 112, 113, 115, 117, 121, 131, 163, 165, 168, 169, 178, 180, 184, 185, 187, 188, 190, 192, 193, 197, 198, 199, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 224, 228, 230, 235, 236, 242, 243, 248, 263, 265, 266, 267, 268, 273], "posit": [4, 10, 11, 16, 17, 18, 25, 26, 27, 29, 31, 32, 33, 34, 39, 41, 42, 43, 45, 46, 49, 50, 51, 52, 54, 55, 56, 58, 60, 62, 63, 66, 75, 77, 79, 80, 81, 82, 86, 87, 89, 90, 93, 94, 96, 100, 102, 107, 110, 113, 115, 117, 120, 122, 124, 127, 128, 130, 132, 135, 137, 141, 158, 161, 163, 174, 175, 176, 178, 180, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 202, 203, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 223, 235, 242, 244, 245, 246, 248, 250, 251, 269, 273, 274], "convent": [4, 6, 7, 9, 18, 41, 42, 46, 49, 50, 51, 55, 56, 58, 60, 65, 75, 77, 80, 92, 93, 94, 100, 103, 115, 130, 132, 136, 157, 158, 160, 165, 166, 178, 183, 197, 213, 214, 216, 217, 223, 250, 265, 273], "defin": [4, 6, 7, 10, 11, 14, 16, 17, 23, 24, 26, 27, 30, 32, 33, 34, 40, 41, 42, 45, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 73, 75, 77, 78, 81, 83, 86, 90, 94, 98, 104, 105, 107, 110, 112, 113, 115, 116, 120, 122, 123, 124, 128, 130, 131, 134, 140, 142, 144, 149, 152, 158, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 199, 200, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 218, 222, 223, 229, 230, 231, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 265, 267, 273], "And": [4, 10, 11, 17, 18, 20, 26, 41, 42, 49, 50, 51, 58, 75, 80, 81, 86, 89, 107, 124, 135, 181, 183, 185, 193, 194, 197, 205, 209, 210, 216, 217, 236, 246, 273], "aren": [4, 10, 18, 32, 50, 113, 196, 216], "don": [4, 10, 11, 17, 18, 27, 32, 75, 86, 91, 92, 104, 113, 172, 180, 181, 187, 197, 207, 216, 226, 231, 250, 262, 263, 267, 268, 273], "form": [4, 7, 10, 14, 16, 18, 24, 27, 28, 29, 30, 32, 33, 40, 41, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 66, 70, 72, 73, 75, 77, 79, 81, 83, 85, 86, 90, 92, 93, 94, 97, 100, 104, 105, 107, 108, 109, 112, 113, 115, 117, 120, 122, 123, 124, 125, 126, 128, 130, 131, 140, 143, 144, 145, 147, 157, 158, 161, 163, 165, 168, 171, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 205, 206, 207, 209, 210, 214, 215, 216, 217, 220, 222, 223, 228, 229, 235, 242, 244, 245, 247, 248, 250, 255, 256, 263, 267, 268, 269, 272, 273, 274], "equival": [4, 10, 11, 16, 17, 18, 24, 28, 32, 33, 40, 41, 46, 50, 51, 54, 56, 58, 75, 77, 86, 90, 92, 97, 98, 100, 113, 123, 146, 157, 160, 163, 166, 173, 177, 181, 183, 184, 185, 187, 188, 192, 193, 197, 204, 205, 209, 213, 215, 216, 218, 219, 222, 223, 232, 236, 238, 239, 255], "intern": [4, 10, 11, 16, 17, 30, 32, 33, 41, 50, 53, 54, 55, 58, 66, 67, 70, 76, 82, 86, 90, 94, 96, 98, 115, 127, 136, 157, 158, 168, 184, 186, 188, 189, 191, 193, 195, 197, 207, 209, 211, 214, 215, 216, 217, 221, 223, 226, 230, 232, 235, 268, 272], "Such": [4, 6, 16, 32, 50, 66, 117, 184, 185, 192, 198, 206, 207, 209, 262, 268], "prefix": [4, 32, 50, 86, 90, 167, 170, 171, 187, 190, 194, 210, 213, 229, 230, 235, 258], "underscor": [4, 6, 10, 50, 86, 213, 223, 231], "_": [4, 5, 6, 7, 10, 11, 14, 18, 26, 27, 31, 38, 39, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 63, 64, 65, 66, 75, 77, 80, 81, 82, 83, 84, 86, 88, 90, 92, 100, 125, 128, 130, 142, 168, 172, 177, 180, 182, 188, 193, 196, 197, 198, 200, 204, 205, 206, 207, 209, 210, 213, 214, 215, 218, 235, 244, 246, 272], "univers": [4, 32, 182, 191, 205, 210, 215, 216], "adher": [4, 7, 75], "codebas": [4, 10, 16, 187, 226], "anyth": [4, 6, 7, 10, 11, 18, 30, 32, 50, 51, 61, 65, 86, 113, 137, 147, 194, 197, 203, 205, 209, 213, 215, 229, 235, 238, 265], "were": [4, 7, 10, 11, 16, 18, 31, 42, 44, 50, 51, 56, 67, 75, 81, 86, 90, 91, 92, 104, 112, 127, 172, 178, 181, 184, 190, 191, 192, 193, 196, 197, 198, 206, 209, 215, 235, 236, 238, 265, 267, 268, 272, 273], "incorrect": [4, 7, 10, 17, 18, 41, 50, 60, 90, 98, 176, 188, 213, 216, 229, 232, 233], "bug": [4, 6, 16, 18, 22, 30, 51, 76, 187, 205, 213, 216, 265], "despit": [4, 50, 273], "sai": [4, 7, 11, 14, 16, 33, 40, 49, 50, 51, 79, 104, 108, 113, 123, 130, 168, 180, 181, 184, 185, 186, 190, 192, 196, 197, 204, 207, 210, 213, 215, 216, 217, 236, 262, 267, 273], "befor": [4, 6, 10, 11, 16, 17, 18, 22, 32, 41, 42, 44, 46, 50, 51, 52, 58, 78, 81, 86, 90, 92, 93, 94, 104, 109, 113, 115, 116, 117, 120, 121, 127, 130, 132, 163, 172, 177, 181, 185, 187, 192, 193, 197, 198, 204, 205, 209, 210, 213, 215, 216, 217, 224, 228, 231, 235, 236, 245, 266, 267, 268, 273], "recent": [4, 10, 11, 13, 16, 17, 18, 25, 26, 27, 32, 33, 42, 50, 51, 54, 58, 60, 77, 80, 81, 82, 83, 84, 86, 88, 89, 92, 100, 182, 184, 187, 188, 190, 193, 196, 204, 205, 213, 215, 216, 226, 229, 231, 233, 235, 236, 238, 265, 269], "best": [4, 8, 11, 21, 22, 32, 50, 58, 75, 77, 91, 162, 183, 194, 197, 206, 207, 209, 213, 216, 221, 229, 261, 265, 266, 272, 273], "determin": [4, 7, 11, 14, 16, 17, 18, 25, 27, 28, 29, 30, 32, 33, 34, 41, 50, 51, 52, 53, 54, 56, 60, 61, 63, 65, 66, 77, 78, 79, 83, 86, 90, 92, 93, 94, 100, 106, 109, 110, 112, 122, 128, 131, 142, 155, 157, 159, 160, 163, 166, 168, 173, 178, 183, 184, 185, 186, 190, 192, 197, 203, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 221, 233, 235, 242, 248, 251, 265, 273], "someth": [4, 6, 7, 10, 11, 16, 17, 18, 30, 32, 50, 51, 54, 60, 75, 80, 81, 86, 90, 104, 113, 114, 130, 156, 169, 172, 183, 187, 188, 196, 204, 205, 209, 213, 216, 228, 230, 236, 262, 265, 267, 268, 271], "re": [4, 11, 18, 29, 30, 32, 41, 42, 50, 51, 54, 57, 58, 75, 77, 86, 173, 175, 178, 184, 190, 197, 198, 199, 205, 206, 207, 213, 228, 244, 246, 263, 265, 268], "harm": 4, "even": [4, 6, 7, 11, 13, 16, 18, 25, 26, 27, 29, 32, 33, 38, 41, 42, 49, 50, 51, 54, 55, 56, 58, 62, 66, 75, 77, 80, 81, 86, 89, 90, 101, 113, 123, 148, 159, 166, 168, 173, 182, 185, 186, 187, 188, 190, 192, 193, 194, 197, 198, 204, 205, 206, 207, 209, 210, 213, 215, 216, 224, 228, 250, 262, 263, 265, 267, 268, 273, 274], "might": [4, 6, 10, 11, 16, 17, 18, 30, 50, 54, 56, 63, 72, 75, 83, 86, 90, 92, 104, 113, 114, 130, 143, 173, 180, 183, 187, 188, 193, 194, 197, 198, 205, 206, 207, 209, 210, 215, 216, 217, 229, 230, 233, 235, 238, 262, 265, 267, 268, 270, 273], "while": [4, 6, 10, 11, 16, 18, 20, 31, 32, 33, 41, 42, 43, 46, 49, 50, 51, 52, 54, 55, 60, 64, 66, 74, 80, 81, 86, 90, 91, 92, 93, 105, 109, 113, 117, 127, 147, 168, 173, 178, 184, 192, 195, 197, 213, 216, 228, 230, 232, 235, 250, 262, 268, 269], "peopl": [4, 6, 53, 58, 77, 86, 168, 217], "upgrad": [4, 23], "immedi": [4, 16, 41, 50, 75, 80, 163, 184, 187, 229, 236], "fire": 4, "uncondition": 4, "correct": [4, 6, 7, 10, 11, 17, 18, 32, 39, 41, 47, 49, 50, 54, 56, 74, 75, 77, 86, 90, 100, 113, 127, 180, 181, 190, 193, 204, 210, 213, 215, 216, 221, 229, 235, 265, 272], "question": [4, 6, 7, 14, 16, 49, 52, 60, 67, 75, 77, 80, 90, 104, 165, 168, 172, 184, 187, 192, 207, 216, 235, 238], "read": [4, 6, 7, 9, 10, 18, 42, 56, 75, 90, 94, 130, 180, 181, 186, 187, 188, 194, 197, 210, 223, 224, 232, 239, 266, 272, 273], "previou": [4, 6, 10, 18, 34, 39, 40, 41, 42, 45, 50, 56, 77, 81, 89, 105, 127, 165, 180, 181, 190, 203, 210, 214, 218, 235, 266, 268, 273], "unchang": [4, 10, 18, 41, 42, 50, 77, 86, 100, 193, 197, 203, 206, 209, 216, 262], "dure": [4, 10, 11, 23, 32, 50, 51, 81, 86, 90, 92, 105, 108, 130, 131, 180, 192, 206, 215, 216, 233, 235], "period": [4, 6, 10, 30, 50, 51, 56, 75, 90, 127, 137, 159, 166, 192, 197, 200, 203, 212, 216, 217, 235], "silenc": [4, 12, 226, 233], "filterwarn": [4, 10], "caus": [4, 7, 10, 18, 22, 50, 51, 54, 56, 86, 113, 121, 127, 180, 197, 206, 213, 214, 215, 232, 233, 269], "anoth": [4, 6, 7, 10, 11, 13, 14, 16, 17, 18, 28, 31, 32, 42, 47, 49, 50, 51, 52, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 75, 77, 83, 86, 90, 93, 94, 110, 124, 152, 168, 170, 173, 176, 180, 181, 183, 185, 187, 188, 190, 192, 193, 194, 197, 198, 204, 205, 207, 213, 215, 216, 217, 229, 230, 236, 242, 245, 246, 250, 262, 265, 267, 268, 273, 274], "over": [4, 7, 8, 10, 11, 13, 18, 21, 24, 30, 31, 32, 33, 41, 42, 45, 49, 50, 51, 52, 53, 54, 55, 64, 66, 73, 75, 79, 80, 83, 86, 87, 90, 93, 94, 102, 113, 130, 131, 142, 158, 161, 163, 167, 168, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 200, 202, 204, 209, 210, 212, 213, 215, 216, 217, 218, 221, 222, 231, 235, 236, 242, 244, 248, 251, 267, 271, 273], "defeat": [4, 213], "three": [4, 11, 14, 16, 18, 19, 24, 28, 32, 41, 42, 43, 46, 50, 51, 55, 58, 60, 64, 65, 66, 75, 79, 80, 81, 93, 94, 112, 116, 119, 120, 121, 136, 158, 160, 165, 173, 176, 180, 181, 182, 183, 184, 185, 188, 190, 193, 197, 207, 209, 210, 215, 216, 217, 228, 242, 243, 248, 251, 265, 268, 273], "natur": [4, 10, 11, 16, 24, 28, 32, 33, 41, 50, 51, 55, 56, 84, 90, 113, 165, 167, 168, 184, 187, 188, 190, 192, 194, 197, 206, 210, 216, 217, 235, 251, 268, 273], "heavili": [4, 204, 214], "consider": [4, 17, 50, 91, 104, 187, 196, 205, 210, 213, 245], "easi": [4, 19, 38, 42, 50, 58, 75, 91, 110, 117, 123, 180, 184, 187, 192, 197, 204, 207, 210, 213, 216, 221, 222, 223, 262, 263, 265, 266, 267, 268, 269, 272], "account": [4, 56, 86, 200, 209, 213], "nonetheless": [4, 51, 165, 209, 213], "deprecat": 4, "won": [4, 11, 18, 32, 209, 216, 268], "until": [4, 14, 16, 23, 42, 44, 50, 51, 60, 77, 86, 90, 127, 181, 190, 193, 206, 213, 265], "come": [4, 22, 41, 46, 48, 49, 50, 56, 58, 75, 77, 86, 91, 104, 113, 115, 125, 166, 181, 184, 187, 190, 192, 193, 207, 210, 213, 216, 226, 228, 233, 236, 265, 267, 268, 271, 273], "minimum": [4, 10, 30, 32, 41, 42, 44, 46, 50, 51, 54, 56, 86, 104, 108, 115, 147, 172, 183, 185, 190, 216, 217, 231, 263], "longer": [4, 6, 11, 15, 50, 60, 90, 117, 127, 185, 190, 197, 206, 209, 235, 238, 265, 273], "especi": [4, 6, 18, 49, 86, 104, 113, 130, 157, 172, 181, 209, 213, 215, 228, 262, 263], "hard": [4, 8, 16, 42, 51, 86, 90, 113, 163, 187, 197, 204, 213, 216, 265, 267], "migrat": 4, "lengthen": 4, "impos": [4, 94], "signific": [4, 11, 16, 32, 50, 51, 54, 77, 86, 104, 128, 157, 187, 216, 236, 268], "mainten": [4, 27], "burden": [4, 197], "keep": [4, 6, 11, 13, 18, 46, 50, 51, 54, 55, 58, 75, 86, 108, 116, 124, 128, 147, 163, 183, 186, 187, 188, 193, 204, 205, 207, 209, 213, 215, 223, 250, 263, 268], "firstli": [4, 10, 16, 18, 207], "regular": [4, 10, 11, 16, 17, 33, 38, 50, 51, 54, 58, 66, 72, 73, 77, 90, 113, 157, 187, 194, 213, 223, 228, 272, 273], "schedul": 4, "Being": [4, 46, 60, 66, 187], "assur": [4, 90, 193], "suffici": [4, 6, 16, 31, 32, 41, 42, 46, 50, 86, 168, 200, 204, 213, 217, 232, 273], "regardless": [4, 6, 10, 18, 42, 50, 77, 90, 190, 205, 209, 235, 245, 250, 273], "often": [4, 6, 16, 17, 18, 31, 32, 33, 40, 50, 58, 60, 62, 75, 77, 86, 90, 91, 100, 123, 127, 172, 180, 181, 184, 185, 187, 190, 193, 198, 204, 205, 210, 213, 217, 235, 262, 267, 268, 269, 273], "happen": [4, 6, 10, 14, 16, 17, 18, 24, 32, 42, 49, 50, 54, 62, 65, 74, 158, 162, 168, 184, 190, 192, 193, 196, 205, 209, 213, 217, 236, 246, 265, 272, 273], "secondli": [4, 18, 207], "rigor": [4, 58, 181, 230], "semant": [4, 16, 83], "surfac": [4, 56, 58, 64, 75, 94, 132, 136, 163, 183, 209, 242, 249], "enough": [4, 6, 41, 50, 54, 77, 86, 89, 90, 100, 113, 130, 188, 190, 197, 213, 263, 265], "encod": [4, 10, 34, 42, 48, 51, 80, 189, 197, 228, 232, 235], "backport": 4, "prior": [4, 10, 22, 176, 193, 209, 269], "extrem": [4, 41, 54, 60, 66, 77, 83, 96, 127, 181, 209, 217], "accur": [4, 11, 14, 18, 30, 41, 50, 54, 55, 72, 77, 97, 183, 204, 262, 269], "model": [4, 54, 80, 90, 100, 109, 115, 117, 118, 119, 135, 193, 206, 217], "final": [4, 6, 7, 10, 16, 18, 31, 42, 49, 50, 56, 58, 75, 77, 80, 86, 90, 94, 98, 107, 108, 115, 120, 122, 123, 125, 128, 143, 155, 158, 160, 161, 163, 165, 166, 168, 173, 180, 181, 184, 187, 190, 192, 199, 205, 206, 207, 209, 210, 213, 215, 216, 223, 236, 266, 267, 268], "temptat": [4, 206, 273], "fudg": 4, "earli": [4, 50, 90, 152, 210], "acceler": [4, 91, 110, 115, 120, 122, 127, 128, 130, 166, 173, 176, 178, 201, 232, 250], "myst": [4, 7], "checkbox": 4, "tag": [4, 197, 215], "nest": [4, 50, 52, 56, 58, 77, 81, 100, 185, 187, 190, 197, 207, 209, 212, 216, 217, 218, 219, 221, 224, 235, 236, 268], "ensur": [4, 11, 18, 22, 50, 51, 54, 82, 86, 128, 192, 193, 197, 211, 228, 233, 236], "realli": [4, 10, 14, 16, 17, 18, 50, 62, 90, 115, 165, 187, 196, 198, 204, 206, 207, 209, 213, 229, 238, 265, 267], "per": [4, 51, 86, 91, 137, 173, 178, 183, 188, 193, 194, 242, 245, 247, 250], "everywher": [4, 11, 50, 58, 75, 100, 178, 250], "doctest": [4, 6, 7, 11, 18, 43, 58, 86, 90, 115, 152, 163, 187, 193, 213, 228, 231, 233, 272], "sympy_deprecation_warn": [4, 226, 231, 233], "write": [4, 8, 10, 14, 16, 17, 19, 23, 32, 39, 50, 51, 57, 58, 75, 77, 83, 130, 143, 180, 181, 185, 190, 192, 197, 206, 207, 210, 213, 216, 222, 228, 229, 230, 236, 266, 267, 268, 273], "multilin": [4, 197], "deprecated_since_vers": [4, 226, 231, 233], "active_deprecations_target": [4, 226, 231, 233], "target": [4, 6, 30, 31, 32, 50, 90, 106, 143, 147, 148, 206, 209, 212, 215, 216, 226, 229, 230, 233, 273], "stacklevel": [4, 226, 231, 233], "line": [4, 6, 10, 11, 14, 16, 22, 31, 32, 41, 42, 46, 51, 60, 61, 62, 64, 65, 66, 67, 72, 75, 77, 78, 79, 86, 90, 93, 98, 101, 113, 115, 121, 143, 173, 177, 178, 180, 182, 183, 197, 200, 207, 209, 213, 217, 218, 226, 228, 229, 230, 233, 236, 238, 248, 251, 265], "visual": [4, 50, 90, 94, 100, 123, 196, 209], "confirm": [4, 10, 41, 90, 213], "look": [4, 6, 7, 10, 11, 16, 17, 18, 23, 31, 32, 41, 50, 55, 56, 58, 71, 86, 90, 108, 113, 115, 123, 147, 157, 158, 161, 176, 183, 187, 188, 192, 197, 199, 200, 204, 207, 209, 210, 213, 214, 228, 232, 236, 238, 246, 263, 268, 271, 272], "good": [4, 7, 16, 18, 32, 50, 51, 54, 62, 75, 86, 90, 115, 127, 130, 184, 187, 188, 197, 204, 206, 207, 209, 213, 235, 262, 266, 269], "top": [4, 6, 7, 10, 32, 49, 50, 51, 66, 67, 77, 80, 86, 93, 94, 112, 158, 165, 187, 197, 207, 213, 230, 231, 236, 251, 268], "relev": [4, 6, 7, 16, 32, 48, 63, 78, 79, 105, 108, 110, 115, 168, 177, 181, 187, 207, 213, 214, 223, 228, 249], "docstr": [4, 8, 10, 11, 18, 31, 32, 43, 50, 72, 75, 77, 86, 90, 95, 99, 101, 123, 128, 133, 150, 156, 157, 159, 179, 193, 200, 203, 204, 206, 209, 213, 214, 215, 216, 222, 223, 228, 231, 236, 238, 249, 252], "src": [4, 6, 7, 92, 213, 228, 233], "explan": [4, 7, 11, 16, 19, 24, 25, 26, 27, 28, 29, 31, 32, 35, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 56, 58, 62, 72, 73, 75, 77, 81, 86, 90, 100, 103, 105, 106, 107, 108, 110, 121, 132, 134, 137, 140, 142, 144, 146, 158, 163, 182, 183, 184, 186, 188, 192, 193, 195, 199, 200, 202, 203, 204, 205, 207, 209, 210, 213, 215, 217, 218, 222, 223, 228, 231, 233, 236, 270], "cross": [4, 7, 8, 50, 60, 66, 81, 86, 93, 94, 107, 121, 128, 130, 143, 173, 179, 180, 181, 210, 242, 245, 247, 248], "xyz": [4, 62, 92, 93, 173, 181, 242, 243, 246], "header": [4, 32, 229, 230], "why": [4, 10, 11, 16, 32, 50, 181, 188, 194, 204, 207, 211, 236, 266, 268, 269], "test": [4, 6, 7, 8, 11, 15, 17, 18, 27, 28, 30, 31, 32, 37, 41, 42, 49, 50, 51, 57, 60, 65, 75, 81, 83, 86, 90, 143, 152, 156, 157, 158, 166, 181, 187, 188, 189, 190, 192, 194, 205, 207, 210, 213, 214, 215, 216, 226, 229, 230, 231, 232, 233, 235, 236, 238, 252, 255, 260, 265, 267, 268], "warns_deprecated_sympi": [4, 226, 231, 233], "pr": [4, 10, 49, 188, 190, 191, 193, 216], "merg": [4, 32, 41, 42, 50, 171, 197, 205, 217, 228, 235, 236], "wiki": [4, 5, 6, 7, 8, 11, 16, 18, 21, 24, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 66, 67, 68, 77, 78, 79, 80, 81, 83, 86, 90, 98, 100, 103, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 167, 173, 175, 179, 183, 193, 200, 204, 205, 206, 210, 213, 216, 217, 230, 235, 242, 243, 247, 249, 251, 269, 270], "decor": [4, 18, 41, 50, 58, 226, 228, 233, 234, 237, 238, 260], "sympydeprecationwarn": [4, 10, 226, 228, 231, 233], "class": [4, 7, 8, 10, 11, 15, 16, 17, 18, 21, 24, 25, 26, 27, 28, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 73, 75, 77, 78, 79, 80, 83, 85, 92, 93, 96, 97, 98, 100, 105, 107, 108, 109, 110, 112, 113, 117, 118, 123, 124, 128, 130, 131, 132, 134, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 176, 177, 179, 184, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 207, 211, 213, 214, 215, 216, 217, 220, 222, 223, 224, 228, 229, 230, 231, 232, 233, 235, 236, 240, 245, 246, 248, 249, 251, 252, 253, 254, 257, 259, 260, 263, 265, 268, 273], "context": [4, 6, 7, 10, 16, 18, 25, 26, 27, 50, 52, 58, 77, 80, 113, 168, 187, 190, 192, 205, 226, 228, 233, 242], "manag": [4, 10, 22, 26, 27, 92, 143, 190, 209, 223, 226, 228, 233], "filter": [4, 10, 13, 50, 51, 75, 135, 193, 226, 228, 233, 235], "emit": [4, 197, 226, 233], "assert": [4, 31, 39, 40, 41, 42, 50, 60, 62, 92, 127, 205, 213, 214, 226, 233, 235], "separ": [4, 6, 10, 11, 14, 17, 18, 31, 38, 50, 51, 56, 58, 75, 77, 86, 101, 112, 127, 128, 131, 136, 160, 163, 172, 173, 183, 185, 188, 190, 193, 194, 197, 206, 209, 210, 214, 216, 221, 226, 228, 232, 236, 238, 242, 265], "block": [4, 6, 10, 32, 39, 41, 51, 81, 85, 86, 112, 113, 115, 118, 173, 181, 186, 210, 236, 245], "behavior1": 4, "behavior2": 4, "everyth": [4, 7, 11, 18, 32, 50, 52, 58, 77, 84, 102, 127, 159, 160, 183, 197, 268, 272], "ignore_warn": [4, 226, 231, 233, 236], "prevent": [4, 11, 32, 50, 87, 90, 104, 186, 188, 193, 197, 209, 217, 226, 233, 264], "trigger": [4, 18, 42, 92, 163, 226], "twice": [4, 11, 32, 50, 52, 64, 90, 173, 175, 180, 197, 232, 233, 242, 243, 263], "similar": [4, 5, 10, 11, 14, 16, 18, 42, 49, 50, 51, 54, 55, 56, 58, 61, 66, 67, 71, 80, 86, 91, 100, 113, 115, 117, 127, 128, 161, 178, 180, 181, 185, 187, 188, 190, 194, 204, 206, 207, 209, 213, 215, 218, 223, 226, 229, 232, 233, 242, 243, 245, 246, 250, 262, 267, 268, 269, 271, 273], "somewher": [4, 6, 7, 32], "sign": [4, 6, 7, 12, 24, 29, 32, 46, 50, 51, 55, 57, 60, 66, 75, 77, 86, 90, 93, 94, 100, 115, 136, 148, 173, 178, 180, 182, 190, 197, 202, 204, 209, 210, 215, 235, 248, 251, 266], "readi": [4, 16, 112, 187, 197, 213], "paragraph": [4, 6, 7, 18, 31], "metadata": [4, 31, 231, 233], "link": [4, 6, 7, 11, 20, 32, 51, 60, 66, 77, 101, 107, 116, 123, 124, 229, 232, 233, 271], "rememb": [4, 6, 11, 18, 80, 86, 101, 104, 130, 180, 181, 197, 209, 215, 218, 236, 268, 273], "shown": [4, 6, 10, 16, 17, 18, 39, 42, 49, 50, 54, 58, 75, 92, 94, 98, 100, 104, 108, 110, 116, 117, 118, 124, 125, 126, 128, 172, 173, 180, 181, 183, 186, 187, 188, 193, 197, 213, 217, 233, 235, 245, 246, 266], "plain": [4, 6, 16, 78, 177, 193, 197], "rst": [4, 6, 7, 33, 213, 228], "markdown": [4, 8], "markup": [4, 197], "clearli": [4, 6, 18, 90, 181, 187, 207, 269], "delin": 4, "newlin": [4, 86, 238], "charact": [4, 6, 7, 50, 51, 75, 78, 92, 143, 173, 177, 197, 213, 228, 230, 233, 238, 265, 267, 272], "full": [4, 6, 7, 8, 9, 10, 11, 16, 18, 21, 27, 30, 32, 41, 42, 50, 54, 58, 62, 63, 77, 83, 86, 92, 125, 126, 173, 187, 190, 191, 193, 197, 199, 209, 210, 267, 270, 273], "abc": [4, 6, 11, 13, 18, 24, 25, 26, 27, 28, 29, 30, 32, 39, 41, 43, 49, 50, 51, 52, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 73, 74, 75, 77, 78, 80, 81, 83, 86, 89, 91, 98, 100, 102, 134, 136, 138, 139, 144, 161, 163, 164, 184, 186, 188, 190, 192, 193, 194, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 222, 224, 229, 230, 231, 232, 233, 235, 236, 238, 242, 244, 245, 246, 251, 253, 265, 268, 272], "func": [4, 6, 15, 18, 26, 30, 32, 50, 52, 55, 58, 69, 71, 77, 90, 152, 173, 190, 193, 197, 198, 209, 213, 214, 215, 226, 231, 233, 235, 236, 238, 241], "larger": [4, 7, 18, 32, 41, 42, 49, 50, 51, 58, 75, 83, 86, 90, 117, 121, 188, 194, 198, 204, 209, 215, 230, 232, 265, 273], "easier": [4, 17, 50, 94, 113, 115, 180, 188, 192, 194, 207, 213, 216, 230, 236, 245, 267, 273, 274], "exactli": [4, 6, 7, 10, 11, 18, 28, 34, 41, 50, 53, 54, 86, 92, 107, 128, 182, 207, 209, 213, 216, 218, 232, 235, 236, 263, 265, 267, 272, 273], "direct": [4, 6, 7, 10, 15, 24, 26, 27, 31, 35, 38, 41, 46, 49, 50, 52, 54, 56, 59, 63, 64, 65, 66, 80, 81, 86, 93, 94, 96, 104, 105, 107, 115, 117, 121, 130, 149, 173, 178, 180, 181, 184, 186, 187, 190, 194, 204, 207, 223, 226, 235, 242, 246, 247, 250], "syntax": [4, 6, 7, 10, 11, 18, 25, 27, 42, 50, 77, 92, 113, 130, 160, 183, 187, 196, 197, 209, 215, 219, 238, 254, 263, 265, 267, 272, 274], "paramet": [4, 7, 10, 11, 24, 25, 27, 30, 32, 33, 41, 42, 46, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 73, 75, 77, 78, 80, 81, 83, 86, 87, 89, 90, 92, 93, 96, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 130, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 226, 228, 229, 230, 232, 233, 235, 236, 242, 243, 244, 245, 246, 251, 263, 268], "short": [4, 7, 11, 23, 33, 40, 42, 46, 50, 51, 52, 53, 56, 84, 90, 104, 149, 168, 172, 181, 184, 191, 218, 228, 238, 268, 272], "renam": [4, 10, 32, 77], "rest": [4, 10, 75, 78, 80, 84, 94, 102, 113, 117, 123, 168, 184, 187, 217, 235, 265, 266, 273], "left": [4, 7, 10, 14, 16, 18, 20, 30, 32, 33, 41, 42, 46, 50, 51, 52, 55, 56, 58, 66, 67, 73, 75, 77, 78, 80, 81, 86, 89, 90, 100, 105, 112, 128, 135, 142, 147, 151, 152, 155, 160, 173, 178, 182, 183, 184, 186, 193, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 209, 213, 214, 215, 216, 217, 228, 229, 230, 232, 235, 248, 263, 267, 269, 273], "imaginari": [4, 6, 11, 16, 18, 24, 27, 29, 50, 54, 56, 58, 81, 130, 187, 188, 193, 197, 198, 205, 209, 216], "simplify_thi": [4, 6, 231], "expr": [4, 6, 11, 16, 18, 26, 27, 29, 30, 32, 42, 49, 52, 54, 56, 58, 60, 72, 75, 77, 80, 83, 86, 91, 92, 100, 104, 106, 113, 127, 140, 144, 146, 148, 152, 155, 158, 160, 161, 163, 170, 173, 175, 177, 183, 185, 186, 187, 188, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 204, 206, 209, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 229, 230, 231, 233, 236, 242, 243, 244, 245, 246, 248, 253, 262, 263, 265, 267, 268, 272, 273, 274], "simplifi": [4, 6, 11, 14, 16, 17, 18, 25, 27, 29, 30, 49, 50, 52, 54, 55, 56, 58, 62, 67, 72, 75, 77, 80, 81, 82, 83, 86, 93, 100, 101, 106, 109, 116, 117, 120, 121, 122, 127, 135, 142, 147, 162, 163, 170, 173, 178, 184, 192, 194, 196, 198, 203, 204, 205, 206, 207, 210, 213, 214, 215, 216, 217, 231, 233, 236, 245, 247, 253, 254, 262, 264, 265, 267, 268, 269], "def": [4, 6, 7, 10, 11, 14, 16, 17, 18, 26, 27, 31, 50, 55, 62, 80, 86, 90, 92, 121, 158, 187, 193, 197, 206, 209, 216, 231, 233, 235, 236, 239, 262, 265, 268, 269, 273], "ref": [4, 41, 56, 86, 98, 130, 202, 217, 231, 269], "is_this_zero": [4, 233], "y": [4, 6, 10, 11, 13, 16, 17, 18, 20, 23, 25, 26, 27, 28, 29, 30, 32, 33, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 90, 91, 92, 93, 94, 96, 98, 100, 105, 106, 107, 110, 113, 115, 116, 117, 118, 120, 121, 122, 124, 128, 130, 131, 140, 141, 144, 147, 152, 158, 160, 161, 163, 164, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 229, 230, 233, 235, 236, 238, 242, 244, 245, 246, 247, 248, 250, 251, 262, 263, 265, 267, 268, 272, 273, 274], "0": [4, 6, 11, 14, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 105, 106, 107, 108, 110, 113, 115, 116, 117, 118, 120, 122, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 139, 142, 147, 148, 149, 152, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 231, 232, 233, 235, 236, 237, 242, 243, 244, 245, 246, 247, 248, 251, 262, 263, 265, 267, 268, 269, 272, 273, 274], "zero": [4, 11, 16, 17, 18, 24, 27, 29, 32, 40, 41, 42, 46, 49, 53, 54, 55, 56, 58, 60, 64, 65, 66, 75, 77, 79, 80, 81, 83, 85, 86, 89, 90, 92, 93, 99, 100, 107, 110, 113, 115, 118, 121, 125, 126, 130, 135, 157, 161, 163, 165, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 195, 197, 200, 204, 205, 207, 209, 210, 213, 214, 215, 216, 217, 218, 233, 235, 236, 245, 247, 248, 268, 274], "is_zero": [4, 16, 18, 65, 86, 184, 188, 193, 233, 269], "mail": [4, 10, 22, 197, 266], "summar": [4, 228, 273], "idea": [4, 16, 17, 18, 35, 41, 48, 50, 51, 62, 68, 75, 77, 90, 101, 113, 163, 167, 168, 184, 186, 187, 206, 209, 210, 213, 216, 230, 236, 273], "fit": [4, 31, 75, 86, 89, 90, 181, 197, 213, 238, 268], "put": [4, 6, 10, 11, 14, 18, 32, 46, 47, 50, 51, 52, 56, 80, 81, 86, 135, 140, 144, 159, 160, 193, 197, 198, 206, 207, 209, 213, 218, 224, 229, 269, 273], "word": [4, 7, 18, 28, 37, 46, 49, 50, 51, 56, 58, 80, 100, 113, 128, 184, 187, 192, 209, 210, 213, 215, 230, 242, 246, 265], "global": [4, 6, 10, 25, 26, 27, 30, 32, 33, 50, 62, 75, 92, 147, 153, 173, 175, 183, 184, 187, 188, 190, 197, 210, 213, 214, 217, 228, 230, 231, 236, 244], "uniqu": [4, 30, 31, 33, 41, 44, 46, 50, 51, 52, 55, 58, 65, 68, 73, 77, 79, 80, 86, 90, 107, 152, 161, 173, 181, 184, 185, 187, 190, 192, 198, 202, 209, 210, 213, 215, 216, 217, 221, 230, 235, 238, 245, 250, 265, 268], "across": [4, 7, 41, 48, 50, 61, 77, 94, 162, 163, 170, 183, 197, 232, 234, 235, 236, 271], "level": [4, 6, 7, 10, 11, 16, 17, 32, 41, 48, 50, 56, 58, 77, 80, 86, 90, 104, 117, 130, 158, 163, 168, 172, 175, 181, 183, 186, 187, 189, 195, 197, 206, 210, 216, 217, 221, 229, 230, 235, 268, 269, 271], "correspond": [4, 6, 7, 10, 14, 16, 17, 18, 30, 31, 32, 33, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 56, 60, 61, 63, 64, 65, 66, 73, 75, 79, 80, 81, 86, 89, 90, 93, 94, 100, 106, 108, 112, 113, 115, 117, 131, 135, 139, 153, 157, 158, 160, 164, 165, 168, 173, 176, 178, 182, 183, 185, 186, 187, 188, 190, 192, 193, 197, 203, 204, 207, 209, 210, 213, 214, 215, 216, 217, 219, 221, 222, 223, 230, 231, 232, 233, 235, 236, 238, 242, 243, 245, 246, 248, 250, 268, 274], "share": [4, 16, 18, 51, 90, 188, 192, 197, 217, 230], "__init__": [4, 6, 18, 50, 108, 192, 242, 243, 268], "func_nam": [4, 32, 56, 81, 238], "help": [4, 5, 6, 7, 12, 16, 23, 32, 40, 50, 58, 75, 77, 86, 90, 91, 98, 113, 130, 138, 148, 181, 183, 192, 194, 197, 206, 207, 210, 213, 214, 217, 228, 229, 230, 236, 258, 266, 269], "rais": [4, 10, 11, 16, 17, 18, 25, 27, 30, 32, 39, 42, 50, 51, 52, 54, 56, 59, 60, 63, 65, 66, 67, 75, 77, 81, 83, 86, 87, 89, 90, 98, 100, 137, 149, 178, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 199, 205, 209, 212, 213, 214, 215, 216, 217, 221, 223, 226, 228, 230, 233, 235, 236, 238, 239, 248, 269], "been": [4, 11, 16, 18, 30, 32, 33, 41, 42, 43, 46, 49, 50, 51, 62, 75, 77, 86, 90, 91, 92, 108, 113, 115, 123, 127, 128, 136, 148, 158, 160, 168, 172, 178, 179, 180, 181, 184, 187, 188, 192, 194, 195, 197, 199, 204, 207, 209, 214, 215, 216, 218, 227, 228, 230, 231, 233, 235, 238, 245, 248, 265, 266, 268, 269, 273], "simplfiy_thi": 4, "ident": [4, 11, 18, 28, 31, 33, 40, 41, 42, 48, 50, 51, 55, 56, 66, 73, 79, 81, 83, 86, 101, 103, 128, 147, 149, 152, 168, 184, 185, 186, 190, 191, 192, 193, 197, 206, 209, 213, 216, 221, 223, 228, 235, 236, 238, 246, 265, 269, 273], "much": [4, 6, 10, 14, 16, 17, 18, 31, 32, 35, 46, 54, 58, 72, 75, 77, 127, 171, 172, 180, 181, 182, 184, 187, 190, 193, 204, 207, 209, 213, 214, 215, 216, 230, 232, 265, 267, 273], "trivial": [4, 33, 41, 46, 49, 50, 51, 56, 65, 80, 83, 86, 90, 125, 163, 184, 185, 190, 193, 207, 210, 213, 216, 221], "furthermor": [4, 10, 18, 28, 50, 51, 80, 192, 206, 265, 267, 268], "particular": [4, 6, 10, 11, 16, 17, 20, 28, 33, 41, 50, 51, 54, 58, 61, 75, 77, 80, 83, 86, 90, 93, 96, 123, 147, 158, 185, 186, 187, 188, 190, 192, 193, 203, 205, 207, 209, 210, 213, 215, 216, 228, 230, 232, 269, 271, 273], "expr1": [4, 16, 100, 183, 215, 268], "expr2": [4, 16, 100, 183, 268], "dozen": [4, 18, 273], "search": [4, 6, 30, 41, 42, 46, 48, 50, 56, 86, 90, 113, 184, 192, 193, 206, 207, 209, 211, 214, 217, 229], "upcom": 4, "bot": 4, "push": [5, 75], "respect": [5, 6, 10, 11, 18, 25, 27, 28, 30, 31, 32, 33, 40, 41, 42, 45, 46, 48, 49, 50, 52, 56, 58, 60, 62, 66, 67, 72, 73, 75, 77, 80, 81, 83, 86, 90, 92, 93, 94, 96, 100, 105, 106, 107, 110, 117, 124, 126, 128, 130, 137, 152, 165, 166, 167, 172, 173, 176, 178, 181, 182, 183, 184, 187, 190, 192, 193, 194, 197, 199, 200, 203, 205, 209, 213, 214, 215, 216, 217, 218, 222, 223, 228, 230, 242, 243, 244, 245, 246, 247, 248, 249, 250, 263, 273], "handbook": [5, 6, 33, 40, 41, 48, 58, 90], "internet": 5, "practic": [5, 8, 14, 16, 39, 41, 51, 60, 127, 130, 183, 184, 185, 187, 192, 194, 221, 265, 266], "project": [5, 7, 10, 32, 63, 64, 65, 79, 86, 129, 229, 230, 242], "purpos": [5, 6, 7, 8, 10, 15, 16, 18, 31, 32, 41, 47, 50, 51, 77, 86, 113, 130, 168, 172, 181, 187, 190, 194, 196, 197, 204, 213, 216, 222, 232, 234, 236, 245, 246, 263, 273], "nn": 5, "brows": 5, "clone": [5, 22, 190], "download": [5, 7, 22, 31, 72, 191, 206, 213, 217, 242, 267], "origin": [5, 11, 14, 16, 22, 24, 41, 42, 43, 46, 49, 50, 51, 54, 55, 56, 58, 59, 61, 63, 65, 75, 77, 81, 86, 90, 98, 100, 101, 117, 127, 130, 155, 158, 168, 174, 178, 183, 184, 188, 192, 193, 196, 197, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 223, 228, 235, 236, 242, 244, 245, 246, 247, 248, 250, 251, 273], "77": [5, 39, 58, 86, 90, 196, 197, 230], "mib": 5, "remot": [5, 50], "collabor": 5, "upstream": 5, "fetch": 5, "branch": [5, 17, 30, 50, 55, 56, 57, 58, 76, 194, 207, 216, 268, 273], "checkout": [5, 31], "advantag": [5, 16, 18, 27, 30, 32, 50, 51, 77, 80, 86, 90, 97, 167, 186, 187, 194, 205, 210, 213, 216, 232, 265, 267, 269, 273], "isol": [5, 30, 56, 188, 192, 193, 194, 215, 230], "wide": [5, 16, 78, 86, 130, 177, 187, 193, 197, 217], "flake8": 5, "usernam": 5, "easiest": [5, 7, 10, 11, 50, 184, 187, 210, 236, 246, 262, 268, 273], "consult": [5, 33], "kwarg": [5, 11, 26, 27, 28, 32, 41, 42, 49, 50, 51, 52, 56, 58, 60, 61, 63, 64, 65, 66, 67, 72, 75, 77, 81, 82, 83, 84, 86, 88, 89, 98, 100, 106, 108, 117, 132, 141, 143, 147, 148, 152, 154, 156, 157, 159, 160, 161, 173, 176, 177, 183, 186, 188, 193, 197, 199, 203, 204, 205, 209, 213, 214, 215, 217, 218, 223, 228, 229, 231, 238, 246], "test_bas": [5, 228], "similari": 5, "qualiti": [5, 91, 197], "code_qu": 5, "liter": [6, 11, 18, 32, 40, 50, 78, 80, 92, 163, 170, 209], "occur": [6, 10, 11, 41, 42, 50, 54, 58, 67, 75, 81, 92, 104, 127, 172, 173, 180, 192, 200, 209, 214, 215, 218, 228, 235, 268], "definit": [6, 10, 11, 17, 24, 27, 32, 33, 41, 42, 47, 49, 50, 52, 53, 55, 56, 58, 63, 66, 70, 73, 75, 77, 81, 82, 83, 86, 90, 92, 115, 120, 121, 128, 165, 168, 171, 173, 180, 181, 184, 185, 188, 193, 194, 197, 204, 217, 218, 229, 230, 231, 235, 236, 242, 245, 246, 247, 248, 263, 273], "__doc__": [6, 11], "attribut": [6, 13, 16, 18, 26, 27, 31, 32, 41, 42, 50, 58, 59, 60, 63, 64, 65, 66, 83, 86, 92, 94, 100, 105, 107, 108, 109, 110, 112, 120, 128, 131, 152, 157, 161, 168, 172, 173, 178, 181, 183, 184, 187, 188, 192, 197, 205, 209, 210, 222, 223, 229, 231, 235, 236, 239, 245, 268], "fdiff": [6, 18, 32, 50, 56, 57, 58], "self": [6, 16, 18, 24, 26, 27, 31, 32, 41, 42, 47, 49, 50, 52, 56, 59, 60, 61, 63, 64, 65, 66, 77, 81, 86, 90, 105, 115, 158, 163, 173, 175, 176, 184, 186, 188, 190, 192, 193, 197, 199, 204, 205, 223, 242], "argindex": [6, 18, 32, 50, 56, 57, 58], "heavisid": [6, 57, 75, 77, 197], "diff": [6, 10, 14, 18, 30, 32, 55, 56, 57, 58, 67, 72, 83, 86, 104, 106, 116, 117, 130, 161, 173, 175, 177, 178, 181, 183, 188, 193, 196, 197, 207, 213, 214, 215, 218, 219, 224, 245, 248, 263, 267, 274], "diracdelta": [6, 57, 77, 158, 163, 197], "what": [6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 20, 21, 30, 32, 42, 44, 49, 50, 51, 52, 56, 57, 60, 61, 65, 75, 77, 79, 86, 90, 92, 105, 108, 110, 113, 117, 124, 130, 162, 163, 166, 168, 173, 180, 181, 188, 189, 190, 193, 196, 197, 198, 204, 206, 207, 209, 210, 211, 213, 215, 222, 226, 228, 230, 231, 236, 245, 246, 251, 263, 265, 266, 268, 272, 273], "scope": [6, 32, 123, 127, 226, 273], "high": [6, 7, 11, 14, 16, 32, 50, 54, 55, 78, 90, 130, 177, 187, 192, 195, 197, 210, 215, 258, 269], "od": [6, 18, 73, 108, 112, 123, 130, 211, 214, 274], "seen": [6, 14, 16, 24, 42, 75, 77, 92, 96, 112, 124, 168, 180, 184, 187, 190, 193, 213, 215, 216, 233, 235, 245, 265, 268, 272], "hand": [6, 10, 14, 16, 18, 31, 32, 42, 43, 50, 56, 58, 77, 80, 81, 86, 90, 93, 108, 112, 113, 127, 131, 135, 152, 155, 173, 178, 181, 182, 184, 187, 188, 190, 192, 195, 207, 216, 228, 230, 232, 236, 239, 248, 250, 267], "less": [6, 7, 10, 14, 28, 32, 33, 41, 42, 49, 50, 51, 54, 55, 56, 58, 64, 65, 66, 81, 86, 90, 98, 100, 113, 115, 163, 187, 190, 192, 193, 206, 207, 209, 210, 213, 215, 216, 217, 228, 230], "understand": [6, 11, 16, 17, 18, 50, 51, 75, 113, 123, 125, 126, 130, 168, 180, 183, 186, 187, 192, 207, 210, 229, 236, 264, 265, 272, 273], "clear": [6, 10, 16, 26, 40, 50, 75, 79, 105, 180, 181, 183, 188, 190, 193, 207, 215, 216, 223, 228, 232, 250, 265], "begin": [6, 10, 11, 16, 18, 20, 50, 51, 55, 56, 58, 75, 81, 83, 86, 90, 117, 125, 126, 127, 128, 159, 168, 173, 181, 182, 186, 197, 207, 210, 213, 214, 216, 217, 228, 238, 265, 267, 269, 273], "convers": [6, 7, 10, 16, 32, 50, 70, 92, 127, 167, 185, 186, 187, 188, 190, 192, 194, 197, 210, 222, 229, 242], "aim": [6, 7, 68, 75, 168, 184, 207, 213, 216, 266, 267], "comment": [6, 7, 32, 41, 113, 115, 194, 197, 230, 235], "distract": 6, "input": [6, 7, 10, 11, 18, 19, 24, 30, 33, 46, 50, 51, 53, 54, 55, 56, 64, 77, 79, 80, 86, 90, 92, 97, 98, 100, 104, 109, 112, 113, 115, 116, 117, 127, 130, 131, 136, 159, 173, 175, 176, 187, 188, 190, 193, 194, 195, 196, 197, 198, 205, 209, 210, 211, 213, 215, 217, 219, 229, 230, 232, 233, 235, 236, 238, 262, 268, 269, 273], "consum": [6, 32, 58, 109, 127], "human": [6, 75, 165, 193, 197], "beings": 6, "english": [6, 51], "likewis": [6, 16, 31, 116, 117], "reader": [6, 7, 18, 31, 33, 128, 184, 232, 266, 271], "machineri": [6, 50, 192, 236], "mind": [6, 11, 13, 16, 50, 86, 128, 183, 204, 205, 250, 268], "platform": [6, 50, 163, 181, 213, 229], "anyon": [6, 7, 10, 21, 193, 197, 261, 271, 272], "restructuredtext": [6, 7], "extend": [6, 7, 16, 18, 27, 32, 41, 42, 50, 51, 55, 62, 75, 77, 86, 90, 130, 171, 177, 183, 185, 188, 190, 192, 193, 194, 197, 204, 206, 210, 212, 213, 216, 217, 218, 230, 232, 265, 267], "concis": [6, 130], "quick": [6, 7, 18, 50, 86, 90, 209, 215, 236], "depth": [6, 7, 9, 11, 12, 21, 41, 50, 115, 183, 184, 197, 259], "tripl": [6, 67, 86, 181, 182, 184, 192, 238], "quot": [6, 11, 32, 80, 197, 238], "raw": [6, 7, 32, 50, 51, 56, 91, 92, 157, 162, 187, 188, 193, 205, 209, 272], "backslash": [6, 50, 197], "blank": [6, 92, 109, 183], "close": [6, 32, 49, 50, 54, 55, 58, 66, 68, 75, 77, 79, 100, 116, 183, 184, 185, 191, 192, 205, 215, 216, 230, 263, 273], "rare": [6, 18, 50, 213, 217, 226, 265], "underlin": [6, 7], "numpydoc": [6, 7], "build": [6, 7, 8, 13, 26, 27, 32, 50, 52, 58, 80, 130, 157, 168, 173, 181, 184, 189, 192, 193, 194, 204, 217, 245, 262, 265, 268], "consist": [6, 7, 10, 14, 16, 31, 41, 42, 46, 50, 51, 55, 56, 58, 60, 66, 68, 75, 80, 93, 96, 124, 128, 137, 157, 163, 168, 171, 176, 183, 185, 187, 188, 190, 205, 213, 215, 216, 217, 221, 226, 229, 230, 235, 266, 268], "review": [6, 7, 129], "head": [6, 13, 31, 50, 217, 223, 238, 268], "plural": [6, 7], "length": [6, 10, 32, 34, 40, 41, 42, 44, 48, 50, 51, 53, 55, 56, 58, 59, 63, 65, 66, 67, 80, 81, 86, 89, 90, 93, 94, 104, 108, 112, 116, 117, 118, 128, 132, 136, 160, 165, 166, 168, 173, 176, 181, 192, 193, 197, 203, 207, 209, 213, 215, 217, 228, 229, 235, 238, 242, 243, 251], "equal": [6, 10, 12, 16, 17, 18, 24, 28, 31, 32, 33, 39, 40, 41, 42, 46, 48, 49, 51, 52, 54, 55, 56, 58, 63, 64, 65, 66, 67, 69, 75, 80, 81, 83, 86, 90, 93, 100, 101, 105, 108, 110, 115, 125, 126, 147, 148, 163, 168, 173, 176, 181, 184, 185, 186, 187, 188, 190, 192, 193, 195, 197, 203, 205, 207, 210, 213, 214, 215, 216, 217, 223, 228, 229, 230, 235, 238, 242, 246, 251, 263, 266, 274], "clutter": 6, "harder": [6, 10, 16, 50, 75, 187, 228], "minim": [6, 16, 18, 30, 41, 42, 46, 49, 50, 51, 75, 77, 80, 90, 105, 117, 132, 186, 187, 188, 189, 190, 193, 196, 206, 209, 210, 215, 235, 239], "amount": [6, 31, 50, 51, 62, 123, 173, 178, 181, 190, 200, 228, 242, 243], "deprec": [6, 8, 12, 25, 42, 50, 63, 77, 81, 103, 127, 193, 197, 217, 223, 226, 227, 231, 233, 236, 240], "notifi": 6, "awai": [6, 31, 33, 51, 93, 94, 115, 192, 197], "encourag": [6, 10, 31, 125, 126, 192], "label": [6, 31, 32, 44, 50, 60, 73, 77, 96, 136, 143, 147, 152, 161, 163, 183, 197, 198, 200, 209, 222, 223, 272], "elabor": [6, 19, 178, 248], "suffic": [6, 185], "clarifi": 6, "complic": [6, 11, 16, 18, 32, 41, 49, 51, 52, 54, 55, 56, 58, 75, 77, 83, 123, 125, 163, 181, 187, 190, 194, 196, 207, 209, 216, 217, 221, 222, 230, 232, 236, 238, 263, 265, 268, 269], "demonstr": [6, 7, 11, 16, 18, 41, 42, 50, 77, 90, 105, 107, 113, 117, 118, 127, 184, 187, 247, 273], "api": [6, 7, 10, 16, 19, 32, 50, 62, 70, 76, 91, 92, 99, 130, 159, 172, 183, 190, 210, 211, 212, 234, 236, 239, 245, 246, 256, 258, 266, 267, 270], "simpl": [6, 11, 14, 16, 18, 22, 31, 32, 41, 49, 50, 54, 58, 62, 66, 68, 75, 77, 79, 86, 90, 91, 93, 94, 100, 101, 104, 107, 108, 110, 112, 115, 117, 118, 120, 122, 123, 127, 131, 137, 151, 152, 160, 161, 162, 173, 180, 181, 187, 188, 189, 193, 194, 197, 199, 204, 206, 207, 209, 210, 213, 216, 223, 229, 230, 235, 239, 241, 242, 243, 244, 248, 262, 265, 268, 269, 273], "too": [6, 11, 18, 41, 42, 50, 56, 58, 60, 63, 65, 75, 80, 89, 90, 91, 125, 132, 204, 205, 209, 210, 213, 215, 216, 217, 228, 229, 244, 245], "thought": [6, 50, 204, 213, 265, 268], "perfect": [6, 18, 41, 50, 90, 210, 216, 267, 268], "tell": [6, 7, 16, 17, 32, 42, 51, 54, 58, 81, 92, 112, 168, 187, 192, 196, 204, 207, 213, 229, 265], "think": [6, 10, 16, 17, 18, 22, 30, 41, 115, 168, 232, 236, 265, 273], "test_": [6, 228], "coverage_doctest": 6, "coverag": 6, "6868680200532414": 6, "dsolv": [6, 214, 215, 263, 267, 274], "co": [6, 11, 18, 20, 24, 30, 32, 49, 50, 52, 54, 55, 57, 58, 59, 60, 63, 64, 66, 68, 72, 73, 74, 75, 77, 81, 86, 90, 92, 105, 106, 107, 113, 115, 116, 118, 120, 121, 122, 127, 130, 135, 137, 173, 175, 176, 178, 180, 181, 182, 183, 187, 190, 193, 194, 196, 197, 198, 199, 200, 204, 205, 206, 207, 209, 213, 215, 216, 217, 218, 224, 236, 242, 243, 244, 245, 246, 251, 262, 263, 265, 267, 273, 274], "sin": [6, 7, 10, 11, 16, 18, 20, 22, 24, 30, 32, 49, 50, 52, 54, 55, 57, 58, 59, 60, 64, 68, 69, 72, 73, 74, 75, 77, 78, 81, 86, 91, 92, 102, 105, 106, 107, 112, 113, 115, 116, 118, 120, 121, 122, 127, 130, 135, 137, 161, 173, 175, 176, 178, 180, 181, 182, 183, 185, 187, 193, 194, 196, 197, 198, 199, 200, 204, 205, 206, 207, 209, 212, 213, 215, 216, 218, 224, 230, 236, 242, 243, 244, 245, 246, 251, 262, 263, 265, 267, 268, 273, 274], "hint": [6, 18, 31, 34, 41, 50, 53, 56, 77, 81, 86, 90, 100, 130, 140, 144, 160, 162, 163, 173, 193, 204, 207, 211, 215, 273], "1st_exact": 6, "eq": [6, 11, 16, 18, 28, 30, 32, 56, 60, 63, 67, 75, 80, 166, 183, 184, 188, 193, 195, 197, 199, 203, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 229, 230, 236, 242, 265, 267, 274], "c1": [6, 14, 51, 60, 67, 81, 83, 149, 163, 205, 210, 213, 215, 247, 274], "comma": [6, 7, 11, 32, 50, 197, 236, 265], "readabl": [6, 23, 31, 78, 104, 193, 196, 197, 204, 206, 239], "accept": [6, 18, 31, 32, 41, 50, 56, 64, 77, 80, 81, 83, 86, 89, 92, 113, 157, 173, 177, 183, 192, 193, 196, 197, 198, 205, 207, 209, 215, 229, 236, 242, 243, 246, 269], "rang": [6, 10, 14, 18, 30, 32, 39, 40, 41, 42, 44, 46, 50, 51, 55, 56, 58, 64, 81, 86, 90, 94, 98, 102, 132, 163, 183, 187, 188, 189, 190, 192, 193, 194, 199, 200, 203, 206, 209, 213, 216, 217, 218, 222, 228, 235, 262, 273], "30": [6, 24, 30, 32, 36, 50, 51, 53, 54, 55, 58, 64, 66, 77, 81, 86, 87, 90, 93, 94, 113, 136, 186, 188, 192, 193, 197, 203, 206, 209, 217, 218, 273], "7": [6, 11, 12, 16, 18, 20, 24, 26, 27, 30, 32, 34, 36, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 63, 64, 65, 66, 72, 75, 77, 80, 81, 83, 84, 86, 90, 92, 93, 95, 98, 100, 115, 122, 125, 126, 130, 163, 168, 170, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 222, 223, 228, 229, 232, 235, 236, 242, 251, 263, 268, 269, 272], "8": [6, 12, 14, 22, 24, 25, 30, 32, 34, 41, 42, 43, 46, 48, 50, 51, 53, 54, 55, 56, 58, 60, 63, 64, 66, 72, 75, 77, 79, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 98, 100, 102, 115, 130, 135, 136, 147, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 199, 200, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 222, 228, 230, 232, 235, 242, 244, 245, 251, 262, 263, 267, 269, 273], "9": [6, 12, 22, 30, 32, 38, 40, 41, 42, 46, 48, 49, 50, 51, 53, 55, 56, 58, 59, 60, 63, 64, 66, 72, 75, 77, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 98, 100, 101, 102, 103, 113, 115, 118, 130, 132, 136, 168, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 203, 205, 206, 207, 209, 210, 213, 215, 216, 217, 218, 228, 232, 235, 242, 244, 267, 269, 274], "11": [6, 12, 16, 26, 27, 32, 41, 44, 46, 48, 50, 51, 53, 55, 58, 62, 63, 64, 66, 67, 75, 77, 80, 81, 82, 86, 90, 92, 95, 100, 113, 115, 128, 147, 157, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 204, 206, 210, 213, 215, 216, 217, 218, 229, 235, 245], "12": [6, 11, 12, 18, 24, 30, 31, 32, 36, 38, 39, 41, 42, 43, 46, 48, 49, 50, 51, 53, 55, 56, 58, 60, 63, 64, 66, 75, 77, 81, 86, 87, 90, 93, 94, 98, 100, 102, 115, 116, 128, 160, 173, 182, 185, 186, 187, 190, 192, 193, 194, 196, 197, 203, 205, 206, 210, 212, 213, 217, 218, 229, 232, 235, 244, 269, 273], "13": [6, 24, 32, 39, 41, 46, 50, 51, 53, 55, 58, 62, 63, 64, 65, 75, 80, 86, 90, 94, 98, 100, 113, 128, 183, 190, 192, 193, 194, 196, 197, 203, 210, 212, 214, 215, 217, 218, 228, 229, 251], "14": [6, 32, 39, 41, 45, 46, 48, 50, 51, 55, 56, 58, 75, 86, 87, 90, 91, 93, 98, 113, 182, 183, 186, 188, 190, 191, 192, 193, 194, 196, 197, 206, 209, 210, 213, 215, 217, 218, 263], "15": [6, 11, 18, 30, 36, 39, 41, 46, 48, 50, 51, 53, 54, 55, 58, 60, 63, 64, 66, 67, 75, 77, 80, 81, 82, 86, 87, 90, 93, 136, 182, 183, 185, 186, 187, 188, 192, 193, 194, 196, 197, 199, 203, 204, 206, 209, 210, 214, 215, 216, 217, 218, 235, 262, 263, 268, 269], "16": [6, 24, 30, 32, 41, 42, 45, 49, 50, 51, 55, 58, 59, 60, 64, 75, 77, 80, 86, 87, 89, 90, 94, 178, 185, 186, 187, 190, 191, 192, 193, 196, 197, 203, 205, 206, 207, 210, 217, 218, 235, 242, 250, 269], "17": [6, 10, 39, 41, 42, 50, 51, 54, 55, 56, 60, 63, 66, 75, 86, 90, 100, 187, 188, 192, 193, 196, 197, 204, 206, 210, 213, 218, 232, 236, 267], "18": [6, 41, 42, 53, 55, 58, 60, 63, 66, 82, 86, 90, 94, 98, 100, 102, 174, 182, 190, 191, 196, 197, 205, 206, 210, 213, 215, 216, 217, 218, 244], "19": [6, 41, 50, 53, 58, 60, 63, 66, 86, 90, 92, 93, 188, 192, 193, 196, 206, 210, 212, 215, 229, 262], "20": [6, 11, 28, 32, 39, 41, 42, 49, 50, 51, 54, 55, 58, 66, 67, 77, 86, 90, 93, 94, 100, 110, 168, 170, 183, 187, 191, 192, 193, 194, 196, 197, 203, 204, 205, 206, 209, 210, 213, 216, 217, 242, 263], "21": [6, 10, 36, 41, 50, 53, 55, 63, 64, 72, 86, 90, 92, 93, 128, 183, 188, 190, 191, 192, 194, 196, 197, 203, 213, 215, 217, 218, 273], "22": [6, 11, 41, 50, 53, 54, 55, 58, 86, 90, 93, 94, 128, 191, 196, 209, 210, 215, 217], "23": [6, 30, 41, 42, 50, 53, 56, 58, 64, 66, 86, 90, 93, 128, 188, 193, 196, 203, 210, 235], "24": [6, 24, 30, 38, 42, 43, 50, 53, 55, 58, 64, 72, 77, 86, 90, 93, 94, 98, 100, 160, 170, 182, 188, 190, 192, 193, 194, 196, 199, 204, 210, 213, 217, 232, 235, 251, 263, 269], "25": [6, 11, 41, 42, 51, 53, 55, 58, 60, 63, 65, 82, 86, 89, 90, 93, 94, 100, 110, 176, 182, 190, 192, 193, 196, 197, 203, 204, 206, 210, 212, 213, 214, 217, 229], "26": [6, 39, 50, 51, 53, 62, 86, 90, 93, 94, 193, 210, 217], "27": [6, 32, 33, 41, 45, 55, 60, 86, 90, 93, 94, 100, 102, 190, 215], "28": [6, 32, 41, 49, 53, 54, 58, 86, 90, 115, 206, 210, 213, 268], "29": [6, 24, 39, 41, 42, 50, 51, 53, 55, 56, 63, 64, 86, 90, 100, 152, 187, 205, 217], "assumpt": [6, 11, 15, 17, 19, 25, 26, 28, 29, 31, 32, 41, 42, 44, 49, 52, 54, 56, 57, 77, 80, 81, 86, 87, 100, 104, 130, 170, 175, 186, 197, 205, 206, 209, 213, 215, 216, 222, 230, 235, 252, 253, 273], "parenthes": [6, 11, 50, 92, 104, 151, 152, 181, 197, 221, 238], "type": [6, 8, 10, 11, 13, 16, 17, 18, 26, 27, 30, 41, 42, 46, 49, 50, 51, 52, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 68, 75, 77, 78, 79, 80, 81, 82, 83, 86, 90, 91, 92, 93, 94, 96, 98, 100, 104, 108, 113, 124, 130, 135, 149, 157, 158, 159, 161, 173, 176, 177, 179, 181, 183, 184, 187, 188, 191, 192, 193, 194, 195, 197, 198, 199, 205, 206, 207, 209, 210, 211, 212, 215, 221, 222, 223, 226, 228, 229, 230, 235, 236, 238, 245, 248, 251, 254, 259, 263, 265, 267, 268, 269, 272, 273, 274], "enclos": [6, 60, 61, 66, 89, 101, 197, 207, 236], "colon": [6, 50], "preced": [6, 7, 11, 33, 42, 50, 51, 54, 55, 143, 209, 236], "space": [6, 11, 18, 30, 31, 32, 50, 51, 52, 59, 60, 61, 63, 65, 66, 79, 86, 92, 93, 102, 108, 109, 110, 132, 134, 137, 147, 150, 152, 158, 160, 167, 173, 176, 178, 181, 182, 183, 184, 192, 208, 216, 217, 228, 232, 242, 243, 245, 246, 247, 248, 250, 251, 265, 268], "omit": [6, 10, 16, 18, 32, 42, 49, 50, 51, 75, 77, 80, 86, 165, 197, 198, 205, 207, 215, 221, 230, 235, 263], "absent": [6, 34], "specifi": [6, 7, 10, 16, 18, 31, 32, 33, 45, 49, 50, 51, 52, 53, 56, 58, 59, 63, 66, 75, 77, 79, 80, 81, 83, 86, 90, 92, 93, 94, 100, 105, 108, 112, 113, 115, 117, 118, 120, 123, 125, 126, 127, 128, 130, 131, 147, 152, 157, 158, 160, 161, 166, 172, 173, 175, 176, 178, 180, 181, 184, 185, 186, 187, 188, 190, 192, 193, 194, 197, 199, 200, 203, 204, 205, 207, 209, 213, 214, 215, 216, 217, 218, 222, 223, 224, 228, 229, 230, 235, 236, 242, 243, 244, 247, 250, 259, 269], "displai": [6, 7, 11, 16, 17, 50, 51, 54, 75, 79, 93, 94, 98, 134, 167, 173, 176, 177, 183, 187, 188, 197, 205, 221, 228], "signatur": [6, 18, 26, 27, 42, 50, 86, 230, 231, 235, 236], "brace": [6, 55, 113, 197], "appear": [6, 7, 11, 31, 32, 34, 39, 41, 50, 51, 55, 56, 59, 60, 63, 66, 69, 73, 75, 77, 81, 86, 90, 92, 113, 117, 147, 163, 165, 168, 183, 185, 187, 190, 192, 193, 197, 206, 209, 213, 214, 215, 217, 221, 223, 228, 235, 236, 242, 246], "shape": [6, 10, 32, 66, 81, 83, 86, 88, 89, 98, 100, 107, 112, 113, 173, 183, 184, 186, 197, 200, 207, 217, 218, 219, 221, 222, 223, 236, 272], "combin": [6, 10, 11, 18, 31, 50, 54, 55, 58, 70, 77, 79, 80, 81, 90, 94, 100, 112, 116, 123, 131, 142, 149, 157, 158, 160, 161, 162, 166, 168, 169, 184, 185, 187, 188, 190, 192, 193, 197, 198, 206, 207, 209, 210, 213, 215, 217, 218, 232, 235, 262, 265, 268], "incorrectli": [6, 10, 18, 59, 60, 86, 185], "opt_cs": 6, "canon": [6, 16, 32, 34, 39, 41, 42, 46, 50, 51, 52, 56, 66, 75, 80, 86, 90, 92, 108, 140, 144, 163, 165, 168, 170, 190, 198, 205, 206, 209, 215, 217, 223, 235, 273], "find": [6, 11, 14, 15, 18, 20, 24, 27, 30, 32, 33, 41, 44, 45, 46, 49, 50, 54, 56, 58, 60, 62, 63, 64, 67, 72, 75, 77, 79, 86, 90, 92, 106, 114, 121, 128, 130, 132, 148, 155, 157, 158, 159, 163, 166, 168, 180, 183, 184, 185, 186, 187, 188, 189, 190, 194, 196, 197, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 217, 223, 232, 235, 236, 238, 242, 251, 263, 265, 267, 269, 274], "optim": [6, 32, 34, 41, 54, 90, 104, 130, 143, 147, 193, 197, 198, 206, 209, 217, 229], "mul": [6, 10, 11, 13, 18, 24, 75, 77, 81, 90, 143, 147, 157, 158, 186, 187, 188, 192, 193, 197, 198, 199, 206, 209, 213, 214, 215, 216, 221, 253, 268], "pow": [6, 10, 11, 24, 29, 32, 51, 56, 75, 81, 90, 162, 186, 187, 188, 193, 197, 199, 206, 209, 215, 216, 268, 272], "neg": [6, 11, 16, 17, 27, 29, 32, 33, 45, 49, 50, 55, 56, 58, 60, 62, 63, 66, 75, 77, 79, 80, 81, 86, 89, 90, 93, 94, 97, 98, 100, 163, 173, 185, 186, 188, 190, 192, 193, 194, 197, 203, 205, 206, 207, 209, 210, 213, 215, 216, 217], "coeffici": [6, 14, 16, 27, 30, 32, 49, 50, 52, 54, 55, 58, 63, 68, 69, 72, 73, 75, 79, 80, 83, 86, 87, 90, 101, 108, 113, 136, 150, 160, 168, 182, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 199, 200, 203, 204, 207, 209, 210, 212, 213, 214, 215, 216, 217, 223, 229, 245, 248, 268, 273], "none": [6, 7, 10, 16, 17, 18, 24, 25, 26, 27, 28, 30, 31, 32, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 77, 78, 80, 81, 83, 86, 87, 90, 91, 92, 93, 100, 105, 106, 107, 108, 109, 112, 113, 132, 134, 136, 137, 143, 148, 153, 158, 160, 163, 165, 169, 170, 171, 173, 175, 176, 177, 181, 182, 183, 184, 186, 187, 188, 190, 192, 193, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 241, 242, 244, 269, 273, 274], "process": [6, 7, 10, 11, 16, 29, 32, 41, 42, 48, 50, 51, 56, 58, 66, 75, 77, 86, 90, 100, 109, 113, 115, 121, 124, 125, 127, 130, 183, 184, 190, 197, 198, 205, 209, 213, 215, 228, 232, 273], "concern": [6, 16, 30, 33, 49, 54, 90, 178, 183, 185, 186, 187, 196, 197, 198, 209, 210, 215, 229, 230, 232, 238], "item": [6, 7, 11, 32, 39, 40, 42, 50, 55, 61, 67, 81, 86, 90, 108, 183, 187, 190, 193, 197, 205, 213, 214, 217, 228, 229, 232, 235, 236, 273], "fragment": [6, 51], "desir": [6, 10, 11, 14, 18, 23, 41, 42, 50, 51, 53, 54, 55, 56, 60, 64, 66, 80, 81, 86, 89, 90, 91, 108, 109, 110, 112, 123, 127, 148, 173, 180, 181, 186, 188, 190, 192, 193, 194, 197, 198, 200, 205, 209, 213, 215, 216, 229, 231, 232, 235, 248, 262], "span": [6, 10, 79, 86, 93, 94, 192, 197, 233, 269], "subsequ": [6, 11, 50, 56, 173, 188, 190, 193, 232, 235, 245, 248], "indent": [6, 11, 238], "embed": [6, 7, 30, 42, 50, 78, 192], "hyperlink": 6, "classnam": 6, "erf": [6, 58, 75, 77, 197, 207, 217], "gauss": [6, 58, 77, 86, 132, 185, 192, 195, 215, 216], "erfc": [6, 58, 75, 197, 217], "complementari": [6, 58, 100], "erfi": [6, 58, 75, 197], "erf2": [6, 58, 197], "erfinv": [6, 58, 197, 217], "invers": [6, 24, 41, 42, 50, 51, 52, 57, 58, 76, 77, 83, 86, 90, 107, 108, 152, 156, 157, 160, 165, 168, 184, 185, 186, 188, 190, 193, 194, 197, 199, 207, 209, 213, 215, 216, 217, 235, 269, 273], "erfcinv": [6, 58, 197], "erf2inv": [6, 58, 197], "besselj": [6, 58, 72, 197, 209, 213, 267], "besselbas": [6, 58], "bessel": [6, 7, 56, 57, 68, 77, 193, 209, 213, 217, 267], "kind": [6, 7, 10, 15, 16, 17, 18, 31, 32, 52, 55, 58, 70, 77, 81, 93, 96, 108, 113, 126, 178, 185, 187, 188, 193, 198, 199, 205, 213, 214, 217, 235, 248, 250, 253, 263, 273], "bess": [6, 58, 197, 209, 213, 217], "besselk": [6, 58, 197, 217], "cite": [6, 19], "citat": [6, 49, 191], "meant": [6, 7, 10, 11, 16, 18, 32, 50, 58, 63, 77, 90, 113, 130, 183, 188, 205, 209, 214, 246, 268], "augment": [6, 32, 86, 108, 125, 126, 130, 195, 215, 216, 233, 236, 274], "freeli": [6, 23, 84, 184], "wikipedia": [6, 16, 18, 24, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 66, 67, 68, 77, 79, 80, 81, 83, 86, 90, 98, 100, 103, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 166, 173, 175, 179, 193, 200, 204, 205, 206, 213, 216, 217, 230, 235, 242, 243, 247, 249, 251, 267, 269, 271], "wolfram": [6, 28, 43, 44, 50, 51, 53, 55, 56, 58, 60, 66, 77, 86, 90, 92, 191, 197, 199, 200, 202, 205, 210, 217, 235, 269], "mathworld": [6, 28, 43, 44, 50, 51, 53, 55, 56, 58, 60, 66, 77, 86, 90, 191, 200, 205, 210, 217, 235], "nist": [6, 55, 56, 58, 168], "digit": [6, 11, 32, 50, 51, 53, 54, 60, 77, 80, 90, 123, 173, 187, 193, 204, 209, 235, 262], "dlmf": [6, 55, 56, 58], "suffer": 6, "rot": [6, 66, 160], "publish": [6, 75, 207], "identifi": [6, 10, 16, 17, 30, 43, 50, 53, 54, 77, 86, 96, 125, 151, 152, 184, 187, 188, 198, 206, 209, 213, 214, 215, 216, 217, 236, 239], "clickabl": 6, "kozen89": [6, 190, 191], "kozen": [6, 191], "landau": [6, 191, 263], "polynomi": [6, 7, 14, 16, 20, 28, 41, 49, 50, 51, 54, 55, 57, 68, 69, 70, 71, 73, 77, 80, 81, 83, 86, 90, 94, 100, 128, 130, 184, 186, 191, 195, 199, 204, 206, 207, 209, 210, 211, 212, 213, 216, 228, 252, 259, 264, 269, 274], "decomposit": [6, 41, 48, 82, 83, 86, 186, 188, 189, 190, 191, 199, 273], "1989": [6, 191, 215], "pp": [6, 41, 42, 48, 49, 50, 51, 55, 56, 77, 81, 86, 117, 127, 182, 185, 190, 191, 213, 214, 217], "445": [6, 191], "456": [6, 50, 191], "abramowitz": [6, 58], "milton": [6, 58], "stegun": [6, 58], "iren": [6, 58], "chapter": [6, 41, 58, 90, 113, 191], "formula": [6, 14, 30, 44, 49, 50, 54, 55, 58, 63, 76, 80, 86, 90, 182, 184, 190, 193, 197, 199, 203, 206, 209, 210, 213, 267, 273], "tabl": [6, 16, 33, 41, 50, 55, 58, 71, 76, 77, 86, 90, 107, 130, 182, 192, 219, 255], "ed": [6, 42, 58, 86, 191, 215, 217], "1965": [6, 58, 81], "luke": [6, 58, 75, 207], "l": [6, 10, 11, 30, 31, 32, 33, 39, 41, 42, 49, 51, 58, 61, 62, 63, 64, 65, 67, 68, 73, 75, 77, 79, 82, 83, 86, 90, 93, 94, 100, 102, 107, 108, 110, 112, 113, 116, 117, 118, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 135, 161, 164, 165, 166, 168, 180, 181, 182, 184, 186, 188, 190, 191, 197, 199, 200, 206, 207, 210, 213, 215, 217, 221, 222, 223, 224, 228, 230, 235, 251, 273], "Their": [6, 50, 58, 75, 183, 187, 190, 207], "approxim": [6, 11, 12, 15, 30, 41, 49, 50, 51, 54, 58, 60, 66, 75, 77, 86, 90, 94, 97, 132, 166, 183, 187, 188, 193, 200, 204, 207, 217, 254, 263, 267], "1969": [6, 51, 58, 75, 191, 207], "en": [6, 7, 16, 18, 24, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 60, 62, 66, 67, 68, 77, 78, 79, 80, 81, 83, 86, 90, 98, 100, 103, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 149, 151, 152, 161, 163, 173, 175, 179, 193, 194, 200, 204, 205, 206, 213, 216, 217, 230, 235, 236, 242, 243, 247, 249, 251, 269], "bessel_funct": [6, 58], "typefunct": [6, 58], "gamma": [6, 7, 11, 18, 49, 50, 52, 54, 55, 57, 75, 77, 103, 130, 160, 181, 182, 197, 207, 209, 213, 217, 258, 273], "infti": [6, 16, 28, 49, 50, 51, 55, 56, 58, 75, 77, 184, 193, 200, 204, 207, 213, 216, 217, 263, 267, 273], "mathrm": [6, 22, 40, 49, 50, 51, 58, 75, 77, 86, 188, 190, 197, 205, 207, 213, 216, 217, 260, 263, 267], "factori": [6, 14, 18, 49, 50, 54, 57, 58, 86, 90, 92, 182, 188, 190, 192, 193, 197, 199, 209, 215, 217, 230, 231, 235, 236, 273], "z": [6, 10, 11, 16, 18, 28, 29, 32, 33, 41, 42, 49, 50, 51, 52, 53, 55, 56, 58, 62, 63, 64, 65, 66, 75, 77, 80, 81, 83, 86, 92, 93, 94, 102, 105, 106, 107, 110, 113, 115, 116, 117, 118, 120, 121, 122, 127, 128, 130, 131, 132, 141, 143, 147, 157, 158, 160, 164, 168, 172, 173, 174, 175, 176, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 221, 222, 223, 229, 230, 236, 242, 244, 245, 246, 247, 248, 250, 251, 262, 263, 265, 267, 268, 272, 273, 274], "whole": [6, 10, 16, 50, 52, 58, 77, 94, 102, 183, 184, 192, 193, 197, 200, 205, 207, 213, 216, 235], "complex": [6, 10, 11, 13, 16, 18, 24, 27, 29, 30, 32, 41, 50, 51, 53, 54, 55, 57, 58, 62, 72, 75, 81, 82, 86, 90, 91, 92, 98, 100, 104, 113, 130, 132, 136, 146, 149, 151, 152, 163, 172, 173, 181, 185, 186, 188, 189, 192, 193, 197, 198, 202, 207, 209, 213, 215, 216, 217, 230, 238, 273, 274], "plane": [6, 24, 50, 58, 60, 62, 63, 65, 66, 76, 77, 98, 115, 135, 136, 180, 181, 205, 216, 251, 273], "pole": [6, 58, 75, 99, 100, 136, 204, 207, 213], "pi": [6, 10, 11, 13, 16, 18, 23, 24, 25, 27, 28, 29, 30, 32, 42, 49, 52, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 69, 75, 77, 86, 90, 102, 115, 130, 132, 134, 135, 136, 137, 139, 147, 158, 160, 161, 164, 166, 173, 182, 183, 185, 187, 188, 193, 197, 200, 204, 205, 206, 207, 209, 212, 213, 215, 216, 217, 235, 242, 244, 251, 262, 267, 273], "oo": [6, 16, 17, 28, 30, 49, 50, 54, 55, 56, 58, 63, 75, 77, 80, 86, 100, 102, 149, 161, 164, 188, 190, 193, 202, 203, 204, 205, 209, 212, 213, 215, 216, 217, 222, 235, 238, 263, 267], "known": [6, 16, 17, 18, 27, 31, 32, 33, 39, 41, 42, 50, 51, 54, 55, 58, 60, 63, 68, 75, 77, 78, 87, 90, 98, 100, 101, 103, 105, 110, 127, 166, 173, 180, 186, 187, 188, 192, 193, 197, 200, 203, 205, 206, 207, 209, 211, 212, 213, 214, 215, 217, 235, 236, 242, 248, 250, 273], "sqrt": [6, 10, 16, 18, 24, 28, 29, 30, 32, 50, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 73, 74, 75, 77, 78, 81, 82, 86, 90, 92, 93, 100, 102, 115, 132, 134, 136, 137, 142, 147, 157, 158, 160, 161, 163, 164, 166, 173, 178, 181, 182, 185, 187, 188, 190, 192, 193, 196, 197, 198, 203, 206, 207, 209, 210, 212, 213, 215, 216, 217, 235, 236, 238, 242, 250, 251, 262, 267, 272, 273, 274], "obei": [6, 58, 182, 197, 207], "mirror": [6, 58, 77, 136], "symmetri": [6, 10, 38, 43, 46, 58, 81, 142, 182, 213, 221, 223, 262, 273], "conjug": [6, 28, 39, 40, 41, 50, 57, 58, 81, 86, 102, 132, 146, 149, 163, 193, 197, 213, 223], "differenti": [6, 7, 10, 20, 30, 50, 55, 56, 58, 67, 68, 70, 73, 100, 107, 108, 112, 113, 115, 117, 120, 123, 124, 125, 126, 127, 130, 131, 152, 158, 172, 173, 175, 176, 178, 181, 184, 190, 194, 196, 197, 202, 207, 209, 211, 213, 214, 242, 248, 249, 252, 259, 263, 264, 267], "polygamma": [6, 55, 58, 197], "seri": [6, 14, 30, 31, 32, 33, 40, 41, 49, 50, 52, 54, 55, 56, 58, 70, 73, 74, 75, 79, 90, 97, 100, 113, 120, 122, 130, 176, 180, 189, 190, 197, 202, 203, 207, 213, 216, 253, 259, 264], "expans": [6, 14, 18, 32, 50, 52, 55, 56, 58, 70, 77, 86, 90, 127, 142, 144, 193, 194, 199, 200, 201, 206, 208, 213, 215, 216, 253, 264, 273], "eulergamma": [6, 54, 55, 58], "40": [6, 32, 53, 55, 58, 60, 67, 81, 86, 90, 93, 183, 194, 196, 197, 217, 238, 262], "288037795340032417959588909060233922890": [6, 58], "49801566811835604271": [6, 58], "15494982830181068512": [6, 58], "lowergamma": [6, 58, 217], "lower": [6, 10, 16, 27, 30, 32, 41, 42, 49, 50, 52, 58, 59, 61, 66, 67, 77, 81, 82, 83, 86, 98, 103, 107, 163, 176, 182, 184, 186, 188, 190, 193, 197, 206, 207, 209, 213, 222, 223, 232, 242, 263, 271], "uppergamma": [6, 55, 58, 197, 217], "upper": [6, 27, 49, 51, 54, 58, 59, 66, 67, 81, 82, 83, 86, 89, 90, 98, 107, 156, 163, 182, 186, 188, 190, 192, 193, 197, 207, 215, 222, 242], "loggamma": [6, 7, 58, 197], "log": [6, 7, 11, 18, 22, 24, 30, 32, 41, 49, 50, 54, 55, 57, 58, 68, 72, 74, 75, 77, 81, 86, 90, 183, 188, 197, 199, 204, 207, 209, 213, 216, 217, 224, 263, 273, 274], "digamma": [6, 55, 58, 197], "trigamma": [6, 58, 197], "beta": [6, 11, 32, 41, 50, 57, 77, 160, 173, 182, 192, 194, 197, 213, 217], "euler": [6, 30, 31, 49, 50, 51, 54, 57, 58, 66, 72, 78, 90, 160, 173, 177, 181, 182, 197, 213, 217, 242, 243], "gamma_funct": [6, 58], "gov": [6, 55, 56, 58], "gammafunct": [6, 58], "gammabetaerf": [6, 55, 58], "unusu": [6, 16, 115, 228], "inlin": [6, 78, 177, 197, 230], "pretti": [6, 18, 31, 32, 58, 77, 78, 86, 90, 94, 100, 115, 177, 207, 209, 216, 250, 260, 264, 267, 269, 273], "As": [6, 10, 13, 14, 17, 18, 23, 32, 41, 42, 50, 51, 54, 55, 56, 58, 74, 75, 80, 86, 89, 90, 92, 112, 113, 115, 117, 124, 127, 128, 163, 168, 180, 184, 185, 187, 188, 190, 194, 196, 197, 204, 205, 207, 213, 216, 217, 235, 236, 245, 246, 262, 263, 265, 267, 268, 269, 272, 273], "literatur": [6, 75, 167, 189], "fact": [6, 10, 16, 17, 18, 27, 28, 50, 55, 58, 68, 75, 90, 115, 127, 168, 184, 185, 187, 190, 192, 194, 196, 207, 209, 213, 216, 228, 236, 250, 262, 265, 266, 267, 268, 273], "eval": [6, 10, 16, 26, 27, 32, 50, 56, 58, 149, 163, 188, 193, 197, 230, 262], "illumin": 6, "tone": 6, "narr": [6, 8, 266], "excerpt": 6, "geometri": [6, 59, 60, 61, 63, 64, 65, 66, 67, 77, 123, 136, 189, 244, 251, 252, 259, 267], "autofunct": 6, "intersect": [6, 16, 30, 31, 41, 60, 61, 63, 64, 65, 66, 67, 136, 184, 193, 197, 203, 204, 216, 259], "convex_hul": [6, 62, 66, 67], "are_similar": [6, 61, 62, 67], "autoclass": 6, "linearent": [6, 60, 63, 64, 65, 66], "rai": [6, 60, 62, 63, 64, 66, 67, 132, 136], "segment": [6, 10, 41, 60, 62, 63, 64, 65, 66, 67, 180, 183, 213, 228], "curv": [6, 31, 52, 62, 77, 90, 93, 132, 183, 184, 213, 242, 251, 263], "ellips": [6, 61, 62, 66, 135, 183, 197, 272], "circl": [6, 18, 50, 60, 61, 62, 64, 65, 66, 67, 75, 136, 143, 183, 216, 242, 244, 251], "polygon": [6, 60, 61, 62, 67, 76, 183, 251], "regularpolygon": [6, 61, 62, 66, 183], "triangl": [6, 18, 31, 55, 61, 62, 66, 67, 77, 81, 90, 182, 183, 244, 251], "rel": [6, 7, 10, 31, 32, 40, 41, 42, 43, 47, 48, 49, 51, 54, 61, 75, 90, 105, 107, 110, 118, 127, 128, 135, 162, 173, 176, 180, 181, 184, 186, 187, 190, 192, 205, 207, 212, 215, 217, 228, 235, 245, 246, 250, 267], "cumbersom": 6, "viewcod": 6, "aco": [6, 11, 24, 57, 63, 66, 115, 130, 136, 173, 197, 213, 242, 273], "obj": [6, 10, 16, 50, 188, 193, 197, 231], "qualifi": [6, 239], "elementari": [6, 16, 17, 18, 41, 50, 51, 54, 57, 58, 72, 75, 77, 81, 86, 90, 128, 156, 159, 189, 193, 194, 201, 235, 236, 245, 255], "trigonometr": [6, 18, 50, 57, 77, 194, 200, 208, 212, 213, 216, 236, 253, 264, 274], "trail": [6, 42, 90, 188, 190, 193, 233, 238], "pair": [6, 11, 14, 31, 32, 41, 42, 50, 51, 56, 62, 67, 74, 86, 90, 113, 117, 153, 155, 157, 158, 163, 172, 184, 187, 190, 192, 193, 198, 203, 204, 206, 207, 209, 210, 213, 216, 217, 230, 235, 245, 262, 269], "www": [6, 7, 24, 30, 41, 42, 51, 53, 55, 58, 72, 77, 78, 90, 98, 177, 191, 196, 197, 206, 209, 210, 213, 217, 235, 269, 272], "master": [6, 7, 22, 77, 228], "usag": [6, 7, 11, 16, 17, 18, 23, 26, 52, 56, 77, 123, 160, 178, 183, 184, 189, 190, 197, 205, 207, 210, 213, 214, 218, 232, 236, 237, 248, 249, 259, 268], "expect": [6, 7, 11, 16, 18, 31, 33, 35, 50, 56, 58, 62, 80, 90, 91, 100, 113, 157, 187, 190, 192, 194, 195, 204, 209, 212, 216, 217, 226, 228, 229, 232, 235, 236, 267, 268], "vector": [6, 14, 24, 28, 32, 34, 37, 41, 42, 52, 58, 63, 64, 65, 72, 73, 79, 81, 86, 91, 93, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 135, 136, 149, 158, 160, 165, 168, 175, 176, 177, 184, 189, 192, 197, 207, 213, 215, 217, 222, 223, 228, 229, 243, 247, 252, 256, 258, 269], "dynamicsymbol": [6, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 173, 176, 177, 178, 179, 180, 181], "custom": [6, 10, 19, 32, 42, 50, 54, 57, 78, 81, 86, 106, 107, 172, 177, 178, 199, 203, 210, 217, 223, 229, 236, 242, 250, 259, 267, 269], "sine": [6, 18, 50, 56, 58, 75, 77, 137, 194, 200, 206, 262], "expand": [6, 10, 11, 14, 16, 32, 52, 54, 55, 56, 58, 75, 77, 81, 100, 113, 115, 130, 144, 152, 155, 162, 163, 185, 187, 189, 190, 192, 193, 194, 200, 204, 206, 207, 209, 213, 216, 217, 221, 229, 236, 247, 253, 262, 267], "troubleshoot": [6, 127], "spell": [6, 10, 213], "try": [6, 7, 8, 10, 11, 16, 17, 18, 42, 49, 50, 54, 58, 60, 65, 75, 77, 80, 83, 86, 89, 90, 153, 155, 162, 163, 183, 187, 192, 197, 202, 204, 205, 206, 207, 209, 210, 213, 215, 236, 238, 262, 265, 268, 269, 273], "referencefram": [6, 105, 106, 107, 108, 110, 113, 115, 116, 117, 120, 121, 122, 125, 126, 127, 128, 130, 131, 174, 175, 176, 177, 178, 179, 180], "though": [6, 11, 16, 17, 18, 23, 33, 50, 51, 52, 62, 66, 75, 77, 81, 86, 90, 104, 108, 115, 125, 127, 158, 172, 173, 180, 181, 185, 187, 188, 193, 194, 206, 207, 209, 213, 214, 215, 216, 228, 248, 263, 268, 273], "frame": [6, 104, 105, 106, 107, 108, 110, 112, 113, 115, 116, 117, 118, 120, 122, 124, 125, 126, 127, 128, 130, 131, 172, 173, 174, 175, 176, 178, 179, 180, 232, 242, 248], "notimplementederror": [6, 30, 49, 60, 63, 67, 77, 86, 98, 186, 192, 196, 205, 212, 213, 214, 215, 216], "outsid": [6, 28, 41, 50, 58, 61, 66, 81, 90, 104, 168, 181, 193, 209, 263, 268], "plot": [6, 18, 22, 59, 60, 62, 63, 66, 73, 78, 86, 93, 94, 99, 130, 147, 150, 156, 200, 252, 258, 259, 267, 272], "ahead": [6, 90], "submit": 6, "sub": [6, 10, 11, 16, 17, 18, 32, 49, 56, 58, 59, 60, 61, 62, 63, 64, 66, 77, 80, 81, 83, 86, 90, 92, 93, 94, 100, 104, 106, 113, 115, 116, 117, 120, 121, 127, 130, 160, 161, 166, 173, 182, 184, 186, 187, 188, 193, 197, 204, 205, 209, 210, 213, 214, 215, 217, 228, 229, 231, 253, 262, 263, 265], "common": [6, 7, 10, 11, 16, 17, 18, 20, 27, 30, 32, 41, 42, 50, 51, 56, 61, 64, 67, 77, 83, 85, 86, 90, 91, 98, 100, 105, 107, 109, 116, 123, 128, 130, 135, 168, 173, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199, 205, 206, 207, 208, 210, 213, 217, 229, 230, 233, 235, 236, 248, 250, 253, 256, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273], "matrixcommon": [6, 83, 85, 86], "dyadic": [6, 53, 105, 110, 113, 115, 120, 122, 123, 130, 175, 177, 179, 244, 249], "shorten": 6, "highli": [7, 50, 54, 97, 187, 193, 202, 230], "aspect": [7, 16, 86, 187], "teach": [7, 42, 51, 217], "conduct": 7, "accord": [7, 11, 32, 38, 41, 42, 46, 49, 50, 51, 58, 80, 83, 86, 90, 92, 114, 123, 157, 163, 183, 188, 190, 192, 194, 210, 215, 216, 223, 228, 230, 235, 250], "survei": 7, "commonli": [7, 42, 55, 58, 77, 86, 104, 180, 185, 213, 248], "encount": [7, 11, 14, 50, 77, 86, 155, 185, 190, 193, 215, 216, 230, 242, 269], "problem": [7, 10, 11, 14, 16, 17, 18, 20, 34, 44, 46, 50, 51, 62, 75, 77, 81, 86, 90, 93, 95, 96, 101, 104, 113, 117, 118, 121, 123, 125, 172, 180, 181, 184, 185, 189, 190, 207, 209, 210, 213, 216, 232, 235, 249, 258, 263, 265, 269], "offer": [7, 31, 32, 41, 50, 91, 104, 130, 172, 181, 187, 192, 232, 249], "bring": [7, 75, 108, 121, 186, 200, 209, 269], "greater": [7, 28, 42, 50, 56, 58, 75, 79, 90, 100, 190, 193, 196, 204, 209, 213, 215, 217, 232, 235, 248, 263], "clariti": [7, 41, 176], "mission": [7, 31, 84], "ca": [7, 22, 51, 58, 77, 196, 197, 235], "dedic": [7, 32, 189, 230, 246, 248], "essenti": [7, 34, 45, 50, 54, 56, 57, 58, 75, 110, 115, 178, 179, 181, 184, 185, 188, 192, 204, 207, 245, 248, 249, 250], "element": [7, 10, 11, 13, 16, 24, 27, 31, 32, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 66, 73, 75, 77, 79, 80, 81, 82, 83, 86, 89, 90, 91, 93, 94, 100, 101, 110, 130, 132, 135, 149, 160, 168, 176, 179, 181, 183, 184, 185, 186, 188, 189, 190, 193, 195, 196, 197, 203, 204, 205, 207, 209, 210, 213, 215, 216, 217, 218, 222, 229, 231, 232, 235, 236, 237, 244, 263, 268, 269, 272, 273], "deviat": [7, 136, 217], "advanc": [7, 13, 15, 18, 26, 41, 50, 54, 55, 86, 87, 123, 128, 179, 183, 186, 187, 189, 191, 192, 199, 206, 213, 228, 229, 230, 235, 262, 264, 266, 270, 271, 272, 273], "docutil": 7, "sourceforg": [7, 31], "net": [7, 31, 66, 191, 213, 217, 235], "ext": [7, 184, 188], "autodoc": 7, "associ": [7, 10, 16, 31, 33, 48, 50, 51, 57, 58, 72, 73, 75, 79, 128, 130, 153, 161, 172, 173, 180, 181, 185, 186, 187, 188, 190, 192, 197, 205, 207, 210, 223, 237], "graphic": [7, 98], "info": [7, 11, 100, 197, 213, 214], "bear": [7, 16], "linkcod": 7, "readthedoc": [7, 78, 236], "subset": [7, 14, 16, 18, 30, 31, 34, 37, 41, 42, 48, 55, 56, 62, 73, 75, 77, 79, 90, 184, 186, 190, 192, 197, 205, 235], "modifi": [7, 11, 31, 32, 41, 50, 56, 58, 90, 92, 126, 135, 183, 190, 192, 193, 194, 197, 209, 215, 216, 217, 228, 231, 232, 235, 236, 262, 267, 269], "sphinx_math_dollar": 7, "delimit": [7, 50, 197], "dollar": [7, 267], "2": [7, 11, 12, 13, 14, 16, 17, 18, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 226, 228, 229, 230, 231, 232, 235, 236, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 262, 263, 265, 267, 268, 269, 272, 273, 274], "sphinxext": 7, "plot_direct": 7, "figur": [7, 50, 51, 60, 61, 63, 65, 66, 77, 94, 113, 158, 180, 181, 182, 183, 194, 197, 251, 273], "devel": [7, 182], "supersed": [7, 113, 130], "pep": [7, 32, 50, 80], "257": [7, 90, 215], "our": [7, 9, 10, 14, 18, 22, 32, 50, 58, 75, 86, 90, 116, 168, 180, 181, 183, 184, 186, 192, 193, 194, 197, 204, 207, 210, 213, 216, 228, 262, 265, 266, 268, 273], "introduct": [7, 10, 12, 15, 37, 41, 42, 123, 179, 188, 189, 190, 191, 197, 210, 213, 216, 249, 253, 254, 255, 259, 266, 272], "four": [7, 32, 42, 50, 54, 58, 80, 83, 90, 96, 101, 114, 123, 128, 136, 173, 183, 184, 190, 193, 197, 205, 210, 213, 215, 217, 218, 242, 243, 246], "locat": [7, 10, 42, 50, 64, 86, 90, 93, 94, 96, 107, 117, 127, 131, 176, 178, 192, 193, 197, 209, 217, 231, 240, 242, 245, 247, 249, 250], "websit": [7, 271], "advertis": 7, "serv": [7, 14, 18, 26, 27, 32, 47, 50, 57, 73, 192, 213, 214, 238, 266], "initi": [7, 16, 26, 41, 45, 50, 51, 52, 55, 58, 66, 68, 69, 72, 73, 74, 75, 78, 90, 92, 94, 96, 98, 100, 105, 108, 110, 112, 113, 115, 117, 122, 125, 126, 127, 130, 131, 135, 143, 152, 174, 175, 177, 181, 182, 190, 192, 193, 197, 203, 207, 209, 213, 215, 216, 222, 230, 237, 238, 242, 243, 244, 245, 246], "obtain": [7, 11, 14, 26, 27, 31, 33, 34, 41, 42, 43, 46, 50, 51, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 72, 75, 77, 79, 81, 86, 89, 90, 97, 100, 123, 126, 128, 136, 158, 163, 168, 184, 185, 188, 190, 192, 193, 196, 198, 205, 206, 207, 209, 210, 213, 214, 215, 216, 235, 238, 245, 246], "technic": [7, 10, 12, 18, 21, 31, 50, 130, 149, 184, 213, 230, 235, 248, 265, 268], "place": [7, 8, 10, 11, 16, 18, 21, 31, 42, 43, 50, 51, 56, 66, 82, 86, 89, 90, 92, 100, 130, 131, 191, 192, 197, 198, 204, 206, 209, 213, 232, 235, 261, 262, 269, 273], "site": [7, 90, 231], "upload": [7, 90], "belong": [7, 16, 28, 31, 41, 46, 50, 73, 86, 163, 173, 180, 183, 184, 186, 187, 190, 192, 193, 204, 205, 209, 210, 216, 223], "insid": [7, 10, 11, 18, 41, 42, 47, 50, 60, 61, 66, 93, 104, 106, 117, 127, 162, 163, 168, 177, 181, 193, 197, 205, 207, 210, 215, 216, 217, 219, 221, 232, 268, 269], "spars": [7, 83, 85, 86, 157, 186, 189, 192, 193, 194, 217, 218, 256, 268], "substanti": [7, 91], "edit": [7, 77, 86, 90, 190, 191, 193], "arg": [7, 16, 18, 24, 26, 27, 28, 29, 30, 31, 32, 34, 41, 42, 44, 47, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 63, 65, 66, 67, 72, 75, 77, 80, 81, 82, 83, 84, 86, 88, 90, 92, 100, 132, 138, 141, 143, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 173, 177, 181, 183, 186, 188, 190, 192, 193, 194, 197, 199, 200, 203, 204, 205, 206, 209, 213, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 235, 236, 238, 242, 243], "invari": [7, 10, 18, 41, 46, 97, 100, 182, 188, 192, 193, 207, 213], "polici": [7, 8, 10, 231, 233], "5": [7, 11, 12, 16, 18, 20, 24, 26, 27, 28, 30, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 95, 98, 100, 102, 103, 105, 110, 113, 115, 116, 120, 121, 122, 123, 125, 132, 136, 157, 158, 161, 163, 170, 172, 174, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 212, 214, 215, 216, 217, 218, 222, 223, 228, 229, 235, 236, 242, 244, 246, 248, 250, 251, 262, 263, 265, 268, 269, 272, 273], "center": [7, 14, 30, 41, 49, 50, 60, 64, 66, 67, 77, 86, 105, 107, 110, 113, 115, 120, 122, 124, 128, 130, 136, 180, 183, 192, 197, 205, 251], "resid": 7, "standalon": [7, 130], "restructur": 7, "appli": [7, 10, 17, 18, 19, 24, 25, 26, 27, 28, 32, 41, 42, 43, 48, 49, 50, 51, 52, 53, 56, 57, 60, 65, 66, 68, 76, 77, 80, 81, 82, 86, 90, 92, 93, 94, 96, 100, 101, 105, 106, 115, 118, 125, 127, 129, 140, 144, 147, 148, 152, 155, 156, 160, 163, 173, 181, 183, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 217, 218, 221, 228, 231, 235, 242, 243, 246, 269, 272, 273], "surround": [7, 50, 67, 136, 205, 238], "nu": [7, 11, 58, 77, 90, 164, 185, 197, 209, 217, 223, 267], "equat": [7, 11, 14, 19, 30, 32, 46, 49, 50, 52, 56, 58, 60, 63, 64, 68, 72, 73, 74, 75, 78, 81, 86, 93, 100, 102, 104, 107, 108, 109, 112, 113, 115, 116, 117, 118, 120, 122, 123, 124, 129, 130, 131, 132, 136, 167, 172, 176, 177, 180, 181, 182, 183, 184, 189, 190, 191, 192, 195, 196, 197, 203, 207, 209, 211, 212, 214, 222, 242, 246, 247, 251, 263, 264, 267], "strip": [7, 51, 77, 90, 190, 233, 238], "out": [7, 11, 16, 17, 18, 31, 32, 41, 42, 50, 51, 52, 55, 58, 66, 75, 77, 83, 86, 90, 93, 100, 101, 113, 115, 117, 120, 130, 140, 144, 155, 158, 160, 162, 163, 184, 185, 187, 188, 192, 193, 194, 195, 197, 198, 204, 207, 209, 213, 218, 228, 230, 235, 236, 265, 267, 268, 272, 273], "unimport": 7, "bullet": 7, "avoid": [7, 8, 10, 17, 18, 32, 33, 50, 51, 56, 75, 77, 80, 86, 89, 92, 117, 127, 157, 180, 181, 185, 187, 193, 197, 198, 205, 209, 213, 215, 217, 221, 230, 233, 236, 265, 266], "whitespac": [7, 50, 233], "invalid": [7, 11, 50, 51, 92, 115, 187, 190, 205], "dx": [7, 10, 14, 18, 30, 32, 46, 50, 52, 54, 58, 67, 69, 72, 73, 74, 75, 77, 86, 93, 103, 108, 109, 152, 181, 193, 194, 200, 210, 213, 214, 218, 263, 267, 272, 274], "meta": [7, 50, 213, 214], "stackexchang": [7, 60], "5020": 7, "wikibook": [7, 77, 78], "overleaf": 7, "mathematical_express": 7, "verbatim": 7, "_rewrit": 7, "_expand": 7, "difficult": [7, 16, 50, 86, 113, 194, 207, 213, 214, 216, 229, 251, 267, 273], "sentenc": [7, 80], "thumb": [7, 80, 235], "greek": [7, 23, 50, 90, 92, 184, 197], "letter": [7, 11, 23, 43, 50, 51, 90, 163, 197, 235, 263, 265], "\u03b1": [7, 182, 196], "alpha": [7, 11, 41, 50, 58, 77, 79, 135, 139, 142, 160, 176, 180, 181, 182, 188, 190, 192, 193, 196, 197, 209, 213, 217], "logarithm": [7, 11, 24, 30, 32, 50, 51, 56, 57, 75, 77, 86, 90, 188, 190, 194, 197, 207, 209, 216, 217, 264], "italic": 7, "emphasi": [7, 187], "asterisk": 7, "stirl": [7, 42, 57, 235], "fals": [7, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 75, 77, 78, 80, 81, 82, 83, 86, 87, 90, 92, 93, 94, 98, 100, 102, 103, 106, 108, 109, 110, 113, 115, 116, 120, 121, 122, 124, 125, 126, 127, 128, 131, 135, 147, 148, 152, 155, 160, 161, 162, 163, 166, 170, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 222, 223, 226, 228, 229, 230, 231, 235, 236, 238, 242, 244, 265, 268, 269, 272], "permut": [7, 33, 35, 37, 38, 40, 43, 46, 47, 48, 51, 55, 58, 81, 83, 86, 109, 163, 182, 186, 188, 193, 210, 218, 219, 223, 235, 273], "cycl": [7, 10, 32, 38, 41, 42, 48, 50, 53, 55, 81, 90, 137, 205, 235], "partit": [7, 37, 41, 57, 90, 117, 127, 129, 217, 232, 234], "reduc": [7, 11, 17, 25, 27, 29, 33, 46, 50, 51, 53, 55, 56, 58, 65, 66, 75, 77, 86, 90, 100, 101, 127, 145, 163, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 203, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 235, 269], "ge": [7, 16, 55, 56, 58, 75, 81, 86, 90, 182, 185, 190, 207, 235], "consecut": [7, 32, 41, 46, 49, 51, 55, 66, 209, 215], "group": [7, 31, 36, 37, 42, 43, 46, 47, 48, 50, 53, 55, 79, 80, 90, 142, 151, 152, 163, 182, 183, 184, 192, 193, 209, 213, 215, 216, 223, 235], "pairwis": [7, 28, 31, 50, 55, 67, 86, 90, 210, 215], "ital": [7, 197], "last": [7, 8, 10, 11, 13, 14, 16, 17, 18, 25, 26, 27, 31, 32, 33, 40, 41, 42, 46, 49, 50, 51, 54, 60, 77, 80, 81, 82, 83, 84, 86, 88, 89, 90, 92, 100, 112, 124, 135, 168, 182, 183, 184, 185, 187, 188, 190, 193, 196, 197, 204, 205, 210, 213, 215, 216, 217, 218, 223, 226, 228, 229, 230, 231, 233, 235, 236, 238, 263, 265, 268, 269], "talk": [7, 12, 21, 51, 184, 192, 245], "handl": [7, 14, 16, 17, 18, 30, 38, 42, 50, 56, 77, 78, 80, 85, 90, 91, 92, 93, 101, 104, 113, 127, 143, 146, 152, 153, 158, 187, 193, 194, 203, 209, 211, 213, 215, 218, 221, 229, 235, 236, 238, 253, 268, 273], "referenc": [7, 8, 34, 39, 90, 112, 115, 160, 192], "overlin": [7, 16, 58], "normal": [7, 10, 11, 16, 17, 18, 24, 27, 32, 41, 49, 50, 54, 56, 60, 63, 64, 65, 77, 78, 80, 84, 85, 86, 90, 92, 102, 104, 107, 113, 115, 121, 130, 136, 147, 157, 160, 161, 162, 163, 164, 168, 171, 173, 181, 184, 187, 188, 189, 190, 192, 193, 197, 198, 200, 205, 206, 210, 213, 217, 222, 228, 233, 235, 242, 256], "assign": [7, 16, 31, 32, 33, 46, 50, 66, 77, 79, 80, 86, 92, 108, 113, 120, 130, 168, 178, 181, 183, 185, 190, 197, 215, 216, 223, 230, 245, 248, 265], "structur": [7, 10, 13, 16, 18, 29, 31, 32, 38, 41, 42, 48, 50, 75, 77, 80, 81, 86, 93, 94, 96, 112, 123, 161, 163, 183, 184, 187, 190, 192, 193, 194, 209, 211, 213, 215, 216, 217, 221, 222, 230, 232, 235, 236, 265, 273], "suggest": [7, 10, 33, 41, 77, 86, 90, 113, 195, 269], "american": [7, 36, 51], "color": [7, 78, 98, 177, 197, 228, 235, 259, 272], "colour": 7, "quotat": 7, "line_color": [7, 183, 200], "aesthet": [7, 183], "ariti": [7, 183], "term": [7, 10, 11, 14, 16, 18, 32, 41, 50, 51, 52, 54, 55, 56, 58, 69, 73, 74, 75, 77, 80, 81, 86, 90, 94, 98, 100, 106, 108, 115, 117, 120, 123, 125, 127, 128, 142, 147, 159, 160, 163, 165, 168, 173, 175, 178, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 221, 222, 235, 242, 244, 248, 253, 263, 265, 267, 268, 273], "unrestrict": [7, 39, 235], "necklac": [7, 235], "bracelet": [7, 235], "impli": [7, 11, 16, 24, 28, 32, 41, 80, 163, 183, 188, 190, 197, 205, 207, 213, 218, 221, 222, 235, 248], "turn": [7, 10, 16, 32, 50, 56, 58, 65, 75, 84, 121, 125, 178, 184, 192, 194, 197, 204, 205, 207, 209, 210, 213, 228, 235, 250, 265, 267], "sequenc": [7, 11, 30, 32, 34, 37, 40, 41, 42, 46, 48, 49, 50, 51, 53, 55, 58, 60, 63, 64, 65, 66, 67, 70, 74, 80, 81, 83, 86, 89, 90, 130, 136, 162, 163, 188, 191, 193, 197, 199, 201, 204, 206, 207, 209, 210, 213, 214, 216, 223, 226, 229, 230, 235, 237, 238], "revers": [7, 34, 39, 42, 49, 50, 51, 56, 77, 78, 80, 86, 90, 100, 162, 173, 177, 184, 186, 190, 193, 194, 197, 198, 205, 209, 213, 235, 273], "ambigu": [7, 10, 11, 50, 151, 157, 209, 221, 226], "person": 7, "chebyshev": [7, 30, 50, 77, 190, 193], "pafnuti": 7, "lvovich": 7, "tchebychev": 7, "whose": [7, 16, 18, 31, 33, 34, 39, 42, 49, 50, 51, 56, 60, 64, 66, 67, 73, 77, 80, 86, 90, 110, 125, 135, 158, 168, 174, 175, 178, 181, 185, 186, 188, 192, 193, 204, 205, 209, 213, 214, 215, 217, 223, 228, 232, 235, 236, 242, 244, 246, 248], "transliter": 7, "russian": 7, "chebyshevt": [7, 58, 197], "orthogonalpolynomi": 7, "t_n": [7, 55, 58, 77, 190, 246], "tens": 7, "inclus": [7, 49, 96, 156, 184, 203, 204, 205, 216], "pronoun": 7, "gender": 7, "neutral": 7, "he": [7, 55, 75, 190], "she": [7, 216], "extran": [7, 213], "belittl": 7, "obvious": [7, 33, 41, 166, 180, 187, 207], "easili": [7, 10, 16, 18, 22, 50, 51, 73, 75, 86, 90, 91, 125, 161, 180, 193, 196, 197, 202, 209, 210, 213, 215, 216, 229, 267], "straightforward": [7, 18, 41, 51, 86, 207], "unwelcom": 7, "judgement": 7, "phrase": [7, 51], "friendli": [7, 32, 75, 230], "mistak": [7, 11, 41, 236], "goe": [8, 18, 21, 86, 204, 207, 216, 265, 268], "content": [8, 12, 32, 50, 51, 85, 185, 188, 190, 193, 196, 197, 225, 230, 233, 234, 253, 254, 255, 256, 257, 258, 259, 260, 264, 266], "setup": [8, 32, 50, 116, 117, 118, 124, 132, 173, 190, 193, 195, 196, 207, 228, 229, 231, 241, 272], "depend": [8, 10, 11, 16, 18, 22, 30, 32, 33, 41, 42, 49, 50, 51, 52, 55, 56, 58, 62, 67, 74, 75, 77, 78, 79, 86, 90, 91, 92, 98, 102, 105, 108, 109, 112, 113, 115, 117, 123, 125, 135, 136, 137, 152, 161, 163, 165, 168, 177, 178, 183, 185, 188, 189, 190, 192, 193, 194, 197, 198, 203, 207, 209, 210, 213, 214, 215, 216, 217, 228, 229, 230, 231, 235, 236, 248, 250, 251, 265, 267], "document": [8, 10, 15, 18, 26, 27, 28, 41, 46, 50, 51, 56, 57, 58, 62, 72, 75, 76, 78, 83, 86, 91, 94, 104, 108, 123, 125, 126, 128, 130, 138, 152, 158, 172, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 193, 197, 207, 211, 213, 215, 216, 226, 228, 230, 231, 233, 235, 242, 248, 249, 252, 263, 265, 266, 272, 273], "auto": [8, 11, 30, 50, 51, 78, 183, 190, 193, 197, 209, 213, 217], "rebuild": [8, 18, 50, 193, 268], "live": [8, 23, 33, 130, 192, 210], "server": 8, "debug": [8, 32, 50, 77, 115, 152, 228, 229, 238], "incompat": 8, "pick": [9, 16, 51, 55, 127, 157, 159, 273], "ignor": [10, 11, 18, 32, 41, 50, 51, 55, 56, 60, 65, 75, 80, 86, 90, 100, 106, 115, 160, 163, 173, 183, 193, 197, 198, 209, 215, 229, 273], "regex": 10, "categori": [10, 184, 252, 259], "lead": [10, 16, 17, 18, 49, 50, 56, 60, 77, 80, 86, 90, 102, 109, 147, 173, 181, 185, 188, 190, 192, 193, 194, 197, 204, 206, 209, 213, 216, 230, 233, 238, 266, 273], "against": [10, 16, 18, 51, 93, 113, 229], "unrel": [10, 50, 57, 185, 265], "capabl": [10, 16, 30, 32, 50, 54, 62, 75, 90, 93, 94, 123, 130, 183, 194, 197, 216, 266, 267, 273, 274], "w": [10, 11, 32, 34, 40, 49, 50, 51, 52, 53, 56, 58, 75, 77, 80, 86, 87, 107, 110, 121, 128, 129, 132, 137, 148, 152, 161, 176, 178, 179, 182, 183, 185, 186, 190, 191, 192, 193, 194, 198, 204, 205, 207, 209, 210, 213, 214, 216, 217, 228, 236, 238, 248, 274], "pythonwarn": 10, "NOT": [10, 80, 100, 143, 147, 162, 165, 226, 229], "blog": [10, 18, 32, 55, 81, 210, 216], "post": [10, 16, 32, 44, 50, 197, 198, 209, 228, 268], "ned": 10, "batcheld": 10, "pars": [10, 42, 50, 83, 113, 124, 194, 196, 252, 260], "comprehens": [10, 16, 191, 205, 217, 262], "additional_transl": 10, "recogn": [10, 11, 50, 51, 55, 65, 90, 93, 101, 185, 188, 196, 205, 206, 215, 222, 265], "logic": [10, 16, 18, 19, 25, 26, 27, 28, 31, 50, 52, 75, 77, 90, 155, 157, 158, 162, 197, 199, 205, 213, 217, 235, 265, 266, 267, 269], "node": [10, 30, 44, 50, 77, 92, 96, 106, 139, 164, 173, 182, 187, 197, 204, 216, 221, 232, 254, 268, 272], "suppos": [10, 17, 18, 42, 49, 50, 51, 75, 184, 186, 190, 192, 193, 197, 204, 207, 213, 215, 226, 235, 246, 251, 265, 267, 273], "maximum": [10, 11, 30, 32, 33, 41, 42, 50, 56, 77, 86, 90, 93, 115, 160, 168, 183, 188, 190, 193, 197, 204, 205, 209, 210, 213, 216, 217, 232, 235], "multipli": [10, 11, 24, 28, 32, 41, 50, 61, 65, 72, 79, 81, 86, 90, 108, 117, 126, 127, 128, 140, 149, 163, 168, 169, 184, 185, 186, 188, 190, 192, 193, 197, 199, 206, 207, 210, 213, 218, 235, 245, 265, 268], "max": [10, 32, 41, 42, 50, 57, 58, 60, 77, 86, 90, 92, 93, 183, 192, 193, 197, 204, 206, 207, 236], "min": [10, 42, 46, 50, 55, 57, 86, 92, 183, 192, 197, 203, 213], "is_perfect_squar": 10, "ntheori": [10, 28, 41, 50, 51, 190, 193, 210, 235, 257], "primetest": [10, 50, 90], "is_squar": [10, 50, 81, 90], "is_prim": [10, 16, 50, 184], "isprim": [10, 28, 51, 90], "divid": [10, 41, 49, 50, 51, 66, 86, 90, 167, 168, 185, 187, 188, 190, 192, 193, 197, 213, 232, 268], "bottom_up": 10, "interactive_travers": 10, "postorder_travers": [10, 268], "preorder_travers": [10, 268], "refactor": [10, 213, 221, 232], "tr": [10, 33, 41, 197, 206], "quantum": [10, 102, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 182, 258], "ever": [10, 18, 56, 181, 184, 193, 207, 213, 230, 233, 268], "helper": [10, 30, 32, 41, 45, 48, 50, 75, 78, 79, 148, 150, 159, 194, 204, 207, 210, 213, 214, 216, 229, 260], "default_sort_kei": [10, 31, 39, 221], "matrixel": [10, 32], "matrixsymbol": [10, 13, 16, 28, 29, 32, 50, 81, 83, 86, 197, 217, 219], "layer": [10, 100, 190, 236], "imprecis": 10, "free_symbol": [10, 32, 50, 59, 77, 81, 152, 170, 173, 193, 203, 210], "sinc": [10, 11, 13, 14, 16, 17, 18, 25, 30, 32, 33, 41, 42, 43, 46, 47, 48, 50, 51, 53, 55, 57, 58, 59, 60, 62, 63, 66, 68, 74, 75, 77, 79, 80, 81, 86, 90, 103, 115, 128, 130, 139, 163, 164, 168, 172, 178, 181, 184, 185, 187, 188, 190, 192, 193, 197, 200, 205, 206, 207, 209, 210, 213, 215, 216, 217, 223, 227, 231, 232, 233, 235, 236, 240, 245, 247, 248, 250, 262, 267, 269, 272, 273, 274], "atomicexpr": 10, "concept": [10, 16, 41, 115, 181, 187, 189, 192, 197, 216, 221, 250, 266, 271], "misappli": 10, "noth": [10, 31, 41, 50, 63, 77, 147, 163, 184, 188, 196, 197, 209, 213, 215, 226, 228, 236, 238, 265], "introduc": [10, 17, 46, 49, 50, 58, 75, 86, 91, 94, 113, 115, 120, 121, 122, 126, 163, 168, 181, 188, 189, 194, 197, 204, 207, 210, 217, 233, 266, 269, 271, 273], "21494": 10, "size": [10, 14, 32, 33, 34, 39, 41, 42, 43, 44, 45, 46, 50, 51, 53, 55, 78, 81, 83, 86, 89, 90, 98, 115, 125, 126, 127, 136, 158, 159, 177, 183, 186, 190, 197, 209, 210, 213, 217, 235, 263], "die": [10, 192, 217], "arrai": [10, 18, 20, 32, 41, 42, 46, 47, 51, 58, 77, 81, 83, 86, 90, 91, 98, 130, 160, 183, 186, 188, 193, 197, 216, 217, 220, 222, 223, 224, 229, 230, 232, 236, 269], "histor": [10, 18, 51, 213, 217], "21563": 10, "revert": [10, 188, 193], "sample_it": [10, 217], "consequ": [10, 18, 28, 50, 185, 187, 265, 273], "subclass": [10, 16, 18, 26, 27, 32, 50, 57, 61, 63, 77, 80, 132, 138, 147, 151, 152, 153, 158, 160, 161, 183, 184, 186, 187, 188, 192, 193, 197, 217, 228, 229, 230, 233, 236, 242, 245, 268], "kei": [10, 11, 25, 28, 31, 39, 41, 42, 50, 51, 52, 55, 66, 79, 81, 86, 89, 90, 93, 112, 113, 123, 155, 158, 163, 181, 183, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 209, 213, 214, 215, 217, 221, 232, 235, 236, 238, 269, 270, 273], "domainmatrix": [10, 82, 86, 189, 192, 195], "switch": [10, 41, 48, 77, 90, 100, 190, 193], "21402": 10, "earlier": [10, 104, 194, 198, 207, 209, 236, 246, 248, 268], "could": [10, 11, 14, 16, 18, 27, 32, 43, 50, 62, 75, 77, 80, 110, 113, 123, 127, 163, 166, 168, 184, 186, 187, 190, 192, 194, 197, 205, 207, 209, 213, 214, 215, 216, 217, 218, 221, 222, 229, 233, 246, 247, 265, 268, 273], "traceback": [10, 11, 13, 16, 17, 18, 25, 26, 27, 32, 33, 42, 50, 51, 54, 60, 77, 80, 81, 82, 83, 84, 86, 88, 89, 92, 100, 182, 184, 187, 188, 190, 193, 196, 204, 205, 213, 215, 216, 226, 228, 229, 231, 233, 235, 236, 238, 265, 269], "typeerror": [10, 11, 17, 18, 25, 26, 27, 42, 50, 60, 65, 80, 82, 84, 88, 100, 137, 204, 205, 229, 236], "unsupport": [10, 11, 13, 100, 197], "operand": [10, 11, 42, 50, 174, 192, 244], "dict": [10, 11, 16, 32, 42, 51, 52, 66, 67, 80, 81, 86, 90, 92, 108, 109, 143, 155, 158, 169, 171, 173, 183, 186, 187, 188, 190, 192, 193, 194, 195, 197, 209, 210, 213, 214, 215, 216, 217, 221, 228, 229, 235, 242, 274], "solve_lin_si": [10, 189], "heurisch": [10, 77], "smith_normal_form": [10, 87, 186], "newmatrix": 10, "holonom": [10, 71, 74, 114, 115, 116, 117, 123, 125, 126, 252, 259], "polymatrix": 10, "risch": [10, 77, 263], "broken": [10, 39, 50, 180, 197, 213, 238], "20780": 10, "20759": 10, "20621": 10, "19882": 10, "18844": 10, "21441": 10, "21427": 10, "21496": 10, "potenti": [10, 16, 62, 83, 86, 90, 108, 109, 110, 112, 122, 123, 174, 179, 187, 192, 204, 207, 209, 213, 215, 231, 232, 244, 249, 250], "impact": 10, "downstream": [10, 16], "goal": [10, 31, 104, 131, 192, 194, 228, 229, 231, 266, 267], "perhap": [10, 32, 50, 80, 90, 148, 187, 215, 230, 262], "tableform": [10, 238], "isn": [10, 18, 77, 104, 113, 216, 267], "advis": [10, 16, 31, 113], "usecas": 10, "unclear": [10, 16, 104], "line2dbaseseri": [10, 183], "coordin": [10, 24, 32, 51, 52, 56, 58, 59, 61, 65, 67, 83, 86, 93, 96, 98, 102, 107, 108, 109, 112, 113, 114, 115, 116, 118, 120, 123, 124, 125, 126, 129, 131, 139, 141, 160, 161, 164, 172, 173, 174, 175, 176, 178, 181, 184, 192, 193, 205, 213, 242, 243, 244, 247, 249, 251, 259], "linecollect": [10, 183], "bokeh": 10, "plotli": 10, "mayavi": 10, "k3d": 10, "matplotlibbackend": [10, 183], "get_point": [10, 183], "uniformli": [10, 14, 41, 66, 67, 93, 98, 183, 231], "adapt": [10, 98, 183, 203, 215, 235, 241], "get_data": [10, 183, 239], "dft": [10, 53, 103], "fourier": [10, 50, 58, 77, 103, 156, 201], "as_explicit": [10, 83, 86, 103, 219], "exp": [10, 11, 16, 18, 24, 30, 32, 40, 49, 50, 52, 54, 55, 57, 58, 68, 69, 72, 75, 77, 81, 83, 86, 90, 102, 139, 142, 158, 164, 182, 187, 188, 193, 194, 197, 199, 204, 207, 209, 213, 214, 215, 216, 217, 218, 235, 251, 263, 267, 269, 274], "discret": [10, 30, 32, 33, 40, 42, 50, 51, 58, 90, 163, 168, 199, 202, 213, 215, 216, 253, 262], "transform": [10, 24, 29, 32, 46, 49, 50, 51, 52, 54, 55, 58, 65, 76, 83, 86, 98, 100, 115, 135, 156, 158, 160, 165, 185, 188, 190, 192, 193, 199, 204, 205, 206, 209, 210, 213, 214, 215, 216, 217, 222, 230, 236, 242, 248, 249, 253, 260, 267], "unevalu": [10, 16, 17, 18, 26, 27, 30, 42, 49, 50, 56, 58, 67, 77, 90, 100, 140, 144, 151, 152, 163, 193, 196, 204, 205, 209, 213, 215, 216, 217, 263, 267, 268, 274], "represent": [10, 18, 24, 31, 32, 33, 41, 44, 50, 51, 58, 62, 70, 72, 74, 75, 77, 79, 80, 81, 82, 83, 89, 90, 97, 98, 103, 104, 105, 112, 123, 127, 128, 132, 152, 157, 158, 160, 161, 163, 165, 172, 177, 178, 180, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 207, 209, 210, 213, 216, 217, 222, 223, 238, 242, 244, 251, 263, 265, 268], "21626": 10, "expos": [10, 31, 217], "mutat": [10, 100, 186, 188, 217], "flat": [10, 64, 81, 229], "todok": [10, 81], "ey": [10, 81, 82, 83, 84, 85, 86, 88, 186, 192, 210, 218, 223, 238, 269], "converg": [10, 32, 49, 54, 58, 76, 77, 90, 132, 193, 200, 204, 207, 263], "legacy_matrix": [10, 77], "discontinu": [10, 30, 54, 56, 58, 77, 93, 200], "theano_cod": 10, "aesara_cod": [10, 197], "theanoprint": 10, "aesaraprint": [10, 197], "predic": [10, 19, 25, 26, 30, 92, 193, 209, 235, 253], "experienc": [10, 33], "big": [10, 11, 14, 16, 34, 50, 52, 90, 130, 143, 182, 196, 197, 204, 238, 263, 265], "registr": 10, "add_handl": 10, "remove_handl": [10, 25], "multipledispatch": [10, 25], "regist": [10, 25, 26, 27, 51, 159], "register_mani": [10, 26, 27], "askprimehandl": 10, "staticmethod": [10, 228], "register_handl": [10, 25], "prime": [10, 16, 25, 26, 27, 41, 48, 49, 50, 51, 53, 55, 58, 90, 134, 184, 185, 187, 188, 189, 190, 193, 207, 209, 210, 217, 232], "Not": [10, 17, 18, 50, 55, 80, 100, 197, 216, 217, 235, 267, 274], "primepred": [10, 28], "q": [10, 11, 13, 16, 23, 24, 25, 26, 27, 28, 29, 32, 42, 46, 49, 50, 51, 58, 67, 72, 73, 75, 77, 79, 81, 86, 90, 92, 93, 100, 101, 107, 108, 109, 112, 113, 115, 117, 122, 125, 126, 127, 130, 131, 132, 143, 157, 163, 166, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 187, 188, 190, 192, 193, 194, 196, 197, 199, 207, 210, 213, 215, 217, 222, 223, 238, 242, 244, 245, 247, 250, 269, 273], "20209": 10, "stochast": 10, "timestamp": 10, "wienerprocess": [10, 217], "normaldistribut": [10, 217], "20078": 10, "misspel": 10, "absorbing_prob": [10, 217], "absorb": [10, 75, 213, 217, 263], "probabilit": [10, 217], "es": 10, "shutil": 10, "power": [10, 11, 24, 29, 32, 40, 41, 42, 51, 53, 54, 56, 72, 73, 75, 77, 79, 81, 83, 90, 91, 100, 113, 130, 135, 146, 149, 162, 165, 168, 169, 173, 184, 185, 187, 188, 189, 190, 192, 193, 197, 198, 201, 204, 206, 208, 210, 213, 215, 216, 217, 221, 230, 235, 253, 255, 262, 263, 264, 265, 266, 268, 269, 272], "immut": [10, 50, 82, 85, 88, 181, 188, 213, 218, 256, 262, 269], "coordsystem": [10, 52], "explicit": [10, 16, 18, 42, 49, 50, 54, 66, 67, 77, 89, 90, 112, 113, 117, 127, 131, 181, 184, 193, 196, 197, 199, 205, 207, 213, 214, 215, 216, 220, 232], "appropi": 10, "patch": [10, 52, 197], "real": [10, 11, 13, 14, 16, 17, 18, 24, 26, 27, 29, 30, 32, 42, 50, 51, 52, 54, 55, 56, 57, 58, 62, 66, 67, 72, 75, 77, 80, 81, 83, 86, 90, 92, 96, 102, 113, 130, 132, 135, 136, 143, 161, 175, 182, 185, 188, 189, 192, 193, 194, 197, 198, 200, 204, 207, 209, 212, 213, 215, 216, 217, 222, 226, 230, 239, 267, 273, 274], "similarli": [10, 16, 46, 50, 51, 58, 62, 86, 93, 94, 100, 108, 128, 183, 184, 187, 192, 194, 204, 205, 207, 213, 228, 236, 246, 247, 269], "manifold": [10, 52], "track": [10, 11, 41, 50, 54, 58, 112, 124, 128, 147, 181, 204, 223, 263], "coord_system": 10, "connect_to": 10, "coord_tuple_transform_to": [10, 52], "constructor": [10, 18, 26, 27, 31, 32, 37, 41, 42, 43, 50, 57, 58, 79, 84, 86, 117, 156, 157, 161, 165, 183, 184, 186, 187, 188, 189, 197, 205, 213, 222, 230, 245, 264, 268], "str": [10, 18, 26, 31, 32, 33, 42, 50, 51, 52, 54, 59, 60, 63, 66, 67, 78, 80, 83, 90, 92, 98, 107, 108, 110, 130, 147, 157, 163, 173, 175, 176, 183, 188, 192, 197, 209, 213, 217, 233, 235, 236, 238, 242], "unord": [10, 11, 50, 90, 188, 216, 235, 236], "lambidfi": 10, "guess": [10, 31, 51, 54, 75, 78, 177, 190, 193, 207, 210, 268], "construct": [10, 14, 26, 27, 31, 32, 37, 50, 52, 56, 58, 60, 64, 66, 78, 83, 86, 91, 94, 104, 108, 110, 113, 115, 148, 152, 161, 162, 165, 169, 184, 187, 188, 190, 192, 193, 197, 210, 215, 217, 218, 220, 222, 230, 232, 233, 245, 247, 248, 265, 268, 269, 273], "superclass": [10, 16, 49, 50, 77, 83, 188], "scalar": [10, 24, 50, 52, 65, 79, 81, 83, 86, 91, 110, 113, 162, 173, 174, 175, 179, 181, 184, 186, 190, 197, 213, 218, 230, 236, 242, 243, 244, 245, 246, 247, 249, 251], "boolean": [10, 18, 19, 25, 26, 27, 28, 29, 30, 32, 50, 56, 60, 64, 65, 66, 67, 78, 81, 86, 87, 90, 93, 98, 100, 148, 173, 175, 177, 183, 186, 188, 190, 192, 194, 197, 209, 213, 215, 217, 235, 244, 255, 269], "sens": [10, 14, 16, 18, 24, 28, 30, 31, 50, 52, 55, 58, 75, 80, 108, 115, 168, 173, 181, 184, 190, 192, 206, 207, 209, 216, 217, 229, 230, 235, 250, 273], "exponenti": [10, 11, 16, 24, 32, 41, 46, 50, 51, 55, 57, 77, 80, 81, 86, 90, 92, 149, 165, 194, 209, 216, 217, 264, 265, 269], "trick": [10, 11, 46, 207, 223], "treat": [10, 16, 17, 18, 40, 41, 48, 50, 55, 58, 65, 66, 86, 92, 110, 113, 136, 173, 178, 185, 187, 188, 190, 192, 193, 194, 196, 197, 204, 205, 207, 209, 210, 213, 221, 229, 232, 248, 265, 269], "cdot": [10, 16, 33, 49, 55, 58, 68, 72, 73, 75, 81, 83, 86, 90, 101, 103, 128, 168, 178, 180, 181, 182, 184, 185, 193, 200, 204, 207, 213, 215, 218, 219, 247, 248, 267, 268, 273], "attributeerror": [10, 16, 50, 86, 216, 236, 269], "as_coeff_mul": [10, 50, 75, 83], "tri": [10, 11, 16, 31, 50, 58, 66, 75, 77, 115, 127, 158, 184, 185, 192, 197, 199, 209, 213, 214, 216, 228, 265, 273], "benchmark": [10, 115, 129], "runtest": [10, 228], "tmpfile": 10, "random_complex_numb": 10, "verify_numer": 10, "test_derivative_numer": 10, "_randrang": [10, 51], "_randint": [10, 190], "as_poli": [10, 50, 185, 193], "as_expr": [10, 50, 86, 187, 192, 193, 194, 269], "combintor": 10, "perm_cycl": [10, 42, 197], "printer": [10, 18, 42, 50, 58, 78, 86, 91, 177, 222, 229, 230, 236, 254, 260, 264, 268], "init_print": [10, 22, 32, 42, 54, 77, 78, 86, 94, 177, 184, 185, 196, 263, 267, 269, 272, 273, 274], "problemat": [10, 18, 187], "affect": [10, 16, 18, 49, 50, 86, 172, 193, 216, 246], "18056": 10, "15416": 10, "100x": 10, "slowdown": [10, 54], "significantli": [10, 32, 54, 104, 125, 188, 199, 229, 232], "slower": [10, 18, 46, 86, 187, 192, 236, 262], "_sympifi": [10, 50, 83, 268], "strict": [10, 41, 42, 50, 54, 55, 81, 86, 190, 193, 215, 235, 238, 273], "lot": [10, 41, 50, 68, 75, 77, 86, 113, 130, 183, 196, 200, 210, 216, 228, 273], "secur": 10, "__repr__": [10, 197], "12524": 10, "repr": [10, 32, 77, 157, 187, 192, 197, 228, 272], "plenti": 10, "_sympy_": [10, 50], "disabl": [10, 50, 51, 75, 77, 90, 190, 193, 197, 205, 213, 215, 226, 228, 231, 235], "constant": [10, 30, 32, 49, 50, 54, 56, 58, 74, 75, 77, 93, 94, 100, 112, 113, 115, 130, 131, 140, 144, 150, 166, 167, 169, 170, 171, 174, 176, 178, 183, 185, 188, 190, 192, 193, 194, 197, 199, 204, 207, 209, 210, 213, 214, 215, 216, 217, 228, 230, 235, 236, 244, 248, 251, 263, 269, 274], "lh": [10, 32, 40, 50, 195, 197, 213, 215, 216, 247], "tensexpr": [10, 101, 223], "substitute_indic": 10, "danger": [10, 185], "tensor_head": [10, 101, 223], "had": [10, 18, 42, 50, 51, 86, 90, 113, 127, 192, 193, 194, 197, 205, 207, 213, 215, 216, 231, 236, 262, 265, 268, 269], "shorter": [10, 50, 60, 104, 125, 172, 184, 188, 197, 230, 238], "creation": [10, 11, 18, 50, 52, 86, 105, 110, 120, 123, 124, 125, 126, 127, 137, 147, 151, 152, 153, 163, 180, 181, 197, 217, 222, 230, 236], "_dummy_fmt": 10, "l_": [10, 77, 86], "obsolet": 10, "dummy_nam": [10, 223], "clearer": [10, 245], "metric_symmetri": [10, 223], "set_metr": [10, 223], "delta": [10, 11, 32, 34, 44, 55, 58, 73, 75, 79, 98, 127, 135, 163, 197, 204, 210, 213, 217, 218, 223], "epsilon": [10, 11, 49, 51, 58, 75, 77, 134, 197, 223], "latter": [10, 13, 18, 32, 41, 50, 55, 58, 75, 90, 184, 188, 192, 197, 207, 210, 223, 230, 235, 236, 265], "involv": [10, 11, 14, 16, 27, 29, 41, 49, 50, 51, 55, 62, 63, 75, 77, 90, 100, 105, 108, 113, 142, 152, 158, 160, 170, 180, 181, 184, 185, 188, 190, 192, 193, 194, 198, 199, 204, 205, 206, 207, 209, 210, 213, 215, 218, 236, 273], "obscur": [10, 16], "young": [10, 93, 223], "tableau": 10, "favor": 10, "tensorindex": [10, 223], "tensor_indic": [10, 101, 223], "denot": [10, 11, 14, 41, 42, 50, 52, 58, 72, 73, 75, 77, 79, 80, 81, 86, 90, 92, 100, 168, 173, 178, 183, 184, 185, 190, 192, 200, 204, 205, 207, 213, 217, 222, 223, 242, 243, 245, 246, 248, 250], "set_dimens": 10, "unit_system": [10, 170], "set_quantity_dimens": [10, 166], "set_global_dimens": 10, "set_scale_factor": 10, "set_quantity_scale_factor": [10, 166], "set_global_relative_scale_factor": [10, 170], "get_dimensional_expr": 10, "unitsystem": [10, 171], "dimension": [10, 30, 32, 34, 52, 62, 63, 64, 65, 66, 83, 86, 94, 101, 130, 137, 139, 149, 165, 167, 178, 179, 183, 184, 190, 192, 193, 196, 197, 215, 216, 218, 219, 223, 229, 250, 274], "_collect_factor_and_dimens": 10, "motiv": [10, 12, 18, 21], "emptyset": [10, 16, 30, 31, 80, 197, 216, 242, 274], "is_empti": [10, 16, 42], "unknown": [10, 13, 16, 17, 18, 24, 50, 51, 94, 148, 195, 212, 213, 214, 215, 216, 235, 274], "empti": [10, 16, 26, 30, 31, 32, 33, 41, 45, 49, 50, 62, 65, 66, 67, 80, 81, 86, 90, 108, 127, 158, 171, 188, 192, 193, 197, 203, 204, 205, 207, 213, 215, 216, 228, 230, 235, 238, 268], "individu": [10, 16, 18, 50, 56, 61, 66, 67, 79, 81, 83, 86, 100, 128, 135, 153, 157, 182, 205, 213, 228, 269], "denest": [10, 50, 193, 208, 215, 235], "particl": [10, 105, 107, 108, 113, 117, 118, 123, 125, 127, 130, 131, 139, 142, 149, 150, 161, 163, 166, 168, 180, 223], "rigidbodi": [10, 105, 108, 112, 115, 120, 121, 122, 123, 128, 130], "potential_energi": [10, 107, 108, 122, 123, 128], "energi": [10, 102, 105, 108, 110, 113, 122, 123, 139, 164, 168, 178, 223, 248, 258], "setter": [10, 113, 130], "getter": [10, 50, 113, 130], "set_": 10, "set_condit": 10, "17749": 10, "side": [10, 11, 14, 16, 32, 41, 42, 50, 62, 66, 77, 86, 90, 93, 100, 108, 112, 127, 128, 131, 151, 152, 168, 173, 182, 184, 190, 192, 195, 197, 214, 216, 217, 221, 228, 230, 251, 263], "unpack": [10, 50, 81, 86, 235, 236], "intermedi": [10, 32, 33, 73, 81, 113, 115, 120, 147, 157, 165, 166, 173, 176, 180, 216, 230, 270], "emul": [10, 209, 216, 218, 236], "is_deriv": [10, 50], "as_finite_differ": [10, 30, 50, 263], "17881": 10, "get_matrix": [10, 223], "__getitem__": [10, 50, 81, 222], "__iter__": [10, 42, 50, 209], "_components_data_full_destroi": 10, "__pow__": [10, 81, 188, 194], "flaw": 10, "replace_with_arrai": [10, 223, 224], "cach": [10, 16, 55, 75, 184, 193, 197, 226, 231, 232, 253], "safe": [10, 90, 187, 193, 215, 221, 263], "squar": [10, 11, 16, 24, 27, 32, 41, 50, 51, 56, 66, 67, 75, 77, 81, 82, 86, 89, 90, 93, 100, 102, 125, 126, 149, 165, 173, 182, 186, 188, 189, 190, 192, 193, 194, 197, 205, 208, 210, 213, 216, 217, 267], "jordan": [10, 75, 81, 86, 195, 215, 216], "band": [10, 81, 89], "eigenvalu": [10, 81, 86, 113, 115, 157, 160, 267], "elif": [10, 16, 17, 18], "inspect": [10, 16, 86, 192, 203, 234, 236, 260], "getsourc": [10, 236, 240], "sum": [10, 14, 16, 32, 39, 42, 49, 50, 53, 55, 58, 63, 65, 73, 75, 77, 79, 80, 81, 83, 86, 90, 110, 125, 142, 146, 149, 157, 160, 162, 163, 182, 184, 185, 187, 188, 192, 193, 194, 197, 199, 200, 202, 204, 206, 207, 209, 210, 213, 215, 216, 217, 218, 219, 221, 223, 232, 235, 253, 273], "meter": [10, 93, 94, 134, 137, 166, 168, 169, 170], "si": [10, 18, 58, 74, 75, 136, 165, 166, 168, 169, 170, 197], "cg": [10, 142, 160], "aris": [10, 16, 17, 50, 55, 75, 77, 160, 181, 187, 192], "scale": [10, 59, 60, 61, 65, 66, 67, 78, 93, 143, 164, 166, 168, 170, 171, 177, 181, 183, 200, 217, 248, 250], "kilomet": [10, 169, 170], "1000": [10, 11, 32, 34, 50, 51, 54, 83, 90, 130, 168, 169, 170, 182, 196, 197, 206], "dimensionsystem": [10, 165], "14318": 10, "duplic": [10, 11, 41, 44, 51, 56, 58, 86, 90, 205, 213, 235, 266], "flatten": [10, 31, 50, 187, 219, 224, 235, 236], "neither": [10, 16, 17, 28, 50, 137, 158, 183, 193, 204, 205, 206, 213, 223, 236, 242, 250, 273], "polymorph": 10, "anymor": [10, 183], "temporarili": [10, 50], "point3d": [10, 63, 64, 65, 136], "p1": [10, 33, 41, 42, 46, 49, 60, 62, 63, 64, 65, 66, 100, 105, 107, 117, 130, 132, 176, 183, 187, 188, 190, 194, 206, 217, 218], "p2": [10, 17, 41, 42, 49, 60, 62, 63, 64, 65, 66, 100, 105, 107, 130, 176, 183, 187, 188, 190, 194, 206, 217], "behav": [11, 28, 30, 50, 51, 56, 58, 90, 193, 205, 209, 215, 218, 224, 269], "independ": [11, 18, 28, 30, 32, 41, 49, 50, 52, 58, 67, 75, 77, 79, 86, 100, 108, 109, 113, 115, 117, 125, 127, 161, 168, 178, 183, 185, 187, 192, 193, 199, 200, 207, 209, 210, 213, 214, 215, 216, 217, 223, 228, 229, 248, 267, 268], "mapl": [11, 77, 213, 260, 267], "mathematica": [11, 32, 42, 92, 260, 267, 269], "faq": 11, "introductori": [11, 14, 21, 22, 130, 187, 188, 193], "remaind": [11, 49, 50, 51, 90, 185, 187, 188, 191, 193, 213], "familiar": [11, 18, 77, 113, 128, 147, 194, 263, 265, 271], "java": 11, "minut": [11, 104, 115, 172], "subtract": [11, 32, 42, 50, 54, 65, 90, 100, 107, 165, 185, 186, 187, 188, 190, 192, 193, 268, 273], "proper": [11, 41, 50, 77, 90, 104, 113, 172, 187, 188, 192, 197, 205, 213, 218, 229, 230, 248, 269], "trigsimp": [11, 24, 50, 86, 107, 113, 121, 173, 206, 245], "unequ": [11, 93, 197], "fill": [11, 15, 41, 51, 81, 83, 86, 89, 163, 183, 228, 231, 235, 238, 269], "alter": [11, 33, 41, 50, 173, 187, 197, 199, 216], "afterward": [11, 32, 50, 110, 117], "quantiti": [11, 42, 50, 55, 58, 62, 67, 94, 104, 108, 121, 128, 142, 165, 167, 171, 178, 180, 181, 192, 209, 217, 245, 249, 250, 258], "simultan": [11, 50, 63, 81, 90, 183, 206], "var": [11, 30, 32, 49, 54, 55, 73, 77, 80, 86, 100, 173, 183, 192, 196, 197, 209, 210, 236, 274], "rate": [11, 115, 180, 217, 248, 263], "short_lif": 11, "haven": 11, "160": [11, 93, 191], "bodi": [11, 32, 75, 92, 103, 104, 107, 108, 110, 112, 113, 115, 116, 117, 118, 120, 123, 124, 125, 130, 131, 166, 172, 173, 176, 180, 181, 242, 243, 249], "ctimesd": 11, "circular": [11, 16, 98, 135, 190], "relationship": [11, 16, 32, 50, 55, 57, 77, 90, 124, 147, 173, 178, 181, 187, 215], "runtimeerror": [11, 30, 205, 216, 235], "compileflag": [11, 228], "glob": [11, 228], "recurs": [11, 13, 16, 18, 30, 50, 55, 75, 77, 80, 81, 90, 115, 183, 190, 193, 194, 197, 198, 201, 202, 204, 209, 215, 216, 221, 226, 228, 232, 233, 235, 264, 273], "exceed": [11, 115], "stdin": [11, 231, 233], "nameerror": [11, 78, 231, 265], "__future__": [11, 14, 265, 272], "divis": [11, 18, 50, 86, 90, 165, 184, 187, 188, 189, 190, 193, 195, 197, 213, 215, 228, 236, 265, 268, 272], "cl": [11, 16, 18, 32, 41, 50, 77, 81, 163, 176, 188, 192, 213, 222, 231, 235, 247, 263, 272, 274], "dir": [11, 50, 93, 199, 204, 235], "u": [11, 24, 30, 31, 41, 49, 50, 51, 53, 64, 67, 72, 75, 77, 83, 86, 90, 107, 108, 109, 112, 113, 115, 117, 120, 125, 127, 128, 130, 131, 136, 147, 152, 176, 178, 180, 183, 185, 186, 190, 192, 197, 207, 209, 210, 213, 214, 215, 216, 217, 222, 248], "__builtins__": 11, "__file__": [11, 239], "__name__": [11, 197, 239], "__package__": 11, "_greek": 11, "_latin": 11, "chi": [11, 58, 75, 135, 197, 207, 217, 223], "eta": [11, 58, 75, 192, 197, 213, 214, 217], "iota": [11, 197], "kappa": [11, 197, 217], "mu": [11, 58, 75, 90, 101, 103, 134, 197, 217, 223], "omega": [11, 32, 33, 41, 75, 90, 105, 110, 112, 128, 131, 137, 139, 164, 173, 176, 177, 180, 182, 197, 204, 217], "omicron": [11, 197], "phi": [11, 41, 50, 51, 55, 58, 75, 79, 86, 90, 102, 130, 137, 146, 148, 182, 184, 192, 197, 213, 242, 251], "psi": [11, 58, 75, 135, 146, 147, 153, 161, 192, 197, 223], "rho": [11, 52, 75, 86, 90, 116, 157, 197, 217, 223, 251], "sigma": [11, 42, 73, 75, 81, 86, 197, 200, 217], "tau": [11, 32, 75, 77, 86, 192, 197, 213], "theta": [11, 50, 52, 56, 58, 75, 78, 86, 92, 102, 112, 131, 135, 173, 181, 182, 188, 192, 197, 200, 205, 216, 217, 242, 243, 246, 248, 251], "upsilon": [11, 197], "xi": [11, 18, 52, 75, 197, 213, 214, 215], "zeta": [11, 49, 50, 54, 55, 57, 188, 192, 197, 204, 217], "lastli": [11, 77, 94, 131, 213], "unit": [11, 18, 24, 27, 31, 50, 51, 55, 63, 64, 65, 77, 86, 90, 93, 98, 100, 102, 103, 113, 128, 130, 139, 164, 165, 166, 170, 172, 173, 178, 181, 183, 185, 188, 190, 192, 193, 195, 197, 205, 207, 210, 216, 218, 242, 243, 245, 250, 251, 258], "sympifi": [11, 16, 17, 32, 54, 60, 80, 128, 136, 161, 163, 173, 174, 187, 188, 253, 262, 268], "hold": [11, 18, 27, 31, 41, 46, 50, 51, 52, 56, 58, 72, 75, 86, 89, 92, 100, 102, 107, 109, 110, 128, 159, 193, 207, 209, 213, 217, 230, 273], "mnemon": [11, 206, 235], "osineq": 11, "lowercas": [11, 213, 228, 263], "overrid": [11, 32, 50, 59, 60, 66, 92, 161, 197, 222, 229, 230, 235, 236], "care": [11, 17, 18, 41, 50, 58, 77, 86, 93, 104, 113, 127, 173, 181, 187, 192, 209, 210, 213, 215, 216, 221, 224, 229, 262, 265, 267], "notic": [11, 18, 41, 42, 48, 50, 86, 151, 172, 187, 207, 223, 224, 235, 236, 265, 267, 268, 273], "reimport": 11, "restor": [11, 187, 209], "__": [11, 58, 77, 197, 217, 222], "press": [11, 31, 33, 34, 42, 51, 77, 81, 182, 191, 210, 215], "autocomplet": 11, "lose": [11, 184], "abil": [11, 16, 30, 86, 123, 192, 196, 213, 216, 267, 273], "past": [11, 56, 90, 196, 197, 272], "f1": [11, 41, 75, 77, 86, 100, 105, 113, 121, 130, 183, 188, 190, 193, 197, 199, 215], "f2": [11, 50, 75, 86, 100, 105, 113, 121, 130, 166, 183, 190, 193, 197, 199, 215], "6": [11, 12, 14, 24, 26, 27, 30, 32, 33, 34, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 72, 73, 75, 77, 79, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 96, 98, 100, 101, 102, 115, 116, 120, 121, 122, 132, 136, 142, 160, 172, 173, 181, 182, 183, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 209, 210, 214, 215, 216, 217, 218, 228, 229, 232, 235, 236, 242, 244, 246, 251, 263, 269, 273, 274], "accuraci": [11, 14, 30, 50, 193, 253, 269], "2000000000000002": 11, "py3k": 11, "20000000000000": 11, "sympyifi": 11, "shorthand": [11, 16, 18, 50, 80, 157, 192, 205, 226], "worri": [11, 50, 268], "reus": [11, 18, 32, 163, 267], "142857142857143": 11, "One": [11, 13, 16, 18, 30, 31, 32, 40, 42, 49, 55, 56, 58, 69, 72, 74, 75, 77, 80, 86, 90, 93, 94, 113, 128, 130, 139, 168, 188, 190, 191, 193, 196, 199, 205, 209, 215, 216, 217, 218, 223, 236, 248, 262, 263, 265, 268, 269, 273], "achiev": [11, 18, 50, 54, 58, 83, 90, 113, 130, 196, 204, 207, 209, 216, 231, 246], "receiv": [11, 50, 51, 90, 105, 158, 192, 222], "fraction": [11, 50, 51, 54, 56, 66, 77, 86, 90, 106, 169, 187, 188, 189, 190, 191, 194, 197, 199, 210, 213, 215, 264], "interpret": [11, 17, 19, 32, 41, 49, 50, 55, 58, 63, 66, 77, 81, 83, 86, 90, 92, 104, 168, 183, 185, 192, 193, 197, 204, 210, 215, 216, 217, 222, 228, 229, 232, 238, 269], "100": [11, 18, 32, 34, 39, 49, 50, 51, 54, 58, 66, 73, 80, 81, 86, 90, 93, 183, 187, 192, 194, 196, 197, 204, 215, 216, 235, 262], "000000000000": 11, "00": [11, 50, 90, 147, 157, 210, 235], "null": [11, 50, 86], "34": [11, 32, 42, 55, 63, 86, 90, 145, 191, 196, 203, 209, 210], "3400000000000": 11, "250": [11, 90, 210], "143": [11, 142, 182], "next": [11, 14, 16, 18, 23, 32, 33, 34, 39, 41, 42, 44, 45, 50, 51, 56, 75, 77, 80, 86, 90, 104, 105, 108, 116, 117, 118, 120, 122, 123, 124, 131, 180, 181, 184, 188, 192, 193, 197, 205, 207, 210, 213, 232, 233, 235, 266, 267, 268], "appar": [11, 50, 238, 273], "binari": [11, 17, 18, 28, 32, 34, 45, 50, 51, 77, 80, 90, 91, 157, 169, 184, 187, 193, 210, 229, 232, 235], "decim": [11, 18, 32, 50, 53, 54, 90, 92, 98, 187, 193, 267], "far": [11, 31, 50, 64, 77, 184, 187, 197, 207, 236, 262, 263, 265], "142857": 11, "25000000000000000000": 11, "14285278320312500000": 11, "realiz": [11, 35, 41, 52, 80, 90, 117, 184, 185, 190, 217], "pad": [11, 32, 51, 52, 53, 65, 90], "inexact": [11, 50, 188], "low": [11, 16, 17, 32, 50, 51, 58, 90, 187, 190, 195, 197, 209, 229, 230, 235], "higher": [11, 14, 30, 32, 50, 52, 54, 58, 61, 86, 176, 182, 184, 187, 190, 193, 199, 200, 204, 206, 209, 213, 215, 218, 236, 263], "engin": [11, 96, 129, 130, 179, 213, 272], "increas": [11, 30, 31, 42, 48, 49, 50, 53, 54, 58, 81, 90, 91, 104, 114, 147, 172, 173, 175, 180, 181, 187, 190, 192, 193, 199, 202, 206, 213, 217, 233, 235], "2000061035": 11, "maintain": [11, 50, 51, 90, 94, 197, 205, 206, 213, 216, 232], "highest": [11, 32, 44, 79, 104, 184, 193, 200, 210, 213], "hopefulli": [11, 15, 75], "unsimplifi": [11, 206], "12345678901234567890": 11, "big_trig_ident": 11, "ab": [11, 29, 32, 33, 49, 50, 51, 54, 55, 57, 58, 62, 73, 75, 80, 81, 86, 96, 102, 130, 163, 185, 188, 192, 193, 197, 210, 212, 215, 216, 217, 223, 232, 235, 238, 247, 273], "gave": [11, 50, 235], "gain": [11, 51, 100, 125, 126, 130], "impress": 11, "91": [11, 33, 191, 196, 203, 217], "compar": [11, 16, 30, 32, 42, 47, 50, 56, 67, 80, 86, 90, 91, 115, 142, 166, 170, 187, 190, 193, 194, 197, 202, 204, 209, 213, 216, 218, 222, 228, 235, 265, 268, 273], "4e": [11, 215], "nearli": [11, 90, 206], "snippet": [11, 32], "expr_modifi": 11, "__main__": [11, 32, 269], "declar": [11, 16, 32, 63, 75, 86, 92, 101, 113, 115, 130, 142, 186, 197, 204, 207, 212, 213, 214, 217, 230], "asid": [11, 80, 213, 214, 267], "2x": [11, 50, 58, 75, 92, 209, 210, 216, 217, 262, 265, 273], "syntaxerror": [11, 92], "pprint": [11, 18, 30, 31, 52, 58, 77, 86, 90, 100, 135, 182, 197, 198, 205, 209, 213, 214, 216, 217, 235, 272], "asin": [11, 57, 58, 64, 194, 197, 207, 209, 213, 217, 273], "arcsin": [11, 56, 194, 197, 217], "arcco": [11, 56, 197], "root": [11, 16, 18, 20, 30, 32, 49, 50, 51, 57, 58, 72, 73, 74, 75, 77, 79, 82, 86, 90, 130, 168, 182, 184, 185, 188, 189, 192, 194, 196, 197, 207, 208, 213, 215, 216, 217, 228, 232, 235, 267, 269, 272, 274], "expon": [11, 29, 32, 37, 50, 51, 56, 57, 58, 75, 77, 83, 90, 98, 100, 169, 185, 186, 187, 189, 193, 194, 197, 206, 209, 213, 216, 221, 232, 273], "half": [11, 18, 32, 51, 55, 56, 58, 60, 66, 77, 79, 86, 90, 92, 93, 132, 135, 160, 182, 188, 190, 192, 193, 205, 206, 207, 209, 217, 228, 235], "denomin": [11, 50, 54, 58, 77, 90, 100, 106, 185, 187, 188, 190, 192, 193, 196, 197, 206, 207, 209, 210, 213, 215, 273], "wild": [11, 209, 235], "interest": [11, 18, 46, 50, 52, 55, 56, 66, 75, 77, 86, 90, 114, 115, 163, 168, 181, 184, 188, 192, 193, 194, 196, 204, 207, 209, 210, 215, 216, 229, 230, 246, 263, 266, 268, 269, 270, 273], "sq": [11, 210], "lambda": [11, 18, 26, 27, 30, 32, 41, 42, 51, 52, 56, 77, 81, 82, 83, 86, 89, 90, 92, 113, 126, 127, 130, 131, 148, 183, 190, 192, 193, 197, 198, 205, 206, 209, 213, 215, 216, 217, 218, 226, 235, 236, 242, 243, 246, 262, 269], "is_pow": [11, 32, 50, 56], "is_rat": [11, 16, 192, 235], "bracket": [11, 18, 42, 50, 58, 161, 163, 173, 197], "mutabl": [11, 33, 50, 82, 83, 84, 93, 188, 197, 198, 209, 218, 269], "notat": [11, 14, 38, 42, 43, 49, 50, 51, 55, 58, 75, 83, 86, 92, 100, 161, 172, 173, 177, 181, 184, 197, 204, 208, 209, 216, 222, 223, 235, 248, 263], "curli": [11, 113, 197], "integr": [11, 13, 20, 22, 24, 30, 42, 49, 50, 52, 55, 56, 57, 68, 69, 70, 73, 79, 81, 86, 89, 90, 100, 102, 108, 113, 123, 130, 149, 158, 161, 164, 167, 172, 174, 178, 182, 184, 187, 188, 189, 190, 193, 194, 197, 199, 200, 207, 213, 214, 217, 230, 238, 242, 244, 245, 248, 249, 253, 264, 267, 272], "suppli": [11, 30, 31, 32, 41, 42, 50, 52, 60, 64, 86, 90, 105, 108, 110, 115, 117, 120, 125, 126, 136, 163, 172, 176, 181, 183, 192, 194, 199, 206, 213, 229, 235, 236, 242, 243, 246], "powsimp": [11, 50, 56, 206], "deep": [11, 18, 50, 56, 80, 81, 193, 204, 209, 217, 268], "measur": [11, 24, 56, 58, 66, 82, 104, 143, 152, 157, 165, 168, 170, 172, 173, 176, 178, 181, 193, 205, 206, 209, 217, 241, 242, 244, 245, 247, 248, 250], "count_op": [11, 206, 209], "strictli": [11, 13, 15, 16, 28, 30, 50, 58, 86, 90, 100, 190, 209, 215], "radic": [11, 50, 51, 86, 184, 192, 193, 209, 215, 216], "join": [11, 42, 50, 51, 63, 81, 93, 94, 197, 209, 213, 218, 235, 239], "autoexpand": [11, 209], "violat": [11, 113, 182, 194, 209], "naiv": [11, 13, 41, 47, 50, 75, 81, 86, 168, 207, 215, 216, 223], "strategi": [11, 33, 50, 77, 190, 191, 204, 207, 209, 214], "radsimp": [11, 50, 208], "togeth": [11, 14, 32, 41, 50, 54, 79, 86, 90, 123, 149, 160, 168, 181, 184, 188, 190, 192, 193, 196, 197, 209, 213, 215, 217, 228, 229, 235, 267, 273], "logcombin": [11, 208, 213, 216], "robust": [11, 47, 50, 54, 189, 209, 213], "cancel": [11, 14, 18, 32, 50, 54, 58, 66, 75, 77, 86, 90, 100, 101, 187, 188, 190, 193, 196, 209, 215, 267], "topic": [12, 19, 21, 32, 123, 128, 179, 180, 181, 182, 184, 186, 187, 192, 216, 265, 270], "behind": [12, 21, 101, 113, 127, 167, 186, 206, 209, 213, 216, 258, 265], "decis": [12, 21, 50, 56, 77, 206, 215, 230], "opinion": [12, 21], "gotcha": [12, 19, 50, 123, 181, 236, 266, 274], "pitfal": [12, 18, 181, 187, 265, 270, 273], "finit": [12, 15, 16, 27, 32, 36, 37, 38, 41, 49, 50, 51, 53, 54, 77, 79, 80, 149, 173, 182, 185, 188, 189, 191, 193, 194, 197, 199, 200, 203, 205, 210, 212, 213, 216, 235, 242, 243, 253, 264, 267, 273], "classif": [12, 15, 50, 213, 214], "classifi": [13, 86, 187, 213, 214, 216, 217], "isinst": [13, 16, 18, 32, 50, 81, 83, 100, 187, 188, 197, 198, 209, 218, 221, 230, 268], "distinguish": [13, 16, 17, 31, 41, 54, 79, 113, 162, 168, 184], "matrix": [13, 14, 16, 20, 24, 27, 32, 39, 42, 50, 51, 52, 58, 65, 75, 77, 79, 81, 84, 85, 88, 89, 91, 92, 100, 101, 103, 105, 107, 108, 109, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 130, 131, 132, 135, 136, 138, 146, 147, 152, 157, 158, 160, 162, 163, 165, 168, 172, 173, 181, 182, 184, 186, 190, 192, 195, 197, 198, 205, 207, 209, 210, 215, 216, 218, 219, 221, 222, 223, 224, 229, 230, 235, 236, 238, 242, 243, 244, 246, 250, 256, 264, 267, 268, 273, 274], "former": [13, 32, 50, 55, 113, 190, 192, 193, 210, 235], "retriev": [13, 48, 81, 193, 209, 223], "numberkind": [13, 81, 205], "matrixkind": [13, 50, 85, 205], "guarante": [13, 16, 32, 41, 42, 50, 62, 75, 77, 86, 187, 190, 192, 193, 213, 215, 216, 233, 238, 269, 273], "catch": [13, 50, 213, 228, 269], "theori": [13, 18, 27, 33, 39, 40, 41, 42, 48, 50, 51, 55, 58, 79, 87, 90, 108, 113, 127, 129, 142, 160, 163, 173, 176, 186, 190, 191, 192, 196, 210, 232, 242, 259, 267], "is_subset": [13, 205], "valueerror": [13, 16, 25, 27, 30, 32, 33, 42, 50, 51, 59, 60, 63, 65, 66, 77, 81, 83, 86, 89, 90, 93, 98, 100, 137, 176, 178, 182, 184, 186, 190, 192, 205, 213, 215, 216, 235, 238, 248], "odd": [13, 16, 25, 27, 29, 38, 42, 50, 51, 55, 56, 58, 80, 89, 90, 101, 192, 197, 215], "appliedpred": [13, 25, 26, 27], "quit": [14, 18, 58, 86, 90, 115, 180, 183, 194, 196, 207, 215, 250, 265, 268], "analysi": [14, 32, 33, 41, 50, 51, 56, 97, 115, 127, 128, 131, 167, 184, 193, 207, 210, 217], "vari": [14, 30, 32, 50, 64, 66, 98, 104, 108, 128, 161, 181, 204, 215, 235, 248], "hope": [14, 41, 104, 184], "research": [14, 42, 194, 209], "effici": [14, 16, 30, 32, 34, 41, 46, 50, 53, 54, 55, 66, 67, 83, 86, 90, 91, 100, 108, 130, 182, 185, 186, 187, 188, 190, 193, 194, 195, 196, 209, 210, 215, 229, 236, 262, 268, 269, 273], "establish": [14, 46, 75, 107, 118, 207], "state": [14, 16, 41, 48, 50, 58, 90, 93, 100, 102, 107, 108, 109, 112, 115, 117, 131, 135, 139, 140, 142, 143, 144, 146, 147, 148, 152, 155, 157, 158, 159, 160, 162, 163, 193, 197, 206, 207, 209, 217, 232, 258, 269], "envis": 14, "along": [14, 18, 32, 41, 50, 51, 52, 56, 58, 59, 60, 64, 65, 68, 70, 73, 75, 81, 83, 86, 93, 94, 96, 103, 104, 107, 108, 115, 117, 120, 121, 122, 124, 125, 126, 127, 130, 132, 160, 172, 173, 178, 181, 183, 186, 187, 192, 193, 213, 216, 244, 248, 250], "small": [14, 32, 33, 41, 42, 50, 54, 55, 77, 80, 86, 90, 100, 117, 121, 130, 160, 182, 183, 190, 191, 192, 209, 210, 215, 235, 262, 265, 267], "x_": [14, 32, 40, 50, 51, 55, 92, 188, 190, 193, 199, 210, 213, 218], "taylor": [14, 50, 56, 113, 127, 130, 188, 190, 193, 194, 204, 213], "let": [14, 16, 17, 18, 30, 32, 41, 46, 50, 51, 60, 68, 73, 75, 79, 83, 86, 87, 90, 92, 105, 113, 130, 168, 173, 180, 184, 185, 186, 190, 192, 193, 194, 197, 204, 207, 209, 210, 213, 215, 216, 223, 226, 229, 233, 236, 246, 247, 251, 262, 265, 267, 268, 273], "frac": [14, 16, 18, 30, 49, 50, 51, 52, 55, 57, 58, 75, 77, 86, 90, 92, 100, 117, 128, 166, 177, 178, 180, 181, 182, 186, 190, 193, 197, 199, 200, 204, 207, 210, 213, 214, 216, 217, 218, 235, 248, 250, 263, 267, 268, 272, 273], "df": [14, 52, 213], "c_": [14, 20, 51, 73, 75, 181, 185, 213], "grid": [14, 30, 31, 98, 183], "f_": [14, 50, 55, 58, 77, 125, 126, 127, 190, 196, 197, 207, 213], "constraint": [14, 86, 94, 100, 107, 108, 109, 112, 113, 115, 116, 117, 119, 123, 125, 126, 127, 130, 194], "formul": [14, 107, 116, 117, 123, 125, 126, 163, 181], "assess": 14, "brute": [14, 206, 210], "frequent": [14, 41, 192, 204, 216], "cover": [14, 90, 92, 104, 113, 172, 180, 223, 230, 263, 265], "treatment": [14, 75, 193], "shall": [14, 41, 75, 113, 130, 204, 207, 268], "job": [14, 18, 42, 143, 194, 197], "truncat": [14, 42, 50, 86, 90, 94, 168, 183, 194, 196, 199, 200], "approx": [14, 20, 50, 77], "lowest": [14, 32, 41, 46, 90, 184, 199, 216], "2h": 14, "elimin": [14, 32, 46, 50, 80, 82, 86, 104, 188, 195, 196, 198, 200, 208, 213, 215, 216, 223, 230, 269], "print_funct": 14, "x0": [14, 30, 32, 40, 50, 58, 69, 71, 73, 74, 90, 135, 187, 198, 199, 204, 209, 213, 215, 217, 235, 263], "x_0": [14, 40, 41, 51, 72, 73, 74, 190, 199, 210, 213, 217, 263], "fi": 14, "fip1": 14, "fip2": 14, "c_0": [14, 51, 73], "c_1": [14, 51, 73, 75, 204, 207, 213], "c_2": [14, 75, 204, 213], "2f": [14, 274], "c_i": [14, 75, 204, 207, 213], "nth": [14, 50, 55, 58, 79, 90, 188, 193, 194, 203, 209, 213, 217], "degre": [14, 33, 41, 48, 49, 55, 58, 66, 77, 81, 86, 93, 96, 98, 100, 107, 108, 113, 114, 117, 123, 131, 135, 181, 184, 185, 188, 190, 192, 193, 196, 200, 203, 206, 207, 209, 210, 213, 215, 217, 242], "x_i": [14, 18, 40, 58, 77, 86, 185, 188, 190, 193, 194, 197, 216], "m11": [14, 217], "m12": [14, 217], "m13": 14, "m21": [14, 217], "m22": [14, 217], "m23": 14, "m31": 14, "m32": 14, "m33": [14, 90], "3x3": [14, 65, 86, 246], "invert": [14, 27, 50, 51, 81, 83, 86, 100, 117, 165, 185, 187, 188, 192, 193, 213, 215, 216, 223, 269], "inv": [14, 42, 82, 86, 107, 108, 115, 120, 121, 130, 152, 186, 213], "fim1": 14, "wherea": [14, 16, 28, 32, 51, 60, 66, 75, 80, 100, 168, 184, 187, 193, 197, 215, 216, 235, 273], "eight": [14, 197], "dfdxcheck": 14, "c3": [14, 53, 79, 81, 83, 90, 213, 217, 247, 274], "c5": [14, 213], "120": [14, 49, 50, 55, 56, 72, 90, 93, 94, 194, 196, 197, 199, 213, 263], "c7": [14, 41], "5040": [14, 55, 72, 193, 194], "quickli": [14, 18, 41, 42, 50, 51, 54, 90, 190, 193, 206, 216, 232], "tediou": [14, 77], "attempt": [14, 17, 18, 32, 41, 46, 48, 50, 54, 55, 62, 75, 77, 86, 90, 104, 106, 158, 187, 192, 199, 204, 206, 209, 210, 213, 215, 216, 217, 228, 265, 273], "certainli": [14, 62, 92, 232], "fine": [14, 18, 50, 54, 78, 177, 187, 197, 209], "data": [14, 32, 41, 50, 51, 58, 77, 86, 91, 98, 108, 142, 183, 184, 187, 188, 190, 193, 194, 197, 209, 222, 223, 228, 230, 232, 235, 239], "devis": 14, "xn": [14, 18, 188], "x_n": [14, 18, 33, 40, 51, 72, 86, 185, 188, 190, 193, 210, 216], "fn": [14, 77, 86, 184, 193], "fnm1": 14, "fnm2": 14, "dth": 14, "Of": [14, 16, 49, 75, 86, 213, 216, 235, 273], "cours": [14, 16, 34, 41, 49, 58, 75, 77, 86, 87, 90, 178, 186, 187, 191, 192, 204, 206, 207, 248, 273], "etc": [14, 16, 17, 27, 30, 32, 46, 50, 51, 55, 56, 68, 79, 80, 85, 90, 113, 134, 143, 147, 160, 163, 167, 175, 178, 180, 181, 183, 184, 185, 187, 190, 192, 197, 198, 205, 206, 207, 209, 213, 216, 217, 221, 229, 230, 235, 246, 250], "discrit": 14, "bengt": [14, 30], "fornberg": [14, 30], "weight": [14, 50, 58, 65, 67, 77, 79, 86, 147, 209, 253, 263], "gap": [15, 41, 90, 113, 194], "matur": [15, 16, 215, 216], "elsewher": [16, 55, 79, 115, 186, 228], "concret": [16, 31, 42, 50, 55, 56, 77, 79, 86, 90, 113, 168, 188, 192, 197, 253], "seem": [16, 18, 74, 75, 113, 168, 184, 209, 213, 273], "obviou": [16, 17, 18, 41, 49, 184, 187, 196, 210, 267], "situat": [16, 54, 75, 181, 213, 215, 217, 233, 265], "surpris": [16, 216], "refus": [16, 273], "roughli": [16, 50, 51, 91, 114, 213, 236], "infinit": [16, 18, 27, 49, 50, 51, 54, 55, 56, 63, 64, 77, 86, 90, 100, 119, 149, 168, 184, 192, 197, 198, 199, 202, 203, 204, 205, 209, 210, 211, 212, 215, 222, 235, 273, 274], "queri": [16, 17, 18, 25, 28, 29, 30, 32, 50, 62, 193, 209, 217, 253], "is_posit": [16, 17, 18, 50, 175, 188], "is_neg": [16, 18, 188], "fuzzi": [16, 18, 19], "interprett": 16, "unknow": 16, "resolv": [16, 17, 50, 206, 209], "undecid": [16, 18, 86, 187, 216, 269], "heurist": [16, 42, 75, 77, 81, 190, 191, 204, 206, 209, 211, 215, 216, 228, 263, 273], "conclud": [16, 58, 73, 115, 178, 204, 215, 250], "particularli": [16, 54, 77, 187, 188, 207, 273, 274], "mix": [16, 23, 49, 56, 81, 86, 92, 172, 187, 188, 193, 197, 216, 219, 221, 223, 236], "ideal": [16, 32, 87, 110, 113, 123, 173, 180, 186, 188, 189, 190, 191, 192, 193, 194, 209, 216, 242], "slow": [16, 18, 46, 50, 54, 77, 91, 104, 115, 135, 172, 181, 187, 188, 197, 198, 199, 200, 209, 213, 215, 216, 228, 229, 273], "indetermin": [16, 17, 50, 86, 190, 202, 215], "never": [16, 18, 50, 56, 77, 165, 193, 194, 197, 205, 215, 217, 226, 245, 265, 266], "contradict": 16, "infer": [16, 26, 27, 42, 50, 77, 187, 196, 202, 207, 213, 229, 255], "prepar": [16, 108, 195], "presum": [16, 75, 187, 207, 230], "singletonregistri": [16, 50], "implicitli": [16, 17, 18, 42, 50, 77, 184, 187, 215], "x1": [16, 18, 40, 50, 55, 130, 135, 187, 188, 198, 199, 209, 213, 215, 217, 235], "x2": [16, 40, 50, 55, 130, 135, 187, 199, 213, 215, 217], "posifi": [16, 208], "_x": [16, 18, 86, 128, 177, 180, 181, 188, 194, 209, 213, 229], "rep": [16, 41, 46, 50, 147, 184, 186, 187, 188, 191, 192, 193, 206, 209, 238], "map": [16, 18, 30, 31, 32, 40, 41, 42, 50, 51, 62, 66, 73, 75, 77, 80, 81, 90, 98, 108, 117, 141, 152, 153, 158, 173, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 204, 209, 213, 214, 215, 216, 217, 221, 222, 229, 232, 235, 236, 238, 242], "feel": [16, 22, 130, 131, 209, 213], "among": [16, 31, 32, 33, 34, 41, 42, 51, 78, 91, 193, 213, 218, 221, 223, 245], "discourag": [16, 50, 209], "behaviour": [16, 75, 80, 105, 190, 194, 200, 203], "symbolc": 16, "implicit": [16, 32, 48, 50, 92, 112, 131, 183, 213, 215, 219, 222, 229, 230, 242, 244, 251, 265], "tailor": 16, "is_integ": [16, 18, 50, 175, 197, 222], "assumptions0": [16, 50], "commut": [16, 24, 27, 31, 41, 42, 46, 50, 52, 73, 77, 86, 140, 147, 150, 151, 152, 162, 163, 168, 175, 181, 185, 188, 189, 190, 191, 193, 197, 204, 205, 207, 213, 223, 268], "extended_neg": [16, 50], "extended_nonneg": [16, 50], "extended_nonposit": [16, 50], "extended_nonzero": [16, 50, 197], "extended_posit": [16, 50], "extended_r": [16, 28, 50, 197, 212, 216], "hermitian": [16, 27, 50, 81, 82, 86, 146, 152, 163, 197], "irrat": [16, 27, 30, 50, 90, 187, 193, 197, 205, 267], "noninteg": [16, 28, 50, 187, 197], "nonneg": [16, 18, 27, 50, 51, 52, 55, 58, 83, 130, 185, 187, 210, 217, 273], "nonposit": [16, 27, 50, 130], "nonzero": [16, 18, 27, 29, 49, 50, 65, 86, 102, 185, 186, 187, 188, 197, 200, 216], "ration": [16, 18, 25, 27, 30, 32, 49, 54, 55, 56, 58, 60, 63, 65, 67, 71, 75, 77, 78, 83, 86, 90, 92, 100, 132, 165, 182, 185, 189, 190, 191, 192, 194, 197, 201, 202, 206, 207, 209, 210, 211, 212, 215, 216, 217, 235, 242, 264, 265, 268, 272], "transcendent": [16, 27, 50, 58, 77, 187, 192, 197, 215, 216, 269, 274], "zoo": [16, 28, 50, 55, 56, 58, 77, 204, 206, 209], "field": [16, 24, 28, 32, 50, 51, 52, 58, 68, 77, 135, 136, 175, 179, 184, 185, 186, 188, 189, 191, 193, 194, 195, 210, 215, 228, 242, 244, 246, 247, 249, 251], "antihermitian": [16, 27, 50], "mathbb": [16, 18, 28, 33, 41, 49, 50, 51, 56, 58, 75, 81, 86, 127, 182, 184, 185, 187, 188, 190, 192, 193, 196, 204, 205, 207, 210, 216, 217, 273], "iy": [16, 56, 75, 205, 216], "cup": [16, 193, 205, 216], "pm": [16, 49, 75, 77, 185, 196, 204, 210, 213], "yi": 16, "ne": [16, 51, 56, 63, 75, 90, 185, 187, 190, 207, 213, 217], "composit": [16, 27, 31, 39, 41, 42, 50, 51, 68, 70, 77, 90, 93, 188, 190, 193, 196, 209, 216, 231], "2k": [16, 50, 75, 90, 210], "pariti": [16, 42], "product": [16, 24, 35, 38, 41, 42, 46, 48, 49, 50, 51, 52, 54, 55, 58, 60, 63, 65, 66, 73, 75, 77, 79, 80, 81, 83, 86, 90, 91, 100, 101, 102, 104, 115, 128, 130, 138, 142, 143, 146, 148, 149, 150, 152, 155, 157, 158, 160, 161, 163, 168, 169, 172, 173, 175, 179, 180, 181, 182, 184, 185, 186, 188, 190, 192, 193, 194, 197, 198, 199, 202, 205, 206, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 229, 232, 235, 242, 245, 249], "le": [16, 33, 46, 58, 75, 81, 90, 122, 190, 207, 217], "commutative_properti": [16, 50], "infin": [16, 28, 49, 55, 56, 58, 63, 75, 77, 86, 136, 188, 190, 193, 197, 202, 203, 204, 205, 209, 212, 213, 217], "skew": [16, 73, 90, 217], "hermitian_matrix": 16, "complex_numb": [16, 28, 50], "algebraic_numb": [16, 28, 50], "transcendental_numb": [16, 50], "extended_real_number_lin": 16, "real_numb": [16, 28], "imaginary_numb": [16, 28, 50], "rational_numb": [16, 28], "irrational_numb": [16, 28, 50], "parity_": [16, 50], "prime_numb": [16, 50, 90], "composite_numb": [16, 50], "positive_real_numb": 16, "negative_numb": [16, 50], "is_real": [16, 18, 50, 52, 56, 57, 86, 175, 197, 222], "inconsist": [16, 18, 25, 27, 49, 168, 173, 176, 180, 209, 213, 216], "inconsistentassumpt": 16, "deal": [16, 32, 49, 50, 54, 62, 70, 75, 77, 97, 104, 108, 109, 113, 178, 180, 181, 185, 190, 193, 210, 211, 215, 226, 236, 238, 245, 250, 265, 267, 273], "reserv": [16, 113, 223, 230, 269], "is_zero_matrix": [16, 81, 186], "generalis": [16, 58, 75, 184], "gaussian": [16, 58, 77, 86, 90, 133, 189, 190, 193, 210, 215, 217, 258, 269], "notion": [16, 31, 168, 171, 184, 216, 245, 250], "chain": [16, 18, 32, 41, 46, 50, 58, 67, 91, 180, 192, 217], "superset": [16, 30, 39, 45, 53, 130, 187, 205, 215], "vanilla": 16, "attach": [16, 44, 75, 91, 93, 108, 181, 229, 231, 236], "is_commut": [16, 77, 152, 161, 235], "is_complex": [16, 50], "is_finit": [16, 50], "permit": [16, 42, 52, 56, 80, 90, 183], "formal": [16, 31, 49, 50, 58, 75, 80, 132, 168, 187, 189, 190, 201, 204], "littl": [16, 18, 31, 42, 60, 86, 90, 91, 115, 168, 191, 193, 197, 207, 209, 217, 232, 245], "n1": [16, 32, 41, 50, 51, 113, 130, 132, 136, 172, 210, 217, 242], "n2": [16, 32, 41, 50, 51, 130, 132, 136, 210, 217], "misunderstand": 16, "is_nonneg": [16, 18, 188], "intent": [16, 32, 49, 50, 92, 230], "meaning": [16, 25, 27, 31, 51], "alon": [16, 51, 78, 190, 213, 215, 222, 235, 267, 268], "tempt": [16, 18, 50, 90], "meet": [16, 51, 204], "criteria": [16, 50, 268], "noncommut": [16, 50, 73, 268], "finiteset": [16, 30, 31, 216, 217, 274], "s1": [16, 41, 49, 63, 66, 73, 100, 174, 184, 193, 200, 210, 235, 244], "s2": [16, 41, 42, 49, 63, 66, 100, 174, 184, 193, 200, 204, 210, 235, 244], "bool": [16, 19, 30, 32, 46, 48, 50, 51, 53, 56, 77, 78, 80, 81, 83, 86, 90, 92, 109, 147, 175, 177, 183, 192, 193, 195, 197, 198, 199, 204, 205, 209, 212, 215, 217, 229, 230, 235, 236, 242, 244, 265], "plai": [16, 49, 115, 125, 210, 265, 267, 268], "role": [16, 56, 195], "connect": [16, 44, 51, 52, 65, 66, 86, 91, 93, 96, 105, 107, 115, 118, 124, 184, 185, 186, 195, 213, 217, 235, 242], "is_finite_set": 16, "zero_matrix": 16, "setsymbol": 16, "is_numb": [16, 50, 58, 77], "is_compar": [16, 50], "capitalis": 16, "4142135623731": [16, 197, 215], "predict": [16, 163, 209, 235], "inequ": [16, 17, 18, 20, 50, 183, 190, 205, 207, 211], "expreal": 16, "restrict": [16, 18, 32, 39, 50, 51, 58, 86, 93, 94, 163, 184, 187, 192, 194, 212], "fuzzy_and": [16, 17, 18], "fuzzy_or": [16, 17], "is_extended_nonneg": 16, "classmethod": [16, 18, 24, 26, 27, 32, 34, 39, 41, 42, 44, 45, 50, 56, 57, 58, 65, 81, 86, 100, 149, 160, 161, 163, 186, 188, 192, 193, 197, 205, 223, 228], "is_extended_r": 16, "is_infinit": 16, "is_extended_neg": 16, "is_extended_posit": [16, 17], "_eval_is_finit": 16, "is_extended_nonposit": 16, "_eval_is_algebra": 16, "is_nonzero": [16, 65], "_eval_is_integ": 16, "_eval_is_zero": [16, 18], "__new__": [16, 18, 32, 41, 50, 268], "verifi": [16, 22, 30, 41, 47, 51, 52, 113, 184, 190, 196, 213, 215, 216, 218, 219, 249, 273], "importantli": [16, 18, 194, 232], "reject": [16, 17, 90, 210, 238], "_eval_is_": 16, "is_algebra": [16, 50, 188], "interfer": [16, 197], "determinist": [16, 41, 77, 90, 190, 191], "reach": [16, 90, 100, 192, 193, 213], "leav": [16, 18, 32, 50, 77, 86, 90, 109, 123, 147, 163, 204, 232, 262, 268, 273], "claus": [16, 80], "flow": [16, 192], "condit": [16, 17, 32, 41, 50, 52, 56, 58, 68, 69, 72, 73, 74, 76, 77, 80, 86, 90, 92, 93, 94, 100, 106, 109, 115, 123, 127, 130, 132, 176, 182, 194, 197, 200, 207, 210, 212, 213, 215, 216, 217, 222, 255, 273], "inner": [16, 49, 75, 86, 146, 149, 150, 155, 157, 158, 161, 163, 173, 176, 186, 192, 199, 242], "optimis": [16, 213], "stage": [16, 31, 49, 90, 204, 273], "briefli": [16, 185, 190], "managedproperti": [16, 50], "metaclass": [16, 50], "default_assumpt": 16, "_ask": 16, "_eval_i": 16, "enumer": [16, 21, 34, 37, 39, 42, 45, 53, 57, 75, 80, 90, 192, 193, 207, 232, 235], "randomis": [16, 225, 260], "unresolv": 16, "factrul": 16, "_assume_rul": 16, "preprocess": [16, 77, 195], "defined_fact": 16, "full_impl": 16, "defaultdict": [16, 50, 235], "precomput": [16, 55, 90, 236], "static": [16, 24, 32, 41, 42, 44, 50, 56, 63, 64, 65, 66, 83, 94, 115, 123, 183, 197, 203, 205, 217, 229], "knowabl": 16, "stdfactkb": 16, "_eval_is_r": [16, 18, 193], "_assumpt": [16, 50], "amongst": [16, 215], "indirectli": 16, "execut": [16, 22, 32, 78, 81, 130, 183, 197, 213, 216, 226, 228, 230, 231, 236, 238, 241, 252, 267, 272], "manifest": [16, 185], "jointli": 16, "fundament": [16, 18, 30, 33, 40, 68, 75, 77, 86, 168, 187, 192, 210, 213, 217, 269], "theoret": [16, 31, 33, 41, 51, 191, 192, 207, 265], "upon": [16, 32, 50, 90, 112, 115, 125, 126, 127, 130, 157, 163, 178, 180, 181, 205, 213, 222, 229, 248, 273], "isposit": 17, "xpo": 17, "xneg": 17, "strictgreaterthan": 17, "analogu": [17, 28, 49, 64, 187, 188], "piecewis": [17, 18, 32, 49, 57, 58, 77, 93, 161, 197, 199, 200, 215, 216, 217, 236, 263], "nonetyp": [17, 32], "quirk": 17, "both_posit": 17, "falsei": 17, "both_positive_bett": 17, "negat": [17, 18, 28, 50, 56, 80, 100, 173, 186, 188, 190, 193], "fuzzy_not": [17, 18], "both_positive_best": 17, "simpler": [17, 18, 50, 54, 58, 74, 75, 120, 181, 190, 206, 207, 209, 213, 215, 216, 273], "silent": [17, 54, 90, 229], "carefulli": [17, 50, 173, 190, 199], "truth": [17, 25, 26, 27, 28, 29, 50, 81, 209, 255], "bitwis": [17, 53, 80], "footnot": [17, 168, 268, 269, 272], "combinatori": [18, 34, 42, 49, 50, 57, 58, 199, 208, 235, 237, 273], "primepi": [18, 90], "matrixexpr": [18, 81, 83, 84], "dig": [18, 32, 268], "th": [18, 24, 33, 41, 42, 48, 51, 52, 54, 55, 56, 58, 79, 80, 86, 90, 108, 188, 190, 192, 193, 199, 202, 207, 210, 213, 215, 217, 218, 223], "undefin": [18, 26, 27, 30, 50, 56, 57, 58, 77, 83, 92, 105, 181, 192, 203, 204, 207, 236, 263, 274], "handler": [18, 19, 25, 26, 27, 28, 29, 50, 57, 86], "spectrum": 18, "matter": [18, 30, 39, 42, 49, 50, 55, 75, 77, 128, 204, 235, 267, 268], "use_unicod": [18, 30, 31, 32, 54, 58, 77, 78, 86, 94, 100, 135, 177, 182, 184, 185, 196, 197, 198, 216, 217, 263, 267, 269, 272, 273, 274], "neq": [18, 50, 56, 58, 75, 77, 81, 168, 181, 182, 190, 193, 210, 213, 215, 273], "lambdifi": [18, 32, 58, 115, 197, 215, 229, 234, 253, 260, 264], "np": [18, 57, 73, 90, 113, 229, 236], "arang": [18, 229, 262], "ultim": [18, 56, 168], "cosin": [18, 50, 56, 58, 65, 77, 105, 107, 173, 181, 193, 194, 200, 206, 217, 242, 273], "todai": [18, 184], "operatornam": [18, 55, 56, 58, 75, 77, 182, 185, 193, 197, 200, 205, 207, 215], "modern": [18, 32, 184, 191, 197], "recal": [18, 50, 86, 190, 192, 207, 265, 267, 268, 274], "redefin": [18, 42, 50, 125, 127, 185, 236], "antipattern": [18, 266], "stai": [18, 192], "trig": [18, 50, 77, 193, 197, 206, 209, 273], "wouldn": 18, "cheap": [18, 50, 90], "expens": [18, 50, 127, 206, 213, 214, 215, 231, 269], "as_two_term": [18, 50], "split": [18, 32, 50, 51, 54, 75, 77, 92, 190, 192, 195, 196, 197, 217, 223, 228, 235, 240, 268, 273], "hadn": 18, "wors": [18, 80, 209], "expand_trig": [18, 262], "mid": [18, 33, 51, 54, 94, 205, 210], "troubl": [18, 58], "bigger": [18, 32, 50, 55, 207, 213, 273], "deduc": [18, 32, 75, 80, 207, 267], "disallow": [18, 50, 193, 198, 209, 231], "great": [18, 132, 194, 197, 210, 236], "simplest": [18, 31, 80, 86, 90, 91, 182, 183, 194, 198, 206, 209, 213, 263, 273], "is_": [18, 19, 50], "\u03c0": [18, 54, 135, 197, 216, 263, 267, 273, 274], "as_independ": [18, 50, 216], "coeff": [18, 50, 52, 80, 130, 188, 192, 193, 203, 209, 213, 215, 223, 273], "apart": [18, 24, 41, 46, 50, 54, 56, 77, 178, 185, 188, 190, 193, 196, 199, 210, 216, 223, 246, 248, 268], "subexpress": [18, 32, 50, 81, 104, 106, 192, 193, 197, 204, 208, 216, 230, 236, 253, 262], "is_even": [18, 38, 41, 42], "nonreal": [18, 215], "cosh": [18, 50, 57, 58, 69, 75, 194, 197, 198, 207, 209, 215, 269, 273], "5919532755215": 18, "_eval_is_nonneg": 18, "exercis": [18, 41, 232, 266, 273], "_eval_is_posit": 18, "iff": [18, 28, 42, 51, 80, 86, 181, 184, 192, 207, 210, 228], "as_add": [18, 50], "pi_": 18, "fuzzy_": 18, "deduct": [18, 32], "somehow": 18, "subtl": [18, 206], "nontrivi": [18, 41, 50, 90], "_eval_evalf": [18, 193], "prec": [18, 50, 60, 66, 90, 98, 182, 188, 193, 194, 209, 215], "dp": [18, 32, 50, 53, 58, 90, 187, 188, 215, 231], "53": [18, 51, 53, 86, 132, 185, 187, 188], "459697694131860": 18, "hook": [18, 91, 197], "_eval_rewrit": [18, 50], "rewritten": [18, 50, 55, 56, 58, 77, 113, 160, 204, 209, 213, 215, 273], "caller": 18, "ve": [18, 115], "nonintegr": 18, "isint": 18, "xy": [18, 30, 31, 64, 86, 110, 181, 183, 184, 190, 197, 209, 216, 251, 268, 273], "happi": 18, "demand": [18, 23], "_eval_expand_": 18, "expand_": 18, "predefin": [18, 52, 130, 187, 197, 198, 209, 216, 223, 242, 246, 254], "expand_log": [18, 32, 209], "_eval_expand_trig": 18, "sophist": [18, 91, 215], "x_1": [18, 33, 40, 41, 51, 55, 72, 86, 158, 185, 188, 190, 193, 199, 210, 216], "ldot": [18, 33, 40, 41, 49, 50, 51, 55, 58, 75, 90, 94, 168, 184, 185, 188, 190, 192, 197, 200, 204, 207, 210, 215, 218, 273], "x_k": [18, 51, 190], "_eval_deriv": [18, 50, 58], "dy": [18, 32, 52, 67, 86, 93, 103, 130, 193, 197, 210, 213, 214, 263], "dz": [18, 93, 103, 207], "argumentindexerror": 18, "linear": [18, 20, 31, 32, 42, 49, 50, 51, 53, 54, 58, 63, 70, 73, 75, 77, 79, 81, 83, 85, 93, 97, 100, 107, 108, 110, 115, 117, 118, 123, 125, 129, 130, 135, 157, 160, 161, 176, 183, 184, 188, 189, 190, 192, 193, 195, 203, 205, 207, 214, 215, 216, 235, 256, 274], "varion": 18, "middl": [18, 58, 66, 75, 86, 94, 143, 183, 207, 273], "iverson": 18, "printmethod": [18, 197], "latexprint": [18, 260], "_latex": [18, 197], "_print": [18, 197], "_m": [18, 58], "_n": [18, 51, 55, 58, 77, 207, 216], "arcversin": 18, "aversin": 18, "tupl": [18, 24, 26, 27, 30, 31, 32, 33, 41, 42, 49, 51, 52, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 72, 75, 77, 81, 86, 89, 90, 92, 93, 94, 98, 105, 107, 108, 110, 112, 125, 126, 128, 130, 132, 147, 148, 149, 152, 157, 160, 161, 162, 163, 173, 176, 181, 183, 184, 186, 187, 188, 189, 190, 194, 195, 197, 198, 199, 203, 205, 209, 210, 213, 214, 215, 216, 217, 218, 222, 223, 228, 229, 230, 231, 235, 236, 238, 242, 245, 263, 268, 269, 272], "im": [18, 29, 50, 57, 75, 84, 184, 197, 198, 205, 213, 269], "sinh": [18, 30, 50, 54, 57, 58, 69, 75, 194, 197, 198, 207, 273], "expand_complex": 18, "analog": [18, 43, 49, 51, 55, 128, 180, 181, 184, 185, 186, 190, 202, 218, 235], "vers": 18, "geometr": [18, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 86, 132, 181, 184, 191, 217, 259, 269], "angl": [18, 24, 56, 58, 59, 60, 61, 63, 64, 65, 66, 96, 102, 107, 112, 113, 115, 116, 117, 118, 127, 132, 135, 136, 137, 160, 168, 173, 180, 181, 182, 197, 206, 216, 242, 243, 246, 273], "horizont": [18, 31, 60, 63, 65, 81, 96, 135, 183, 186, 197], "distanc": [18, 31, 34, 42, 60, 63, 64, 65, 66, 93, 94, 103, 104, 107, 117, 118, 124, 132, 136, 166, 176, 178, 250], "rightmost": [18, 163], "scientificamerican": 18, "uniti": [18, 56, 58, 75, 158, 192], "secret": [18, 51], "teacher": 18, "taught": [18, 77], "nr": 18, "sake": [18, 55, 210], "simplic": [18, 207, 209, 213, 215], "divisor": [18, 28, 41, 50, 51, 86, 90, 184, 185, 187, 188, 190, 191, 192, 193, 196], "hardwar": [18, 32], "round": [18, 30, 32, 50, 54, 55, 56, 86, 136, 192, 193, 204, 206, 217], "contrast": [18, 49, 50, 117, 187, 207, 213, 267], "regard": [18, 33, 51, 58, 78, 131, 163, 184, 185, 199, 215, 216], "vriabl": 18, "c99codeprint": [18, 32, 197], "cxx11codeprint": [18, 197], "cfunction": [18, 254], "e2": [18, 30, 50, 53, 60, 67, 77, 86, 90, 98, 113, 187, 192, 204, 213, 216, 217, 235], "93accumulate_oper": 18, "fused_multipli": 18, "93add": 18, "ccode": [18, 32, 197, 222, 230], "cxxcode": [18, 32, 197], "_ccode": [18, 197], "_y": [18, 128, 177, 180, 181], "_z": [18, 77, 128, 180, 181, 217], "_cxxcode": [18, 197], "std": [18, 197, 217], "28318530717959": 18, "trigonometricfunct": 18, "inversetrigonometricfunct": 18, "reciprocaltrigonometricfunct": 18, "bypass": [18, 213], "fragil": 18, "tend": [18, 23, 32, 50, 190, 192, 202, 204, 207, 266, 273], "prone": [18, 32, 50], "move": [18, 41, 42, 50, 51, 64, 66, 93, 107, 115, 117, 123, 151, 176, 180, 181, 208, 209, 218, 227, 248], "task": [19, 21, 56, 123, 124, 130, 187, 192, 263, 270], "deeper": [19, 221, 268], "explor": [19, 125, 126, 183, 192, 232, 273], "implic": [19, 50, 80, 190], "vs": [19, 189, 197, 228], "nonlinear": [20, 49, 130, 193, 215, 216], "diophantin": [20, 90, 190, 211], "739085133215161": [20, 215], "9y": 20, "3x": [20, 50, 92, 190, 216, 265], "cc": [20, 51, 66, 182, 185, 187, 189, 193, 269], "4xy": [20, 178, 250], "8y": 20, "7y": [20, 210], "colloqui": 20, "terminolog": [20, 223], "central": [21, 41, 47, 58, 60, 66, 105, 110, 128, 183, 192, 210, 217], "pypi": 22, "continuum": [22, 258], "analyt": [22, 55, 58, 75, 86, 123, 213, 258, 263], "qtconsol": [22, 272], "nicer": [22, 50, 121], "setupegg": 22, "enthought": 22, "canopi": 22, "activepython": 22, "spack": 22, "freshli": 22, "starter": 22, "sy": [22, 32, 52, 113, 130, 197, 228, 239, 247, 265], "wherev": [22, 113, 209, 216, 245], "visit": [22, 34, 41, 50, 55, 270], "chat": 22, "gitter": [22, 269], "excel": [22, 54, 192, 271], "ticket": 22, "export": [23, 197], "latin": 23, "slightli": [23, 32, 46, 90, 92, 115, 183, 184, 188, 190, 193, 197, 207, 209], "clunki": 23, "collid": [23, 223], "win": 23, "session": [23, 32, 50, 62, 77, 177, 181, 187, 233, 260, 265, 272], "throwawai": 23, "surviv": 23, "foo": [23, 30, 32, 50, 158, 177, 235, 238], "report": [23, 30, 41, 63, 81, 90, 194, 205, 216, 228, 269, 274], "stick": 23, "clash": [23, 50, 86], "_clash1": [23, 50], "_clash2": [23, 50], "multi": [23, 50, 51, 114, 123, 130, 143, 147, 157, 183, 197, 216], "_clash": [23, 50], "union": [23, 28, 30, 32, 39, 41, 48, 80, 92, 184, 192, 197, 203, 204, 212, 216, 217, 235], "sympif": [23, 50], "real_field": 24, "instanti": [24, 31, 32, 42, 50, 58, 63, 65, 66, 83, 86, 153, 161, 173, 183, 184, 188, 192, 217, 242, 245], "q1": [24, 86, 104, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 131, 172, 173, 175, 176, 177, 180, 181, 187, 242, 243], "q2": [24, 104, 113, 115, 116, 117, 118, 120, 121, 122, 125, 126, 131, 172, 173, 175, 176, 177, 180, 181, 187, 242, 243], "r1": [24, 60, 63, 79, 93, 94, 136, 173, 178, 193, 242], "euclideanspac": 24, "realnormedalgebra": 24, "r2": [24, 52, 63, 79, 81, 93, 94, 136, 173, 193, 197, 209, 242], "q3": [24, 104, 115, 116, 118, 120, 121, 122, 125, 173, 175, 176, 181, 242, 243], "axi": [24, 43, 55, 56, 60, 61, 63, 64, 66, 72, 75, 77, 83, 86, 93, 98, 103, 107, 113, 115, 117, 120, 121, 122, 124, 127, 130, 131, 132, 135, 136, 160, 173, 175, 176, 178, 180, 181, 183, 188, 216, 242, 243, 246, 248, 251], "bi": [24, 50, 56, 58, 77, 181, 204, 213], "cj": 24, "dk": [24, 93, 192], "atan2": [24, 29, 52, 57, 137, 197, 242], "atan": [24, 29, 52, 54, 57, 61, 66, 74, 77, 117, 131, 132, 194, 197, 199], "arc_coplanar": 24, "arc": [24, 56, 273], "orient": [24, 62, 66, 81, 113, 115, 117, 120, 124, 128, 130, 173, 176, 178, 180, 181, 190, 235, 242, 249, 250], "coplanar": [24, 64, 181], "ax": [24, 51, 54, 60, 63, 75, 82, 86, 93, 98, 107, 135, 160, 173, 181, 182, 183, 186, 194, 210, 213, 216, 218, 219, 222, 242, 243, 245, 248, 250, 273], "parallel": [24, 60, 63, 64, 66, 77, 97, 100, 103, 124, 180, 181, 190, 247, 251], "vector_coplanar": 24, "is_pur": 24, "mathbf": [24, 83, 123, 125, 126, 128, 168, 172, 173, 177, 178, 180, 181, 197, 207, 218, 245, 246, 248, 250, 251], "versor": 24, "0i": 24, "0j": [24, 187], "0k": 24, "vector_part": 24, "from_axis_angl": 24, "rotat": [24, 38, 41, 43, 50, 59, 60, 61, 63, 65, 66, 81, 86, 93, 94, 107, 115, 118, 120, 122, 128, 131, 147, 160, 173, 176, 178, 180, 181, 182, 183, 235, 242, 243, 246, 248, 250], "radian": [24, 56, 59, 60, 61, 63, 64, 65, 86, 98, 113, 136, 137, 173], "from_rotation_matrix": 24, "orthogon": [24, 27, 57, 65, 79, 86, 161, 173, 181, 189, 242, 243, 249], "det": [24, 86, 87, 130, 181, 186, 269], "index_vector": 24, "mod": [24, 51, 56, 80, 86, 87, 90, 159, 184, 186, 187, 188, 190, 192, 193, 197, 199, 207, 210, 253], "magnitud": [24, 32, 49, 50, 54, 58, 91, 93, 94, 96, 98, 117, 130, 161, 170, 173, 178, 181, 183, 242, 248, 250], "norm": [24, 86, 161, 173, 188, 190, 192, 193], "indefinit": [24, 56, 74, 75, 77, 86, 188, 190, 191, 193, 202, 263], "scalar_part": 24, "is_zero_quaternion": 24, "mensor": 24, "60": [24, 36, 41, 43, 49, 50, 55, 58, 77, 86, 90, 93, 94, 196, 197, 210, 213, 235], "anti": [24, 28, 46, 56, 77, 81, 135, 140, 223], "pth": 24, "668": 24, "224": [24, 166, 191], "336": 24, "448": 24, "pow_cos_sin": 24, "900": 24, "1800": [24, 51], "2700": [24, 93], "3600": [24, 55], "rotate_point": 24, "pin": [24, 93, 94, 96, 107], "to_axis_angl": 24, "to_rotation_matrix": 24, "assumptionkei": 25, "proposit": [25, 27, 80], "is_tru": [25, 27, 28], "assumptionscontext": [25, 26, 27], "global_assumpt": [25, 26, 27], "discern": [25, 27], "refin": [25, 27, 50, 81, 184, 188, 192, 193, 209, 230], "progress": [25, 27, 90, 230], "inherit": [25, 50, 57, 80, 83, 84, 107, 152, 161, 182, 197, 217, 222, 230, 231], "askhandl": 25, "mere": [26, 27, 32, 54, 158], "thin": [26, 86, 119, 132], "dispatch": [26, 27, 28, 50, 51, 158, 197, 216, 232], "undefinedpred": [26, 27], "sexi": [26, 27], "sexyprimepred": [26, 27], "sexyprim": [26, 27], "int1": [26, 27], "int2": [26, 27], "sort": [26, 27, 31, 32, 39, 42, 46, 75, 77, 80, 86, 89, 90, 101, 104, 108, 147, 163, 168, 172, 183, 190, 193, 194, 204, 209, 210, 213, 214, 215, 221, 223, 228, 230, 235, 245, 253, 265, 267, 268], "assump": [26, 27], "r3": [26, 79, 93, 94, 209], "predicate_": [26, 27], "mathematical_log": [26, 27], "r4": [26, 79, 93], "sexy_prim": [26, 27], "resolut": [26, 27, 210], "askpredicatehandl": [26, 27], "r5": [27, 209], "r6": 27, "tautolog": 27, "calculu": [27, 50, 55, 77, 86, 130, 178, 179, 206, 217, 247, 248, 249, 252, 253, 264, 266, 271], "symmetr": [27, 29, 33, 38, 41, 42, 46, 66, 81, 82, 83, 86, 90, 172, 182, 188, 190, 193, 196, 205, 207, 223, 235], "unitari": [27, 77, 90, 147, 152], "triangular": [27, 81, 82, 86, 186, 192, 215, 217, 251], "diagon": [27, 55, 81, 82, 83, 86, 89, 112, 135, 186, 219, 220], "rank": [27, 32, 33, 34, 39, 41, 42, 44, 45, 46, 65, 79, 86, 87, 173, 175, 184, 186, 188, 190, 192, 218, 222, 223, 269], "singular": [27, 32, 42, 50, 54, 56, 57, 72, 73, 75, 77, 86, 93, 95, 127, 173, 184, 191, 204, 213, 216, 242, 253, 263], "notabl": [27, 32, 53, 58, 75, 91, 187], "truth_maintenance_system": 27, "istruepred": 28, "gt": [28, 32, 217, 235], "istruehandl": 28, "commutativepred": 28, "commutativehandl": 28, "finitepred": 28, "nor": [28, 30, 50, 80, 90, 137, 183, 193, 204, 206, 213, 223, 242], "nan": [28, 29, 56, 58, 106, 209, 217, 263], "bound": [28, 32, 33, 49, 50, 59, 60, 61, 63, 65, 66, 77, 90, 161, 188, 190, 192, 193, 197, 203, 213, 215, 216, 217, 222, 232, 238, 242], "finitehandl": 28, "r7": 28, "infinitepred": 28, "infinitehandl": 28, "symmetricpred": 28, "transpos": [28, 31, 81, 83, 86, 100, 130, 146, 173, 181, 186, 192, 210, 218, 223, 224, 269], "symmetrichandl": 28, "r8": 28, "symmetric_matrix": 28, "invertiblepred": 28, "fullrank": [28, 32], "invertiblehandl": 28, "r9": 28, "invertible_matrix": 28, "orthogonalpred": 28, "tm": [28, 136], "mm": [28, 31, 90, 108, 115, 120, 121, 161, 186], "orthogonalhandl": 28, "r10": 28, "orthogonal_matrix": 28, "unitarypred": 28, "unitaryhandl": 28, "r11": 28, "unitary_matrix": 28, "positivedefinitepred": 28, "tmz": 28, "column": [28, 31, 32, 33, 78, 80, 81, 83, 86, 87, 89, 100, 108, 112, 115, 128, 158, 165, 173, 177, 182, 186, 192, 197, 213, 216, 222, 242], "positive_definit": 28, "positivedefinitehandl": 28, "r12": 28, "definite_matrix": 28, "uppertriangularpred": 28, "m_": [28, 126, 190], "ij": [28, 163, 168, 217], "zeromatrix": [28, 83], "upper_triangular": [28, 81], "uppertriangularhandl": 28, "r13": 28, "uppertriangularmatrix": 28, "lowertriangularpred": 28, "lower_triangular": [28, 81], "lowertriangularhandl": 28, "r14": 28, "lowertriangularmatrix": 28, "diagonalpred": 28, "diagonalhandl": 28, "r15": 28, "diagonal_matrix": 28, "fullrankpred": 28, "row": [28, 31, 32, 33, 39, 42, 50, 55, 81, 82, 83, 86, 87, 89, 90, 100, 112, 113, 115, 128, 130, 131, 158, 173, 181, 186, 192, 197, 207, 216, 217, 222, 236, 242, 243], "linearli": [28, 32, 58, 74, 86, 190, 213, 215, 223], "fullrankhandl": 28, "squarepred": 28, "squarehandl": 28, "r16": 28, "square_matrix": 28, "integerelementspred": 28, "integer_el": 28, "integerelementshandl": 28, "realelementspred": 28, "real_el": 28, "realelementshandl": 28, "complexelementspred": 28, "complex_el": 28, "complexelementshandl": 28, "singularpred": 28, "singularhandl": 28, "fore": 28, "r17": 28, "singularmatrix": 28, "normalpred": 28, "normalhandl": 28, "r18": 28, "normal_matrix": 28, "triangularpred": 28, "triangularhandl": 28, "r19": 28, "triangular_matrix": 28, "unittriangularpred": 28, "1s": [28, 55, 79, 186], "unit_triangular": 28, "unittriangularhandl": 28, "evenpred": 28, "evenhandl": 28, "oddpred": 28, "oddhandl": 28, "primehandl": 28, "subject": [28, 60, 66, 94, 104, 131, 192], "compositepred": 28, "compositehandl": 28, "positivepred": 28, "interv": [28, 30, 41, 50, 54, 56, 58, 59, 60, 63, 66, 75, 77, 80, 90, 149, 158, 188, 190, 192, 193, 200, 203, 212, 216, 217, 259, 274], "positivehandl": 28, "negativepred": 28, "negativehandl": 28, "zeropred": 28, "zerohandl": 28, "nonzeropred": 28, "nonzerohandl": 28, "nonpositivepred": 28, "nonpositivehandl": 28, "nonnegativepred": 28, "nonnegativehandl": 28, "integerpred": 28, "integerhandl": 28, "r20": 28, "rationalpred": 28, "rationalhandl": 28, "r21": 28, "irrationalpred": 28, "ratio": [28, 40, 41, 49, 50, 54, 55, 58, 60, 63, 64, 65, 66, 82, 90, 100, 136, 168, 197, 206, 209, 215], "irrationalhandl": 28, "r22": 28, "realpred": 28, "disjoint": [28, 31, 39, 42, 193, 205, 235], "realhandl": 28, "r23": 28, "extendedrealpred": 28, "extendedrealhandl": 28, "hermitianpred": 28, "hermitianhandl": 28, "r24": 28, "hermitianoper": [28, 152], "complexpred": 28, "complexhandl": 28, "r25": 28, "imaginarypred": 28, "imaginaryhandl": 28, "r26": 28, "antihermitianpred": 28, "antihermitianhandl": 28, "r27": 28, "algebraicpred": 28, "askalgebraicpredicatehandl": 28, "r28": 28, "algebraichandl": 28, "transcendentalpred": 28, "transcedent": 28, "refine_pow": 29, "refine_ab": 29, "refine_arg": 29, "refine_atan2": 29, "refine_im": 29, "refine_matrixel": 29, "refine_r": 29, "refine_sign": 29, "lagrang": [30, 50, 107, 119, 123, 193, 210], "lagrangian": [30, 108, 117, 122, 123, 126, 127], "euler_equ": 30, "r29": 30, "iter": [30, 32, 39, 41, 42, 45, 46, 50, 51, 52, 53, 55, 58, 66, 80, 90, 105, 106, 107, 108, 109, 112, 127, 131, 148, 163, 176, 183, 184, 185, 186, 188, 190, 193, 197, 198, 199, 200, 203, 209, 210, 213, 215, 216, 217, 218, 221, 229, 230, 231, 232, 234, 236, 242, 246, 260], "eqn": [30, 216], "93lagrange_equ": 30, "decreas": [30, 32, 42, 190], "monoton": [30, 32, 67], "is_decreas": 30, "lopen": [30, 50, 205, 212, 217], "ropen": [30, 56, 205, 217], "is_increas": 30, "72": [30, 50, 63, 86, 90, 93, 182, 196], "is_monoton": 30, "is_strictly_decreas": 30, "is_strictly_increas": 30, "monotonicity_help": 30, "held": [30, 51, 127, 221, 273], "univari": [30, 49, 50, 56, 73, 77, 184, 185, 187, 188, 189, 191, 192, 193, 194, 199, 212, 215, 217], "r30": 30, "mathematical_singular": 30, "interpol": [30, 59, 130, 190, 193], "finite_diff_weight": [30, 50, 263], "estim": [30, 49, 50, 54, 75, 263], "apply_finite_diff": [30, 50, 263], "differentiate_finit": [30, 50, 263], "finite_diff": [30, 50], "x_list": [30, 263], "y_list": [30, 263], "cube": [30, 32, 34, 41, 43, 56, 77, 190, 191, 210, 216, 251], "xlist": 30, "55271367880050e": 30, "indexedbas": [30, 32, 49, 50, 197, 215, 221, 222, 229], "idx": [30, 32, 197, 221, 222, 229], "zip": [30, 40, 51, 80, 90, 193, 203, 210, 213, 232, 235], "extract": [30, 50, 77, 81, 83, 86, 90, 101, 115, 123, 172, 181, 190, 192, 193, 215, 216, 217, 228, 230, 235], "region": [30, 58, 67, 77, 183, 205, 213, 216, 217, 242, 244, 251], "bewar": [30, 58], "rung": [30, 72], "phenomenon": [30, 168, 190, 200, 268], "90": [30, 41, 48, 58, 81, 86, 92, 93, 96, 104, 113, 131, 197, 199, 209, 217, 230], "finitediff": 30, "wrt": [30, 32, 50, 52, 58, 67, 86, 113, 130, 173, 174, 190, 193, 242, 243, 244, 248], "arbitrarili": [30, 50, 63, 90, 190, 192, 204, 207, 213, 214, 217], "len": [30, 38, 39, 40, 41, 42, 46, 48, 50, 51, 55, 58, 65, 75, 80, 117, 132, 136, 147, 157, 193, 209, 213, 222, 235], "nearest": [30, 192], "furthest": [30, 51], "sublist": [30, 46, 51, 77, 160, 263], "fd": [30, 32, 163], "0th": [30, 42, 51, 58], "1st": [30, 42, 90, 100, 213, 214, 238, 263], "classic": [30, 56, 58, 86, 149, 165, 173, 181, 184, 258], "forward": [30, 32, 81, 100, 115, 123, 156, 180, 209, 228], "pai": 30, "attent": [30, 41, 56], "gridpoint": 30, "plan": [30, 104, 188, 211, 272], "mycoeff": 30, "3rd": [30, 42, 56, 90, 130, 193, 215, 218, 235], "2nd": [30, 42, 51, 90, 100, 130, 213, 218, 235], "cost": [30, 32, 90, 117, 216, 267], "yield": [30, 32, 41, 50, 51, 58, 74, 75, 90, 93, 100, 106, 157, 185, 190, 192, 193, 198, 199, 204, 205, 206, 209, 210, 215, 232, 235, 269], "poorer": 30, "grand": 30, "r31": 30, "51": [30, 86, 90], "184": [30, 213], "1988": [30, 142, 160, 190, 191], "699": 30, "706": [30, 86], "1090": [30, 193], "s0025": [30, 90], "5718": [30, 90], "0935077": 30, "continuous_domain": [30, 212], "tan": [30, 50, 55, 57, 77, 92, 106, 120, 121, 122, 127, 194, 196, 197, 204, 206, 213, 216, 273], "function_rang": 30, "OR": [30, 53, 80, 190], "critic": [30, 136, 180, 192, 216], "is_convex": [30, 66], "sym": [30, 40, 41, 46, 50, 55, 173, 197, 200, 205, 209, 210, 215, 217, 223, 235, 273], "convex": [30, 66, 67, 77], "unspecifi": [30, 50, 65, 263], "multivari": [30, 50, 58, 184, 185, 187, 188, 189, 191, 193, 194, 204, 209, 215, 216, 217, 273], "concav": [30, 132], "logartihm": 30, "r32": 30, "convex_funct": 30, "r33": 30, "ifp": 30, "illinoi": 30, "edu": [30, 34, 41, 42, 51, 53, 55, 77, 86, 90, 191, 196, 206, 209, 210, 213, 217, 242], "angelia": 30, "l3_convfunc": 30, "r34": 30, "logarithmically_convex_funct": 30, "r35": 30, "logarithmically_concave_funct": 30, "r36": 30, "concave_funct": 30, "lcim": 30, "mixtur": [30, 32, 67, 184, 230], "incommensur": 30, "not_empty_in": [30, 216], "finset_intersect": 30, "finite_set": [30, 205], "tracker": [30, 205, 216, 269], "aperiod": 30, "smallest": [30, 44, 56, 63, 65, 72, 80, 86, 90, 160, 173, 188, 233, 235], "verif": [30, 186, 215], "reliabl": [30, 50, 213, 233, 263], "henc": [30, 32, 40, 41, 50, 52, 56, 58, 62, 75, 78, 80, 90, 178, 183, 184, 185, 190, 197, 207, 210, 214, 216, 228, 232, 246, 247, 248, 268, 273], "stationary_point": 30, "stationari": [30, 217], "tikz": 31, "joyofcat": 31, "adamek": 31, "herrlich": 31, "strecker": 31, "joi": 31, "cat": [31, 172], "book": [31, 41, 51, 56, 108, 113, 116, 124, 128, 129, 148, 191, 196, 197, 266], "katmat": 31, "uni": [31, 77, 235], "bremen": 31, "de": [31, 51, 90, 168, 182, 183, 194, 199, 210, 211, 213, 235], "acc": [31, 130, 176, 180], "pre": [31, 32, 50, 182, 183, 198, 206, 209, 215, 216, 228, 246, 250, 268], "embryon": 31, "morphism": [31, 184], "codomain": [31, 184, 192], "arrow": [31, 79, 93, 183, 197], "namedmorph": 31, "prohibit": [31, 42, 43, 173], "identitymorph": 31, "compositemorph": 31, "compos": [31, 50, 51, 117, 127, 165, 167, 168, 180, 184, 188, 192, 193, 194, 197, 199, 209], "circ": [31, 50, 61, 67, 75, 83], "compon": [31, 32, 46, 50, 52, 65, 77, 83, 86, 101, 110, 123, 128, 135, 160, 165, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 193, 195, 217, 219, 222, 223, 232, 235, 242, 244, 247, 248], "new_nam": 31, "forget": [31, 273], "act": [31, 40, 41, 42, 46, 50, 58, 66, 79, 80, 86, 93, 96, 105, 107, 112, 113, 118, 126, 135, 147, 152, 155, 156, 205, 216, 218, 246, 250, 262], "id_a": 31, "id_b": 31, "commutative_diagram": 31, "quadrupl": [31, 193], "mbox": 31, "hom": 31, "id": [31, 46, 56], "rightarrow": [31, 42, 46, 51, 55, 56, 58, 72, 73, 75, 77, 80, 81, 90, 183, 192, 204, 216, 235, 263], "law": [31, 123, 166, 181, 185], "monoid": 31, "pare1970": 31, "accompani": 31, "premis": 31, "conclus": [31, 50], "carri": [31, 32, 50, 155, 161, 168, 184, 187, 190, 192, 194, 195, 236], "premises_kei": 31, "et": [31, 77, 142, 190, 193, 194, 206, 209], "pareigi": 31, "functor": 31, "1970": [31, 86], "is_subdiagram": 31, "subdiagram": 31, "d1": [31, 46, 173, 184, 204, 217, 242], "subdiagram_from_object": 31, "preserv": [31, 32, 41, 50, 86, 161, 188, 193, 198, 199, 209], "veryuniqu": 31, "diagram_draw": 31, "diagramgrid": 31, "analys": [31, 98, 100, 130, 217], "drawn": [31, 41, 79, 183, 187, 195], "moprhism": 31, "strive": 31, "nevertheless": 31, "laid": [31, 113, 160], "width": [31, 32, 78, 177, 183, 193, 197, 228], "height": [31, 32, 66, 83, 132, 183, 184, 197, 204, 251], "emploi": [31, 49, 54, 77, 90, 193, 196, 211, 213, 217], "lai": 31, "layout": 31, "sequenti": [31, 34, 51, 56, 242, 243], "test_draw": 31, "five": [31, 39, 75, 96, 197, 210], "lemma": [31, 41, 75, 185], "fivelemma": 31, "five_lemma": 31, "arrowstringdescript": 31, "curving_amount": 31, "looping_start": 31, "looping_end": 31, "horizontal_direct": 31, "vertical_direct": 31, "label_posit": 31, "pic": 31, "princip": [31, 51, 56, 58, 75, 77, 87, 102, 115, 136, 184, 185, 186, 187, 188, 190, 192, 193, 194], "offset": [31, 32, 50, 55, 58, 222], "cell": 31, "vertic": [31, 34, 43, 44, 60, 61, 63, 65, 66, 67, 77, 79, 81, 86, 94, 112, 118, 135, 143, 182, 183, 186, 192, 197, 205, 235, 251], "disregard": 31, "unexplain": 31, "astr": 31, "dr": [31, 52, 197, 213], "12mm": 31, "loop": [31, 32, 90, 100, 116, 173, 183, 194, 197, 213, 232, 235, 268], "correspondingli": 31, "label_displac": 31, "arrow_styl": 31, "dash": 31, "xypicdiagramdraw": 31, "formatt": 31, "utilis": 31, "xypic": 31, "drawer": 31, "xymatrix": 31, "ld": 31, "arrow_formatt": 31, "therebi": 31, "default_arrow_formatt": 31, "farther": 31, "centr": [31, 47, 183], "default_formatt": 31, "45": [31, 50, 55, 66, 86, 90, 96, 193, 194, 210], "_3mm": 31, "default_curving_amount": 31, "cm": [31, 130, 217], "_1cm": 31, "default_curving_step": 31, "h1": [31, 110], "1cm": 31, "rr": [31, 50, 68, 186, 187, 189, 193, 194], "h_": [31, 41, 46, 58, 77], "_2cm": 31, "mask": [31, 197], "diagram_format": 31, "proceed": [31, 33, 75, 77, 129, 191, 207], "xypic_draw_diagram": 31, "shortcut": [31, 50, 82, 181, 197, 205, 209, 273], "insert": [31, 33, 81, 92, 93, 158, 163, 197, 217, 238], "preview_diagram": 31, "png": [31, 78, 86, 93, 94, 98, 177, 183, 197, 200], "varieti": [32, 33, 42, 50, 91, 94, 128, 184, 191, 193, 217, 235], "brief": [32, 216, 228, 250], "fab": [32, 197], "cse_main": [32, 198, 209], "cse": [32, 91, 104, 152, 198, 230, 236], "meat": 32, "lightweight": [32, 192, 267], "pycod": [32, 197], "lambdarepr": [32, 197, 236], "aesara_funct": [32, 91, 197], "float80": [32, 197], "assign_to": [32, 197], "type_alias": [32, 197], "0l": [32, 197], "powl": [32, 197], "c99": [32, 197, 230], "expm1": [32, 197], "ternari": [32, 50, 197, 210], "lack": [32, 52, 54, 110, 197, 263], "thrown": [32, 197], "fcode": [32, 197], "contract": [32, 52, 101, 163, 197, 206, 219, 220, 221, 222, 223, 224], "len_i": [32, 197], "mat_1": 32, "mat_2": 32, "jscode": [32, 197], "rh": [32, 40, 42, 50, 81, 82, 86, 107, 108, 113, 120, 121, 122, 186, 195, 197, 199, 213, 215, 216, 247], "user_funct": [32, 197], "argument_test": [32, 197], "cfunction_str": [32, 197], "octav": [32, 130, 230, 260], "custom_funct": [32, 197], "existing_octave_fcn": [32, 197], "is_matrix": [32, 197], "my_mat_fcn": [32, 197], "my_fcn": [32, 197], "mat": [32, 83, 132, 157, 197], "octave_cod": [32, 197], "summat": [32, 49, 50, 54, 55, 58, 163, 191, 197, 200, 209, 217, 218, 221, 222, 223, 229], "mathematica_cod": [32, 197], "g1": [32, 35, 40, 41, 75, 86, 100], "g2": [32, 35, 40, 41, 75, 79, 86, 100], "gamma_1": [32, 103], "gamma_2": [32, 103], "\u03b3\u2081": 32, "\u03b3\u2082": 32, "\u03b2": [32, 182], "h_i": [32, 46], "c89": [32, 197, 230], "julia_cod": [32, 197], "rust_cod": [32, 197], "powi": [32, 197], "make_routin": [32, 230], "f95": [32, 229, 230], "matlab": [32, 104, 130, 230, 260, 269], "breadth": [32, 50, 217], "c_name": [32, 230], "c_code": [32, 230], "h_name": [32, 230], "c_header": [32, 230], "volume_result": 32, "ifndef": [32, 230], "project__test__h": [32, 230], "endif": [32, 230], "preprocessor": [32, 198, 209, 230], "global_var": [32, 230], "insensit": [32, 86, 130, 197, 228, 230], "argument_sequ": [32, 230], "routin": [32, 39, 49, 50, 51, 52, 75, 80, 81, 86, 90, 135, 163, 186, 190, 193, 196, 197, 198, 209, 210, 213, 214, 215, 216, 229, 234, 235, 248], "name_expr": [32, 230], "to_fil": [32, 230], "f_name": [32, 230], "f_code": [32, 230], "choic": [32, 42, 58, 75, 77, 91, 127, 159, 168, 172, 173, 180, 188, 190, 193, 197, 209, 213, 235, 267], "hydrogen": [32, 258], "r_nl": [32, 102, 164], "my_routin": 32, "result_var": [32, 230], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 32, "__________": [32, 185], "\u212f": [32, 135, 182, 197, 263, 267, 269, 273, 274], "assoc_laguerr": [32, 58, 197], "fcn": [32, 230], "result_5397460570204848505": [32, 230], "out_8598435338387848786": [32, 230], "examin": [32, 51, 152, 228, 230, 273], "inputargu": [32, 230], "outputargu": [32, 230], "inoutargu": [32, 230], "disk": [32, 51, 205, 216, 236], "binary_funct": [32, 91, 229], "tensor": [32, 37, 52, 57, 86, 101, 110, 128, 142, 148, 149, 150, 160, 163, 172, 173, 197, 218, 219, 221, 222, 229, 236, 245, 246, 252, 256], "binary_func": [32, 229], "servic": [32, 217], "tempdir": [32, 229], "qho_1d": [32, 139], "psi_n": [32, 139], "y_": [32, 58, 75, 102, 182], "qho": 32, "tmp": 32, "reveal": [32, 90, 216, 268], "subroutin": [32, 41, 159, 190], "autofunc": 32, "dimens": [32, 34, 51, 52, 58, 59, 61, 63, 64, 65, 67, 79, 81, 83, 86, 89, 93, 101, 117, 137, 147, 149, 152, 157, 166, 167, 170, 171, 173, 183, 186, 197, 210, 213, 215, 217, 218, 222, 223, 230, 242, 244, 246, 258], "hbar": [32, 139, 145, 158, 164, 168, 170, 182], "05457162d": 32, "14159265358979d0": 32, "0d0": [32, 197], "74126166983329d": 32, "33": [32, 50, 53, 86, 128, 136, 190, 194, 197, 217], "verbos": [32, 50, 81, 90, 197, 228, 229, 272], "mute": [32, 229], "backend": [32, 78, 91, 92, 98, 116, 118, 124, 177, 194, 229, 236, 259], "auxiliari": [32, 77, 108, 113, 125, 213, 229], "function_nam": [32, 229], "sympy_express": [32, 229], "mandatori": [32, 197, 229], "illustr": [32, 86, 114, 117, 168, 187, 200, 204], "psi_nl": 32, "766": 32, "incur": [32, 91], "get_numpy_arrai": 32, "tight": 32, "temp": [32, 115], "alloc": [32, 56], "walk": [32, 34, 155, 158, 207], "memori": [32, 50, 90, 193, 218, 229, 232], "fuse": 32, "wise": [32, 33, 56, 81, 186, 190, 197, 203, 229], "unabl": [32, 63, 67, 92, 215, 242, 262, 263], "fortun": [32, 91, 117, 193, 194], "reconnect": 32, "autom": [32, 56, 91, 206, 229, 267], "ideolog": [32, 216], "fashion": [32, 50, 83, 115, 125, 126, 128, 181, 184, 235], "broadcast": [32, 91, 197, 222, 229], "outperform": 32, "jensen": 32, "quantit": [32, 165], "leverag": [32, 91, 197], "ufunc": [32, 91, 229, 236], "fn_numpi": 32, "fn_fortran": 32, "linspac": [32, 73, 91, 113, 130], "xx": [32, 86, 110, 181, 235], "21306132": 32, "98101184": 32, "44626032": 32, "timeit": [32, 194], "10000": [32, 54, 90, 91, 93, 215], "18891601900395472": 32, "004707066000264604": 32, "facil": 32, "comparison": [32, 49, 50, 80, 86, 113, 184, 192, 196, 215, 228, 235], "thereof": [32, 50, 184, 190, 192], "optims_c99": 32, "log1p": [32, 197], "expm1_opt": 32, "log1p_opt": 32, "exp2_opt": 32, "log2_opt": 32, "log2const_opt": 32, "funcminusoneoptim": 32, "func_m_1": 32, "opportunist": 32, "replaceoptim": 32, "toward": [32, 50, 58, 184, 204, 216], "catastroph": 32, "smaller": [32, 41, 42, 50, 51, 58, 66, 77, 83, 90, 125, 185, 187, 190, 193, 200, 206, 207, 215, 235, 262, 273], "replace_in_add": 32, "cost_funct": 32, "prioriti": [32, 73, 104, 113, 181, 236], "__call__": [32, 42, 50, 192], "exp2": [32, 197], "create_expand_pow_optim": 32, "base_req": 32, "is_symbol": [32, 81], "expand_opt": 32, "opt2": 32, "is_funct": 32, "log2": [32, 197], "matin_opt": 32, "matinv_opt": 32, "matrixsolv": [32, 197], "matrix_nod": 32, "numpyprint": 32, "doprint": [32, 197], "linalg": 32, "seriesapprox": 32, "reltol": 32, "max_ord": 32, "n_point_check": 32, "threshold": [32, 90], "largest": [32, 42, 44, 50, 56, 58, 86, 89, 90, 143, 184, 188, 215, 235], "series_approx2": 32, "1e": [32, 50, 54, 86, 98, 132, 193, 215], "series_approx3": 32, "series_approx8": 32, "sumapprox": 32, "neglect": 32, "2000": [32, 36, 77, 90, 191], "sum_approx3": 32, "sum_approx2": 32, "sum_approx1": 32, "token": [32, 75, 78, 92], "diagram": [32, 39, 79, 93, 116, 117, 118, 123, 143, 222, 246, 259, 268], "codegenast": 32, "assignmentbas": 32, "augmentedassign": 32, "addaugmentedassign": 32, "subaugmentedassign": 32, "mulaugmentedassign": 32, "divaugmentedassign": 32, "modaugmentedassign": 32, "codeblock": [32, 92], "quotedstr": 32, "intbasetyp": 32, "_sizedinttyp": 32, "signedinttyp": 32, "unsignedinttyp": 32, "floatbasetyp": 32, "floattyp": 32, "complexbasetyp": 32, "complextyp": 32, "pointer": [32, 230, 231], "functionprototyp": 32, "functiondefinit": [32, 92], "stream": [32, 51, 198, 209, 235], "functioncal": 32, "breaktoken": 32, "continuetoken": 32, "nonetoken": 32, "float32": [32, 91, 92, 236], "float64": [32, 91, 217], "codeprint": 32, "underli": [32, 42, 48, 50, 79, 86, 98, 113, 158, 171, 215, 216, 217], "complex_": 32, "bool_": 32, "intc": [32, 92], "intp": 32, "unsign": [32, 55, 209], "int8": 32, "int16": 32, "int32": 32, "int64": [32, 217], "uint8": 32, "uint16": 32, "uint32": 32, "uint64": 32, "x86": 32, "amd64": 32, "complex64": 32, "complex128": 32, "newton": [32, 58, 123, 166, 170, 190, 194], "aug_assign": 32, "tol": [32, 50, 188], "val": [32, 50, 62, 188, 192, 236], "whl": 32, "py_str": 32, "inf": [32, 42, 50, 86, 188, 193, 205, 213, 217], "exec": [32, 50, 78, 236], "1121416371": 32, "909672693737": 32, "867263818209": 32, "865477135298": 32, "865474033111": 32, "1g": 32, "3e": 32, "2003": [32, 182, 191, 197, 210], "source_format": [32, 197], "align": [32, 60, 86, 107, 124, 181, 182, 197, 228], "op": [32, 50, 86, 152, 163, 176, 180, 206, 235, 236], "parametr": [32, 58, 59, 63, 86, 183, 210, 216, 242, 244, 251], "volatil": 32, "binop": 32, "exit": [32, 90, 228], "premad": 32, "break_": 32, "lift": [32, 46, 56, 58, 75, 188, 190, 193], "left_hand_sid": 32, "topological_sort": [32, 235], "postprocess": [32, 193, 198, 209], "topolog": [32, 50, 52, 75, 186, 205, 235], "continue_": 32, "untyp": 32, "compliant": 32, "ok": [32, 42, 197, 213], "elem": [32, 41, 184], "ijk": [32, 222], "stride": [32, 222], "lmn": 32, "cast_nocheck": 32, "alia": [32, 43, 50, 60, 66, 81, 82, 84, 88, 147, 156, 163, 184, 187, 188, 192, 196, 205, 228, 238, 273], "nbit": 32, "storag": [32, 50, 86, 157, 182, 190], "nmant": 32, "mantissa": 32, "nexp": 32, "half_precis": 32, "f16": 32, "65504": 32, "tini": [32, 50], "ep": [32, 41, 49, 188, 192, 193], "decimal_dig": 32, "cast_check": 32, "1e5": 32, "cast": [32, 83, 265], "subnorm": [32, 41], "loss": [32, 75, 163, 229, 247], "idempot": 32, "loos": [32, 50, 208], "overflow": [32, 232], "max_expon": 32, "min_expon": 32, "for_i": 32, "for_ji": 32, "for_kji": 32, "function_arg": [32, 228], "fcall": 32, "bar": [32, 58, 114, 123, 152, 158, 238], "baz": 32, "return_typ": 32, "fp": [32, 33, 50, 193, 199], "from_functionprototyp": 32, "prototyp": [32, 91, 230], "value_const": 32, "pointer_const": 32, "attr_param": 32, "looking_for": 32, "as_declar": 32, "formatstr": 32, "5g": 32, "stdout": [32, 228], "stderr": 32, "atom": [32, 42, 77, 80, 81, 102, 164, 187, 194, 197, 215, 216, 222], "oppos": [32, 236, 263], "_field": 32, "_construct_": 32, "not_in_arg": 32, "exclud": [32, 49, 50, 77, 86, 106, 130, 185, 188, 190, 193, 203, 213, 215, 228, 231, 235], "float16": 32, "inttyp": 32, "super": [32, 58, 188, 197, 242, 243], "from_expr": [32, 193], "toler": [32, 50, 54, 188, 209, 215], "42": [32, 39, 50, 53, 55, 63, 64, 66, 81, 82, 84, 86, 88, 90, 188, 210, 228], "v6": 32, "123456": [32, 50, 90], "v10": 32, "12345": [32, 54], "67894": 32, "boost_mp50": 32, "boost": 32, "multiprecis": [32, 187], "cpp_dec_float_50": 32, "r37": 32, "rtol": 32, "atol": 32, "precision_target": 32, "256": [32, 41, 90, 193, 197], "v18": 32, "123456789012345646": 32, "123456789012345649": 32, "Will": [32, 86, 92, 192, 197, 228], "decl1": 32, "decl2": 32, "alt": 32, "secondarili": [32, 193], "mathcin": 32, "cbrt": [32, 57, 197], "minu": [32, 49, 50, 178, 190, 197, 248], "0e": [32, 50], "fma": [32, 197], "cpu": [32, 91, 130], "hypot": [32, 197], "hypotenus": [32, 66], "log10": [32, 197], "ten": [32, 91], "plu": [32, 49, 86, 92, 130, 143, 197, 207, 236], "famili": [32, 34, 68, 77, 185], "commaoper": 32, "goto": 32, "preincrement": 32, "postdecr": 32, "decrement": [32, 208, 232], "postincr": 32, "increment": [32, 41, 42, 43, 49, 66, 90, 208, 217], "predecr": 32, "alignof": 32, "sizeof": 32, "struct": 32, "dsign": 32, "arrayconstructor": 32, "ac": [32, 42, 62, 96, 110, 128, 140, 210, 217, 235, 238], "95": [32, 48, 90, 190, 197, 213, 215, 230], "do1": 32, "1d0": 32, "do2": 32, "extent": 32, "intent_out": 32, "dim": [32, 52, 65, 91, 165, 171, 197, 220, 223], "arr": 32, "fortranreturn": 32, "aid": [32, 115], "implieddoloop": 32, "idl": 32, "signallib": 32, "prog": [32, 142], "myprogram": 32, "mysub": 32, "subroutinecal": 32, "passs": 32, "inout": 32, "bind_c": 32, "sum_": [32, 49, 50, 51, 55, 58, 75, 77, 81, 83, 90, 194, 199, 200, 207, 213, 217], "cmplx": [32, 197], "intent_in": 32, "intrins": 32, "isign": 32, "lbound": 32, "lb": [32, 72, 232], "literal_dp": 32, "num": [32, 41, 50, 90, 100, 188, 209, 213, 232, 238], "literal_sp": 32, "reshap": [32, 81, 113, 130, 218, 224, 235], "arrayexpr": 32, "shp": 32, "metric": [32, 42, 46, 52, 101, 209, 213, 216, 223], "snr": 32, "convolution2d": 32, "use_renam": 32, "ren": 32, "thingi": 32, "newtons_method": 32, "itermax": 32, "counter": [32, 50, 56, 62, 81, 94, 96], "raphson": 32, "criterion": [32, 41, 129, 185, 190], "dummi": [32, 46, 49, 56, 75, 77, 86, 113, 130, 158, 163, 187, 188, 192, 193, 194, 203, 204, 205, 207, 209, 213, 216, 221, 223, 226, 230, 235, 236], "netwon": 32, "algo": [32, 42], "r38": 32, "27s_method": 32, "newtons_method_funct": 32, "param": [32, 52, 86, 210], "render_as_modul": 32, "py_mod": 32, "865474033102": 32, "render_as_source_fil": 32, "printer_set": 32, "fcodeprint": [32, 197], "fpgroup": [33, 41], "studi": [33, 40, 49, 52, 86, 181, 184, 190, 193, 210, 217], "combinator": [33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 83, 90, 199, 218, 223, 232, 235, 253, 267, 273], "free_group": [33, 40, 41], "vfree_group": 33, "xfree_group": 33, "fp_group": [33, 41], "coset_enumeration_r": 33, "fall": [33, 49, 50, 55, 78, 177, 192, 197, 210, 214, 217], "famou": [33, 58, 77, 90, 210], "langl": [33, 41, 142, 182], "rangl": [33, 41, 142, 160, 182], "gen0": 33, "gen1": 33, "gen_": 33, "freegroup": 33, "x_2": [33, 40, 55, 72, 158, 185, 190, 193, 199, 210, 216], "x_3": [33, 40, 72, 158], "s_1": 33, "r_1": [33, 184, 194], "s_2": 33, "r_2": 33, "s_k": 33, "r_k": [33, 156], "s_i": [33, 46, 77, 79], "r_i": [33, 194], "reduct": [33, 86, 109, 190, 192, 208, 210], "techniqu": [33, 45, 75, 77, 197, 199, 209, 213, 216, 269], "ho05": [33, 40], "cdhw73": 33, "hav91": 33, "coset_enumeration_c": 33, "coset_enumer": 33, "relator_bas": 33, "coset_table_bas": 33, "total": [33, 39, 41, 50, 55, 66, 79, 80, 81, 83, 115, 117, 125, 132, 136, 142, 147, 160, 169, 182, 188, 190, 193, 206, 209, 213, 221, 223, 251], "influenc": [33, 93, 184, 185], "coset_table_max_limit": 33, "4096000": 33, "safeti": [33, 42, 84], "max_coset": 33, "cox": [33, 191, 193], "c_r": [33, 207], "50": [33, 41, 53, 54, 55, 58, 66, 86, 90, 93, 94, 136, 193, 197, 206, 215], "max_stack_s": 33, "500": [33, 54, 110], "deduction_stack": 33, "stack": [33, 67, 81, 130, 186, 192, 197, 226, 232, 269], "occurr": [33, 50, 90, 113, 173, 209, 217], "exce": [33, 90, 223], "modest": 33, "low_index_subgroup": 33, "conjugaci": [33, 41], "coset_t": [33, 41], "reidemeister_present": 33, "y_1": [33, 210, 217], "y_2": [33, 210, 217], "john": [33, 41, 58, 193, 210, 213], "cannon": 33, "lucien": 33, "dimino": [33, 41], "georg": [33, 184, 213, 235], "hava": 33, "jane": 33, "watson": [33, 209], "comp": [33, 213], "463": [33, 129], "490": [33, 42], "1973": [33, 51, 179], "derek": [33, 40], "holt": [33, 40, 41, 48], "chapman": [33, 40], "hall": [33, 40, 217], "crc": [33, 40, 42], "2005": [33, 40, 77, 90, 193], "xvi": [33, 40], "514": [33, 40, 191], "symposium": [33, 75, 190, 191, 207], "issac": [33, 77, 191, 215], "bonn": 33, "1991": [33, 191], "191": [33, 216], "199": 33, "acm": [33, 49, 75, 77, 191, 207, 213, 215], "graycod": 34, "kw_arg": [34, 44, 163, 222, 223], "hamiltonian": [34, 154], "edg": [34, 43, 44, 79, 186, 197, 216, 235, 272], "hamilton": [34, 81], "vertex": [34, 44, 61, 66, 77, 186], "000": [34, 54, 77, 80, 157, 235], "110": [34, 80, 213, 215, 229, 235], "010": [34, 80, 235], "011": [34, 80, 157, 235], "111": [34, 53, 60, 80, 90, 235], "101": [34, 80, 90, 157, 235], "001": [34, 54, 80, 132, 235], "delet": [34, 79, 81, 86, 194, 238, 273], "statist": [34, 51, 58, 217, 228, 267], "manner": [34, 51, 58, 127, 161, 178, 210, 213, 218, 235, 250], "generate_grai": 34, "0000": 34, "0001": [34, 54], "0011": [34, 45], "0010": 34, "0110": 34, "0111": [34, 157], "0101": [34, 157], "0100": 34, "1100": 34, "1101": 34, "1111": 34, "1110": 34, "1010": 34, "1011": 34, "1001": 34, "r39": 34, "nijenhui": 34, "wilf": [34, 49, 215], "1978": [34, 41, 168, 191], "r40": 34, "knuth": [34, 42, 232], "2011": [34, 42, 75, 90, 179, 206], "art": [34, 42, 184, 197, 199, 232, 259], "vol": [34, 42, 51, 55, 58, 75, 86, 101, 192, 193, 207, 232, 235], "addison": [34, 42, 90, 191], "weslei": [34, 42, 90, 191], "r41": 34, "reflect": [34, 38, 42, 50, 60, 61, 66, 79, 96, 132, 135, 136, 173], "brgc": 34, "6th": [34, 90], "unrank": [34, 39, 41, 42, 44], "r42": 34, "statweb": 34, "stanford": 34, "susan": 34, "s208": 34, "node12": 34, "tail": [34, 49, 50, 188, 217], "00010": 34, "random_bitstr": 34, "bitlist": [34, 45], "gray_to_bin": 34, "endian": 34, "bin_to_grai": 34, "get_subset_from_bitstr": 34, "bitstr": 34, "graycode_subset": 34, "group_construct": 35, "directproduct": [35, 38], "__mul__": [35, 41, 81, 86, 188, 192], "shift": [35, 41, 42, 44, 51, 58, 61, 65, 67, 80, 183, 188, 190, 193, 200, 207, 215, 217], "gn": 35, "named_group": [35, 38, 40, 41, 47, 48], "cyclicgroup": [35, 38, 41], "perm_group": [35, 40, 41, 42, 47, 48], "permutationgroup": [35, 38, 40, 41, 42, 47, 48], "group_numb": 36, "is_nilpotent_numb": 36, "r43": 36, "randprim": [36, 90], "pakianathan": 36, "shankar": 36, "monthli": [36, 51, 86], "107": [36, 191], "631": 36, "634": 36, "is_abelian_numb": 36, "r44": 36, "is_cyclic_numb": 36, "r45": 36, "polyhedron": [37, 41, 77, 235], "prufer": 37, "grai": [37, 45, 78, 132, 177, 183], "nilpot": [37, 41, 86], "abelian": [37, 38, 41, 79, 168, 184], "cyclic": [37, 38, 41, 42, 43, 53, 81, 90, 223, 235], "canonic": [37, 50, 206, 223], "coset": [37, 41, 46, 192], "todd": 37, "coxet": [37, 79], "subgroup": [37, 41, 42, 46, 48, 79, 90], "bibliographi": 37, "polycycl": [37, 41], "collector": 37, "symmetricgroup": [38, 40, 41, 47, 48], "transposit": [38, 41, 42, 51, 81, 83, 219], "is_group": [38, 41], "generate_schreier_sim": [38, 41], "af": [38, 41, 47, 130], "dihedralgroup": [38, 41, 48], "alternatinggroup": [38, 41, 47], "r46": 38, "symmetric_group": 38, "generators_and_rel": 38, "dihedr": [38, 42], "d_n": [38, 79, 193], "gon": 38, "bab": 38, "generate_dimino": [38, 41], "perm": [38, 40, 41, 42, 43, 48, 55, 81, 83, 86, 218], "cyclic_form": [38, 42, 43], "r47": 38, "dihedral_group": 38, "31": [38, 50, 53, 54, 66, 90, 128, 182, 193, 210], "ex": [38, 77, 101, 112, 187, 189, 192, 193, 223, 231], "r48": 38, "armstrong": 38, "abeliangroup": [38, 41], "cyclic_ord": 38, "theorem": [38, 51, 58, 60, 66, 76, 77, 81, 86, 90, 103, 104, 115, 163, 172, 180, 184, 187, 190, 204, 207, 210, 216, 249, 259], "r49": 38, "groupprop": [38, 41], "subwiki": [38, 41], "structure_theorem_for_finitely_generated_abelian_group": 38, "multiset_partit": [39, 55, 75, 232, 235], "rg": 39, "growth": [39, 90, 190, 263], "from_rg": 39, "abcd": [39, 43, 163, 235, 238], "cbead": 39, "sort_kei": [39, 50, 213], "ti": [39, 42, 50, 90], "integerpartit": [39, 235], "summand": [39, 192], "r50": 39, "partition_": [39, 55], "28number_theori": 39, "as_dict": [39, 187, 193], "as_ferr": 39, "char": 39, "ferrer": 39, "next_lex": [39, 42], "lexic": [39, 143, 235], "prev_lex": 39, "random_integer_partit": 39, "seed": [39, 41, 50, 51, 60, 63, 64, 86, 90, 190, 217, 228, 235], "85": [39, 54, 55, 86, 90, 115, 161, 182, 217], "rgs_gener": 39, "37": [39, 51, 56, 60, 86, 90, 94, 197, 210], "52": [39, 55, 90, 93, 94, 182, 196, 210, 213, 235, 263], "151": 39, "203": [39, 55], "rgs_enum": 39, "rgs_unrank": 39, "rgs_rank": 39, "pcgroup": 40, "pcg": 40, "pc_seri": [40, 41], "polycyl": 40, "pc_present": 40, "pc_sequenc": [40, 41], "miss": [40, 41, 67, 197, 215, 230, 273], "adjac": [40, 41, 42, 50, 100, 135, 186, 235], "der": [40, 41], "relative_ord": [40, 41], "polycyclic_group": [40, 41], "gen": [40, 41, 46, 47, 48, 50, 86, 184, 187, 188, 190, 192, 193, 194, 195, 203, 209, 212, 215], "is_ident": [40, 42, 50], "poss": [40, 115, 181], "pc_group": 40, "a_j": [40, 58, 75, 168, 190, 199, 207], "notin": [40, 75, 205], "_order": 40, "minimal_uncollected_subword": 40, "subword_index": 40, "i_1": [40, 163, 193, 218], "a_1": [40, 41, 51, 58, 72, 75, 81, 86, 101, 163, 168, 185, 190, 207, 210, 213, 215, 217, 273], "i_r": 40, "a_r": [40, 207], "i_2": [40, 163, 193], "s_": [40, 46, 113, 190], "s_j": [40, 79, 190], "x3": [40, 50, 55, 187, 213, 217], "collected_word": 40, "free_to_perm": 40, "bottom": [40, 41, 50, 51, 66, 81, 86, 89, 112, 192, 197, 206, 251], "pictur": [40, 197], "x_3x_2": 40, "x_3x_1": 40, "x_2x_1": 40, "x_3x_0": 40, "x_2x_0": 40, "x_1x_0": 40, "varii": 40, "derived_seri": [40, 41], "pc_resent": 40, "k_arrai": 40, "array_form": [40, 42, 43], "v_arrai": 40, "e_1": [40, 86, 184, 190, 193], "e_n": [40, 55, 79, 86, 139, 184, 193], "exponent_vector": 40, "leading_expon": 40, "dup": [41, 188, 189], "pn": [41, 117, 127], "motion": [41, 104, 107, 108, 109, 112, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 130, 131, 176, 177, 180, 181, 217], "front": [41, 50, 115, 116, 132, 162, 188, 190, 193, 197, 209, 273], "face": [41, 43, 63, 77, 113, 190, 194, 197, 210, 251, 269], "rubik": 41, "3674160": 41, "pgroup": [41, 43], "corner": [41, 43, 81, 193, 213, 216, 236], "reset": [41, 43, 183, 190, 193, 228, 231, 233], "p10": 41, "make_perm": 41, "r51": 41, "eick": [41, 48], "brien": [41, 48], "r52": 41, "seress": 41, "r53": 41, "schreier_vector": 41, "r54": 41, "nielsen_transform": 41, "product_replacement_algorithm": 41, "r55": 41, "frank": [41, 42, 86], "celler": 41, "charl": 41, "leedham": 41, "green": [41, 124, 183], "scott": 41, "murrai": 41, "alic": [41, 51], "niemey": 41, "r56": 41, "block_": 41, "28permutation_group_theori": 41, "r57": 41, "algorithmist": 41, "php": [41, 58, 90, 210, 217], "union_find": 41, "r58": 41, "multiply_transitive_group": 41, "r59": 41, "center_": 41, "28group_theori": 41, "centralizer_and_norm": 41, "derived_subgroup": 41, "nilpotent_group": 41, "colost": 41, "hulpk": 41, "cgt": 41, "cgtnote": 41, "__contains__": 41, "__weakref__": [41, 81], "weak": [41, 50, 81, 187, 190], "_coset_repres": 41, "hg": 41, "transvers": [41, 46, 48, 136, 137], "coset_transvers": 41, "_distinct_primes_lemma": 41, "_element": 41, "_eval_is_alt_sym_monte_carlo": 41, "05": [41, 72, 98, 179, 182], "mont": 41, "carlo": 41, "candidat": 41, "randomli": [41, 50, 51, 90, 157], "n_ep": 41, "_check_cycles_alt_sym": [41, 48], "_eval_is_alt_sym_na": 41, "only_sym": 41, "only_alt": 41, "_p_elements_group": 41, "_random_pr_init": 41, "_random_prec_n": 41, "modif": [41, 56, 86, 216, 217, 232], "69": [41, 86, 215, 232], "71": [41, 66, 86, 166], "_random_gen": 41, "append": [41, 50, 51, 86, 94, 130, 158, 183, 188, 197, 218, 230, 231, 235, 273], "accumul": [41, 228, 232], "random_pr": 41, "chosen": [41, 42, 51, 52, 63, 64, 86, 90, 93, 107, 131, 165, 168, 183, 184, 188, 190, 192, 197, 204, 207, 213, 217, 228, 242], "gh": [41, 185, 216, 223], "eventu": [41, 58, 77, 183, 184, 204, 230, 235], "_sylow_alt_sym": 41, "sylow": 41, "p_1": [41, 46, 51, 68, 90, 180, 207, 210], "p_2": [41, 51, 68, 90, 180, 207], "p_p": 41, "sylow_subgroup": 41, "is_alt_sym": [41, 48], "_union_find_merg": 41, "parent": [41, 50, 73, 107, 124, 173, 176, 183, 187, 188, 192, 228, 232, 242, 245, 246], "not_rep": 41, "atkinson": 41, "83": [41, 196], "87": [41, 56, 86, 90], "minimal_block": 41, "_union_find_rep": 41, "r60": 41, "r66": 41, "compress": [41, 86, 89], "r62": 41, "r68": [41, 42], "_verifi": 41, "_h": [41, 216], "gens_k": 41, "rels_k": 41, "gens_h": 41, "stabil": [41, 46, 48, 54, 100, 127, 221], "inject": [41, 50, 184, 188, 193, 269], "homomorph": [41, 189], "rels_h": 41, "strong_present": 41, "abelian_invari": 41, "isomorph": [41, 44, 184, 187, 190, 192], "t_1": [41, 55, 210], "t_2": [41, 55, 210], "t_r": [41, 128, 223], "542": 41, "adopt": [41, 223], "schreier": [41, 46, 48], "sim": [41, 46, 48, 75], "b_1": [41, 48, 58, 72, 75, 184, 207, 210, 213, 273], "b_2": [41, 48, 58, 72, 207, 213], "dot": [41, 42, 46, 48, 51, 63, 65, 72, 81, 86, 100, 115, 116, 117, 120, 121, 122, 125, 126, 127, 128, 130, 147, 173, 177, 179, 180, 181, 182, 184, 185, 190, 193, 197, 216, 217, 235, 242, 245, 247, 248], "b_k": [41, 48, 51, 55, 58, 199, 200], "strong": [41, 46, 47, 48, 90, 91], "89": [41, 48, 77], "55": [41, 53, 55, 86, 182, 183, 193, 210], "57": [41, 86, 90, 217], "strong_gen": [41, 47, 48], "basic_transvers": [41, 48], "basic_orbit": [41, 48], "basic_stabil": 41, "baseswap": 41, "po": [41, 75, 80, 81, 110, 128, 130, 188, 215], "strong_gens_distr": [41, 48], "swap": [41, 42, 43, 81, 86, 143, 147, 156, 217, 235], "orbit": [41, 48, 163, 164, 166], "b_": [41, 46, 48, 50, 55, 58, 75, 83, 100, 199, 207, 210, 218], "b_i": [41, 46, 48, 75, 184, 207], "la": [41, 130, 168], "vega": 41, "testutil": [41, 47, 48], "_verify_bsg": [41, 47, 48], "schreier_sim": [41, 47, 48], "bsg": [41, 46, 48, 223], "102": [41, 86], "98": [41, 51, 129, 193, 213], "pseudocod": 41, "beta_": 41, "g_": [41, 48, 49, 58, 75, 210], "foral": [41, 49, 52, 168], "zg": 41, "gz": 41, "c_g": 41, "gs": [41, 75], "sg": [41, 217, 223], "is_subgroup": 41, "subgroup_search": 41, "hgh": 41, "closur": [41, 47, 73, 143, 192, 205], "composition_seri": 41, "h_0": [41, 46], "h_1": [41, 46, 216], "h_2": [41, 216], "1024": [41, 197, 217], "512": [41, 58], "128": [41, 55, 58, 60, 90, 191, 197], "32": [41, 53, 56, 58, 60, 86, 90, 98, 128, 191, 193, 194, 206, 207, 210, 217, 228], "243": [41, 58, 215], "81": [41, 55, 60, 81, 86, 90, 113, 115, 182, 196], "conjugacy_class": 41, "xax": 41, "s_3": 41, "s3": [41, 49, 100, 200, 210], "feasibl": [41, 100], "resiz": [41, 42, 81, 83], "coset_factor": 41, "factor_index": 41, "_basic_orbit": 41, "u1": [41, 90, 113, 115, 116, 117, 118, 120, 121, 124, 125, 127, 130, 173, 175, 176, 177, 180, 213], "u2": [41, 89, 90, 113, 115, 116, 117, 118, 120, 121, 125, 130, 173, 176, 180, 213], "_strip": [41, 48], "coset_rank": 41, "lexicograph": [41, 42, 45, 46, 50, 190, 193, 235], "coset_unrank": 41, "standardis": [41, 187], "subsect": [41, 248], "compris": [41, 51, 83, 110, 128, 131, 193, 235], "g_0": [41, 210], "g_1": [41, 193, 204, 210, 213], "g_2": [41, 79, 204, 213], "g_i": [41, 204], "g_k": 41, "tetrahedron": [41, 43], "r64": 41, "axiom": [41, 184], "doy": 41, "sc": [41, 77], "thesi": [41, 50, 204, 242], "generator_product": 41, "sn": [41, 42, 49, 72], "is_abelian": 41, "_random_prec": 41, "probabl": [41, 50, 55, 58, 62, 90, 113, 157, 161, 207, 213, 216, 217, 229, 265, 271], "transit": [41, 130, 190, 217], "82": [41, 77, 86, 217], "proport": [41, 51, 204], "226": 41, "227": 41, "is_altern": 41, "quicker": [41, 90], "taxonomi": 41, "is_cycl": 41, "p_": [41, 46, 50, 77, 168, 210, 213, 218], "p_i": [41, 46, 90], "equiv": [41, 51, 55, 90, 192, 207, 210], "pmod": [41, 50, 51, 55, 86, 207], "p_j": [41, 46], "r65": 41, "35": [41, 44, 53, 55, 63, 64, 77, 86, 90, 115, 192, 197, 210, 213, 217], "rose": 41, "is_elementari": 41, "is_nilpot": [41, 86], "solvabl": [41, 210, 213, 216, 274], "lower_central_seri": 41, "is_solv": 41, "is_norm": [41, 161], "gr": 41, "is_perfect": [41, 90], "is_polycycl": 41, "is_primit": [41, 188, 193], "primit": [41, 50, 51, 58, 90, 157, 161, 184, 185, 187, 188, 190, 192, 193, 196, 197, 210, 263], "cardin": [41, 42, 45, 184, 205], "badli": 41, "random_stab": 41, "g3": [41, 100], "s5": 41, "is_symmetr": [41, 81], "is_transit": 41, "is_trivi": 41, "cba": [41, 218, 235], "mainli": [41, 58, 86, 91, 168, 177, 190, 207, 210, 213], "max_div": 41, "siev": [41, 90], "nonempti": 41, "gb": 41, "moreov": [41, 51, 75, 167, 178, 184, 185, 190, 198, 246], "congruenc": [41, 50, 90, 207, 210], "p_0": [41, 46, 68, 207, 210], "maxim": [41, 51, 79, 184, 188, 192, 204, 206], "intransit": 41, "normal_closur": 41, "adjoin": [41, 185], "yx": [41, 181], "73": [41, 49, 50, 63, 90, 213], "74": [41, 55, 90], "orb": 41, "78": [41, 64, 86, 90, 94, 168, 213, 217], "orbit_transvers": 41, "orbit_rep": 41, "send": [41, 50, 51, 56, 90, 184, 213, 215], "proof": [41, 44, 75, 77, 216], "79": [41, 42, 94], "pointwise_stabil": 41, "pointwis": [41, 48], "p_k": [41, 90], "p20": 41, "stab": 41, "schreier_sims_increment": [41, 48], "polycyclicgroup": 41, "eliminate_gen": 41, "gen_count": 41, "b1": [41, 46, 58, 90, 93, 94, 105, 113, 130, 173, 188, 197, 207, 210, 213, 247], "b_r": 41, "slp_dict": 41, "seq": [41, 50, 53, 86, 188, 190, 193, 203, 215, 235], "93": [41, 191], "schreier_sims_random": [41, 48], "consec_succ": 41, "consec": 41, "_succ": 41, "97": [41, 51, 90, 190], "sift": [41, 48, 235], "amend": 41, "decompos": [41, 42, 48, 50, 52, 56, 61, 86, 90, 147, 156, 157, 159, 188, 193, 196, 217], "unsuccess": [41, 48], "accordingli": [41, 185, 192], "halt": 41, "signifi": [41, 50, 193, 217], "g_t": 41, "leq": [41, 49, 51, 58, 75, 86, 90, 190, 192, 203, 204, 210, 217], "prop": [41, 192], "init_subgroup": 41, "supergroup": 41, "sought": [41, 90, 148, 158, 209, 216], "prune": 41, "prop_even": 41, "lengthi": 41, "114": [41, 90], "117": [41, 58], "terribl": 41, "crucial": [41, 49, 187], "len1": 41, "len2": 41, "len3": 41, "transitivity_degre": 41, "fold": [41, 50, 56, 197, 204, 209], "a_2": [41, 51, 72, 86, 190, 207, 210, 213, 217, 273], "a_k": [41, 51, 194, 200, 215], "arrang": [42, 100, 108, 128, 130, 206, 210, 223], "r69": 42, "reorder": [42, 49, 163, 193, 213, 217, 235], "pretty_print": [42, 78, 110, 115, 116, 120, 121, 122, 124, 125, 126, 128, 131, 173, 175, 176, 177, 180, 181, 197], "enter": [42, 50, 51, 55, 63, 90, 92, 93, 108, 112, 115, 125, 197, 207, 215, 228, 268, 272], "understood": [42, 90, 168, 184, 188], "economi": 42, "caution": [42, 50, 56, 209], "singleton": [42, 80, 201, 216, 253, 255, 268], "indexerror": [42, 86, 193], "autos": [42, 89], "watch": 42, "print_cycl": 42, "econom": [42, 77, 235], "retain": [42, 50, 56, 58, 77, 92, 193, 198, 206, 209], "biject": [42, 44, 51, 81, 184], "full_cyclic_form": 42, "rmul": 42, "unrank_lex": 42, "r73": 42, "zo42": 42, "from_sequ": 42, "a1": [42, 46, 50, 78, 81, 90, 94, 113, 130, 137, 213, 217, 218, 247, 273], "a2": [42, 46, 50, 79, 81, 90, 94, 113, 130, 137, 186, 217, 218, 247, 273], "a3": [42, 46, 50, 79, 81, 130, 247, 273], "perfectli": [42, 49, 50, 51, 190, 193, 196], "skiena": 42, "ma": [42, 49, 118], "1990": [42, 75, 207, 242], "r70": 42, "wendi": 42, "myrvold": 42, "ruskei": 42, "2001": [42, 90, 191], "lett": 42, "septemb": [42, 232], "281": 42, "284": [42, 90], "1016": 42, "s0020": 42, "0190": 42, "01": [42, 50, 54, 113, 157, 191, 209, 235], "00141": 42, "r71": 42, "kreher": 42, "stinson": 42, "1999": [42, 86, 191, 196, 213], "r72": 42, "graham": [42, 55, 56, 90], "patashnik": 42, "foundat": [42, 191, 192], "1994": [42, 190, 191, 193], "product_and_invers": 42, "r74": 42, "lehmer_cod": 42, "appliedpermut": 42, "magic": [42, 209, 228, 265], "attatch": 42, "_array_form": 42, "ascent": 42, "ie": [42, 210], "descent": 42, "fg": [42, 52, 213, 216], "gf": [42, 51, 184, 186, 187, 189, 190, 192], "r75": 42, "commutes_with": [42, 223], "cycle_structur": 42, "from_inversion_vector": 42, "get_adjacency_dist": 42, "n_adj": 42, "reev": 42, "colin": 42, "landscap": 42, "annal": 42, "86": [42, 86, 129, 196, 206], "473": 42, "josephu": 42, "get_precedence_matrix": 42, "get_precedence_dist": 42, "get_adjacency_matrix": 42, "get_positional_dist": 42, "subscript": [42, 188, 197, 207, 210, 235], "inversion_vector": 42, "lesser": [42, 193], "lie": [42, 52, 64, 65, 66, 193, 211, 217, 252, 259], "lehmer": 42, "ith": [42, 79, 90, 188, 194, 216, 217], "variat": [42, 50, 190, 204, 213, 234], "r76": 42, "eng": 42, "chula": 42, "piak": 42, "algo2008": 42, "htm": [42, 58, 77, 210], "is_singleton": 42, "is_odd": 42, "shuffl": [42, 86, 273], "012345": 42, "345": 42, "253": 42, "2531": 42, "25314": 42, "253140": 42, "r77": 42, "flavius_josephu": 42, "r78": 42, "josephus_problem": 42, "r79": 42, "wou": 42, "burtonl": 42, "trim": [42, 127], "unmov": 42, "mul_inv": 42, "next_nonlex": 42, "nonlex": 42, "rank_nonlex": 42, "unrank_nonlex": 42, "next_trotterjohnson": [42, 235], "trotter": 42, "johnson": [42, 86], "generate_bel": [42, 235], "rank_trotterjohnson": 42, "unrank_trotterjohnson": 42, "_af_par": 42, "pseudo": [42, 86, 90, 188, 190, 193], "inv_perm": 42, "enforc": [42, 115], "rmul_with_af": 42, "ascend": [42, 235], "r80": 42, "transposition_": 42, "28mathemat": [42, 50, 205], "flexibl": [42, 50, 113, 130, 180, 183, 187, 216, 263], "investig": [42, 75, 182, 184, 207, 235, 265], "cn": [42, 197, 272], "2n": [42, 49, 55, 58, 77, 81, 101, 126, 182, 200, 207], "dn": [42, 217], "klein": 42, "s4": [42, 100], "polyhedr": 43, "psg": 43, "platon": 43, "solid": [43, 64, 183, 251], "tetrahedr": 43, "octahedr": 43, "icosahedr": 43, "r81": 43, "polyhedralgroup": 43, "polyhedra": [43, 76], "shadow": 43, "h5": 43, "heinz": 44, "caylei": [44, 81], "r82": 44, "labeledtre": 44, "tree_repr": 44, "prufer_rank": 44, "prev": 44, "36": [44, 51, 55, 66, 77, 81, 86, 90, 94, 193, 197, 210, 213, 217, 251], "prufer_repr": 44, "record": [44, 50, 192, 228], "to_pruf": 44, "778": 44, "779": 44, "777": [44, 53], "1296": 44, "to_tre": 44, "r83": 44, "hamberg": 44, "erlend": 44, "2010": [44, 214, 235], "06": [44, 50, 115, 182, 217], "compact": [44, 50, 97, 130, 161, 177, 193, 197, 215, 232], "next_binari": 45, "prev_binari": 45, "bitlist_from_subset": 45, "subset_from_bitlist": 45, "superset_s": 45, "iterate_binari": 45, "iterate_graycod": 45, "prev_grai": 45, "next_grai": 45, "next_lexicograph": 45, "prev_lexicograph": 45, "rank_binari": 45, "unrank_binari": 45, "rank_grai": 45, "unrank_grai": 45, "rank_lexicograph": 45, "43": [45, 86, 90, 93, 94, 217, 273], "super_set": 45, "subset_indic": 45, "ksubset": 45, "itertool": [45, 235], "tensor_can": [46, 223], "msym": 46, "contravari": [46, 86, 223, 224], "covari": [46, 52, 86, 217, 223, 224], "d0": 46, "base_i": 46, "gens_i": 46, "n_i": [46, 190, 215], "sym_i": 46, "failur": [46, 54, 67, 75, 90, 217, 228, 273], "canonicalize_na": 46, "exchang": [46, 51, 86, 182, 186, 235], "anticommut": [46, 150, 152, 162, 163, 223], "canonical_fre": 46, "slot": [46, 147, 218, 222, 223, 268], "residu": [46, 51, 90, 190, 201, 207], "tensor_gen": 46, "list_free_indic": 46, "double_coset_can_rep": 46, "reintroduc": 46, "a_": [46, 50, 51, 58, 75, 79, 81, 83, 100, 101, 128, 199, 207, 210, 213, 215, 217, 218], "antisymmetr": [46, 52, 81, 163, 223], "d2": [46, 173, 184, 204, 217, 235, 242], "ord": [46, 51, 86], "t_c": 46, "get_symmetric_group_sg": [46, 223], "bsgs_direct_product": 46, "base2a": 46, "gens2a": 46, "t0": 46, "t1": [46, 66, 67, 90, 105, 110, 210, 217], "a_m": [46, 213], "a_n": [46, 51, 58, 75, 79, 168, 185, 190, 200, 210, 213, 273], "_a": [46, 58, 163, 193], "_b": [46, 58, 163], "base_f": 46, "gens_f": 46, "base1": 46, "gens1": 46, "base_a": 46, "gens_a": 46, "sgen": 46, "s_transvers": 46, "butler": [46, 223], "portug": [46, 223], "grow": [46, 50, 75, 86, 90, 187, 190], "computation": [46, 108, 109], "absenc": [46, 80], "observ": [46, 72, 75, 152, 181, 184, 207, 210, 213, 217, 250, 273], "opposit": [46, 66, 80, 81, 105, 107, 185, 188, 205, 209, 216, 224, 235, 242, 243, 273], "ind": [46, 199, 223], "d3": [46, 204], "a0": [46, 213, 273], "a4": [46, 50, 79, 130, 273], "a5": [46, 50], "interchang": [46, 49, 75, 213], "leftrightarrow": 46, "_af_rmul": 46, "t_": [46, 55], "b0": [46, 58, 188, 207, 213], "d_": [46, 207], "p0": [46, 60, 192, 213], "dbase": 46, "recomput": [46, 193], "d_i": [46, 75, 168], "s_0": 46, "d_0": [46, 51], "b_0": [46, 51, 55, 207, 210, 213], "b_j": [46, 48, 58, 75, 207], "sx": 46, "trace": [46, 81, 83, 101, 130, 190, 197, 217, 218, 219, 221, 235, 269], "h_n": [46, 58, 77, 216], "tab1": 46, "get_transvers": 46, "antisym": 46, "base2": 46, "gens2": 46, "_cmp_perm_list": 47, "hashabl": [47, 75, 235], "ls1": 47, "ls2": 47, "_naive_list_centr": 47, "_verify_centr": 47, "_verify_normal_closur": 47, "_base_ord": 48, "base_ord": 48, "backtrack": 48, "108": [48, 90, 94], "132": [48, 55, 173], "r84": 48, "_distribute_gens_by_bas": 48, "membership": [48, 192, 205], "_strong_gens_from_distr": 48, "_orbits_transversals_from_bsg": 48, "_handle_precomputed_bsg": 48, "transversals_onli": 48, "slp": 48, "_remove_gen": 48, "new_gen": 48, "r85": 48, "r86": 48, "recurr": [49, 55, 72, 86, 192, 203, 209, 211, 213, 217, 237], "annihil": [49, 68, 69, 73, 139, 163, 215], "is_hypergeometr": 49, "binomi": [49, 54, 57, 58, 90, 193, 197, 202, 209, 213, 217, 235, 273], "rf": [49, 55, 193], "ff": [49, 51, 55, 182, 185, 186, 187, 192, 193], "speci": [49, 50], "rise": [49, 55, 58, 182, 209, 213, 217, 245], "knowledg": [49, 50, 51, 192, 213, 268, 271], "hypersimp": [49, 208], "quotient": [49, 50, 53, 56, 90, 184, 185, 187, 189, 190, 193, 207, 209, 213], "dummy_vari": 49, "stand": [49, 50, 130, 185, 187, 188, 194], "karr": 49, "quad": [49, 50, 52, 54, 58, 77, 81], "exclus": [49, 50, 80, 86, 190, 265], "emphas": 49, "typeset": [49, 197], "doit": [49, 50, 52, 55, 56, 58, 77, 83, 100, 140, 142, 144, 155, 157, 160, 161, 163, 173, 182, 193, 199, 204, 209, 213, 214, 217, 219, 242, 244, 245, 247, 248, 263, 268], "seemingli": [49, 216], "nonsens": [49, 58], "r87": 49, "michael": [49, 191, 196], "april": 49, "1981": [49, 191], "305": 49, "350": [49, 110], "dl": [49, 181, 191], "cfm": [49, 191], "doid": [49, 191], "322248": 49, "322255": 49, "r88": 49, "capit": [49, 51, 100, 213], "sigma_not": 49, "r89": 49, "empty_sum": 49, "euler_maclaurin": [49, 54], "eval_integr": 49, "maclaurin": [49, 54], "endpoint": [49, 50, 54, 178, 205, 248], "28333333333333": 49, "sstr": [49, 177, 197], "full_prec": [49, 197], "26629073187415": 49, "0175000000000000": 49, "soon": [49, 50, 113, 168, 194], "eval_zeta_funct": 49, "is_absolutely_converg": 49, "sequence_term": 49, "is_converg": 49, "r90": 49, "absolute_converg": 49, "prod_": [49, 55, 58, 75, 90, 168, 207], "respons": [49, 50, 99, 100, 113, 183, 230], "diverg": [49, 58, 132, 242, 249], "dirichlet": [49, 58, 217], "r91": 49, "convergence_test": 49, "reverse_ord": 49, "selector": [49, 81, 209, 235], "handi": [49, 50, 86, 197, 268], "s0": [49, 73, 75, 135], "expr_with_intlimit": [49, 77], "exprwithintlimit": [49, 77], "reorder_limit": 49, "r92": 49, "walli": 49, "w2": [49, 137], "w2e": 49, "risingfactori": [49, 57, 58, 197, 199], "combsimp": [49, 50, 55], "pe": 49, "gammasimp": [49, 50, 209], "rewrit": [49, 50, 52, 55, 56, 58, 75, 77, 80, 93, 100, 160, 193, 204, 205, 206, 209, 213, 214, 215, 216, 217, 253, 254, 267, 269], "r93": 49, "r94": 49, "capital_pi_not": 49, "r95": 49, "empty_product": 49, "r96": 49, "infinite_product": 49, "r97": 49, "expr_with_limit": [49, 77], "exprwithlimit": [49, 77], "change_index": 49, "trafo": 49, "newvar": 49, "mapsto": [49, 75, 81, 192], "p3": [49, 60, 62, 63, 65, 66, 100, 183, 187, 206, 217], "has_empty_sequ": [49, 77], "has_reversed_limit": [49, 77], "has_finite_limit": [49, 77], "____": [49, 54, 77, 135, 185, 198, 217, 235, 274], "___": [49, 54, 77, 78, 86, 185, 209, 217, 222, 235, 272], "rubric": [49, 50], "_____": [49, 217], "gosper": 49, "gosper_norm": 49, "monic": [49, 184, 185, 188, 190, 192, 193, 196], "gcd": [49, 50, 51, 86, 90, 159, 187, 188, 189, 191, 192, 193, 197, 209, 210], "gosper_term": 49, "s_n": [49, 193], "f_k": [49, 125, 190], "g_n": [49, 55, 193], "f_n": [49, 55, 58, 184, 190, 193, 213], "gosper_sum": 49, "r98": 49, "marko": 49, "petkovsek": [49, 215], "herbert": 49, "doron": 49, "zeilberg": [49, 215], "ak": [49, 199], "peter": [49, 55, 90, 129, 179, 235], "ltd": 49, "welleslei": 49, "usa": [49, 191], "1997": [49, 75, 90, 191, 207], "convert_xor": [50, 92], "09": [50, 98], "2e": 50, "xor": [50, 53, 80, 92, 197, 265], "sympifyerror": 50, "coerc": [50, 127, 190], "cooper": 50, "sage": [50, 90, 182, 267], "shouldn": [50, 194], "unsanit": [50, 236, 262], "bitcount": 50, "improperli": 50, "unbound": [50, 222], "ns": 50, "fallback": [50, 78, 163, 177, 187, 197, 215], "ast": [50, 197, 254], "00000000000000": [50, 54, 164, 197, 217], "mylist1": 50, "mylist": 50, "mylist2": 50, "xxx": [50, 77, 86, 235, 237], "autosimplif": [50, 206, 209], "kern": 50, "r101": 50, "7649": 50, "r100": 50, "r104": 50, "r102": 50, "r103": 50, "r105": 50, "r106": 50, "r107": 50, "r99": 50, "recreat": 50, "isfinit": 50, "__cacheit": 50, "maxsiz": 50, "noqa": [50, 78, 188, 231], "f811": 50, "sympy_use_cach": 50, "cot": [50, 57, 58, 92, 194, 197, 206], "_arg": [50, 56], "as_mut": [50, 82, 83], "as_content_primit": [50, 86, 185, 193], "stub": 50, "as_dummi": [50, 77], "_0": [50, 75, 81, 86, 193, 236], "_r": [50, 163, 207, 216], "bound_symbol": [50, 77], "besid": [50, 190, 215], "typeinfo": 50, "truli": [50, 58, 168], "piec": [50, 54, 207, 230], "scan": 50, "appliedundef": 50, "canonical_vari": 50, "class_kei": 50, "sorted_class": 50, "dummy_eq": 50, "eg": [50, 113, 170, 216], "fromit": 50, "has_fre": 50, "exp_polar": [50, 57, 58, 207], "dif": 50, "_prec": 50, "xreplac": [50, 81, 86, 173], "q_": [50, 177, 210, 213], "r_": [50, 102, 164, 194], "repl_dict": 50, "rcall": [50, 52], "simul": [50, 113, 130, 196], "abus": [50, 223], "succe": [50, 75, 80, 90, 153, 192, 204], "newtyp": 50, "intuit": [50, 168, 201, 213], "is_mul": 50, "is_add": [50, 216], "mysin": [50, 236, 262], "_eval_rewrite_as_": 50, "_eval_rewrite_as_co": 50, "tie": [50, 235], "delai": [50, 98, 127, 206, 228, 263], "unsort": [50, 104, 172], "333333333333333333333": 50, "333333333333333314830": 50, "wildcard": [50, 209], "registri": 50, "metaprogram": 50, "address": [50, 197, 216], "mostli": [50, 56, 77, 86, 130, 158, 180, 184, 196, 197, 207, 215, 272], "__truediv__": [50, 188], "class_nam": 50, "mysingleton": 50, "_eval_is_g": 50, "_eval_is_eq": 50, "args_cnc": 50, "cset": 50, "split_1": 50, "suppress": [50, 92, 226, 233], "as_coeff_add": 50, "dep": [50, 213], "as_coeff_expon": 50, "as_coeffici": 50, "zz": [50, 55, 72, 73, 77, 83, 86, 87, 90, 110, 181, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 212], "coeff_monomi": [50, 193], "polytool": [50, 193, 216], "monomi": [50, 77, 80, 90, 185, 187, 188, 189, 190, 196, 197, 273], "as_coefficients_dict": 50, "inquiri": 50, "121": [50, 55, 90, 100, 173, 215], "84": [50, 54, 90], "separatevar": [50, 208, 213], "n3": [50, 113], "as_leading_term": [50, 204], "logx": [50, 204], "cdir": 50, "_eval_as_leading_term": 50, "as_numer_denom": [50, 215], "as_ordered_factor": 50, "as_ordered_term": 50, "as_powers_dict": 50, "lost": 50, "as_real_imag": [50, 56, 81, 198], "as_term": 50, "aseri": 50, "hir": 50, "asymptot": [50, 75, 100, 263], "hierarch": 50, "normalis": [50, 199], "induc": [50, 81, 192, 206, 235], "gruntz": [50, 199], "majorli": 50, "mrv": [50, 204], "overal": [50, 170, 183, 215], "rapidli": [50, 54, 75, 204], "till": [50, 93, 94, 113, 213], "r108": 50, "dominik": [50, 199], "proc": [50, 215], "1993": [50, 191], "symp": 50, "239": 50, "244": [50, 190], "r109": 50, "p90": 50, "r110": 50, "asymptotic_expans": 50, "_first": [50, 56], "distribute_order_term": [50, 209], "compute_leading_term": 50, "could_extract_minus_sign": 50, "signsimp": [50, 121, 209], "failing_express": 50, "modulu": [50, 51, 53, 58, 60, 66, 81, 90, 93, 94, 184, 188, 190, 192, 193, 196, 216], "power_bas": [50, 81], "power_exp": [50, 81], "multinomi": [50, 81, 90, 217], "expr_free_symbol": 50, "extract_addit": 50, "extract_multipl": 50, "extract_branch_factor": 50, "allow_half": 50, "fourier_seri": [50, 200], "hyper": [50, 55, 58, 69, 72, 197, 199, 207, 209, 215, 217, 273], "geto": 50, "getn": 50, "is_algebraic_expr": 50, "is_rational_funct": 50, "r111": 50, "algebraic_express": 50, "is_const": 50, "constanc": 50, "agre": [50, 51, 58, 65, 75, 207], "test_expr": 50, "prove": [50, 75, 77, 86, 184, 204, 213, 247], "failing_numb": 50, "is_meromorph": 50, "meromorph": [50, 58], "multivalu": [50, 56], "cut": [50, 55, 56, 58, 66, 75, 184, 207, 232, 238, 273], "hit": [50, 268], "is_polynomi": 50, "rational_funct": 50, "leadterm": 50, "xlim": [50, 183], "lseri": 50, "exaxmpl": 50, "nseri": 50, "_eval_nseri": 50, "innermost": 50, "disadvantag": 50, "met": [50, 210, 216, 231, 273], "nsimplifi": [50, 54, 208], "ratsimp": [50, 208], "removeo": [50, 130, 197, 263], "chop": [50, 54, 58, 81, 86, 215, 262], "123": [50, 55, 60, 80, 160, 173, 235, 242, 243], "lazi": [50, 83, 193], "smooth": [50, 54, 90, 199], "taylor_term": [50, 56], "previous_term": [50, 56], "dummy_index": 50, "temporari": [50, 229], "_dummy_10": 50, "contigu": [50, 207, 230], "x4": [50, 55, 187], "x5": [50, 55, 187], "x6": [50, 187], "x7": [50, 187], "x8": [50, 187], "x9": [50, 187], "x50": 50, "x51": 50, "y0": [50, 69, 71, 73, 213], "y1": [50, 130], "y2": [50, 130, 187], "y3": [50, 187], "y4": 50, "xa": [50, 185, 190], "xb": [50, 238], "xc": [50, 162, 238], "disambigu": 50, "x01": 50, "x02": 50, "x11": 50, "x12": 50, "escap": [50, 92, 183, 197, 238], "newli": [50, 75, 207], "undefinedfunct": [50, 175, 197, 229, 236], "f821": [50, 231], "cofactor": [50, 86, 188, 190, 193], "lcm": [50, 90, 188, 189, 190, 193, 197], "50000000000000": [50, 54], "100000000000000000000": 50, "1e20": 50, "00000000000000e": 50, "23456789123456789": 50, "23456789123457": 50, "00100": 50, "sent": [50, 77, 209], "789": [50, 90], "123_456": 50, "123456789": 50, "12e": 50, "012": 50, "60e2": 50, "6000": 50, "600e": 50, "125": [50, 54, 77, 90, 188, 203, 210], "099609": 50, "12500": 50, "12500000000000000000": 50, "closest": [50, 63], "5404319552844595": 50, "54": [50, 86, 94, 190, 196, 235], "29999999999999998890": 50, "30000000000000000000": 50, "_mpf_": [50, 187], "4915": 50, "70": [50, 51, 67, 77, 86, 90, 196, 197, 210, 217, 238], "307": 50, "mpf": [50, 187, 188], "is_float": 50, "unprejud": 50, "3602879701896397": 50, "18014398509481984": [50, 209], "limit_denomin": 50, "320": 50, "75": [50, 53, 217, 242], "use_tri": [50, 90], "use_rho": [50, 90], "use_pm1": [50, 90], "factorint": [50, 90, 192, 193, 232], "trial": [50, 90, 190, 202, 206, 213, 217], "max_denomin": 50, "1000000": [50, 90], "141592653589793": 50, "311": [50, 90], "discard": [50, 192, 197, 216], "99999999999999999999": 50, "hookrightarrow": 50, "minpoli": [50, 187, 188, 192], "dmp": [50, 184, 188, 189, 193], "complexrootof": [50, 86, 188, 193, 213], "anp": [50, 187, 188, 192, 193], "to_list": [50, 186, 188], "crootof": [50, 193, 213, 215], "minpoly_of_el": 50, "414213562": 50, "scratch": [50, 168], "6x": [50, 190], "to_number_field": [50, 192], "to_root": 50, "primitive_el": [50, 187, 188, 192], "knew": [50, 273], "golden": [50, 54, 90], "5th": [50, 130, 190, 192], "cyclotom": [50, 188, 189, 190, 191, 192, 193], "cyclotomic_poli": [50, 192, 193], "61803398874989": 50, "2i": 50, "a6": 50, "a6_wrong": 50, "309016994374947": 50, "951056516295154": 50, "field_el": 50, "is_alias": 50, "is_primitive_el": 50, "native_coeff": 50, "nativ": [50, 100, 188, 193, 228], "to_algebraic_integ": 50, "to_primitive_el": 50, "Its": [50, 56, 66, 130, 161, 190, 197, 205], "a_prim": 50, "number_cl": 50, "greatest": [50, 55, 60, 90, 185, 187, 188, 190, 191, 193, 196], "euclid": [50, 190, 191], "r112": 50, "euclidean_algorithm": 50, "r113": 50, "r114": 50, "1_": 50, "28number": 50, "r115": 50, "88": [50, 86, 90], "921_": 50, "r116": 50, "one_half": 50, "holder": 50, "ieee": [50, 51], "754": 50, "r117": 50, "affin": [50, 51, 65, 184], "compactif": 50, "r118": 50, "tild": [50, 56, 218], "undetermin": [50, 86, 193, 199, 213, 215], "phase": [50, 77, 98, 132, 135, 137, 147, 148, 216], "718281828": 50, "napier": 50, "r119": 50, "e_": [50, 55, 86], "28mathematical_const": 50, "r120": 50, "imaginary_unit": [50, 197], "141592654": 50, "circumfer": [50, 60], "diamet": [50, 60], "area": [50, 60, 62, 66, 67, 93, 94, 249], "is_irr": 50, "r121": 50, "mascheroni": [50, 58], "5772157": 50, "recur": 50, "harmon": [50, 57, 90, 102, 142, 182, 197, 258], "lim": [50, 204, 263], "limits_": [50, 182, 199, 267], "ln": [50, 56, 77, 197, 199, 213, 217, 273], "r122": 50, "93mascheroni_const": 50, "91596559": 50, "r123": 50, "27s_constant": 50, "r124": 50, "golden_ratio": 50, "tribonacci": [50, 57], "fibonacci": [50, 54, 57, 90], "predetermin": [50, 228], "8392867552141611326": 50, "r125": 50, "generalizations_of_fibonacci_numb": [50, 55], "tribonacci_numb": [50, 55], "modulo": [50, 51, 87, 90, 159, 184, 186, 187, 188, 190, 192, 193, 194, 196, 197, 200, 209], "r126": 50, "modular_multiplicative_invers": 50, "r127": 50, "extended_euclidean_algorithm": 50, "oscil": [50, 258], "conform": [50, 216, 221, 222], "r128": 50, "r129": 50, "zero_to_the_power_of_zero": 50, "r130": 50, "indeterminate_form": 50, "as_base_exp": [50, 56, 57, 235], "floor": [50, 57, 90, 187, 188, 197, 217], "geq": [50, 51, 58, 86, 193, 210, 217, 273], "factor_": [50, 51, 90, 193, 210], "perfect_pow": [50, 90], "infix": 50, "matmul": [50, 83, 186], "as_coef_mul": 50, "undesir": [50, 104, 113, 127, 185, 188, 207], "4596": 50, "compound": [50, 118, 161, 201, 255], "5728": 50, "suspect": [50, 90], "5706": 50, "moot": 50, "off": [50, 60, 75, 81, 89, 91, 115, 124, 147, 184, 193, 197, 213, 228, 239, 242, 267], "nb": 50, "sensit": [50, 100, 130, 183, 190, 209, 228], "assocop": 50, "quadrat": [50, 51, 77, 90, 184, 188, 192, 193, 210, 215, 217], "matadd": [50, 83, 197], "as_coef_add": 50, "extract_leading_ord": 50, "commutative_part": 50, "noncommutative_part": 50, "order_symbol": 50, "subprocess": [50, 197, 228, 229], "dividend": [50, 188], "rop": 50, "validrelationoper": 50, "rel_op": 50, "fourth": [50, 51, 185, 213, 263], "my_equ": 50, "my_inequ": 50, "reversedsign": 50, "_eval_eq": 50, "respond": 50, "boolalg": [50, 80], "client": [50, 232], "counterpart": [50, 51, 213, 263], "litter": 50, "oddbal": 50, "minor": [50, 60, 86, 197, 228], "caveat": [50, 193, 253, 260, 265], "succinctli": 50, "coupl": [50, 86, 127, 142, 157, 160], "annoy": 50, "succinct": 50, "occasion": 50, "r131": 50, "operar": 50, "circuit": [50, 147, 150], "greaterthanobject": 50, "__bool__": 50, "335": 50, "march": 50, "2012": 50, "r132": 50, "r133": 50, "r134": 50, "mdarg": 50, "fgh": 50, "vsin": 50, "vdiff": 50, "narg": [50, 190], "naturals0": [50, 197, 216, 217], "evalul": 50, "fairli": [50, 58, 75, 115, 123, 172, 184], "conserv": [50, 108, 126, 174, 244, 249, 250], "136": [50, 86], "indirect": [50, 52, 58, 90, 163, 213], "fx": [50, 52, 183, 213, 214], "fxx": 50, "insconsist": 50, "presenc": [50, 56, 80, 112, 117, 127, 213, 221], "nonvanish": 50, "_diff_wrt": 50, "_sort_variable_count": 50, "vc": 50, "vsort": 50, "collaps": [50, 157, 209], "vsort0": 50, "vi": 50, "dfx": 50, "equidist": 50, "sq2": 50, "xl": 50, "d2fdxdy": 50, "doit_numer": 50, "z0": [50, 204], "unifi": [50, 131, 186, 188, 189, 190, 192, 193, 205], "zeroth": [50, 192], "idiff": [50, 67], "r135": 50, "legaci": [50, 77, 86, 217], "v5_2": 50, "infunct": 50, "algebraiccomput": 50, "f_real": [50, 57], "f_real_inherit": [50, 57], "is_singular": [50, 57, 73], "holomorph": [50, 57, 75], "superfici": 50, "unexpect": [50, 228], "ss": [50, 188], "denom": [50, 187, 188, 192, 209], "_eval_expand_bas": 50, "_eval_expand_complex": 50, "shut": [50, 193], "unwant": [50, 215, 235], "alphabet": [50, 51, 100, 168, 185, 210, 230], "expand_hint": 50, "_eval_expand_hint": 50, "liabl": [50, 80], "metahint": 50, "myclass": 50, "_eval_expand_doubl": 50, "hyperexpand": [50, 58, 72, 75, 207], "div": [50, 185, 187, 188, 193, 197, 209, 268], "horner": [50, 130, 190, 193], "untouch": 50, "dkei": 50, "mixin": [50, 235], "maxn": [50, 54, 81], "subresult": [50, 188, 191, 193], "000100000000000000": 50, "maxprec": 50, "quadratur": [50, 54, 77, 213], "tanh": [50, 54, 57, 77, 194, 197, 209, 273], "oscillatori": [50, 54, 202], "osc": [50, 54], "advers": 50, "1e16": 50, "291": 50, "builtin": [50, 188, 197, 205, 238, 272], "speedup": [50, 86, 91, 190, 194, 236], "framework": [50, 113, 123, 222, 228, 230, 236], "slice": [50, 80, 81, 86, 92, 188, 193, 203, 205, 209, 218, 235], "parametris": [50, 205], "element_kind": [50, 81, 205], "tuple_count": 50, "setkind": [50, 81, 255], "isprimit": 50, "_gcd_term": 50, "terms_gcd": [50, 188, 193], "entiti": [50, 60, 63, 64, 66, 67, 75, 113, 128, 178, 216, 250, 259, 269], "arguement": 50, "broad": [50, 268], "lex": [50, 78, 177, 185, 187, 188, 190, 193, 194, 196, 197, 209], "grlex": [50, 78, 177, 188, 193, 196, 197], "grevlex": [50, 78, 177, 185, 190, 193, 196, 197], "rev": 50, "unaffect": [50, 216], "_node": 50, "fastest": [50, 55, 77, 90, 91, 194], "undecor": 50, "ineffici": [50, 86, 187], "breaker": 50, "hash": [50, 188, 190, 198, 209, 213, 228, 230], "collis": [50, 89], "wast": [50, 87, 186], "candid": [50, 86, 90, 190, 209], "rng": 50, "getstat": 50, "intention": 50, "tn": 50, "td": [50, 197, 272], "randrang": 50, "999": [50, 54], "238": [50, 90], "randint": [50, 86, 190], "ri": [50, 197], "rv": [50, 206, 217, 235], "nonbas": 50, "postord": 50, "descend": [50, 184, 192, 230], "children": [50, 51, 187, 232], "subtre": [50, 197, 232], "educ": [51, 86], "cryptograph": 51, "encrypt": 51, "hide": [51, 197], "cipher": 51, "vigener": 51, "hill": [51, 58, 108, 129, 173, 179, 242], "bifid": 51, "rsa": 51, "kid": 51, "feedback": [51, 97, 100, 266], "elgam": 51, "plaintext": [51, 197], "ciphertext": 51, "monoalphabet": 51, "polyalphabet": 51, "crypto": 51, "az": [51, 210], "uppercas": [51, 207], "hello": [51, 235], "world": [51, 96, 117, 127, 235], "helloworld": 51, "check_and_join": 51, "padded_kei": 51, "puppi": 51, "opqrstuvwxi": 51, "puyoqrstvwx": 51, "artist": 51, "aphras": 51, "ara": 51, "hp": 51, "cycle_list": 51, "encipher_shift": 51, "msg": [51, 77], "decipher_shift": 51, "gonavybeatarmi": 51, "ct": [51, 79, 190], "hpobwzcfbubsnz": 51, "deciph": 51, "l1": [51, 60, 62, 63, 107, 110, 116, 128, 188, 190, 193, 210, 217], "l2": [51, 62, 63, 107, 110, 116, 149, 165, 188, 190, 217], "caesar": 51, "juliu": 51, "suetoniu": 51, "protect": [51, 197], "militari": 51, "nephew": 51, "augustu": 51, "reportedli": 51, "r136": 51, "caesar_ciph": 51, "r137": 51, "caesarsmethod": 51, "encipher_rot13": 51, "rot13": 51, "caeser": 51, "midwai": 51, "decipher_rot13": 51, "r138": 51, "decrypt": 51, "tbanilorngnezl": 51, "encipher_affin": 51, "_invers": 51, "cx": [51, 94], "recov": [51, 77, 168, 190, 192, 193, 210, 213], "decipher_affin": 51, "r139": 51, "affine_ciph": 51, "reciph": 51, "navi": 51, "beat": 51, "armi": 51, "trobmvenbgbalv": 51, "encipher_atbash": 51, "enciph": 51, "atbash": 51, "hebrew": 51, "decipher_atbash": 51, "tlmzebyvzgzinb": 51, "r140": 51, "encipher_substitut": 51, "oeyag": 51, "034": 51, "60n": 51, "v4b3": 51, "rm4": 51, "immateri": 51, "anyv": 51, "wherebi": 51, "r141": 51, "substitution_ciph": 51, "encipher_vigener": 51, "me": [51, 113, 130, 173, 197, 219], "mondai": 51, "qrgkkthrzqebpr": 51, "krypto": 51, "sculptur": 51, "cia": 51, "headquart": 51, "r143": 51, "decipher_vigener": 51, "alp": 51, "palimpsest": 51, "emufphzlrfaxyusdjkzldkrnshgnfivj": 51, "betweensubtleshadingandtheabsenc": 51, "blais": 51, "sixteenth": 51, "centuri": [51, 184], "diplomat": 51, "accid": [51, 236], "invent": [51, 192, 215, 267], "giovan": 51, "batista": 51, "belaso": 51, "1553": 51, "civil": [51, 93], "war": 51, "confederaci": 51, "brass": 51, "nsa": 51, "museum": 51, "fort": 51, "mead": 51, "r142": 51, "sender": 51, "assembl": [51, 75, 96, 115, 204], "concaten": [51, 81], "frequenc": [51, 77, 98, 100, 137, 139, 147, 164], "kasiski": 51, "discov": [51, 75, 104, 221, 269], "babbag": 51, "unbreak": 51, "ye": [51, 80, 213], "gonavybeatarmyyesyoucan": 51, "gold": 51, "auto_kei": 51, "goldbuggonavybeatarmyy": 51, "mcydwshkogamkzcelyfgayr": 51, "pt": [51, 59, 60, 61, 63, 64, 65, 66, 203], "vigenere_ciph": 51, "archiv": [51, 129, 210], "20071116100808": 51, "r144": 51, "filebox": 51, "vt": 51, "batman": 51, "goo": 51, "gl": 51, "ijr22d": 51, "decod": 51, "qrgk": 51, "kt": [51, 118], "hrzqe": 51, "bpr": 51, "meetmeonmondai": 51, "encipher_hil": 51, "z_": [51, 209], "r145": 51, "lester": 51, "1920": 51, "r146": 51, "polygraph": 51, "bare": [51, 108], "ceil": [51, 57, 90, 107, 197], "l_1": [51, 55, 101, 182, 207, 223], "l_t": 51, "c_t": 51, "l_i": [51, 182, 207], "decipher_hil": 51, "hill_ciph": 51, "june": [51, 86], "juli": [51, 210], "1929": 51, "306": 51, "312": [51, 173, 215, 242, 243], "ueqdueodoctcwq": 51, "st": [51, 77, 163], "hjeb": 51, "stqq": 51, "ispk": 51, "stzz": 51, "hd": 51, "ormv": 51, "IS": 51, "uiki": 51, "encipher_bifid": 51, "polybiu": 51, "printabl": 51, "bifid5": 51, "decipher_bifid": 51, "encipher_bifid5": 51, "encipher_bifid6": 51, "r147": 51, "bifid_ciph": 51, "ieilhhfstsfqy": 51, "ieilh": 51, "hfst": 51, "fqyej": 51, "bmtwmg": 51, "bio": 51, "gold_bug": 51, "hg2sfuei7t": 51, "pug": 51, "heldo": 51, "wor6d": 51, "bifid5_squar": 51, "5x5": 51, "cap": [51, 54, 163, 205, 216], "tradition": [51, 58], "decipher_bifid5": 51, "round_trip": 51, "josi": 51, "osi": 51, "iosi": 51, "qiq": 51, "1901": 51, "felix": 51, "delastel": 51, "onto": [51, 63, 64, 65, 75, 79, 86, 89, 91, 192], "helen": 51, "cryptanalysi": 51, "german": 51, "fridai": 51, "ieilehfstsfxe": 51, "okai": 51, "decipher_bifid6": 51, "8am": 51, "kfkljjhf5mmmktfrgpl": 51, "meetmeonmondayat8am": 51, "bifid6_squar": 51, "6x6": 51, "rsa_public_kei": 51, "totient": [51, 90], "carmichael": [51, 90], "p_n": [51, 55, 58, 77], "multiprim": 51, "land": 51, "rad": [51, 98, 113, 192], "reduced_toti": [51, 90], "uniquenss": 51, "rsa_private_kei": 51, "e_0": 51, "canonicalz": 51, "61": [51, 55, 66, 86, 90, 199], "3233": 51, "797": 51, "1577": 51, "multipow": 51, "cryptosystem": 51, "coprim": [51, 77, 90, 159, 190, 210], "30030": 51, "becam": [51, 123], "hardest": 51, "claim": [51, 181, 207, 216], "encipher_rsa": 51, "decipher_rsa": 51, "r148": 51, "rsa_": 51, "28cryptosystem": 51, "r149": 51, "cacr": 51, "uwaterloo": 51, "techreport": 51, "2006": [51, 206], "cacr2006": 51, "r150": 51, "springer": [51, 77, 90, 190, 191, 213], "1007": 51, "2fbfb0055738": 51, "r151": 51, "itii": 51, "manuscript": 51, "1381": 51, "2753": 51, "413": 51, "1193": 51, "823": 51, "r152": 51, "r153": 51, "r154": 51, "r155": 51, "bmod": [51, 197], "vice": [51, 77, 90, 93, 153, 173, 184, 188, 245, 246, 265], "versa": [51, 77, 90, 93, 153, 173, 184, 188, 245, 246, 265], "asymmetr": [51, 66], "puk": 51, "prk": 51, "chines": [51, 90, 190], "k_1": [51, 90, 190, 207], "k_2": 51, "k_n": [51, 190], "p_3": [51, 180], "k_3": 51, "moduli": [51, 90, 190], "2048": [51, 90, 197], "overhead": [51, 91, 194], "modular": [51, 90, 159, 189, 191, 216], "crt": [51, 90, 190], "overcompens": 51, "theorit": 51, "new_msg": 51, "kid_rsa_public_kei": 51, "grade": [51, 78, 177, 193], "school": [51, 206], "bob": [51, 107], "369": 51, "58": [51, 86, 223], "kid_rsa_private_kei": 51, "encipher_kid_rsa": 51, "200": [51, 81, 86, 90, 93, 98, 242], "161": 51, "decipher_kid_rsa": 51, "pub": [51, 242], "pri": 51, "encode_mors": 51, "sep": [51, 197, 214, 228], "mors": 51, "attack": 51, "flank": 51, "r156": 51, "morse_cod": 51, "decode_mors": 51, "word_sep": 51, "mc": [51, 118], "east": 51, "r157": 51, "lfsr_sequenc": 51, "lfsr": 51, "c_k": 51, "golomb": [51, 90], "g157": 51, "autocorrel": 51, "lim_": [51, 56, 58, 75, 77, 204, 263, 267], "balanc": [51, 129, 184, 217, 228], "solomon": 51, "aegean": 51, "park": 51, "laguna": 51, "1967": [51, 191], "lfsr_autocorrel": 51, "lfsr_connection_polynomi": 51, "massei": 51, "m158": 51, "jame": [51, 190], "synthesi": 51, "bch": 51, "tran": 51, "122": [51, 53, 58], "127": [51, 90], "elgamal_public_kei": 51, "elgamal_private_kei": 51, "1031": 51, "636": 51, "212": [51, 77, 191], "mathmat": 51, "dlp": 51, "is_primitive_root": [51, 90], "encipher_elgam": 51, "c2": [51, 60, 67, 81, 83, 149, 163, 205, 213, 215, 217, 244, 247, 274], "encryp": 51, "decipher_elgam": 51, "eucliden": 51, "dh_public_kei": 51, "dh_private_kei": 51, "_p": [51, 163, 188, 190, 192, 204, 207, 215], "_g": 51, "diffi": 51, "hellman": [51, 90], "publicli": 51, "secretli": 51, "dh_shared_kei": 51, "sk": 51, "gm_public_kei": 51, "goldwass": 51, "micali": 51, "gm_private_kei": 51, "b_n": [51, 55, 79, 184, 200], "jacobi_symbol": [51, 90], "reconstruct": [51, 86, 190, 268], "residuos": 51, "entropi": [51, 217], "encipher_gm": 51, "public_kei": 51, "gm": [51, 166], "decipher_gm": 51, "encipher_railf": 51, "rail": 51, "railfenc": 51, "horel": 51, "ollwd": 51, "r160": 51, "rail_fence_ciph": 51, "decipher_railf": 51, "diffgeom": 52, "resembl": [52, 58, 77, 222], "euclidean": [52, 63, 65, 173, 188, 190, 193], "r161": 52, "chart": [52, 183], "parameter": [52, 59, 60, 63, 66, 210], "r162": 52, "sussman": 52, "wisdom": 52, "farr": 52, "2013": [52, 62, 81, 271], "tranform": 52, "cartesian": [52, 93, 131, 136, 150, 153, 158, 178, 183, 184, 205, 216, 235, 245, 246, 248, 249], "polar": [52, 56, 58, 60, 66, 76, 93, 102, 133, 183, 205, 209, 216, 258], "relation_dict": 52, "car2d": 52, "pol": 52, "coordinatesymbol": 52, "jacobian": [52, 86, 127, 215], "jacobian_determin": 52, "r163": 52, "coordinate_system": 52, "base_oneform": 52, "coord_index": 52, "oneform": 52, "base_scalar": 52, "basescalarfield": 52, "base_vector": [52, 242], "coord_funct": 52, "to_si": 52, "coord": [52, 65, 67, 104, 161, 176], "immutabledensematrix": [52, 81, 82, 83, 84, 217], "rn": 52, "r2_r": 52, "r2_p": 52, "jacobian_matrix": 52, "point_to_coord": 52, "coord_si": [52, 244], "imbu": 52, "difficulti": [52, 114], "arriv": [52, 190, 207, 209, 213, 217, 273], "inappropri": 52, "poin": 52, "unappropri": 52, "fy": [52, 183, 214], "ftheta": 52, "basevectorfield": 52, "point_p": 52, "point_r": 52, "s_field": 52, "dxi": 52, "v1": [52, 63, 86, 110, 130, 173, 174, 176, 217, 236, 242, 244, 245, 246, 247], "v2": [52, 63, 86, 110, 173, 174, 176, 236, 242, 244, 245, 246, 247], "v_1": [52, 192, 215], "v_2": [52, 192], "e_x": [52, 223], "e_i": [52, 184, 207, 223], "e_r": 52, "c_xy": 52, "c_xr": 52, "unfortun": [52, 54, 91, 196, 210], "e_rho": 52, "form_field": 52, "exterior": [52, 66], "dg": 52, "tensorproduct": [52, 160, 162, 218, 219], "multilinear": 52, "wedg": [52, 75], "tp1": 52, "tp": [52, 135, 162, 188], "wedgeproduct": 52, "wp1": 52, "liederiv": 52, "v_field": 52, "transport": 52, "pushforward": 52, "e_theta": 52, "basecovarderivativeop": 52, "christoffel": 52, "metric_to_christoffel_2nd": 52, "ch": [52, 86, 210], "cvd": 52, "covarderivativeop": 52, "intcurve_seri": 52, "vector_field": [52, 248], "start_point": 52, "dt": [52, 58, 117, 130, 172, 173, 175, 180, 181, 213, 273], "f_i": [52, 75, 86, 190, 194], "movement": 52, "intcurve_diffequ": 52, "init_cond": 52, "f_1": [52, 55, 58, 75, 100, 109, 112, 131, 184, 190, 193, 213], "f_0": [52, 55, 109, 190], "vectors_in_basi": 52, "kept": [52, 165, 181, 235, 268], "twoform_to_matrix": 52, "twoform": 52, "e_j": 52, "metric_to_christoffel_1st": 52, "levi": [52, 58, 217, 223], "civita": [52, 58, 223], "metric_to_riemann_compon": 52, "riemann": [52, 55, 56, 57, 75, 184, 209, 223], "non_trivial_metr": 52, "dtheta": 52, "drho": 52, "metric_to_ricci_compon": 52, "ricci": 52, "fft": [53, 130], "ifft": 53, "ntt": 53, "intt": 53, "fwht": 53, "ifwht": 53, "mobius_transform": 53, "inverse_mobius_transform": 53, "convolution_fft": 53, "convolution_ntt": 53, "convolution_fwht": 53, "convolution_subset": 53, "covering_product": 53, "intersecting_product": 53, "radix": 53, "r164": 53, "coolei": 53, "93tukey_fft_algorithm": 53, "r165": 53, "fastfouriertransform": 53, "r166": 53, "r167": 53, "ring": [53, 73, 86, 87, 180, 185, 186, 189, 190, 192, 193, 194, 195, 196, 197, 235], "pz": [53, 98, 223], "643": [53, 90], "767": 53, "387": 53, "415": 53, "384": 53, "353": [53, 86], "r168": 53, "apfloat": 53, "r169": 53, "numbertheoretictransform": 53, "r170": 53, "discrete_fourier_transform_": 53, "r171": 53, "r172": 53, "r173": 53, "wht": 53, "r174": 53, "hadamard_transform": 53, "r175": 53, "fast_walsh": 53, "93hadamard_transform": 53, "r176": 53, "r177": 53, "mobiu": [53, 90], "lattic": [53, 210], "bitmask": 53, "r178": 53, "b6bius_inversion_formula": 53, "r179": 53, "csail": 53, "mit": 53, "rrw": 53, "conv": 53, "r180": 53, "arxiv": [53, 86, 102, 235], "1211": 53, "0189": 53, "r181": 53, "r182": 53, "r183": 53, "888": 53, "444": 53, "1283": 53, "19351": 53, "14219": 53, "15502": 53, "44": [53, 55, 86, 90, 206, 217], "41": [53, 60, 86, 90, 188, 210], "63": [53, 86, 90], "r184": 53, "convolution_theorem": 53, "r185": 53, "333": [53, 90], "555": 53, "222": 53, "666": 53, "15555": 53, "19404": 53, "r186": 53, "r187": 53, "56": [53, 77, 90, 193], "68": [53, 78, 86, 90, 210], "48": [53, 60, 94, 210, 215, 217, 263], "2057": 53, "1870": 53, "r188": 53, "radioeng": 53, "cz": [53, 210], "fulltext": 53, "2002": [53, 184, 191, 194], "02_03_40_42": 53, "r189": 53, "r190": 53, "r191": 53, "AND": [53, 80, 249], "327": [53, 213], "r192": 53, "44288293815837": 54, "4429": 54, "4428829381583662470158809900606936986146216893757": 54, "28902548222223624241": 54, "091999668350375232456": 54, "14159265358979": [54, 58, 215], "333333333333333": [54, 187, 209], "1415926535": 54, "7182818284": 54, "100000": [54, 90, 98], "951": 54, "95678796130331164628399634646042209010610577945815": 54, "gmpy": [54, 187, 188, 272], "googl": [54, 182, 183, 216], "100000000000000": 54, "1000000000": 54, "125000000000000000000000000000": 54, "100000000000000005551115123126": 54, "100000000000000000000000000000": 54, "1415": 54, "uncertainti": [54, 168], "003": 54, "31417": 54, "propag": [54, 63, 134, 137], "5000": [54, 93], "50000000000000000000000000000": 54, "varphi": [54, 58, 192, 197, 213], "erron": 54, "goldenratio": [54, 198, 209], "34665576869e": 54, "208": [54, 193], "64613129282185e": 54, "60123853010113e": 54, "210": [54, 90, 210], "thousand": [54, 90, 262], "precisionexhaust": 54, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 54, "binet": 54, "104": 54, "1336": 54, "portion": [54, 66, 81, 86], "meaningless": 54, "012297": 54, "9562288417661": 54, "956": 54, "29128599706266": 54, "2912859970626635404072825905956005414986193682745": 54, "14159265358979323846264338328": 54, "integrand": [54, 58, 74, 75, 77, 207], "struggl": [54, 196], "346": 54, "34635637913639": 54, "dealt": [54, 75], "504067061906928": 54, "50406706190692837199": 54, "wrap_lin": [54, 77, 78, 86, 94, 177, 184, 185, 196, 197, 213], "intgrl": 54, "extrapol": [54, 204], "richardson": [54, 204, 216], "slowli": [54, 204], "64493406684823": 54, "577215664901533": 54, "57721566490153286060651209008240243104215933593992": 54, "10000000": [54, 193], "20000000": [54, 193], "693147255559946": 54, "tune": [54, 78, 177, 197], "worthwhil": 54, "hypergeometr": [54, 55, 57, 68, 70, 74, 75, 191, 201, 208, 213, 215, 217, 253, 273], "ramanujan": [54, 55, 90], "9801": 54, "1103": 54, "26390": 54, "396": [54, 113], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 54, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 54, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 54, "355": [54, 90, 191], "113": [54, 90, 210], "33333": [54, 77], "635": 54, "504": [54, 191], "130198866629986772369127970337": 54, "49": [54, 55, 90, 94, 190, 210], "___________": [54, 94, 213], "k_sym": 55, "binom": [55, 90, 217, 273], "dotsc": [55, 199], "j_1": [55, 142, 143, 160, 182, 199, 218], "j_2": [55, 142, 143, 160, 182, 199], "dotsb": [55, 199], "atop": [55, 58, 199, 207], "2j_2": [55, 199], "3j_2": [55, 199], "j_": [55, 58, 75, 77, 160, 199, 207, 267], "877": 55, "4140": 55, "21147": 55, "115975": 55, "846749014511809332450147": 55, "r193": 55, "bell_numb": 55, "r194": 55, "bellnumb": 55, "r195": 55, "bellpolynomi": 55, "6k": 55, "66": [55, 81, 86, 197], "1000001": 55, "r196": 55, "bernoulli_numb": 55, "r197": 55, "bernoulli_polynomi": 55, "r198": 55, "bernoullinumb": 55, "r199": 55, "bernoullipolynomi": 55, "_k": [55, 58, 77, 182, 192, 217], "expand_func": [55, 58], "6435": 55, "pascal": [55, 90], "4th": [55, 56, 72, 86, 90, 130], "195": 55, "r200": 55, "johndcook": 55, "binomial_coeffici": [55, 90], "c_n": [55, 58, 79, 213], "429": [55, 197], "1430": 55, "4862": 55, "39764993382373624267": 55, "020884341620842555705": 55, "r201": 55, "catalan_numb": 55, "r202": 55, "catalannumb": [55, 197], "r203": 55, "r204": 55, "geomet": [55, 184], "mathcircl": 55, "2j": [55, 190, 217], "r209": 55, "e_k": [55, 190], "1385": 55, "2702765": 55, "4096": 55, "r205": 55, "euler_numb": 55, "r206": 55, "eulernumb": 55, "r207": 55, "alternating_permut": 55, "r208": 55, "alternatingpermut": 55, "ii": [55, 77, 90, 193, 197, 213], "swing": 55, "derang": [55, 235], "r211": 55, "generate_derang": [55, 235], "r210": 55, "r212": 55, "double_factori": 55, "texttt": [55, 205], "r213": 55, "r214": 55, "paul": [55, 232], "235": 55, "268": 55, "1995": [55, 191, 209, 215], "f_z": [55, 178, 248], "f_2": [55, 75, 100, 109, 112, 131, 190, 207, 213], "r216": 55, "fibonacci_numb": 55, "r217": 55, "fibonaccinumb": 55, "t_0": [55, 210], "149": [55, 90], "r218": 55, "r219": 55, "tribonaccinumb": 55, "r220": 55, "oei": [55, 90], "a000073": 55, "137": [55, 86, 102], "205": [55, 75, 207], "144": [55, 77, 182], "5269": 55, "761": 55, "280": 55, "83711": 55, "27720": 55, "30247": 55, "9900": 55, "983697455232980674869851942390639915940": 55, "r221": 55, "harmonic_numb": 55, "r222": 55, "harmonicnumb": [55, 197], "r223": 55, "harmonicnumber2": 55, "l_0": [55, 101, 223, 224], "47": [55, 58, 86, 90, 102, 136, 168, 196], "76": [55, 86, 90, 190, 193], "r224": 55, "lucas_numb": 55, "r225": 55, "lucasnumb": 55, "2t": 55, "r226": 55, "genocchi_numb": 55, "r227": 55, "genocchinumb": 55, "irrelev": 55, "r228": 55, "number_theori": 55, "r229": 55, "pentagonal_number_theorem": 55, "pochhamm": [55, 197, 209], "r230": 55, "r231": 55, "pochhammer_symbol": 55, "274": 55, "225": [55, 90, 191], "511": 55, "9330": 55, "34105": 55, "42525": 55, "22827": 55, "5880": 55, "750": 55, "r232": 55, "stirling_numbers_of_the_first_kind": 55, "r233": 55, "stirling_numbers_of_the_second_kind": 55, "multiset": [55, 75, 232, 235], "babi": [55, 90, 235], "aa": [55, 182], "bb": [55, 182, 209, 235], "multiset_combin": [55, 235], "aab": [55, 235], "aabc": 55, "aaaabbbbcccc": 55, "m_1": [55, 100, 142, 160, 182, 210], "m_2": [55, 112, 131, 142, 160, 182], "m_k": 55, "r234": 55, "r235": 55, "tinyurl": 55, "cep849r": 55, "ba": [55, 235], "multiset_permut": [55, 235], "r236": 55, "aabbc": 55, "mississippi": [55, 235], "609": 55, "1521": 55, "1768": 55, "1224": [55, 90], "579": 55, "197": 55, "r237": 55, "undergradu": 55, "csse": 55, "uwa": 55, "au": 55, "cits7209": 55, "707106781186548": 56, "negativeon": [56, 268], "tangent": [56, 60, 62, 66, 77, 194, 213], "643501108793284": 56, "r238": 56, "ib": [56, 118], "complex_conjug": 56, "r242": 56, "r239": 56, "trigonometric_funct": 56, "r240": 56, "r241": 56, "elementaryfunct": 56, "trigonometryangl": 56, "r243": 56, "r244": 56, "r245": 56, "r246": 56, "r247": 56, "r248": 56, "cotang": [56, 194], "r249": 56, "r250": 56, "r251": 56, "secant": [56, 193], "r252": 56, "r253": 56, "r254": 56, "cosec": 56, "r255": 56, "r256": 56, "r257": 56, "unnorm": [56, 58], "qquad": [56, 168, 190], "jn": [56, 58, 160, 193, 197, 267], "spheric": [56, 57, 102, 142, 182, 183, 193, 242, 245, 246, 267], "r258": 56, "sinc_funct": 56, "r259": 56, "inverse_trigonometric_funct": 56, "r260": 56, "r261": 56, "r262": 56, "r263": 56, "r264": 56, "r265": 56, "r266": 56, "r267": 56, "arctan": [56, 194, 197], "r268": 56, "r269": 56, "arccot": [56, 197], "r273": 56, "r270": 56, "r271": 56, "r272": 56, "arcsec": [56, 197], "r274": 56, "r275": 56, "r276": 56, "arccsc": [56, 197], "quadrant": [56, 188, 216], "clock": [56, 206], "reurn": 56, "r277": 56, "r278": 56, "r279": 56, "arctan2": 56, "r280": 56, "hyperbolic_funct": 56, "r281": 56, "r282": 56, "arcsech": [56, 197], "imaginaryunit": [56, 197], "r283": 56, "r284": 56, "r285": 56, "arccsch": [56, 197], "567": 56, "r286": 56, "r287": 56, "ceilingfunct": 56, "r288": 56, "r289": 56, "floorfunct": 56, "r290": 56, "lfloor": [56, 188, 216, 217], "rfloor": [56, 188, 216, 217], "fractional_part": 56, "r291": 56, "fractionalpart": 56, "lambert": [56, 77, 194], "r292": 56, "w_k": 56, "635564016364870": 56, "34747534407696": 56, "41624341514535": 56, "lambert_w_funct": 56, "mathcal": [56, 75, 100, 128, 160, 182, 205], "cond": [56, 75, 77, 205], "piecewise_fold": 56, "folded_cond": 56, "ITE": [56, 80], "_eval_integr": [56, 77], "piecewise_integr": 56, "as_expr_set_pair": 56, "antideriv": [56, 58, 77, 213, 263], "conflict": [56, 90, 100, 113, 230], "supremum": [56, 205], "r293": 56, "directed_complete_partial_ord": 56, "r294": 56, "lattice_": 56, "28order": 56, "global_paramet": 56, "rootof": [56, 193], "rootoftool": [56, 86, 193], "integer_nthroot": [56, 90], "r295": 56, "square_root": 56, "r296": 56, "r297": 56, "root_of_un": 56, "r298": 56, "principal_valu": [56, 77], "r299": 56, "cuberoot": 56, "powdenest": 56, "misc": [56, 81, 238, 253], "r300": 56, "r301": 56, "r302": 56, "cube_root": 56, "r303": 56, "polar_lift": [57, 58, 209], "periodic_argu": 57, "principal_branch": [57, 75], "sec": [57, 77, 98, 192, 197, 206, 273], "csc": [57, 92, 197, 206], "acot": [57, 197], "asec": [57, 197], "acsc": [57, 197], "hyperbol": [57, 58, 194, 216, 269, 273], "hyperbolicfunct": 57, "coth": [57, 197, 209], "sech": [57, 197], "csch": [57, 197], "asinh": [57, 197], "acosh": [57, 197], "atanh": [57, 194, 197, 207], "acoth": [57, 197], "asech": [57, 197], "acsch": [57, 197], "roundfunct": 57, "lambertw": [57, 194, 197, 215, 216, 274], "exprcondpair": 57, "miscellan": [57, 234, 259, 260], "identityfunct": 57, "real_root": [57, 193, 215], "bell": [57, 147, 199, 235], "bernoulli": [57, 58, 197, 215, 217], "catalan": [57, 197], "subfactori": [57, 197, 235], "factorial2": [57, 164, 197], "fallingfactori": [57, 197], "luca": [57, 90, 197, 203], "genocchi": 57, "multifactori": 57, "nc": 57, "nt": [57, 235], "fresnel": [57, 136, 197, 207], "airi": [57, 77, 213], "spline": 57, "ellipt": [57, 60, 90, 184], "mathieu": [57, 197], "delta_funct": [58, 77], "int_": [58, 74, 75, 77, 200, 263, 267], "sum_i": [58, 204], "is_simpl": 58, "tensor_funct": 58, "kroneckerdelta": [58, 83, 163, 197, 209], "r304": 58, "deltafunct": [58, 77], "h0": 58, "electron": [58, 102, 206], "signal": [58, 80, 90, 98, 100, 130, 190, 268], "improp": [58, 77], "convolut": [58, 199, 253], "r305": 58, "heavisidestepfunct": 58, "r306": 58, "iv": [58, 194], "105": [58, 90, 193, 210], "parg": 58, "singularity_funct": 58, "singularityfunct": [58, 77, 93], "macaulai": 58, "heavisidediracdelta": 58, "r307": 58, "r308": 58, "r309": 58, "r310": 58, "r311": 58, "setminu": [58, 75], "17805383034794561964694160130": 58, "65092319930185633889": 58, "8724366472624298171": 58, "r312": 58, "r313": 58, "r314": 58, "loggammafunct": 58, "r315": 58, "19093197": 58, "5173168": 58, "ni": [58, 90], "r316": 58, "polygamma_funct": 58, "r317": 58, "polygammafunct": 58, "r318": 58, "r319": 58, "polygamma2": 58, "r320": 58, "digamma_funct": 58, "r321": 58, "digammafunct": 58, "r322": 58, "r323": 58, "trigamma_funct": 58, "r324": 58, "trigammafunct": 58, "r325": 58, "int_x": 58, "_1f_1": 58, "confluent": [58, 207], "xt": 58, "expint": [58, 197], "r326": 58, "incomplete_gamma_funct": 58, "upper_incomplete_gamma_funct": 58, "r327": 58, "r328": 58, "r329": 58, "gamma2": 58, "r330": 58, "gamma3": 58, "r331": 58, "exponential_integr": 58, "relation_with_other_funct": 58, "int_0": [58, 75, 77, 263, 273], "r332": 58, "lower_incomplete_gamma_funct": 58, "r333": 58, "r334": 58, "r335": 58, "r336": 58, "multigamma": 58, "gamma_p": 58, "r337": 58, "multivariate_gamma_funct": 58, "beta_funct": 58, "eulerian": 58, "02671848900111377452242355235388489324562": 58, "2112723729365330143": 58, "7655283165378005676": 58, "r338": 58, "r339": 58, "betafunct": 58, "r340": 58, "error_funct": 58, "999999984582742099719981147840": 58, "1296959": 58, "73071763923152794095062": 58, "r341": 58, "r342": 58, "r343": 58, "r344": 58, "0000000154172579002800188521596734869": 58, "r345": 58, "r346": 58, "r347": 58, "r348": 58, "5648024145755525987042919132": 58, "995322265018952734162069256367": 58, "r349": 58, "r350": 58, "r351": 58, "r352": 58, "179143454621291692285822705344": 58, "r353": 58, "inverse_funct": 58, "r354": 58, "inverseerf": [58, 197], "r355": 58, "r356": 58, "inverseerfc": [58, 197], "r357": 58, "inverseerf2": 58, "fresnelintegr": 58, "343415678363698242195300815958": 58, "fresnelc": [58, 197, 207], "r358": 58, "fresnel_integr": 58, "r359": 58, "r360": 58, "r361": 58, "r362": 58, "wrench": 58, "jr": 58, "vicki": 58, "allei": 58, "488253406075340754500223503357": 58, "r363": 58, "r364": 58, "r365": 58, "r366": 58, "r367": 58, "ei": [58, 75, 192, 197, 207, 213], "background": [58, 78, 123, 177, 180, 271], "cauchi": [58, 75, 77, 188, 213, 217], "219383934395520": 58, "21938393439552": 58, "shi": [58, 75, 197, 207], "e1": [58, 60, 67, 113, 187, 192, 204, 213, 216], "li": [58, 66, 77, 90, 163, 197, 251], "r368": 58, "r369": 58, "r370": 58, "sfu": [58, 77], "cbm": [58, 77], "aand": [58, 77], "page_228": 58, "int_1": [58, 75], "zt": [58, 75], "unbranch": [58, 75], "meijerg": [58, 69, 75, 77, 197, 217, 273], "postiv": 58, "r371": 58, "r372": 58, "expintegral": [58, 197], "r373": 58, "04516378011749278484458888919": 58, "0652795784357498247001125598": 58, "08346052231061726610939702133": 58, "soldner": 58, "findroot": [58, 215], "45136923488338": 58, "r374": 58, "logarithmic_integr": 58, "r375": 58, "logarithmicintegr": 58, "r376": 58, "r377": 58, "soldnersconst": 58, "92242131492155809316615998938": 58, "r378": 58, "r379": 58, "r380": 58, "r381": 58, "trigonometric_integr": 58, "_1": [58, 86, 173, 207, 236], "somewhat": [58, 77, 113, 188], "r382": 58, "r383": 58, "r384": 58, "laurent": [58, 188, 194, 213], "j_n": [58, 160], "r385": 58, "r386": 58, "r387": 58, "r388": 58, "yn": [58, 197, 203], "r389": 58, "i_": [58, 75, 207, 217, 218], "iz": 58, "r390": 58, "k_": [58, 75, 125, 126], "r391": 58, "hankel1": [58, 197], "hankel": [58, 77], "iy_": 58, "hankel2": [58, 197], "r392": 58, "hankelh1": [58, 197], "r393": 58, "hankelh2": [58, 197], "2z": [58, 216, 217], "orthopoli": [58, 193], "spherical_bessel_fn": [58, 193], "3j": [58, 142, 182], "099419756723640344491": 58, "054525080242173562897": 58, "r394": 58, "y_n": [58, 210], "18525034196069722536": 58, "014895573969924817587": 58, "r395": 58, "jn_zero": 58, "besseljzero": 58, "sph_jn": 58, "7635": 58, "095": 58, "323": [58, 90], "515": 58, "marcumq": 58, "marcum": 58, "q_m": 58, "r396": 58, "marcum_q": 58, "r397": 58, "airybas": 58, "airyai": [58, 197, 213], "ai": [58, 90], "airyaiprim": [58, 197], "22740742820168557599192443603787379946077222541710": 58, "airybi": [58, 197, 213], "airybiprim": [58, 197], "r398": 58, "airy_funct": 58, "r399": 58, "r400": 58, "encyclopediaofmath": 58, "r401": 58, "airyfunct": 58, "41230258795639848808323405461146104203453483447240": 58, "r402": 58, "r403": 58, "r404": 58, "r405": 58, "61825902074169104140626429133247528291577794512415": 58, "r406": 58, "r407": 58, "r408": 58, "r409": 58, "27879516692116952268509756941098324140300059345163": 58, "r410": 58, "r411": 58, "r412": 58, "r413": 58, "bspline": 58, "bspline_basi": 58, "knot": 58, "cubic": [58, 184, 193, 210, 215], "bspline_basis_set": 58, "r414": 58, "interpolating_splin": 58, "131": [58, 173], "39": [58, 90, 196], "interpolating_poli": [58, 193], "zeta_funct": 58, "hurwitz": 58, "admit": [58, 213], "circumst": [58, 192, 267], "lerch": 58, "transcend": 58, "lerchphi": [58, 197], "dirichlet_eta": [58, 197], "20205690315959": 58, "polylog": [58, 197], "r415": 58, "r416": 58, "hurwitz_zeta_funct": 58, "r417": 58, "dirichlet_eta_funct": 58, "polylogarithm": 58, "_s": [58, 163], "sheet": [58, 206], "phi_0": 58, "ze": 58, "r418": 58, "bateman": 58, "erdelyi": 58, "1953": [58, 192], "york": [58, 75, 129, 207, 215], "mcgraw": [58, 108, 129, 173, 179, 242], "r419": 58, "r420": 58, "lerch_transcend": 58, "stieltj": [58, 197], "gamma_": [58, 101, 103], "r421": 58, "stieltjes_const": 58, "ap": [58, 62, 207], "bq": [58, 185, 186, 207], "a_p": [58, 75, 207, 273], "b_q": [58, 75, 207, 273], "_pf_q": [58, 207, 213, 273], "unicod": [58, 78, 86, 177, 197, 228, 267], "r422": 58, "r423": 58, "generalized_hypergeometric_funct": 58, "convergence_stat": 58, "radius_of_converg": 58, "radiu": [58, 60, 64, 66, 120, 122, 132, 136, 183, 216, 217, 251], "meijer": [58, 68, 70, 76, 77, 263, 273], "mellin": [58, 76, 77], "barn": 58, "b_m": [58, 75, 215], "confusingli": 58, "int_l": [58, 75, 207], "contour": [58, 60, 75, 183, 207], "__1": 58, "subvector": 58, "aother": 58, "bm": 58, "bother": [58, 268], "slater": [58, 207], "allow_hyp": [58, 209], "subsum": 58, "r424": 58, "r425": 58, "meijer_g": 58, "get_period": [58, 75], "appellf1": [58, 197], "b2": [58, 90, 93, 94, 105, 113, 130, 173, 186, 188, 197, 207, 210, 213, 247], "appel": 58, "0063339426292673": 58, "172870711": 58, "659936": 58, "15605338197184": 58, "r426": 58, "appell_seri": 58, "r427": 58, "hypergeometricfunct": 58, "elliptic_integr": 58, "elliptic_k": [58, 197], "tfrac": [58, 213, 217], "eccentr": [58, 60], "50923695405127": 58, "625146415202697": 58, "elliptic_f": [58, 197], "r428": 58, "r429": 58, "ellipticintegr": 58, "elliptick": [58, 197], "909449841483": 58, "74720545502474": 58, "r430": 58, "r431": 58, "ellipticf": 58, "elliptic_": [58, 60, 197], "55203744279187": 58, "290764986058437": 58, "991052601328069": 58, "81879421395609": 58, "r432": 58, "r433": 58, "elliptice2": 58, "r434": 58, "elliptic": [58, 197], "elliptic_pi": [58, 197], "50232379629182": 58, "760939574180767": 58, "29136443417283": 58, "32555634906645": 58, "r435": 58, "r436": 58, "ellipticpi3": 58, "r437": 58, "ellipticpi": [58, 197], "mathieu_funct": 58, "mathieubas": 58, "mathieusprim": [58, 197], "mathieuc": [58, 197], "mathieucprim": [58, 197], "r438": 58, "r439": 58, "r440": 58, "r441": 58, "mathieuandspheroidalfunct": 58, "r442": 58, "r443": 58, "r444": 58, "r445": 58, "r446": 58, "r447": 58, "r448": 58, "r449": 58, "r450": 58, "r451": 58, "r452": 58, "r453": 58, "chebyshevu": [58, 197], "chebyshevt_root": 58, "chebyshevu_root": 58, "assoc_legendr": [58, 197], "jacobi_poli": [58, 193], "gegenbauer_poli": [58, 193], "chebyshevt_poli": [58, 193], "chebyshevu_poli": [58, 193], "hermite_poli": [58, 193], "legendre_poli": [58, 193], "laguerre_poli": [58, 193], "r454": 58, "jacobi_polynomi": 58, "r455": 58, "jacobipolynomi": 58, "r456": 58, "jacobip": [58, 197], "jacobi_norm": 58, "normilz": 58, "p_m": 58, "delta_": [58, 160, 168], "r457": 58, "r458": 58, "r459": 58, "r460": 58, "gegenbauer_polynomi": 58, "r461": 58, "gegenbauerpolynomi": 58, "r462": 58, "gegenbauerc3": 58, "r463": 58, "chebyshev_polynomi": 58, "r464": 58, "chebyshevpolynomialofthefirstkind": 58, "r465": 58, "chebyshevpolynomialofthesecondkind": 58, "r466": 58, "r467": 58, "u_n": [58, 77, 190, 192], "r468": 58, "r469": 58, "r470": 58, "r471": 58, "r472": 58, "chebyshev_root": 58, "r473": 58, "legendre_polynomi": 58, "r474": 58, "legendrepolynomi": 58, "r475": 58, "legendrep": [58, 197], "r476": 58, "legendrep2": 58, "r477": 58, "associated_legendre_polynomi": 58, "r478": 58, "r479": 58, "r480": 58, "r481": 58, "hermite_polynomi": 58, "r482": 58, "hermitepolynomi": 58, "r483": 58, "hermiteh": [58, 197], "l_n": [58, 77], "r484": 58, "laguerre_polynomi": 58, "r485": 58, "laguerrepolynomi": 58, "r486": 58, "laguerrel": [58, 197], "r487": 58, "laguerrel3": 58, "r488": 58, "generalized_laguerre_polynomi": 58, "r489": 58, "associatedlaguerrepolynomi": 58, "r490": 58, "r491": 58, "spherical_harmon": 58, "ynm": [58, 182], "ynm_c": 58, "znm": 58, "r492": 58, "r493": 58, "sphericalharmon": 58, "r494": 58, "sphericalharmonici": 58, "r495": 58, "r496": 58, "r497": 58, "r498": 58, "z_n": [58, 191], "r499": 58, "r500": 58, "r501": 58, "eijk": 58, "levicivita": [58, 86], "eval_levicivita": 58, "pseudotensor": 58, "delta_rang": [58, 163], "kroneck": [58, 162, 163, 218, 223], "r502": 58, "kronecker_delta": [58, 163], "indices_contain_equal_inform": [58, 163], "fermi": [58, 163], "above_fermi": [58, 163], "below_fermi": [58, 163], "is_above_fermi": [58, 163], "is_below_fermi": [58, 163], "is_only_below_fermi": [58, 163], "is_only_above_fermi": [58, 163], "killable_index": [58, 163], "preferred_index": [58, 163], "point2d": [59, 60, 61, 62, 63, 65, 66, 67], "arbitrary_point": [59, 60, 61, 62, 63, 64, 66], "polyfunc": [59, 193], "ambient_dimens": [59, 61, 63, 65], "plot_interv": [59, 60, 63, 66], "lower_bound": [59, 60, 63, 66], "upper_bound": [59, 60, 63, 66], "counterclockwis": [59, 60, 61, 65, 94], "geometryent": [59, 60, 61, 63, 65, 66, 67], "hradiu": 60, "vradiu": 60, "geometryerror": [60, 63, 66, 67], "radii": 60, "foci": 60, "periapsi": 60, "apoapsi": 60, "focus_dist": 60, "shortest": [60, 63, 66, 180, 203, 209, 213, 235], "auxiliary_circl": 60, "xmin": [60, 61, 63, 65, 66, 183], "ymin": [60, 61, 63, 65, 66, 183], "xmax": [60, 61, 63, 65, 66, 183], "ymax": [60, 61, 63, 65, 66, 183], "rectangl": [60, 61, 63, 65, 66, 183, 193], "director_circl": 60, "perpendicular": [60, 63, 64, 66, 79, 121, 136, 181], "director": 60, "130": 60, "r503": 60, "encloses_point": [60, 61, 66], "border": [60, 66], "_slope": 60, "slope": [60, 61, 63, 66, 93, 94, 98], "eq1": [60, 213, 215, 216], "eq2": [60, 80, 213, 216], "r504": 60, "108270": 60, "r505": 60, "equation_of_a_shifted_ellips": 60, "evolut": 60, "focal": [60, 132, 136], "100500": 60, "363": [60, 90, 191], "175": [60, 86, 190, 191], "is_tang": [60, 62], "tangent_lin": 60, "normal_lin": 60, "line2d": [60, 63, 66], "quartic": [60, 193, 215], "2020": [60, 142], "polar_second_moment_of_area": [60, 66], "moment": [60, 66, 93, 94, 115, 123, 126, 172, 183, 193, 210, 217], "constitu": [60, 66, 110, 173, 203, 242], "planar": [60, 66, 94, 136], "resist": [60, 66, 93, 94, 206], "deflect": [60, 66, 93, 94], "bend": [60, 66, 93, 95], "r506": 60, "polar_moment_of_inertia": [60, 66], "random_point": [60, 63, 64], "arb": 60, "364": 60, "notimpl": [60, 192], "second_moment_of_area": [60, 66], "centroid": [60, 66, 67, 93], "i_xx": [60, 66], "i_yi": [60, 66], "i_xi": [60, 66], "ellis": 60, "r507": 60, "list_of_second_moments_of_area": 60, "section_modulu": [60, 66], "sympify": [60, 66, 93, 96, 105, 110, 134, 137, 175], "farthest": [60, 66], "s_x": [60, 66], "s_y": [60, 66], "r508": 60, "semilatus_rectum": 60, "semi": [60, 63, 90], "latu": 60, "rectum": 60, "chord": 60, "conic": [60, 210, 242], "directrix": 60, "r509": 60, "semilatusrectum": 60, "r510": 60, "latus_rectum": 60, "collinear": [60, 62, 64, 65, 66, 183], "gx": 60, "hy": 60, "synonym": [60, 192], "p4": [60, 63, 65, 66, 183], "boundari": [61, 63, 93, 94, 176, 194, 205, 213, 217], "t2": [61, 66, 67, 90, 105, 110, 210, 217, 223], "ordering_of_class": 61, "is_similar": [61, 63, 66, 67], "uniform": [61, 183, 217], "enlarg": 61, "shrink": [61, 75], "parameter_valu": [61, 64], "pent": 61, "rpent": 61, "rcirc": 61, "entity1": 62, "entity2": 62, "zp": 62, "is_collinear": [62, 65], "segment2d": [62, 63, 66, 67], "wikipappu": 62, "bc": [62, 96, 235, 238, 247], "subs_point": 62, "p11": 62, "p12": 62, "p13": 62, "p21": 62, "p22": 62, "p23": 62, "ll1": 62, "ll2": 62, "ll3": 62, "ll4": 62, "ll5": 62, "ll6": 62, "pp1": 62, "pp2": 62, "pp3": 62, "encyclopedia": [62, 179], "apr": 62, "s_hexagon_theorem": 62, "clockwis": [62, 77, 81, 93, 94, 96], "overlap": [62, 67, 89, 184, 205, 238], "infanc": 62, "geometryresult": 62, "fair": [62, 217], "angle_between": [63, 64, 66, 173], "reflex": 63, "eman": 63, "readili": [63, 86], "sw": 63, "obtus": 63, "smallest_angle_between": 63, "line3d": [63, 64, 65], "is_perpendicular": [63, 64, 65, 66], "ray2d": [63, 66], "closing_angl": 63, "are_concurr": [63, 64], "concurr": [63, 64, 194], "l3": [63, 116, 190], "l4": [63, 116], "bisector": [63, 66], "p5": [63, 65, 66, 183], "p6": [63, 66, 183], "p7": [63, 66, 183], "segment3d": [63, 64], "direction_ratio": [63, 65], "is_parallel": [63, 64], "parallel_lin": 63, "perpendicular_lin": [63, 64], "perpendicular_seg": 63, "enpoint": 63, "reform": 63, "432": [63, 192], "92": [63, 191, 213, 217], "ccw": [63, 66], "ray3d": [63, 64, 136], "xdirect": 63, "ydirect": 63, "midpoint": [63, 65, 66, 77, 183, 247], "170": [63, 217], "341": 63, "perpendicular_bisector": 63, "linearentity2d": 63, "linearentity3d": [63, 64], "direction_cosin": [63, 65], "zdirect": 63, "normal_vector": [64, 136], "proce": [64, 127, 190, 192, 207, 215], "147": 64, "321": 64, "is_coplanar": 64, "perpendicualar": 64, "parallel_plan": 64, "on_circl": 64, "off_circl": 64, "perpendicular_plan": 64, "pt1": 64, "projection_lin": 64, "on_morph": 65, "affine_rank": 65, "are_coplanar": 65, "canberra_dist": 65, "canberra": 65, "geometricent": 65, "taxicab_dist": 65, "is_concycl": 65, "concycl": 65, "fewer": [65, 66, 127, 217, 263], "is_scalar_multipl": 65, "ambient": 65, "orthogonal_direct": 65, "taxicab": 65, "_nocheck": 65, "are_collinear": 65, "4x4": [65, 89, 135, 217], "travers": [66, 90, 106, 193, 206, 222, 232, 253, 268], "unrot": 66, "circumscrib": 66, "spin": [66, 102, 115, 149, 150, 158], "perimet": [66, 249], "contact": [66, 115, 119, 120, 121, 122, 180, 221], "38": [66, 86, 90, 197, 210, 212, 217], "cut_sect": 66, "upper_polygon": 66, "lower_polygon": 66, "upper_seg": 66, "lower_seg": 66, "r511": 66, "r512": 66, "paulbourk": 66, "polygonmesh": 66, "insidepoli": 66, "first_moment_of_area": 66, "q_x": [66, 180], "q_y": [66, 180], "625": [66, 251], "3125": [66, 217], "525": 66, "3000": [66, 93], "r513": 66, "skyciv": 66, "beam": [66, 96, 132, 135, 258], "bmd": 66, "r514": 66, "mechanicalc": 66, "poly1": 66, "poly2": 66, "interior": [66, 193, 205], "180": [66, 181, 191], "r515": 66, "r516": 66, "r517": 66, "apothem": 66, "interior_angl": 66, "exterior_angl": 66, "circumcircl": 66, "incircl": 66, "inradiu": 66, "inscrib": 66, "circumcent": 66, "circumradiu": 66, "leg": 66, "square_in_unit_circl": 66, "kite": 66, "asa": 66, "sa": [66, 193], "sss": 66, "altitud": 66, "orthocent": 66, "exradii": 66, "median": [66, 217, 259], "medial": 66, "nine_point_circl": 66, "straight": [66, 72, 98, 117, 180, 213], "eulerlin": 66, "equilater": 66, "coincid": [66, 86, 89, 107, 113, 184, 242, 246, 265], "excent": 66, "excircl": 66, "touch": [66, 115, 206], "r518": 66, "ly": [66, 86, 188], "exradiu": 66, "r519": 66, "r520": 66, "incent": 66, "is_equilater": 66, "is_isoscel": 66, "is_right": 66, "is_scalen": 66, "nine": [66, 197], "feet": 66, "real_num": 67, "hull": 67, "r521": 67, "graham_scan": 67, "r522": 67, "andrew": 67, "1979": [67, 168], "geomalgorithm": 67, "a10": 67, "_hull": 67, "t3": [67, 210], "mass": [67, 102, 103, 104, 105, 107, 108, 112, 113, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 130, 131, 139, 164, 166, 167, 168, 178, 180, 228, 249, 250], "averag": [67, 77, 90, 190, 217], "qq": [68, 69, 71, 72, 73, 77, 184, 185, 186, 187, 189, 190, 192, 193, 194], "p_r": 68, "holonomic_funct": 68, "from_hyp": [69, 72], "holonomicfunct": [69, 70, 72], "from_meijerg": [69, 72], "initcond": [69, 71, 72], "expr_to_holonom": [69, 72, 73, 74], "lenic": [69, 71], "ground": [69, 115, 119, 120, 121, 122, 184, 187, 188, 190, 192, 193, 215, 272], "meijerint": [69, 71, 75, 77], "_rewrite1": [69, 75], "_convert_poly_rat_alg": [69, 71], "_create_t": [69, 71], "differentialoper": [70, 72, 152], "differentialoperatoralgebra": 70, "_create_lookup_t": [71, 75], "old_poly_r": [72, 73, 184, 187, 188], "to_expr": [72, 73, 74, 100], "to_sequ": 72, "n_0": [72, 190, 215, 216], "indici": [72, 73, 74, 213], "c_j": [72, 75, 207], "holonomicsequ": 72, "r523": 72, "hal": 72, "inria": [72, 77], "fr": [72, 77, 90, 108, 113, 115, 117, 120, 121, 125, 127, 130, 217], "00070025": 72, "r524": 72, "risc": [72, 213, 242], "jku": [72, 213, 242], "risc_2244": 72, "diplform": 72, "_recur": 72, "rk4": 72, "kutta": 72, "71828182845905": 72, "10517083333333": 72, "22140257085069": 72, "34985849706254": 72, "49182424008069": 72, "64872063859684": 72, "82211796209193": 72, "01375162659678": 72, "22553956329232": 72, "45960141378007": 72, "71827974413517": 72, "331": 72, "4641": 72, "61051": 72, "771561": 72, "9487171": 72, "14358881": 72, "357947691": 72, "5937424601": 72, "to_hyp": 72, "as_list": [72, 193], "to_meijerg": 72, "homogen": [73, 77, 86, 100, 188, 190, 193, 210, 213, 214, 217], "1_0": 73, "1_1": 73, "0_0": 73, "0_1": 73, "pyplot": [73, 130], "plt": [73, 130], "list_of_poli": 73, "weyl": [73, 79], "Ore": 73, "dxa": 73, "endomorph": [73, 192], "frobeniu": [74, 86, 90, 190, 191], "subtleti": 75, "recast": [75, 209, 215, 216], "branchpoint": 75, "crude": [75, 115, 183], "decre": 75, "biholomorph": 75, "mutual": [75, 181], "neighbourhood": 75, "evid": [75, 108, 121, 207], "peculiar": [75, 181], "throughout": [75, 80, 190, 200, 216, 265], "_split_mul": 75, "_mytyp": 75, "inequival": 75, "_mul_as_two_part": 75, "bx": [75, 217, 223], "twist": 75, "recognis": [75, 187, 207, 209], "anywai": [75, 209, 213], "analyitc": 75, "_rewrite_singl": 75, "_rewrite2": 75, "_rewrite_saxena_1": 75, "_rewrite_saxena": 75, "blogpost": 75, "remedi": 75, "exploit": [75, 229], "transpar": [75, 78, 177], "nessgrh": 75, "wordpress": [75, 210], "07": 75, "stade": 75, "c_u": 75, "d_1": [75, 168, 193, 217], "d_v": 75, "amalgam": 75, "prudnikov1990": [75, 207], "luke1969": [75, 207], "c_3": [75, 213], "c_4": 75, "visibl": [75, 183], "fulfil": [75, 182], "vee": [75, 80], "lceil": 75, "rceil": 75, "d_j": [75, 168, 207], "lambda_c": [75, 126], "lambda_": 75, "z_0": [75, 209], "z_1": 75, "a_i": [75, 168, 173, 181, 185, 190, 207], "c_5": 75, "c_6": 75, "c_7": 75, "c_8": 75, "lvert": 75, "rvert": 75, "c_9": 75, "versatil": 75, "bz": [75, 210, 223], "deform": [75, 94], "encircl": 75, "appeal": 75, "fox": 75, "obstacl": 75, "identif": [75, 216], "domin": [75, 81, 202, 204], "iT": 75, "omega_": 75, "disguis": 75, "meijerint_indefinit": 75, "meijerint_definit": 75, "meijerint_invers": 75, "kelli": [75, 207], "roach": [75, 207], "211": [75, 90, 193, 207, 213], "prudnikov": [75, 207], "yu": [75, 182, 207], "brychkov": [75, 207], "marichev": [75, 207], "gordon": [75, 142, 207], "breach": [75, 207], "_coeffexpvalueerror": 75, "_get_coeff_exp": 75, "_check_anteced": 75, "_check_antecedents_1": 75, "mt": 75, "_check_antecedents_invers": 75, "anteced": [75, 204], "_condsimp": 75, "hoc": 75, "simp": [75, 115, 173], "_dummi": 75, "_dummy_": 75, "_eval_cond": 75, "_expon": 75, "_find_splitting_point": 75, "fsp": 75, "_flip_g": 75, "_function": 75, "_guess_expans": 75, "sensibl": [75, 77], "_inflate_fox_h": 75, "_inflate_g": 75, "_int0oo": 75, "_int0oo_1": 75, "_int_invers": 75, "_is_analyt": 75, "almost": [75, 84, 92, 165, 183, 184, 188, 193, 194, 213, 217, 231, 232, 235, 267], "_meijerint_definite_2": 75, "expand_mul": 75, "trigexpand": 75, "_meijerint_definite_3": 75, "_meijerint_definite_4": 75, "only_doubl": 75, "_meijerint_indefinite_1": 75, "_mul_arg": 75, "_my_principal_branch": 75, "full_pb": 75, "nearer": 75, "superflu": 75, "opaqu": [75, 197], "fac": 75, "_rewrite_invers": 75, "costli": [75, 117, 269], "tx": [75, 271], "overview": [76, 185, 216, 249, 250], "argand": [76, 216], "lookup": [76, 77, 86, 90, 207], "laplac": [76, 77, 97, 98, 100, 217], "todo": [76, 141, 143, 147, 148, 152, 153, 155, 156, 157, 158, 159, 190, 197, 204, 222], "polytop": 76, "happili": [77, 221], "nonelementari": 77, "mellin_transform": 77, "bilater": 77, "mellintransform": 77, "integraltransform": 77, "nocond": 77, "inverse_mellin_transform": 77, "laplace_transform": [77, 100], "fourier_transform": 77, "hankel_transform": 77, "inverse_hankel_transform": 77, "suitabl": [77, 83, 92, 185, 187, 190, 192, 197, 207, 210, 213, 216, 218, 266], "inversemellintransform": 77, "attemp": 77, "laplacetransform": 77, "inverse_laplace_transform": 77, "singularit": [77, 127], "inverselaplacetransform": 77, "_fast_inverse_laplac": 77, "rootsum": [77, 193, 199], "fouriertransform": 77, "_fourier_transform": 77, "inverse_fourier_transform": 77, "sine_transform": 77, "inverse_sine_transform": 77, "cosine_transform": 77, "inverse_cosine_transform": 77, "bixk": 77, "inversefouriertransform": 77, "sinetransform": 77, "inversesinetransform": 77, "cosinetransform": 77, "inversecosinetransform": 77, "hankeltransform": 77, "ht": 77, "inversehankeltransform": 77, "_compute_transform": 77, "_as_integr": 77, "integraltransformerror": 77, "_name": 77, "_collapse_extra": 77, "needev": 77, "function_vari": 77, "transform_vari": 77, "lazard": [77, 190, 193], "rioboo": 77, "trager": 77, "horowitz": 77, "ostrogradski": 77, "ratint": 77, "rationaltool": [77, 193], "ratint_logpart": 77, "ratint_ratpart": 77, "r525": 77, "bronstein": [77, 191, 193, 199, 215], "verlag": [77, 191], "deg": [77, 98, 113, 185, 190, 192, 193], "q_i": [77, 109, 127], "_t": [77, 113, 116, 130, 163, 172, 173, 176, 207, 217], "trigintegr": 77, "trigonometri": 77, "r526": 77, "integration_techniqu": 77, "deltaintegr": 77, "couldn": 77, "didn": [77, 86, 127], "singularityintegr": 77, "risch_integr": 77, "nonelementaryintegr": 77, "proven": [77, 90, 247, 265], "handle_first": 77, "separate_integr": 77, "rewrite_complex": 77, "forthcom": 77, "5109": 77, "outer": [77, 110, 128, 130, 146, 151, 152, 173, 176, 179, 181, 199, 205, 221, 242, 244, 245], "pop": [77, 210], "manualintegr": 77, "integral_step": 77, "student": [77, 206, 210, 217], "_i": [77, 163, 168, 194], "namedtupl": 77, "substep": 77, "sympy_gamma": 77, "app": 77, "intstep": 77, "urul": 77, "u_var": 77, "_u": [77, 163], "u_func": 77, "arctanrul": 77, "trigrul": 77, "rewriterul": 77, "addrul": 77, "powerrul": 77, "constanttimesrul": 77, "constantrul": 77, "norman": 77, "slowest": [77, 91], "retri": [77, 90], "degree_offset": 77, "unnecessary_permut": 77, "_try_heurisch": 77, "manuel": [77, 202], "poor": [77, 91], "man": [77, 191], "whittak": 77, "r527": 77, "sop": [77, 80], "cafe": 77, "pmint": 77, "r528": 77, "gedd": [77, 191], "stefanu": 77, "217": [77, 191], "r529": 77, "davenport": [77, 190, 191], "eurocam": 77, "lnc": [77, 191, 215], "157": [77, 90, 94, 191], "r530": 77, "iii": [77, 197, 213], "sigsam": 77, "bulletin": 77, "1982": [77, 182], "r531": 77, "transact": [77, 191], "1985": [77, 108, 129, 173, 242], "356": [77, 192, 215], "362": 77, "huge": [77, 90, 193, 233], "entail": 77, "delic": [77, 184], "albeit": [77, 245], "mimic": [77, 78, 177, 236], "moder": 77, "irrespect": [77, 210, 213, 238], "line_integr": 77, "as_sum": 77, "subinterv": 77, "trapezoid": [77, 86, 217], "730": 77, "809": 77, "decai": 77, "r532": 77, "riemann_sum": 77, "r533": 77, "cauchy_principal_valu": 77, "r534": 77, "cauchyprincipalvalu": 77, "int_a": 77, "uvar": 77, "ui": [77, 90], "accomplish": [77, 127, 130, 248], "3aissu": 77, "3aopen": 77, "3aintegr": 77, "gauss_legendr": 77, "n_digit": 77, "legendr": [77, 90, 193, 197, 210], "r535": 77, "w_i": [77, 132, 193, 213], "7746": 77, "55556": 77, "88889": 77, "86114": 77, "33998": 77, "34785": 77, "65215": 77, "gauss_laguerr": 77, "gauss_gen_laguerr": 77, "gauss_hermit": 77, "gauss_chebyshev_t": 77, "gauss_chebyshev_u": 77, "gauss_jacobi": 77, "gauss_lobatto": 77, "gaussian_quadratur": 77, "r536": 77, "fsu": 77, "jburkardt": 77, "cpp_src": 77, "legendre_rul": 77, "laguerr": [77, 193, 197], "r537": 77, "41577": 77, "2943": 77, "2899": 77, "71109": 77, "27852": 77, "010389": 77, "22285": 77, "1889": 77, "9927": 77, "7751": 77, "8375": 77, "983": 77, "45896": 77, "417": [77, 209], "11337": 77, "010399": 77, "00026102": 77, "9855e": 77, "93laguerre_quadratur": 77, "r538": 77, "laguerre_rul": 77, "hermit": [77, 81, 86, 87, 186, 192, 193, 197, 217], "r539": 77, "2247": 77, "29541": 77, "1816": 77, "3506": 77, "3358": 77, "43608": 77, "00453": 77, "15707": 77, "72463": 77, "hermite_quadratur": 77, "r540": 77, "hermite_rul": 77, "r541": 77, "gen_hermite_rul": 77, "r542": 77, "19016": 77, "7845": 77, "5253": 77, "4493": 77, "31413": 77, "00906": 77, "97851": 77, "9904": 77, "3193": 77, "712": 77, "53087": 77, "67721": 77, "11895": 77, "0023152": 77, "r543": 77, "gen_laguerre_rul": 77, "r544": 77, "86602": 77, "0472": 77, "96593": 77, "70711": 77, "25882": 77, "5236": 77, "93gauss_quadratur": 77, "r545": 77, "chebyshev1_rul": 77, "r546": 77, "3927": 77, "7854": 77, "90097": 77, "62349": 77, "22252": 77, "084489": 77, "27433": 77, "42658": 77, "r547": 77, "chebyshev2_rul": 77, "jacobi": [77, 90, 102, 193, 197], "r548": 77, "7063": 77, "0973": 77, "33795": 77, "87174": 77, "5917": 77, "2093": 77, "050584": 77, "22169": 77, "39439": 77, "93jacobi_quadratur": 77, "r549": 77, "jacobi_rul": 77, "r550": 77, "gegenbauer_rul": 77, "lobatto": 77, "r551": 77, "3333": 77, "44721": 77, "16667": 77, "83333": 77, "93lobatto_rul": 77, "r552": 77, "page_888": 77, "intpoli": 77, "chin": 77, "al": [77, 113, 142, 190, 206, 209], "2015": [77, 216], "unit_cub": 77, "polytope_integr": 77, "eric": [77, 191], "jean": 77, "lasserr": 77, "sukumar": 77, "nonconvex": 77, "967": 77, "981": 77, "dilbert": 77, "engr": 77, "ucdavi": 77, "suku": 77, "max_degre": [77, 193], "689": [77, 94], "21875": 77, "octahedron": 77, "trivari": 77, "enable_automatic_int_sympif": 78, "enable_automatic_symbol": 78, "init_ipython_sess": 78, "argv": [78, 228], "init_python_sess": 78, "use_latex": [78, 177, 272], "quiet": 78, "str_printer": [78, 177], "latex_print": [78, 177], "pylab": 78, "stringifi": [78, 177], "sstrrepr": [78, 177, 197], "lexograph": [78, 177], "gui": [78, 177], "statu": 78, "\u03b8": [78, 107, 135, 216], "int_to_integ": 78, "decistmt": 78, "f401": 78, "0x12": 78, "num_column": [78, 177, 197, 213], "no_glob": [78, 177], "ip": [78, 151, 157, 177], "forecolor": [78, 177], "backcolor": [78, 177], "fontsiz": [78, 177, 197], "10pt": [78, 177, 197], "latex_mod": [78, 177], "print_builtin": [78, 177], "interactiveconsol": [78, 177], "preambl": [78, 177, 197], "handwritten": [78, 177], "ctan": [78, 177], "pkg": [78, 177], "dvi": [78, 177, 197], "foreground": [78, 177], "black": [78, 148, 159, 177, 197, 272], "white": [78, 177, 217], "documentclass": [78, 177, 197], "dpi": [78, 177], "u03b8": 78, "dvip": 78, "r553": 78, "r554": 78, "the_68_standard_colors_known_to_dvip": 78, "config": 78, "root_system": 79, "rootsystem": 79, "cartantyp": 79, "cartan": 79, "subalgebra": 79, "adjoint": [79, 81, 86, 140, 144], "hyperplan": 79, "k_y": 79, "r555": 79, "r556": 79, "humphrei": 79, "add_as_root": 79, "root1": 79, "root2": 79, "add_simple_root": 79, "newroot": 79, "all_root": [79, 90, 193], "cartan_matrix": 79, "dynkin_diagram": 79, "dynkin": 79, "root_spac": 79, "simple_root": 79, "type_a": 79, "typea": 79, "basic_root": 79, "iin": 79, "jth": [79, 216], "ijth": 79, "cartan_typ": 79, "highest_root": 79, "lie_algebra": 79, "positive_root": 79, "type_b": 79, "typeb": 79, "b4": 79, "b3": [79, 113, 130, 173, 247], "type_c": 79, "typec": 79, "c4": [79, 81, 83, 213], "type_d": 79, "d4": [79, 217], "dmension": 79, "type_": 79, "e6": 79, "type_f": 79, "typef": 79, "f_4": [79, 109], "f4": [79, 183], "type_g": 79, "typeg": 79, "weyl_group": 79, "weylgroup": 79, "semisimpl": 79, "isometri": 79, "coxeter_diagram": 79, "undirect": [79, 235], "s_is_j": 79, "delete_doubl": 79, "element_ord": 79, "weylelt": 79, "group_nam": 79, "group_ord": 79, "192": 79, "matrix_form": 79, "cartantype_gener": 79, "standard_cartan": 79, "dynkindiagram": 79, "cartanmatrix": 79, "sopform": 80, "minterm": 80, "dontcar": 80, "simplified_pair": 80, "combo": 80, "outcom": [80, 166, 217], "r557": 80, "quin": 80, "mccluskey_algorithm": 80, "posform": 80, "r558": 80, "anfform": 80, "truthvalu": 80, "anf": 80, "funciton": 80, "zhegalkin": 80, "r559": 80, "zhegalkin_polynomi": 80, "as_set": 80, "booleantru": 80, "doubt": [80, 113], "greet": 80, "booleanfals": 80, "universalset": 80, "nand": 80, "xnor": 80, "gate": [80, 143, 148, 150, 156, 157, 159], "perspect": [80, 90, 100, 168, 183, 230, 246, 250], "multiplex": 80, "conjunct": [80, 183, 207, 228, 273], "disjunct": 80, "to_anf": 80, "oplu": [80, 147], "to_cnf": 80, "cnf": 80, "mccluskei": 80, "to_dnf": 80, "to_nnf": 80, "nnf": 80, "is_anf": 80, "is_cnf": 80, "is_dnf": 80, "is_nnf": 80, "gateinputcount": 80, "simplify_log": 80, "fewest": [80, 157], "bool_map": 80, "bool1": 80, "bool2": 80, "function1": 80, "function2": 80, "distribute_and_over_or": 80, "distribute_or_over_and": 80, "distribute_xor_over_and": 80, "eliminate_impl": 80, "truth_tabl": 80, "ibin": [80, 235], "integer_to_term": 80, "0001111011": [80, 235], "1101111000": [80, 235], "term_to_integ": 80, "bool_maxterm": 80, "maxterm": 80, "complement": [80, 83, 193, 216], "r560": 80, "canonical_normal_form": 80, "indexing_maxterm": 80, "bool_minterm": 80, "patter": 80, "r561": 80, "indexing_minterm": 80, "bool_monomi": 80, "enumar": 80, "anf_coeff": 80, "to_int_repr": 80, "all_model": 80, "unsatisfi": 80, "use_model": 80, "unsat": 80, "matrixbas": [81, 82, 83, 85, 186], "dirac": [81, 86, 98, 102, 103, 161, 197], "__abs__": [81, 188], "__add__": [81, 188, 192], "shapeerror": [81, 83, 86], "__len__": 81, "96": [81, 86, 217], "mismatch": 81, "matrix_multiply_elementwis": [81, 86], "applyfunc": [81, 82, 86, 121, 173, 218], "col": [81, 83, 86, 89, 100, 130, 186, 192, 269], "col_del": [81, 86, 269], "col_join": [81, 86, 115], "col_insert": [81, 269], "row_insert": [81, 269], "row_join": [81, 86, 115], "companion": [81, 83], "c0": [81, 83, 204, 213, 215], "sparsematrix": [81, 85, 86, 89, 198, 209], "diag": [81, 83, 86, 89, 130, 186, 223, 269], "immutablematrix": [81, 83, 85, 100, 173, 217, 242, 244, 269], "dens": [81, 83, 85, 86, 186, 189, 192, 193, 218, 256, 268], "blockmatrix": [81, 83, 86], "sparsetool": [81, 89], "kth": [81, 90], "rowslist": [81, 186], "colslist": 81, "submatrix": [81, 86, 190, 217], "get_diag_block": [81, 83, 86], "decoupl": 81, "hstack": [81, 186], "is_anti_symmetr": 81, "is_diagon": [81, 86], "is_low": [81, 186], "is_upp": [81, 186], "matrixeigen": [81, 85], "is_diagonaliz": [81, 86], "is_hermitian": [81, 86], "is_lower_hessenberg": 81, "hessenberg": [81, 86], "superdiagon": 81, "is_upper_hessenberg": 81, "is_strongly_diagonally_domin": 81, "strongli": [81, 86, 186, 235], "m1": [81, 86, 90, 94, 134, 142, 160, 162, 166, 210, 213, 218, 223], "subdiagon": [81, 86], "is_weakly_diagonally_domin": 81, "weakli": [81, 235], "vacuou": 81, "jordan_block": [81, 86], "eigenv": [81, 86, 113, 115, 130, 157, 267, 269], "insuffici": 81, "rectangular": [81, 86, 205, 216, 245], "r562": 81, "jordan_matrix": [81, 213], "dotprodsimp": 81, "blowup": 81, "multiply_elementwis": [81, 86], "hadamard": [81, 83, 86, 147, 148, 159, 197], "elementwis": [81, 83, 86, 218], "300": [81, 86, 90, 93, 178, 183, 194, 250], "bmatrix": [81, 83, 86, 117, 125, 126, 127, 128, 173, 181, 210], "a_0": [81, 86, 200, 210, 213, 218, 273], "vdot": [81, 83, 86, 168], "alpha_0": 81, "alpha_1": [81, 90, 192], "alpha_": [81, 182], "permute_col": 81, "permute_row": 81, "mulsimp": 81, "rmultipli": 81, "__rmul__": 81, "rot90": 81, "anticlockwis": 81, "row_del": [81, 86, 269], "todod": 81, "tolist": [81, 218], "vec": [81, 86, 130, 173, 182, 190, 247, 248, 250], "vech": 81, "check_symmetri": 81, "vstack": [81, 186], "wilkinson": 81, "w_": [81, 192], "wminu": 81, "wplu": 81, "r563": 81, "mathwork": [81, 98, 217, 269], "cleve": 81, "04": [81, 217], "r564": 81, "claredon": 81, "oxford": 81, "662": 81, "intm": 81, "undefinedkind": [81, 205], "tuplekind": [81, 205], "mutabledensematrix": [82, 186, 238], "densematrix": [82, 86], "ldldecomposit": [82, 86], "ldl": [82, 86], "choleski": [82, 86], "ludecomposit": [82, 83, 86, 269], "qrdecomposit": [82, 86], "as_immut": 82, "lower_triangular_solv": [82, 86], "upper_triangular_solv": [82, 86], "gauss_jordan_solv": [82, 86], "cholesky_solv": [82, 86], "diagonal_solv": [82, 86], "ldlsolv": [82, 86], "lusolv": [82, 86, 107, 109, 127, 131, 215, 269], "qrsolv": [82, 86], "pinv_solv": [82, 86], "permutedim": [83, 218, 219], "arraytensorproduct": [83, 219], "from_index_summ": 83, "first_index": 83, "last_index": 83, "longrightarrow": 83, "matpow": [83, 197], "hadamardproduct": [83, 197], "hadamard_product": 83, "hadamardpow": [83, 197], "ddot": [83, 86, 117, 126, 177, 180, 197, 273], "functionmatrix": 83, "lamda": [83, 197, 205, 217, 269], "lazili": [83, 203], "342923500": 83, "permutationmatrix": [83, 86], "matrixpermut": 83, "companionmatrix": 83, "matrixset": [83, 205], "submatric": [83, 86, 186, 217], "block_collaps": 83, "dat": [83, 235], "irregular": [83, 86], "ldudecomposit": 83, "ldu": 83, "2x2": [83, 89, 132, 186, 213], "noninvertiblematrixerror": [83, 269], "udldecomposit": 83, "lu": [83, 86, 186, 191], "udl": 83, "schur": 83, "penros": [83, 86], "pinv": [83, 86], "r565": 83, "schur_compl": 83, "blockdiagmatrix": [83, 86], "diag_block": 83, "alias": [84, 188], "bridg": [84, 96, 113, 236], "tension": 84, "matrixdetermin": 85, "matrixreduct": 85, "matrixsubspac": 85, "matrixcalculu": 85, "immutablesparsematrix": 85, "gramschmidt": 86, "m2": [86, 90, 94, 110, 134, 142, 160, 162, 166, 192, 210, 213, 218, 223], "126": [86, 90, 196], "150": [86, 100, 210], "v3": [86, 173, 176, 247], "glue": 86, "m3": [86, 142, 210, 218], "adj": 86, "qr": 86, "cheat": 86, "soln": 86, "gram": [86, 168, 170], "schmidt": 86, "out1": 86, "out2": 86, "1692": 86, "1551": 86, "423": 86, "6707": 86, "spot": [86, 131], "eigenvector": [86, 113, 157, 158, 182], "nullspac": [86, 186], "adjug": 86, "berkowitz": 86, "bareiss": 86, "cofactor_matrix": 86, "charpoli": [86, 186, 269], "_simplifi": 86, "purepoli": [86, 193], "samuelson": 86, "minor_submatrix": 86, "iszerofunc": [86, 269], "barei": 86, "det_lu": 86, "functiontyp": 86, "_iszero": [86, 269], "_is_zero_after_expand_mul": 86, "unrecogn": 86, "nonsquarematrixerror": [86, 213], "i3": [86, 101, 113, 130, 223], "perman": 86, "ryser": 86, "450": 86, "r566": 86, "prof": 86, "ben": 86, "berkelei": 86, "bernd": 86, "ban275": 86, "r567": 86, "permanent_": 86, "r568": 86, "r569": 86, "0904": 86, "3251": 86, "echelon_form": [86, 269], "with_pivot": 86, "echelon": [86, 186, 216, 269], "elementary_col_op": 86, "kn": [86, 93, 94], "col1": 86, "col2": 86, "km": [86, 90, 104, 108, 115, 117, 120, 121, 125, 127, 130, 169], "elementary_row_op": 86, "row1": 86, "row2": 86, "is_echelon": [86, 269], "rref": [86, 186], "pivot": [86, 186, 269], "normalize_last": 86, "rref_matrix": [86, 186], "rref_pivot": [86, 186], "301369863013699": 86, "712328767123288": 86, "noramlize_last": 86, "subspac": [86, 192], "columnspac": [86, 186], "rowspac": [86, 186], "orthonorm": [86, 130, 158, 181, 245], "rankcheck": 86, "r570": 86, "93schmidt_process": 86, "eigen": [86, 139], "bidiagonal_decomposit": 86, "ubv": 86, "bidiagon": 86, "hang": [86, 117, 121, 213, 214], "bidiagn": 86, "r571": 86, "golub": 86, "van": [86, 90, 191], "loan": 86, "r572": 86, "vslobodi": 86, "household": 86, "r573": 86, "r574": 86, "reals_onli": 86, "throw": [86, 92, 113, 192, 210, 216], "error_when_incomplet": 86, "eig": [86, 113, 130], "matrixerror": 86, "got": [86, 184, 187, 190, 193, 196, 228, 229, 235, 236, 265, 267, 268], "abel": 86, "ruffini": 86, "eigenvect": [86, 113, 130, 157, 269], "tidi": 86, "artifact": 86, "ret": 86, "eigenspac": 86, "rag": 86, "a_3": 86, "diagonaliz": [86, 269], "is_indefinit": 86, "semidefinit": [86, 217], "plot3d": [86, 183], "is_positive_definit": 86, "is_positive_semidefinit": 86, "hire": [86, 93, 94, 98, 183, 200], "is_negative_definit": 86, "is_negative_semidefinit": 86, "defer": [86, 239], "r575": 86, "definiteness_of_a_matrix": 86, "r576": 86, "positivedefinitematrix": 86, "r577": 86, "amer": 86, "259": 86, "264": [86, 215], "r578": 86, "r579": 86, "r580": 86, "r581": 86, "r582": 86, "r583": 86, "r584": 86, "r585": 86, "r586": 86, "r587": 86, "r588": 86, "r589": 86, "jordan_form": 86, "calc_transform": 86, "left_eigenvect": 86, "singular_valu": 86, "condition_numb": 86, "hessian": 86, "wronskian": [86, 213], "simpfunc": 86, "permutebkwd": 86, "permutefwd": 86, "lucombin": 86, "defici": [86, 90, 216], "matrixi": 86, "ludecomposition_simpl": [86, 269], "ludecompositionff": 86, "pa": [86, 108, 110, 125, 128, 131], "r590": 86, "zhou": 86, "jeffrei": [86, 209], "frontier": [86, 205], "china": 86, "67": [86, 191], "2008": [86, 182, 191, 193, 197], "row_swap": 86, "compres": 86, "permute_backward": 86, "permute_forward": 86, "u_": 86, "intiuit": 86, "lu_": 86, "_find_reasonable_pivot": 86, "lu_solv": [86, 186], "qr_solv": 86, "augument": 86, "167": 86, "158": [86, 94], "27261": 86, "30625": 86, "348": 86, "1914": 86, "6125": 86, "30589": 86, "198": 86, "1225": 86, "q_aug": 86, "r_aug": 86, "analytic_func": 86, "connected_compon": [86, 235], "connected_components_decomposit": 86, "relax": [86, 92], "3x1": 86, "1x3": 86, "conjugate_convent": 86, "dual": [86, 155, 161], "anti_symmetr": 86, "speak": [86, 192, 248], "freevar": 86, "underdetermin": [86, 215, 216], "free_var_index": 86, "sol": [86, 210, 213, 214, 215], "tau0": [86, 216, 217], "tau1": 86, "taus_zero": 86, "sol_uniqu": 86, "r591": 86, "gaussian_elimin": 86, "try_block_diag": 86, "inverse_g": [86, 269], "inverse_lu": [86, 269], "inverse_adj": [86, 269], "inverse_ch": 86, "inverse_ldl": 86, "inverse_qr": 86, "inv_mod": 86, "cof": 86, "inverse_block": 86, "blockwis": 86, "ntop": 86, "key2bound": 86, "key2ij": 86, "reciproc": [86, 217, 273], "fro": 86, "sing": 86, "spectral": 86, "rd": [86, 113, 197], "pseudoinvers": 86, "r592": 86, "penrose_pseudoinvers": 86, "arbitrary_matrix": 86, "wn_m": 86, "_w0_0": 86, "_w1_0": 86, "_w2_0": 86, "59": [86, 213], "r593": 86, "obtaining_all_solutions_of_a_linear_system": 86, "print_nonzero": [86, 235], "symb": [86, 197], "rank_decomposit": 86, "r594": 86, "rank_factor": 86, "r595": 86, "piziak": 86, "odel": 86, "magazin": 86, "193": [86, 98], "2307": 86, "2690882": 86, "singular_value_decomposit": 86, "condens": [86, 216], "orthogn": 86, "v_aug": 86, "u_aug": 86, "s_aug": 86, "gj": 86, "solve_least_squar": 86, "strongly_connected_compon": [86, 186, 235], "62": [86, 190], "strongly_connected_components_decomposit": 86, "rowstart": 86, "rowend": 86, "rowsep": 86, "colsep": 86, "strprinter": [86, 177, 260], "upper_hessenberg_decomposit": 86, "213": 86, "134": 86, "216": [86, 190], "hessenbergdecomposit": 86, "jordan_cel": 86, "varlist": 86, "r596": 86, "hessian_matrix": 86, "vlist": 86, "r597": 86, "casoratian": 86, "kernel": [86, 184, 190, 192, 215], "vanish": [86, 163, 190, 193, 196, 213, 242], "rsolve_hyp": [86, 215], "randmatrix": 86, "percent": [86, 216], "prng": 86, "percentag": [86, 90], "46": [86, 93, 168, 196, 215, 217], "list2numpi": 86, "dtype": [86, 91, 184, 186, 187, 188, 197, 236], "matrix2numpi": 86, "symarrai": 86, "ndarrai": [86, 217, 223, 229], "prefix_i1_i2_": 86, "_2": [86, 172, 173, 213], "a_0_0": 86, "a_0_1": 86, "a_0_2": 86, "a_1_0": 86, "a_1_1": 86, "a_1_2": 86, "a_0_0_0": 86, "a_0_0_1": 86, "a_0_1_0": 86, "a_0_1_1": 86, "a_0_2_0": 86, "a_0_2_1": 86, "a_1_0_0": 86, "a_1_0_1": 86, "a_1_1_0": 86, "a_1_1_1": 86, "a_1_2_0": 86, "a_1_2_1": 86, "rot_axis1": 86, "rot_axis2": 86, "rot_axis3": 86, "a2idx": 86, "normalform": [87, 186], "hermite_normal_form": [87, 186, 192], "check_rank": [87, 186], "hnf": [87, 186, 192], "explos": [87, 186], "believ": [87, 90, 186], "dmdomainerror": [87, 186], "dmshapeerror": [87, 186], "r598": 87, "cohen": [87, 186, 191, 192], "mutablesparsematrix": 88, "_doktocsr": 89, "csr": 89, "ja": 89, "ia": 89, "_csrtodok": 89, "dok": 89, "1x1": [89, 217], "vert": [89, 178, 181, 250], "saw": [89, 187, 273], "dynam": [90, 97, 98, 100, 104, 106, 108, 109, 112, 115, 123, 125, 126, 127, 128, 129, 130, 131, 172, 173, 175, 176, 180, 181, 232, 233, 242], "eratosthen": 90, "_reset": [90, 193], "_list": 90, "extend_to_no": 90, "mobiusrang": 90, "primerang": 90, "10th": 90, "totientrang": 90, "1e11": 90, "50000": 90, "primal": [90, 184], "1299709": 90, "r599": 90, "prime_number_theorem": 90, "table_of_": 90, "cf": [90, 190], "28x": 90, "2c_x_": 90, "2f_log_x": 90, "2c_and_li": 90, "r600": 90, "approximations_for_the_nth_prime_numb": 90, "r601": 90, "27_number": 90, "arr1": 90, "arr2": 90, "prevprim": 90, "9th": 90, "nextprim": 90, "occupi": [90, 163, 223], "conjectur": [90, 190], "twin": 90, "bertrand": 90, "brocard": 90, "primori": 90, "r602": 90, "r603": 90, "utm": 90, "postul": 90, "r604": 90, "s_postul": 90, "primefactor": 90, "argu": 90, "cycle_length": 90, "nmax": 90, "brent": [90, 232], "floyd": 90, "cycle_detect": 90, "17737": 90, "20000": 90, "compositepi": 90, "831": 90, "smoothness_p": 90, "sm": [90, 113, 130, 184], "psm": 90, "govern": 90, "10431": 90, "annot": [90, 183, 197], "21477639576571": 90, "4410317": 90, "1787": 90, "4869863": 90, "2434931": 90, "multiplicity_in_factori": 90, "nfac": 90, "52818775009509558395695966887": 90, "is2pow": 90, "pollard_rho": 90, "1234": [90, 210], "max_step": 90, "pollard": [90, 213], "leader": 90, "16843009": 90, "32767": 90, "4i": 90, "3i": 90, "2489": 90, "1482": 90, "285": [90, 215], "leadup": 90, "r605": 90, "crandal": 90, "carl": [90, 232], "pomer": [90, 232], "229": 90, "231": [90, 173], "pollard_pm1": 90, "ilcm": 90, "likelihood": 90, "1009": 90, "igcd": [90, 185], "am": [90, 168, 197], "255": 90, "crack": 90, "617": 90, "1786": 90, "worst": [90, 193, 213], "scenario": [90, 217], "divisisor": 90, "realist": 90, "r606": 90, "236": 90, "r607": 90, "washington": 90, "2007": [90, 129, 232], "spring": [90, 105, 107, 108, 113, 118], "ent": 90, "node81": 90, "r608": 90, "toronto": 90, "yuvalf": 90, "use_ecm": 90, "65537": [90, 196], "1407633717262338957430697921446883": 90, "991": 90, "202916782076162456022877024859": 90, "4200": 90, "1764": 90, "toggl": [90, 183], "12345678910111213141516": 90, "2507191691": 90, "1231026625769": 90, "factorrat": 90, "rat": 90, "987": 90, "10000000001": 90, "99009901": 90, "divisor_count": 90, "tim": [90, 235], "stackoverflow": [90, 235, 238], "1010381": 90, "proper_divisor": 90, "proper_divisor_count": 90, "udivisor": 90, "udivisor_count": 90, "r609": 90, "unitary_divisor": 90, "r610": 90, "unitarydivisor": 90, "r611": 90, "unitarydivisorfunct": 90, "antidivisor": 90, "r612": 90, "margin": [90, 100, 183, 217], "antidivisor_count": 90, "a066272": 90, "a066272a": 90, "r613": 90, "r614": 90, "27s_totient_funct": 90, "r615": 90, "totientfunct": 90, "r616": 90, "carmichael_funct": 90, "r617": 90, "carmichaelfunct": 90, "divisor_sigma": 90, "sigma_k": 90, "m_i": [90, 190], "m_ik": 90, "r618": 90, "divisor_funct": 90, "udivisor_sigma": 90, "47450": 90, "152": 90, "r619": 90, "core_t": 90, "core_2": 90, "squarefre": [90, 192], "cubefre": 90, "9424": 90, "1178": 90, "379238": 90, "square_factor": 90, "r620": 90, "free_integ": 90, "squarefree_cor": 90, "primenu": 90, "r621": 90, "primeomega": 90, "r622": 90, "mersenne_prime_expon": 90, "mersenn": 90, "4423": 90, "r623": 90, "perfectnumb": 90, "r624": 90, "perfect_numb": 90, "is_mersenne_prim": 90, "r625": 90, "mersenneprim": 90, "abund": 90, "is_abund": 90, "r626": 90, "abundantnumb": 90, "is_defici": 90, "r627": 90, "deficientnumb": 90, "is_amic": 90, "amic": 90, "220": [90, 193], "r628": 90, "amicable_numb": 90, "symmetric_residu": 90, "v_i": [90, 192, 215], "65": [90, 100, 190, 217], "639985": [90, 190], "912285": [90, 190], "954": 90, "gf_crt": [90, 190], "solve_congru": [90, 190], "programm": [90, 197], "galoistool": [90, 190], "crt1": 90, "4536": 90, "252": 90, "756": 90, "crt2": 90, "remainder_modulus_pair": 90, "mi": [90, 197], "k1": [90, 130, 161, 187, 188, 190], "k2": [90, 130, 187], "c_kn": 90, "binomial_coefficients_list": 90, "multinomial_coeffici": 90, "k_m": 90, "k_i": [90, 190, 207], "yann": 90, "laigl": 90, "chapui": 90, "permiss": [90, 182], "multinomial_coefficients_iter": 90, "_tupl": 90, "m53": 90, "partitions_": 90, "npartit": 90, "hardi": 90, "rademach": [90, 217], "r629": 90, "1958": [90, 182], "partitionfunctionp": 90, "is_euler_pseudoprim": 90, "pseudoprim": 90, "r630": 90, "euler_pseudoprim": 90, "prep": [90, 213, 214], "r631": 90, "mersenneforum": 90, "showpost": 90, "110896": 90, "mr": 90, "miller": 90, "rabin": 90, "wit": 90, "1373651": 90, "479001599": 90, "r632": 90, "135": 90, "138": 90, "93rabin_primality_test": 90, "deterministic_vari": 90, "is_lucas_prp": 90, "selfridg": 90, "377": 90, "1159": 90, "1829": 90, "3827": 90, "5459": 90, "5777": 90, "9071": 90, "9179": 90, "bailli": 90, "wagstaff": 90, "1980": [90, 235], "mpq": [90, 187, 189], "lucaspseudoprim": 90, "a217120": 90, "lucas_pseudoprim": 90, "is_strong_lucas_prp": 90, "bpsw": 90, "10877": 90, "16109": 90, "18971": 90, "a217255": 90, "psw_primality_test": 90, "is_extra_strong_lucas_prp": 90, "grantham": 90, "mo": [90, 130, 197], "jone": [90, 135], "preprint": 90, "a217719": 90, "perl": 90, "counterexampl": [90, 273], "989": 90, "3239": 90, "jon": 90, "mcom": 90, "234": 90, "01197": 90, "bisect": [90, 193, 215], "1e3": 90, "1e23": [90, 238], "near_int": 90, "strong_pseudoprim": 90, "is_gaussian_prim": 90, "r633": 90, "gaussian_prim": 90, "residue_ntheori": 90, "n_order": 90, "cong": [90, 190], "primitive_root": [90, 192], "r634": 90, "stein": [90, 213], "r635": 90, "hackman": 90, "2009": [90, 182], "sqrt_mod": 90, "sqrt_mod_it": 90, "quadratic_residu": 90, "nthroot_mod": 90, "109": [90, 191, 210], "is_nthpow_residu": 90, "r636": 90, "is_quad_residu": 90, "legendre_symbol": 90, "genfrac": 90, "nonresidu": 90, "alpha_2": [90, 192], "alpha_k": 90, "discrete_log": 90, "prime_ord": 90, "giant": [90, 216], "pohlig": 90, "r637": 90, "discretelogarithm": 90, "r638": 90, "cryptographi": [90, 252, 259], "menez": 90, "vanston": 90, "continued_fract": 90, "continued_fraction_period": 90, "continued_fraction_reduc": 90, "continued_fraction_converg": 90, "continued_fraction_iter": 90, "106": 90, "103993": 90, "33102": 90, "104348": 90, "33215": 90, "208341": 90, "66317": 90, "292": 90, "r639": 90, "discrimin": [90, 188, 190, 192, 193], "r640": 90, "periodic_continued_fract": 90, "r641": 90, "rosen": 90, "379": [90, 193], "381": 90, "januari": 90, "1992": [90, 191, 215], "233": [90, 191, 213], "718281835": 90, "287": 90, "count_digit": 90, "1111339": 90, "0xfa": 90, "c77": 90, "is_palindrom": [90, 235], "palindrom": 90, "0o121": 90, "oct": 90, "0o171": 90, "fermion": [90, 163], "r642": 90, "b6bius_funct": 90, "r643": 90, "thoma": [90, 129], "koshi": 90, "egyptian_fract": 90, "greedi": [90, 190, 206, 209], "egyptian": 90, "r644": 90, "jewett": 90, "takenouchi": 90, "3192": 90, "1118": 90, "2580": 90, "sylvest": [90, 190], "r645": 90, "seldom": 90, "blow": 90, "doubli": 90, "exhibit": [90, 182, 192, 206], "singli": 90, "tendenc": 90, "r646": 90, "1921": 90, "golumb": 90, "1962": 90, "propos": 90, "bleicher": 90, "1972": 90, "r647": 90, "420": [90, 210], "140": 90, "574": 90, "2788": 90, "6460": 90, "11590": 90, "33062": 90, "113820": 90, "greedy_algorithm_for_egyptian_fract": 90, "ic": [90, 213], "uci": 90, "eppstein": 90, "numth": 90, "egypt": 90, "ami": 90, "ektf": 90, "hu": 90, "finalpdf": 90, "ami_42_from129to134": 90, "bbp_pi": 90, "pi_hex_digit": 90, "hex": 90, "3243f6a8885a30": 90, "324": [90, 191], "r648": 90, "numberworld": 90, "subexponenti": 90, "comfort": [90, 91], "15154262241479": 90, "15423094826093": 90, "799333555511111": 90, "809709509409109": 90, "888888877777777": 90, "914148152112161": 90, "factoris": [90, 187, 188, 213], "max_curv": 90, "lenstra": 90, "repeatedli": [90, 101, 229], "ecm_one_factor": 90, "pseudorandom": [90, 235], "25645121643901801": 90, "5394769": 90, "4753701529": 90, "9804659461513846513": 90, "4641991": 90, "2112166839943": 90, "7060005655815754299976961394452809": 90, "6988699669998001": 90, "1010203040506070809": 90, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 90, "2709077133180915240135586837960864768806330782747": 90, "248": 90, "prime_bound": 90, "error_term": 90, "siq": 90, "modn": 90, "mulipl": 90, "r649": 90, "semanticscholar": 90, "5c52": 90, "8a975c1405bd35c65993abf5a4edb667c1db": 90, "r650": 90, "rieselprim": 90, "ziki": 90, "initializing_quadratic_siev": 90, "5915587277": 90, "3267000013": 90, "facilit": [91, 123, 134, 179, 228], "ship": 91, "000507214304613640": 91, "microsecond": 91, "000507214304614": 91, "hundr": [91, 267], "nanosecond": 91, "84147098": [91, 236, 262], "84119981": 91, "84092844": 91, "05426074": 91, "05433146": 91, "05440211": 91, "confer": [91, 271], "nano": 91, "manufactur": 91, "asnumpi": 91, "compliat": 91, "jnp": 91, "asarrai": 91, "84147096": 91, "8411998": 91, "05426079": 91, "05433151": 91, "autowrap": [91, 222, 230, 234, 254, 260], "implemented_funct": [91, 229, 236], "effort": [91, 188, 190], "50u": 91, "1u": 91, "10n": 91, "sympy_pars": 92, "local_dict": 92, "lambda_not": 92, "repeated_decim": 92, "auto_numb": 92, "factorial_not": 92, "global_dict": 92, "standard_transform": 92, "implicit_multiplication_appl": 92, "implicit_appl": 92, "implicit_multipl": 92, "convert_equals_sign": 92, "function_exponenti": 92, "stringify_expr": 92, "eval_expr": 92, "name_dict": 92, "fullform": 92, "setdelai": 92, "datatyp": [92, 188, 197, 230], "split_symbol": 92, "split_symbols_custom": 92, "_token_splitt": 92, "can_split": 92, "unsplitt": 92, "10sin": 92, "3xyz": 92, "2111": 92, "latex2sympi": 92, "typograph": 92, "parse_latex": 92, "stricter": 92, "liber": [92, 104, 267], "618": 92, "latexparsingerror": 92, "sym_expr": 92, "sympyexpress": 92, "source_cod": 92, "return_expr": 92, "definiton": 92, "src2": 92, "convert_to_expr": 92, "convert_to_c": 92, "src3": 92, "convert_to_python": 92, "src_code": 92, "filenam": [92, 197, 228, 229, 230, 238], "convert_to_fortran": 92, "continuum_mechan": [93, 94, 96], "elastic_modulu": 93, "second_mo": 93, "base_char": 93, "withstand": [93, 94], "character": [93, 94, 178, 181, 204, 217, 223, 250], "profil": 93, "shear": [93, 94], "downward": [93, 94, 96, 192], "apply_load": [93, 94, 96], "bc_deflect": [93, 94], "boundary_condit": 93, "solve_for_reaction_load": [93, 94], "shear_forc": [93, 94], "bending_mo": [93, 94], "applied_load": 93, "nm": [93, 94, 161, 218], "pointload": [93, 94], "ramp": [93, 94, 99], "parabol": 93, "apply_support": [93, 96], "loc": 93, "freedom": [93, 107, 108, 114, 117, 123, 217], "roller": [93, 94, 96], "upward": [93, 192], "r_10": 93, "r_30": 93, "4000": [93, 94], "bc_slope": [93, 94], "cross_sect": 93, "elast": [93, 94], "12000": 93, "draw": [93, 143, 197, 217, 259], "pictori": 93, "positv": 93, "ild_moment": 93, "ild_react": 93, "reaction": [93, 94, 96], "ild_shear": 93, "axial": [93, 132], "hing": [93, 94], "cantilev": [93, 94], "inertia": [93, 94, 103, 104, 105, 112, 113, 115, 116, 118, 120, 121, 122, 123, 130, 173, 179, 180, 181, 192], "666666666666667": [93, 94], "max_bmoment": 93, "max_deflect": 93, "max_shear_forc": 93, "plot_bending_mo": [93, 94], "gpa": 93, "400": [93, 183, 193], "13750": 93, "31250": 93, "plot_deflect": [93, 94], "00138541666666667": 93, "86458333333333e": 93, "04166666666667e": 93, "20833333333333e": 93, "51041666666667e": 93, "plot_ild_mo": 93, "solve_for_ild_mo": 93, "1kn": 93, "r_0": 93, "r_8": 93, "solve_for_ild_react": 93, "plot_ild_react": 93, "5kn": 93, "r_7": 93, "plotgrid": [93, 259], "plot_ild_shear": 93, "solve_for_ild_shear": 93, "plot_loading_result": [93, 94], "subplot": [93, 183], "plot_shear_forc": [93, 94], "plot_shear_stress": 93, "stress": 93, "6875": 93, "2500": 93, "15625": [93, 170], "plot_slop": [93, 94], "59375e": 93, "125e": 93, "08333333333333e": 93, "0001953125": 93, "point_cflexur": 93, "overhang": [93, 94], "10kn": 93, "20kn": [93, 94], "3kn": 93, "reaction_load": [93, 94, 96], "remove_load": [93, 96, 105], "shear_stress": 93, "beam3d": 93, "shear_modulu": 93, "apply_moment_load": 93, "solve_slope_deflect": 93, "r651": 93, "home": [93, 192, 210, 217, 228], "aau": 93, "jc": 93, "femtesemest": 93, "beams3d": 93, "axial_forc": 93, "axial_stress": 93, "load_vector": 93, "max_bending_mo": 93, "16000": 93, "495": 93, "10793": 93, "6400": 93, "301": [93, 207, 210], "560": 93, "2400": 93, "moment_load_vector": 93, "40000": 93, "4013": 93, "90300": 93, "1520": 93, "903": 93, "1600": [93, 94], "172": 93, "polar_mo": 93, "i1": [93, 101, 113, 130, 223], "1350": 93, "torsional_mo": 93, "torsion": 93, "_________________": 94, "________________": [94, 213], "_______________v": 94, "_______________": 94, "equilibrium": [94, 115, 127], "20e9": 94, "25e": 94, "______________________________________________": 94, "_______________________________________________": 94, "r\u2081": 94, "r\u2082": 94, "______________________": 94, "________________________": 94, "8kn": 94, "_____________": 94, "1m": 94, "3m": 94, "2m": 94, "5m": [94, 232], "679": 94, "12kn": 94, "________________________________": 94, "____________________________________________________": 94, "o____________________________________________________": 94, "4m": 94, "concentr": [94, 217], "_____________________________________": 94, "m\u2081": 94, "m\u2082": 94, "connector": 94, "_____________________": 94, "_______________________": 94, "_____________________o_______________________": 94, "oooo": [94, 235], "r\u2083": 94, "_______i_______": 94, "flexur": 94, "rigid": [94, 96, 105, 108, 110, 113, 115, 118, 123, 130, 173, 180], "____________": 94, "____________o________________________": 94, "a\u2081": [94, 273], "a\u2082": [94, 273], "six": [94, 197, 210, 216, 217], "joint": [96, 116, 118, 123], "add_nod": 96, "node_1": 96, "node_2": 96, "node_3": 96, "node_4": 96, "add_memb": 96, "member_1": 96, "member_2": 96, "member_3": 96, "member_4": 96, "member_5": 96, "270": 96, "360": 96, "change_member_label": 96, "new_label": 96, "change_node_label": 96, "bc_new": 96, "internal_forc": 96, "member_label": 96, "node_label": 96, "node_posit": 96, "remove_memb": 96, "remove_nod": 96, "remove_support": 96, "lti": [97, 98, 99], "transferfunct": [97, 98, 100], "interconnect": [97, 100, 107], "mimo": [97, 100], "transferfunctionmatrix": [97, 100], "mimoseri": [97, 100], "mimoparallel": [97, 100], "mimofeedback": [97, 100], "control_plot": 98, "pole_zero_plot": 98, "pole_color": 98, "blue": [98, 124, 183, 197], "pole_markers": 98, "zero_color": 98, "orang": 98, "zero_markers": 98, "show_ax": 98, "marker": [98, 183], "sisolineartimeinvari": [98, 100], "markers": 98, "tf1": [98, 100], "pole_zero_numerical_data": 98, "r652": 98, "93zero_plot": 98, "siso": [98, 100], "8660254j": 98, "bode_plot": 98, "initial_exp": 98, "final_exp": 98, "freq_unit": 98, "phase_unit": 98, "semilog": 98, "hz": 98, "hertz": 98, "bode_magnitude_plot": 98, "bode_phase_plot": 98, "bode_magnitude_numerical_data": 98, "5148378120533502e": 98, "68437": 98, "36188804005": 98, "020599914256786": 98, "0205999155219505": 98, "4117304087953": 98, "00000000260573": 98, "bode_phase_numerical_data": 98, "4472354033813751e": 98, "035581932165858e": 98, "47577": 98, "3248186011": 98, "67884": 98, "09326036123": 98, "5000000000291665e": 98, "6180885085e": 98, "08895483066e": 98, "1415085799262523": 98, "14155265358979": 98, "impulse_response_plot": 98, "lower_limit": [98, 263], "upper_limit": [98, 263], "step_response_plot": 98, "ramp_response_plot": 98, "r653": 98, "impulse_response_numerical_data": 98, "nb_of_point": [98, 183], "lineover1drangeseri": [98, 183], "amplitud": [98, 137], "06616480200395854": 98, "854500743565858": 98, "9999999799999999": 98, "7042848373025861": 98, "170748906965121e": 98, "1901263495547205e": 98, "r654": 98, "step_response_numerical_data": 98, "025413462339411542": 98, "0484508722725343": 98, "670250533855183": 98, "844291913708725": 98, "023844582399907256": 98, "042894276802320226": 98, "828770759094287e": 98, "456457160755703e": 98, "mx": [98, 143, 204], "r655": 98, "ramp_funct": 98, "ramp_response_numerical_data": 98, "12166980856813935": 98, "861246379582118": 98, "4504508011325967e": 98, "006046440489058766": 98, "12499999999568202": 98, "12499999999661349": 98, "bode": 99, "impuls": [99, 100], "den": [100, 188, 209, 213], "superscript": [100, 197], "tf2": 100, "tf3": 100, "tf4": 100, "tf5": 100, "tf6": 100, "500000000000000": 100, "tf7": 100, "tf8": 100, "tf9": 100, "tf10": 100, "tf11": 100, "tf12": 100, "r656": 100, "transfer_funct": 100, "r657": 100, "dc_gain": 100, "dc": [100, 126], "from_rational_express": 100, "zerodivisionerror": [100, 188, 226, 236], "complexinfin": 100, "tf": [100, 236], "is_biprop": 100, "is_prop": 100, "is_stabl": 100, "is_strictly_prop": 100, "sys1": 100, "sys2": 100, "feedforward": 100, "fed": 100, "sit": [100, 181], "plant": 100, "compulsori": 100, "tf_1": 100, "tf_2": 100, "tf_3": 100, "tf_4": 100, "tfm_1": 100, "num_input": 100, "num_output": 100, "tfm_2": 100, "tf_5": 100, "tf_6": 100, "tf_7": 100, "tf_8": 100, "tfm_3": 100, "tfm_4": 100, "tfm_5": 100, "tfm_6": 100, "tf_9": 100, "tf_10": 100, "tfm_7": 100, "tfm_8": 100, "tfm_9": 100, "tfm_10": 100, "tfm_11": 100, "tfm_12": 100, "elem_pol": 100, "elem_zero": 100, "from_matrix": [100, 186], "m_tf": 100, "tfm": 100, "tfm1": 100, "tfm2": 100, "g4": 100, "tfm3": 100, "mimolineartimeinvari": 100, "mat_a": 100, "mat_b": 100, "mat_c": 100, "tfm_a": 100, "tfm_b": 100, "tfm_c": 100, "expr_1": 100, "expr_2": 100, "expr_3": 100, "expr_4": 100, "plant_mat": 100, "controller_mat": 100, "neg_feedback": 100, "hep": 101, "gamma_matric": [101, 103], "gammamatrix": 101, "lorentzindex": 101, "gammamatrixhead": 101, "extract_type_ten": 101, "gamma_trac": 101, "i0": [101, 135, 223], "i2": [101, 113, 130, 223], "i4": [101, 223], "i5": 101, "ps": 101, "qs": [101, 108, 257], "kahane_simplifi": 101, "spinor": 101, "rearrang": [101, 108, 125, 126, 147, 213], "ta": [101, 206], "tb": [101, 206, 228], "tc": [101, 188, 193, 206], "joseph": [101, 191], "kahan": 101, "octob": 101, "1968": 101, "simplify_gpgp": 101, "e_nl": [102, 164], "hartre": 102, "helium": 102, "2209": 102, "e_nl_dirac": 102, "spin_up": 102, "035999037000": 102, "relativist": 102, "angular": [102, 105, 107, 110, 115, 116, 117, 118, 120, 122, 123, 127, 130, 132, 136, 137, 139, 142, 160, 164, 173, 176, 182], "momentum": [102, 110, 113, 123, 130, 141, 142, 160, 164, 182, 223], "light": [102, 135, 168, 177, 184], "035999037": 102, "1012": 102, "3627": 102, "500006656595360": 102, "125002080189006": 102, "125000416028342": 102, "0555562951740285": 102, "0555558020932949": 102, "0555556377366884": 102, "psi_nlm": 102, "wave": [102, 133, 134, 135, 200, 258], "psi_": [102, 139], "nlm": 102, "radial": [102, 117, 164], "nl": [102, 164], "magnet": [102, 134, 178, 250], "azimuth": 102, "wf": [102, 115], "abs_sqrd": 102, "silver": 102, "94": [102, 191], "141": 102, "4418": 102, "mdft": 103, "mgamma": 103, "gamma_5": 103, "gamma_0": 103, "gamma_3": 103, "r658": 103, "msigma": 103, "pauli": [103, 258], "sigma_i": [103, 217], "r659": 103, "pauli_matric": [103, 138], "pat_matrix": 103, "unansw": [104, 172], "kane": [104, 107, 113, 119, 123, 124, 129, 130, 172, 173, 242], "q1d": [104, 113, 115, 117, 120, 121, 122, 125, 126, 127, 128, 172, 177, 181], "q2d": [104, 113, 115, 117, 120, 121, 122, 125, 126, 176, 177], "q3d": [104, 120, 121, 122, 125], "kinemat": [104, 107, 108, 112, 113, 115, 116, 117, 118, 120, 122, 124, 125, 127, 128, 130, 131, 173, 179, 181], "dyad": [104, 130, 245], "mprint": [104, 120, 121, 122, 123, 125], "mpprint": [104, 123, 125], "mlatex": [104, 123], "sub_dict": [104, 106, 115], "msub": [104, 123, 127], "cleaner": [104, 130, 213], "gsl": [104, 230], "lsoda": 104, "penalti": 104, "masscent": [105, 107, 110, 116, 124, 128, 130], "central_inertia": [105, 110, 116, 118], "possess": [105, 128, 223], "name_of_bodi": 105, "ixx": [105, 110, 173], "body_inertia": 105, "torqu": [105, 108, 112, 118, 125, 126, 130], "ang_vel_in": [105, 107, 113, 120, 121, 130, 173, 180], "set_ang_vel": [105, 110, 113, 115, 120, 121, 127, 128, 130, 131, 173, 175, 176, 180], "apply_forc": [105, 107, 118], "reaction_bodi": [105, 107, 118], "reaction_point": 105, "oppposit": 105, "desri": 105, "force1": 105, "b_masscent": 105, "b_frame": 105, "newtonion": [105, 107], "spring_forc": 105, "n_frame": 105, "apply_torqu": [105, 118], "torquess": 105, "torque1": 105, "b1_frame": 105, "b2_frame": 105, "clear_load": 105, "dcm": [105, 107, 113, 115, 130, 173, 180, 181, 242], "orient_axi": [105, 173, 175], "kinetic_energi": [105, 123, 128, 130], "kinet": [105, 108, 110, 123], "inerti": [105, 107, 108, 110, 115, 117, 120, 125, 126, 128, 130], "set_vel": [105, 108, 110, 113, 115, 117, 120, 121, 122, 125, 126, 127, 128, 130, 131, 176, 180], "b_ixx": 105, "b_mass": [105, 107], "masscenter_vel": [105, 107], "smart": [106, 127, 204, 210, 213], "sub1": [106, 197], "sub2": [106, 197], "reference_fram": [106, 173], "child": [107, 124, 187, 232], "parent_joint_po": [107, 116, 118, 124], "child_joint_po": [107, 116, 118, 124], "parent_axi": [107, 116, 118, 124], "child_axi": [107, 116, 118, 124], "_generate_coordin": 107, "_generate_spe": 107, "_orient_fram": 107, "_set_angular_veloc": 107, "_set_linar_veloc": 107, "rotation_axi": 107, "parent_point": [107, 124], "child_point": [107, 124], "kde": [107, 116, 117, 124, 127], "revolut": 107, "\u03c9": 107, "pc": [107, 194], "pc_p_joint": 107, "pc_c_joint": 107, "p_frame": 107, "c_frame": 107, "theta_pc": 107, "omega_pc": 107, "pos_from": [107, 113, 115, 116, 117, 124, 130, 176, 180], "pendulum": [107, 112, 114, 118, 123, 127, 131, 180], "upper_bob": 107, "lower_bob": 107, "ceiling_joint": 107, "pendulum_joint": 107, "theta_p1": 107, "theta_p2": 107, "u_fram": 107, "l_frame": 107, "omega_p1": 107, "omega_p2": 107, "vel": [107, 113, 115, 117, 121, 124, 130, 176, 180, 248], "prismat": 107, "slide": 107, "x_pc": 107, "v_pc": 107, "wall": [107, 118], "part1": 107, "part2": 107, "j1": [107, 116, 118, 142, 160], "j2": [107, 116, 118, 142, 160], "x_j1": 107, "w_frame": 107, "x_j2": 107, "p1_frame": 107, "v_j1": 107, "damper": [107, 108, 113, 118], "form_eom": [107, 118, 124], "mass_matrix_ful": [107, 108, 113, 118, 125, 126], "forcing_ful": [107, 108, 113, 118, 125, 126], "mass_matrix": [107, 108, 112, 115, 120, 121, 125, 126, 131], "kanesmethod": [107, 108, 113, 115, 116, 117, 118, 120, 121, 124, 125, 127, 130], "lagrangesmethod": [107, 117, 122, 123, 126, 127], "qd": [107, 108, 115, 125, 176], "inv_method": [107, 108], "solveabl": 107, "q_ind": [108, 109, 113, 115, 116, 117, 120, 121, 125, 127, 130], "u_ind": [108, 109, 113, 115, 116, 117, 120, 121, 125, 127, 130], "kd_eq": [108, 113, 115, 116, 117, 120, 121, 127, 130], "q_depend": [108, 115, 116, 117, 125, 130], "configuration_constraint": [108, 115, 116, 117, 125], "u_depend": [108, 115, 116, 117, 125, 130], "velocity_constraint": [108, 115, 116, 117, 125, 130], "acceleration_constraint": 108, "u_auxiliari": [108, 121, 125, 130], "forcelist": [108, 113, 116, 117, 120, 121, 126, 127, 130], "levinson": [108, 129, 173, 242], "udot": [108, 115], "ud": [108, 125], "kd": [108, 115, 120, 121, 125], "fl": [108, 115, 125, 126, 130, 191], "bl": [108, 115, 125, 130], "frstar": [108, 113, 115, 117, 120, 121, 125, 127, 130], "kanes_equ": [108, 113, 115, 117, 120, 121, 125, 127, 130], "a_and_b": [108, 109, 117], "auxiliary_eq": [108, 121], "constrain": [108, 117, 126, 130], "kindiffdict": [108, 115, 120, 121, 125, 130], "new_method": [108, 117], "intens": [108, 109, 132, 135], "perm_mat": [108, 109, 127], "op_point": [108, 109, 117, 127], "beforehand": [108, 230], "to_linear": [108, 127], "recalcul": [108, 193], "hol_coneq": [108, 117, 126], "nonhol_coneq": [108, 117, 126], "nonconserv": 108, "form_lagranges_equ": [108, 117, 122, 126, 127], "qdot": [108, 115, 116, 176], "qdoubledot": 108, "lam": [108, 109, 131], "lagranges_equ": 108, "qd_ind": [108, 127], "q_dep": [108, 125, 127], "qd_dep": [108, 127], "solve_multipli": [108, 117], "sol_typ": 108, "array_lik": 108, "f_3": [109, 112, 131, 213], "f_c": [109, 117], "f_v": [109, 117], "f_a": 109, "q_d": 109, "u_i": [109, 127, 180, 190], "u_d": [109, 130], "q_op": [109, 117], "u_op": [109, 117], "qd_op": 109, "ud_op": [109, 117], "spatial": [110, 137, 173, 197], "init_vprint": [110, 111, 128, 131, 173, 175, 176, 179, 180, 181], "locatenew": [110, 115, 117, 120, 121, 122, 127, 128, 130, 131, 174, 176, 178, 180], "parallel_axi": 110, "inertia_tupl": 110, "mv": 110, "iyi": [110, 173], "izz": [110, 173], "ixi": [110, 173], "iyz": [110, 173], "izx": 110, "yy": [110, 181, 213], "yz": [110, 181, 183], "zx": [110, 181], "pos_vec": 110, "px": [110, 153, 158, 223], "body1": 110, "body2": 110, "body3": 110, "h2": 110, "multibodi": [110, 113, 123, 129, 130, 131, 180], "vprint": [111, 172, 176, 179, 181], "vpprint": [111, 172, 179, 181], "vlatex": [111, 172, 173, 179, 181], "coord_stat": 112, "right_hand_sid": 112, "coordinate_deriv": [112, 131], "alg_con": [112, 131], "output_eqn": 112, "coord_idx": [112, 131], "speed_idx": [112, 131], "m_3": [112, 131, 142, 182], "exogen": [112, 131], "ref_fram": 112, "graviti": [112, 113, 117, 118, 120, 122, 130, 178, 250], "theta_dot": 112, "kin_explicit_rh": [112, 131], "dyn_implicit_mat": [112, 131], "dyn_implicit_rh": [112, 131], "symsystem": 112, "dae": [112, 131], "adjust": [112, 200, 204], "comb_implicit_mat": [112, 131], "comb_implicit_rh": [112, 131], "kinema": 112, "comb_explicit_rh": [112, 131], "compute_explicit_form": 112, "awhil": 112, "constant_symbol": 112, "dynamic_symbol": 112, "motiongenesi": [113, 130], "double_pendulum": 113, "motionvari": [113, 130], "newtonian": [113, 130], "simprot": [113, 130], "n_a": 113, "n_b": 113, "w_a_n": 113, "w_b_n": [113, 130], "p_o_p": 113, "p_p_r": 113, "v_o_n": [113, 130], "v2pt": [113, 130], "v_p_n": 113, "v_r_n": 113, "force_p": 113, "force_r": 113, "tfinal": 113, "integstp": 113, "some_filenam": 113, "parse_autolev": 113, "sympy_cod": 113, "include_numer": 113, "include_pydi": 113, "pydi": [113, 130, 173], "u1d": [113, 115, 117, 120, 121, 125], "u2d": [113, 115, 117, 120, 121, 125], "frame_n": 113, "frame_a": 113, "frame_b": 113, "point_o": 113, "particle_p": 113, "p_pt": 113, "particle_r": 113, "r_pt": 113, "set_po": [113, 176, 180], "v2pt_theori": [113, 115, 120, 121, 122, 127, 128, 130, 131, 176, 180], "initial_condit": [113, 130], "overwritten": 113, "e2row": 113, "eigvec": [113, 130], "eigenvec": 113, "deg2rad": 113, "0174533": 113, "wo": 113, "coef": [113, 130], "u3": [113, 115, 116, 118, 120, 121, 125, 130, 176, 180], "strai": 113, "reassign": 113, "inher": [113, 236, 265], "rhs_x": 113, "i_b_bo": 113, "body_b": 113, "body_b_f": 113, "b_cm": 113, "b_f": 113, "scene": [113, 209, 265], "i_c_d": 113, "i_p_q": 113, "i_b_o": 113, "e3": [113, 204, 213], "i_p_o": 113, "e4": [113, 204], "p_so_o": 113, "nicheck": 113, "plug": [113, 168], "hurdl": 113, "gitlab": 113, "repo": 113, "ch4": 113, "ch5": 113, "ch6": 113, "cst": 113, "grammar": [113, 209], "roll": [114, 115, 123, 180, 217], "disc": [114, 123, 180], "bicycl": [114, 123, 129], "nonminim": [114, 123, 127], "linkag": [114, 123], "meijaard2007": [115, 129], "steer": [115, 129], "purposefulli": 115, "mechanics_print": [115, 116, 120, 121, 122, 123, 124, 125, 126], "yaw": 115, "ang": 115, "rear": 115, "wheel": 115, "pitch": 115, "q4": [115, 125, 175], "q5": [115, 175], "q4d": [115, 125], "q5d": 115, "u4": [115, 121, 125, 130], "u5": [115, 121], "u6": [115, 121], "u3d": [115, 120, 121], "u4d": 115, "u5d": 115, "u6d": 115, "explanatori": 115, "wfrad": 115, "wrrad": 115, "htangl": 115, "forkoffset": 115, "forklength": 115, "framelength": 115, "forkcg1": 115, "forkcg3": 115, "framecg1": 115, "framecg3": 115, "iwr11": 115, "iwr22": 115, "iwf11": 115, "iwf22": 115, "iframe11": 115, "iframe22": 115, "iframe33": 115, "iframe31": 115, "ifork11": 115, "ifork22": 115, "ifork33": 115, "ifork31": 115, "mframe": 115, "mfork": 115, "mwf": 115, "mwr": 115, "wr": 115, "tempfram": 115, "tempfork": 115, "orientnew": [115, 117, 120, 121, 122, 127, 131, 173, 175, 176, 178, 180, 181], "wr_cont": 115, "wr_mc": 115, "frame_mc": 115, "fork_mc": 115, "wf_mc": 115, "wf_cont": 115, "flip": [115, 148, 157, 217], "frame_i": 115, "fork_i": 115, "wr_i": 115, "wf_i": 115, "bodyfram": 115, "bodyfork": 115, "bodywr": 115, "bodywf": 115, "nonholonom": 115, "closer": [115, 216, 268], "slip": [115, 119, 121, 180], "replic": 115, "conlist_spe": 115, "conlist_coord": 115, "gravit": [115, 120, 166, 178, 250], "aforement": [115, 178, 210, 248], "paperradrear": 115, "paperradfront": 115, "hta": 115, "trailpap": 115, "08": 115, "rake": 115, "paperwb": 115, "02": 115, "paperframecgx": 115, "paperframecgz": 115, "paperforkcgx": 115, "paperforkcgz": 115, "framecgnorm": 115, "framecgpar": 115, "tempa": 115, "tempb": 115, "tempc": 115, "paperforkl": 115, "forkcgnorm": 115, "forkcgpar": 115, "upright": 115, "val_dict": 115, "0603": 115, "1405": 115, "05892": 115, "00708": 115, "00756": 115, "kdd": [115, 120, 121], "centripet": 115, "corioli": 115, "forcing_lin": 115, "mm_full": 115, "_k_kqdot": 115, "xdot": 115, "lean": [115, 120, 122], "amat": 115, "summari": [116, 209, 228, 252], "jointsmethod": [116, 118, 123], "q_1": [116, 117, 118, 124, 127, 143, 180, 193, 210], "q_2": [116, 117, 118, 127, 180], "q_3": [116, 118, 180], "u_1": [116, 117, 118, 124, 180, 192, 213], "u_2": [116, 117, 118, 180, 192, 213], "u_3": [116, 118, 180], "densiti": [116, 217, 228, 251], "link1": 116, "link2": 116, "link3": 116, "link4": 116, "joint1": 116, "pinjoint": [116, 118], "joint2": 116, "joint3": 116, "j3": [116, 118, 142, 160], "fh": 116, "fhd": 116, "_method": 116, "_form_eom": 116, "eom": [117, 118, 127], "theta1": 117, "dq_dict": 117, "presimplifi": 117, "inp_vec": [117, 127], "lag": [117, 122, 127], "lm": [117, 126, 127, 190, 193], "lag_eq": [117, 127], "lam_op": 117, "prismaticjoint": [118, 124], "mb": [118, 130], "ibzz": 118, "compound_pend": 118, "simple_pend": 118, "slider": [118, 124], "rev1": 118, "rev2": 118, "w_r_n_qd": [120, 121], "dmc": [120, 121, 122], "uv": [120, 121, 163], "bodyd": [120, 121, 122], "bodylist": [120, 121], "revisit": [121, 180], "kane1985": [121, 125, 128, 129], "thorough": [121, 127, 210], "simplifc": 121, "f3": [121, 183, 197], "necessit": 121, "factor_term": [121, 193, 206, 209], "simplify_auxiliary_eq": 121, "lrh": 122, "planet": 123, "robot": 123, "fascin": 123, "trajectori": 123, "challeng": 123, "came": [123, 268], "tackl": [123, 230], "organ": 123, "amen": 123, "arduou": 123, "momenta": [123, 142], "symbolicsystem": 123, "rough": [123, 168], "inertia_of_point_mass": 123, "linear_momentum": [123, 128, 130], "angular_momentum": [123, 128, 130], "kanemethod": 123, "find_dynamicsymbol": 123, "red": [124, 183], "parent_fram": 124, "child_fram": 124, "child_mass": 124, "f_h": 125, "nh": 125, "ku": [125, 197], "k_d": 125, "f_d": [125, 126, 190], "dnh": 125, "f_r": [125, 127, 190], "speed_con": 125, "coord_con": 125, "u_dep": 125, "m_d": 126, "lam1": 126, "0_": 127, "blajer1994": [127, 129], "brought": [127, 217], "vel_p": 127, "a_op": 127, "b_op": 127, "m_op": 127, "a_lin": 127, "hasn": 127, "wikidyad": [128, 179], "wikidyadicproduct": [128, 179], "juxtaposit": [128, 172, 245], "hat": [128, 172, 173, 177, 178, 180, 181, 245, 246, 248, 250, 251], "otim": [128, 218], "l_p": 128, "likins1973": [128, 179], "l_b": 128, "requisit": 128, "t_p": 128, "t_b": 128, "t_t": 128, "virtu": [128, 130], "blajer": 129, "wojciech": 129, "werner": 129, "schiehlen": 129, "walter": 129, "schirm": 129, "kane1983": [129, 181], "likin": [129, 179], "david": [129, 193], "spacecraft": 129, "1983": [129, 232], "meijaard": 129, "jim": 129, "papadopoulo": 129, "ruina": 129, "schwab": 129, "royal": 129, "societi": [129, 210], "2084": 129, "1955": 129, "982": 129, "lectur": [130, 191, 217], "rigibodi": 130, "proprietari": 130, "k3": [130, 187], "k4": 130, "b11": 130, "b12": 130, "b21": 130, "b22": 130, "xd": 130, "xd2": 130, "y1d": 130, "y2d": 130, "tina": 130, "overwrit": [130, 172], "dt2": 130, "dy2": 130, "ty": 130, "linsolv": [130, 195, 211, 215, 274], "nonlinsolv": [130, 211, 215, 274], "nsolv": [130, 215], "rowmatrix": 130, "colmatrix": 130, "diagmat": 130, "eigval": 130, "row_matrix": 130, "col_matrix": 130, "ao": 130, "i12": 130, "i23": 130, "i31": 130, "bf": 130, "p_o_q": 130, "mag": 130, "unitvec": 130, "qo": 130, "p_p_q": 130, "partial_veloc": [130, 173, 176], "a_o_n": 130, "set_acc": [130, 176, 180], "qb": [130, 185], "qbd": 130, "alf_b_n": 130, "set_ang_acc": [130, 173], "ang_acc_in": [130, 173], "force_o": 130, "torque_a": 130, "qa": 130, "qad": 130, "a_b": 130, "v1pt": 130, "v1pt_theori": [130, 176, 180], "a1pt": 130, "a1pt_theori": [130, 176], "a2pt": 130, "a2pt_theori": [130, 176, 180], "angvel": 130, "force_vector": 130, "center_of_mass": 130, "kindiff": 130, "ke": 130, "configura": 130, "tion_constraint": 130, "pendent": 130, "velocity_con": 130, "traint": 130, "acceleration_": 130, "u_auxilia": 130, "ry": 130, "matlplotlib": 130, "stiff": 130, "damp": 130, "legend": [130, 183, 200], "introspect": 130, "rich": [130, 209], "media": [130, 136], "histori": 130, "esqu": 130, "cpython": 130, "pertin": [131, 184, 192], "alg_con_ful": 131, "symsystem1": 131, "symsystem2": 131, "symsystem3": 131, "raytransfermatrix": 132, "geometricrai": 132, "beamparamet": 132, "geometric_conj": 132, "gauss_conj": 132, "conjugate_gauss_beam": 132, "lens": 132, "gaussopt": 132, "wavelen": 132, "z_r": 132, "wavelength": [132, 137], "waist": 132, "rayleigh": [132, 217], "refract": [132, 134, 136, 137], "530e": 132, "88679245283019": 132, "92753330865999": 132, "w_0": [132, 210], "00100000000000000": 132, "freespac": 132, "fs": 132, "00101413072159615": 132, "00210803120913829": 132, "r660": 132, "complex_beam_paramet": 132, "r661": 132, "gaussian_beam": 132, "spread": [132, 197, 217, 232], "00053": 132, "goui": 132, "curvatur": [132, 136], "55998576005696": 132, "2809": 132, "peak": 132, "waist_approximation_limit": 132, "paraxi": [132, 136], "06e": 132, "curvedmirror": 132, "curvedrefract": 132, "flatmirror": 132, "flatrefract": 132, "2x1": 132, "thinlen": 132, "r662": 132, "ray_transfer_matrix_analysi": 132, "waist_in": 132, "waist_out": 132, "s_in": 132, "s_out": 132, "w_o": 132, "gaussian_conj": 132, "z_r_in": 132, "incid": [132, 136], "z_r_out": 132, "emerg": [132, 185], "geometric_conj_ab": 132, "geometric_conj_af": 132, "geometric_conj_bf": 132, "rayleigh2waist": 132, "waist2rayleigh": 132, "optic": [134, 135, 136, 137, 258], "permitt": 134, "permeabl": 134, "fermat": 134, "electr": [134, 136, 178, 248, 250], "electromagnet": [134, 178, 223, 250], "intrinsic_imped": 134, "149896229": [134, 137], "kilogram": [134, 166, 168, 170], "1250000": 134, "amper": 134, "refractive_index": 134, "299792458": [134, 137, 170], "r663": 134, "optical_medium": 134, "travel": [134, 137, 178, 248, 250], "stoke": [135, 249], "mueller": 135, "jones_vector": 135, "stokes_vector": 135, "half_wave_retard": 135, "polarizing_beam_splitt": 135, "jones_2_stok": 135, "\u2148": [135, 182, 196, 197, 216, 274], "\u03c7": 135, "\u03c8": 135, "i\u2080": 135, "plate": 135, "hwp": 135, "splitter": 135, "transmit": [135, 136], "pb": 135, "transmitted_port": 135, "reflected_port": 135, "transmitted_pow": 135, "reflected_pow": 135, "r664": 135, "jones_calculu": 135, "r665": 135, "mueller_calculu": 135, "r666": 135, "stokes_paramet": 135, "retard": 135, "poincar\u00e9": 135, "sphere": [135, 242, 251], "tilt": 135, "mayor": 135, "linear_polar": 135, "transmiss": [135, 136], "mueller_matrix": 135, "quarter_wave_retard": 135, "quarter": 135, "phase_retard": 135, "\u03b4": 135, "rs": [135, 194, 230], "ts": [135, 217], "phia": 135, "phib": 135, "4x1": [135, 217], "phi_a": 135, "phi_b": 135, "qwp": 135, "reflective_filt": 135, "unpolar": 135, "transmissive_filt": 135, "attenu": 135, "transmitt": 135, "ndf": 135, "refraction_angl": 136, "fresnel_coeffici": 136, "brewster_angl": 136, "critical_angl": 136, "lens_makers_formula": 136, "mirror_formula": 136, "lens_formula": 136, "hyperfocal_dist": 136, "transverse_magnif": 136, "medium1": 136, "medium2": 136, "brewster": 136, "926093295503462": 136, "onset": 136, "850908514477849": 136, "02005": 136, "angle_of_incid": 136, "polaris": 136, "te": 136, "undergo": 136, "317843553417859": 136, "348645229818821": 136, "658921776708929": 136, "651354770181179": 136, "235625382192159": 136, "971843958291041": 136, "816477005968898": 136, "577377951366403": 136, "r667": 136, "fresnel_equ": 136, "coc": 136, "0033": 136, "focal_length": 136, "n_len": 136, "n_surr": 136, "thick": 136, "1515151515151": 136, "0000000000000": 136, "3418463277618": 136, "41152": 136, "magnif": 136, "twave": 137, "time_period": 137, "wavenumb": 137, "phi1": 137, "phi2": 137, "w1": [137, 209], "w3": [137, 197], "superposit": [137, 148, 159, 184], "angular_veloc": 137, "tempor": 137, "r668": 138, "paulialgebra": 138, "evaluate_pauli_product": 138, "paulimatric": 138, "sigma3": 138, "nodal": [139, 164, 184], "hw": [139, 164], "coherent_st": 139, "coher": [139, 165, 171], "1d": [139, 141, 154, 173, 222], "wavefunct": [139, 152, 161, 164, 258], "r669": 140, "__cmp__": [140, 144, 163], "dagger": [140, 144, 150, 152, 155, 157, 162, 163], "operatorset": [141, 153], "positionbra3d": 141, "eigenbra": [141, 154, 160], "positionket3d": 141, "eigenket": [141, 154, 160], "positionstate3d": 141, "eigenst": [141, 153, 158, 160, 161], "position_x": 141, "position_i": 141, "position_z": 141, "pxbra": [141, 153], "pxket": [141, 153, 158], "pxop": [141, 153, 158], "xbra": [141, 153, 158], "xket": [141, 153, 158], "xop": [141, 153, 158], "yop": 141, "zop": 141, "uncoupl": [142, 160], "r670": 142, "j_3": [142, 160, 182], "r671": 142, "wigner3j": [142, 182], "wigner": [142, 160, 217, 258], "varshalovich": [142, 160], "zyla": 142, "theor": 142, "phy": [142, 168, 182], "083c01": 142, "r672": 142, "w3j": 142, "715": [142, 182, 197], "wigner6j": [142, 182], "j12": [142, 160], "j23": 142, "6j": [142, 182], "wigner9j": [142, 182], "j4": 142, "j34": 142, "j13": 142, "j24": 142, "9j": [142, 182], "cg_simp": 142, "r673": 142, "clebsh": 142, "rethink": 143, "figsiz": 143, "circuitplot": 143, "nqubit": [143, 147, 148, 157], "control_lin": 143, "gate_idx": [143, 147], "min_wir": 143, "max_wir": 143, "control_point": 143, "wire_idx": 143, "not_point": 143, "one_qubit_box": 143, "box": [143, 148, 150, 159, 161, 251], "qubit": [143, 147, 148, 149, 150, 156], "swap_point": 143, "two_qubit_box": 143, "createcg": 143, "latexnam": 143, "mock": 143, "mz": 143, "circuit_plot": 143, "min_qubit": [143, 147], "autogener": 143, "wire": 143, "q_0": [143, 210], "j_0": 143, "r674": 144, "comm": [144, 163, 223], "plank": 145, "r675": 145, "05457162000000e": 145, "planck_const": 145, "hermetian": 146, "r676": 146, "r677": 146, "ket": [146, 151, 152, 153, 155, 157, 158, 161, 163], "bra": [146, 151, 152, 153, 155, 157, 158, 161, 163], "innerproduct": [146, 151, 152, 158, 160, 163], "outerproduct": [146, 152], "seamlessli": 146, "hermitian_adjoint": 146, "hermitian_transpos": 146, "_apply_operators_qubit": 147, "gate_sort": 147, "gate_simp": 147, "ugat": 147, "cgate": 147, "control_valu": 147, "cnot": 147, "eval_control": 147, "plot_gat": 147, "circ_plot": 147, "simplify_cg": 147, "cphase": 147, "cnotgat": 147, "qappli": [147, 148, 150, 152, 157], "get_target_matrix": 147, "represen": 147, "hadamardg": 147, "identityg": 147, "onequbitg": 147, "phaseg": 147, "swapgat": 147, "target1": 147, "target2": 147, "tgate": 147, "twoqubitg": 147, "xgate": 147, "ygate": 147, "zgate": 147, "bubbl": 147, "random_circuit": 147, "ngate": 147, "gate_spac": 147, "mermin": 148, "_represent_zg": 148, "oracleg": 148, "oracl": 148, "intqubit": [148, 157], "search_funct": 148, "wgate": 148, "apply_grov": 148, "grover_iter": 148, "qstate": 148, "wv": 148, "superposition_basi": 148, "numqubit": 148, "basis_st": 148, "matt": 149, "complexspac": 149, "directsumhilbertspac": 149, "r678": 149, "hilbertspac": 149, "fockspac": 149, "hs": 149, "hilbert_spac": [149, 152, 161], "direct_sum": 149, "quantiz": [149, 258], "r679": 149, "mess": [149, 213, 216, 273], "fock_spac": 149, "r680": 149, "tensorpowerhilbertspac": 149, "r681": 149, "tensor_product": 149, "tensorproducthilbertspac": 149, "r682": 149, "clebsch": [150, 160, 182], "gordan": [150, 160, 182], "hilbert": [150, 152, 158], "grover": 150, "qft": [150, 159], "shor": 150, "brabas": [151, 152, 158, 161], "ketbas": [151, 152, 158, 161], "r683": 151, "inner_product": 151, "apply_oper": [152, 163], "identityoper": 152, "r684": 152, "r685": 152, "polymoni": 152, "operator_": 152, "28physic": 152, "old_assumpt": 152, "r686": 152, "outer_product": 152, "unitaryoper": 152, "operators_to_st": 153, "state_to_oper": 153, "_operators_to_st": 153, "state_map": 153, "_state_to_oper": 153, "statebas": [153, 158, 161], "piab": 154, "piabbra": 154, "piabhamiltonian": 154, "piabket": 154, "ip_doit": 155, "smarter": [156, 206], "rk": 156, "iqft": 156, "rkgate": 156, "qtf": 156, "povm": 157, "as_int": [157, 238], "qubit_valu": 157, "intqubitbra": 157, "00001": 157, "qubitbra": 157, "matrix_to_dens": 157, "matrix_to_qubit": 157, "measure_al": 157, "ensembl": 157, "measure_all_oneshot": 157, "oneshot": 157, "measure_parti": 157, "measure_partial_oneshot": 157, "qubit_to_matrix": 157, "enumerate_st": 158, "_enumerate_st": 158, "foo_1": 158, "foo_2": 158, "foo_3": 158, "test2": 158, "bar_4": 158, "bar_5": 158, "bar_10": 158, "get_basi": 158, "replace_non": 158, "operator_to_st": 158, "qexpr": 158, "integrate_result": 158, "orig_expr": 158, "x_ket": 158, "x_op": 158, "rep_expect": 158, "px_2": 158, "px_1": 158, "rep_innerproduct": 158, "_repres": 158, "_represent_foobasi": 158, "foobasi": 158, "_represent_szop": 158, "szupket": 158, "szop": 158, "sz": 158, "cmod": 159, "reformat": 159, "period_find": 159, "momemtum": 160, "j2op": 160, "jxbra": 160, "jx": 160, "jzket": 160, "jxbracoupl": 160, "jcoupl": 160, "jzketcoupl": 160, "jxket": 160, "jxketcoupl": 160, "jybra": 160, "jy": 160, "jybracoupl": 160, "jyket": 160, "jyketcoupl": 160, "jzbra": 160, "jz": 160, "jzbracoupl": 160, "j_4": [160, 182], "argular": 160, "jzop": 160, "passiv": 160, "r687": 160, "wignerd": 160, "mp": [160, 215, 231], "jm": 160, "jj": 160, "r688": 160, "jcoupling_list": 160, "coupledspinst": 160, "spinstat": 160, "r689": 161, "dual_class": 161, "mn": [161, 197, 217], "ket_not": 161, "r690": 161, "k0": [161, 188, 190, 217], "orthogonalbra": 161, "orthogonalket": 161, "orthogonalst": 161, "_eval_adjoint": 161, "timedepbra": 161, "timedepst": 161, "timedepket": 161, "prob": [161, 217], "412214747707527": 161, "matrix_tensor_product": 162, "axb": 162, "xdagger": 162, "axc": 162, "bxc": 162, "tensor_product_simp": 162, "cxd": 162, "boson": 163, "fetter": 163, "welecka": 163, "secondqu": 163, "annihilateboson": 163, "fockstateket": 163, "bket": 163, "fockstatebosonket": 163, "annihilatefermion": 163, "createboson": 163, "is_only_q_annihil": 163, "destroi": [163, 206], "quasi": 163, "hole": 163, "is_only_q_cr": 163, "is_q_annihil": 163, "is_q_creat": 163, "antisymmetrictensor": 163, "bbra": 163, "fockstatebosonbra": 163, "bd": 163, "bosonicbasi": 163, "fock": 163, "NO": 163, "createfermion": 163, "wick": 163, "fbra": 163, "fockstatefermionbra": 163, "fket": 163, "fockstatefermionket": 163, "fixedbosonicbasi": 163, "n_particl": 163, "n_level": 163, "fockstat": 163, "occup": 163, "bosonbra": 163, "fockstatebra": 163, "fermi_level": 163, "r691": 163, "textwrap": [163, 238], "_q": 163, "get_subno": 163, "fermionicoper": 163, "has_q_annihil": 163, "q_annihil": 163, "has_q_creat": 163, "leftmost": 163, "q_creator": 163, "iter_q_annihil": 163, "iter_q_cr": 163, "0x": 163, "permutationoper": 163, "get_permut": 163, "varbosonicbasi": 163, "n_max": 163, "creator": 163, "evaluate_delta": 163, "einstein": [163, 223], "d_ij": 163, "_j": [163, 168, 182, 199], "d_ip": 163, "d_qp": 163, "matrix_rep": 163, "simplify_index_permut": 163, "permutation_oper": 163, "schemat": [163, 168], "abij": 163, "abji": 163, "baij": 163, "baji": 163, "permutlist": 163, "substitute_dummi": 163, "new_indic": 163, "pretty_indic": 163, "_get_ordered_dummi": 163, "_c": 163, "_d": 163, "index_group": 163, "string_of_lett": 163, "my_dummi": 163, "_v": [163, 181], "_p_0": 163, "_p_1": 163, "keep_only_fully_contract": 163, "sho": 164, "isotrop": 164, "mk": [165, 168], "legal": 165, "temperatur": [165, 178, 250], "dimensions": 165, "dimsys_si": [165, 166], "get_dimensional_depend": [165, 166], "has_integer_pow": 165, "dim_si": 165, "base_dim": 165, "derived_dim": 165, "dimensional_depend": 165, "can_transf_matrix": 165, "useless": [165, 188, 190], "inv_can_transf_matrix": 165, "dim_can_vector": 165, "dim_vector": 165, "is_consist": [165, 171], "is_dimensionless": 165, "list_can_dim": 165, "print_dim_bas": 165, "gravitational_const": [166, 170], "equivalent_dim": 166, "grav_eq": 166, "kepler": [166, 242], "venu": 166, "701": 166, "dai": [166, 170, 213], "venus_a": 166, "108208000e3": 166, "solar": 166, "solar_mass": 166, "9891e30": 166, "convert_to": [166, 170, 186, 192], "5112118495813": 166, "659097795948": 166, "astrophys": 166, "ill": 166, "astrophysicist": 167, "ua": [167, 185], "earth": [167, 178, 250], "sun": 167, "theoricist": 167, "philosophi": [167, 213, 216, 258], "mole": 168, "dimensionless": 168, "unavoid": 168, "d_3": 168, "d_2": [168, 193, 217], "underbrac": [168, 180], "countabl": [168, 216], "pmatrix": 168, "kg": [168, 251], "glu": 168, "men": 168, "heat": 168, "joul": 168, "calori": 168, "stori": 168, "chemistri": 168, "page52": 168, "1952": 168, "page78": 168, "deboer79": 168, "boer": 168, "818": 168, "levyleblond77": 168, "l\u00e9vy": 168, "leblond": 168, "conceptu": [168, 184, 250], "rivista": 168, "del": [168, 232, 249, 273], "nuovo": [168, 182], "cimento": [168, 182], "1977": 168, "187": [168, 191], "214": 168, "anticip": 168, "bin_prefix": 169, "abbrev": [169, 170, 197], "latex_repr": [169, 170], "encapsul": [169, 190, 216, 230], "kilo": 169, "scale_factor": 170, "pretty_unicode_repr": 170, "pretty_ascii_repr": 170, "mathml_presentation_repr": 170, "is_prefix": 170, "abbrevi": [170, 185, 197, 216, 218], "speed_of_light": 170, "reference_quant": 170, "target_unit": 170, "mile": 170, "atomic_mass_const": 170, "centimet": 170, "25146": 170, "609344": 170, "86400": 170, "660539060e": 170, "300000": 170, "planck": 170, "62963087839509e": 170, "base_unit": 171, "descr": 171, "dimension_system": 171, "derived_unit": 171, "overridden": [171, 184, 199, 273], "get_units_non_prefix": 171, "to_matrix": [172, 173, 181, 186, 192, 242, 244, 246], "rigidli": 172, "entireti": 172, "hidden": 172, "_str": 172, "otherfram": [173, 242], "n_alpha_b": 173, "ny": 173, "_3": 173, "rot_typ": [173, 176, 178], "rot_ord": [173, 176, 243], "orient_body_fix": 173, "orient_space_fix": 173, "orient_quaternion": 173, "tait": [173, 242, 243], "bryan": [173, 242, 243], "quaternion": [173, 176, 181, 242, 243, 253], "userwarn": [173, 226, 233, 269], "rotation_ord": [173, 242, 243], "xzx": 173, "zxz": [173, 181, 242, 243], "xyx": [173, 242, 243], "yzy": 173, "zyz": 173, "yxy": [173, 181], "yzx": [173, 181], "zxy": 173, "xzy": 173, "zyx": 173, "yxz": 173, "orient_explicit": 173, "lambda_x": [173, 242, 243], "lambda_i": [173, 242, 243], "lambda_z": [173, 242, 243], "q0": [173, 213, 242, 243], "newnam": 173, "gen_spe": [173, 176], "variable_map": 173, "a_x": [173, 181, 197], "b_x": [173, 175, 181, 223], "b_y": [173, 175, 181, 223], "a_z": [173, 181], "b_z": [173, 181, 223], "inlist": 173, "var_in_dcm": 173, "reexpress": [173, 246], "time_deriv": [173, 178, 179], "free_dynamicsymbol": 173, "codirect": 173, "dyadic_tensor": [173, 242], "frame1": 173, "frame2": [173, 175], "second_reference_fram": 173, "ixz": 173, "inertia_dyad": 173, "pertain": [174, 179], "fieldfunct": [174, 178], "vect": [174, 242, 244], "r_x": [174, 178], "r_y": [174, 178], "r_z": [174, 178], "scalar_field": [174, 178, 242, 244, 248], "grad_field": [174, 244], "point1": [174, 244], "point2": [174, 244], "sympyfi": [174, 175, 176, 244], "position2": [174, 244], "vectfield": [174, 178, 244, 248], "solenoid": [174, 244, 249], "q6": 175, "vec1": 175, "vec2": 175, "coordinatesym": [175, 179], "n_x": 175, "rotating_reference_fram": 175, "time_derivatives_in_the_two_fram": 175, "otherpoint": 176, "outfram": 176, "interfram": 176, "fixedfram": 176, "get_motion_param": 176, "vectori": [176, 178, 245, 250], "timevalue1": 176, "timevalue2": 176, "313": 176, "vel_vec": 176, "q1dd": 177, "q2dd": 177, "charg": [178, 250], "displac": [178, 180, 250], "depict": [178, 216, 250], "temper": 178, "electric_potenti": [178, 248], "r1_x": 178, "r1_y": 178, "infinitesim": [178, 248], "nabla": [178, 242, 247, 248], "f_y": [178, 248], "f_x": [178, 216, 248], "sink": [178, 248], "irrot": [178, 248], "is_conserv": [178, 248, 249], "is_solenoid": [178, 248, 249], "scalar_potenti": [178, 248, 249], "conservative_field": [178, 248], "scalar_potential_differ": [178, 248, 249], "aug": [179, 216], "dyadic_product": [179, 249], "inc": [179, 191], "kinematic_equ": 179, "w_x": 180, "w_y": 180, "w_z": 180, "w_1": [180, 192], "w_2": [180, 192], "w_3": 180, "textrm": [180, 181, 205], "u_x": 180, "sp": 180, "oq": 180, "qp": 180, "rod": 180, "went": 180, "parallelogram": 181, "c_x": 181, "c_y": 181, "c_z": 181, "train": 181, "friend": 181, "xz": [181, 183], "zy": 181, "undergon": [181, 216], "vastli": 181, "wait": 181, "mold": 181, "bp": [181, 213], "bpp": 181, "zzx": 181, "multifram": 181, "direction": 181, "racah": 182, "gaunt": 182, "rasch03": 182, "regge58": 182, "regg": 182, "544": 182, "regge59": 182, "116": [182, 191], "1959": 182, "edmonds74": 182, "edmond": 182, "princeton": [182, 217], "1957": 182, "rasch": 182, "siam": [182, 235], "sci": 182, "1416": 182, "1428": 182, "liberatodebrito82": 182, "liberato": 182, "brito": 182, "forum": [182, 216], "m4nzdu": 182, "7o38": 182, "jen": 182, "03": [182, 217], "oscar": 182, "gerardo": 182, "lazo": 182, "arjona": 182, "jyr2000": 182, "gmail": 182, "clebsch_gordan": 182, "2j_3": 182, "dot_rot_grad_ynm": 182, "gradient": [182, 183, 242, 249, 250], "_l": 182, "l_2": 182, "l_3": 182, "drastic": 182, "2l_1": 182, "2l_2": 182, "2l_3": 182, "1200": 182, "00689500421922113448": 182, "inflect": 182, "unsuit": 182, "dd": [182, 202], "ee": [182, 192], "j_5": 182, "j_6": 182, "richer": 182, "wigner_3j": 182, "wigner_6j": 182, "wigner_9j": 182, "j_7": 182, "j_8": 182, "j_9": 182, "05555555": 182, "1666666": 182, "wigner_d": 182, "j_z": 182, "j_y": 182, "\u03b3": [182, 263, 273], "wigner_d_smal": 182, "textbackend": 183, "plot_parametr": 183, "plot_implicit": 183, "plot3d_parametric_lin": 183, "plot3d_parametric_surfac": 183, "xlabel": 183, "ylabel": 183, "zlabel": 183, "aspect_ratio": 183, "ylim": 183, "axis_cent": 183, "xscale": 183, "yscale": 183, "autoscal": 183, "textplot": 183, "_seri": [183, 194], "baseseri": 183, "nonparametr": 183, "cylindr": [183, 248], "basebackend": 183, "parametric2dlineseri": 183, "parametric3dlineseri": 183, "cyan": 183, "grayscal": 183, "integers_onli": 183, "surfaceover2drangeseri": 183, "parametricsurfaceseri": 183, "surface_color": 183, "range1": 183, "range2": 183, "fill_between": 183, "inch": 183, "expr_x": 183, "expr_i": 183, "canva": 183, "range_x": 183, "range_i": 183, "nb_of_points_x": 183, "nb_of_points_i": 183, "expr_z": 183, "range_u": 183, "range_v": 183, "nb_of_points_u": 183, "nb_of_points_v": 183, "x_var": 183, "y_var": 183, "mesh": 183, "p8": 183, "p9": 183, "nrow": [183, 186], "ncolumn": 183, "stuff": [183, 228, 230, 238], "is_2dlin": 183, "oblig": 183, "only_integ": 183, "get_seg": 183, "get_color_arrai": 183, "var_start_end": 183, "r692": 183, "luiz": 183, "henriqu": 183, "figueiredo": 183, "r693": 183, "line3dbaseseri": 183, "surfacebaseseri": 183, "var_start_end_x": 183, "var_start_end_i": 183, "var_start_end_u": 183, "var_start_end_v": 183, "implicitseri": 183, "has_equ": 183, "use_interval_math": 183, "centric": 183, "get_mesh": 183, "process_seri": 183, "_process_seri": 183, "keyboard": 183, "mous": 183, "pyglet_plot": 183, "screenshot": 183, "camera": 183, "zoom": 183, "numpad": 183, "ordin": [183, 213, 238], "f5": 183, "f6": 183, "f8": 183, "drag": 183, "button": [183, 229], "curvilinear": [183, 245, 246, 249], "__setitem__": 183, "zfade4": 183, "key1": 183, "value1": 183, "key2": 183, "value2": 183, "unbound_theta": 183, "wirefram": 183, "saddl": 183, "fz": 183, "_______________________________________________________": 183, "mediterranean": 184, "cultur": 184, "arab": 184, "lighten": 184, "tapestri": 184, "woven": 184, "european": 184, "soil": 184, "plausibl": 184, "teeter": 184, "totter": 184, "outweigh": 184, "excit": 184, "amus": 184, "kempf": 184, "1944": 184, "20th": 184, "dedekind": 184, "intim": 184, "disciplin": 184, "toolset": 184, "atiyah69": [184, 191], "gear": 184, "greuel2008": [184, 191], "interspers": 184, "lr": 184, "ilex": 184, "\u211a": [184, 197], "localis": 184, "abridg": 184, "free_modul": [184, 188], "quotient_r": [184, 188], "overload": [184, 187, 188, 245, 268], "polynomialr": [184, 188, 189, 195], "domain_or_r": [184, 188], "quotientr": [184, 188], "base_id": [184, 188], "elbow": 184, "room": 184, "componentwis": [184, 197], "inclin": 184, "biproduct": 184, "quotient_modul": 184, "is_submodul": 184, "multiply_id": 184, "identity_hom": 184, "freemodul": 184, "freemoduleel": 184, "conicis": 184, "_contain": 184, "_syzygi": 184, "_in_terms_of_gener": 184, "_intersect": 184, "_module_quoti": 184, "reduce_el": [184, 192], "represantit": 184, "in_terms_of_gener": 184, "inclusion_hom": 184, "rela": 184, "relb": 184, "is_full_modul": 184, "module_quoti": 184, "opt": [184, 190, 209, 269], "coincis": 184, "syzygy_modul": 184, "r_n": 184, "_contains_elem": 184, "_contains_id": 184, "_quotient": 184, "_union": 184, "_product": 184, "is_whole_r": 184, "is_maxim": 184, "is_primari": 184, "is_rad": 184, "is_princip": 184, "xj": 184, "satur": 184, "subquoti": 184, "quotientmodul": 184, "subquotientmodul": 184, "killed_modul": 184, "quotientmoduleel": 184, "kill": [184, 188, 228], "quotient_hom": 184, "ker": 184, "surject": 184, "cokernel": 184, "coker": 184, "meaningfulli": 184, "restrict_domain": 184, "homomoprh": 184, "modulehomomorph": [184, 192], "_ker": 184, "_img": 184, "_kernel": 184, "_imag": 184, "_restrict_domain": 184, "_restrict_codomain": 184, "_quotient_domain": 184, "_quotient_codomain": 184, "_appli": 184, "_mul_scalar": 184, "_compos": 184, "_add": [184, 203], "is_inject": 184, "quotient_domain": 184, "is_isomorph": 184, "preimag": 184, "restrict_codomain": 184, "is_surject": 184, "quotient_codomain": 184, "induct": 184, "monogen": 184, "monogenicfiniteextens": [184, 188], "finiteextens": 184, "sqrt2": [184, 187], "_5": 184, "extensionel": [184, 188], "notinvert": [184, 190, 193], "nu_1": 185, "nu_2": 185, "nu_n": 185, "nu_i": 185, "customarili": 185, "irreduc": [185, 188, 190, 192, 193, 196, 217, 223, 273], "endow": 185, "resp": [185, 188, 213], "divmod": [185, 187, 188], "cb": [185, 235], "sqf_list": [185, 188, 193], "sqf": [185, 188, 193, 210], "buchberg": [185, 190, 191, 193], "groebnerbasi": [185, 193, 196], "solve_poly_system": [185, 193, 215, 216], "fmt": [186, 188, 192], "matrix1": 186, "driectli": 186, "dmnonsquarematrixerror": 186, "zz_i": [186, 187, 189], "from_dict_sympi": 186, "ncol": 186, "elemsdict": 186, "from_list_sympi": 186, "from_list": [186, 188, 193, 194], "construct_domain": [186, 187, 188, 193], "from_rep": 186, "drep": 186, "dm": [186, 192], "ownership": 186, "scc": 186, "substract": 186, "to_dens": 186, "to_field": [186, 188, 193], "to_spars": 186, "aq": 186, "ccc": [186, 216], "from_ddm": 186, "domainerror": [186, 190, 193], "to_ddm": 186, "r694": 186, "pythonmpq": [187, 188], "srepr": [187, 260, 268], "leaf": [187, 197, 206, 268], "strength": 187, "richardon": 187, "dup_factor_list": 187, "factortool": [187, 190], "dup_": [187, 190], "dmp_": [187, 190], "prod": [187, 194, 206], "z1": [187, 188, 215], "is_field": [187, 188], "quo": [187, 188, 190, 193], "rem": [187, 188, 190, 193], "exquo": [187, 188, 193], "exactquotientfail": [187, 188, 190, 193], "mpz": [187, 188], "of_typ": [187, 188], "z1_sympi": 187, "to_sympi": [187, 188], "from_sympi": [187, 188], "forth": [187, 192], "z_sympi": 187, "z_zz": 187, "coercionfail": [187, 190], "sum_domain": 187, "expressions_sympi": 187, "expressions_dom": 187, "result_dom": 187, "e_dom": 187, "result_sympi": 187, "qq_i": [187, 189], "gaussianinteg": [187, 188], "gaussianrationalfield": [187, 188], "gaussianr": [187, 188], "galoi": [187, 190, 192], "finitefield": [187, 188], "pythonfinitefield": [187, 188], "gmpyfinitefield": [187, 188], "welcom": [187, 213, 266], "realel": [187, 188], "complexel": [187, 188], "mpc": 187, "xr": [187, 195], "zc": 187, "1j": 187, "_mpc_": 187, "realfield": [187, 188], "rr100": 187, "33333333333333333333333333333": 187, "hack": [187, 213, 226], "algebraic_field": [187, 188, 190, 192], "algebraicfield": [187, 188, 190, 192], "sqrt3": 187, "x_dom": 187, "p_expr": [187, 188], "polyel": [187, 188, 190, 194, 195, 197], "p_dom": 187, "unexpand": [187, 196, 206, 229], "xk": [187, 188, 199], "yk": [187, 188], "poly_r": [187, 188], "old_polynomialr": 187, "globalpolynomialr": 187, "polyclass": [187, 188, 193], "yr": [187, 195], "broader": 187, "get_field": [187, 188], "frac_field": [187, 188], "rationalfield": [187, 188], "old_frac_field": [187, 188], "fractionfield": [187, 188], "old_fractionfield": 187, "xf": 187, "yf": 187, "fracfield": [187, 188], "expressiondomain": [187, 188], "elements_sympi": 187, "elements_k": 187, "convert_from": [187, 188], "num_zz": 187, "num_qq": 187, "domainel": [187, 188, 195], "encompass": 187, "all_coeff": [187, 188, 193], "dom": [187, 188, 190, 205], "strang": 187, "hybrid": 187, "unreli": 187, "usefulli": 188, "pythonr": [188, 195], "p_domain": 188, "ez": [188, 223], "get_r": 188, "has_assoc_field": 188, "has_assoc_r": 188, "alg_field_from_poli": [188, 192], "root_index": 188, "almosteq": 188, "cyclotomic_field": [188, 192], "zeta7": 188, "zeta_": 188, "lexord": [188, 193], "from_algebraicfield": 188, "from_complexfield": 188, "from_expressiondomain": 188, "from_expressionrawdomain": 188, "from_ff": 188, "modularinteg": 188, "from_ff_gmpi": 188, "from_ff_python": 188, "from_fractionfield": 188, "from_globalpolynomialr": 188, "from_monogenicfiniteextens": 188, "from_polynomialr": 188, "from_qq_gmpi": 188, "from_qq_python": 188, "from_realfield": 188, "from_zz_gmpi": 188, "from_zz_python": 188, "gcdex": [188, 193], "get_exact": 188, "half_gcdex": [188, 193], "is_pid": 188, "is_r": 188, "is_nonposit": 188, "is_on": [188, 193], "rersiv": 188, "__neg__": 188, "__pos__": 188, "__sub__": 188, "q_domain": 188, "q_expr": 188, "x_domain": 188, "alg": [188, 192, 196], "trait": 188, "is_unit": 188, "__divmod__": 188, "__floordiv__": 188, "__mod__": [188, 192], "simpledomain": 188, "compositedomain": 188, "from_qq": 188, "from_zz": 188, "gmpyinteg": 188, "pythoninteg": 188, "gmpyrationalfield": 188, "pythonrationalfield": 188, "from_gaussianrationalfield": 188, "gaussianel": 188, "gaussiandomain": 188, "qq_python": 188, "zz_python": 188, "z2": 188, "z3": 188, "z4": 188, "from_gaussianinteg": 188, "as_algebraicfield": 188, "orig_ext": 188, "algebraicnumb": [188, 192, 196], "integral_basi": [188, 192], "maximal_ord": [188, 192], "zeta5": 188, "primes_abov": [188, 192], "primeid": [188, 192], "to_alg_num": [188, 192], "legibl": 188, "to_rat": 188, "mpelement": 188, "complexfield": 188, "lc": [188, 190, 193], "domain_or_field": 188, "dmf": 188, "coercibl": 188, "monomialord": [188, 193], "xring": 188, "vring": 188, "sring": [188, 194, 195], "polyr": [188, 189, 190, 195], "factor_list": [188, 193, 273], "add_gen": 188, "drop_to_ground": 188, "monomial_basi": 188, "206": [188, 193], "744": 188, "945": [188, 194], "is_monomi": [188, 193], "const": 188, "coeffcient": [188, 190], "inplac": 188, "shallow": [188, 204], "zero_monom": 188, "fv": 188, "clo": 188, "p64": 188, "qv": 188, "f0": 188, "imul_num": 188, "itercoeff": 188, "itermonom": 188, "iterterm": 188, "leading_expv": 188, "leading_monom": 188, "leading_term": 188, "listcoeff": 188, "listmonom": 188, "listterm": 188, "monom": [188, 193], "strip_zero": 188, "tail_degre": 188, "xfield": 188, "vfield": [188, 247], "sfield": [188, 247], "fracel": [188, 197], "lev": 188, "add_ground": [188, 193], "all_monom": [188, 193], "all_term": [188, 193], "cauchy_lower_bound": 188, "cauchy_upper_bound": 188, "clear_denom": [188, 193], "count_complex_root": 188, "sup": [188, 193, 197, 204, 205], "count_real_root": 188, "deflat": [188, 193], "y_i": [188, 190, 192, 193, 213], "x_j": [188, 190, 193], "degree_list": [188, 193], "eject": [188, 193], "exquo_ground": [188, 193], "factor_list_includ": [188, 193], "from_dict": [188, 193], "from_sympy_list": 188, "gff_list": [188, 193], "homogeneous_ord": [188, 193, 210], "is_cyclotom": [188, 193], "is_ground": [188, 193], "is_homogen": [188, 193], "is_irreduc": [188, 193], "is_linear": [188, 193], "is_mon": [188, 193], "is_quadrat": [188, 193], "is_sqf": [188, 193], "l1_norm": [188, 193], "l2_norm_squar": 188, "max_norm": [188, 193], "mignotte_sep_bound_squar": 188, "mignott": [188, 190], "mul_ground": [188, 193], "pdiv": [188, 193], "pexquo": [188, 193], "pquo": [188, 193], "prem": [188, 193], "quo_ground": [188, 193], "refine_root": [188, 192, 193], "includepr": [188, 190, 193], "sqf_list_includ": [188, 193], "sqf_norm": [188, 193], "sqf_part": [188, 193], "sqr": [188, 193], "sturm": [188, 193], "sub_ground": [188, 193], "to_dict": 188, "to_exact": [188, 193], "to_r": [188, 193], "to_sympy_dict": 188, "to_sympy_list": 188, "to_tupl": 188, "total_degre": [188, 193, 210], "trunc": [188, 193, 196], "frac_unifi": 188, "half_per": 188, "poly_unifi": 188, "gr\u00f6bner": 189, "groebner": [189, 191, 192, 193, 196, 209, 215, 216], "wester": 189, "dispers": [189, 191, 217], "agca": 189, "syzygi": 189, "undocu": 189, "rs_seri": 189, "eqs_to_matrix": 189, "sympy_eqs_to_r": 189, "_solve_lin_si": 189, "_solve_lin_sys_compon": 189, "ddm": 189, "sdm": [189, 190], "adic": [189, 191], "valuat": [189, 213], "subfield": 189, "l0": 190, "focus": 190, "legitim": 190, "uninterest": 190, "bulk": [190, 207], "x_u": 190, "dup__": 190, "densebas": 190, "dmp_lc": 190, "poly_lc": 190, "dmp_tc": 190, "poly_tc": 190, "dmp_ground_lc": 190, "dmp_ground_tc": 190, "dmp_true_lt": 190, "n_1": [190, 215, 217], "n_k": 190, "dmp_degre": 190, "dmp_degree_in": 190, "dmp_degree_list": 190, "dmp_strip": 190, "dmp_valid": 190, "dup_revers": 190, "dmp_copi": 190, "dmp_to_tupl": 190, "dmp_normal": 190, "dmp_convert": 190, "to_domain": 190, "dmp_from_sympi": 190, "dmp_nth": 190, "dmp_ground_nth": 190, "dmp_zero_p": 190, "dmp_zero": 190, "dmp_one_p": 190, "dmp_one": 190, "dmp_ground_p": 190, "dmp_ground": 190, "dmp_negative_p": 190, "dmp_positive_p": 190, "dmp_from_dict": 190, "dmp_to_dict": 190, "dmp_swap": 190, "dmp_permut": 190, "dmp_nest": 190, "dmp_rais": 190, "dmp_deflat": 190, "dmp_multi_defl": 190, "dmp_inflat": 190, "dmp_exclud": 190, "dmp_includ": 190, "dmp_inject": 190, "dmp_eject": 190, "dmp_terms_gcd": 190, "dmp_list_term": 190, "dmp_apply_pair": 190, "dmp_slice": 190, "dup_random": 190, "densearith": 190, "dmp_add_term": 190, "dmp_sub_term": 190, "dmp_mul_term": 190, "dmp_add_ground": 190, "dmp_sub_ground": 190, "dmp_mul_ground": 190, "dmp_quo_ground": 190, "dmp_exquo_ground": 190, "dup_lshift": 190, "dup_rshift": 190, "dmp_ab": 190, "dmp_neg": 190, "dmp_add": 190, "dmp_sub": 190, "dmp_add_mul": 190, "dmp_sub_mul": 190, "dmp_mul": 190, "dmp_sqr": 190, "dmp_pow": 190, "dmp_pdiv": 190, "dmp_prem": 190, "dmp_pquo": 190, "dmp_pexquo": 190, "dmp_rr_div": 190, "dmp_ff_div": 190, "dmp_div": 190, "dmp_rem": 190, "dmp_quo": 190, "dmp_exquo": 190, "dmp_max_norm": 190, "dmp_l1_norm": 190, "dmp_expand": 190, "densetool": 190, "dmp_integr": 190, "dmp_integrate_in": 190, "dmp_diff": 190, "dmp_diff_in": 190, "dmp_eval": 190, "dmp_eval_in": 190, "dmp_eval_tail": 190, "dmp_diff_eval_in": 190, "dmp_trunc": 190, "dmp_ground_trunc": 190, "dup_mon": 190, "dmp_ground_mon": 190, "dup_cont": 190, "dmp_ground_cont": 190, "dup_primit": 190, "dmp_ground_primit": 190, "dup_extract": 190, "dmp_ground_extract": 190, "dup_real_imag": 190, "bivari": [190, 196, 217], "dup_mirror": 190, "dup_scal": 190, "dup_shift": 190, "dup_transform": 190, "dmp_compos": 190, "dup_decompos": 190, "t_m": 190, "r695": 190, "dmp_lift": 190, "dup_sign_vari": 190, "dmp_clear_denom": 190, "k_0": 190, "dmp_revert": 190, "gf_": 190, "justifi": 190, "necess": 190, "u_0": 190, "m_0": [190, 210], "m_n": 190, "gf_crt1": 190, "9215": 190, "9405": 190, "9603": 190, "gf_crt2": 190, "gf_int": 190, "gf_degre": 190, "gf_lc": 190, "gf_tc": 190, "gf_strip": 190, "gf_trunc": 190, "gf_normal": 190, "gf_from_dict": 190, "gf_to_dict": 190, "gf_from_int_poli": 190, "gf_to_int_poli": 190, "gf_neg": 190, "gf_add_ground": 190, "gf_sub_ground": 190, "gf_mul_ground": 190, "gf_quo_ground": 190, "gf_add": 190, "gf_sub": 190, "gf_mul": 190, "gf_sqr": 190, "gf_add_mul": 190, "gf_sub_mul": 190, "gf_expand": 190, "gf_div": 190, "r696": 190, "monagan93": [190, 191], "r697": 190, "gathen99": [190, 191], "gf_rem": 190, "gf_quo": 190, "gf_exquo": 190, "gf_lshift": 190, "gf_rshift": 190, "gf_pow": 190, "gf_pow_mod": 190, "r698": 190, "gf_gcd": 190, "gf_lcm": 190, "gf_cofactor": 190, "gf_gcdex": 190, "eea": 190, "r699": 190, "gf_monic": 190, "gf_diff": 190, "gf_eval": 190, "gf_multi_ev": 190, "gf_compos": 190, "gf_compose_mod": 190, "gf_trace_map": 190, "r700": 190, "gathen92": [190, 191], "gf_random": 190, "gf_irreduc": 190, "gf_irreducible_p": 190, "gf_sqf_p": 190, "gf_sqf_part": 190, "gf_sqf_list": 190, "e_2": [190, 193], "f_j": [190, 207], "gf_sqf": 190, "r701": 190, "geddes92": [190, 191], "gf_qmatrix": 190, "berlekamp": 190, "gf_qbasi": 190, "gf_berlekamp": 190, "gf_zassenhau": 190, "gf_shoup": 190, "gf_factor_sqf": 190, "gf_factor": 190, "e_d": 190, "cantor": 190, "zassenhau": [190, 192], "shoup": [190, 191], "kaltofen": [190, 191], "gathen": [190, 191], "gf_factor_method": 190, "r702": 190, "gf_valu": 190, "2204": 190, "gf_csolv": 190, "congruent": [190, 207, 210], "189": 190, "112": [190, 194], "139": 190, "r703": 190, "ivan": 190, "niven": 190, "zuckerman": 190, "montgomeri": 190, "infeas": [190, 193], "sdm_": 190, "distributedmodul": 190, "sdm_monomial_mul": 190, "sdm_monomial_deg": 190, "f_5": 190, "sdm_monomial_divid": 190, "sdm_lc": 190, "sdm_to_dict": 190, "sdm_from_dict": 190, "dic": 190, "sdm_add": 190, "2f_1": 190, "3f_1": 190, "yf_1": 190, "xf_1": 190, "sdm_lm": 190, "sdm_lt": 190, "sdm_mul_term": 190, "2xy": [190, 267], "4y": [190, 216, 262], "8xy": 190, "2y": [190, 210, 213, 216, 267], "sdm_zero": 190, "sdm_deg": 190, "sdm_from_vector": 190, "sdm_to_vector": 190, "variant": [190, 213, 216], "qg": 190, "remark": [190, 196, 207, 213], "uf": 190, "vg": 190, "zout": 190, "euclidtool": 190, "dmp_half_gcdex": 190, "dmp_gcdex": 190, "dmp_invert": 190, "dmp_euclidean_pr": 190, "dmp_primitive_pr": 190, "exceedingli": 190, "collin": [190, 191], "collins67": [190, 191], "subdomain": 190, "2l": 190, "remainin": 190, "subdetermin": 190, "n_2": [190, 217], "n_": [190, 210], "abnorm": 190, "gamma_i": 190, "brown": [190, 191, 217], "traub": [190, 191], "browntraub71": [190, 191], "brown78": [190, 191], "discoveri": [190, 269], "dmp_inner_subresult": 190, "729": 190, "sre": 190, "dmp_subresult": 190, "dmp_prs_result": 190, "dmp_zz_modular_result": 190, "dmp_zz_collins_result": 190, "dmp_qq_collins_result": 190, "dmp_result": 190, "dmp_discrimin": 190, "dmp_rr_prs_gcd": 190, "cff": [190, 193], "cfg": [190, 193], "dmp_ff_prs_gcd": 190, "dmp_zz_heu_gcd": 190, "r704": 190, "liao95": [190, 191], "dmp_qq_heu_gcd": 190, "dmp_inner_gcd": 190, "dmp_gcd": 190, "dmp_lcm": 190, "dmp_content": 190, "dmp_primit": 190, "dmp_cancel": 190, "dmp_trial_divis": 190, "dmp_zz_mignotte_bound": 190, "dup_zz_hensel_step": 190, "hensel": 190, "r705": 190, "dup_zz_hensel_lift": 190, "f_list": 190, "multifactor": 190, "r706": 190, "dup_zz_zassenhau": 190, "dup_zz_irreducible_p": 190, "eisenstein": 190, "dup_cyclotomic_p": 190, "bradford": 190, "russel": 190, "251": 190, "berlin": 190, "heidelberg": 190, "dup_zz_cyclotomic_poli": 190, "dup_zz_cyclotomic_factor": 190, "r707": 190, "weisstein09": [190, 191], "dup_zz_factor_sqf": 190, "dup_zz_factor": 190, "r708": 190, "dmp_zz_wang_non_divisor": 190, "wang": [190, 191], "eez": 190, "dmp_zz_wang_test_point": 190, "dmp_zz_wang_lead_coeff": 190, "dmp_zz_diophantin": 190, "dmp_zz_wang_hensel_lift": 190, "dmp_zz_wang": 190, "enhanc": [190, 217], "r709": 190, "wang78": [190, 191], "r710": 190, "dmp_zz_factor": 190, "r711": 190, "dmp_ext_factor": 190, "dup_gf_factor": 190, "dmp_factor_list": 190, "dmp_factor_list_includ": 190, "dmp_irreducible_p": 190, "groebnertool": 190, "polyconfig": [190, 193], "f5b": [190, 193], "spoli": 190, "red_groebn": 190, "beckerweispfenning93": 190, "is_groebn": 190, "is_minim": 190, "is_reduc": 190, "fglmtool": 190, "matrix_fglm": 190, "o_to": 190, "o_from": 190, "r712": 190, "fauger": [190, 193], "gianni": [190, 193, 215], "mora": [190, 191, 193, 215], "sdm_spoli": 190, "phantom": 190, "sca": 190, "defn": 190, "sdm_ecart": 190, "ecart": 190, "sdm_nf_mora": 190, "nf": 190, "sdm_groebner": 190, "sugar": [190, 191, 222], "giovini": [190, 191], "polyopt": [190, 194], "build_opt": 190, "polyerror": [190, 193], "basepolynomialerror": 190, "operationnotsupport": 190, "heuristicgcdfail": 190, "homomorphismfail": 190, "isomorphismfail": [190, 192], "extraneousfactor": 190, "evaluationfail": 190, "refinementfail": 190, "notrevers": [190, 193], "notalgebra": 190, "polynomialerror": [190, 193], "unificationfail": [190, 192], "generatorsneed": 190, "computationfail": 190, "exc": 190, "generatorserror": 190, "univariatepolynomialerror": 190, "multivariatepolynomialerror": [190, 193], "polificationfail": 190, "orig": 190, "optionerror": 190, "flagerror": 190, "modulargcd": 190, "modgcd_univari": 190, "monagan00": [190, 191], "modgcd_bivari": 190, "modgcd_multivari": 190, "_modgcd_multivariate_p": 190, "brown71": [190, 191], "degbound": 190, "contbound": 190, "func_field_modgcd": 190, "reconstuct": 190, "z_p": 190, "spuriou": [190, 215], "hoeij04": [190, 191], "scarc": 190, "hsin": 191, "chao": 191, "liao": 191, "fateman": 191, "montreal": 191, "quebec": 191, "canada": 191, "240": [191, 199, 244], "247": [191, 215], "von": [191, 217], "zur": 191, "gerhard": 191, "cambridg": [191, 210], "weisstein": 191, "cyclotomicpolynomi": 191, "1215": 191, "1231": 191, "czapor": 191, "labahn": 191, "monagan": [191, 209], "disco": 191, "721": 191, "kaltofen98": 191, "subquadrat": 191, "223": 191, "1998": [191, 210], "1179": 191, "1197": 191, "shoup95": 191, "397": 191, "shoup91": 191, "cox97": [191, 193], "shea": [191, 193], "ajwa95": 191, "ajwa": 191, "liu": 191, "cites": [191, 209], "ist": [191, 206, 209], "psu": [191, 206, 209], "mycites": 191, "login": 191, "bose03": 191, "bose": 191, "guiver": 191, "multidimension": [191, 228, 253], "giovini91": 191, "bronstein93": [191, 193], "salvi": [191, 194], "kiev": 191, "ukrain": 191, "buchberger01": [191, 193], "theorist": 191, "moreno": 191, "diaz": 191, "freir": 191, "eurocast": 191, "februari": 191, "davenport88": 191, "siret": 191, "tournier": 191, "london": [191, 210], "124": [191, 262], "greuel": 191, "pfister": 191, "atiyah": 191, "macdonald": 191, "142": 191, "1971": [191, 213], "505": 191, "237": 191, "249": 191, "wittkopf": 191, "478": 191, "hoeij": 191, "2004": [191, 210], "297": [191, 193], "304": [191, 193], "wang81": 191, "symsac": 191, "hoeij02": 191, "manwright94": [191, 193], "yiu": 191, "kwong": 191, "franci": 191, "wright": 191, "190347": 191, "190413": 191, "koepf98": [191, 193], "koepf": [191, 199, 209], "vieweg": 191, "abramov71": [191, 193], "abramov": [191, 215], "ussr": 191, "330": 191, "man93": [191, 193], "376": 191, "sciencedirect": 191, "pii": 191, "s0747717183710539": 191, "kapur1994": 191, "deepak": 191, "kapur": 191, "tushar": 191, "saxena": 191, "yang": 191, "dixon": 191, "researchg": [191, 217], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 191, "palancz08": 191, "pal\u00e1ncz": 191, "zaletnyik": 191, "jl": [191, 230], "awang": 191, "ew": 191, "grafarend": 191, "geodet": 191, "geodesi": 191, "225607735_dixon_result": 191, "s_solution_of_systems_of_geodetic_polynomial_equ": 191, "bruce97": 191, "bruce": 191, "randal": 191, "donald": [191, 232], "mundi": 191, "artifici": [191, 200], "intellig": [191, 209, 213, 273], "orlando": 191, "www2": 191, "duke": 191, "donaldlab": 191, "symbolicnumericalcomput": 191, "045": 191, "087": 191, "stiller96": 191, "stiller": 191, "1996": [191, 207, 215, 242], "citeseerx": [191, 206], "viewdoc": [191, 206, 209], "590": 191, "2021": 191, "rep1": [191, 206], "cohen93": [191, 192], "henri": 191, "olga": 192, "tausski": 192, "zimmer": 192, "pohst": 192, "articul": 192, "numberfield": 192, "mathfrak": 192, "regul": 192, "alpha_m": 192, "round_two": 192, "prime_decomp": 192, "prime_valu": 192, "minimal_polynomi": 192, "field_isomorph": 192, "nilrad": 192, "z_k": 192, "zk": 192, "ordinarili": 192, "503": 192, "r713": 192, "r714": 192, "powerbasisel": 192, "ramif": 192, "as_submodul": 192, "bundl": 192, "test_factor": 192, "deliber": 192, "is_inert": 192, "inert": [192, 213], "reduce_anp": 192, "elt": 192, "reduce_alg_num": 192, "field_gen": 192, "just_gen": 192, "reagent": 192, "kummer": 192, "1847": 192, "ueber": 192, "zerlegung": 192, "crell": 192, "r715": 192, "_minpoly_compos": 192, "stall": 192, "alli": 192, "monomorph": 192, "alpha_i": 192, "alpha_n": 192, "lincomb": 192, "primtiiv": 192, "meanwhil": 192, "moduleel": 192, "powerbasi": 192, "submodule_from_matrix": 192, "ancestor": 192, "to_col": 192, "nca": 192, "_mult_tab": 192, "successfulli": 192, "moduleendomorph": 192, "innerendomorph": 192, "endomorphismr": 192, "spec": [192, 193], "i_n": [192, 193, 218], "include_self": 192, "basis_el": 192, "element_from_r": 192, "endomorphism_r": 192, "is_compat_col": 192, "mult_tab": 192, "mult": 192, "closurefailur": 192, "nearest_common_ancestor": 192, "number_field": 192, "power_basis_ancestor": 192, "incom": 192, "halv": 192, "submodule_from_gen": 192, "over_power_basi": 192, "starts_with_un": 192, "hnf_modulu": 192, "whole_submodul": 192, "element_from_anp": 192, "element_from_alg_num": 192, "element_from_poli": 192, "qq_matrix": 192, "basis_element_pullback": 192, "discard_befor": 192, "structureerror": 192, "cohen00": 192, "make_mod_elt": 192, "qq_col": 192, "from_int_list": 192, "is_compat": 192, "reduced_mod_p": 192, "to_ancestor": 192, "anc": 192, "to_par": 192, "to_anp": 192, "inner_endomorph": 192, "event": [192, 217], "find_min_poli": 192, "missingunityerror": 192, "is_int": 192, "get_num_denom": 192, "extract_fundamental_discrimin": 192, "r716": 192, "algintpow": 192, "zeta_pow": 192, "r717": 192, "coeff_search": 192, "supplement_a_subspac": 192, "dmrankerror": 192, "v_n": 192, "w_r": 192, "w_j": 192, "u_j": 192, "r718": 192, "poly_from_expr": 193, "parallel_poly_from_expr": 193, "lt": [193, 238], "mod_invers": 193, "exprtool": [193, 253], "gcd_term": 193, "gcd_list": 193, "lcm_list": 193, "destruct": 193, "2079": 193, "1401": 193, "2715": 193, "6720": 193, "1092": 193, "gff": 193, "check_sqf": 193, "count_root": 193, "nroot": [193, 215], "maxstep": 193, "cleanup": 193, "73205080756888": 193, "73205080756887729352744634151": 193, "ground_root": 193, "nth_power_roots_poli": 193, "r_f": 193, "r_g": 193, "_signsimp": 193, "q_n": 193, "is_zero_dimension": [193, 216], "donal": 193, "230": [193, 215], "ec": 193, "em": 193, "di": 193, "dispersionset": 193, "gp": [193, 213], "free_symbols_in_domain": 193, "from_poli": 193, "get_domain": 193, "get_modulu": 193, "has_only_gen": 193, "vincent": [193, 235], "akrita": 193, "strzebonski": 193, "va": 193, "alkiviadi": 193, "adam": 193, "panagioti": 193, "vigkla": 193, "265": 193, "279": 193, "polnomi": 193, "is_multivari": 193, "is_univari": 193, "ltrim": 193, "rerun": [193, 228], "_only_": 193, "sturmian": 193, "subresultants_qq_zz": 193, "suffix": [193, 230], "_pg": 193, "_amv": 193, "rem_z": 193, "premultipli": 193, "rat_clear_denom": 193, "_ignor": 193, "retract": 193, "same_root": 193, "r0": 193, "set_domain": 193, "set_modulu": 193, "termwis": 193, "fglm": 193, "r719": 193, "horner_schem": 193, "equispac": 193, "viet": 193, "itermonomi": 193, "min_degre": 193, "gib": 193, "monomial_kei": 193, "monomial_count": 193, "gradedlexord": 193, "reversedgradedlexord": 193, "clear_cach": 193, "_get_interv": 193, "165": [193, 217, 235], "169": 193, "eval_approx": 193, "evalf_r": 193, "eval_r": 193, "69629": 193, "71318": 193, "805": 193, "3275": 193, "65536": [193, 196, 197], "414645": 193, "131072": 193, "6545": 193, "104755": 193, "2097152": 193, "6634255": 193, "_all_root": 193, "use_cach": 193, "_complexes_index": 193, "_complexes_sort": 193, "_count_root": 193, "_ensure_complexes_init": 193, "_ensure_reals_init": 193, "_eval_is_imaginari": 193, "_get_complex": 193, "_get_complexes_sqf": 193, "currentfactor": 193, "_get_real": 193, "_get_reals_sqf": 193, "_get_root": 193, "_indexed_root": 193, "_new": 193, "_postprocess_root": 193, "_preprocess_root": 193, "heroic": [193, 215], "_real_root": 193, "_reals_index": 193, "_reals_sort": 193, "_refine_complex": 193, "ay": [193, 210, 238, 273], "_roots_trivi": 193, "_set_interv": 193, "861136": 193, "86113631159405258": 193, "polyroot": 193, "quintic": [193, 215], "unread": [193, 233], "casu": 193, "irreducibili": 193, "unsolvablefactorerror": [193, 215], "inexpress": 193, "unsolv": [193, 216], "r720": 193, "cubic_funct": 193, "trigonometric_": 193, "28and_hyperbol": 193, "29_method": 193, "specialpoli": 193, "swinnerton_dyer_poli": 193, "swinnerton": 193, "dyer": 193, "symmetric_poli": 193, "random_poli": 193, "gegenbau": [193, 197], "partfrac": [193, 199], "undertermin": 193, "_w": [193, 204], "apart_list": 193, "assemble_partfrac_list": 193, "bunch": 193, "pfd": 193, "r721": 193, "partial_list": 193, "reassembl": 193, "pfda": 193, "r722": 193, "r723": 193, "r724": 193, "r725": 193, "r726": 193, "r727": 193, "r728": 193, "r729": 193, "widen": 194, "ring_seri": 194, "rs_sin": 194, "166666666666667": 194, "puiseux": 194, "rs_co": 194, "rs_tan": 194, "took": [194, 206], "eleg": [194, 196], "rs_exp": 194, "everyon": 194, "blazingli": 194, "ms": 194, "promin": 194, "gradual": 194, "rs_": 194, "rs_log": 194, "rs_lambertw": 194, "rs_atan": 194, "arctang": 194, "rs_asin": 194, "_tan1": 194, "rs_cot": 194, "rs_cos_sin": 194, "rs_atanh": 194, "rs_sinh": 194, "rs_cosh": 194, "rs_tanh": 194, "rs_hadamard_exp": 194, "inver": 194, "rs_mul": 194, "rs_squar": 194, "rs_pow": 194, "rs_series_invers": 194, "rs_series_revers": 194, "a_kx_k": 194, "ar_i": 194, "ar_": 194, "ae": 194, "rs_trunc": 194, "rs_nth_root": 194, "160249952256379": 194, "44224957030741": 194, "rs_sub": 194, "rs_diff": 194, "rs_integr": 194, "rs_newton": 194, "rs_compose_add": 194, "r730": 194, "bostan": 194, "flajolet": 194, "schost": 194, "4579": 194, "institut": 194, "nation": 194, "recherch": 194, "informatiqu": 194, "automatiqu": 194, "rs_is_puiseux": 194, "rs_puiseux": 194, "rs_puiseux2": 194, "rs_series_from_list": 194, "concur": 194, "rs_fun": 194, "_tan": 194, "_nth": 194, "_root": 194, "_fun": 194, "mul_xin": 194, "pow_xin": 194, "_raw": 195, "unkown": 195, "eqs_r": 195, "eqs_coeff": 195, "eqs_rh": 195, "critiqu": 196, "wester1999": 196, "systemat": 196, "153": 196, "\u2124": [196, 197, 216, 274], "unm": 196, "driver": [197, 229], "adequ": 197, "emptyprint": 197, "_sympystr": 197, "mathml": 197, "inconveni": 197, "_print_": 197, "expr_class": 197, "hierarchi": [197, 217], "_print_rat": 197, "_print_numb": 197, "_print_atom": 197, "_print_bas": 197, "print_latex": 197, "mylatexprint": 197, "_print_deriv": 197, "print_my_latex": 197, "modop": 197, "subcompon": 197, "outermost": [197, 205, 209, 221], "modopmodewrong": 197, "modopnestedwrong": 197, "modopsettingswrong": 197, "subobject": 197, "infrastructur": [197, 214], "printer_exampl": 197, "set_global_set": 197, "stringpict": 197, "pretty_symbolog": 197, "prettyform": 197, "hline": 197, "vline": 197, "ascii": [197, 259], "_pretti": 197, "use_unicode_sqrt_char": 197, "root_not": 197, "mat_symbol_styl": 197, "prettifi": 197, "unambigu": [197, 213, 238], "bold": 197, "c89codeprint": 197, "print_ccod": 197, "tgamma": 197, "known_functions_c89": 197, "known_functions_c99": 197, "fmax": 197, "fmin": 197, "lgamma": 197, "indent_cod": 197, "functionclass": [197, 236], "cfunction_format": 197, "derefer": 197, "dereferenc": 197, "symbols_to_declar": 197, "not_supported_funct": 197, "code_text": 197, "m_sqrt2": 197, "math_macro": 197, "m_sqrt2l": 197, "cxx": 197, "cxx98codeprint": 197, "print_rcod": 197, "rcode": 197, "known_funct": 197, "_rcode": 197, "rfunction_str": 197, "rfunction_format": 197, "ifels": 197, "tweak": [197, 215], "type_map": 197, "name_mangl": 197, "mangl": 197, "floor1": 197, "floor2": 197, "print_fcod": 197, "_fcode": 197, "conjg": 197, "32768": 197, "7182818284590452d0": 197, "1415926535897932d0": 197, "718281828459045235360287d0": 197, "141592653589793238462643d0": 197, "869604401089358618834491d0": 197, "mygamma": 197, "allow_unknown_funct": 197, "coshintegr": 197, "cosintegr": 197, "expintegralei": 197, "factorialpow": 197, "heavisidetheta": 197, "sinhintegr": 197, "sinintegr": 197, "arccosh": 197, "arccoth": 197, "arcsinh": 197, "arctanh": 197, "dirichleteta": 197, "gegenbauerc": 197, "hypergeometricpfq": 197, "sphericalbesselj": 197, "logintegr": 197, "lucasl": 197, "riemann_xi": 197, "riemannxi": 197, "stieltjesgamma": 197, "sphericalbess": 197, "mcodeprint": 197, "_mcode": 197, "mcode": 197, "maplecodeprint": 197, "_mapl": 197, "maple_cod": 197, "print_maple_cod": 197, "javascriptcodeprint": 197, "_javascript": 197, "js_function_str": 197, "known_fcns_src1": 197, "known_fcns_src2": 197, "conj": 197, "juliacodeprint": 197, "_julia": 197, "harmless": [197, 269], "cosmet": 197, "pw": 197, "existing_julia_fcn": 197, "coshint": 197, "cosint": 197, "sinhint": 197, "sinint": 197, "bincoeff": 197, "logint": 197, "gammaln": 197, "octavecodeprint": 197, "_octav": 197, "recip": [197, 235], "powf": 197, "signum": 197, "rustcodeprint": 197, "_rust_cod": 197, "7_f64": 197, "_aesara": 197, "tensorvari": 197, "floatx": 197, "squeez": 197, "dim_handl": 197, "gtkmathview": 197, "widget": 197, "print_gtk": 197, "libgtkmathview": 197, "start_view": 197, "_lambdacod": 197, "accepted_latex_funct": 197, "parenthesize_sup": 197, "fold_frac_pow": 197, "fold_func_bracket": 197, "fold_short_frac": 197, "inv_trig_styl": 197, "itex": 197, "ln_notat": 197, "long_frac_ratio": 197, "mat_delim": 197, "mat_str": 197, "mul_symbol": 197, "symbol_nam": 197, "gothic_re_im": 197, "decimal_separ": 197, "diff_oper": 197, "smallmatrix": [197, 267], "amsmath": 197, "fracton": 197, "semicolon": 197, "monospac": 197, "mathtt": 197, "mathml2": 197, "mathmlprinterbas": 197, "mathmlcontentprint": 197, "mathmlpresentationprint": 197, "chapter4": 197, "_mathml_cont": 197, "mathml_tag": 197, "chapter3": 197, "_mathml_present": 197, "utf": 197, "mul_symbol_mathml_numb": 197, "xb7": 197, "print_mathml": [197, 272], "mrow": 197, "mpmathprint": 197, "fully_qualified_modul": 197, "print_python": 197, "textual": 197, "reprprint": 197, "_sympyrepr": 197, "reprifi": 197, "sympy_integ": 197, "displayhook": [197, 228], "pprint_nod": 197, "nb2": 197, "print_nod": 197, "asssumpt": 197, "determinisit": 197, "backtrac": 197, "print_tre": 197, "outputbuff": 197, "dvioption": 197, "outputtexfil": 197, "extra_preambl": 197, "latex_set": 197, "postscript": 197, "tex": 197, "eulervm": 197, "sty": 197, "debian": 197, "ubuntu": 197, "unset": [197, 209], "gimp": 197, "evinc": 197, "kdvi": 197, "xdvi": 197, "gracefulli": [197, 221], "generet": 197, "bytesio": 197, "usepackag": 197, "amsfont": 197, "renewcommand": 197, "popen": 197, "phidd": 197, "bitmap": 197, "split_super_sub": 197, "var_sub1__sup_sub2": 197, "assignmenterror": 197, "bitwiseand": 197, "bitwiseor": 197, "bitwisexor": 197, "precedence_valu": 197, "kroneckerproduct": 197, "negativeinfin": 197, "tensadd": [197, 223], "tensmul": [197, 223], "precedence_funct": 197, "precedence_float": 197, "precedence_fracel": 197, "precedence_integ": 197, "precedence_mul": 197, "precedence_polyel": 197, "precedence_r": 197, "unevaluatedexpr": [197, 268], "precedence_unevaluatedexpr": 197, "databas": [197, 207], "pretty_use_unicod": 197, "pretty_try_use_unicod": 197, "xstr": 197, "greek_lett": 197, "digit_2txt": 197, "ONE": 197, "seven": 197, "symb_2txt": 197, "parenthesi": [197, 221], "\u2080": 197, "\u2081": 197, "\u2082": 197, "\u2083": 197, "\u2084": 197, "\u2085": 197, "\u2086": 197, "\u2087": 197, "\u2088": 197, "\u2089": 197, "\u2090": 197, "\u1d66": 197, "\u1d6a": 197, "\u2091": 197, "\u1d67": 197, "\u2095": 197, "\u1d62": 197, "\u2096": 197, "\u2097": 197, "\u2098": 197, "\u2099": 197, "\u2092": 197, "\u209a": 197, "\u1d69": 197, "\u1d63": 197, "\u1d68": 197, "\u209b": 197, "\u209c": 197, "\u1d64": 197, "\u1d65": 197, "\u2093": 197, "\u2070": 197, "\u00b9": 197, "\u00b2": 197, "\u00b3": 197, "\u2074": 197, "\u2075": 197, "\u2076": 197, "\u2077": 197, "\u2078": 197, "\u2079": 197, "\u2071": 197, "\u207f": 197, "xobj": 197, "vobj": 197, "hobj": 197, "vf": 197, "\u00bd": 197, "\u2153": 197, "\u00bc": 197, "\u2155": 197, "\u2159": 197, "\u215b": 197, "\u2154": 197, "\u2156": 197, "\u00be": 197, "\u2157": 197, "\u215c": 197, "\u2158": 197, "\u215a": 197, "\u215d": 197, "\u215e": 197, "xsym": 197, "symbolog": 197, "atoms_t": 197, "\u2102": [197, 274], "emptysequ": [197, 203], "exp1": 197, "\u2115": 197, "\u2115\u2080": 197, "\u211d": [197, 274], "symmetricdiffer": [197, 216], "pretty_atom": 197, "atom_nam": 197, "pretty_symbol": 197, "symb_nam": 197, "bold_nam": 197, "stylis": 197, "_print_meijerg": 197, "_print_hyp": 197, "jurjen": 197, "bo": 197, "hate": 197, "spammer": 197, "pietjepuk314": 197, "oc": [197, 247], "oohai": 197, "gedg": 197, "email": 197, "my": [197, 262], "mun": 197, "terminal_str": 197, "baselin": 197, "leftslash": 197, "slash": [197, 228], "paren": 197, "ifascii_nougli": 197, "line_break": 197, "ugli": 197, "terminal_width": 197, "wider": 197, "maxdepth": 197, "labelfunc": 197, "digraph": [197, 235, 272], "rankdir": [197, 272], "_sparse_": 198, "flavor": 198, "________": [198, 217, 235], "x\u2080": 198, "greatli": 198, "numbered_symbol": [198, 209, 213, 235], "postprocessor": [198, 209], "reduced_expr": [198, 209], "formalpowerseri": 199, "coeff_bel": 199, "formalpowerseriescompos": 199, "r731": 199, "comtet": 199, "loui": 199, "reidel": 199, "1974": 199, "720": [199, 213, 235], "formalpowerseriesinvers": 199, "r732": 199, "upto": [199, 204, 213], "formalpowerseriesproduct": 199, "rational_algorithm": 199, "compute_fp": 199, "hyper_algorithm": 199, "omposit": 199, "bell_seq": 199, "finiteformalpowerseri": 199, "rational_independ": 199, "ra": 199, "admiss": [199, 202], "r733": 199, "r734": 199, "simpled": 199, "exp_r": 199, "explik": 199, "hyper_r": 199, "rsolve_hypergeometr": 199, "r735": 199, "r736": 199, "solve_d": 199, "fourierseri": 200, "scalex": 200, "shiftx": 200, "sigma_approxim": 200, "gibb": 200, "bigl": 200, "bigr": 200, "lanczo": 200, "r737": 200, "gibbs_phenomenon": 200, "r738": 200, "sawtooth": 200, "bn": 200, "r739": 200, "limitseq": 202, "difference_delta": 202, "r740": 202, "differencedelta": 202, "limit_seq": [202, 204], "safeguard": 202, "r741": 202, "kauer": 202, "seqper": 203, "seqformula": 203, "seqbas": 203, "coeff_mul": 203, "find_linear_recurr": 203, "gfvar": 203, "seqadd": 203, "seqmul": 203, "_mul": 203, "recursiveseq": 203, "fib": 203, "invok": [204, 228, 229], "workhors": 204, "succ": [204, 217], "asymp": 204, "exposit": 204, "gloss": 204, "wsym": 204, "test_rewrite1": 204, "build_expression_tre": 204, "mrv_leadterm": 204, "e0": 204, "calculate_seri": 204, "limitinf": 204, "leadsimp": 204, "constantli": 204, "subsset": 204, "mrv_max1": 204, "mrv_max3": 204, "expsf": 204, "expsg": 204, "expsboth": 204, "o2": 204, "do_sub": 204, "r742": 204, "7048138294": 204, "7182818285": 204, "6349839002": 204, "6449340668": 204, "shank": 204, "6881721793": 204, "6931396564": 204, "6931471806": 204, "6931471805599453094172321215": 204, "r743": 204, "residue_theorem": 204, "neighborhood": 205, "rim": 205, "affirm": 205, "infimum": 205, "is_clos": 205, "closed": 205, "is_disjoint": 205, "r744": 205, "disjoint_set": 205, "is_open": 205, "is_proper_subset": 205, "is_proper_superset": 205, "left_open": 205, "is_superset": 205, "isdisjoint": 205, "issubset": 205, "issuperset": 205, "fancyset": 205, "lebesgu": 205, "r745": 205, "power_set": 205, "symmetric_differ": 205, "r746": 205, "right_open": 205, "mpi": 205, "r747": 205, "interval_": 205, "as_rel": 205, "is_left_unbound": 205, "is_right_unbound": 205, "r748": 205, "r749": 205, "union_": 205, "28set_theori": 205, "r750": 205, "intersection_": 205, "coin": [205, 217], "r751": 205, "cartesian_product": 205, "is_iter": 205, "r752": 205, "complementset": 205, "r753": 205, "disjoint_union": 205, "r754": 205, "empty_set": 205, "r755": 205, "universal_set": 205, "flambda": 205, "square_iter": 205, "base_set": 205, "cartesiancomplexregion": 205, "polarcomplexregion": 205, "unit_disk": 205, "upper_half_unit_disk": 205, "a_interv": 205, "b_interv": 205, "from_real": 205, "pset": 205, "rset": 205, "thetaset": 205, "upper_half_plan": 205, "normalize_theta_set": 205, "r756": 205, "r757": 205, "axiom_of_power_set": 205, "varnoth": 205, "sin_sol": 205, "r758": 205, "element_": 205, "tr0": 206, "tr1": 206, "tr2": 206, "tr2i": 206, "tr3": 206, "tr4": 206, "tr5": 206, "tr6": 206, "tr7": 206, "tr8": 206, "tr9": 206, "tr10": 206, "tr10i": 206, "tr11": 206, "tr12": 206, "tr12i": 206, "tr13": 206, "trmorri": 206, "tr14": 206, "tr15": 206, "tr16": 206, "tr22": 206, "tr111": 206, "ctr1": 206, "ctr4": 206, "rl1": 206, "rl2": 206, "deem": 206, "932": 206, "016": 206, "serendipit": 206, "dead": 206, "newa": 206, "lucki": 206, "sqt": 206, "_tr56": 206, "un": [206, 207], "r759": 206, "morri": 206, "27s_law": 206, "trpower": 206, "r760": 206, "list_of_trigonometric_ident": 206, "reduction_formula": 206, "ctr2": 206, "ctr3": 206, "r761": 206, "657": 206, "2478": 206, "dimitar": 206, "vlahovski": 206, "technolog": 206, "xiuqin": 206, "zhong": 206, "zhenb": 206, "zeng": 206, "1169": 206, "1177": 206, "sosmath": 206, "trig5": 206, "symplifi": [207, 209], "roach1996": 207, "roach1997": 207, "p_q": 207, "reachabl": [207, 217], "f_q": 207, "undo": [207, 273], "whenc": 207, "game": 207, "twofold": 207, "incongru": 207, "wlog": 207, "alpha_r": 207, "beta_r": 207, "blindli": 207, "messi": 207, "k_u": 207, "l_v": 207, "k_j": 207, "c_w": 207, "r_j": 207, "l_u": 207, "res_": 207, "delta_i": 207, "add_formula": 207, "addb": 207, "sum_0": 207, "test_hyperexpand": 207, "test_formula": 207, "typo": 207, "suboptim": 207, "imath": 207, "b1prime": 207, "vital": [207, 217], "308": 207, "nthroot": 208, "kroneckersimp": 208, "besselsimp": 208, "hypersimilar": 208, "epath": 208, "hongguang": [208, 253], "fu": [208, 209, 253], "unmodifi": 209, "my_measur": 209, "boolian": 209, "max_len": 209, "surd": 209, "strigonometr": 209, "399": 209, "rational_convers": 209, "base10": 209, "6004799503160655": 209, "nfloat": 209, "eq_x": 209, "max_term": 209, "polish": 209, "expand_power_bas": 209, "rcollect": 209, "analyz": [209, 222], "r762": 209, "pearc": 209, "163": 209, "6984": 209, "trigsimp_groebn": 209, "bb1": 209, "be1": 209, "bb2": 209, "be2": 209, "bei": 209, "max_it": 209, "unrad": [209, 215], "r763": 209, "ibm": 209, "fagin": 209, "symb85": 209, "r764": 209, "cybertest": 209, "opt_sub": 209, "as_unevaluated_bas": 209, "hyperegeometr": 209, "epathtool": 209, "ebnf": 209, "za": [209, 217], "xml": 209, "xpath": 209, "hasattr": [209, 231], "diophantu": 210, "mathematician": [210, 216], "citi": 210, "alexandria": 210, "father": 210, "hi": 210, "arithmetica": 210, "a_1x_1": 210, "a_2x_2": 210, "a_nx_n": 210, "bxy": 210, "cy": 210, "dxy": 210, "eyz": 210, "fzx": 210, "pythagorean": 210, "3y": 210, "4ac": 210, "9369318": 210, "920": 210, "5y": 210, "BY": 210, "t4": 210, "t5": 210, "providean": 210, "eqyptian": 210, "thilinaatsympi": 210, "andreescu": 210, "titu": 210, "andrica": 210, "dorin": 210, "cucurezeanu": 210, "ion": 210, "diophantineequ": 210, "alpertron": 210, "20160323033111": 210, "jpr2718": 210, "ax2p": 210, "permute_sign": [210, 235], "signed_permut": [210, 235], "_dict": 210, "r765": 210, "r766": 210, "pell": 210, "lmm": 210, "r767": 210, "393": 210, "13y": 210, "986": 210, "49299": 210, "1570": 210, "robertson": 210, "20160323033128": 210, "r768": 210, "nitaj": 210, "r769": 210, "numbertheori": 210, "r770": 210, "r771": 210, "676": 210, "884": 210, "fxz": 210, "3xy": 210, "r772": 210, "fxy": 210, "gyz": 210, "hxz": 210, "r773": 210, "cremona": 210, "rusin": 210, "2x_": 210, "m4": 210, "general_sum_of_squar": 210, "8m": 210, "r774": 210, "2345": 210, "proofwiki": 210, "integer_as_sum_of_three_squar": 210, "general_sum_of_even_pow": 210, "1729": 210, "stopiter": 210, "r775": 210, "44542": 210, "207": 210, "schorn": 210, "3456": 210, "1294585930293": 210, "2161": 210, "1137796": 210, "r776": 210, "evenli": 210, "var_t": 210, "r777": 210, "ur": 210, "dv": 210, "vr": 210, "r778": 210, "r779": 210, "nigel": 210, "y_0": [210, 213], "4x": [210, 216, 262], "5x": 210, "r780": 210, "r781": 210, "eprint": 210, "nottingham": 210, "uk": 210, "kvxefz87": 210, "r782": 210, "cuhk": 210, "hk": 210, "wkshum": 210, "404": 210, "r783": 210, "mordel": 210, "r784": 210, "r785": 210, "r786": 210, "r787": 210, "legrang": 210, "csusm": 210, "aitken_html": 210, "symbols_seq": 210, "dict_iter": 210, "r788": 210, "r789": 210, "inhomogen": [210, 213, 215], "r790": 210, "thue": 210, "riccati": 211, "pde": [211, 213], "deutil": [211, 213, 214], "linear_eq_to_matrix": [211, 213], "transolv": 211, "solve_rational_inequ": 212, "solve_poly_inequ": 212, "reduce_rational_inequ": 212, "reduce_abs_inequ": 212, "reduce_inequ": 212, "solve_univariate_inequ": [212, 216], "solvifi": [212, 216], "autodetect": [213, 214], "ode_ord": [213, 214, 215], "best_hint": 213, "all_integr": [213, 214], "_integr": [213, 214], "unevaluat": 213, "test_od": 213, "ode_": 213, "hintnam": [213, 214], "classify_sysod": 213, "ode_hintnam": 213, "tough": 213, "nth_linear_homogeneous_constant_coeff_integr": 213, "nth_linear": 213, "indep": 213, "indep_div_dep": 213, "undetermined_coeffici": 213, "_best": 213, "nth_algebraic_integr": 213, "separable_integr": 213, "1st_exact_integr": 213, "1st_linear_integr": 213, "bernoulli_integr": 213, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 213, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 213, "nth_linear_constant_coeff_variation_of_parameters_integr": 213, "solve_for_func": [213, 214], "homogeneouscoeffsubsdepdivindep": 213, "homogeneouscoeffsubsindepdivdep": 213, "varepsilon": 213, "genform": [213, 214], "starrett": 213, "symbolnam": 213, "startnumb": 213, "endnumb": 213, "renumb": 213, "absorpt": 213, "assist": 213, "2nd_hypergeometric_integr": 213, "almost_linear_integr": 213, "linear_coefficients_integr": 213, "separable_reduced_integr": 213, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 213, "liouville_integr": 213, "2nd_nonlinear_autonomous_conserv": 213, "2nd_nonlinear_autonomous_conserved_integr": 213, "newconst": 213, "ode_sol_simpl": 213, "trysolv": 213, "sola": 213, "solb": 213, "listofsolut": 213, "ode_problem": 213, "firstexact": 213, "exact_differential_equ": 213, "tenenbaum": 213, "dover": 213, "1963": 213, "homogeneouscoeffbest": 213, "ode_1st_homogeneous_coeff_best_integr": 213, "homogeneous_differential_equ": 213, "firstlinear": 213, "linear_differential_equ": 213, "first_order_equ": 213, "rationalriccati": 213, "atleast": 213, "riccati_equ": 213, "thieu": 213, "vo": 213, "www3": [213, 242], "risc_5387": 213, "phdthesisthieu": 213, "secondlinearairi": 213, "secondlinearbessel": 213, "math24": 213, "bernoulli_differential_equ": 213, "goldstein": 213, "braun": 213, "maplesoft": 213, "aspx": 213, "odeadvisor": 213, "riccatispeci": 213, "__________________": 213, "eqworld": 213, "ipmnet": 213, "ru": 213, "ode0106": 213, "ode0123": 213, "nthlinearconstantcoeffhomogen": 213, "nth_linear_constant_coeff_homogeneous_integr": 213, "nonhomogeneous_equation_with_constant_coeffici": 213, "nthlinearconstantcoeffundeterminedcoeffici": 213, "method_of_undetermined_coeffici": 213, "221": 213, "nthlinearconstantcoeffvariationofparamet": 213, "cramer": 213, "variation_of_paramet": 213, "planetmath": 213, "variationofparamet": 213, "nthlineareulereqhomogen": 213, "equidimension": 213, "nth_linear_euler_eq_homogeneous_integr": 213, "sollist": 213, "93euler_equ": 213, "bender": 213, "orszag": 213, "scientist": 213, "nthlineareulereqnonhomogeneousvariationofparamet": 213, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 213, "nthalgebra": 213, "nthorderreduc": 213, "caught": 213, "fault": 213, "almostlinear": 213, "first_linear": 213, "joel": 213, "mose": 213, "stormi": 213, "decad": 213, "august": [213, 232], "558": 213, "linearcoeffici": 213, "separablereduc": 213, "liegroup": 213, "ds": 213, "secondhypergeometr": 213, "2f1": 213, "1f1": 213, "0f1": 213, "liouvillian": 213, "pfq": 213, "chan": 213, "cheb": 213, "terrab": 213, "ode_1st_power_seri": 213, "travi": [213, 228], "walker": 213, "ode_2nd_power_series_ordinari": 213, "lamar": 213, "seriessolut": 213, "simmon": 213, "176": 213, "ode_2nd_power_series_regular": 213, "lie_heuristic_abaco1_simpl": 213, "duart": 213, "da": 213, "mota": 213, "lie_heuristic_abaco1_product": 213, "roch": 213, "lie_heuristic_bivari": 213, "329": 213, "lie_heuristic_chi": 213, "lie_heuristic_abaco2_similar": 213, "lie_heuristic_function_sum": 213, "lie_heuristic_abaco2_unique_unknown": 213, "lie_heuristic_abaco2_unique_gener": 213, "lie_heuristic_linear": 213, "gy": 213, "bh": 213, "impract": 213, "val_inf": 213, "ybar": 213, "numa": 213, "dena": 213, "numi": 213, "deni": 213, "sol1": 213, "sol2": 213, "part_sol": 213, "haaheim": 213, "gensol": 213, "_linear_2eq_order1_type6": 213, "_linear_2eq_order1_type7": 213, "fgp": 213, "ag": 213, "bg": 213, "linear_ode_to_matrix": 213, "odeordererror": 213, "odenonlinearerror": 213, "eqs_mat": 213, "r791": 213, "matrix_differential_equ": 213, "canonical_od": 213, "canonical_eq": 213, "canonical_system": 213, "linodesolve_typ": 213, "type1": 213, "type2": 213, "type3": 213, "type4": 213, "type5": 213, "type6": 213, "type_of_equ": 213, "a_t": 213, "a_non_commut": 213, "matrix_exp_jordan_form": 213, "expj": 213, "matrix_exp": 213, "defect": 213, "p_invers": 213, "r792": 213, "defective_matrix": 213, "r793": 213, "r794": 213, "jordan_normal_form": 213, "comupt": 213, "r795": 213, "r796": 213, "matrix_exponenti": 213, "follw": 213, "antiderv": 213, "subscheck": 213, "system_info": 213, "sol_vector": 213, "sol_vector_evalu": 213, "_nonlinear_2eq_order1_type1": 213, "_nonlinear_2eq_order1_type2": 213, "_nonlinear_2eq_order1_type3": 213, "autonom": 213, "_nonlinear_2eq_order1_type4": 213, "_nonlinear_2eq_order1_type5": 213, "clairaut": 213, "envelop": 213, "_nonlinear_3eq_order1_type1": 213, "enspac": [213, 216], "sysod": 213, "sode0401": 213, "_nonlinear_3eq_order1_type2": 213, "sode0402": 213, "_nonlinear_3eq_order1_type3": 213, "sode0404": 213, "_nonlinear_3eq_order1_type4": 213, "sode0405": 213, "_nonlinear_3eq_order1_type5": 213, "sode0406": 213, "_handle_integr": 213, "gather": 213, "unhind": 213, "wolphramalpha": 213, "detool": 213, "hint_integr": 213, "alphanumer": 213, "hinder": 213, "matching_hint": 213, "matchdict": 213, "1st_homogeneous_coeff": 213, "your_hint": 213, "xfail": [213, 226, 228], "fun": [214, 266], "uxt": 214, "uxi": 214, "solvefun": 214, "test_pd": 214, "pde_hintnam": 214, "ux": 214, "uy": 214, "allhint": 214, "1st_linear_constant_coeff_homogen": 214, "_preprocess": 214, "inabl": 214, "_xi_1": 214, "viktor": 214, "grigoryan": 214, "124a": 214, "substack": 214, "1st_linear_constant_coeff_integr": 214, "du": 214, "inspir": [214, 269], "pde_hint": 214, "checksol": 215, "ect": 215, "elim": 215, "dicontinu": 215, "052": 215, "cov": 215, "pval": 215, "xval": 215, "rsolv": 215, "solve_linear": 215, "solve_linear_system": 215, "overdetermin": [215, 216], "msymbol": 215, "degener": [215, 216], "solve_linear_system_lu": 215, "solve_undetermined_coeff": 215, "equ": 215, "obligatori": 215, "19287309935246": 215, "27844411169911": 215, "73908513321516064165531208767387340401341175890076": 215, "steep": 215, "39267e": 215, "1684e": 215, "588469032184": 215, "315": 215, "730061685774": 215, "46792545969349058": 215, "inconclus": 215, "init": 215, "dissimilar": 215, "v_0": 215, "n_m": 215, "v_m": 215, "rsolve_poli": 215, "rsolve_ratio": 215, "r797": 215, "levelt": 215, "290": [215, 244], "296": 215, "r798": 215, "r799": 215, "revis": 215, "r800": 215, "289": 215, "alembertian": 215, "r801": 215, "r802": 215, "polysi": 215, "solve_triangul": 215, "kalkbrenn": 215, "patrizia": 215, "teo": 215, "aaecc": 215, "minima": 216, "conditionset": [216, 217, 274], "productset": 216, "imageset": [216, 274], "complexregion": 216, "uncount": 216, "bizarr": 216, "her": 216, "sol_f": 216, "solveset_r": 216, "solveset_complex": 216, "methodolog": [216, 266], "_solve_real_trig": 216, "invert_r": 216, "invert_complex": 216, "_solve_rad": 216, "_solve_ab": 216, "_solve_as_r": 216, "_solve_as_poly_r": 216, "_solve_as_poly_complex": 216, "_solve_as_poli": 216, "gsoc": 216, "2014": [216, 217], "iamit": 216, "2948": 216, "6659": 216, "7523": 216, "sibx0afl3q": 216, "9696": 216, "27s_theorem": 216, "inftyright": 216, "nright": 216, "0right": 216, "domain_check": 216, "3z": 216, "9z": 216, "nonlinearerror": 216, "4z": 216, "cccc": 216, "eq3": 216, "eq4": 216, "391": 216, "_solve_system": 216, "_solve_using_known_valu": 216, "_transolv": 216, "_tsolv": 216, "tsolv": 216, "outright": 216, "tractabl": 216, "interf": 216, "add_typ": 216, "_is_exponenti": 216, "new_eq": 216, "_solve_exponenti": 216, "_is_class": 216, "_solve_class": 216, "_solve_expo": 216, "9x": 216, "solve_expo": 216, "log_b": 216, "_solve_logarithm": 216, "solve_log": 216, "_is_logarithm": 216, "prebuilt": 217, "finiterv": 217, "varianc": 217, "dice": 217, "continuousrv": 217, "continuousdistributionhandmad": 217, "dist": 217, "discreterv": 217, "discretedistributionhandmad": 217, "pmf": 217, "finitedistributionhandmad": 217, "discreteuniform": 217, "randomsymbol": 217, "r803": 217, "discrete_uniform_distribut": 217, "r804": 217, "discreteuniformdistribut": 217, "d6": 217, "diedistribut": 217, "toss": 217, "r805": 217, "bernoulli_distribut": 217, "r806": 217, "bernoullidistribut": 217, "numeb": 217, "unfair": 217, "r807": 217, "coin_flip": 217, "binomialdistribut": 217, "r808": 217, "binomial_distribut": 217, "r809": 217, "betabinomi": 217, "r810": 217, "r811": 217, "betabinomialdistribut": 217, "popul": 217, "marbl": 217, "r812": 217, "hypergeometric_distribut": 217, "r813": 217, "hypergeometricdistribut": 217, "700000000000000": 217, "r814": 217, "rademacher_distribut": 217, "r815": 217, "geometric_distribut": 217, "r816": 217, "geometricdistribut": 217, "r817": 217, "hermite_distribut": 217, "poisson": 217, "r818": 217, "poisson_distribut": 217, "r819": 217, "poissondistribut": 217, "r820": 217, "logarithmic_distribut": 217, "r821": 217, "logarithmicdistribut": 217, "negativebinomi": 217, "r822": 217, "negative_binomial_distribut": 217, "r823": 217, "negativebinomialdistribut": 217, "skellam": 217, "mu1": 217, "mu2": 217, "mu_1": 217, "mu_2": 217, "i_k": 217, "r824": 217, "skellam_distribut": 217, "yulesimon": 217, "yule": 217, "simon": 217, "r825": 217, "93simon_distribut": 217, "8100": 217, "r826": 217, "zeta_distribut": 217, "cdf": 217, "r827": 217, "arcsine_distribut": 217, "benini": 217, "r828": 217, "benini_distribut": 217, "r829": 217, "v8": 217, "beninidistribut": 217, "r830": 217, "beta_distribut": 217, "r831": 217, "betadistribut": 217, "betanoncentr": 217, "noncentr": 217, "r832": 217, "noncentral_beta_distribut": 217, "r833": 217, "noncentralbetadistribut": 217, "betaprim": 217, "r834": 217, "beta_prime_distribut": 217, "r835": 217, "betaprimedistribut": 217, "boundedpareto": 217, "pareto": 217, "r836": 217, "pareto_distribut": 217, "bounded_pareto_distribut": 217, "r837": 217, "cauchy_distribut": 217, "r838": 217, "cauchydistribut": 217, "r839": 217, "chi_distribut": 217, "r840": 217, "chidistribut": 217, "chinoncentr": 217, "r841": 217, "noncentral_chi_distribut": 217, "chisquar": 217, "r842": 217, "chi_squared_distribut": 217, "r843": 217, "squareddistribut": 217, "dagum": 217, "r844": 217, "dagum_distribut": 217, "erlang": 217, "r845": 217, "erlang_distribut": 217, "r846": 217, "erlangdistribut": 217, "exgaussian": 217, "emg": 217, "r847": 217, "exponentially_modified_gaussian_distribut": 217, "quantil": 217, "r848": 217, "exponential_distribut": 217, "r849": 217, "exponentialdistribut": 217, "fdistribut": 217, "______________________________": 217, "r850": 217, "r851": 217, "fisherz": 217, "fisher": 217, "2d_1": 217, "d_1z": 217, "d_1e": 217, "r852": 217, "27s_z": 217, "r853": 217, "fishersz": 217, "frechet": 217, "r854": 217, "a9chet_distribut": 217, "r855": 217, "gamma_distribut": 217, "r856": 217, "gammadistribut": 217, "gammainvers": 217, "r857": 217, "gompertz": 217, "r858": 217, "gompertz_distribut": 217, "gumbel": 217, "dfrac": 217, "r859": 217, "gumbeldistribut": 217, "r860": 217, "gumbel_distribut": 217, "r861": 217, "mathwav": 217, "easyfit": 217, "gumbel_max": 217, "r862": 217, "gumbel_min": 217, "kumaraswami": 217, "r863": 217, "kumaraswamy_distribut": 217, "r864": 217, "laplace_distribut": 217, "r865": 217, "laplacedistribut": 217, "r866": 217, "a9vy_distribut": 217, "r867": 217, "levydistribut": 217, "logist": 217, "r868": 217, "logistic_distribut": 217, "r869": 217, "logisticdistribut": 217, "loglogist": 217, "unimod": 217, "r870": 217, "lognorm": 217, "r871": 217, "r872": 217, "lognormaldistribut": 217, "lomax": 217, "r873": 217, "lomax_distribut": 217, "maxwel": 217, "2a": 217, "r874": 217, "maxwell_distribut": 217, "r875": 217, "maxwelldistribut": 217, "moyal": 217, "r876": 217, "moyaldistribut": 217, "r877": 217, "rice": 217, "dobelman": 217, "textfil": 217, "distributionshandbook": 217, "nakagami": 217, "r878": 217, "nakagami_distribut": 217, "marginal_distribut": 217, "r879": 217, "normal_distribut": 217, "r880": 217, "normaldistributionfunct": 217, "xm": 217, "x_m": 217, "r881": 217, "r882": 217, "paretodistribut": 217, "powerfunct": 217, "paramat": 217, "r883": 217, "power_func": 217, "quadraticu": 217, "r884": 217, "quadratic_distribut": 217, "raisedcosin": 217, "2s": 217, "r885": 217, "raised_cosine_distribut": 217, "r886": 217, "rayleigh_distribut": 217, "r887": 217, "rayleighdistribut": 217, "r888": 217, "reciprocal_distribut": 217, "studentt": 217, "r889": 217, "student_t": 217, "r890": 217, "studentst": 217, "shiftedgompertz": 217, "r891": 217, "shifted_gompertz_distribut": 217, "r892": 217, "trapezoidal_distribut": 217, "r893": 217, "triangular_distribut": 217, "r894": 217, "triangulardistribut": 217, "r895": 217, "uniform_distribution_": 217, "28continu": 217, "r896": 217, "uniformdistribut": 217, "uniformsum": 217, "irwin": 217, "r897": 217, "uniform_sum_distribut": 217, "r898": 217, "uniformsumdistribut": 217, "vonmis": 217, "mise": 217, "i_0": 217, "r899": 217, "von_mises_distribut": 217, "r900": 217, "vonmisesdistribut": 217, "wald": 217, "gaussianinvers": 217, "r901": 217, "inverse_gaussian_distribut": 217, "r902": 217, "inversegaussiandistribut": 217, "weibul": 217, "geq0": 217, "r903": 217, "weibull_distribut": 217, "r904": 217, "weibulldistribut": 217, "wignersemicircl": 217, "semicircl": 217, "frac2": 217, "r905": 217, "wigner_semicircle_distribut": 217, "r906": 217, "wignerssemicirclelaw": 217, "jointrv": 217, "_set": 217, "multivariatenorm": 217, "noninvert": 217, "ob": 217, "r907": 217, "multivariate_normal_distribut": 217, "multivariatelaplac": 217, "r908": 217, "multivariate_laplace_distribut": 217, "generalizedmultivariateloggamma": 217, "joint_rv_typ": 217, "gd": 217, "y_3": 217, "gmvlg": 217, "generalizedmultivariateloggammaomega": 217, "r909": 217, "generalized_multivariate_log": 217, "r910": 217, "234137346_on_a_multivariate_log": 217, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 217, "correl": 217, "gmvlgo": 217, "r911": 217, "r912": 217, "r913": 217, "multinomial_distribut": 217, "r914": 217, "multinomialdistribut": 217, "multivariatebeta": 217, "r915": 217, "dirichlet_distribut": 217, "r916": 217, "dirichletdistribut": 217, "multivariateewen": 217, "ewen": 217, "r917": 217, "27s_sampling_formula": 217, "r918": 217, "rutger": 217, "hcrane": 217, "sts529": 217, "multivariatet": 217, "negativemultinomi": 217, "n_c": 217, "r919": 217, "negative_multinomial_distribut": 217, "r920": 217, "normalgamma": 217, "r921": 217, "discretemarkovchain": 217, "state_spac": 217, "trans_prob": 217, "markov": 217, "characteris": 217, "transitionmatrixof": 217, "ys": 217, "transition_prob": 217, "sunni": 217, "cloudi": 217, "raini": 217, "randomindexedsymbol": 217, "409": 217, "6963328": 217, "3096": 217, "query_gt": 217, "64705": 217, "r922": 217, "markov_chain": 217, "time_markov_chain": 217, "r923": 217, "dartmouth": 217, "teaching_aid": 217, "books_articl": 217, "probability_book": 217, "chapter11": 217, "canonical_form": 217, "transient": 217, "p_new": 217, "new_matrix": 217, "communication_class": 217, "r924": 217, "onlinelibrari": 217, "wilei": 217, "1002": 217, "9780470316887": 217, "app1": 217, "r925": 217, "columbia": 217, "ww2040": 217, "6711f12": 217, "lect1023big": 217, "is_recurr": 217, "tarjan": [217, 235], "r926": 217, "4701sum07": 217, "4701": 217, "mcii": 217, "r927": 217, "ceca": 217, "clemson": 217, "shierd": 217, "shier": 217, "r928": 217, "ujcont": 217, "uj": 217, "7506": 217, "content1": 217, "r929": 217, "econ": 217, "dtmc": 217, "reccur": 217, "r930": 217, "absorbing_markov_chain": 217, "r931": 217, "brandei": 217, "igusa": 217, "math56as08": 217, "math56a_s08_notes015": 217, "fixed_row_vector": 217, "stationary_distribut": 217, "fundamental_matrix": 217, "r932": 217, "lip": 217, "limiting_distribut": 217, "condition_set": 217, "wm": 217, "r933": 217, "probabilitycours": 217, "11_2_6_stationary_and_limiting_distribut": 217, "r934": 217, "galton": 217, "uchicago": 217, "yibi": 217, "stat317": 217, "lecture4_6up": 217, "continuousmarkovchain": 217, "gen_mat": 217, "generator_matrix": 217, "45279": 217, "58602": 217, "37933": 217, "34211": 217, "7143": 217, "4002723175": 217, "6832579186": 217, "r935": 217, "r936": 217, "biu": 217, "il": 217, "amirgi": 217, "ctmcnote": 217, "bernoulliprocess": 217, "processs": 217, "joint_distribut": 217, "jointdistributionhandmad": 217, "r937": 217, "bernoulli_process": 217, "r938": 217, "mathc": 217, "clarku": 217, "djoyc": 217, "ma217": 217, "given_condit": 217, "poissonprocess": 217, "648": 217, "r939": 217, "11_0_0_intro": 217, "r940": 217, "poisson_point_process": 217, "wiener": 217, "brownian": 217, "scottish": 217, "botanist": 217, "r941": 217, "11_4_0_brownian_motion_wiener_process": 217, "r942": 217, "wiener_process": 217, "gammaprocess": 217, "jump": [217, 273], "472": 217, "r943": 217, "gamma_process": 217, "matrixgamma": 217, "scale_matrix": 217, "r944": 217, "matrix_gamma_distribut": 217, "wishart": 217, "r945": 217, "wishart_distribut": 217, "matrixnorm": 217, "location_matrix": 217, "scale_matrix_1": 217, "scale_matrix_2": 217, "r946": 217, "matrix_normal_distribut": 217, "compound_rv": 217, "compounddistribut": 217, "crv_type": 217, "r947": 217, "compound_probability_distribut": 217, "numsampl": 217, "evaluate_integr": 217, "r948": 217, "entropy_": 217, "information_theori": 217, "r949": 217, "crmarsh": 217, "charles_marsh_continuous_entropi": 217, "r950": 217, "uconn": 217, "kconrad": 217, "blurb": 217, "entropypost": 217, "arg1": 217, "arg2": 217, "cexpr": 217, "coskew": 217, "sigma_": 217, "r951": 217, "r952": 217, "probability_distribut": 217, "randomst": 217, "die_rol": 217, "samp": 217, "pspace": 217, "samp_list": 217, "sam": 217, "42519758": 217, "40207856": 217, "94991743": 217, "85819627": 217, "83403519": 217, "9412172": 217, "85768055": 217, "38954165": 217, "11163337": 217, "3176591": 217, "79115232": 217, "63232916": 217, "01747268": 217, "96716083": 217, "sampling_p": 217, "sampling_": 217, "factorial_mo": 217, "r953": 217, "r954": 217, "factorialmo": 217, "kurtosi": 217, "outlier": 217, "sigma_x": 217, "r955": 217, "r956": 217, "asymmetri": 217, "pearson": 217, "sampling_dens": 217, "centralmo": 217, "cmoment": 217, "expectationmatrix": 217, "randommatrixsymbol": 217, "n11": 217, "n12": 217, "n21": 217, "n22": 217, "variancematrix": 217, "crosscovariancematrix": 217, "randomdomain": 217, "probabilist": 217, "singledomain": 217, "singlepspac": 217, "productdomain": 217, "productpspac": 217, "adject": 217, "conditionaldomain": 217, "frv": 217, "finitedomain": 217, "finitepspac": 217, "crv": 217, "continuousdomain": 217, "continuouspspac": 217, "diepspac": 217, "singlefinitepspac": 217, "normalpspac": 217, "singlecontinuouspspac": 217, "frv_type": 217, "randomvari": 217, "tactic": 217, "random_symbol": 217, "rs_swap": 217, "pspace1": 217, "pspace2": 217, "immutabledensendimarrai": 218, "tomatrix": 218, "j_m": 218, "i_a": 218, "i_b": 218, "sum_k": 218, "tensorcontract": [218, 219], "tensordiagon": [218, 219], "derive_by_arrai": 218, "sum_m": 218, "immutablesparsendimarrai": 218, "mutabledensendimarrai": 218, "mutablesparsendimarrai": 218, "index_order_old": 218, "index_order_new": 218, "cab": 218, "contraction_ax": 218, "diagonal_ax": 218, "arraycontract": 219, "arraydiagon": 219, "arraysymbol": 219, "convert_indexed_to_arrai": 219, "arrayadd": 219, "convert_matrix_to_arrai": 219, "convert_array_to_matrix": 219, "expr_tr": 219, "array_der": 219, "index_method": 221, "get_contraction_structur": [221, 222], "deepest": 221, "nested_contract": 221, "get_indic": [221, 222, 223, 224], "indexconformanceexcept": 221, "______": 222, "stem": 222, "dim1": 222, "dim2": 222, "qwerti": 222, "a_ij": 222, "b_ij": 222, "syntact": 222, "a_real": 222, "c_inherit": 222, "c_explicit": 222, "unrol": 222, "tensorindextyp": [223, 224], "eps_dim": 223, "metric_nam": 223, "su": 223, "lorentz": 223, "tensor_index_typ": 223, "is_up": 223, "tensor_inde_typ": 223, "typ": 223, "tensorhead": [223, 224], "index_typ": 223, "tensorsymmetri": 223, "monoterm": 223, "_tensormanag": 223, "set_comm": 223, "asym2": 223, "fully_symmetr": 223, "tensori": [223, 224], "repl": 223, "e_z": 223, "no_symmetri": 223, "p_x": 223, "p_y": 223, "p_z": 223, "ipos1": 223, "ipos2": 223, "icomp1": 223, "icomp2": 223, "nameless": 223, "replacement_dict": 223, "free_arg": 223, "addend": 223, "canon_bp": 223, "contract_metr": 223, "contract_al": 223, "ipo": 223, "icomp": 223, "nonrep": 223, "dum": 223, "ext_rank": 223, "is_canon_bp": 223, "m0": 223, "get_free_indic": [223, 224], "perm2tensor": 223, "tid": 223, "sorted_compon": 223, "riemann_cyclic_replac": 223, "riemann_cycl": 223, "cadabra": 223, "multiterm": 223, "bianchi": 223, "sym2": 223, "direct_product": 223, "monotorem": 223, "tableaux": 223, "tensortyp": 223, "repetit": [223, 235], "tensormanag": 223, "comm_i2symbol": 223, "comm_symbols2i": 223, "get_comm": 223, "gcomm": 223, "ghcomm": 223, "toper": 224, "partialderiv": 224, "valenc": 224, "uncontract": 224, "compa": 224, "compb": 224, "derivand": 224, "xpass": [226, 228], "nocache_fail": 226, "expectedexcept": 226, "assertionerror": 226, "exceptioninfo": 226, "abort": 226, "9999": 226, "warningcl": [226, 233], "test_stacklevel": 226, "randtest": 227, "portabl": [228, 229], "pytestreport": 228, "force_color": 228, "readlin": 228, "sympydoctestfind": 228, "doctestpars": 228, "exclude_empti": 228, "sympydoctestrunn": 228, "checker": 228, "optionflag": 228, "5140": 228, "doctestrunn": 228, "clear_glob": 228, "writer": 228, "garbag": 228, "check_output": 228, "report_": 228, "sympyoutputcheck": 228, "outputcheck": 228, "stdlib": 228, "testrunn": 228, "sympytestresult": 228, "convert_to_native_path": 228, "lst": 228, "blacklist": 228, "get_sympy_dir": 228, "raise_on_deprec": 228, "deprecationwarn": [228, 233], "run_all_test": 228, "test_arg": 228, "test_kwarg": 228, "doctest_arg": 228, "doctest_kwarg": 228, "examples_arg": 228, "examples_kwarg": 228, "run_in_subprocess_with_hash_random": 228, "function_kwarg": 228, "virtualenv": 228, "pythonhashse": 228, "_test": 228, "split_list": 228, "sympytestfil": 228, "module_rel": 228, "extraglob": 228, "raise_on_error": 228, "basenam": [228, 229, 230], "slate": 228, "dont_accept_true_for_1": 228, "dont_accept_blanklin": 228, "normalize_whitespac": 228, "ellipsi": 228, "ignore_exception_detail": 228, "report_udiff": 228, "report_cdiff": 228, "report_ndiff": 228, "report_only_first_failur": 228, "mortem": 228, "tomfooleri": 228, "testmod": 228, "tester": 228, "fiddl": [228, 273], "timeout": 228, "keyboardinterrupt": 228, "interrupt": 228, "_basic": 228, "kw": 228, "test_equ": 228, "pdb": 228, "pipe": 228, "time_bal": 228, "tandem": 229, "matvec": 229, "codewrapp": 229, "distutil": 229, "fwrap": 229, "swig": 229, "binary_cal": 229, "22925376": 229, "25165824": 229, "_imp_": [229, 236], "filepath": 229, "cythoncodewrapp": 229, "dump_pyx": 229, "dummywrapp": 229, "f2pycodewrapp": 229, "ufuncifycodewrapp": 229, "dump_c": [229, 230], "funcnam": 229, "code_gen": [229, 230], "argument_tupl": 229, "include_dir": 229, "library_dir": 229, "extra_compile_arg": 229, "extra_link_arg": 229, "symfunc": [229, 236], "funtion_nam": 229, "ndimension": 229, "f_fortran": 229, "f_cython": 229, "r957": 229, "fortran77": 230, "fortran90": 230, "julia": [230, 260], "rust": [230, 260], "mileston": 230, "unsurmount": 230, "pyf": 230, "inputoutput": 230, "tcc": 230, "libtcc": 230, "date": 230, "hostnam": 230, "sha1": 230, "ccodegen": 230, "preprocessor_stat": 230, "dump_h": 230, "guard": 230, "get_prototyp": 230, "codegenerror": 230, "function_prototyp": 230, "dump_cod": 230, "cname": 230, "fname": 230, "pynam": 230, "jlname": 230, "octnam": 230, "rsname": 230, "fcodegen": 230, "f90": 230, "dump_f95": 230, "get_interfac": 230, "juliacodegen": 230, "dump_jl": 230, "octavecodegen": 230, "dump_m": 230, "returnvalu": 230, "destin": 230, "local_var": 230, "result_vari": 230, "ot": 230, "unnam": 230, "rustcodegen": 230, "dump_r": 230, "f_result": 230, "myfcn": 230, "fcn2": 230, "myfcn_result": 230, "void": 230, "get_default_datatyp": 230, "complex_allow": 230, "agnost": 230, "conserve_mpmath_dp": 231, "doctest_depends_on": 231, "disable_view": 231, "python_vers": 231, "memoize_properti": 231, "propfunc": 231, "no_attrs_in_subclass": 231, "__all__": 231, "some_funct": 231, "thread": 231, "xthread": 231, "threaded_factori": 231, "use_add": 231, "multiset_partitions_taocp": 232, "visitor": 232, "pstack": 232, "lpart": 232, "topmost": 232, "partcompon": 232, "peek": [232, 273], "unpredict": 232, "list_visitor": 232, "abb": [232, 235], "factoring_visitor": 232, "multisetpartitiontravers": 232, "aocp": 232, "count_partit": 232, "127750": 232, "686": 232, "4a": 232, "factorisatio": 232, "oppenheim": 232, "numerorum": 232, "canfield": 232, "erdo": 232, "OF": 232, "yorgei": 232, "monad": 232, "persist": 232, "288716": 232, "memoiz": [232, 234, 260], "dramat": 232, "hypothet": 232, "borrow": 232, "coalesc": 232, "_rang": 232, "stretch": 232, "brain": 232, "histogram": 232, "enum_al": 232, "enum_larg": 232, "enum_rang": 232, "enum_smal": 232, "ub": 232, "parti": 233, "catch_warn": 233, "simplefilt": 233, "dedent": [233, 238], "enum": [234, 260], "pkgdata": [234, 260], "kbin": 235, "partion": 235, "bcd": 235, "notiter": 235, "binary_partit": 235, "r958": 235, "taocp": 235, "nx": 235, "common_prefix": 235, "common_suffix": 235, "unhash": 235, "r959": 235, "connected_component_": 235, "graph_theori": 235, "r960": 235, "27s_strongly_connected_components_algorithm": 235, "dict_merg": 235, "filter_symbol": 235, "ls": 235, "myop": 235, "kog": 235, "informatik": 235, "hamburg": 235, "mein": 235, "python_trick": 235, "neighbor": 235, "xxxxxx": 235, "xxxx": 235, "r961": 235, "method_ring": 235, "r962": 235, "4856615": 235, "4857018": 235, "r963": 235, "programminggeek": 235, "r964": 235, "steinhau": 235, "93johnson": 235, "93trotter_algorithm": 235, "r965": 235, "involut": 235, "eco": 235, "vajnovszki": 235, "dmtc": 235, "generate_involut": 235, "r966": 235, "permutationinvolut": 235, "generate_oriented_forest": 235, "forest": 235, "acycl": 235, "r967": 235, "beyer": 235, "hedetniemi": 235, "novemb": 235, "r968": 235, "1633833": 235, "has_dup": 235, "has_varieti": 235, "iproduct": 235, "abcbb": 235, "is_sequ": 235, "generatortyp": 235, "_iter": 235, "ordered_flag": 235, "least_rot": 235, "rotate_left": 235, "r969": 235, "lexicographically_minimal_string_rot": 235, "minlex": 235, "acb": 235, "11010011000": 235, "00011010011": 235, "00011001011": 235, "aaa": 235, "abi": 235, "bby": 235, "abracadabra": 235, "banana": 235, "multiset_derang": 235, "uniq": 235, "1233": 235, "3312": 235, "3321": 235, "aba": 235, "baa": 235, "bead": 235, "ooo": 235, "r970": 235, "ordered_partit": 235, "r971": 235, "jeromekelleh": 235, "r972": 235, "jerom": 235, "kelleh": 235, "barri": 235, "sullivan": 235, "0909": 235, "2331v2": 235, "r973": 235, "activest": 235, "218332": 235, "postfix": 235, "random_derang": 235, "reseed": 235, "templat": 235, "rotate_right": 235, "roundrobin": 235, "ef": 235, "credit": [235, 258], "sakki": 235, "keyfunc": 235, "subgraph": 235, "r974": 235, "r975": 235, "longest": 235, "r976": 235, "unflatten": 235, "afunc": 236, "lam_f": 236, "lambdastr": 236, "dummifi": 236, "use_imp": 236, "custom_sin": 236, "38177329": 236, "49315059": 236, "8414709848078965": 236, "eager": 236, "enable_eager_execut": 236, "eagertensor": 236, "__class__": 236, "placehold": 236, "user_guid": 236, "runtimewarn": 236, "sin_cos_sympi": 236, "sin_co": 236, "sin_cos_numpi": 236, "38177329068": 236, "module_dictionari": 236, "_lambdifygener": 236, "__globals__": 236, "lambdaprint": [236, 260], "90929743": [236, 262], "assoc_recurrence_memo": 237, "base_seq": 237, "memo": 237, "pn0": 237, "recurrence_memo": 237, "specfun": 237, "__index__": 238, "sanit": 238, "99999999999999991611392": 238, "debug_decor": 238, "fillded": 238, "strline": 238, "rawlin": 238, "find_execut": 238, "pathsep": 238, "strictlessthan": 238, "pastabl": 238, "bee": 238, "spamham": 238, "sha": 238, "spam": 238, "egg": 238, "md5": 238, "eggsham": 238, "r977": 238, "6116978": 238, "roken": 238, "deletechar": 238, "multicharact": 238, "oldchar": 238, "newchar": 238, "acquir": 239, "getresourc": 239, "idiom": [239, 265, 266], "pkgname": 239, "pkgpath": 239, "dirnam": 239, "normpath": 239, "rb": 239, "__loader__": 239, "stringio": 239, "get_resourc": 239, "ioerror": 239, "mydata": 239, "mypkgdata": 239, "jpg": 239, "get_class": 240, "lookup_view": 240, "get_mod_func": 240, "callback": 240, "timeutil": 241, "coordsysrect": 242, "rotation_matrix": [242, 243, 246], "vector_nam": 242, "variable_nam": [242, 248], "latex_vect": 242, "pretty_vect": 242, "latex_scalar": 242, "pretty_scalar": 242, "new_system": 242, "create_new": [242, 246], "transformation_to_par": 242, "transformation_from_par": 242, "locate_new": [242, 244, 245, 246, 247, 248], "position_wrt": [242, 245, 246, 247], "orient_new": [242, 243], "axisorient": [242, 246, 249], "axis_orient": [242, 246], "bodyorient": [242, 246, 249], "body_orient": [242, 243, 246], "spaceorient": [242, 246, 249], "space_orient": [242, 243], "quaternionorient": [242, 246, 249], "q_orient": [242, 243], "orient_new_axi": [242, 244, 246], "orient_new_bodi": [242, 246], "angle1": [242, 243], "angle2": [242, 243], "angle3": [242, 243], "euler_angl": [242, 243], "orient_new_quaternion": [242, 246], "orient_new_spac": [242, 246], "coordsyrect": 242, "v_a": 242, "v_b": 242, "scalar_map": 242, "basevector": [242, 245, 246], "delop": [242, 247, 248], "r978": 242, "r979": 242, "basedyad": [242, 245], "second_system": 242, "deloper": [242, 249], "curl": [242, 249, 251], "parabola": 242, "rational_parametr": 242, "singular_point": 242, "regular_point": 242, "reg_point": 242, "implict": 242, "cubic_curv": 242, "calulc": 242, "hoffmann": 242, "purdu": 242, "lib": 242, "cgi": 242, "viewcont": 242, "1827": 242, "cstech": 242, "erik": 242, "hillgart": 242, "diploma": 242, "linz": 242, "universitat": 242, "availa": 242, "risc_1355": 242, "20point": 242, "20on": 242, "20conic": 242, "semispher": [242, 251], "coordsys3d": [243, 244, 245, 247, 248, 249, 251], "axis_orienter1": 243, "axis_orienter2": 243, "axis_orienter3": 243, "body_orienter1": 243, "body_orienter2": 243, "body_orienter3": 243, "system2": 244, "parametricregion": [244, 249, 251], "implicitregion": [244, 249, 251], "essenc": 245, "vectormul": 245, "vectoradd": 245, "ofcours": 245, "vectorzero": 245, "expressli": 245, "express_coordin": [245, 246], "dyadicmul": 245, "dyadicadd": 245, "cleanest": 246, "orient_new_": 246, "attain": 246, "basescalar": [246, 248], "oabc": 247, "oa": 247, "pq": 247, "sr": 247, "wikidel": 247, "ffield": 247, "gradient_field": 248, "instantan": 248, "directional_deriv": 248, "lame": 248, "quadrilater": 249, "flux": 249, "parametricintegr": 249, "matrix_to_vector": 249, "vector_integr": [249, 251], "dyadicproduct": 249, "quantifi": 250, "throughtout": 250, "necesssari": 251, "param_circl": 251, "implicit_circl": 251, "obextj": 251, "solidspher": 251, "lamina": 251, "\ud835\udc45": 251, "cylind": 251, "vectorfield": 251, "hemispher": 251, "top_fac": 251, "bottom_fac": 251, "27_theorem": 251, "cone": 251, "divergence_theorem": 251, "12288": 251, "subcategori": 252, "cnode": 254, "cxxnode": 254, "fnode": 254, "pyutil": 254, "cutil": 254, "futil": 254, "ecm": 257, "copyright": 258, "truss": 258, "pappu": 259, "hexagon": 259, "prettyprint": 260, "rcodeprint": 260, "javascript": [260, 272], "gtk": 260, "mathmlprint": 260, "pythoncodeprint": 260, "pythonprint": 260, "dotprint": [260, 268, 272], "str_expr": 262, "82842712474619": 262, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 262, "0874989834394464": 262, "roundoff": 262, "14112001": 262, "7568025": 262, "95892427": 262, "2794155": 262, "6569866": 262, "98935825": 262, "41211849": 262, "0998334166468": 262, "sympy_nam": 262, "numerical_funct": 262, "rephras": 263, "oh": 263, "integration_vari": 263, "dfdx": 263, "equidistantli": 263, "d2fdx2": 263, "django": 265, "oop": 265, "crazi": 265, "abcdef": 265, "reevalu": 265, "infal": 265, "insight": 266, "entertain": 266, "preliminari": 266, "82842712475": 267, "cass": 267, "wrote": [267, 268], "theme": 267, "expanded_expr": 267, "whet": 267, "appetit": 267, "c\u2082": [267, 274], "c\u2081": [267, 274], "\u03bd": 267, "sell": 267, "battl": 267, "confid": 267, "gigabyt": 267, "tear": 268, "rebuilt": 268, "stopper": 268, "uexpr": 268, "unevalutedexpr": 268, "downsid": 269, "algebraic_multipl": 269, "pdp": 269, "\u03bb": 269, "undertest": 269, "underevalu": 269, "my_iszero": 269, "stronger": 269, "tradeoff": 269, "wonder": 269, "5b7c3e8ee5b40332abdb206c": 269, "15141": 269, "19548": 269, "10120": 269, "10279": 269, "constant_problem": 269, "possiblezeroq": 269, "mupad_ref": 269, "iszero": 269, "congratul": 270, "decent": 271, "austin": 271, "video": 271, "bvar": 272, "unnecessarili": 273, "whittl": 273, "catchal": 273, "sound": 273, "collected_expr": 273, "cdot1": 273, "undertak": 273, "undon": 273, "cdot2": 273, "nck": 273, "pronounc": 273, "_2f_1": 273, "cfrac": 273, "list_to_frac": 273, "a\u2080": 273, "a\u2083": 273, "a\u2084": 273, "pointless": 273, "orig_frac": 273, "diffeq": 274}, "objects": {"": [[21, 0, 0, "-", "sympy"]], "sympy": [[23, 0, 0, "-", "abc"], [24, 0, 0, "-", "algebras"], [27, 0, 0, "-", "assumptions"], [30, 0, 0, "-", "calculus"], [31, 0, 0, "-", "categories"], [52, 0, 0, "-", "diffgeom"], [53, 0, 0, "-", "discrete"], [57, 0, 0, "-", "functions"], [70, 0, 0, "-", "holonomic"], [77, 0, 0, "-", "integrals"], [78, 0, 0, "-", "interactive"], [79, 0, 0, "-", "liealgebras"], [80, 0, 0, "-", "logic"], [85, 0, 0, "-", "matrices"], [92, 0, 0, "-", "parsing"], [258, 0, 0, "-", "physics"], [193, 0, 0, "-", "polys"], [215, 0, 0, "-", "solvers"], [217, 0, 0, "-", "stats"], [220, 0, 0, "-", "tensor"], [225, 0, 0, "-", "testing"], [234, 0, 0, "-", "utilities"], [249, 0, 0, "-", "vector"]], "sympy.algebras": [[24, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[24, 2, 1, "", "add"], [24, 2, 1, "", "angle"], [24, 2, 1, "", "arc_coplanar"], [24, 2, 1, "", "axis"], [24, 2, 1, "", "exp"], [24, 2, 1, "", "from_axis_angle"], [24, 2, 1, "", "from_rotation_matrix"], [24, 2, 1, "", "index_vector"], [24, 2, 1, "", "integrate"], [24, 2, 1, "", "inverse"], [24, 2, 1, "", "is_pure"], [24, 2, 1, "", "is_zero_quaternion"], [24, 2, 1, "", "mensor"], [24, 2, 1, "", "mul"], [24, 2, 1, "", "norm"], [24, 2, 1, "", "normalize"], [24, 2, 1, "", "orthogonal"], [24, 2, 1, "", "parallel"], [24, 2, 1, "", "pow"], [24, 2, 1, "", "pow_cos_sin"], [24, 2, 1, "", "rotate_point"], [24, 2, 1, "", "scalar_part"], [24, 2, 1, "", "to_axis_angle"], [24, 2, 1, "", "to_rotation_matrix"], [24, 2, 1, "", "vector_coplanar"], [24, 2, 1, "", "vector_part"]], "sympy.assumptions": [[25, 0, 0, "-", "ask"], [26, 0, 0, "-", "assume"], [28, 0, 0, "-", "predicates"], [29, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[25, 1, 1, "", "AssumptionKeys"], [25, 3, 1, "", "ask"], [25, 3, 1, "", "register_handler"], [25, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[26, 1, 1, "", "AppliedPredicate"], [26, 1, 1, "", "AssumptionsContext"], [26, 1, 1, "", "Predicate"], [26, 1, 1, "", "UndefinedPredicate"], [26, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[26, 4, 1, "", "arg"], [26, 4, 1, "", "arguments"], [26, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[26, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[26, 2, 1, "", "eval"], [26, 5, 1, "", "handler"], [26, 2, 1, "", "register"], [26, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[28, 1, 1, "", "FinitePredicate"], [28, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[28, 1, 1, "", "CommutativePredicate"], [28, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[28, 1, 1, "", "ComplexElementsPredicate"], [28, 1, 1, "", "DiagonalPredicate"], [28, 1, 1, "", "FullRankPredicate"], [28, 1, 1, "", "IntegerElementsPredicate"], [28, 1, 1, "", "InvertiblePredicate"], [28, 1, 1, "", "LowerTriangularPredicate"], [28, 1, 1, "", "NormalPredicate"], [28, 1, 1, "", "OrthogonalPredicate"], [28, 1, 1, "", "PositiveDefinitePredicate"], [28, 1, 1, "", "RealElementsPredicate"], [28, 1, 1, "", "SingularPredicate"], [28, 1, 1, "", "SquarePredicate"], [28, 1, 1, "", "SymmetricPredicate"], [28, 1, 1, "", "TriangularPredicate"], [28, 1, 1, "", "UnitTriangularPredicate"], [28, 1, 1, "", "UnitaryPredicate"], [28, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[28, 1, 1, "", "CompositePredicate"], [28, 1, 1, "", "EvenPredicate"], [28, 1, 1, "", "OddPredicate"], [28, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[28, 1, 1, "", "NegativePredicate"], [28, 1, 1, "", "NonNegativePredicate"], [28, 1, 1, "", "NonPositivePredicate"], [28, 1, 1, "", "NonZeroPredicate"], [28, 1, 1, "", "PositivePredicate"], [28, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[28, 1, 1, "", "AlgebraicPredicate"], [28, 1, 1, "", "AntihermitianPredicate"], [28, 1, 1, "", "ComplexPredicate"], [28, 1, 1, "", "ExtendedRealPredicate"], [28, 1, 1, "", "HermitianPredicate"], [28, 1, 1, "", "ImaginaryPredicate"], [28, 1, 1, "", "IntegerPredicate"], [28, 1, 1, "", "IrrationalPredicate"], [28, 1, 1, "", "RationalPredicate"], [28, 1, 1, "", "RealPredicate"], [28, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[28, 5, 1, "", "AlgebraicHandler"], [28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[28, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[29, 3, 1, "", "refine"], [29, 3, 1, "", "refine_Pow"], [29, 3, 1, "", "refine_abs"], [29, 3, 1, "", "refine_arg"], [29, 3, 1, "", "refine_atan2"], [29, 3, 1, "", "refine_im"], [29, 3, 1, "", "refine_matrixelement"], [29, 3, 1, "", "refine_re"], [29, 3, 1, "", "refine_sign"]], "sympy.calculus": [[30, 0, 0, "-", "euler"], [30, 0, 0, "-", "finite_diff"], [30, 0, 0, "-", "singularities"], [30, 0, 0, "-", "util"]], "sympy.calculus.euler": [[30, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[30, 3, 1, "", "apply_finite_diff"], [30, 3, 1, "", "differentiate_finite"], [30, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[30, 3, 1, "", "is_decreasing"], [30, 3, 1, "", "is_increasing"], [30, 3, 1, "", "is_monotonic"], [30, 3, 1, "", "is_strictly_decreasing"], [30, 3, 1, "", "is_strictly_increasing"], [30, 3, 1, "", "monotonicity_helper"], [30, 3, 1, "", "singularities"]], "sympy.calculus.util": [[30, 3, 1, "", "continuous_domain"], [30, 3, 1, "", "function_range"], [30, 3, 1, "", "is_convex"], [30, 3, 1, "", "lcim"], [30, 3, 1, "", "maximum"], [30, 3, 1, "", "minimum"], [30, 3, 1, "", "not_empty_in"], [30, 3, 1, "", "periodicity"], [30, 3, 1, "", "stationary_points"]], "sympy.categories": [[31, 1, 1, "", "Category"], [31, 1, 1, "", "CompositeMorphism"], [31, 1, 1, "", "Diagram"], [31, 1, 1, "", "IdentityMorphism"], [31, 1, 1, "", "Morphism"], [31, 1, 1, "", "NamedMorphism"], [31, 1, 1, "", "Object"], [31, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[31, 4, 1, "", "commutative_diagrams"], [31, 4, 1, "", "name"], [31, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[31, 4, 1, "", "codomain"], [31, 4, 1, "", "components"], [31, 4, 1, "", "domain"], [31, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[31, 4, 1, "", "conclusions"], [31, 2, 1, "", "hom"], [31, 2, 1, "", "is_subdiagram"], [31, 4, 1, "", "objects"], [31, 4, 1, "", "premises"], [31, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[31, 4, 1, "", "codomain"], [31, 2, 1, "", "compose"], [31, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[31, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[31, 1, 1, "", "ArrowStringDescription"], [31, 1, 1, "", "DiagramGrid"], [31, 1, 1, "", "XypicDiagramDrawer"], [31, 3, 1, "", "preview_diagram"], [31, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[31, 4, 1, "", "height"], [31, 4, 1, "", "morphisms"], [31, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[31, 2, 1, "", "draw"]], "sympy.codegen": [[32, 0, 0, "-", "algorithms"], [32, 0, 0, "-", "approximations"], [32, 0, 0, "-", "ast"], [32, 0, 0, "-", "cfunctions"], [32, 0, 0, "-", "cnodes"], [32, 0, 0, "-", "cutils"], [32, 0, 0, "-", "cxxnodes"], [32, 0, 0, "-", "fnodes"], [32, 0, 0, "-", "futils"], [32, 0, 0, "-", "matrix_nodes"], [32, 0, 0, "-", "pyutils"], [32, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[32, 3, 1, "", "newtons_method"], [32, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[32, 1, 1, "", "SeriesApprox"], [32, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[32, 1, 1, "", "Assignment"], [32, 1, 1, "", "AssignmentBase"], [32, 1, 1, "", "Attribute"], [32, 1, 1, "", "AugmentedAssignment"], [32, 1, 1, "", "BreakToken"], [32, 1, 1, "", "CodeBlock"], [32, 1, 1, "", "Comment"], [32, 1, 1, "", "ComplexType"], [32, 1, 1, "", "ContinueToken"], [32, 1, 1, "", "Declaration"], [32, 1, 1, "", "Element"], [32, 1, 1, "", "FloatBaseType"], [32, 1, 1, "", "FloatType"], [32, 1, 1, "", "For"], [32, 1, 1, "", "FunctionCall"], [32, 1, 1, "", "FunctionDefinition"], [32, 1, 1, "", "FunctionPrototype"], [32, 1, 1, "", "IntBaseType"], [32, 1, 1, "", "Node"], [32, 1, 1, "", "NoneToken"], [32, 1, 1, "", "Pointer"], [32, 1, 1, "", "Print"], [32, 1, 1, "", "QuotedString"], [32, 1, 1, "", "Return"], [32, 1, 1, "", "Scope"], [32, 1, 1, "", "SignedIntType"], [32, 1, 1, "", "Stream"], [32, 1, 1, "", "String"], [32, 1, 1, "", "Token"], [32, 1, 1, "", "Type"], [32, 1, 1, "", "UnsignedIntType"], [32, 1, 1, "", "Variable"], [32, 1, 1, "", "While"], [32, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[32, 2, 1, "", "cse"], [32, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[32, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[32, 2, 1, "", "cast_nocheck"], [32, 4, 1, "", "decimal_dig"], [32, 4, 1, "", "dig"], [32, 4, 1, "", "eps"], [32, 4, 1, "", "max"], [32, 4, 1, "", "max_exponent"], [32, 4, 1, "", "min_exponent"], [32, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[32, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[32, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[32, 2, 1, "", "cast_check"], [32, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[32, 2, 1, "", "as_Declaration"], [32, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[32, 1, 1, "", "Cbrt"], [32, 1, 1, "", "Sqrt"], [32, 1, 1, "", "exp2"], [32, 1, 1, "", "expm1"], [32, 1, 1, "", "fma"], [32, 1, 1, "", "hypot"], [32, 1, 1, "", "log10"], [32, 1, 1, "", "log1p"], [32, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[32, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[32, 1, 1, "", "CommaOperator"], [32, 1, 1, "", "Label"], [32, 1, 1, "", "PostDecrement"], [32, 1, 1, "", "PostIncrement"], [32, 1, 1, "", "PreDecrement"], [32, 1, 1, "", "PreIncrement"], [32, 3, 1, "", "alignof"], [32, 1, 1, "", "goto"], [32, 3, 1, "", "sizeof"], [32, 1, 1, "", "struct"], [32, 1, 1, "", "union"]], "sympy.codegen.cutils": [[32, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[32, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[32, 1, 1, "", "ArrayConstructor"], [32, 1, 1, "", "Do"], [32, 1, 1, "", "Extent"], [32, 1, 1, "", "FortranReturn"], [32, 1, 1, "", "GoTo"], [32, 1, 1, "", "ImpliedDoLoop"], [32, 1, 1, "", "Module"], [32, 1, 1, "", "Program"], [32, 1, 1, "", "Subroutine"], [32, 1, 1, "", "SubroutineCall"], [32, 3, 1, "", "allocated"], [32, 3, 1, "", "array"], [32, 3, 1, "", "bind_C"], [32, 1, 1, "", "cmplx"], [32, 3, 1, "", "dimension"], [32, 1, 1, "", "dsign"], [32, 1, 1, "", "isign"], [32, 1, 1, "", "kind"], [32, 3, 1, "", "lbound"], [32, 1, 1, "", "literal_dp"], [32, 1, 1, "", "literal_sp"], [32, 1, 1, "", "merge"], [32, 3, 1, "", "reshape"], [32, 3, 1, "", "shape"], [32, 3, 1, "", "size"], [32, 1, 1, "", "use"], [32, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[32, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[32, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[32, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[32, 1, 1, "", "FuncMinusOneOptim"], [32, 1, 1, "", "Optimization"], [32, 1, 1, "", "ReplaceOptim"], [32, 3, 1, "", "create_expand_pow_optimization"], [32, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[32, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[42, 0, 0, "-", "generators"], [34, 0, 0, "-", "graycode"], [35, 0, 0, "-", "group_constructs"], [36, 0, 0, "-", "group_numbers"], [38, 0, 0, "-", "named_groups"], [39, 0, 0, "-", "partitions"], [41, 0, 0, "-", "perm_groups"], [42, 0, 0, "-", "permutations"], [43, 0, 0, "-", "polyhedron"], [44, 0, 0, "-", "prufer"], [45, 0, 0, "-", "subsets"], [46, 0, 0, "-", "tensor_can"], [47, 0, 0, "-", "testutil"], [48, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[42, 2, 1, "", "alternating"], [42, 2, 1, "", "cyclic"], [42, 2, 1, "", "dihedral"], [42, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[34, 1, 1, "", "GrayCode"], [34, 2, 1, "", "bin_to_gray"], [34, 2, 1, "", "get_subset_from_bitstring"], [34, 2, 1, "", "gray_to_bin"], [34, 2, 1, "", "graycode_subsets"], [34, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[34, 4, 1, "", "current"], [34, 2, 1, "", "generate_gray"], [34, 4, 1, "", "n"], [34, 2, 1, "", "next"], [34, 4, 1, "", "rank"], [34, 4, 1, "", "selections"], [34, 2, 1, "", "skip"], [34, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[35, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[36, 3, 1, "", "is_abelian_number"], [36, 3, 1, "", "is_cyclic_number"], [36, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[38, 3, 1, "", "AbelianGroup"], [38, 3, 1, "", "AlternatingGroup"], [38, 3, 1, "", "CyclicGroup"], [38, 3, 1, "", "DihedralGroup"], [38, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[39, 1, 1, "", "IntegerPartition"], [39, 1, 1, "", "Partition"], [39, 3, 1, "", "RGS_enum"], [39, 3, 1, "", "RGS_generalized"], [39, 3, 1, "", "RGS_rank"], [39, 3, 1, "", "RGS_unrank"], [39, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[39, 2, 1, "", "as_dict"], [39, 2, 1, "", "as_ferrers"], [39, 4, 1, "", "conjugate"], [39, 2, 1, "", "next_lex"], [39, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[39, 4, 1, "", "RGS"], [39, 2, 1, "", "from_rgs"], [39, 4, 1, "", "partition"], [39, 4, 1, "", "rank"], [39, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[41, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[41, 2, 1, "", "__contains__"], [41, 2, 1, "", "__mul__"], [41, 2, 1, "", "__new__"], [41, 5, 1, "", "__weakref__"], [41, 2, 1, "", "_coset_representative"], [41, 2, 1, "", "_distinct_primes_lemma"], [41, 4, 1, "", "_elements"], [41, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [41, 2, 1, "", "_eval_is_alt_sym_naive"], [41, 2, 1, "", "_p_elements_group"], [41, 2, 1, "", "_random_pr_init"], [41, 2, 1, "", "_sylow_alt_sym"], [41, 2, 1, "", "_union_find_merge"], [41, 2, 1, "", "_union_find_rep"], [41, 2, 1, "", "_verify"], [41, 2, 1, "", "abelian_invariants"], [41, 4, 1, "", "base"], [41, 2, 1, "", "baseswap"], [41, 4, 1, "", "basic_orbits"], [41, 4, 1, "", "basic_stabilizers"], [41, 4, 1, "", "basic_transversals"], [41, 2, 1, "", "center"], [41, 2, 1, "", "centralizer"], [41, 2, 1, "", "commutator"], [41, 2, 1, "", "composition_series"], [41, 2, 1, "", "conjugacy_class"], [41, 2, 1, "", "conjugacy_classes"], [41, 2, 1, "", "contains"], [41, 2, 1, "", "coset_factor"], [41, 2, 1, "", "coset_rank"], [41, 2, 1, "", "coset_table"], [41, 2, 1, "", "coset_transversal"], [41, 2, 1, "", "coset_unrank"], [41, 4, 1, "", "degree"], [41, 2, 1, "", "derived_series"], [41, 2, 1, "", "derived_subgroup"], [41, 4, 1, "", "elements"], [41, 2, 1, "", "equals"], [41, 2, 1, "", "generate"], [41, 2, 1, "", "generate_dimino"], [41, 2, 1, "", "generate_schreier_sims"], [41, 2, 1, "", "generator_product"], [41, 4, 1, "", "generators"], [41, 4, 1, "", "identity"], [41, 2, 1, "", "index"], [41, 4, 1, "", "is_abelian"], [41, 2, 1, "", "is_alt_sym"], [41, 4, 1, "", "is_alternating"], [41, 4, 1, "", "is_cyclic"], [41, 2, 1, "", "is_elementary"], [41, 4, 1, "", "is_nilpotent"], [41, 2, 1, "", "is_normal"], [41, 4, 1, "", "is_perfect"], [41, 4, 1, "", "is_polycyclic"], [41, 2, 1, "", "is_primitive"], [41, 4, 1, "", "is_solvable"], [41, 2, 1, "", "is_subgroup"], [41, 4, 1, "", "is_symmetric"], [41, 2, 1, "", "is_transitive"], [41, 4, 1, "", "is_trivial"], [41, 2, 1, "", "lower_central_series"], [41, 2, 1, "", "make_perm"], [41, 4, 1, "", "max_div"], [41, 2, 1, "", "minimal_block"], [41, 2, 1, "", "minimal_blocks"], [41, 2, 1, "", "normal_closure"], [41, 2, 1, "", "orbit"], [41, 2, 1, "", "orbit_rep"], [41, 2, 1, "", "orbit_transversal"], [41, 2, 1, "", "orbits"], [41, 2, 1, "", "order"], [41, 2, 1, "", "pointwise_stabilizer"], [41, 2, 1, "", "polycyclic_group"], [41, 2, 1, "", "presentation"], [41, 2, 1, "", "random"], [41, 2, 1, "", "random_pr"], [41, 2, 1, "", "random_stab"], [41, 2, 1, "", "schreier_sims"], [41, 2, 1, "", "schreier_sims_incremental"], [41, 2, 1, "", "schreier_sims_random"], [41, 2, 1, "", "schreier_vector"], [41, 2, 1, "", "stabilizer"], [41, 4, 1, "", "strong_gens"], [41, 2, 1, "", "strong_presentation"], [41, 2, 1, "", "subgroup"], [41, 2, 1, "", "subgroup_search"], [41, 2, 1, "", "sylow_subgroup"], [41, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[42, 1, 1, "", "Cycle"], [42, 1, 1, "", "Permutation"], [42, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[42, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[42, 2, 1, "", "apply"], [42, 4, 1, "", "array_form"], [42, 2, 1, "", "ascents"], [42, 2, 1, "", "atoms"], [42, 4, 1, "", "cardinality"], [42, 2, 1, "", "commutator"], [42, 2, 1, "", "commutes_with"], [42, 4, 1, "", "cycle_structure"], [42, 4, 1, "", "cycles"], [42, 4, 1, "", "cyclic_form"], [42, 2, 1, "", "descents"], [42, 2, 1, "", "from_inversion_vector"], [42, 2, 1, "", "from_sequence"], [42, 4, 1, "", "full_cyclic_form"], [42, 2, 1, "", "get_adjacency_distance"], [42, 2, 1, "", "get_adjacency_matrix"], [42, 2, 1, "", "get_positional_distance"], [42, 2, 1, "", "get_precedence_distance"], [42, 2, 1, "", "get_precedence_matrix"], [42, 2, 1, "", "index"], [42, 2, 1, "", "inversion_vector"], [42, 2, 1, "", "inversions"], [42, 4, 1, "", "is_Empty"], [42, 4, 1, "", "is_Identity"], [42, 4, 1, "", "is_Singleton"], [42, 4, 1, "", "is_even"], [42, 4, 1, "", "is_odd"], [42, 2, 1, "", "josephus"], [42, 2, 1, "", "length"], [42, 2, 1, "", "list"], [42, 2, 1, "", "max"], [42, 2, 1, "", "min"], [42, 2, 1, "", "mul_inv"], [42, 2, 1, "", "next_lex"], [42, 2, 1, "", "next_nonlex"], [42, 2, 1, "", "next_trotterjohnson"], [42, 2, 1, "", "order"], [42, 2, 1, "", "parity"], [42, 2, 1, "", "random"], [42, 2, 1, "", "rank"], [42, 2, 1, "", "rank_nonlex"], [42, 2, 1, "", "rank_trotterjohnson"], [42, 2, 1, "", "resize"], [42, 2, 1, "", "rmul"], [42, 2, 1, "", "rmul_with_af"], [42, 2, 1, "", "runs"], [42, 2, 1, "", "signature"], [42, 4, 1, "", "size"], [42, 2, 1, "", "support"], [42, 2, 1, "", "transpositions"], [42, 2, 1, "", "unrank_lex"], [42, 2, 1, "", "unrank_nonlex"], [42, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[43, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[43, 4, 1, "", "array_form"], [43, 4, 1, "", "corners"], [43, 4, 1, "", "cyclic_form"], [43, 4, 1, "", "edges"], [43, 4, 1, "", "faces"], [43, 4, 1, "", "pgroup"], [43, 2, 1, "", "reset"], [43, 2, 1, "", "rotate"], [43, 4, 1, "", "size"], [43, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[44, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[44, 2, 1, "", "edges"], [44, 2, 1, "", "next"], [44, 4, 1, "", "nodes"], [44, 2, 1, "", "prev"], [44, 2, 1, "", "prufer_rank"], [44, 4, 1, "", "prufer_repr"], [44, 4, 1, "", "rank"], [44, 4, 1, "", "size"], [44, 2, 1, "", "to_prufer"], [44, 2, 1, "", "to_tree"], [44, 4, 1, "", "tree_repr"], [44, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[45, 1, 1, "", "Subset"], [45, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[45, 2, 1, "", "bitlist_from_subset"], [45, 4, 1, "", "cardinality"], [45, 2, 1, "", "iterate_binary"], [45, 2, 1, "", "iterate_graycode"], [45, 2, 1, "", "next_binary"], [45, 2, 1, "", "next_gray"], [45, 2, 1, "", "next_lexicographic"], [45, 2, 1, "", "prev_binary"], [45, 2, 1, "", "prev_gray"], [45, 2, 1, "", "prev_lexicographic"], [45, 4, 1, "", "rank_binary"], [45, 4, 1, "", "rank_gray"], [45, 4, 1, "", "rank_lexicographic"], [45, 4, 1, "", "size"], [45, 4, 1, "", "subset"], [45, 2, 1, "", "subset_from_bitlist"], [45, 2, 1, "", "subset_indices"], [45, 4, 1, "", "superset"], [45, 4, 1, "", "superset_size"], [45, 2, 1, "", "unrank_binary"], [45, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[46, 3, 1, "", "bsgs_direct_product"], [46, 3, 1, "", "canonicalize"], [46, 3, 1, "", "double_coset_can_rep"], [46, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[47, 3, 1, "", "_cmp_perm_lists"], [47, 3, 1, "", "_naive_list_centralizer"], [47, 3, 1, "", "_verify_bsgs"], [47, 3, 1, "", "_verify_centralizer"], [47, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[48, 3, 1, "", "_base_ordering"], [48, 3, 1, "", "_check_cycles_alt_sym"], [48, 3, 1, "", "_distribute_gens_by_base"], [48, 3, 1, "", "_handle_precomputed_bsgs"], [48, 3, 1, "", "_orbits_transversals_from_bsgs"], [48, 3, 1, "", "_remove_gens"], [48, 3, 1, "", "_strip"], [48, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[49, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[49, 2, 1, "", "change_index"], [49, 4, 1, "", "has_empty_sequence"], [49, 2, 1, "", "index"], [49, 2, 1, "", "reorder"], [49, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[77, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[77, 4, 1, "", "bound_symbols"], [77, 4, 1, "", "free_symbols"], [77, 4, 1, "", "function"], [77, 4, 1, "", "has_finite_limits"], [77, 4, 1, "", "has_reversed_limits"], [77, 4, 1, "", "is_number"], [77, 4, 1, "", "limits"], [77, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[49, 3, 1, "", "gosper_normal"], [49, 3, 1, "", "gosper_sum"], [49, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[49, 1, 1, "", "Product"], [49, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[49, 2, 1, "", "is_convergent"], [49, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[49, 1, 1, "", "Sum"], [49, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[49, 2, 1, "", "euler_maclaurin"], [49, 2, 1, "", "eval_zeta_function"], [49, 2, 1, "", "is_absolutely_convergent"], [49, 2, 1, "", "is_convergent"], [49, 2, 1, "", "reverse_order"]], "sympy.core": [[50, 0, 0, "-", "add"], [50, 0, 0, "-", "assumptions"], [50, 0, 0, "-", "basic"], [50, 0, 0, "-", "cache"], [50, 0, 0, "-", "containers"], [50, 0, 0, "-", "core"], [50, 0, 0, "-", "evalf"], [50, 0, 0, "-", "expr"], [50, 0, 0, "-", "exprtools"], [50, 0, 0, "-", "function"], [50, 0, 0, "-", "kind"], [50, 0, 0, "-", "mod"], [50, 0, 0, "-", "mul"], [50, 0, 0, "-", "multidimensional"], [50, 0, 0, "-", "numbers"], [50, 0, 0, "-", "power"], [50, 0, 0, "-", "random"], [50, 0, 0, "-", "relational"], [50, 0, 0, "-", "singleton"], [50, 0, 0, "-", "symbol"], [50, 0, 0, "-", "sympify"], [50, 0, 0, "-", "traversal"]], "sympy.core.add": [[50, 1, 1, "", "Add"]], "sympy.core.add.Add": [[50, 2, 1, "", "as_coeff_Add"], [50, 2, 1, "", "as_coeff_add"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "as_numer_denom"], [50, 2, 1, "", "as_real_imag"], [50, 2, 1, "", "as_two_terms"], [50, 2, 1, "", "class_key"], [50, 2, 1, "", "extract_leading_order"], [50, 2, 1, "", "flatten"], [50, 2, 1, "", "primitive"]], "sympy.core.basic": [[50, 1, 1, "", "Atom"], [50, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[50, 4, 1, "", "args"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "as_dummy"], [50, 4, 1, "", "assumptions0"], [50, 2, 1, "", "atoms"], [50, 4, 1, "", "canonical_variables"], [50, 2, 1, "", "class_key"], [50, 2, 1, "", "compare"], [50, 2, 1, "", "count"], [50, 2, 1, "", "count_ops"], [50, 2, 1, "", "doit"], [50, 2, 1, "", "dummy_eq"], [50, 2, 1, "", "find"], [50, 4, 1, "", "free_symbols"], [50, 2, 1, "", "fromiter"], [50, 4, 1, "", "func"], [50, 2, 1, "", "has"], [50, 2, 1, "", "has_free"], [50, 4, 1, "", "is_comparable"], [50, 2, 1, "", "match"], [50, 2, 1, "", "matches"], [50, 2, 1, "", "rcall"], [50, 2, 1, "", "refine"], [50, 2, 1, "", "replace"], [50, 2, 1, "", "rewrite"], [50, 2, 1, "", "simplify"], [50, 2, 1, "", "sort_key"], [50, 2, 1, "", "subs"], [50, 2, 1, "", "xreplace"]], "sympy.core.cache": [[50, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[50, 1, 1, "", "Dict"], [50, 1, 1, "", "Tuple"], [50, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[50, 2, 1, "", "get"], [50, 2, 1, "", "items"], [50, 2, 1, "", "keys"], [50, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[50, 2, 1, "", "index"], [50, 4, 1, "", "kind"], [50, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[50, 1, 1, "", "EvalfMixin"], [50, 3, 1, "", "N"], [50, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[50, 2, 1, "", "evalf"], [50, 2, 1, "", "n"]], "sympy.core.expr": [[50, 1, 1, "", "AtomicExpr"], [50, 1, 1, "", "Expr"], [50, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[50, 2, 1, "", "apart"], [50, 2, 1, "", "args_cnc"], [50, 2, 1, "", "as_coeff_Add"], [50, 2, 1, "", "as_coeff_Mul"], [50, 2, 1, "", "as_coeff_add"], [50, 2, 1, "", "as_coeff_exponent"], [50, 2, 1, "", "as_coeff_mul"], [50, 2, 1, "", "as_coefficient"], [50, 2, 1, "", "as_coefficients_dict"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "as_expr"], [50, 2, 1, "", "as_independent"], [50, 2, 1, "", "as_leading_term"], [50, 2, 1, "", "as_numer_denom"], [50, 2, 1, "", "as_ordered_factors"], [50, 2, 1, "", "as_ordered_terms"], [50, 2, 1, "", "as_poly"], [50, 2, 1, "", "as_powers_dict"], [50, 2, 1, "", "as_real_imag"], [50, 2, 1, "", "as_terms"], [50, 2, 1, "", "aseries"], [50, 2, 1, "", "cancel"], [50, 2, 1, "", "coeff"], [50, 2, 1, "", "collect"], [50, 2, 1, "", "combsimp"], [50, 2, 1, "", "compute_leading_term"], [50, 2, 1, "", "conjugate"], [50, 2, 1, "", "could_extract_minus_sign"], [50, 2, 1, "", "count_ops"], [50, 2, 1, "", "equals"], [50, 2, 1, "", "expand"], [50, 4, 1, "", "expr_free_symbols"], [50, 2, 1, "", "extract_additively"], [50, 2, 1, "", "extract_branch_factor"], [50, 2, 1, "", "extract_multiplicatively"], [50, 2, 1, "", "factor"], [50, 2, 1, "", "fourier_series"], [50, 2, 1, "", "fps"], [50, 2, 1, "", "gammasimp"], [50, 2, 1, "", "getO"], [50, 2, 1, "", "getn"], [50, 2, 1, "", "integrate"], [50, 2, 1, "", "invert"], [50, 2, 1, "", "is_algebraic_expr"], [50, 2, 1, "", "is_constant"], [50, 2, 1, "", "is_meromorphic"], [50, 4, 1, "", "is_number"], [50, 2, 1, "", "is_polynomial"], [50, 2, 1, "", "is_rational_function"], [50, 2, 1, "", "leadterm"], [50, 2, 1, "", "limit"], [50, 2, 1, "", "lseries"], [50, 2, 1, "", "normal"], [50, 2, 1, "", "nseries"], [50, 2, 1, "", "nsimplify"], [50, 2, 1, "", "powsimp"], [50, 2, 1, "", "primitive"], [50, 2, 1, "", "radsimp"], [50, 2, 1, "", "ratsimp"], [50, 2, 1, "", "removeO"], [50, 2, 1, "", "round"], [50, 2, 1, "", "separate"], [50, 2, 1, "", "series"], [50, 2, 1, "", "taylor_term"], [50, 2, 1, "", "together"], [50, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[50, 3, 1, "", "factor_terms"], [50, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[50, 1, 1, "", "Derivative"], [50, 1, 1, "", "Function"], [50, 1, 1, "", "FunctionClass"], [50, 1, 1, "", "Lambda"], [50, 1, 1, "", "PoleError"], [50, 1, 1, "", "Subs"], [50, 1, 1, "", "WildFunction"], [50, 3, 1, "", "count_ops"], [50, 3, 1, "", "diff"], [50, 3, 1, "", "expand"], [50, 3, 1, "", "expand_complex"], [50, 3, 1, "", "expand_func"], [50, 3, 1, "", "expand_log"], [50, 3, 1, "", "expand_mul"], [50, 3, 1, "", "expand_multinomial"], [50, 3, 1, "", "expand_power_base"], [50, 3, 1, "", "expand_power_exp"], [50, 3, 1, "", "expand_trig"], [50, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[50, 4, 1, "", "_diff_wrt"], [50, 2, 1, "", "_sort_variable_count"], [50, 2, 1, "", "as_finite_difference"], [50, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[50, 2, 1, "", "as_base_exp"], [50, 2, 1, "", "fdiff"], [50, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[50, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[50, 4, 1, "", "bound_symbols"], [50, 4, 1, "", "expr"], [50, 4, 1, "", "is_identity"], [50, 4, 1, "", "signature"], [50, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[50, 4, 1, "", "bound_symbols"], [50, 4, 1, "", "expr"], [50, 4, 1, "", "point"], [50, 4, 1, "", "variables"]], "sympy.core.kind": [[50, 5, 1, "", "BooleanKind"], [50, 1, 1, "", "Kind"], [50, 5, 1, "", "NumberKind"], [50, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[50, 1, 1, "", "Mod"]], "sympy.core.mul": [[50, 1, 1, "", "Mul"], [50, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[50, 2, 1, "", "as_coeff_Mul"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "as_ordered_factors"], [50, 2, 1, "", "as_two_terms"], [50, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[50, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[50, 1, 1, "", "AlgebraicNumber"], [50, 1, 1, "", "Catalan"], [50, 1, 1, "", "ComplexInfinity"], [50, 1, 1, "", "EulerGamma"], [50, 1, 1, "", "Exp1"], [50, 1, 1, "", "Float"], [50, 1, 1, "", "GoldenRatio"], [50, 1, 1, "", "Half"], [50, 1, 1, "", "ImaginaryUnit"], [50, 1, 1, "", "Infinity"], [50, 1, 1, "", "Integer"], [50, 1, 1, "", "NaN"], [50, 1, 1, "", "NegativeInfinity"], [50, 1, 1, "", "NegativeOne"], [50, 1, 1, "", "Number"], [50, 1, 1, "", "NumberSymbol"], [50, 1, 1, "", "One"], [50, 1, 1, "", "Pi"], [50, 1, 1, "", "Rational"], [50, 5, 1, "", "RealNumber"], [50, 1, 1, "", "TribonacciConstant"], [50, 1, 1, "", "Zero"], [50, 3, 1, "", "igcd"], [50, 3, 1, "", "ilcm"], [50, 3, 1, "", "mod_inverse"], [50, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[50, 2, 1, "", "__new__"], [50, 2, 1, "", "as_expr"], [50, 2, 1, "", "as_poly"], [50, 2, 1, "", "coeffs"], [50, 2, 1, "", "field_element"], [50, 4, 1, "", "is_aliased"], [50, 4, 1, "", "is_primitive_element"], [50, 2, 1, "", "minpoly_of_element"], [50, 2, 1, "", "native_coeffs"], [50, 2, 1, "", "primitive_element"], [50, 2, 1, "", "to_algebraic_integer"], [50, 2, 1, "", "to_primitive_element"], [50, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[50, 2, 1, "", "as_coeff_Add"], [50, 2, 1, "", "as_coeff_Mul"], [50, 2, 1, "", "cofactors"], [50, 2, 1, "", "gcd"], [50, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[50, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[50, 2, 1, "", "as_coeff_Add"], [50, 2, 1, "", "as_coeff_Mul"], [50, 2, 1, "", "as_content_primitive"], [50, 2, 1, "", "factors"], [50, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[50, 1, 1, "", "Pow"], [50, 3, 1, "", "integer_log"], [50, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[50, 2, 1, "", "as_base_exp"], [50, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[50, 3, 1, "", "_randint"], [50, 3, 1, "", "_randrange"], [50, 3, 1, "", "random_complex_number"], [50, 3, 1, "", "test_derivative_numerically"], [50, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[50, 5, 1, "", "Eq"], [50, 1, 1, "", "Equality"], [50, 5, 1, "", "Ge"], [50, 1, 1, "", "GreaterThan"], [50, 5, 1, "", "Gt"], [50, 5, 1, "", "Le"], [50, 1, 1, "", "LessThan"], [50, 5, 1, "", "Lt"], [50, 5, 1, "", "Ne"], [50, 5, 1, "", "Rel"], [50, 1, 1, "", "Relational"], [50, 1, 1, "", "StrictGreaterThan"], [50, 1, 1, "", "StrictLessThan"], [50, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[50, 2, 1, "", "as_poly"], [50, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[50, 4, 1, "", "canonical"], [50, 2, 1, "", "equals"], [50, 4, 1, "", "lhs"], [50, 4, 1, "", "negated"], [50, 4, 1, "", "reversed"], [50, 4, 1, "", "reversedsign"], [50, 4, 1, "", "rhs"], [50, 4, 1, "", "strict"], [50, 4, 1, "", "weak"]], "sympy.core.singleton": [[50, 1, 1, "", "Singleton"], [50, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[50, 3, 1, "", "default_sort_key"], [50, 3, 1, "", "ordered"]], "sympy.core.symbol": [[50, 1, 1, "", "Dummy"], [50, 1, 1, "", "Symbol"], [50, 1, 1, "", "Wild"], [50, 3, 1, "", "symbols"], [50, 3, 1, "", "var"]], "sympy.core.sympify": [[50, 3, 1, "", "sympify"]], "sympy.core.traversal": [[50, 3, 1, "", "bottom_up"], [50, 3, 1, "", "postorder_traversal"], [50, 3, 1, "", "preorder_traversal"], [50, 3, 1, "", "use"], [50, 3, 1, "", "walk"]], "sympy.crypto": [[51, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[51, 3, 1, "", "AZ"], [51, 3, 1, "", "bifid5_square"], [51, 3, 1, "", "bifid6_square"], [51, 3, 1, "", "check_and_join"], [51, 3, 1, "", "cycle_list"], [51, 3, 1, "", "decipher_affine"], [51, 3, 1, "", "decipher_atbash"], [51, 3, 1, "", "decipher_bifid"], [51, 3, 1, "", "decipher_bifid5"], [51, 3, 1, "", "decipher_bifid6"], [51, 3, 1, "", "decipher_elgamal"], [51, 3, 1, "", "decipher_gm"], [51, 3, 1, "", "decipher_hill"], [51, 3, 1, "", "decipher_kid_rsa"], [51, 3, 1, "", "decipher_railfence"], [51, 3, 1, "", "decipher_rot13"], [51, 3, 1, "", "decipher_rsa"], [51, 3, 1, "", "decipher_shift"], [51, 3, 1, "", "decipher_vigenere"], [51, 3, 1, "", "decode_morse"], [51, 3, 1, "", "dh_private_key"], [51, 3, 1, "", "dh_public_key"], [51, 3, 1, "", "dh_shared_key"], [51, 3, 1, "", "elgamal_private_key"], [51, 3, 1, "", "elgamal_public_key"], [51, 3, 1, "", "encipher_affine"], [51, 3, 1, "", "encipher_atbash"], [51, 3, 1, "", "encipher_bifid"], [51, 3, 1, "", "encipher_bifid5"], [51, 3, 1, "", "encipher_bifid6"], [51, 3, 1, "", "encipher_elgamal"], [51, 3, 1, "", "encipher_gm"], [51, 3, 1, "", "encipher_hill"], [51, 3, 1, "", "encipher_kid_rsa"], [51, 3, 1, "", "encipher_railfence"], [51, 3, 1, "", "encipher_rot13"], [51, 3, 1, "", "encipher_rsa"], [51, 3, 1, "", "encipher_shift"], [51, 3, 1, "", "encipher_substitution"], [51, 3, 1, "", "encipher_vigenere"], [51, 3, 1, "", "encode_morse"], [51, 3, 1, "", "gm_private_key"], [51, 3, 1, "", "gm_public_key"], [51, 3, 1, "", "kid_rsa_private_key"], [51, 3, 1, "", "kid_rsa_public_key"], [51, 3, 1, "", "lfsr_autocorrelation"], [51, 3, 1, "", "lfsr_connection_polynomial"], [51, 3, 1, "", "lfsr_sequence"], [51, 3, 1, "", "padded_key"], [51, 3, 1, "", "rsa_private_key"], [51, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[52, 1, 1, "", "BaseCovarDerivativeOp"], [52, 1, 1, "", "BaseScalarField"], [52, 1, 1, "", "BaseVectorField"], [52, 1, 1, "", "Commutator"], [52, 1, 1, "", "CoordSystem"], [52, 1, 1, "", "CoordinateSymbol"], [52, 1, 1, "", "CovarDerivativeOp"], [52, 1, 1, "", "Differential"], [52, 1, 1, "", "LieDerivative"], [52, 1, 1, "", "Manifold"], [52, 1, 1, "", "Patch"], [52, 1, 1, "", "Point"], [52, 1, 1, "", "TensorProduct"], [52, 1, 1, "", "WedgeProduct"], [52, 3, 1, "", "intcurve_diffequ"], [52, 3, 1, "", "intcurve_series"], [52, 3, 1, "", "metric_to_Christoffel_1st"], [52, 3, 1, "", "metric_to_Christoffel_2nd"], [52, 3, 1, "", "metric_to_Ricci_components"], [52, 3, 1, "", "metric_to_Riemann_components"], [52, 3, 1, "", "twoform_to_matrix"], [52, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[52, 2, 1, "", "base_oneform"], [52, 2, 1, "", "base_oneforms"], [52, 2, 1, "", "base_scalar"], [52, 2, 1, "", "base_scalars"], [52, 2, 1, "", "base_vector"], [52, 2, 1, "", "base_vectors"], [52, 2, 1, "", "coord_function"], [52, 2, 1, "", "coord_functions"], [52, 2, 1, "", "coord_tuple_transform_to"], [52, 2, 1, "", "jacobian"], [52, 2, 1, "", "jacobian_determinant"], [52, 2, 1, "", "jacobian_matrix"], [52, 2, 1, "", "point"], [52, 2, 1, "", "point_to_coords"], [52, 2, 1, "", "transform"], [52, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[52, 2, 1, "", "coords"]], "sympy.discrete": [[53, 0, 0, "-", "convolutions"], [53, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[53, 3, 1, "", "convolution"], [53, 3, 1, "", "convolution_fft"], [53, 3, 1, "", "convolution_fwht"], [53, 3, 1, "", "convolution_ntt"], [53, 3, 1, "", "convolution_subset"], [53, 3, 1, "", "covering_product"], [53, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[53, 3, 1, "", "fft"], [53, 3, 1, "", "fwht"], [53, 3, 1, "", "ifft"], [53, 3, 1, "", "ifwht"], [53, 3, 1, "", "intt"], [53, 3, 1, "", "inverse_mobius_transform"], [53, 3, 1, "", "mobius_transform"], [53, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[188, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[55, 1, 1, "", "FallingFactorial"], [55, 1, 1, "", "MultiFactorial"], [55, 1, 1, "", "RisingFactorial"], [55, 1, 1, "", "binomial"], [55, 1, 1, "", "factorial"], [55, 1, 1, "", "factorial2"], [55, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[55, 1, 1, "", "bell"], [55, 1, 1, "", "bernoulli"], [55, 1, 1, "", "catalan"], [55, 1, 1, "", "euler"], [55, 1, 1, "", "fibonacci"], [55, 1, 1, "", "genocchi"], [55, 1, 1, "", "harmonic"], [55, 1, 1, "", "lucas"], [55, 3, 1, "", "nC"], [55, 3, 1, "", "nP"], [55, 3, 1, "", "nT"], [55, 1, 1, "", "partition"], [55, 3, 1, "", "stirling"], [55, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[56, 1, 1, "", "Abs"], [56, 1, 1, "", "arg"], [56, 1, 1, "", "conjugate"], [56, 1, 1, "", "im"], [56, 1, 1, "", "periodic_argument"], [56, 1, 1, "", "polar_lift"], [56, 1, 1, "", "principal_branch"], [56, 1, 1, "", "re"], [56, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[56, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[56, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[56, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[56, 1, 1, "", "LambertW"], [56, 1, 1, "", "exp"], [56, 1, 1, "", "exp_polar"], [56, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[56, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[56, 2, 1, "", "as_real_imag"], [56, 4, 1, "", "base"], [56, 2, 1, "", "fdiff"], [56, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[56, 2, 1, "", "as_base_exp"], [56, 2, 1, "", "as_real_imag"], [56, 2, 1, "", "fdiff"], [56, 2, 1, "", "inverse"], [56, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[56, 1, 1, "", "HyperbolicFunction"], [56, 1, 1, "", "acosh"], [56, 1, 1, "", "acoth"], [56, 1, 1, "", "acsch"], [56, 1, 1, "", "asech"], [56, 1, 1, "", "asinh"], [56, 1, 1, "", "atanh"], [56, 1, 1, "", "cosh"], [56, 1, 1, "", "coth"], [56, 1, 1, "", "csch"], [56, 1, 1, "", "sech"], [56, 1, 1, "", "sinh"], [56, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[56, 2, 1, "", "fdiff"], [56, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[56, 2, 1, "", "as_real_imag"], [56, 2, 1, "", "fdiff"], [56, 2, 1, "", "inverse"], [56, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[56, 1, 1, "", "RoundFunction"], [56, 1, 1, "", "ceiling"], [56, 1, 1, "", "floor"], [56, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[56, 1, 1, "", "IdentityFunction"], [56, 1, 1, "", "Max"], [56, 1, 1, "", "Min"], [56, 3, 1, "", "cbrt"], [56, 3, 1, "", "real_root"], [56, 3, 1, "", "root"], [56, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[56, 1, 1, "", "ExprCondPair"], [56, 1, 1, "", "Piecewise"], [56, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[56, 4, 1, "", "cond"], [56, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[56, 2, 1, "", "_eval_integral"], [56, 2, 1, "", "as_expr_set_pairs"], [56, 2, 1, "", "doit"], [56, 2, 1, "", "eval"], [56, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[56, 1, 1, "", "acos"], [56, 1, 1, "", "acot"], [56, 1, 1, "", "acsc"], [56, 1, 1, "", "asec"], [56, 1, 1, "", "asin"], [56, 1, 1, "", "atan"], [56, 1, 1, "", "atan2"], [56, 1, 1, "", "cos"], [56, 1, 1, "", "cot"], [56, 1, 1, "", "csc"], [56, 1, 1, "", "sec"], [56, 1, 1, "", "sin"], [56, 1, 1, "", "sinc"], [56, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[56, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[56, 2, 1, "", "inverse"]], "sympy.functions.special": [[58, 0, 0, "-", "bessel"], [58, 0, 0, "-", "beta_functions"], [58, 0, 0, "-", "elliptic_integrals"], [58, 0, 0, "-", "error_functions"], [58, 0, 0, "-", "gamma_functions"], [58, 0, 0, "-", "mathieu_functions"], [58, 0, 0, "-", "polynomials"], [58, 0, 0, "-", "singularity_functions"], [58, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[58, 1, 1, "", "AiryBase"], [58, 1, 1, "", "BesselBase"], [58, 1, 1, "", "airyai"], [58, 1, 1, "", "airyaiprime"], [58, 1, 1, "", "airybi"], [58, 1, 1, "", "airybiprime"], [58, 1, 1, "", "besseli"], [58, 1, 1, "", "besselj"], [58, 1, 1, "", "besselk"], [58, 1, 1, "", "bessely"], [58, 1, 1, "", "hankel1"], [58, 1, 1, "", "hankel2"], [58, 1, 1, "", "jn"], [58, 3, 1, "", "jn_zeros"], [58, 1, 1, "", "marcumq"], [58, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[58, 4, 1, "", "argument"], [58, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[58, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[58, 3, 1, "", "bspline_basis"], [58, 3, 1, "", "bspline_basis_set"], [58, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[58, 1, 1, "", "DiracDelta"], [58, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[58, 2, 1, "", "eval"], [58, 2, 1, "", "fdiff"], [58, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[58, 2, 1, "", "eval"], [58, 2, 1, "", "fdiff"], [58, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[58, 1, 1, "", "elliptic_e"], [58, 1, 1, "", "elliptic_f"], [58, 1, 1, "", "elliptic_k"], [58, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[58, 1, 1, "", "Chi"], [58, 1, 1, "", "Ci"], [58, 3, 1, "", "E1"], [58, 1, 1, "", "Ei"], [58, 1, 1, "", "FresnelIntegral"], [58, 1, 1, "", "Li"], [58, 1, 1, "", "Shi"], [58, 1, 1, "", "Si"], [58, 1, 1, "", "erf"], [58, 1, 1, "", "erf2"], [58, 1, 1, "", "erf2inv"], [58, 1, 1, "", "erfc"], [58, 1, 1, "", "erfcinv"], [58, 1, 1, "", "erfi"], [58, 1, 1, "", "erfinv"], [58, 1, 1, "", "expint"], [58, 1, 1, "", "fresnelc"], [58, 1, 1, "", "fresnels"], [58, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[58, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[58, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[58, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[58, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[58, 1, 1, "", "digamma"], [58, 1, 1, "", "gamma"], [58, 1, 1, "", "loggamma"], [58, 1, 1, "", "lowergamma"], [58, 1, 1, "", "multigamma"], [58, 1, 1, "", "polygamma"], [58, 1, 1, "", "trigamma"], [58, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[58, 1, 1, "", "appellf1"], [58, 1, 1, "", "hyper"], [58, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[58, 4, 1, "", "ap"], [58, 4, 1, "", "argument"], [58, 4, 1, "", "bq"], [58, 4, 1, "", "convergence_statement"], [58, 4, 1, "", "eta"], [58, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[58, 4, 1, "", "an"], [58, 4, 1, "", "aother"], [58, 4, 1, "", "ap"], [58, 4, 1, "", "argument"], [58, 4, 1, "", "bm"], [58, 4, 1, "", "bother"], [58, 4, 1, "", "bq"], [58, 4, 1, "", "delta"], [58, 2, 1, "", "get_period"], [58, 2, 1, "", "integrand"], [58, 4, 1, "", "is_number"], [58, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[58, 1, 1, "", "MathieuBase"], [58, 1, 1, "", "mathieuc"], [58, 1, 1, "", "mathieucprime"], [58, 1, 1, "", "mathieus"], [58, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[58, 1, 1, "", "assoc_laguerre"], [58, 1, 1, "", "assoc_legendre"], [58, 1, 1, "", "chebyshevt"], [58, 1, 1, "", "chebyshevt_root"], [58, 1, 1, "", "chebyshevu"], [58, 1, 1, "", "chebyshevu_root"], [58, 1, 1, "", "gegenbauer"], [58, 1, 1, "", "hermite"], [58, 1, 1, "", "jacobi"], [58, 3, 1, "", "jacobi_normalized"], [58, 1, 1, "", "laguerre"], [58, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[58, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[58, 2, 1, "", "eval"], [58, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[58, 1, 1, "", "Ynm"], [58, 3, 1, "", "Ynm_c"], [58, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[58, 3, 1, "", "Eijk"], [58, 1, 1, "", "KroneckerDelta"], [58, 1, 1, "", "LeviCivita"], [58, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[58, 2, 1, "", "eval"], [58, 4, 1, "", "indices_contain_equal_information"], [58, 4, 1, "", "is_above_fermi"], [58, 4, 1, "", "is_below_fermi"], [58, 4, 1, "", "is_only_above_fermi"], [58, 4, 1, "", "is_only_below_fermi"], [58, 4, 1, "", "killable_index"], [58, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[58, 1, 1, "", "dirichlet_eta"], [58, 1, 1, "", "lerchphi"], [58, 1, 1, "", "polylog"], [58, 1, 1, "", "stieltjes"], [58, 1, 1, "", "zeta"]], "sympy.geometry": [[59, 0, 0, "-", "curve"], [60, 0, 0, "-", "ellipse"], [61, 0, 0, "-", "entity"], [63, 0, 0, "-", "line"], [64, 0, 0, "-", "plane"], [65, 0, 0, "-", "point"], [66, 0, 0, "-", "polygon"], [67, 0, 0, "-", "util"]], "sympy.geometry.curve": [[59, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[59, 4, 1, "", "ambient_dimension"], [59, 2, 1, "", "arbitrary_point"], [59, 4, 1, "", "free_symbols"], [59, 4, 1, "", "functions"], [59, 4, 1, "", "length"], [59, 4, 1, "", "limits"], [59, 4, 1, "", "parameter"], [59, 2, 1, "", "plot_interval"], [59, 2, 1, "", "rotate"], [59, 2, 1, "", "scale"], [59, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[60, 1, 1, "", "Circle"], [60, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[60, 4, 1, "", "circumference"], [60, 2, 1, "", "equation"], [60, 2, 1, "", "intersection"], [60, 4, 1, "", "radius"], [60, 2, 1, "", "reflect"], [60, 2, 1, "", "scale"], [60, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[60, 4, 1, "", "apoapsis"], [60, 2, 1, "", "arbitrary_point"], [60, 4, 1, "", "area"], [60, 2, 1, "", "auxiliary_circle"], [60, 4, 1, "", "bounds"], [60, 4, 1, "", "center"], [60, 4, 1, "", "circumference"], [60, 2, 1, "", "director_circle"], [60, 4, 1, "", "eccentricity"], [60, 2, 1, "", "encloses_point"], [60, 2, 1, "", "equation"], [60, 2, 1, "", "evolute"], [60, 4, 1, "", "foci"], [60, 4, 1, "", "focus_distance"], [60, 4, 1, "", "hradius"], [60, 2, 1, "", "intersection"], [60, 2, 1, "", "is_tangent"], [60, 4, 1, "", "major"], [60, 4, 1, "", "minor"], [60, 2, 1, "", "normal_lines"], [60, 4, 1, "", "periapsis"], [60, 2, 1, "", "plot_interval"], [60, 2, 1, "", "polar_second_moment_of_area"], [60, 2, 1, "", "random_point"], [60, 2, 1, "", "reflect"], [60, 2, 1, "", "rotate"], [60, 2, 1, "", "scale"], [60, 2, 1, "", "second_moment_of_area"], [60, 2, 1, "", "section_modulus"], [60, 4, 1, "", "semilatus_rectum"], [60, 2, 1, "", "tangent_lines"], [60, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[61, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[61, 4, 1, "", "ambient_dimension"], [61, 4, 1, "", "bounds"], [61, 2, 1, "", "encloses"], [61, 2, 1, "", "intersection"], [61, 2, 1, "", "is_similar"], [61, 2, 1, "", "parameter_value"], [61, 2, 1, "", "reflect"], [61, 2, 1, "", "rotate"], [61, 2, 1, "", "scale"], [61, 2, 1, "", "translate"]], "sympy.geometry.line": [[63, 1, 1, "", "Line"], [63, 1, 1, "", "Line2D"], [63, 1, 1, "", "Line3D"], [63, 1, 1, "", "LinearEntity"], [63, 1, 1, "", "LinearEntity2D"], [63, 1, 1, "", "LinearEntity3D"], [63, 1, 1, "", "Ray"], [63, 1, 1, "", "Ray2D"], [63, 1, 1, "", "Ray3D"], [63, 1, 1, "", "Segment"], [63, 1, 1, "", "Segment2D"], [63, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[63, 2, 1, "", "contains"], [63, 2, 1, "", "distance"], [63, 2, 1, "", "equals"], [63, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[63, 4, 1, "", "coefficients"], [63, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[63, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[63, 4, 1, "", "ambient_dimension"], [63, 2, 1, "", "angle_between"], [63, 2, 1, "", "arbitrary_point"], [63, 2, 1, "", "are_concurrent"], [63, 2, 1, "", "bisectors"], [63, 2, 1, "", "contains"], [63, 4, 1, "", "direction"], [63, 2, 1, "", "intersection"], [63, 2, 1, "", "is_parallel"], [63, 2, 1, "", "is_perpendicular"], [63, 2, 1, "", "is_similar"], [63, 4, 1, "", "length"], [63, 4, 1, "", "p1"], [63, 4, 1, "", "p2"], [63, 2, 1, "", "parallel_line"], [63, 2, 1, "", "perpendicular_line"], [63, 2, 1, "", "perpendicular_segment"], [63, 4, 1, "", "points"], [63, 2, 1, "", "projection"], [63, 2, 1, "", "random_point"], [63, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[63, 4, 1, "", "bounds"], [63, 2, 1, "", "perpendicular_line"], [63, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[63, 4, 1, "", "direction_cosine"], [63, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[63, 2, 1, "", "contains"], [63, 2, 1, "", "distance"], [63, 2, 1, "", "equals"], [63, 2, 1, "", "plot_interval"], [63, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[63, 2, 1, "", "closing_angle"], [63, 4, 1, "", "xdirection"], [63, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[63, 4, 1, "", "xdirection"], [63, 4, 1, "", "ydirection"], [63, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[63, 2, 1, "", "contains"], [63, 2, 1, "", "distance"], [63, 2, 1, "", "equals"], [63, 4, 1, "", "length"], [63, 4, 1, "", "midpoint"], [63, 2, 1, "", "perpendicular_bisector"], [63, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[64, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[64, 2, 1, "", "angle_between"], [64, 2, 1, "", "arbitrary_point"], [64, 2, 1, "", "are_concurrent"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "equation"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "is_coplanar"], [64, 2, 1, "", "is_parallel"], [64, 2, 1, "", "is_perpendicular"], [64, 4, 1, "", "normal_vector"], [64, 4, 1, "", "p1"], [64, 2, 1, "", "parallel_plane"], [64, 2, 1, "", "parameter_value"], [64, 2, 1, "", "perpendicular_line"], [64, 2, 1, "", "perpendicular_plane"], [64, 2, 1, "", "projection"], [64, 2, 1, "", "projection_line"], [64, 2, 1, "", "random_point"]], "sympy.geometry.point": [[65, 1, 1, "", "Point"], [65, 1, 1, "", "Point2D"], [65, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[65, 2, 1, "", "affine_rank"], [65, 4, 1, "", "ambient_dimension"], [65, 2, 1, "", "are_coplanar"], [65, 2, 1, "", "canberra_distance"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "dot"], [65, 2, 1, "", "equals"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "is_collinear"], [65, 2, 1, "", "is_concyclic"], [65, 4, 1, "", "is_nonzero"], [65, 2, 1, "", "is_scalar_multiple"], [65, 4, 1, "", "is_zero"], [65, 4, 1, "", "length"], [65, 2, 1, "", "midpoint"], [65, 4, 1, "", "origin"], [65, 4, 1, "", "orthogonal_direction"], [65, 2, 1, "", "project"], [65, 2, 1, "", "taxicab_distance"], [65, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[65, 4, 1, "", "bounds"], [65, 4, 1, "", "coordinates"], [65, 2, 1, "", "rotate"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "transform"], [65, 2, 1, "", "translate"], [65, 4, 1, "", "x"], [65, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[65, 2, 1, "", "are_collinear"], [65, 4, 1, "", "coordinates"], [65, 2, 1, "", "direction_cosine"], [65, 2, 1, "", "direction_ratio"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "transform"], [65, 2, 1, "", "translate"], [65, 4, 1, "", "x"], [65, 4, 1, "", "y"], [65, 4, 1, "", "z"]], "sympy.geometry.polygon": [[66, 1, 1, "", "Polygon"], [66, 1, 1, "", "RegularPolygon"], [66, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[66, 4, 1, "", "angles"], [66, 2, 1, "", "arbitrary_point"], [66, 4, 1, "", "area"], [66, 2, 1, "", "bisectors"], [66, 4, 1, "", "bounds"], [66, 4, 1, "", "centroid"], [66, 2, 1, "", "cut_section"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "encloses_point"], [66, 2, 1, "", "first_moment_of_area"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "is_convex"], [66, 4, 1, "", "perimeter"], [66, 2, 1, "", "plot_interval"], [66, 2, 1, "", "polar_second_moment_of_area"], [66, 2, 1, "", "second_moment_of_area"], [66, 2, 1, "", "section_modulus"], [66, 4, 1, "", "sides"], [66, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[66, 4, 1, "", "angles"], [66, 4, 1, "", "apothem"], [66, 4, 1, "", "area"], [66, 4, 1, "", "args"], [66, 4, 1, "", "center"], [66, 4, 1, "", "centroid"], [66, 4, 1, "", "circumcenter"], [66, 4, 1, "", "circumcircle"], [66, 4, 1, "", "circumradius"], [66, 2, 1, "", "encloses_point"], [66, 4, 1, "", "exterior_angle"], [66, 4, 1, "", "incircle"], [66, 4, 1, "", "inradius"], [66, 4, 1, "", "interior_angle"], [66, 4, 1, "", "length"], [66, 4, 1, "", "radius"], [66, 2, 1, "", "reflect"], [66, 2, 1, "", "rotate"], [66, 4, 1, "", "rotation"], [66, 2, 1, "", "scale"], [66, 2, 1, "", "spin"], [66, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[66, 4, 1, "", "altitudes"], [66, 2, 1, "", "bisectors"], [66, 4, 1, "", "circumcenter"], [66, 4, 1, "", "circumcircle"], [66, 4, 1, "", "circumradius"], [66, 4, 1, "", "eulerline"], [66, 4, 1, "", "excenters"], [66, 4, 1, "", "exradii"], [66, 4, 1, "", "incenter"], [66, 4, 1, "", "incircle"], [66, 4, 1, "", "inradius"], [66, 2, 1, "", "is_equilateral"], [66, 2, 1, "", "is_isosceles"], [66, 2, 1, "", "is_right"], [66, 2, 1, "", "is_scalene"], [66, 2, 1, "", "is_similar"], [66, 4, 1, "", "medial"], [66, 4, 1, "", "medians"], [66, 4, 1, "", "nine_point_circle"], [66, 4, 1, "", "orthocenter"], [66, 4, 1, "", "vertices"]], "sympy.geometry.util": [[67, 3, 1, "", "are_similar"], [67, 3, 1, "", "centroid"], [67, 3, 1, "", "convex_hull"], [67, 3, 1, "", "idiff"], [67, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[73, 1, 1, "", "DifferentialOperator"], [73, 1, 1, "", "DifferentialOperatorAlgebra"], [73, 3, 1, "", "DifferentialOperators"], [73, 1, 1, "", "HolonomicFunction"], [71, 3, 1, "", "_convert_poly_rat_alg"], [71, 3, 1, "", "_create_table"], [69, 3, 1, "", "expr_to_holonomic"], [69, 3, 1, "", "from_hyper"], [69, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[73, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[72, 2, 1, "", "composition"], [72, 2, 1, "", "diff"], [72, 2, 1, "", "evalf"], [72, 2, 1, "", "integrate"], [72, 2, 1, "", "series"], [72, 2, 1, "", "to_expr"], [72, 2, 1, "", "to_hyper"], [72, 2, 1, "", "to_meijerg"], [72, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[77, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[77, 3, 1, "", "components"], [77, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[77, 1, 1, "", "Integral"], [77, 3, 1, "", "integrate"], [77, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[77, 2, 1, "", "as_sum"], [77, 2, 1, "", "doit"], [77, 4, 1, "", "free_symbols"], [77, 6, 1, "", "is_commutative"], [77, 2, 1, "", "principal_value"], [77, 2, 1, "", "transform"]], "sympy.integrals": [[77, 0, 0, "-", "intpoly"], [75, 0, 0, "-", "meijerint"], [75, 0, 0, "-", "meijerint_doc"], [77, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[77, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[77, 3, 1, "", "integral_steps"], [77, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[75, 7, 1, "", "_CoeffExpValueError"], [75, 3, 1, "", "_check_antecedents"], [75, 3, 1, "", "_check_antecedents_1"], [75, 3, 1, "", "_check_antecedents_inversion"], [75, 3, 1, "", "_condsimp"], [75, 3, 1, "", "_create_lookup_table"], [75, 3, 1, "", "_dummy"], [75, 3, 1, "", "_dummy_"], [75, 3, 1, "", "_eval_cond"], [75, 3, 1, "", "_exponents"], [75, 3, 1, "", "_find_splitting_points"], [75, 3, 1, "", "_flip_g"], [75, 3, 1, "", "_functions"], [75, 3, 1, "", "_get_coeff_exp"], [75, 3, 1, "", "_guess_expansion"], [75, 3, 1, "", "_inflate_fox_h"], [75, 3, 1, "", "_inflate_g"], [75, 3, 1, "", "_int0oo"], [75, 3, 1, "", "_int0oo_1"], [75, 3, 1, "", "_int_inversion"], [75, 3, 1, "", "_is_analytic"], [75, 3, 1, "", "_meijerint_definite_2"], [75, 3, 1, "", "_meijerint_definite_3"], [75, 3, 1, "", "_meijerint_definite_4"], [75, 3, 1, "", "_meijerint_indefinite_1"], [75, 3, 1, "", "_mul_args"], [75, 3, 1, "", "_mul_as_two_parts"], [75, 3, 1, "", "_my_principal_branch"], [75, 3, 1, "", "_mytype"], [75, 3, 1, "", "_rewrite1"], [75, 3, 1, "", "_rewrite2"], [75, 3, 1, "", "_rewrite_inversion"], [75, 3, 1, "", "_rewrite_saxena"], [75, 3, 1, "", "_rewrite_saxena_1"], [75, 3, 1, "", "_rewrite_single"], [75, 3, 1, "", "_split_mul"], [75, 3, 1, "", "meijerint_definite"], [75, 3, 1, "", "meijerint_indefinite"], [75, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[77, 3, 1, "", "gauss_chebyshev_t"], [77, 3, 1, "", "gauss_chebyshev_u"], [77, 3, 1, "", "gauss_gen_laguerre"], [77, 3, 1, "", "gauss_hermite"], [77, 3, 1, "", "gauss_jacobi"], [77, 3, 1, "", "gauss_laguerre"], [77, 3, 1, "", "gauss_legendre"], [77, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[77, 3, 1, "", "ratint"], [77, 3, 1, "", "ratint_logpart"], [77, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[77, 1, 1, "", "NonElementaryIntegral"], [77, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[77, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[77, 1, 1, "", "CosineTransform"], [77, 1, 1, "", "FourierTransform"], [77, 1, 1, "", "HankelTransform"], [77, 1, 1, "", "IntegralTransform"], [77, 7, 1, "", "IntegralTransformError"], [77, 1, 1, "", "InverseCosineTransform"], [77, 1, 1, "", "InverseFourierTransform"], [77, 1, 1, "", "InverseHankelTransform"], [77, 1, 1, "", "InverseLaplaceTransform"], [77, 1, 1, "", "InverseMellinTransform"], [77, 1, 1, "", "InverseSineTransform"], [77, 1, 1, "", "LaplaceTransform"], [77, 1, 1, "", "MellinTransform"], [77, 1, 1, "", "SineTransform"], [77, 3, 1, "", "_fast_inverse_laplace"], [77, 3, 1, "", "_fourier_transform"], [77, 3, 1, "", "cosine_transform"], [77, 3, 1, "", "fourier_transform"], [77, 3, 1, "", "hankel_transform"], [77, 3, 1, "", "inverse_cosine_transform"], [77, 3, 1, "", "inverse_fourier_transform"], [77, 3, 1, "", "inverse_hankel_transform"], [77, 3, 1, "", "inverse_laplace_transform"], [77, 3, 1, "", "inverse_mellin_transform"], [77, 3, 1, "", "inverse_sine_transform"], [77, 3, 1, "", "laplace_transform"], [77, 3, 1, "", "mellin_transform"], [77, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[77, 2, 1, "", "doit"], [77, 4, 1, "", "function"], [77, 4, 1, "", "function_variable"], [77, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[77, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[78, 0, 0, "-", "printing"], [78, 0, 0, "-", "session"]], "sympy.interactive.printing": [[78, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[78, 3, 1, "", "enable_automatic_int_sympification"], [78, 3, 1, "", "enable_automatic_symbols"], [78, 3, 1, "", "init_ipython_session"], [78, 3, 1, "", "init_python_session"], [78, 3, 1, "", "init_session"], [78, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[79, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[79, 1, 1, "", "CartanType_generator"], [79, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[79, 2, 1, "", "rank"], [79, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[79, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[79, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[79, 2, 1, "", "add_as_roots"], [79, 2, 1, "", "add_simple_roots"], [79, 2, 1, "", "all_roots"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dynkin_diagram"], [79, 2, 1, "", "root_space"], [79, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[79, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "highest_root"], [79, 2, 1, "", "lie_algebra"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[79, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "lie_algebra"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[79, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "lie_algebra"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[79, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "lie_algebra"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[79, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[79, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[79, 2, 1, "", "basic_root"], [79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[79, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[79, 2, 1, "", "basis"], [79, 2, 1, "", "cartan_matrix"], [79, 2, 1, "", "dimension"], [79, 2, 1, "", "positive_roots"], [79, 2, 1, "", "roots"], [79, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[79, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[79, 2, 1, "", "coxeter_diagram"], [79, 2, 1, "", "delete_doubles"], [79, 2, 1, "", "element_order"], [79, 2, 1, "", "generators"], [79, 2, 1, "", "group_name"], [79, 2, 1, "", "group_order"], [79, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[80, 3, 1, "", "ANFform"], [80, 1, 1, "", "And"], [80, 1, 1, "", "Boolean"], [80, 1, 1, "", "BooleanFalse"], [80, 1, 1, "", "BooleanTrue"], [80, 1, 1, "", "Equivalent"], [80, 1, 1, "", "Exclusive"], [80, 1, 1, "", "ITE"], [80, 1, 1, "", "Implies"], [80, 1, 1, "", "Nand"], [80, 1, 1, "", "Nor"], [80, 1, 1, "", "Not"], [80, 1, 1, "", "Or"], [80, 3, 1, "", "POSform"], [80, 3, 1, "", "SOPform"], [80, 1, 1, "", "Xnor"], [80, 1, 1, "", "Xor"], [80, 3, 1, "", "anf_coeffs"], [80, 3, 1, "", "bool_map"], [80, 3, 1, "", "bool_maxterm"], [80, 3, 1, "", "bool_minterm"], [80, 3, 1, "", "bool_monomial"], [80, 3, 1, "", "distribute_and_over_or"], [80, 3, 1, "", "distribute_or_over_and"], [80, 3, 1, "", "distribute_xor_over_and"], [80, 3, 1, "", "eliminate_implications"], [80, 3, 1, "", "gateinputcount"], [80, 3, 1, "", "integer_to_term"], [80, 3, 1, "", "is_anf"], [80, 3, 1, "", "is_cnf"], [80, 3, 1, "", "is_dnf"], [80, 3, 1, "", "is_nnf"], [80, 3, 1, "", "simplify_logic"], [80, 3, 1, "", "term_to_integer"], [80, 3, 1, "", "to_anf"], [80, 3, 1, "", "to_cnf"], [80, 3, 1, "", "to_dnf"], [80, 3, 1, "", "to_int_repr"], [80, 3, 1, "", "to_nnf"], [80, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[80, 2, 1, "", "as_set"], [80, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[80, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[80, 2, 1, "", "as_set"]], "sympy.logic": [[80, 0, 0, "-", "inference"]], "sympy.logic.inference": [[80, 3, 1, "", "satisfiable"]], "sympy.matrices": [[81, 0, 0, "-", "common"], [83, 0, 0, "-", "expressions"], [84, 0, 0, "-", "immutable"], [86, 0, 0, "-", "matrices"], [88, 0, 0, "-", "sparse"], [89, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[81, 1, 1, "", "MatrixCommon"], [81, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[81, 4, 1, "", "C"], [81, 4, 1, "", "H"], [81, 4, 1, "", "T"], [81, 2, 1, "", "__abs__"], [81, 2, 1, "", "__add__"], [81, 2, 1, "", "__getitem__"], [81, 2, 1, "", "__len__"], [81, 2, 1, "", "__mul__"], [81, 2, 1, "", "__pow__"], [81, 5, 1, "", "__weakref__"], [81, 2, 1, "", "adjoint"], [81, 2, 1, "", "applyfunc"], [81, 2, 1, "", "as_real_imag"], [81, 2, 1, "", "atoms"], [81, 2, 1, "", "col"], [81, 2, 1, "", "col_del"], [81, 2, 1, "", "col_insert"], [81, 2, 1, "", "col_join"], [81, 2, 1, "", "companion"], [81, 2, 1, "", "conjugate"], [81, 2, 1, "", "diag"], [81, 2, 1, "", "diagonal"], [81, 2, 1, "", "evalf"], [81, 2, 1, "", "expand"], [81, 2, 1, "", "extract"], [81, 2, 1, "", "eye"], [81, 4, 1, "", "free_symbols"], [81, 2, 1, "", "get_diag_blocks"], [81, 2, 1, "", "has"], [81, 2, 1, "", "hstack"], [81, 2, 1, "", "is_anti_symmetric"], [81, 2, 1, "", "is_diagonal"], [81, 4, 1, "", "is_hermitian"], [81, 4, 1, "", "is_lower"], [81, 4, 1, "", "is_lower_hessenberg"], [81, 4, 1, "", "is_square"], [81, 4, 1, "", "is_strongly_diagonally_dominant"], [81, 2, 1, "", "is_symbolic"], [81, 2, 1, "", "is_symmetric"], [81, 4, 1, "", "is_upper"], [81, 4, 1, "", "is_upper_hessenberg"], [81, 4, 1, "", "is_weakly_diagonally_dominant"], [81, 4, 1, "", "is_zero_matrix"], [81, 2, 1, "", "jordan_block"], [81, 2, 1, "", "lower_triangular"], [81, 2, 1, "", "multiply"], [81, 2, 1, "", "multiply_elementwise"], [81, 2, 1, "", "n"], [81, 2, 1, "", "ones"], [81, 2, 1, "", "permute"], [81, 2, 1, "", "permute_cols"], [81, 2, 1, "", "permute_rows"], [81, 2, 1, "", "pow"], [81, 2, 1, "", "refine"], [81, 2, 1, "", "replace"], [81, 2, 1, "", "reshape"], [81, 2, 1, "", "rmultiply"], [81, 2, 1, "", "rot90"], [81, 2, 1, "", "row"], [81, 2, 1, "", "row_del"], [81, 2, 1, "", "row_insert"], [81, 2, 1, "", "row_join"], [81, 4, 1, "", "shape"], [81, 2, 1, "", "simplify"], [81, 2, 1, "", "subs"], [81, 2, 1, "", "todod"], [81, 2, 1, "", "todok"], [81, 2, 1, "", "tolist"], [81, 2, 1, "", "trace"], [81, 2, 1, "", "transpose"], [81, 2, 1, "", "upper_triangular"], [81, 2, 1, "", "values"], [81, 2, 1, "", "vec"], [81, 2, 1, "", "vech"], [81, 2, 1, "", "vstack"], [81, 2, 1, "", "wilkinson"], [81, 2, 1, "", "xreplace"], [81, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[82, 1, 1, "", "DenseMatrix"], [86, 3, 1, "", "GramSchmidt"], [82, 5, 1, "", "Matrix"], [82, 1, 1, "", "MutableDenseMatrix"], [86, 3, 1, "", "casoratian"], [86, 3, 1, "", "diag"], [86, 3, 1, "", "eye"], [86, 3, 1, "", "hessian"], [86, 3, 1, "", "jordan_cell"], [86, 3, 1, "", "list2numpy"], [86, 3, 1, "", "matrix2numpy"], [86, 3, 1, "", "matrix_multiply_elementwise"], [86, 3, 1, "", "ones"], [86, 3, 1, "", "randMatrix"], [86, 3, 1, "", "rot_axis1"], [86, 3, 1, "", "rot_axis2"], [86, 3, 1, "", "rot_axis3"], [86, 3, 1, "", "symarray"], [86, 3, 1, "", "wronskian"], [86, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[82, 2, 1, "", "LDLdecomposition"], [82, 2, 1, "", "as_immutable"], [82, 2, 1, "", "as_mutable"], [82, 2, 1, "", "cholesky"], [82, 2, 1, "", "lower_triangular_solve"], [82, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[82, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[83, 1, 1, "", "CompanionMatrix"], [83, 1, 1, "", "FunctionMatrix"], [83, 1, 1, "", "HadamardPower"], [83, 1, 1, "", "HadamardProduct"], [83, 1, 1, "", "Identity"], [83, 1, 1, "", "Inverse"], [83, 1, 1, "", "MatAdd"], [83, 1, 1, "", "MatMul"], [83, 1, 1, "", "MatPow"], [83, 1, 1, "", "MatrixExpr"], [83, 1, 1, "", "MatrixPermute"], [83, 1, 1, "", "MatrixSet"], [83, 1, 1, "", "MatrixSymbol"], [83, 1, 1, "", "PermutationMatrix"], [83, 1, 1, "", "Trace"], [83, 1, 1, "", "Transpose"], [83, 1, 1, "", "ZeroMatrix"], [83, 0, 0, "-", "blockmatrix"]], "sympy.matrices.expressions.MatrixExpr": [[83, 4, 1, "", "T"], [83, 2, 1, "", "as_coeff_Mul"], [83, 2, 1, "", "as_explicit"], [83, 2, 1, "", "as_mutable"], [83, 2, 1, "", "equals"], [83, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[83, 1, 1, "", "BlockDiagMatrix"], [83, 1, 1, "", "BlockMatrix"], [83, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[83, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[83, 2, 1, "", "LDUdecomposition"], [83, 2, 1, "", "LUdecomposition"], [83, 2, 1, "", "UDLdecomposition"], [83, 2, 1, "", "schur"], [83, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[84, 1, 1, "", "ImmutableDenseMatrix"], [84, 5, 1, "", "ImmutableMatrix"], [88, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[86, 1, 1, "", "MatrixBase"], [86, 1, 1, "", "MatrixCalculus"], [86, 1, 1, "", "MatrixDeterminant"], [86, 1, 1, "", "MatrixEigen"], [86, 1, 1, "", "MatrixError"], [86, 1, 1, "", "MatrixReductions"], [86, 1, 1, "", "MatrixSubspaces"], [86, 1, 1, "", "NonSquareMatrixError"], [86, 1, 1, "", "ShapeError"], [86, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[86, 4, 1, "", "D"], [86, 2, 1, "", "LDLdecomposition"], [86, 2, 1, "", "LDLsolve"], [86, 2, 1, "", "LUdecomposition"], [86, 2, 1, "", "LUdecompositionFF"], [86, 2, 1, "", "LUdecomposition_Simple"], [86, 2, 1, "", "LUsolve"], [86, 2, 1, "", "QRdecomposition"], [86, 2, 1, "", "QRsolve"], [86, 2, 1, "", "add"], [86, 2, 1, "", "analytic_func"], [86, 2, 1, "", "cholesky"], [86, 2, 1, "", "cholesky_solve"], [86, 2, 1, "", "condition_number"], [86, 2, 1, "", "connected_components"], [86, 2, 1, "", "connected_components_decomposition"], [86, 2, 1, "", "copy"], [86, 2, 1, "", "cross"], [86, 2, 1, "", "diagonal_solve"], [86, 2, 1, "", "dot"], [86, 2, 1, "", "dual"], [86, 2, 1, "", "exp"], [86, 2, 1, "", "gauss_jordan_solve"], [86, 2, 1, "", "inv"], [86, 2, 1, "", "inv_mod"], [86, 2, 1, "", "inverse_ADJ"], [86, 2, 1, "", "inverse_BLOCK"], [86, 2, 1, "", "inverse_CH"], [86, 2, 1, "", "inverse_GE"], [86, 2, 1, "", "inverse_LDL"], [86, 2, 1, "", "inverse_LU"], [86, 2, 1, "", "inverse_QR"], [86, 2, 1, "", "irregular"], [86, 2, 1, "", "is_nilpotent"], [86, 2, 1, "", "key2bounds"], [86, 2, 1, "", "key2ij"], [86, 2, 1, "", "log"], [86, 2, 1, "", "lower_triangular_solve"], [86, 2, 1, "", "norm"], [86, 2, 1, "", "normalized"], [86, 2, 1, "", "pinv"], [86, 2, 1, "", "pinv_solve"], [86, 2, 1, "", "print_nonzero"], [86, 2, 1, "", "project"], [86, 2, 1, "", "rank_decomposition"], [86, 2, 1, "", "singular_value_decomposition"], [86, 2, 1, "", "solve"], [86, 2, 1, "", "solve_least_squares"], [86, 2, 1, "", "strongly_connected_components"], [86, 2, 1, "", "strongly_connected_components_decomposition"], [86, 2, 1, "", "table"], [86, 2, 1, "", "upper_hessenberg_decomposition"], [86, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[86, 2, 1, "", "diff"], [86, 2, 1, "", "integrate"], [86, 2, 1, "", "jacobian"], [86, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[86, 2, 1, "", "adjugate"], [86, 2, 1, "", "charpoly"], [86, 2, 1, "", "cofactor"], [86, 2, 1, "", "cofactor_matrix"], [86, 2, 1, "", "det"], [86, 2, 1, "", "minor"], [86, 2, 1, "", "minor_submatrix"], [86, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[86, 2, 1, "", "bidiagonal_decomposition"], [86, 2, 1, "", "bidiagonalize"], [86, 2, 1, "", "diagonalize"], [86, 2, 1, "", "eigenvals"], [86, 2, 1, "", "eigenvects"], [86, 2, 1, "", "is_diagonalizable"], [86, 4, 1, "", "is_indefinite"], [86, 4, 1, "", "is_negative_definite"], [86, 4, 1, "", "is_negative_semidefinite"], [86, 4, 1, "", "is_positive_definite"], [86, 4, 1, "", "is_positive_semidefinite"], [86, 2, 1, "", "jordan_form"], [86, 2, 1, "", "left_eigenvects"], [86, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[86, 2, 1, "", "echelon_form"], [86, 2, 1, "", "elementary_col_op"], [86, 2, 1, "", "elementary_row_op"], [86, 4, 1, "", "is_echelon"], [86, 2, 1, "", "rank"], [86, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[86, 2, 1, "", "columnspace"], [86, 2, 1, "", "nullspace"], [86, 2, 1, "", "orthogonalize"], [86, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[87, 3, 1, "", "hermite_normal_form"], [87, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[88, 1, 1, "", "MutableSparseMatrix"], [88, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[89, 2, 1, "", "_csrtodok"], [89, 2, 1, "", "_doktocsr"], [89, 2, 1, "", "banded"]], "sympy.ntheory": [[90, 0, 0, "-", "bbp_pi"], [90, 0, 0, "-", "continued_fraction"], [90, 0, 0, "-", "digits"], [90, 0, 0, "-", "ecm"], [90, 0, 0, "-", "egyptian_fraction"], [90, 0, 0, "-", "factor_"], [90, 0, 0, "-", "generate"], [90, 1, 1, "", "mobius"], [90, 0, 0, "-", "modular"], [90, 0, 0, "-", "multinomial"], [90, 0, 0, "-", "partitions_"], [90, 0, 0, "-", "primetest"], [90, 0, 0, "-", "qs"], [90, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[90, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[90, 3, 1, "", "continued_fraction"], [90, 3, 1, "", "continued_fraction_convergents"], [90, 3, 1, "", "continued_fraction_iterator"], [90, 3, 1, "", "continued_fraction_periodic"], [90, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[90, 3, 1, "", "count_digits"], [90, 3, 1, "", "digits"], [90, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[90, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[90, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[90, 3, 1, "", "abundance"], [90, 3, 1, "", "antidivisor_count"], [90, 3, 1, "", "antidivisors"], [90, 3, 1, "", "core"], [90, 3, 1, "", "digits"], [90, 3, 1, "", "divisor_count"], [90, 1, 1, "", "divisor_sigma"], [90, 3, 1, "", "divisors"], [90, 3, 1, "", "factorint"], [90, 3, 1, "", "factorrat"], [90, 3, 1, "", "is_abundant"], [90, 3, 1, "", "is_amicable"], [90, 3, 1, "", "is_deficient"], [90, 3, 1, "", "is_mersenne_prime"], [90, 3, 1, "", "is_perfect"], [90, 3, 1, "", "mersenne_prime_exponent"], [90, 3, 1, "", "multiplicity"], [90, 3, 1, "", "perfect_power"], [90, 3, 1, "", "pollard_pm1"], [90, 3, 1, "", "pollard_rho"], [90, 3, 1, "", "primefactors"], [90, 1, 1, "", "primenu"], [90, 1, 1, "", "primeomega"], [90, 3, 1, "", "proper_divisor_count"], [90, 3, 1, "", "proper_divisors"], [90, 1, 1, "", "reduced_totient"], [90, 3, 1, "", "smoothness"], [90, 3, 1, "", "smoothness_p"], [90, 1, 1, "", "totient"], [90, 3, 1, "", "trailing"], [90, 3, 1, "", "udivisor_count"], [90, 1, 1, "", "udivisor_sigma"], [90, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[90, 1, 1, "", "Sieve"], [90, 3, 1, "", "composite"], [90, 3, 1, "", "compositepi"], [90, 3, 1, "", "cycle_length"], [90, 3, 1, "", "nextprime"], [90, 3, 1, "", "prevprime"], [90, 3, 1, "", "prime"], [90, 3, 1, "", "primepi"], [90, 3, 1, "", "primerange"], [90, 3, 1, "", "primorial"], [90, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[90, 2, 1, "", "extend"], [90, 2, 1, "", "extend_to_no"], [90, 2, 1, "", "mobiusrange"], [90, 2, 1, "", "primerange"], [90, 2, 1, "", "search"], [90, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[90, 3, 1, "", "crt"], [90, 3, 1, "", "crt1"], [90, 3, 1, "", "crt2"], [90, 3, 1, "", "solve_congruence"], [90, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[90, 3, 1, "", "binomial_coefficients"], [90, 3, 1, "", "binomial_coefficients_list"], [90, 3, 1, "", "multinomial_coefficients"], [90, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[90, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[90, 3, 1, "", "is_euler_pseudoprime"], [90, 3, 1, "", "is_extra_strong_lucas_prp"], [90, 3, 1, "", "is_gaussian_prime"], [90, 3, 1, "", "is_lucas_prp"], [90, 3, 1, "", "is_square"], [90, 3, 1, "", "is_strong_lucas_prp"], [90, 3, 1, "", "isprime"], [90, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[90, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[90, 3, 1, "", "discrete_log"], [90, 3, 1, "", "is_nthpow_residue"], [90, 3, 1, "", "is_primitive_root"], [90, 3, 1, "", "is_quad_residue"], [90, 3, 1, "", "jacobi_symbol"], [90, 3, 1, "", "legendre_symbol"], [90, 3, 1, "", "n_order"], [90, 3, 1, "", "nthroot_mod"], [90, 3, 1, "", "primitive_root"], [90, 3, 1, "", "quadratic_residues"], [90, 3, 1, "", "sqrt_mod"], [90, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[92, 1, 1, "", "LaTeXParsingError"], [92, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[92, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[92, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[92, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[92, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[92, 2, 1, "", "convert_to_c"], [92, 2, 1, "", "convert_to_expr"], [92, 2, 1, "", "convert_to_fortran"], [92, 2, 1, "", "convert_to_python"], [92, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[92, 3, 1, "", "auto_number"], [92, 3, 1, "", "auto_symbol"], [92, 3, 1, "", "convert_xor"], [92, 3, 1, "", "eval_expr"], [92, 3, 1, "", "factorial_notation"], [92, 3, 1, "", "function_exponentiation"], [92, 3, 1, "", "implicit_application"], [92, 3, 1, "", "implicit_multiplication"], [92, 3, 1, "", "implicit_multiplication_application"], [92, 3, 1, "", "lambda_notation"], [92, 3, 1, "", "parse_expr"], [92, 3, 1, "", "rationalize"], [92, 3, 1, "", "repeated_decimals"], [92, 3, 1, "", "split_symbols"], [92, 3, 1, "", "split_symbols_custom"], [92, 6, 1, "", "standard_transformations"], [92, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[93, 0, 0, "-", "beam"], [96, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[93, 1, 1, "", "Beam"], [93, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[93, 4, 1, "", "applied_loads"], [93, 2, 1, "", "apply_load"], [93, 2, 1, "", "apply_support"], [93, 4, 1, "", "area"], [93, 2, 1, "", "bending_moment"], [93, 4, 1, "", "boundary_conditions"], [93, 4, 1, "", "cross_section"], [93, 2, 1, "", "deflection"], [93, 2, 1, "", "draw"], [93, 4, 1, "", "elastic_modulus"], [93, 4, 1, "", "ild_moment"], [93, 4, 1, "", "ild_reactions"], [93, 4, 1, "", "ild_shear"], [93, 2, 1, "", "join"], [93, 4, 1, "", "length"], [93, 4, 1, "", "load"], [93, 2, 1, "", "max_bmoment"], [93, 2, 1, "", "max_deflection"], [93, 2, 1, "", "max_shear_force"], [93, 2, 1, "", "plot_bending_moment"], [93, 2, 1, "", "plot_deflection"], [93, 2, 1, "", "plot_ild_moment"], [93, 2, 1, "", "plot_ild_reactions"], [93, 2, 1, "", "plot_ild_shear"], [93, 2, 1, "", "plot_loading_results"], [93, 2, 1, "", "plot_shear_force"], [93, 2, 1, "", "plot_shear_stress"], [93, 2, 1, "", "plot_slope"], [93, 2, 1, "", "point_cflexure"], [93, 4, 1, "", "reaction_loads"], [93, 2, 1, "", "remove_load"], [93, 4, 1, "", "second_moment"], [93, 2, 1, "", "shear_force"], [93, 2, 1, "", "shear_stress"], [93, 2, 1, "", "slope"], [93, 2, 1, "", "solve_for_ild_moment"], [93, 2, 1, "", "solve_for_ild_reactions"], [93, 2, 1, "", "solve_for_ild_shear"], [93, 2, 1, "", "solve_for_reaction_loads"], [93, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[93, 2, 1, "", "apply_load"], [93, 2, 1, "", "apply_moment_load"], [93, 4, 1, "", "area"], [93, 2, 1, "", "axial_force"], [93, 2, 1, "", "axial_stress"], [93, 2, 1, "", "bending_moment"], [93, 4, 1, "", "boundary_conditions"], [93, 2, 1, "", "deflection"], [93, 4, 1, "", "load_vector"], [93, 2, 1, "", "max_bending_moment"], [93, 2, 1, "", "max_bmoment"], [93, 2, 1, "", "max_deflection"], [93, 2, 1, "", "max_shear_force"], [93, 4, 1, "", "moment_load_vector"], [93, 2, 1, "", "plot_bending_moment"], [93, 2, 1, "", "plot_deflection"], [93, 2, 1, "", "plot_loading_results"], [93, 2, 1, "", "plot_shear_force"], [93, 2, 1, "", "plot_shear_stress"], [93, 2, 1, "", "plot_slope"], [93, 2, 1, "", "polar_moment"], [93, 4, 1, "", "second_moment"], [93, 2, 1, "", "shear_force"], [93, 4, 1, "", "shear_modulus"], [93, 2, 1, "", "shear_stress"], [93, 2, 1, "", "slope"], [93, 2, 1, "", "solve_for_reaction_loads"], [93, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.truss": [[96, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[96, 2, 1, "", "add_member"], [96, 2, 1, "", "add_node"], [96, 2, 1, "", "apply_load"], [96, 2, 1, "", "apply_support"], [96, 2, 1, "", "change_member_label"], [96, 2, 1, "", "change_node_label"], [96, 4, 1, "", "internal_forces"], [96, 4, 1, "", "loads"], [96, 4, 1, "", "member_labels"], [96, 4, 1, "", "members"], [96, 4, 1, "", "node_labels"], [96, 4, 1, "", "node_positions"], [96, 4, 1, "", "nodes"], [96, 4, 1, "", "reaction_loads"], [96, 2, 1, "", "remove_load"], [96, 2, 1, "", "remove_member"], [96, 2, 1, "", "remove_node"], [96, 2, 1, "", "remove_support"], [96, 4, 1, "", "supports"]], "sympy.physics": [[99, 0, 0, "-", "control"], [102, 0, 0, "-", "hydrogen"], [103, 0, 0, "-", "matrices"], [123, 0, 0, "-", "mechanics"], [138, 0, 0, "-", "paulialgebra"], [139, 0, 0, "-", "qho_1d"], [163, 0, 0, "-", "secondquant"], [164, 0, 0, "-", "sho"], [179, 0, 0, "-", "vector"], [182, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[98, 2, 1, "", "bode_magnitude_numerical_data"], [98, 2, 1, "", "bode_magnitude_plot"], [98, 2, 1, "", "bode_phase_numerical_data"], [98, 2, 1, "", "bode_phase_plot"], [98, 2, 1, "", "bode_plot"], [98, 2, 1, "", "impulse_response_numerical_data"], [98, 2, 1, "", "impulse_response_plot"], [98, 2, 1, "", "pole_zero_numerical_data"], [98, 2, 1, "", "pole_zero_plot"], [98, 2, 1, "", "ramp_response_numerical_data"], [98, 2, 1, "", "ramp_response_plot"], [98, 2, 1, "", "step_response_numerical_data"], [98, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[100, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[100, 1, 1, "", "Feedback"], [100, 1, 1, "", "MIMOFeedback"], [100, 1, 1, "", "MIMOParallel"], [100, 1, 1, "", "MIMOSeries"], [100, 1, 1, "", "Parallel"], [100, 1, 1, "", "Series"], [100, 1, 1, "", "TransferFunction"], [100, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "sensitivity"], [100, 4, 1, "", "sign"], [100, 4, 1, "", "sys1"], [100, 4, 1, "", "sys2"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "sensitivity"], [100, 4, 1, "", "sign"], [100, 4, 1, "", "sys1"], [100, 4, 1, "", "sys2"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "num_inputs"], [100, 4, 1, "", "num_outputs"], [100, 4, 1, "", "shape"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "num_inputs"], [100, 4, 1, "", "num_outputs"], [100, 4, 1, "", "shape"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "is_biproper"], [100, 4, 1, "", "is_proper"], [100, 4, 1, "", "is_strictly_proper"], [100, 2, 1, "", "to_expr"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[100, 2, 1, "", "doit"], [100, 4, 1, "", "is_biproper"], [100, 4, 1, "", "is_proper"], [100, 4, 1, "", "is_strictly_proper"], [100, 2, 1, "", "to_expr"], [100, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[100, 2, 1, "", "dc_gain"], [100, 4, 1, "", "den"], [100, 2, 1, "", "expand"], [100, 2, 1, "", "from_rational_expression"], [100, 4, 1, "", "is_biproper"], [100, 4, 1, "", "is_proper"], [100, 2, 1, "", "is_stable"], [100, 4, 1, "", "is_strictly_proper"], [100, 4, 1, "", "num"], [100, 2, 1, "", "poles"], [100, 2, 1, "", "to_expr"], [100, 4, 1, "", "var"], [100, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[100, 2, 1, "", "elem_poles"], [100, 2, 1, "", "elem_zeros"], [100, 2, 1, "", "expand"], [100, 2, 1, "", "from_Matrix"], [100, 4, 1, "", "num_inputs"], [100, 4, 1, "", "num_outputs"], [100, 4, 1, "", "shape"], [100, 2, 1, "", "transpose"], [100, 4, 1, "", "var"]], "sympy.physics.hep": [[101, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[101, 3, 1, "", "extract_type_tens"], [101, 3, 1, "", "gamma_trace"], [101, 3, 1, "", "kahane_simplify"], [101, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[102, 3, 1, "", "E_nl"], [102, 3, 1, "", "E_nl_dirac"], [102, 3, 1, "", "Psi_nlm"], [102, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[103, 3, 1, "", "mdft"], [103, 3, 1, "", "mgamma"], [103, 3, 1, "", "msigma"], [103, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[105, 0, 0, "-", "body"], [106, 3, 1, "", "find_dynamicsymbols"], [107, 0, 0, "-", "joint"], [107, 0, 0, "-", "jointsmethod"], [108, 0, 0, "-", "kane"], [108, 0, 0, "-", "lagrange"], [109, 0, 0, "-", "linearize"], [106, 3, 1, "", "msubs"], [110, 0, 0, "-", "particle"], [110, 0, 0, "-", "rigidbody"], [112, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[105, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[105, 2, 1, "", "ang_vel_in"], [105, 2, 1, "", "apply_force"], [105, 2, 1, "", "apply_torque"], [105, 2, 1, "", "clear_loads"], [105, 2, 1, "", "dcm"], [105, 2, 1, "", "kinetic_energy"], [105, 2, 1, "", "masscenter_vel"], [105, 2, 1, "", "remove_load"], [105, 4, 1, "", "x"], [105, 4, 1, "", "y"], [105, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[110, 3, 1, "", "Lagrangian"], [110, 3, 1, "", "angular_momentum"], [110, 3, 1, "", "inertia"], [110, 3, 1, "", "inertia_of_point_mass"], [110, 3, 1, "", "kinetic_energy"], [110, 3, 1, "", "linear_momentum"], [110, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[107, 1, 1, "", "Joint"], [107, 1, 1, "", "PinJoint"], [107, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[107, 4, 1, "", "child"], [107, 4, 1, "", "child_axis"], [107, 4, 1, "", "child_point"], [107, 4, 1, "", "coordinates"], [107, 4, 1, "", "kdes"], [107, 4, 1, "", "parent"], [107, 4, 1, "", "parent_axis"], [107, 4, 1, "", "parent_point"], [107, 4, 1, "", "speeds"]], "sympy.physics.mechanics.jointsmethod": [[107, 1, 1, "", "JointsMethod"]], "sympy.physics.mechanics.jointsmethod.JointsMethod": [[107, 4, 1, "", "bodies"], [107, 4, 1, "", "forcing"], [107, 4, 1, "", "forcing_full"], [107, 2, 1, "", "form_eoms"], [107, 4, 1, "", "kdes"], [107, 4, 1, "", "loads"], [107, 4, 1, "", "mass_matrix"], [107, 4, 1, "", "mass_matrix_full"], [107, 4, 1, "", "method"], [107, 4, 1, "", "q"], [107, 2, 1, "", "rhs"], [107, 4, 1, "", "u"]], "sympy.physics.mechanics.kane": [[108, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[108, 4, 1, "", "auxiliary_eqs"], [108, 4, 1, "", "forcing"], [108, 4, 1, "", "forcing_full"], [108, 2, 1, "", "kanes_equations"], [108, 2, 1, "", "kindiffdict"], [108, 2, 1, "", "linearize"], [108, 4, 1, "", "mass_matrix"], [108, 4, 1, "", "mass_matrix_full"], [108, 2, 1, "", "rhs"], [108, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[108, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[108, 4, 1, "", "forcing"], [108, 4, 1, "", "forcing_full"], [108, 2, 1, "", "form_lagranges_equations"], [108, 2, 1, "", "linearize"], [108, 4, 1, "", "mass_matrix"], [108, 4, 1, "", "mass_matrix_full"], [108, 2, 1, "", "rhs"], [108, 2, 1, "", "solve_multipliers"], [108, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[109, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[109, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[110, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[110, 2, 1, "", "angular_momentum"], [110, 2, 1, "", "kinetic_energy"], [110, 2, 1, "", "linear_momentum"], [110, 4, 1, "", "mass"], [110, 2, 1, "", "parallel_axis"], [110, 4, 1, "", "point"], [110, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[110, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[110, 2, 1, "", "angular_momentum"], [110, 4, 1, "", "central_inertia"], [110, 2, 1, "", "kinetic_energy"], [110, 2, 1, "", "linear_momentum"], [110, 2, 1, "", "parallel_axis"], [110, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[112, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[112, 4, 1, "", "alg_con"], [112, 4, 1, "", "bodies"], [112, 4, 1, "", "comb_explicit_rhs"], [112, 4, 1, "", "comb_implicit_mat"], [112, 4, 1, "", "comb_implicit_rhs"], [112, 2, 1, "", "compute_explicit_form"], [112, 2, 1, "", "constant_symbols"], [112, 4, 1, "", "coordinates"], [112, 4, 1, "", "dyn_implicit_mat"], [112, 4, 1, "", "dyn_implicit_rhs"], [112, 2, 1, "", "dynamic_symbols"], [112, 4, 1, "", "kin_explicit_rhs"], [112, 4, 1, "", "loads"], [112, 4, 1, "", "speeds"], [112, 4, 1, "", "states"]], "sympy.physics.optics": [[132, 0, 0, "-", "gaussopt"], [134, 0, 0, "-", "medium"], [135, 0, 0, "-", "polarization"], [136, 0, 0, "-", "utils"], [137, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[132, 1, 1, "", "BeamParameter"], [132, 1, 1, "", "CurvedMirror"], [132, 1, 1, "", "CurvedRefraction"], [132, 1, 1, "", "FlatMirror"], [132, 1, 1, "", "FlatRefraction"], [132, 1, 1, "", "FreeSpace"], [132, 1, 1, "", "GeometricRay"], [132, 1, 1, "", "RayTransferMatrix"], [132, 1, 1, "", "ThinLens"], [132, 3, 1, "", "conjugate_gauss_beams"], [132, 3, 1, "", "gaussian_conj"], [132, 3, 1, "", "geometric_conj_ab"], [132, 3, 1, "", "geometric_conj_af"], [132, 3, 1, "", "geometric_conj_bf"], [132, 3, 1, "", "rayleigh2waist"], [132, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[132, 4, 1, "", "divergence"], [132, 4, 1, "", "gouy"], [132, 4, 1, "", "q"], [132, 4, 1, "", "radius"], [132, 4, 1, "", "w"], [132, 4, 1, "", "w_0"], [132, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[132, 4, 1, "", "angle"], [132, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[132, 4, 1, "", "A"], [132, 4, 1, "", "B"], [132, 4, 1, "", "C"], [132, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[134, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[134, 4, 1, "", "refractive_index"], [134, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[135, 3, 1, "", "half_wave_retarder"], [135, 3, 1, "", "jones_2_stokes"], [135, 3, 1, "", "jones_vector"], [135, 3, 1, "", "linear_polarizer"], [135, 3, 1, "", "mueller_matrix"], [135, 3, 1, "", "phase_retarder"], [135, 3, 1, "", "polarizing_beam_splitter"], [135, 3, 1, "", "quarter_wave_retarder"], [135, 3, 1, "", "reflective_filter"], [135, 3, 1, "", "stokes_vector"], [135, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[136, 3, 1, "", "brewster_angle"], [136, 3, 1, "", "critical_angle"], [136, 3, 1, "", "deviation"], [136, 3, 1, "", "fresnel_coefficients"], [136, 3, 1, "", "hyperfocal_distance"], [136, 3, 1, "", "lens_formula"], [136, 3, 1, "", "lens_makers_formula"], [136, 3, 1, "", "mirror_formula"], [136, 3, 1, "", "refraction_angle"], [136, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[137, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[137, 4, 1, "", "amplitude"], [137, 4, 1, "", "angular_velocity"], [137, 4, 1, "", "frequency"], [137, 4, 1, "", "n"], [137, 4, 1, "", "phase"], [137, 4, 1, "", "speed"], [137, 4, 1, "", "time_period"], [137, 4, 1, "", "wavelength"], [137, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[138, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[139, 3, 1, "", "E_n"], [139, 3, 1, "", "coherent_state"], [139, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[140, 0, 0, "-", "anticommutator"], [141, 0, 0, "-", "cartesian"], [142, 0, 0, "-", "cg"], [143, 0, 0, "-", "circuitplot"], [144, 0, 0, "-", "commutator"], [145, 0, 0, "-", "constants"], [146, 0, 0, "-", "dagger"], [147, 0, 0, "-", "gate"], [148, 0, 0, "-", "grover"], [149, 0, 0, "-", "hilbert"], [151, 0, 0, "-", "innerproduct"], [152, 0, 0, "-", "operator"], [153, 0, 0, "-", "operatorset"], [154, 0, 0, "-", "piab"], [155, 0, 0, "-", "qapply"], [156, 0, 0, "-", "qft"], [157, 0, 0, "-", "qubit"], [158, 0, 0, "-", "represent"], [159, 0, 0, "-", "shor"], [160, 0, 0, "-", "spin"], [161, 0, 0, "-", "state"], [162, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[140, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[140, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[141, 1, 1, "", "PositionBra3D"], [141, 1, 1, "", "PositionKet3D"], [141, 1, 1, "", "PositionState3D"], [141, 1, 1, "", "PxBra"], [141, 1, 1, "", "PxKet"], [141, 1, 1, "", "PxOp"], [141, 1, 1, "", "XBra"], [141, 1, 1, "", "XKet"], [141, 1, 1, "", "XOp"], [141, 1, 1, "", "YOp"], [141, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[141, 4, 1, "", "position_x"], [141, 4, 1, "", "position_y"], [141, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[141, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[141, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[141, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[141, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[142, 1, 1, "", "CG"], [142, 1, 1, "", "Wigner3j"], [142, 1, 1, "", "Wigner6j"], [142, 1, 1, "", "Wigner9j"], [142, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[143, 1, 1, "", "CircuitPlot"], [143, 3, 1, "", "CreateCGate"], [143, 1, 1, "", "Mx"], [143, 1, 1, "", "Mz"], [143, 3, 1, "", "circuit_plot"], [143, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[143, 2, 1, "", "control_line"], [143, 2, 1, "", "control_point"], [143, 2, 1, "", "not_point"], [143, 2, 1, "", "one_qubit_box"], [143, 2, 1, "", "swap_point"], [143, 2, 1, "", "two_qubit_box"], [143, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[144, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[144, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[145, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[146, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[147, 1, 1, "", "CGate"], [147, 1, 1, "", "CGateS"], [147, 5, 1, "", "CNOT"], [147, 1, 1, "", "CNotGate"], [147, 1, 1, "", "Gate"], [147, 5, 1, "", "H"], [147, 1, 1, "", "HadamardGate"], [147, 1, 1, "", "IdentityGate"], [147, 1, 1, "", "OneQubitGate"], [147, 5, 1, "", "Phase"], [147, 1, 1, "", "PhaseGate"], [147, 5, 1, "", "S"], [147, 5, 1, "", "SWAP"], [147, 1, 1, "", "SwapGate"], [147, 5, 1, "", "T"], [147, 1, 1, "", "TGate"], [147, 1, 1, "", "TwoQubitGate"], [147, 1, 1, "", "UGate"], [147, 5, 1, "", "X"], [147, 1, 1, "", "XGate"], [147, 5, 1, "", "Y"], [147, 1, 1, "", "YGate"], [147, 5, 1, "", "Z"], [147, 1, 1, "", "ZGate"], [147, 3, 1, "", "gate_simp"], [147, 3, 1, "", "gate_sort"], [147, 3, 1, "", "normalized"], [147, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[147, 4, 1, "", "controls"], [147, 2, 1, "", "decompose"], [147, 2, 1, "", "eval_controls"], [147, 4, 1, "", "gate"], [147, 4, 1, "", "min_qubits"], [147, 4, 1, "", "nqubits"], [147, 2, 1, "", "plot_gate"], [147, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[147, 4, 1, "", "controls"], [147, 4, 1, "", "gate"], [147, 4, 1, "", "min_qubits"], [147, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[147, 2, 1, "", "get_target_matrix"], [147, 4, 1, "", "min_qubits"], [147, 4, 1, "", "nqubits"], [147, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[147, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[147, 2, 1, "", "get_target_matrix"], [147, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[148, 1, 1, "", "OracleGate"], [148, 1, 1, "", "WGate"], [148, 3, 1, "", "apply_grover"], [148, 3, 1, "", "grover_iteration"], [148, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[148, 4, 1, "", "search_function"], [148, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[149, 1, 1, "", "ComplexSpace"], [149, 1, 1, "", "DirectSumHilbertSpace"], [149, 1, 1, "", "FockSpace"], [149, 1, 1, "", "HilbertSpace"], [149, 1, 1, "", "L2"], [149, 1, 1, "", "TensorPowerHilbertSpace"], [149, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[149, 2, 1, "", "eval"], [149, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[149, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[149, 2, 1, "", "eval"], [149, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[151, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[152, 1, 1, "", "DifferentialOperator"], [152, 1, 1, "", "HermitianOperator"], [152, 1, 1, "", "IdentityOperator"], [152, 1, 1, "", "Operator"], [152, 1, 1, "", "OuterProduct"], [152, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[152, 4, 1, "", "expr"], [152, 4, 1, "", "free_symbols"], [152, 4, 1, "", "function"], [152, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[152, 4, 1, "", "bra"], [152, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[153, 3, 1, "", "operators_to_state"], [153, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[154, 1, 1, "", "PIABBra"], [154, 1, 1, "", "PIABHamiltonian"], [154, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[155, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[156, 1, 1, "", "IQFT"], [156, 1, 1, "", "QFT"], [156, 5, 1, "", "Rk"], [156, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[156, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[156, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[157, 1, 1, "", "IntQubit"], [157, 1, 1, "", "IntQubitBra"], [157, 1, 1, "", "Qubit"], [157, 1, 1, "", "QubitBra"], [157, 3, 1, "", "matrix_to_density"], [157, 3, 1, "", "matrix_to_qubit"], [157, 3, 1, "", "measure_all"], [157, 3, 1, "", "measure_all_oneshot"], [157, 3, 1, "", "measure_partial"], [157, 3, 1, "", "measure_partial_oneshot"], [157, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[158, 3, 1, "", "enumerate_states"], [158, 3, 1, "", "get_basis"], [158, 3, 1, "", "integrate_result"], [158, 3, 1, "", "rep_expectation"], [158, 3, 1, "", "rep_innerproduct"], [158, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[159, 1, 1, "", "CMod"], [159, 3, 1, "", "period_find"], [159, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[159, 4, 1, "", "N"], [159, 4, 1, "", "a"], [159, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[160, 1, 1, "", "J2Op"], [160, 1, 1, "", "JxBra"], [160, 1, 1, "", "JxBraCoupled"], [160, 1, 1, "", "JxKet"], [160, 1, 1, "", "JxKetCoupled"], [160, 1, 1, "", "JyBra"], [160, 1, 1, "", "JyBraCoupled"], [160, 1, 1, "", "JyKet"], [160, 1, 1, "", "JyKetCoupled"], [160, 1, 1, "", "JzBra"], [160, 1, 1, "", "JzBraCoupled"], [160, 1, 1, "", "JzKet"], [160, 1, 1, "", "JzKetCoupled"], [160, 1, 1, "", "JzOp"], [160, 1, 1, "", "Rotation"], [160, 1, 1, "", "WignerD"], [160, 3, 1, "", "couple"], [160, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[160, 2, 1, "", "D"], [160, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[161, 1, 1, "", "Bra"], [161, 1, 1, "", "BraBase"], [161, 1, 1, "", "Ket"], [161, 1, 1, "", "KetBase"], [161, 1, 1, "", "OrthogonalBra"], [161, 1, 1, "", "OrthogonalKet"], [161, 1, 1, "", "OrthogonalState"], [161, 1, 1, "", "State"], [161, 1, 1, "", "StateBase"], [161, 1, 1, "", "TimeDepBra"], [161, 1, 1, "", "TimeDepKet"], [161, 1, 1, "", "TimeDepState"], [161, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[161, 4, 1, "", "dual"], [161, 2, 1, "", "dual_class"], [161, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[161, 4, 1, "", "label"], [161, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[161, 4, 1, "", "expr"], [161, 4, 1, "", "is_commutative"], [161, 4, 1, "", "is_normalized"], [161, 4, 1, "", "limits"], [161, 4, 1, "", "norm"], [161, 2, 1, "", "normalize"], [161, 2, 1, "", "prob"], [161, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[162, 1, 1, "", "TensorProduct"], [162, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[163, 1, 1, "", "AnnihilateBoson"], [163, 1, 1, "", "AnnihilateFermion"], [163, 1, 1, "", "AntiSymmetricTensor"], [163, 5, 1, "", "B"], [163, 5, 1, "", "BBra"], [163, 5, 1, "", "BKet"], [163, 5, 1, "", "Bd"], [163, 1, 1, "", "BosonicBasis"], [163, 1, 1, "", "Commutator"], [163, 1, 1, "", "CreateBoson"], [163, 1, 1, "", "CreateFermion"], [163, 1, 1, "", "Dagger"], [163, 5, 1, "", "F"], [163, 5, 1, "", "FBra"], [163, 5, 1, "", "FKet"], [163, 5, 1, "", "Fd"], [163, 1, 1, "", "FixedBosonicBasis"], [163, 1, 1, "", "FockState"], [163, 1, 1, "", "FockStateBosonBra"], [163, 1, 1, "", "FockStateBosonKet"], [163, 1, 1, "", "FockStateBra"], [163, 1, 1, "", "FockStateFermionBra"], [163, 1, 1, "", "FockStateFermionKet"], [163, 1, 1, "", "FockStateKet"], [163, 1, 1, "", "InnerProduct"], [163, 1, 1, "", "KroneckerDelta"], [163, 1, 1, "", "NO"], [163, 1, 1, "", "PermutationOperator"], [163, 1, 1, "", "VarBosonicBasis"], [163, 3, 1, "", "apply_operators"], [163, 3, 1, "", "contraction"], [163, 3, 1, "", "evaluate_deltas"], [163, 3, 1, "", "matrix_rep"], [163, 3, 1, "", "simplify_index_permutations"], [163, 3, 1, "", "substitute_dummies"], [163, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[163, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[163, 2, 1, "", "apply_operator"], [163, 4, 1, "", "is_only_q_annihilator"], [163, 4, 1, "", "is_only_q_creator"], [163, 4, 1, "", "is_q_annihilator"], [163, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[163, 4, 1, "", "lower"], [163, 4, 1, "", "symbol"], [163, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[163, 2, 1, "", "doit"], [163, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[163, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[163, 2, 1, "", "apply_operator"], [163, 4, 1, "", "is_only_q_annihilator"], [163, 4, 1, "", "is_only_q_creator"], [163, 4, 1, "", "is_q_annihilator"], [163, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[163, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[163, 2, 1, "", "index"], [163, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[163, 4, 1, "", "bra"], [163, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[163, 2, 1, "", "eval"], [163, 4, 1, "", "indices_contain_equal_information"], [163, 4, 1, "", "is_above_fermi"], [163, 4, 1, "", "is_below_fermi"], [163, 4, 1, "", "is_only_above_fermi"], [163, 4, 1, "", "is_only_below_fermi"], [163, 4, 1, "", "killable_index"], [163, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[163, 2, 1, "", "doit"], [163, 2, 1, "", "get_subNO"], [163, 4, 1, "", "has_q_annihilators"], [163, 4, 1, "", "has_q_creators"], [163, 2, 1, "", "iter_q_annihilators"], [163, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[163, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[163, 2, 1, "", "index"], [163, 2, 1, "", "state"]], "sympy.physics.sho": [[164, 3, 1, "", "E_nl"], [164, 3, 1, "", "R_nl"]], "sympy.physics.units": [[165, 0, 0, "-", "dimensions"], [169, 0, 0, "-", "prefixes"], [170, 0, 0, "-", "quantities"], [171, 0, 0, "-", "unitsystem"], [170, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[165, 1, 1, "", "Dimension"], [165, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[165, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[165, 4, 1, "", "can_transf_matrix"], [165, 4, 1, "", "dim"], [165, 2, 1, "", "dim_can_vector"], [165, 2, 1, "", "dim_vector"], [165, 4, 1, "", "inv_can_transf_matrix"], [165, 4, 1, "", "is_consistent"], [165, 2, 1, "", "is_dimensionless"], [165, 4, 1, "", "list_can_dims"], [165, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[169, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[170, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[170, 4, 1, "", "abbrev"], [170, 2, 1, "", "convert_to"], [170, 4, 1, "", "free_symbols"], [170, 4, 1, "", "is_prefixed"], [170, 4, 1, "", "scale_factor"], [170, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[171, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[171, 4, 1, "", "dim"], [171, 2, 1, "", "extend"], [171, 2, 1, "", "get_units_non_prefixed"], [171, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[170, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[173, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[173, 2, 1, "", "applyfunc"], [173, 2, 1, "", "cross"], [173, 2, 1, "", "doit"], [173, 2, 1, "", "dot"], [173, 2, 1, "", "dt"], [173, 2, 1, "", "express"], [173, 4, 1, "", "func"], [173, 2, 1, "", "simplify"], [173, 2, 1, "", "subs"], [173, 2, 1, "", "to_matrix"], [173, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[175, 3, 1, "", "dynamicsymbols"], [176, 0, 0, "-", "functions"], [176, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[174, 3, 1, "", "curl"], [174, 3, 1, "", "divergence"], [174, 3, 1, "", "gradient"], [174, 3, 1, "", "is_conservative"], [174, 3, 1, "", "is_solenoidal"], [174, 3, 1, "", "scalar_potential"], [174, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[173, 1, 1, "", "CoordinateSym"], [173, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[173, 2, 1, "", "ang_acc_in"], [173, 2, 1, "", "ang_vel_in"], [173, 2, 1, "", "dcm"], [173, 2, 1, "", "orient"], [173, 2, 1, "", "orient_axis"], [173, 2, 1, "", "orient_body_fixed"], [173, 2, 1, "", "orient_explicit"], [173, 2, 1, "", "orient_quaternion"], [173, 2, 1, "", "orient_space_fixed"], [173, 2, 1, "", "orientnew"], [173, 2, 1, "", "partial_velocity"], [173, 2, 1, "", "set_ang_acc"], [173, 2, 1, "", "set_ang_vel"], [173, 2, 1, "", "variable_map"], [173, 4, 1, "", "x"], [173, 4, 1, "", "y"], [173, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[175, 3, 1, "", "cross"], [175, 3, 1, "", "dot"], [175, 3, 1, "", "express"], [176, 3, 1, "", "get_motion_params"], [176, 3, 1, "", "kinematic_equations"], [175, 3, 1, "", "outer"], [176, 3, 1, "", "partial_velocity"], [175, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[176, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[176, 2, 1, "", "a1pt_theory"], [176, 2, 1, "", "a2pt_theory"], [176, 2, 1, "", "acc"], [176, 2, 1, "", "locatenew"], [176, 2, 1, "", "partial_velocity"], [176, 2, 1, "", "pos_from"], [176, 2, 1, "", "set_acc"], [176, 2, 1, "", "set_pos"], [176, 2, 1, "", "set_vel"], [176, 2, 1, "", "v1pt_theory"], [176, 2, 1, "", "v2pt_theory"], [176, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[177, 3, 1, "", "init_vprinting"], [177, 3, 1, "", "vlatex"], [177, 3, 1, "", "vpprint"], [177, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[173, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[173, 2, 1, "", "angle_between"], [173, 2, 1, "", "applyfunc"], [173, 2, 1, "", "cross"], [173, 2, 1, "", "diff"], [173, 2, 1, "", "doit"], [173, 2, 1, "", "dot"], [173, 2, 1, "", "dt"], [173, 2, 1, "", "express"], [173, 2, 1, "", "free_dynamicsymbols"], [173, 2, 1, "", "free_symbols"], [173, 4, 1, "", "func"], [173, 2, 1, "", "magnitude"], [173, 2, 1, "", "normalize"], [173, 2, 1, "", "outer"], [173, 2, 1, "", "separate"], [173, 2, 1, "", "simplify"], [173, 2, 1, "", "subs"], [173, 2, 1, "", "to_matrix"], [173, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[182, 3, 1, "", "clebsch_gordan"], [182, 3, 1, "", "dot_rot_grad_Ynm"], [182, 3, 1, "", "gaunt"], [182, 3, 1, "", "racah"], [182, 3, 1, "", "wigner_3j"], [182, 3, 1, "", "wigner_6j"], [182, 3, 1, "", "wigner_9j"], [182, 3, 1, "", "wigner_d"], [182, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[183, 0, 0, "-", "plot"], [183, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[183, 1, 1, "", "BaseBackend"], [183, 1, 1, "", "BaseSeries"], [183, 1, 1, "", "Line2DBaseSeries"], [183, 1, 1, "", "Line3DBaseSeries"], [183, 1, 1, "", "LineOver1DRangeSeries"], [183, 1, 1, "", "MatplotlibBackend"], [183, 1, 1, "", "Parametric2DLineSeries"], [183, 1, 1, "", "Parametric3DLineSeries"], [183, 1, 1, "", "ParametricSurfaceSeries"], [183, 1, 1, "", "Plot"], [183, 1, 1, "", "PlotGrid"], [183, 1, 1, "", "SurfaceBaseSeries"], [183, 1, 1, "", "SurfaceOver2DRangeSeries"], [183, 1, 1, "", "TextBackend"], [183, 3, 1, "", "plot"], [183, 3, 1, "", "plot3d"], [183, 3, 1, "", "plot3d_parametric_line"], [183, 3, 1, "", "plot3d_parametric_surface"], [183, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[183, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[183, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[183, 2, 1, "", "get_segments"], [183, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[183, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[183, 2, 1, "", "append"], [183, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[183, 1, 1, "", "ImplicitSeries"], [183, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[183, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[184, 1, 1, "", "ExtensionElement"], [184, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[184, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[184, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[184, 1, 1, "", "ModuleHomomorphism"], [184, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[184, 2, 1, "", "image"], [184, 2, 1, "", "is_injective"], [184, 2, 1, "", "is_isomorphism"], [184, 2, 1, "", "is_surjective"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "kernel"], [184, 2, 1, "", "quotient_codomain"], [184, 2, 1, "", "quotient_domain"], [184, 2, 1, "", "restrict_codomain"], [184, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[184, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[184, 2, 1, "", "contains"], [184, 2, 1, "", "depth"], [184, 2, 1, "", "height"], [184, 2, 1, "", "intersect"], [184, 2, 1, "", "is_maximal"], [184, 2, 1, "", "is_primary"], [184, 2, 1, "", "is_prime"], [184, 2, 1, "", "is_principal"], [184, 2, 1, "", "is_radical"], [184, 2, 1, "", "is_whole_ring"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "product"], [184, 2, 1, "", "quotient"], [184, 2, 1, "", "radical"], [184, 2, 1, "", "reduce_element"], [184, 2, 1, "", "saturate"], [184, 2, 1, "", "subset"], [184, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[184, 1, 1, "", "FreeModule"], [184, 1, 1, "", "FreeModuleElement"], [184, 1, 1, "", "Module"], [184, 1, 1, "", "QuotientModule"], [184, 1, 1, "", "QuotientModuleElement"], [184, 1, 1, "", "SubModule"], [184, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[184, 2, 1, "", "basis"], [184, 2, 1, "", "convert"], [184, 5, 1, "", "dtype"], [184, 2, 1, "", "identity_hom"], [184, 2, 1, "", "is_submodule"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "multiply_ideal"], [184, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[184, 2, 1, "", "contains"], [184, 2, 1, "", "convert"], [184, 2, 1, "", "identity_hom"], [184, 2, 1, "", "is_submodule"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "multiply_ideal"], [184, 2, 1, "", "quotient_module"], [184, 2, 1, "", "submodule"], [184, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[184, 2, 1, "", "convert"], [184, 5, 1, "", "dtype"], [184, 2, 1, "", "identity_hom"], [184, 2, 1, "", "is_submodule"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "quotient_hom"], [184, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[184, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[184, 2, 1, "", "convert"], [184, 2, 1, "", "identity_hom"], [184, 2, 1, "", "in_terms_of_generators"], [184, 2, 1, "", "inclusion_hom"], [184, 2, 1, "", "intersect"], [184, 2, 1, "", "is_full_module"], [184, 2, 1, "", "is_submodule"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "module_quotient"], [184, 2, 1, "", "multiply_ideal"], [184, 2, 1, "", "quotient_module"], [184, 2, 1, "", "reduce_element"], [184, 2, 1, "", "submodule"], [184, 2, 1, "", "syzygy_module"], [184, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[184, 2, 1, "", "is_full_module"], [184, 2, 1, "", "quotient_hom"]], "sympy.polys.constructor": [[193, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[190, 3, 1, "", "dmp_abs"], [190, 3, 1, "", "dmp_add"], [190, 3, 1, "", "dmp_add_ground"], [190, 3, 1, "", "dmp_add_mul"], [190, 3, 1, "", "dmp_add_term"], [190, 3, 1, "", "dmp_div"], [190, 3, 1, "", "dmp_expand"], [190, 3, 1, "", "dmp_exquo"], [190, 3, 1, "", "dmp_exquo_ground"], [190, 3, 1, "", "dmp_ff_div"], [190, 3, 1, "", "dmp_l1_norm"], [190, 3, 1, "", "dmp_max_norm"], [190, 3, 1, "", "dmp_mul"], [190, 3, 1, "", "dmp_mul_ground"], [190, 3, 1, "", "dmp_mul_term"], [190, 3, 1, "", "dmp_neg"], [190, 3, 1, "", "dmp_pdiv"], [190, 3, 1, "", "dmp_pexquo"], [190, 3, 1, "", "dmp_pow"], [190, 3, 1, "", "dmp_pquo"], [190, 3, 1, "", "dmp_prem"], [190, 3, 1, "", "dmp_quo"], [190, 3, 1, "", "dmp_quo_ground"], [190, 3, 1, "", "dmp_rem"], [190, 3, 1, "", "dmp_rr_div"], [190, 3, 1, "", "dmp_sqr"], [190, 3, 1, "", "dmp_sub"], [190, 3, 1, "", "dmp_sub_ground"], [190, 3, 1, "", "dmp_sub_mul"], [190, 3, 1, "", "dmp_sub_term"], [190, 3, 1, "", "dup_lshift"], [190, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[190, 3, 1, "", "dmp_LC"], [190, 3, 1, "", "dmp_TC"], [190, 3, 1, "", "dmp_apply_pairs"], [190, 3, 1, "", "dmp_convert"], [190, 3, 1, "", "dmp_copy"], [190, 3, 1, "", "dmp_deflate"], [190, 3, 1, "", "dmp_degree"], [190, 3, 1, "", "dmp_degree_in"], [190, 3, 1, "", "dmp_degree_list"], [190, 3, 1, "", "dmp_eject"], [190, 3, 1, "", "dmp_exclude"], [190, 3, 1, "", "dmp_from_dict"], [190, 3, 1, "", "dmp_from_sympy"], [190, 3, 1, "", "dmp_ground"], [190, 3, 1, "", "dmp_ground_LC"], [190, 3, 1, "", "dmp_ground_TC"], [190, 3, 1, "", "dmp_ground_nth"], [190, 3, 1, "", "dmp_ground_p"], [190, 3, 1, "", "dmp_grounds"], [190, 3, 1, "", "dmp_include"], [190, 3, 1, "", "dmp_inflate"], [190, 3, 1, "", "dmp_inject"], [190, 3, 1, "", "dmp_list_terms"], [190, 3, 1, "", "dmp_multi_deflate"], [190, 3, 1, "", "dmp_negative_p"], [190, 3, 1, "", "dmp_nest"], [190, 3, 1, "", "dmp_normal"], [190, 3, 1, "", "dmp_nth"], [190, 3, 1, "", "dmp_one"], [190, 3, 1, "", "dmp_one_p"], [190, 3, 1, "", "dmp_permute"], [190, 3, 1, "", "dmp_positive_p"], [190, 3, 1, "", "dmp_raise"], [190, 3, 1, "", "dmp_slice"], [190, 3, 1, "", "dmp_strip"], [190, 3, 1, "", "dmp_swap"], [190, 3, 1, "", "dmp_terms_gcd"], [190, 3, 1, "", "dmp_to_dict"], [190, 3, 1, "", "dmp_to_tuple"], [190, 3, 1, "", "dmp_true_LT"], [190, 3, 1, "", "dmp_validate"], [190, 3, 1, "", "dmp_zero"], [190, 3, 1, "", "dmp_zero_p"], [190, 3, 1, "", "dmp_zeros"], [190, 3, 1, "", "dup_random"], [190, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[190, 3, 1, "", "dmp_clear_denoms"], [190, 3, 1, "", "dmp_compose"], [190, 3, 1, "", "dmp_diff"], [190, 3, 1, "", "dmp_diff_eval_in"], [190, 3, 1, "", "dmp_diff_in"], [190, 3, 1, "", "dmp_eval"], [190, 3, 1, "", "dmp_eval_in"], [190, 3, 1, "", "dmp_eval_tail"], [190, 3, 1, "", "dmp_ground_content"], [190, 3, 1, "", "dmp_ground_extract"], [190, 3, 1, "", "dmp_ground_monic"], [190, 3, 1, "", "dmp_ground_primitive"], [190, 3, 1, "", "dmp_ground_trunc"], [190, 3, 1, "", "dmp_integrate"], [190, 3, 1, "", "dmp_integrate_in"], [190, 3, 1, "", "dmp_lift"], [190, 3, 1, "", "dmp_revert"], [190, 3, 1, "", "dmp_trunc"], [190, 3, 1, "", "dup_content"], [190, 3, 1, "", "dup_decompose"], [190, 3, 1, "", "dup_extract"], [190, 3, 1, "", "dup_mirror"], [190, 3, 1, "", "dup_monic"], [190, 3, 1, "", "dup_primitive"], [190, 3, 1, "", "dup_real_imag"], [190, 3, 1, "", "dup_scale"], [190, 3, 1, "", "dup_shift"], [190, 3, 1, "", "dup_sign_variations"], [190, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[193, 3, 1, "", "dispersion"], [193, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[190, 3, 1, "", "sdm_LC"], [190, 3, 1, "", "sdm_LM"], [190, 3, 1, "", "sdm_LT"], [190, 3, 1, "", "sdm_add"], [190, 3, 1, "", "sdm_deg"], [190, 3, 1, "", "sdm_ecart"], [190, 3, 1, "", "sdm_from_dict"], [190, 3, 1, "", "sdm_from_vector"], [190, 3, 1, "", "sdm_groebner"], [190, 3, 1, "", "sdm_monomial_deg"], [190, 3, 1, "", "sdm_monomial_divides"], [190, 3, 1, "", "sdm_monomial_mul"], [190, 3, 1, "", "sdm_mul_term"], [190, 3, 1, "", "sdm_nf_mora"], [190, 3, 1, "", "sdm_spoly"], [190, 3, 1, "", "sdm_to_dict"], [190, 3, 1, "", "sdm_to_vector"], [190, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[188, 1, 1, "", "AlgebraicField"], [188, 1, 1, "", "ComplexField"], [188, 1, 1, "", "ExpressionDomain"], [188, 1, 1, "", "FiniteField"], [188, 1, 1, "", "FractionField"], [188, 1, 1, "", "GMPYFiniteField"], [188, 1, 1, "", "GMPYIntegerRing"], [188, 1, 1, "", "GMPYRationalField"], [188, 1, 1, "", "IntegerRing"], [188, 1, 1, "", "PolynomialRing"], [188, 1, 1, "", "PythonFiniteField"], [188, 1, 1, "", "PythonIntegerRing"], [188, 1, 1, "", "PythonRationalField"], [188, 1, 1, "", "RationalField"], [188, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[188, 2, 1, "", "algebraic_field"], [188, 2, 1, "", "denom"], [188, 2, 1, "", "discriminant"], [188, 5, 1, "", "dtype"], [188, 5, 1, "", "ext"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "integral_basis"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "maximal_order"], [188, 5, 1, "", "mod"], [188, 2, 1, "", "numer"], [188, 5, 1, "", "orig_ext"], [188, 2, 1, "", "primes_above"], [188, 2, 1, "", "to_alg_num"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[188, 2, 1, "", "almosteq"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "get_exact"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[188, 1, 1, "", "Expression"], [188, 2, 1, "", "denom"], [188, 5, 1, "", "dtype"], [188, 2, 1, "", "from_ExpressionDomain"], [188, 2, 1, "", "from_FractionField"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_PolynomialRing"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[188, 2, 1, "", "characteristic"], [188, 2, 1, "", "from_FF"], [188, 2, 1, "", "from_FF_gmpy"], [188, 2, 1, "", "from_FF_python"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[188, 2, 1, "", "denom"], [188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_ComplexField"], [188, 2, 1, "", "from_FractionField"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_PolynomialRing"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_FF_gmpy"], [188, 2, 1, "", "from_FF_python"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "sqrt"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[188, 2, 1, "", "denom"], [188, 2, 1, "", "div"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[188, 2, 1, "", "algebraic_field"], [188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_FF"], [188, 2, 1, "", "from_FF_gmpy"], [188, 2, 1, "", "from_FF_python"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "log"], [188, 2, 1, "", "sqrt"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[188, 2, 1, "", "factorial"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_ComplexField"], [188, 2, 1, "", "from_FractionField"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_GlobalPolynomialRing"], [188, 2, 1, "", "from_PolynomialRing"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "is_unit"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[188, 2, 1, "", "algebraic_field"], [188, 2, 1, "", "denom"], [188, 2, 1, "", "div"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[188, 2, 1, "", "almosteq"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "get_exact"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "to_rational"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[188, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[188, 2, 1, "", "drop"], [188, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[188, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[188, 2, 1, "", "abs"], [188, 2, 1, "", "add"], [188, 2, 1, "", "alg_field_from_poly"], [188, 2, 1, "", "algebraic_field"], [188, 2, 1, "", "almosteq"], [188, 2, 1, "", "characteristic"], [188, 2, 1, "", "cofactors"], [188, 2, 1, "", "convert"], [188, 2, 1, "", "convert_from"], [188, 2, 1, "", "cyclotomic_field"], [188, 2, 1, "", "denom"], [188, 2, 1, "", "div"], [188, 2, 1, "", "drop"], [188, 5, 1, "", "dtype"], [188, 2, 1, "", "evalf"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "frac_field"], [188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_ComplexField"], [188, 2, 1, "", "from_ExpressionDomain"], [188, 2, 1, "", "from_ExpressionRawDomain"], [188, 2, 1, "", "from_FF"], [188, 2, 1, "", "from_FF_gmpy"], [188, 2, 1, "", "from_FF_python"], [188, 2, 1, "", "from_FractionField"], [188, 2, 1, "", "from_GlobalPolynomialRing"], [188, 2, 1, "", "from_MonogenicFiniteExtension"], [188, 2, 1, "", "from_PolynomialRing"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_RealField"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "get_exact"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "half_gcdex"], [188, 5, 1, "", "has_assoc_Field"], [188, 5, 1, "", "has_assoc_Ring"], [188, 2, 1, "", "inject"], [188, 2, 1, "", "invert"], [188, 5, 1, "", "is_Field"], [188, 5, 1, "", "is_PID"], [188, 5, 1, "", "is_Ring"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_one"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "is_zero"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "log"], [188, 2, 1, "", "map"], [188, 2, 1, "", "mul"], [188, 2, 1, "", "n"], [188, 2, 1, "", "neg"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "of_type"], [188, 2, 1, "", "old_frac_field"], [188, 2, 1, "", "old_poly_ring"], [188, 5, 1, "", "one"], [188, 2, 1, "", "poly_ring"], [188, 2, 1, "", "pos"], [188, 2, 1, "", "pow"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "revert"], [188, 2, 1, "", "sqrt"], [188, 2, 1, "", "sub"], [188, 2, 1, "", "to_sympy"], [188, 4, 1, "", "tp"], [188, 2, 1, "", "unify"], [188, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[188, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[188, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[188, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[188, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[188, 2, 1, "", "div"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "is_unit"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[188, 1, 1, "", "GaussianDomain"], [188, 1, 1, "", "GaussianElement"], [188, 1, 1, "", "GaussianInteger"], [188, 1, 1, "", "GaussianIntegerRing"], [188, 1, 1, "", "GaussianRational"], [188, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[188, 2, 1, "", "from_AlgebraicField"], [188, 2, 1, "", "from_QQ"], [188, 2, 1, "", "from_QQ_gmpy"], [188, 2, 1, "", "from_QQ_python"], [188, 2, 1, "", "from_ZZ"], [188, 2, 1, "", "from_ZZ_gmpy"], [188, 2, 1, "", "from_ZZ_python"], [188, 2, 1, "", "from_sympy"], [188, 2, 1, "", "inject"], [188, 2, 1, "", "is_negative"], [188, 2, 1, "", "is_nonnegative"], [188, 2, 1, "", "is_nonpositive"], [188, 2, 1, "", "is_positive"], [188, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[188, 2, 1, "", "new"], [188, 2, 1, "", "parent"], [188, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[188, 5, 1, "", "dtype"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[188, 2, 1, "", "as_AlgebraicField"], [188, 2, 1, "", "denom"], [188, 5, 1, "", "dtype"], [188, 2, 1, "", "from_GaussianIntegerRing"], [188, 2, 1, "", "from_GaussianRationalField"], [188, 2, 1, "", "get_field"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[188, 1, 1, "", "ComplexElement"], [188, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[188, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[188, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[188, 2, 1, "", "denom"], [188, 2, 1, "", "div"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "free_module"], [188, 2, 1, "", "get_ring"], [188, 2, 1, "", "ideal"], [188, 2, 1, "", "invert"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "quotient_ring"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[188, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[188, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[190, 3, 1, "", "dmp_cancel"], [190, 3, 1, "", "dmp_content"], [190, 3, 1, "", "dmp_discriminant"], [190, 3, 1, "", "dmp_euclidean_prs"], [190, 3, 1, "", "dmp_ff_prs_gcd"], [190, 3, 1, "", "dmp_gcd"], [190, 3, 1, "", "dmp_gcdex"], [190, 3, 1, "", "dmp_half_gcdex"], [190, 3, 1, "", "dmp_inner_gcd"], [190, 3, 1, "", "dmp_inner_subresultants"], [190, 3, 1, "", "dmp_invert"], [190, 3, 1, "", "dmp_lcm"], [190, 3, 1, "", "dmp_primitive"], [190, 3, 1, "", "dmp_primitive_prs"], [190, 3, 1, "", "dmp_prs_resultant"], [190, 3, 1, "", "dmp_qq_collins_resultant"], [190, 3, 1, "", "dmp_qq_heu_gcd"], [190, 3, 1, "", "dmp_resultant"], [190, 3, 1, "", "dmp_rr_prs_gcd"], [190, 3, 1, "", "dmp_subresultants"], [190, 3, 1, "", "dmp_zz_collins_resultant"], [190, 3, 1, "", "dmp_zz_heu_gcd"], [190, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[190, 3, 1, "", "dmp_ext_factor"], [190, 3, 1, "", "dmp_factor_list"], [190, 3, 1, "", "dmp_factor_list_include"], [190, 3, 1, "", "dmp_irreducible_p"], [190, 3, 1, "", "dmp_trial_division"], [190, 3, 1, "", "dmp_zz_diophantine"], [190, 3, 1, "", "dmp_zz_factor"], [190, 3, 1, "", "dmp_zz_mignotte_bound"], [190, 3, 1, "", "dmp_zz_wang"], [190, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [190, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [190, 3, 1, "", "dmp_zz_wang_non_divisors"], [190, 3, 1, "", "dmp_zz_wang_test_points"], [190, 3, 1, "", "dup_cyclotomic_p"], [190, 3, 1, "", "dup_gf_factor"], [190, 3, 1, "", "dup_zz_cyclotomic_factor"], [190, 3, 1, "", "dup_zz_cyclotomic_poly"], [190, 3, 1, "", "dup_zz_factor"], [190, 3, 1, "", "dup_zz_factor_sqf"], [190, 3, 1, "", "dup_zz_hensel_lift"], [190, 3, 1, "", "dup_zz_hensel_step"], [190, 3, 1, "", "dup_zz_irreducible_p"], [190, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[190, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[188, 1, 1, "", "FracElement"], [188, 1, 1, "", "FracField"], [188, 3, 1, "", "field"], [188, 3, 1, "", "sfield"], [188, 3, 1, "", "vfield"], [188, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[188, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[190, 3, 1, "", "gf_LC"], [190, 3, 1, "", "gf_Qbasis"], [190, 3, 1, "", "gf_Qmatrix"], [190, 3, 1, "", "gf_TC"], [190, 3, 1, "", "gf_add"], [190, 3, 1, "", "gf_add_ground"], [190, 3, 1, "", "gf_add_mul"], [190, 3, 1, "", "gf_berlekamp"], [190, 3, 1, "", "gf_cofactors"], [190, 3, 1, "", "gf_compose"], [190, 3, 1, "", "gf_compose_mod"], [190, 3, 1, "", "gf_crt"], [190, 3, 1, "", "gf_crt1"], [190, 3, 1, "", "gf_crt2"], [190, 3, 1, "", "gf_csolve"], [190, 3, 1, "", "gf_degree"], [190, 3, 1, "", "gf_diff"], [190, 3, 1, "", "gf_div"], [190, 3, 1, "", "gf_eval"], [190, 3, 1, "", "gf_expand"], [190, 3, 1, "", "gf_exquo"], [190, 3, 1, "", "gf_factor"], [190, 3, 1, "", "gf_factor_sqf"], [190, 3, 1, "", "gf_from_dict"], [190, 3, 1, "", "gf_from_int_poly"], [190, 3, 1, "", "gf_gcd"], [190, 3, 1, "", "gf_gcdex"], [190, 3, 1, "", "gf_int"], [190, 3, 1, "", "gf_irreducible"], [190, 3, 1, "", "gf_irreducible_p"], [190, 3, 1, "", "gf_lcm"], [190, 3, 1, "", "gf_lshift"], [190, 3, 1, "", "gf_monic"], [190, 3, 1, "", "gf_mul"], [190, 3, 1, "", "gf_mul_ground"], [190, 3, 1, "", "gf_multi_eval"], [190, 3, 1, "", "gf_neg"], [190, 3, 1, "", "gf_normal"], [190, 3, 1, "", "gf_pow"], [190, 3, 1, "", "gf_pow_mod"], [190, 3, 1, "", "gf_quo"], [190, 3, 1, "", "gf_quo_ground"], [190, 3, 1, "", "gf_random"], [190, 3, 1, "", "gf_rem"], [190, 3, 1, "", "gf_rshift"], [190, 3, 1, "", "gf_shoup"], [190, 3, 1, "", "gf_sqf_list"], [190, 3, 1, "", "gf_sqf_p"], [190, 3, 1, "", "gf_sqf_part"], [190, 3, 1, "", "gf_sqr"], [190, 3, 1, "", "gf_strip"], [190, 3, 1, "", "gf_sub"], [190, 3, 1, "", "gf_sub_ground"], [190, 3, 1, "", "gf_sub_mul"], [190, 3, 1, "", "gf_to_dict"], [190, 3, 1, "", "gf_to_int_poly"], [190, 3, 1, "", "gf_trace_map"], [190, 3, 1, "", "gf_trunc"], [190, 3, 1, "", "gf_value"], [190, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[190, 3, 1, "", "groebner"], [190, 3, 1, "", "is_groebner"], [190, 3, 1, "", "is_minimal"], [190, 3, 1, "", "is_reduced"], [190, 3, 1, "", "red_groebner"], [190, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[186, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[186, 2, 1, "", "add"], [186, 2, 1, "", "charpoly"], [186, 2, 1, "", "det"], [186, 2, 1, "", "hstack"], [186, 2, 1, "", "inv"], [186, 2, 1, "", "is_lower"], [186, 2, 1, "", "is_upper"], [186, 2, 1, "", "is_zero_matrix"], [186, 2, 1, "", "lu"], [186, 2, 1, "", "lu_solve"], [186, 2, 1, "", "matmul"], [186, 2, 1, "", "neg"], [186, 2, 1, "", "rref"], [186, 2, 1, "", "scc"], [186, 2, 1, "", "sub"], [186, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[186, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[186, 2, 1, "", "add"], [186, 2, 1, "", "charpoly"], [186, 2, 1, "", "columnspace"], [186, 2, 1, "", "convert_to"], [186, 2, 1, "", "det"], [186, 2, 1, "", "diag"], [186, 2, 1, "", "eye"], [186, 2, 1, "", "from_Matrix"], [186, 2, 1, "", "from_dict_sympy"], [186, 2, 1, "", "from_list"], [186, 2, 1, "", "from_list_sympy"], [186, 2, 1, "", "from_rep"], [186, 2, 1, "", "hstack"], [186, 2, 1, "", "inv"], [186, 4, 1, "", "is_lower"], [186, 4, 1, "", "is_upper"], [186, 2, 1, "", "lu"], [186, 2, 1, "", "lu_solve"], [186, 2, 1, "", "matmul"], [186, 2, 1, "", "mul"], [186, 2, 1, "", "neg"], [186, 2, 1, "", "nullspace"], [186, 2, 1, "", "ones"], [186, 2, 1, "", "pow"], [186, 2, 1, "", "rowspace"], [186, 2, 1, "", "rref"], [186, 2, 1, "", "scc"], [186, 2, 1, "", "sub"], [186, 2, 1, "", "to_Matrix"], [186, 2, 1, "", "to_dense"], [186, 2, 1, "", "to_field"], [186, 2, 1, "", "to_sparse"], [186, 2, 1, "", "transpose"], [186, 2, 1, "", "unify"], [186, 2, 1, "", "vstack"], [186, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[186, 3, 1, "", "hermite_normal_form"], [186, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[186, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[186, 2, 1, "", "add"], [186, 2, 1, "", "charpoly"], [186, 2, 1, "", "convert_to"], [186, 2, 1, "", "copy"], [186, 2, 1, "", "det"], [186, 2, 1, "", "eye"], [186, 2, 1, "", "from_ddm"], [186, 2, 1, "", "from_list"], [186, 2, 1, "", "hstack"], [186, 2, 1, "", "inv"], [186, 2, 1, "", "is_lower"], [186, 2, 1, "", "is_upper"], [186, 2, 1, "", "is_zero_matrix"], [186, 2, 1, "", "lu"], [186, 2, 1, "", "lu_solve"], [186, 2, 1, "", "matmul"], [186, 2, 1, "", "mul"], [186, 2, 1, "", "neg"], [186, 2, 1, "", "new"], [186, 2, 1, "", "nullspace"], [186, 2, 1, "", "rref"], [186, 2, 1, "", "scc"], [186, 2, 1, "", "sub"], [186, 2, 1, "", "to_ddm"], [186, 2, 1, "", "to_list"], [186, 2, 1, "", "transpose"], [186, 2, 1, "", "vstack"], [186, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[190, 3, 1, "", "_modgcd_multivariate_p"], [190, 3, 1, "", "func_field_modgcd"], [190, 3, 1, "", "modgcd_bivariate"], [190, 3, 1, "", "modgcd_multivariate"], [190, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[193, 1, 1, "", "Monomial"], [193, 3, 1, "", "itermonomials"], [193, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[193, 2, 1, "", "as_expr"], [193, 2, 1, "", "gcd"], [193, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[192, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[192, 3, 1, "", "minimal_polynomial"], [192, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[192, 0, 0, "-", "modules"], [192, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[192, 1, 1, "", "EndomorphismRing"], [192, 1, 1, "", "InnerEndomorphism"], [192, 1, 1, "", "Module"], [192, 1, 1, "", "ModuleElement"], [192, 1, 1, "", "ModuleEndomorphism"], [192, 1, 1, "", "ModuleHomomorphism"], [192, 1, 1, "", "PowerBasis"], [192, 1, 1, "", "PowerBasisElement"], [192, 1, 1, "", "Submodule"], [192, 3, 1, "", "find_min_poly"], [192, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[192, 2, 1, "", "__init__"], [192, 2, 1, "", "inner_endomorphism"], [192, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[192, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[192, 2, 1, "", "__call__"], [192, 2, 1, "", "ancestors"], [192, 2, 1, "", "basis_elements"], [192, 2, 1, "", "element_from_rational"], [192, 2, 1, "", "endomorphism_ring"], [192, 2, 1, "", "is_compat_col"], [192, 2, 1, "", "mult_tab"], [192, 4, 1, "", "n"], [192, 2, 1, "", "nearest_common_ancestor"], [192, 4, 1, "", "number_field"], [192, 2, 1, "", "one"], [192, 4, 1, "", "parent"], [192, 2, 1, "", "power_basis_ancestor"], [192, 2, 1, "", "represent"], [192, 2, 1, "", "starts_with_unity"], [192, 2, 1, "", "submodule_from_gens"], [192, 2, 1, "", "submodule_from_matrix"], [192, 2, 1, "", "whole_submodule"], [192, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[192, 4, 1, "", "QQ_col"], [192, 2, 1, "", "__add__"], [192, 2, 1, "", "__init__"], [192, 2, 1, "", "__mod__"], [192, 2, 1, "", "__mul__"], [192, 2, 1, "", "column"], [192, 2, 1, "", "equiv"], [192, 2, 1, "", "from_int_list"], [192, 2, 1, "", "is_compat"], [192, 4, 1, "", "n"], [192, 2, 1, "", "over_power_basis"], [192, 2, 1, "", "reduced"], [192, 2, 1, "", "reduced_mod_p"], [192, 2, 1, "", "to_ancestor"], [192, 2, 1, "", "to_parent"], [192, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[192, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[192, 2, 1, "", "__init__"], [192, 2, 1, "", "kernel"], [192, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[192, 2, 1, "", "__init__"], [192, 2, 1, "", "element_from_ANP"], [192, 2, 1, "", "element_from_alg_num"], [192, 2, 1, "", "element_from_poly"], [192, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[192, 4, 1, "", "T"], [192, 2, 1, "", "as_expr"], [192, 4, 1, "", "generator"], [192, 4, 1, "", "is_rational"], [192, 2, 1, "", "norm"], [192, 2, 1, "", "numerator"], [192, 2, 1, "", "poly"], [192, 2, 1, "", "to_ANP"], [192, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[192, 4, 1, "", "QQ_matrix"], [192, 2, 1, "", "__init__"], [192, 2, 1, "", "add"], [192, 2, 1, "", "basis_element_pullbacks"], [192, 2, 1, "", "discard_before"], [192, 2, 1, "", "mul"], [192, 2, 1, "", "reduce_element"], [192, 2, 1, "", "reduced"], [192, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[192, 1, 1, "", "PrimeIdeal"], [192, 3, 1, "", "prime_decomp"], [192, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[192, 2, 1, "", "__add__"], [192, 2, 1, "", "__init__"], [192, 2, 1, "", "__mul__"], [192, 2, 1, "", "as_submodule"], [192, 4, 1, "", "is_inert"], [192, 2, 1, "", "reduce_ANP"], [192, 2, 1, "", "reduce_alg_num"], [192, 2, 1, "", "reduce_element"], [192, 2, 1, "", "repr"], [192, 2, 1, "", "test_factor"], [192, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[192, 3, 1, "", "field_isomorphism"], [192, 3, 1, "", "primitive_element"], [192, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[192, 1, 1, "", "AlgIntPowers"], [192, 3, 1, "", "coeff_search"], [192, 3, 1, "", "extract_fundamental_discriminant"], [192, 3, 1, "", "get_num_denom"], [192, 3, 1, "", "is_int"], [192, 3, 1, "", "is_rat"], [192, 3, 1, "", "isolate"], [192, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[192, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[193, 1, 1, "", "GradedLexOrder"], [193, 1, 1, "", "LexOrder"], [193, 1, 1, "", "MonomialOrder"], [193, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[193, 3, 1, "", "chebyshevt_poly"], [193, 3, 1, "", "chebyshevu_poly"], [193, 3, 1, "", "gegenbauer_poly"], [193, 3, 1, "", "hermite_poly"], [193, 3, 1, "", "jacobi_poly"], [193, 3, 1, "", "laguerre_poly"], [193, 3, 1, "", "legendre_poly"], [193, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[193, 3, 1, "", "apart"], [193, 3, 1, "", "apart_list"], [193, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[188, 1, 1, "", "ANP"], [188, 1, 1, "", "DMF"], [188, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[188, 2, 1, "", "LC"], [188, 2, 1, "", "TC"], [188, 4, 1, "", "is_ground"], [188, 4, 1, "", "is_one"], [188, 4, 1, "", "is_zero"], [188, 2, 1, "", "pow"], [188, 2, 1, "", "to_dict"], [188, 2, 1, "", "to_list"], [188, 2, 1, "", "to_sympy_dict"], [188, 2, 1, "", "to_sympy_list"], [188, 2, 1, "", "to_tuple"], [188, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[188, 2, 1, "", "add"], [188, 2, 1, "", "cancel"], [188, 2, 1, "", "denom"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "frac_unify"], [188, 2, 1, "", "half_per"], [188, 2, 1, "", "invert"], [188, 4, 1, "", "is_one"], [188, 4, 1, "", "is_zero"], [188, 2, 1, "", "mul"], [188, 2, 1, "", "neg"], [188, 2, 1, "", "numer"], [188, 2, 1, "", "per"], [188, 2, 1, "", "poly_unify"], [188, 2, 1, "", "pow"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[188, 2, 1, "", "LC"], [188, 2, 1, "", "TC"], [188, 2, 1, "", "abs"], [188, 2, 1, "", "add"], [188, 2, 1, "", "add_ground"], [188, 2, 1, "", "all_coeffs"], [188, 2, 1, "", "all_monoms"], [188, 2, 1, "", "all_terms"], [188, 2, 1, "", "cancel"], [188, 2, 1, "", "cauchy_lower_bound"], [188, 2, 1, "", "cauchy_upper_bound"], [188, 2, 1, "", "clear_denoms"], [188, 2, 1, "", "coeffs"], [188, 2, 1, "", "cofactors"], [188, 2, 1, "", "compose"], [188, 2, 1, "", "content"], [188, 2, 1, "", "convert"], [188, 2, 1, "", "count_complex_roots"], [188, 2, 1, "", "count_real_roots"], [188, 2, 1, "", "decompose"], [188, 2, 1, "", "deflate"], [188, 2, 1, "", "degree"], [188, 2, 1, "", "degree_list"], [188, 2, 1, "", "diff"], [188, 2, 1, "", "discriminant"], [188, 2, 1, "", "div"], [188, 2, 1, "", "eject"], [188, 2, 1, "", "eval"], [188, 2, 1, "", "exclude"], [188, 2, 1, "", "exquo"], [188, 2, 1, "", "exquo_ground"], [188, 2, 1, "", "factor_list"], [188, 2, 1, "", "factor_list_include"], [188, 2, 1, "", "from_dict"], [188, 2, 1, "", "from_list"], [188, 2, 1, "", "from_sympy_list"], [188, 2, 1, "", "gcd"], [188, 2, 1, "", "gcdex"], [188, 2, 1, "", "gff_list"], [188, 2, 1, "", "half_gcdex"], [188, 2, 1, "", "homogeneous_order"], [188, 2, 1, "", "homogenize"], [188, 2, 1, "", "inject"], [188, 2, 1, "", "integrate"], [188, 2, 1, "", "intervals"], [188, 2, 1, "", "invert"], [188, 4, 1, "", "is_cyclotomic"], [188, 4, 1, "", "is_ground"], [188, 4, 1, "", "is_homogeneous"], [188, 4, 1, "", "is_irreducible"], [188, 4, 1, "", "is_linear"], [188, 4, 1, "", "is_monic"], [188, 4, 1, "", "is_monomial"], [188, 4, 1, "", "is_one"], [188, 4, 1, "", "is_primitive"], [188, 4, 1, "", "is_quadratic"], [188, 4, 1, "", "is_sqf"], [188, 4, 1, "", "is_zero"], [188, 2, 1, "", "l1_norm"], [188, 2, 1, "", "l2_norm_squared"], [188, 2, 1, "", "lcm"], [188, 2, 1, "", "lift"], [188, 2, 1, "", "max_norm"], [188, 2, 1, "", "mignotte_sep_bound_squared"], [188, 2, 1, "", "monic"], [188, 2, 1, "", "monoms"], [188, 2, 1, "", "mul"], [188, 2, 1, "", "mul_ground"], [188, 2, 1, "", "neg"], [188, 2, 1, "", "norm"], [188, 2, 1, "", "nth"], [188, 2, 1, "", "pdiv"], [188, 2, 1, "", "per"], [188, 2, 1, "", "permute"], [188, 2, 1, "", "pexquo"], [188, 2, 1, "", "pow"], [188, 2, 1, "", "pquo"], [188, 2, 1, "", "prem"], [188, 2, 1, "", "primitive"], [188, 2, 1, "", "quo"], [188, 2, 1, "", "quo_ground"], [188, 2, 1, "", "refine_root"], [188, 2, 1, "", "rem"], [188, 2, 1, "", "resultant"], [188, 2, 1, "", "revert"], [188, 2, 1, "", "shift"], [188, 2, 1, "", "slice"], [188, 2, 1, "", "sqf_list"], [188, 2, 1, "", "sqf_list_include"], [188, 2, 1, "", "sqf_norm"], [188, 2, 1, "", "sqf_part"], [188, 2, 1, "", "sqr"], [188, 2, 1, "", "sturm"], [188, 2, 1, "", "sub"], [188, 2, 1, "", "sub_ground"], [188, 2, 1, "", "subresultants"], [188, 2, 1, "", "terms"], [188, 2, 1, "", "terms_gcd"], [188, 2, 1, "", "to_dict"], [188, 2, 1, "", "to_exact"], [188, 2, 1, "", "to_field"], [188, 2, 1, "", "to_list"], [188, 2, 1, "", "to_ring"], [188, 2, 1, "", "to_sympy_dict"], [188, 2, 1, "", "to_sympy_list"], [188, 2, 1, "", "to_tuple"], [188, 2, 1, "", "total_degree"], [188, 2, 1, "", "transform"], [188, 2, 1, "", "trunc"], [188, 2, 1, "", "unify"]], "sympy.polys": [[190, 0, 0, "-", "polyconfig"], [190, 0, 0, "-", "polyoptions"], [195, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[190, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[190, 1, 1, "", "BasePolynomialError"], [190, 1, 1, "", "CoercionFailed"], [190, 1, 1, "", "ComputationFailed"], [190, 1, 1, "", "DomainError"], [190, 1, 1, "", "EvaluationFailed"], [190, 1, 1, "", "ExactQuotientFailed"], [190, 1, 1, "", "ExtraneousFactors"], [190, 1, 1, "", "FlagError"], [190, 1, 1, "", "GeneratorsError"], [190, 1, 1, "", "GeneratorsNeeded"], [190, 1, 1, "", "HeuristicGCDFailed"], [190, 1, 1, "", "HomomorphismFailed"], [190, 1, 1, "", "IsomorphismFailed"], [190, 1, 1, "", "MultivariatePolynomialError"], [190, 1, 1, "", "NotAlgebraic"], [190, 1, 1, "", "NotInvertible"], [190, 1, 1, "", "NotReversible"], [190, 1, 1, "", "OperationNotSupported"], [190, 1, 1, "", "OptionError"], [190, 1, 1, "", "PolificationFailed"], [190, 1, 1, "", "PolynomialError"], [190, 1, 1, "", "RefinementFailed"], [190, 1, 1, "", "UnificationFailed"], [190, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[193, 3, 1, "", "horner"], [193, 3, 1, "", "interpolate"], [193, 3, 1, "", "symmetrize"], [193, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[190, 1, 1, "", "Options"], [190, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[190, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[193, 3, 1, "", "roots"]], "sympy.polys.polytools": [[193, 1, 1, "", "GroebnerBasis"], [193, 3, 1, "", "LC"], [193, 3, 1, "", "LM"], [193, 3, 1, "", "LT"], [193, 1, 1, "", "Poly"], [193, 1, 1, "", "PurePoly"], [193, 3, 1, "", "cancel"], [193, 3, 1, "", "cofactors"], [193, 3, 1, "", "compose"], [193, 3, 1, "", "content"], [193, 3, 1, "", "count_roots"], [193, 3, 1, "", "decompose"], [193, 3, 1, "", "degree"], [193, 3, 1, "", "degree_list"], [193, 3, 1, "", "discriminant"], [193, 3, 1, "", "div"], [193, 3, 1, "", "exquo"], [193, 3, 1, "", "factor"], [193, 3, 1, "", "factor_list"], [193, 3, 1, "", "gcd"], [193, 3, 1, "", "gcd_list"], [193, 3, 1, "", "gcdex"], [193, 3, 1, "", "gff"], [193, 3, 1, "", "gff_list"], [193, 3, 1, "", "groebner"], [193, 3, 1, "", "ground_roots"], [193, 3, 1, "", "half_gcdex"], [193, 3, 1, "", "intervals"], [193, 3, 1, "", "invert"], [193, 3, 1, "", "is_zero_dimensional"], [193, 3, 1, "", "lcm"], [193, 3, 1, "", "lcm_list"], [193, 3, 1, "", "monic"], [193, 3, 1, "", "nroots"], [193, 3, 1, "", "nth_power_roots_poly"], [193, 3, 1, "", "parallel_poly_from_expr"], [193, 3, 1, "", "pdiv"], [193, 3, 1, "", "pexquo"], [193, 3, 1, "", "poly"], [193, 3, 1, "", "poly_from_expr"], [193, 3, 1, "", "pquo"], [193, 3, 1, "", "prem"], [193, 3, 1, "", "primitive"], [193, 3, 1, "", "quo"], [193, 3, 1, "", "real_roots"], [193, 3, 1, "", "reduced"], [193, 3, 1, "", "refine_root"], [193, 3, 1, "", "rem"], [193, 3, 1, "", "resultant"], [193, 3, 1, "", "sqf"], [193, 3, 1, "", "sqf_list"], [193, 3, 1, "", "sqf_norm"], [193, 3, 1, "", "sqf_part"], [193, 3, 1, "", "sturm"], [193, 3, 1, "", "subresultants"], [193, 3, 1, "", "terms_gcd"], [193, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[193, 2, 1, "", "contains"], [193, 2, 1, "", "fglm"], [193, 4, 1, "", "is_zero_dimensional"], [193, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[193, 2, 1, "", "EC"], [193, 2, 1, "", "EM"], [193, 2, 1, "", "ET"], [193, 2, 1, "", "LC"], [193, 2, 1, "", "LM"], [193, 2, 1, "", "LT"], [193, 2, 1, "", "TC"], [193, 2, 1, "", "abs"], [193, 2, 1, "", "add"], [193, 2, 1, "", "add_ground"], [193, 2, 1, "", "all_coeffs"], [193, 2, 1, "", "all_monoms"], [193, 2, 1, "", "all_roots"], [193, 2, 1, "", "all_terms"], [193, 2, 1, "", "as_dict"], [193, 2, 1, "", "as_expr"], [193, 2, 1, "", "as_list"], [193, 2, 1, "", "as_poly"], [193, 2, 1, "", "cancel"], [193, 2, 1, "", "clear_denoms"], [193, 2, 1, "", "coeff_monomial"], [193, 2, 1, "", "coeffs"], [193, 2, 1, "", "cofactors"], [193, 2, 1, "", "compose"], [193, 2, 1, "", "content"], [193, 2, 1, "", "count_roots"], [193, 2, 1, "", "decompose"], [193, 2, 1, "", "deflate"], [193, 2, 1, "", "degree"], [193, 2, 1, "", "degree_list"], [193, 2, 1, "", "diff"], [193, 2, 1, "", "discriminant"], [193, 2, 1, "", "dispersion"], [193, 2, 1, "", "dispersionset"], [193, 2, 1, "", "div"], [193, 4, 1, "", "domain"], [193, 2, 1, "", "eject"], [193, 2, 1, "", "eval"], [193, 2, 1, "", "exclude"], [193, 2, 1, "", "exquo"], [193, 2, 1, "", "exquo_ground"], [193, 2, 1, "", "factor_list"], [193, 2, 1, "", "factor_list_include"], [193, 4, 1, "", "free_symbols"], [193, 4, 1, "", "free_symbols_in_domain"], [193, 2, 1, "", "from_dict"], [193, 2, 1, "", "from_expr"], [193, 2, 1, "", "from_list"], [193, 2, 1, "", "from_poly"], [193, 2, 1, "", "gcd"], [193, 2, 1, "", "gcdex"], [193, 4, 1, "", "gen"], [193, 2, 1, "", "get_domain"], [193, 2, 1, "", "get_modulus"], [193, 2, 1, "", "gff_list"], [193, 2, 1, "", "ground_roots"], [193, 2, 1, "", "half_gcdex"], [193, 2, 1, "", "has_only_gens"], [193, 2, 1, "", "homogeneous_order"], [193, 2, 1, "", "homogenize"], [193, 2, 1, "", "inject"], [193, 2, 1, "", "integrate"], [193, 2, 1, "", "intervals"], [193, 2, 1, "", "invert"], [193, 4, 1, "", "is_cyclotomic"], [193, 4, 1, "", "is_ground"], [193, 4, 1, "", "is_homogeneous"], [193, 4, 1, "", "is_irreducible"], [193, 4, 1, "", "is_linear"], [193, 4, 1, "", "is_monic"], [193, 4, 1, "", "is_monomial"], [193, 4, 1, "", "is_multivariate"], [193, 4, 1, "", "is_one"], [193, 4, 1, "", "is_primitive"], [193, 4, 1, "", "is_quadratic"], [193, 4, 1, "", "is_sqf"], [193, 4, 1, "", "is_univariate"], [193, 4, 1, "", "is_zero"], [193, 2, 1, "", "l1_norm"], [193, 2, 1, "", "lcm"], [193, 2, 1, "", "length"], [193, 2, 1, "", "lift"], [193, 2, 1, "", "ltrim"], [193, 2, 1, "", "match"], [193, 2, 1, "", "max_norm"], [193, 2, 1, "", "monic"], [193, 2, 1, "", "monoms"], [193, 2, 1, "", "mul"], [193, 2, 1, "", "mul_ground"], [193, 2, 1, "", "neg"], [193, 2, 1, "", "new"], [193, 2, 1, "", "norm"], [193, 2, 1, "", "nroots"], [193, 2, 1, "", "nth"], [193, 2, 1, "", "nth_power_roots_poly"], [193, 4, 1, "", "one"], [193, 2, 1, "", "pdiv"], [193, 2, 1, "", "per"], [193, 2, 1, "", "pexquo"], [193, 2, 1, "", "pow"], [193, 2, 1, "", "pquo"], [193, 2, 1, "", "prem"], [193, 2, 1, "", "primitive"], [193, 2, 1, "", "quo"], [193, 2, 1, "", "quo_ground"], [193, 2, 1, "", "rat_clear_denoms"], [193, 2, 1, "", "real_roots"], [193, 2, 1, "", "refine_root"], [193, 2, 1, "", "rem"], [193, 2, 1, "", "reorder"], [193, 2, 1, "", "replace"], [193, 2, 1, "", "resultant"], [193, 2, 1, "", "retract"], [193, 2, 1, "", "revert"], [193, 2, 1, "", "root"], [193, 2, 1, "", "same_root"], [193, 2, 1, "", "set_domain"], [193, 2, 1, "", "set_modulus"], [193, 2, 1, "", "shift"], [193, 2, 1, "", "slice"], [193, 2, 1, "", "sqf_list"], [193, 2, 1, "", "sqf_list_include"], [193, 2, 1, "", "sqf_norm"], [193, 2, 1, "", "sqf_part"], [193, 2, 1, "", "sqr"], [193, 2, 1, "", "sturm"], [193, 2, 1, "", "sub"], [193, 2, 1, "", "sub_ground"], [193, 2, 1, "", "subresultants"], [193, 2, 1, "", "terms"], [193, 2, 1, "", "terms_gcd"], [193, 2, 1, "", "termwise"], [193, 2, 1, "", "to_exact"], [193, 2, 1, "", "to_field"], [193, 2, 1, "", "to_ring"], [193, 2, 1, "", "total_degree"], [193, 2, 1, "", "transform"], [193, 2, 1, "", "trunc"], [193, 2, 1, "", "unify"], [193, 4, 1, "", "unit"], [193, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[193, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[193, 3, 1, "", "together"]], "sympy.polys.ring_series": [[194, 3, 1, "", "_tan1"], [194, 3, 1, "", "mul_xin"], [194, 3, 1, "", "pow_xin"], [194, 3, 1, "", "rs_LambertW"], [194, 3, 1, "", "rs_asin"], [194, 3, 1, "", "rs_atan"], [194, 3, 1, "", "rs_atanh"], [194, 3, 1, "", "rs_compose_add"], [194, 3, 1, "", "rs_cos"], [194, 3, 1, "", "rs_cos_sin"], [194, 3, 1, "", "rs_cosh"], [194, 3, 1, "", "rs_cot"], [194, 3, 1, "", "rs_diff"], [194, 3, 1, "", "rs_exp"], [194, 3, 1, "", "rs_fun"], [194, 3, 1, "", "rs_hadamard_exp"], [194, 3, 1, "", "rs_integrate"], [194, 3, 1, "", "rs_is_puiseux"], [194, 3, 1, "", "rs_log"], [194, 3, 1, "", "rs_mul"], [194, 3, 1, "", "rs_newton"], [194, 3, 1, "", "rs_nth_root"], [194, 3, 1, "", "rs_pow"], [194, 3, 1, "", "rs_puiseux"], [194, 3, 1, "", "rs_puiseux2"], [194, 3, 1, "", "rs_series_from_list"], [194, 3, 1, "", "rs_series_inversion"], [194, 3, 1, "", "rs_series_reversion"], [194, 3, 1, "", "rs_sin"], [194, 3, 1, "", "rs_sinh"], [194, 3, 1, "", "rs_square"], [194, 3, 1, "", "rs_subs"], [194, 3, 1, "", "rs_tan"], [194, 3, 1, "", "rs_tanh"], [194, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[188, 1, 1, "", "PolyElement"], [188, 1, 1, "", "PolyRing"], [188, 3, 1, "", "ring"], [188, 3, 1, "", "sring"], [188, 3, 1, "", "vring"], [188, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[188, 2, 1, "", "almosteq"], [188, 2, 1, "", "cancel"], [188, 2, 1, "", "coeff"], [188, 2, 1, "", "coeffs"], [188, 2, 1, "", "const"], [188, 2, 1, "", "content"], [188, 2, 1, "", "copy"], [188, 2, 1, "", "degree"], [188, 2, 1, "", "degrees"], [188, 2, 1, "", "diff"], [188, 2, 1, "", "div"], [188, 2, 1, "", "imul_num"], [188, 2, 1, "", "itercoeffs"], [188, 2, 1, "", "itermonoms"], [188, 2, 1, "", "iterterms"], [188, 2, 1, "", "leading_expv"], [188, 2, 1, "", "leading_monom"], [188, 2, 1, "", "leading_term"], [188, 2, 1, "", "listcoeffs"], [188, 2, 1, "", "listmonoms"], [188, 2, 1, "", "listterms"], [188, 2, 1, "", "monic"], [188, 2, 1, "", "monoms"], [188, 2, 1, "", "primitive"], [188, 2, 1, "", "square"], [188, 2, 1, "", "strip_zero"], [188, 2, 1, "", "tail_degree"], [188, 2, 1, "", "tail_degrees"], [188, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[188, 2, 1, "", "add"], [188, 2, 1, "", "add_gens"], [188, 2, 1, "", "compose"], [188, 2, 1, "", "drop"], [188, 2, 1, "", "drop_to_ground"], [188, 2, 1, "", "index"], [188, 2, 1, "", "monomial_basis"], [188, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[193, 1, 1, "", "ComplexRootOf"], [193, 1, 1, "", "RootOf"], [193, 1, 1, "", "RootSum"], [193, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[193, 2, 1, "", "_all_roots"], [193, 2, 1, "", "_complexes_index"], [193, 2, 1, "", "_complexes_sorted"], [193, 2, 1, "", "_count_roots"], [193, 2, 1, "", "_ensure_complexes_init"], [193, 2, 1, "", "_ensure_reals_init"], [193, 2, 1, "", "_eval_evalf"], [193, 2, 1, "", "_eval_is_imaginary"], [193, 2, 1, "", "_eval_is_real"], [193, 2, 1, "", "_get_complexes"], [193, 2, 1, "", "_get_complexes_sqf"], [193, 2, 1, "", "_get_interval"], [193, 2, 1, "", "_get_reals"], [193, 2, 1, "", "_get_reals_sqf"], [193, 2, 1, "", "_get_roots"], [193, 2, 1, "", "_indexed_root"], [193, 2, 1, "", "_new"], [193, 2, 1, "", "_postprocess_root"], [193, 2, 1, "", "_preprocess_roots"], [193, 2, 1, "", "_real_roots"], [193, 2, 1, "", "_reals_index"], [193, 2, 1, "", "_reals_sorted"], [193, 2, 1, "", "_refine_complexes"], [193, 2, 1, "", "_reset"], [193, 2, 1, "", "_roots_trivial"], [193, 2, 1, "", "_set_interval"], [193, 2, 1, "", "all_roots"], [193, 2, 1, "", "clear_cache"], [193, 2, 1, "", "eval_approx"], [193, 2, 1, "", "eval_rational"], [193, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[193, 2, 1, "", "new"]], "sympy.polys.solvers": [[195, 3, 1, "", "_solve_lin_sys"], [195, 3, 1, "", "_solve_lin_sys_component"], [195, 3, 1, "", "eqs_to_matrix"], [195, 3, 1, "", "solve_lin_sys"], [195, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[193, 3, 1, "", "cyclotomic_poly"], [193, 3, 1, "", "interpolating_poly"], [193, 3, 1, "", "random_poly"], [193, 3, 1, "", "swinnerton_dyer_poly"], [193, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[197, 0, 0, "-", "aesaracode"], [197, 0, 0, "-", "c"], [197, 0, 0, "-", "codeprinter"], [197, 0, 0, "-", "conventions"], [197, 0, 0, "-", "cxx"], [197, 0, 0, "-", "fortran"], [197, 0, 0, "-", "gtk"], [197, 0, 0, "-", "jscode"], [197, 0, 0, "-", "julia"], [197, 0, 0, "-", "lambdarepr"], [197, 0, 0, "-", "latex"], [197, 0, 0, "-", "maple"], [197, 0, 0, "-", "mathematica"], [197, 0, 0, "-", "mathml"], [197, 0, 0, "-", "octave"], [197, 0, 0, "-", "precedence"], [197, 0, 0, "-", "pretty"], [197, 0, 0, "-", "preview"], [197, 0, 0, "-", "printer"], [197, 0, 0, "-", "pycode"], [197, 0, 0, "-", "python"], [197, 0, 0, "-", "rcode"], [197, 0, 0, "-", "repr"], [197, 0, 0, "-", "rust"], [197, 0, 0, "-", "str"], [197, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[197, 1, 1, "", "AesaraPrinter"], [197, 3, 1, "", "aesara_code"], [197, 3, 1, "", "aesara_function"], [197, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[197, 2, 1, "", "doprint"], [197, 5, 1, "", "printmethod"]], "sympy.printing.c": [[197, 1, 1, "", "C89CodePrinter"], [197, 1, 1, "", "C99CodePrinter"], [197, 3, 1, "", "ccode"], [197, 6, 1, "", "known_functions_C89"], [197, 6, 1, "", "known_functions_C99"], [197, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[197, 7, 1, "", "AssignmentError"], [197, 1, 1, "", "CodePrinter"], [197, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[197, 2, 1, "", "doprint"], [197, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[197, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[197, 1, 1, "", "CXX11CodePrinter"], [197, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[197, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[197, 1, 1, "", "FCodePrinter"], [197, 3, 1, "", "fcode"], [197, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[197, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[197, 1, 1, "", "JavascriptCodePrinter"], [197, 3, 1, "", "jscode"], [197, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[197, 1, 1, "", "JuliaCodePrinter"], [197, 3, 1, "", "julia_code"], [197, 6, 1, "", "known_fcns_src1"], [197, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[197, 1, 1, "", "LambdaPrinter"], [197, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[197, 1, 1, "", "LatexPrinter"], [197, 6, 1, "", "accepted_latex_functions"], [197, 3, 1, "", "latex"], [197, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[197, 2, 1, "", "parenthesize_super"], [197, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[197, 1, 1, "", "MapleCodePrinter"], [197, 3, 1, "", "maple_code"], [197, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[197, 1, 1, "", "MCodePrinter"], [197, 6, 1, "", "known_functions"], [197, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[197, 1, 1, "", "MathMLContentPrinter"], [197, 1, 1, "", "MathMLPresentationPrinter"], [197, 1, 1, "", "MathMLPrinterBase"], [197, 3, 1, "", "mathml"], [197, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[197, 2, 1, "", "mathml_tag"], [197, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[197, 2, 1, "", "mathml_tag"], [197, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[197, 2, 1, "", "doprint"]], "sympy.printing.octave": [[197, 1, 1, "", "OctaveCodePrinter"], [197, 6, 1, "", "known_fcns_src1"], [197, 6, 1, "", "known_fcns_src2"], [197, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[197, 6, 1, "", "PRECEDENCE"], [197, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [197, 6, 1, "", "PRECEDENCE_VALUES"], [197, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[197, 0, 0, "-", "pretty"], [197, 0, 0, "-", "pretty_symbology"], [197, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[197, 1, 1, "", "PrettyPrinter"], [197, 3, 1, "", "pretty"], [197, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[197, 3, 1, "", "G"], [197, 3, 1, "", "U"], [197, 3, 1, "", "VF"], [197, 3, 1, "", "annotated"], [197, 6, 1, "", "atoms_table"], [197, 6, 1, "", "digit_2txt"], [197, 6, 1, "", "frac"], [197, 3, 1, "", "g"], [197, 6, 1, "", "greek_letters"], [197, 3, 1, "", "hobj"], [197, 3, 1, "", "pretty_atom"], [197, 3, 1, "", "pretty_symbol"], [197, 3, 1, "", "pretty_try_use_unicode"], [197, 3, 1, "", "pretty_use_unicode"], [197, 6, 1, "", "root"], [197, 6, 1, "", "sub"], [197, 6, 1, "", "sup"], [197, 6, 1, "", "symb_2txt"], [197, 3, 1, "", "vobj"], [197, 3, 1, "", "xobj"], [197, 3, 1, "", "xstr"], [197, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[197, 1, 1, "", "prettyForm"], [197, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[197, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[197, 2, 1, "", "above"], [197, 2, 1, "", "below"], [197, 2, 1, "", "height"], [197, 2, 1, "", "left"], [197, 2, 1, "", "leftslash"], [197, 2, 1, "", "next"], [197, 2, 1, "", "parens"], [197, 2, 1, "", "render"], [197, 2, 1, "", "right"], [197, 2, 1, "", "root"], [197, 2, 1, "", "stack"], [197, 2, 1, "", "terminal_width"], [197, 2, 1, "", "width"]], "sympy.printing.preview": [[197, 3, 1, "", "preview"]], "sympy.printing.printer": [[197, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[197, 2, 1, "", "_print"], [197, 2, 1, "", "doprint"], [197, 5, 1, "", "printmethod"], [197, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[197, 1, 1, "", "MpmathPrinter"], [197, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[197, 1, 1, "", "RCodePrinter"], [197, 6, 1, "", "known_functions"], [197, 3, 1, "", "print_rcode"], [197, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[197, 1, 1, "", "ReprPrinter"], [197, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[197, 2, 1, "", "emptyPrinter"], [197, 5, 1, "", "printmethod"], [197, 2, 1, "", "reprify"]], "sympy.printing.rust": [[197, 1, 1, "", "RustCodePrinter"], [197, 6, 1, "", "known_functions"], [197, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[197, 2, 1, "", "indent_code"], [197, 5, 1, "", "printmethod"]], "sympy.printing.str": [[197, 1, 1, "", "StrPrinter"], [197, 3, 1, "", "sstr"], [197, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[197, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[197, 3, 1, "", "pprint_nodes"], [197, 3, 1, "", "print_node"], [197, 3, 1, "", "print_tree"], [197, 3, 1, "", "tree"]], "sympy.series.acceleration": [[204, 3, 1, "", "richardson"], [204, 3, 1, "", "shanks"]], "sympy.series.formal": [[199, 1, 1, "", "FiniteFormalPowerSeries"], [199, 1, 1, "", "FormalPowerSeries"], [199, 1, 1, "", "FormalPowerSeriesCompose"], [199, 1, 1, "", "FormalPowerSeriesInverse"], [199, 1, 1, "", "FormalPowerSeriesProduct"], [199, 3, 1, "", "compute_fps"], [199, 3, 1, "", "exp_re"], [199, 3, 1, "", "fps"], [199, 3, 1, "", "hyper_algorithm"], [199, 3, 1, "", "hyper_re"], [199, 3, 1, "", "rational_algorithm"], [199, 3, 1, "", "rational_independent"], [199, 3, 1, "", "rsolve_hypergeometric"], [199, 3, 1, "", "simpleDE"], [199, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[199, 2, 1, "", "coeff_bell"], [199, 2, 1, "", "compose"], [199, 4, 1, "", "infinite"], [199, 2, 1, "", "integrate"], [199, 2, 1, "", "inverse"], [199, 2, 1, "", "polynomial"], [199, 2, 1, "", "product"], [199, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[199, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[199, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[199, 4, 1, "", "function"]], "sympy.series.fourier": [[200, 1, 1, "", "FourierSeries"], [200, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[200, 2, 1, "", "scale"], [200, 2, 1, "", "scalex"], [200, 2, 1, "", "shift"], [200, 2, 1, "", "shiftx"], [200, 2, 1, "", "sigma_approximation"], [200, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[204, 1, 1, "", "SubsSet"], [204, 3, 1, "", "build_expression_tree"], [204, 3, 1, "", "calculate_series"], [204, 3, 1, "", "compare"], [204, 3, 1, "", "gruntz"], [204, 3, 1, "", "limitinf"], [204, 3, 1, "", "mrv"], [204, 3, 1, "", "mrv_leadterm"], [204, 3, 1, "", "mrv_max1"], [204, 3, 1, "", "mrv_max3"], [204, 3, 1, "", "rewrite"], [204, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[204, 2, 1, "", "copy"], [204, 2, 1, "", "do_subs"], [204, 2, 1, "", "meets"], [204, 2, 1, "", "union"]], "sympy.series.limits": [[204, 1, 1, "", "Limit"], [204, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[204, 2, 1, "", "doit"]], "sympy.series.limitseq": [[202, 3, 1, "", "difference_delta"], [202, 3, 1, "", "dominant"], [202, 3, 1, "", "limit_seq"]], "sympy.series.order": [[204, 1, 1, "", "Order"]], "sympy.series.order.Order": [[204, 2, 1, "", "contains"]], "sympy.series.residues": [[204, 3, 1, "", "residue"]], "sympy.series.sequences": [[203, 1, 1, "", "EmptySequence"], [203, 1, 1, "", "RecursiveSeq"], [203, 1, 1, "", "SeqAdd"], [203, 1, 1, "", "SeqBase"], [203, 1, 1, "", "SeqFormula"], [203, 1, 1, "", "SeqMul"], [203, 1, 1, "", "SeqPer"], [203, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[203, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[203, 4, 1, "", "initial"], [203, 4, 1, "", "interval"], [203, 4, 1, "", "n"], [203, 4, 1, "", "recurrence"], [203, 4, 1, "", "start"], [203, 4, 1, "", "stop"], [203, 4, 1, "", "y"], [203, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[203, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[203, 2, 1, "", "coeff"], [203, 2, 1, "", "coeff_mul"], [203, 2, 1, "", "find_linear_recurrence"], [203, 4, 1, "", "free_symbols"], [203, 4, 1, "", "gen"], [203, 4, 1, "", "interval"], [203, 4, 1, "", "length"], [203, 4, 1, "", "start"], [203, 4, 1, "", "stop"], [203, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[203, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[203, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[203, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[204, 3, 1, "", "series"]], "sympy.sets": [[205, 0, 0, "-", "conditionset"], [205, 0, 0, "-", "fancysets"], [205, 0, 0, "-", "powerset"], [205, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[205, 1, 1, "", "ConditionSet"], [205, 1, 1, "", "Contains"], [205, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[205, 1, 1, "", "CartesianComplexRegion"], [205, 1, 1, "", "ComplexRegion"], [205, 1, 1, "", "Complexes"], [205, 1, 1, "", "ImageSet"], [205, 1, 1, "", "Integers"], [205, 1, 1, "", "Naturals"], [205, 1, 1, "", "Naturals0"], [205, 1, 1, "", "PolarComplexRegion"], [205, 1, 1, "", "Range"], [205, 1, 1, "", "Rationals"], [205, 1, 1, "", "Reals"], [205, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[205, 4, 1, "", "a_interval"], [205, 4, 1, "", "b_interval"], [205, 2, 1, "", "from_real"], [205, 4, 1, "", "psets"], [205, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[205, 2, 1, "", "as_relational"], [205, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[205, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[205, 1, 1, "", "Complement"], [205, 1, 1, "", "DisjointUnion"], [205, 1, 1, "", "EmptySet"], [205, 1, 1, "", "FiniteSet"], [205, 1, 1, "", "Intersection"], [205, 1, 1, "", "Interval"], [205, 1, 1, "", "ProductSet"], [205, 1, 1, "", "Set"], [205, 1, 1, "", "SymmetricDifference"], [205, 1, 1, "", "Union"], [205, 1, 1, "", "UniversalSet"], [205, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[205, 2, 1, "", "as_relational"], [205, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[205, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[205, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[205, 2, 1, "", "Lopen"], [205, 2, 1, "", "Ropen"], [205, 2, 1, "", "as_relational"], [205, 4, 1, "", "end"], [205, 4, 1, "", "is_left_unbounded"], [205, 4, 1, "", "is_right_unbounded"], [205, 4, 1, "", "left_open"], [205, 2, 1, "", "open"], [205, 4, 1, "", "right_open"], [205, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[205, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[205, 4, 1, "", "boundary"], [205, 4, 1, "", "closure"], [205, 2, 1, "", "complement"], [205, 2, 1, "", "contains"], [205, 4, 1, "", "inf"], [205, 4, 1, "", "interior"], [205, 2, 1, "", "intersect"], [205, 2, 1, "", "intersection"], [205, 4, 1, "", "is_closed"], [205, 2, 1, "", "is_disjoint"], [205, 4, 1, "", "is_open"], [205, 2, 1, "", "is_proper_subset"], [205, 2, 1, "", "is_proper_superset"], [205, 2, 1, "", "is_subset"], [205, 2, 1, "", "is_superset"], [205, 2, 1, "", "isdisjoint"], [205, 2, 1, "", "issubset"], [205, 2, 1, "", "issuperset"], [205, 4, 1, "", "kind"], [205, 4, 1, "", "measure"], [205, 2, 1, "", "powerset"], [205, 4, 1, "", "sup"], [205, 2, 1, "", "symmetric_difference"], [205, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[205, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[205, 2, 1, "", "as_relational"]], "sympy.simplify": [[209, 0, 0, "-", "combsimp"], [209, 0, 0, "-", "cse_main"], [209, 0, 0, "-", "epathtools"], [209, 0, 0, "-", "hyperexpand"], [207, 0, 0, "-", "hyperexpand_doc"], [209, 0, 0, "-", "powsimp"], [209, 0, 0, "-", "radsimp"], [209, 0, 0, "-", "ratsimp"], [11, 0, 0, "-", "simplify"], [209, 0, 0, "-", "sqrtdenest"], [209, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[209, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[209, 3, 1, "", "cse"], [209, 3, 1, "", "opt_cse"], [209, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[209, 1, 1, "", "EPath"], [209, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[209, 2, 1, "", "apply"], [209, 2, 1, "", "select"]], "sympy.simplify.fu": [[206, 3, 1, "", "TR0"], [206, 3, 1, "", "TR1"], [206, 3, 1, "", "TR10"], [206, 3, 1, "", "TR10i"], [206, 3, 1, "", "TR11"], [206, 3, 1, "", "TR111"], [206, 3, 1, "", "TR12"], [206, 3, 1, "", "TR12i"], [206, 3, 1, "", "TR13"], [206, 3, 1, "", "TR14"], [206, 3, 1, "", "TR15"], [206, 3, 1, "", "TR16"], [206, 3, 1, "", "TR2"], [206, 3, 1, "", "TR22"], [206, 3, 1, "", "TR2i"], [206, 3, 1, "", "TR3"], [206, 3, 1, "", "TR4"], [206, 3, 1, "", "TR5"], [206, 3, 1, "", "TR6"], [206, 3, 1, "", "TR7"], [206, 3, 1, "", "TR8"], [206, 3, 1, "", "TR9"], [206, 3, 1, "", "TRmorrie"], [206, 3, 1, "", "TRpower"], [206, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[209, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[209, 3, 1, "", "powdenest"], [209, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[209, 3, 1, "", "collect"], [209, 3, 1, "", "collect_const"], [209, 3, 1, "", "collect_sqrt"], [209, 3, 1, "", "fraction"], [209, 3, 1, "", "rad_rationalize"], [209, 3, 1, "", "radsimp"], [209, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[209, 3, 1, "", "ratsimp"], [209, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[209, 3, 1, "", "besselsimp"], [209, 3, 1, "", "hypersimilar"], [209, 3, 1, "", "hypersimp"], [209, 3, 1, "", "kroneckersimp"], [209, 3, 1, "", "logcombine"], [209, 3, 1, "", "nsimplify"], [209, 3, 1, "", "nthroot"], [209, 3, 1, "", "posify"], [209, 3, 1, "", "separatevars"], [209, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[209, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[209, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[215, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[210, 1, 1, "", "BinaryQuadratic"], [210, 1, 1, "", "CubicThue"], [210, 1, 1, "", "DiophantineEquationType"], [210, 1, 1, "", "DiophantineSolutionSet"], [210, 1, 1, "", "GeneralPythagorean"], [210, 1, 1, "", "GeneralSumOfEvenPowers"], [210, 1, 1, "", "GeneralSumOfSquares"], [210, 1, 1, "", "HomogeneousGeneralQuadratic"], [210, 1, 1, "", "HomogeneousTernaryQuadratic"], [210, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [210, 1, 1, "", "InhomogeneousGeneralQuadratic"], [210, 1, 1, "", "InhomogeneousTernaryQuadratic"], [210, 1, 1, "", "Linear"], [210, 3, 1, "", "PQa"], [210, 1, 1, "", "Univariate"], [210, 3, 1, "", "base_solution_linear"], [210, 3, 1, "", "classify_diop"], [210, 3, 1, "", "cornacchia"], [210, 3, 1, "", "descent"], [210, 3, 1, "", "diop_DN"], [210, 3, 1, "", "diop_bf_DN"], [210, 3, 1, "", "diop_general_pythagorean"], [210, 3, 1, "", "diop_general_sum_of_even_powers"], [210, 3, 1, "", "diop_general_sum_of_squares"], [210, 3, 1, "", "diop_linear"], [210, 3, 1, "", "diop_quadratic"], [210, 3, 1, "", "diop_solve"], [210, 3, 1, "", "diop_ternary_quadratic"], [210, 3, 1, "", "diop_ternary_quadratic_normal"], [210, 3, 1, "", "diophantine"], [210, 3, 1, "", "divisible"], [210, 3, 1, "", "equivalent"], [210, 3, 1, "", "find_DN"], [210, 3, 1, "", "gaussian_reduce"], [210, 3, 1, "", "holzer"], [210, 3, 1, "", "ldescent"], [210, 3, 1, "", "merge_solution"], [210, 3, 1, "", "parametrize_ternary_quadratic"], [210, 3, 1, "", "partition"], [210, 3, 1, "", "power_representation"], [210, 3, 1, "", "prime_as_sum_of_two_squares"], [210, 3, 1, "", "reconstruct"], [210, 3, 1, "", "sqf_normal"], [210, 3, 1, "", "square_factor"], [210, 3, 1, "", "sum_of_four_squares"], [210, 3, 1, "", "sum_of_powers"], [210, 3, 1, "", "sum_of_squares"], [210, 3, 1, "", "sum_of_three_squares"], [210, 3, 1, "", "transformation_to_DN"], [210, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[210, 2, 1, "", "matches"]], "sympy.solvers": [[212, 0, 0, "-", "inequalities"], [213, 0, 0, "-", "ode"], [214, 0, 0, "-", "pde"], [215, 0, 0, "-", "recurr"], [216, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[212, 3, 1, "", "reduce_abs_inequalities"], [212, 3, 1, "", "reduce_abs_inequality"], [212, 3, 1, "", "reduce_inequalities"], [212, 3, 1, "", "reduce_rational_inequalities"], [212, 3, 1, "", "solve_poly_inequalities"], [212, 3, 1, "", "solve_poly_inequality"], [212, 3, 1, "", "solve_rational_inequalities"], [212, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[213, 6, 1, "", "allhints"], [213, 3, 1, "", "checkinfsol"], [213, 3, 1, "", "checkodesol"], [213, 3, 1, "", "classify_ode"], [213, 3, 1, "", "constantsimp"], [213, 3, 1, "", "dsolve"], [213, 3, 1, "", "homogeneous_order"], [213, 3, 1, "", "infinitesimals"], [213, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[213, 3, 1, "", "lie_heuristic_abaco1_product"], [213, 3, 1, "", "lie_heuristic_abaco1_simple"], [213, 3, 1, "", "lie_heuristic_abaco2_similar"], [213, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [213, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [213, 3, 1, "", "lie_heuristic_bivariate"], [213, 3, 1, "", "lie_heuristic_chi"], [213, 3, 1, "", "lie_heuristic_function_sum"], [213, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[213, 3, 1, "", "_handle_Integral"], [213, 3, 1, "", "_linear_2eq_order1_type6"], [213, 3, 1, "", "_linear_2eq_order1_type7"], [213, 3, 1, "", "_nonlinear_2eq_order1_type1"], [213, 3, 1, "", "_nonlinear_2eq_order1_type2"], [213, 3, 1, "", "_nonlinear_2eq_order1_type3"], [213, 3, 1, "", "_nonlinear_2eq_order1_type4"], [213, 3, 1, "", "_nonlinear_2eq_order1_type5"], [213, 3, 1, "", "_nonlinear_3eq_order1_type1"], [213, 3, 1, "", "_nonlinear_3eq_order1_type2"], [213, 3, 1, "", "_nonlinear_3eq_order1_type3"], [213, 3, 1, "", "_nonlinear_3eq_order1_type4"], [213, 3, 1, "", "_nonlinear_3eq_order1_type5"], [213, 3, 1, "", "constant_renumber"], [213, 3, 1, "", "ode_1st_power_series"], [213, 3, 1, "", "ode_2nd_power_series_ordinary"], [213, 3, 1, "", "ode_2nd_power_series_regular"], [213, 3, 1, "", "ode_sol_simplicity"], [213, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[213, 3, 1, "", "compute_m_ybar"], [213, 3, 1, "", "construct_c"], [213, 3, 1, "", "construct_d"], [213, 3, 1, "", "get_gen_sol_from_part_sol"], [213, 3, 1, "", "rational_laurent_series"], [213, 3, 1, "", "remove_redundant_sols"], [213, 3, 1, "", "riccati_inverse_normal"], [213, 3, 1, "", "riccati_normal"], [213, 3, 1, "", "riccati_reduced"], [213, 3, 1, "", "solve_aux_eq"], [213, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[213, 1, 1, "", "AlmostLinear"], [213, 1, 1, "", "Bernoulli"], [213, 1, 1, "", "Factorable"], [213, 1, 1, "", "FirstExact"], [213, 1, 1, "", "FirstLinear"], [213, 1, 1, "", "HomogeneousCoeffBest"], [213, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [213, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [213, 1, 1, "", "LieGroup"], [213, 1, 1, "", "LinearCoefficients"], [213, 1, 1, "", "Liouville"], [213, 1, 1, "", "NthAlgebraic"], [213, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [213, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [213, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [213, 1, 1, "", "NthLinearEulerEqHomogeneous"], [213, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [213, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [213, 1, 1, "", "NthOrderReducible"], [213, 1, 1, "", "RationalRiccati"], [213, 1, 1, "", "RiccatiSpecial"], [213, 1, 1, "", "SecondHypergeometric"], [213, 1, 1, "", "SecondLinearAiry"], [213, 1, 1, "", "SecondLinearBessel"], [213, 1, 1, "", "Separable"], [213, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[213, 3, 1, "", "canonical_odes"], [213, 3, 1, "", "dsolve_system"], [213, 3, 1, "", "linear_ode_to_matrix"], [213, 3, 1, "", "linodesolve"], [213, 3, 1, "", "linodesolve_type"], [213, 3, 1, "", "matrix_exp"], [213, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[214, 3, 1, "", "checkpdesol"], [214, 3, 1, "", "classify_pde"], [214, 3, 1, "", "pde_1st_linear_constant_coeff"], [214, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [214, 3, 1, "", "pde_1st_linear_variable_coeff"], [214, 3, 1, "", "pde_separate"], [214, 3, 1, "", "pde_separate_add"], [214, 3, 1, "", "pde_separate_mul"], [214, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[215, 3, 1, "", "solve_poly_system"], [215, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[215, 3, 1, "", "rsolve"], [215, 3, 1, "", "rsolve_hyper"], [215, 3, 1, "", "rsolve_poly"], [215, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[215, 3, 1, "", "checksol"], [215, 3, 1, "", "nsolve"], [215, 3, 1, "", "solve"], [215, 3, 1, "", "solve_linear"], [215, 3, 1, "", "solve_linear_system"], [215, 3, 1, "", "solve_linear_system_LU"], [215, 3, 1, "", "solve_undetermined_coeffs"], [215, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[216, 3, 1, "", "_is_exponential"], [216, 3, 1, "", "_is_logarithmic"], [216, 3, 1, "", "_solve_exponential"], [216, 3, 1, "", "_solve_logarithm"], [216, 3, 1, "", "_transolve"], [216, 3, 1, "", "domain_check"], [216, 3, 1, "", "invert_complex"], [216, 3, 1, "", "invert_real"], [216, 3, 1, "", "linear_eq_to_matrix"], [216, 3, 1, "", "linsolve"], [216, 3, 1, "", "nonlinsolve"], [216, 3, 1, "", "solveset"], [216, 3, 1, "", "solveset_complex"], [216, 3, 1, "", "solveset_real"], [216, 3, 1, "", "solvify"]], "sympy.stats": [[217, 3, 1, "", "Arcsin"], [217, 3, 1, "", "Benini"], [217, 3, 1, "", "Bernoulli"], [217, 1, 1, "", "BernoulliProcess"], [217, 3, 1, "", "Beta"], [217, 3, 1, "", "BetaBinomial"], [217, 3, 1, "", "BetaNoncentral"], [217, 3, 1, "", "BetaPrime"], [217, 3, 1, "", "Binomial"], [217, 3, 1, "", "BoundedPareto"], [217, 3, 1, "", "Cauchy"], [217, 1, 1, "", "CentralMoment"], [217, 3, 1, "", "Chi"], [217, 3, 1, "", "ChiNoncentral"], [217, 3, 1, "", "ChiSquared"], [217, 3, 1, "", "Coin"], [217, 1, 1, "", "ContinuousMarkovChain"], [217, 3, 1, "", "ContinuousRV"], [217, 1, 1, "", "Covariance"], [217, 1, 1, "", "CrossCovarianceMatrix"], [217, 3, 1, "", "Dagum"], [217, 3, 1, "", "Die"], [217, 1, 1, "", "DiscreteMarkovChain"], [217, 3, 1, "", "DiscreteUniform"], [217, 3, 1, "", "E"], [217, 3, 1, "", "Erlang"], [217, 3, 1, "", "ExGaussian"], [217, 1, 1, "", "Expectation"], [217, 1, 1, "", "ExpectationMatrix"], [217, 3, 1, "", "Exponential"], [217, 3, 1, "", "FDistribution"], [217, 3, 1, "", "FiniteRV"], [217, 3, 1, "", "FisherZ"], [217, 3, 1, "", "Frechet"], [217, 3, 1, "", "Gamma"], [217, 3, 1, "", "GammaInverse"], [217, 1, 1, "", "GammaProcess"], [217, 3, 1, "", "GeneralizedMultivariateLogGamma"], [217, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [217, 3, 1, "", "Geometric"], [217, 3, 1, "", "Gompertz"], [217, 3, 1, "", "Gumbel"], [217, 3, 1, "", "Hermite"], [217, 3, 1, "", "Hypergeometric"], [217, 3, 1, "", "JointRV"], [217, 3, 1, "", "Kumaraswamy"], [217, 3, 1, "", "Laplace"], [217, 3, 1, "", "Levy"], [217, 3, 1, "", "LogLogistic"], [217, 3, 1, "", "LogNormal"], [217, 3, 1, "", "Logarithmic"], [217, 3, 1, "", "Logistic"], [217, 3, 1, "", "Lomax"], [217, 3, 1, "", "MatrixGamma"], [217, 3, 1, "", "MatrixNormal"], [217, 3, 1, "", "Maxwell"], [217, 1, 1, "", "Moment"], [217, 3, 1, "", "Moyal"], [217, 3, 1, "", "Multinomial"], [217, 3, 1, "", "MultivariateBeta"], [217, 3, 1, "", "MultivariateEwens"], [217, 3, 1, "", "MultivariateLaplace"], [217, 3, 1, "", "MultivariateNormal"], [217, 3, 1, "", "MultivariateT"], [217, 3, 1, "", "Nakagami"], [217, 3, 1, "", "NegativeBinomial"], [217, 3, 1, "", "NegativeMultinomial"], [217, 3, 1, "", "Normal"], [217, 3, 1, "", "NormalGamma"], [217, 3, 1, "", "P"], [217, 3, 1, "", "Pareto"], [217, 3, 1, "", "Poisson"], [217, 1, 1, "", "PoissonProcess"], [217, 3, 1, "", "PowerFunction"], [217, 1, 1, "", "Probability"], [217, 3, 1, "", "QuadraticU"], [217, 3, 1, "", "Rademacher"], [217, 3, 1, "", "RaisedCosine"], [217, 3, 1, "", "Rayleigh"], [217, 3, 1, "", "Reciprocal"], [217, 3, 1, "", "ShiftedGompertz"], [217, 3, 1, "", "Skellam"], [217, 3, 1, "", "StudentT"], [217, 3, 1, "", "Trapezoidal"], [217, 3, 1, "", "Triangular"], [217, 3, 1, "", "Uniform"], [217, 3, 1, "", "UniformSum"], [217, 1, 1, "", "Variance"], [217, 1, 1, "", "VarianceMatrix"], [217, 3, 1, "", "VonMises"], [217, 3, 1, "", "Wald"], [217, 3, 1, "", "Weibull"], [217, 1, 1, "", "WienerProcess"], [217, 3, 1, "", "WignerSemicircle"], [217, 3, 1, "", "Wishart"], [217, 3, 1, "", "YuleSimon"], [217, 3, 1, "", "Zeta"], [217, 3, 1, "", "cmoment"], [217, 3, 1, "", "correlation"], [217, 3, 1, "", "coskewness"], [217, 3, 1, "", "covariance"], [217, 0, 0, "-", "crv"], [217, 0, 0, "-", "crv_types"], [217, 3, 1, "", "density"], [217, 3, 1, "", "entropy"], [217, 3, 1, "", "factorial_moment"], [217, 0, 0, "-", "frv"], [217, 0, 0, "-", "frv_types"], [217, 3, 1, "", "given"], [217, 3, 1, "", "kurtosis"], [217, 3, 1, "", "marginal_distribution"], [217, 3, 1, "", "median"], [217, 3, 1, "", "moment"], [217, 3, 1, "", "quantile"], [217, 0, 0, "-", "rv"], [217, 3, 1, "", "sample"], [217, 3, 1, "", "sample_iter"], [217, 3, 1, "", "skewness"], [217, 3, 1, "", "std"], [217, 3, 1, "", "variance"], [217, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[217, 2, 1, "", "expectation"], [217, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[217, 2, 1, "", "absorbing_probabilities"], [217, 2, 1, "", "canonical_form"], [217, 2, 1, "", "communication_classes"], [217, 2, 1, "", "decompose"], [217, 2, 1, "", "fixed_row_vector"], [217, 2, 1, "", "fundamental_matrix"], [217, 4, 1, "", "limiting_distribution"], [217, 2, 1, "", "sample"], [217, 2, 1, "", "stationary_distribution"], [217, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[217, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[217, 1, 1, "", "ContinuousDomain"], [217, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[217, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[217, 3, 1, "", "Die"], [217, 3, 1, "", "Normal"]], "sympy.stats.frv": [[217, 1, 1, "", "FiniteDomain"], [217, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[217, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[217, 1, 1, "", "ConditionalDomain"], [217, 1, 1, "", "PSpace"], [217, 1, 1, "", "ProductDomain"], [217, 1, 1, "", "ProductPSpace"], [217, 1, 1, "", "RandomDomain"], [217, 1, 1, "", "RandomSymbol"], [217, 1, 1, "", "SingleDomain"], [217, 1, 1, "", "SinglePSpace"], [217, 3, 1, "", "pspace"], [217, 3, 1, "", "random_symbols"], [217, 3, 1, "", "rs_swap"], [217, 3, 1, "", "sampling_E"], [217, 3, 1, "", "sampling_P"], [217, 3, 1, "", "sampling_density"]], "sympy.tensor": [[218, 0, 0, "-", "array"], [221, 0, 0, "-", "index_methods"], [222, 0, 0, "-", "indexed"], [223, 0, 0, "-", "tensor"], [224, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[218, 1, 1, "", "ImmutableDenseNDimArray"], [218, 1, 1, "", "ImmutableSparseNDimArray"], [218, 1, 1, "", "MutableDenseNDimArray"], [218, 1, 1, "", "MutableSparseNDimArray"], [218, 3, 1, "", "derive_by_array"], [219, 0, 0, "-", "expressions"], [218, 3, 1, "", "permutedims"], [218, 3, 1, "", "tensorcontraction"], [218, 3, 1, "", "tensordiagonal"], [218, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[221, 3, 1, "", "get_contraction_structure"], [221, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[222, 1, 1, "", "Idx"], [222, 1, 1, "", "Indexed"], [222, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[222, 4, 1, "", "label"], [222, 4, 1, "", "lower"], [222, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[222, 4, 1, "", "base"], [222, 4, 1, "", "indices"], [222, 4, 1, "", "ranges"], [222, 4, 1, "", "rank"], [222, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[222, 4, 1, "", "label"], [222, 4, 1, "", "offset"], [222, 4, 1, "", "shape"], [222, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[223, 1, 1, "", "TensAdd"], [223, 1, 1, "", "TensExpr"], [223, 1, 1, "", "TensMul"], [223, 1, 1, "", "TensorHead"], [223, 1, 1, "", "TensorIndex"], [223, 1, 1, "", "TensorIndexType"], [223, 1, 1, "", "TensorSymmetry"], [223, 1, 1, "", "TensorType"], [223, 1, 1, "", "_TensorManager"], [223, 3, 1, "", "canon_bp"], [223, 3, 1, "", "riemann_cyclic"], [223, 3, 1, "", "riemann_cyclic_replace"], [223, 3, 1, "", "tensor_heads"], [223, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[223, 2, 1, "", "canon_bp"], [223, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[223, 2, 1, "", "get_matrix"], [223, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[223, 2, 1, "", "canon_bp"], [223, 2, 1, "", "contract_metric"], [223, 2, 1, "", "get_free_indices"], [223, 2, 1, "", "get_indices"], [223, 2, 1, "", "perm2tensor"], [223, 2, 1, "", "sorted_components"], [223, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[223, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[223, 2, 1, "", "direct_product"], [223, 2, 1, "", "fully_symmetric"], [223, 2, 1, "", "no_symmetry"], [223, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[223, 2, 1, "", "clear"], [223, 2, 1, "", "comm_i2symbol"], [223, 2, 1, "", "comm_symbols2i"], [223, 2, 1, "", "get_comm"], [223, 2, 1, "", "set_comm"], [223, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[224, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[226, 0, 0, "-", "pytest"], [227, 0, 0, "-", "randtest"], [228, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[226, 3, 1, "", "SKIP"], [226, 3, 1, "", "nocache_fail"], [226, 3, 1, "", "raises"], [226, 3, 1, "", "warns"], [226, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[228, 1, 1, "", "PyTestReporter"], [228, 1, 1, "", "Reporter"], [228, 1, 1, "", "SymPyDocTestFinder"], [228, 1, 1, "", "SymPyDocTestRunner"], [228, 1, 1, "", "SymPyOutputChecker"], [228, 1, 1, "", "SymPyTestResults"], [228, 3, 1, "", "convert_to_native_paths"], [228, 3, 1, "", "doctest"], [228, 3, 1, "", "get_sympy_dir"], [228, 3, 1, "", "raise_on_deprecated"], [228, 3, 1, "", "run_all_tests"], [228, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [228, 3, 1, "", "split_list"], [228, 3, 1, "", "sympytestfile"], [228, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[228, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[228, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[228, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[228, 5, 1, "", "attempted"], [228, 5, 1, "", "failed"]], "sympy.utilities": [[229, 0, 0, "-", "autowrap"], [230, 0, 0, "-", "codegen"], [231, 0, 0, "-", "decorator"], [232, 0, 0, "-", "enumerative"], [233, 0, 0, "-", "exceptions"], [235, 0, 0, "-", "iterables"], [236, 0, 0, "-", "lambdify"], [237, 0, 0, "-", "memoization"], [238, 0, 0, "-", "misc"], [239, 0, 0, "-", "pkgdata"], [240, 0, 0, "-", "source"], [241, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[229, 1, 1, "", "CodeWrapper"], [229, 1, 1, "", "CythonCodeWrapper"], [229, 1, 1, "", "DummyWrapper"], [229, 1, 1, "", "F2PyCodeWrapper"], [229, 1, 1, "", "UfuncifyCodeWrapper"], [229, 3, 1, "", "autowrap"], [229, 3, 1, "", "binary_function"], [229, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[229, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[229, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[230, 1, 1, "", "Argument"], [230, 1, 1, "", "CCodeGen"], [230, 1, 1, "", "CodeGen"], [230, 1, 1, "", "DataType"], [230, 1, 1, "", "FCodeGen"], [230, 1, 1, "", "JuliaCodeGen"], [230, 1, 1, "", "OctaveCodeGen"], [230, 1, 1, "", "OutputArgument"], [230, 1, 1, "", "Result"], [230, 1, 1, "", "Routine"], [230, 1, 1, "", "RustCodeGen"], [230, 3, 1, "", "codegen"], [230, 3, 1, "", "get_default_datatype"], [230, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[230, 2, 1, "", "dump_c"], [230, 2, 1, "", "dump_h"], [230, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[230, 2, 1, "", "dump_code"], [230, 2, 1, "", "routine"], [230, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[230, 2, 1, "", "dump_f95"], [230, 2, 1, "", "dump_h"], [230, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[230, 2, 1, "", "dump_jl"], [230, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[230, 2, 1, "", "dump_m"], [230, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[230, 4, 1, "", "result_variables"], [230, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[230, 2, 1, "", "dump_rs"], [230, 2, 1, "", "get_prototype"], [230, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[231, 3, 1, "", "conserve_mpmath_dps"], [231, 3, 1, "", "deprecated"], [231, 3, 1, "", "doctest_depends_on"], [231, 3, 1, "", "memoize_property"], [231, 1, 1, "", "no_attrs_in_subclass"], [231, 3, 1, "", "public"], [231, 3, 1, "", "threaded"], [231, 3, 1, "", "threaded_factory"], [231, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[232, 1, 1, "", "MultisetPartitionTraverser"], [232, 3, 1, "", "factoring_visitor"], [232, 3, 1, "", "list_visitor"], [232, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[232, 2, 1, "", "count_partitions"], [232, 2, 1, "", "enum_all"], [232, 2, 1, "", "enum_large"], [232, 2, 1, "", "enum_range"], [232, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[233, 7, 1, "", "SymPyDeprecationWarning"], [233, 3, 1, "", "ignore_warnings"], [233, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[235, 1, 1, "", "NotIterable"], [235, 3, 1, "", "binary_partitions"], [235, 3, 1, "", "bracelets"], [235, 3, 1, "", "capture"], [235, 3, 1, "", "common_prefix"], [235, 3, 1, "", "common_suffix"], [235, 3, 1, "", "connected_components"], [235, 3, 1, "", "dict_merge"], [235, 3, 1, "", "filter_symbols"], [235, 3, 1, "", "flatten"], [235, 3, 1, "", "generate_bell"], [235, 3, 1, "", "generate_derangements"], [235, 3, 1, "", "generate_involutions"], [235, 3, 1, "", "generate_oriented_forest"], [235, 3, 1, "", "group"], [235, 3, 1, "", "has_dups"], [235, 3, 1, "", "has_variety"], [235, 3, 1, "", "ibin"], [235, 3, 1, "", "iproduct"], [235, 3, 1, "", "is_palindromic"], [235, 3, 1, "", "is_sequence"], [235, 3, 1, "", "iterable"], [235, 3, 1, "", "kbins"], [235, 3, 1, "", "least_rotation"], [235, 3, 1, "", "minlex"], [235, 3, 1, "", "multiset"], [235, 3, 1, "", "multiset_combinations"], [235, 3, 1, "", "multiset_derangements"], [235, 3, 1, "", "multiset_partitions"], [235, 3, 1, "", "multiset_permutations"], [235, 3, 1, "", "necklaces"], [235, 3, 1, "", "numbered_symbols"], [235, 3, 1, "", "ordered_partitions"], [235, 3, 1, "", "partitions"], [235, 3, 1, "", "permute_signs"], [235, 3, 1, "", "postfixes"], [235, 3, 1, "", "prefixes"], [235, 3, 1, "", "random_derangement"], [235, 3, 1, "", "reshape"], [235, 3, 1, "", "rotate_left"], [235, 3, 1, "", "rotate_right"], [235, 3, 1, "", "rotations"], [235, 3, 1, "", "roundrobin"], [235, 3, 1, "", "runs"], [235, 3, 1, "", "sift"], [235, 3, 1, "", "signed_permutations"], [235, 3, 1, "", "strongly_connected_components"], [235, 3, 1, "", "subsets"], [235, 3, 1, "", "take"], [235, 3, 1, "", "topological_sort"], [235, 3, 1, "", "unflatten"], [235, 3, 1, "", "uniq"], [235, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[236, 3, 1, "", "implemented_function"], [236, 3, 1, "", "lambdastr"], [236, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[237, 3, 1, "", "assoc_recurrence_memo"], [237, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[238, 3, 1, "", "as_int"], [238, 3, 1, "", "debug"], [238, 3, 1, "", "debug_decorator"], [238, 3, 1, "", "filldedent"], [238, 3, 1, "", "find_executable"], [238, 3, 1, "", "func_name"], [238, 3, 1, "", "ordinal"], [238, 3, 1, "", "rawlines"], [238, 3, 1, "", "replace"], [238, 3, 1, "", "strlines"], [238, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[239, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[240, 3, 1, "", "get_class"], [240, 3, 1, "", "get_mod_func"], [240, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[241, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[242, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[242, 2, 1, "", "__init__"], [242, 2, 1, "", "create_new"], [242, 2, 1, "", "locate_new"], [242, 2, 1, "", "orient_new"], [242, 2, 1, "", "orient_new_axis"], [242, 2, 1, "", "orient_new_body"], [242, 2, 1, "", "orient_new_quaternion"], [242, 2, 1, "", "orient_new_space"], [242, 2, 1, "", "position_wrt"], [242, 2, 1, "", "rotation_matrix"], [242, 2, 1, "", "scalar_map"]], "sympy.vector": [[244, 3, 1, "", "curl"], [244, 3, 1, "", "divergence"], [244, 3, 1, "", "express"], [244, 3, 1, "", "gradient"], [244, 3, 1, "", "is_conservative"], [244, 3, 1, "", "is_solenoidal"], [244, 3, 1, "", "matrix_to_vector"], [244, 3, 1, "", "scalar_potential"], [244, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[242, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[242, 2, 1, "", "cross"], [242, 2, 1, "", "dot"], [242, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[242, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[242, 4, 1, "", "components"], [242, 2, 1, "", "cross"], [242, 2, 1, "", "dot"], [242, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[242, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[242, 2, 1, "", "multiplicity"], [242, 2, 1, "", "rational_parametrization"], [242, 2, 1, "", "regular_point"], [242, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[242, 1, 1, "", "ParametricIntegral"], [244, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[243, 1, 1, "", "AxisOrienter"], [243, 1, 1, "", "BodyOrienter"], [243, 1, 1, "", "Orienter"], [243, 1, 1, "", "QuaternionOrienter"], [243, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[243, 2, 1, "", "__init__"], [243, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[243, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[243, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[243, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[243, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[242, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[242, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[242, 4, 1, "", "components"], [242, 2, 1, "", "cross"], [242, 2, 1, "", "dot"], [242, 2, 1, "", "magnitude"], [242, 2, 1, "", "normalize"], [242, 2, 1, "", "outer"], [242, 2, 1, "", "projection"], [242, 2, 1, "", "separate"], [242, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 5, 6, 10, 11, 13, 14, 15, 21, 22, 32, 56, 73, 92, 130, 178, 187, 242, 244, 245, 248, 262, 264, 267], "build": [1, 3], "document": [1, 3, 4, 6, 7, 21], "requir": [1, 4], "depend": [1, 3, 127, 187, 246], "docker": 1, "debian": 1, "ubuntu": 1, "fedora": 1, "mac": 1, "window": [1, 183], "10": [1, 10, 94], "doc": [1, 188], "local": 1, "instal": [1, 21, 22, 92, 271], "logo": 1, "view": 1, "auto": 1, "rebuild": 1, "live": 1, "server": 1, "pdf": 1, "debug": 2, "hard": 3, "option": [3, 190], "recommend": [3, 7], "interact": [3, 78, 183], "us": [3, 7, 10, 14, 32, 50, 53, 74, 75, 91, 94, 122, 127, 128, 181, 183, 194, 216, 246], "print": [3, 10, 18, 32, 78, 104, 111, 172, 177, 197, 272], "pars": [3, 92], "logic": [3, 17, 80, 252, 255], "plot": [3, 10, 98, 143, 183], "lambdifi": [3, 10, 91, 236, 262], "code": [3, 4, 5, 7, 10, 32, 34, 104, 181, 197, 240, 252, 254], "gener": [3, 6, 7, 40, 42, 187, 192, 216, 247, 252, 254], "autowrap": [3, 32, 229], "printer": [3, 32, 197, 272], "test": [3, 5, 10, 47, 80, 196, 225, 227, 228, 269], "onli": [3, 216], "statist": 3, "symengin": 3, "backend": [3, 183], "experiment": [3, 92], "rubi": 3, "integr": [3, 10, 54, 58, 72, 74, 75, 76, 77, 104, 185, 192, 251, 263], "sage": 3, "develop": [3, 5, 50], "get": [3, 5, 11], "sourc": [3, 10, 11, 240], "run": [3, 5, 22, 228], "benchmark": 3, "deprec": [4, 10], "polici": 4, "what": [4, 127, 186, 187, 216, 267, 270], "try": 4, "avoid": 4, "backward": 4, "incompat": 4, "chang": 4, "first": [4, 10], "place": 4, "when": [4, 75], "doe": [4, 11, 216], "public": 4, "api": [4, 21, 71, 75, 77, 100, 123, 179, 216, 229, 230, 249, 252], "Not": 4, "The": [4, 10, 16, 18, 33, 40, 75, 127, 168, 179, 192, 204, 207, 247, 248, 267], "purpos": 4, "technic": 4, "possibl": [4, 269], "how": [4, 19, 21, 75, 181, 216], "long": 4, "should": [4, 91], "last": 4, "checklist": 4, "ad": 4, "releas": 4, "note": [4, 18, 50, 62, 127, 204, 206, 265, 274], "entri": [4, 86], "environ": 5, "setup": 5, "git": [5, 22], "virtual": 5, "docstr": [6, 7, 93, 96, 105, 106, 107, 108, 109, 110, 111, 112, 174, 175, 176, 177, 235, 242, 243, 244], "style": [6, 7], "guid": [6, 7, 19, 21, 123, 179, 249], "guidelin": [6, 7], "format": [6, 7], "section": 6, "1": [6, 10, 75, 94, 113, 127, 139, 213], "singl": [6, 11], "sentenc": 6, "summari": 6, "2": [6, 10, 75, 94, 113, 127, 213], "explan": [6, 12, 21], "3": [6, 10, 77, 94, 113, 164, 213], "exampl": [6, 18, 23, 50, 62, 74, 77, 90, 94, 101, 114, 127, 131, 135, 166, 168, 181, 196, 197, 204, 207, 217, 218, 219, 222, 247, 267, 273], "4": [6, 10, 94, 213], "paramet": [6, 207, 216], "5": [6, 10, 94, 213], "see": [6, 50, 247], "also": [6, 50], "6": [6, 10, 94, 213], "refer": [6, 16, 21, 24, 31, 49, 50, 52, 62, 68, 75, 77, 81, 82, 83, 84, 86, 88, 90, 92, 129, 135, 138, 168, 179, 181, 182, 183, 184, 186, 188, 190, 192, 193, 204, 206, 207, 210, 216, 229, 230, 249, 252], "sampl": [6, 10], "class": [6, 13, 31, 32, 49, 52, 81, 82, 84, 86, 88, 90, 127, 173, 183, 186, 192, 197, 209, 210, 218, 242, 243], "ar": [6, 181, 187, 216], "mathemat": [6, 11, 130], "function": [6, 10, 11, 18, 32, 40, 49, 50, 56, 57, 58, 68, 69, 72, 73, 75, 80, 86, 90, 92, 94, 104, 128, 150, 153, 174, 175, 178, 183, 185, 187, 188, 193, 196, 197, 207, 209, 210, 213, 214, 218, 244, 248, 272, 273], "best": [6, 7, 18], "practic": [6, 7, 18], "write": [6, 7, 18], "import": [6, 10], "sphinx": 6, "cross": [6, 175], "referenc": 6, "type": [7, 32, 58, 174, 213, 216, 217], "narr": 7, "markdown": 7, "prefer": 7, "math": [7, 32], "latex": [7, 92, 272], "head": 7, "spell": 7, "punctuat": 7, "capit": 7, "tone": 7, "contribut": [8, 9, 21, 194], "make": 9, "list": [10, 11], "activ": 10, "silenc": 10, "warn": [10, 233], "version": 10, "12": 10, "11": [10, 94], "new": [10, 246], "mathematica": [10, 197], "parser": [10, 113], "redund": 10, "static": 10, "method": [10, 14, 18, 22, 108, 117, 120, 121, 122, 125, 126, 127, 197, 214, 216, 221, 246, 269], "carmichael": 10, "check": [10, 174], "argument": [10, 11, 216], "hadamardproduct": 10, "matadd": 10, "matmul": 10, "some": [10, 130, 216], "travers": [10, 50], "have": [10, 196], "been": 10, "move": [10, 207], "core": [10, 50, 83], "trace": 10, "compat": [10, 219], "submodul": [10, 62], "9": [10, 94], "expr_free_symbol": 10, "stat": [10, 217], "numsampl": 10, "n": [10, 50, 213, 218, 219], "poli": [10, 186, 187, 188, 195], "solver": [10, 195, 211, 212, 213, 215, 216, 274], "rawmatrix": 10, "non": 10, "expr": [10, 50], "object": [10, 13, 222], "matrix": [10, 28, 82, 83, 86, 87, 127, 213, 217, 269], "get_seg": 10, "attribut": [10, 33, 40], "mdft": 10, "physic": [10, 101, 104, 114, 124, 125, 126, 127, 128, 129, 130, 131, 170, 172, 178, 179, 180, 181, 252, 258], "matric": [10, 14, 81, 82, 83, 84, 85, 86, 88, 101, 103, 219, 252, 256, 269], "privat": 10, "sparsematrix": [10, 88], "_smat": 10, "densematrix": 10, "_mat": 10, "laplace_transform": 10, "nocond": 10, "fals": 10, "8": [10, 94], "theanocod": 10, "assumpt": [10, 13, 16, 18, 27, 50], "handler": [10, 16], "askhandl": 10, "relat": [10, 11, 16, 50, 58, 80, 178, 181, 205, 248], "7": [10, 94, 213], "call": 10, "stochasticprocess": 10, "distribut": [10, 190, 217], "randomindexedsymbol": 10, "discretemarkovchain": 10, "absorbing_probabilit": 10, "util": [10, 32, 47, 48, 67, 86, 136, 192, 215, 234, 241, 252, 260], "misc": [10, 27], "find_execut": 10, "mutabl": 10, "diffgeom": 10, "unicod": [10, 272], "pretti": [10, 197, 272], "stringpict": 10, "prettyform": 10, "pretty_symbolog": 10, "xstr": 10, "pass": 10, "set": [10, 13, 28, 62, 181, 205, 216, 272], "oper": [10, 11, 72, 86, 141, 150, 152, 153, 174, 178, 181, 207, 218, 224, 245, 247, 248, 262, 269], "longer": 10, "accept": 10, "arg": [10, 56, 268], "variou": [10, 196], "randtest": 10, "mix": 10, "polynomi": [10, 58, 72, 185, 187, 188, 189, 190, 192, 193, 194, 196, 215, 273], "express": [10, 11, 32, 62, 69, 72, 80, 83, 92, 106, 175, 187, 196, 219, 244, 246, 262, 268], "binari": 10, "print_cycl": 10, "flag": 10, "combinator": [10, 37], "permut": [10, 41, 42], "string": [10, 16, 262], "fallback": 10, "sympifi": [10, 50], "creat": [10, 11, 18, 86], "an": [10, 62, 113, 168, 207, 216, 268], "indefinit": 10, "eq": [10, 50], "tensor": [10, 46, 58, 162, 220, 223, 224], "fun_ev": 10, "__call__": 10, "tensortyp": 10, "dummy_fmt": 10, "tensorindextyp": 10, "metric": 10, "get_kronecker_delta": 10, "get_epsilon": 10, "tensorsymmetri": 10, "tensorhead": 10, "unit": [10, 28, 167, 168, 169, 171], "quantiti": [10, 166, 168, 170, 246], "is_emptyset": 10, "productset": [10, 205], "iter": [10, 205, 235], "set_potential_energi": 10, "mechan": [10, 16, 95, 104, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 150, 217], "condit": [10, 75, 205], "conditionset": [10, 205], "max_degre": 10, "get_upper_degre": 10, "properti": [10, 16, 184], "multivariate_result": 10, "dixonresult": 10, "rh": 10, "default": 10, "0": 10, "tupl": [10, 11, 50, 193], "lambda": [10, 50], "evalu": [10, 11, 18, 54, 72, 130, 268], "differentiate_finit": 10, "data": 10, "clear_cach": 10, "clear_subproduct": 10, "keyword": [10, 11], "is_diagonaliz": 10, "row": [10, 269], "col": 10, "jordan_block": 10, "dimens": [10, 62, 165, 168], "scale_factor": 10, "quanit": 10, "classof": 10, "a2idx": 10, "from": [10, 11, 196, 219], "dot": [10, 175, 272], "product": [10, 53, 151, 162, 218, 247], "column": [10, 269], "vector": [10, 40, 50, 123, 172, 173, 174, 178, 179, 180, 181, 190, 242, 244, 245, 246, 248, 249, 250, 251], "geometri": [10, 52, 62, 184], "line3d": 10, "equat": [10, 20, 125, 126, 127, 166, 185, 210, 213, 215, 216, 274], "need": [10, 168], "k": [10, 188], "gotcha": [11, 16, 113, 265], "pitfal": 11, "introduct": [11, 14, 24, 31, 32, 33, 40, 52, 62, 80, 113, 130, 168, 178, 180, 183, 184, 185, 192, 196, 250, 267], "equal": [11, 50, 265], "sign": [11, 56, 265], "doubl": [11, 55], "variabl": [11, 183, 217, 246], "assign": 11, "between": [11, 16, 170, 187], "symbol": [11, 16, 17, 18, 50, 69, 127, 131, 182, 187, 193, 196, 216, 265, 267], "python": [11, 32], "number": [11, 28, 36, 50, 53, 54, 75, 187, 192, 196, 252, 257], "vs": [11, 17, 187], "float": [11, 50, 54], "ration": [11, 28, 50, 187, 188, 193, 196, 199, 205, 213, 273], "immut": [11, 84], "invers": [11, 18, 56, 75], "trig": 11, "sqrt": [11, 56], "special": [11, 15, 32, 58, 193, 205, 273], "dictionari": 11, "help": 11, "within": 11, "classif": 13, "kind": [13, 50], "func": [13, 268], "finit": [14, 28, 30, 33, 184, 187, 190, 192, 196, 207, 217, 263], "differ": [14, 16, 30, 130, 187, 246, 263], "approxim": [14, 32], "deriv": [14, 50, 181, 218, 248, 263], "A": [14, 115, 116, 119, 120, 121, 122, 127, 267, 274], "direct": [14, 248], "topic": [15, 104, 172, 252, 259], "old": [16, 187], "system": [16, 98, 118, 131, 165, 167, 168, 171, 213, 215, 245, 246, 248, 250], "appli": [16, 75, 207], "input": [16, 216], "predic": [16, 27, 28], "abov": 16, "definit": [16, 18, 28, 68], "implic": 16, "interpret": 16, "other": [16, 18, 22, 69, 178, 246], "is_": 16, "implement": [16, 75, 178, 197, 207, 229, 230, 245, 248], "limit": [16, 74, 113, 202, 204, 263], "combin": [16, 72], "fuzzi": 17, "boolean": [17, 80], "three": [17, 62], "valu": 17, "bool": 17, "custom": [18, 183, 197], "easi": 18, "case": [18, 216], "fulli": 18, "defin": 18, "automat": [18, 196], "eval": 18, "remind": 18, "kei": [18, 130, 268], "point": [18, 54, 65, 104, 172, 176, 180, 245], "numer": [18, 54, 72, 77, 91, 104, 130], "evalf": [18, 50, 91, 262], "rewrit": [18, 32, 198, 273], "simplif": [18, 54, 80, 206, 209, 273], "doit": 18, "expand": [18, 50, 196, 198, 273], "differenti": [18, 52, 72, 104, 215, 216, 274], "as_real_imag": 18, "miscellan": [18, 56, 62, 238], "_eval_": 18, "complet": [18, 113], "versin": 18, "divid": 18, "fuse": 18, "multipli": 18, "add": [18, 50], "fma": 18, "addit": [18, 72], "tip": [18, 262, 263, 265, 268, 269], "solv": [20, 94, 185, 192, 215, 216, 274], "welcom": 21, "s": [21, 50, 108, 117, 120, 121, 122, 125, 126, 127, 148, 159, 196, 206, 215, 216, 246, 251, 270], "tutori": [21, 210, 261, 266], "anaconda": 22, "mpmath": 22, "question": 22, "abc": 23, "caveat": [23, 92], "algebra": [24, 28, 79, 86, 138, 181, 184, 187, 192, 196, 215, 274], "quaternion": 24, "ask": 25, "assum": 26, "queri": 27, "content": [27, 37, 57, 70, 76, 189, 201, 211, 220], "perform": 27, "improv": [27, 113], "common": [28, 81, 104, 172, 196, 197, 198, 209], "tautolog": 28, "commut": [28, 144, 184], "calculu": [28, 30, 181, 263], "infinit": [28, 216], "symmetr": 28, "invert": 28, "orthogon": [28, 58, 193, 248], "unitari": 28, "posit": 28, "upper": 28, "triangular": 28, "lower": 28, "diagon": [28, 218, 269], "full": 28, "rank": 28, "squar": [28, 185, 209], "integ": [28, 50, 56, 187, 205], "element": [28, 127, 187, 192], "real": [28, 187, 205], "complex": [28, 56, 187, 205], "singular": [28, 30, 58, 94], "normal": [28, 87, 186, 196], "theori": [28, 31, 252, 257], "even": 28, "odd": 28, "prime": [28, 192], "composit": [28, 72], "order": [28, 50, 193, 204, 207, 213], "neg": 28, "zero": [28, 50, 98, 190, 196, 269], "nonzero": 28, "nonposit": 28, "nonneg": 28, "irrat": 28, "extend": [28, 207], "hermitian": 28, "imaginari": 28, "antihermitian": 28, "transcendent": 28, "refin": 29, "weight": 30, "categori": 31, "base": [31, 52, 184, 185, 196, 203, 216], "diagram": 31, "draw": 31, "codegen": [32, 230], "tool": [32, 89, 209], "simplifi": [32, 190, 208, 209, 273], "abstract": [32, 95, 99, 101, 123, 133, 150, 179, 188], "syntax": 32, "tree": [32, 187, 197, 268], "ast": [32, 113], "predefin": 32, "node": 32, "c": [32, 197], "cfunction": 32, "specif": 32, "cnode": 32, "cxxnode": 32, "fortran": [32, 197], "fnode": 32, "algorithm": [32, 33, 148, 159, 190, 193, 199, 204, 207], "pyutil": 32, "cutil": 32, "futil": 32, "present": [33, 40], "group": [33, 35, 38, 40, 41, 168], "overview": [33, 40, 75], "facil": 33, "construct": [33, 40, 219], "free": [33, 185], "word": [33, 40], "coset": 33, "enumer": [33, 55], "todd": 33, "coxet": 33, "cosett": 33, "compress": 33, "standard": 33, "subgroup": 33, "index": [33, 40, 219, 222], "low": 33, "reidemeist": 33, "schreier": 33, "bibliographi": [33, 40], "grai": 34, "constructor": [35, 193, 269], "nilpot": 36, "abelian": 36, "cyclic": 36, "name": 38, "partit": [39, 55, 210, 235], "polycycl": 40, "polycyclicgroup": 40, "collector": 40, "comput": [40, 75, 91, 150, 196, 267], "minim": [40, 192], "uncollect": 40, "subword": 40, "collect": [40, 198, 209, 273], "expon": [40, 196], "depth": [40, 62], "lead": 40, "polyhedron": 43, "prufer": 44, "sequenc": [44, 72, 190, 202, 203], "subset": [45, 53], "canonic": 46, "concret": 49, "hypergeometr": [49, 58, 69, 72, 199, 207, 209], "term": [49, 196, 198, 204], "cach": 50, "cacheit": 50, "basic": [50, 54, 86, 174, 185, 187, 193, 205, 245, 252, 253, 262, 269], "atom": 50, "singleton": [50, 203, 205], "unevaluatedexpr": 50, "atomicexpr": 50, "wild": 50, "dummi": 50, "var": 50, "algebraicnumb": 50, "numbersymbol": 50, "realnumb": 50, "igcd": 50, "ilcm": 50, "seterr": 50, "One": 50, "negativeon": 50, "half": 50, "nan": [50, 127], "infin": 50, "negativeinfin": 50, "complexinfin": 50, "exp1": 50, "imaginaryunit": 50, "pi": 50, "eulergamma": 50, "catalan": [50, 55], "goldenratio": 50, "tribonacciconst": 50, "mod_invers": 50, "power": [50, 194, 199, 205, 209, 267, 273], "pow": 50, "integer_nthroot": 50, "integer_log": 50, "mul": 50, "prod": 50, "mod": 50, "rel": 50, "ne": 50, "lt": 50, "le": 50, "gt": 50, "ge": 50, "greaterthan": 50, "lessthan": 50, "unequ": 50, "strictgreaterthan": 50, "strictlessthan": 50, "multidimension": 50, "wildfunct": 50, "diff": 50, "functionclass": 50, "sub": [50, 91], "poleerror": 50, "count_op": 50, "expand_mul": 50, "expand_log": [50, 273], "expand_func": [50, 273], "expand_trig": [50, 273], "expand_complex": 50, "expand_multinomi": 50, "expand_power_exp": [50, 273], "expand_power_bas": [50, 273], "nfloat": 50, "evalfmixin": 50, "precisionexhaust": 50, "contain": 50, "tuplekind": 50, "dict": 50, "exprtool": 50, "gcd_term": 50, "factor_term": 50, "numberkind": 50, "undefinedkind": 50, "booleankind": 50, "sort": 50, "default_sort_kei": 50, "random": [50, 217], "random_complex_numb": 50, "verify_numer": 50, "test_derivative_numer": 50, "_randrang": 50, "_randint": 50, "bottom_up": 50, "postorder_travers": 50, "preorder_travers": 50, "walk": [50, 268], "cryptographi": 51, "discret": [53, 217], "transform": [53, 75, 77, 92, 246], "fast": 53, "fourier": [53, 200], "theoret": 53, "walsh": 53, "hadamard": 53, "m\u00f6biu": 53, "convolut": 53, "cover": 53, "intersect": [53, 62, 205], "accuraci": 54, "error": [54, 58], "handl": [54, 216], "sum": 54, "combinatori": [55, 209], "bell": 55, "bernoulli": [55, 213], "binomi": 55, "euler": 55, "factori": [55, 185], "subfactori": 55, "factorial2": 55, "fallingfactori": 55, "fibonacci": 55, "tribonacci": 55, "harmon": [55, 58, 139, 164], "luca": 55, "genocchi": 55, "multifactori": 55, "risingfactori": 55, "stirl": 55, "nc": 55, "np": 55, "nt": 55, "elementari": [56, 184, 203, 205], "re": 56, "im": 56, "ab": 56, "conjug": 56, "polar_lift": 56, "periodic_argu": 56, "principal_branch": 56, "trigonometr": [56, 58, 206, 209, 273], "sin": 56, "co": 56, "tan": 56, "cot": 56, "sec": 56, "csc": 56, "sinc": 56, "asin": 56, "aco": 56, "atan": 56, "acot": 56, "asec": 56, "acsc": 56, "atan2": 56, "hyperbol": 56, "hyperbolicfunct": 56, "sinh": 56, "cosh": 56, "tanh": 56, "coth": 56, "sech": 56, "csch": 56, "asinh": 56, "acosh": 56, "atanh": 56, "acoth": 56, "asech": 56, "acsch": 56, "ceil": 56, "floor": 56, "roundfunct": 56, "frac": 56, "exponenti": [56, 58, 213, 273], "exp": 56, "lambertw": 56, "log": 56, "exp_polar": 56, "piecewis": 56, "exprcondpair": 56, "identityfunct": 56, "min": 56, "max": 56, "root": [56, 193, 209], "cbrt": 56, "real_root": 56, "diracdelta": 58, "heavisid": 58, "gamma": [58, 101], "beta": 58, "fresnel": 58, "logarithm": [58, 273], "bessel": 58, "airi": 58, "b": 58, "spline": 58, "riemann": 58, "zeta": 58, "ellipt": 58, "mathieu": 58, "jacobi": 58, "gegenbau": 58, "chebyshev": 58, "legendr": 58, "hermit": 58, "laguerr": 58, "spheric": 58, "curv": 59, "ellips": 60, "entiti": [61, 62, 183], "avail": 62, "usag": [62, 113, 131, 187, 247], "median": 62, "pappu": 62, "hexagon": 62, "theorem": [62, 75, 251], "futur": [62, 104, 113, 172], "work": [62, 196], "truth": [62, 80], "beyond": 62, "visual": [62, 130], "line": 63, "plane": [64, 75], "polygon": [66, 77], "about": [68, 216, 246, 274], "holonom": [68, 69, 70, 72, 73, 118], "convert": [69, 72, 187, 213, 262], "represent": [69, 73, 168, 181, 187], "meijer": [69, 72, 75, 207], "g": [69, 72, 75, 207], "intern": [71, 75, 77, 187, 190, 192, 210, 213], "multipl": [72, 181, 192], "seri": [72, 183, 194, 199, 200, 201, 204, 263], "expans": [72, 204, 207, 209, 263], "linear": [72, 86, 104, 109, 127, 128, 168, 196, 210, 213], "holonomicfunct": 73, "differentialoper": 73, "differentialoperatoralgebra": 73, "current": 74, "polar": [75, 135], "branch": 75, "repres": [75, 158, 187, 192], "argand": 75, "tabl": [75, 80, 207], "lookup": 75, "mellin": 75, "converg": 75, "laplac": 75, "thi": [75, 216], "valid": 75, "exist": 75, "formula": [75, 207], "todo": 77, "bug": 77, "over": [77, 196, 205], "polytop": 77, "For": 77, "2d": 77, "polyhedra": 77, "session": 78, "lie": [79, 213], "form": [80, 87, 127, 186, 213, 219], "equival": [80, 130, 210], "manipul": [80, 86, 106, 189, 190, 193, 194, 216, 268], "infer": 80, "matrixcommon": 81, "matrixkind": 81, "dens": [82, 187, 188, 190], "immutablematrix": [82, 84], "block": 83, "matrixdetermin": 86, "matrixreduct": 86, "matrixsubspac": 86, "matrixeigen": 86, "matrixcalculu": 86, "matrixbas": 86, "except": [86, 92, 190, 233], "numpi": 86, "spars": [88, 89, 187, 188, 190], "immutablesparsematrix": 88, "ntheori": 90, "ecm": 90, "qs": 90, "ufuncifi": 91, "aesara": [91, 197], "so": 91, "which": [91, 197], "i": 91, "mathrm": [92, 272], "runtim": 92, "beam": [93, 94, 95], "bend": 94, "problem": [94, 192, 247], "continuum": 95, "truss": [95, 96], "control": [97, 98, 99, 100, 183], "pole": 98, "bode": 98, "impuls": 98, "respons": [98, 197], "step": [98, 216], "ramp": 98, "modul": [99, 133, 172, 179, 184, 185, 186, 187, 190, 192, 193, 210, 213, 214, 216, 229], "lti": 100, "high": 101, "energi": [101, 128], "hydrogen": 102, "wavefunct": 102, "potenti": [104, 127, 128, 172, 178, 248], "issu": [104, 113, 127, 172, 269], "advanc": [104, 172, 196, 268, 269], "featur": [104, 172, 264], "choic": 104, "coordin": [104, 117, 127, 183, 245, 246, 248, 250], "speed": [104, 127], "substitut": [104, 172, 262], "acceler": [104, 172, 180, 204], "interfac": [104, 172, 183, 217], "output": [104, 216], "bodi": [105, 128, 251], "msub": 106, "find_dynamicsymbol": 106, "joint": [107, 124, 217], "framework": [107, 124], "pinjoint": 107, "prismaticjoint": 107, "jointsmethod": [107, 124], "kane": [108, 117, 120, 121, 125, 127], "lagrang": [108, 117, 122, 126, 127], "kanemethod": 108, "lagrangesmethod": 108, "mass": [110, 128, 251], "inertia": [110, 128, 172], "particl": [110, 128, 154], "rigidbodi": 110, "inertia_of_point_mass": 110, "linear_momentum": 110, "angular_momentum": 110, "kinetic_energi": 110, "potential_energi": 110, "lagrangian": [110, 128], "mechanics_print": 111, "mprint": 111, "mpprint": 111, "mlatex": 111, "symbolicsystem": [112, 131], "autolev": [113, 130], "dynam": 113, "onlin": 113, "fix": 113, "switch": 113, "bicycl": 115, "four": 116, "bar": 116, "linkag": 116, "nonminim": 117, "pendulum": 117, "multi": 118, "degre": 118, "freedom": 118, "roll": [119, 120, 121, 122], "disc": [119, 120, 121, 122], "constraint": 121, "forc": 121, "classic": [123, 190], "structur": [125, 126, 168, 210], "background": 127, "directli": [127, 246], "new_method": 127, "kwarg": 127, "a_and_b": 127, "true": 127, "slow": 127, "ha": 127, "zoo": 127, "oo": 127, "further": [127, 265], "rigid": 128, "dyadic": [128, 172, 173, 242, 245, 246], "momentum": 128, "angular": [128, 180], "momenta": 128, "kinet": 128, "user": [130, 210, 213, 214], "rough": 130, "link": 130, "gaussian": [132, 187, 188, 196], "optic": [132, 133], "medium": 134, "wave": 137, "pauli": 138, "quantum": [139, 150, 164], "oscil": [139, 164], "d": [139, 164], "anticommut": 140, "cartesian": 141, "state": [141, 150, 153, 161], "clebsch": 142, "gordan": 142, "coeffici": [142, 190], "circuit": 143, "constant": [145, 168], "dagger": 146, "gate": 147, "grover": 148, "hilbert": 149, "space": [149, 168, 207], "analyt": 150, "solut": [150, 216, 247], "inner": 151, "helper": [153, 197], "box": 154, "qappli": 155, "qft": 156, "qubit": 157, "shor": 159, "spin": 160, "second": 163, "quantiz": 163, "dimension": 166, "analysi": 166, "philosophi": 168, "behind": 168, "literatur": [168, 191, 196], "prefix": 169, "convers": 170, "referencefram": [172, 173, 181], "dynamicsymbol": [172, 175], "essenti": [173, 175, 242, 244], "coordinatesym": 173, "field": [174, 178, 187, 190, 192, 196, 248, 250], "curl": [174, 178, 244, 248], "diverg": [174, 178, 244, 248, 251], "gradient": [174, 178, 244, 248], "scalar_potenti": [174, 244], "scalar_potential_differ": [174, 244], "is_conserv": [174, 244], "is_solenoid": [174, 244], "outer": 175, "time_deriv": 175, "kinemat": [176, 180], "kinematic_equ": 176, "init_vprint": 177, "vprint": 177, "vpprint": 177, "vlatex": 177, "scalar": [178, 248, 250], "conserv": [178, 248], "solenoid": [178, 248], "veloc": 180, "altern": 181, "basi": [181, 190, 192], "frame": 181, "wigner": 182, "credit": 182, "copyright": 182, "author": 182, "plotgrid": 183, "pyglet": 183, "mode": 183, "specifi": 183, "interv": [183, 205], "color": 183, "geometr": 183, "ascii": [183, 272], "art": 183, "agca": 184, "ring": [184, 187, 188], "ideal": 184, "homomorph": [184, 192], "syzygi": 184, "extens": [184, 196], "concept": 185, "divis": [185, 210], "domain": [185, 187, 188, 193, 196, 216], "euclidean": 185, "gcd": [185, 190, 196], "lcm": 185, "factor": [185, 190, 196, 213, 273], "groebner": [185, 190], "introduc": [186, 187], "domainmatrix": 186, "ddm": 186, "sdm": 186, "dup": 187, "dmp": 187, "polyr": 187, "polynomialr": 187, "choos": 187, "unifi": 187, "gf": 188, "p": [188, 192], "zz": 188, "qq": 188, "mpq": 188, "zz_i": 188, "qq_i": 188, "rr": 188, "cc": 188, "x": 188, "ex": 188, "quotient": 188, "level": 190, "multivari": [190, 196], "univari": [190, 196, 210], "remaind": 190, "subresult": 190, "configur": 190, "modular": 190, "undocu": 190, "main": 192, "decomposit": [192, 193, 196], "adic": 192, "valuat": 192, "find": [192, 193], "subfield": 192, "As": 192, "arithmet": 192, "extra": 193, "monomi": 193, "encod": 193, "formal": [193, 199], "partial": [193, 196, 215, 216], "fraction": [193, 196, 209, 273], "dispers": 193, "rs_seri": 194, "solve_lin_si": 195, "eqs_to_matrix": 195, "sympy_eqs_to_r": 195, "_solve_lin_si": 195, "_solve_lin_sys_compon": 195, "wester": 196, "articl": 196, "simpl": 196, "result": 196, "support": 196, "back": 196, "cyclotom": 196, "reduc": 196, "gr\u00f6bner": 196, "mistak": 197, "prettyprint": 197, "rcodeprint": 197, "mapl": 197, "javascript": 197, "julia": 197, "octav": 197, "matlab": 197, "rust": 197, "gtk": 197, "lambdaprint": 197, "latexprint": 197, "mathmlprint": 197, "pythoncodeprint": 197, "pythonprint": 197, "srepr": [197, 272], "strprinter": 197, "preview": 197, "codeprint": 197, "preced": 197, "dotprint": 197, "subexpress": [198, 209], "detect": 198, "compound": [203, 205, 217], "recurs": [203, 268], "gruntz": 204, "more": [204, 246, 267], "intuit": 204, "residu": 204, "finiteset": 205, "union": 205, "complement": 205, "symmetricdiffer": 205, "disjointunion": 205, "emptyset": 205, "universalset": 205, "natur": 205, "naturals0": 205, "imageset": 205, "rang": 205, "complexregion": 205, "powerset": 205, "setkind": 205, "hongguang": 206, "fu": 206, "rule": [206, 247], "notat": 207, "increment": 207, "decrement": 207, "indic": 207, "reduct": 207, "around": 207, "loos": 207, "end": 207, "confluenc": 207, "separatevar": 209, "nthroot": 209, "kroneckersimp": 209, "besselsimp": 209, "hypersimp": 209, "hypersimilar": 209, "nsimplifi": 209, "posifi": 209, "logcombin": [209, 273], "radsimp": 209, "rad_ration": 209, "collect_sqrt": 209, "collect_const": 209, "ratsimp": 209, "ratsimpmodprim": 209, "trigsimp": [209, 273], "powsimp": [209, 273], "powdenest": [209, 273], "combsimp": [209, 273], "denest": 209, "sqrtdenest": 209, "elimin": 209, "cse": 209, "opt_cs": 209, "tree_cs": 209, "hyperexpand": [209, 273], "epath": 209, "diophantin": [210, 215, 216], "classify_diop": 210, "diop_solv": 210, "diop_linear": 210, "base_solution_linear": 210, "diop_quadrat": 210, "diop_dn": 210, "cornacchia": 210, "diop_bf_dn": 210, "transformation_to_dn": 210, "transformation_to_norm": 210, "find_dn": 210, "diop_ternary_quadrat": 210, "square_factor": 210, "descent": 210, "diop_general_pythagorean": 210, "diop_general_sum_of_squar": 210, "diop_general_sum_of_even_pow": 210, "power_represent": 210, "sum_of_three_squar": 210, "sum_of_four_squar": 210, "sum_of_pow": 210, "sum_of_squar": 210, "merge_solut": 210, "pqa": 210, "parametrize_ternary_quadrat": 210, "diop_ternary_quadratic_norm": 210, "ldescent": 210, "gaussian_reduc": 210, "holzer": 210, "prime_as_sum_of_two_squar": 210, "sqf_normal": 210, "reconstruct": 210, "diophantinesolutionset": 210, "diophantineequationtyp": 210, "binaryquadrat": 210, "inhomogeneousternaryquadrat": 210, "homogeneousternaryquadraticnorm": 210, "homogeneousternaryquadrat": 210, "inhomogeneousgeneralquadrat": 210, "homogeneousgeneralquadrat": 210, "generalsumofsquar": 210, "generalpythagorean": 210, "cubicthu": 210, "generalsumofevenpow": 210, "inequ": [212, 215, 216], "od": [213, 215, 216], "dsolv": 213, "dsolve_system": 213, "classify_od": 213, "checkodesol": 213, "homogeneous_ord": 213, "infinitesim": 213, "checkinfsol": 213, "constantsimp": 213, "hint": [213, 214], "allhint": 213, "odesimp": 213, "constant_renumb": 213, "sol_simpl": 213, "1st_exact": 213, "1st_homogeneous_coeff_best": 213, "1st_homogeneous_coeff_subs_dep_div_indep": 213, "1st_homogeneous_coeff_subs_indep_div_dep": 213, "1st_linear": 213, "1st_rational_riccati": 213, "2nd_linear_airi": 213, "2nd_linear_bessel": 213, "liouvil": 213, "riccati_special_minus2": 213, "nth_linear_constant_coeff_homogen": 213, "nth_linear_constant_coeff_undetermined_coeffici": 213, "nth_linear_constant_coeff_variation_of_paramet": 213, "nth_linear_euler_eq_homogen": 213, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 213, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 213, "nth_algebra": 213, "nth_order_reduc": 213, "separ": 213, "almost_linear": 213, "linear_coeffici": 213, "separable_reduc": 213, "lie_group": 213, "2nd_hypergeometr": 213, "1st_power_seri": 213, "2nd_power_series_ordinari": 213, "2nd_power_series_regular": 213, "heurist": 213, "abaco1_simpl": 213, "abaco1_product": 213, "bivari": 213, "chi": 213, "abaco2_similar": 213, "function_sum": 213, "abaco2_unique_unknown": 213, "abaco2_unique_gener": 213, "riccati": 213, "riccati_norm": 213, "riccati_inverse_norm": 213, "riccati_reduc": 213, "construct_c": 213, "construct_d": 213, "rational_laurent_seri": 213, "compute_m_ybar": 213, "solve_aux_eq": 213, "remove_redundant_sol": 213, "get_gen_sol_from_part_sol": 213, "solve_riccati": 213, "canon": 213, "linodesolv": 213, "inform": [213, 214], "jordan": 213, "nonlinear": 213, "pde": [214, 215, 216], "pde_separ": 214, "pde_separate_add": 214, "pde_separate_mul": 214, "pdsolv": 214, "classify_pd": 214, "checkpdesol": 214, "pde_1st_linear_constant_coeff_homogen": 214, "pde_1st_linear_constant_coeff": 214, "pde_1st_linear_variable_coeff": 214, "ordinari": [215, 216], "deutil": 215, "recurr": 215, "de": [215, 216], "solveset": 216, "wrong": 216, "why": [216, 267], "do": 216, "we": 216, "emploi": 216, "return": 216, "ensur": 216, "ani": 216, "search": 216, "deal": 216, "where": 216, "known": 216, "plan": 216, "linear_eq_to_matrix": 216, "linsolv": 216, "nonlinsolv": 216, "transolv": 216, "continu": [217, 273], "stochast": 217, "process": 217, "dim": [218, 219], "arrai": [218, 219], "contract": 218, "explicit": 219, "pytest": 226, "randomis": 227, "detail": [229, 230, 245], "routin": 230, "decor": 231, "enum": 232, "variat": 235, "memoiz": 237, "pkgdata": 239, "inspect": 240, "time": 241, "coordsys3d": [242, 246], "del": [242, 247, 248], "parametricregion": 242, "implicitregion": 242, "parametricintegr": 242, "orient": [243, 246], "axisorient": 243, "bodyorient": 243, "spaceorient": 243, "quaternionorient": 243, "matrix_to_vector": 244, "vector_integr": 244, "locat": 246, "orient_new": 246, "AND": 246, "quadrilater": 247, "third": 247, "curvilinear": 248, "applic": 251, "calcul": 251, "perimet": 251, "surfac": 251, "area": 251, "volum": 251, "flux": 251, "verifi": 251, "stoke": 251, "introductori": [261, 266], "quick": [262, 263, 265, 268, 269], "two": 265, "final": 265, "read": 265, "interest": 267, "understand": 268, "through": 268, "invari": 268, "prevent": 268, "shape": 269, "access": 269, "delet": 269, "insert": 269, "determin": 269, "rref": 269, "nullspac": 269, "columnspac": 269, "eigenvalu": 269, "eigenvector": 269, "next": 270, "preliminari": 271, "exercis": 271, "up": 272, "str": 272, "mathml": 272, "cancel": 273, "apart": 273, "gammasimp": 273}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})