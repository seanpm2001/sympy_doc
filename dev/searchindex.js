Search.setIndex({"docnames": ["citing", "contributing/build-docs", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/dev-setup", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/make-a-contribution", "explanation/active-deprecations", "explanation/glossary", "explanation/gotchas", "explanation/index", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/custom-functions", "guides/index", "guides/solving/index", "guides/solving/solve-equation-algebraically", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/continuum_mechanics/truss", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/four_bar_linkage_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/joints", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers"], "filenames": ["citing.md", "contributing/build-docs.rst", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/dev-setup.rst", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.rst", "contributing/make-a-contribution.rst", "explanation/active-deprecations.md", "explanation/glossary.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/custom-functions.md", "guides/index.rst", "guides/solving/index.md", "guides/solving/solve-equation-algebraically.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/continuum_mechanics/truss.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/four_bar_linkage_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/joints.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst"], "titles": ["Citing SymPy", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Docstring Style Guide", "Contributing", "Making a Contribution", "List of active deprecations", "Glossary", "Gotchas and Pitfalls", "Explanations", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "Writing Custom Functions", "How-to Guides", "Solve Equations", "Solve an equation algebraically", "Welcome to SymPy\u2019s documentation!", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Truss (Docstrings)", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joints Framework (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "A four bar linkage", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Joints Framework in Physics/Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 15, 18, 19, 22, 24, 25, 28, 29, 32, 33, 34, 35, 42, 43, 44, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 65, 75, 77, 79, 81, 82, 83, 85, 88, 92, 94, 95, 96, 100, 102, 103, 105, 107, 109, 110, 128, 129, 132, 142, 146, 159, 168, 170, 174, 180, 183, 185, 187, 189, 190, 192, 194, 195, 196, 198, 199, 206, 207, 209, 212, 215, 216, 217, 218, 219, 220, 223, 224, 228, 230, 231, 234, 235, 237, 238, 244, 245, 247, 248, 250, 252, 253, 264, 265, 267, 268, 270, 271, 274, 275, 276], "public": [0, 6, 34, 52, 53, 74, 189, 190, 192, 193, 197, 212, 215, 219, 233, 244], "us": [0, 1, 2, 4, 5, 6, 8, 11, 12, 14, 16, 17, 18, 19, 21, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 132, 133, 134, 137, 138, 140, 142, 144, 145, 146, 149, 151, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 246, 247, 249, 250, 252, 253, 255, 256, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276], "meurer": 0, "A": [0, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 22, 23, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 96, 98, 100, 102, 106, 107, 108, 109, 110, 111, 112, 115, 116, 119, 120, 125, 127, 130, 131, 132, 133, 134, 137, 139, 142, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 244, 245, 247, 248, 249, 250, 252, 253, 260, 266, 268, 270, 271, 275], "smith": [0, 10, 89, 188], "cp": [0, 44, 93, 187], "paprocki": 0, "m": [0, 1, 10, 12, 15, 17, 19, 26, 30, 34, 35, 40, 41, 43, 44, 48, 51, 52, 53, 54, 55, 57, 60, 62, 64, 68, 69, 77, 79, 81, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 102, 104, 105, 107, 109, 110, 111, 112, 114, 115, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 141, 148, 162, 163, 166, 168, 170, 180, 184, 186, 187, 188, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 209, 211, 212, 215, 217, 218, 219, 220, 221, 224, 225, 231, 232, 234, 237, 239, 244, 246, 248, 252, 253, 265, 271, 274, 275, 276], "\u010dert\u00edk": 0, "o": [0, 1, 6, 11, 12, 15, 17, 25, 33, 34, 43, 44, 50, 52, 53, 58, 60, 62, 63, 65, 66, 68, 74, 77, 92, 96, 107, 110, 112, 114, 115, 127, 128, 129, 130, 132, 133, 155, 165, 176, 178, 180, 182, 192, 193, 195, 196, 199, 201, 206, 209, 215, 219, 224, 230, 237, 240, 241, 246, 249, 265], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 218], "ivanov": 0, "": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 74, 75, 77, 79, 80, 81, 82, 83, 85, 86, 88, 91, 92, 93, 94, 95, 96, 100, 102, 104, 106, 107, 109, 112, 115, 117, 121, 125, 130, 132, 136, 137, 138, 144, 145, 147, 149, 151, 152, 155, 159, 160, 162, 163, 165, 168, 170, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 219, 225, 230, 231, 232, 233, 234, 235, 237, 238, 240, 244, 245, 249, 250, 251, 252, 255, 263, 264, 265, 267, 268, 269, 270, 271, 275, 276], "moor": [0, 85, 88], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 4, 6, 7, 10, 11, 12, 18, 19, 26, 29, 30, 32, 34, 35, 36, 43, 44, 45, 46, 48, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 77, 79, 81, 82, 83, 84, 85, 88, 92, 93, 94, 98, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 119, 120, 127, 128, 129, 130, 132, 133, 137, 139, 145, 149, 161, 163, 165, 167, 168, 170, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 202, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 225, 228, 230, 233, 237, 238, 244, 246, 248, 252, 264, 265, 269, 270, 271, 274, 275, 276], "vig": 0, "granger": [0, 151], "BE": 0, "muller": 0, "rp": [0, 68, 137], "bonazzi": 0, "f": [0, 1, 6, 10, 11, 12, 15, 19, 22, 32, 33, 34, 35, 42, 43, 44, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 70, 75, 76, 77, 79, 81, 83, 85, 88, 92, 93, 94, 96, 100, 109, 110, 114, 120, 125, 127, 128, 132, 134, 138, 139, 150, 151, 154, 163, 165, 168, 175, 179, 180, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 201, 202, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 224, 225, 230, 231, 232, 233, 234, 237, 238, 240, 249, 250, 253, 264, 265, 270, 274, 275, 276], "gupta": [0, 218], "h": [0, 12, 15, 32, 33, 34, 35, 36, 43, 48, 51, 52, 53, 57, 60, 74, 77, 79, 83, 84, 88, 89, 94, 102, 112, 130, 134, 137, 149, 151, 154, 159, 163, 170, 184, 185, 186, 187, 188, 192, 193, 194, 195, 198, 199, 207, 211, 215, 217, 218, 219, 220, 225, 232, 253, 265, 274], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 151], "mj": 0, "terrel": 0, "ar": [0, 1, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 142, 144, 146, 149, 151, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 248, 249, 250, 252, 254, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 145, 146, 148, 149, 151, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 264, 265, 267, 268, 270, 271, 273, 274, 275, 276], "kulal": 0, "cimrman": 0, "r": [0, 1, 6, 7, 10, 12, 15, 17, 19, 26, 33, 34, 35, 36, 43, 44, 52, 53, 54, 56, 57, 58, 65, 66, 68, 70, 74, 75, 77, 79, 88, 92, 94, 96, 102, 104, 107, 110, 111, 112, 114, 115, 117, 119, 122, 123, 124, 129, 130, 131, 132, 133, 134, 137, 161, 162, 165, 166, 168, 175, 176, 178, 180, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 206, 207, 209, 211, 212, 215, 217, 218, 219, 225, 230, 232, 234, 244, 246, 248, 249, 250, 253, 275], "scopatz": 0, "2017": [0, 184], "symbol": [0, 3, 6, 7, 10, 11, 13, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 42, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 79, 80, 82, 83, 85, 88, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 130, 132, 134, 137, 138, 139, 140, 142, 144, 145, 147, 149, 151, 153, 154, 157, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 231, 237, 238, 244, 245, 246, 248, 249, 250, 253, 255, 260, 264, 265, 268, 270, 271, 274, 275, 276], "comput": [0, 3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 32, 34, 35, 36, 39, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 67, 71, 74, 75, 76, 78, 79, 81, 83, 85, 88, 89, 91, 92, 94, 96, 100, 102, 106, 109, 110, 111, 114, 115, 117, 118, 122, 125, 132, 149, 150, 151, 159, 164, 165, 167, 169, 170, 174, 176, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 204, 206, 207, 208, 209, 211, 212, 215, 217, 218, 219, 221, 231, 234, 237, 238, 244, 245, 246, 247, 248, 249, 250, 252, 255, 260, 264, 265, 267, 268, 271, 275], "python": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 32, 44, 52, 53, 56, 58, 64, 80, 82, 83, 85, 88, 92, 93, 94, 95, 106, 115, 132, 175, 185, 186, 187, 189, 190, 196, 198, 199, 207, 211, 215, 218, 220, 230, 231, 232, 233, 234, 237, 238, 240, 244, 256, 267, 268, 269, 270, 271, 273, 274, 275], "peerj": 0, "scienc": [0, 44, 77, 88, 131, 132, 186, 193, 209, 265], "3": [0, 4, 5, 7, 12, 13, 15, 17, 18, 19, 21, 22, 24, 26, 27, 29, 30, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 105, 108, 112, 114, 117, 118, 119, 120, 122, 123, 124, 125, 128, 129, 132, 133, 134, 136, 138, 142, 144, 145, 146, 150, 154, 159, 160, 162, 164, 165, 168, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 224, 225, 226, 230, 231, 233, 234, 235, 237, 238, 240, 242, 244, 245, 246, 247, 248, 250, 252, 253, 260, 264, 265, 267, 269, 270, 271, 274, 275, 276], "e103": 0, "http": [0, 1, 3, 4, 5, 6, 7, 10, 17, 19, 24, 26, 28, 29, 30, 32, 33, 34, 36, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 68, 69, 70, 74, 77, 79, 80, 81, 82, 83, 85, 88, 92, 95, 100, 102, 104, 105, 134, 136, 137, 138, 140, 141, 142, 146, 147, 148, 151, 153, 154, 163, 165, 175, 177, 179, 181, 184, 193, 195, 198, 199, 202, 204, 206, 207, 208, 211, 212, 215, 218, 219, 231, 232, 233, 235, 237, 238, 240, 244, 245, 249, 251, 253, 271, 274], "doi": [0, 6, 32, 44, 88, 193, 208, 211, 219], "org": [0, 3, 6, 7, 12, 17, 19, 26, 28, 29, 30, 32, 33, 34, 40, 41, 43, 44, 51, 52, 53, 54, 55, 57, 58, 60, 62, 64, 68, 69, 70, 79, 80, 81, 82, 83, 85, 88, 92, 100, 102, 104, 105, 134, 136, 137, 138, 140, 141, 142, 146, 147, 148, 151, 153, 154, 163, 165, 175, 177, 179, 181, 193, 195, 199, 202, 206, 207, 208, 212, 215, 218, 219, 231, 232, 233, 235, 237, 244, 245, 249, 251, 253, 271, 274], "10": [0, 3, 6, 12, 13, 19, 24, 26, 32, 34, 41, 43, 44, 48, 50, 51, 52, 53, 55, 56, 57, 58, 60, 65, 66, 68, 69, 77, 79, 80, 82, 83, 85, 88, 89, 92, 93, 94, 95, 97, 98, 100, 102, 103, 108, 112, 115, 117, 126, 132, 134, 138, 149, 159, 160, 171, 175, 176, 177, 178, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 202, 205, 206, 207, 208, 211, 212, 215, 218, 219, 220, 229, 230, 235, 237, 238, 240, 244, 246, 264, 271, 275], "7717": 0, "c": [0, 1, 3, 11, 12, 15, 17, 19, 25, 26, 32, 33, 36, 37, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 75, 77, 79, 81, 82, 83, 85, 88, 92, 93, 94, 95, 96, 98, 102, 104, 106, 108, 109, 110, 115, 120, 122, 123, 124, 128, 129, 130, 132, 134, 138, 144, 145, 146, 149, 151, 154, 159, 162, 164, 165, 170, 175, 178, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 224, 225, 231, 232, 234, 237, 240, 241, 244, 245, 246, 247, 248, 249, 250, 253, 256, 262, 265, 267, 274, 275, 276], "103": [0, 43], "bibtex": 0, "entri": [0, 10, 30, 35, 42, 44, 50, 53, 64, 77, 81, 83, 84, 85, 87, 91, 110, 115, 117, 130, 137, 188, 192, 194, 195, 209, 219, 238], "latex": [0, 1, 3, 6, 11, 19, 24, 60, 80, 174, 175, 179, 183, 185, 190, 199, 262, 269, 270], "user": [0, 1, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 19, 33, 34, 35, 43, 44, 51, 52, 53, 54, 60, 64, 77, 81, 85, 88, 94, 95, 96, 100, 102, 106, 115, 125, 128, 130, 133, 153, 154, 163, 169, 170, 174, 175, 178, 182, 186, 189, 192, 194, 196, 197, 198, 199, 200, 208, 211, 213, 217, 218, 219, 228, 231, 232, 234, 235, 238, 244, 247, 248, 253, 264, 267, 268, 270, 271, 272], "articl": [0, 52, 53, 85, 88, 191, 193, 194, 199, 244, 269], "titl": [0, 6, 7, 185], "author": [0, 6, 92, 151, 194, 260], "aaron": 0, "christoph": [0, 244], "p": [0, 1, 10, 11, 12, 15, 17, 18, 19, 26, 28, 29, 30, 34, 35, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 65, 66, 67, 68, 69, 74, 75, 77, 79, 83, 85, 88, 92, 94, 95, 96, 98, 102, 103, 107, 109, 110, 111, 112, 114, 115, 119, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 144, 163, 165, 170, 176, 178, 180, 182, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 199, 201, 202, 206, 207, 209, 211, 212, 215, 217, 218, 219, 220, 224, 225, 237, 244, 246, 247, 248, 249, 250, 252, 271, 275], "mateusz": 0, "v": [0, 1, 5, 22, 26, 34, 42, 48, 51, 52, 53, 54, 55, 56, 66, 77, 81, 83, 88, 92, 96, 107, 108, 109, 112, 117, 129, 130, 132, 133, 137, 138, 150, 165, 170, 175, 177, 178, 180, 182, 183, 185, 191, 192, 193, 194, 195, 199, 209, 211, 212, 215, 217, 219, 230, 237, 244, 246, 247, 248, 249, 250, 252], "ert": 0, "k": [0, 7, 12, 17, 19, 26, 32, 33, 34, 35, 36, 38, 42, 43, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 60, 65, 70, 77, 79, 82, 83, 85, 88, 92, 109, 110, 120, 127, 129, 130, 132, 139, 153, 154, 157, 161, 163, 165, 174, 180, 184, 186, 188, 189, 191, 192, 193, 194, 195, 196, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 215, 217, 219, 220, 221, 223, 224, 225, 226, 230, 234, 237, 244, 245, 246, 247, 248, 249, 250, 252, 253, 274, 275], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 5, 10, 11, 12, 17, 18, 19, 26, 33, 34, 35, 36, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 81, 82, 83, 84, 85, 88, 92, 94, 95, 96, 98, 100, 102, 107, 108, 109, 110, 111, 112, 115, 119, 120, 129, 130, 132, 134, 137, 142, 144, 146, 148, 153, 154, 157, 162, 163, 164, 165, 175, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 230, 233, 234, 237, 240, 244, 245, 246, 247, 248, 249, 265, 267, 271, 275, 276], "matthew": 0, "amit": [0, 218], "sergiu": 0, "jason": [0, 199], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 151], "e": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 17, 18, 19, 25, 26, 30, 32, 33, 34, 35, 41, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 69, 74, 75, 77, 79, 81, 82, 83, 88, 92, 94, 95, 96, 98, 102, 103, 107, 110, 112, 114, 115, 128, 129, 132, 133, 134, 137, 144, 145, 149, 154, 155, 157, 160, 162, 164, 165, 170, 171, 175, 179, 180, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 244, 247, 250, 252, 253, 264, 265, 269, 270, 275], "richard": [0, 92], "francesco": 0, "harsh": [0, 218], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 7, 10, 12, 26, 30, 32, 34, 35, 38, 42, 43, 44, 48, 50, 51, 53, 54, 56, 57, 60, 74, 77, 79, 81, 83, 85, 88, 92, 100, 103, 109, 130, 131, 132, 137, 144, 145, 162, 165, 170, 174, 180, 184, 186, 188, 190, 192, 193, 194, 195, 196, 198, 199, 201, 207, 209, 211, 212, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 237, 244, 245, 246, 247, 248, 249, 250, 252, 253], "andi": [0, 131], "rou": 0, "ka": 0, "n": [0, 5, 6, 7, 11, 12, 15, 17, 19, 22, 25, 30, 32, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 48, 50, 51, 53, 54, 56, 57, 58, 60, 62, 65, 66, 67, 68, 69, 74, 75, 77, 79, 81, 82, 83, 85, 88, 89, 92, 94, 95, 96, 102, 104, 105, 107, 109, 110, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 141, 145, 150, 151, 154, 159, 161, 162, 163, 165, 166, 168, 170, 172, 174, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 217, 218, 219, 222, 224, 225, 228, 231, 237, 239, 240, 244, 245, 246, 247, 248, 252, 265, 271, 274, 275, 276], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 219], "anthoni": 0, "year": [0, 4, 6, 10], "month": 0, "jan": [0, 53], "keyword": [0, 4, 6, 11, 19, 33, 34, 35, 43, 44, 52, 53, 56, 57, 65, 67, 68, 69, 83, 88, 92, 95, 100, 102, 110, 127, 128, 159, 165, 179, 185, 187, 189, 190, 192, 194, 195, 198, 199, 200, 206, 211, 212, 217, 224, 230, 231, 233, 235, 238, 240, 248, 271], "algebra": [0, 7, 11, 12, 17, 21, 29, 35, 43, 52, 53, 56, 58, 70, 73, 74, 75, 77, 79, 82, 83, 87, 89, 92, 93, 94, 114, 125, 132, 133, 181, 184, 187, 188, 190, 191, 192, 193, 195, 196, 199, 201, 209, 212, 213, 215, 218, 254, 255, 258, 260, 261, 266, 267, 269, 271], "system": [0, 1, 2, 3, 5, 7, 10, 11, 12, 14, 15, 18, 19, 21, 27, 29, 43, 52, 53, 54, 58, 77, 80, 81, 82, 83, 88, 93, 94, 95, 99, 101, 102, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 122, 124, 125, 126, 127, 128, 129, 130, 132, 143, 144, 159, 162, 163, 165, 168, 172, 175, 178, 179, 180, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 197, 198, 199, 207, 208, 213, 214, 218, 219, 230, 231, 244, 245, 246, 249, 251, 253, 260, 267, 269, 271, 275, 276], "abstract": [0, 10, 32, 33, 41, 52, 54, 58, 60, 65, 70, 85, 109, 115, 149, 151, 160, 163, 164, 165, 186, 191, 194, 218, 219, 221, 225, 232, 252, 256], "an": [0, 1, 3, 4, 6, 7, 9, 11, 12, 14, 15, 17, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 106, 107, 109, 110, 112, 114, 117, 119, 125, 127, 129, 130, 132, 133, 136, 137, 138, 142, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 158, 159, 160, 162, 163, 165, 166, 167, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 244, 245, 247, 248, 250, 251, 252, 253, 261, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276], "open": [0, 1, 3, 4, 6, 7, 9, 10, 22, 24, 32, 52, 54, 58, 79, 82, 102, 115, 118, 132, 199, 207, 214, 218, 219, 241, 269, 271], "sourc": [0, 1, 5, 6, 7, 11, 19, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 98, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 175, 176, 177, 178, 179, 180, 184, 185, 186, 188, 189, 190, 192, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 250, 262, 269], "written": [0, 3, 6, 7, 11, 17, 19, 30, 34, 40, 43, 44, 48, 52, 57, 60, 64, 70, 75, 77, 81, 82, 91, 92, 119, 125, 132, 165, 180, 181, 182, 183, 186, 187, 195, 199, 202, 206, 209, 212, 215, 232, 250, 252, 268, 269, 270, 275], "pure": [0, 3, 11, 22, 26, 53, 58, 79, 82, 85, 102, 129, 170, 189, 190, 192, 195, 199, 219, 237], "It": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 15, 17, 18, 19, 22, 24, 26, 27, 28, 29, 32, 33, 34, 40, 43, 44, 46, 47, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 68, 69, 75, 77, 79, 81, 82, 88, 92, 93, 94, 95, 96, 98, 100, 102, 104, 106, 107, 108, 109, 110, 115, 117, 123, 125, 126, 127, 128, 130, 132, 134, 138, 139, 149, 154, 155, 160, 161, 162, 163, 164, 165, 167, 170, 173, 175, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 199, 202, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 230, 231, 232, 233, 234, 235, 238, 244, 246, 247, 248, 250, 252, 253, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275], "built": [0, 1, 3, 6, 7, 11, 12, 14, 27, 29, 35, 52, 58, 79, 115, 132, 187, 190, 199, 200, 204, 215, 218, 219, 225, 234, 237, 238, 269, 270, 274], "focu": [0, 10, 17, 62, 217, 269], "extens": [0, 3, 6, 7, 17, 19, 43, 52, 58, 64, 68, 79, 88, 112, 132, 187, 189, 190, 191, 192, 193, 194, 195, 199, 209, 211, 215, 217, 218, 231, 232, 241, 268, 275], "eas": [0, 115, 183, 185, 199, 202], "through": [0, 4, 6, 11, 12, 17, 19, 22, 24, 32, 34, 43, 44, 46, 51, 52, 53, 56, 57, 60, 62, 63, 64, 65, 66, 68, 77, 81, 82, 88, 92, 95, 96, 100, 107, 110, 115, 117, 125, 130, 136, 137, 175, 185, 186, 192, 194, 199, 205, 209, 211, 215, 217, 218, 219, 220, 231, 237, 244, 245, 250, 253, 266, 267, 268, 273], "both": [0, 3, 4, 6, 7, 10, 11, 12, 14, 17, 18, 19, 22, 25, 26, 32, 33, 34, 44, 47, 48, 50, 51, 52, 53, 57, 58, 60, 67, 76, 77, 79, 82, 83, 88, 92, 94, 95, 96, 102, 107, 109, 110, 117, 119, 120, 126, 129, 137, 138, 149, 155, 162, 165, 170, 175, 178, 182, 183, 185, 186, 187, 189, 190, 192, 194, 195, 197, 198, 199, 201, 206, 207, 208, 209, 211, 212, 215, 217, 218, 220, 224, 230, 232, 237, 238, 244, 245, 265, 268, 269, 270, 275, 276], "interact": [0, 11, 22, 25, 52, 66, 79, 86, 88, 132, 162, 179, 183, 189, 190, 211, 219, 235, 242, 254, 261, 262, 267, 269, 270, 274, 275], "programmat": [0, 11, 14, 218, 248], "applic": [0, 7, 10, 22, 35, 36, 42, 43, 44, 45, 52, 53, 58, 79, 83, 88, 92, 95, 98, 110, 114, 115, 125, 129, 131, 132, 149, 150, 175, 178, 182, 187, 192, 193, 194, 195, 199, 201, 206, 212, 215, 218, 232, 237, 244, 250, 251, 269], "These": [0, 3, 6, 7, 10, 11, 12, 13, 15, 17, 18, 19, 23, 25, 33, 34, 43, 51, 52, 53, 54, 60, 77, 79, 82, 88, 94, 96, 102, 110, 111, 117, 119, 123, 126, 129, 132, 155, 160, 161, 175, 176, 180, 182, 183, 186, 187, 188, 189, 190, 192, 199, 209, 212, 215, 216, 218, 219, 221, 226, 230, 231, 232, 237, 250, 265, 268, 271, 274, 275], "characterist": [0, 54, 70, 88, 182, 188, 190, 192, 193, 215, 217, 271], "have": [0, 1, 4, 5, 6, 7, 11, 12, 14, 15, 17, 18, 19, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 67, 68, 70, 75, 76, 77, 79, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 95, 96, 100, 102, 103, 105, 106, 109, 110, 112, 115, 116, 117, 123, 125, 126, 129, 132, 149, 151, 154, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 173, 174, 175, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 201, 202, 204, 206, 207, 208, 209, 211, 212, 215, 217, 218, 219, 220, 223, 225, 226, 228, 229, 230, 232, 233, 234, 237, 238, 240, 244, 245, 247, 248, 249, 250, 253, 264, 265, 267, 268, 269, 270, 271, 274, 275, 276], "led": 0, "becom": [0, 4, 6, 7, 10, 11, 12, 15, 17, 43, 48, 51, 52, 53, 56, 75, 80, 88, 94, 179, 182, 186, 187, 189, 196, 199, 202, 208, 215, 218, 219, 225, 240, 246, 248, 275], "popular": [0, 3, 53, 93, 132, 269], "librari": [0, 3, 4, 6, 10, 11, 17, 19, 23, 24, 34, 52, 53, 57, 77, 79, 80, 88, 93, 106, 115, 132, 185, 189, 190, 219, 230, 231, 232, 237, 238, 264, 267, 268, 269], "scientif": [0, 11, 24, 52, 132], "ecosystem": 0, "thi": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 142, 144, 145, 146, 148, 149, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276], "paper": [0, 6, 92, 117, 183, 194, 195, 208, 209, 212, 215, 219], "present": [0, 3, 7, 10, 11, 12, 15, 32, 33, 36, 39, 43, 44, 46, 50, 52, 55, 79, 88, 92, 95, 98, 100, 102, 110, 117, 165, 167, 175, 177, 179, 180, 185, 186, 192, 193, 194, 198, 199, 212, 218, 232, 238, 241, 246, 247, 248, 252, 276], "architectur": [0, 132, 189, 230], "descript": [0, 4, 6, 7, 10, 21, 23, 33, 35, 42, 60, 79, 92, 137, 155, 162, 173, 182, 183, 184, 199, 223, 230, 232, 234, 235, 254, 272], "its": [0, 3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 22, 26, 28, 29, 30, 33, 34, 35, 36, 40, 42, 43, 44, 51, 52, 53, 54, 57, 58, 60, 62, 64, 68, 70, 77, 79, 80, 82, 83, 85, 88, 92, 94, 95, 96, 98, 102, 106, 107, 110, 112, 115, 117, 118, 119, 125, 126, 129, 130, 132, 133, 138, 144, 150, 151, 153, 154, 159, 160, 163, 165, 170, 172, 175, 176, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 211, 214, 215, 217, 218, 219, 223, 224, 225, 230, 233, 234, 237, 238, 241, 244, 246, 247, 248, 250, 253, 269, 270, 271, 274, 275], "featur": [0, 3, 4, 7, 10, 12, 13, 19, 23, 24, 52, 54, 56, 83, 94, 115, 125, 132, 181, 199, 215, 219, 228, 232, 235, 251, 263, 268, 269, 273, 275], "discuss": [0, 4, 6, 7, 10, 12, 13, 15, 17, 18, 19, 23, 35, 43, 53, 60, 92, 106, 110, 115, 125, 129, 130, 174, 181, 182, 183, 189, 225, 234, 254, 264, 266, 267, 269, 270, 272, 274, 275], "select": [0, 1, 13, 23, 34, 36, 43, 44, 51, 52, 53, 61, 66, 80, 82, 83, 92, 94, 108, 130, 170, 179, 189, 190, 192, 193, 195, 199, 208, 211, 217], "submodul": [0, 3, 4, 6, 11, 34, 106, 186, 190, 192, 194], "The": [0, 1, 3, 5, 6, 7, 8, 11, 12, 15, 16, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 136, 137, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 251, 252, 253, 260, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276], "supplementari": 0, "materi": [0, 95, 136, 273], "provid": [0, 1, 3, 4, 6, 7, 10, 13, 15, 16, 17, 18, 19, 23, 26, 32, 33, 34, 35, 41, 42, 43, 44, 50, 51, 52, 54, 56, 60, 61, 63, 68, 71, 74, 75, 79, 80, 82, 83, 85, 88, 89, 91, 92, 93, 94, 96, 98, 100, 106, 107, 110, 112, 114, 117, 118, 119, 120, 125, 126, 127, 128, 129, 130, 132, 133, 138, 139, 159, 167, 168, 169, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 202, 204, 207, 208, 209, 211, 215, 216, 217, 218, 219, 220, 224, 225, 230, 231, 232, 234, 235, 237, 238, 240, 244, 246, 247, 248, 250, 251, 253, 265, 269, 270, 271, 275], "addit": [0, 3, 4, 7, 10, 11, 12, 15, 24, 34, 42, 43, 44, 51, 52, 58, 60, 64, 70, 72, 76, 77, 79, 80, 82, 85, 88, 94, 99, 100, 102, 106, 107, 110, 129, 130, 133, 151, 163, 164, 167, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 194, 195, 199, 205, 208, 209, 211, 212, 215, 216, 217, 218, 219, 230, 231, 232, 234, 235, 237, 238, 240, 247, 267, 269, 270, 271, 274, 275], "exampl": [0, 2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 17, 18, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 97, 98, 100, 102, 104, 105, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 159, 160, 162, 163, 164, 165, 166, 167, 169, 171, 172, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 200, 201, 202, 204, 205, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 222, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 250, 251, 252, 253, 255, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 273, 274, 276], "further": [0, 3, 5, 17, 19, 29, 33, 53, 60, 64, 77, 79, 84, 85, 88, 94, 95, 99, 100, 107, 109, 110, 125, 130, 137, 182, 184, 185, 186, 192, 194, 195, 208, 209, 211, 215, 219, 225, 268, 269], "outlin": [0, 3, 4, 17, 19, 50, 79, 186, 215], "detail": [0, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 17, 19, 23, 33, 43, 52, 54, 57, 59, 60, 77, 78, 79, 80, 83, 88, 92, 100, 109, 110, 115, 130, 132, 137, 155, 159, 175, 177, 184, 185, 186, 192, 194, 201, 206, 211, 212, 213, 215, 216, 219, 224, 225, 230, 233, 235, 236, 238, 248, 249, 250, 251, 254, 265, 267, 271, 272, 274], "volum": [0, 6, 34, 51, 60, 77, 184, 193, 209, 212, 215, 234, 244, 251], "page": [0, 1, 3, 4, 6, 7, 10, 11, 12, 17, 18, 21, 22, 23, 34, 35, 51, 57, 77, 92, 93, 110, 132, 170, 185, 188, 189, 190, 193, 199, 209, 212, 235, 252, 275], "journal": [0, 6, 51, 57, 92, 103, 193, 211, 234], "issn": 0, "2376": 0, "5992": 0, "url": [0, 53, 235], "bsd": [0, 1, 3, 269], "licens": [0, 1, 3, 269], "so": [0, 3, 4, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 40, 41, 43, 44, 46, 48, 50, 52, 53, 56, 58, 60, 62, 64, 65, 66, 68, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 88, 89, 92, 94, 95, 96, 102, 106, 110, 115, 117, 119, 125, 127, 129, 132, 133, 138, 149, 151, 159, 161, 162, 163, 165, 167, 169, 170, 174, 175, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 223, 224, 228, 230, 231, 234, 235, 237, 238, 240, 249, 253, 255, 264, 265, 267, 269, 270, 271, 274, 275, 276], "you": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14, 18, 19, 21, 22, 23, 24, 25, 28, 29, 30, 32, 34, 35, 43, 44, 51, 52, 53, 54, 56, 58, 59, 60, 64, 66, 68, 70, 71, 76, 77, 79, 80, 82, 83, 85, 86, 88, 89, 92, 93, 94, 102, 104, 105, 106, 110, 111, 112, 115, 116, 126, 127, 129, 130, 132, 154, 159, 160, 163, 165, 174, 175, 177, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 199, 200, 202, 206, 207, 211, 212, 215, 216, 217, 218, 219, 223, 224, 225, 228, 230, 231, 232, 233, 235, 237, 238, 241, 247, 248, 249, 250, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276], "free": [0, 10, 11, 24, 32, 33, 34, 39, 42, 43, 48, 52, 64, 79, 83, 85, 88, 92, 95, 96, 100, 103, 125, 134, 154, 172, 175, 181, 185, 186, 190, 191, 192, 194, 195, 199, 201, 207, 209, 211, 212, 215, 217, 218, 225, 237, 269], "howev": [0, 1, 3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 22, 27, 29, 34, 43, 44, 48, 51, 52, 53, 54, 57, 58, 60, 62, 77, 79, 82, 83, 88, 92, 93, 94, 95, 115, 129, 133, 165, 183, 185, 186, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 206, 207, 208, 209, 211, 215, 216, 217, 218, 230, 231, 238, 247, 248, 252, 264, 267, 269, 271, 275, 276], "like": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 17, 18, 19, 23, 24, 34, 35, 37, 43, 44, 51, 52, 53, 56, 57, 58, 60, 62, 72, 75, 79, 80, 82, 83, 85, 86, 87, 88, 92, 93, 94, 98, 102, 106, 112, 115, 117, 126, 129, 130, 132, 133, 147, 149, 159, 160, 163, 164, 165, 170, 174, 175, 178, 180, 182, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 198, 199, 202, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 223, 225, 226, 228, 230, 231, 232, 233, 237, 238, 240, 241, 247, 248, 250, 252, 264, 265, 267, 268, 269, 270, 271, 275], "academ": [0, 33, 36, 193], "commerci": [0, 269], "creat": [0, 3, 4, 5, 6, 7, 9, 11, 17, 18, 22, 28, 33, 34, 35, 41, 43, 44, 52, 53, 54, 56, 58, 59, 60, 62, 64, 65, 67, 68, 73, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 92, 93, 94, 95, 98, 102, 107, 109, 110, 112, 115, 118, 119, 120, 122, 124, 126, 128, 129, 130, 132, 133, 142, 144, 146, 150, 153, 154, 155, 159, 160, 162, 163, 165, 168, 171, 174, 175, 177, 178, 182, 183, 185, 186, 188, 189, 190, 192, 194, 195, 196, 199, 206, 211, 215, 218, 219, 220, 224, 225, 230, 231, 232, 234, 235, 237, 238, 244, 248, 250, 265, 267, 270, 271, 274, 275, 276], "fork": [0, 5, 7, 10, 117], "deriv": [0, 6, 10, 11, 13, 16, 19, 22, 32, 33, 34, 36, 42, 43, 54, 58, 59, 60, 62, 69, 74, 75, 77, 79, 80, 82, 85, 88, 102, 106, 108, 109, 110, 114, 117, 119, 120, 122, 125, 127, 128, 129, 130, 154, 163, 167, 170, 171, 174, 175, 177, 178, 179, 180, 182, 185, 186, 187, 190, 192, 194, 195, 196, 199, 201, 209, 211, 215, 216, 217, 221, 222, 226, 232, 244, 246, 247, 266, 269, 276], "long": [0, 6, 7, 8, 34, 44, 51, 52, 53, 55, 65, 77, 79, 80, 82, 88, 92, 95, 96, 117, 179, 195, 196, 199, 208, 209, 217, 219, 231, 240, 246, 267, 270], "copi": [0, 1, 5, 10, 12, 17, 35, 44, 45, 52, 68, 88, 92, 93, 188, 190, 192, 194, 198, 199, 206, 217, 230, 237, 240, 274], "statement": [0, 6, 17, 18, 19, 24, 33, 34, 52, 60, 77, 82, 85, 115, 144, 199, 219, 228, 232, 237], "redistribut": [0, 195], "see": [0, 1, 3, 4, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 23, 27, 28, 29, 30, 32, 33, 34, 38, 40, 43, 44, 45, 48, 51, 53, 54, 57, 58, 59, 60, 64, 68, 69, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 88, 89, 92, 93, 94, 100, 106, 109, 110, 121, 123, 127, 129, 130, 134, 137, 140, 141, 150, 154, 155, 159, 160, 161, 162, 164, 165, 168, 170, 175, 179, 182, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 201, 202, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 224, 225, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 244, 245, 253, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276], "file": [0, 1, 3, 4, 5, 6, 7, 11, 12, 34, 88, 115, 132, 154, 199, 206, 209, 211, 228, 230, 231, 232, 238, 241], "That": [0, 4, 7, 11, 12, 17, 18, 19, 52, 53, 58, 82, 88, 125, 162, 167, 173, 182, 183, 186, 187, 189, 190, 192, 194, 205, 206, 215, 219, 231, 232, 238, 264, 267, 270, 275], "said": [0, 4, 11, 26, 30, 34, 38, 92, 170, 180, 182, 183, 187, 215, 218, 219, 244, 250], "although": [0, 3, 4, 6, 7, 11, 12, 14, 15, 17, 19, 44, 52, 53, 58, 64, 76, 77, 80, 82, 83, 85, 88, 92, 95, 106, 117, 132, 186, 189, 190, 192, 194, 195, 207, 208, 211, 212, 217, 231, 237, 238, 267, 270, 275], "requir": [0, 3, 6, 7, 8, 10, 11, 12, 19, 24, 34, 43, 52, 53, 55, 56, 60, 62, 63, 65, 66, 69, 71, 82, 88, 91, 92, 93, 94, 95, 100, 106, 107, 110, 112, 114, 115, 117, 119, 130, 139, 162, 174, 175, 177, 185, 186, 189, 190, 192, 194, 196, 199, 202, 208, 209, 212, 215, 217, 218, 219, 223, 230, 231, 232, 233, 235, 237, 238, 246, 247, 248, 271, 273], "conveni": [0, 1, 10, 11, 12, 22, 25, 32, 34, 44, 52, 53, 57, 60, 79, 82, 94, 115, 132, 174, 177, 182, 183, 185, 186, 187, 188, 189, 190, 194, 197, 206, 207, 211, 217, 223, 224, 231, 233, 234, 238, 250, 265, 267], "pleas": [0, 4, 6, 7, 9, 10, 22, 24, 30, 32, 52, 60, 64, 77, 92, 106, 110, 115, 125, 129, 130, 137, 138, 159, 174, 183, 184, 185, 186, 192, 193, 207, 211, 212, 217, 218, 238, 244, 248, 272, 276], "when": [0, 1, 3, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 43, 44, 45, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 76, 78, 79, 80, 82, 83, 84, 88, 92, 93, 94, 100, 102, 103, 106, 109, 115, 117, 123, 125, 127, 128, 129, 130, 133, 138, 139, 144, 149, 150, 154, 157, 159, 167, 168, 169, 174, 179, 182, 183, 185, 186, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 223, 224, 228, 230, 231, 232, 233, 235, 237, 238, 240, 241, 243, 247, 265, 267, 269, 270, 275, 276], "your": [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 19, 21, 24, 28, 52, 53, 79, 80, 88, 93, 94, 102, 106, 127, 129, 183, 185, 199, 206, 211, 215, 218, 219, 237, 238, 265, 269, 271, 272, 274, 275], "work": [0, 1, 3, 4, 6, 10, 11, 12, 14, 15, 17, 18, 19, 24, 27, 29, 32, 33, 34, 43, 44, 45, 52, 53, 56, 60, 77, 79, 81, 82, 83, 85, 88, 89, 92, 94, 106, 109, 115, 117, 126, 130, 132, 145, 149, 154, 158, 159, 160, 161, 164, 167, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 199, 206, 207, 208, 209, 211, 212, 215, 217, 218, 219, 225, 230, 231, 232, 234, 237, 238, 239, 240, 247, 248, 261, 267, 268, 269, 270, 271, 274, 275], "also": [0, 1, 3, 4, 7, 8, 10, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 41, 43, 44, 51, 53, 54, 56, 57, 58, 59, 60, 64, 68, 70, 72, 74, 75, 77, 79, 81, 82, 83, 86, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 106, 107, 108, 109, 110, 114, 115, 117, 118, 119, 120, 123, 126, 127, 128, 129, 130, 132, 133, 134, 138, 148, 149, 151, 155, 159, 164, 165, 168, 170, 174, 175, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 244, 246, 247, 248, 249, 250, 252, 253, 264, 265, 267, 269, 270, 271, 274, 275, 276], "consid": [0, 4, 7, 10, 11, 12, 14, 17, 18, 19, 22, 30, 33, 34, 41, 44, 47, 51, 52, 53, 55, 56, 57, 58, 60, 62, 64, 68, 76, 77, 79, 80, 81, 82, 83, 85, 88, 92, 102, 106, 107, 112, 116, 127, 133, 155, 162, 165, 170, 176, 179, 180, 182, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 202, 206, 211, 212, 215, 216, 217, 218, 219, 230, 232, 237, 246, 248, 250, 252, 253, 267, 271, 275], "contribut": [0, 3, 4, 5, 6, 7, 24, 68, 92, 110, 120, 123, 189, 191, 192, 194, 215, 253, 272], "all": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 15, 17, 18, 19, 23, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 77, 79, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 107, 108, 109, 110, 112, 114, 115, 117, 118, 120, 125, 127, 129, 132, 133, 139, 144, 145, 149, 159, 161, 162, 163, 165, 167, 168, 169, 170, 172, 173, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 225, 226, 228, 230, 231, 232, 233, 235, 237, 238, 240, 244, 245, 247, 249, 250, 251, 252, 254, 264, 265, 267, 269, 270, 271, 274, 275, 276], "chang": [0, 1, 6, 7, 8, 10, 11, 12, 17, 24, 33, 34, 35, 43, 44, 48, 51, 52, 53, 56, 58, 60, 66, 67, 77, 79, 82, 88, 92, 94, 95, 98, 102, 112, 115, 117, 122, 139, 150, 160, 170, 171, 174, 180, 182, 183, 184, 185, 186, 187, 188, 192, 195, 196, 199, 206, 207, 208, 209, 211, 215, 217, 218, 219, 220, 230, 237, 238, 248, 250, 264, 267, 270, 274], "back": [0, 19, 22, 33, 34, 48, 51, 52, 53, 58, 60, 67, 68, 74, 76, 77, 79, 80, 83, 92, 93, 102, 159, 179, 182, 189, 191, 194, 195, 197, 199, 209, 215, 217, 220, 221], "we": [0, 3, 4, 5, 6, 7, 10, 12, 15, 17, 18, 19, 21, 22, 27, 28, 29, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 65, 70, 75, 76, 77, 79, 80, 81, 82, 83, 88, 89, 91, 92, 102, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 137, 140, 148, 151, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 170, 174, 175, 177, 178, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 219, 223, 225, 230, 231, 232, 234, 235, 237, 238, 244, 247, 248, 249, 250, 252, 253, 264, 265, 267, 269, 270, 271, 274, 275, 276], "can": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 137, 138, 139, 144, 146, 149, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 234, 235, 237, 238, 240, 246, 247, 248, 249, 250, 252, 253, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276], "incorpor": [0, 3, 15, 187, 211], "u": [0, 12, 15, 17, 18, 19, 22, 26, 32, 33, 34, 43, 48, 51, 52, 53, 55, 66, 69, 74, 77, 79, 85, 88, 92, 107, 109, 110, 111, 114, 115, 117, 119, 122, 125, 127, 129, 130, 132, 133, 137, 138, 149, 154, 160, 170, 178, 180, 182, 185, 186, 187, 188, 192, 194, 195, 198, 199, 206, 209, 211, 212, 215, 216, 217, 218, 219, 224, 238, 250, 267, 269, 270, 271], "benefit": [0, 3, 19, 34, 106, 129, 179], "end": [0, 3, 6, 10, 12, 15, 17, 18, 19, 21, 32, 33, 34, 42, 43, 48, 50, 51, 52, 53, 57, 58, 60, 62, 64, 68, 77, 80, 82, 83, 85, 88, 92, 94, 95, 96, 98, 114, 117, 119, 122, 127, 128, 129, 130, 170, 175, 179, 180, 183, 184, 188, 192, 199, 202, 205, 207, 208, 210, 212, 215, 216, 217, 218, 219, 220, 230, 232, 233, 235, 237, 240, 250, 265, 269, 271, 275], "develop": [0, 4, 6, 7, 8, 9, 11, 15, 17, 19, 23, 24, 32, 35, 50, 94, 132, 169, 185, 186, 189, 192, 217, 218, 269, 272], "team": [0, 4], "member": [0, 6, 10, 17, 33, 41, 43, 53, 75, 98, 186, 207, 224], "list": [0, 3, 4, 6, 7, 13, 17, 22, 24, 26, 29, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 77, 79, 80, 81, 82, 83, 85, 88, 91, 92, 93, 94, 95, 102, 107, 109, 110, 114, 117, 119, 122, 126, 127, 128, 132, 133, 138, 149, 151, 154, 155, 159, 160, 162, 163, 165, 167, 175, 178, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 223, 224, 225, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 264, 268, 269, 271, 274, 275, 276], "github": [0, 1, 3, 4, 5, 7, 10, 22, 24, 32, 52, 68, 79, 88, 169, 207, 218, 271], "found": [0, 1, 3, 4, 6, 7, 17, 18, 22, 32, 35, 43, 44, 46, 48, 50, 52, 53, 54, 62, 63, 68, 77, 79, 88, 92, 102, 108, 109, 110, 111, 129, 132, 169, 182, 186, 187, 189, 194, 195, 196, 199, 201, 202, 205, 206, 209, 212, 215, 216, 217, 218, 219, 223, 237, 238, 240, 241, 274], "zotero": 0, "start": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 19, 23, 24, 33, 34, 36, 41, 42, 43, 44, 48, 51, 52, 53, 54, 60, 82, 83, 85, 88, 91, 92, 93, 95, 96, 98, 115, 117, 127, 128, 160, 161, 164, 168, 182, 183, 185, 189, 192, 194, 195, 199, 202, 205, 207, 208, 209, 212, 215, 217, 218, 219, 220, 223, 230, 231, 237, 239, 240, 249, 263, 264, 267, 269], "either": [1, 3, 6, 7, 10, 11, 12, 17, 18, 19, 22, 26, 30, 32, 33, 36, 44, 51, 52, 53, 56, 57, 58, 60, 67, 69, 75, 77, 79, 80, 82, 83, 88, 92, 102, 107, 110, 111, 114, 115, 128, 130, 132, 149, 155, 162, 165, 167, 179, 183, 185, 187, 188, 189, 190, 192, 194, 195, 199, 201, 206, 207, 208, 209, 212, 215, 216, 217, 218, 219, 220, 223, 224, 231, 237, 238, 244, 252, 267, 270, 271], "machin": [1, 3, 5, 6, 200, 211, 215, 264], "imag": [1, 3, 43, 121, 126, 132, 134, 138, 186, 190, 192, 199, 207, 218], "contain": [1, 3, 4, 6, 7, 10, 11, 12, 18, 19, 22, 25, 27, 28, 32, 33, 34, 35, 43, 44, 48, 50, 51, 54, 55, 56, 58, 60, 61, 63, 65, 66, 67, 68, 69, 78, 79, 81, 82, 83, 85, 88, 91, 92, 93, 94, 95, 97, 100, 101, 103, 107, 110, 111, 112, 114, 117, 119, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 152, 155, 157, 160, 162, 165, 174, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 199, 200, 201, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 223, 224, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 246, 254, 255, 265, 267, 271, 275], "them": [1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 22, 25, 28, 30, 33, 34, 41, 43, 44, 51, 52, 53, 54, 56, 57, 60, 63, 68, 70, 72, 74, 75, 77, 81, 82, 85, 88, 91, 92, 93, 106, 110, 112, 115, 117, 119, 120, 125, 127, 129, 130, 132, 138, 142, 158, 159, 165, 167, 170, 173, 175, 180, 182, 183, 186, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 206, 207, 208, 209, 211, 212, 215, 217, 218, 220, 221, 230, 232, 234, 237, 246, 264, 265, 267, 269, 270, 275], "If": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 41, 43, 44, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 77, 79, 80, 81, 82, 83, 85, 88, 89, 91, 92, 93, 94, 95, 100, 102, 103, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 127, 128, 129, 130, 132, 133, 138, 142, 146, 149, 155, 159, 160, 161, 162, 163, 165, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 244, 246, 248, 250, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276], "instead": [1, 3, 4, 6, 7, 10, 11, 12, 17, 18, 19, 22, 25, 27, 29, 33, 34, 43, 45, 48, 52, 54, 55, 56, 57, 60, 79, 80, 82, 83, 85, 86, 88, 92, 100, 103, 105, 114, 115, 117, 119, 129, 132, 163, 167, 169, 175, 179, 180, 182, 183, 186, 189, 190, 192, 194, 195, 197, 199, 201, 209, 211, 215, 217, 218, 219, 223, 224, 225, 228, 233, 234, 235, 238, 242, 250, 253, 264, 265, 267, 269, 270, 271, 275, 276], "follow": [1, 3, 4, 6, 7, 10, 12, 15, 17, 18, 19, 22, 24, 27, 29, 32, 33, 34, 35, 41, 42, 43, 44, 45, 48, 51, 52, 53, 56, 57, 58, 60, 64, 66, 68, 75, 76, 77, 79, 82, 83, 85, 88, 92, 93, 95, 96, 109, 110, 115, 117, 125, 126, 127, 128, 129, 130, 132, 134, 138, 157, 160, 162, 165, 168, 170, 175, 180, 182, 183, 184, 185, 186, 187, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 223, 224, 225, 230, 233, 234, 237, 238, 241, 247, 248, 250, 264, 265, 267, 268, 270, 271, 275, 276], "specif": [1, 5, 6, 7, 10, 11, 17, 19, 20, 23, 43, 44, 52, 53, 54, 60, 64, 79, 81, 83, 88, 107, 109, 110, 114, 115, 125, 132, 134, 170, 183, 185, 186, 190, 192, 194, 195, 198, 199, 200, 205, 211, 212, 215, 216, 217, 219, 225, 230, 231, 232, 237, 256, 271, 275], "instruct": [1, 3, 5, 6, 7, 9, 10, 12, 15, 20, 23, 34, 199, 217, 231, 232], "below": [1, 3, 4, 6, 7, 10, 12, 17, 19, 22, 24, 32, 33, 34, 42, 43, 44, 52, 53, 57, 59, 60, 61, 62, 68, 69, 75, 77, 79, 83, 88, 91, 92, 94, 95, 96, 102, 107, 110, 114, 115, 117, 119, 120, 121, 126, 127, 128, 129, 132, 159, 165, 170, 175, 183, 184, 185, 186, 188, 195, 199, 200, 202, 208, 211, 212, 215, 216, 218, 219, 230, 232, 237, 238, 240, 248, 250, 253, 254, 271, 275], "mai": [1, 3, 4, 5, 6, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 24, 25, 30, 32, 33, 34, 35, 43, 44, 45, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 65, 67, 68, 69, 77, 79, 80, 82, 83, 84, 88, 89, 91, 92, 94, 108, 110, 111, 115, 119, 125, 129, 151, 160, 165, 166, 167, 172, 175, 178, 180, 182, 185, 186, 187, 188, 192, 194, 199, 200, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 250, 252, 264, 265, 267, 270, 271, 275, 276], "choos": [1, 6, 22, 43, 48, 52, 54, 57, 88, 92, 96, 100, 119, 130, 165, 169, 175, 182, 183, 191, 195, 196, 199, 206, 208, 209, 215, 216, 219, 230, 235, 275], "cd": [1, 5, 6, 218, 237], "dockerfil": 1, "htmldoc": 1, "sympy_htmldoc": 1, "option": [1, 4, 5, 6, 7, 8, 12, 19, 27, 29, 32, 34, 43, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 65, 66, 68, 69, 71, 79, 80, 83, 85, 88, 89, 92, 93, 94, 95, 100, 102, 106, 107, 108, 109, 110, 111, 114, 132, 138, 149, 154, 155, 157, 160, 162, 167, 174, 175, 179, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 212, 215, 216, 217, 218, 219, 224, 225, 230, 231, 232, 235, 237, 238, 244, 268, 274, 275], "now": [1, 2, 3, 5, 7, 10, 12, 15, 17, 18, 19, 24, 33, 34, 44, 52, 53, 60, 63, 68, 69, 74, 76, 77, 81, 88, 92, 102, 107, 114, 115, 118, 120, 123, 125, 132, 133, 168, 170, 175, 179, 182, 183, 186, 187, 189, 192, 195, 196, 200, 207, 208, 209, 211, 212, 215, 217, 218, 219, 220, 225, 230, 231, 238, 248, 249, 267, 269, 270, 275, 276], "skip": [1, 3, 4, 6, 12, 33, 36, 52, 83, 88, 92, 175, 194, 198, 199, 201, 215, 217, 228, 230, 265, 273, 274], "down": [1, 4, 6, 17, 85, 104, 117, 119, 182, 183, 185, 190, 201, 207, 209, 211, 215, 234, 271, 275], "section": [1, 4, 7, 8, 11, 17, 19, 20, 26, 33, 35, 43, 44, 51, 52, 53, 55, 59, 60, 62, 68, 77, 82, 83, 88, 95, 96, 109, 115, 130, 168, 170, 174, 180, 183, 186, 189, 192, 194, 199, 202, 206, 209, 215, 225, 234, 235, 237, 247, 248, 249, 250, 254, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276], "For": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 17, 18, 19, 20, 22, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 64, 66, 67, 70, 73, 75, 76, 77, 78, 81, 82, 83, 88, 92, 93, 94, 95, 96, 102, 104, 108, 109, 110, 111, 115, 119, 125, 126, 127, 128, 129, 130, 132, 134, 148, 149, 154, 158, 160, 162, 163, 164, 165, 167, 170, 171, 175, 178, 179, 180, 182, 183, 185, 186, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 215, 217, 218, 219, 220, 223, 224, 225, 226, 230, 231, 232, 234, 235, 237, 238, 241, 242, 244, 245, 248, 250, 252, 253, 264, 265, 267, 270, 271, 275, 276], "apt": [1, 5], "get": [1, 2, 4, 6, 7, 8, 10, 13, 14, 15, 17, 18, 19, 22, 24, 25, 28, 29, 32, 33, 34, 36, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 56, 57, 58, 60, 65, 75, 77, 79, 81, 85, 88, 92, 94, 95, 100, 102, 105, 115, 118, 119, 127, 128, 129, 132, 137, 138, 145, 149, 154, 159, 160, 161, 162, 167, 170, 183, 187, 189, 190, 192, 194, 195, 196, 197, 198, 199, 201, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 225, 226, 231, 237, 238, 239, 241, 244, 247, 264, 267, 269, 270, 271, 274, 275, 276], "python3": [1, 3, 34, 94, 199, 230], "sphinx": [1, 4, 7, 8, 58, 215, 230, 235], "texliv": [1, 3, 199], "recommend": [1, 5, 6, 10, 11, 12, 13, 17, 19, 21, 22, 23, 24, 33, 34, 52, 53, 56, 83, 106, 127, 132, 159, 175, 182, 187, 188, 189, 190, 196, 212, 215, 218, 224, 228, 235, 247, 248, 273, 276], "dvipng": 1, "librsvg2": 1, "bin": [1, 2, 3, 5, 6, 80, 199, 230, 237], "imagemagick": 1, "docbook2x": 1, "graphviz": [1, 7, 270, 274], "pip": [1, 3, 24, 94], "txt": [1, 199], "mpmath": [1, 3, 5, 11, 19, 34, 57, 60, 88, 93, 132, 189, 190, 199, 207, 217, 233, 238], "error": [1, 3, 4, 6, 7, 10, 17, 18, 25, 32, 34, 41, 44, 51, 52, 53, 58, 59, 62, 67, 77, 79, 88, 91, 92, 94, 115, 183, 184, 187, 189, 190, 192, 196, 199, 201, 207, 215, 216, 217, 218, 219, 230, 231, 232, 235, 237, 240, 244, 255, 264], "packag": [1, 3, 21, 24, 80, 93, 94, 99, 125, 132, 179, 199, 230, 241, 249, 250, 269], "matplotlib": [1, 3, 6, 7, 10, 24, 75, 80, 100, 132, 145, 179, 185, 274], "mayb": [1, 18], "other": [1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 18, 20, 22, 26, 30, 33, 34, 35, 43, 44, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 77, 79, 82, 83, 85, 88, 92, 93, 94, 95, 96, 102, 106, 107, 109, 115, 116, 119, 120, 125, 126, 129, 130, 132, 134, 137, 138, 139, 149, 160, 162, 163, 164, 165, 168, 170, 171, 172, 174, 175, 177, 178, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 225, 226, 228, 231, 232, 233, 234, 237, 238, 244, 246, 247, 250, 252, 254, 264, 265, 267, 269, 270, 271, 275], "rpm": 1, "base": [1, 3, 4, 5, 6, 7, 9, 11, 12, 17, 19, 24, 28, 29, 32, 34, 35, 41, 42, 43, 48, 49, 50, 52, 53, 55, 57, 58, 59, 60, 63, 65, 68, 75, 79, 80, 81, 82, 84, 85, 88, 92, 93, 99, 107, 109, 115, 117, 132, 133, 134, 143, 145, 149, 150, 154, 160, 161, 163, 165, 167, 170, 171, 173, 175, 177, 179, 180, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 199, 201, 203, 206, 207, 208, 209, 211, 212, 213, 215, 217, 219, 223, 224, 225, 230, 231, 232, 233, 234, 235, 237, 238, 239, 244, 246, 247, 250, 261, 270, 275], "distribut": [1, 3, 24, 43, 50, 52, 60, 68, 79, 95, 96, 164, 187, 190, 191, 195, 199, 225], "prerequisit": 1, "dnf": [1, 82], "scheme": [1, 4, 17, 44, 51, 56, 184, 185, 192, 195, 224], "medium": [1, 19, 134, 135, 138, 139, 149, 192, 260], "tool": [1, 7, 11, 19, 43, 80, 87, 88, 93, 102, 132, 183, 186, 191, 192, 199, 210, 231, 237, 243, 251, 256, 258], "first": [1, 3, 5, 6, 7, 8, 11, 12, 15, 17, 18, 19, 22, 24, 33, 34, 35, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 65, 66, 68, 69, 76, 77, 79, 81, 82, 83, 88, 91, 92, 95, 96, 102, 103, 108, 109, 110, 114, 115, 117, 118, 119, 120, 125, 126, 129, 130, 133, 137, 138, 142, 146, 149, 154, 155, 158, 159, 160, 161, 162, 164, 165, 168, 170, 175, 178, 182, 183, 185, 186, 188, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 205, 206, 208, 209, 211, 212, 215, 216, 217, 218, 219, 223, 225, 228, 230, 231, 232, 233, 237, 238, 240, 248, 253, 264, 265, 267, 269, 270, 271, 273, 275, 276], "homebrew": 1, "brew": 1, "sh": 1, "Then": [1, 5, 11, 15, 17, 43, 48, 51, 52, 77, 81, 88, 92, 108, 110, 112, 122, 124, 125, 130, 134, 162, 170, 182, 186, 187, 189, 192, 194, 196, 199, 206, 209, 211, 212, 215, 217, 238], "docbook": 1, "librsvg": 1, "conda": [1, 3, 5, 24, 94], "Or": [1, 7, 12, 18, 22, 43, 52, 53, 54, 60, 77, 82, 92, 112, 186, 196, 198, 199, 211, 218, 219, 230, 238, 250, 270, 273], "forg": [1, 3, 94], "make": [1, 3, 4, 6, 7, 8, 10, 11, 12, 15, 17, 18, 19, 25, 28, 29, 30, 32, 34, 35, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 60, 64, 68, 79, 80, 82, 88, 91, 92, 93, 94, 95, 96, 98, 110, 114, 115, 117, 118, 122, 123, 127, 129, 130, 132, 145, 162, 167, 179, 182, 185, 188, 189, 190, 192, 194, 195, 196, 198, 199, 202, 207, 208, 209, 211, 215, 216, 217, 218, 223, 225, 228, 230, 231, 232, 233, 235, 237, 238, 247, 252, 253, 267, 268, 269, 270, 271, 275], "success": [1, 7, 33, 43, 52, 60, 77, 79, 92, 117, 175, 186, 192, 194, 207, 208, 215, 217, 218, 219, 237, 244, 245], "tricki": [1, 52, 77], "becaus": [1, 3, 4, 6, 7, 10, 11, 12, 17, 18, 19, 22, 24, 25, 30, 34, 44, 51, 52, 53, 58, 64, 68, 69, 77, 79, 82, 86, 88, 92, 94, 115, 119, 145, 153, 165, 167, 170, 182, 185, 186, 188, 189, 190, 192, 194, 195, 196, 198, 199, 202, 206, 209, 211, 212, 215, 216, 217, 218, 228, 230, 231, 233, 237, 238, 240, 247, 265, 267, 269, 270, 271, 274, 275, 276], "some": [1, 3, 4, 6, 11, 12, 15, 17, 18, 19, 22, 24, 25, 30, 33, 34, 35, 40, 43, 44, 50, 51, 52, 53, 56, 57, 58, 60, 62, 63, 64, 68, 77, 79, 81, 82, 83, 85, 88, 92, 93, 94, 100, 103, 106, 107, 112, 114, 115, 116, 117, 118, 119, 120, 125, 127, 129, 130, 133, 145, 150, 154, 162, 165, 170, 171, 174, 176, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 199, 201, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 244, 245, 246, 248, 250, 254, 264, 265, 267, 269, 270, 271, 273, 274, 275], "avail": [1, 3, 5, 7, 10, 11, 12, 17, 23, 24, 33, 34, 43, 44, 51, 52, 57, 60, 79, 88, 93, 94, 115, 129, 132, 189, 190, 192, 195, 199, 200, 205, 207, 209, 211, 212, 217, 218, 219, 220, 224, 225, 230, 237, 238, 243, 244, 261, 267, 274], "subsystem": [1, 199], "linux": [1, 24], "possibl": [1, 6, 10, 11, 17, 18, 19, 24, 32, 34, 35, 36, 41, 43, 44, 46, 47, 48, 52, 53, 57, 58, 60, 62, 64, 66, 67, 69, 74, 76, 77, 79, 81, 82, 83, 85, 88, 92, 103, 104, 106, 117, 128, 130, 159, 161, 165, 167, 170, 178, 180, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 205, 206, 207, 208, 211, 212, 215, 216, 217, 218, 219, 220, 225, 230, 232, 233, 234, 235, 237, 238, 247, 248, 250, 266, 267, 270, 275], "workaround": [1, 238], "solut": [1, 10, 11, 12, 15, 18, 19, 21, 34, 48, 52, 53, 58, 60, 62, 70, 74, 75, 76, 79, 88, 92, 99, 106, 110, 115, 119, 125, 129, 134, 170, 174, 186, 192, 193, 194, 195, 196, 197, 198, 207, 212, 213, 214, 215, 216, 217, 260, 276], "shell": [1, 12, 80, 132, 198], "after": [1, 4, 5, 6, 7, 10, 12, 24, 26, 28, 29, 33, 35, 40, 43, 44, 48, 50, 51, 52, 53, 54, 58, 67, 69, 74, 79, 83, 88, 92, 94, 95, 102, 126, 127, 129, 132, 134, 138, 150, 162, 170, 174, 180, 183, 188, 192, 194, 195, 196, 197, 199, 200, 205, 212, 215, 216, 217, 218, 220, 230, 233, 238, 240, 244, 246, 250, 264, 265, 267, 271, 275], "tutori": [1, 7, 11, 12, 15, 16, 24, 68, 115, 132, 187, 198, 199, 213, 215, 238, 267, 270, 272, 273, 274, 275, 276], "com": [1, 3, 4, 5, 6, 7, 10, 19, 24, 26, 30, 32, 43, 45, 46, 52, 53, 55, 56, 57, 58, 60, 62, 68, 69, 77, 79, 83, 88, 92, 100, 184, 193, 202, 204, 207, 208, 211, 212, 215, 218, 219, 237, 240, 271], "microsoftdoc": 1, "wsl": 1, "blob": [1, 79], "win10": 1, "md": [1, 4, 7, 228, 235], "In": [1, 3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 22, 24, 30, 32, 33, 34, 35, 36, 41, 42, 43, 44, 51, 52, 53, 54, 56, 57, 58, 60, 65, 67, 68, 69, 70, 77, 79, 80, 81, 82, 83, 85, 88, 89, 92, 94, 96, 98, 102, 106, 109, 110, 115, 118, 119, 120, 125, 126, 127, 128, 129, 130, 132, 133, 151, 153, 154, 155, 160, 164, 165, 168, 170, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 223, 225, 228, 230, 232, 234, 235, 237, 238, 241, 244, 247, 248, 250, 252, 264, 267, 268, 269, 270, 271, 274, 275, 276], "command": [1, 3, 5, 6, 11, 12, 24, 34, 56, 80, 115, 127, 132, 179, 185, 199, 230, 231, 274], "prompt": [1, 6, 11], "run": [1, 4, 6, 7, 8, 11, 12, 15, 17, 19, 35, 43, 44, 46, 52, 53, 77, 88, 93, 94, 110, 117, 132, 165, 179, 185, 186, 199, 209, 211, 215, 216, 217, 227, 231, 233, 234, 237, 238, 262, 267, 274], "transfer": [1, 99, 100, 102, 134, 218], "termin": [1, 43, 52, 58, 80, 92, 179, 199, 206, 230, 274], "abov": [1, 3, 4, 6, 7, 10, 12, 15, 18, 19, 32, 33, 34, 35, 36, 42, 43, 44, 48, 51, 52, 56, 57, 60, 62, 65, 68, 69, 77, 79, 82, 83, 88, 92, 93, 94, 96, 102, 106, 110, 112, 114, 115, 117, 118, 119, 120, 125, 126, 128, 129, 130, 133, 160, 162, 165, 175, 180, 182, 183, 185, 186, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 206, 209, 211, 212, 215, 217, 218, 219, 223, 224, 231, 232, 238, 247, 248, 249, 250, 253, 267, 269, 270, 271, 275], "html": [1, 3, 4, 6, 7, 30, 34, 36, 44, 45, 46, 52, 53, 55, 57, 58, 60, 62, 68, 69, 79, 80, 88, 92, 100, 193, 199, 202, 204, 207, 208, 212, 215, 219, 231, 233, 235, 237, 238, 271], "note": [1, 3, 6, 7, 10, 11, 12, 15, 17, 18, 21, 26, 27, 29, 30, 31, 32, 33, 34, 35, 42, 43, 44, 45, 48, 50, 51, 53, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 77, 79, 80, 82, 83, 85, 88, 92, 94, 102, 103, 107, 108, 109, 110, 111, 114, 115, 117, 119, 122, 126, 130, 132, 138, 141, 149, 159, 160, 162, 164, 165, 166, 168, 174, 175, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 205, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 224, 225, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 248, 250, 252, 261, 264, 265, 266, 268, 269, 270, 271, 275], "via": [1, 3, 11, 15, 19, 24, 27, 28, 29, 43, 44, 52, 57, 60, 77, 79, 82, 88, 92, 93, 94, 95, 175, 184, 186, 190, 192, 194, 195, 198, 199, 218, 228, 231, 232, 244, 252, 270], "want": [1, 3, 4, 5, 6, 10, 11, 12, 14, 15, 17, 18, 19, 22, 24, 30, 32, 34, 35, 36, 44, 52, 53, 59, 64, 66, 68, 71, 77, 79, 83, 85, 88, 89, 92, 93, 100, 102, 105, 111, 115, 132, 148, 158, 159, 162, 165, 168, 170, 177, 178, 182, 183, 185, 187, 188, 189, 192, 194, 195, 196, 198, 199, 200, 206, 207, 209, 211, 212, 215, 216, 217, 218, 219, 225, 228, 230, 232, 234, 237, 238, 248, 250, 253, 264, 265, 267, 269, 270, 271, 272, 274, 275], "directori": [1, 3, 6, 7, 24, 29, 34, 215, 230, 231, 240], "folder": 1, "prepend": [1, 33, 43, 88, 102, 172, 225], "mnt": 1, "path": [1, 5, 6, 10, 43, 68, 74, 102, 123, 180, 182, 208, 211, 215, 218, 230, 231, 234, 235, 237, 240, 241, 242, 250], "navig": 1, "method": [1, 3, 4, 6, 7, 11, 12, 16, 17, 22, 28, 29, 30, 32, 33, 34, 35, 36, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 68, 71, 74, 76, 77, 79, 81, 83, 84, 85, 88, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 106, 109, 114, 115, 118, 120, 121, 125, 126, 131, 132, 139, 142, 144, 146, 154, 155, 160, 162, 165, 167, 172, 173, 174, 175, 177, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 200, 201, 202, 204, 205, 206, 207, 211, 212, 213, 215, 217, 219, 220, 222, 224, 225, 226, 230, 232, 234, 237, 238, 244, 247, 250, 253, 254, 264, 265, 266, 267, 270, 275], "better": [1, 3, 4, 6, 10, 11, 12, 17, 18, 19, 33, 34, 44, 52, 56, 60, 79, 82, 102, 115, 145, 169, 173, 185, 188, 189, 190, 202, 206, 207, 208, 209, 215, 216, 217, 218, 219, 231, 237, 238, 269, 275], "compat": [1, 3, 4, 14, 34, 52, 60, 80, 83, 88, 93, 106, 167, 172, 179, 185, 188, 190, 194, 195, 199, 219, 222, 223, 226, 230, 232, 238], "than": [1, 3, 4, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 22, 25, 30, 34, 35, 37, 43, 44, 45, 51, 52, 53, 56, 57, 58, 60, 61, 66, 67, 68, 70, 74, 77, 79, 81, 82, 83, 85, 88, 89, 91, 92, 93, 94, 100, 102, 106, 110, 114, 115, 119, 122, 139, 145, 159, 162, 163, 165, 174, 183, 184, 187, 188, 189, 190, 192, 195, 196, 197, 199, 202, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 226, 231, 232, 234, 237, 238, 240, 241, 264, 265, 267, 268, 269, 270, 271, 273, 275], "cygwin": 1, "msys2": 1, "more": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22, 24, 25, 29, 30, 32, 33, 34, 35, 38, 42, 43, 44, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 74, 77, 79, 82, 83, 85, 86, 88, 89, 91, 92, 93, 94, 100, 102, 106, 110, 111, 115, 117, 119, 121, 123, 125, 127, 128, 129, 130, 132, 134, 137, 149, 153, 154, 159, 162, 163, 164, 165, 170, 174, 175, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 211, 212, 215, 216, 217, 218, 219, 230, 232, 233, 234, 237, 238, 240, 244, 247, 251, 264, 265, 267, 268, 270, 271, 273, 274, 275, 276], "virtual": [1, 4, 8, 24, 52, 68, 183, 268], "partial": [1, 11, 32, 43, 50, 51, 52, 54, 56, 57, 58, 92, 94, 132, 159, 175, 178, 180, 190, 191, 193, 196, 199, 201, 208, 211, 213, 215, 216, 220, 226, 244, 250, 265, 275], "need": [1, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 37, 43, 44, 48, 50, 51, 52, 53, 54, 58, 60, 63, 67, 68, 75, 76, 77, 79, 80, 83, 88, 92, 93, 94, 96, 102, 106, 110, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 133, 134, 145, 149, 157, 163, 168, 169, 174, 175, 179, 182, 183, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 206, 207, 209, 211, 212, 214, 215, 217, 218, 219, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 237, 240, 244, 247, 249, 250, 253, 264, 265, 267, 270, 271, 273, 275], "environ": [1, 3, 8, 9, 10, 11, 52, 80, 179, 199, 219, 230, 240, 267, 269, 274], "workflow": [1, 3, 5, 8, 9, 23, 132, 189, 232, 238, 272], "onli": [1, 4, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 68, 69, 70, 75, 77, 79, 80, 81, 82, 83, 88, 89, 92, 93, 94, 98, 100, 102, 108, 109, 115, 117, 118, 119, 121, 122, 124, 126, 127, 129, 130, 133, 138, 140, 159, 160, 164, 165, 167, 169, 170, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 244, 246, 248, 250, 252, 253, 264, 265, 267, 268, 270, 271, 275, 276], "viabl": [1, 53], "64": [1, 37, 43, 92, 131, 184, 198, 208, 217, 219, 230, 237, 240, 274], "bit": [1, 15, 19, 33, 34, 36, 52, 53, 55, 82, 83, 88, 92, 159, 170, 186, 195, 209, 212, 218, 230, 237, 247, 248, 274], "chocolatei": 1, "choco": 1, "rsvg": 1, "convert": [1, 3, 4, 10, 11, 12, 17, 18, 19, 26, 30, 34, 36, 44, 48, 52, 53, 56, 57, 58, 66, 67, 69, 72, 73, 76, 80, 82, 83, 88, 91, 92, 94, 102, 159, 162, 168, 169, 170, 172, 178, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 207, 208, 209, 211, 212, 216, 218, 219, 220, 221, 224, 230, 231, 237, 238, 240, 242, 246, 266, 267, 270, 275], "chose": [1, 53], "rm": [1, 34], "absolut": [1, 10, 30, 31, 34, 51, 52, 58, 67, 77, 79, 83, 88, 104, 163, 190, 194, 195, 209, 211, 214, 219, 230, 252, 253, 254], "Be": [1, 4, 6, 19, 32, 52, 82, 88, 192, 215, 218, 226, 238], "sure": [1, 4, 6, 7, 19, 34, 43, 52, 64, 114, 115, 145, 170, 195, 196, 206, 215, 217, 218, 231, 237, 267, 270, 275], "substitut": [1, 10, 11, 12, 15, 18, 34, 52, 53, 58, 60, 77, 79, 88, 93, 94, 102, 110, 111, 115, 117, 119, 129, 154, 163, 165, 168, 175, 177, 178, 196, 197, 200, 201, 206, 209, 211, 212, 215, 216, 217, 218, 238, 246, 266, 267], "actual": [1, 3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 33, 34, 35, 41, 43, 50, 52, 53, 60, 64, 77, 79, 81, 85, 88, 92, 102, 106, 115, 117, 127, 128, 129, 179, 186, 189, 194, 199, 207, 209, 211, 212, 215, 218, 226, 230, 231, 234, 235, 237, 238, 269], "filesystem": 1, "from": [1, 3, 4, 5, 6, 7, 11, 13, 14, 15, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 264, 265, 267, 269, 270, 271, 274, 275, 276], "ani": [1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 17, 18, 19, 24, 27, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 67, 68, 69, 77, 79, 80, 82, 83, 86, 88, 89, 92, 94, 95, 96, 98, 102, 104, 107, 109, 110, 111, 112, 114, 115, 125, 128, 129, 130, 133, 134, 138, 151, 154, 159, 160, 163, 165, 167, 170, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 199, 200, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 221, 224, 225, 230, 231, 233, 234, 235, 237, 238, 244, 247, 248, 249, 250, 252, 253, 264, 265, 267, 270, 271, 274, 275, 276], "makefil": 1, "subdirectori": 1, "ha": [1, 3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 21, 22, 30, 32, 33, 34, 35, 36, 41, 42, 43, 44, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68, 69, 75, 77, 79, 81, 82, 83, 85, 88, 89, 91, 92, 93, 95, 96, 98, 102, 103, 107, 109, 110, 115, 117, 119, 125, 126, 130, 132, 138, 139, 149, 150, 159, 162, 167, 170, 174, 175, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 204, 206, 207, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 230, 231, 232, 233, 234, 235, 237, 240, 244, 245, 247, 248, 250, 252, 253, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276], "collect": [1, 3, 7, 16, 33, 34, 43, 52, 69, 79, 92, 95, 102, 114, 123, 132, 165, 172, 184, 190, 195, 208, 209, 215, 219, 230, 237, 255], "offici": [1, 12, 24, 52, 106, 132, 174, 183, 218, 238, 273], "which": [1, 2, 3, 4, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 68, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 88, 91, 92, 94, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 138, 139, 151, 154, 160, 161, 162, 163, 165, 169, 170, 171, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 223, 225, 230, 231, 232, 233, 234, 235, 237, 238, 240, 244, 245, 248, 252, 253, 255, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276], "gener": [1, 4, 8, 10, 11, 12, 15, 17, 18, 19, 22, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 66, 68, 70, 75, 77, 79, 80, 81, 82, 85, 88, 92, 93, 94, 102, 106, 107, 109, 110, 111, 114, 115, 117, 118, 119, 120, 122, 124, 125, 126, 128, 129, 130, 132, 133, 137, 148, 149, 150, 151, 154, 159, 160, 163, 164, 165, 170, 172, 174, 175, 176, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 205, 208, 209, 211, 212, 213, 215, 216, 217, 219, 224, 225, 231, 232, 234, 235, 236, 237, 238, 244, 247, 248, 250, 251, 252, 265, 267, 268, 269, 270, 271, 275, 276], "svg": [1, 80, 179], "store": [1, 5, 10, 12, 17, 33, 34, 42, 43, 52, 74, 76, 85, 88, 92, 94, 110, 112, 114, 115, 130, 159, 165, 178, 182, 183, 185, 186, 189, 194, 195, 196, 206, 209, 220, 223, 224, 232, 233, 234, 237, 248, 250, 270], "_build": [1, 6], "same": [1, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 22, 26, 27, 28, 29, 30, 32, 33, 34, 41, 42, 43, 44, 48, 51, 52, 53, 54, 57, 59, 60, 62, 65, 66, 67, 68, 69, 74, 75, 77, 79, 81, 82, 83, 85, 88, 92, 94, 95, 96, 102, 103, 106, 107, 113, 115, 119, 122, 123, 129, 130, 149, 151, 159, 162, 163, 165, 167, 168, 170, 172, 173, 174, 175, 177, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 224, 225, 226, 228, 230, 232, 233, 234, 235, 237, 238, 240, 244, 245, 247, 248, 252, 265, 267, 270, 271, 274, 275], "inform": [1, 3, 4, 6, 7, 11, 12, 14, 17, 18, 22, 23, 29, 30, 33, 34, 35, 38, 43, 44, 50, 52, 53, 57, 60, 64, 77, 79, 81, 85, 88, 93, 96, 107, 108, 110, 114, 115, 117, 125, 126, 127, 129, 130, 132, 133, 160, 165, 170, 174, 175, 179, 183, 185, 189, 194, 195, 199, 200, 206, 209, 211, 212, 213, 217, 218, 219, 223, 224, 225, 230, 231, 232, 233, 234, 244, 248, 250, 275], "onc": [1, 4, 11, 12, 17, 18, 19, 34, 36, 43, 48, 52, 53, 57, 60, 68, 77, 79, 93, 96, 108, 109, 125, 129, 170, 175, 177, 183, 185, 187, 189, 195, 199, 200, 208, 209, 211, 215, 218, 225, 237, 247, 264, 265, 275, 276], "under": [1, 3, 4, 6, 11, 12, 17, 18, 28, 29, 31, 32, 34, 35, 42, 43, 48, 50, 60, 70, 77, 79, 81, 88, 92, 94, 95, 96, 134, 160, 184, 186, 187, 194, 195, 199, 206, 207, 209, 212, 215, 217, 218, 219, 225, 228, 269, 275], "prefer": [1, 3, 6, 10, 11, 17, 19, 34, 44, 51, 52, 60, 92, 94, 115, 165, 170, 185, 188, 190, 192, 194, 199, 207, 211, 215, 217, 224, 230, 232, 235, 238, 269, 271], "web": [1, 7, 53, 64, 132, 181, 193, 212], "browser": 1, "drop": [1, 58, 79, 93, 122, 190, 192], "menu": 1, "index": [1, 3, 10, 12, 19, 26, 34, 39, 41, 43, 44, 48, 51, 52, 53, 54, 58, 60, 63, 68, 77, 79, 82, 83, 85, 88, 91, 92, 102, 114, 115, 132, 133, 134, 136, 138, 139, 149, 158, 160, 162, 165, 170, 175, 185, 186, 190, 194, 195, 196, 199, 204, 205, 209, 217, 219, 220, 222, 223, 225, 226, 231], "given": [1, 3, 4, 7, 10, 11, 12, 15, 17, 19, 26, 28, 29, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 79, 81, 82, 83, 85, 88, 91, 92, 94, 95, 98, 100, 103, 107, 108, 112, 114, 115, 119, 130, 138, 155, 160, 162, 170, 171, 173, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 224, 225, 228, 230, 232, 234, 237, 238, 240, 241, 242, 244, 246, 248, 250, 252, 264, 270, 273, 275, 276], "told": 1, "how": [1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 33, 34, 43, 44, 51, 52, 59, 60, 64, 75, 78, 79, 82, 83, 85, 88, 92, 94, 106, 110, 115, 116, 122, 127, 128, 130, 132, 136, 137, 153, 157, 160, 161, 162, 167, 168, 175, 182, 185, 186, 189, 190, 192, 194, 198, 199, 202, 206, 207, 209, 211, 212, 213, 215, 216, 219, 225, 230, 231, 232, 233, 235, 237, 238, 248, 265, 267, 269, 270, 271, 272, 274, 275], "load": [1, 34, 52, 80, 95, 96, 98, 107, 109, 110, 114, 118, 120, 133, 145, 179], "ll": [1, 33, 50, 88, 119, 182, 183, 228], "manual": [1, 3, 4, 7, 10, 11, 19, 34, 35, 43, 56, 62, 79, 80, 94, 102, 114, 115, 118, 129, 133, 185, 192, 199, 215, 217, 218, 233, 265, 275], "repeat": [1, 11, 12, 43, 46, 51, 52, 58, 60, 79, 81, 83, 88, 92, 94, 149, 151, 165, 185, 186, 187, 192, 194, 195, 199, 205, 215, 219, 223, 224, 231, 233, 237, 275], "step": [1, 4, 5, 19, 20, 23, 32, 34, 43, 47, 48, 51, 52, 53, 60, 76, 77, 79, 88, 92, 93, 101, 110, 122, 125, 127, 132, 133, 167, 178, 183, 185, 189, 190, 192, 195, 199, 200, 201, 204, 207, 208, 209, 211, 212, 213, 215, 217, 219, 224, 231, 237, 238, 265], "reload": 1, "There": [1, 3, 4, 5, 6, 7, 10, 11, 12, 14, 17, 18, 19, 22, 34, 35, 43, 44, 45, 46, 49, 51, 52, 53, 56, 57, 60, 76, 77, 79, 80, 81, 82, 85, 88, 92, 95, 96, 98, 102, 106, 114, 125, 127, 129, 138, 155, 160, 174, 175, 179, 182, 183, 185, 189, 190, 191, 192, 194, 195, 196, 199, 200, 201, 207, 208, 209, 211, 212, 215, 217, 218, 219, 224, 233, 234, 237, 238, 240, 248, 264, 265, 267, 269, 270, 274, 275], "altern": [1, 4, 6, 10, 11, 12, 18, 19, 22, 24, 34, 40, 43, 44, 51, 52, 56, 58, 59, 60, 83, 85, 89, 93, 115, 127, 129, 175, 182, 184, 185, 187, 188, 189, 194, 195, 199, 204, 206, 208, 217, 218, 220, 237, 267, 269, 271], "approach": [1, 15, 22, 33, 51, 52, 79, 102, 119, 125, 189, 192, 193, 196, 207, 216, 217, 219, 231, 234, 237, 265, 271], "set": [1, 2, 3, 4, 6, 7, 11, 12, 15, 16, 17, 18, 25, 28, 29, 32, 33, 34, 35, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 67, 69, 70, 71, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 94, 95, 96, 102, 106, 109, 110, 114, 115, 117, 118, 119, 124, 127, 128, 129, 132, 133, 149, 155, 160, 165, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 192, 194, 195, 198, 199, 200, 201, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 223, 224, 225, 228, 230, 231, 232, 233, 237, 238, 244, 246, 248, 254, 257, 264, 266, 275], "up": [1, 3, 4, 10, 11, 15, 17, 18, 19, 24, 29, 32, 34, 43, 44, 46, 52, 53, 54, 56, 57, 58, 60, 61, 68, 69, 73, 77, 79, 80, 82, 83, 88, 92, 93, 95, 104, 106, 112, 114, 117, 118, 122, 124, 129, 130, 132, 133, 145, 160, 162, 178, 184, 185, 186, 189, 190, 194, 196, 199, 200, 201, 206, 208, 209, 211, 212, 215, 216, 217, 218, 231, 232, 233, 234, 235, 238, 266, 267, 270, 271, 273], "monitor": 1, "automat": [1, 3, 4, 6, 7, 10, 11, 12, 17, 22, 33, 34, 35, 44, 52, 54, 55, 56, 57, 58, 60, 65, 67, 71, 77, 80, 82, 92, 94, 95, 110, 115, 117, 123, 151, 153, 154, 163, 165, 178, 182, 185, 186, 189, 190, 191, 194, 195, 196, 199, 202, 205, 206, 208, 209, 211, 212, 215, 217, 218, 224, 225, 230, 231, 232, 235, 248, 253, 265, 267, 269, 270, 274, 275, 276], "detect": [1, 3, 25, 32, 85, 88, 92, 185, 189, 199, 215, 216, 218, 220, 237, 255, 274], "procedur": [1, 35, 37, 43, 49, 50, 51, 79, 88, 110, 130, 192, 194, 211, 212, 217, 218, 244, 271], "again": [1, 4, 12, 15, 18, 44, 52, 67, 92, 115, 117, 130, 160, 161, 175, 182, 186, 187, 194, 202, 209, 215, 228, 247, 267, 275], "whether": [1, 4, 10, 11, 17, 18, 19, 22, 32, 33, 34, 38, 43, 51, 52, 53, 59, 60, 64, 67, 79, 80, 82, 83, 88, 92, 106, 111, 114, 115, 153, 172, 177, 183, 185, 188, 189, 190, 194, 195, 199, 202, 206, 207, 211, 212, 215, 217, 218, 219, 220, 230, 232, 237, 238, 244, 246, 267, 271], "8000": [1, 95], "80": [1, 4, 6, 12, 19, 32, 43, 52, 55, 79, 88, 92, 95, 96, 100, 195, 198, 215, 219, 235, 237], "localhost": 1, "differ": [1, 4, 6, 7, 10, 11, 12, 13, 14, 16, 18, 19, 22, 25, 33, 34, 35, 41, 42, 43, 44, 48, 51, 52, 53, 54, 56, 57, 58, 60, 63, 65, 67, 68, 72, 74, 76, 77, 79, 80, 81, 82, 85, 88, 92, 93, 94, 95, 100, 106, 107, 112, 115, 117, 121, 125, 129, 130, 133, 137, 138, 150, 151, 159, 160, 163, 165, 167, 170, 174, 175, 176, 178, 179, 180, 183, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 211, 212, 215, 216, 217, 218, 219, 220, 223, 225, 228, 230, 231, 232, 233, 234, 235, 237, 238, 244, 246, 250, 251, 252, 255, 266, 267, 269, 270, 271, 274, 275], "port": [1, 94, 117, 137], "finish": [1, 34, 35, 159, 233, 272], "stop": [1, 4, 34, 35, 44, 52, 88, 92, 185, 205, 207, 215, 219], "ctrl": 1, "detach": 1, "mode": [1, 2, 52, 80, 94, 137, 160, 179, 195, 199, 230, 241, 261], "d": [1, 6, 7, 10, 11, 12, 15, 19, 26, 33, 36, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 57, 60, 62, 66, 70, 75, 77, 79, 81, 82, 83, 84, 85, 88, 89, 91, 92, 94, 95, 98, 110, 132, 134, 137, 138, 144, 154, 162, 164, 165, 170, 174, 175, 177, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 205, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 223, 225, 237, 240, 244, 245, 246, 247, 248, 252, 260, 271, 276], "name": [1, 3, 4, 5, 6, 7, 10, 11, 12, 17, 19, 25, 28, 29, 33, 34, 35, 39, 42, 45, 48, 51, 52, 53, 54, 58, 59, 60, 62, 65, 77, 79, 80, 81, 85, 88, 92, 94, 95, 98, 107, 109, 112, 114, 115, 117, 132, 136, 145, 160, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 183, 185, 186, 187, 189, 190, 192, 194, 196, 199, 205, 209, 211, 212, 215, 216, 218, 219, 224, 225, 228, 230, 231, 232, 233, 238, 240, 241, 242, 244, 247, 250, 264, 267, 270, 271, 275], "livehtml": 1, "simpli": [1, 3, 4, 7, 17, 18, 30, 35, 51, 52, 54, 58, 62, 83, 85, 88, 92, 94, 95, 103, 107, 115, 117, 129, 155, 160, 170, 180, 183, 189, 196, 207, 208, 209, 215, 218, 235, 238, 250], "should": [1, 3, 5, 6, 7, 8, 10, 11, 12, 14, 17, 18, 19, 22, 25, 27, 29, 32, 33, 34, 35, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 58, 60, 62, 63, 64, 65, 66, 67, 69, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 88, 92, 94, 95, 100, 102, 106, 115, 117, 119, 127, 129, 130, 132, 133, 134, 145, 149, 153, 155, 157, 159, 160, 163, 165, 167, 168, 170, 171, 175, 179, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 198, 199, 201, 202, 205, 206, 207, 208, 209, 211, 212, 215, 217, 218, 219, 223, 224, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 244, 247, 255, 264, 265, 267, 268, 271], "new": [1, 3, 4, 5, 7, 11, 17, 19, 23, 28, 29, 33, 34, 35, 43, 44, 51, 52, 53, 54, 60, 65, 68, 77, 79, 80, 83, 88, 92, 95, 98, 102, 107, 115, 122, 124, 130, 131, 132, 134, 155, 161, 162, 165, 167, 170, 171, 173, 175, 178, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 199, 206, 209, 211, 212, 215, 217, 218, 219, 220, 230, 231, 235, 238, 244, 245, 247, 251, 263, 264, 267, 270, 271, 273], "tab": [1, 12, 48, 132], "show": [1, 3, 4, 6, 7, 12, 14, 15, 16, 17, 18, 19, 34, 44, 51, 52, 56, 58, 75, 77, 79, 88, 92, 95, 96, 100, 106, 115, 121, 126, 130, 132, 160, 164, 168, 170, 175, 182, 183, 185, 186, 189, 190, 192, 194, 195, 199, 200, 202, 206, 207, 208, 209, 211, 212, 215, 217, 219, 220, 228, 231, 232, 235, 237, 238, 267, 269, 271, 274], "necessari": [1, 3, 4, 6, 8, 10, 12, 17, 19, 23, 32, 33, 43, 44, 52, 62, 77, 79, 82, 88, 92, 110, 117, 125, 185, 187, 189, 194, 195, 202, 208, 211, 215, 216, 217, 218, 219, 220, 225, 230, 232, 237, 238, 244, 268, 273], "major": [1, 3, 4, 7, 10, 62, 106, 224, 269, 275], "contributor": [1, 3, 7, 10, 19], "action": [1, 3, 7, 43, 81, 157, 160, 170, 195, 211, 218], "pull": [1, 3, 4, 5, 6, 7, 9, 10, 19, 24, 34, 52, 57, 60, 164, 200, 211, 215, 218, 271, 275], "request": [1, 3, 4, 6, 7, 9, 10, 17, 24, 32, 52, 56, 68, 77, 92, 115, 165, 192, 195, 223, 231], "each": [1, 3, 4, 10, 11, 12, 17, 19, 22, 23, 29, 30, 32, 33, 34, 35, 36, 43, 44, 48, 52, 53, 54, 55, 56, 57, 58, 60, 62, 67, 68, 69, 74, 75, 77, 79, 81, 82, 83, 85, 88, 92, 95, 100, 102, 108, 109, 110, 115, 117, 119, 122, 124, 126, 127, 130, 149, 162, 165, 174, 175, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 197, 199, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 223, 224, 225, 228, 230, 232, 234, 237, 238, 240, 244, 245, 246, 248, 250, 252, 265, 268, 270, 275, 276], "releas": [1, 7, 10, 52, 79, 83, 94, 129, 185, 224, 235, 238, 270], "includ": [1, 3, 4, 6, 7, 9, 10, 11, 12, 17, 19, 24, 29, 30, 32, 33, 34, 44, 48, 51, 52, 53, 54, 56, 57, 58, 60, 64, 70, 77, 79, 82, 83, 85, 87, 88, 92, 93, 94, 104, 106, 114, 115, 117, 119, 120, 125, 127, 129, 132, 145, 149, 154, 159, 162, 163, 173, 180, 183, 187, 190, 191, 192, 194, 195, 198, 199, 200, 205, 206, 207, 209, 211, 214, 215, 216, 217, 219, 222, 225, 228, 230, 232, 233, 234, 235, 237, 244, 245, 247, 252, 254, 265, 269, 270, 271, 275, 276], "fail": [1, 3, 4, 6, 7, 10, 17, 18, 19, 34, 43, 44, 48, 51, 52, 56, 58, 76, 77, 79, 80, 88, 89, 92, 94, 117, 155, 160, 179, 185, 188, 189, 190, 192, 194, 195, 199, 206, 209, 215, 217, 219, 228, 230, 237, 238, 271], "99": [1, 34, 52, 53, 88, 92, 192, 193], "time": [1, 3, 4, 7, 10, 11, 12, 15, 17, 18, 25, 29, 30, 34, 43, 44, 48, 52, 53, 57, 60, 75, 77, 82, 83, 88, 89, 91, 92, 93, 94, 99, 100, 102, 106, 110, 111, 114, 115, 117, 119, 122, 123, 125, 127, 128, 129, 130, 132, 133, 139, 149, 154, 162, 163, 167, 168, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 192, 193, 194, 195, 196, 198, 199, 206, 207, 208, 209, 211, 215, 217, 219, 228, 230, 231, 236, 237, 238, 250, 252, 262, 265, 269, 270, 271], "due": [1, 6, 10, 15, 19, 32, 34, 42, 43, 52, 54, 69, 88, 92, 115, 117, 129, 138, 165, 180, 183, 189, 195, 199, 202, 212, 214, 216, 219, 235, 246, 252, 275], "bad": [1, 10, 51, 92, 167, 199], "math": [1, 3, 6, 19, 26, 30, 33, 35, 43, 52, 60, 62, 79, 88, 92, 93, 115, 125, 180, 185, 190, 193, 198, 199, 215, 216, 219, 231, 232, 238, 248, 249, 250, 251, 252, 256, 264, 265, 269], "format": [1, 4, 8, 10, 11, 15, 33, 44, 53, 74, 75, 79, 82, 88, 91, 92, 95, 114, 133, 138, 149, 159, 185, 188, 189, 194, 195, 197, 199, 209, 215, 218, 230, 240, 244, 247, 268, 271, 274], "doubl": [1, 6, 7, 32, 34, 48, 52, 53, 59, 88, 94, 109, 124, 125, 182, 189, 199, 208, 209, 232, 275], "check": [1, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 28, 29, 32, 33, 34, 38, 41, 43, 44, 45, 50, 51, 52, 53, 57, 60, 64, 75, 77, 81, 82, 83, 85, 88, 89, 92, 102, 107, 108, 115, 129, 132, 145, 153, 165, 167, 168, 173, 180, 181, 185, 186, 188, 189, 190, 192, 194, 195, 201, 207, 209, 211, 215, 216, 217, 218, 219, 223, 224, 228, 230, 232, 235, 237, 246, 250, 267, 275], "ad": [1, 6, 7, 10, 17, 22, 26, 33, 34, 36, 42, 43, 52, 53, 63, 67, 74, 77, 81, 92, 94, 98, 106, 107, 115, 116, 132, 139, 167, 170, 176, 184, 185, 194, 196, 198, 199, 201, 209, 212, 215, 218, 219, 221, 224, 225, 230, 246, 267], "correctli": [1, 3, 4, 6, 7, 10, 18, 19, 32, 56, 77, 80, 88, 115, 117, 129, 199, 206, 212, 215], "backtick": [1, 6, 7], "code": [1, 6, 8, 9, 11, 12, 15, 17, 18, 19, 24, 25, 35, 39, 43, 46, 47, 52, 53, 54, 56, 60, 64, 77, 79, 80, 88, 92, 93, 94, 107, 115, 117, 123, 125, 126, 130, 132, 133, 159, 165, 174, 179, 182, 184, 185, 186, 187, 189, 192, 198, 209, 211, 215, 217, 218, 219, 224, 227, 228, 230, 231, 232, 235, 236, 237, 238, 247, 262, 267, 269, 272, 274], "singl": [1, 4, 7, 10, 11, 15, 17, 19, 22, 25, 33, 34, 36, 43, 52, 53, 57, 58, 60, 65, 66, 68, 69, 70, 77, 79, 82, 83, 88, 91, 94, 102, 103, 108, 109, 119, 126, 145, 149, 151, 159, 162, 165, 172, 175, 178, 185, 186, 188, 189, 190, 192, 194, 195, 199, 200, 201, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 224, 230, 232, 234, 237, 238, 240, 265, 267, 270, 271, 276], "render": [1, 3, 6, 7, 34, 52, 80, 179, 185, 199, 274], "resourc": [1, 6, 7, 19, 88, 193, 215, 231, 241], "style": [1, 8, 33, 52, 80, 159, 179, 185, 199, 218, 274], "guid": [1, 3, 8, 9, 11, 13, 19, 24, 33, 52, 59, 115, 129, 199, 225, 258, 260, 268, 272, 273], "tip": [1, 6, 52, 129, 215, 216, 275], "few": [1, 3, 4, 10, 11, 17, 30, 42, 44, 52, 53, 79, 80, 92, 93, 117, 125, 168, 174, 179, 182, 183, 186, 194, 199, 207, 208, 209, 215, 218, 219, 232, 237, 275], "extra": [1, 10, 34, 52, 53, 92, 93, 123, 170, 180, 191, 192, 199, 209, 215, 230, 231, 232, 250], "xelatex": 1, "latexmk": 1, "chrome": 1, "chromium": 1, "On": [1, 10, 17, 29, 45, 52, 54, 60, 79, 82, 92, 115, 170, 180, 189, 192, 193, 194, 195, 215, 217, 234, 238, 250, 252], "xetex": 1, "font": [1, 80, 179, 199], "lmodern": 1, "cask": 1, "tap": 1, "dejavu": 1, "strawberryperl": 1, "miktex": [1, 3], "dejavufont": 1, "appdata": 1, "microsoft": 1, "right": [1, 4, 6, 7, 10, 12, 15, 19, 21, 32, 34, 35, 43, 44, 48, 52, 53, 55, 57, 58, 60, 68, 69, 77, 79, 82, 83, 88, 91, 92, 94, 95, 96, 102, 110, 114, 115, 129, 130, 132, 133, 137, 144, 149, 151, 153, 154, 159, 162, 165, 175, 180, 183, 184, 185, 186, 188, 194, 196, 197, 199, 201, 202, 206, 207, 209, 215, 216, 218, 219, 230, 232, 234, 237, 250, 265, 269, 271, 275], "click": 1, "result": [1, 3, 6, 10, 11, 12, 14, 15, 17, 18, 19, 26, 27, 28, 29, 30, 32, 33, 34, 42, 43, 44, 48, 51, 52, 53, 54, 56, 58, 60, 64, 69, 70, 74, 76, 77, 79, 81, 82, 83, 85, 88, 91, 92, 93, 94, 95, 102, 103, 106, 107, 108, 111, 115, 119, 125, 129, 132, 150, 157, 159, 160, 162, 164, 165, 167, 168, 170, 174, 175, 183, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 230, 231, 232, 234, 235, 237, 238, 240, 244, 246, 248, 267, 269, 270, 271, 275], "version": [1, 3, 4, 5, 6, 7, 12, 13, 17, 18, 19, 23, 24, 27, 33, 34, 43, 44, 50, 52, 53, 58, 60, 65, 79, 82, 83, 84, 86, 88, 90, 92, 105, 107, 115, 149, 163, 167, 175, 184, 185, 186, 189, 190, 192, 194, 195, 199, 202, 211, 217, 219, 229, 230, 232, 233, 234, 235, 237, 238, 242, 244, 249, 267, 270, 271], "where": [1, 4, 5, 6, 7, 10, 11, 12, 15, 17, 18, 19, 22, 25, 26, 30, 32, 33, 34, 35, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 65, 67, 68, 69, 70, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 88, 92, 95, 99, 102, 106, 109, 110, 111, 112, 114, 115, 117, 128, 129, 130, 132, 133, 139, 149, 154, 160, 162, 164, 165, 166, 167, 168, 175, 178, 180, 182, 183, 184, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 223, 225, 230, 231, 232, 233, 237, 238, 240, 244, 250, 252, 265, 267, 269, 271, 275, 276], "g": [1, 3, 4, 5, 7, 10, 12, 17, 18, 19, 32, 33, 34, 35, 37, 40, 42, 43, 44, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 68, 69, 70, 72, 75, 78, 79, 81, 82, 83, 88, 92, 94, 95, 102, 103, 107, 112, 114, 115, 117, 119, 120, 122, 123, 124, 129, 130, 132, 133, 145, 149, 154, 160, 162, 163, 165, 168, 170, 171, 175, 180, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 211, 212, 215, 216, 217, 218, 219, 220, 223, 224, 225, 230, 231, 232, 233, 235, 237, 238, 239, 240, 252, 265, 270, 274, 275, 276], "1": [1, 3, 4, 7, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 144, 147, 148, 149, 150, 151, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 242, 244, 246, 247, 248, 250, 253, 260, 264, 265, 267, 269, 270, 271, 274, 275, 276], "dev": [1, 3, 4, 5, 235], "sympi": [2, 3, 4, 7, 8, 9, 11, 13, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 251, 252, 253, 254, 256, 262, 263, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276], "sympy_debug": [2, 79, 240], "variabl": [2, 3, 6, 7, 10, 11, 13, 15, 18, 19, 25, 26, 27, 29, 30, 32, 34, 35, 47, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 69, 71, 77, 79, 80, 82, 83, 88, 94, 95, 96, 100, 102, 114, 115, 122, 124, 132, 133, 139, 154, 159, 163, 165, 168, 174, 175, 177, 180, 187, 189, 190, 192, 194, 195, 196, 199, 200, 205, 206, 211, 212, 214, 215, 216, 217, 218, 226, 230, 232, 233, 234, 238, 244, 246, 247, 249, 250, 252, 261, 265, 267, 269, 271, 276], "instanc": [2, 4, 6, 7, 10, 11, 14, 17, 18, 19, 27, 28, 29, 31, 33, 34, 43, 45, 47, 52, 54, 56, 57, 58, 60, 65, 68, 69, 70, 75, 76, 79, 80, 83, 85, 88, 92, 94, 95, 103, 107, 110, 114, 115, 133, 138, 145, 149, 155, 159, 160, 162, 164, 165, 175, 177, 179, 180, 185, 189, 190, 194, 195, 196, 197, 199, 207, 209, 211, 215, 217, 218, 219, 223, 224, 225, 230, 231, 232, 234, 237, 238, 244, 245, 246, 247, 248, 250, 252, 264, 265, 270, 275, 276], "unix": [2, 230, 231], "would": [2, 4, 5, 6, 7, 10, 11, 12, 15, 17, 18, 19, 21, 22, 24, 33, 34, 35, 41, 43, 44, 51, 52, 53, 57, 64, 68, 77, 79, 83, 88, 92, 94, 95, 102, 103, 104, 106, 108, 115, 119, 129, 132, 160, 162, 165, 170, 174, 175, 180, 182, 185, 188, 189, 190, 192, 195, 196, 198, 199, 200, 202, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 223, 224, 230, 232, 234, 237, 238, 240, 241, 248, 249, 250, 252, 264, 265, 267, 269, 270, 271, 274, 275, 276], "do": [2, 3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 20, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 44, 48, 51, 52, 53, 54, 55, 58, 60, 62, 64, 67, 68, 71, 77, 79, 80, 82, 83, 85, 86, 88, 89, 92, 93, 99, 102, 106, 109, 110, 112, 114, 115, 116, 118, 119, 123, 126, 127, 132, 137, 140, 145, 149, 154, 157, 159, 161, 167, 169, 170, 173, 174, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 202, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 221, 224, 225, 228, 230, 231, 233, 235, 237, 238, 240, 246, 248, 249, 250, 252, 264, 265, 267, 268, 269, 270, 271, 273, 275], "true": [2, 3, 6, 10, 11, 12, 14, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 77, 79, 80, 82, 83, 84, 85, 88, 89, 92, 94, 95, 96, 100, 102, 103, 104, 105, 106, 108, 110, 111, 115, 117, 119, 132, 136, 137, 146, 149, 150, 157, 159, 160, 163, 164, 165, 168, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 230, 231, 232, 233, 235, 237, 238, 240, 244, 246, 247, 248, 249, 250, 253, 264, 265, 267, 269, 270, 271, 274, 275, 276], "isympi": [2, 3, 11, 12, 80], "window": [2, 240, 261], "just": [2, 4, 6, 7, 10, 11, 12, 17, 18, 19, 22, 24, 30, 33, 34, 43, 50, 52, 53, 54, 75, 77, 79, 80, 81, 82, 88, 92, 93, 104, 106, 107, 112, 115, 119, 123, 129, 130, 132, 145, 150, 155, 165, 170, 174, 179, 180, 182, 186, 188, 189, 190, 192, 194, 198, 199, 206, 207, 208, 209, 211, 215, 218, 228, 230, 232, 233, 235, 249, 250, 252, 264, 265, 267, 268, 269, 270, 271, 275, 276], "limit": [2, 4, 10, 12, 22, 24, 30, 32, 34, 51, 52, 54, 56, 57, 58, 60, 61, 64, 72, 74, 79, 80, 82, 88, 92, 100, 125, 130, 154, 160, 163, 179, 185, 190, 192, 195, 196, 199, 202, 203, 205, 207, 211, 212, 214, 215, 216, 217, 219, 224, 231, 234, 237, 238, 240, 243, 244, 253, 266, 267, 269, 271], "function": [2, 3, 4, 7, 8, 11, 14, 15, 17, 18, 20, 21, 23, 27, 28, 29, 31, 32, 33, 35, 43, 44, 47, 48, 50, 53, 54, 55, 56, 57, 61, 62, 63, 64, 69, 72, 73, 76, 78, 79, 80, 81, 83, 85, 87, 91, 93, 95, 97, 99, 100, 102, 103, 104, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 125, 127, 128, 132, 137, 138, 139, 140, 144, 149, 150, 151, 154, 159, 160, 161, 162, 163, 164, 165, 168, 174, 175, 178, 179, 181, 183, 184, 186, 191, 192, 193, 194, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276], "nice": [2, 4, 6, 24, 52, 64, 88, 92, 115, 129, 132, 185, 199, 209, 240, 270], "print": [2, 4, 6, 7, 11, 12, 15, 17, 18, 22, 24, 27, 28, 29, 30, 32, 33, 35, 36, 41, 43, 44, 51, 52, 53, 56, 57, 58, 60, 79, 81, 82, 85, 88, 89, 92, 93, 94, 96, 102, 110, 115, 117, 125, 131, 137, 145, 158, 159, 163, 165, 175, 181, 183, 185, 188, 189, 190, 194, 195, 205, 206, 208, 209, 211, 215, 217, 224, 226, 230, 232, 237, 238, 240, 242, 244, 247, 254, 256, 262, 265, 266, 267, 268, 269, 270, 271, 275], "tree": [2, 10, 11, 14, 43, 46, 52, 94, 108, 115, 157, 160, 175, 191, 195, 206, 208, 211, 218, 221, 223, 234, 237, 240, 256, 262, 266], "veri": [2, 3, 4, 6, 10, 11, 12, 14, 17, 19, 34, 48, 52, 53, 56, 57, 62, 64, 70, 74, 77, 79, 82, 88, 92, 102, 106, 115, 119, 132, 137, 170, 182, 183, 186, 189, 192, 194, 195, 196, 198, 199, 200, 206, 207, 208, 209, 211, 212, 215, 217, 218, 219, 230, 231, 232, 238, 264, 267, 270, 275], "sever": [3, 4, 5, 6, 10, 11, 14, 17, 19, 22, 24, 34, 37, 43, 44, 51, 52, 56, 57, 59, 60, 64, 77, 79, 92, 108, 126, 170, 172, 185, 187, 189, 192, 194, 198, 199, 200, 206, 207, 215, 219, 230, 232, 242, 254, 267, 271, 274], "instal": [3, 5, 7, 11, 12, 56, 93, 189, 190, 199, 231, 238, 262, 268, 274], "enabl": [3, 7, 11, 19, 24, 52, 79, 80, 92, 96, 115, 117, 165, 175, 179, 199, 215, 219, 230, 235, 238, 271, 274, 275], "certain": [3, 7, 11, 19, 24, 31, 33, 34, 43, 50, 52, 56, 60, 68, 77, 79, 92, 94, 129, 175, 176, 186, 189, 192, 194, 199, 200, 206, 209, 211, 212, 215, 218, 219, 221, 232, 233, 238, 244, 246, 252, 275], "most": [3, 4, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 22, 24, 27, 28, 29, 32, 33, 34, 35, 43, 44, 51, 52, 53, 56, 62, 64, 79, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 102, 106, 110, 115, 123, 129, 130, 133, 167, 174, 178, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 197, 198, 199, 206, 207, 209, 212, 215, 216, 217, 218, 219, 228, 231, 232, 233, 234, 235, 237, 238, 240, 246, 248, 264, 267, 269, 270, 271, 273, 274, 275], "mention": [3, 4, 6, 19, 43, 77, 79, 102, 117, 133, 134, 180, 209, 212, 215, 219, 247, 248, 249, 250, 271], "except": [3, 4, 6, 10, 11, 12, 15, 17, 18, 19, 32, 34, 43, 44, 52, 53, 56, 58, 60, 77, 79, 87, 92, 109, 123, 171, 184, 186, 189, 190, 191, 194, 195, 196, 197, 199, 208, 211, 212, 215, 216, 218, 223, 228, 230, 232, 233, 236, 237, 238, 247, 250, 262, 264, 267, 270, 271], "unless": [3, 6, 11, 17, 19, 22, 27, 29, 32, 34, 43, 51, 52, 53, 57, 60, 67, 68, 77, 88, 91, 138, 182, 183, 187, 189, 194, 195, 199, 204, 207, 208, 215, 217, 230, 234, 237, 238, 240, 244, 252, 265, 271, 275], "thei": [3, 4, 6, 7, 10, 11, 12, 17, 18, 19, 22, 24, 30, 33, 34, 35, 40, 42, 43, 44, 50, 51, 52, 53, 54, 57, 58, 60, 62, 65, 66, 67, 68, 69, 74, 77, 79, 80, 82, 83, 85, 86, 88, 91, 92, 94, 106, 109, 110, 112, 114, 115, 117, 123, 125, 127, 128, 129, 132, 133, 139, 144, 149, 154, 157, 162, 167, 168, 170, 171, 175, 178, 179, 180, 183, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 197, 199, 200, 205, 206, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 225, 228, 230, 232, 234, 237, 238, 240, 244, 250, 252, 265, 267, 268, 269, 270, 271, 275], "intend": [3, 4, 6, 10, 17, 52, 53, 63, 72, 77, 92, 94, 108, 160, 189, 190, 194, 197, 212, 215, 216, 228, 233, 264], "part": [3, 4, 6, 7, 10, 11, 17, 18, 19, 26, 31, 43, 44, 51, 52, 53, 57, 58, 60, 68, 75, 77, 79, 82, 83, 85, 92, 102, 106, 107, 109, 110, 114, 115, 117, 123, 125, 126, 130, 132, 149, 161, 165, 174, 183, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 207, 209, 211, 212, 215, 217, 230, 232, 234, 237, 265, 270, 275], "those": [3, 6, 11, 12, 17, 18, 22, 25, 30, 33, 34, 35, 43, 44, 50, 51, 52, 53, 56, 65, 66, 77, 79, 82, 88, 91, 92, 106, 117, 123, 138, 162, 174, 177, 179, 182, 183, 185, 189, 190, 192, 194, 195, 197, 198, 199, 205, 207, 211, 215, 216, 217, 218, 219, 225, 228, 230, 234, 237, 244, 246, 267, 269, 275], "everi": [3, 4, 6, 11, 17, 19, 22, 23, 28, 29, 30, 33, 38, 40, 43, 44, 52, 53, 67, 81, 83, 88, 92, 102, 130, 180, 182, 183, 185, 186, 187, 189, 190, 192, 194, 199, 204, 207, 209, 211, 212, 215, 218, 219, 221, 247, 250, 252, 268, 270, 271, 275], "doe": [3, 6, 7, 8, 10, 11, 14, 17, 18, 19, 23, 24, 25, 28, 29, 32, 33, 34, 35, 43, 44, 48, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 65, 66, 68, 77, 79, 82, 83, 88, 91, 92, 94, 104, 106, 108, 115, 117, 122, 126, 145, 149, 155, 159, 161, 164, 174, 182, 183, 185, 187, 188, 189, 190, 192, 194, 195, 196, 199, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 224, 225, 228, 230, 232, 234, 237, 238, 240, 244, 245, 248, 264, 265, 267, 270, 271, 274, 275, 276], "themselv": [3, 7, 10, 19, 30, 33, 44, 48, 50, 52, 79, 92, 125, 126, 169, 189, 190, 194, 205, 219, 225, 234, 237, 240, 275], "incomplet": [3, 6, 7, 52, 57, 60, 187, 189, 195, 201, 217, 218], "main": [3, 5, 6, 7, 10, 12, 29, 30, 34, 52, 58, 77, 83, 88, 91, 115, 123, 163, 169, 179, 183, 185, 186, 190, 191, 199, 206, 215, 218, 224, 231, 275, 276], "webpag": [3, 7], "complet": [3, 4, 6, 11, 12, 17, 22, 29, 34, 52, 53, 54, 56, 58, 59, 60, 68, 77, 79, 88, 92, 106, 110, 111, 119, 125, 132, 151, 154, 155, 183, 192, 195, 196, 200, 206, 211, 212, 215, 218, 219, 230, 232, 240, 269, 270, 275], "io": [3, 7, 80, 199, 238], "one": [3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 23, 25, 26, 29, 30, 32, 33, 34, 36, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 64, 65, 66, 68, 69, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88, 91, 92, 93, 94, 95, 96, 99, 100, 102, 103, 106, 107, 109, 110, 115, 116, 119, 129, 130, 132, 134, 137, 138, 139, 145, 150, 159, 163, 165, 167, 168, 170, 173, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 223, 225, 226, 230, 231, 232, 234, 237, 238, 240, 244, 248, 250, 252, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275], "arbitrari": [3, 6, 10, 11, 12, 17, 19, 22, 32, 37, 44, 45, 51, 52, 53, 56, 57, 60, 63, 64, 66, 82, 83, 88, 96, 126, 130, 151, 154, 183, 185, 186, 189, 190, 192, 194, 196, 211, 215, 216, 217, 225, 235, 238, 244, 245, 264, 265, 270, 275, 276], "precis": [3, 4, 6, 11, 12, 17, 18, 19, 22, 34, 43, 52, 55, 56, 57, 60, 68, 79, 88, 92, 100, 130, 184, 186, 189, 190, 194, 195, 196, 199, 206, 211, 212, 217, 218, 231, 232, 240, 264, 275], "arithmet": [3, 34, 52, 53, 56, 83, 88, 92, 154, 161, 184, 185, 186, 188, 189, 190, 192, 193, 197, 200], "hood": [3, 11], "whenev": [3, 4, 10, 11, 12, 19, 50, 77, 79, 88, 172, 185, 186, 187, 201, 206, 209, 219, 265, 267, 270], "calcul": [3, 12, 15, 17, 26, 32, 35, 44, 50, 52, 53, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 69, 79, 83, 85, 88, 92, 95, 96, 104, 106, 107, 109, 110, 114, 117, 118, 119, 134, 137, 138, 141, 144, 160, 161, 162, 163, 165, 166, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 189, 190, 192, 194, 195, 196, 201, 206, 215, 219, 223, 231, 232, 238, 244, 246, 250, 251, 252, 271, 274], "float": [3, 11, 17, 19, 34, 43, 58, 60, 67, 69, 79, 80, 83, 88, 92, 94, 100, 102, 132, 138, 179, 185, 189, 190, 199, 211, 217, 219, 230, 238, 240, 255, 264, 267], "point": [3, 4, 6, 7, 10, 11, 12, 15, 17, 22, 24, 26, 32, 34, 35, 43, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 74, 75, 76, 77, 79, 88, 92, 95, 96, 98, 100, 107, 109, 110, 111, 112, 114, 115, 117, 119, 121, 122, 123, 124, 127, 128, 129, 130, 132, 133, 145, 167, 170, 176, 180, 181, 183, 185, 186, 189, 190, 192, 194, 195, 199, 201, 205, 206, 207, 215, 217, 218, 219, 231, 234, 237, 238, 240, 244, 246, 248, 249, 250, 251, 252, 253, 255, 264, 265, 267, 270], "valu": [3, 4, 6, 7, 10, 11, 12, 15, 17, 19, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 43, 44, 48, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 77, 79, 80, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 104, 107, 109, 110, 111, 112, 114, 115, 117, 129, 132, 134, 138, 141, 144, 149, 151, 154, 157, 159, 160, 161, 162, 165, 166, 168, 169, 170, 175, 176, 178, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 197, 199, 200, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 230, 232, 233, 237, 238, 240, 246, 248, 250, 253, 265, 267, 270], "evalf": [3, 6, 11, 12, 17, 34, 51, 56, 57, 58, 60, 71, 74, 75, 83, 88, 94, 115, 117, 132, 147, 190, 195, 206, 207, 211, 219, 231, 238, 255, 266], "cannot": [3, 4, 6, 7, 10, 11, 12, 14, 18, 19, 24, 27, 28, 29, 30, 31, 32, 34, 44, 49, 51, 52, 54, 56, 57, 58, 62, 64, 65, 67, 69, 74, 79, 81, 84, 86, 88, 90, 92, 102, 160, 168, 170, 182, 183, 185, 190, 192, 194, 195, 196, 199, 206, 207, 211, 212, 214, 215, 217, 218, 219, 220, 228, 230, 231, 232, 237, 241, 244, 245, 269, 270, 271, 275, 276], "without": [3, 4, 6, 7, 10, 11, 12, 17, 19, 24, 28, 30, 31, 34, 51, 52, 53, 54, 56, 60, 77, 79, 80, 83, 85, 88, 102, 103, 115, 121, 123, 128, 129, 165, 170, 174, 175, 176, 182, 185, 188, 189, 192, 195, 199, 201, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 221, 224, 225, 228, 230, 231, 232, 235, 237, 238, 240, 246, 249, 271, 275], "import": [3, 4, 8, 11, 12, 14, 15, 17, 18, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 253, 264, 265, 267, 269, 270, 271, 273, 274, 275, 276], "importerror": 3, "extern": [3, 24, 80, 94, 98, 100, 117, 125, 179, 189, 190, 200, 207, 211, 219, 230, 231], "doc": [3, 4, 6, 7, 8, 12, 23, 34, 43, 51, 52, 68, 80, 130, 167, 189, 191, 212, 215, 230, 231, 233, 235, 237, 244, 248], "latest": [3, 5, 24, 33, 233, 235, 238], "mean": [3, 4, 6, 7, 10, 11, 12, 17, 18, 19, 30, 35, 44, 51, 52, 53, 54, 70, 77, 79, 80, 82, 83, 86, 88, 92, 106, 165, 167, 170, 175, 179, 182, 185, 186, 187, 189, 192, 194, 198, 199, 209, 211, 212, 215, 217, 218, 219, 220, 221, 223, 224, 230, 237, 248, 264, 265, 267, 269, 270, 271, 275, 276], "did": [3, 7, 18, 52, 79, 92, 106, 122, 170, 192, 196, 207, 217, 228, 238, 267, 269, 275], "explain": [3, 4, 6, 7, 17, 33, 48, 52, 60, 70, 75, 126, 186, 189, 192, 194, 196, 206], "ones": [3, 4, 10, 19, 24, 34, 43, 48, 52, 77, 79, 82, 83, 85, 88, 91, 92, 115, 138, 159, 165, 188, 192, 202, 212, 215, 220, 226, 232, 240, 244, 248, 271, 274], "typic": [3, 4, 10, 11, 19, 48, 60, 77, 92, 102, 107, 112, 116, 174, 183, 185, 187, 192, 196, 209, 231, 232, 248], "directli": [3, 4, 6, 10, 11, 12, 15, 17, 18, 19, 24, 28, 29, 32, 33, 34, 43, 51, 52, 54, 58, 63, 83, 85, 88, 92, 115, 151, 163, 168, 175, 178, 185, 186, 188, 189, 190, 194, 195, 207, 208, 209, 211, 212, 215, 216, 218, 219, 230, 231, 232, 233, 234, 235, 265, 276], "git": [3, 8], "repositori": [3, 5, 7, 24], "vast": [3, 79, 191], "wrap": [3, 4, 6, 27, 28, 29, 30, 34, 41, 52, 58, 80, 93, 179, 183, 185, 188, 189, 192, 199, 202, 218, 224, 231, 235, 238, 240, 270], "addition": [3, 6, 10, 52, 127, 163, 183, 192, 199, 219, 228, 235, 247], "ci": [3, 7, 60, 77, 199, 274], "wish": [3, 6, 12, 19, 24, 34, 52, 53, 56, 77, 92, 160, 174, 183, 234, 238, 265, 269, 271, 276], "local": [3, 25, 27, 28, 29, 52, 54, 77, 94, 122, 124, 177, 186, 192, 217, 230], "improv": [3, 4, 10, 18, 19, 52, 77, 125, 185, 189, 192, 193, 195, 196, 198, 200, 215, 218, 224, 255, 265, 271], "perform": [3, 10, 11, 12, 14, 15, 17, 19, 31, 33, 34, 35, 43, 44, 47, 51, 52, 53, 55, 56, 58, 65, 69, 76, 79, 86, 88, 92, 93, 108, 110, 117, 119, 125, 129, 130, 132, 149, 150, 159, 162, 165, 180, 183, 187, 188, 189, 192, 194, 195, 200, 201, 202, 206, 211, 212, 215, 217, 218, 219, 220, 231, 237, 244, 245, 247, 250, 255, 264, 265, 269, 270, 275], "gmpy2": [3, 189, 190], "wrapper": [3, 10, 11, 19, 28, 30, 34, 44, 52, 60, 88, 129, 177, 179, 188, 189, 192, 199, 206, 215, 218, 219, 231, 235, 237], "gmp": 3, "multipl": [3, 4, 6, 10, 11, 12, 17, 19, 22, 28, 29, 30, 32, 33, 34, 35, 41, 43, 44, 48, 51, 52, 53, 57, 58, 60, 62, 67, 70, 72, 77, 79, 81, 82, 83, 85, 88, 89, 92, 94, 99, 102, 106, 117, 125, 132, 133, 149, 150, 151, 155, 162, 164, 167, 170, 171, 172, 175, 178, 182, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 199, 204, 205, 207, 208, 209, 211, 212, 215, 216, 218, 219, 220, 223, 225, 228, 232, 233, 234, 235, 237, 238, 240, 244, 248, 264, 265, 267, 268, 270, 271, 276], "larg": [3, 4, 6, 12, 17, 43, 44, 52, 53, 62, 77, 79, 91, 92, 106, 111, 129, 132, 145, 170, 174, 184, 189, 190, 192, 195, 198, 199, 200, 206, 209, 211, 219, 224, 231, 238, 240, 246, 264, 269, 275], "integ": [3, 6, 7, 10, 11, 12, 17, 19, 21, 22, 27, 28, 29, 32, 34, 35, 41, 43, 44, 45, 46, 48, 51, 53, 54, 55, 56, 57, 59, 60, 62, 65, 76, 77, 79, 80, 81, 82, 83, 85, 88, 89, 92, 94, 95, 102, 104, 154, 159, 161, 162, 163, 165, 167, 175, 177, 179, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 204, 205, 206, 208, 209, 211, 212, 215, 217, 218, 219, 223, 224, 225, 231, 232, 234, 237, 240, 265, 267, 270, 274, 275], "faster": [3, 17, 34, 37, 52, 60, 83, 92, 93, 106, 108, 110, 111, 129, 188, 189, 190, 192, 194, 195, 196, 200, 202, 206, 211, 212, 215, 216, 218, 231, 234], "int": [3, 6, 7, 10, 11, 12, 17, 18, 19, 26, 32, 34, 44, 52, 53, 54, 57, 58, 60, 61, 68, 77, 79, 80, 82, 83, 88, 89, 92, 94, 100, 102, 145, 149, 150, 159, 175, 177, 178, 179, 184, 185, 189, 190, 194, 195, 196, 199, 201, 202, 204, 215, 216, 219, 231, 235, 237, 240, 267, 269, 270, 274, 275], "core": [3, 4, 5, 6, 11, 12, 14, 17, 18, 19, 30, 32, 34, 43, 53, 58, 59, 61, 69, 83, 87, 92, 94, 163, 164, 187, 189, 190, 191, 192, 194, 195, 196, 199, 206, 207, 211, 212, 215, 219, 229, 230, 231, 237, 238, 242, 254, 255, 267, 270], "oper": [3, 5, 6, 11, 17, 18, 19, 26, 30, 34, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 60, 62, 70, 72, 75, 77, 82, 83, 85, 87, 92, 94, 102, 103, 106, 110, 111, 119, 123, 129, 132, 137, 141, 142, 146, 148, 149, 150, 151, 156, 157, 160, 162, 163, 164, 165, 174, 175, 177, 181, 186, 187, 188, 189, 190, 192, 194, 195, 196, 199, 202, 204, 207, 208, 210, 211, 215, 217, 218, 221, 222, 223, 224, 230, 231, 234, 237, 238, 244, 251, 254, 260, 266, 267, 268, 270, 275], "poli": [3, 11, 12, 51, 52, 53, 57, 58, 60, 61, 68, 74, 79, 83, 85, 88, 92, 132, 186, 187, 191, 192, 194, 195, 196, 198, 201, 214, 215, 217, 218, 230], "refer": [3, 4, 5, 7, 11, 12, 15, 18, 19, 20, 24, 28, 29, 30, 32, 34, 36, 38, 40, 41, 43, 44, 45, 46, 50, 53, 55, 57, 58, 60, 62, 67, 68, 69, 72, 74, 78, 80, 81, 82, 87, 89, 93, 95, 100, 102, 103, 105, 107, 109, 110, 112, 114, 115, 117, 125, 127, 130, 132, 133, 134, 135, 136, 138, 142, 144, 146, 147, 148, 151, 153, 154, 162, 163, 165, 169, 174, 175, 176, 177, 178, 180, 182, 189, 191, 196, 199, 201, 202, 204, 207, 210, 211, 213, 215, 216, 217, 219, 225, 234, 236, 237, 238, 240, 244, 247, 248, 252, 255, 258, 259, 260, 261, 262, 267, 271, 272, 275], "domain": [3, 6, 10, 11, 15, 19, 32, 33, 52, 53, 55, 57, 58, 60, 71, 73, 74, 77, 79, 85, 88, 89, 92, 99, 102, 115, 132, 186, 188, 191, 192, 194, 196, 197, 213, 214, 215, 217, 219, 271, 276], "No": [3, 6, 7, 12, 33, 52, 60, 67, 82, 92, 103, 115, 160, 185, 195, 201, 202, 211, 212, 217, 218, 219, 224, 228, 234, 235, 237, 264, 276], "mani": [3, 4, 6, 11, 12, 15, 17, 18, 19, 22, 24, 32, 33, 34, 35, 40, 43, 48, 52, 53, 54, 56, 58, 60, 64, 77, 79, 82, 83, 88, 92, 93, 110, 111, 115, 117, 125, 128, 129, 132, 149, 165, 173, 183, 186, 188, 189, 190, 192, 194, 203, 206, 207, 209, 211, 212, 215, 216, 217, 218, 219, 223, 232, 237, 264, 265, 267, 268, 269, 270, 274, 275, 276], "algorithm": [3, 6, 11, 12, 17, 22, 32, 36, 37, 39, 42, 43, 44, 46, 48, 50, 51, 52, 53, 56, 57, 58, 64, 69, 77, 79, 82, 85, 88, 89, 92, 103, 129, 152, 170, 175, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 200, 203, 204, 207, 208, 210, 211, 212, 215, 217, 218, 219, 225, 234, 237, 256, 265, 270, 271, 275], "simplif": [3, 11, 12, 17, 27, 29, 31, 32, 34, 52, 54, 57, 58, 77, 83, 88, 94, 108, 115, 129, 132, 149, 165, 175, 195, 200, 210, 215, 217, 218, 254, 255, 257, 264, 266, 268, 269], "factor": [3, 10, 11, 12, 35, 43, 44, 51, 52, 53, 56, 57, 58, 60, 77, 79, 88, 92, 95, 102, 132, 134, 142, 146, 149, 161, 165, 170, 171, 172, 186, 189, 190, 191, 193, 194, 195, 202, 208, 209, 211, 212, 217, 219, 223, 234, 247, 250, 269, 271], "matric": [3, 6, 11, 16, 17, 30, 34, 52, 53, 79, 89, 91, 102, 109, 110, 111, 115, 119, 129, 132, 134, 137, 138, 140, 148, 149, 159, 164, 175, 183, 184, 188, 194, 199, 200, 207, 209, 211, 212, 215, 217, 218, 220, 222, 232, 233, 260, 266, 268, 269], "thu": [3, 4, 10, 11, 12, 15, 22, 30, 37, 43, 44, 52, 53, 54, 58, 60, 75, 77, 79, 83, 86, 88, 91, 92, 103, 114, 119, 125, 129, 170, 175, 187, 192, 194, 196, 200, 206, 209, 211, 232, 237, 238, 248, 249, 267, 270, 275, 276], "speed": [3, 6, 29, 34, 43, 52, 53, 56, 83, 92, 93, 104, 109, 110, 111, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 132, 133, 136, 139, 174, 175, 178, 183, 184, 196, 199, 200, 206, 211, 215, 231, 234, 237, 270, 271], "non": [3, 4, 11, 12, 17, 19, 25, 30, 32, 35, 42, 45, 51, 52, 53, 57, 58, 59, 60, 61, 62, 65, 66, 67, 79, 81, 82, 83, 84, 85, 88, 89, 91, 106, 110, 112, 117, 119, 123, 127, 128, 132, 149, 154, 164, 165, 167, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 202, 206, 207, 209, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 225, 230, 232, 237, 240, 250, 270, 275, 276], "who": [3, 4, 6, 15, 19, 53, 54, 132, 183, 192, 199, 268], "abl": [3, 4, 6, 11, 15, 17, 19, 33, 34, 43, 48, 52, 53, 54, 63, 71, 79, 85, 88, 92, 99, 115, 127, 129, 130, 132, 133, 186, 189, 196, 215, 218, 230, 247, 269, 274, 276], "experi": [3, 117, 218, 219], "design": [3, 4, 6, 10, 11, 13, 14, 18, 19, 21, 23, 30, 35, 42, 52, 88, 91, 94, 132, 133, 189, 193, 199, 204, 209, 215, 218, 269, 270, 274], "interfac": [3, 7, 11, 22, 32, 52, 80, 109, 125, 134, 160, 179, 181, 183, 189, 192, 197, 218, 231, 232, 261], "ipython": [3, 6, 10, 11, 12, 24, 80, 132, 179, 238, 242, 243, 273, 274], "jupyt": [3, 10, 11, 19, 238, 242], "notebook": [3, 11, 19, 24, 80, 179, 238, 273, 274], "init_sess": [3, 80, 274], "usual": [3, 10, 11, 12, 15, 17, 33, 35, 43, 51, 52, 53, 70, 77, 79, 88, 125, 151, 163, 170, 180, 182, 183, 186, 187, 189, 190, 192, 198, 199, 200, 206, 209, 215, 218, 219, 220, 224, 225, 232, 234, 238, 244, 252, 264, 267, 270, 274, 275], "flag": [3, 4, 19, 32, 34, 43, 44, 48, 50, 52, 65, 67, 79, 82, 83, 84, 88, 92, 115, 149, 185, 190, 192, 195, 196, 199, 200, 201, 207, 211, 212, 215, 217, 218, 225, 230, 231, 237, 240, 264, 275], "auto_symbol": [3, 80, 94], "auto_int_to_integ": [3, 80], "qt": 3, "consol": [3, 4, 12, 52, 80, 179, 185, 274], "express": [3, 4, 6, 7, 11, 13, 14, 17, 18, 19, 21, 27, 28, 29, 30, 31, 32, 44, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 65, 67, 68, 72, 75, 76, 77, 79, 80, 83, 86, 87, 88, 91, 92, 93, 95, 102, 103, 105, 106, 111, 112, 115, 119, 125, 127, 128, 129, 130, 132, 133, 140, 144, 148, 149, 153, 154, 157, 160, 162, 163, 164, 165, 167, 168, 170, 172, 174, 175, 178, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 199, 200, 202, 204, 205, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 238, 240, 244, 245, 247, 249, 250, 251, 252, 256, 257, 258, 262, 265, 266, 267, 268, 269, 271, 274, 275, 276], "mathjax": [3, 7, 80, 179, 274], "preview": [3, 33, 233, 262], "save": [3, 11, 32, 52, 88, 92, 185, 198, 217, 234], "viewer": [3, 7, 33, 199, 233], "parser": [3, 85, 94, 125, 132, 230], "modul": [3, 4, 5, 6, 7, 10, 11, 12, 14, 17, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 42, 44, 52, 53, 55, 57, 58, 60, 64, 68, 72, 75, 78, 79, 80, 82, 85, 86, 87, 88, 93, 94, 95, 97, 98, 100, 103, 106, 115, 116, 121, 125, 127, 128, 132, 134, 137, 139, 140, 152, 155, 168, 169, 170, 171, 180, 183, 185, 190, 191, 193, 196, 197, 199, 203, 206, 209, 213, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 246, 248, 250, 251, 252, 253, 254, 260, 262, 264, 267, 269, 275, 276], "parse_expr": [3, 10, 17, 94], "mathematca": 3, "parse_mathematica": [3, 10, 94], "maxima": [3, 22, 94, 218], "parse_maxima": [3, 94], "antlr": [3, 94, 115], "runtim": [3, 11, 34, 52, 111, 262], "autolev": [3, 117, 125], "call": [3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 21, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 41, 42, 43, 44, 50, 52, 53, 55, 56, 57, 59, 60, 62, 67, 68, 70, 75, 77, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 96, 102, 106, 115, 117, 119, 126, 129, 130, 155, 157, 160, 165, 170, 175, 180, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 197, 198, 199, 201, 206, 207, 209, 211, 212, 214, 215, 217, 218, 219, 221, 223, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 244, 246, 247, 250, 252, 265, 267, 269, 270, 271, 274, 275, 276], "antlr4": [3, 94], "awar": [3, 4, 6, 11, 12, 18, 32, 52, 56, 82, 88, 209, 219, 238], "must": [3, 4, 5, 6, 10, 11, 12, 17, 18, 26, 27, 28, 29, 34, 43, 44, 46, 48, 50, 51, 52, 53, 54, 57, 58, 60, 62, 65, 68, 71, 74, 75, 77, 79, 82, 83, 84, 85, 88, 91, 92, 95, 96, 98, 100, 102, 103, 110, 111, 115, 117, 125, 127, 128, 129, 130, 132, 145, 160, 162, 165, 174, 175, 183, 184, 185, 186, 187, 190, 192, 194, 195, 199, 200, 207, 208, 209, 211, 212, 215, 217, 218, 219, 223, 224, 230, 231, 232, 233, 234, 235, 237, 238, 241, 267, 269, 270, 274, 275], "match": [3, 4, 6, 10, 12, 17, 19, 43, 44, 51, 52, 65, 77, 79, 83, 88, 114, 141, 166, 174, 175, 188, 195, 211, 212, 215, 216, 219, 228, 230, 232, 237, 238, 249, 265], "wa": [3, 4, 10, 12, 17, 19, 41, 43, 44, 46, 52, 53, 54, 60, 65, 88, 92, 94, 106, 107, 115, 117, 119, 129, 130, 160, 170, 182, 183, 184, 186, 192, 194, 195, 196, 198, 199, 208, 209, 211, 215, 217, 219, 228, 230, 233, 235, 237, 238, 265, 267, 269, 270, 273], "compil": [3, 34, 80, 93, 106, 132, 179, 199, 211, 224, 230, 231, 232, 254, 269], "4": [3, 7, 12, 13, 15, 17, 18, 19, 21, 22, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 102, 103, 104, 108, 115, 117, 118, 119, 120, 122, 123, 124, 125, 129, 130, 132, 133, 134, 137, 141, 144, 149, 159, 160, 162, 163, 164, 165, 166, 168, 174, 175, 176, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 224, 225, 230, 231, 234, 237, 238, 244, 246, 247, 248, 250, 252, 253, 264, 265, 267, 269, 270, 271, 275, 276], "clang": [3, 94], "bind": [3, 34, 199, 231], "parse_c": 3, "lfortran": [3, 94], "fortran": [3, 11, 15, 19, 32, 93, 94, 106, 132, 184, 232, 256, 262, 274], "satisfi": [3, 7, 10, 17, 22, 29, 30, 32, 35, 40, 43, 48, 52, 53, 57, 60, 62, 75, 77, 81, 82, 88, 92, 111, 129, 149, 154, 186, 187, 192, 194, 195, 199, 205, 206, 207, 212, 215, 216, 217, 218, 219, 225, 270, 275], "implement": [3, 6, 7, 10, 11, 13, 14, 18, 19, 22, 23, 26, 27, 28, 29, 32, 33, 34, 35, 37, 42, 43, 44, 49, 52, 53, 55, 57, 58, 60, 63, 65, 72, 73, 75, 76, 78, 79, 82, 83, 84, 88, 92, 93, 94, 106, 115, 125, 134, 136, 137, 140, 149, 150, 158, 159, 161, 169, 174, 176, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 203, 206, 207, 208, 211, 212, 215, 216, 217, 218, 219, 223, 224, 234, 236, 237, 238, 241, 251, 254, 262, 265, 269, 275], "dpll": 3, "But": [3, 4, 7, 10, 11, 12, 19, 51, 52, 60, 66, 76, 83, 88, 92, 153, 154, 165, 170, 175, 186, 187, 192, 196, 206, 208, 209, 211, 212, 215, 217, 218, 224, 234, 237, 238, 246, 265, 267, 269, 270, 275], "sat": [3, 28], "solver": [3, 6, 11, 28, 60, 88, 92, 114, 125, 132, 133, 188, 191, 211, 212, 216, 230, 254, 255, 266, 268], "ask": [3, 6, 11, 12, 14, 17, 18, 28, 29, 30, 31, 52, 64, 77, 115, 170, 186, 205, 211, 218, 237, 267], "pycosat": 3, "forc": [3, 12, 15, 18, 19, 52, 56, 58, 62, 68, 77, 79, 82, 95, 96, 98, 107, 109, 110, 114, 117, 119, 120, 121, 122, 125, 127, 128, 129, 132, 153, 154, 168, 180, 183, 185, 187, 189, 208, 211, 212, 217, 230, 250, 252, 274, 275], "pysat": 3, "minisat": 3, "minisat22": 3, "heavi": [3, 219, 270], "primarili": [3, 11, 17, 34, 52, 92, 95, 164, 195, 197, 231, 234, 240, 247], "support": [3, 4, 5, 6, 7, 10, 11, 12, 19, 24, 26, 27, 28, 29, 32, 33, 34, 44, 52, 56, 59, 60, 62, 76, 79, 85, 88, 92, 93, 94, 95, 96, 98, 99, 102, 106, 115, 132, 160, 175, 182, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 199, 204, 205, 206, 207, 211, 215, 216, 217, 218, 219, 220, 224, 228, 230, 231, 232, 238, 248, 250, 265, 267, 270, 274], "give": [3, 4, 6, 12, 17, 18, 19, 27, 29, 34, 35, 41, 43, 44, 45, 46, 51, 52, 53, 54, 57, 58, 60, 62, 64, 65, 67, 68, 76, 77, 79, 80, 82, 85, 88, 91, 92, 93, 95, 102, 115, 132, 144, 159, 160, 162, 163, 167, 168, 170, 171, 173, 175, 178, 180, 182, 183, 184, 185, 186, 187, 189, 190, 192, 194, 195, 196, 199, 200, 201, 202, 206, 207, 208, 209, 211, 212, 215, 217, 218, 219, 230, 231, 232, 237, 247, 252, 267, 268, 270, 275, 276], "rudimentari": [3, 19, 192], "text": [3, 4, 6, 7, 11, 19, 24, 34, 43, 53, 57, 58, 60, 70, 77, 80, 83, 88, 92, 130, 170, 179, 185, 186, 199, 206, 212, 215, 218, 219, 230], "pyglet": [3, 199, 261], "pygletplot": [3, 185], "2d": [3, 10, 65, 66, 68, 78, 95, 96, 98, 143, 175, 185, 199, 212, 224, 269], "3d": [3, 10, 26, 36, 65, 66, 95, 143, 166, 180, 185, 247, 249, 250, 251, 252], "evalu": [3, 6, 11, 15, 17, 18, 21, 27, 28, 29, 32, 34, 52, 54, 57, 58, 60, 63, 67, 68, 72, 77, 79, 82, 85, 88, 92, 93, 94, 102, 106, 108, 115, 125, 129, 130, 140, 142, 144, 146, 151, 154, 162, 165, 184, 185, 189, 190, 192, 193, 195, 199, 200, 205, 206, 207, 209, 211, 212, 215, 217, 218, 219, 221, 231, 232, 233, 238, 250, 255, 264, 265, 266, 267, 269, 271], "numer": [3, 6, 10, 11, 12, 15, 17, 21, 22, 30, 32, 34, 51, 52, 57, 60, 64, 68, 72, 75, 88, 92, 94, 98, 99, 100, 102, 109, 110, 111, 115, 117, 125, 129, 133, 137, 144, 147, 162, 169, 174, 183, 185, 189, 190, 192, 193, 194, 195, 198, 199, 208, 209, 211, 215, 217, 218, 224, 230, 231, 237, 238, 255, 264, 267, 271, 275], "variou": [3, 6, 7, 11, 15, 19, 22, 32, 34, 36, 43, 51, 52, 57, 72, 77, 79, 82, 112, 144, 148, 149, 160, 162, 174, 186, 187, 190, 191, 192, 194, 200, 206, 209, 212, 215, 216, 218, 232, 275], "primari": [3, 4, 6, 7, 17, 19, 52, 64, 82, 183, 186, 232, 238], "vehicl": 3, "between": [3, 4, 11, 14, 18, 19, 22, 33, 34, 42, 43, 44, 46, 50, 52, 54, 57, 60, 62, 64, 65, 66, 67, 68, 69, 79, 81, 82, 85, 86, 88, 92, 93, 94, 98, 99, 100, 102, 109, 112, 114, 115, 118, 122, 124, 126, 129, 130, 132, 133, 134, 137, 138, 144, 151, 153, 154, 155, 159, 162, 163, 164, 165, 168, 169, 170, 175, 176, 177, 178, 180, 182, 183, 185, 186, 188, 191, 192, 194, 199, 201, 211, 215, 216, 217, 218, 219, 220, 233, 238, 244, 246, 247, 250, 252, 267], "standard": [3, 7, 10, 11, 12, 17, 19, 22, 34, 52, 56, 58, 60, 75, 77, 79, 80, 81, 82, 86, 88, 92, 93, 94, 105, 142, 146, 175, 180, 186, 189, 190, 192, 199, 202, 207, 211, 212, 215, 218, 219, 232, 238, 241, 247, 252, 264, 267, 275], "wai": [3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22, 25, 33, 35, 36, 41, 43, 44, 45, 48, 52, 54, 57, 60, 68, 72, 76, 77, 79, 81, 85, 88, 91, 92, 94, 95, 98, 106, 110, 112, 114, 115, 119, 121, 122, 125, 129, 145, 159, 162, 163, 168, 170, 173, 174, 175, 177, 178, 180, 182, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 206, 209, 211, 212, 215, 216, 218, 220, 221, 224, 225, 228, 232, 234, 237, 238, 241, 244, 247, 248, 249, 250, 252, 264, 265, 267, 268, 269, 270, 275, 276], "principl": [3, 53, 83, 92, 136, 186, 187, 192, 208, 217], "pass": [3, 4, 5, 6, 11, 12, 14, 17, 18, 19, 25, 26, 29, 32, 33, 34, 43, 44, 52, 53, 54, 56, 58, 59, 60, 62, 65, 66, 68, 79, 80, 82, 83, 85, 88, 89, 92, 94, 95, 100, 102, 107, 114, 115, 119, 132, 133, 137, 154, 155, 159, 160, 162, 163, 175, 179, 185, 186, 188, 189, 190, 192, 194, 195, 197, 199, 200, 206, 207, 211, 212, 215, 216, 217, 218, 219, 220, 223, 224, 225, 228, 230, 231, 232, 233, 235, 237, 238, 240, 243, 244, 264, 265, 270, 274, 275, 276], "appropri": [3, 6, 7, 12, 15, 22, 43, 52, 58, 67, 88, 106, 117, 154, 155, 165, 175, 182, 188, 189, 195, 196, 199, 205, 206, 211, 212, 217, 219, 224, 232, 248, 274], "namespac": [3, 6, 10, 25, 34, 35, 52, 190, 212, 215, 216, 230, 232, 233, 238], "dictionari": [3, 10, 11, 22, 33, 34, 41, 43, 44, 50, 52, 57, 66, 68, 81, 83, 88, 91, 92, 94, 95, 108, 110, 111, 114, 115, 117, 119, 122, 127, 129, 155, 165, 175, 183, 185, 187, 190, 192, 194, 195, 197, 199, 206, 211, 212, 215, 216, 217, 218, 219, 223, 225, 230, 234, 237, 238, 244, 264, 271], "third": [3, 4, 34, 43, 44, 52, 60, 62, 66, 102, 162, 168, 182, 187, 195, 209, 215, 218, 219, 235, 237, 251, 265, 270], "argument": [3, 4, 5, 6, 11, 14, 17, 18, 19, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 68, 69, 77, 79, 80, 82, 83, 85, 88, 91, 92, 94, 95, 100, 102, 110, 114, 115, 127, 128, 132, 139, 142, 146, 148, 151, 154, 159, 160, 162, 163, 164, 165, 173, 179, 180, 184, 185, 186, 187, 189, 190, 192, 194, 195, 198, 199, 200, 201, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 223, 224, 230, 231, 232, 233, 234, 235, 237, 238, 240, 247, 248, 250, 264, 265, 270, 271, 275], "default": [3, 4, 6, 7, 11, 12, 17, 19, 22, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 42, 43, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 74, 79, 80, 82, 83, 85, 88, 89, 92, 93, 94, 95, 96, 100, 102, 104, 106, 107, 108, 109, 110, 111, 115, 129, 138, 155, 157, 160, 162, 163, 165, 171, 174, 175, 177, 178, 179, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 206, 207, 208, 211, 212, 215, 216, 217, 218, 219, 224, 225, 230, 231, 232, 234, 235, 237, 238, 240, 244, 264, 265, 269, 271, 274, 275], "translat": [3, 10, 34, 43, 52, 61, 63, 67, 69, 93, 94, 102, 105, 109, 110, 122, 124, 130, 182, 185, 199, 215, 217, 231, 232, 238, 240, 248], "numpi": [3, 6, 10, 11, 19, 24, 34, 52, 75, 80, 87, 93, 100, 115, 132, 149, 159, 188, 199, 219, 224, 231, 232, 238, 264, 267], "By": [3, 12, 17, 19, 22, 27, 29, 34, 42, 51, 52, 54, 56, 57, 60, 66, 67, 71, 75, 77, 82, 83, 88, 91, 92, 93, 94, 95, 96, 100, 107, 160, 165, 185, 187, 189, 190, 192, 194, 195, 196, 198, 199, 201, 206, 208, 211, 212, 215, 217, 218, 219, 223, 225, 226, 230, 233, 237, 238, 250, 264, 269, 270, 275], "produc": [3, 6, 7, 11, 18, 19, 22, 33, 43, 52, 53, 65, 79, 82, 88, 175, 189, 194, 195, 199, 206, 215, 216, 217, 219, 228, 230, 234, 235, 237, 274], "behavior": [3, 4, 10, 11, 12, 19, 43, 52, 60, 79, 94, 105, 106, 125, 129, 160, 186, 187, 194, 195, 199, 200, 204, 206, 208, 211, 228, 231, 233, 237, 238, 267], "backward": [3, 8, 15, 32, 52, 83, 88, 199, 237, 275], "scipi": [3, 11, 34, 52, 60, 106, 132, 159, 199, 219, 231, 238, 264, 273], "special": [3, 6, 11, 13, 17, 19, 25, 26, 44, 52, 53, 55, 56, 57, 59, 67, 70, 77, 79, 83, 88, 132, 149, 154, 180, 186, 189, 191, 192, 193, 194, 199, 208, 209, 211, 215, 216, 217, 219, 230, 231, 232, 235, 237, 238, 247, 250, 252, 256, 257, 265, 266, 270], "cupi": [3, 93], "cuda": [3, 93], "gpu": [3, 93, 132], "jax": [3, 93, 238], "xla": [3, 93], "program": [3, 7, 12, 17, 34, 36, 44, 132, 170, 184, 232, 234, 267, 269, 273, 275], "tpu": [3, 93], "compatibli": 3, "tensorflow": [3, 238], "learn": [3, 5, 7, 21, 88, 130, 183, 208, 218, 264, 267, 268, 269, 273], "numexpr": [3, 238], "fast": [3, 17, 34, 52, 79, 87, 88, 92, 137, 190, 191, 192, 193, 194, 195, 196, 202, 206, 215, 217, 234, 237, 238], "alreadi": [3, 4, 10, 12, 17, 19, 22, 24, 43, 44, 52, 53, 61, 62, 65, 66, 68, 77, 79, 83, 89, 92, 98, 103, 107, 115, 129, 134, 160, 162, 165, 180, 182, 183, 185, 188, 189, 192, 194, 198, 202, 208, 209, 211, 215, 218, 219, 225, 248, 250, 265, 267, 268, 269, 273, 274, 275, 276], "number": [3, 4, 5, 6, 7, 10, 11, 14, 17, 19, 22, 26, 28, 29, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 57, 58, 60, 62, 65, 66, 67, 68, 69, 71, 78, 79, 80, 81, 82, 83, 85, 88, 89, 91, 92, 93, 94, 96, 100, 102, 103, 104, 106, 110, 111, 114, 115, 119, 129, 130, 132, 138, 141, 144, 145, 148, 149, 150, 151, 153, 154, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 173, 174, 175, 178, 179, 180, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 195, 196, 199, 201, 205, 206, 207, 208, 209, 211, 212, 215, 217, 218, 219, 220, 224, 225, 230, 232, 234, 237, 240, 244, 246, 247, 249, 250, 252, 255, 264, 265, 267, 269, 270, 271, 275], "languag": [3, 7, 11, 12, 15, 19, 34, 58, 88, 94, 106, 115, 132, 199, 204, 219, 231, 232, 267, 269, 271, 273, 275], "valid": [3, 6, 7, 10, 17, 18, 19, 27, 29, 31, 32, 33, 34, 45, 51, 52, 57, 58, 68, 78, 88, 92, 108, 109, 110, 115, 117, 130, 134, 138, 157, 162, 172, 175, 179, 183, 189, 192, 195, 198, 199, 207, 211, 212, 215, 217, 218, 219, 238, 271, 275], "rather": [3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 22, 25, 30, 34, 35, 43, 44, 45, 52, 56, 63, 68, 70, 77, 82, 83, 85, 88, 92, 94, 114, 122, 132, 145, 159, 163, 165, 174, 182, 186, 189, 192, 195, 197, 202, 209, 212, 214, 215, 218, 219, 234, 237, 238, 241, 252, 267, 269, 270], "string": [3, 4, 6, 7, 11, 12, 19, 27, 33, 34, 36, 41, 52, 53, 54, 55, 56, 59, 65, 75, 80, 81, 82, 85, 88, 92, 94, 95, 98, 100, 106, 107, 109, 112, 136, 145, 149, 159, 163, 167, 173, 174, 175, 178, 179, 180, 185, 188, 190, 194, 199, 200, 206, 211, 215, 219, 220, 223, 224, 225, 230, 231, 232, 237, 238, 240, 242, 244, 245, 247, 266, 267, 270, 274], "repres": [3, 10, 11, 12, 14, 17, 18, 19, 26, 28, 30, 33, 34, 35, 36, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 57, 58, 60, 62, 63, 65, 67, 68, 69, 74, 75, 78, 79, 81, 82, 83, 85, 88, 92, 94, 95, 96, 99, 100, 102, 107, 109, 110, 112, 114, 115, 117, 118, 119, 120, 123, 125, 127, 128, 129, 130, 132, 134, 136, 137, 139, 151, 152, 154, 158, 159, 162, 163, 165, 167, 170, 171, 172, 173, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 197, 199, 201, 202, 205, 206, 207, 209, 211, 212, 215, 217, 218, 219, 221, 223, 224, 225, 232, 234, 237, 238, 244, 246, 250, 252, 265, 267, 269, 270, 275, 276], "take": [3, 4, 5, 7, 10, 11, 12, 15, 17, 18, 19, 22, 29, 32, 34, 35, 37, 42, 43, 47, 51, 52, 53, 54, 58, 60, 64, 65, 75, 79, 81, 82, 83, 88, 92, 93, 94, 95, 98, 102, 106, 110, 112, 114, 115, 117, 129, 130, 132, 134, 148, 151, 154, 155, 159, 161, 162, 163, 164, 165, 167, 170, 173, 174, 175, 176, 177, 179, 182, 183, 185, 186, 187, 188, 189, 190, 192, 195, 196, 199, 202, 205, 206, 207, 208, 209, 211, 212, 215, 217, 218, 219, 221, 224, 230, 231, 233, 234, 237, 238, 244, 245, 246, 264, 265, 267, 269, 270, 271, 275], "within": [3, 7, 11, 13, 17, 32, 33, 34, 52, 58, 65, 68, 82, 83, 85, 92, 93, 95, 122, 160, 174, 175, 182, 183, 187, 189, 195, 197, 207, 215, 217, 218, 219, 230, 231, 240], "case": [3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 22, 32, 33, 34, 35, 37, 40, 43, 44, 48, 51, 52, 53, 54, 56, 57, 58, 60, 64, 67, 68, 69, 70, 74, 77, 79, 82, 83, 85, 88, 89, 92, 93, 94, 96, 102, 106, 109, 110, 115, 117, 118, 119, 120, 126, 128, 130, 132, 138, 149, 155, 160, 162, 164, 165, 170, 171, 178, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 204, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 223, 225, 228, 230, 232, 233, 235, 237, 238, 239, 240, 241, 244, 246, 247, 265, 269, 270, 271, 274, 275, 276], "subpackag": [3, 254], "f2py": [3, 34, 93, 231, 232], "ufuncifi": [3, 34, 231, 255], "cython": [3, 34, 93, 132, 231], "codegen": [3, 19, 93, 199, 231, 236, 256, 262], "relat": [3, 4, 6, 7, 11, 18, 27, 29, 30, 32, 35, 36, 42, 43, 50, 54, 57, 58, 59, 68, 74, 77, 79, 83, 88, 92, 98, 105, 119, 122, 125, 126, 132, 134, 139, 147, 149, 175, 178, 181, 182, 184, 185, 186, 192, 194, 195, 196, 198, 199, 203, 205, 206, 209, 211, 212, 214, 215, 217, 218, 219, 237, 251, 255, 257, 275], "reli": [3, 10, 12, 34, 88, 93, 99, 192, 198, 199, 206, 211, 218, 233, 238, 271], "llvm": 3, "gcc": [3, 232], "ifort": 3, "therefor": [3, 4, 6, 19, 22, 35, 43, 48, 52, 56, 60, 68, 81, 92, 102, 180, 183, 184, 185, 189, 192, 195, 199, 215, 218, 219, 220, 225, 244, 245, 247, 248, 250, 252], "aesara": [3, 10, 34, 132, 255, 262], "aesaracod": [3, 10, 34, 93, 199], "aeseara": 3, "previous": [3, 4, 10, 51, 123, 180, 198, 211, 219, 250], "theano": [3, 10, 132, 274], "return": [3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 22, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 77, 79, 81, 82, 83, 84, 85, 88, 89, 91, 92, 94, 95, 98, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 117, 119, 123, 127, 129, 130, 132, 134, 136, 137, 138, 139, 141, 142, 146, 149, 150, 151, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 220, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 244, 246, 248, 250, 264, 265, 270, 271, 274, 275, 276], "graph": [3, 6, 11, 44, 60, 81, 88, 93, 188, 199, 218, 237, 270, 274], "object": [3, 4, 6, 7, 11, 12, 13, 16, 17, 18, 19, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 51, 52, 54, 57, 58, 60, 62, 63, 64, 65, 67, 68, 69, 77, 79, 82, 83, 85, 86, 88, 93, 94, 95, 96, 100, 102, 103, 106, 107, 109, 110, 111, 112, 114, 115, 119, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 148, 149, 151, 159, 160, 164, 165, 167, 168, 171, 172, 174, 175, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 199, 201, 202, 205, 206, 207, 208, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 230, 231, 232, 233, 234, 237, 238, 241, 242, 246, 247, 248, 253, 254, 264, 265, 267, 269, 270, 271, 274, 275], "llvmlite": 3, "llvmjitcod": 3, "jit": [3, 208], "around": [3, 4, 6, 7, 10, 11, 12, 18, 19, 24, 32, 41, 44, 52, 53, 54, 56, 58, 61, 68, 72, 91, 92, 107, 125, 129, 133, 183, 189, 192, 194, 199, 201, 206, 210, 212, 215, 218, 219, 230, 244, 245, 265, 267, 269], "llvm_callabl": 3, "callabl": [3, 12, 34, 43, 88, 94, 150, 194, 199, 200, 211, 228, 231, 232, 237, 238, 239], "unlik": [3, 6, 11, 12, 17, 18, 31, 53, 79, 88, 92, 94, 115, 182, 192, 199, 212, 215, 218, 234, 235, 267, 269, 270, 271, 274], "two": [3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 22, 26, 32, 33, 34, 35, 37, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 77, 79, 81, 82, 83, 85, 88, 92, 93, 95, 96, 98, 99, 102, 103, 106, 107, 109, 110, 118, 123, 125, 126, 127, 129, 130, 137, 138, 139, 144, 145, 149, 151, 154, 155, 160, 161, 162, 163, 164, 165, 167, 170, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 221, 224, 234, 237, 238, 244, 246, 248, 249, 250, 252, 264, 265, 268, 270, 271, 275], "tensorflow_cod": 3, "order": [3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 22, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 65, 68, 69, 71, 74, 77, 79, 80, 81, 82, 83, 88, 89, 92, 93, 94, 95, 96, 102, 103, 106, 110, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 138, 142, 146, 149, 159, 160, 161, 162, 163, 164, 165, 170, 174, 175, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 205, 207, 210, 211, 212, 216, 217, 218, 219, 220, 221, 224, 225, 226, 230, 231, 232, 234, 237, 238, 240, 244, 245, 247, 248, 253, 265, 267, 268, 270, 274, 275, 276], "assum": [3, 6, 11, 12, 14, 17, 19, 22, 29, 34, 35, 36, 41, 43, 51, 52, 53, 54, 58, 60, 62, 69, 70, 77, 79, 88, 92, 95, 102, 114, 115, 121, 127, 128, 129, 130, 132, 138, 160, 164, 165, 175, 178, 180, 186, 187, 189, 192, 195, 197, 199, 206, 207, 209, 211, 212, 215, 216, 218, 219, 223, 224, 225, 232, 237, 240, 246, 248, 252, 268, 270, 273, 275, 276], "wurlitz": 3, "allow": [3, 4, 7, 10, 11, 12, 17, 19, 30, 33, 34, 35, 36, 43, 45, 48, 51, 52, 53, 56, 60, 62, 63, 64, 77, 80, 82, 83, 85, 86, 88, 92, 93, 94, 96, 110, 115, 117, 125, 129, 130, 132, 137, 149, 165, 169, 170, 171, 183, 185, 186, 189, 190, 192, 194, 195, 196, 199, 204, 206, 207, 208, 211, 212, 215, 217, 218, 219, 220, 224, 230, 233, 235, 237, 238, 248, 267, 270], "captur": [3, 52, 237], "output": [3, 6, 7, 10, 12, 15, 17, 19, 22, 33, 34, 52, 53, 60, 76, 79, 80, 82, 83, 85, 88, 92, 93, 94, 99, 102, 110, 114, 115, 123, 129, 132, 133, 137, 138, 149, 161, 165, 174, 175, 178, 179, 180, 183, 189, 192, 195, 199, 200, 209, 211, 212, 213, 214, 215, 217, 219, 224, 230, 231, 232, 234, 237, 238, 244, 267, 269, 270, 271, 274, 275, 276], "suit": [3, 4, 7, 17, 19, 22, 33, 185, 195, 228, 230], "stat": [3, 254, 261], "sampl": [3, 8, 15, 43, 55, 100, 149, 185, 199, 219, 265, 269], "At": [3, 10, 17, 19, 22, 32, 48, 58, 60, 79, 92, 95, 96, 106, 170, 174, 183, 194, 209, 238], "least": [3, 4, 7, 10, 17, 30, 32, 34, 43, 52, 58, 64, 76, 77, 79, 88, 92, 93, 110, 145, 159, 167, 186, 187, 189, 190, 192, 194, 195, 206, 208, 211, 215, 217, 218, 219, 232, 275], "random": [3, 6, 10, 36, 41, 43, 44, 50, 53, 62, 65, 66, 87, 88, 92, 149, 161, 185, 192, 199, 229, 230, 233, 237, 255, 261, 267, 271, 275], "pymc": [3, 219], "manipul": [3, 11, 14, 15, 17, 33, 34, 35, 43, 52, 60, 77, 87, 92, 93, 115, 125, 130, 163, 182, 188, 189, 190, 193, 198, 199, 201, 208, 211, 213, 222, 237, 254, 257, 261, 264, 265, 266, 267, 268, 269, 271, 274, 275], "use_symengin": 3, "physic": [3, 6, 15, 34, 45, 88, 92, 95, 96, 98, 99, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 184, 193, 219, 234, 237, 250, 269, 275], "mechan": [3, 19, 52, 75, 79, 95, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 147, 151, 154, 160, 162, 163, 164, 167, 174, 175, 181, 184, 260, 261], "liealgebra": [3, 81], "thing": [3, 4, 6, 7, 10, 11, 12, 13, 17, 18, 19, 23, 30, 34, 42, 43, 44, 52, 54, 64, 80, 81, 82, 83, 88, 93, 106, 112, 115, 129, 132, 149, 165, 170, 182, 183, 196, 198, 206, 207, 208, 211, 215, 218, 223, 233, 235, 237, 264, 265, 267, 269, 270, 271, 274, 275], "configur": [3, 4, 5, 10, 44, 82, 102, 109, 110, 118, 119, 122, 124, 125, 127, 129, 191, 199], "otherwis": [3, 4, 17, 18, 19, 32, 33, 34, 43, 44, 48, 51, 52, 53, 56, 58, 60, 61, 62, 65, 66, 67, 68, 77, 79, 81, 82, 84, 88, 91, 92, 94, 100, 102, 104, 107, 114, 115, 150, 155, 161, 178, 181, 182, 186, 190, 192, 194, 195, 197, 199, 201, 202, 204, 205, 207, 211, 212, 215, 216, 217, 218, 219, 220, 228, 230, 232, 237, 238, 264, 265, 274], "ordinari": [3, 17, 18, 21, 32, 34, 43, 52, 56, 58, 60, 70, 74, 75, 79, 89, 102, 125, 186, 188, 189, 198, 205, 213, 215, 220, 234, 269, 275], "x": [3, 4, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 43, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 95, 96, 98, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 137, 139, 140, 141, 142, 143, 145, 146, 149, 154, 155, 160, 162, 163, 164, 165, 166, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 230, 231, 232, 233, 235, 237, 238, 240, 244, 246, 247, 248, 249, 250, 252, 253, 264, 265, 267, 269, 270, 271, 274, 275, 276], "still": [3, 4, 6, 7, 11, 12, 17, 19, 24, 25, 33, 44, 51, 52, 53, 60, 64, 79, 83, 88, 115, 165, 183, 185, 186, 187, 192, 194, 199, 206, 208, 209, 211, 215, 217, 218, 224, 230, 237, 250, 271], "matchpi": 3, "pattern": [3, 10, 11, 12, 17, 19, 52, 77, 79, 82, 83, 94, 159, 189, 209, 211, 215, 217, 265, 270], "anywher": [3, 4, 6, 10, 17, 34, 52, 60, 66, 165, 240, 269], "els": [3, 4, 10, 11, 12, 17, 18, 19, 34, 42, 44, 48, 52, 53, 60, 62, 66, 68, 69, 77, 79, 82, 88, 92, 102, 165, 175, 185, 190, 194, 195, 199, 200, 207, 211, 215, 217, 218, 223, 225, 230, 237, 240, 244, 246, 264, 270], "mathemat": [3, 4, 7, 8, 10, 11, 14, 17, 19, 22, 23, 28, 29, 32, 34, 35, 38, 42, 44, 51, 52, 53, 54, 57, 58, 59, 60, 65, 66, 77, 79, 82, 85, 88, 92, 93, 94, 102, 103, 106, 119, 131, 170, 180, 182, 183, 186, 187, 189, 190, 193, 198, 199, 207, 208, 212, 215, 218, 219, 224, 231, 232, 238, 244, 247, 250, 252, 264, 267, 268, 269, 270, 273, 275], "softwar": [3, 7, 79, 193, 269], "itself": [3, 4, 6, 7, 10, 11, 19, 30, 41, 43, 44, 50, 52, 54, 57, 65, 69, 74, 92, 110, 114, 115, 130, 155, 162, 180, 182, 185, 186, 189, 192, 194, 195, 199, 207, 208, 211, 218, 223, 224, 225, 232, 234, 237, 252, 269], "_sage_": 3, "basic": [3, 4, 5, 6, 7, 10, 11, 17, 19, 26, 28, 33, 34, 35, 40, 43, 47, 50, 51, 55, 58, 68, 70, 75, 76, 77, 82, 83, 86, 87, 89, 102, 109, 115, 127, 128, 130, 132, 133, 139, 149, 163, 170, 173, 180, 181, 183, 185, 186, 188, 190, 191, 192, 194, 196, 197, 199, 200, 206, 211, 212, 215, 216, 217, 218, 219, 230, 232, 237, 238, 242, 249, 250, 251, 257, 265, 266, 267, 268, 273], "beyond": [3, 17, 46, 68, 92, 129, 186, 189, 208, 211, 271], "control": [3, 5, 10, 12, 17, 19, 33, 35, 52, 53, 56, 77, 82, 83, 129, 132, 145, 149, 160, 161, 165, 169, 195, 196, 200, 207, 212, 218, 237, 260, 261, 264], "pytest": [3, 4, 10, 227, 233, 235, 238, 262], "entir": [3, 4, 17, 43, 52, 53, 56, 60, 66, 68, 77, 91, 108, 126, 130, 175, 186, 188, 194, 207, 224, 233, 235, 269, 275], "import_modul": 3, "own": [3, 5, 6, 12, 19, 28, 36, 43, 44, 52, 68, 96, 115, 132, 194, 199, 206, 211, 215, 234, 237, 238, 269], "runner": [3, 230], "access": [3, 6, 7, 11, 12, 17, 19, 27, 28, 29, 34, 52, 60, 81, 82, 85, 88, 93, 96, 102, 103, 109, 110, 114, 115, 133, 174, 175, 180, 183, 185, 189, 190, 192, 194, 211, 215, 219, 220, 223, 231, 232, 247, 250, 270, 274], "script": [3, 5, 6, 11, 25, 60, 179, 231], "cloudpickl": 3, "effect": [3, 6, 10, 19, 24, 43, 45, 52, 69, 77, 79, 83, 88, 95, 115, 117, 129, 137, 165, 175, 185, 189, 192, 196, 198, 215, 267], "pickl": 3, "util": [3, 4, 5, 6, 7, 22, 32, 39, 41, 43, 44, 57, 58, 63, 64, 65, 68, 82, 83, 87, 92, 93, 135, 169, 172, 188, 191, 192, 196, 199, 211, 212, 213, 228, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 256, 260], "test_pickl": 3, "py": [3, 4, 5, 6, 12, 17, 24, 33, 52, 63, 77, 79, 88, 143, 145, 185, 188, 190, 196, 199, 206, 209, 215, 216, 225, 228, 230, 235, 238], "pdf": [3, 7, 8, 23, 32, 33, 43, 53, 55, 57, 74, 79, 88, 92, 95, 96, 100, 185, 193, 198, 199, 202, 208, 211, 212, 215, 219, 237, 244], "view": [3, 6, 8, 11, 34, 35, 52, 88, 95, 167, 170, 183, 185, 192, 199, 215, 218, 232, 234, 237], "host": [3, 7], "onlin": [3, 6, 110, 212, 237], "sympy_benchmark": 3, "readm": 3, "yourself": [3, 19, 34, 117, 233, 265], "reproduc": [3, 195, 230, 275], "add": [3, 4, 5, 6, 10, 11, 12, 14, 17, 26, 28, 32, 34, 41, 43, 48, 53, 56, 59, 67, 69, 77, 81, 85, 88, 92, 95, 98, 107, 115, 132, 143, 149, 159, 164, 165, 168, 182, 183, 185, 188, 189, 190, 192, 194, 195, 196, 199, 200, 209, 211, 212, 215, 216, 218, 219, 221, 223, 224, 225, 233, 238, 242, 255, 265, 267, 270, 274, 275], "asv": 3, "airspe": 3, "veloc": [3, 106, 107, 109, 110, 112, 117, 118, 119, 122, 123, 124, 126, 129, 130, 132, 139, 167, 170, 174, 175, 178, 180, 183, 250, 252], "describ": [4, 6, 7, 10, 12, 17, 18, 19, 33, 35, 42, 43, 44, 46, 47, 50, 51, 52, 53, 57, 60, 62, 67, 68, 77, 79, 83, 88, 91, 92, 102, 106, 109, 110, 112, 114, 115, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 144, 165, 169, 170, 174, 175, 180, 182, 183, 186, 189, 192, 194, 200, 206, 209, 211, 212, 215, 218, 219, 223, 232, 237, 238, 244, 245, 250, 265], "properli": [4, 11, 19, 33, 52, 58, 64, 77, 88, 111, 115, 127, 142, 146, 149, 163, 187, 189, 199, 215, 218, 228, 232, 238, 271, 276], "current": [4, 7, 10, 12, 17, 26, 29, 32, 33, 34, 35, 36, 43, 46, 47, 49, 50, 51, 52, 54, 58, 60, 62, 64, 67, 72, 75, 77, 79, 81, 83, 88, 92, 94, 95, 99, 106, 109, 115, 125, 159, 164, 165, 169, 173, 183, 185, 186, 187, 188, 190, 192, 195, 196, 198, 199, 200, 206, 209, 211, 212, 214, 215, 216, 217, 218, 219, 225, 230, 231, 232, 234, 247, 271, 276], "activ": [4, 5, 13, 117, 185, 228, 233, 235], "updat": [4, 10, 12, 24, 52, 119, 145, 155, 158, 159, 161, 184, 192, 195, 199, 212, 225, 235], "continu": [4, 6, 7, 10, 15, 18, 19, 32, 34, 42, 44, 46, 52, 57, 58, 60, 77, 80, 83, 92, 99, 100, 160, 163, 179, 190, 192, 195, 212, 214, 215, 223, 266], "someon": [4, 215, 234, 268], "warn": [4, 6, 12, 13, 19, 52, 53, 67, 94, 175, 183, 187, 215, 217, 228, 230, 232, 236, 237, 262, 271], "screen": [4, 11, 80, 179, 183, 230, 274], "indic": [4, 6, 12, 14, 17, 22, 32, 33, 34, 35, 36, 41, 43, 44, 45, 47, 48, 50, 51, 52, 55, 56, 57, 60, 62, 67, 68, 77, 79, 82, 83, 85, 88, 91, 92, 103, 114, 119, 149, 160, 162, 163, 165, 170, 174, 175, 184, 188, 189, 190, 194, 195, 196, 199, 206, 207, 208, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 237, 271], "remov": [4, 10, 17, 27, 28, 43, 46, 50, 52, 56, 58, 67, 68, 77, 82, 83, 88, 92, 95, 98, 107, 122, 124, 129, 149, 165, 190, 192, 195, 197, 198, 199, 211, 212, 215, 217, 218, 220, 221, 231, 232, 233, 235, 237, 238, 264, 275], "futur": [4, 12, 17, 18, 34, 35, 52, 77, 79, 83, 88, 94, 114, 117, 125, 129, 165, 169, 181, 185, 187, 198, 199, 211, 215, 224, 230, 233, 235, 238, 261, 270, 276], "chanc": [4, 12, 18, 52, 80, 209, 219, 270], "break": [4, 6, 10, 19, 33, 34, 44, 52, 53, 92, 182, 196, 199, 207, 237], "opportun": [4, 6, 211], "messag": [4, 10, 53, 80, 233, 235], "wrong": [4, 7, 10, 43, 52, 53, 60, 62, 88, 175, 189, 213, 215, 233, 267, 271], "answer": [4, 17, 19, 22, 43, 52, 56, 74, 77, 79, 82, 88, 92, 170, 192, 196, 208, 209, 211, 217, 219, 234, 240, 269, 271, 275], "made": [4, 7, 10, 11, 12, 17, 19, 46, 48, 52, 53, 58, 61, 62, 65, 68, 69, 79, 82, 88, 92, 94, 115, 129, 132, 183, 186, 190, 192, 194, 195, 200, 206, 207, 208, 211, 215, 217, 218, 219, 232, 237, 240, 252, 270], "lightli": 4, "fix": [4, 6, 9, 10, 34, 43, 45, 48, 50, 53, 60, 64, 81, 95, 96, 98, 107, 109, 112, 117, 132, 149, 154, 158, 161, 165, 170, 175, 178, 182, 183, 185, 189, 192, 194, 195, 196, 199, 205, 209, 217, 219, 237, 244, 245], "worth": [4, 17, 19, 175, 248, 250], "pain": 4, "frustrat": 4, "go": [4, 5, 6, 7, 19, 24, 33, 34, 43, 53, 58, 77, 110, 115, 117, 130, 132, 133, 159, 170, 178, 185, 194, 195, 206, 209, 215, 267, 269, 270, 273, 275], "seek": [4, 217], "stabl": [4, 6, 19, 52, 80, 88, 94, 102, 264], "done": [4, 6, 10, 11, 12, 15, 19, 28, 29, 31, 32, 33, 34, 43, 45, 50, 52, 53, 54, 57, 60, 63, 64, 77, 79, 83, 88, 92, 115, 117, 123, 130, 132, 151, 160, 161, 162, 165, 167, 168, 175, 180, 182, 183, 185, 186, 188, 192, 196, 198, 199, 200, 208, 211, 212, 215, 217, 218, 219, 224, 225, 230, 231, 234, 238, 247, 248, 264, 267, 269, 270, 271], "exist": [4, 10, 11, 15, 17, 19, 32, 33, 36, 43, 52, 56, 62, 64, 67, 68, 69, 70, 78, 79, 82, 88, 92, 98, 155, 180, 183, 185, 186, 187, 188, 192, 194, 199, 206, 207, 209, 212, 215, 217, 218, 230, 238, 248, 269, 271, 276], "necessarili": [4, 6, 17, 30, 52, 53, 54, 77, 79, 82, 186, 187, 194, 195, 197, 211, 215, 217, 218], "supplant": 4, "old": [4, 10, 11, 12, 52, 53, 54, 80, 129, 134, 169, 170, 179, 185, 186, 190, 191, 199, 200, 211, 215, 218, 220, 264], "sometim": [4, 6, 7, 11, 12, 17, 19, 33, 34, 52, 57, 60, 76, 77, 102, 125, 129, 157, 165, 183, 186, 189, 194, 199, 201, 206, 208, 212, 215, 217, 228, 237, 264, 271], "alongsid": [4, 10, 19, 85], "newer": [4, 11, 182, 217], "solveset": [4, 19, 132, 197, 213, 214, 217, 276], "superior": [4, 199], "replac": [4, 6, 10, 11, 12, 17, 32, 34, 43, 51, 52, 53, 56, 57, 58, 60, 62, 66, 79, 82, 83, 88, 92, 93, 94, 106, 108, 132, 154, 160, 175, 186, 192, 195, 196, 200, 206, 208, 209, 211, 215, 217, 218, 225, 226, 237, 238, 240, 264, 273], "older": [4, 7, 11, 75, 115, 189, 199, 217], "solv": [4, 6, 10, 11, 12, 15, 17, 19, 20, 34, 36, 48, 51, 52, 60, 65, 77, 79, 83, 84, 88, 95, 97, 98, 109, 110, 111, 115, 118, 119, 122, 124, 125, 127, 129, 132, 168, 188, 191, 192, 196, 197, 198, 201, 211, 212, 213, 214, 215, 216, 219, 260, 265, 266, 269, 271, 274], "remain": [4, 10, 11, 19, 28, 29, 34, 43, 44, 46, 48, 52, 53, 58, 77, 83, 92, 94, 103, 115, 164, 180, 182, 183, 194, 195, 196, 205, 208, 209, 215, 216, 219, 221, 225, 234, 237, 238, 247, 252, 264, 267, 269, 270, 271], "intact": [4, 10, 34, 231], "cogniz": 4, "properti": [4, 11, 14, 19, 28, 29, 32, 33, 34, 35, 36, 40, 41, 43, 44, 45, 46, 47, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 77, 79, 83, 85, 88, 92, 95, 96, 98, 99, 102, 107, 109, 110, 112, 114, 130, 132, 134, 136, 139, 140, 143, 144, 149, 150, 151, 153, 154, 161, 163, 165, 167, 170, 172, 173, 175, 176, 177, 180, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 198, 201, 202, 205, 206, 207, 209, 212, 215, 218, 219, 224, 225, 230, 232, 233, 244, 246, 247, 248, 250, 252, 271], "attr": [4, 34], "imposs": [4, 6, 10, 11, 19, 52, 189, 208, 215, 216, 228, 267, 275], "later": [4, 10, 15, 34, 43, 77, 83, 106, 111, 112, 117, 119, 120, 127, 129, 130, 132, 139, 174, 182, 189, 192, 198, 199, 200, 209, 211, 215, 234, 247, 264, 265, 267, 269, 270, 275], "unsur": [4, 6], "about": [4, 5, 6, 7, 10, 11, 12, 13, 15, 17, 18, 19, 23, 24, 26, 27, 29, 30, 33, 34, 43, 44, 45, 46, 52, 56, 58, 60, 62, 63, 64, 66, 67, 68, 72, 74, 78, 79, 81, 88, 92, 95, 96, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 119, 129, 130, 160, 162, 163, 165, 169, 174, 175, 182, 183, 184, 186, 188, 189, 194, 196, 199, 201, 206, 211, 212, 213, 215, 219, 223, 224, 230, 231, 232, 233, 234, 235, 244, 245, 247, 250, 251, 264, 266, 267, 269, 270, 271, 275], "mark": [4, 6, 7, 100, 138, 150, 212, 228, 233, 235], "explicitli": [4, 10, 11, 17, 19, 34, 43, 44, 52, 53, 55, 58, 60, 65, 69, 85, 88, 93, 102, 115, 174, 175, 185, 187, 189, 190, 192, 195, 199, 211, 215, 235, 267, 271, 274, 276], "privat": [4, 6, 52, 53, 115, 185, 232], "experiment": [4, 211, 262], "With": [4, 12, 18, 24, 34, 51, 52, 56, 77, 92, 118, 119, 120, 126, 128, 129, 138, 162, 165, 183, 185, 186, 187, 189, 190, 197, 198, 199, 206, 211, 217, 220, 237, 269, 270], "being": [4, 7, 10, 11, 12, 17, 18, 30, 32, 34, 43, 44, 50, 51, 52, 53, 58, 60, 62, 64, 65, 68, 69, 77, 82, 83, 88, 89, 92, 95, 96, 98, 106, 114, 115, 117, 129, 130, 132, 133, 161, 170, 177, 180, 182, 183, 184, 185, 186, 188, 189, 194, 195, 196, 199, 208, 209, 211, 212, 215, 216, 217, 218, 219, 225, 228, 234, 235, 237, 238, 240, 244, 248, 252, 269, 271], "decid": [4, 6, 15, 17, 18, 19, 33, 51, 83, 106, 129, 158, 169, 189, 192, 194, 195, 199, 215, 218, 232, 271], "reason": [4, 7, 10, 11, 17, 18, 19, 34, 44, 50, 52, 56, 60, 77, 80, 86, 88, 110, 111, 115, 117, 122, 125, 129, 136, 170, 179, 183, 189, 192, 193, 196, 199, 207, 209, 211, 215, 217, 218, 228, 234, 235, 237, 238, 264, 265, 269, 270, 271], "confus": [4, 7, 10, 11, 17, 52, 57, 82, 138, 183, 187, 195, 218, 264, 265, 267], "unnecessari": [4, 6, 7, 30, 34, 195, 198, 219, 230, 268], "redund": [4, 17, 43, 50, 82, 88, 215, 232], "usabl": [4, 189, 190, 199, 218, 269], "breakag": 4, "serious": 4, "taken": [4, 11, 34, 35, 40, 43, 50, 51, 52, 57, 58, 60, 69, 83, 92, 102, 104, 106, 107, 129, 132, 162, 168, 175, 178, 184, 185, 189, 194, 195, 202, 206, 208, 209, 218, 219, 224, 232, 237, 244], "commun": [4, 7, 24, 184, 215, 217, 219, 271], "inde": [4, 15, 19, 40, 43, 51, 77, 186, 209, 215, 226, 230, 269], "second": [4, 7, 10, 11, 12, 15, 17, 18, 19, 22, 25, 29, 32, 34, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 65, 66, 68, 79, 88, 92, 93, 95, 96, 100, 102, 103, 106, 107, 109, 110, 115, 119, 122, 124, 125, 126, 128, 130, 136, 138, 139, 142, 146, 151, 154, 159, 160, 162, 163, 168, 170, 172, 174, 175, 176, 182, 183, 185, 188, 189, 192, 193, 194, 195, 199, 201, 209, 211, 212, 215, 217, 218, 219, 220, 221, 237, 238, 244, 246, 247, 248, 260, 264, 269, 270, 271], "know": [4, 6, 7, 10, 11, 12, 17, 18, 19, 27, 29, 33, 44, 52, 53, 56, 64, 69, 77, 79, 88, 92, 112, 115, 133, 159, 163, 167, 168, 170, 174, 175, 182, 183, 185, 195, 196, 198, 199, 209, 211, 215, 217, 218, 219, 233, 237, 238, 248, 264, 265, 267, 268, 269, 270, 273, 275], "count": [4, 7, 11, 44, 51, 52, 53, 57, 62, 82, 88, 91, 92, 160, 195, 207, 208, 211, 218, 219, 225, 234, 237], "basi": [4, 52, 54, 81, 85, 88, 107, 122, 124, 150, 159, 160, 162, 165, 167, 170, 173, 174, 175, 180, 182, 184, 186, 188, 190, 191, 195, 198, 209, 211, 217, 218, 220, 225, 246, 247, 250, 273], "exact": [4, 11, 12, 17, 19, 30, 51, 52, 53, 56, 62, 67, 74, 77, 79, 83, 88, 95, 132, 159, 189, 190, 192, 195, 206, 211, 215, 217, 230, 240, 267, 269, 274], "rule": [4, 7, 10, 15, 17, 19, 34, 43, 44, 51, 52, 60, 75, 77, 79, 82, 83, 88, 95, 109, 115, 146, 149, 170, 175, 180, 183, 184, 196, 198, 199, 200, 205, 209, 210, 211, 215, 225, 237, 238, 250, 251, 267, 270], "doesn": [4, 6, 10, 12, 19, 34, 76, 115, 119, 129, 132, 183, 187, 196, 198, 208, 211, 218, 276], "constitut": [4, 7, 11, 79, 92, 199], "yet": [4, 5, 10, 12, 17, 19, 27, 29, 32, 33, 56, 57, 79, 129, 145, 186, 189, 190, 194, 196, 198, 207, 215, 218, 265], "fulli": [4, 6, 17, 43, 52, 69, 79, 82, 94, 96, 115, 132, 165, 182, 189, 190, 196, 206, 219, 225, 241], "codifi": 4, "clean": [4, 230], "distinct": [4, 7, 11, 17, 19, 34, 43, 44, 52, 53, 57, 65, 77, 82, 88, 92, 114, 182, 189, 194, 195, 199, 207, 209, 275], "well": [4, 6, 7, 10, 11, 12, 15, 17, 19, 24, 30, 32, 33, 34, 35, 36, 44, 51, 52, 57, 58, 60, 79, 83, 86, 88, 103, 106, 115, 117, 119, 120, 129, 155, 164, 167, 168, 174, 182, 184, 185, 186, 188, 189, 190, 192, 194, 199, 206, 207, 208, 209, 211, 215, 217, 218, 230, 231, 247, 248, 252, 267, 269, 270, 275], "categor": [4, 88, 186], "issu": [4, 7, 9, 10, 11, 12, 18, 19, 22, 24, 25, 32, 51, 52, 69, 79, 82, 88, 93, 111, 125, 145, 181, 184, 193, 194, 196, 199, 207, 208, 217, 218, 230, 232, 234, 235, 237, 240, 266, 267, 270, 275], "here": [4, 6, 7, 10, 11, 15, 17, 18, 19, 22, 23, 24, 28, 29, 34, 35, 36, 41, 42, 43, 44, 50, 51, 52, 53, 54, 56, 57, 58, 60, 68, 69, 70, 74, 75, 77, 79, 82, 83, 88, 91, 92, 93, 94, 95, 98, 102, 106, 110, 115, 116, 117, 122, 123, 124, 127, 129, 130, 132, 133, 155, 160, 165, 174, 179, 180, 182, 183, 185, 186, 189, 190, 192, 194, 195, 196, 199, 200, 206, 208, 209, 211, 212, 215, 217, 218, 219, 223, 224, 231, 232, 234, 235, 237, 238, 248, 250, 252, 263, 264, 265, 267, 269, 270, 271, 273, 274, 275], "guidelin": [4, 8, 215], "exhaust": [4, 17, 209, 237, 268], "alwai": [4, 6, 7, 10, 11, 12, 17, 18, 19, 24, 26, 33, 43, 44, 51, 52, 53, 54, 56, 58, 60, 62, 64, 67, 68, 76, 77, 79, 82, 83, 88, 91, 92, 98, 102, 103, 114, 115, 117, 119, 123, 133, 165, 167, 170, 171, 180, 182, 186, 187, 189, 190, 192, 194, 195, 199, 200, 201, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 226, 230, 232, 237, 238, 244, 245, 250, 265, 267, 268, 269, 270, 275], "posit": [4, 10, 11, 12, 17, 18, 19, 22, 27, 28, 29, 31, 33, 34, 35, 36, 41, 43, 44, 45, 47, 48, 51, 52, 53, 54, 56, 57, 58, 60, 62, 64, 65, 68, 77, 79, 81, 82, 83, 84, 88, 89, 91, 92, 95, 96, 98, 102, 104, 109, 112, 115, 117, 119, 122, 124, 126, 129, 130, 132, 134, 137, 139, 143, 160, 163, 165, 176, 177, 178, 180, 182, 183, 186, 187, 188, 189, 190, 192, 194, 195, 196, 199, 204, 205, 207, 208, 209, 211, 212, 215, 217, 218, 219, 220, 225, 237, 244, 246, 247, 248, 250, 252, 253, 271, 275, 276], "convent": [4, 6, 7, 9, 19, 43, 44, 48, 51, 52, 53, 57, 58, 60, 62, 67, 77, 79, 82, 94, 95, 96, 102, 105, 117, 132, 134, 138, 159, 160, 162, 167, 168, 180, 185, 199, 215, 216, 218, 219, 225, 252, 267, 275], "defin": [4, 6, 7, 10, 11, 12, 15, 17, 18, 25, 26, 28, 29, 32, 34, 35, 36, 42, 43, 44, 47, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 75, 77, 79, 80, 83, 85, 88, 92, 96, 100, 106, 107, 109, 112, 114, 115, 117, 118, 122, 124, 125, 126, 130, 132, 133, 136, 142, 144, 146, 151, 154, 160, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 201, 202, 205, 206, 207, 209, 211, 212, 215, 217, 218, 219, 220, 224, 225, 231, 232, 233, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 252, 253, 267, 269, 275], "And": [4, 10, 12, 18, 19, 21, 28, 43, 44, 51, 52, 53, 60, 77, 82, 83, 88, 91, 109, 126, 137, 183, 185, 187, 195, 196, 199, 207, 211, 212, 218, 219, 238, 248, 275], "aren": [4, 10, 11, 19, 34, 52, 115, 198, 218], "don": [4, 10, 12, 18, 19, 29, 34, 77, 88, 93, 94, 106, 115, 174, 182, 183, 189, 199, 209, 218, 228, 233, 252, 264, 265, 269, 270, 275], "form": [4, 7, 10, 11, 15, 17, 19, 26, 29, 30, 31, 32, 34, 35, 42, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 68, 72, 74, 75, 77, 79, 81, 83, 85, 87, 88, 92, 94, 95, 96, 99, 102, 106, 107, 109, 110, 111, 114, 115, 117, 119, 122, 124, 125, 126, 127, 128, 130, 132, 133, 142, 145, 146, 147, 149, 159, 160, 163, 165, 167, 170, 173, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 207, 208, 209, 211, 212, 216, 217, 218, 219, 222, 224, 225, 230, 231, 237, 244, 246, 247, 249, 250, 252, 257, 258, 265, 269, 270, 271, 274, 275, 276], "equival": [4, 10, 11, 12, 17, 18, 19, 26, 30, 34, 35, 42, 43, 48, 52, 53, 56, 58, 60, 77, 79, 88, 92, 94, 99, 100, 102, 115, 125, 148, 159, 162, 165, 168, 175, 179, 183, 185, 186, 187, 189, 190, 194, 195, 199, 206, 207, 211, 215, 217, 218, 220, 221, 224, 225, 234, 238, 240, 241, 257], "intern": [4, 10, 11, 12, 17, 18, 32, 34, 35, 43, 52, 55, 56, 57, 60, 68, 69, 72, 78, 84, 88, 92, 96, 98, 100, 117, 129, 138, 159, 160, 170, 186, 188, 190, 191, 193, 195, 197, 199, 209, 211, 213, 216, 217, 218, 219, 223, 225, 228, 232, 234, 237, 270, 274], "Such": [4, 6, 17, 34, 52, 68, 119, 186, 187, 194, 200, 208, 209, 211, 264, 270], "prefix": [4, 34, 52, 88, 92, 169, 172, 173, 189, 192, 196, 212, 215, 231, 232, 237, 260], "underscor": [4, 6, 10, 52, 88, 215, 225, 233], "_": [4, 5, 6, 7, 10, 12, 15, 19, 28, 29, 33, 40, 41, 43, 44, 45, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 65, 66, 67, 68, 77, 79, 82, 83, 84, 85, 86, 88, 90, 92, 94, 102, 127, 130, 132, 144, 165, 170, 174, 179, 182, 184, 190, 195, 198, 199, 200, 202, 206, 207, 208, 209, 211, 212, 215, 216, 217, 220, 237, 246, 248, 274], "univers": [4, 11, 34, 184, 193, 207, 212, 217, 218], "adher": [4, 7, 77], "codebas": [4, 10, 17, 189, 228], "anyth": [4, 6, 7, 10, 12, 19, 32, 34, 52, 53, 63, 67, 88, 115, 139, 149, 196, 199, 205, 207, 211, 215, 217, 231, 237, 240, 267], "were": [4, 7, 10, 11, 12, 17, 19, 33, 44, 46, 52, 53, 58, 69, 77, 83, 88, 92, 93, 94, 106, 114, 129, 174, 180, 183, 186, 192, 193, 194, 195, 198, 199, 200, 208, 211, 217, 237, 238, 240, 267, 269, 270, 274, 275], "incorrect": [4, 7, 10, 18, 19, 43, 52, 62, 92, 100, 178, 190, 215, 218, 231, 234, 235], "bug": [4, 6, 17, 19, 22, 24, 32, 53, 78, 189, 207, 215, 218, 267], "despit": [4, 52, 275], "sai": [4, 7, 11, 12, 15, 17, 35, 42, 51, 52, 53, 81, 106, 110, 115, 125, 132, 170, 182, 183, 186, 187, 188, 192, 194, 198, 199, 206, 209, 212, 215, 217, 218, 219, 238, 264, 269, 275], "befor": [4, 6, 10, 11, 12, 17, 18, 19, 22, 24, 34, 43, 44, 46, 48, 52, 53, 54, 60, 80, 83, 88, 92, 94, 95, 96, 106, 111, 115, 117, 118, 119, 122, 123, 129, 132, 134, 165, 174, 179, 183, 187, 189, 194, 195, 199, 200, 206, 207, 211, 212, 215, 217, 218, 219, 226, 230, 233, 237, 238, 247, 268, 269, 270, 275], "recent": [4, 10, 12, 14, 17, 18, 19, 22, 27, 28, 29, 34, 35, 44, 52, 53, 56, 60, 62, 79, 82, 83, 84, 85, 86, 88, 90, 91, 94, 102, 184, 186, 189, 190, 192, 195, 198, 206, 207, 215, 217, 218, 228, 231, 233, 235, 237, 238, 240, 267, 271], "best": [4, 8, 12, 22, 23, 24, 34, 52, 60, 77, 79, 93, 164, 185, 196, 199, 208, 209, 211, 215, 218, 223, 231, 263, 267, 268, 274, 275], "determin": [4, 7, 11, 12, 15, 17, 18, 19, 22, 27, 29, 30, 31, 32, 34, 35, 36, 43, 52, 53, 54, 55, 56, 58, 62, 63, 65, 67, 68, 79, 80, 81, 85, 88, 92, 94, 95, 96, 102, 108, 111, 112, 114, 124, 130, 133, 144, 157, 159, 161, 162, 165, 168, 170, 175, 180, 185, 186, 187, 188, 192, 194, 199, 205, 206, 207, 209, 211, 212, 214, 215, 217, 218, 219, 223, 235, 237, 244, 250, 253, 267, 275], "someth": [4, 6, 7, 10, 11, 12, 17, 18, 19, 32, 34, 52, 53, 56, 62, 77, 82, 83, 88, 92, 106, 115, 116, 132, 158, 171, 174, 185, 189, 190, 198, 206, 207, 211, 215, 218, 230, 232, 238, 264, 267, 269, 270, 273], "re": [4, 12, 19, 31, 32, 34, 43, 44, 52, 53, 56, 59, 60, 77, 79, 88, 175, 177, 180, 186, 192, 199, 200, 201, 207, 208, 209, 215, 230, 246, 248, 265, 267, 270], "harm": 4, "even": [4, 6, 7, 11, 12, 14, 17, 19, 27, 28, 29, 31, 34, 35, 40, 43, 44, 51, 52, 53, 56, 57, 58, 60, 64, 68, 77, 79, 82, 83, 88, 91, 92, 103, 115, 125, 150, 161, 168, 170, 175, 184, 187, 188, 189, 190, 192, 194, 195, 196, 199, 200, 206, 207, 208, 209, 211, 212, 215, 217, 218, 226, 230, 252, 264, 265, 267, 269, 270, 275, 276], "might": [4, 6, 10, 11, 12, 17, 18, 19, 32, 52, 56, 58, 65, 74, 77, 85, 88, 92, 94, 106, 115, 116, 132, 145, 175, 182, 185, 189, 190, 195, 196, 199, 200, 207, 208, 209, 211, 212, 217, 218, 219, 231, 232, 235, 237, 240, 264, 267, 269, 270, 272, 275], "while": [4, 6, 10, 11, 12, 17, 19, 21, 22, 33, 34, 35, 43, 44, 45, 48, 51, 52, 53, 54, 56, 57, 62, 66, 68, 76, 82, 83, 88, 92, 93, 94, 95, 107, 111, 115, 119, 129, 149, 170, 175, 180, 186, 194, 197, 199, 215, 218, 230, 232, 234, 237, 252, 264, 270, 271], "peopl": [4, 6, 55, 60, 79, 88, 170, 219], "upgrad": [4, 25], "immedi": [4, 17, 43, 52, 77, 82, 165, 186, 189, 231, 238], "fire": 4, "uncondition": 4, "correct": [4, 6, 7, 10, 12, 18, 19, 34, 41, 43, 49, 51, 52, 56, 58, 76, 77, 79, 88, 92, 102, 115, 129, 182, 183, 192, 195, 206, 212, 215, 217, 218, 223, 231, 237, 267, 274], "question": [4, 6, 7, 15, 17, 51, 54, 62, 69, 77, 79, 82, 92, 106, 167, 170, 174, 186, 189, 194, 209, 218, 237, 240], "read": [4, 6, 7, 9, 10, 19, 44, 58, 77, 92, 96, 132, 182, 183, 188, 189, 190, 196, 199, 212, 225, 226, 234, 241, 268, 274, 275], "previou": [4, 6, 10, 19, 36, 41, 42, 43, 44, 47, 52, 58, 79, 83, 91, 107, 129, 167, 182, 183, 192, 205, 212, 216, 220, 237, 268, 270, 275], "unchang": [4, 10, 11, 19, 43, 44, 52, 79, 88, 102, 195, 199, 205, 208, 211, 218, 264], "dure": [4, 10, 12, 25, 34, 52, 53, 83, 88, 92, 94, 107, 110, 132, 133, 182, 194, 208, 217, 218, 235, 237], "period": [4, 6, 10, 22, 32, 52, 53, 58, 77, 92, 129, 139, 161, 168, 194, 199, 202, 205, 214, 218, 219, 237], "silenc": [4, 13, 228, 235], "filterwarn": [4, 10], "caus": [4, 7, 10, 11, 19, 24, 52, 53, 56, 58, 88, 115, 123, 129, 182, 199, 208, 215, 216, 217, 234, 235, 271], "anoth": [4, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 22, 30, 33, 34, 44, 49, 51, 52, 53, 54, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 77, 79, 85, 88, 92, 95, 96, 112, 126, 154, 170, 172, 175, 178, 182, 183, 185, 187, 189, 190, 192, 194, 195, 196, 199, 200, 206, 207, 209, 215, 217, 218, 219, 231, 232, 238, 244, 247, 248, 252, 264, 267, 269, 270, 275, 276], "over": [4, 7, 8, 10, 12, 14, 19, 23, 26, 32, 33, 34, 35, 43, 44, 47, 51, 52, 53, 54, 55, 56, 57, 66, 68, 75, 77, 81, 82, 85, 88, 89, 92, 95, 96, 104, 115, 132, 133, 144, 160, 163, 165, 169, 170, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 202, 204, 206, 211, 212, 214, 215, 217, 218, 219, 220, 223, 224, 233, 237, 238, 244, 246, 250, 253, 269, 273, 275], "defeat": [4, 215], "three": [4, 11, 12, 15, 17, 19, 26, 30, 34, 43, 44, 45, 48, 52, 53, 57, 60, 62, 66, 67, 68, 77, 81, 82, 83, 95, 96, 114, 118, 121, 122, 123, 138, 160, 162, 167, 175, 178, 182, 183, 184, 185, 186, 187, 190, 192, 195, 199, 209, 211, 212, 217, 218, 219, 230, 244, 245, 250, 253, 267, 270, 275], "natur": [4, 10, 12, 17, 26, 30, 34, 35, 43, 52, 53, 57, 58, 86, 92, 115, 167, 169, 170, 186, 189, 190, 192, 194, 196, 199, 208, 212, 218, 219, 237, 253, 270, 275], "heavili": [4, 206, 216], "consider": [4, 18, 52, 93, 106, 189, 198, 207, 212, 215, 247], "easi": [4, 11, 40, 44, 52, 60, 77, 93, 112, 119, 125, 182, 186, 189, 194, 199, 206, 209, 212, 215, 218, 223, 224, 225, 264, 265, 267, 268, 269, 270, 271, 274], "account": [4, 11, 58, 88, 202, 211, 215], "nonetheless": [4, 53, 167, 211, 215], "deprecat": 4, "won": [4, 12, 19, 34, 211, 218, 270], "until": [4, 15, 17, 22, 25, 44, 46, 52, 53, 62, 79, 88, 92, 129, 183, 192, 195, 208, 215, 267], "come": [4, 24, 43, 48, 50, 51, 52, 58, 60, 77, 79, 88, 93, 106, 115, 117, 127, 168, 183, 186, 189, 192, 194, 195, 209, 212, 215, 218, 228, 230, 235, 238, 267, 269, 270, 273, 275], "minimum": [4, 10, 22, 32, 34, 43, 44, 46, 48, 52, 53, 56, 58, 88, 106, 110, 117, 149, 174, 185, 187, 192, 218, 219, 233, 265], "longer": [4, 6, 12, 16, 52, 62, 92, 119, 129, 187, 192, 199, 208, 211, 237, 240, 267, 275], "especi": [4, 6, 19, 22, 51, 88, 106, 115, 132, 159, 174, 183, 211, 215, 217, 230, 264, 265], "hard": [4, 8, 11, 17, 44, 53, 88, 92, 115, 165, 189, 199, 206, 215, 218, 267, 269], "migrat": 4, "lengthen": 4, "impos": [4, 96], "signific": [4, 12, 17, 34, 52, 53, 56, 79, 88, 106, 130, 159, 189, 218, 238, 270], "mainten": [4, 29], "burden": [4, 199], "keep": [4, 6, 12, 14, 19, 48, 52, 53, 56, 57, 60, 77, 88, 110, 118, 126, 130, 149, 165, 185, 188, 189, 190, 195, 206, 207, 209, 211, 215, 217, 225, 252, 265, 270], "firstli": [4, 10, 17, 19, 209], "regular": [4, 10, 12, 17, 18, 35, 40, 52, 53, 56, 60, 68, 74, 75, 79, 92, 115, 159, 189, 196, 215, 225, 230, 274, 275], "schedul": 4, "Being": [4, 48, 62, 68, 189], "assur": [4, 92, 195], "suffici": [4, 6, 17, 33, 34, 43, 44, 48, 52, 88, 170, 202, 206, 215, 219, 234, 275], "regardless": [4, 6, 10, 19, 44, 52, 79, 92, 192, 207, 211, 237, 247, 252, 275], "often": [4, 6, 11, 17, 18, 19, 33, 34, 35, 42, 52, 60, 62, 64, 77, 79, 88, 92, 93, 102, 125, 129, 174, 182, 183, 186, 187, 189, 192, 195, 200, 206, 207, 212, 215, 219, 237, 264, 269, 270, 271, 275], "happen": [4, 6, 10, 11, 15, 17, 18, 19, 22, 26, 34, 44, 51, 52, 56, 64, 67, 76, 160, 164, 170, 186, 192, 194, 195, 198, 207, 211, 215, 217, 219, 238, 248, 267, 274, 275], "secondli": [4, 19, 209], "rigor": [4, 60, 183, 232], "semant": [4, 11, 17, 85], "surfac": [4, 58, 60, 66, 77, 96, 134, 138, 165, 185, 211, 244, 251], "enough": [4, 6, 22, 43, 52, 56, 79, 88, 91, 92, 102, 115, 132, 190, 192, 199, 215, 265, 267], "encod": [4, 10, 36, 44, 50, 53, 82, 191, 199, 230, 234, 237], "backport": 4, "prior": [4, 10, 24, 178, 195, 211, 271], "extrem": [4, 43, 56, 62, 68, 79, 85, 98, 129, 183, 211, 219], "accur": [4, 12, 15, 19, 32, 43, 52, 56, 57, 74, 79, 99, 185, 206, 264, 271], "model": [4, 11, 56, 82, 92, 102, 111, 117, 119, 120, 121, 137, 195, 208, 219], "final": [4, 6, 7, 10, 17, 19, 33, 44, 51, 52, 58, 60, 77, 79, 82, 88, 92, 96, 100, 109, 110, 117, 122, 124, 125, 127, 130, 145, 157, 160, 162, 163, 165, 167, 168, 170, 175, 182, 183, 186, 189, 192, 194, 201, 207, 208, 209, 211, 212, 215, 217, 218, 225, 238, 268, 269, 270], "temptat": [4, 208, 275], "fudg": 4, "earli": [4, 52, 92, 154, 212], "acceler": [4, 93, 112, 117, 122, 124, 129, 130, 132, 168, 175, 178, 180, 203, 234, 252], "myst": [4, 7], "checkbox": 4, "tag": [4, 199, 217], "nest": [4, 52, 54, 58, 60, 79, 83, 102, 187, 189, 192, 199, 209, 211, 214, 218, 219, 220, 221, 223, 226, 237, 238, 270], "ensur": [4, 12, 19, 24, 52, 53, 56, 84, 88, 130, 194, 195, 199, 213, 230, 235, 238], "realli": [4, 10, 11, 15, 17, 18, 19, 52, 64, 92, 117, 167, 189, 198, 200, 206, 208, 209, 211, 215, 231, 240, 267, 269], "per": [4, 53, 88, 93, 139, 175, 180, 185, 190, 195, 196, 244, 247, 249, 252], "everywher": [4, 11, 12, 52, 60, 77, 102, 180, 252], "doctest": [4, 6, 7, 12, 19, 45, 60, 88, 92, 117, 154, 165, 189, 195, 215, 230, 233, 235, 274], "sympy_deprecation_warn": [4, 228, 233, 235], "write": [4, 8, 10, 11, 15, 17, 18, 20, 25, 34, 41, 52, 53, 59, 60, 77, 79, 85, 132, 145, 182, 183, 187, 192, 194, 199, 208, 209, 212, 215, 218, 224, 230, 231, 232, 238, 268, 269, 270, 275], "multilin": [4, 199], "deprecated_since_vers": [4, 228, 233, 235], "active_deprecations_target": [4, 228, 233, 235], "target": [4, 6, 11, 32, 33, 34, 52, 92, 108, 145, 149, 150, 208, 211, 214, 217, 218, 228, 231, 232, 235, 275], "stacklevel": [4, 228, 233, 235], "line": [4, 6, 10, 11, 12, 15, 17, 24, 33, 34, 43, 44, 48, 53, 62, 63, 64, 66, 67, 68, 69, 74, 77, 79, 80, 81, 88, 92, 95, 100, 103, 115, 117, 123, 145, 175, 179, 180, 182, 184, 185, 199, 202, 209, 211, 215, 219, 220, 228, 230, 231, 232, 235, 238, 240, 250, 253, 267], "visual": [4, 52, 92, 96, 102, 125, 198, 211], "confirm": [4, 10, 43, 92, 215], "look": [4, 6, 7, 10, 12, 17, 18, 19, 25, 33, 34, 43, 52, 57, 58, 60, 73, 88, 92, 110, 115, 117, 125, 149, 159, 160, 163, 178, 185, 189, 190, 194, 199, 201, 202, 206, 209, 211, 212, 215, 216, 230, 234, 238, 240, 248, 265, 270, 273, 274], "good": [4, 7, 11, 17, 19, 22, 34, 52, 53, 56, 64, 77, 88, 92, 117, 129, 132, 186, 189, 190, 199, 206, 208, 209, 211, 215, 237, 264, 268, 271], "top": [4, 6, 7, 10, 11, 34, 51, 52, 53, 68, 69, 79, 82, 88, 95, 96, 114, 160, 167, 189, 199, 209, 215, 232, 233, 238, 253, 270], "relev": [4, 6, 7, 17, 34, 50, 65, 80, 81, 107, 110, 112, 117, 170, 179, 183, 189, 209, 215, 216, 225, 230, 251], "docstr": [4, 8, 10, 12, 19, 33, 34, 45, 52, 74, 77, 79, 88, 92, 97, 101, 103, 125, 130, 135, 152, 158, 159, 161, 181, 195, 202, 205, 206, 208, 211, 215, 216, 217, 218, 224, 225, 230, 233, 238, 240, 251, 254], "src": [4, 6, 7, 94, 215, 230, 235], "explan": [4, 7, 12, 17, 20, 26, 27, 28, 29, 30, 31, 33, 34, 37, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 58, 60, 64, 74, 75, 77, 79, 83, 88, 92, 102, 105, 107, 108, 109, 110, 112, 123, 134, 136, 139, 142, 144, 146, 148, 160, 165, 184, 185, 186, 188, 190, 194, 195, 197, 201, 202, 204, 205, 206, 207, 209, 211, 212, 215, 217, 219, 220, 224, 225, 230, 233, 235, 238, 272], "cross": [4, 7, 8, 11, 52, 62, 68, 83, 88, 95, 96, 109, 123, 130, 132, 145, 175, 181, 182, 183, 212, 244, 247, 249, 250], "xyz": [4, 64, 94, 95, 175, 183, 244, 245, 248], "header": [4, 34, 231, 232], "why": [4, 10, 12, 17, 34, 52, 183, 190, 196, 206, 209, 213, 238, 268, 270, 271], "test": [4, 6, 7, 8, 11, 12, 16, 18, 19, 29, 30, 32, 33, 34, 39, 43, 44, 51, 52, 53, 59, 62, 67, 77, 83, 85, 88, 92, 145, 154, 158, 159, 160, 168, 183, 189, 190, 191, 192, 194, 196, 207, 209, 212, 215, 216, 217, 218, 228, 231, 232, 233, 234, 235, 237, 238, 240, 254, 257, 262, 267, 269, 270], "warns_deprecated_sympi": [4, 228, 233, 235], "pr": [4, 10, 51, 190, 192, 193, 195, 218], "merg": [4, 34, 43, 44, 52, 173, 199, 207, 219, 230, 237, 238], "wiki": [4, 5, 6, 7, 8, 12, 17, 19, 23, 26, 28, 29, 30, 32, 33, 34, 40, 41, 43, 44, 51, 52, 53, 54, 55, 57, 58, 60, 62, 64, 68, 69, 70, 79, 80, 81, 82, 83, 85, 88, 92, 100, 102, 105, 134, 136, 137, 138, 140, 141, 142, 146, 147, 148, 151, 153, 154, 163, 165, 169, 175, 177, 181, 185, 195, 202, 206, 207, 208, 212, 215, 218, 219, 232, 237, 244, 245, 249, 251, 253, 271, 272], "decor": [4, 19, 43, 52, 60, 228, 230, 235, 236, 239, 240, 262], "sympydeprecationwarn": [4, 10, 228, 230, 233, 235], "class": [4, 7, 8, 10, 11, 12, 16, 17, 18, 19, 22, 23, 26, 27, 28, 29, 30, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 79, 80, 81, 82, 85, 87, 94, 95, 98, 99, 100, 102, 107, 109, 110, 111, 112, 114, 115, 119, 120, 125, 126, 130, 132, 133, 134, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 174, 178, 179, 181, 186, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 205, 206, 207, 209, 213, 215, 216, 217, 218, 219, 222, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 242, 247, 248, 250, 251, 253, 254, 255, 256, 259, 261, 262, 265, 267, 270, 275], "context": [4, 6, 7, 10, 17, 19, 27, 28, 29, 52, 54, 60, 79, 82, 115, 170, 189, 192, 194, 207, 228, 230, 235, 244], "manag": [4, 10, 24, 28, 29, 94, 145, 192, 211, 225, 228, 230, 235], "filter": [4, 10, 14, 22, 52, 53, 77, 137, 195, 228, 230, 235, 237], "emit": [4, 199, 228, 235], "assert": [4, 33, 41, 42, 43, 44, 52, 62, 64, 94, 129, 207, 215, 216, 228, 235, 237], "separ": [4, 6, 10, 11, 12, 15, 18, 19, 33, 40, 52, 53, 58, 60, 77, 79, 88, 103, 114, 129, 130, 133, 138, 162, 165, 174, 175, 185, 187, 190, 192, 195, 196, 199, 208, 211, 212, 216, 218, 223, 228, 230, 234, 238, 240, 244, 267], "block": [4, 6, 10, 34, 41, 43, 53, 83, 87, 88, 114, 115, 117, 120, 175, 183, 188, 212, 238, 247], "behavior1": 4, "behavior2": 4, "everyth": [4, 7, 12, 19, 34, 52, 54, 60, 79, 86, 104, 129, 161, 162, 185, 199, 270, 274], "ignore_warn": [4, 228, 233, 235, 238], "prevent": [4, 12, 34, 52, 89, 92, 106, 188, 190, 195, 199, 211, 219, 228, 235, 266], "trigger": [4, 19, 44, 94, 165, 228], "twice": [4, 12, 34, 52, 54, 66, 92, 175, 177, 182, 199, 234, 235, 244, 245, 265], "similar": [4, 5, 10, 12, 15, 17, 19, 44, 51, 52, 53, 56, 57, 58, 60, 63, 68, 69, 73, 82, 88, 93, 102, 115, 117, 119, 129, 130, 163, 180, 182, 183, 187, 189, 190, 192, 196, 206, 208, 209, 211, 215, 217, 220, 225, 228, 231, 234, 235, 244, 245, 247, 248, 252, 264, 269, 270, 271, 273, 275], "somewher": [4, 6, 7, 11, 34], "sign": [4, 6, 7, 11, 13, 26, 31, 34, 48, 52, 53, 57, 59, 62, 68, 77, 79, 88, 92, 95, 96, 102, 117, 138, 150, 175, 180, 182, 184, 192, 199, 204, 206, 211, 212, 217, 237, 250, 253, 268], "readi": [4, 17, 114, 189, 199, 215], "paragraph": [4, 6, 7, 19, 33], "metadata": [4, 33, 233, 235], "link": [4, 6, 7, 11, 12, 21, 34, 53, 62, 68, 79, 103, 109, 118, 125, 126, 231, 234, 235, 273], "rememb": [4, 6, 12, 19, 82, 88, 103, 106, 132, 182, 183, 199, 211, 217, 220, 238, 270, 275], "shown": [4, 6, 10, 11, 17, 18, 19, 41, 44, 51, 52, 56, 60, 77, 94, 96, 100, 102, 106, 110, 112, 118, 119, 120, 126, 127, 128, 130, 174, 175, 182, 183, 185, 188, 189, 190, 195, 199, 215, 219, 235, 237, 247, 248, 268], "plain": [4, 6, 17, 80, 179, 195, 199], "rst": [4, 6, 7, 11, 35, 215, 230], "markdown": [4, 8, 11], "markup": [4, 199], "clearli": [4, 6, 19, 92, 183, 189, 209, 271], "delin": 4, "newlin": [4, 88, 240], "charact": [4, 6, 7, 52, 53, 77, 80, 94, 145, 175, 179, 199, 215, 230, 232, 235, 240, 267, 269, 274], "full": [4, 6, 7, 8, 9, 10, 12, 17, 19, 23, 29, 32, 34, 43, 44, 52, 56, 60, 64, 65, 79, 85, 88, 94, 127, 128, 175, 189, 192, 193, 195, 199, 201, 211, 212, 269, 272, 275], "abc": [4, 6, 12, 14, 19, 22, 26, 27, 28, 29, 30, 31, 32, 34, 41, 43, 45, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 75, 76, 77, 79, 80, 82, 83, 85, 88, 91, 93, 100, 102, 104, 136, 138, 140, 141, 146, 163, 165, 166, 186, 188, 190, 192, 194, 195, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 231, 232, 233, 234, 235, 237, 238, 240, 244, 246, 247, 248, 253, 255, 267, 270, 274], "func": [4, 6, 11, 16, 19, 28, 32, 34, 52, 54, 57, 60, 71, 73, 79, 92, 154, 175, 192, 195, 199, 200, 211, 215, 216, 217, 228, 233, 235, 237, 238, 240, 243], "larger": [4, 7, 11, 19, 34, 43, 44, 51, 52, 53, 60, 77, 85, 88, 92, 119, 123, 190, 196, 200, 206, 211, 217, 232, 234, 267, 275], "easier": [4, 11, 18, 52, 96, 115, 117, 182, 190, 194, 196, 209, 215, 218, 232, 238, 247, 269, 275, 276], "exactli": [4, 6, 7, 10, 11, 12, 19, 30, 36, 43, 52, 55, 56, 88, 94, 109, 130, 184, 209, 211, 215, 218, 220, 234, 237, 238, 265, 267, 269, 274, 275], "direct": [4, 6, 7, 10, 11, 16, 26, 28, 29, 33, 37, 40, 43, 48, 51, 52, 54, 56, 58, 61, 65, 66, 67, 68, 82, 83, 88, 95, 96, 98, 106, 107, 109, 117, 119, 123, 132, 151, 175, 180, 182, 183, 186, 188, 189, 192, 196, 206, 209, 225, 228, 237, 244, 248, 249, 252], "syntax": [4, 6, 7, 10, 11, 12, 19, 27, 29, 44, 52, 79, 94, 115, 132, 162, 185, 189, 198, 199, 211, 217, 221, 240, 256, 265, 267, 269, 274, 276], "paramet": [4, 7, 10, 11, 12, 26, 27, 29, 32, 34, 35, 43, 44, 48, 50, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 75, 77, 79, 80, 82, 83, 85, 88, 89, 91, 92, 94, 95, 98, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 132, 134, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 153, 154, 155, 157, 159, 160, 162, 163, 164, 165, 166, 167, 175, 176, 177, 178, 179, 180, 183, 184, 185, 187, 188, 190, 192, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 228, 230, 231, 232, 234, 235, 237, 238, 244, 245, 246, 247, 248, 253, 265, 270], "short": [4, 7, 12, 25, 35, 42, 44, 48, 52, 53, 54, 55, 58, 86, 92, 106, 151, 170, 174, 183, 186, 193, 220, 230, 240, 270, 274], "renam": [4, 10, 34, 79], "rest": [4, 10, 77, 80, 82, 86, 96, 104, 115, 119, 125, 170, 186, 189, 219, 237, 267, 268, 275], "left": [4, 7, 10, 15, 17, 19, 21, 32, 34, 35, 43, 44, 48, 52, 53, 54, 57, 58, 60, 68, 69, 75, 77, 79, 80, 82, 83, 88, 91, 92, 102, 107, 114, 130, 137, 144, 149, 153, 154, 157, 162, 175, 180, 184, 185, 186, 188, 195, 196, 197, 198, 199, 201, 202, 206, 207, 208, 209, 211, 215, 216, 217, 218, 219, 230, 231, 232, 234, 237, 250, 265, 269, 271, 275], "imaginari": [4, 6, 12, 17, 19, 22, 26, 29, 31, 52, 56, 58, 60, 83, 132, 189, 190, 195, 199, 200, 207, 211, 218], "simplify_thi": [4, 6, 233], "expr": [4, 6, 11, 12, 17, 19, 22, 28, 29, 31, 32, 34, 44, 51, 54, 56, 58, 60, 62, 74, 77, 79, 82, 85, 88, 93, 94, 102, 106, 108, 115, 129, 142, 146, 148, 150, 154, 157, 160, 162, 163, 165, 172, 175, 177, 179, 185, 187, 188, 189, 190, 192, 194, 195, 196, 197, 199, 200, 201, 202, 204, 206, 208, 211, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 231, 232, 233, 235, 238, 244, 245, 246, 247, 248, 250, 255, 264, 265, 267, 269, 270, 274, 275, 276], "simplifi": [4, 6, 11, 12, 15, 17, 18, 19, 27, 29, 31, 32, 51, 52, 54, 56, 57, 58, 60, 64, 69, 74, 77, 79, 82, 83, 84, 85, 88, 95, 102, 103, 108, 111, 118, 119, 122, 123, 124, 129, 137, 144, 149, 164, 165, 172, 175, 180, 186, 194, 196, 198, 200, 205, 206, 207, 208, 209, 212, 215, 216, 217, 218, 219, 233, 235, 238, 247, 249, 255, 256, 264, 266, 267, 269, 270, 271], "def": [4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 28, 29, 33, 52, 57, 64, 82, 88, 92, 94, 123, 160, 189, 195, 199, 208, 211, 218, 233, 235, 237, 238, 241, 264, 267, 270, 271, 275], "ref": [4, 43, 58, 88, 100, 132, 204, 219, 233, 271], "is_this_zero": [4, 235], "y": [4, 6, 10, 11, 12, 14, 17, 18, 19, 21, 22, 25, 27, 28, 29, 30, 31, 32, 34, 35, 43, 44, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 77, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 95, 96, 98, 100, 102, 107, 108, 109, 112, 115, 117, 118, 119, 120, 122, 123, 124, 126, 130, 132, 133, 142, 143, 146, 149, 154, 160, 162, 163, 165, 166, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 231, 232, 235, 237, 238, 240, 244, 246, 247, 248, 249, 250, 252, 253, 264, 265, 267, 269, 270, 274, 275, 276], "0": [4, 6, 11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 107, 108, 109, 110, 112, 115, 117, 118, 119, 120, 122, 124, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 141, 144, 149, 150, 151, 154, 159, 160, 161, 162, 163, 164, 165, 166, 170, 172, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 230, 231, 233, 234, 235, 237, 238, 239, 244, 245, 246, 247, 248, 249, 250, 253, 264, 265, 267, 269, 270, 271, 274, 275, 276], "zero": [4, 11, 12, 17, 18, 19, 26, 29, 31, 34, 42, 43, 44, 48, 51, 55, 56, 57, 58, 60, 62, 66, 67, 68, 77, 79, 81, 82, 83, 85, 87, 88, 91, 92, 94, 95, 101, 102, 109, 112, 115, 117, 120, 123, 127, 128, 132, 137, 159, 163, 165, 167, 178, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 194, 195, 197, 199, 202, 206, 207, 209, 211, 212, 215, 216, 217, 218, 219, 220, 235, 237, 238, 247, 249, 250, 270, 276], "is_zero": [4, 17, 19, 67, 88, 186, 190, 195, 235, 271], "mail": [4, 10, 22, 24, 199, 268], "summar": [4, 230, 275], "idea": [4, 11, 17, 18, 19, 37, 43, 50, 52, 53, 64, 70, 77, 79, 92, 103, 115, 165, 169, 170, 186, 188, 189, 208, 211, 212, 215, 218, 232, 238, 275], "fit": [4, 11, 33, 77, 88, 91, 92, 183, 199, 215, 240, 270], "put": [4, 6, 10, 11, 12, 15, 19, 34, 48, 49, 52, 53, 54, 58, 82, 83, 88, 137, 142, 146, 161, 162, 195, 199, 200, 208, 209, 211, 215, 220, 226, 231, 271, 275], "word": [4, 7, 11, 19, 30, 39, 48, 51, 52, 53, 58, 60, 82, 102, 115, 130, 186, 189, 194, 211, 212, 215, 217, 232, 244, 248, 267], "global": [4, 6, 10, 27, 28, 29, 32, 34, 35, 52, 64, 77, 94, 149, 155, 175, 177, 185, 186, 189, 190, 192, 199, 212, 215, 216, 219, 230, 232, 233, 238, 246], "uniqu": [4, 11, 32, 33, 35, 43, 46, 48, 52, 53, 54, 57, 60, 67, 70, 75, 79, 81, 82, 88, 92, 109, 154, 163, 175, 183, 186, 187, 189, 192, 194, 200, 204, 211, 212, 215, 217, 218, 219, 223, 232, 237, 240, 247, 252, 267, 270], "across": [4, 7, 43, 50, 52, 63, 79, 96, 164, 165, 172, 185, 199, 234, 236, 237, 238, 273], "level": [4, 6, 7, 10, 11, 12, 17, 18, 22, 34, 43, 50, 52, 58, 60, 79, 82, 88, 92, 106, 119, 132, 160, 165, 170, 174, 177, 183, 185, 188, 189, 191, 197, 199, 208, 212, 218, 219, 223, 231, 232, 237, 270, 271, 273], "correspond": [4, 6, 7, 10, 15, 17, 18, 19, 32, 33, 34, 35, 42, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 58, 62, 63, 65, 66, 67, 68, 75, 77, 81, 82, 83, 88, 91, 92, 95, 96, 102, 108, 110, 114, 115, 117, 119, 133, 137, 141, 155, 159, 160, 162, 166, 167, 170, 175, 178, 180, 184, 185, 187, 188, 189, 190, 192, 194, 195, 199, 205, 206, 209, 211, 212, 215, 216, 217, 218, 219, 221, 223, 224, 225, 232, 233, 234, 235, 237, 238, 240, 244, 245, 247, 248, 250, 252, 270, 276], "share": [4, 17, 19, 53, 92, 190, 194, 199, 219, 232], "__init__": [4, 6, 19, 52, 110, 194, 244, 245, 270], "func_nam": [4, 34, 58, 83, 240], "help": [4, 5, 6, 7, 13, 17, 25, 34, 42, 52, 60, 77, 79, 88, 92, 93, 100, 115, 132, 140, 150, 183, 185, 194, 196, 199, 208, 209, 212, 215, 216, 219, 230, 231, 232, 238, 260, 268, 271], "rais": [4, 10, 12, 17, 18, 19, 27, 29, 32, 34, 41, 44, 52, 53, 54, 56, 58, 61, 62, 65, 67, 68, 69, 77, 79, 83, 85, 88, 89, 91, 92, 100, 102, 139, 151, 180, 183, 186, 187, 188, 189, 190, 192, 194, 195, 196, 199, 201, 207, 211, 214, 215, 216, 217, 218, 219, 223, 225, 228, 230, 232, 235, 237, 238, 240, 241, 250, 271], "been": [4, 12, 17, 19, 32, 34, 35, 43, 44, 45, 48, 51, 52, 53, 64, 77, 79, 88, 92, 93, 94, 110, 115, 117, 125, 129, 130, 138, 150, 160, 162, 170, 174, 180, 181, 182, 183, 186, 189, 190, 194, 196, 197, 199, 201, 206, 209, 211, 216, 217, 218, 220, 229, 230, 232, 233, 235, 237, 240, 247, 250, 267, 268, 270, 271, 275], "simplfiy_thi": 4, "ident": [4, 11, 12, 19, 30, 33, 35, 42, 43, 44, 50, 52, 53, 57, 58, 68, 75, 81, 83, 85, 88, 103, 105, 130, 149, 151, 154, 170, 186, 187, 188, 192, 193, 194, 195, 199, 208, 211, 215, 218, 223, 225, 230, 237, 238, 240, 248, 267, 271, 275], "much": [4, 6, 10, 15, 17, 18, 19, 33, 34, 37, 48, 56, 60, 74, 77, 79, 129, 173, 174, 182, 183, 184, 186, 189, 192, 195, 206, 209, 211, 215, 216, 217, 218, 232, 234, 267, 269, 275], "trivial": [4, 35, 43, 48, 51, 52, 53, 58, 67, 82, 85, 88, 92, 127, 165, 186, 187, 192, 195, 209, 212, 215, 218, 223], "furthermor": [4, 10, 19, 30, 52, 53, 82, 194, 208, 267, 269, 270], "particular": [4, 6, 10, 11, 12, 17, 18, 21, 30, 35, 43, 52, 53, 56, 60, 63, 77, 79, 82, 85, 88, 92, 95, 98, 125, 149, 160, 187, 188, 189, 190, 192, 194, 195, 205, 207, 209, 211, 212, 215, 217, 218, 230, 232, 234, 271, 273, 275], "expr1": [4, 17, 102, 185, 217, 270], "expr2": [4, 17, 102, 185, 270], "dozen": [4, 11, 19, 275], "search": [4, 6, 32, 43, 44, 48, 50, 52, 58, 88, 92, 115, 186, 194, 195, 199, 208, 209, 211, 213, 216, 219, 231], "upcom": 4, "bot": 4, "push": [5, 77], "respect": [5, 6, 10, 11, 12, 19, 27, 29, 30, 32, 33, 34, 35, 42, 43, 44, 47, 48, 50, 51, 52, 54, 58, 60, 62, 64, 68, 69, 74, 75, 77, 79, 82, 83, 85, 88, 92, 94, 95, 96, 98, 102, 107, 108, 109, 112, 119, 126, 128, 130, 132, 139, 154, 167, 168, 169, 174, 175, 178, 180, 183, 184, 185, 186, 189, 192, 194, 195, 196, 199, 201, 202, 205, 207, 211, 215, 216, 217, 218, 219, 220, 224, 225, 230, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 265, 275], "handbook": [5, 6, 35, 42, 43, 50, 60, 92], "internet": 5, "practic": [5, 8, 15, 17, 22, 41, 43, 53, 62, 129, 132, 185, 186, 187, 189, 194, 196, 223, 267, 268], "project": [5, 7, 10, 34, 65, 66, 67, 81, 88, 131, 231, 232, 244], "purpos": [5, 6, 7, 8, 10, 11, 16, 17, 19, 33, 34, 43, 49, 52, 53, 79, 88, 115, 132, 170, 174, 183, 189, 192, 196, 198, 199, 206, 215, 218, 224, 234, 236, 238, 247, 248, 265, 275], "nn": 5, "brows": 5, "clone": [5, 24, 192], "download": [5, 7, 24, 33, 74, 193, 208, 215, 219, 244, 269], "origin": [5, 11, 12, 15, 17, 24, 26, 43, 44, 45, 48, 51, 52, 53, 56, 57, 58, 60, 61, 63, 65, 67, 77, 79, 83, 88, 92, 100, 102, 103, 119, 129, 132, 157, 160, 170, 176, 180, 185, 186, 190, 194, 195, 198, 199, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 225, 230, 237, 238, 244, 246, 247, 248, 249, 250, 252, 253, 275], "77": [5, 41, 60, 88, 92, 198, 199, 232], "mib": 5, "remot": [5, 52], "collabor": 5, "upstream": 5, "fetch": 5, "branch": [5, 18, 32, 52, 57, 58, 59, 60, 78, 196, 209, 218, 270, 275], "checkout": [5, 33], "advantag": [5, 17, 19, 29, 32, 34, 52, 53, 79, 82, 88, 92, 99, 169, 188, 189, 196, 207, 212, 215, 218, 234, 267, 269, 271, 275], "isol": [5, 32, 58, 190, 194, 195, 196, 217, 232], "wide": [5, 17, 80, 88, 132, 179, 189, 195, 199, 219], "flake8": 5, "usernam": 5, "easiest": [5, 7, 10, 11, 12, 52, 186, 189, 212, 238, 248, 264, 270, 275], "consult": [5, 35], "kwarg": [5, 12, 28, 29, 30, 34, 43, 44, 51, 52, 53, 54, 58, 60, 62, 63, 65, 66, 67, 68, 69, 74, 77, 79, 83, 84, 85, 86, 88, 90, 91, 100, 102, 108, 110, 119, 134, 143, 145, 149, 150, 154, 156, 158, 159, 161, 162, 163, 175, 178, 179, 185, 188, 190, 195, 199, 201, 205, 206, 207, 211, 215, 216, 217, 219, 220, 225, 230, 231, 233, 240, 248], "test_bas": [5, 230], "similari": 5, "qualiti": [5, 93, 199], "code_qu": 5, "liter": [6, 12, 19, 34, 42, 52, 80, 82, 94, 165, 172, 211], "occur": [6, 10, 11, 12, 43, 44, 52, 56, 60, 69, 77, 83, 94, 106, 129, 174, 175, 182, 194, 202, 211, 216, 217, 220, 230, 237, 270], "definit": [6, 10, 11, 12, 18, 26, 29, 34, 35, 43, 44, 49, 51, 52, 54, 55, 57, 58, 60, 65, 68, 72, 75, 77, 79, 83, 84, 85, 88, 92, 94, 117, 122, 123, 130, 167, 170, 173, 175, 182, 183, 186, 187, 190, 195, 196, 199, 206, 219, 220, 231, 232, 233, 237, 238, 244, 247, 248, 249, 250, 265, 275], "__doc__": [6, 12], "attribut": [6, 11, 14, 17, 19, 28, 29, 33, 34, 43, 44, 52, 60, 61, 62, 65, 66, 67, 68, 85, 88, 94, 96, 102, 107, 109, 110, 111, 112, 114, 122, 130, 133, 154, 159, 163, 170, 174, 175, 180, 183, 185, 186, 189, 190, 194, 199, 207, 211, 212, 224, 225, 231, 233, 237, 238, 241, 247, 270], "fdiff": [6, 19, 34, 52, 58, 59, 60], "self": [6, 17, 19, 26, 28, 29, 33, 34, 43, 44, 49, 51, 52, 54, 58, 61, 62, 63, 65, 66, 67, 68, 79, 83, 88, 92, 107, 117, 160, 165, 175, 177, 178, 186, 188, 190, 192, 194, 195, 199, 201, 206, 207, 225, 244], "argindex": [6, 19, 34, 52, 58, 59, 60], "heavisid": [6, 59, 77, 79, 199], "diff": [6, 10, 11, 15, 19, 22, 32, 34, 57, 58, 59, 60, 69, 74, 85, 88, 106, 108, 118, 119, 132, 163, 175, 177, 179, 180, 183, 185, 190, 195, 198, 199, 209, 215, 216, 217, 220, 221, 226, 247, 250, 265, 269, 276], "diracdelta": [6, 59, 79, 160, 165, 199], "what": [6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 21, 23, 32, 34, 44, 46, 51, 52, 53, 54, 58, 59, 62, 63, 67, 77, 79, 81, 88, 92, 94, 107, 110, 112, 115, 119, 126, 132, 164, 165, 168, 170, 175, 182, 183, 190, 191, 192, 195, 198, 199, 200, 206, 208, 209, 211, 212, 213, 215, 217, 224, 228, 230, 232, 233, 238, 247, 248, 253, 265, 267, 268, 270, 274, 275], "scope": [6, 34, 125, 129, 228, 275], "high": [6, 7, 12, 15, 17, 22, 34, 52, 56, 57, 80, 92, 132, 179, 189, 194, 197, 199, 212, 217, 260, 271], "od": [6, 11, 19, 75, 110, 114, 125, 132, 213, 216, 276], "seen": [6, 15, 17, 26, 44, 77, 79, 94, 98, 114, 126, 170, 182, 186, 189, 192, 195, 215, 217, 218, 235, 237, 247, 267, 270, 274], "hand": [6, 10, 15, 17, 19, 33, 34, 44, 45, 52, 58, 60, 79, 82, 83, 88, 92, 95, 110, 114, 115, 129, 133, 137, 154, 157, 175, 180, 183, 184, 186, 189, 190, 192, 194, 197, 209, 218, 230, 232, 234, 238, 241, 250, 252, 269], "less": [6, 7, 10, 11, 15, 30, 34, 35, 43, 44, 51, 52, 53, 56, 57, 58, 60, 66, 67, 68, 83, 88, 92, 100, 102, 115, 117, 165, 189, 192, 194, 195, 208, 209, 211, 212, 215, 217, 218, 219, 230, 232], "understand": [6, 12, 17, 18, 19, 52, 53, 77, 115, 125, 127, 128, 132, 170, 182, 185, 188, 189, 194, 209, 212, 231, 238, 266, 267, 274, 275], "clear": [6, 10, 17, 28, 42, 52, 77, 81, 107, 182, 183, 185, 190, 192, 195, 209, 217, 218, 225, 230, 234, 252, 267], "begin": [6, 10, 12, 17, 19, 21, 52, 53, 57, 58, 60, 77, 83, 85, 88, 92, 119, 127, 128, 129, 130, 161, 170, 175, 183, 184, 188, 199, 209, 212, 215, 216, 218, 219, 230, 240, 267, 269, 271, 275], "convers": [6, 7, 10, 17, 34, 52, 72, 94, 129, 169, 187, 188, 189, 190, 192, 194, 196, 199, 212, 224, 231, 244], "aim": [6, 7, 70, 77, 170, 186, 209, 215, 218, 268, 269], "comment": [6, 7, 34, 43, 115, 117, 196, 199, 232, 237], "distract": 6, "input": [6, 7, 10, 11, 12, 19, 22, 26, 32, 35, 48, 52, 53, 55, 56, 57, 58, 66, 79, 81, 82, 88, 92, 94, 99, 100, 102, 106, 111, 114, 115, 117, 118, 119, 129, 132, 133, 138, 161, 175, 177, 178, 189, 190, 192, 195, 196, 197, 198, 199, 200, 207, 211, 212, 213, 215, 217, 219, 221, 231, 232, 234, 235, 237, 238, 240, 264, 270, 271, 275], "consum": [6, 34, 60, 111, 129], "human": [6, 77, 167, 195, 199], "beings": 6, "english": [6, 53], "likewis": [6, 17, 33, 118, 119], "reader": [6, 7, 19, 33, 35, 130, 186, 199, 234, 268, 273], "machineri": [6, 52, 194, 238], "mind": [6, 12, 14, 17, 22, 52, 88, 130, 185, 206, 207, 252, 270], "platform": [6, 52, 165, 183, 215, 231], "anyon": [6, 7, 10, 23, 195, 199, 263, 273, 274], "restructuredtext": [6, 7], "extend": [6, 7, 17, 19, 29, 34, 43, 44, 52, 53, 57, 64, 77, 79, 88, 92, 132, 173, 179, 185, 187, 190, 192, 194, 195, 196, 199, 206, 208, 212, 214, 215, 218, 219, 220, 232, 234, 267, 269], "concis": [6, 132], "quick": [6, 7, 19, 52, 88, 92, 211, 217, 238], "depth": [6, 7, 9, 12, 13, 23, 43, 52, 117, 185, 186, 199, 261], "tripl": [6, 69, 88, 183, 184, 186, 194, 240], "quot": [6, 12, 34, 82, 199, 240], "raw": [6, 7, 34, 52, 53, 58, 93, 94, 159, 164, 189, 190, 195, 207, 211, 274], "backslash": [6, 52, 199], "blank": [6, 94, 111, 185], "close": [6, 11, 34, 51, 52, 56, 57, 60, 68, 70, 77, 79, 81, 102, 118, 185, 186, 187, 193, 194, 207, 217, 218, 232, 265, 275], "rare": [6, 19, 52, 215, 219, 228, 267], "underlin": [6, 7], "numpydoc": [6, 7], "build": [6, 7, 8, 14, 28, 29, 34, 52, 54, 60, 82, 132, 159, 170, 175, 183, 186, 191, 194, 195, 196, 206, 219, 247, 264, 267, 270], "consist": [6, 7, 10, 11, 15, 17, 33, 43, 44, 48, 52, 53, 57, 58, 60, 62, 68, 70, 77, 82, 95, 98, 126, 130, 139, 159, 165, 170, 173, 178, 185, 187, 189, 190, 192, 207, 215, 217, 218, 219, 223, 228, 231, 232, 237, 268, 270], "review": [6, 7, 131], "head": [6, 14, 33, 52, 219, 225, 240, 270], "plural": [6, 7], "length": [6, 10, 34, 36, 42, 43, 44, 46, 50, 52, 53, 55, 57, 58, 60, 61, 65, 67, 68, 69, 82, 83, 88, 91, 92, 95, 96, 106, 110, 114, 118, 119, 120, 130, 134, 138, 162, 167, 168, 170, 175, 178, 183, 194, 195, 199, 205, 209, 211, 215, 217, 219, 230, 231, 237, 240, 244, 245, 253], "equal": [6, 10, 11, 13, 17, 18, 19, 26, 30, 33, 34, 35, 41, 42, 43, 44, 48, 50, 51, 53, 54, 56, 57, 58, 60, 65, 66, 67, 68, 69, 71, 77, 82, 83, 85, 88, 92, 95, 102, 103, 107, 110, 112, 117, 127, 128, 149, 150, 165, 170, 175, 178, 183, 186, 187, 188, 189, 190, 192, 194, 195, 197, 199, 205, 207, 209, 212, 215, 216, 217, 218, 219, 225, 230, 231, 232, 237, 240, 244, 248, 253, 265, 268, 276], "clutter": 6, "harder": [6, 10, 17, 52, 77, 189, 230], "minim": [6, 17, 19, 32, 43, 44, 48, 51, 52, 53, 77, 79, 82, 92, 107, 119, 134, 188, 189, 190, 191, 192, 195, 198, 208, 211, 212, 217, 237, 241], "amount": [6, 33, 52, 53, 64, 125, 175, 180, 183, 192, 202, 230, 244, 245], "deprec": [6, 8, 13, 27, 44, 52, 65, 79, 83, 105, 129, 195, 199, 219, 225, 228, 229, 233, 235, 238, 242], "notifi": 6, "awai": [6, 33, 35, 53, 95, 96, 117, 194, 199], "encourag": [6, 10, 33, 127, 128, 194], "label": [6, 33, 34, 46, 52, 62, 75, 79, 98, 138, 145, 149, 154, 163, 165, 185, 199, 200, 202, 211, 224, 225, 274], "elabor": [6, 20, 180, 250], "suffic": [6, 187], "clarifi": 6, "complic": [6, 12, 17, 19, 34, 43, 51, 53, 54, 56, 57, 58, 60, 77, 79, 85, 125, 127, 165, 183, 189, 192, 196, 198, 209, 211, 218, 219, 223, 224, 232, 234, 238, 240, 265, 267, 270, 271], "demonstr": [6, 7, 12, 17, 19, 22, 43, 44, 52, 79, 92, 107, 109, 115, 119, 120, 129, 186, 189, 249, 275], "api": [6, 7, 10, 17, 20, 34, 52, 64, 72, 78, 93, 94, 101, 132, 161, 174, 185, 192, 212, 213, 214, 236, 238, 241, 247, 248, 258, 260, 268, 269, 272], "simpl": [6, 11, 12, 15, 17, 19, 22, 24, 33, 34, 43, 51, 52, 56, 60, 64, 68, 70, 77, 79, 81, 88, 92, 93, 95, 96, 102, 103, 106, 109, 110, 112, 114, 117, 119, 120, 122, 124, 125, 129, 133, 139, 153, 154, 162, 163, 164, 175, 182, 183, 189, 190, 191, 195, 196, 199, 201, 206, 208, 209, 211, 212, 215, 218, 225, 231, 232, 237, 241, 243, 244, 245, 246, 250, 264, 267, 270, 271, 275], "too": [6, 12, 19, 43, 44, 52, 58, 60, 62, 65, 67, 77, 82, 91, 92, 93, 127, 134, 206, 207, 211, 212, 215, 217, 218, 219, 230, 231, 246, 247], "thought": [6, 11, 52, 206, 215, 267, 270], "perfect": [6, 19, 43, 52, 92, 212, 218, 269, 270], "tell": [6, 7, 17, 18, 22, 34, 44, 53, 56, 60, 83, 94, 114, 170, 189, 194, 198, 206, 209, 215, 231, 267], "think": [6, 10, 11, 17, 18, 19, 22, 24, 32, 43, 117, 170, 234, 238, 267, 275], "test_": [6, 230], "coverage_doctest": 6, "coverag": 6, "6868680200532414": 6, "dsolv": [6, 11, 216, 217, 265, 269, 276], "co": [6, 12, 19, 21, 26, 32, 34, 51, 52, 54, 56, 57, 59, 60, 61, 62, 65, 66, 68, 70, 74, 75, 76, 77, 79, 83, 88, 92, 94, 107, 108, 109, 115, 117, 118, 120, 122, 123, 124, 129, 132, 137, 139, 175, 177, 178, 180, 182, 183, 184, 185, 189, 192, 195, 196, 198, 199, 200, 201, 202, 206, 207, 208, 209, 211, 215, 217, 218, 219, 220, 226, 238, 244, 245, 246, 247, 248, 253, 264, 265, 267, 269, 275, 276], "sin": [6, 7, 10, 11, 12, 17, 19, 21, 22, 24, 26, 32, 34, 51, 52, 54, 56, 57, 59, 60, 61, 62, 66, 70, 71, 74, 75, 76, 77, 79, 80, 83, 88, 93, 94, 104, 107, 108, 109, 114, 115, 117, 118, 120, 122, 123, 124, 129, 132, 137, 139, 163, 175, 177, 178, 180, 182, 183, 184, 185, 187, 189, 195, 196, 198, 199, 200, 201, 202, 206, 207, 208, 209, 211, 214, 215, 217, 218, 220, 226, 232, 238, 244, 245, 246, 247, 248, 253, 264, 265, 267, 269, 270, 275, 276], "hint": [6, 19, 33, 36, 43, 52, 55, 58, 79, 83, 88, 92, 102, 132, 142, 146, 162, 164, 165, 175, 195, 206, 209, 213, 217, 275], "1st_exact": 6, "eq": [6, 11, 12, 17, 19, 30, 32, 34, 58, 62, 65, 69, 77, 82, 168, 185, 186, 190, 195, 197, 199, 201, 205, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 231, 232, 238, 244, 267, 269, 276], "c1": [6, 15, 53, 62, 69, 83, 85, 151, 165, 207, 212, 215, 217, 249, 276], "comma": [6, 7, 12, 34, 52, 199, 238, 267], "readabl": [6, 25, 33, 80, 106, 195, 198, 199, 206, 208, 241], "accept": [6, 11, 19, 33, 34, 43, 52, 58, 66, 79, 82, 83, 85, 88, 91, 94, 115, 159, 175, 179, 185, 194, 195, 198, 199, 200, 207, 209, 211, 217, 231, 238, 244, 245, 248, 271], "rang": [6, 10, 11, 15, 19, 22, 32, 34, 41, 42, 43, 44, 46, 48, 52, 53, 57, 58, 60, 66, 83, 88, 92, 96, 100, 104, 134, 165, 185, 189, 190, 191, 192, 194, 195, 196, 201, 202, 205, 208, 211, 215, 218, 219, 220, 224, 230, 237, 264, 275], "30": [6, 26, 32, 34, 38, 52, 53, 55, 56, 57, 60, 66, 68, 79, 83, 88, 89, 92, 95, 96, 115, 138, 188, 190, 194, 195, 199, 205, 208, 211, 219, 220, 275], "7": [6, 12, 13, 17, 19, 21, 22, 26, 28, 29, 32, 34, 36, 38, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 56, 57, 58, 60, 62, 65, 66, 67, 68, 74, 77, 79, 82, 83, 85, 86, 88, 92, 94, 95, 97, 100, 102, 117, 124, 127, 128, 132, 165, 170, 172, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 201, 202, 205, 206, 207, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 224, 225, 230, 231, 234, 237, 238, 244, 253, 265, 270, 271, 274], "8": [6, 13, 15, 24, 26, 27, 32, 34, 36, 43, 44, 45, 48, 50, 52, 53, 55, 56, 57, 58, 60, 62, 65, 66, 68, 74, 77, 79, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 97, 100, 102, 104, 117, 132, 137, 138, 149, 185, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 201, 202, 205, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 224, 230, 232, 234, 237, 244, 246, 247, 253, 264, 265, 269, 271, 275], "9": [6, 13, 24, 32, 34, 40, 42, 43, 44, 48, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 65, 66, 68, 74, 77, 79, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 97, 100, 102, 103, 104, 105, 115, 117, 120, 132, 134, 138, 170, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 205, 207, 208, 209, 211, 212, 215, 217, 218, 219, 220, 230, 234, 237, 244, 246, 269, 271, 276], "11": [6, 13, 17, 28, 29, 34, 43, 46, 48, 50, 52, 53, 55, 57, 60, 64, 65, 66, 68, 69, 77, 79, 82, 83, 84, 88, 92, 94, 97, 102, 115, 117, 130, 149, 159, 184, 185, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 206, 208, 212, 215, 217, 218, 219, 220, 231, 237, 247], "12": [6, 12, 13, 19, 26, 32, 33, 34, 38, 40, 41, 43, 44, 45, 48, 50, 51, 52, 53, 55, 57, 58, 60, 62, 65, 66, 68, 77, 79, 83, 88, 89, 92, 95, 96, 100, 102, 104, 117, 118, 130, 162, 175, 184, 187, 188, 189, 192, 194, 195, 196, 198, 199, 205, 207, 208, 212, 214, 215, 219, 220, 231, 234, 237, 246, 271, 275], "13": [6, 26, 34, 41, 43, 48, 52, 53, 55, 57, 60, 64, 65, 66, 67, 77, 82, 88, 92, 96, 100, 102, 115, 130, 185, 192, 194, 195, 196, 198, 199, 205, 212, 214, 216, 217, 219, 220, 230, 231, 253], "14": [6, 34, 41, 43, 47, 48, 50, 52, 53, 57, 58, 60, 77, 88, 89, 92, 93, 95, 100, 115, 184, 185, 188, 190, 192, 193, 194, 195, 196, 198, 199, 208, 211, 212, 215, 217, 219, 220, 265], "15": [6, 12, 19, 32, 38, 41, 43, 48, 50, 52, 53, 55, 56, 57, 60, 62, 65, 66, 68, 69, 77, 79, 82, 83, 84, 88, 89, 92, 95, 138, 184, 185, 187, 188, 189, 190, 194, 195, 196, 198, 199, 201, 205, 206, 208, 211, 212, 216, 217, 218, 219, 220, 237, 264, 265, 270, 271], "16": [6, 26, 32, 34, 43, 44, 47, 51, 52, 53, 57, 60, 61, 62, 66, 77, 79, 82, 88, 89, 91, 92, 96, 180, 187, 188, 189, 192, 193, 194, 195, 198, 199, 205, 207, 208, 209, 212, 219, 220, 237, 244, 252, 271], "17": [6, 10, 41, 43, 44, 52, 53, 56, 57, 58, 62, 65, 68, 77, 88, 92, 102, 189, 190, 194, 195, 198, 199, 206, 208, 212, 215, 220, 234, 238, 269], "18": [6, 43, 44, 55, 57, 60, 62, 65, 68, 84, 88, 92, 96, 100, 102, 104, 176, 184, 192, 193, 198, 199, 207, 208, 212, 215, 217, 218, 219, 220, 246], "19": [6, 43, 52, 55, 60, 62, 65, 68, 88, 92, 94, 95, 190, 194, 195, 198, 208, 212, 214, 217, 231, 264], "20": [6, 12, 30, 34, 41, 43, 44, 51, 52, 53, 56, 57, 60, 68, 69, 79, 88, 92, 95, 96, 102, 112, 170, 172, 185, 189, 193, 194, 195, 196, 198, 199, 205, 206, 207, 208, 211, 212, 215, 218, 219, 244, 265], "21": [6, 10, 38, 43, 52, 55, 57, 65, 66, 74, 88, 92, 94, 95, 130, 185, 190, 192, 193, 194, 196, 198, 199, 205, 215, 217, 219, 220, 275], "22": [6, 12, 43, 52, 55, 56, 57, 60, 88, 92, 95, 96, 130, 193, 198, 211, 212, 217, 219], "23": [6, 32, 43, 44, 52, 55, 58, 60, 66, 68, 88, 92, 95, 130, 190, 195, 198, 205, 212, 237], "24": [6, 26, 32, 40, 44, 45, 52, 55, 57, 60, 66, 74, 79, 88, 92, 95, 96, 100, 102, 162, 172, 184, 190, 192, 194, 195, 196, 198, 201, 206, 212, 215, 219, 234, 237, 253, 265, 271], "25": [6, 12, 43, 44, 53, 55, 57, 60, 62, 65, 67, 84, 88, 91, 92, 95, 96, 102, 112, 178, 184, 192, 194, 195, 198, 199, 205, 206, 208, 212, 214, 215, 216, 219, 231], "26": [6, 41, 52, 53, 55, 64, 88, 92, 95, 96, 195, 212, 219], "27": [6, 22, 34, 35, 43, 47, 57, 62, 88, 92, 95, 96, 102, 104, 192, 217], "28": [6, 34, 43, 51, 55, 56, 60, 88, 92, 117, 208, 212, 215, 270], "29": [6, 26, 41, 43, 44, 52, 53, 55, 57, 58, 65, 66, 88, 92, 102, 154, 189, 207, 219], "assumpt": [6, 11, 12, 16, 18, 20, 22, 27, 28, 30, 31, 33, 34, 43, 44, 46, 51, 54, 56, 58, 59, 79, 82, 83, 88, 89, 102, 106, 132, 172, 177, 188, 199, 207, 208, 211, 215, 217, 218, 224, 232, 237, 254, 255, 275], "parenthes": [6, 12, 52, 94, 106, 153, 154, 183, 199, 223, 240], "type": [6, 8, 10, 11, 12, 14, 17, 18, 19, 22, 28, 29, 32, 43, 44, 48, 51, 52, 53, 54, 55, 56, 58, 59, 62, 63, 64, 65, 66, 67, 70, 77, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 95, 96, 98, 100, 102, 106, 110, 115, 126, 132, 137, 151, 159, 160, 161, 163, 175, 178, 179, 181, 183, 185, 186, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 207, 208, 209, 211, 212, 213, 214, 217, 223, 224, 225, 228, 230, 231, 232, 237, 238, 240, 247, 250, 253, 256, 261, 265, 267, 269, 270, 271, 274, 275, 276], "enclos": [6, 62, 63, 68, 91, 103, 199, 209, 238], "colon": [6, 52], "preced": [6, 7, 12, 35, 44, 52, 53, 56, 57, 145, 211, 238], "space": [6, 12, 19, 32, 33, 34, 52, 53, 54, 61, 62, 63, 65, 67, 68, 81, 88, 94, 95, 104, 110, 111, 112, 134, 136, 139, 149, 152, 154, 160, 162, 169, 175, 178, 180, 183, 184, 185, 186, 194, 210, 218, 219, 230, 234, 244, 245, 247, 248, 249, 250, 252, 253, 267, 270], "omit": [6, 10, 17, 19, 34, 44, 51, 52, 53, 77, 79, 82, 88, 167, 199, 200, 207, 209, 217, 223, 232, 237, 265], "absent": [6, 36], "specifi": [6, 7, 10, 17, 19, 22, 33, 34, 35, 47, 51, 52, 53, 54, 55, 58, 60, 61, 65, 68, 77, 79, 81, 82, 83, 85, 88, 92, 94, 95, 96, 102, 107, 110, 114, 115, 117, 119, 120, 122, 125, 127, 128, 129, 130, 132, 133, 149, 154, 159, 160, 162, 163, 168, 174, 175, 177, 178, 180, 182, 183, 186, 187, 188, 189, 190, 192, 194, 195, 196, 199, 201, 202, 205, 206, 207, 209, 211, 215, 216, 217, 218, 219, 220, 224, 225, 226, 230, 231, 232, 237, 238, 244, 245, 246, 249, 252, 261, 271], "displai": [6, 7, 12, 17, 18, 52, 53, 56, 77, 81, 95, 96, 100, 136, 169, 175, 178, 179, 185, 189, 190, 199, 207, 223, 230], "signatur": [6, 19, 28, 29, 44, 52, 88, 232, 233, 237, 238], "brace": [6, 57, 115, 199], "appear": [6, 7, 11, 12, 33, 34, 36, 41, 43, 52, 53, 57, 58, 61, 62, 65, 68, 71, 75, 77, 79, 83, 88, 92, 94, 115, 119, 149, 165, 167, 170, 185, 187, 189, 192, 194, 195, 199, 208, 211, 215, 216, 217, 219, 223, 225, 230, 237, 238, 244, 248], "shape": [6, 10, 34, 68, 83, 85, 88, 90, 91, 100, 102, 109, 114, 115, 175, 185, 186, 188, 199, 202, 209, 219, 220, 221, 223, 224, 225, 238, 274], "combin": [6, 10, 12, 19, 33, 52, 56, 57, 60, 72, 79, 81, 82, 83, 92, 96, 102, 114, 118, 125, 133, 144, 151, 159, 160, 162, 163, 164, 168, 170, 171, 186, 187, 189, 190, 192, 194, 195, 199, 200, 208, 209, 211, 212, 215, 217, 219, 220, 234, 237, 264, 267, 270], "incorrectli": [6, 10, 19, 61, 62, 88, 187], "opt_cs": 6, "canon": [6, 11, 17, 34, 36, 41, 43, 44, 48, 52, 53, 54, 58, 68, 77, 82, 88, 92, 94, 110, 142, 146, 165, 167, 170, 172, 192, 200, 207, 208, 211, 217, 219, 225, 237, 275], "find": [6, 11, 12, 15, 16, 19, 21, 22, 26, 29, 32, 34, 35, 43, 46, 47, 48, 51, 52, 56, 58, 60, 62, 64, 65, 66, 69, 74, 77, 79, 81, 88, 92, 94, 108, 116, 123, 130, 132, 134, 150, 157, 159, 160, 161, 165, 168, 170, 182, 185, 186, 187, 188, 189, 190, 191, 192, 196, 198, 199, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 217, 218, 219, 225, 234, 237, 238, 240, 244, 253, 265, 267, 269, 271, 276], "optim": [6, 11, 34, 36, 43, 56, 92, 106, 132, 145, 149, 195, 199, 200, 208, 211, 219, 231], "mul": [6, 10, 11, 12, 14, 19, 26, 77, 79, 83, 92, 145, 149, 159, 160, 188, 189, 190, 194, 195, 199, 200, 201, 208, 211, 215, 216, 217, 218, 223, 255, 270], "pow": [6, 10, 11, 12, 26, 31, 34, 53, 58, 77, 83, 92, 164, 188, 189, 190, 195, 199, 201, 208, 211, 217, 218, 270, 274], "neg": [6, 11, 12, 17, 18, 22, 29, 31, 34, 35, 47, 51, 52, 57, 58, 60, 62, 64, 65, 68, 77, 79, 81, 82, 83, 88, 91, 92, 95, 96, 99, 100, 102, 165, 175, 187, 188, 190, 192, 194, 195, 196, 199, 205, 207, 208, 209, 211, 212, 215, 217, 218, 219], "coeffici": [6, 15, 17, 29, 32, 34, 51, 52, 54, 56, 57, 60, 65, 70, 71, 74, 75, 77, 81, 82, 85, 88, 89, 92, 103, 110, 115, 138, 152, 162, 170, 184, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 201, 202, 205, 206, 209, 211, 212, 214, 215, 216, 217, 218, 219, 225, 231, 247, 250, 270, 275], "none": [6, 7, 10, 11, 17, 18, 19, 26, 27, 28, 29, 30, 32, 33, 34, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 80, 82, 83, 85, 88, 89, 92, 93, 94, 95, 102, 107, 108, 109, 110, 111, 114, 115, 134, 136, 138, 139, 145, 150, 155, 160, 162, 165, 167, 171, 172, 173, 175, 177, 178, 179, 183, 184, 185, 186, 188, 189, 190, 192, 194, 195, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 215, 216, 217, 218, 219, 220, 223, 224, 225, 228, 230, 231, 232, 233, 237, 238, 240, 243, 244, 246, 271, 275, 276], "process": [6, 7, 10, 11, 12, 17, 31, 34, 43, 44, 50, 52, 53, 58, 60, 68, 77, 79, 88, 92, 102, 111, 115, 117, 123, 126, 127, 129, 132, 185, 186, 192, 199, 200, 207, 211, 215, 217, 230, 234, 275], "concern": [6, 11, 17, 32, 35, 51, 56, 92, 180, 185, 187, 188, 189, 198, 199, 200, 211, 212, 217, 231, 232, 234, 240], "item": [6, 7, 11, 12, 34, 41, 42, 44, 52, 57, 63, 69, 83, 88, 92, 110, 185, 189, 192, 195, 199, 207, 215, 216, 219, 230, 231, 234, 237, 238, 275], "fragment": [6, 53], "desir": [6, 10, 12, 15, 19, 22, 25, 43, 44, 52, 53, 55, 56, 57, 58, 62, 66, 68, 82, 83, 88, 91, 92, 93, 110, 111, 112, 114, 125, 129, 150, 175, 182, 183, 188, 190, 192, 194, 195, 196, 199, 200, 202, 207, 211, 215, 217, 218, 231, 233, 234, 237, 250, 264], "span": [6, 10, 81, 88, 95, 96, 194, 199, 235, 271], "subsequ": [6, 12, 52, 58, 175, 190, 192, 195, 234, 237, 247, 250], "indent": [6, 12, 240], "embed": [6, 7, 32, 44, 52, 80, 194], "hyperlink": 6, "classnam": 6, "erf": [6, 60, 77, 79, 199, 209, 219], "gauss": [6, 60, 79, 88, 134, 187, 194, 197, 217, 218], "erfc": [6, 60, 77, 199, 219], "complementari": [6, 60, 102], "erfi": [6, 60, 77, 199], "erf2": [6, 60, 199], "erfinv": [6, 60, 199, 219], "invers": [6, 26, 43, 44, 52, 53, 54, 59, 60, 78, 79, 85, 88, 92, 109, 110, 154, 158, 159, 162, 167, 170, 186, 187, 188, 190, 192, 195, 196, 199, 201, 209, 211, 215, 217, 218, 219, 237, 271, 275], "erfcinv": [6, 60, 199], "erf2inv": [6, 60, 199], "besselj": [6, 60, 74, 199, 211, 215, 269], "besselbas": [6, 60], "bessel": [6, 7, 58, 59, 70, 79, 195, 211, 215, 219, 269], "kind": [6, 7, 10, 11, 16, 17, 18, 19, 33, 34, 54, 57, 60, 72, 79, 83, 95, 98, 110, 115, 128, 180, 187, 189, 190, 195, 200, 201, 207, 215, 216, 219, 237, 250, 252, 255, 265, 275], "bess": [6, 60, 199, 211, 215, 219], "besselk": [6, 60, 199, 219], "cite": [6, 20], "citat": [6, 51, 193], "meant": [6, 7, 10, 12, 17, 19, 34, 52, 60, 65, 79, 92, 115, 132, 185, 190, 207, 211, 216, 248, 270], "augment": [6, 34, 88, 110, 127, 128, 132, 197, 217, 218, 235, 238, 276], "freeli": [6, 25, 86, 186], "wikipedia": [6, 11, 17, 19, 26, 28, 29, 30, 32, 33, 34, 40, 41, 43, 44, 51, 52, 53, 54, 55, 57, 58, 60, 62, 64, 68, 69, 70, 79, 81, 82, 83, 85, 88, 92, 100, 102, 105, 134, 136, 137, 138, 140, 141, 142, 146, 147, 148, 151, 153, 154, 163, 165, 168, 175, 177, 181, 195, 202, 206, 207, 208, 215, 218, 219, 232, 237, 244, 245, 249, 251, 253, 269, 271, 273], "wolfram": [6, 30, 45, 46, 52, 53, 55, 57, 58, 60, 62, 68, 79, 88, 92, 94, 193, 199, 201, 202, 204, 207, 212, 219, 237, 271], "mathworld": [6, 11, 30, 45, 46, 52, 53, 55, 57, 58, 60, 62, 68, 79, 88, 92, 193, 202, 207, 212, 219, 237], "nist": [6, 57, 58, 60, 170], "digit": [6, 11, 12, 34, 52, 53, 55, 56, 62, 79, 82, 92, 125, 175, 189, 195, 206, 211, 237, 264], "dlmf": [6, 57, 58, 60], "suffer": 6, "rot": [6, 68, 162], "publish": [6, 77, 209], "identifi": [6, 10, 17, 18, 32, 45, 52, 55, 56, 79, 88, 98, 127, 153, 154, 186, 189, 190, 200, 208, 211, 215, 216, 217, 218, 219, 238, 241], "clickabl": 6, "kozen89": [6, 192, 193], "kozen": [6, 193], "landau": [6, 193, 265], "polynomi": [6, 7, 11, 15, 17, 21, 22, 30, 43, 51, 52, 53, 56, 57, 59, 70, 71, 72, 73, 75, 79, 82, 83, 85, 88, 92, 96, 102, 130, 132, 186, 188, 193, 197, 201, 206, 208, 209, 211, 212, 213, 214, 215, 218, 230, 254, 261, 266, 271, 276], "decomposit": [6, 43, 50, 84, 85, 88, 188, 190, 191, 192, 193, 201, 275], "1989": [6, 193, 217], "pp": [6, 43, 44, 50, 51, 52, 53, 57, 58, 79, 83, 88, 119, 129, 184, 187, 192, 193, 215, 216, 219], "445": [6, 193], "456": [6, 52, 193], "abramowitz": [6, 60], "milton": [6, 60], "stegun": [6, 60], "iren": [6, 60], "chapter": [6, 43, 60, 92, 115, 193], "formula": [6, 15, 32, 46, 51, 52, 56, 57, 60, 65, 78, 82, 88, 92, 184, 186, 192, 195, 199, 201, 205, 208, 211, 212, 215, 269, 275], "tabl": [6, 17, 35, 43, 52, 57, 60, 73, 78, 79, 88, 92, 109, 132, 184, 194, 221, 257], "ed": [6, 44, 60, 88, 193, 217, 219], "1965": [6, 60, 83], "luke": [6, 60, 77, 209], "l": [6, 10, 12, 32, 33, 34, 35, 41, 43, 44, 51, 53, 60, 63, 64, 65, 66, 67, 69, 70, 75, 77, 79, 81, 84, 85, 88, 92, 95, 96, 102, 104, 109, 110, 112, 114, 115, 118, 119, 120, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 137, 163, 166, 167, 168, 170, 182, 183, 184, 186, 188, 190, 192, 193, 199, 201, 202, 208, 209, 212, 215, 217, 219, 223, 224, 225, 226, 230, 232, 237, 253, 275], "Their": [6, 52, 60, 77, 185, 189, 192, 209], "approxim": [6, 12, 13, 16, 32, 43, 51, 52, 53, 56, 60, 62, 68, 77, 79, 88, 92, 96, 99, 134, 168, 185, 189, 190, 195, 202, 206, 209, 219, 256, 265, 269], "1969": [6, 53, 60, 77, 193, 209], "en": [6, 7, 17, 19, 26, 28, 29, 30, 32, 33, 34, 40, 41, 43, 44, 51, 52, 53, 54, 55, 57, 58, 60, 62, 64, 68, 69, 70, 79, 80, 81, 82, 83, 85, 88, 92, 100, 102, 105, 134, 136, 137, 138, 140, 141, 142, 146, 147, 148, 151, 153, 154, 163, 165, 175, 177, 181, 195, 196, 202, 206, 207, 208, 215, 218, 219, 232, 237, 238, 244, 245, 249, 251, 253, 271], "bessel_funct": [6, 60], "typefunct": [6, 60], "gamma": [6, 7, 12, 19, 51, 52, 54, 56, 57, 59, 77, 79, 105, 132, 162, 183, 184, 199, 209, 211, 215, 219, 260, 275], "infti": [6, 11, 17, 30, 51, 52, 53, 57, 58, 60, 77, 79, 186, 195, 202, 206, 209, 215, 218, 219, 265, 269, 275], "mathrm": [6, 24, 42, 51, 52, 53, 60, 77, 79, 88, 190, 192, 199, 207, 209, 215, 218, 219, 262, 265, 269], "factori": [6, 15, 19, 51, 52, 56, 59, 60, 88, 92, 94, 184, 190, 192, 194, 195, 199, 201, 211, 217, 219, 232, 233, 237, 238, 275], "z": [6, 10, 11, 12, 17, 19, 30, 31, 34, 35, 43, 44, 51, 52, 53, 54, 55, 57, 58, 60, 64, 65, 66, 67, 68, 77, 79, 82, 83, 85, 88, 94, 95, 96, 104, 107, 108, 109, 112, 115, 117, 118, 119, 120, 122, 123, 124, 129, 130, 132, 133, 134, 143, 145, 149, 159, 160, 162, 166, 170, 174, 175, 176, 177, 178, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 206, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 220, 223, 224, 225, 231, 232, 238, 244, 246, 247, 248, 249, 250, 252, 253, 264, 265, 267, 269, 270, 274, 275, 276], "whole": [6, 10, 17, 52, 54, 60, 79, 96, 104, 185, 186, 194, 195, 199, 202, 207, 209, 215, 218, 237], "complex": [6, 10, 11, 12, 14, 17, 19, 22, 26, 29, 31, 32, 34, 43, 52, 53, 55, 56, 57, 59, 60, 64, 74, 77, 83, 84, 88, 92, 93, 94, 100, 102, 106, 115, 132, 134, 138, 148, 151, 153, 154, 165, 174, 175, 183, 187, 188, 190, 191, 194, 195, 199, 200, 204, 209, 211, 215, 217, 218, 219, 232, 240, 275, 276], "plane": [6, 26, 52, 60, 62, 64, 65, 67, 68, 78, 79, 100, 117, 137, 138, 182, 183, 207, 218, 253, 275], "pole": [6, 11, 60, 77, 101, 102, 138, 206, 209, 215], "pi": [6, 10, 11, 12, 14, 17, 19, 22, 25, 26, 27, 29, 30, 31, 32, 34, 44, 51, 54, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 71, 77, 79, 88, 92, 104, 117, 132, 134, 136, 137, 138, 139, 141, 149, 160, 162, 163, 166, 168, 175, 184, 185, 187, 189, 190, 195, 199, 202, 206, 207, 208, 209, 211, 214, 215, 217, 218, 219, 237, 244, 246, 253, 264, 269, 275], "oo": [6, 11, 17, 18, 30, 32, 51, 52, 56, 57, 58, 60, 65, 77, 79, 82, 88, 102, 104, 151, 163, 166, 190, 192, 195, 204, 205, 206, 207, 211, 214, 215, 217, 218, 219, 224, 237, 240, 265, 269], "known": [6, 11, 17, 18, 19, 29, 33, 34, 35, 41, 43, 44, 52, 53, 56, 57, 60, 62, 65, 70, 77, 79, 80, 89, 92, 100, 102, 103, 105, 107, 112, 129, 168, 175, 182, 188, 189, 190, 194, 195, 199, 202, 205, 207, 208, 209, 211, 213, 214, 215, 216, 217, 219, 237, 238, 244, 250, 252, 275], "sqrt": [6, 10, 11, 17, 19, 21, 22, 26, 30, 31, 32, 34, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 77, 79, 80, 83, 84, 88, 92, 94, 95, 102, 104, 117, 134, 136, 138, 139, 144, 149, 159, 160, 162, 163, 165, 166, 168, 175, 180, 183, 184, 187, 189, 190, 192, 194, 195, 198, 199, 200, 205, 208, 209, 211, 212, 214, 215, 217, 218, 219, 237, 238, 240, 244, 252, 253, 264, 269, 274, 275, 276], "obei": [6, 60, 184, 199, 209], "mirror": [6, 60, 79, 138], "symmetri": [6, 10, 40, 45, 48, 60, 83, 144, 184, 215, 223, 225, 264, 275], "conjug": [6, 30, 41, 42, 43, 52, 59, 60, 83, 88, 104, 134, 148, 151, 165, 195, 199, 215, 225], "differenti": [6, 7, 10, 11, 21, 32, 52, 57, 58, 60, 69, 70, 72, 75, 102, 109, 110, 114, 115, 117, 119, 122, 125, 126, 127, 128, 129, 132, 133, 154, 160, 174, 175, 177, 178, 180, 183, 186, 192, 196, 198, 199, 204, 209, 211, 213, 215, 216, 244, 250, 251, 254, 261, 265, 266, 269], "polygamma": [6, 57, 60, 199], "seri": [6, 15, 32, 33, 34, 35, 42, 43, 51, 52, 54, 56, 57, 58, 60, 72, 75, 76, 77, 81, 92, 99, 102, 115, 122, 124, 132, 178, 182, 191, 192, 199, 204, 205, 209, 215, 218, 255, 261, 266], "expans": [6, 15, 19, 34, 52, 54, 57, 58, 60, 72, 79, 88, 92, 129, 144, 146, 195, 196, 201, 202, 203, 208, 210, 215, 217, 218, 255, 266, 275], "eulergamma": [6, 56, 57, 60], "40": [6, 34, 55, 57, 60, 62, 69, 83, 88, 92, 95, 185, 196, 198, 199, 219, 240, 264], "288037795340032417959588909060233922890": [6, 60], "49801566811835604271": [6, 60], "15494982830181068512": [6, 60], "lowergamma": [6, 60, 219], "lower": [6, 10, 11, 17, 29, 32, 34, 43, 44, 51, 52, 54, 60, 61, 63, 68, 69, 79, 83, 84, 85, 88, 100, 105, 109, 165, 178, 184, 186, 188, 190, 192, 195, 199, 208, 209, 211, 215, 224, 225, 234, 244, 265, 273], "uppergamma": [6, 57, 60, 199, 219], "upper": [6, 29, 51, 53, 56, 60, 61, 68, 69, 83, 84, 85, 88, 91, 92, 100, 109, 158, 165, 184, 188, 190, 192, 194, 195, 199, 209, 217, 224, 244], "loggamma": [6, 7, 60, 199], "log": [6, 7, 12, 19, 24, 26, 32, 34, 43, 51, 52, 56, 57, 59, 60, 70, 74, 76, 77, 79, 83, 88, 92, 185, 190, 199, 201, 206, 209, 211, 215, 218, 219, 226, 265, 275, 276], "digamma": [6, 57, 60, 199], "trigamma": [6, 60, 199], "beta": [6, 12, 34, 43, 52, 59, 79, 162, 175, 184, 194, 196, 199, 215, 219], "euler": [6, 32, 33, 51, 52, 53, 56, 59, 60, 68, 74, 80, 92, 162, 175, 179, 183, 184, 199, 215, 219, 244, 245], "gamma_funct": [6, 60], "gov": [6, 57, 58, 60], "gammafunct": [6, 60], "gammabetaerf": [6, 57, 60], "unusu": [6, 17, 117, 230], "inlin": [6, 80, 179, 199, 232], "pretti": [6, 11, 19, 33, 34, 60, 79, 80, 88, 92, 96, 102, 117, 179, 209, 211, 218, 252, 262, 266, 269, 271, 275], "As": [6, 10, 14, 15, 18, 19, 25, 34, 43, 44, 52, 53, 56, 57, 58, 60, 76, 77, 82, 88, 91, 92, 94, 114, 115, 117, 119, 126, 129, 130, 165, 170, 182, 186, 187, 189, 190, 192, 196, 198, 199, 206, 207, 209, 215, 218, 219, 237, 238, 247, 248, 264, 265, 267, 269, 270, 271, 274, 275], "literatur": [6, 11, 77, 169, 191], "fact": [6, 10, 11, 17, 18, 19, 22, 29, 30, 52, 57, 60, 70, 77, 92, 117, 129, 170, 186, 187, 189, 192, 194, 196, 198, 209, 211, 215, 218, 230, 238, 252, 264, 267, 268, 269, 270, 275], "eval": [6, 10, 17, 28, 29, 34, 52, 58, 60, 151, 165, 190, 195, 199, 232, 264], "illumin": 6, "tone": 6, "narr": [6, 8, 268], "excerpt": 6, "geometri": [6, 61, 62, 63, 65, 66, 67, 68, 69, 79, 125, 138, 191, 246, 253, 254, 261, 269], "autofunct": 6, "intersect": [6, 17, 22, 32, 33, 43, 62, 63, 65, 66, 67, 68, 69, 138, 186, 195, 199, 205, 206, 218, 261], "convex_hul": [6, 64, 68, 69], "are_similar": [6, 63, 64, 69], "autoclass": 6, "linearent": [6, 62, 65, 66, 67, 68], "rai": [6, 62, 64, 65, 66, 68, 69, 134, 138], "segment": [6, 10, 43, 62, 64, 65, 66, 67, 68, 69, 182, 185, 215, 230], "curv": [6, 33, 54, 64, 79, 92, 95, 134, 185, 186, 215, 244, 253, 265], "ellips": [6, 63, 64, 68, 137, 185, 199, 274], "circl": [6, 19, 52, 62, 63, 64, 66, 67, 68, 69, 77, 138, 145, 185, 218, 244, 246, 253], "polygon": [6, 62, 63, 64, 69, 78, 185, 253], "regularpolygon": [6, 63, 64, 68, 185], "triangl": [6, 19, 33, 57, 63, 64, 68, 69, 79, 83, 92, 184, 185, 246, 253], "rel": [6, 7, 10, 33, 34, 42, 43, 44, 45, 49, 50, 51, 53, 56, 63, 77, 92, 107, 109, 112, 120, 129, 130, 137, 164, 175, 178, 182, 183, 186, 188, 189, 192, 194, 207, 209, 214, 217, 219, 230, 237, 247, 248, 252, 269], "cumbersom": 6, "viewcod": 6, "aco": [6, 12, 26, 59, 65, 68, 117, 132, 138, 175, 199, 215, 244, 275], "obj": [6, 10, 17, 52, 190, 195, 199, 233], "qualifi": [6, 241], "elementari": [6, 17, 18, 19, 43, 52, 53, 56, 59, 60, 74, 77, 79, 83, 88, 92, 130, 158, 161, 191, 195, 196, 203, 237, 238, 247, 257], "trigonometr": [6, 19, 52, 59, 79, 196, 202, 210, 214, 215, 218, 238, 255, 266, 276], "trail": [6, 44, 92, 190, 192, 195, 235, 240], "pair": [6, 12, 15, 33, 34, 43, 44, 52, 53, 58, 64, 69, 76, 88, 92, 115, 119, 155, 157, 159, 160, 165, 174, 186, 189, 192, 194, 195, 200, 205, 206, 208, 209, 211, 212, 215, 218, 219, 232, 237, 247, 264, 271], "www": [6, 7, 26, 32, 43, 44, 53, 55, 57, 60, 74, 79, 80, 92, 100, 179, 193, 198, 199, 208, 211, 212, 215, 219, 237, 271, 274], "master": [6, 7, 24, 79, 230], "usag": [6, 7, 11, 12, 17, 18, 19, 25, 28, 54, 58, 79, 125, 162, 180, 185, 186, 191, 192, 199, 207, 209, 212, 215, 216, 220, 234, 238, 239, 250, 251, 261, 270], "expect": [6, 7, 12, 17, 19, 22, 33, 35, 37, 52, 58, 60, 64, 82, 92, 93, 102, 115, 159, 189, 192, 194, 196, 197, 206, 211, 214, 218, 219, 228, 230, 231, 234, 237, 238, 269, 270], "vector": [6, 15, 26, 30, 34, 36, 39, 43, 44, 54, 60, 65, 66, 67, 74, 75, 81, 83, 88, 93, 95, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 137, 138, 151, 160, 162, 167, 170, 177, 178, 179, 186, 191, 194, 199, 209, 215, 217, 219, 224, 225, 230, 231, 245, 249, 254, 258, 260, 271], "dynamicsymbol": [6, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 175, 178, 179, 180, 181, 182, 183], "custom": [6, 10, 20, 34, 44, 52, 56, 59, 80, 83, 88, 108, 109, 174, 179, 180, 201, 205, 212, 219, 225, 231, 238, 244, 252, 261, 269, 271], "sine": [6, 19, 52, 58, 60, 77, 79, 139, 196, 202, 208, 264], "expand": [6, 10, 11, 12, 15, 17, 34, 54, 56, 57, 58, 60, 77, 79, 83, 102, 115, 117, 132, 146, 154, 157, 164, 165, 187, 189, 191, 192, 194, 195, 196, 202, 206, 208, 209, 211, 215, 217, 218, 219, 223, 231, 238, 249, 255, 264, 269], "troubleshoot": [6, 129], "spell": [6, 10, 11, 215], "try": [6, 7, 8, 10, 11, 12, 17, 18, 19, 44, 51, 52, 56, 60, 62, 67, 77, 79, 82, 85, 88, 91, 92, 155, 157, 164, 165, 185, 189, 194, 199, 204, 206, 207, 208, 209, 211, 212, 215, 217, 238, 240, 264, 267, 270, 271, 275], "referencefram": [6, 107, 108, 109, 110, 112, 115, 117, 118, 119, 122, 123, 124, 127, 128, 129, 130, 132, 133, 176, 177, 178, 179, 180, 181, 182], "though": [6, 11, 12, 17, 18, 19, 25, 35, 52, 53, 54, 64, 68, 77, 79, 83, 88, 92, 106, 110, 117, 127, 129, 160, 174, 175, 182, 183, 187, 189, 190, 195, 196, 208, 209, 211, 215, 216, 217, 218, 230, 250, 265, 270, 275], "frame": [6, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 132, 133, 174, 175, 176, 177, 178, 180, 181, 182, 234, 244, 250], "notimplementederror": [6, 32, 51, 62, 65, 69, 79, 88, 100, 188, 194, 198, 207, 214, 215, 216, 217, 218], "outsid": [6, 22, 30, 43, 52, 60, 63, 68, 83, 92, 106, 170, 183, 195, 211, 265, 270], "plot": [6, 19, 24, 61, 62, 64, 65, 68, 75, 80, 88, 95, 96, 101, 132, 149, 152, 158, 202, 254, 260, 261, 269, 274], "ahead": [6, 92], "submit": 6, "sub": [6, 10, 11, 12, 17, 18, 19, 22, 34, 51, 58, 60, 61, 62, 63, 64, 65, 66, 68, 79, 82, 83, 85, 88, 92, 94, 95, 96, 102, 106, 108, 115, 117, 118, 119, 122, 123, 129, 132, 162, 163, 168, 175, 184, 186, 188, 189, 190, 195, 199, 206, 207, 211, 212, 215, 216, 217, 219, 230, 231, 233, 255, 264, 265, 267], "common": [6, 7, 10, 11, 12, 17, 18, 19, 21, 22, 29, 32, 34, 43, 44, 52, 53, 58, 63, 66, 69, 79, 85, 87, 88, 92, 93, 100, 102, 107, 109, 111, 118, 125, 130, 132, 137, 170, 175, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 201, 207, 208, 209, 210, 212, 215, 219, 231, 232, 235, 237, 238, 250, 252, 255, 258, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275], "matrixcommon": [6, 85, 87, 88], "dyadic": [6, 55, 107, 112, 115, 117, 122, 124, 125, 132, 177, 179, 181, 246, 251], "shorten": 6, "highli": [7, 52, 56, 99, 189, 195, 204, 232], "aspect": [7, 17, 88, 189], "teach": [7, 44, 53, 219], "conduct": 7, "accord": [7, 12, 34, 40, 43, 44, 48, 51, 52, 53, 60, 82, 85, 88, 92, 94, 116, 125, 159, 165, 185, 190, 192, 194, 196, 212, 217, 218, 225, 230, 232, 237, 252], "survei": 7, "commonli": [7, 11, 44, 57, 60, 79, 88, 106, 182, 187, 215, 250], "encount": [7, 12, 15, 52, 79, 88, 157, 187, 192, 195, 217, 218, 232, 244, 271], "problem": [7, 10, 11, 12, 15, 17, 18, 19, 21, 22, 36, 46, 48, 52, 53, 64, 77, 79, 83, 88, 92, 95, 97, 98, 103, 106, 115, 119, 120, 123, 125, 127, 174, 182, 183, 186, 187, 191, 192, 209, 211, 212, 215, 218, 234, 237, 251, 260, 265, 267, 271], "offer": [7, 33, 34, 43, 52, 93, 106, 132, 174, 183, 189, 194, 234, 251], "bring": [7, 77, 110, 123, 188, 202, 211, 271], "greater": [7, 22, 30, 44, 52, 58, 60, 77, 81, 92, 102, 192, 195, 198, 206, 211, 215, 217, 219, 234, 237, 250, 265], "clariti": [7, 43, 178], "mission": [7, 33, 86], "ca": [7, 24, 53, 60, 79, 198, 199, 237], "dedic": [7, 34, 191, 232, 248, 250], "essenti": [7, 36, 47, 52, 56, 58, 59, 60, 77, 112, 117, 180, 181, 183, 186, 187, 190, 194, 206, 209, 247, 250, 251, 252], "element": [7, 10, 11, 12, 14, 17, 26, 29, 33, 34, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 68, 75, 77, 79, 81, 82, 83, 84, 85, 88, 91, 92, 93, 95, 96, 102, 103, 112, 132, 134, 137, 151, 162, 170, 178, 181, 183, 185, 186, 187, 188, 190, 191, 192, 195, 197, 198, 199, 205, 206, 207, 209, 211, 212, 215, 217, 218, 219, 220, 224, 231, 233, 234, 237, 238, 239, 246, 265, 270, 271, 274, 275], "deviat": [7, 138, 219], "advanc": [7, 14, 16, 19, 28, 43, 52, 56, 57, 88, 89, 125, 130, 181, 185, 188, 189, 191, 193, 194, 201, 208, 215, 230, 231, 232, 237, 264, 266, 268, 272, 273, 274, 275], "docutil": 7, "sourceforg": [7, 33], "net": [7, 33, 68, 193, 215, 219, 237], "ext": [7, 186, 190], "autodoc": 7, "associ": [7, 10, 11, 17, 33, 35, 50, 52, 53, 59, 60, 74, 75, 77, 81, 130, 132, 155, 163, 174, 175, 182, 183, 187, 188, 189, 190, 192, 194, 199, 207, 209, 212, 225, 239], "graphic": [7, 100], "info": [7, 12, 102, 199, 215, 216], "bear": [7, 17], "linkcod": 7, "readthedoc": [7, 80, 238], "subset": [7, 15, 17, 19, 32, 33, 36, 39, 43, 44, 50, 57, 58, 64, 75, 77, 79, 81, 92, 186, 188, 192, 194, 199, 207, 237], "modifi": [7, 11, 12, 33, 34, 43, 52, 58, 60, 92, 94, 128, 137, 185, 192, 194, 195, 196, 199, 211, 217, 218, 219, 230, 233, 234, 237, 238, 264, 269, 271], "sphinx_math_dollar": 7, "delimit": [7, 52, 199], "dollar": [7, 269], "2": [7, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 230, 231, 232, 233, 234, 237, 238, 240, 244, 245, 246, 247, 248, 249, 250, 252, 253, 264, 265, 267, 269, 270, 271, 274, 275, 276], "sphinxext": 7, "plot_direct": 7, "figur": [7, 52, 53, 62, 63, 65, 67, 68, 79, 96, 115, 160, 182, 183, 184, 185, 196, 199, 253, 275], "devel": [7, 184], "supersed": [7, 115, 132], "pep": [7, 34, 52, 82], "257": [7, 92, 217], "our": [7, 9, 10, 15, 19, 24, 34, 52, 60, 77, 88, 92, 118, 170, 182, 183, 185, 186, 188, 194, 195, 196, 199, 206, 209, 212, 215, 218, 230, 264, 267, 268, 270, 275], "introduct": [7, 10, 13, 16, 39, 43, 44, 125, 181, 190, 191, 192, 193, 199, 212, 215, 218, 251, 255, 256, 257, 261, 268, 274], "four": [7, 34, 44, 52, 56, 60, 82, 85, 92, 98, 103, 116, 125, 130, 138, 175, 185, 186, 192, 195, 199, 207, 212, 215, 217, 219, 220, 244, 245, 248], "locat": [7, 10, 44, 52, 66, 88, 92, 95, 96, 98, 109, 119, 129, 133, 178, 180, 194, 195, 199, 211, 219, 233, 242, 244, 247, 249, 251, 252], "websit": [7, 273], "advertis": 7, "serv": [7, 11, 15, 19, 28, 29, 34, 49, 52, 59, 75, 194, 215, 216, 240, 268], "initi": [7, 11, 17, 28, 43, 47, 52, 53, 54, 57, 60, 68, 70, 71, 74, 75, 76, 77, 80, 92, 94, 96, 98, 100, 102, 107, 110, 112, 114, 115, 117, 119, 124, 127, 128, 129, 132, 133, 137, 145, 154, 176, 177, 179, 183, 184, 192, 194, 195, 199, 205, 209, 211, 215, 217, 218, 224, 232, 239, 240, 244, 245, 246, 247, 248], "obtain": [7, 11, 12, 15, 22, 28, 29, 33, 35, 36, 43, 44, 45, 48, 52, 53, 55, 56, 57, 58, 60, 62, 63, 65, 66, 68, 74, 77, 79, 81, 83, 88, 91, 92, 99, 102, 125, 128, 130, 138, 160, 165, 170, 186, 187, 190, 192, 194, 195, 198, 200, 207, 208, 209, 211, 212, 215, 216, 217, 218, 237, 240, 247, 248], "technic": [7, 10, 13, 19, 23, 33, 52, 132, 151, 186, 215, 232, 237, 250, 267, 270], "place": [7, 8, 10, 11, 12, 17, 19, 22, 23, 33, 44, 45, 52, 53, 58, 68, 84, 88, 91, 92, 94, 102, 132, 133, 193, 194, 199, 200, 206, 208, 211, 215, 234, 237, 263, 264, 271, 275], "site": [7, 92, 233], "upload": [7, 92], "belong": [7, 17, 30, 33, 43, 48, 52, 75, 88, 165, 175, 182, 185, 186, 188, 189, 192, 194, 195, 206, 207, 211, 212, 218, 225], "insid": [7, 10, 11, 12, 19, 43, 44, 49, 52, 62, 63, 68, 95, 106, 108, 119, 129, 164, 165, 170, 179, 183, 195, 199, 207, 209, 212, 217, 218, 219, 221, 223, 234, 270, 271], "spars": [7, 11, 85, 87, 88, 159, 188, 191, 194, 195, 196, 219, 220, 258, 270], "substanti": [7, 93], "edit": [7, 79, 88, 92, 192, 193, 195], "arg": [7, 11, 17, 19, 22, 26, 28, 29, 30, 31, 32, 33, 34, 36, 43, 44, 46, 49, 51, 52, 53, 54, 56, 57, 59, 60, 62, 63, 65, 67, 68, 69, 74, 77, 79, 82, 83, 84, 85, 86, 88, 90, 92, 94, 102, 134, 140, 143, 145, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 175, 179, 183, 185, 188, 190, 192, 194, 195, 196, 199, 201, 202, 205, 206, 207, 208, 211, 215, 217, 218, 219, 220, 224, 225, 230, 231, 232, 233, 237, 238, 240, 244, 245], "invari": [7, 10, 19, 43, 48, 99, 102, 184, 190, 194, 195, 209, 215], "polici": [7, 8, 10, 233, 235], "5": [7, 12, 13, 17, 19, 21, 22, 26, 28, 29, 30, 32, 34, 35, 36, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 95, 97, 100, 102, 104, 105, 107, 112, 115, 117, 118, 122, 123, 124, 125, 127, 134, 138, 159, 160, 163, 165, 172, 174, 176, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 224, 225, 230, 231, 237, 238, 244, 246, 248, 250, 252, 253, 264, 265, 267, 270, 271, 274, 275], "center": [7, 15, 32, 43, 51, 52, 62, 66, 68, 69, 79, 88, 107, 109, 112, 115, 117, 122, 124, 126, 130, 132, 138, 182, 185, 194, 199, 207, 253], "resid": 7, "standalon": [7, 132], "restructur": 7, "appli": [7, 10, 11, 18, 19, 26, 27, 28, 29, 30, 34, 43, 44, 45, 50, 51, 52, 53, 54, 55, 58, 59, 62, 67, 68, 70, 78, 79, 82, 83, 84, 88, 92, 94, 95, 96, 98, 102, 103, 107, 108, 117, 120, 127, 129, 131, 142, 146, 149, 150, 154, 157, 158, 162, 165, 175, 183, 185, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 205, 206, 207, 208, 210, 211, 215, 216, 217, 218, 219, 220, 223, 230, 233, 237, 244, 245, 248, 271, 274, 275], "surround": [7, 52, 69, 138, 207, 240], "nu": [7, 12, 60, 79, 92, 166, 187, 199, 211, 219, 225, 269], "equat": [7, 11, 12, 15, 20, 32, 34, 48, 51, 52, 54, 58, 60, 62, 65, 66, 70, 74, 75, 76, 77, 80, 83, 88, 95, 102, 104, 106, 109, 110, 111, 114, 115, 117, 118, 119, 120, 122, 124, 125, 126, 131, 132, 133, 134, 138, 169, 174, 178, 179, 182, 183, 184, 185, 186, 191, 192, 193, 194, 197, 198, 199, 205, 209, 211, 213, 214, 216, 224, 244, 248, 249, 253, 265, 266, 269], "strip": [7, 53, 79, 92, 192, 235, 240], "out": [7, 12, 17, 18, 19, 33, 34, 43, 44, 52, 53, 54, 57, 60, 68, 77, 79, 85, 88, 92, 95, 102, 103, 115, 117, 119, 122, 132, 142, 146, 157, 160, 162, 164, 165, 186, 187, 189, 190, 194, 195, 196, 197, 199, 200, 206, 209, 211, 215, 220, 230, 232, 237, 238, 267, 269, 270, 274, 275], "unimport": 7, "bullet": 7, "avoid": [7, 8, 10, 11, 18, 19, 34, 35, 52, 53, 58, 77, 79, 82, 88, 91, 94, 119, 129, 159, 182, 183, 187, 189, 195, 199, 200, 207, 211, 215, 217, 219, 223, 232, 235, 238, 267, 268], "whitespac": [7, 52, 235], "invalid": [7, 12, 22, 52, 53, 94, 117, 189, 192, 207], "dx": [7, 10, 11, 15, 19, 32, 34, 48, 52, 54, 56, 60, 69, 71, 74, 75, 76, 77, 79, 88, 95, 105, 110, 111, 154, 183, 195, 196, 202, 212, 215, 216, 220, 265, 269, 274, 276], "meta": [7, 52, 215, 216], "stackexchang": [7, 62], "5020": 7, "wikibook": [7, 79, 80], "overleaf": 7, "mathematical_express": 7, "verbatim": 7, "_rewrit": 7, "_expand": 7, "difficult": [7, 17, 52, 88, 115, 196, 209, 215, 216, 218, 231, 253, 269, 275], "sentenc": [7, 82], "thumb": [7, 82, 237], "greek": [7, 11, 25, 52, 92, 94, 186, 199], "letter": [7, 11, 12, 25, 45, 52, 53, 92, 165, 199, 237, 265, 267], "\u03b1": [7, 184, 198], "alpha": [7, 12, 43, 52, 60, 79, 81, 137, 141, 144, 162, 178, 182, 183, 184, 190, 192, 194, 195, 198, 199, 211, 215, 219], "logarithm": [7, 12, 26, 32, 34, 52, 53, 58, 59, 77, 79, 88, 92, 190, 192, 196, 199, 209, 211, 218, 219, 266], "italic": 7, "emphasi": [7, 189], "asterisk": 7, "stirl": [7, 44, 59, 237], "fals": [7, 11, 12, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 77, 79, 80, 82, 83, 84, 85, 88, 89, 92, 94, 95, 96, 100, 102, 104, 105, 108, 110, 111, 112, 115, 117, 118, 122, 123, 124, 126, 127, 128, 129, 130, 133, 137, 149, 150, 154, 157, 162, 163, 164, 165, 168, 172, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 211, 212, 214, 215, 216, 217, 218, 219, 224, 225, 228, 230, 231, 232, 233, 237, 238, 240, 244, 246, 267, 270, 271, 274], "permut": [7, 35, 37, 39, 40, 42, 45, 48, 49, 50, 53, 57, 60, 83, 85, 88, 111, 165, 184, 188, 190, 195, 212, 220, 221, 225, 237, 275], "cycl": [7, 10, 34, 40, 43, 44, 50, 52, 55, 57, 83, 92, 139, 207, 237], "partit": [7, 39, 43, 59, 92, 119, 129, 131, 219, 234, 236], "reduc": [7, 12, 18, 22, 27, 29, 31, 35, 48, 52, 53, 55, 57, 58, 60, 67, 68, 77, 79, 88, 92, 102, 103, 129, 147, 165, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 237, 271], "ge": [7, 17, 57, 58, 60, 77, 83, 88, 92, 184, 187, 192, 209, 237], "consecut": [7, 34, 43, 48, 51, 53, 57, 68, 211, 217], "group": [7, 33, 38, 39, 44, 45, 48, 49, 50, 52, 55, 57, 81, 82, 92, 144, 153, 154, 165, 184, 185, 186, 194, 195, 211, 215, 217, 218, 225, 237], "pairwis": [7, 30, 33, 52, 57, 69, 88, 92, 212, 217], "ital": [7, 199], "last": [7, 8, 10, 12, 14, 15, 17, 18, 19, 22, 27, 28, 29, 33, 34, 35, 42, 43, 44, 48, 51, 52, 53, 56, 62, 79, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 102, 114, 126, 137, 170, 184, 185, 186, 187, 189, 190, 192, 195, 198, 199, 206, 207, 212, 215, 217, 218, 219, 220, 225, 228, 230, 231, 232, 233, 235, 237, 238, 240, 265, 267, 270, 271], "talk": [7, 13, 23, 53, 186, 194, 247], "handl": [7, 15, 17, 18, 19, 32, 40, 44, 52, 58, 79, 80, 82, 87, 92, 93, 94, 95, 103, 106, 115, 129, 145, 148, 154, 155, 160, 189, 195, 196, 205, 211, 213, 215, 217, 220, 223, 231, 237, 238, 240, 255, 270, 275], "referenc": [7, 8, 36, 41, 92, 114, 117, 162, 194], "overlin": [7, 17, 60], "normal": [7, 10, 12, 17, 18, 19, 22, 26, 29, 34, 43, 51, 52, 56, 58, 62, 65, 66, 67, 79, 80, 82, 86, 87, 88, 92, 94, 104, 106, 109, 115, 117, 123, 132, 138, 149, 159, 162, 163, 164, 165, 166, 170, 173, 175, 183, 186, 189, 190, 191, 192, 194, 195, 199, 200, 202, 207, 208, 212, 215, 219, 224, 230, 235, 237, 244, 258], "assign": [7, 17, 33, 34, 35, 48, 52, 68, 79, 81, 82, 88, 94, 110, 115, 122, 132, 170, 180, 183, 185, 187, 192, 199, 217, 218, 225, 232, 247, 250, 267], "structur": [7, 10, 11, 14, 17, 19, 31, 33, 34, 40, 43, 44, 50, 52, 77, 79, 82, 83, 88, 95, 96, 98, 114, 125, 163, 165, 185, 186, 189, 192, 194, 195, 196, 211, 213, 215, 217, 218, 219, 223, 224, 232, 234, 237, 238, 267, 275], "suggest": [7, 10, 35, 43, 79, 88, 92, 115, 197, 271], "american": [7, 38, 53], "color": [7, 80, 100, 179, 199, 230, 237, 261, 274], "colour": 7, "quotat": 7, "line_color": [7, 185, 202], "aesthet": [7, 11, 185], "ariti": [7, 185], "term": [7, 10, 11, 12, 15, 17, 19, 34, 43, 52, 53, 54, 56, 57, 58, 60, 71, 75, 76, 77, 79, 82, 83, 88, 92, 96, 100, 102, 108, 110, 117, 119, 122, 125, 127, 129, 130, 144, 149, 161, 162, 165, 167, 170, 175, 177, 180, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 199, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 223, 224, 237, 244, 246, 250, 255, 265, 267, 269, 270, 275], "unrestrict": [7, 41, 237], "necklac": [7, 237], "bracelet": [7, 237], "impli": [7, 11, 12, 17, 26, 30, 34, 43, 82, 165, 185, 190, 192, 199, 207, 209, 215, 220, 223, 224, 237, 250], "turn": [7, 10, 11, 17, 34, 52, 58, 60, 67, 77, 86, 123, 127, 180, 186, 194, 196, 199, 206, 207, 209, 211, 212, 215, 230, 237, 252, 267, 269], "sequenc": [7, 12, 32, 34, 36, 39, 42, 43, 44, 48, 50, 51, 52, 53, 55, 57, 60, 62, 65, 66, 67, 68, 69, 72, 76, 82, 83, 85, 88, 91, 92, 132, 138, 164, 165, 190, 193, 195, 199, 201, 203, 206, 208, 209, 211, 212, 215, 216, 218, 225, 228, 231, 232, 237, 239, 240], "revers": [7, 36, 41, 44, 51, 52, 53, 58, 79, 80, 82, 88, 92, 102, 164, 175, 179, 186, 188, 192, 195, 196, 199, 200, 207, 211, 215, 237, 275], "ambigu": [7, 10, 12, 52, 153, 159, 211, 223, 228], "person": [7, 11], "chebyshev": [7, 32, 52, 79, 192, 195], "pafnuti": 7, "lvovich": 7, "tchebychev": 7, "whose": [7, 11, 17, 19, 33, 35, 36, 41, 44, 51, 52, 53, 58, 62, 66, 68, 69, 75, 79, 82, 88, 92, 112, 127, 137, 160, 170, 176, 177, 180, 183, 187, 188, 190, 194, 195, 206, 207, 211, 215, 216, 217, 219, 225, 230, 234, 237, 238, 244, 246, 248, 250], "transliter": 7, "russian": 7, "chebyshevt": [7, 60, 199], "orthogonalpolynomi": 7, "t_n": [7, 57, 60, 79, 192, 248], "tens": 7, "inclus": [7, 51, 98, 158, 186, 205, 206, 207, 218], "pronoun": 7, "gender": 7, "neutral": 7, "he": [7, 57, 77, 192], "she": [7, 218], "extran": [7, 215], "belittl": 7, "obvious": [7, 35, 43, 168, 182, 189, 209], "easili": [7, 10, 17, 19, 24, 52, 53, 75, 77, 88, 92, 93, 127, 163, 182, 195, 198, 199, 204, 211, 212, 215, 217, 218, 231, 269], "straightforward": [7, 19, 43, 53, 88, 209], "unwelcom": 7, "judgement": 7, "phrase": [7, 11, 53], "friendli": [7, 34, 77, 232], "mistak": [7, 12, 22, 43, 238], "goe": [8, 19, 23, 88, 206, 209, 218, 267, 270], "content": [8, 13, 34, 52, 53, 87, 187, 190, 192, 195, 198, 199, 227, 232, 235, 236, 255, 256, 257, 258, 259, 260, 261, 262, 266, 268], "setup": [8, 34, 52, 118, 119, 120, 126, 134, 175, 192, 195, 197, 198, 209, 230, 231, 233, 243, 274], "depend": [8, 10, 11, 12, 17, 19, 22, 24, 32, 34, 35, 43, 44, 51, 52, 53, 54, 57, 58, 60, 64, 69, 76, 77, 79, 80, 81, 88, 92, 93, 94, 100, 104, 107, 110, 111, 114, 115, 117, 119, 125, 127, 137, 138, 139, 154, 163, 165, 167, 170, 179, 180, 185, 187, 190, 191, 192, 194, 195, 196, 199, 200, 205, 209, 211, 212, 215, 216, 217, 218, 219, 230, 231, 232, 233, 237, 238, 250, 252, 253, 267, 269], "document": [8, 10, 11, 16, 19, 28, 29, 30, 43, 48, 52, 53, 58, 59, 60, 64, 74, 77, 78, 80, 85, 88, 93, 96, 106, 110, 125, 127, 128, 130, 132, 140, 154, 160, 174, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 195, 199, 209, 213, 215, 217, 218, 228, 230, 232, 233, 235, 237, 244, 250, 251, 254, 265, 267, 268, 274, 275], "auto": [8, 12, 32, 52, 53, 80, 185, 192, 195, 199, 211, 215, 219], "rebuild": [8, 11, 19, 52, 195, 270], "live": [8, 25, 35, 132, 194, 212], "server": 8, "debug": [8, 34, 52, 79, 117, 154, 230, 231, 240], "incompat": 8, "pick": [9, 17, 53, 57, 129, 159, 161, 275], "ignor": [10, 12, 19, 34, 43, 52, 53, 57, 58, 62, 67, 77, 82, 88, 92, 102, 108, 117, 162, 165, 175, 185, 195, 199, 200, 211, 217, 231, 275], "regex": 10, "categori": [10, 186, 254, 261], "lead": [10, 11, 17, 18, 19, 51, 52, 58, 62, 79, 82, 88, 92, 104, 111, 149, 175, 183, 187, 190, 192, 194, 195, 196, 199, 206, 208, 211, 215, 218, 232, 235, 240, 268, 275], "against": [10, 17, 19, 53, 95, 115, 231], "unrel": [10, 52, 59, 187, 267], "capabl": [10, 11, 17, 32, 34, 52, 56, 64, 77, 92, 95, 96, 125, 132, 185, 196, 199, 218, 268, 269, 275, 276], "w": [10, 12, 34, 36, 42, 51, 52, 53, 54, 55, 58, 60, 77, 79, 82, 88, 89, 109, 112, 123, 130, 131, 134, 139, 150, 154, 163, 178, 180, 181, 184, 185, 187, 188, 192, 193, 194, 195, 196, 200, 206, 207, 209, 211, 212, 215, 216, 218, 219, 230, 238, 240, 250, 276], "pythonwarn": 10, "NOT": [10, 82, 102, 145, 149, 164, 167, 228, 231], "blog": [10, 19, 34, 57, 83, 212, 218], "post": [10, 17, 22, 34, 46, 52, 199, 200, 211, 230, 270], "ned": 10, "batcheld": 10, "pars": [10, 44, 52, 85, 115, 126, 196, 198, 254, 262], "comprehens": [10, 17, 22, 193, 207, 219, 264], "additional_transl": 10, "recogn": [10, 12, 52, 53, 57, 67, 92, 95, 103, 187, 190, 198, 207, 208, 217, 224, 267], "logic": [10, 11, 17, 19, 27, 28, 29, 30, 33, 52, 54, 77, 79, 92, 157, 159, 160, 164, 199, 201, 207, 215, 219, 237, 267, 268, 269, 271], "node": [10, 11, 32, 46, 52, 79, 94, 98, 108, 141, 166, 175, 184, 189, 199, 206, 218, 223, 234, 256, 270, 274], "suppos": [10, 18, 19, 44, 51, 52, 53, 77, 186, 188, 192, 194, 195, 199, 206, 209, 215, 217, 228, 237, 248, 253, 267, 269, 275], "maximum": [10, 12, 22, 32, 34, 35, 43, 44, 52, 58, 79, 88, 92, 95, 117, 162, 170, 185, 190, 192, 195, 199, 206, 207, 211, 212, 215, 218, 219, 234, 237], "multipli": [10, 12, 26, 30, 34, 43, 52, 63, 67, 74, 81, 83, 88, 92, 110, 119, 128, 129, 130, 142, 151, 165, 170, 171, 186, 187, 188, 190, 192, 194, 195, 199, 201, 208, 209, 212, 215, 220, 237, 247, 267, 270], "max": [10, 34, 43, 44, 52, 59, 60, 62, 79, 88, 92, 94, 95, 185, 194, 195, 199, 206, 208, 209, 238], "min": [10, 44, 48, 52, 57, 59, 88, 94, 185, 194, 199, 205, 215], "is_perfect_squar": 10, "ntheori": [10, 30, 43, 52, 53, 192, 195, 212, 237, 259], "primetest": [10, 52, 92], "is_squar": [10, 52, 83, 92], "is_prim": [10, 17, 52, 186], "isprim": [10, 30, 53, 92], "divid": [10, 11, 43, 51, 52, 53, 68, 88, 92, 169, 170, 187, 189, 190, 192, 194, 195, 199, 215, 234, 270], "bottom_up": 10, "interactive_travers": 10, "postorder_travers": [10, 270], "preorder_travers": [10, 270], "refactor": [10, 215, 223, 234], "tr": [10, 35, 43, 199, 208], "quantum": [10, 104, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 184, 260], "ever": [10, 11, 19, 58, 183, 186, 195, 209, 215, 232, 235, 270], "helper": [10, 32, 34, 43, 47, 50, 52, 77, 80, 81, 150, 152, 161, 196, 206, 209, 212, 215, 216, 218, 231, 262], "default_sort_kei": [10, 33, 41, 223], "matrixel": [10, 34], "matrixsymbol": [10, 14, 17, 30, 31, 34, 52, 83, 85, 88, 199, 219, 221], "layer": [10, 102, 192, 238], "imprecis": 10, "free_symbol": [10, 11, 34, 52, 61, 79, 83, 154, 172, 175, 195, 205, 212], "sinc": [10, 11, 12, 14, 15, 17, 18, 19, 27, 32, 34, 35, 43, 44, 45, 48, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 64, 65, 68, 70, 76, 77, 79, 81, 82, 83, 88, 92, 105, 117, 130, 132, 141, 165, 166, 170, 174, 180, 183, 186, 187, 189, 190, 192, 194, 195, 199, 202, 207, 208, 209, 211, 212, 215, 217, 218, 219, 225, 229, 233, 234, 235, 237, 238, 242, 247, 249, 250, 252, 264, 269, 271, 274, 275, 276], "atomicexpr": 10, "concept": [10, 11, 17, 43, 117, 183, 189, 191, 194, 199, 218, 223, 252, 268, 273], "misappli": 10, "noth": [10, 33, 43, 52, 65, 79, 149, 165, 186, 190, 198, 199, 211, 215, 217, 228, 230, 238, 240, 267], "introduc": [10, 18, 48, 51, 52, 60, 77, 88, 93, 96, 115, 117, 122, 123, 124, 128, 165, 170, 183, 190, 191, 196, 199, 206, 209, 212, 219, 235, 268, 271, 273, 275], "21494": 10, "size": [10, 15, 34, 35, 36, 41, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 80, 83, 85, 88, 91, 92, 100, 117, 127, 128, 129, 138, 160, 161, 179, 185, 188, 192, 199, 211, 212, 215, 219, 237, 265], "die": [10, 194, 219], "arrai": [10, 19, 21, 34, 43, 44, 48, 49, 53, 60, 79, 83, 85, 88, 92, 93, 100, 132, 162, 185, 188, 190, 195, 199, 218, 219, 222, 224, 225, 226, 231, 232, 234, 238, 271], "histor": [10, 11, 19, 53, 215, 219], "21563": 10, "revert": [10, 190, 195], "sample_it": [10, 219], "consequ": [10, 19, 30, 52, 187, 189, 267, 275], "subclass": [10, 11, 17, 19, 28, 29, 34, 52, 59, 63, 65, 79, 82, 134, 140, 149, 153, 154, 155, 160, 162, 163, 185, 186, 188, 189, 190, 194, 195, 199, 219, 230, 231, 232, 235, 238, 244, 247, 270], "kei": [10, 11, 12, 27, 30, 33, 41, 43, 44, 52, 53, 54, 57, 68, 81, 83, 88, 91, 92, 95, 114, 115, 125, 157, 160, 165, 183, 185, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 211, 215, 216, 217, 219, 223, 234, 237, 238, 240, 271, 272, 275], "domainmatrix": [10, 84, 88, 191, 194, 197], "switch": [10, 43, 50, 79, 92, 102, 192, 195], "21402": 10, "earlier": [10, 106, 196, 200, 209, 211, 238, 248, 250, 270], "could": [10, 11, 12, 15, 17, 19, 22, 29, 34, 45, 52, 64, 77, 79, 82, 112, 115, 125, 129, 165, 168, 170, 186, 189, 192, 194, 196, 199, 207, 209, 211, 215, 216, 217, 218, 219, 220, 223, 224, 231, 235, 248, 249, 267, 270, 275], "traceback": [10, 12, 14, 17, 18, 19, 22, 27, 28, 29, 34, 35, 44, 52, 53, 56, 62, 79, 82, 83, 84, 85, 86, 88, 90, 91, 94, 102, 184, 186, 189, 190, 192, 195, 198, 206, 207, 215, 217, 218, 228, 230, 231, 233, 235, 237, 238, 240, 267, 271], "typeerror": [10, 12, 18, 19, 22, 27, 28, 29, 44, 52, 62, 67, 82, 84, 86, 90, 102, 139, 206, 207, 231, 238], "unsupport": [10, 12, 14, 102, 199], "operand": [10, 12, 44, 52, 176, 194, 246], "dict": [10, 12, 17, 34, 44, 53, 54, 68, 69, 82, 83, 88, 92, 94, 110, 111, 145, 157, 160, 171, 173, 175, 185, 188, 189, 190, 192, 194, 195, 196, 197, 199, 211, 212, 215, 216, 217, 218, 219, 223, 230, 231, 237, 244, 276], "solve_lin_si": [10, 191], "heurisch": [10, 79], "smith_normal_form": [10, 89, 188], "newmatrix": 10, "holonom": [10, 73, 76, 116, 117, 118, 119, 125, 127, 128, 254, 261], "polymatrix": 10, "risch": [10, 79, 265], "broken": [10, 41, 52, 182, 199, 215, 240], "20780": 10, "20759": 10, "20621": 10, "19882": 10, "18844": 10, "21441": 10, "21427": 10, "21496": 10, "potenti": [10, 17, 64, 85, 88, 92, 110, 111, 112, 114, 124, 125, 176, 181, 189, 194, 206, 209, 211, 215, 217, 233, 234, 246, 251, 252], "impact": 10, "downstream": [10, 17], "goal": [10, 11, 33, 106, 133, 194, 196, 230, 231, 233, 268, 269], "perhap": [10, 34, 52, 82, 92, 150, 189, 217, 232, 264], "tableform": [10, 240], "isn": [10, 19, 79, 106, 115, 218, 269], "advis": [10, 17, 33, 115], "usecas": 10, "unclear": [10, 17, 106], "line2dbaseseri": [10, 185], "coordin": [10, 26, 34, 53, 54, 58, 60, 61, 63, 67, 69, 85, 88, 95, 98, 100, 104, 109, 110, 111, 114, 115, 116, 117, 118, 120, 122, 125, 126, 127, 128, 131, 133, 141, 143, 162, 163, 166, 174, 175, 176, 177, 178, 180, 183, 186, 194, 195, 207, 215, 244, 245, 246, 249, 251, 253, 261], "linecollect": [10, 185], "bokeh": 10, "plotli": 10, "mayavi": 10, "k3d": 10, "matplotlibbackend": [10, 185], "get_point": [10, 185], "uniformli": [10, 15, 43, 68, 69, 95, 100, 185, 233], "adapt": [10, 100, 185, 205, 217, 237, 243], "get_data": [10, 185, 241], "dft": [10, 55, 105], "fourier": [10, 52, 60, 79, 105, 158, 203], "as_explicit": [10, 85, 88, 105, 221], "exp": [10, 11, 12, 17, 19, 26, 32, 34, 42, 51, 52, 54, 56, 57, 59, 60, 70, 71, 74, 77, 79, 83, 85, 88, 92, 104, 141, 144, 160, 166, 184, 189, 190, 195, 196, 199, 201, 206, 209, 211, 215, 216, 217, 218, 219, 220, 237, 253, 265, 269, 271, 276], "discret": [10, 32, 34, 35, 42, 44, 52, 53, 60, 92, 165, 170, 201, 204, 215, 217, 218, 255, 264], "transform": [10, 11, 26, 31, 34, 48, 51, 52, 53, 54, 56, 57, 60, 67, 78, 85, 88, 100, 102, 117, 137, 158, 160, 162, 167, 187, 190, 192, 194, 195, 201, 206, 207, 208, 211, 212, 215, 216, 217, 218, 219, 224, 232, 238, 244, 250, 251, 255, 262, 269], "unevalu": [10, 11, 17, 18, 19, 28, 29, 32, 44, 51, 52, 58, 60, 69, 79, 92, 102, 142, 146, 153, 154, 165, 195, 198, 206, 207, 211, 215, 217, 218, 219, 265, 269, 270, 276], "represent": [10, 11, 19, 22, 26, 33, 34, 35, 43, 46, 52, 53, 60, 64, 72, 74, 76, 77, 79, 81, 82, 83, 84, 85, 91, 92, 99, 100, 105, 106, 107, 114, 125, 129, 130, 134, 154, 159, 160, 162, 163, 165, 167, 174, 179, 180, 182, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 209, 211, 212, 215, 218, 219, 224, 225, 240, 244, 246, 253, 265, 267, 270], "21626": 10, "expos": [10, 33, 219], "mutat": [10, 102, 188, 190, 219], "flat": [10, 66, 83, 231], "todok": [10, 83], "ey": [10, 83, 84, 85, 86, 87, 88, 90, 188, 194, 220, 240, 271], "converg": [10, 34, 51, 56, 60, 78, 79, 92, 134, 195, 202, 206, 209, 265], "legacy_matrix": [10, 79], "discontinu": [10, 32, 56, 58, 60, 79, 95, 202], "theano_cod": 10, "aesara_cod": [10, 199], "theanoprint": 10, "aesaraprint": [10, 199], "predic": [10, 11, 27, 28, 32, 94, 195, 211, 237, 255], "experienc": [10, 35], "big": [10, 12, 15, 17, 36, 52, 54, 92, 132, 145, 184, 198, 199, 206, 240, 265, 267], "registr": 10, "add_handl": 10, "remove_handl": [10, 27], "multipledispatch": [10, 27], "regist": [10, 27, 28, 29, 53, 161], "register_mani": [10, 28, 29], "askprimehandl": 10, "staticmethod": [10, 230], "register_handl": [10, 27], "prime": [10, 17, 27, 28, 29, 43, 50, 51, 52, 53, 55, 57, 60, 92, 136, 186, 187, 189, 190, 191, 192, 195, 209, 211, 212, 219, 234], "Not": [10, 11, 18, 19, 52, 57, 82, 102, 199, 218, 219, 237, 269, 276], "primepred": [10, 30], "q": [10, 11, 12, 14, 17, 25, 26, 27, 28, 29, 30, 31, 34, 44, 48, 51, 52, 53, 60, 69, 74, 75, 77, 79, 81, 83, 88, 94, 95, 102, 103, 109, 110, 111, 114, 115, 117, 119, 124, 127, 128, 129, 132, 133, 134, 145, 159, 165, 168, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 189, 190, 192, 194, 195, 196, 198, 199, 201, 209, 212, 215, 217, 219, 224, 225, 240, 244, 246, 247, 249, 252, 259, 271, 275], "20209": 10, "stochast": 10, "timestamp": 10, "wienerprocess": [10, 219], "normaldistribut": [10, 219], "20078": 10, "misspel": 10, "absorbing_prob": [10, 219], "absorb": [10, 11, 77, 215, 219, 265], "probabilit": [10, 219], "shutil": 10, "power": [10, 12, 26, 31, 34, 42, 43, 44, 53, 55, 56, 58, 74, 75, 77, 79, 81, 83, 85, 92, 93, 102, 115, 132, 137, 148, 151, 164, 167, 170, 171, 175, 186, 187, 189, 190, 191, 192, 194, 195, 199, 200, 203, 206, 208, 210, 212, 215, 217, 218, 219, 223, 232, 237, 255, 257, 264, 265, 266, 267, 268, 270, 271, 274], "immut": [10, 11, 52, 84, 87, 90, 183, 190, 215, 220, 258, 264, 271], "coordsystem": [10, 54], "explicit": [10, 11, 17, 19, 22, 44, 51, 52, 56, 68, 69, 79, 91, 92, 114, 115, 119, 129, 133, 183, 186, 195, 198, 199, 201, 207, 209, 215, 216, 217, 218, 222, 234], "appropi": 10, "patch": [10, 54, 199], "real": [10, 11, 12, 14, 15, 17, 18, 19, 22, 26, 28, 29, 31, 32, 34, 44, 52, 53, 54, 56, 57, 58, 59, 60, 64, 68, 69, 74, 77, 79, 82, 83, 85, 88, 92, 94, 98, 104, 115, 132, 134, 137, 138, 145, 163, 177, 184, 187, 190, 191, 194, 195, 196, 199, 200, 202, 206, 209, 211, 214, 215, 217, 218, 219, 224, 228, 232, 241, 269, 275, 276], "similarli": [10, 17, 48, 52, 53, 60, 64, 88, 95, 96, 102, 110, 130, 185, 186, 189, 194, 196, 206, 207, 209, 215, 230, 238, 248, 249, 271], "manifold": [10, 54], "track": [10, 12, 43, 52, 56, 60, 114, 126, 130, 149, 183, 206, 225, 265], "coord_system": 10, "connect_to": 10, "coord_tuple_transform_to": [10, 54], "constructor": [10, 11, 19, 28, 29, 33, 34, 39, 43, 44, 45, 52, 59, 60, 81, 86, 88, 119, 158, 159, 163, 167, 185, 186, 188, 189, 190, 191, 199, 207, 215, 224, 232, 247, 266, 270], "str": [10, 11, 19, 28, 33, 34, 35, 44, 52, 53, 54, 56, 61, 62, 65, 68, 69, 80, 82, 85, 92, 94, 100, 109, 110, 112, 132, 149, 159, 165, 175, 177, 178, 185, 190, 194, 199, 211, 215, 219, 235, 237, 238, 240, 244], "unord": [10, 12, 52, 92, 190, 218, 237, 238], "lambidfi": 10, "guess": [10, 33, 53, 56, 77, 80, 179, 192, 195, 209, 212, 270], "construct": [10, 15, 28, 29, 33, 34, 39, 52, 54, 58, 60, 62, 66, 68, 80, 85, 88, 93, 96, 106, 110, 112, 115, 117, 150, 154, 163, 164, 167, 171, 186, 189, 190, 192, 194, 195, 199, 212, 217, 219, 220, 222, 224, 232, 234, 235, 247, 249, 250, 267, 270, 271, 275], "superclass": [10, 11, 17, 51, 52, 79, 85, 190], "scalar": [10, 26, 52, 54, 67, 81, 83, 85, 88, 93, 112, 115, 164, 175, 176, 177, 181, 183, 186, 188, 192, 199, 215, 220, 232, 238, 244, 245, 246, 247, 248, 249, 251, 253], "boolean": [10, 11, 19, 20, 27, 28, 29, 30, 31, 32, 34, 52, 58, 62, 66, 67, 68, 69, 80, 83, 88, 89, 92, 95, 100, 102, 150, 175, 177, 179, 185, 188, 190, 192, 194, 196, 199, 211, 215, 217, 219, 237, 246, 257, 271], "sens": [10, 11, 15, 17, 19, 26, 30, 32, 33, 52, 54, 57, 60, 77, 82, 110, 117, 170, 175, 183, 186, 192, 194, 208, 209, 211, 218, 219, 231, 232, 237, 252, 275], "exponenti": [10, 12, 17, 26, 34, 43, 48, 52, 53, 57, 59, 79, 82, 83, 88, 92, 94, 151, 167, 196, 211, 218, 219, 266, 267, 271], "trick": [10, 11, 12, 48, 209, 225], "treat": [10, 11, 17, 18, 19, 42, 43, 50, 52, 57, 60, 67, 68, 88, 94, 112, 115, 138, 175, 180, 187, 189, 190, 192, 194, 195, 196, 198, 199, 206, 207, 209, 211, 212, 215, 223, 231, 234, 250, 267, 271], "cdot": [10, 17, 35, 51, 57, 60, 70, 74, 75, 77, 83, 85, 88, 92, 103, 105, 130, 170, 180, 182, 183, 184, 186, 187, 195, 202, 206, 209, 215, 217, 220, 221, 249, 250, 269, 270, 275], "attributeerror": [10, 17, 52, 88, 218, 238, 271], "as_coeff_mul": [10, 52, 77, 85], "tri": [10, 11, 12, 17, 22, 33, 52, 60, 68, 77, 79, 117, 129, 160, 186, 187, 194, 199, 201, 211, 215, 216, 218, 230, 267, 275], "benchmark": [10, 117, 131], "runtest": [10, 230], "tmpfile": 10, "random_complex_numb": 10, "verify_numer": 10, "test_derivative_numer": 10, "_randrang": [10, 53], "_randint": [10, 192], "as_poli": [10, 52, 187, 195], "as_expr": [10, 52, 88, 189, 194, 195, 196, 271], "combintor": 10, "perm_cycl": [10, 44, 199], "printer": [10, 11, 19, 44, 52, 60, 80, 88, 93, 179, 224, 231, 232, 238, 256, 262, 266, 270], "init_print": [10, 24, 34, 44, 56, 79, 80, 88, 96, 179, 186, 187, 198, 265, 269, 271, 274, 275, 276], "problemat": [10, 19, 189], "affect": [10, 17, 19, 51, 52, 88, 174, 195, 218, 248], "18056": 10, "15416": 10, "100x": 10, "slowdown": [10, 56], "significantli": [10, 34, 56, 106, 127, 190, 201, 231, 234], "slower": [10, 19, 48, 88, 189, 194, 238, 264], "_sympifi": [10, 52, 85, 270], "strict": [10, 11, 43, 44, 52, 56, 57, 83, 88, 192, 195, 217, 237, 240, 275], "lot": [10, 43, 52, 70, 77, 79, 88, 115, 132, 185, 198, 202, 212, 218, 230, 275], "secur": 10, "whatev": [10, 12, 19, 43, 52, 53, 211, 215, 216, 218, 238], "__repr__": [10, 199], "12524": 10, "repr": [10, 34, 79, 159, 189, 194, 199, 230, 274], "plenti": 10, "_sympy_": [10, 52], "disabl": [10, 11, 52, 53, 77, 79, 92, 192, 195, 199, 207, 215, 217, 228, 230, 233, 237], "constant": [10, 11, 32, 34, 51, 52, 56, 58, 60, 76, 77, 79, 95, 96, 102, 114, 115, 117, 132, 133, 142, 146, 152, 168, 169, 171, 172, 173, 176, 178, 180, 185, 187, 190, 192, 194, 195, 196, 199, 201, 206, 209, 211, 212, 215, 216, 217, 218, 219, 230, 232, 237, 238, 246, 250, 253, 265, 271, 276], "lh": [10, 34, 42, 52, 197, 199, 215, 217, 218, 249], "tensexpr": [10, 103, 225], "substitute_indic": 10, "danger": [10, 187], "tensor_head": [10, 103, 225], "had": [10, 19, 22, 44, 52, 53, 88, 92, 115, 129, 194, 195, 196, 199, 207, 209, 215, 217, 218, 233, 238, 264, 267, 270, 271], "shorter": [10, 52, 62, 106, 127, 174, 186, 190, 199, 232, 240], "creation": [10, 12, 19, 52, 54, 88, 107, 112, 122, 125, 126, 127, 128, 129, 139, 149, 153, 154, 155, 165, 182, 183, 199, 219, 224, 232, 238], "_dummy_fmt": 10, "l_": [10, 79, 88], "obsolet": 10, "dummy_nam": [10, 225], "clearer": [10, 247], "metric_symmetri": [10, 225], "set_metr": [10, 225], "delta": [10, 12, 34, 36, 46, 57, 60, 75, 77, 81, 100, 129, 137, 165, 199, 206, 212, 215, 219, 220, 225], "epsilon": [10, 12, 51, 53, 60, 77, 79, 136, 199, 225], "latter": [10, 14, 19, 34, 43, 52, 57, 60, 77, 92, 186, 190, 194, 199, 209, 212, 225, 232, 237, 238, 267], "involv": [10, 12, 15, 17, 22, 29, 31, 43, 51, 52, 53, 57, 64, 65, 77, 79, 92, 102, 107, 110, 115, 144, 154, 160, 162, 172, 182, 183, 186, 187, 190, 192, 194, 195, 196, 200, 201, 206, 207, 208, 209, 211, 212, 215, 217, 220, 238, 275], "obscur": [10, 17], "young": [10, 95, 225], "tableau": 10, "favor": 10, "tensorindex": [10, 225], "tensor_indic": [10, 103, 225], "denot": [10, 11, 12, 15, 43, 44, 52, 54, 60, 74, 75, 77, 79, 81, 82, 83, 88, 92, 94, 102, 170, 175, 180, 185, 186, 187, 192, 194, 202, 206, 207, 209, 215, 219, 224, 225, 244, 245, 247, 248, 250, 252], "set_dimens": 10, "unit_system": [10, 172], "set_quantity_dimens": [10, 168], "set_global_dimens": 10, "set_scale_factor": 10, "set_quantity_scale_factor": [10, 168], "set_global_relative_scale_factor": [10, 172], "get_dimensional_expr": 10, "unitsystem": [10, 173], "dimension": [10, 32, 34, 36, 54, 64, 65, 66, 67, 68, 85, 88, 96, 103, 132, 139, 141, 151, 167, 169, 180, 181, 185, 186, 192, 194, 195, 198, 199, 217, 218, 220, 221, 225, 231, 252, 276], "_collect_factor_and_dimens": 10, "motiv": [10, 13, 19, 23], "emptyset": [10, 17, 22, 32, 33, 82, 199, 218, 244, 276], "is_empti": [10, 17, 44], "unknown": [10, 11, 14, 17, 18, 19, 26, 52, 53, 96, 150, 197, 214, 215, 216, 217, 218, 237, 276], "empti": [10, 11, 17, 22, 28, 32, 33, 34, 35, 43, 47, 51, 52, 64, 67, 68, 69, 82, 83, 88, 92, 110, 129, 160, 173, 190, 194, 195, 199, 205, 206, 207, 209, 215, 217, 218, 230, 232, 237, 240, 270], "individu": [10, 17, 19, 52, 58, 63, 68, 69, 81, 83, 85, 88, 102, 130, 137, 155, 159, 184, 207, 215, 230, 271], "denest": [10, 52, 195, 210, 217, 237], "particl": [10, 107, 109, 110, 115, 119, 120, 125, 127, 129, 132, 133, 141, 144, 151, 152, 163, 165, 168, 170, 182, 225], "rigidbodi": [10, 107, 110, 114, 117, 122, 123, 124, 125, 130, 132], "potential_energi": [10, 109, 110, 124, 125, 130], "energi": [10, 104, 107, 110, 112, 115, 124, 125, 141, 166, 170, 180, 225, 250, 260], "setter": [10, 115, 132], "getter": [10, 52, 115, 132], "set_": 10, "set_condit": 10, "17749": 10, "side": [10, 12, 15, 17, 34, 43, 44, 52, 64, 68, 79, 88, 92, 95, 102, 110, 114, 129, 130, 133, 153, 154, 170, 175, 184, 186, 192, 194, 197, 199, 216, 218, 219, 223, 230, 232, 253, 265], "unpack": [10, 52, 83, 88, 237, 238], "intermedi": [10, 11, 34, 35, 75, 83, 115, 117, 122, 149, 159, 167, 168, 175, 178, 182, 218, 232, 272], "emul": [10, 211, 218, 220, 238], "is_deriv": [10, 52], "as_finite_differ": [10, 32, 52, 265], "17881": 10, "get_matrix": [10, 225], "__getitem__": [10, 52, 83, 224], "__iter__": [10, 44, 52, 211], "_components_data_full_destroi": 10, "__pow__": [10, 83, 190, 196], "flaw": 10, "replace_with_arrai": [10, 225, 226], "cach": [10, 17, 57, 77, 186, 195, 199, 228, 233, 234, 255], "safe": [10, 92, 189, 195, 217, 223, 265], "squar": [10, 12, 17, 22, 26, 29, 34, 43, 52, 53, 58, 68, 69, 77, 79, 83, 84, 88, 91, 92, 95, 102, 104, 127, 128, 151, 167, 175, 184, 188, 190, 191, 192, 194, 195, 196, 199, 207, 210, 212, 215, 218, 219, 269], "jordan": [10, 77, 83, 88, 197, 217, 218], "band": [10, 83, 91], "eigenvalu": [10, 83, 88, 115, 117, 159, 162, 269], "elif": [10, 17, 18, 19], "inspect": [10, 17, 88, 194, 205, 236, 238, 262], "getsourc": [10, 238, 242], "sum": [10, 15, 17, 34, 41, 44, 51, 52, 55, 57, 60, 65, 67, 75, 77, 79, 81, 82, 83, 85, 88, 92, 112, 127, 144, 148, 151, 159, 162, 164, 165, 184, 186, 187, 189, 190, 194, 195, 196, 199, 201, 202, 204, 206, 208, 209, 211, 212, 215, 217, 218, 219, 220, 221, 223, 225, 234, 237, 255, 275], "meter": [10, 95, 96, 136, 139, 168, 170, 171, 172], "si": [10, 19, 60, 76, 77, 138, 167, 168, 170, 171, 172, 199], "cg": [10, 144, 162], "aris": [10, 17, 18, 52, 57, 77, 79, 162, 183, 189, 194], "scale": [10, 61, 62, 63, 67, 68, 69, 80, 95, 145, 166, 168, 170, 172, 173, 179, 183, 185, 202, 219, 250, 252], "kilomet": [10, 171, 172], "1000": [10, 12, 34, 36, 52, 53, 56, 85, 92, 132, 170, 171, 172, 184, 198, 199, 208], "dimensionsystem": [10, 167], "14318": 10, "duplic": [10, 12, 43, 46, 53, 58, 60, 88, 92, 207, 215, 237, 268], "flatten": [10, 33, 52, 189, 221, 226, 237, 238], "neither": [10, 17, 18, 30, 52, 139, 160, 185, 195, 206, 207, 208, 215, 225, 238, 244, 252, 275], "polymorph": 10, "anymor": [10, 185], "temporarili": [10, 52], "point3d": [10, 65, 66, 67, 138], "p1": [10, 35, 43, 44, 48, 51, 62, 64, 65, 66, 67, 68, 102, 107, 109, 119, 132, 134, 178, 185, 189, 190, 192, 196, 208, 219, 220], "p2": [10, 18, 43, 44, 51, 62, 64, 65, 66, 67, 68, 102, 107, 109, 132, 178, 185, 189, 190, 192, 196, 208, 219], "throughout": [11, 77, 82, 192, 202, 218, 267], "elsewher": [11, 17, 57, 81, 117, 188, 230], "termnam": 11, "antideriv": [11, 58, 60, 79, 215, 265], "frac": [11, 15, 17, 19, 32, 51, 52, 53, 54, 57, 59, 60, 77, 79, 88, 92, 94, 102, 119, 130, 168, 179, 180, 182, 183, 184, 188, 192, 195, 199, 201, 202, 206, 209, 212, 215, 216, 218, 219, 220, 237, 250, 252, 265, 269, 270, 274, 275], "indefinit": [11, 26, 58, 76, 77, 79, 88, 190, 192, 193, 195, 204, 265], "integr": [11, 12, 14, 21, 24, 26, 32, 44, 51, 52, 54, 57, 58, 59, 70, 71, 72, 75, 81, 83, 88, 91, 92, 102, 104, 110, 115, 125, 132, 151, 160, 163, 166, 169, 174, 176, 180, 184, 186, 189, 190, 191, 192, 195, 196, 199, 201, 202, 209, 215, 216, 219, 232, 240, 244, 246, 247, 250, 251, 255, 266, 269, 274], "primit": [11, 43, 52, 53, 60, 92, 159, 163, 186, 187, 189, 190, 192, 194, 195, 198, 199, 212, 265], "terminologi": [11, 21, 225], "tupl": [11, 19, 26, 28, 29, 32, 33, 34, 35, 43, 44, 51, 53, 54, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 74, 77, 79, 83, 88, 91, 92, 94, 95, 96, 100, 107, 109, 110, 112, 114, 127, 128, 130, 132, 134, 149, 150, 151, 154, 159, 162, 163, 164, 165, 175, 178, 183, 185, 186, 188, 189, 190, 191, 192, 196, 197, 199, 200, 201, 205, 207, 211, 212, 215, 216, 217, 218, 219, 220, 224, 225, 230, 231, 232, 233, 237, 238, 240, 244, 247, 265, 270, 271, 274], "subexpress": [11, 19, 34, 52, 83, 106, 108, 194, 195, 199, 206, 210, 218, 232, 238, 255, 264], "togeth": [11, 12, 15, 34, 43, 52, 56, 81, 88, 92, 125, 151, 162, 170, 183, 186, 190, 192, 194, 195, 198, 199, 211, 215, 217, 219, 230, 231, 237, 269, 275], "walk": [11, 34, 36, 157, 160, 209], "extract": [11, 22, 32, 52, 79, 83, 85, 88, 92, 103, 117, 125, 174, 183, 192, 194, 195, 217, 218, 219, 230, 232, 237], "rebuilt": [11, 270], "atom": [11, 34, 44, 79, 82, 83, 104, 166, 189, 196, 199, 217, 218, 224], "queri": [11, 17, 18, 19, 27, 30, 31, 32, 34, 52, 64, 195, 211, 219, 255], "is_real": [11, 17, 19, 22, 52, 54, 58, 59, 88, 177, 199, 224], "restrict": [11, 17, 19, 34, 41, 52, 53, 60, 88, 95, 96, 165, 186, 189, 194, 196, 214], "never": [11, 17, 19, 52, 58, 79, 167, 195, 196, 199, 207, 217, 219, 228, 247, 267, 268], "is_": [11, 19, 52], "leav": [11, 17, 19, 34, 52, 79, 88, 92, 111, 125, 149, 165, 206, 234, 264, 270, 275], "recurs": [11, 12, 14, 17, 19, 32, 52, 57, 77, 79, 82, 83, 92, 117, 185, 192, 195, 196, 199, 200, 203, 204, 206, 211, 217, 218, 223, 228, 230, 234, 235, 237, 266, 275], "canonic": [11, 39, 52, 208, 225], "excess": 11, "discourag": [11, 17, 52, 211], "expens": [11, 19, 52, 129, 208, 215, 216, 217, 233, 271], "matrix": [11, 14, 15, 17, 21, 26, 29, 34, 41, 44, 52, 53, 54, 60, 67, 77, 79, 81, 83, 86, 87, 90, 91, 93, 94, 102, 103, 105, 107, 109, 110, 111, 114, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 132, 133, 134, 137, 138, 140, 148, 149, 154, 159, 160, 162, 164, 165, 167, 170, 174, 175, 183, 184, 186, 188, 192, 194, 197, 199, 200, 207, 209, 211, 212, 217, 218, 220, 221, 223, 224, 225, 226, 231, 232, 237, 238, 240, 244, 245, 246, 248, 252, 258, 266, 269, 270, 275, 276], "sympifi": [11, 12, 17, 18, 34, 56, 62, 82, 130, 138, 163, 165, 175, 176, 189, 190, 255, 264, 270], "bound": [11, 30, 34, 35, 51, 52, 61, 62, 63, 65, 67, 68, 79, 92, 163, 190, 192, 194, 195, 199, 205, 215, 217, 218, 219, 224, 234, 240, 244], "dummi": [11, 34, 48, 51, 58, 77, 79, 88, 115, 132, 160, 165, 189, 190, 194, 195, 196, 205, 206, 207, 209, 211, 215, 218, 223, 225, 228, 232, 237, 238], "ration": [11, 17, 19, 27, 29, 32, 34, 51, 56, 57, 58, 60, 62, 65, 67, 69, 73, 77, 79, 80, 85, 88, 92, 94, 102, 134, 167, 184, 187, 191, 192, 193, 194, 196, 199, 203, 204, 208, 209, 211, 212, 213, 214, 217, 218, 219, 237, 244, 266, 267, 270, 274], "unequ": [11, 12, 95, 199], "accident": 11, "clash": [11, 25, 52, 88], "contrast": [11, 19, 51, 52, 119, 189, 209, 215, 269], "_eval_": 11, "_eval_deriv": [11, 19, 52, 60], "overrid": [11, 12, 34, 52, 61, 62, 68, 94, 163, 199, 224, 231, 232, 237, 238], "pre": [11, 33, 34, 52, 184, 185, 200, 208, 211, 217, 218, 230, 248, 252, 270], "dispatch": [11, 28, 29, 30, 52, 53, 160, 199, 218, 234], "shorthand": [11, 12, 17, 19, 52, 82, 159, 194, 207, 228], "stand": [11, 51, 52, 132, 187, 189, 190, 196], "reserv": [11, 17, 115, 225, 232, 271], "smaller": [11, 34, 43, 44, 52, 53, 60, 68, 79, 85, 92, 127, 187, 189, 192, 195, 202, 208, 209, 217, 237, 264, 275], "children": [11, 52, 53, 189, 234], "leaf": [11, 189, 199, 208, 270], "strictli": [11, 12, 14, 16, 17, 30, 32, 52, 60, 88, 92, 102, 192, 211, 217], "dag": 11, "map": [11, 17, 19, 32, 33, 34, 42, 43, 44, 52, 53, 64, 68, 75, 77, 79, 82, 83, 92, 100, 110, 119, 143, 154, 155, 160, 175, 183, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 206, 211, 215, 216, 217, 218, 219, 223, 224, 231, 234, 237, 238, 240, 244], "colloqui": [11, 21], "lambda": [11, 12, 19, 28, 29, 32, 34, 43, 44, 53, 54, 58, 79, 83, 84, 85, 88, 91, 92, 94, 115, 128, 129, 132, 133, 150, 185, 192, 194, 195, 199, 200, 207, 208, 211, 215, 217, 218, 219, 220, 228, 237, 238, 244, 245, 248, 264, 271], "zeta": [11, 12, 51, 52, 56, 57, 59, 190, 194, 199, 206, 219], "hyper": [11, 52, 57, 60, 71, 74, 199, 201, 209, 211, 217, 219, 275], "primepi": [11, 19, 92], "divisor_sigma": [11, 92], "undefin": [11, 19, 22, 28, 29, 32, 52, 58, 59, 60, 79, 85, 94, 107, 183, 194, 205, 206, 209, 238, 265, 276], "interchang": [11, 48, 51, 77, 215], "memori": [11, 34, 52, 92, 195, 220, 231, 234], "maintain": [11, 12, 52, 53, 92, 96, 199, 207, 208, 215, 218, 234], "mental": 11, "hidden": [11, 174], "state": [11, 15, 17, 43, 50, 52, 60, 92, 95, 102, 104, 109, 110, 111, 114, 117, 119, 133, 137, 141, 142, 144, 145, 146, 148, 149, 150, 154, 157, 159, 160, 161, 162, 164, 165, 195, 199, 208, 209, 211, 219, 234, 260, 271], "hashabl": [11, 49, 77, 237], "repl": [11, 225], "execut": [11, 17, 24, 34, 80, 83, 132, 185, 199, 215, 218, 228, 230, 232, 233, 238, 240, 243, 254, 269, 274], "idiom": [11, 241, 267, 268], "anti": [11, 26, 30, 48, 58, 79, 83, 137, 142, 225], "frown": 11, "upon": [11, 17, 34, 52, 92, 114, 117, 127, 128, 129, 132, 159, 165, 180, 182, 183, 207, 215, 224, 231, 250, 275], "lowercas": [11, 12, 215, 230, 265], "is_integ": [11, 17, 19, 52, 177, 199, 224], "capit": [11, 51, 53, 102, 215], "wherea": [11, 15, 17, 30, 34, 53, 62, 68, 77, 82, 102, 170, 186, 189, 195, 199, 217, 218, 237, 275], "is_capit": 11, "unneed": 11, "achiev": [11, 12, 19, 52, 56, 60, 85, 92, 115, 132, 198, 206, 209, 211, 218, 233, 248], "isinst": [11, 14, 17, 19, 34, 52, 83, 85, 102, 189, 190, 199, 200, 211, 220, 223, 232, 270], "ship": [11, 93], "session": [11, 25, 34, 52, 64, 79, 179, 183, 189, 235, 262, 267, 274], "sort": [11, 28, 29, 33, 34, 41, 44, 48, 77, 79, 82, 88, 91, 92, 103, 106, 110, 149, 165, 170, 174, 185, 192, 195, 196, 206, 211, 212, 215, 216, 217, 223, 225, 230, 232, 237, 247, 255, 267, 269, 270], "numberkind": [11, 14, 83, 207], "matrixkind": [11, 14, 52, 87, 207], "booleankind": 11, "ring": [11, 55, 75, 88, 89, 182, 187, 188, 191, 192, 194, 195, 196, 197, 198, 199, 237], "classif": [11, 13, 16, 52, 215, 216], "lamda": [11, 85, 199, 207, 219, 271], "\u03bb": [11, 271], "lambdifi": [11, 19, 34, 60, 117, 199, 217, 231, 236, 255, 262, 266], "matrixexpr": [11, 19, 83, 85, 86], "mutabl": [11, 12, 35, 52, 84, 85, 86, 95, 190, 199, 200, 211, 220, 271], "dens": [11, 83, 85, 87, 88, 188, 191, 194, 195, 220, 258, 270], "underli": [11, 34, 44, 50, 52, 81, 88, 100, 115, 160, 173, 217, 218, 219], "quit": [11, 15, 19, 60, 88, 92, 117, 182, 185, 196, 198, 209, 217, 252, 267, 270], "rung": [11, 32, 74], "kutta": [11, 74], "condit": [11, 17, 18, 34, 43, 52, 54, 58, 60, 70, 71, 74, 75, 76, 78, 79, 82, 88, 92, 94, 95, 96, 102, 108, 111, 117, 125, 129, 132, 134, 178, 184, 196, 199, 202, 209, 212, 214, 215, 217, 218, 219, 224, 257, 275], "loss": [11, 34, 77, 165, 231, 249], "stabil": [11, 43, 48, 50, 56, 102, 129, 223], "focus": [11, 192], "is_numb": [11, 17, 52, 60, 79], "infin": [11, 17, 30, 51, 57, 58, 60, 65, 77, 79, 88, 138, 190, 192, 195, 199, 204, 205, 206, 207, 211, 214, 215, 219], "resembl": [11, 54, 60, 79, 224], "zoo": [11, 17, 30, 52, 57, 58, 60, 79, 206, 208, 211], "data": [11, 15, 34, 43, 52, 53, 60, 79, 88, 93, 100, 110, 144, 185, 186, 189, 190, 192, 195, 196, 199, 211, 224, 225, 230, 232, 234, 237, 241], "effici": [11, 15, 17, 32, 34, 36, 43, 48, 52, 55, 56, 57, 68, 69, 85, 88, 92, 93, 102, 110, 132, 184, 187, 188, 189, 190, 192, 195, 196, 197, 198, 211, 212, 217, 231, 238, 264, 270, 271, 275], "act": [11, 33, 42, 43, 44, 48, 52, 60, 68, 81, 82, 88, 95, 98, 107, 109, 114, 115, 120, 128, 137, 149, 154, 157, 158, 207, 218, 220, 248, 252, 264], "pprint": [11, 12, 19, 22, 32, 33, 54, 60, 79, 88, 92, 102, 137, 184, 199, 200, 207, 211, 215, 216, 218, 219, 237, 274], "inequ": [11, 17, 18, 19, 21, 52, 185, 192, 207, 209, 213], "neq": [11, 19, 52, 58, 60, 77, 79, 83, 170, 183, 184, 192, 195, 212, 215, 217, 275], "ne": [11, 17, 53, 58, 65, 77, 92, 187, 189, 192, 209, 215, 219], "hold": [11, 12, 19, 29, 33, 43, 48, 52, 53, 54, 58, 60, 74, 77, 88, 91, 94, 102, 104, 109, 111, 112, 130, 161, 195, 209, 211, 215, 219, 232, 275], "singleton": [11, 44, 82, 203, 218, 255, 257, 270], "gotcha": [11, 13, 52, 125, 183, 238, 268, 276], "somehow": [11, 19], "simpler": [11, 18, 19, 52, 56, 60, 76, 77, 122, 183, 192, 208, 209, 211, 215, 217, 218, 275], "adject": [11, 219], "heurist": [11, 17, 44, 77, 79, 83, 192, 193, 206, 208, 211, 213, 217, 218, 230, 265, 275], "appar": [11, 12, 52, 240, 275], "commut": [11, 17, 26, 29, 33, 43, 44, 48, 52, 54, 75, 79, 88, 142, 149, 152, 153, 154, 164, 165, 170, 177, 183, 187, 190, 191, 192, 193, 195, 199, 206, 207, 209, 215, 225, 270], "law": [11, 33, 125, 168, 183, 187], "child": [11, 109, 126, 189, 234], "xreplac": [11, 52, 83, 88, 175], "knowledg": [11, 51, 52, 53, 194, 215, 270, 273], "round": [11, 19, 32, 34, 52, 56, 57, 58, 88, 138, 194, 195, 206, 208, 219], "analyt": [11, 24, 57, 60, 77, 88, 125, 215, 260, 265], "implicitli": [11, 17, 18, 19, 44, 52, 79, 186, 189, 217], "independ": [11, 12, 19, 30, 32, 34, 43, 51, 52, 54, 60, 69, 77, 79, 81, 88, 102, 110, 111, 115, 117, 119, 127, 129, 163, 170, 180, 185, 187, 189, 194, 195, 201, 202, 209, 211, 212, 215, 216, 217, 218, 219, 225, 230, 231, 250, 269, 270], "nativ": [11, 52, 102, 190, 195, 230], "parsabl": 11, "iter": [11, 22, 32, 34, 41, 43, 44, 47, 48, 52, 53, 54, 55, 57, 60, 68, 82, 92, 107, 108, 109, 110, 111, 114, 129, 133, 150, 165, 178, 185, 186, 187, 188, 190, 192, 195, 199, 200, 201, 202, 205, 211, 212, 215, 217, 218, 219, 220, 223, 231, 232, 233, 234, 236, 238, 244, 248, 262], "fuzzi": [11, 17, 19, 20], "noncomput": 11, "philosoph": 11, "OR": [11, 32, 55, 82, 192], "One": [11, 12, 14, 17, 19, 32, 33, 34, 42, 44, 51, 57, 58, 60, 71, 74, 76, 77, 79, 82, 88, 92, 95, 96, 115, 130, 132, 141, 170, 190, 192, 193, 195, 198, 201, 207, 211, 217, 218, 219, 220, 225, 238, 250, 264, 265, 267, 270, 271, 275], "care": [11, 12, 18, 19, 43, 52, 60, 79, 88, 95, 106, 115, 129, 175, 183, 189, 194, 211, 212, 215, 217, 218, 223, 226, 231, 264, 267, 269], "falsi": 11, "is_posit": [11, 17, 18, 19, 52, 177, 190], "unevaluatedexpr": [11, 199, 270], "surpris": [11, 17, 218], "north": 11, "riemann": [11, 54, 57, 58, 59, 77, 186, 211, 225], "sphere": [11, 137, 244, 253], "behav": [12, 30, 32, 52, 53, 58, 60, 92, 195, 207, 211, 217, 220, 226, 271], "mapl": [12, 79, 215, 262, 269], "mathematica": [12, 34, 44, 94, 262, 269, 271], "faq": 12, "introductori": [12, 15, 23, 24, 132, 189, 190, 195], "remaind": [12, 51, 52, 53, 92, 187, 189, 190, 193, 195, 215], "familiar": [12, 19, 79, 115, 130, 149, 196, 265, 267, 273], "java": 12, "minut": [12, 106, 117, 174], "subtract": [12, 34, 44, 52, 56, 67, 92, 102, 109, 167, 187, 188, 189, 190, 192, 194, 195, 270, 275], "proper": [12, 43, 52, 79, 92, 106, 115, 174, 189, 190, 194, 199, 207, 215, 220, 231, 232, 250, 271], "trigsimp": [12, 26, 52, 88, 109, 115, 123, 175, 208, 247], "fill": [12, 16, 43, 53, 83, 85, 88, 91, 165, 185, 230, 233, 237, 240, 271], "alter": [12, 35, 43, 52, 175, 189, 199, 201, 218], "afterward": [12, 34, 52, 112, 119], "quantiti": [12, 44, 52, 57, 60, 64, 69, 96, 106, 110, 123, 130, 144, 167, 169, 173, 180, 182, 183, 194, 211, 219, 247, 251, 252, 260], "simultan": [12, 52, 65, 83, 92, 185, 208], "var": [12, 32, 34, 51, 56, 57, 75, 79, 82, 88, 102, 175, 185, 194, 198, 199, 211, 212, 238, 276], "rate": [12, 117, 182, 219, 250, 265], "short_lif": 12, "haven": 12, "160": [12, 95, 193], "bodi": [12, 34, 77, 94, 105, 106, 109, 110, 112, 114, 115, 117, 118, 119, 120, 122, 125, 126, 127, 132, 133, 168, 174, 175, 178, 182, 183, 244, 245, 251], "ctimesd": 12, "circular": [12, 17, 100, 137, 192], "relationship": [12, 17, 34, 52, 57, 59, 79, 92, 126, 149, 175, 180, 183, 189, 217], "runtimeerror": [12, 32, 207, 218, 237], "compileflag": [12, 230], "glob": [12, 230], "exceed": [12, 117], "stdin": [12, 233, 235], "nameerror": [12, 80, 233, 267], "__future__": [12, 15, 267, 274], "divis": [12, 19, 52, 88, 92, 167, 186, 189, 190, 191, 192, 195, 197, 199, 215, 217, 230, 238, 267, 270, 274], "cl": [12, 17, 19, 34, 43, 52, 79, 83, 165, 178, 190, 194, 215, 224, 233, 237, 249, 265, 274, 276], "dir": [12, 52, 95, 201, 206, 237], "__builtins__": 12, "__file__": [12, 241], "__name__": [12, 199, 241], "__package__": 12, "_greek": 12, "_latin": 12, "chi": [12, 60, 77, 137, 199, 209, 219, 225], "eta": [12, 60, 77, 194, 199, 215, 216, 219], "iota": [12, 199], "kappa": [12, 199, 219], "mu": [12, 60, 77, 92, 103, 105, 136, 199, 219, 225], "omega": [12, 34, 35, 43, 77, 92, 107, 112, 114, 130, 133, 139, 141, 166, 175, 178, 179, 182, 184, 199, 206, 219], "omicron": [12, 199], "phi": [12, 43, 52, 53, 57, 60, 77, 81, 88, 92, 104, 132, 139, 148, 150, 184, 186, 194, 199, 215, 244, 253], "psi": [12, 60, 77, 137, 148, 149, 155, 163, 194, 199, 225], "rho": [12, 54, 77, 88, 92, 118, 159, 199, 219, 225, 253], "sigma": [12, 44, 75, 77, 83, 88, 199, 202, 219], "tau": [12, 34, 77, 79, 88, 194, 199, 215], "theta": [12, 52, 54, 58, 60, 77, 80, 88, 94, 104, 114, 133, 137, 175, 183, 184, 190, 194, 199, 202, 207, 218, 219, 244, 245, 248, 250, 253], "upsilon": [12, 199], "xi": [12, 19, 54, 77, 199, 215, 216, 217], "lastli": [12, 79, 96, 133, 215], "unit": [12, 19, 26, 29, 33, 52, 53, 57, 65, 66, 67, 79, 88, 92, 95, 100, 102, 104, 105, 115, 130, 132, 141, 166, 167, 168, 172, 174, 175, 180, 183, 185, 187, 190, 192, 194, 195, 197, 199, 207, 209, 212, 218, 220, 244, 245, 247, 252, 253, 260], "mnemon": [12, 208, 237], "osineq": 12, "notic": [12, 19, 43, 44, 50, 52, 88, 153, 174, 189, 209, 225, 226, 237, 238, 267, 269, 270, 275], "reimport": 12, "restor": [12, 189, 211], "__": [12, 60, 79, 199, 219, 224], "press": [12, 33, 35, 36, 44, 53, 79, 83, 184, 193, 212, 217], "autocomplet": 12, "lose": [12, 186], "abil": [12, 17, 32, 88, 125, 194, 198, 215, 218, 269, 275], "past": [12, 58, 92, 198, 199, 274], "f1": [12, 43, 77, 79, 88, 102, 107, 115, 123, 132, 185, 190, 192, 195, 199, 201, 217], "f2": [12, 52, 77, 88, 102, 107, 115, 123, 132, 168, 185, 192, 195, 199, 201, 217], "6": [12, 13, 15, 26, 28, 29, 32, 34, 35, 36, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 67, 68, 74, 75, 77, 79, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 102, 103, 104, 117, 118, 122, 123, 124, 134, 138, 144, 162, 174, 175, 183, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 201, 204, 205, 206, 207, 208, 211, 212, 216, 217, 218, 219, 220, 230, 231, 234, 237, 238, 244, 246, 248, 253, 265, 271, 275, 276], "accuraci": [12, 15, 32, 52, 195, 255, 271], "2000000000000002": 12, "py3k": 12, "20000000000000": 12, "sympyifi": 12, "worri": [12, 52, 270], "reus": [12, 19, 34, 165, 269], "142857142857143": 12, "receiv": [12, 52, 53, 92, 107, 160, 194, 224], "fraction": [12, 52, 53, 56, 58, 68, 79, 88, 92, 108, 171, 189, 190, 191, 192, 193, 196, 199, 201, 212, 215, 217, 266], "interpret": [12, 18, 34, 43, 51, 52, 57, 60, 65, 68, 79, 83, 85, 88, 92, 94, 106, 170, 185, 187, 194, 195, 199, 206, 212, 217, 218, 219, 224, 230, 231, 234, 240, 271], "100": [12, 19, 34, 36, 41, 51, 52, 53, 56, 60, 68, 75, 82, 83, 88, 92, 95, 185, 189, 194, 196, 198, 199, 206, 217, 218, 237, 264], "000000000000": 12, "00": [12, 52, 92, 149, 159, 212, 237], "null": [12, 52, 88], "34": [12, 34, 44, 57, 65, 88, 92, 147, 193, 198, 205, 211, 212], "3400000000000": 12, "250": [12, 92, 212], "143": [12, 144, 184], "next": [12, 15, 17, 19, 25, 34, 35, 36, 41, 43, 44, 46, 47, 52, 53, 58, 77, 79, 82, 88, 92, 106, 107, 110, 118, 119, 120, 122, 124, 125, 126, 133, 182, 183, 186, 190, 194, 195, 199, 207, 209, 212, 215, 234, 235, 237, 268, 269, 270], "binari": [12, 18, 19, 30, 34, 36, 47, 52, 53, 79, 82, 92, 93, 159, 171, 186, 189, 195, 212, 231, 234, 237], "decim": [12, 19, 34, 52, 55, 56, 92, 94, 100, 189, 195, 269], "far": [12, 33, 52, 66, 79, 186, 189, 199, 209, 238, 264, 265, 267], "142857": 12, "25000000000000000000": 12, "14285278320312500000": 12, "realiz": [12, 37, 43, 54, 82, 92, 119, 186, 187, 192, 219], "pad": [12, 34, 53, 54, 55, 67, 92], "inexact": [12, 52, 190], "low": [12, 17, 18, 34, 52, 53, 60, 92, 189, 192, 197, 199, 211, 231, 232, 237], "higher": [12, 15, 32, 34, 52, 54, 56, 60, 63, 88, 178, 184, 186, 189, 192, 195, 201, 202, 206, 208, 211, 215, 217, 220, 238, 265], "engin": [12, 98, 131, 132, 181, 215, 274], "increas": [12, 32, 33, 44, 50, 51, 52, 55, 56, 60, 83, 92, 93, 106, 116, 149, 174, 175, 177, 182, 183, 189, 192, 194, 195, 201, 204, 208, 215, 219, 235, 237], "2000061035": 12, "highest": [12, 34, 46, 81, 106, 186, 195, 202, 212, 215], "hopefulli": [12, 16, 77], "unsimplifi": [12, 208], "12345678901234567890": 12, "big_trig_ident": 12, "ab": [12, 31, 34, 35, 51, 52, 53, 56, 57, 59, 60, 64, 75, 77, 82, 83, 88, 98, 104, 132, 165, 187, 190, 194, 195, 199, 212, 214, 217, 218, 219, 225, 234, 237, 240, 249, 275], "gave": [12, 52, 237], "gain": [12, 53, 102, 127, 128, 132], "impress": 12, "91": [12, 35, 193, 198, 205, 219], "compar": [12, 17, 32, 34, 44, 49, 52, 58, 69, 82, 88, 92, 93, 117, 144, 168, 172, 189, 192, 195, 196, 199, 204, 206, 211, 215, 218, 220, 224, 230, 237, 267, 270, 275], "4e": [12, 217], "nearli": [12, 92, 208], "snippet": [12, 34], "expr_modifi": 12, "__main__": [12, 34, 271], "declar": [12, 17, 22, 34, 65, 77, 88, 94, 103, 115, 117, 132, 144, 188, 199, 206, 209, 214, 215, 216, 219, 232], "asid": [12, 82, 215, 216, 269], "2x": [12, 52, 60, 77, 94, 211, 212, 218, 219, 264, 267, 275], "syntaxerror": [12, 94], "asin": [12, 59, 60, 66, 196, 199, 209, 211, 215, 219, 275], "arcsin": [12, 58, 196, 199, 219], "arcco": [12, 58, 199], "root": [12, 17, 19, 21, 22, 32, 34, 51, 52, 53, 59, 60, 74, 75, 76, 77, 79, 81, 84, 88, 92, 132, 170, 184, 186, 187, 190, 191, 194, 196, 198, 199, 209, 210, 215, 217, 218, 219, 230, 234, 237, 269, 271, 274, 276], "expon": [12, 31, 34, 39, 52, 53, 58, 59, 60, 77, 79, 85, 92, 100, 102, 171, 187, 188, 189, 191, 195, 196, 199, 208, 211, 215, 218, 223, 234, 275], "half": [12, 19, 34, 53, 57, 58, 60, 62, 68, 79, 81, 88, 92, 94, 95, 134, 137, 162, 184, 190, 192, 194, 195, 207, 208, 209, 211, 219, 230, 237], "denomin": [12, 52, 56, 60, 79, 92, 102, 108, 187, 189, 190, 192, 194, 195, 198, 199, 208, 209, 211, 212, 215, 217, 275], "wild": [12, 211, 237], "interest": [12, 19, 48, 52, 54, 57, 58, 68, 77, 79, 88, 92, 116, 117, 165, 170, 183, 186, 190, 194, 195, 196, 198, 206, 209, 211, 212, 217, 218, 231, 232, 248, 265, 268, 270, 271, 272, 275], "sq": [12, 212], "is_pow": [12, 34, 52, 58], "is_rat": [12, 17, 194, 237], "bracket": [12, 19, 44, 52, 60, 163, 165, 175, 199], "notat": [12, 15, 22, 40, 44, 45, 51, 52, 53, 57, 60, 77, 85, 88, 94, 102, 163, 174, 175, 179, 183, 186, 199, 206, 210, 211, 218, 224, 225, 237, 250, 265], "curli": [12, 115, 199], "suppli": [12, 32, 33, 34, 43, 44, 52, 54, 62, 66, 88, 92, 107, 110, 112, 117, 119, 122, 127, 128, 138, 165, 174, 178, 183, 185, 194, 196, 201, 208, 215, 231, 237, 238, 244, 245, 248], "powsimp": [12, 52, 58, 208], "deep": [12, 19, 52, 58, 82, 83, 195, 206, 211, 219, 270], "measur": [12, 26, 58, 60, 68, 84, 106, 145, 154, 159, 167, 170, 172, 174, 175, 178, 180, 183, 195, 207, 208, 211, 219, 243, 244, 246, 247, 249, 250, 252], "count_op": [12, 208, 211], "radic": [12, 52, 53, 88, 186, 194, 195, 211, 217, 218], "join": [12, 44, 52, 53, 65, 83, 95, 96, 199, 211, 215, 220, 237, 241], "autoexpand": [12, 211], "violat": [12, 115, 184, 196, 211], "naiv": [12, 14, 43, 49, 52, 77, 83, 88, 170, 209, 217, 218, 225], "strategi": [12, 35, 52, 79, 192, 193, 206, 209, 211, 216], "radsimp": [12, 52, 210], "logcombin": [12, 210, 215, 218], "robust": [12, 49, 52, 56, 191, 211, 215], "cancel": [12, 15, 19, 34, 52, 56, 60, 68, 77, 79, 88, 92, 102, 103, 189, 190, 192, 195, 198, 211, 217, 269], "topic": [13, 20, 23, 34, 125, 130, 181, 182, 183, 184, 186, 188, 189, 194, 218, 267, 272], "behind": [13, 23, 103, 115, 129, 169, 188, 208, 211, 215, 218, 260, 267], "decis": [13, 23, 52, 58, 79, 208, 217, 232], "opinion": [13, 23], "pitfal": [13, 19, 183, 189, 267, 272, 275], "finit": [13, 16, 17, 22, 29, 34, 38, 39, 40, 43, 51, 52, 53, 55, 56, 79, 81, 82, 151, 175, 184, 187, 190, 191, 193, 195, 196, 199, 201, 202, 205, 207, 212, 214, 215, 218, 237, 244, 245, 255, 266, 269, 275], "glossari": 13, "classifi": [14, 88, 189, 215, 216, 218, 219], "distinguish": [14, 17, 18, 33, 43, 56, 81, 115, 164, 170, 186], "former": [14, 34, 52, 57, 115, 192, 194, 195, 212, 237], "retriev": [14, 50, 83, 195, 211, 225], "guarante": [14, 17, 34, 43, 44, 52, 64, 77, 79, 88, 189, 192, 194, 195, 215, 217, 218, 235, 240, 271, 275], "catch": [14, 52, 215, 230, 271], "theori": [14, 19, 29, 35, 41, 42, 43, 44, 50, 52, 53, 57, 60, 81, 89, 92, 110, 115, 129, 131, 144, 162, 165, 175, 178, 188, 192, 193, 194, 198, 212, 234, 244, 261, 269], "is_subset": [14, 207], "valueerror": [14, 17, 27, 29, 32, 34, 35, 44, 52, 53, 61, 62, 65, 67, 68, 79, 83, 85, 88, 91, 92, 95, 100, 102, 139, 178, 180, 184, 186, 188, 192, 194, 207, 215, 217, 218, 237, 240, 250], "odd": [14, 17, 27, 29, 31, 40, 44, 52, 53, 57, 58, 60, 82, 91, 92, 103, 194, 199, 217], "appliedpred": [14, 27, 28, 29], "analysi": [15, 34, 35, 43, 52, 53, 58, 99, 117, 129, 130, 133, 169, 186, 195, 209, 212, 219], "vari": [15, 32, 34, 52, 66, 68, 100, 106, 110, 130, 163, 183, 206, 217, 237, 250], "hope": [15, 43, 106, 186], "research": [15, 44, 196, 211], "establish": [15, 48, 77, 109, 120, 209], "envis": 15, "along": [15, 19, 34, 43, 52, 53, 54, 58, 60, 61, 62, 66, 67, 70, 72, 75, 77, 83, 85, 88, 95, 96, 98, 105, 106, 109, 110, 117, 119, 122, 123, 124, 126, 127, 128, 129, 132, 134, 162, 174, 175, 180, 183, 185, 188, 189, 194, 195, 215, 218, 246, 250, 252], "small": [15, 34, 35, 43, 44, 52, 56, 57, 79, 82, 88, 92, 102, 119, 123, 132, 162, 184, 185, 192, 193, 194, 211, 212, 217, 237, 264, 267, 269], "x_": [15, 34, 42, 52, 53, 57, 94, 190, 192, 195, 201, 212, 215, 220], "taylor": [15, 52, 58, 115, 129, 132, 190, 192, 195, 196, 206, 215], "let": [15, 17, 18, 19, 32, 34, 43, 48, 52, 53, 62, 70, 75, 77, 81, 85, 88, 89, 92, 94, 107, 115, 132, 170, 175, 182, 186, 187, 188, 192, 194, 195, 196, 199, 206, 209, 211, 212, 215, 217, 218, 225, 228, 231, 235, 238, 248, 249, 253, 264, 267, 269, 270, 275], "df": [15, 54, 215], "c_": [15, 21, 53, 75, 77, 183, 187, 215], "grid": [15, 32, 33, 100, 185], "f_": [15, 52, 57, 60, 79, 127, 128, 129, 192, 198, 199, 209, 215], "constraint": [15, 88, 96, 102, 109, 110, 111, 114, 115, 117, 118, 119, 121, 125, 127, 128, 129, 132, 196], "formul": [15, 109, 118, 119, 125, 127, 128, 165, 183], "assess": 15, "brute": [15, 208, 212], "frequent": [15, 43, 194, 206, 218], "cover": [15, 92, 94, 106, 115, 174, 182, 225, 232, 265, 267], "treatment": [15, 77, 195], "shall": [15, 43, 77, 115, 132, 206, 209, 270], "job": [15, 19, 44, 145, 196, 199], "truncat": [15, 44, 52, 88, 92, 96, 170, 185, 196, 198, 201, 202], "approx": [15, 21, 52, 79], "lowest": [15, 34, 43, 48, 92, 186, 201, 218], "2h": 15, "elimin": [15, 34, 48, 52, 82, 84, 88, 106, 190, 197, 198, 200, 202, 210, 215, 217, 218, 225, 232, 271], "print_funct": 15, "x0": [15, 32, 34, 42, 52, 60, 71, 73, 75, 76, 92, 137, 189, 200, 201, 206, 211, 215, 217, 219, 237, 265], "x_0": [15, 42, 43, 53, 74, 75, 76, 192, 201, 212, 215, 219, 265], "fi": 15, "fip1": 15, "fip2": 15, "c_0": [15, 53, 75], "c_1": [15, 53, 75, 77, 206, 209, 215], "c_2": [15, 77, 206, 215], "2f": [15, 276], "c_i": [15, 77, 206, 209, 215], "nth": [15, 52, 57, 60, 81, 92, 190, 195, 196, 205, 211, 215, 219], "degre": [15, 35, 43, 50, 51, 57, 60, 68, 79, 83, 88, 95, 98, 100, 102, 109, 110, 115, 116, 119, 125, 133, 137, 183, 186, 187, 190, 192, 194, 195, 198, 202, 205, 208, 209, 211, 212, 215, 217, 219, 244], "x_i": [15, 19, 42, 60, 79, 88, 187, 190, 192, 195, 196, 199, 218], "m11": [15, 219], "m12": [15, 219], "m13": 15, "m21": [15, 219], "m22": [15, 219], "m23": 15, "m31": 15, "m32": 15, "m33": [15, 92], "3x3": [15, 67, 88, 248], "invert": [15, 29, 52, 53, 83, 85, 88, 102, 119, 167, 187, 189, 190, 194, 195, 215, 217, 218, 225, 271], "inv": [15, 44, 84, 88, 109, 110, 117, 122, 123, 132, 154, 188, 215], "fim1": 15, "eight": [15, 199], "dfdxcheck": 15, "c3": [15, 55, 81, 83, 85, 92, 215, 219, 249, 276], "c5": [15, 215], "120": [15, 51, 52, 57, 58, 74, 92, 95, 96, 196, 198, 199, 201, 215, 265], "c7": [15, 43], "5040": [15, 57, 74, 195, 196], "quickli": [15, 19, 43, 44, 52, 53, 56, 92, 192, 195, 208, 218, 234], "tediou": [15, 79], "attempt": [15, 18, 19, 34, 43, 48, 50, 52, 56, 57, 64, 77, 79, 88, 92, 106, 108, 160, 189, 194, 201, 206, 208, 211, 212, 215, 217, 218, 219, 230, 267, 275], "certainli": [15, 64, 94, 234], "fine": [15, 19, 52, 56, 80, 179, 189, 199, 211], "devis": 15, "xn": [15, 19, 190], "x_n": [15, 19, 35, 42, 53, 74, 88, 187, 190, 192, 195, 212, 218], "fn": [15, 79, 88, 186, 195], "fnm1": 15, "fnm2": 15, "dth": 15, "Of": [15, 17, 51, 77, 88, 215, 218, 237, 275], "cours": [15, 17, 36, 43, 51, 60, 77, 79, 88, 89, 92, 180, 188, 189, 193, 194, 206, 208, 209, 250, 275], "etc": [15, 17, 18, 29, 32, 34, 48, 52, 53, 57, 58, 70, 81, 82, 87, 92, 115, 136, 145, 149, 162, 165, 169, 177, 180, 182, 183, 185, 186, 187, 189, 192, 194, 199, 200, 207, 208, 209, 211, 215, 218, 219, 223, 231, 232, 237, 248, 252], "discrit": 15, "bengt": [15, 32], "fornberg": [15, 32], "weight": [15, 52, 60, 67, 69, 79, 81, 88, 149, 211, 255, 265], "gap": [16, 43, 92, 115, 196], "matur": [16, 17, 217, 218], "concret": [17, 33, 44, 52, 57, 58, 79, 81, 88, 92, 115, 170, 190, 194, 199, 255], "seem": [17, 19, 76, 77, 115, 170, 186, 211, 215, 275], "obviou": [17, 18, 19, 43, 51, 186, 189, 198, 212, 269], "situat": [17, 56, 77, 183, 215, 217, 219, 235, 267], "refus": [17, 275], "roughli": [17, 52, 53, 93, 116, 215, 238], "possibli": [17, 34, 44, 50, 52, 77, 79, 92, 168, 169, 192, 206, 207, 232, 265, 271], "infinit": [17, 19, 29, 51, 52, 53, 56, 57, 58, 65, 66, 79, 88, 92, 102, 121, 151, 170, 186, 194, 199, 200, 201, 204, 205, 206, 207, 211, 212, 213, 214, 217, 224, 237, 275, 276], "is_neg": [17, 19, 190], "interprett": 17, "unknow": 17, "resolv": [17, 18, 22, 52, 208, 211], "undecid": [17, 19, 22, 88, 189, 218, 271], "conclud": [17, 60, 75, 117, 180, 206, 217, 252], "particularli": [17, 56, 79, 189, 190, 209, 275, 276], "mix": [17, 25, 51, 58, 83, 88, 94, 174, 189, 190, 195, 199, 218, 221, 223, 225, 238], "ideal": [17, 34, 89, 112, 115, 125, 175, 182, 188, 190, 191, 192, 193, 194, 195, 196, 211, 218, 244], "slow": [17, 19, 48, 52, 56, 79, 93, 106, 117, 137, 174, 183, 189, 190, 199, 200, 201, 202, 211, 215, 217, 218, 230, 231, 275], "indetermin": [17, 18, 52, 88, 192, 204, 217], "contradict": 17, "infer": [17, 28, 29, 44, 52, 79, 189, 198, 204, 209, 215, 231, 257], "prepar": [17, 110, 197], "presum": [17, 77, 189, 209, 232], "singletonregistri": [17, 52], "x1": [17, 19, 42, 52, 57, 132, 137, 189, 190, 200, 201, 211, 215, 217, 219, 237], "x2": [17, 42, 52, 57, 132, 137, 189, 201, 215, 217, 219], "posifi": [17, 210], "_x": [17, 19, 88, 130, 179, 182, 183, 190, 196, 211, 215, 231], "rep": [17, 43, 48, 52, 149, 186, 188, 189, 190, 193, 194, 195, 208, 211, 240], "feel": [17, 24, 132, 133, 211, 215], "among": [17, 33, 34, 35, 36, 43, 44, 53, 80, 93, 195, 215, 220, 223, 225, 247], "behaviour": [17, 77, 82, 107, 192, 196, 202, 205], "symbolc": 17, "implicit": [17, 34, 50, 52, 94, 114, 133, 185, 215, 217, 221, 224, 231, 232, 244, 246, 253, 267], "tailor": 17, "assumptions0": [17, 52], "extended_neg": [17, 52], "extended_nonneg": [17, 52], "extended_nonposit": [17, 52], "extended_nonzero": [17, 52, 199], "extended_posit": [17, 52], "extended_r": [17, 30, 52, 199, 214, 218], "hermitian": [17, 29, 52, 83, 84, 88, 148, 154, 165, 199], "irrat": [17, 29, 32, 52, 92, 189, 195, 199, 207, 269], "noninteg": [17, 30, 52, 189, 199], "nonneg": [17, 19, 29, 52, 53, 54, 57, 60, 85, 132, 187, 189, 212, 219, 275], "nonposit": [17, 29, 52, 132], "nonzero": [17, 19, 29, 31, 51, 52, 67, 88, 104, 187, 188, 189, 190, 199, 202, 218], "transcendent": [17, 29, 52, 60, 79, 189, 194, 199, 217, 218, 271, 276], "field": [17, 26, 30, 34, 52, 53, 54, 60, 70, 79, 137, 138, 177, 181, 186, 187, 188, 190, 191, 193, 195, 196, 197, 212, 217, 230, 244, 246, 248, 249, 251, 253], "antihermitian": [17, 29, 52], "mathbb": [17, 19, 30, 35, 43, 51, 52, 53, 58, 60, 77, 83, 88, 129, 184, 186, 187, 189, 190, 192, 194, 195, 198, 206, 207, 209, 212, 218, 219, 275], "ii": [17, 57, 58, 77, 79, 92, 195, 199, 207, 215, 218], "cup": [17, 195, 207, 218], "pm": [17, 51, 77, 79, 187, 198, 206, 212, 215], "yi": 17, "composit": [17, 29, 33, 41, 43, 44, 52, 53, 70, 72, 79, 92, 95, 190, 192, 195, 198, 211, 218, 233], "2k": [17, 52, 77, 92, 212], "pariti": [17, 44], "product": [17, 26, 37, 40, 43, 44, 48, 50, 51, 52, 53, 54, 56, 57, 60, 62, 65, 67, 68, 75, 77, 79, 81, 82, 83, 85, 88, 92, 93, 102, 103, 104, 106, 117, 130, 132, 140, 144, 145, 148, 150, 151, 152, 154, 157, 159, 160, 162, 163, 165, 170, 171, 174, 175, 177, 181, 182, 183, 184, 186, 187, 188, 190, 192, 194, 195, 196, 199, 200, 201, 204, 207, 208, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 231, 234, 237, 244, 247, 251], "le": [17, 35, 48, 60, 77, 83, 92, 124, 192, 209, 219], "commutative_properti": [17, 52], "skew": [17, 75, 92, 219], "hermitian_matrix": 17, "complex_numb": [17, 30, 52], "algebraic_numb": [17, 30, 52], "transcendental_numb": [17, 52], "extended_real_number_lin": 17, "real_numb": [17, 30], "imaginary_numb": [17, 30, 52], "rational_numb": [17, 30], "irrational_numb": [17, 30, 52], "parity_": [17, 52], "prime_numb": [17, 52, 92], "composite_numb": [17, 52], "positive_real_numb": 17, "negative_numb": [17, 52], "inconsist": [17, 19, 27, 29, 51, 170, 175, 178, 182, 211, 215, 218], "inconsistentassumpt": 17, "deal": [17, 34, 51, 52, 56, 64, 72, 77, 79, 99, 106, 110, 111, 115, 180, 182, 183, 187, 192, 195, 212, 213, 217, 228, 238, 240, 247, 252, 267, 269, 275], "is_zero_matrix": [17, 83, 188], "generalis": [17, 60, 77, 186], "gaussian": [17, 60, 79, 88, 92, 135, 191, 192, 195, 212, 217, 219, 260, 271], "notion": [17, 33, 170, 173, 186, 218, 247, 252], "chain": [17, 19, 34, 43, 48, 52, 60, 69, 93, 182, 194, 219], "superset": [17, 32, 41, 47, 55, 132, 189, 207, 217], "vanilla": 17, "attach": [17, 46, 77, 93, 95, 110, 183, 231, 233, 238], "is_commut": [17, 79, 154, 163, 237], "is_complex": [17, 52], "is_finit": [17, 52], "permit": [17, 44, 54, 58, 82, 92, 185], "formal": [17, 33, 51, 52, 60, 77, 82, 134, 170, 189, 191, 192, 203, 206], "littl": [17, 19, 33, 44, 62, 88, 92, 93, 117, 170, 193, 195, 199, 209, 211, 219, 234, 247], "n1": [17, 34, 43, 52, 53, 115, 132, 134, 138, 174, 212, 219, 244], "n2": [17, 34, 43, 52, 53, 132, 134, 138, 212, 219], "misunderstand": 17, "is_nonneg": [17, 19, 190], "intent": [17, 34, 51, 52, 94, 232], "meaning": [17, 27, 29, 33, 53], "alon": [17, 53, 80, 192, 215, 217, 224, 237, 269, 270], "tempt": [17, 19, 52, 92], "meet": [17, 53, 206], "criteria": [17, 52, 270], "noncommut": [17, 52, 75, 270], "finiteset": [17, 22, 32, 33, 218, 219, 276], "s1": [17, 43, 51, 65, 68, 75, 102, 176, 186, 195, 202, 212, 237, 246], "s2": [17, 43, 44, 51, 65, 68, 102, 176, 186, 195, 202, 206, 212, 237, 246], "bool": [17, 32, 34, 48, 50, 52, 53, 55, 58, 79, 80, 82, 83, 85, 88, 92, 94, 111, 149, 177, 179, 185, 194, 195, 197, 199, 200, 201, 206, 207, 211, 214, 217, 219, 231, 232, 237, 238, 244, 246, 267], "plai": [17, 51, 117, 127, 212, 267, 269, 270], "role": [17, 58, 197], "connect": [17, 46, 53, 54, 67, 68, 88, 93, 95, 98, 107, 109, 117, 120, 126, 186, 187, 188, 197, 215, 219, 237, 244], "is_finite_set": 17, "zero_matrix": 17, "setsymbol": 17, "is_compar": [17, 52], "capitalis": 17, "4142135623731": [17, 199, 217], "predict": [17, 165, 211, 237], "expreal": 17, "fuzzy_and": [17, 18, 19], "fuzzy_or": [17, 18], "is_extended_nonneg": 17, "classmethod": [17, 19, 26, 28, 29, 34, 36, 41, 43, 44, 46, 47, 52, 58, 59, 60, 67, 83, 88, 102, 151, 162, 163, 165, 188, 190, 194, 195, 199, 207, 225, 230], "is_extended_r": 17, "is_infinit": 17, "is_extended_neg": 17, "is_extended_posit": [17, 18], "_eval_is_finit": 17, "is_extended_nonposit": 17, "_eval_is_algebra": 17, "is_nonzero": [17, 67], "_eval_is_integ": 17, "_eval_is_zero": [17, 19], "__new__": [17, 19, 34, 43, 52, 270], "verifi": [17, 24, 32, 43, 49, 53, 54, 115, 186, 192, 198, 215, 217, 218, 220, 221, 251, 275], "importantli": [17, 19, 196, 234], "reject": [17, 18, 92, 212, 240], "_eval_is_": 17, "is_algebra": [17, 52, 190], "interfer": [17, 199], "determinist": [17, 43, 79, 92, 192, 193], "reach": [17, 92, 102, 194, 195, 215], "claus": [17, 82], "flow": [17, 194], "inner": [17, 51, 77, 88, 148, 151, 152, 157, 159, 160, 163, 165, 175, 178, 188, 194, 201, 244], "optimis": [17, 215], "stage": [17, 33, 51, 92, 206, 275], "briefli": [17, 187, 192], "managedproperti": [17, 52], "metaclass": [17, 52], "default_assumpt": 17, "_ask": 17, "_eval_i": 17, "enumer": [17, 23, 36, 39, 41, 44, 47, 55, 59, 77, 82, 92, 194, 195, 209, 234, 237], "randomis": [17, 227, 262], "unresolv": 17, "factrul": 17, "_assume_rul": 17, "preprocess": [17, 79, 197], "defined_fact": 17, "full_impl": 17, "defaultdict": [17, 52, 237], "precomput": [17, 57, 92, 238], "static": [17, 26, 34, 43, 44, 46, 52, 58, 65, 66, 67, 68, 85, 96, 117, 125, 185, 199, 205, 207, 219, 231], "knowabl": 17, "stdfactkb": 17, "_eval_is_r": [17, 19, 195], "_assumpt": [17, 52], "amongst": [17, 217], "indirectli": 17, "manifest": [17, 187], "jointli": 17, "fundament": [17, 19, 32, 35, 42, 70, 77, 79, 88, 170, 189, 194, 212, 215, 219, 271], "theoret": [17, 33, 35, 43, 53, 193, 194, 209, 267], "isposit": 18, "xpo": 18, "xneg": 18, "strictgreaterthan": 18, "analogu": [18, 30, 51, 66, 189, 190], "piecewis": [18, 19, 34, 51, 59, 60, 79, 95, 163, 199, 201, 202, 217, 218, 219, 238, 265], "nonetyp": [18, 34], "quirk": 18, "both_posit": 18, "falsei": 18, "both_positive_bett": 18, "negat": [18, 19, 30, 52, 58, 82, 102, 175, 188, 190, 192, 195], "fuzzy_not": [18, 19], "both_positive_best": 18, "silent": [18, 56, 92, 231], "carefulli": [18, 52, 175, 192, 201], "truth": [18, 27, 28, 29, 30, 31, 52, 83, 211, 257], "bitwis": [18, 55, 82], "footnot": [18, 170, 270, 271, 274], "combinatori": [19, 36, 44, 51, 52, 59, 60, 201, 210, 237, 239, 275], "dig": [19, 34, 270], "th": [19, 26, 35, 43, 44, 50, 53, 54, 56, 57, 58, 60, 81, 82, 88, 92, 110, 190, 192, 194, 195, 201, 204, 209, 212, 215, 217, 219, 220, 225], "handler": [19, 27, 28, 29, 30, 31, 52, 59, 88], "spectrum": 19, "matter": [19, 32, 41, 44, 51, 52, 57, 77, 79, 130, 206, 237, 269, 270], "use_unicod": [19, 32, 33, 34, 56, 60, 79, 80, 88, 96, 102, 137, 179, 184, 186, 187, 198, 199, 200, 218, 219, 265, 269, 271, 274, 275, 276], "np": [19, 59, 75, 92, 115, 231, 238], "arang": [19, 231, 264], "ultim": [19, 58, 170], "cosin": [19, 52, 58, 60, 67, 79, 107, 109, 175, 183, 195, 196, 202, 208, 219, 244, 275], "todai": [19, 186], "operatornam": [19, 57, 58, 60, 77, 79, 184, 187, 195, 199, 202, 207, 209, 217], "modern": [19, 34, 186, 193, 199], "recal": [19, 52, 88, 192, 194, 209, 267, 269, 270, 276], "redefin": [19, 44, 52, 127, 129, 187, 238], "antipattern": [19, 268], "stai": [19, 194], "trig": [19, 52, 79, 195, 199, 208, 211, 275], "wouldn": 19, "cheap": [19, 52, 92], "as_two_term": [19, 52], "split": [19, 34, 52, 53, 56, 77, 79, 94, 192, 194, 197, 198, 199, 219, 225, 230, 237, 242, 270, 275], "hadn": 19, "wors": [19, 82, 211], "expand_trig": [19, 264], "mid": [19, 35, 53, 56, 96, 207, 212], "troubl": [19, 60], "bigger": [19, 34, 52, 57, 209, 215, 275], "deduc": [19, 34, 77, 82, 209, 269], "disallow": [19, 52, 195, 200, 211, 233], "great": [19, 134, 196, 199, 212, 238], "simplest": [19, 33, 82, 88, 92, 93, 184, 185, 196, 200, 208, 211, 215, 265, 275], "\u03c0": [19, 56, 137, 199, 218, 265, 269, 275, 276], "as_independ": [19, 52, 218], "coeff": [19, 52, 54, 82, 132, 190, 194, 195, 205, 211, 215, 217, 225, 275], "apart": [19, 26, 43, 48, 52, 56, 58, 79, 180, 187, 190, 192, 195, 198, 201, 212, 218, 225, 248, 250, 270], "is_even": [19, 40, 43, 44], "nonreal": [19, 217], "cosh": [19, 52, 59, 60, 71, 77, 196, 199, 200, 209, 211, 217, 271, 275], "5919532755215": 19, "_eval_is_nonneg": 19, "exercis": [19, 43, 234, 268, 275], "_eval_is_posit": 19, "as_add": [19, 52], "pi_": 19, "fuzzy_": 19, "deduct": [19, 34], "subtl": [19, 208], "nontrivi": [19, 43, 52, 92], "_eval_evalf": [19, 195], "prec": [19, 52, 62, 68, 92, 100, 184, 190, 195, 196, 211, 217], "dp": [19, 34, 52, 55, 60, 92, 189, 190, 217, 233], "53": [19, 53, 55, 88, 134, 187, 189, 190], "459697694131860": 19, "hook": [19, 93, 199], "_eval_rewrit": [19, 52], "rewritten": [19, 52, 57, 58, 60, 79, 115, 162, 206, 211, 215, 217, 275], "caller": 19, "ve": [19, 117], "nonintegr": 19, "iff": [19, 30, 44, 53, 82, 88, 183, 186, 194, 209, 212, 230], "isint": 19, "xy": [19, 32, 33, 66, 88, 112, 183, 185, 186, 192, 199, 211, 218, 253, 270, 275], "happi": 19, "demand": [19, 25], "_eval_expand_": 19, "expand_": 19, "predefin": [19, 54, 132, 189, 199, 200, 211, 218, 225, 244, 248, 256], "expand_log": [19, 34, 211], "_eval_expand_trig": 19, "sophist": [19, 93, 217], "x_1": [19, 35, 42, 43, 53, 57, 74, 88, 160, 187, 190, 192, 195, 201, 212, 218], "ldot": [19, 35, 42, 43, 51, 52, 53, 57, 60, 77, 92, 96, 170, 186, 187, 190, 192, 194, 199, 202, 206, 209, 212, 217, 220, 275], "x_k": [19, 53, 192], "dy": [19, 34, 54, 69, 88, 95, 105, 132, 195, 199, 212, 215, 216, 265], "dz": [19, 95, 105, 209], "argumentindexerror": 19, "linear": [19, 21, 33, 34, 44, 51, 52, 53, 55, 56, 60, 65, 72, 75, 77, 79, 81, 83, 85, 87, 95, 99, 102, 109, 110, 112, 117, 119, 120, 125, 127, 131, 132, 137, 159, 162, 163, 178, 185, 186, 190, 191, 192, 194, 195, 197, 205, 207, 209, 216, 217, 218, 237, 258, 276], "varion": 19, "middl": [19, 60, 68, 77, 88, 96, 145, 185, 209, 275], "iverson": 19, "printmethod": [19, 199], "latexprint": [19, 262], "_latex": [19, 199], "_print": [19, 199], "_m": [19, 60], "_n": [19, 53, 57, 60, 79, 209, 218], "arcversin": 19, "aversin": 19, "im": [19, 31, 52, 59, 77, 86, 186, 199, 200, 207, 215, 271], "sinh": [19, 32, 52, 56, 59, 60, 71, 77, 196, 199, 200, 209, 275], "expand_complex": 19, "analog": [19, 45, 51, 53, 57, 130, 182, 183, 186, 187, 188, 192, 204, 220, 237], "vers": 19, "geometr": [19, 54, 61, 62, 63, 64, 65, 66, 67, 68, 69, 88, 134, 183, 186, 193, 219, 261, 271], "angl": [19, 26, 58, 60, 61, 62, 63, 65, 66, 67, 68, 98, 104, 109, 114, 115, 117, 118, 119, 120, 129, 134, 137, 138, 139, 162, 170, 175, 182, 183, 184, 199, 208, 218, 244, 245, 248, 275], "horizont": [19, 33, 62, 65, 67, 83, 98, 137, 185, 188, 199], "distanc": [19, 33, 36, 44, 62, 65, 66, 67, 68, 95, 96, 105, 106, 109, 119, 120, 126, 134, 138, 168, 178, 180, 252], "rightmost": [19, 165], "scientificamerican": 19, "uniti": [19, 58, 60, 77, 160, 194], "secret": [19, 53], "teacher": 19, "taught": [19, 79], "nr": 19, "sake": [19, 57, 212], "simplic": [19, 209, 211, 215, 217], "divisor": [19, 30, 43, 52, 53, 88, 92, 186, 187, 189, 190, 192, 193, 194, 195, 198], "hardwar": [19, 34], "regard": [19, 35, 53, 60, 80, 133, 165, 186, 187, 201, 217, 218], "c99codeprint": [19, 34, 199], "cxx11codeprint": [19, 199], "cfunction": [19, 256], "e2": [19, 32, 52, 55, 62, 69, 79, 88, 92, 100, 115, 189, 194, 206, 215, 218, 219, 237], "93accumulate_oper": 19, "fused_multipli": 19, "93add": 19, "ccode": [19, 34, 199, 224, 232], "cxxcode": [19, 34, 199], "_ccode": [19, 199], "_y": [19, 130, 179, 182, 183], "_z": [19, 79, 130, 182, 183, 219], "_cxxcode": [19, 199], "std": [19, 199, 219], "28318530717959": 19, "trigonometricfunct": 19, "inversetrigonometricfunct": 19, "reciprocaltrigonometricfunct": 19, "bypass": [19, 215], "fragil": 19, "tend": [19, 25, 34, 52, 192, 194, 204, 206, 209, 268, 275], "prone": [19, 34, 52], "move": [19, 43, 44, 52, 53, 66, 68, 95, 109, 117, 119, 125, 153, 178, 182, 183, 210, 211, 220, 229, 250], "task": [20, 23, 58, 125, 126, 132, 189, 194, 265, 272], "deeper": [20, 223, 270], "explor": [20, 127, 128, 185, 194, 234, 275], "nonlinear": [21, 51, 132, 195, 217, 218], "diophantin": [21, 92, 192, 213], "739085133215161": [21, 217], "9y": 21, "3x": [21, 52, 94, 192, 218, 267], "cc": [21, 53, 68, 184, 187, 189, 191, 195, 271], "4xy": [21, 180, 252], "8y": 21, "7y": [21, 212], "yield": [22, 32, 34, 43, 52, 53, 60, 76, 77, 92, 95, 102, 108, 159, 187, 192, 194, 195, 200, 201, 206, 207, 208, 211, 212, 217, 234, 237, 271], "rearrang": [22, 103, 110, 127, 128, 149, 215], "eqn": [22, 32, 218], "solutions_set": 22, "solution_set": 22, "256": [22, 34, 43, 92, 195, 199], "techniqu": [22, 35, 47, 77, 79, 199, 201, 211, 215, 218, 271], "solution_outside_2_3": 22, "interv": [22, 30, 32, 43, 52, 56, 58, 60, 61, 62, 65, 68, 77, 79, 82, 92, 151, 160, 190, 192, 194, 195, 202, 205, 214, 218, 219, 261, 276], "calculu": [22, 29, 52, 57, 79, 88, 132, 180, 181, 208, 219, 249, 250, 251, 254, 255, 266, 268, 273], "critic": [22, 32, 138, 182, 194, 218], "minima": [22, 218], "critical_point": 22, "point1": [22, 176, 246], "point2": [22, 176, 246], "curvatur": [22, 134, 138], "solution_list": 22, "membership": [22, 50, 194, 207], "candid": [22, 52, 88, 92, 192, 211], "solution_set_arg": 22, "exclud": [22, 34, 51, 52, 79, 88, 108, 132, 187, 190, 192, 195, 205, 215, 217, 230, 233, 237], "risk": 22, "central": [23, 43, 49, 60, 62, 68, 107, 112, 130, 185, 194, 212, 219], "pypi": 24, "continuum": [24, 260], "qtconsol": [24, 274], "nicer": [24, 52, 123], "setupegg": 24, "enthought": 24, "canopi": 24, "activepython": 24, "spack": 24, "freshli": 24, "starter": 24, "sy": [24, 34, 54, 115, 132, 199, 230, 241, 249, 267], "wherev": [24, 115, 211, 218, 247], "visit": [24, 36, 43, 52, 57, 272], "chat": 24, "gitter": [24, 271], "excel": [24, 56, 194, 273], "ticket": 24, "export": [25, 199], "latin": 25, "slightli": [25, 34, 48, 92, 94, 117, 185, 186, 190, 192, 195, 199, 209, 211], "clunki": 25, "collid": [25, 225], "win": 25, "throwawai": 25, "surviv": 25, "foo": [25, 32, 34, 52, 160, 179, 237, 240], "report": [25, 32, 43, 65, 83, 92, 196, 207, 218, 230, 271, 276], "stick": 25, "_clash1": [25, 52], "_clash2": [25, 52], "multi": [25, 52, 53, 116, 125, 132, 145, 149, 159, 185, 199, 218], "_clash": [25, 52], "union": [25, 30, 32, 34, 41, 43, 50, 82, 94, 186, 194, 199, 205, 206, 214, 218, 219, 237], "sympif": [25, 52], "real_field": 26, "instanti": [26, 33, 34, 44, 52, 60, 65, 67, 68, 85, 88, 155, 163, 175, 185, 186, 190, 194, 219, 244, 247], "q1": [26, 88, 106, 115, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 133, 174, 175, 177, 178, 179, 182, 183, 189, 244, 245], "q2": [26, 106, 115, 117, 118, 119, 120, 122, 123, 124, 127, 128, 133, 174, 175, 177, 178, 179, 182, 183, 189, 244, 245], "r1": [26, 62, 65, 81, 95, 96, 138, 175, 180, 195, 244], "euclideanspac": 26, "realnormedalgebra": 26, "r2": [26, 54, 65, 81, 83, 95, 96, 138, 175, 195, 199, 211, 244], "q3": [26, 106, 117, 118, 120, 122, 123, 124, 127, 175, 177, 178, 183, 244, 245], "axi": [26, 45, 57, 58, 62, 63, 65, 66, 68, 74, 77, 79, 85, 88, 95, 100, 105, 109, 115, 117, 119, 122, 123, 124, 126, 129, 132, 133, 134, 137, 138, 162, 175, 177, 178, 180, 182, 183, 185, 190, 218, 244, 245, 248, 250, 253], "bi": [26, 52, 58, 60, 79, 183, 206, 215], "cj": 26, "dk": [26, 95, 194], "atan2": [26, 31, 54, 59, 139, 199, 244], "atan": [26, 31, 54, 56, 59, 63, 68, 76, 79, 119, 133, 134, 196, 199, 201], "arc_coplanar": 26, "arc": [26, 58, 275], "orient": [26, 64, 68, 83, 115, 117, 119, 122, 126, 130, 132, 175, 178, 180, 182, 183, 192, 237, 244, 251, 252], "coplanar": [26, 66, 183], "ax": [26, 53, 56, 62, 65, 77, 84, 88, 95, 100, 109, 137, 162, 175, 183, 184, 185, 188, 196, 212, 215, 218, 220, 221, 224, 244, 245, 247, 250, 252, 275], "parallel": [26, 62, 65, 66, 68, 79, 99, 102, 105, 126, 182, 183, 192, 249, 253], "vector_coplanar": 26, "is_pur": 26, "mathbf": [26, 85, 125, 127, 128, 130, 170, 174, 175, 179, 180, 182, 183, 199, 209, 220, 247, 248, 250, 252, 253], "versor": 26, "0i": 26, "0j": [26, 189], "0k": 26, "vector_part": 26, "from_axis_angl": 26, "rotat": [26, 40, 43, 45, 52, 61, 62, 63, 65, 67, 68, 83, 88, 95, 96, 109, 117, 120, 122, 124, 130, 133, 149, 162, 175, 178, 180, 182, 183, 184, 185, 237, 244, 245, 248, 250, 252], "radian": [26, 58, 61, 62, 63, 65, 66, 67, 88, 100, 115, 138, 139, 175], "from_rotation_matrix": 26, "orthogon": [26, 29, 59, 67, 81, 88, 163, 175, 183, 191, 244, 245, 251], "det": [26, 88, 89, 132, 183, 188, 271], "index_vector": 26, "mod": [26, 53, 58, 82, 88, 89, 92, 161, 186, 188, 189, 190, 192, 194, 195, 199, 201, 209, 212, 255], "magnitud": [26, 34, 51, 52, 56, 60, 93, 95, 96, 98, 100, 119, 132, 163, 172, 175, 180, 183, 185, 244, 250, 252], "norm": [26, 88, 163, 175, 190, 192, 194, 195], "scalar_part": 26, "is_zero_quaternion": 26, "mensor": 26, "60": [26, 38, 43, 45, 51, 52, 57, 60, 79, 88, 92, 95, 96, 198, 199, 212, 215, 237], "pth": 26, "668": 26, "224": [26, 168, 193], "336": 26, "448": 26, "pow_cos_sin": 26, "900": 26, "1800": [26, 53], "2700": [26, 95], "3600": [26, 57], "rotate_point": 26, "pin": [26, 95, 96, 98, 109], "to_axis_angl": 26, "to_rotation_matrix": 26, "assumptionkei": 27, "proposit": [27, 29, 82], "is_tru": [27, 29, 30], "assumptionscontext": [27, 28, 29], "global_assumpt": [27, 28, 29], "discern": [27, 29], "refin": [27, 29, 52, 83, 186, 190, 194, 195, 211, 232], "progress": [27, 29, 92, 232], "inherit": [27, 52, 59, 82, 85, 86, 109, 154, 163, 184, 199, 219, 224, 232, 233], "askhandl": 27, "mere": [28, 29, 34, 56, 160], "thin": [28, 88, 121, 134], "undefinedpred": [28, 29], "sexi": [28, 29], "sexyprimepred": [28, 29], "sexyprim": [28, 29], "int1": [28, 29], "int2": [28, 29], "assump": [28, 29], "r3": [28, 81, 95, 96, 211], "predicate_": [28, 29], "mathematical_log": [28, 29], "r4": [28, 81, 95], "sexy_prim": [28, 29], "resolut": [28, 29, 212], "askpredicatehandl": [28, 29], "r5": [29, 211], "r6": 29, "tautolog": 29, "symmetr": [29, 31, 35, 40, 43, 44, 48, 68, 83, 84, 85, 88, 92, 174, 184, 190, 192, 195, 198, 207, 209, 225, 237], "unitari": [29, 79, 92, 149, 154], "triangular": [29, 83, 84, 88, 188, 194, 217, 219, 253], "diagon": [29, 57, 83, 84, 85, 88, 91, 114, 137, 188, 221, 222], "rank": [29, 34, 35, 36, 41, 43, 44, 46, 47, 48, 67, 81, 88, 89, 175, 177, 186, 188, 190, 192, 194, 220, 224, 225, 271], "singular": [29, 34, 44, 52, 56, 58, 59, 74, 75, 77, 79, 88, 95, 97, 129, 175, 186, 193, 206, 215, 218, 244, 255, 265], "notabl": [29, 34, 55, 60, 77, 93, 189], "truth_maintenance_system": 29, "istruepred": 30, "gt": [30, 34, 219, 237], "istruehandl": 30, "commutativepred": 30, "commutativehandl": 30, "finitepred": 30, "nor": [30, 32, 52, 82, 92, 139, 185, 195, 206, 208, 215, 225, 244], "nan": [30, 31, 58, 60, 108, 211, 219, 265], "finitehandl": 30, "r7": 30, "infinitepred": 30, "infinitehandl": 30, "symmetricpred": 30, "transpos": [30, 33, 83, 85, 88, 102, 132, 148, 175, 183, 188, 194, 212, 220, 225, 226, 271], "symmetrichandl": 30, "r8": 30, "symmetric_matrix": 30, "invertiblepred": 30, "fullrank": [30, 34], "invertiblehandl": 30, "r9": 30, "invertible_matrix": 30, "orthogonalpred": 30, "tm": [30, 138], "mm": [30, 33, 92, 110, 117, 122, 123, 163, 188], "orthogonalhandl": 30, "r10": 30, "orthogonal_matrix": 30, "unitarypred": 30, "unitaryhandl": 30, "r11": 30, "unitary_matrix": 30, "positivedefinitepred": 30, "tmz": 30, "column": [30, 33, 34, 35, 80, 82, 83, 85, 88, 89, 91, 102, 110, 114, 117, 130, 160, 167, 175, 179, 184, 188, 194, 199, 215, 218, 224, 244], "positive_definit": 30, "positivedefinitehandl": 30, "r12": 30, "definite_matrix": 30, "uppertriangularpred": 30, "m_": [30, 128, 192], "ij": [30, 165, 170, 219], "zeromatrix": [30, 85], "upper_triangular": [30, 83], "uppertriangularhandl": 30, "r13": 30, "uppertriangularmatrix": 30, "lowertriangularpred": 30, "lower_triangular": [30, 83], "lowertriangularhandl": 30, "r14": 30, "lowertriangularmatrix": 30, "diagonalpred": 30, "diagonalhandl": 30, "r15": 30, "diagonal_matrix": 30, "fullrankpred": 30, "row": [30, 33, 34, 35, 41, 44, 52, 57, 83, 84, 85, 88, 89, 91, 92, 102, 114, 115, 117, 130, 132, 133, 160, 175, 183, 188, 194, 199, 209, 218, 219, 224, 238, 244, 245], "linearli": [30, 34, 60, 76, 88, 192, 215, 217, 225], "fullrankhandl": 30, "squarepred": 30, "squarehandl": 30, "r16": 30, "square_matrix": 30, "integerelementspred": 30, "integer_el": 30, "integerelementshandl": 30, "realelementspred": 30, "real_el": 30, "realelementshandl": 30, "complexelementspred": 30, "complex_el": 30, "complexelementshandl": 30, "singularpred": 30, "singularhandl": 30, "fore": 30, "r17": 30, "singularmatrix": 30, "normalpred": 30, "normalhandl": 30, "r18": 30, "normal_matrix": 30, "triangularpred": 30, "triangularhandl": 30, "r19": 30, "triangular_matrix": 30, "unittriangularpred": 30, "unit_triangular": 30, "unittriangularhandl": 30, "evenpred": 30, "evenhandl": 30, "oddpred": 30, "oddhandl": 30, "primehandl": 30, "subject": [30, 62, 68, 96, 106, 133, 194], "compositepred": 30, "compositehandl": 30, "positivepred": 30, "positivehandl": 30, "negativepred": 30, "negativehandl": 30, "zeropred": 30, "zerohandl": 30, "nonzeropred": 30, "nonzerohandl": 30, "nonpositivepred": 30, "nonpositivehandl": 30, "nonnegativepred": 30, "nonnegativehandl": 30, "integerpred": 30, "integerhandl": 30, "r20": 30, "rationalpred": 30, "rationalhandl": 30, "r21": 30, "irrationalpred": 30, "ratio": [30, 42, 43, 51, 52, 56, 57, 60, 62, 65, 66, 67, 68, 84, 92, 102, 138, 170, 199, 208, 211, 217], "irrationalhandl": 30, "r22": 30, "realpred": 30, "disjoint": [30, 33, 41, 44, 195, 207, 237], "realhandl": 30, "r23": 30, "extendedrealpred": 30, "extendedrealhandl": 30, "hermitianpred": 30, "hermitianhandl": 30, "r24": 30, "hermitianoper": [30, 154], "complexpred": 30, "complexhandl": 30, "r25": 30, "imaginarypred": 30, "imaginaryhandl": 30, "r26": 30, "antihermitianpred": 30, "antihermitianhandl": 30, "r27": 30, "algebraicpred": 30, "askalgebraicpredicatehandl": 30, "r28": 30, "algebraichandl": 30, "transcendentalpred": 30, "transcedent": 30, "refine_pow": 31, "refine_ab": 31, "refine_arg": 31, "refine_atan2": 31, "refine_im": 31, "refine_matrixel": 31, "refine_r": 31, "refine_sign": 31, "lagrang": [32, 52, 109, 121, 125, 195, 212], "lagrangian": [32, 110, 119, 124, 125, 128, 129], "euler_equ": 32, "r29": 32, "93lagrange_equ": 32, "decreas": [32, 34, 44, 192], "monoton": [32, 34, 69], "is_decreas": 32, "lopen": [32, 52, 207, 214, 219], "ropen": [32, 58, 207, 219], "is_increas": 32, "72": [32, 52, 65, 88, 92, 95, 184, 198], "is_monoton": 32, "is_strictly_decreas": 32, "is_strictly_increas": 32, "monotonicity_help": 32, "held": [32, 53, 129, 223, 275], "univari": [32, 51, 52, 58, 75, 79, 186, 187, 189, 190, 191, 193, 194, 195, 196, 201, 214, 217, 219], "r30": 32, "mathematical_singular": 32, "interpol": [32, 61, 132, 192, 195], "finite_diff_weight": [32, 52, 265], "estim": [32, 51, 52, 56, 77, 265], "apply_finite_diff": [32, 52, 265], "differentiate_finit": [32, 52, 265], "finite_diff": [32, 52], "x_list": [32, 265], "y_list": [32, 265], "cube": [32, 34, 36, 43, 45, 58, 79, 192, 193, 212, 218, 253], "xlist": 32, "55271367880050e": 32, "indexedbas": [32, 34, 51, 52, 199, 217, 223, 224, 231], "idx": [32, 34, 199, 223, 224, 231], "zip": [32, 42, 53, 82, 92, 195, 205, 212, 215, 234, 237], "region": [32, 60, 69, 79, 185, 207, 215, 218, 219, 244, 246, 253], "bewar": [32, 60], "phenomenon": [32, 170, 192, 202, 270], "90": [32, 43, 50, 60, 83, 88, 94, 95, 98, 106, 115, 133, 199, 201, 211, 219, 232], "finitediff": 32, "wrt": [32, 34, 52, 54, 60, 69, 88, 115, 132, 175, 176, 192, 195, 244, 245, 246, 250], "arbitrarili": [32, 52, 65, 92, 192, 194, 206, 209, 215, 216, 219], "len": [32, 40, 41, 42, 43, 44, 48, 50, 52, 53, 57, 60, 67, 77, 82, 119, 134, 138, 149, 159, 195, 211, 215, 224, 237], "nearest": [32, 194], "furthest": [32, 53], "sublist": [32, 48, 53, 79, 162, 265], "fd": [32, 34, 165], "0th": [32, 44, 53, 60], "1st": [32, 44, 92, 102, 215, 216, 240, 265], "classic": [32, 58, 60, 88, 151, 167, 175, 183, 186, 260], "forward": [32, 34, 83, 102, 117, 125, 158, 182, 211, 230], "pai": 32, "attent": [32, 43, 58], "gridpoint": 32, "plan": [32, 106, 190, 213, 274], "mycoeff": 32, "3rd": [32, 44, 58, 92, 132, 195, 217, 220, 237], "2nd": [32, 44, 53, 92, 102, 132, 215, 220, 237], "cost": [32, 34, 92, 119, 218, 269], "poorer": 32, "grand": 32, "r31": 32, "51": [32, 88, 92], "184": [32, 215], "1988": [32, 144, 162, 192, 193], "699": 32, "706": [32, 88], "1090": [32, 195], "s0025": [32, 92], "5718": [32, 92], "0935077": 32, "continuous_domain": [32, 214], "tan": [32, 52, 57, 59, 79, 94, 108, 122, 123, 124, 129, 196, 198, 199, 206, 208, 215, 218, 275], "function_rang": 32, "is_convex": [32, 68], "sym": [32, 42, 43, 48, 52, 57, 175, 199, 202, 207, 211, 212, 217, 219, 225, 237, 275], "convex": [32, 68, 69, 79], "unspecifi": [32, 52, 67, 265], "multivari": [32, 52, 60, 186, 187, 189, 190, 191, 193, 195, 196, 206, 211, 217, 218, 219, 275], "concav": [32, 134], "r32": 32, "convex_funct": 32, "r33": 32, "ifp": 32, "illinoi": 32, "edu": [32, 36, 43, 44, 53, 55, 57, 79, 88, 92, 193, 198, 208, 211, 212, 215, 219, 244], "angelia": 32, "l3_convfunc": 32, "r34": 32, "logarithmically_convex_funct": 32, "r35": 32, "logarithmically_concave_funct": 32, "r36": 32, "concave_funct": 32, "lcim": 32, "mixtur": [32, 34, 69, 186, 232], "incommensur": 32, "not_empty_in": [32, 218], "finset_intersect": 32, "finite_set": [32, 207], "tracker": [32, 207, 218, 271], "aperiod": 32, "smallest": [32, 46, 58, 65, 67, 74, 82, 88, 92, 162, 175, 190, 235, 237], "verif": [32, 188, 217], "reliabl": [32, 52, 215, 235, 265], "henc": [32, 34, 42, 43, 52, 54, 58, 60, 64, 77, 80, 82, 92, 180, 185, 186, 187, 192, 199, 209, 212, 216, 218, 230, 234, 248, 249, 250, 270, 275], "stationary_point": 32, "stationari": [32, 219], "tikz": 33, "joyofcat": 33, "adamek": 33, "herrlich": 33, "strecker": 33, "joi": 33, "cat": [33, 174], "book": [33, 43, 53, 58, 110, 115, 118, 126, 130, 131, 150, 193, 198, 199, 268], "katmat": 33, "uni": [33, 79, 237], "bremen": 33, "de": [33, 53, 92, 170, 184, 185, 196, 201, 212, 213, 215, 237], "acc": [33, 132, 178, 182], "embryon": 33, "morphism": [33, 186], "codomain": [33, 186, 194], "arrow": [33, 81, 95, 185, 199], "namedmorph": 33, "prohibit": [33, 44, 45, 175], "identitymorph": 33, "compositemorph": 33, "compos": [33, 52, 53, 119, 129, 167, 169, 170, 182, 186, 190, 194, 195, 196, 199, 201, 211], "circ": [33, 52, 63, 69, 77, 85], "compon": [33, 34, 48, 52, 54, 67, 79, 85, 88, 103, 112, 125, 130, 137, 162, 167, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 195, 197, 219, 221, 224, 225, 234, 237, 244, 246, 249, 250], "new_nam": 33, "forget": [33, 275], "id_a": 33, "id_b": 33, "commutative_diagram": 33, "quadrupl": [33, 195], "mbox": 33, "hom": 33, "id": [33, 48, 58], "rightarrow": [33, 44, 48, 53, 57, 58, 60, 74, 75, 77, 79, 82, 83, 92, 185, 194, 206, 218, 237, 265], "monoid": 33, "pare1970": 33, "accompani": 33, "premis": 33, "conclus": [33, 52], "carri": [33, 34, 52, 157, 163, 170, 186, 189, 192, 194, 196, 197, 238], "premises_kei": 33, "et": [33, 79, 144, 192, 195, 196, 208, 211], "pareigi": 33, "functor": 33, "1970": [33, 88], "is_subdiagram": 33, "subdiagram": 33, "d1": [33, 48, 175, 186, 206, 219, 244], "subdiagram_from_object": 33, "preserv": [33, 34, 43, 52, 88, 163, 190, 195, 200, 201, 211], "veryuniqu": 33, "diagram_draw": 33, "diagramgrid": 33, "analys": [33, 100, 102, 132, 219], "drawn": [33, 43, 81, 185, 189, 197], "moprhism": 33, "strive": 33, "nevertheless": 33, "laid": [33, 115, 162], "width": [33, 34, 80, 179, 185, 195, 199, 230], "height": [33, 34, 68, 85, 134, 185, 186, 199, 206, 253], "emploi": [33, 51, 56, 79, 92, 195, 198, 213, 215, 219], "lai": 33, "layout": 33, "sequenti": [33, 36, 53, 58, 244, 245], "test_draw": 33, "five": [33, 41, 77, 98, 199, 212], "lemma": [33, 43, 77, 187], "fivelemma": 33, "five_lemma": 33, "arrowstringdescript": 33, "curving_amount": 33, "looping_start": 33, "looping_end": 33, "horizontal_direct": 33, "vertical_direct": 33, "label_posit": 33, "pic": 33, "princip": [33, 53, 58, 60, 77, 79, 89, 104, 117, 138, 186, 187, 188, 189, 190, 192, 194, 195, 196], "offset": [33, 34, 52, 57, 60, 224], "cell": 33, "vertic": [33, 36, 45, 46, 62, 63, 65, 67, 68, 69, 79, 81, 83, 88, 96, 114, 120, 137, 145, 184, 185, 188, 194, 199, 207, 237, 253], "disregard": 33, "unexplain": 33, "astr": 33, "dr": [33, 54, 199, 215], "12mm": 33, "loop": [33, 34, 92, 102, 118, 175, 185, 196, 199, 215, 234, 237, 270], "correspondingli": 33, "label_displac": 33, "arrow_styl": 33, "dash": 33, "xypicdiagramdraw": 33, "formatt": 33, "utilis": 33, "xypic": 33, "drawer": 33, "xymatrix": 33, "ld": 33, "arrow_formatt": 33, "therebi": 33, "default_arrow_formatt": 33, "farther": 33, "centr": [33, 49, 185], "default_formatt": 33, "45": [33, 52, 57, 68, 88, 92, 98, 195, 196, 212], "_3mm": 33, "default_curving_amount": 33, "cm": [33, 132, 219], "_1cm": 33, "default_curving_step": 33, "h1": [33, 112], "1cm": 33, "rr": [33, 52, 70, 188, 189, 191, 195, 196], "h_": [33, 43, 48, 60, 79], "_2cm": 33, "mask": [33, 199], "diagram_format": 33, "proceed": [33, 35, 77, 79, 131, 193, 209], "xypic_draw_diagram": 33, "shortcut": [33, 52, 84, 183, 199, 207, 211, 275], "insert": [33, 35, 83, 94, 95, 160, 165, 199, 219, 240], "preview_diagram": 33, "png": [33, 80, 88, 95, 96, 100, 179, 185, 199, 202], "varieti": [34, 35, 44, 52, 93, 96, 130, 186, 193, 195, 219, 237], "brief": [34, 218, 230, 252], "fab": [34, 199], "cse_main": [34, 200, 211], "cse": [34, 93, 106, 154, 200, 232, 238], "meat": 34, "lightweight": [34, 194, 269], "pycod": [34, 199], "lambdarepr": [34, 199, 238], "aesara_funct": [34, 93, 199], "float80": [34, 199], "assign_to": [34, 199], "type_alias": [34, 199], "0l": [34, 199], "powl": [34, 199], "c99": [34, 199, 232], "expm1": [34, 199], "ternari": [34, 52, 199, 212], "lack": [34, 54, 56, 112, 199, 265], "thrown": [34, 199], "fcode": [34, 199], "contract": [34, 54, 103, 165, 199, 208, 221, 222, 223, 224, 225, 226], "len_i": [34, 199], "mat_1": 34, "mat_2": 34, "jscode": [34, 199], "rh": [34, 42, 44, 52, 83, 84, 88, 109, 110, 115, 122, 123, 124, 188, 197, 199, 201, 215, 217, 218, 249], "user_funct": [34, 199], "argument_test": [34, 199], "cfunction_str": [34, 199], "octav": [34, 132, 232, 262], "custom_funct": [34, 199], "existing_octave_fcn": [34, 199], "is_matrix": [34, 199], "my_mat_fcn": [34, 199], "my_fcn": [34, 199], "mat": [34, 85, 134, 159, 199], "octave_cod": [34, 199], "summat": [34, 51, 52, 56, 57, 60, 165, 193, 199, 202, 211, 219, 220, 223, 224, 225, 231], "mathematica_cod": [34, 199], "g1": [34, 37, 42, 43, 77, 88, 102], "g2": [34, 37, 42, 43, 77, 81, 88, 102], "gamma_1": [34, 105], "gamma_2": [34, 105], "\u03b3\u2081": 34, "\u03b3\u2082": 34, "\u03b2": [34, 184], "h_i": [34, 48], "c89": [34, 199, 232], "julia_cod": [34, 199], "rust_cod": [34, 199], "powi": [34, 199], "make_routin": [34, 232], "f95": [34, 231, 232], "matlab": [34, 106, 132, 232, 262, 271], "breadth": [34, 52, 219], "c_name": [34, 232], "c_code": [34, 232], "h_name": [34, 232], "c_header": [34, 232], "volume_result": 34, "ifndef": [34, 232], "project__test__h": [34, 232], "endif": [34, 232], "preprocessor": [34, 200, 211, 232], "global_var": [34, 232], "insensit": [34, 88, 132, 199, 230, 232], "argument_sequ": [34, 232], "routin": [34, 41, 51, 52, 53, 54, 77, 82, 83, 88, 92, 137, 165, 188, 192, 195, 198, 199, 200, 211, 212, 215, 216, 217, 218, 231, 236, 237, 250], "name_expr": [34, 232], "to_fil": [34, 232], "f_name": [34, 232], "f_code": [34, 232], "choic": [34, 44, 60, 77, 79, 93, 129, 161, 170, 174, 175, 182, 190, 192, 195, 199, 211, 215, 237, 269], "hydrogen": [34, 260], "r_nl": [34, 104, 166], "my_routin": 34, "result_var": [34, 232], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 34, "__________": [34, 187], "\u212f": [34, 137, 184, 199, 265, 269, 271, 275, 276], "assoc_laguerr": [34, 60, 199], "fcn": [34, 232], "result_5397460570204848505": [34, 232], "out_8598435338387848786": [34, 232], "examin": [34, 53, 154, 230, 232, 275], "inputargu": [34, 232], "outputargu": [34, 232], "inoutargu": [34, 232], "disk": [34, 53, 207, 218, 238], "binary_funct": [34, 93, 231], "tensor": [34, 39, 54, 59, 88, 103, 112, 130, 144, 150, 151, 152, 162, 165, 174, 175, 199, 220, 221, 223, 224, 231, 238, 247, 248, 254, 258], "binary_func": [34, 231], "servic": [34, 219], "tempdir": [34, 231], "qho_1d": [34, 141], "psi_n": [34, 141], "y_": [34, 60, 77, 104, 184], "qho": 34, "tmp": 34, "reveal": [34, 92, 218, 270], "subroutin": [34, 43, 161, 192], "autofunc": 34, "dimens": [34, 36, 53, 54, 60, 61, 63, 65, 66, 67, 69, 81, 83, 85, 88, 91, 95, 103, 119, 139, 149, 151, 154, 159, 168, 169, 172, 173, 175, 185, 188, 199, 212, 215, 217, 219, 220, 224, 225, 232, 244, 246, 248, 260], "hbar": [34, 141, 147, 160, 166, 170, 172, 184], "05457162d": 34, "14159265358979d0": 34, "0d0": [34, 199], "74126166983329d": 34, "33": [34, 52, 55, 88, 130, 138, 192, 196, 199, 219], "verbos": [34, 52, 83, 92, 199, 230, 231, 274], "mute": [34, 231], "backend": [34, 80, 93, 94, 100, 118, 120, 126, 179, 196, 231, 238, 261], "auxiliari": [34, 79, 110, 115, 127, 215, 231], "function_nam": [34, 231], "sympy_express": [34, 231], "mandatori": [34, 199, 231], "illustr": [34, 88, 116, 119, 170, 189, 202, 206], "psi_nl": 34, "766": 34, "incur": [34, 93], "get_numpy_arrai": 34, "tight": 34, "temp": [34, 117], "alloc": [34, 58], "fuse": 34, "wise": [34, 35, 58, 83, 188, 192, 199, 205, 231], "unabl": [34, 65, 69, 94, 217, 244, 264, 265], "fortun": [34, 93, 119, 195, 196], "reconnect": 34, "autom": [34, 58, 93, 208, 231, 269], "ideologi": [34, 218], "fashion": [34, 52, 85, 117, 127, 128, 130, 183, 186, 237], "broadcast": [34, 93, 199, 224, 231], "outperform": 34, "jensen": 34, "quantit": [34, 167], "leverag": [34, 93, 199], "ufunc": [34, 93, 231, 238], "fn_numpi": 34, "fn_fortran": 34, "linspac": [34, 75, 93, 115, 132], "xx": [34, 88, 112, 183, 237], "21306132": 34, "98101184": 34, "44626032": 34, "timeit": [34, 196], "10000": [34, 56, 92, 93, 95, 217], "18891601900395472": 34, "004707066000264604": 34, "facil": 34, "comparison": [34, 51, 52, 82, 88, 115, 186, 194, 198, 217, 230, 237], "thereof": [34, 52, 186, 192, 194], "optims_c99": 34, "log1p": [34, 199], "expm1_opt": 34, "log1p_opt": 34, "exp2_opt": 34, "log2_opt": 34, "log2const_opt": 34, "funcminusoneoptim": 34, "func_m_1": 34, "opportunist": 34, "replaceoptim": 34, "toward": [34, 52, 60, 186, 206, 218], "catastroph": 34, "replace_in_add": 34, "cost_funct": 34, "prioriti": [34, 75, 106, 115, 183, 238], "__call__": [34, 44, 52, 194], "exp2": [34, 199], "create_expand_pow_optim": 34, "base_req": 34, "is_symbol": [34, 83], "expand_opt": 34, "opt2": 34, "is_funct": 34, "log2": [34, 199], "matin_opt": 34, "matinv_opt": 34, "matrixsolv": [34, 199], "matrix_nod": 34, "numpyprint": 34, "doprint": [34, 199], "linalg": 34, "seriesapprox": 34, "reltol": 34, "max_ord": 34, "n_point_check": 34, "threshold": [34, 92], "largest": [34, 44, 46, 52, 58, 60, 88, 91, 92, 145, 186, 190, 217, 237], "series_approx2": 34, "1e": [34, 52, 56, 88, 100, 134, 195, 217], "series_approx3": 34, "series_approx8": 34, "sumapprox": 34, "neglect": 34, "2000": [34, 38, 79, 92, 193], "sum_approx3": 34, "sum_approx2": 34, "sum_approx1": 34, "token": [34, 77, 80, 94], "diagram": [34, 41, 81, 95, 118, 119, 120, 125, 145, 224, 248, 261, 270], "codegenast": 34, "assignmentbas": 34, "augmentedassign": 34, "addaugmentedassign": 34, "subaugmentedassign": 34, "mulaugmentedassign": 34, "divaugmentedassign": 34, "modaugmentedassign": 34, "codeblock": [34, 94], "quotedstr": 34, "intbasetyp": 34, "_sizedinttyp": 34, "signedinttyp": 34, "unsignedinttyp": 34, "floatbasetyp": 34, "floattyp": 34, "complexbasetyp": 34, "complextyp": 34, "pointer": [34, 232, 233], "functionprototyp": 34, "functiondefinit": [34, 94], "stream": [34, 53, 200, 211, 237], "functioncal": 34, "breaktoken": 34, "continuetoken": 34, "nonetoken": 34, "float32": [34, 93, 94, 238], "float64": [34, 93, 219], "codeprint": 34, "complex_": 34, "bool_": 34, "intc": [34, 94], "intp": 34, "unsign": [34, 57, 211], "int8": 34, "int16": 34, "int32": 34, "int64": [34, 219], "uint8": 34, "uint16": 34, "uint32": 34, "uint64": 34, "x86": 34, "amd64": 34, "complex64": 34, "complex128": 34, "newton": [34, 60, 125, 168, 172, 192, 196], "aug_assign": 34, "tol": [34, 52, 190], "val": [34, 52, 64, 190, 194, 238], "whl": 34, "py_str": 34, "inf": [34, 44, 52, 88, 190, 195, 207, 215, 219], "exec": [34, 52, 80, 238], "1121416371": 34, "909672693737": 34, "867263818209": 34, "865477135298": 34, "865474033111": 34, "1g": 34, "3e": 34, "2003": [34, 184, 193, 199, 212], "source_format": [34, 199], "align": [34, 62, 88, 109, 126, 183, 184, 199, 230], "op": [34, 52, 88, 154, 165, 178, 182, 208, 237, 238], "parametr": [34, 60, 61, 65, 88, 185, 212, 218, 244, 246, 253], "volatil": 34, "binop": 34, "exit": [34, 92, 230], "premad": 34, "break_": 34, "lift": [34, 48, 58, 60, 77, 190, 192, 195], "left_hand_sid": 34, "topological_sort": [34, 237], "postprocess": [34, 195, 200, 211], "topolog": [34, 52, 54, 188, 237], "continue_": 34, "untyp": 34, "compliant": 34, "ok": [34, 44, 199, 215], "elem": [34, 43, 186], "ijk": [34, 224], "stride": [34, 224], "lmn": 34, "cast_nocheck": 34, "alia": [34, 45, 52, 62, 68, 83, 84, 86, 90, 149, 158, 165, 186, 189, 190, 194, 198, 207, 230, 240, 275], "nbit": 34, "storag": [34, 52, 88, 159, 184, 192], "nmant": 34, "mantissa": 34, "nexp": 34, "half_precis": 34, "f16": 34, "65504": 34, "tini": [34, 52], "ep": [34, 43, 51, 190, 194, 195], "decimal_dig": 34, "cast_check": 34, "1e5": 34, "cast": [34, 85, 267], "subnorm": [34, 43], "idempot": 34, "loos": [34, 52, 210], "overflow": [34, 234], "max_expon": 34, "min_expon": 34, "for_i": 34, "for_ji": 34, "for_kji": 34, "function_arg": [34, 230], "fcall": 34, "bar": [34, 60, 116, 125, 154, 160, 240], "baz": 34, "return_typ": 34, "fp": [34, 35, 52, 195, 201], "from_functionprototyp": 34, "prototyp": [34, 93, 232], "value_const": 34, "pointer_const": 34, "attr_param": 34, "looking_for": 34, "as_declar": 34, "formatstr": 34, "5g": 34, "stdout": [34, 230], "stderr": 34, "oppos": [34, 238, 265], "_field": 34, "_construct_": 34, "not_in_arg": 34, "float16": 34, "inttyp": 34, "super": [34, 60, 190, 199, 244, 245], "from_expr": [34, 195], "toler": [34, 52, 56, 190, 211, 217], "42": [34, 41, 52, 55, 57, 65, 66, 68, 83, 84, 86, 88, 90, 92, 190, 212, 230], "v6": 34, "123456": [34, 52, 92], "v10": 34, "12345": [34, 56], "67894": 34, "boost_mp50": 34, "boost": 34, "multiprecis": [34, 189], "cpp_dec_float_50": 34, "r37": 34, "rtol": 34, "atol": 34, "precision_target": 34, "v18": 34, "123456789012345646": 34, "123456789012345649": 34, "Will": [34, 88, 94, 194, 199, 230], "decl1": 34, "decl2": 34, "alt": 34, "secondarili": [34, 195], "mathcin": 34, "cbrt": [34, 59, 199], "minu": [34, 51, 52, 180, 192, 199, 250], "0e": [34, 52], "fma": [34, 199], "cpu": [34, 93, 132], "hypot": [34, 199], "hypotenus": [34, 68], "log10": [34, 199], "ten": [34, 93], "plu": [34, 51, 88, 94, 132, 145, 199, 209, 238], "famili": [34, 36, 70, 79, 187], "commaoper": 34, "goto": 34, "preincrement": 34, "postdecr": 34, "decrement": [34, 210, 234], "postincr": 34, "increment": [34, 43, 44, 45, 51, 68, 92, 210, 219], "predecr": 34, "alignof": 34, "sizeof": 34, "struct": 34, "dsign": 34, "arrayconstructor": 34, "ac": [34, 44, 64, 98, 112, 130, 142, 212, 219, 237, 240], "95": [34, 50, 92, 192, 199, 215, 217, 232], "do1": 34, "1d0": 34, "do2": 34, "extent": 34, "intent_out": 34, "dim": [34, 54, 67, 93, 167, 173, 199, 222, 225], "arr": 34, "fortranreturn": 34, "aid": [34, 117], "implieddoloop": 34, "idl": 34, "signallib": 34, "prog": [34, 144], "myprogram": 34, "mysub": 34, "subroutinecal": 34, "passs": 34, "inout": 34, "bind_c": 34, "sum_": [34, 51, 52, 53, 57, 60, 77, 79, 83, 85, 92, 196, 201, 202, 209, 215, 219], "cmplx": [34, 199], "intent_in": 34, "intrins": 34, "isign": 34, "lbound": 34, "lb": [34, 74, 234], "literal_dp": 34, "num": [34, 43, 52, 92, 102, 190, 211, 215, 234, 240], "literal_sp": 34, "reshap": [34, 83, 115, 132, 220, 226, 237], "arrayexpr": 34, "shp": 34, "metric": [34, 44, 48, 54, 103, 211, 215, 218, 225], "snr": 34, "convolution2d": 34, "use_renam": 34, "ren": 34, "thingi": 34, "newtons_method": 34, "itermax": 34, "counter": [34, 52, 58, 64, 83, 96, 98], "raphson": 34, "criterion": [34, 43, 131, 187, 192], "netwon": 34, "algo": [34, 44], "r38": 34, "27s_method": 34, "newtons_method_funct": 34, "param": [34, 54, 88, 212], "render_as_modul": 34, "py_mod": 34, "865474033102": 34, "render_as_source_fil": 34, "printer_set": 34, "fcodeprint": [34, 199], "fpgroup": [35, 43], "studi": [35, 42, 51, 54, 88, 183, 186, 192, 195, 212, 219], "combinator": [35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 85, 92, 201, 220, 225, 234, 237, 255, 269, 275], "free_group": [35, 42, 43], "vfree_group": 35, "xfree_group": 35, "fp_group": [35, 43], "coset_enumeration_r": 35, "fall": [35, 51, 52, 57, 80, 179, 194, 199, 212, 216, 219], "famou": [35, 60, 79, 92, 212], "langl": [35, 43, 144, 184], "rangl": [35, 43, 144, 162, 184], "gen0": 35, "gen1": 35, "gen_": 35, "freegroup": 35, "x_2": [35, 42, 57, 74, 160, 187, 192, 195, 201, 212, 218], "x_3": [35, 42, 74, 160], "s_1": 35, "r_1": [35, 186, 196], "s_2": 35, "r_2": 35, "s_k": 35, "r_k": [35, 158], "s_i": [35, 48, 79, 81], "r_i": [35, 196], "reduct": [35, 88, 111, 192, 194, 210, 212], "ho05": [35, 42], "cdhw73": 35, "hav91": 35, "coset_enumeration_c": 35, "coset_enumer": 35, "relator_bas": 35, "coset_table_bas": 35, "total": [35, 41, 43, 52, 57, 68, 81, 82, 83, 85, 117, 119, 127, 134, 138, 144, 149, 162, 171, 184, 190, 192, 195, 208, 211, 215, 223, 225, 253], "influenc": [35, 95, 186, 187], "coset_table_max_limit": 35, "4096000": 35, "safeti": [35, 44, 86], "max_coset": 35, "cox": [35, 193, 195], "c_r": [35, 209], "50": [35, 43, 55, 56, 57, 60, 68, 88, 92, 95, 96, 138, 195, 199, 208, 217], "max_stack_s": 35, "500": [35, 56, 112], "deduction_stack": 35, "stack": [35, 69, 83, 132, 188, 194, 199, 228, 234, 271], "occurr": [35, 52, 92, 115, 175, 211, 219], "exce": [35, 92, 225], "modest": 35, "low_index_subgroup": 35, "conjugaci": [35, 43], "coset_t": [35, 43], "reidemeister_present": 35, "y_1": [35, 212, 219], "y_2": [35, 212, 219], "john": [35, 43, 60, 195, 212, 215], "cannon": 35, "lucien": 35, "dimino": [35, 43], "georg": [35, 186, 215, 237], "hava": 35, "jane": 35, "watson": [35, 211], "comp": [35, 215], "463": [35, 131], "490": [35, 44], "1973": [35, 53, 181], "derek": [35, 42], "holt": [35, 42, 43, 50], "chapman": [35, 42], "hall": [35, 42, 219], "crc": [35, 42, 44], "2005": [35, 42, 79, 92, 195], "xvi": [35, 42], "514": [35, 42, 193], "symposium": [35, 77, 192, 193, 209], "issac": [35, 79, 193, 217], "bonn": 35, "1991": [35, 193], "191": [35, 218], "199": 35, "acm": [35, 51, 77, 79, 193, 209, 215, 217], "graycod": 36, "kw_arg": [36, 46, 165, 224, 225], "hamiltonian": [36, 156], "edg": [36, 45, 46, 81, 188, 199, 218, 237, 274], "hamilton": [36, 83], "vertex": [36, 46, 63, 68, 79, 188], "000": [36, 56, 79, 82, 159, 237], "110": [36, 82, 215, 217, 231, 237], "010": [36, 82, 237], "011": [36, 82, 159, 237], "111": [36, 55, 62, 82, 92, 237], "101": [36, 82, 92, 159, 237], "001": [36, 56, 82, 134, 237], "delet": [36, 81, 83, 88, 196, 240, 275], "statist": [36, 53, 60, 219, 230, 269], "manner": [36, 53, 60, 129, 163, 180, 212, 215, 220, 237, 252], "generate_grai": 36, "0000": 36, "0001": [36, 56], "0011": [36, 47], "0010": 36, "0110": 36, "0111": [36, 159], "0101": [36, 159], "0100": 36, "1100": 36, "1101": 36, "1111": 36, "1110": 36, "1010": 36, "1011": 36, "1001": 36, "r39": 36, "nijenhui": 36, "wilf": [36, 51, 217], "1978": [36, 43, 170, 193], "r40": 36, "knuth": [36, 44, 234], "2011": [36, 44, 77, 92, 181, 208], "art": [36, 44, 186, 199, 201, 234, 261], "vol": [36, 44, 53, 57, 60, 77, 88, 103, 194, 195, 209, 234, 237], "addison": [36, 44, 92, 193], "weslei": [36, 44, 92, 193], "r41": 36, "reflect": [36, 40, 44, 52, 62, 63, 68, 81, 98, 134, 137, 138, 175], "brgc": 36, "6th": [36, 92], "unrank": [36, 41, 43, 44, 46], "r42": 36, "statweb": 36, "stanford": 36, "susan": 36, "s208": 36, "node12": 36, "tail": [36, 51, 52, 190, 219], "00010": 36, "random_bitstr": 36, "bitlist": [36, 47], "gray_to_bin": 36, "endian": 36, "bin_to_grai": 36, "get_subset_from_bitstr": 36, "bitstr": 36, "graycode_subset": 36, "group_construct": 37, "directproduct": [37, 40], "__mul__": [37, 43, 83, 88, 190, 194], "shift": [37, 43, 44, 46, 53, 60, 63, 67, 69, 82, 185, 190, 192, 195, 202, 209, 217, 219], "gn": 37, "named_group": [37, 40, 42, 43, 49, 50], "cyclicgroup": [37, 40, 43], "perm_group": [37, 42, 43, 44, 49, 50], "permutationgroup": [37, 40, 42, 43, 44, 49, 50], "group_numb": 38, "is_nilpotent_numb": 38, "r43": 38, "randprim": [38, 92], "pakianathan": 38, "shankar": 38, "monthli": [38, 53, 88], "107": [38, 193], "631": 38, "634": 38, "is_abelian_numb": 38, "r44": 38, "is_cyclic_numb": 38, "r45": 38, "polyhedron": [39, 43, 79, 237], "prufer": 39, "grai": [39, 47, 80, 134, 179, 185], "nilpot": [39, 43, 88], "abelian": [39, 40, 43, 81, 170, 186], "cyclic": [39, 40, 43, 44, 45, 55, 83, 92, 225, 237], "coset": [39, 43, 48, 194], "todd": 39, "coxet": [39, 81], "subgroup": [39, 43, 44, 48, 50, 81, 92], "bibliographi": 39, "polycycl": [39, 43], "collector": 39, "symmetricgroup": [40, 42, 43, 49, 50], "transposit": [40, 43, 44, 53, 83, 85, 221], "is_group": [40, 43], "generate_schreier_sim": [40, 43], "af": [40, 43, 49, 132], "dihedralgroup": [40, 43, 50], "alternatinggroup": [40, 43, 49], "r46": 40, "symmetric_group": 40, "generators_and_rel": 40, "dihedr": [40, 44], "d_n": [40, 81, 195], "gon": 40, "bab": 40, "generate_dimino": [40, 43], "perm": [40, 42, 43, 44, 45, 50, 57, 83, 85, 88, 220], "cyclic_form": [40, 44, 45], "r47": 40, "dihedral_group": 40, "31": [40, 52, 55, 56, 68, 92, 130, 184, 195, 212], "ex": [40, 79, 103, 114, 189, 191, 194, 195, 225, 233], "r48": 40, "armstrong": 40, "abeliangroup": [40, 43], "cyclic_ord": 40, "theorem": [40, 53, 60, 62, 68, 78, 79, 83, 88, 92, 105, 106, 117, 165, 174, 182, 186, 189, 192, 206, 209, 212, 218, 251, 261], "r49": 40, "groupprop": [40, 43], "subwiki": [40, 43], "structure_theorem_for_finitely_generated_abelian_group": 40, "multiset_partit": [41, 57, 77, 234, 237], "rg": 41, "growth": [41, 92, 192, 265], "from_rg": 41, "abcd": [41, 45, 165, 237, 240], "cbead": 41, "sort_kei": [41, 52, 215], "ti": [41, 44, 52, 92], "integerpartit": [41, 237], "summand": [41, 194], "r50": 41, "partition_": [41, 57], "28number_theori": 41, "as_dict": [41, 189, 195], "as_ferr": 41, "char": 41, "ferrer": 41, "next_lex": [41, 44], "lexic": [41, 145, 237], "prev_lex": 41, "random_integer_partit": 41, "seed": [41, 43, 52, 53, 62, 65, 66, 88, 92, 192, 219, 230, 237], "85": [41, 56, 57, 88, 92, 117, 163, 184, 219], "rgs_gener": 41, "37": [41, 53, 58, 62, 88, 92, 96, 199, 212], "52": [41, 57, 92, 95, 96, 184, 198, 212, 215, 237, 265], "151": 41, "203": [41, 57], "rgs_enum": 41, "rgs_unrank": 41, "rgs_rank": 41, "pcgroup": 42, "pcg": 42, "pc_seri": [42, 43], "polycyl": 42, "pc_present": 42, "pc_sequenc": [42, 43], "miss": [42, 43, 69, 199, 217, 232, 275], "adjac": [42, 43, 44, 52, 102, 137, 188, 237], "der": [42, 43], "relative_ord": [42, 43], "polycyclic_group": [42, 43], "gen": [42, 43, 48, 49, 50, 52, 88, 186, 189, 190, 192, 194, 195, 196, 197, 205, 211, 214, 217], "is_ident": [42, 44, 52], "poss": [42, 117, 183], "pc_group": 42, "a_j": [42, 60, 77, 170, 192, 201, 209], "notin": [42, 77, 207], "_order": 42, "minimal_uncollected_subword": 42, "subword_index": 42, "i_1": [42, 165, 195, 220], "a_1": [42, 43, 53, 60, 74, 77, 83, 88, 103, 165, 170, 187, 192, 209, 212, 215, 217, 219, 275], "i_r": 42, "a_r": [42, 209], "i_2": [42, 165, 195], "s_": [42, 48, 115, 192], "s_j": [42, 81, 192], "x3": [42, 52, 57, 189, 215, 219], "collected_word": 42, "free_to_perm": 42, "bottom": [42, 43, 52, 53, 68, 83, 88, 91, 114, 194, 199, 208, 253], "pictur": [42, 199], "x_3x_2": 42, "x_3x_1": 42, "x_2x_1": 42, "x_3x_0": 42, "x_2x_0": 42, "x_1x_0": 42, "varii": 42, "derived_seri": [42, 43], "pc_resent": 42, "k_arrai": 42, "array_form": [42, 44, 45], "v_arrai": 42, "e_1": [42, 88, 186, 192, 195], "e_n": [42, 57, 81, 88, 141, 186, 195], "exponent_vector": 42, "leading_expon": 42, "dup": [43, 190, 191], "pn": [43, 119, 129], "motion": [43, 106, 109, 110, 111, 114, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 132, 133, 178, 179, 182, 183, 219], "front": [43, 52, 117, 118, 134, 164, 190, 192, 195, 199, 211, 275], "face": [43, 45, 65, 79, 115, 192, 196, 199, 212, 253, 271], "rubik": 43, "3674160": 43, "pgroup": [43, 45], "corner": [43, 45, 83, 195, 215, 218, 238], "reset": [43, 45, 185, 192, 195, 230, 233, 235], "p10": 43, "make_perm": 43, "r51": 43, "eick": [43, 50], "brien": [43, 50], "r52": 43, "seress": 43, "r53": 43, "schreier_vector": 43, "r54": 43, "nielsen_transform": 43, "product_replacement_algorithm": 43, "r55": 43, "frank": [43, 44, 88], "celler": 43, "charl": 43, "leedham": 43, "green": [43, 126, 185], "scott": 43, "murrai": 43, "alic": [43, 53], "niemey": 43, "r56": 43, "block_": 43, "28permutation_group_theori": 43, "r57": 43, "algorithmist": 43, "php": [43, 60, 92, 212, 219], "union_find": 43, "r58": 43, "multiply_transitive_group": 43, "r59": 43, "center_": 43, "28group_theori": 43, "centralizer_and_norm": 43, "derived_subgroup": 43, "nilpotent_group": 43, "colost": 43, "hulpk": 43, "cgt": 43, "cgtnote": 43, "__contains__": 43, "__weakref__": [43, 83], "weak": [43, 52, 83, 189, 192], "_coset_repres": 43, "hg": 43, "transvers": [43, 48, 50, 138, 139], "coset_transvers": 43, "_distinct_primes_lemma": 43, "_element": 43, "_eval_is_alt_sym_monte_carlo": 43, "05": [43, 74, 100, 181, 184], "mont": 43, "carlo": 43, "candidat": 43, "randomli": [43, 52, 53, 92, 159], "n_ep": 43, "_check_cycles_alt_sym": [43, 50], "_eval_is_alt_sym_na": 43, "only_sym": 43, "only_alt": 43, "_p_elements_group": 43, "_random_pr_init": 43, "_random_prec_n": 43, "modif": [43, 58, 88, 218, 219, 234], "69": [43, 88, 217, 234], "71": [43, 68, 88, 168], "_random_gen": 43, "append": [43, 52, 53, 88, 96, 132, 160, 185, 190, 199, 220, 232, 233, 237, 275], "accumul": [43, 230, 234], "random_pr": 43, "chosen": [43, 44, 53, 54, 65, 66, 88, 92, 95, 109, 133, 167, 170, 185, 186, 190, 192, 194, 199, 206, 209, 215, 219, 230, 244], "gh": [43, 187, 218, 225], "eventu": [43, 60, 79, 185, 186, 206, 232, 237], "_sylow_alt_sym": 43, "sylow": 43, "p_1": [43, 48, 53, 70, 92, 182, 209, 212], "p_2": [43, 53, 70, 92, 182, 209], "p_p": 43, "sylow_subgroup": 43, "is_alt_sym": [43, 50], "_union_find_merg": 43, "parent": [43, 52, 75, 109, 126, 175, 178, 185, 189, 190, 194, 230, 234, 244, 247, 248], "not_rep": 43, "atkinson": 43, "83": [43, 198], "87": [43, 58, 88, 92], "minimal_block": 43, "_union_find_rep": 43, "r60": 43, "r66": 43, "compress": [43, 88, 91], "r62": 43, "r68": [43, 44], "_verifi": 43, "_h": [43, 218], "gens_k": 43, "rels_k": 43, "gens_h": 43, "inject": [43, 52, 186, 190, 195, 271], "homomorph": [43, 191], "rels_h": 43, "strong_present": 43, "abelian_invari": 43, "isomorph": [43, 46, 186, 189, 192, 194], "t_1": [43, 57, 212], "t_2": [43, 57, 212], "t_r": [43, 130, 225], "542": 43, "adopt": [43, 225], "schreier": [43, 48, 50], "sim": [43, 48, 50, 77], "b_1": [43, 50, 60, 74, 77, 186, 209, 212, 215, 275], "b_2": [43, 50, 60, 74, 209, 215], "dot": [43, 44, 48, 50, 53, 65, 67, 74, 83, 88, 102, 117, 118, 119, 122, 123, 124, 127, 128, 129, 130, 132, 149, 175, 179, 181, 182, 183, 184, 186, 187, 192, 195, 199, 218, 219, 237, 244, 247, 249, 250], "b_k": [43, 50, 53, 57, 60, 201, 202], "strong": [43, 48, 49, 50, 92, 93], "89": [43, 50, 79], "55": [43, 55, 57, 88, 184, 185, 195, 212], "57": [43, 88, 92, 219], "strong_gen": [43, 49, 50], "basic_transvers": [43, 50], "basic_orbit": [43, 50], "basic_stabil": 43, "baseswap": 43, "po": [43, 77, 82, 83, 112, 130, 132, 190, 217], "strong_gens_distr": [43, 50], "swap": [43, 44, 45, 83, 88, 145, 149, 158, 219, 237], "orbit": [43, 50, 165, 166, 168], "b_": [43, 48, 50, 52, 57, 60, 77, 85, 102, 201, 209, 212, 220], "b_i": [43, 48, 50, 77, 186, 209], "la": [43, 132, 170], "vega": 43, "testutil": [43, 49, 50], "_verify_bsg": [43, 49, 50], "schreier_sim": [43, 49, 50], "bsg": [43, 48, 50, 225], "102": [43, 88], "98": [43, 53, 131, 195, 215], "pseudocod": 43, "beta_": 43, "g_": [43, 50, 51, 60, 77, 212], "foral": [43, 51, 54, 170], "zg": 43, "gz": 43, "c_g": 43, "sg": [43, 219, 225], "is_subgroup": 43, "subgroup_search": 43, "hgh": 43, "closur": [43, 49, 75, 145, 194, 207], "composition_seri": 43, "h_0": [43, 48], "h_1": [43, 48, 218], "h_2": [43, 218], "1024": [43, 199, 219], "512": [43, 60], "128": [43, 57, 60, 62, 92, 193, 199], "32": [43, 55, 58, 60, 62, 88, 92, 100, 130, 193, 195, 196, 208, 209, 212, 219, 230], "243": [43, 60, 217], "81": [43, 57, 62, 83, 88, 92, 115, 117, 184, 198], "conjugacy_class": 43, "xax": 43, "s_3": 43, "s3": [43, 51, 102, 202, 212], "feasibl": [43, 102], "resiz": [43, 44, 83, 85], "coset_factor": 43, "factor_index": 43, "_basic_orbit": 43, "u1": [43, 92, 115, 117, 118, 119, 120, 122, 123, 126, 127, 129, 132, 175, 177, 178, 179, 182, 215], "u2": [43, 91, 92, 115, 117, 118, 119, 120, 122, 123, 127, 132, 175, 178, 182, 215], "_strip": [43, 50], "coset_rank": 43, "lexicograph": [43, 44, 47, 48, 52, 192, 195, 237], "coset_unrank": 43, "standardis": [43, 189], "subsect": [43, 250], "compris": [43, 53, 85, 112, 130, 133, 195, 237], "g_0": [43, 212], "g_1": [43, 195, 206, 212, 215], "g_2": [43, 81, 206, 215], "g_i": [43, 206], "g_k": 43, "tetrahedron": [43, 45], "r64": 43, "axiom": [43, 186], "doy": 43, "sc": [43, 79], "thesi": [43, 52, 206, 244], "generator_product": 43, "sn": [43, 44, 51, 74], "is_abelian": 43, "_random_prec": 43, "probabl": [43, 52, 57, 60, 64, 92, 115, 159, 163, 209, 215, 218, 219, 231, 267, 273], "transit": [43, 132, 192, 219], "82": [43, 79, 88, 219], "proport": [43, 53, 206], "226": 43, "227": 43, "is_altern": 43, "quicker": [43, 92], "taxonomi": 43, "is_cycl": 43, "p_": [43, 48, 52, 79, 170, 212, 215, 220], "p_i": [43, 48, 92], "equiv": [43, 53, 57, 92, 194, 209, 212], "pmod": [43, 52, 53, 57, 88, 209], "p_j": [43, 48], "r65": 43, "35": [43, 46, 55, 57, 65, 66, 79, 88, 92, 117, 194, 199, 212, 215, 219], "rose": 43, "is_elementari": 43, "is_nilpot": [43, 88], "solvabl": [43, 212, 215, 218, 276], "lower_central_seri": 43, "is_solv": 43, "is_norm": [43, 163], "gr": 43, "is_perfect": [43, 92], "is_polycycl": 43, "is_primit": [43, 190, 195], "cardin": [43, 44, 47, 186, 207], "badli": 43, "random_stab": 43, "g3": [43, 102], "s5": 43, "is_symmetr": [43, 83], "is_transit": 43, "is_trivi": 43, "cba": [43, 220, 237], "mainli": [43, 60, 88, 93, 170, 179, 192, 209, 212, 215], "max_div": 43, "siev": [43, 92], "nonempti": 43, "gb": 43, "moreov": [43, 53, 77, 169, 180, 186, 187, 192, 200, 248], "congruenc": [43, 52, 92, 209, 212], "p_0": [43, 48, 70, 209, 212], "maxim": [43, 53, 81, 186, 190, 194, 206, 208], "intransit": 43, "normal_closur": 43, "adjoin": [43, 187], "yx": [43, 183], "73": [43, 51, 52, 65, 92, 215], "74": [43, 57, 92], "orb": 43, "78": [43, 66, 88, 92, 96, 170, 215, 219], "orbit_transvers": 43, "orbit_rep": 43, "send": [43, 52, 53, 58, 92, 186, 215, 217], "proof": [43, 46, 77, 79, 218], "79": [43, 44, 96], "pointwise_stabil": 43, "pointwis": [43, 50], "p_k": [43, 92], "p20": 43, "stab": 43, "schreier_sims_increment": [43, 50], "polycyclicgroup": 43, "eliminate_gen": 43, "gen_count": 43, "b1": [43, 48, 60, 92, 95, 96, 107, 115, 132, 175, 190, 199, 209, 212, 215, 249], "b_r": 43, "slp_dict": 43, "seq": [43, 52, 55, 88, 190, 192, 195, 205, 217, 237], "93": [43, 193], "schreier_sims_random": [43, 50], "consec_succ": 43, "consec": 43, "_succ": 43, "97": [43, 53, 92, 192], "sift": [43, 50, 237], "amend": 43, "decompos": [43, 44, 50, 52, 54, 58, 63, 88, 92, 149, 158, 159, 161, 190, 195, 198, 219], "unsuccess": [43, 50], "accordingli": [43, 187, 194], "halt": 43, "signifi": [43, 52, 195, 219], "g_t": 43, "leq": [43, 51, 53, 60, 77, 88, 92, 192, 194, 205, 206, 212, 219], "prop": [43, 194], "init_subgroup": 43, "supergroup": 43, "sought": [43, 92, 150, 160, 211, 218], "prune": 43, "prop_even": 43, "lengthi": 43, "114": [43, 92], "117": [43, 60], "terribl": 43, "crucial": [43, 51, 189], "len1": 43, "len2": 43, "len3": 43, "transitivity_degre": 43, "fold": [43, 52, 58, 199, 206, 211], "a_2": [43, 53, 74, 88, 192, 209, 212, 215, 219, 275], "a_k": [43, 53, 196, 202, 217], "arrang": [44, 102, 110, 130, 132, 208, 212, 225], "r69": 44, "reorder": [44, 51, 165, 195, 215, 219, 237], "pretty_print": [44, 80, 112, 117, 118, 122, 123, 124, 126, 127, 128, 130, 133, 175, 177, 178, 179, 182, 183, 199], "enter": [44, 52, 53, 57, 65, 92, 94, 95, 110, 114, 117, 127, 199, 209, 217, 230, 270, 274], "understood": [44, 92, 170, 186, 190], "economi": 44, "caution": [44, 52, 58, 211], "indexerror": [44, 88, 195], "autos": [44, 91], "watch": 44, "print_cycl": 44, "econom": [44, 79, 237], "retain": [44, 52, 58, 60, 79, 94, 195, 200, 208, 211], "biject": [44, 46, 53, 83, 186], "full_cyclic_form": 44, "rmul": 44, "unrank_lex": 44, "r73": 44, "zo42": 44, "from_sequ": 44, "a1": [44, 48, 52, 80, 83, 92, 96, 115, 132, 139, 215, 219, 220, 249, 275], "a2": [44, 48, 52, 81, 83, 92, 96, 115, 132, 139, 188, 219, 220, 249, 275], "a3": [44, 48, 52, 81, 83, 132, 249, 275], "perfectli": [44, 51, 52, 53, 192, 195, 198], "skiena": 44, "ma": [44, 51, 120], "1990": [44, 77, 209, 244], "r70": 44, "wendi": 44, "myrvold": 44, "ruskei": 44, "2001": [44, 92, 193], "lett": 44, "septemb": [44, 234], "281": 44, "284": [44, 92], "1016": 44, "s0020": 44, "0190": 44, "01": [44, 52, 56, 115, 159, 193, 211, 237], "00141": 44, "r71": 44, "kreher": 44, "stinson": 44, "1999": [44, 88, 193, 198, 215], "r72": 44, "graham": [44, 57, 58, 92], "patashnik": 44, "foundat": [44, 193, 194], "1994": [44, 192, 193, 195], "product_and_invers": 44, "r74": 44, "lehmer_cod": 44, "appliedpermut": 44, "magic": [44, 211, 230, 267], "attatch": 44, "_array_form": 44, "ascent": 44, "ie": [44, 212], "descent": 44, "fg": [44, 54, 215, 218], "gf": [44, 53, 186, 188, 189, 191, 192, 194], "r75": 44, "commutes_with": [44, 225], "cycle_structur": 44, "from_inversion_vector": 44, "get_adjacency_dist": 44, "n_adj": 44, "reev": 44, "colin": 44, "landscap": 44, "annal": 44, "86": [44, 88, 131, 198, 208], "473": 44, "josephu": 44, "get_precedence_matrix": 44, "get_precedence_dist": 44, "get_adjacency_matrix": 44, "get_positional_dist": 44, "subscript": [44, 190, 199, 209, 212, 237], "inversion_vector": 44, "lesser": [44, 195], "lie": [44, 54, 66, 67, 68, 195, 213, 219, 254, 261], "lehmer": 44, "ith": [44, 81, 92, 190, 196, 218, 219], "variat": [44, 52, 192, 206, 215, 236], "r76": 44, "eng": 44, "chula": 44, "piak": 44, "algo2008": 44, "htm": [44, 60, 79, 212], "is_singleton": 44, "is_odd": 44, "shuffl": [44, 88, 275], "012345": 44, "345": 44, "253": 44, "2531": 44, "25314": 44, "253140": 44, "r77": 44, "flavius_josephu": 44, "r78": 44, "josephus_problem": 44, "r79": 44, "wou": 44, "burtonl": 44, "trim": [44, 129], "unmov": 44, "mul_inv": 44, "next_nonlex": 44, "nonlex": 44, "rank_nonlex": 44, "unrank_nonlex": 44, "next_trotterjohnson": [44, 237], "trotter": 44, "johnson": [44, 88], "generate_bel": [44, 237], "rank_trotterjohnson": 44, "unrank_trotterjohnson": 44, "_af_par": 44, "pseudo": [44, 88, 92, 190, 192, 195], "inv_perm": 44, "enforc": [44, 117], "rmul_with_af": 44, "ascend": [44, 237], "r80": 44, "transposition_": 44, "28mathemat": [44, 52, 207], "flexibl": [44, 52, 115, 132, 182, 185, 189, 218, 265], "investig": [44, 77, 184, 186, 209, 237, 267], "cn": [44, 199, 274], "2n": [44, 51, 57, 60, 79, 83, 103, 128, 184, 202, 209], "dn": [44, 219], "klein": 44, "s4": [44, 102], "polyhedr": 45, "psg": 45, "platon": 45, "solid": [45, 66, 185, 253], "tetrahedr": 45, "octahedr": 45, "icosahedr": 45, "r81": 45, "polyhedralgroup": 45, "polyhedra": [45, 78], "shadow": 45, "h5": 45, "heinz": 46, "caylei": [46, 83], "r82": 46, "labeledtre": 46, "tree_repr": 46, "prufer_rank": 46, "prev": 46, "36": [46, 53, 57, 68, 79, 83, 88, 92, 96, 195, 199, 212, 215, 219, 253], "prufer_repr": 46, "record": [46, 52, 194, 230], "to_pruf": 46, "778": 46, "779": 46, "777": [46, 55], "1296": 46, "to_tre": 46, "r83": 46, "hamberg": 46, "erlend": 46, "2010": [46, 216, 237], "06": [46, 52, 117, 184, 219], "compact": [46, 52, 99, 132, 163, 179, 195, 199, 217, 234], "next_binari": 47, "prev_binari": 47, "bitlist_from_subset": 47, "subset_from_bitlist": 47, "superset_s": 47, "iterate_binari": 47, "iterate_graycod": 47, "prev_grai": 47, "next_grai": 47, "next_lexicograph": 47, "prev_lexicograph": 47, "rank_binari": 47, "unrank_binari": 47, "rank_grai": 47, "unrank_grai": 47, "rank_lexicograph": 47, "43": [47, 88, 92, 95, 96, 219, 275], "super_set": 47, "subset_indic": 47, "ksubset": 47, "itertool": [47, 237], "tensor_can": [48, 225], "msym": 48, "contravari": [48, 88, 225, 226], "covari": [48, 54, 88, 219, 225, 226], "d0": 48, "base_i": 48, "gens_i": 48, "n_i": [48, 192, 217], "sym_i": 48, "failur": [48, 56, 69, 77, 92, 219, 230, 275], "canonicalize_na": 48, "exchang": [48, 53, 88, 184, 188, 237], "anticommut": [48, 152, 154, 164, 165, 225], "canonical_fre": 48, "slot": [48, 149, 220, 224, 225, 270], "residu": [48, 53, 92, 192, 203, 209], "tensor_gen": 48, "list_free_indic": 48, "double_coset_can_rep": 48, "reintroduc": 48, "a_": [48, 52, 53, 60, 77, 81, 83, 85, 102, 103, 130, 201, 209, 212, 215, 217, 219, 220], "antisymmetr": [48, 54, 83, 165, 225], "d2": [48, 175, 186, 206, 219, 237, 244], "ord": [48, 53, 88], "t_c": 48, "get_symmetric_group_sg": [48, 225], "bsgs_direct_product": 48, "base2a": 48, "gens2a": 48, "t0": 48, "t1": [48, 68, 69, 92, 107, 112, 212, 219], "a_m": [48, 215], "a_n": [48, 53, 60, 77, 81, 170, 187, 192, 202, 212, 215, 275], "_a": [48, 60, 165, 195], "_b": [48, 60, 165], "base_f": 48, "gens_f": 48, "base1": 48, "gens1": 48, "base_a": 48, "gens_a": 48, "sgen": 48, "s_transvers": 48, "butler": [48, 225], "portug": [48, 225], "grow": [48, 52, 77, 88, 92, 189, 192], "computation": [48, 110, 111], "absenc": [48, 82], "observ": [48, 74, 77, 154, 183, 186, 209, 212, 215, 219, 252, 275], "opposit": [48, 68, 82, 83, 107, 109, 187, 190, 207, 211, 218, 226, 237, 244, 245, 275], "ind": [48, 201, 225], "d3": [48, 206], "a0": [48, 215, 275], "a4": [48, 52, 81, 132, 275], "a5": [48, 52], "leftrightarrow": 48, "_af_rmul": 48, "t_": [48, 57], "b0": [48, 60, 190, 209, 215], "d_": [48, 209], "p0": [48, 62, 194, 215], "dbase": 48, "recomput": [48, 195], "d_i": [48, 77, 170], "s_0": 48, "d_0": [48, 53], "b_0": [48, 53, 57, 209, 212, 215], "b_j": [48, 50, 60, 77, 209], "sx": 48, "trace": [48, 83, 85, 103, 132, 192, 199, 219, 220, 221, 223, 237, 271], "h_n": [48, 60, 79, 218], "tab1": 48, "get_transvers": 48, "antisym": 48, "base2": 48, "gens2": 48, "_cmp_perm_list": 49, "ls1": 49, "ls2": 49, "_naive_list_centr": 49, "_verify_centr": 49, "_verify_normal_closur": 49, "_base_ord": 50, "base_ord": 50, "backtrack": 50, "108": [50, 92, 96], "132": [50, 57, 175], "r84": 50, "_distribute_gens_by_bas": 50, "_strong_gens_from_distr": 50, "_orbits_transversals_from_bsg": 50, "_handle_precomputed_bsg": 50, "transversals_onli": 50, "slp": 50, "_remove_gen": 50, "new_gen": 50, "r85": 50, "r86": 50, "recurr": [51, 57, 74, 88, 194, 205, 211, 213, 215, 219, 239], "annihil": [51, 70, 71, 75, 141, 165, 217], "is_hypergeometr": 51, "binomi": [51, 56, 59, 60, 92, 195, 199, 204, 211, 215, 219, 237, 275], "rf": [51, 57, 195], "ff": [51, 53, 57, 184, 187, 188, 189, 194, 195], "speci": [51, 52], "rise": [51, 57, 60, 184, 211, 215, 219, 247], "hypersimp": [51, 210], "quotient": [51, 52, 55, 58, 92, 186, 187, 189, 191, 192, 195, 209, 211, 215], "dummy_vari": 51, "karr": 51, "quad": [51, 52, 54, 56, 60, 79, 83], "exclus": [51, 52, 82, 88, 192, 267], "emphas": 51, "typeset": [51, 199], "doit": [51, 52, 54, 57, 58, 60, 79, 85, 102, 142, 144, 146, 157, 159, 162, 163, 165, 175, 184, 195, 201, 206, 211, 215, 216, 219, 221, 244, 246, 247, 249, 250, 265, 270], "seemingli": [51, 218], "nonsens": [51, 60], "r87": 51, "michael": [51, 193, 198], "april": 51, "1981": [51, 193], "305": 51, "350": [51, 112], "dl": [51, 183, 193], "cfm": [51, 193], "doid": [51, 193], "322248": 51, "322255": 51, "r88": 51, "sigma_not": 51, "r89": 51, "empty_sum": 51, "euler_maclaurin": [51, 56], "eval_integr": 51, "maclaurin": [51, 56], "endpoint": [51, 52, 56, 180, 207, 250], "28333333333333": 51, "sstr": [51, 179, 199], "full_prec": [51, 199], "26629073187415": 51, "0175000000000000": 51, "soon": [51, 52, 115, 170, 196], "eval_zeta_funct": 51, "is_absolutely_converg": 51, "sequence_term": 51, "is_converg": 51, "r90": 51, "absolute_converg": 51, "analogi": [51, 192], "prod_": [51, 57, 60, 77, 92, 170, 209], "respons": [51, 52, 101, 102, 115, 185, 232], "diverg": [51, 60, 134, 244, 251], "dirichlet": [51, 60, 219], "r91": 51, "convergence_test": 51, "reverse_ord": 51, "selector": [51, 83, 211, 237], "handi": [51, 52, 88, 199, 270], "s0": [51, 75, 77, 137], "expr_with_intlimit": [51, 79], "exprwithintlimit": [51, 79], "reorder_limit": 51, "r92": 51, "walli": 51, "w2": [51, 139], "w2e": 51, "risingfactori": [51, 59, 60, 199, 201], "combsimp": [51, 52, 57], "pe": 51, "gammasimp": [51, 52, 211], "rewrit": [51, 52, 54, 57, 58, 60, 77, 79, 82, 95, 102, 162, 195, 206, 207, 208, 211, 215, 216, 217, 218, 219, 255, 256, 269, 271], "r93": 51, "r94": 51, "capital_pi_not": 51, "r95": 51, "empty_product": 51, "r96": 51, "infinite_product": 51, "r97": 51, "expr_with_limit": [51, 79], "exprwithlimit": [51, 79], "change_index": 51, "trafo": 51, "newvar": 51, "mapsto": [51, 77, 83, 194], "p3": [51, 62, 64, 65, 67, 68, 102, 185, 189, 208, 219], "has_empty_sequ": [51, 79], "has_reversed_limit": [51, 79], "has_finite_limit": [51, 79], "____": [51, 56, 79, 137, 187, 200, 219, 237, 276], "___": [51, 56, 79, 80, 88, 187, 211, 219, 224, 237, 274], "rubric": [51, 52], "_____": [51, 219], "gosper": 51, "gosper_norm": 51, "monic": [51, 186, 187, 190, 192, 194, 195, 198], "gcd": [51, 52, 53, 88, 92, 161, 189, 190, 191, 193, 194, 195, 199, 211, 212], "gosper_term": 51, "s_n": [51, 195], "f_k": [51, 127, 192], "g_n": [51, 57, 195], "f_n": [51, 57, 60, 186, 192, 195, 215], "gosper_sum": 51, "r98": 51, "marko": 51, "petkovsek": [51, 217], "herbert": 51, "doron": 51, "zeilberg": [51, 217], "ak": [51, 201], "peter": [51, 57, 92, 131, 181, 237], "ltd": 51, "welleslei": 51, "usa": [51, 193], "1997": [51, 77, 92, 193, 209], "convert_xor": [52, 94], "09": [52, 100], "2e": 52, "xor": [52, 55, 82, 94, 199, 267], "sympifyerror": 52, "coerc": [52, 129, 192], "cooper": 52, "sage": [52, 92, 184, 269], "shouldn": [52, 196], "unsanit": [52, 238, 264], "bitcount": 52, "improperli": 52, "unbound": [52, 224], "fallback": [52, 80, 165, 179, 189, 199, 217], "ast": [52, 199, 256], "00000000000000": [52, 56, 166, 199, 219], "mylist1": 52, "mylist": 52, "mylist2": 52, "xxx": [52, 79, 88, 237, 239], "autosimplif": [52, 208, 211], "kern": 52, "r101": 52, "7649": 52, "r100": 52, "r104": 52, "r102": 52, "r103": 52, "r105": 52, "r106": 52, "r107": 52, "r99": 52, "recreat": 52, "isfinit": 52, "__cacheit": 52, "maxsiz": 52, "noqa": [52, 80, 190, 233], "f811": 52, "sympy_use_cach": 52, "cot": [52, 59, 60, 94, 196, 199, 208], "_arg": [52, 58], "as_mut": [52, 84, 85], "as_content_primit": [52, 88, 187, 195], "stub": 52, "as_dummi": [52, 79], "_0": [52, 77, 83, 88, 195, 238], "_r": [52, 165, 209, 218], "bound_symbol": [52, 79], "besid": [52, 192, 217], "typeinfo": 52, "truli": [52, 60, 170], "piec": [52, 56, 209, 232], "scan": 52, "appliedundef": 52, "canonical_vari": 52, "class_kei": 52, "sorted_class": 52, "dummy_eq": 52, "eg": [52, 115, 172, 218], "fromit": 52, "has_fre": 52, "exp_polar": [52, 59, 60, 209], "dif": 52, "_prec": 52, "q_": [52, 179, 212, 215], "r_": [52, 104, 166, 196], "repl_dict": 52, "rcall": [52, 54], "simul": [52, 115, 132, 198], "abus": [52, 225], "succe": [52, 77, 82, 92, 155, 194, 206], "newtyp": 52, "intuit": [52, 170, 203, 215], "is_mul": 52, "is_add": [52, 218], "mysin": [52, 238, 264], "_eval_rewrite_as_": 52, "_eval_rewrite_as_co": 52, "tie": [52, 237], "delai": [52, 100, 129, 208, 230, 265], "unsort": [52, 106, 174], "333333333333333333333": 52, "333333333333333314830": 52, "wildcard": [52, 211], "registri": 52, "metaprogram": 52, "address": [52, 199, 218], "mostli": [52, 58, 79, 88, 132, 160, 182, 186, 198, 199, 209, 217, 274], "__truediv__": [52, 190], "class_nam": 52, "mysingleton": 52, "_eval_is_g": 52, "_eval_is_eq": 52, "args_cnc": 52, "cset": 52, "split_1": 52, "suppress": [52, 94, 228, 235], "as_coeff_add": 52, "dep": [52, 215], "as_coeff_expon": 52, "as_coeffici": 52, "zz": [52, 57, 74, 75, 79, 85, 88, 89, 92, 112, 183, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 214], "coeff_monomi": [52, 195], "polytool": [52, 195, 218], "monomi": [52, 79, 82, 92, 187, 189, 190, 191, 192, 198, 199, 275], "as_coefficients_dict": [52, 217], "inquiri": 52, "121": [52, 57, 92, 102, 175, 217], "84": [52, 56, 92], "separatevar": [52, 210, 215], "n3": [52, 115], "as_leading_term": [52, 206], "logx": [52, 206], "cdir": 52, "_eval_as_leading_term": 52, "as_numer_denom": [52, 217], "as_ordered_factor": 52, "as_ordered_term": 52, "as_powers_dict": 52, "lost": 52, "as_real_imag": [52, 58, 83, 200], "as_term": 52, "aseri": 52, "hir": 52, "asymptot": [52, 77, 102, 265], "hierarch": 52, "normalis": [52, 201], "induc": [52, 83, 194, 208, 237], "gruntz": [52, 201], "majorli": 52, "mrv": [52, 206], "overal": [52, 172, 185, 217], "rapidli": [52, 56, 77, 206], "till": [52, 95, 96, 115, 215], "r108": 52, "dominik": [52, 201], "proc": [52, 217], "1993": [52, 193], "symp": 52, "239": 52, "244": [52, 192], "r109": 52, "p90": 52, "r110": 52, "asymptotic_expans": 52, "_first": [52, 58], "distribute_order_term": [52, 211], "compute_leading_term": 52, "could_extract_minus_sign": 52, "signsimp": [52, 123, 211], "failing_express": 52, "modulu": [52, 53, 55, 60, 62, 68, 83, 92, 95, 96, 186, 190, 192, 194, 195, 198, 218], "power_bas": [52, 83], "power_exp": [52, 83], "multinomi": [52, 83, 92, 219], "expr_free_symbol": 52, "extract_addit": 52, "extract_multipl": 52, "extract_branch_factor": 52, "allow_half": 52, "fourier_seri": [52, 202], "geto": 52, "getn": 52, "is_algebraic_expr": 52, "is_rational_funct": 52, "r111": 52, "algebraic_express": 52, "is_const": 52, "constanc": 52, "agre": [52, 53, 60, 67, 77, 209], "test_expr": 52, "prove": [52, 77, 79, 88, 186, 206, 215, 249], "failing_numb": 52, "is_meromorph": 52, "meromorph": [52, 60], "multivalu": [52, 58], "cut": [52, 57, 58, 60, 68, 77, 186, 209, 234, 240, 275], "hit": [52, 270], "is_polynomi": 52, "rational_funct": 52, "leadterm": 52, "xlim": [52, 185], "lseri": 52, "exaxmpl": 52, "nseri": 52, "_eval_nseri": 52, "innermost": 52, "disadvantag": 52, "met": [52, 212, 218, 233, 275], "nsimplifi": [52, 56, 210], "ratsimp": [52, 210], "removeo": [52, 132, 199, 265], "chop": [52, 56, 60, 83, 88, 217, 264], "123": [52, 57, 62, 82, 162, 175, 237, 244, 245], "lazi": [52, 85, 195], "smooth": [52, 56, 92, 201], "taylor_term": [52, 58], "previous_term": [52, 58], "dummy_index": 52, "temporari": [52, 231], "_dummy_10": 52, "contigu": [52, 209, 232], "x4": [52, 57, 189], "x5": [52, 57, 189], "x6": [52, 189], "x7": [52, 189], "x8": [52, 189], "x9": [52, 189], "x50": 52, "x51": 52, "y0": [52, 71, 73, 75, 215], "y1": [52, 132], "y2": [52, 132, 189], "y3": [52, 189], "y4": 52, "xa": [52, 187, 192], "xb": [52, 240], "xc": [52, 164, 240], "disambigu": 52, "x01": 52, "x02": 52, "x11": 52, "x12": 52, "escap": [52, 94, 185, 199, 240], "newli": [52, 77, 209], "undefinedfunct": [52, 177, 199, 231, 238], "f821": [52, 233], "cofactor": [52, 88, 190, 192, 195], "lcm": [52, 92, 190, 191, 192, 195, 199], "50000000000000": [52, 56], "100000000000000000000": 52, "1e20": 52, "00000000000000e": 52, "23456789123456789": 52, "23456789123457": 52, "00100": 52, "sent": [52, 79, 211], "789": [52, 92], "123_456": 52, "123456789": 52, "12e": 52, "012": 52, "60e2": 52, "6000": 52, "600e": 52, "125": [52, 56, 79, 92, 190, 205, 212], "099609": 52, "12500": 52, "12500000000000000000": 52, "closest": [52, 65], "5404319552844595": 52, "54": [52, 88, 96, 192, 198, 237], "29999999999999998890": 52, "30000000000000000000": 52, "_mpf_": [52, 189], "4915": 52, "70": [52, 53, 69, 79, 88, 92, 198, 199, 212, 219, 240], "307": 52, "mpf": [52, 189, 190], "is_float": 52, "unprejud": 52, "3602879701896397": 52, "18014398509481984": [52, 211], "limit_denomin": 52, "320": 52, "75": [52, 55, 219, 244], "use_tri": [52, 92], "use_rho": [52, 92], "use_pm1": [52, 92], "factorint": [52, 92, 194, 195, 234], "trial": [52, 92, 192, 204, 208, 215, 219], "max_denomin": 52, "1000000": [52, 92], "141592653589793": 52, "311": [52, 92], "discard": [52, 194, 199, 218], "99999999999999999999": 52, "hookrightarrow": 52, "minpoli": [52, 189, 190, 194], "dmp": [52, 186, 190, 191, 195], "complexrootof": [52, 88, 190, 195, 215], "anp": [52, 189, 190, 194, 195], "to_list": [52, 188, 190], "crootof": [52, 195, 215, 217], "minpoly_of_el": 52, "414213562": 52, "scratch": [52, 170], "6x": [52, 192], "to_number_field": [52, 194], "to_root": 52, "primitive_el": [52, 189, 190, 194], "knew": [52, 275], "golden": [52, 56, 92], "5th": [52, 132, 192, 194], "cyclotom": [52, 190, 191, 192, 193, 194, 195], "cyclotomic_poli": [52, 194, 195], "61803398874989": 52, "2i": 52, "a6": 52, "a6_wrong": 52, "309016994374947": 52, "951056516295154": 52, "field_el": 52, "is_alias": 52, "is_primitive_el": 52, "native_coeff": 52, "to_algebraic_integ": 52, "to_primitive_el": 52, "Its": [52, 58, 68, 132, 163, 192, 199, 207], "a_prim": 52, "number_cl": 52, "greatest": [52, 57, 62, 92, 187, 189, 190, 192, 193, 195, 198], "euclid": [52, 192, 193], "r112": 52, "euclidean_algorithm": 52, "r113": 52, "r114": 52, "1_": 52, "28number": 52, "r115": 52, "88": [52, 88, 92], "921_": 52, "r116": 52, "one_half": 52, "holder": 52, "ieee": [52, 53], "754": 52, "r117": 52, "affin": [52, 53, 67, 186], "compactif": 52, "r118": 52, "tild": [52, 58, 220], "undetermin": [52, 88, 195, 201, 215, 217], "phase": [52, 79, 100, 134, 137, 139, 149, 150, 218], "718281828": 52, "napier": 52, "r119": 52, "e_": [52, 57, 88], "28mathematical_const": 52, "r120": 52, "imaginary_unit": [52, 199], "141592654": 52, "circumfer": [52, 62], "diamet": [52, 62], "area": [52, 62, 64, 68, 69, 95, 96, 251], "is_irr": 52, "r121": 52, "mascheroni": [52, 60], "5772157": 52, "recur": 52, "harmon": [52, 59, 92, 104, 144, 184, 199, 260], "lim": [52, 206, 265], "limits_": [52, 184, 201, 269], "ln": [52, 58, 79, 199, 201, 215, 219, 275], "r122": 52, "93mascheroni_const": 52, "91596559": 52, "r123": 52, "27s_constant": 52, "r124": 52, "golden_ratio": 52, "tribonacci": [52, 59], "fibonacci": [52, 56, 59, 92], "predetermin": [52, 230], "8392867552141611326": 52, "r125": 52, "generalizations_of_fibonacci_numb": [52, 57], "tribonacci_numb": [52, 57], "modulo": [52, 53, 89, 92, 161, 186, 188, 189, 190, 192, 194, 195, 196, 198, 199, 202, 211], "r126": 52, "modular_multiplicative_invers": 52, "r127": 52, "extended_euclidean_algorithm": 52, "oscil": [52, 260], "conform": [52, 218, 223, 224], "r128": 52, "r129": 52, "zero_to_the_power_of_zero": 52, "r130": 52, "indeterminate_form": 52, "as_base_exp": [52, 58, 59, 237], "floor": [52, 59, 92, 189, 190, 199, 219], "geq": [52, 53, 60, 88, 195, 212, 219, 275], "factor_": [52, 53, 92, 195, 212], "perfect_pow": [52, 92], "infix": 52, "matmul": [52, 85, 188], "as_coef_mul": 52, "undesir": [52, 106, 115, 129, 187, 190, 209], "4596": 52, "compound": [52, 120, 163, 203, 257], "5728": 52, "suspect": [52, 92], "5706": 52, "moot": 52, "off": [52, 62, 77, 83, 91, 93, 117, 126, 149, 186, 195, 199, 215, 230, 241, 244, 269], "nb": 52, "sensit": [52, 102, 132, 185, 192, 211, 230], "assocop": 52, "quadrat": [52, 53, 79, 92, 186, 190, 194, 195, 212, 217, 219], "matadd": [52, 85, 199], "as_coef_add": 52, "extract_leading_ord": 52, "commutative_part": 52, "noncommutative_part": 52, "order_symbol": 52, "subprocess": [52, 199, 230, 231], "dividend": [52, 190], "rop": 52, "validrelationoper": 52, "rel_op": 52, "fourth": [52, 53, 187, 215, 265], "my_equ": 52, "my_inequ": 52, "reversedsign": 52, "_eval_eq": 52, "respond": 52, "boolalg": [52, 82], "client": [52, 234], "counterpart": [52, 53, 215, 265], "litter": 52, "oddbal": 52, "minor": [52, 62, 88, 199, 230], "caveat": [52, 195, 255, 262, 267], "succinctli": 52, "coupl": [52, 88, 129, 144, 159, 162], "annoy": 52, "succinct": 52, "occasion": 52, "r131": 52, "operar": 52, "circuit": [52, 149, 152], "greaterthanobject": 52, "__bool__": 52, "335": 52, "march": 52, "2012": 52, "r132": 52, "r133": 52, "r134": 52, "mdarg": 52, "fgh": 52, "vsin": 52, "vdiff": 52, "narg": [52, 192], "naturals0": [52, 199, 218, 219], "evalul": 52, "fairli": [52, 60, 77, 117, 125, 174, 186], "conserv": [52, 110, 128, 176, 246, 251, 252], "136": [52, 88], "indirect": [52, 54, 60, 92, 165, 215], "implic": [52, 82, 192], "fx": [52, 54, 185, 215, 216], "fxx": 52, "insconsist": 52, "presenc": [52, 58, 82, 114, 119, 129, 215, 223], "nonvanish": 52, "_diff_wrt": 52, "_sort_variable_count": 52, "vc": 52, "vsort": 52, "collaps": [52, 159, 211], "vsort0": 52, "vi": 52, "dfx": 52, "equidist": 52, "sq2": 52, "xl": 52, "d2fdxdy": 52, "doit_numer": 52, "z0": [52, 206], "unifi": [52, 133, 188, 190, 191, 192, 194, 195, 207], "zeroth": [52, 194], "idiff": [52, 69], "r135": 52, "legaci": [52, 79, 88, 219], "v5_2": 52, "infunct": 52, "algebraiccomput": 52, "f_real": [52, 59], "f_real_inherit": [52, 59], "is_singular": [52, 59, 75], "holomorph": [52, 59, 77], "superfici": 52, "unexpect": [52, 230], "ss": [52, 190], "denom": [52, 189, 190, 194, 211], "_eval_expand_bas": 52, "_eval_expand_complex": 52, "shut": [52, 195], "unwant": [52, 217, 237], "alphabet": [52, 53, 102, 170, 187, 212, 232], "expand_hint": 52, "_eval_expand_hint": 52, "liabl": [52, 82], "metahint": 52, "myclass": 52, "_eval_expand_doubl": 52, "hyperexpand": [52, 60, 74, 77, 209], "div": [52, 187, 189, 190, 195, 199, 211, 270], "horner": [52, 132, 192, 195], "untouch": 52, "dkei": 52, "mixin": [52, 237], "maxn": [52, 56, 83], "subresult": [52, 190, 193, 195], "000100000000000000": 52, "maxprec": 52, "quadratur": [52, 56, 79, 215], "tanh": [52, 56, 59, 79, 196, 199, 211, 275], "oscillatori": [52, 56, 204], "osc": [52, 56], "advers": 52, "1e16": 52, "291": 52, "builtin": [52, 190, 199, 207, 240, 274], "speedup": [52, 88, 93, 192, 196, 238], "framework": [52, 115, 125, 224, 230, 232, 238], "slice": [52, 82, 83, 88, 94, 190, 195, 205, 207, 211, 220, 237], "parametris": [52, 207], "element_kind": [52, 83, 207], "tuple_count": 52, "setkind": [52, 83, 257], "isprimit": 52, "_gcd_term": 52, "terms_gcd": [52, 190, 195], "entiti": [52, 62, 65, 66, 68, 69, 77, 115, 130, 180, 218, 252, 261, 271], "arguement": 52, "broad": [52, 270], "lex": [52, 80, 179, 187, 189, 190, 192, 195, 196, 198, 199, 211], "grlex": [52, 80, 179, 190, 195, 198, 199], "grevlex": [52, 80, 179, 187, 192, 195, 198, 199], "rev": 52, "unaffect": [52, 218], "_node": 52, "fastest": [52, 57, 79, 92, 93, 196], "undecor": 52, "ineffici": [52, 88, 189], "breaker": 52, "hash": [52, 190, 192, 200, 211, 215, 230, 232], "collis": [52, 91], "wast": [52, 89, 188], "rng": 52, "getstat": 52, "intention": 52, "tn": 52, "td": [52, 199, 274], "randrang": 52, "999": [52, 56], "238": [52, 92], "randint": [52, 88, 192], "ri": [52, 199], "rv": [52, 208, 219, 237], "nonbas": 52, "postord": 52, "descend": [52, 186, 194, 232], "subtre": [52, 199, 234], "educ": [53, 88], "cryptograph": 53, "encrypt": 53, "hide": [53, 199], "cipher": 53, "vigener": 53, "hill": [53, 60, 110, 131, 175, 181, 244], "bifid": 53, "rsa": 53, "kid": 53, "feedback": [53, 99, 102, 268], "elgam": 53, "plaintext": [53, 199], "ciphertext": 53, "monoalphabet": 53, "polyalphabet": 53, "crypto": 53, "az": [53, 212], "uppercas": [53, 209], "hello": [53, 237], "world": [53, 98, 119, 129, 237], "helloworld": 53, "check_and_join": 53, "padded_kei": 53, "puppi": 53, "opqrstuvwxi": 53, "puyoqrstvwx": 53, "artist": 53, "aphras": 53, "ara": 53, "hp": 53, "cycle_list": 53, "encipher_shift": 53, "msg": [53, 79], "decipher_shift": 53, "gonavybeatarmi": 53, "ct": [53, 81, 192], "hpobwzcfbubsnz": 53, "deciph": 53, "l1": [53, 62, 64, 65, 109, 112, 118, 130, 190, 192, 195, 212, 219], "l2": [53, 64, 65, 109, 112, 118, 151, 167, 190, 192, 219], "caesar": 53, "juliu": 53, "suetoniu": 53, "protect": [53, 199], "militari": 53, "nephew": 53, "augustu": 53, "reportedli": 53, "r136": 53, "caesar_ciph": 53, "r137": 53, "caesarsmethod": 53, "encipher_rot13": 53, "rot13": 53, "caeser": 53, "midwai": 53, "decipher_rot13": 53, "r138": 53, "decrypt": 53, "tbanilorngnezl": 53, "encipher_affin": 53, "_invers": 53, "cx": [53, 96], "recov": [53, 79, 170, 192, 194, 195, 212, 215], "decipher_affin": 53, "r139": 53, "affine_ciph": 53, "reciph": 53, "navi": 53, "beat": 53, "armi": 53, "trobmvenbgbalv": 53, "encipher_atbash": 53, "enciph": 53, "atbash": 53, "hebrew": 53, "decipher_atbash": 53, "tlmzebyvzgzinb": 53, "r140": 53, "encipher_substitut": 53, "oeyag": 53, "034": 53, "60n": 53, "v4b3": 53, "rm4": 53, "immateri": 53, "anyv": 53, "wherebi": 53, "r141": 53, "substitution_ciph": 53, "encipher_vigener": 53, "me": [53, 115, 132, 175, 199, 221], "mondai": 53, "qrgkkthrzqebpr": 53, "krypto": 53, "sculptur": 53, "cia": 53, "headquart": 53, "r143": 53, "decipher_vigener": 53, "alp": 53, "palimpsest": 53, "emufphzlrfaxyusdjkzldkrnshgnfivj": 53, "betweensubtleshadingandtheabsenc": 53, "blais": 53, "sixteenth": 53, "centuri": [53, 186], "diplomat": 53, "accid": [53, 238], "invent": [53, 194, 217, 269], "giovan": 53, "batista": 53, "belaso": 53, "1553": 53, "civil": [53, 95], "war": 53, "confederaci": 53, "brass": 53, "nsa": 53, "museum": 53, "fort": 53, "mead": 53, "r142": 53, "sender": 53, "assembl": [53, 77, 206], "concaten": [53, 83], "frequenc": [53, 79, 100, 102, 139, 141, 149, 166], "kasiski": 53, "discov": [53, 77, 106, 223, 271], "babbag": 53, "unbreak": 53, "ye": [53, 82, 215], "gonavybeatarmyyesyoucan": 53, "gold": 53, "auto_kei": 53, "goldbuggonavybeatarmyy": 53, "mcydwshkogamkzcelyfgayr": 53, "pt": [53, 61, 62, 63, 65, 66, 67, 68, 205], "vigenere_ciph": 53, "archiv": [53, 131, 212], "20071116100808": 53, "r144": 53, "filebox": 53, "vt": 53, "batman": 53, "goo": 53, "gl": 53, "ijr22d": 53, "decod": 53, "qrgk": 53, "kt": [53, 120], "hrzqe": 53, "bpr": 53, "meetmeonmondai": 53, "encipher_hil": 53, "z_": [53, 211], "r145": 53, "lester": 53, "1920": 53, "r146": 53, "polygraph": 53, "bare": [53, 110], "ceil": [53, 59, 92, 109, 199], "l_1": [53, 57, 103, 184, 209, 225], "l_t": 53, "c_t": 53, "l_i": [53, 184, 209], "decipher_hil": 53, "hill_ciph": 53, "june": [53, 88], "juli": [53, 212], "1929": 53, "306": 53, "312": [53, 175, 217, 244, 245], "ueqdueodoctcwq": 53, "st": [53, 79, 165], "hjeb": 53, "stqq": 53, "ispk": 53, "stzz": 53, "hd": 53, "ormv": 53, "uiki": 53, "encipher_bifid": 53, "polybiu": 53, "printabl": 53, "bifid5": 53, "decipher_bifid": 53, "encipher_bifid5": 53, "encipher_bifid6": 53, "r147": 53, "bifid_ciph": 53, "ieilhhfstsfqy": 53, "ieilh": 53, "hfst": 53, "fqyej": 53, "bmtwmg": 53, "bio": 53, "gold_bug": 53, "hg2sfuei7t": 53, "pug": 53, "heldo": 53, "wor6d": 53, "bifid5_squar": 53, "5x5": 53, "cap": [53, 56, 165, 207, 218], "tradition": [53, 60], "decipher_bifid5": 53, "round_trip": 53, "josi": 53, "osi": 53, "iosi": 53, "qiq": 53, "1901": 53, "felix": 53, "delastel": 53, "onto": [53, 65, 66, 67, 77, 81, 88, 91, 93, 194], "helen": 53, "cryptanalysi": 53, "german": 53, "fridai": 53, "ieilehfstsfxe": 53, "okai": 53, "decipher_bifid6": 53, "8am": 53, "kfkljjhf5mmmktfrgpl": 53, "meetmeonmondayat8am": 53, "bifid6_squar": 53, "6x6": 53, "rsa_public_kei": 53, "totient": [53, 92], "carmichael": [53, 92], "p_n": [53, 57, 60, 79], "multiprim": 53, "land": 53, "rad": [53, 100, 115, 194], "reduced_toti": [53, 92], "uniquenss": 53, "rsa_private_kei": 53, "e_0": 53, "canonicalz": 53, "61": [53, 57, 68, 88, 92, 201], "3233": 53, "797": 53, "1577": 53, "multipow": 53, "cryptosystem": 53, "coprim": [53, 79, 92, 161, 192, 212], "30030": 53, "becam": [53, 125], "hardest": 53, "claim": [53, 183, 209, 218], "encipher_rsa": 53, "decipher_rsa": 53, "r148": 53, "rsa_": 53, "28cryptosystem": 53, "r149": 53, "cacr": 53, "uwaterloo": 53, "techreport": 53, "2006": [53, 208], "cacr2006": 53, "r150": 53, "springer": [53, 79, 92, 192, 193, 215], "1007": 53, "2fbfb0055738": 53, "r151": 53, "itii": 53, "manuscript": 53, "1381": 53, "2753": 53, "413": 53, "1193": 53, "823": 53, "r152": 53, "r153": 53, "r154": 53, "r155": 53, "bmod": [53, 199], "vice": [53, 79, 92, 95, 155, 175, 186, 190, 247, 248, 267], "versa": [53, 79, 92, 95, 155, 175, 186, 190, 247, 248, 267], "asymmetr": [53, 68], "puk": 53, "prk": 53, "chines": [53, 92, 192], "k_1": [53, 92, 192, 209], "k_2": 53, "k_n": [53, 192], "p_3": [53, 182], "k_3": 53, "moduli": [53, 92, 192], "2048": [53, 92, 199], "overhead": [53, 93, 196], "modular": [53, 92, 161, 191, 193, 218], "crt": [53, 92, 192], "overcompens": 53, "theorit": 53, "new_msg": 53, "kid_rsa_public_kei": 53, "grade": [53, 80, 179, 195], "school": [53, 208], "bob": [53, 109], "369": 53, "58": [53, 88, 225], "kid_rsa_private_kei": 53, "encipher_kid_rsa": 53, "200": [53, 83, 88, 92, 95, 100, 244], "161": 53, "decipher_kid_rsa": 53, "pub": [53, 244], "pri": 53, "encode_mors": 53, "sep": [53, 199, 216, 230], "mors": 53, "attack": 53, "flank": 53, "r156": 53, "morse_cod": 53, "decode_mors": 53, "word_sep": 53, "mc": [53, 120], "east": 53, "r157": 53, "lfsr_sequenc": 53, "lfsr": 53, "c_k": 53, "golomb": [53, 92], "g157": 53, "autocorrel": 53, "lim_": [53, 58, 60, 77, 79, 206, 265, 269], "balanc": [53, 131, 186, 219, 230], "solomon": 53, "aegean": 53, "park": 53, "laguna": 53, "1967": [53, 193], "lfsr_autocorrel": 53, "lfsr_connection_polynomi": 53, "massei": 53, "m158": 53, "jame": [53, 192], "synthesi": 53, "bch": 53, "tran": 53, "122": [53, 55, 60], "127": [53, 92], "elgamal_public_kei": 53, "elgamal_private_kei": 53, "1031": 53, "636": 53, "212": [53, 79, 193], "mathmat": 53, "dlp": 53, "is_primitive_root": [53, 92], "encipher_elgam": 53, "c2": [53, 62, 69, 83, 85, 151, 165, 207, 215, 219, 246, 249, 276], "encryp": 53, "decipher_elgam": 53, "eucliden": 53, "dh_public_kei": 53, "dh_private_kei": 53, "_p": [53, 165, 190, 192, 194, 206, 209, 217], "_g": 53, "diffi": 53, "hellman": [53, 92], "publicli": 53, "secretli": 53, "dh_shared_kei": 53, "sk": 53, "gm_public_kei": 53, "goldwass": 53, "micali": 53, "gm_private_kei": 53, "b_n": [53, 57, 81, 186, 202], "jacobi_symbol": [53, 92], "reconstruct": [53, 88, 192, 270], "residuos": 53, "entropi": [53, 219], "encipher_gm": 53, "public_kei": 53, "gm": [53, 168], "decipher_gm": 53, "encipher_railf": 53, "rail": 53, "railfenc": 53, "horel": 53, "ollwd": 53, "r160": 53, "rail_fence_ciph": 53, "decipher_railf": 53, "diffgeom": 54, "euclidean": [54, 65, 67, 175, 190, 192, 195], "r161": 54, "chart": [54, 185], "parameter": [54, 61, 62, 65, 68, 212], "r162": 54, "sussman": 54, "wisdom": 54, "farr": 54, "2013": [54, 64, 83, 273], "tranform": 54, "cartesian": [54, 95, 133, 138, 152, 155, 160, 180, 185, 186, 207, 218, 237, 247, 248, 250, 251], "polar": [54, 58, 60, 62, 68, 78, 95, 104, 135, 185, 207, 211, 218, 260], "relation_dict": 54, "car2d": 54, "pol": 54, "coordinatesymbol": 54, "jacobian": [54, 88, 129, 217], "jacobian_determin": 54, "r163": 54, "coordinate_system": 54, "base_oneform": 54, "coord_index": 54, "oneform": 54, "base_scalar": 54, "basescalarfield": 54, "base_vector": [54, 244], "coord_funct": 54, "to_si": 54, "coord": [54, 67, 69, 106, 163, 178], "immutabledensematrix": [54, 83, 84, 85, 86, 219], "rn": 54, "r2_r": 54, "r2_p": 54, "jacobian_matrix": 54, "point_to_coord": 54, "coord_si": [54, 246], "imbu": 54, "difficulti": [54, 116], "arriv": [54, 192, 209, 211, 215, 219, 275], "inappropri": 54, "poin": 54, "unappropri": 54, "fy": [54, 185, 216], "ftheta": 54, "basevectorfield": 54, "point_p": 54, "point_r": 54, "s_field": 54, "dxi": 54, "v1": [54, 65, 88, 112, 132, 175, 176, 178, 219, 238, 244, 246, 247, 248, 249], "v2": [54, 65, 88, 112, 175, 176, 178, 238, 244, 246, 247, 248, 249], "v_1": [54, 194, 217], "v_2": [54, 194], "e_x": [54, 225], "e_i": [54, 186, 209, 225], "e_r": 54, "c_xy": 54, "c_xr": 54, "unfortun": [54, 56, 93, 198, 212], "e_rho": 54, "form_field": 54, "exterior": [54, 68], "dg": 54, "tensorproduct": [54, 162, 164, 220, 221], "multilinear": 54, "wedg": [54, 77], "tp1": 54, "tp": [54, 137, 164, 190], "wedgeproduct": 54, "wp1": 54, "liederiv": 54, "v_field": 54, "transport": 54, "pushforward": 54, "e_theta": 54, "basecovarderivativeop": 54, "christoffel": 54, "metric_to_christoffel_2nd": 54, "ch": [54, 88, 212], "cvd": 54, "covarderivativeop": 54, "intcurve_seri": 54, "vector_field": [54, 250], "start_point": 54, "dt": [54, 60, 119, 132, 174, 175, 177, 182, 183, 215, 275], "f_i": [54, 77, 88, 192, 196], "movement": 54, "intcurve_diffequ": 54, "init_cond": 54, "f_1": [54, 57, 60, 77, 102, 111, 114, 133, 186, 192, 195, 215], "f_0": [54, 57, 111, 192], "vectors_in_basi": 54, "kept": [54, 167, 183, 237, 270], "twoform_to_matrix": 54, "twoform": 54, "e_j": 54, "metric_to_christoffel_1st": 54, "levi": [54, 60, 219, 225], "civita": [54, 60, 225], "metric_to_riemann_compon": 54, "non_trivial_metr": 54, "dtheta": 54, "drho": 54, "metric_to_ricci_compon": 54, "ricci": 54, "fft": [55, 132], "ifft": 55, "ntt": 55, "intt": 55, "fwht": 55, "ifwht": 55, "mobius_transform": 55, "inverse_mobius_transform": 55, "convolution_fft": 55, "convolution_ntt": 55, "convolution_fwht": 55, "convolution_subset": 55, "covering_product": 55, "intersecting_product": 55, "radix": 55, "r164": 55, "coolei": 55, "93tukey_fft_algorithm": 55, "r165": 55, "fastfouriertransform": 55, "r166": 55, "r167": 55, "pz": [55, 100, 225], "643": [55, 92], "767": 55, "387": 55, "415": 55, "384": 55, "353": [55, 88], "r168": 55, "apfloat": 55, "r169": 55, "numbertheoretictransform": 55, "r170": 55, "discrete_fourier_transform_": 55, "r171": 55, "r172": 55, "r173": 55, "wht": 55, "r174": 55, "hadamard_transform": 55, "r175": 55, "fast_walsh": 55, "93hadamard_transform": 55, "r176": 55, "r177": 55, "mobiu": [55, 92], "lattic": [55, 212], "bitmask": 55, "r178": 55, "b6bius_inversion_formula": 55, "r179": 55, "csail": 55, "mit": 55, "rrw": 55, "conv": 55, "r180": 55, "arxiv": [55, 88, 104, 237], "1211": 55, "0189": 55, "r181": 55, "r182": 55, "r183": 55, "888": 55, "444": 55, "1283": 55, "19351": 55, "14219": 55, "15502": 55, "44": [55, 57, 88, 92, 208, 219], "41": [55, 62, 88, 92, 190, 212], "63": [55, 88, 92], "r184": 55, "convolution_theorem": 55, "r185": 55, "333": [55, 92], "555": 55, "222": 55, "666": 55, "15555": 55, "19404": 55, "r186": 55, "r187": 55, "56": [55, 79, 92, 195], "68": [55, 80, 88, 92, 212], "48": [55, 62, 96, 212, 217, 219, 265], "2057": 55, "1870": 55, "r188": 55, "radioeng": 55, "cz": [55, 212], "fulltext": 55, "2002": [55, 186, 193, 196], "02_03_40_42": 55, "r189": 55, "r190": 55, "r191": 55, "AND": [55, 82, 251], "327": [55, 215], "r192": 55, "44288293815837": 56, "4429": 56, "4428829381583662470158809900606936986146216893757": 56, "28902548222223624241": 56, "091999668350375232456": 56, "14159265358979": [56, 60, 217], "333333333333333": [56, 189, 211], "1415926535": 56, "7182818284": 56, "100000": [56, 92, 100], "951": 56, "95678796130331164628399634646042209010610577945815": 56, "gmpy": [56, 189, 190, 274], "googl": [56, 184, 185, 218], "100000000000000": 56, "1000000000": 56, "125000000000000000000000000000": 56, "100000000000000005551115123126": 56, "100000000000000000000000000000": 56, "1415": 56, "uncertainti": [56, 170], "003": 56, "31417": 56, "propag": [56, 65, 136, 139], "5000": [56, 95], "50000000000000000000000000000": 56, "varphi": [56, 60, 194, 199, 215], "erron": 56, "goldenratio": [56, 200, 211], "34665576869e": 56, "208": [56, 195], "64613129282185e": 56, "60123853010113e": 56, "210": [56, 92, 212], "thousand": [56, 92, 264], "precisionexhaust": 56, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 56, "binet": 56, "104": 56, "1336": 56, "portion": [56, 68, 83, 88], "meaningless": 56, "012297": 56, "9562288417661": 56, "956": 56, "29128599706266": 56, "2912859970626635404072825905956005414986193682745": 56, "14159265358979323846264338328": 56, "integrand": [56, 60, 76, 77, 79, 209], "struggl": [56, 198], "346": 56, "34635637913639": 56, "dealt": [56, 77], "504067061906928": 56, "50406706190692837199": 56, "wrap_lin": [56, 79, 80, 88, 96, 179, 186, 187, 198, 199, 215], "intgrl": 56, "extrapol": [56, 206], "richardson": [56, 206, 218], "slowli": [56, 206], "64493406684823": 56, "577215664901533": 56, "57721566490153286060651209008240243104215933593992": 56, "10000000": [56, 195], "20000000": [56, 195], "693147255559946": 56, "tune": [56, 80, 179, 199], "worthwhil": 56, "hypergeometr": [56, 57, 59, 70, 72, 76, 77, 193, 203, 210, 215, 217, 219, 255, 275], "ramanujan": [56, 57, 92], "9801": 56, "1103": 56, "26390": 56, "396": [56, 115], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 56, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 56, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 56, "355": [56, 92, 193], "113": [56, 92, 212], "33333": [56, 79], "635": 56, "504": [56, 193], "130198866629986772369127970337": 56, "49": [56, 57, 92, 96, 192, 212], "___________": [56, 96, 215], "k_sym": 57, "binom": [57, 92, 219, 275], "dotsc": [57, 201], "j_1": [57, 144, 145, 162, 184, 201, 220], "j_2": [57, 144, 145, 162, 184, 201], "dotsb": [57, 201], "atop": [57, 60, 201, 209], "2j_2": [57, 201], "3j_2": [57, 201], "j_": [57, 60, 77, 79, 162, 201, 209, 269], "877": 57, "4140": 57, "21147": 57, "115975": 57, "846749014511809332450147": 57, "r193": 57, "bell_numb": 57, "r194": 57, "bellnumb": 57, "r195": 57, "bellpolynomi": 57, "6k": 57, "66": [57, 83, 88, 199], "1000001": 57, "r196": 57, "bernoulli_numb": 57, "r197": 57, "bernoulli_polynomi": 57, "r198": 57, "bernoullinumb": 57, "r199": 57, "bernoullipolynomi": 57, "_k": [57, 60, 79, 184, 194, 219], "expand_func": [57, 60], "6435": 57, "pascal": [57, 92], "4th": [57, 58, 74, 88, 92, 132], "195": 57, "r200": 57, "johndcook": 57, "binomial_coeffici": [57, 92], "c_n": [57, 60, 81, 215], "429": [57, 199], "1430": 57, "4862": 57, "39764993382373624267": 57, "020884341620842555705": 57, "r201": 57, "catalan_numb": 57, "r202": 57, "catalannumb": [57, 199], "r203": 57, "r204": 57, "geomet": [57, 186], "mathcircl": 57, "2j": [57, 192, 219], "r209": 57, "e_k": [57, 192], "1385": 57, "2702765": 57, "4096": 57, "r205": 57, "euler_numb": 57, "r206": 57, "eulernumb": 57, "r207": 57, "alternating_permut": 57, "r208": 57, "alternatingpermut": 57, "swing": 57, "derang": [57, 237], "r211": 57, "generate_derang": [57, 237], "r210": 57, "r212": 57, "double_factori": 57, "texttt": [57, 207], "r213": 57, "r214": 57, "paul": [57, 234], "235": 57, "268": 57, "1995": [57, 193, 211, 217], "f_z": [57, 180, 250], "f_2": [57, 77, 102, 111, 114, 133, 192, 209, 215], "r216": 57, "fibonacci_numb": 57, "r217": 57, "fibonaccinumb": 57, "t_0": [57, 212], "149": [57, 92], "r218": 57, "r219": 57, "tribonaccinumb": 57, "r220": 57, "oei": [57, 92], "a000073": 57, "137": [57, 88, 104], "205": [57, 77, 209], "144": [57, 79, 184], "5269": 57, "761": 57, "280": 57, "83711": 57, "27720": 57, "30247": 57, "9900": 57, "983697455232980674869851942390639915940": 57, "r221": 57, "harmonic_numb": 57, "r222": 57, "harmonicnumb": [57, 199], "r223": 57, "harmonicnumber2": 57, "l_0": [57, 103, 225, 226], "47": [57, 60, 88, 92, 104, 138, 170, 198], "76": [57, 88, 92, 192, 195], "r224": 57, "lucas_numb": 57, "r225": 57, "lucasnumb": 57, "2t": 57, "r226": 57, "genocchi_numb": 57, "r227": 57, "genocchinumb": 57, "irrelev": 57, "r228": 57, "number_theori": 57, "r229": 57, "pentagonal_number_theorem": 57, "pochhamm": [57, 199, 211], "r230": 57, "r231": 57, "pochhammer_symbol": 57, "274": 57, "225": [57, 92, 193], "511": 57, "9330": 57, "34105": 57, "42525": 57, "22827": 57, "5880": 57, "750": 57, "r232": 57, "stirling_numbers_of_the_first_kind": 57, "r233": 57, "stirling_numbers_of_the_second_kind": 57, "multiset": [57, 77, 234, 237], "babi": [57, 92, 237], "aa": [57, 184], "bb": [57, 184, 211, 237], "multiset_combin": [57, 237], "aab": [57, 237], "aabc": 57, "aaaabbbbcccc": 57, "m_1": [57, 102, 144, 162, 184, 212], "m_2": [57, 114, 133, 144, 162, 184], "m_k": 57, "r234": 57, "r235": 57, "tinyurl": 57, "cep849r": 57, "ba": [57, 237], "multiset_permut": [57, 237], "r236": 57, "aabbc": 57, "mississippi": [57, 237], "609": 57, "1521": 57, "1768": 57, "1224": [57, 92], "579": 57, "197": 57, "r237": 57, "undergradu": 57, "csse": 57, "uwa": 57, "au": 57, "cits7209": 57, "707106781186548": 58, "negativeon": [58, 270], "tangent": [58, 62, 64, 68, 79, 196, 215], "643501108793284": 58, "r238": 58, "ib": [58, 120], "complex_conjug": 58, "r242": 58, "r239": 58, "trigonometric_funct": 58, "r240": 58, "r241": 58, "elementaryfunct": 58, "trigonometryangl": 58, "r243": 58, "r244": 58, "r245": 58, "r246": 58, "r247": 58, "r248": 58, "cotang": [58, 196], "r249": 58, "r250": 58, "r251": 58, "secant": [58, 195], "r252": 58, "r253": 58, "r254": 58, "cosec": 58, "r255": 58, "r256": 58, "r257": 58, "unnorm": [58, 60], "qquad": [58, 170, 192], "jn": [58, 60, 162, 195, 199, 269], "spheric": [58, 59, 104, 144, 184, 185, 195, 244, 247, 248, 269], "r258": 58, "sinc_funct": 58, "r259": 58, "inverse_trigonometric_funct": 58, "r260": 58, "r261": 58, "r262": 58, "r263": 58, "r264": 58, "r265": 58, "r266": 58, "r267": 58, "arctan": [58, 196, 199], "r268": 58, "r269": 58, "arccot": [58, 199], "r273": 58, "r270": 58, "r271": 58, "r272": 58, "arcsec": [58, 199], "r274": 58, "r275": 58, "r276": 58, "arccsc": [58, 199], "quadrant": [58, 190, 218], "clock": [58, 208], "reurn": 58, "r277": 58, "r278": 58, "r279": 58, "arctan2": 58, "r280": 58, "hyperbolic_funct": 58, "r281": 58, "r282": 58, "arcsech": [58, 199], "imaginaryunit": [58, 199], "r283": 58, "r284": 58, "r285": 58, "arccsch": [58, 199], "567": 58, "r286": 58, "r287": 58, "ceilingfunct": 58, "r288": 58, "r289": 58, "floorfunct": 58, "r290": 58, "lfloor": [58, 190, 218, 219], "rfloor": [58, 190, 218, 219], "fractional_part": 58, "r291": 58, "fractionalpart": 58, "lambert": [58, 79, 196], "r292": 58, "w_k": 58, "635564016364870": 58, "34747534407696": 58, "41624341514535": 58, "lambert_w_funct": 58, "mathcal": [58, 77, 102, 130, 162, 184, 207], "cond": [58, 77, 79, 207], "piecewise_fold": 58, "folded_cond": 58, "ITE": [58, 82], "_eval_integr": [58, 79], "piecewise_integr": 58, "as_expr_set_pair": 58, "conflict": [58, 92, 102, 115, 232], "supremum": [58, 207], "r293": 58, "directed_complete_partial_ord": 58, "r294": 58, "lattice_": 58, "28order": 58, "global_paramet": 58, "rootof": [58, 195], "rootoftool": [58, 88, 195], "integer_nthroot": [58, 92], "r295": 58, "square_root": 58, "r296": 58, "r297": 58, "root_of_un": 58, "r298": 58, "principal_valu": [58, 79], "r299": 58, "cuberoot": 58, "powdenest": 58, "misc": [58, 83, 240, 255], "r300": 58, "r301": 58, "r302": 58, "cube_root": 58, "r303": 58, "polar_lift": [59, 60, 211], "periodic_argu": 59, "principal_branch": [59, 77], "sec": [59, 79, 100, 194, 199, 208, 275], "csc": [59, 94, 199, 208], "acot": [59, 199], "asec": [59, 199], "acsc": [59, 199], "hyperbol": [59, 60, 196, 218, 271, 275], "hyperbolicfunct": 59, "coth": [59, 199, 211], "sech": [59, 199], "csch": [59, 199], "asinh": [59, 199], "acosh": [59, 199], "atanh": [59, 196, 199, 209], "acoth": [59, 199], "asech": [59, 199], "acsch": [59, 199], "roundfunct": 59, "lambertw": [59, 196, 199, 217, 218, 276], "exprcondpair": 59, "miscellan": [59, 236, 261, 262], "identityfunct": 59, "real_root": [59, 195, 217], "bell": [59, 149, 201, 237], "bernoulli": [59, 60, 199, 217, 219], "catalan": [59, 199], "subfactori": [59, 199, 237], "factorial2": [59, 166, 199], "fallingfactori": [59, 199], "luca": [59, 92, 199, 205], "genocchi": 59, "multifactori": 59, "nc": 59, "nt": [59, 237], "fresnel": [59, 138, 199, 209], "airi": [59, 79, 215], "spline": 59, "ellipt": [59, 62, 92, 186], "mathieu": [59, 199], "delta_funct": [60, 79], "int_": [60, 76, 77, 79, 202, 265, 269], "sum_i": [60, 206], "is_simpl": 60, "tensor_funct": 60, "kroneckerdelta": [60, 85, 165, 199, 211], "r304": 60, "deltafunct": [60, 79], "h0": 60, "electron": [60, 104, 208], "signal": [60, 82, 92, 100, 102, 132, 192, 270], "improp": [60, 79], "convolut": [60, 201, 255], "r305": 60, "heavisidestepfunct": 60, "r306": 60, "iv": [60, 196], "105": [60, 92, 195, 212], "parg": 60, "singularity_funct": 60, "singularityfunct": [60, 79, 95], "macaulai": 60, "heavisidediracdelta": 60, "r307": 60, "r308": 60, "r309": 60, "r310": 60, "r311": 60, "setminu": [60, 77], "17805383034794561964694160130": 60, "65092319930185633889": 60, "8724366472624298171": 60, "r312": 60, "r313": 60, "r314": 60, "loggammafunct": 60, "r315": 60, "19093197": 60, "5173168": 60, "ni": [60, 92], "r316": 60, "polygamma_funct": 60, "r317": 60, "polygammafunct": 60, "r318": 60, "r319": 60, "polygamma2": 60, "r320": 60, "digamma_funct": 60, "r321": 60, "digammafunct": 60, "r322": 60, "r323": 60, "trigamma_funct": 60, "r324": 60, "trigammafunct": 60, "r325": 60, "int_x": 60, "_1f_1": 60, "confluent": [60, 209], "xt": 60, "expint": [60, 199], "r326": 60, "incomplete_gamma_funct": 60, "upper_incomplete_gamma_funct": 60, "r327": 60, "r328": 60, "r329": 60, "gamma2": 60, "r330": 60, "gamma3": 60, "r331": 60, "exponential_integr": 60, "relation_with_other_funct": 60, "int_0": [60, 77, 79, 265, 275], "r332": 60, "lower_incomplete_gamma_funct": 60, "r333": 60, "r334": 60, "r335": 60, "r336": 60, "multigamma": 60, "gamma_p": 60, "r337": 60, "multivariate_gamma_funct": 60, "beta_funct": 60, "eulerian": 60, "02671848900111377452242355235388489324562": 60, "2112723729365330143": 60, "7655283165378005676": 60, "r338": 60, "r339": 60, "betafunct": 60, "r340": 60, "error_funct": 60, "999999984582742099719981147840": 60, "1296959": 60, "73071763923152794095062": 60, "r341": 60, "r342": 60, "r343": 60, "r344": 60, "0000000154172579002800188521596734869": 60, "r345": 60, "r346": 60, "r347": 60, "r348": 60, "5648024145755525987042919132": 60, "995322265018952734162069256367": 60, "r349": 60, "r350": 60, "r351": 60, "r352": 60, "179143454621291692285822705344": 60, "r353": 60, "inverse_funct": 60, "r354": 60, "inverseerf": [60, 199], "r355": 60, "r356": 60, "inverseerfc": [60, 199], "r357": 60, "inverseerf2": 60, "fresnelintegr": 60, "343415678363698242195300815958": 60, "fresnelc": [60, 199, 209], "r358": 60, "fresnel_integr": 60, "r359": 60, "r360": 60, "r361": 60, "r362": 60, "wrench": 60, "jr": 60, "vicki": 60, "allei": 60, "488253406075340754500223503357": 60, "r363": 60, "r364": 60, "r365": 60, "r366": 60, "r367": 60, "ei": [60, 77, 194, 199, 209, 212, 215, 225], "background": [60, 80, 125, 179, 182, 273], "cauchi": [60, 77, 79, 190, 215, 219], "219383934395520": 60, "21938393439552": 60, "shi": [60, 77, 199, 209], "e1": [60, 62, 69, 115, 189, 194, 206, 215, 218], "li": [60, 68, 79, 92, 165, 199, 253], "r368": 60, "r369": 60, "r370": 60, "sfu": [60, 79], "cbm": [60, 79], "aand": [60, 79], "page_228": 60, "int_1": [60, 77], "zt": [60, 77], "unbranch": [60, 77], "meijerg": [60, 71, 77, 79, 199, 219, 275], "postiv": 60, "r371": 60, "r372": 60, "expintegral": [60, 199], "r373": 60, "04516378011749278484458888919": 60, "0652795784357498247001125598": 60, "08346052231061726610939702133": 60, "soldner": 60, "findroot": [60, 217], "45136923488338": 60, "r374": 60, "logarithmic_integr": 60, "r375": 60, "logarithmicintegr": 60, "r376": 60, "r377": 60, "soldnersconst": 60, "92242131492155809316615998938": 60, "r378": 60, "r379": 60, "r380": 60, "r381": 60, "trigonometric_integr": 60, "_1": [60, 88, 175, 209, 238], "somewhat": [60, 79, 115, 190], "r382": 60, "r383": 60, "r384": 60, "laurent": [60, 190, 196, 215], "j_n": [60, 162], "r385": 60, "r386": 60, "r387": 60, "r388": 60, "yn": [60, 199, 205], "r389": 60, "i_": [60, 77, 209, 219, 220], "iz": 60, "r390": 60, "k_": [60, 77, 127, 128], "r391": 60, "hankel1": [60, 199], "hankel": [60, 79], "iy_": 60, "hankel2": [60, 199], "r392": 60, "hankelh1": [60, 199], "r393": 60, "hankelh2": [60, 199], "2z": [60, 218, 219], "orthopoli": [60, 195], "spherical_bessel_fn": [60, 195], "3j": [60, 144, 184], "099419756723640344491": 60, "054525080242173562897": 60, "r394": 60, "y_n": [60, 212], "18525034196069722536": 60, "014895573969924817587": 60, "r395": 60, "jn_zero": 60, "besseljzero": 60, "sph_jn": 60, "7635": 60, "095": 60, "323": [60, 92], "515": 60, "marcumq": 60, "marcum": 60, "q_m": 60, "r396": 60, "marcum_q": 60, "r397": 60, "airybas": 60, "airyai": [60, 199, 215], "ai": [60, 92, 195, 212, 240, 275], "airyaiprim": [60, 199], "22740742820168557599192443603787379946077222541710": 60, "airybi": [60, 199, 215], "airybiprim": [60, 199], "r398": 60, "airy_funct": 60, "r399": 60, "r400": 60, "encyclopediaofmath": 60, "r401": 60, "airyfunct": 60, "41230258795639848808323405461146104203453483447240": 60, "r402": 60, "r403": 60, "r404": 60, "r405": 60, "61825902074169104140626429133247528291577794512415": 60, "r406": 60, "r407": 60, "r408": 60, "r409": 60, "27879516692116952268509756941098324140300059345163": 60, "r410": 60, "r411": 60, "r412": 60, "r413": 60, "bspline": 60, "bspline_basi": 60, "knot": 60, "cubic": [60, 186, 195, 212, 217], "bspline_basis_set": 60, "r414": 60, "interpolating_splin": 60, "131": [60, 175], "39": [60, 92, 198], "interpolating_poli": [60, 195], "zeta_funct": 60, "hurwitz": 60, "admit": [60, 215], "circumst": [60, 194, 269], "lerch": 60, "transcend": 60, "lerchphi": [60, 199], "dirichlet_eta": [60, 199], "20205690315959": 60, "polylog": [60, 199], "r415": 60, "r416": 60, "hurwitz_zeta_funct": 60, "r417": 60, "dirichlet_eta_funct": 60, "polylogarithm": 60, "sheet": [60, 208], "phi_0": 60, "ze": 60, "r418": 60, "bateman": 60, "erdelyi": 60, "1953": [60, 194], "york": [60, 77, 131, 209, 217], "mcgraw": [60, 110, 131, 175, 181, 244], "r419": 60, "r420": 60, "lerch_transcend": 60, "stieltj": [60, 199], "gamma_": [60, 103, 105], "r421": 60, "stieltjes_const": 60, "ap": [60, 64, 209], "bq": [60, 187, 188, 209], "a_p": [60, 77, 209, 275], "b_q": [60, 77, 209, 275], "_pf_q": [60, 209, 215, 275], "unicod": [60, 80, 88, 179, 199, 230, 269], "r422": 60, "r423": 60, "generalized_hypergeometric_funct": 60, "convergence_stat": 60, "radius_of_converg": 60, "radiu": [60, 62, 66, 68, 122, 124, 134, 138, 185, 218, 219, 253], "meijer": [60, 70, 72, 78, 79, 265, 275], "mellin": [60, 78, 79], "barn": 60, "b_m": [60, 77, 217], "confusingli": 60, "int_l": [60, 77, 209], "contour": [60, 62, 77, 185, 209], "__1": 60, "subvector": 60, "aother": 60, "bm": 60, "bother": [60, 270], "slater": [60, 209], "allow_hyp": [60, 211], "subsum": 60, "r424": 60, "r425": 60, "meijer_g": 60, "get_period": [60, 77], "appellf1": [60, 199], "b2": [60, 92, 95, 96, 107, 115, 132, 175, 188, 190, 199, 209, 212, 215, 249], "appel": 60, "0063339426292673": 60, "172870711": 60, "659936": 60, "15605338197184": 60, "r426": 60, "appell_seri": 60, "r427": 60, "hypergeometricfunct": 60, "elliptic_integr": 60, "elliptic_k": [60, 199], "tfrac": [60, 215, 219], "eccentr": [60, 62], "50923695405127": 60, "625146415202697": 60, "elliptic_f": [60, 199], "r428": 60, "r429": 60, "ellipticintegr": 60, "elliptick": [60, 199], "909449841483": 60, "74720545502474": 60, "r430": 60, "r431": 60, "ellipticf": 60, "elliptic_": [60, 62, 199], "55203744279187": 60, "290764986058437": 60, "991052601328069": 60, "81879421395609": 60, "r432": 60, "r433": 60, "elliptice2": 60, "r434": 60, "elliptic": [60, 199], "elliptic_pi": [60, 199], "50232379629182": 60, "760939574180767": 60, "29136443417283": 60, "32555634906645": 60, "r435": 60, "r436": 60, "ellipticpi3": 60, "r437": 60, "ellipticpi": [60, 199], "mathieu_funct": 60, "mathieubas": 60, "mathieusprim": [60, 199], "mathieuc": [60, 199], "mathieucprim": [60, 199], "r438": 60, "r439": 60, "r440": 60, "r441": 60, "mathieuandspheroidalfunct": 60, "r442": 60, "r443": 60, "r444": 60, "r445": 60, "r446": 60, "r447": 60, "r448": 60, "r449": 60, "r450": 60, "r451": 60, "r452": 60, "r453": 60, "chebyshevu": [60, 199], "chebyshevt_root": 60, "chebyshevu_root": 60, "assoc_legendr": [60, 199], "jacobi_poli": [60, 195], "gegenbauer_poli": [60, 195], "chebyshevt_poli": [60, 195], "chebyshevu_poli": [60, 195], "hermite_poli": [60, 195], "legendre_poli": [60, 195], "laguerre_poli": [60, 195], "r454": 60, "jacobi_polynomi": 60, "r455": 60, "jacobipolynomi": 60, "r456": 60, "jacobip": [60, 199], "jacobi_norm": 60, "normilz": 60, "p_m": 60, "delta_": [60, 162, 170], "r457": 60, "r458": 60, "r459": 60, "r460": 60, "gegenbauer_polynomi": 60, "r461": 60, "gegenbauerpolynomi": 60, "r462": 60, "gegenbauerc3": 60, "r463": 60, "chebyshev_polynomi": 60, "r464": 60, "chebyshevpolynomialofthefirstkind": 60, "r465": 60, "chebyshevpolynomialofthesecondkind": 60, "r466": 60, "r467": 60, "u_n": [60, 79, 192, 194], "r468": 60, "r469": 60, "r470": 60, "r471": 60, "r472": 60, "chebyshev_root": 60, "r473": 60, "legendre_polynomi": 60, "r474": 60, "legendrepolynomi": 60, "r475": 60, "legendrep": [60, 199], "r476": 60, "legendrep2": 60, "r477": 60, "associated_legendre_polynomi": 60, "r478": 60, "r479": 60, "r480": 60, "r481": 60, "hermite_polynomi": 60, "r482": 60, "hermitepolynomi": 60, "r483": 60, "hermiteh": [60, 199], "l_n": [60, 79], "r484": 60, "laguerre_polynomi": 60, "r485": 60, "laguerrepolynomi": 60, "r486": 60, "laguerrel": [60, 199], "r487": 60, "laguerrel3": 60, "r488": 60, "generalized_laguerre_polynomi": 60, "r489": 60, "associatedlaguerrepolynomi": 60, "r490": 60, "r491": 60, "spherical_harmon": 60, "ynm": [60, 184], "ynm_c": 60, "znm": 60, "r492": 60, "r493": 60, "sphericalharmon": 60, "r494": 60, "sphericalharmonici": 60, "r495": 60, "r496": 60, "r497": 60, "r498": 60, "z_n": [60, 193], "r499": 60, "r500": 60, "r501": 60, "eijk": 60, "levicivita": [60, 88], "eval_levicivita": 60, "pseudotensor": 60, "delta_rang": [60, 165], "kroneck": [60, 164, 165, 220, 225], "r502": 60, "kronecker_delta": [60, 165], "indices_contain_equal_inform": [60, 165], "fermi": [60, 165], "above_fermi": [60, 165], "below_fermi": [60, 165], "is_above_fermi": [60, 165], "is_below_fermi": [60, 165], "is_only_below_fermi": [60, 165], "is_only_above_fermi": [60, 165], "killable_index": [60, 165], "preferred_index": [60, 165], "point2d": [61, 62, 63, 64, 65, 67, 68, 69], "arbitrary_point": [61, 62, 63, 64, 65, 66, 68], "polyfunc": [61, 195], "ambient_dimens": [61, 63, 65, 67], "plot_interv": [61, 62, 65, 68], "lower_bound": [61, 62, 65, 68], "upper_bound": [61, 62, 65, 68], "counterclockwis": [61, 62, 63, 67, 96], "geometryent": [61, 62, 63, 65, 67, 68, 69], "hradiu": 62, "vradiu": 62, "geometryerror": [62, 65, 68, 69], "radii": 62, "foci": 62, "periapsi": 62, "apoapsi": 62, "focus_dist": 62, "shortest": [62, 65, 68, 182, 205, 211, 215, 237], "auxiliary_circl": 62, "xmin": [62, 63, 65, 67, 68, 185], "ymin": [62, 63, 65, 67, 68, 185], "xmax": [62, 63, 65, 67, 68, 185], "ymax": [62, 63, 65, 67, 68, 185], "rectangl": [62, 63, 65, 67, 68, 185, 195], "director_circl": 62, "perpendicular": [62, 65, 66, 68, 81, 123, 138, 183], "director": 62, "130": 62, "r503": 62, "encloses_point": [62, 63, 68], "border": [62, 68], "_slope": 62, "slope": [62, 63, 65, 68, 95, 96, 100], "eq1": [62, 215, 217, 218], "eq2": [62, 82, 215, 218], "r504": 62, "108270": 62, "r505": 62, "equation_of_a_shifted_ellips": 62, "evolut": 62, "focal": [62, 134, 138], "100500": 62, "363": [62, 92, 193], "175": [62, 88, 192, 193], "is_tang": [62, 64], "tangent_lin": 62, "normal_lin": 62, "line2d": [62, 65, 68], "quartic": [62, 195, 217], "2020": [62, 144], "polar_second_moment_of_area": [62, 68], "moment": [62, 68, 95, 96, 117, 125, 128, 174, 185, 195, 212, 219], "constitu": [62, 68, 112, 175, 205, 244], "planar": [62, 68, 96, 138], "resist": [62, 68, 95, 96, 208], "deflect": [62, 68, 95, 96], "bend": [62, 68, 95, 97], "r506": 62, "polar_moment_of_inertia": [62, 68], "random_point": [62, 65, 66], "arb": 62, "364": 62, "notimpl": [62, 194], "second_moment_of_area": [62, 68], "centroid": [62, 68, 69, 95], "i_xx": [62, 68], "i_yi": [62, 68], "i_xi": [62, 68], "ellis": 62, "r507": 62, "list_of_second_moments_of_area": 62, "section_modulu": [62, 68], "sympify": [62, 68, 95, 98, 107, 112, 136, 139, 177], "farthest": [62, 68], "s_x": [62, 68], "s_y": [62, 68], "r508": 62, "semilatus_rectum": 62, "semi": [62, 65, 92], "latu": 62, "rectum": 62, "chord": 62, "conic": [62, 212, 244], "directrix": 62, "r509": 62, "semilatusrectum": 62, "r510": 62, "latus_rectum": 62, "collinear": [62, 64, 66, 67, 68, 185], "gx": 62, "hy": 62, "synonym": [62, 194], "p4": [62, 65, 67, 68, 185], "boundari": [63, 65, 95, 96, 178, 196, 207, 215, 219], "t2": [63, 68, 69, 92, 107, 112, 212, 219, 225], "ordering_of_class": 63, "is_similar": [63, 65, 68, 69], "uniform": [63, 185, 219], "enlarg": 63, "shrink": [63, 77], "parameter_valu": [63, 66], "pent": 63, "rpent": 63, "rcirc": 63, "entity1": 64, "entity2": 64, "zp": 64, "is_collinear": [64, 67], "segment2d": [64, 65, 68, 69], "wikipappu": 64, "bc": [64, 98, 237, 240, 249], "subs_point": 64, "p11": 64, "p12": 64, "p13": 64, "p21": 64, "p22": 64, "p23": 64, "ll1": 64, "ll2": 64, "ll3": 64, "ll4": 64, "ll5": 64, "ll6": 64, "pp1": 64, "pp2": 64, "pp3": 64, "encyclopedia": [64, 181], "apr": 64, "s_hexagon_theorem": 64, "clockwis": [64, 79, 83, 95, 96, 98], "overlap": [64, 69, 91, 186, 207, 240], "infanc": 64, "geometryresult": 64, "fair": [64, 219], "angle_between": [65, 66, 68, 175], "reflex": 65, "eman": 65, "readili": [65, 88], "sw": 65, "obtus": 65, "smallest_angle_between": 65, "line3d": [65, 66, 67], "is_perpendicular": [65, 66, 67, 68], "ray2d": [65, 68], "closing_angl": 65, "are_concurr": [65, 66], "concurr": [65, 66, 196], "l3": [65, 118, 192], "l4": [65, 118], "bisector": [65, 68], "p5": [65, 67, 68, 185], "p6": [65, 68, 185], "p7": [65, 68, 185], "segment3d": [65, 66], "direction_ratio": [65, 67], "is_parallel": [65, 66], "parallel_lin": 65, "perpendicular_lin": [65, 66], "perpendicular_seg": 65, "enpoint": 65, "reform": 65, "432": [65, 194], "92": [65, 193, 215, 219], "ccw": [65, 68], "ray3d": [65, 66, 138], "xdirect": 65, "ydirect": 65, "midpoint": [65, 67, 68, 79, 185, 249], "170": [65, 219], "341": 65, "perpendicular_bisector": 65, "linearentity2d": 65, "linearentity3d": [65, 66], "direction_cosin": [65, 67], "zdirect": 65, "normal_vector": [66, 138], "proce": [66, 129, 192, 194, 209, 217], "147": 66, "321": 66, "is_coplanar": 66, "perpendicualar": 66, "parallel_plan": 66, "on_circl": 66, "off_circl": 66, "perpendicular_plan": 66, "pt1": 66, "projection_lin": 66, "on_morph": 67, "affine_rank": 67, "are_coplanar": 67, "canberra_dist": 67, "canberra": 67, "geometricent": 67, "taxicab_dist": 67, "is_concycl": 67, "concycl": 67, "fewer": [67, 68, 129, 219, 265], "is_scalar_multipl": 67, "ambient": 67, "orthogonal_direct": 67, "taxicab": 67, "_nocheck": 67, "are_collinear": 67, "4x4": [67, 91, 137, 219], "travers": [68, 92, 108, 195, 208, 224, 234, 255, 270], "unrot": 68, "circumscrib": 68, "spin": [68, 104, 117, 151, 152, 160], "perimet": [68, 251], "contact": [68, 117, 121, 122, 123, 124, 182, 223], "38": [68, 88, 92, 199, 212, 214, 219], "cut_sect": 68, "upper_polygon": 68, "lower_polygon": 68, "upper_seg": 68, "lower_seg": 68, "r511": 68, "r512": 68, "paulbourk": 68, "polygonmesh": 68, "insidepoli": 68, "first_moment_of_area": 68, "q_x": [68, 182], "q_y": [68, 182], "625": [68, 253], "3125": [68, 219], "525": 68, "3000": [68, 95], "r513": 68, "skyciv": 68, "beam": [68, 98, 134, 137, 260], "bmd": 68, "r514": 68, "mechanicalc": 68, "poly1": 68, "poly2": 68, "interior": [68, 195, 207], "180": [68, 183, 193], "r515": 68, "r516": 68, "r517": 68, "apothem": 68, "interior_angl": 68, "exterior_angl": 68, "circumcircl": 68, "incircl": 68, "inradiu": 68, "inscrib": 68, "circumcent": 68, "circumradiu": 68, "leg": 68, "square_in_unit_circl": 68, "kite": 68, "asa": 68, "sa": [68, 195], "sss": 68, "altitud": 68, "orthocent": 68, "exradii": 68, "median": [68, 219, 261], "medial": 68, "nine_point_circl": 68, "straight": [68, 74, 100, 119, 182, 215], "eulerlin": 68, "equilater": 68, "coincid": [68, 88, 91, 109, 115, 186, 244, 248, 267], "excent": 68, "excircl": 68, "touch": [68, 117, 208], "r518": 68, "ly": [68, 88, 190], "exradiu": 68, "r519": 68, "r520": 68, "incent": 68, "is_equilater": 68, "is_isoscel": 68, "is_right": 68, "is_scalen": 68, "nine": [68, 199], "feet": 68, "real_num": 69, "hull": 69, "r521": 69, "graham_scan": 69, "r522": 69, "andrew": 69, "1979": [69, 170], "geomalgorithm": 69, "a10": 69, "_hull": 69, "t3": [69, 212], "mass": [69, 104, 105, 106, 107, 109, 110, 114, 115, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 132, 133, 141, 166, 168, 169, 170, 180, 182, 230, 251, 252], "averag": [69, 79, 92, 192, 219], "qq": [70, 71, 73, 74, 75, 79, 186, 187, 188, 189, 191, 192, 194, 195, 196], "p_r": 70, "holonomic_funct": 70, "from_hyp": [71, 74], "holonomicfunct": [71, 72, 74], "from_meijerg": [71, 74], "initcond": [71, 73, 74], "expr_to_holonom": [71, 74, 75, 76], "lenic": [71, 73], "ground": [71, 117, 121, 122, 123, 124, 186, 189, 190, 192, 194, 195, 217, 274], "meijerint": [71, 73, 77, 79], "_rewrite1": [71, 77], "_convert_poly_rat_alg": [71, 73], "_create_t": [71, 73], "differentialoper": [72, 74, 154], "differentialoperatoralgebra": 72, "_create_lookup_t": [73, 77], "old_poly_r": [74, 75, 186, 189, 190], "to_expr": [74, 75, 76, 102], "to_sequ": 74, "n_0": [74, 192, 217, 218], "indici": [74, 75, 76, 215], "c_j": [74, 77, 209], "holonomicsequ": 74, "r523": 74, "hal": 74, "inria": [74, 79], "fr": [74, 79, 92, 110, 115, 117, 119, 122, 123, 127, 129, 132, 219], "00070025": 74, "r524": 74, "risc": [74, 215, 244], "jku": [74, 215, 244], "risc_2244": 74, "diplform": 74, "_recur": 74, "rk4": 74, "71828182845905": 74, "10517083333333": 74, "22140257085069": 74, "34985849706254": 74, "49182424008069": 74, "64872063859684": 74, "82211796209193": 74, "01375162659678": 74, "22553956329232": 74, "45960141378007": 74, "71827974413517": 74, "331": 74, "4641": 74, "61051": 74, "771561": 74, "9487171": 74, "14358881": 74, "357947691": 74, "5937424601": 74, "to_hyp": 74, "as_list": [74, 195], "to_meijerg": 74, "homogen": [75, 79, 88, 102, 190, 192, 195, 212, 215, 216, 219], "1_0": 75, "1_1": 75, "0_0": 75, "0_1": 75, "pyplot": [75, 132], "plt": [75, 132], "list_of_poli": 75, "weyl": [75, 81], "Ore": 75, "dxa": 75, "endomorph": [75, 194], "frobeniu": [76, 88, 92, 192, 193], "subtleti": 77, "recast": [77, 211, 217, 218], "branchpoint": 77, "crude": [77, 117, 185], "decre": 77, "biholomorph": 77, "topologi": [77, 207], "mutual": [77, 183], "neighbourhood": 77, "evid": [77, 110, 123, 209], "peculiar": [77, 183], "_split_mul": 77, "_mytyp": 77, "inequival": 77, "_mul_as_two_part": 77, "bx": [77, 219, 225], "twist": 77, "recognis": [77, 189, 209, 211], "anywai": [77, 211, 215], "analyitc": 77, "_rewrite_singl": 77, "_rewrite2": 77, "_rewrite_saxena_1": 77, "_rewrite_saxena": 77, "blogpost": 77, "remedi": 77, "exploit": [77, 231], "transpar": [77, 80, 179], "nessgrh": 77, "wordpress": [77, 212], "07": 77, "stade": 77, "c_u": 77, "d_1": [77, 170, 195, 219], "d_v": 77, "amalgam": 77, "prudnikov1990": [77, 209], "luke1969": [77, 209], "c_3": [77, 215], "c_4": 77, "visibl": [77, 185], "fulfil": [77, 184], "vee": [77, 82], "lceil": 77, "rceil": 77, "d_j": [77, 170, 209], "lambda_c": [77, 128], "lambda_": 77, "z_0": [77, 211], "z_1": 77, "a_i": [77, 170, 175, 183, 187, 192, 209], "c_5": 77, "c_6": 77, "c_7": 77, "c_8": 77, "lvert": 77, "rvert": 77, "c_9": 77, "versatil": 77, "bz": [77, 212, 225], "deform": [77, 96], "encircl": 77, "appeal": 77, "fox": 77, "obstacl": 77, "identif": [77, 218], "domin": [77, 83, 204, 206], "iT": 77, "omega_": 77, "disguis": 77, "meijerint_indefinit": 77, "meijerint_definit": 77, "meijerint_invers": 77, "kelli": [77, 209], "roach": [77, 209], "211": [77, 92, 195, 209, 215], "prudnikov": [77, 209], "yu": [77, 184, 209], "brychkov": [77, 209], "marichev": [77, 209], "gordon": [77, 144, 209], "breach": [77, 209], "_coeffexpvalueerror": 77, "_get_coeff_exp": 77, "_check_anteced": 77, "_check_antecedents_1": 77, "mt": 77, "_check_antecedents_invers": 77, "anteced": [77, 206], "_condsimp": 77, "hoc": 77, "simp": [77, 117, 175], "_dummi": 77, "_dummy_": 77, "_eval_cond": 77, "_expon": 77, "_find_splitting_point": 77, "fsp": 77, "_flip_g": 77, "_function": 77, "_guess_expans": 77, "sensibl": [77, 79], "_inflate_fox_h": 77, "_inflate_g": 77, "_int0oo": 77, "_int0oo_1": 77, "_int_invers": 77, "_is_analyt": 77, "almost": [77, 86, 94, 167, 185, 186, 190, 195, 196, 215, 219, 233, 234, 237, 269], "_meijerint_definite_2": 77, "expand_mul": 77, "trigexpand": 77, "_meijerint_definite_3": 77, "_meijerint_definite_4": 77, "only_doubl": 77, "_meijerint_indefinite_1": 77, "_mul_arg": 77, "_my_principal_branch": 77, "full_pb": 77, "nearer": 77, "superflu": 77, "opaqu": [77, 199], "fac": 77, "_rewrite_invers": 77, "costli": [77, 119, 271], "tx": [77, 273], "overview": [78, 187, 218, 251, 252], "argand": [78, 218], "lookup": [78, 79, 88, 92, 209], "laplac": [78, 79, 99, 100, 102, 219], "todo": [78, 143, 145, 149, 150, 154, 155, 157, 158, 159, 160, 161, 192, 199, 206, 224], "polytop": 78, "happili": [79, 223], "nonelementari": 79, "mellin_transform": 79, "bilater": 79, "mellintransform": 79, "integraltransform": 79, "nocond": 79, "inverse_mellin_transform": 79, "laplace_transform": [79, 102], "fourier_transform": 79, "hankel_transform": 79, "inverse_hankel_transform": 79, "suitabl": [79, 85, 94, 187, 189, 192, 194, 199, 209, 212, 215, 218, 220, 268], "inversemellintransform": 79, "attemp": 79, "laplacetransform": 79, "inverse_laplace_transform": 79, "singularit": [79, 129], "inverselaplacetransform": 79, "_fast_inverse_laplac": 79, "rootsum": [79, 195, 201], "fouriertransform": 79, "_fourier_transform": 79, "inverse_fourier_transform": 79, "sine_transform": 79, "inverse_sine_transform": 79, "cosine_transform": 79, "inverse_cosine_transform": 79, "bixk": 79, "inversefouriertransform": 79, "sinetransform": 79, "inversesinetransform": 79, "cosinetransform": 79, "inversecosinetransform": 79, "hankeltransform": 79, "ht": 79, "inversehankeltransform": 79, "_compute_transform": 79, "_as_integr": 79, "integraltransformerror": 79, "_name": 79, "_collapse_extra": 79, "needev": 79, "function_vari": 79, "transform_vari": 79, "lazard": [79, 192, 195], "rioboo": 79, "trager": 79, "horowitz": 79, "ostrogradski": 79, "ratint": 79, "rationaltool": [79, 195], "ratint_logpart": 79, "ratint_ratpart": 79, "r525": 79, "bronstein": [79, 193, 195, 201, 217], "verlag": [79, 193], "deg": [79, 100, 115, 187, 192, 194, 195], "q_i": [79, 111, 129], "_t": [79, 115, 118, 132, 165, 174, 175, 178, 209, 219], "trigintegr": 79, "trigonometri": 79, "r526": 79, "integration_techniqu": 79, "deltaintegr": 79, "couldn": 79, "didn": [79, 88, 129], "singularityintegr": 79, "risch_integr": 79, "nonelementaryintegr": 79, "proven": [79, 92, 249, 267], "handle_first": 79, "separate_integr": 79, "rewrite_complex": 79, "forthcom": 79, "5109": 79, "outer": [79, 112, 130, 132, 148, 153, 154, 175, 178, 181, 183, 201, 207, 223, 244, 246, 247], "pop": [79, 212], "manualintegr": 79, "integral_step": 79, "student": [79, 208, 212, 219], "_i": [79, 165, 170, 196], "namedtupl": 79, "substep": 79, "sympy_gamma": 79, "app": 79, "intstep": 79, "urul": 79, "u_var": 79, "_u": [79, 165], "u_func": 79, "arctanrul": 79, "trigrul": 79, "rewriterul": 79, "addrul": 79, "powerrul": 79, "constanttimesrul": 79, "constantrul": 79, "norman": 79, "slowest": [79, 93], "retri": [79, 92], "degree_offset": 79, "unnecessary_permut": 79, "_try_heurisch": 79, "manuel": [79, 204], "poor": [79, 93], "man": [79, 193], "whittak": 79, "r527": 79, "sop": [79, 82], "cafe": 79, "pmint": 79, "r528": 79, "gedd": [79, 193], "stefanu": 79, "217": [79, 193], "r529": 79, "davenport": [79, 192, 193], "eurocam": 79, "lnc": [79, 193, 217], "157": [79, 92, 96, 193], "r530": 79, "iii": [79, 199, 215], "sigsam": 79, "bulletin": 79, "1982": [79, 184], "r531": 79, "transact": [79, 193], "1985": [79, 110, 131, 175, 244], "356": [79, 194, 217], "362": 79, "huge": [79, 92, 195, 235], "entail": 79, "delic": [79, 186], "albeit": [79, 247], "mimic": [79, 80, 179, 238], "moder": 79, "irrespect": [79, 212, 215, 240], "line_integr": 79, "as_sum": 79, "subinterv": 79, "trapezoid": [79, 88, 219], "730": 79, "809": 79, "decai": 79, "r532": 79, "riemann_sum": 79, "r533": 79, "cauchy_principal_valu": 79, "r534": 79, "cauchyprincipalvalu": 79, "int_a": 79, "uvar": 79, "ui": [79, 92, 216], "accomplish": [79, 129, 132, 250], "3aissu": 79, "3aopen": 79, "3aintegr": 79, "gauss_legendr": 79, "n_digit": 79, "legendr": [79, 92, 195, 199, 212], "r535": 79, "w_i": [79, 134, 195, 215], "7746": 79, "55556": 79, "88889": 79, "86114": 79, "33998": 79, "34785": 79, "65215": 79, "gauss_laguerr": 79, "gauss_gen_laguerr": 79, "gauss_hermit": 79, "gauss_chebyshev_t": 79, "gauss_chebyshev_u": 79, "gauss_jacobi": 79, "gauss_lobatto": 79, "gaussian_quadratur": 79, "r536": 79, "fsu": 79, "jburkardt": 79, "cpp_src": 79, "legendre_rul": 79, "laguerr": [79, 195, 199], "r537": 79, "41577": 79, "2943": 79, "2899": 79, "71109": 79, "27852": 79, "010389": 79, "22285": 79, "1889": 79, "9927": 79, "7751": 79, "8375": 79, "983": 79, "45896": 79, "417": [79, 211], "11337": 79, "010399": 79, "00026102": 79, "9855e": 79, "93laguerre_quadratur": 79, "r538": 79, "laguerre_rul": 79, "hermit": [79, 83, 88, 89, 188, 194, 195, 199, 219], "r539": 79, "2247": 79, "29541": 79, "1816": 79, "3506": 79, "3358": 79, "43608": 79, "00453": 79, "15707": 79, "72463": 79, "hermite_quadratur": 79, "r540": 79, "hermite_rul": 79, "r541": 79, "gen_hermite_rul": 79, "r542": 79, "19016": 79, "7845": 79, "5253": 79, "4493": 79, "31413": 79, "00906": 79, "97851": 79, "9904": 79, "3193": 79, "712": 79, "53087": 79, "67721": 79, "11895": 79, "0023152": 79, "r543": 79, "gen_laguerre_rul": 79, "r544": 79, "86602": 79, "0472": 79, "96593": 79, "70711": 79, "25882": 79, "5236": 79, "93gauss_quadratur": 79, "r545": 79, "chebyshev1_rul": 79, "r546": 79, "3927": 79, "7854": 79, "90097": 79, "62349": 79, "22252": 79, "084489": 79, "27433": 79, "42658": 79, "r547": 79, "chebyshev2_rul": 79, "jacobi": [79, 92, 104, 195, 199], "r548": 79, "7063": 79, "0973": 79, "33795": 79, "87174": 79, "5917": 79, "2093": 79, "050584": 79, "22169": 79, "39439": 79, "93jacobi_quadratur": 79, "r549": 79, "jacobi_rul": 79, "r550": 79, "gegenbauer_rul": 79, "lobatto": 79, "r551": 79, "3333": 79, "44721": 79, "16667": 79, "83333": 79, "93lobatto_rul": 79, "r552": 79, "page_888": 79, "intpoli": 79, "chin": 79, "al": [79, 115, 144, 192, 208, 211], "2015": [79, 218], "unit_cub": 79, "polytope_integr": 79, "eric": [79, 193], "jean": 79, "lasserr": 79, "sukumar": 79, "nonconvex": 79, "967": 79, "981": 79, "dilbert": 79, "engr": 79, "ucdavi": 79, "suku": 79, "max_degre": [79, 195], "689": [79, 96], "21875": 79, "octahedron": 79, "trivari": 79, "enable_automatic_int_sympif": 80, "enable_automatic_symbol": 80, "init_ipython_sess": 80, "argv": [80, 230], "init_python_sess": 80, "use_latex": [80, 179, 274], "quiet": 80, "str_printer": [80, 179], "latex_print": [80, 179], "pylab": 80, "stringifi": [80, 179], "sstrrepr": [80, 179, 199], "lexograph": [80, 179], "gui": [80, 179], "statu": 80, "\u03b8": [80, 109, 137, 218], "int_to_integ": 80, "decistmt": 80, "f401": 80, "0x12": 80, "num_column": [80, 179, 199, 215], "no_glob": [80, 179], "ip": [80, 153, 159, 179], "forecolor": [80, 179], "backcolor": [80, 179], "fontsiz": [80, 179, 199], "10pt": [80, 179, 199], "latex_mod": [80, 179], "print_builtin": [80, 179], "interactiveconsol": [80, 179], "preambl": [80, 179, 199], "handwritten": [80, 179], "ctan": [80, 179], "pkg": [80, 179], "dvi": [80, 179, 199], "foreground": [80, 179], "black": [80, 150, 161, 179, 199, 274], "white": [80, 179, 219], "documentclass": [80, 179, 199], "dpi": [80, 179], "u03b8": 80, "dvip": 80, "r553": 80, "r554": 80, "the_68_standard_colors_known_to_dvip": 80, "config": 80, "root_system": 81, "rootsystem": 81, "cartantyp": 81, "cartan": 81, "subalgebra": 81, "adjoint": [81, 83, 88, 142, 146], "hyperplan": 81, "k_y": 81, "r555": 81, "r556": 81, "humphrei": 81, "add_as_root": 81, "root1": 81, "root2": 81, "add_simple_root": 81, "newroot": 81, "all_root": [81, 92, 195], "cartan_matrix": 81, "dynkin_diagram": 81, "dynkin": 81, "root_spac": 81, "simple_root": 81, "type_a": 81, "typea": 81, "basic_root": 81, "iin": 81, "jth": [81, 218], "ijth": 81, "cartan_typ": 81, "highest_root": 81, "lie_algebra": 81, "positive_root": 81, "type_b": 81, "typeb": 81, "b4": 81, "b3": [81, 115, 132, 175, 249], "type_c": 81, "typec": 81, "c4": [81, 83, 85, 215], "type_d": 81, "d4": [81, 219], "dmension": 81, "type_": 81, "e6": 81, "type_f": 81, "typef": 81, "f_4": [81, 111], "f4": [81, 185], "type_g": 81, "typeg": 81, "weyl_group": 81, "weylgroup": 81, "semisimpl": 81, "isometri": 81, "coxeter_diagram": 81, "undirect": [81, 237], "s_is_j": 81, "delete_doubl": 81, "element_ord": 81, "weylelt": 81, "group_nam": 81, "group_ord": 81, "192": 81, "matrix_form": 81, "cartantype_gener": 81, "standard_cartan": 81, "dynkindiagram": 81, "cartanmatrix": 81, "sopform": 82, "minterm": 82, "dontcar": 82, "simplified_pair": 82, "combo": 82, "outcom": [82, 168, 219], "r557": 82, "quin": 82, "mccluskey_algorithm": 82, "posform": 82, "r558": 82, "anfform": 82, "truthvalu": 82, "anf": 82, "funciton": 82, "zhegalkin": 82, "r559": 82, "zhegalkin_polynomi": 82, "as_set": 82, "booleantru": 82, "doubt": [82, 115], "greet": 82, "booleanfals": 82, "universalset": 82, "nand": 82, "xnor": 82, "gate": [82, 145, 150, 152, 158, 159, 161], "perspect": [82, 92, 102, 170, 185, 232, 248, 252], "multiplex": 82, "conjunct": [82, 185, 209, 230, 275], "disjunct": 82, "to_anf": 82, "oplu": [82, 149], "to_cnf": 82, "cnf": 82, "mccluskei": 82, "to_dnf": 82, "to_nnf": 82, "nnf": 82, "is_anf": 82, "is_cnf": 82, "is_dnf": 82, "is_nnf": 82, "gateinputcount": 82, "simplify_log": 82, "fewest": [82, 159], "bool_map": 82, "bool1": 82, "bool2": 82, "function1": 82, "function2": 82, "distribute_and_over_or": 82, "distribute_or_over_and": 82, "distribute_xor_over_and": 82, "eliminate_impl": 82, "truth_tabl": 82, "ibin": [82, 237], "integer_to_term": 82, "0001111011": [82, 237], "1101111000": [82, 237], "term_to_integ": 82, "bool_maxterm": 82, "maxterm": 82, "complement": [82, 85, 195, 218], "r560": 82, "canonical_normal_form": 82, "indexing_maxterm": 82, "bool_minterm": 82, "patter": 82, "r561": 82, "indexing_minterm": 82, "bool_monomi": 82, "enumar": 82, "anf_coeff": 82, "to_int_repr": 82, "all_model": 82, "unsatisfi": 82, "use_model": 82, "unsat": 82, "matrixbas": [83, 84, 85, 87, 188], "dirac": [83, 88, 100, 104, 105, 163, 199], "__abs__": [83, 190], "__add__": [83, 190, 194], "shapeerror": [83, 85, 88], "__len__": 83, "96": [83, 88, 219], "mismatch": 83, "matrix_multiply_elementwis": [83, 88], "applyfunc": [83, 84, 88, 123, 175, 220], "col": [83, 85, 88, 91, 102, 132, 188, 194, 271], "col_del": [83, 88, 271], "col_join": [83, 88, 117], "col_insert": [83, 271], "row_insert": [83, 271], "row_join": [83, 88, 117], "companion": [83, 85], "c0": [83, 85, 206, 215, 217], "sparsematrix": [83, 87, 88, 91, 200, 211], "diag": [83, 85, 88, 91, 132, 188, 225, 271], "immutablematrix": [83, 85, 87, 102, 175, 219, 244, 246, 271], "blockmatrix": [83, 85, 88], "sparsetool": [83, 91], "kth": [83, 92], "rowslist": [83, 188], "colslist": 83, "submatrix": [83, 88, 192, 219], "get_diag_block": [83, 85, 88], "decoupl": 83, "hstack": [83, 188], "is_anti_symmetr": 83, "is_diagon": [83, 88], "is_low": [83, 188], "is_upp": [83, 188], "matrixeigen": [83, 87], "is_diagonaliz": [83, 88], "is_hermitian": [83, 88], "is_lower_hessenberg": 83, "hessenberg": [83, 88], "superdiagon": 83, "is_upper_hessenberg": 83, "is_strongly_diagonally_domin": 83, "strongli": [83, 88, 188, 237], "m1": [83, 88, 92, 96, 136, 144, 162, 164, 168, 212, 215, 220, 225], "subdiagon": [83, 88], "is_weakly_diagonally_domin": 83, "weakli": [83, 237], "vacuou": 83, "jordan_block": [83, 88], "eigenv": [83, 88, 115, 117, 132, 159, 269, 271], "insuffici": 83, "rectangular": [83, 88, 207, 218, 247], "r562": 83, "jordan_matrix": [83, 215], "dotprodsimp": 83, "blowup": 83, "multiply_elementwis": [83, 88], "hadamard": [83, 85, 88, 149, 150, 161, 199], "elementwis": [83, 85, 88, 220], "300": [83, 88, 92, 95, 180, 185, 196, 252], "bmatrix": [83, 85, 88, 119, 127, 128, 129, 130, 175, 183, 212], "a_0": [83, 88, 202, 212, 215, 220, 275], "vdot": [83, 85, 88, 170], "alpha_0": 83, "alpha_1": [83, 92, 194], "alpha_": [83, 184], "permute_col": 83, "permute_row": 83, "mulsimp": 83, "rmultipli": 83, "__rmul__": 83, "rot90": 83, "anticlockwis": 83, "row_del": [83, 88, 271], "todod": 83, "tolist": [83, 220], "vec": [83, 88, 132, 175, 184, 192, 249, 250, 252], "vech": 83, "check_symmetri": 83, "vstack": [83, 188], "wilkinson": 83, "w_": [83, 194], "wminu": 83, "wplu": 83, "r563": 83, "mathwork": [83, 100, 219, 271], "cleve": 83, "04": [83, 219], "r564": 83, "claredon": 83, "oxford": 83, "662": 83, "intm": 83, "undefinedkind": [83, 207], "tuplekind": [83, 207], "mutabledensematrix": [84, 188, 240], "densematrix": [84, 88], "ldldecomposit": [84, 88], "ldl": [84, 88], "choleski": [84, 88], "ludecomposit": [84, 85, 88, 271], "qrdecomposit": [84, 88], "as_immut": 84, "lower_triangular_solv": [84, 88], "upper_triangular_solv": [84, 88], "gauss_jordan_solv": [84, 88], "cholesky_solv": [84, 88], "diagonal_solv": [84, 88], "ldlsolv": [84, 88], "lusolv": [84, 88, 109, 111, 129, 133, 217, 271], "qrsolv": [84, 88], "pinv_solv": [84, 88], "permutedim": [85, 220, 221], "arraytensorproduct": [85, 221], "from_index_summ": 85, "first_index": 85, "last_index": 85, "longrightarrow": 85, "matpow": [85, 199], "hadamardproduct": [85, 199], "hadamard_product": 85, "hadamardpow": [85, 199], "ddot": [85, 88, 119, 128, 179, 182, 199, 275], "functionmatrix": 85, "lazili": [85, 205], "342923500": 85, "permutationmatrix": [85, 88], "matrixpermut": 85, "companionmatrix": 85, "matrixset": [85, 207], "submatric": [85, 88, 188, 219], "block_collaps": 85, "dat": [85, 237], "irregular": [85, 88], "ldudecomposit": 85, "ldu": 85, "2x2": [85, 91, 134, 188, 215], "noninvertiblematrixerror": [85, 271], "udldecomposit": 85, "lu": [85, 88, 188, 193], "udl": 85, "schur": 85, "penros": [85, 88], "pinv": [85, 88], "r565": 85, "schur_compl": 85, "blockdiagmatrix": [85, 88], "diag_block": 85, "alias": [86, 190], "bridg": [86, 98, 115, 238], "tension": 86, "matrixdetermin": 87, "matrixreduct": 87, "matrixsubspac": 87, "matrixcalculu": 87, "immutablesparsematrix": 87, "gramschmidt": 88, "m2": [88, 92, 96, 112, 136, 144, 162, 164, 168, 194, 212, 215, 220, 225], "126": [88, 92, 198], "150": [88, 102, 212], "v3": [88, 175, 178, 249], "glue": 88, "m3": [88, 144, 212, 220], "adj": 88, "qr": 88, "cheat": 88, "soln": 88, "gram": [88, 170, 172], "schmidt": 88, "out1": 88, "out2": 88, "1692": 88, "1551": 88, "423": 88, "6707": 88, "spot": [88, 133], "eigenvector": [88, 115, 159, 160, 184], "nullspac": [88, 188], "adjug": 88, "berkowitz": 88, "bareiss": 88, "cofactor_matrix": 88, "charpoli": [88, 188, 271], "_simplifi": 88, "purepoli": [88, 195], "samuelson": 88, "minor_submatrix": 88, "iszerofunc": [88, 271], "barei": 88, "det_lu": 88, "functiontyp": 88, "_iszero": [88, 271], "_is_zero_after_expand_mul": 88, "unrecogn": 88, "nonsquarematrixerror": [88, 215], "i3": [88, 103, 115, 132, 225], "perman": 88, "ryser": 88, "450": 88, "r566": 88, "prof": 88, "ben": 88, "berkelei": 88, "bernd": 88, "ban275": 88, "r567": 88, "permanent_": 88, "r568": 88, "r569": 88, "0904": 88, "3251": 88, "echelon_form": [88, 271], "with_pivot": 88, "echelon": [88, 188, 218, 271], "elementary_col_op": 88, "kn": [88, 95, 96], "col1": 88, "col2": 88, "km": [88, 92, 106, 110, 117, 119, 122, 123, 127, 129, 132, 171], "elementary_row_op": 88, "row1": 88, "row2": 88, "is_echelon": [88, 271], "rref": [88, 188], "pivot": [88, 188, 271], "normalize_last": 88, "rref_matrix": [88, 188], "rref_pivot": [88, 188], "301369863013699": 88, "712328767123288": 88, "noramlize_last": 88, "subspac": [88, 194], "columnspac": [88, 188], "rowspac": [88, 188], "orthonorm": [88, 132, 160, 183, 247], "rankcheck": 88, "r570": 88, "93schmidt_process": 88, "eigen": [88, 141], "bidiagonal_decomposit": 88, "ubv": 88, "bidiagon": 88, "hang": [88, 119, 123, 215, 216], "bidiagn": 88, "r571": 88, "golub": 88, "van": [88, 92, 193], "loan": 88, "r572": 88, "vslobodi": 88, "household": 88, "r573": 88, "r574": 88, "reals_onli": 88, "throw": [88, 94, 115, 194, 212, 218], "error_when_incomplet": 88, "eig": [88, 115, 132], "matrixerror": 88, "got": [88, 186, 189, 192, 195, 198, 230, 231, 237, 238, 267, 269, 270], "abel": 88, "ruffini": 88, "eigenvect": [88, 115, 132, 159, 271], "tidi": 88, "artifact": 88, "ret": 88, "eigenspac": 88, "rag": 88, "a_3": 88, "diagonaliz": [88, 271], "is_indefinit": 88, "semidefinit": [88, 219], "plot3d": [88, 185], "is_positive_definit": 88, "is_positive_semidefinit": 88, "hire": [88, 95, 96, 100, 185, 202], "is_negative_definit": 88, "is_negative_semidefinit": 88, "defer": [88, 241], "r575": 88, "definiteness_of_a_matrix": 88, "r576": 88, "positivedefinitematrix": 88, "r577": 88, "amer": 88, "259": 88, "264": [88, 217], "r578": 88, "r579": 88, "r580": 88, "r581": 88, "r582": 88, "r583": 88, "r584": 88, "r585": 88, "r586": 88, "r587": 88, "r588": 88, "r589": 88, "jordan_form": 88, "calc_transform": 88, "left_eigenvect": 88, "singular_valu": 88, "condition_numb": 88, "hessian": 88, "wronskian": [88, 215], "simpfunc": 88, "permutebkwd": 88, "permutefwd": 88, "lucombin": 88, "defici": [88, 92, 218], "matrixi": 88, "ludecomposition_simpl": [88, 271], "ludecompositionff": 88, "pa": [88, 110, 112, 127, 130, 133], "r590": 88, "zhou": 88, "jeffrei": [88, 211], "frontier": [88, 207], "china": 88, "67": [88, 193], "2008": [88, 184, 193, 195, 199], "row_swap": 88, "compres": 88, "permute_backward": 88, "permute_forward": 88, "u_": 88, "intiuit": 88, "lu_": 88, "_find_reasonable_pivot": 88, "lu_solv": [88, 188], "qr_solv": 88, "augument": 88, "167": 88, "158": [88, 96], "27261": 88, "30625": 88, "348": 88, "1914": 88, "6125": 88, "30589": 88, "198": 88, "1225": 88, "q_aug": 88, "r_aug": 88, "analytic_func": 88, "connected_compon": [88, 237], "connected_components_decomposit": 88, "relax": [88, 94], "3x1": 88, "1x3": 88, "conjugate_convent": 88, "dual": [88, 157, 163], "anti_symmetr": 88, "speak": [88, 194, 250], "freevar": 88, "underdetermin": [88, 217, 218], "free_var_index": 88, "sol": [88, 212, 215, 216, 217], "tau0": [88, 218, 219], "tau1": 88, "taus_zero": 88, "sol_uniqu": 88, "r591": 88, "gaussian_elimin": 88, "try_block_diag": 88, "inverse_g": [88, 271], "inverse_lu": [88, 271], "inverse_adj": [88, 271], "inverse_ch": 88, "inverse_ldl": 88, "inverse_qr": 88, "inv_mod": 88, "cof": 88, "inverse_block": 88, "blockwis": 88, "ntop": 88, "key2bound": 88, "key2ij": 88, "reciproc": [88, 219, 275], "fro": 88, "sing": 88, "spectral": 88, "rd": [88, 115, 199], "pseudoinvers": 88, "r592": 88, "penrose_pseudoinvers": 88, "arbitrary_matrix": 88, "wn_m": 88, "_w0_0": 88, "_w1_0": 88, "_w2_0": 88, "59": [88, 215], "r593": 88, "obtaining_all_solutions_of_a_linear_system": 88, "print_nonzero": [88, 237], "symb": [88, 199], "rank_decomposit": 88, "r594": 88, "rank_factor": 88, "r595": 88, "piziak": 88, "odel": 88, "magazin": 88, "193": [88, 100], "2307": 88, "2690882": 88, "singular_value_decomposit": 88, "condens": [88, 218], "orthogn": 88, "v_aug": 88, "u_aug": 88, "s_aug": 88, "gj": 88, "solve_least_squar": 88, "strongly_connected_compon": [88, 188, 237], "62": [88, 192], "strongly_connected_components_decomposit": 88, "rowstart": 88, "rowend": 88, "rowsep": 88, "colsep": 88, "strprinter": [88, 179, 262], "upper_hessenberg_decomposit": 88, "213": 88, "134": 88, "216": [88, 192], "hessenbergdecomposit": 88, "jordan_cel": 88, "varlist": 88, "r596": 88, "hessian_matrix": 88, "vlist": 88, "r597": 88, "casoratian": 88, "kernel": [88, 186, 192, 194, 217], "vanish": [88, 165, 192, 195, 198, 215, 244], "rsolve_hyp": [88, 217], "randmatrix": 88, "percent": [88, 218], "prng": 88, "percentag": [88, 92], "46": [88, 95, 170, 198, 217, 219], "list2numpi": 88, "dtype": [88, 93, 186, 188, 189, 190, 199, 238], "matrix2numpi": 88, "symarrai": 88, "ndarrai": [88, 219, 225, 231], "prefix_i1_i2_": 88, "_2": [88, 174, 175, 215], "a_0_0": 88, "a_0_1": 88, "a_0_2": 88, "a_1_0": 88, "a_1_1": 88, "a_1_2": 88, "a_0_0_0": 88, "a_0_0_1": 88, "a_0_1_0": 88, "a_0_1_1": 88, "a_0_2_0": 88, "a_0_2_1": 88, "a_1_0_0": 88, "a_1_0_1": 88, "a_1_1_0": 88, "a_1_1_1": 88, "a_1_2_0": 88, "a_1_2_1": 88, "rot_axis1": 88, "rot_axis2": 88, "rot_axis3": 88, "a2idx": 88, "normalform": [89, 188], "hermite_normal_form": [89, 188, 194], "check_rank": [89, 188], "hnf": [89, 188, 194], "explos": [89, 188], "believ": [89, 92, 188], "dmdomainerror": [89, 188], "dmshapeerror": [89, 188], "r598": 89, "cohen": [89, 188, 193, 194], "mutablesparsematrix": 90, "_doktocsr": 91, "csr": 91, "ja": 91, "ia": 91, "_csrtodok": 91, "dok": 91, "1x1": [91, 219], "vert": [91, 180, 183, 252], "saw": [91, 189, 275], "dynam": [92, 99, 100, 102, 106, 108, 110, 111, 114, 117, 125, 127, 128, 129, 130, 131, 132, 133, 174, 175, 177, 178, 182, 183, 234, 235, 244], "eratosthen": 92, "_reset": [92, 195], "_list": 92, "extend_to_no": 92, "mobiusrang": 92, "primerang": 92, "10th": 92, "totientrang": 92, "1e11": 92, "50000": 92, "primal": [92, 186], "1299709": 92, "r599": 92, "prime_number_theorem": 92, "table_of_": 92, "cf": [92, 192], "28x": 92, "2c_x_": 92, "2f_log_x": 92, "2c_and_li": 92, "r600": 92, "approximations_for_the_nth_prime_numb": 92, "r601": 92, "27_number": 92, "arr1": 92, "arr2": 92, "prevprim": 92, "9th": 92, "nextprim": 92, "occupi": [92, 165, 225], "conjectur": [92, 192], "twin": 92, "bertrand": 92, "brocard": 92, "primori": 92, "r602": 92, "r603": 92, "utm": 92, "postul": 92, "r604": 92, "s_postul": 92, "primefactor": 92, "argu": 92, "cycle_length": 92, "nmax": 92, "brent": [92, 234], "floyd": 92, "cycle_detect": 92, "17737": 92, "20000": 92, "compositepi": 92, "831": 92, "smoothness_p": 92, "sm": [92, 115, 132, 186], "psm": 92, "govern": 92, "10431": 92, "annot": [92, 185, 199], "21477639576571": 92, "4410317": 92, "1787": 92, "4869863": 92, "2434931": 92, "multiplicity_in_factori": 92, "nfac": 92, "52818775009509558395695966887": 92, "is2pow": 92, "pollard_rho": 92, "1234": [92, 212], "max_step": 92, "pollard": [92, 215], "leader": 92, "16843009": 92, "32767": 92, "4i": 92, "3i": 92, "2489": 92, "1482": 92, "285": [92, 217], "leadup": 92, "r605": 92, "crandal": 92, "carl": [92, 234], "pomer": [92, 234], "229": 92, "231": [92, 175], "pollard_pm1": 92, "ilcm": 92, "likelihood": 92, "1009": 92, "igcd": [92, 187], "am": [92, 170, 199], "255": 92, "crack": 92, "617": 92, "1786": 92, "worst": [92, 195, 215], "scenario": [92, 219], "divisisor": 92, "realist": 92, "r606": 92, "236": 92, "r607": 92, "washington": 92, "2007": [92, 131, 234], "spring": [92, 107, 109, 110, 115, 120], "ent": 92, "node81": 92, "r608": 92, "toronto": 92, "yuvalf": 92, "use_ecm": 92, "65537": [92, 198], "1407633717262338957430697921446883": 92, "991": 92, "202916782076162456022877024859": 92, "4200": 92, "1764": 92, "toggl": [92, 185], "12345678910111213141516": 92, "2507191691": 92, "1231026625769": 92, "factorrat": 92, "rat": 92, "987": 92, "10000000001": 92, "99009901": 92, "divisor_count": 92, "tim": [92, 237], "stackoverflow": [92, 237, 240], "1010381": 92, "proper_divisor": 92, "proper_divisor_count": 92, "udivisor": 92, "udivisor_count": 92, "r609": 92, "unitary_divisor": 92, "r610": 92, "unitarydivisor": 92, "r611": 92, "unitarydivisorfunct": 92, "antidivisor": 92, "r612": 92, "margin": [92, 102, 185, 219], "antidivisor_count": 92, "a066272": 92, "a066272a": 92, "r613": 92, "r614": 92, "27s_totient_funct": 92, "r615": 92, "totientfunct": 92, "r616": 92, "carmichael_funct": 92, "r617": 92, "carmichaelfunct": 92, "sigma_k": 92, "m_i": [92, 192], "m_ik": 92, "r618": 92, "divisor_funct": 92, "udivisor_sigma": 92, "47450": 92, "152": 92, "r619": 92, "core_t": 92, "core_2": 92, "squarefre": [92, 194], "cubefre": 92, "9424": 92, "1178": 92, "379238": 92, "square_factor": 92, "r620": 92, "free_integ": 92, "squarefree_cor": 92, "primenu": 92, "r621": 92, "primeomega": 92, "r622": 92, "mersenne_prime_expon": 92, "mersenn": 92, "4423": 92, "r623": 92, "perfectnumb": 92, "r624": 92, "perfect_numb": 92, "is_mersenne_prim": 92, "r625": 92, "mersenneprim": 92, "abund": 92, "is_abund": 92, "r626": 92, "abundantnumb": 92, "is_defici": 92, "r627": 92, "deficientnumb": 92, "is_amic": 92, "amic": 92, "220": [92, 195], "r628": 92, "amicable_numb": 92, "symmetric_residu": 92, "v_i": [92, 194, 217], "65": [92, 102, 192, 219], "639985": [92, 192], "912285": [92, 192], "954": 92, "gf_crt": [92, 192], "solve_congru": [92, 192], "programm": [92, 199], "galoistool": [92, 192], "crt1": 92, "4536": 92, "252": 92, "756": 92, "crt2": 92, "remainder_modulus_pair": 92, "mi": [92, 199], "k1": [92, 132, 163, 189, 190, 192], "k2": [92, 132, 189], "c_kn": 92, "binomial_coefficients_list": 92, "multinomial_coeffici": 92, "k_m": 92, "k_i": [92, 192, 209], "yann": 92, "laigl": 92, "chapui": 92, "permiss": [92, 184], "multinomial_coefficients_iter": 92, "_tupl": 92, "m53": 92, "partitions_": 92, "npartit": 92, "hardi": 92, "rademach": [92, 219], "r629": 92, "1958": [92, 184], "partitionfunctionp": 92, "is_euler_pseudoprim": 92, "pseudoprim": 92, "r630": 92, "euler_pseudoprim": 92, "prep": [92, 215, 216], "r631": 92, "mersenneforum": 92, "showpost": 92, "110896": 92, "mr": 92, "miller": 92, "rabin": 92, "wit": 92, "1373651": 92, "479001599": 92, "r632": 92, "135": 92, "138": 92, "93rabin_primality_test": 92, "deterministic_vari": 92, "is_lucas_prp": 92, "selfridg": 92, "377": 92, "1159": 92, "1829": 92, "3827": 92, "5459": 92, "5777": 92, "9071": 92, "9179": 92, "bailli": 92, "wagstaff": 92, "1980": [92, 237], "mpq": [92, 189, 191], "lucaspseudoprim": 92, "a217120": 92, "lucas_pseudoprim": 92, "is_strong_lucas_prp": 92, "bpsw": 92, "10877": 92, "16109": 92, "18971": 92, "a217255": 92, "psw_primality_test": 92, "is_extra_strong_lucas_prp": 92, "grantham": 92, "mo": [92, 132, 199], "jone": [92, 137], "preprint": 92, "a217719": 92, "perl": 92, "counterexampl": [92, 275], "989": 92, "3239": 92, "jon": 92, "mcom": 92, "234": 92, "01197": 92, "bisect": [92, 195, 217], "1e3": 92, "1e23": [92, 240], "near_int": 92, "strong_pseudoprim": 92, "is_gaussian_prim": 92, "r633": 92, "gaussian_prim": 92, "residue_ntheori": 92, "n_order": 92, "cong": [92, 192], "primitive_root": [92, 194], "r634": 92, "stein": [92, 215], "r635": 92, "hackman": 92, "2009": [92, 184], "sqrt_mod": 92, "sqrt_mod_it": 92, "quadratic_residu": 92, "nthroot_mod": 92, "109": [92, 193, 212], "is_nthpow_residu": 92, "r636": 92, "is_quad_residu": 92, "legendre_symbol": 92, "genfrac": 92, "nonresidu": 92, "alpha_2": [92, 194], "alpha_k": 92, "discrete_log": 92, "prime_ord": 92, "giant": [92, 218], "pohlig": 92, "r637": 92, "discretelogarithm": 92, "r638": 92, "cryptographi": [92, 254, 261], "menez": 92, "vanston": 92, "continued_fract": 92, "continued_fraction_period": 92, "continued_fraction_reduc": 92, "continued_fraction_converg": 92, "continued_fraction_iter": 92, "106": 92, "103993": 92, "33102": 92, "104348": 92, "33215": 92, "208341": 92, "66317": 92, "292": 92, "r639": 92, "discrimin": [92, 190, 192, 194, 195], "r640": 92, "periodic_continued_fract": 92, "r641": 92, "rosen": 92, "379": [92, 195], "381": 92, "januari": 92, "1992": [92, 193, 217], "233": [92, 193, 215], "718281835": 92, "287": 92, "count_digit": 92, "1111339": 92, "0xfa": 92, "c77": 92, "is_palindrom": [92, 237], "palindrom": 92, "0o121": 92, "oct": 92, "0o171": 92, "fermion": [92, 165], "r642": 92, "b6bius_funct": 92, "r643": 92, "thoma": [92, 131], "koshi": 92, "egyptian_fract": 92, "greedi": [92, 192, 208, 211], "egyptian": 92, "r644": 92, "jewett": 92, "takenouchi": 92, "3192": 92, "1118": 92, "2580": 92, "sylvest": [92, 192], "r645": 92, "seldom": 92, "blow": 92, "doubli": 92, "exhibit": [92, 184, 194, 208], "singli": 92, "tendenc": 92, "r646": 92, "1921": 92, "golumb": 92, "1962": 92, "propos": 92, "bleicher": 92, "1972": 92, "r647": 92, "420": [92, 212], "140": 92, "574": 92, "2788": 92, "6460": 92, "11590": 92, "33062": 92, "113820": 92, "greedy_algorithm_for_egyptian_fract": 92, "ic": [92, 215], "uci": 92, "eppstein": 92, "numth": 92, "egypt": 92, "ami": 92, "ektf": 92, "hu": 92, "finalpdf": 92, "ami_42_from129to134": 92, "bbp_pi": 92, "pi_hex_digit": 92, "hex": 92, "3243f6a8885a30": 92, "324": [92, 193], "r648": 92, "numberworld": 92, "subexponenti": 92, "comfort": [92, 93], "15154262241479": 92, "15423094826093": 92, "799333555511111": 92, "809709509409109": 92, "888888877777777": 92, "914148152112161": 92, "factoris": [92, 189, 190, 215], "max_curv": 92, "lenstra": 92, "repeatedli": [92, 103, 231], "ecm_one_factor": 92, "pseudorandom": [92, 237], "25645121643901801": 92, "5394769": 92, "4753701529": 92, "9804659461513846513": 92, "4641991": 92, "2112166839943": 92, "7060005655815754299976961394452809": 92, "6988699669998001": 92, "1010203040506070809": 92, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 92, "2709077133180915240135586837960864768806330782747": 92, "248": 92, "prime_bound": 92, "error_term": 92, "siq": 92, "modn": 92, "mulipl": 92, "r649": 92, "semanticscholar": 92, "5c52": 92, "8a975c1405bd35c65993abf5a4edb667c1db": 92, "r650": 92, "rieselprim": 92, "ziki": 92, "initializing_quadratic_siev": 92, "5915587277": 92, "3267000013": 92, "facilit": [93, 125, 136, 181, 230], "000507214304613640": 93, "microsecond": 93, "000507214304614": 93, "hundr": [93, 269], "nanosecond": 93, "84147098": [93, 238, 264], "84119981": 93, "84092844": 93, "05426074": 93, "05433146": 93, "05440211": 93, "confer": [93, 273], "nano": 93, "manufactur": 93, "asnumpi": 93, "compliat": 93, "jnp": 93, "asarrai": 93, "84147096": 93, "8411998": 93, "05426079": 93, "05433151": 93, "autowrap": [93, 224, 232, 236, 256, 262], "implemented_funct": [93, 231, 238], "effort": [93, 190, 192], "50u": 93, "1u": 93, "10n": 93, "sympy_pars": 94, "local_dict": 94, "lambda_not": 94, "repeated_decim": 94, "auto_numb": 94, "factorial_not": 94, "global_dict": 94, "standard_transform": 94, "implicit_multiplication_appl": 94, "implicit_appl": 94, "implicit_multipl": 94, "convert_equals_sign": 94, "function_exponenti": 94, "stringify_expr": 94, "eval_expr": 94, "name_dict": 94, "fullform": 94, "setdelai": 94, "datatyp": [94, 190, 199, 232], "split_symbol": 94, "split_symbols_custom": 94, "_token_splitt": 94, "can_split": 94, "unsplitt": 94, "10sin": 94, "3xyz": 94, "2111": 94, "latex2sympi": 94, "typograph": 94, "parse_latex": 94, "stricter": 94, "liber": [94, 106, 269], "618": 94, "latexparsingerror": 94, "sym_expr": 94, "sympyexpress": 94, "source_cod": 94, "return_expr": 94, "definiton": 94, "src2": 94, "convert_to_expr": 94, "convert_to_c": 94, "src3": 94, "convert_to_python": 94, "src_code": 94, "filenam": [94, 199, 230, 231, 232, 240], "convert_to_fortran": 94, "continuum_mechan": [95, 96, 98], "elastic_modulu": 95, "second_mo": 95, "base_char": 95, "withstand": [95, 96], "character": [95, 96, 180, 183, 206, 219, 225, 252], "profil": 95, "shear": [95, 96], "downward": [95, 96, 98, 194], "apply_load": [95, 96, 98], "bc_deflect": [95, 96], "boundary_condit": 95, "solve_for_reaction_load": [95, 96], "shear_forc": [95, 96], "bending_mo": [95, 96], "applied_load": 95, "nm": [95, 96, 163, 220], "pointload": [95, 96], "ramp": [95, 96, 101], "parabol": 95, "apply_support": [95, 98], "loc": 95, "freedom": [95, 109, 110, 116, 119, 125, 219], "roller": [95, 96, 98], "upward": [95, 194], "r_10": 95, "r_30": 95, "4000": [95, 96], "bc_slope": [95, 96], "cross_sect": 95, "elast": [95, 96], "12000": 95, "draw": [95, 145, 199, 219, 261], "pictori": 95, "positv": 95, "ild_moment": 95, "ild_react": 95, "reaction": [95, 96, 98], "ild_shear": 95, "axial": [95, 134], "hing": [95, 96], "cantilev": [95, 96], "inertia": [95, 96, 105, 106, 107, 114, 115, 117, 118, 120, 122, 123, 124, 125, 132, 175, 181, 182, 183, 194], "666666666666667": [95, 96], "max_bmoment": 95, "max_deflect": 95, "max_shear_forc": 95, "plot_bending_mo": [95, 96], "gpa": 95, "400": [95, 185, 195], "13750": 95, "31250": 95, "plot_deflect": [95, 96], "00138541666666667": 95, "86458333333333e": 95, "04166666666667e": 95, "20833333333333e": 95, "51041666666667e": 95, "plot_ild_mo": 95, "solve_for_ild_mo": 95, "1kn": 95, "r_0": 95, "r_8": 95, "solve_for_ild_react": 95, "plot_ild_react": 95, "5kn": 95, "r_7": 95, "plotgrid": [95, 261], "plot_ild_shear": 95, "solve_for_ild_shear": 95, "plot_loading_result": [95, 96], "subplot": [95, 185], "plot_shear_forc": [95, 96], "plot_shear_stress": 95, "stress": 95, "6875": 95, "2500": 95, "15625": [95, 172], "plot_slop": [95, 96], "59375e": 95, "125e": 95, "08333333333333e": 95, "0001953125": 95, "point_cflexur": 95, "overhang": [95, 96], "10kn": 95, "20kn": [95, 96], "3kn": 95, "reaction_load": [95, 96, 98], "remove_load": [95, 98, 107], "shear_stress": 95, "beam3d": 95, "shear_modulu": 95, "apply_moment_load": 95, "solve_slope_deflect": 95, "r651": 95, "home": [95, 194, 212, 219, 230], "aau": 95, "jc": 95, "femtesemest": 95, "beams3d": 95, "axial_forc": 95, "axial_stress": 95, "load_vector": 95, "max_bending_mo": 95, "16000": 95, "495": 95, "10793": 95, "6400": 95, "301": [95, 209, 212], "560": 95, "2400": 95, "moment_load_vector": 95, "40000": 95, "4013": 95, "90300": 95, "1520": 95, "903": 95, "1600": [95, 96], "172": 95, "polar_mo": 95, "i1": [95, 103, 115, 132, 225], "1350": 95, "torsional_mo": 95, "torsion": 95, "_________________": 96, "________________": [96, 215], "_______________v": 96, "_______________": 96, "equilibrium": [96, 117, 129], "20e9": 96, "25e": 96, "______________________________________________": 96, "_______________________________________________": 96, "r\u2081": 96, "r\u2082": 96, "______________________": 96, "________________________": 96, "8kn": 96, "_____________": 96, "1m": 96, "3m": 96, "2m": 96, "5m": [96, 234], "679": 96, "12kn": 96, "________________________________": 96, "____________________________________________________": 96, "o____________________________________________________": 96, "4m": 96, "concentr": [96, 219], "_____________________________________": 96, "m\u2081": 96, "m\u2082": 96, "connector": 96, "_____________________": 96, "_______________________": 96, "_____________________o_______________________": 96, "oooo": [96, 237], "r\u2083": 96, "_______i_______": 96, "flexur": 96, "rigid": [96, 98, 107, 110, 112, 115, 117, 120, 125, 132, 175, 182], "____________": 96, "____________o________________________": 96, "a\u2081": [96, 275], "a\u2082": [96, 275], "six": [96, 199, 212, 218, 219], "assembli": [98, 117], "joint": [98, 118, 120, 125], "add_nod": 98, "node_1": 98, "node_2": 98, "node_3": 98, "node_4": 98, "add_memb": 98, "member_1": 98, "member_2": 98, "member_3": 98, "member_4": 98, "member_5": 98, "270": 98, "360": 98, "change_member_label": 98, "new_label": 98, "change_node_label": 98, "bc_new": 98, "internal_forc": 98, "member_label": 98, "node_label": 98, "node_posit": 98, "remove_memb": 98, "remove_nod": 98, "remove_support": 98, "lti": [99, 100, 101], "transferfunct": [99, 100, 102], "interconnect": [99, 102, 109], "mimo": [99, 102], "transferfunctionmatrix": [99, 102], "mimoseri": [99, 102], "mimoparallel": [99, 102], "mimofeedback": [99, 102], "control_plot": 100, "pole_zero_plot": 100, "pole_color": 100, "blue": [100, 126, 185, 199], "pole_markers": 100, "zero_color": 100, "orang": 100, "zero_markers": 100, "show_ax": 100, "marker": [100, 185], "sisolineartimeinvari": [100, 102], "markers": 100, "tf1": [100, 102], "pole_zero_numerical_data": 100, "r652": 100, "93zero_plot": 100, "siso": [100, 102], "8660254j": 100, "bode_plot": 100, "initial_exp": 100, "final_exp": 100, "freq_unit": 100, "phase_unit": 100, "semilog": 100, "hz": 100, "hertz": 100, "bode_magnitude_plot": 100, "bode_phase_plot": 100, "bode_magnitude_numerical_data": 100, "5148378120533502e": 100, "68437": 100, "36188804005": 100, "020599914256786": 100, "0205999155219505": 100, "4117304087953": 100, "00000000260573": 100, "bode_phase_numerical_data": 100, "4472354033813751e": 100, "035581932165858e": 100, "47577": 100, "3248186011": 100, "67884": 100, "09326036123": 100, "5000000000291665e": 100, "6180885085e": 100, "08895483066e": 100, "1415085799262523": 100, "14155265358979": 100, "impulse_response_plot": 100, "lower_limit": [100, 265], "upper_limit": [100, 265], "step_response_plot": 100, "ramp_response_plot": 100, "r653": 100, "impulse_response_numerical_data": 100, "nb_of_point": [100, 185], "lineover1drangeseri": [100, 185], "amplitud": [100, 139], "06616480200395854": 100, "854500743565858": 100, "9999999799999999": 100, "7042848373025861": 100, "170748906965121e": 100, "1901263495547205e": 100, "r654": 100, "step_response_numerical_data": 100, "025413462339411542": 100, "0484508722725343": 100, "670250533855183": 100, "844291913708725": 100, "023844582399907256": 100, "042894276802320226": 100, "828770759094287e": 100, "456457160755703e": 100, "mx": [100, 145, 206], "r655": 100, "ramp_funct": 100, "ramp_response_numerical_data": 100, "12166980856813935": 100, "861246379582118": 100, "4504508011325967e": 100, "006046440489058766": 100, "12499999999568202": 100, "12499999999661349": 100, "bode": 101, "impuls": [101, 102], "den": [102, 190, 211, 215], "superscript": [102, 199], "tf2": 102, "tf3": 102, "tf4": 102, "tf5": 102, "tf6": 102, "500000000000000": 102, "tf7": 102, "tf8": 102, "tf9": 102, "tf10": 102, "tf11": 102, "tf12": 102, "r656": 102, "transfer_funct": 102, "r657": 102, "dc_gain": 102, "dc": [102, 128], "from_rational_express": 102, "zerodivisionerror": [102, 190, 228, 238], "complexinfin": 102, "tf": [102, 238], "is_biprop": 102, "is_prop": 102, "is_stabl": 102, "is_strictly_prop": 102, "sys1": 102, "sys2": 102, "feedforward": 102, "fed": 102, "sit": [102, 183], "plant": 102, "compulsori": 102, "tf_1": 102, "tf_2": 102, "tf_3": 102, "tf_4": 102, "tfm_1": 102, "num_input": 102, "num_output": 102, "tfm_2": 102, "tf_5": 102, "tf_6": 102, "tf_7": 102, "tf_8": 102, "tfm_3": 102, "tfm_4": 102, "tfm_5": 102, "tfm_6": 102, "tf_9": 102, "tf_10": 102, "tfm_7": 102, "tfm_8": 102, "tfm_9": 102, "tfm_10": 102, "tfm_11": 102, "tfm_12": 102, "elem_pol": 102, "elem_zero": 102, "from_matrix": [102, 188], "m_tf": 102, "tfm": 102, "tfm1": 102, "tfm2": 102, "g4": 102, "tfm3": 102, "mimolineartimeinvari": 102, "mat_a": 102, "mat_b": 102, "mat_c": 102, "tfm_a": 102, "tfm_b": 102, "tfm_c": 102, "expr_1": 102, "expr_2": 102, "expr_3": 102, "expr_4": 102, "plant_mat": 102, "controller_mat": 102, "neg_feedback": 102, "hep": 103, "gamma_matric": [103, 105], "gammamatrix": 103, "lorentzindex": 103, "gammamatrixhead": 103, "extract_type_ten": 103, "gamma_trac": 103, "i0": [103, 137, 225], "i2": [103, 115, 132, 225], "i4": [103, 225], "i5": 103, "kahane_simplifi": 103, "spinor": 103, "ta": [103, 208], "tb": [103, 208, 230], "tc": [103, 190, 195, 208], "joseph": [103, 193], "kahan": 103, "octob": 103, "1968": 103, "simplify_gpgp": 103, "e_nl": [104, 166], "hartre": 104, "helium": 104, "2209": 104, "e_nl_dirac": 104, "spin_up": 104, "035999037000": 104, "relativist": 104, "angular": [104, 107, 109, 112, 117, 118, 119, 120, 122, 124, 125, 129, 132, 134, 138, 139, 141, 144, 162, 166, 175, 178, 184], "momentum": [104, 112, 115, 125, 132, 143, 144, 162, 166, 184, 225], "light": [104, 137, 170, 179, 186], "035999037": 104, "1012": 104, "3627": 104, "500006656595360": 104, "125002080189006": 104, "125000416028342": 104, "0555562951740285": 104, "0555558020932949": 104, "0555556377366884": 104, "psi_nlm": 104, "wave": [104, 135, 136, 137, 202, 260], "psi_": [104, 141], "nlm": 104, "radial": [104, 119, 166], "nl": [104, 166], "magnet": [104, 136, 180, 252], "azimuth": 104, "wf": [104, 117], "abs_sqrd": 104, "silver": 104, "94": [104, 193], "141": 104, "4418": 104, "mdft": 105, "mgamma": 105, "gamma_5": 105, "gamma_0": 105, "gamma_3": 105, "r658": 105, "msigma": 105, "pauli": [105, 260], "sigma_i": [105, 219], "r659": 105, "pauli_matric": [105, 140], "pat_matrix": 105, "unansw": [106, 174], "kane": [106, 109, 115, 121, 125, 126, 131, 132, 174, 175, 244], "q1d": [106, 115, 117, 119, 122, 123, 124, 127, 128, 129, 130, 174, 179, 183], "q2d": [106, 115, 117, 119, 122, 123, 124, 127, 128, 178, 179], "q3d": [106, 122, 123, 124, 127], "kinemat": [106, 109, 110, 114, 115, 117, 118, 119, 120, 122, 124, 126, 127, 129, 130, 132, 133, 175, 181, 183], "dyad": [106, 132, 247], "mprint": [106, 122, 123, 124, 125, 127], "mpprint": [106, 125, 127], "mlatex": [106, 125], "sub_dict": [106, 108, 117], "msub": [106, 125, 129], "cleaner": [106, 132, 215], "gsl": [106, 232], "lsoda": 106, "penalti": 106, "masscent": [107, 109, 112, 118, 126, 130, 132], "central_inertia": [107, 112, 118, 120], "possess": [107, 130, 225], "name_of_bodi": 107, "ixx": [107, 112, 175], "body_inertia": 107, "torqu": [107, 110, 114, 120, 127, 128, 132], "ang_vel_in": [107, 109, 115, 122, 123, 132, 175, 182], "set_ang_vel": [107, 112, 115, 117, 122, 123, 129, 130, 132, 133, 175, 177, 178, 182], "apply_forc": [107, 109, 120], "reaction_bodi": [107, 109, 120], "reaction_point": 107, "oppposit": 107, "desri": 107, "force1": 107, "b_masscent": 107, "b_frame": 107, "newtonion": [107, 109], "spring_forc": 107, "n_frame": 107, "apply_torqu": [107, 120], "torquess": 107, "torque1": 107, "b1_frame": 107, "b2_frame": 107, "clear_load": 107, "dcm": [107, 109, 115, 117, 132, 175, 182, 183, 244], "orient_axi": [107, 175, 177], "kinetic_energi": [107, 125, 130, 132], "kinet": [107, 110, 112, 125], "inerti": [107, 109, 110, 112, 117, 119, 122, 127, 128, 130, 132], "set_vel": [107, 110, 112, 115, 117, 119, 122, 123, 124, 127, 128, 129, 130, 132, 133, 178, 182], "b_ixx": 107, "b_mass": [107, 109], "masscenter_vel": [107, 109], "smart": [108, 129, 206, 212, 215], "sub1": [108, 199], "sub2": [108, 199], "reference_fram": [108, 175], "parent_joint_po": [109, 118, 120, 126], "child_joint_po": [109, 118, 120, 126], "parent_axi": [109, 118, 120, 126], "child_axi": [109, 118, 120, 126], "_generate_coordin": 109, "_generate_spe": 109, "_orient_fram": 109, "_set_angular_veloc": 109, "_set_linar_veloc": 109, "rotation_axi": 109, "parent_point": [109, 126], "child_point": [109, 126], "kde": [109, 118, 119, 126, 129], "revolut": 109, "\u03c9": 109, "pc": [109, 196], "pc_p_joint": 109, "pc_c_joint": 109, "p_frame": 109, "c_frame": 109, "theta_pc": 109, "omega_pc": 109, "pos_from": [109, 115, 117, 118, 119, 126, 132, 178, 182], "pendulum": [109, 114, 116, 120, 125, 129, 133, 182], "upper_bob": 109, "lower_bob": 109, "ceiling_joint": 109, "pendulum_joint": 109, "theta_p1": 109, "theta_p2": 109, "u_fram": 109, "l_frame": 109, "omega_p1": 109, "omega_p2": 109, "vel": [109, 115, 117, 119, 123, 126, 132, 178, 182, 250], "prismat": 109, "slide": 109, "x_pc": 109, "v_pc": 109, "wall": [109, 120], "part1": 109, "part2": 109, "j1": [109, 118, 120, 144, 162], "j2": [109, 118, 120, 144, 162], "x_j1": 109, "w_frame": 109, "x_j2": 109, "p1_frame": 109, "v_j1": 109, "damper": [109, 110, 115, 120], "form_eom": [109, 120, 126], "mass_matrix_ful": [109, 110, 115, 120, 127, 128], "forcing_ful": [109, 110, 115, 120, 127, 128], "mass_matrix": [109, 110, 114, 117, 122, 123, 127, 128, 133], "kanesmethod": [109, 110, 115, 117, 118, 119, 120, 122, 123, 126, 127, 129, 132], "lagrangesmethod": [109, 119, 124, 125, 128, 129], "qd": [109, 110, 117, 127, 178], "inv_method": [109, 110], "solveabl": 109, "q_ind": [110, 111, 115, 117, 118, 119, 122, 123, 127, 129, 132], "u_ind": [110, 111, 115, 117, 118, 119, 122, 123, 127, 129, 132], "kd_eq": [110, 115, 117, 118, 119, 122, 123, 129, 132], "q_depend": [110, 117, 118, 119, 127, 132], "configuration_constraint": [110, 117, 118, 119, 127], "u_depend": [110, 117, 118, 119, 127, 132], "velocity_constraint": [110, 117, 118, 119, 127, 132], "acceleration_constraint": 110, "u_auxiliari": [110, 123, 127, 132], "forcelist": [110, 115, 118, 119, 122, 123, 128, 129, 132], "levinson": [110, 131, 175, 244], "udot": [110, 117], "ud": [110, 127], "kd": [110, 117, 122, 123, 127], "fl": [110, 117, 127, 128, 132, 193], "bl": [110, 117, 127, 132], "frstar": [110, 115, 117, 119, 122, 123, 127, 129, 132], "kanes_equ": [110, 115, 117, 119, 122, 123, 127, 129, 132], "a_and_b": [110, 111, 119], "auxiliary_eq": [110, 123], "constrain": [110, 119, 128, 132], "kindiffdict": [110, 117, 122, 123, 127, 132], "new_method": [110, 119], "intens": [110, 111, 134, 137], "perm_mat": [110, 111, 129], "op_point": [110, 111, 119, 129], "beforehand": [110, 232], "to_linear": [110, 129], "recalcul": [110, 195], "hol_coneq": [110, 119, 128], "nonhol_coneq": [110, 119, 128], "nonconserv": 110, "form_lagranges_equ": [110, 119, 124, 128, 129], "qdot": [110, 117, 118, 178], "qdoubledot": 110, "lam": [110, 111, 133], "lagranges_equ": 110, "qd_ind": [110, 129], "q_dep": [110, 127, 129], "qd_dep": [110, 129], "solve_multipli": [110, 119], "sol_typ": 110, "array_lik": 110, "f_3": [111, 114, 133, 215], "f_c": [111, 119], "f_v": [111, 119], "f_a": 111, "q_d": 111, "u_i": [111, 129, 182, 192], "u_d": [111, 132], "q_op": [111, 119], "u_op": [111, 119], "qd_op": 111, "ud_op": [111, 119], "spatial": [112, 139, 175, 199], "init_vprint": [112, 113, 130, 133, 175, 177, 178, 181, 182, 183], "locatenew": [112, 117, 119, 122, 123, 124, 129, 130, 132, 133, 176, 178, 180, 182], "parallel_axi": 112, "inertia_tupl": 112, "mv": 112, "iyi": [112, 175], "izz": [112, 175], "ixi": [112, 175], "iyz": [112, 175], "izx": 112, "yy": [112, 183, 215], "yz": [112, 183, 185], "zx": [112, 183], "pos_vec": 112, "px": [112, 155, 160, 225], "body1": 112, "body2": 112, "body3": 112, "h2": 112, "multibodi": [112, 115, 125, 131, 132, 133, 182], "vprint": [113, 174, 178, 181, 183], "vpprint": [113, 174, 181, 183], "vlatex": [113, 174, 175, 181, 183], "coord_stat": 114, "right_hand_sid": 114, "coordinate_deriv": [114, 133], "alg_con": [114, 133], "output_eqn": 114, "coord_idx": [114, 133], "speed_idx": [114, 133], "m_3": [114, 133, 144, 184], "exogen": [114, 133], "ref_fram": 114, "graviti": [114, 115, 119, 120, 122, 124, 132, 180, 252], "theta_dot": 114, "kin_explicit_rh": [114, 133], "dyn_implicit_mat": [114, 133], "dyn_implicit_rh": [114, 133], "symsystem": 114, "dae": [114, 133], "adjust": [114, 202, 206], "comb_implicit_mat": [114, 133], "comb_implicit_rh": [114, 133], "kinema": 114, "comb_explicit_rh": [114, 133], "compute_explicit_form": 114, "awhil": 114, "constant_symbol": 114, "dynamic_symbol": 114, "motiongenesi": [115, 132], "double_pendulum": 115, "motionvari": [115, 132], "newtonian": [115, 132], "simprot": [115, 132], "n_a": 115, "n_b": 115, "w_a_n": 115, "w_b_n": [115, 132], "p_o_p": 115, "p_p_r": 115, "v_o_n": [115, 132], "v2pt": [115, 132], "v_p_n": 115, "v_r_n": 115, "force_p": 115, "force_r": 115, "tfinal": 115, "integstp": 115, "some_filenam": 115, "parse_autolev": 115, "sympy_cod": 115, "include_numer": 115, "include_pydi": 115, "pydi": [115, 132, 175], "u1d": [115, 117, 119, 122, 123, 127], "u2d": [115, 117, 119, 122, 123, 127], "frame_n": 115, "frame_a": 115, "frame_b": 115, "point_o": 115, "particle_p": 115, "p_pt": 115, "particle_r": 115, "r_pt": 115, "set_po": [115, 178, 182], "v2pt_theori": [115, 117, 122, 123, 124, 129, 130, 132, 133, 178, 182], "initial_condit": [115, 132], "overwritten": 115, "e2row": 115, "eigvec": [115, 132], "eigenvec": 115, "deg2rad": 115, "0174533": 115, "wo": 115, "coef": [115, 132], "u3": [115, 117, 118, 120, 122, 123, 127, 132, 178, 182], "strai": 115, "reassign": 115, "inher": [115, 238, 267], "rhs_x": 115, "i_b_bo": 115, "body_b": 115, "body_b_f": 115, "b_cm": 115, "b_f": 115, "scene": [115, 211, 267], "i_c_d": 115, "i_p_q": 115, "i_b_o": 115, "e3": [115, 206, 215], "i_p_o": 115, "e4": [115, 206], "p_so_o": 115, "nicheck": 115, "plug": [115, 170], "hurdl": 115, "gitlab": 115, "repo": 115, "ch4": 115, "ch5": 115, "ch6": 115, "cst": 115, "grammar": [115, 211], "roll": [116, 117, 125, 182, 219], "disc": [116, 125, 182], "bicycl": [116, 125, 131], "nonminim": [116, 125, 129], "linkag": [116, 125], "meijaard2007": [117, 131], "steer": [117, 131], "purposefulli": 117, "mechanics_print": [117, 118, 122, 123, 124, 125, 126, 127, 128], "yaw": 117, "ang": 117, "rear": 117, "wheel": 117, "pitch": 117, "q4": [117, 127, 177], "q5": [117, 177], "q4d": [117, 127], "q5d": 117, "u4": [117, 123, 127, 132], "u5": [117, 123], "u6": [117, 123], "u3d": [117, 122, 123], "u4d": 117, "u5d": 117, "u6d": 117, "explanatori": 117, "wfrad": 117, "wrrad": 117, "htangl": 117, "forkoffset": 117, "forklength": 117, "framelength": 117, "forkcg1": 117, "forkcg3": 117, "framecg1": 117, "framecg3": 117, "iwr11": 117, "iwr22": 117, "iwf11": 117, "iwf22": 117, "iframe11": 117, "iframe22": 117, "iframe33": 117, "iframe31": 117, "ifork11": 117, "ifork22": 117, "ifork33": 117, "ifork31": 117, "mframe": 117, "mfork": 117, "mwf": 117, "mwr": 117, "wr": 117, "tempfram": 117, "tempfork": 117, "orientnew": [117, 119, 122, 123, 124, 129, 133, 175, 177, 178, 180, 182, 183], "wr_cont": 117, "wr_mc": 117, "frame_mc": 117, "fork_mc": 117, "wf_mc": 117, "wf_cont": 117, "flip": [117, 150, 159, 219], "frame_i": 117, "fork_i": 117, "wr_i": 117, "wf_i": 117, "bodyfram": 117, "bodyfork": 117, "bodywr": 117, "bodywf": 117, "nonholonom": 117, "closer": [117, 218, 270], "slip": [117, 121, 123, 182], "replic": 117, "conlist_spe": 117, "conlist_coord": 117, "gravit": [117, 122, 168, 180, 252], "aforement": [117, 180, 212, 250], "paperradrear": 117, "paperradfront": 117, "hta": 117, "trailpap": 117, "08": 117, "rake": 117, "paperwb": 117, "02": 117, "paperframecgx": 117, "paperframecgz": 117, "paperforkcgx": 117, "paperforkcgz": 117, "framecgnorm": 117, "framecgpar": 117, "tempa": 117, "tempb": 117, "tempc": 117, "paperforkl": 117, "forkcgnorm": 117, "forkcgpar": 117, "upright": 117, "val_dict": 117, "0603": 117, "1405": 117, "05892": 117, "00708": 117, "00756": 117, "kdd": [117, 122, 123], "centripet": 117, "corioli": 117, "forcing_lin": 117, "mm_full": 117, "_k_kqdot": 117, "xdot": 117, "lean": [117, 122, 124], "amat": 117, "summari": [118, 211, 230, 254], "jointsmethod": [118, 120, 125], "q_1": [118, 119, 120, 126, 129, 145, 182, 195, 212], "q_2": [118, 119, 120, 129, 182], "q_3": [118, 120, 182], "u_1": [118, 119, 120, 126, 182, 194, 215], "u_2": [118, 119, 120, 182, 194, 215], "u_3": [118, 120, 182], "densiti": [118, 219, 230, 253], "link1": 118, "link2": 118, "link3": 118, "link4": 118, "joint1": 118, "pinjoint": [118, 120], "joint2": 118, "joint3": 118, "j3": [118, 120, 144, 162], "fh": 118, "fhd": 118, "_method": 118, "_form_eom": 118, "eom": [119, 120, 129], "theta1": 119, "dq_dict": 119, "presimplifi": 119, "inp_vec": [119, 129], "lag": [119, 124, 129], "lm": [119, 128, 129, 192, 195], "lag_eq": [119, 129], "lam_op": 119, "prismaticjoint": [120, 126], "mb": [120, 132], "ibzz": 120, "compound_pend": 120, "simple_pend": 120, "slider": [120, 126], "rev1": 120, "rev2": 120, "w_r_n_qd": [122, 123], "dmc": [122, 123, 124], "uv": [122, 123, 165], "bodyd": [122, 123, 124], "bodylist": [122, 123], "revisit": [123, 182], "kane1985": [123, 127, 130, 131], "thorough": [123, 129, 212], "simplifc": 123, "f3": [123, 185, 199], "necessit": 123, "factor_term": [123, 195, 208, 211], "simplify_auxiliary_eq": 123, "lrh": 124, "planet": 125, "robot": 125, "fascin": 125, "trajectori": 125, "challeng": 125, "came": [125, 270], "tackl": [125, 232], "organ": 125, "amen": 125, "arduou": 125, "momenta": [125, 144], "symbolicsystem": 125, "rough": [125, 170], "inertia_of_point_mass": 125, "linear_momentum": [125, 130, 132], "angular_momentum": [125, 130, 132], "kanemethod": 125, "find_dynamicsymbol": 125, "red": [126, 185], "parent_fram": 126, "child_fram": 126, "child_mass": 126, "f_h": 127, "nh": 127, "ku": [127, 199], "k_d": 127, "f_d": [127, 128, 192], "dnh": 127, "f_r": [127, 129, 192], "speed_con": 127, "coord_con": 127, "u_dep": 127, "m_d": 128, "lam1": 128, "0_": 129, "blajer1994": [129, 131], "brought": [129, 219], "vel_p": 129, "a_op": 129, "b_op": 129, "m_op": 129, "a_lin": 129, "hasn": 129, "wikidyad": [130, 181], "wikidyadicproduct": [130, 181], "juxtaposit": [130, 174, 247], "hat": [130, 174, 175, 179, 180, 182, 183, 247, 248, 250, 252, 253], "otim": [130, 220], "l_p": 130, "likins1973": [130, 181], "l_b": 130, "requisit": 130, "t_p": 130, "t_b": 130, "t_t": 130, "virtu": [130, 132], "blajer": 131, "wojciech": 131, "werner": 131, "schiehlen": 131, "walter": 131, "schirm": 131, "kane1983": [131, 183], "likin": [131, 181], "david": [131, 195], "spacecraft": 131, "1983": [131, 234], "meijaard": 131, "jim": 131, "papadopoulo": 131, "ruina": 131, "schwab": 131, "royal": 131, "societi": [131, 212], "2084": 131, "1955": 131, "982": 131, "lectur": [132, 193, 219], "rigibodi": 132, "proprietari": 132, "k3": [132, 189], "k4": 132, "b11": 132, "b12": 132, "b21": 132, "b22": 132, "xd": 132, "xd2": 132, "y1d": 132, "y2d": 132, "tina": 132, "overwrit": [132, 174], "dt2": 132, "dy2": 132, "ty": 132, "linsolv": [132, 197, 213, 217, 276], "nonlinsolv": [132, 213, 217, 276], "nsolv": [132, 217], "rowmatrix": 132, "colmatrix": 132, "diagmat": 132, "eigval": 132, "row_matrix": 132, "col_matrix": 132, "ao": 132, "i12": 132, "i23": 132, "i31": 132, "bf": 132, "p_o_q": 132, "mag": 132, "unitvec": 132, "qo": 132, "p_p_q": 132, "partial_veloc": [132, 175, 178], "a_o_n": 132, "set_acc": [132, 178, 182], "qb": [132, 187], "qbd": 132, "alf_b_n": 132, "set_ang_acc": [132, 175], "ang_acc_in": [132, 175], "force_o": 132, "torque_a": 132, "qa": 132, "qad": 132, "a_b": 132, "v1pt": 132, "v1pt_theori": [132, 178, 182], "a1pt": 132, "a1pt_theori": [132, 178], "a2pt": 132, "a2pt_theori": [132, 178, 182], "angvel": 132, "force_vector": 132, "center_of_mass": 132, "kindiff": 132, "ke": 132, "configura": 132, "tion_constraint": 132, "pendent": 132, "velocity_con": 132, "traint": 132, "acceleration_": 132, "u_auxilia": 132, "ry": 132, "matlplotlib": 132, "stiff": 132, "damp": 132, "legend": [132, 185, 202], "introspect": 132, "rich": [132, 211], "media": [132, 138], "histori": 132, "esqu": 132, "cpython": 132, "pertin": [133, 186, 194], "alg_con_ful": 133, "symsystem1": 133, "symsystem2": 133, "symsystem3": 133, "raytransfermatrix": 134, "geometricrai": 134, "beamparamet": 134, "geometric_conj": 134, "gauss_conj": 134, "conjugate_gauss_beam": 134, "lens": 134, "gaussopt": 134, "wavelen": 134, "z_r": 134, "wavelength": [134, 139], "waist": 134, "rayleigh": [134, 219], "refract": [134, 136, 138, 139], "530e": 134, "88679245283019": 134, "92753330865999": 134, "w_0": [134, 212], "00100000000000000": 134, "freespac": 134, "00101413072159615": 134, "00210803120913829": 134, "r660": 134, "complex_beam_paramet": 134, "r661": 134, "gaussian_beam": 134, "spread": [134, 199, 219, 234], "00053": 134, "goui": 134, "55998576005696": 134, "2809": 134, "peak": 134, "waist_approximation_limit": 134, "paraxi": [134, 138], "06e": 134, "curvedmirror": 134, "curvedrefract": 134, "flatmirror": 134, "flatrefract": 134, "2x1": 134, "thinlen": 134, "r662": 134, "ray_transfer_matrix_analysi": 134, "waist_in": 134, "waist_out": 134, "s_in": 134, "s_out": 134, "w_o": 134, "gaussian_conj": 134, "z_r_in": 134, "incid": [134, 138], "z_r_out": 134, "emerg": [134, 187], "geometric_conj_ab": 134, "geometric_conj_af": 134, "geometric_conj_bf": 134, "rayleigh2waist": 134, "waist2rayleigh": 134, "optic": [136, 137, 138, 139, 260], "permitt": 136, "permeabl": 136, "fermat": 136, "electr": [136, 138, 180, 250, 252], "electromagnet": [136, 180, 225, 252], "intrinsic_imped": 136, "149896229": [136, 139], "kilogram": [136, 168, 170, 172], "1250000": 136, "amper": 136, "refractive_index": 136, "299792458": [136, 139, 172], "r663": 136, "optical_medium": 136, "travel": [136, 139, 180, 250, 252], "stoke": [137, 251], "mueller": 137, "jones_vector": 137, "stokes_vector": 137, "half_wave_retard": 137, "polarizing_beam_splitt": 137, "jones_2_stok": 137, "\u2148": [137, 184, 198, 199, 218, 276], "\u03c7": 137, "\u03c8": 137, "i\u2080": 137, "plate": 137, "hwp": 137, "splitter": 137, "transmit": [137, 138], "pb": 137, "transmitted_port": 137, "reflected_port": 137, "transmitted_pow": 137, "reflected_pow": 137, "r664": 137, "jones_calculu": 137, "r665": 137, "mueller_calculu": 137, "r666": 137, "stokes_paramet": 137, "retard": 137, "poincar\u00e9": 137, "tilt": 137, "mayor": 137, "linear_polar": 137, "transmiss": [137, 138], "mueller_matrix": 137, "quarter_wave_retard": 137, "quarter": 137, "phase_retard": 137, "\u03b4": 137, "phia": 137, "phib": 137, "4x1": [137, 219], "phi_a": 137, "phi_b": 137, "qwp": 137, "reflective_filt": 137, "unpolar": 137, "transmissive_filt": 137, "attenu": 137, "transmitt": 137, "ndf": 137, "refraction_angl": 138, "fresnel_coeffici": 138, "brewster_angl": 138, "critical_angl": 138, "lens_makers_formula": 138, "mirror_formula": 138, "lens_formula": 138, "hyperfocal_dist": 138, "transverse_magnif": 138, "medium1": 138, "medium2": 138, "brewster": 138, "926093295503462": 138, "onset": 138, "850908514477849": 138, "02005": 138, "angle_of_incid": 138, "polaris": 138, "te": 138, "undergo": 138, "317843553417859": 138, "348645229818821": 138, "658921776708929": 138, "651354770181179": 138, "235625382192159": 138, "971843958291041": 138, "816477005968898": 138, "577377951366403": 138, "r667": 138, "fresnel_equ": 138, "coc": 138, "0033": 138, "focal_length": 138, "n_len": 138, "n_surr": 138, "thick": 138, "1515151515151": 138, "0000000000000": 138, "3418463277618": 138, "41152": 138, "magnif": 138, "twave": 139, "time_period": 139, "wavenumb": 139, "phi1": 139, "phi2": 139, "w1": [139, 211], "w3": [139, 199], "superposit": [139, 150, 161, 186], "angular_veloc": 139, "tempor": 139, "r668": 140, "paulialgebra": 140, "evaluate_pauli_product": 140, "paulimatric": 140, "sigma3": 140, "nodal": [141, 166, 186], "hw": [141, 166], "coherent_st": 141, "coher": [141, 167, 173], "1d": [141, 143, 156, 175, 224], "wavefunct": [141, 154, 163, 166, 260], "r669": 142, "__cmp__": [142, 146, 165], "dagger": [142, 146, 152, 154, 157, 159, 164, 165], "operatorset": [143, 155], "positionbra3d": 143, "eigenbra": [143, 156, 162], "positionket3d": 143, "eigenket": [143, 156, 162], "positionstate3d": 143, "eigenst": [143, 155, 160, 162, 163], "position_x": 143, "position_i": 143, "position_z": 143, "pxbra": [143, 155], "pxket": [143, 155, 160], "pxop": [143, 155, 160], "xbra": [143, 155, 160], "xket": [143, 155, 160], "xop": [143, 155, 160], "yop": 143, "zop": 143, "uncoupl": [144, 162], "r670": 144, "j_3": [144, 162, 184], "r671": 144, "wigner3j": [144, 184], "wigner": [144, 162, 219, 260], "varshalovich": [144, 162], "zyla": 144, "theor": 144, "phy": [144, 170, 184], "083c01": 144, "r672": 144, "w3j": 144, "715": [144, 184, 199], "wigner6j": [144, 184], "j12": [144, 162], "j23": 144, "6j": [144, 184], "wigner9j": [144, 184], "j4": 144, "j34": 144, "j13": 144, "j24": 144, "9j": [144, 184], "cg_simp": 144, "r673": 144, "clebsh": 144, "rethink": 145, "figsiz": 145, "circuitplot": 145, "nqubit": [145, 149, 150, 159], "control_lin": 145, "gate_idx": [145, 149], "min_wir": 145, "max_wir": 145, "control_point": 145, "wire_idx": 145, "not_point": 145, "one_qubit_box": 145, "box": [145, 150, 152, 161, 163, 253], "qubit": [145, 149, 150, 151, 152, 158], "swap_point": 145, "two_qubit_box": 145, "createcg": 145, "latexnam": 145, "mock": 145, "mz": 145, "circuit_plot": 145, "min_qubit": [145, 149], "autogener": 145, "wire": 145, "q_0": [145, 212], "j_0": 145, "r674": 146, "comm": [146, 165, 225], "plank": 147, "r675": 147, "05457162000000e": 147, "planck_const": 147, "hermetian": 148, "r676": 148, "r677": 148, "ket": [148, 153, 154, 155, 157, 159, 160, 163, 165], "bra": [148, 153, 154, 155, 157, 159, 160, 163, 165], "innerproduct": [148, 153, 154, 160, 162, 165], "outerproduct": [148, 154], "seamlessli": 148, "hermitian_adjoint": 148, "hermitian_transpos": 148, "_apply_operators_qubit": 149, "gate_sort": 149, "gate_simp": 149, "ugat": 149, "cgate": 149, "control_valu": 149, "cnot": 149, "eval_control": 149, "plot_gat": 149, "circ_plot": 149, "simplify_cg": 149, "cphase": 149, "cnotgat": 149, "qappli": [149, 150, 152, 154, 159], "get_target_matrix": 149, "represen": 149, "hadamardg": 149, "identityg": 149, "onequbitg": 149, "phaseg": 149, "swapgat": 149, "target1": 149, "target2": 149, "tgate": 149, "twoqubitg": 149, "xgate": 149, "ygate": 149, "zgate": 149, "bubbl": 149, "random_circuit": 149, "ngate": 149, "gate_spac": 149, "mermin": 150, "_represent_zg": 150, "oracleg": 150, "oracl": 150, "intqubit": [150, 159], "search_funct": 150, "wgate": 150, "apply_grov": 150, "grover_iter": 150, "qstate": 150, "wv": 150, "superposition_basi": 150, "numqubit": 150, "basis_st": 150, "matt": 151, "complexspac": 151, "directsumhilbertspac": 151, "r678": 151, "hilbertspac": 151, "fockspac": 151, "hilbert_spac": [151, 154, 163], "direct_sum": 151, "quantiz": [151, 260], "r679": 151, "mess": [151, 215, 218, 275], "fock_spac": 151, "r680": 151, "tensorpowerhilbertspac": 151, "r681": 151, "tensor_product": 151, "tensorproducthilbertspac": 151, "r682": 151, "clebsch": [152, 162, 184], "gordan": [152, 162, 184], "hilbert": [152, 154, 160], "grover": 152, "qft": [152, 161], "shor": 152, "brabas": [153, 154, 160, 163], "ketbas": [153, 154, 160, 163], "r683": 153, "inner_product": 153, "apply_oper": [154, 165], "identityoper": 154, "r684": 154, "r685": 154, "polymoni": 154, "operator_": 154, "28physic": 154, "old_assumpt": 154, "r686": 154, "outer_product": 154, "unitaryoper": 154, "operators_to_st": 155, "state_to_oper": 155, "_operators_to_st": 155, "state_map": 155, "_state_to_oper": 155, "statebas": [155, 160, 163], "piab": 156, "piabbra": 156, "piabhamiltonian": 156, "piabket": 156, "ip_doit": 157, "smarter": [158, 208], "rk": 158, "iqft": 158, "rkgate": 158, "qtf": 158, "povm": 159, "as_int": [159, 240], "qubit_valu": 159, "intqubitbra": 159, "00001": 159, "qubitbra": 159, "matrix_to_dens": 159, "matrix_to_qubit": 159, "measure_al": 159, "ensembl": 159, "measure_all_oneshot": 159, "oneshot": 159, "measure_parti": 159, "measure_partial_oneshot": 159, "qubit_to_matrix": 159, "enumerate_st": 160, "_enumerate_st": 160, "foo_1": 160, "foo_2": 160, "foo_3": 160, "test2": 160, "bar_4": 160, "bar_5": 160, "bar_10": 160, "get_basi": 160, "replace_non": 160, "operator_to_st": 160, "qexpr": 160, "integrate_result": 160, "orig_expr": 160, "x_ket": 160, "x_op": 160, "rep_expect": 160, "px_2": 160, "px_1": 160, "rep_innerproduct": 160, "_repres": 160, "_represent_foobasi": 160, "foobasi": 160, "_represent_szop": 160, "szupket": 160, "szop": 160, "sz": 160, "cmod": 161, "reformat": 161, "period_find": 161, "momemtum": 162, "j2op": 162, "jxbra": 162, "jx": 162, "jzket": 162, "jxbracoupl": 162, "jcoupl": 162, "jzketcoupl": 162, "jxket": 162, "jxketcoupl": 162, "jybra": 162, "jy": 162, "jybracoupl": 162, "jyket": 162, "jyketcoupl": 162, "jzbra": 162, "jz": 162, "jzbracoupl": 162, "j_4": [162, 184], "argular": 162, "jzop": 162, "passiv": 162, "r687": 162, "wignerd": 162, "mp": [162, 217, 233], "jm": 162, "jj": 162, "r688": 162, "jcoupling_list": 162, "coupledspinst": 162, "spinstat": 162, "r689": 163, "dual_class": 163, "mn": [163, 199, 219], "ket_not": 163, "r690": 163, "k0": [163, 190, 192, 219], "orthogonalbra": 163, "orthogonalket": 163, "orthogonalst": 163, "_eval_adjoint": 163, "timedepbra": 163, "timedepst": 163, "timedepket": 163, "prob": [163, 219], "412214747707527": 163, "matrix_tensor_product": 164, "axb": 164, "xdagger": 164, "axc": 164, "bxc": 164, "tensor_product_simp": 164, "cxd": 164, "boson": 165, "fetter": 165, "welecka": 165, "secondqu": 165, "annihilateboson": 165, "fockstateket": 165, "bket": 165, "fockstatebosonket": 165, "annihilatefermion": 165, "createboson": 165, "is_only_q_annihil": 165, "destroi": [165, 208], "quasi": 165, "hole": 165, "is_only_q_cr": 165, "is_q_annihil": 165, "is_q_creat": 165, "antisymmetrictensor": 165, "bbra": 165, "fockstatebosonbra": 165, "bd": 165, "bosonicbasi": 165, "fock": 165, "NO": 165, "createfermion": 165, "wick": 165, "fbra": 165, "fockstatefermionbra": 165, "fket": 165, "fockstatefermionket": 165, "fixedbosonicbasi": 165, "n_particl": 165, "n_level": 165, "fockstat": 165, "occup": 165, "bosonbra": 165, "fockstatebra": 165, "fermi_level": 165, "r691": 165, "textwrap": [165, 240], "_q": 165, "get_subno": 165, "fermionicoper": 165, "has_q_annihil": 165, "q_annihil": 165, "has_q_creat": 165, "leftmost": 165, "q_creator": 165, "iter_q_annihil": 165, "iter_q_cr": 165, "0x": 165, "permutationoper": 165, "get_permut": 165, "varbosonicbasi": 165, "n_max": 165, "creator": 165, "evaluate_delta": 165, "einstein": [165, 225], "d_ij": 165, "_j": [165, 170, 184, 201], "d_ip": 165, "d_qp": 165, "matrix_rep": 165, "simplify_index_permut": 165, "permutation_oper": 165, "schemat": [165, 170], "abij": 165, "abji": 165, "baij": 165, "baji": 165, "permutlist": 165, "substitute_dummi": 165, "new_indic": 165, "pretty_indic": 165, "_get_ordered_dummi": 165, "_c": 165, "_d": 165, "index_group": 165, "string_of_lett": 165, "my_dummi": 165, "_v": [165, 183], "_p_0": 165, "_p_1": 165, "keep_only_fully_contract": 165, "sho": 166, "isotrop": 166, "mk": [167, 170], "legal": 167, "temperatur": [167, 180, 252], "dimensions": 167, "dimsys_si": [167, 168], "get_dimensional_depend": [167, 168], "has_integer_pow": 167, "dim_si": 167, "base_dim": 167, "derived_dim": 167, "dimensional_depend": 167, "can_transf_matrix": 167, "useless": [167, 190, 192], "inv_can_transf_matrix": 167, "dim_can_vector": 167, "dim_vector": 167, "is_consist": [167, 173], "is_dimensionless": 167, "list_can_dim": 167, "print_dim_bas": 167, "gravitational_const": [168, 172], "equivalent_dim": 168, "grav_eq": 168, "kepler": [168, 244], "venu": 168, "701": 168, "dai": [168, 172, 215], "venus_a": 168, "108208000e3": 168, "solar": 168, "solar_mass": 168, "9891e30": 168, "convert_to": [168, 172, 188, 194], "5112118495813": 168, "659097795948": 168, "astrophys": 168, "ill": 168, "astrophysicist": 169, "ua": [169, 187], "earth": [169, 180, 252], "sun": 169, "theoricist": 169, "philosophi": [169, 215, 218, 260], "mole": 170, "dimensionless": 170, "unavoid": 170, "d_3": 170, "d_2": [170, 195, 219], "underbrac": [170, 182], "countabl": [170, 218], "pmatrix": 170, "kg": [170, 253], "glu": 170, "men": 170, "heat": 170, "joul": 170, "calori": 170, "stori": 170, "chemistri": 170, "page52": 170, "1952": 170, "page78": 170, "deboer79": 170, "boer": 170, "818": 170, "levyleblond77": 170, "l\u00e9vy": 170, "leblond": 170, "conceptu": [170, 186, 252], "rivista": 170, "del": [170, 234, 251, 275], "nuovo": [170, 184], "cimento": [170, 184], "1977": 170, "187": [170, 193], "214": 170, "anticip": 170, "bin_prefix": 171, "abbrev": [171, 172, 199], "latex_repr": [171, 172], "encapsul": [171, 192, 218, 232], "kilo": 171, "scale_factor": 172, "pretty_unicode_repr": 172, "pretty_ascii_repr": 172, "mathml_presentation_repr": 172, "is_prefix": 172, "abbrevi": [172, 187, 199, 218, 220], "speed_of_light": 172, "reference_quant": 172, "target_unit": 172, "mile": 172, "atomic_mass_const": 172, "centimet": 172, "25146": 172, "609344": 172, "86400": 172, "660539060e": 172, "300000": 172, "planck": 172, "62963087839509e": 172, "base_unit": 173, "descr": 173, "dimension_system": 173, "derived_unit": 173, "overridden": [173, 186, 201, 275], "get_units_non_prefix": 173, "to_matrix": [174, 175, 183, 188, 194, 244, 246, 248], "rigidli": 174, "entireti": 174, "_str": 174, "otherfram": [175, 244], "n_alpha_b": 175, "ny": 175, "_3": 175, "rot_typ": [175, 178, 180], "rot_ord": [175, 178, 245], "orient_body_fix": 175, "orient_space_fix": 175, "orient_quaternion": 175, "tait": [175, 244, 245], "bryan": [175, 244, 245], "quaternion": [175, 178, 183, 244, 245, 255], "userwarn": [175, 228, 235, 271], "rotation_ord": [175, 244, 245], "xzx": 175, "zxz": [175, 183, 244, 245], "xyx": [175, 244, 245], "yzy": 175, "zyz": 175, "yxy": [175, 183], "yzx": [175, 183], "zxy": 175, "xzy": 175, "zyx": 175, "yxz": 175, "orient_explicit": 175, "lambda_x": [175, 244, 245], "lambda_i": [175, 244, 245], "lambda_z": [175, 244, 245], "q0": [175, 215, 244, 245], "newnam": 175, "gen_spe": [175, 178], "variable_map": 175, "a_x": [175, 183, 199], "b_x": [175, 177, 183, 225], "b_y": [175, 177, 183, 225], "a_z": [175, 183], "b_z": [175, 183, 225], "inlist": 175, "var_in_dcm": 175, "reexpress": [175, 248], "time_deriv": [175, 180, 181], "free_dynamicsymbol": 175, "codirect": 175, "dyadic_tensor": [175, 244], "frame1": 175, "frame2": [175, 177], "second_reference_fram": 175, "ixz": 175, "inertia_dyad": 175, "pertain": [176, 181], "fieldfunct": [176, 180], "vect": [176, 244, 246], "r_x": [176, 180], "r_y": [176, 180], "r_z": [176, 180], "scalar_field": [176, 180, 244, 246, 250], "grad_field": [176, 246], "sympyfi": [176, 177, 178, 246], "position2": [176, 246], "vectfield": [176, 180, 246, 250], "solenoid": [176, 246, 251], "q6": 177, "vec1": 177, "vec2": 177, "coordinatesym": [177, 181], "n_x": 177, "rotating_reference_fram": 177, "time_derivatives_in_the_two_fram": 177, "otherpoint": 178, "outfram": 178, "interfram": 178, "fixedfram": 178, "get_motion_param": 178, "vectori": [178, 180, 247, 252], "timevalue1": 178, "timevalue2": 178, "313": 178, "vel_vec": 178, "q1dd": 179, "q2dd": 179, "charg": [180, 252], "displac": [180, 182, 252], "depict": [180, 218, 252], "temper": 180, "electric_potenti": [180, 250], "r1_x": 180, "r1_y": 180, "infinitesim": [180, 250], "nabla": [180, 244, 249, 250], "f_y": [180, 250], "f_x": [180, 218, 250], "sink": [180, 250], "irrot": [180, 250], "is_conserv": [180, 250, 251], "is_solenoid": [180, 250, 251], "scalar_potenti": [180, 250, 251], "conservative_field": [180, 250], "scalar_potential_differ": [180, 250, 251], "aug": [181, 218], "dyadic_product": [181, 251], "inc": [181, 193], "kinematic_equ": 181, "w_x": 182, "w_y": 182, "w_z": 182, "w_1": [182, 194], "w_2": [182, 194], "w_3": 182, "textrm": [182, 183, 207], "u_x": 182, "sp": 182, "oq": 182, "qp": 182, "rod": 182, "went": 182, "parallelogram": 183, "c_x": 183, "c_y": 183, "c_z": 183, "train": 183, "friend": 183, "xz": [183, 185], "zy": 183, "undergon": [183, 218], "vastli": 183, "wait": 183, "mold": 183, "bp": [183, 215], "bpp": 183, "zzx": 183, "multifram": 183, "direction": 183, "racah": 184, "gaunt": 184, "rasch03": 184, "regge58": 184, "regg": 184, "544": 184, "regge59": 184, "116": [184, 193], "1959": 184, "edmonds74": 184, "edmond": 184, "princeton": [184, 219], "1957": 184, "rasch": 184, "siam": [184, 237], "sci": 184, "1416": 184, "1428": 184, "liberatodebrito82": 184, "liberato": 184, "brito": 184, "forum": [184, 218], "m4nzdu": 184, "7o38": 184, "jen": 184, "03": [184, 219], "oscar": 184, "gerardo": 184, "lazo": 184, "arjona": 184, "jyr2000": 184, "gmail": 184, "clebsch_gordan": 184, "2j_3": 184, "dot_rot_grad_ynm": 184, "gradient": [184, 185, 244, 251, 252], "_l": 184, "l_2": 184, "l_3": 184, "drastic": 184, "2l_1": 184, "2l_2": 184, "2l_3": 184, "1200": 184, "00689500421922113448": 184, "inflect": 184, "unsuit": 184, "dd": [184, 204], "ee": [184, 194], "j_5": 184, "j_6": 184, "richer": 184, "wigner_3j": 184, "wigner_6j": 184, "wigner_9j": 184, "j_7": 184, "j_8": 184, "j_9": 184, "05555555": 184, "1666666": 184, "wigner_d": 184, "j_z": 184, "j_y": 184, "\u03b3": [184, 265, 275], "wigner_d_smal": 184, "textbackend": 185, "plot_parametr": 185, "plot_implicit": 185, "plot3d_parametric_lin": 185, "plot3d_parametric_surfac": 185, "xlabel": 185, "ylabel": 185, "zlabel": 185, "aspect_ratio": 185, "ylim": 185, "axis_cent": 185, "xscale": 185, "yscale": 185, "autoscal": 185, "textplot": 185, "_seri": [185, 196], "baseseri": 185, "nonparametr": 185, "cylindr": [185, 250], "basebackend": 185, "parametric2dlineseri": 185, "parametric3dlineseri": 185, "cyan": 185, "grayscal": 185, "integers_onli": 185, "surfaceover2drangeseri": 185, "parametricsurfaceseri": 185, "surface_color": 185, "range1": 185, "range2": 185, "fill_between": 185, "inch": 185, "expr_x": 185, "expr_i": 185, "canva": 185, "range_x": 185, "range_i": 185, "nb_of_points_x": 185, "nb_of_points_i": 185, "expr_z": 185, "range_u": 185, "range_v": 185, "nb_of_points_u": 185, "nb_of_points_v": 185, "x_var": 185, "y_var": 185, "mesh": 185, "p8": 185, "p9": 185, "nrow": [185, 188], "ncolumn": 185, "stuff": [185, 230, 232, 240], "is_2dlin": 185, "oblig": 185, "only_integ": 185, "get_seg": 185, "get_color_arrai": 185, "var_start_end": 185, "r692": 185, "luiz": 185, "henriqu": 185, "figueiredo": 185, "r693": 185, "line3dbaseseri": 185, "surfacebaseseri": 185, "var_start_end_x": 185, "var_start_end_i": 185, "var_start_end_u": 185, "var_start_end_v": 185, "implicitseri": 185, "has_equ": 185, "use_interval_math": 185, "centric": 185, "get_mesh": 185, "process_seri": 185, "_process_seri": 185, "keyboard": 185, "mous": 185, "pyglet_plot": 185, "screenshot": 185, "camera": 185, "zoom": 185, "numpad": 185, "ordin": [185, 215, 240], "f5": 185, "f6": 185, "f8": 185, "drag": 185, "button": [185, 231], "curvilinear": [185, 247, 248, 251], "__setitem__": 185, "zfade4": 185, "key1": 185, "value1": 185, "key2": 185, "value2": 185, "unbound_theta": 185, "wirefram": 185, "saddl": 185, "fz": 185, "_______________________________________________________": 185, "mediterranean": 186, "cultur": 186, "arab": 186, "lighten": 186, "tapestri": 186, "woven": 186, "european": 186, "soil": 186, "plausibl": 186, "teeter": 186, "totter": 186, "outweigh": 186, "excit": 186, "amus": 186, "kempf": 186, "1944": 186, "20th": 186, "dedekind": 186, "intim": 186, "disciplin": 186, "toolset": 186, "atiyah69": [186, 193], "gear": 186, "greuel2008": [186, 193], "interspers": 186, "lr": 186, "ilex": 186, "\u211a": [186, 199], "localis": 186, "abridg": 186, "free_modul": [186, 190], "quotient_r": [186, 190], "overload": [186, 189, 190, 247, 270], "polynomialr": [186, 190, 191, 197], "domain_or_r": [186, 190], "quotientr": [186, 190], "base_id": [186, 190], "elbow": 186, "room": 186, "componentwis": [186, 199], "inclin": 186, "biproduct": 186, "quotient_modul": 186, "is_submodul": 186, "multiply_id": 186, "identity_hom": 186, "freemodul": 186, "freemoduleel": 186, "conicis": 186, "_contain": 186, "_syzygi": 186, "_in_terms_of_gener": 186, "_intersect": 186, "_module_quoti": 186, "reduce_el": [186, 194], "represantit": 186, "in_terms_of_gener": 186, "inclusion_hom": 186, "rela": 186, "relb": 186, "is_full_modul": 186, "module_quoti": 186, "opt": [186, 192, 211, 271], "coincis": 186, "syzygy_modul": 186, "r_n": 186, "_contains_elem": 186, "_contains_id": 186, "_quotient": 186, "_union": 186, "_product": 186, "is_whole_r": 186, "is_maxim": 186, "is_primari": 186, "is_rad": 186, "is_princip": 186, "xj": 186, "satur": 186, "subquoti": 186, "quotientmodul": 186, "subquotientmodul": 186, "killed_modul": 186, "quotientmoduleel": 186, "kill": [186, 190, 230], "quotient_hom": 186, "ker": 186, "surject": 186, "cokernel": 186, "coker": 186, "meaningfulli": 186, "restrict_domain": 186, "homomoprh": 186, "modulehomomorph": [186, 194], "_ker": 186, "_img": 186, "_kernel": 186, "_imag": 186, "_restrict_domain": 186, "_restrict_codomain": 186, "_quotient_domain": 186, "_quotient_codomain": 186, "_appli": 186, "_mul_scalar": 186, "_compos": 186, "_add": [186, 205], "is_inject": 186, "quotient_domain": 186, "is_isomorph": 186, "preimag": 186, "restrict_codomain": 186, "is_surject": 186, "quotient_codomain": 186, "induct": 186, "monogen": 186, "monogenicfiniteextens": [186, 190], "finiteextens": 186, "sqrt2": [186, 189], "_5": 186, "extensionel": [186, 190], "notinvert": [186, 192, 195], "nu_1": 187, "nu_2": 187, "nu_n": 187, "nu_i": 187, "customarili": 187, "irreduc": [187, 190, 192, 194, 195, 198, 219, 225, 275], "endow": 187, "resp": [187, 190, 215], "divmod": [187, 189, 190], "cb": [187, 237], "sqf_list": [187, 190, 195], "sqf": [187, 190, 195, 212], "buchberg": [187, 192, 193, 195], "groebnerbasi": [187, 195, 198], "solve_poly_system": [187, 195, 217, 218], "fmt": [188, 190, 194], "matrix1": 188, "dmnonsquarematrixerror": 188, "zz_i": [188, 189, 191], "from_dict_sympi": 188, "ncol": 188, "elemsdict": 188, "from_list_sympi": 188, "from_list": [188, 190, 195, 196], "construct_domain": [188, 189, 190, 195], "from_rep": 188, "drep": 188, "dm": [188, 194], "ownership": 188, "scc": 188, "substract": 188, "to_dens": 188, "to_field": [188, 190, 195], "to_spars": 188, "aq": 188, "ccc": [188, 218], "from_ddm": 188, "domainerror": [188, 192, 195], "to_ddm": 188, "r694": 188, "pythonmpq": [189, 190], "srepr": [189, 262, 270], "strength": 189, "richardon": 189, "dup_factor_list": 189, "factortool": [189, 192], "dup_": [189, 192], "dmp_": [189, 192], "prod": [189, 196, 208], "z1": [189, 190, 217], "is_field": [189, 190], "quo": [189, 190, 192, 195], "rem": [189, 190, 192, 195], "exquo": [189, 190, 195], "exactquotientfail": [189, 190, 192, 195], "mpz": [189, 190], "of_typ": [189, 190], "z1_sympi": 189, "to_sympi": [189, 190], "from_sympi": [189, 190], "forth": [189, 194], "z_sympi": 189, "z_zz": 189, "coercionfail": [189, 192], "sum_domain": 189, "expressions_sympi": 189, "expressions_dom": 189, "result_dom": 189, "e_dom": 189, "result_sympi": 189, "qq_i": [189, 191], "gaussianinteg": [189, 190], "gaussianrationalfield": [189, 190], "gaussianr": [189, 190], "galoi": [189, 192, 194], "finitefield": [189, 190], "pythonfinitefield": [189, 190], "gmpyfinitefield": [189, 190], "welcom": [189, 215, 268], "realel": [189, 190], "complexel": [189, 190], "mpc": 189, "xr": [189, 197], "zc": 189, "1j": 189, "_mpc_": 189, "realfield": [189, 190], "rr100": 189, "33333333333333333333333333333": 189, "hack": [189, 215, 228], "algebraic_field": [189, 190, 192, 194], "algebraicfield": [189, 190, 192, 194], "sqrt3": 189, "x_dom": 189, "p_expr": [189, 190], "polyel": [189, 190, 192, 196, 197, 199], "p_dom": 189, "unexpand": [189, 198, 208, 231], "xk": [189, 190, 201], "yk": [189, 190], "poly_r": [189, 190], "old_polynomialr": 189, "globalpolynomialr": 189, "polyclass": [189, 190, 195], "yr": [189, 197], "broader": 189, "get_field": [189, 190], "frac_field": [189, 190], "rationalfield": [189, 190], "old_frac_field": [189, 190], "fractionfield": [189, 190], "old_fractionfield": 189, "xf": 189, "yf": 189, "fracfield": [189, 190], "expressiondomain": [189, 190], "elements_sympi": 189, "elements_k": 189, "convert_from": [189, 190], "num_zz": 189, "num_qq": 189, "domainel": [189, 190, 197], "encompass": 189, "all_coeff": [189, 190, 195], "dom": [189, 190, 192, 207], "strang": 189, "hybrid": 189, "unreli": 189, "usefulli": 190, "pythonr": [190, 197], "p_domain": 190, "ez": [190, 225], "get_r": 190, "has_assoc_field": 190, "has_assoc_r": 190, "alg_field_from_poli": [190, 194], "root_index": 190, "almosteq": 190, "cyclotomic_field": [190, 194], "zeta7": 190, "zeta_": 190, "lexord": [190, 195], "from_algebraicfield": 190, "from_complexfield": 190, "from_expressiondomain": 190, "from_expressionrawdomain": 190, "from_ff": 190, "modularinteg": 190, "from_ff_gmpi": 190, "from_ff_python": 190, "from_fractionfield": 190, "from_globalpolynomialr": 190, "from_monogenicfiniteextens": 190, "from_polynomialr": 190, "from_qq_gmpi": 190, "from_qq_python": 190, "from_realfield": 190, "from_zz_gmpi": 190, "from_zz_python": 190, "gcdex": [190, 195], "get_exact": 190, "half_gcdex": [190, 195], "is_pid": 190, "is_r": 190, "is_nonposit": 190, "is_on": [190, 195], "rersiv": 190, "__neg__": 190, "__pos__": 190, "__sub__": 190, "q_domain": 190, "q_expr": 190, "x_domain": 190, "alg": [190, 194, 198], "trait": 190, "is_unit": 190, "__divmod__": 190, "__floordiv__": 190, "__mod__": [190, 194], "simpledomain": 190, "compositedomain": 190, "from_qq": 190, "from_zz": 190, "gmpyinteg": 190, "pythoninteg": 190, "gmpyrationalfield": 190, "pythonrationalfield": 190, "from_gaussianrationalfield": 190, "gaussianel": 190, "gaussiandomain": 190, "qq_python": 190, "zz_python": 190, "z2": 190, "z3": 190, "z4": 190, "from_gaussianinteg": 190, "as_algebraicfield": 190, "orig_ext": 190, "algebraicnumb": [190, 194, 198], "integral_basi": [190, 194], "maximal_ord": [190, 194], "zeta5": 190, "primes_abov": [190, 194], "primeid": [190, 194], "to_alg_num": [190, 194], "legibl": 190, "to_rat": 190, "mpelement": 190, "complexfield": 190, "lc": [190, 192, 195], "domain_or_field": 190, "dmf": 190, "coercibl": 190, "monomialord": [190, 195], "xring": 190, "vring": 190, "sring": [190, 196, 197], "polyr": [190, 191, 192, 197], "factor_list": [190, 195, 275], "add_gen": 190, "drop_to_ground": 190, "monomial_basi": 190, "206": [190, 195], "744": 190, "945": [190, 196], "is_monomi": [190, 195], "const": 190, "coeffcient": [190, 192], "inplac": 190, "shallow": [190, 206], "zero_monom": 190, "fv": 190, "clo": 190, "p64": 190, "qv": 190, "f0": 190, "imul_num": 190, "itercoeff": 190, "itermonom": 190, "iterterm": 190, "leading_expv": 190, "leading_monom": 190, "leading_term": 190, "listcoeff": 190, "listmonom": 190, "listterm": 190, "monom": [190, 195], "strip_zero": 190, "tail_degre": 190, "xfield": 190, "vfield": [190, 249], "sfield": [190, 249], "fracel": [190, 199], "lev": 190, "add_ground": [190, 195], "all_monom": [190, 195], "all_term": [190, 195], "cauchy_lower_bound": 190, "cauchy_upper_bound": 190, "clear_denom": [190, 195], "count_complex_root": 190, "sup": [190, 195, 199, 206, 207], "count_real_root": 190, "deflat": [190, 195], "y_i": [190, 192, 194, 195, 215], "x_j": [190, 192, 195], "degree_list": [190, 195], "eject": [190, 195], "exquo_ground": [190, 195], "factor_list_includ": [190, 195], "from_dict": [190, 195], "from_sympy_list": 190, "gff_list": [190, 195], "homogeneous_ord": [190, 195, 212], "is_cyclotom": [190, 195], "is_ground": [190, 195], "is_homogen": [190, 195], "is_irreduc": [190, 195], "is_linear": [190, 195], "is_mon": [190, 195], "is_quadrat": [190, 195], "is_sqf": [190, 195], "l1_norm": [190, 195], "l2_norm_squar": 190, "max_norm": [190, 195], "mignotte_sep_bound_squar": 190, "mignott": [190, 192], "mul_ground": [190, 195], "pdiv": [190, 195], "pexquo": [190, 195], "pquo": [190, 195], "prem": [190, 195], "quo_ground": [190, 195], "refine_root": [190, 194, 195], "includepr": [190, 192, 195], "sqf_list_includ": [190, 195], "sqf_norm": [190, 195], "sqf_part": [190, 195], "sqr": [190, 195], "sturm": [190, 195], "sub_ground": [190, 195], "to_dict": 190, "to_exact": [190, 195], "to_r": [190, 195], "to_sympy_dict": 190, "to_sympy_list": 190, "to_tupl": 190, "total_degre": [190, 195, 212], "trunc": [190, 195, 198], "frac_unifi": 190, "half_per": 190, "poly_unifi": 190, "gr\u00f6bner": 191, "groebner": [191, 193, 194, 195, 198, 211, 217, 218], "wester": 191, "dispers": [191, 193, 219], "agca": 191, "syzygi": 191, "undocu": 191, "rs_seri": 191, "eqs_to_matrix": 191, "sympy_eqs_to_r": 191, "_solve_lin_si": 191, "_solve_lin_sys_compon": 191, "ddm": 191, "sdm": [191, 192], "adic": [191, 193], "valuat": [191, 215], "subfield": 191, "l0": 192, "legitim": 192, "uninterest": 192, "bulk": [192, 209], "x_u": 192, "dup__": 192, "densebas": 192, "dmp_lc": 192, "poly_lc": 192, "dmp_tc": 192, "poly_tc": 192, "dmp_ground_lc": 192, "dmp_ground_tc": 192, "dmp_true_lt": 192, "n_1": [192, 217, 219], "n_k": 192, "dmp_degre": 192, "dmp_degree_in": 192, "dmp_degree_list": 192, "dmp_strip": 192, "dmp_valid": 192, "dup_revers": 192, "dmp_copi": 192, "dmp_to_tupl": 192, "dmp_normal": 192, "dmp_convert": 192, "to_domain": 192, "dmp_from_sympi": 192, "dmp_nth": 192, "dmp_ground_nth": 192, "dmp_zero_p": 192, "dmp_zero": 192, "dmp_one_p": 192, "dmp_one": 192, "dmp_ground_p": 192, "dmp_ground": 192, "dmp_negative_p": 192, "dmp_positive_p": 192, "dmp_from_dict": 192, "dmp_to_dict": 192, "dmp_swap": 192, "dmp_permut": 192, "dmp_nest": 192, "dmp_rais": 192, "dmp_deflat": 192, "dmp_multi_defl": 192, "dmp_inflat": 192, "dmp_exclud": 192, "dmp_includ": 192, "dmp_inject": 192, "dmp_eject": 192, "dmp_terms_gcd": 192, "dmp_list_term": 192, "dmp_apply_pair": 192, "dmp_slice": 192, "dup_random": 192, "densearith": 192, "dmp_add_term": 192, "dmp_sub_term": 192, "dmp_mul_term": 192, "dmp_add_ground": 192, "dmp_sub_ground": 192, "dmp_mul_ground": 192, "dmp_quo_ground": 192, "dmp_exquo_ground": 192, "dup_lshift": 192, "dup_rshift": 192, "dmp_ab": 192, "dmp_neg": 192, "dmp_add": 192, "dmp_sub": 192, "dmp_add_mul": 192, "dmp_sub_mul": 192, "dmp_mul": 192, "dmp_sqr": 192, "dmp_pow": 192, "dmp_pdiv": 192, "dmp_prem": 192, "dmp_pquo": 192, "dmp_pexquo": 192, "dmp_rr_div": 192, "dmp_ff_div": 192, "dmp_div": 192, "dmp_rem": 192, "dmp_quo": 192, "dmp_exquo": 192, "dmp_max_norm": 192, "dmp_l1_norm": 192, "dmp_expand": 192, "densetool": 192, "dmp_integr": 192, "dmp_integrate_in": 192, "dmp_diff": 192, "dmp_diff_in": 192, "dmp_eval": 192, "dmp_eval_in": 192, "dmp_eval_tail": 192, "dmp_diff_eval_in": 192, "dmp_trunc": 192, "dmp_ground_trunc": 192, "dup_mon": 192, "dmp_ground_mon": 192, "dup_cont": 192, "dmp_ground_cont": 192, "dup_primit": 192, "dmp_ground_primit": 192, "dup_extract": 192, "dmp_ground_extract": 192, "dup_real_imag": 192, "bivari": [192, 198, 219], "dup_mirror": 192, "dup_scal": 192, "dup_shift": 192, "dup_transform": 192, "dmp_compos": 192, "dup_decompos": 192, "t_m": 192, "r695": 192, "dmp_lift": 192, "dup_sign_vari": 192, "dmp_clear_denom": 192, "k_0": 192, "dmp_revert": 192, "gf_": 192, "justifi": 192, "necess": 192, "u_0": 192, "m_0": [192, 212], "m_n": 192, "gf_crt1": 192, "9215": 192, "9405": 192, "9603": 192, "gf_crt2": 192, "gf_int": 192, "gf_degre": 192, "gf_lc": 192, "gf_tc": 192, "gf_strip": 192, "gf_trunc": 192, "gf_normal": 192, "gf_from_dict": 192, "gf_to_dict": 192, "gf_from_int_poli": 192, "gf_to_int_poli": 192, "gf_neg": 192, "gf_add_ground": 192, "gf_sub_ground": 192, "gf_mul_ground": 192, "gf_quo_ground": 192, "gf_add": 192, "gf_sub": 192, "gf_mul": 192, "gf_sqr": 192, "gf_add_mul": 192, "gf_sub_mul": 192, "gf_expand": 192, "gf_div": 192, "r696": 192, "monagan93": [192, 193], "r697": 192, "gathen99": [192, 193], "gf_rem": 192, "gf_quo": 192, "gf_exquo": 192, "gf_lshift": 192, "gf_rshift": 192, "gf_pow": 192, "gf_pow_mod": 192, "r698": 192, "gf_gcd": 192, "gf_lcm": 192, "gf_cofactor": 192, "gf_gcdex": 192, "eea": 192, "r699": 192, "gf_monic": 192, "gf_diff": 192, "gf_eval": 192, "gf_multi_ev": 192, "gf_compos": 192, "gf_compose_mod": 192, "gf_trace_map": 192, "r700": 192, "gathen92": [192, 193], "gf_random": 192, "gf_irreduc": 192, "gf_irreducible_p": 192, "gf_sqf_p": 192, "gf_sqf_part": 192, "gf_sqf_list": 192, "e_2": [192, 195], "f_j": [192, 209], "gf_sqf": 192, "r701": 192, "geddes92": [192, 193], "gf_qmatrix": 192, "berlekamp": 192, "gf_qbasi": 192, "gf_berlekamp": 192, "gf_zassenhau": 192, "gf_shoup": 192, "gf_factor_sqf": 192, "gf_factor": 192, "e_d": 192, "cantor": 192, "zassenhau": [192, 194], "shoup": [192, 193], "kaltofen": [192, 193], "gathen": [192, 193], "gf_factor_method": 192, "r702": 192, "gf_valu": 192, "2204": 192, "gf_csolv": 192, "congruent": [192, 209, 212], "189": 192, "112": [192, 196], "139": 192, "r703": 192, "ivan": 192, "niven": 192, "zuckerman": 192, "montgomeri": 192, "infeas": [192, 195], "sdm_": 192, "distributedmodul": 192, "sdm_monomial_mul": 192, "sdm_monomial_deg": 192, "f_5": 192, "sdm_monomial_divid": 192, "sdm_lc": 192, "sdm_to_dict": 192, "sdm_from_dict": 192, "dic": 192, "sdm_add": 192, "2f_1": 192, "3f_1": 192, "yf_1": 192, "xf_1": 192, "sdm_lm": 192, "sdm_lt": 192, "sdm_mul_term": 192, "2xy": [192, 269], "4y": [192, 218, 264], "8xy": 192, "2y": [192, 212, 215, 218, 269], "sdm_zero": 192, "sdm_deg": 192, "sdm_from_vector": 192, "sdm_to_vector": 192, "variant": [192, 215, 218], "qg": 192, "remark": [192, 198, 209, 215], "uf": 192, "vg": 192, "zout": 192, "euclidtool": 192, "dmp_half_gcdex": 192, "dmp_gcdex": 192, "dmp_invert": 192, "dmp_euclidean_pr": 192, "dmp_primitive_pr": 192, "exceedingli": 192, "collin": [192, 193], "collins67": [192, 193], "subdomain": 192, "2l": 192, "remainin": 192, "subdetermin": 192, "n_2": [192, 219], "n_": [192, 212], "abnorm": 192, "gamma_i": 192, "brown": [192, 193, 219], "traub": [192, 193], "browntraub71": [192, 193], "brown78": [192, 193], "discoveri": [192, 271], "dmp_inner_subresult": 192, "729": 192, "sre": 192, "dmp_subresult": 192, "dmp_prs_result": 192, "dmp_zz_modular_result": 192, "dmp_zz_collins_result": 192, "dmp_qq_collins_result": 192, "dmp_result": 192, "dmp_discrimin": 192, "dmp_rr_prs_gcd": 192, "cff": [192, 195], "cfg": [192, 195], "dmp_ff_prs_gcd": 192, "dmp_zz_heu_gcd": 192, "r704": 192, "liao95": [192, 193], "dmp_qq_heu_gcd": 192, "dmp_inner_gcd": 192, "dmp_gcd": 192, "dmp_lcm": 192, "dmp_content": 192, "dmp_primit": 192, "dmp_cancel": 192, "dmp_trial_divis": 192, "dmp_zz_mignotte_bound": 192, "dup_zz_hensel_step": 192, "hensel": 192, "r705": 192, "dup_zz_hensel_lift": 192, "f_list": 192, "multifactor": 192, "r706": 192, "dup_zz_zassenhau": 192, "dup_zz_irreducible_p": 192, "eisenstein": 192, "dup_cyclotomic_p": 192, "bradford": 192, "russel": 192, "251": 192, "berlin": 192, "heidelberg": 192, "dup_zz_cyclotomic_poli": 192, "dup_zz_cyclotomic_factor": 192, "r707": 192, "weisstein09": [192, 193], "dup_zz_factor_sqf": 192, "dup_zz_factor": 192, "r708": 192, "dmp_zz_wang_non_divisor": 192, "wang": [192, 193], "eez": 192, "dmp_zz_wang_test_point": 192, "dmp_zz_wang_lead_coeff": 192, "dmp_zz_diophantin": 192, "dmp_zz_wang_hensel_lift": 192, "dmp_zz_wang": 192, "enhanc": [192, 219], "r709": 192, "wang78": [192, 193], "r710": 192, "dmp_zz_factor": 192, "r711": 192, "dmp_ext_factor": 192, "dup_gf_factor": 192, "dmp_factor_list": 192, "dmp_factor_list_includ": 192, "dmp_irreducible_p": 192, "groebnertool": 192, "polyconfig": [192, 195], "f5b": [192, 195], "spoli": 192, "red_groebn": 192, "beckerweispfenning93": 192, "is_groebn": 192, "is_minim": 192, "is_reduc": 192, "fglmtool": 192, "matrix_fglm": 192, "o_to": 192, "o_from": 192, "r712": 192, "fauger": [192, 195], "gianni": [192, 195, 217], "mora": [192, 193, 195, 217], "sdm_spoli": 192, "phantom": 192, "sca": 192, "defn": 192, "sdm_ecart": 192, "ecart": 192, "sdm_nf_mora": 192, "nf": 192, "sdm_groebner": 192, "sugar": [192, 193, 224], "giovini": [192, 193], "polyopt": [192, 196], "build_opt": 192, "polyerror": [192, 195], "basepolynomialerror": 192, "operationnotsupport": 192, "heuristicgcdfail": 192, "homomorphismfail": 192, "isomorphismfail": [192, 194], "extraneousfactor": 192, "evaluationfail": 192, "refinementfail": 192, "notrevers": [192, 195], "notalgebra": 192, "polynomialerror": [192, 195], "unificationfail": [192, 194], "generatorsneed": 192, "computationfail": 192, "exc": 192, "generatorserror": 192, "univariatepolynomialerror": 192, "multivariatepolynomialerror": [192, 195], "polificationfail": 192, "orig": 192, "optionerror": 192, "flagerror": 192, "modulargcd": 192, "modgcd_univari": 192, "monagan00": [192, 193], "modgcd_bivari": 192, "modgcd_multivari": 192, "_modgcd_multivariate_p": 192, "brown71": [192, 193], "degbound": 192, "contbound": 192, "func_field_modgcd": 192, "reconstuct": 192, "z_p": 192, "spuriou": [192, 217], "hoeij04": [192, 193], "scarc": 192, "hsin": 193, "chao": 193, "liao": 193, "fateman": 193, "montreal": 193, "quebec": 193, "canada": 193, "240": [193, 201, 246], "247": [193, 217], "von": [193, 219], "zur": 193, "gerhard": 193, "cambridg": [193, 212], "weisstein": 193, "cyclotomicpolynomi": 193, "1215": 193, "1231": 193, "czapor": 193, "labahn": 193, "monagan": [193, 211], "disco": 193, "721": 193, "kaltofen98": 193, "subquadrat": 193, "223": 193, "1998": [193, 212], "1179": 193, "1197": 193, "shoup95": 193, "397": 193, "shoup91": 193, "cox97": [193, 195], "shea": [193, 195], "ajwa95": 193, "ajwa": 193, "liu": 193, "cites": [193, 211], "ist": [193, 208, 211], "psu": [193, 208, 211], "mycites": 193, "login": 193, "bose03": 193, "bose": 193, "guiver": 193, "multidimension": [193, 230, 255], "giovini91": 193, "bronstein93": [193, 195], "salvi": [193, 196], "kiev": 193, "ukrain": 193, "buchberger01": [193, 195], "theorist": 193, "moreno": 193, "diaz": 193, "freir": 193, "eurocast": 193, "februari": 193, "davenport88": 193, "siret": 193, "tournier": 193, "london": [193, 212], "124": [193, 264], "greuel": 193, "pfister": 193, "atiyah": 193, "macdonald": 193, "142": 193, "1971": [193, 215], "505": 193, "237": 193, "249": 193, "wittkopf": 193, "478": 193, "hoeij": 193, "2004": [193, 212], "297": [193, 195], "304": [193, 195], "wang81": 193, "symsac": 193, "hoeij02": 193, "manwright94": [193, 195], "yiu": 193, "kwong": 193, "franci": 193, "wright": 193, "190347": 193, "190413": 193, "koepf98": [193, 195], "koepf": [193, 201, 211], "vieweg": 193, "abramov71": [193, 195], "abramov": [193, 217], "ussr": 193, "330": 193, "man93": [193, 195], "376": 193, "sciencedirect": 193, "pii": 193, "s0747717183710539": 193, "kapur1994": 193, "deepak": 193, "kapur": 193, "tushar": 193, "saxena": 193, "yang": 193, "dixon": 193, "researchg": [193, 219], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 193, "palancz08": 193, "pal\u00e1ncz": 193, "zaletnyik": 193, "jl": [193, 232], "awang": 193, "ew": 193, "grafarend": 193, "geodet": 193, "geodesi": 193, "225607735_dixon_result": 193, "s_solution_of_systems_of_geodetic_polynomial_equ": 193, "bruce97": 193, "bruce": 193, "randal": 193, "donald": [193, 234], "mundi": 193, "artifici": [193, 202], "intellig": [193, 211, 215, 275], "orlando": 193, "www2": 193, "duke": 193, "donaldlab": 193, "symbolicnumericalcomput": 193, "045": 193, "087": 193, "stiller96": 193, "stiller": 193, "1996": [193, 209, 217, 244], "citeseerx": [193, 208], "viewdoc": [193, 208, 211], "590": 193, "2021": 193, "rep1": [193, 208], "cohen93": [193, 194], "henri": 193, "olga": 194, "tausski": 194, "zimmer": 194, "pohst": 194, "articul": 194, "numberfield": 194, "mathfrak": 194, "regul": 194, "alpha_m": 194, "round_two": 194, "prime_decomp": 194, "prime_valu": 194, "minimal_polynomi": 194, "field_isomorph": 194, "nilrad": 194, "z_k": 194, "zk": 194, "ordinarili": 194, "503": 194, "r713": 194, "r714": 194, "powerbasisel": 194, "ramif": 194, "as_submodul": 194, "bundl": 194, "test_factor": 194, "deliber": 194, "is_inert": 194, "inert": [194, 215], "reduce_anp": 194, "elt": 194, "reduce_alg_num": 194, "field_gen": 194, "just_gen": 194, "reagent": 194, "kummer": 194, "1847": 194, "ueber": 194, "zerlegung": 194, "crell": 194, "r715": 194, "_minpoly_compos": 194, "stall": 194, "alli": 194, "monomorph": 194, "alpha_i": 194, "alpha_n": 194, "lincomb": 194, "primtiiv": 194, "meanwhil": 194, "moduleel": 194, "powerbasi": 194, "submodule_from_matrix": 194, "ancestor": 194, "to_col": 194, "nca": 194, "_mult_tab": 194, "successfulli": 194, "moduleendomorph": 194, "innerendomorph": 194, "endomorphismr": 194, "spec": [194, 195], "i_n": [194, 195, 220], "include_self": 194, "basis_el": 194, "element_from_r": 194, "endomorphism_r": 194, "is_compat_col": 194, "mult_tab": 194, "mult": 194, "closurefailur": 194, "nearest_common_ancestor": 194, "number_field": 194, "power_basis_ancestor": 194, "incom": 194, "halv": 194, "submodule_from_gen": 194, "over_power_basi": 194, "starts_with_un": 194, "hnf_modulu": 194, "whole_submodul": 194, "element_from_anp": 194, "element_from_alg_num": 194, "element_from_poli": 194, "qq_matrix": 194, "basis_element_pullback": 194, "discard_befor": 194, "structureerror": 194, "cohen00": 194, "make_mod_elt": 194, "qq_col": 194, "from_int_list": 194, "is_compat": 194, "reduced_mod_p": 194, "to_ancestor": 194, "anc": 194, "to_par": 194, "to_anp": 194, "inner_endomorph": 194, "event": [194, 219], "find_min_poli": 194, "missingunityerror": 194, "is_int": 194, "get_num_denom": 194, "extract_fundamental_discrimin": 194, "r716": 194, "algintpow": 194, "zeta_pow": 194, "r717": 194, "coeff_search": 194, "supplement_a_subspac": 194, "dmrankerror": 194, "v_n": 194, "w_r": 194, "w_j": 194, "u_j": 194, "r718": 194, "poly_from_expr": 195, "parallel_poly_from_expr": 195, "lt": [195, 240], "mod_invers": 195, "exprtool": [195, 255], "gcd_term": 195, "gcd_list": 195, "lcm_list": 195, "destruct": 195, "2079": 195, "1401": 195, "2715": 195, "6720": 195, "1092": 195, "gff": 195, "check_sqf": 195, "count_root": 195, "nroot": [195, 217], "maxstep": 195, "cleanup": 195, "73205080756888": 195, "73205080756887729352744634151": 195, "ground_root": 195, "nth_power_roots_poli": 195, "r_f": 195, "r_g": 195, "_signsimp": 195, "q_n": 195, "is_zero_dimension": [195, 218], "donal": 195, "230": [195, 217], "ec": 195, "em": 195, "di": 195, "dispersionset": 195, "gp": [195, 215], "free_symbols_in_domain": 195, "from_poli": 195, "get_domain": 195, "get_modulu": 195, "has_only_gen": 195, "vincent": [195, 237], "akrita": 195, "strzebonski": 195, "va": 195, "alkiviadi": 195, "adam": 195, "panagioti": 195, "vigkla": 195, "265": 195, "279": 195, "polnomi": 195, "is_multivari": 195, "is_univari": 195, "ltrim": 195, "rerun": [195, 230], "_only_": 195, "sturmian": 195, "subresultants_qq_zz": 195, "suffix": [195, 232], "_pg": 195, "_amv": 195, "rem_z": 195, "premultipli": 195, "rat_clear_denom": 195, "_ignor": 195, "retract": 195, "same_root": 195, "r0": 195, "set_domain": 195, "set_modulu": 195, "termwis": 195, "fglm": 195, "r719": 195, "horner_schem": 195, "equispac": 195, "viet": 195, "itermonomi": 195, "min_degre": 195, "gib": 195, "monomial_kei": 195, "monomial_count": 195, "gradedlexord": 195, "reversedgradedlexord": 195, "clear_cach": 195, "_get_interv": 195, "165": [195, 219, 237], "169": 195, "eval_approx": 195, "evalf_r": 195, "eval_r": 195, "69629": 195, "71318": 195, "805": 195, "3275": 195, "65536": [195, 198, 199], "414645": 195, "131072": 195, "6545": 195, "104755": 195, "2097152": 195, "6634255": 195, "_all_root": 195, "use_cach": 195, "_complexes_index": 195, "_complexes_sort": 195, "_count_root": 195, "_ensure_complexes_init": 195, "_ensure_reals_init": 195, "_eval_is_imaginari": 195, "_get_complex": 195, "_get_complexes_sqf": 195, "currentfactor": 195, "_get_real": 195, "_get_reals_sqf": 195, "_get_root": 195, "_indexed_root": 195, "_new": 195, "_postprocess_root": 195, "_preprocess_root": 195, "heroic": [195, 217], "_real_root": 195, "_reals_index": 195, "_reals_sort": 195, "_refine_complex": 195, "_roots_trivi": 195, "_set_interv": 195, "861136": 195, "86113631159405258": 195, "polyroot": 195, "quintic": [195, 217], "unread": [195, 235], "casu": 195, "irreducibili": 195, "unsolvablefactorerror": [195, 217], "inexpress": 195, "unsolv": [195, 218], "r720": 195, "cubic_funct": 195, "trigonometric_": 195, "28and_hyperbol": 195, "29_method": 195, "specialpoli": 195, "swinnerton_dyer_poli": 195, "swinnerton": 195, "dyer": 195, "symmetric_poli": 195, "random_poli": 195, "gegenbau": [195, 199], "partfrac": [195, 201], "undertermin": 195, "_w": [195, 206], "apart_list": 195, "assemble_partfrac_list": 195, "bunch": 195, "pfd": 195, "r721": 195, "partial_list": 195, "reassembl": 195, "pfda": 195, "r722": 195, "r723": 195, "r724": 195, "r725": 195, "r726": 195, "r727": 195, "r728": 195, "r729": 195, "widen": 196, "ring_seri": 196, "rs_sin": 196, "166666666666667": 196, "puiseux": 196, "rs_co": 196, "rs_tan": 196, "took": [196, 208], "eleg": [196, 198], "rs_exp": 196, "everyon": 196, "blazingli": 196, "promin": 196, "gradual": 196, "rs_": 196, "rs_log": 196, "rs_lambertw": 196, "rs_atan": 196, "arctang": 196, "rs_asin": 196, "_tan1": 196, "rs_cot": 196, "rs_cos_sin": 196, "rs_atanh": 196, "rs_sinh": 196, "rs_cosh": 196, "rs_tanh": 196, "rs_hadamard_exp": 196, "inver": 196, "rs_mul": 196, "rs_squar": 196, "rs_pow": 196, "rs_series_invers": 196, "rs_series_revers": 196, "a_kx_k": 196, "ar_i": 196, "ar_": 196, "ae": 196, "rs_trunc": 196, "rs_nth_root": 196, "160249952256379": 196, "44224957030741": 196, "rs_sub": 196, "rs_diff": 196, "rs_integr": 196, "rs_newton": 196, "rs_compose_add": 196, "r730": 196, "bostan": 196, "flajolet": 196, "schost": 196, "4579": 196, "institut": 196, "nation": 196, "recherch": 196, "informatiqu": 196, "automatiqu": 196, "rs_is_puiseux": 196, "rs_puiseux": 196, "rs_puiseux2": 196, "rs_series_from_list": 196, "concur": 196, "rs_fun": 196, "_tan": 196, "_nth": 196, "_root": 196, "_fun": 196, "mul_xin": 196, "pow_xin": 196, "_raw": 197, "unkown": 197, "eqs_r": 197, "eqs_coeff": 197, "eqs_rh": 197, "critiqu": 198, "wester1999": 198, "systemat": 198, "153": 198, "\u2124": [198, 199, 218, 276], "unm": 198, "driver": [199, 231], "adequ": 199, "emptyprint": 199, "_sympystr": 199, "mathml": 199, "inconveni": 199, "_print_": 199, "expr_class": 199, "hierarchi": [199, 219], "_print_rat": 199, "_print_numb": 199, "_print_atom": 199, "_print_bas": 199, "print_latex": 199, "mylatexprint": 199, "_print_deriv": 199, "print_my_latex": 199, "modop": 199, "subcompon": 199, "outermost": [199, 207, 211, 223], "modopmodewrong": 199, "modopnestedwrong": 199, "modopsettingswrong": 199, "subobject": 199, "infrastructur": [199, 216], "printer_exampl": 199, "set_global_set": 199, "stringpict": 199, "pretty_symbologi": 199, "prettyform": 199, "hline": 199, "vline": 199, "ascii": [199, 261], "_pretti": 199, "use_unicode_sqrt_char": 199, "root_not": 199, "mat_symbol_styl": 199, "prettifi": 199, "unambigu": [199, 215, 240], "bold": 199, "c89codeprint": 199, "print_ccod": 199, "tgamma": 199, "known_functions_c89": 199, "known_functions_c99": 199, "fmax": 199, "fmin": 199, "lgamma": 199, "indent_cod": 199, "functionclass": [199, 238], "cfunction_format": 199, "derefer": 199, "dereferenc": 199, "symbols_to_declar": 199, "not_supported_funct": 199, "code_text": 199, "m_sqrt2": 199, "math_macro": 199, "m_sqrt2l": 199, "cxx": 199, "cxx98codeprint": 199, "print_rcod": 199, "rcode": 199, "known_funct": 199, "_rcode": 199, "rfunction_str": 199, "rfunction_format": 199, "ifels": 199, "tweak": [199, 217], "type_map": 199, "name_mangl": 199, "mangl": 199, "floor1": 199, "floor2": 199, "print_fcod": 199, "_fcode": 199, "conjg": 199, "32768": 199, "7182818284590452d0": 199, "1415926535897932d0": 199, "718281828459045235360287d0": 199, "141592653589793238462643d0": 199, "869604401089358618834491d0": 199, "mygamma": 199, "allow_unknown_funct": 199, "coshintegr": 199, "cosintegr": 199, "expintegralei": 199, "factorialpow": 199, "heavisidetheta": 199, "sinhintegr": 199, "sinintegr": 199, "arccosh": 199, "arccoth": 199, "arcsinh": 199, "arctanh": 199, "dirichleteta": 199, "gegenbauerc": 199, "hypergeometricpfq": 199, "sphericalbesselj": 199, "logintegr": 199, "lucasl": 199, "riemann_xi": 199, "riemannxi": 199, "stieltjesgamma": 199, "sphericalbess": 199, "mcodeprint": 199, "_mcode": 199, "mcode": 199, "maplecodeprint": 199, "_mapl": 199, "maple_cod": 199, "print_maple_cod": 199, "javascriptcodeprint": 199, "_javascript": 199, "js_function_str": 199, "known_fcns_src1": 199, "known_fcns_src2": 199, "conj": 199, "juliacodeprint": 199, "_julia": 199, "harmless": [199, 271], "cosmet": 199, "pw": 199, "existing_julia_fcn": 199, "coshint": 199, "cosint": 199, "sinhint": 199, "sinint": 199, "bincoeff": 199, "logint": 199, "gammaln": 199, "octavecodeprint": 199, "_octav": 199, "recip": [199, 237], "powf": 199, "signum": 199, "rustcodeprint": 199, "_rust_cod": 199, "7_f64": 199, "_aesara": 199, "tensorvari": 199, "floatx": 199, "squeez": 199, "dim_handl": 199, "gtkmathview": 199, "widget": 199, "print_gtk": 199, "libgtkmathview": 199, "start_view": 199, "_lambdacod": 199, "accepted_latex_funct": 199, "parenthesize_sup": 199, "fold_frac_pow": 199, "fold_func_bracket": 199, "fold_short_frac": 199, "inv_trig_styl": 199, "itex": 199, "ln_notat": 199, "long_frac_ratio": 199, "mat_delim": 199, "mat_str": 199, "mul_symbol": 199, "symbol_nam": 199, "gothic_re_im": 199, "decimal_separ": 199, "diff_oper": 199, "smallmatrix": [199, 269], "amsmath": 199, "fracton": 199, "semicolon": 199, "monospac": 199, "mathtt": 199, "mathml2": 199, "mathmlprinterbas": 199, "mathmlcontentprint": 199, "mathmlpresentationprint": 199, "chapter4": 199, "_mathml_cont": 199, "mathml_tag": 199, "chapter3": 199, "_mathml_present": 199, "utf": 199, "mul_symbol_mathml_numb": 199, "xb7": 199, "print_mathml": [199, 274], "mrow": 199, "mpmathprint": 199, "fully_qualified_modul": 199, "print_python": 199, "textual": 199, "reprprint": 199, "_sympyrepr": 199, "reprifi": 199, "sympy_integ": 199, "displayhook": [199, 230], "pprint_nod": 199, "nb2": 199, "print_nod": 199, "asssumpt": 199, "determinisit": 199, "backtrac": 199, "print_tre": 199, "outputbuff": 199, "dvioption": 199, "outputtexfil": 199, "extra_preambl": 199, "latex_set": 199, "postscript": 199, "tex": 199, "eulervm": 199, "sty": 199, "debian": 199, "ubuntu": 199, "unset": [199, 211], "gimp": 199, "evinc": 199, "kdvi": 199, "xdvi": 199, "xdg": 199, "system_default_view": 199, "gracefulli": [199, 223], "generet": 199, "bytesio": 199, "usepackag": 199, "amsfont": 199, "renewcommand": 199, "popen": 199, "phidd": 199, "bitmap": 199, "split_super_sub": 199, "var_sub1__sup_sub2": 199, "assignmenterror": 199, "bitwiseand": 199, "bitwiseor": 199, "bitwisexor": 199, "precedence_valu": 199, "kroneckerproduct": 199, "negativeinfin": 199, "tensadd": [199, 225], "tensmul": [199, 225], "precedence_funct": 199, "precedence_float": 199, "precedence_fracel": 199, "precedence_integ": 199, "precedence_mul": 199, "precedence_polyel": 199, "precedence_r": 199, "precedence_unevaluatedexpr": 199, "databas": [199, 209], "pretty_use_unicod": 199, "pretty_try_use_unicod": 199, "xstr": 199, "greek_lett": 199, "digit_2txt": 199, "ONE": 199, "seven": 199, "symb_2txt": 199, "parenthesi": [199, 223], "\u2080": 199, "\u2081": 199, "\u2082": 199, "\u2083": 199, "\u2084": 199, "\u2085": 199, "\u2086": 199, "\u2087": 199, "\u2088": 199, "\u2089": 199, "\u2090": 199, "\u1d66": 199, "\u1d6a": 199, "\u2091": 199, "\u1d67": 199, "\u2095": 199, "\u1d62": 199, "\u2096": 199, "\u2097": 199, "\u2098": 199, "\u2099": 199, "\u2092": 199, "\u209a": 199, "\u1d69": 199, "\u1d63": 199, "\u1d68": 199, "\u209b": 199, "\u209c": 199, "\u1d64": 199, "\u1d65": 199, "\u2093": 199, "\u2070": 199, "\u00b9": 199, "\u00b2": 199, "\u00b3": 199, "\u2074": 199, "\u2075": 199, "\u2076": 199, "\u2077": 199, "\u2078": 199, "\u2079": 199, "\u2071": 199, "\u207f": 199, "xobj": 199, "vobj": 199, "hobj": 199, "vf": 199, "\u00bd": 199, "\u2153": 199, "\u00bc": 199, "\u2155": 199, "\u2159": 199, "\u215b": 199, "\u2154": 199, "\u2156": 199, "\u00be": 199, "\u2157": 199, "\u215c": 199, "\u2158": 199, "\u215a": 199, "\u215d": 199, "\u215e": 199, "xsym": 199, "symbologi": 199, "atoms_t": 199, "\u2102": [199, 276], "emptysequ": [199, 205], "exp1": 199, "\u2115": 199, "\u2115\u2080": 199, "\u211d": [199, 276], "symmetricdiffer": [199, 218], "pretty_atom": 199, "atom_nam": 199, "pretty_symbol": 199, "symb_nam": 199, "bold_nam": 199, "stylis": 199, "_print_meijerg": 199, "_print_hyp": 199, "jurjen": 199, "bo": 199, "hate": 199, "spammer": 199, "pietjepuk314": 199, "oc": [199, 249], "oohai": 199, "gedg": 199, "email": 199, "my": [199, 264], "mun": 199, "terminal_str": 199, "baselin": 199, "leftslash": 199, "slash": [199, 230], "paren": 199, "ifascii_nougli": 199, "line_break": 199, "ugli": 199, "terminal_width": 199, "wider": 199, "maxdepth": 199, "labelfunc": 199, "digraph": [199, 237, 274], "rankdir": [199, 274], "_sparse_": 200, "flavor": 200, "________": [200, 219, 237], "x\u2080": 200, "greatli": 200, "numbered_symbol": [200, 211, 215, 237], "postprocessor": [200, 211], "reduced_expr": [200, 211], "formalpowerseri": 201, "coeff_bel": 201, "formalpowerseriescompos": 201, "r731": 201, "comtet": 201, "loui": 201, "reidel": 201, "1974": 201, "720": [201, 215, 237], "formalpowerseriesinvers": 201, "r732": 201, "upto": [201, 206, 215], "formalpowerseriesproduct": 201, "rational_algorithm": 201, "compute_fp": 201, "hyper_algorithm": 201, "omposit": 201, "bell_seq": 201, "finiteformalpowerseri": 201, "rational_independ": 201, "ra": 201, "admiss": [201, 204], "r733": 201, "r734": 201, "simpled": 201, "exp_r": 201, "explik": 201, "hyper_r": 201, "rsolve_hypergeometr": 201, "r735": 201, "r736": 201, "solve_d": 201, "fourierseri": 202, "scalex": 202, "shiftx": 202, "sigma_approxim": 202, "gibb": 202, "bigl": 202, "bigr": 202, "lanczo": 202, "r737": 202, "gibbs_phenomenon": 202, "r738": 202, "sawtooth": 202, "bn": 202, "r739": 202, "limitseq": 204, "difference_delta": 204, "r740": 204, "differencedelta": 204, "limit_seq": [204, 206], "safeguard": 204, "r741": 204, "kauer": 204, "seqper": 205, "seqformula": 205, "seqbas": 205, "coeff_mul": 205, "find_linear_recurr": 205, "gfvar": 205, "seqadd": 205, "seqmul": 205, "_mul": 205, "recursiveseq": 205, "fib": 205, "invok": [206, 230, 231], "workhors": 206, "succ": [206, 219], "asymp": 206, "exposit": 206, "gloss": 206, "wsym": 206, "test_rewrite1": 206, "build_expression_tre": 206, "mrv_leadterm": 206, "e0": 206, "calculate_seri": 206, "limitinf": 206, "leadsimp": 206, "constantli": 206, "subsset": 206, "mrv_max1": 206, "mrv_max3": 206, "expsf": 206, "expsg": 206, "expsboth": 206, "o2": 206, "do_sub": 206, "r742": 206, "7048138294": 206, "7182818285": 206, "6349839002": 206, "6449340668": 206, "shank": 206, "6881721793": 206, "6931396564": 206, "6931471806": 206, "6931471805599453094172321215": 206, "r743": 206, "residue_theorem": 206, "neighborhood": 207, "rim": 207, "affirm": 207, "infimum": 207, "is_clos": 207, "closed": 207, "is_disjoint": 207, "r744": 207, "disjoint_set": 207, "is_open": 207, "is_proper_subset": 207, "is_proper_superset": 207, "left_open": 207, "is_superset": 207, "isdisjoint": 207, "issubset": 207, "issuperset": 207, "fancyset": 207, "lebesgu": 207, "r745": 207, "power_set": 207, "symmetric_differ": 207, "r746": 207, "right_open": 207, "mpi": 207, "r747": 207, "interval_": 207, "as_rel": 207, "is_left_unbound": 207, "is_right_unbound": 207, "r748": 207, "r749": 207, "union_": 207, "28set_theori": 207, "r750": 207, "intersection_": 207, "coin": [207, 219], "r751": 207, "cartesian_product": 207, "is_iter": 207, "r752": 207, "complementset": 207, "r753": 207, "disjoint_union": 207, "r754": 207, "empty_set": 207, "r755": 207, "universal_set": 207, "flambda": 207, "square_iter": 207, "base_set": 207, "cartesiancomplexregion": 207, "polarcomplexregion": 207, "unit_disk": 207, "upper_half_unit_disk": 207, "a_interv": 207, "b_interv": 207, "from_real": 207, "pset": 207, "rset": 207, "thetaset": 207, "upper_half_plan": 207, "normalize_theta_set": 207, "r756": 207, "r757": 207, "axiom_of_power_set": 207, "varnoth": 207, "sin_sol": 207, "r758": 207, "element_": 207, "tr0": 208, "tr1": 208, "tr2": 208, "tr2i": 208, "tr3": 208, "tr4": 208, "tr5": 208, "tr6": 208, "tr7": 208, "tr8": 208, "tr9": 208, "tr10": 208, "tr10i": 208, "tr11": 208, "tr12": 208, "tr12i": 208, "tr13": 208, "trmorri": 208, "tr14": 208, "tr15": 208, "tr16": 208, "tr22": 208, "tr111": 208, "ctr1": 208, "ctr4": 208, "rl1": 208, "rl2": 208, "deem": 208, "932": 208, "016": 208, "serendipit": 208, "dead": 208, "newa": 208, "lucki": 208, "sqt": 208, "_tr56": 208, "un": [208, 209], "r759": 208, "morri": 208, "27s_law": 208, "trpower": 208, "r760": 208, "list_of_trigonometric_ident": 208, "reduction_formula": 208, "ctr2": 208, "ctr3": 208, "r761": 208, "657": 208, "2478": 208, "dimitar": 208, "vlahovski": 208, "technolog": 208, "xiuqin": 208, "zhong": 208, "zhenb": 208, "zeng": 208, "1169": 208, "1177": 208, "sosmath": 208, "trig5": 208, "symplifi": [209, 211], "roach1996": 209, "roach1997": 209, "p_q": 209, "reachabl": [209, 219], "f_q": 209, "undo": [209, 275], "whenc": 209, "game": 209, "twofold": 209, "incongru": 209, "wlog": 209, "alpha_r": 209, "beta_r": 209, "blindli": 209, "messi": 209, "k_u": 209, "l_v": 209, "k_j": 209, "c_w": 209, "r_j": 209, "l_u": 209, "res_": 209, "delta_i": 209, "add_formula": 209, "addb": 209, "sum_0": 209, "test_hyperexpand": 209, "test_formula": 209, "typo": 209, "suboptim": 209, "imath": 209, "b1prime": 209, "vital": [209, 219], "308": 209, "nthroot": 210, "kroneckersimp": 210, "besselsimp": 210, "hypersimilar": 210, "epath": 210, "hongguang": [210, 255], "fu": [210, 211, 255], "unmodifi": 211, "my_measur": 211, "boolian": 211, "max_len": 211, "surd": 211, "strigonometr": 211, "399": 211, "rational_convers": 211, "base10": 211, "6004799503160655": 211, "nfloat": 211, "eq_x": 211, "max_term": 211, "polish": 211, "expand_power_bas": 211, "rcollect": 211, "analyz": [211, 224], "r762": 211, "pearc": 211, "163": 211, "6984": 211, "trigsimp_groebn": 211, "bb1": 211, "be1": 211, "bb2": 211, "be2": 211, "bei": 211, "max_it": 211, "unrad": [211, 217], "r763": 211, "ibm": 211, "fagin": 211, "symb85": 211, "r764": 211, "cybertest": 211, "opt_sub": 211, "as_unevaluated_bas": 211, "hyperegeometr": 211, "epathtool": 211, "ebnf": 211, "za": [211, 219], "xml": 211, "xpath": 211, "hasattr": [211, 233], "diophantu": 212, "mathematician": [212, 218], "citi": 212, "alexandria": 212, "father": 212, "hi": 212, "arithmetica": 212, "a_1x_1": 212, "a_2x_2": 212, "a_nx_n": 212, "bxy": 212, "cy": 212, "dxy": 212, "eyz": 212, "fzx": 212, "pythagorean": 212, "3y": 212, "4ac": 212, "9369318": 212, "920": 212, "5y": 212, "BY": 212, "t4": 212, "t5": 212, "providean": 212, "eqyptian": 212, "thilinaatsympi": 212, "andreescu": 212, "titu": 212, "andrica": 212, "dorin": 212, "cucurezeanu": 212, "ion": 212, "diophantineequ": 212, "alpertron": 212, "20160323033111": 212, "jpr2718": 212, "ax2p": 212, "permute_sign": [212, 237], "signed_permut": [212, 237], "_dict": 212, "r765": 212, "r766": 212, "pell": 212, "lmm": 212, "r767": 212, "393": 212, "13y": 212, "986": 212, "49299": 212, "1570": 212, "robertson": 212, "20160323033128": 212, "r768": 212, "nitaj": 212, "r769": 212, "numbertheori": 212, "r770": 212, "r771": 212, "676": 212, "884": 212, "fxz": 212, "3xy": 212, "r772": 212, "fxy": 212, "gyz": 212, "hxz": 212, "r773": 212, "cremona": 212, "rusin": 212, "2x_": 212, "m4": 212, "general_sum_of_squar": 212, "8m": 212, "r774": 212, "2345": 212, "proofwiki": 212, "integer_as_sum_of_three_squar": 212, "general_sum_of_even_pow": 212, "1729": 212, "stopiter": 212, "r775": 212, "44542": 212, "207": 212, "schorn": 212, "3456": 212, "1294585930293": 212, "2161": 212, "1137796": 212, "r776": 212, "evenli": 212, "var_t": 212, "r777": 212, "ur": 212, "dv": 212, "vr": 212, "r778": 212, "r779": 212, "nigel": 212, "y_0": [212, 215], "4x": [212, 218, 264], "5x": 212, "r780": 212, "r781": 212, "eprint": 212, "nottingham": 212, "uk": 212, "kvxefz87": 212, "r782": 212, "cuhk": 212, "hk": 212, "wkshum": 212, "404": 212, "r783": 212, "mordel": 212, "r784": 212, "r785": 212, "r786": 212, "r787": 212, "legrang": 212, "csusm": 212, "aitken_html": 212, "symbols_seq": 212, "dict_iter": 212, "r788": 212, "r789": 212, "inhomogen": [212, 215, 217], "r790": 212, "thue": 212, "riccati": 213, "pde": [213, 215], "deutil": [213, 215, 216], "linear_eq_to_matrix": [213, 215], "transolv": 213, "solve_rational_inequ": 214, "solve_poly_inequ": 214, "reduce_rational_inequ": 214, "reduce_abs_inequ": 214, "reduce_inequ": 214, "solve_univariate_inequ": [214, 218], "solvifi": [214, 218], "autodetect": [215, 216], "ode_ord": [215, 216, 217], "best_hint": 215, "all_integr": [215, 216], "_integr": [215, 216], "unevaluat": 215, "test_od": 215, "ode_": 215, "hintnam": [215, 216], "classify_sysod": 215, "ode_hintnam": 215, "tough": 215, "nth_linear_homogeneous_constant_coeff_integr": 215, "nth_linear": 215, "indep": 215, "indep_div_dep": 215, "undetermined_coeffici": 215, "_best": 215, "nth_algebraic_integr": 215, "separable_integr": 215, "1st_exact_integr": 215, "1st_linear_integr": 215, "bernoulli_integr": 215, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 215, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 215, "nth_linear_constant_coeff_variation_of_parameters_integr": 215, "solve_for_func": [215, 216], "homogeneouscoeffsubsdepdivindep": 215, "homogeneouscoeffsubsindepdivdep": 215, "varepsilon": 215, "genform": [215, 216], "starrett": 215, "symbolnam": 215, "startnumb": 215, "endnumb": 215, "renumb": 215, "absorpt": 215, "assist": 215, "2nd_hypergeometric_integr": 215, "almost_linear_integr": 215, "linear_coefficients_integr": 215, "separable_reduced_integr": 215, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 215, "liouville_integr": 215, "2nd_nonlinear_autonomous_conserv": 215, "2nd_nonlinear_autonomous_conserved_integr": 215, "newconst": 215, "ode_sol_simpl": 215, "trysolv": 215, "sola": 215, "solb": 215, "listofsolut": 215, "ode_problem": 215, "firstexact": 215, "exact_differential_equ": 215, "tenenbaum": 215, "dover": 215, "1963": 215, "homogeneouscoeffbest": 215, "ode_1st_homogeneous_coeff_best_integr": 215, "homogeneous_differential_equ": 215, "firstlinear": 215, "linear_differential_equ": 215, "first_order_equ": 215, "rationalriccati": 215, "atleast": 215, "riccati_equ": 215, "thieu": 215, "vo": 215, "www3": [215, 244], "risc_5387": 215, "phdthesisthieu": 215, "secondlinearairi": 215, "secondlinearbessel": 215, "math24": 215, "bernoulli_differential_equ": 215, "goldstein": 215, "braun": 215, "maplesoft": 215, "aspx": 215, "odeadvisor": 215, "riccatispeci": 215, "__________________": 215, "eqworld": 215, "ipmnet": 215, "ru": 215, "ode0106": 215, "ode0123": 215, "nthlinearconstantcoeffhomogen": 215, "nth_linear_constant_coeff_homogeneous_integr": 215, "nonhomogeneous_equation_with_constant_coeffici": 215, "nthlinearconstantcoeffundeterminedcoeffici": 215, "method_of_undetermined_coeffici": 215, "221": 215, "nthlinearconstantcoeffvariationofparamet": 215, "cramer": 215, "variation_of_paramet": 215, "planetmath": 215, "variationofparamet": 215, "nthlineareulereqhomogen": 215, "equidimension": 215, "nth_linear_euler_eq_homogeneous_integr": 215, "sollist": 215, "93euler_equ": 215, "bender": 215, "orszag": 215, "scientist": 215, "nthlineareulereqnonhomogeneousvariationofparamet": 215, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 215, "nthalgebra": 215, "nthorderreduc": 215, "caught": 215, "fault": 215, "almostlinear": 215, "first_linear": 215, "joel": 215, "mose": 215, "stormi": 215, "decad": 215, "august": [215, 234], "558": 215, "linearcoeffici": 215, "separablereduc": 215, "liegroup": 215, "secondhypergeometr": 215, "2f1": 215, "1f1": 215, "0f1": 215, "liouvillian": 215, "pfq": 215, "chan": 215, "cheb": 215, "terrab": 215, "ode_1st_power_seri": 215, "travi": [215, 230], "walker": 215, "ode_2nd_power_series_ordinari": 215, "lamar": 215, "seriessolut": 215, "simmon": 215, "176": 215, "ode_2nd_power_series_regular": 215, "lie_heuristic_abaco1_simpl": 215, "duart": 215, "da": 215, "mota": 215, "lie_heuristic_abaco1_product": 215, "roch": 215, "lie_heuristic_bivari": 215, "329": 215, "lie_heuristic_chi": 215, "lie_heuristic_abaco2_similar": 215, "lie_heuristic_function_sum": 215, "lie_heuristic_abaco2_unique_unknown": 215, "lie_heuristic_abaco2_unique_gener": 215, "lie_heuristic_linear": 215, "gy": 215, "bh": 215, "impract": 215, "val_inf": 215, "ybar": 215, "numa": 215, "dena": 215, "numi": 215, "deni": 215, "sol1": 215, "sol2": 215, "part_sol": 215, "haaheim": 215, "gensol": 215, "_linear_2eq_order1_type6": 215, "_linear_2eq_order1_type7": 215, "fgp": 215, "ag": 215, "bg": 215, "linear_ode_to_matrix": 215, "odeordererror": 215, "odenonlinearerror": 215, "eqs_mat": 215, "r791": 215, "matrix_differential_equ": 215, "canonical_od": 215, "canonical_eq": 215, "canonical_system": 215, "linodesolve_typ": 215, "type1": 215, "type2": 215, "type3": 215, "type4": 215, "type5": 215, "type6": 215, "type_of_equ": 215, "a_t": 215, "a_non_commut": 215, "matrix_exp_jordan_form": 215, "expj": 215, "matrix_exp": 215, "defect": 215, "p_invers": 215, "r792": 215, "defective_matrix": 215, "r793": 215, "r794": 215, "jordan_normal_form": 215, "comupt": 215, "r795": 215, "r796": 215, "matrix_exponenti": 215, "follw": 215, "antiderv": 215, "subscheck": 215, "system_info": 215, "sol_vector": 215, "sol_vector_evalu": 215, "_nonlinear_2eq_order1_type1": 215, "_nonlinear_2eq_order1_type2": 215, "_nonlinear_2eq_order1_type3": 215, "autonom": 215, "_nonlinear_2eq_order1_type4": 215, "_nonlinear_2eq_order1_type5": 215, "clairaut": 215, "envelop": 215, "_nonlinear_3eq_order1_type1": 215, "enspac": [215, 218], "sysod": 215, "sode0401": 215, "_nonlinear_3eq_order1_type2": 215, "sode0402": 215, "_nonlinear_3eq_order1_type3": 215, "sode0404": 215, "_nonlinear_3eq_order1_type4": 215, "sode0405": 215, "_nonlinear_3eq_order1_type5": 215, "sode0406": 215, "_handle_integr": 215, "gather": 215, "unhind": 215, "wolphramalpha": 215, "detool": 215, "hint_integr": 215, "alphanumer": 215, "hinder": 215, "matching_hint": 215, "matchdict": 215, "1st_homogeneous_coeff": 215, "your_hint": 215, "xfail": [215, 228, 230], "fun": [216, 268], "uxt": 216, "uxi": 216, "solvefun": 216, "test_pd": 216, "pde_hintnam": 216, "ux": 216, "allhint": 216, "1st_linear_constant_coeff_homogen": 216, "_preprocess": 216, "inabl": 216, "_xi_1": 216, "viktor": 216, "grigoryan": 216, "124a": 216, "substack": 216, "1st_linear_constant_coeff_integr": 216, "du": 216, "inspir": [216, 271], "pde_hint": 216, "checksol": 217, "ect": 217, "dicontinu": 217, "052": 217, "cov": 217, "pval": 217, "xval": 217, "rsolv": 217, "solve_linear": 217, "solve_linear_system": 217, "overdetermin": [217, 218], "msymbol": 217, "degener": [217, 218], "solve_linear_system_lu": 217, "solve_undetermined_coeff": 217, "equ": 217, "obligatori": 217, "19287309935246": 217, "27844411169911": 217, "73908513321516064165531208767387340401341175890076": 217, "steep": 217, "39267e": 217, "1684e": 217, "588469032184": 217, "315": 217, "730061685774": 217, "46792545969349058": 217, "inconclus": 217, "init": 217, "dissimilar": 217, "v_0": 217, "n_m": 217, "v_m": 217, "rsolve_poli": 217, "rsolve_ratio": 217, "r797": 217, "levelt": 217, "290": [217, 246], "296": 217, "r798": 217, "r799": 217, "revis": 217, "r800": 217, "289": 217, "alembertian": 217, "r801": 217, "r802": 217, "polysi": 217, "solve_triangul": 217, "kalkbrenn": 217, "patrizia": 217, "teo": 217, "aaecc": 217, "conditionset": [218, 219, 276], "productset": 218, "imageset": [218, 276], "complexregion": 218, "uncount": 218, "bizarr": 218, "her": 218, "sol_f": 218, "solveset_r": 218, "solveset_complex": 218, "methodologi": [218, 268], "_solve_real_trig": 218, "invert_r": 218, "invert_complex": 218, "_solve_rad": 218, "_solve_ab": 218, "_solve_as_r": 218, "_solve_as_poly_r": 218, "_solve_as_poly_complex": 218, "_solve_as_poli": 218, "gsoc": 218, "2014": [218, 219], "iamit": 218, "2948": 218, "6659": 218, "7523": 218, "sibx0afl3q": 218, "9696": 218, "27s_theorem": 218, "inftyright": 218, "nright": 218, "0right": 218, "domain_check": 218, "3z": 218, "9z": 218, "nonlinearerror": 218, "4z": 218, "cccc": 218, "eq3": 218, "eq4": 218, "391": 218, "_solve_system": 218, "_solve_using_known_valu": 218, "_transolv": 218, "_tsolv": 218, "tsolv": 218, "outright": 218, "tractabl": 218, "interf": 218, "add_typ": 218, "_is_exponenti": 218, "new_eq": 218, "_solve_exponenti": 218, "_is_class": 218, "_solve_class": 218, "_solve_expo": 218, "9x": 218, "solve_expo": 218, "log_b": 218, "_solve_logarithm": 218, "solve_log": 218, "_is_logarithm": 218, "prebuilt": 219, "finiterv": 219, "varianc": 219, "dice": 219, "continuousrv": 219, "continuousdistributionhandmad": 219, "dist": 219, "discreterv": 219, "discretedistributionhandmad": 219, "pmf": 219, "finitedistributionhandmad": 219, "discreteuniform": 219, "randomsymbol": 219, "r803": 219, "discrete_uniform_distribut": 219, "r804": 219, "discreteuniformdistribut": 219, "d6": 219, "diedistribut": 219, "toss": 219, "r805": 219, "bernoulli_distribut": 219, "r806": 219, "bernoullidistribut": 219, "numeb": 219, "unfair": 219, "r807": 219, "coin_flip": 219, "binomialdistribut": 219, "r808": 219, "binomial_distribut": 219, "r809": 219, "betabinomi": 219, "r810": 219, "r811": 219, "betabinomialdistribut": 219, "popul": 219, "marbl": 219, "r812": 219, "hypergeometric_distribut": 219, "r813": 219, "hypergeometricdistribut": 219, "700000000000000": 219, "r814": 219, "rademacher_distribut": 219, "r815": 219, "geometric_distribut": 219, "r816": 219, "geometricdistribut": 219, "r817": 219, "hermite_distribut": 219, "poisson": 219, "r818": 219, "poisson_distribut": 219, "r819": 219, "poissondistribut": 219, "r820": 219, "logarithmic_distribut": 219, "r821": 219, "logarithmicdistribut": 219, "negativebinomi": 219, "r822": 219, "negative_binomial_distribut": 219, "r823": 219, "negativebinomialdistribut": 219, "skellam": 219, "mu1": 219, "mu2": 219, "mu_1": 219, "mu_2": 219, "i_k": 219, "r824": 219, "skellam_distribut": 219, "yulesimon": 219, "yule": 219, "simon": 219, "r825": 219, "93simon_distribut": 219, "8100": 219, "r826": 219, "zeta_distribut": 219, "cdf": 219, "r827": 219, "arcsine_distribut": 219, "benini": 219, "r828": 219, "benini_distribut": 219, "r829": 219, "v8": 219, "beninidistribut": 219, "r830": 219, "beta_distribut": 219, "r831": 219, "betadistribut": 219, "betanoncentr": 219, "noncentr": 219, "r832": 219, "noncentral_beta_distribut": 219, "r833": 219, "noncentralbetadistribut": 219, "betaprim": 219, "r834": 219, "beta_prime_distribut": 219, "r835": 219, "betaprimedistribut": 219, "boundedpareto": 219, "pareto": 219, "r836": 219, "pareto_distribut": 219, "bounded_pareto_distribut": 219, "r837": 219, "cauchy_distribut": 219, "r838": 219, "cauchydistribut": 219, "r839": 219, "chi_distribut": 219, "r840": 219, "chidistribut": 219, "chinoncentr": 219, "r841": 219, "noncentral_chi_distribut": 219, "chisquar": 219, "r842": 219, "chi_squared_distribut": 219, "r843": 219, "squareddistribut": 219, "dagum": 219, "r844": 219, "dagum_distribut": 219, "erlang": 219, "r845": 219, "erlang_distribut": 219, "r846": 219, "erlangdistribut": 219, "exgaussian": 219, "emg": 219, "r847": 219, "exponentially_modified_gaussian_distribut": 219, "quantil": 219, "r848": 219, "exponential_distribut": 219, "r849": 219, "exponentialdistribut": 219, "fdistribut": 219, "______________________________": 219, "r850": 219, "r851": 219, "fisherz": 219, "fisher": 219, "2d_1": 219, "d_1z": 219, "d_1e": 219, "r852": 219, "27s_z": 219, "r853": 219, "fishersz": 219, "frechet": 219, "r854": 219, "a9chet_distribut": 219, "r855": 219, "gamma_distribut": 219, "r856": 219, "gammadistribut": 219, "gammainvers": 219, "r857": 219, "gompertz": 219, "r858": 219, "gompertz_distribut": 219, "gumbel": 219, "dfrac": 219, "r859": 219, "gumbeldistribut": 219, "r860": 219, "gumbel_distribut": 219, "r861": 219, "mathwav": 219, "easyfit": 219, "gumbel_max": 219, "r862": 219, "gumbel_min": 219, "kumaraswami": 219, "r863": 219, "kumaraswamy_distribut": 219, "r864": 219, "laplace_distribut": 219, "r865": 219, "laplacedistribut": 219, "r866": 219, "a9vy_distribut": 219, "r867": 219, "levydistribut": 219, "logist": 219, "r868": 219, "logistic_distribut": 219, "r869": 219, "logisticdistribut": 219, "loglogist": 219, "unimod": 219, "r870": 219, "lognorm": 219, "r871": 219, "r872": 219, "lognormaldistribut": 219, "lomax": 219, "r873": 219, "lomax_distribut": 219, "maxwel": 219, "2a": 219, "r874": 219, "maxwell_distribut": 219, "r875": 219, "maxwelldistribut": 219, "moyal": 219, "r876": 219, "moyaldistribut": 219, "r877": 219, "rice": 219, "dobelman": 219, "textfil": 219, "distributionshandbook": 219, "nakagami": 219, "r878": 219, "nakagami_distribut": 219, "marginal_distribut": 219, "r879": 219, "normal_distribut": 219, "r880": 219, "normaldistributionfunct": 219, "xm": 219, "x_m": 219, "r881": 219, "r882": 219, "paretodistribut": 219, "powerfunct": 219, "paramat": 219, "r883": 219, "power_func": 219, "quadraticu": 219, "r884": 219, "quadratic_distribut": 219, "raisedcosin": 219, "r885": 219, "raised_cosine_distribut": 219, "r886": 219, "rayleigh_distribut": 219, "r887": 219, "rayleighdistribut": 219, "r888": 219, "reciprocal_distribut": 219, "studentt": 219, "r889": 219, "student_t": 219, "r890": 219, "studentst": 219, "shiftedgompertz": 219, "r891": 219, "shifted_gompertz_distribut": 219, "r892": 219, "trapezoidal_distribut": 219, "r893": 219, "triangular_distribut": 219, "r894": 219, "triangulardistribut": 219, "r895": 219, "uniform_distribution_": 219, "28continu": 219, "r896": 219, "uniformdistribut": 219, "uniformsum": 219, "irwin": 219, "r897": 219, "uniform_sum_distribut": 219, "r898": 219, "uniformsumdistribut": 219, "vonmis": 219, "mise": 219, "i_0": 219, "r899": 219, "von_mises_distribut": 219, "r900": 219, "vonmisesdistribut": 219, "wald": 219, "gaussianinvers": 219, "r901": 219, "inverse_gaussian_distribut": 219, "r902": 219, "inversegaussiandistribut": 219, "weibul": 219, "geq0": 219, "r903": 219, "weibull_distribut": 219, "r904": 219, "weibulldistribut": 219, "wignersemicircl": 219, "semicircl": 219, "frac2": 219, "r905": 219, "wigner_semicircle_distribut": 219, "r906": 219, "wignerssemicirclelaw": 219, "jointrv": 219, "_set": 219, "multivariatenorm": 219, "noninvert": 219, "ob": 219, "r907": 219, "multivariate_normal_distribut": 219, "multivariatelaplac": 219, "r908": 219, "multivariate_laplace_distribut": 219, "generalizedmultivariateloggamma": 219, "joint_rv_typ": 219, "gd": 219, "y_3": 219, "gmvlg": 219, "generalizedmultivariateloggammaomega": 219, "r909": 219, "generalized_multivariate_log": 219, "r910": 219, "234137346_on_a_multivariate_log": 219, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 219, "correl": 219, "gmvlgo": 219, "r911": 219, "r912": 219, "r913": 219, "multinomial_distribut": 219, "r914": 219, "multinomialdistribut": 219, "multivariatebeta": 219, "r915": 219, "dirichlet_distribut": 219, "r916": 219, "dirichletdistribut": 219, "multivariateewen": 219, "ewen": 219, "r917": 219, "27s_sampling_formula": 219, "r918": 219, "rutger": 219, "hcrane": 219, "sts529": 219, "multivariatet": 219, "negativemultinomi": 219, "n_c": 219, "r919": 219, "negative_multinomial_distribut": 219, "r920": 219, "normalgamma": 219, "r921": 219, "discretemarkovchain": 219, "state_spac": 219, "trans_prob": 219, "markov": 219, "characteris": 219, "transitionmatrixof": 219, "transition_prob": 219, "sunni": 219, "cloudi": 219, "raini": 219, "randomindexedsymbol": 219, "409": 219, "6963328": 219, "3096": 219, "query_gt": 219, "64705": 219, "r922": 219, "markov_chain": 219, "time_markov_chain": 219, "r923": 219, "dartmouth": 219, "teaching_aid": 219, "books_articl": 219, "probability_book": 219, "chapter11": 219, "canonical_form": 219, "transient": 219, "p_new": 219, "new_matrix": 219, "communication_class": 219, "r924": 219, "onlinelibrari": 219, "wilei": 219, "1002": 219, "9780470316887": 219, "app1": 219, "r925": 219, "columbia": 219, "ww2040": 219, "6711f12": 219, "lect1023big": 219, "is_recurr": 219, "tarjan": [219, 237], "r926": 219, "4701sum07": 219, "4701": 219, "mcii": 219, "r927": 219, "ceca": 219, "clemson": 219, "shierd": 219, "shier": 219, "r928": 219, "ujcont": 219, "uj": 219, "7506": 219, "content1": 219, "r929": 219, "econ": 219, "dtmc": 219, "reccur": 219, "r930": 219, "absorbing_markov_chain": 219, "r931": 219, "brandei": 219, "igusa": 219, "math56as08": 219, "math56a_s08_notes015": 219, "fixed_row_vector": 219, "stationary_distribut": 219, "fundamental_matrix": 219, "r932": 219, "lip": 219, "limiting_distribut": 219, "condition_set": 219, "wm": 219, "r933": 219, "probabilitycours": 219, "11_2_6_stationary_and_limiting_distribut": 219, "r934": 219, "galton": 219, "uchicago": 219, "yibi": 219, "stat317": 219, "lecture4_6up": 219, "continuousmarkovchain": 219, "gen_mat": 219, "generator_matrix": 219, "45279": 219, "58602": 219, "37933": 219, "34211": 219, "7143": 219, "4002723175": 219, "6832579186": 219, "r935": 219, "r936": 219, "biu": 219, "il": 219, "amirgi": 219, "ctmcnote": 219, "bernoulliprocess": 219, "processs": 219, "joint_distribut": 219, "jointdistributionhandmad": 219, "r937": 219, "bernoulli_process": 219, "r938": 219, "mathc": 219, "clarku": 219, "djoyc": 219, "ma217": 219, "given_condit": 219, "poissonprocess": 219, "648": 219, "r939": 219, "11_0_0_intro": 219, "r940": 219, "poisson_point_process": 219, "wiener": 219, "brownian": 219, "scottish": 219, "botanist": 219, "r941": 219, "11_4_0_brownian_motion_wiener_process": 219, "r942": 219, "wiener_process": 219, "gammaprocess": 219, "jump": [219, 275], "472": 219, "r943": 219, "gamma_process": 219, "matrixgamma": 219, "scale_matrix": 219, "r944": 219, "matrix_gamma_distribut": 219, "wishart": 219, "r945": 219, "wishart_distribut": 219, "matrixnorm": 219, "location_matrix": 219, "scale_matrix_1": 219, "scale_matrix_2": 219, "r946": 219, "matrix_normal_distribut": 219, "compound_rv": 219, "compounddistribut": 219, "crv_type": 219, "r947": 219, "compound_probability_distribut": 219, "numsampl": 219, "evaluate_integr": 219, "r948": 219, "entropy_": 219, "information_theori": 219, "r949": 219, "crmarsh": 219, "charles_marsh_continuous_entropi": 219, "r950": 219, "uconn": 219, "kconrad": 219, "blurb": 219, "entropypost": 219, "arg1": 219, "arg2": 219, "cexpr": 219, "coskew": 219, "sigma_": 219, "r951": 219, "r952": 219, "probability_distribut": 219, "randomst": 219, "die_rol": 219, "samp": 219, "pspace": 219, "samp_list": 219, "sam": 219, "42519758": 219, "40207856": 219, "94991743": 219, "85819627": 219, "83403519": 219, "9412172": 219, "85768055": 219, "38954165": 219, "11163337": 219, "3176591": 219, "79115232": 219, "63232916": 219, "01747268": 219, "96716083": 219, "sampling_p": 219, "sampling_": 219, "factorial_mo": 219, "r953": 219, "r954": 219, "factorialmo": 219, "kurtosi": 219, "outlier": 219, "sigma_x": 219, "r955": 219, "r956": 219, "asymmetri": 219, "pearson": 219, "sampling_dens": 219, "centralmo": 219, "cmoment": 219, "expectationmatrix": 219, "randommatrixsymbol": 219, "n11": 219, "n12": 219, "n21": 219, "n22": 219, "variancematrix": 219, "crosscovariancematrix": 219, "randomdomain": 219, "probabilist": 219, "singledomain": 219, "singlepspac": 219, "productdomain": 219, "productpspac": 219, "conditionaldomain": 219, "frv": 219, "finitedomain": 219, "finitepspac": 219, "crv": 219, "continuousdomain": 219, "continuouspspac": 219, "diepspac": 219, "singlefinitepspac": 219, "normalpspac": 219, "singlecontinuouspspac": 219, "frv_type": 219, "randomvari": 219, "tactic": 219, "random_symbol": 219, "rs_swap": 219, "pspace1": 219, "pspace2": 219, "immutabledensendimarrai": 220, "tomatrix": 220, "j_m": 220, "i_a": 220, "i_b": 220, "sum_k": 220, "tensorcontract": [220, 221], "tensordiagon": [220, 221], "derive_by_arrai": 220, "sum_m": 220, "immutablesparsendimarrai": 220, "mutabledensendimarrai": 220, "mutablesparsendimarrai": 220, "index_order_old": 220, "index_order_new": 220, "cab": 220, "contraction_ax": 220, "diagonal_ax": 220, "arraycontract": 221, "arraydiagon": 221, "arraysymbol": 221, "convert_indexed_to_arrai": 221, "arrayadd": 221, "convert_matrix_to_arrai": 221, "convert_array_to_matrix": 221, "expr_tr": 221, "array_der": 221, "index_method": 223, "get_contraction_structur": [223, 224], "deepest": 223, "nested_contract": 223, "get_indic": [223, 224, 225, 226], "indexconformanceexcept": 223, "______": 224, "stem": 224, "dim1": 224, "dim2": 224, "qwerti": 224, "a_ij": 224, "b_ij": 224, "syntact": 224, "a_real": 224, "c_inherit": 224, "c_explicit": 224, "unrol": 224, "tensorindextyp": [225, 226], "eps_dim": 225, "metric_nam": 225, "su": 225, "lorentz": 225, "tensor_index_typ": 225, "is_up": 225, "tensor_inde_typ": 225, "typ": 225, "tensorhead": [225, 226], "index_typ": 225, "tensorsymmetri": 225, "monoterm": 225, "_tensormanag": 225, "set_comm": 225, "asym2": 225, "fully_symmetr": 225, "tensori": [225, 226], "e_z": 225, "no_symmetri": 225, "p_x": 225, "p_y": 225, "p_z": 225, "ipos1": 225, "ipos2": 225, "icomp1": 225, "icomp2": 225, "nameless": 225, "replacement_dict": 225, "free_arg": 225, "addend": 225, "canon_bp": 225, "contract_metr": 225, "contract_al": 225, "ipo": 225, "icomp": 225, "nonrep": 225, "dum": 225, "ext_rank": 225, "is_canon_bp": 225, "m0": 225, "get_free_indic": [225, 226], "perm2tensor": 225, "tid": 225, "sorted_compon": 225, "riemann_cyclic_replac": 225, "riemann_cycl": 225, "cadabra": 225, "multiterm": 225, "bianchi": 225, "sym2": 225, "direct_product": 225, "monotorem": 225, "tableaux": 225, "tensortyp": 225, "repetit": [225, 237], "tensormanag": 225, "comm_i2symbol": 225, "comm_symbols2i": 225, "get_comm": 225, "gcomm": 225, "ghcomm": 225, "toper": 226, "partialderiv": 226, "valenc": 226, "uncontract": 226, "compa": 226, "compb": 226, "derivand": 226, "xpass": [228, 230], "nocache_fail": 228, "expectedexcept": 228, "assertionerror": 228, "exceptioninfo": 228, "abort": 228, "9999": 228, "warningcl": [228, 235], "test_stacklevel": 228, "randtest": 229, "portabl": [230, 231], "pytestreport": 230, "force_color": 230, "readlin": 230, "sympydoctestfind": 230, "doctestpars": 230, "exclude_empti": 230, "sympydoctestrunn": 230, "checker": 230, "optionflag": 230, "5140": 230, "doctestrunn": 230, "clear_glob": 230, "writer": 230, "garbag": 230, "check_output": 230, "report_": 230, "sympyoutputcheck": 230, "outputcheck": 230, "stdlib": 230, "testrunn": 230, "sympytestresult": 230, "convert_to_native_path": 230, "lst": 230, "blacklist": 230, "get_sympy_dir": 230, "raise_on_deprec": 230, "deprecationwarn": [230, 235], "run_all_test": 230, "test_arg": 230, "test_kwarg": 230, "doctest_arg": 230, "doctest_kwarg": 230, "examples_arg": 230, "examples_kwarg": 230, "run_in_subprocess_with_hash_random": 230, "function_kwarg": 230, "virtualenv": 230, "pythonhashse": 230, "_test": 230, "split_list": 230, "sympytestfil": 230, "module_rel": 230, "extraglob": 230, "raise_on_error": 230, "basenam": [230, 231, 232], "slate": 230, "dont_accept_true_for_1": 230, "dont_accept_blanklin": 230, "normalize_whitespac": 230, "ellipsi": 230, "ignore_exception_detail": 230, "report_udiff": 230, "report_cdiff": 230, "report_ndiff": 230, "report_only_first_failur": 230, "mortem": 230, "tomfooleri": 230, "testmod": 230, "tester": 230, "fiddl": [230, 275], "timeout": 230, "keyboardinterrupt": 230, "interrupt": 230, "_basic": 230, "kw": 230, "test_equ": 230, "pdb": 230, "pipe": 230, "time_bal": 230, "tandem": 231, "matvec": 231, "codewrapp": 231, "distutil": 231, "fwrap": 231, "swig": 231, "binary_cal": 231, "22925376": 231, "25165824": 231, "_imp_": [231, 238], "filepath": 231, "cythoncodewrapp": 231, "dump_pyx": 231, "dummywrapp": 231, "f2pycodewrapp": 231, "ufuncifycodewrapp": 231, "dump_c": [231, 232], "funcnam": 231, "code_gen": [231, 232], "argument_tupl": 231, "include_dir": 231, "library_dir": 231, "extra_compile_arg": 231, "extra_link_arg": 231, "symfunc": [231, 238], "funtion_nam": 231, "ndimension": 231, "f_fortran": 231, "f_cython": 231, "r957": 231, "fortran77": 232, "fortran90": 232, "julia": [232, 262], "rust": [232, 262], "mileston": 232, "unsurmount": 232, "pyf": 232, "inputoutput": 232, "tcc": 232, "libtcc": 232, "date": 232, "hostnam": 232, "sha1": 232, "ccodegen": 232, "preprocessor_stat": 232, "dump_h": 232, "guard": 232, "get_prototyp": 232, "codegenerror": 232, "function_prototyp": 232, "dump_cod": 232, "cname": 232, "fname": 232, "pynam": 232, "jlname": 232, "octnam": 232, "rsname": 232, "fcodegen": 232, "f90": 232, "dump_f95": 232, "get_interfac": 232, "juliacodegen": 232, "dump_jl": 232, "octavecodegen": 232, "dump_m": 232, "returnvalu": 232, "destin": 232, "local_var": 232, "result_vari": 232, "ot": 232, "unnam": 232, "rustcodegen": 232, "dump_r": 232, "f_result": 232, "myfcn": 232, "fcn2": 232, "myfcn_result": 232, "void": 232, "get_default_datatyp": 232, "complex_allow": 232, "agnost": 232, "conserve_mpmath_dp": 233, "doctest_depends_on": 233, "disable_view": 233, "python_vers": 233, "memoize_properti": 233, "propfunc": 233, "no_attrs_in_subclass": 233, "__all__": 233, "some_funct": 233, "thread": 233, "xthread": 233, "threaded_factori": 233, "use_add": 233, "multiset_partitions_taocp": 234, "visitor": 234, "pstack": 234, "lpart": 234, "topmost": 234, "partcompon": 234, "peek": [234, 275], "unpredict": 234, "list_visitor": 234, "abb": [234, 237], "factoring_visitor": 234, "multisetpartitiontravers": 234, "aocp": 234, "count_partit": 234, "127750": 234, "686": 234, "4a": 234, "factorisatio": 234, "oppenheim": 234, "numerorum": 234, "canfield": 234, "erdo": 234, "OF": 234, "yorgei": 234, "monad": 234, "persist": 234, "288716": 234, "memoiz": [234, 236, 262], "dramat": 234, "hypothet": 234, "borrow": 234, "coalesc": 234, "_rang": 234, "stretch": 234, "brain": 234, "histogram": 234, "enum_al": 234, "enum_larg": 234, "enum_rang": 234, "enum_smal": 234, "ub": 234, "parti": 235, "catch_warn": 235, "simplefilt": 235, "dedent": [235, 240], "enum": [236, 262], "pkgdata": [236, 262], "kbin": 237, "partion": 237, "bcd": 237, "notiter": 237, "binary_partit": 237, "r958": 237, "taocp": 237, "nx": 237, "common_prefix": 237, "common_suffix": 237, "unhash": 237, "r959": 237, "connected_component_": 237, "graph_theori": 237, "r960": 237, "27s_strongly_connected_components_algorithm": 237, "dict_merg": 237, "filter_symbol": 237, "myop": 237, "kog": 237, "informatik": 237, "hamburg": 237, "mein": 237, "python_trick": 237, "neighbor": 237, "xxxxxx": 237, "xxxx": 237, "r961": 237, "method_ring": 237, "r962": 237, "4856615": 237, "4857018": 237, "r963": 237, "programminggeek": 237, "r964": 237, "steinhau": 237, "93johnson": 237, "93trotter_algorithm": 237, "r965": 237, "involut": 237, "eco": 237, "vajnovszki": 237, "dmtc": 237, "generate_involut": 237, "r966": 237, "permutationinvolut": 237, "generate_oriented_forest": 237, "forest": 237, "acycl": 237, "r967": 237, "beyer": 237, "hedetniemi": 237, "novemb": 237, "r968": 237, "1633833": 237, "has_dup": 237, "has_varieti": 237, "iproduct": 237, "abcbb": 237, "is_sequ": 237, "generatortyp": 237, "_iter": 237, "ordered_flag": 237, "least_rot": 237, "rotate_left": 237, "r969": 237, "lexicographically_minimal_string_rot": 237, "minlex": 237, "acb": 237, "11010011000": 237, "00011010011": 237, "00011001011": 237, "aaa": 237, "abi": 237, "bby": 237, "abracadabra": 237, "banana": 237, "multiset_derang": 237, "uniq": 237, "1233": 237, "3312": 237, "3321": 237, "aba": 237, "baa": 237, "bead": 237, "ooo": 237, "r970": 237, "ordered_partit": 237, "r971": 237, "jeromekelleh": 237, "r972": 237, "jerom": 237, "kelleh": 237, "barri": 237, "sullivan": 237, "0909": 237, "2331v2": 237, "r973": 237, "activest": 237, "218332": 237, "postfix": 237, "random_derang": 237, "reseed": 237, "templat": 237, "rotate_right": 237, "roundrobin": 237, "ef": 237, "credit": [237, 260], "sakki": 237, "keyfunc": 237, "subgraph": 237, "r974": 237, "r975": 237, "longest": 237, "r976": 237, "unflatten": 237, "afunc": 238, "lam_f": 238, "lambdastr": 238, "dummifi": 238, "use_imp": 238, "custom_sin": 238, "38177329": 238, "49315059": 238, "8414709848078965": 238, "eager": 238, "enable_eager_execut": 238, "eagertensor": 238, "__class__": 238, "placehold": 238, "user_guid": 238, "runtimewarn": 238, "sin_cos_sympi": 238, "sin_co": 238, "sin_cos_numpi": 238, "38177329068": 238, "module_dictionari": 238, "_lambdifygener": 238, "__globals__": 238, "lambdaprint": [238, 262], "90929743": [238, 264], "assoc_recurrence_memo": 239, "base_seq": 239, "memo": 239, "pn0": 239, "recurrence_memo": 239, "specfun": 239, "__index__": 240, "sanit": 240, "99999999999999991611392": 240, "debug_decor": 240, "fillded": 240, "strline": 240, "rawlin": 240, "find_execut": 240, "pathsep": 240, "strictlessthan": 240, "pastabl": 240, "bee": 240, "spamham": 240, "sha": 240, "spam": 240, "egg": 240, "md5": 240, "eggsham": 240, "r977": 240, "6116978": 240, "roken": 240, "deletechar": 240, "multicharact": 240, "oldchar": 240, "newchar": 240, "acquir": 241, "getresourc": 241, "pkgname": 241, "pkgpath": 241, "dirnam": 241, "normpath": 241, "rb": 241, "__loader__": 241, "stringio": 241, "get_resourc": 241, "ioerror": 241, "mydata": 241, "mypkgdata": 241, "jpg": 241, "get_class": 242, "lookup_view": 242, "get_mod_func": 242, "callback": 242, "timeutil": 243, "coordsysrect": 244, "rotation_matrix": [244, 245, 248], "vector_nam": 244, "variable_nam": [244, 250], "latex_vect": 244, "pretty_vect": 244, "latex_scalar": 244, "pretty_scalar": 244, "new_system": 244, "create_new": [244, 248], "transformation_to_par": 244, "transformation_from_par": 244, "locate_new": [244, 246, 247, 248, 249, 250], "position_wrt": [244, 247, 248, 249], "orient_new": [244, 245], "axisorient": [244, 248, 251], "axis_orient": [244, 248], "bodyorient": [244, 248, 251], "body_orient": [244, 245, 248], "spaceorient": [244, 248, 251], "space_orient": [244, 245], "quaternionorient": [244, 248, 251], "q_orient": [244, 245], "orient_new_axi": [244, 246, 248], "orient_new_bodi": [244, 248], "angle1": [244, 245], "angle2": [244, 245], "angle3": [244, 245], "euler_angl": [244, 245], "orient_new_quaternion": [244, 248], "orient_new_spac": [244, 248], "coordsyrect": 244, "v_a": 244, "v_b": 244, "scalar_map": 244, "basevector": [244, 247, 248], "delop": [244, 249, 250], "r978": 244, "r979": 244, "basedyad": [244, 247], "second_system": 244, "deloper": [244, 251], "curl": [244, 251, 253], "parabola": 244, "rational_parametr": 244, "singular_point": 244, "regular_point": 244, "reg_point": 244, "implict": 244, "cubic_curv": 244, "calulc": 244, "hoffmann": 244, "purdu": 244, "lib": 244, "cgi": 244, "viewcont": 244, "1827": 244, "cstech": 244, "erik": 244, "hillgart": 244, "diploma": 244, "linz": 244, "universitat": 244, "availa": 244, "risc_1355": 244, "20point": 244, "20on": 244, "20conic": 244, "semispher": [244, 253], "coordsys3d": [245, 246, 247, 249, 250, 251, 253], "axis_orienter1": 245, "axis_orienter2": 245, "axis_orienter3": 245, "body_orienter1": 245, "body_orienter2": 245, "body_orienter3": 245, "system2": 246, "parametricregion": [246, 251, 253], "implicitregion": [246, 251, 253], "essenc": 247, "vectormul": 247, "vectoradd": 247, "ofcours": 247, "vectorzero": 247, "expressli": 247, "express_coordin": [247, 248], "dyadicmul": 247, "dyadicadd": 247, "cleanest": 248, "orient_new_": 248, "attain": 248, "basescalar": [248, 250], "oabc": 249, "oa": 249, "pq": 249, "sr": 249, "wikidel": 249, "ffield": 249, "gradient_field": 250, "instantan": 250, "directional_deriv": 250, "lame": 250, "quadrilater": 251, "flux": 251, "parametricintegr": 251, "matrix_to_vector": 251, "vector_integr": [251, 253], "dyadicproduct": 251, "quantifi": 252, "throughtout": 252, "necesssari": 253, "param_circl": 253, "implicit_circl": 253, "obextj": 253, "solidspher": 253, "lamina": 253, "\ud835\udc45": 253, "cylind": 253, "vectorfield": 253, "hemispher": 253, "top_fac": 253, "bottom_fac": 253, "27_theorem": 253, "cone": 253, "divergence_theorem": 253, "12288": 253, "subcategori": 254, "cnode": 256, "cxxnode": 256, "fnode": 256, "pyutil": 256, "cutil": 256, "futil": 256, "ecm": 259, "copyright": 260, "truss": 260, "pappu": 261, "hexagon": 261, "prettyprint": 262, "rcodeprint": 262, "javascript": [262, 274], "gtk": 262, "mathmlprint": 262, "pythoncodeprint": 262, "pythonprint": 262, "dotprint": [262, 270, 274], "str_expr": 264, "82842712474619": 264, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 264, "0874989834394464": 264, "roundoff": 264, "14112001": 264, "7568025": 264, "95892427": 264, "2794155": 264, "6569866": 264, "98935825": 264, "41211849": 264, "0998334166468": 264, "sympy_nam": 264, "numerical_funct": 264, "rephras": 265, "oh": 265, "integration_vari": 265, "dfdx": 265, "equidistantli": 265, "d2fdx2": 265, "django": 267, "oop": 267, "crazi": 267, "abcdef": 267, "reevalu": 267, "infal": 267, "insight": 268, "entertain": 268, "preliminari": 268, "82842712475": 269, "cass": 269, "wrote": [269, 270], "theme": 269, "expanded_expr": 269, "whet": 269, "appetit": 269, "c\u2082": [269, 276], "c\u2081": [269, 276], "\u03bd": 269, "sell": 269, "battl": 269, "confid": 269, "gigabyt": 269, "tear": 270, "stopper": 270, "uexpr": 270, "unevalutedexpr": 270, "downsid": 271, "algebraic_multipl": 271, "pdp": 271, "undertest": 271, "underevalu": 271, "my_iszero": 271, "stronger": 271, "tradeoff": 271, "wonder": 271, "5b7c3e8ee5b40332abdb206c": 271, "15141": 271, "19548": 271, "10120": 271, "10279": 271, "constant_problem": 271, "possiblezeroq": 271, "mupad_ref": 271, "iszero": 271, "congratul": 272, "decent": 273, "austin": 273, "video": 273, "bvar": 274, "unnecessarili": 275, "whittl": 275, "catchal": 275, "sound": 275, "collected_expr": 275, "cdot1": 275, "undertak": 275, "undon": 275, "cdot2": 275, "nck": 275, "pronounc": 275, "_2f_1": 275, "cfrac": 275, "list_to_frac": 275, "a\u2080": 275, "a\u2083": 275, "a\u2084": 275, "pointless": 275, "orig_frac": 275, "diffeq": 276}, "objects": {"": [[23, 0, 0, "-", "sympy"]], "sympy": [[25, 0, 0, "-", "abc"], [26, 0, 0, "-", "algebras"], [29, 0, 0, "-", "assumptions"], [32, 0, 0, "-", "calculus"], [33, 0, 0, "-", "categories"], [54, 0, 0, "-", "diffgeom"], [55, 0, 0, "-", "discrete"], [59, 0, 0, "-", "functions"], [72, 0, 0, "-", "holonomic"], [79, 0, 0, "-", "integrals"], [80, 0, 0, "-", "interactive"], [81, 0, 0, "-", "liealgebras"], [82, 0, 0, "-", "logic"], [87, 0, 0, "-", "matrices"], [94, 0, 0, "-", "parsing"], [260, 0, 0, "-", "physics"], [195, 0, 0, "-", "polys"], [217, 0, 0, "-", "solvers"], [219, 0, 0, "-", "stats"], [222, 0, 0, "-", "tensor"], [227, 0, 0, "-", "testing"], [236, 0, 0, "-", "utilities"], [251, 0, 0, "-", "vector"]], "sympy.algebras": [[26, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[26, 2, 1, "", "add"], [26, 2, 1, "", "angle"], [26, 2, 1, "", "arc_coplanar"], [26, 2, 1, "", "axis"], [26, 2, 1, "", "exp"], [26, 2, 1, "", "from_axis_angle"], [26, 2, 1, "", "from_rotation_matrix"], [26, 2, 1, "", "index_vector"], [26, 2, 1, "", "integrate"], [26, 2, 1, "", "inverse"], [26, 2, 1, "", "is_pure"], [26, 2, 1, "", "is_zero_quaternion"], [26, 2, 1, "", "mensor"], [26, 2, 1, "", "mul"], [26, 2, 1, "", "norm"], [26, 2, 1, "", "normalize"], [26, 2, 1, "", "orthogonal"], [26, 2, 1, "", "parallel"], [26, 2, 1, "", "pow"], [26, 2, 1, "", "pow_cos_sin"], [26, 2, 1, "", "rotate_point"], [26, 2, 1, "", "scalar_part"], [26, 2, 1, "", "to_axis_angle"], [26, 2, 1, "", "to_rotation_matrix"], [26, 2, 1, "", "vector_coplanar"], [26, 2, 1, "", "vector_part"]], "sympy.assumptions": [[27, 0, 0, "-", "ask"], [28, 0, 0, "-", "assume"], [30, 0, 0, "-", "predicates"], [31, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[27, 1, 1, "", "AssumptionKeys"], [27, 3, 1, "", "ask"], [27, 3, 1, "", "register_handler"], [27, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[28, 1, 1, "", "AppliedPredicate"], [28, 1, 1, "", "AssumptionsContext"], [28, 1, 1, "", "Predicate"], [28, 1, 1, "", "UndefinedPredicate"], [28, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[28, 4, 1, "", "arg"], [28, 4, 1, "", "arguments"], [28, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[28, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[28, 2, 1, "", "eval"], [28, 5, 1, "", "handler"], [28, 2, 1, "", "register"], [28, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[30, 1, 1, "", "FinitePredicate"], [30, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[30, 1, 1, "", "CommutativePredicate"], [30, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[30, 1, 1, "", "ComplexElementsPredicate"], [30, 1, 1, "", "DiagonalPredicate"], [30, 1, 1, "", "FullRankPredicate"], [30, 1, 1, "", "IntegerElementsPredicate"], [30, 1, 1, "", "InvertiblePredicate"], [30, 1, 1, "", "LowerTriangularPredicate"], [30, 1, 1, "", "NormalPredicate"], [30, 1, 1, "", "OrthogonalPredicate"], [30, 1, 1, "", "PositiveDefinitePredicate"], [30, 1, 1, "", "RealElementsPredicate"], [30, 1, 1, "", "SingularPredicate"], [30, 1, 1, "", "SquarePredicate"], [30, 1, 1, "", "SymmetricPredicate"], [30, 1, 1, "", "TriangularPredicate"], [30, 1, 1, "", "UnitTriangularPredicate"], [30, 1, 1, "", "UnitaryPredicate"], [30, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[30, 1, 1, "", "CompositePredicate"], [30, 1, 1, "", "EvenPredicate"], [30, 1, 1, "", "OddPredicate"], [30, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[30, 1, 1, "", "NegativePredicate"], [30, 1, 1, "", "NonNegativePredicate"], [30, 1, 1, "", "NonPositivePredicate"], [30, 1, 1, "", "NonZeroPredicate"], [30, 1, 1, "", "PositivePredicate"], [30, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[30, 1, 1, "", "AlgebraicPredicate"], [30, 1, 1, "", "AntihermitianPredicate"], [30, 1, 1, "", "ComplexPredicate"], [30, 1, 1, "", "ExtendedRealPredicate"], [30, 1, 1, "", "HermitianPredicate"], [30, 1, 1, "", "ImaginaryPredicate"], [30, 1, 1, "", "IntegerPredicate"], [30, 1, 1, "", "IrrationalPredicate"], [30, 1, 1, "", "RationalPredicate"], [30, 1, 1, "", "RealPredicate"], [30, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[30, 5, 1, "", "AlgebraicHandler"], [30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[30, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[31, 3, 1, "", "refine"], [31, 3, 1, "", "refine_Pow"], [31, 3, 1, "", "refine_abs"], [31, 3, 1, "", "refine_arg"], [31, 3, 1, "", "refine_atan2"], [31, 3, 1, "", "refine_im"], [31, 3, 1, "", "refine_matrixelement"], [31, 3, 1, "", "refine_re"], [31, 3, 1, "", "refine_sign"]], "sympy.calculus": [[32, 0, 0, "-", "euler"], [32, 0, 0, "-", "finite_diff"], [32, 0, 0, "-", "singularities"], [32, 0, 0, "-", "util"]], "sympy.calculus.euler": [[32, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[32, 3, 1, "", "apply_finite_diff"], [32, 3, 1, "", "differentiate_finite"], [32, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[32, 3, 1, "", "is_decreasing"], [32, 3, 1, "", "is_increasing"], [32, 3, 1, "", "is_monotonic"], [32, 3, 1, "", "is_strictly_decreasing"], [32, 3, 1, "", "is_strictly_increasing"], [32, 3, 1, "", "monotonicity_helper"], [32, 3, 1, "", "singularities"]], "sympy.calculus.util": [[32, 3, 1, "", "continuous_domain"], [32, 3, 1, "", "function_range"], [32, 3, 1, "", "is_convex"], [32, 3, 1, "", "lcim"], [32, 3, 1, "", "maximum"], [32, 3, 1, "", "minimum"], [32, 3, 1, "", "not_empty_in"], [32, 3, 1, "", "periodicity"], [32, 3, 1, "", "stationary_points"]], "sympy.categories": [[33, 1, 1, "", "Category"], [33, 1, 1, "", "CompositeMorphism"], [33, 1, 1, "", "Diagram"], [33, 1, 1, "", "IdentityMorphism"], [33, 1, 1, "", "Morphism"], [33, 1, 1, "", "NamedMorphism"], [33, 1, 1, "", "Object"], [33, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[33, 4, 1, "", "commutative_diagrams"], [33, 4, 1, "", "name"], [33, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[33, 4, 1, "", "codomain"], [33, 4, 1, "", "components"], [33, 4, 1, "", "domain"], [33, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[33, 4, 1, "", "conclusions"], [33, 2, 1, "", "hom"], [33, 2, 1, "", "is_subdiagram"], [33, 4, 1, "", "objects"], [33, 4, 1, "", "premises"], [33, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[33, 4, 1, "", "codomain"], [33, 2, 1, "", "compose"], [33, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[33, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[33, 1, 1, "", "ArrowStringDescription"], [33, 1, 1, "", "DiagramGrid"], [33, 1, 1, "", "XypicDiagramDrawer"], [33, 3, 1, "", "preview_diagram"], [33, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[33, 4, 1, "", "height"], [33, 4, 1, "", "morphisms"], [33, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[33, 2, 1, "", "draw"]], "sympy.codegen": [[34, 0, 0, "-", "algorithms"], [34, 0, 0, "-", "approximations"], [34, 0, 0, "-", "ast"], [34, 0, 0, "-", "cfunctions"], [34, 0, 0, "-", "cnodes"], [34, 0, 0, "-", "cutils"], [34, 0, 0, "-", "cxxnodes"], [34, 0, 0, "-", "fnodes"], [34, 0, 0, "-", "futils"], [34, 0, 0, "-", "matrix_nodes"], [34, 0, 0, "-", "pyutils"], [34, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[34, 3, 1, "", "newtons_method"], [34, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[34, 1, 1, "", "SeriesApprox"], [34, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[34, 1, 1, "", "Assignment"], [34, 1, 1, "", "AssignmentBase"], [34, 1, 1, "", "Attribute"], [34, 1, 1, "", "AugmentedAssignment"], [34, 1, 1, "", "BreakToken"], [34, 1, 1, "", "CodeBlock"], [34, 1, 1, "", "Comment"], [34, 1, 1, "", "ComplexType"], [34, 1, 1, "", "ContinueToken"], [34, 1, 1, "", "Declaration"], [34, 1, 1, "", "Element"], [34, 1, 1, "", "FloatBaseType"], [34, 1, 1, "", "FloatType"], [34, 1, 1, "", "For"], [34, 1, 1, "", "FunctionCall"], [34, 1, 1, "", "FunctionDefinition"], [34, 1, 1, "", "FunctionPrototype"], [34, 1, 1, "", "IntBaseType"], [34, 1, 1, "", "Node"], [34, 1, 1, "", "NoneToken"], [34, 1, 1, "", "Pointer"], [34, 1, 1, "", "Print"], [34, 1, 1, "", "QuotedString"], [34, 1, 1, "", "Return"], [34, 1, 1, "", "Scope"], [34, 1, 1, "", "SignedIntType"], [34, 1, 1, "", "Stream"], [34, 1, 1, "", "String"], [34, 1, 1, "", "Token"], [34, 1, 1, "", "Type"], [34, 1, 1, "", "UnsignedIntType"], [34, 1, 1, "", "Variable"], [34, 1, 1, "", "While"], [34, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[34, 2, 1, "", "cse"], [34, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[34, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[34, 2, 1, "", "cast_nocheck"], [34, 4, 1, "", "decimal_dig"], [34, 4, 1, "", "dig"], [34, 4, 1, "", "eps"], [34, 4, 1, "", "max"], [34, 4, 1, "", "max_exponent"], [34, 4, 1, "", "min_exponent"], [34, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[34, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[34, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[34, 2, 1, "", "cast_check"], [34, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[34, 2, 1, "", "as_Declaration"], [34, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[34, 1, 1, "", "Cbrt"], [34, 1, 1, "", "Sqrt"], [34, 1, 1, "", "exp2"], [34, 1, 1, "", "expm1"], [34, 1, 1, "", "fma"], [34, 1, 1, "", "hypot"], [34, 1, 1, "", "log10"], [34, 1, 1, "", "log1p"], [34, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[34, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[34, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[34, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[34, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[34, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[34, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[34, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[34, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[34, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[34, 1, 1, "", "CommaOperator"], [34, 1, 1, "", "Label"], [34, 1, 1, "", "PostDecrement"], [34, 1, 1, "", "PostIncrement"], [34, 1, 1, "", "PreDecrement"], [34, 1, 1, "", "PreIncrement"], [34, 3, 1, "", "alignof"], [34, 1, 1, "", "goto"], [34, 3, 1, "", "sizeof"], [34, 1, 1, "", "struct"], [34, 1, 1, "", "union"]], "sympy.codegen.cutils": [[34, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[34, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[34, 1, 1, "", "ArrayConstructor"], [34, 1, 1, "", "Do"], [34, 1, 1, "", "Extent"], [34, 1, 1, "", "FortranReturn"], [34, 1, 1, "", "GoTo"], [34, 1, 1, "", "ImpliedDoLoop"], [34, 1, 1, "", "Module"], [34, 1, 1, "", "Program"], [34, 1, 1, "", "Subroutine"], [34, 1, 1, "", "SubroutineCall"], [34, 3, 1, "", "allocated"], [34, 3, 1, "", "array"], [34, 3, 1, "", "bind_C"], [34, 1, 1, "", "cmplx"], [34, 3, 1, "", "dimension"], [34, 1, 1, "", "dsign"], [34, 1, 1, "", "isign"], [34, 1, 1, "", "kind"], [34, 3, 1, "", "lbound"], [34, 1, 1, "", "literal_dp"], [34, 1, 1, "", "literal_sp"], [34, 1, 1, "", "merge"], [34, 3, 1, "", "reshape"], [34, 3, 1, "", "shape"], [34, 3, 1, "", "size"], [34, 1, 1, "", "use"], [34, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[34, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[34, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[34, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[34, 1, 1, "", "FuncMinusOneOptim"], [34, 1, 1, "", "Optimization"], [34, 1, 1, "", "ReplaceOptim"], [34, 3, 1, "", "create_expand_pow_optimization"], [34, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[34, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[44, 0, 0, "-", "generators"], [36, 0, 0, "-", "graycode"], [37, 0, 0, "-", "group_constructs"], [38, 0, 0, "-", "group_numbers"], [40, 0, 0, "-", "named_groups"], [41, 0, 0, "-", "partitions"], [43, 0, 0, "-", "perm_groups"], [44, 0, 0, "-", "permutations"], [45, 0, 0, "-", "polyhedron"], [46, 0, 0, "-", "prufer"], [47, 0, 0, "-", "subsets"], [48, 0, 0, "-", "tensor_can"], [49, 0, 0, "-", "testutil"], [50, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[44, 2, 1, "", "alternating"], [44, 2, 1, "", "cyclic"], [44, 2, 1, "", "dihedral"], [44, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[36, 1, 1, "", "GrayCode"], [36, 2, 1, "", "bin_to_gray"], [36, 2, 1, "", "get_subset_from_bitstring"], [36, 2, 1, "", "gray_to_bin"], [36, 2, 1, "", "graycode_subsets"], [36, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[36, 4, 1, "", "current"], [36, 2, 1, "", "generate_gray"], [36, 4, 1, "", "n"], [36, 2, 1, "", "next"], [36, 4, 1, "", "rank"], [36, 4, 1, "", "selections"], [36, 2, 1, "", "skip"], [36, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[37, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[38, 3, 1, "", "is_abelian_number"], [38, 3, 1, "", "is_cyclic_number"], [38, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[40, 3, 1, "", "AbelianGroup"], [40, 3, 1, "", "AlternatingGroup"], [40, 3, 1, "", "CyclicGroup"], [40, 3, 1, "", "DihedralGroup"], [40, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[41, 1, 1, "", "IntegerPartition"], [41, 1, 1, "", "Partition"], [41, 3, 1, "", "RGS_enum"], [41, 3, 1, "", "RGS_generalized"], [41, 3, 1, "", "RGS_rank"], [41, 3, 1, "", "RGS_unrank"], [41, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[41, 2, 1, "", "as_dict"], [41, 2, 1, "", "as_ferrers"], [41, 4, 1, "", "conjugate"], [41, 2, 1, "", "next_lex"], [41, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[41, 4, 1, "", "RGS"], [41, 2, 1, "", "from_rgs"], [41, 4, 1, "", "partition"], [41, 4, 1, "", "rank"], [41, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[43, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[43, 2, 1, "", "__contains__"], [43, 2, 1, "", "__mul__"], [43, 2, 1, "", "__new__"], [43, 5, 1, "", "__weakref__"], [43, 2, 1, "", "_coset_representative"], [43, 2, 1, "", "_distinct_primes_lemma"], [43, 4, 1, "", "_elements"], [43, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [43, 2, 1, "", "_eval_is_alt_sym_naive"], [43, 2, 1, "", "_p_elements_group"], [43, 2, 1, "", "_random_pr_init"], [43, 2, 1, "", "_sylow_alt_sym"], [43, 2, 1, "", "_union_find_merge"], [43, 2, 1, "", "_union_find_rep"], [43, 2, 1, "", "_verify"], [43, 2, 1, "", "abelian_invariants"], [43, 4, 1, "", "base"], [43, 2, 1, "", "baseswap"], [43, 4, 1, "", "basic_orbits"], [43, 4, 1, "", "basic_stabilizers"], [43, 4, 1, "", "basic_transversals"], [43, 2, 1, "", "center"], [43, 2, 1, "", "centralizer"], [43, 2, 1, "", "commutator"], [43, 2, 1, "", "composition_series"], [43, 2, 1, "", "conjugacy_class"], [43, 2, 1, "", "conjugacy_classes"], [43, 2, 1, "", "contains"], [43, 2, 1, "", "coset_factor"], [43, 2, 1, "", "coset_rank"], [43, 2, 1, "", "coset_table"], [43, 2, 1, "", "coset_transversal"], [43, 2, 1, "", "coset_unrank"], [43, 4, 1, "", "degree"], [43, 2, 1, "", "derived_series"], [43, 2, 1, "", "derived_subgroup"], [43, 4, 1, "", "elements"], [43, 2, 1, "", "equals"], [43, 2, 1, "", "generate"], [43, 2, 1, "", "generate_dimino"], [43, 2, 1, "", "generate_schreier_sims"], [43, 2, 1, "", "generator_product"], [43, 4, 1, "", "generators"], [43, 4, 1, "", "identity"], [43, 2, 1, "", "index"], [43, 4, 1, "", "is_abelian"], [43, 2, 1, "", "is_alt_sym"], [43, 4, 1, "", "is_alternating"], [43, 4, 1, "", "is_cyclic"], [43, 2, 1, "", "is_elementary"], [43, 4, 1, "", "is_nilpotent"], [43, 2, 1, "", "is_normal"], [43, 4, 1, "", "is_perfect"], [43, 4, 1, "", "is_polycyclic"], [43, 2, 1, "", "is_primitive"], [43, 4, 1, "", "is_solvable"], [43, 2, 1, "", "is_subgroup"], [43, 4, 1, "", "is_symmetric"], [43, 2, 1, "", "is_transitive"], [43, 4, 1, "", "is_trivial"], [43, 2, 1, "", "lower_central_series"], [43, 2, 1, "", "make_perm"], [43, 4, 1, "", "max_div"], [43, 2, 1, "", "minimal_block"], [43, 2, 1, "", "minimal_blocks"], [43, 2, 1, "", "normal_closure"], [43, 2, 1, "", "orbit"], [43, 2, 1, "", "orbit_rep"], [43, 2, 1, "", "orbit_transversal"], [43, 2, 1, "", "orbits"], [43, 2, 1, "", "order"], [43, 2, 1, "", "pointwise_stabilizer"], [43, 2, 1, "", "polycyclic_group"], [43, 2, 1, "", "presentation"], [43, 2, 1, "", "random"], [43, 2, 1, "", "random_pr"], [43, 2, 1, "", "random_stab"], [43, 2, 1, "", "schreier_sims"], [43, 2, 1, "", "schreier_sims_incremental"], [43, 2, 1, "", "schreier_sims_random"], [43, 2, 1, "", "schreier_vector"], [43, 2, 1, "", "stabilizer"], [43, 4, 1, "", "strong_gens"], [43, 2, 1, "", "strong_presentation"], [43, 2, 1, "", "subgroup"], [43, 2, 1, "", "subgroup_search"], [43, 2, 1, "", "sylow_subgroup"], [43, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[44, 1, 1, "", "Cycle"], [44, 1, 1, "", "Permutation"], [44, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[44, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[44, 2, 1, "", "apply"], [44, 4, 1, "", "array_form"], [44, 2, 1, "", "ascents"], [44, 2, 1, "", "atoms"], [44, 4, 1, "", "cardinality"], [44, 2, 1, "", "commutator"], [44, 2, 1, "", "commutes_with"], [44, 4, 1, "", "cycle_structure"], [44, 4, 1, "", "cycles"], [44, 4, 1, "", "cyclic_form"], [44, 2, 1, "", "descents"], [44, 2, 1, "", "from_inversion_vector"], [44, 2, 1, "", "from_sequence"], [44, 4, 1, "", "full_cyclic_form"], [44, 2, 1, "", "get_adjacency_distance"], [44, 2, 1, "", "get_adjacency_matrix"], [44, 2, 1, "", "get_positional_distance"], [44, 2, 1, "", "get_precedence_distance"], [44, 2, 1, "", "get_precedence_matrix"], [44, 2, 1, "", "index"], [44, 2, 1, "", "inversion_vector"], [44, 2, 1, "", "inversions"], [44, 4, 1, "", "is_Empty"], [44, 4, 1, "", "is_Identity"], [44, 4, 1, "", "is_Singleton"], [44, 4, 1, "", "is_even"], [44, 4, 1, "", "is_odd"], [44, 2, 1, "", "josephus"], [44, 2, 1, "", "length"], [44, 2, 1, "", "list"], [44, 2, 1, "", "max"], [44, 2, 1, "", "min"], [44, 2, 1, "", "mul_inv"], [44, 2, 1, "", "next_lex"], [44, 2, 1, "", "next_nonlex"], [44, 2, 1, "", "next_trotterjohnson"], [44, 2, 1, "", "order"], [44, 2, 1, "", "parity"], [44, 2, 1, "", "random"], [44, 2, 1, "", "rank"], [44, 2, 1, "", "rank_nonlex"], [44, 2, 1, "", "rank_trotterjohnson"], [44, 2, 1, "", "resize"], [44, 2, 1, "", "rmul"], [44, 2, 1, "", "rmul_with_af"], [44, 2, 1, "", "runs"], [44, 2, 1, "", "signature"], [44, 4, 1, "", "size"], [44, 2, 1, "", "support"], [44, 2, 1, "", "transpositions"], [44, 2, 1, "", "unrank_lex"], [44, 2, 1, "", "unrank_nonlex"], [44, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[45, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[45, 4, 1, "", "array_form"], [45, 4, 1, "", "corners"], [45, 4, 1, "", "cyclic_form"], [45, 4, 1, "", "edges"], [45, 4, 1, "", "faces"], [45, 4, 1, "", "pgroup"], [45, 2, 1, "", "reset"], [45, 2, 1, "", "rotate"], [45, 4, 1, "", "size"], [45, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[46, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[46, 2, 1, "", "edges"], [46, 2, 1, "", "next"], [46, 4, 1, "", "nodes"], [46, 2, 1, "", "prev"], [46, 2, 1, "", "prufer_rank"], [46, 4, 1, "", "prufer_repr"], [46, 4, 1, "", "rank"], [46, 4, 1, "", "size"], [46, 2, 1, "", "to_prufer"], [46, 2, 1, "", "to_tree"], [46, 4, 1, "", "tree_repr"], [46, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[47, 1, 1, "", "Subset"], [47, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[47, 2, 1, "", "bitlist_from_subset"], [47, 4, 1, "", "cardinality"], [47, 2, 1, "", "iterate_binary"], [47, 2, 1, "", "iterate_graycode"], [47, 2, 1, "", "next_binary"], [47, 2, 1, "", "next_gray"], [47, 2, 1, "", "next_lexicographic"], [47, 2, 1, "", "prev_binary"], [47, 2, 1, "", "prev_gray"], [47, 2, 1, "", "prev_lexicographic"], [47, 4, 1, "", "rank_binary"], [47, 4, 1, "", "rank_gray"], [47, 4, 1, "", "rank_lexicographic"], [47, 4, 1, "", "size"], [47, 4, 1, "", "subset"], [47, 2, 1, "", "subset_from_bitlist"], [47, 2, 1, "", "subset_indices"], [47, 4, 1, "", "superset"], [47, 4, 1, "", "superset_size"], [47, 2, 1, "", "unrank_binary"], [47, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[48, 3, 1, "", "bsgs_direct_product"], [48, 3, 1, "", "canonicalize"], [48, 3, 1, "", "double_coset_can_rep"], [48, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[49, 3, 1, "", "_cmp_perm_lists"], [49, 3, 1, "", "_naive_list_centralizer"], [49, 3, 1, "", "_verify_bsgs"], [49, 3, 1, "", "_verify_centralizer"], [49, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[50, 3, 1, "", "_base_ordering"], [50, 3, 1, "", "_check_cycles_alt_sym"], [50, 3, 1, "", "_distribute_gens_by_base"], [50, 3, 1, "", "_handle_precomputed_bsgs"], [50, 3, 1, "", "_orbits_transversals_from_bsgs"], [50, 3, 1, "", "_remove_gens"], [50, 3, 1, "", "_strip"], [50, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[51, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[51, 2, 1, "", "change_index"], [51, 4, 1, "", "has_empty_sequence"], [51, 2, 1, "", "index"], [51, 2, 1, "", "reorder"], [51, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[79, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[79, 4, 1, "", "bound_symbols"], [79, 4, 1, "", "free_symbols"], [79, 4, 1, "", "function"], [79, 4, 1, "", "has_finite_limits"], [79, 4, 1, "", "has_reversed_limits"], [79, 4, 1, "", "is_number"], [79, 4, 1, "", "limits"], [79, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[51, 3, 1, "", "gosper_normal"], [51, 3, 1, "", "gosper_sum"], [51, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[51, 1, 1, "", "Product"], [51, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[51, 2, 1, "", "is_convergent"], [51, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[51, 1, 1, "", "Sum"], [51, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[51, 2, 1, "", "euler_maclaurin"], [51, 2, 1, "", "eval_zeta_function"], [51, 2, 1, "", "is_absolutely_convergent"], [51, 2, 1, "", "is_convergent"], [51, 2, 1, "", "reverse_order"]], "sympy.core": [[52, 0, 0, "-", "add"], [52, 0, 0, "-", "assumptions"], [52, 0, 0, "-", "basic"], [52, 0, 0, "-", "cache"], [52, 0, 0, "-", "containers"], [52, 0, 0, "-", "core"], [52, 0, 0, "-", "evalf"], [52, 0, 0, "-", "expr"], [52, 0, 0, "-", "exprtools"], [52, 0, 0, "-", "function"], [52, 0, 0, "-", "kind"], [52, 0, 0, "-", "mod"], [52, 0, 0, "-", "mul"], [52, 0, 0, "-", "multidimensional"], [52, 0, 0, "-", "numbers"], [52, 0, 0, "-", "power"], [52, 0, 0, "-", "random"], [52, 0, 0, "-", "relational"], [52, 0, 0, "-", "singleton"], [52, 0, 0, "-", "symbol"], [52, 0, 0, "-", "sympify"], [52, 0, 0, "-", "traversal"]], "sympy.core.add": [[52, 1, 1, "", "Add"]], "sympy.core.add.Add": [[52, 2, 1, "", "as_coeff_Add"], [52, 2, 1, "", "as_coeff_add"], [52, 2, 1, "", "as_content_primitive"], [52, 2, 1, "", "as_numer_denom"], [52, 2, 1, "", "as_real_imag"], [52, 2, 1, "", "as_two_terms"], [52, 2, 1, "", "class_key"], [52, 2, 1, "", "extract_leading_order"], [52, 2, 1, "", "flatten"], [52, 2, 1, "", "primitive"]], "sympy.core.basic": [[52, 1, 1, "", "Atom"], [52, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[52, 4, 1, "", "args"], [52, 2, 1, "", "as_content_primitive"], [52, 2, 1, "", "as_dummy"], [52, 4, 1, "", "assumptions0"], [52, 2, 1, "", "atoms"], [52, 4, 1, "", "canonical_variables"], [52, 2, 1, "", "class_key"], [52, 2, 1, "", "compare"], [52, 2, 1, "", "count"], [52, 2, 1, "", "count_ops"], [52, 2, 1, "", "doit"], [52, 2, 1, "", "dummy_eq"], [52, 2, 1, "", "find"], [52, 4, 1, "", "free_symbols"], [52, 2, 1, "", "fromiter"], [52, 4, 1, "", "func"], [52, 2, 1, "", "has"], [52, 2, 1, "", "has_free"], [52, 4, 1, "", "is_comparable"], [52, 2, 1, "", "match"], [52, 2, 1, "", "matches"], [52, 2, 1, "", "rcall"], [52, 2, 1, "", "refine"], [52, 2, 1, "", "replace"], [52, 2, 1, "", "rewrite"], [52, 2, 1, "", "simplify"], [52, 2, 1, "", "sort_key"], [52, 2, 1, "", "subs"], [52, 2, 1, "", "xreplace"]], "sympy.core.cache": [[52, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[52, 1, 1, "", "Dict"], [52, 1, 1, "", "Tuple"], [52, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[52, 2, 1, "", "get"], [52, 2, 1, "", "items"], [52, 2, 1, "", "keys"], [52, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[52, 2, 1, "", "index"], [52, 4, 1, "", "kind"], [52, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[52, 1, 1, "", "EvalfMixin"], [52, 3, 1, "", "N"], [52, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[52, 2, 1, "", "evalf"], [52, 2, 1, "", "n"]], "sympy.core.expr": [[52, 1, 1, "", "AtomicExpr"], [52, 1, 1, "", "Expr"], [52, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[52, 2, 1, "", "apart"], [52, 2, 1, "", "args_cnc"], [52, 2, 1, "", "as_coeff_Add"], [52, 2, 1, "", "as_coeff_Mul"], [52, 2, 1, "", "as_coeff_add"], [52, 2, 1, "", "as_coeff_exponent"], [52, 2, 1, "", "as_coeff_mul"], [52, 2, 1, "", "as_coefficient"], [52, 2, 1, "", "as_coefficients_dict"], [52, 2, 1, "", "as_content_primitive"], [52, 2, 1, "", "as_expr"], [52, 2, 1, "", "as_independent"], [52, 2, 1, "", "as_leading_term"], [52, 2, 1, "", "as_numer_denom"], [52, 2, 1, "", "as_ordered_factors"], [52, 2, 1, "", "as_ordered_terms"], [52, 2, 1, "", "as_poly"], [52, 2, 1, "", "as_powers_dict"], [52, 2, 1, "", "as_real_imag"], [52, 2, 1, "", "as_terms"], [52, 2, 1, "", "aseries"], [52, 2, 1, "", "cancel"], [52, 2, 1, "", "coeff"], [52, 2, 1, "", "collect"], [52, 2, 1, "", "combsimp"], [52, 2, 1, "", "compute_leading_term"], [52, 2, 1, "", "conjugate"], [52, 2, 1, "", "could_extract_minus_sign"], [52, 2, 1, "", "count_ops"], [52, 2, 1, "", "equals"], [52, 2, 1, "", "expand"], [52, 4, 1, "", "expr_free_symbols"], [52, 2, 1, "", "extract_additively"], [52, 2, 1, "", "extract_branch_factor"], [52, 2, 1, "", "extract_multiplicatively"], [52, 2, 1, "", "factor"], [52, 2, 1, "", "fourier_series"], [52, 2, 1, "", "fps"], [52, 2, 1, "", "gammasimp"], [52, 2, 1, "", "getO"], [52, 2, 1, "", "getn"], [52, 2, 1, "", "integrate"], [52, 2, 1, "", "invert"], [52, 2, 1, "", "is_algebraic_expr"], [52, 2, 1, "", "is_constant"], [52, 2, 1, "", "is_meromorphic"], [52, 4, 1, "", "is_number"], [52, 2, 1, "", "is_polynomial"], [52, 2, 1, "", "is_rational_function"], [52, 2, 1, "", "leadterm"], [52, 2, 1, "", "limit"], [52, 2, 1, "", "lseries"], [52, 2, 1, "", "normal"], [52, 2, 1, "", "nseries"], [52, 2, 1, "", "nsimplify"], [52, 2, 1, "", "powsimp"], [52, 2, 1, "", "primitive"], [52, 2, 1, "", "radsimp"], [52, 2, 1, "", "ratsimp"], [52, 2, 1, "", "removeO"], [52, 2, 1, "", "round"], [52, 2, 1, "", "separate"], [52, 2, 1, "", "series"], [52, 2, 1, "", "taylor_term"], [52, 2, 1, "", "together"], [52, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[52, 3, 1, "", "factor_terms"], [52, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[52, 1, 1, "", "Derivative"], [52, 1, 1, "", "Function"], [52, 1, 1, "", "FunctionClass"], [52, 1, 1, "", "Lambda"], [52, 1, 1, "", "PoleError"], [52, 1, 1, "", "Subs"], [52, 1, 1, "", "WildFunction"], [52, 3, 1, "", "count_ops"], [52, 3, 1, "", "diff"], [52, 3, 1, "", "expand"], [52, 3, 1, "", "expand_complex"], [52, 3, 1, "", "expand_func"], [52, 3, 1, "", "expand_log"], [52, 3, 1, "", "expand_mul"], [52, 3, 1, "", "expand_multinomial"], [52, 3, 1, "", "expand_power_base"], [52, 3, 1, "", "expand_power_exp"], [52, 3, 1, "", "expand_trig"], [52, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[52, 4, 1, "", "_diff_wrt"], [52, 2, 1, "", "_sort_variable_count"], [52, 2, 1, "", "as_finite_difference"], [52, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[52, 2, 1, "", "as_base_exp"], [52, 2, 1, "", "fdiff"], [52, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[52, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[52, 4, 1, "", "bound_symbols"], [52, 4, 1, "", "expr"], [52, 4, 1, "", "is_identity"], [52, 4, 1, "", "signature"], [52, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[52, 4, 1, "", "bound_symbols"], [52, 4, 1, "", "expr"], [52, 4, 1, "", "point"], [52, 4, 1, "", "variables"]], "sympy.core.kind": [[52, 5, 1, "", "BooleanKind"], [52, 1, 1, "", "Kind"], [52, 5, 1, "", "NumberKind"], [52, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[52, 1, 1, "", "Mod"]], "sympy.core.mul": [[52, 1, 1, "", "Mul"], [52, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[52, 2, 1, "", "as_coeff_Mul"], [52, 2, 1, "", "as_content_primitive"], [52, 2, 1, "", "as_ordered_factors"], [52, 2, 1, "", "as_two_terms"], [52, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[52, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[52, 1, 1, "", "AlgebraicNumber"], [52, 1, 1, "", "Catalan"], [52, 1, 1, "", "ComplexInfinity"], [52, 1, 1, "", "EulerGamma"], [52, 1, 1, "", "Exp1"], [52, 1, 1, "", "Float"], [52, 1, 1, "", "GoldenRatio"], [52, 1, 1, "", "Half"], [52, 1, 1, "", "ImaginaryUnit"], [52, 1, 1, "", "Infinity"], [52, 1, 1, "", "Integer"], [52, 1, 1, "", "NaN"], [52, 1, 1, "", "NegativeInfinity"], [52, 1, 1, "", "NegativeOne"], [52, 1, 1, "", "Number"], [52, 1, 1, "", "NumberSymbol"], [52, 1, 1, "", "One"], [52, 1, 1, "", "Pi"], [52, 1, 1, "", "Rational"], [52, 5, 1, "", "RealNumber"], [52, 1, 1, "", "TribonacciConstant"], [52, 1, 1, "", "Zero"], [52, 3, 1, "", "igcd"], [52, 3, 1, "", "ilcm"], [52, 3, 1, "", "mod_inverse"], [52, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[52, 2, 1, "", "__new__"], [52, 2, 1, "", "as_expr"], [52, 2, 1, "", "as_poly"], [52, 2, 1, "", "coeffs"], [52, 2, 1, "", "field_element"], [52, 4, 1, "", "is_aliased"], [52, 4, 1, "", "is_primitive_element"], [52, 2, 1, "", "minpoly_of_element"], [52, 2, 1, "", "native_coeffs"], [52, 2, 1, "", "primitive_element"], [52, 2, 1, "", "to_algebraic_integer"], [52, 2, 1, "", "to_primitive_element"], [52, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[52, 2, 1, "", "as_coeff_Add"], [52, 2, 1, "", "as_coeff_Mul"], [52, 2, 1, "", "cofactors"], [52, 2, 1, "", "gcd"], [52, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[52, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[52, 2, 1, "", "as_coeff_Add"], [52, 2, 1, "", "as_coeff_Mul"], [52, 2, 1, "", "as_content_primitive"], [52, 2, 1, "", "factors"], [52, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[52, 1, 1, "", "Pow"], [52, 3, 1, "", "integer_log"], [52, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[52, 2, 1, "", "as_base_exp"], [52, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[52, 3, 1, "", "_randint"], [52, 3, 1, "", "_randrange"], [52, 3, 1, "", "random_complex_number"], [52, 3, 1, "", "test_derivative_numerically"], [52, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[52, 5, 1, "", "Eq"], [52, 1, 1, "", "Equality"], [52, 5, 1, "", "Ge"], [52, 1, 1, "", "GreaterThan"], [52, 5, 1, "", "Gt"], [52, 5, 1, "", "Le"], [52, 1, 1, "", "LessThan"], [52, 5, 1, "", "Lt"], [52, 5, 1, "", "Ne"], [52, 5, 1, "", "Rel"], [52, 1, 1, "", "Relational"], [52, 1, 1, "", "StrictGreaterThan"], [52, 1, 1, "", "StrictLessThan"], [52, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[52, 2, 1, "", "as_poly"], [52, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[52, 4, 1, "", "canonical"], [52, 2, 1, "", "equals"], [52, 4, 1, "", "lhs"], [52, 4, 1, "", "negated"], [52, 4, 1, "", "reversed"], [52, 4, 1, "", "reversedsign"], [52, 4, 1, "", "rhs"], [52, 4, 1, "", "strict"], [52, 4, 1, "", "weak"]], "sympy.core.singleton": [[52, 1, 1, "", "Singleton"], [52, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[52, 3, 1, "", "default_sort_key"], [52, 3, 1, "", "ordered"]], "sympy.core.symbol": [[52, 1, 1, "", "Dummy"], [52, 1, 1, "", "Symbol"], [52, 1, 1, "", "Wild"], [52, 3, 1, "", "symbols"], [52, 3, 1, "", "var"]], "sympy.core.sympify": [[52, 3, 1, "", "sympify"]], "sympy.core.traversal": [[52, 3, 1, "", "bottom_up"], [52, 3, 1, "", "postorder_traversal"], [52, 3, 1, "", "preorder_traversal"], [52, 3, 1, "", "use"], [52, 3, 1, "", "walk"]], "sympy.crypto": [[53, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[53, 3, 1, "", "AZ"], [53, 3, 1, "", "bifid5_square"], [53, 3, 1, "", "bifid6_square"], [53, 3, 1, "", "check_and_join"], [53, 3, 1, "", "cycle_list"], [53, 3, 1, "", "decipher_affine"], [53, 3, 1, "", "decipher_atbash"], [53, 3, 1, "", "decipher_bifid"], [53, 3, 1, "", "decipher_bifid5"], [53, 3, 1, "", "decipher_bifid6"], [53, 3, 1, "", "decipher_elgamal"], [53, 3, 1, "", "decipher_gm"], [53, 3, 1, "", "decipher_hill"], [53, 3, 1, "", "decipher_kid_rsa"], [53, 3, 1, "", "decipher_railfence"], [53, 3, 1, "", "decipher_rot13"], [53, 3, 1, "", "decipher_rsa"], [53, 3, 1, "", "decipher_shift"], [53, 3, 1, "", "decipher_vigenere"], [53, 3, 1, "", "decode_morse"], [53, 3, 1, "", "dh_private_key"], [53, 3, 1, "", "dh_public_key"], [53, 3, 1, "", "dh_shared_key"], [53, 3, 1, "", "elgamal_private_key"], [53, 3, 1, "", "elgamal_public_key"], [53, 3, 1, "", "encipher_affine"], [53, 3, 1, "", "encipher_atbash"], [53, 3, 1, "", "encipher_bifid"], [53, 3, 1, "", "encipher_bifid5"], [53, 3, 1, "", "encipher_bifid6"], [53, 3, 1, "", "encipher_elgamal"], [53, 3, 1, "", "encipher_gm"], [53, 3, 1, "", "encipher_hill"], [53, 3, 1, "", "encipher_kid_rsa"], [53, 3, 1, "", "encipher_railfence"], [53, 3, 1, "", "encipher_rot13"], [53, 3, 1, "", "encipher_rsa"], [53, 3, 1, "", "encipher_shift"], [53, 3, 1, "", "encipher_substitution"], [53, 3, 1, "", "encipher_vigenere"], [53, 3, 1, "", "encode_morse"], [53, 3, 1, "", "gm_private_key"], [53, 3, 1, "", "gm_public_key"], [53, 3, 1, "", "kid_rsa_private_key"], [53, 3, 1, "", "kid_rsa_public_key"], [53, 3, 1, "", "lfsr_autocorrelation"], [53, 3, 1, "", "lfsr_connection_polynomial"], [53, 3, 1, "", "lfsr_sequence"], [53, 3, 1, "", "padded_key"], [53, 3, 1, "", "rsa_private_key"], [53, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[54, 1, 1, "", "BaseCovarDerivativeOp"], [54, 1, 1, "", "BaseScalarField"], [54, 1, 1, "", "BaseVectorField"], [54, 1, 1, "", "Commutator"], [54, 1, 1, "", "CoordSystem"], [54, 1, 1, "", "CoordinateSymbol"], [54, 1, 1, "", "CovarDerivativeOp"], [54, 1, 1, "", "Differential"], [54, 1, 1, "", "LieDerivative"], [54, 1, 1, "", "Manifold"], [54, 1, 1, "", "Patch"], [54, 1, 1, "", "Point"], [54, 1, 1, "", "TensorProduct"], [54, 1, 1, "", "WedgeProduct"], [54, 3, 1, "", "intcurve_diffequ"], [54, 3, 1, "", "intcurve_series"], [54, 3, 1, "", "metric_to_Christoffel_1st"], [54, 3, 1, "", "metric_to_Christoffel_2nd"], [54, 3, 1, "", "metric_to_Ricci_components"], [54, 3, 1, "", "metric_to_Riemann_components"], [54, 3, 1, "", "twoform_to_matrix"], [54, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[54, 2, 1, "", "base_oneform"], [54, 2, 1, "", "base_oneforms"], [54, 2, 1, "", "base_scalar"], [54, 2, 1, "", "base_scalars"], [54, 2, 1, "", "base_vector"], [54, 2, 1, "", "base_vectors"], [54, 2, 1, "", "coord_function"], [54, 2, 1, "", "coord_functions"], [54, 2, 1, "", "coord_tuple_transform_to"], [54, 2, 1, "", "jacobian"], [54, 2, 1, "", "jacobian_determinant"], [54, 2, 1, "", "jacobian_matrix"], [54, 2, 1, "", "point"], [54, 2, 1, "", "point_to_coords"], [54, 2, 1, "", "transform"], [54, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[54, 2, 1, "", "coords"]], "sympy.discrete": [[55, 0, 0, "-", "convolutions"], [55, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[55, 3, 1, "", "convolution"], [55, 3, 1, "", "convolution_fft"], [55, 3, 1, "", "convolution_fwht"], [55, 3, 1, "", "convolution_ntt"], [55, 3, 1, "", "convolution_subset"], [55, 3, 1, "", "covering_product"], [55, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[55, 3, 1, "", "fft"], [55, 3, 1, "", "fwht"], [55, 3, 1, "", "ifft"], [55, 3, 1, "", "ifwht"], [55, 3, 1, "", "intt"], [55, 3, 1, "", "inverse_mobius_transform"], [55, 3, 1, "", "mobius_transform"], [55, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[190, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[57, 1, 1, "", "FallingFactorial"], [57, 1, 1, "", "MultiFactorial"], [57, 1, 1, "", "RisingFactorial"], [57, 1, 1, "", "binomial"], [57, 1, 1, "", "factorial"], [57, 1, 1, "", "factorial2"], [57, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[57, 1, 1, "", "bell"], [57, 1, 1, "", "bernoulli"], [57, 1, 1, "", "catalan"], [57, 1, 1, "", "euler"], [57, 1, 1, "", "fibonacci"], [57, 1, 1, "", "genocchi"], [57, 1, 1, "", "harmonic"], [57, 1, 1, "", "lucas"], [57, 3, 1, "", "nC"], [57, 3, 1, "", "nP"], [57, 3, 1, "", "nT"], [57, 1, 1, "", "partition"], [57, 3, 1, "", "stirling"], [57, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[58, 1, 1, "", "Abs"], [58, 1, 1, "", "arg"], [58, 1, 1, "", "conjugate"], [58, 1, 1, "", "im"], [58, 1, 1, "", "periodic_argument"], [58, 1, 1, "", "polar_lift"], [58, 1, 1, "", "principal_branch"], [58, 1, 1, "", "re"], [58, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[58, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[58, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[58, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[58, 1, 1, "", "LambertW"], [58, 1, 1, "", "exp"], [58, 1, 1, "", "exp_polar"], [58, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[58, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[58, 2, 1, "", "as_real_imag"], [58, 4, 1, "", "base"], [58, 2, 1, "", "fdiff"], [58, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[58, 2, 1, "", "as_base_exp"], [58, 2, 1, "", "as_real_imag"], [58, 2, 1, "", "fdiff"], [58, 2, 1, "", "inverse"], [58, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[58, 1, 1, "", "HyperbolicFunction"], [58, 1, 1, "", "acosh"], [58, 1, 1, "", "acoth"], [58, 1, 1, "", "acsch"], [58, 1, 1, "", "asech"], [58, 1, 1, "", "asinh"], [58, 1, 1, "", "atanh"], [58, 1, 1, "", "cosh"], [58, 1, 1, "", "coth"], [58, 1, 1, "", "csch"], [58, 1, 1, "", "sech"], [58, 1, 1, "", "sinh"], [58, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[58, 2, 1, "", "fdiff"], [58, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[58, 2, 1, "", "as_real_imag"], [58, 2, 1, "", "fdiff"], [58, 2, 1, "", "inverse"], [58, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[58, 1, 1, "", "RoundFunction"], [58, 1, 1, "", "ceiling"], [58, 1, 1, "", "floor"], [58, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[58, 1, 1, "", "IdentityFunction"], [58, 1, 1, "", "Max"], [58, 1, 1, "", "Min"], [58, 3, 1, "", "cbrt"], [58, 3, 1, "", "real_root"], [58, 3, 1, "", "root"], [58, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[58, 1, 1, "", "ExprCondPair"], [58, 1, 1, "", "Piecewise"], [58, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[58, 4, 1, "", "cond"], [58, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[58, 2, 1, "", "_eval_integral"], [58, 2, 1, "", "as_expr_set_pairs"], [58, 2, 1, "", "doit"], [58, 2, 1, "", "eval"], [58, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[58, 1, 1, "", "acos"], [58, 1, 1, "", "acot"], [58, 1, 1, "", "acsc"], [58, 1, 1, "", "asec"], [58, 1, 1, "", "asin"], [58, 1, 1, "", "atan"], [58, 1, 1, "", "atan2"], [58, 1, 1, "", "cos"], [58, 1, 1, "", "cot"], [58, 1, 1, "", "csc"], [58, 1, 1, "", "sec"], [58, 1, 1, "", "sin"], [58, 1, 1, "", "sinc"], [58, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[58, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[58, 2, 1, "", "inverse"]], "sympy.functions.special": [[60, 0, 0, "-", "bessel"], [60, 0, 0, "-", "beta_functions"], [60, 0, 0, "-", "elliptic_integrals"], [60, 0, 0, "-", "error_functions"], [60, 0, 0, "-", "gamma_functions"], [60, 0, 0, "-", "mathieu_functions"], [60, 0, 0, "-", "polynomials"], [60, 0, 0, "-", "singularity_functions"], [60, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[60, 1, 1, "", "AiryBase"], [60, 1, 1, "", "BesselBase"], [60, 1, 1, "", "airyai"], [60, 1, 1, "", "airyaiprime"], [60, 1, 1, "", "airybi"], [60, 1, 1, "", "airybiprime"], [60, 1, 1, "", "besseli"], [60, 1, 1, "", "besselj"], [60, 1, 1, "", "besselk"], [60, 1, 1, "", "bessely"], [60, 1, 1, "", "hankel1"], [60, 1, 1, "", "hankel2"], [60, 1, 1, "", "jn"], [60, 3, 1, "", "jn_zeros"], [60, 1, 1, "", "marcumq"], [60, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[60, 4, 1, "", "argument"], [60, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[60, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[60, 3, 1, "", "bspline_basis"], [60, 3, 1, "", "bspline_basis_set"], [60, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[60, 1, 1, "", "DiracDelta"], [60, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[60, 2, 1, "", "eval"], [60, 2, 1, "", "fdiff"], [60, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[60, 2, 1, "", "eval"], [60, 2, 1, "", "fdiff"], [60, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[60, 1, 1, "", "elliptic_e"], [60, 1, 1, "", "elliptic_f"], [60, 1, 1, "", "elliptic_k"], [60, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[60, 1, 1, "", "Chi"], [60, 1, 1, "", "Ci"], [60, 3, 1, "", "E1"], [60, 1, 1, "", "Ei"], [60, 1, 1, "", "FresnelIntegral"], [60, 1, 1, "", "Li"], [60, 1, 1, "", "Shi"], [60, 1, 1, "", "Si"], [60, 1, 1, "", "erf"], [60, 1, 1, "", "erf2"], [60, 1, 1, "", "erf2inv"], [60, 1, 1, "", "erfc"], [60, 1, 1, "", "erfcinv"], [60, 1, 1, "", "erfi"], [60, 1, 1, "", "erfinv"], [60, 1, 1, "", "expint"], [60, 1, 1, "", "fresnelc"], [60, 1, 1, "", "fresnels"], [60, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[60, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[60, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[60, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[60, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[60, 1, 1, "", "digamma"], [60, 1, 1, "", "gamma"], [60, 1, 1, "", "loggamma"], [60, 1, 1, "", "lowergamma"], [60, 1, 1, "", "multigamma"], [60, 1, 1, "", "polygamma"], [60, 1, 1, "", "trigamma"], [60, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[60, 1, 1, "", "appellf1"], [60, 1, 1, "", "hyper"], [60, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[60, 4, 1, "", "ap"], [60, 4, 1, "", "argument"], [60, 4, 1, "", "bq"], [60, 4, 1, "", "convergence_statement"], [60, 4, 1, "", "eta"], [60, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[60, 4, 1, "", "an"], [60, 4, 1, "", "aother"], [60, 4, 1, "", "ap"], [60, 4, 1, "", "argument"], [60, 4, 1, "", "bm"], [60, 4, 1, "", "bother"], [60, 4, 1, "", "bq"], [60, 4, 1, "", "delta"], [60, 2, 1, "", "get_period"], [60, 2, 1, "", "integrand"], [60, 4, 1, "", "is_number"], [60, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[60, 1, 1, "", "MathieuBase"], [60, 1, 1, "", "mathieuc"], [60, 1, 1, "", "mathieucprime"], [60, 1, 1, "", "mathieus"], [60, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[60, 1, 1, "", "assoc_laguerre"], [60, 1, 1, "", "assoc_legendre"], [60, 1, 1, "", "chebyshevt"], [60, 1, 1, "", "chebyshevt_root"], [60, 1, 1, "", "chebyshevu"], [60, 1, 1, "", "chebyshevu_root"], [60, 1, 1, "", "gegenbauer"], [60, 1, 1, "", "hermite"], [60, 1, 1, "", "jacobi"], [60, 3, 1, "", "jacobi_normalized"], [60, 1, 1, "", "laguerre"], [60, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[60, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[60, 2, 1, "", "eval"], [60, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[60, 1, 1, "", "Ynm"], [60, 3, 1, "", "Ynm_c"], [60, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[60, 3, 1, "", "Eijk"], [60, 1, 1, "", "KroneckerDelta"], [60, 1, 1, "", "LeviCivita"], [60, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[60, 2, 1, "", "eval"], [60, 4, 1, "", "indices_contain_equal_information"], [60, 4, 1, "", "is_above_fermi"], [60, 4, 1, "", "is_below_fermi"], [60, 4, 1, "", "is_only_above_fermi"], [60, 4, 1, "", "is_only_below_fermi"], [60, 4, 1, "", "killable_index"], [60, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[60, 1, 1, "", "dirichlet_eta"], [60, 1, 1, "", "lerchphi"], [60, 1, 1, "", "polylog"], [60, 1, 1, "", "stieltjes"], [60, 1, 1, "", "zeta"]], "sympy.geometry": [[61, 0, 0, "-", "curve"], [62, 0, 0, "-", "ellipse"], [63, 0, 0, "-", "entity"], [65, 0, 0, "-", "line"], [66, 0, 0, "-", "plane"], [67, 0, 0, "-", "point"], [68, 0, 0, "-", "polygon"], [69, 0, 0, "-", "util"]], "sympy.geometry.curve": [[61, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[61, 4, 1, "", "ambient_dimension"], [61, 2, 1, "", "arbitrary_point"], [61, 4, 1, "", "free_symbols"], [61, 4, 1, "", "functions"], [61, 4, 1, "", "length"], [61, 4, 1, "", "limits"], [61, 4, 1, "", "parameter"], [61, 2, 1, "", "plot_interval"], [61, 2, 1, "", "rotate"], [61, 2, 1, "", "scale"], [61, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[62, 1, 1, "", "Circle"], [62, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[62, 4, 1, "", "circumference"], [62, 2, 1, "", "equation"], [62, 2, 1, "", "intersection"], [62, 4, 1, "", "radius"], [62, 2, 1, "", "reflect"], [62, 2, 1, "", "scale"], [62, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[62, 4, 1, "", "apoapsis"], [62, 2, 1, "", "arbitrary_point"], [62, 4, 1, "", "area"], [62, 2, 1, "", "auxiliary_circle"], [62, 4, 1, "", "bounds"], [62, 4, 1, "", "center"], [62, 4, 1, "", "circumference"], [62, 2, 1, "", "director_circle"], [62, 4, 1, "", "eccentricity"], [62, 2, 1, "", "encloses_point"], [62, 2, 1, "", "equation"], [62, 2, 1, "", "evolute"], [62, 4, 1, "", "foci"], [62, 4, 1, "", "focus_distance"], [62, 4, 1, "", "hradius"], [62, 2, 1, "", "intersection"], [62, 2, 1, "", "is_tangent"], [62, 4, 1, "", "major"], [62, 4, 1, "", "minor"], [62, 2, 1, "", "normal_lines"], [62, 4, 1, "", "periapsis"], [62, 2, 1, "", "plot_interval"], [62, 2, 1, "", "polar_second_moment_of_area"], [62, 2, 1, "", "random_point"], [62, 2, 1, "", "reflect"], [62, 2, 1, "", "rotate"], [62, 2, 1, "", "scale"], [62, 2, 1, "", "second_moment_of_area"], [62, 2, 1, "", "section_modulus"], [62, 4, 1, "", "semilatus_rectum"], [62, 2, 1, "", "tangent_lines"], [62, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[63, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[63, 4, 1, "", "ambient_dimension"], [63, 4, 1, "", "bounds"], [63, 2, 1, "", "encloses"], [63, 2, 1, "", "intersection"], [63, 2, 1, "", "is_similar"], [63, 2, 1, "", "parameter_value"], [63, 2, 1, "", "reflect"], [63, 2, 1, "", "rotate"], [63, 2, 1, "", "scale"], [63, 2, 1, "", "translate"]], "sympy.geometry.line": [[65, 1, 1, "", "Line"], [65, 1, 1, "", "Line2D"], [65, 1, 1, "", "Line3D"], [65, 1, 1, "", "LinearEntity"], [65, 1, 1, "", "LinearEntity2D"], [65, 1, 1, "", "LinearEntity3D"], [65, 1, 1, "", "Ray"], [65, 1, 1, "", "Ray2D"], [65, 1, 1, "", "Ray3D"], [65, 1, 1, "", "Segment"], [65, 1, 1, "", "Segment2D"], [65, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[65, 2, 1, "", "contains"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "equals"], [65, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[65, 4, 1, "", "coefficients"], [65, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[65, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[65, 4, 1, "", "ambient_dimension"], [65, 2, 1, "", "angle_between"], [65, 2, 1, "", "arbitrary_point"], [65, 2, 1, "", "are_concurrent"], [65, 2, 1, "", "bisectors"], [65, 2, 1, "", "contains"], [65, 4, 1, "", "direction"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "is_parallel"], [65, 2, 1, "", "is_perpendicular"], [65, 2, 1, "", "is_similar"], [65, 4, 1, "", "length"], [65, 4, 1, "", "p1"], [65, 4, 1, "", "p2"], [65, 2, 1, "", "parallel_line"], [65, 2, 1, "", "perpendicular_line"], [65, 2, 1, "", "perpendicular_segment"], [65, 4, 1, "", "points"], [65, 2, 1, "", "projection"], [65, 2, 1, "", "random_point"], [65, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[65, 4, 1, "", "bounds"], [65, 2, 1, "", "perpendicular_line"], [65, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[65, 4, 1, "", "direction_cosine"], [65, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[65, 2, 1, "", "contains"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "equals"], [65, 2, 1, "", "plot_interval"], [65, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[65, 2, 1, "", "closing_angle"], [65, 4, 1, "", "xdirection"], [65, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[65, 4, 1, "", "xdirection"], [65, 4, 1, "", "ydirection"], [65, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[65, 2, 1, "", "contains"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "equals"], [65, 4, 1, "", "length"], [65, 4, 1, "", "midpoint"], [65, 2, 1, "", "perpendicular_bisector"], [65, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[66, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[66, 2, 1, "", "angle_between"], [66, 2, 1, "", "arbitrary_point"], [66, 2, 1, "", "are_concurrent"], [66, 2, 1, "", "distance"], [66, 2, 1, "", "equals"], [66, 2, 1, "", "equation"], [66, 2, 1, "", "intersection"], [66, 2, 1, "", "is_coplanar"], [66, 2, 1, "", "is_parallel"], [66, 2, 1, "", "is_perpendicular"], [66, 4, 1, "", "normal_vector"], [66, 4, 1, "", "p1"], [66, 2, 1, "", "parallel_plane"], [66, 2, 1, "", "parameter_value"], [66, 2, 1, "", "perpendicular_line"], [66, 2, 1, "", "perpendicular_plane"], [66, 2, 1, "", "projection"], [66, 2, 1, "", "projection_line"], [66, 2, 1, "", "random_point"]], "sympy.geometry.point": [[67, 1, 1, "", "Point"], [67, 1, 1, "", "Point2D"], [67, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[67, 2, 1, "", "affine_rank"], [67, 4, 1, "", "ambient_dimension"], [67, 2, 1, "", "are_coplanar"], [67, 2, 1, "", "canberra_distance"], [67, 2, 1, "", "distance"], [67, 2, 1, "", "dot"], [67, 2, 1, "", "equals"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "is_collinear"], [67, 2, 1, "", "is_concyclic"], [67, 4, 1, "", "is_nonzero"], [67, 2, 1, "", "is_scalar_multiple"], [67, 4, 1, "", "is_zero"], [67, 4, 1, "", "length"], [67, 2, 1, "", "midpoint"], [67, 4, 1, "", "origin"], [67, 4, 1, "", "orthogonal_direction"], [67, 2, 1, "", "project"], [67, 2, 1, "", "taxicab_distance"], [67, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[67, 4, 1, "", "bounds"], [67, 4, 1, "", "coordinates"], [67, 2, 1, "", "rotate"], [67, 2, 1, "", "scale"], [67, 2, 1, "", "transform"], [67, 2, 1, "", "translate"], [67, 4, 1, "", "x"], [67, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[67, 2, 1, "", "are_collinear"], [67, 4, 1, "", "coordinates"], [67, 2, 1, "", "direction_cosine"], [67, 2, 1, "", "direction_ratio"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "scale"], [67, 2, 1, "", "transform"], [67, 2, 1, "", "translate"], [67, 4, 1, "", "x"], [67, 4, 1, "", "y"], [67, 4, 1, "", "z"]], "sympy.geometry.polygon": [[68, 1, 1, "", "Polygon"], [68, 1, 1, "", "RegularPolygon"], [68, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[68, 4, 1, "", "angles"], [68, 2, 1, "", "arbitrary_point"], [68, 4, 1, "", "area"], [68, 2, 1, "", "bisectors"], [68, 4, 1, "", "bounds"], [68, 4, 1, "", "centroid"], [68, 2, 1, "", "cut_section"], [68, 2, 1, "", "distance"], [68, 2, 1, "", "encloses_point"], [68, 2, 1, "", "first_moment_of_area"], [68, 2, 1, "", "intersection"], [68, 2, 1, "", "is_convex"], [68, 4, 1, "", "perimeter"], [68, 2, 1, "", "plot_interval"], [68, 2, 1, "", "polar_second_moment_of_area"], [68, 2, 1, "", "second_moment_of_area"], [68, 2, 1, "", "section_modulus"], [68, 4, 1, "", "sides"], [68, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[68, 4, 1, "", "angles"], [68, 4, 1, "", "apothem"], [68, 4, 1, "", "area"], [68, 4, 1, "", "args"], [68, 4, 1, "", "center"], [68, 4, 1, "", "centroid"], [68, 4, 1, "", "circumcenter"], [68, 4, 1, "", "circumcircle"], [68, 4, 1, "", "circumradius"], [68, 2, 1, "", "encloses_point"], [68, 4, 1, "", "exterior_angle"], [68, 4, 1, "", "incircle"], [68, 4, 1, "", "inradius"], [68, 4, 1, "", "interior_angle"], [68, 4, 1, "", "length"], [68, 4, 1, "", "radius"], [68, 2, 1, "", "reflect"], [68, 2, 1, "", "rotate"], [68, 4, 1, "", "rotation"], [68, 2, 1, "", "scale"], [68, 2, 1, "", "spin"], [68, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[68, 4, 1, "", "altitudes"], [68, 2, 1, "", "bisectors"], [68, 4, 1, "", "circumcenter"], [68, 4, 1, "", "circumcircle"], [68, 4, 1, "", "circumradius"], [68, 4, 1, "", "eulerline"], [68, 4, 1, "", "excenters"], [68, 4, 1, "", "exradii"], [68, 4, 1, "", "incenter"], [68, 4, 1, "", "incircle"], [68, 4, 1, "", "inradius"], [68, 2, 1, "", "is_equilateral"], [68, 2, 1, "", "is_isosceles"], [68, 2, 1, "", "is_right"], [68, 2, 1, "", "is_scalene"], [68, 2, 1, "", "is_similar"], [68, 4, 1, "", "medial"], [68, 4, 1, "", "medians"], [68, 4, 1, "", "nine_point_circle"], [68, 4, 1, "", "orthocenter"], [68, 4, 1, "", "vertices"]], "sympy.geometry.util": [[69, 3, 1, "", "are_similar"], [69, 3, 1, "", "centroid"], [69, 3, 1, "", "convex_hull"], [69, 3, 1, "", "idiff"], [69, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[75, 1, 1, "", "DifferentialOperator"], [75, 1, 1, "", "DifferentialOperatorAlgebra"], [75, 3, 1, "", "DifferentialOperators"], [75, 1, 1, "", "HolonomicFunction"], [73, 3, 1, "", "_convert_poly_rat_alg"], [73, 3, 1, "", "_create_table"], [71, 3, 1, "", "expr_to_holonomic"], [71, 3, 1, "", "from_hyper"], [71, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[75, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[74, 2, 1, "", "composition"], [74, 2, 1, "", "diff"], [74, 2, 1, "", "evalf"], [74, 2, 1, "", "integrate"], [74, 2, 1, "", "series"], [74, 2, 1, "", "to_expr"], [74, 2, 1, "", "to_hyper"], [74, 2, 1, "", "to_meijerg"], [74, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[79, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[79, 3, 1, "", "components"], [79, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[79, 1, 1, "", "Integral"], [79, 3, 1, "", "integrate"], [79, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[79, 2, 1, "", "as_sum"], [79, 2, 1, "", "doit"], [79, 4, 1, "", "free_symbols"], [79, 6, 1, "", "is_commutative"], [79, 2, 1, "", "principal_value"], [79, 2, 1, "", "transform"]], "sympy.integrals": [[79, 0, 0, "-", "intpoly"], [77, 0, 0, "-", "meijerint"], [77, 0, 0, "-", "meijerint_doc"], [79, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[79, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[79, 3, 1, "", "integral_steps"], [79, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[77, 7, 1, "", "_CoeffExpValueError"], [77, 3, 1, "", "_check_antecedents"], [77, 3, 1, "", "_check_antecedents_1"], [77, 3, 1, "", "_check_antecedents_inversion"], [77, 3, 1, "", "_condsimp"], [77, 3, 1, "", "_create_lookup_table"], [77, 3, 1, "", "_dummy"], [77, 3, 1, "", "_dummy_"], [77, 3, 1, "", "_eval_cond"], [77, 3, 1, "", "_exponents"], [77, 3, 1, "", "_find_splitting_points"], [77, 3, 1, "", "_flip_g"], [77, 3, 1, "", "_functions"], [77, 3, 1, "", "_get_coeff_exp"], [77, 3, 1, "", "_guess_expansion"], [77, 3, 1, "", "_inflate_fox_h"], [77, 3, 1, "", "_inflate_g"], [77, 3, 1, "", "_int0oo"], [77, 3, 1, "", "_int0oo_1"], [77, 3, 1, "", "_int_inversion"], [77, 3, 1, "", "_is_analytic"], [77, 3, 1, "", "_meijerint_definite_2"], [77, 3, 1, "", "_meijerint_definite_3"], [77, 3, 1, "", "_meijerint_definite_4"], [77, 3, 1, "", "_meijerint_indefinite_1"], [77, 3, 1, "", "_mul_args"], [77, 3, 1, "", "_mul_as_two_parts"], [77, 3, 1, "", "_my_principal_branch"], [77, 3, 1, "", "_mytype"], [77, 3, 1, "", "_rewrite1"], [77, 3, 1, "", "_rewrite2"], [77, 3, 1, "", "_rewrite_inversion"], [77, 3, 1, "", "_rewrite_saxena"], [77, 3, 1, "", "_rewrite_saxena_1"], [77, 3, 1, "", "_rewrite_single"], [77, 3, 1, "", "_split_mul"], [77, 3, 1, "", "meijerint_definite"], [77, 3, 1, "", "meijerint_indefinite"], [77, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[79, 3, 1, "", "gauss_chebyshev_t"], [79, 3, 1, "", "gauss_chebyshev_u"], [79, 3, 1, "", "gauss_gen_laguerre"], [79, 3, 1, "", "gauss_hermite"], [79, 3, 1, "", "gauss_jacobi"], [79, 3, 1, "", "gauss_laguerre"], [79, 3, 1, "", "gauss_legendre"], [79, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[79, 3, 1, "", "ratint"], [79, 3, 1, "", "ratint_logpart"], [79, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[79, 1, 1, "", "NonElementaryIntegral"], [79, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[79, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[79, 1, 1, "", "CosineTransform"], [79, 1, 1, "", "FourierTransform"], [79, 1, 1, "", "HankelTransform"], [79, 1, 1, "", "IntegralTransform"], [79, 7, 1, "", "IntegralTransformError"], [79, 1, 1, "", "InverseCosineTransform"], [79, 1, 1, "", "InverseFourierTransform"], [79, 1, 1, "", "InverseHankelTransform"], [79, 1, 1, "", "InverseLaplaceTransform"], [79, 1, 1, "", "InverseMellinTransform"], [79, 1, 1, "", "InverseSineTransform"], [79, 1, 1, "", "LaplaceTransform"], [79, 1, 1, "", "MellinTransform"], [79, 1, 1, "", "SineTransform"], [79, 3, 1, "", "_fast_inverse_laplace"], [79, 3, 1, "", "_fourier_transform"], [79, 3, 1, "", "cosine_transform"], [79, 3, 1, "", "fourier_transform"], [79, 3, 1, "", "hankel_transform"], [79, 3, 1, "", "inverse_cosine_transform"], [79, 3, 1, "", "inverse_fourier_transform"], [79, 3, 1, "", "inverse_hankel_transform"], [79, 3, 1, "", "inverse_laplace_transform"], [79, 3, 1, "", "inverse_mellin_transform"], [79, 3, 1, "", "inverse_sine_transform"], [79, 3, 1, "", "laplace_transform"], [79, 3, 1, "", "mellin_transform"], [79, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[79, 2, 1, "", "doit"], [79, 4, 1, "", "function"], [79, 4, 1, "", "function_variable"], [79, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[79, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[80, 0, 0, "-", "printing"], [80, 0, 0, "-", "session"]], "sympy.interactive.printing": [[80, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[80, 3, 1, "", "enable_automatic_int_sympification"], [80, 3, 1, "", "enable_automatic_symbols"], [80, 3, 1, "", "init_ipython_session"], [80, 3, 1, "", "init_python_session"], [80, 3, 1, "", "init_session"], [80, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[81, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[81, 1, 1, "", "CartanType_generator"], [81, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[81, 2, 1, "", "rank"], [81, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[81, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[81, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[81, 2, 1, "", "add_as_roots"], [81, 2, 1, "", "add_simple_roots"], [81, 2, 1, "", "all_roots"], [81, 2, 1, "", "cartan_matrix"], [81, 2, 1, "", "dynkin_diagram"], [81, 2, 1, "", "root_space"], [81, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[81, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[81, 2, 1, "", "basic_root"], [81, 2, 1, "", "basis"], [81, 2, 1, "", "cartan_matrix"], [81, 2, 1, "", "dimension"], [81, 2, 1, "", "highest_root"], [81, 2, 1, "", "lie_algebra"], [81, 2, 1, "", "positive_roots"], [81, 2, 1, "", "roots"], [81, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[81, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[81, 2, 1, "", "basic_root"], [81, 2, 1, "", "basis"], [81, 2, 1, "", "cartan_matrix"], [81, 2, 1, "", "dimension"], [81, 2, 1, "", "lie_algebra"], [81, 2, 1, "", "positive_roots"], [81, 2, 1, "", "roots"], [81, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[81, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[81, 2, 1, "", "basic_root"], [81, 2, 1, "", "basis"], [81, 2, 1, "", "cartan_matrix"], [81, 2, 1, "", "dimension"], [81, 2, 1, "", "lie_algebra"], [81, 2, 1, "", "positive_roots"], [81, 2, 1, "", "roots"], [81, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[81, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[81, 2, 1, "", "basic_root"], [81, 2, 1, "", "basis"], [81, 2, 1, "", "cartan_matrix"], [81, 2, 1, "", "dimension"], [81, 2, 1, "", "lie_algebra"], [81, 2, 1, "", "positive_roots"], [81, 2, 1, "", "roots"], [81, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[81, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[81, 2, 1, "", "basic_root"], [81, 2, 1, "", "basis"], [81, 2, 1, "", "cartan_matrix"], [81, 2, 1, "", "dimension"], [81, 2, 1, "", "positive_roots"], [81, 2, 1, "", "roots"], [81, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[81, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[81, 2, 1, "", "basic_root"], [81, 2, 1, "", "basis"], [81, 2, 1, "", "cartan_matrix"], [81, 2, 1, "", "dimension"], [81, 2, 1, "", "positive_roots"], [81, 2, 1, "", "roots"], [81, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[81, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[81, 2, 1, "", "basis"], [81, 2, 1, "", "cartan_matrix"], [81, 2, 1, "", "dimension"], [81, 2, 1, "", "positive_roots"], [81, 2, 1, "", "roots"], [81, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[81, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[81, 2, 1, "", "coxeter_diagram"], [81, 2, 1, "", "delete_doubles"], [81, 2, 1, "", "element_order"], [81, 2, 1, "", "generators"], [81, 2, 1, "", "group_name"], [81, 2, 1, "", "group_order"], [81, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[82, 3, 1, "", "ANFform"], [82, 1, 1, "", "And"], [82, 1, 1, "", "Boolean"], [82, 1, 1, "", "BooleanFalse"], [82, 1, 1, "", "BooleanTrue"], [82, 1, 1, "", "Equivalent"], [82, 1, 1, "", "Exclusive"], [82, 1, 1, "", "ITE"], [82, 1, 1, "", "Implies"], [82, 1, 1, "", "Nand"], [82, 1, 1, "", "Nor"], [82, 1, 1, "", "Not"], [82, 1, 1, "", "Or"], [82, 3, 1, "", "POSform"], [82, 3, 1, "", "SOPform"], [82, 1, 1, "", "Xnor"], [82, 1, 1, "", "Xor"], [82, 3, 1, "", "anf_coeffs"], [82, 3, 1, "", "bool_map"], [82, 3, 1, "", "bool_maxterm"], [82, 3, 1, "", "bool_minterm"], [82, 3, 1, "", "bool_monomial"], [82, 3, 1, "", "distribute_and_over_or"], [82, 3, 1, "", "distribute_or_over_and"], [82, 3, 1, "", "distribute_xor_over_and"], [82, 3, 1, "", "eliminate_implications"], [82, 3, 1, "", "gateinputcount"], [82, 3, 1, "", "integer_to_term"], [82, 3, 1, "", "is_anf"], [82, 3, 1, "", "is_cnf"], [82, 3, 1, "", "is_dnf"], [82, 3, 1, "", "is_nnf"], [82, 3, 1, "", "simplify_logic"], [82, 3, 1, "", "term_to_integer"], [82, 3, 1, "", "to_anf"], [82, 3, 1, "", "to_cnf"], [82, 3, 1, "", "to_dnf"], [82, 3, 1, "", "to_int_repr"], [82, 3, 1, "", "to_nnf"], [82, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[82, 2, 1, "", "as_set"], [82, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[82, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[82, 2, 1, "", "as_set"]], "sympy.logic": [[82, 0, 0, "-", "inference"]], "sympy.logic.inference": [[82, 3, 1, "", "satisfiable"]], "sympy.matrices": [[83, 0, 0, "-", "common"], [85, 0, 0, "-", "expressions"], [86, 0, 0, "-", "immutable"], [88, 0, 0, "-", "matrices"], [90, 0, 0, "-", "sparse"], [91, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[83, 1, 1, "", "MatrixCommon"], [83, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[83, 4, 1, "", "C"], [83, 4, 1, "", "H"], [83, 4, 1, "", "T"], [83, 2, 1, "", "__abs__"], [83, 2, 1, "", "__add__"], [83, 2, 1, "", "__getitem__"], [83, 2, 1, "", "__len__"], [83, 2, 1, "", "__mul__"], [83, 2, 1, "", "__pow__"], [83, 5, 1, "", "__weakref__"], [83, 2, 1, "", "adjoint"], [83, 2, 1, "", "applyfunc"], [83, 2, 1, "", "as_real_imag"], [83, 2, 1, "", "atoms"], [83, 2, 1, "", "col"], [83, 2, 1, "", "col_del"], [83, 2, 1, "", "col_insert"], [83, 2, 1, "", "col_join"], [83, 2, 1, "", "companion"], [83, 2, 1, "", "conjugate"], [83, 2, 1, "", "diag"], [83, 2, 1, "", "diagonal"], [83, 2, 1, "", "evalf"], [83, 2, 1, "", "expand"], [83, 2, 1, "", "extract"], [83, 2, 1, "", "eye"], [83, 4, 1, "", "free_symbols"], [83, 2, 1, "", "get_diag_blocks"], [83, 2, 1, "", "has"], [83, 2, 1, "", "hstack"], [83, 2, 1, "", "is_anti_symmetric"], [83, 2, 1, "", "is_diagonal"], [83, 4, 1, "", "is_hermitian"], [83, 4, 1, "", "is_lower"], [83, 4, 1, "", "is_lower_hessenberg"], [83, 4, 1, "", "is_square"], [83, 4, 1, "", "is_strongly_diagonally_dominant"], [83, 2, 1, "", "is_symbolic"], [83, 2, 1, "", "is_symmetric"], [83, 4, 1, "", "is_upper"], [83, 4, 1, "", "is_upper_hessenberg"], [83, 4, 1, "", "is_weakly_diagonally_dominant"], [83, 4, 1, "", "is_zero_matrix"], [83, 2, 1, "", "jordan_block"], [83, 2, 1, "", "lower_triangular"], [83, 2, 1, "", "multiply"], [83, 2, 1, "", "multiply_elementwise"], [83, 2, 1, "", "n"], [83, 2, 1, "", "ones"], [83, 2, 1, "", "permute"], [83, 2, 1, "", "permute_cols"], [83, 2, 1, "", "permute_rows"], [83, 2, 1, "", "pow"], [83, 2, 1, "", "refine"], [83, 2, 1, "", "replace"], [83, 2, 1, "", "reshape"], [83, 2, 1, "", "rmultiply"], [83, 2, 1, "", "rot90"], [83, 2, 1, "", "row"], [83, 2, 1, "", "row_del"], [83, 2, 1, "", "row_insert"], [83, 2, 1, "", "row_join"], [83, 4, 1, "", "shape"], [83, 2, 1, "", "simplify"], [83, 2, 1, "", "subs"], [83, 2, 1, "", "todod"], [83, 2, 1, "", "todok"], [83, 2, 1, "", "tolist"], [83, 2, 1, "", "trace"], [83, 2, 1, "", "transpose"], [83, 2, 1, "", "upper_triangular"], [83, 2, 1, "", "values"], [83, 2, 1, "", "vec"], [83, 2, 1, "", "vech"], [83, 2, 1, "", "vstack"], [83, 2, 1, "", "wilkinson"], [83, 2, 1, "", "xreplace"], [83, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[84, 1, 1, "", "DenseMatrix"], [88, 3, 1, "", "GramSchmidt"], [84, 5, 1, "", "Matrix"], [84, 1, 1, "", "MutableDenseMatrix"], [88, 3, 1, "", "casoratian"], [88, 3, 1, "", "diag"], [88, 3, 1, "", "eye"], [88, 3, 1, "", "hessian"], [88, 3, 1, "", "jordan_cell"], [88, 3, 1, "", "list2numpy"], [88, 3, 1, "", "matrix2numpy"], [88, 3, 1, "", "matrix_multiply_elementwise"], [88, 3, 1, "", "ones"], [88, 3, 1, "", "randMatrix"], [88, 3, 1, "", "rot_axis1"], [88, 3, 1, "", "rot_axis2"], [88, 3, 1, "", "rot_axis3"], [88, 3, 1, "", "symarray"], [88, 3, 1, "", "wronskian"], [88, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[84, 2, 1, "", "LDLdecomposition"], [84, 2, 1, "", "as_immutable"], [84, 2, 1, "", "as_mutable"], [84, 2, 1, "", "cholesky"], [84, 2, 1, "", "lower_triangular_solve"], [84, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[84, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[85, 1, 1, "", "CompanionMatrix"], [85, 1, 1, "", "FunctionMatrix"], [85, 1, 1, "", "HadamardPower"], [85, 1, 1, "", "HadamardProduct"], [85, 1, 1, "", "Identity"], [85, 1, 1, "", "Inverse"], [85, 1, 1, "", "MatAdd"], [85, 1, 1, "", "MatMul"], [85, 1, 1, "", "MatPow"], [85, 1, 1, "", "MatrixExpr"], [85, 1, 1, "", "MatrixPermute"], [85, 1, 1, "", "MatrixSet"], [85, 1, 1, "", "MatrixSymbol"], [85, 1, 1, "", "PermutationMatrix"], [85, 1, 1, "", "Trace"], [85, 1, 1, "", "Transpose"], [85, 1, 1, "", "ZeroMatrix"], [85, 0, 0, "-", "blockmatrix"]], "sympy.matrices.expressions.MatrixExpr": [[85, 4, 1, "", "T"], [85, 2, 1, "", "as_coeff_Mul"], [85, 2, 1, "", "as_explicit"], [85, 2, 1, "", "as_mutable"], [85, 2, 1, "", "equals"], [85, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[85, 1, 1, "", "BlockDiagMatrix"], [85, 1, 1, "", "BlockMatrix"], [85, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[85, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[85, 2, 1, "", "LDUdecomposition"], [85, 2, 1, "", "LUdecomposition"], [85, 2, 1, "", "UDLdecomposition"], [85, 2, 1, "", "schur"], [85, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[86, 1, 1, "", "ImmutableDenseMatrix"], [86, 5, 1, "", "ImmutableMatrix"], [90, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[88, 1, 1, "", "MatrixBase"], [88, 1, 1, "", "MatrixCalculus"], [88, 1, 1, "", "MatrixDeterminant"], [88, 1, 1, "", "MatrixEigen"], [88, 1, 1, "", "MatrixError"], [88, 1, 1, "", "MatrixReductions"], [88, 1, 1, "", "MatrixSubspaces"], [88, 1, 1, "", "NonSquareMatrixError"], [88, 1, 1, "", "ShapeError"], [88, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[88, 4, 1, "", "D"], [88, 2, 1, "", "LDLdecomposition"], [88, 2, 1, "", "LDLsolve"], [88, 2, 1, "", "LUdecomposition"], [88, 2, 1, "", "LUdecompositionFF"], [88, 2, 1, "", "LUdecomposition_Simple"], [88, 2, 1, "", "LUsolve"], [88, 2, 1, "", "QRdecomposition"], [88, 2, 1, "", "QRsolve"], [88, 2, 1, "", "add"], [88, 2, 1, "", "analytic_func"], [88, 2, 1, "", "cholesky"], [88, 2, 1, "", "cholesky_solve"], [88, 2, 1, "", "condition_number"], [88, 2, 1, "", "connected_components"], [88, 2, 1, "", "connected_components_decomposition"], [88, 2, 1, "", "copy"], [88, 2, 1, "", "cross"], [88, 2, 1, "", "diagonal_solve"], [88, 2, 1, "", "dot"], [88, 2, 1, "", "dual"], [88, 2, 1, "", "exp"], [88, 2, 1, "", "gauss_jordan_solve"], [88, 2, 1, "", "inv"], [88, 2, 1, "", "inv_mod"], [88, 2, 1, "", "inverse_ADJ"], [88, 2, 1, "", "inverse_BLOCK"], [88, 2, 1, "", "inverse_CH"], [88, 2, 1, "", "inverse_GE"], [88, 2, 1, "", "inverse_LDL"], [88, 2, 1, "", "inverse_LU"], [88, 2, 1, "", "inverse_QR"], [88, 2, 1, "", "irregular"], [88, 2, 1, "", "is_nilpotent"], [88, 2, 1, "", "key2bounds"], [88, 2, 1, "", "key2ij"], [88, 2, 1, "", "log"], [88, 2, 1, "", "lower_triangular_solve"], [88, 2, 1, "", "norm"], [88, 2, 1, "", "normalized"], [88, 2, 1, "", "pinv"], [88, 2, 1, "", "pinv_solve"], [88, 2, 1, "", "print_nonzero"], [88, 2, 1, "", "project"], [88, 2, 1, "", "rank_decomposition"], [88, 2, 1, "", "singular_value_decomposition"], [88, 2, 1, "", "solve"], [88, 2, 1, "", "solve_least_squares"], [88, 2, 1, "", "strongly_connected_components"], [88, 2, 1, "", "strongly_connected_components_decomposition"], [88, 2, 1, "", "table"], [88, 2, 1, "", "upper_hessenberg_decomposition"], [88, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[88, 2, 1, "", "diff"], [88, 2, 1, "", "integrate"], [88, 2, 1, "", "jacobian"], [88, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[88, 2, 1, "", "adjugate"], [88, 2, 1, "", "charpoly"], [88, 2, 1, "", "cofactor"], [88, 2, 1, "", "cofactor_matrix"], [88, 2, 1, "", "det"], [88, 2, 1, "", "minor"], [88, 2, 1, "", "minor_submatrix"], [88, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[88, 2, 1, "", "bidiagonal_decomposition"], [88, 2, 1, "", "bidiagonalize"], [88, 2, 1, "", "diagonalize"], [88, 2, 1, "", "eigenvals"], [88, 2, 1, "", "eigenvects"], [88, 2, 1, "", "is_diagonalizable"], [88, 4, 1, "", "is_indefinite"], [88, 4, 1, "", "is_negative_definite"], [88, 4, 1, "", "is_negative_semidefinite"], [88, 4, 1, "", "is_positive_definite"], [88, 4, 1, "", "is_positive_semidefinite"], [88, 2, 1, "", "jordan_form"], [88, 2, 1, "", "left_eigenvects"], [88, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[88, 2, 1, "", "echelon_form"], [88, 2, 1, "", "elementary_col_op"], [88, 2, 1, "", "elementary_row_op"], [88, 4, 1, "", "is_echelon"], [88, 2, 1, "", "rank"], [88, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[88, 2, 1, "", "columnspace"], [88, 2, 1, "", "nullspace"], [88, 2, 1, "", "orthogonalize"], [88, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[89, 3, 1, "", "hermite_normal_form"], [89, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[90, 1, 1, "", "MutableSparseMatrix"], [90, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[91, 2, 1, "", "_csrtodok"], [91, 2, 1, "", "_doktocsr"], [91, 2, 1, "", "banded"]], "sympy.ntheory": [[92, 0, 0, "-", "bbp_pi"], [92, 0, 0, "-", "continued_fraction"], [92, 0, 0, "-", "digits"], [92, 0, 0, "-", "ecm"], [92, 0, 0, "-", "egyptian_fraction"], [92, 0, 0, "-", "factor_"], [92, 0, 0, "-", "generate"], [92, 1, 1, "", "mobius"], [92, 0, 0, "-", "modular"], [92, 0, 0, "-", "multinomial"], [92, 0, 0, "-", "partitions_"], [92, 0, 0, "-", "primetest"], [92, 0, 0, "-", "qs"], [92, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[92, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[92, 3, 1, "", "continued_fraction"], [92, 3, 1, "", "continued_fraction_convergents"], [92, 3, 1, "", "continued_fraction_iterator"], [92, 3, 1, "", "continued_fraction_periodic"], [92, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[92, 3, 1, "", "count_digits"], [92, 3, 1, "", "digits"], [92, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[92, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[92, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[92, 3, 1, "", "abundance"], [92, 3, 1, "", "antidivisor_count"], [92, 3, 1, "", "antidivisors"], [92, 3, 1, "", "core"], [92, 3, 1, "", "digits"], [92, 3, 1, "", "divisor_count"], [92, 1, 1, "", "divisor_sigma"], [92, 3, 1, "", "divisors"], [92, 3, 1, "", "factorint"], [92, 3, 1, "", "factorrat"], [92, 3, 1, "", "is_abundant"], [92, 3, 1, "", "is_amicable"], [92, 3, 1, "", "is_deficient"], [92, 3, 1, "", "is_mersenne_prime"], [92, 3, 1, "", "is_perfect"], [92, 3, 1, "", "mersenne_prime_exponent"], [92, 3, 1, "", "multiplicity"], [92, 3, 1, "", "perfect_power"], [92, 3, 1, "", "pollard_pm1"], [92, 3, 1, "", "pollard_rho"], [92, 3, 1, "", "primefactors"], [92, 1, 1, "", "primenu"], [92, 1, 1, "", "primeomega"], [92, 3, 1, "", "proper_divisor_count"], [92, 3, 1, "", "proper_divisors"], [92, 1, 1, "", "reduced_totient"], [92, 3, 1, "", "smoothness"], [92, 3, 1, "", "smoothness_p"], [92, 1, 1, "", "totient"], [92, 3, 1, "", "trailing"], [92, 3, 1, "", "udivisor_count"], [92, 1, 1, "", "udivisor_sigma"], [92, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[92, 1, 1, "", "Sieve"], [92, 3, 1, "", "composite"], [92, 3, 1, "", "compositepi"], [92, 3, 1, "", "cycle_length"], [92, 3, 1, "", "nextprime"], [92, 3, 1, "", "prevprime"], [92, 3, 1, "", "prime"], [92, 3, 1, "", "primepi"], [92, 3, 1, "", "primerange"], [92, 3, 1, "", "primorial"], [92, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[92, 2, 1, "", "extend"], [92, 2, 1, "", "extend_to_no"], [92, 2, 1, "", "mobiusrange"], [92, 2, 1, "", "primerange"], [92, 2, 1, "", "search"], [92, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[92, 3, 1, "", "crt"], [92, 3, 1, "", "crt1"], [92, 3, 1, "", "crt2"], [92, 3, 1, "", "solve_congruence"], [92, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[92, 3, 1, "", "binomial_coefficients"], [92, 3, 1, "", "binomial_coefficients_list"], [92, 3, 1, "", "multinomial_coefficients"], [92, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[92, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[92, 3, 1, "", "is_euler_pseudoprime"], [92, 3, 1, "", "is_extra_strong_lucas_prp"], [92, 3, 1, "", "is_gaussian_prime"], [92, 3, 1, "", "is_lucas_prp"], [92, 3, 1, "", "is_square"], [92, 3, 1, "", "is_strong_lucas_prp"], [92, 3, 1, "", "isprime"], [92, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[92, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[92, 3, 1, "", "discrete_log"], [92, 3, 1, "", "is_nthpow_residue"], [92, 3, 1, "", "is_primitive_root"], [92, 3, 1, "", "is_quad_residue"], [92, 3, 1, "", "jacobi_symbol"], [92, 3, 1, "", "legendre_symbol"], [92, 3, 1, "", "n_order"], [92, 3, 1, "", "nthroot_mod"], [92, 3, 1, "", "primitive_root"], [92, 3, 1, "", "quadratic_residues"], [92, 3, 1, "", "sqrt_mod"], [92, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[94, 1, 1, "", "LaTeXParsingError"], [94, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[94, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[94, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[94, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[94, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[94, 2, 1, "", "convert_to_c"], [94, 2, 1, "", "convert_to_expr"], [94, 2, 1, "", "convert_to_fortran"], [94, 2, 1, "", "convert_to_python"], [94, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[94, 3, 1, "", "auto_number"], [94, 3, 1, "", "auto_symbol"], [94, 3, 1, "", "convert_xor"], [94, 3, 1, "", "eval_expr"], [94, 3, 1, "", "factorial_notation"], [94, 3, 1, "", "function_exponentiation"], [94, 3, 1, "", "implicit_application"], [94, 3, 1, "", "implicit_multiplication"], [94, 3, 1, "", "implicit_multiplication_application"], [94, 3, 1, "", "lambda_notation"], [94, 3, 1, "", "parse_expr"], [94, 3, 1, "", "rationalize"], [94, 3, 1, "", "repeated_decimals"], [94, 3, 1, "", "split_symbols"], [94, 3, 1, "", "split_symbols_custom"], [94, 6, 1, "", "standard_transformations"], [94, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[95, 0, 0, "-", "beam"], [98, 0, 0, "-", "truss"]], "sympy.physics.continuum_mechanics.beam": [[95, 1, 1, "", "Beam"], [95, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[95, 4, 1, "", "applied_loads"], [95, 2, 1, "", "apply_load"], [95, 2, 1, "", "apply_support"], [95, 4, 1, "", "area"], [95, 2, 1, "", "bending_moment"], [95, 4, 1, "", "boundary_conditions"], [95, 4, 1, "", "cross_section"], [95, 2, 1, "", "deflection"], [95, 2, 1, "", "draw"], [95, 4, 1, "", "elastic_modulus"], [95, 4, 1, "", "ild_moment"], [95, 4, 1, "", "ild_reactions"], [95, 4, 1, "", "ild_shear"], [95, 2, 1, "", "join"], [95, 4, 1, "", "length"], [95, 4, 1, "", "load"], [95, 2, 1, "", "max_bmoment"], [95, 2, 1, "", "max_deflection"], [95, 2, 1, "", "max_shear_force"], [95, 2, 1, "", "plot_bending_moment"], [95, 2, 1, "", "plot_deflection"], [95, 2, 1, "", "plot_ild_moment"], [95, 2, 1, "", "plot_ild_reactions"], [95, 2, 1, "", "plot_ild_shear"], [95, 2, 1, "", "plot_loading_results"], [95, 2, 1, "", "plot_shear_force"], [95, 2, 1, "", "plot_shear_stress"], [95, 2, 1, "", "plot_slope"], [95, 2, 1, "", "point_cflexure"], [95, 4, 1, "", "reaction_loads"], [95, 2, 1, "", "remove_load"], [95, 4, 1, "", "second_moment"], [95, 2, 1, "", "shear_force"], [95, 2, 1, "", "shear_stress"], [95, 2, 1, "", "slope"], [95, 2, 1, "", "solve_for_ild_moment"], [95, 2, 1, "", "solve_for_ild_reactions"], [95, 2, 1, "", "solve_for_ild_shear"], [95, 2, 1, "", "solve_for_reaction_loads"], [95, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[95, 2, 1, "", "apply_load"], [95, 2, 1, "", "apply_moment_load"], [95, 4, 1, "", "area"], [95, 2, 1, "", "axial_force"], [95, 2, 1, "", "axial_stress"], [95, 2, 1, "", "bending_moment"], [95, 4, 1, "", "boundary_conditions"], [95, 2, 1, "", "deflection"], [95, 4, 1, "", "load_vector"], [95, 2, 1, "", "max_bending_moment"], [95, 2, 1, "", "max_bmoment"], [95, 2, 1, "", "max_deflection"], [95, 2, 1, "", "max_shear_force"], [95, 4, 1, "", "moment_load_vector"], [95, 2, 1, "", "plot_bending_moment"], [95, 2, 1, "", "plot_deflection"], [95, 2, 1, "", "plot_loading_results"], [95, 2, 1, "", "plot_shear_force"], [95, 2, 1, "", "plot_shear_stress"], [95, 2, 1, "", "plot_slope"], [95, 2, 1, "", "polar_moment"], [95, 4, 1, "", "second_moment"], [95, 2, 1, "", "shear_force"], [95, 4, 1, "", "shear_modulus"], [95, 2, 1, "", "shear_stress"], [95, 2, 1, "", "slope"], [95, 2, 1, "", "solve_for_reaction_loads"], [95, 2, 1, "", "torsional_moment"]], "sympy.physics.continuum_mechanics.truss": [[98, 1, 1, "", "Truss"]], "sympy.physics.continuum_mechanics.truss.Truss": [[98, 2, 1, "", "add_member"], [98, 2, 1, "", "add_node"], [98, 2, 1, "", "apply_load"], [98, 2, 1, "", "apply_support"], [98, 2, 1, "", "change_member_label"], [98, 2, 1, "", "change_node_label"], [98, 4, 1, "", "internal_forces"], [98, 4, 1, "", "loads"], [98, 4, 1, "", "member_labels"], [98, 4, 1, "", "members"], [98, 4, 1, "", "node_labels"], [98, 4, 1, "", "node_positions"], [98, 4, 1, "", "nodes"], [98, 4, 1, "", "reaction_loads"], [98, 2, 1, "", "remove_load"], [98, 2, 1, "", "remove_member"], [98, 2, 1, "", "remove_node"], [98, 2, 1, "", "remove_support"], [98, 4, 1, "", "supports"]], "sympy.physics": [[101, 0, 0, "-", "control"], [104, 0, 0, "-", "hydrogen"], [105, 0, 0, "-", "matrices"], [125, 0, 0, "-", "mechanics"], [140, 0, 0, "-", "paulialgebra"], [141, 0, 0, "-", "qho_1d"], [165, 0, 0, "-", "secondquant"], [166, 0, 0, "-", "sho"], [181, 0, 0, "-", "vector"], [184, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[100, 2, 1, "", "bode_magnitude_numerical_data"], [100, 2, 1, "", "bode_magnitude_plot"], [100, 2, 1, "", "bode_phase_numerical_data"], [100, 2, 1, "", "bode_phase_plot"], [100, 2, 1, "", "bode_plot"], [100, 2, 1, "", "impulse_response_numerical_data"], [100, 2, 1, "", "impulse_response_plot"], [100, 2, 1, "", "pole_zero_numerical_data"], [100, 2, 1, "", "pole_zero_plot"], [100, 2, 1, "", "ramp_response_numerical_data"], [100, 2, 1, "", "ramp_response_plot"], [100, 2, 1, "", "step_response_numerical_data"], [100, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[102, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[102, 1, 1, "", "Feedback"], [102, 1, 1, "", "MIMOFeedback"], [102, 1, 1, "", "MIMOParallel"], [102, 1, 1, "", "MIMOSeries"], [102, 1, 1, "", "Parallel"], [102, 1, 1, "", "Series"], [102, 1, 1, "", "TransferFunction"], [102, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[102, 2, 1, "", "doit"], [102, 4, 1, "", "sensitivity"], [102, 4, 1, "", "sign"], [102, 4, 1, "", "sys1"], [102, 4, 1, "", "sys2"], [102, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[102, 2, 1, "", "doit"], [102, 4, 1, "", "sensitivity"], [102, 4, 1, "", "sign"], [102, 4, 1, "", "sys1"], [102, 4, 1, "", "sys2"], [102, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[102, 2, 1, "", "doit"], [102, 4, 1, "", "num_inputs"], [102, 4, 1, "", "num_outputs"], [102, 4, 1, "", "shape"], [102, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[102, 2, 1, "", "doit"], [102, 4, 1, "", "num_inputs"], [102, 4, 1, "", "num_outputs"], [102, 4, 1, "", "shape"], [102, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[102, 2, 1, "", "doit"], [102, 4, 1, "", "is_biproper"], [102, 4, 1, "", "is_proper"], [102, 4, 1, "", "is_strictly_proper"], [102, 2, 1, "", "to_expr"], [102, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[102, 2, 1, "", "doit"], [102, 4, 1, "", "is_biproper"], [102, 4, 1, "", "is_proper"], [102, 4, 1, "", "is_strictly_proper"], [102, 2, 1, "", "to_expr"], [102, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[102, 2, 1, "", "dc_gain"], [102, 4, 1, "", "den"], [102, 2, 1, "", "expand"], [102, 2, 1, "", "from_rational_expression"], [102, 4, 1, "", "is_biproper"], [102, 4, 1, "", "is_proper"], [102, 2, 1, "", "is_stable"], [102, 4, 1, "", "is_strictly_proper"], [102, 4, 1, "", "num"], [102, 2, 1, "", "poles"], [102, 2, 1, "", "to_expr"], [102, 4, 1, "", "var"], [102, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[102, 2, 1, "", "elem_poles"], [102, 2, 1, "", "elem_zeros"], [102, 2, 1, "", "expand"], [102, 2, 1, "", "from_Matrix"], [102, 4, 1, "", "num_inputs"], [102, 4, 1, "", "num_outputs"], [102, 4, 1, "", "shape"], [102, 2, 1, "", "transpose"], [102, 4, 1, "", "var"]], "sympy.physics.hep": [[103, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[103, 3, 1, "", "extract_type_tens"], [103, 3, 1, "", "gamma_trace"], [103, 3, 1, "", "kahane_simplify"], [103, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[104, 3, 1, "", "E_nl"], [104, 3, 1, "", "E_nl_dirac"], [104, 3, 1, "", "Psi_nlm"], [104, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[105, 3, 1, "", "mdft"], [105, 3, 1, "", "mgamma"], [105, 3, 1, "", "msigma"], [105, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[107, 0, 0, "-", "body"], [108, 3, 1, "", "find_dynamicsymbols"], [109, 0, 0, "-", "joint"], [109, 0, 0, "-", "jointsmethod"], [110, 0, 0, "-", "kane"], [110, 0, 0, "-", "lagrange"], [111, 0, 0, "-", "linearize"], [108, 3, 1, "", "msubs"], [112, 0, 0, "-", "particle"], [112, 0, 0, "-", "rigidbody"], [114, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[107, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[107, 2, 1, "", "ang_vel_in"], [107, 2, 1, "", "apply_force"], [107, 2, 1, "", "apply_torque"], [107, 2, 1, "", "clear_loads"], [107, 2, 1, "", "dcm"], [107, 2, 1, "", "kinetic_energy"], [107, 2, 1, "", "masscenter_vel"], [107, 2, 1, "", "remove_load"], [107, 4, 1, "", "x"], [107, 4, 1, "", "y"], [107, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[112, 3, 1, "", "Lagrangian"], [112, 3, 1, "", "angular_momentum"], [112, 3, 1, "", "inertia"], [112, 3, 1, "", "inertia_of_point_mass"], [112, 3, 1, "", "kinetic_energy"], [112, 3, 1, "", "linear_momentum"], [112, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[109, 1, 1, "", "Joint"], [109, 1, 1, "", "PinJoint"], [109, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[109, 4, 1, "", "child"], [109, 4, 1, "", "child_axis"], [109, 4, 1, "", "child_point"], [109, 4, 1, "", "coordinates"], [109, 4, 1, "", "kdes"], [109, 4, 1, "", "parent"], [109, 4, 1, "", "parent_axis"], [109, 4, 1, "", "parent_point"], [109, 4, 1, "", "speeds"]], "sympy.physics.mechanics.jointsmethod": [[109, 1, 1, "", "JointsMethod"]], "sympy.physics.mechanics.jointsmethod.JointsMethod": [[109, 4, 1, "", "bodies"], [109, 4, 1, "", "forcing"], [109, 4, 1, "", "forcing_full"], [109, 2, 1, "", "form_eoms"], [109, 4, 1, "", "kdes"], [109, 4, 1, "", "loads"], [109, 4, 1, "", "mass_matrix"], [109, 4, 1, "", "mass_matrix_full"], [109, 4, 1, "", "method"], [109, 4, 1, "", "q"], [109, 2, 1, "", "rhs"], [109, 4, 1, "", "u"]], "sympy.physics.mechanics.kane": [[110, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[110, 4, 1, "", "auxiliary_eqs"], [110, 4, 1, "", "forcing"], [110, 4, 1, "", "forcing_full"], [110, 2, 1, "", "kanes_equations"], [110, 2, 1, "", "kindiffdict"], [110, 2, 1, "", "linearize"], [110, 4, 1, "", "mass_matrix"], [110, 4, 1, "", "mass_matrix_full"], [110, 2, 1, "", "rhs"], [110, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[110, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[110, 4, 1, "", "forcing"], [110, 4, 1, "", "forcing_full"], [110, 2, 1, "", "form_lagranges_equations"], [110, 2, 1, "", "linearize"], [110, 4, 1, "", "mass_matrix"], [110, 4, 1, "", "mass_matrix_full"], [110, 2, 1, "", "rhs"], [110, 2, 1, "", "solve_multipliers"], [110, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[111, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[111, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[112, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[112, 2, 1, "", "angular_momentum"], [112, 2, 1, "", "kinetic_energy"], [112, 2, 1, "", "linear_momentum"], [112, 4, 1, "", "mass"], [112, 2, 1, "", "parallel_axis"], [112, 4, 1, "", "point"], [112, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[112, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[112, 2, 1, "", "angular_momentum"], [112, 4, 1, "", "central_inertia"], [112, 2, 1, "", "kinetic_energy"], [112, 2, 1, "", "linear_momentum"], [112, 2, 1, "", "parallel_axis"], [112, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[114, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[114, 4, 1, "", "alg_con"], [114, 4, 1, "", "bodies"], [114, 4, 1, "", "comb_explicit_rhs"], [114, 4, 1, "", "comb_implicit_mat"], [114, 4, 1, "", "comb_implicit_rhs"], [114, 2, 1, "", "compute_explicit_form"], [114, 2, 1, "", "constant_symbols"], [114, 4, 1, "", "coordinates"], [114, 4, 1, "", "dyn_implicit_mat"], [114, 4, 1, "", "dyn_implicit_rhs"], [114, 2, 1, "", "dynamic_symbols"], [114, 4, 1, "", "kin_explicit_rhs"], [114, 4, 1, "", "loads"], [114, 4, 1, "", "speeds"], [114, 4, 1, "", "states"]], "sympy.physics.optics": [[134, 0, 0, "-", "gaussopt"], [136, 0, 0, "-", "medium"], [137, 0, 0, "-", "polarization"], [138, 0, 0, "-", "utils"], [139, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[134, 1, 1, "", "BeamParameter"], [134, 1, 1, "", "CurvedMirror"], [134, 1, 1, "", "CurvedRefraction"], [134, 1, 1, "", "FlatMirror"], [134, 1, 1, "", "FlatRefraction"], [134, 1, 1, "", "FreeSpace"], [134, 1, 1, "", "GeometricRay"], [134, 1, 1, "", "RayTransferMatrix"], [134, 1, 1, "", "ThinLens"], [134, 3, 1, "", "conjugate_gauss_beams"], [134, 3, 1, "", "gaussian_conj"], [134, 3, 1, "", "geometric_conj_ab"], [134, 3, 1, "", "geometric_conj_af"], [134, 3, 1, "", "geometric_conj_bf"], [134, 3, 1, "", "rayleigh2waist"], [134, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[134, 4, 1, "", "divergence"], [134, 4, 1, "", "gouy"], [134, 4, 1, "", "q"], [134, 4, 1, "", "radius"], [134, 4, 1, "", "w"], [134, 4, 1, "", "w_0"], [134, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[134, 4, 1, "", "angle"], [134, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[134, 4, 1, "", "A"], [134, 4, 1, "", "B"], [134, 4, 1, "", "C"], [134, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[136, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[136, 4, 1, "", "refractive_index"], [136, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[137, 3, 1, "", "half_wave_retarder"], [137, 3, 1, "", "jones_2_stokes"], [137, 3, 1, "", "jones_vector"], [137, 3, 1, "", "linear_polarizer"], [137, 3, 1, "", "mueller_matrix"], [137, 3, 1, "", "phase_retarder"], [137, 3, 1, "", "polarizing_beam_splitter"], [137, 3, 1, "", "quarter_wave_retarder"], [137, 3, 1, "", "reflective_filter"], [137, 3, 1, "", "stokes_vector"], [137, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[138, 3, 1, "", "brewster_angle"], [138, 3, 1, "", "critical_angle"], [138, 3, 1, "", "deviation"], [138, 3, 1, "", "fresnel_coefficients"], [138, 3, 1, "", "hyperfocal_distance"], [138, 3, 1, "", "lens_formula"], [138, 3, 1, "", "lens_makers_formula"], [138, 3, 1, "", "mirror_formula"], [138, 3, 1, "", "refraction_angle"], [138, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[139, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[139, 4, 1, "", "amplitude"], [139, 4, 1, "", "angular_velocity"], [139, 4, 1, "", "frequency"], [139, 4, 1, "", "n"], [139, 4, 1, "", "phase"], [139, 4, 1, "", "speed"], [139, 4, 1, "", "time_period"], [139, 4, 1, "", "wavelength"], [139, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[140, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[141, 3, 1, "", "E_n"], [141, 3, 1, "", "coherent_state"], [141, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[142, 0, 0, "-", "anticommutator"], [143, 0, 0, "-", "cartesian"], [144, 0, 0, "-", "cg"], [145, 0, 0, "-", "circuitplot"], [146, 0, 0, "-", "commutator"], [147, 0, 0, "-", "constants"], [148, 0, 0, "-", "dagger"], [149, 0, 0, "-", "gate"], [150, 0, 0, "-", "grover"], [151, 0, 0, "-", "hilbert"], [153, 0, 0, "-", "innerproduct"], [154, 0, 0, "-", "operator"], [155, 0, 0, "-", "operatorset"], [156, 0, 0, "-", "piab"], [157, 0, 0, "-", "qapply"], [158, 0, 0, "-", "qft"], [159, 0, 0, "-", "qubit"], [160, 0, 0, "-", "represent"], [161, 0, 0, "-", "shor"], [162, 0, 0, "-", "spin"], [163, 0, 0, "-", "state"], [164, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[142, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[142, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[143, 1, 1, "", "PositionBra3D"], [143, 1, 1, "", "PositionKet3D"], [143, 1, 1, "", "PositionState3D"], [143, 1, 1, "", "PxBra"], [143, 1, 1, "", "PxKet"], [143, 1, 1, "", "PxOp"], [143, 1, 1, "", "XBra"], [143, 1, 1, "", "XKet"], [143, 1, 1, "", "XOp"], [143, 1, 1, "", "YOp"], [143, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[143, 4, 1, "", "position_x"], [143, 4, 1, "", "position_y"], [143, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[143, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[143, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[143, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[143, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[144, 1, 1, "", "CG"], [144, 1, 1, "", "Wigner3j"], [144, 1, 1, "", "Wigner6j"], [144, 1, 1, "", "Wigner9j"], [144, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[145, 1, 1, "", "CircuitPlot"], [145, 3, 1, "", "CreateCGate"], [145, 1, 1, "", "Mx"], [145, 1, 1, "", "Mz"], [145, 3, 1, "", "circuit_plot"], [145, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[145, 2, 1, "", "control_line"], [145, 2, 1, "", "control_point"], [145, 2, 1, "", "not_point"], [145, 2, 1, "", "one_qubit_box"], [145, 2, 1, "", "swap_point"], [145, 2, 1, "", "two_qubit_box"], [145, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[146, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[146, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[147, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[148, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[149, 1, 1, "", "CGate"], [149, 1, 1, "", "CGateS"], [149, 5, 1, "", "CNOT"], [149, 1, 1, "", "CNotGate"], [149, 1, 1, "", "Gate"], [149, 5, 1, "", "H"], [149, 1, 1, "", "HadamardGate"], [149, 1, 1, "", "IdentityGate"], [149, 1, 1, "", "OneQubitGate"], [149, 5, 1, "", "Phase"], [149, 1, 1, "", "PhaseGate"], [149, 5, 1, "", "S"], [149, 5, 1, "", "SWAP"], [149, 1, 1, "", "SwapGate"], [149, 5, 1, "", "T"], [149, 1, 1, "", "TGate"], [149, 1, 1, "", "TwoQubitGate"], [149, 1, 1, "", "UGate"], [149, 5, 1, "", "X"], [149, 1, 1, "", "XGate"], [149, 5, 1, "", "Y"], [149, 1, 1, "", "YGate"], [149, 5, 1, "", "Z"], [149, 1, 1, "", "ZGate"], [149, 3, 1, "", "gate_simp"], [149, 3, 1, "", "gate_sort"], [149, 3, 1, "", "normalized"], [149, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[149, 4, 1, "", "controls"], [149, 2, 1, "", "decompose"], [149, 2, 1, "", "eval_controls"], [149, 4, 1, "", "gate"], [149, 4, 1, "", "min_qubits"], [149, 4, 1, "", "nqubits"], [149, 2, 1, "", "plot_gate"], [149, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[149, 4, 1, "", "controls"], [149, 4, 1, "", "gate"], [149, 4, 1, "", "min_qubits"], [149, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[149, 2, 1, "", "get_target_matrix"], [149, 4, 1, "", "min_qubits"], [149, 4, 1, "", "nqubits"], [149, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[149, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[149, 2, 1, "", "get_target_matrix"], [149, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[150, 1, 1, "", "OracleGate"], [150, 1, 1, "", "WGate"], [150, 3, 1, "", "apply_grover"], [150, 3, 1, "", "grover_iteration"], [150, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[150, 4, 1, "", "search_function"], [150, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[151, 1, 1, "", "ComplexSpace"], [151, 1, 1, "", "DirectSumHilbertSpace"], [151, 1, 1, "", "FockSpace"], [151, 1, 1, "", "HilbertSpace"], [151, 1, 1, "", "L2"], [151, 1, 1, "", "TensorPowerHilbertSpace"], [151, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[151, 2, 1, "", "eval"], [151, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[151, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[151, 2, 1, "", "eval"], [151, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[153, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[154, 1, 1, "", "DifferentialOperator"], [154, 1, 1, "", "HermitianOperator"], [154, 1, 1, "", "IdentityOperator"], [154, 1, 1, "", "Operator"], [154, 1, 1, "", "OuterProduct"], [154, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[154, 4, 1, "", "expr"], [154, 4, 1, "", "free_symbols"], [154, 4, 1, "", "function"], [154, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[154, 4, 1, "", "bra"], [154, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[155, 3, 1, "", "operators_to_state"], [155, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[156, 1, 1, "", "PIABBra"], [156, 1, 1, "", "PIABHamiltonian"], [156, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[157, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[158, 1, 1, "", "IQFT"], [158, 1, 1, "", "QFT"], [158, 5, 1, "", "Rk"], [158, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[158, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[158, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[159, 1, 1, "", "IntQubit"], [159, 1, 1, "", "IntQubitBra"], [159, 1, 1, "", "Qubit"], [159, 1, 1, "", "QubitBra"], [159, 3, 1, "", "matrix_to_density"], [159, 3, 1, "", "matrix_to_qubit"], [159, 3, 1, "", "measure_all"], [159, 3, 1, "", "measure_all_oneshot"], [159, 3, 1, "", "measure_partial"], [159, 3, 1, "", "measure_partial_oneshot"], [159, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[160, 3, 1, "", "enumerate_states"], [160, 3, 1, "", "get_basis"], [160, 3, 1, "", "integrate_result"], [160, 3, 1, "", "rep_expectation"], [160, 3, 1, "", "rep_innerproduct"], [160, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[161, 1, 1, "", "CMod"], [161, 3, 1, "", "period_find"], [161, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[161, 4, 1, "", "N"], [161, 4, 1, "", "a"], [161, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[162, 1, 1, "", "J2Op"], [162, 1, 1, "", "JxBra"], [162, 1, 1, "", "JxBraCoupled"], [162, 1, 1, "", "JxKet"], [162, 1, 1, "", "JxKetCoupled"], [162, 1, 1, "", "JyBra"], [162, 1, 1, "", "JyBraCoupled"], [162, 1, 1, "", "JyKet"], [162, 1, 1, "", "JyKetCoupled"], [162, 1, 1, "", "JzBra"], [162, 1, 1, "", "JzBraCoupled"], [162, 1, 1, "", "JzKet"], [162, 1, 1, "", "JzKetCoupled"], [162, 1, 1, "", "JzOp"], [162, 1, 1, "", "Rotation"], [162, 1, 1, "", "WignerD"], [162, 3, 1, "", "couple"], [162, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[162, 2, 1, "", "D"], [162, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[163, 1, 1, "", "Bra"], [163, 1, 1, "", "BraBase"], [163, 1, 1, "", "Ket"], [163, 1, 1, "", "KetBase"], [163, 1, 1, "", "OrthogonalBra"], [163, 1, 1, "", "OrthogonalKet"], [163, 1, 1, "", "OrthogonalState"], [163, 1, 1, "", "State"], [163, 1, 1, "", "StateBase"], [163, 1, 1, "", "TimeDepBra"], [163, 1, 1, "", "TimeDepKet"], [163, 1, 1, "", "TimeDepState"], [163, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[163, 4, 1, "", "dual"], [163, 2, 1, "", "dual_class"], [163, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[163, 4, 1, "", "label"], [163, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[163, 4, 1, "", "expr"], [163, 4, 1, "", "is_commutative"], [163, 4, 1, "", "is_normalized"], [163, 4, 1, "", "limits"], [163, 4, 1, "", "norm"], [163, 2, 1, "", "normalize"], [163, 2, 1, "", "prob"], [163, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[164, 1, 1, "", "TensorProduct"], [164, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[165, 1, 1, "", "AnnihilateBoson"], [165, 1, 1, "", "AnnihilateFermion"], [165, 1, 1, "", "AntiSymmetricTensor"], [165, 5, 1, "", "B"], [165, 5, 1, "", "BBra"], [165, 5, 1, "", "BKet"], [165, 5, 1, "", "Bd"], [165, 1, 1, "", "BosonicBasis"], [165, 1, 1, "", "Commutator"], [165, 1, 1, "", "CreateBoson"], [165, 1, 1, "", "CreateFermion"], [165, 1, 1, "", "Dagger"], [165, 5, 1, "", "F"], [165, 5, 1, "", "FBra"], [165, 5, 1, "", "FKet"], [165, 5, 1, "", "Fd"], [165, 1, 1, "", "FixedBosonicBasis"], [165, 1, 1, "", "FockState"], [165, 1, 1, "", "FockStateBosonBra"], [165, 1, 1, "", "FockStateBosonKet"], [165, 1, 1, "", "FockStateBra"], [165, 1, 1, "", "FockStateFermionBra"], [165, 1, 1, "", "FockStateFermionKet"], [165, 1, 1, "", "FockStateKet"], [165, 1, 1, "", "InnerProduct"], [165, 1, 1, "", "KroneckerDelta"], [165, 1, 1, "", "NO"], [165, 1, 1, "", "PermutationOperator"], [165, 1, 1, "", "VarBosonicBasis"], [165, 3, 1, "", "apply_operators"], [165, 3, 1, "", "contraction"], [165, 3, 1, "", "evaluate_deltas"], [165, 3, 1, "", "matrix_rep"], [165, 3, 1, "", "simplify_index_permutations"], [165, 3, 1, "", "substitute_dummies"], [165, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[165, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[165, 2, 1, "", "apply_operator"], [165, 4, 1, "", "is_only_q_annihilator"], [165, 4, 1, "", "is_only_q_creator"], [165, 4, 1, "", "is_q_annihilator"], [165, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[165, 4, 1, "", "lower"], [165, 4, 1, "", "symbol"], [165, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[165, 2, 1, "", "doit"], [165, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[165, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[165, 2, 1, "", "apply_operator"], [165, 4, 1, "", "is_only_q_annihilator"], [165, 4, 1, "", "is_only_q_creator"], [165, 4, 1, "", "is_q_annihilator"], [165, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[165, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[165, 2, 1, "", "index"], [165, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[165, 4, 1, "", "bra"], [165, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[165, 2, 1, "", "eval"], [165, 4, 1, "", "indices_contain_equal_information"], [165, 4, 1, "", "is_above_fermi"], [165, 4, 1, "", "is_below_fermi"], [165, 4, 1, "", "is_only_above_fermi"], [165, 4, 1, "", "is_only_below_fermi"], [165, 4, 1, "", "killable_index"], [165, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[165, 2, 1, "", "doit"], [165, 2, 1, "", "get_subNO"], [165, 4, 1, "", "has_q_annihilators"], [165, 4, 1, "", "has_q_creators"], [165, 2, 1, "", "iter_q_annihilators"], [165, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[165, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[165, 2, 1, "", "index"], [165, 2, 1, "", "state"]], "sympy.physics.sho": [[166, 3, 1, "", "E_nl"], [166, 3, 1, "", "R_nl"]], "sympy.physics.units": [[167, 0, 0, "-", "dimensions"], [171, 0, 0, "-", "prefixes"], [172, 0, 0, "-", "quantities"], [173, 0, 0, "-", "unitsystem"], [172, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[167, 1, 1, "", "Dimension"], [167, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[167, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[167, 4, 1, "", "can_transf_matrix"], [167, 4, 1, "", "dim"], [167, 2, 1, "", "dim_can_vector"], [167, 2, 1, "", "dim_vector"], [167, 4, 1, "", "inv_can_transf_matrix"], [167, 4, 1, "", "is_consistent"], [167, 2, 1, "", "is_dimensionless"], [167, 4, 1, "", "list_can_dims"], [167, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[171, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[172, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[172, 4, 1, "", "abbrev"], [172, 2, 1, "", "convert_to"], [172, 4, 1, "", "free_symbols"], [172, 4, 1, "", "is_prefixed"], [172, 4, 1, "", "scale_factor"], [172, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[173, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[173, 4, 1, "", "dim"], [173, 2, 1, "", "extend"], [173, 2, 1, "", "get_units_non_prefixed"], [173, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[172, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[175, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[175, 2, 1, "", "applyfunc"], [175, 2, 1, "", "cross"], [175, 2, 1, "", "doit"], [175, 2, 1, "", "dot"], [175, 2, 1, "", "dt"], [175, 2, 1, "", "express"], [175, 4, 1, "", "func"], [175, 2, 1, "", "simplify"], [175, 2, 1, "", "subs"], [175, 2, 1, "", "to_matrix"], [175, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[177, 3, 1, "", "dynamicsymbols"], [178, 0, 0, "-", "functions"], [178, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[176, 3, 1, "", "curl"], [176, 3, 1, "", "divergence"], [176, 3, 1, "", "gradient"], [176, 3, 1, "", "is_conservative"], [176, 3, 1, "", "is_solenoidal"], [176, 3, 1, "", "scalar_potential"], [176, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[175, 1, 1, "", "CoordinateSym"], [175, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[175, 2, 1, "", "ang_acc_in"], [175, 2, 1, "", "ang_vel_in"], [175, 2, 1, "", "dcm"], [175, 2, 1, "", "orient"], [175, 2, 1, "", "orient_axis"], [175, 2, 1, "", "orient_body_fixed"], [175, 2, 1, "", "orient_explicit"], [175, 2, 1, "", "orient_quaternion"], [175, 2, 1, "", "orient_space_fixed"], [175, 2, 1, "", "orientnew"], [175, 2, 1, "", "partial_velocity"], [175, 2, 1, "", "set_ang_acc"], [175, 2, 1, "", "set_ang_vel"], [175, 2, 1, "", "variable_map"], [175, 4, 1, "", "x"], [175, 4, 1, "", "y"], [175, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[177, 3, 1, "", "cross"], [177, 3, 1, "", "dot"], [177, 3, 1, "", "express"], [178, 3, 1, "", "get_motion_params"], [178, 3, 1, "", "kinematic_equations"], [177, 3, 1, "", "outer"], [178, 3, 1, "", "partial_velocity"], [177, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[178, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[178, 2, 1, "", "a1pt_theory"], [178, 2, 1, "", "a2pt_theory"], [178, 2, 1, "", "acc"], [178, 2, 1, "", "locatenew"], [178, 2, 1, "", "partial_velocity"], [178, 2, 1, "", "pos_from"], [178, 2, 1, "", "set_acc"], [178, 2, 1, "", "set_pos"], [178, 2, 1, "", "set_vel"], [178, 2, 1, "", "v1pt_theory"], [178, 2, 1, "", "v2pt_theory"], [178, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[179, 3, 1, "", "init_vprinting"], [179, 3, 1, "", "vlatex"], [179, 3, 1, "", "vpprint"], [179, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[175, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[175, 2, 1, "", "angle_between"], [175, 2, 1, "", "applyfunc"], [175, 2, 1, "", "cross"], [175, 2, 1, "", "diff"], [175, 2, 1, "", "doit"], [175, 2, 1, "", "dot"], [175, 2, 1, "", "dt"], [175, 2, 1, "", "express"], [175, 2, 1, "", "free_dynamicsymbols"], [175, 2, 1, "", "free_symbols"], [175, 4, 1, "", "func"], [175, 2, 1, "", "magnitude"], [175, 2, 1, "", "normalize"], [175, 2, 1, "", "outer"], [175, 2, 1, "", "separate"], [175, 2, 1, "", "simplify"], [175, 2, 1, "", "subs"], [175, 2, 1, "", "to_matrix"], [175, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[184, 3, 1, "", "clebsch_gordan"], [184, 3, 1, "", "dot_rot_grad_Ynm"], [184, 3, 1, "", "gaunt"], [184, 3, 1, "", "racah"], [184, 3, 1, "", "wigner_3j"], [184, 3, 1, "", "wigner_6j"], [184, 3, 1, "", "wigner_9j"], [184, 3, 1, "", "wigner_d"], [184, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[185, 0, 0, "-", "plot"], [185, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[185, 1, 1, "", "BaseBackend"], [185, 1, 1, "", "BaseSeries"], [185, 1, 1, "", "Line2DBaseSeries"], [185, 1, 1, "", "Line3DBaseSeries"], [185, 1, 1, "", "LineOver1DRangeSeries"], [185, 1, 1, "", "MatplotlibBackend"], [185, 1, 1, "", "Parametric2DLineSeries"], [185, 1, 1, "", "Parametric3DLineSeries"], [185, 1, 1, "", "ParametricSurfaceSeries"], [185, 1, 1, "", "Plot"], [185, 1, 1, "", "PlotGrid"], [185, 1, 1, "", "SurfaceBaseSeries"], [185, 1, 1, "", "SurfaceOver2DRangeSeries"], [185, 1, 1, "", "TextBackend"], [185, 3, 1, "", "plot"], [185, 3, 1, "", "plot3d"], [185, 3, 1, "", "plot3d_parametric_line"], [185, 3, 1, "", "plot3d_parametric_surface"], [185, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[185, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[185, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[185, 2, 1, "", "get_segments"], [185, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[185, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[185, 2, 1, "", "append"], [185, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[185, 1, 1, "", "ImplicitSeries"], [185, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[185, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[186, 1, 1, "", "ExtensionElement"], [186, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[186, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[186, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[186, 1, 1, "", "ModuleHomomorphism"], [186, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[186, 2, 1, "", "image"], [186, 2, 1, "", "is_injective"], [186, 2, 1, "", "is_isomorphism"], [186, 2, 1, "", "is_surjective"], [186, 2, 1, "", "is_zero"], [186, 2, 1, "", "kernel"], [186, 2, 1, "", "quotient_codomain"], [186, 2, 1, "", "quotient_domain"], [186, 2, 1, "", "restrict_codomain"], [186, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[186, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[186, 2, 1, "", "contains"], [186, 2, 1, "", "depth"], [186, 2, 1, "", "height"], [186, 2, 1, "", "intersect"], [186, 2, 1, "", "is_maximal"], [186, 2, 1, "", "is_primary"], [186, 2, 1, "", "is_prime"], [186, 2, 1, "", "is_principal"], [186, 2, 1, "", "is_radical"], [186, 2, 1, "", "is_whole_ring"], [186, 2, 1, "", "is_zero"], [186, 2, 1, "", "product"], [186, 2, 1, "", "quotient"], [186, 2, 1, "", "radical"], [186, 2, 1, "", "reduce_element"], [186, 2, 1, "", "saturate"], [186, 2, 1, "", "subset"], [186, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[186, 1, 1, "", "FreeModule"], [186, 1, 1, "", "FreeModuleElement"], [186, 1, 1, "", "Module"], [186, 1, 1, "", "QuotientModule"], [186, 1, 1, "", "QuotientModuleElement"], [186, 1, 1, "", "SubModule"], [186, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[186, 2, 1, "", "basis"], [186, 2, 1, "", "convert"], [186, 5, 1, "", "dtype"], [186, 2, 1, "", "identity_hom"], [186, 2, 1, "", "is_submodule"], [186, 2, 1, "", "is_zero"], [186, 2, 1, "", "multiply_ideal"], [186, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[186, 2, 1, "", "contains"], [186, 2, 1, "", "convert"], [186, 2, 1, "", "identity_hom"], [186, 2, 1, "", "is_submodule"], [186, 2, 1, "", "is_zero"], [186, 2, 1, "", "multiply_ideal"], [186, 2, 1, "", "quotient_module"], [186, 2, 1, "", "submodule"], [186, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[186, 2, 1, "", "convert"], [186, 5, 1, "", "dtype"], [186, 2, 1, "", "identity_hom"], [186, 2, 1, "", "is_submodule"], [186, 2, 1, "", "is_zero"], [186, 2, 1, "", "quotient_hom"], [186, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[186, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[186, 2, 1, "", "convert"], [186, 2, 1, "", "identity_hom"], [186, 2, 1, "", "in_terms_of_generators"], [186, 2, 1, "", "inclusion_hom"], [186, 2, 1, "", "intersect"], [186, 2, 1, "", "is_full_module"], [186, 2, 1, "", "is_submodule"], [186, 2, 1, "", "is_zero"], [186, 2, 1, "", "module_quotient"], [186, 2, 1, "", "multiply_ideal"], [186, 2, 1, "", "quotient_module"], [186, 2, 1, "", "reduce_element"], [186, 2, 1, "", "submodule"], [186, 2, 1, "", "syzygy_module"], [186, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[186, 2, 1, "", "is_full_module"], [186, 2, 1, "", "quotient_hom"]], "sympy.polys.constructor": [[195, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[192, 3, 1, "", "dmp_abs"], [192, 3, 1, "", "dmp_add"], [192, 3, 1, "", "dmp_add_ground"], [192, 3, 1, "", "dmp_add_mul"], [192, 3, 1, "", "dmp_add_term"], [192, 3, 1, "", "dmp_div"], [192, 3, 1, "", "dmp_expand"], [192, 3, 1, "", "dmp_exquo"], [192, 3, 1, "", "dmp_exquo_ground"], [192, 3, 1, "", "dmp_ff_div"], [192, 3, 1, "", "dmp_l1_norm"], [192, 3, 1, "", "dmp_max_norm"], [192, 3, 1, "", "dmp_mul"], [192, 3, 1, "", "dmp_mul_ground"], [192, 3, 1, "", "dmp_mul_term"], [192, 3, 1, "", "dmp_neg"], [192, 3, 1, "", "dmp_pdiv"], [192, 3, 1, "", "dmp_pexquo"], [192, 3, 1, "", "dmp_pow"], [192, 3, 1, "", "dmp_pquo"], [192, 3, 1, "", "dmp_prem"], [192, 3, 1, "", "dmp_quo"], [192, 3, 1, "", "dmp_quo_ground"], [192, 3, 1, "", "dmp_rem"], [192, 3, 1, "", "dmp_rr_div"], [192, 3, 1, "", "dmp_sqr"], [192, 3, 1, "", "dmp_sub"], [192, 3, 1, "", "dmp_sub_ground"], [192, 3, 1, "", "dmp_sub_mul"], [192, 3, 1, "", "dmp_sub_term"], [192, 3, 1, "", "dup_lshift"], [192, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[192, 3, 1, "", "dmp_LC"], [192, 3, 1, "", "dmp_TC"], [192, 3, 1, "", "dmp_apply_pairs"], [192, 3, 1, "", "dmp_convert"], [192, 3, 1, "", "dmp_copy"], [192, 3, 1, "", "dmp_deflate"], [192, 3, 1, "", "dmp_degree"], [192, 3, 1, "", "dmp_degree_in"], [192, 3, 1, "", "dmp_degree_list"], [192, 3, 1, "", "dmp_eject"], [192, 3, 1, "", "dmp_exclude"], [192, 3, 1, "", "dmp_from_dict"], [192, 3, 1, "", "dmp_from_sympy"], [192, 3, 1, "", "dmp_ground"], [192, 3, 1, "", "dmp_ground_LC"], [192, 3, 1, "", "dmp_ground_TC"], [192, 3, 1, "", "dmp_ground_nth"], [192, 3, 1, "", "dmp_ground_p"], [192, 3, 1, "", "dmp_grounds"], [192, 3, 1, "", "dmp_include"], [192, 3, 1, "", "dmp_inflate"], [192, 3, 1, "", "dmp_inject"], [192, 3, 1, "", "dmp_list_terms"], [192, 3, 1, "", "dmp_multi_deflate"], [192, 3, 1, "", "dmp_negative_p"], [192, 3, 1, "", "dmp_nest"], [192, 3, 1, "", "dmp_normal"], [192, 3, 1, "", "dmp_nth"], [192, 3, 1, "", "dmp_one"], [192, 3, 1, "", "dmp_one_p"], [192, 3, 1, "", "dmp_permute"], [192, 3, 1, "", "dmp_positive_p"], [192, 3, 1, "", "dmp_raise"], [192, 3, 1, "", "dmp_slice"], [192, 3, 1, "", "dmp_strip"], [192, 3, 1, "", "dmp_swap"], [192, 3, 1, "", "dmp_terms_gcd"], [192, 3, 1, "", "dmp_to_dict"], [192, 3, 1, "", "dmp_to_tuple"], [192, 3, 1, "", "dmp_true_LT"], [192, 3, 1, "", "dmp_validate"], [192, 3, 1, "", "dmp_zero"], [192, 3, 1, "", "dmp_zero_p"], [192, 3, 1, "", "dmp_zeros"], [192, 3, 1, "", "dup_random"], [192, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[192, 3, 1, "", "dmp_clear_denoms"], [192, 3, 1, "", "dmp_compose"], [192, 3, 1, "", "dmp_diff"], [192, 3, 1, "", "dmp_diff_eval_in"], [192, 3, 1, "", "dmp_diff_in"], [192, 3, 1, "", "dmp_eval"], [192, 3, 1, "", "dmp_eval_in"], [192, 3, 1, "", "dmp_eval_tail"], [192, 3, 1, "", "dmp_ground_content"], [192, 3, 1, "", "dmp_ground_extract"], [192, 3, 1, "", "dmp_ground_monic"], [192, 3, 1, "", "dmp_ground_primitive"], [192, 3, 1, "", "dmp_ground_trunc"], [192, 3, 1, "", "dmp_integrate"], [192, 3, 1, "", "dmp_integrate_in"], [192, 3, 1, "", "dmp_lift"], [192, 3, 1, "", "dmp_revert"], [192, 3, 1, "", "dmp_trunc"], [192, 3, 1, "", "dup_content"], [192, 3, 1, "", "dup_decompose"], [192, 3, 1, "", "dup_extract"], [192, 3, 1, "", "dup_mirror"], [192, 3, 1, "", "dup_monic"], [192, 3, 1, "", "dup_primitive"], [192, 3, 1, "", "dup_real_imag"], [192, 3, 1, "", "dup_scale"], [192, 3, 1, "", "dup_shift"], [192, 3, 1, "", "dup_sign_variations"], [192, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[195, 3, 1, "", "dispersion"], [195, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[192, 3, 1, "", "sdm_LC"], [192, 3, 1, "", "sdm_LM"], [192, 3, 1, "", "sdm_LT"], [192, 3, 1, "", "sdm_add"], [192, 3, 1, "", "sdm_deg"], [192, 3, 1, "", "sdm_ecart"], [192, 3, 1, "", "sdm_from_dict"], [192, 3, 1, "", "sdm_from_vector"], [192, 3, 1, "", "sdm_groebner"], [192, 3, 1, "", "sdm_monomial_deg"], [192, 3, 1, "", "sdm_monomial_divides"], [192, 3, 1, "", "sdm_monomial_mul"], [192, 3, 1, "", "sdm_mul_term"], [192, 3, 1, "", "sdm_nf_mora"], [192, 3, 1, "", "sdm_spoly"], [192, 3, 1, "", "sdm_to_dict"], [192, 3, 1, "", "sdm_to_vector"], [192, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[190, 1, 1, "", "AlgebraicField"], [190, 1, 1, "", "ComplexField"], [190, 1, 1, "", "ExpressionDomain"], [190, 1, 1, "", "FiniteField"], [190, 1, 1, "", "FractionField"], [190, 1, 1, "", "GMPYFiniteField"], [190, 1, 1, "", "GMPYIntegerRing"], [190, 1, 1, "", "GMPYRationalField"], [190, 1, 1, "", "IntegerRing"], [190, 1, 1, "", "PolynomialRing"], [190, 1, 1, "", "PythonFiniteField"], [190, 1, 1, "", "PythonIntegerRing"], [190, 1, 1, "", "PythonRationalField"], [190, 1, 1, "", "RationalField"], [190, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[190, 2, 1, "", "algebraic_field"], [190, 2, 1, "", "denom"], [190, 2, 1, "", "discriminant"], [190, 5, 1, "", "dtype"], [190, 5, 1, "", "ext"], [190, 2, 1, "", "from_AlgebraicField"], [190, 2, 1, "", "from_GaussianIntegerRing"], [190, 2, 1, "", "from_GaussianRationalField"], [190, 2, 1, "", "from_QQ"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "integral_basis"], [190, 2, 1, "", "is_negative"], [190, 2, 1, "", "is_nonnegative"], [190, 2, 1, "", "is_nonpositive"], [190, 2, 1, "", "is_positive"], [190, 2, 1, "", "maximal_order"], [190, 5, 1, "", "mod"], [190, 2, 1, "", "numer"], [190, 5, 1, "", "orig_ext"], [190, 2, 1, "", "primes_above"], [190, 2, 1, "", "to_alg_num"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[190, 2, 1, "", "almosteq"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "get_exact"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "is_negative"], [190, 2, 1, "", "is_nonnegative"], [190, 2, 1, "", "is_nonpositive"], [190, 2, 1, "", "is_positive"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[190, 1, 1, "", "Expression"], [190, 2, 1, "", "denom"], [190, 5, 1, "", "dtype"], [190, 2, 1, "", "from_ExpressionDomain"], [190, 2, 1, "", "from_FractionField"], [190, 2, 1, "", "from_GaussianIntegerRing"], [190, 2, 1, "", "from_GaussianRationalField"], [190, 2, 1, "", "from_PolynomialRing"], [190, 2, 1, "", "from_QQ"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "get_field"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "is_negative"], [190, 2, 1, "", "is_nonnegative"], [190, 2, 1, "", "is_nonpositive"], [190, 2, 1, "", "is_positive"], [190, 2, 1, "", "numer"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[190, 2, 1, "", "characteristic"], [190, 2, 1, "", "from_FF"], [190, 2, 1, "", "from_FF_gmpy"], [190, 2, 1, "", "from_FF_python"], [190, 2, 1, "", "from_QQ"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "get_field"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[190, 2, 1, "", "denom"], [190, 2, 1, "", "factorial"], [190, 2, 1, "", "from_AlgebraicField"], [190, 2, 1, "", "from_ComplexField"], [190, 2, 1, "", "from_FractionField"], [190, 2, 1, "", "from_GaussianIntegerRing"], [190, 2, 1, "", "from_GaussianRationalField"], [190, 2, 1, "", "from_PolynomialRing"], [190, 2, 1, "", "from_QQ"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "is_negative"], [190, 2, 1, "", "is_nonnegative"], [190, 2, 1, "", "is_nonpositive"], [190, 2, 1, "", "is_positive"], [190, 2, 1, "", "numer"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[190, 2, 1, "", "factorial"], [190, 2, 1, "", "from_FF_gmpy"], [190, 2, 1, "", "from_FF_python"], [190, 2, 1, "", "from_QQ"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "gcdex"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "sqrt"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[190, 2, 1, "", "denom"], [190, 2, 1, "", "div"], [190, 2, 1, "", "exquo"], [190, 2, 1, "", "factorial"], [190, 2, 1, "", "from_GaussianRationalField"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "numer"], [190, 2, 1, "", "quo"], [190, 2, 1, "", "rem"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[190, 2, 1, "", "algebraic_field"], [190, 2, 1, "", "factorial"], [190, 2, 1, "", "from_AlgebraicField"], [190, 2, 1, "", "from_FF"], [190, 2, 1, "", "from_FF_gmpy"], [190, 2, 1, "", "from_FF_python"], [190, 2, 1, "", "from_QQ"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "gcdex"], [190, 2, 1, "", "get_field"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "log"], [190, 2, 1, "", "sqrt"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[190, 2, 1, "", "factorial"], [190, 2, 1, "", "from_AlgebraicField"], [190, 2, 1, "", "from_ComplexField"], [190, 2, 1, "", "from_FractionField"], [190, 2, 1, "", "from_GaussianIntegerRing"], [190, 2, 1, "", "from_GaussianRationalField"], [190, 2, 1, "", "from_GlobalPolynomialRing"], [190, 2, 1, "", "from_PolynomialRing"], [190, 2, 1, "", "from_QQ"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "gcdex"], [190, 2, 1, "", "get_field"], [190, 2, 1, "", "is_negative"], [190, 2, 1, "", "is_nonnegative"], [190, 2, 1, "", "is_nonpositive"], [190, 2, 1, "", "is_positive"], [190, 2, 1, "", "is_unit"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[190, 2, 1, "", "algebraic_field"], [190, 2, 1, "", "denom"], [190, 2, 1, "", "div"], [190, 2, 1, "", "exquo"], [190, 2, 1, "", "from_AlgebraicField"], [190, 2, 1, "", "from_GaussianRationalField"], [190, 2, 1, "", "from_QQ"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "numer"], [190, 2, 1, "", "quo"], [190, 2, 1, "", "rem"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[190, 2, 1, "", "almosteq"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "get_exact"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "to_rational"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[190, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[190, 2, 1, "", "drop"], [190, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[190, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[190, 2, 1, "", "abs"], [190, 2, 1, "", "add"], [190, 2, 1, "", "alg_field_from_poly"], [190, 2, 1, "", "algebraic_field"], [190, 2, 1, "", "almosteq"], [190, 2, 1, "", "characteristic"], [190, 2, 1, "", "cofactors"], [190, 2, 1, "", "convert"], [190, 2, 1, "", "convert_from"], [190, 2, 1, "", "cyclotomic_field"], [190, 2, 1, "", "denom"], [190, 2, 1, "", "div"], [190, 2, 1, "", "drop"], [190, 5, 1, "", "dtype"], [190, 2, 1, "", "evalf"], [190, 2, 1, "", "exquo"], [190, 2, 1, "", "frac_field"], [190, 2, 1, "", "from_AlgebraicField"], [190, 2, 1, "", "from_ComplexField"], [190, 2, 1, "", "from_ExpressionDomain"], [190, 2, 1, "", "from_ExpressionRawDomain"], [190, 2, 1, "", "from_FF"], [190, 2, 1, "", "from_FF_gmpy"], [190, 2, 1, "", "from_FF_python"], [190, 2, 1, "", "from_FractionField"], [190, 2, 1, "", "from_GlobalPolynomialRing"], [190, 2, 1, "", "from_MonogenicFiniteExtension"], [190, 2, 1, "", "from_PolynomialRing"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_RealField"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "gcdex"], [190, 2, 1, "", "get_exact"], [190, 2, 1, "", "get_field"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "half_gcdex"], [190, 5, 1, "", "has_assoc_Field"], [190, 5, 1, "", "has_assoc_Ring"], [190, 2, 1, "", "inject"], [190, 2, 1, "", "invert"], [190, 5, 1, "", "is_Field"], [190, 5, 1, "", "is_PID"], [190, 5, 1, "", "is_Ring"], [190, 2, 1, "", "is_negative"], [190, 2, 1, "", "is_nonnegative"], [190, 2, 1, "", "is_nonpositive"], [190, 2, 1, "", "is_one"], [190, 2, 1, "", "is_positive"], [190, 2, 1, "", "is_zero"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "log"], [190, 2, 1, "", "map"], [190, 2, 1, "", "mul"], [190, 2, 1, "", "n"], [190, 2, 1, "", "neg"], [190, 2, 1, "", "numer"], [190, 2, 1, "", "of_type"], [190, 2, 1, "", "old_frac_field"], [190, 2, 1, "", "old_poly_ring"], [190, 5, 1, "", "one"], [190, 2, 1, "", "poly_ring"], [190, 2, 1, "", "pos"], [190, 2, 1, "", "pow"], [190, 2, 1, "", "quo"], [190, 2, 1, "", "rem"], [190, 2, 1, "", "revert"], [190, 2, 1, "", "sqrt"], [190, 2, 1, "", "sub"], [190, 2, 1, "", "to_sympy"], [190, 4, 1, "", "tp"], [190, 2, 1, "", "unify"], [190, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[190, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[190, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[190, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[190, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[190, 2, 1, "", "div"], [190, 2, 1, "", "exquo"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "get_field"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "is_unit"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "quo"], [190, 2, 1, "", "rem"], [190, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[190, 1, 1, "", "GaussianDomain"], [190, 1, 1, "", "GaussianElement"], [190, 1, 1, "", "GaussianInteger"], [190, 1, 1, "", "GaussianIntegerRing"], [190, 1, 1, "", "GaussianRational"], [190, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[190, 2, 1, "", "from_AlgebraicField"], [190, 2, 1, "", "from_QQ"], [190, 2, 1, "", "from_QQ_gmpy"], [190, 2, 1, "", "from_QQ_python"], [190, 2, 1, "", "from_ZZ"], [190, 2, 1, "", "from_ZZ_gmpy"], [190, 2, 1, "", "from_ZZ_python"], [190, 2, 1, "", "from_sympy"], [190, 2, 1, "", "inject"], [190, 2, 1, "", "is_negative"], [190, 2, 1, "", "is_nonnegative"], [190, 2, 1, "", "is_nonpositive"], [190, 2, 1, "", "is_positive"], [190, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[190, 2, 1, "", "new"], [190, 2, 1, "", "parent"], [190, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[190, 5, 1, "", "dtype"], [190, 2, 1, "", "from_GaussianIntegerRing"], [190, 2, 1, "", "from_GaussianRationalField"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "get_field"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[190, 2, 1, "", "as_AlgebraicField"], [190, 2, 1, "", "denom"], [190, 5, 1, "", "dtype"], [190, 2, 1, "", "from_GaussianIntegerRing"], [190, 2, 1, "", "from_GaussianRationalField"], [190, 2, 1, "", "get_field"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[190, 1, 1, "", "ComplexElement"], [190, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[190, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[190, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[190, 2, 1, "", "denom"], [190, 2, 1, "", "div"], [190, 2, 1, "", "exquo"], [190, 2, 1, "", "free_module"], [190, 2, 1, "", "get_ring"], [190, 2, 1, "", "ideal"], [190, 2, 1, "", "invert"], [190, 2, 1, "", "numer"], [190, 2, 1, "", "quo"], [190, 2, 1, "", "quotient_ring"], [190, 2, 1, "", "rem"], [190, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[190, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[190, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[192, 3, 1, "", "dmp_cancel"], [192, 3, 1, "", "dmp_content"], [192, 3, 1, "", "dmp_discriminant"], [192, 3, 1, "", "dmp_euclidean_prs"], [192, 3, 1, "", "dmp_ff_prs_gcd"], [192, 3, 1, "", "dmp_gcd"], [192, 3, 1, "", "dmp_gcdex"], [192, 3, 1, "", "dmp_half_gcdex"], [192, 3, 1, "", "dmp_inner_gcd"], [192, 3, 1, "", "dmp_inner_subresultants"], [192, 3, 1, "", "dmp_invert"], [192, 3, 1, "", "dmp_lcm"], [192, 3, 1, "", "dmp_primitive"], [192, 3, 1, "", "dmp_primitive_prs"], [192, 3, 1, "", "dmp_prs_resultant"], [192, 3, 1, "", "dmp_qq_collins_resultant"], [192, 3, 1, "", "dmp_qq_heu_gcd"], [192, 3, 1, "", "dmp_resultant"], [192, 3, 1, "", "dmp_rr_prs_gcd"], [192, 3, 1, "", "dmp_subresultants"], [192, 3, 1, "", "dmp_zz_collins_resultant"], [192, 3, 1, "", "dmp_zz_heu_gcd"], [192, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[192, 3, 1, "", "dmp_ext_factor"], [192, 3, 1, "", "dmp_factor_list"], [192, 3, 1, "", "dmp_factor_list_include"], [192, 3, 1, "", "dmp_irreducible_p"], [192, 3, 1, "", "dmp_trial_division"], [192, 3, 1, "", "dmp_zz_diophantine"], [192, 3, 1, "", "dmp_zz_factor"], [192, 3, 1, "", "dmp_zz_mignotte_bound"], [192, 3, 1, "", "dmp_zz_wang"], [192, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [192, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [192, 3, 1, "", "dmp_zz_wang_non_divisors"], [192, 3, 1, "", "dmp_zz_wang_test_points"], [192, 3, 1, "", "dup_cyclotomic_p"], [192, 3, 1, "", "dup_gf_factor"], [192, 3, 1, "", "dup_zz_cyclotomic_factor"], [192, 3, 1, "", "dup_zz_cyclotomic_poly"], [192, 3, 1, "", "dup_zz_factor"], [192, 3, 1, "", "dup_zz_factor_sqf"], [192, 3, 1, "", "dup_zz_hensel_lift"], [192, 3, 1, "", "dup_zz_hensel_step"], [192, 3, 1, "", "dup_zz_irreducible_p"], [192, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[192, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[190, 1, 1, "", "FracElement"], [190, 1, 1, "", "FracField"], [190, 3, 1, "", "field"], [190, 3, 1, "", "sfield"], [190, 3, 1, "", "vfield"], [190, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[190, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[192, 3, 1, "", "gf_LC"], [192, 3, 1, "", "gf_Qbasis"], [192, 3, 1, "", "gf_Qmatrix"], [192, 3, 1, "", "gf_TC"], [192, 3, 1, "", "gf_add"], [192, 3, 1, "", "gf_add_ground"], [192, 3, 1, "", "gf_add_mul"], [192, 3, 1, "", "gf_berlekamp"], [192, 3, 1, "", "gf_cofactors"], [192, 3, 1, "", "gf_compose"], [192, 3, 1, "", "gf_compose_mod"], [192, 3, 1, "", "gf_crt"], [192, 3, 1, "", "gf_crt1"], [192, 3, 1, "", "gf_crt2"], [192, 3, 1, "", "gf_csolve"], [192, 3, 1, "", "gf_degree"], [192, 3, 1, "", "gf_diff"], [192, 3, 1, "", "gf_div"], [192, 3, 1, "", "gf_eval"], [192, 3, 1, "", "gf_expand"], [192, 3, 1, "", "gf_exquo"], [192, 3, 1, "", "gf_factor"], [192, 3, 1, "", "gf_factor_sqf"], [192, 3, 1, "", "gf_from_dict"], [192, 3, 1, "", "gf_from_int_poly"], [192, 3, 1, "", "gf_gcd"], [192, 3, 1, "", "gf_gcdex"], [192, 3, 1, "", "gf_int"], [192, 3, 1, "", "gf_irreducible"], [192, 3, 1, "", "gf_irreducible_p"], [192, 3, 1, "", "gf_lcm"], [192, 3, 1, "", "gf_lshift"], [192, 3, 1, "", "gf_monic"], [192, 3, 1, "", "gf_mul"], [192, 3, 1, "", "gf_mul_ground"], [192, 3, 1, "", "gf_multi_eval"], [192, 3, 1, "", "gf_neg"], [192, 3, 1, "", "gf_normal"], [192, 3, 1, "", "gf_pow"], [192, 3, 1, "", "gf_pow_mod"], [192, 3, 1, "", "gf_quo"], [192, 3, 1, "", "gf_quo_ground"], [192, 3, 1, "", "gf_random"], [192, 3, 1, "", "gf_rem"], [192, 3, 1, "", "gf_rshift"], [192, 3, 1, "", "gf_shoup"], [192, 3, 1, "", "gf_sqf_list"], [192, 3, 1, "", "gf_sqf_p"], [192, 3, 1, "", "gf_sqf_part"], [192, 3, 1, "", "gf_sqr"], [192, 3, 1, "", "gf_strip"], [192, 3, 1, "", "gf_sub"], [192, 3, 1, "", "gf_sub_ground"], [192, 3, 1, "", "gf_sub_mul"], [192, 3, 1, "", "gf_to_dict"], [192, 3, 1, "", "gf_to_int_poly"], [192, 3, 1, "", "gf_trace_map"], [192, 3, 1, "", "gf_trunc"], [192, 3, 1, "", "gf_value"], [192, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[192, 3, 1, "", "groebner"], [192, 3, 1, "", "is_groebner"], [192, 3, 1, "", "is_minimal"], [192, 3, 1, "", "is_reduced"], [192, 3, 1, "", "red_groebner"], [192, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[188, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[188, 2, 1, "", "add"], [188, 2, 1, "", "charpoly"], [188, 2, 1, "", "det"], [188, 2, 1, "", "hstack"], [188, 2, 1, "", "inv"], [188, 2, 1, "", "is_lower"], [188, 2, 1, "", "is_upper"], [188, 2, 1, "", "is_zero_matrix"], [188, 2, 1, "", "lu"], [188, 2, 1, "", "lu_solve"], [188, 2, 1, "", "matmul"], [188, 2, 1, "", "neg"], [188, 2, 1, "", "rref"], [188, 2, 1, "", "scc"], [188, 2, 1, "", "sub"], [188, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[188, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[188, 2, 1, "", "add"], [188, 2, 1, "", "charpoly"], [188, 2, 1, "", "columnspace"], [188, 2, 1, "", "convert_to"], [188, 2, 1, "", "det"], [188, 2, 1, "", "diag"], [188, 2, 1, "", "eye"], [188, 2, 1, "", "from_Matrix"], [188, 2, 1, "", "from_dict_sympy"], [188, 2, 1, "", "from_list"], [188, 2, 1, "", "from_list_sympy"], [188, 2, 1, "", "from_rep"], [188, 2, 1, "", "hstack"], [188, 2, 1, "", "inv"], [188, 4, 1, "", "is_lower"], [188, 4, 1, "", "is_upper"], [188, 2, 1, "", "lu"], [188, 2, 1, "", "lu_solve"], [188, 2, 1, "", "matmul"], [188, 2, 1, "", "mul"], [188, 2, 1, "", "neg"], [188, 2, 1, "", "nullspace"], [188, 2, 1, "", "ones"], [188, 2, 1, "", "pow"], [188, 2, 1, "", "rowspace"], [188, 2, 1, "", "rref"], [188, 2, 1, "", "scc"], [188, 2, 1, "", "sub"], [188, 2, 1, "", "to_Matrix"], [188, 2, 1, "", "to_dense"], [188, 2, 1, "", "to_field"], [188, 2, 1, "", "to_sparse"], [188, 2, 1, "", "transpose"], [188, 2, 1, "", "unify"], [188, 2, 1, "", "vstack"], [188, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[188, 3, 1, "", "hermite_normal_form"], [188, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[188, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[188, 2, 1, "", "add"], [188, 2, 1, "", "charpoly"], [188, 2, 1, "", "convert_to"], [188, 2, 1, "", "copy"], [188, 2, 1, "", "det"], [188, 2, 1, "", "eye"], [188, 2, 1, "", "from_ddm"], [188, 2, 1, "", "from_list"], [188, 2, 1, "", "hstack"], [188, 2, 1, "", "inv"], [188, 2, 1, "", "is_lower"], [188, 2, 1, "", "is_upper"], [188, 2, 1, "", "is_zero_matrix"], [188, 2, 1, "", "lu"], [188, 2, 1, "", "lu_solve"], [188, 2, 1, "", "matmul"], [188, 2, 1, "", "mul"], [188, 2, 1, "", "neg"], [188, 2, 1, "", "new"], [188, 2, 1, "", "nullspace"], [188, 2, 1, "", "rref"], [188, 2, 1, "", "scc"], [188, 2, 1, "", "sub"], [188, 2, 1, "", "to_ddm"], [188, 2, 1, "", "to_list"], [188, 2, 1, "", "transpose"], [188, 2, 1, "", "vstack"], [188, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[192, 3, 1, "", "_modgcd_multivariate_p"], [192, 3, 1, "", "func_field_modgcd"], [192, 3, 1, "", "modgcd_bivariate"], [192, 3, 1, "", "modgcd_multivariate"], [192, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[195, 1, 1, "", "Monomial"], [195, 3, 1, "", "itermonomials"], [195, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[195, 2, 1, "", "as_expr"], [195, 2, 1, "", "gcd"], [195, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[194, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[194, 3, 1, "", "minimal_polynomial"], [194, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[194, 0, 0, "-", "modules"], [194, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[194, 1, 1, "", "EndomorphismRing"], [194, 1, 1, "", "InnerEndomorphism"], [194, 1, 1, "", "Module"], [194, 1, 1, "", "ModuleElement"], [194, 1, 1, "", "ModuleEndomorphism"], [194, 1, 1, "", "ModuleHomomorphism"], [194, 1, 1, "", "PowerBasis"], [194, 1, 1, "", "PowerBasisElement"], [194, 1, 1, "", "Submodule"], [194, 3, 1, "", "find_min_poly"], [194, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "inner_endomorphism"], [194, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[194, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[194, 2, 1, "", "__call__"], [194, 2, 1, "", "ancestors"], [194, 2, 1, "", "basis_elements"], [194, 2, 1, "", "element_from_rational"], [194, 2, 1, "", "endomorphism_ring"], [194, 2, 1, "", "is_compat_col"], [194, 2, 1, "", "mult_tab"], [194, 4, 1, "", "n"], [194, 2, 1, "", "nearest_common_ancestor"], [194, 4, 1, "", "number_field"], [194, 2, 1, "", "one"], [194, 4, 1, "", "parent"], [194, 2, 1, "", "power_basis_ancestor"], [194, 2, 1, "", "represent"], [194, 2, 1, "", "starts_with_unity"], [194, 2, 1, "", "submodule_from_gens"], [194, 2, 1, "", "submodule_from_matrix"], [194, 2, 1, "", "whole_submodule"], [194, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[194, 4, 1, "", "QQ_col"], [194, 2, 1, "", "__add__"], [194, 2, 1, "", "__init__"], [194, 2, 1, "", "__mod__"], [194, 2, 1, "", "__mul__"], [194, 2, 1, "", "column"], [194, 2, 1, "", "equiv"], [194, 2, 1, "", "from_int_list"], [194, 2, 1, "", "is_compat"], [194, 4, 1, "", "n"], [194, 2, 1, "", "over_power_basis"], [194, 2, 1, "", "reduced"], [194, 2, 1, "", "reduced_mod_p"], [194, 2, 1, "", "to_ancestor"], [194, 2, 1, "", "to_parent"], [194, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[194, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "kernel"], [194, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "element_from_ANP"], [194, 2, 1, "", "element_from_alg_num"], [194, 2, 1, "", "element_from_poly"], [194, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[194, 4, 1, "", "T"], [194, 2, 1, "", "as_expr"], [194, 4, 1, "", "generator"], [194, 4, 1, "", "is_rational"], [194, 2, 1, "", "norm"], [194, 2, 1, "", "numerator"], [194, 2, 1, "", "poly"], [194, 2, 1, "", "to_ANP"], [194, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[194, 4, 1, "", "QQ_matrix"], [194, 2, 1, "", "__init__"], [194, 2, 1, "", "add"], [194, 2, 1, "", "basis_element_pullbacks"], [194, 2, 1, "", "discard_before"], [194, 2, 1, "", "mul"], [194, 2, 1, "", "reduce_element"], [194, 2, 1, "", "reduced"], [194, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[194, 1, 1, "", "PrimeIdeal"], [194, 3, 1, "", "prime_decomp"], [194, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[194, 2, 1, "", "__add__"], [194, 2, 1, "", "__init__"], [194, 2, 1, "", "__mul__"], [194, 2, 1, "", "as_submodule"], [194, 4, 1, "", "is_inert"], [194, 2, 1, "", "reduce_ANP"], [194, 2, 1, "", "reduce_alg_num"], [194, 2, 1, "", "reduce_element"], [194, 2, 1, "", "repr"], [194, 2, 1, "", "test_factor"], [194, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[194, 3, 1, "", "field_isomorphism"], [194, 3, 1, "", "primitive_element"], [194, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[194, 1, 1, "", "AlgIntPowers"], [194, 3, 1, "", "coeff_search"], [194, 3, 1, "", "extract_fundamental_discriminant"], [194, 3, 1, "", "get_num_denom"], [194, 3, 1, "", "is_int"], [194, 3, 1, "", "is_rat"], [194, 3, 1, "", "isolate"], [194, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[194, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[195, 1, 1, "", "GradedLexOrder"], [195, 1, 1, "", "LexOrder"], [195, 1, 1, "", "MonomialOrder"], [195, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[195, 3, 1, "", "chebyshevt_poly"], [195, 3, 1, "", "chebyshevu_poly"], [195, 3, 1, "", "gegenbauer_poly"], [195, 3, 1, "", "hermite_poly"], [195, 3, 1, "", "jacobi_poly"], [195, 3, 1, "", "laguerre_poly"], [195, 3, 1, "", "legendre_poly"], [195, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[195, 3, 1, "", "apart"], [195, 3, 1, "", "apart_list"], [195, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[190, 1, 1, "", "ANP"], [190, 1, 1, "", "DMF"], [190, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[190, 2, 1, "", "LC"], [190, 2, 1, "", "TC"], [190, 4, 1, "", "is_ground"], [190, 4, 1, "", "is_one"], [190, 4, 1, "", "is_zero"], [190, 2, 1, "", "pow"], [190, 2, 1, "", "to_dict"], [190, 2, 1, "", "to_list"], [190, 2, 1, "", "to_sympy_dict"], [190, 2, 1, "", "to_sympy_list"], [190, 2, 1, "", "to_tuple"], [190, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[190, 2, 1, "", "add"], [190, 2, 1, "", "cancel"], [190, 2, 1, "", "denom"], [190, 2, 1, "", "exquo"], [190, 2, 1, "", "frac_unify"], [190, 2, 1, "", "half_per"], [190, 2, 1, "", "invert"], [190, 4, 1, "", "is_one"], [190, 4, 1, "", "is_zero"], [190, 2, 1, "", "mul"], [190, 2, 1, "", "neg"], [190, 2, 1, "", "numer"], [190, 2, 1, "", "per"], [190, 2, 1, "", "poly_unify"], [190, 2, 1, "", "pow"], [190, 2, 1, "", "quo"], [190, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[190, 2, 1, "", "LC"], [190, 2, 1, "", "TC"], [190, 2, 1, "", "abs"], [190, 2, 1, "", "add"], [190, 2, 1, "", "add_ground"], [190, 2, 1, "", "all_coeffs"], [190, 2, 1, "", "all_monoms"], [190, 2, 1, "", "all_terms"], [190, 2, 1, "", "cancel"], [190, 2, 1, "", "cauchy_lower_bound"], [190, 2, 1, "", "cauchy_upper_bound"], [190, 2, 1, "", "clear_denoms"], [190, 2, 1, "", "coeffs"], [190, 2, 1, "", "cofactors"], [190, 2, 1, "", "compose"], [190, 2, 1, "", "content"], [190, 2, 1, "", "convert"], [190, 2, 1, "", "count_complex_roots"], [190, 2, 1, "", "count_real_roots"], [190, 2, 1, "", "decompose"], [190, 2, 1, "", "deflate"], [190, 2, 1, "", "degree"], [190, 2, 1, "", "degree_list"], [190, 2, 1, "", "diff"], [190, 2, 1, "", "discriminant"], [190, 2, 1, "", "div"], [190, 2, 1, "", "eject"], [190, 2, 1, "", "eval"], [190, 2, 1, "", "exclude"], [190, 2, 1, "", "exquo"], [190, 2, 1, "", "exquo_ground"], [190, 2, 1, "", "factor_list"], [190, 2, 1, "", "factor_list_include"], [190, 2, 1, "", "from_dict"], [190, 2, 1, "", "from_list"], [190, 2, 1, "", "from_sympy_list"], [190, 2, 1, "", "gcd"], [190, 2, 1, "", "gcdex"], [190, 2, 1, "", "gff_list"], [190, 2, 1, "", "half_gcdex"], [190, 2, 1, "", "homogeneous_order"], [190, 2, 1, "", "homogenize"], [190, 2, 1, "", "inject"], [190, 2, 1, "", "integrate"], [190, 2, 1, "", "intervals"], [190, 2, 1, "", "invert"], [190, 4, 1, "", "is_cyclotomic"], [190, 4, 1, "", "is_ground"], [190, 4, 1, "", "is_homogeneous"], [190, 4, 1, "", "is_irreducible"], [190, 4, 1, "", "is_linear"], [190, 4, 1, "", "is_monic"], [190, 4, 1, "", "is_monomial"], [190, 4, 1, "", "is_one"], [190, 4, 1, "", "is_primitive"], [190, 4, 1, "", "is_quadratic"], [190, 4, 1, "", "is_sqf"], [190, 4, 1, "", "is_zero"], [190, 2, 1, "", "l1_norm"], [190, 2, 1, "", "l2_norm_squared"], [190, 2, 1, "", "lcm"], [190, 2, 1, "", "lift"], [190, 2, 1, "", "max_norm"], [190, 2, 1, "", "mignotte_sep_bound_squared"], [190, 2, 1, "", "monic"], [190, 2, 1, "", "monoms"], [190, 2, 1, "", "mul"], [190, 2, 1, "", "mul_ground"], [190, 2, 1, "", "neg"], [190, 2, 1, "", "norm"], [190, 2, 1, "", "nth"], [190, 2, 1, "", "pdiv"], [190, 2, 1, "", "per"], [190, 2, 1, "", "permute"], [190, 2, 1, "", "pexquo"], [190, 2, 1, "", "pow"], [190, 2, 1, "", "pquo"], [190, 2, 1, "", "prem"], [190, 2, 1, "", "primitive"], [190, 2, 1, "", "quo"], [190, 2, 1, "", "quo_ground"], [190, 2, 1, "", "refine_root"], [190, 2, 1, "", "rem"], [190, 2, 1, "", "resultant"], [190, 2, 1, "", "revert"], [190, 2, 1, "", "shift"], [190, 2, 1, "", "slice"], [190, 2, 1, "", "sqf_list"], [190, 2, 1, "", "sqf_list_include"], [190, 2, 1, "", "sqf_norm"], [190, 2, 1, "", "sqf_part"], [190, 2, 1, "", "sqr"], [190, 2, 1, "", "sturm"], [190, 2, 1, "", "sub"], [190, 2, 1, "", "sub_ground"], [190, 2, 1, "", "subresultants"], [190, 2, 1, "", "terms"], [190, 2, 1, "", "terms_gcd"], [190, 2, 1, "", "to_dict"], [190, 2, 1, "", "to_exact"], [190, 2, 1, "", "to_field"], [190, 2, 1, "", "to_list"], [190, 2, 1, "", "to_ring"], [190, 2, 1, "", "to_sympy_dict"], [190, 2, 1, "", "to_sympy_list"], [190, 2, 1, "", "to_tuple"], [190, 2, 1, "", "total_degree"], [190, 2, 1, "", "transform"], [190, 2, 1, "", "trunc"], [190, 2, 1, "", "unify"]], "sympy.polys": [[192, 0, 0, "-", "polyconfig"], [192, 0, 0, "-", "polyoptions"], [197, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[192, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[192, 1, 1, "", "BasePolynomialError"], [192, 1, 1, "", "CoercionFailed"], [192, 1, 1, "", "ComputationFailed"], [192, 1, 1, "", "DomainError"], [192, 1, 1, "", "EvaluationFailed"], [192, 1, 1, "", "ExactQuotientFailed"], [192, 1, 1, "", "ExtraneousFactors"], [192, 1, 1, "", "FlagError"], [192, 1, 1, "", "GeneratorsError"], [192, 1, 1, "", "GeneratorsNeeded"], [192, 1, 1, "", "HeuristicGCDFailed"], [192, 1, 1, "", "HomomorphismFailed"], [192, 1, 1, "", "IsomorphismFailed"], [192, 1, 1, "", "MultivariatePolynomialError"], [192, 1, 1, "", "NotAlgebraic"], [192, 1, 1, "", "NotInvertible"], [192, 1, 1, "", "NotReversible"], [192, 1, 1, "", "OperationNotSupported"], [192, 1, 1, "", "OptionError"], [192, 1, 1, "", "PolificationFailed"], [192, 1, 1, "", "PolynomialError"], [192, 1, 1, "", "RefinementFailed"], [192, 1, 1, "", "UnificationFailed"], [192, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[195, 3, 1, "", "horner"], [195, 3, 1, "", "interpolate"], [195, 3, 1, "", "symmetrize"], [195, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[192, 1, 1, "", "Options"], [192, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[192, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[195, 3, 1, "", "roots"]], "sympy.polys.polytools": [[195, 1, 1, "", "GroebnerBasis"], [195, 3, 1, "", "LC"], [195, 3, 1, "", "LM"], [195, 3, 1, "", "LT"], [195, 1, 1, "", "Poly"], [195, 1, 1, "", "PurePoly"], [195, 3, 1, "", "cancel"], [195, 3, 1, "", "cofactors"], [195, 3, 1, "", "compose"], [195, 3, 1, "", "content"], [195, 3, 1, "", "count_roots"], [195, 3, 1, "", "decompose"], [195, 3, 1, "", "degree"], [195, 3, 1, "", "degree_list"], [195, 3, 1, "", "discriminant"], [195, 3, 1, "", "div"], [195, 3, 1, "", "exquo"], [195, 3, 1, "", "factor"], [195, 3, 1, "", "factor_list"], [195, 3, 1, "", "gcd"], [195, 3, 1, "", "gcd_list"], [195, 3, 1, "", "gcdex"], [195, 3, 1, "", "gff"], [195, 3, 1, "", "gff_list"], [195, 3, 1, "", "groebner"], [195, 3, 1, "", "ground_roots"], [195, 3, 1, "", "half_gcdex"], [195, 3, 1, "", "intervals"], [195, 3, 1, "", "invert"], [195, 3, 1, "", "is_zero_dimensional"], [195, 3, 1, "", "lcm"], [195, 3, 1, "", "lcm_list"], [195, 3, 1, "", "monic"], [195, 3, 1, "", "nroots"], [195, 3, 1, "", "nth_power_roots_poly"], [195, 3, 1, "", "parallel_poly_from_expr"], [195, 3, 1, "", "pdiv"], [195, 3, 1, "", "pexquo"], [195, 3, 1, "", "poly"], [195, 3, 1, "", "poly_from_expr"], [195, 3, 1, "", "pquo"], [195, 3, 1, "", "prem"], [195, 3, 1, "", "primitive"], [195, 3, 1, "", "quo"], [195, 3, 1, "", "real_roots"], [195, 3, 1, "", "reduced"], [195, 3, 1, "", "refine_root"], [195, 3, 1, "", "rem"], [195, 3, 1, "", "resultant"], [195, 3, 1, "", "sqf"], [195, 3, 1, "", "sqf_list"], [195, 3, 1, "", "sqf_norm"], [195, 3, 1, "", "sqf_part"], [195, 3, 1, "", "sturm"], [195, 3, 1, "", "subresultants"], [195, 3, 1, "", "terms_gcd"], [195, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[195, 2, 1, "", "contains"], [195, 2, 1, "", "fglm"], [195, 4, 1, "", "is_zero_dimensional"], [195, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[195, 2, 1, "", "EC"], [195, 2, 1, "", "EM"], [195, 2, 1, "", "ET"], [195, 2, 1, "", "LC"], [195, 2, 1, "", "LM"], [195, 2, 1, "", "LT"], [195, 2, 1, "", "TC"], [195, 2, 1, "", "abs"], [195, 2, 1, "", "add"], [195, 2, 1, "", "add_ground"], [195, 2, 1, "", "all_coeffs"], [195, 2, 1, "", "all_monoms"], [195, 2, 1, "", "all_roots"], [195, 2, 1, "", "all_terms"], [195, 2, 1, "", "as_dict"], [195, 2, 1, "", "as_expr"], [195, 2, 1, "", "as_list"], [195, 2, 1, "", "as_poly"], [195, 2, 1, "", "cancel"], [195, 2, 1, "", "clear_denoms"], [195, 2, 1, "", "coeff_monomial"], [195, 2, 1, "", "coeffs"], [195, 2, 1, "", "cofactors"], [195, 2, 1, "", "compose"], [195, 2, 1, "", "content"], [195, 2, 1, "", "count_roots"], [195, 2, 1, "", "decompose"], [195, 2, 1, "", "deflate"], [195, 2, 1, "", "degree"], [195, 2, 1, "", "degree_list"], [195, 2, 1, "", "diff"], [195, 2, 1, "", "discriminant"], [195, 2, 1, "", "dispersion"], [195, 2, 1, "", "dispersionset"], [195, 2, 1, "", "div"], [195, 4, 1, "", "domain"], [195, 2, 1, "", "eject"], [195, 2, 1, "", "eval"], [195, 2, 1, "", "exclude"], [195, 2, 1, "", "exquo"], [195, 2, 1, "", "exquo_ground"], [195, 2, 1, "", "factor_list"], [195, 2, 1, "", "factor_list_include"], [195, 4, 1, "", "free_symbols"], [195, 4, 1, "", "free_symbols_in_domain"], [195, 2, 1, "", "from_dict"], [195, 2, 1, "", "from_expr"], [195, 2, 1, "", "from_list"], [195, 2, 1, "", "from_poly"], [195, 2, 1, "", "gcd"], [195, 2, 1, "", "gcdex"], [195, 4, 1, "", "gen"], [195, 2, 1, "", "get_domain"], [195, 2, 1, "", "get_modulus"], [195, 2, 1, "", "gff_list"], [195, 2, 1, "", "ground_roots"], [195, 2, 1, "", "half_gcdex"], [195, 2, 1, "", "has_only_gens"], [195, 2, 1, "", "homogeneous_order"], [195, 2, 1, "", "homogenize"], [195, 2, 1, "", "inject"], [195, 2, 1, "", "integrate"], [195, 2, 1, "", "intervals"], [195, 2, 1, "", "invert"], [195, 4, 1, "", "is_cyclotomic"], [195, 4, 1, "", "is_ground"], [195, 4, 1, "", "is_homogeneous"], [195, 4, 1, "", "is_irreducible"], [195, 4, 1, "", "is_linear"], [195, 4, 1, "", "is_monic"], [195, 4, 1, "", "is_monomial"], [195, 4, 1, "", "is_multivariate"], [195, 4, 1, "", "is_one"], [195, 4, 1, "", "is_primitive"], [195, 4, 1, "", "is_quadratic"], [195, 4, 1, "", "is_sqf"], [195, 4, 1, "", "is_univariate"], [195, 4, 1, "", "is_zero"], [195, 2, 1, "", "l1_norm"], [195, 2, 1, "", "lcm"], [195, 2, 1, "", "length"], [195, 2, 1, "", "lift"], [195, 2, 1, "", "ltrim"], [195, 2, 1, "", "match"], [195, 2, 1, "", "max_norm"], [195, 2, 1, "", "monic"], [195, 2, 1, "", "monoms"], [195, 2, 1, "", "mul"], [195, 2, 1, "", "mul_ground"], [195, 2, 1, "", "neg"], [195, 2, 1, "", "new"], [195, 2, 1, "", "norm"], [195, 2, 1, "", "nroots"], [195, 2, 1, "", "nth"], [195, 2, 1, "", "nth_power_roots_poly"], [195, 4, 1, "", "one"], [195, 2, 1, "", "pdiv"], [195, 2, 1, "", "per"], [195, 2, 1, "", "pexquo"], [195, 2, 1, "", "pow"], [195, 2, 1, "", "pquo"], [195, 2, 1, "", "prem"], [195, 2, 1, "", "primitive"], [195, 2, 1, "", "quo"], [195, 2, 1, "", "quo_ground"], [195, 2, 1, "", "rat_clear_denoms"], [195, 2, 1, "", "real_roots"], [195, 2, 1, "", "refine_root"], [195, 2, 1, "", "rem"], [195, 2, 1, "", "reorder"], [195, 2, 1, "", "replace"], [195, 2, 1, "", "resultant"], [195, 2, 1, "", "retract"], [195, 2, 1, "", "revert"], [195, 2, 1, "", "root"], [195, 2, 1, "", "same_root"], [195, 2, 1, "", "set_domain"], [195, 2, 1, "", "set_modulus"], [195, 2, 1, "", "shift"], [195, 2, 1, "", "slice"], [195, 2, 1, "", "sqf_list"], [195, 2, 1, "", "sqf_list_include"], [195, 2, 1, "", "sqf_norm"], [195, 2, 1, "", "sqf_part"], [195, 2, 1, "", "sqr"], [195, 2, 1, "", "sturm"], [195, 2, 1, "", "sub"], [195, 2, 1, "", "sub_ground"], [195, 2, 1, "", "subresultants"], [195, 2, 1, "", "terms"], [195, 2, 1, "", "terms_gcd"], [195, 2, 1, "", "termwise"], [195, 2, 1, "", "to_exact"], [195, 2, 1, "", "to_field"], [195, 2, 1, "", "to_ring"], [195, 2, 1, "", "total_degree"], [195, 2, 1, "", "transform"], [195, 2, 1, "", "trunc"], [195, 2, 1, "", "unify"], [195, 4, 1, "", "unit"], [195, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[195, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[195, 3, 1, "", "together"]], "sympy.polys.ring_series": [[196, 3, 1, "", "_tan1"], [196, 3, 1, "", "mul_xin"], [196, 3, 1, "", "pow_xin"], [196, 3, 1, "", "rs_LambertW"], [196, 3, 1, "", "rs_asin"], [196, 3, 1, "", "rs_atan"], [196, 3, 1, "", "rs_atanh"], [196, 3, 1, "", "rs_compose_add"], [196, 3, 1, "", "rs_cos"], [196, 3, 1, "", "rs_cos_sin"], [196, 3, 1, "", "rs_cosh"], [196, 3, 1, "", "rs_cot"], [196, 3, 1, "", "rs_diff"], [196, 3, 1, "", "rs_exp"], [196, 3, 1, "", "rs_fun"], [196, 3, 1, "", "rs_hadamard_exp"], [196, 3, 1, "", "rs_integrate"], [196, 3, 1, "", "rs_is_puiseux"], [196, 3, 1, "", "rs_log"], [196, 3, 1, "", "rs_mul"], [196, 3, 1, "", "rs_newton"], [196, 3, 1, "", "rs_nth_root"], [196, 3, 1, "", "rs_pow"], [196, 3, 1, "", "rs_puiseux"], [196, 3, 1, "", "rs_puiseux2"], [196, 3, 1, "", "rs_series_from_list"], [196, 3, 1, "", "rs_series_inversion"], [196, 3, 1, "", "rs_series_reversion"], [196, 3, 1, "", "rs_sin"], [196, 3, 1, "", "rs_sinh"], [196, 3, 1, "", "rs_square"], [196, 3, 1, "", "rs_subs"], [196, 3, 1, "", "rs_tan"], [196, 3, 1, "", "rs_tanh"], [196, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[190, 1, 1, "", "PolyElement"], [190, 1, 1, "", "PolyRing"], [190, 3, 1, "", "ring"], [190, 3, 1, "", "sring"], [190, 3, 1, "", "vring"], [190, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[190, 2, 1, "", "almosteq"], [190, 2, 1, "", "cancel"], [190, 2, 1, "", "coeff"], [190, 2, 1, "", "coeffs"], [190, 2, 1, "", "const"], [190, 2, 1, "", "content"], [190, 2, 1, "", "copy"], [190, 2, 1, "", "degree"], [190, 2, 1, "", "degrees"], [190, 2, 1, "", "diff"], [190, 2, 1, "", "div"], [190, 2, 1, "", "imul_num"], [190, 2, 1, "", "itercoeffs"], [190, 2, 1, "", "itermonoms"], [190, 2, 1, "", "iterterms"], [190, 2, 1, "", "leading_expv"], [190, 2, 1, "", "leading_monom"], [190, 2, 1, "", "leading_term"], [190, 2, 1, "", "listcoeffs"], [190, 2, 1, "", "listmonoms"], [190, 2, 1, "", "listterms"], [190, 2, 1, "", "monic"], [190, 2, 1, "", "monoms"], [190, 2, 1, "", "primitive"], [190, 2, 1, "", "square"], [190, 2, 1, "", "strip_zero"], [190, 2, 1, "", "tail_degree"], [190, 2, 1, "", "tail_degrees"], [190, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[190, 2, 1, "", "add"], [190, 2, 1, "", "add_gens"], [190, 2, 1, "", "compose"], [190, 2, 1, "", "drop"], [190, 2, 1, "", "drop_to_ground"], [190, 2, 1, "", "index"], [190, 2, 1, "", "monomial_basis"], [190, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[195, 1, 1, "", "ComplexRootOf"], [195, 1, 1, "", "RootOf"], [195, 1, 1, "", "RootSum"], [195, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[195, 2, 1, "", "_all_roots"], [195, 2, 1, "", "_complexes_index"], [195, 2, 1, "", "_complexes_sorted"], [195, 2, 1, "", "_count_roots"], [195, 2, 1, "", "_ensure_complexes_init"], [195, 2, 1, "", "_ensure_reals_init"], [195, 2, 1, "", "_eval_evalf"], [195, 2, 1, "", "_eval_is_imaginary"], [195, 2, 1, "", "_eval_is_real"], [195, 2, 1, "", "_get_complexes"], [195, 2, 1, "", "_get_complexes_sqf"], [195, 2, 1, "", "_get_interval"], [195, 2, 1, "", "_get_reals"], [195, 2, 1, "", "_get_reals_sqf"], [195, 2, 1, "", "_get_roots"], [195, 2, 1, "", "_indexed_root"], [195, 2, 1, "", "_new"], [195, 2, 1, "", "_postprocess_root"], [195, 2, 1, "", "_preprocess_roots"], [195, 2, 1, "", "_real_roots"], [195, 2, 1, "", "_reals_index"], [195, 2, 1, "", "_reals_sorted"], [195, 2, 1, "", "_refine_complexes"], [195, 2, 1, "", "_reset"], [195, 2, 1, "", "_roots_trivial"], [195, 2, 1, "", "_set_interval"], [195, 2, 1, "", "all_roots"], [195, 2, 1, "", "clear_cache"], [195, 2, 1, "", "eval_approx"], [195, 2, 1, "", "eval_rational"], [195, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[195, 2, 1, "", "new"]], "sympy.polys.solvers": [[197, 3, 1, "", "_solve_lin_sys"], [197, 3, 1, "", "_solve_lin_sys_component"], [197, 3, 1, "", "eqs_to_matrix"], [197, 3, 1, "", "solve_lin_sys"], [197, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[195, 3, 1, "", "cyclotomic_poly"], [195, 3, 1, "", "interpolating_poly"], [195, 3, 1, "", "random_poly"], [195, 3, 1, "", "swinnerton_dyer_poly"], [195, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[199, 0, 0, "-", "aesaracode"], [199, 0, 0, "-", "c"], [199, 0, 0, "-", "codeprinter"], [199, 0, 0, "-", "conventions"], [199, 0, 0, "-", "cxx"], [199, 0, 0, "-", "fortran"], [199, 0, 0, "-", "gtk"], [199, 0, 0, "-", "jscode"], [199, 0, 0, "-", "julia"], [199, 0, 0, "-", "lambdarepr"], [199, 0, 0, "-", "latex"], [199, 0, 0, "-", "maple"], [199, 0, 0, "-", "mathematica"], [199, 0, 0, "-", "mathml"], [199, 0, 0, "-", "octave"], [199, 0, 0, "-", "precedence"], [199, 0, 0, "-", "pretty"], [199, 0, 0, "-", "preview"], [199, 0, 0, "-", "printer"], [199, 0, 0, "-", "pycode"], [199, 0, 0, "-", "python"], [199, 0, 0, "-", "rcode"], [199, 0, 0, "-", "repr"], [199, 0, 0, "-", "rust"], [199, 0, 0, "-", "str"], [199, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[199, 1, 1, "", "AesaraPrinter"], [199, 3, 1, "", "aesara_code"], [199, 3, 1, "", "aesara_function"], [199, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[199, 2, 1, "", "doprint"], [199, 5, 1, "", "printmethod"]], "sympy.printing.c": [[199, 1, 1, "", "C89CodePrinter"], [199, 1, 1, "", "C99CodePrinter"], [199, 3, 1, "", "ccode"], [199, 6, 1, "", "known_functions_C89"], [199, 6, 1, "", "known_functions_C99"], [199, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[199, 2, 1, "", "indent_code"], [199, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[199, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[199, 7, 1, "", "AssignmentError"], [199, 1, 1, "", "CodePrinter"], [199, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[199, 2, 1, "", "doprint"], [199, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[199, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[199, 1, 1, "", "CXX11CodePrinter"], [199, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[199, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[199, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[199, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[199, 1, 1, "", "FCodePrinter"], [199, 3, 1, "", "fcode"], [199, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[199, 2, 1, "", "indent_code"], [199, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[199, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[199, 1, 1, "", "JavascriptCodePrinter"], [199, 3, 1, "", "jscode"], [199, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[199, 2, 1, "", "indent_code"], [199, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[199, 1, 1, "", "JuliaCodePrinter"], [199, 3, 1, "", "julia_code"], [199, 6, 1, "", "known_fcns_src1"], [199, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[199, 2, 1, "", "indent_code"], [199, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[199, 1, 1, "", "LambdaPrinter"], [199, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[199, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[199, 1, 1, "", "LatexPrinter"], [199, 6, 1, "", "accepted_latex_functions"], [199, 3, 1, "", "latex"], [199, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[199, 2, 1, "", "parenthesize_super"], [199, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[199, 1, 1, "", "MapleCodePrinter"], [199, 3, 1, "", "maple_code"], [199, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[199, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[199, 1, 1, "", "MCodePrinter"], [199, 6, 1, "", "known_functions"], [199, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[199, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[199, 1, 1, "", "MathMLContentPrinter"], [199, 1, 1, "", "MathMLPresentationPrinter"], [199, 1, 1, "", "MathMLPrinterBase"], [199, 3, 1, "", "mathml"], [199, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[199, 2, 1, "", "mathml_tag"], [199, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[199, 2, 1, "", "mathml_tag"], [199, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[199, 2, 1, "", "doprint"]], "sympy.printing.octave": [[199, 1, 1, "", "OctaveCodePrinter"], [199, 6, 1, "", "known_fcns_src1"], [199, 6, 1, "", "known_fcns_src2"], [199, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[199, 2, 1, "", "indent_code"], [199, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[199, 6, 1, "", "PRECEDENCE"], [199, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [199, 6, 1, "", "PRECEDENCE_VALUES"], [199, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[199, 0, 0, "-", "pretty"], [199, 0, 0, "-", "pretty_symbology"], [199, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[199, 1, 1, "", "PrettyPrinter"], [199, 3, 1, "", "pretty"], [199, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[199, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[199, 3, 1, "", "G"], [199, 3, 1, "", "U"], [199, 3, 1, "", "VF"], [199, 3, 1, "", "annotated"], [199, 6, 1, "", "atoms_table"], [199, 6, 1, "", "digit_2txt"], [199, 6, 1, "", "frac"], [199, 3, 1, "", "g"], [199, 6, 1, "", "greek_letters"], [199, 3, 1, "", "hobj"], [199, 3, 1, "", "pretty_atom"], [199, 3, 1, "", "pretty_symbol"], [199, 3, 1, "", "pretty_try_use_unicode"], [199, 3, 1, "", "pretty_use_unicode"], [199, 6, 1, "", "root"], [199, 6, 1, "", "sub"], [199, 6, 1, "", "sup"], [199, 6, 1, "", "symb_2txt"], [199, 3, 1, "", "vobj"], [199, 3, 1, "", "xobj"], [199, 3, 1, "", "xstr"], [199, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[199, 1, 1, "", "prettyForm"], [199, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[199, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[199, 2, 1, "", "above"], [199, 2, 1, "", "below"], [199, 2, 1, "", "height"], [199, 2, 1, "", "left"], [199, 2, 1, "", "leftslash"], [199, 2, 1, "", "next"], [199, 2, 1, "", "parens"], [199, 2, 1, "", "render"], [199, 2, 1, "", "right"], [199, 2, 1, "", "root"], [199, 2, 1, "", "stack"], [199, 2, 1, "", "terminal_width"], [199, 2, 1, "", "width"]], "sympy.printing.preview": [[199, 3, 1, "", "preview"]], "sympy.printing.printer": [[199, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[199, 2, 1, "", "_print"], [199, 2, 1, "", "doprint"], [199, 5, 1, "", "printmethod"], [199, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[199, 1, 1, "", "MpmathPrinter"], [199, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[199, 1, 1, "", "RCodePrinter"], [199, 6, 1, "", "known_functions"], [199, 3, 1, "", "print_rcode"], [199, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[199, 2, 1, "", "indent_code"], [199, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[199, 1, 1, "", "ReprPrinter"], [199, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[199, 2, 1, "", "emptyPrinter"], [199, 5, 1, "", "printmethod"], [199, 2, 1, "", "reprify"]], "sympy.printing.rust": [[199, 1, 1, "", "RustCodePrinter"], [199, 6, 1, "", "known_functions"], [199, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[199, 2, 1, "", "indent_code"], [199, 5, 1, "", "printmethod"]], "sympy.printing.str": [[199, 1, 1, "", "StrPrinter"], [199, 3, 1, "", "sstr"], [199, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[199, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[199, 3, 1, "", "pprint_nodes"], [199, 3, 1, "", "print_node"], [199, 3, 1, "", "print_tree"], [199, 3, 1, "", "tree"]], "sympy.series.acceleration": [[206, 3, 1, "", "richardson"], [206, 3, 1, "", "shanks"]], "sympy.series.formal": [[201, 1, 1, "", "FiniteFormalPowerSeries"], [201, 1, 1, "", "FormalPowerSeries"], [201, 1, 1, "", "FormalPowerSeriesCompose"], [201, 1, 1, "", "FormalPowerSeriesInverse"], [201, 1, 1, "", "FormalPowerSeriesProduct"], [201, 3, 1, "", "compute_fps"], [201, 3, 1, "", "exp_re"], [201, 3, 1, "", "fps"], [201, 3, 1, "", "hyper_algorithm"], [201, 3, 1, "", "hyper_re"], [201, 3, 1, "", "rational_algorithm"], [201, 3, 1, "", "rational_independent"], [201, 3, 1, "", "rsolve_hypergeometric"], [201, 3, 1, "", "simpleDE"], [201, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[201, 2, 1, "", "coeff_bell"], [201, 2, 1, "", "compose"], [201, 4, 1, "", "infinite"], [201, 2, 1, "", "integrate"], [201, 2, 1, "", "inverse"], [201, 2, 1, "", "polynomial"], [201, 2, 1, "", "product"], [201, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[201, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[201, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[201, 4, 1, "", "function"]], "sympy.series.fourier": [[202, 1, 1, "", "FourierSeries"], [202, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[202, 2, 1, "", "scale"], [202, 2, 1, "", "scalex"], [202, 2, 1, "", "shift"], [202, 2, 1, "", "shiftx"], [202, 2, 1, "", "sigma_approximation"], [202, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[206, 1, 1, "", "SubsSet"], [206, 3, 1, "", "build_expression_tree"], [206, 3, 1, "", "calculate_series"], [206, 3, 1, "", "compare"], [206, 3, 1, "", "gruntz"], [206, 3, 1, "", "limitinf"], [206, 3, 1, "", "mrv"], [206, 3, 1, "", "mrv_leadterm"], [206, 3, 1, "", "mrv_max1"], [206, 3, 1, "", "mrv_max3"], [206, 3, 1, "", "rewrite"], [206, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[206, 2, 1, "", "copy"], [206, 2, 1, "", "do_subs"], [206, 2, 1, "", "meets"], [206, 2, 1, "", "union"]], "sympy.series.limits": [[206, 1, 1, "", "Limit"], [206, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[206, 2, 1, "", "doit"]], "sympy.series.limitseq": [[204, 3, 1, "", "difference_delta"], [204, 3, 1, "", "dominant"], [204, 3, 1, "", "limit_seq"]], "sympy.series.order": [[206, 1, 1, "", "Order"]], "sympy.series.order.Order": [[206, 2, 1, "", "contains"]], "sympy.series.residues": [[206, 3, 1, "", "residue"]], "sympy.series.sequences": [[205, 1, 1, "", "EmptySequence"], [205, 1, 1, "", "RecursiveSeq"], [205, 1, 1, "", "SeqAdd"], [205, 1, 1, "", "SeqBase"], [205, 1, 1, "", "SeqFormula"], [205, 1, 1, "", "SeqMul"], [205, 1, 1, "", "SeqPer"], [205, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[205, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[205, 4, 1, "", "initial"], [205, 4, 1, "", "interval"], [205, 4, 1, "", "n"], [205, 4, 1, "", "recurrence"], [205, 4, 1, "", "start"], [205, 4, 1, "", "stop"], [205, 4, 1, "", "y"], [205, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[205, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[205, 2, 1, "", "coeff"], [205, 2, 1, "", "coeff_mul"], [205, 2, 1, "", "find_linear_recurrence"], [205, 4, 1, "", "free_symbols"], [205, 4, 1, "", "gen"], [205, 4, 1, "", "interval"], [205, 4, 1, "", "length"], [205, 4, 1, "", "start"], [205, 4, 1, "", "stop"], [205, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[205, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[205, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[205, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[206, 3, 1, "", "series"]], "sympy.sets": [[207, 0, 0, "-", "conditionset"], [207, 0, 0, "-", "fancysets"], [207, 0, 0, "-", "powerset"], [207, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[207, 1, 1, "", "ConditionSet"], [207, 1, 1, "", "Contains"], [207, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[207, 1, 1, "", "CartesianComplexRegion"], [207, 1, 1, "", "ComplexRegion"], [207, 1, 1, "", "Complexes"], [207, 1, 1, "", "ImageSet"], [207, 1, 1, "", "Integers"], [207, 1, 1, "", "Naturals"], [207, 1, 1, "", "Naturals0"], [207, 1, 1, "", "PolarComplexRegion"], [207, 1, 1, "", "Range"], [207, 1, 1, "", "Rationals"], [207, 1, 1, "", "Reals"], [207, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[207, 4, 1, "", "a_interval"], [207, 4, 1, "", "b_interval"], [207, 2, 1, "", "from_real"], [207, 4, 1, "", "psets"], [207, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[207, 2, 1, "", "as_relational"], [207, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[207, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[207, 1, 1, "", "Complement"], [207, 1, 1, "", "DisjointUnion"], [207, 1, 1, "", "EmptySet"], [207, 1, 1, "", "FiniteSet"], [207, 1, 1, "", "Intersection"], [207, 1, 1, "", "Interval"], [207, 1, 1, "", "ProductSet"], [207, 1, 1, "", "Set"], [207, 1, 1, "", "SymmetricDifference"], [207, 1, 1, "", "Union"], [207, 1, 1, "", "UniversalSet"], [207, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[207, 2, 1, "", "as_relational"], [207, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[207, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[207, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[207, 2, 1, "", "Lopen"], [207, 2, 1, "", "Ropen"], [207, 2, 1, "", "as_relational"], [207, 4, 1, "", "end"], [207, 4, 1, "", "is_left_unbounded"], [207, 4, 1, "", "is_right_unbounded"], [207, 4, 1, "", "left_open"], [207, 2, 1, "", "open"], [207, 4, 1, "", "right_open"], [207, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[207, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[207, 4, 1, "", "boundary"], [207, 4, 1, "", "closure"], [207, 2, 1, "", "complement"], [207, 2, 1, "", "contains"], [207, 4, 1, "", "inf"], [207, 4, 1, "", "interior"], [207, 2, 1, "", "intersect"], [207, 2, 1, "", "intersection"], [207, 4, 1, "", "is_closed"], [207, 2, 1, "", "is_disjoint"], [207, 4, 1, "", "is_open"], [207, 2, 1, "", "is_proper_subset"], [207, 2, 1, "", "is_proper_superset"], [207, 2, 1, "", "is_subset"], [207, 2, 1, "", "is_superset"], [207, 2, 1, "", "isdisjoint"], [207, 2, 1, "", "issubset"], [207, 2, 1, "", "issuperset"], [207, 4, 1, "", "kind"], [207, 4, 1, "", "measure"], [207, 2, 1, "", "powerset"], [207, 4, 1, "", "sup"], [207, 2, 1, "", "symmetric_difference"], [207, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[207, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[207, 2, 1, "", "as_relational"]], "sympy.simplify": [[211, 0, 0, "-", "combsimp"], [211, 0, 0, "-", "cse_main"], [211, 0, 0, "-", "epathtools"], [211, 0, 0, "-", "hyperexpand"], [209, 0, 0, "-", "hyperexpand_doc"], [211, 0, 0, "-", "powsimp"], [211, 0, 0, "-", "radsimp"], [211, 0, 0, "-", "ratsimp"], [12, 0, 0, "-", "simplify"], [211, 0, 0, "-", "sqrtdenest"], [211, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[211, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[211, 3, 1, "", "cse"], [211, 3, 1, "", "opt_cse"], [211, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[211, 1, 1, "", "EPath"], [211, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[211, 2, 1, "", "apply"], [211, 2, 1, "", "select"]], "sympy.simplify.fu": [[208, 3, 1, "", "TR0"], [208, 3, 1, "", "TR1"], [208, 3, 1, "", "TR10"], [208, 3, 1, "", "TR10i"], [208, 3, 1, "", "TR11"], [208, 3, 1, "", "TR111"], [208, 3, 1, "", "TR12"], [208, 3, 1, "", "TR12i"], [208, 3, 1, "", "TR13"], [208, 3, 1, "", "TR14"], [208, 3, 1, "", "TR15"], [208, 3, 1, "", "TR16"], [208, 3, 1, "", "TR2"], [208, 3, 1, "", "TR22"], [208, 3, 1, "", "TR2i"], [208, 3, 1, "", "TR3"], [208, 3, 1, "", "TR4"], [208, 3, 1, "", "TR5"], [208, 3, 1, "", "TR6"], [208, 3, 1, "", "TR7"], [208, 3, 1, "", "TR8"], [208, 3, 1, "", "TR9"], [208, 3, 1, "", "TRmorrie"], [208, 3, 1, "", "TRpower"], [208, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[211, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[211, 3, 1, "", "powdenest"], [211, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[211, 3, 1, "", "collect"], [211, 3, 1, "", "collect_const"], [211, 3, 1, "", "collect_sqrt"], [211, 3, 1, "", "fraction"], [211, 3, 1, "", "rad_rationalize"], [211, 3, 1, "", "radsimp"], [211, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[211, 3, 1, "", "ratsimp"], [211, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[211, 3, 1, "", "besselsimp"], [211, 3, 1, "", "hypersimilar"], [211, 3, 1, "", "hypersimp"], [211, 3, 1, "", "kroneckersimp"], [211, 3, 1, "", "logcombine"], [211, 3, 1, "", "nsimplify"], [211, 3, 1, "", "nthroot"], [211, 3, 1, "", "posify"], [211, 3, 1, "", "separatevars"], [211, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[211, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[211, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[217, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[212, 1, 1, "", "BinaryQuadratic"], [212, 1, 1, "", "CubicThue"], [212, 1, 1, "", "DiophantineEquationType"], [212, 1, 1, "", "DiophantineSolutionSet"], [212, 1, 1, "", "GeneralPythagorean"], [212, 1, 1, "", "GeneralSumOfEvenPowers"], [212, 1, 1, "", "GeneralSumOfSquares"], [212, 1, 1, "", "HomogeneousGeneralQuadratic"], [212, 1, 1, "", "HomogeneousTernaryQuadratic"], [212, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [212, 1, 1, "", "InhomogeneousGeneralQuadratic"], [212, 1, 1, "", "InhomogeneousTernaryQuadratic"], [212, 1, 1, "", "Linear"], [212, 3, 1, "", "PQa"], [212, 1, 1, "", "Univariate"], [212, 3, 1, "", "base_solution_linear"], [212, 3, 1, "", "classify_diop"], [212, 3, 1, "", "cornacchia"], [212, 3, 1, "", "descent"], [212, 3, 1, "", "diop_DN"], [212, 3, 1, "", "diop_bf_DN"], [212, 3, 1, "", "diop_general_pythagorean"], [212, 3, 1, "", "diop_general_sum_of_even_powers"], [212, 3, 1, "", "diop_general_sum_of_squares"], [212, 3, 1, "", "diop_linear"], [212, 3, 1, "", "diop_quadratic"], [212, 3, 1, "", "diop_solve"], [212, 3, 1, "", "diop_ternary_quadratic"], [212, 3, 1, "", "diop_ternary_quadratic_normal"], [212, 3, 1, "", "diophantine"], [212, 3, 1, "", "divisible"], [212, 3, 1, "", "equivalent"], [212, 3, 1, "", "find_DN"], [212, 3, 1, "", "gaussian_reduce"], [212, 3, 1, "", "holzer"], [212, 3, 1, "", "ldescent"], [212, 3, 1, "", "merge_solution"], [212, 3, 1, "", "parametrize_ternary_quadratic"], [212, 3, 1, "", "partition"], [212, 3, 1, "", "power_representation"], [212, 3, 1, "", "prime_as_sum_of_two_squares"], [212, 3, 1, "", "reconstruct"], [212, 3, 1, "", "sqf_normal"], [212, 3, 1, "", "square_factor"], [212, 3, 1, "", "sum_of_four_squares"], [212, 3, 1, "", "sum_of_powers"], [212, 3, 1, "", "sum_of_squares"], [212, 3, 1, "", "sum_of_three_squares"], [212, 3, 1, "", "transformation_to_DN"], [212, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[212, 2, 1, "", "matches"]], "sympy.solvers": [[214, 0, 0, "-", "inequalities"], [215, 0, 0, "-", "ode"], [216, 0, 0, "-", "pde"], [217, 0, 0, "-", "recurr"], [218, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[214, 3, 1, "", "reduce_abs_inequalities"], [214, 3, 1, "", "reduce_abs_inequality"], [214, 3, 1, "", "reduce_inequalities"], [214, 3, 1, "", "reduce_rational_inequalities"], [214, 3, 1, "", "solve_poly_inequalities"], [214, 3, 1, "", "solve_poly_inequality"], [214, 3, 1, "", "solve_rational_inequalities"], [214, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[215, 6, 1, "", "allhints"], [215, 3, 1, "", "checkinfsol"], [215, 3, 1, "", "checkodesol"], [215, 3, 1, "", "classify_ode"], [215, 3, 1, "", "constantsimp"], [215, 3, 1, "", "dsolve"], [215, 3, 1, "", "homogeneous_order"], [215, 3, 1, "", "infinitesimals"], [215, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[215, 3, 1, "", "lie_heuristic_abaco1_product"], [215, 3, 1, "", "lie_heuristic_abaco1_simple"], [215, 3, 1, "", "lie_heuristic_abaco2_similar"], [215, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [215, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [215, 3, 1, "", "lie_heuristic_bivariate"], [215, 3, 1, "", "lie_heuristic_chi"], [215, 3, 1, "", "lie_heuristic_function_sum"], [215, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[215, 3, 1, "", "_handle_Integral"], [215, 3, 1, "", "_linear_2eq_order1_type6"], [215, 3, 1, "", "_linear_2eq_order1_type7"], [215, 3, 1, "", "_nonlinear_2eq_order1_type1"], [215, 3, 1, "", "_nonlinear_2eq_order1_type2"], [215, 3, 1, "", "_nonlinear_2eq_order1_type3"], [215, 3, 1, "", "_nonlinear_2eq_order1_type4"], [215, 3, 1, "", "_nonlinear_2eq_order1_type5"], [215, 3, 1, "", "_nonlinear_3eq_order1_type1"], [215, 3, 1, "", "_nonlinear_3eq_order1_type2"], [215, 3, 1, "", "_nonlinear_3eq_order1_type3"], [215, 3, 1, "", "_nonlinear_3eq_order1_type4"], [215, 3, 1, "", "_nonlinear_3eq_order1_type5"], [215, 3, 1, "", "constant_renumber"], [215, 3, 1, "", "ode_1st_power_series"], [215, 3, 1, "", "ode_2nd_power_series_ordinary"], [215, 3, 1, "", "ode_2nd_power_series_regular"], [215, 3, 1, "", "ode_sol_simplicity"], [215, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[215, 3, 1, "", "compute_m_ybar"], [215, 3, 1, "", "construct_c"], [215, 3, 1, "", "construct_d"], [215, 3, 1, "", "get_gen_sol_from_part_sol"], [215, 3, 1, "", "rational_laurent_series"], [215, 3, 1, "", "remove_redundant_sols"], [215, 3, 1, "", "riccati_inverse_normal"], [215, 3, 1, "", "riccati_normal"], [215, 3, 1, "", "riccati_reduced"], [215, 3, 1, "", "solve_aux_eq"], [215, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[215, 1, 1, "", "AlmostLinear"], [215, 1, 1, "", "Bernoulli"], [215, 1, 1, "", "Factorable"], [215, 1, 1, "", "FirstExact"], [215, 1, 1, "", "FirstLinear"], [215, 1, 1, "", "HomogeneousCoeffBest"], [215, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [215, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [215, 1, 1, "", "LieGroup"], [215, 1, 1, "", "LinearCoefficients"], [215, 1, 1, "", "Liouville"], [215, 1, 1, "", "NthAlgebraic"], [215, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [215, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [215, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [215, 1, 1, "", "NthLinearEulerEqHomogeneous"], [215, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [215, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [215, 1, 1, "", "NthOrderReducible"], [215, 1, 1, "", "RationalRiccati"], [215, 1, 1, "", "RiccatiSpecial"], [215, 1, 1, "", "SecondHypergeometric"], [215, 1, 1, "", "SecondLinearAiry"], [215, 1, 1, "", "SecondLinearBessel"], [215, 1, 1, "", "Separable"], [215, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[215, 3, 1, "", "canonical_odes"], [215, 3, 1, "", "dsolve_system"], [215, 3, 1, "", "linear_ode_to_matrix"], [215, 3, 1, "", "linodesolve"], [215, 3, 1, "", "linodesolve_type"], [215, 3, 1, "", "matrix_exp"], [215, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[216, 3, 1, "", "checkpdesol"], [216, 3, 1, "", "classify_pde"], [216, 3, 1, "", "pde_1st_linear_constant_coeff"], [216, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [216, 3, 1, "", "pde_1st_linear_variable_coeff"], [216, 3, 1, "", "pde_separate"], [216, 3, 1, "", "pde_separate_add"], [216, 3, 1, "", "pde_separate_mul"], [216, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[217, 3, 1, "", "solve_poly_system"], [217, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[217, 3, 1, "", "rsolve"], [217, 3, 1, "", "rsolve_hyper"], [217, 3, 1, "", "rsolve_poly"], [217, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[217, 3, 1, "", "checksol"], [217, 3, 1, "", "nsolve"], [217, 3, 1, "", "solve"], [217, 3, 1, "", "solve_linear"], [217, 3, 1, "", "solve_linear_system"], [217, 3, 1, "", "solve_linear_system_LU"], [217, 3, 1, "", "solve_undetermined_coeffs"], [217, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[218, 3, 1, "", "_is_exponential"], [218, 3, 1, "", "_is_logarithmic"], [218, 3, 1, "", "_solve_exponential"], [218, 3, 1, "", "_solve_logarithm"], [218, 3, 1, "", "_transolve"], [218, 3, 1, "", "domain_check"], [218, 3, 1, "", "invert_complex"], [218, 3, 1, "", "invert_real"], [218, 3, 1, "", "linear_eq_to_matrix"], [218, 3, 1, "", "linsolve"], [218, 3, 1, "", "nonlinsolve"], [218, 3, 1, "", "solveset"], [218, 3, 1, "", "solveset_complex"], [218, 3, 1, "", "solveset_real"], [218, 3, 1, "", "solvify"]], "sympy.stats": [[219, 3, 1, "", "Arcsin"], [219, 3, 1, "", "Benini"], [219, 3, 1, "", "Bernoulli"], [219, 1, 1, "", "BernoulliProcess"], [219, 3, 1, "", "Beta"], [219, 3, 1, "", "BetaBinomial"], [219, 3, 1, "", "BetaNoncentral"], [219, 3, 1, "", "BetaPrime"], [219, 3, 1, "", "Binomial"], [219, 3, 1, "", "BoundedPareto"], [219, 3, 1, "", "Cauchy"], [219, 1, 1, "", "CentralMoment"], [219, 3, 1, "", "Chi"], [219, 3, 1, "", "ChiNoncentral"], [219, 3, 1, "", "ChiSquared"], [219, 3, 1, "", "Coin"], [219, 1, 1, "", "ContinuousMarkovChain"], [219, 3, 1, "", "ContinuousRV"], [219, 1, 1, "", "Covariance"], [219, 1, 1, "", "CrossCovarianceMatrix"], [219, 3, 1, "", "Dagum"], [219, 3, 1, "", "Die"], [219, 1, 1, "", "DiscreteMarkovChain"], [219, 3, 1, "", "DiscreteUniform"], [219, 3, 1, "", "E"], [219, 3, 1, "", "Erlang"], [219, 3, 1, "", "ExGaussian"], [219, 1, 1, "", "Expectation"], [219, 1, 1, "", "ExpectationMatrix"], [219, 3, 1, "", "Exponential"], [219, 3, 1, "", "FDistribution"], [219, 3, 1, "", "FiniteRV"], [219, 3, 1, "", "FisherZ"], [219, 3, 1, "", "Frechet"], [219, 3, 1, "", "Gamma"], [219, 3, 1, "", "GammaInverse"], [219, 1, 1, "", "GammaProcess"], [219, 3, 1, "", "GeneralizedMultivariateLogGamma"], [219, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [219, 3, 1, "", "Geometric"], [219, 3, 1, "", "Gompertz"], [219, 3, 1, "", "Gumbel"], [219, 3, 1, "", "Hermite"], [219, 3, 1, "", "Hypergeometric"], [219, 3, 1, "", "JointRV"], [219, 3, 1, "", "Kumaraswamy"], [219, 3, 1, "", "Laplace"], [219, 3, 1, "", "Levy"], [219, 3, 1, "", "LogLogistic"], [219, 3, 1, "", "LogNormal"], [219, 3, 1, "", "Logarithmic"], [219, 3, 1, "", "Logistic"], [219, 3, 1, "", "Lomax"], [219, 3, 1, "", "MatrixGamma"], [219, 3, 1, "", "MatrixNormal"], [219, 3, 1, "", "Maxwell"], [219, 1, 1, "", "Moment"], [219, 3, 1, "", "Moyal"], [219, 3, 1, "", "Multinomial"], [219, 3, 1, "", "MultivariateBeta"], [219, 3, 1, "", "MultivariateEwens"], [219, 3, 1, "", "MultivariateLaplace"], [219, 3, 1, "", "MultivariateNormal"], [219, 3, 1, "", "MultivariateT"], [219, 3, 1, "", "Nakagami"], [219, 3, 1, "", "NegativeBinomial"], [219, 3, 1, "", "NegativeMultinomial"], [219, 3, 1, "", "Normal"], [219, 3, 1, "", "NormalGamma"], [219, 3, 1, "", "P"], [219, 3, 1, "", "Pareto"], [219, 3, 1, "", "Poisson"], [219, 1, 1, "", "PoissonProcess"], [219, 3, 1, "", "PowerFunction"], [219, 1, 1, "", "Probability"], [219, 3, 1, "", "QuadraticU"], [219, 3, 1, "", "Rademacher"], [219, 3, 1, "", "RaisedCosine"], [219, 3, 1, "", "Rayleigh"], [219, 3, 1, "", "Reciprocal"], [219, 3, 1, "", "ShiftedGompertz"], [219, 3, 1, "", "Skellam"], [219, 3, 1, "", "StudentT"], [219, 3, 1, "", "Trapezoidal"], [219, 3, 1, "", "Triangular"], [219, 3, 1, "", "Uniform"], [219, 3, 1, "", "UniformSum"], [219, 1, 1, "", "Variance"], [219, 1, 1, "", "VarianceMatrix"], [219, 3, 1, "", "VonMises"], [219, 3, 1, "", "Wald"], [219, 3, 1, "", "Weibull"], [219, 1, 1, "", "WienerProcess"], [219, 3, 1, "", "WignerSemicircle"], [219, 3, 1, "", "Wishart"], [219, 3, 1, "", "YuleSimon"], [219, 3, 1, "", "Zeta"], [219, 3, 1, "", "cmoment"], [219, 3, 1, "", "correlation"], [219, 3, 1, "", "coskewness"], [219, 3, 1, "", "covariance"], [219, 0, 0, "-", "crv"], [219, 0, 0, "-", "crv_types"], [219, 3, 1, "", "density"], [219, 3, 1, "", "entropy"], [219, 3, 1, "", "factorial_moment"], [219, 0, 0, "-", "frv"], [219, 0, 0, "-", "frv_types"], [219, 3, 1, "", "given"], [219, 3, 1, "", "kurtosis"], [219, 3, 1, "", "marginal_distribution"], [219, 3, 1, "", "median"], [219, 3, 1, "", "moment"], [219, 3, 1, "", "quantile"], [219, 0, 0, "-", "rv"], [219, 3, 1, "", "sample"], [219, 3, 1, "", "sample_iter"], [219, 3, 1, "", "skewness"], [219, 3, 1, "", "std"], [219, 3, 1, "", "variance"], [219, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[219, 2, 1, "", "expectation"], [219, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[219, 2, 1, "", "absorbing_probabilities"], [219, 2, 1, "", "canonical_form"], [219, 2, 1, "", "communication_classes"], [219, 2, 1, "", "decompose"], [219, 2, 1, "", "fixed_row_vector"], [219, 2, 1, "", "fundamental_matrix"], [219, 4, 1, "", "limiting_distribution"], [219, 2, 1, "", "sample"], [219, 2, 1, "", "stationary_distribution"], [219, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[219, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[219, 1, 1, "", "ContinuousDomain"], [219, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[219, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[219, 3, 1, "", "Die"], [219, 3, 1, "", "Normal"]], "sympy.stats.frv": [[219, 1, 1, "", "FiniteDomain"], [219, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[219, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[219, 1, 1, "", "ConditionalDomain"], [219, 1, 1, "", "PSpace"], [219, 1, 1, "", "ProductDomain"], [219, 1, 1, "", "ProductPSpace"], [219, 1, 1, "", "RandomDomain"], [219, 1, 1, "", "RandomSymbol"], [219, 1, 1, "", "SingleDomain"], [219, 1, 1, "", "SinglePSpace"], [219, 3, 1, "", "pspace"], [219, 3, 1, "", "random_symbols"], [219, 3, 1, "", "rs_swap"], [219, 3, 1, "", "sampling_E"], [219, 3, 1, "", "sampling_P"], [219, 3, 1, "", "sampling_density"]], "sympy.tensor": [[220, 0, 0, "-", "array"], [223, 0, 0, "-", "index_methods"], [224, 0, 0, "-", "indexed"], [225, 0, 0, "-", "tensor"], [226, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[220, 1, 1, "", "ImmutableDenseNDimArray"], [220, 1, 1, "", "ImmutableSparseNDimArray"], [220, 1, 1, "", "MutableDenseNDimArray"], [220, 1, 1, "", "MutableSparseNDimArray"], [220, 3, 1, "", "derive_by_array"], [221, 0, 0, "-", "expressions"], [220, 3, 1, "", "permutedims"], [220, 3, 1, "", "tensorcontraction"], [220, 3, 1, "", "tensordiagonal"], [220, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[223, 3, 1, "", "get_contraction_structure"], [223, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[224, 1, 1, "", "Idx"], [224, 1, 1, "", "Indexed"], [224, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[224, 4, 1, "", "label"], [224, 4, 1, "", "lower"], [224, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[224, 4, 1, "", "base"], [224, 4, 1, "", "indices"], [224, 4, 1, "", "ranges"], [224, 4, 1, "", "rank"], [224, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[224, 4, 1, "", "label"], [224, 4, 1, "", "offset"], [224, 4, 1, "", "shape"], [224, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[225, 1, 1, "", "TensAdd"], [225, 1, 1, "", "TensExpr"], [225, 1, 1, "", "TensMul"], [225, 1, 1, "", "TensorHead"], [225, 1, 1, "", "TensorIndex"], [225, 1, 1, "", "TensorIndexType"], [225, 1, 1, "", "TensorSymmetry"], [225, 1, 1, "", "TensorType"], [225, 1, 1, "", "_TensorManager"], [225, 3, 1, "", "canon_bp"], [225, 3, 1, "", "riemann_cyclic"], [225, 3, 1, "", "riemann_cyclic_replace"], [225, 3, 1, "", "tensor_heads"], [225, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[225, 2, 1, "", "canon_bp"], [225, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[225, 2, 1, "", "get_matrix"], [225, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[225, 2, 1, "", "canon_bp"], [225, 2, 1, "", "contract_metric"], [225, 2, 1, "", "get_free_indices"], [225, 2, 1, "", "get_indices"], [225, 2, 1, "", "perm2tensor"], [225, 2, 1, "", "sorted_components"], [225, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[225, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[225, 2, 1, "", "direct_product"], [225, 2, 1, "", "fully_symmetric"], [225, 2, 1, "", "no_symmetry"], [225, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[225, 2, 1, "", "clear"], [225, 2, 1, "", "comm_i2symbol"], [225, 2, 1, "", "comm_symbols2i"], [225, 2, 1, "", "get_comm"], [225, 2, 1, "", "set_comm"], [225, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[226, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[228, 0, 0, "-", "pytest"], [229, 0, 0, "-", "randtest"], [230, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[228, 3, 1, "", "SKIP"], [228, 3, 1, "", "nocache_fail"], [228, 3, 1, "", "raises"], [228, 3, 1, "", "warns"], [228, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[230, 1, 1, "", "PyTestReporter"], [230, 1, 1, "", "Reporter"], [230, 1, 1, "", "SymPyDocTestFinder"], [230, 1, 1, "", "SymPyDocTestRunner"], [230, 1, 1, "", "SymPyOutputChecker"], [230, 1, 1, "", "SymPyTestResults"], [230, 3, 1, "", "convert_to_native_paths"], [230, 3, 1, "", "doctest"], [230, 3, 1, "", "get_sympy_dir"], [230, 3, 1, "", "raise_on_deprecated"], [230, 3, 1, "", "run_all_tests"], [230, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [230, 3, 1, "", "split_list"], [230, 3, 1, "", "sympytestfile"], [230, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[230, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[230, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[230, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[230, 5, 1, "", "attempted"], [230, 5, 1, "", "failed"]], "sympy.utilities": [[231, 0, 0, "-", "autowrap"], [232, 0, 0, "-", "codegen"], [233, 0, 0, "-", "decorator"], [234, 0, 0, "-", "enumerative"], [235, 0, 0, "-", "exceptions"], [237, 0, 0, "-", "iterables"], [238, 0, 0, "-", "lambdify"], [239, 0, 0, "-", "memoization"], [240, 0, 0, "-", "misc"], [241, 0, 0, "-", "pkgdata"], [242, 0, 0, "-", "source"], [243, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[231, 1, 1, "", "CodeWrapper"], [231, 1, 1, "", "CythonCodeWrapper"], [231, 1, 1, "", "DummyWrapper"], [231, 1, 1, "", "F2PyCodeWrapper"], [231, 1, 1, "", "UfuncifyCodeWrapper"], [231, 3, 1, "", "autowrap"], [231, 3, 1, "", "binary_function"], [231, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[231, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[231, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[232, 1, 1, "", "Argument"], [232, 1, 1, "", "CCodeGen"], [232, 1, 1, "", "CodeGen"], [232, 1, 1, "", "DataType"], [232, 1, 1, "", "FCodeGen"], [232, 1, 1, "", "JuliaCodeGen"], [232, 1, 1, "", "OctaveCodeGen"], [232, 1, 1, "", "OutputArgument"], [232, 1, 1, "", "Result"], [232, 1, 1, "", "Routine"], [232, 1, 1, "", "RustCodeGen"], [232, 3, 1, "", "codegen"], [232, 3, 1, "", "get_default_datatype"], [232, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[232, 2, 1, "", "dump_c"], [232, 2, 1, "", "dump_h"], [232, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[232, 2, 1, "", "dump_code"], [232, 2, 1, "", "routine"], [232, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[232, 2, 1, "", "dump_f95"], [232, 2, 1, "", "dump_h"], [232, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[232, 2, 1, "", "dump_jl"], [232, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[232, 2, 1, "", "dump_m"], [232, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[232, 4, 1, "", "result_variables"], [232, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[232, 2, 1, "", "dump_rs"], [232, 2, 1, "", "get_prototype"], [232, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[233, 3, 1, "", "conserve_mpmath_dps"], [233, 3, 1, "", "deprecated"], [233, 3, 1, "", "doctest_depends_on"], [233, 3, 1, "", "memoize_property"], [233, 1, 1, "", "no_attrs_in_subclass"], [233, 3, 1, "", "public"], [233, 3, 1, "", "threaded"], [233, 3, 1, "", "threaded_factory"], [233, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[234, 1, 1, "", "MultisetPartitionTraverser"], [234, 3, 1, "", "factoring_visitor"], [234, 3, 1, "", "list_visitor"], [234, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[234, 2, 1, "", "count_partitions"], [234, 2, 1, "", "enum_all"], [234, 2, 1, "", "enum_large"], [234, 2, 1, "", "enum_range"], [234, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[235, 7, 1, "", "SymPyDeprecationWarning"], [235, 3, 1, "", "ignore_warnings"], [235, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[237, 1, 1, "", "NotIterable"], [237, 3, 1, "", "binary_partitions"], [237, 3, 1, "", "bracelets"], [237, 3, 1, "", "capture"], [237, 3, 1, "", "common_prefix"], [237, 3, 1, "", "common_suffix"], [237, 3, 1, "", "connected_components"], [237, 3, 1, "", "dict_merge"], [237, 3, 1, "", "filter_symbols"], [237, 3, 1, "", "flatten"], [237, 3, 1, "", "generate_bell"], [237, 3, 1, "", "generate_derangements"], [237, 3, 1, "", "generate_involutions"], [237, 3, 1, "", "generate_oriented_forest"], [237, 3, 1, "", "group"], [237, 3, 1, "", "has_dups"], [237, 3, 1, "", "has_variety"], [237, 3, 1, "", "ibin"], [237, 3, 1, "", "iproduct"], [237, 3, 1, "", "is_palindromic"], [237, 3, 1, "", "is_sequence"], [237, 3, 1, "", "iterable"], [237, 3, 1, "", "kbins"], [237, 3, 1, "", "least_rotation"], [237, 3, 1, "", "minlex"], [237, 3, 1, "", "multiset"], [237, 3, 1, "", "multiset_combinations"], [237, 3, 1, "", "multiset_derangements"], [237, 3, 1, "", "multiset_partitions"], [237, 3, 1, "", "multiset_permutations"], [237, 3, 1, "", "necklaces"], [237, 3, 1, "", "numbered_symbols"], [237, 3, 1, "", "ordered_partitions"], [237, 3, 1, "", "partitions"], [237, 3, 1, "", "permute_signs"], [237, 3, 1, "", "postfixes"], [237, 3, 1, "", "prefixes"], [237, 3, 1, "", "random_derangement"], [237, 3, 1, "", "reshape"], [237, 3, 1, "", "rotate_left"], [237, 3, 1, "", "rotate_right"], [237, 3, 1, "", "rotations"], [237, 3, 1, "", "roundrobin"], [237, 3, 1, "", "runs"], [237, 3, 1, "", "sift"], [237, 3, 1, "", "signed_permutations"], [237, 3, 1, "", "strongly_connected_components"], [237, 3, 1, "", "subsets"], [237, 3, 1, "", "take"], [237, 3, 1, "", "topological_sort"], [237, 3, 1, "", "unflatten"], [237, 3, 1, "", "uniq"], [237, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[238, 3, 1, "", "implemented_function"], [238, 3, 1, "", "lambdastr"], [238, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[239, 3, 1, "", "assoc_recurrence_memo"], [239, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[240, 3, 1, "", "as_int"], [240, 3, 1, "", "debug"], [240, 3, 1, "", "debug_decorator"], [240, 3, 1, "", "filldedent"], [240, 3, 1, "", "find_executable"], [240, 3, 1, "", "func_name"], [240, 3, 1, "", "ordinal"], [240, 3, 1, "", "rawlines"], [240, 3, 1, "", "replace"], [240, 3, 1, "", "strlines"], [240, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[241, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[242, 3, 1, "", "get_class"], [242, 3, 1, "", "get_mod_func"], [242, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[243, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[244, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[244, 2, 1, "", "__init__"], [244, 2, 1, "", "create_new"], [244, 2, 1, "", "locate_new"], [244, 2, 1, "", "orient_new"], [244, 2, 1, "", "orient_new_axis"], [244, 2, 1, "", "orient_new_body"], [244, 2, 1, "", "orient_new_quaternion"], [244, 2, 1, "", "orient_new_space"], [244, 2, 1, "", "position_wrt"], [244, 2, 1, "", "rotation_matrix"], [244, 2, 1, "", "scalar_map"]], "sympy.vector": [[246, 3, 1, "", "curl"], [246, 3, 1, "", "divergence"], [246, 3, 1, "", "express"], [246, 3, 1, "", "gradient"], [246, 3, 1, "", "is_conservative"], [246, 3, 1, "", "is_solenoidal"], [246, 3, 1, "", "matrix_to_vector"], [246, 3, 1, "", "scalar_potential"], [246, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[244, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[244, 2, 1, "", "cross"], [244, 2, 1, "", "dot"], [244, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[244, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[244, 4, 1, "", "components"], [244, 2, 1, "", "cross"], [244, 2, 1, "", "dot"], [244, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[244, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[244, 2, 1, "", "multiplicity"], [244, 2, 1, "", "rational_parametrization"], [244, 2, 1, "", "regular_point"], [244, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[244, 1, 1, "", "ParametricIntegral"], [246, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[245, 1, 1, "", "AxisOrienter"], [245, 1, 1, "", "BodyOrienter"], [245, 1, 1, "", "Orienter"], [245, 1, 1, "", "QuaternionOrienter"], [245, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[245, 2, 1, "", "__init__"], [245, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[245, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[245, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[245, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[245, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[244, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[244, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[244, 4, 1, "", "components"], [244, 2, 1, "", "cross"], [244, 2, 1, "", "dot"], [244, 2, 1, "", "magnitude"], [244, 2, 1, "", "normalize"], [244, 2, 1, "", "outer"], [244, 2, 1, "", "projection"], [244, 2, 1, "", "separate"], [244, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 5, 6, 10, 12, 14, 15, 16, 22, 23, 24, 34, 58, 75, 94, 132, 180, 189, 244, 246, 247, 250, 264, 266, 269], "build": [1, 3], "document": [1, 3, 4, 6, 7, 23], "requir": [1, 4], "depend": [1, 3, 129, 189, 248], "docker": 1, "debian": 1, "ubuntu": 1, "fedora": 1, "mac": 1, "window": [1, 185], "10": [1, 10, 96], "doc": [1, 190], "local": 1, "instal": [1, 23, 24, 94, 273], "logo": 1, "view": 1, "auto": 1, "rebuild": 1, "live": 1, "server": 1, "pdf": 1, "debug": 2, "hard": 3, "option": [3, 22, 192], "recommend": [3, 7], "interact": [3, 80, 185], "us": [3, 7, 10, 15, 22, 34, 52, 55, 76, 77, 93, 96, 124, 129, 130, 183, 185, 196, 218, 248], "print": [3, 10, 19, 34, 80, 106, 113, 174, 179, 199, 274], "pars": [3, 94], "logic": [3, 18, 82, 254, 257], "plot": [3, 10, 100, 145, 185], "lambdifi": [3, 10, 93, 238, 264], "code": [3, 4, 5, 7, 10, 34, 36, 106, 183, 199, 242, 254, 256], "gener": [3, 6, 7, 42, 44, 189, 194, 218, 249, 254, 256], "autowrap": [3, 34, 231], "printer": [3, 34, 199, 274], "test": [3, 5, 10, 49, 82, 198, 227, 229, 230, 271], "onli": [3, 218], "statist": 3, "symengin": 3, "backend": [3, 185], "experiment": [3, 94], "rubi": 3, "integr": [3, 10, 56, 60, 74, 76, 77, 78, 79, 106, 187, 194, 253, 265], "sage": 3, "develop": [3, 5, 52], "get": [3, 5, 12], "sourc": [3, 10, 12, 242], "run": [3, 5, 24, 230], "benchmark": 3, "deprec": [4, 10], "polici": 4, "what": [4, 129, 188, 189, 218, 269, 272], "i": [4, 12, 77, 93, 129, 188, 199, 218, 269], "try": 4, "avoid": 4, "backward": 4, "incompat": 4, "chang": 4, "first": [4, 10], "place": 4, "when": [4, 77], "doe": [4, 12, 218], "public": 4, "api": [4, 23, 73, 77, 79, 102, 125, 181, 218, 231, 232, 251, 254], "Not": [4, 22], "The": [4, 10, 17, 19, 35, 42, 77, 129, 170, 181, 194, 206, 209, 249, 250, 269], "purpos": 4, "technic": 4, "possibl": [4, 22, 271], "how": [4, 20, 23, 77, 183, 218], "long": 4, "should": [4, 93], "last": 4, "checklist": 4, "ad": 4, "releas": 4, "note": [4, 19, 52, 64, 129, 206, 208, 267, 276], "entri": [4, 88], "environ": 5, "setup": 5, "git": [5, 24], "virtual": 5, "docstr": [6, 7, 95, 98, 107, 108, 109, 110, 111, 112, 113, 114, 176, 177, 178, 179, 237, 244, 245, 246], "style": [6, 7], "guid": [6, 7, 20, 23, 125, 181, 251], "guidelin": [6, 7], "format": [6, 7, 22], "section": 6, "1": [6, 10, 77, 96, 115, 129, 141, 215], "singl": [6, 12], "sentenc": 6, "summari": 6, "2": [6, 10, 77, 96, 115, 129, 215], "explan": [6, 13, 23], "3": [6, 10, 79, 96, 115, 166, 215], "exampl": [6, 19, 25, 52, 64, 76, 79, 92, 96, 103, 116, 129, 133, 137, 168, 170, 183, 198, 199, 206, 209, 219, 220, 221, 224, 249, 269, 275], "4": [6, 10, 96, 215], "paramet": [6, 209, 218], "5": [6, 10, 96, 215], "see": [6, 52, 249], "also": [6, 52], "6": [6, 10, 96, 215], "refer": [6, 17, 23, 26, 33, 51, 52, 54, 64, 70, 77, 79, 83, 84, 85, 86, 88, 90, 92, 94, 131, 137, 140, 170, 181, 183, 184, 185, 186, 188, 190, 192, 194, 195, 206, 208, 209, 212, 218, 231, 232, 251, 254], "sampl": [6, 10], "class": [6, 14, 33, 34, 51, 54, 83, 84, 86, 88, 90, 92, 129, 175, 185, 188, 194, 199, 211, 212, 220, 244, 245], "ar": [6, 183, 189, 218], "mathemat": [6, 12, 132], "function": [6, 10, 12, 19, 22, 34, 42, 51, 52, 58, 59, 60, 70, 71, 74, 75, 77, 82, 88, 92, 94, 96, 106, 130, 152, 155, 176, 177, 180, 185, 187, 189, 190, 195, 198, 199, 209, 211, 212, 215, 216, 220, 246, 250, 274, 275], "best": [6, 7, 19], "practic": [6, 7, 19], "write": [6, 7, 19], "import": [6, 10], "sphinx": 6, "cross": [6, 177], "referenc": 6, "type": [7, 34, 60, 176, 215, 218, 219], "narr": 7, "markdown": 7, "prefer": 7, "math": [7, 34], "latex": [7, 94, 274], "head": 7, "spell": 7, "punctuat": 7, "capit": 7, "tone": 7, "contribut": [8, 9, 23, 196], "make": [9, 22], "list": [10, 12], "activ": 10, "silenc": 10, "warn": [10, 235], "version": 10, "12": 10, "11": [10, 96], "new": [10, 248], "mathematica": [10, 199], "parser": [10, 115], "redund": 10, "static": 10, "method": [10, 15, 19, 24, 110, 119, 122, 123, 124, 127, 128, 129, 199, 216, 218, 223, 248, 271], "carmichael": 10, "check": [10, 22, 176], "argument": [10, 12, 218], "hadamardproduct": 10, "matadd": 10, "matmul": 10, "some": [10, 132, 218], "travers": [10, 52], "have": [10, 22, 198], "been": 10, "move": [10, 209], "core": [10, 52, 85], "trace": 10, "compat": [10, 221], "submodul": [10, 64], "9": [10, 96], "expr_free_symbol": 10, "stat": [10, 219], "numsampl": 10, "n": [10, 52, 215, 220, 221], "poli": [10, 188, 189, 190, 197], "solver": [10, 197, 213, 214, 215, 217, 218, 276], "rawmatrix": 10, "non": 10, "expr": [10, 52], "object": [10, 14, 224], "matrix": [10, 30, 84, 85, 88, 89, 129, 215, 219, 271], "get_seg": 10, "attribut": [10, 35, 42], "mdft": 10, "physic": [10, 103, 106, 116, 126, 127, 128, 129, 130, 131, 132, 133, 172, 174, 180, 181, 182, 183, 254, 260], "matric": [10, 15, 83, 84, 85, 86, 87, 88, 90, 103, 105, 221, 254, 258, 271], "privat": 10, "sparsematrix": [10, 90], "_smat": 10, "densematrix": 10, "_mat": 10, "laplace_transform": 10, "nocond": 10, "fals": [10, 22], "8": [10, 96], "theanocod": 10, "assumpt": [10, 14, 17, 19, 29, 52], "handler": [10, 17], "askhandl": 10, "relat": [10, 12, 17, 52, 60, 82, 180, 183, 207, 250], "7": [10, 96, 215], "call": [10, 22], "stochasticprocess": 10, "distribut": [10, 192, 219], "randomindexedsymbol": 10, "discretemarkovchain": 10, "absorbing_probabilit": 10, "util": [10, 34, 49, 50, 69, 88, 138, 194, 217, 236, 243, 254, 262], "misc": [10, 29], "find_execut": 10, "mutabl": 10, "diffgeom": 10, "unicod": [10, 274], "pretti": [10, 199, 274], "stringpict": 10, "prettyform": 10, "pretty_symbologi": 10, "xstr": 10, "pass": 10, "set": [10, 14, 22, 30, 64, 183, 207, 218, 274], "oper": [10, 12, 74, 88, 143, 152, 154, 155, 176, 180, 183, 209, 220, 226, 247, 249, 250, 264, 271], "longer": 10, "accept": 10, "arg": [10, 58, 270], "variou": [10, 198], "randtest": 10, "mix": 10, "polynomi": [10, 60, 74, 187, 189, 190, 191, 192, 194, 195, 196, 198, 217, 275], "express": [10, 12, 22, 34, 64, 71, 74, 82, 85, 94, 108, 177, 189, 198, 221, 246, 248, 264, 270], "binari": 10, "print_cycl": 10, "flag": 10, "combinator": [10, 39], "permut": [10, 43, 44], "string": [10, 17, 264], "fallback": 10, "sympifi": [10, 52], "creat": [10, 12, 19, 88], "an": [10, 22, 64, 115, 170, 209, 218, 270], "indefinit": 10, "eq": [10, 22, 52], "tensor": [10, 48, 60, 164, 222, 225, 226], "fun_ev": 10, "__call__": 10, "tensortyp": 10, "dummy_fmt": 10, "tensorindextyp": 10, "metric": 10, "get_kronecker_delta": 10, "get_epsilon": 10, "tensorsymmetri": 10, "tensorhead": 10, "unit": [10, 30, 169, 170, 171, 173], "quantiti": [10, 168, 170, 172, 248], "is_emptyset": 10, "productset": [10, 207], "iter": [10, 207, 237], "set_potential_energi": 10, "mechan": [10, 17, 97, 106, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 152, 219], "condit": [10, 77, 207], "conditionset": [10, 207], "max_degre": 10, "get_upper_degre": 10, "properti": [10, 17, 186], "multivariate_result": 10, "dixonresult": 10, "rh": 10, "default": 10, "0": 10, "tupl": [10, 12, 52, 195], "lambda": [10, 52], "evalu": [10, 12, 19, 56, 74, 132, 270], "differentiate_finit": 10, "data": 10, "clear_cach": 10, "clear_subproduct": 10, "keyword": [10, 12], "is_diagonaliz": 10, "row": [10, 271], "col": 10, "jordan_block": 10, "dimens": [10, 64, 167, 170], "scale_factor": 10, "quanit": 10, "classof": 10, "a2idx": 10, "from": [10, 12, 22, 198, 221], "dot": [10, 177, 274], "product": [10, 55, 153, 164, 220, 249], "column": [10, 271], "vector": [10, 42, 52, 125, 174, 175, 176, 180, 181, 182, 183, 192, 244, 246, 247, 248, 250, 251, 252, 253], "geometri": [10, 54, 64, 186], "line3d": 10, "equat": [10, 21, 22, 127, 128, 129, 168, 187, 212, 215, 217, 218, 276], "need": [10, 170], "k": [10, 190], "glossari": 11, "gotcha": [12, 17, 115, 267], "pitfal": 12, "introduct": [12, 15, 26, 33, 34, 35, 42, 54, 64, 82, 115, 132, 170, 180, 182, 185, 186, 187, 194, 198, 252, 269], "equal": [12, 22, 52, 267], "sign": [12, 58, 267], "doubl": [12, 57], "variabl": [12, 22, 185, 219, 248], "assign": 12, "between": [12, 17, 172, 189], "symbol": [12, 17, 18, 19, 52, 71, 129, 133, 184, 189, 195, 198, 218, 267, 269], "python": [12, 34], "number": [12, 30, 38, 52, 55, 56, 77, 189, 194, 198, 254, 259], "v": [12, 18, 189], "float": [12, 52, 56], "ration": [12, 30, 52, 189, 190, 195, 198, 201, 207, 215, 275], "immut": [12, 86], "invers": [12, 19, 58, 77], "trig": 12, "sqrt": [12, 58], "special": [12, 16, 34, 60, 195, 207, 275], "dictionari": 12, "help": 12, "within": 12, "classif": 14, "kind": [14, 52], "func": [14, 270], "finit": [15, 30, 32, 35, 186, 189, 192, 194, 198, 209, 219, 265], "differ": [15, 17, 32, 132, 189, 248, 265], "approxim": [15, 34], "deriv": [15, 52, 183, 220, 250, 265], "A": [15, 117, 118, 121, 122, 123, 124, 129, 269, 276], "direct": [15, 250], "topic": [16, 106, 174, 254, 261], "old": [17, 189], "system": [17, 100, 120, 133, 167, 169, 170, 173, 215, 217, 247, 248, 250, 252], "appli": [17, 77, 209], "input": [17, 218], "predic": [17, 29, 30], "abov": 17, "definit": [17, 19, 30, 70], "implic": 17, "interpret": 17, "other": [17, 19, 24, 71, 180, 248], "is_": 17, "implement": [17, 77, 180, 199, 209, 231, 232, 247, 250], "limit": [17, 76, 115, 204, 206, 265], "combin": [17, 74], "fuzzi": 18, "boolean": [18, 82], "three": [18, 64], "valu": 18, "bool": 18, "custom": [19, 185, 199], "easi": 19, "case": [19, 218], "fulli": 19, "defin": 19, "automat": [19, 198], "eval": 19, "remind": 19, "kei": [19, 132, 270], "point": [19, 56, 67, 106, 174, 178, 182, 247], "numer": [19, 56, 74, 79, 93, 106, 132], "evalf": [19, 52, 93, 264], "rewrit": [19, 34, 200, 275], "simplif": [19, 56, 82, 208, 211, 275], "doit": 19, "expand": [19, 52, 198, 200, 275], "differenti": [19, 54, 74, 106, 217, 218, 276], "as_real_imag": 19, "miscellan": [19, 58, 64, 240], "_eval_": 19, "complet": [19, 115], "versin": 19, "divid": 19, "fuse": 19, "multipli": 19, "add": [19, 52], "fma": 19, "addit": [19, 74], "tip": [19, 264, 265, 267, 270, 271], "solv": [21, 22, 96, 187, 194, 217, 218, 276], "algebra": [22, 26, 30, 81, 88, 140, 183, 186, 189, 194, 198, 217, 276], "guidanc": 22, "includ": 22, "ensur": [22, 218], "consist": 22, "dict": [22, 52], "true": [22, 129], "solveset": [22, 218], "your": 22, "zero": [22, 30, 52, 100, 192, 198, 271], "put": 22, "form": [22, 82, 89, 129, 188, 215, 221], "restrict": 22, "domain": [22, 187, 189, 190, 195, 198, 218], "solut": [22, 152, 218, 249], "explicitli": 22, "repres": [22, 77, 160, 189, 194], "infinit": [22, 30, 218], "result": [22, 198], "substitut": [22, 106, 174, 264], "cannot": 22, "necessarili": 22, "interrog": 22, "programmat": 22, "can": 22, "speed": [22, 106, 129], "up": [22, 274], "ani": [22, 218], "denomin": 22, "do": [22, 218], "simplifi": [22, 34, 192, 210, 211, 275], "all": 22, "which": [22, 93, 199], "analyt": [22, 152], "welcom": 23, "": [23, 52, 110, 119, 122, 123, 124, 127, 128, 129, 150, 161, 198, 208, 217, 218, 248, 253, 272], "tutori": [23, 212, 263, 268], "anaconda": 24, "mpmath": 24, "question": 24, "abc": 25, "caveat": [25, 94], "quaternion": 26, "ask": 27, "assum": 28, "queri": 29, "content": [29, 39, 59, 72, 78, 191, 203, 213, 222], "perform": 29, "improv": [29, 115], "common": [30, 83, 106, 174, 198, 199, 200, 211], "tautolog": 30, "commut": [30, 146, 186], "calculu": [30, 32, 183, 265], "symmetr": 30, "invert": 30, "orthogon": [30, 60, 195, 250], "unitari": 30, "posit": 30, "upper": 30, "triangular": 30, "lower": 30, "diagon": [30, 220, 271], "full": 30, "rank": 30, "squar": [30, 187, 211], "integ": [30, 52, 58, 189, 207], "element": [30, 129, 189, 194], "real": [30, 189, 207], "complex": [30, 58, 189, 207], "singular": [30, 32, 60, 96], "normal": [30, 89, 188, 198], "theori": [30, 33, 254, 259], "even": 30, "odd": 30, "prime": [30, 194], "composit": [30, 74], "order": [30, 52, 195, 206, 209, 215], "neg": 30, "nonzero": 30, "nonposit": 30, "nonneg": 30, "irrat": 30, "extend": [30, 209], "hermitian": 30, "imaginari": 30, "antihermitian": 30, "transcendent": 30, "refin": 31, "weight": 32, "categori": 33, "base": [33, 54, 186, 187, 198, 205, 218], "diagram": 33, "draw": 33, "codegen": [34, 232], "tool": [34, 91, 211], "abstract": [34, 97, 101, 103, 125, 135, 152, 181, 190], "syntax": 34, "tree": [34, 189, 199, 270], "ast": [34, 115], "predefin": 34, "node": 34, "c": [34, 199], "cfunction": 34, "specif": 34, "cnode": 34, "cxxnode": 34, "fortran": [34, 199], "fnode": 34, "algorithm": [34, 35, 150, 161, 192, 195, 201, 206, 209], "pyutil": 34, "cutil": 34, "futil": 34, "present": [35, 42], "group": [35, 37, 40, 42, 43, 170], "overview": [35, 42, 77], "facil": 35, "construct": [35, 42, 221], "free": [35, 187], "word": [35, 42], "coset": 35, "enumer": [35, 57], "todd": 35, "coxet": 35, "cosett": 35, "compress": 35, "standard": 35, "subgroup": 35, "index": [35, 42, 221, 224], "low": 35, "reidemeist": 35, "schreier": 35, "bibliographi": [35, 42], "grai": 36, "constructor": [37, 195, 271], "nilpot": 38, "abelian": 38, "cyclic": 38, "name": 40, "partit": [41, 57, 212, 237], "polycycl": 42, "polycyclicgroup": 42, "collector": 42, "comput": [42, 77, 93, 152, 198, 269], "minim": [42, 194], "uncollect": 42, "subword": 42, "collect": [42, 200, 211, 275], "expon": [42, 198], "depth": [42, 64], "lead": 42, "polyhedron": 45, "prufer": 46, "sequenc": [46, 74, 192, 204, 205], "subset": [47, 55], "canonic": 48, "concret": 51, "hypergeometr": [51, 60, 71, 74, 201, 209, 211], "term": [51, 198, 200, 206], "cach": 52, "cacheit": 52, "basic": [52, 56, 88, 176, 187, 189, 195, 207, 247, 254, 255, 264, 271], "atom": 52, "singleton": [52, 205, 207], "unevaluatedexpr": 52, "atomicexpr": 52, "wild": 52, "dummi": 52, "var": 52, "algebraicnumb": 52, "numbersymbol": 52, "realnumb": 52, "igcd": 52, "ilcm": 52, "seterr": 52, "One": 52, "negativeon": 52, "half": 52, "nan": [52, 129], "infin": 52, "negativeinfin": 52, "complexinfin": 52, "exp1": 52, "imaginaryunit": 52, "pi": 52, "eulergamma": 52, "catalan": [52, 57], "goldenratio": 52, "tribonacciconst": 52, "mod_invers": 52, "power": [52, 196, 201, 207, 211, 269, 275], "pow": 52, "integer_nthroot": 52, "integer_log": 52, "mul": 52, "prod": 52, "mod": 52, "rel": 52, "ne": 52, "lt": 52, "le": 52, "gt": 52, "ge": 52, "greaterthan": 52, "lessthan": 52, "unequ": 52, "strictgreaterthan": 52, "strictlessthan": 52, "multidimension": 52, "wildfunct": 52, "diff": 52, "functionclass": 52, "sub": [52, 93], "poleerror": 52, "count_op": 52, "expand_mul": 52, "expand_log": [52, 275], "expand_func": [52, 275], "expand_trig": [52, 275], "expand_complex": 52, "expand_multinomi": 52, "expand_power_exp": [52, 275], "expand_power_bas": [52, 275], "nfloat": 52, "evalfmixin": 52, "precisionexhaust": 52, "contain": 52, "tuplekind": 52, "exprtool": 52, "gcd_term": 52, "factor_term": 52, "numberkind": 52, "undefinedkind": 52, "booleankind": 52, "sort": 52, "default_sort_kei": 52, "random": [52, 219], "random_complex_numb": 52, "verify_numer": 52, "test_derivative_numer": 52, "_randrang": 52, "_randint": 52, "bottom_up": 52, "postorder_travers": 52, "preorder_travers": 52, "walk": [52, 270], "cryptographi": 53, "discret": [55, 219], "transform": [55, 77, 79, 94, 248], "fast": 55, "fourier": [55, 202], "theoret": 55, "walsh": 55, "hadamard": 55, "m\u00f6biu": 55, "convolut": 55, "cover": 55, "intersect": [55, 64, 207], "accuraci": 56, "error": [56, 60], "handl": [56, 218], "sum": 56, "combinatori": [57, 211], "bell": 57, "bernoulli": [57, 215], "binomi": 57, "euler": 57, "factori": [57, 187], "subfactori": 57, "factorial2": 57, "fallingfactori": 57, "fibonacci": 57, "tribonacci": 57, "harmon": [57, 60, 141, 166], "luca": 57, "genocchi": 57, "multifactori": 57, "risingfactori": 57, "stirl": 57, "nc": 57, "np": 57, "nt": 57, "elementari": [58, 186, 205, 207], "re": 58, "im": 58, "ab": 58, "conjug": 58, "polar_lift": 58, "periodic_argu": 58, "principal_branch": 58, "trigonometr": [58, 60, 208, 211, 275], "sin": 58, "co": 58, "tan": 58, "cot": 58, "sec": 58, "csc": 58, "sinc": 58, "asin": 58, "aco": 58, "atan": 58, "acot": 58, "asec": 58, "acsc": 58, "atan2": 58, "hyperbol": 58, "hyperbolicfunct": 58, "sinh": 58, "cosh": 58, "tanh": 58, "coth": 58, "sech": 58, "csch": 58, "asinh": 58, "acosh": 58, "atanh": 58, "acoth": 58, "asech": 58, "acsch": 58, "ceil": 58, "floor": 58, "roundfunct": 58, "frac": 58, "exponenti": [58, 60, 215, 275], "exp": 58, "lambertw": 58, "log": 58, "exp_polar": 58, "piecewis": 58, "exprcondpair": 58, "identityfunct": 58, "min": 58, "max": 58, "root": [58, 195, 211], "cbrt": 58, "real_root": 58, "diracdelta": 60, "heavisid": 60, "gamma": [60, 103], "beta": 60, "fresnel": 60, "logarithm": [60, 275], "bessel": 60, "airi": 60, "b": 60, "spline": 60, "riemann": 60, "zeta": 60, "ellipt": 60, "mathieu": 60, "jacobi": 60, "gegenbau": 60, "chebyshev": 60, "legendr": 60, "hermit": 60, "laguerr": 60, "spheric": 60, "curv": 61, "ellips": 62, "entiti": [63, 64, 185], "avail": 64, "usag": [64, 115, 133, 189, 249], "median": 64, "pappu": 64, "hexagon": 64, "theorem": [64, 77, 253], "futur": [64, 106, 115, 174], "work": [64, 198], "truth": [64, 82], "beyond": 64, "visual": [64, 132], "line": 65, "plane": [66, 77], "polygon": [68, 79], "about": [70, 218, 248, 276], "holonom": [70, 71, 72, 74, 75, 120], "convert": [71, 74, 189, 215, 264], "represent": [71, 75, 170, 183, 189], "meijer": [71, 74, 77, 209], "g": [71, 74, 77, 209], "intern": [73, 77, 79, 189, 192, 194, 212, 215], "multipl": [74, 183, 194], "seri": [74, 185, 196, 201, 202, 203, 206, 265], "expans": [74, 206, 209, 211, 265], "linear": [74, 88, 106, 111, 129, 130, 170, 198, 212, 215], "holonomicfunct": 75, "differentialoper": 75, "differentialoperatoralgebra": 75, "current": 76, "polar": [77, 137], "branch": 77, "argand": 77, "tabl": [77, 82, 209], "lookup": 77, "mellin": 77, "converg": 77, "laplac": 77, "thi": [77, 218], "valid": 77, "exist": 77, "formula": [77, 209], "todo": 79, "bug": 79, "over": [79, 198, 207], "polytop": 79, "For": 79, "2d": 79, "polyhedra": 79, "session": 80, "lie": [81, 215], "equival": [82, 132, 212], "manipul": [82, 88, 108, 191, 192, 195, 196, 218, 270], "infer": 82, "matrixcommon": 83, "matrixkind": 83, "dens": [84, 189, 190, 192], "immutablematrix": [84, 86], "block": 85, "matrixdetermin": 88, "matrixreduct": 88, "matrixsubspac": 88, "matrixeigen": 88, "matrixcalculu": 88, "matrixbas": 88, "except": [88, 94, 192, 235], "numpi": 88, "spars": [90, 91, 189, 190, 192], "immutablesparsematrix": 90, "ntheori": 92, "ecm": 92, "q": 92, "ufuncifi": 93, "aesara": [93, 199], "so": 93, "mathrm": [94, 274], "runtim": 94, "beam": [95, 96, 97], "bend": 96, "problem": [96, 194, 249], "continuum": 97, "truss": [97, 98], "control": [99, 100, 101, 102, 185], "pole": 100, "bode": 100, "impuls": 100, "respons": [100, 199], "step": [100, 218], "ramp": 100, "modul": [101, 135, 174, 181, 186, 187, 188, 189, 192, 194, 195, 212, 215, 216, 218, 231], "lti": 102, "high": 103, "energi": [103, 130], "hydrogen": 104, "wavefunct": 104, "potenti": [106, 129, 130, 174, 180, 250], "issu": [106, 115, 129, 174, 271], "advanc": [106, 174, 198, 270, 271], "featur": [106, 174, 266], "choic": 106, "coordin": [106, 119, 129, 185, 247, 248, 250, 252], "acceler": [106, 174, 182, 206], "interfac": [106, 174, 185, 219], "output": [106, 218], "bodi": [107, 130, 253], "msub": 108, "find_dynamicsymbol": 108, "joint": [109, 126, 219], "framework": [109, 126], "pinjoint": 109, "prismaticjoint": 109, "jointsmethod": [109, 126], "kane": [110, 119, 122, 123, 127, 129], "lagrang": [110, 119, 124, 128, 129], "kanemethod": 110, "lagrangesmethod": 110, "mass": [112, 130, 253], "inertia": [112, 130, 174], "particl": [112, 130, 156], "rigidbodi": 112, "inertia_of_point_mass": 112, "linear_momentum": 112, "angular_momentum": 112, "kinetic_energi": 112, "potential_energi": 112, "lagrangian": [112, 130], "mechanics_print": 113, "mprint": 113, "mpprint": 113, "mlatex": 113, "symbolicsystem": [114, 133], "autolev": [115, 132], "dynam": 115, "onlin": 115, "fix": 115, "switch": 115, "bicycl": 117, "four": 118, "bar": 118, "linkag": 118, "nonminim": 119, "pendulum": 119, "multi": 120, "degre": 120, "freedom": 120, "roll": [121, 122, 123, 124], "disc": [121, 122, 123, 124], "constraint": 123, "forc": 123, "classic": [125, 192], "structur": [127, 128, 170, 212], "background": 129, "directli": [129, 248], "new_method": 129, "kwarg": 129, "a_and_b": 129, "slow": 129, "ha": 129, "zoo": 129, "oo": 129, "further": [129, 267], "rigid": 130, "dyadic": [130, 174, 175, 244, 247, 248], "momentum": 130, "angular": [130, 182], "momenta": 130, "kinet": 130, "user": [132, 212, 215, 216], "rough": 132, "link": 132, "gaussian": [134, 189, 190, 198], "optic": [134, 135], "medium": 136, "wave": 139, "pauli": 140, "quantum": [141, 152, 166], "oscil": [141, 166], "d": [141, 166], "anticommut": 142, "cartesian": 143, "state": [143, 152, 155, 163], "clebsch": 144, "gordan": 144, "coeffici": [144, 192], "circuit": 145, "constant": [147, 170], "dagger": 148, "gate": 149, "grover": 150, "hilbert": 151, "space": [151, 170, 209], "inner": 153, "helper": [155, 199], "box": 156, "qappli": 157, "qft": 158, "qubit": 159, "shor": 161, "spin": 162, "second": 165, "quantiz": 165, "dimension": 168, "analysi": 168, "philosophi": 170, "behind": 170, "literatur": [170, 193, 198], "prefix": 171, "convers": 172, "referencefram": [174, 175, 183], "dynamicsymbol": [174, 177], "essenti": [175, 177, 244, 246], "coordinatesym": 175, "field": [176, 180, 189, 192, 194, 198, 250, 252], "curl": [176, 180, 246, 250], "diverg": [176, 180, 246, 250, 253], "gradient": [176, 180, 246, 250], "scalar_potenti": [176, 246], "scalar_potential_differ": [176, 246], "is_conserv": [176, 246], "is_solenoid": [176, 246], "outer": 177, "time_deriv": 177, "kinemat": [178, 182], "kinematic_equ": 178, "init_vprint": 179, "vprint": 179, "vpprint": 179, "vlatex": 179, "scalar": [180, 250, 252], "conserv": [180, 250], "solenoid": [180, 250], "veloc": 182, "altern": 183, "basi": [183, 192, 194], "frame": 183, "wigner": 184, "credit": 184, "copyright": 184, "author": 184, "plotgrid": 185, "pyglet": 185, "mode": 185, "specifi": 185, "interv": [185, 207], "color": 185, "geometr": 185, "ascii": [185, 274], "art": 185, "agca": 186, "ring": [186, 189, 190], "ideal": 186, "homomorph": [186, 194], "syzygi": 186, "extens": [186, 198], "concept": 187, "divis": [187, 212], "euclidean": 187, "gcd": [187, 192, 198], "lcm": 187, "factor": [187, 192, 198, 215, 275], "groebner": [187, 192], "introduc": [188, 189], "domainmatrix": 188, "ddm": 188, "sdm": 188, "dup": 189, "dmp": 189, "polyr": 189, "polynomialr": 189, "choos": 189, "unifi": 189, "gf": 190, "p": [190, 194], "zz": 190, "qq": 190, "mpq": 190, "zz_i": 190, "qq_i": 190, "rr": 190, "cc": 190, "x": 190, "ex": 190, "quotient": 190, "level": 192, "multivari": [192, 198], "univari": [192, 198, 212], "remaind": 192, "subresult": 192, "configur": 192, "modular": 192, "undocu": 192, "main": 194, "decomposit": [194, 195, 198], "adic": 194, "valuat": 194, "find": [194, 195], "subfield": 194, "As": 194, "arithmet": 194, "extra": 195, "monomi": 195, "encod": 195, "formal": [195, 201], "partial": [195, 198, 217, 218], "fraction": [195, 198, 211, 275], "dispers": 195, "rs_seri": 196, "solve_lin_si": 197, "eqs_to_matrix": 197, "sympy_eqs_to_r": 197, "_solve_lin_si": 197, "_solve_lin_sys_compon": 197, "wester": 198, "articl": 198, "simpl": 198, "support": 198, "back": 198, "cyclotom": 198, "reduc": 198, "gr\u00f6bner": 198, "mistak": 199, "prettyprint": 199, "rcodeprint": 199, "mapl": 199, "javascript": 199, "julia": 199, "octav": 199, "matlab": 199, "rust": 199, "gtk": 199, "lambdaprint": 199, "latexprint": 199, "mathmlprint": 199, "pythoncodeprint": 199, "pythonprint": 199, "srepr": [199, 274], "strprinter": 199, "preview": 199, "codeprint": 199, "preced": 199, "dotprint": 199, "subexpress": [200, 211], "detect": 200, "compound": [205, 207, 219], "recurs": [205, 270], "gruntz": 206, "more": [206, 248, 269], "intuit": 206, "residu": 206, "finiteset": 207, "union": 207, "complement": 207, "symmetricdiffer": 207, "disjointunion": 207, "emptyset": 207, "universalset": 207, "natur": 207, "naturals0": 207, "imageset": 207, "rang": 207, "complexregion": 207, "powerset": 207, "setkind": 207, "hongguang": 208, "fu": 208, "rule": [208, 249], "notat": 209, "increment": 209, "decrement": 209, "indic": 209, "reduct": 209, "around": 209, "loos": 209, "end": 209, "confluenc": 209, "separatevar": 211, "nthroot": 211, "kroneckersimp": 211, "besselsimp": 211, "hypersimp": 211, "hypersimilar": 211, "nsimplifi": 211, "posifi": 211, "logcombin": [211, 275], "radsimp": 211, "rad_ration": 211, "collect_sqrt": 211, "collect_const": 211, "ratsimp": 211, "ratsimpmodprim": 211, "trigsimp": [211, 275], "powsimp": [211, 275], "powdenest": [211, 275], "combsimp": [211, 275], "denest": 211, "sqrtdenest": 211, "elimin": 211, "cse": 211, "opt_cs": 211, "tree_cs": 211, "hyperexpand": [211, 275], "epath": 211, "diophantin": [212, 217, 218], "classify_diop": 212, "diop_solv": 212, "diop_linear": 212, "base_solution_linear": 212, "diop_quadrat": 212, "diop_dn": 212, "cornacchia": 212, "diop_bf_dn": 212, "transformation_to_dn": 212, "transformation_to_norm": 212, "find_dn": 212, "diop_ternary_quadrat": 212, "square_factor": 212, "descent": 212, "diop_general_pythagorean": 212, "diop_general_sum_of_squar": 212, "diop_general_sum_of_even_pow": 212, "power_represent": 212, "sum_of_three_squar": 212, "sum_of_four_squar": 212, "sum_of_pow": 212, "sum_of_squar": 212, "merge_solut": 212, "pqa": 212, "parametrize_ternary_quadrat": 212, "diop_ternary_quadratic_norm": 212, "ldescent": 212, "gaussian_reduc": 212, "holzer": 212, "prime_as_sum_of_two_squar": 212, "sqf_normal": 212, "reconstruct": 212, "diophantinesolutionset": 212, "diophantineequationtyp": 212, "binaryquadrat": 212, "inhomogeneousternaryquadrat": 212, "homogeneousternaryquadraticnorm": 212, "homogeneousternaryquadrat": 212, "inhomogeneousgeneralquadrat": 212, "homogeneousgeneralquadrat": 212, "generalsumofsquar": 212, "generalpythagorean": 212, "cubicthu": 212, "generalsumofevenpow": 212, "inequ": [214, 217, 218], "od": [215, 217, 218], "dsolv": 215, "dsolve_system": 215, "classify_od": 215, "checkodesol": 215, "homogeneous_ord": 215, "infinitesim": 215, "checkinfsol": 215, "constantsimp": 215, "hint": [215, 216], "allhint": 215, "odesimp": 215, "constant_renumb": 215, "sol_simpl": 215, "1st_exact": 215, "1st_homogeneous_coeff_best": 215, "1st_homogeneous_coeff_subs_dep_div_indep": 215, "1st_homogeneous_coeff_subs_indep_div_dep": 215, "1st_linear": 215, "1st_rational_riccati": 215, "2nd_linear_airi": 215, "2nd_linear_bessel": 215, "liouvil": 215, "riccati_special_minus2": 215, "nth_linear_constant_coeff_homogen": 215, "nth_linear_constant_coeff_undetermined_coeffici": 215, "nth_linear_constant_coeff_variation_of_paramet": 215, "nth_linear_euler_eq_homogen": 215, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 215, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 215, "nth_algebra": 215, "nth_order_reduc": 215, "separ": 215, "almost_linear": 215, "linear_coeffici": 215, "separable_reduc": 215, "lie_group": 215, "2nd_hypergeometr": 215, "1st_power_seri": 215, "2nd_power_series_ordinari": 215, "2nd_power_series_regular": 215, "heurist": 215, "abaco1_simpl": 215, "abaco1_product": 215, "bivari": 215, "chi": 215, "abaco2_similar": 215, "function_sum": 215, "abaco2_unique_unknown": 215, "abaco2_unique_gener": 215, "riccati": 215, "riccati_norm": 215, "riccati_inverse_norm": 215, "riccati_reduc": 215, "construct_c": 215, "construct_d": 215, "rational_laurent_seri": 215, "compute_m_ybar": 215, "solve_aux_eq": 215, "remove_redundant_sol": 215, "get_gen_sol_from_part_sol": 215, "solve_riccati": 215, "canon": 215, "linodesolv": 215, "inform": [215, 216], "jordan": 215, "nonlinear": 215, "pde": [216, 217, 218], "pde_separ": 216, "pde_separate_add": 216, "pde_separate_mul": 216, "pdsolv": 216, "classify_pd": 216, "checkpdesol": 216, "pde_1st_linear_constant_coeff_homogen": 216, "pde_1st_linear_constant_coeff": 216, "pde_1st_linear_variable_coeff": 216, "ordinari": [217, 218], "deutil": 217, "recurr": 217, "de": [217, 218], "wrong": 218, "why": [218, 269], "we": 218, "emploi": 218, "return": 218, "search": 218, "deal": 218, "where": 218, "known": 218, "plan": 218, "linear_eq_to_matrix": 218, "linsolv": 218, "nonlinsolv": 218, "transolv": 218, "continu": [219, 275], "stochast": 219, "process": 219, "dim": [220, 221], "arrai": [220, 221], "contract": 220, "explicit": 221, "pytest": 228, "randomis": 229, "detail": [231, 232, 247], "routin": 232, "decor": 233, "enum": 234, "variat": 237, "memoiz": 239, "pkgdata": 241, "inspect": 242, "time": 243, "coordsys3d": [244, 248], "del": [244, 249, 250], "parametricregion": 244, "implicitregion": 244, "parametricintegr": 244, "orient": [245, 248], "axisorient": 245, "bodyorient": 245, "spaceorient": 245, "quaternionorient": 245, "matrix_to_vector": 246, "vector_integr": 246, "locat": 248, "orient_new": 248, "AND": 248, "quadrilater": 249, "third": 249, "curvilinear": 250, "applic": 253, "calcul": 253, "perimet": 253, "surfac": 253, "area": 253, "volum": 253, "flux": 253, "verifi": 253, "stoke": 253, "introductori": [263, 268], "quick": [264, 265, 267, 270, 271], "two": 267, "final": 267, "read": 267, "interest": 269, "understand": 270, "through": 270, "invari": 270, "prevent": 270, "shape": 271, "access": 271, "delet": 271, "insert": 271, "determin": 271, "rref": 271, "nullspac": 271, "columnspac": 271, "eigenvalu": 271, "eigenvector": 271, "next": 272, "preliminari": 273, "exercis": 273, "str": 274, "mathml": 274, "cancel": 275, "apart": 275, "gammasimp": 275}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})